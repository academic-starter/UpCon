<?xml version="1.0" ?>
<matches>
  <match src="): ) [98387,98388]" dest="): ) [37543,37544]"/>
  <match src="function_definition [36586,36899]" dest="function_definition [54980,55293]"/>
  <match src="parameter [36663,36667]" dest="parameter [55057,55061]"/>
  <match src="(: ( [36722,36723]" dest="(: ( [55116,55117]"/>
  <match src="member_expression [96988,97025]" dest="member_expression [36144,36181]"/>
  <match src="(: ( [36022,36023]" dest="(: ( [54416,54417]"/>
  <match src="variable_declaration [91110,91122]" dest="variable_declaration [77420,77432]"/>
  <match src="parameter [804,811]" dest="parameter [1368,1375]"/>
  <match src="call_expression [105534,105579]" dest="call_expression [44690,44735]"/>
  <match src="function_body [83901,84787]" dest="function_body [80867,81752]"/>
  <match src="call_argument [103353,103359]" dest="call_argument [42509,42515]"/>
  <match src="state_variable_declaration [43409,43462]" dest="state_variable_declaration [13542,13595]"/>
  <match src=".: . [102327,102328]" dest=".: . [41483,41484]"/>
  <match src="type_name [97927,97934]" dest="type_name [37083,37090]"/>
  <match src="identifier: Burn [55226,55230]" dest="identifier: Burn [23075,23079]"/>
  <match src="modifier_invocation [82343,82352]" dest="modifier_invocation [72546,72575]"/>
  <match src="call_argument [91252,91258]" dest="call_argument [77562,77568]"/>
  <match src=",: , [102036,102037]" dest=",: , [41192,41193]"/>
  <match src="primitive_type [96519,96526]" dest="primitive_type [35675,35682]"/>
  <match src="type_name [30054,30061]" dest="type_name [48448,48455]"/>
  <match src="{: { [106531,106532]" dest="{: { [69873,69874]"/>
  <match src="member_expression [96191,96224]" dest="member_expression [35347,35380]"/>
  <match src="++: ++ [7680,7682]" dest="++: ++ [8244,8246]"/>
  <match src="block_statement [7547,7586]" dest="block_statement [8111,8150]"/>
  <match src="identifier: block [59985,59990]" dest="identifier: block [84255,84260]"/>
  <match src=",: , [11993,11994]" dest=",: , [24982,24983]"/>
  <match src="uint256: uint256 [42410,42417]" dest="uint256: uint256 [12543,12550]"/>
  <match src="type_name [3276,3283]" dest="type_name [3840,3847]"/>
  <match src="pure: pure [44764,44768]" dest="pure: pure [14897,14901]"/>
  <match src="view: view [96505,96509]" dest="view: view [35661,35665]"/>
  <match src=".: . [95251,95252]" dest=".: . [34407,34408]"/>
  <match src="visibility [97079,97085]" dest="visibility [36235,36241]"/>
  <match src="state_mutability [5977,5981]" dest="state_mutability [6541,6545]"/>
  <match src="parameter [13063,13078]" dest="parameter [26052,26067]"/>
  <match src=",: , [27841,27842]" dest=",: , [46235,46236]"/>
  <match src="): ) [28209,28210]" dest="): ) [46603,46604]"/>
  <match src="array_access [104876,104904]" dest="array_access [44032,44060]"/>
  <match src="): ) [45833,45834]" dest="): ) [15966,15967]"/>
  <match src="primitive_type [106914,106921]" dest="primitive_type [70256,70263]"/>
  <match src="function_definition [68082,68690]" dest="function_definition [68740,69154]"/>
  <match src="primitive_type [55433,55437]" dest="primitive_type [23282,23286]"/>
  <match src="{: { [23104,23105]" dest="{: { [56675,56676]"/>
  <match src="function_body [47570,47650]" dest="function_body [17703,17783]"/>
  <match src="identifier: burn [51784,51788]" dest="identifier: burn [27720,27724]"/>
  <match src="primitive_type [56056,56060]" dest="primitive_type [23905,23909]"/>
  <match src="): ) [47642,47643]" dest="): ) [17775,17776]"/>
  <match src="call_argument [52924,52930]" dest="call_argument [56201,56207]"/>
  <match src="event: event [25687,25692]" dest="event: event [61109,61114]"/>
  <match src="call_argument [101306,101312]" dest="call_argument [40462,40468]"/>
  <match src="primitive_type [70155,70162]" dest="primitive_type [57105,57112]"/>
  <match src="number_literal: 11e17 [41570,41575]" dest="number_literal: 11e17 [11703,11708]"/>
  <match src="(: ( [48128,48129]" dest="(: ( [18261,18262]"/>
  <match src=".: . [101588,101589]" dest=".: . [40744,40745]"/>
  <match src="identifier: FILE [69347,69351]" dest="identifier: FILE [82043,82047]"/>
  <match src="&lt;=: &lt;= [1319,1321]" dest="&lt;=: &lt;= [1883,1885]"/>
  <match src="member_expression [47885,47897]" dest="member_expression [18018,18030]"/>
  <match src="return_type_definition [47713,47730]" dest="return_type_definition [17846,17863]"/>
  <match src="): ) [84536,84537]" dest="): ) [73928,73929]"/>
  <match src="variable_declaration [7657,7666]" dest="variable_declaration [8221,8230]"/>
  <match src="call_argument [79548,79561]" dest="call_argument [59947,59960]"/>
  <match src="type_name [98206,98213]" dest="type_name [37362,37369]"/>
  <match src="binary_expression [9429,9451]" dest="binary_expression [9993,10015]"/>
  <match src="visibility [99806,99814]" dest="visibility [38962,38970]"/>
  <match src=",: , [99449,99450]" dest=",: , [38605,38606]"/>
  <match src="primitive_type [50085,50092]" dest="primitive_type [56438,56445]"/>
  <match src="call_argument [101099,101100]" dest="call_argument [40255,40256]"/>
  <match src=",: , [6366,6367]" dest=",: , [6930,6931]"/>
  <match src="call_argument [85643,85652]" dest="call_argument [79859,79914]"/>
  <match src="identifier: _account [64699,64707]" dest="identifier: candidate [79265,79274]"/>
  <match src="call_argument [100780,100786]" dest="call_argument [39936,39942]"/>
  <match src="): ) [97840,97841]" dest="): ) [36996,36997]"/>
  <match src="primitive_type [65542,65549]" dest="primitive_type [78971,78978]"/>
  <match src="function: function [54446,54454]" dest="function: function [22295,22303]"/>
  <match src="uint256: uint256 [30787,30794]" dest="uint256: uint256 [49181,49188]"/>
  <match src="identifier: spender [103332,103339]" dest="identifier: spender [42488,42495]"/>
  <match src="primitive_type [44547,44554]" dest="primitive_type [14680,14687]"/>
  <match src="{: { [88386,88387]" dest="{: { [29886,29887]"/>
  <match src=",: , [82835,82836]" dest=",: , [73001,73002]"/>
  <match src="parameter [8797,8813]" dest="parameter [9361,9377]"/>
  <match src="function_body [373,482]" dest="function_body [937,1046]"/>
  <match src="primitive_type [91124,91129]" dest="primitive_type [77434,77439]"/>
  <match src="memory: memory [47562,47568]" dest="memory: memory [17695,17701]"/>
  <match src="primitive_type [13449,13456]" dest="primitive_type [26438,26445]"/>
  <match src="primitive_type [45858,45865]" dest="primitive_type [15991,15998]"/>
  <match src="identifier: epoch [103455,103460]" dest="identifier: epoch [42611,42616]"/>
  <match src="identifier: reject [105297,105303]" dest="identifier: reject [44453,44459]"/>
  <match src="identifier: candidate [105324,105333]" dest="identifier: candidate [44480,44489]"/>
  <match src="return_type_definition [97411,97435]" dest="return_type_definition [36567,36591]"/>
  <match src="uint256: uint256 [77755,77762]" dest="uint256: uint256 [59412,59419]"/>
  <match src="identifier: Decimal [47393,47400]" dest="identifier: Decimal [17526,17533]"/>
  <match src="number_literal: 0 [34314,34315]" dest="number_literal: 0 [52708,52709]"/>
  <match src="type_name [67631,67638]" dest="type_name [73887,73894]"/>
  <match src="constant: constant [27592,27600]" dest="constant: constant [45986,45994]"/>
  <match src="parameter [97064,97077]" dest="parameter [36220,36233]"/>
  <match src="identifier: D256 [47855,47859]" dest="identifier: D256 [17988,17992]"/>
  <match src="event_definition [81154,81206]" dest="event_definition [83698,83761]"/>
  <match src="state_mutability [94017,94021]" dest="state_mutability [33173,33177]"/>
  <match src="parameter [96483,96496]" dest="parameter [35639,35652]"/>
  <match src="uint256: uint256 [89035,89042]" dest="uint256: uint256 [30535,30542]"/>
  <match src="visibility [26359,26367]" dest="visibility [58792,58800]"/>
  <match src="identifier: getTreasuryIncentive [46754,46774]" dest="identifier: getTreasuryIncentive [16887,16907]"/>
  <match src="call_argument [31156,31175]" dest="call_argument [49550,49569]"/>
  <match src="uint256: uint256 [759,766]" dest="uint256: uint256 [1323,1330]"/>
  <match src="address: address [65542,65549]" dest="address: address [78971,78978]"/>
  <match src=",: , [101889,101890]" dest=",: , [41045,41046]"/>
  <match src="(: ( [83385,83386]" dest="(: ( [73372,73373]"/>
  <match src="visibility [93904,93910]" dest="visibility [33060,33066]"/>
  <match src="uint256: uint256 [42568,42575]" dest="uint256: uint256 [12701,12708]"/>
  <match src="): ) [79042,79043]" dest="): ) [57547,57548]"/>
  <match src="identifier: statusOf [94993,95001]" dest="identifier: statusOf [34149,34157]"/>
  <match src="function_definition [9572,9685]" dest="function_definition [10136,10249]"/>
  <match src="assignment_expression [100259,100312]" dest="assignment_expression [39415,39468]"/>
  <match src="address: address [106648,106655]" dest="address: address [69990,69997]"/>
  <match src="primitive_type [55852,55858]" dest="primitive_type [23701,23707]"/>
  <match src="(: ( [32249,32250]" dest="(: ( [50643,50644]"/>
  <match src=".: . [7932,7933]" dest=".: . [8496,8497]"/>
  <match src="type_name [81335,81342]" dest="type_name [71637,71644]"/>
  <match src="primitive_type [95314,95321]" dest="primitive_type [34470,34477]"/>
  <match src="call_expression [98125,98146]" dest="call_expression [37281,37302]"/>
  <match src="identifier: accounts [95672,95680]" dest="identifier: accounts [34828,34836]"/>
  <match src="state_mutability [28361,28365]" dest="state_mutability [46755,46759]"/>
  <match src="(: ( [98610,98611]" dest="(: ( [37766,37767]"/>
  <match src="number_literal: 0 [104015,104016]" dest="number_literal: 0 [43171,43172]"/>
  <match src="identifier: Candidate [104485,104494]" dest="identifier: Candidate [43641,43650]"/>
  <match src="return: return [47306,47312]" dest="return: return [17439,17445]"/>
  <match src="assignment_expression [35517,35561]" dest="assignment_expression [53911,53955]"/>
  <match src="primitive_type [95586,95593]" dest="primitive_type [34742,34749]"/>
  <match src="return_type_definition [99683,99697]" dest="return_type_definition [38839,38853]"/>
  <match src="indexed: indexed [90793,90800]" dest="indexed: indexed [77103,77110]"/>
  <match src="identifier: Context [15742,15749]" dest="identifier: Comptroller [60750,60761]"/>
  <match src="parameter [28815,28824]" dest="parameter [47209,47218]"/>
  <match src="state_variable_declaration [44030,44089]" dest="state_variable_declaration [14163,14222]"/>
  <match src=".: . [95094,95095]" dest=".: . [34250,34251]"/>
  <match src="any_pragma_token [32,57]" dest="any_pragma_token [32,57]"/>
  <match src="uint256: uint256 [33980,33987]" dest="uint256: uint256 [52374,52381]"/>
  <match src="memory: memory [1246,1252]" dest="memory: memory [1810,1816]"/>
  <match src="parameter [30715,30727]" dest="parameter [49109,49121]"/>
  <match src="call_expression [83073,83100]" dest="call_expression [73340,73367]"/>
  <match src="primitive_type [86700,86707]" dest="primitive_type [75210,75217]"/>
  <match src="member_expression [45504,45516]" dest="member_expression [15637,15649]"/>
  <match src="&quot;: &quot; [840,841]" dest="&quot;: &quot; [1404,1405]"/>
  <match src="}: } [3527,3528]" dest="}: } [4091,4092]"/>
  <match src="parameter [96962,96969]" dest="parameter [36118,36125]"/>
  <match src="(: ( [99754,99755]" dest="(: ( [38910,38911]"/>
  <match src="{: { [32184,32185]" dest="{: { [50578,50579]"/>
  <match src="identifier: expiration [103752,103762]" dest="identifier: expiration [42908,42918]"/>
  <match src="expression_statement [52909,52932]" dest="expression_statement [56179,56209]"/>
  <match src="identifier: SafeMath [80759,80767]" dest="identifier: SafeMath [71392,71400]"/>
  <match src="visibility [44108,44115]" dest="visibility [14241,14248]"/>
  <match src="): ) [55481,55482]" dest="): ) [23330,23331]"/>
  <match src="identifier: sender [83029,83035]" dest="identifier: sender [72599,72605]"/>
  <match src="parameter [70155,70162]" dest="parameter [57105,57112]"/>
  <match src="): ) [95116,95117]" dest="): ) [34272,34273]"/>
  <match src="primitive_type [35894,35899]" dest="primitive_type [54288,54293]"/>
  <match src="pure: pure [6712,6716]" dest="pure: pure [7276,7280]"/>
  <match src="identifier: onlyFrozen [81785,81795]" dest="identifier: onlyFrozenOrFluid [73159,73176]"/>
  <match src="binary_expression [21977,21998]" dest="binary_expression [65083,65104]"/>
  <match src="state_mutability [96786,96790]" dest="state_mutability [35942,35946]"/>
  <match src="parameter [54768,54780]" dest="parameter [22617,22629]"/>
  <match src="array_access [101582,101606]" dest="array_access [40738,40762]"/>
  <match src="parameter [99530,99547]" dest="parameter [38686,38703]"/>
  <match src="identifier: D256 [8797,8801]" dest="identifier: D256 [9361,9365]"/>
  <match src="return_statement [47306,47331]" dest="return_statement [17439,17464]"/>
  <match src="string_literal [85176,85206]" dest="string_literal [59347,59370]"/>
  <match src="assignment_expression [102866,102923]" dest="assignment_expression [42022,42079]"/>
  <match src="identifier: Global [89166,89172]" dest="identifier: Global [30666,30672]"/>
  <match src="modifier: modifier [106886,106894]" dest="modifier: modifier [70228,70236]"/>
  <match src="identifier: ETHIC_ADDRESS [44369,44382]" dest="identifier: ETHIC_ADDRESS [14502,14515]"/>
  <match src="identifier: provider [93649,93657]" dest="identifier: provider [32805,32813]"/>
  <match src="identifier: value [8540,8545]" dest="identifier: value [9104,9109]"/>
  <match src="identifier: candidate [105200,105209]" dest="identifier: candidate [44356,44365]"/>
  <match src="variable_declaration_statement [1981,1999]" dest="variable_declaration_statement [2545,2563]"/>
  <match src="(: ( [51834,51835]" dest="(: ( [27770,27771]"/>
  <match src="state_mutability [93048,93052]" dest="state_mutability [32204,32208]"/>
  <match src="identifier: candidate [97743,97752]" dest="identifier: candidate [36899,36908]"/>
  <match src="member_expression [8739,8749]" dest="member_expression [9303,9313]"/>
  <match src="identifier: sub [100164,100167]" dest="identifier: sub [39320,39323]"/>
  <match src="): ) [97706,97707]" dest="): ) [36862,36863]"/>
  <match src="event_paramater [54122,54132]" dest="event_paramater [21971,21981]"/>
  <match src="return: return [97986,97992]" dest="return: return [37142,37148]"/>
  <match src="identifier: reserve0 [79802,79810]" dest="identifier: burnAmount [64672,64682]"/>
  <match src="constant: constant [43245,43253]" dest="constant: constant [13378,13386]"/>
  <match src="parameter [75904,75918]" dest="parameter [56650,56664]"/>
  <match src="function_body [4039,4100]" dest="function_body [4603,4664]"/>
  <match src="identifier: RPAREN [28709,28715]" dest="identifier: RPAREN [47103,47109]"/>
  <match src="primitive_type [104800,104807]" dest="primitive_type [43956,43963]"/>
  <match src="uint256: uint256 [68757,68764]" dest="uint256: uint256 [72708,72715]"/>
  <match src="primitive_type [36017,36022]" dest="primitive_type [54411,54416]"/>
  <match src="identifier: bonded [88515,88521]" dest="identifier: bonded [30015,30021]"/>
  <match src="address: address [56396,56403]" dest="address: address [24245,24252]"/>
  <match src="uint256: uint256 [46575,46582]" dest="uint256: uint256 [16708,16715]"/>
  <match src="identifier: msg [82074,82077]" dest="identifier: msg [73751,73754]"/>
  <match src="member_expression [99961,99982]" dest="member_expression [39117,39138]"/>
  <match src="call_argument [104110,104136]" dest="call_argument [43266,43292]"/>
  <match src="call_argument [20654,20660]" dest="call_argument [59546,59552]"/>
  <match src="identifier: epoch [97250,97255]" dest="identifier: epoch [36406,36411]"/>
  <match src="member_expression [83766,83776]" dest="member_expression [73628,73638]"/>
  <match src="(: ( [58624,58625]" dest="(: ( [74104,74105]"/>
  <match src="=: = [103278,103279]" dest="=: = [42434,42435]"/>
  <match src="(: ( [94723,94724]" dest="(: ( [33879,33880]"/>
  <match src="identifier: totalDebt [94294,94303]" dest="identifier: totalDebt [33450,33459]"/>
  <match src="): ) [46897,46898]" dest="): ) [17030,17031]"/>
  <match src="returns: returns [94819,94826]" dest="returns: returns [33975,33982]"/>
  <match src="}: } [6616,6617]" dest="}: } [7180,7181]"/>
  <match src="type_name [99824,99828]" dest="type_name [38980,38984]"/>
  <match src="function_definition [56345,56370]" dest="function_definition [24194,24219]"/>
  <match src="parameter [12329,12342]" dest="parameter [25318,25331]"/>
  <match src="identifier: INITIAL_COUPON_REDEMPTION_PENALTY [47608,47641]" dest="identifier: INITIAL_COUPON_REDEMPTION_PENALTY [17741,17774]"/>
  <match src="state_variable_declaration [44100,44148]" dest="state_variable_declaration [14233,14281]"/>
  <match src="uint256: uint256 [46453,46460]" dest="uint256: uint256 [16586,16593]"/>
  <match src="member_expression [98269,98303]" dest="member_expression [37425,37459]"/>
  <match src="binary_expression [7539,7545]" dest="binary_expression [8103,8109]"/>
  <match src="returns: returns [56047,56054]" dest="returns: returns [23896,23903]"/>
  <match src="identifier: that [85464,85468]" dest="identifier: that [79355,79359]"/>
  <match src="): ) [101972,101973]" dest="): ) [41128,41129]"/>
  <match src="call_expression [69289,69384]" dest="call_expression [73535,73605]"/>
  <match src="{: { [6176,6177]" dest="{: { [6740,6741]"/>
  <match src="memory: memory [92777,92783]" dest="memory: memory [31933,31939]"/>
  <match src="/: / [43285,43286]" dest="/: / [13418,13419]"/>
  <match src="identifier: redeemable [100765,100775]" dest="identifier: redeemable [39921,39931]"/>
  <match src="): ) [55568,55569]" dest="): ) [23417,23418]"/>
  <match src="call_argument [19803,19842]" dest="call_argument [65425,65472]"/>
  <match src="): ) [54828,54829]" dest="): ) [22677,22678]"/>
  <match src="returns: returns [69204,69211]" dest="returns: returns [62605,62612]"/>
  <match src="identifier: getInitialStakeMultiple [45184,45207]" dest="identifier: getInitialStakeMultiple [15317,15340]"/>
  <match src="function: function [12310,12318]" dest="function: function [25299,25307]"/>
  <match src="{: { [7165,7166]" dest="{: { [7729,7730]"/>
  <match src="return: return [93196,93202]" dest="return: return [32352,32358]"/>
  <match src="identifier: epoch [96633,96638]" dest="identifier: epoch [35789,35794]"/>
  <match src="identifier: c [474,475]" dest="identifier: c [1038,1039]"/>
  <match src="): ) [6803,6804]" dest="): ) [7367,7368]"/>
  <match src="identifier: getChainId [48323,48333]" dest="identifier: getChainId [18456,18466]"/>
  <match src="string [83681,83717]" dest="string [81504,81522]"/>
  <match src="identifier: abi [30262,30265]" dest="identifier: abi [48656,48659]"/>
  <match src="type_name [2569,2576]" dest="type_name [3133,3140]"/>
  <match src="): ) [44753,44754]" dest="): ) [14886,14887]"/>
  <match src="variable_declaration_statement [33433,33456]" dest="variable_declaration_statement [51827,51850]"/>
  <match src="[: [ [104893,104894]" dest="[: [ [44049,44050]"/>
  <match src="+: + [34552,34553]" dest="+: + [52946,52947]"/>
  <match src="): ) [85215,85216]" dest="): ) [59379,59380]"/>
  <match src="[: [ [96558,96559]" dest="[: [ [35714,35715]"/>
  <match src="address: address [105410,105417]" dest="address: address [44566,44573]"/>
  <match src="): ) [32419,32420]" dest="): ) [50813,50814]"/>
  <match src="identifier: D256 [6340,6344]" dest="identifier: D256 [6904,6908]"/>
  <match src="event_definition [54139,54208]" dest="event_definition [21988,22057]"/>
  <match src="expression_statement [34266,34276]" dest="expression_statement [52660,52670]"/>
  <match src=",: , [1226,1227]" dest=",: , [1790,1791]"/>
  <match src="type_name [51852,51859]" dest="type_name [27788,27795]"/>
  <match src="call_argument [23124,23131]" dest="call_argument [56702,56709]"/>
  <match src="parameter [27832,27841]" dest="parameter [46226,46235]"/>
  <match src="(: ( [73330,73331]" dest="(: ( [82577,82578]"/>
  <match src="}: } [48699,48700]" dest="}: } [18832,18833]"/>
  <match src="state_mutability [44764,44768]" dest="state_mutability [14897,14901]"/>
  <match src="(: ( [105719,105720]" dest="(: ( [44875,44876]"/>
  <match src="type_name [91669,91676]" dest="type_name [77979,77986]"/>
  <match src="string: string [8216,8222]" dest="string: string [8780,8786]"/>
  <match src="parameter [28297,28311]" dest="parameter [46691,46705]"/>
  <match src="identifier: totalBonded [82656,82667]" dest="identifier: totalBonded [72849,72860]"/>
  <match src="call_expression [84034,84150]" dest="call_expression [80877,80982]"/>
  <match src=",: , [105225,105226]" dest=",: , [44381,44382]"/>
  <match src=",: , [29743,29744]" dest=",: , [48137,48138]"/>
  <match src="type_name [36609,36616]" dest="type_name [55003,55010]"/>
  <match src="function_body [105056,105158]" dest="function_body [44212,44314]"/>
  <match src="returns: returns [9869,9876]" dest="returns: returns [10433,10440]"/>
  <match src="{: { [34046,34047]" dest="{: { [52440,52441]"/>
  <match src="call_expression [8714,8768]" dest="call_expression [9278,9332]"/>
  <match src="parameter [93311,93318]" dest="parameter [32467,32474]"/>
  <match src="member_expression [105306,105323]" dest="member_expression [44462,44479]"/>
  <match src="identifier: candidate [104933,104942]" dest="identifier: candidate [44089,44098]"/>
  <match src=",: , [31886,31887]" dest=",: , [50280,50281]"/>
  <match src="array_access [102130,102154]" dest="array_access [41286,41310]"/>
  <match src="library: library [27320,27327]" dest="library: library [45714,45721]"/>
  <match src="parameter [17620,17634]" dest="parameter [59900,59914]"/>
  <match src="block_statement [33415,33688]" dest="block_statement [51809,52082]"/>
  <match src="identifier: balanceCheck [83729,83741]" dest="identifier: balanceCheck [58652,58664]"/>
  <match src="visibility [21087,21095]" dest="visibility [56884,56892]"/>
  <match src="(: ( [95114,95115]" dest="(: ( [34270,34271]"/>
  <match src="}: } [94977,94978]" dest="}: } [34133,34134]"/>
  <match src="&quot;: &quot; [24991,24992]" dest="&quot;: &quot; [79603,79604]"/>
  <match src="(: ( [8340,8341]" dest="(: ( [8904,8905]"/>
  <match src="view: view [74003,74007]" dest="view: view [62802,62806]"/>
  <match src="uint256: uint256 [18302,18309]" dest="uint256: uint256 [20035,20042]"/>
  <match src="internal: internal [46105,46113]" dest="internal: internal [16238,16246]"/>
  <match src="identifier: Epoch [89160,89165]" dest="identifier: Epoch [30660,30665]"/>
  <match src="user_defined_type [8395,8399]" dest="user_defined_type [8959,8963]"/>
  <match src="contract_body [92498,98634]" dest="contract_body [31654,37790]"/>
  <match src="identifier: vote [104571,104575]" dest="identifier: vote [43727,43731]"/>
  <match src="&quot;: &quot; [22035,22036]" dest="&quot;: &quot; [65149,65150]"/>
  <match src="state_variable_declaration [41593,41651]" dest="state_variable_declaration [11726,11784]"/>
  <match src="function: function [93133,93141]" dest="function: function [32289,32297]"/>
  <match src="primitive_type [101496,101503]" dest="primitive_type [40652,40659]"/>
  <match src="number_literal: 2 [9032,9033]" dest="number_literal: 2 [9596,9597]"/>
  <match src="): ) [84457,84458]" dest="): ) [81064,81065]"/>
  <match src="emit: emit [20101,20105]" dest="emit: emit [65941,65945]"/>
  <match src="array_access [102534,102573]" dest="array_access [41690,41729]"/>
  <match src="number_literal: 10 [5674,5676]" dest="number_literal: 10 [6238,6240]"/>
  <match src="call_argument [9159,9160]" dest="call_argument [9723,9724]"/>
  <match src="function_body [35732,36580]" dest="function_body [54126,54974]"/>
  <match src=",: , [29268,29269]" dest=",: , [47662,47663]"/>
  <match src="identifier: IMPLEMENTATION_SLOT [90538,90557]" dest="identifier: IMPLEMENTATION_SLOT [76848,76867]"/>
  <match src="return_type_definition [355,372]" dest="return_type_definition [919,936]"/>
  <match src="identifier: D256 [8680,8684]" dest="identifier: D256 [9244,9248]"/>
  <match src="binary_expression [1993,1998]" dest="binary_expression [2557,2562]"/>
  <match src="call_argument [76076,76082]" dest="call_argument [56916,56922]"/>
  <match src="private: private [43848,43855]" dest="private: private [13981,13988]"/>
  <match src="bytes32: bytes32 [65496,65503]" dest="bytes32: bytes32 [60808,60815]"/>
  <match src="type_name [95002,95009]" dest="type_name [34158,34165]"/>
  <match src="(: ( [28023,28024]" dest="(: ( [46417,46418]"/>
  <match src="primitive_type [98383,98387]" dest="primitive_type [37539,37543]"/>
  <match src="]: ] [102168,102169]" dest="]: ] [41324,41325]"/>
  <match src="address: address [13063,13070]" dest="address: address [26052,26059]"/>
  <match src="constant: constant [44563,44571]" dest="constant: constant [14696,14704]"/>
  <match src="event_definition [81094,81149]" dest="event_definition [71526,71581]"/>
  <match src="function_definition [46865,46977]" dest="function_definition [16998,17110]"/>
  <match src="identifier: spender [13071,13078]" dest="identifier: spender [26060,26067]"/>
  <match src="parameter [54981,54994]" dest="parameter [22830,22843]"/>
  <match src="(: ( [33851,33852]" dest="(: ( [52245,52246]"/>
  <match src="expression_statement [81556,81611]" dest="expression_statement [72079,72134]"/>
  <match src="identifier: value [82718,82723]" dest="identifier: value [74032,74037]"/>
  <match src="): ) [84554,84555]" dest="): ) [73946,73947]"/>
  <match src="function_body [81546,81737]" dest="function_body [72069,72235]"/>
  <match src="type_name [13114,13118]" dest="type_name [26103,26107]"/>
  <match src="(: ( [98245,98246]" dest="(: ( [37401,37402]"/>
  <match src="identifier: s [55134,55135]" dest="identifier: s [22983,22984]"/>
  <match src="identifier: TREASURY_RATIO [44185,44199]" dest="identifier: TREASURY_RATIO [14318,14332]"/>
  <match src="visibility [781,789]" dest="visibility [1345,1353]"/>
  <match src="uint256: uint256 [7277,7284]" dest="uint256: uint256 [7841,7848]"/>
  <match src="identifier: from [7568,7572]" dest="identifier: from [8132,8136]"/>
  <match src=".: . [82172,82173]" dest=".: . [73785,73786]"/>
  <match src="string_literal [20516,20549]" dest="string_literal [64514,64543]"/>
  <match src="return_type_definition [8049,8070]" dest="return_type_definition [8613,8634]"/>
  <match src="call_argument [29738,29742]" dest="call_argument [48132,48136]"/>
  <match src="visibility [63920,63928]" dest="visibility [28708,28716]"/>
  <match src=",: , [15749,15750]" dest=",: , [60761,60762]"/>
  <match src=",: , [6479,6480]" dest=",: , [7043,7044]"/>
  <match src="view: view [97953,97957]" dest="view: view [37109,37113]"/>
  <match src="function_body [46462,46512]" dest="function_body [16595,16645]"/>
  <match src="user_defined_type [89360,89375]" dest="user_defined_type [30860,30875]"/>
  <match src="(: ( [94827,94828]" dest="(: ( [33983,33984]"/>
  <match src="call_expression [29165,29191]" dest="call_expression [47559,47585]"/>
  <match src="(: ( [79464,79465]" dest="(: ( [83884,83885]"/>
  <match src="function: function [7955,7963]" dest="function: function [8519,8527]"/>
  <match src="): ) [55708,55709]" dest="): ) [23557,23558]"/>
  <match src="block_statement [28976,29441]" dest="block_statement [47370,47835]"/>
  <match src="call_expression [99985,100018]" dest="call_expression [39141,39174]"/>
  <match src="uint256: uint256 [47044,47051]" dest="uint256: uint256 [17177,17184]"/>
  <match src="primitive_type [29517,29524]" dest="primitive_type [47911,47918]"/>
  <match src="visibility [48336,48344]" dest="visibility [18469,18477]"/>
  <match src="}: } [34099,34100]" dest="}: } [52493,52494]"/>
  <match src="&quot;: &quot; [85542,85543]" dest="&quot;: &quot; [79430,79431]"/>
  <match src="uint256: uint256 [81247,81254]" dest="uint256: uint256 [71720,71727]"/>
  <match src=",: , [101511,101512]" dest=",: , [40667,40668]"/>
  <match src="{: { [103900,103901]" dest="{: { [43056,43057]"/>
  <match src="pure: pure [46561,46565]" dest="pure: pure [16694,16698]"/>
  <match src="(: ( [79025,79026]" dest="(: ( [57530,57531]"/>
  <match src="uint256: uint256 [2569,2576]" dest="uint256: uint256 [3133,3140]"/>
  <match src="&quot;: &quot; [83716,83717]" dest="&quot;: &quot; [81521,81522]"/>
  <match src="return_statement [33910,33921]" dest="return_statement [52304,52315]"/>
  <match src="uint256: uint256 [71245,71252]" dest="uint256: uint256 [66943,66950]"/>
  <match src="primitive_type [73243,73250]" dest="primitive_type [59242,59249]"/>
  <match src=",: , [53304,53305]" dest=",: , [65859,65860]"/>
  <match src="return_type_definition [8269,8290]" dest="return_type_definition [8833,8854]"/>
  <match src="(: ( [32563,32564]" dest="(: ( [50957,50958]"/>
  <match src="(: ( [51942,51943]" dest="(: ( [27878,27879]"/>
  <match src="user_defined_type [45466,45478]" dest="user_defined_type [15599,15611]"/>
  <match src="(: ( [50694,50695]" dest="(: ( [63944,63945]"/>
  <match src="): ) [95616,95617]" dest="): ) [34772,34773]"/>
  <match src="type_name [82319,82326]" dest="type_name [72522,72529]"/>
  <match src="identifier: totalSupply [94574,94585]" dest="identifier: totalSupply [33730,33741]"/>
  <match src="identifier: getDAOEntranceLockupEpochs [46992,47018]" dest="identifier: getDAOEntranceLockupEpochs [17125,17151]"/>
  <match src="): ) [31957,31958]" dest="): ) [50351,50352]"/>
  <match src="identifier: candidates [98276,98286]" dest="identifier: candidates [37432,37442]"/>
  <match src="function: function [97041,97049]" dest="function: function [36197,36205]"/>
  <match src="{: { [9126,9127]" dest="{: { [9690,9691]"/>
  <match src="user_defined_type [95040,95054]" dest="user_defined_type [34196,34210]"/>
  <match src="visibility [27898,27906]" dest="visibility [46292,46300]"/>
  <match src="return: return [94433,94439]" dest="return: return [33589,33595]"/>
  <match src="variable_declaration [35742,35751]" dest="variable_declaration [54136,54145]"/>
  <match src="{: { [101803,101804]" dest="{: { [40959,40960]"/>
  <match src="type_name [29495,29502]" dest="type_name [47889,47896]"/>
  <match src="call_argument [104956,104962]" dest="call_argument [44112,44118]"/>
  <match src="identifier: self [8739,8743]" dest="identifier: self [9303,9307]"/>
  <match src="identifier: expiring [97017,97025]" dest="identifier: expiring [36173,36181]"/>
  <match src="identifier: balanceOfRewarded [83260,83277]" dest="identifier: balanceOf [79991,80000]"/>
  <match src=",: , [7803,7804]" dest=",: , [8367,8368]"/>
  <match src="parameter [55047,55060]" dest="parameter [22896,22909]"/>
  <match src="event_paramater [13962,13985]" dest="event_paramater [26951,26974]"/>
  <match src="call_argument [3369,3374]" dest="call_argument [3933,3938]"/>
  <match src="string: string [6888,6894]" dest="string: string [7452,7458]"/>
  <match src="primitive_type [64691,64698]" dest="primitive_type [79257,79264]"/>
  <match src="): ) [7032,7033]" dest="): ) [7596,7597]"/>
  <match src="identifier: account [101168,101175]" dest="identifier: account [40324,40331]"/>
  <match src="identifier: Constants [97259,97268]" dest="identifier: Constants [36415,36424]"/>
  <match src="array_access [105066,105094]" dest="array_access [44222,44250]"/>
  <match src="parameter [28256,28265]" dest="parameter [46650,46659]"/>
  <match src="primitive_type [101160,101167]" dest="primitive_type [40316,40323]"/>
  <match src="uint256: uint256 [6255,6262]" dest="uint256: uint256 [6819,6826]"/>
  <match src="}: } [98633,98634]" dest="}: } [37789,37790]"/>
  <match src="}: } [10193,10194]" dest="}: } [10757,10758]"/>
  <match src="=&gt;: =&gt; [89309,89311]" dest="=&gt;: =&gt; [30809,30811]"/>
  <match src="parameter [63943,63950]" dest="parameter [28731,28738]"/>
  <match src="call_expression [84412,84447]" dest="call_expression [81013,81058]"/>
  <match src="uint256: uint256 [7457,7464]" dest="uint256: uint256 [8021,8028]"/>
  <match src="identifier: value [81343,81348]" dest="identifier: value [71645,71650]"/>
  <match src="view: view [11564,11568]" dest="view: view [24553,24557]"/>
  <match src="call_expression [4056,4093]" dest="call_expression [4620,4657]"/>
  <match src="bool: bool [86684,86688]" dest="bool: bool [75194,75198]"/>
  <match src="constant: constant [44260,44268]" dest="constant: constant [14393,14401]"/>
  <match src="type_name [105516,105523]" dest="type_name [44672,44679]"/>
  <match src="): ) [55791,55792]" dest="): ) [23640,23641]"/>
  <match src="identifier: self [8179,8183]" dest="identifier: self [8743,8747]"/>
  <match src="identifier: current [103461,103468]" dest="identifier: current [42617,42624]"/>
  <match src="call_argument [7620,7641]" dest="call_argument [8184,8205]"/>
  <match src="uint256: uint256 [96962,96969]" dest="uint256: uint256 [36118,36125]"/>
  <match src="identifier: D256 [8510,8514]" dest="identifier: D256 [9074,9078]"/>
  <match src="}: } [44940,44941]" dest="}: } [15073,15074]"/>
  <match src="visibility [95773,95779]" dest="visibility [34929,34935]"/>
  <match src="call_expression [108420,108427]" dest="call_expression [56179,56186]"/>
  <match src="bytes32: bytes32 [30076,30083]" dest="bytes32: bytes32 [48470,48477]"/>
  <match src="block_statement [95118,95171]" dest="block_statement [34274,34327]"/>
  <match src="pragma: pragma [25,31]" dest="pragma: pragma [25,31]"/>
  <match src="): ) [47976,47977]" dest="): ) [18109,18110]"/>
  <match src="(: ( [73261,73262]" dest="(: ( [59277,59278]"/>
  <match src="expression_statement [85276,85403]" dest="expression_statement [81185,81331]"/>
  <match src="uint256: uint256 [88987,88994]" dest="uint256: uint256 [30487,30494]"/>
  <match src="comment: // ============ Structs ============ [5687,5723]" dest="comment: // ============ Structs ============ [6251,6287]"/>
  <match src="identifier: expiration [103679,103689]" dest="identifier: expiration [42835,42845]"/>
  <match src=".: . [82586,82587]" dest=".: . [72764,72765]"/>
  <match src="type_name [29517,29524]" dest="type_name [47911,47918]"/>
  <match src="): ) [47697,47698]" dest="): ) [17830,17831]"/>
  <match src="state_mutability [93163,93167]" dest="state_mutability [32319,32323]"/>
  <match src="uint256: uint256 [74226,74233]" dest="uint256: uint256 [64745,64752]"/>
  <match src="expression_statement [69289,69385]" dest="expression_statement [73535,73606]"/>
  <match src="(: ( [30322,30323]" dest="(: ( [48716,48717]"/>
  <match src="identifier: _state [101635,101641]" dest="identifier: _state [40791,40797]"/>
  <match src="function_definition [9323,9458]" dest="function_definition [9887,10022]"/>
  <match src="primitive_type [104466,104473]" dest="primitive_type [43622,43629]"/>
  <match src="parameter [104617,104634]" dest="parameter [43773,43790]"/>
  <match src="identifier: amount1Out [55438,55448]" dest="identifier: amount1Out [23287,23297]"/>
  <match src="uint256: uint256 [35754,35761]" dest="uint256: uint256 [54148,54155]"/>
  <match src="identifier: isInitialized [107157,107170]" dest="identifier: isInitialized [70499,70512]"/>
  <match src="): ) [73994,73995]" dest="): ) [68241,68242]"/>
  <match src="if_statement [94611,94666]" dest="if_statement [33767,33822]"/>
  <match src="type_name [56405,56412]" dest="type_name [24254,24261]"/>
  <match src="variable_declaration [383,392]" dest="variable_declaration [947,956]"/>
  <match src="identifier: size [87179,87183]" dest="identifier: size [75689,75693]"/>
  <match src="identifier: b [9094,9095]" dest="identifier: b [9658,9659]"/>
  <match src="parameter [13484,13498]" dest="parameter [26473,26487]"/>
  <match src="identifier: staged [101872,101878]" dest="identifier: staged [41028,41034]"/>
  <match src="identifier: value [7933,7938]" dest="identifier: value [8497,8502]"/>
  <match src="number_literal: 4e20 [43102,43106]" dest="number_literal: 4e20 [13235,13239]"/>
  <match src="(: ( [28148,28149]" dest="(: ( [46542,46543]"/>
  <match src="primitive_type [96625,96632]" dest="primitive_type [35781,35788]"/>
  <match src="(: ( [47548,47549]" dest="(: ( [17681,17682]"/>
  <match src="identifier: capture [63846,63853]" dest="identifier: capture [28634,28641]"/>
  <match src="state_mutability [97406,97410]" dest="state_mutability [36562,36566]"/>
  <match src="): ) [97944,97945]" dest="): ) [37100,37101]"/>
  <match src="}: } [78135,78136]" dest="}: } [61901,61902]"/>
  <match src="): ) [8439,8440]" dest="): ) [9003,9004]"/>
  <match src="state_mutability [54489,54493]" dest="state_mutability [22338,22342]"/>
  <match src="bool: bool [32018,32022]" dest="bool: bool [50412,50416]"/>
  <match src="call_argument [84743,84753]" dest="call_argument [81723,81733]"/>
  <match src="}: } [45160,45161]" dest="}: } [15293,15294]"/>
  <match src="function_body [32919,33764]" dest="function_body [51313,52158]"/>
  <match src="uint256: uint256 [1981,1988]" dest="uint256: uint256 [2545,2552]"/>
  <match src="{: { [88881,88882]" dest="{: { [30381,30382]"/>
  <match src=".: . [83568,83569]" dest=".: . [80734,80735]"/>
  <match src="parameter [99692,99696]" dest="parameter [38848,38852]"/>
  <match src="struct: struct [88484,88490]" dest="struct: struct [29984,29990]"/>
  <match src="identifier: unbond [82975,82981]" dest="identifier: unbond [73128,73134]"/>
  <match src="type_name [93271,93278]" dest="type_name [32427,32434]"/>
  <match src=".: . [101240,101241]" dest=".: . [40396,40397]"/>
  <match src="): ) [86659,86660]" dest="): ) [75169,75170]"/>
  <match src="returns: returns [12020,12027]" dest="returns: returns [25009,25016]"/>
  <match src="): ) [88165,88166]" dest="): ) [29665,29666]"/>
  <match src="identifier: IEthic [51752,51758]" dest="identifier: IEthic [27688,27694]"/>
  <match src="function_body [93934,93977]" dest="function_body [33090,33133]"/>
  <match src="}: } [36797,36798]" dest="}: } [55191,55192]"/>
  <match src="): ) [97107,97108]" dest="): ) [36263,36264]"/>
  <match src="identifier: EpochStrategy [95924,95937]" dest="identifier: EpochStrategy [35080,35093]"/>
  <match src="return_type_definition [3267,3284]" dest="return_type_definition [3831,3848]"/>
  <match src="view: view [55632,55636]" dest="view: view [23481,23485]"/>
  <match src="(: ( [53162,53163]" dest="(: ( [65807,65808]"/>
  <match src="(: ( [81834,81835]" dest="(: ( [84002,84003]"/>
  <match src="(: ( [99691,99692]" dest="(: ( [38847,38848]"/>
  <match src="number_literal: 10 [34629,34631]" dest="number_literal: 10 [53023,53025]"/>
  <match src="user_defined_type [89419,89432]" dest="user_defined_type [30919,30932]"/>
  <match src="returns: returns [93411,93418]" dest="returns: returns [32567,32574]"/>
  <match src="modifier_invocation [108091,108102]" dest="modifier_invocation [83789,83800]"/>
  <match src="identifier: balance [100560,100567]" dest="identifier: balance [39716,39723]"/>
  <match src="identifier: account [104560,104567]" dest="identifier: account [43716,43723]"/>
  <match src="bool: bool [8853,8857]" dest="bool: bool [9417,9421]"/>
  <match src="(: ( [101684,101685]" dest="(: ( [40840,40841]"/>
  <match src="assignment_expression [104318,104362]" dest="assignment_expression [43474,43518]"/>
  <match src="return_type_definition [79017,79043]" dest="return_type_definition [57522,57548]"/>
  <match src="identifier: DAO_ADDRESS [44269,44280]" dest="identifier: DAO_ADDRESS [14402,14413]"/>
  <match src="function: function [93237,93245]" dest="function: function [32393,32401]"/>
  <match src="primitive_type [1348,1355]" dest="primitive_type [1912,1919]"/>
  <match src="returns: returns [44769,44776]" dest="returns: returns [14902,14909]"/>
  <match src="&quot;: &quot; [17832,17833]" dest="&quot;: &quot; [73523,73524]"/>
  <match src="primitive_type [74017,74024]" dest="primitive_type [62816,62823]"/>
  <match src="(: ( [108445,108446]" dest="(: ( [68861,68862]"/>
  <match src="identifier: recipient [99538,99547]" dest="identifier: recipient [38694,38703]"/>
  <match src="primitive_type [54588,54592]" dest="primitive_type [22437,22441]"/>
  <match src="for: for [72295,72298]" dest="for: for [56034,56037]"/>
  <match src="parameter [21071,21085]" dest="parameter [56868,56882]"/>
  <match src="uint256: uint256 [27491,27498]" dest="uint256: uint256 [45885,45892]"/>
  <match src="visibility [42870,42877]" dest="visibility [13003,13010]"/>
  <match src="address: address [54074,54081]" dest="address: address [21923,21930]"/>
  <match src="primitive_type [81391,81398]" dest="primitive_type [79185,79192]"/>
  <match src="}: } [97034,97035]" dest="}: } [36190,36191]"/>
  <match src="function_definition [55660,55710]" dest="function_definition [23509,23559]"/>
  <match src="primitive_type [3225,3231]" dest="primitive_type [3789,3795]"/>
  <match src="parameter [97793,97810]" dest="parameter [36949,36966]"/>
  <match src="variable_declaration_statement [74146,74217]" dest="variable_declaration_statement [68441,68479]"/>
  <match src="=: = [82427,82428]" dest="=: = [67827,67828]"/>
  <match src="identifier: start [104347,104352]" dest="identifier: start [43503,43508]"/>
  <match src="type_name [8003,8007]" dest="type_name [8567,8571]"/>
  <match src="(: ( [1643,1644]" dest="(: ( [2207,2208]"/>
  <match src=".: . [102219,102220]" dest=".: . [41375,41376]"/>
  <match src=".: . [84041,84042]" dest=".: . [80884,80885]"/>
  <match src="member_expression [102088,102103]" dest="member_expression [41244,41259]"/>
  <match src="comment: // ============ Private Functions ============ [32758,32804]" dest="comment: // ============ Private Functions ============ [51152,51198]"/>
  <match src="user_defined_type [6843,6847]" dest="user_defined_type [7407,7411]"/>
  <match src="): ) [95115,95116]" dest="): ) [34271,34272]"/>
  <match src="primitive_type [55816,55823]" dest="primitive_type [23665,23672]"/>
  <match src="view: view [93048,93052]" dest="view: view [32204,32208]"/>
  <match src="expression_statement [102191,102287]" dest="expression_statement [41347,41443]"/>
  <match src="!: ! [27934,27935]" dest="!: ! [46328,46329]"/>
  <match src="uint256: uint256 [22922,22929]" dest="uint256: uint256 [19816,19823]"/>
  <match src="identifier: amount [104827,104833]" dest="identifier: amount [43983,43989]"/>
  <match src="type_name [42568,42575]" dest="type_name [12701,12708]"/>
  <match src="address: address [21988,21995]" dest="address: address [65094,65101]"/>
  <match src="byte: byte [27674,27678]" dest="byte: byte [46068,46072]"/>
  <match src="identifier: slot [91677,91681]" dest="identifier: slot [77987,77991]"/>
  <match src="private: private [85032,85039]" dest="private: private [59180,59187]"/>
  <match src="): ) [97434,97435]" dest="): ) [36590,36591]"/>
  <match src="(: ( [13113,13114]" dest="(: ( [26102,26103]"/>
  <match src="visibility [13096,13104]" dest="visibility [26085,26093]"/>
  <match src="uint256: uint256 [81416,81423]" dest="uint256: uint256 [61474,61481]"/>
  <match src="identifier: stringifyTruncated [28580,28598]" dest="identifier: stringifyTruncated [46974,46992]"/>
  <match src="call_argument [4717,4723]" dest="call_argument [5281,5287]"/>
  <match src="parameter [7868,7879]" dest="parameter [8432,8443]"/>
  <match src="type_name [88751,88758]" dest="type_name [30251,30258]"/>
  <match src="): ) [92747,92748]" dest="): ) [31903,31904]"/>
  <match src="identifier: BOOTSTRAPPING_PERIOD [45377,45397]" dest="identifier: BOOTSTRAPPING_PERIOD [15510,15530]"/>
  <match src="number_literal: 1613221200 [42249,42259]" dest="number_literal: 1613221200 [12382,12392]"/>
  <match src=",: , [31757,31758]" dest=",: , [50151,50152]"/>
  <match src="}: } [98034,98035]" dest="}: } [37190,37191]"/>
  <match src="type_cast_expression [85094,85107]" dest="type_cast_expression [59489,59502]"/>
  <match src="type_name [8931,8935]" dest="type_name [9495,9499]"/>
  <match src="pure: pure [6119,6123]" dest="pure: pure [6683,6687]"/>
  <match src="variable_declaration_statement [83047,83101]" dest="variable_declaration_statement [73313,73396]"/>
  <match src="identifier: equals [8790,8796]" dest="identifier: equals [9354,9360]"/>
  <match src="state_mutability [55991,55995]" dest="state_mutability [23840,23844]"/>
  <match src="): ) [11704,11705]" dest="): ) [24693,24694]"/>
  <match src="identifier: bond [82314,82318]" dest="identifier: bond [72517,72521]"/>
  <match src="identifier: D256 [7431,7435]" dest="identifier: D256 [7995,7999]"/>
  <match src=".: . [65484,65485]" dest=".: . [66786,66787]"/>
  <match src="string [83986,84013]" dest="string [81901,81916]"/>
  <match src="identifier: shift [35391,35396]" dest="identifier: shift [53785,53790]"/>
  <match src="(: ( [92942,92943]" dest="(: ( [32098,32099]"/>
  <match src="identifier: _state [96545,96551]" dest="identifier: _state [35701,35707]"/>
  <match src="identifier: owner [103148,103153]" dest="identifier: owner [42304,42309]"/>
  <match src="identifier: b [2025,2026]" dest="identifier: b [2589,2590]"/>
  <match src="call_argument [79556,79560]" dest="call_argument [59955,59959]"/>
  <match src="member_expression [103035,103050]" dest="member_expression [42191,42206]"/>
  <match src="visibility [92581,92588]" dest="visibility [31737,31744]"/>
  <match src="identifier: self [6855,6859]" dest="identifier: self [7419,7423]"/>
  <match src="identifier: input [35762,35767]" dest="identifier: input [54156,54161]"/>
  <match src="identifier: payloadA [32488,32496]" dest="identifier: payloadA [50882,50890]"/>
  <match src="parameter [55834,55850]" dest="parameter [23683,23699]"/>
  <match src="): ) [33756,33757]" dest="): ) [52150,52151]"/>
  <match src="function_body [3285,3528]" dest="function_body [3849,4092]"/>
  <match src="pure: pure [54300,54304]" dest="pure: pure [22149,22153]"/>
  <match src="(: ( [74322,74323]" dest="(: ( [82716,82717]"/>
  <match src="identifier: accounts [102873,102881]" dest="identifier: accounts [42029,42037]"/>
  <match src=",: , [4626,4627]" dest=",: , [5190,5191]"/>
  <match src="identifier: account [73445,73452]" dest="identifier: account [82547,82554]"/>
  <match src="identifier: file [28068,28072]" dest="identifier: file [46462,46466]"/>
  <match src="identifier: getBootstrappingSpeedupFactor [45568,45597]" dest="identifier: getBootstrappingSpeedupFactor [15701,15730]"/>
  <match src=":: : [6776,6777]" dest=":: : [7340,7341]"/>
  <match src="address: address [53468,53475]" dest="address: address [61342,61349]"/>
  <match src="state_mutability [55632,55636]" dest="state_mutability [23481,23485]"/>
  <match src="identifier: account [11697,11704]" dest="identifier: account [24686,24693]"/>
  <match src="identifier: Frozen [95252,95258]" dest="identifier: Frozen [34408,34414]"/>
  <match src="parameter [48154,48161]" dest="parameter [18287,18294]"/>
  <match src="): ) [74331,74332]" dest="): ) [82740,82741]"/>
  <match src="primitive_type [103140,103147]" dest="primitive_type [42296,42303]"/>
  <match src="identifier: encodePacked [31664,31676]" dest="identifier: encodePacked [50058,50070]"/>
  <match src="parameter [63872,63891]" dest="parameter [28660,28679]"/>
  <match src="(: ( [107142,107143]" dest="(: ( [70484,70485]"/>
  <match src="return_statement [5907,5933]" dest="return_statement [6471,6497]"/>
  <match src="constant: constant [43531,43539]" dest="constant: constant [13664,13672]"/>
  <match src="user_defined_type [8599,8603]" dest="user_defined_type [9163,9167]"/>
  <match src=".: . [104746,104747]" dest=".: . [43902,43903]"/>
  <match src="primitive_type [101513,101520]" dest="primitive_type [40669,40676]"/>
  <match src="identifier: owner [103245,103250]" dest="identifier: owner [42401,42406]"/>
  <match src="return_statement [95813,95841]" dest="return_statement [34969,34997]"/>
  <match src="call_expression [82238,82252]" dest="call_expression [60022,60036]"/>
  <match src="identifier: D256 [6984,6988]" dest="identifier: D256 [7548,7552]"/>
  <match src="): ) [11553,11554]" dest="): ) [24542,24543]"/>
  <match src="): ) [73335,73336]" dest="): ) [82582,82583]"/>
  <match src="call_expression [58617,58668]" dest="call_expression [74086,74158]"/>
  <match src="==: == [9029,9031]" dest="==: == [9593,9595]"/>
  <match src="internal: internal [100391,100399]" dest="internal: internal [39547,39555]"/>
  <match src="return_type_definition [45457,45486]" dest="return_type_definition [15590,15619]"/>
  <match src="parameter [2603,2610]" dest="parameter [3167,3174]"/>
  <match src="identifier: account [106922,106929]" dest="identifier: account [70264,70271]"/>
  <match src="(: ( [83448,83449]" dest="(: ( [73982,73983]"/>
  <match src="member_expression [102492,102524]" dest="member_expression [41648,41680]"/>
  <match src="identifier: mul [82587,82590]" dest="identifier: mul [72765,72768]"/>
  <match src="string [65528,65536]" dest="string [60840,60848]"/>
  <match src="expression_statement [25215,25280]" dest="expression_statement [80367,80438]"/>
  <match src="identifier: encodePacked [28461,28473]" dest="identifier: encodePacked [46855,46867]"/>
  <match src="function: function [9959,9967]" dest="function: function [10523,10531]"/>
  <match src="identifier: _state [100722,100728]" dest="identifier: _state [39878,39884]"/>
  <match src="string_literal [53306,53348]" dest="string_literal [65881,65919]"/>
  <match src="call_struct_argument [46344,46376]" dest="call_struct_argument [16477,16509]"/>
  <match src="parameter [8931,8947]" dest="parameter [9495,9511]"/>
  <match src="string [19803,19842]" dest="string [65425,65472]"/>
  <match src="identifier: temp [7698,7702]" dest="identifier: temp [8262,8266]"/>
  <match src="identifier: candidates [97460,97470]" dest="identifier: candidates [36616,36626]"/>
  <match src="call_argument [8751,8755]" dest="call_argument [9315,9319]"/>
  <match src="}: } [28785,28786]" dest="}: } [47179,47180]"/>
  <match src="identifier: reason [103353,103359]" dest="identifier: reason [42509,42515]"/>
  <match src="(: ( [21995,21996]" dest="(: ( [65101,65102]"/>
  <match src="function_definition [104771,104978]" dest="function_definition [43927,44134]"/>
  <match src=",: , [82828,82829]" dest=",: , [72994,72995]"/>
  <match src="(: ( [6643,6644]" dest="(: ( [7207,7208]"/>
  <match src="{: { [8993,8994]" dest="{: { [9557,9558]"/>
  <match src="(: ( [23123,23124]" dest="(: ( [56701,56702]"/>
  <match src="variable_declaration_statement [82474,82671]" dest="variable_declaration_statement [72708,72864]"/>
  <match src="call_expression [106941,107072]" dest="call_expression [70283,70414]"/>
  <match src="member_expression [97725,97760]" dest="member_expression [36881,36916]"/>
  <match src="member_expression [102646,102690]" dest="member_expression [41802,41846]"/>
  <match src="state_mutability [33834,33838]" dest="state_mutability [52228,52232]"/>
  <match src="call_argument [31835,31841]" dest="call_argument [50229,50235]"/>
  <match src="(: ( [6578,6579]" dest="(: ( [7142,7143]"/>
  <match src="}: } [7640,7641]" dest="}: } [8204,8205]"/>
  <match src="member_expression [102234,102278]" dest="member_expression [41390,41434]"/>
  <match src="type_name [103671,103678]" dest="type_name [42827,42834]"/>
  <match src="primitive_type [55328,55335]" dest="primitive_type [23177,23184]"/>
  <match src="): ) [99464,99465]" dest="): ) [38620,38621]"/>
  <match src="type_name [83331,83338]" dest="type_name [64054,64061]"/>
  <match src="function_definition [55770,55879]" dest="function_definition [23619,23728]"/>
  <match src="string_literal [69365,69374]" dest="string_literal [73573,73604]"/>
  <match src="identifier: add [85126,85129]" dest="identifier: add [59293,59296]"/>
  <match src="indexed: indexed [25763,25770]" dest="indexed: indexed [61020,61027]"/>
  <match src="expression_statement [21969,22038]" dest="expression_statement [65075,65152]"/>
  <match src="member_expression [94440,94455]" dest="member_expression [33596,33611]"/>
  <match src="identifier: account [26218,26225]" dest="identifier: account [56429,56436]"/>
  <match src=".: . [104153,104154]" dest=".: . [43309,43310]"/>
  <match src="member_expression [105470,105485]" dest="member_expression [44626,44641]"/>
  <match src="function_body [34776,35626]" dest="function_body [53170,54020]"/>
  <match src="identifier: input [33884,33889]" dest="identifier: input [52278,52283]"/>
  <match src="): ) [41806,41807]" dest="): ) [11939,11940]"/>
  <match src="array_access [102534,102558]" dest="array_access [41690,41714]"/>
  <match src="call_argument [41764,41806]" dest="call_argument [11897,11939]"/>
  <match src="expression_statement [103772,103827]" dest="expression_statement [42928,42983]"/>
  <match src="if_statement [66737,66893]" dest="if_statement [68995,69052]"/>
  <match src=".: . [83452,83453]" dest=".: . [73986,73987]"/>
  <match src="comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP. Does not include  * the optional functions; to access them see {ERC20Detailed}.  */ [11287,11437]" dest="comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP. Does not include  * the optional functions; to access them see {ERC20Detailed}.  */ [24276,24426]"/>
  <match src="uint256: uint256 [32109,32116]" dest="uint256: uint256 [50503,50510]"/>
  <match src="public: public [93698,93704]" dest="public: public [32854,32860]"/>
  <match src="string_literal [91202,91216]" dest="string_literal [77512,77526]"/>
  <match src="type_name [97100,97107]" dest="type_name [36256,36263]"/>
  <match src="expression_statement [35955,35991]" dest="expression_statement [54349,54385]"/>
  <match src="(: ( [9119,9120]" dest="(: ( [9683,9684]"/>
  <match src="primitive_type [11729,11736]" dest="primitive_type [24718,24725]"/>
  <match src="&quot;: &quot; [21920,21921]" dest="&quot;: &quot; [63880,63881]"/>
  <match src="identifier: i [36161,36162]" dest="identifier: i [54555,54556]"/>
  <match src=".: . [103314,103315]" dest=".: . [42470,42471]"/>
  <match src="(: ( [100060,100061]" dest="(: ( [39216,39217]"/>
  <match src="{: { [96410,96411]" dest="{: { [35566,35567]"/>
  <match src="array_access [102088,102112]" dest="array_access [41244,41268]"/>
  <match src="call_argument [35972,35989]" dest="call_argument [54366,54383]"/>
  <match src="primitive_type [5650,5657]" dest="primitive_type [6214,6221]"/>
  <match src="primitive_type [79797,79801]" dest="primitive_type [64667,64671]"/>
  <match src="call_argument [84755,84760]" dest="call_argument [81735,81744]"/>
  <match src="identifier: mod [4056,4059]" dest="identifier: mod [4620,4623]"/>
  <match src="public: public [96779,96785]" dest="public: public [35935,35941]"/>
  <match src="): ) [11736,11737]" dest="): ) [24725,24726]"/>
  <match src="identifier: file [28842,28846]" dest="identifier: file [47236,47240]"/>
  <match src="string: string [29649,29655]" dest="string: string [48043,48049]"/>
  <match src="identifier: result [33667,33673]" dest="identifier: result [52061,52067]"/>
  <match src="call_expression [101659,101692]" dest="call_expression [40815,40848]"/>
  <match src="): ) [36733,36734]" dest="): ) [55127,55128]"/>
  <match src="function: function [8577,8585]" dest="function: function [9141,9149]"/>
  <match src="identifier: BASE [8751,8755]" dest="identifier: BASE [9315,9319]"/>
  <match src="public: public [97678,97684]" dest="public: public [36834,36840]"/>
  <match src="expression_statement [84623,84694]" dest="expression_statement [64213,64272]"/>
  <match src="comment: /**      * Global      */ [99865,99890]" dest="comment: /**      * Global      */ [39021,39046]"/>
  <match src="{: { [88977,88978]" dest="{: { [30477,30478]"/>
  <match src="{: { [30175,30176]" dest="{: { [48569,48570]"/>
  <match src="string_literal [66341,66360]" dest="string_literal [82406,82420]"/>
  <match src="primitive_type [56270,56275]" dest="primitive_type [24119,24124]"/>
  <match src="[: [ [97610,97611]" dest="[: [ [36766,36767]"/>
  <match src="identifier: value [82830,82835]" dest="identifier: value [72996,73001]"/>
  <match src="expression_statement [101635,101693]" dest="expression_statement [40791,40849]"/>
  <match src="primitive_type [84310,84317]" dest="primitive_type [62034,62041]"/>
  <match src="{: { [33558,33559]" dest="{: { [51952,51953]"/>
  <match src="type_name [36153,36160]" dest="type_name [54547,54554]"/>
  <match src="identifier: coupons [96566,96573]" dest="identifier: coupons [35722,35729]"/>
  <match src="}: } [46511,46512]" dest="}: } [16644,16645]"/>
  <match src="bool: bool [63893,63897]" dest="bool: bool [28681,28685]"/>
  <match src="primitive_type [41351,41358]" dest="primitive_type [11484,11491]"/>
  <match src="call_expression [30545,30564]" dest="call_expression [48939,48958]"/>
  <match src=".: . [50921,50922]" dest=".: . [71823,71824]"/>
  <match src=".: . [8548,8549]" dest=".: . [9112,9113]"/>
  <match src="identifier: account [94710,94717]" dest="identifier: account [33866,33873]"/>
  <match src="internal: internal [6106,6114]" dest="internal: internal [6670,6678]"/>
  <match src=",: , [83173,83174]" dest=",: , [82243,82244]"/>
  <match src="variable_declaration_statement [84468,84557]" dest="variable_declaration_statement [73887,73949]"/>
  <match src="private: private [25797,25804]" dest="private: private [59428,59435]"/>
  <match src="state_mutability [95881,95885]" dest="state_mutability [35037,35041]"/>
  <match src="identifier: value [55084,55089]" dest="identifier: value [22933,22938]"/>
  <match src=",: , [31490,31491]" dest=",: , [49884,49885]"/>
  <match src="identifier: value [83577,83582]" dest="identifier: candidate [80743,80752]"/>
  <match src="): ) [81852,81853]" dest="): ) [84046,84047]"/>
  <match src="call_expression [83540,83620]" dest="call_expression [80721,80753]"/>
  <match src="identifier: period [104291,104297]" dest="identifier: period [43447,43453]"/>
  <match src="binary_expression [95070,95116]" dest="binary_expression [34226,34272]"/>
  <match src="(: ( [12028,12029]" dest="(: ( [25017,25018]"/>
  <match src="call_argument [85666,85670]" dest="call_argument [79928,79932]"/>
  <match src="(: ( [83122,83123]" dest="(: ( [82108,82109]"/>
  <match src="parameter [100885,100899]" dest="parameter [40041,40055]"/>
  <match src="parameter [30100,30116]" dest="parameter [48494,48510]"/>
  <match src="identifier: kLast [56025,56030]" dest="identifier: kLast [23874,23879]"/>
  <match src="identifier: j [33988,33989]" dest="identifier: j [52382,52383]"/>
  <match src="identifier: msg [82760,82763]" dest="identifier: msg [74105,74108]"/>
  <match src="!=: != [4719,4721]" dest="!=: != [5283,5285]"/>
  <match src="external: external [84961,84969]" dest="external: external [65376,65384]"/>
  <match src="type_name [34914,34919]" dest="type_name [53308,53313]"/>
  <match src="call_argument [84093,84097]" dest="call_argument [80939,80943]"/>
  <match src="=: = [104408,104409]" dest="=: = [43564,43565]"/>
  <match src="identifier: BOOTSTRAPPING_PRICE [45525,45544]" dest="identifier: BOOTSTRAPPING_PRICE [15658,15677]"/>
  <match src="identifier: spender [13978,13985]" dest="identifier: spender [26967,26974]"/>
  <match src="return_statement [7561,7576]" dest="return_statement [8125,8140]"/>
  <match src="array_access [35001,35010]" dest="array_access [53395,53404]"/>
  <match src="type_name [32976,32981]" dest="type_name [51370,51375]"/>
  <match src="identifier: expiring [96855,96863]" dest="identifier: expiring [36011,36019]"/>
  <match src="identifier: value [8744,8749]" dest="identifier: value [9308,9313]"/>
  <match src="string: string [103188,103194]" dest="string: string [42344,42350]"/>
  <match src="identifier: reject [105335,105341]" dest="identifier: reject [44491,44497]"/>
  <match src=",: , [85528,85529]" dest=",: , [79416,79417]"/>
  <match src="identifier: b [9159,9160]" dest="identifier: b [9723,9724]"/>
  <match src="parameter [99824,99828]" dest="parameter [38980,38984]"/>
  <match src="call_expression [102534,102593]" dest="call_expression [41690,41749]"/>
  <match src="=: = [35577,35578]" dest="=: = [53971,53972]"/>
  <match src="(: ( [93718,93719]" dest="(: ( [32874,32875]"/>
  <match src="): ) [6198,6199]" dest="): ) [6762,6763]"/>
  <match src="function_body [8993,9040]" dest="function_body [9557,9604]"/>
  <match src="identifier: FILE [83968,83972]" dest="identifier: FILE [81883,81887]"/>
  <match src="type_name [81761,81768]" dest="type_name [72259,72266]"/>
  <match src="bool: bool [51943,51947]" dest="bool: bool [27879,27883]"/>
  <match src="uint256: uint256 [28321,28328]" dest="uint256: uint256 [46715,46722]"/>
  <match src="identifier: newImplementation [91147,91164]" dest="identifier: newImplementation [77457,77474]"/>
  <match src="(: ( [9672,9673]" dest="(: ( [10236,10237]"/>
  <match src="identifier: _state [94057,94063]" dest="identifier: _state [33213,33219]"/>
  <match src="visibility [97546,97552]" dest="visibility [36702,36708]"/>
  <match src="function_definition [93983,94089]" dest="function_definition [33139,33245]"/>
  <match src="parameter [79035,79042]" dest="parameter [57540,57547]"/>
  <match src="identifier: newImplementation [91285,91302]" dest="identifier: newImplementation [77595,77612]"/>
  <match src="string: string [101772,101778]" dest="string: string [40928,40934]"/>
  <match src="): ) [63823,63824]" dest="): ) [28611,28612]"/>
  <match src=",: , [99769,99770]" dest=",: , [38925,38926]"/>
  <match src="internal: internal [101794,101802]" dest="internal: internal [40950,40958]"/>
  <match src="function_definition [54600,54670]" dest="function_definition [22449,22519]"/>
  <match src="): ) [54644,54645]" dest="): ) [22493,22494]"/>
  <match src=",: , [81260,81261]" dest=",: , [71733,71734]"/>
  <match src="identifier: amount [101059,101065]" dest="identifier: amount [40215,40221]"/>
  <match src="uint256: uint256 [41593,41600]" dest="uint256: uint256 [11726,11733]"/>
  <match src="string [21920,21958]" dest="string [63880,63911]"/>
  <match src="&gt;=: &gt;= [420,422]" dest="&gt;=: &gt;= [984,986]"/>
  <match src="): ) [84718,84719]" dest="): ) [56830,56831]"/>
  <match src="function: function [103511,103519]" dest="function: function [42667,42675]"/>
  <match src="(: ( [35542,35543]" dest="(: ( [53936,53937]"/>
  <match src="): ) [9677,9678]" dest="): ) [10241,10242]"/>
  <match src="parameter [6869,6878]" dest="parameter [7433,7442]"/>
  <match src="(: ( [55018,55019]" dest="(: ( [22867,22868]"/>
  <match src="): ) [83391,83392]" dest="): ) [73394,73395]"/>
  <match src="&quot;: &quot; [58642,58643]" dest="&quot;: &quot; [74126,74127]"/>
  <match src="function: function [47940,47948]" dest="function: function [18073,18081]"/>
  <match src="identifier: _state [103448,103454]" dest="identifier: _state [42604,42610]"/>
  <match src="}: } [107311,107312]" dest="}: } [70653,70654]"/>
  <match src="identifier: debt [89095,89099]" dest="identifier: debt [30595,30599]"/>
  <match src="type_name [104283,104290]" dest="type_name [43439,43446]"/>
  <match src="identifier: RPAREN [29929,29935]" dest="identifier: RPAREN [48323,48329]"/>
  <match src="identifier: account [94517,94524]" dest="identifier: account [33673,33680]"/>
  <match src="{: { [85040,85041]" dest="{: { [59436,59437]"/>
  <match src="identifier: price0CumulativeLast [55893,55913]" dest="identifier: price0CumulativeLast [23742,23762]"/>
  <match src="type_alias [75694,75702]" dest="type_alias [83595,83603]"/>
  <match src=".: . [102730,102731]" dest=".: . [41886,41887]"/>
  <match src="parameter [98099,98106]" dest="parameter [37255,37262]"/>
  <match src="memory: memory [63885,63891]" dest="memory: memory [28673,28679]"/>
  <match src="bytes32: bytes32 [29517,29524]" dest="bytes32: bytes32 [47911,47918]"/>
  <match src="member_expression [98406,98423]" dest="member_expression [37562,37579]"/>
  <match src="primitive_type [54705,54709]" dest="primitive_type [22554,22558]"/>
  <match src="parameter [3276,3283]" dest="parameter [3840,3847]"/>
  <match src="address: address [99771,99778]" dest="address: address [38927,38934]"/>
  <match src="identifier: D256 [7868,7872]" dest="identifier: D256 [8432,8436]"/>
  <match src="identifier: couponAllowances [103058,103074]" dest="identifier: couponAllowances [42214,42230]"/>
  <match src=",: , [9024,9025]" dest=",: , [9588,9589]"/>
  <match src="!=: != [21985,21987]" dest="!=: != [65091,65093]"/>
  <match src="[: [ [97876,97877]" dest="[: [ [37032,37033]"/>
  <match src="uint256: uint256 [99380,99387]" dest="uint256: uint256 [38536,38543]"/>
  <match src="(: ( [81711,81712]" dest="(: ( [72209,72210]"/>
  <match src="type_name [55283,55290]" dest="type_name [23132,23139]"/>
  <match src="[: [ [97025,97026]" dest="[: [ [36181,36182]"/>
  <match src="member_expression [46010,46022]" dest="member_expression [16143,16155]"/>
  <match src="member_expression [101932,101957]" dest="member_expression [41088,41113]"/>
  <match src="byte: byte [36663,36667]" dest="byte: byte [55057,55061]"/>
  <match src="): ) [55653,55654]" dest="): ) [23502,23503]"/>
  <match src="call_argument [69347,69351]" dest="call_argument [82043,82047]"/>
  <match src="address: address [54465,54472]" dest="address: address [22314,22321]"/>
  <match src="returns: returns [55930,55937]" dest="returns: returns [23779,23786]"/>
  <match src="function: function [63837,63845]" dest="function: function [28625,28633]"/>
  <match src="pure: pure [350,354]" dest="pure: pure [914,918]"/>
  <match src="(: ( [47696,47697]" dest="(: ( [17829,17830]"/>
  <match src="): ) [93593,93594]" dest="): ) [32749,32750]"/>
  <match src=":: : [7194,7195]" dest=":: : [7758,7759]"/>
  <match src=",: , [29299,29300]" dest=",: , [47693,47694]"/>
  <match src="constant: constant [42337,42345]" dest="constant: constant [12470,12478]"/>
  <match src="parameter [6306,6317]" dest="parameter [6870,6881]"/>
  <match src="identifier: D256 [67551,67555]" dest="identifier: D256 [21552,21556]"/>
  <match src="return: return [69232,69238]" dest="return: return [62633,62639]"/>
  <match src="function: function [105699,105707]" dest="function: function [44855,44863]"/>
  <match src="function_body [47053,47103]" dest="function_body [17186,17236]"/>
  <match src="uint256: uint256 [88726,88733]" dest="uint256: uint256 [30226,30233]"/>
  <match src="function_definition [94484,94743]" dest="function_definition [33640,33899]"/>
  <match src="pure: pure [46278,46282]" dest="pure: pure [16411,16415]"/>
  <match src="primitive_type [330,337]" dest="primitive_type [894,901]"/>
  <match src="function_definition [56376,56423]" dest="function_definition [24225,24272]"/>
  <match src="assignment_expression [36471,36515]" dest="assignment_expression [54865,54909]"/>
  <match src="call_expression [32271,32703]" dest="call_expression [50665,51097]"/>
  <match src="visibility [42418,42425]" dest="visibility [12551,12558]"/>
  <match src="uint256: uint256 [1689,1696]" dest="uint256: uint256 [2253,2260]"/>
  <match src="identifier: Account [106722,106729]" dest="identifier: Account [70064,70071]"/>
  <match src="address: address [13708,13715]" dest="address: address [26697,26704]"/>
  <match src=",: , [19736,19737]" dest=",: , [65343,65344]"/>
  <match src="[: [ [97742,97743]" dest="[: [ [36898,36899]"/>
  <match src="call_argument [29819,29825]" dest="call_argument [48213,48219]"/>
  <match src="): ) [97810,97811]" dest="): ) [36966,36967]"/>
  <match src="parameter [63893,63897]" dest="parameter [28681,28685]"/>
  <match src="identifier: a [395,396]" dest="identifier: a [959,960]"/>
  <match src="member_expression [29677,29693]" dest="member_expression [48071,48087]"/>
  <match src="visibility [30153,30161]" dest="visibility [48547,48555]"/>
  <match src="(: ( [97063,97064]" dest="(: ( [36219,36220]"/>
  <match src="): ) [82596,82597]" dest="): ) [72804,72805]"/>
  <match src="type_name [98383,98387]" dest="type_name [37539,37543]"/>
  <match src="identifier: a [6365,6366]" dest="identifier: a [6929,6930]"/>
  <match src="identifier: FOUR_BIT_MASK [35409,35422]" dest="identifier: FOUR_BIT_MASK [53803,53816]"/>
  <match src="parameter [54705,54715]" dest="parameter [22554,22564]"/>
  <match src="function_body [106931,107091]" dest="function_body [70273,70433]"/>
  <match src="returns: returns [94131,94138]" dest="returns: returns [33287,33294]"/>
  <match src="): ) [88798,88799]" dest="): ) [30298,30299]"/>
  <match src="(: ( [7867,7868]" dest="(: ( [8431,8432]"/>
  <match src="member_expression [94932,94964]" dest="member_expression [34088,34120]"/>
  <match src="(: ( [107185,107186]" dest="(: ( [70527,70528]"/>
  <match src="visibility [54230,54238]" dest="visibility [22079,22087]"/>
  <match src="address: address [25755,25762]" dest="address: address [61012,61019]"/>
  <match src="): ) [34722,34723]" dest="): ) [53116,53117]"/>
  <match src="{: { [99830,99831]" dest="{: { [38986,38987]"/>
  <match src="internal: internal [341,349]" dest="internal: internal [905,913]"/>
  <match src="): ) [56060,56061]" dest="): ) [23909,23910]"/>
  <match src="identifier: deadline [50216,50224]" dest="identifier: newSupply [57502,57511]"/>
  <match src="function_body [52899,52959]" dest="function_body [56169,56325]"/>
  <match src="string [84257,84288]" dest="string [81153,81164]"/>
  <match src="type_name [51943,51947]" dest="type_name [27879,27883]"/>
  <match src="identifier: amount0 [55192,55199]" dest="identifier: amount0 [23041,23048]"/>
  <match src="type_name [8680,8684]" dest="type_name [9244,9248]"/>
  <match src="(: ( [29693,29694]" dest="(: ( [48087,48088]"/>
  <match src="function_definition [99624,99727]" dest="function_definition [38780,38883]"/>
  <match src="user_defined_type [9064,9068]" dest="user_defined_type [9628,9632]"/>
  <match src="parenthesized_expression [27961,28210]" dest="parenthesized_expression [46355,46604]"/>
  <match src="if_statement [94847,94916]" dest="if_statement [34003,34072]"/>
  <match src="(: ( [8679,8680]" dest="(: ( [9243,9244]"/>
  <match src="): ) [54352,54353]" dest="): ) [22201,22202]"/>
  <match src=",: , [101754,101755]" dest=",: , [40910,40911]"/>
  <match src="user_defined_type [8931,8935]" dest="user_defined_type [9495,9499]"/>
  <match src="identifier: z [36395,36396]" dest="identifier: z [54789,54790]"/>
  <match src="binary_expression [9143,9166]" dest="binary_expression [9707,9730]"/>
  <match src="identifier: reason [7026,7032]" dest="identifier: reason [7590,7596]"/>
  <match src="member_expression [102130,102173]" dest="member_expression [41286,41329]"/>
  <match src="): ) [21870,21871]" dest="): ) [65054,65055]"/>
  <match src="function: function [96739,96747]" dest="function: function [35895,35903]"/>
  <match src="visibility [63856,63862]" dest="visibility [28644,28650]"/>
  <match src="visibility [45443,45451]" dest="visibility [15576,15584]"/>
  <match src="identifier: reason [101891,101897]" dest="identifier: reason [41047,41053]"/>
  <match src="identifier: priceCumulative [66996,67011]" dest="identifier: endsAfter [81001,81010]"/>
  <match src="uint256: uint256 [4030,4037]" dest="uint256: uint256 [4594,4601]"/>
  <match src="return_statement [467,476]" dest="return_statement [1031,1040]"/>
  <match src="(: ( [45946,45947]" dest="(: ( [16079,16080]"/>
  <match src=",: , [100174,100175]" dest=",: , [39330,39331]"/>
  <match src="identifier: reason [102776,102782]" dest="identifier: reason [41932,41938]"/>
  <match src="uint: uint [55187,55191]" dest="uint: uint [23036,23040]"/>
  <match src="return_type_definition [55584,55598]" dest="return_type_definition [23433,23447]"/>
  <match src="): ) [107071,107072]" dest="): ) [70413,70414]"/>
  <match src="member_expression [66252,66264]" dest="member_expression [82304,82316]"/>
  <match src="(: ( [102767,102768]" dest="(: ( [41923,41924]"/>
  <match src="memory: memory [34920,34926]" dest="memory: memory [53314,53320]"/>
  <match src=",: , [83792,83793]" dest=",: , [73654,73655]"/>
  <match src="identifier: incrementTotalBonded [99905,99925]" dest="identifier: incrementTotalBonded [39061,39081]"/>
  <match src="user_defined_type [7508,7512]" dest="user_defined_type [8072,8076]"/>
  <match src=".: . [81996,81997]" dest=".: . [72480,72481]"/>
  <match src="type_name [13730,13737]" dest="type_name [26719,26726]"/>
  <match src="call_expression [47431,47468]" dest="call_expression [17564,17601]"/>
  <match src="member_expression [104058,104072]" dest="member_expression [43214,43228]"/>
  <match src=",: , [84325,84326]" dest=",: , [62056,62057]"/>
  <match src="): ) [95801,95802]" dest="): ) [34957,34958]"/>
  <match src="identifier: debt [100447,100451]" dest="identifier: debt [39603,39607]"/>
  <match src="expression_statement [101813,101899]" dest="expression_statement [40969,41055]"/>
  <match src="external: external [11706,11714]" dest="external: external [24695,24703]"/>
  <match src=",: , [29485,29486]" dest=",: , [47879,47880]"/>
  <match src="(: ( [7777,7778]" dest="(: ( [8341,8342]"/>
  <match src="&quot;: &quot; [53347,53348]" dest="&quot;: &quot; [65918,65919]"/>
  <match src="inheritance_specifier [80724,80735]" dest="inheritance_specifier [71360,71367]"/>
  <match src="uint256: uint256 [21856,21863]" dest="uint256: uint256 [65040,65047]"/>
  <match src="struct_member [88679,88693]" dest="struct_member [30179,30193]"/>
  <match src="call_expression [94682,94719]" dest="call_expression [33838,33875]"/>
  <match src="parameter [30035,30044]" dest="parameter [48429,48438]"/>
  <match src="identifier: _state [93951,93957]" dest="identifier: _state [33107,33113]"/>
  <match src="state_variable_declaration [27714,27751]" dest="state_variable_declaration [46108,46145]"/>
  <match src="member_expression [83089,83099]" dest="member_expression [73356,73366]"/>
  <match src="function_body [31573,31989]" dest="function_body [49967,50383]"/>
  <match src="parameter [94376,94391]" dest="parameter [33532,33547]"/>
  <match src="function_definition [8910,9040]" dest="function_definition [9474,9604]"/>
  <match src="identifier: b [6263,6264]" dest="identifier: b [6827,6828]"/>
  <match src="state_mutability [32883,32887]" dest="state_mutability [51277,51281]"/>
  <match src="state_mutability [94533,94537]" dest="state_mutability [33689,33693]"/>
  <match src="[: [ [103331,103332]" dest="[: [ [42487,42488]"/>
  <match src="user_defined_type [8815,8819]" dest="user_defined_type [9379,9383]"/>
  <match src="function: function [6441,6449]" dest="function: function [7005,7013]"/>
  <match src="user_defined_type [108039,108049]" dest="user_defined_type [78810,78820]"/>
  <match src="=: = [43897,43898]" dest="=: = [14030,14031]"/>
  <match src="primitive_type [81262,81269]" dest="primitive_type [71735,71742]"/>
  <match src="binary_expression [5674,5680]" dest="binary_expression [6238,6244]"/>
  <match src="bool: bool [27832,27836]" dest="bool: bool [46226,46230]"/>
  <match src="parameter [56241,56256]" dest="parameter [24090,24105]"/>
  <match src=".: . [79468,79469]" dest=".: . [83888,83889]"/>
  <match src="call_argument [21346,21353]" dest="call_argument [84417,84424]"/>
  <match src="primitive_type [97100,97107]" dest="primitive_type [36256,36263]"/>
  <match src="(: ( [21113,21114]" dest="(: ( [64579,64580]"/>
  <match src="member_expression [10091,10098]" dest="member_expression [10655,10662]"/>
  <match src="primitive_type [81448,81455]" dest="primitive_type [79046,79053]"/>
  <match src="primitive_type [55047,55054]" dest="primitive_type [22896,22903]"/>
  <match src="identifier: balanceOfBonded [83055,83070]" dest="identifier: newDebt [67551,67558]"/>
  <match src="state_variable_declaration [27585,27616]" dest="state_variable_declaration [45979,46010]"/>
  <match src="call_argument [837,838]" dest="call_argument [1401,1402]"/>
  <match src="indexed: indexed [81174,81181]" dest="indexed: indexed [83728,83735]"/>
  <match src="{: { [7345,7346]" dest="{: { [7909,7910]"/>
  <match src="uint256: uint256 [49931,49938]" dest="uint256: uint256 [60878,60885]"/>
  <match src="): ) [28974,28975]" dest="): ) [47368,47369]"/>
  <match src="state_mutability [47030,47034]" dest="state_mutability [17163,17167]"/>
  <match src="parameter [22922,22936]" dest="parameter [19816,19830]"/>
  <match src="pure: pure [28946,28950]" dest="pure: pure [47340,47344]"/>
  <match src="return_statement [45370,45398]" dest="return_statement [15503,15531]"/>
  <match src="identifier: FILE [83169,83173]" dest="identifier: FILE [82239,82243]"/>
  <match src="call_argument [81900,81905]" dest="call_argument [72406,72411]"/>
  <match src="): ) [2063,2064]" dest="): ) [2627,2628]"/>
  <match src="identifier: setImplementation [91466,91483]" dest="identifier: setImplementation [77776,77793]"/>
  <match src="primitive_type [35018,35023]" dest="primitive_type [53412,53417]"/>
  <match src="identifier: account [95086,95093]" dest="identifier: account [34242,34249]"/>
  <match src="function: function [95426,95434]" dest="function: function [34582,34590]"/>
  <match src=",: , [55199,55200]" dest=",: , [23048,23049]"/>
  <match src="call_argument [83794,83799]" dest="call_argument [73656,73661]"/>
  <match src="identifier: account [102146,102153]" dest="identifier: account [41302,41309]"/>
  <match src="primitive_type [35714,35719]" dest="primitive_type [54108,54113]"/>
  <match src="number_literal: 0 [9309,9310]" dest="number_literal: 0 [9873,9874]"/>
  <match src="uint256: uint256 [13484,13491]" dest="uint256: uint256 [26473,26480]"/>
  <match src=".: . [81580,81581]" dest=".: . [72103,72104]"/>
  <match src="private: private [49823,49830]" dest="private: private [61954,61961]"/>
  <match src="{: { [102482,102483]" dest="{: { [41638,41639]"/>
  <match src="call_argument [94710,94717]" dest="call_argument [33866,33873]"/>
  <match src="type_name [83237,83244]" dest="type_name [64087,64094]"/>
  <match src="identifier: _state [101847,101853]" dest="identifier: _state [41003,41009]"/>
  <match src="(: ( [78126,78127]" dest="(: ( [61829,61830]"/>
  <match src="): ) [108446,108447]" dest="): ) [68862,68863]"/>
  <match src="type_name [54253,54259]" dest="type_name [22102,22108]"/>
  <match src=",: , [31841,31842]" dest=",: , [50235,50236]"/>
  <match src="identifier: stringifyTruncated [28049,28067]" dest="identifier: stringifyTruncated [46443,46461]"/>
  <match src="(: ( [34170,34171]" dest="(: ( [52564,52565]"/>
  <match src="assignment_expression [101635,101692]" dest="assignment_expression [40791,40848]"/>
  <match src="{: { [92498,92499]" dest="{: { [31654,31655]"/>
  <match src="call_struct_argument [6771,6805]" dest="call_struct_argument [7335,7369]"/>
  <match src="identifier: target [9908,9914]" dest="identifier: target [10472,10478]"/>
  <match src="comment: /**      * Epoch      */ [103373,103397]" dest="comment: /**      * Epoch      */ [42529,42553]"/>
  <match src="type_name [45623,45630]" dest="type_name [15756,15763]"/>
  <match src="call_struct_argument [46024,46048]" dest="call_struct_argument [16157,16181]"/>
  <match src="uint256: uint256 [95485,95492]" dest="uint256: uint256 [34641,34648]"/>
  <match src="(: ( [31638,31639]" dest="(: ( [50032,50033]"/>
  <match src="identifier: staged [93864,93870]" dest="identifier: staged [33020,33026]"/>
  <match src="type_name [13708,13715]" dest="type_name [26697,26704]"/>
  <match src="external: external [50286,50294]" dest="external: external [63770,63778]"/>
  <match src="identifier: FILE [85362,85366]" dest="identifier: FILE [81293,81297]"/>
  <match src="type_name [88453,88462]" dest="type_name [29953,29962]"/>
  <match src="contract_body [88859,89396]" dest="contract_body [30359,30896]"/>
  <match src="type_name [104819,104826]" dest="type_name [43975,43982]"/>
  <match src="identifier: mod [3981,3984]" dest="identifier: mod [4545,4548]"/>
  <match src="): ) [100794,100795]" dest="): ) [39950,39951]"/>
  <match src="primitive_type [55201,55205]" dest="primitive_type [23050,23054]"/>
  <match src="(: ( [9590,9591]" dest="(: ( [10154,10155]"/>
  <match src="variable_declaration_statement [94566,94602]" dest="variable_declaration_statement [33722,33758]"/>
  <match src="primitive_type [19719,19726]" dest="primitive_type [65326,65333]"/>
  <match src="): ) [35560,35561]" dest="): ) [53954,53955]"/>
  <match src="parameter [9767,9781]" dest="parameter [10331,10345]"/>
  <match src="function_definition [5829,5939]" dest="function_definition [6393,6503]"/>
  <match src="uint256: uint256 [36609,36616]" dest="uint256: uint256 [55003,55010]"/>
  <match src="visibility [93041,93047]" dest="visibility [32197,32203]"/>
  <match src="identifier: newClaimable [81358,81370]" dest="identifier: bonded [79159,79165]"/>
  <match src="): ) [30635,30636]" dest="): ) [49029,49030]"/>
  <match src="struct_member [88319,88334]" dest="struct_member [29819,29834]"/>
  <match src="identifier: FILE [81015,81019]" dest="identifier: FILE [71444,71448]"/>
  <match src="expression_statement [21891,21960]" dest="expression_statement [63807,63922]"/>
  <match src="visibility [55793,55801]" dest="visibility [23642,23650]"/>
  <match src="identifier: _state [100410,100416]" dest="identifier: _state [39566,39572]"/>
  <match src="identifier: D256 [6171,6175]" dest="identifier: D256 [6735,6739]"/>
  <match src="external: external [55982,55990]" dest="external: external [23831,23839]"/>
  <match src="}: } [103366,103367]" dest="}: } [42522,42523]"/>
  <match src="function_definition [45294,45404]" dest="function_definition [15427,15537]"/>
  <match src="}: } [69253,69254]" dest="}: } [62712,62713]"/>
  <match src="parameter [104283,104297]" dest="parameter [43439,43453]"/>
  <match src="): ) [35767,35768]" dest="): ) [54161,54162]"/>
  <match src="mapping: mapping [89341,89348]" dest="mapping: mapping [30841,30848]"/>
  <match src=".: . [102540,102541]" dest=".: . [41696,41697]"/>
  <match src="return_type_definition [46913,46930]" dest="return_type_definition [17046,17063]"/>
  <match src="=: = [90558,90559]" dest="=: = [76868,76869]"/>
  <match src="parameter [48359,48366]" dest="parameter [18492,18499]"/>
  <match src="event: event [55152,55157]" dest="event: event [23001,23006]"/>
  <match src="uint256: uint256 [88296,88303]" dest="uint256: uint256 [29796,29803]"/>
  <match src="call_expression [78093,78128]" dest="call_expression [61800,61831]"/>
  <match src="identifier: _state [104147,104153]" dest="identifier: _state [43303,43309]"/>
  <match src="primitive_type [99641,99648]" dest="primitive_type [38797,38804]"/>
  <match src="(: ( [91251,91252]" dest="(: ( [77561,77562]"/>
  <match src="type_name [88775,88799]" dest="type_name [30275,30299]"/>
  <match src="primitive_type [22922,22929]" dest="primitive_type [19816,19823]"/>
  <match src="[: [ [97001,97002]" dest="[: [ [36157,36158]"/>
  <match src="member_expression [11038,11048]" dest="member_expression [65736,65746]"/>
  <match src="uint256: uint256 [3214,3221]" dest="uint256: uint256 [3778,3785]"/>
  <match src="identifier: b [7285,7286]" dest="identifier: b [7849,7850]"/>
  <match src="type_name [88069,88076]" dest="type_name [29569,29576]"/>
  <match src="visibility [42218,42225]" dest="visibility [12351,12358]"/>
  <match src="visibility [42493,42500]" dest="visibility [12626,12633]"/>
  <match src="(: ( [5957,5958]" dest="(: ( [6521,6522]"/>
  <match src="type_name [81222,81229]" dest="type_name [71695,71702]"/>
  <match src="{: { [99951,99952]" dest="{: { [39107,39108]"/>
  <match src="parameter [98206,98223]" dest="parameter [37362,37379]"/>
  <match src="): ) [83717,83718]" dest="): ) [80710,80711]"/>
  <match src="event_paramater [55499,55515]" dest="event_paramater [23348,23364]"/>
  <match src="identifier: value [50193,50198]" dest="identifier: value [73717,73722]"/>
  <match src="function_definition [101462,101699]" dest="function_definition [40618,40855]"/>
  <match src="identifier: transferFrom [99742,99754]" dest="identifier: transferFrom [38898,38910]"/>
  <match src="parameter [93271,93286]" dest="parameter [32427,32442]"/>
  <match src="function: function [5829,5837]" dest="function: function [6393,6401]"/>
  <match src="[: [ [96700,96701]" dest="[: [ [35856,35857]"/>
  <match src="return_type_definition [54494,54508]" dest="return_type_definition [22343,22357]"/>
  <match src="primitive_type [88113,88120]" dest="primitive_type [29613,29620]"/>
  <match src="{: { [97109,97110]" dest="{: { [36265,36266]"/>
  <match src="identifier: a [1993,1994]" dest="identifier: a [2557,2558]"/>
  <match src=",: , [30519,30520]" dest=",: , [48913,48914]"/>
  <match src="revert: revert [28405,28411]" dest="revert: revert [46799,46805]"/>
  <match src="(: ( [66740,66741]" dest="(: ( [68998,68999]"/>
  <match src=",: , [93269,93270]" dest=",: , [32425,32426]"/>
  <match src="(: ( [95770,95771]" dest="(: ( [34926,34927]"/>
  <match src="primitive_type [55163,55170]" dest="primitive_type [23012,23019]"/>
  <match src="member_expression [93745,93759]" dest="member_expression [32901,32915]"/>
  <match src="comment: // populate the most-significant character [36416,36458]" dest="comment: // populate the most-significant character [54810,54852]"/>
  <match src="expression_statement [35001,35037]" dest="expression_statement [53395,53431]"/>
  <match src="(: ( [91575,91576]" dest="(: ( [77885,77886]"/>
  <match src="member_expression [93951,93970]" dest="member_expression [33107,33126]"/>
  <match src="uint256: uint256 [47722,47729]" dest="uint256: uint256 [17855,17862]"/>
  <match src="type_name [15817,15824]" dest="type_name [19760,19767]"/>
  <match src="call_argument [102699,102705]" dest="call_argument [41855,41861]"/>
  <match src="primitive_type [34535,34540]" dest="primitive_type [52929,52934]"/>
  <match src="type_name [35199,35206]" dest="type_name [53593,53600]"/>
  <match src="): ) [74024,74025]" dest="): ) [62823,62824]"/>
  <match src="parameter [319,328]" dest="parameter [883,892]"/>
  <match src="parameter [54617,54632]" dest="parameter [22466,22481]"/>
  <match src="comment: // all bytes are zero [33708,33729]" dest="comment: // all bytes are zero [52102,52123]"/>
  <match src="parameter [30761,30777]" dest="parameter [49155,49171]"/>
  <match src="identifier: result [35517,35523]" dest="identifier: result [53911,53917]"/>
  <match src="type_name [804,811]" dest="type_name [1368,1375]"/>
  <match src="call_expression [83630,83718]" dest="call_expression [80672,80711]"/>
  <match src="type_name [104485,104499]" dest="type_name [43641,43655]"/>
  <match src="): ) [91657,91658]" dest="): ) [77967,77968]"/>
  <match src="type_name [6869,6876]" dest="type_name [7433,7440]"/>
  <match src="identifier: must [31588,31592]" dest="identifier: must [49982,49986]"/>
  <match src="member_expression [82706,82716]" dest="member_expression [73430,73440]"/>
  <match src="): ) [58667,58668]" dest="): ) [74157,74158]"/>
  <match src="identifier: coupons [88539,88546]" dest="identifier: coupons [30039,30046]"/>
  <match src="): ) [50097,50098]" dest="): ) [56450,56451]"/>
  <match src="): ) [85082,85083]" dest="): ) [59482,59483]"/>
  <match src="expression_statement [82141,82228]" dest="expression_statement [73773,73830]"/>
  <match src="call_argument [32413,32419]" dest="call_argument [50807,50813]"/>
  <match src="identifier: amount [100168,100174]" dest="identifier: amount [39324,39330]"/>
  <match src="internal: internal [31551,31559]" dest="internal: internal [49945,49953]"/>
  <match src="type_name [43840,43847]" dest="type_name [13973,13980]"/>
  <match src="event_paramater [81074,81087]" dest="event_paramater [71506,71519]"/>
  <match src="&gt;&gt;: &gt;&gt; [35581,35583]" dest="&gt;&gt;: &gt;&gt; [53975,53977]"/>
  <match src="identifier: sub [6789,6792]" dest="identifier: sub [7353,7356]"/>
  <match src="function: function [51880,51888]" dest="function: function [27816,27824]"/>
  <match src=":: : [46349,46350]" dest=":: : [16482,16483]"/>
  <match src="identifier: asUint256 [9581,9590]" dest="identifier: asUint256 [10145,10154]"/>
  <match src="event_paramater [55433,55448]" dest="event_paramater [23282,23297]"/>
  <match src=".: . [10171,10172]" dest=".: . [10735,10736]"/>
  <match src="identifier: sender [83093,83099]" dest="identifier: sender [73360,73366]"/>
  <match src="identifier: candidate [97667,97676]" dest="identifier: candidate [36823,36832]"/>
  <match src="}: } [45793,45794]" dest="}: } [15926,15927]"/>
  <match src="(: ( [68737,68738]" dest="(: ( [63787,63788]"/>
  <match src="{: { [92888,92889]" dest="{: { [32044,32045]"/>
  <match src="indexed: indexed [81057,81064]" dest="indexed: indexed [71489,71496]"/>
  <match src="state_mutability [96647,96651]" dest="state_mutability [35803,35807]"/>
  <match src="expression_statement [101908,101974]" dest="expression_statement [41064,41130]"/>
  <match src=",: , [19801,19802]" dest=",: , [65423,65424]"/>
  <match src="identifier: amount [17697,17703]" dest="identifier: amount [60004,60010]"/>
  <match src="string: string [28429,28435]" dest="string: string [46823,46829]"/>
  <match src="-: - [36481,36482]" dest="-: - [54875,54876]"/>
  <match src="parameter [29476,29485]" dest="parameter [47870,47879]"/>
  <match src="pure: pure [47708,47712]" dest="pure: pure [17841,17845]"/>
  <match src="call_argument [16593,16599]" dest="call_argument [57143,57149]"/>
  <match src="): ) [95646,95647]" dest="): ) [34802,34803]"/>
  <match src="identifier: getCouponExpiration [47242,47261]" dest="identifier: getCouponExpiration [17375,17394]"/>
  <match src="): ) [29429,29430]" dest="): ) [47823,47824]"/>
  <match src="}: } [47925,47926]" dest="}: } [18058,18059]"/>
  <match src="identifier: COUPON_SUPPLY_CHANGE_LIMIT [48060,48086]" dest="identifier: COUPON_SUPPLY_CHANGE_LIMIT [18193,18219]"/>
  <match src="primitive_type [95895,95902]" dest="primitive_type [35051,35058]"/>
  <match src="identifier: ASCII_ZERO [27404,27414]" dest="identifier: ASCII_ZERO [45798,45808]"/>
  <match src="call_expression [68505,68573]" dest="call_expression [68855,68873]"/>
  <match src="returns: returns [93168,93175]" dest="returns: returns [32324,32331]"/>
  <match src="number_literal: 0x0000000000000000000000000000000000000000 [44494,44536]" dest="number_literal: 0x0000000000000000000000000000000000000000 [14627,14669]"/>
  <match src=":: : [47450,47451]" dest=":: : [17583,17584]"/>
  <match src="(: ( [83765,83766]" dest="(: ( [73627,73628]"/>
  <match src="internal: internal [103542,103550]" dest="internal: internal [42698,42706]"/>
  <match src="(: ( [48758,48759]" dest="(: ( [18891,18892]"/>
  <match src="identifier: stringifyTruncated [29084,29102]" dest="identifier: stringifyTruncated [47478,47496]"/>
  <match src="member_expression [95188,95281]" dest="member_expression [34344,34437]"/>
  <match src="function_body [102482,102790]" dest="function_body [41638,41946]"/>
  <match src="member_expression [94057,94082]" dest="member_expression [33213,33238]"/>
  <match src="assignment_expression [35955,35990]" dest="assignment_expression [54349,54384]"/>
  <match src="identifier: _state [93544,93550]" dest="identifier: _state [32700,32706]"/>
  <match src="[: [ [105121,105122]" dest="[: [ [44277,44278]"/>
  <match src="uint256: uint256 [70973,70980]" dest="uint256: uint256 [66819,66826]"/>
  <match src="call_expression [96191,96240]" dest="call_expression [35347,35396]"/>
  <match src="yul_identifier [98597,98601]" dest="yul_identifier [37753,37757]"/>
  <match src="internal: internal [9242,9250]" dest="internal: internal [9806,9814]"/>
  <match src=",: , [51850,51851]" dest=",: , [27786,27787]"/>
  <match src="primitive_type [102053,102060]" dest="primitive_type [41209,41216]"/>
  <match src="return_type_definition [34749,34771]" dest="return_type_definition [53143,53165]"/>
  <match src="{: { [4699,4700]" dest="{: { [5263,5264]"/>
  <match src="identifier: candidates [104678,104688]" dest="identifier: candidates [43834,43844]"/>
  <match src="state_mutability [92952,92956]" dest="state_mutability [32108,32112]"/>
  <match src="identifier: staged [101838,101844]" dest="identifier: staged [40994,41000]"/>
  <match src="primitive_type [35063,35068]" dest="primitive_type [53457,53462]"/>
  <match src="call_argument [2016,2026]" dest="call_argument [2580,2590]"/>
  <match src="return: return [46159,46165]" dest="return: return [16292,16298]"/>
  <match src="user_defined_type [90282,90287]" dest="user_defined_type [76592,76597]"/>
  <match src="identifier: account [51843,51850]" dest="identifier: account [27779,27786]"/>
  <match src="identifier: value [8892,8897]" dest="identifier: value [9456,9461]"/>
  <match src="(: ( [54153,54154]" dest="(: ( [22002,22003]"/>
  <match src="primitive_type [102038,102045]" dest="primitive_type [41194,41201]"/>
  <match src="type_name [77755,77762]" dest="type_name [59412,59419]"/>
  <match src=".: . [81715,81716]" dest=".: . [72213,72214]"/>
  <match src=".: . [95275,95276]" dest=".: . [34431,34432]"/>
  <match src="member_expression [84034,84046]" dest="member_expression [80877,80889]"/>
  <match src="constant: constant [44462,44470]" dest="constant: constant [14595,14603]"/>
  <match src="function_body [93428,93473]" dest="function_body [32584,32629]"/>
  <match src="returns: returns [6128,6135]" dest="returns: returns [6692,6699]"/>
  <match src=".: . [94719,94720]" dest=".: . [33875,33876]"/>
  <match src="call_argument [6374,6375]" dest="call_argument [6938,6939]"/>
  <match src="(: ( [85141,85142]" dest="(: ( [59312,59313]"/>
  <match src="binary_expression [43276,43289]" dest="binary_expression [13409,13422]"/>
  <match src="call_argument [8739,8749]" dest="call_argument [9303,9313]"/>
  <match src="type_name [99451,99458]" dest="type_name [38607,38614]"/>
  <match src="identifier: reason [6902,6908]" dest="identifier: reason [7466,7472]"/>
  <match src="primitive_type [27585,27591]" dest="primitive_type [45979,45985]"/>
  <match src="parameter [28880,28896]" dest="parameter [47274,47290]"/>
  <match src=",: , [13960,13961]" dest=",: , [26949,26950]"/>
  <match src="member_expression [81645,81655]" dest="member_expression [72168,72178]"/>
  <match src="identifier: stringify [33779,33788]" dest="identifier: stringify [52173,52182]"/>
  <match src="identifier: incrementRejectFor [104993,105011]" dest="identifier: incrementRejectFor [44149,44167]"/>
  <match src="variable_declaration [105516,105531]" dest="variable_declaration [44672,44687]"/>
  <match src="type_name [74036,74043]" dest="type_name [68388,68395]"/>
  <match src="return_type_definition [96392,96409]" dest="return_type_definition [35548,35565]"/>
  <match src="identifier: account [52915,52922]" dest="identifier: account [56192,56199]"/>
  <match src="number_literal: 2 [10180,10181]" dest="number_literal: 2 [10744,10745]"/>
  <match src="): ) [82251,82252]" dest="): ) [60035,60036]"/>
  <match src="identifier: account [25771,25778]" dest="identifier: account [61028,61035]"/>
  <match src="primitive_type [33798,33805]" dest="primitive_type [52192,52199]"/>
  <match src="(: ( [97566,97567]" dest="(: ( [36722,36723]"/>
  <match src="address: address [54548,54555]" dest="address: address [22397,22404]"/>
  <match src="type_name [6730,6734]" dest="type_name [7294,7298]"/>
  <match src="parameter [48655,48662]" dest="parameter [18788,18795]"/>
  <match src="type_name [68477,68489]" dest="type_name [68814,68826]"/>
  <match src="}: } [30005,30006]" dest="}: } [48399,48400]"/>
  <match src="returns: returns [55584,55591]" dest="returns: returns [23433,23440]"/>
  <match src="(: ( [29334,29335]" dest="(: ( [47728,47729]"/>
  <match src="primitive_type [104636,104643]" dest="primitive_type [43792,43799]"/>
  <match src="(: ( [45718,45719]" dest="(: ( [15851,15852]"/>
  <match src="identifier: MINIMUM_LIQUIDITY [55550,55567]" dest="identifier: MINIMUM_LIQUIDITY [23399,23416]"/>
  <match src="type_name [18302,18309]" dest="type_name [20035,20042]"/>
  <match src="(: ( [30927,30928]" dest="(: ( [49321,49322]"/>
  <match src="returns: returns [13509,13516]" dest="returns: returns [26498,26505]"/>
  <match src="type_name [6255,6262]" dest="type_name [6819,6826]"/>
  <match src="primitive_type [94414,94421]" dest="primitive_type [33570,33577]"/>
  <match src="type_name [45858,45865]" dest="type_name [15991,15998]"/>
  <match src="call_argument [35018,35035]" dest="call_argument [53412,53429]"/>
  <match src="contract_declaration [63785,63954]" dest="contract_declaration [28573,28742]"/>
  <match src="return_statement [93438,93467]" dest="return_statement [32594,32623]"/>
  <match src="(: ( [12328,12329]" dest="(: ( [25317,25318]"/>
  <match src="type_name [21856,21863]" dest="type_name [65040,65047]"/>
  <match src="array_access [100955,100979]" dest="array_access [40111,40135]"/>
  <match src="uint256: uint256 [101756,101763]" dest="uint256: uint256 [40912,40919]"/>
  <match src="type_name [98506,98513]" dest="type_name [37662,37669]"/>
  <match src="state_variable_declaration [27432,27474]" dest="state_variable_declaration [45826,45868]"/>
  <match src="primitive_type [55187,55191]" dest="primitive_type [23036,23040]"/>
  <match src="user_defined_type [51762,51768]" dest="user_defined_type [27698,27704]"/>
  <match src="type_name [53492,53499]" dest="type_name [61449,61456]"/>
  <match src="expression_statement [79440,79494]" dest="expression_statement [83873,83933]"/>
  <match src="): ) [44435,44436]" dest="): ) [14568,14569]"/>
  <match src="member_expression [83879,83889]" dest="member_expression [72564,72574]"/>
  <match src="identifier: epochs [103779,103785]" dest="identifier: epochs [42935,42941]"/>
  <match src="uint256: uint256 [20450,20457]" dest="uint256: uint256 [59596,59603]"/>
  <match src="identifier: add [101681,101684]" dest="identifier: add [40837,40840]"/>
  <match src="function_definition [90997,91310]" dest="function_definition [77307,77620]"/>
  <match src="{: { [96809,96810]" dest="{: { [35965,35966]"/>
  <match src="expression_statement [106941,107073]" dest="expression_statement [70283,70415]"/>
  <match src="(: ( [93517,93518]" dest="(: ( [32673,32674]"/>
  <match src="using_directive [80753,80780]" dest="using_directive [71386,71413]"/>
  <match src="(: ( [31801,31802]" dest="(: ( [50195,50196]"/>
  <match src="parameter [104466,104483]" dest="parameter [43622,43639]"/>
  <match src="function: function [47233,47241]" dest="function: function [17366,17374]"/>
  <match src="function_definition [44947,45169]" dest="function_definition [15080,15302]"/>
  <match src="call_argument [59985,60010]" dest="call_argument [84255,84270]"/>
  <match src="identifier: balance [93958,93965]" dest="identifier: balance [33114,33121]"/>
  <match src="): ) [96376,96377]" dest="): ) [35532,35533]"/>
  <match src="identifier: b [8015,8016]" dest="identifier: b [8579,8580]"/>
  <match src="identifier: D256 [9350,9354]" dest="identifier: D256 [9914,9918]"/>
  <match src="identifier: target [9775,9781]" dest="identifier: target [10339,10345]"/>
  <match src="+: + [33452,33453]" dest="+: + [51846,51847]"/>
  <match src="visibility [102847,102855]" dest="visibility [42003,42011]"/>
  <match src=",: , [102697,102698]" dest=",: , [41853,41854]"/>
  <match src="function: function [1204,1212]" dest="function: function [1768,1776]"/>
  <match src="indexed: indexed [13970,13977]" dest="indexed: indexed [26959,26966]"/>
  <match src="identifier: epoch [102567,102572]" dest="identifier: epoch [41723,41728]"/>
  <match src=".: . [45511,45512]" dest=".: . [15644,15645]"/>
  <match src="&quot;: &quot; [50995,50996]" dest="&quot;: &quot; [65658,65659]"/>
  <match src="identifier: implementation [107171,107185]" dest="identifier: implementation [70513,70527]"/>
  <match src="(: ( [54434,54435]" dest="(: ( [22283,22284]"/>
  <match src="identifier: name [54223,54227]" dest="identifier: name [22072,22076]"/>
  <match src="member_expression [83911,83923]" dest="member_expression [81821,81833]"/>
  <match src="parameter [96800,96807]" dest="parameter [35956,35963]"/>
  <match src="(: ( [33131,33132]" dest="(: ( [51525,51526]"/>
  <match src="(: ( [95313,95314]" dest="(: ( [34469,34470]"/>
  <match src="identifier: amount [100232,100238]" dest="identifier: amount [39388,39394]"/>
  <match src="member_expression [84592,84602]" dest="member_expression [72892,72902]"/>
  <match src="identifier: value [7634,7639]" dest="identifier: value [8198,8203]"/>
  <match src="identifier: totalBondedAt [97050,97063]" dest="identifier: totalBondedAt [36206,36219]"/>
  <match src="primitive_type [55646,55653]" dest="primitive_type [23495,23502]"/>
  <match src="): ) [78087,78088]" dest="): ) [61794,61795]"/>
  <match src="identifier: _state [103772,103778]" dest="identifier: _state [42928,42934]"/>
  <match src="(: ( [8718,8719]" dest="(: ( [9282,9283]"/>
  <match src="memory: memory [35874,35880]" dest="memory: memory [54268,54274]"/>
  <match src="state_variable_declaration [27387,27420]" dest="state_variable_declaration [45781,45814]"/>
  <match src="uint256: uint256 [74017,74024]" dest="uint256: uint256 [62816,62823]"/>
  <match src="function_body [103700,103833]" dest="function_body [42856,42989]"/>
  <match src="): ) [81601,81602]" dest="): ) [72124,72125]"/>
  <match src="(: ( [106647,106648]" dest="(: ( [69989,69990]"/>
  <match src="call_expression [102321,102355]" dest="call_expression [41477,41511]"/>
  <match src="comment: /**      * @dev Sets the implementation address of the proxy.      * @param newImplementation Address of the new implementation.      */ [91316,91452]" dest="comment: /**      * @dev Sets the implementation address of the proxy.      * @param newImplementation Address of the new implementation.      */ [77626,77762]"/>
  <match src="&lt;: &lt; [36729,36730]" dest="&lt;: &lt; [55123,55124]"/>
  <match src="uint256: uint256 [93925,93932]" dest="uint256: uint256 [33081,33088]"/>
  <match src="return: return [6757,6763]" dest="return: return [7321,7327]"/>
  <match src="parameter [105227,105247]" dest="parameter [44383,44403]"/>
  <match src="variable_declaration [82394,82426]" dest="variable_declaration [67810,67826]"/>
  <match src="identifier: ADVANCE_INCENTIVE [43165,43182]" dest="identifier: ADVANCE_INCENTIVE [13298,13315]"/>
  <match src="identifier: balance [101294,101301]" dest="identifier: balance [40450,40457]"/>
  <match src="identifier: State [89370,89375]" dest="identifier: State [30870,30875]"/>
  <match src="expression_statement [21184,21274]" dest="expression_statement [56933,57012]"/>
  <match src="identifier: sender [81997,82003]" dest="identifier: sender [72481,72487]"/>
  <match src="identifier: price0Cumulative [68162,68178]" dest="identifier: newRedeemable [68013,68026]"/>
  <match src="type_name [33980,33987]" dest="type_name [52374,52381]"/>
  <match src="visibility [99674,99682]" dest="visibility [38830,38838]"/>
  <match src="call_expression [7705,7720]" dest="call_expression [8269,8284]"/>
  <match src="visibility [101215,101223]" dest="visibility [40371,40379]"/>
  <match src="member_expression [6185,6190]" dest="member_expression [6749,6754]"/>
  <match src="identifier: msg [82274,82277]" dest="identifier: msg [82484,82487]"/>
  <match src="type_name [42147,42154]" dest="type_name [12280,12287]"/>
  <match src="identifier: char [36354,36358]" dest="identifier: char [54748,54752]"/>
  <match src="state_mutability [47379,47383]" dest="state_mutability [17512,17516]"/>
  <match src="array_access [102492,102516]" dest="array_access [41648,41672]"/>
  <match src="call_expression [95955,95983]" dest="call_expression [35111,35139]"/>
  <match src="identifier: b [10170,10171]" dest="identifier: b [10734,10735]"/>
  <match src="type_name [55231,55238]" dest="type_name [23080,23087]"/>
  <match src="primitive_type [78864,78871]" dest="primitive_type [61426,61433]"/>
  <match src="address: address [54768,54775]" dest="address: address [22617,22624]"/>
  <match src="variable_declaration [84310,84325]" dest="variable_declaration [62034,62056]"/>
  <match src="constant: constant [44360,44368]" dest="constant: constant [14493,14501]"/>
  <match src="identifier: mint [51889,51893]" dest="identifier: mint [27825,27829]"/>
  <match src="parameter [97527,97544]" dest="parameter [36683,36700]"/>
  <match src="type_name [94031,94038]" dest="type_name [33187,33194]"/>
  <match src="variable_declaration_statement [33132,33147]" dest="variable_declaration_statement [51526,51541]"/>
  <match src="identifier: must [27935,27939]" dest="identifier: must [46329,46333]"/>
  <match src="type_name [55079,55083]" dest="type_name [22928,22932]"/>
  <match src="identifier: epochs [96694,96700]" dest="identifier: epochs [35850,35856]"/>
  <match src="type_name [8278,8282]" dest="type_name [8842,8846]"/>
  <match src="parameter [46689,46696]" dest="parameter [16822,16829]"/>
  <match src="internal: internal [103891,103899]" dest="internal: internal [43047,43055]"/>
  <match src="parameter [78987,79006]" dest="parameter [63749,63768]"/>
  <match src="type_name [79187,79194]" dest="type_name [79974,79981]"/>
  <match src="variable_declaration [83331,83350]" dest="variable_declaration [64054,64067]"/>
  <match src="parameter [93925,93932]" dest="parameter [33081,33088]"/>
  <match src="identifier: reason [31508,31514]" dest="identifier: reason [49902,49908]"/>
  <match src="number_literal: 3600 [43899,43903]" dest="number_literal: 3600 [14032,14036]"/>
  <match src="return: return [44797,44803]" dest="return: return [14930,14936]"/>
  <match src="parameter [103671,103689]" dest="parameter [42827,42845]"/>
  <match src="identifier: payloadA [28674,28682]" dest="identifier: payloadA [47068,47076]"/>
  <match src="): ) [9160,9161]" dest="): ) [9724,9725]"/>
  <match src="function: function [29453,29461]" dest="function: function [47847,47855]"/>
  <match src="assignment_expression [35379,35423]" dest="assignment_expression [53773,53817]"/>
  <match src=",: , [29531,29532]" dest=",: , [47925,47926]"/>
  <match src="primitive_type [6869,6876]" dest="primitive_type [7433,7440]"/>
  <match src=".: . [46337,46338]" dest=".: . [16470,16471]"/>
  <match src="variable_declaration_statement [35868,35904]" dest="variable_declaration_statement [54262,54298]"/>
  <match src="): ) [28072,28073]" dest="): ) [46466,46467]"/>
  <match src="state_mutability [47833,47837]" dest="state_mutability [17966,17970]"/>
  <match src="comment: // 1% - higher proposal threshold [42732,42765]" dest="comment: // 1% - higher proposal threshold [12865,12898]"/>
  <match src="(: ( [96049,96050]" dest="(: ( [35205,35206]"/>
  <match src="internal: internal [11081,11089]" dest="internal: internal [56160,56168]"/>
  <match src="&quot;: &quot; [106795,106796]" dest="&quot;: &quot; [70137,70138]"/>
  <match src="function: function [46391,46399]" dest="function: function [16524,16532]"/>
  <match src="comment: /**      * @dev Moves `amount` tokens from `sender` to `recipient` using the      * allowance mechanism. `amount` is then deducted from the caller's      * allowance.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [13126,13422]" dest="comment: /**      * @dev Moves `amount` tokens from `sender` to `recipient` using the      * allowance mechanism. `amount` is then deducted from the caller's      * allowance.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [26115,26411]"/>
  <match src=",: , [9302,9303]" dest=",: , [9866,9867]"/>
  <match src="number_literal: 15e15 [43988,43993]" dest="number_literal: 15e15 [14121,14126]"/>
  <match src="primitive_type [80990,80997]" dest="primitive_type [71419,71426]"/>
  <match src="return_statement [34652,34664]" dest="return_statement [53046,53058]"/>
  <match src="identifier: allowance [54523,54532]" dest="identifier: allowance [22372,22381]"/>
  <match src=",: , [20132,20133]" dest=",: , [65978,65979]"/>
  <match src="&quot;: &quot; [83584,83585]" dest="&quot;: &quot; [81645,81646]"/>
  <match src="identifier: RPAREN [29370,29376]" dest="identifier: RPAREN [47764,47770]"/>
  <match src="=: = [35439,35440]" dest="=: = [53833,53834]"/>
  <match src="function_definition [97041,97160]" dest="function_definition [36197,36316]"/>
  <match src="type_name [43941,43948]" dest="type_name [14074,14081]"/>
  <match src="=: = [42914,42915]" dest="=: = [13047,13048]"/>
  <match src="primitive_type [96165,96172]" dest="primitive_type [35321,35328]"/>
  <match src="visibility [79008,79016]" dest="visibility [57513,57521]"/>
  <match src="primitive_type [98059,98066]" dest="primitive_type [37215,37222]"/>
  <match src="identifier: _state [100432,100438]" dest="identifier: _state [39588,39594]"/>
  <match src="call_argument [101389,101395]" dest="call_argument [40545,40551]"/>
  <match src="return: return [47741,47747]" dest="return: return [17874,17880]"/>
  <match src="(: ( [82371,82372]" dest="(: ( [73207,73208]"/>
  <match src="type_name [48154,48161]" dest="type_name [18287,18294]"/>
  <match src="(: ( [84648,84649]" dest="(: ( [64238,64239]"/>
  <match src="identifier: amount [100526,100532]" dest="identifier: amount [39682,39688]"/>
  <match src="identifier: reason [105354,105360]" dest="identifier: reason [44510,44516]"/>
  <match src="identifier: token0 [55669,55675]" dest="identifier: token0 [23518,23524]"/>
  <match src="return_type_definition [45342,45359]" dest="return_type_definition [15475,15492]"/>
  <match src=".: . [84595,84596]" dest=".: . [72895,72896]"/>
  <match src="visibility [43417,43424]" dest="visibility [13550,13557]"/>
  <match src="(: ( [47043,47044]" dest="(: ( [17176,17177]"/>
  <match src="(: ( [9877,9878]" dest="(: ( [10441,10442]"/>
  <match src="identifier: candidate [97611,97620]" dest="identifier: candidate [36767,36776]"/>
  <match src="update_expression [36176,36179]" dest="update_expression [54570,54573]"/>
  <match src="parameter [21839,21854]" dest="parameter [65023,65038]"/>
  <match src="function_body [7165,7223]" dest="function_body [7729,7787]"/>
  <match src="member_expression [102646,102674]" dest="member_expression [41802,41830]"/>
  <match src="function_body [813,880]" dest="function_body [1377,1444]"/>
  <match src="identifier: allowance [93246,93255]" dest="identifier: allowance [32402,32411]"/>
  <match src="call_argument [32394,32420]" dest="call_argument [50788,50814]"/>
  <match src="emit: emit [22094,22098]" dest="emit: emit [65224,65228]"/>
  <match src="=: = [27523,27524]" dest="=: = [45917,45918]"/>
  <match src="visibility [55623,55631]" dest="visibility [23472,23480]"/>
  <match src="visibility [98485,98491]" dest="visibility [37641,37647]"/>
  <match src="visibility [86661,86669]" dest="visibility [75171,75179]"/>
  <match src="identifier: amount0 [55260,55267]" dest="identifier: amount0 [23109,23116]"/>
  <match src="return_statement [4049,4094]" dest="return_statement [4613,4658]"/>
  <match src="(: ( [94116,94117]" dest="(: ( [33272,33273]"/>
  <match src="variable_declaration [67631,67650]" dest="variable_declaration [73887,73902]"/>
  <match src="visibility [9848,9855]" dest="visibility [10412,10419]"/>
  <match src="array_access [103772,103797]" dest="array_access [42928,42953]"/>
  <match src="function: function [96598,96606]" dest="function: function [35754,35762]"/>
  <match src="function_definition [82305,82960]" dest="function_definition [72508,73113]"/>
  <match src="return_statement [94675,94737]" dest="return_statement [33831,33893]"/>
  <match src=".: . [96693,96694]" dest=".: . [35849,35850]"/>
  <match src="): ) [84612,84613]" dest="): ) [72911,72912]"/>
  <match src="comment: //  [44336,44339]" dest="comment: //  [14469,14472]"/>
  <match src="type_name [102814,102821]" dest="type_name [41970,41977]"/>
  <match src="identifier: candidate [105728,105737]" dest="identifier: candidate [44884,44893]"/>
  <match src="primitive_type [88221,88228]" dest="primitive_type [29721,29728]"/>
  <match src="function: function [55660,55668]" dest="function: function [23509,23517]"/>
  <match src="call_argument [81847,81852]" dest="call_argument [84015,84046]"/>
  <match src="): ) [85401,85402]" dest="): ) [81329,81330]"/>
  <match src="): ) [9842,9843]" dest="): ) [10406,10407]"/>
  <match src="identifier: balanceOf [11679,11688]" dest="identifier: balanceOf [24668,24677]"/>
  <match src="]: ] [35396,35397]" dest="]: ] [53790,53791]"/>
  <match src="call_argument [44494,44536]" dest="call_argument [14627,14669]"/>
  <match src="memory: memory [34147,34153]" dest="memory: memory [52541,52547]"/>
  <match src="visibility [41725,41732]" dest="visibility [11858,11865]"/>
  <match src=".: . [102335,102336]" dest=".: . [41491,41492]"/>
  <match src="(: ( [47599,47600]" dest="(: ( [17732,17733]"/>
  <match src="visibility [54412,54420]" dest="visibility [22261,22269]"/>
  <match src="member_expression [103710,103723]" dest="member_expression [42866,42879]"/>
  <match src="(: ( [33398,33399]" dest="(: ( [51792,51793]"/>
  <match src="member_expression [101908,101929]" dest="member_expression [41064,41085]"/>
  <match src="type_name [71048,71055]" dest="type_name [71750,71757]"/>
  <match src="user_defined_type [93420,93426]" dest="user_defined_type [32576,32582]"/>
  <match src="expression_statement [7698,7721]" dest="expression_statement [8262,8285]"/>
  <match src="type_name [95639,95646]" dest="type_name [34795,34802]"/>
  <match src="variable_declaration [1981,1990]" dest="variable_declaration [2545,2554]"/>
  <match src="member_expression [82931,82942]" dest="member_expression [74193,74204]"/>
  <match src="return: return [46472,46478]" dest="return: return [16605,16611]"/>
  <match src="[: [ [102524,102525]" dest="[: [ [41680,41681]"/>
  <match src="returns: returns [3267,3274]" dest="returns: returns [3831,3838]"/>
  <match src="(: ( [105143,105144]" dest="(: ( [44299,44300]"/>
  <match src="identifier: file [31721,31725]" dest="identifier: file [50115,50119]"/>
  <match src="address: address [104617,104624]" dest="address: address [43773,43780]"/>
  <match src="member_expression [95820,95832]" dest="member_expression [34976,34988]"/>
  <match src="[: [ [36006,36007]" dest="[: [ [54400,54401]"/>
  <match src="=: = [43821,43822]" dest="=: = [13954,13955]"/>
  <match src="identifier: spender [93279,93286]" dest="identifier: spender [32435,32442]"/>
  <match src="identifier: sender [83282,83288]" dest="identifier: sender [80005,80011]"/>
  <match src="call_argument [85302,85348]" dest="call_argument [81211,81279]"/>
  <match src="constant: constant [90529,90537]" dest="constant: constant [76839,76847]"/>
  <match src=",: , [81845,81846]" dest=",: , [84013,84014]"/>
  <match src=".: . [103477,103478]" dest=".: . [42633,42634]"/>
  <match src="&quot;: &quot; [21236,21237]" dest="&quot;: &quot; [56966,56967]"/>
  <match src="array_access [105758,105786]" dest="array_access [44914,44942]"/>
  <match src="emit_statement [82909,82954]" dest="emit_statement [74169,74225]"/>
  <match src="): ) [29902,29903]" dest="): ) [48296,48297]"/>
  <match src="call_expression [82793,82873]" dest="call_expression [72959,73042]"/>
  <match src="identifier: value [6991,6996]" dest="identifier: value [7555,7560]"/>
  <match src="function: function [77989,77997]" dest="function: function [61495,61503]"/>
  <match src="primitive_type [68154,68161]" dest="primitive_type [68005,68012]"/>
  <match src="identifier: Decimal [66861,66868]" dest="identifier: Decimal [69028,69035]"/>
  <match src="]: ] [101605,101606]" dest="]: ] [40761,40762]"/>
  <match src="user_defined_type [47549,47561]" dest="user_defined_type [17682,17694]"/>
  <match src="identifier: sub [6830,6833]" dest="identifier: sub [7394,7397]"/>
  <match src="primitive_type [12329,12336]" dest="primitive_type [25318,25325]"/>
  <match src="identifier: candidates [98000,98010]" dest="identifier: candidates [37156,37166]"/>
  <match src="): ) [97077,97078]" dest="): ) [36233,36234]"/>
  <match src="call_argument [82706,82716]" dest="call_argument [73430,73440]"/>
  <match src="}: } [92998,92999]" dest="}: } [32154,32155]"/>
  <match src=".: . [82709,82710]" dest=".: . [73433,73434]"/>
  <match src="{: { [102856,102857]" dest="{: { [42012,42013]"/>
  <match src="identifier: msg [82706,82709]" dest="identifier: msg [73430,73433]"/>
  <match src="state_mutability [97086,97090]" dest="state_mutability [36242,36246]"/>
  <match src="pure: pure [7130,7134]" dest="pure: pure [7694,7698]"/>
  <match src="identifier: tokenB [79652,79658]" dest="identifier: candidate [81791,81800]"/>
  <match src="parameter [38271,38286]" dest="parameter [65345,65358]"/>
  <match src="visibility [45210,45218]" dest="visibility [15343,15351]"/>
  <match src="address: address [26048,26055]" dest="address: address [56633,56640]"/>
  <match src="primitive_type [82982,82989]" dest="primitive_type [73135,73142]"/>
  <match src=".: . [94071,94072]" dest=".: . [33227,33228]"/>
  <match src="return: return [45030,45036]" dest="return: return [15163,15169]"/>
  <match src=",: , [30777,30778]" dest=",: , [49171,49172]"/>
  <match src="identifier: that [29462,29466]" dest="identifier: that [47856,47860]"/>
  <match src=".: . [96220,96221]" dest=".: . [35376,35377]"/>
  <match src=".: . [32274,32275]" dest=".: . [50668,50669]"/>
  <match src="identifier: amount1 [55206,55213]" dest="identifier: amount1 [23055,23062]"/>
  <match src="): ) [94249,94250]" dest="): ) [33405,33406]"/>
  <match src="public: public [93399,93405]" dest="public: public [32555,32561]"/>
  <match src=".: . [103251,103252]" dest=".: . [42407,42408]"/>
  <match src="function_definition [63904,63952]" dest="function_definition [28692,28740]"/>
  <match src="(: ( [10090,10091]" dest="(: ( [10654,10655]"/>
  <match src=".: . [8122,8123]" dest=".: . [8686,8687]"/>
  <match src="function_body [82353,82960]" dest="function_body [72576,73113]"/>
  <match src="}: } [88839,88840]" dest="}: } [30339,30340]"/>
  <match src=".: . [67550,67551]" dest=".: . [21551,21552]"/>
  <match src="member_expression [93203,93224]" dest="member_expression [32359,32380]"/>
  <match src="identifier: Storage [88851,88858]" dest="identifier: Storage [30351,30358]"/>
  <match src="identifier: _state [100259,100265]" dest="identifier: _state [39415,39421]"/>
  <match src="identifier: name [92742,92746]" dest="identifier: name [31898,31902]"/>
  <match src="number_literal: 87 [27471,27473]" dest="number_literal: 87 [45865,45867]"/>
  <match src="identifier: add [6450,6453]" dest="identifier: add [7014,7017]"/>
  <match src="}: } [46224,46225]" dest="}: } [16357,16358]"/>
  <match src="parameter [54634,54644]" dest="parameter [22483,22493]"/>
  <match src="): ) [81562,81563]" dest="): ) [72085,72086]"/>
  <match src="parameter [100681,100701]" dest="parameter [39837,39857]"/>
  <match src="variable_declaration_statement [95914,95984]" dest="variable_declaration_statement [35070,35140]"/>
  <match src="{: { [95803,95804]" dest="{: { [34959,34960]"/>
  <match src="parameter [7977,7993]" dest="parameter [8541,8557]"/>
  <match src="type_name [103140,103147]" dest="type_name [42296,42303]"/>
  <match src="]: ] [102210,102211]" dest="]: ] [41366,41367]"/>
  <match src=".: . [104553,104554]" dest=".: . [43709,43710]"/>
  <match src="identifier: votes [88800,88805]" dest="identifier: votes [30300,30305]"/>
  <match src="identifier: value [82181,82186]" dest="identifier: value [72943,72948]"/>
  <match src="inheritance_specifier [106523,106530]" dest="inheritance_specifier [69865,69872]"/>
  <match src="identifier: Decimal [47885,47892]" dest="identifier: Decimal [18018,18025]"/>
  <match src="expression_statement [58617,58669]" dest="expression_statement [74086,74159]"/>
  <match src="type_name [54154,54161]" dest="type_name [22003,22010]"/>
  <match src="parameter [6950,6961]" dest="parameter [7514,7525]"/>
  <match src="identifier: price1CumulativeLast [55959,55979]" dest="identifier: price1CumulativeLast [23808,23828]"/>
  <match src="primitive_type [99431,99438]" dest="primitive_type [38587,38594]"/>
  <match src="memory: memory [67556,67562]" dest="memory: memory [21557,21563]"/>
  <match src="{: { [74026,74027]" dest="{: { [68286,68287]"/>
  <match src="identifier: impl [98514,98518]" dest="identifier: impl [37670,37674]"/>
  <match src="parameter [51943,51947]" dest="parameter [27879,27883]"/>
  <match src="function: function [100840,100848]" dest="function: function [39996,40004]"/>
  <match src="pragma: pragma [0,6]" dest="pragma: pragma [0,6]"/>
  <match src="function_definition [51880,51949]" dest="function_definition [27816,27885]"/>
  <match src="member_expression [102191,102231]" dest="member_expression [41347,41387]"/>
  <match src="uint256: uint256 [43515,43522]" dest="uint256: uint256 [13648,13655]"/>
  <match src="): ) [81370,81371]" dest="): ) [71675,71676]"/>
  <match src="identifier: EpochStrategy [42045,42058]" dest="identifier: EpochStrategy [12178,12191]"/>
  <match src="member_expression [8341,8348]" dest="member_expression [8905,8912]"/>
  <match src="): ) [13763,13764]" dest="): ) [26752,26753]"/>
  <match src="[: [ [102162,102163]" dest="[: [ [41318,41319]"/>
  <match src="type_name [94376,94383]" dest="type_name [33532,33539]"/>
  <match src="member_expression [96826,96863]" dest="member_expression [35982,36019]"/>
  <match src="function_definition [30012,30667]" dest="function_definition [48406,49061]"/>
  <match src="member_expression [103229,103244]" dest="member_expression [42385,42400]"/>
  <match src="call_argument [82188,82226]" dest="call_argument [82061,82075]"/>
  <match src="function_body [98252,98314]" dest="function_body [37408,37470]"/>
  <match src="parameter [8003,8016]" dest="parameter [8567,8580]"/>
  <match src="type_name [48001,48013]" dest="type_name [18134,18146]"/>
  <match src="type_name [96102,96125]" dest="type_name [35258,35281]"/>
  <match src="assignment_expression [103035,103092]" dest="assignment_expression [42191,42248]"/>
  <match src="call_argument [50085,50098]" dest="call_argument [56438,56451]"/>
  <match src="visibility [103016,103024]" dest="visibility [42172,42180]"/>
  <match src="identifier: amount [76600,76606]" dest="identifier: amount [56753,56759]"/>
  <match src="}: } [97299,97300]" dest="}: } [36455,36456]"/>
  <match src="): ) [69220,69221]" dest="): ) [62621,62622]"/>
  <match src="identifier: account [101747,101754]" dest="identifier: account [40903,40910]"/>
  <match src="identifier: account [101564,101571]" dest="identifier: account [40720,40727]"/>
  <match src="address: address [85094,85101]" dest="address: address [59489,59496]"/>
  <match src="identifier: decrementRejectFor [105173,105191]" dest="identifier: decrementRejectFor [44329,44347]"/>
  <match src="call_argument [83449,83459]" dest="call_argument [73983,73993]"/>
  <match src="expression_statement [34624,34632]" dest="expression_statement [53018,53026]"/>
  <match src="comment: // contracts then. [87085,87103]" dest="comment: // contracts then. [75595,75613]"/>
  <match src="function: function [54389,54397]" dest="function: function [22238,22246]"/>
  <match src="call_argument [83517,83529]" dest="call_argument [73480,73486]"/>
  <match src="visibility [6919,6927]" dest="visibility [7483,7491]"/>
  <match src="parameter [48554,48561]" dest="parameter [18687,18694]"/>
  <match src="(: ( [41763,41764]" dest="(: ( [11896,11897]"/>
  <match src="primitive_type [1981,1988]" dest="primitive_type [2545,2552]"/>
  <match src="call_expression [83353,83381]" dest="call_expression [73373,73394]"/>
  <match src=".: . [104089,104090]" dest=".: . [43245,43246]"/>
  <match src=",: , [9366,9367]" dest=",: , [9930,9931]"/>
  <match src="comment: /* solium-disable-next-line security/no-modify-for-iter-var */ [33226,33288]" dest="comment: /* solium-disable-next-line security/no-modify-for-iter-var */ [51620,51682]"/>
  <match src="string: string [100077,100083]" dest="string: string [39233,39239]"/>
  <match src="emit: emit [101077,101081]" dest="emit: emit [40233,40237]"/>
  <match src="memory: memory [35720,35726]" dest="memory: memory [54114,54120]"/>
  <match src="type_name [9767,9774]" dest="type_name [10331,10338]"/>
  <match src="member_expression [101582,101597]" dest="member_expression [40738,40753]"/>
  <match src="number_literal: 4 [35446,35447]" dest="number_literal: 4 [53840,53841]"/>
  <match src="new: new [34161,34164]" dest="new: new [52555,52558]"/>
  <match src="call_argument [21367,21373]" dest="call_argument [84426,84432]"/>
  <match src="identifier: value [5760,5765]" dest="identifier: value [6324,6329]"/>
  <match src="primitive_type [95485,95492]" dest="primitive_type [34641,34648]"/>
  <match src="parameter [96519,96526]" dest="parameter [35675,35682]"/>
  <match src="identifier: that [30021,30025]" dest="identifier: that [48415,48419]"/>
  <match src="identifier: msg [83449,83452]" dest="identifier: msg [73983,73986]"/>
  <match src="uint: uint [54705,54709]" dest="uint: uint [22554,22558]"/>
  <match src="address: address [99530,99537]" dest="address: address [38686,38693]"/>
  <match src="type_name [8797,8801]" dest="type_name [9361,9365]"/>
  <match src="user_defined_type [67543,67555]" dest="user_defined_type [21544,21556]"/>
  <match src="false: false [99847,99852]" dest="false: false [39003,39008]"/>
  <match src="identifier: INITIAL_STAKE_MULTIPLE [41957,41979]" dest="identifier: INITIAL_STAKE_MULTIPLE [12090,12112]"/>
  <match src="type_name [6679,6686]" dest="type_name [7243,7250]"/>
  <match src="=: = [103750,103751]" dest="=: = [42906,42907]"/>
  <match src="): ) [79100,79101]" dest="): ) [58876,58877]"/>
  <match src="primitive_type [100665,100672]" dest="primitive_type [39821,39828]"/>
  <match src="binary_expression [2016,2026]" dest="binary_expression [2580,2590]"/>
  <match src="call_expression [32998,33021]" dest="call_expression [51392,51415]"/>
  <match src="function_body [96670,96733]" dest="function_body [35826,35889]"/>
  <match src="identifier: period [42124,42130]" dest="identifier: period [12257,12263]"/>
  <match src="identifier: msg [81645,81648]" dest="identifier: msg [72168,72171]"/>
  <match src="parameter [54548,54563]" dest="parameter [22397,22412]"/>
  <match src="parameter [5995,6006]" dest="parameter [6559,6570]"/>
  <match src="function_body [100712,100802]" dest="function_body [39868,39958]"/>
  <match src="parameter [55115,55124]" dest="parameter [22964,22973]"/>
  <match src="view: view [93504,93508]" dest="view: view [32660,32664]"/>
  <match src="identifier: ethic [108725,108730]" dest="identifier: ethic [56903,56908]"/>
  <match src="identifier: INITIAL_STAKE_MULTIPLE [45259,45281]" dest="identifier: INITIAL_STAKE_MULTIPLE [15392,15414]"/>
  <match src=",: , [25953,25954]" dest=",: , [80249,80250]"/>
  <match src="bool: bool [9265,9269]" dest="bool: bool [9829,9833]"/>
  <match src="if: if [30185,30187]" dest="if: if [48579,48581]"/>
  <match src="call_expression [2629,2668]" dest="call_expression [3193,3232]"/>
  <match src="identifier: _state [102716,102722]" dest="identifier: _state [41872,41878]"/>
  <match src="primitive_type [38271,38278]" dest="primitive_type [65345,65352]"/>
  <match src="type_name [56191,56195]" dest="type_name [24040,24044]"/>
  <match src="member_expression [104710,104746]" dest="member_expression [43866,43902]"/>
  <match src="}: } [51950,51951]" dest="}: } [27886,27887]"/>
  <match src="parameter [3214,3223]" dest="parameter [3778,3787]"/>
  <match src="parameter [56396,56403]" dest="parameter [24245,24252]"/>
  <match src="identifier: amount [51919,51925]" dest="identifier: amount [27855,27861]"/>
  <match src="=: = [34934,34935]" dest="=: = [53328,53329]"/>
  <match src="binary_expression [35405,35422]" dest="binary_expression [53799,53816]"/>
  <match src="(: ( [103604,103605]" dest="(: ( [42760,42761]"/>
  <match src="(: ( [30188,30189]" dest="(: ( [48582,48583]"/>
  <match src="member_expression [91178,91201]" dest="member_expression [77488,77511]"/>
  <match src="address: address [102814,102821]" dest="address: address [41970,41977]"/>
  <match src="{: { [106665,106666]" dest="{: { [70007,70008]"/>
  <match src="type_name [102038,102045]" dest="type_name [41194,41201]"/>
  <match src="returns: returns [9623,9630]" dest="returns: returns [10187,10194]"/>
  <match src="view: view [93406,93410]" dest="view: view [32562,32566]"/>
  <match src="assignment_expression [104058,104137]" dest="assignment_expression [43214,43293]"/>
  <match src="(: ( [84451,84452]" dest="(: ( [81062,81063]"/>
  <match src="(: ( [47286,47287]" dest="(: ( [17419,17420]"/>
  <match src="(: ( [67619,67620]" dest="(: ( [67128,67129]"/>
  <match src="identifier: candidate [105568,105577]" dest="identifier: candidate [44724,44733]"/>
  <match src="identifier: GOVERNANCE_SUPER_MAJORITY [42795,42820]" dest="identifier: GOVERNANCE_SUPER_MAJORITY [12928,12953]"/>
  <match src="identifier: Withdraw [81100,81108]" dest="identifier: Withdraw [71532,71540]"/>
  <match src="identifier: _state [94932,94938]" dest="identifier: _state [34088,34094]"/>
  <match src="member_expression [100410,100424]" dest="member_expression [39566,39580]"/>
  <match src="identifier: mul [6605,6608]" dest="identifier: mul [7169,7172]"/>
  <match src="identifier: candidates [97600,97610]" dest="identifier: candidates [36756,36766]"/>
  <match src="uint256: uint256 [45744,45751]" dest="uint256: uint256 [15877,15884]"/>
  <match src="public: public [98485,98491]" dest="public: public [37641,37647]"/>
  <match src="type_name [7071,7075]" dest="type_name [7635,7639]"/>
  <match src="identifier: Decimal [47549,47556]" dest="identifier: Decimal [17682,17689]"/>
  <match src="string_literal [22498,22536]" dest="string_literal [71895,71916]"/>
  <match src="function: function [51775,51783]" dest="function: function [27711,27719]"/>
  <match src="(: ( [84717,84718]" dest="(: ( [56829,56830]"/>
  <match src="call_expression [79522,79542]" dest="call_expression [59934,59941]"/>
  <match src="identifier: epochs [104154,104160]" dest="identifier: epochs [43310,43316]"/>
  <match src="visibility [91511,91518]" dest="visibility [77821,77828]"/>
  <match src="member_expression [104671,104688]" dest="member_expression [43827,43844]"/>
  <match src="{: { [19763,19764]" dest="{: { [65385,65386]"/>
  <match src="}: } [21380,21381]" dest="}: } [57042,57043]"/>
  <match src="view: view [55742,55746]" dest="view: view [23591,23595]"/>
  <match src="address: address [101430,101437]" dest="address: address [40586,40593]"/>
  <match src="function_definition [56016,56062]" dest="function_definition [23865,23911]"/>
  <match src="(: ( [19780,19781]" dest="(: ( [65402,65403]"/>
  <match src="call_argument [85158,85162]" dest="call_argument [59329,59333]"/>
  <match src="uint256: uint256 [103000,103007]" dest="uint256: uint256 [42156,42163]"/>
  <match src="identifier: FILE [65521,65525]" dest="identifier: FILE [60833,60837]"/>
  <match src="function_definition [97773,97902]" dest="function_definition [36929,37058]"/>
  <match src="&quot;: &quot; [21957,21958]" dest="&quot;: &quot; [63910,63911]"/>
  <match src="identifier: stringify [32478,32487]" dest="identifier: stringify [50872,50881]"/>
  <match src="identifier: recipient [11984,11993]" dest="identifier: recipient [24973,24982]"/>
  <match src="type_name [30787,30794]" dest="type_name [49181,49188]"/>
  <match src="address: address [13939,13946]" dest="address: address [26928,26935]"/>
  <match src="primitive_type [2569,2576]" dest="primitive_type [3133,3140]"/>
  <match src="returns: returns [47278,47285]" dest="returns: returns [17411,17418]"/>
  <match src="identifier: PERMIT_TYPEHASH [54910,54925]" dest="identifier: PERMIT_TYPEHASH [22759,22774]"/>
  <match src="=: = [34268,34269]" dest="=: = [52662,52663]"/>
  <match src="state_mutability [93297,93301]" dest="state_mutability [32453,32457]"/>
  <match src="call_argument [85130,85143]" dest="call_argument [59297,59314]"/>
  <match src="function: function [9572,9580]" dest="function: function [10136,10144]"/>
  <match src="external: external [54864,54872]" dest="external: external [22713,22721]"/>
  <match src="identifier: amount [20084,20090]" dest="identifier: amount [56276,56282]"/>
  <match src="state_mutability [54363,54367]" dest="state_mutability [22212,22216]"/>
  <match src="): ) [33155,33156]" dest="): ) [51549,51550]"/>
  <match src="bytes: bytes [34165,34170]" dest="bytes: bytes [52559,52564]"/>
  <match src="identifier: pool [93588,93592]" dest="identifier: pool [32744,32748]"/>
  <match src="): ) [35083,35084]" dest="): ) [53477,53478]"/>
  <match src="internal: internal [45949,45957]" dest="internal: internal [16082,16090]"/>
  <match src=".: . [89317,89318]" dest=".: . [30817,30818]"/>
  <match src="identifier: bonded [103584,103590]" dest="identifier: bonded [42740,42746]"/>
  <match src="return: return [95813,95819]" dest="return: return [34969,34975]"/>
  <match src="identifier: totalRewardedWithPhantom [82402,82426]" dest="identifier: lessDebt [67818,67826]"/>
  <match src="type_name [97227,97231]" dest="type_name [36383,36387]"/>
  <match src="identifier: div [2629,2632]" dest="identifier: div [3193,3196]"/>
  <match src="contract: contract [92472,92480]" dest="contract: contract [31628,31636]"/>
  <match src="yul_identifier [91744,91748]" dest="yul_identifier [78054,78058]"/>
  <match src="): ) [54266,54267]" dest="): ) [22115,22116]"/>
  <match src="string_literal [25955,26005]" dest="string_literal [80259,80288]"/>
  <match src="identifier: b [9380,9381]" dest="identifier: b [9944,9945]"/>
  <match src="identifier: placeLock [105383,105392]" dest="identifier: placeLock [44539,44548]"/>
  <match src="member_expression [50798,50810]" dest="member_expression [63807,63819]"/>
  <match src="identifier: amount [104644,104650]" dest="identifier: amount [43800,43806]"/>
  <match src="primitive_type [93024,93031]" dest="primitive_type [32180,32187]"/>
  <match src="return_statement [93081,93121]" dest="return_statement [32237,32277]"/>
  <match src="identifier: i [34463,34464]" dest="identifier: i [52857,52858]"/>
  <match src="comment: /* Market */ [43607,43619]" dest="comment: /* Market */ [13740,13752]"/>
  <match src="primitive_type [56147,56154]" dest="primitive_type [23996,24003]"/>
  <match src="identifier: sender [82117,82123]" dest="identifier: sender [72345,72351]"/>
  <match src="): ) [95017,95018]" dest="): ) [34173,34174]"/>
  <match src="type_name [86644,86651]" dest="type_name [75154,75161]"/>
  <match src="address: address [93256,93263]" dest="address: address [32412,32419]"/>
  <match src="type_name [9227,9231]" dest="type_name [9791,9795]"/>
  <match src=",: , [91243,91244]" dest=",: , [77553,77554]"/>
  <match src="(: ( [100352,100353]" dest="(: ( [39508,39509]"/>
  <match src="user_defined_type [99347,99354]" dest="user_defined_type [38503,38510]"/>
  <match src="(: ( [12383,12384]" dest="(: ( [25372,25373]"/>
  <match src="): ) [107290,107291]" dest="): ) [70632,70633]"/>
  <match src="address: address [93616,93623]" dest="address: address [32772,32779]"/>
  <match src="type_name [28906,28913]" dest="type_name [47300,47307]"/>
  <match src="uint256: uint256 [88113,88120]" dest="uint256: uint256 [29613,29620]"/>
  <match src="member_expression [7196,7206]" dest="member_expression [7760,7770]"/>
  <match src="return_type_definition [98237,98251]" dest="return_type_definition [37393,37407]"/>
  <match src="identifier: i [35214,35215]" dest="identifier: i [53608,53609]"/>
  <match src="primitive_type [42147,42154]" dest="primitive_type [12280,12287]"/>
  <match src="visibility [97206,97212]" dest="visibility [36362,36368]"/>
  <match src="type_name [13465,13472]" dest="type_name [26454,26461]"/>
  <match src="type_name [100061,100068]" dest="type_name [39217,39224]"/>
  <match src="view: view [97406,97410]" dest="view: view [36562,36566]"/>
  <match src="(: ( [32900,32901]" dest="(: ( [51294,51295]"/>
  <match src="identifier: errorMessage [1253,1265]" dest="identifier: errorMessage [1817,1829]"/>
  <match src="identifier: balance [100439,100446]" dest="identifier: balance [39595,39602]"/>
  <match src="{: { [36673,36674]" dest="{: { [55067,55068]"/>
  <match src="uint: uint [79797,79801]" dest="uint: uint [64667,64671]"/>
  <match src="update_expression [7679,7682]" dest="update_expression [8243,8246]"/>
  <match src="call_expression [107130,107251]" dest="call_expression [70472,70593]"/>
  <match src="using_directive [92536,92567]" dest="using_directive [31692,31723]"/>
  <match src="identifier: Decimal [47431,47438]" dest="identifier: Decimal [17564,17571]"/>
  <match src="type_name [84377,84384]" dest="type_name [62194,62201]"/>
  <match src="number_literal: 0 [1935,1936]" dest="number_literal: 0 [2499,2500]"/>
  <match src="(: ( [84527,84528]" dest="(: ( [73914,73915]"/>
  <match src="identifier: result [35955,35961]" dest="identifier: result [54349,54355]"/>
  <match src="false [99847,99852]" dest="false [39003,39008]"/>
  <match src="identifier: sender [20115,20121]" dest="identifier: sender [65961,65967]"/>
  <match src="identifier: b [3369,3370]" dest="identifier: b [3933,3934]"/>
  <match src="return_type_definition [16050,16067]" dest="return_type_definition [19851,19868]"/>
  <match src="identifier: createCandidate [104248,104263]" dest="identifier: createCandidate [43404,43419]"/>
  <match src="identifier: Epoch [88260,88265]" dest="identifier: Epoch [29760,29765]"/>
  <match src="(: ( [36016,36017]" dest="(: ( [54410,54411]"/>
  <match src="{: { [30862,30863]" dest="{: { [49256,49257]"/>
  <match src=",: , [102584,102585]" dest=",: , [41740,41741]"/>
  <match src="(: ( [48000,48001]" dest="(: ( [18133,18134]"/>
  <match src="number_literal: 0x0000000000000000000000000000000000000000 [44291,44333]" dest="number_literal: 0x0000000000000000000000000000000000000000 [14424,14466]"/>
  <match src="identifier: D256 [5737,5741]" dest="identifier: D256 [6301,6305]"/>
  <match src="function_definition [746,880]" dest="function_definition [1310,1444]"/>
  <match src="function_body [96410,96449]" dest="function_body [35566,35605]"/>
  <match src="identifier: b [338,339]" dest="identifier: b [902,903]"/>
  <match src="primitive_type [69213,69220]" dest="primitive_type [62614,62621]"/>
  <match src="function_definition [94984,95288]" dest="function_definition [34140,34444]"/>
  <match src="identifier: sub [1213,1216]" dest="identifier: sub [1777,1780]"/>
  <match src="member_expression [97593,97627]" dest="member_expression [36749,36783]"/>
  <match src="): ) [4005,4006]" dest="): ) [4569,4570]"/>
  <match src="emit_statement [81699,81731]" dest="emit_statement [72197,72229]"/>
  <match src="identifier: balance [104065,104072]" dest="identifier: balance [43221,43228]"/>
  <match src=".: . [105094,105095]" dest=".: . [44250,44251]"/>
  <match src="identifier: amount [101381,101387]" dest="identifier: amount [40537,40543]"/>
  <match src="uint256: uint256 [71073,71080]" dest="uint256: uint256 [71652,71659]"/>
  <match src="type_name [103876,103883]" dest="type_name [43032,43039]"/>
  <match src="function_definition [3190,3528]" dest="function_definition [3754,4092]"/>
  <match src="comment: // reverse-for-loops with unsigned integer [33171,33213]" dest="comment: // reverse-for-loops with unsigned integer [51565,51607]"/>
  <match src="function_definition [95294,95420]" dest="function_definition [34450,34576]"/>
  <match src="expression_statement [107262,107292]" dest="expression_statement [70604,70634]"/>
  <match src="type_name [100681,100687]" dest="type_name [39837,39843]"/>
  <match src="constant: constant [43718,43726]" dest="constant: constant [13851,13859]"/>
  <match src="type_name [54548,54555]" dest="type_name [22397,22404]"/>
  <match src="expression_statement [36000,36040]" dest="expression_statement [54394,54434]"/>
  <match src="uint256: uint256 [88102,88109]" dest="uint256: uint256 [29602,29609]"/>
  <match src="{: { [48022,48023]" dest="{: { [18155,18156]"/>
  <match src="string [21236,21272]" dest="string [56966,57010]"/>
  <match src="identifier: stringify [31308,31317]" dest="identifier: stringify [49702,49711]"/>
  <match src="uint: uint [55201,55205]" dest="uint: uint [23050,23054]"/>
  <match src="type_name [65542,65549]" dest="type_name [78971,78978]"/>
  <match src="(: ( [54464,54465]" dest="(: ( [22313,22314]"/>
  <match src="internal: internal [46430,46438]" dest="internal: internal [16563,16571]"/>
  <match src="uint256: uint256 [103671,103678]" dest="uint256: uint256 [42827,42834]"/>
  <match src=".: . [6782,6783]" dest=".: . [7346,7347]"/>
  <match src="function_definition [99512,99618]" dest="function_definition [38668,38774]"/>
  <match src="primitive_type [54465,54472]" dest="primitive_type [22314,22321]"/>
  <match src="type_name [102968,102975]" dest="type_name [42124,42131]"/>
  <match src="identifier: msg [83766,83769]" dest="identifier: msg [73628,73631]"/>
  <match src="call_struct_argument [6178,6196]" dest="call_struct_argument [6742,6760]"/>
  <match src="primitive_type [79035,79042]" dest="primitive_type [57540,57547]"/>
  <match src="address: address [34704,34711]" dest="address: address [53098,53105]"/>
  <match src="returns: returns [9512,9519]" dest="returns: returns [10076,10083]"/>
  <match src="identifier: EPOCH_START [42235,42246]" dest="identifier: EPOCH_START [12368,12379]"/>
  <match src="): ) [44973,44974]" dest="): ) [15106,15107]"/>
  <match src="external: external [99565,99573]" dest="external: external [38721,38729]"/>
  <match src="identifier: to [54701,54703]" dest="identifier: to [22550,22552]"/>
  <match src="{: { [45517,45518]" dest="{: { [15650,15651]"/>
  <match src="visibility [96779,96785]" dest="visibility [35935,35941]"/>
  <match src="function_body [6747,6815]" dest="function_body [7311,7379]"/>
  <match src="return_type_definition [32892,32914]" dest="return_type_definition [51286,51308]"/>
  <match src="primitive_type [9120,9124]" dest="primitive_type [9684,9688]"/>
  <match src="}: } [102929,102930]" dest="}: } [42085,42086]"/>
  <match src="(: ( [45207,45208]" dest="(: ( [15340,15341]"/>
  <match src="function: function [73952,73960]" dest="function: function [68174,68182]"/>
  <match src="comment: /*     Copyright 2021 Ethic Money Devs &lt;devs@ethic.money&gt; and Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [51953,52636]" dest="comment: /*     Copyright 2021 Ethic Money Devs &lt;devs@ethic.money&gt; and Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [28744,29427]"/>
  <match src="variable_declaration [79121,79134]" dest="variable_declaration [62919,62933]"/>
  <match src="return_statement [10153,10186]" dest="return_statement [10717,10750]"/>
  <match src="{: { [46023,46024]" dest="{: { [16156,16157]"/>
  <match src="identifier: add [105140,105143]" dest="identifier: add [44296,44299]"/>
  <match src="call_argument [85102,85106]" dest="call_argument [59497,59501]"/>
  <match src="call_expression [94268,94289]" dest="call_expression [33424,33445]"/>
  <match src="): ) [104361,104362]" dest="): ) [43517,43518]"/>
  <match src="member_expression [102741,102767]" dest="member_expression [41897,41923]"/>
  <match src="view: view [69199,69203]" dest="view: view [62600,62604]"/>
  <match src="block_statement [94883,94916]" dest="block_statement [34039,34072]"/>
  <match src=",: , [30359,30360]" dest=",: , [48753,48754]"/>
  <match src="(: ( [99582,99583]" dest="(: ( [38738,38739]"/>
  <match src="{: { [44787,44788]" dest="{: { [14920,14921]"/>
  <match src="type_name [81166,81173]" dest="type_name [83720,83727]"/>
  <match src="): ) [31250,31251]" dest="): ) [49644,49645]"/>
  <match src="primitive_type [31524,31531]" dest="primitive_type [49918,49925]"/>
  <match src="constant: constant [41948,41956]" dest="constant: constant [12081,12089]"/>
  <match src="identifier: amount [102279,102285]" dest="identifier: amount [41435,41441]"/>
  <match src="assembly_statement [87168,87209]" dest="assembly_statement [75678,75719]"/>
  <match src="identifier: amount [100069,100075]" dest="identifier: amount [39225,39231]"/>
  <match src="(: ( [32837,32838]" dest="(: ( [51231,51232]"/>
  <match src="): ) [93696,93697]" dest="): ) [32852,32853]"/>
  <match src="type_name [27432,27439]" dest="type_name [45826,45833]"/>
  <match src=",: , [8749,8750]" dest=",: , [9313,9314]"/>
  <match src="number_literal: 65 [36340,36342]" dest="number_literal: 65 [54734,54736]"/>
  <match src="uint256: uint256 [13080,13087]" dest="uint256: uint256 [26069,26076]"/>
  <match src="uint256: uint256 [93823,93830]" dest="uint256: uint256 [32979,32986]"/>
  <match src="identifier: _state [95378,95384]" dest="identifier: _state [34534,34540]"/>
  <match src="assignment_expression [103229,103360]" dest="assignment_expression [42385,42516]"/>
  <match src="block_statement [104018,104049]" dest="block_statement [43174,43205]"/>
  <match src="visibility [54354,54362]" dest="visibility [22203,22211]"/>
  <match src="identifier: getEpochStrategy [44956,44972]" dest="identifier: getEpochStrategy [15089,15105]"/>
  <match src="primitive_type [41436,41443]" dest="primitive_type [11569,11576]"/>
  <match src="internal: internal [19754,19762]" dest="internal: internal [57355,57363]"/>
  <match src="pure: pure [57483,57487]" dest="pure: pure [20091,20095]"/>
  <match src="type_name [7977,7981]" dest="type_name [8541,8545]"/>
  <match src="call_struct_argument [8099,8129]" dest="call_struct_argument [8663,8693]"/>
  <match src="call_argument [20516,20549]" dest="call_argument [64514,64543]"/>
  <match src=",: , [106761,106762]" dest=",: , [70103,70104]"/>
  <match src="identifier: D256 [8312,8316]" dest="identifier: D256 [8876,8880]"/>
  <match src="{: { [6154,6155]" dest="{: { [6718,6719]"/>
  <match src="{: { [6034,6035]" dest="{: { [6598,6599]"/>
  <match src="): ) [101691,101692]" dest="): ) [40847,40848]"/>
  <match src="state_mutability [54937,54941]" dest="state_mutability [22786,22790]"/>
  <match src="internal: internal [104857,104865]" dest="internal: internal [44013,44021]"/>
  <match src="member_expression [6998,7008]" dest="member_expression [7562,7572]"/>
  <match src="identifier: fluidUntil [95224,95234]" dest="identifier: fluidUntil [34380,34390]"/>
  <match src="): ) [96939,96940]" dest="): ) [36095,36096]"/>
  <match src="call_argument [45517,45545]" dest="call_argument [15650,15678]"/>
  <match src="function_body [23104,23147]" dest="function_body [56675,56838]"/>
  <match src="address: address [54782,54789]" dest="address: address [22631,22638]"/>
  <match src="&amp;: &amp; [36499,36500]" dest="&amp;: &amp; [54893,54894]"/>
  <match src="assignment_expression [102191,102286]" dest="assignment_expression [41347,41442]"/>
  <match src="=: = [44484,44485]" dest="=: = [14617,14618]"/>
  <match src="event: event [81154,81159]" dest="event: event [83698,83703]"/>
  <match src="): ) [83813,83814]" dest="): ) [73669,73670]"/>
  <match src=",: , [29507,29508]" dest=",: , [47901,47902]"/>
  <match src="uint256: uint256 [83331,83338]" dest="uint256: uint256 [64054,64061]"/>
  <match src="return: return [92898,92904]" dest="return: return [32054,32060]"/>
  <match src="yul_evm_builtin [33580,33586]" dest="yul_evm_builtin [51974,51980]"/>
  <match src="visibility [42978,42985]" dest="visibility [13111,13118]"/>
  <match src="return_type_definition [55807,55878]" dest="return_type_definition [23656,23727]"/>
  <match src="{: { [45360,45361]" dest="{: { [15493,15494]"/>
  <match src="identifier: c [418,419]" dest="identifier: c [982,983]"/>
  <match src="returns: returns [54244,54251]" dest="returns: returns [22093,22100]"/>
  <match src="identifier: b [7391,7392]" dest="identifier: b [7955,7956]"/>
  <match src="call_argument [103345,103351]" dest="call_argument [42501,42507]"/>
  <match src="}: } [52958,52959]" dest="}: } [56324,56325]"/>
  <match src="call_argument [9934,9945]" dest="call_argument [10498,10509]"/>
  <match src=".: . [105110,105111]" dest=".: . [44266,44267]"/>
  <match src="member_expression [106941,106953]" dest="member_expression [70283,70295]"/>
  <match src=".: . [96846,96847]" dest=".: . [36002,36003]"/>
  <match src="unary_expression [28384,28389]" dest="unary_expression [46778,46783]"/>
  <match src="parameter [30696,30705]" dest="parameter [49090,49099]"/>
  <match src="): ) [102845,102846]" dest="): ) [42001,42002]"/>
  <match src="identifier: balance [102303,102310]" dest="identifier: balance [41459,41466]"/>
  <match src="visibility [102069,102077]" dest="visibility [41225,41233]"/>
  <match src="function: function [44730,44738]" dest="function: function [14863,14871]"/>
  <match src="contract: contract [88557,88565]" dest="contract: contract [30057,30065]"/>
  <match src="identifier: FOUR_BIT_MASK [36363,36376]" dest="identifier: FOUR_BIT_MASK [54757,54770]"/>
  <match src="return_type_definition [55637,55654]" dest="return_type_definition [23486,23503]"/>
  <match src=".: . [104175,104176]" dest=".: . [43331,43332]"/>
  <match src="expression_statement [103448,103499]" dest="expression_statement [42604,42655]"/>
  <match src="state_mutability [35696,35700]" dest="state_mutability [54090,54094]"/>
  <match src="function_body [93071,93127]" dest="function_body [32227,32283]"/>
  <match src="primitive_type [89087,89094]" dest="primitive_type [30587,30594]"/>
  <match src="call_argument [91202,91216]" dest="call_argument [77512,77526]"/>
  <match src="primitive_type [81416,81423]" dest="primitive_type [61474,61481]"/>
  <match src="primitive_type [46453,46460]" dest="primitive_type [16586,16593]"/>
  <match src="bytes: bytes [33749,33754]" dest="bytes: bytes [52143,52148]"/>
  <match src="identifier: sub [101954,101957]" dest="identifier: sub [41110,41113]"/>
  <match src="identifier: Candidate [97420,97429]" dest="identifier: Candidate [36576,36585]"/>
  <match src="expression_statement [82238,82253]" dest="expression_statement [60022,60037]"/>
  <match src="}: } [84786,84787]" dest="}: } [81751,81752]"/>
  <match src="address: address [65670,65677]" dest="address: address [79103,79110]"/>
  <match src="identifier: value [8517,8522]" dest="identifier: value [9081,9086]"/>
  <match src="array_access [94932,94971]" dest="array_access [34088,34127]"/>
  <match src="(: ( [13517,13518]" dest="(: ( [26506,26507]"/>
  <match src="primitive_type [92966,92971]" dest="primitive_type [32122,32127]"/>
  <match src="primitive_type [5592,5599]" dest="primitive_type [6156,6163]"/>
  <match src="type_name [105031,105038]" dest="type_name [44187,44194]"/>
  <match src="{: { [83901,83902]" dest="{: { [80867,80868]"/>
  <match src="]: ] [36008,36009]" dest="]: ] [54402,54403]"/>
  <match src="for: for [99376,99379]" dest="for: for [38532,38535]"/>
  <match src="primitive_type [48359,48366]" dest="primitive_type [18492,18499]"/>
  <match src="call_expression [23114,23140]" dest="call_expression [56685,56718]"/>
  <match src="identifier: b [9026,9027]" dest="identifier: b [9590,9591]"/>
  <match src="): ) [95492,95493]" dest="): ) [34648,34649]"/>
  <match src="identifier: daiAmount [79195,79204]" dest="identifier: bonded [79982,79988]"/>
  <match src=",: , [21918,21919]" dest=",: , [63848,63849]"/>
  <match src="type_cast_expression [36857,36891]" dest="type_cast_expression [55251,55285]"/>
  <match src="!=: != [19788,19790]" dest="!=: != [65410,65412]"/>
  <match src="identifier: approve [104739,104746]" dest="identifier: approve [43895,43902]"/>
  <match src="): ) [13498,13499]" dest="): ) [26487,26488]"/>
  <match src="function_body [69222,69254]" dest="function_body [62623,62713]"/>
  <match src="): ) [31097,31098]" dest="): ) [49491,49492]"/>
  <match src="&quot;: &quot; [22535,22536]" dest="&quot;: &quot; [71915,71916]"/>
  <match src="identifier: b [7105,7106]" dest="identifier: b [7669,7670]"/>
  <match src="member_expression [96988,97001]" dest="member_expression [36144,36157]"/>
  <match src="type_name [102021,102028]" dest="type_name [41177,41184]"/>
  <match src="identifier: epoch [103575,103580]" dest="identifier: epoch [42731,42736]"/>
  <match src="identifier: that [83118,83122]" dest="identifier: that [82104,82108]"/>
  <match src=",: , [28846,28847]" dest=",: , [47240,47241]"/>
  <match src="(: ( [7012,7013]" dest="(: ( [7576,7577]"/>
  <match src="pure: pure [7490,7494]" dest="pure: pure [8054,8058]"/>
  <match src="primitive_type [16059,16066]" dest="primitive_type [19860,19867]"/>
  <match src="external: external [54354,54362]" dest="external: external [22203,22211]"/>
  <match src="=: = [100430,100431]" dest="=: = [39586,39587]"/>
  <match src="call_argument [106757,106761]" dest="call_argument [70099,70103]"/>
  <match src="function: function [47792,47800]" dest="function: function [17925,17933]"/>
  <match src="identifier: D256 [46300,46304]" dest="identifier: D256 [16433,16437]"/>
  <match src="(: ( [6949,6950]" dest="(: ( [7513,7514]"/>
  <match src="identifier: candidate [98161,98170]" dest="identifier: candidate [37317,37326]"/>
  <match src="(: ( [83088,83089]" dest="(: ( [73355,73356]"/>
  <match src="identifier: b [1663,1664]" dest="identifier: b [2227,2228]"/>
  <match src="uint256: uint256 [74146,74153]" dest="uint256: uint256 [68441,68448]"/>
  <match src="primitive_type [43229,43236]" dest="primitive_type [13362,13369]"/>
  <match src="primitive_type [103000,103007]" dest="primitive_type [42156,42163]"/>
  <match src="identifier: EpochStrategy [44998,45011]" dest="identifier: EpochStrategy [15131,15144]"/>
  <match src="internal: internal [105429,105437]" dest="internal: internal [44585,44593]"/>
  <match src="uint256: uint256 [43762,43769]" dest="uint256: uint256 [13895,13902]"/>
  <match src="identifier: RPAREN [27688,27694]" dest="identifier: RPAREN [46082,46088]"/>
  <match src="function_definition [9179,9317]" dest="function_definition [9743,9881]"/>
  <match src="function: function [2545,2553]" dest="function: function [3109,3117]"/>
  <match src="member_expression [78093,78126]" dest="member_expression [61800,61829]"/>
  <match src="identifier: spender [54556,54563]" dest="identifier: spender [22405,22412]"/>
  <match src="parameter [98343,98360]" dest="parameter [37499,37516]"/>
  <match src="primitive_type [101430,101437]" dest="primitive_type [40586,40593]"/>
  <match src="type_name [6653,6657]" dest="type_name [7217,7221]"/>
  <match src="identifier: i [36168,36169]" dest="identifier: i [54562,54563]"/>
  <match src="call_expression [106675,106806]" dest="call_expression [70017,70148]"/>
  <match src="type_name [73331,73335]" dest="type_name [82578,82582]"/>
  <match src="}: } [7940,7941]" dest="}: } [8504,8505]"/>
  <match src="identifier: account [81238,81245]" dest="identifier: account [71711,71718]"/>
  <match src="if_statement [1926,1971]" dest="if_statement [2490,2535]"/>
  <match src="): ) [6804,6805]" dest="): ) [7368,7369]"/>
  <match src=",: , [101428,101429]" dest=",: , [40584,40585]"/>
  <match src="parameter [102021,102036]" dest="parameter [41177,41192]"/>
  <match src=",: , [3223,3224]" dest=",: , [3787,3788]"/>
  <match src="string [91202,91216]" dest="string [77512,77526]"/>
  <match src="[: [ [103723,103724]" dest="[: [ [42879,42880]"/>
  <match src="): ) [45326,45327]" dest="): ) [15459,15460]"/>
  <match src="member_expression [102603,102616]" dest="member_expression [41759,41772]"/>
  <match src="): ) [7023,7024]" dest="): ) [7587,7588]"/>
  <match src="comment: // 24 epochs fluid = 4 days [43570,43597]" dest="comment: // 24 epochs fluid = 4 days [13703,13730]"/>
  <match src="identifier: Require [106941,106948]" dest="identifier: Require [70283,70290]"/>
  <match src="(: ( [48453,48454]" dest="(: ( [18586,18587]"/>
  <match src="identifier: _state [100581,100587]" dest="identifier: _state [39737,39743]"/>
  <match src="(: ( [95585,95586]" dest="(: ( [34741,34742]"/>
  <match src="parameter [4628,4637]" dest="parameter [5192,5201]"/>
  <match src="identifier: totalBonded [93684,93695]" dest="identifier: totalBonded [32840,32851]"/>
  <match src="type_name [97064,97071]" dest="type_name [36220,36227]"/>
  <match src="type_name [94775,94782]" dest="type_name [33931,33938]"/>
  <match src="using_directive [72280,72307]" dest="using_directive [56019,56046]"/>
  <match src="yul_path [91750,91767]" dest="yul_path [78060,78077]"/>
  <match src="identifier: accounts [105477,105485]" dest="identifier: accounts [44633,44641]"/>
  <match src="=: = [83258,83259]" dest="=: = [79989,79990]"/>
  <match src="(: ( [56030,56031]" dest="(: ( [23879,23880]"/>
  <match src="): ) [6148,6149]" dest="): ) [6712,6713]"/>
  <match src="parameter [96401,96408]" dest="parameter [35557,35564]"/>
  <match src="memory: memory [7076,7082]" dest="memory: memory [7640,7646]"/>
  <match src="primitive_type [9791,9798]" dest="primitive_type [10355,10362]"/>
  <match src="return_type_definition [6941,6962]" dest="return_type_definition [7505,7526]"/>
  <match src="primitive_type [101739,101746]" dest="primitive_type [40895,40902]"/>
  <match src="(: ( [55979,55980]" dest="(: ( [23828,23829]"/>
  <match src="): ) [43199,43200]" dest="): ) [13332,13333]"/>
  <match src="parameter [9818,9837]" dest="parameter [10382,10401]"/>
  <match src="function_definition [92925,92999]" dest="function_definition [32081,32155]"/>
  <match src=".: . [93460,93461]" dest=".: . [32616,32617]"/>
  <match src="identifier: votesFor [98050,98058]" dest="identifier: votesFor [37206,37214]"/>
  <match src="(: ( [63942,63943]" dest="(: ( [28730,28731]"/>
  <match src="identifier: BASE [5667,5671]" dest="identifier: BASE [6231,6235]"/>
  <match src="}: } [45287,45288]" dest="}: } [15420,15421]"/>
  <match src="identifier: candidate [97801,97810]" dest="identifier: candidate [36957,36966]"/>
  <match src="function: function [28792,28800]" dest="function: function [47186,47194]"/>
  <match src="private: private [9848,9855]" dest="private: private [10412,10419]"/>
  <match src="variable_declaration [103910,103944]" dest="variable_declaration [43066,43100]"/>
  <match src="identifier: provider [89222,89230]" dest="identifier: provider [30722,30730]"/>
  <match src="identifier: price [68497,68502]" dest="identifier: price [68834,68839]"/>
  <match src="identifier: z [35441,35442]" dest="identifier: z [53835,53836]"/>
  <match src="}: } [47474,47475]" dest="}: } [17607,17608]"/>
  <match src="struct_member [89087,89100]" dest="struct_member [30587,30600]"/>
  <match src="(: ( [9479,9480]" dest="(: ( [10043,10044]"/>
  <match src="primitive_type [50208,50215]" dest="primitive_type [57494,57501]"/>
  <match src="type_name [81074,81081]" dest="type_name [71506,71513]"/>
  <match src="uint256: uint256 [35742,35749]" dest="uint256: uint256 [54136,54143]"/>
  <match src="{: { [45867,45868]" dest="{: { [16000,16001]"/>
  <match src="identifier: _ [107302,107303]" dest="identifier: _ [70644,70645]"/>
  <match src="member_expression [102234,102247]" dest="member_expression [41390,41403]"/>
  <match src="returns: returns [96953,96960]" dest="returns: returns [36109,36116]"/>
  <match src="identifier: msg [84743,84746]" dest="identifier: msg [81723,81726]"/>
  <match src="returns: returns [97690,97697]" dest="returns: returns [36846,36853]"/>
  <match src="internal: internal [76444,76452]" dest="internal: internal [57087,57095]"/>
  <match src="address: address [26162,26169]" dest="address: address [56356,56363]"/>
  <match src="assignment_expression [103561,103606]" dest="assignment_expression [42717,42762]"/>
  <match src="user_defined_type [66700,66712]" dest="user_defined_type [21290,21302]"/>
  <match src="private: private [41940,41947]" dest="private: private [12073,12080]"/>
  <match src="identifier: State [88029,88034]" dest="identifier: State [29529,29534]"/>
  <match src="identifier: z [35437,35438]" dest="identifier: z [53831,53832]"/>
  <match src="call_argument [29217,29223]" dest="call_argument [47611,47617]"/>
  <match src="identifier: push [103815,103819]" dest="identifier: push [42971,42975]"/>
  <match src="private: private [43710,43717]" dest="private: private [13843,13850]"/>
  <match src="(: ( [44493,44494]" dest="(: ( [14626,14627]"/>
  <match src="visibility [69095,69103]" dest="visibility [65056,65064]"/>
  <match src="binary_expression [34310,34315]" dest="binary_expression [52704,52709]"/>
  <match src="): ) [103581,103582]" dest="): ) [42737,42738]"/>
  <match src="pure: pure [45337,45341]" dest="pure: pure [15470,15474]"/>
  <match src="revert_statement [30897,31414]" dest="revert_statement [49291,49808]"/>
  <match src="call_argument [25955,26005]" dest="call_argument [80259,80288]"/>
  <match src="internal: internal [78024,78032]" dest="internal: internal [61511,61519]"/>
  <match src="function_body [46313,46385]" dest="function_body [16446,16518]"/>
  <match src="revert: revert [32219,32225]" dest="revert: revert [50613,50619]"/>
  <match src="external: external [12361,12369]" dest="external: external [25350,25358]"/>
  <match src=",: , [32452,32453]" dest=",: , [50846,50847]"/>
  <match src="return_statement [8869,8898]" dest="return_statement [9433,9462]"/>
  <match src="identifier: amount [22930,22936]" dest="identifier: amount [19824,19830]"/>
  <match src="): ) [104504,104505]" dest="): ) [43660,43661]"/>
  <match src="struct_member [88702,88717]" dest="struct_member [30202,30217]"/>
  <match src="identifier: balance [99992,99999]" dest="identifier: balance [39148,39155]"/>
  <match src="type_name [86684,86688]" dest="type_name [75194,75198]"/>
  <match src=",: , [21234,21235]" dest=",: , [56964,56965]"/>
  <match src="type_name [81416,81423]" dest="type_name [61474,61481]"/>
  <match src="type_name [11729,11736]" dest="type_name [24718,24725]"/>
  <match src="primitive_type [31478,31485]" dest="primitive_type [49872,49879]"/>
  <match src="(: ( [33754,33755]" dest="(: ( [52148,52149]"/>
  <match src="(: ( [97966,97967]" dest="(: ( [37122,37123]"/>
  <match src="identifier: spender [21977,21984]" dest="identifier: spender [65083,65090]"/>
  <match src="assignment_expression [101813,101898]" dest="assignment_expression [40969,41054]"/>
  <match src="primitive_type [55019,55023]" dest="primitive_type [22868,22872]"/>
  <match src="identifier: to [56327,56329]" dest="identifier: to [24176,24178]"/>
  <match src="binary_expression [3411,3416]" dest="binary_expression [3975,3980]"/>
  <match src="view: view [55925,55929]" dest="view: view [23774,23778]"/>
  <match src="expression_statement [50682,50788]" dest="expression_statement [63932,64044]"/>
  <match src="identifier: PoolSetters [80724,80735]" dest="identifier: Setters [71360,71367]"/>
  <match src="array_access [35046,35055]" dest="array_access [53440,53449]"/>
  <match src="identifier: COUPON_REDEMPTION_PENALTY_DECAY [43865,43896]" dest="identifier: COUPON_REDEMPTION_PENALTY_DECAY [13998,14029]"/>
  <match src="assignment_expression [101548,101625]" dest="assignment_expression [40704,40781]"/>
  <match src="type_cast_expression [53155,53166]" dest="type_cast_expression [65800,65811]"/>
  <match src="(: ( [66872,66873]" dest="(: ( [69039,69040]"/>
  <match src="public: public [98362,98368]" dest="public: public [37518,37524]"/>
  <match src="bytes32: bytes32 [98530,98537]" dest="bytes32: bytes32 [37686,37693]"/>
  <match src="): ) [7111,7112]" dest="): ) [7675,7676]"/>
  <match src="uint256: uint256 [43140,43147]" dest="uint256: uint256 [13273,13280]"/>
  <match src="identifier: amount [99934,99940]" dest="identifier: amount [39090,39096]"/>
  <match src="identifier: sender [53080,53086]" dest="identifier: sender [65599,65605]"/>
  <match src="{: { [97436,97437]" dest="{: { [36592,36593]"/>
  <match src="return: return [8707,8713]" dest="return: return [9271,9277]"/>
  <match src="member_expression [100955,100970]" dest="member_expression [40111,40126]"/>
  <match src="user_defined_type [99340,99345]" dest="user_defined_type [38496,38501]"/>
  <match src="]: ] [97007,97008]" dest="]: ] [36163,36164]"/>
  <match src="call_argument [107171,107187]" dest="call_argument [70513,70529]"/>
  <match src="=: = [41883,41884]" dest="=: = [12016,12017]"/>
  <match src="external: external [55678,55686]" dest="external: external [23527,23535]"/>
  <match src="identifier: value [82286,82291]" dest="identifier: value [73100,73105]"/>
  <match src="address: address [99409,99416]" dest="address: address [38565,38572]"/>
  <match src=",: , [31468,31469]" dest=",: , [49862,49863]"/>
  <match src="): ) [28389,28390]" dest="): ) [46783,46784]"/>
  <match src="parameter [46575,46582]" dest="parameter [16708,16715]"/>
  <match src="): ) [29609,29610]" dest="): ) [48003,48004]"/>
  <match src="identifier: this [79556,79560]" dest="identifier: this [59955,59959]"/>
  <match src="call_argument [83681,83717]" dest="call_argument [81504,81522]"/>
  <match src="type_name [96625,96632]" dest="type_name [35781,35788]"/>
  <match src="variable_declaration [83047,83070]" dest="variable_declaration [67543,67558]"/>
  <match src="identifier: payloadA [28888,28896]" dest="identifier: payloadA [47282,47290]"/>
  <match src="primitive_type [34290,34297]" dest="primitive_type [52684,52691]"/>
  <match src="): ) [54958,54959]" dest="): ) [22807,22808]"/>
  <match src="identifier: mul [9915,9918]" dest="identifier: mul [10479,10482]"/>
  <match src="identifier: j [34038,34039]" dest="identifier: j [52432,52433]"/>
  <match src="identifier: mul [8382,8385]" dest="identifier: mul [8946,8949]"/>
  <match src="identifier: supply [93218,93224]" dest="identifier: supply [32374,32380]"/>
  <match src="=: = [82493,82494]" dest="=: = [72724,72725]"/>
  <match src="(: ( [48733,48734]" dest="(: ( [18866,18867]"/>
  <match src="memory: memory [7333,7339]" dest="memory: memory [7897,7903]"/>
  <match src="type_name [13484,13491]" dest="type_name [26473,26480]"/>
  <match src="member_expression [93544,93559]" dest="member_expression [32700,32715]"/>
  <match src="): ) [97397,97398]" dest="): ) [36553,36554]"/>
  <match src="identifier: mul [7705,7708]" dest="identifier: mul [8269,8272]"/>
  <match src=",: , [28073,28074]" dest=",: , [46467,46468]"/>
  <match src="identifier: candidate [104894,104903]" dest="identifier: candidate [44050,44059]"/>
  <match src="identifier: balance [93752,93759]" dest="identifier: balance [32908,32915]"/>
  <match src="primitive_type [88319,88326]" dest="primitive_type [29819,29826]"/>
  <match src="type_name [12029,12033]" dest="type_name [25018,25022]"/>
  <match src=",: , [99547,99548]" dest=",: , [38703,38704]"/>
  <match src="type_cast_expression [19874,19884]" dest="type_cast_expression [65504,65514]"/>
  <match src="identifier: spender [95609,95616]" dest="identifier: spender [34765,34772]"/>
  <match src="parameter [27873,27887]" dest="parameter [46267,46281]"/>
  <match src="): ) [36514,36515]" dest="): ) [54908,54909]"/>
  <match src="call_expression [29677,29957]" dest="call_expression [48071,48351]"/>
  <match src="identifier: amount [101306,101312]" dest="identifier: amount [40462,40468]"/>
  <match src="): ) [74330,74331]" dest="): ) [82724,82725]"/>
  <match src="expression_statement [91062,91099]" dest="expression_statement [77372,77409]"/>
  <match src="uint256: uint256 [21071,21078]" dest="uint256: uint256 [56868,56875]"/>
  <match src="address: address [104466,104473]" dest="address: address [43622,43629]"/>
  <match src="parameter [105393,105408]" dest="parameter [44549,44564]"/>
  <match src="visibility [51868,51874]" dest="visibility [27804,27810]"/>
  <match src="identifier: greaterThan [8919,8930]" dest="identifier: greaterThan [9483,9494]"/>
  <match src="call_argument [28632,28638]" dest="call_argument [47026,47032]"/>
  <match src="(: ( [103655,103656]" dest="(: ( [42811,42812]"/>
  <match src="block_statement [27941,28221]" dest="block_statement [46335,46615]"/>
  <match src="identifier: file [30062,30066]" dest="identifier: file [48456,48460]"/>
  <match src="parameter [99771,99788]" dest="parameter [38927,38944]"/>
  <match src="comment: // get the final string length [33941,33971]" dest="comment: // get the final string length [52335,52365]"/>
  <match src="identifier: onlyFrozenOrFluid [106630,106647]" dest="identifier: onlyFrozenOrFluid [69972,69989]"/>
  <match src="}: } [7730,7731]" dest="}: } [8294,8295]"/>
  <match src="identifier: initialized [107262,107273]" dest="identifier: initialized [70604,70615]"/>
  <match src="state_mutability [57483,57487]" dest="state_mutability [20091,20095]"/>
  <match src="member_expression [96258,96273]" dest="member_expression [35414,35429]"/>
  <match src="type_name [99530,99537]" dest="type_name [38686,38693]"/>
  <match src="memory: memory [100376,100382]" dest="memory: memory [39532,39538]"/>
  <match src="uint256: uint256 [65796,65803]" dest="uint256: uint256 [83659,83666]"/>
  <match src="identifier: D256 [8421,8425]" dest="identifier: D256 [8985,8989]"/>
  <match src="identifier: onlyFrozen [82063,82073]" dest="identifier: onlyFrozenOrFluid [73733,73750]"/>
  <match src="identifier: z [36529,36530]" dest="identifier: z [54923,54924]"/>
  <match src="=: = [43667,43668]" dest="=: = [13800,13801]"/>
  <match src="function_definition [54273,54329]" dest="function_definition [22122,22178]"/>
  <match src="member_expression [102646,102659]" dest="member_expression [41802,41815]"/>
  <match src="identifier: staged [88053,88059]" dest="identifier: staged [29553,29559]"/>
  <match src="]: ] [104567,104568]" dest="]: ] [43723,43724]"/>
  <match src="identifier: GOVERNANCE_EXPIRATION [42510,42531]" dest="identifier: GOVERNANCE_EXPIRATION [12643,12664]"/>
  <match src="comment: // ', ' [27617,27624]" dest="comment: // ', ' [46011,46018]"/>
  <match src="identifier: payloadB [28914,28922]" dest="identifier: payloadB [47308,47316]"/>
  <match src="(: ( [85288,85289]" dest="(: ( [81197,81198]"/>
  <match src="): ) [93932,93933]" dest="): ) [33088,33089]"/>
  <match src="state_mutability [47273,47277]" dest="state_mutability [17406,17410]"/>
  <match src=".: . [102686,102687]" dest=".: . [41842,41843]"/>
  <match src=".: . [83117,83118]" dest=".: . [82103,82104]"/>
  <match src="primitive_type [30035,30039]" dest="primitive_type [48429,48433]"/>
  <match src="member_expression [103561,103574]" dest="member_expression [42717,42730]"/>
  <match src="member_expression [100581,100610]" dest="member_expression [39737,39766]"/>
  <match src="type_name [101177,101184]" dest="type_name [40333,40340]"/>
  <match src="): ) [83099,83100]" dest="): ) [73366,73367]"/>
  <match src="{: { [8493,8494]" dest="{: { [9057,9058]"/>
  <match src="uint256: uint256 [17620,17627]" dest="uint256: uint256 [59900,59907]"/>
  <match src="member_expression [8106,8116]" dest="member_expression [8670,8680]"/>
  <match src="return_type_definition [12020,12034]" dest="return_type_definition [25009,25023]"/>
  <match src="uint256: uint256 [35199,35206]" dest="uint256: uint256 [53593,53600]"/>
  <match src="member_expression [7376,7390]" dest="member_expression [7940,7954]"/>
  <match src="pure: pure [48641,48645]" dest="pure: pure [18774,18778]"/>
  <match src="public: public [93802,93808]" dest="public: public [32958,32964]"/>
  <match src="primitive_type [30076,30083]" dest="primitive_type [48470,48477]"/>
  <match src="uint256: uint256 [83237,83244]" dest="uint256: uint256 [64087,64094]"/>
  <match src="function_body [27920,28227]" dest="function_body [46314,46621]"/>
  <match src="identifier: EPOCH_PERIOD [42346,42358]" dest="identifier: EPOCH_PERIOD [12479,12491]"/>
  <match src="call_argument [21977,21998]" dest="call_argument [65083,65104]"/>
  <match src="solidity_pragma_token [7,23]" dest="solidity_pragma_token [7,23]"/>
  <match src="{: { [7187,7188]" dest="{: { [7751,7752]"/>
  <match src="primitive_type [79187,79194]" dest="primitive_type [79974,79981]"/>
  <match src="identifier: balance [102723,102730]" dest="identifier: balance [41879,41886]"/>
  <match src="&gt;: &gt; [3371,3372]" dest="&gt;: &gt; [3935,3936]"/>
  <match src="type_name [42770,42777]" dest="type_name [12903,12910]"/>
  <match src="member_expression [84649,84659]" dest="member_expression [64239,64249]"/>
  <match src="function_body [1299,1391]" dest="function_body [1863,1955]"/>
  <match src="type_name [44100,44107]" dest="type_name [14233,14240]"/>
  <match src="call_argument [21899,21918]" dest="call_argument [63833,63848]"/>
  <match src="identifier: abi [28007,28010]" dest="identifier: abi [46401,46404]"/>
  <match src="{: { [31573,31574]" dest="{: { [49967,49968]"/>
  <match src="function_definition [97509,97634]" dest="function_definition [36665,36790]"/>
  <match src="): ) [74486,74487]" dest="): ) [68560,68561]"/>
  <match src="(: ( [50092,50093]" dest="(: ( [56445,56446]"/>
  <match src="(: ( [21823,21824]" dest="(: ( [65022,65023]"/>
  <match src="identifier: Coupons [88531,88538]" dest="identifier: Coupons [30031,30038]"/>
  <match src="binary_expression [34541,34562]" dest="binary_expression [52935,52956]"/>
  <match src="parameter [30076,30090]" dest="parameter [48470,48484]"/>
  <match src="(: ( [25704,25705]" dest="(: ( [61131,61132]"/>
  <match src="{: { [98108,98109]" dest="{: { [37264,37265]"/>
  <match src="call_argument [53306,53348]" dest="call_argument [65881,65919]"/>
  <match src="type_name [1644,1651]" dest="type_name [2208,2215]"/>
  <match src="(: ( [4029,4030]" dest="(: ( [4593,4594]"/>
  <match src="identifier: input [35668,35673]" dest="identifier: input [54062,54067]"/>
  <match src="yul_identifier [98611,98615]" dest="yul_identifier [37767,37771]"/>
  <match src="): ) [95194,95195]" dest="): ) [34350,34351]"/>
  <match src="identifier: mul [6187,6190]" dest="identifier: mul [6751,6754]"/>
  <match src="call_argument [8341,8348]" dest="call_argument [8905,8912]"/>
  <match src="identifier: abi [32998,33001]" dest="identifier: abi [51392,51395]"/>
  <match src="primitive_type [46689,46696]" dest="primitive_type [16822,16829]"/>
  <match src=".: . [83092,83093]" dest=".: . [73359,73360]"/>
  <match src="call_expression [7013,7024]" dest="call_expression [7577,7588]"/>
  <match src="type_name [25755,25762]" dest="type_name [61012,61019]"/>
  <match src="return_type_definition [46566,46583]" dest="return_type_definition [16699,16716]"/>
  <match src=".: . [100595,100596]" dest=".: . [39751,39752]"/>
  <match src="identifier: IEthic [93420,93426]" dest="identifier: IEthic [32576,32582]"/>
  <match src="return_statement [48573,48594]" dest="return_statement [18706,18727]"/>
  <match src="expression_statement [106817,106819]" dest="expression_statement [70159,70161]"/>
  <match src="parameter [55939,55943]" dest="parameter [23788,23792]"/>
  <match src="type_name [4617,4624]" dest="type_name [5181,5188]"/>
  <match src="identifier: recipient [13473,13482]" dest="identifier: recipient [26462,26471]"/>
  <match src="address: address [95601,95608]" dest="address: address [34757,34764]"/>
  <match src="identifier: pow [7418,7421]" dest="identifier: pow [7982,7985]"/>
  <match src="parameter [32018,32027]" dest="parameter [50412,50421]"/>
  <match src="(: ( [54734,54735]" dest="(: ( [22583,22584]"/>
  <match src="member_expression [84161,84173]" dest="member_expression [81076,81088]"/>
  <match src="call_argument [25243,25278]" dest="call_argument [80406,80436]"/>
  <match src="]: ] [103729,103730]" dest="]: ] [42885,42886]"/>
  <match src="identifier: a [1322,1323]" dest="identifier: a [1886,1887]"/>
  <match src=",: , [107206,107207]" dest=",: , [70548,70549]"/>
  <match src="call_expression [84432,84446]" dest="call_expression [81037,81057]"/>
  <match src="sload: sload [98605,98610]" dest="sload: sload [37761,37766]"/>
  <match src=".: . [96565,96566]" dest=".: . [35721,35722]"/>
  <match src="visibility [56331,56339]" dest="visibility [24180,24188]"/>
  <match src="visibility [100703,100711]" dest="visibility [39859,39867]"/>
  <match src="identifier: outstanding [102675,102686]" dest="identifier: outstanding [41831,41842]"/>
  <match src="visibility [91043,91051]" dest="visibility [77353,77361]"/>
  <match src="variable_declaration_statement [1348,1366]" dest="variable_declaration_statement [1912,1930]"/>
  <match src="visibility [11706,11714]" dest="visibility [24695,24703]"/>
  <match src="identifier: slot [98538,98542]" dest="identifier: slot [37694,37698]"/>
  <match src="(: ( [6364,6365]" dest="(: ( [6928,6929]"/>
  <match src="parameter [13465,13482]" dest="parameter [26454,26471]"/>
  <match src="): ) [2667,2668]" dest="): ) [3231,3232]"/>
  <match src="identifier: length [96864,96870]" dest="identifier: length [36020,36026]"/>
  <match src="uint256: uint256 [27714,27721]" dest="uint256: uint256 [46108,46115]"/>
  <match src="string_literal [107040,107062]" dest="string_literal [70382,70404]"/>
  <match src="return_type_definition [48545,48562]" dest="return_type_definition [18678,18695]"/>
  <match src="}: } [87208,87209]" dest="}: } [75718,75719]"/>
  <match src="string [106775,106796]" dest="string [70117,70138]"/>
  <match src="identifier: input [32855,32860]" dest="identifier: input [51249,51254]"/>
  <match src="identifier: amount [77427,77433]" dest="identifier: amount [62699,62705]"/>
  <match src="): ) [8128,8129]" dest="): ) [8692,8693]"/>
  <match src="member_expression [103448,103468]" dest="member_expression [42604,42624]"/>
  <match src="identifier: period [88327,88333]" dest="identifier: period [29827,29833]"/>
  <match src="bytes: bytes [34914,34919]" dest="bytes: bytes [53308,53313]"/>
  <match src="state_mutability [34740,34744]" dest="state_mutability [53134,53138]"/>
  <match src="identifier: _state [104083,104089]" dest="identifier: _state [43239,43245]"/>
  <match src="identifier: reject [105133,105139]" dest="identifier: reject [44289,44295]"/>
  <match src="return: return [45497,45503]" dest="return: return [15630,15636]"/>
  <match src="variable_declaration_statement [68153,68302]" dest="variable_declaration_statement [68004,68075]"/>
  <match src="function_body [92973,92999]" dest="function_body [32129,32155]"/>
  <match src="address: address [105393,105400]" dest="address: address [44549,44556]"/>
  <match src="type_name [9064,9068]" dest="type_name [9628,9632]"/>
  <match src="member_expression [81524,81534]" dest="member_expression [79325,79335]"/>
  <match src="identifier: expiration [103786,103796]" dest="identifier: expiration [42942,42952]"/>
  <match src="identifier: account [102508,102515]" dest="identifier: account [41664,41671]"/>
  <match src="identifier: coupons [102559,102566]" dest="identifier: coupons [41715,41722]"/>
  <match src="(: ( [35023,35024]" dest="(: ( [53417,53418]"/>
  <match src="(: ( [98058,98059]" dest="(: ( [37214,37215]"/>
  <match src="): ) [101213,101214]" dest="): ) [40369,40370]"/>
  <match src="}: } [88955,88956]" dest="}: } [30455,30456]"/>
  <match src="(: ( [30554,30555]" dest="(: ( [48948,48949]"/>
  <match src="function_definition [12310,12393]" dest="function_definition [25299,25382]"/>
  <match src="identifier: period [96267,96273]" dest="identifier: period [35423,35429]"/>
  <match src="identifier: b [3222,3223]" dest="identifier: b [3786,3787]"/>
  <match src="identifier: reason [28599,28605]" dest="identifier: reason [46993,46999]"/>
  <match src="=: = [43564,43565]" dest="=: = [13697,13698]"/>
  <match src="function_definition [7409,7759]" dest="function_definition [7973,8323]"/>
  <match src="pure: pure [32883,32887]" dest="pure: pure [51277,51281]"/>
  <match src=".: . [83381,83382]" dest=".: . [73368,73369]"/>
  <match src="inheritance_specifier [51762,51768]" dest="inheritance_specifier [27698,27704]"/>
  <match src="): ) [31014,31015]" dest="): ) [49408,49409]"/>
  <match src="identifier: FILE [106757,106761]" dest="identifier: FILE [70099,70103]"/>
  <match src="call_argument [7211,7212]" dest="call_argument [7775,7776]"/>
  <match src="): ) [103208,103209]" dest="): ) [42364,42365]"/>
  <match src="]: ] [103250,103251]" dest="]: ] [42406,42407]"/>
  <match src="identifier: balanceOf [93014,93023]" dest="identifier: balanceOf [32170,32179]"/>
  <match src="parenthesized_expression [28996,29430]" dest="parenthesized_expression [47390,47824]"/>
  <match src="identifier: lockedUntil [105655,105666]" dest="identifier: lockedUntil [44811,44822]"/>
  <match src="comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [10196,10695]" dest="comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [61,624]"/>
  <match src="number_literal: 0 [35211,35212]" dest="number_literal: 0 [53605,53606]"/>
  <match src="{: { [33870,33871]" dest="{: { [52264,52265]"/>
  <match src="bytes32: bytes32 [31500,31507]" dest="bytes32: bytes32 [49894,49901]"/>
  <match src="call_argument [83187,83216]" dest="call_argument [82257,82283]"/>
  <match src="}: } [7394,7395]" dest="}: } [7958,7959]"/>
  <match src="): ) [84022,84023]" dest="): ) [81925,81926]"/>
  <match src="identifier: accounts [100927,100935]" dest="identifier: accounts [40083,40091]"/>
  <match src="address: address [44547,44554]" dest="address: address [14680,14687]"/>
  <match src="call_argument [82818,82828]" dest="call_argument [72984,72994]"/>
  <match src="identifier: coupons [102212,102219]" dest="identifier: coupons [41368,41375]"/>
  <match src="type_name [102053,102060]" dest="type_name [41209,41216]"/>
  <match src="visibility [47148,47156]" dest="visibility [17281,17289]"/>
  <match src="}: } [104422,104423]" dest="}: } [43578,43579]"/>
  <match src="member_expression [30949,30965]" dest="member_expression [49343,49359]"/>
  <match src="primitive_type [103172,103179]" dest="primitive_type [42328,42335]"/>
  <match src=".: . [8743,8744]" dest=".: . [9307,9308]"/>
  <match src="return: return [9537,9543]" dest="return: return [10101,10107]"/>
  <match src="(: ( [47821,47822]" dest="(: ( [17954,17955]"/>
  <match src="identifier: owner [54473,54478]" dest="identifier: owner [22322,22327]"/>
  <match src="&quot;: &quot; [50892,50893]" dest="&quot;: &quot; [56568,56569]"/>
  <match src="member_expression [104671,104707]" dest="member_expression [43827,43863]"/>
  <match src="function_definition [46518,46628]" dest="function_definition [16651,16761]"/>
  <match src="function_definition [47113,47227]" dest="function_definition [17246,17360]"/>
  <match src=",: , [19983,19984]" dest=",: , [57399,57400]"/>
  <match src="event_definition [90770,90817]" dest="event_definition [77080,77127]"/>
  <match src="type_name [94140,94147]" dest="type_name [33296,33303]"/>
  <match src="member_expression [8547,8554]" dest="member_expression [9111,9118]"/>
  <match src="!: ! [30876,30877]" dest="!: ! [49270,49271]"/>
  <match src=",: , [68178,68179]" dest=",: , [68026,68027]"/>
  <match src="primitive_type [99824,99828]" dest="primitive_type [38980,38984]"/>
  <match src="identifier: BOOTSTRAPPING_SPEEDUP_FACTOR [41618,41646]" dest="identifier: BOOTSTRAPPING_SPEEDUP_FACTOR [11751,11779]"/>
  <match src=",: , [7713,7714]" dest=",: , [8277,8278]"/>
  <match src="identifier: that [69297,69301]" dest="identifier: that [81945,81949]"/>
  <match src="=: = [34300,34301]" dest="=: = [52694,52695]"/>
  <match src="uint256: uint256 [93719,93726]" dest="uint256: uint256 [32875,32882]"/>
  <match src=".: . [8880,8881]" dest=".: . [9444,9445]"/>
  <match src="identifier: _state [104710,104716]" dest="identifier: _state [43866,43872]"/>
  <match src="bytes32: bytes32 [54887,54894]" dest="bytes32: bytes32 [22736,22743]"/>
  <match src="primitive_type [76428,76435]" dest="primitive_type [57071,57078]"/>
  <match src="): ) [34948,34949]" dest="): ) [53342,53343]"/>
  <match src="function_body [45993,46057]" dest="function_body [16126,16190]"/>
  <match src="boolean_literal [99715,99720]" dest="boolean_literal [38871,38876]"/>
  <match src="contract: contract [80707,80715]" dest="contract: contract [71340,71348]"/>
  <match src="call_argument [31802,31808]" dest="call_argument [50196,50202]"/>
  <match src=",: , [3212,3213]" dest=",: , [3776,3777]"/>
  <match src="primitive_type [81761,81768]" dest="primitive_type [72259,72266]"/>
  <match src="identifier: IOracle [63794,63801]" dest="identifier: IOracle [28582,28589]"/>
  <match src="}: } [47933,47934]" dest="}: } [18066,18067]"/>
  <match src="member_expression [101932,101946]" dest="member_expression [41088,41102]"/>
  <match src="returns: returns [93607,93614]" dest="returns: returns [32763,32770]"/>
  <match src="member_expression [84743,84753]" dest="member_expression [81723,81733]"/>
  <match src="[: [ [36339,36340]" dest="[: [ [54733,54734]"/>
  <match src="=: = [65526,65527]" dest="=: = [60838,60839]"/>
  <match src="uint256: uint256 [102038,102045]" dest="uint256: uint256 [41194,41201]"/>
  <match src="uint: uint [54588,54592]" dest="uint: uint [22437,22441]"/>
  <match src="parameter [101177,101191]" dest="parameter [40333,40347]"/>
  <match src="memory: memory [105234,105240]" dest="memory: memory [44390,44396]"/>
  <match src="{: { [41329,41330]" dest="{: { [11462,11463]"/>
  <match src="user_defined_type [88531,88538]" dest="user_defined_type [30031,30038]"/>
  <match src="uint256: uint256 [41436,41443]" dest="uint256: uint256 [11569,11576]"/>
  <match src="call_argument [32599,32604]" dest="call_argument [50993,50998]"/>
  <match src="string: string [100681,100687]" dest="string: string [39837,39843]"/>
  <match src="call_expression [31156,31175]" dest="call_expression [49550,49569]"/>
  <match src="address: address [97659,97666]" dest="address: address [36815,36822]"/>
  <match src="parameter [97967,97974]" dest="parameter [37123,37130]"/>
  <match src="member_expression [94166,94188]" dest="member_expression [33322,33344]"/>
  <match src=".: . [82938,82939]" dest=".: . [74200,74201]"/>
  <match src="member_expression [84205,84215]" dest="member_expression [79383,79393]"/>
  <match src="identifier: epochs [89325,89331]" dest="identifier: epochs [30825,30831]"/>
  <match src="return: return [95658,95664]" dest="return: return [34814,34820]"/>
  <match src="==: == [10099,10101]" dest="==: == [10663,10665]"/>
  <match src="]: ] [103339,103340]" dest="]: ] [42495,42496]"/>
  <match src="memory: memory [6311,6317]" dest="memory: memory [6875,6881]"/>
  <match src="primitive_type [71320,71327]" dest="primitive_type [66857,66864]"/>
  <match src="type_name [78987,78994]" dest="type_name [63749,63756]"/>
  <match src="identifier: epoch [94800,94805]" dest="identifier: epoch [33956,33961]"/>
  <match src="identifier: length [33441,33447]" dest="identifier: length [51835,51841]"/>
  <match src="call_argument [29134,29139]" dest="call_argument [47528,47533]"/>
  <match src="identifier: totalBonded [85130,85141]" dest="identifier: totalRedeemable [59297,59312]"/>
  <match src="uint256: uint256 [16219,16226]" dest="uint256: uint256 [58810,58817]"/>
  <match src="parameter [101739,101754]" dest="parameter [40895,40910]"/>
  <match src="identifier: require [91529,91536]" dest="identifier: require [77839,77846]"/>
  <match src="[: [ [104932,104933]" dest="[: [ [44088,44089]"/>
  <match src="private: private [42418,42425]" dest="private: private [12551,12558]"/>
  <match src="member_expression [82372,82382]" dest="member_expression [73208,73218]"/>
  <match src="identifier: amount [20593,20599]" dest="identifier: amount [59504,59510]"/>
  <match src="identifier: amount [21315,21321]" dest="identifier: amount [59681,59687]"/>
  <match src="primitive_type [44344,44351]" dest="primitive_type [14477,14484]"/>
  <match src="}: } [48086,48087]" dest="}: } [18219,18220]"/>
  <match src="identifier: char [35400,35404]" dest="identifier: char [53794,53798]"/>
  <match src="parameter [102435,102449]" dest="parameter [41591,41605]"/>
  <match src="call_argument [105346,105352]" dest="call_argument [44502,44508]"/>
  <match src="(: ( [29258,29259]" dest="(: ( [47652,47653]"/>
  <match src="call_expression [74307,74331]" dest="call_expression [82707,82725]"/>
  <match src="pure: pure [4676,4680]" dest="pure: pure [5240,5244]"/>
  <match src="{: { [107120,107121]" dest="{: { [70462,70463]"/>
  <match src="(: ( [95001,95002]" dest="(: ( [34157,34158]"/>
  <match src="visibility [42576,42583]" dest="visibility [12709,12716]"/>
  <match src="): ) [6614,6615]" dest="): ) [7178,7179]"/>
  <match src="primitive_type [54503,54507]" dest="primitive_type [22352,22356]"/>
  <match src="member_expression [102130,102145]" dest="member_expression [41286,41301]"/>
  <match src="view: view [54873,54877]" dest="view: view [22722,22726]"/>
  <match src="return: return [48173,48179]" dest="return: return [18306,18312]"/>
  <match src="parameter [7097,7106]" dest="parameter [7661,7670]"/>
  <match src="type_name [77507,77514]" dest="type_name [62577,62584]"/>
  <match src="string_literal [106775,106796]" dest="string_literal [70117,70138]"/>
  <match src="(: ( [46688,46689]" dest="(: ( [16821,16822]"/>
  <match src="address: address [55047,55054]" dest="address: address [22896,22903]"/>
  <match src="{: { [47600,47601]" dest="{: { [17733,17734]"/>
  <match src="]: ] [101836,101837]" dest="]: ] [40992,40993]"/>
  <match src="): ) [66753,66754]" dest="): ) [69005,69006]"/>
  <match src="parameter [55091,55104]" dest="parameter [22940,22953]"/>
  <match src="identifier: couponsExpiration [96607,96624]" dest="identifier: couponsExpiration [35763,35780]"/>
  <match src="identifier: _state [93203,93209]" dest="identifier: _state [32359,32365]"/>
  <match src="primitive_type [88815,88819]" dest="primitive_type [30315,30319]"/>
  <match src="state_mutability [6522,6526]" dest="state_mutability [7086,7090]"/>
  <match src="comment: //  [44438,44441]" dest="comment: //  [14571,14574]"/>
  <match src="assignment_expression [103710,103762]" dest="assignment_expression [42866,42918]"/>
  <match src="pure: pure [45730,45734]" dest="pure: pure [15863,15867]"/>
  <match src="variable_declaration [83237,83257]" dest="variable_declaration [64087,64107]"/>
  <match src="assembly: assembly [91714,91722]" dest="assembly: assembly [78024,78032]"/>
  <match src="primitive_type [55499,55506]" dest="primitive_type [23348,23355]"/>
  <match src="type_name [54617,54624]" dest="type_name [22466,22473]"/>
  <match src="binary_expression [36723,36733]" dest="binary_expression [55117,55127]"/>
  <match src="constant: constant [43156,43164]" dest="constant: constant [13289,13297]"/>
  <match src=".: . [68129,68130]" dest=".: . [68789,68790]"/>
  <match src="identifier: incrementBalanceOfClaimable [83477,83504]" dest="identifier: decrementTotalBonded [73459,73479]"/>
  <match src="function_body [93832,93877]" dest="function_body [32988,33033]"/>
  <match src="member_expression [96687,96726]" dest="member_expression [35843,35882]"/>
  <match src="=: = [34159,34160]" dest="=: = [52553,52554]"/>
  <match src="visibility [92852,92858]" dest="visibility [32008,32014]"/>
  <match src=".: . [101953,101954]" dest=".: . [41109,41110]"/>
  <match src="): ) [45598,45599]" dest="): ) [15731,15732]"/>
  <match src="function_body [21881,22138]" dest="function_body [65065,65279]"/>
  <match src="unary_expression [28969,28974]" dest="unary_expression [47363,47368]"/>
  <match src="}: } [35625,35626]" dest="}: } [54019,54020]"/>
  <match src="]: ] [102111,102112]" dest="]: ] [41267,41268]"/>
  <match src="identifier: amount [101685,101691]" dest="identifier: amount [40841,40847]"/>
  <match src="public: public [94119,94125]" dest="public: public [33275,33281]"/>
  <match src="(: ( [9918,9919]" dest="(: ( [10482,10483]"/>
  <match src="identifier: epoch [95188,95193]" dest="identifier: epoch [34344,34349]"/>
  <match src="primitive_type [105410,105417]" dest="primitive_type [44566,44573]"/>
  <match src="state_variable_declaration [27541,27572]" dest="state_variable_declaration [45935,45966]"/>
  <match src="private: private [41843,41850]" dest="private: private [11976,11983]"/>
  <match src="type_name [13962,13969]" dest="type_name [26951,26958]"/>
  <match src="identifier: getGovernanceSuperMajority [46240,46266]" dest="identifier: getGovernanceSuperMajority [16373,16399]"/>
  <match src="identifier: spender [102991,102998]" dest="identifier: spender [42147,42154]"/>
  <match src="identifier: msg [83089,83092]" dest="identifier: msg [73356,73359]"/>
  <match src="(: ( [21898,21899]" dest="(: ( [63819,63820]"/>
  <match src="identifier: recordedVote [97350,97362]" dest="identifier: recordedVote [36506,36518]"/>
  <match src="identifier: reason [101389,101395]" dest="identifier: reason [40545,40551]"/>
  <match src="identifier: EPOCH_PERIOD [45139,45151]" dest="identifier: EPOCH_PERIOD [15272,15284]"/>
  <match src="uint256: uint256 [88069,88076]" dest="uint256: uint256 [29569,29576]"/>
  <match src="address: address [13962,13969]" dest="address: address [26951,26958]"/>
  <match src="variable_declaration [67753,67763]" dest="variable_declaration [68841,68851]"/>
  <match src="update_expression [34463,34466]" dest="update_expression [52857,52860]"/>
  <match src="constant: constant [41851,41859]" dest="constant: constant [11984,11992]"/>
  <match src="address: address [88937,88944]" dest="address: address [30437,30444]"/>
  <match src="state_variable_declaration [42669,42731]" dest="state_variable_declaration [12802,12864]"/>
  <match src="member_expression [85076,85093]" dest="member_expression [59476,59488]"/>
  <match src="private: private [42155,42162]" dest="private: private [12288,12295]"/>
  <match src="primitive_type [101772,101778]" dest="primitive_type [40928,40934]"/>
  <match src="number_literal: 0 [3373,3374]" dest="number_literal: 0 [3937,3938]"/>
  <match src="[: [ [100970,100971]" dest="[: [ [40126,40127]"/>
  <match src="byte: byte [36012,36016]" dest="byte: byte [54406,54410]"/>
  <match src="identifier: sub [96221,96224]" dest="identifier: sub [35377,35380]"/>
  <match src="identifier: chainId [38279,38286]" dest="identifier: epoch [65353,65358]"/>
  <match src="identifier: blockTimestamp [96361,96375]" dest="identifier: blockTimestamp [35517,35531]"/>
  <match src="return_statement [2622,2669]" dest="return_statement [3186,3233]"/>
  <match src="identifier: GOVERNANCE_QUORUM [42593,42610]" dest="identifier: GOVERNANCE_QUORUM [12726,12743]"/>
  <match src="private: private [68721,68728]" dest="private: private [84338,84345]"/>
  <match src="identifier: a [327,328]" dest="identifier: a [891,892]"/>
  <match src="type_name [54735,54739]" dest="type_name [22584,22588]"/>
  <match src="revert_statement [28405,28770]" dest="revert_statement [46799,47164]"/>
  <match src="(: ( [96224,96225]" dest="(: ( [35380,35381]"/>
  <match src="call_expression [31867,31886]" dest="call_expression [50261,50280]"/>
  <match src="(: ( [7147,7148]" dest="(: ( [7711,7712]"/>
  <match src="primitive_type [105516,105523]" dest="primitive_type [44672,44679]"/>
  <match src="call_argument [1317,1323]" dest="call_argument [1881,1887]"/>
  <match src="return: return [96184,96190]" dest="return: return [35340,35346]"/>
  <match src="expression_statement [3361,3390]" dest="expression_statement [3925,3954]"/>
  <match src="function: function [73153,73161]" dest="function: function [59156,59164]"/>
  <match src="identifier: lockedUntil [88229,88240]" dest="identifier: lockedUntil [29729,29740]"/>
  <match src="=: = [104708,104709]" dest="=: = [43864,43865]"/>
  <match src="comment: // 18 epochs = 3 days [42920,42941]" dest="comment: // 18 epochs = 3 days [13053,13074]"/>
  <match src="identifier: add [7927,7930]" dest="identifier: add [8491,8494]"/>
  <match src="function_body [45242,45288]" dest="function_body [15375,15421]"/>
  <match src="state_mutability [45452,45456]" dest="state_mutability [15585,15589]"/>
  <match src="{: { [68143,68144]" dest="{: { [67800,67801]"/>
  <match src="): ) [6551,6552]" dest="): ) [7115,7116]"/>
  <match src="(: ( [46178,46179]" dest="(: ( [16311,16312]"/>
  <match src="identifier: z [36359,36360]" dest="identifier: z [54753,54754]"/>
  <match src=":: : [8324,8325]" dest=":: : [8888,8889]"/>
  <match src="(: ( [35017,35018]" dest="(: ( [53411,53412]"/>
  <match src="function: function [95853,95861]" dest="function: function [35009,35017]"/>
  <match src="identifier: RPAREN [30590,30596]" dest="identifier: RPAREN [48984,48990]"/>
  <match src="primitive_type [94547,94554]" dest="primitive_type [33703,33710]"/>
  <match src="state_mutability [48540,48544]" dest="state_mutability [18673,18677]"/>
  <match src="==: == [9162,9164]" dest="==: == [9726,9728]"/>
  <match src="visibility [44975,44983]" dest="visibility [15108,15116]"/>
  <match src="call_argument [7367,7395]" dest="call_argument [7931,7959]"/>
  <match src="identifier: self [8943,8947]" dest="identifier: self [9507,9511]"/>
  <match src="(: ( [55498,55499]" dest="(: ( [23347,23348]"/>
  <match src="identifier: current [95945,95952]" dest="identifier: current [35101,35108]"/>
  <match src="return_type_definition [95343,95360]" dest="return_type_definition [34499,34516]"/>
  <match src="visibility [341,349]" dest="visibility [905,913]"/>
  <match src="memory: memory [46141,46147]" dest="memory: memory [16274,16280]"/>
  <match src="): ) [82952,82953]" dest="): ) [74223,74224]"/>
  <match src="type_cast_expression [81589,81602]" dest="type_cast_expression [72112,72125]"/>
  <match src="call_argument [83584,83619]" dest="call_argument [81645,81659]"/>
  <match src="array_access [95665,95713]" dest="array_access [34821,34869]"/>
  <match src="call_expression [104710,104758]" dest="call_expression [43866,43914]"/>
  <match src="(: ( [93176,93177]" dest="(: ( [32332,32333]"/>
  <match src="return_statement [99599,99612]" dest="return_statement [38755,38768]"/>
  <match src="type_name [19703,19710]" dest="type_name [65310,65317]"/>
  <match src="call_expression [36354,36377]" dest="call_expression [54748,54771]"/>
  <match src="function: function [93675,93683]" dest="function: function [32831,32839]"/>
  <match src="string_literal [85684,85692]" dest="string_literal [79946,79953]"/>
  <match src="parameter [26048,26063]" dest="parameter [56633,56648]"/>
  <match src="call_argument [102691,102697]" dest="call_argument [41847,41853]"/>
  <match src=",: , [55124,55125]" dest=",: , [22973,22974]"/>
  <match src=",: , [55185,55186]" dest=",: , [23034,23035]"/>
  <match src="call_argument [8535,8545]" dest="call_argument [9099,9109]"/>
  <match src="call_expression [108725,108732]" dest="call_expression [56903,56910]"/>
  <match src="contract_body [88266,88555]" dest="contract_body [29766,30055]"/>
  <match src="=: = [101845,101846]" dest="=: = [41001,41002]"/>
  <match src="identifier: must [30701,30705]" dest="identifier: must [49095,49099]"/>
  <match src="(: ( [7241,7242]" dest="(: ( [7805,7806]"/>
  <match src="): ) [102067,102068]" dest="): ) [41223,41224]"/>
  <match src="identifier: allowance [53120,53129]" dest="identifier: allowanceCoupons [65760,65776]"/>
  <match src="primitive_type [97927,97934]" dest="primitive_type [37083,37090]"/>
  <match src="identifier: payloadA [29549,29557]" dest="identifier: payloadA [47943,47951]"/>
  <match src=".: . [104167,104168]" dest=".: . [43323,43324]"/>
  <match src="variable_declaration [35287,35300]" dest="variable_declaration [53681,53694]"/>
  <match src="identifier: unfreeze [102805,102813]" dest="identifier: unfreeze [41961,41969]"/>
  <match src="=: = [102902,102903]" dest="=: = [42058,42059]"/>
  <match src="=: = [42821,42822]" dest="=: = [12954,12955]"/>
  <match src="call_argument [4063,4064]" dest="call_argument [4627,4628]"/>
  <match src="pure: pure [30166,30170]" dest="pure: pure [48560,48564]"/>
  <match src="(: ( [85093,85094]" dest="(: ( [59488,59489]"/>
  <match src="function_body [6967,7043]" dest="function_body [7531,7607]"/>
  <match src="comment: /**      * Getters      */ [44698,44724]" dest="comment: /**      * Getters      */ [14831,14857]"/>
  <match src="): ) [47146,47147]" dest="): ) [17279,17280]"/>
  <match src="returns: returns [47992,47999]" dest="returns: returns [18125,18132]"/>
  <match src="uint256: uint256 [32135,32142]" dest="uint256: uint256 [50529,50536]"/>
  <match src="identifier: getOracleReserveMinimum [44837,44860]" dest="identifier: getOracleReserveMinimum [14970,14993]"/>
  <match src="uint: uint [55255,55259]" dest="uint: uint [23104,23108]"/>
  <match src="call_argument [30385,30411]" dest="call_argument [48779,48805]"/>
  <match src="): ) [81662,81663]" dest="): ) [72185,72186]"/>
  <match src="parameter [94792,94805]" dest="parameter [33948,33961]"/>
  <match src="identifier: Decimal [46330,46337]" dest="identifier: Decimal [16463,16470]"/>
  <match src=".: . [99975,99976]" dest=".: . [39131,39132]"/>
  <match src="identifier: account [95394,95401]" dest="identifier: account [34550,34557]"/>
  <match src="primitive_type [27491,27498]" dest="primitive_type [45885,45892]"/>
  <match src="}: } [7758,7759]" dest="}: } [8322,8323]"/>
  <match src="uint256: uint256 [28880,28887]" dest="uint256: uint256 [47274,47281]"/>
  <match src="(: ( [96257,96258]" dest="(: ( [35413,35414]"/>
  <match src="uint256: uint256 [6489,6496]" dest="uint256: uint256 [7053,7060]"/>
  <match src="member_expression [105104,105139]" dest="member_expression [44260,44295]"/>
  <match src=".: . [45473,45474]" dest=".: . [15606,15607]"/>
  <match src="identifier: D256 [7148,7152]" dest="identifier: D256 [7712,7716]"/>
  <match src="type_name [67580,67592]" dest="type_name [67087,67099]"/>
  <match src="identifier: totalRewardedWithPhantom [84499,84523]" dest="identifier: value [73905,73910]"/>
  <match src=".: . [105296,105297]" dest=".: . [44452,44453]"/>
  <match src=",: , [52848,52849]" dest=",: , [56142,56143]"/>
  <match src="(: ( [11975,11976]" dest="(: ( [24964,24965]"/>
  <match src="unary_expression [27934,27939]" dest="unary_expression [46328,46333]"/>
  <match src="call_argument [82919,82929]" dest="call_argument [74181,74191]"/>
  <match src="parameter [4617,4626]" dest="parameter [5181,5190]"/>
  <match src="internal: internal [22368,22376]" dest="internal: internal [71797,71805]"/>
  <match src="revert_statement [30210,30651]" dest="revert_statement [48604,49045]"/>
  <match src="(: ( [6344,6345]" dest="(: ( [6908,6909]"/>
  <match src="member_expression [94682,94723]" dest="member_expression [33838,33879]"/>
  <match src="parameter [97699,97706]" dest="parameter [36855,36862]"/>
  <match src="identifier: IERC20 [15751,15757]" dest="identifier: Curve [60763,60768]"/>
  <match src=".: . [95223,95224]" dest=".: . [34379,34380]"/>
  <match src="comment: /**      * @dev Emitted when the implementation is upgraded.      * @param implementation Address of the new implementation.      */ [90633,90765]" dest="comment: /**      * @dev Emitted when the implementation is upgraded.      * @param implementation Address of the new implementation.      */ [76943,77075]"/>
  <match src="member_expression [101908,101922]" dest="member_expression [41064,41078]"/>
  <match src=".: . [101946,101947]" dest=".: . [41102,41103]"/>
  <match src="): ) [6269,6270]" dest="): ) [6833,6834]"/>
  <match src="function_body [78033,78136]" dest="function_body [61520,61902]"/>
  <match src="library_declaration [5551,10194]" dest="library_declaration [6115,10758]"/>
  <match src="&quot;: &quot; [107040,107041]" dest="&quot;: &quot; [70382,70383]"/>
  <match src="function: function [100325,100333]" dest="function: function [39481,39489]"/>
  <match src="comment: // Gnosis Safe mainnet treasury msig address [44644,44688]" dest="comment: // Gnosis Safe mainnet treasury msig address [14777,14821]"/>
  <match src="member_expression [96687,96715]" dest="member_expression [35843,35871]"/>
  <match src="function_body [48463,48498]" dest="function_body [18596,18631]"/>
  <match src="(: ( [3202,3203]" dest="(: ( [3766,3767]"/>
  <match src="comment: // Solidity only automatically asserts when dividing by 0 [3295,3352]" dest="comment: // Solidity only automatically asserts when dividing by 0 [3859,3916]"/>
  <match src="call_argument [7709,7713]" dest="call_argument [8273,8277]"/>
  <match src="=: = [102128,102129]" dest="=: = [41284,41285]"/>
  <match src="event: event [81035,81040]" dest="event: event [71467,71472]"/>
  <match src="=: = [101267,101268]" dest="=: = [40423,40424]"/>
  <match src="call_argument [102768,102774]" dest="call_argument [41924,41930]"/>
  <match src="identifier: lessDai [84318,84325]" dest="identifier: lessRedeemable [62042,62056]"/>
  <match src="state_mutability [54300,54304]" dest="state_mutability [22149,22153]"/>
  <match src="): ) [103359,103360]" dest="): ) [42515,42516]"/>
  <match src="]: ] [103796,103797]" dest="]: ] [42952,42953]"/>
  <match src="(: ( [91177,91178]" dest="(: ( [77487,77488]"/>
  <match src="identifier: COMMA [32599,32604]" dest="identifier: COMMA [50993,50998]"/>
  <match src="parameter [102038,102051]" dest="parameter [41194,41207]"/>
  <match src="parameter [8815,8828]" dest="parameter [9379,9392]"/>
  <match src="(: ( [7061,7062]" dest="(: ( [7625,7626]"/>
  <match src="primitive_type [91669,91676]" dest="primitive_type [77979,77986]"/>
  <match src="type_name [759,766]" dest="type_name [1323,1330]"/>
  <match src="user_defined_type [48001,48013]" dest="user_defined_type [18134,18146]"/>
  <match src="return: return [7741,7747]" dest="return: return [8305,8311]"/>
  <match src="identifier: coupons [104073,104080]" dest="identifier: coupons [43229,43236]"/>
  <match src="type_name [93311,93318]" dest="type_name [32467,32474]"/>
  <match src="parenthesized_expression [30216,30650]" dest="parenthesized_expression [48610,49044]"/>
  <match src="identifier: candidate [97935,97944]" dest="identifier: candidate [37091,37100]"/>
  <match src="expression_statement [84161,84299]" dest="expression_statement [81076,81175]"/>
  <match src="internal: internal [91043,91051]" dest="internal: internal [77353,77361]"/>
  <match src="type_name [71073,71080]" dest="type_name [71652,71659]"/>
  <match src="parameter [100369,100389]" dest="parameter [39525,39545]"/>
  <match src="primitive_type [106538,106545]" dest="primitive_type [69880,69887]"/>
  <match src="primitive_type [43941,43948]" dest="primitive_type [14074,14081]"/>
  <match src="return: return [45763,45769]" dest="return: return [15896,15902]"/>
  <match src="variable_declaration_tuple [68153,68228]" dest="variable_declaration_tuple [68004,68046]"/>
  <match src="return_statement [3513,3522]" dest="return_statement [4077,4086]"/>
  <match src="): ) [12009,12010]" dest="): ) [24998,24999]"/>
  <match src="internal: internal [48238,48246]" dest="internal: internal [18371,18379]"/>
  <match src="identifier: block [96427,96432]" dest="identifier: block [35583,35588]"/>
  <match src="uint256: uint256 [65767,65774]" dest="uint256: uint256 [83674,83681]"/>
  <match src="comment: /**      * Epoch      */ [95726,95750]" dest="comment: /**      * Epoch      */ [34882,34906]"/>
  <match src="return: return [36560,36566]" dest="return: return [54954,54960]"/>
  <match src="comment: /*     Copyright 2021 Ethic Money Devs &lt;devs@ethic.money&gt; and Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [70168,70851]" dest="comment: /*     Copyright 2021 Ethic Money Devs &lt;devs@ethic.money&gt; and Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [55297,55980]"/>
  <match src="identifier: char [36492,36496]" dest="identifier: char [54886,54890]"/>
  <match src="function_definition [98041,98179]" dest="function_definition [37197,37335]"/>
  <match src="internal: internal [9609,9617]" dest="internal: internal [10173,10181]"/>
  <match src="call_argument [82718,82723]" dest="call_argument [74032,74037]"/>
  <match src="type_name [96962,96969]" dest="type_name [36118,36125]"/>
  <match src="public: public [95331,95337]" dest="public: public [34487,34493]"/>
  <match src="call_expression [28457,28737]" dest="call_expression [46851,47131]"/>
  <match src="type_name [35660,35667]" dest="type_name [54054,54061]"/>
  <match src="parameter [9368,9381]" dest="parameter [9932,9945]"/>
  <match src="identifier: Transfer [99400,99408]" dest="identifier: Transfer [38556,38564]"/>
  <match src="return: return [74579,74585]" dest="return: return [59135,59141]"/>
  <match src="identifier: result [35613,35619]" dest="identifier: result [54007,54013]"/>
  <match src="identifier: value [45518,45523]" dest="identifier: value [15651,15656]"/>
  <match src="]: ] [36488,36489]" dest="]: ] [54882,54883]"/>
  <match src="identifier: staged [101947,101953]" dest="identifier: staged [41103,41109]"/>
  <match src="function: function [55541,55549]" dest="function: function [23390,23398]"/>
  <match src="return_type_definition [47035,47052]" dest="return_type_definition [17168,17185]"/>
  <match src="!=: != [53152,53154]" dest="!=: != [65797,65799]"/>
  <match src="(: ( [28246,28247]" dest="(: ( [46640,46641]"/>
  <match src="parameter [6236,6245]" dest="parameter [6800,6809]"/>
  <match src="return_type_definition [54305,54328]" dest="return_type_definition [22154,22177]"/>
  <match src="uint256: uint256 [100353,100360]" dest="uint256: uint256 [39509,39516]"/>
  <match src="returns: returns [86675,86682]" dest="returns: returns [75185,75192]"/>
  <match src="type_name [55852,55858]" dest="type_name [23701,23707]"/>
  <match src="type_name [71320,71327]" dest="type_name [66857,66864]"/>
  <match src="identifier: shift [35295,35300]" dest="identifier: shift [53689,53694]"/>
  <match src="(: ( [102577,102578]" dest="(: ( [41733,41734]"/>
  <match src="{: { [106931,106932]" dest="{: { [70273,70274]"/>
  <match src="}: } [14003,14004]" dest="}: } [26992,26993]"/>
  <match src=",: , [31282,31283]" dest=",: , [49676,49677]"/>
  <match src="expression_statement [25923,26007]" dest="expression_statement [80221,80290]"/>
  <match src="identifier: epochs [102241,102247]" dest="identifier: epochs [41397,41403]"/>
  <match src="type_name [97793,97800]" dest="type_name [36949,36956]"/>
  <match src="identifier: value [81497,81502]" dest="identifier: value [72022,72027]"/>
  <match src="memory: memory [8630,8636]" dest="memory: memory [9194,9200]"/>
  <match src="identifier: GOVERNANCE_EXPIRATION [45884,45905]" dest="identifier: GOVERNANCE_EXPIRATION [16017,16038]"/>
  <match src=":=: := [87184,87186]" dest=":=: := [75694,75696]"/>
  <match src=",: , [12342,12343]" dest=",: , [25331,25332]"/>
  <match src="expression_statement [101331,101397]" dest="expression_statement [40487,40553]"/>
  <match src="variable_declaration_statement [91669,91704]" dest="variable_declaration_statement [77979,78014]"/>
  <match src="{: { [92785,92786]" dest="{: { [31941,31942]"/>
  <match src="*: * [43290,43291]" dest="*: * [13423,13424]"/>
  <match src="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      * - Subtraction cannot overflow.      *      * _Available since v2.4.0._      */ [886,1199]" dest="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      * - Subtraction cannot overflow.      *      * _Available since v2.4.0._      */ [1450,1763]"/>
  <match src="private: private [43523,43530]" dest="private: private [13656,13663]"/>
  <match src="identifier: reason [100695,100701]" dest="identifier: reason [39851,39857]"/>
  <match src="type_name [89011,89018]" dest="type_name [30511,30518]"/>
  <match src="visibility [44755,44763]" dest="visibility [14888,14896]"/>
  <match src="uint256: uint256 [15817,15824]" dest="uint256: uint256 [19760,19767]"/>
  <match src="=: = [105799,105800]" dest="=: = [44955,44956]"/>
  <match src="primitive_type [28906,28913]" dest="primitive_type [47300,47307]"/>
  <match src="--: -- [33302,33304]" dest="--: -- [51696,51698]"/>
  <match src="identifier: _state [103035,103041]" dest="identifier: _state [42191,42197]"/>
  <match src="): ) [94391,94392]" dest="): ) [33547,33548]"/>
  <match src="emit: emit [83754,83758]" dest="emit: emit [73616,73620]"/>
  <match src="parameter [45466,45485]" dest="parameter [15599,15618]"/>
  <match src="{: { [53168,53169]" dest="{: { [65813,65814]"/>
  <match src="for: for [5588,5591]" dest="for: for [6152,6155]"/>
  <match src="{: { [87963,87964]" dest="{: { [29463,29464]"/>
  <match src="(: ( [7366,7367]" dest="(: ( [7930,7931]"/>
  <match src="[: [ [102549,102550]" dest="[: [ [41705,41706]"/>
  <match src="type_name [41717,41724]" dest="type_name [11850,11857]"/>
  <match src="visibility [41359,41366]" dest="visibility [11492,11499]"/>
  <match src="public: public [92945,92951]" dest="public: public [32101,32107]"/>
  <match src="identifier: decrementAllowanceCoupons [103114,103139]" dest="identifier: decrementAllowanceCoupons [42270,42295]"/>
  <match src="number_literal: 2 [36261,36262]" dest="number_literal: 2 [54655,54656]"/>
  <match src="type_name [6463,6467]" dest="type_name [7027,7031]"/>
  <match src="memory: memory [9596,9602]" dest="memory: memory [10160,10166]"/>
  <match src="{: { [45632,45633]" dest="{: { [15765,15766]"/>
  <match src="call_argument [1325,1337]" dest="call_argument [1889,1901]"/>
  <match src="call_argument [85362,85366]" dest="call_argument [81293,81297]"/>
  <match src="type_name [55646,55653]" dest="type_name [23495,23502]"/>
  <match src="function_definition [92733,92828]" dest="function_definition [31889,31984]"/>
  <match src="type_name [6843,6847]" dest="type_name [7407,7411]"/>
  <match src=".: . [95923,95924]" dest=".: . [35079,35080]"/>
  <match src="(: ( [90784,90785]" dest="(: ( [77094,77095]"/>
  <match src=",: , [9157,9158]" dest=",: , [9721,9722]"/>
  <match src="): ) [56329,56330]" dest="): ) [24178,24179]"/>
  <match src="(: ( [54861,54862]" dest="(: ( [22710,22711]"/>
  <match src="identifier: FILE [50969,50973]" dest="identifier: FILE [71877,71881]"/>
  <match src="block_statement [1938,1971]" dest="block_statement [2502,2535]"/>
  <match src="member_expression [9908,9918]" dest="member_expression [10472,10482]"/>
  <match src="comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      * - Addition cannot overflow.      */ [84,301]" dest="comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      * - Addition cannot overflow.      */ [648,865]"/>
  <match src="identifier: ethic [93461,93466]" dest="identifier: ethic [32617,32622]"/>
  <match src="(: ( [83369,83370]" dest="(: ( [73382,73383]"/>
  <match src="state_mutability [93705,93709]" dest="state_mutability [32861,32865]"/>
  <match src="call_argument [81993,82003]" dest="call_argument [72477,72487]"/>
  <match src="type_name [6086,6093]" dest="type_name [6650,6657]"/>
  <match src="(: ( [73175,73176]" dest="(: ( [59177,59178]"/>
  <match src="string [33917,33920]" dest="string [52311,52314]"/>
  <match src="function_body [9641,9685]" dest="function_body [10205,10249]"/>
  <match src="identifier: msg [84205,84208]" dest="identifier: msg [79383,79386]"/>
  <match src="function_definition [82966,83821]" dest="function_definition [73119,73677]"/>
  <match src="identifier: allowanceCoupons [95569,95585]" dest="identifier: allowanceCoupons [34725,34741]"/>
  <match src="pure: pure [5862,5866]" dest="pure: pure [6426,6430]"/>
  <match src="number_literal: 0x25825313BeAd63Ab5b93Aae07f1879A6bC501F6E [44599,44641]" dest="number_literal: 0x25825313BeAd63Ab5b93Aae07f1879A6bC501F6E [14732,14774]"/>
  <match src="identifier: stringify [29325,29334]" dest="identifier: stringify [47719,47728]"/>
  <match src="binary_expression [36478,36488]" dest="binary_expression [54872,54882]"/>
  <match src="user_defined_type [9368,9372]" dest="user_defined_type [9932,9936]"/>
  <match src="): ) [54410,54411]" dest="): ) [22259,22260]"/>
  <match src="emit: emit [82909,82913]" dest="emit: emit [74169,74173]"/>
  <match src="identifier: div [9930,9933]" dest="identifier: div [10494,10497]"/>
  <match src="]: ] [94970,94971]" dest="]: ] [34126,34127]"/>
  <match src="type_name [95601,95608]" dest="type_name [34757,34764]"/>
  <match src="&quot;: &quot; [83986,83987]" dest="&quot;: &quot; [81901,81902]"/>
  <match src="function_definition [32810,33764]" dest="function_definition [51204,52158]"/>
  <match src="return: return [99599,99605]" dest="return: return [38755,38761]"/>
  <match src="identifier: msg [82113,82116]" dest="identifier: msg [72341,72344]"/>
  <match src="number_literal: 0 [9165,9166]" dest="number_literal: 0 [9729,9730]"/>
  <match src="(: ( [104955,104956]" dest="(: ( [44111,44112]"/>
  <match src="(: ( [6076,6077]" dest="(: ( [6640,6641]"/>
  <match src="(: ( [6453,6454]" dest="(: ( [7017,7018]"/>
  <match src="type_name [103000,103007]" dest="type_name [42156,42163]"/>
  <match src="parameter [96102,96141]" dest="parameter [35258,35297]"/>
  <match src="inheritance_specifier [15751,15757]" dest="inheritance_specifier [60763,60768]"/>
  <match src="event: event [54139,54144]" dest="event: event [21988,21993]"/>
  <match src="comment: /**      * ERC20 Interface      */ [92693,92727]" dest="comment: /**      * ERC20 Interface      */ [31849,31883]"/>
  <match src="state_mutability [95338,95342]" dest="state_mutability [34494,34498]"/>
  <match src="uint256: uint256 [94140,94147]" dest="uint256: uint256 [33296,33303]"/>
  <match src="return_type_definition [93053,93070]" dest="return_type_definition [32209,32226]"/>
  <match src="}: } [88015,88016]" dest="}: } [29515,29516]"/>
  <match src="assignment_expression [35046,35085]" dest="assignment_expression [53440,53479]"/>
  <match src="identifier: _state [93745,93751]" dest="identifier: _state [32901,32907]"/>
  <match src="internal: internal [46777,46785]" dest="internal: internal [16910,16918]"/>
  <match src="): ) [83857,83858]" dest="): ) [80856,80857]"/>
  <match src="&quot;: &quot; [33919,33920]" dest="&quot;: &quot; [52313,52314]"/>
  <match src="primitive_type [3399,3406]" dest="primitive_type [3963,3970]"/>
  <match src="identifier: add [98147,98150]" dest="identifier: add [37303,37306]"/>
  <match src="returns: returns [45614,45621]" dest="returns: returns [15747,15754]"/>
  <match src="return: return [10125,10131]" dest="return: return [10689,10695]"/>
  <match src="primitive_type [84377,84384]" dest="primitive_type [62194,62201]"/>
  <match src="identifier: accounts [103042,103050]" dest="identifier: accounts [42198,42206]"/>
  <match src="state_mutability [4016,4020]" dest="state_mutability [4580,4584]"/>
  <match src="=: = [1358,1359]" dest="=: = [1922,1923]"/>
  <match src="(: ( [35971,35972]" dest="(: ( [54365,54366]"/>
  <match src="identifier: b [1997,1998]" dest="identifier: b [2561,2562]"/>
  <match src="type_name [9632,9639]" dest="type_name [10196,10203]"/>
  <match src="uint256: uint256 [88507,88514]" dest="uint256: uint256 [30007,30014]"/>
  <match src="type_name [1655,1662]" dest="type_name [2219,2226]"/>
  <match src="constant: constant [42426,42434]" dest="constant: constant [12559,12567]"/>
  <match src="address: address [86644,86651]" dest="address: address [75154,75161]"/>
  <match src="type_name [5752,5759]" dest="type_name [6316,6323]"/>
  <match src="member_expression [6603,6608]" dest="member_expression [7167,7172]"/>
  <match src="parameter [96165,96172]" dest="parameter [35321,35328]"/>
  <match src="internal: internal [105249,105257]" dest="internal: internal [44405,44413]"/>
  <match src="assembly: assembly [98574,98582]" dest="assembly: assembly [37730,37738]"/>
  <match src="-: - [35527,35528]" dest="-: - [53921,53922]"/>
  <match src="returns: returns [47540,47547]" dest="returns: returns [17673,17680]"/>
  <match src="function_definition [47481,47650]" dest="function_definition [17614,17783]"/>
  <match src="state_mutability [48247,48251]" dest="state_mutability [18380,18384]"/>
  <match src="external: external [56331,56339]" dest="external: external [24180,24188]"/>
  <match src="string: string [30921,30927]" dest="string: string [49315,49321]"/>
  <match src="(: ( [7210,7211]" dest="(: ( [7774,7775]"/>
  <match src="identifier: Candidate [88566,88575]" dest="identifier: Candidate [30066,30075]"/>
  <match src="returns: returns [34749,34756]" dest="returns: returns [53143,53150]"/>
  <match src="internal: internal [104506,104514]" dest="internal: internal [43662,43670]"/>
  <match src="call_argument [30323,30327]" dest="call_argument [48717,48721]"/>
  <match src="bytes32: bytes32 [54951,54958]" dest="bytes32: bytes32 [22800,22807]"/>
  <match src="call_argument [32488,32496]" dest="call_argument [50882,50890]"/>
  <match src="identifier: input [33806,33811]" dest="identifier: input [52200,52205]"/>
  <match src="identifier: expiring [88463,88471]" dest="identifier: expiring [29963,29971]"/>
  <match src="return: return [467,473]" dest="return: return [1031,1037]"/>
  <match src="(: ( [98098,98099]" dest="(: ( [37254,37255]"/>
  <match src="function: function [63808,63816]" dest="function: function [28596,28604]"/>
  <match src=",: , [83575,83576]" dest=",: , [80741,80742]"/>
  <match src="member_expression [102191,102219]" dest="member_expression [41347,41375]"/>
  <match src="variable_declaration [3399,3408]" dest="variable_declaration [3963,3972]"/>
  <match src="return: return [44905,44911]" dest="return: return [15038,15044]"/>
  <match src="identifier: ethic [73225,73230]" dest="identifier: ethic [59224,59229]"/>
  <match src="identifier: Decimal [5559,5566]" dest="identifier: Decimal [6123,6130]"/>
  <match src="return_statement [6333,6380]" dest="return_statement [6897,6944]"/>
  <match src="identifier: i [35207,35208]" dest="identifier: i [53601,53602]"/>
  <match src=".: . [96111,96112]" dest=".: . [35267,35268]"/>
  <match src="call_expression [50010,50099]" dest="call_expression [56408,56460]"/>
  <match src="external: external [54806,54814]" dest="external: external [22655,22663]"/>
  <match src="identifier: FILE [50861,50865]" dest="identifier: FILE [63862,63866]"/>
  <match src="identifier: coupons [102311,102318]" dest="identifier: coupons [41467,41474]"/>
  <match src="identifier: INITIALIZE_INCENTIVE [42995,43015]" dest="identifier: INITIALIZE_INCENTIVE [13128,13148]"/>
  <match src="identifier: subtractedValue [19004,19019]" dest="identifier: totalSupply [20014,20025]"/>
  <match src="visibility [28348,28356]" dest="visibility [46742,46750]"/>
  <match src="comment: // each byte takes two characters [35241,35274]" dest="comment: // each byte takes two characters [53635,53668]"/>
  <match src="address: address [99431,99438]" dest="address: address [38587,38594]"/>
  <match src="identifier: amount [20706,20712]" dest="identifier: amount [65265,65271]"/>
  <match src="type_name [1239,1245]" dest="type_name [1803,1809]"/>
  <match src="returns: returns [54305,54312]" dest="returns: returns [22154,22161]"/>
  <match src="(: ( [100867,100868]" dest="(: ( [40023,40024]"/>
  <match src="uint256: uint256 [92523,92530]" dest="uint256: uint256 [31679,31686]"/>
  <match src="identifier: c [3407,3408]" dest="identifier: c [3971,3972]"/>
  <match src="assembly: assembly [33549,33557]" dest="assembly: assembly [51943,51951]"/>
  <match src="identifier: burnFrom [51826,51834]" dest="identifier: burnFrom [27762,27770]"/>
  <match src="primitive_type [17620,17627]" dest="primitive_type [59900,59907]"/>
  <match src="identifier: sub [6640,6643]" dest="identifier: sub [7204,7207]"/>
  <match src="parameter [52833,52848]" dest="parameter [56127,56142]"/>
  <match src="view: view [93911,93915]" dest="view: view [33067,33071]"/>
  <match src=",: , [3374,3375]" dest=",: , [3938,3939]"/>
  <match src="function: function [63904,63912]" dest="function: function [28692,28700]"/>
  <match src="call_expression [103575,103582]" dest="call_expression [42731,42738]"/>
  <match src="): ) [47822,47823]" dest="): ) [17955,17956]"/>
  <match src="external: external [99674,99682]" dest="external: external [38830,38838]"/>
  <match src="parameter [30054,30066]" dest="parameter [48448,48460]"/>
  <match src="private: private [23257,23264]" dest="private: private [67792,67799]"/>
  <match src="{: { [86690,86691]" dest="{: { [75200,75201]"/>
  <match src="(: ( [31586,31587]" dest="(: ( [49980,49981]"/>
  <match src="(: ( [29631,29632]" dest="(: ( [48025,48026]"/>
  <match src="event_paramater [81416,81429]" dest="event_paramater [61474,61487]"/>
  <match src="type_name [91016,91023]" dest="type_name [77326,77333]"/>
  <match src=".: . [6186,6187]" dest=".: . [6750,6751]"/>
  <match src="identifier: getInitializeIncentive [46527,46549]" dest="identifier: getInitializeIncentive [16660,16682]"/>
  <match src=".: . [95832,95833]" dest=".: . [34988,34989]"/>
  <match src="emit: emit [82263,82267]" dest="emit: emit [82472,82476]"/>
  <match src="identifier: mul [83382,83385]" dest="identifier: div [73369,73372]"/>
  <match src="return_statement [47878,47928]" dest="return_statement [18011,18061]"/>
  <match src="identifier: newImplementation [91492,91509]" dest="identifier: newImplementation [77802,77819]"/>
  <match src="type_name [46800,46807]" dest="type_name [16933,16940]"/>
  <match src="(: ( [69212,69213]" dest="(: ( [62613,62614]"/>
  <match src="type_name [25705,25712]" dest="type_name [61132,61139]"/>
  <match src="type_name [41932,41939]" dest="type_name [12065,12072]"/>
  <match src="(: ( [81760,81761]" dest="(: ( [72258,72259]"/>
  <match src="identifier: reason [32067,32073]" dest="identifier: reason [50461,50467]"/>
  <match src="type_name [43624,43631]" dest="type_name [13757,13764]"/>
  <match src="(: ( [82817,82818]" dest="(: ( [72983,72984]"/>
  <match src="member_expression [96292,96307]" dest="member_expression [35448,35463]"/>
  <match src="(: ( [55675,55676]" dest="(: ( [23524,23525]"/>
  <match src=".: . [66707,66708]" dest=".: . [21297,21298]"/>
  <match src="return_statement [8085,8133]" dest="return_statement [8649,8697]"/>
  <match src="]: ] [97886,97887]" dest="]: ] [37042,37043]"/>
  <match src="function: function [44828,44836]" dest="function: function [14961,14969]"/>
  <match src="function: function [48706,48714]" dest="function: function [18839,18847]"/>
  <match src=":: : [47904,47905]" dest=":: : [18037,18038]"/>
  <match src="identifier: oracle [93560,93566]" dest="identifier: oracle [32716,32722]"/>
  <match src="): ) [97544,97545]" dest="): ) [36700,36701]"/>
  <match src="number_literal: 225 [44202,44205]" dest="number_literal: 225 [14335,14338]"/>
  <match src="parameter [32083,32099]" dest="parameter [50477,50493]"/>
  <match src="identifier: Claim [82268,82273]" dest="identifier: Commit [82477,82483]"/>
  <match src="member_expression [101582,101613]" dest="member_expression [40738,40769]"/>
  <match src="user_defined_type [7596,7600]" dest="user_defined_type [8160,8164]"/>
  <match src="): ) [8643,8644]" dest="): ) [9207,9208]"/>
  <match src="primitive_type [93823,93830]" dest="primitive_type [32979,32986]"/>
  <match src="member_expression [101033,101054]" dest="member_expression [40189,40210]"/>
  <match src="identifier: offset [96301,96307]" dest="identifier: offset [35457,35463]"/>
  <match src="call_expression [94294,94305]" dest="call_expression [33450,33461]"/>
  <match src="type_name [43702,43709]" dest="type_name [13835,13842]"/>
  <match src="==: == [1932,1934]" dest="==: == [2496,2498]"/>
  <match src="contract: contract [90258,90266]" dest="contract: contract [76568,76576]"/>
  <match src=".: . [107002,107003]" dest=".: . [70344,70345]"/>
  <match src="parameter [46128,46147]" dest="parameter [16261,16280]"/>
  <match src="visibility [104857,104865]" dest="visibility [44013,44021]"/>
  <match src="type_name [1348,1355]" dest="type_name [1912,1919]"/>
  <match src="type_name [81247,81254]" dest="type_name [71720,71727]"/>
  <match src=".: . [102136,102137]" dest=".: . [41292,41293]"/>
  <match src="view: view [92859,92863]" dest="view: view [32015,32019]"/>
  <match src=".: . [97999,98000]" dest=".: . [37155,37156]"/>
  <match src="primitive_type [28429,28435]" dest="primitive_type [46823,46829]"/>
  <match src="uint256: uint256 [97833,97840]" dest="uint256: uint256 [36989,36996]"/>
  <match src="primitive_type [93271,93278]" dest="primitive_type [32427,32434]"/>
  <match src="variable_declaration_statement [98530,98565]" dest="variable_declaration_statement [37686,37721]"/>
  <match src="call_expression [82096,82131]" dest="call_expression [72324,72359]"/>
  <match src="comment: /* Pool */ [43500,43510]" dest="comment: /* Pool */ [13633,13643]"/>
  <match src="identifier: that [32004,32008]" dest="identifier: that [50398,50402]"/>
  <match src="array_access [105306,105334]" dest="array_access [44462,44490]"/>
  <match src="internal: internal [6509,6517]" dest="internal: internal [7073,7081]"/>
  <match src=",: , [7447,7448]" dest=",: , [8011,8012]"/>
  <match src="(: ( [83024,83025]" dest="(: ( [72594,72595]"/>
  <match src="identifier: start [42101,42106]" dest="identifier: start [12234,12239]"/>
  <match src="state_variable_declaration [43229,43294]" dest="state_variable_declaration [13362,13427]"/>
  <match src="member_expression [84412,84451]" dest="member_expression [81013,81062]"/>
  <match src="): ) [8241,8242]" dest="): ) [8805,8806]"/>
  <match src="public: public [96498,96504]" dest="public: public [35654,35660]"/>
  <match src="): ) [108731,108732]" dest="): ) [56909,56910]"/>
  <match src="primitive_type [18996,19003]" dest="primitive_type [20006,20013]"/>
  <match src="identifier: reason [100464,100470]" dest="identifier: reason [39620,39626]"/>
  <match src="type_name [55255,55259]" dest="type_name [23104,23108]"/>
  <match src="{: { [86262,86263]" dest="{: { [74772,74773]"/>
  <match src="member_expression [95511,95547]" dest="member_expression [34667,34703]"/>
  <match src="parameter [8476,8487]" dest="parameter [9040,9051]"/>
  <match src="uint256: uint256 [100885,100892]" dest="uint256: uint256 [40041,40048]"/>
  <match src="identifier: DEBT_RATIO_CAP [47452,47466]" dest="identifier: DEBT_RATIO_CAP [17585,17599]"/>
  <match src="member_expression [104876,104912]" dest="member_expression [44032,44068]"/>
  <match src="identifier: transfer [54684,54692]" dest="identifier: transfer [22533,22541]"/>
  <match src="call_struct_argument [8319,8357]" dest="call_struct_argument [8883,8921]"/>
  <match src="returns: returns [6531,6538]" dest="returns: returns [7095,7102]"/>
  <match src="{: { [6579,6580]" dest="{: { [7143,7144]"/>
  <match src="identifier: value [99459,99464]" dest="identifier: value [38615,38620]"/>
  <match src="primitive_type [759,766]" dest="primitive_type [1323,1330]"/>
  <match src="uint: uint [56241,56245]" dest="uint: uint [24090,24094]"/>
  <match src="(: ( [30216,30217]" dest="(: ( [48610,48611]"/>
  <match src=".: . [7206,7207]" dest=".: . [7770,7771]"/>
  <match src="parameter [54951,54958]" dest="parameter [22800,22807]"/>
  <match src="identifier: amount [52858,52864]" dest="identifier: amount [56152,56158]"/>
  <match src="state_mutability [98085,98089]" dest="state_mutability [37241,37245]"/>
  <match src="function_definition [97908,98035]" dest="function_definition [37064,37191]"/>
  <match src="identifier: Constants [78093,78102]" dest="identifier: Constants [61800,61809]"/>
  <match src="returns: returns [48445,48452]" dest="returns: returns [18578,18585]"/>
  <match src="private: private [106546,106553]" dest="private: private [69888,69895]"/>
  <match src="(: ( [54950,54951]" dest="(: ( [22799,22800]"/>
  <match src="comment: /*     Copyright 2019 dYdX Trading Inc.     Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [4771,5436]" dest="comment: /*     Copyright 2019 dYdX Trading Inc.     Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [5335,6000]"/>
  <match src="identifier: account [102550,102557]" dest="identifier: account [41706,41713]"/>
  <match src="function_body [100543,100625]" dest="function_body [39699,39781]"/>
  <match src="return_type_definition [1680,1697]" dest="return_type_definition [2244,2261]"/>
  <match src="view: view [54574,54578]" dest="view: view [22423,22427]"/>
  <match src="identifier: balance [88077,88084]" dest="identifier: balance [29577,29584]"/>
  <match src="member_expression [102904,102915]" dest="member_expression [42060,42071]"/>
  <match src="returns: returns [47035,47042]" dest="returns: returns [17168,17175]"/>
  <match src="identifier: sub [102764,102767]" dest="identifier: sub [41920,41923]"/>
  <match src="visibility [98362,98368]" dest="visibility [37518,37524]"/>
  <match src="number_literal: 42 [34946,34948]" dest="number_literal: 42 [53340,53342]"/>
  <match src="identifier: amount [13492,13498]" dest="identifier: amount [26481,26487]"/>
  <match src="identifier: value [8123,8128]" dest="identifier: value [8687,8692]"/>
  <match src="constant: constant [41733,41741]" dest="constant: constant [11866,11874]"/>
  <match src=".: . [104400,104401]" dest=".: . [43556,43557]"/>
  <match src="new_expression [33745,33754]" dest="new_expression [52139,52148]"/>
  <match src="return_statement [46708,46733]" dest="return_statement [16841,16866]"/>
  <match src="call_argument [5919,5931]" dest="call_argument [6483,6495]"/>
  <match src="{: { [813,814]" dest="{: { [1377,1378]"/>
  <match src="): ) [98076,98077]" dest="): ) [37232,37233]"/>
  <match src="{: { [100108,100109]" dest="{: { [39264,39265]"/>
  <match src="primitive_type [27979,27985]" dest="primitive_type [46373,46379]"/>
  <match src="type_name [55433,55437]" dest="type_name [23282,23286]"/>
  <match src="primitive_type [89301,89308]" dest="primitive_type [30801,30808]"/>
  <match src="state_variable_declaration [43515,43569]" dest="state_variable_declaration [13648,13702]"/>
  <match src="member_expression [95511,95526]" dest="member_expression [34667,34682]"/>
  <match src="): ) [8069,8070]" dest="): ) [8633,8634]"/>
  <match src="identifier: decrementBalanceOfStaged [101714,101738]" dest="identifier: decrementBalanceOfStaged [40870,40894]"/>
  <match src=".: . [96432,96433]" dest=".: . [35588,35589]"/>
  <match src="identifier: decrementBalanceOfPhantom [83630,83655]" dest="identifier: recordVote [80672,80682]"/>
  <match src="expression_statement [81818,81854]" dest="expression_statement [83991,84048]"/>
  <match src="identifier: self [7916,7920]" dest="identifier: self [8480,8484]"/>
  <match src="{: { [6967,6968]" dest="{: { [7531,7532]"/>
  <match src="parameter [105192,105209]" dest="parameter [44348,44365]"/>
  <match src="uint112: uint112 [55834,55841]" dest="uint112: uint112 [23683,23690]"/>
  <match src="primitive_type [94140,94147]" dest="primitive_type [33296,33303]"/>
  <match src="]: ] [102253,102254]" dest="]: ] [41409,41410]"/>
  <match src="identifier: Status [95048,95054]" dest="identifier: Status [34204,34210]"/>
  <match src="return_type_definition [94233,94250]" dest="return_type_definition [33389,33406]"/>
  <match src="identifier: isZero [9473,9479]" dest="identifier: isZero [10037,10043]"/>
  <match src="returns: returns [74008,74015]" dest="returns: returns [62807,62814]"/>
  <match src="=: = [35209,35210]" dest="=: = [53603,53604]"/>
  <match src="expression_statement [19773,19844]" dest="expression_statement [65395,65474]"/>
  <match src="]: ] [102665,102666]" dest="]: ] [41821,41822]"/>
  <match src="identifier: value [8099,8104]" dest="identifier: value [8663,8668]"/>
  <match src="contract_declaration [87928,88249]" dest="contract_declaration [29428,29749]"/>
  <match src="(: ( [68153,68154]" dest="(: ( [68004,68005]"/>
  <match src="parameter [102968,102981]" dest="parameter [42124,42137]"/>
  <match src="function_definition [96071,96315]" dest="function_definition [35227,35471]"/>
  <match src="parameter [54503,54507]" dest="parameter [22352,22356]"/>
  <match src="return_statement [92983,92993]" dest="return_statement [32139,32149]"/>
  <match src="array_access [95511,95535]" dest="array_access [34667,34691]"/>
  <match src="return_statement [7741,7753]" dest="return_statement [8305,8317]"/>
  <match src="primitive_type [4639,4645]" dest="primitive_type [5203,5209]"/>
  <match src="call_argument [7715,7719]" dest="call_argument [8279,8283]"/>
  <match src="returns: returns [11569,11576]" dest="returns: returns [24558,24565]"/>
  <match src="state_mutability [47157,47161]" dest="state_mutability [17290,17294]"/>
  <match src="function_definition [48706,48808]" dest="function_definition [18839,18941]"/>
  <match src="visibility [95874,95880]" dest="visibility [35030,35036]"/>
  <match src="call_argument [28674,28682]" dest="call_argument [47068,47076]"/>
  <match src="{: { [2612,2613]" dest="{: { [3176,3177]"/>
  <match src="(: ( [98160,98161]" dest="(: ( [37316,37317]"/>
  <match src="(: ( [54616,54617]" dest="(: ( [22465,22466]"/>
  <match src="identifier: Decimal [65465,65472]" dest="identifier: Decimal [66767,66774]"/>
  <match src="function_body [46149,46225]" dest="function_body [16282,16358]"/>
  <match src="(: ( [103875,103876]" dest="(: ( [43031,43032]"/>
  <match src="primitive_type [96930,96937]" dest="primitive_type [36086,36093]"/>
  <match src="internal: internal [47370,47378]" dest="internal: internal [17503,17511]"/>
  <match src="member_expression [85050,85062]" dest="member_expression [59198,59210]"/>
  <match src="=: = [27469,27470]" dest="=: = [45863,45864]"/>
  <match src="identifier: bstr [34659,34663]" dest="identifier: bstr [53053,53057]"/>
  <match src="): ) [85107,85108]" dest="): ) [59510,59511]"/>
  <match src="=: = [100279,100280]" dest="=: = [39435,39436]"/>
  <match src="(: ( [93419,93420]" dest="(: ( [32575,32576]"/>
  <match src="primitive_type [26162,26169]" dest="primitive_type [56356,56363]"/>
  <match src="(: ( [94007,94008]" dest="(: ( [33163,33164]"/>
  <match src="=: = [105468,105469]" dest="=: = [44624,44625]"/>
  <match src="internal: internal [102069,102077]" dest="internal: internal [41225,41233]"/>
  <match src="(: ( [28435,28436]" dest="(: ( [46829,46830]"/>
  <match src="++: ++ [34066,34068]" dest="++: ++ [52460,52462]"/>
  <match src="uint: uint [56177,56181]" dest="uint: uint [24026,24030]"/>
  <match src="): ) [45240,45241]" dest="): ) [15373,15374]"/>
  <match src="address: address [56082,56089]" dest="address: address [23931,23938]"/>
  <match src=",: , [7087,7088]" dest=",: , [7651,7652]"/>
  <match src="type_name [96165,96172]" dest="type_name [35321,35328]"/>
  <match src="type_name [5592,5599]" dest="type_name [6156,6163]"/>
  <match src="view: view [55802,55806]" dest="view: view [23651,23655]"/>
  <match src="memory: memory [7982,7988]" dest="memory: memory [8546,8552]"/>
  <match src="comment: // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522 [1846,1917]" dest="comment: // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522 [2410,2481]"/>
  <match src="call_argument [58625,58640]" dest="call_argument [74117,74124]"/>
  <match src="assignment_expression [36333,36377]" dest="assignment_expression [54727,54771]"/>
  <match src="identifier: from [99425,99429]" dest="identifier: from [38581,38585]"/>
  <match src="primitive_type [55231,55238]" dest="primitive_type [23080,23087]"/>
  <match src="primitive_type [100353,100360]" dest="primitive_type [39509,39516]"/>
  <match src="{: { [10077,10078]" dest="{: { [10641,10642]"/>
  <match src="function_definition [86624,87240]" dest="function_definition [75134,75750]"/>
  <match src="identifier: burn [56142,56146]" dest="identifier: burn [23991,23995]"/>
  <match src="uint256: uint256 [41932,41939]" dest="uint256: uint256 [12065,12072]"/>
  <match src="return: return [46708,46714]" dest="return: return [16841,16847]"/>
  <match src=",: , [101440,101441]" dest=",: , [40596,40597]"/>
  <match src="identifier: amount [77683,77689]" dest="identifier: amount [84379,84385]"/>
  <match src="): ) [35988,35989]" dest="): ) [54382,54383]"/>
  <match src="variable_declaration [79797,79810]" dest="variable_declaration [64667,64682]"/>
  <match src="member_expression [102741,102763]" dest="member_expression [41897,41919]"/>
  <match src="identifier: onlyFrozenOrLocked [106895,106913]" dest="identifier: onlyFrozenOrLocked [70237,70255]"/>
  <match src="return_type_definition [54726,54740]" dest="return_type_definition [22575,22589]"/>
  <match src="=: = [67606,67607]" dest="=: = [67113,67114]"/>
  <match src="identifier: _state [102191,102197]" dest="identifier: _state [41347,41353]"/>
  <match src="type_name [34758,34763]" dest="type_name [53152,53157]"/>
  <match src="{: { [1698,1699]" dest="{: { [2262,2263]"/>
  <match src="visibility [46430,46438]" dest="visibility [16563,16571]"/>
  <match src="comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      * - Multiplication cannot overflow.      */ [1397,1626]" dest="comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      * - Multiplication cannot overflow.      */ [1961,2190]"/>
  <match src="if_statement [95066,95171]" dest="if_statement [34222,34327]"/>
  <match src="identifier: sender [81839,81845]" dest="identifier: sender [84007,84013]"/>
  <match src="): ) [47294,47295]" dest="): ) [17427,17428]"/>
  <match src="(: ( [9977,9978]" dest="(: ( [10541,10542]"/>
  <match src="): ) [97676,97677]" dest="): ) [36832,36833]"/>
  <match src="uint256: uint256 [42093,42100]" dest="uint256: uint256 [12226,12233]"/>
  <match src="identifier: D256 [46136,46140]" dest="identifier: D256 [16269,16273]"/>
  <match src="parameter [32135,32151]" dest="parameter [50529,50545]"/>
  <match src="function_definition [48314,48400]" dest="function_definition [18447,18533]"/>
  <match src="call_argument [6365,6366]" dest="call_argument [6929,6930]"/>
  <match src="constant: constant [42163,42171]" dest="constant: constant [12296,12304]"/>
  <match src="return: return [47424,47430]" dest="return: return [17557,17563]"/>
  <match src="call_expression [82495,82508]" dest="call_expression [72726,72739]"/>
  <match src="type_cast_expression [35013,35036]" dest="type_cast_expression [53407,53430]"/>
  <match src="identifier: div [94720,94723]" dest="identifier: div [33876,33879]"/>
  <match src="]: ] [97145,97146]" dest="]: ] [36301,36302]"/>
  <match src="indexed: indexed [99439,99446]" dest="indexed: indexed [38595,38602]"/>
  <match src="call_struct_argument [48053,48086]" dest="call_struct_argument [18186,18219]"/>
  <match src=".: . [100736,100737]" dest=".: . [39892,39893]"/>
  <match src="identifier: that [106949,106953]" dest="identifier: that [70291,70295]"/>
  <match src=",: , [21837,21838]" dest=",: , [65038,65039]"/>
  <match src="function: function [104588,104596]" dest="function: function [43744,43752]"/>
  <match src="return_statement [74117,74126]" dest="return_statement [63180,63189]"/>
  <match src="primitive_type [92573,92580]" dest="primitive_type [31729,31736]"/>
  <match src="internal: internal [48632,48640]" dest="internal: internal [18765,18773]"/>
  <match src="return: return [6164,6170]" dest="return: return [6728,6734]"/>
  <match src="call_argument [83089,83099]" dest="call_argument [73356,73366]"/>
  <match src="identifier: OpenZeppelinUpgradesAddress [86234,86261]" dest="identifier: OpenZeppelinUpgradesAddress [74744,74771]"/>
  <match src="(: ( [44777,44778]" dest="(: ( [14910,14911]"/>
  <match src="call_expression [9908,9929]" dest="call_expression [10472,10493]"/>
  <match src="view: view [12370,12374]" dest="view: view [25359,25363]"/>
  <match src="=: = [101580,101581]" dest="=: = [40736,40737]"/>
  <match src="type_name [94828,94835]" dest="type_name [33984,33991]"/>
  <match src="=: = [81020,81021]" dest="=: = [71449,71450]"/>
  <match src="call_struct_argument [8721,8765]" dest="call_struct_argument [9285,9329]"/>
  <match src="parameter [91484,91509]" dest="parameter [77794,77819]"/>
  <match src="parameter [18996,19019]" dest="parameter [20006,20025]"/>
  <match src="call_expression [6764,6808]" dest="call_expression [7328,7372]"/>
  <match src="member_expression [104147,104160]" dest="member_expression [43303,43316]"/>
  <match src="address: address [102968,102975]" dest="address: address [42124,42131]"/>
  <match src="uint256: uint256 [19738,19745]" dest="uint256: uint256 [65360,65367]"/>
  <match src="call_expression [7902,7942]" dest="call_expression [8466,8506]"/>
  <match src="returns: returns [6721,6728]" dest="returns: returns [7285,7292]"/>
  <match src="uint256: uint256 [96800,96807]" dest="uint256: uint256 [35956,35963]"/>
  <match src="(: ( [46774,46775]" dest="(: ( [16907,16908]"/>
  <match src="function_definition [54965,55025]" dest="function_definition [22814,22874]"/>
  <match src="returns: returns [6941,6948]" dest="returns: returns [7505,7512]"/>
  <match src="state_variable_declaration [27629,27661]" dest="state_variable_declaration [46023,46055]"/>
  <match src="type_cast_expression [41756,41807]" dest="type_cast_expression [11889,11940]"/>
  <match src="function_definition [93883,93977]" dest="function_definition [33039,33133]"/>
  <match src=".: . [102755,102756]" dest=".: . [41911,41912]"/>
  <match src="): ) [81774,81775]" dest="): ) [72272,72273]"/>
  <match src="return_type_definition [94819,94836]" dest="return_type_definition [33975,33992]"/>
  <match src="parameter [46453,46460]" dest="parameter [16586,16593]"/>
  <match src=",: , [81602,81603]" dest=",: , [72125,72126]"/>
  <match src="uint256: uint256 [5650,5657]" dest="uint256: uint256 [6214,6221]"/>
  <match src="primitive_type [103188,103194]" dest="primitive_type [42344,42350]"/>
  <match src="(: ( [29818,29819]" dest="(: ( [48212,48213]"/>
  <match src="if_statement [30872,31424]" dest="if_statement [49266,49818]"/>
  <match src="): ) [32336,32337]" dest="): ) [50730,50731]"/>
  <match src="call_argument [7907,7941]" dest="call_argument [8471,8505]"/>
  <match src="}: } [4766,4767]" dest="}: } [5330,5331]"/>
  <match src="(: ( [99925,99926]" dest="(: ( [39081,39082]"/>
  <match src="identifier: b [1364,1365]" dest="identifier: b [1928,1929]"/>
  <match src="}: } [91785,91786]" dest="}: } [78095,78096]"/>
  <match src="type_name [102831,102838]" dest="type_name [41987,41994]"/>
  <match src="identifier: msg [83025,83028]" dest="identifier: msg [72595,72598]"/>
  <match src="identifier: reason [29525,29531]" dest="identifier: reason [47919,47925]"/>
  <match src="identifier: greaterThanOrEqualTo [9188,9208]" dest="identifier: greaterThanOrEqualTo [9752,9772]"/>
  <match src="identifier: Require [69289,69296]" dest="identifier: Require [81937,81944]"/>
  <match src="(: ( [48528,48529]" dest="(: ( [18661,18662]"/>
  <match src="(: ( [6608,6609]" dest="(: ( [7172,7173]"/>
  <match src="call_argument [50969,50973]" dest="call_argument [71877,71881]"/>
  <match src="function: function [102936,102944]" dest="function: function [42092,42100]"/>
  <match src="return_type_definition [63863,63898]" dest="return_type_definition [28651,28686]"/>
  <match src="using: using [15764,15769]" dest="using: using [60775,60780]"/>
  <match src="identifier: accounts [101555,101563]" dest="identifier: accounts [40711,40719]"/>
  <match src="): ) [97574,97575]" dest="): ) [36730,36731]"/>
  <match src="member_expression [100432,100455]" dest="member_expression [39588,39611]"/>
  <match src="parameter [103172,103186]" dest="parameter [42328,42342]"/>
  <match src="user_defined_type [7431,7435]" dest="user_defined_type [7995,7999]"/>
  <match src="return: return [8869,8875]" dest="return: return [9433,9439]"/>
  <match src="member_expression [10102,10109]" dest="member_expression [10666,10673]"/>
  <match src="(: ( [96660,96661]" dest="(: ( [35816,35817]"/>
  <match src="member_expression [98406,98446]" dest="member_expression [37562,37602]"/>
  <match src="identifier: owner [103308,103313]" dest="identifier: owner [42464,42469]"/>
  <match src="identifier: reason [28149,28155]" dest="identifier: reason [46543,46549]"/>
  <match src="): ) [6807,6808]" dest="): ) [7371,7372]"/>
  <match src="}: } [33763,33764]" dest="}: } [52157,52158]"/>
  <match src="comment: /**      * Global      */ [93351,93376]" dest="comment: /**      * Global      */ [32507,32532]"/>
  <match src="contract_body [88576,88840]" dest="contract_body [30076,30340]"/>
  <match src="primitive_type [99658,99665]" dest="primitive_type [38814,38821]"/>
  <match src="{: { [51769,51770]" dest="{: { [27705,27706]"/>
  <match src="unary_expression [30876,30881]" dest="unary_expression [49270,49275]"/>
  <match src="bytes32: bytes32 [27851,27858]" dest="bytes32: bytes32 [46245,46252]"/>
  <match src="expression_statement [35379,35424]" dest="expression_statement [53773,53818]"/>
  <match src="{: { [9412,9413]" dest="{: { [9976,9977]"/>
  <match src="call_argument [22975,22981]" dest="call_argument [56483,56489]"/>
  <match src="number_literal: 100 [43286,43289]" dest="number_literal: 100 [13419,13422]"/>
  <match src="parameter [8278,8289]" dest="parameter [8842,8853]"/>
  <match src="): ) [93286,93287]" dest="): ) [32442,32443]"/>
  <match src="!=: != [34040,34042]" dest="!=: != [52434,52436]"/>
  <match src=",: , [85366,85367]" dest=",: , [81297,81298]"/>
  <match src="): ) [22036,22037]" dest="): ) [65150,65151]"/>
  <match src="string: string [31632,31638]" dest="string: string [50026,50032]"/>
  <match src="primitive_type [21071,21078]" dest="primitive_type [56868,56875]"/>
  <match src="parameter [7508,7519]" dest="parameter [8072,8083]"/>
  <match src="function_definition [91457,91784]" dest="function_definition [77767,78094]"/>
  <match src="visibility [80998,81005]" dest="visibility [71427,71434]"/>
  <match src="=: = [44082,44083]" dest="=: = [14215,14216]"/>
  <match src="returns: returns [33843,33850]" dest="returns: returns [52237,52244]"/>
  <match src=",: , [53136,53137]" dest=",: , [65783,65784]"/>
  <match src="member_expression [103772,103805]" dest="member_expression [42928,42961]"/>
  <match src="function_body [47180,47227]" dest="function_body [17313,17360]"/>
  <match src="uint256: uint256 [81761,81768]" dest="uint256: uint256 [72259,72266]"/>
  <match src="identifier: _state [100281,100287]" dest="identifier: _state [39437,39443]"/>
  <match src="type_name [55939,55943]" dest="type_name [23788,23792]"/>
  <match src="call_argument [31867,31886]" dest="call_argument [50261,50280]"/>
  <match src="return_type_definition [94022,94039]" dest="return_type_definition [33178,33195]"/>
  <match src="primitive_type [81335,81342]" dest="primitive_type [71637,71644]"/>
  <match src="): ) [9885,9886]" dest="): ) [10449,10450]"/>
  <match src="primitive_type [44486,44493]" dest="primitive_type [14619,14626]"/>
  <match src="}: } [9039,9040]" dest="}: } [9603,9604]"/>
  <match src="function_body [45632,45684]" dest="function_body [15765,15817]"/>
  <match src="return: return [48573,48579]" dest="return: return [18706,18712]"/>
  <match src="array_access [96988,97008]" dest="array_access [36144,36164]"/>
  <match src="call_argument [29370,29376]" dest="call_argument [47764,47770]"/>
  <match src="returns: returns [12375,12382]" dest="returns: returns [25364,25371]"/>
  <match src="identifier: COLON [27557,27562]" dest="identifier: COLON [45951,45956]"/>
  <match src="identifier: amount [77515,77521]" dest="identifier: amount [62585,62591]"/>
  <match src="identifier: current [96050,96057]" dest="identifier: current [35206,35213]"/>
  <match src="call_expression [74181,74216]" dest="call_expression [68464,68478]"/>
  <match src="identifier: decimals [54343,54351]" dest="identifier: decimals [22192,22200]"/>
  <match src="address: address [76130,76137]" dest="address: address [84305,84312]"/>
  <match src="identifier: coupons [102731,102738]" dest="identifier: coupons [41887,41894]"/>
  <match src="number_literal: 0 [82512,82513]" dest="number_literal: 0 [72743,72744]"/>
  <match src="type_name [8395,8399]" dest="type_name [8959,8963]"/>
  <match src="function_body [46809,46851]" dest="function_body [16942,16984]"/>
  <match src="identifier: to [54790,54792]" dest="identifier: to [22639,22641]"/>
  <match src="uint256: uint256 [89301,89308]" dest="uint256: uint256 [30801,30808]"/>
  <match src="identifier: payloadB [32117,32125]" dest="identifier: payloadB [50511,50519]"/>
  <match src="/: / [43195,43196]" dest="/: / [13328,13329]"/>
  <match src="pure: pure [47833,47837]" dest="pure: pure [17966,17970]"/>
  <match src="identifier: epoch [102617,102622]" dest="identifier: epoch [41773,41778]"/>
  <match src="comment: // populate the string starting with the least-significant character [34189,34257]" dest="comment: // populate the string starting with the least-significant character [52583,52651]"/>
  <match src="}: } [85722,85723]" dest="}: } [74232,74233]"/>
  <match src="&lt;: &lt; [35216,35217]" dest="&lt;: &lt; [53610,53611]"/>
  <match src="(: ( [53443,53444]" dest="(: ( [61319,61320]"/>
  <match src="memory: memory [7601,7607]" dest="memory: memory [8165,8171]"/>
  <match src="call_expression [83260,83289]" dest="call_expression [79991,80012]"/>
  <match src="function_body [94251,94313]" dest="function_body [33407,33469]"/>
  <match src="identifier: accounts [102499,102507]" dest="identifier: accounts [41655,41663]"/>
  <match src="identifier: account [51902,51909]" dest="identifier: account [27838,27845]"/>
  <match src="function_body [100910,101126]" dest="function_body [40066,40282]"/>
  <match src="identifier: ORACLE_RESERVE_MINIMUM [44912,44934]" dest="identifier: ORACLE_RESERVE_MINIMUM [15045,15067]"/>
  <match src="(: ( [44752,44753]" dest="(: ( [14885,14886]"/>
  <match src="parenthesized_expression [43185,43200]" dest="parenthesized_expression [13318,13333]"/>
  <match src="(: ( [22107,22108]" dest="(: ( [65243,65244]"/>
  <match src="(: ( [82918,82919]" dest="(: ( [74180,74181]"/>
  <match src="primitive_type [34758,34763]" dest="primitive_type [53152,53157]"/>
  <match src="function_definition [93005,93127]" dest="function_definition [32161,32283]"/>
  <match src="private: private [44108,44115]" dest="private: private [14241,14248]"/>
  <match src="identifier: totalRewarded [84412,84425]" dest="identifier: startFor [81013,81021]"/>
  <match src="identifier: _state [101908,101914]" dest="identifier: _state [41064,41070]"/>
  <match src="): ) [28155,28156]" dest="): ) [46549,46550]"/>
  <match src="pure: pure [46786,46790]" dest="pure: pure [16919,16923]"/>
  <match src="call_expression [83778,83785]" dest="call_expression [73640,73647]"/>
  <match src="identifier: amount [105219,105225]" dest="identifier: amount [44375,44381]"/>
  <match src="string_literal [82837,82872]" dest="string_literal [73003,73041]"/>
  <match src="identifier: file [28518,28522]" dest="identifier: file [46912,46916]"/>
  <match src="identifier: Locked [106737,106743]" dest="identifier: Locked [70079,70085]"/>
  <match src="identifier: b [7539,7540]" dest="identifier: b [8103,8104]"/>
  <match src="event_paramater [13730,13748]" dest="event_paramater [26719,26737]"/>
  <match src="{: { [103025,103026]" dest="{: { [42181,42182]"/>
  <match src=".: . [105494,105495]" dest=".: . [44650,44651]"/>
  <match src="identifier: owner [55055,55060]" dest="identifier: owner [22904,22909]"/>
  <match src="identifier: stringify [32630,32639]" dest="identifier: stringify [51024,51033]"/>
  <match src="}: } [94194,94195]" dest="}: } [33350,33351]"/>
  <match src="state_mutability [56621,56625]" dest="state_mutability [19846,19850]"/>
  <match src="}: } [35595,35596]" dest="}: } [53989,53990]"/>
  <match src="): ) [46550,46551]" dest="): ) [16683,16684]"/>
  <match src="primitive_type [42970,42977]" dest="primitive_type [13103,13110]"/>
  <match src="uint256: uint256 [68392,68399]" dest="uint256: uint256 [73313,73320]"/>
  <match src="type_name [43515,43522]" dest="type_name [13648,13655]"/>
  <match src="primitive_type [48154,48161]" dest="primitive_type [18287,18294]"/>
  <match src="{: { [88035,88036]" dest="{: { [29535,29536]"/>
  <match src="expression_statement [82096,82132]" dest="expression_statement [72324,72360]"/>
  <match src="identifier: b [8205,8206]" dest="identifier: b [8769,8770]"/>
  <match src="uint256: uint256 [9878,9885]" dest="uint256: uint256 [10442,10449]"/>
  <match src=".: . [102609,102610]" dest=".: . [41765,41766]"/>
  <match src="identifier: token1 [53484,53490]" dest="identifier: to [61358,61360]"/>
  <match src="call_expression [94268,94275]" dest="call_expression [33424,33431]"/>
  <match src="call_argument [101958,101964]" dest="call_argument [41114,41120]"/>
  <match src=".: . [101345,101346]" dest=".: . [40501,40502]"/>
  <match src="(: ( [102813,102814]" dest="(: ( [41969,41970]"/>
  <match src="identifier: payloadB [32564,32572]" dest="identifier: payloadB [50958,50966]"/>
  <match src="function: function [81743,81751]" dest="function: function [72241,72249]"/>
  <match src="expression_statement [101234,101322]" dest="expression_statement [40390,40478]"/>
  <match src="return: return [45642,45648]" dest="return: return [15775,15781]"/>
  <match src="pure: pure [8040,8044]" dest="pure: pure [8604,8608]"/>
  <match src="(: ( [54227,54228]" dest="(: ( [22076,22077]"/>
  <match src="identifier: amount [103008,103014]" dest="identifier: amount [42164,42170]"/>
  <match src="bytes32: bytes32 [30715,30722]" dest="bytes32: bytes32 [49109,49116]"/>
  <match src="expression_statement [83911,84024]" dest="expression_statement [81821,81927]"/>
  <match src="function: function [54514,54522]" dest="function: function [22363,22371]"/>
  <match src="uint256: uint256 [383,390]" dest="uint256: uint256 [947,954]"/>
  <match src="parameter [74017,74024]" dest="parameter [62816,62823]"/>
  <match src="[: [ [103268,103269]" dest="[: [ [42424,42425]"/>
  <match src="): ) [55023,55024]" dest="): ) [22872,22873]"/>
  <match src="function_definition [96883,97035]" dest="function_definition [36039,36191]"/>
  <match src="call_expression [107274,107290]" dest="call_expression [70616,70632]"/>
  <match src="call_argument [6799,6803]" dest="call_argument [7363,7367]"/>
  <match src="function_definition [45175,45288]" dest="function_definition [15308,15421]"/>
  <match src="struct_member [88069,88085]" dest="struct_member [29569,29585]"/>
  <match src=".: . [94446,94447]" dest=".: . [33602,33603]"/>
  <match src="member_expression [93544,93566]" dest="member_expression [32700,32722]"/>
  <match src="function: function [101132,101140]" dest="function: function [40288,40296]"/>
  <match src="(: ( [35761,35762]" dest="(: ( [54155,54156]"/>
  <match src=":: : [6352,6353]" dest=":: : [6916,6917]"/>
  <match src="address: address [19719,19726]" dest="address: address [65326,65333]"/>
  <match src="}: } [104197,104198]" dest="}: } [43353,43354]"/>
  <match src="}: } [9684,9685]" dest="}: } [10248,10249]"/>
  <match src="parameter [94509,94524]" dest="parameter [33665,33680]"/>
  <match src="returns: returns [795,802]" dest="returns: returns [1359,1366]"/>
  <match src="(: ( [96375,96376]" dest="(: ( [35531,35532]"/>
  <match src="uint256: uint256 [71296,71303]" dest="uint256: uint256 [66981,66988]"/>
  <match src="call_argument [50987,50996]" dest="call_argument [65622,65659]"/>
  <match src="visibility [94807,94813]" dest="visibility [33963,33969]"/>
  <match src="type_name [55187,55191]" dest="type_name [23036,23040]"/>
  <match src="string_literal [85380,85392]" dest="string_literal [81311,81320]"/>
  <match src="expression_statement [107302,107304]" dest="expression_statement [70644,70646]"/>
  <match src="returns: returns [7319,7326]" dest="returns: returns [7883,7890]"/>
  <match src="call_argument [52915,52922]" dest="call_argument [56192,56199]"/>
  <match src="call_argument [22490,22496]" dest="call_argument [19927,19933]"/>
  <match src="identifier: sender [82278,82284]" dest="identifier: sender [82488,82494]"/>
  <match src="yul_path [91744,91748]" dest="yul_path [78054,78058]"/>
  <match src="function: function [46635,46643]" dest="function: function [16768,16776]"/>
  <match src="uint256: uint256 [46922,46929]" dest="uint256: uint256 [17055,17062]"/>
  <match src="returns: returns [97558,97565]" dest="returns: returns [36714,36721]"/>
  <match src="function: function [746,754]" dest="function: function [1310,1318]"/>
  <match src="identifier: debt [100274,100278]" dest="identifier: debt [39430,39434]"/>
  <match src="identifier: denominator [9826,9837]" dest="identifier: denominator [10390,10401]"/>
  <match src="number_literal: 24e16 [43744,43749]" dest="number_literal: 24e16 [13877,13882]"/>
  <match src="primitive_type [81134,81141]" dest="primitive_type [71566,71573]"/>
  <match src="type_cast_expression [35018,35035]" dest="type_cast_expression [53412,53429]"/>
  <match src="parameter [94031,94038]" dest="parameter [33187,33194]"/>
  <match src="identifier: Upgradeable [108051,108062]" dest="identifier: Upgradeable [78822,78833]"/>
  <match src="type_name [89312,89323]" dest="type_name [30812,30823]"/>
  <match src="user_defined_type [47393,47405]" dest="user_defined_type [17526,17538]"/>
  <match src="call_expression [7362,7396]" dest="call_expression [7926,7960]"/>
  <match src="type_name [9521,9525]" dest="type_name [10085,10089]"/>
  <match src="type_name [88453,88460]" dest="type_name [29953,29960]"/>
  <match src="identifier: sender [81581,81587]" dest="identifier: sender [72104,72110]"/>
  <match src="function: function [44947,44955]" dest="function: function [15080,15088]"/>
  <match src="type_name [53468,53475]" dest="type_name [61342,61349]"/>
  <match src="number_literal: 0 [21363,21364]" dest="number_literal: 0 [62528,62529]"/>
  <match src="identifier: that [50922,50926]" dest="identifier: that [71824,71828]"/>
  <match src="return_statement [96184,96309]" dest="return_statement [35340,35465]"/>
  <match src="comment: // 60% - lower supermajority [42829,42857]" dest="comment: // 60% - lower supermajority [12962,12990]"/>
  <match src="parameter [330,339]" dest="parameter [894,903]"/>
  <match src="uint256: uint256 [804,811]" dest="uint256: uint256 [1368,1375]"/>
  <match src="uint256: uint256 [52850,52857]" dest="uint256: uint256 [56144,56151]"/>
  <match src="internal: internal [28933,28941]" dest="internal: internal [47327,47335]"/>
  <match src="primitive_type [6489,6496]" dest="primitive_type [7053,7060]"/>
  <match src="++: ++ [35223,35225]" dest="++: ++ [53617,53619]"/>
  <match src="identifier: D256 [9480,9484]" dest="identifier: D256 [10044,10048]"/>
  <match src="type_name [7251,7255]" dest="type_name [7815,7819]"/>
  <match src="address: address [98343,98350]" dest="address: address [37499,37506]"/>
  <match src=".: . [95826,95827]" dest=".: . [34982,34983]"/>
  <match src="call_argument [2028,2063]" dest="call_argument [2592,2627]"/>
  <match src="{: { [105748,105749]" dest="{: { [44904,44905]"/>
  <match src="uint: uint [79136,79140]" dest="uint: uint [62968,62972]"/>
  <match src="visibility [33822,33829]" dest="visibility [52216,52223]"/>
  <match src="interface_declaration [54028,56425]" dest="interface_declaration [21877,24274]"/>
  <match src="binary_expression [9544,9559]" dest="binary_expression [10108,10123]"/>
  <match src="(: ( [101090,101091]" dest="(: ( [40246,40247]"/>
  <match src="=: = [33142,33143]" dest="=: = [51536,51537]"/>
  <match src="address: address [55231,55238]" dest="address: address [23080,23087]"/>
  <match src="return_statement [45030,45163]" dest="return_statement [15163,15296]"/>
  <match src="parameter [94414,94421]" dest="parameter [33570,33577]"/>
  <match src="(: ( [91235,91236]" dest="(: ( [77545,77546]"/>
  <match src="call_expression [9658,9678]" dest="call_expression [10222,10242]"/>
  <match src="identifier: getInitialStakeMultiple [82561,82584]" dest="identifier: getInitialStakeMultiple [72779,72802]"/>
  <match src="internal: internal [2580,2588]" dest="internal: internal [3144,3152]"/>
  <match src="{: { [9527,9528]" dest="{: { [10091,10092]"/>
  <match src="identifier: epoch [96923,96928]" dest="identifier: epoch [36079,36084]"/>
  <match src="return_type_definition [96652,96669]" dest="return_type_definition [35808,35825]"/>
  <match src="pure: pure [46675,46679]" dest="pure: pure [16808,16812]"/>
  <match src="call_argument [30479,30487]" dest="call_argument [48873,48881]"/>
  <match src="identifier: input [36863,36868]" dest="identifier: input [55257,55262]"/>
  <match src="call_argument [101103,101110]" dest="call_argument [40259,40266]"/>
  <match src="pure: pure [8973,8977]" dest="pure: pure [9537,9541]"/>
  <match src="state_mutability [46278,46282]" dest="state_mutability [16411,16415]"/>
  <match src=",: , [31046,31047]" dest=",: , [49440,49441]"/>
  <match src=".: . [105553,105554]" dest=".: . [44709,44710]"/>
  <match src="type_name [90785,90792]" dest="type_name [77095,77102]"/>
  <match src="{: { [97842,97843]" dest="{: { [36998,36999]"/>
  <match src="struct_member [89035,89050]" dest="struct_member [30535,30550]"/>
  <match src="type_name [96483,96490]" dest="type_name [35639,35646]"/>
  <match src="identifier: D256 [6843,6847]" dest="identifier: D256 [7407,7411]"/>
  <match src="identifier: payloadA [28329,28337]" dest="identifier: payloadA [46723,46731]"/>
  <match src="identifier: accounts [102541,102549]" dest="identifier: accounts [41697,41705]"/>
  <match src="call_expression [31783,31809]" dest="call_expression [50177,50203]"/>
  <match src="type_name [35742,35749]" dest="type_name [54136,54143]"/>
  <match src="identifier: balance [94173,94180]" dest="identifier: balance [33329,33336]"/>
  <match src="identifier: getAdvanceIncentive [46644,46663]" dest="identifier: getAdvanceIncentive [16777,16796]"/>
  <match src="expression_statement [82884,82899]" dest="expression_statement [57022,57037]"/>
  <match src="indexed: indexed [81399,81406]" dest="indexed: indexed [79193,79200]"/>
  <match src="member_expression [102741,102755]" dest="member_expression [41897,41911]"/>
  <match src="pure: pure [46114,46118]" dest="pure: pure [16247,16251]"/>
  <match src="identifier: that [30682,30686]" dest="identifier: that [49076,49080]"/>
  <match src="public: public [73996,74002]" dest="public: public [62795,62801]"/>
  <match src="return: return [47190,47196]" dest="return: return [17323,17329]"/>
  <match src="identifier: BASE [6368,6372]" dest="identifier: BASE [6932,6936]"/>
  <match src="parameter [94242,94249]" dest="parameter [33398,33405]"/>
  <match src=",: , [54194,54195]" dest=",: , [22043,22044]"/>
  <match src="primitive_type [99549,99556]" dest="primitive_type [38705,38712]"/>
  <match src="[: [ [100935,100936]" dest="[: [ [40091,40092]"/>
  <match src=",: , [91748,91749]" dest=",: , [78058,78059]"/>
  <match src="call_argument [81645,81655]" dest="call_argument [72168,72178]"/>
  <match src="call_expression [29042,29398]" dest="call_expression [47436,47792]"/>
  <match src="parameter [101756,101770]" dest="parameter [40912,40926]"/>
  <match src="): ) [35034,35035]" dest="): ) [53428,53429]"/>
  <match src="): ) [4737,4738]" dest="): ) [5301,5302]"/>
  <match src="visibility [48531,48539]" dest="visibility [18664,18672]"/>
  <match src="(: ( [93901,93902]" dest="(: ( [33057,33058]"/>
  <match src="return: return [94925,94931]" dest="return: return [34081,34087]"/>
  <match src="member_expression [102603,102631]" dest="member_expression [41759,41787]"/>
  <match src="event_paramater [81134,81147]" dest="event_paramater [71566,71579]"/>
  <match src="identifier: length [34015,34021]" dest="identifier: length [52409,52415]"/>
  <match src="call_expression [94268,94306]" dest="call_expression [33424,33462]"/>
  <match src="state_mutability [97553,97557]" dest="state_mutability [36709,36713]"/>
  <match src="type_name [97699,97706]" dest="type_name [36855,36862]"/>
  <match src="identifier: State [89427,89432]" dest="identifier: State [30927,30932]"/>
  <match src="parameter [105410,105427]" dest="parameter [44566,44583]"/>
  <match src="type_cast_expression [21988,21998]" dest="type_cast_expression [65094,65104]"/>
  <match src="call_expression [25923,26006]" dest="call_expression [80221,80289]"/>
  <match src="): ) [82897,82898]" dest="): ) [57035,57036]"/>
  <match src="identifier: sender [81528,81534]" dest="identifier: sender [79329,79335]"/>
  <match src="string_literal [106570,106582]" dest="string_literal [69912,69924]"/>
  <match src="return: return [93438,93444]" dest="return: return [32594,32600]"/>
  <match src="parameter [30813,30829]" dest="parameter [49207,49223]"/>
  <match src="identifier: totalStaged [93788,93799]" dest="identifier: totalStaged [32944,32955]"/>
  <match src="): ) [10109,10110]" dest="): ) [10673,10674]"/>
  <match src="assembly_statement [91714,91778]" dest="assembly_statement [78024,78088]"/>
  <match src="function_body [96971,97035]" dest="function_body [36127,36191]"/>
  <match src=".: . [83918,83919]" dest=".: . [81828,81829]"/>
  <match src="private: private [15934,15941]" dest="private: private [21321,21328]"/>
  <match src="(: ( [97190,97191]" dest="(: ( [36346,36347]"/>
  <match src="call_argument [6034,6049]" dest="call_argument [6598,6613]"/>
  <match src="identifier: Withdraw [81984,81992]" dest="identifier: Withdraw [72468,72476]"/>
  <match src="type_name [1981,1988]" dest="type_name [2545,2552]"/>
  <match src="): ) [82723,82724]" dest="): ) [73448,73449]"/>
  <match src="function_body [8295,8367]" dest="function_body [8859,8931]"/>
  <match src="function: function [93382,93390]" dest="function: function [32538,32546]"/>
  <match src="event_paramater [54196,54206]" dest="event_paramater [22045,22055]"/>
  <match src="identifier: Mint [55158,55162]" dest="identifier: Mint [23007,23011]"/>
  <match src="uint256: uint256 [3399,3406]" dest="uint256: uint256 [3963,3970]"/>
  <match src=",: , [87979,87980]" dest=",: , [29479,29480]"/>
  <match src="call_argument [47898,47926]" dest="call_argument [18031,18059]"/>
  <match src="array_access [101847,101871]" dest="array_access [41003,41027]"/>
  <match src="call_argument [102578,102584]" dest="call_argument [41734,41740]"/>
  <match src="address: address [12329,12336]" dest="address: address [25318,25325]"/>
  <match src=".: . [7002,7003]" dest=".: . [7566,7567]"/>
  <match src="uint8: uint8 [36857,36862]" dest="uint8: uint8 [55251,55256]"/>
  <match src="primitive_type [54154,54161]" dest="primitive_type [22003,22010]"/>
  <match src="member_expression [81888,81898]" dest="member_expression [72394,72404]"/>
  <match src="identifier: value [81724,81729]" dest="identifier: value [72222,72227]"/>
  <match src=",: , [31809,31810]" dest=",: , [50203,50204]"/>
  <match src="member_expression [103561,103590]" dest="member_expression [42717,42746]"/>
  <match src="call_expression [104083,104137]" dest="call_expression [43239,43293]"/>
  <match src="(: ( [82461,82462]" dest="(: ( [67851,67852]"/>
  <match src=",: , [83666,83667]" dest=",: , [80693,80694]"/>
  <match src="identifier: account [93104,93111]" dest="identifier: account [32260,32267]"/>
  <match src="identifier: to [56090,56092]" dest="identifier: to [23939,23941]"/>
  <match src="parameter [44998,45018]" dest="parameter [15131,15151]"/>
  <match src="identifier: Setters [106523,106530]" dest="identifier: Setters [69865,69872]"/>
  <match src="&quot;: &quot; [85691,85692]" dest="&quot;: &quot; [79952,79953]"/>
  <match src="primitive_type [9818,9825]" dest="primitive_type [10382,10389]"/>
  <match src="member_expression [66861,66872]" dest="member_expression [69028,69039]"/>
  <match src="internal: internal [44975,44983]" dest="internal: internal [15108,15116]"/>
  <match src="type_name [55163,55170]" dest="type_name [23012,23019]"/>
  <match src="{: { [89413,89414]" dest="{: { [30913,30914]"/>
  <match src="function_definition [99733,99859]" dest="function_definition [38889,39015]"/>
  <match src="]: ] [105333,105334]" dest="]: ] [44489,44490]"/>
  <match src="/=: /= [34084,34086]" dest="/=: /= [52478,52480]"/>
  <match src="event_paramater [53468,53490]" dest="event_paramater [61342,61360]"/>
  <match src="identifier: require [3361,3368]" dest="identifier: require [3925,3932]"/>
  <match src="internal: internal [86661,86669]" dest="internal: internal [75171,75179]"/>
  <match src="user_defined_type [7977,7981]" dest="user_defined_type [8541,8545]"/>
  <match src="type_cast_expression [35754,35768]" dest="type_cast_expression [54148,54162]"/>
  <match src="false: false [99606,99611]" dest="false: false [38762,38767]"/>
  <match src="external: external [54412,54420]" dest="external: external [22261,22269]"/>
  <match src="internal: internal [26487,26495]" dest="internal: internal [56389,56397]"/>
  <match src="(: ( [50036,50037]" dest="(: ( [56428,56429]"/>
  <match src="*: * [1995,1996]" dest="*: * [2559,2560]"/>
  <match src="primitive_type [54176,54183]" dest="primitive_type [22025,22032]"/>
  <match src="function: function [34676,34684]" dest="function: function [53070,53078]"/>
  <match src="assembly: assembly [87168,87176]" dest="assembly: assembly [75678,75686]"/>
  <match src="{: { [104866,104867]" dest="{: { [44022,44023]"/>
  <match src="): ) [94835,94836]" dest="): ) [33991,33992]"/>
  <match src=".: . [73257,73258]" dest=".: . [59273,59274]"/>
  <match src="identifier: Require [85050,85057]" dest="identifier: Require [59198,59205]"/>
  <match src="identifier: payloadC [31318,31326]" dest="identifier: payloadC [49712,49720]"/>
  <match src="return_type_definition [93814,93831]" dest="return_type_definition [32970,32987]"/>
  <match src="(: ( [82101,82102]" dest="(: ( [72329,72330]"/>
  <match src="uint256: uint256 [7657,7664]" dest="uint256: uint256 [8221,8228]"/>
  <match src="(: ( [46266,46267]" dest="(: ( [16399,16400]"/>
  <match src="identifier: Pool [80716,80720]" dest="identifier: Bonding [71349,71356]"/>
  <match src="event_paramater [99451,99464]" dest="event_paramater [38607,38620]"/>
  <match src="visibility [41940,41947]" dest="visibility [12073,12080]"/>
  <match src="identifier: supply [88995,89001]" dest="identifier: supply [30495,30501]"/>
  <match src="uint256: uint256 [95794,95801]" dest="uint256: uint256 [34950,34957]"/>
  <match src="function_definition [95853,96065]" dest="function_definition [35009,35221]"/>
  <match src="return: return [96819,96825]" dest="return: return [35975,35981]"/>
  <match src="identifier: abi [31660,31663]" dest="identifier: abi [50054,50057]"/>
  <match src="identifier: value [46344,46349]" dest="identifier: value [16477,16482]"/>
  <match src="uint256: uint256 [82474,82481]" dest="uint256: uint256 [67604,67611]"/>
  <match src="uint256: uint256 [41351,41358]" dest="uint256: uint256 [11484,11491]"/>
  <match src="{: { [33415,33416]" dest="{: { [51809,51810]"/>
  <match src="(: ( [6729,6730]" dest="(: ( [7293,7294]"/>
  <match src=".: . [82763,82764]" dest=".: . [74108,74109]"/>
  <match src="identifier: require [25215,25222]" dest="identifier: decrementApproveFor [80367,80386]"/>
  <match src="view: view [93163,93167]" dest="view: view [32319,32323]"/>
  <match src="return_type_definition [46283,46312]" dest="return_type_definition [16416,16445]"/>
  <match src="primitive_type [96661,96668]" dest="primitive_type [35817,35824]"/>
  <match src="view: view [97086,97090]" dest="view: view [36242,36246]"/>
  <match src="call_argument [79465,79475]" dest="call_argument [83885,83895]"/>
  <match src="primitive_type [65863,65870]" dest="primitive_type [79023,79030]"/>
  <match src="type_name [30715,30722]" dest="type_name [49109,49116]"/>
  <match src="): ) [29397,29398]" dest="): ) [47791,47792]"/>
  <match src="identifier: D256 [6653,6657]" dest="identifier: D256 [7217,7221]"/>
  <match src="call_argument [36023,36037]" dest="call_argument [54417,54431]"/>
  <match src="identifier: self [8611,8615]" dest="identifier: self [9175,9179]"/>
  <match src="identifier: spender [95705,95712]" dest="identifier: spender [34861,34868]"/>
  <match src="parameter [8625,8638]" dest="parameter [9189,9202]"/>
  <match src="function_body [7525,7759]" dest="function_body [8089,8323]"/>
  <match src="memory: memory [9373,9379]" dest="memory: memory [9937,9943]"/>
  <match src="]: ] [96706,96707]" dest="]: ] [35862,35863]"/>
  <match src="parameter [104636,104650]" dest="parameter [43792,43806]"/>
  <match src="bool: bool [98246,98250]" dest="bool: bool [37402,37406]"/>
  <match src="call_expression [96191,96207]" dest="call_expression [35347,35363]"/>
  <match src="function: function [48314,48322]" dest="function: function [18447,18455]"/>
  <match src="primitive_type [88783,88790]" dest="primitive_type [30283,30290]"/>
  <match src="call_expression [19773,19843]" dest="call_expression [65395,65473]"/>
  <match src="[: [ [102659,102660]" dest="[: [ [41815,41816]"/>
  <match src="type_name [71296,71303]" dest="type_name [66981,66988]"/>
  <match src="{: { [47898,47899]" dest="{: { [18031,18032]"/>
  <match src="number_literal: 0x2c20 [27609,27615]" dest="number_literal: 0x2c20 [46003,46009]"/>
  <match src="number_literal: 4 [35584,35585]" dest="number_literal: 4 [53978,53979]"/>
  <match src="identifier: stringify [29249,29258]" dest="identifier: stringify [47643,47652]"/>
  <match src="number_literal: 42 [43459,43461]" dest="number_literal: 42 [13592,13594]"/>
  <match src=".: . [82103,82104]" dest=".: . [72331,72332]"/>
  <match src="}: } [9565,9566]" dest="}: } [10129,10130]"/>
  <match src="expression_statement [82793,82874]" dest="expression_statement [72959,73043]"/>
  <match src="&quot;: &quot; [4066,4067]" dest="&quot;: &quot; [4630,4631]"/>
  <match src=",: , [31251,31252]" dest=",: , [49645,49646]"/>
  <match src="call_argument [17783,17789]" dest="call_argument [19939,19945]"/>
  <match src="identifier: msg [81712,81715]" dest="identifier: msg [72210,72213]"/>
  <match src="member_expression [83449,83459]" dest="member_expression [73983,73993]"/>
  <match src="identifier: Status [106996,107002]" dest="identifier: Status [70338,70344]"/>
  <match src="call_expression [84187,84216]" dest="call_expression [79373,79394]"/>
  <match src="parameter [66700,66719]" dest="parameter [21290,21319]"/>
  <match src=",: , [85348,85349]" dest=",: , [81279,81280]"/>
  <match src="function_body [28955,29447]" dest="function_body [47349,47841]"/>
  <match src="{: { [48664,48665]" dest="{: { [18797,18798]"/>
  <match src="(: ( [95484,95485]" dest="(: ( [34640,34641]"/>
  <match src="call_expression [30469,30488]" dest="call_expression [48863,48882]"/>
  <match src="identifier: staged [94465,94471]" dest="identifier: staged [33621,33627]"/>
  <match src="%: % [4757,4758]" dest="%: % [5321,5322]"/>
  <match src="private: private [43073,43080]" dest="private: private [13206,13213]"/>
  <match src="identifier: Provider [88872,88880]" dest="identifier: Provider [30372,30380]"/>
  <match src="return_statement [46472,46506]" dest="return_statement [16605,16639]"/>
  <match src="identifier: add [100988,100991]" dest="identifier: add [40144,40147]"/>
  <match src="primitive_type [49931,49938]" dest="primitive_type [60878,60885]"/>
  <match src="(: ( [105011,105012]" dest="(: ( [44167,44168]"/>
  <match src="]: ] [102515,102516]" dest="]: ] [41671,41672]"/>
  <match src="{: { [98252,98253]" dest="{: { [37408,37409]"/>
  <match src="parameter [106914,106929]" dest="parameter [70256,70271]"/>
  <match src="identifier: _state [101582,101588]" dest="identifier: _state [40738,40744]"/>
  <match src="): ) [103497,103498]" dest="): ) [42653,42654]"/>
  <match src="struct_member [88775,88806]" dest="struct_member [30275,30306]"/>
  <match src="state_mutability [45730,45734]" dest="state_mutability [15863,15867]"/>
  <match src="identifier: accounts [100962,100970]" dest="identifier: accounts [40118,40126]"/>
  <match src="(: ( [19976,19977]" dest="(: ( [57392,57393]"/>
  <match src="returns: returns [5871,5878]" dest="returns: returns [6435,6442]"/>
  <match src="private: private [35684,35691]" dest="private: private [54078,54085]"/>
  <match src="function_definition [100196,100319]" dest="function_definition [39352,39475]"/>
  <match src="identifier: value [81424,81429]" dest="identifier: value [61482,61487]"/>
  <match src="&quot;: &quot; [92802,92803]" dest="&quot;: &quot; [31958,31959]"/>
  <match src="primitive_type [9521,9525]" dest="primitive_type [10085,10089]"/>
  <match src="type_name [84468,84475]" dest="type_name [62141,62148]"/>
  <match src="(: ( [99823,99824]" dest="(: ( [38979,38980]"/>
  <match src="identifier: that [50690,50694]" dest="identifier: that [63940,63944]"/>
  <match src="call_expression [29719,29743]" dest="call_expression [48113,48137]"/>
  <match src="}: } [95846,95847]" dest="}: } [35002,35003]"/>
  <match src="[: [ [104727,104728]" dest="[: [ [43883,43884]"/>
  <match src="(: ( [13938,13939]" dest="(: ( [26927,26928]"/>
  <match src="identifier: balance [104090,104097]" dest="identifier: balance [43246,43253]"/>
  <match src="returns: returns [97824,97831]" dest="returns: returns [36980,36987]"/>
  <match src="function_definition [94749,94978]" dest="function_definition [33905,34134]"/>
  <match src="{: { [54053,54054]" dest="{: { [21902,21903]"/>
  <match src="}: } [88552,88553]" dest="}: } [30052,30053]"/>
  <match src="function: function [45559,45567]" dest="function: function [15692,15700]"/>
  <match src="uint256: uint256 [71024,71031]" dest="uint256: uint256 [66842,66849]"/>
  <match src=",: , [29139,29140]" dest=",: , [47533,47534]"/>
  <match src="(: ( [47018,47019]" dest="(: ( [17151,17152]"/>
  <match src=".: . [104677,104678]" dest=".: . [43833,43834]"/>
  <match src="primitive_type [100681,100687]" dest="primitive_type [39837,39843]"/>
  <match src="number_literal: 270 [43669,43672]" dest="number_literal: 270 [13802,13805]"/>
  <match src=".: . [105139,105140]" dest=".: . [44295,44296]"/>
  <match src="function_body [93186,93231]" dest="function_body [32342,32387]"/>
  <match src="primitive_type [27541,27547]" dest="primitive_type [45935,45941]"/>
  <match src="revert: revert [27955,27961]" dest="revert: revert [46349,46355]"/>
  <match src="identifier: epoch [102428,102433]" dest="identifier: epoch [41584,41589]"/>
  <match src="string_literal [58642,58667]" dest="string_literal [74126,74157]"/>
  <match src="constant: constant [42786,42794]" dest="constant: constant [12919,12927]"/>
  <match src="&gt;: &gt; [87230,87231]" dest="&gt;: &gt; [75740,75741]"/>
  <match src="call_expression [85112,85125]" dest="call_expression [59278,59291]"/>
  <match src="call_argument [85380,85392]" dest="call_argument [81311,81320]"/>
  <match src="visibility [47978,47986]" dest="visibility [18111,18119]"/>
  <match src="return: return [97119,97125]" dest="return: return [36275,36281]"/>
  <match src="): ) [107118,107119]" dest="): ) [70460,70461]"/>
  <match src="parameter [101513,101527]" dest="parameter [40669,40683]"/>
  <match src="pure: pure [56621,56625]" dest="pure: pure [19846,19850]"/>
  <match src="call_expression [21969,22037]" dest="call_expression [65075,65151]"/>
  <match src="array_access [33399,33408]" dest="array_access [51793,51802]"/>
  <match src="user_defined_type [6950,6954]" dest="user_defined_type [7514,7518]"/>
  <match src="call_argument [3376,3388]" dest="call_argument [3940,3952]"/>
  <match src="identifier: Constants [41319,41328]" dest="identifier: Constants [11452,11461]"/>
  <match src="call_expression [98125,98172]" dest="call_expression [37281,37328]"/>
  <match src="internal: internal [46899,46907]" dest="internal: internal [17032,17040]"/>
  <match src="call_argument [91178,91217]" dest="call_argument [77488,77527]"/>
  <match src="=: = [104569,104570]" dest="=: = [43725,43726]"/>
  <match src="function_definition [96598,96733]" dest="function_definition [35754,35889]"/>
  <match src="): ) [84426,84427]" dest="): ) [81031,81032]"/>
  <match src="uint256: uint256 [42210,42217]" dest="uint256: uint256 [12343,12350]"/>
  <match src="}: } [29446,29447]" dest="}: } [47840,47841]"/>
  <match src="): ) [47412,47413]" dest="): ) [17545,17546]"/>
  <match src=".: . [95517,95518]" dest=".: . [34673,34674]"/>
  <match src="identifier: Bond [81217,81221]" dest="identifier: Unbond [71688,71694]"/>
  <match src="revert_statement [31608,31973]" dest="revert_statement [50002,50367]"/>
  <match src="call_argument [8097,8131]" dest="call_argument [8661,8695]"/>
  <match src="member_expression [93642,93657]" dest="member_expression [32798,32813]"/>
  <match src="identifier: State [99340,99345]" dest="identifier: State [38496,38501]"/>
  <match src="struct_member [88507,88522]" dest="struct_member [30007,30022]"/>
  <match src="uint256: uint256 [44100,44107]" dest="uint256: uint256 [14233,14240]"/>
  <match src="): ) [82130,82131]" dest="): ) [72358,72359]"/>
  <match src="returns: returns [7859,7866]" dest="returns: returns [8423,8430]"/>
  <match src="parameter [54588,54592]" dest="parameter [22437,22441]"/>
  <match src="member_expression [85617,85629]" dest="member_expression [79833,79845]"/>
  <match src="if_statement [105589,105687]" dest="if_statement [44745,44843]"/>
  <match src="parameter [9350,9366]" dest="parameter [9914,9930]"/>
  <match src="): ) [98223,98224]" dest="): ) [37379,37380]"/>
  <match src="type_name [88507,88514]" dest="type_name [30007,30014]"/>
  <match src="comment: // ============ Library Functions ============ [27757,27803]" dest="comment: // ============ Library Functions ============ [46151,46197]"/>
  <match src="public: public [93595,93601]" dest="public: public [32751,32757]"/>
  <match src="state_variable_declaration [42321,42367]" dest="state_variable_declaration [12454,12500]"/>
  <match src="): ) [46147,46148]" dest="): ) [16280,16281]"/>
  <match src="primitive_type [19791,19798]" dest="primitive_type [65413,65420]"/>
  <match src="{: { [33896,33897]" dest="{: { [52290,52291]"/>
  <match src="identifier: getReserves [55779,55790]" dest="identifier: getReserves [23628,23639]"/>
  <match src="=: = [27745,27746]" dest="=: = [46139,46140]"/>
  <match src="[: [ [103785,103786]" dest="[: [ [42941,42942]"/>
  <match src="variable_declaration [68392,68415]" dest="variable_declaration [73313,73327]"/>
  <match src="comment: // remove the last decimal digit [34579,34611]" dest="comment: // remove the last decimal digit [52973,53005]"/>
  <match src="user_defined_type [9480,9484]" dest="user_defined_type [10044,10048]"/>
  <match src="type_name [98343,98350]" dest="type_name [37499,37506]"/>
  <match src="uint256: uint256 [41523,41530]" dest="uint256: uint256 [11656,11663]"/>
  <match src="parameter [92966,92971]" dest="parameter [32122,32127]"/>
  <match src="identifier: IUniswapV2Pair [54038,54052]" dest="identifier: IUniswapV2Pair [21887,21901]"/>
  <match src="visibility [55733,55741]" dest="visibility [23582,23590]"/>
  <match src="{: { [47053,47054]" dest="{: { [17186,17187]"/>
  <match src="identifier: amount [76436,76442]" dest="identifier: amount [57079,57085]"/>
  <match src="event_paramater [81320,81333]" dest="event_paramater [71622,71635]"/>
  <match src="&quot;: &quot; [106581,106582]" dest="&quot;: &quot; [69923,69924]"/>
  <match src="return_type_definition [96156,96173]" dest="return_type_definition [35312,35329]"/>
  <match src="returns: returns [97218,97225]" dest="returns: returns [36374,36381]"/>
  <match src="type_name [51894,51901]" dest="type_name [27830,27837]"/>
  <match src=".: . [93559,93560]" dest=".: . [32715,32716]"/>
  <match src="(: ( [45516,45517]" dest="(: ( [15649,15650]"/>
  <match src="type_name [89087,89094]" dest="type_name [30587,30594]"/>
  <match src="identifier: IMPLEMENTATION_SLOT [91684,91703]" dest="identifier: IMPLEMENTATION_SLOT [77994,78013]"/>
  <match src="state_variable_declaration [43762,43828]" dest="state_variable_declaration [13895,13961]"/>
  <match src="]: ] [98433,98434]" dest="]: ] [37589,37590]"/>
  <match src="view: view [11715,11719]" dest="view: view [24704,24708]"/>
  <match src="type_name [43065,43072]" dest="type_name [13198,13205]"/>
  <match src="call_argument [101438,101439]" dest="call_argument [40594,40595]"/>
  <match src="expression_statement [82363,82384]" dest="expression_statement [73199,73256]"/>
  <match src="visibility [96378,96386]" dest="visibility [35534,35542]"/>
  <match src="number_literal: 0 [33893,33894]" dest="number_literal: 0 [52287,52288]"/>
  <match src="identifier: approve [104944,104951]" dest="identifier: approve [44100,44107]"/>
  <match src="call_argument [83790,83791]" dest="call_argument [73652,73653]"/>
  <match src="emit: emit [81699,81703]" dest="emit: emit [72197,72201]"/>
  <match src="visibility [83859,83867]" dest="visibility [80858,80866]"/>
  <match src="parameter [101193,101213]" dest="parameter [40349,40369]"/>
  <match src="call_struct_argument [7189,7213]" dest="call_struct_argument [7753,7777]"/>
  <match src="call_expression [34936,34949]" dest="call_expression [53330,53343]"/>
  <match src="identifier: value [6178,6183]" dest="identifier: value [6742,6747]"/>
  <match src="identifier: accounts [102137,102145]" dest="identifier: accounts [41293,41301]"/>
  <match src="bytes32: bytes32 [80990,80997]" dest="bytes32: bytes32 [71419,71426]"/>
  <match src="}: } [96064,96065]" dest="}: } [35220,35221]"/>
  <match src="state_mutability [46786,46790]" dest="state_mutability [16919,16923]"/>
  <match src="member_expression [104058,104080]" dest="member_expression [43214,43236]"/>
  <match src=".: . [83785,83786]" dest=".: . [73647,73648]"/>
  <match src="visibility [93497,93503]" dest="visibility [32653,32659]"/>
  <match src="address: address [56258,56265]" dest="address: address [24107,24114]"/>
  <match src="primitive_type [68180,68187]" dest="primitive_type [68028,68035]"/>
  <match src="member_expression [85456,85468]" dest="member_expression [79347,79359]"/>
  <match src="memory: memory [45012,45018]" dest="memory: memory [15145,15151]"/>
  <match src=".: . [48008,48009]" dest=".: . [18141,18142]"/>
  <match src="string_literal [85542,85551]" dest="string_literal [79430,79447]"/>
  <match src="returns: returns [96156,96163]" dest="returns: returns [35312,35319]"/>
  <match src="pure: pure [47379,47383]" dest="pure: pure [17512,17516]"/>
  <match src=",: , [53490,53491]" dest=",: , [61360,61361]"/>
  <match src=",: , [103351,103352]" dest=",: , [42507,42508]"/>
  <match src="(: ( [101495,101496]" dest="(: ( [40651,40652]"/>
  <match src="identifier: FILE [107202,107206]" dest="identifier: FILE [70544,70548]"/>
  <match src="member_expression [101932,101953]" dest="member_expression [41088,41109]"/>
  <match src="): ) [32648,32649]" dest="): ) [51042,51043]"/>
  <match src="string_literal [92905,92912]" dest="string_literal [32061,32068]"/>
  <match src="primitive_type [770,777]" dest="primitive_type [1334,1341]"/>
  <match src="function_definition [1204,1391]" dest="function_definition [1768,1955]"/>
  <match src="identifier: fluidUntil [88201,88211]" dest="identifier: fluidUntil [29701,29711]"/>
  <match src="identifier: Deposit [81041,81048]" dest="identifier: Deposit [71473,71480]"/>
  <match src="expression_statement [103710,103763]" dest="expression_statement [42866,42919]"/>
  <match src="): ) [1337,1338]" dest="): ) [1901,1902]"/>
  <match src="): ) [82872,82873]" dest="): ) [73041,73042]"/>
  <match src="function_body [99698,99727]" dest="function_body [38854,38883]"/>
  <match src="identifier: stringifyTruncated [31072,31090]" dest="identifier: stringifyTruncated [49466,49484]"/>
  <match src="parameter [9591,9607]" dest="parameter [10155,10171]"/>
  <match src=".: . [96300,96301]" dest=".: . [35456,35457]"/>
  <match src="visibility [92945,92951]" dest="visibility [32101,32107]"/>
  <match src="user_defined_type [97420,97434]" dest="user_defined_type [36576,36590]"/>
  <match src="&quot;: &quot; [82871,82872]" dest="&quot;: &quot; [73040,73041]"/>
  <match src="}: } [23146,23147]" dest="}: } [56837,56838]"/>
  <match src="identifier: COLON [28549,28554]" dest="identifier: COLON [46943,46948]"/>
  <match src="user_defined_type [89260,89273]" dest="user_defined_type [30760,30773]"/>
  <match src="state_variable_declaration [41351,41389]" dest="state_variable_declaration [11484,11522]"/>
  <match src="expression_statement [83016,83037]" dest="expression_statement [72586,72647]"/>
  <match src="identifier: State [88491,88496]" dest="identifier: State [29991,29996]"/>
  <match src="call_expression [82551,82586]" dest="call_expression [72769,72804]"/>
  <match src="identifier: sub [101377,101380]" dest="identifier: sub [40533,40536]"/>
  <match src="pure: pure [54239,54243]" dest="pure: pure [22088,22092]"/>
  <match src="(: ( [46896,46897]" dest="(: ( [17029,17030]"/>
  <match src="string [82188,82226]" dest="string [82061,82075]"/>
  <match src="return_statement [823,874]" dest="return_statement [1387,1438]"/>
  <match src="(: ( [96961,96962]" dest="(: ( [36117,36118]"/>
  <match src="call_argument [102776,102782]" dest="call_argument [41932,41938]"/>
  <match src="identifier: FILE [85524,85528]" dest="identifier: FILE [79412,79416]"/>
  <match src="identifier: amount [19977,19983]" dest="identifier: amount [57393,57399]"/>
  <match src="identifier: candidates [105111,105121]" dest="identifier: candidates [44267,44277]"/>
  <match src="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts with custom message when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      *      * _Available since v2.4.0._      */ [4106,4599]" dest="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts with custom message when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      *      * _Available since v2.4.0._      */ [4670,5163]"/>
  <match src="}: } [99617,99618]" dest="}: } [38773,38774]"/>
  <match src="}: } [22137,22138]" dest="}: } [65278,65279]"/>
  <match src="internal: internal [10981,10989]" dest="internal: internal [19837,19845]"/>
  <match src=".: . [101337,101338]" dest=".: . [40493,40494]"/>
  <match src="identifier: FILE [66323,66327]" dest="identifier: FILE [82388,82392]"/>
  <match src="(: ( [106975,106976]" dest="(: ( [70317,70318]"/>
  <match src="primitive_type [7457,7464]" dest="primitive_type [8021,8028]"/>
  <match src="parameter [4639,4665]" dest="parameter [5203,5229]"/>
  <match src=",: , [9781,9782]" dest=",: , [10345,10346]"/>
  <match src="return_statement [48280,48302]" dest="return_statement [18413,18435]"/>
  <match src="return_statement [6757,6809]" dest="return_statement [7321,7373]"/>
  <match src="member_expression [84499,84527]" dest="member_expression [73905,73914]"/>
  <match src="member_expression [96427,96442]" dest="member_expression [35583,35598]"/>
  <match src="identifier: ratio [6221,6226]" dest="identifier: ratio [6785,6790]"/>
  <match src="array_access [103561,103583]" dest="array_access [42717,42739]"/>
  <match src="identifier: epoch [97002,97007]" dest="identifier: epoch [36158,36163]"/>
  <match src="array_access [97993,98021]" dest="array_access [37149,37177]"/>
  <match src="number_literal: 10 [34559,34561]" dest="number_literal: 10 [52953,52955]"/>
  <match src="expression_statement [105630,105677]" dest="expression_statement [44786,44833]"/>
  <match src="call_argument [94870,94875]" dest="call_argument [34026,34031]"/>
  <match src="uint256: uint256 [96401,96408]" dest="uint256: uint256 [35557,35564]"/>
  <match src="uint256: uint256 [96915,96922]" dest="uint256: uint256 [36071,36078]"/>
  <match src="type_name [42862,42869]" dest="type_name [12995,13002]"/>
  <match src="call_argument [50861,50865]" dest="call_argument [63862,63866]"/>
  <match src="uint256: uint256 [77507,77514]" dest="uint256: uint256 [62577,62584]"/>
  <match src="identifier: mint [52828,52832]" dest="identifier: mintToAccount [56113,56126]"/>
  <match src="pure: pure [44872,44876]" dest="pure: pure [15005,15009]"/>
  <match src="primitive_type [97064,97071]" dest="primitive_type [36220,36227]"/>
  <match src="pure: pure [3262,3266]" dest="pure: pure [3826,3830]"/>
  <match src="returns: returns [48646,48653]" dest="returns: returns [18779,18786]"/>
  <match src="return_type_definition [6531,6552]" dest="return_type_definition [7095,7116]"/>
  <match src="function_body [74026,74594]" dest="function_body [68286,68734]"/>
  <match src="type_name [42970,42977]" dest="type_name [13103,13110]"/>
  <match src="(: ( [47443,47444]" dest="(: ( [17576,17577]"/>
  <match src="number_literal: 20 [44145,44147]" dest="number_literal: 20 [14278,14280]"/>
  <match src="type_name [30761,30768]" dest="type_name [49155,49162]"/>
  <match src="identifier: getPartial [8728,8738]" dest="identifier: getPartial [9292,9302]"/>
  <match src="binary_expression [9010,9033]" dest="binary_expression [9574,9597]"/>
  <match src="comment: // 2.25% [44207,44215]" dest="comment: // 2.25% [14340,14348]"/>
  <match src="primitive_type [11689,11696]" dest="primitive_type [24678,24685]"/>
  <match src="): ) [95982,95983]" dest="): ) [35138,35139]"/>
  <match src="(: ( [30903,30904]" dest="(: ( [49297,49298]"/>
  <match src="!: ! [28384,28385]" dest="!: ! [46778,46779]"/>
  <match src="identifier: _state [97725,97731]" dest="identifier: _state [36881,36887]"/>
  <match src="(: ( [8514,8515]" dest="(: ( [9078,9079]"/>
  <match src=".: . [95535,95536]" dest=".: . [34691,34692]"/>
  <match src="function_definition [69171,69254]" dest="function_definition [62554,62713]"/>
  <match src="identifier: i [34310,34311]" dest="identifier: i [52704,52705]"/>
  <match src="}: } [97901,97902]" dest="}: } [37057,37058]"/>
  <match src="public: public [63856,63862]" dest="public: public [28644,28650]"/>
  <match src="state_variable_declaration [42770,42828]" dest="state_variable_declaration [12903,12961]"/>
  <match src="for_statement [34285,34642]" dest="for_statement [52679,53036]"/>
  <match src="): ) [82937,82938]" dest="): ) [74199,74200]"/>
  <match src="): ) [29107,29108]" dest="): ) [47501,47502]"/>
  <match src="identifier: amount [104956,104962]" dest="identifier: amount [44112,44118]"/>
  <match src="identifier: COMMA [30514,30519]" dest="identifier: COMMA [48908,48913]"/>
  <match src="identifier: _state [102603,102609]" dest="identifier: _state [41759,41765]"/>
  <match src="parameter [29541,29557]" dest="parameter [47935,47951]"/>
  <match src="member_expression [100281,100295]" dest="member_expression [39437,39451]"/>
  <match src="identifier: stringifyTruncated [30991,31009]" dest="identifier: stringifyTruncated [49385,49403]"/>
  <match src="function_definition [101132,101456]" dest="function_definition [40288,40612]"/>
  <match src="function_definition [103105,103367]" dest="function_definition [42261,42523]"/>
  <match src="primitive_type [88937,88944]" dest="primitive_type [30437,30444]"/>
  <match src="function_body [97976,98035]" dest="function_body [37132,37191]"/>
  <match src="identifier: accounts [94447,94455]" dest="identifier: accounts [33603,33611]"/>
  <match src="primitive_type [10064,10071]" dest="primitive_type [10628,10635]"/>
  <match src="identifier: amount [104751,104757]" dest="identifier: amount [43907,43913]"/>
  <match src="comment: // 400 ETHC total incentive [43108,43135]" dest="comment: // 400 ETHC total incentive [13241,13268]"/>
  <match src=".: . [102652,102653]" dest=".: . [41808,41809]"/>
  <match src="constant: constant [43335,43343]" dest="constant: constant [13468,13476]"/>
  <match src="string: string [104835,104841]" dest="string: string [43991,43997]"/>
  <match src="(: ( [34534,34535]" dest="(: ( [52928,52929]"/>
  <match src="): ) [91216,91217]" dest="): ) [77526,77527]"/>
  <match src="identifier: input [33015,33020]" dest="identifier: input [51409,51414]"/>
  <match src="primitive_type [53155,53162]" dest="primitive_type [65800,65807]"/>
  <match src="(: ( [101617,101618]" dest="(: ( [40773,40774]"/>
  <match src="(: ( [55046,55047]" dest="(: ( [22895,22896]"/>
  <match src="identifier: balanceCheck [82238,82250]" dest="identifier: balanceCheck [60022,60034]"/>
  <match src="(: ( [29102,29103]" dest="(: ( [47496,47497]"/>
  <match src="{: { [88286,88287]" dest="{: { [29786,29787]"/>
  <match src="parameter [94140,94147]" dest="parameter [33296,33303]"/>
  <match src="state_variable_declaration [41717,41808]" dest="state_variable_declaration [11850,11941]"/>
  <match src="identifier: account [74323,74330]" dest="identifier: account [82717,82724]"/>
  <match src="identifier: account [101598,101605]" dest="identifier: account [40754,40761]"/>
  <match src="uint112: uint112 [55499,55506]" dest="uint112: uint112 [23348,23355]"/>
  <match src="identifier: factory [55613,55620]" dest="identifier: factory [23462,23469]"/>
  <match src="contract_body [80747,85723]" dest="contract_body [71380,74233]"/>
  <match src="): ) [33864,33865]" dest="): ) [52258,52259]"/>
  <match src="call_argument [28099,28104]" dest="call_argument [46493,46498]"/>
  <match src=".: . [102197,102198]" dest=".: . [41353,41354]"/>
  <match src="function_body [4699,4767]" dest="function_body [5263,5331]"/>
  <match src="identifier: getTreasuryRatio [48219,48235]" dest="identifier: getTreasuryRatio [18352,18368]"/>
  <match src="identifier: State [88663,88668]" dest="identifier: State [30163,30168]"/>
  <match src="return_type_definition [45224,45241]" dest="return_type_definition [15357,15374]"/>
  <match src="primitive_type [53506,53510]" dest="primitive_type [61362,61369]"/>
  <match src="primitive_type [89109,89116]" dest="primitive_type [30609,30616]"/>
  <match src="call_expression [8728,8765]" dest="call_expression [9292,9329]"/>
  <match src="identifier: getPartial [9747,9757]" dest="identifier: getPartial [10311,10321]"/>
  <match src="{: { [47414,47415]" dest="{: { [17547,17548]"/>
  <match src="}: } [98625,98626]" dest="}: } [37781,37782]"/>
  <match src="): ) [106805,106806]" dest="): ) [70147,70148]"/>
  <match src="parameter [6843,6859]" dest="parameter [7407,7423]"/>
  <match src="modifier_definition [106886,107091]" dest="modifier_definition [70228,70433]"/>
  <match src="primitive_type [11578,11585]" dest="primitive_type [24567,24574]"/>
  <match src="): ) [44536,44537]" dest="): ) [14669,14670]"/>
  <match src="primitive_type [6255,6262]" dest="primitive_type [6819,6826]"/>
  <match src="(: ( [101058,101059]" dest="(: ( [40214,40215]"/>
  <match src=",: , [84079,84080]" dest=",: , [80925,80926]"/>
  <match src="uint256: uint256 [35287,35294]" dest="uint256: uint256 [53681,53688]"/>
  <match src="identifier: FOUR_BIT_MASK [35547,35560]" dest="identifier: FOUR_BIT_MASK [53941,53954]"/>
  <match src="identifier: balance [100757,100764]" dest="identifier: balance [39913,39920]"/>
  <match src="parameter [93719,93726]" dest="parameter [32875,32882]"/>
  <match src="call_argument [50879,50893]" dest="call_argument [56527,56569]"/>
  <match src="primitive_type [42321,42328]" dest="primitive_type [12454,12461]"/>
  <match src="user_defined_type [7251,7255]" dest="user_defined_type [7815,7819]"/>
  <match src="identifier: epoch [102205,102210]" dest="identifier: epoch [41361,41366]"/>
  <match src="return_type_definition [11569,11586]" dest="return_type_definition [24558,24575]"/>
  <match src="}: } [6197,6198]" dest="}: } [6761,6762]"/>
  <match src="(: ( [28598,28599]" dest="(: ( [46992,46993]"/>
  <match src="[: [ [95704,95705]" dest="[: [ [34860,34861]"/>
  <match src="user_defined_type [89188,89195]" dest="user_defined_type [30688,30695]"/>
  <match src="function_body [36673,36899]" dest="function_body [55067,55293]"/>
  <match src="pragma_value:  ABIEncoderV2 [44,57]" dest="pragma_value:  ABIEncoderV2 [44,57]"/>
  <match src="return_type_definition [98374,98388]" dest="return_type_definition [37530,37544]"/>
  <match src="function_definition [63837,63899]" dest="function_definition [28625,28687]"/>
  <match src="event_paramater [53506,53510]" dest="event_paramater [61362,61383]"/>
  <match src="(: ( [83277,83278]" dest="(: ( [80000,80001]"/>
  <match src="function: function [93479,93487]" dest="function: function [32635,32643]"/>
  <match src="indexed: indexed [13947,13954]" dest="indexed: indexed [26936,26943]"/>
  <match src="memory: memory [9485,9491]" dest="memory: memory [10049,10055]"/>
  <match src="string [20516,20549]" dest="string [64514,64543]"/>
  <match src="uint256: uint256 [13750,13757]" dest="uint256: uint256 [26739,26746]"/>
  <match src="function: function [46063,46071]" dest="function: function [16196,16204]"/>
  <match src="}: } [6806,6807]" dest="}: } [7370,7371]"/>
  <match src="(: ( [54587,54588]" dest="(: ( [22436,22437]"/>
  <match src="&quot;: &quot; [50987,50988]" dest="&quot;: &quot; [65622,65623]"/>
  <match src="array_access [102088,102127]" dest="array_access [41244,41283]"/>
  <match src="}: } [97502,97503]" dest="}: } [36658,36659]"/>
  <match src="state_mutability [98492,98496]" dest="state_mutability [37648,37652]"/>
  <match src="identifier: reserve1 [79817,79825]" dest="identifier: timeIntoEpoch [62840,62853]"/>
  <match src=".: . [8336,8337]" dest=".: . [8900,8901]"/>
  <match src="private: private [44252,44259]" dest="private: private [14385,14392]"/>
  <match src="call_argument [31721,31725]" dest="call_argument [50115,50119]"/>
  <match src="primitive_type [103910,103917]" dest="primitive_type [43066,43073]"/>
  <match src="primitive_type [88396,88403]" dest="primitive_type [29896,29903]"/>
  <match src="): ) [20025,20026]" dest="): ) [57431,57432]"/>
  <match src="identifier: i [35222,35223]" dest="identifier: i [53616,53617]"/>
  <match src="number_literal: 2 [35307,35308]" dest="number_literal: 2 [53701,53702]"/>
  <match src="identifier: D256 [8278,8282]" dest="identifier: D256 [8842,8846]"/>
  <match src="]: ] [33407,33408]" dest="]: ] [51801,51802]"/>
  <match src="address: address [97380,97387]" dest="address: address [36536,36543]"/>
  <match src="function_definition [105374,105693]" dest="function_definition [44530,44849]"/>
  <match src=".: . [105334,105335]" dest=".: . [44490,44491]"/>
  <match src=".: . [80875,80876]" dest=".: . [64182,64183]"/>
  <match src="primitive_type [16219,16226]" dest="primitive_type [58810,58817]"/>
  <match src="type_name [7868,7872]" dest="type_name [8432,8436]"/>
  <match src=":: : [46185,46186]" dest=":: : [16318,16319]"/>
  <match src="identifier: account [104457,104464]" dest="identifier: account [43613,43620]"/>
  <match src="identifier: account [52841,52848]" dest="identifier: account [56135,56142]"/>
  <match src="enum_value: Frozen [87973,87979]" dest="enum_value: Frozen [29473,29479]"/>
  <match src="visibility [73996,74002]" dest="visibility [62795,62801]"/>
  <match src="uint256: uint256 [45233,45240]" dest="uint256: uint256 [15366,15373]"/>
  <match src="parameter [99755,99769]" dest="parameter [38911,38925]"/>
  <match src="=: = [102319,102320]" dest="=: = [41475,41476]"/>
  <match src="identifier: reason [91137,91143]" dest="identifier: reason [77447,77453]"/>
  <match src="member_expression [101269,101305]" dest="member_expression [40425,40461]"/>
  <match src="parameter [99926,99940]" dest="parameter [39082,39096]"/>
  <match src="event_definition [81035,81089]" dest="event_definition [71467,71521]"/>
  <match src="identifier: LPAREN [27645,27651]" dest="identifier: LPAREN [46039,46045]"/>
  <match src="}: } [2674,2675]" dest="}: } [3238,3239]"/>
  <match src="identifier: b [6603,6604]" dest="identifier: b [7167,7168]"/>
  <match src="type_name [92873,92879]" dest="type_name [32029,32035]"/>
  <match src="{: { [100543,100544]" dest="{: { [39699,39700]"/>
  <match src="pure: pure [38345,38349]" dest="pure: pure [21619,21623]"/>
  <match src="member_expression [97453,97487]" dest="member_expression [36609,36643]"/>
  <match src="function_body [98520,98632]" dest="function_body [37676,37788]"/>
  <match src="{: { [6323,6324]" dest="{: { [6887,6888]"/>
  <match src="(: ( [34540,34541]" dest="(: ( [52934,52935]"/>
  <match src="uint256: uint256 [72299,72306]" dest="uint256: uint256 [56038,56045]"/>
  <match src="identifier: accounts [101854,101862]" dest="identifier: accounts [41010,41018]"/>
  <match src=".: . [47892,47893]" dest=".: . [18025,18026]"/>
  <match src="{: { [33157,33158]" dest="{: { [51551,51552]"/>
  <match src="type_name [30076,30083]" dest="type_name [48470,48477]"/>
  <match src="call_expression [36492,36515]" dest="call_expression [54886,54909]"/>
  <match src="(: ( [93494,93495]" dest="(: ( [32650,32651]"/>
  <match src="identifier: getPartial [8524,8534]" dest="identifier: getPartial [9088,9098]"/>
  <match src="identifier: candidate [98424,98433]" dest="identifier: candidate [37580,37589]"/>
  <match src="expression_statement [35214,35221]" dest="expression_statement [53608,53615]"/>
  <match src="{: { [32205,32206]" dest="{: { [50599,50600]"/>
  <match src="number_literal: 20 [35218,35220]" dest="number_literal: 20 [53612,53614]"/>
  <match src="view: view [94533,94537]" dest="view: view [33689,33693]"/>
  <match src="number_literal: 0 [74124,74125]" dest="number_literal: 0 [63187,63188]"/>
  <match src="event_paramater [55328,55350]" dest="event_paramater [23177,23199]"/>
  <match src="): ) [106983,106984]" dest="): ) [70325,70326]"/>
  <match src="comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts with custom message on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      *      * _Available since v2.4.0._      */ [2681,3185]" dest="comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts with custom message on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      *      * _Available since v2.4.0._      */ [3245,3749]"/>
  <match src="}: } [47649,47650]" dest="}: } [17782,17783]"/>
  <match src="primitive_type [56258,56265]" dest="primitive_type [24107,24114]"/>
  <match src="&quot;: &quot; [85550,85551]" dest="&quot;: &quot; [79446,79447]"/>
  <match src="identifier: Constants [95955,95964]" dest="identifier: Constants [35111,35120]"/>
  <match src="(: ( [47367,47368]" dest="(: ( [17500,17501]"/>
  <match src="return: return [48280,48286]" dest="return: return [18413,18419]"/>
  <match src="(: ( [97698,97699]" dest="(: ( [36854,36855]"/>
  <match src="): ) [8991,8992]" dest="): ) [9555,9556]"/>
  <match src="(: ( [84541,84542]" dest="(: ( [73933,73934]"/>
  <match src="primitive_type [27432,27439]" dest="primitive_type [45826,45833]"/>
  <match src="primitive_type [30126,30133]" dest="primitive_type [48520,48527]"/>
  <match src="array_access [101269,101293]" dest="array_access [40425,40449]"/>
  <match src="user_defined_type [68477,68489]" dest="user_defined_type [68814,68826]"/>
  <match src="call_struct_argument [7622,7639]" dest="call_struct_argument [8186,8203]"/>
  <match src="): ) [66367,66368]" dest="): ) [82429,82430]"/>
  <match src="identifier: owner [12337,12342]" dest="identifier: owner [25326,25331]"/>
  <match src="}: } [6056,6057]" dest="}: } [6620,6621]"/>
  <match src="internal: internal [101215,101223]" dest="internal: internal [40371,40379]"/>
  <match src="&quot;: &quot; [20548,20549]" dest="&quot;: &quot; [64542,64543]"/>
  <match src="primitive_type [52833,52840]" dest="primitive_type [56127,56134]"/>
  <match src="member_expression [93849,93870]" dest="member_expression [33005,33026]"/>
  <match src="uint256: uint256 [5752,5759]" dest="uint256: uint256 [6316,6323]"/>
  <match src="call_expression [21106,21173]" dest="call_expression [64554,64657]"/>
  <match src="identifier: BASE [6191,6195]" dest="identifier: BASE [6755,6759]"/>
  <match src="parameter [1217,1226]" dest="parameter [1781,1790]"/>
  <match src="identifier: D256 [6730,6734]" dest="identifier: D256 [7294,7298]"/>
  <match src="identifier: COLON [32363,32368]" dest="identifier: COLON [50757,50762]"/>
  <match src="identifier: b [4063,4064]" dest="identifier: b [4627,4628]"/>
  <match src="): ) [83742,83743]" dest="): ) [58665,58666]"/>
  <match src="primitive_type [30715,30722]" dest="primitive_type [49109,49116]"/>
  <match src="identifier: mul [1640,1643]" dest="identifier: mul [2204,2207]"/>
  <match src=".: . [104904,104905]" dest=".: . [44060,44061]"/>
  <match src="&gt;&gt;: &gt;&gt; [36397,36399]" dest="&gt;&gt;: &gt;&gt; [54791,54793]"/>
  <match src="call_expression [34161,34178]" dest="call_expression [52555,52572]"/>
  <match src="identifier: Account [95040,95047]" dest="identifier: Account [34196,34203]"/>
  <match src="state_mutability [30853,30857]" dest="state_mutability [49247,49251]"/>
  <match src="}: } [46976,46977]" dest="}: } [17109,17110]"/>
  <match src="&quot;: &quot; [50758,50759]" dest="&quot;: &quot; [56761,56762]"/>
  <match src="primitive_type [31632,31638]" dest="primitive_type [50026,50032]"/>
  <match src=",: , [8545,8546]" dest=",: , [9109,9110]"/>
  <match src="variable_declaration [84468,84496]" dest="variable_declaration [62141,62164]"/>
  <match src="}: } [32751,32752]" dest="}: } [51145,51146]"/>
  <match src="variable_declaration [33980,33989]" dest="variable_declaration [52374,52383]"/>
  <match src="call_argument [81907,81942]" dest="call_argument [72413,72451]"/>
  <match src="{: { [48768,48769]" dest="{: { [18901,18902]"/>
  <match src="identifier: D256 [6306,6310]" dest="identifier: D256 [6870,6874]"/>
  <match src="): ) [31380,31381]" dest="): ) [49774,49775]"/>
  <match src="call_argument [98161,98170]" dest="call_argument [37317,37326]"/>
  <match src="using_directive [75688,75715]" dest="using_directive [83589,83616]"/>
  <match src="constant: constant [106554,106562]" dest="constant: constant [69896,69904]"/>
  <match src="identifier: sub [73258,73261]" dest="identifier: add [59274,59277]"/>
  <match src="function_definition [47940,48095]" dest="function_definition [18073,18228]"/>
  <match src="identifier: candidates [98413,98423]" dest="identifier: candidates [37569,37579]"/>
  <match src="identifier: initialized [105708,105719]" dest="identifier: initialized [44864,44875]"/>
  <match src="address: address [55701,55708]" dest="address: address [23550,23557]"/>
  <match src="=: = [101657,101658]" dest="=: = [40813,40814]"/>
  <match src="identifier: couponAllowances [103252,103268]" dest="identifier: couponAllowances [42408,42424]"/>
  <match src="identifier: temp [7608,7612]" dest="identifier: temp [8172,8176]"/>
  <match src="return_statement [46323,46379]" dest="return_statement [16456,16512]"/>
  <match src="identifier: balanceOfCoupons [94758,94774]" dest="identifier: balanceOfCoupons [33914,33930]"/>
  <match src="): ) [14000,14001]" dest="): ) [26989,26990]"/>
  <match src="identifier: amount [17783,17789]" dest="identifier: amount [19939,19945]"/>
  <match src="call_argument [7391,7392]" dest="call_argument [7955,7956]"/>
  <match src="&quot;: &quot; [85176,85177]" dest="&quot;: &quot; [59347,59348]"/>
  <match src="(: ( [11577,11578]" dest="(: ( [24566,24567]"/>
  <match src="identifier: balanceOfPhantom [74381,74397]" dest="identifier: newSupply [67949,67958]"/>
  <match src="call_argument [82286,82291]" dest="call_argument [73100,73105]"/>
  <match src="primitive_type [15926,15933]" dest="primitive_type [83636,83643]"/>
  <match src="primitive_type [30054,30061]" dest="primitive_type [48448,48455]"/>
  <match src="parameter [7148,7159]" dest="parameter [7712,7723]"/>
  <match src="identifier: supply [101370,101376]" dest="identifier: supply [40526,40532]"/>
  <match src="event_paramater [99409,99429]" dest="event_paramater [38565,38585]"/>
  <match src="member_expression [105306,105341]" dest="member_expression [44462,44497]"/>
  <match src="parameter [1239,1265]" dest="parameter [1803,1829]"/>
  <match src="type_name [27873,27880]" dest="type_name [46267,46274]"/>
  <match src="): ) [99828,99829]" dest="): ) [38984,38985]"/>
  <match src="function_body [45487,45553]" dest="function_body [15620,15686]"/>
  <match src="}: } [93126,93127]" dest="}: } [32282,32283]"/>
  <match src="returns: returns [9111,9118]" dest="returns: returns [9675,9682]"/>
  <match src="}: } [105686,105687]" dest="}: } [44842,44843]"/>
  <match src="(: ( [3368,3369]" dest="(: ( [3932,3933]"/>
  <match src="type_name [101756,101763]" dest="type_name [40912,40919]"/>
  <match src="comment: // 75% of incentive [43205,43224]" dest="comment: // 75% of incentive [13338,13357]"/>
  <match src="type_name [74017,74024]" dest="type_name [62816,62823]"/>
  <match src="contract_body [99355,105814]" dest="contract_body [38511,44970]"/>
  <match src="parameter [32037,32049]" dest="parameter [50431,50443]"/>
  <match src="identifier: Decimal [63872,63879]" dest="identifier: Decimal [28660,28667]"/>
  <match src="member_expression [29042,29058]" dest="member_expression [47436,47452]"/>
  <match src="user_defined_type [89312,89323]" dest="user_defined_type [30812,30823]"/>
  <match src="call_expression [46010,46050]" dest="call_expression [16143,16183]"/>
  <match src="=: = [103084,103085]" dest="=: = [42240,42241]"/>
  <match src="function: function [46518,46526]" dest="function: function [16651,16659]"/>
  <match src="(: ( [27933,27934]" dest="(: ( [46327,46328]"/>
  <match src="{: { [105258,105259]" dest="{: { [44414,44415]"/>
  <match src="!=: != [106719,106721]" dest="!=: != [70061,70063]"/>
  <match src="-: - [53163,53164]" dest="-: - [65808,65809]"/>
  <match src="): ) [23095,23096]" dest="): ) [56664,56665]"/>
  <match src=".: . [101673,101674]" dest=".: . [40829,40830]"/>
  <match src="call_argument [21236,21272]" dest="call_argument [56966,57010]"/>
  <match src="returns: returns [9256,9263]" dest="returns: returns [9820,9827]"/>
  <match src=",: , [31206,31207]" dest=",: , [49600,49601]"/>
  <match src="struct: struct [88962,88968]" dest="struct: struct [30462,30468]"/>
  <match src="(: ( [95894,95895]" dest="(: ( [35050,35051]"/>
  <match src="parameter [101160,101175]" dest="parameter [40316,40331]"/>
  <match src="): ) [32734,32735]" dest="): ) [51128,51129]"/>
  <match src="event_definition [55152,55215]" dest="event_definition [23001,23064]"/>
  <match src="primitive_type [55115,55122]" dest="primitive_type [22964,22971]"/>
  <match src="contract: contract [88842,88850]" dest="contract: contract [30342,30350]"/>
  <match src="member_expression [101355,101376]" dest="member_expression [40511,40532]"/>
  <match src="primitive_type [46800,46807]" dest="primitive_type [16933,16940]"/>
  <match src="identifier: add [84428,84431]" dest="identifier: add [81033,81036]"/>
  <match src="member_expression [96545,96558]" dest="member_expression [35701,35714]"/>
  <match src="&quot;: &quot; [91656,91657]" dest="&quot;: &quot; [77966,77967]"/>
  <match src="identifier: _state [104318,104324]" dest="identifier: _state [43474,43480]"/>
  <match src="function: function [54746,54754]" dest="function: function [22595,22603]"/>
  <match src=".: . [101369,101370]" dest=".: . [40525,40526]"/>
  <match src="(: ( [28517,28518]" dest="(: ( [46911,46912]"/>
  <match src="parameter [29517,29531]" dest="parameter [47911,47925]"/>
  <match src="(: ( [6798,6799]" dest="(: ( [7362,7363]"/>
  <match src="unary_expression [29604,29609]" dest="unary_expression [47998,48003]"/>
  <match src="): ) [45161,45162]" dest="): ) [15294,15295]"/>
  <match src="array_access [35379,35397]" dest="array_access [53773,53791]"/>
  <match src="identifier: Vote [97430,97434]" dest="identifier: Vote [36586,36590]"/>
  <match src="): ) [45358,45359]" dest="): ) [15491,15492]"/>
  <match src="function_definition [46391,46512]" dest="function_definition [16524,16645]"/>
  <match src=",: , [54780,54781]" dest=",: , [22629,22630]"/>
  <match src="state_mutability [92859,92863]" dest="state_mutability [32015,32019]"/>
  <match src=",: , [1323,1324]" dest=",: , [1887,1888]"/>
  <match src="identifier: totalSupply [94724,94735]" dest="identifier: totalSupply [33880,33891]"/>
  <match src="(: ( [36496,36497]" dest="(: ( [54890,54891]"/>
  <match src=",: , [99429,99430]" dest=",: , [38585,38586]"/>
  <match src="call_argument [85176,85206]" dest="call_argument [59347,59370]"/>
  <match src=".: . [95205,95206]" dest=".: . [34361,34362]"/>
  <match src="]: ] [97752,97753]" dest="]: ] [36908,36909]"/>
  <match src="returns: returns [45963,45970]" dest="returns: returns [16096,16103]"/>
  <match src="): ) [7574,7575]" dest="): ) [8138,8139]"/>
  <match src="): ) [34811,34812]" dest="): ) [53205,53206]"/>
  <match src="identifier: from [13724,13728]" dest="identifier: from [26713,26717]"/>
  <match src="): ) [34044,34045]" dest="): ) [52438,52439]"/>
  <match src=".: . [93451,93452]" dest=".: . [32607,32608]"/>
  <match src="assignment_expression [35001,35036]" dest="assignment_expression [53395,53430]"/>
  <match src="returns: returns [46791,46798]" dest="returns: returns [16924,16931]"/>
  <match src="(: ( [82942,82943]" dest="(: ( [74204,74205]"/>
  <match src="return_statement [97986,98029]" dest="return_statement [37142,37185]"/>
  <match src="(: ( [95069,95070]" dest="(: ( [34225,34226]"/>
  <match src="parameter [103140,103153]" dest="parameter [42296,42309]"/>
  <match src=",: , [55104,55105]" dest=",: , [22953,22954]"/>
  <match src=".: . [100961,100962]" dest=".: . [40117,40118]"/>
  <match src="call_argument [6176,6198]" dest="call_argument [6740,6762]"/>
  <match src="parameter [28906,28922]" dest="parameter [47300,47316]"/>
  <match src="type_cast_expression [28429,28755]" dest="type_cast_expression [46823,47149]"/>
  <match src="bytes32: bytes32 [92573,92580]" dest="bytes32: bytes32 [31729,31736]"/>
  <match src="(: ( [79555,79556]" dest="(: ( [59954,59955]"/>
  <match src="enum: enum [88582,88586]" dest="enum: enum [30082,30086]"/>
  <match src="}: } [8774,8775]" dest="}: } [9338,9339]"/>
  <match src="primitive_type [12029,12033]" dest="primitive_type [25018,25022]"/>
  <match src="expression_statement [107083,107085]" dest="expression_statement [70425,70427]"/>
  <match src="identifier: skim [56314,56318]" dest="identifier: skim [24163,24167]"/>
  <match src="returns: returns [45224,45231]" dest="returns: returns [15357,15364]"/>
  <match src="identifier: DAO_ENTRANCE_LOCKUP_EPOCHS [43344,43370]" dest="identifier: DAO_ENTRANCE_LOCKUP_EPOCHS [13477,13503]"/>
  <match src="number_literal: 0 [21996,21997]" dest="number_literal: 0 [65102,65103]"/>
  <match src="primitive_type [8987,8991]" dest="primitive_type [9551,9555]"/>
  <match src="(: ( [54532,54533]" dest="(: ( [22381,22382]"/>
  <match src=".: . [47594,47595]" dest=".: . [17727,17728]"/>
  <match src="user_defined_type [108295,108305]" dest="user_defined_type [71369,71379]"/>
  <match src="call_argument [81712,81722]" dest="call_argument [72210,72220]"/>
  <match src="{: { [11455,11456]" dest="{: { [24444,24445]"/>
  <match src=".: . [103041,103042]" dest=".: . [42197,42198]"/>
  <match src=",: , [28824,28825]" dest=",: , [47218,47219]"/>
  <match src="uint256: uint256 [74373,74380]" dest="uint256: uint256 [67941,67948]"/>
  <match src="view: view [98085,98089]" dest="view: view [37241,37245]"/>
  <match src="identifier: input [36767,36772]" dest="identifier: input [55161,55166]"/>
  <match src="call_expression [28049,28073]" dest="call_expression [46443,46467]"/>
  <match src="&quot;: &quot; [107240,107241]" dest="&quot;: &quot; [70582,70583]"/>
  <match src="returns: returns [355,362]" dest="returns: returns [919,926]"/>
  <match src="constant: constant [65512,65520]" dest="constant: constant [60824,60832]"/>
  <match src="]: ] [95401,95402]" dest="]: ] [34557,34558]"/>
  <match src="emit_statement [82263,82293]" dest="emit_statement [82472,82507]"/>
  <match src="identifier: accounts [101589,101597]" dest="identifier: accounts [40745,40753]"/>
  <match src="type_name [91110,91114]" dest="type_name [77420,77424]"/>
  <match src="identifier: must [28261,28265]" dest="identifier: must [46655,46659]"/>
  <match src="identifier: value [82327,82332]" dest="identifier: value [72530,72535]"/>
  <match src="function_body [33870,34670]" dest="function_body [52264,53064]"/>
  <match src="primitive_type [102968,102975]" dest="primitive_type [42124,42131]"/>
  <match src="(: ( [23063,23064]" dest="(: ( [56632,56633]"/>
  <match src="assignment_expression [35575,35585]" dest="assignment_expression [53969,53979]"/>
  <match src="visibility [82054,82062]" dest="visibility [73724,73732]"/>
  <match src="identifier: _state [105066,105072]" dest="identifier: _state [44222,44228]"/>
  <match src="identifier: INCENTIVE [43276,43285]" dest="identifier: INCENTIVE [13409,13418]"/>
  <match src="): ) [29988,29989]" dest="): ) [48382,48383]"/>
  <match src="call_argument [34541,34562]" dest="call_argument [52935,52956]"/>
  <match src=",: , [80735,80736]" dest=",: , [71367,71368]"/>
  <match src=".: . [102240,102241]" dest=".: . [41396,41397]"/>
  <match src="user_defined_type [9082,9086]" dest="user_defined_type [9646,9650]"/>
  <match src="identifier: Coupons [88378,88385]" dest="identifier: Coupons [29878,29885]"/>
  <match src="memory: memory [9232,9238]" dest="memory: memory [9796,9802]"/>
  <match src="memory: memory [5885,5891]" dest="memory: memory [6449,6455]"/>
  <match src="binary_expression [50708,50726]" dest="binary_expression [63958,63984]"/>
  <match src="if_statement [53116,53361]" dest="if_statement [65732,65931]"/>
  <match src="identifier: expiringCoupons [96748,96763]" dest="identifier: expiringCoupons [35904,35919]"/>
  <match src="identifier: encodePacked [30266,30278]" dest="identifier: encodePacked [48660,48672]"/>
  <match src="(: ( [94699,94700]" dest="(: ( [33855,33856]"/>
  <match src="bool: bool [12029,12033]" dest="bool: bool [25018,25022]"/>
  <match src="function_body [48163,48204]" dest="function_body [18296,18337]"/>
  <match src="type_name [27585,27591]" dest="type_name [45979,45985]"/>
  <match src="identifier: getCouponSupplyChangeLimit [47949,47975]" dest="identifier: getCouponSupplyChangeLimit [18082,18108]"/>
  <match src="if_statement [33880,33931]" dest="if_statement [52274,52325]"/>
  <match src="revert: revert [31608,31614]" dest="revert: revert [50002,50008]"/>
  <match src="identifier: add [100301,100304]" dest="identifier: add [39457,39460]"/>
  <match src=".: . [102573,102574]" dest=".: . [41729,41730]"/>
  <match src="function: function [97908,97916]" dest="function: function [37064,37072]"/>
  <match src="contract_body [89413,89442]" dest="contract_body [30913,30942]"/>
  <match src="call_argument [36359,36376]" dest="call_argument [54753,54770]"/>
  <match src="event_definition [13693,13765]" dest="event_definition [26682,26754]"/>
  <match src="primitive_type [79121,79125]" dest="primitive_type [62919,62923]"/>
  <match src="if_statement [27930,28221]" dest="if_statement [46324,46615]"/>
  <match src="call_argument [57332,57333]" dest="call_argument [81236,81237]"/>
  <match src="}: } [101125,101126]" dest="}: } [40281,40282]"/>
  <match src="number_literal: 0 [10184,10185]" dest="number_literal: 0 [10748,10749]"/>
  <match src=".: . [101258,101259]" dest=".: . [40414,40415]"/>
  <match src="external: external [99806,99814]" dest="external: external [38962,38970]"/>
  <match src="identifier: c [1383,1384]" dest="identifier: c [1947,1948]"/>
  <match src="type_name [79035,79042]" dest="type_name [57540,57547]"/>
  <match src="&quot;: &quot; [85684,85685]" dest="&quot;: &quot; [79946,79947]"/>
  <match src="]: ] [105653,105654]" dest="]: ] [44809,44810]"/>
  <match src="address: address [55062,55069]" dest="address: address [22911,22918]"/>
  <match src="&quot;: &quot; [4091,4092]" dest="&quot;: &quot; [4655,4656]"/>
  <match src="revert: revert [29625,29631]" dest="revert: revert [48019,48025]"/>
  <match src="visibility [54996,55004]" dest="visibility [22845,22853]"/>
  <match src="public: public [94010,94016]" dest="public: public [33166,33172]"/>
  <match src="primitive_type [81247,81254]" dest="primitive_type [71720,71727]"/>
  <match src="state_mutability [55687,55691]" dest="state_mutability [23536,23540]"/>
  <match src="): ) [51005,51006]" dest="): ) [65659,65660]"/>
  <match src="private: private [43632,43639]" dest="private: private [13765,13772]"/>
  <match src="identifier: D256 [67588,67592]" dest="identifier: D256 [67095,67099]"/>
  <match src="identifier: b [4759,4760]" dest="identifier: b [5323,5324]"/>
  <match src="): ) [46460,46461]" dest="): ) [16593,16594]"/>
  <match src="call_expression [85130,85143]" dest="call_expression [59297,59314]"/>
  <match src="block_statement [53168,53361]" dest="block_statement [65813,65931]"/>
  <match src="function: function [92834,92842]" dest="function: function [31990,31998]"/>
  <match src="identifier: amount [23133,23139]" dest="identifier: amount [56711,56717]"/>
  <match src=",: , [63891,63892]" dest=",: , [28679,28680]"/>
  <match src="state_mutability [9392,9396]" dest="state_mutability [9956,9960]"/>
  <match src="call_expression [82429,82464]" dest="call_expression [67829,67854]"/>
  <match src="): ) [105614,105615]" dest="): ) [44770,44771]"/>
  <match src="parameter [82982,82995]" dest="parameter [73135,73148]"/>
  <match src="type_name [46922,46929]" dest="type_name [17055,17062]"/>
  <match src="identifier: msg [81524,81527]" dest="identifier: msg [79325,79328]"/>
  <match src="}: } [107309,107310]" dest="}: } [70651,70652]"/>
  <match src="type_name [78864,78871]" dest="type_name [61426,61433]"/>
  <match src="call_argument [103820,103825]" dest="call_argument [42976,42981]"/>
  <match src="&quot;: &quot; [25277,25278]" dest="&quot;: &quot; [80435,80436]"/>
  <match src="type_name [81489,81496]" dest="type_name [72014,72021]"/>
  <match src="identifier: newLock [105524,105531]" dest="identifier: newLock [44680,44687]"/>
  <match src="): ) [73231,73232]" dest="): ) [59230,59231]"/>
  <match src="call_argument [19781,19801]" dest="call_argument [65403,65423]"/>
  <match src="=: = [74056,74057]" dest="=: = [68412,68413]"/>
  <match src="identifier: self [9153,9157]" dest="identifier: self [9717,9721]"/>
  <match src="function: function [54273,54281]" dest="function: function [22122,22130]"/>
  <match src="function_definition [8577,8775]" dest="function_definition [9141,9339]"/>
  <match src="}: } [29999,30000]" dest="}: } [48393,48394]"/>
  <match src="return: return [92795,92801]" dest="return: return [31951,31957]"/>
  <match src="): ) [21085,21086]" dest="): ) [56882,56883]"/>
  <match src="function_body [44787,44822]" dest="function_body [14920,14955]"/>
  <match src=".: . [108447,108448]" dest=".: . [68863,68864]"/>
  <match src="type_name [48359,48366]" dest="type_name [18492,18499]"/>
  <match src=".: . [106736,106737]" dest=".: . [70078,70079]"/>
  <match src="struct_member [88094,88130]" dest="struct_member [29594,29630]"/>
  <match src="expression_statement [80845,80884]" dest="expression_statement [64163,64204]"/>
  <match src="identifier: z [36497,36498]" dest="identifier: z [54891,54892]"/>
  <match src="): ) [8289,8290]" dest="): ) [8853,8854]"/>
  <match src="parameter [104264,104281]" dest="parameter [43420,43437]"/>
  <match src=".: . [93217,93218]" dest=".: . [32373,32374]"/>
  <match src="identifier: from [54776,54780]" dest="identifier: from [22625,22629]"/>
  <match src="identifier: reserve1 [55842,55850]" dest="identifier: reserve1 [23691,23699]"/>
  <match src="bytes32: bytes32 [27873,27880]" dest="bytes32: bytes32 [46267,46274]"/>
  <match src="{: { [4039,4040]" dest="{: { [4603,4604]"/>
  <match src="comment: // than to check the size of the code at that address. [86816,86870]" dest="comment: // than to check the size of the code at that address. [75326,75380]"/>
  <match src=".: . [83769,83770]" dest=".: . [73631,73632]"/>
  <match src="{: { [95056,95057]" dest="{: { [34212,34213]"/>
  <match src="return_statement [93738,93767]" dest="return_statement [32894,32923]"/>
  <match src="identifier: Balance [89188,89195]" dest="identifier: Balance [30688,30695]"/>
  <match src="): ) [98171,98172]" dest="): ) [37327,37328]"/>
  <match src="uint256: uint256 [41835,41842]" dest="uint256: uint256 [11968,11975]"/>
  <match src="pure: pure [54363,54367]" dest="pure: pure [22212,22216]"/>
  <match src=",: , [107008,107009]" dest=",: , [70350,70351]"/>
  <match src="identifier: epochs [97133,97139]" dest="identifier: epochs [36289,36295]"/>
  <match src="false [99715,99720]" dest="false [38871,38876]"/>
  <match src="returns: returns [48750,48757]" dest="returns: returns [18883,18890]"/>
  <match src="string [19985,20025]" dest="string [57401,57431]"/>
  <match src="type_name [6540,6544]" dest="type_name [7104,7108]"/>
  <match src=":: : [95259,95260]" dest=":: : [34415,34416]"/>
  <match src="call_argument [106967,107008]" dest="call_argument [70309,70350]"/>
  <match src="return: return [96538,96544]" dest="return: return [35694,35700]"/>
  <match src="event_definition [81211,81277]" dest="event_definition [71682,71775]"/>
  <match src="(: ( [94850,94851]" dest="(: ( [34006,34007]"/>
  <match src="primitive_type [93616,93623]" dest="primitive_type [32772,32779]"/>
  <match src=".: . [101275,101276]" dest=".: . [40431,40432]"/>
  <match src="identifier: balanceOf [94700,94709]" dest="identifier: balanceOf [33856,33865]"/>
  <match src="(: ( [45832,45833]" dest="(: ( [15965,15966]"/>
  <match src="external: external [13096,13104]" dest="external: external [26085,26093]"/>
  <match src="call_argument [91236,91243]" dest="call_argument [77546,77553]"/>
  <match src="(: ( [33014,33015]" dest="(: ( [51408,51409]"/>
  <match src="identifier: outstanding [88404,88415]" dest="identifier: outstanding [29904,29915]"/>
  <match src="primitive_type [28834,28841]" dest="primitive_type [47228,47235]"/>
  <match src="address: address [56405,56412]" dest="address: address [24254,24261]"/>
  <match src="return_type_definition [95886,95903]" dest="return_type_definition [35042,35059]"/>
  <match src="=: = [100953,100954]" dest="=: = [40109,40110]"/>
  <match src="emit_statement [22094,22132]" dest="emit_statement [65224,65273]"/>
  <match src="return_type_definition [73322,73336]" dest="return_type_definition [82569,82583]"/>
  <match src="parameter [6653,6669]" dest="parameter [7217,7233]"/>
  <match src="(: ( [11728,11729]" dest="(: ( [24717,24718]"/>
  <match src="return_statement [94433,94472]" dest="return_statement [33589,33628]"/>
  <match src="returns: returns [68729,68736]" dest="returns: returns [63779,63786]"/>
  <match src="identifier: amount [102174,102180]" dest="identifier: amount [41330,41336]"/>
  <match src="primitive_type [33980,33987]" dest="primitive_type [52374,52381]"/>
  <match src="contract_body [90288,91786]" dest="contract_body [76598,78096]"/>
  <match src="parameter [47044,47051]" dest="parameter [17177,17184]"/>
  <match src="identifier: experimental [32,44]" dest="identifier: experimental [32,44]"/>
  <match src="if: if [103982,103984]" dest="if: if [43138,43140]"/>
  <match src="): ) [35678,35679]" dest="): ) [54072,54073]"/>
  <match src="(: ( [95193,95194]" dest="(: ( [34349,34350]"/>
  <match src="return_statement [8707,8769]" dest="return_statement [9271,9333]"/>
  <match src="identifier: outstandingCouponsForEpoch [104110,104136]" dest="identifier: outstandingCouponsForEpoch [43266,43292]"/>
  <match src="identifier: univ2 [85076,85081]" dest="identifier: ethic [59476,59481]"/>
  <match src=",: , [81898,81899]" dest=",: , [72404,72405]"/>
  <match src="): ) [43289,43290]" dest="): ) [13422,13423]"/>
  <match src="parameter [105031,105045]" dest="parameter [44187,44201]"/>
  <match src="call_argument [31877,31885]" dest="call_argument [50271,50279]"/>
  <match src="identifier: balance [94064,94071]" dest="identifier: balance [33220,33227]"/>
  <match src="parameter [23081,23095]" dest="parameter [20062,20076]"/>
  <match src="identifier: account [97488,97495]" dest="identifier: account [36644,36651]"/>
  <match src="memory: memory [8198,8204]" dest="memory: memory [8762,8768]"/>
  <match src="function_body [104866,104978]" dest="function_body [44022,44134]"/>
  <match src="(: ( [4059,4060]" dest="(: ( [4623,4624]"/>
  <match src="enum_value: Locked [88004,88010]" dest="enum_value: Locked [29504,29510]"/>
  <match src="type_cast_expression [36017,36038]" dest="type_cast_expression [54411,54432]"/>
  <match src="return_type_definition [16210,16227]" dest="return_type_definition [58801,58818]"/>
  <match src="): ) [9305,9306]" dest="): ) [9869,9870]"/>
  <match src="enum_value: REJECT [88638,88644]" dest="enum_value: REJECT [30138,30144]"/>
  <match src="identifier: Fluid [107003,107008]" dest="identifier: Fluid [70345,70350]"/>
  <match src="identifier: b [2577,2578]" dest="identifier: b [3141,3142]"/>
  <match src="type_name [32847,32854]" dest="type_name [51241,51248]"/>
  <match src="array_access [36471,36489]" dest="array_access [54865,54883]"/>
  <match src="boolean_literal [105801,105805]" dest="boolean_literal [44957,44961]"/>
  <match src="member_expression [95237,95251]" dest="member_expression [34393,34407]"/>
  <match src="identifier: provide [83836,83843]" dest="identifier: commit [80832,80838]"/>
  <match src="view: view [95780,95784]" dest="view: view [34936,34940]"/>
  <match src="uint256: uint256 [79035,79042]" dest="uint256: uint256 [57540,57547]"/>
  <match src="call_argument [31308,31327]" dest="call_argument [49702,49721]"/>
  <match src="return_type_definition [99815,99829]" dest="return_type_definition [38971,38985]"/>
  <match src="(: ( [30403,30404]" dest="(: ( [48797,48798]"/>
  <match src="expression_statement [34463,34467]" dest="expression_statement [52857,52861]"/>
  <match src=".: . [105786,105787]" dest=".: . [44942,44943]"/>
  <match src="): ) [34563,34564]" dest="): ) [52957,52958]"/>
  <match src="uint256: uint256 [105211,105218]" dest="uint256: uint256 [44367,44374]"/>
  <match src="function_definition [52819,52959]" dest="function_definition [56104,56325]"/>
  <match src="identifier: self [7196,7200]" dest="identifier: self [7760,7764]"/>
  <match src="memory: memory [8172,8178]" dest="memory: memory [8736,8742]"/>
  <match src="[: [ [104559,104560]" dest="[: [ [43715,43716]"/>
  <match src="parameter [21856,21870]" dest="parameter [65040,65054]"/>
  <match src="parameter [104835,104855]" dest="parameter [43991,44011]"/>
  <match src="{: { [95494,95495]" dest="{: { [34650,34651]"/>
  <match src="private: private [15900,15907]" dest="private: private [20083,20090]"/>
  <match src=".: . [104494,104495]" dest=".: . [43650,43651]"/>
  <match src="primitive_type [42410,42417]" dest="primitive_type [12543,12550]"/>
  <match src="(: ( [79099,79100]" dest="(: ( [58875,58876]"/>
  <match src="function_body [97436,97503]" dest="function_body [36592,36659]"/>
  <match src="type_name [104264,104271]" dest="type_name [43420,43427]"/>
  <match src="): ) [93495,93496]" dest="): ) [32651,32652]"/>
  <match src="{: { [8097,8098]" dest="{: { [8661,8662]"/>
  <match src="member_expression [96191,96257]" dest="member_expression [35347,35413]"/>
  <match src="enum_declaration [88582,88650]" dest="enum_declaration [30082,30150]"/>
  <match src="identifier: file [27859,27863]" dest="identifier: file [46253,46257]"/>
  <match src="comment: // '&gt;' [27703,27709]" dest="comment: // '&gt;' [46097,46103]"/>
  <match src="identifier: self [6588,6592]" dest="identifier: self [7152,7156]"/>
  <match src="parameter [34758,34770]" dest="parameter [53152,53164]"/>
  <match src=",: , [104833,104834]" dest=",: , [43989,43990]"/>
  <match src="function: function [102796,102804]" dest="function: function [41952,41960]"/>
  <match src="identifier: Status [95269,95275]" dest="identifier: Status [34425,34431]"/>
  <match src="number_literal: 1 [82943,82944]" dest="number_literal: 1 [74205,74206]"/>
  <match src="): ) [95462,95463]" dest="): ) [34618,34619]"/>
  <match src="identifier: amount [100673,100679]" dest="identifier: amount [39829,39835]"/>
  <match src="identifier: Deposit [81704,81711]" dest="identifier: Deposit [72202,72209]"/>
  <match src="identifier: z [35579,35580]" dest="identifier: z [53973,53974]"/>
  <match src="): ) [63897,63898]" dest="): ) [28685,28686]"/>
  <match src="function_body [6323,6386]" dest="function_body [6887,6950]"/>
  <match src="(: ( [36766,36767]" dest="(: ( [55160,55161]"/>
  <match src="return: return [94261,94267]" dest="return: return [33417,33423]"/>
  <match src="type_name [34704,34711]" dest="type_name [53098,53105]"/>
  <match src="array_access [35955,35964]" dest="array_access [54349,54358]"/>
  <match src="): ) [1696,1697]" dest="): ) [2260,2261]"/>
  <match src="&lt;: &lt; [36170,36171]" dest="&lt;: &lt; [54564,54565]"/>
  <match src="{: { [27920,27921]" dest="{: { [46314,46315]"/>
  <match src="yul_evm_builtin [98605,98610]" dest="yul_evm_builtin [37761,37766]"/>
  <match src="{: { [97708,97709]" dest="{: { [36864,36865]"/>
  <match src="internal: internal [5964,5972]" dest="internal: internal [6528,6536]"/>
  <match src="visibility [56159,56167]" dest="visibility [24008,24016]"/>
  <match src="primitive_type [54617,54624]" dest="primitive_type [22466,22473]"/>
  <match src="type_name [55834,55841]" dest="type_name [23683,23690]"/>
  <match src=".: . [82077,82078]" dest=".: . [73754,73755]"/>
  <match src="state_mutability [94228,94232]" dest="state_mutability [33384,33388]"/>
  <match src="identifier: self [8809,8813]" dest="identifier: self [9373,9377]"/>
  <match src="primitive_type [54768,54775]" dest="primitive_type [22617,22624]"/>
  <match src="{: { [78033,78034]" dest="{: { [61520,61521]"/>
  <match src="]: ] [95686,95687]" dest="]: ] [34842,34843]"/>
  <match src="comment: // 25% of incentive [43295,43314]" dest="comment: // 25% of incentive [13428,13447]"/>
  <match src="identifier: reject [88759,88765]" dest="identifier: reject [30259,30265]"/>
  <match src="call_expression [32313,32337]" dest="call_expression [50707,50731]"/>
  <match src="type_name [54196,54200]" dest="type_name [22045,22049]"/>
  <match src="identifier: expiringCouponsAtIndex [96892,96914]" dest="identifier: expiringCouponsAtIndex [36048,36070]"/>
  <match src=".: . [104921,104922]" dest=".: . [44077,44078]"/>
  <match src="call_argument [82169,82179]" dest="call_argument [73782,73792]"/>
  <match src="type_name [104835,104841]" dest="type_name [43991,43997]"/>
  <match src="): ) [29267,29268]" dest="): ) [47661,47662]"/>
  <match src="identifier: debt [93966,93970]" dest="identifier: debt [33122,33126]"/>
  <match src="function_definition [44730,44822]" dest="function_definition [14863,14955]"/>
  <match src="call_expression [6185,6196]" dest="call_expression [6749,6760]"/>
  <match src="return: return [7561,7567]" dest="return: return [8125,8131]"/>
  <match src="(: ( [94614,94615]" dest="(: ( [33770,33771]"/>
  <match src="primitive_type [95601,95608]" dest="primitive_type [34757,34764]"/>
  <match src="uint256: uint256 [97100,97107]" dest="uint256: uint256 [36256,36263]"/>
  <match src="member_expression [81712,81722]" dest="member_expression [72210,72220]"/>
  <match src="identifier: coupons [102336,102343]" dest="identifier: coupons [41492,41499]"/>
  <match src="primitive_type [89249,89256]" dest="primitive_type [30749,30756]"/>
  <match src="identifier: value [13758,13763]" dest="identifier: value [26747,26752]"/>
  <match src="address: address [19874,19881]" dest="address: address [65504,65511]"/>
  <match src="number_literal: 1e12 [68678,68682]" dest="number_literal: 1e12 [69087,69091]"/>
  <match src="identifier: account [106656,106663]" dest="identifier: account [69998,70005]"/>
  <match src=",: , [29858,29859]" dest=",: , [48252,48253]"/>
  <match src="identifier: D256 [47401,47405]" dest="identifier: D256 [17534,17538]"/>
  <match src="): ) [84215,84216]" dest="): ) [79393,79394]"/>
  <match src="call_argument [84257,84288]" dest="call_argument [81153,81164]"/>
  <match src="state_mutability [94400,94404]" dest="state_mutability [33556,33560]"/>
  <match src="member_expression [99985,100006]" dest="member_expression [39141,39162]"/>
  <match src="): ) [9381,9382]" dest="): ) [9945,9946]"/>
  <match src="call_argument [36761,36786]" dest="call_argument [55155,55180]"/>
  <match src="uint256: uint256 [97567,97574]" dest="uint256: uint256 [36723,36730]"/>
  <match src="=: = [42453,42454]" dest="=: = [12586,12587]"/>
  <match src="identifier: Require [84034,84041]" dest="identifier: Require [80877,80884]"/>
  <match src="): ) [99804,99805]" dest="): ) [38960,38961]"/>
  <match src="variable_declaration_statement [34914,34950]" dest="variable_declaration_statement [53308,53344]"/>
  <match src="identifier: account [95010,95017]" dest="identifier: account [34166,34173]"/>
  <match src="): ) [4037,4038]" dest="): ) [4601,4602]"/>
  <match src="function_body [94149,94195]" dest="function_body [33305,33351]"/>
  <match src="identifier: stringify [30545,30554]" dest="identifier: stringify [48939,48948]"/>
  <match src="{: { [94149,94150]" dest="{: { [33305,33306]"/>
  <match src="(: ( [84444,84445]" dest="(: ( [81046,81047]"/>
  <match src="return_type_definition [45963,45992]" dest="return_type_definition [16096,16125]"/>
  <match src="function_definition [56210,56300]" dest="function_definition [24059,24149]"/>
  <match src="(: ( [96482,96483]" dest="(: ( [35638,35639]"/>
  <match src=".: . [66259,66260]" dest=".: . [82311,82312]"/>
  <match src="type_name [4639,4645]" dest="type_name [5203,5209]"/>
  <match src="[: [ [105645,105646]" dest="[: [ [44801,44802]"/>
  <match src="identifier: amount [21228,21234]" dest="identifier: amount [56958,56964]"/>
  <match src="member_expression [102716,102738]" dest="member_expression [41872,41894]"/>
  <match src="call_expression [30385,30411]" dest="call_expression [48779,48805]"/>
  <match src="member_expression [101635,101656]" dest="member_expression [40791,40812]"/>
  <match src="private: private [44038,44045]" dest="private: private [14171,14178]"/>
  <match src="identifier: D256 [66708,66712]" dest="identifier: D256 [21298,21302]"/>
  <match src="return_statement [9003,9034]" dest="return_statement [9567,9598]"/>
  <match src="call_argument [2636,2637]" dest="call_argument [3200,3201]"/>
  <match src="=&gt;: =&gt; [88791,88793]" dest="=&gt;: =&gt; [30291,30293]"/>
  <match src="call_argument [106976,106983]" dest="call_argument [70318,70325]"/>
  <match src="call_argument [96258,96273]" dest="call_argument [35414,35429]"/>
  <match src="call_expression [102904,102911]" dest="call_expression [42060,42067]"/>
  <match src="call_expression [21891,21959]" dest="call_expression [63807,63921]"/>
  <match src="): ) [31412,31413]" dest="): ) [49806,49807]"/>
  <match src="assignment_expression [102492,102593]" dest="assignment_expression [41648,41749]"/>
  <match src="visibility [44454,44461]" dest="visibility [14587,14594]"/>
  <match src="): ) [6378,6379]" dest="): ) [6942,6943]"/>
  <match src="binary_expression [8876,8897]" dest="binary_expression [9440,9461]"/>
  <match src="(: ( [74084,74085]" dest="(: ( [63131,63132]"/>
  <match src="visibility [54291,54299]" dest="visibility [22140,22148]"/>
  <match src="): ) [54478,54479]" dest="): ) [22327,22328]"/>
  <match src="&quot;: &quot; [85391,85392]" dest="&quot;: &quot; [81319,81320]"/>
  <match src="returns: returns [36654,36661]" dest="returns: returns [55048,55055]"/>
  <match src="]: ] [103082,103083]" dest="]: ] [42238,42239]"/>
  <match src="identifier: IOracle [88913,88920]" dest="identifier: IOracle [30413,30420]"/>
  <match src="}: } [7042,7043]" dest="}: } [7606,7607]"/>
  <match src="member_expression [95139,95160]" dest="member_expression [34295,34316]"/>
  <match src=",: , [79033,79034]" dest=",: , [57538,57539]"/>
  <match src="function: function [56305,56313]" dest="function: function [24154,24162]"/>
  <match src="call_expression [3361,3389]" dest="call_expression [3925,3953]"/>
  <match src="identifier: value [81270,81275]" dest="identifier: value [71743,71748]"/>
  <match src="call_expression [28664,28683]" dest="call_expression [47058,47077]"/>
  <match src="return: return [46941,46947]" dest="return: return [17074,17080]"/>
  <match src="{: { [93934,93935]" dest="{: { [33090,33091]"/>
  <match src="assignment_expression [34520,34564]" dest="assignment_expression [52914,52958]"/>
  <match src="(: ( [94303,94304]" dest="(: ( [33459,33460]"/>
  <match src="call_struct_argument [46180,46216]" dest="call_struct_argument [16313,16349]"/>
  <match src="identifier: SUPPLY_CHANGE_LIMIT [43966,43985]" dest="identifier: SUPPLY_CHANGE_LIMIT [14099,14118]"/>
  <match src="call_argument [28007,28178]" dest="call_argument [46401,46572]"/>
  <match src=":: : [8726,8727]" dest=":: : [9290,9291]"/>
  <match src="primitive_type [55062,55069]" dest="primitive_type [22911,22918]"/>
  <match src="type_name [101193,101199]" dest="type_name [40349,40355]"/>
  <match src="comment: /* solium-disable-next-line security/no-inline-assembly */ [33474,33532]" dest="comment: /* solium-disable-next-line security/no-inline-assembly */ [51868,51926]"/>
  <match src="address: address [97793,97800]" dest="address: address [36949,36956]"/>
  <match src=".: . [95153,95154]" dest=".: . [34309,34310]"/>
  <match src="identifier: div [96254,96257]" dest="identifier: div [35410,35413]"/>
  <match src="state_mutability [29581,29585]" dest="state_mutability [47975,47979]"/>
  <match src="pure: pure [30853,30857]" dest="pure: pure [49247,49251]"/>
  <match src="private: private [90521,90528]" dest="private: private [76831,76838]"/>
  <match src="return_statement [96420,96443]" dest="return_statement [35576,35599]"/>
  <match src="call_argument [34535,34563]" dest="call_argument [52929,52957]"/>
  <match src="parameter [98383,98387]" dest="parameter [37539,37543]"/>
  <match src=",: , [13078,13079]" dest=",: , [26067,26068]"/>
  <match src="function: function [93983,93991]" dest="function: function [33139,33147]"/>
  <match src="visibility [12361,12369]" dest="visibility [25350,25358]"/>
  <match src="(: ( [7390,7391]" dest="(: ( [7954,7955]"/>
  <match src="(: ( [107117,107118]" dest="(: ( [70459,70460]"/>
  <match src="function_body [21096,21381]" dest="function_body [56893,57043]"/>
  <match src="uint256: uint256 [96165,96172]" dest="uint256: uint256 [35321,35328]"/>
  <match src="primitive_type [13080,13087]" dest="primitive_type [26069,26076]"/>
  <match src="visibility [99942,99950]" dest="visibility [39098,39106]"/>
  <match src="function_definition [56068,56128]" dest="function_definition [23917,23977]"/>
  <match src="): ) [54132,54133]" dest="): ) [21981,21982]"/>
  <match src="identifier: BASE [6609,6613]" dest="identifier: BASE [7173,7177]"/>
  <match src=",: , [1237,1238]" dest=",: , [1801,1802]"/>
  <match src="identifier: FILE [106563,106567]" dest="identifier: FILE [69905,69909]"/>
  <match src="identifier: _state [95511,95517]" dest="identifier: _state [34667,34673]"/>
  <match src="number_literal: 18 [92990,92992]" dest="number_literal: 18 [32146,32148]"/>
  <match src="identifier: bonded [100157,100163]" dest="identifier: bonded [39313,39319]"/>
  <match src="(: ( [8589,8590]" dest="(: ( [9153,9154]"/>
  <match src="internal: internal [8830,8838]" dest="internal: internal [9394,9402]"/>
  <match src="function_body [46931,46977]" dest="function_body [17064,17110]"/>
  <match src="): ) [10028,10029]" dest="): ) [10592,10593]"/>
  <match src=",: , [13482,13483]" dest=",: , [26471,26472]"/>
  <match src="identifier: value [8111,8116]" dest="identifier: value [8675,8680]"/>
  <match src="identifier: totalBonded [74085,74096]" dest="identifier: timeIntoEpoch [63132,63145]"/>
  <match src="function_definition [6441,6625]" dest="function_definition [7005,7189]"/>
  <match src="address: address [105012,105019]" dest="address: address [44168,44175]"/>
  <match src="}: } [89130,89131]" dest="}: } [30630,30631]"/>
  <match src="inheritance_specifier [90282,90287]" dest="inheritance_specifier [76592,76597]"/>
  <match src="type_name [81049,81056]" dest="type_name [71481,71488]"/>
  <match src="call_expression [48039,48088]" dest="call_expression [18172,18221]"/>
  <match src="function: function [11532,11540]" dest="function: function [24521,24529]"/>
  <match src="constant: constant [42501,42509]" dest="constant: constant [12634,12642]"/>
  <match src="=: = [44200,44201]" dest="=: = [14333,14334]"/>
  <match src="visibility [13500,13508]" dest="visibility [26489,26497]"/>
  <match src="call_expression [81954,81968]" dest="call_expression [57228,57242]"/>
  <match src="type_name [7148,7152]" dest="type_name [7712,7716]"/>
  <match src="{: { [30883,30884]" dest="{: { [49277,49278]"/>
  <match src="identifier: COMMA [29294,29299]" dest="identifier: COMMA [47688,47693]"/>
  <match src=".: . [78088,78089]" dest=".: . [61795,61796]"/>
  <match src="binary_expression [2016,2021]" dest="binary_expression [2580,2585]"/>
  <match src="memory: memory [8426,8432]" dest="memory: memory [8990,8996]"/>
  <match src="): ) [96496,96497]" dest="): ) [35652,35653]"/>
  <match src="expression_statement [100259,100313]" dest="expression_statement [39415,39469]"/>
  <match src="(: ( [55790,55791]" dest="(: ( [23639,23640]"/>
  <match src="member_expression [103471,103491]" dest="member_expression [42627,42647]"/>
  <match src="}: } [7222,7223]" dest="}: } [7786,7787]"/>
  <match src="[: [ [97139,97140]" dest="[: [ [36295,36296]"/>
  <match src="(: ( [104448,104449]" dest="(: ( [43604,43605]"/>
  <match src="visibility [3253,3261]" dest="visibility [3817,3825]"/>
  <match src="identifier: Status [95147,95153]" dest="identifier: Status [34303,34309]"/>
  <match src="primitive_type [99926,99933]" dest="primitive_type [39082,39089]"/>
  <match src="return_statement [45497,45547]" dest="return_statement [15630,15680]"/>
  <match src="emit: emit [91271,91275]" dest="emit: emit [77581,77585]"/>
  <match src="private: private [42677,42684]" dest="private: private [12810,12817]"/>
  <match src="identifier: D256 [46174,46178]" dest="identifier: D256 [16307,16311]"/>
  <match src="return: return [93842,93848]" dest="return: return [32998,33004]"/>
  <match src="): ) [83949,83950]" dest="): ) [59272,59273]"/>
  <match src="=: = [27695,27696]" dest="=: = [46089,46090]"/>
  <match src="identifier: _state [96826,96832]" dest="identifier: _state [35982,35988]"/>
  <match src="call_argument [107156,107188]" dest="call_argument [70498,70530]"/>
  <match src="primitive_type [34165,34170]" dest="primitive_type [52559,52564]"/>
  <match src="identifier: balanceOfBonded [83073,83088]" dest="identifier: balanceOfBonded [73340,73355]"/>
  <match src="[: [ [94964,94965]" dest="[: [ [34120,34121]"/>
  <match src="call_argument [8757,8764]" dest="call_argument [9321,9328]"/>
  <match src="internal: internal [100534,100542]" dest="internal: internal [39690,39698]"/>
  <match src=".: . [105072,105073]" dest=".: . [44228,44229]"/>
  <match src="member_expression [100259,100273]" dest="member_expression [39415,39429]"/>
  <match src="call_expression [7376,7393]" dest="call_expression [7940,7957]"/>
  <match src="variable_declaration_statement [83237,83322]" dest="variable_declaration_statement [79974,80013]"/>
  <match src="type_name [9878,9885]" dest="type_name [10442,10449]"/>
  <match src="address: address [65643,65650]" dest="address: address [79210,79217]"/>
  <match src="variable_declaration [34786,34795]" dest="variable_declaration [53180,53189]"/>
  <match src="primitive_type [13962,13969]" dest="primitive_type [26951,26958]"/>
  <match src="expression_statement [34310,34316]" dest="expression_statement [52704,52710]"/>
  <match src="&quot;: &quot; [871,872]" dest="&quot;: &quot; [1435,1436]"/>
  <match src="call_expression [101582,101625]" dest="call_expression [40738,40781]"/>
  <match src="identifier: value [46180,46185]" dest="identifier: value [16313,16318]"/>
  <match src="expression_statement [104058,104138]" dest="expression_statement [43214,43294]"/>
  <match src="number_literal: 0 [93337,93338]" dest="number_literal: 0 [32493,32494]"/>
  <match src="uint256: uint256 [103876,103883]" dest="uint256: uint256 [43032,43039]"/>
  <match src="state_mutability [8973,8977]" dest="state_mutability [9537,9541]"/>
  <match src="identifier: _state [101932,101938]" dest="identifier: _state [41088,41094]"/>
  <match src="): ) [96526,96527]" dest="): ) [35682,35683]"/>
  <match src="visibility [103542,103550]" dest="visibility [42698,42706]"/>
  <match src="): ) [79561,79562]" dest="): ) [59968,59969]"/>
  <match src="identifier: _state [97859,97865]" dest="identifier: _state [37015,37021]"/>
  <match src="parameter [105012,105029]" dest="parameter [44168,44185]"/>
  <match src="returns: returns [11720,11727]" dest="returns: returns [24709,24716]"/>
  <match src="function: function [95560,95568]" dest="function: function [34716,34724]"/>
  <match src="): ) [32702,32703]" dest="): ) [51096,51097]"/>
  <match src="identifier: DAI_ADDRESS [41742,41753]" dest="identifier: DAI_ADDRESS [11875,11886]"/>
  <match src="binary_expression [82495,82513]" dest="binary_expression [72726,72744]"/>
  <match src="type_name [103188,103194]" dest="type_name [42344,42350]"/>
  <match src="identifier: amount [22975,22981]" dest="identifier: amount [56483,56489]"/>
  <match src="identifier: Account [89260,89267]" dest="identifier: Account [30760,30767]"/>
  <match src="primitive_type [94376,94383]" dest="primitive_type [33532,33539]"/>
  <match src="identifier: sender [99763,99769]" dest="identifier: sender [38919,38925]"/>
  <match src="call_argument [31702,31726]" dest="call_argument [50096,50120]"/>
  <match src="return_type_definition [9111,9125]" dest="return_type_definition [9675,9689]"/>
  <match src="=: = [44383,44384]" dest="=: = [14516,14517]"/>
  <match src="uint256: uint256 [68738,68745]" dest="uint256: uint256 [63788,63795]"/>
  <match src="identifier: candidate [98287,98296]" dest="identifier: candidate [37443,37452]"/>
  <match src="state_variable_declaration [44244,44335]" dest="state_variable_declaration [14377,14468]"/>
  <match src="[: [ [98423,98424]" dest="[: [ [37579,37580]"/>
  <match src="identifier: candidate [105418,105427]" dest="identifier: candidate [44574,44583]"/>
  <match src="): ) [34177,34178]" dest="): ) [52571,52572]"/>
  <match src="function: function [45800,45808]" dest="function: function [15933,15941]"/>
  <match src="type_name [55106,55111]" dest="type_name [22955,22960]"/>
  <match src=".: . [101554,101555]" dest=".: . [40710,40711]"/>
  <match src="return_statement [97718,97761]" dest="return_statement [36874,36917]"/>
  <match src="parameter [93518,93525]" dest="parameter [32674,32681]"/>
  <match src="return_type_definition [97218,97232]" dest="return_type_definition [36374,36388]"/>
  <match src=",: , [54546,54547]" dest=",: , [22395,22396]"/>
  <match src="&quot;: &quot; [25955,25956]" dest="&quot;: &quot; [80259,80260]"/>
  <match src="primitive_type [319,326]" dest="primitive_type [883,890]"/>
  <match src="identifier: GOVERNANCE_EMERGENCY_DELAY [46479,46505]" dest="identifier: GOVERNANCE_EMERGENCY_DELAY [16612,16638]"/>
  <match src="&quot;: &quot; [2639,2640]" dest="&quot;: &quot; [3203,3204]"/>
  <match src=",: , [32604,32605]" dest=",: , [50998,50999]"/>
  <match src="): ) [53150,53151]" dest="): ) [65795,65796]"/>
  <match src="function: function [47113,47121]" dest="function: function [17246,17254]"/>
  <match src="type_name [56082,56089]" dest="type_name [23931,23938]"/>
  <match src="return: return [99708,99714]" dest="return: return [38864,38870]"/>
  <match src="type_name [55593,55597]" dest="type_name [23442,23446]"/>
  <match src="function: function [27809,27817]" dest="function: function [46203,46211]"/>
  <match src="memory: memory [3232,3238]" dest="memory: memory [3796,3802]"/>
  <match src="return: return [93537,93543]" dest="return: return [32693,32699]"/>
  <match src="using_directive [99361,99388]" dest="using_directive [38517,38544]"/>
  <match src="}: } [46384,46385]" dest="}: } [16517,16518]"/>
  <match src="string_literal [84257,84288]" dest="string_literal [81153,81164]"/>
  <match src="identifier: file [30323,30327]" dest="identifier: file [48717,48721]"/>
  <match src="identifier: period [45131,45137]" dest="identifier: period [15264,15270]"/>
  <match src="identifier: abi [28457,28460]" dest="identifier: abi [46851,46854]"/>
  <match src="call_expression [32478,32497]" dest="call_expression [50872,50891]"/>
  <match src="parameter [33852,33864]" dest="parameter [52246,52258]"/>
  <match src="comment: // 1 hour  [43905,43915]" dest="comment: // 1 hour  [14038,14048]"/>
  <match src="{: { [48270,48271]" dest="{: { [18403,18404]"/>
  <match src="member_expression [106967,107008]" dest="member_expression [70309,70350]"/>
  <match src="expression_statement [83630,83719]" dest="expression_statement [80672,80712]"/>
  <match src=".: . [94180,94181]" dest=".: . [33336,33337]"/>
  <match src="): ) [105247,105248]" dest="): ) [44403,44404]"/>
  <match src="{: { [45020,45021]" dest="{: { [15153,15154]"/>
  <match src="primitive_type [29649,29655]" dest="primitive_type [48043,48049]"/>
  <match src="primitive_type [55834,55841]" dest="primitive_type [23683,23690]"/>
  <match src="): ) [82462,82463]" dest="): ) [67852,67853]"/>
  <match src="return_statement [33738,33758]" dest="return_statement [52132,52152]"/>
  <match src=".: . [95964,95965]" dest=".: . [35120,35121]"/>
  <match src="function: function [103105,103113]" dest="function: function [42261,42269]"/>
  <match src="call_argument [82274,82284]" dest="call_argument [82484,82494]"/>
  <match src="call_argument [36857,36891]" dest="call_argument [55251,55285]"/>
  <match src="call_argument [101685,101691]" dest="call_argument [40841,40847]"/>
  <match src=".: . [100273,100274]" dest=".: . [39429,39430]"/>
  <match src="(: ( [55620,55621]" dest="(: ( [23469,23470]"/>
  <match src="): ) [34770,34771]" dest="): ) [53164,53165]"/>
  <match src="&quot;: &quot; [81907,81908]" dest="&quot;: &quot; [72413,72414]"/>
  <match src="identifier: epoch [96772,96777]" dest="identifier: epoch [35928,35933]"/>
  <match src="call_expression [78081,78129]" dest="call_expression [61788,61832]"/>
  <match src="{: { [6747,6748]" dest="{: { [7311,7312]"/>
  <match src="expression_statement [103229,103361]" dest="expression_statement [42385,42517]"/>
  <match src="visibility [48736,48744]" dest="visibility [18869,18877]"/>
  <match src="identifier: account [93032,93039]" dest="identifier: account [32188,32195]"/>
  <match src="{: { [8697,8698]" dest="{: { [9261,9262]"/>
  <match src="identifier: that [106683,106687]" dest="identifier: that [70025,70029]"/>
  <match src="boolean_literal [99606,99611]" dest="boolean_literal [38762,38767]"/>
  <match src="(: ( [86643,86644]" dest="(: ( [75153,75154]"/>
  <match src="struct_member [42093,42107]" dest="struct_member [12226,12240]"/>
  <match src="type_name [8216,8222]" dest="type_name [8780,8786]"/>
  <match src="public: public [98078,98084]" dest="public: public [37234,37240]"/>
  <match src="(: ( [84173,84174]" dest="(: ( [81088,81089]"/>
  <match src="bytes: bytes [32901,32906]" dest="bytes: bytes [51295,51300]"/>
  <match src="assignment_expression [36000,36039]" dest="assignment_expression [54394,54433]"/>
  <match src="call_expression [101355,101396]" dest="call_expression [40511,40552]"/>
  <match src="state_variable_declaration [42862,42919]" dest="state_variable_declaration [12995,13052]"/>
  <match src="primitive_type [32037,32044]" dest="primitive_type [50431,50438]"/>
  <match src="identifier: GOVERNANCE_PROPOSAL_THRESHOLD [42694,42723]" dest="identifier: GOVERNANCE_PROPOSAL_THRESHOLD [12827,12856]"/>
  <match src="identifier: coupons [97009,97016]" dest="identifier: coupons [36165,36172]"/>
  <match src="(: ( [54886,54887]" dest="(: ( [22735,22736]"/>
  <match src="public: public [97812,97818]" dest="public: public [36968,36974]"/>
  <match src="&quot;: &quot; [19179,19180]" dest="&quot;: &quot; [64032,64033]"/>
  <match src="identifier: value [6783,6788]" dest="identifier: value [7347,7352]"/>
  <match src="): ) [96057,96058]" dest="): ) [35213,35214]"/>
  <match src="bytes32: bytes32 [55126,55133]" dest="bytes32: bytes32 [22975,22982]"/>
  <match src="primitive_type [36153,36160]" dest="primitive_type [54547,54554]"/>
  <match src="call_expression [81818,81853]" dest="call_expression [83991,84047]"/>
  <match src="return_type_definition [5871,5892]" dest="return_type_definition [6435,6456]"/>
  <match src="returns: returns [8978,8985]" dest="returns: returns [9542,9549]"/>
  <match src="call_argument [105354,105360]" dest="call_argument [44510,44516]"/>
  <match src="): ) [7471,7472]" dest="): ) [8035,8036]"/>
  <match src="primitive_type [81431,81438]" dest="primitive_type [83745,83752]"/>
  <match src="primitive_type [31500,31507]" dest="primitive_type [49894,49901]"/>
  <match src="{: { [74488,74489]" dest="{: { [68562,68563]"/>
  <match src="event_paramater [81431,81446]" dest="event_paramater [83745,83759]"/>
  <match src="if_statement [31583,31983]" dest="if_statement [49977,50377]"/>
  <match src="&quot;: &quot; [106570,106571]" dest="&quot;: &quot; [69912,69913]"/>
  <match src="identifier: FOUR_BIT_MASK [36501,36514]" dest="identifier: FOUR_BIT_MASK [54895,54908]"/>
  <match src="): ) [47866,47867]" dest="): ) [17999,18000]"/>
  <match src="type_name [105211,105218]" dest="type_name [44367,44374]"/>
  <match src="type_name [34165,34170]" dest="type_name [52559,52564]"/>
  <match src="parameter [7277,7286]" dest="parameter [7841,7850]"/>
  <match src=".: . [101293,101294]" dest=".: . [40449,40450]"/>
  <match src="state_mutability [93406,93410]" dest="state_mutability [32562,32566]"/>
  <match src="binary_expression [9288,9310]" dest="binary_expression [9852,9874]"/>
  <match src="string_literal [17791,17833]" dest="string_literal [73488,73524]"/>
  <match src="primitive_type [99583,99587]" dest="primitive_type [38739,38743]"/>
  <match src="{: { [45051,45052]" dest="{: { [15184,15185]"/>
  <match src="yul_evm_builtin [87187,87198]" dest="yul_evm_builtin [75697,75708]"/>
  <match src="identifier: candidate [104390,104399]" dest="identifier: candidate [43546,43555]"/>
  <match src="string_literal [19886,19923]" dest="string_literal [65516,65561]"/>
  <match src="string: string [3225,3231]" dest="string: string [3789,3795]"/>
  <match src="): ) [56126,56127]" dest="): ) [23975,23976]"/>
  <match src="(: ( [97362,97363]" dest="(: ( [36518,36519]"/>
  <match src="uint256: uint256 [82982,82989]" dest="uint256: uint256 [73135,73142]"/>
  <match src="identifier: value [7622,7627]" dest="identifier: value [8186,8191]"/>
  <match src="identifier: Decimal [45504,45511]" dest="identifier: Decimal [15637,15644]"/>
  <match src="comment: // ============ Static Functions ============ [5778,5823]" dest="comment: // ============ Static Functions ============ [6342,6387]"/>
  <match src="identifier: IEthic [88891,88897]" dest="identifier: IEthic [30391,30397]"/>
  <match src="&gt;: &gt; [9307,9308]" dest="&gt;: &gt; [9871,9872]"/>
  <match src="identifier: _state [101269,101275]" dest="identifier: _state [40425,40431]"/>
  <match src="): ) [9496,9497]" dest="): ) [10060,10061]"/>
  <match src="(: ( [1929,1930]" dest="(: ( [2493,2494]"/>
  <match src="return: return [94675,94681]" dest="return: return [33831,33837]"/>
  <match src="identifier: Decimal [46128,46135]" dest="identifier: Decimal [16261,16268]"/>
  <match src="parameter [48001,48020]" dest="parameter [18134,18153]"/>
  <match src="function: function [54965,54973]" dest="function: function [22814,22822]"/>
  <match src="identifier: sub [8117,8120]" dest="identifier: sub [8681,8684]"/>
  <match src="return_type_definition [1281,1298]" dest="return_type_definition [1845,1862]"/>
  <match src="struct_member [42116,42131]" dest="struct_member [12249,12264]"/>
  <match src="uint256: uint256 [81448,81455]" dest="uint256: uint256 [79046,79053]"/>
  <match src="parameter [102831,102845]" dest="parameter [41987,42001]"/>
  <match src="call_argument [21996,21997]" dest="call_argument [65102,65103]"/>
  <match src="return: return [35606,35612]" dest="return: return [54000,54006]"/>
  <match src="}: } [8358,8359]" dest="}: } [8922,8923]"/>
  <match src="binary_expression [36168,36174]" dest="binary_expression [54562,54568]"/>
  <match src="call_argument [31660,31940]" dest="call_argument [50054,50334]"/>
  <match src="identifier: D256 [6463,6467]" dest="identifier: D256 [7027,7031]"/>
  <match src="): ) [94554,94555]" dest="): ) [33710,33711]"/>
  <match src="): ) [48429,48430]" dest="): ) [18562,18563]"/>
  <match src="string_literal [19141,19180]" dest="string_literal [64016,64033]"/>
  <match src="identifier: INITIALIZE_INCENTIVE [46601,46621]" dest="identifier: INITIALIZE_INCENTIVE [16734,16754]"/>
  <match src="call_argument [82125,82130]" dest="call_argument [72353,72358]"/>
  <match src="}: } [88837,88838]" dest="}: } [30337,30338]"/>
  <match src="call_argument [83937,83954]" dest="call_argument [81847,81869]"/>
  <match src=",: , [25241,25242]" dest=",: , [80396,80397]"/>
  <match src="identifier: ASCII_ZERO [35978,35988]" dest="identifier: ASCII_ZERO [54372,54382]"/>
  <match src="expression_statement [100553,100619]" dest="expression_statement [39709,39775]"/>
  <match src="identifier: lessDai [81439,81446]" dest="identifier: amount [83753,83759]"/>
  <match src="identifier: balance [100980,100987]" dest="identifier: balance [40136,40143]"/>
  <match src="(: ( [47721,47722]" dest="(: ( [17854,17855]"/>
  <match src="address: address [52833,52840]" dest="address: address [56127,56134]"/>
  <match src="call_argument [35543,35560]" dest="call_argument [53937,53954]"/>
  <match src="primitive_type [104835,104841]" dest="primitive_type [43991,43997]"/>
  <match src="function: function [19684,19692]" dest="function: function [65285,65293]"/>
  <match src="member_expression [96988,97016]" dest="member_expression [36144,36172]"/>
  <match src="]: ] [97027,97028]" dest="]: ] [36183,36184]"/>
  <match src="): ) [95872,95873]" dest="): ) [35028,35029]"/>
  <match src="address: address [89349,89356]" dest="address: address [30849,30856]"/>
  <match src="enum_declaration [87951,88016]" dest="enum_declaration [29451,29516]"/>
  <match src="indexed: indexed [55171,55178]" dest="indexed: indexed [23020,23027]"/>
  <match src="primitive_type [88147,88154]" dest="primitive_type [29647,29654]"/>
  <match src="modifier_invocation [81785,81807]" dest="modifier_invocation [73159,73188]"/>
  <match src="visibility [30840,30848]" dest="visibility [49234,49242]"/>
  <match src="primitive_type [88702,88709]" dest="primitive_type [30202,30209]"/>
  <match src="(: ( [99408,99409]" dest="(: ( [38564,38565]"/>
  <match src="type_name [34141,34146]" dest="type_name [52535,52540]"/>
  <match src=".: . [81891,81892]" dest=".: . [72397,72398]"/>
  <match src="identifier: Account [95261,95268]" dest="identifier: Account [34417,34424]"/>
  <match src="type_name [81391,81398]" dest="type_name [79185,79192]"/>
  <match src="member_expression [102321,102343]" dest="member_expression [41477,41499]"/>
  <match src="type_name [75904,75911]" dest="type_name [56650,56657]"/>
  <match src="}: } [102361,102362]" dest="}: } [41517,41518]"/>
  <match src="identifier: getDaiAddress [44739,44752]" dest="identifier: getDaiAddress [14872,14885]"/>
  <match src="function_definition [63808,63832]" dest="function_definition [28596,28620]"/>
  <match src="identifier: D256 [45474,45478]" dest="identifier: D256 [15607,15611]"/>
  <match src="binary_expression [43186,43199]" dest="binary_expression [13319,13332]"/>
  <match src="member_expression [100118,100132]" dest="member_expression [39274,39288]"/>
  <match src="identifier: oracle [88921,88927]" dest="identifier: oracle [30421,30427]"/>
  <match src="identifier: incrementBalanceOfPhantom [84623,84648]" dest="identifier: incrementBalanceOfCoupons [64213,64238]"/>
  <match src="primitive_type [104283,104290]" dest="primitive_type [43439,43446]"/>
  <match src="return: return [92983,92989]" dest="return: return [32139,32145]"/>
  <match src="primitive_type [44030,44037]" dest="primitive_type [14163,14170]"/>
  <match src="identifier: amount1Out [56246,56256]" dest="identifier: amount1Out [24095,24105]"/>
  <match src="identifier: transferFrom [54755,54767]" dest="identifier: transferFrom [22604,22616]"/>
  <match src="returns: returns [1680,1687]" dest="returns: returns [2244,2251]"/>
  <match src="identifier: b [4004,4005]" dest="identifier: b [4568,4569]"/>
  <match src="primitive_type [71296,71303]" dest="primitive_type [66981,66988]"/>
  <match src="(: ( [82073,82074]" dest="(: ( [73750,73751]"/>
  <match src="}: } [88248,88249]" dest="}: } [29748,29749]"/>
  <match src="comment: // populate the least-significant character [35323,35366]" dest="comment: // populate the least-significant character [53717,53760]"/>
  <match src="]: ] [36350,36351]" dest="]: ] [54744,54745]"/>
  <match src="]: ] [103582,103583]" dest="]: ] [42738,42739]"/>
  <match src="binary_expression [19781,19801]" dest="binary_expression [65403,65423]"/>
  <match src="member_expression [105268,105303]" dest="member_expression [44424,44459]"/>
  <match src="(: ( [102967,102968]" dest="(: ( [42123,42124]"/>
  <match src="memory: memory [45985,45991]" dest="memory: memory [16118,16124]"/>
  <match src="indexed: indexed [13716,13723]" dest="indexed: indexed [26705,26712]"/>
  <match src="is: is [51759,51761]" dest="is: is [27695,27697]"/>
  <match src="type_name [84327,84334]" dest="type_name [62058,62065]"/>
  <match src="): ) [2578,2579]" dest="): ) [3142,3143]"/>
  <match src="uint256: uint256 [3203,3210]" dest="uint256: uint256 [3767,3774]"/>
  <match src="call_expression [6603,6614]" dest="call_expression [7167,7178]"/>
  <match src="identifier: sub [105342,105345]" dest="identifier: sub [44498,44501]"/>
  <match src="identifier: amount [103345,103351]" dest="identifier: amount [42501,42507]"/>
  <match src="}: } [46216,46217]" dest="}: } [16349,16350]"/>
  <match src="type_name [43319,43326]" dest="type_name [13452,13459]"/>
  <match src="external: external [54565,54573]" dest="external: external [22414,22422]"/>
  <match src="call_argument [82837,82872]" dest="call_argument [73003,73041]"/>
  <match src="call_argument [51033,51040]" dest="call_argument [65197,65204]"/>
  <match src=".: . [97459,97460]" dest=".: . [36615,36616]"/>
  <match src="(: ( [45440,45441]" dest="(: ( [15573,15574]"/>
  <match src="identifier: _state [97593,97599]" dest="identifier: _state [36749,36755]"/>
  <match src="call_expression [83729,83743]" dest="call_expression [58652,58666]"/>
  <match src="uint256: uint256 [43840,43847]" dest="uint256: uint256 [13973,13980]"/>
  <match src="primitive_type [88193,88200]" dest="primitive_type [29693,29700]"/>
  <match src="): ) [48334,48335]" dest="): ) [18467,18468]"/>
  <match src="member_expression [103772,103819]" dest="member_expression [42928,42975]"/>
  <match src="event: event [53426,53431]" dest="event: event [61299,61304]"/>
  <match src="(: ( [88101,88102]" dest="(: ( [29601,29602]"/>
  <match src="primitive_type [13708,13715]" dest="primitive_type [26697,26704]"/>
  <match src=".: . [81563,81564]" dest=".: . [72086,72087]"/>
  <match src="state_mutability [30166,30170]" dest="state_mutability [48560,48564]"/>
  <match src="memory: memory [96126,96132]" dest="memory: memory [35282,35288]"/>
  <match src="primitive_type [68738,68745]" dest="primitive_type [63788,63795]"/>
  <match src="parameter [50185,50198]" dest="parameter [73709,73722]"/>
  <match src="internal: internal [45210,45218]" dest="internal: internal [15343,15351]"/>
  <match src="uint256: uint256 [84310,84317]" dest="uint256: uint256 [62034,62041]"/>
  <match src="(: ( [79547,79548]" dest="(: ( [59946,59947]"/>
  <match src=",: , [53504,53505]" dest=",: , [61383,61384]"/>
  <match src="): ) [103825,103826]" dest="): ) [42981,42982]"/>
  <match src="parameter [54735,54739]" dest="parameter [22584,22588]"/>
  <match src="identifier: _state [94440,94446]" dest="identifier: _state [33596,33602]"/>
  <match src="&amp;: &amp; [36361,36362]" dest="&amp;: &amp; [54755,54756]"/>
  <match src="return: return [9901,9907]" dest="return: return [10465,10471]"/>
  <match src="parameter [13449,13463]" dest="parameter [26438,26452]"/>
  <match src="(: ( [83741,83742]" dest="(: ( [58664,58665]"/>
  <match src="identifier: Require [50914,50921]" dest="identifier: Require [71816,71823]"/>
  <match src="yul_assignment [98597,98616]" dest="yul_assignment [37753,37772]"/>
  <match src="&gt;: &gt; [98304,98305]" dest="&gt;: &gt; [37460,37461]"/>
  <match src="address: address [98059,98066]" dest="address: address [37215,37222]"/>
  <match src="{: { [88576,88577]" dest="{: { [30076,30077]"/>
  <match src="}: } [9316,9317]" dest="}: } [9880,9881]"/>
  <match src="return_statement [96538,96586]" dest="return_statement [35694,35742]"/>
  <match src="member_expression [30262,30278]" dest="member_expression [48656,48672]"/>
  <match src="function_definition [2545,2675]" dest="function_definition [3109,3239]"/>
  <match src="comment: /**      * @dev Returns the remaining number of tokens that `spender` will be      * allowed to spend on behalf of `owner` through {transferFrom}. This is      * zero by default.      *      * This value changes when {approve} or {transferFrom} are called.      */ [12041,12305]" dest="comment: /**      * @dev Returns the remaining number of tokens that `spender` will be      * allowed to spend on behalf of `owner` through {transferFrom}. This is      * zero by default.      *      * This value changes when {approve} or {transferFrom} are called.      */ [25030,25294]"/>
  <match src="call_expression [84412,84427]" dest="call_expression [81013,81032]"/>
  <match src=",: , [85144,85145]" dest=",: , [59315,59316]"/>
  <match src="identifier: candidate [105020,105029]" dest="identifier: candidate [44176,44185]"/>
  <match src="is: is [92489,92491]" dest="is: is [31645,31647]"/>
  <match src="): ) [93726,93727]" dest="): ) [32882,32883]"/>
  <match src="call_expression [95188,95195]" dest="call_expression [34344,34351]"/>
  <match src="uint256: uint256 [105448,105455]" dest="uint256: uint256 [44604,44611]"/>
  <match src="event: event [13693,13698]" dest="event: event [26682,26687]"/>
  <match src="comment: /* Oracle */ [41665,41677]" dest="comment: /* Oracle */ [11798,11810]"/>
  <match src="primitive_type [51943,51947]" dest="primitive_type [27879,27883]"/>
  <match src=",: , [104464,104465]" dest=",: , [43620,43621]"/>
  <match src="identifier: errorMessage [3239,3251]" dest="identifier: errorMessage [3803,3815]"/>
  <match src="(: ( [97226,97227]" dest="(: ( [36382,36383]"/>
  <match src="string_literal [2639,2667]" dest="string_literal [3203,3231]"/>
  <match src="{: { [93186,93187]" dest="{: { [32342,32343]"/>
  <match src="array_access [101548,101572]" dest="array_access [40704,40728]"/>
  <match src="parameter [55019,55023]" dest="parameter [22868,22872]"/>
  <match src="type_name [76428,76435]" dest="type_name [57071,57078]"/>
  <match src="primitive_type [33749,33754]" dest="primitive_type [52143,52148]"/>
  <match src="visibility [95331,95337]" dest="visibility [34487,34493]"/>
  <match src="memory: memory [6895,6901]" dest="memory: memory [7459,7465]"/>
  <match src="): ) [85030,85031]" dest="): ) [59426,59427]"/>
  <match src="memory: memory [10015,10021]" dest="memory: memory [10579,10585]"/>
  <match src="visibility [48431,48439]" dest="visibility [18564,18572]"/>
  <match src="uint256: uint256 [88425,88432]" dest="uint256: uint256 [29925,29932]"/>
  <match src="]: ] [104737,104738]" dest="]: ] [43893,43894]"/>
  <match src="primitive_type [35972,35977]" dest="primitive_type [54366,54371]"/>
  <match src="call_argument [8317,8359]" dest="call_argument [8881,8923]"/>
  <match src="variable_declaration_statement [105448,105507]" dest="variable_declaration_statement [44604,44663]"/>
  <match src="{: { [28976,28977]" dest="{: { [47370,47371]"/>
  <match src="member_expression [8890,8897]" dest="member_expression [9454,9461]"/>
  <match src="emit_statement [83754,83815]" dest="emit_statement [73616,73671]"/>
  <match src="identifier: D256 [7251,7255]" dest="identifier: D256 [7815,7819]"/>
  <match src="identifier: a [4060,4061]" dest="identifier: a [4624,4625]"/>
  <match src="primitive_type [97363,97370]" dest="primitive_type [36519,36526]"/>
  <match src="variable_declaration [32976,32995]" dest="variable_declaration [51370,51389]"/>
  <match src="identifier: self [9439,9443]" dest="identifier: self [10003,10007]"/>
  <match src="uint256: uint256 [43229,43236]" dest="uint256: uint256 [13362,13369]"/>
  <match src="type_name [97420,97434]" dest="type_name [36576,36590]"/>
  <match src="expression_statement [49984,50100]" dest="expression_statement [56408,56461]"/>
  <match src="(: ( [96205,96206]" dest="(: ( [35361,35362]"/>
  <match src="call_argument [19141,19180]" dest="call_argument [64016,64033]"/>
  <match src="primitive_type [34704,34711]" dest="primitive_type [53098,53105]"/>
  <match src="identifier: add [7774,7777]" dest="identifier: add [8338,8341]"/>
  <match src="type_name [3214,3221]" dest="type_name [3778,3785]"/>
  <match src="visibility [100901,100909]" dest="visibility [40057,40065]"/>
  <match src="state_mutability [55802,55806]" dest="state_mutability [23651,23655]"/>
  <match src="identifier: numerator [9919,9928]" dest="identifier: numerator [10483,10492]"/>
  <match src=":: : [46029,46030]" dest=":: : [16162,16163]"/>
  <match src="address: address [55458,55465]" dest="address: address [23307,23314]"/>
  <match src="block_statement [34046,34100]" dest="block_statement [52440,52494]"/>
  <match src="uint256: uint256 [74036,74043]" dest="uint256: uint256 [68388,68395]"/>
  <match src="type_name [65767,65774]" dest="type_name [83674,83681]"/>
  <match src="address: address [93024,93031]" dest="address: address [32180,32187]"/>
  <match src="identifier: b [7211,7212]" dest="identifier: b [7775,7776]"/>
  <match src="function_definition [48406,48498]" dest="function_definition [18539,18631]"/>
  <match src="): ) [54382,54383]" dest="): ) [22231,22232]"/>
  <match src="call_argument [28149,28155]" dest="call_argument [46543,46549]"/>
  <match src="identifier: lastReserve [67639,67650]" dest="identifier: balance [73895,73902]"/>
  <match src="comment: /*     Copyright 2018-2019 zOS Global Limited     Copyright 2021 Ethic Money Devs &lt;devs@ethic.money&gt; and Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [89444,90170]" dest="comment: /*     Copyright 2018-2019 zOS Global Limited     Copyright 2021 Ethic Money Devs &lt;devs@ethic.money&gt; and Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [75754,76480]"/>
  <match src="type_name [100224,100231]" dest="type_name [39380,39387]"/>
  <match src="identifier: value [81769,81774]" dest="identifier: value [72267,72272]"/>
  <match src="type_alias [15770,15778]" dest="type_alias [60781,60789]"/>
  <match src="type_name [8987,8991]" dest="type_name [9551,9555]"/>
  <match src="identifier: candidate [104474,104483]" dest="identifier: candidate [43630,43639]"/>
  <match src="primitive_type [45233,45240]" dest="primitive_type [15366,15373]"/>
  <match src="identifier: start [81328,81333]" dest="identifier: start [71630,71635]"/>
  <match src="): ) [94219,94220]" dest="): ) [33375,33376]"/>
  <match src="&quot;: &quot; [2028,2029]" dest="&quot;: &quot; [2592,2593]"/>
  <match src="type_cast_expression [29014,29416]" dest="type_cast_expression [47408,47810]"/>
  <match src="(: ( [95981,95982]" dest="(: ( [35137,35138]"/>
  <match src="user_defined_type [9350,9354]" dest="user_defined_type [9914,9918]"/>
  <match src="call_expression [6588,6615]" dest="call_expression [7152,7179]"/>
  <match src="returns: returns [44877,44884]" dest="returns: returns [15010,15017]"/>
  <match src="(: ( [19798,19799]" dest="(: ( [65420,65421]"/>
  <match src="identifier: self [8106,8110]" dest="identifier: self [8670,8674]"/>
  <match src="string [2028,2063]" dest="string [2592,2627]"/>
  <match src="for: for [34285,34288]" dest="for: for [52679,52682]"/>
  <match src="function_definition [21039,21381]" dest="function_definition [56844,57043]"/>
  <match src="parameter [770,779]" dest="parameter [1334,1343]"/>
  <match src="call_argument [29894,29902]" dest="call_argument [48288,48296]"/>
  <match src="parameter [54782,54792]" dest="parameter [22631,22641]"/>
  <match src="call_argument [53080,53086]" dest="call_argument [65599,65605]"/>
  <match src="return_type_definition [4681,4698]" dest="return_type_definition [5245,5262]"/>
  <match src=",: , [103669,103670]" dest=",: , [42825,42826]"/>
  <match src="number_literal: 40 [35524,35526]" dest="number_literal: 40 [53918,53920]"/>
  <match src="contract_declaration [106500,107312]" dest="contract_declaration [69842,70654]"/>
  <match src=",: , [85652,85653]" dest=",: , [79914,79915]"/>
  <match src="(: ( [96400,96401]" dest="(: ( [35556,35557]"/>
  <match src="identifier: amount [100361,100367]" dest="identifier: amount [39517,39523]"/>
  <match src="member_expression [100920,100935]" dest="member_expression [40076,40091]"/>
  <match src="identifier: FOUR_BIT_MASK [27731,27744]" dest="identifier: FOUR_BIT_MASK [46125,46138]"/>
  <match src="(: ( [74438,74439]" dest="(: ( [68491,68492]"/>
  <match src="primitive_type [67631,67638]" dest="primitive_type [73887,73894]"/>
  <match src="primitive_type [105227,105233]" dest="primitive_type [44383,44389]"/>
  <match src="): ) [94631,94632]" dest="): ) [33787,33788]"/>
  <match src="external: external [81504,81512]" dest="external: external [72029,72037]"/>
  <match src="member_expression [69289,69301]" dest="member_expression [81937,81949]"/>
  <match src="visibility [25797,25804]" dest="visibility [59428,59435]"/>
  <match src="}: } [10191,10192]" dest="}: } [10755,10756]"/>
  <match src="function_body [98389,98453]" dest="function_body [37545,37609]"/>
  <match src="}: } [93344,93345]" dest="}: } [32500,32501]"/>
  <match src="expression_statement [91529,91659]" dest="expression_statement [77839,77969]"/>
  <match src="type_cast_expression [101430,101440]" dest="type_cast_expression [40586,40596]"/>
  <match src="identifier: i [97026,97027]" dest="identifier: i [36182,36183]"/>
  <match src="visibility [105047,105055]" dest="visibility [44203,44211]"/>
  <match src="primitive_type [98343,98350]" dest="primitive_type [37499,37506]"/>
  <match src=".: . [100451,100452]" dest=".: . [39607,39608]"/>
  <match src="identifier: D256 [9227,9231]" dest="identifier: D256 [9791,9795]"/>
  <match src="struct_declaration [88371,88478]" dest="struct_declaration [29871,29978]"/>
  <match src="function_body [9271,9317]" dest="function_body [9835,9881]"/>
  <match src="type_name [34786,34793]" dest="type_name [53180,53187]"/>
  <match src="identifier: b [9304,9305]" dest="identifier: b [9868,9869]"/>
  <match src=",: , [84753,84754]" dest=",: , [81733,81734]"/>
  <match src="function: function [33770,33778]" dest="function: function [52164,52172]"/>
  <match src="yul_path [87179,87183]" dest="yul_path [75689,75693]"/>
  <match src="identifier: amount [52924,52930]" dest="identifier: amount [56201,56207]"/>
  <match src="number_literal: 1 [83790,83791]" dest="number_literal: 1 [73652,73653]"/>
  <match src="(: ( [28996,28997]" dest="(: ( [47390,47391]"/>
  <match src="for_statement [36148,36550]" dest="for_statement [54542,54944]"/>
  <match src="type_name [7328,7332]" dest="type_name [7892,7896]"/>
  <match src="internal: internal [7837,7845]" dest="internal: internal [8401,8409]"/>
  <match src=".: . [47556,47557]" dest=".: . [17689,17690]"/>
  <match src="identifier: pool [88945,88949]" dest="identifier: pool [30445,30449]"/>
  <match src="interface: interface [54028,54037]" dest="interface: interface [21877,21886]"/>
  <match src="visibility [22368,22376]" dest="visibility [71797,71805]"/>
  <match src="(: ( [56111,56112]" dest="(: ( [23960,23961]"/>
  <match src="identifier: value [8721,8726]" dest="identifier: value [9285,9290]"/>
  <match src="(: ( [29603,29604]" dest="(: ( [47997,47998]"/>
  <match src="state_mutability [44984,44988]" dest="state_mutability [15117,15121]"/>
  <match src="return_type_definition [54244,54267]" dest="return_type_definition [22093,22116]"/>
  <match src="constant: constant [43640,43648]" dest="constant: constant [13773,13781]"/>
  <match src="(: ( [82936,82937]" dest="(: ( [74198,74199]"/>
  <match src="type_name [88794,88798]" dest="type_name [30294,30298]"/>
  <match src="number_literal: 1 [53164,53165]" dest="number_literal: 1 [65809,65810]"/>
  <match src=".: . [107137,107138]" dest=".: . [70479,70480]"/>
  <match src="identifier: epochs [96552,96558]" dest="identifier: epochs [35708,35714]"/>
  <match src="(: ( [29737,29738]" dest="(: ( [48131,48132]"/>
  <match src="pure: pure [46908,46912]" dest="pure: pure [17041,17045]"/>
  <match src="(: ( [104750,104751]" dest="(: ( [43906,43907]"/>
  <match src="call_argument [28518,28522]" dest="call_argument [46912,46916]"/>
  <match src="identifier: totalRedeemable [93992,94007]" dest="identifier: totalRedeemable [33148,33163]"/>
  <match src="member_expression [94166,94180]" dest="member_expression [33322,33336]"/>
  <match src="parameter [64691,64707]" dest="parameter [79257,79274]"/>
  <match src="member_expression [100581,100595]" dest="member_expression [39737,39751]"/>
  <match src="): ) [81687,81688]" dest="): ) [57456,57457]"/>
  <match src="[: [ [102247,102248]" dest="[: [ [41403,41404]"/>
  <match src="return: return [46323,46329]" dest="return: return [16456,16462]"/>
  <match src="identifier: totalNet [94210,94218]" dest="identifier: totalNet [33366,33374]"/>
  <match src="return: return [5907,5913]" dest="return: return [6471,6477]"/>
  <match src="identifier: BOOTSTRAPPING_PRICE [41548,41567]" dest="identifier: BOOTSTRAPPING_PRICE [11681,11700]"/>
  <match src="member_expression [93445,93466]" dest="member_expression [32601,32622]"/>
  <match src="return_statement [45877,45906]" dest="return_statement [16010,16039]"/>
  <match src="parameter [9082,9095]" dest="parameter [9646,9659]"/>
  <match src="primitive_type [104617,104624]" dest="primitive_type [43773,43780]"/>
  <match src="internal: internal [45443,45451]" dest="internal: internal [15576,15584]"/>
  <match src="visibility [84961,84969]" dest="visibility [65376,65384]"/>
  <match src="&lt;=: &lt;= [97256,97258]" dest="&lt;=: &lt;= [36412,36414]"/>
  <match src="(: ( [2602,2603]" dest="(: ( [3166,3167]"/>
  <match src="call_expression [79440,79493]" dest="call_expression [83873,83932]"/>
  <match src="return_statement [93635,93663]" dest="return_statement [32791,32819]"/>
  <match src="if: if [94611,94613]" dest="if: if [33767,33769]"/>
  <match src="identifier: self [9658,9662]" dest="identifier: self [10222,10226]"/>
  <match src="return: return [47878,47884]" dest="return: return [18011,18017]"/>
  <match src="if: if [105589,105591]" dest="if: if [44745,44747]"/>
  <match src="(: ( [56081,56082]" dest="(: ( [23930,23931]"/>
  <match src="type_name [95794,95801]" dest="type_name [34950,34957]"/>
  <match src="struct_member [89160,89179]" dest="struct_member [30660,30679]"/>
  <match src="array_access [102492,102531]" dest="array_access [41648,41687]"/>
  <match src="function: function [3972,3980]" dest="function: function [4536,4544]"/>
  <match src="): ) [45751,45752]" dest="): ) [15884,15885]"/>
  <match src="): ) [6617,6618]" dest="): ) [7181,7182]"/>
  <match src="function: function [86624,86632]" dest="function: function [75134,75142]"/>
  <match src="&quot;: &quot; [69365,69366]" dest="&quot;: &quot; [73573,73574]"/>
  <match src="call_argument [17697,17703]" dest="call_argument [60004,60010]"/>
  <match src="user_defined_type [8003,8007]" dest="user_defined_type [8567,8571]"/>
  <match src="identifier: file [31010,31014]" dest="identifier: file [49404,49408]"/>
  <match src="address: address [11976,11983]" dest="address: address [24965,24972]"/>
  <match src="member_expression [101009,101023]" dest="member_expression [40165,40179]"/>
  <match src="{: { [44895,44896]" dest="{: { [15028,15029]"/>
  <match src="): ) [95359,95360]" dest="): ) [34515,34516]"/>
  <match src="): ) [96807,96808]" dest="): ) [35963,35964]"/>
  <match src="call_expression [50914,51006]" dest="call_expression [65573,65660]"/>
  <match src="identifier: D256 [8949,8953]" dest="identifier: D256 [9513,9517]"/>
  <match src="type_alias [5579,5587]" dest="type_alias [6143,6151]"/>
  <match src="): ) [81942,81943]" dest="): ) [72451,72452]"/>
  <match src="&quot;: &quot; [20516,20517]" dest="&quot;: &quot; [64514,64515]"/>
  <match src="identifier: z [36533,36534]" dest="identifier: z [54927,54928]"/>
  <match src="function: function [94095,94103]" dest="function: function [33251,33259]"/>
  <match src=".: . [102302,102303]" dest=".: . [41458,41459]"/>
  <match src="call_argument [24991,25024]" dest="call_argument [79603,79632]"/>
  <match src="state_mutability [1675,1679]" dest="state_mutability [2239,2243]"/>
  <match src="member_expression [6588,6602]" dest="member_expression [7152,7166]"/>
  <match src="identifier: msg [81835,81838]" dest="identifier: msg [84003,84006]"/>
  <match src="event: event [81377,81382]" dest="event: event [79172,79177]"/>
  <match src="primitive_type [71269,71276]" dest="primitive_type [67023,67030]"/>
  <match src="expression_statement [1309,1339]" dest="expression_statement [1873,1903]"/>
  <match src="(: ( [44885,44886]" dest="(: ( [15018,15019]"/>
  <match src="pure: pure [790,794]" dest="pure: pure [1354,1358]"/>
  <match src="primitive_type [98246,98250]" dest="primitive_type [37402,37406]"/>
  <match src="struct: struct [88022,88028]" dest="struct: struct [29522,29528]"/>
  <match src="type_name [99431,99438]" dest="type_name [38587,38594]"/>
  <match src="parameter [51789,51803]" dest="parameter [27725,27739]"/>
  <match src="call_argument [76349,76355]" dest="call_argument [65206,65212]"/>
  <match src="): ) [5891,5892]" dest="): ) [6455,6456]"/>
  <match src="type_name [45233,45240]" dest="type_name [15366,15373]"/>
  <match src="]: ] [103313,103314]" dest="]: ] [42469,42470]"/>
  <match src="function_body [105438,105693]" dest="function_body [44594,44849]"/>
  <match src="number_literal: 0 [1959,1960]" dest="number_literal: 0 [2523,2524]"/>
  <match src="primitive_type [84327,84334]" dest="primitive_type [62058,62065]"/>
  <match src="primitive_type [100369,100375]" dest="primitive_type [39525,39531]"/>
  <match src="): ) [68572,68573]" dest="): ) [68872,68873]"/>
  <match src="visibility [103691,103699]" dest="visibility [42847,42855]"/>
  <match src="identifier: account [95527,95534]" dest="identifier: account [34683,34690]"/>
  <match src="parameter [79026,79033]" dest="parameter [57531,57538]"/>
  <match src="call_argument [47600,47642]" dest="call_argument [17733,17775]"/>
  <match src="type_name [5880,5884]" dest="type_name [6444,6448]"/>
  <match src="identifier: sender [13457,13463]" dest="identifier: sender [26446,26452]"/>
  <match src="identifier: decrementBalanceOf [101141,101159]" dest="identifier: decrementBalanceOf [40297,40315]"/>
  <match src="type_name [55408,55412]" dest="type_name [23257,23261]"/>
  <match src=".: . [68484,68485]" dest=".: . [68821,68822]"/>
  <match src="state_variable_declaration [5650,5681]" dest="state_variable_declaration [6214,6245]"/>
  <match src="return: return [9422,9428]" dest="return: return [9986,9992]"/>
  <match src="returns: returns [56103,56110]" dest="returns: returns [23952,23959]"/>
  <match src="): ) [102471,102472]" dest="): ) [41627,41628]"/>
  <match src="identifier: sender [84209,84215]" dest="identifier: sender [79387,79393]"/>
  <match src="(: ( [84425,84426]" dest="(: ( [81021,81022]"/>
  <match src="identifier: owner [13955,13960]" dest="identifier: owner [26944,26949]"/>
  <match src="primitive_type [71048,71055]" dest="primitive_type [71750,71757]"/>
  <match src="): ) [81534,81535]" dest="): ) [79335,79336]"/>
  <match src="visibility [94119,94125]" dest="visibility [33275,33281]"/>
  <match src="return_statement [47190,47221]" dest="return_statement [17323,17354]"/>
  <match src="identifier: IUniswapV2Pair [79522,79536]" dest="identifier: ethic [59934,59939]"/>
  <match src="=: = [41568,41569]" dest="=: = [11701,11702]"/>
  <match src="return_type_definition [7859,7880]" dest="return_type_definition [8423,8444]"/>
  <match src="event_paramater [25705,25728]" dest="event_paramater [61132,61155]"/>
  <match src="false [99606,99611]" dest="false [38762,38767]"/>
  <match src="primitive_type [100077,100083]" dest="primitive_type [39233,39239]"/>
  <match src="(: ( [81048,81049]" dest="(: ( [71480,71481]"/>
  <match src="identifier: require [25923,25930]" dest="identifier: decrementRejectFor [80221,80239]"/>
  <match src="=: = [98543,98544]" dest="=: = [37699,37700]"/>
  <match src="member_expression [50010,50036]" dest="member_expression [56408,56428]"/>
  <match src="emit: emit [81979,81983]" dest="emit: emit [72463,72467]"/>
  <match src="contract: contract [89398,89406]" dest="contract: contract [30898,30906]"/>
  <match src="uint256: uint256 [94031,94038]" dest="uint256: uint256 [33187,33194]"/>
  <match src="identifier: candidate [98351,98360]" dest="identifier: candidate [37507,37516]"/>
  <match src="): ) [82944,82945]" dest="): ) [74206,74207]"/>
  <match src="type_name [33798,33805]" dest="type_name [52192,52199]"/>
  <match src="identifier: _state [96687,96693]" dest="identifier: _state [35843,35849]"/>
  <match src="identifier: Claim [81160,81165]" dest="identifier: Incentivization [83704,83719]"/>
  <match src="returns: returns [8269,8276]" dest="returns: returns [8833,8840]"/>
  <match src="number_literal: 1 [7573,7574]" dest="number_literal: 1 [8137,8138]"/>
  <match src="uint256: uint256 [47171,47178]" dest="uint256: uint256 [17304,17311]"/>
  <match src="identifier: payloadB [29335,29343]" dest="identifier: payloadB [47729,47737]"/>
  <match src="call_expression [46166,46218]" dest="call_expression [16299,16351]"/>
  <match src="visibility [48238,48246]" dest="visibility [18371,18379]"/>
  <match src="parameter [54824,54828]" dest="parameter [22673,22677]"/>
  <match src="identifier: D256 [8625,8629]" dest="identifier: D256 [9189,9193]"/>
  <match src="identifier: GOVERNANCE_SUPER_MAJORITY [46351,46376]" dest="identifier: GOVERNANCE_SUPER_MAJORITY [16484,16509]"/>
  <match src=".: . [95047,95048]" dest=".: . [34203,34204]"/>
  <match src="call_expression [29884,29903]" dest="call_expression [48278,48297]"/>
  <match src="type_name [79812,79816]" dest="type_name [62835,62839]"/>
  <match src="): ) [51866,51867]" dest="): ) [27802,27803]"/>
  <match src="{: { [95904,95905]" dest="{: { [35060,35061]"/>
  <match src="type_name [16990,16997]" dest="type_name [59735,59742]"/>
  <match src="call_argument [53298,53304]" dest="call_argument [65873,65879]"/>
  <match src="call_struct_argument [7909,7939]" dest="call_struct_argument [8473,8503]"/>
  <match src="]: ] [93111,93112]" dest="]: ] [32267,32268]"/>
  <match src="parameter [35714,35726]" dest="parameter [54108,54120]"/>
  <match src="call_argument [8515,8563]" dest="call_argument [9079,9127]"/>
  <match src=".: . [8758,8759]" dest=".: . [9322,9323]"/>
  <match src="identifier: add [78089,78092]" dest="identifier: add [61796,61799]"/>
  <match src=".: . [94464,94465]" dest=".: . [33620,33621]"/>
  <match src="parameter [18302,18320]" dest="parameter [20035,20052]"/>
  <match src="function_definition [5945,6057]" dest="function_definition [6509,6621]"/>
  <match src="identifier: candidates [105073,105083]" dest="identifier: candidates [44229,44239]"/>
  <match src="): ) [54592,54593]" dest="): ) [22441,22442]"/>
  <match src="member_expression [100955,100991]" dest="member_expression [40111,40147]"/>
  <match src="identifier: reason [101207,101213]" dest="identifier: reason [40363,40369]"/>
  <match src="internal: internal [100901,100909]" dest="internal: internal [40057,40065]"/>
  <match src="): ) [69383,69384]" dest="): ) [73604,73605]"/>
  <match src="view: view [56042,56046]" dest="view: view [23891,23895]"/>
  <match src="primitive_type [81489,81496]" dest="primitive_type [72014,72021]"/>
  <match src="==: == [94877,94879]" dest="==: == [34033,34035]"/>
  <match src="return_type_definition [97958,97975]" dest="return_type_definition [37114,37131]"/>
  <match src="function_body [98108,98179]" dest="function_body [37264,37335]"/>
  <match src="private: private [15826,15833]" dest="private: private [59916,59923]"/>
  <match src="): ) [78022,78023]" dest="): ) [61509,61510]"/>
  <match src="]: ] [34526,34527]" dest="]: ] [52920,52921]"/>
  <match src="call_argument [30469,30488]" dest="call_argument [48863,48882]"/>
  <match src="member_expression [31660,31676]" dest="member_expression [50054,50070]"/>
  <match src=".: . [100416,100417]" dest=".: . [39572,39573]"/>
  <match src=".: . [103491,103492]" dest=".: . [42647,42648]"/>
  <match src="]: ] [94955,94956]" dest="]: ] [34111,34112]"/>
  <match src="visibility [98225,98231]" dest="visibility [37381,37387]"/>
  <match src="primitive_type [56112,56116]" dest="primitive_type [23961,23965]"/>
  <match src="call_expression [83424,83467]" dest="call_expression [73958,74001]"/>
  <match src="): ) [79560,79561]" dest="): ) [59959,59960]"/>
  <match src="user_defined_type [7071,7075]" dest="user_defined_type [7635,7639]"/>
  <match src="}: } [4768,4769]" dest="}: } [5332,5333]"/>
  <match src="type_name [55047,55054]" dest="type_name [22896,22903]"/>
  <match src="identifier: sub [8154,8157]" dest="identifier: sub [8718,8721]"/>
  <match src="identifier: newImplementation [91080,91097]" dest="identifier: newImplementation [77390,77407]"/>
  <match src="visibility [7297,7305]" dest="visibility [7861,7869]"/>
  <match src="(: ( [45597,45598]" dest="(: ( [15730,15731]"/>
  <match src="): ) [74101,74102]" dest="): ) [63164,63165]"/>
  <match src="member_expression [7931,7938]" dest="member_expression [8495,8502]"/>
  <match src="expression_statement [99961,100019]" dest="expression_statement [39117,39175]"/>
  <match src="public: public [95618,95624]" dest="public: public [34774,34780]"/>
  <match src="call_expression [102130,102181]" dest="call_expression [41286,41337]"/>
  <match src="identifier: D256 [9368,9372]" dest="identifier: D256 [9932,9936]"/>
  <match src="identifier: sender [11042,11048]" dest="identifier: sender [65740,65746]"/>
  <match src="identifier: that [85058,85062]" dest="identifier: that [59206,59210]"/>
  <match src="returns: returns [7499,7506]" dest="returns: returns [8063,8070]"/>
  <match src="internal: internal [1267,1275]" dest="internal: internal [1831,1839]"/>
  <match src="view: view [55005,55009]" dest="view: view [22854,22858]"/>
  <match src="identifier: D256 [8167,8171]" dest="identifier: D256 [8731,8735]"/>
  <match src="memory: memory [47860,47866]" dest="memory: memory [17993,17999]"/>
  <match src=",: , [83776,83777]" dest=",: , [73638,73639]"/>
  <match src="event_definition [54059,54134]" dest="event_definition [21908,21983]"/>
  <match src="primitive_type [54664,54668]" dest="primitive_type [22513,22517]"/>
  <match src=".: . [103235,103236]" dest=".: . [42391,42392]"/>
  <match src="primitive_type [54435,54439]" dest="primitive_type [22284,22288]"/>
  <match src="user_defined_type [96102,96125]" dest="user_defined_type [35258,35281]"/>
  <match src="call_argument [19861,19884]" dest="call_argument [65491,65514]"/>
  <match src="uint256: uint256 [33798,33805]" dest="uint256: uint256 [52192,52199]"/>
  <match src=".: . [89267,89268]" dest=".: . [30767,30768]"/>
  <match src="type_name [94566,94573]" dest="type_name [33722,33729]"/>
  <match src="view: view [86670,86674]" dest="view: view [75180,75184]"/>
  <match src="}: } [36579,36580]" dest="}: } [54973,54974]"/>
  <match src="=: = [103945,103946]" dest="=: = [43101,43102]"/>
  <match src="): ) [84149,84150]" dest="): ) [80981,80982]"/>
  <match src="primitive_type [105393,105400]" dest="primitive_type [44549,44556]"/>
  <match src=",: , [13728,13729]" dest=",: , [26717,26718]"/>
  <match src="identifier: balance [101642,101649]" dest="identifier: balance [40798,40805]"/>
  <match src="identifier: reason [28305,28311]" dest="identifier: reason [46699,46705]"/>
  <match src="identifier: COMMA [32523,32528]" dest="identifier: COMMA [50917,50922]"/>
  <match src="): ) [33413,33414]" dest="): ) [51807,51808]"/>
  <match src="primitive_type [44778,44785]" dest="primitive_type [14911,14918]"/>
  <match src="uint: uint [55433,55437]" dest="uint: uint [23282,23286]"/>
  <match src="identifier: i [36176,36177]" dest="identifier: i [54570,54571]"/>
  <match src="call_argument [84649,84659]" dest="call_argument [64239,64249]"/>
  <match src="(: ( [66264,66265]" dest="(: ( [82316,82317]"/>
  <match src="&gt;=: &gt;= [95196,95198]" dest="&gt;=: &gt;= [34352,34354]"/>
  <match src="state_mutability [7850,7854]" dest="state_mutability [8414,8418]"/>
  <match src="{: { [10111,10112]" dest="{: { [10675,10676]"/>
  <match src="comment: /**      * Returns whether the target address is a contract      * @dev This function will return false if invoked during the constructor of a contract,      * as the code is not actually created until after the constructor finishes.      * @param account address of the account to check      * @return whether the target address is a contract      */ [86268,86619]" dest="comment: /**      * Returns whether the target address is a contract      * @dev This function will return false if invoked during the constructor of a contract,      * as the code is not actually created until after the constructor finishes.      * @param account address of the account to check      * @return whether the target address is a contract      */ [74778,75129]"/>
  <match src="identifier: value [81657,81662]" dest="identifier: value [72180,72185]"/>
  <match src="string_literal [426,455]" dest="string_literal [990,1019]"/>
  <match src="identifier: must [28385,28389]" dest="identifier: must [46779,46783]"/>
  <match src="identifier: ratio [68513,68518]" dest="identifier: ratio [82701,82706]"/>
  <match src="call_argument [418,424]" dest="call_argument [982,988]"/>
  <match src="state_mutability [55579,55583]" dest="state_mutability [23428,23432]"/>
  <match src="parameter [16059,16066]" dest="parameter [19860,19867]"/>
  <match src="call_argument [73251,73255]" dest="call_argument [59250,59254]"/>
  <match src="member_expression [91537,91575]" dest="member_expression [77847,77885]"/>
  <match src="): ) [48236,48237]" dest="): ) [18369,18370]"/>
  <match src="primitive_type [77507,77514]" dest="primitive_type [62577,62584]"/>
  <match src="(: ( [25930,25931]" dest="(: ( [80239,80240]"/>
  <match src="type_alias [80759,80767]" dest="type_alias [71392,71400]"/>
  <match src="variable_declaration_statement [33980,33998]" dest="variable_declaration_statement [52374,52392]"/>
  <match src="return_statement [97446,97497]" dest="return_statement [36602,36653]"/>
  <match src="identifier: reason [91252,91258]" dest="identifier: reason [77562,77568]"/>
  <match src="primitive_type [44160,44167]" dest="primitive_type [14293,14300]"/>
  <match src=".: . [6598,6599]" dest=".: . [7162,7163]"/>
  <match src="function: function [97341,97349]" dest="function: function [36497,36505]"/>
  <match src="function_definition [77989,78136]" dest="function_definition [61495,61902]"/>
  <match src="call_argument [53208,53214]" dest="call_argument [65853,65859]"/>
  <match src="identifier: sender [82764,82770]" dest="identifier: sender [74109,74115]"/>
  <match src="comment: /**  * Based off of, and designed to interface with, openzeppelin/upgrades package  */ [90171,90257]" dest="comment: /**  * Based off of, and designed to interface with, openzeppelin/upgrades package  */ [76481,76567]"/>
  <match src="external: external [56033,56041]" dest="external: external [23882,23890]"/>
  <match src="internal: internal [75920,75928]" dest="internal: internal [56666,56674]"/>
  <match src="(: ( [91109,91110]" dest="(: ( [77419,77420]"/>
  <match src=".: . [6788,6789]" dest=".: . [7352,7353]"/>
  <match src="primitive_type [76147,76154]" dest="primitive_type [84322,84329]"/>
  <match src="returns: returns [93053,93060]" dest="returns: returns [32209,32216]"/>
  <match src="&quot;: &quot; [50776,50777]" dest="&quot;: &quot; [56804,56805]"/>
  <match src="user_defined_type [8278,8282]" dest="user_defined_type [8842,8846]"/>
  <match src="primitive_type [94828,94835]" dest="primitive_type [33984,33991]"/>
  <match src="identifier: i [96938,96939]" dest="identifier: i [36094,36095]"/>
  <match src="call_argument [28664,28683]" dest="call_argument [47058,47077]"/>
  <match src="identifier: value [10104,10109]" dest="identifier: value [10668,10673]"/>
  <match src="call_argument [82931,82945]" dest="call_argument [74193,74207]"/>
  <match src="comment: // ============ Self Functions ============ [6392,6435]" dest="comment: // ============ Self Functions ============ [6956,6999]"/>
  <match src="primitive_type [95352,95359]" dest="primitive_type [34508,34515]"/>
  <match src="memory: memory [8685,8691]" dest="memory: memory [9249,9255]"/>
  <match src="member_expression [103448,103460]" dest="member_expression [42604,42616]"/>
  <match src="(: ( [107288,107289]" dest="(: ( [70630,70631]"/>
  <match src="call_expression [105534,105553]" dest="call_expression [44690,44709]"/>
  <match src="identifier: symbol [54282,54288]" dest="identifier: symbol [22131,22137]"/>
  <match src="type_name [1217,1224]" dest="type_name [1781,1788]"/>
  <match src="identifier: a [4755,4756]" dest="identifier: a [5319,5320]"/>
  <match src="identifier: _state [101813,101819]" dest="identifier: _state [40969,40975]"/>
  <match src="}: } [36900,36901]" dest="}: } [55294,55295]"/>
  <match src="identifier: accounts [101276,101284]" dest="identifier: accounts [40432,40440]"/>
  <match src="(: ( [46799,46800]" dest="(: ( [16932,16933]"/>
  <match src="member_expression [8121,8128]" dest="member_expression [8685,8692]"/>
  <match src="(: ( [91079,91080]" dest="(: ( [77389,77390]"/>
  <match src="returns: returns [93916,93923]" dest="returns: returns [33072,33079]"/>
  <match src="call_expression [102646,102706]" dest="call_expression [41802,41862]"/>
  <match src="primitive_type [94792,94799]" dest="primitive_type [33948,33955]"/>
  <match src="(: ( [92769,92770]" dest="(: ( [31925,31926]"/>
  <match src="variable_declaration_statement [34007,34022]" dest="variable_declaration_statement [52401,52416]"/>
  <match src="user_defined_type [10010,10014]" dest="user_defined_type [10574,10578]"/>
  <match src="primitive_type [55079,55083]" dest="primitive_type [22928,22932]"/>
  <match src="[: [ [101597,101598]" dest="[: [ [40753,40754]"/>
  <match src="=: = [91682,91683]" dest="=: = [77992,77993]"/>
  <match src="return_statement [97852,97896]" dest="return_statement [37008,37052]"/>
  <match src="string [19886,19923]" dest="string [65516,65561]"/>
  <match src="primitive_type [79136,79140]" dest="primitive_type [62968,62972]"/>
  <match src="type_name [30737,30744]" dest="type_name [49131,49138]"/>
  <match src="function_body [97109,97160]" dest="function_body [36265,36316]"/>
  <match src=",: , [50726,50727]" dest=",: , [63984,63985]"/>
  <match src="): ) [83791,83792]" dest="): ) [73653,73654]"/>
  <match src=",: , [30116,30117]" dest=",: , [48510,48511]"/>
  <match src="returns: returns [92864,92871]" dest="returns: returns [32020,32027]"/>
  <match src="identifier: epochs [102839,102845]" dest="identifier: epochs [41995,42001]"/>
  <match src="visibility [48632,48640]" dest="visibility [18765,18773]"/>
  <match src="visibility [54864,54872]" dest="visibility [22713,22721]"/>
  <match src="function_definition [100840,101126]" dest="function_definition [39996,40282]"/>
  <match src="call_expression [31308,31327]" dest="call_expression [49702,49721]"/>
  <match src="private: private [67526,67533]" dest="private: private [21611,21618]"/>
  <match src="visibility [15900,15907]" dest="visibility [20083,20090]"/>
  <match src="(: ( [56318,56319]" dest="(: ( [24167,24168]"/>
  <match src="bytes2: bytes2 [27629,27635]" dest="bytes2: bytes2 [46023,46029]"/>
  <match src="member_expression [102492,102507]" dest="member_expression [41648,41663]"/>
  <match src="call_argument [82943,82944]" dest="call_argument [74205,74206]"/>
  <match src="(: ( [97926,97927]" dest="(: ( [37082,37083]"/>
  <match src="): ) [51947,51948]" dest="): ) [27883,27884]"/>
  <match src=".: . [103730,103731]" dest=".: . [42886,42887]"/>
  <match src="primitive_type [55269,55273]" dest="primitive_type [23118,23122]"/>
  <match src="binary_expression [36767,36785]" dest="binary_expression [55161,55179]"/>
  <match src="private: private [42978,42985]" dest="private: private [13111,13118]"/>
  <match src="constant: constant [42986,42994]" dest="constant: constant [13119,13127]"/>
  <match src="address: address [93271,93278]" dest="address: address [32427,32434]"/>
  <match src="yul_assignment [87179,87207]" dest="yul_assignment [75689,75717]"/>
  <match src="identifier: account [102882,102889]" dest="identifier: account [42038,42045]"/>
  <match src="type_name [27629,27635]" dest="type_name [46023,46029]"/>
  <match src="primitive_type [71024,71031]" dest="primitive_type [66842,66849]"/>
  <match src="returns: returns [6297,6304]" dest="returns: returns [6861,6868]"/>
  <match src="return_statement [94925,94972]" dest="return_statement [34081,34128]"/>
  <match src="variable_declaration_statement [74373,74426]" dest="variable_declaration_statement [68297,68370]"/>
  <match src="(: ( [73978,73979]" dest="(: ( [68188,68189]"/>
  <match src="returns: returns [55010,55017]" dest="returns: returns [22859,22866]"/>
  <match src="=: = [74263,74264]" dest="=: = [82691,82692]"/>
  <match src="return: return [94647,94653]" dest="return: return [33803,33809]"/>
  <match src="type_name [1689,1696]" dest="type_name [2253,2260]"/>
  <match src="identifier: D256 [65485,65489]" dest="identifier: D256 [66787,66791]"/>
  <match src="expression_statement [19935,20027]" dest="expression_statement [57374,57433]"/>
  <match src="call_argument [2633,2634]" dest="call_argument [3197,3198]"/>
  <match src="uint256: uint256 [103172,103179]" dest="uint256: uint256 [42328,42335]"/>
  <match src="identifier: add [100007,100010]" dest="identifier: add [39163,39166]"/>
  <match src="parameter [105211,105225]" dest="parameter [44367,44381]"/>
  <match src="external: external [54230,54238]" dest="external: external [22079,22087]"/>
  <match src="identifier: _state [93642,93648]" dest="identifier: _state [32798,32804]"/>
  <match src="): ) [73278,73279]" dest="): ) [59291,59292]"/>
  <match src="type_name [98099,98106]" dest="type_name [37255,37262]"/>
  <match src="string [50879,50893]" dest="string [56527,56569]"/>
  <match src="identifier: newPhantom [82482,82492]" dest="identifier: cappedNewDebt [67612,67625]"/>
  <match src=",: , [102449,102450]" dest=",: , [41605,41606]"/>
  <match src="identifier: value [8881,8886]" dest="identifier: value [9445,9450]"/>
  <match src="identifier: Require [85276,85283]" dest="identifier: Require [81185,81192]"/>
  <match src=",: , [7993,7994]" dest=",: , [8557,8558]"/>
  <match src="identifier: initializeCouponsExpiration [103628,103655]" dest="identifier: initializeCouponsExpiration [42784,42811]"/>
  <match src="identifier: payloadC [32640,32648]" dest="identifier: payloadC [51034,51042]"/>
  <match src="identifier: sender [55247,55253]" dest="identifier: sender [23096,23102]"/>
  <match src="primitive_type [89011,89018]" dest="primitive_type [30511,30518]"/>
  <match src="}: } [50105,50106]" dest="}: } [56601,56602]"/>
  <match src="uint256: uint256 [89109,89116]" dest="uint256: uint256 [30609,30616]"/>
  <match src="function_body [49974,50106]" dest="function_body [56398,56602]"/>
  <match src="identifier: getBootstrappingPeriod [45303,45325]" dest="identifier: getBootstrappingPeriod [15436,15458]"/>
  <match src="=: = [101353,101354]" dest="=: = [40509,40510]"/>
  <match src="returns: returns [99574,99581]" dest="returns: returns [38730,38737]"/>
  <match src="identifier: amount [76533,76539]" dest="identifier: amount [59844,59850]"/>
  <match src="}: } [103612,103613]" dest="}: } [42768,42769]"/>
  <match src="call_argument [29335,29343]" dest="call_argument [47729,47737]"/>
  <match src="uint256: uint256 [94414,94421]" dest="uint256: uint256 [33570,33577]"/>
  <match src="string [107220,107241]" dest="string [70562,70583]"/>
  <match src="pure: pure [39843,39847]" dest="pure: pure [21329,21333]"/>
  <match src="internal: internal [30840,30848]" dest="internal: internal [49234,49242]"/>
  <match src="member_expression [79465,79475]" dest="member_expression [83885,83895]"/>
  <match src="call_expression [94851,94876]" dest="call_expression [34007,34032]"/>
  <match src="return: return [98262,98268]" dest="return: return [37418,37424]"/>
  <match src="expression_statement [102866,102924]" dest="expression_statement [42022,42080]"/>
  <match src="): ) [32572,32573]" dest="): ) [50966,50967]"/>
  <match src="number_literal: 2 [41649,41650]" dest="number_literal: 2 [11782,11783]"/>
  <match src="type_name [51911,51918]" dest="type_name [27847,27854]"/>
  <match src=".: . [102722,102723]" dest=".: . [41878,41879]"/>
  <match src="identifier: _state [96988,96994]" dest="identifier: _state [36144,36150]"/>
  <match src="identifier: owner [95681,95686]" dest="identifier: owner [34837,34842]"/>
  <match src="inheritance_specifier [108051,108062]" dest="inheritance_specifier [78822,78833]"/>
  <match src="identifier: a [6185,6186]" dest="identifier: a [6749,6750]"/>
  <match src="primitive_type [53468,53475]" dest="primitive_type [61342,61349]"/>
  <match src="identifier: mul [7058,7061]" dest="identifier: mul [7622,7625]"/>
  <match src="comment: // allocate the string [34110,34132]" dest="comment: // allocate the string [52504,52526]"/>
  <match src="number_literal: 2 [9450,9451]" dest="number_literal: 2 [10014,10015]"/>
  <match src="variable_declaration_statement [68477,68574]" dest="variable_declaration_statement [68813,68874]"/>
  <match src="member_expression [102534,102566]" dest="member_expression [41690,41722]"/>
  <match src=".: . [97731,97732]" dest=".: . [36887,36888]"/>
  <match src="function: function [7409,7417]" dest="function: function [7973,7981]"/>
  <match src="contract_declaration [15724,22547]" dest="contract_declaration [60731,66003]"/>
  <match src="(: ( [91015,91016]" dest="(: ( [77325,77326]"/>
  <match src="return_statement [46941,46971]" dest="return_statement [17074,17104]"/>
  <match src="primitive_type [33433,33440]" dest="primitive_type [51827,51834]"/>
  <match src="internal: internal [1666,1674]" dest="internal: internal [2230,2238]"/>
  <match src="identifier: TREASURY_INCENTIVE [46826,46844]" dest="identifier: TREASURY_INCENTIVE [16959,16977]"/>
  <match src="identifier: must [30877,30881]" dest="identifier: must [49271,49275]"/>
  <match src="}: } [74569,74570]" dest="}: } [68644,68645]"/>
  <match src="[: [ [98010,98011]" dest="[: [ [37166,37167]"/>
  <match src="identifier: Decimal [68477,68484]" dest="identifier: Decimal [68814,68821]"/>
  <match src="member_expression [7376,7386]" dest="member_expression [7940,7950]"/>
  <match src="function_body [1698,2090]" dest="function_body [2262,2654]"/>
  <match src=",: , [81245,81246]" dest=",: , [71718,71719]"/>
  <match src="user_defined_type [6463,6467]" dest="user_defined_type [7027,7031]"/>
  <match src=".: . [101613,101614]" dest=".: . [40769,40770]"/>
  <match src="call_expression [53262,53349]" dest="call_expression [65827,65920]"/>
  <match src="}: } [95287,95288]" dest="}: } [34443,34444]"/>
  <match src="{: { [27336,27337]" dest="{: { [45730,45731]"/>
  <match src="primitive_type [27714,27721]" dest="primitive_type [46108,46115]"/>
  <match src="{: { [7547,7548]" dest="{: { [8111,8112]"/>
  <match src="): ) [99672,99673]" dest="): ) [38828,38829]"/>
  <match src="public: public [97399,97405]" dest="public: public [36555,36561]"/>
  <match src=".: . [103797,103798]" dest=".: . [42953,42954]"/>
  <match src=".: . [84208,84209]" dest=".: . [79386,79387]"/>
  <match src="string [83187,83216]" dest="string [82257,82283]"/>
  <match src="member_expression [105630,105666]" dest="member_expression [44786,44822]"/>
  <match src="identifier: Storage [89419,89426]" dest="identifier: Storage [30919,30926]"/>
  <match src="identifier: epoch [102248,102253]" dest="identifier: epoch [41404,41409]"/>
  <match src="function: function [7229,7237]" dest="function: function [7793,7801]"/>
  <match src="private: private [41444,41451]" dest="private: private [11577,11584]"/>
  <match src="identifier: CHAIN_ID [41376,41384]" dest="identifier: CHAIN_ID [11509,11517]"/>
  <match src="(: ( [54376,54377]" dest="(: ( [22225,22226]"/>
  <match src="contract_body [5567,10194]" dest="contract_body [6131,10758]"/>
  <match src="type_name [44030,44037]" dest="type_name [14163,14170]"/>
  <match src="): ) [8563,8564]" dest="): ) [9127,9128]"/>
  <match src="returns: returns [54368,54375]" dest="returns: returns [22217,22224]"/>
  <match src=".: . [83659,83660]" dest=".: . [80686,80687]"/>
  <match src="primitive_type [102983,102990]" dest="primitive_type [42139,42146]"/>
  <match src="type_name [42321,42328]" dest="type_name [12454,12461]"/>
  <match src="primitive_type [18302,18309]" dest="primitive_type [20035,20042]"/>
  <match src="identifier: Transfer [101412,101420]" dest="identifier: Transfer [40568,40576]"/>
  <match src="parameter [100077,100097]" dest="parameter [39233,39253]"/>
  <match src="=: = [42185,42186]" dest="=: = [12318,12319]"/>
  <match src="member_expression [10170,10177]" dest="member_expression [10734,10741]"/>
  <match src=".: . [102623,102624]" dest=".: . [41779,41780]"/>
  <match src="identifier: totalSupply [103593,103604]" dest="identifier: totalSupply [42749,42760]"/>
  <match src="number_literal: 120 [41484,41487]" dest="number_literal: 120 [11617,11620]"/>
  <match src=",: , [31130,31131]" dest=",: , [49524,49525]"/>
  <match src="identifier: balance [100945,100952]" dest="identifier: balance [40101,40108]"/>
  <match src="primitive_type [94509,94516]" dest="primitive_type [33665,33672]"/>
  <match src="primitive_type [79644,79651]" dest="primitive_type [81783,81790]"/>
  <match src="uint256: uint256 [83047,83054]" dest="uint256: uint256 [67543,67550]"/>
  <match src="primitive_type [90513,90520]" dest="primitive_type [76823,76830]"/>
  <match src="identifier: D256 [9082,9086]" dest="identifier: D256 [9646,9650]"/>
  <match src="identifier: Decimal [46292,46299]" dest="identifier: Decimal [16425,16432]"/>
  <match src="revert: revert [28990,28996]" dest="revert: revert [47384,47390]"/>
  <match src="call_argument [98136,98145]" dest="call_argument [37292,37301]"/>
  <match src="user_defined_type [8193,8197]" dest="user_defined_type [8757,8761]"/>
  <match src="primitive_type [56177,56181]" dest="primitive_type [24026,24030]"/>
  <match src="type_name [56319,56326]" dest="type_name [24168,24175]"/>
  <match src="type_name [99409,99416]" dest="type_name [38565,38572]"/>
  <match src="primitive_type [85094,85101]" dest="primitive_type [59489,59496]"/>
  <match src="identifier: D256 [8003,8007]" dest="identifier: D256 [8567,8571]"/>
  <match src="{: { [103219,103220]" dest="{: { [42375,42376]"/>
  <match src="identifier: fluidUntil [102891,102901]" dest="identifier: fluidUntil [42047,42057]"/>
  <match src="constant: constant [27722,27730]" dest="constant: constant [46116,46124]"/>
  <match src="call_expression [96028,96058]" dest="call_expression [35184,35214]"/>
  <match src="): ) [30147,30148]" dest="): ) [48541,48542]"/>
  <match src="identifier: Provide [84735,84742]" dest="identifier: Commit [81716,81722]"/>
  <match src="(: ( [35404,35405]" dest="(: ( [53798,53799]"/>
  <match src="event_definition [81377,81466]" dest="event_definition [79172,79237]"/>
  <match src="parameter [95895,95902]" dest="parameter [35051,35058]"/>
  <match src="comment: /*     Copyright 2021 Ethic Money Devs &lt;devs@ethic.money&gt; and Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [51059,51742]" dest="comment: /*     Copyright 2021 Ethic Money Devs &lt;devs@ethic.money&gt; and Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [27889,28572]"/>
  <match src="): ) [12359,12360]" dest="): ) [25348,25349]"/>
  <match src=":: : [7627,7628]" dest=":: : [8191,8192]"/>
  <match src="call_expression [81620,81663]" dest="call_expression [72143,72186]"/>
  <match src="call_argument [82449,82463]" dest="call_argument [67839,67853]"/>
  <match src="bytes32: bytes32 [28834,28841]" dest="bytes32: bytes32 [47228,47235]"/>
  <match src="(: ( [8316,8317]" dest="(: ( [8880,8881]"/>
  <match src="): ) [85560,85561]" dest="): ) [79456,79457]"/>
  <match src="state_mutability [38345,38349]" dest="state_mutability [21619,21623]"/>
  <match src="memory: memory [8008,8014]" dest="memory: memory [8572,8578]"/>
  <match src="number_literal: 0 [33755,33756]" dest="number_literal: 0 [52149,52150]"/>
  <match src="primitive_type [13987,13994]" dest="primitive_type [26976,26983]"/>
  <match src="identifier: Vote [104495,104499]" dest="identifier: Vote [43651,43655]"/>
  <match src="type_name [56005,56009]" dest="type_name [23854,23858]"/>
  <match src="bytes32: bytes32 [30054,30061]" dest="bytes32: bytes32 [48448,48455]"/>
  <match src="}: } [33687,33688]" dest="}: } [52081,52082]"/>
  <match src="identifier: recordVote [104438,104448]" dest="identifier: recordVote [43594,43604]"/>
  <match src="member_expression [95199,95214]" dest="member_expression [34355,34370]"/>
  <match src=".: . [96266,96267]" dest=".: . [35422,35423]"/>
  <match src="private: private [66933,66940]" dest="private: private [82556,82563]"/>
  <match src="binary_expression [35543,35560]" dest="binary_expression [53937,53954]"/>
  <match src="identifier: bstr [34154,34158]" dest="identifier: bstr [52548,52552]"/>
  <match src="primitive_type [89349,89356]" dest="primitive_type [30849,30856]"/>
  <match src="member_expression [102321,102347]" dest="member_expression [41477,41503]"/>
  <match src="member_expression [103710,103738]" dest="member_expression [42866,42894]"/>
  <match src="parenthesized_expression [43275,43290]" dest="parenthesized_expression [13408,13423]"/>
  <match src=".: . [103716,103717]" dest=".: . [42872,42873]"/>
  <match src="): ) [54715,54716]" dest="): ) [22564,22565]"/>
  <match src="state_mutability [11564,11568]" dest="state_mutability [24553,24557]"/>
  <match src="): ) [8021,8022]" dest="): ) [8585,8586]"/>
  <match src="member_expression [79522,79547]" dest="member_expression [59934,59946]"/>
  <match src="primitive_type [3996,4003]" dest="primitive_type [4560,4567]"/>
  <match src="function_body [94423,94478]" dest="function_body [33579,33634]"/>
  <match src="identifier: amount [102061,102067]" dest="identifier: amount [41217,41223]"/>
  <match src="number_literal: 0 [4722,4723]" dest="number_literal: 0 [5286,5287]"/>
  <match src="user_defined_type [6306,6310]" dest="user_defined_type [6870,6874]"/>
  <match src="returns: returns [47162,47169]" dest="returns: returns [17295,17302]"/>
  <match src="function_definition [105164,105368]" dest="function_definition [44320,44524]"/>
  <match src="memory: memory [6955,6961]" dest="memory: memory [7519,7525]"/>
  <match src="primitive_type [105012,105019]" dest="primitive_type [44168,44175]"/>
  <match src="public: public [95019,95025]" dest="public: public [34175,34181]"/>
  <match src="uint256: uint256 [1348,1355]" dest="uint256: uint256 [1912,1919]"/>
  <match src="identifier: Permission [108295,108305]" dest="identifier: Permission [71369,71379]"/>
  <match src="identifier: approve [54609,54616]" dest="identifier: approve [22458,22465]"/>
  <match src="identifier: initialized [98435,98446]" dest="identifier: initialized [37591,37602]"/>
  <match src="block_statement [74488,74570]" dest="block_statement [68562,68645]"/>
  <match src="identifier: encodePacked [29681,29693]" dest="identifier: encodePacked [48075,48087]"/>
  <match src="identifier: Account [106988,106995]" dest="identifier: Account [70330,70337]"/>
  <match src="library: library [5551,5558]" dest="library: library [6115,6122]"/>
  <match src="type_name [65643,65650]" dest="type_name [79210,79217]"/>
  <match src="): ) [81464,81465]" dest="): ) [79235,79236]"/>
  <match src="return_type_definition [86675,86689]" dest="return_type_definition [75185,75199]"/>
  <match src="++: ++ [36177,36179]" dest="++: ++ [54571,54573]"/>
  <match src="{: { [93527,93528]" dest="{: { [32683,32684]"/>
  <match src="contract_body [54053,56425]" dest="contract_body [21902,24274]"/>
  <match src=".: . [9929,9930]" dest=".: . [10493,10494]"/>
  <match src="visibility [66933,66940]" dest="visibility [82556,82563]"/>
  <match src="identifier: balance [101016,101023]" dest="identifier: balance [40172,40179]"/>
  <match src="identifier: ADVANCE_INCENTIVE [46715,46732]" dest="identifier: ADVANCE_INCENTIVE [16848,16865]"/>
  <match src="struct_member [5752,5766]" dest="struct_member [6316,6330]"/>
  <match src="): ) [13118,13119]" dest="): ) [26107,26108]"/>
  <match src="return_type_definition [795,812]" dest="return_type_definition [1359,1376]"/>
  <match src="(: ( [82250,82251]" dest="(: ( [60034,60035]"/>
  <match src="identifier: getTreasuryAddress [48715,48733]" dest="identifier: getTreasuryAddress [18848,18866]"/>
  <match src=",: , [3994,3995]" dest=",: , [4558,4559]"/>
  <match src="call_argument [82830,82835]" dest="call_argument [72996,73001]"/>
  <match src="event_definition [25687,25730]" dest="event_definition [61109,61202]"/>
  <match src="memory: memory [8283,8289]" dest="memory: memory [8847,8853]"/>
  <match src="call_argument [30949,31381]" dest="call_argument [49343,49775]"/>
  <match src="event: event [99394,99399]" dest="event: event [38550,38555]"/>
  <match src="identifier: unfreeze [83016,83024]" dest="identifier: unfreeze [72586,72594]"/>
  <match src="{: { [78,79]" dest="{: { [642,643]"/>
  <match src="{: { [81808,81809]" dest="{: { [72314,72315]"/>
  <match src="identifier: permit [55040,55046]" dest="identifier: permit [22889,22895]"/>
  <match src="call_argument [32523,32528]" dest="call_argument [50917,50922]"/>
  <match src="returns: returns [63863,63870]" dest="returns: returns [28651,28658]"/>
  <match src=".: . [8330,8331]" dest=".: . [8894,8895]"/>
  <match src="function_body [93728,93773]" dest="function_body [32884,32929]"/>
  <match src="variable_declaration_statement [383,401]" dest="variable_declaration_statement [947,965]"/>
  <match src="identifier: b [8961,8962]" dest="identifier: b [9525,9526]"/>
  <match src="call_argument [29042,29398]" dest="call_argument [47436,47792]"/>
  <match src="call_argument [29769,29774]" dest="call_argument [48163,48168]"/>
  <match src="identifier: payloadA [30108,30116]" dest="identifier: payloadA [48502,48510]"/>
  <match src="primitive_type [41593,41600]" dest="primitive_type [11726,11733]"/>
  <match src="(: ( [45232,45233]" dest="(: ( [15365,15366]"/>
  <match src="): ) [68745,68746]" dest="): ) [63795,63796]"/>
  <match src=",: , [32027,32028]" dest=",: , [50421,50422]"/>
  <match src="identifier: amount [100780,100786]" dest="identifier: amount [39936,39942]"/>
  <match src="view: view [64718,64722]" dest="view: view [68251,68255]"/>
  <match src="returns: returns [10055,10062]" dest="returns: returns [10619,10626]"/>
  <match src="unary_expression [107156,107188]" dest="unary_expression [70498,70530]"/>
  <match src="function_definition [102368,102790]" dest="function_definition [41524,41946]"/>
  <match src="view: view [94017,94021]" dest="view: view [33173,33177]"/>
  <match src="comment: // 50% [43829,43835]" dest="comment: // 50% [13962,13968]"/>
  <match src="): ) [91143,91144]" dest="): ) [77453,77454]"/>
  <match src="identifier: sender [81716,81722]" dest="identifier: sender [72214,72220]"/>
  <match src=",: , [56256,56257]" dest=",: , [24105,24106]"/>
  <match src="identifier: newClaimable [83245,83257]" dest="identifier: couponAmount [64095,64107]"/>
  <match src="=: = [27563,27564]" dest="=: = [45957,45958]"/>
  <match src="variable_declaration [34290,34299]" dest="variable_declaration [52684,52693]"/>
  <match src="address: address [102983,102990]" dest="address: address [42139,42146]"/>
  <match src="): ) [35035,35036]" dest="): ) [53429,53430]"/>
  <match src="state_variable_declaration [42485,42536]" dest="state_variable_declaration [12618,12669]"/>
  <match src="identifier: b [8433,8434]" dest="identifier: b [8997,8998]"/>
  <match src="member_expression [93849,93863]" dest="member_expression [33005,33019]"/>
  <match src="primitive_type [53444,53451]" dest="primitive_type [61320,61327]"/>
  <match src="call_argument [4725,4737]" dest="call_argument [5289,5301]"/>
  <match src="comment: // XXX Currently there is no better way to check if there is a contract in an address [86722,86807]" dest="comment: // XXX Currently there is no better way to check if there is a contract in an address [75232,75317]"/>
  <match src="): ) [13522,13523]" dest="): ) [26511,26512]"/>
  <match src="visibility [7837,7845]" dest="visibility [8401,8409]"/>
  <match src="variable_declaration [68477,68502]" dest="variable_declaration [68814,68839]"/>
  <match src="type_name [79026,79033]" dest="type_name [57531,57538]"/>
  <match src=".: . [8342,8343]" dest=".: . [8906,8907]"/>
  <match src="number_literal: 0 [74586,74587]" dest="number_literal: 0 [59142,59143]"/>
  <match src="state_variable_declaration [89419,89440]" dest="state_variable_declaration [30919,30940]"/>
  <match src="return: return [48778,48784]" dest="return: return [18911,18917]"/>
  <match src="): ) [74215,74216]" dest="): ) [68477,68478]"/>
  <match src="identifier: onlyFrozen [81513,81523]" dest="identifier: onlyFrozenOrLocked [79306,79324]"/>
  <match src="uint256: uint256 [36153,36160]" dest="uint256: uint256 [54547,54554]"/>
  <match src="primitive_type [54782,54789]" dest="primitive_type [22631,22638]"/>
  <match src="call_argument [34946,34948]" dest="call_argument [53340,53342]"/>
  <match src="call_argument [31353,31359]" dest="call_argument [49747,49753]"/>
  <match src="identifier: strategy [96292,96300]" dest="identifier: strategy [35448,35456]"/>
  <match src="identifier: getPoolExitLockupEpochs [78103,78126]" dest="identifier: getCouponExpiration [61810,61829]"/>
  <match src="expression_statement [104318,104363]" dest="expression_statement [43474,43519]"/>
  <match src="parameter [9987,10000]" dest="parameter [10551,10564]"/>
  <match src="parameter [6137,6148]" dest="parameter [6701,6712]"/>
  <match src="contract_body [106531,107312]" dest="contract_body [69873,70654]"/>
  <match src="call_expression [33745,33757]" dest="call_expression [52139,52151]"/>
  <match src=".: . [96715,96716]" dest=".: . [35871,35872]"/>
  <match src="parameter [1290,1297]" dest="parameter [1854,1861]"/>
  <match src="private: private [44555,44562]" dest="private: private [14688,14695]"/>
  <match src="type_name [50185,50192]" dest="type_name [73709,73716]"/>
  <match src="number_literal: 2e22 [43018,43022]" dest="number_literal: 2e22 [13151,13155]"/>
  <match src="): ) [80882,80883]" dest="): ) [64202,64203]"/>
  <match src="identifier: outstandingCoupons [94851,94869]" dest="identifier: outstandingCoupons [34007,34025]"/>
  <match src="}: } [33930,33931]" dest="}: } [52324,52325]"/>
  <match src="type_name [103172,103179]" dest="type_name [42328,42335]"/>
  <match src="(: ( [29893,29894]" dest="(: ( [48287,48288]"/>
  <match src=".: . [104105,104106]" dest=".: . [43261,43262]"/>
  <match src="variable_declaration [79812,79825]" dest="variable_declaration [62835,62853]"/>
  <match src="member_expression [103710,103749]" dest="member_expression [42866,42905]"/>
  <match src=".: . [48046,48047]" dest=".: . [18179,18180]"/>
  <match src="(: ( [9019,9020]" dest="(: ( [9583,9584]"/>
  <match src="visibility [85032,85039]" dest="visibility [59180,59187]"/>
  <match src="{: { [63802,63803]" dest="{: { [28590,28591]"/>
  <match src="identifier: State [108032,108037]" dest="identifier: State [83541,83546]"/>
  <match src="identifier: coupons [96708,96715]" dest="identifier: coupons [35864,35871]"/>
  <match src="identifier: strategy [96258,96266]" dest="identifier: strategy [35414,35422]"/>
  <match src="visibility [46105,46113]" dest="visibility [16238,16246]"/>
  <match src="(: ( [54073,54074]" dest="(: ( [21922,21923]"/>
  <match src="user_defined_type [5995,5999]" dest="user_defined_type [6559,6563]"/>
  <match src="indexed: indexed [55239,55246]" dest="indexed: indexed [23088,23095]"/>
  <match src="primitive_type [96800,96807]" dest="primitive_type [35956,35963]"/>
  <match src="call_expression [6778,6805]" dest="call_expression [7342,7369]"/>
  <match src="member_expression [85276,85288]" dest="member_expression [81185,81197]"/>
  <match src="type_name [7277,7284]" dest="type_name [7841,7848]"/>
  <match src="identifier: balanceCheck [85017,85029]" dest="identifier: mintToDAO [59402,59411]"/>
  <match src="=: = [103591,103592]" dest="=: = [42747,42748]"/>
  <match src="{: { [46698,46699]" dest="{: { [16831,16832]"/>
  <match src="call_argument [28599,28605]" dest="call_argument [46993,46999]"/>
  <match src="function: function [92925,92933]" dest="function: function [32081,32089]"/>
  <match src="uint256: uint256 [88319,88326]" dest="uint256: uint256 [29819,29826]"/>
  <match src="identifier: newLock [105669,105676]" dest="identifier: newLock [44825,44832]"/>
  <match src="return_type_definition [56103,56127]" dest="return_type_definition [23952,23976]"/>
  <match src="identifier: supply [101048,101054]" dest="identifier: supply [40204,40210]"/>
  <match src="identifier: candidate [105776,105785]" dest="identifier: candidate [44932,44941]"/>
  <match src="primitive_type [47044,47051]" dest="primitive_type [17177,17184]"/>
  <match src="identifier: staged [89043,89049]" dest="identifier: staged [30543,30549]"/>
  <match src="call_expression [74265,74332]" dest="call_expression [82693,82741]"/>
  <match src="member_expression [83778,83789]" dest="member_expression [73640,73651]"/>
  <match src="[: [ [101828,101829]" dest="[: [ [40984,40985]"/>
  <match src="parameter [86644,86659]" dest="parameter [75154,75169]"/>
  <match src="function_body [73208,73286]" dest="function_body [59188,59387]"/>
  <match src="return: return [36749,36755]" dest="return: return [55143,55149]"/>
  <match src="primitive_type [86684,86688]" dest="primitive_type [75194,75198]"/>
  <match src="type_name [55360,55364]" dest="type_name [23209,23213]"/>
  <match src="call_argument [33755,33756]" dest="call_argument [52149,52150]"/>
  <match src="[: [ [102566,102567]" dest="[: [ [41722,41723]"/>
  <match src="state_mutability [46114,46118]" dest="state_mutability [16247,16251]"/>
  <match src="primitive_type [93062,93069]" dest="primitive_type [32218,32225]"/>
  <match src="type_name [99641,99648]" dest="type_name [38797,38804]"/>
  <match src="return_type_definition [7139,7160]" dest="return_type_definition [7703,7724]"/>
  <match src="variable_declaration [91669,91681]" dest="variable_declaration [77979,77991]"/>
  <match src="=: = [84497,84498]" dest="=: = [73903,73904]"/>
  <match src="call_argument [20115,20121]" dest="call_argument [65961,65967]"/>
  <match src="type_name [98530,98537]" dest="type_name [37686,37693]"/>
  <match src="byte: byte [35967,35971]" dest="byte: byte [54361,54365]"/>
  <match src="(: ( [417,418]" dest="(: ( [981,982]"/>
  <match src="member_expression [82551,82590]" dest="member_expression [72759,72768]"/>
  <match src="returns: returns [92957,92964]" dest="returns: returns [32113,32120]"/>
  <match src="primitive_type [54824,54828]" dest="primitive_type [22673,22677]"/>
  <match src="identifier: Candidate [89360,89369]" dest="identifier: Candidate [30860,30869]"/>
  <match src=",: , [66309,66310]" dest=",: , [82374,82375]"/>
  <match src="call_argument [81604,81609]" dest="call_argument [72127,72132]"/>
  <match src="state_mutability [8260,8264]" dest="state_mutability [8824,8828]"/>
  <match src="): ) [93069,93070]" dest="): ) [32225,32226]"/>
  <match src="identifier: epoch [78081,78086]" dest="identifier: epoch [61788,61793]"/>
  <match src="identifier: epoch [103478,103483]" dest="identifier: epoch [42634,42639]"/>
  <match src="parameter [47393,47412]" dest="parameter [17526,17545]"/>
  <match src="]: ] [105295,105296]" dest="]: ] [44451,44452]"/>
  <match src="identifier: startFor [105534,105542]" dest="identifier: startFor [44690,44698]"/>
  <match src="identifier: size [86708,86712]" dest="identifier: size [75218,75222]"/>
  <match src="uint256: uint256 [99926,99933]" dest="uint256: uint256 [39082,39089]"/>
  <match src="event: event [13924,13929]" dest="event: event [26913,26918]"/>
  <match src="primitive_type [81222,81229]" dest="primitive_type [71695,71702]"/>
  <match src="primitive_type [52850,52857]" dest="primitive_type [56144,56151]"/>
  <match src=",: , [100367,100368]" dest=",: , [39523,39524]"/>
  <match src="parameter [96915,96928]" dest="parameter [36071,36084]"/>
  <match src="member_expression [104710,104727]" dest="member_expression [43866,43883]"/>
  <match src="identifier: account [105401,105408]" dest="identifier: account [44557,44564]"/>
  <match src="event_paramater [81049,81072]" dest="event_paramater [71481,71504]"/>
  <match src="parameter [93024,93039]" dest="parameter [32180,32195]"/>
  <match src="[: [ [104542,104543]" dest="[: [ [43698,43699]"/>
  <match src="): ) [84445,84446]" dest="): ) [81056,81057]"/>
  <match src="pure: pure [54937,54941]" dest="pure: pure [22786,22790]"/>
  <match src=",: , [28896,28897]" dest=",: , [47290,47291]"/>
  <match src="visibility [53038,53044]" dest="visibility [62593,62599]"/>
  <match src="assignment_expression [102088,102181]" dest="assignment_expression [41244,41337]"/>
  <match src="user_defined_type [104485,104499]" dest="user_defined_type [43641,43655]"/>
  <match src="call_expression [82495,82670]" dest="call_expression [72726,72863]"/>
  <match src="identifier: i [35303,35304]" dest="identifier: i [53697,53698]"/>
  <match src="function: function [48101,48109]" dest="function: function [18234,18242]"/>
  <match src="identifier: decrementApproveFor [104780,104799]" dest="identifier: decrementApproveFor [43936,43955]"/>
  <match src="primitive_type [51835,51842]" dest="primitive_type [27771,27778]"/>
  <match src="}: } [103504,103505]" dest="}: } [42660,42661]"/>
  <match src="(: ( [95793,95794]" dest="(: ( [34949,34950]"/>
  <match src="identifier: epoch [102163,102168]" dest="identifier: epoch [41319,41324]"/>
  <match src="bytes32: bytes32 [90513,90520]" dest="bytes32: bytes32 [76823,76830]"/>
  <match src="call_expression [104915,104971]" dest="call_expression [44071,44127]"/>
  <match src="type_name [99790,99797]" dest="type_name [38946,38953]"/>
  <match src="block_statement [28391,28780]" dest="block_statement [46785,47174]"/>
  <match src="*: * [43200,43201]" dest="*: * [13333,13334]"/>
  <match src="identifier: errorMessage [4725,4737]" dest="identifier: errorMessage [5289,5301]"/>
  <match src="identifier: account [95322,95329]" dest="identifier: account [34478,34485]"/>
  <match src="function: function [100484,100492]" dest="function: function [39640,39648]"/>
  <match src="expression_statement [100410,100472]" dest="expression_statement [39566,39628]"/>
  <match src="expression_statement [105758,105806]" dest="expression_statement [44914,44962]"/>
  <match src="parameter [100061,100075]" dest="parameter [39217,39231]"/>
  <match src="(: ( [102278,102279]" dest="(: ( [41434,41435]"/>
  <match src="primitive_type [25755,25762]" dest="primitive_type [61012,61019]"/>
  <match src="identifier: msg [84592,84595]" dest="identifier: msg [72892,72895]"/>
  <match src=".: . [96707,96708]" dest=".: . [35863,35864]"/>
  <match src="identifier: epoch [103820,103825]" dest="identifier: epoch [42976,42981]"/>
  <match src="=: = [101031,101032]" dest="=: = [40187,40188]"/>
  <match src="identifier: epochs [103717,103723]" dest="identifier: epochs [42873,42879]"/>
  <match src="{: { [45753,45754]" dest="{: { [15886,15887]"/>
  <match src="member_expression [103292,103307]" dest="member_expression [42448,42463]"/>
  <match src="comment: /**      * @dev Moves `amount` tokens from the caller's account to `recipient`.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [11744,11953]" dest="comment: /**      * @dev Moves `amount` tokens from the caller's account to `recipient`.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [24733,24942]"/>
  <match src="type_name [32018,32022]" dest="type_name [50412,50416]"/>
  <match src="uint256: uint256 [101513,101520]" dest="uint256: uint256 [40669,40676]"/>
  <match src="&quot;: &quot; [85380,85381]" dest="&quot;: &quot; [81311,81312]"/>
  <match src="(: ( [33788,33789]" dest="(: ( [52182,52183]"/>
  <match src="yul_identifier [87199,87206]" dest="yul_identifier [75709,75716]"/>
  <match src=".: . [78102,78103]" dest=".: . [61809,61810]"/>
  <match src="(: ( [74069,74070]" dest="(: ( [68429,68430]"/>
  <match src="visibility [43710,43717]" dest="visibility [13843,13850]"/>
  <match src="number_literal: 5e17 [43823,43827]" dest="number_literal: 5e17 [13956,13960]"/>
  <match src="comment: /* Bootstrapping */ [41412,41431]" dest="comment: /* Bootstrapping */ [11545,11564]"/>
  <match src="function: function [4604,4612]" dest="function: function [5168,5176]"/>
  <match src="type_name [4628,4635]" dest="type_name [5192,5199]"/>
  <match src="mapping: mapping [89293,89300]" dest="mapping: mapping [30793,30800]"/>
  <match src="type_name [41523,41530]" dest="type_name [11656,11663]"/>
  <match src="identifier: COLON [28099,28104]" dest="identifier: COLON [46493,46498]"/>
  <match src="variable_declaration [34914,34933]" dest="variable_declaration [53308,53327]"/>
  <match src=",: , [55448,55449]" dest=",: , [23297,23298]"/>
  <match src="visibility [56094,56102]" dest="visibility [23943,23951]"/>
  <match src="visibility [43770,43777]" dest="visibility [13903,13910]"/>
  <match src="member_expression [101269,101301]" dest="member_expression [40425,40457]"/>
  <match src="type_name [770,777]" dest="type_name [1334,1341]"/>
  <match src="return_type_definition [5986,6007]" dest="return_type_definition [6550,6571]"/>
  <match src="&quot;: &quot; [66341,66342]" dest="&quot;: &quot; [82406,82407]"/>
  <match src="yul_function_call [91737,91768]" dest="yul_function_call [78047,78078]"/>
  <match src="(: ( [47975,47976]" dest="(: ( [18108,18109]"/>
  <match src="): ) [84555,84556]" dest="): ) [73947,73948]"/>
  <match src="function_body [7345,7403]" dest="function_body [7909,7967]"/>
  <match src="=: = [36010,36011]" dest="=: = [54404,54405]"/>
  <match src="external: external [64709,64717]" dest="external: external [79297,79305]"/>
  <match src="{: { [5742,5743]" dest="{: { [6306,6307]"/>
  <match src="type_name [89109,89116]" dest="type_name [30609,30616]"/>
  <match src="): ) [45947,45948]" dest="): ) [16080,16081]"/>
  <match src="identifier: _state [93445,93451]" dest="identifier: _state [32601,32607]"/>
  <match src=",: , [33593,33594]" dest=",: , [51987,51988]"/>
  <match src="call_expression [73225,73232]" dest="call_expression [59224,59231]"/>
  <match src="assignment_expression [101908,101973]" dest="assignment_expression [41064,41129]"/>
  <match src="identifier: input [36723,36728]" dest="identifier: input [55117,55122]"/>
  <match src="type_name [55458,55465]" dest="type_name [23307,23314]"/>
  <match src="identifier: expiration [103739,103749]" dest="identifier: expiration [42895,42905]"/>
  <match src="[: [ [103074,103075]" dest="[: [ [42230,42231]"/>
  <match src="(: ( [91743,91744]" dest="(: ( [78053,78054]"/>
  <match src="modifier_definition [107097,107310]" dest="modifier_definition [70439,70652]"/>
  <match src="(: ( [55700,55701]" dest="(: ( [23549,23550]"/>
  <match src="uint256: uint256 [15926,15933]" dest="uint256: uint256 [83636,83643]"/>
  <match src="{: { [6345,6346]" dest="{: { [6909,6910]"/>
  <match src="identifier: candidates [97732,97742]" dest="identifier: candidates [36888,36898]"/>
  <match src="return_type_definition [55930,55944]" dest="return_type_definition [23779,23793]"/>
  <match src="{: { [93428,93429]" dest="{: { [32584,32585]"/>
  <match src="): ) [31808,31809]" dest="): ) [50202,50203]"/>
  <match src="=: = [35888,35889]" dest="=: = [54282,54283]"/>
  <match src="internal: internal [47824,47832]" dest="internal: internal [17957,17965]"/>
  <match src="&quot;: &quot; [19985,19986]" dest="&quot;: &quot; [57401,57402]"/>
  <match src="call_argument [30590,30596]" dest="call_argument [48984,48990]"/>
  <match src=",: , [99656,99657]" dest=",: , [38812,38813]"/>
  <match src="struct_member [89059,89078]" dest="struct_member [30559,30578]"/>
  <match src="}: } [104048,104049]" dest="}: } [43204,43205]"/>
  <match src="): ) [50786,50787]" dest="): ) [64042,64043]"/>
  <match src=".: . [103805,103806]" dest=".: . [42961,42962]"/>
  <match src="memory: memory [6658,6664]" dest="memory: memory [7222,7228]"/>
  <match src="visibility [95464,95470]" dest="visibility [34620,34626]"/>
  <match src="uint256: uint256 [100224,100231]" dest="uint256: uint256 [39380,39387]"/>
  <match src="variable_declaration_statement [36241,36263]" dest="variable_declaration_statement [54635,54657]"/>
  <match src="internal: internal [100099,100107]" dest="internal: internal [39255,39263]"/>
  <match src="call_expression [46330,46378]" dest="call_expression [16463,16511]"/>
  <match src="call_argument [84542,84555]" dest="call_argument [73934,73947]"/>
  <match src="bool: bool [54735,54739]" dest="bool: bool [22584,22588]"/>
  <match src="address: address [56147,56154]" dest="address: address [23996,24003]"/>
  <match src="string [83584,83619]" dest="string [81645,81659]"/>
  <match src="parameter [103188,103208]" dest="parameter [42344,42364]"/>
  <match src="string [50987,50996]" dest="string [65622,65659]"/>
  <match src="member_expression [94268,94287]" dest="member_expression [33424,33443]"/>
  <match src="type_name [13063,13070]" dest="type_name [26052,26059]"/>
  <match src="call_argument [101442,101448]" dest="call_argument [40598,40604]"/>
  <match src="identifier: Upgraded [90776,90784]" dest="identifier: Upgraded [77086,77094]"/>
  <match src="identifier: _state [105306,105312]" dest="identifier: _state [44462,44468]"/>
  <match src=",: , [83679,83680]" dest=",: , [80704,80705]"/>
  <match src="parameter [106648,106663]" dest="parameter [69990,70005]"/>
  <match src=",: , [54120,54121]" dest=",: , [21969,21970]"/>
  <match src="identifier: reason [29184,29190]" dest="identifier: reason [47578,47584]"/>
  <match src="(: ( [45857,45858]" dest="(: ( [15990,15991]"/>
  <match src="parameter [77755,77769]" dest="parameter [59412,59426]"/>
  <match src="(: ( [9520,9521]" dest="(: ( [10084,10085]"/>
  <match src="return_statement [94159,94189]" dest="return_statement [33315,33345]"/>
  <match src="identifier: sender [83770,83776]" dest="identifier: sender [73632,73638]"/>
  <match src="identifier: Transfer [13699,13707]" dest="identifier: Transfer [26688,26696]"/>
  <match src="(: ( [74200,74201]" dest="(: ( [68476,68477]"/>
  <match src="emit_statement [20101,20142]" dest="emit_statement [65941,65995]"/>
  <match src="parameter [48759,48766]" dest="parameter [18892,18899]"/>
  <match src="expression_statement [83424,83468]" dest="expression_statement [73958,74002]"/>
  <match src="call_argument [96225,96239]" dest="call_argument [35381,35395]"/>
  <match src="identifier: D256 [6574,6578]" dest="identifier: D256 [7138,7142]"/>
  <match src="identifier: epoch [96840,96845]" dest="identifier: epoch [35996,36001]"/>
  <match src="returns: returns [46680,46687]" dest="returns: returns [16813,16820]"/>
  <match src="primitive_type [47287,47294]" dest="primitive_type [17420,17427]"/>
  <match src="identifier: c [3520,3521]" dest="identifier: c [4084,4085]"/>
  <match src="pure: pure [2589,2593]" dest="pure: pure [3153,3157]"/>
  <match src="return_statement [48674,48694]" dest="return_statement [18807,18827]"/>
  <match src="): ) [103540,103541]" dest="): ) [42696,42697]"/>
  <match src="}: } [28226,28227]" dest="}: } [46620,46621]"/>
  <match src="%: % [34557,34558]" dest="%: % [52951,52952]"/>
  <match src="comment: // bytes32 are &quot;0x&quot; followed by 32 bytes of data which take up 2 characters each [35779,35859]" dest="comment: // bytes32 are &quot;0x&quot; followed by 32 bytes of data which take up 2 characters each [54173,54253]"/>
  <match src="primitive_type [83237,83244]" dest="primitive_type [64087,64094]"/>
  <match src="member_expression [101355,101369]" dest="member_expression [40511,40525]"/>
  <match src="=: = [42247,42248]" dest="=: = [12380,12381]"/>
  <match src="call_expression [30262,30618]" dest="call_expression [48656,49012]"/>
  <match src="state_mutability [98369,98373]" dest="state_mutability [37525,37529]"/>
  <match src="identifier: incrementTotalDebt [100205,100223]" dest="identifier: incrementTotalDebt [39361,39379]"/>
  <match src="type_name [15926,15933]" dest="type_name [83636,83643]"/>
  <match src="yul_path [33587,33593]" dest="yul_path [51981,51987]"/>
  <match src="parameter [9064,9080]" dest="parameter [9628,9644]"/>
  <match src="): ) [7879,7880]" dest="): ) [8443,8444]"/>
  <match src="parameter [95794,95801]" dest="parameter [34950,34957]"/>
  <match src="identifier: _state [105470,105476]" dest="identifier: _state [44626,44632]"/>
  <match src="}: } [105692,105693]" dest="}: } [44848,44849]"/>
  <match src="identifier: sender [81649,81655]" dest="identifier: sender [72172,72178]"/>
  <match src="): ) [6913,6914]" dest="): ) [7477,7478]"/>
  <match src="primitive_type [78987,78994]" dest="primitive_type [63749,63756]"/>
  <match src=",: , [9443,9444]" dest=",: , [10007,10008]"/>
  <match src="function_definition [9959,10192]" dest="function_definition [10523,10756]"/>
  <match src="type_name [92966,92971]" dest="type_name [32122,32127]"/>
  <match src="call_argument [104964,104970]" dest="call_argument [44120,44126]"/>
  <match src="(: ( [46574,46575]" dest="(: ( [16707,16708]"/>
  <match src="(: ( [35062,35063]" dest="(: ( [53456,53457]"/>
  <match src="(: ( [94869,94870]" dest="(: ( [34025,34026]"/>
  <match src="(: ( [96799,96800]" dest="(: ( [35955,35956]"/>
  <match src="primitive_type [96915,96922]" dest="primitive_type [36071,36078]"/>
  <match src="array_access [104525,104568]" dest="array_access [43681,43724]"/>
  <match src="identifier: epoch [82931,82936]" dest="identifier: epoch [74193,74198]"/>
  <match src="address: address [44486,44493]" dest="address: address [14619,14626]"/>
  <match src="function_body [45867,45912]" dest="function_body [16000,16045]"/>
  <match src="identifier: b [7825,7826]" dest="identifier: b [8389,8390]"/>
  <match src=",: , [95599,95600]" dest=",: , [34755,34756]"/>
  <match src="parameter [45858,45865]" dest="parameter [15991,15998]"/>
  <match src="primitive_type [75707,75714]" dest="primitive_type [83608,83615]"/>
  <match src="comment: // '0' [27421,27427]" dest="comment: // '0' [45815,45821]"/>
  <match src="string_literal [83187,83216]" dest="string_literal [82257,82283]"/>
  <match src="{: { [31594,31595]" dest="{: { [49988,49989]"/>
  <match src="modifier_invocation [81513,81535]" dest="modifier_invocation [79306,79336]"/>
  <match src="if: if [36719,36721]" dest="if: if [55113,55115]"/>
  <match src="[: [ [97470,97471]" dest="[: [ [36626,36627]"/>
  <match src="call_argument [107202,107206]" dest="call_argument [70544,70548]"/>
  <match src="}: } [92918,92919]" dest="}: } [32074,32075]"/>
  <match src="private: private [43237,43244]" dest="private: private [13370,13377]"/>
  <match src="false [66876,66881]" dest="false [82639,82644]"/>
  <match src="type_name [90513,90520]" dest="type_name [76823,76830]"/>
  <match src="identifier: candidates [97866,97876]" dest="identifier: candidates [37022,37032]"/>
  <match src="parenthesized_expression [31614,31972]" dest="parenthesized_expression [50008,50366]"/>
  <match src="identifier: BASE [6799,6803]" dest="identifier: BASE [7363,7367]"/>
  <match src="call_expression [21205,21273]" dest="call_expression [56933,57011]"/>
  <match src="parameter [73437,73452]" dest="parameter [82539,82554]"/>
  <match src="parameter [93420,93426]" dest="parameter [32576,32582]"/>
  <match src="type_name [97967,97974]" dest="type_name [37123,37130]"/>
  <match src="array_access [34520,34527]" dest="array_access [52914,52921]"/>
  <match src="mstore: mstore [33580,33586]" dest="mstore: mstore [51974,51980]"/>
  <match src="(: ( [92849,92850]" dest="(: ( [32005,32006]"/>
  <match src="variable_declaration_statement [105516,105580]" dest="variable_declaration_statement [44672,44736]"/>
  <match src="{: { [28370,28371]" dest="{: { [46764,46765]"/>
  <match src="parameter [30126,30142]" dest="parameter [48520,48536]"/>
  <match src="call_argument [76274,76280]" dest="call_argument [20390,20396]"/>
  <match src="string_literal [19985,20025]" dest="string_literal [57401,57431]"/>
  <match src="): ) [91097,91098]" dest="): ) [77407,77408]"/>
  <match src="public: public [92749,92755]" dest="public: public [31905,31911]"/>
  <match src="returns: returns [54655,54662]" dest="returns: returns [22504,22511]"/>
  <match src="): ) [52864,52865]" dest="): ) [56158,56159]"/>
  <match src="member_expression [102296,102318]" dest="member_expression [41452,41474]"/>
  <match src="type_cast_expression [36852,36892]" dest="type_cast_expression [55246,55286]"/>
  <match src="(: ( [101159,101160]" dest="(: ( [40315,40316]"/>
  <match src="identifier: b [1236,1237]" dest="identifier: b [1800,1801]"/>
  <match src="pure: pure [48440,48444]" dest="pure: pure [18573,18577]"/>
  <match src="address: address [48454,48461]" dest="address: address [18587,18594]"/>
  <match src="{: { [104515,104516]" dest="{: { [43671,43672]"/>
  <match src="identifier: valid [67758,67763]" dest="identifier: valid [68846,68851]"/>
  <match src="primitive_type [34798,34805]" dest="primitive_type [53192,53199]"/>
  <match src="uint: uint [56056,56060]" dest="uint: uint [23905,23909]"/>
  <match src="call_argument [9298,9302]" dest="call_argument [9862,9866]"/>
  <match src="function_definition [56133,56205]" dest="function_definition [23982,24054]"/>
  <match src="): ) [82084,82085]" dest="): ) [73761,73762]"/>
  <match src="uint256: uint256 [93311,93318]" dest="uint256: uint256 [32467,32474]"/>
  <match src="identifier: j [34082,34083]" dest="identifier: j [52476,52477]"/>
  <match src="parameter [9120,9124]" dest="parameter [9684,9688]"/>
  <match src="parameter [7457,7466]" dest="parameter [8021,8030]"/>
  <match src="function_definition [103511,103613]" dest="function_definition [42667,42769]"/>
  <match src="type_name [364,371]" dest="type_name [928,935]"/>
  <match src="): ) [36627,36628]" dest="): ) [55021,55022]"/>
  <match src=",: , [8813,8814]" dest=",: , [9377,9378]"/>
  <match src="(: ( [9438,9439]" dest="(: ( [10002,10003]"/>
  <match src="{: { [8719,8720]" dest="{: { [9283,9284]"/>
  <match src="for_statement [33127,33698]" dest="for_statement [51521,52092]"/>
  <match src="public: public [95464,95470]" dest="public: public [34620,34626]"/>
  <match src="(: ( [48553,48554]" dest="(: ( [18686,18687]"/>
  <match src="type_name [47287,47294]" dest="type_name [17420,17427]"/>
  <match src="type_name [3203,3210]" dest="type_name [3767,3774]"/>
  <match src="parameter [8853,8857]" dest="parameter [9417,9421]"/>
  <match src="comment: // find the last non-zero byte in order to determine the length [33319,33382]" dest="comment: // find the last non-zero byte in order to determine the length [51713,51776]"/>
  <match src="(: ( [1688,1689]" dest="(: ( [2252,2253]"/>
  <match src="call_expression [105104,105151]" dest="call_expression [44260,44307]"/>
  <match src="return: return [46003,46009]" dest="return: return [16136,16142]"/>
  <match src="[: [ [94947,94948]" dest="[: [ [34103,34104]"/>
  <match src="{: { [46343,46344]" dest="{: { [16476,16477]"/>
  <match src="for: for [92519,92522]" dest="for: for [31675,31678]"/>
  <match src=".: . [101922,101923]" dest=".: . [41078,41079]"/>
  <match src="parameter [45351,45358]" dest="parameter [15484,15491]"/>
  <match src="type_name [30813,30820]" dest="type_name [49207,49214]"/>
  <match src="comment: // ============ Core Methods ============ [9691,9732]" dest="comment: // ============ Core Methods ============ [10255,10296]"/>
  <match src="uint256: uint256 [42770,42777]" dest="uint256: uint256 [12903,12910]"/>
  <match src="(: ( [95351,95352]" dest="(: ( [34507,34508]"/>
  <match src="function_definition [54746,54830]" dest="function_definition [22595,22679]"/>
  <match src="}: } [94915,94916]" dest="}: } [34071,34072]"/>
  <match src="uint256: uint256 [9818,9825]" dest="uint256: uint256 [10382,10389]"/>
  <match src="): ) [7339,7340]" dest="): ) [7903,7904]"/>
  <match src="&lt;: &lt; [9448,9449]" dest="&lt;: &lt; [10012,10013]"/>
  <match src="identifier: amount [100611,100617]" dest="identifier: amount [39767,39773]"/>
  <match src="visibility [43949,43956]" dest="visibility [14082,14089]"/>
  <match src="): ) [63854,63855]" dest="): ) [28642,28643]"/>
  <match src="identifier: self [9544,9548]" dest="identifier: self [10108,10112]"/>
  <match src="identifier: incrementBalanceOfBonded [84567,84591]" dest="identifier: incrementBalanceOf [72873,72891]"/>
  <match src="primitive_type [16510,16517]" dest="primitive_type [57339,57346]"/>
  <match src="type_name [27832,27836]" dest="type_name [46226,46230]"/>
  <match src="]: ] [104166,104167]" dest="]: ] [43322,43323]"/>
  <match src="identifier: to [55474,55476]" dest="identifier: to [23323,23325]"/>
  <match src="[: [ [95085,95086]" dest="[: [ [34241,34242]"/>
  <match src="(: ( [28411,28412]" dest="(: ( [46805,46806]"/>
  <match src="uint256: uint256 [1644,1651]" dest="uint256: uint256 [2208,2215]"/>
  <match src="primitive_type [41717,41724]" dest="primitive_type [11850,11857]"/>
  <match src="&quot;: &quot; [81022,81023]" dest="&quot;: &quot; [71451,71452]"/>
  <match src="function: function [83827,83835]" dest="function: function [80823,80831]"/>
  <match src="identifier: Require [66252,66259]" dest="identifier: Require [82304,82311]"/>
  <match src="call_expression [107262,107291]" dest="call_expression [70604,70633]"/>
  <match src="identifier: account [101103,101110]" dest="identifier: account [40259,40266]"/>
  <match src=",: , [30044,30045]" dest=",: , [48438,48439]"/>
  <match src="uint256: uint256 [97699,97706]" dest="uint256: uint256 [36855,36862]"/>
  <match src="identifier: decrementTotalBonded [100040,100060]" dest="identifier: decrementTotalBonded [39196,39216]"/>
  <match src="{: { [96971,96972]" dest="{: { [36127,36128]"/>
  <match src="address: address [95586,95593]" dest="address: address [34742,34749]"/>
  <match src="contract_body [63802,63954]" dest="contract_body [28590,28742]"/>
  <match src=",: , [2567,2568]" dest=",: , [3131,3132]"/>
  <match src="visibility [4007,4015]" dest="visibility [4571,4579]"/>
  <match src=",: , [55089,55090]" dest=",: , [22938,22939]"/>
  <match src="type_name [54465,54472]" dest="type_name [22314,22321]"/>
  <match src="visibility [46777,46785]" dest="visibility [16910,16918]"/>
  <match src="identifier: RPAREN [32675,32681]" dest="identifier: RPAREN [51069,51075]"/>
  <match src="identifier: to [55299,55301]" dest="identifier: to [23148,23150]"/>
  <match src="function_definition [101986,102362]" dest="function_definition [41142,41518]"/>
  <match src="external: external [54717,54725]" dest="external: external [22566,22574]"/>
  <match src="): ) [82668,82669]" dest="): ) [72861,72862]"/>
  <match src="primitive_type [56224,56228]" dest="primitive_type [24073,24077]"/>
  <match src="{: { [100400,100401]" dest="{: { [39556,39557]"/>
  <match src="{: { [32919,32920]" dest="{: { [51313,51314]"/>
  <match src="(: ( [9063,9064]" dest="(: ( [9627,9628]"/>
  <match src="type_name [88296,88303]" dest="type_name [29796,29803]"/>
  <match src="(: ( [30240,30241]" dest="(: ( [48634,48635]"/>
  <match src="{: { [46931,46932]" dest="{: { [17064,17065]"/>
  <match src="identifier: _state [100750,100756]" dest="identifier: _state [39906,39912]"/>
  <match src="call_expression [28130,28156]" dest="call_expression [46524,46550]"/>
  <match src="string [58642,58667]" dest="string [74126,74157]"/>
  <match src="identifier: Permission [108039,108049]" dest="identifier: Permission [78810,78820]"/>
  <match src="indexed: indexed [55466,55473]" dest="indexed: indexed [23315,23322]"/>
  <match src="(: ( [31720,31721]" dest="(: ( [50114,50115]"/>
  <match src="function_definition [54901,54960]" dest="function_definition [22750,22809]"/>
  <match src="array_access [104710,104738]" dest="array_access [43866,43894]"/>
  <match src="): ) [82332,82333]" dest="): ) [72535,72536]"/>
  <match src="): ) [6100,6101]" dest="): ) [6664,6665]"/>
  <match src="bool: bool [9406,9410]" dest="bool: bool [9970,9974]"/>
  <match src="function: function [47481,47489]" dest="function: function [17614,17622]"/>
  <match src="return_statement [47741,47780]" dest="return_statement [17874,17913]"/>
  <match src="state_mutability [12370,12374]" dest="state_mutability [25359,25363]"/>
  <match src="string: string [30234,30240]" dest="string: string [48628,48634]"/>
  <match src="identifier: file [30723,30727]" dest="identifier: file [49117,49121]"/>
  <match src="): ) [74699,74700]" dest="): ) [62942,62943]"/>
  <match src="(: ( [103539,103540]" dest="(: ( [42695,42696]"/>
  <match src="is: is [80721,80723]" dest="is: is [71357,71359]"/>
  <match src="identifier: D256 [6029,6033]" dest="identifier: D256 [6593,6597]"/>
  <match src="primitive_type [81109,81116]" dest="primitive_type [71541,71548]"/>
  <match src="comment: /*     Copyright 2021 Ethic Money Devs &lt;devs@ethic.money&gt; and Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [78140,78823]" dest="comment: /*     Copyright 2021 Ethic Money Devs &lt;devs@ethic.money&gt; and Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [69158,69841]"/>
  <match src="comment: // 6% [44090,44095]" dest="comment: // 6% [14223,14228]"/>
  <match src="identifier: newImplementation [91750,91767]" dest="identifier: newImplementation [78060,78077]"/>
  <match src="byte: byte [36756,36760]" dest="byte: byte [55150,55154]"/>
  <match src="primitive_type [55384,55388]" dest="primitive_type [23233,23237]"/>
  <match src="type_name [56224,56228]" dest="type_name [24073,24077]"/>
  <match src="private: private [80998,81005]" dest="private: private [71427,71434]"/>
  <match src="identifier: compareTo [9968,9977]" dest="identifier: compareTo [10532,10541]"/>
  <match src="call_argument [30545,30564]" dest="call_argument [48939,48958]"/>
  <match src="call_expression [31702,31726]" dest="call_expression [50096,50120]"/>
  <match src="identifier: a [2020,2021]" dest="identifier: a [2584,2585]"/>
  <match src="type_name [9480,9484]" dest="type_name [10044,10048]"/>
  <match src="): ) [104650,104651]" dest="): ) [43806,43807]"/>
  <match src="identifier: balance [100149,100156]" dest="identifier: balance [39305,39312]"/>
  <match src="): ) [82291,82292]" dest="): ) [82505,82506]"/>
  <match src=".: . [83281,83282]" dest=".: . [80004,80005]"/>
  <match src="address: address [81391,81398]" dest="address: address [79185,79192]"/>
  <match src="for: for [75703,75706]" dest="for: for [83604,83607]"/>
  <match src="public: public [98225,98231]" dest="public: public [37381,37387]"/>
  <match src="array_access [103035,103057]" dest="array_access [42191,42213]"/>
  <match src="primitive_type [65496,65503]" dest="primitive_type [60808,60815]"/>
  <match src="=: = [44281,44282]" dest="=: = [14414,14415]"/>
  <match src="variable_declaration [74226,74262]" dest="variable_declaration [64745,64765]"/>
  <match src="}: } [45683,45684]" dest="}: } [15816,15817]"/>
  <match src="identifier: self [6998,7002]" dest="identifier: self [7562,7566]"/>
  <match src="(: ( [34554,34555]" dest="(: ( [52948,52949]"/>
  <match src="): ) [102922,102923]" dest="): ) [42078,42079]"/>
  <match src=".: . [91564,91565]" dest=".: . [77874,77875]"/>
  <match src="): ) [63950,63951]" dest="): ) [28738,28739]"/>
  <match src="identifier: payloadC [30821,30829]" dest="identifier: payloadC [49215,49223]"/>
  <match src="identifier: amount [21079,21085]" dest="identifier: amount [56876,56882]"/>
  <match src="member_expression [104318,104352]" dest="member_expression [43474,43508]"/>
  <match src=",: , [107026,107027]" dest=",: , [70368,70369]"/>
  <match src=",: , [100075,100076]" dest=",: , [39231,39232]"/>
  <match src="identifier: lockedUntil [95536,95547]" dest="identifier: lockedUntil [34692,34703]"/>
  <match src="(: ( [7708,7709]" dest="(: ( [8272,8273]"/>
  <match src="primitive_type [35742,35749]" dest="primitive_type [54136,54143]"/>
  <match src="identifier: b [8341,8342]" dest="identifier: b [8905,8906]"/>
  <match src="): ) [45018,45019]" dest="): ) [15151,15152]"/>
  <match src="uint256: uint256 [89087,89094]" dest="uint256: uint256 [30587,30594]"/>
  <match src="identifier: encodePacked [28011,28023]" dest="identifier: encodePacked [46405,46417]"/>
  <match src="type_name [30126,30133]" dest="type_name [48520,48527]"/>
  <match src="uint256: uint256 [88396,88403]" dest="uint256: uint256 [29896,29903]"/>
  <match src="identifier: amount [76155,76161]" dest="identifier: amount [84330,84336]"/>
  <match src=",: , [19884,19885]" dest=",: , [65514,65515]"/>
  <match src="uint: uint [54435,54439]" dest="uint: uint [22284,22288]"/>
  <match src="library: library [61,68]" dest="library: library [625,632]"/>
  <match src="identifier: D256 [8931,8935]" dest="identifier: D256 [9495,9499]"/>
  <match src=".: . [85057,85058]" dest=".: . [59205,59206]"/>
  <match src="call_argument [66323,66327]" dest="call_argument [82388,82392]"/>
  <match src="(: ( [55645,55646]" dest="(: ( [23494,23495]"/>
  <match src="call_argument [84452,84457]" dest="call_argument [81063,81064]"/>
  <match src=".: . [100587,100588]" dest=".: . [39743,39744]"/>
  <match src="constant: constant [27679,27687]" dest="constant: constant [46073,46081]"/>
  <match src="array_access [96826,96846]" dest="array_access [35982,36002]"/>
  <match src="(: ( [69187,69188]" dest="(: ( [62576,62577]"/>
  <match src=",: , [83799,83800]" dest=",: , [73661,73662]"/>
  <match src="type_name [104617,104624]" dest="type_name [43773,43780]"/>
  <match src="identifier: Account [95139,95146]" dest="identifier: Account [34295,34302]"/>
  <match src="identifier: transfer [11967,11975]" dest="identifier: transfer [24956,24964]"/>
  <match src="array_access [95070,95094]" dest="array_access [34226,34250]"/>
  <match src="(: ( [8157,8158]" dest="(: ( [8721,8722]"/>
  <match src="event_paramater [55255,55267]" dest="event_paramater [23104,23116]"/>
  <match src="[: [ [103050,103051]" dest="[: [ [42206,42207]"/>
  <match src="-: - [1362,1363]" dest="-: - [1926,1927]"/>
  <match src="identifier: mint [56077,56081]" dest="identifier: mint [23926,23930]"/>
  <match src="call_expression [7568,7575]" dest="call_expression [8132,8139]"/>
  <match src=",: , [81722,81723]" dest=",: , [72220,72221]"/>
  <match src="(: ( [9349,9350]" dest="(: ( [9913,9914]"/>
  <match src="call_argument [102586,102592]" dest="call_argument [41742,41748]"/>
  <match src="identifier: outstandingCoupons [103947,103965]" dest="identifier: outstandingCoupons [43103,43121]"/>
  <match src="return: return [1952,1958]" dest="return: return [2516,2522]"/>
  <match src="event_paramater [81391,81414]" dest="event_paramater [79185,79208]"/>
  <match src="primitive_type [6086,6093]" dest="primitive_type [6650,6657]"/>
  <match src="identifier: reason [101786,101792]" dest="identifier: reason [40942,40948]"/>
  <match src="uint256: uint256 [50185,50192]" dest="uint256: uint256 [73709,73716]"/>
  <match src="identifier: Unbond [81288,81294]" dest="identifier: Bond [71592,71596]"/>
  <match src=".: . [96832,96833]" dest=".: . [35988,35989]"/>
  <match src="expression_statement [33148,33154]" dest="expression_statement [51542,51548]"/>
  <match src="is: is [106520,106522]" dest="is: is [69862,69864]"/>
  <match src="string [91596,91657]" dest="string [77906,77967]"/>
  <match src="return_statement [1952,1961]" dest="return_statement [2516,2525]"/>
  <match src="{: { [93832,93833]" dest="{: { [32988,32989]"/>
  <match src="visibility [55982,55990]" dest="visibility [23831,23839]"/>
  <match src="user_defined_type [6653,6657]" dest="user_defined_type [7217,7221]"/>
  <match src="array_access [104147,104167]" dest="array_access [43303,43323]"/>
  <match src="primitive_type [65670,65677]" dest="primitive_type [79103,79110]"/>
  <match src="call_expression [6340,6379]" dest="call_expression [6904,6943]"/>
  <match src="parameter [105720,105737]" dest="parameter [44876,44893]"/>
  <match src="member_expression [100750,100764]" dest="member_expression [39906,39920]"/>
  <match src="identifier: epochs [102198,102204]" dest="identifier: epochs [41354,41360]"/>
  <match src="return_type_definition [44877,44894]" dest="return_type_definition [15010,15027]"/>
  <match src="member_expression [7013,7018]" dest="member_expression [7577,7582]"/>
  <match src="primitive_type [88726,88733]" dest="primitive_type [30226,30233]"/>
  <match src="(: ( [98205,98206]" dest="(: ( [37361,37362]"/>
  <match src="address: address [99755,99762]" dest="address: address [38911,38918]"/>
  <match src=",: , [835,836]" dest=",: , [1399,1400]"/>
  <match src="block_statement [29611,30000]" dest="block_statement [48005,48394]"/>
  <match src="primitive_type [55756,55763]" dest="primitive_type [23605,23612]"/>
  <match src="returns: returns [47384,47391]" dest="returns: returns [17517,17524]"/>
  <match src="(: ( [94287,94288]" dest="(: ( [33443,33444]"/>
  <match src="update_expression [34060,34068]" dest="update_expression [52454,52462]"/>
  <match src="(: ( [87198,87199]" dest="(: ( [75708,75709]"/>
  <match src="bool: bool [99824,99828]" dest="bool: bool [38980,38984]"/>
  <match src="): ) [101897,101898]" dest="): ) [41053,41054]"/>
  <match src="assignment_expression [36529,36539]" dest="assignment_expression [54923,54933]"/>
  <match src="return_type_definition [98090,98107]" dest="return_type_definition [37246,37263]"/>
  <match src="contract_body [78,4769]" dest="contract_body [642,5333]"/>
  <match src="comment: // 'a' - 10 [27475,27486]" dest="comment: // 'a' - 10 [45869,45880]"/>
  <match src="identifier: a [6244,6245]" dest="identifier: a [6808,6809]"/>
  <match src="primitive_type [99755,99762]" dest="primitive_type [38911,38918]"/>
  <match src="type_name [92573,92580]" dest="type_name [31729,31736]"/>
  <match src="contract_body [51769,51951]" dest="contract_body [27705,27887]"/>
  <match src="): ) [55877,55878]" dest="): ) [23726,23727]"/>
  <match src="]: ] [35534,35535]" dest="]: ] [53928,53929]"/>
  <match src="primitive_type [50185,50192]" dest="primitive_type [73709,73716]"/>
  <match src="function_definition [47343,47475]" dest="function_definition [17476,17608]"/>
  <match src="identifier: sub [755,758]" dest="identifier: sub [1319,1322]"/>
  <match src="call_expression [32394,32420]" dest="call_expression [50788,50814]"/>
  <match src="primitive_type [100061,100068]" dest="primitive_type [39217,39224]"/>
  <match src="type_name [96930,96937]" dest="type_name [36086,36093]"/>
  <match src="(: ( [34757,34758]" dest="(: ( [53151,53152]"/>
  <match src="call_expression [95109,95116]" dest="call_expression [34265,34272]"/>
  <match src="identifier: a [2566,2567]" dest="identifier: a [3130,3131]"/>
  <match src="expression_statement [102088,102182]" dest="expression_statement [41244,41338]"/>
  <match src="{: { [91052,91053]" dest="{: { [77362,77363]"/>
  <match src="): ) [11585,11586]" dest="): ) [24574,24575]"/>
  <match src="=: = [35011,35012]" dest="=: = [53405,53406]"/>
  <match src="type_name [7508,7512]" dest="type_name [8072,8076]"/>
  <match src="(: ( [86683,86684]" dest="(: ( [75193,75194]"/>
  <match src="comment: // See https://ethereum.stackexchange.com/a/14016/36603 [86879,86934]" dest="comment: // See https://ethereum.stackexchange.com/a/14016/36603 [75389,75444]"/>
  <match src="call_expression [47885,47927]" dest="call_expression [18018,18060]"/>
  <match src="type_name [74226,74233]" dest="type_name [64745,64752]"/>
  <match src="identifier: amount [16593,16599]" dest="identifier: amount [57143,57149]"/>
  <match src="function_definition [7765,7949]" dest="function_definition [8329,8513]"/>
  <match src="call_argument [26218,26225]" dest="call_argument [56429,56436]"/>
  <match src="(: ( [7538,7539]" dest="(: ( [8102,8103]"/>
  <match src="comment: // benefit is lost if 'b' is also tested. [1796,1837]" dest="comment: // benefit is lost if 'b' is also tested. [2360,2401]"/>
  <match src="internal: internal [47021,47029]" dest="internal: internal [17154,17162]"/>
  <match src="uint256: uint256 [82319,82326]" dest="uint256: uint256 [72522,72529]"/>
  <match src="returns: returns [45735,45742]" dest="returns: returns [15868,15875]"/>
  <match src="type_name [73437,73444]" dest="type_name [82539,82546]"/>
  <match src="type_name [28297,28304]" dest="type_name [46691,46698]"/>
  <match src="return_statement [44905,44935]" dest="return_statement [15038,15068]"/>
  <match src="return_type_definition [48145,48162]" dest="return_type_definition [18278,18295]"/>
  <match src="identifier: sender [81892,81898]" dest="identifier: sender [72398,72404]"/>
  <match src="return_statement [45252,45282]" dest="return_statement [15385,15415]"/>
  <match src="identifier: require [1309,1316]" dest="identifier: require [1873,1880]"/>
  <match src="identifier: owner [54989,54994]" dest="identifier: owner [22838,22843]"/>
  <match src="type_name [51789,51796]" dest="type_name [27725,27732]"/>
  <match src=".: . [30952,30953]" dest=".: . [49346,49347]"/>
  <match src="): ) [100097,100098]" dest="): ) [39253,39254]"/>
  <match src="(: ( [11552,11553]" dest="(: ( [24541,24542]"/>
  <match src="member_expression [104083,104109]" dest="member_expression [43239,43265]"/>
  <match src="identifier: isInitialized [98329,98342]" dest="identifier: isInitialized [37485,37498]"/>
  <match src="return_type_definition [95476,95493]" dest="return_type_definition [34632,34649]"/>
  <match src="type_name [54634,54638]" dest="type_name [22483,22487]"/>
  <match src="constant: constant [5658,5666]" dest="constant: constant [6222,6230]"/>
  <match src="visibility [7477,7485]" dest="visibility [8041,8049]"/>
  <match src="return: return [33910,33916]" dest="return: return [52304,52310]"/>
  <match src=",: , [87994,87995]" dest=",: , [29494,29495]"/>
  <match src="primitive_type [63893,63897]" dest="primitive_type [28681,28685]"/>
  <match src="identifier: owner [21899,21904]" dest="identifier: ethicAmount [63833,63844]"/>
  <match src="library_declaration [41311,48810]" dest="library_declaration [11444,18943]"/>
  <match src="function_definition [56305,56340]" dest="function_definition [24154,24189]"/>
  <match src="}: } [46850,46851]" dest="}: } [16983,16984]"/>
  <match src="external: external [56291,56299]" dest="external: external [24140,24148]"/>
  <match src="{: { [27941,27942]" dest="{: { [46335,46336]"/>
  <match src="identifier: epoch [102525,102530]" dest="identifier: epoch [41681,41686]"/>
  <match src="contract_declaration [89398,89442]" dest="contract_declaration [30898,30942]"/>
  <match src="public: public [93904,93910]" dest="public: public [33060,33066]"/>
  <match src=".: . [100728,100729]" dest=".: . [39884,39885]"/>
  <match src="address: address [103155,103162]" dest="address: address [42311,42318]"/>
  <match src="pure: pure [34740,34744]" dest="pure: pure [53134,53138]"/>
  <match src="primitive_type [94031,94038]" dest="primitive_type [33187,33194]"/>
  <match src="primitive_type [103155,103162]" dest="primitive_type [42311,42318]"/>
  <match src=".: . [10161,10162]" dest=".: . [10725,10726]"/>
  <match src="identifier: from [6072,6076]" dest="identifier: from [6636,6640]"/>
  <match src="identifier: reason [100176,100182]" dest="identifier: reason [39332,39338]"/>
  <match src="}: } [98631,98632]" dest="}: } [37787,37788]"/>
  <match src="type_name [54705,54709]" dest="type_name [22554,22558]"/>
  <match src="(: ( [44290,44291]" dest="(: ( [14423,14424]"/>
  <match src="): ) [29825,29826]" dest="): ) [48219,48220]"/>
  <match src="member_expression [82169,82179]" dest="member_expression [73782,73792]"/>
  <match src="type_alias [99367,99375]" dest="type_alias [38523,38531]"/>
  <match src="return_type_definition [96953,96970]" dest="return_type_definition [36109,36126]"/>
  <match src="member_expression [104318,104335]" dest="member_expression [43474,43491]"/>
  <match src="indexed: indexed [81303,81310]" dest="indexed: indexed [71605,71612]"/>
  <match src="assignment_expression [101234,101321]" dest="assignment_expression [40390,40477]"/>
  <match src=",: , [55350,55351]" dest=",: , [23199,23200]"/>
  <match src="private: private [68105,68112]" dest="private: private [68765,68772]"/>
  <match src="): ) [7941,7942]" dest="): ) [8505,8506]"/>
  <match src="bool: bool [13518,13522]" dest="bool: bool [26507,26511]"/>
  <match src="{: { [8859,8860]" dest="{: { [9423,9424]"/>
  <match src="uint8: uint8 [35972,35977]" dest="uint8: uint8 [54366,54371]"/>
  <match src="identifier: must [32023,32027]" dest="identifier: must [50417,50421]"/>
  <match src="type_name [65796,65803]" dest="type_name [83659,83666]"/>
  <match src="&quot;: &quot; [2062,2063]" dest="&quot;: &quot; [2626,2627]"/>
  <match src="identifier: i [33450,33451]" dest="identifier: i [51844,51845]"/>
  <match src="call_argument [6603,6614]" dest="call_argument [7167,7178]"/>
  <match src="user_defined_type [7148,7152]" dest="user_defined_type [7712,7716]"/>
  <match src="{: { [46313,46314]" dest="{: { [16446,16447]"/>
  <match src="primitive_type [67753,67757]" dest="primitive_type [68841,68845]"/>
  <match src="block_statement [36181,36550]" dest="block_statement [54575,54944]"/>
  <match src="private: private [91511,91518]" dest="private: private [77821,77828]"/>
  <match src="expression_statement [84705,84720]" dest="expression_statement [56817,56832]"/>
  <match src="): ) [54228,54229]" dest="): ) [22077,22078]"/>
  <match src=",: , [82284,82285]" dest=",: , [82494,82495]"/>
  <match src="binary_expression [418,424]" dest="binary_expression [982,988]"/>
  <match src="&quot;: &quot; [19886,19887]" dest="&quot;: &quot; [65516,65517]"/>
  <match src="type_name [34290,34297]" dest="type_name [52684,52691]"/>
  <match src=".: . [102343,102344]" dest=".: . [41499,41500]"/>
  <match src="identifier: DAO_ADDRESS [48480,48491]" dest="identifier: DAO_ADDRESS [18613,18624]"/>
  <match src=":: : [82598,82599]" dest=":: : [72806,72807]"/>
  <match src="uint256: uint256 [99451,99458]" dest="uint256: uint256 [38607,38614]"/>
  <match src="=: = [44143,44144]" dest="=: = [14276,14277]"/>
  <match src="{: { [47868,47869]" dest="{: { [18001,18002]"/>
  <match src="uint256: uint256 [88679,88686]" dest="uint256: uint256 [30179,30186]"/>
  <match src="identifier: ASCII_ZERO [36775,36785]" dest="identifier: ASCII_ZERO [55169,55179]"/>
  <match src="for: for [92550,92553]" dest="for: for [31706,31709]"/>
  <match src="member_expression [32271,32287]" dest="member_expression [50665,50681]"/>
  <match src="memory: memory [9087,9093]" dest="memory: memory [9651,9657]"/>
  <match src="uint256: uint256 [102420,102427]" dest="uint256: uint256 [41576,41583]"/>
  <match src=".: . [85463,85464]" dest=".: . [79354,79355]"/>
  <match src="string_literal [4066,4092]" dest="string_literal [4630,4656]"/>
  <match src="identifier: redeemable [100737,100747]" dest="identifier: redeemable [39893,39903]"/>
  <match src="}: } [48497,48498]" dest="}: } [18630,18631]"/>
  <match src="primitive_type [97227,97231]" dest="primitive_type [36383,36387]"/>
  <match src="{: { [3285,3286]" dest="{: { [3849,3850]"/>
  <match src="member_expression [104147,104175]" dest="member_expression [43303,43331]"/>
  <match src="primitive_type [9265,9269]" dest="primitive_type [9829,9833]"/>
  <match src="function: function [96071,96079]" dest="function: function [35227,35235]"/>
  <match src="call_expression [45037,45162]" dest="call_expression [15170,15295]"/>
  <match src=",: , [55374,55375]" dest=",: , [23223,23224]"/>
  <match src="internal: internal [3253,3261]" dest="internal: internal [3817,3825]"/>
  <match src="function: function [94984,94992]" dest="function: function [34140,34148]"/>
  <match src="): ) [12391,12392]" dest="): ) [25380,25381]"/>
  <match src="event_paramater [13708,13728]" dest="event_paramater [26697,26717]"/>
  <match src="return_statement [10125,10134]" dest="return_statement [10689,10698]"/>
  <match src="identifier: staged [101650,101656]" dest="identifier: staged [40806,40812]"/>
  <match src="identifier: self [9603,9607]" dest="identifier: self [10167,10171]"/>
  <match src="function_body [93527,93573]" dest="function_body [32683,32729]"/>
  <match src="address: address [55283,55290]" dest="address: address [23132,23139]"/>
  <match src="): ) [28927,28928]" dest="): ) [47321,47322]"/>
  <match src="returns: returns [56168,56175]" dest="returns: returns [24017,24024]"/>
  <match src="identifier: stringifyTruncated [32819,32837]" dest="identifier: stringifyTruncated [51213,51231]"/>
  <match src="(: ( [95446,95447]" dest="(: ( [34602,34603]"/>
  <match src="call_expression [83937,83950]" dest="call_expression [59260,59273]"/>
  <match src="primitive_type [30813,30820]" dest="primitive_type [49207,49214]"/>
  <match src="function_body [99830,99859]" dest="function_body [38986,39015]"/>
  <match src="expression_statement [410,457]" dest="expression_statement [974,1021]"/>
  <match src="identifier: swap [56219,56223]" dest="identifier: swap [24068,24072]"/>
  <match src="(: ( [96291,96292]" dest="(: ( [35447,35448]"/>
  <match src="]: ] [104399,104400]" dest="]: ] [43555,43556]"/>
  <match src="state_mutability [97819,97823]" dest="state_mutability [36975,36979]"/>
  <match src="function_body [86690,87240]" dest="function_body [75200,75750]"/>
  <match src="type_cast_expression [31632,31958]" dest="type_cast_expression [50026,50352]"/>
  <match src="type_name [54122,54126]" dest="type_name [21971,21975]"/>
  <match src="visibility [54480,54488]" dest="visibility [22329,22337]"/>
  <match src="calldata: calldata [56276,56284]" dest="calldata: calldata [24125,24133]"/>
  <match src="binary_expression [21899,21918]" dest="binary_expression [63833,63848]"/>
  <match src="(: ( [34289,34290]" dest="(: ( [52683,52684]"/>
  <match src="call_expression [66861,66874]" dest="call_expression [69028,69041]"/>
  <match src="): ) [100389,100390]" dest="): ) [39545,39546]"/>
  <match src="call_argument [81724,81729]" dest="call_argument [72222,72227]"/>
  <match src="visibility [97946,97952]" dest="visibility [37102,37108]"/>
  <match src="function: function [54600,54608]" dest="function: function [22449,22457]"/>
  <match src="struct_member [88937,88950]" dest="struct_member [30437,30450]"/>
  <match src="(: ( [3275,3276]" dest="(: ( [3839,3840]"/>
  <match src="state_mutability [8662,8666]" dest="state_mutability [9226,9230]"/>
  <match src=".: . [102169,102170]" dest=".: . [41325,41326]"/>
  <match src="uint256: uint256 [2558,2565]" dest="uint256: uint256 [3122,3129]"/>
  <match src="}: } [48807,48808]" dest="}: } [18940,18941]"/>
  <match src="identifier: priceCumulative [68400,68415]" dest="identifier: staged [73321,73327]"/>
  <match src="returns: returns [13105,13112]" dest="returns: returns [26094,26101]"/>
  <match src=",: , [32049,32050]" dest=",: , [50443,50444]"/>
  <match src="identifier: candidates [104379,104389]" dest="identifier: candidates [43535,43545]"/>
  <match src="user_defined_type [80724,80735]" dest="user_defined_type [71360,71367]"/>
  <match src="uint8: uint8 [34535,34540]" dest="uint8: uint8 [52929,52934]"/>
  <match src=".: . [95687,95688]" dest=".: . [34843,34844]"/>
  <match src="number_literal: 0 [94654,94655]" dest="number_literal: 0 [33810,33811]"/>
  <match src="external: external [55570,55578]" dest="external: external [23419,23427]"/>
  <match src="identifier: spender [99649,99656]" dest="identifier: spender [38805,38812]"/>
  <match src=".: . [102254,102255]" dest=".: . [41410,41411]"/>
  <match src="primitive_type [79026,79033]" dest="primitive_type [57531,57538]"/>
  <match src=".: . [106682,106683]" dest=".: . [70024,70025]"/>
  <match src="parameter [97927,97944]" dest="parameter [37083,37100]"/>
  <match src="identifier: require [19773,19780]" dest="identifier: require [65395,65402]"/>
  <match src="string: string [54314,54320]" dest="string: string [22163,22169]"/>
  <match src="): ) [16226,16227]" dest="): ) [58817,58818]"/>
  <match src="uint256: uint256 [16990,16997]" dest="uint256: uint256 [59735,59742]"/>
  <match src="return_type_definition [54878,54895]" dest="return_type_definition [22727,22744]"/>
  <match src="identifier: require [2008,2015]" dest="identifier: require [2572,2579]"/>
  <match src="string [22498,22536]" dest="string [71895,71916]"/>
  <match src="identifier: getEthicAddress [48513,48528]" dest="identifier: getEthicAddress [18646,18661]"/>
  <match src="call_argument [83025,83035]" dest="call_argument [72595,72605]"/>
  <match src="string [24991,25024]" dest="string [79603,79632]"/>
  <match src="assignment_expression [102716,102783]" dest="assignment_expression [41872,41939]"/>
  <match src="primitive_type [101756,101763]" dest="primitive_type [40912,40919]"/>
  <match src="type_name [9368,9372]" dest="type_name [9932,9936]"/>
  <match src="type_name [44244,44251]" dest="type_name [14377,14384]"/>
  <match src="enum_value: UNDECIDED [88602,88611]" dest="enum_value: UNDECIDED [30102,30111]"/>
  <match src="address: address [19791,19798]" dest="address: address [65413,65420]"/>
  <match src="uint256: uint256 [42485,42492]" dest="uint256: uint256 [12618,12625]"/>
  <match src="binary_expression [94851,94881]" dest="binary_expression [34007,34037]"/>
  <match src="member_expression [95820,95840]" dest="member_expression [34976,34996]"/>
  <match src="identifier: candidates [104325,104335]" dest="identifier: candidates [43481,43491]"/>
  <match src="identifier: Constants [82551,82560]" dest="identifier: Constants [72769,72778]"/>
  <match src="identifier: account [101250,101257]" dest="identifier: account [40406,40413]"/>
  <match src="type_name [71024,71031]" dest="type_name [66842,66849]"/>
  <match src="return_type_definition [51934,51948]" dest="return_type_definition [27870,27884]"/>
  <match src=",: , [81132,81133]" dest=",: , [71564,71565]"/>
  <match src="(: ( [81686,81687]" dest="(: ( [57455,57456]"/>
  <match src="primitive_type [43762,43769]" dest="primitive_type [13895,13902]"/>
  <match src="): ) [54739,54740]" dest="): ) [22588,22589]"/>
  <match src="identifier: impl [98597,98601]" dest="identifier: impl [37753,37757]"/>
  <match src="identifier: D256 [45980,45984]" dest="identifier: D256 [16113,16117]"/>
  <match src=",: , [101312,101313]" dest=",: , [40468,40469]"/>
  <match src="call_expression [84499,84556]" dest="call_expression [73905,73948]"/>
  <match src="): ) [94117,94118]" dest="): ) [33273,33274]"/>
  <match src="user_defined_type [46128,46140]" dest="user_defined_type [16261,16273]"/>
  <match src="comment: // reverse-for-loops with unsigned integer [34333,34375]" dest="comment: // reverse-for-loops with unsigned integer [52727,52769]"/>
  <match src="primitive_type [43409,43416]" dest="primitive_type [13542,13549]"/>
  <match src="visibility [104506,104514]" dest="visibility [43662,43670]"/>
  <match src="}: } [100624,100625]" dest="}: } [39780,39781]"/>
  <match src="call_argument [29165,29191]" dest="call_argument [47559,47585]"/>
  <match src="(: ( [6190,6191]" dest="(: ( [6754,6755]"/>
  <match src="(: ( [10063,10064]" dest="(: ( [10627,10628]"/>
  <match src="identifier: amount [99798,99804]" dest="identifier: amount [38954,38960]"/>
  <match src="identifier: account [81311,81318]" dest="identifier: account [71613,71620]"/>
  <match src="member_expression [102866,102901]" dest="member_expression [42022,42057]"/>
  <match src="identifier: reason [104964,104970]" dest="identifier: reason [44120,44126]"/>
  <match src="uint: uint [54196,54200]" dest="uint: uint [22045,22049]"/>
  <match src="binary_expression [33450,33455]" dest="binary_expression [51844,51849]"/>
  <match src="}: } [31423,31424]" dest="}: } [49817,49818]"/>
  <match src="type_name [15783,15790]" dest="type_name [60794,60801]"/>
  <match src="identifier: this [85102,85106]" dest="identifier: this [59497,59501]"/>
  <match src="string [92802,92821]" dest="string [31958,31977]"/>
  <match src="): ) [97231,97232]" dest="): ) [36387,36388]"/>
  <match src="visibility [43848,43855]" dest="visibility [13981,13988]"/>
  <match src="): ) [30194,30195]" dest="): ) [48588,48589]"/>
  <match src="(: ( [105542,105543]" dest="(: ( [44698,44699]"/>
  <match src="function_body [44895,44941]" dest="function_body [15028,15074]"/>
  <match src="uint256: uint256 [80772,80779]" dest="uint256: uint256 [71405,71412]"/>
  <match src="identifier: ethicAmount [79305,79316]" dest="identifier: ethicAmount [64140,64151]"/>
  <match src="address: address [79644,79651]" dest="address: address [81783,81790]"/>
  <match src="call_argument [29084,29108]" dest="call_argument [47478,47502]"/>
  <match src=",: , [8206,8207]" dest=",: , [8770,8771]"/>
  <match src="address: address [94376,94383]" dest="address: address [33532,33539]"/>
  <match src="identifier: outstandingCoupons [96464,96482]" dest="identifier: outstandingCoupons [35620,35638]"/>
  <match src="(: ( [82590,82591]" dest="(: ( [72768,72769]"/>
  <match src="return: return [6333,6339]" dest="return: return [6897,6903]"/>
  <match src="): ) [81087,81088]" dest="): ) [71519,71520]"/>
  <match src="string_literal [33917,33920]" dest="string_literal [52311,52314]"/>
  <match src="parameter [3225,3251]" dest="parameter [3789,3815]"/>
  <match src="(: ( [90842,90843]" dest="(: ( [77152,77153]"/>
  <match src="function_body [94040,94089]" dest="function_body [33196,33245]"/>
  <match src="returns: returns [4021,4028]" dest="returns: returns [4585,4592]"/>
  <match src=".: . [102558,102559]" dest=".: . [41714,41715]"/>
  <match src="primitive_type [103671,103678]" dest="primitive_type [42827,42834]"/>
  <match src="): ) [4665,4666]" dest="): ) [5229,5230]"/>
  <match src="call_expression [6029,6050]" dest="call_expression [6593,6614]"/>
  <match src="): ) [20140,20141]" dest="): ) [65993,65994]"/>
  <match src="array_access [95665,95687]" dest="array_access [34821,34843]"/>
  <match src="type_name [2558,2565]" dest="type_name [3122,3129]"/>
  <match src="call_argument [100464,100470]" dest="call_argument [39620,39626]"/>
  <match src=",: , [31327,31328]" dest=",: , [49721,49722]"/>
  <match src="): ) [106717,106718]" dest="): ) [70059,70060]"/>
  <match src="uint256: uint256 [45351,45358]" dest="uint256: uint256 [15484,15491]"/>
  <match src="uint256: uint256 [34798,34805]" dest="uint256: uint256 [53192,53199]"/>
  <match src="identifier: reject [98022,98028]" dest="identifier: reject [37178,37184]"/>
  <match src="): ) [54563,54564]" dest="): ) [22412,22413]"/>
  <match src="]: ] [105493,105494]" dest="]: ] [44649,44650]"/>
  <match src="): ) [94718,94719]" dest="): ) [33874,33875]"/>
  <match src="type_name [32059,32066]" dest="type_name [50453,50460]"/>
  <match src=".: . [101572,101573]" dest=".: . [40728,40729]"/>
  <match src="uint256: uint256 [43941,43948]" dest="uint256: uint256 [14074,14081]"/>
  <match src="parameter [9521,9525]" dest="parameter [10085,10089]"/>
  <match src="call_argument [21920,21958]" dest="call_argument [63880,63911]"/>
  <match src="parameter [56319,56329]" dest="parameter [24168,24178]"/>
  <match src="(: ( [56055,56056]" dest="(: ( [23904,23905]"/>
  <match src="if: if [27930,27932]" dest="if: if [46324,46326]"/>
  <match src="array_access [97725,97753]" dest="array_access [36881,36909]"/>
  <match src="identifier: encodePacked [30953,30965]" dest="identifier: encodePacked [49347,49359]"/>
  <match src="visibility [50286,50294]" dest="visibility [63770,63778]"/>
  <match src="type_name [5650,5657]" dest="type_name [6214,6221]"/>
  <match src="primitive_type [104264,104271]" dest="primitive_type [43420,43427]"/>
  <match src="identifier: value [8343,8348]" dest="identifier: value [8907,8912]"/>
  <match src="state_mutability [64718,64722]" dest="state_mutability [68251,68255]"/>
  <match src="(: ( [83504,83505]" dest="(: ( [73479,73480]"/>
  <match src="{: { [35732,35733]" dest="{: { [54126,54127]"/>
  <match src="): ) [94038,94039]" dest="): ) [33194,33195]"/>
  <match src="call_expression [94682,94736]" dest="call_expression [33838,33892]"/>
  <match src="): ) [55914,55915]" dest="): ) [23763,23764]"/>
  <match src="identifier: div [9669,9672]" dest="identifier: div [10233,10236]"/>
  <match src="identifier: a [1930,1931]" dest="identifier: a [2494,2495]"/>
  <match src="): ) [8560,8561]" dest="): ) [9124,9125]"/>
  <match src="identifier: getGovernancePeriod [45699,45718]" dest="identifier: getGovernancePeriod [15832,15851]"/>
  <match src="type_name [93719,93726]" dest="type_name [32875,32882]"/>
  <match src="return: return [95371,95377]" dest="return: return [34527,34533]"/>
  <match src="solidity: solidity [7,15]" dest="solidity: solidity [7,15]"/>
  <match src="return_type_definition [2594,2611]" dest="return_type_definition [3158,3175]"/>
  <match src="identifier: amount1In [55389,55398]" dest="identifier: amount1In [23238,23247]"/>
  <match src="identifier: statusOf [106701,106709]" dest="identifier: statusOf [70043,70051]"/>
  <match src=".: . [47438,47439]" dest=".: . [17571,17572]"/>
  <match src="call_expression [28499,28523]" dest="call_expression [46893,46917]"/>
  <match src="type_name [32037,32044]" dest="type_name [50431,50438]"/>
  <match src="): ) [47262,47263]" dest="): ) [17395,17396]"/>
  <match src=",: , [81333,81334]" dest=",: , [71635,71636]"/>
  <match src="&quot;: &quot; [58666,58667]" dest="&quot;: &quot; [74156,74157]"/>
  <match src="block_statement [94633,94666]" dest="block_statement [33789,33822]"/>
  <match src="visibility [29568,29576]" dest="visibility [47962,47970]"/>
  <match src="function: function [68082,68090]" dest="function: function [68740,68748]"/>
  <match src="memory: memory [54321,54327]" dest="memory: memory [22170,22176]"/>
  <match src="string_literal [22000,22036]" dest="string_literal [65106,65150]"/>
  <match src="&quot;: &quot; [83618,83619]" dest="&quot;: &quot; [81658,81659]"/>
  <match src="identifier: ethic [79094,79099]" dest="identifier: ethic [58870,58875]"/>
  <match src=",: , [52922,52923]" dest=",: , [56199,56200]"/>
  <match src="type_name [81448,81455]" dest="type_name [79046,79053]"/>
  <match src=".: . [29045,29046]" dest=".: . [47439,47440]"/>
  <match src="identifier: ethic [82096,82101]" dest="identifier: ethic [72324,72329]"/>
  <match src="function: function [105164,105172]" dest="function: function [44320,44328]"/>
  <match src="): ) [82463,82464]" dest="): ) [67853,67854]"/>
  <match src="type_cast_expression [36756,36787]" dest="type_cast_expression [55150,55181]"/>
  <match src="comment: // addresses are &quot;0x&quot; followed by 20 bytes of data which take up 2 characters each [34823,34905]" dest="comment: // addresses are &quot;0x&quot; followed by 20 bytes of data which take up 2 characters each [53217,53299]"/>
  <match src="identifier: Balance [88969,88976]" dest="identifier: Balance [30469,30476]"/>
  <match src="function_body [2612,2675]" dest="function_body [3176,3239]"/>
  <match src="call_argument [81577,81587]" dest="call_argument [72100,72110]"/>
  <match src="}: } [45911,45912]" dest="}: } [16044,16045]"/>
  <match src="identifier: msg [82372,82375]" dest="identifier: msg [73208,73211]"/>
  <match src="type_name [33433,33440]" dest="type_name [51827,51834]"/>
  <match src="constant: constant [42685,42693]" dest="constant: constant [12818,12826]"/>
  <match src="primitive_type [35868,35873]" dest="primitive_type [54262,54267]"/>
  <match src="binary_expression [7672,7677]" dest="binary_expression [8236,8241]"/>
  <match src="return: return [1376,1382]" dest="return: return [1940,1946]"/>
  <match src="string [25243,25278]" dest="string [80406,80436]"/>
  <match src="primitive_type [81295,81302]" dest="primitive_type [71597,71604]"/>
  <match src="primitive_type [6888,6894]" dest="primitive_type [7452,7458]"/>
  <match src="identifier: abi [91178,91181]" dest="identifier: abi [77488,77491]"/>
  <match src="memory: memory [7792,7798]" dest="memory: memory [8356,8362]"/>
  <match src="type_name [88158,88165]" dest="type_name [29658,29665]"/>
  <match src="call_expression [50682,50787]" dest="call_expression [63932,64043]"/>
  <match src="(: ( [28383,28384]" dest="(: ( [46777,46778]"/>
  <match src="[: [ [35385,35386]" dest="[: [ [53779,53780]"/>
  <match src="expression_statement [35517,35562]" dest="expression_statement [53911,53956]"/>
  <match src="}: } [8366,8367]" dest="}: } [8930,8931]"/>
  <match src="{: { [48368,48369]" dest="{: { [18501,18502]"/>
  <match src="call_expression [83110,83226]" dest="call_expression [82096,82293]"/>
  <match src=",: , [6372,6373]" dest=",: , [6936,6937]"/>
  <match src="type_name [105720,105727]" dest="type_name [44876,44883]"/>
  <match src="visibility [55678,55686]" dest="visibility [23527,23535]"/>
  <match src="parameter [103000,103014]" dest="parameter [42156,42170]"/>
  <match src=",: , [30066,30067]" dest=",: , [48460,48461]"/>
  <match src="uint256: uint256 [6679,6686]" dest="uint256: uint256 [7243,7250]"/>
  <match src="): ) [105552,105553]" dest="): ) [44708,44709]"/>
  <match src="pure: pure [31564,31568]" dest="pure: pure [49958,49962]"/>
  <match src="parameter [55593,55597]" dest="parameter [23442,23446]"/>
  <match src="{: { [6012,6013]" dest="{: { [6576,6577]"/>
  <match src="): ) [47051,47052]" dest="): ) [17184,17185]"/>
  <match src="=: = [100140,100141]" dest="=: = [39296,39297]"/>
  <match src="(: ( [55730,55731]" dest="(: ( [23579,23580]"/>
  <match src=",: , [29108,29109]" dest=",: , [47502,47503]"/>
  <match src="internal: internal [9383,9391]" dest="internal: internal [9947,9955]"/>
  <match src="member_expression [102234,102262]" dest="member_expression [41390,41418]"/>
  <match src="identifier: incrementBalanceOfStaged [81620,81644]" dest="identifier: incrementBalanceOfStaged [72143,72167]"/>
  <match src="identifier: b [6374,6375]" dest="identifier: b [6938,6939]"/>
  <match src="uint256: uint256 [82394,82401]" dest="uint256: uint256 [67810,67817]"/>
  <match src="parameter [100665,100679]" dest="parameter [39821,39835]"/>
  <match src="comment: /* Bonding */ [41914,41927]" dest="comment: /* Bonding */ [12047,12060]"/>
  <match src="): ) [46807,46808]" dest="): ) [16940,16941]"/>
  <match src="identifier: candidate [98067,98076]" dest="identifier: candidate [37223,37232]"/>
  <match src="public: public [94807,94813]" dest="public: public [33963,33969]"/>
  <match src="identifier: epoch [103966,103971]" dest="identifier: epoch [43122,43127]"/>
  <match src="user_defined_type [45972,45984]" dest="user_defined_type [16105,16117]"/>
  <match src="identifier: Global [88279,88285]" dest="identifier: Global [29779,29785]"/>
  <match src="function_body [47731,47786]" dest="function_body [17864,17919]"/>
  <match src="}: } [94477,94478]" dest="}: } [33633,33634]"/>
  <match src="visibility [2580,2588]" dest="visibility [3144,3152]"/>
  <match src=",: , [102433,102434]" dest=",: , [41589,41590]"/>
  <match src="identifier: payloadA [32091,32099]" dest="identifier: payloadA [50485,50493]"/>
  <match src=":: : [6996,6997]" dest=":: : [7560,7561]"/>
  <match src="identifier: balanceOf [54455,54464]" dest="identifier: balanceOf [22304,22313]"/>
  <match src="parameter [54794,54804]" dest="parameter [22643,22653]"/>
  <match src="=: = [102739,102740]" dest="=: = [41895,41896]"/>
  <match src=".: . [97146,97147]" dest=".: . [36302,36303]"/>
  <match src=".: . [101665,101666]" dest=".: . [40821,40822]"/>
  <match src="!: ! [31587,31588]" dest="!: ! [49981,49982]"/>
  <match src="type_name [64691,64698]" dest="type_name [79257,79264]"/>
  <match src="(: ( [34805,34806]" dest="(: ( [53199,53200]"/>
  <match src="uint256: uint256 [71048,71055]" dest="uint256: uint256 [71750,71757]"/>
  <match src="returns: returns [95031,95038]" dest="returns: returns [34187,34194]"/>
  <match src="[: [ [101249,101250]" dest="[: [ [40405,40406]"/>
  <match src="call_argument [53088,53097]" dest="call_argument [65696,65705]"/>
  <match src="primitive_type [56191,56195]" dest="primitive_type [24040,24044]"/>
  <match src="function_body [100249,100319]" dest="function_body [39405,39475]"/>
  <match src="type_name [102983,102990]" dest="type_name [42139,42146]"/>
  <match src="public: public [94221,94227]" dest="public: public [33377,33383]"/>
  <match src="identifier: amount [77763,77769]" dest="identifier: amount [59420,59426]"/>
  <match src="type_name [13987,13994]" dest="type_name [26976,26983]"/>
  <match src=".: . [100295,100296]" dest=".: . [39451,39452]"/>
  <match src="type_name [46575,46582]" dest="type_name [16708,16715]"/>
  <match src="comment: // 270 epochs = 45 days [43674,43697]" dest="comment: // 270 epochs = 45 days [13807,13830]"/>
  <match src="type_name [9406,9410]" dest="type_name [9970,9974]"/>
  <match src=",: , [28104,28105]" dest=",: , [46498,46499]"/>
  <match src="private: private [42329,42336]" dest="private: private [12462,12469]"/>
  <match src="using: using [80753,80758]" dest="using: using [71386,71391]"/>
  <match src="primitive_type [76130,76137]" dest="primitive_type [84305,84312]"/>
  <match src="identifier: candidates [104922,104932]" dest="identifier: candidates [44078,44088]"/>
  <match src="primitive_type [28856,28863]" dest="primitive_type [47250,47257]"/>
  <match src=",: , [101175,101176]" dest=",: , [40331,40332]"/>
  <match src="identifier: expiration [88433,88443]" dest="identifier: expiration [29933,29943]"/>
  <match src="visibility [32162,32170]" dest="visibility [50556,50564]"/>
  <match src="identifier: account [94948,94955]" dest="identifier: account [34104,34111]"/>
  <match src="(: ( [81488,81489]" dest="(: ( [72013,72014]"/>
  <match src="(: ( [46127,46128]" dest="(: ( [16260,16261]"/>
  <match src="(: ( [54980,54981]" dest="(: ( [22829,22830]"/>
  <match src="): ) [21272,21273]" dest="): ) [57010,57011]"/>
  <match src="address: address [44283,44290]" dest="address: address [14416,14423]"/>
  <match src=",: , [102774,102775]" dest=",: , [41930,41931]"/>
  <match src="identifier: periodFor [105558,105567]" dest="identifier: periodFor [44714,44723]"/>
  <match src="=: = [43986,43987]" dest="=: = [14119,14120]"/>
  <match src="identifier: that [85284,85288]" dest="identifier: that [81193,81197]"/>
  <match src="visibility [8445,8453]" dest="visibility [9009,9017]"/>
  <match src=",: , [28311,28312]" dest=",: , [46705,46706]"/>
  <match src="state_mutability [3262,3266]" dest="state_mutability [3826,3830]"/>
  <match src=".: . [93957,93958]" dest=".: . [33113,33114]"/>
  <match src="(: ( [81966,81967]" dest="(: ( [57240,57241]"/>
  <match src="primitive_type [96962,96969]" dest="primitive_type [36118,36125]"/>
  <match src="call_expression [79522,79562]" dest="call_expression [59934,59969]"/>
  <match src="identifier: _state [102296,102302]" dest="identifier: _state [41452,41458]"/>
  <match src="type_name [1290,1297]" dest="type_name [1854,1861]"/>
  <match src="identifier: z [35750,35751]" dest="identifier: z [54144,54145]"/>
  <match src="primitive_type [89035,89042]" dest="primitive_type [30535,30542]"/>
  <match src="primitive_type [86644,86651]" dest="primitive_type [75154,75161]"/>
  <match src="identifier: COLON [30354,30359]" dest="identifier: COLON [48748,48753]"/>
  <match src="variable_declaration_statement [7657,7671]" dest="variable_declaration_statement [8221,8235]"/>
  <match src="(: ( [93695,93696]" dest="(: ( [32851,32852]"/>
  <match src="(: ( [46452,46453]" dest="(: ( [16585,16586]"/>
  <match src="binary_expression [53120,53166]" dest="binary_expression [65760,65811]"/>
  <match src="state_mutability [45337,45341]" dest="state_mutability [15470,15474]"/>
  <match src="identifier: recipient [19727,19736]" dest="identifier: recipient [65334,65343]"/>
  <match src="primitive_type [9406,9410]" dest="primitive_type [9970,9974]"/>
  <match src="(: ( [89300,89301]" dest="(: ( [30800,30801]"/>
  <match src="identifier: _state [93088,93094]" dest="identifier: _state [32244,32250]"/>
  <match src="type_name [33852,33857]" dest="type_name [52246,52251]"/>
  <match src="user_defined_type [67580,67592]" dest="user_defined_type [67087,67099]"/>
  <match src="identifier: candidate [105084,105093]" dest="identifier: candidate [44240,44249]"/>
  <match src="type_name [27851,27858]" dest="type_name [46245,46252]"/>
  <match src="(: ( [2015,2016]" dest="(: ( [2579,2580]"/>
  <match src="primitive_type [54533,54540]" dest="primitive_type [22382,22389]"/>
  <match src="type_name [49931,49938]" dest="type_name [60878,60885]"/>
  <match src="): ) [83288,83289]" dest="): ) [80011,80012]"/>
  <match src=".: . [8539,8540]" dest=".: . [9103,9104]"/>
  <match src="type_name [106648,106655]" dest="type_name [69990,69997]"/>
  <match src="return_statement [8305,8361]" dest="return_statement [8869,8925]"/>
  <match src="state_mutability [55742,55746]" dest="state_mutability [23591,23595]"/>
  <match src="identifier: temp [7748,7752]" dest="identifier: temp [8312,8316]"/>
  <match src="identifier: Constants [96102,96111]" dest="identifier: Constants [35258,35267]"/>
  <match src="{: { [82353,82354]" dest="{: { [72576,72577]"/>
  <match src="user_defined_type [89213,89221]" dest="user_defined_type [30713,30721]"/>
  <match src=",: , [105408,105409]" dest=",: , [44564,44565]"/>
  <match src="identifier: add [82939,82942]" dest="identifier: add [74201,74204]"/>
  <match src="(: ( [101738,101739]" dest="(: ( [40894,40895]"/>
  <match src="identifier: accounts [95077,95085]" dest="identifier: accounts [34233,34241]"/>
  <match src="): ) [94008,94009]" dest="): ) [33164,33165]"/>
  <match src="}: } [33697,33698]" dest="}: } [52091,52092]"/>
  <match src="visibility [8830,8838]" dest="visibility [9394,9402]"/>
  <match src=".: . [100006,100007]" dest=".: . [39162,39163]"/>
  <match src="state_mutability [45219,45223]" dest="state_mutability [15352,15356]"/>
  <match src="identifier: redeemable [94072,94082]" dest="identifier: redeemable [33228,33238]"/>
  <match src="&quot;: &quot; [454,455]" dest="&quot;: &quot; [1018,1019]"/>
  <match src="): ) [48630,48631]" dest="): ) [18763,18764]"/>
  <match src="identifier: numerator [9799,9808]" dest="identifier: numerator [10363,10372]"/>
  <match src="return_statement [46819,46845]" dest="return_statement [16952,16978]"/>
  <match src="[: [ [105775,105776]" dest="[: [ [44931,44932]"/>
  <match src="identifier: ASCII_ZERO [34541,34551]" dest="identifier: ASCII_ZERO [52935,52945]"/>
  <match src="identifier: account [95455,95462]" dest="identifier: account [34611,34618]"/>
  <match src="function: function [55950,55958]" dest="function: function [23799,23807]"/>
  <match src="function: function [93883,93891]" dest="function: function [33039,33047]"/>
  <match src="identifier: _state [105630,105636]" dest="identifier: _state [44786,44792]"/>
  <match src="(: ( [84204,84205]" dest="(: ( [79382,79383]"/>
  <match src="visibility [43237,43244]" dest="visibility [13370,13377]"/>
  <match src="member_expression [6793,6798]" dest="member_expression [7357,7362]"/>
  <match src="=: = [83071,83072]" dest="=: = [73328,73329]"/>
  <match src="identifier: self [9362,9366]" dest="identifier: self [9926,9930]"/>
  <match src="parameter [30737,30751]" dest="parameter [49131,49145]"/>
  <match src="function: function [98459,98467]" dest="function: function [37615,37623]"/>
  <match src="call_struct_argument [47445,47466]" dest="call_struct_argument [17578,17599]"/>
  <match src="parameter [102451,102471]" dest="parameter [41607,41627]"/>
  <match src="call_expression [81863,81943]" dest="call_expression [72369,72452]"/>
  <match src="identifier: Approval [54065,54073]" dest="identifier: Approval [21914,21922]"/>
  <match src="(: ( [68121,68122]" dest="(: ( [68781,68782]"/>
  <match src=".: . [82277,82278]" dest=".: . [82487,82488]"/>
  <match src="call_expression [85617,85702]" dest="call_expression [79833,79963]"/>
  <match src="call_argument [102348,102354]" dest="call_argument [41504,41510]"/>
  <match src="identifier: amount [51797,51803]" dest="identifier: amount [27733,27739]"/>
  <match src="type_name [88425,88432]" dest="type_name [29925,29932]"/>
  <match src="&quot;: &quot; [92911,92912]" dest="&quot;: &quot; [32067,32068]"/>
  <match src="using_directive [92504,92531]" dest="using_directive [31660,31687]"/>
  <match src="call_argument [7026,7032]" dest="call_argument [7590,7596]"/>
  <match src="function: function [36586,36594]" dest="function: function [54980,54988]"/>
  <match src="identifier: add [100607,100610]" dest="identifier: add [39763,39766]"/>
  <match src="identifier: Require [107130,107137]" dest="identifier: Require [70472,70479]"/>
  <match src="identifier: value [13995,14000]" dest="identifier: value [26984,26989]"/>
  <match src="): ) [84446,84447]" dest="): ) [81057,81058]"/>
  <match src="{: { [94423,94424]" dest="{: { [33579,33580]"/>
  <match src="array_access [104915,104943]" dest="array_access [44071,44099]"/>
  <match src="{: { [103438,103439]" dest="{: { [42594,42595]"/>
  <match src="comment: // no offset [42193,42205]" dest="comment: // no offset [12326,12338]"/>
  <match src="number_literal: 0 [9558,9559]" dest="number_literal: 0 [10122,10123]"/>
  <match src="): ) [90843,90844]" dest="): ) [77153,77154]"/>
  <match src="call_argument [9026,9027]" dest="call_argument [9590,9591]"/>
  <match src="function_definition [48606,48700]" dest="function_definition [18739,18833]"/>
  <match src="address: address [55328,55335]" dest="address: address [23177,23184]"/>
  <match src="type_name [8058,8062]" dest="type_name [8622,8626]"/>
  <match src="number_literal: 0 [33152,33153]" dest="number_literal: 0 [51546,51547]"/>
  <match src="variable_declaration [68757,68776]" dest="variable_declaration [72708,72723]"/>
  <match src="member_expression [46166,46178]" dest="member_expression [16299,16311]"/>
  <match src="address: address [54154,54161]" dest="address: address [22003,22010]"/>
  <match src="member_expression [83353,83385]" dest="member_expression [73330,73372]"/>
  <match src="call_expression [82551,82597]" dest="call_expression [72759,72805]"/>
  <match src="binary_expression [66278,66309]" dest="binary_expression [82330,82374]"/>
  <match src="function_definition [45800,45912]" dest="function_definition [15933,16045]"/>
  <match src=",: , [32125,32126]" dest=",: , [50519,50520]"/>
  <match src=".: . [94695,94696]" dest=".: . [33851,33852]"/>
  <match src="(: ( [16058,16059]" dest="(: ( [19859,19860]"/>
  <match src=".: . [8116,8117]" dest=".: . [8680,8681]"/>
  <match src="call_argument [31752,31757]" dest="call_argument [50146,50151]"/>
  <match src="type_name [3985,3992]" dest="type_name [4549,4556]"/>
  <match src="): ) [104855,104856]" dest="): ) [44011,44012]"/>
  <match src=",: , [91594,91595]" dest=",: , [77904,77905]"/>
  <match src="type_name [48759,48766]" dest="type_name [18892,18899]"/>
  <match src="call_expression [35400,35423]" dest="call_expression [53794,53817]"/>
  <match src="type_name [3996,4003]" dest="type_name [4560,4567]"/>
  <match src="(: ( [54313,54314]" dest="(: ( [22162,22163]"/>
  <match src="): ) [28522,28523]" dest="): ) [46916,46917]"/>
  <match src="function_body [45360,45404]" dest="function_body [15493,15537]"/>
  <match src="call_expression [91537,91594]" dest="call_expression [77847,77904]"/>
  <match src="type_name [6888,6894]" dest="type_name [7452,7458]"/>
  <match src="identifier: account [101863,101870]" dest="identifier: account [41019,41026]"/>
  <match src="identifier: value [51042,51047]" dest="identifier: value [73566,73571]"/>
  <match src="identifier: result [36000,36006]" dest="identifier: result [54394,54400]"/>
  <match src="]: ] [95712,95713]" dest="]: ] [34868,34869]"/>
  <match src="): ) [5931,5932]" dest="): ) [6495,6496]"/>
  <match src="): ) [29956,29957]" dest="): ) [48350,48351]"/>
  <match src="=: = [34796,34797]" dest="=: = [53190,53191]"/>
  <match src="internal: internal [44863,44871]" dest="internal: internal [14996,15004]"/>
  <match src="identifier: accounts [94939,94947]" dest="identifier: accounts [34095,34103]"/>
  <match src=",: , [97378,97379]" dest=",: , [36534,36535]"/>
  <match src="call_expression [6354,6376]" dest="call_expression [6918,6940]"/>
  <match src="identifier: reserve0 [55507,55515]" dest="identifier: reserve0 [23356,23364]"/>
  <match src="=: = [104353,104354]" dest="=: = [43509,43510]"/>
  <match src="): ) [27939,27940]" dest="): ) [46333,46334]"/>
  <match src="type_name [96764,96771]" dest="type_name [35920,35927]"/>
  <match src="uint256: uint256 [105516,105523]" dest="uint256: uint256 [44672,44679]"/>
  <match src="{: { [30196,30197]" dest="{: { [48590,48591]"/>
  <match src="call_argument [35063,35084]" dest="call_argument [53457,53478]"/>
  <match src="function: function [48606,48614]" dest="function: function [18739,18747]"/>
  <match src="identifier: Unbond [83759,83765]" dest="identifier: Unbond [73621,73627]"/>
  <match src="identifier: value [7909,7914]" dest="identifier: value [8473,8478]"/>
  <match src="call_expression [96191,96308]" dest="call_expression [35347,35464]"/>
  <match src="type_name [28256,28260]" dest="type_name [46650,46654]"/>
  <match src="comment: // 42 epochs fluid = 7 days [43463,43490]" dest="comment: // 42 epochs fluid = 7 days [13596,13623]"/>
  <match src="identifier: div [84538,84541]" dest="identifier: div [73930,73933]"/>
  <match src="(: ( [94693,94694]" dest="(: ( [33849,33850]"/>
  <match src="primitive_type [33852,33857]" dest="primitive_type [52246,52251]"/>
  <match src="identifier: DEBT_RATIO_CAP [43727,43741]" dest="identifier: DEBT_RATIO_CAP [13860,13874]"/>
  <match src="identifier: amount [20458,20464]" dest="identifier: amount [59604,59610]"/>
  <match src="}: } [48399,48400]" dest="}: } [18532,18533]"/>
  <match src="type_name [13750,13757]" dest="type_name [26739,26746]"/>
  <match src="]: ] [97495,97496]" dest="]: ] [36651,36652]"/>
  <match src="uint256: uint256 [18996,19003]" dest="uint256: uint256 [20006,20013]"/>
  <match src="): ) [25278,25279]" dest="): ) [80436,80437]"/>
  <match src="parameter [8680,8691]" dest="parameter [9244,9255]"/>
  <match src=".: . [104882,104883]" dest=".: . [44038,44039]"/>
  <match src="(: ( [82318,82319]" dest="(: ( [72521,72522]"/>
  <match src=".: . [81648,81649]" dest=".: . [72171,72172]"/>
  <match src="identifier: timestamp [59991,60000]" dest="identifier: timestamp [84261,84270]"/>
  <match src="(: ( [68518,68519]" dest="(: ( [68871,68872]"/>
  <match src="type_name [69213,69220]" dest="type_name [62614,62621]"/>
  <match src="visibility [47526,47534]" dest="visibility [17659,17667]"/>
  <match src="visibility [98078,98084]" dest="visibility [37234,37240]"/>
  <match src="binary_expression [87225,87233]" dest="binary_expression [75735,75743]"/>
  <match src="returns: returns [16210,16217]" dest="returns: returns [58801,58808]"/>
  <match src="call_argument [7187,7215]" dest="call_argument [7751,7779]"/>
  <match src="call_expression [100432,100471]" dest="call_expression [39588,39627]"/>
  <match src="function: function [94201,94209]" dest="function: function [33357,33365]"/>
  <match src="bool: bool [98383,98387]" dest="bool: bool [37539,37543]"/>
  <match src="string_literal [21920,21958]" dest="string_literal [63880,63911]"/>
  <match src="identifier: getBootstrappingPeriod [97269,97291]" dest="identifier: getBootstrappingPeriod [36425,36447]"/>
  <match src="primitive_type [35058,35062]" dest="primitive_type [53452,53456]"/>
  <match src="state_mutability [97953,97957]" dest="state_mutability [37109,37113]"/>
  <match src="&quot;: &quot; [84012,84013]" dest="&quot;: &quot; [81915,81916]"/>
  <match src="): ) [90815,90816]" dest="): ) [77125,77126]"/>
  <match src="?: ? [10178,10179]" dest="?: ? [10742,10743]"/>
  <match src="{: { [46809,46810]" dest="{: { [16942,16943]"/>
  <match src="identifier: period [104401,104407]" dest="identifier: period [43557,43563]"/>
  <match src="(: ( [44392,44393]" dest="(: ( [14525,14526]"/>
  <match src=".: . [9548,9549]" dest=".: . [10112,10113]"/>
  <match src="parameter [54377,54382]" dest="parameter [22226,22231]"/>
  <match src="library_declaration [61,4769]" dest="library_declaration [625,5333]"/>
  <match src="state_variable_declaration [92573,92687]" dest="state_variable_declaration [31729,31843]"/>
  <match src=".: . [104716,104717]" dest=".: . [43872,43873]"/>
  <match src="parameter [81489,81502]" dest="parameter [72014,72027]"/>
  <match src="member_expression [97859,97876]" dest="member_expression [37015,37032]"/>
  <match src="event_paramater [81191,81204]" dest="event_paramater [61385,61398]"/>
  <match src="return_statement [9281,9311]" dest="return_statement [9845,9875]"/>
  <match src="(: ( [29466,29467]" dest="(: ( [47860,47861]"/>
  <match src="): ) [9525,9526]" dest="): ) [10089,10090]"/>
  <match src="visibility [101794,101802]" dest="visibility [40950,40958]"/>
  <match src="identifier: epochs [102610,102616]" dest="identifier: epochs [41766,41772]"/>
  <match src="visibility [43523,43530]" dest="visibility [13656,13663]"/>
  <match src="type_name [89188,89195]" dest="type_name [30688,30695]"/>
  <match src="function: function [91457,91465]" dest="function: function [77767,77775]"/>
  <match src="call_argument [91596,91657]" dest="call_argument [77906,77967]"/>
  <match src="]: ] [96564,96565]" dest="]: ] [35720,35721]"/>
  <match src="identifier: getPairAddress [48615,48629]" dest="identifier: getPairAddress [18748,18762]"/>
  <match src="inheritance_specifier [108032,108037]" dest="inheritance_specifier [83541,83546]"/>
  <match src="internal: internal [46269,46277]" dest="internal: internal [16402,16410]"/>
  <match src="identifier: expiring [103806,103814]" dest="identifier: expiring [42962,42970]"/>
  <match src="string: string [32243,32249]" dest="string: string [50637,50643]"/>
  <match src="state_mutability [94814,94818]" dest="state_mutability [33970,33974]"/>
  <match src="): ) [103689,103690]" dest="): ) [42845,42846]"/>
  <match src="primitive_type [77755,77762]" dest="primitive_type [59412,59419]"/>
  <match src="function: function [99624,99632]" dest="function: function [38780,38788]"/>
  <match src="call_struct_argument [47899,47925]" dest="call_struct_argument [18032,18058]"/>
  <match src=".: . [93209,93210]" dest=".: . [32365,32366]"/>
  <match src="struct_member [89188,89204]" dest="struct_member [30688,30704]"/>
  <match src=".: . [102112,102113]" dest=".: . [41268,41269]"/>
  <match src="identifier: stringify [34685,34694]" dest="identifier: stringify [53079,53088]"/>
  <match src="expression_statement [91228,91261]" dest="expression_statement [77538,77571]"/>
  <match src=".: . [95671,95672]" dest=".: . [34827,34828]"/>
  <match src="uint256: uint256 [71320,71327]" dest="uint256: uint256 [66857,66864]"/>
  <match src=".: . [6604,6605]" dest=".: . [7168,7169]"/>
  <match src="): ) [44893,44894]" dest="): ) [15026,15027]"/>
  <match src="): ) [5843,5844]" dest="): ) [6407,6408]"/>
  <match src="returns: returns [95343,95350]" dest="returns: returns [34499,34506]"/>
  <match src="memory: memory [104842,104848]" dest="memory: memory [43998,44004]"/>
  <match src="call_expression [68239,68301]" dest="call_expression [68049,68074]"/>
  <match src="&quot;: &quot; [65535,65536]" dest="&quot;: &quot; [60847,60848]"/>
  <match src="}: } [93876,93877]" dest="}: } [33032,33033]"/>
  <match src="): ) [9027,9028]" dest="): ) [9591,9592]"/>
  <match src="uint256: uint256 [10064,10071]" dest="uint256: uint256 [10628,10635]"/>
  <match src="identifier: div [7238,7241]" dest="identifier: div [7802,7805]"/>
  <match src="variable_declaration_statement [34141,34179]" dest="variable_declaration_statement [52535,52573]"/>
  <match src="identifier: D256 [9591,9595]" dest="identifier: D256 [10155,10159]"/>
  <match src="uint256: uint256 [3985,3992]" dest="uint256: uint256 [4549,4556]"/>
  <match src="call_argument [84239,84243]" dest="call_argument [81135,81139]"/>
  <match src="string [81907,81942]" dest="string [72413,72451]"/>
  <match src="return_type_definition [9256,9270]" dest="return_type_definition [9820,9834]"/>
  <match src="string [22000,22036]" dest="string [65106,65150]"/>
  <match src=",: , [102998,102999]" dest=",: , [42154,42155]"/>
  <match src="identifier: payloadA [30769,30777]" dest="identifier: payloadA [49163,49171]"/>
  <match src="bytes32: bytes32 [32059,32066]" dest="bytes32: bytes32 [50453,50460]"/>
  <match src="pure: pure [1675,1679]" dest="pure: pure [2239,2243]"/>
  <match src="primitive_type [13730,13737]" dest="primitive_type [26719,26726]"/>
  <match src="type_name [21071,21078]" dest="type_name [56868,56875]"/>
  <match src="function: function [21039,21047]" dest="function: function [56844,56852]"/>
  <match src="identifier: a [1360,1361]" dest="identifier: a [1924,1925]"/>
  <match src="identifier: spender [103163,103170]" dest="identifier: spender [42319,42326]"/>
  <match src="identifier: sender [19781,19787]" dest="identifier: sender [65403,65409]"/>
  <match src="call_expression [100750,100795]" dest="call_expression [39906,39951]"/>
  <match src="member_expression [59985,60000]" dest="member_expression [84255,84270]"/>
  <match src="}: } [93230,93231]" dest="}: } [32386,32387]"/>
  <match src="identifier: staged [101674,101680]" dest="identifier: staged [40830,40836]"/>
  <match src="public: public [93156,93162]" dest="public: public [32312,32318]"/>
  <match src="identifier: current [88351,88358]" dest="identifier: current [29851,29858]"/>
  <match src="indexed: indexed [99417,99424]" dest="indexed: indexed [38573,38580]"/>
  <match src="identifier: a [3993,3994]" dest="identifier: a [4557,4558]"/>
  <match src="(: ( [104616,104617]" dest="(: ( [43772,43773]"/>
  <match src="type_name [19738,19745]" dest="type_name [65360,65367]"/>
  <match src="parameter [95002,95017]" dest="parameter [34158,34173]"/>
  <match src="number_literal: 120 [27525,27528]" dest="number_literal: 120 [45919,45922]"/>
  <match src="(: ( [102020,102021]" dest="(: ( [41176,41177]"/>
  <match src="identifier: getGovernanceProposalThreshold [46072,46102]" dest="identifier: getGovernanceProposalThreshold [16205,16235]"/>
  <match src="(: ( [1216,1217]" dest="(: ( [1780,1781]"/>
  <match src="visibility [9498,9506]" dest="visibility [10062,10070]"/>
  <match src="comment: // 7 days at 6 epochs per day [41489,41518]" dest="comment: // 7 days at 6 epochs per day [11622,11651]"/>
  <match src="visibility [95618,95624]" dest="visibility [34774,34780]"/>
  <match src="identifier: sub [103341,103344]" dest="identifier: sub [42497,42500]"/>
  <match src="(: ( [48051,48052]" dest="(: ( [18184,18185]"/>
  <match src="identifier: one [5954,5957]" dest="identifier: one [6518,6521]"/>
  <match src="identifier: lessPhantom [83339,83350]" dest="identifier: epoch [64062,64067]"/>
  <match src="uint256: uint256 [79187,79194]" dest="uint256: uint256 [79974,79981]"/>
  <match src="call_expression [32630,32649]" dest="call_expression [51024,51043]"/>
  <match src="identifier: shift [35529,35534]" dest="identifier: shift [53923,53928]"/>
  <match src="identifier: candidate [98136,98145]" dest="identifier: candidate [37292,37301]"/>
  <match src="variable_declaration [34007,34021]" dest="variable_declaration [52401,52415]"/>
  <match src="]: ] [88461,88462]" dest="]: ] [29961,29962]"/>
  <match src="call_argument [106775,106796]" dest="call_argument [70117,70138]"/>
  <match src="identifier: Require [83911,83918]" dest="identifier: Require [81821,81828]"/>
  <match src="call_argument [82760,82770]" dest="call_argument [74105,74115]"/>
  <match src="identifier: _state [94166,94172]" dest="identifier: _state [33322,33328]"/>
  <match src=".: . [106948,106949]" dest=".: . [70290,70291]"/>
  <match src="returns: returns [97958,97965]" dest="returns: returns [37114,37121]"/>
  <match src="member_expression [104876,104893]" dest="member_expression [44032,44049]"/>
  <match src="type_name [42485,42492]" dest="type_name [12618,12625]"/>
  <match src=".: . [100424,100425]" dest=".: . [39580,39581]"/>
  <match src="member_expression [96826,96870]" dest="member_expression [35982,36026]"/>
  <match src="]: ] [102572,102573]" dest="]: ] [41728,41729]"/>
  <match src="uint256: uint256 [47287,47294]" dest="uint256: uint256 [17420,17427]"/>
  <match src="return_type_definition [94131,94148]" dest="return_type_definition [33287,33304]"/>
  <match src="internal: internal [104299,104307]" dest="internal: internal [43455,43463]"/>
  <match src="identifier: Fluid [95276,95281]" dest="identifier: Fluid [34432,34437]"/>
  <match src="state_variable_declaration [106538,106583]" dest="state_variable_declaration [69880,69925]"/>
  <match src="if: if [66737,66739]" dest="if: if [68995,68997]"/>
  <match src="return_type_definition [44769,44786]" dest="return_type_definition [14902,14919]"/>
  <match src="identifier: amount [101112,101118]" dest="identifier: amount [40268,40274]"/>
  <match src=".: . [104943,104944]" dest=".: . [44099,44100]"/>
  <match src="): ) [28342,28343]" dest="): ) [46736,46737]"/>
  <match src="): ) [33601,33602]" dest="): ) [51995,51996]"/>
  <match src="identifier: totalBonded [74044,74055]" dest="identifier: totalRedeemable [68396,68411]"/>
  <match src="function_body [102078,102362]" dest="function_body [41234,41518]"/>
  <match src="return: return [96981,96987]" dest="return: return [36137,36143]"/>
  <match src="): ) [6375,6376]" dest="): ) [6939,6940]"/>
  <match src="call_argument [79418,79429]" dest="call_argument [64191,64202]"/>
  <match src="type_name [32109,32116]" dest="type_name [50503,50510]"/>
  <match src="(: ( [94774,94775]" dest="(: ( [33930,33931]"/>
  <match src="function_definition [81743,82018]" dest="function_definition [72241,72502]"/>
  <match src="): ) [74424,74425]" dest="): ) [68368,68369]"/>
  <match src="view: view [54421,54425]" dest="view: view [22270,22274]"/>
  <match src="): ) [9240,9241]" dest="): ) [9804,9805]"/>
  <match src="parameter [97191,97204]" dest="parameter [36347,36360]"/>
  <match src="primitive_type [12344,12351]" dest="primitive_type [25333,25340]"/>
  <match src="parameter [32109,32125]" dest="parameter [50503,50519]"/>
  <match src="identifier: account [94783,94790]" dest="identifier: account [33939,33946]"/>
  <match src="visibility [105739,105747]" dest="visibility [44895,44903]"/>
  <match src="{: { [104018,104019]" dest="{: { [43174,43175]"/>
  <match src="identifier: must [28820,28824]" dest="identifier: must [47214,47218]"/>
  <match src="identifier: value [81900,81905]" dest="identifier: value [72406,72411]"/>
  <match src="(: ( [78006,78007]" dest="(: ( [61508,61509]"/>
  <match src="member_expression [95188,95234]" dest="member_expression [34344,34390]"/>
  <match src="call_expression [8524,8561]" dest="call_expression [9088,9125]"/>
  <match src="(: ( [8534,8535]" dest="(: ( [9098,9099]"/>
  <match src="parameter [8058,8069]" dest="parameter [8622,8633]"/>
  <match src="type_cast_expression [50085,50098]" dest="type_cast_expression [56438,56451]"/>
  <match src="bytes: bytes [34758,34763]" dest="bytes: bytes [53152,53157]"/>
  <match src="&quot;: &quot; [66359,66360]" dest="&quot;: &quot; [82419,82420]"/>
  <match src="number_literal: 0x3e [27697,27701]" dest="number_literal: 0x3e [46091,46095]"/>
  <match src="uint256: uint256 [51911,51918]" dest="uint256: uint256 [27847,27854]"/>
  <match src="function_body [30175,30667]" dest="function_body [48569,49061]"/>
  <match src="if: if [94847,94849]" dest="if: if [34003,34005]"/>
  <match src=",: , [82945,82946]" dest=",: , [74207,74208]"/>
  <match src="indexed: indexed [81117,81124]" dest="indexed: indexed [71549,71556]"/>
  <match src="address: address [81295,81302]" dest="address: address [71597,71604]"/>
  <match src="call_argument [58282,58319]" dest="call_argument [74039,74075]"/>
  <match src="event: event [90770,90775]" dest="event: event [77080,77085]"/>
  <match src="return_type_definition [96510,96527]" dest="return_type_definition [35666,35683]"/>
  <match src="uint256: uint256 [81262,81269]" dest="uint256: uint256 [71735,71742]"/>
  <match src="new: new [34936,34939]" dest="new: new [53330,53333]"/>
  <match src="type_name [12329,12336]" dest="type_name [25318,25325]"/>
  <match src=".: . [29680,29681]" dest=".: . [48074,48075]"/>
  <match src="view: view [95625,95629]" dest="view: view [34781,34785]"/>
  <match src="pure: pure [44984,44988]" dest="pure: pure [15117,15121]"/>
  <match src="identifier: account [102411,102418]" dest="identifier: account [41567,41574]"/>
  <match src=".: . [7014,7015]" dest=".: . [7578,7579]"/>
  <match src="identifier: amount [101442,101448]" dest="identifier: amount [40598,40604]"/>
  <match src=".: . [93751,93752]" dest=".: . [32907,32908]"/>
  <match src="struct_member [88913,88928]" dest="struct_member [30413,30428]"/>
  <match src="expression_statement [107130,107252]" dest="expression_statement [70472,70594]"/>
  <match src="struct_declaration [88656,88838]" dest="struct_declaration [30156,30338]"/>
  <match src="function_body [32184,32752]" dest="function_body [50578,51146]"/>
  <match src="parameter [759,768]" dest="parameter [1323,1332]"/>
  <match src="(: ( [95871,95872]" dest="(: ( [35027,35028]"/>
  <match src=".: . [82375,82376]" dest=".: . [73211,73212]"/>
  <match src="user_defined_type [5880,5884]" dest="user_defined_type [6444,6448]"/>
  <match src="): ) [73176,73177]" dest="): ) [59178,59179]"/>
  <match src="identifier: snapshotTotalBonded [103520,103539]" dest="identifier: snapshotTotalBonded [42676,42695]"/>
  <match src="visibility [105429,105437]" dest="visibility [44585,44593]"/>
  <match src="inheritance_specifier [108039,108049]" dest="inheritance_specifier [78810,78820]"/>
  <match src="address: address [55163,55170]" dest="address: address [23012,23019]"/>
  <match src="}: } [31988,31989]" dest="}: } [50382,50383]"/>
  <match src="member_expression [104083,104105]" dest="member_expression [43239,43261]"/>
  <match src="yul_evm_builtin [91737,91743]" dest="yul_evm_builtin [78047,78053]"/>
  <match src="identifier: lockedUntil [105495,105506]" dest="identifier: lockedUntil [44651,44662]"/>
  <match src="comment: // TODO Check this again before the Serenity release, because all addresses will be [86993,87076]" dest="comment: // TODO Check this again before the Serenity release, because all addresses will be [75503,75586]"/>
  <match src="uint256: uint256 [44160,44167]" dest="uint256: uint256 [14293,14300]"/>
  <match src="{: { [45242,45243]" dest="{: { [15375,15376]"/>
  <match src="): ) [102180,102181]" dest="): ) [41336,41337]"/>
  <match src="function_body [103551,103613]" dest="function_body [42707,42769]"/>
  <match src="state_mutability [45844,45848]" dest="state_mutability [15977,15981]"/>
  <match src="external: external [69190,69198]" dest="external: external [64456,64464]"/>
  <match src=".: . [79542,79543]" dest=".: . [59941,59942]"/>
  <match src="identifier: j [34266,34267]" dest="identifier: j [52660,52661]"/>
  <match src="identifier: coupons [102624,102631]" dest="identifier: coupons [41780,41787]"/>
  <match src="[: [ [94455,94456]" dest="[: [ [33611,33612]"/>
  <match src="return_statement [47063,47097]" dest="return_statement [17196,17230]"/>
  <match src=".: . [93648,93649]" dest=".: . [32804,32805]"/>
  <match src="(: ( [45325,45326]" dest="(: ( [15458,15459]"/>
  <match src="return: return [93635,93641]" dest="return: return [32791,32797]"/>
  <match src="identifier: spender [51033,51040]" dest="identifier: spender [65197,65204]"/>
  <match src="call_expression [29325,29344]" dest="call_expression [47719,47738]"/>
  <match src="identifier: sub [102574,102577]" dest="identifier: sub [41730,41733]"/>
  <match src="function: function [93779,93787]" dest="function: function [32935,32943]"/>
  <match src="struct_member [88726,88742]" dest="struct_member [30226,30242]"/>
  <match src="): ) [103971,103972]" dest="): ) [43127,43128]"/>
  <match src="primitive_type [42862,42869]" dest="primitive_type [12995,13002]"/>
  <match src="call_argument [31010,31014]" dest="call_argument [49404,49408]"/>
  <match src="[: [ [102145,102146]" dest="[: [ [41301,41302]"/>
  <match src="): ) [16066,16067]" dest="): ) [19867,19868]"/>
  <match src="function_body [97842,97902]" dest="function_body [36998,37058]"/>
  <match src="for_statement [7652,7731]" dest="for_statement [8216,8295]"/>
  <match src=",: , [69333,69334]" dest=",: , [73564,73565]"/>
  <match src="parameter [45744,45751]" dest="parameter [15877,15884]"/>
  <match src="struct_declaration [5730,5772]" dest="struct_declaration [6294,6336]"/>
  <match src="/: / [3413,3414]" dest="/: / [3977,3978]"/>
  <match src="&quot;: &quot; [82837,82838]" dest="&quot;: &quot; [73003,73004]"/>
  <match src=".: . [101361,101362]" dest=".: . [40517,40518]"/>
  <match src="address: address [50085,50092]" dest="address: address [56438,56445]"/>
  <match src="visibility [35684,35691]" dest="visibility [54078,54085]"/>
  <match src="call_argument [84060,84079]" dest="call_argument [80903,80925]"/>
  <match src="{: { [6989,6990]" dest="{: { [7553,7554]"/>
  <match src="call_expression [103593,103606]" dest="call_expression [42749,42762]"/>
  <match src="call_argument [79305,79316]" dest="call_argument [64140,64151]"/>
  <match src="identifier: Decimal [67580,67587]" dest="identifier: Decimal [67087,67094]"/>
  <match src="(: ( [101437,101438]" dest="(: ( [40593,40594]"/>
  <match src="function: function [90823,90831]" dest="function: function [77133,77141]"/>
  <match src="identifier: to [56155,56157]" dest="identifier: to [24004,24006]"/>
  <match src="pure: pure [5977,5981]" dest="pure: pure [6541,6545]"/>
  <match src="external: external [54480,54488]" dest="external: external [22329,22337]"/>
  <match src="identifier: candidate [104336,104345]" dest="identifier: candidate [43492,43501]"/>
  <match src="=: = [5672,5673]" dest="=: = [6236,6237]"/>
  <match src="identifier: value [81199,81204]" dest="identifier: value [61393,61398]"/>
  <match src="call_argument [82005,82010]" dest="call_argument [72489,72494]"/>
  <match src="variable_declaration [66988,67011]" dest="variable_declaration [80993,81010]"/>
  <match src="function_body [95494,95554]" dest="function_body [34650,34710]"/>
  <match src="call_argument [32554,32573]" dest="call_argument [50948,50967]"/>
  <match src="member_expression [7196,7210]" dest="member_expression [7760,7774]"/>
  <match src="function_body [95056,95288]" dest="function_body [34212,34444]"/>
  <match src="identifier: one [66869,66872]" dest="identifier: one [69036,69039]"/>
  <match src="{: { [6557,6558]" dest="{: { [7121,7122]"/>
  <match src="address: address [91484,91491]" dest="address: address [77794,77801]"/>
  <match src="identifier: reason [31091,31097]" dest="identifier: reason [49485,49491]"/>
  <match src="function_definition [46635,46739]" dest="function_definition [16768,16872]"/>
  <match src="identifier: result [36567,36573]" dest="identifier: result [54961,54967]"/>
  <match src="identifier: value [9663,9668]" dest="identifier: value [10227,10232]"/>
  <match src="[: [ [105323,105324]" dest="[: [ [44479,44480]"/>
  <match src="identifier: INCENTIVE [43090,43099]" dest="identifier: INCENTIVE [13223,13232]"/>
  <match src="identifier: candidates [89377,89387]" dest="identifier: candidates [30877,30887]"/>
  <match src="identifier: that [107138,107142]" dest="identifier: that [70480,70484]"/>
  <match src=".: . [10092,10093]" dest=".: . [10656,10657]"/>
  <match src="array_access [105470,105494]" dest="array_access [44626,44650]"/>
  <match src="}: } [1390,1391]" dest="}: } [1954,1955]"/>
  <match src="): ) [8767,8768]" dest="): ) [9331,9332]"/>
  <match src="identifier: D256 [47439,47443]" dest="identifier: D256 [17572,17576]"/>
  <match src="pure: pure [33834,33838]" dest="pure: pure [52228,52232]"/>
  <match src="(: ( [32225,32226]" dest="(: ( [50619,50620]"/>
  <match src="function_definition [46745,46851]" dest="function_definition [16878,16984]"/>
  <match src="member_expression [101548,101579]" dest="member_expression [40704,40735]"/>
  <match src="=: = [27415,27416]" dest="=: = [45809,45810]"/>
  <match src="uint256: uint256 [88045,88052]" dest="uint256: uint256 [29545,29552]"/>
  <match src="identifier: reason [31802,31808]" dest="identifier: reason [50196,50202]"/>
  <match src=".: . [33001,33002]" dest=".: . [51395,51396]"/>
  <match src="primitive_type [81350,81357]" dest="primitive_type [79151,79158]"/>
  <match src="): ) [55533,55534]" dest="): ) [23382,23383]"/>
  <match src="pure: pure [8458,8462]" dest="pure: pure [9022,9026]"/>
  <match src=",: , [81905,81906]" dest=",: , [72411,72412]"/>
  <match src="memory: memory [47406,47412]" dest="memory: memory [17539,17545]"/>
  <match src="call_expression [35538,35561]" dest="call_expression [53932,53955]"/>
  <match src="primitive_type [100518,100525]" dest="primitive_type [39674,39681]"/>
  <match src="type_name [93177,93184]" dest="type_name [32333,32340]"/>
  <match src="identifier: _state [104372,104378]" dest="identifier: _state [43528,43534]"/>
  <match src="assignment_expression [102296,102355]" dest="assignment_expression [41452,41511]"/>
  <match src="primitive_type [41756,41763]" dest="primitive_type [11889,11896]"/>
  <match src="identifier: account [94456,94463]" dest="identifier: account [33612,33619]"/>
  <match src="(: ( [45350,45351]" dest="(: ( [15483,15484]"/>
  <match src="(: ( [97419,97420]" dest="(: ( [36575,36576]"/>
  <match src="[: [ [102204,102205]" dest="[: [ [41360,41361]"/>
  <match src="function_definition [3972,4100]" dest="function_definition [4536,4664]"/>
  <match src="primitive_type [55091,55095]" dest="primitive_type [22940,22944]"/>
  <match src="): ) [101118,101119]" dest="): ) [40274,40275]"/>
  <match src="identifier: balanceOfRewardedWithPhantom [74234,74262]" dest="identifier: redeemAmount [64753,64765]"/>
  <match src="identifier: z [36391,36392]" dest="identifier: z [54785,54786]"/>
  <match src="{: { [49974,49975]" dest="{: { [56398,56399]"/>
  <match src="return: return [94050,94056]" dest="return: return [33206,33212]"/>
  <match src="array_access [102866,102890]" dest="array_access [42022,42046]"/>
  <match src="call_argument [31318,31326]" dest="call_argument [49712,49720]"/>
  <match src="returns: returns [95886,95893]" dest="returns: returns [35042,35049]"/>
  <match src="[: [ [96839,96840]" dest="[: [ [35995,35996]"/>
  <match src=",: , [66327,66328]" dest=",: , [82392,82393]"/>
  <match src="identifier: file [29503,29507]" dest="identifier: file [47897,47901]"/>
  <match src="{: { [92973,92974]" dest="{: { [32129,32130]"/>
  <match src="(: ( [79536,79537]" dest="(: ( [59939,59940]"/>
  <match src="identifier: value [47601,47606]" dest="identifier: value [17734,17739]"/>
  <match src="=: = [84345,84346]" dest="=: = [62077,62078]"/>
  <match src="identifier: epoch [96491,96496]" dest="identifier: epoch [35647,35652]"/>
  <match src=".: . [7633,7634]" dest=".: . [8197,8198]"/>
  <match src="call_expression [82096,82103]" dest="call_expression [72324,72331]"/>
  <match src="uint256: uint256 [99658,99665]" dest="uint256: uint256 [38814,38821]"/>
  <match src="(: ( [100610,100611]" dest="(: ( [39766,39767]"/>
  <match src="if: if [30872,30874]" dest="if: if [49266,49268]"/>
  <match src="type_name [93062,93069]" dest="type_name [32218,32225]"/>
  <match src="member_expression [104525,104559]" dest="member_expression [43681,43715]"/>
  <match src="state_mutability [4676,4680]" dest="state_mutability [5240,5244]"/>
  <match src="call_argument [81888,81898]" dest="call_argument [72394,72404]"/>
  <match src="uint256: uint256 [46800,46807]" dest="uint256: uint256 [16933,16940]"/>
  <match src="identifier: errorMessage [1325,1337]" dest="identifier: errorMessage [1889,1901]"/>
  <match src="(: ( [98150,98151]" dest="(: ( [37306,37307]"/>
  <match src="uint256: uint256 [11729,11736]" dest="uint256: uint256 [24718,24725]"/>
  <match src="address: address [63943,63950]" dest="address: address [28731,28738]"/>
  <match src="): ) [105427,105428]" dest="): ) [44583,44584]"/>
  <match src="primitive_type [42069,42076]" dest="primitive_type [12202,12209]"/>
  <match src="address: address [51894,51901]" dest="address: address [27830,27837]"/>
  <match src="expression_statement [85617,85703]" dest="expression_statement [79833,79964]"/>
  <match src="): ) [7212,7213]" dest="): ) [7776,7777]"/>
  <match src="(: ( [92746,92747]" dest="(: ( [31902,31903]"/>
  <match src="(: ( [92872,92873]" dest="(: ( [32028,32029]"/>
  <match src="primitive_type [74146,74153]" dest="primitive_type [68441,68448]"/>
  <match src="return_statement [46594,46622]" dest="return_statement [16727,16755]"/>
  <match src="identifier: sender [83883,83889]" dest="identifier: sender [72568,72574]"/>
  <match src="identifier: current [95833,95840]" dest="identifier: current [34989,34996]"/>
  <match src="primitive_type [102814,102821]" dest="primitive_type [41970,41977]"/>
  <match src=",: , [103170,103171]" dest=",: , [42326,42327]"/>
  <match src="type_name [53444,53451]" dest="type_name [61320,61327]"/>
  <match src="identifier: _state [100142,100148]" dest="identifier: _state [39298,39304]"/>
  <match src="[: [ [101284,101285]" dest="[: [ [40440,40441]"/>
  <match src="return: return [3513,3519]" dest="return: return [4077,4083]"/>
  <match src="): ) [103889,103890]" dest="): ) [43045,43046]"/>
  <match src="visibility [47264,47272]" dest="visibility [17397,17405]"/>
  <match src="string_literal [19803,19842]" dest="string_literal [65425,65472]"/>
  <match src="call_argument [50708,50726]" dest="call_argument [63958,63984]"/>
  <match src="visibility [41843,41850]" dest="visibility [11976,11983]"/>
  <match src="call_expression [105306,105361]" dest="call_expression [44462,44517]"/>
  <match src="member_expression [32998,33014]" dest="member_expression [51392,51408]"/>
  <match src="=: = [35301,35302]" dest="=: = [53695,53696]"/>
  <match src="): ) [54507,54508]" dest="): ) [22356,22357]"/>
  <match src="assignment_expression [100920,100999]" dest="assignment_expression [40076,40155]"/>
  <match src="): ) [94147,94148]" dest="): ) [33303,33304]"/>
  <match src="identifier: _state [104915,104921]" dest="identifier: _state [44071,44077]"/>
  <match src="): ) [92886,92887]" dest="): ) [32042,32043]"/>
  <match src="if_statement [28965,29441]" dest="if_statement [47359,47835]"/>
  <match src=".: . [101301,101302]" dest=".: . [40457,40458]"/>
  <match src="(: ( [6833,6834]" dest="(: ( [7397,7398]"/>
  <match src="=: = [105667,105668]" dest="=: = [44823,44824]"/>
  <match src="function: function [45918,45926]" dest="function: function [16051,16059]"/>
  <match src="(: ( [6988,6989]" dest="(: ( [7552,7553]"/>
  <match src="identifier: D256 [47893,47897]" dest="identifier: D256 [18026,18030]"/>
  <match src="call_argument [84432,84446]" dest="call_argument [81037,81057]"/>
  <match src="primitive_type [27851,27858]" dest="primitive_type [46245,46252]"/>
  <match src="call_expression [103292,103360]" dest="call_expression [42448,42516]"/>
  <match src="member_expression [101582,101617]" dest="member_expression [40738,40773]"/>
  <match src="identifier: b [9239,9240]" dest="identifier: b [9803,9804]"/>
  <match src="type_name [46128,46140]" dest="type_name [16261,16273]"/>
  <match src="identifier: account [86652,86659]" dest="identifier: account [75162,75169]"/>
  <match src="[: [ [35052,35053]" dest="[: [ [53446,53447]"/>
  <match src="): ) [97974,97975]" dest="): ) [37130,37131]"/>
  <match src="type_name [54782,54789]" dest="type_name [22631,22638]"/>
  <match src="bytes32: bytes32 [28275,28282]" dest="bytes32: bytes32 [46669,46676]"/>
  <match src="bool: bool [73331,73335]" dest="bool: bool [82578,82582]"/>
  <match src="function_body [103025,103099]" dest="function_body [42181,42255]"/>
  <match src="identifier: value [81142,81147]" dest="identifier: value [71574,71579]"/>
  <match src="(: ( [73242,73243]" dest="(: ( [59241,59242]"/>
  <match src="return: return [36845,36851]" dest="return: return [55239,55245]"/>
  <match src="type_name [84310,84317]" dest="type_name [62034,62041]"/>
  <match src=".: . [101819,101820]" dest=".: . [40975,40976]"/>
  <match src="&quot;: &quot; [25243,25244]" dest="&quot;: &quot; [80406,80407]"/>
  <match src="type_name [9987,9991]" dest="type_name [10551,10555]"/>
  <match src="(: ( [1289,1290]" dest="(: ( [1853,1854]"/>
  <match src="call_argument [32446,32452]" dest="call_argument [50840,50846]"/>
  <match src="}: } [8766,8767]" dest="}: } [9330,9331]"/>
  <match src="array_access [104671,104699]" dest="array_access [43827,43855]"/>
  <match src="=: = [91145,91146]" dest="=: = [77455,77456]"/>
  <match src="variable_declaration_tuple [84309,84344]" dest="variable_declaration_tuple [62033,62076]"/>
  <match src="visibility [94393,94399]" dest="visibility [33549,33555]"/>
  <match src="(: ( [104263,104264]" dest="(: ( [43419,43420]"/>
  <match src="type_name [56147,56154]" dest="type_name [23996,24003]"/>
  <match src="parameter [95639,95646]" dest="parameter [34795,34802]"/>
  <match src="call_argument [31124,31130]" dest="call_argument [49518,49524]"/>
  <match src=".: . [94063,94064]" dest=".: . [33219,33220]"/>
  <match src="): ) [82010,82011]" dest="): ) [72494,72495]"/>
  <match src="string [85380,85392]" dest="string [81311,81320]"/>
  <match src="(: ( [27822,27823]" dest="(: ( [46216,46217]"/>
  <match src="primitive_type [102420,102427]" dest="primitive_type [41576,41583]"/>
  <match src="return_type_definition [93411,93427]" dest="return_type_definition [32567,32583]"/>
  <match src="type_name [44886,44893]" dest="type_name [15019,15026]"/>
  <match src="expression_statement [85050,85217]" dest="expression_statement [59198,59381]"/>
  <match src="parameter [98059,98076]" dest="parameter [37215,37232]"/>
  <match src="return_statement [36560,36574]" dest="return_statement [54954,54968]"/>
  <match src="uint256: uint256 [43065,43072]" dest="uint256: uint256 [13198,13205]"/>
  <match src="parameter [79644,79658]" dest="parameter [81783,81800]"/>
  <match src="return: return [6022,6028]" dest="return: return [6586,6592]"/>
  <match src="primitive_type [36761,36766]" dest="primitive_type [55155,55160]"/>
  <match src="visibility [54565,54573]" dest="visibility [22414,22422]"/>
  <match src="type_cast_expression [30234,30636]" dest="type_cast_expression [48628,49030]"/>
  <match src="): ) [7159,7160]" dest="): ) [7723,7724]"/>
  <match src="function_definition [35632,36580]" dest="function_definition [54026,54974]"/>
  <match src="return_type_definition [94405,94422]" dest="return_type_definition [33561,33578]"/>
  <match src="): ) [339,340]" dest="): ) [903,904]"/>
  <match src="parameter [55701,55708]" dest="parameter [23550,23557]"/>
  <match src="&quot;: &quot; [107061,107062]" dest="&quot;: &quot; [70403,70404]"/>
  <match src="member_expression [8757,8764]" dest="member_expression [9321,9328]"/>
  <match src="}: } [100189,100190]" dest="}: } [39345,39346]"/>
  <match src="comment: // Overridable for testing [96321,96347]" dest="comment: // Overridable for testing [35477,35503]"/>
  <match src="]: ] [98296,98297]" dest="]: ] [37452,37453]"/>
  <match src="(: ( [91483,91484]" dest="(: ( [77793,77794]"/>
  <match src="parameter [16510,16524]" dest="parameter [57339,57353]"/>
  <match src=".: . [46173,46174]" dest=".: . [16306,16307]"/>
  <match src=".: . [97621,97622]" dest=".: . [36777,36778]"/>
  <match src="type_name [81134,81141]" dest="type_name [71566,71573]"/>
  <match src="type_name [88531,88538]" dest="type_name [30031,30038]"/>
  <match src="): ) [33816,33817]" dest="): ) [52210,52211]"/>
  <match src="identifier: reserve [69180,69187]" dest="identifier: couponPremium [62563,62576]"/>
  <match src="visibility [94526,94532]" dest="visibility [33682,33688]"/>
  <match src="address: address [78864,78871]" dest="address: address [61426,61433]"/>
  <match src=",: , [56189,56190]" dest=",: , [24038,24039]"/>
  <match src="address: address [94775,94782]" dest="address: address [33931,33938]"/>
  <match src="call_expression [85076,85108]" dest="call_expression [59476,59511]"/>
  <match src="=: = [104081,104082]" dest="=: = [43237,43238]"/>
  <match src="primitive_type [80772,80779]" dest="primitive_type [71405,71412]"/>
  <match src="}: } [82017,82018]" dest="}: } [72501,72502]"/>
  <match src="visibility [68105,68112]" dest="visibility [68765,68772]"/>
  <match src="&quot;: &quot; [85205,85206]" dest="&quot;: &quot; [59369,59370]"/>
  <match src="}: } [20147,20148]" dest="}: } [66000,66001]"/>
  <match src="(: ( [81221,81222]" dest="(: ( [71694,71695]"/>
  <match src="returns: returns [51934,51941]" dest="returns: returns [27870,27877]"/>
  <match src="uint256: uint256 [51789,51796]" dest="uint256: uint256 [27725,27732]"/>
  <match src="function_definition [48210,48308]" dest="function_definition [18343,18441]"/>
  <match src="): ) [99940,99941]" dest="): ) [39096,39097]"/>
  <match src="): ) [83380,83381]" dest="): ) [73393,73394]"/>
  <match src="variable_declaration [94566,94585]" dest="variable_declaration [33722,33741]"/>
  <match src="identifier: reason [102465,102471]" dest="identifier: reason [41621,41627]"/>
  <match src="identifier: coupons [102756,102763]" dest="identifier: coupons [41912,41919]"/>
  <match src="visibility [81504,81512]" dest="visibility [72029,72037]"/>
  <match src="(: ( [82705,82706]" dest="(: ( [73429,73430]"/>
  <match src="if_statement [10087,10144]" dest="if_statement [10651,10708]"/>
  <match src="identifier: balanceOf [73233,73242]" dest="identifier: balanceOf [59232,59241]"/>
  <match src="identifier: sub [94290,94293]" dest="identifier: sub [33446,33449]"/>
  <match src=",: , [19717,19718]" dest=",: , [65324,65325]"/>
  <match src="state_mutability [6932,6936]" dest="state_mutability [7496,7500]"/>
  <match src="type_name [91124,91129]" dest="type_name [77434,77439]"/>
  <match src="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      * - Subtraction cannot overflow.      */ [488,741]" dest="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      * - Subtraction cannot overflow.      */ [1052,1305]"/>
  <match src="identifier: COMMA [31277,31282]" dest="identifier: COMMA [49671,49676]"/>
  <match src="identifier: require [410,417]" dest="identifier: require [974,981]"/>
  <match src="call_expression [410,456]" dest="call_expression [974,1020]"/>
  <match src="identifier: candidate [97535,97544]" dest="identifier: candidate [36691,36700]"/>
  <match src="): ) [96408,96409]" dest="): ) [35564,35565]"/>
  <match src="type_cast_expression [44283,44334]" dest="type_cast_expression [14416,14467]"/>
  <match src="): ) [9410,9411]" dest="): ) [9974,9975]"/>
  <match src="type_name [72299,72306]" dest="type_name [56038,56045]"/>
  <match src="identifier: add [105554,105557]" dest="identifier: add [44710,44713]"/>
  <match src="state_mutability [350,354]" dest="state_mutability [914,918]"/>
  <match src=",: , [22113,22114]" dest=",: , [65254,65255]"/>
  <match src="function_definition [93237,93345]" dest="function_definition [32393,32501]"/>
  <match src="identifier: amount0In [55365,55374]" dest="identifier: amount0In [23214,23223]"/>
  <match src="type_name [8853,8857]" dest="type_name [9417,9421]"/>
  <match src="variable_declaration [79187,79204]" dest="variable_declaration [79974,79988]"/>
  <match src="visibility [96143,96150]" dest="visibility [35299,35306]"/>
  <match src="returns: returns [47838,47845]" dest="returns: returns [17971,17978]"/>
  <match src="external: external [81776,81784]" dest="external: external [72274,72282]"/>
  <match src="returns: returns [48545,48552]" dest="returns: returns [18678,18685]"/>
  <match src=".: . [66868,66869]" dest=".: . [69035,69036]"/>
  <match src="function: function [55884,55892]" dest="function: function [23733,23741]"/>
  <match src="identifier: sub [104952,104955]" dest="identifier: sub [44108,44111]"/>
  <match src="}: } [7034,7035]" dest="}: } [7598,7599]"/>
  <match src=".: . [96253,96254]" dest=".: . [35409,35410]"/>
  <match src="primitive_type [55408,55412]" dest="primitive_type [23257,23261]"/>
  <match src="}: } [103832,103833]" dest="}: } [42988,42989]"/>
  <match src="): ) [97204,97205]" dest="): ) [36360,36361]"/>
  <match src="call_expression [101033,101066]" dest="call_expression [40189,40222]"/>
  <match src="parameter [45623,45630]" dest="parameter [15756,15763]"/>
  <match src="event_definition [55308,55483]" dest="event_definition [23157,23332]"/>
  <match src="type_name [319,326]" dest="type_name [883,890]"/>
  <match src="function: function [46745,46753]" dest="function: function [16878,16886]"/>
  <match src="{: { [93320,93321]" dest="{: { [32476,32477]"/>
  <match src="visibility [44352,44359]" dest="visibility [14485,14492]"/>
  <match src="parameter [56191,56203]" dest="parameter [24040,24052]"/>
  <match src="function_body [105748,105812]" dest="function_body [44904,44968]"/>
  <match src="visibility [8964,8972]" dest="visibility [9528,9536]"/>
  <match src="uint256: uint256 [94547,94554]" dest="uint256: uint256 [33703,33710]"/>
  <match src="parameter [7071,7087]" dest="parameter [7635,7651]"/>
  <match src="type_name [96519,96526]" dest="type_name [35675,35682]"/>
  <match src="return_statement [93330,93339]" dest="return_statement [32486,32495]"/>
  <match src="visibility [94010,94016]" dest="visibility [33166,33172]"/>
  <match src="function_definition [27809,28227]" dest="function_definition [46203,46621]"/>
  <match src="type_name [28815,28819]" dest="type_name [47209,47213]"/>
  <match src="{: { [99698,99699]" dest="{: { [38854,38855]"/>
  <match src="parameter [1655,1664]" dest="parameter [2219,2228]"/>
  <match src="view: view [54489,54493]" dest="view: view [22338,22342]"/>
  <match src="(: ( [45622,45623]" dest="(: ( [15755,15756]"/>
  <match src="uint256: uint256 [48154,48161]" dest="uint256: uint256 [18287,18294]"/>
  <match src="function: function [101986,101994]" dest="function: function [41142,41150]"/>
  <match src="bytes32: bytes32 [29495,29502]" dest="bytes32: bytes32 [47889,47896]"/>
  <match src="(: ( [8277,8278]" dest="(: ( [8841,8842]"/>
  <match src="=: = [95953,95954]" dest="=: = [35109,35110]"/>
  <match src=",: , [106743,106744]" dest=",: , [70085,70086]"/>
  <match src="type_name [74146,74153]" dest="type_name [68441,68448]"/>
  <match src="(: ( [46549,46550]" dest="(: ( [16682,16683]"/>
  <match src="library: library [41311,41318]" dest="library: library [11444,11451]"/>
  <match src="identifier: a [9999,10000]" dest="identifier: a [10563,10564]"/>
  <match src="new_expression [35890,35899]" dest="new_expression [54284,54293]"/>
  <match src="state_variable_declaration [41523,41576]" dest="state_variable_declaration [11656,11709]"/>
  <match src="member_expression [104525,104542]" dest="member_expression [43681,43698]"/>
  <match src="call_expression [91529,91658]" dest="call_expression [77839,77968]"/>
  <match src="identifier: candidates [105765,105775]" dest="identifier: candidates [44921,44931]"/>
  <match src="identifier: recovered [50708,50717]" dest="identifier: ethicAmount [63973,63984]"/>
  <match src="primitive_type [104449,104456]" dest="primitive_type [43605,43612]"/>
  <match src="yul_identifier [33587,33593]" dest="yul_identifier [51981,51987]"/>
  <match src="state_mutability [73317,73321]" dest="state_mutability [82564,82568]"/>
  <match src="identifier: candidate [105543,105552]" dest="identifier: candidate [44699,44708]"/>
  <match src="string: string [91245,91251]" dest="string: string [77555,77561]"/>
  <match src="call_expression [91147,91218]" dest="call_expression [77457,77528]"/>
  <match src="call_expression [73225,73279]" dest="call_expression [59224,59292]"/>
  <match src="type_name [7813,7817]" dest="type_name [8377,8381]"/>
  <match src="(: ( [7507,7508]" dest="(: ( [8071,8072]"/>
  <match src="primitive_type [23081,23088]" dest="primitive_type [20062,20069]"/>
  <match src="uint256: uint256 [75707,75714]" dest="uint256: uint256 [83608,83615]"/>
  <match src="user_defined_type [7787,7791]" dest="user_defined_type [8351,8355]"/>
  <match src="expression_statement [53182,53351]" dest="expression_statement [65827,65921]"/>
  <match src="type_name [66988,66995]" dest="type_name [80993,81000]"/>
  <match src="&quot;: &quot; [17791,17792]" dest="&quot;: &quot; [73488,73489]"/>
  <match src="identifier: D256 [7182,7186]" dest="identifier: D256 [7746,7750]"/>
  <match src="]: ] [95222,95223]" dest="]: ] [34378,34379]"/>
  <match src="revert_statement [32219,32736]" dest="revert_statement [50613,51130]"/>
  <match src="identifier: bonded [89019,89025]" dest="identifier: bonded [30519,30525]"/>
  <match src="function_definition [54214,54268]" dest="function_definition [22063,22117]"/>
  <match src=".: . [9668,9669]" dest=".: . [10232,10233]"/>
  <match src="{: { [8075,8076]" dest="{: { [8639,8640]"/>
  <match src="identifier: amount [100456,100462]" dest="identifier: amount [39612,39618]"/>
  <match src="identifier: sub [8337,8340]" dest="identifier: sub [8901,8904]"/>
  <match src="uint256: uint256 [93177,93184]" dest="uint256: uint256 [32333,32340]"/>
  <match src=",: , [32073,32074]" dest=",: , [50467,50468]"/>
  <match src=",: , [55253,55254]" dest=",: , [23102,23103]"/>
  <match src="type_name [95914,95937]" dest="type_name [35070,35093]"/>
  <match src="(: ( [89248,89249]" dest="(: ( [30748,30749]"/>
  <match src="member_expression [81835,81845]" dest="member_expression [84003,84013]"/>
  <match src="function: function [13427,13435]" dest="function: function [26416,26424]"/>
  <match src="identifier: coupons [94957,94964]" dest="identifier: coupons [34113,34120]"/>
  <match src="parameter [96661,96668]" dest="parameter [35817,35824]"/>
  <match src="struct_declaration [88484,88553]" dest="struct_declaration [29984,30053]"/>
  <match src="parameter [8987,8991]" dest="parameter [9551,9555]"/>
  <match src="identifier: payloadA [30479,30487]" dest="identifier: payloadA [48873,48881]"/>
  <match src="identifier: add [102170,102173]" dest="identifier: add [41326,41329]"/>
  <match src="identifier: getGovernanceQuorum [45927,45946]" dest="identifier: getGovernanceQuorum [16060,16079]"/>
  <match src="identifier: initializer [108091,108102]" dest="identifier: initializer [83789,83800]"/>
  <match src="): ) [107250,107251]" dest="): ) [70592,70593]"/>
  <match src="=&gt;: =&gt; [89257,89259]" dest="=&gt;: =&gt; [30757,30759]"/>
  <match src="=: = [104913,104914]" dest="=: = [44069,44070]"/>
  <match src="true: true [105801,105805]" dest="true: true [44957,44961]"/>
  <match src="member_expression [8326,8340]" dest="member_expression [8890,8904]"/>
  <match src="type_name [88319,88326]" dest="type_name [29819,29826]"/>
  <match src=".: . [105341,105342]" dest=".: . [44497,44498]"/>
  <match src="}: } [6385,6386]" dest="}: } [6949,6950]"/>
  <match src="}: } [31982,31983]" dest="}: } [50376,50377]"/>
  <match src="string: string [4639,4645]" dest="string: string [5203,5209]"/>
  <match src="): ) [98106,98107]" dest="): ) [37262,37263]"/>
  <match src="]: ] [105093,105094]" dest="]: ] [44249,44250]"/>
  <match src="identifier: LPAREN [28632,28638]" dest="identifier: LPAREN [47026,47032]"/>
  <match src="type_name [8625,8629]" dest="type_name [9189,9193]"/>
  <match src="{: { [81546,81547]" dest="{: { [72069,72070]"/>
  <match src="): ) [94717,94718]" dest="): ) [33873,33874]"/>
  <match src="call_argument [103496,103497]" dest="call_argument [42652,42653]"/>
  <match src="): ) [96141,96142]" dest="): ) [35297,35298]"/>
  <match src="identifier: offset [42077,42083]" dest="identifier: offset [12210,12216]"/>
  <match src="return_statement [94647,94656]" dest="return_statement [33803,33812]"/>
  <match src="parameter [19719,19736]" dest="parameter [65326,65343]"/>
  <match src="public: public [53038,53044]" dest="public: public [62593,62599]"/>
  <match src="{: { [8295,8296]" dest="{: { [8859,8860]"/>
  <match src="return: return [97446,97452]" dest="return: return [36602,36608]"/>
  <match src="visibility [75920,75928]" dest="visibility [56666,56674]"/>
  <match src="return: return [45252,45258]" dest="return: return [15385,15391]"/>
  <match src="{: { [9641,9642]" dest="{: { [10205,10206]"/>
  <match src="parameter [55126,55135]" dest="parameter [22975,22984]"/>
  <match src="): ) [93623,93624]" dest="): ) [32779,32780]"/>
  <match src="function_body [104308,104423]" dest="function_body [43464,43579]"/>
  <match src="identifier: bonded [100133,100139]" dest="identifier: bonded [39289,39295]"/>
  <match src="expression_statement [19853,19925]" dest="expression_statement [65483,65563]"/>
  <match src="&quot;: &quot; [84257,84258]" dest="&quot;: &quot; [81153,81154]"/>
  <match src="(: ( [29655,29656]" dest="(: ( [48049,48050]"/>
  <match src="type_name [8599,8603]" dest="type_name [9163,9167]"/>
  <match src="(: ( [94241,94242]" dest="(: ( [33397,33398]"/>
  <match src="memory: memory [6000,6006]" dest="memory: memory [6564,6570]"/>
  <match src="array_access [104372,104400]" dest="array_access [43528,43556]"/>
  <match src="member_expression [96545,96573]" dest="member_expression [35701,35729]"/>
  <match src="): ) [100238,100239]" dest="): ) [39394,39395]"/>
  <match src="bytes32: bytes32 [55115,55122]" dest="bytes32: bytes32 [22964,22971]"/>
  <match src="): ) [36037,36038]" dest="): ) [54431,54432]"/>
  <match src="type_name [95447,95454]" dest="type_name [34603,34610]"/>
  <match src="state_mutability [48140,48144]" dest="state_mutability [18273,18277]"/>
  <match src="{: { [96174,96175]" dest="{: { [35330,35331]"/>
  <match src="returns: returns [46913,46920]" dest="returns: returns [17046,17053]"/>
  <match src="parameter [93256,93269]" dest="parameter [32412,32425]"/>
  <match src="identifier: ASCII_LOWER_EX [36023,36037]" dest="identifier: ASCII_LOWER_EX [54417,54431]"/>
  <match src="{: { [93728,93729]" dest="{: { [32884,32885]"/>
  <match src=".: . [104064,104065]" dest=".: . [43220,43221]"/>
  <match src="): ) [98360,98361]" dest="): ) [37516,37517]"/>
  <match src="assignment_expression [105268,105361]" dest="assignment_expression [44424,44517]"/>
  <match src="return: return [74117,74123]" dest="return: return [63180,63186]"/>
  <match src="): ) [95329,95330]" dest="): ) [34485,34486]"/>
  <match src="!: ! [28969,28970]" dest="!: ! [47363,47364]"/>
  <match src=".: . [100148,100149]" dest=".: . [39304,39305]"/>
  <match src="(: ( [47846,47847]" dest="(: ( [17979,17980]"/>
  <match src="type_cast_expression [32243,32721]" dest="type_cast_expression [50637,51115]"/>
  <match src="event_paramater [99431,99449]" dest="event_paramater [38587,38605]"/>
  <match src=",: , [32099,32100]" dest=",: , [50493,50494]"/>
  <match src="visibility [23310,23317]" dest="visibility [59612,59619]"/>
  <match src="type_name [99926,99933]" dest="type_name [39082,39089]"/>
  <match src=".: . [93112,93113]" dest=".: . [32268,32269]"/>
  <match src="): ) [102705,102706]" dest="): ) [41861,41862]"/>
  <match src="(: ( [56176,56177]" dest="(: ( [24025,24026]"/>
  <match src="): ) [7938,7939]" dest="): ) [8502,8503]"/>
  <match src="parameter [3203,3212]" dest="parameter [3767,3776]"/>
  <match src="visibility [42155,42162]" dest="visibility [12288,12295]"/>
  <match src="&quot;: &quot; [21171,21172]" dest="&quot;: &quot; [64655,64656]"/>
  <match src="primitive_type [19738,19745]" dest="primitive_type [65360,65367]"/>
  <match src="if_statement [74081,74136]" dest="if_statement [63129,63199]"/>
  <match src="uint256: uint256 [38271,38278]" dest="uint256: uint256 [65345,65352]"/>
  <match src="identifier: outstanding [102263,102274]" dest="identifier: outstanding [41419,41430]"/>
  <match src="): ) [84779,84780]" dest="): ) [81744,81745]"/>
  <match src="): ) [46217,46218]" dest="): ) [16350,16351]"/>
  <match src="call_argument [83778,83792]" dest="call_argument [73640,73654]"/>
  <match src="return_type_definition [44989,45019]" dest="return_type_definition [15122,15152]"/>
  <match src="identifier: bstr [34520,34524]" dest="identifier: bstr [52914,52918]"/>
  <match src="member_expression [50914,50926]" dest="member_expression [71816,71828]"/>
  <match src="type_name [12384,12391]" dest="type_name [25373,25380]"/>
  <match src="event_paramater [81247,81260]" dest="event_paramater [71720,71733]"/>
  <match src="primitive_type [81049,81056]" dest="primitive_type [71481,71488]"/>
  <match src="uint256: uint256 [16059,16066]" dest="uint256: uint256 [19860,19867]"/>
  <match src=".: . [83373,83374]" dest=".: . [73386,73387]"/>
  <match src="identifier: length [33595,33601]" dest="identifier: length [51989,51995]"/>
  <match src="(: ( [6539,6540]" dest="(: ( [7103,7104]"/>
  <match src="primitive_type [54634,54638]" dest="primitive_type [22483,22487]"/>
  <match src="type_name [102420,102427]" dest="type_name [41576,41583]"/>
  <match src="function: function [45294,45302]" dest="function: function [15427,15435]"/>
  <match src="(: ( [46342,46343]" dest="(: ( [16475,16476]"/>
  <match src="uint: uint [55091,55095]" dest="uint: uint [22940,22944]"/>
  <match src="variable_declaration_statement [91109,91219]" dest="variable_declaration_statement [77419,77529]"/>
  <match src="identifier: i [34298,34299]" dest="identifier: i [52692,52693]"/>
  <match src="call_expression [83911,84023]" dest="call_expression [81821,81926]"/>
  <match src="call_argument [29884,29903]" dest="call_argument [48278,48297]"/>
  <match src="binary_expression [43185,43203]" dest="binary_expression [13318,13336]"/>
  <match src="bytes32: bytes32 [31524,31531]" dest="bytes32: bytes32 [49918,49925]"/>
  <match src="type_name [56270,56275]" dest="type_name [24119,24124]"/>
  <match src="function_definition [1631,2090]" dest="function_definition [2195,2654]"/>
  <match src="memory: memory [7153,7159]" dest="memory: memory [7717,7723]"/>
  <match src="(: ( [83564,83565]" dest="(: ( [80730,80731]"/>
  <match src="identifier: epochs [103568,103574]" dest="identifier: epochs [42724,42730]"/>
  <match src="identifier: _state [97993,97999]" dest="identifier: _state [37149,37155]"/>
  <match src="call_expression [101269,101321]" dest="call_expression [40425,40477]"/>
  <match src="identifier: outstanding [96574,96585]" dest="identifier: outstanding [35730,35741]"/>
  <match src="(: ( [82655,82656]" dest="(: ( [72848,72849]"/>
  <match src="call_argument [6609,6613]" dest="call_argument [7173,7177]"/>
  <match src="}: } [105811,105812]" dest="}: } [44967,44968]"/>
  <match src="primitive_type [19874,19881]" dest="primitive_type [65504,65511]"/>
  <match src="): ) [101100,101101]" dest="): ) [40256,40257]"/>
  <match src=",: , [104817,104818]" dest=",: , [43973,43974]"/>
  <match src="private: private [92581,92588]" dest="private: private [31737,31744]"/>
  <match src="=: = [94586,94587]" dest="=: = [33742,33743]"/>
  <match src="identifier: balanceCheck [82884,82896]" dest="identifier: balanceCheck [57022,57034]"/>
  <match src="call_argument [107022,107026]" dest="call_argument [70364,70368]"/>
  <match src="identifier: Vote [88587,88591]" dest="identifier: Vote [30087,30091]"/>
  <match src="true [105801,105805]" dest="true [44957,44961]"/>
  <match src="primitive_type [79812,79816]" dest="primitive_type [62835,62839]"/>
  <match src="identifier: i [34525,34526]" dest="identifier: i [52919,52920]"/>
  <match src=",: , [6878,6879]" dest=",: , [7442,7443]"/>
  <match src=",: , [55113,55114]" dest=",: , [22962,22963]"/>
  <match src=",: , [88611,88612]" dest=",: , [30111,30112]"/>
  <match src="identifier: getInitialCouponRedemptionPenalty [47490,47523]" dest="identifier: getInitialCouponRedemptionPenalty [17623,17656]"/>
  <match src="function_body [5897,5939]" dest="function_body [6461,6503]"/>
  <match src="bytes32: bytes32 [106538,106545]" dest="bytes32: bytes32 [69880,69887]"/>
  <match src="identifier: b [6497,6498]" dest="identifier: b [7061,7062]"/>
  <match src="visibility [93698,93704]" dest="visibility [32854,32860]"/>
  <match src="member_expression [96826,96854]" dest="member_expression [35982,36010]"/>
  <match src="function_definition [45690,45794]" dest="function_definition [15823,15927]"/>
  <match src="parameter [55079,55089]" dest="parameter [22928,22938]"/>
  <match src=",: , [30090,30091]" dest=",: , [48484,48485]"/>
  <match src=":: : [47606,47607]" dest=":: : [17739,17740]"/>
  <match src="member_expression [101635,101649]" dest="member_expression [40791,40805]"/>
  <match src="type_name [68757,68764]" dest="type_name [72708,72715]"/>
  <match src="(: ( [82112,82113]" dest="(: ( [72340,72341]"/>
  <match src="primitive_type [32135,32142]" dest="primitive_type [50529,50536]"/>
  <match src="): ) [455,456]" dest="): ) [1019,1020]"/>
  <match src="function: function [54901,54909]" dest="function: function [22750,22758]"/>
  <match src="=: = [43183,43184]" dest="=: = [13316,13317]"/>
  <match src="): ) [45545,45546]" dest="): ) [15678,15679]"/>
  <match src="identifier: couponAllowances [88167,88183]" dest="identifier: couponAllowances [29667,29683]"/>
  <match src="identifier: initialize [56385,56395]" dest="identifier: initialize [24234,24244]"/>
  <match src="address: address [104264,104271]" dest="address: address [43420,43427]"/>
  <match src="bytes2: bytes2 [27585,27591]" dest="bytes2: bytes2 [45979,45985]"/>
  <match src=",: , [55398,55399]" dest=",: , [23247,23248]"/>
  <match src=".: . [102747,102748]" dest=".: . [41903,41904]"/>
  <match src="identifier: candidate [104728,104737]" dest="identifier: candidate [43884,43893]"/>
  <match src="identifier: abi [32271,32274]" dest="identifier: abi [50665,50668]"/>
  <match src="identifier: b [8757,8758]" dest="identifier: b [9321,9322]"/>
  <match src="member_expression [106722,106736]" dest="member_expression [70064,70078]"/>
  <match src="(: ( [52832,52833]" dest="(: ( [56126,56127]"/>
  <match src="uint256: uint256 [27387,27394]" dest="uint256: uint256 [45781,45788]"/>
  <match src="member_expression [105758,105775]" dest="member_expression [44914,44931]"/>
  <match src="call_argument [46343,46377]" dest="call_argument [16476,16510]"/>
  <match src="state_mutability [7490,7494]" dest="state_mutability [8054,8058]"/>
  <match src=".: . [102211,102212]" dest=".: . [41367,41368]"/>
  <match src=",: , [55281,55282]" dest=",: , [23130,23131]"/>
  <match src="(: ( [7018,7019]" dest="(: ( [7582,7583]"/>
  <match src="return_type_definition [56168,56204]" dest="return_type_definition [24017,24053]"/>
  <match src="string [25955,26005]" dest="string [80259,80288]"/>
  <match src="identifier: balance [100417,100424]" dest="identifier: balance [39573,39580]"/>
  <match src="identifier: owner [102976,102981]" dest="identifier: owner [42132,42137]"/>
  <match src="identifier: to [56266,56268]" dest="identifier: to [24115,24117]"/>
  <match src="identifier: account [94384,94391]" dest="identifier: account [33540,33547]"/>
  <match src="identifier: i [7672,7673]" dest="identifier: i [8236,8237]"/>
  <match src="array_access [105630,105654]" dest="array_access [44786,44810]"/>
  <match src="identifier: account [100971,100978]" dest="identifier: account [40127,40134]"/>
  <match src="struct: struct [5730,5736]" dest="struct: struct [6294,6300]"/>
  <match src="type_name [89341,89376]" dest="type_name [30841,30876]"/>
  <match src="=: = [7613,7614]" dest="=: = [8177,8178]"/>
  <match src="function_definition [54675,54741]" dest="function_definition [22524,22590]"/>
  <match src="identifier: epoch [89173,89178]" dest="identifier: epoch [30673,30678]"/>
  <match src="primitive_type [82394,82401]" dest="primitive_type [67810,67817]"/>
  <match src="uint256: uint256 [104819,104826]" dest="uint256: uint256 [43975,43982]"/>
  <match src="{: { [34776,34777]" dest="{: { [53170,53171]"/>
  <match src="(: ( [1316,1317]" dest="(: ( [1880,1881]"/>
  <match src="identifier: totalBonded [83937,83948]" dest="identifier: totalBonded [59260,59271]"/>
  <match src="): ) [94274,94275]" dest="): ) [33430,33431]"/>
  <match src="parameter [51835,51850]" dest="parameter [27771,27786]"/>
  <match src="function: function [30012,30020]" dest="function: function [48406,48414]"/>
  <match src="return_type_definition [68729,68746]" dest="return_type_definition [63779,63796]"/>
  <match src="identifier: self [7799,7803]" dest="identifier: self [8363,8367]"/>
  <match src="visibility [67526,67533]" dest="visibility [21611,21618]"/>
  <match src="{: { [98520,98521]" dest="{: { [37676,37677]"/>
  <match src="indexed: indexed [53452,53459]" dest="indexed: indexed [61328,61335]"/>
  <match src="address: address [44244,44251]" dest="address: address [14377,14384]"/>
  <match src="identifier: SafeMath [72286,72294]" dest="identifier: SafeMath [56025,56033]"/>
  <match src="identifier: decrementTotalDebt [100334,100352]" dest="identifier: decrementTotalDebt [39490,39508]"/>
  <match src=".: . [106729,106730]" dest=".: . [70071,70072]"/>
  <match src="variable_declaration_statement [3399,3417]" dest="variable_declaration_statement [3963,3981]"/>
  <match src="primitive_type [32059,32066]" dest="primitive_type [50453,50460]"/>
  <match src="identifier: sender [83453,83459]" dest="identifier: sender [73987,73993]"/>
  <match src="identifier: deposit [81481,81488]" dest="identifier: deposit [72006,72013]"/>
  <match src="(: ( [51893,51894]" dest="(: ( [27829,27830]"/>
  <match src="event_paramater [55283,55301]" dest="event_paramater [23132,23150]"/>
  <match src="bool: bool [31459,31463]" dest="bool: bool [49853,49857]"/>
  <match src="state_mutability [95780,95784]" dest="state_mutability [34936,34940]"/>
  <match src="bytes: bytes [33852,33857]" dest="bytes: bytes [52246,52251]"/>
  <match src="call_argument [85076,85144]" dest="call_argument [59224,59315]"/>
  <match src="identifier: i [36257,36258]" dest="identifier: i [54651,54652]"/>
  <match src="identifier: Decimal [48039,48046]" dest="identifier: Decimal [18172,18179]"/>
  <match src="if: if [28965,28967]" dest="if: if [47359,47361]"/>
  <match src="primitive_type [96401,96408]" dest="primitive_type [35557,35564]"/>
  <match src="call_argument [29184,29190]" dest="call_argument [47578,47584]"/>
  <match src="return_statement [9901,9947]" dest="return_statement [10465,10511]"/>
  <match src="state_mutability [96387,96391]" dest="state_mutability [35543,35547]"/>
  <match src="internal: internal [26359,26367]" dest="internal: internal [58792,58800]"/>
  <match src="=: = [102644,102645]" dest="=: = [41800,41801]"/>
  <match src="function_definition [54389,54441]" dest="function_definition [22238,22290]"/>
  <match src="byte: byte [36852,36856]" dest="byte: byte [55246,55250]"/>
  <match src="function_body [85040,85223]" dest="function_body [59436,59570]"/>
  <match src="return: return [93944,93950]" dest="return: return [33100,33106]"/>
  <match src="primitive_type [101091,101098]" dest="primitive_type [40247,40254]"/>
  <match src="using: using [65459,65464]" dest="using: using [66761,66766]"/>
  <match src="event_definition [99394,99466]" dest="event_definition [38550,38622]"/>
  <match src="parameter [101496,101511]" dest="parameter [40652,40667]"/>
  <match src="(: ( [96101,96102]" dest="(: ( [35257,35258]"/>
  <match src="(: ( [106913,106914]" dest="(: ( [70255,70256]"/>
  <match src="identifier: amount [101764,101770]" dest="identifier: amount [40920,40926]"/>
  <match src="uint256: uint256 [1655,1662]" dest="uint256: uint256 [2219,2226]"/>
  <match src="identifier: value [6771,6776]" dest="identifier: value [7335,7340]"/>
  <match src="(: ( [30965,30966]" dest="(: ( [49359,49360]"/>
  <match src="array_access [103035,103083]" dest="array_access [42191,42239]"/>
  <match src="return_type_definition [6297,6318]" dest="return_type_definition [6861,6882]"/>
  <match src="identifier: epoch [104161,104166]" dest="identifier: epoch [43317,43322]"/>
  <match src="member_expression [10160,10167]" dest="member_expression [10724,10731]"/>
  <match src="call_argument [102279,102285]" dest="call_argument [41435,41441]"/>
  <match src="uint256: uint256 [1217,1224]" dest="uint256: uint256 [1781,1788]"/>
  <match src="}: } [63953,63954]" dest="}: } [28741,28742]"/>
  <match src="identifier: abi [30949,30952]" dest="identifier: abi [49343,49346]"/>
  <match src="returns: returns [99815,99822]" dest="returns: returns [38971,38978]"/>
  <match src="): ) [68141,68142]" dest="): ) [68801,68802]"/>
  <match src="call_expression [31660,31940]" dest="call_expression [50054,50334]"/>
  <match src="internal: internal [103016,103024]" dest="internal: internal [42172,42180]"/>
  <match src="call_argument [74307,74331]" dest="call_argument [82707,82725]"/>
  <match src="state_variable_declaration [27674,27702]" dest="state_variable_declaration [46068,46096]"/>
  <match src="uint256: uint256 [102831,102838]" dest="uint256: uint256 [41987,41994]"/>
  <match src="call_argument [83668,83679]" dest="call_argument [80695,80704]"/>
  <match src="view: view [95471,95475]" dest="view: view [34627,34631]"/>
  <match src="inheritance_specifier [108295,108305]" dest="inheritance_specifier [71369,71379]"/>
  <match src="): ) [98145,98146]" dest="): ) [37301,37302]"/>
  <match src="primitive_type [105720,105727]" dest="primitive_type [44876,44883]"/>
  <match src="identifier: amount [17628,17634]" dest="identifier: amount [59908,59914]"/>
  <match src="identifier: a [6094,6095]" dest="identifier: a [6658,6659]"/>
  <match src="primitive_type [56082,56089]" dest="primitive_type [23931,23938]"/>
  <match src="call_argument [66341,66360]" dest="call_argument [82406,82420]"/>
  <match src="visibility [69190,69198]" dest="visibility [64456,64464]"/>
  <match src="address: address [79628,79635]" dest="address: address [80839,80846]"/>
  <match src="identifier: msg [79465,79468]" dest="identifier: msg [83885,83888]"/>
  <match src="visibility [31551,31559]" dest="visibility [49945,49953]"/>
  <match src="call_argument [35978,35988]" dest="call_argument [54372,54382]"/>
  <match src="return_statement [99840,99853]" dest="return_statement [38996,39009]"/>
  <match src="expression_statement [104525,104576]" dest="expression_statement [43681,43732]"/>
  <match src="identifier: Transfer [20106,20114]" dest="identifier: CouponTransfer [65946,65960]"/>
  <match src=".: . [81527,81528]" dest=".: . [79328,79329]"/>
  <match src=".: . [96573,96574]" dest=".: . [35729,35730]"/>
  <match src="}: } [74135,74136]" dest="}: } [63198,63199]"/>
  <match src="--: -- [34464,34466]" dest="--: -- [52858,52860]"/>
  <match src="(: ( [103344,103345]" dest="(: ( [42500,42501]"/>
  <match src="state_mutability [69199,69203]" dest="state_mutability [62600,62604]"/>
  <match src="function: function [99512,99520]" dest="function: function [38668,38676]"/>
  <match src="call_expression [83016,83036]" dest="call_expression [72586,72646]"/>
  <match src=",: , [4064,4065]" dest=",: , [4628,4629]"/>
  <match src="type_cast_expression [35972,35989]" dest="type_cast_expression [54366,54383]"/>
  <match src=".: . [96551,96552]" dest=".: . [35707,35708]"/>
  <match src="): ) [29562,29563]" dest="): ) [47956,47957]"/>
  <match src="member_expression [83505,83515]" dest="member_expression [73554,73564]"/>
  <match src="}: } [8570,8571]" dest="}: } [9134,9135]"/>
  <match src="primitive_type [55283,55290]" dest="primitive_type [23132,23139]"/>
  <match src="identifier: addedValue [18310,18320]" dest="identifier: totalDebt [20043,20052]"/>
  <match src="inheritance_specifier [92492,92497]" dest="inheritance_specifier [31648,31653]"/>
  <match src="primitive_type [32976,32981]" dest="primitive_type [51370,51375]"/>
  <match src="type_name [88913,88920]" dest="type_name [30413,30420]"/>
  <match src="assembly_statement [33549,33642]" dest="assembly_statement [51943,52036]"/>
  <match src="(: ( [833,834]" dest="(: ( [1397,1398]"/>
  <match src=".: . [103778,103779]" dest=".: . [42934,42935]"/>
  <match src="=: = [35752,35753]" dest="=: = [54146,54147]"/>
  <match src="memory: memory [68135,68141]" dest="memory: memory [68795,68801]"/>
  <match src="comment: // Can participate in balance-dependant activities [106831,106881]" dest="comment: // Can participate in balance-dependant activities [70173,70223]"/>
  <match src="identifier: COUPON_EXPIRATION [43649,43666]" dest="identifier: COUPON_EXPIRATION [13782,13799]"/>
  <match src="uint256: uint256 [103910,103917]" dest="uint256: uint256 [43066,43073]"/>
  <match src="call_expression [25215,25279]" dest="call_expression [80367,80437]"/>
  <match src="call_expression [9010,9028]" dest="call_expression [9574,9592]"/>
  <match src="identifier: sender [84747,84753]" dest="identifier: sender [81727,81733]"/>
  <match src="primitive_type [13465,13472]" dest="primitive_type [26454,26461]"/>
  <match src="identifier: balanceCheck [81674,81686]" dest="identifier: balanceCheck [57443,57455]"/>
  <match src="identifier: that [28242,28246]" dest="identifier: that [46636,46640]"/>
  <match src="mapping: mapping [88139,88146]" dest="mapping: mapping [29639,29646]"/>
  <match src="call_argument [29249,29268]" dest="call_argument [47643,47662]"/>
  <match src="type_name [101496,101503]" dest="type_name [40652,40659]"/>
  <match src="identifier: epoch [102904,102909]" dest="identifier: epoch [42060,42065]"/>
  <match src="type_name [53506,53510]" dest="type_name [61362,61369]"/>
  <match src="call_argument [98151,98171]" dest="call_argument [37307,37327]"/>
  <match src="visibility [54646,54654]" dest="visibility [22495,22503]"/>
  <match src="return_statement [95181,95282]" dest="return_statement [34337,34438]"/>
  <match src="}: } [47641,47642]" dest="}: } [17774,17775]"/>
  <match src="call_argument [34806,34811]" dest="call_argument [53200,53205]"/>
  <match src="binary_expression [36395,36401]" dest="binary_expression [54789,54795]"/>
  <match src=".: . [100567,100568]" dest=".: . [39723,39724]"/>
  <match src="return_statement [45642,45678]" dest="return_statement [15775,15811]"/>
  <match src="{: { [97233,97234]" dest="{: { [36389,36390]"/>
  <match src="revert: revert [30210,30216]" dest="revert: revert [48604,48610]"/>
  <match src="memory: memory [103195,103201]" dest="memory: memory [42351,42357]"/>
  <match src="call_argument [81796,81806]" dest="call_argument [73177,73187]"/>
  <match src="identifier: accounts [103299,103307]" dest="identifier: accounts [42455,42463]"/>
  <match src=".: . [82821,82822]" dest=".: . [72987,72988]"/>
  <match src="uint256: uint256 [86700,86707]" dest="uint256: uint256 [75210,75217]"/>
  <match src="return_type_definition [94538,94555]" dest="return_type_definition [33694,33711]"/>
  <match src="array_access [103710,103730]" dest="array_access [42866,42886]"/>
  <match src="): ) [96307,96308]" dest="): ) [35463,35464]"/>
  <match src="primitive_type [15890,15897]" dest="primitive_type [19789,19796]"/>
  <match src="identifier: coupons [104168,104175]" dest="identifier: coupons [43324,43331]"/>
  <match src="member_expression [47431,47443]" dest="member_expression [17564,17576]"/>
  <match src="new: new [35890,35893]" dest="new: new [54284,54287]"/>
  <match src="}: } [101455,101456]" dest="}: } [40611,40612]"/>
  <match src="identifier: COLON [31041,31046]" dest="identifier: COLON [49435,49440]"/>
  <match src="): ) [7641,7642]" dest="): ) [8205,8206]"/>
  <match src="call_argument [32271,32703]" dest="call_argument [50665,51097]"/>
  <match src="(: ( [93396,93397]" dest="(: ( [32552,32553]"/>
  <match src="return_type_definition [6128,6149]" dest="return_type_definition [6692,6713]"/>
  <match src="uint256: uint256 [44030,44037]" dest="uint256: uint256 [14163,14170]"/>
  <match src="type_name [100077,100083]" dest="type_name [39233,39239]"/>
  <match src="return: return [8503,8509]" dest="return: return [9067,9073]"/>
  <match src="call_argument [91080,91097]" dest="call_argument [77390,77407]"/>
  <match src="using_directive [65459,65490]" dest="using_directive [66761,66792]"/>
  <match src="comment: /*     Copyright 2021 Ethic Money Devs &lt;devs@ethic.money&gt; and Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [71556,72239]" dest="comment: /*     Copyright 2021 Ethic Money Devs &lt;devs@ethic.money&gt; and Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [60047,60730]"/>
  <match src="return_statement [97586,97628]" dest="return_statement [36742,36784]"/>
  <match src="identifier: candidate [97877,97886]" dest="identifier: candidate [37033,37042]"/>
  <match src="type_name [79797,79801]" dest="type_name [64667,64671]"/>
  <match src="identifier: POOL_EXIT_LOCKUP_EPOCHS [43540,43563]" dest="identifier: POOL_EXIT_LOCKUP_EPOCHS [13673,13696]"/>
  <match src="function: function [103839,103847]" dest="function: function [42995,43003]"/>
  <match src="{: { [1938,1939]" dest="{: { [2502,2503]"/>
  <match src="{: { [28955,28956]" dest="{: { [47349,47350]"/>
  <match src="identifier: _state [100955,100961]" dest="identifier: _state [40111,40117]"/>
  <match src="return: return [45877,45883]" dest="return: return [16010,16016]"/>
  <match src="call_argument [28049,28073]" dest="call_argument [46443,46467]"/>
  <match src=".: . [97429,97430]" dest=".: . [36585,36586]"/>
  <match src="}: } [28779,28780]" dest="}: } [47173,47174]"/>
  <match src="call_expression [102741,102783]" dest="call_expression [41897,41939]"/>
  <match src="type_name [76130,76137]" dest="type_name [84305,84312]"/>
  <match src="yul_path [98611,98615]" dest="yul_path [37767,37771]"/>
  <match src="identifier: amount [99557,99563]" dest="identifier: amount [38713,38719]"/>
  <match src="(: ( [8796,8797]" dest="(: ( [9360,9361]"/>
  <match src="binary_expression [97250,97293]" dest="binary_expression [36406,36449]"/>
  <match src="block_statement [35227,35596]" dest="block_statement [53621,53990]"/>
  <match src="public: public [96640,96646]" dest="public: public [35796,35802]"/>
  <match src=",: , [30705,30706]" dest=",: , [49099,49100]"/>
  <match src="array_access [97859,97887]" dest="array_access [37015,37043]"/>
  <match src="call_argument [28580,28606]" dest="call_argument [46974,47000]"/>
  <match src="return_type_definition [46444,46461]" dest="return_type_definition [16577,16594]"/>
  <match src="call_argument [35762,35767]" dest="call_argument [54156,54161]"/>
  <match src="primitive_type [15783,15790]" dest="primitive_type [60794,60801]"/>
  <match src="identifier: approve [99633,99640]" dest="identifier: approve [38789,38796]"/>
  <match src="identifier: sender [83374,83380]" dest="identifier: sender [73387,73393]"/>
  <match src="}: } [74593,74594]" dest="}: } [68733,68734]"/>
  <match src="address: address [97363,97370]" dest="address: address [36519,36526]"/>
  <match src="primitive_type [100885,100892]" dest="primitive_type [40041,40048]"/>
  <match src="identifier: z [34794,34795]" dest="identifier: z [53188,53189]"/>
  <match src="parameter [102814,102829]" dest="parameter [41970,41985]"/>
  <match src="internal: internal [102473,102481]" dest="internal: internal [41629,41637]"/>
  <match src="=: = [68503,68504]" dest="=: = [68853,68854]"/>
  <match src="identifier: newClaimable [83517,83529]" dest="identifier: staged [73480,73486]"/>
  <match src="parenthesized_expression [29631,29989]" dest="parenthesized_expression [48025,48383]"/>
  <match src="member_expression [101355,101380]" dest="member_expression [40511,40536]"/>
  <match src="(: ( [47145,47146]" dest="(: ( [17278,17279]"/>
  <match src="call_argument [47444,47467]" dest="call_argument [17577,17600]"/>
  <match src="): ) [79541,79542]" dest="): ) [59940,59941]"/>
  <match src="constant: constant [41539,41547]" dest="constant: constant [11672,11680]"/>
  <match src="identifier: balanceOfStaged [94360,94375]" dest="identifier: balanceOfStaged [33516,33531]"/>
  <match src="(: ( [70154,70155]" dest="(: ( [57104,57105]"/>
  <match src="type_name [99658,99665]" dest="type_name [38814,38821]"/>
  <match src=".: . [99967,99968]" dest=".: . [39123,39124]"/>
  <match src="&quot;: &quot; [2666,2667]" dest="&quot;: &quot; [3230,3231]"/>
  <match src="(: ( [83789,83790]" dest="(: ( [73651,73652]"/>
  <match src="identifier: coupons [96847,96854]" dest="identifier: coupons [36003,36010]"/>
  <match src="primitive_type [82319,82326]" dest="primitive_type [72522,72529]"/>
  <match src="(: ( [50926,50927]" dest="(: ( [65598,65599]"/>
  <match src="uint: uint [55384,55388]" dest="uint: uint [23233,23237]"/>
  <match src="member_expression [6588,6598]" dest="member_expression [7152,7162]"/>
  <match src="identifier: this [73251,73255]" dest="identifier: this [59250,59254]"/>
  <match src="): ) [100899,100900]" dest="): ) [40055,40056]"/>
  <match src="type_name [30696,30700]" dest="type_name [49090,49094]"/>
  <match src="parameter [95352,95359]" dest="parameter [34508,34515]"/>
  <match src="type_name [88815,88819]" dest="type_name [30315,30319]"/>
  <match src="internal: internal [46552,46560]" dest="internal: internal [16685,16693]"/>
  <match src=",: , [55060,55061]" dest=",: , [22909,22910]"/>
  <match src="struct_member [89293,89332]" dest="struct_member [30793,30832]"/>
  <match src="parameter [76428,76442]" dest="parameter [57071,57085]"/>
  <match src="visibility [90845,90851]" dest="visibility [77155,77161]"/>
  <match src="member_expression [48039,48051]" dest="member_expression [18172,18184]"/>
  <match src="function: function [8145,8153]" dest="function: function [8709,8717]"/>
  <match src="function_definition [28792,29447]" dest="function_definition [47186,47841]"/>
  <match src="address: address [54097,54104]" dest="address: address [21946,21953]"/>
  <match src="call_argument [44599,44641]" dest="call_argument [14732,14774]"/>
  <match src="identifier: decrementBalanceOfBonded [83540,83564]" dest="identifier: placeLock [80721,80730]"/>
  <match src="identifier: D256 [46338,46342]" dest="identifier: D256 [16471,16475]"/>
  <match src="type_name [47171,47178]" dest="type_name [17304,17311]"/>
  <match src="return: return [99840,99846]" dest="return: return [38996,39002]"/>
  <match src="state_mutability [47708,47712]" dest="state_mutability [17841,17845]"/>
  <match src="member_expression [7916,7930]" dest="member_expression [8480,8494]"/>
  <match src="(: ( [85029,85030]" dest="(: ( [59411,59412]"/>
  <match src="type_name [32083,32090]" dest="type_name [50477,50484]"/>
  <match src="primitive_type [9632,9639]" dest="primitive_type [10196,10203]"/>
  <match src="return_statement [94897,94906]" dest="return_statement [34053,34062]"/>
  <match src="type_name [95040,95054]" dest="type_name [34196,34210]"/>
  <match src=":: : [7914,7915]" dest=":: : [8478,8479]"/>
  <match src="comment: /**      * @dev Storage slot with the address of the current implementation.      * This is the keccak-256 hash of &quot;eip1967.proxy.implementation&quot; subtracted by 1, and is      * validated in the constructor.      */ [90294,90508]" dest="comment: /**      * @dev Storage slot with the address of the current implementation.      * This is the keccak-256 hash of &quot;eip1967.proxy.implementation&quot; subtracted by 1, and is      * validated in the constructor.      */ [76604,76818]"/>
  <match src="contract: contract [63785,63793]" dest="contract: contract [28573,28581]"/>
  <match src="*: * [35305,35306]" dest="*: * [53699,53700]"/>
  <match src="identifier: newImplementation [91576,91593]" dest="identifier: newImplementation [77886,77903]"/>
  <match src=",: , [84097,84098]" dest=",: , [80943,80944]"/>
  <match src="variable_declaration [74373,74397]" dest="variable_declaration [67941,67958]"/>
  <match src="type_name [44547,44554]" dest="type_name [14680,14687]"/>
  <match src="{: { [29611,29612]" dest="{: { [48005,48006]"/>
  <match src="(: ( [81165,81166]" dest="(: ( [83719,83720]"/>
  <match src="): ) [107187,107188]" dest="): ) [70529,70530]"/>
  <match src="identifier: amount [103180,103186]" dest="identifier: amount [42336,42342]"/>
  <match src="identifier: a [10091,10092]" dest="identifier: a [10655,10656]"/>
  <match src="type_name [100518,100525]" dest="type_name [39674,39681]"/>
  <match src="type_name [16510,16517]" dest="type_name [57339,57346]"/>
  <match src="call_argument [30555,30563]" dest="call_argument [48949,48957]"/>
  <match src="member_expression [28457,28473]" dest="member_expression [46851,46867]"/>
  <match src="identifier: z [35543,35544]" dest="identifier: z [53937,53938]"/>
  <match src="constant: constant [44046,44054]" dest="constant: constant [14179,14187]"/>
  <match src="call_argument [81589,81602]" dest="call_argument [72112,72125]"/>
  <match src="call_argument [30404,30410]" dest="call_argument [48798,48804]"/>
  <match src="uint8: uint8 [55106,55111]" dest="uint8: uint8 [22955,22960]"/>
  <match src="identifier: _ [107083,107084]" dest="identifier: _ [70425,70426]"/>
  <match src="{: { [91723,91724]" dest="{: { [78033,78034]"/>
  <match src="address: address [12344,12351]" dest="address: address [25333,25340]"/>
  <match src="identifier: OpenZeppelinUpgradesAddress [91537,91564]" dest="identifier: OpenZeppelinUpgradesAddress [77847,77874]"/>
  <match src="&quot;: &quot; [81941,81942]" dest="&quot;: &quot; [72450,72451]"/>
  <match src="identifier: getGovernanceEmergencyDelay [46400,46427]" dest="identifier: getGovernanceEmergencyDelay [16533,16560]"/>
  <match src="comment: // populate the result with &quot;0x&quot; [35914,35946]" dest="comment: // populate the result with &quot;0x&quot; [54308,54340]"/>
  <match src="type_name [79121,79125]" dest="type_name [62919,62923]"/>
  <match src="returns: returns [54942,54949]" dest="returns: returns [22791,22798]"/>
  <match src="bool: bool [13114,13118]" dest="bool: bool [26103,26107]"/>
  <match src="primitive_type [45623,45630]" dest="primitive_type [15756,15763]"/>
  <match src="primitive_type [95447,95454]" dest="primitive_type [34603,34610]"/>
  <match src="): ) [56009,56010]" dest="): ) [23858,23859]"/>
  <match src="): ) [8764,8765]" dest="): ) [9328,9329]"/>
  <match src="return_type_definition [48252,48269]" dest="return_type_definition [18385,18402]"/>
  <match src="uint256: uint256 [81320,81327]" dest="uint256: uint256 [71622,71629]"/>
  <match src="call_argument [83879,83889]" dest="call_argument [72564,72574]"/>
  <match src="call_expression [52909,52931]" dest="call_expression [56179,56208]"/>
  <match src="identifier: start [88687,88692]" dest="identifier: start [30187,30192]"/>
  <match src="function_definition [55604,55655]" dest="function_definition [23453,23504]"/>
  <match src="[: [ [103574,103575]" dest="[: [ [42730,42731]"/>
  <match src="state_mutability [55925,55929]" dest="state_mutability [23774,23778]"/>
  <match src="memory: memory [9355,9361]" dest="memory: memory [9919,9925]"/>
  <match src="call_expression [85076,85144]" dest="call_expression [59224,59315]"/>
  <match src="memory: memory [54260,54266]" dest="memory: memory [22109,22115]"/>
  <match src="view: view [95881,95885]" dest="view: view [35037,35041]"/>
  <match src="visibility [41444,41451]" dest="visibility [11577,11584]"/>
  <match src="number_literal: 0 [42187,42188]" dest="number_literal: 0 [12320,12321]"/>
  <match src="identifier: candidate [105122,105131]" dest="identifier: candidate [44278,44287]"/>
  <match src="struct_declaration [88272,88365]" dest="struct_declaration [29772,29865]"/>
  <match src="(: ( [96914,96915]" dest="(: ( [36070,36071]"/>
  <match src="): ) [93426,93427]" dest="): ) [32582,32583]"/>
  <match src="returns: returns [48252,48259]" dest="returns: returns [18385,18392]"/>
  <match src="=: = [102232,102233]" dest="=: = [41388,41389]"/>
  <match src=":: : [8104,8105]" dest=":: : [8668,8669]"/>
  <match src="array_access [98406,98434]" dest="array_access [37562,37590]"/>
  <match src="state_variable_declaration [65496,65537]" dest="state_variable_declaration [60808,60849]"/>
  <match src="pure: pure [9106,9110]" dest="pure: pure [9670,9674]"/>
  <match src="parameter [68122,68141]" dest="parameter [68782,68801]"/>
  <match src="identifier: account [21346,21353]" dest="identifier: account [84417,84424]"/>
  <match src="return_type_definition [45735,45752]" dest="return_type_definition [15868,15885]"/>
  <match src="(: ( [94273,94274]" dest="(: ( [33429,33430]"/>
  <match src="}: } [89395,89396]" dest="}: } [30895,30896]"/>
  <match src="function: function [103403,103411]" dest="function: function [42559,42567]"/>
  <match src="function_definition [33770,34670]" dest="function_definition [52164,53064]"/>
  <match src=":: : [45071,45072]" dest=":: : [15204,15205]"/>
  <match src="type_name [68392,68399]" dest="type_name [73313,73320]"/>
  <match src="type_name [89059,89066]" dest="type_name [30559,30566]"/>
  <match src=".: . [30265,30266]" dest=".: . [48659,48660]"/>
  <match src="): ) [94735,94736]" dest="): ) [33891,33892]"/>
  <match src="identifier: notPaused [82343,82352]" dest="identifier: onlyFrozenOrFluid [72546,72563]"/>
  <match src="view: view [97819,97823]" dest="view: view [36975,36979]"/>
  <match src="primitive_type [92770,92776]" dest="primitive_type [31926,31932]"/>
  <match src="comment: /**  * Utility library of inline functions on addresses  *  * Source https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-solidity/v2.1.3/contracts/utils/Address.sol  * This contract is copied here and renamed from the original to avoid clashes in the compiled artifacts  * when the user imports a zos-lib contract (that transitively causes this contract to be compiled and added to the  * build/artifacts folder) as well as the vanilla Address implementation from an openzeppelin version.  */ [85725,86225]" dest="comment: /**  * Utility library of inline functions on addresses  *  * Source https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-solidity/v2.1.3/contracts/utils/Address.sol  * This contract is copied here and renamed from the original to avoid clashes in the compiled artifacts  * when the user imports a zos-lib contract (that transitively causes this contract to be compiled and added to the  * build/artifacts folder) as well as the vanilla Address implementation from an openzeppelin version.  */ [74235,74735]"/>
  <match src="primitive_type [54122,54126]" dest="primitive_type [21971,21975]"/>
  <match src="struct_member [89213,89231]" dest="struct_member [30713,30731]"/>
  <match src="): ) [7035,7036]" dest="): ) [7599,7600]"/>
  <match src="number_literal: 14400 [42361,42366]" dest="number_literal: 14400 [12494,12499]"/>
  <match src="internal: internal [46666,46674]" dest="internal: internal [16799,16807]"/>
  <match src="): ) [52930,52931]" dest="): ) [56207,56208]"/>
  <match src="(: ( [81523,81524]" dest="(: ( [79324,79325]"/>
  <match src="member_expression [100553,100578]" dest="member_expression [39709,39734]"/>
  <match src="parameter [56082,56092]" dest="parameter [23931,23941]"/>
  <match src="parameter [95314,95329]" dest="parameter [34470,34485]"/>
  <match src="type_name [56241,56245]" dest="type_name [24090,24094]"/>
  <match src="pure: pure [48540,48544]" dest="pure: pure [18673,18677]"/>
  <match src="identifier: candidate [98214,98223]" dest="identifier: candidate [37370,37379]"/>
  <match src="expression_statement [83540,83621]" dest="expression_statement [80721,80754]"/>
  <match src="function: function [96352,96360]" dest="function: function [35508,35516]"/>
  <match src="function_body [97576,97634]" dest="function_body [36732,36790]"/>
  <match src="=: = [42532,42533]" dest="=: = [12665,12666]"/>
  <match src=",: , [9080,9081]" dest=",: , [9644,9645]"/>
  <match src="constant: constant [27548,27556]" dest="constant: constant [45942,45950]"/>
  <match src="function: function [47343,47351]" dest="function: function [17476,17484]"/>
  <match src="struct_member [88193,88212]" dest="struct_member [29693,29712]"/>
  <match src=".: . [102763,102764]" dest=".: . [41919,41920]"/>
  <match src="augmented_assignment_expression [34624,34631]" dest="augmented_assignment_expression [53018,53025]"/>
  <match src="parameter [45233,45240]" dest="parameter [15366,15373]"/>
  <match src="expression_statement [84567,84614]" dest="expression_statement [72873,72913]"/>
  <match src="): ) [102354,102355]" dest="): ) [41510,41511]"/>
  <match src="function_body [91519,91784]" dest="function_body [77829,78094]"/>
  <match src="pure: pure [8260,8264]" dest="pure: pure [8824,8828]"/>
  <match src=".: . [101853,101854]" dest=".: . [41009,41010]"/>
  <match src="]: ] [101870,101871]" dest="]: ] [41026,41027]"/>
  <match src="identifier: epoch [95765,95770]" dest="identifier: epoch [34921,34926]"/>
  <match src="call_expression [8510,8564]" dest="call_expression [9074,9128]"/>
  <match src="{: { [88669,88670]" dest="{: { [30169,30170]"/>
  <match src="byte: byte [35013,35017]" dest="byte: byte [53407,53411]"/>
  <match src="returns: returns [7139,7146]" dest="returns: returns [7703,7710]"/>
  <match src="=: = [36255,36256]" dest="=: = [54649,54650]"/>
  <match src="member_expression [105066,105083]" dest="member_expression [44222,44239]"/>
  <match src="(: ( [48629,48630]" dest="(: ( [18762,18763]"/>
  <match src=".: . [102666,102667]" dest=".: . [41822,41823]"/>
  <match src=",: , [84225,84226]" dest=",: , [81121,81122]"/>
  <match src="member_expression [93745,93766]" dest="member_expression [32901,32922]"/>
  <match src="identifier: value [54201,54206]" dest="identifier: value [22050,22055]"/>
  <match src="struct_member [88296,88310]" dest="struct_member [29796,29810]"/>
  <match src="constant: constant [43425,43433]" dest="constant: constant [13558,13566]"/>
  <match src="type_name [103155,103162]" dest="type_name [42311,42318]"/>
  <match src="uint256: uint256 [70997,71004]" dest="uint256: uint256 [66966,66973]"/>
  <match src="array_access [104525,104553]" dest="array_access [43681,43709]"/>
  <match src="visibility [99565,99573]" dest="visibility [38721,38729]"/>
  <match src="): ) [6195,6196]" dest="): ) [6759,6760]"/>
  <match src="call_expression [97259,97293]" dest="call_expression [36415,36449]"/>
  <match src="returns: returns [2594,2601]" dest="returns: returns [3158,3165]"/>
  <match src="identifier: amount [22402,22408]" dest="identifier: amount [65614,65620]"/>
  <match src="visibility [105249,105257]" dest="visibility [44405,44413]"/>
  <match src="&quot;: &quot; [26004,26005]" dest="&quot;: &quot; [80287,80288]"/>
  <match src=".: . [84523,84524]" dest=".: . [73910,73911]"/>
  <match src="type_name [55115,55122]" dest="type_name [22964,22971]"/>
  <match src="type_name [9350,9354]" dest="type_name [9914,9918]"/>
  <match src="private: private [44454,44461]" dest="private: private [14587,14594]"/>
  <match src="primitive_type [51894,51901]" dest="primitive_type [27830,27837]"/>
  <match src=",: , [30803,30804]" dest=",: , [49197,49198]"/>
  <match src="comment: /**      * @dev Returns the amount of tokens owned by `account`.      */ [11593,11665]" dest="comment: /**      * @dev Returns the amount of tokens owned by `account`.      */ [24582,24654]"/>
  <match src="}: } [9172,9173]" dest="}: } [9736,9737]"/>
  <match src="identifier: ETHIC_ADDRESS [48580,48593]" dest="identifier: ETHIC_ADDRESS [18713,18726]"/>
  <match src="primitive_type [6236,6243]" dest="primitive_type [6800,6807]"/>
  <match src="identifier: to [99447,99449]" dest="identifier: to [38603,38605]"/>
  <match src="identifier: amount [21367,21373]" dest="identifier: amount [84426,84432]"/>
  <match src=",: , [8411,8412]" dest=",: , [8975,8976]"/>
  <match src="): ) [81729,81730]" dest="): ) [72227,72228]"/>
  <match src="expression_statement [84034,84151]" dest="expression_statement [80877,80983]"/>
  <match src=",: , [104483,104484]" dest=",: , [43639,43640]"/>
  <match src="(: ( [97832,97833]" dest="(: ( [36988,36989]"/>
  <match src="return_statement [93842,93871]" dest="return_statement [32998,33027]"/>
  <match src="member_expression [96545,96585]" dest="member_expression [35701,35741]"/>
  <match src="identifier: b [7013,7014]" dest="identifier: b [7577,7578]"/>
  <match src="member_expression [84499,84541]" dest="member_expression [73905,73933]"/>
  <match src="internal: internal [7477,7485]" dest="internal: internal [8041,8049]"/>
  <match src="return_type_definition [54426,54440]" dest="return_type_definition [22275,22289]"/>
  <match src="): ) [7831,7832]" dest="): ) [8395,8396]"/>
  <match src="): ) [93318,93319]" dest="): ) [32474,32475]"/>
  <match src=".: . [97268,97269]" dest=".: . [36424,36425]"/>
  <match src="(: ( [20114,20115]" dest="(: ( [65960,65961]"/>
  <match src="yul_path [87199,87206]" dest="yul_path [75709,75716]"/>
  <match src="visibility [55916,55924]" dest="visibility [23765,23773]"/>
  <match src="identifier: reason [104849,104855]" dest="identifier: reason [44005,44011]"/>
  <match src=",: , [30488,30489]" dest=",: , [48882,48883]"/>
  <match src="): ) [48087,48088]" dest="): ) [18220,18221]"/>
  <match src="identifier: transferFrom [81564,81576]" dest="identifier: transferFrom [72087,72099]"/>
  <match src="primitive_type [56005,56009]" dest="primitive_type [23854,23858]"/>
  <match src="identifier: State [89268,89273]" dest="identifier: State [30768,30773]"/>
  <match src="(: ( [13448,13449]" dest="(: ( [26437,26438]"/>
  <match src="{: { [96670,96671]" dest="{: { [35826,35827]"/>
  <match src="identifier: self [9298,9302]" dest="identifier: self [9862,9866]"/>
  <match src="primitive_type [97567,97574]" dest="primitive_type [36723,36730]"/>
  <match src="identifier: PAIR_ADDRESS [44471,44483]" dest="identifier: PAIR_ADDRESS [14604,14616]"/>
  <match src="parameter [31478,31490]" dest="parameter [49872,49884]"/>
  <match src="primitive_type [36756,36760]" dest="primitive_type [55150,55154]"/>
  <match src="(: ( [94508,94509]" dest="(: ( [33664,33665]"/>
  <match src="comment: /**      * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * IMPORTANT: Beware that changing an allowance with this method brings the risk      * that someone may use both the old and the new allowance by unfortunate      * transaction ordering. One possible solution to mitigate this race      * condition is to first reduce the spender's allowance to 0 and set the      * desired value afterwards:      * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      *      * Emits an {Approval} event.      */ [12399,13041]" dest="comment: /**      * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * IMPORTANT: Beware that changing an allowance with this method brings the risk      * that someone may use both the old and the new allowance by unfortunate      * transaction ordering. One possible solution to mitigate this race      * condition is to first reduce the spender's allowance to 0 and set the      * desired value afterwards:      * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      *      * Emits an {Approval} event.      */ [25388,26030]"/>
  <match src="identifier: encodePacked [29046,29058]" dest="identifier: encodePacked [47440,47452]"/>
  <match src="}: } [105813,105814]" dest="}: } [44969,44970]"/>
  <match src="return_type_definition [98497,98519]" dest="return_type_definition [37653,37675]"/>
  <match src="identifier: incrementBalanceOfStaged [83424,83448]" dest="identifier: incrementBalanceOfStaged [73958,73982]"/>
  <match src="identifier: self [6475,6479]" dest="identifier: self [7039,7043]"/>
  <match src="parameter [46292,46311]" dest="parameter [16425,16444]"/>
  <match src="state_mutability [96505,96509]" dest="state_mutability [35661,35665]"/>
  <match src="public: public [97546,97552]" dest="public: public [36702,36708]"/>
  <match src="}: } [95553,95554]" dest="}: } [34709,34710]"/>
  <match src=",: , [768,769]" dest=",: , [1332,1333]"/>
  <match src="type_name [105012,105019]" dest="type_name [44168,44175]"/>
  <match src="internal: internal [28348,28356]" dest="internal: internal [46742,46750]"/>
  <match src=",: , [29826,29827]" dest=",: , [48220,48221]"/>
  <match src="(: ( [73230,73231]" dest="(: ( [59229,59230]"/>
  <match src="pure: pure [48247,48251]" dest="pure: pure [18380,18384]"/>
  <match src="primitive_type [32083,32090]" dest="primitive_type [50477,50484]"/>
  <match src="memory: memory [8802,8808]" dest="memory: memory [9366,9372]"/>
  <match src="identifier: amount [101521,101527]" dest="identifier: amount [40677,40683]"/>
  <match src="identifier: coupons [88122,88129]" dest="identifier: coupons [29622,29629]"/>
  <match src="primitive_type [99530,99537]" dest="primitive_type [38686,38693]"/>
  <match src="identifier: account [97371,97378]" dest="identifier: account [36527,36534]"/>
  <match src="[: [ [35523,35524]" dest="[: [ [53917,53918]"/>
  <match src="type_name [70973,70980]" dest="type_name [66819,66826]"/>
  <match src="member_expression [8876,8886]" dest="member_expression [9440,9450]"/>
  <match src="identifier: totalStaged [85112,85123]" dest="identifier: totalStaged [59278,59289]"/>
  <match src="function_body [93320,93345]" dest="function_body [32476,32501]"/>
  <match src="identifier: must [30040,30044]" dest="identifier: must [48434,48438]"/>
  <match src="type_cast_expression [36761,36786]" dest="type_cast_expression [55155,55180]"/>
  <match src="}: } [30666,30667]" dest="}: } [49060,49061]"/>
  <match src="identifier: sender [55344,55350]" dest="identifier: sender [23193,23199]"/>
  <match src="identifier: msg [83879,83882]" dest="identifier: msg [72564,72567]"/>
  <match src="identifier: GOVERNANCE_PROPOSAL_THRESHOLD [46187,46216]" dest="identifier: GOVERNANCE_PROPOSAL_THRESHOLD [16320,16349]"/>
  <match src="return_type_definition [12375,12392]" dest="return_type_definition [25364,25381]"/>
  <match src="identifier: _state [89433,89439]" dest="identifier: _state [30933,30939]"/>
  <match src="}: } [94088,94089]" dest="}: } [33244,33245]"/>
  <match src="}: } [8562,8563]" dest="}: } [9126,9127]"/>
  <match src="returns: returns [93814,93821]" dest="returns: returns [32970,32977]"/>
  <match src=".: . [28010,28011]" dest=".: . [46404,46405]"/>
  <match src="state_mutability [8458,8462]" dest="state_mutability [9022,9026]"/>
  <match src="function_body [94556,94743]" dest="function_body [33712,33899]"/>
  <match src="member_expression [101033,101047]" dest="member_expression [40189,40203]"/>
  <match src="type_cast_expression [91245,91259]" dest="type_cast_expression [77555,77569]"/>
  <match src=",: , [85670,85671]" dest=",: , [79932,79933]"/>
  <match src="assignment_expression [104147,104191]" dest="assignment_expression [43303,43347]"/>
  <match src="parameter [56005,56009]" dest="parameter [23854,23858]"/>
  <match src="for_statement [35194,35596]" dest="for_statement [53588,53990]"/>
  <match src="parameter [51911,51925]" dest="parameter [27847,27861]"/>
  <match src="identifier: Epoch [89312,89317]" dest="identifier: Epoch [30812,30817]"/>
  <match src="): ) [100617,100618]" dest="): ) [39773,39774]"/>
  <match src=",: , [96928,96929]" dest=",: , [36084,36085]"/>
  <match src="uint256: uint256 [88158,88165]" dest="uint256: uint256 [29658,29665]"/>
  <match src="primitive_type [12384,12391]" dest="primitive_type [25373,25380]"/>
  <match src="call_argument [105568,105577]" dest="call_argument [44724,44733]"/>
  <match src="type_name [104800,104807]" dest="type_name [43956,43963]"/>
  <match src="variable_declaration [105448,105467]" dest="variable_declaration [44604,44623]"/>
  <match src="call_argument [20593,20599]" dest="call_argument [59504,59510]"/>
  <match src="}: } [8130,8131]" dest="}: } [8694,8695]"/>
  <match src="member_expression [101813,101844]" dest="member_expression [40969,41000]"/>
  <match src="identifier: accounts [102095,102103]" dest="identifier: accounts [41251,41259]"/>
  <match src="uint256: uint256 [96661,96668]" dest="uint256: uint256 [35817,35824]"/>
  <match src="type_name [63893,63897]" dest="type_name [28681,28685]"/>
  <match src=":: : [6586,6587]" dest=":: : [7150,7151]"/>
  <match src="type_name [88113,88120]" dest="type_name [29613,29620]"/>
  <match src="visibility [97399,97405]" dest="visibility [36555,36561]"/>
  <match src="type_alias [72286,72294]" dest="type_alias [56025,56033]"/>
  <match src="call_argument [84528,84536]" dest="call_argument [73915,73928]"/>
  <match src="{: { [94556,94557]" dest="{: { [33712,33713]"/>
  <match src="identifier: amount [102348,102354]" dest="identifier: amount [41504,41510]"/>
  <match src="state_variable_declaration [42410,42458]" dest="state_variable_declaration [12543,12591]"/>
  <match src="function_body [48270,48308]" dest="function_body [18403,18441]"/>
  <match src="pure: pure [45958,45962]" dest="pure: pure [16091,16095]"/>
  <match src=".: . [50805,50806]" dest=".: . [63814,63815]"/>
  <match src="(: ( [93153,93154]" dest="(: ( [32309,32310]"/>
  <match src="return: return [47063,47069]" dest="return: return [17196,17202]"/>
  <match src="{: { [7907,7908]" dest="{: { [8471,8472]"/>
  <match src="type_name [70155,70162]" dest="type_name [57105,57112]"/>
  <match src="primitive_type [30100,30107]" dest="primitive_type [48494,48501]"/>
  <match src="uint256: uint256 [42116,42123]" dest="uint256: uint256 [12249,12256]"/>
  <match src="uint256: uint256 [53155,53162]" dest="uint256: uint256 [65800,65807]"/>
  <match src="call_argument [106710,106717]" dest="call_argument [70052,70059]"/>
  <match src="return: return [87218,87224]" dest="return: return [75728,75734]"/>
  <match src="primitive_type [13114,13118]" dest="primitive_type [26103,26107]"/>
  <match src="identifier: account [81125,81132]" dest="identifier: account [71557,71564]"/>
  <match src="identifier: sub [100452,100455]" dest="identifier: sub [39608,39611]"/>
  <match src="memory: memory [4646,4652]" dest="memory: memory [5210,5216]"/>
  <match src="identifier: approveFor [97782,97792]" dest="identifier: approveFor [36938,36948]"/>
  <match src="return: return [94897,94903]" dest="return: return [34053,34059]"/>
  <match src="call_argument [29259,29267]" dest="call_argument [47653,47661]"/>
  <match src="function: function [94351,94359]" dest="function: function [33507,33515]"/>
  <match src="return_type_definition [47540,47569]" dest="return_type_definition [17673,17702]"/>
  <match src="uint256: uint256 [88702,88709]" dest="uint256: uint256 [30202,30209]"/>
  <match src="uint256: uint256 [104283,104290]" dest="uint256: uint256 [43439,43446]"/>
  <match src="type_name [88396,88403]" dest="type_name [29896,29903]"/>
  <match src="identifier: _state [100118,100124]" dest="identifier: _state [39274,39280]"/>
  <match src="type_name [1228,1235]" dest="type_name [1792,1799]"/>
  <match src="(: ( [28067,28068]" dest="(: ( [46461,46462]"/>
  <match src="primitive_type [34914,34919]" dest="primitive_type [53308,53313]"/>
  <match src="(: ( [98382,98383]" dest="(: ( [37538,37539]"/>
  <match src="return_statement [95132,95161]" dest="return_statement [34288,34317]"/>
  <match src="identifier: withdraw [81752,81760]" dest="identifier: withdraw [72250,72258]"/>
  <match src="(: ( [78092,78093]" dest="(: ( [61799,61800]"/>
  <match src="function_body [46698,46739]" dest="function_body [16831,16872]"/>
  <match src="return_statement [7175,7217]" dest="return_statement [7739,7781]"/>
  <match src="(: ( [55592,55593]" dest="(: ( [23441,23442]"/>
  <match src="uint: uint [56005,56009]" dest="uint: uint [23854,23858]"/>
  <match src="member_expression [100142,100167]" dest="member_expression [39298,39323]"/>
  <match src="(: ( [19702,19703]" dest="(: ( [65309,65310]"/>
  <match src="type_name [32135,32142]" dest="type_name [50529,50536]"/>
  <match src="address: address [30100,30107]" dest="address: address [48494,48501]"/>
  <match src="): ) [69188,69189]" dest="): ) [62591,62592]"/>
  <match src="state_mutability [46675,46679]" dest="state_mutability [16808,16812]"/>
  <match src="uint256: uint256 [34290,34297]" dest="uint256: uint256 [52684,52691]"/>
  <match src="identifier: epochs [96995,97001]" dest="identifier: epochs [36151,36157]"/>
  <match src="(: ( [32197,32198]" dest="(: ( [50591,50592]"/>
  <match src="): ) [36786,36787]" dest="): ) [55180,55181]"/>
  <match src="identifier: Setters [99329,99336]" dest="identifier: Setters [38485,38492]"/>
  <match src="augmented_assignment_expression [34082,34089]" dest="augmented_assignment_expression [52476,52483]"/>
  <match src="function: function [97773,97781]" dest="function: function [36929,36937]"/>
  <match src="): ) [101320,101321]" dest="): ) [40476,40477]"/>
  <match src="): ) [97292,97293]" dest="): ) [36448,36449]"/>
  <match src="variable_declaration [33132,33141]" dest="variable_declaration [51526,51535]"/>
  <match src="member_expression [108439,108453]" dest="member_expression [68855,68871]"/>
  <match src="parameter [32059,32073]" dest="parameter [50453,50467]"/>
  <match src="identifier: D256 [7596,7600]" dest="identifier: D256 [8160,8164]"/>
  <match src="parameter [102983,102998]" dest="parameter [42139,42154]"/>
  <match src="primitive_type [56319,56326]" dest="primitive_type [24168,24175]"/>
  <match src="internal: internal [4667,4675]" dest="internal: internal [5231,5239]"/>
  <match src="identifier: candidate [104689,104698]" dest="identifier: candidate [43845,43854]"/>
  <match src="external: external [12011,12019]" dest="external: external [25000,25008]"/>
  <match src="(: ( [80871,80872]" dest="(: ( [64178,64179]"/>
  <match src="event_paramater [55201,55213]" dest="event_paramater [23050,23062]"/>
  <match src="type_name [94414,94421]" dest="type_name [33570,33577]"/>
  <match src="=: = [7703,7704]" dest="=: = [8267,8268]"/>
  <match src=".: . [104346,104347]" dest=".: . [43502,43503]"/>
  <match src="): ) [36038,36039]" dest="): ) [54432,54433]"/>
  <match src="call_argument [78093,78128]" dest="call_argument [61800,61831]"/>
  <match src="address: address [13449,13456]" dest="address: address [26438,26445]"/>
  <match src="function_definition [93479,93573]" dest="function_definition [32635,32729]"/>
  <match src="function: function [56068,56076]" dest="function: function [23917,23925]"/>
  <match src="member_expression [9658,9672]" dest="member_expression [10222,10236]"/>
  <match src="uint256: uint256 [15890,15897]" dest="uint256: uint256 [19789,19796]"/>
  <match src="primitive_type [9767,9774]" dest="primitive_type [10331,10338]"/>
  <match src="(: ( [81561,81562]" dest="(: ( [72084,72085]"/>
  <match src=".: . [102890,102891]" dest=".: . [42046,42047]"/>
  <match src="primitive_type [66988,66995]" dest="primitive_type [80993,81000]"/>
  <match src="internal: internal [8027,8035]" dest="internal: internal [8591,8599]"/>
  <match src="identifier: compareTo [9429,9438]" dest="identifier: compareTo [9993,10002]"/>
  <match src="visibility [11081,11089]" dest="visibility [56160,56168]"/>
  <match src="call_argument [28709,28715]" dest="call_argument [47103,47109]"/>
  <match src="call_expression [45504,45546]" dest="call_expression [15637,15679]"/>
  <match src="function: function [11958,11966]" dest="function: function [24947,24955]"/>
  <match src="): ) [26005,26006]" dest="): ) [80288,80289]"/>
  <match src="uint: uint [55269,55273]" dest="uint: uint [23118,23122]"/>
  <match src="string_literal [21236,21272]" dest="string_literal [56966,57010]"/>
  <match src="function: function [97640,97648]" dest="function: function [36796,36804]"/>
  <match src="identifier: _state [101033,101039]" dest="identifier: _state [40189,40195]"/>
  <match src="primitive_type [53492,53499]" dest="primitive_type [61449,61456]"/>
  <match src="identifier: decrementBalanceOfStaged [82793,82817]" dest="identifier: decrementBalanceOfStaged [72959,72983]"/>
  <match src=".: . [98412,98413]" dest=".: . [37568,37569]"/>
  <match src="function_definition [55541,55599]" dest="function_definition [23390,23448]"/>
  <match src="(: ( [95638,95639]" dest="(: ( [34794,34795]"/>
  <match src="parameter [1644,1653]" dest="parameter [2208,2217]"/>
  <match src="type_name [11689,11696]" dest="type_name [24678,24685]"/>
  <match src="identifier: _state [102534,102540]" dest="identifier: _state [41690,41696]"/>
  <match src="number_literal: 0 [87232,87233]" dest="number_literal: 0 [75742,75743]"/>
  <match src="state_variable_declaration [44160,44206]" dest="state_variable_declaration [14293,14339]"/>
  <match src="(: ( [33586,33587]" dest="(: ( [51980,51981]"/>
  <match src="+: + [397,398]" dest="+: + [961,962]"/>
  <match src="struct_member [88343,88359]" dest="struct_member [29843,29859]"/>
  <match src="return_type_definition [54579,54593]" dest="return_type_definition [22428,22442]"/>
  <match src="member_expression [100259,100278]" dest="member_expression [39415,39434]"/>
  <match src="identifier: epoch [104355,104360]" dest="identifier: epoch [43511,43516]"/>
  <match src="private: private [44168,44175]" dest="private: private [14301,14308]"/>
  <match src="parameter [6086,6095]" dest="parameter [6650,6659]"/>
  <match src="): ) [81204,81205]" dest="): ) [83759,83760]"/>
  <match src="uint256: uint256 [104636,104643]" dest="uint256: uint256 [43792,43799]"/>
  <match src="identifier: D256 [8476,8480]" dest="identifier: D256 [9040,9044]"/>
  <match src="member_expression [99985,99999]" dest="member_expression [39141,39155]"/>
  <match src="type_name [7097,7104]" dest="type_name [7661,7668]"/>
  <match src=",: , [91122,91123]" dest=",: , [77432,77433]"/>
  <match src="(: ( [96164,96165]" dest="(: ( [35320,35321]"/>
  <match src="return_type_definition [92957,92972]" dest="return_type_definition [32113,32128]"/>
  <match src="parameter [33798,33811]" dest="parameter [52192,52205]"/>
  <match src="(: ( [94413,94414]" dest="(: ( [33569,33570]"/>
  <match src="parameter [104485,104504]" dest="parameter [43641,43660]"/>
  <match src="type_name [10010,10014]" dest="type_name [10574,10578]"/>
  <match src="identifier: Decimal [45972,45979]" dest="identifier: Decimal [16105,16112]"/>
  <match src="primitive_type [97967,97974]" dest="primitive_type [37123,37130]"/>
  <match src="primitive_type [81074,81081]" dest="primitive_type [71506,71513]"/>
  <match src="identifier: reason [105241,105247]" dest="identifier: reason [44397,44403]"/>
  <match src="identifier: sub [7964,7967]" dest="identifier: sub [8528,8531]"/>
  <match src="identifier: account [95215,95222]" dest="identifier: account [34371,34378]"/>
  <match src=".: . [69296,69297]" dest=".: . [81944,81945]"/>
  <match src="(: ( [82981,82982]" dest="(: ( [73134,73135]"/>
  <match src="identifier: b [4717,4718]" dest="identifier: b [5281,5282]"/>
  <match src="identifier: SafeMath [92510,92518]" dest="identifier: SafeMath [31666,31674]"/>
  <match src="parameter [44886,44893]" dest="parameter [15019,15026]"/>
  <match src="(: ( [7906,7907]" dest="(: ( [8470,8471]"/>
  <match src="identifier: _state [95199,95205]" dest="identifier: _state [34355,34361]"/>
  <match src="call_argument [28457,28737]" dest="call_argument [46851,47131]"/>
  <match src="identifier: sender [84653,84659]" dest="identifier: sender [64243,64249]"/>
  <match src="type_name [106538,106545]" dest="type_name [69880,69887]"/>
  <match src="parameter [2558,2567]" dest="parameter [3122,3131]"/>
  <match src="type_name [54588,54592]" dest="type_name [22437,22441]"/>
  <match src="event_paramater [54074,54095]" dest="event_paramater [21923,21944]"/>
  <match src="{: { [8317,8318]" dest="{: { [8881,8882]"/>
  <match src=",: , [102051,102052]" dest=",: , [41207,41208]"/>
  <match src="parameter [12344,12359]" dest="parameter [25333,25348]"/>
  <match src="parameter [103876,103889]" dest="parameter [43032,43045]"/>
  <match src="type_name [56112,56116]" dest="type_name [23961,23965]"/>
  <match src="function: function [90997,91005]" dest="function: function [77307,77315]"/>
  <match src=",: , [8348,8349]" dest=",: , [8912,8913]"/>
  <match src="variable_declaration [79136,79149]" dest="variable_declaration [62968,62989]"/>
  <match src="(: ( [48358,48359]" dest="(: ( [18491,18492]"/>
  <match src="type_name [27674,27678]" dest="type_name [46068,46072]"/>
  <match src="user_defined_type [9591,9595]" dest="user_defined_type [10155,10159]"/>
  <match src="number_literal: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc [92620,92686]" dest="number_literal: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc [31776,31842]"/>
  <match src="call_argument [91576,91593]" dest="call_argument [77886,77903]"/>
  <match src="emit_statement [81979,82012]" dest="emit_statement [72463,72496]"/>
  <match src="private: private [65504,65511]" dest="private: private [60816,60823]"/>
  <match src="user_defined_type [6540,6544]" dest="user_defined_type [7104,7108]"/>
  <match src="(: ( [758,759]" dest="(: ( [1322,1323]"/>
  <match src="function_body [30862,31430]" dest="function_body [49256,49824]"/>
  <match src="identifier: candidate [97388,97397]" dest="identifier: candidate [36544,36553]"/>
  <match src="member_expression [100750,100779]" dest="member_expression [39906,39935]"/>
  <match src="}: } [46627,46628]" dest="}: } [16760,16761]"/>
  <match src="identifier: SafeMath [99367,99375]" dest="identifier: SafeMath [38523,38531]"/>
  <match src="): ) [104136,104137]" dest="): ) [43292,43293]"/>
  <match src="expression_statement [78043,78130]" dest="expression_statement [61842,61896]"/>
  <match src="identifier: amount0Out [55413,55423]" dest="identifier: amount0Out [23262,23272]"/>
  <match src="user_defined_type [7813,7817]" dest="user_defined_type [8377,8381]"/>
  <match src="internal: internal [102847,102855]" dest="internal: internal [42003,42011]"/>
  <match src="primitive_type [56405,56412]" dest="primitive_type [24254,24261]"/>
  <match src="bool: bool [9120,9124]" dest="bool: bool [9684,9688]"/>
  <match src="identifier: amount [101185,101191]" dest="identifier: amount [40341,40347]"/>
  <match src="comment: /**      * Account      */ [100808,100834]" dest="comment: /**      * Account      */ [39964,39990]"/>
  <match src="function_body [9126,9173]" dest="function_body [9690,9737]"/>
  <match src="identifier: outstanding [102220,102231]" dest="identifier: outstanding [41376,41387]"/>
  <match src="return_statement [8503,8565]" dest="return_statement [9067,9129]"/>
  <match src="state_mutability [45958,45962]" dest="state_mutability [16091,16095]"/>
  <match src="call_argument [53130,53136]" dest="call_argument [65777,65783]"/>
  <match src="**: ** [5676,5678]" dest="**: ** [6240,6242]"/>
  <match src="function_definition [100484,100625]" dest="function_definition [39640,39781]"/>
  <match src="(: ( [28968,28969]" dest="(: ( [47362,47363]"/>
  <match src="array_access [94440,94464]" dest="array_access [33596,33620]"/>
  <match src="type_name [88726,88733]" dest="type_name [30226,30233]"/>
  <match src="identifier: _state [102088,102094]" dest="identifier: _state [41244,41250]"/>
  <match src="uint256: uint256 [88453,88460]" dest="uint256: uint256 [29953,29960]"/>
  <match src="type_name [45972,45984]" dest="type_name [16105,16117]"/>
  <match src="identifier: result [36471,36477]" dest="identifier: result [54865,54871]"/>
  <match src="(: ( [82448,82449]" dest="(: ( [67838,67839]"/>
  <match src="parameter [19738,19752]" dest="parameter [65360,65374]"/>
  <match src="identifier: div [82652,82655]" dest="identifier: div [72845,72848]"/>
  <match src="identifier: oracle [108439,108445]" dest="identifier: oracle [68855,68861]"/>
  <match src="primitive_type [3203,3210]" dest="primitive_type [3767,3774]"/>
  <match src="return_statement [48032,48089]" dest="return_statement [18165,18222]"/>
  <match src="identifier: spender [103075,103082]" dest="identifier: spender [42231,42238]"/>
  <match src=",: , [31514,31515]" dest=",: , [49908,49909]"/>
  <match src="function_definition [6063,6206]" dest="function_definition [6627,6770]"/>
  <match src="identifier: epoch [102121,102126]" dest="identifier: epoch [41277,41282]"/>
  <match src="identifier: b [10022,10023]" dest="identifier: b [10586,10587]"/>
  <match src="identifier: to [54192,54194]" dest="identifier: to [22041,22043]"/>
  <match src="pure: pure [32175,32179]" dest="pure: pure [50569,50573]"/>
  <match src="): ) [22130,22131]" dest="): ) [65271,65272]"/>
  <match src="return: return [48032,48038]" dest="return: return [18165,18171]"/>
  <match src="returns: returns [8467,8474]" dest="returns: returns [9031,9038]"/>
  <match src="function: function [55604,55612]" dest="function: function [23453,23461]"/>
  <match src="comment: // 20,000 ETHC for initial liquidity [43024,43060]" dest="comment: // 20,000 ETHC for initial liquidity [13157,13193]"/>
  <match src="{: { [88497,88498]" dest="{: { [29997,29998]"/>
  <match src="uint256: uint256 [78987,78994]" dest="uint256: uint256 [63749,63756]"/>
  <match src="primitive_type [3214,3221]" dest="primitive_type [3778,3785]"/>
  <match src="return_statement [9422,9452]" dest="return_statement [9986,10016]"/>
  <match src="internal: internal [101529,101537]" dest="internal: internal [40685,40693]"/>
  <match src="member_expression [100722,100736]" dest="member_expression [39878,39892]"/>
  <match src="private: private [42778,42785]" dest="private: private [12911,12918]"/>
  <match src="member_expression [97725,97742]" dest="member_expression [36881,36898]"/>
  <match src="identifier: div [7387,7390]" dest="identifier: div [7951,7954]"/>
  <match src="string_literal [84111,84140]" dest="string_literal [80957,80972]"/>
  <match src="view: view [96647,96651]" dest="view: view [35803,35807]"/>
  <match src="}: } [106824,106825]" dest="}: } [70166,70167]"/>
  <match src=",: , [102418,102419]" dest=",: , [41574,41575]"/>
  <match src="identifier: that [84042,84046]" dest="identifier: that [80885,80889]"/>
  <match src="primitive_type [43840,43847]" dest="primitive_type [13973,13980]"/>
  <match src="identifier: balanceOfRewarded [73961,73978]" dest="identifier: limit [68183,68188]"/>
  <match src="uint: uint [55593,55597]" dest="uint: uint [23442,23446]"/>
  <match src=",: , [21998,21999]" dest=",: , [65104,65105]"/>
  <match src="]: ] [103056,103057]" dest="]: ] [42212,42213]"/>
  <match src="call_argument [35900,35902]" dest="call_argument [54294,54296]"/>
  <match src="(: ( [35977,35978]" dest="(: ( [54371,54372]"/>
  <match src="state_mutability [11715,11719]" dest="state_mutability [24704,24708]"/>
  <match src=".: . [103483,103484]" dest=".: . [42639,42640]"/>
  <match src="type_name [93024,93031]" dest="type_name [32180,32187]"/>
  <match src="call_argument [91285,91302]" dest="call_argument [77595,77612]"/>
  <match src="identifier: IDAO [80867,80871]" dest="identifier: burnFromAccount [64163,64178]"/>
  <match src="function: function [93005,93013]" dest="function: function [32161,32169]"/>
  <match src="struct: struct [89137,89143]" dest="struct: struct [30637,30643]"/>
  <match src="call_argument [7931,7938]" dest="call_argument [8495,8502]"/>
  <match src="identifier: ethic [88898,88903]" dest="identifier: ethic [30398,30403]"/>
  <match src="primitive_type [29476,29480]" dest="primitive_type [47870,47874]"/>
  <match src="primitive_type [35287,35294]" dest="primitive_type [53681,53688]"/>
  <match src="mapping: mapping [89241,89248]" dest="mapping: mapping [30741,30748]"/>
  <match src="comment: // 'x' [27530,27536]" dest="comment: // 'x' [45924,45930]"/>
  <match src="visibility [6509,6517]" dest="visibility [7073,7081]"/>
  <match src="(: ( [48153,48154]" dest="(: ( [18286,18287]"/>
  <match src="type_name [88679,88686]" dest="type_name [30179,30186]"/>
  <match src="): ) [29974,29975]" dest="): ) [48368,48369]"/>
  <match src="): ) [7519,7520]" dest="): ) [8083,8084]"/>
  <match src="type_name [48655,48662]" dest="type_name [18788,18795]"/>
  <match src="}: } [89441,89442]" dest="}: } [30941,30942]"/>
  <match src="return: return [48378,48384]" dest="return: return [18511,18517]"/>
  <match src="{: { [95118,95119]" dest="{: { [34274,34275]"/>
  <match src="state_mutability [9251,9255]" dest="state_mutability [9815,9819]"/>
  <match src="visibility [44863,44871]" dest="visibility [14996,15004]"/>
  <match src="is: is [99337,99339]" dest="is: is [38493,38495]"/>
  <match src="type_name [9265,9269]" dest="type_name [9829,9833]"/>
  <match src="returns: returns [73322,73329]" dest="returns: returns [82569,82576]"/>
  <match src="}: } [93976,93977]" dest="}: } [33132,33133]"/>
  <match src="(: ( [47897,47898]" dest="(: ( [18030,18031]"/>
  <match src="identifier: recipient [20123,20132]" dest="identifier: recipient [65969,65978]"/>
  <match src="identifier: totalSupply [94615,94626]" dest="identifier: totalSupply [33771,33782]"/>
  <match src="type_name [88094,88121]" dest="type_name [29594,29621]"/>
  <match src="comment: /*     Copyright 2021 Ethic Money Devs &lt;devs@ethic.money&gt; and Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [63101,63784]" dest="comment: /*     Copyright 2021 Ethic Money Devs &lt;devs@ethic.money&gt; and Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [30944,31627]"/>
  <match src="identifier: payloadC [32143,32151]" dest="identifier: payloadC [50537,50545]"/>
  <match src="}: } [46048,46049]" dest="}: } [16181,16182]"/>
  <match src="primitive_type [97191,97198]" dest="primitive_type [36347,36354]"/>
  <match src="view: view [92756,92760]" dest="view: view [31912,31916]"/>
  <match src=".: . [101376,101377]" dest=".: . [40532,40533]"/>
  <match src="(: ( [102909,102910]" dest="(: ( [42065,42066]"/>
  <match src="member_expression [73225,73242]" dest="member_expression [59224,59241]"/>
  <match src="member_expression [96225,96239]" dest="member_expression [35381,35395]"/>
  <match src="member_expression [96826,96839]" dest="member_expression [35982,35995]"/>
  <match src="member_expression [103772,103785]" dest="member_expression [42928,42941]"/>
  <match src="returns: returns [94022,94029]" dest="returns: returns [33178,33185]"/>
  <match src="uint256: uint256 [16510,16517]" dest="uint256: uint256 [57339,57346]"/>
  <match src="view: view [73317,73321]" dest="view: view [82564,82568]"/>
  <match src="uint112: uint112 [55517,55524]" dest="uint112: uint112 [23366,23373]"/>
  <match src="identifier: amount [17070,17076]" dest="identifier: amount [59962,59968]"/>
  <match src="identifier: amount [19746,19752]" dest="identifier: amount [65368,65374]"/>
  <match src="{: { [7525,7526]" dest="{: { [8089,8090]"/>
  <match src="return_statement [87218,87234]" dest="return_statement [75728,75744]"/>
  <match src="member_expression [97993,98028]" dest="member_expression [37149,37184]"/>
  <match src="=: = [92618,92619]" dest="=: = [31774,31775]"/>
  <match src="): ) [8487,8488]" dest="): ) [9051,9052]"/>
  <match src="primitive_type [43624,43631]" dest="primitive_type [13757,13764]"/>
  <match src="struct: struct [88865,88871]" dest="struct: struct [30365,30371]"/>
  <match src="call_argument [8350,8356]" dest="call_argument [8914,8920]"/>
  <match src="primitive_type [95639,95646]" dest="primitive_type [34795,34802]"/>
  <match src="primitive_type [99409,99416]" dest="primitive_type [38565,38572]"/>
  <match src="parameter [77507,77521]" dest="parameter [62577,62591]"/>
  <match src="identifier: Require [83110,83117]" dest="identifier: Require [82096,82103]"/>
  <match src="type_name [81350,81357]" dest="type_name [79151,79158]"/>
  <match src="identifier: epoch [97140,97145]" dest="identifier: epoch [36296,36301]"/>
  <match src="identifier: a [1225,1226]" dest="identifier: a [1789,1790]"/>
  <match src="]: ] [95093,95094]" dest="]: ] [34249,34250]"/>
  <match src="call_expression [29800,29826]" dest="call_expression [48194,48220]"/>
  <match src="call_argument [31072,31098]" dest="call_argument [49466,49492]"/>
  <match src="identifier: period [97754,97760]" dest="identifier: period [36910,36916]"/>
  <match src="primitive_type [15817,15824]" dest="primitive_type [19760,19767]"/>
  <match src="identifier: sender [79469,79475]" dest="identifier: sender [83889,83895]"/>
  <match src="): ) [94304,94305]" dest="): ) [33460,33461]"/>
  <match src="function_definition [48504,48600]" dest="function_definition [18637,18733]"/>
  <match src="call_argument [28068,28072]" dest="call_argument [46462,46466]"/>
  <match src="yul_function_call [87187,87207]" dest="yul_function_call [75697,75717]"/>
  <match src=".: . [98297,98298]" dest=".: . [37453,37454]"/>
  <match src="view: view [55991,55995]" dest="view: view [23840,23844]"/>
  <match src="number_literal: 48 [27417,27419]" dest="number_literal: 48 [45811,45813]"/>
  <match src="call_argument [23133,23139]" dest="call_argument [56711,56717]"/>
  <match src="comment: /**      * @dev Returns the amount of tokens in existence.      */ [11461,11527]" dest="comment: /**      * @dev Returns the amount of tokens in existence.      */ [24450,24516]"/>
  <match src="call_expression [106701,106718]" dest="call_expression [70043,70060]"/>
  <match src="(: ( [102173,102174]" dest="(: ( [41329,41330]"/>
  <match src="): ) [6049,6050]" dest="): ) [6613,6614]"/>
  <match src="identifier: updatePrice [67608,67619]" dest="identifier: oracleCapture [67115,67128]"/>
  <match src="return_statement [69232,69248]" dest="return_statement [62633,62707]"/>
  <match src="identifier: must [29605,29609]" dest="identifier: must [47999,48003]"/>
  <match src="internal: internal [48736,48744]" dest="internal: internal [18869,18877]"/>
  <match src="{: { [87177,87178]" dest="{: { [75687,75688]"/>
  <match src="call_struct_argument [6581,6615]" dest="call_struct_argument [7145,7179]"/>
  <match src="identifier: D256 [7813,7817]" dest="identifier: D256 [8377,8381]"/>
  <match src="expression_statement [85456,85562]" dest="expression_statement [79347,79458]"/>
  <match src="binary_expression [10160,10177]" dest="binary_expression [10724,10741]"/>
  <match src=".: . [100156,100157]" dest=".: . [39312,39313]"/>
  <match src="indexed: indexed [54162,54169]" dest="indexed: indexed [22011,22018]"/>
  <match src="function: function [46983,46991]" dest="function: function [17116,17124]"/>
  <match src=".: . [101871,101872]" dest=".: . [41027,41028]"/>
  <match src="member_expression [101234,101266]" dest="member_expression [40390,40422]"/>
  <match src="address: address [54176,54183]" dest="address: address [22025,22032]"/>
  <match src="return: return [10153,10159]" dest="return: return [10717,10723]"/>
  <match src="primitive_type [21988,21995]" dest="primitive_type [65094,65101]"/>
  <match src="return_type_definition [9869,9886]" dest="return_type_definition [10433,10450]"/>
  <match src="primitive_type [68757,68764]" dest="primitive_type [72708,72715]"/>
  <match src="type_name [106914,106921]" dest="type_name [70256,70263]"/>
  <match src="external: external [55733,55741]" dest="external: external [23582,23590]"/>
  <match src="primitive_type [44446,44453]" dest="primitive_type [14579,14586]"/>
  <match src="identifier: reason [101314,101320]" dest="identifier: reason [40470,40476]"/>
  <match src="identifier: stringify [31156,31165]" dest="identifier: stringify [49550,49559]"/>
  <match src="identifier: account [105646,105653]" dest="identifier: account [44802,44809]"/>
  <match src="): ) [33020,33021]" dest="): ) [51414,51415]"/>
  <match src="primitive_type [26048,26055]" dest="primitive_type [56633,56640]"/>
  <match src=".: . [7920,7921]" dest=".: . [8484,8485]"/>
  <match src=".: . [100124,100125]" dest=".: . [39280,39281]"/>
  <match src="address: address [95314,95321]" dest="address: address [34470,34477]"/>
  <match src="parameter [46922,46929]" dest="parameter [17055,17062]"/>
  <match src="private: private [36633,36640]" dest="private: private [55027,55034]"/>
  <match src="parenthesized_expression [34554,34562]" dest="parenthesized_expression [52948,52956]"/>
  <match src="member_expression [100410,100429]" dest="member_expression [39566,39585]"/>
  <match src="visibility [100391,100399]" dest="visibility [39547,39555]"/>
  <match src="assignment_expression [104671,104758]" dest="assignment_expression [43827,43914]"/>
  <match src="emit_statement [101077,101120]" dest="emit_statement [40233,40276]"/>
  <match src="struct_declaration [88022,88247]" dest="struct_declaration [29522,29747]"/>
  <match src="type_name [11995,12002]" dest="type_name [24984,24991]"/>
  <match src="private: private [42576,42583]" dest="private: private [12709,12716]"/>
  <match src="call_struct_argument [45131,45151]" dest="call_struct_argument [15264,15284]"/>
  <match src="visibility [104299,104307]" dest="visibility [43455,43463]"/>
  <match src="type_name [9082,9086]" dest="type_name [9646,9650]"/>
  <match src="primitive_type [89059,89066]" dest="primitive_type [30559,30566]"/>
  <match src="identifier: burnFrom [23055,23063]" dest="identifier: redeemToAccount [56617,56632]"/>
  <match src="&amp;: &amp; [35545,35546]" dest="&amp;: &amp; [53939,53940]"/>
  <match src="state_mutability [54574,54578]" dest="state_mutability [22423,22427]"/>
  <match src="function_definition [100031,100190]" dest="function_definition [39187,39346]"/>
  <match src="identifier: this [50093,50097]" dest="identifier: this [56446,56450]"/>
  <match src="): ) [92943,92944]" dest="): ) [32099,32100]"/>
  <match src="primitive_type [99771,99778]" dest="primitive_type [38927,38934]"/>
  <match src="(: ( [105392,105393]" dest="(: ( [44548,44549]"/>
  <match src="primitive_type [48554,48561]" dest="primitive_type [18687,18694]"/>
  <match src="[: [ [104389,104390]" dest="[: [ [43545,43546]"/>
  <match src="if: if [1926,1928]" dest="if: if [2490,2492]"/>
  <match src="}: } [879,880]" dest="}: } [1443,1444]"/>
  <match src="address: address [101091,101098]" dest="address: address [40247,40254]"/>
  <match src="parameter [56177,56189]" dest="parameter [24026,24038]"/>
  <match src="type_name [52850,52857]" dest="type_name [56144,56151]"/>
  <match src="member_expression [105758,105798]" dest="member_expression [44914,44954]"/>
  <match src="}: } [6624,6625]" dest="}: } [7188,7189]"/>
  <match src="visibility [65504,65511]" dest="visibility [60816,60823]"/>
  <match src="expression_statement [35437,35448]" dest="expression_statement [53831,53842]"/>
  <match src="return_type_definition [95785,95802]" dest="return_type_definition [34941,34958]"/>
  <match src=".: . [100287,100288]" dest=".: . [39443,39444]"/>
  <match src="}: } [29440,29441]" dest="}: } [47834,47835]"/>
  <match src="uint256: uint256 [9632,9639]" dest="uint256: uint256 [10196,10203]"/>
  <match src="member_expression [81556,81576]" dest="member_expression [72079,72099]"/>
  <match src=",: , [54095,54096]" dest=",: , [21944,21945]"/>
  <match src="assignment_expression [105630,105676]" dest="assignment_expression [44786,44832]"/>
  <match src="member_expression [103229,103268]" dest="member_expression [42385,42424]"/>
  <match src="identifier: account [81407,81414]" dest="identifier: account [79201,79208]"/>
  <match src="&quot;: &quot; [21137,21138]" dest="&quot;: &quot; [64619,64620]"/>
  <match src="function: function [3190,3198]" dest="function: function [3754,3762]"/>
  <match src="internal: internal [68992,69000]" dest="internal: internal [67068,67076]"/>
  <match src="primitive_type [27674,27678]" dest="primitive_type [46068,46072]"/>
  <match src="identifier: payloadA [31166,31174]" dest="identifier: payloadA [49560,49568]"/>
  <match src="&gt;: &gt; [105601,105602]" dest="&gt;: &gt; [44757,44758]"/>
  <match src="identifier: totalRewarded [73162,73175]" dest="identifier: balanceCheck [59165,59177]"/>
  <match src="[: [ [95526,95527]" dest="[: [ [34682,34683]"/>
  <match src="parameter [32847,32860]" dest="parameter [51241,51254]"/>
  <match src="event_definition [55220,55303]" dest="event_definition [23069,23152]"/>
  <match src="type_name [31500,31507]" dest="type_name [49894,49901]"/>
  <match src="number_literal: 41 [35386,35388]" dest="number_literal: 41 [53780,53782]"/>
  <match src=",: , [54174,54175]" dest=",: , [22023,22024]"/>
  <match src="(: ( [83783,83784]" dest="(: ( [73645,73646]"/>
  <match src="primitive_type [32243,32249]" dest="primitive_type [50637,50643]"/>
  <match src="parameter [30787,30803]" dest="parameter [49181,49197]"/>
  <match src="}: } [7402,7403]" dest="}: } [7966,7967]"/>
  <match src="parameter [104800,104817]" dest="parameter [43956,43973]"/>
  <match src="constant: constant [43778,43786]" dest="constant: constant [13911,13919]"/>
  <match src="call_argument [19799,19800]" dest="call_argument [65421,65422]"/>
  <match src="member_expression [105104,105121]" dest="member_expression [44260,44277]"/>
  <match src="visibility [103891,103899]" dest="visibility [43047,43055]"/>
  <match src="function_definition [94351,94478]" dest="function_definition [33507,33634]"/>
  <match src="return_type_definition [46791,46808]" dest="return_type_definition [16924,16941]"/>
  <match src="if: if [29600,29602]" dest="if: if [47994,47996]"/>
  <match src="=: = [3409,3410]" dest="=: = [3973,3974]"/>
  <match src="contract_body [15758,22547]" dest="contract_body [60769,66003]"/>
  <match src="string: string [27979,27985]" dest="string: string [46373,46379]"/>
  <match src="type_name [28834,28841]" dest="type_name [47228,47235]"/>
  <match src="(: ( [8096,8097]" dest="(: ( [8660,8661]"/>
  <match src="struct: struct [88371,88377]" dest="struct: struct [29871,29877]"/>
  <match src="function_definition [85008,85223]" dest="function_definition [59393,59570]"/>
  <match src="function_definition [11958,12035]" dest="function_definition [24947,25024]"/>
  <match src="call_argument [17070,17076]" dest="call_argument [59962,59968]"/>
  <match src="bool: bool [67753,67757]" dest="bool: bool [68841,68845]"/>
  <match src="(: ( [74016,74017]" dest="(: ( [62815,62816]"/>
  <match src="call_expression [80867,80883]" dest="call_expression [64163,64203]"/>
  <match src=",: , [82716,82717]" dest=",: , [73440,73441]"/>
  <match src="): ) [89273,89274]" dest="): ) [30773,30774]"/>
  <match src="identifier: accounts [103236,103244]" dest="identifier: accounts [42392,42400]"/>
  <match src="call_expression [83778,83792]" dest="call_expression [73640,73654]"/>
  <match src="identifier: TREASURY_INCENTIVE [43254,43272]" dest="identifier: TREASURY_INCENTIVE [13387,13405]"/>
  <match src="primitive_type [71245,71252]" dest="primitive_type [66943,66950]"/>
  <match src="returns: returns [97411,97418]" dest="returns: returns [36567,36574]"/>
  <match src="function_definition [104588,104765]" dest="function_definition [43744,43921]"/>
  <match src="(: ( [43185,43186]" dest="(: ( [13318,13319]"/>
  <match src="address: address [95002,95009]" dest="address: address [34158,34165]"/>
  <match src="return_statement [45763,45788]" dest="return_statement [15896,15921]"/>
  <match src=",: , [101191,101192]" dest=",: , [40347,40348]"/>
  <match src=",: , [107188,107189]" dest=",: , [70530,70531]"/>
  <match src="function_definition [98459,98632]" dest="function_definition [37615,37788]"/>
  <match src="primitive_type [56396,56403]" dest="primitive_type [24245,24252]"/>
  <match src="identifier: add [84448,84451]" dest="identifier: sub [81059,81062]"/>
  <match src="): ) [27892,27893]" dest="): ) [46286,46287]"/>
  <match src="expression_statement [104372,104417]" dest="expression_statement [43528,43573]"/>
  <match src="return_type_definition [33843,33865]" dest="return_type_definition [52237,52259]"/>
  <match src="(: ( [46102,46103]" dest="(: ( [16235,16236]"/>
  <match src="primitive_type [36609,36616]" dest="primitive_type [55003,55010]"/>
  <match src="call_argument [6191,6195]" dest="call_argument [6755,6759]"/>
  <match src="(: ( [30686,30687]" dest="(: ( [49080,49081]"/>
  <match src="comment: /* Governance */ [42389,42405]" dest="comment: /* Governance */ [12522,12538]"/>
  <match src="): ) [55763,55764]" dest="): ) [23612,23613]"/>
  <match src="state_mutability [9618,9622]" dest="state_mutability [10182,10186]"/>
  <match src="type_cast_expression [79548,79561]" dest="type_cast_expression [59947,59960]"/>
  <match src="type_name [55384,55388]" dest="type_name [23233,23237]"/>
  <match src="identifier: amount [102691,102697]" dest="identifier: amount [41847,41853]"/>
  <match src=".: . [94172,94173]" dest=".: . [33328,33329]"/>
  <match src=".: . [68512,68513]" dest=".: . [82700,82701]"/>
  <match src="event_paramater [55360,55374]" dest="event_paramater [23209,23223]"/>
  <match src="uint256: uint256 [101177,101184]" dest="uint256: uint256 [40333,40340]"/>
  <match src="identifier: totalSupply [93142,93153]" dest="identifier: totalSupply [32298,32309]"/>
  <match src="identifier: Vote [88794,88798]" dest="identifier: Vote [30294,30298]"/>
  <match src="function: function [9323,9331]" dest="function: function [9887,9895]"/>
  <match src="): ) [23139,23140]" dest="): ) [56717,56718]"/>
  <match src="primitive_type [102451,102457]" dest="primitive_type [41607,41613]"/>
  <match src="public: public [93497,93503]" dest="public: public [32653,32659]"/>
  <match src="uint256: uint256 [30813,30820]" dest="uint256: uint256 [49207,49214]"/>
  <match src="call_expression [6793,6804]" dest="call_expression [7357,7368]"/>
  <match src="}: } [103098,103099]" dest="}: } [42254,42255]"/>
  <match src="identifier: _state [104671,104677]" dest="identifier: _state [43827,43833]"/>
  <match src="identifier: payloadB [30134,30142]" dest="identifier: payloadB [48528,48536]"/>
  <match src="visibility [96941,96947]" dest="visibility [36097,36103]"/>
  <match src="member_expression [102603,102643]" dest="member_expression [41759,41799]"/>
  <match src="binary_expression [3369,3374]" dest="binary_expression [3933,3938]"/>
  <match src=",: , [103153,103154]" dest=",: , [42309,42310]"/>
  <match src="view: view [94228,94232]" dest="view: view [33384,33388]"/>
  <match src="return: return [823,829]" dest="return: return [1387,1393]"/>
  <match src="uint256: uint256 [770,777]" dest="uint256: uint256 [1334,1341]"/>
  <match src="call_argument [31783,31809]" dest="call_argument [50177,50203]"/>
  <match src="call_argument [81597,81601]" dest="call_argument [72120,72124]"/>
  <match src="call_argument [31201,31206]" dest="call_argument [49595,49600]"/>
  <match src="(: ( [103580,103581]" dest="(: ( [42736,42737]"/>
  <match src="): ) [82382,82383]" dest="): ) [73254,73255]"/>
  <match src="return_type_definition [6721,6742]" dest="return_type_definition [7285,7306]"/>
  <match src="public: public [51927,51933]" dest="public: public [27863,27869]"/>
  <match src="identifier: INITIAL_COUPON_REDEMPTION_PENALTY [43787,43820]" dest="identifier: INITIAL_COUPON_REDEMPTION_PENALTY [13920,13953]"/>
  <match src="identifier: reason [30404,30410]" dest="identifier: reason [48798,48804]"/>
  <match src="state_mutability [9507,9511]" dest="state_mutability [10071,10075]"/>
  <match src="type_name [92770,92776]" dest="type_name [31926,31932]"/>
  <match src="variable_declaration_statement [86700,86713]" dest="variable_declaration_statement [75210,75223]"/>
  <match src="call_expression [30304,30328]" dest="call_expression [48698,48722]"/>
  <match src="view: view [93297,93301]" dest="view: view [32453,32457]"/>
  <match src="for: for [65473,65476]" dest="for: for [66775,66778]"/>
  <match src="(: ( [82506,82507]" dest="(: ( [72737,72738]"/>
  <match src="primitive_type [63943,63950]" dest="primitive_type [28731,28738]"/>
  <match src="identifier: token1 [55724,55730]" dest="identifier: token1 [23573,23579]"/>
  <match src="identifier: stringifyTruncated [31783,31801]" dest="identifier: stringifyTruncated [50177,50195]"/>
  <match src="identifier: BASE [8556,8560]" dest="identifier: BASE [9120,9124]"/>
  <match src="memory: memory [101200,101206]" dest="memory: memory [40356,40362]"/>
  <match src="{: { [93071,93072]" dest="{: { [32227,32228]"/>
  <match src="}: } [92827,92828]" dest="}: } [31983,31984]"/>
  <match src="identifier: Decimal [45466,45473]" dest="identifier: Decimal [15599,15606]"/>
  <match src="uint256: uint256 [84377,84384]" dest="uint256: uint256 [62194,62201]"/>
  <match src="function: function [6063,6071]" dest="function: function [6627,6635]"/>
  <match src="return_type_definition [63934,63951]" dest="return_type_definition [28722,28739]"/>
  <match src="identifier: LPAREN [31835,31841]" dest="identifier: LPAREN [50229,50235]"/>
  <match src="==: == [94627,94629]" dest="==: == [33783,33785]"/>
  <match src="type_cast_expression [34798,34812]" dest="type_cast_expression [53192,53206]"/>
  <match src="user_defined_type [68122,68134]" dest="user_defined_type [68782,68794]"/>
  <match src="function: function [97166,97174]" dest="function: function [36322,36330]"/>
  <match src="}: } [8138,8139]" dest="}: } [8702,8703]"/>
  <match src="visibility [84850,84858]" dest="visibility [83972,83980]"/>
  <match src="parameter [103155,103170]" dest="parameter [42311,42326]"/>
  <match src="type_name [9591,9595]" dest="type_name [10155,10159]"/>
  <match src="identifier: newUniv2 [84604,84612]" dest="identifier: balance [72904,72911]"/>
  <match src="call_struct_argument [5921,5929]" dest="call_struct_argument [6485,6493]"/>
  <match src="primitive_type [36241,36248]" dest="primitive_type [54635,54642]"/>
  <match src="function_body [92785,92828]" dest="function_body [31941,31984]"/>
  <match src="(: ( [54823,54824]" dest="(: ( [22672,22673]"/>
  <match src="string [4066,4092]" dest="string [4630,4656]"/>
  <match src="string: string [54253,54259]" dest="string: string [22102,22108]"/>
  <match src="function_body [97708,97767]" dest="function_body [36864,36923]"/>
  <match src="identifier: account [81182,81189]" dest="identifier: account [83736,83743]"/>
  <match src="function_body [91052,91310]" dest="function_body [77362,77620]"/>
  <match src="return_statement [74579,74588]" dest="return_statement [59135,59144]"/>
  <match src="member_expression [93088,93120]" dest="member_expression [32244,32276]"/>
  <match src=",: , [100462,100463]" dest=",: , [39618,39619]"/>
  <match src="library_declaration [86226,87242]" dest="library_declaration [74736,75752]"/>
  <match src="primitive_type [8216,8222]" dest="primitive_type [8780,8786]"/>
  <match src="parameter [28856,28870]" dest="parameter [47250,47264]"/>
  <match src="call_expression [100142,100183]" dest="call_expression [39298,39339]"/>
  <match src="uint256: uint256 [96625,96632]" dest="uint256: uint256 [35781,35788]"/>
  <match src="identifier: amount [100992,100998]" dest="identifier: amount [40148,40154]"/>
  <match src="function_definition [95756,95847]" dest="function_definition [34912,35003]"/>
  <match src="identifier: candidate [104272,104281]" dest="identifier: candidate [43428,43437]"/>
  <match src="function: function [99896,99904]" dest="function: function [39052,39060]"/>
  <match src="call_argument [29294,29299]" dest="call_argument [47688,47693]"/>
  <match src="identifier: D256 [7615,7619]" dest="identifier: D256 [8179,8183]"/>
  <match src="internal: internal [103429,103437]" dest="internal: internal [42585,42593]"/>
  <match src="identifier: balanceCheck [81954,81966]" dest="identifier: balanceCheck [57228,57240]"/>
  <match src="primitive_type [51789,51796]" dest="primitive_type [27725,27732]"/>
  <match src="primitive_type [28256,28260]" dest="primitive_type [46650,46654]"/>
  <match src="{: { [46462,46463]" dest="{: { [16595,16596]"/>
  <match src="==: == [104012,104014]" dest="==: == [43168,43170]"/>
  <match src="{: { [80747,80748]" dest="{: { [71380,71381]"/>
  <match src="function_definition [73153,73286]" dest="function_definition [59156,59387]"/>
  <match src="identifier: D256 [7328,7332]" dest="identifier: D256 [7892,7896]"/>
  <match src="uint256: uint256 [84327,84334]" dest="uint256: uint256 [62058,62065]"/>
  <match src="address: address [81049,81056]" dest="address: address [71481,71488]"/>
  <match src="(: ( [9405,9406]" dest="(: ( [9969,9970]"/>
  <match src="(: ( [74306,74307]" dest="(: ( [82706,82707]"/>
  <match src="bytes2: bytes2 [27541,27547]" dest="bytes2: bytes2 [45935,45941]"/>
  <match src="call_argument [34171,34177]" dest="call_argument [52565,52571]"/>
  <match src="expression_statement [83110,83227]" dest="expression_statement [82096,82294]"/>
  <match src="uint256: uint256 [95352,95359]" dest="uint256: uint256 [34508,34515]"/>
  <match src="): ) [89375,89376]" dest="): ) [30875,30876]"/>
  <match src="{: { [105056,105057]" dest="{: { [44212,44213]"/>
  <match src="identifier: totalBonded [84542,84553]" dest="identifier: totalBonded [73934,73945]"/>
  <match src="return_type_definition [93916,93933]" dest="return_type_definition [33072,33089]"/>
  <match src="call_argument [82656,82669]" dest="call_argument [72849,72862]"/>
  <match src="identifier: _state [99961,99967]" dest="identifier: _state [39117,39123]"/>
  <match src="primitive_type [105211,105218]" dest="primitive_type [44367,44374]"/>
  <match src="boolean_literal [99847,99852]" dest="boolean_literal [39003,39008]"/>
  <match src=".: . [89426,89427]" dest=".: . [30926,30927]"/>
  <match src="member_expression [97993,98010]" dest="member_expression [37149,37166]"/>
  <match src="return_statement [6022,6051]" dest="return_statement [6586,6615]"/>
  <match src="function_body [101803,101980]" dest="function_body [40959,41136]"/>
  <match src="type_name [54824,54828]" dest="type_name [22673,22677]"/>
  <match src="member_expression [95378,95413]" dest="member_expression [34534,34569]"/>
  <match src="event_paramater [55231,55253]" dest="event_paramater [23080,23102]"/>
  <match src="[: [ [102103,102104]" dest="[: [ [41259,41260]"/>
  <match src="variable_declaration_statement [84377,84459]" dest="variable_declaration_statement [80993,81066]"/>
  <match src="function: function [32810,32818]" dest="function: function [51204,51212]"/>
  <match src="identifier: account [81065,81072]" dest="identifier: account [71497,71504]"/>
  <match src="call_argument [100788,100794]" dest="call_argument [39944,39950]"/>
  <match src="call_expression [85276,85402]" dest="call_expression [81185,81330]"/>
  <match src="private: private [44352,44359]" dest="private: private [14485,14492]"/>
  <match src="function_definition [54334,54384]" dest="function_definition [22183,22233]"/>
  <match src="type_cast_expression [73243,73256]" dest="type_cast_expression [59242,59255]"/>
  <match src="identifier: State [89318,89323]" dest="identifier: State [30818,30823]"/>
  <match src="identifier: TREASURY_RATIO [48287,48301]" dest="identifier: TREASURY_RATIO [18420,18434]"/>
  <match src="call_argument [84187,84225]" dest="call_argument [79373,79398]"/>
  <match src="uint256: uint256 [70155,70162]" dest="uint256: uint256 [57105,57112]"/>
  <match src="): ) [106929,106930]" dest="): ) [70271,70272]"/>
  <match src="function_definition [104984,105158]" dest="function_definition [44140,44314]"/>
  <match src="identifier: file [29738,29742]" dest="identifier: file [48132,48136]"/>
  <match src="member_expression [101659,101673]" dest="member_expression [40815,40829]"/>
  <match src="}: } [94665,94666]" dest="}: } [33821,33822]"/>
  <match src="number_literal: 0x203c [27654,27660]" dest="number_literal: 0x203c [46048,46054]"/>
  <match src="user_defined_type [8421,8425]" dest="user_defined_type [8985,8989]"/>
  <match src="return_type_definition [55996,56010]" dest="return_type_definition [23845,23859]"/>
  <match src="type_name [29476,29480]" dest="type_name [47870,47874]"/>
  <match src="type_name [41351,41358]" dest="type_name [11484,11491]"/>
  <match src="]: ] [102126,102127]" dest="]: ] [41282,41283]"/>
  <match src="primitive_type [81589,81596]" dest="primitive_type [72112,72119]"/>
  <match src="}: } [91309,91310]" dest="}: } [77619,77620]"/>
  <match src="): ) [3388,3389]" dest="): ) [3952,3953]"/>
  <match src="pure: pure [45219,45223]" dest="pure: pure [15352,15356]"/>
  <match src="variable_declaration_statement [35742,35769]" dest="variable_declaration_statement [54136,54163]"/>
  <match src="[: [ [104335,104336]" dest="[: [ [43491,43492]"/>
  <match src="primitive_type [35754,35761]" dest="primitive_type [54148,54155]"/>
  <match src="identifier: value [8549,8554]" dest="identifier: value [9113,9118]"/>
  <match src="(: ( [48428,48429]" dest="(: ( [18561,18562]"/>
  <match src="identifier: _state [93849,93855]" dest="identifier: _state [33005,33011]"/>
  <match src="call_argument [102174,102180]" dest="call_argument [41330,41336]"/>
  <match src="[: [ [102120,102121]" dest="[: [ [41276,41277]"/>
  <match src="mapping: mapping [88094,88101]" dest="mapping: mapping [29594,29601]"/>
  <match src="member_expression [6778,6792]" dest="member_expression [7342,7356]"/>
  <match src="assignment_expression [101331,101396]" dest="assignment_expression [40487,40552]"/>
  <match src=",: , [28870,28871]" dest=",: , [47264,47265]"/>
  <match src="=: = [106568,106569]" dest="=: = [69910,69911]"/>
  <match src="}: } [46376,46377]" dest="}: } [16509,16510]"/>
  <match src="call_argument [73243,73256]" dest="call_argument [59242,59255]"/>
  <match src="view: view [94814,94818]" dest="view: view [33970,33974]"/>
  <match src="identifier: epoch [94870,94875]" dest="identifier: epoch [34026,34031]"/>
  <match src="uint256: uint256 [68180,68187]" dest="uint256: uint256 [68028,68035]"/>
  <match src="identifier: reserve1 [55525,55533]" dest="identifier: reserve1 [23374,23382]"/>
  <match src="function_definition [103403,103505]" dest="function_definition [42559,42661]"/>
  <match src="identifier: incrementBalanceOfCoupons [101995,102020]" dest="identifier: incrementBalanceOfCoupons [41151,41176]"/>
  <match src="visibility [5849,5857]" dest="visibility [6413,6421]"/>
  <match src="(: ( [21976,21977]" dest="(: ( [65082,65083]"/>
  <match src="number_literal: 0 [94880,94881]" dest="number_literal: 0 [34036,34037]"/>
  <match src="member_expression [93642,93662]" dest="member_expression [32798,32818]"/>
  <match src="function: function [46865,46873]" dest="function: function [16998,17006]"/>
  <match src=".: . [59990,59991]" dest=".: . [84260,84261]"/>
  <match src="type_cast_expression [34530,34564]" dest="type_cast_expression [52924,52958]"/>
  <match src="return_statement [98399,98447]" dest="return_statement [37555,37603]"/>
  <match src="identifier: self [7376,7380]" dest="identifier: self [7940,7944]"/>
  <match src=",: , [55832,55833]" dest=",: , [23681,23682]"/>
  <match src="return_type_definition [7499,7520]" dest="return_type_definition [8063,8084]"/>
  <match src="if: if [33395,33397]" dest="if: if [51789,51791]"/>
  <match src="type_name [9120,9124]" dest="type_name [9684,9688]"/>
  <match src=",: , [55850,55851]" dest=",: , [23699,23700]"/>
  <match src="&quot;: &quot; [82188,82189]" dest="&quot;: &quot; [82061,82062]"/>
  <match src="new_expression [34161,34170]" dest="new_expression [52555,52564]"/>
  <match src="type_name [54074,54081]" dest="type_name [21923,21930]"/>
  <match src="): ) [89323,89324]" dest="): ) [30823,30824]"/>
  <match src="primitive_type [97833,97840]" dest="primitive_type [36989,36996]"/>
  <match src="uint8: uint8 [92966,92971]" dest="uint8: uint8 [32122,32127]"/>
  <match src="(: ( [98482,98483]" dest="(: ( [37638,37639]"/>
  <match src="identifier: FILE [50740,50744]" dest="identifier: FILE [63998,64002]"/>
  <match src="returns: returns [94233,94240]" dest="returns: returns [33389,33396]"/>
  <match src=".: . [82560,82561]" dest=".: . [72778,72779]"/>
  <match src=".: . [101015,101016]" dest=".: . [40171,40172]"/>
  <match src="block_statement [10111,10144]" dest="block_statement [10675,10708]"/>
  <match src="function_body [101224,101456]" dest="function_body [40380,40612]"/>
  <match src="{: { [94040,94041]" dest="{: { [33196,33197]"/>
  <match src="&quot;: &quot; [25023,25024]" dest="&quot;: &quot; [79631,79632]"/>
  <match src=".: . [100163,100164]" dest=".: . [39319,39320]"/>
  <match src="call_argument [21137,21172]" dest="call_argument [64619,64656]"/>
  <match src="call_argument [28130,28156]" dest="call_argument [46524,46550]"/>
  <match src="[: [ [33405,33406]" dest="[: [ [51799,51800]"/>
  <match src="identifier: b [7931,7932]" dest="identifier: b [8495,8496]"/>
  <match src="identifier: balance [101338,101345]" dest="identifier: balance [40494,40501]"/>
  <match src="(: ( [89348,89349]" dest="(: ( [30848,30849]"/>
  <match src="call_argument [82113,82123]" dest="call_argument [72341,72351]"/>
  <match src="assignment_expression [100722,100795]" dest="assignment_expression [39878,39951]"/>
  <match src="(: ( [82667,82668]" dest="(: ( [72860,72861]"/>
  <match src="member_expression [8326,8336]" dest="member_expression [8890,8900]"/>
  <match src="identifier: balance [101362,101369]" dest="identifier: balance [40518,40525]"/>
  <match src="visibility [102473,102481]" dest="visibility [41629,41637]"/>
  <match src="parameter [10010,10023]" dest="parameter [10574,10587]"/>
  <match src="{: { [47570,47571]" dest="{: { [17703,17704]"/>
  <match src="string: string [101193,101199]" dest="string: string [40349,40355]"/>
  <match src="identifier: approve [104700,104707]" dest="identifier: approve [43856,43863]"/>
  <match src="comment: // solhint-disable-next-line no-inline-assembly [87112,87159]" dest="comment: // solhint-disable-next-line no-inline-assembly [75622,75669]"/>
  <match src="call_expression [84161,84298]" dest="call_expression [81076,81174]"/>
  <match src="(: ( [85629,85630]" dest="(: ( [79845,79846]"/>
  <match src=",: , [85162,85163]" dest=",: , [59333,59334]"/>
  <match src="return_statement [99708,99721]" dest="return_statement [38864,38877]"/>
  <match src="identifier: owner [54541,54546]" dest="identifier: owner [22390,22395]"/>
  <match src="uint256: uint256 [71269,71276]" dest="uint256: uint256 [67023,67030]"/>
  <match src="member_expression [91147,91177]" dest="member_expression [77457,77487]"/>
  <match src="=: = [33448,33449]" dest="=: = [51842,51843]"/>
  <match src="function_body [95361,95420]" dest="function_body [34517,34576]"/>
  <match src="returns: returns [5986,5993]" dest="returns: returns [6550,6557]"/>
  <match src="uint256: uint256 [42069,42076]" dest="uint256: uint256 [12202,12209]"/>
  <match src="parameter [11729,11736]" dest="parameter [24718,24725]"/>
  <match src="call_argument [101421,101428]" dest="call_argument [40577,40584]"/>
  <match src="variable_declaration_statement [36153,36167]" dest="variable_declaration_statement [54547,54561]"/>
  <match src="return_statement [96819,96871]" dest="return_statement [35975,36027]"/>
  <match src="primitive_type [47722,47729]" dest="primitive_type [17855,17862]"/>
  <match src="): ) [31545,31546]" dest="): ) [49939,49940]"/>
  <match src=",: , [2634,2635]" dest=",: , [3198,3199]"/>
  <match src="address: address [101739,101746]" dest="address: address [40895,40902]"/>
  <match src="visibility [23283,23290]" dest="visibility [59751,59758]"/>
  <match src="parameter [9209,9225]" dest="parameter [9773,9789]"/>
  <match src="(: ( [54351,54352]" dest="(: ( [22200,22201]"/>
  <match src="block_statement [74103,74136]" dest="block_statement [63166,63199]"/>
  <match src="function_definition [102936,103099]" dest="function_definition [42092,42255]"/>
  <match src="identifier: _state [105104,105110]" dest="identifier: _state [44260,44266]"/>
  <match src="identifier: self [7263,7267]" dest="identifier: self [7827,7831]"/>
  <match src="visibility [46899,46907]" dest="visibility [17032,17040]"/>
  <match src="yul_function_call [33580,33602]" dest="yul_function_call [51974,51996]"/>
  <match src="return_type_definition [97558,97575]" dest="return_type_definition [36714,36731]"/>
  <match src="{: { [99355,99356]" dest="{: { [38511,38512]"/>
  <match src="): ) [48161,48162]" dest="): ) [18294,18295]"/>
  <match src="event: event [55488,55493]" dest="event: event [23337,23342]"/>
  <match src="public: public [95773,95779]" dest="public: public [34929,34935]"/>
  <match src="visibility [95019,95025]" dest="visibility [34175,34181]"/>
  <match src="return_type_definition [47278,47295]" dest="return_type_definition [17411,17428]"/>
  <match src="event_paramater [55517,55533]" dest="event_paramater [23366,23382]"/>
  <match src="(: ( [7930,7931]" dest="(: ( [8494,8495]"/>
  <match src="struct_declaration [88962,89131]" dest="struct_declaration [30462,30631]"/>
  <match src="call_argument [68286,68300]" dest="call_argument [68064,68073]"/>
  <match src=",: , [13463,13464]" dest=",: , [26452,26453]"/>
  <match src="primitive_type [97793,97800]" dest="primitive_type [36949,36956]"/>
  <match src="type_name [13080,13087]" dest="type_name [26069,26076]"/>
  <match src="]: ] [95534,95535]" dest="]: ] [34690,34691]"/>
  <match src="function: function [54836,54844]" dest="function: function [22685,22693]"/>
  <match src=",: , [79475,79476]" dest=",: , [83895,83896]"/>
  <match src="mapping: mapping [88775,88782]" dest="mapping: mapping [30275,30282]"/>
  <match src="assignment_expression [100118,100183]" dest="assignment_expression [39274,39339]"/>
  <match src="(: ( [45743,45744]" dest="(: ( [15876,15877]"/>
  <match src="struct: struct [88656,88662]" dest="struct: struct [30156,30162]"/>
  <match src=".: . [104531,104532]" dest=".: . [43687,43688]"/>
  <match src="if: if [53116,53118]" dest="if: if [65732,65734]"/>
  <match src="return: return [7355,7361]" dest="return: return [7919,7925]"/>
  <match src="number_literal: 0 [19882,19883]" dest="number_literal: 0 [65512,65513]"/>
  <match src="expression_statement [66252,66369]" dest="expression_statement [82304,82431]"/>
  <match src="function: function [11670,11678]" dest="function: function [24659,24667]"/>
  <match src="memory: memory [8604,8610]" dest="memory: memory [9168,9174]"/>
  <match src="return_type_definition [9623,9640]" dest="return_type_definition [10187,10204]"/>
  <match src="identifier: incrementApproveFor [104597,104616]" dest="identifier: incrementApproveFor [43753,43772]"/>
  <match src="block_statement [30196,30661]" dest="block_statement [48590,49055]"/>
  <match src="identifier: totalSupply [54398,54409]" dest="identifier: totalSupply [22247,22258]"/>
  <match src="parameter [76130,76145]" dest="parameter [84305,84320]"/>
  <match src=".: . [96863,96864]" dest=".: . [36019,36020]"/>
  <match src="function_body [19763,20148]" dest="function_body [65385,66001]"/>
  <match src="identifier: compareTo [9288,9297]" dest="identifier: compareTo [9852,9861]"/>
  <match src="(: ( [104360,104361]" dest="(: ( [43516,43517]"/>
  <match src="pure: pure [48745,48749]" dest="pure: pure [18878,18882]"/>
  <match src="): ) [31885,31886]" dest="): ) [50279,50280]"/>
  <match src="identifier: amount [76873,76879]" dest="identifier: amount [65714,65720]"/>
  <match src="primitive_type [4030,4037]" dest="primitive_type [4594,4601]"/>
  <match src="}: } [88477,88478]" dest="}: } [29977,29978]"/>
  <match src="user_defined_type [8625,8629]" dest="user_defined_type [9189,9193]"/>
  <match src=".: . [103057,103058]" dest=".: . [42213,42214]"/>
  <match src="pure: pure [4016,4020]" dest="pure: pure [4580,4584]"/>
  <match src="identifier: unfreeze [82363,82371]" dest="identifier: unfreeze [73199,73207]"/>
  <match src="return: return [93081,93087]" dest="return: return [32237,32243]"/>
  <match src="(: ( [101882,101883]" dest="(: ( [41038,41039]"/>
  <match src="call_argument [73262,73278]" dest="call_argument [59278,59291]"/>
  <match src="variable_declaration [74036,74055]" dest="variable_declaration [68388,68411]"/>
  <match src="identifier: D256 [5880,5884]" dest="identifier: D256 [6444,6448]"/>
  <match src=".: . [96233,96234]" dest=".: . [35389,35390]"/>
  <match src="{: { [48052,48053]" dest="{: { [18185,18186]"/>
  <match src="member_expression [101847,101882]" dest="member_expression [41003,41038]"/>
  <match src=",: , [328,329]" dest=",: , [892,893]"/>
  <match src="identifier: getGovernanceExpiration [45809,45832]" dest="identifier: getGovernanceExpiration [15942,15965]"/>
  <match src="function_definition [55031,55146]" dest="function_definition [22880,22995]"/>
  <match src="): ) [29415,29416]" dest="): ) [47809,47810]"/>
  <match src="identifier: ORACLE_POOL_RATIO [48180,48197]" dest="identifier: ORACLE_POOL_RATIO [18313,18330]"/>
  <match src="return_statement [36845,36893]" dest="return_statement [55239,55287]"/>
  <match src="primitive_type [54887,54894]" dest="primitive_type [22736,22743]"/>
  <match src="identifier: Decimal [65477,65484]" dest="identifier: Decimal [66779,66786]"/>
  <match src="identifier: value [6347,6352]" dest="identifier: value [6911,6916]"/>
  <match src=",: , [81587,81588]" dest=",: , [72110,72111]"/>
  <match src="type_name [19719,19726]" dest="type_name [65326,65333]"/>
  <match src="state_mutability [6712,6716]" dest="state_mutability [7276,7280]"/>
  <match src="memory: memory [8223,8229]" dest="memory: memory [8787,8793]"/>
  <match src="uint256: uint256 [12384,12391]" dest="uint256: uint256 [25373,25380]"/>
  <match src="call_argument [21228,21234]" dest="call_argument [56958,56964]"/>
  <match src="memory: memory [7873,7879]" dest="memory: memory [8437,8443]"/>
  <match src="state_variable_declaration [43065,43107]" dest="state_variable_declaration [13198,13240]"/>
  <match src="function_definition [73952,74594]" dest="function_definition [68174,68734]"/>
  <match src="address: address [95447,95454]" dest="address: address [34603,34610]"/>
  <match src="function_definition [55950,56011]" dest="function_definition [23799,23860]"/>
  <match src="): ) [102782,102783]" dest="): ) [41938,41939]"/>
  <match src="call_argument [26391,26398]" dest="call_argument [84370,84377]"/>
  <match src=",: , [81318,81319]" dest=",: , [71620,71621]"/>
  <match src="visibility [56361,56369]" dest="visibility [24210,24218]"/>
  <match src="member_expression [102716,102730]" dest="member_expression [41872,41886]"/>
  <match src="uint256: uint256 [43319,43326]" dest="uint256: uint256 [13452,13459]"/>
  <match src="returns: returns [8049,8056]" dest="returns: returns [8613,8620]"/>
  <match src="call_expression [82656,82669]" dest="call_expression [72849,72862]"/>
  <match src="(: ( [101305,101306]" dest="(: ( [40461,40462]"/>
  <match src="identifier: isNominated [98194,98205]" dest="identifier: isNominated [37350,37361]"/>
  <match src="identifier: result [33587,33593]" dest="identifier: result [51981,51987]"/>
  <match src="identifier: getDebtRatioCap [47352,47367]" dest="identifier: getDebtRatioCap [17485,17500]"/>
  <match src="visibility [47021,47029]" dest="visibility [17154,17162]"/>
  <match src="expression_statement [103035,103093]" dest="expression_statement [42191,42249]"/>
  <match src="identifier: setup [108448,108453]" dest="identifier: capture [68864,68871]"/>
  <match src="address: address [94509,94516]" dest="address: address [33665,33672]"/>
  <match src="primitive_type [65796,65803]" dest="primitive_type [83659,83666]"/>
  <match src="parameter [93616,93623]" dest="parameter [32772,32779]"/>
  <match src="member_expression [82113,82123]" dest="member_expression [72341,72351]"/>
  <match src=",: , [22122,22123]" dest=",: , [65263,65264]"/>
  <match src="parameter [52850,52864]" dest="parameter [56144,56158]"/>
  <match src="bool: bool [30035,30039]" dest="bool: bool [48429,48433]"/>
  <match src="(: ( [31090,31091]" dest="(: ( [49484,49485]"/>
  <match src="): ) [7395,7396]" dest="): ) [7959,7960]"/>
  <match src="string_literal [83986,84013]" dest="string_literal [81901,81916]"/>
  <match src=",: , [105029,105030]" dest=",: , [44185,44186]"/>
  <match src="function_definition [96352,96449]" dest="function_definition [35508,35605]"/>
  <match src="type_name [81295,81302]" dest="type_name [71597,71604]"/>
  <match src="return: return [9003,9009]" dest="return: return [9567,9573]"/>
  <match src="): ) [73256,73257]" dest="): ) [59255,59256]"/>
  <match src="type_name [100868,100875]" dest="type_name [40024,40031]"/>
  <match src="event_paramater [81335,81348]" dest="event_paramater [71637,71650]"/>
  <match src="number_literal: 0 [7544,7545]" dest="number_literal: 0 [8108,8109]"/>
  <match src="function: function [8373,8381]" dest="function: function [8937,8945]"/>
  <match src="==: == [82509,82511]" dest="==: == [72740,72742]"/>
  <match src="array_access [103292,103314]" dest="array_access [42448,42470]"/>
  <match src="call_argument [107220,107241]" dest="call_argument [70562,70583]"/>
  <match src="(: ( [2632,2633]" dest="(: ( [3196,3197]"/>
  <match src="(: ( [91536,91537]" dest="(: ( [77846,77847]"/>
  <match src="ternary_expression [82528,82601]" dest="ternary_expression [72726,72844]"/>
  <match src="type_name [42410,42417]" dest="type_name [12543,12550]"/>
  <match src="function: function [45690,45698]" dest="function: function [15823,15831]"/>
  <match src="): ) [48366,48367]" dest="): ) [18499,18500]"/>
  <match src="type_name [8421,8425]" dest="type_name [8985,8989]"/>
  <match src="memory: memory [32907,32913]" dest="memory: memory [51301,51307]"/>
  <match src="identifier: file [28283,28287]" dest="identifier: file [46677,46681]"/>
  <match src="array_access [101813,101837]" dest="array_access [40969,40993]"/>
  <match src="enum_value: Fluid [87989,87994]" dest="enum_value: Fluid [29489,29494]"/>
  <match src="): ) [19883,19884]" dest="): ) [65513,65514]"/>
  <match src="expression_statement [34082,34090]" dest="expression_statement [52476,52484]"/>
  <match src="(: ( [105557,105558]" dest="(: ( [44713,44714]"/>
  <match src="function_definition [9738,9953]" dest="function_definition [10302,10517]"/>
  <match src="return_statement [104032,104039]" dest="return_statement [43188,43195]"/>
  <match src=",: , [29344,29345]" dest=",: , [47738,47739]"/>
  <match src="call_expression [82931,82938]" dest="call_expression [74193,74200]"/>
  <match src="assignment_expression [104525,104575]" dest="assignment_expression [43681,43731]"/>
  <match src="variable_declaration [74146,74178]" dest="variable_declaration [68441,68461]"/>
  <match src="parameter [8599,8615]" dest="parameter [9163,9179]"/>
  <match src="expression_statement [101009,101067]" dest="expression_statement [40165,40223]"/>
  <match src="string_literal [2028,2063]" dest="string_literal [2592,2627]"/>
  <match src="primitive_type [32109,32116]" dest="primitive_type [50503,50510]"/>
  <match src="identifier: mod [4613,4616]" dest="identifier: mod [5177,5180]"/>
  <match src="primitive_type [21839,21846]" dest="primitive_type [65023,65030]"/>
  <match src="call_argument [83565,83575]" dest="call_argument [80731,80741]"/>
  <match src="primitive_type [364,371]" dest="primitive_type [928,935]"/>
  <match src=".: . [67587,67588]" dest=".: . [67094,67095]"/>
  <match src="external: external [82054,82062]" dest="external: external [73724,73732]"/>
  <match src=",: , [29191,29192]" dest=",: , [47585,47586]"/>
  <match src="identifier: value [83794,83799]" dest="identifier: value [73656,73661]"/>
  <match src="state_mutability [47535,47539]" dest="state_mutability [17668,17672]"/>
  <match src="identifier: amount [76009,76015]" dest="identifier: amount [56519,56525]"/>
  <match src="return: return [48674,48680]" dest="return: return [18807,18813]"/>
  <match src="}: } [47336,47337]" dest="}: } [17469,17470]"/>
  <match src="visibility [64709,64717]" dest="visibility [79297,79305]"/>
  <match src="view: view [98232,98236]" dest="view: view [37388,37392]"/>
  <match src="using_directive [15764,15791]" dest="using_directive [60775,60802]"/>
  <match src="parameter [56224,56239]" dest="parameter [24073,24088]"/>
  <match src="&gt;: &gt; [34312,34313]" dest="&gt;: &gt; [52706,52707]"/>
  <match src="): ) [7545,7546]" dest="): ) [8109,8110]"/>
  <match src="struct_member [88815,88832]" dest="struct_member [30315,30332]"/>
  <match src="primitive_type [42116,42123]" dest="primitive_type [12249,12256]"/>
  <match src="(: ( [36856,36857]" dest="(: ( [55250,55251]"/>
  <match src="member_expression [95070,95085]" dest="member_expression [34226,34241]"/>
  <match src="returns: returns [99683,99690]" dest="returns: returns [38839,38846]"/>
  <match src="member_expression [106701,106743]" dest="member_expression [70043,70085]"/>
  <match src="visibility [51927,51933]" dest="visibility [27863,27869]"/>
  <match src="(: ( [55938,55939]" dest="(: ( [23787,23788]"/>
  <match src=".: . [93863,93864]" dest=".: . [33019,33020]"/>
  <match src="(: ( [5842,5843]" dest="(: ( [6406,6407]"/>
  <match src="call_argument [32332,32336]" dest="call_argument [50726,50730]"/>
  <match src="parameter [47287,47294]" dest="parameter [17420,17427]"/>
  <match src="(: ( [36862,36863]" dest="(: ( [55256,55257]"/>
  <match src=".: . [84746,84747]" dest=".: . [81726,81727]"/>
  <match src="=: = [101930,101931]" dest="=: = [41086,41087]"/>
  <match src="member_expression [9658,9668]" dest="member_expression [10222,10232]"/>
  <match src="type_name [13518,13522]" dest="type_name [26507,26511]"/>
  <match src="}: } [73285,73286]" dest="}: } [59386,59387]"/>
  <match src="identifier: spender [55070,55077]" dest="identifier: spender [22919,22926]"/>
  <match src="uint256: uint256 [97191,97198]" dest="uint256: uint256 [36347,36354]"/>
  <match src="identifier: decrementTotalRedeemable [100640,100664]" dest="identifier: decrementTotalRedeemable [39796,39820]"/>
  <match src=",: , [8615,8616]" dest=",: , [9179,9180]"/>
  <match src="primitive_type [51852,51859]" dest="primitive_type [27788,27795]"/>
  <match src="parameter [98506,98518]" dest="parameter [37662,37674]"/>
  <match src="function: function [100631,100639]" dest="function: function [39787,39795]"/>
  <match src="call_argument [29719,29743]" dest="call_argument [48113,48137]"/>
  <match src="binary_expression [36257,36262]" dest="binary_expression [54651,54656]"/>
  <match src="primitive_type [44886,44893]" dest="primitive_type [15019,15026]"/>
  <match src="variable_declaration [82474,82492]" dest="variable_declaration [67604,67625]"/>
  <match src="struct_member [88987,89002]" dest="struct_member [30487,30502]"/>
  <match src="bytes: bytes [35894,35899]" dest="bytes: bytes [54288,54293]"/>
  <match src="): ) [6317,6318]" dest="): ) [6881,6882]"/>
  <match src="function_definition [101705,101980]" dest="function_definition [40861,41136]"/>
  <match src="): ) [79492,79493]" dest="): ) [83931,83932]"/>
  <match src="identifier: spender [54625,54632]" dest="identifier: spender [22474,22481]"/>
  <match src="identifier: sync [56354,56358]" dest="identifier: sync [24203,24207]"/>
  <match src="address: address [13730,13737]" dest="address: address [26719,26726]"/>
  <match src="block_statement [31594,31983]" dest="block_statement [49988,50377]"/>
  <match src="uint256: uint256 [69213,69220]" dest="uint256: uint256 [62614,62621]"/>
  <match src="identifier: abi [29677,29680]" dest="identifier: abi [48071,48074]"/>
  <match src="member_expression [102321,102335]" dest="member_expression [41477,41491]"/>
  <match src=",: , [104634,104635]" dest=",: , [43790,43791]"/>
  <match src="uint256: uint256 [81350,81357]" dest="uint256: uint256 [79151,79158]"/>
  <match src="view: view [93602,93606]" dest="view: view [32758,32762]"/>
  <match src="identifier: value [6593,6598]" dest="identifier: value [7157,7162]"/>
  <match src="): ) [93525,93526]" dest="): ) [32681,32682]"/>
  <match src="{: { [48563,48564]" dest="{: { [18696,18697]"/>
  <match src="(: ( [100010,100011]" dest="(: ( [39166,39167]"/>
  <match src="pure: pure [47273,47277]" dest="pure: pure [17406,17410]"/>
  <match src="return: return [98118,98124]" dest="return: return [37274,37280]"/>
  <match src="identifier: LPAREN [29217,29223]" dest="identifier: LPAREN [47611,47617]"/>
  <match src="type_name [5995,5999]" dest="type_name [6559,6563]"/>
  <match src="variable_declaration_statement [35287,35309]" dest="variable_declaration_statement [53681,53703]"/>
  <match src="new_expression [34936,34945]" dest="new_expression [53330,53339]"/>
  <match src=",: , [102981,102982]" dest=",: , [42137,42138]"/>
  <match src="identifier: reserve0 [55824,55832]" dest="identifier: reserve0 [23673,23681]"/>
  <match src="=: = [35056,35057]" dest="=: = [53450,53451]"/>
  <match src="identifier: account [100876,100883]" dest="identifier: account [40032,40039]"/>
  <match src="type_name [43409,43416]" dest="type_name [13542,13549]"/>
  <match src="type_name [44998,45011]" dest="type_name [15131,15144]"/>
  <match src="{: { [21881,21882]" dest="{: { [65065,65066]"/>
  <match src="type_name [36663,36667]" dest="type_name [55057,55061]"/>
  <match src="state_mutability [46561,46565]" dest="state_mutability [16694,16698]"/>
  <match src=".: . [105312,105313]" dest=".: . [44468,44469]"/>
  <match src="identifier: FILE [84093,84097]" dest="identifier: FILE [80939,80943]"/>
  <match src="type_name [30035,30039]" dest="type_name [48429,48433]"/>
  <match src="returns: returns [4681,4688]" dest="returns: returns [5245,5252]"/>
  <match src="call_argument [4060,4061]" dest="call_argument [4624,4625]"/>
  <match src="): ) [54206,54207]" dest="): ) [22055,22056]"/>
  <match src="state_mutability [48440,48444]" dest="state_mutability [18573,18577]"/>
  <match src="visibility [46666,46674]" dest="visibility [16799,16807]"/>
  <match src="identifier: msg [80872,80875]" dest="identifier: msg [64179,64182]"/>
  <match src="type_name [97567,97574]" dest="type_name [36723,36730]"/>
  <match src="array_access [93088,93112]" dest="array_access [32244,32268]"/>
  <match src="event_paramater [81166,81189]" dest="event_paramater [83720,83743]"/>
  <match src="pure: pure [9618,9622]" dest="pure: pure [10182,10186]"/>
  <match src="identifier: stringify [32554,32563]" dest="identifier: stringify [50948,50957]"/>
  <match src="identifier: that [85625,85629]" dest="identifier: that [79841,79845]"/>
  <match src="constant: constant [41609,41617]" dest="constant: constant [11742,11750]"/>
  <match src="parameter [56147,56157]" dest="parameter [23996,24006]"/>
  <match src="): ) [73255,73256]" dest="): ) [59254,59255]"/>
  <match src="): ) [70162,70163]" dest="): ) [57112,57113]"/>
  <match src="call_argument [100168,100174]" dest="call_argument [39324,39330]"/>
  <match src="call_expression [8106,8129]" dest="call_expression [8670,8693]"/>
  <match src="state_variable_declaration [44446,44538]" dest="state_variable_declaration [14579,14671]"/>
  <match src="identifier: RPAREN [31353,31359]" dest="identifier: RPAREN [49747,49753]"/>
  <match src="call_argument [32313,32337]" dest="call_argument [50707,50731]"/>
  <match src="pure: pure [45452,45456]" dest="pure: pure [15585,15589]"/>
  <match src=",: , [4061,4062]" dest=",: , [4625,4626]"/>
  <match src="identifier: IMPLEMENTATION_SLOT [98545,98564]" dest="identifier: IMPLEMENTATION_SLOT [37701,37720]"/>
  <match src="type_name [53022,53029]" dest="type_name [56373,56380]"/>
  <match src="call_argument [77139,77145]" dest="call_argument [20336,20342]"/>
  <match src="for: for [36148,36151]" dest="for: for [54542,54545]"/>
  <match src="type_name [102403,102410]" dest="type_name [41559,41566]"/>
  <match src="=: = [43457,43458]" dest="=: = [13590,13591]"/>
  <match src="): ) [46377,46378]" dest="): ) [16510,16511]"/>
  <match src="(: ( [99640,99641]" dest="(: ( [38796,38797]"/>
  <match src="primitive_type [70997,71004]" dest="primitive_type [66966,66973]"/>
  <match src="=: = [104188,104189]" dest="=: = [43344,43345]"/>
  <match src="parameter [99790,99804]" dest="parameter [38946,38960]"/>
  <match src="visibility [12011,12019]" dest="visibility [25000,25008]"/>
  <match src="identifier: D256 [92562,92566]" dest="identifier: D256 [31718,31722]"/>
  <match src="(: ( [8852,8853]" dest="(: ( [9416,9417]"/>
  <match src="expression_statement [100118,100184]" dest="expression_statement [39274,39340]"/>
  <match src="identifier: isContract [86633,86643]" dest="identifier: isContract [75143,75153]"/>
  <match src="type_name [30100,30107]" dest="type_name [48494,48501]"/>
  <match src="visibility [55570,55578]" dest="visibility [23419,23427]"/>
  <match src="string [21137,21172]" dest="string [64619,64656]"/>
  <match src="event_paramater [55187,55199]" dest="event_paramater [23036,23048]"/>
  <match src="): ) [779,780]" dest="): ) [1343,1344]"/>
  <match src="!: ! [32198,32199]" dest="!: ! [50592,50593]"/>
  <match src="{: { [94251,94252]" dest="{: { [33407,33408]"/>
  <match src="address: address [102021,102028]" dest="address: address [41177,41184]"/>
  <match src="parameter [55106,55113]" dest="parameter [22955,22962]"/>
  <match src="variable_declaration [84327,84343]" dest="variable_declaration [62058,62075]"/>
  <match src="function_definition [7049,7223]" dest="function_definition [7613,7787]"/>
  <match src="}: } [97633,97634]" dest="}: } [36789,36790]"/>
  <match src="(: ( [105567,105568]" dest="(: ( [44723,44724]"/>
  <match src="member_expression [100955,100987]" dest="member_expression [40111,40143]"/>
  <match src=",: , [101387,101388]" dest=",: , [40543,40544]"/>
  <match src="returns: returns [48350,48357]" dest="returns: returns [18483,18490]"/>
  <match src="member_expression [102646,102686]" dest="member_expression [41802,41842]"/>
  <match src="identifier: initializer [107106,107117]" dest="identifier: initializer [70448,70459]"/>
  <match src="}: } [93472,93473]" dest="}: } [32628,32629]"/>
  <match src="contract_body [41329,48810]" dest="contract_body [11462,18943]"/>
  <match src="identifier: sender [82078,82084]" dest="identifier: sender [73755,73761]"/>
  <match src="): ) [6613,6614]" dest="): ) [7177,7178]"/>
  <match src=",: , [102829,102830]" dest=",: , [41985,41986]"/>
  <match src="(: ( [4689,4690]" dest="(: ( [5253,5254]"/>
  <match src="primitive_type [27387,27394]" dest="primitive_type [45781,45788]"/>
  <match src="identifier: totalSupply [94588,94599]" dest="identifier: totalSupply [33744,33755]"/>
  <match src="identifier: redeemable [100596,100606]" dest="identifier: redeemable [39752,39762]"/>
  <match src="identifier: implementation [98468,98482]" dest="identifier: implementation [37624,37638]"/>
  <match src="address: address [54981,54988]" dest="address: address [22830,22837]"/>
  <match src="{: { [46179,46180]" dest="{: { [16312,16313]"/>
  <match src="type_name [17620,17627]" dest="type_name [59900,59907]"/>
  <match src="if_statement [30185,30661]" dest="if_statement [48579,49055]"/>
  <match src=":: : [45523,45524]" dest=":: : [15656,15657]"/>
  <match src="type_name [18996,19003]" dest="type_name [20006,20013]"/>
  <match src="parameter [86684,86688]" dest="parameter [75194,75198]"/>
  <match src="number_literal: 6e17 [42823,42827]" dest="number_literal: 6e17 [12956,12960]"/>
  <match src="identifier: PairCreated [53432,53443]" dest="identifier: CouponTransfer [61305,61319]"/>
  <match src="identifier: value [10162,10167]" dest="identifier: value [10726,10731]"/>
  <match src="variable_declaration [95914,95952]" dest="variable_declaration [35070,35108]"/>
  <match src="member_expression [100142,100156]" dest="member_expression [39298,39312]"/>
  <match src="parameter [68738,68745]" dest="parameter [63788,63795]"/>
  <match src="identifier: value [81082,81087]" dest="identifier: value [71514,71519]"/>
  <match src="identifier: notPaused [81536,81545]" dest="identifier: onlyFrozenOrLocked [72038,72056]"/>
  <match src="identifier: msg [83656,83659]" dest="identifier: msg [80683,80686]"/>
  <match src="primitive_type [28275,28282]" dest="primitive_type [46669,46676]"/>
  <match src="constant: constant [41452,41460]" dest="constant: constant [11585,11593]"/>
  <match src="(: ( [32008,32009]" dest="(: ( [50402,50403]"/>
  <match src="}: } [8903,8904]" dest="}: } [9467,9468]"/>
  <match src="return_type_definition [54368,54383]" dest="return_type_definition [22217,22232]"/>
  <match src="if: if [74435,74437]" dest="if: if [68488,68490]"/>
  <match src="(: ( [7572,7573]" dest="(: ( [8136,8137]"/>
  <match src="parameter [99583,99587]" dest="parameter [38739,38743]"/>
  <match src="identifier: DAI_ADDRESS [44804,44815]" dest="identifier: DAI_ADDRESS [14937,14948]"/>
  <match src="parameter [96625,96638]" dest="parameter [35781,35794]"/>
  <match src="returns: returns [98497,98504]" dest="returns: returns [37653,37660]"/>
  <match src="type_name [91484,91491]" dest="type_name [77794,77801]"/>
  <match src="primitive_type [73331,73335]" dest="primitive_type [82578,82582]"/>
  <match src="bool: bool [99692,99696]" dest="bool: bool [38848,38852]"/>
  <match src="member_expression [103772,103814]" dest="member_expression [42928,42970]"/>
  <match src="private: private [41601,41608]" dest="private: private [11734,11741]"/>
  <match src="call_argument [105144,105150]" dest="call_argument [44300,44306]"/>
  <match src="primitive_type [804,811]" dest="primitive_type [1368,1375]"/>
  <match src="return: return [7895,7901]" dest="return: return [8459,8465]"/>
  <match src="{: { [83006,83007]" dest="{: { [73189,73190]"/>
  <match src="member_expression [81993,82003]" dest="member_expression [72477,72487]"/>
  <match src="parameter [82319,82332]" dest="parameter [72522,72535]"/>
  <match src="function: function [104771,104779]" dest="function: function [43927,43935]"/>
  <match src="type_name [35714,35719]" dest="type_name [54108,54113]"/>
  <match src="pure: pure [7310,7314]" dest="pure: pure [7874,7878]"/>
  <match src="primitive_type [27629,27635]" dest="primitive_type [46023,46029]"/>
  <match src="returns: returns [93509,93516]" dest="returns: returns [32665,32672]"/>
  <match src="identifier: pair [53500,53504]" dest="identifier: spender [61465,61472]"/>
  <match src="return: return [95504,95510]" dest="return: return [34660,34666]"/>
  <match src="(: ( [34694,34695]" dest="(: ( [53088,53089]"/>
  <match src="return_type_definition [55692,55709]" dest="return_type_definition [23541,23558]"/>
  <match src="primitive_type [88069,88076]" dest="primitive_type [29569,29576]"/>
  <match src="state_mutability [6119,6123]" dest="state_mutability [6683,6687]"/>
  <match src="identifier: epoch [94965,94970]" dest="identifier: epoch [34121,34126]"/>
  <match src="event: event [81211,81216]" dest="event: event [71682,71687]"/>
  <match src="type_name [11976,11983]" dest="type_name [24965,24972]"/>
  <match src="]: ] [100978,100979]" dest="]: ] [40134,40135]"/>
  <match src="primitive_type [91245,91251]" dest="primitive_type [77555,77561]"/>
  <match src="identifier: totalRewardedWithPhantom [74154,74178]" dest="identifier: totalCoupons [68449,68461]"/>
  <match src="type_name [95895,95902]" dest="type_name [35051,35058]"/>
  <match src="identifier: Decimal [46010,46017]" dest="identifier: Decimal [16143,16150]"/>
  <match src="(: ( [53129,53130]" dest="(: ( [65776,65777]"/>
  <match src="): ) [94805,94806]" dest="): ) [33961,33962]"/>
  <match src="member_expression [97453,97470]" dest="member_expression [36609,36626]"/>
  <match src=".: . [102498,102499]" dest=".: . [41654,41655]"/>
  <match src="memory: memory [100688,100694]" dest="memory: memory [39844,39850]"/>
  <match src="(: ( [4716,4717]" dest="(: ( [5280,5281]"/>
  <match src="string [69365,69374]" dest="string [73573,73604]"/>
  <match src="identifier: sub [830,833]" dest="identifier: sub [1394,1397]"/>
  <match src="): ) [32865,32866]" dest="): ) [51259,51260]"/>
  <match src="call_argument [33015,33020]" dest="call_argument [51409,51414]"/>
  <match src="visibility [9097,9105]" dest="visibility [9661,9669]"/>
  <match src="internal: internal [45721,45729]" dest="internal: internal [15854,15862]"/>
  <match src="call_argument [53099,53105]" dest="call_argument [56453,56459]"/>
  <match src="primitive_type [5752,5759]" dest="primitive_type [6316,6323]"/>
  <match src="function_body [104661,104765]" dest="function_body [43817,43921]"/>
  <match src="type_name [100353,100360]" dest="type_name [39509,39516]"/>
  <match src="indexed: indexed [55336,55343]" dest="indexed: indexed [23185,23192]"/>
  <match src="call_expression [29249,29268]" dest="call_expression [47643,47662]"/>
  <match src="function_definition [54836,54896]" dest="function_definition [22685,22745]"/>
  <match src="is: is [15739,15741]" dest="is: is [60747,60749]"/>
  <match src="primitive_type [4690,4697]" dest="primitive_type [5254,5261]"/>
  <match src="uint256: uint256 [96519,96526]" dest="uint256: uint256 [35675,35682]"/>
  <match src="): ) [54668,54669]" dest="): ) [22517,22518]"/>
  <match src=",: , [29774,29775]" dest=",: , [48168,48169]"/>
  <match src="member_expression [104915,104955]" dest="member_expression [44071,44111]"/>
  <match src="(: ( [21053,21054]" dest="(: ( [56867,56868]"/>
  <match src="identifier: v [55112,55113]" dest="identifier: v [22961,22962]"/>
  <match src="identifier: COUPON_EXPIRATION [47313,47330]" dest="identifier: COUPON_EXPIRATION [17446,17463]"/>
  <match src="block_statement [7684,7731]" dest="block_statement [8248,8295]"/>
  <match src="identifier: input [36617,36622]" dest="identifier: input [55011,55016]"/>
  <match src="): ) [48461,48462]" dest="): ) [18594,18595]"/>
  <match src="}: } [36549,36550]" dest="}: } [54943,54944]"/>
  <match src="-: - [36343,36344]" dest="-: - [54737,54738]"/>
  <match src="identifier: mul [7015,7018]" dest="identifier: mul [7579,7582]"/>
  <match src="comment: // ': ' [27573,27580]" dest="comment: // ': ' [45967,45974]"/>
  <match src="identifier: stringifyTruncated [32394,32412]" dest="identifier: stringifyTruncated [50788,50806]"/>
  <match src="identifier: sender [82822,82828]" dest="identifier: sender [72988,72994]"/>
  <match src="(: ( [100455,100456]" dest="(: ( [39611,39612]"/>
  <match src="identifier: c [1989,1990]" dest="identifier: c [2553,2554]"/>
  <match src="): ) [19842,19843]" dest="): ) [65472,65473]"/>
  <match src="{: { [89150,89151]" dest="{: { [30650,30651]"/>
  <match src="type_name [55201,55205]" dest="type_name [23050,23054]"/>
  <match src="type_name [97380,97387]" dest="type_name [36536,36543]"/>
  <match src="): ) [81147,81148]" dest="): ) [71579,71580]"/>
  <match src="(: ( [5918,5919]" dest="(: ( [6482,6483]"/>
  <match src="identifier: Approval [13930,13938]" dest="identifier: Approval [26919,26927]"/>
  <match src="memory: memory [102458,102464]" dest="memory: memory [41614,41620]"/>
  <match src="unary_expression [31587,31592]" dest="unary_expression [49981,49986]"/>
  <match src=",: , [28606,28607]" dest=",: , [47000,47001]"/>
  <match src="(: ( [6175,6176]" dest="(: ( [6739,6740]"/>
  <match src="}: } [6377,6378]" dest="}: } [6941,6942]"/>
  <match src=",: , [30751,30752]" dest=",: , [49145,49146]"/>
  <match src="string [82837,82872]" dest="string [73003,73041]"/>
  <match src="identifier: IERC20 [11448,11454]" dest="identifier: IERC20 [24437,24443]"/>
  <match src="call_argument [48052,48087]" dest="call_argument [18185,18220]"/>
  <match src="visibility [9383,9391]" dest="visibility [9947,9955]"/>
  <match src="call_expression [9143,9161]" dest="call_expression [9707,9725]"/>
  <match src="identifier: c [2016,2017]" dest="identifier: c [2580,2581]"/>
  <match src="): ) [8962,8963]" dest="): ) [9526,9527]"/>
  <match src="primitive_type [88453,88460]" dest="primitive_type [29953,29960]"/>
  <match src="): ) [6006,6007]" dest="): ) [6570,6571]"/>
  <match src="function_body [6557,6625]" dest="function_body [7121,7189]"/>
  <match src="identifier: D256 [68485,68489]" dest="identifier: D256 [68822,68826]"/>
  <match src="primitive_type [36852,36856]" dest="primitive_type [55246,55250]"/>
  <match src="identifier: _approve [21815,21823]" dest="identifier: approveCoupons [65008,65022]"/>
  <match src="(: ( [32639,32640]" dest="(: ( [51033,51034]"/>
  <match src="{: { [98389,98390]" dest="{: { [37545,37546]"/>
  <match src="struct_member [89109,89125]" dest="struct_member [30609,30625]"/>
  <match src="(: ( [31165,31166]" dest="(: ( [49559,49560]"/>
  <match src="call_argument [105543,105552]" dest="call_argument [44699,44708]"/>
  <match src=".: . [7008,7009]" dest=".: . [7572,7573]"/>
  <match src="return_type_definition [93607,93624]" dest="return_type_definition [32763,32780]"/>
  <match src="primitive_type [93719,93726]" dest="primitive_type [32875,32882]"/>
  <match src="call_argument [32564,32572]" dest="call_argument [50958,50966]"/>
  <match src="function_definition [28233,28786]" dest="function_definition [46627,47180]"/>
  <match src="}: } [93772,93773]" dest="}: } [32928,32929]"/>
  <match src="}: } [46056,46057]" dest="}: } [16189,16190]"/>
  <match src=",: , [84659,84660]" dest=",: , [64249,64250]"/>
  <match src="visibility [43148,43155]" dest="visibility [13281,13288]"/>
  <match src=",: , [85510,85511]" dest=",: , [79398,79399]"/>
  <match src=",: , [29903,29904]" dest=",: , [48297,48298]"/>
  <match src="return_statement [46003,46051]" dest="return_statement [16136,16184]"/>
  <match src="comment: /*     Copyright 2021 Ethic Money Devs &lt;devs@ethic.money&gt; and Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [74951,75634]" dest="comment: /*     Copyright 2021 Ethic Money Devs &lt;devs@ethic.money&gt; and Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [66005,66688]"/>
  <match src="{: { [88592,88593]" dest="{: { [30092,30093]"/>
  <match src="identifier: epoch [96559,96564]" dest="identifier: epoch [35715,35720]"/>
  <match src="=&gt;: =&gt; [88110,88112]" dest="=&gt;: =&gt; [29610,29612]"/>
  <match src="function_body [9412,9458]" dest="function_body [9976,10022]"/>
  <match src="identifier: POOL_EXIT_LOCKUP_EPOCHS [47197,47220]" dest="identifier: POOL_EXIT_LOCKUP_EPOCHS [17330,17353]"/>
  <match src="type_name [54533,54540]" dest="type_name [22382,22389]"/>
  <match src="identifier: account [102822,102829]" dest="identifier: account [41978,41985]"/>
  <match src="uint256: uint256 [95895,95902]" dest="uint256: uint256 [35051,35058]"/>
  <match src="function_body [96809,96877]" dest="function_body [35965,36033]"/>
  <match src="type_name [93420,93426]" dest="type_name [32576,32582]"/>
  <match src="type_name [29541,29548]" dest="type_name [47935,47942]"/>
  <match src="(: ( [35713,35714]" dest="(: ( [54107,54108]"/>
  <match src="): ) [67620,67621]" dest="): ) [67129,67130]"/>
  <match src="identifier: Getters [99347,99354]" dest="identifier: Getters [38503,38510]"/>
  <match src="identifier: msg [81796,81799]" dest="identifier: msg [73177,73180]"/>
  <match src="identifier: Upgraded [91276,91284]" dest="identifier: Upgraded [77586,77594]"/>
  <match src="memory: memory [7256,7262]" dest="memory: memory [7820,7826]"/>
  <match src=",: , [30411,30412]" dest=",: , [48805,48806]"/>
  <match src="contract: contract [88251,88259]" dest="contract: contract [29751,29759]"/>
  <match src="comment: /*     Copyright 2021 Ethic Money Devs &lt;devs@ethic.money&gt; and Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [80023,80706]" dest="comment: /*     Copyright 2021 Ethic Money Devs &lt;devs@ethic.money&gt; and Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [70656,71339]"/>
  <match src="function_body [95904,96065]" dest="function_body [35060,35221]"/>
  <match src="identifier: account [26056,26063]" dest="identifier: account [56641,56648]"/>
  <match src="): ) [85124,85125]" dest="): ) [59290,59291]"/>
  <match src="address: address [97927,97934]" dest="address: address [37083,37090]"/>
  <match src="visibility [44038,44045]" dest="visibility [14171,14178]"/>
  <match src="identifier: zero [5838,5842]" dest="identifier: zero [6402,6406]"/>
  <match src="string_literal [25243,25278]" dest="string_literal [80406,80436]"/>
  <match src="return_type_definition [93509,93526]" dest="return_type_definition [32665,32682]"/>
  <match src="address: address [81222,81229]" dest="address: address [71695,71702]"/>
  <match src="identifier: _state [105758,105764]" dest="identifier: _state [44914,44920]"/>
  <match src="bytes32: bytes32 [28856,28863]" dest="bytes32: bytes32 [47250,47257]"/>
  <match src="call_expression [28580,28606]" dest="call_expression [46974,47000]"/>
  <match src="visibility [11555,11563]" dest="visibility [24544,24552]"/>
  <match src="constant: constant [43957,43965]" dest="constant: constant [14090,14098]"/>
  <match src="): ) [45991,45992]" dest="): ) [16124,16125]"/>
  <match src="member_expression [101331,101345]" dest="member_expression [40487,40501]"/>
  <match src="update_expression [33301,33304]" dest="update_expression [51695,51698]"/>
  <match src="): ) [30410,30411]" dest="): ) [48804,48805]"/>
  <match src="memory: memory [9069,9075]" dest="memory: memory [9633,9639]"/>
  <match src="type_cast_expression [30921,31399]" dest="type_cast_expression [49315,49793]"/>
  <match src="): ) [10071,10072]" dest="): ) [10635,10636]"/>
  <match src="type_name [13939,13946]" dest="type_name [26928,26935]"/>
  <match src="(: ( [35068,35069]" dest="(: ( [53462,53463]"/>
  <match src="state_mutability [55005,55009]" dest="state_mutability [22854,22858]"/>
  <match src="function_body [9527,9566]" dest="function_body [10091,10130]"/>
  <match src="identifier: D256 [5995,5999]" dest="identifier: D256 [6559,6563]"/>
  <match src="visibility [28933,28941]" dest="visibility [47327,47335]"/>
  <match src="): ) [82507,82508]" dest="): ) [72738,72739]"/>
  <match src="}: } [82959,82960]" dest="}: } [73112,73113]"/>
  <match src="internal: internal [9097,9105]" dest="internal: internal [9661,9669]"/>
  <match src="identifier: length [34060,34066]" dest="identifier: length [52454,52460]"/>
  <match src="private: private [65550,65557]" dest="private: private [67449,67456]"/>
  <match src="block_statement [34319,34642]" dest="block_statement [52713,53036]"/>
  <match src="private: private [42493,42500]" dest="private: private [12626,12633]"/>
  <match src="expression_statement [102716,102784]" dest="expression_statement [41872,41940]"/>
  <match src="external: external [83859,83867]" dest="external: external [80858,80866]"/>
  <match src="): ) [36667,36668]" dest="): ) [55061,55062]"/>
  <match src=".: . [83882,83883]" dest=".: . [72567,72568]"/>
  <match src="number_literal: 1 [33454,33455]" dest="number_literal: 1 [51848,51849]"/>
  <match src="parameter [35660,35673]" dest="parameter [54054,54067]"/>
  <match src="parameter [9265,9269]" dest="parameter [9829,9833]"/>
  <match src="primitive_type [2603,2610]" dest="primitive_type [3167,3174]"/>
  <match src="type_name [35287,35294]" dest="type_name [53681,53688]"/>
  <match src="(: ( [53119,53120]" dest="(: ( [65735,65736]"/>
  <match src="revert_statement [29625,29990]" dest="revert_statement [48019,48384]"/>
  <match src=".: . [100775,100776]" dest=".: . [39931,39932]"/>
  <match src="identifier: self [7989,7993]" dest="identifier: self [8553,8557]"/>
  <match src="type_name [44160,44167]" dest="type_name [14293,14300]"/>
  <match src="member_expression [95378,95393]" dest="member_expression [34534,34549]"/>
  <match src="): ) [95054,95055]" dest="): ) [34210,34211]"/>
  <match src="yul_identifier [87179,87183]" dest="yul_identifier [75689,75693]"/>
  <match src="(: ( [104109,104110]" dest="(: ( [43265,43266]"/>
  <match src="(: ( [97658,97659]" dest="(: ( [36814,36815]"/>
  <match src="constant: constant [27499,27507]" dest="constant: constant [45893,45901]"/>
  <match src="): ) [9095,9096]" dest="): ) [9659,9660]"/>
  <match src="visibility [54806,54814]" dest="visibility [22655,22663]"/>
  <match src="type_name [3225,3231]" dest="type_name [3789,3795]"/>
  <match src="modifier: modifier [106621,106629]" dest="modifier: modifier [69963,69971]"/>
  <match src="(: ( [84309,84310]" dest="(: ( [62033,62034]"/>
  <match src="(: ( [8385,8386]" dest="(: ( [8949,8950]"/>
  <match src="): ) [9607,9608]" dest="): ) [10171,10172]"/>
  <match src="}: } [102789,102790]" dest="}: } [41945,41946]"/>
  <match src="identifier: initialized [105787,105798]" dest="identifier: initialized [44943,44954]"/>
  <match src="expression_statement [103561,103607]" dest="expression_statement [42717,42763]"/>
  <match src="return: return [96021,96027]" dest="return: return [35177,35183]"/>
  <match src="number_literal: 100 [43196,43199]" dest="number_literal: 100 [13329,13332]"/>
  <match src="return_type_definition [74008,74025]" dest="return_type_definition [62807,62824]"/>
  <match src="identifier: stringifyTruncated [29800,29818]" dest="identifier: stringifyTruncated [48194,48212]"/>
  <match src="comment: // return ASCII letter (a-f) [36808,36836]" dest="comment: // return ASCII letter (a-f) [55202,55230]"/>
  <match src="type_name [95586,95593]" dest="type_name [34742,34749]"/>
  <match src=",: , [8755,8756]" dest=",: , [9319,9320]"/>
  <match src="}: } [94742,94743]" dest="}: } [33898,33899]"/>
  <match src="uint256: uint256 [98099,98106]" dest="uint256: uint256 [37255,37262]"/>
  <match src="call_argument [84111,84140]" dest="call_argument [80957,80972]"/>
  <match src="returns: returns [8844,8851]" dest="returns: returns [9408,9415]"/>
  <match src="): ) [1936,1937]" dest="): ) [2500,2501]"/>
  <match src="=&gt;: =&gt; [89357,89359]" dest="=&gt;: =&gt; [30857,30859]"/>
  <match src="function: function [8781,8789]" dest="function: function [9345,9353]"/>
  <match src="identifier: amount [53298,53304]" dest="identifier: amount [65873,65879]"/>
  <match src="]: ] [101257,101258]" dest="]: ] [40413,40414]"/>
  <match src="call_struct_argument [45099,45117]" dest="call_struct_argument [15232,15250]"/>
  <match src="function_definition [55884,55945]" dest="function_definition [23733,23794]"/>
  <match src="number_literal: 1 [103496,103497]" dest="number_literal: 1 [42652,42653]"/>
  <match src="primitive_type [54377,54382]" dest="primitive_type [22226,22231]"/>
  <match src="identifier: add [102275,102278]" dest="identifier: add [41431,41434]"/>
  <match src="parameter [102403,102418]" dest="parameter [41559,41574]"/>
  <match src="member_expression [101659,101680]" dest="member_expression [40815,40836]"/>
  <match src="function_definition [90823,90852]" dest="function_definition [77133,77162]"/>
  <match src="binary_expression [35579,35585]" dest="binary_expression [53973,53979]"/>
  <match src="call_expression [9429,9447]" dest="call_expression [9993,10011]"/>
  <match src="visibility [6106,6114]" dest="visibility [6670,6678]"/>
  <match src="uint: uint [55019,55023]" dest="uint: uint [22868,22872]"/>
  <match src="identifier: statusOf [106967,106975]" dest="identifier: statusOf [70309,70317]"/>
  <match src="call_argument [85094,85107]" dest="call_argument [59489,59502]"/>
  <match src="comment: // assert(a == b * c + a % b); // There is no case in which this doesn't hold [3426,3503]" dest="comment: // assert(a == b * c + a % b); // There is no case in which this doesn't hold [3990,4067]"/>
  <match src="call_expression [830,873]" dest="call_expression [1394,1437]"/>
  <match src="number_literal: 0 [104190,104191]" dest="number_literal: 0 [43346,43347]"/>
  <match src="identifier: value [8331,8336]" dest="identifier: value [8895,8900]"/>
  <match src="external: external [93288,93296]" dest="external: external [32444,32452]"/>
  <match src="internal: internal [103691,103699]" dest="internal: internal [42847,42855]"/>
  <match src=".: . [100300,100301]" dest=".: . [39456,39457]"/>
  <match src="private: private [43327,43334]" dest="private: private [13460,13467]"/>
  <match src="identifier: self [7083,7087]" dest="identifier: self [7647,7651]"/>
  <match src="[: [ [105485,105486]" dest="[: [ [44641,44642]"/>
  <match src="public: public [94393,94399]" dest="public: public [33549,33555]"/>
  <match src="identifier: Account [95237,95244]" dest="identifier: Account [34393,34400]"/>
  <match src="type_name [52833,52840]" dest="type_name [56127,56134]"/>
  <match src="return: return [93738,93744]" dest="return: return [32894,32900]"/>
  <match src="return_type_definition [95031,95055]" dest="return_type_definition [34187,34211]"/>
  <match src="type_cast_expression [44591,44642]" dest="type_cast_expression [14724,14775]"/>
  <match src="event_paramater [54176,54194]" dest="event_paramater [22025,22043]"/>
  <match src="): ) [91509,91510]" dest="): ) [77819,77820]"/>
  <match src="identifier: Require [50798,50805]" dest="identifier: Require [63807,63814]"/>
  <match src="uint256: uint256 [3276,3283]" dest="uint256: uint256 [3840,3847]"/>
  <match src="primitive_type [42568,42575]" dest="primitive_type [12701,12708]"/>
  <match src="function_body [8859,8904]" dest="function_body [9423,9468]"/>
  <match src="): ) [31398,31399]" dest="): ) [49792,49793]"/>
  <match src="return: return [6567,6573]" dest="return: return [7131,7137]"/>
  <match src=",: , [55423,55424]" dest=",: , [23272,23273]"/>
  <match src="&quot;: &quot; [91596,91597]" dest="&quot;: &quot; [77906,77907]"/>
  <match src="call_expression [30949,31381]" dest="call_expression [49343,49775]"/>
  <match src="returns: returns [48145,48152]" dest="returns: returns [18278,18285]"/>
  <match src=",: , [53466,53467]" dest=",: , [61340,61341]"/>
  <match src="assignment_expression [7698,7720]" dest="assignment_expression [8262,8284]"/>
  <match src="(: ( [83843,83844]" dest="(: ( [80838,80839]"/>
  <match src=".: . [103583,103584]" dest=".: . [42739,42740]"/>
  <match src="uint256: uint256 [4617,4624]" dest="uint256: uint256 [5181,5188]"/>
  <match src="identifier: strategy [96133,96141]" dest="identifier: strategy [35289,35297]"/>
  <match src="call_struct_argument [6036,6047]" dest="call_struct_argument [6600,6611]"/>
  <match src="visibility [47370,47378]" dest="visibility [17503,17511]"/>
  <match src="identifier: account [105486,105493]" dest="identifier: account [44642,44649]"/>
  <match src="(: ( [63853,63854]" dest="(: ( [28641,28642]"/>
  <match src="visibility [1666,1674]" dest="visibility [2230,2238]"/>
  <match src="call_argument [36497,36514]" dest="call_argument [54891,54908]"/>
  <match src="parameter [53022,53036]" dest="parameter [56373,56387]"/>
  <match src="uint256: uint256 [6236,6243]" dest="uint256: uint256 [6800,6807]"/>
  <match src="identifier: candidate [98011,98020]" dest="identifier: candidate [37167,37176]"/>
  <match src="array_access [102191,102211]" dest="array_access [41347,41367]"/>
  <match src="binary_expression [74439,74486]" dest="binary_expression [68492,68560]"/>
  <match src=".: . [101606,101607]" dest=".: . [40762,40763]"/>
  <match src=".: . [96287,96288]" dest=".: . [35443,35444]"/>
  <match src="=: = [41647,41648]" dest="=: = [11780,11781]"/>
  <match src="call_expression [82681,82724]" dest="call_expression [73405,73449]"/>
  <match src="parameter [10064,10071]" dest="parameter [10628,10635]"/>
  <match src="parameter [56112,56126]" dest="parameter [23961,23975]"/>
  <match src="parameter [8949,8962]" dest="parameter [9513,9526]"/>
  <match src="}: } [48599,48600]" dest="}: } [18732,18733]"/>
  <match src="[: [ [93103,93104]" dest="[: [ [32259,32260]"/>
  <match src="identifier: amount [101958,101964]" dest="identifier: amount [41114,41120]"/>
  <match src="call_expression [66252,66368]" dest="call_expression [82304,82430]"/>
  <match src="type_name [94792,94799]" dest="type_name [33948,33955]"/>
  <match src="=: = [74179,74180]" dest="=: = [68462,68463]"/>
  <match src="pure: pure [35696,35700]" dest="pure: pure [54090,54094]"/>
  <match src="function: function [98041,98049]" dest="function: function [37197,37205]"/>
  <match src="primitive_type [28880,28887]" dest="primitive_type [47274,47281]"/>
  <match src="binary_expression [36359,36376]" dest="binary_expression [54753,54770]"/>
  <match src="primitive_type [47171,47178]" dest="primitive_type [17304,17311]"/>
  <match src="expression_statement [83729,83744]" dest="expression_statement [58652,58667]"/>
  <match src="): ) [91041,91042]" dest="): ) [77351,77352]"/>
  <match src="expression_statement [100722,100796]" dest="expression_statement [39878,39952]"/>
  <match src="for: for [15779,15782]" dest="for: for [60790,60793]"/>
  <match src=",: , [424,425]" dest=",: , [988,989]"/>
  <match src="identifier: start [97622,97627]" dest="identifier: start [36778,36783]"/>
  <match src="return: return [97718,97724]" dest="return: return [36874,36880]"/>
  <match src="external: external [56094,56102]" dest="external: external [23943,23951]"/>
  <match src="uint256: uint256 [102053,102060]" dest="uint256: uint256 [41209,41216]"/>
  <match src="memory: memory [33858,33864]" dest="memory: memory [52252,52258]"/>
  <match src="): ) [46696,46697]" dest="): ) [16829,16830]"/>
  <match src="number_literal: 25 [43291,43293]" dest="number_literal: 25 [13424,13426]"/>
  <match src=",: , [82123,82124]" dest=",: , [72351,72352]"/>
  <match src=".: . [94289,94290]" dest=".: . [33445,33446]"/>
  <match src="string_literal [24991,25024]" dest="string_literal [79603,79632]"/>
  <match src="function: function [96883,96891]" dest="function: function [36039,36047]"/>
  <match src="type_name [22922,22929]" dest="type_name [19816,19823]"/>
  <match src="returns: returns [96510,96517]" dest="returns: returns [35666,35673]"/>
  <match src="type_name [41593,41600]" dest="type_name [11726,11733]"/>
  <match src="identifier: transferFrom [13436,13448]" dest="identifier: transferFrom [26425,26437]"/>
  <match src="(: ( [55913,55914]" dest="(: ( [23762,23763]"/>
  <match src="identifier: size [87225,87229]" dest="identifier: size [75735,75739]"/>
  <match src="identifier: balance [100288,100295]" dest="identifier: balance [39444,39451]"/>
  <match src="identifier: Decimal [67543,67550]" dest="identifier: Decimal [21544,21551]"/>
  <match src="parameter [92873,92886]" dest="parameter [32029,32042]"/>
  <match src="=: = [43273,43274]" dest="=: = [13406,13407]"/>
  <match src="(: ( [53297,53298]" dest="(: ( [65852,65853]"/>
  <match src="assignment_expression [103448,103498]" dest="assignment_expression [42604,42654]"/>
  <match src="call_argument [106701,106743]" dest="call_argument [70043,70085]"/>
  <match src="): ) [3283,3284]" dest="): ) [3847,3848]"/>
  <match src="primitive_type [88751,88758]" dest="primitive_type [30251,30258]"/>
  <match src="parameter [28834,28846]" dest="parameter [47228,47240]"/>
  <match src="visibility [44252,44259]" dest="visibility [14385,14392]"/>
  <match src="&quot;: &quot; [20024,20025]" dest="&quot;: &quot; [57430,57431]"/>
  <match src="pragma_directive [25,58]" dest="pragma_directive [25,58]"/>
  <match src="primitive_type [45744,45751]" dest="primitive_type [15877,15884]"/>
  <match src="parameter [54693,54703]" dest="parameter [22542,22552]"/>
  <match src="primitive_type [65643,65650]" dest="primitive_type [79210,79217]"/>
  <match src="[: [ [95393,95394]" dest="[: [ [34549,34550]"/>
  <match src="call_argument [51042,51047]" dest="call_argument [73566,73571]"/>
  <match src="(: ( [69301,69302]" dest="(: ( [73553,73554]"/>
  <match src="identifier: that [27818,27822]" dest="identifier: that [46212,46216]"/>
  <match src="[: [ [105083,105084]" dest="[: [ [44239,44240]"/>
  <match src="call_argument [30514,30519]" dest="call_argument [48908,48913]"/>
  <match src="): ) [872,873]" dest="): ) [1436,1437]"/>
  <match src="type_name [104449,104456]" dest="type_name [43605,43612]"/>
  <match src="type_name [28880,28887]" dest="type_name [47274,47281]"/>
  <match src="type_name [43140,43147]" dest="type_name [13273,13280]"/>
  <match src="): ) [30834,30835]" dest="): ) [49228,49229]"/>
  <match src="): ) [35084,35085]" dest="): ) [53478,53479]"/>
  <match src="): ) [91767,91768]" dest="): ) [78077,78078]"/>
  <match src="(: ( [94293,94294]" dest="(: ( [33449,33450]"/>
  <match src=".: . [101914,101915]" dest=".: . [41070,41071]"/>
  <match src="(: ( [83923,83924]" dest="(: ( [81833,81834]"/>
  <match src="call_struct_argument [45065,45085]" dest="call_struct_argument [15198,15218]"/>
  <match src="): ) [30487,30488]" dest="): ) [48881,48882]"/>
  <match src="}: } [22546,22547]" dest="}: } [66002,66003]"/>
  <match src="ternary_expression [10160,10185]" dest="ternary_expression [10724,10749]"/>
  <match src="identifier: bonded [99976,99982]" dest="identifier: bonded [39132,39138]"/>
  <match src="function_definition [31436,31989]" dest="function_definition [49830,50383]"/>
  <match src="identifier: epoch [97072,97077]" dest="identifier: epoch [36228,36233]"/>
  <match src="string_literal [91596,91657]" dest="string_literal [77906,77967]"/>
  <match src=".: . [9662,9663]" dest=".: . [10226,10227]"/>
  <match src="): ) [2610,2611]" dest="): ) [3174,3175]"/>
  <match src="private: private [43417,43424]" dest="private: private [13550,13557]"/>
  <match src="}: } [96314,96315]" dest="}: } [35470,35471]"/>
  <match src="): ) [93397,93398]" dest="): ) [32553,32554]"/>
  <match src="assignment_expression [104876,104971]" dest="assignment_expression [44032,44127]"/>
  <match src="string: string [1239,1245]" dest="string: string [1803,1809]"/>
  <match src="identifier: abi [29042,29045]" dest="identifier: abi [47436,47439]"/>
  <match src="comment: /**  * @title Decimal  * @author dYdX  *  * Library that defines a fixed-point number with 18 decimal places.  */ [5437,5550]" dest="comment: /**  * @title Decimal  * @author dYdX  *  * Library that defines a fixed-point number with 18 decimal places.  */ [6001,6114]"/>
  <match src="user_defined_type [8797,8801]" dest="user_defined_type [9361,9365]"/>
  <match src="identifier: coupons [102255,102262]" dest="identifier: coupons [41411,41418]"/>
  <match src="): ) [31725,31726]" dest="): ) [50119,50120]"/>
  <match src="identifier: accounts [93095,93103]" dest="identifier: accounts [32251,32259]"/>
  <match src=".: . [103298,103299]" dest=".: . [42454,42455]"/>
  <match src="call_argument [31166,31174]" dest="call_argument [49560,49568]"/>
  <match src="parameter [93177,93184]" dest="parameter [32333,32340]"/>
  <match src="identifier: candidates [104532,104542]" dest="identifier: candidates [43688,43698]"/>
  <match src="{: { [21096,21097]" dest="{: { [56893,56894]"/>
  <match src="yul_function_call [98605,98616]" dest="yul_function_call [37761,37772]"/>
  <match src="call_argument [79094,79101]" dest="call_argument [58870,58891]"/>
  <match src="function: function [8910,8918]" dest="function: function [9474,9482]"/>
  <match src="array_access [103292,103340]" dest="array_access [42448,42496]"/>
  <match src="{: { [66807,66808]" dest="{: { [69007,69008]"/>
  <match src="identifier: provider [93452,93460]" dest="identifier: provider [32608,32616]"/>
  <match src="type_name [66700,66712]" dest="type_name [21290,21302]"/>
  <match src="identifier: length [34302,34308]" dest="identifier: length [52696,52702]"/>
  <match src="binary_expression [35441,35447]" dest="binary_expression [53835,53841]"/>
  <match src="memory: memory [6142,6148]" dest="memory: memory [6706,6712]"/>
  <match src="type_name [81262,81269]" dest="type_name [71735,71742]"/>
  <match src="}: } [33641,33642]" dest="}: } [52035,52036]"/>
  <match src="binary_expression [34038,34044]" dest="binary_expression [52432,52438]"/>
  <match src="identifier: balance [93113,93120]" dest="identifier: balance [32269,32276]"/>
  <match src="function: function [85008,85016]" dest="function: function [59393,59401]"/>
  <match src="returns: returns [54878,54885]" dest="returns: returns [22727,22734]"/>
  <match src="member_expression [84412,84431]" dest="member_expression [81013,81036]"/>
  <match src="return_type_definition [11720,11737]" dest="return_type_definition [24709,24726]"/>
  <match src="type_name [9818,9825]" dest="type_name [10382,10389]"/>
  <match src="user_defined_type [65477,65489]" dest="user_defined_type [66779,66791]"/>
  <match src="parameter [6463,6479]" dest="parameter [7027,7043]"/>
  <match src="identifier: amount [101883,101889]" dest="identifier: amount [41039,41045]"/>
  <match src="parameter [47171,47178]" dest="parameter [17304,17311]"/>
  <match src="(: ( [54925,54926]" dest="(: ( [22774,22775]"/>
  <match src="&quot;: &quot; [92820,92821]" dest="&quot;: &quot; [31976,31977]"/>
  <match src="identifier: mul [6795,6798]" dest="identifier: mul [7359,7362]"/>
  <match src="type_name [34007,34014]" dest="type_name [52401,52408]"/>
  <match src="): ) [94288,94289]" dest="): ) [33444,33445]"/>
  <match src="call_argument [74323,74330]" dest="call_argument [82717,82724]"/>
  <match src="identifier: Swap [55314,55318]" dest="identifier: Swap [23163,23167]"/>
  <match src="(: ( [55755,55756]" dest="(: ( [23604,23605]"/>
  <match src="visibility [97678,97684]" dest="visibility [36834,36840]"/>
  <match src="call_argument [69365,69374]" dest="call_argument [73573,73604]"/>
  <match src="): ) [36179,36180]" dest="): ) [54573,54574]"/>
  <match src="{: { [94633,94634]" dest="{: { [33789,33790]"/>
  <match src="contract_declaration [51743,51951]" dest="contract_declaration [27679,27887]"/>
  <match src="assignment_expression [104372,104416]" dest="assignment_expression [43528,43572]"/>
  <match src="string [66341,66360]" dest="string [82406,82420]"/>
  <match src="type_name [55062,55069]" dest="type_name [22911,22918]"/>
  <match src="}: } [68689,68690]" dest="}: } [68167,68168]"/>
  <match src="binary_expression [33148,33153]" dest="binary_expression [51542,51547]"/>
  <match src="visibility [46269,46277]" dest="visibility [16402,16410]"/>
  <match src="}: } [100024,100025]" dest="}: } [39180,39181]"/>
  <match src="string [85176,85206]" dest="string [59347,59370]"/>
  <match src="): ) [28682,28683]" dest="): ) [47076,47077]"/>
  <match src="identifier: currentLock [105603,105614]" dest="identifier: currentLock [44759,44770]"/>
  <match src="member_expression [104372,104389]" dest="member_expression [43528,43545]"/>
  <match src="primitive_type [383,390]" dest="primitive_type [947,954]"/>
  <match src="identifier: Transfer [54145,54153]" dest="identifier: Transfer [21994,22002]"/>
  <match src="(: ( [31614,31615]" dest="(: ( [50008,50009]"/>
  <match src="identifier: ASCII_LOWER_EX [35069,35083]" dest="identifier: ASCII_LOWER_EX [53463,53477]"/>
  <match src="identifier: LPAREN [30437,30443]" dest="identifier: LPAREN [48831,48837]"/>
  <match src=",: , [32528,32529]" dest=",: , [50922,50923]"/>
  <match src="{: { [48463,48464]" dest="{: { [18596,18597]"/>
  <match src="variable_declaration [84377,84409]" dest="variable_declaration [62194,62214]"/>
  <match src="): ) [34561,34562]" dest="): ) [52955,52956]"/>
  <match src="identifier: amount [105039,105045]" dest="identifier: amount [44195,44201]"/>
  <match src="pure: pure [8839,8843]" dest="pure: pure [9403,9407]"/>
  <match src="memory: memory [9992,9998]" dest="memory: memory [10556,10562]"/>
  <match src="parameter [50208,50224]" dest="parameter [57494,57511]"/>
  <match src=".: . [85083,85084]" dest=".: . [59483,59484]"/>
  <match src="identifier: rejectFor [97917,97926]" dest="identifier: rejectFor [37073,37082]"/>
  <match src="function: function [99733,99741]" dest="function: function [38889,38897]"/>
  <match src="identifier: amount [51860,51866]" dest="identifier: amount [27796,27802]"/>
  <match src=".: . [50689,50690]" dest=".: . [63939,63940]"/>
  <match src="type_name [71269,71276]" dest="type_name [67023,67030]"/>
  <match src="call_argument [83370,83380]" dest="call_argument [73383,73393]"/>
  <match src="identifier: ASCII_LOWER_EX [27508,27522]" dest="identifier: ASCII_LOWER_EX [45902,45916]"/>
  <match src="function: function [55770,55778]" dest="function: function [23619,23627]"/>
  <match src="member_expression [100432,100446]" dest="member_expression [39588,39602]"/>
  <match src="(: ( [46663,46664]" dest="(: ( [16796,16797]"/>
  <match src="): ) [54894,54895]" dest="): ) [22743,22744]"/>
  <match src="identifier: payloadB [30555,30563]" dest="identifier: payloadB [48949,48957]"/>
  <match src="parameter [46800,46807]" dest="parameter [16933,16940]"/>
  <match src="identifier: Decimal [68505,68512]" dest="identifier: Decimal [82693,82700]"/>
  <match src="identifier: add [101055,101058]" dest="identifier: add [40211,40214]"/>
  <match src="call_argument [426,455]" dest="call_argument [990,1019]"/>
  <match src="bytes32: bytes32 [32083,32090]" dest="bytes32: bytes32 [50477,50484]"/>
  <match src="call_argument [104751,104757]" dest="call_argument [43907,43913]"/>
  <match src="type_name [47847,47859]" dest="type_name [17980,17992]"/>
  <match src="if: if [95066,95068]" dest="if: if [34222,34224]"/>
  <match src="==: == [2022,2024]" dest="==: == [2586,2588]"/>
  <match src="member_expression [81577,81587]" dest="member_expression [72100,72110]"/>
  <match src="{: { [95648,95649]" dest="{: { [34804,34805]"/>
  <match src="view: view [95026,95030]" dest="view: view [34182,34186]"/>
  <match src="return: return [9281,9287]" dest="return: return [9845,9851]"/>
  <match src="type_name [100885,100892]" dest="type_name [40041,40048]"/>
  <match src="identifier: stringifyTruncated [30304,30322]" dest="identifier: stringifyTruncated [48698,48716]"/>
  <match src="variable_declaration [68154,68178]" dest="variable_declaration [68005,68026]"/>
  <match src="function: function [102368,102376]" dest="function: function [41524,41532]"/>
  <match src="identifier: initialized [88820,88831]" dest="identifier: initialized [30320,30331]"/>
  <match src="call_argument [83986,84013]" dest="call_argument [81901,81916]"/>
  <match src="struct_member [89011,89026]" dest="struct_member [30511,30526]"/>
  <match src="state_mutability [54421,54425]" dest="state_mutability [22270,22274]"/>
  <match src="public: public [72459,72465]" dest="public: public [83801,83807]"/>
  <match src="): ) [47019,47020]" dest="): ) [17152,17153]"/>
  <match src="member_expression [83025,83035]" dest="member_expression [72595,72605]"/>
  <match src="): ) [25728,25729]" dest="): ) [61200,61201]"/>
  <match src="variable_declaration_statement [82394,82465]" dest="variable_declaration_statement [67810,67855]"/>
  <match src="parameter [54887,54894]" dest="parameter [22736,22743]"/>
  <match src="visibility [8027,8035]" dest="visibility [8591,8599]"/>
  <match src="identifier: require [58617,58624]" dest="identifier: decrementBalanceOf [74086,74104]"/>
  <match src="primitive_type [36663,36667]" dest="primitive_type [55057,55061]"/>
  <match src="(: ( [7967,7968]" dest="(: ( [8531,8532]"/>
  <match src="type_name [8167,8171]" dest="type_name [8731,8735]"/>
  <match src="): ) [48766,48767]" dest="): ) [18899,18900]"/>
  <match src="identifier: totalRewardedWithPhantom [84385,84409]" dest="identifier: totalCoupons [62202,62214]"/>
  <match src="(: ( [56004,56005]" dest="(: ( [23853,23854]"/>
  <match src="]: ] [103276,103277]" dest="]: ] [42432,42433]"/>
  <match src="): ) [48529,48530]" dest="): ) [18662,18663]"/>
  <match src="parameter [8395,8411]" dest="parameter [8959,8975]"/>
  <match src="function_body [47868,47934]" dest="function_body [18001,18067]"/>
  <match src="function_body [101538,101699]" dest="function_body [40694,40855]"/>
  <match src="{: { [9271,9272]" dest="{: { [9835,9836]"/>
  <match src="array_access [98269,98297]" dest="array_access [37425,37453]"/>
  <match src="type_name [99380,99387]" dest="type_name [38536,38543]"/>
  <match src="(: ( [81576,81577]" dest="(: ( [72099,72100]"/>
  <match src="function_definition [4604,4767]" dest="function_definition [5168,5331]"/>
  <match src="identifier: sender [83509,83515]" dest="identifier: sender [73558,73564]"/>
  <match src="comment: /*     Copyright 2021 Ethic Money Devs &lt;devs@ethic.money&gt; and Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [91788,92471]" dest="comment: /*     Copyright 2021 Ethic Money Devs &lt;devs@ethic.money&gt; and Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [78098,78781]"/>
  <match src="string [107040,107062]" dest="string [70382,70404]"/>
  <match src="private: private [34728,34735]" dest="private: private [53122,53129]"/>
  <match src="type_name [56177,56181]" dest="type_name [24026,24030]"/>
  <match src="identifier: lockedUntil [95095,95106]" dest="identifier: lockedUntil [34251,34262]"/>
  <match src="expression_statement [105268,105362]" dest="expression_statement [44424,44518]"/>
  <match src="memory: memory [45479,45485]" dest="memory: memory [15612,15618]"/>
  <match src="identifier: amount [23089,23095]" dest="identifier: amount [20070,20076]"/>
  <match src="identifier: account [101829,101836]" dest="identifier: account [40985,40992]"/>
  <match src="call_expression [6171,6199]" dest="call_expression [6735,6763]"/>
  <match src=",: , [83954,83955]" dest=",: , [81869,81870]"/>
  <match src="&gt;&gt;: &gt;&gt; [35443,35445]" dest="&gt;&gt;: &gt;&gt; [53837,53839]"/>
  <match src="user_defined_type [89160,89172]" dest="user_defined_type [30660,30672]"/>
  <match src="member_expression [95665,95704]" dest="member_expression [34821,34860]"/>
  <match src="parameter [93062,93069]" dest="parameter [32218,32225]"/>
  <match src="identifier: add [6599,6602]" dest="identifier: add [7163,7166]"/>
  <match src="type_name [56056,56060]" dest="type_name [23905,23909]"/>
  <match src="function_body [47296,47337]" dest="function_body [17429,17470]"/>
  <match src="): ) [53165,53166]" dest="): ) [65810,65811]"/>
  <match src="uint256: uint256 [105031,105038]" dest="uint256: uint256 [44187,44194]"/>
  <match src=".: . [102872,102873]" dest=".: . [42028,42029]"/>
  <match src="]: ] [35009,35010]" dest="]: ] [53403,53404]"/>
  <match src=",: , [105352,105353]" dest=",: , [44508,44509]"/>
  <match src=",: , [30564,30565]" dest=",: , [48958,48959]"/>
  <match src="call_argument [17791,17833]" dest="call_argument [73488,73524]"/>
  <match src="parameter [9632,9639]" dest="parameter [10196,10203]"/>
  <match src="identifier: msg [83370,83373]" dest="identifier: msg [73383,73386]"/>
  <match src="type_name [65477,65489]" dest="type_name [66779,66791]"/>
  <match src="return_statement [9136,9167]" dest="return_statement [9700,9731]"/>
  <match src="type_name [10064,10071]" dest="type_name [10628,10635]"/>
  <match src="{: { [101224,101225]" dest="{: { [40380,40381]"/>
  <match src="state_variable_declaration [41436,41488]" dest="state_variable_declaration [11569,11621]"/>
  <match src="event_paramater [53444,53466]" dest="event_paramater [61320,61340]"/>
  <match src="address: address [30761,30768]" dest="address: address [49155,49162]"/>
  <match src="uint256: uint256 [89059,89066]" dest="uint256: uint256 [30559,30566]"/>
  <match src="bytes: bytes [35714,35719]" dest="bytes: bytes [54108,54113]"/>
  <match src="identifier: sub [100776,100779]" dest="identifier: sub [39932,39935]"/>
  <match src="type_name [27714,27721]" dest="type_name [46108,46115]"/>
  <match src="struct_member [88396,88416]" dest="struct_member [29896,29916]"/>
  <match src="identifier: reason [28864,28870]" dest="identifier: reason [47258,47264]"/>
  <match src="uint256: uint256 [330,337]" dest="uint256: uint256 [894,901]"/>
  <match src="string_literal [82188,82226]" dest="string_literal [82061,82075]"/>
  <match src="return_type_definition [8467,8488]" dest="return_type_definition [9031,9052]"/>
  <match src="primitive_type [99451,99458]" dest="primitive_type [38607,38614]"/>
  <match src="identifier: ethic [94268,94273]" dest="identifier: ethic [33424,33429]"/>
  <match src="identifier: _state [101659,101665]" dest="identifier: _state [40815,40821]"/>
  <match src="}: } [6048,6049]" dest="}: } [6612,6613]"/>
  <match src="identifier: candidate [104625,104634]" dest="identifier: candidate [43781,43790]"/>
  <match src="): ) [54439,54440]" dest="): ) [22288,22289]"/>
  <match src="(: ( [85081,85082]" dest="(: ( [59481,59482]"/>
  <match src="parameter [6540,6551]" dest="parameter [7104,7115]"/>
  <match src="}: } [48809,48810]" dest="}: } [18942,18943]"/>
  <match src="event_paramater [55269,55281]" dest="event_paramater [23118,23130]"/>
  <match src="primitive_type [75904,75911]" dest="primitive_type [56650,56657]"/>
  <match src="): ) [81967,81968]" dest="): ) [57241,57242]"/>
  <match src="comment: // Can modify account state [106589,106616]" dest="comment: // Can modify account state [69931,69958]"/>
  <match src="identifier: sub [102687,102690]" dest="identifier: sub [41843,41846]"/>
  <match src="state_mutability [48745,48749]" dest="state_mutability [18878,18882]"/>
  <match src=",: , [81189,81190]" dest=",: , [83743,83744]"/>
  <match src="identifier: amount [21864,21870]" dest="identifier: amount [65048,65054]"/>
  <match src="identifier: blockTimestamp [96191,96205]" dest="identifier: blockTimestamp [35347,35361]"/>
  <match src="call_argument [50940,50955]" dest="call_argument [65607,65612]"/>
  <match src="type_name [67543,67555]" dest="type_name [21544,21556]"/>
  <match src="uint256: uint256 [42862,42869]" dest="uint256: uint256 [12995,13002]"/>
  <match src="parameter [97833,97840]" dest="parameter [36989,36996]"/>
  <match src="return_type_definition [47384,47413]" dest="return_type_definition [17517,17546]"/>
  <match src="call_argument [8121,8128]" dest="call_argument [8685,8692]"/>
  <match src="identifier: _state [99985,99991]" dest="identifier: _state [39141,39147]"/>
  <match src="): ) [8857,8858]" dest="): ) [9421,9422]"/>
  <match src="): ) [56412,56413]" dest="): ) [24261,24262]"/>
  <match src="type_name [55328,55335]" dest="type_name [23177,23184]"/>
  <match src="parameter [9227,9240]" dest="parameter [9791,9804]"/>
  <match src="identifier: GOVERNANCE_EMERGENCY_DELAY [42887,42913]" dest="identifier: GOVERNANCE_EMERGENCY_DELAY [13020,13046]"/>
  <match src="call_argument [9020,9024]" dest="call_argument [9584,9588]"/>
  <match src="using_directive [5573,5600]" dest="using_directive [6137,6164]"/>
  <match src="call_expression [85456,85561]" dest="call_expression [79347,79457]"/>
  <match src="string [53306,53348]" dest="string [65881,65919]"/>
  <match src="function: function [92733,92741]" dest="function: function [31889,31897]"/>
  <match src="member_expression [105066,105101]" dest="member_expression [44222,44257]"/>
  <match src="identifier: incrementTotalRedeemable [100493,100517]" dest="identifier: incrementTotalRedeemable [39649,39673]"/>
  <match src="uint256: uint256 [27432,27439]" dest="uint256: uint256 [45826,45833]"/>
  <match src="call_argument [7013,7024]" dest="call_argument [7577,7588]"/>
  <match src="identifier: sender [53130,53136]" dest="identifier: sender [65777,65783]"/>
  <match src="event_paramater [13750,13763]" dest="event_paramater [26739,26752]"/>
  <match src="}: } [87239,87240]" dest="}: } [75749,75750]"/>
  <match src="type_cast_expression [35063,35084]" dest="type_cast_expression [53457,53478]"/>
  <match src="bytes32: bytes32 [31478,31485]" dest="bytes32: bytes32 [49872,49879]"/>
  <match src="call_expression [8326,8357]" dest="call_expression [8890,8921]"/>
  <match src="parameter [56270,56289]" dest="parameter [24119,24138]"/>
  <match src="identifier: D256 [6137,6141]" dest="identifier: D256 [6701,6705]"/>
  <match src=".: . [95146,95147]" dest=".: . [34302,34303]"/>
  <match src="primitive_type [51911,51918]" dest="primitive_type [27847,27854]"/>
  <match src="contract_declaration [88251,88555]" dest="contract_declaration [29751,30055]"/>
  <match src="primitive_type [96764,96771]" dest="primitive_type [35920,35927]"/>
  <match src="call_expression [31072,31098]" dest="call_expression [49466,49492]"/>
  <match src="uint8: uint8 [36761,36766]" dest="uint8: uint8 [55155,55160]"/>
  <match src="function_definition [48101,48204]" dest="function_definition [18234,18337]"/>
  <match src="returns: returns [44989,44996]" dest="returns: returns [15122,15129]"/>
  <match src="): ) [19752,19753]" dest="): ) [65374,65375]"/>
  <match src="primitive_type [94566,94573]" dest="primitive_type [33722,33729]"/>
  <match src="{: { [97976,97977]" dest="{: { [37132,37133]"/>
  <match src="call_argument [31091,31097]" dest="call_argument [49485,49491]"/>
  <match src=",: , [32368,32369]" dest=",: , [50762,50763]"/>
  <match src="address: address [105192,105199]" dest="address: address [44348,44355]"/>
  <match src="call_argument [46179,46217]" dest="call_argument [16312,16350]"/>
  <match src="event_paramater [55384,55398]" dest="event_paramater [23233,23247]"/>
  <match src="address: address [81166,81173]" dest="address: address [83720,83727]"/>
  <match src="visibility [104652,104660]" dest="visibility [43808,43816]"/>
  <match src="&quot;: &quot; [83215,83216]" dest="&quot;: &quot; [82282,82283]"/>
  <match src="): ) [6961,6962]" dest="): ) [7525,7526]"/>
  <match src=".: . [93855,93856]" dest=".: . [33011,33012]"/>
  <match src="string [84111,84140]" dest="string [80957,80972]"/>
  <match src="(: ( [47170,47171]" dest="(: ( [17303,17304]"/>
  <match src="function_definition [11532,11587]" dest="function_definition [24521,24576]"/>
  <match src="]: ] [104698,104699]" dest="]: ] [43854,43855]"/>
  <match src="identifier: msg [82169,82172]" dest="identifier: msg [73782,73785]"/>
  <match src="identifier: amount [101618,101624]" dest="identifier: amount [40774,40780]"/>
  <match src="function_definition [47233,47337]" dest="function_definition [17366,17470]"/>
  <match src="primitive_type [74036,74043]" dest="primitive_type [68388,68395]"/>
  <match src="identifier: payloadB [31242,31250]" dest="identifier: payloadB [49636,49644]"/>
  <match src="pure: pure [46439,46443]" dest="pure: pure [16572,16576]"/>
  <match src=".: . [47854,47855]" dest=".: . [17987,17988]"/>
  <match src="identifier: require [21106,21113]" dest="identifier: decrementBalanceOfCoupons [64554,64579]"/>
  <match src=".: . [100265,100266]" dest=".: . [39421,39422]"/>
  <match src="number_literal: 64 [36478,36480]" dest="number_literal: 64 [54872,54874]"/>
  <match src="primitive_type [28321,28328]" dest="primitive_type [46715,46722]"/>
  <match src="): ) [83619,83620]" dest="): ) [80752,80753]"/>
  <match src="(: ( [36358,36359]" dest="(: ( [54752,54753]"/>
  <match src=".: . [102310,102311]" dest=".: . [41466,41467]"/>
  <match src="visibility [45328,45336]" dest="visibility [15461,15469]"/>
  <match src="visibility [82334,82342]" dest="visibility [72537,72545]"/>
  <match src="call_expression [101847,101898]" dest="call_expression [41003,41054]"/>
  <match src="): ) [105578,105579]" dest="): ) [44734,44735]"/>
  <match src="for: for [35194,35197]" dest="for: for [53588,53591]"/>
  <match src="]: ] [102622,102623]" dest="]: ] [41778,41779]"/>
  <match src="call_expression [2008,2064]" dest="call_expression [2572,2628]"/>
  <match src="identifier: Require [50682,50689]" dest="identifier: Require [63932,63939]"/>
  <match src="(: ( [93822,93823]" dest="(: ( [32978,32979]"/>
  <match src="type_name [7596,7600]" dest="type_name [8160,8164]"/>
  <match src=",: , [81348,81349]" dest=",: , [71650,71651]"/>
  <match src="type_name [67753,67757]" dest="type_name [68841,68845]"/>
  <match src=".: . [100987,100988]" dest=".: . [40143,40144]"/>
  <match src="memory: memory [8400,8406]" dest="memory: memory [8964,8970]"/>
  <match src="member_expression [94932,94947]" dest="member_expression [34088,34103]"/>
  <match src="bool: bool [29476,29480]" dest="bool: bool [47870,47874]"/>
  <match src=".: . [46299,46300]" dest=".: . [16432,16433]"/>
  <match src=",: , [50744,50745]" dest=",: , [64002,64003]"/>
  <match src="function: function [45410,45418]" dest="function: function [15543,15551]"/>
  <match src="comment: /*     Copyright 2021 Ethic Money Devs &lt;devs@ethic.money&gt; and Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [64742,65425]" dest="comment: /*     Copyright 2021 Ethic Money Devs &lt;devs@ethic.money&gt; and Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [37792,38475]"/>
  <match src="return: return [95181,95187]" dest="return: return [34337,34343]"/>
  <match src="return_type_definition [47838,47867]" dest="return_type_definition [17971,18000]"/>
  <match src="): ) [51803,51804]" dest="): ) [27739,27740]"/>
  <match src="struct_declaration [42038,42137]" dest="struct_declaration [12171,12270]"/>
  <match src="): ) [1265,1266]" dest="): ) [1829,1830]"/>
  <match src="event_definition [13924,14002]" dest="event_definition [26913,26991]"/>
  <match src="{: { [104308,104309]" dest="{: { [43464,43465]"/>
  <match src="uint256: uint256 [43409,43416]" dest="uint256: uint256 [13542,13549]"/>
  <match src="call_expression [74693,74700]" dest="call_expression [62936,62943]"/>
  <match src="call_expression [83477,83530]" dest="call_expression [73459,73525]"/>
  <match src="): ) [45630,45631]" dest="): ) [15763,15764]"/>
  <match src="(: ( [93023,93024]" dest="(: ( [32179,32180]"/>
  <match src="function_definition [47656,47786]" dest="function_definition [17789,17919]"/>
  <match src=".: . [94938,94939]" dest=".: . [34094,34095]"/>
  <match src="identifier: coupons [102517,102524]" dest="identifier: coupons [41673,41680]"/>
  <match src="public: public [97206,97212]" dest="public: public [36362,36368]"/>
  <match src="primitive_type [55458,55465]" dest="primitive_type [23307,23314]"/>
  <match src=".: . [100446,100447]" dest=".: . [39602,39603]"/>
  <match src="event_definition [81282,81372]" dest="event_definition [71586,71677]"/>
  <match src="identifier: z [35575,35576]" dest="identifier: z [53969,53970]"/>
  <match src="member_expression [82760,82770]" dest="member_expression [74105,74115]"/>
  <match src="comment: // return ASCII digit (0-9) [36683,36710]" dest="comment: // return ASCII digit (0-9) [55077,55104]"/>
  <match src="uint: uint [54794,54798]" dest="uint: uint [22643,22647]"/>
  <match src="return_type_definition [7319,7340]" dest="return_type_definition [7883,7904]"/>
  <match src="}: } [83820,83821]" dest="}: } [73676,73677]"/>
  <match src="returns: returns [54579,54586]" dest="returns: returns [22428,22435]"/>
  <match src="identifier: debt [100425,100429]" dest="identifier: debt [39581,39585]"/>
  <match src="{: { [100712,100713]" dest="{: { [39868,39869]"/>
  <match src="): ) [102592,102593]" dest="): ) [41748,41749]"/>
  <match src="state_mutability [9106,9110]" dest="state_mutability [9670,9674]"/>
  <match src="): ) [54926,54927]" dest="): ) [22775,22776]"/>
  <match src="=: = [102532,102533]" dest="=: = [41688,41689]"/>
  <match src="): ) [101439,101440]" dest="): ) [40595,40596]"/>
  <match src="memory: memory [8820,8826]" dest="memory: memory [9384,9390]"/>
  <match src="identifier: supply [101346,101352]" dest="identifier: supply [40502,40508]"/>
  <match src="return: return [7175,7181]" dest="return: return [7739,7745]"/>
  <match src="comment: // take last decimal digit [34481,34507]" dest="comment: // take last decimal digit [52875,52901]"/>
  <match src="identifier: that [31445,31449]" dest="identifier: that [49839,49843]"/>
  <match src="type_cast_expression [27979,28196]" dest="type_cast_expression [46373,46590]"/>
  <match src="(: ( [103426,103427]" dest="(: ( [42582,42583]"/>
  <match src="{: { [47444,47445]" dest="{: { [17577,17578]"/>
  <match src="(: ( [93061,93062]" dest="(: ( [32217,32218]"/>
  <match src=".: . [102516,102517]" dest=".: . [41672,41673]"/>
  <match src="parameter [47722,47729]" dest="parameter [17855,17862]"/>
  <match src="primitive_type [55106,55111]" dest="primitive_type [22955,22960]"/>
  <match src="): ) [98518,98519]" dest="): ) [37674,37675]"/>
  <match src="): ) [82585,82586]" dest="): ) [72803,72804]"/>
  <match src="primitive_type [102403,102410]" dest="primitive_type [41559,41566]"/>
  <match src="state_variable_declaration [42147,42189]" dest="state_variable_declaration [12280,12322]"/>
  <match src="uint256: uint256 [33433,33440]" dest="uint256: uint256 [51827,51834]"/>
  <match src="(: ( [102690,102691]" dest="(: ( [41846,41847]"/>
  <match src="binary_expression [106701,106736]" dest="binary_expression [70043,70078]"/>
  <match src="identifier: _state [104876,104882]" dest="identifier: _state [44032,44038]"/>
  <match src="variable_declaration_tuple [91109,91144]" dest="variable_declaration_tuple [77419,77454]"/>
  <match src="number_literal: 18 [42916,42918]" dest="number_literal: 18 [13049,13051]"/>
  <match src="&quot;: &quot; [19803,19804]" dest="&quot;: &quot; [65425,65426]"/>
  <match src="call_expression [81556,81610]" dest="call_expression [72079,72133]"/>
  <match src="sstore: sstore [91737,91743]" dest="sstore: sstore [78047,78053]"/>
  <match src="array_access [96545,96565]" dest="array_access [35701,35721]"/>
  <match src="}: } [96732,96733]" dest="}: } [35888,35889]"/>
  <match src="number_literal: 0 [35962,35963]" dest="number_literal: 0 [54356,54357]"/>
  <match src="contract_declaration [88842,89396]" dest="contract_declaration [30342,30896]"/>
  <match src="binary_expression [36340,36350]" dest="binary_expression [54734,54744]"/>
  <match src="identifier: amount [76349,76355]" dest="identifier: amount [65206,65212]"/>
  <match src="(: ( [32287,32288]" dest="(: ( [50681,50682]"/>
  <match src="returns: returns [47713,47720]" dest="returns: returns [17846,17853]"/>
  <match src="function_definition [51775,51812]" dest="function_definition [27711,27748]"/>
  <match src="function_definition [13427,13524]" dest="function_definition [26416,26513]"/>
  <match src=".: . [82116,82117]" dest=".: . [72344,72345]"/>
  <match src="(: ( [104799,104800]" dest="(: ( [43955,43956]"/>
  <match src="memory: memory [95938,95944]" dest="memory: memory [35094,35100]"/>
  <match src=",: , [27863,27864]" dest=",: , [46257,46258]"/>
  <match src="function_body [100108,100190]" dest="function_body [39264,39346]"/>
  <match src="=: = [42359,42360]" dest="=: = [12492,12493]"/>
  <match src="): ) [6503,6504]" dest="): ) [7067,7068]"/>
  <match src="parameter [56258,56268]" dest="parameter [24107,24117]"/>
  <match src="function: function [28233,28241]" dest="function: function [46627,46635]"/>
  <match src="(: ( [81992,81993]" dest="(: ( [72476,72477]"/>
  <match src="type_name [28856,28863]" dest="type_name [47250,47257]"/>
  <match src="identifier: strategy [96225,96233]" dest="identifier: strategy [35381,35389]"/>
  <match src="address: address [53492,53499]" dest="address: address [61449,61456]"/>
  <match src=",: , [10000,10001]" dest=",: , [10564,10565]"/>
  <match src="function: function [104239,104247]" dest="function: function [43395,43403]"/>
  <match src="parameter [3985,3994]" dest="parameter [4549,4558]"/>
  <match src="return: return [95132,95138]" dest="return: return [34288,34294]"/>
  <match src="using: using [92504,92509]" dest="using: using [31660,31665]"/>
  <match src="comment: // 24% [43751,43757]" dest="comment: // 24% [13884,13890]"/>
  <match src="parameter [9480,9496]" dest="parameter [10044,10060]"/>
  <match src="visibility [10034,10041]" dest="visibility [10598,10605]"/>
  <match src="primitive_type [36012,36016]" dest="primitive_type [54406,54410]"/>
  <match src="block_statement [105616,105687]" dest="block_statement [44772,44843]"/>
  <match src="identifier: _burn [21048,21053]" dest="identifier: burnRedeemable [56853,56867]"/>
  <match src="state_mutability [96948,96952]" dest="state_mutability [36104,36108]"/>
  <match src="parameter [12029,12033]" dest="parameter [25018,25022]"/>
  <match src="call_expression [103772,103826]" dest="call_expression [42928,42982]"/>
  <match src="(: ( [32412,32413]" dest="(: ( [50806,50807]"/>
  <match src="(: ( [101098,101099]" dest="(: ( [40254,40255]"/>
  <match src="uint256: uint256 [4628,4635]" dest="uint256: uint256 [5192,5199]"/>
  <match src="type_name [55019,55023]" dest="type_name [22868,22872]"/>
  <match src="contract_body [87945,88249]" dest="contract_body [29445,29749]"/>
  <match src="if_statement [33395,33688]" dest="if_statement [51789,52082]"/>
  <match src="array_access [95378,95402]" dest="array_access [34534,34558]"/>
  <match src="(: ( [7656,7657]" dest="(: ( [8220,8221]"/>
  <match src="string_literal [81022,81028]" dest="string_literal [71451,71460]"/>
  <match src=",: , [30443,30444]" dest=",: , [48837,48838]"/>
  <match src="struct_member [88139,88184]" dest="struct_member [29639,29684]"/>
  <match src="call_argument [9439,9443]" dest="call_argument [10003,10007]"/>
  <match src="array_access [97126,97146]" dest="array_access [36282,36302]"/>
  <match src="uint256: uint256 [43702,43709]" dest="uint256: uint256 [13835,13842]"/>
  <match src="member_expression [82274,82284]" dest="member_expression [82484,82494]"/>
  <match src="call_expression [84542,84555]" dest="call_expression [73934,73947]"/>
  <match src=".: . [105132,105133]" dest=".: . [44288,44289]"/>
  <match src="string_literal [840,872]" dest="string_literal [1404,1436]"/>
  <match src="identifier: candidate [97471,97480]" dest="identifier: candidate [36627,36636]"/>
  <match src="view: view [96387,96391]" dest="view: view [35543,35547]"/>
  <match src="(: ( [9631,9632]" dest="(: ( [10195,10196]"/>
  <match src="constant: constant [44116,44124]" dest="constant: constant [14249,14257]"/>
  <match src="parameter [6255,6264]" dest="parameter [6819,6828]"/>
  <match src="call_argument [35405,35422]" dest="call_argument [53799,53816]"/>
  <match src="comment: //  Mainnet DAI addr  [41809,41830]" dest="comment: //  Mainnet DAI addr  [11942,11963]"/>
  <match src="contract_declaration [99320,105814]" dest="contract_declaration [38476,44970]"/>
  <match src=":: : [10182,10183]" dest=":: : [10746,10747]"/>
  <match src="function_definition [46983,47103]" dest="function_definition [17116,17236]"/>
  <match src="member_expression [8535,8545]" dest="member_expression [9099,9109]"/>
  <match src="call_argument [8719,8767]" dest="call_argument [9283,9331]"/>
  <match src="call_argument [20706,20712]" dest="call_argument [65265,65271]"/>
  <match src="comment: // r.length = length; [33603,33624]" dest="comment: // r.length = length; [51997,52018]"/>
  <match src="&quot;: &quot; [19922,19923]" dest="&quot;: &quot; [65560,65561]"/>
  <match src="(: ( [21227,21228]" dest="(: ( [56957,56958]"/>
  <match src="): ) [92783,92784]" dest="): ) [31939,31940]"/>
  <match src="call_argument [20084,20090]" dest="call_argument [56276,56282]"/>
  <match src="parameter [4030,4037]" dest="parameter [4594,4601]"/>
  <match src="!=: != [19871,19873]" dest="!=: != [65501,65503]"/>
  <match src=",: , [100786,100787]" dest=",: , [39942,39943]"/>
  <match src="indexed: indexed [53476,53483]" dest="indexed: indexed [61350,61357]"/>
  <match src="identifier: newUniv2 [84335,84343]" dest="identifier: newBonded [62066,62075]"/>
  <match src="identifier: start [96234,96239]" dest="identifier: start [35390,35395]"/>
  <match src="pure: pure [45844,45848]" dest="pure: pure [15977,15981]"/>
  <match src="member_expression [101548,101563]" dest="member_expression [40704,40719]"/>
  <match src="primitive_type [88296,88303]" dest="primitive_type [29796,29803]"/>
  <match src="binary_expression [36533,36539]" dest="binary_expression [54927,54933]"/>
  <match src="parameter [16990,17004]" dest="parameter [59735,59749]"/>
  <match src="{: { [100249,100250]" dest="{: { [39405,39406]"/>
  <match src="identifier: totalBonded [82495,82506]" dest="identifier: totalBonded [72726,72737]"/>
  <match src="block_statement [36735,36798]" dest="block_statement [55129,55192]"/>
  <match src="{: { [103551,103552]" dest="{: { [42707,42708]"/>
  <match src="private: private [96143,96150]" dest="private: private [35299,35306]"/>
  <match src="identifier: GOVERNANCE_PERIOD [45770,45787]" dest="identifier: GOVERNANCE_PERIOD [15903,15920]"/>
  <match src="(: ( [48333,48334]" dest="(: ( [18466,18467]"/>
  <match src="(: ( [101420,101421]" dest="(: ( [40576,40577]"/>
  <match src="function: function [48210,48218]" dest="function: function [18343,18351]"/>
  <match src="returns: returns [96791,96798]" dest="returns: returns [35947,35954]"/>
  <match src="using: using [99361,99366]" dest="using: using [38517,38522]"/>
  <match src="primitive_type [98530,98537]" dest="primitive_type [37686,37693]"/>
  <match src="}: } [101698,101699]" dest="}: } [40854,40855]"/>
  <match src="constant: constant [44176,44184]" dest="constant: constant [14309,14317]"/>
  <match src="identifier: DAO_EXIT_LOCKUP_EPOCHS [46948,46970]" dest="identifier: DAO_EXIT_LOCKUP_EPOCHS [17081,17103]"/>
  <match src="function_definition [19684,20148]" dest="function_definition [65285,66001]"/>
  <match src="private: private [41359,41366]" dest="private: private [11492,11499]"/>
  <match src="identifier: amount0 [56182,56189]" dest="identifier: amount0 [24031,24038]"/>
  <match src="identifier: Transfer [101082,101090]" dest="identifier: Transfer [40238,40246]"/>
  <match src="call_argument [83505,83515]" dest="call_argument [73554,73564]"/>
  <match src="identifier: SafeMath [5579,5587]" dest="identifier: SafeMath [6143,6151]"/>
  <match src="type_name [75707,75714]" dest="type_name [83608,83615]"/>
  <match src="identifier: coupons [102155,102162]" dest="identifier: coupons [41311,41318]"/>
  <match src="): ) [93800,93801]" dest="): ) [32956,32957]"/>
  <match src="identifier: fluidUntil [95403,95413]" dest="identifier: fluidUntil [34559,34569]"/>
  <match src="external: external [84850,84858]" dest="external: external [83972,83980]"/>
  <match src="visibility [45835,45843]" dest="visibility [15968,15976]"/>
  <match src="&gt;: &gt; [95107,95108]" dest="&gt;: &gt; [34263,34264]"/>
  <match src="identifier: _state [101331,101337]" dest="identifier: _state [40487,40493]"/>
  <match src="call_expression [96191,96274]" dest="call_expression [35347,35430]"/>
  <match src="identifier: balance [101259,101266]" dest="identifier: balance [40415,40422]"/>
  <match src="type_name [98246,98250]" dest="type_name [37402,37406]"/>
  <match src="(: ( [30875,30876]" dest="(: ( [49269,49270]"/>
  <match src="comment: //  [44539,44542]" dest="comment: //  [14672,14675]"/>
  <match src=".: . [73232,73233]" dest=".: . [59231,59232]"/>
  <match src="visibility [54928,54936]" dest="visibility [22777,22785]"/>
  <match src="state_variable_declaration [43941,43994]" dest="state_variable_declaration [14074,14127]"/>
  <match src="identifier: _state [104058,104064]" dest="identifier: _state [43214,43220]"/>
  <match src=".: . [84168,84169]" dest=".: . [81083,81084]"/>
  <match src="}: } [5938,5939]" dest="}: } [6502,6503]"/>
  <match src="return: return [8085,8091]" dest="return: return [8649,8655]"/>
  <match src="identifier: allowance [12319,12328]" dest="identifier: allowance [25308,25317]"/>
  <match src="member_expression [97593,97610]" dest="member_expression [36749,36766]"/>
  <match src="primitive_type [43319,43326]" dest="primitive_type [13452,13459]"/>
  <match src="(: ( [7186,7187]" dest="(: ( [7750,7751]"/>
  <match src="if: if [31583,31585]" dest="if: if [49977,49979]"/>
  <match src="parameter [97100,97107]" dest="parameter [36256,36263]"/>
  <match src="uint256: uint256 [53022,53029]" dest="uint256: uint256 [56373,56380]"/>
  <match src="uint256: uint256 [65863,65870]" dest="uint256: uint256 [79023,79030]"/>
  <match src="(: ( [31876,31877]" dest="(: ( [50270,50271]"/>
  <match src="type_name [68738,68745]" dest="type_name [63788,63795]"/>
  <match src="identifier: b [2636,2637]" dest="identifier: b [3200,3201]"/>
  <match src="): ) [78127,78128]" dest="): ) [61830,61831]"/>
  <match src="visibility [82997,83005]" dest="visibility [73150,73158]"/>
  <match src="comment: // ============ Constants ============ [27343,27381]" dest="comment: // ============ Constants ============ [45737,45775]"/>
  <match src="number_literal: 0 [33412,33413]" dest="number_literal: 0 [51806,51807]"/>
  <match src="identifier: add [103492,103495]" dest="identifier: add [42648,42651]"/>
  <match src="): ) [63918,63919]" dest="): ) [28706,28707]"/>
  <match src="revert: revert [30897,30903]" dest="revert: revert [49291,49297]"/>
  <match src="comment: // 24 epochs = 4 days [42459,42480]" dest="comment: // 24 epochs = 4 days [12592,12613]"/>
  <match src="(: ( [103984,103985]" dest="(: ( [43140,43141]"/>
  <match src=".: . [102674,102675]" dest=".: . [41830,41831]"/>
  <match src="(: ( [107170,107171]" dest="(: ( [70512,70513]"/>
  <match src="address: address [56319,56326]" dest="address: address [24168,24175]"/>
  <match src="identifier: that [66260,66264]" dest="identifier: that [82312,82316]"/>
  <match src="uint: uint [55939,55943]" dest="uint: uint [23788,23792]"/>
  <match src="type_name [27541,27547]" dest="type_name [45935,45941]"/>
  <match src="(: ( [4616,4617]" dest="(: ( [5180,5181]"/>
  <match src=".: . [11041,11042]" dest=".: . [65739,65740]"/>
  <match src=",: , [7267,7268]" dest=",: , [7831,7832]"/>
  <match src="type_alias [92510,92518]" dest="type_alias [31666,31674]"/>
  <match src="}: } [7585,7586]" dest="}: } [8149,8150]"/>
  <match src="identifier: outstanding [102632,102643]" dest="identifier: outstanding [41788,41799]"/>
  <match src="comment: // for more details about how this works. [86943,86984]" dest="comment: // for more details about how this works. [75453,75494]"/>
  <match src="uint256: uint256 [23081,23088]" dest="uint256: uint256 [20062,20069]"/>
  <match src="unary_expression [30189,30194]" dest="unary_expression [48583,48588]"/>
  <match src="identifier: result [34927,34933]" dest="identifier: result [53321,53327]"/>
  <match src="member_expression [101009,101030]" dest="member_expression [40165,40186]"/>
  <match src="type_name [96915,96922]" dest="type_name [36071,36078]"/>
  <match src="return_statement [4748,4761]" dest="return_statement [5312,5325]"/>
  <match src="identifier: amount [13088,13094]" dest="identifier: amount [26077,26083]"/>
  <match src="member_expression [83278,83288]" dest="member_expression [80001,80011]"/>
  <match src="): ) [9945,9946]" dest="): ) [10509,10510]"/>
  <match src="uint256: uint256 [1228,1235]" dest="uint256: uint256 [1792,1799]"/>
  <match src="address: address [91016,91023]" dest="address: address [77326,77333]"/>
  <match src="(: ( [56223,56224]" dest="(: ( [24072,24073]"/>
  <match src="function_body [29590,30006]" dest="function_body [47984,48400]"/>
  <match src="struct_member [89241,89284]" dest="struct_member [30741,30784]"/>
  <match src="expression_statement [104876,104972]" dest="expression_statement [44032,44128]"/>
  <match src=",: , [58640,58641]" dest=",: , [74115,74116]"/>
  <match src="comment: // Friday, Saturday, February 13, 2021 1:00:00 PM GMT  [42262,42316]" dest="comment: // Friday, Saturday, February 13, 2021 1:00:00 PM GMT  [12395,12449]"/>
  <match src="identifier: sender [53208,53214]" dest="identifier: sender [65853,65859]"/>
  <match src="identifier: compareTo [9010,9019]" dest="identifier: compareTo [9574,9583]"/>
  <match src="}: } [42136,42137]" dest="}: } [12269,12270]"/>
  <match src=",: , [31098,31099]" dest=",: , [49492,49493]"/>
  <match src="return_statement [93196,93225]" dest="return_statement [32352,32381]"/>
  <match src="returns: returns [9397,9404]" dest="returns: returns [9961,9968]"/>
  <match src="return_type_definition [55010,55024]" dest="return_type_definition [22859,22873]"/>
  <match src="function_body [103438,103505]" dest="function_body [42594,42661]"/>
  <match src="primitive_type [43065,43072]" dest="primitive_type [13198,13205]"/>
  <match src="identifier: c [391,392]" dest="identifier: c [955,956]"/>
  <match src="primitive_type [90785,90792]" dest="primitive_type [77095,77102]"/>
  <match src="identifier: Getters [92481,92488]" dest="identifier: Getters [31637,31644]"/>
  <match src=",: , [28523,28524]" dest=",: , [46917,46918]"/>
  <match src="identifier: sender [82710,82716]" dest="identifier: sender [73434,73440]"/>
  <match src="=: = [1991,1992]" dest="=: = [2555,2556]"/>
  <match src="string [426,455]" dest="string [990,1019]"/>
  <match src="return: return [93330,93336]" dest="return: return [32486,32492]"/>
  <match src="identifier: Constants [95914,95923]" dest="identifier: Constants [35070,35079]"/>
  <match src="returns: returns [55807,55814]" dest="returns: returns [23656,23663]"/>
  <match src="call_argument [19977,19983]" dest="call_argument [57393,57399]"/>
  <match src="type_name [8476,8480]" dest="type_name [9040,9044]"/>
  <match src="identifier: getDaoAddress [48415,48428]" dest="identifier: getDaoAddress [18548,18561]"/>
  <match src="address: address [54617,54624]" dest="address: address [22466,22473]"/>
  <match src="(: ( [93799,93800]" dest="(: ( [32955,32956]"/>
  <match src="visibility [94221,94227]" dest="visibility [33377,33383]"/>
  <match src="function_body [45753,45794]" dest="function_body [15886,15927]"/>
  <match src="visibility [103210,103218]" dest="visibility [42366,42374]"/>
  <match src="member_expression [104915,104932]" dest="member_expression [44071,44088]"/>
  <match src="state_variable_declaration [43140,43204]" dest="state_variable_declaration [13273,13337]"/>
  <match src="}: } [32745,32746]" dest="}: } [51139,51140]"/>
  <match src="primitive_type [100868,100875]" dest="primitive_type [40024,40031]"/>
  <match src="): ) [30563,30564]" dest="): ) [48957,48958]"/>
  <match src="parameter [97420,97434]" dest="parameter [36576,36590]"/>
  <match src="}: } [34669,34670]" dest="}: } [53063,53064]"/>
  <match src="binary_expression [10091,10109]" dest="binary_expression [10655,10673]"/>
  <match src="member_expression [100750,100775]" dest="member_expression [39906,39931]"/>
  <match src="): ) [28195,28196]" dest="): ) [46589,46590]"/>
  <match src="bytes32: bytes32 [30737,30744]" dest="bytes32: bytes32 [49131,49138]"/>
  <match src="}: } [81736,81737]" dest="}: } [72234,72235]"/>
  <match src="identifier: must [28970,28974]" dest="identifier: must [47364,47368]"/>
  <match src="): ) [105577,105578]" dest="): ) [44733,44734]"/>
  <match src="address: address [44591,44598]" dest="address: address [14724,14731]"/>
  <match src="primitive_type [42669,42676]" dest="primitive_type [12802,12809]"/>
  <match src="?: ? [82549,82550]" dest="?: ? [72745,72746]"/>
  <match src="bytes: bytes [34141,34146]" dest="bytes: bytes [52535,52540]"/>
  <match src="type_name [7657,7664]" dest="type_name [8221,8228]"/>
  <match src="identifier: LPAREN [29852,29858]" dest="identifier: LPAREN [48246,48252]"/>
  <match src="modifier_invocation [81536,81545]" dest="modifier_invocation [72038,72068]"/>
  <match src="identifier: newClaimable [83801,83813]" dest="identifier: staged [73663,73669]"/>
  <match src="{: { [42059,42060]" dest="{: { [12192,12193]"/>
  <match src="identifier: IERC20 [51762,51768]" dest="identifier: IERC20 [27698,27704]"/>
  <match src="function: function [5945,5953]" dest="function: function [6509,6517]"/>
  <match src="identifier: value [6036,6041]" dest="identifier: value [6600,6605]"/>
  <match src="}: } [44821,44822]" dest="}: } [14954,14955]"/>
  <match src="visibility [34728,34735]" dest="visibility [53122,53129]"/>
  <match src="&quot;: &quot; [91215,91216]" dest="&quot;: &quot; [77525,77526]"/>
  <match src="=: = [27652,27653]" dest="=: = [46046,46047]"/>
  <match src="string_literal [65528,65536]" dest="string_literal [60840,60848]"/>
  <match src="identifier: sender [82376,82382]" dest="identifier: sender [73212,73218]"/>
  <match src="(: ( [54502,54503]" dest="(: ( [22351,22352]"/>
  <match src="identifier: spender [12352,12359]" dest="identifier: spender [25341,25348]"/>
  <match src="identifier: value [54127,54132]" dest="identifier: value [21976,21981]"/>
  <match src=".: . [83028,83029]" dest=".: . [72598,72599]"/>
  <match src="visibility [1267,1275]" dest="visibility [1831,1839]"/>
  <match src="user_defined_type [108032,108037]" dest="user_defined_type [83541,83546]"/>
  <match src="string [2639,2667]" dest="string [3203,3231]"/>
  <match src="[: [ [95680,95681]" dest="[: [ [34836,34837]"/>
  <match src="identifier: candidates [105275,105285]" dest="identifier: candidates [44431,44441]"/>
  <match src="string: string [92770,92776]" dest="string: string [31926,31932]"/>
  <match src="identifier: FILE [107022,107026]" dest="identifier: FILE [70364,70368]"/>
  <match src="bytes32: bytes32 [91669,91676]" dest="bytes32: bytes32 [77979,77986]"/>
  <match src=".: . [101023,101024]" dest=".: . [40179,40180]"/>
  <match src="number_literal: 32 [36172,36174]" dest="number_literal: 32 [54566,54568]"/>
  <match src="function: function [9046,9054]" dest="function: function [9610,9618]"/>
  <match src="returns: returns [97091,97098]" dest="returns: returns [36247,36254]"/>
  <match src="assignment_expression [101009,101066]" dest="assignment_expression [40165,40222]"/>
  <match src="member_expression [95261,95275]" dest="member_expression [34417,34431]"/>
  <match src="identifier: self [8535,8539]" dest="identifier: self [9099,9103]"/>
  <match src="struct_member [88425,88444]" dest="struct_member [29925,29944]"/>
  <match src="call_argument [32363,32368]" dest="call_argument [50757,50762]"/>
  <match src="address: address [102403,102410]" dest="address: address [41559,41566]"/>
  <match src="identifier: account [102104,102111]" dest="identifier: account [41260,41267]"/>
  <match src="(: ( [45971,45972]" dest="(: ( [16104,16105]"/>
  <match src="}: } [97159,97160]" dest="}: } [36315,36316]"/>
  <match src="): ) [108426,108427]" dest="): ) [56185,56186]"/>
  <match src="): ) [32156,32157]" dest="): ) [50550,50551]"/>
  <match src="call_expression [107171,107187]" dest="call_expression [70513,70529]"/>
  <match src="type_name [330,337]" dest="type_name [894,901]"/>
  <match src="?: ? [95235,95236]" dest="?: ? [34391,34392]"/>
  <match src="): ) [45485,45486]" dest="): ) [15618,15619]"/>
  <match src="function_definition [31995,32752]" dest="function_definition [50389,51146]"/>
  <match src="expression_statement [101548,101626]" dest="expression_statement [40704,40782]"/>
  <match src="call_argument [100456,100462]" dest="call_argument [39612,39618]"/>
  <match src="}: } [45552,45553]" dest="}: } [15685,15686]"/>
  <match src="uint256: uint256 [102435,102442]" dest="uint256: uint256 [41591,41598]"/>
  <match src="identifier: b [6687,6688]" dest="identifier: b [7251,7252]"/>
  <match src="visibility [93595,93601]" dest="visibility [32751,32757]"/>
  <match src="state_mutability [95026,95030]" dest="state_mutability [34182,34186]"/>
  <match src="parameter [8421,8434]" dest="parameter [8985,8998]"/>
  <match src="): ) [31326,31327]" dest="): ) [49720,49721]"/>
  <match src="identifier: spender [22115,22122]" dest="identifier: spender [65256,65263]"/>
  <match src="): ) [55597,55598]" dest="): ) [23446,23447]"/>
  <match src="state_variable_declaration [42970,43023]" dest="state_variable_declaration [13103,13156]"/>
  <match src="{: { [100910,100911]" dest="{: { [40066,40067]"/>
  <match src="{: { [47296,47297]" dest="{: { [17429,17430]"/>
  <match src="function_definition [46231,46385]" dest="function_definition [16364,16518]"/>
  <match src="call_expression [31232,31251]" dest="call_expression [49626,49645]"/>
  <match src="identifier: lessThanOrEqualTo [9332,9349]" dest="identifier: lessThanOrEqualTo [9896,9913]"/>
  <match src="identifier: blockTimestampLast [55859,55877]" dest="identifier: blockTimestampLast [23708,23726]"/>
  <match src="{: { [47731,47732]" dest="{: { [17864,17865]"/>
  <match src="member_expression [104710,104750]" dest="member_expression [43866,43906]"/>
  <match src="=: = [68229,68230]" dest="=: = [68047,68048]"/>
  <match src="comment: // 10,000 DAI [41891,41904]" dest="comment: // 10,000 DAI [12024,12037]"/>
  <match src="comment: /**      * @dev Emitted when the allowance of a `spender` for an `owner` is set by      * a call to {approve}. `value` is the new allowance.      */ [13771,13919]" dest="comment: /**      * @dev Emitted when the allowance of a `spender` for an `owner` is set by      * a call to {approve}. `value` is the new allowance.      */ [26760,26908]"/>
  <match src="identifier: encodeWithSignature [91182,91201]" dest="identifier: encodeWithSignature [77492,77511]"/>
  <match src=",: , [50059,50060]" dest=",: , [56451,56452]"/>
  <match src="binary_expression [36863,36890]" dest="binary_expression [55257,55284]"/>
  <match src="member_expression [50682,50694]" dest="member_expression [63932,63944]"/>
  <match src="member_expression [102191,102204]" dest="member_expression [41347,41360]"/>
  <match src="identifier: D256 [7787,7791]" dest="identifier: D256 [8351,8355]"/>
  <match src="type_name [55126,55133]" dest="type_name [22975,22982]"/>
  <match src="using: using [72280,72285]" dest="using: using [56019,56024]"/>
  <match src="uint256: uint256 [36241,36248]" dest="uint256: uint256 [54635,54642]"/>
  <match src="type_name [54503,54507]" dest="type_name [22352,22356]"/>
  <match src="identifier: value [46024,46029]" dest="identifier: value [16157,16162]"/>
  <match src="identifier: amount [16998,17004]" dest="identifier: amount [59743,59749]"/>
  <match src="public: public [93041,93047]" dest="public: public [32197,32203]"/>
  <match src="expression_statement [4709,4739]" dest="expression_statement [5273,5303]"/>
  <match src="identifier: value [6581,6586]" dest="identifier: value [7145,7150]"/>
  <match src="identifier: balance [100125,100132]" dest="identifier: balance [39281,39288]"/>
  <match src="function: function [95294,95302]" dest="function: function [34450,34458]"/>
  <match src="(: ( [68285,68286]" dest="(: ( [68063,68064]"/>
  <match src="view: view [96948,96952]" dest="view: view [36104,36108]"/>
  <match src="): ) [46775,46776]" dest="): ) [16908,16909]"/>
  <match src="call_argument [7573,7574]" dest="call_argument [8137,8138]"/>
  <match src="identifier: i [33301,33302]" dest="identifier: i [51695,51696]"/>
  <match src="}: } [10143,10144]" dest="}: } [10707,10708]"/>
  <match src="member_expression [103471,103483]" dest="member_expression [42627,42639]"/>
  <match src="): ) [36376,36377]" dest="): ) [54770,54771]"/>
  <match src="): ) [371,372]" dest="): ) [935,936]"/>
  <match src="array_access [103229,103251]" dest="array_access [42385,42407]"/>
  <match src="member_expression [46330,46342]" dest="member_expression [16463,16475]"/>
  <match src="call_argument [83461,83466]" dest="call_argument [73995,74000]"/>
  <match src="identifier: sender [19711,19717]" dest="identifier: sender [65318,65324]"/>
  <match src="primitive_type [7277,7284]" dest="primitive_type [7841,7848]"/>
  <match src="identifier: incrementBalanceOf [100849,100867]" dest="identifier: incrementBalanceOf [40005,40023]"/>
  <match src="primitive_type [71073,71080]" dest="primitive_type [71652,71659]"/>
  <match src="primitive_type [1290,1297]" dest="primitive_type [1854,1861]"/>
  <match src="identifier: candidate [105286,105295]" dest="identifier: candidate [44442,44451]"/>
  <match src="number_literal: 0 [19799,19800]" dest="number_literal: 0 [65421,65422]"/>
  <match src="(: ( [102347,102348]" dest="(: ( [41503,41504]"/>
  <match src="type_name [88221,88228]" dest="type_name [29721,29728]"/>
  <match src="parameter [7813,7826]" dest="parameter [8377,8390]"/>
  <match src="identifier: owner [95594,95599]" dest="identifier: owner [34750,34755]"/>
  <match src="primitive_type [102021,102028]" dest="primitive_type [41177,41184]"/>
  <match src="uint8: uint8 [35063,35068]" dest="uint8: uint8 [53457,53462]"/>
  <match src="): ) [7682,7683]" dest="): ) [8246,8247]"/>
  <match src="uint256: uint256 [319,326]" dest="uint256: uint256 [883,890]"/>
  <match src="(: ( [63822,63823]" dest="(: ( [28610,28611]"/>
  <match src=":: : [48058,48059]" dest=":: : [18191,18192]"/>
  <match src="): ) [53166,53167]" dest="): ) [65811,65812]"/>
  <match src="assignment_expression [105066,105151]" dest="assignment_expression [44222,44307]"/>
  <match src="identifier: balanceOf [85084,85093]" dest="identifier: mint [59484,59488]"/>
  <match src=",: , [56239,56240]" dest=",: , [24088,24089]"/>
  <match src="(: ( [8930,8931]" dest="(: ( [9494,9495]"/>
  <match src="uint256: uint256 [66988,66995]" dest="uint256: uint256 [80993,81000]"/>
  <match src="uint8: uint8 [36017,36022]" dest="uint8: uint8 [54411,54416]"/>
  <match src="type_name [42093,42100]" dest="type_name [12226,12233]"/>
  <match src=",: , [13748,13749]" dest=",: , [26737,26738]"/>
  <match src="comment: // 1.5% per epoch = 9% per day [43995,44025]" dest="comment: // 1.5% per epoch = 9% per day [14128,14158]"/>
  <match src=".: . [96854,96855]" dest=".: . [36010,36011]"/>
  <match src="member_expression [94440,94471]" dest="member_expression [33596,33627]"/>
  <match src="identifier: accounts [89275,89283]" dest="identifier: accounts [30775,30783]"/>
  <match src="memory: memory [48014,48020]" dest="memory: memory [18147,18153]"/>
  <match src="internal: internal [47978,47986]" dest="internal: internal [18111,18119]"/>
  <match src="primitive_type [104819,104826]" dest="primitive_type [43975,43982]"/>
  <match src="returns: returns [55996,56003]" dest="returns: returns [23845,23852]"/>
  <match src="return_statement [36749,36788]" dest="return_statement [55143,55182]"/>
  <match src="(: ( [101380,101381]" dest="(: ( [40536,40537]"/>
  <match src="identifier: amount [22490,22496]" dest="identifier: amount [19927,19933]"/>
  <match src="call_argument [85542,85551]" dest="call_argument [79430,79447]"/>
  <match src="identifier: that [50806,50810]" dest="identifier: that [63815,63819]"/>
  <match src="(: ( [44997,44998]" dest="(: ( [15130,15131]"/>
  <match src="identifier: oracle [93488,93494]" dest="identifier: oracle [32644,32650]"/>
  <match src="(: ( [92965,92966]" dest="(: ( [32121,32122]"/>
  <match src="unary_expression [53163,53165]" dest="unary_expression [65808,65810]"/>
  <match src="identifier: getPartial [6354,6364]" dest="identifier: getPartial [6918,6928]"/>
  <match src="identifier: TREASURY_ADDRESS [44572,44588]" dest="identifier: TREASURY_ADDRESS [14705,14721]"/>
  <match src=".: . [82922,82923]" dest=".: . [74184,74185]"/>
  <match src="binary_expression [106967,107002]" dest="binary_expression [70309,70344]"/>
  <match src="parameter [94828,94835]" dest="parameter [33984,33991]"/>
  <match src="call_expression [28007,28178]" dest="call_expression [46401,46572]"/>
  <match src="primitive_type [54548,54555]" dest="primitive_type [22397,22404]"/>
  <match src="primitive_type [92523,92530]" dest="primitive_type [31679,31686]"/>
  <match src="call_argument [83136,83155]" dest="call_argument [82122,82225]"/>
  <match src="{: { [46584,46585]" dest="{: { [16717,16718]"/>
  <match src="identifier: accounts [101820,101828]" dest="identifier: accounts [40976,40984]"/>
  <match src="identifier: require [21969,21976]" dest="identifier: require [65075,65082]"/>
  <match src=",: , [50043,50044]" dest=",: , [56436,56437]"/>
  <match src="comment: /**      * @dev Upgrades the proxy to a new implementation.      * @param newImplementation Address of the new implementation.      */ [90858,90992]" dest="comment: /**      * @dev Upgrades the proxy to a new implementation.      * @param newImplementation Address of the new implementation.      */ [77168,77302]"/>
  <match src="type_name [79644,79651]" dest="type_name [81783,81790]"/>
  <match src="uint256: uint256 [93062,93069]" dest="uint256: uint256 [32218,32225]"/>
  <match src="): ) [46311,46312]" dest="): ) [16444,16445]"/>
  <match src="member_expression [101234,101249]" dest="member_expression [40390,40405]"/>
  <match src="internal: internal [8649,8657]" dest="internal: internal [9213,9221]"/>
  <match src="state_mutability [790,794]" dest="state_mutability [1354,1358]"/>
  <match src="type_name [48554,48561]" dest="type_name [18687,18694]"/>
  <match src="call_argument [22498,22536]" dest="call_argument [71895,71916]"/>
  <match src="&quot;: &quot; [69373,69374]" dest="&quot;: &quot; [73603,73604]"/>
  <match src=",: , [838,839]" dest=",: , [1402,1403]"/>
  <match src="member_expression [6998,7012]" dest="member_expression [7562,7576]"/>
  <match src=",: , [101770,101771]" dest=",: , [40926,40927]"/>
  <match src="member_expression [102534,102549]" dest="member_expression [41690,41705]"/>
  <match src=".: . [101054,101055]" dest=".: . [40210,40211]"/>
  <match src="identifier: totalSupply [94276,94287]" dest="identifier: totalSupply [33432,33443]"/>
  <match src="type_name [42669,42676]" dest="type_name [12802,12809]"/>
  <match src="member_expression [104372,104407]" dest="member_expression [43528,43563]"/>
  <match src="expression_statement [81620,81664]" dest="expression_statement [72143,72187]"/>
  <match src="identifier: epochs [102916,102922]" dest="identifier: epochs [42072,42078]"/>
  <match src="user_defined_type [8949,8953]" dest="user_defined_type [9513,9517]"/>
  <match src="identifier: univ2 [81556,81561]" dest="identifier: ethic [72079,72084]"/>
  <match src="type_name [95352,95359]" dest="type_name [34508,34515]"/>
  <match src="return: return [96680,96686]" dest="return: return [35836,35842]"/>
  <match src="for: for [33127,33130]" dest="for: for [51521,51524]"/>
  <match src="parameter [31500,31514]" dest="parameter [49894,49908]"/>
  <match src="parameter [19703,19717]" dest="parameter [65310,65324]"/>
  <match src="): ) [96172,96173]" dest="): ) [35328,35329]"/>
  <match src="primitive_type [73437,73444]" dest="primitive_type [82539,82546]"/>
  <match src="struct: struct [88272,88278]" dest="struct: struct [29772,29778]"/>
  <match src="return_statement [92795,92822]" dest="return_statement [31951,31978]"/>
  <match src="type_name [94547,94554]" dest="type_name [33703,33710]"/>
  <match src="if: if [10087,10089]" dest="if: if [10651,10653]"/>
  <match src="identifier: b [9445,9446]" dest="identifier: b [10009,10010]"/>
  <match src="identifier: State [89407,89412]" dest="identifier: State [30907,30912]"/>
  <match src="identifier: Decimal [48001,48008]" dest="identifier: Decimal [18134,18141]"/>
  <match src="identifier: amount [105144,105150]" dest="identifier: amount [44300,44306]"/>
  <match src="(: ( [97099,97100]" dest="(: ( [36255,36256]"/>
  <match src="number_literal: 24 [42455,42457]" dest="number_literal: 24 [12588,12590]"/>
  <match src=".: . [10103,10104]" dest=".: . [10667,10668]"/>
  <match src="uint: uint [79121,79125]" dest="uint: uint [62919,62923]"/>
  <match src="expression_statement [104671,104759]" dest="expression_statement [43827,43915]"/>
  <match src="call_expression [6984,7036]" dest="call_expression [7548,7600]"/>
  <match src="): ) [45208,45209]" dest="): ) [15341,15342]"/>
  <match src=".: . [83508,83509]" dest=".: . [73557,73558]"/>
  <match src="number_literal: 1 [36007,36008]" dest="number_literal: 1 [54401,54402]"/>
  <match src="string: string [100369,100375]" dest="string: string [39525,39531]"/>
  <match src="&quot;: &quot; [65528,65529]" dest="&quot;: &quot; [60840,60841]"/>
  <match src="parameter [95447,95462]" dest="parameter [34603,34618]"/>
  <match src="(: ( [63871,63872]" dest="(: ( [28659,28660]"/>
  <match src="user_defined_type [8680,8684]" dest="user_defined_type [9244,9248]"/>
  <match src="): ) [86688,86689]" dest="): ) [75198,75199]"/>
  <match src="type_name [42116,42123]" dest="type_name [12249,12256]"/>
  <match src="type_name [54693,54700]" dest="type_name [22542,22549]"/>
  <match src="state_variable_declaration [44344,44437]" dest="state_variable_declaration [14477,14570]"/>
  <match src="bool: bool [88815,88819]" dest="bool: bool [30315,30319]"/>
  <match src="identifier: sub [7009,7012]" dest="identifier: sub [7573,7576]"/>
  <match src="return_statement [96021,96059]" dest="return_statement [35177,35215]"/>
  <match src="identifier: a [3211,3212]" dest="identifier: a [3775,3776]"/>
  <match src="call_argument [45051,45161]" dest="call_argument [15184,15294]"/>
  <match src="identifier: self [9492,9496]" dest="identifier: self [10056,10060]"/>
  <match src="identifier: PAIR_ADDRESS [48681,48693]" dest="identifier: PAIR_ADDRESS [18814,18826]"/>
  <match src="^:  ^ [15,17]" dest="^:  ^ [15,17]"/>
  <match src=".: . [102274,102275]" dest=".: . [41430,41431]"/>
  <match src="): ) [55135,55136]" dest="): ) [22984,22985]"/>
  <match src="call_argument [76600,76606]" dest="call_argument [56753,56759]"/>
  <match src="type_name [94509,94516]" dest="type_name [33665,33672]"/>
  <match src="call_argument [80872,80882]" dest="call_argument [64179,64189]"/>
  <match src="primitive_type [34940,34945]" dest="primitive_type [53334,53339]"/>
  <match src="identifier: newPhantomFromBonded [84476,84496]" dest="identifier: totalRedeemable [62149,62164]"/>
  <match src="identifier: FILE [85158,85162]" dest="identifier: FILE [59329,59333]"/>
  <match src="visibility [93802,93808]" dest="visibility [32958,32964]"/>
  <match src="function_body [95803,95847]" dest="function_body [34959,35003]"/>
  <match src="address: address [55646,55653]" dest="address: address [23495,23502]"/>
  <match src="identifier: sender [82923,82929]" dest="identifier: sender [74185,74191]"/>
  <match src="): ) [68227,68228]" dest="): ) [68045,68046]"/>
  <match src=",: , [45117,45118]" dest=",: , [15250,15251]"/>
  <match src="(: ( [54663,54664]" dest="(: ( [22512,22513]"/>
  <match src="pure: pure [10046,10050]" dest="pure: pure [10610,10614]"/>
  <match src="parameter [55756,55763]" dest="parameter [23605,23612]"/>
  <match src="struct_declaration [88865,88956]" dest="struct_declaration [30365,30456]"/>
  <match src="call_argument [29677,29957]" dest="call_argument [48071,48351]"/>
  <match src="): ) [101395,101396]" dest="): ) [40551,40552]"/>
  <match src="type_name [99755,99762]" dest="type_name [38911,38918]"/>
  <match src="call_argument [82074,82084]" dest="call_argument [73751,73761]"/>
  <match src="call_argument [20123,20132]" dest="call_argument [65969,65978]"/>
  <match src="internal: internal [45835,45843]" dest="internal: internal [15968,15976]"/>
  <match src="type_name [54981,54988]" dest="type_name [22830,22837]"/>
  <match src="primitive_type [45351,45358]" dest="primitive_type [15484,15491]"/>
  <match src="parameter [48261,48268]" dest="parameter [18394,18401]"/>
  <match src="uint256: uint256 [100518,100525]" dest="uint256: uint256 [39674,39681]"/>
  <match src="(: ( [105592,105593]" dest="(: ( [44748,44749]"/>
  <match src="function: function [56016,56024]" dest="function: function [23865,23873]"/>
  <match src="type_cast_expression [44486,44537]" dest="type_cast_expression [14619,14670]"/>
  <match src="parameter [2569,2578]" dest="parameter [3133,3142]"/>
  <match src="function_body [6012,6057]" dest="function_body [6576,6621]"/>
  <match src="private: private [23310,23317]" dest="private: private [59612,59619]"/>
  <match src="array_access [36000,36009]" dest="array_access [54394,54403]"/>
  <match src=".: . [105476,105477]" dest=".: . [44632,44633]"/>
  <match src="identifier: _state [98269,98275]" dest="identifier: _state [37425,37431]"/>
  <match src="identifier: GOVERNANCE_QUORUM [46031,46048]" dest="identifier: GOVERNANCE_QUORUM [16164,16181]"/>
  <match src="(: ( [9264,9265]" dest="(: ( [9828,9829]"/>
  <match src="state_mutability [2589,2593]" dest="state_mutability [3153,3157]"/>
  <match src="): ) [31939,31940]" dest="): ) [50333,50334]"/>
  <match src="{: { [7620,7621]" dest="{: { [8184,8185]"/>
  <match src="binary_expression [1930,1936]" dest="binary_expression [2494,2500]"/>
  <match src="identifier: account [76138,76145]" dest="identifier: account [84313,84320]"/>
  <match src="): ) [81806,81807]" dest="): ) [73187,73188]"/>
  <match src="member_expression [103035,103074]" dest="member_expression [42191,42230]"/>
  <match src="call_expression [79094,79101]" dest="call_expression [58870,58877]"/>
  <match src="identifier: D256 [8092,8096]" dest="identifier: D256 [8656,8660]"/>
  <match src="type_cast_expression [44385,44436]" dest="type_cast_expression [14518,14569]"/>
  <match src="primitive_type [25705,25712]" dest="primitive_type [61132,61139]"/>
  <match src="identifier: reason [100091,100097]" dest="identifier: reason [39247,39253]"/>
  <match src="uint256: uint256 [94792,94799]" dest="uint256: uint256 [33948,33955]"/>
  <match src="{: { [105616,105617]" dest="{: { [44772,44773]"/>
  <match src="identifier: EPOCH_START [45106,45117]" dest="identifier: EPOCH_START [15239,15250]"/>
  <match src="primitive_type [54097,54104]" dest="primitive_type [21946,21953]"/>
  <match src="identifier: must [31464,31468]" dest="identifier: must [49858,49862]"/>
  <match src="(: ( [103139,103140]" dest="(: ( [42295,42296]"/>
  <match src="identifier: length [34171,34177]" dest="identifier: length [52565,52571]"/>
  <match src="identifier: mul [94696,94699]" dest="identifier: mul [33852,33855]"/>
  <match src="identifier: couponAllowances [103315,103331]" dest="identifier: couponAllowances [42471,42487]"/>
  <match src="uint: uint [56224,56228]" dest="uint: uint [24073,24077]"/>
  <match src="call_expression [81674,81688]" dest="call_expression [57443,57457]"/>
  <match src="identifier: D256 [6950,6954]" dest="identifier: D256 [7514,7518]"/>
  <match src="): ) [46267,46268]" dest="): ) [16400,16401]"/>
  <match src="binary_expression [4717,4723]" dest="binary_expression [5281,5287]"/>
  <match src="number_literal: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc [90560,90626]" dest="number_literal: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc [76870,76936]"/>
  <match src="view: view [96786,96790]" dest="view: view [35942,35946]"/>
  <match src="type_name [81431,81438]" dest="type_name [83745,83752]"/>
  <match src="returns: returns [16050,16057]" dest="returns: returns [19851,19858]"/>
  <match src="parameter [3996,4005]" dest="parameter [4560,4569]"/>
  <match src="event_paramater [55163,55185]" dest="event_paramater [23012,23034]"/>
  <match src="primitive_type [44591,44598]" dest="primitive_type [14724,14731]"/>
  <match src="member_expression [105534,105557]" dest="member_expression [44690,44713]"/>
  <match src="identifier: Status [106730,106736]" dest="identifier: Status [70072,70078]"/>
  <match src="primitive_type [11976,11983]" dest="primitive_type [24965,24972]"/>
  <match src="identifier: i [33140,33141]" dest="identifier: i [51534,51535]"/>
  <match src="): ) [7291,7292]" dest="): ) [7855,7856]"/>
  <match src="uint256: uint256 [13987,13994]" dest="uint256: uint256 [26976,26983]"/>
  <match src="view: view [97685,97689]" dest="view: view [36841,36845]"/>
  <match src="identifier: Require [106675,106682]" dest="identifier: Require [70017,70024]"/>
  <match src="visibility [76444,76452]" dest="visibility [57087,57095]"/>
  <match src="primitive_type [13518,13522]" dest="primitive_type [26507,26511]"/>
  <match src="}: } [97766,97767]" dest="}: } [36922,36923]"/>
  <match src="function: function [45175,45183]" dest="function: function [15308,15316]"/>
  <match src="call_expression [104355,104362]" dest="call_expression [43511,43518]"/>
  <match src="function_definition [46063,46225]" dest="function_definition [16196,16358]"/>
  <match src="struct_member [88045,88060]" dest="struct_member [29545,29560]"/>
  <match src="function_body [99951,100025]" dest="function_body [39107,39181]"/>
  <match src="call_expression [82884,82898]" dest="call_expression [57022,57036]"/>
  <match src="identifier: add [83786,83789]" dest="identifier: add [73648,73651]"/>
  <match src="return_type_definition [47162,47179]" dest="return_type_definition [17295,17312]"/>
  <match src="return_type_definition [8671,8692]" dest="return_type_definition [9235,9256]"/>
  <match src="): ) [54327,54328]" dest="): ) [22176,22177]"/>
  <match src="returns: returns [94405,94412]" dest="returns: returns [33561,33568]"/>
  <match src="]: ] [94463,94464]" dest="]: ] [33619,33620]"/>
  <match src="parameter [16219,16226]" dest="parameter [58810,58817]"/>
  <match src="identifier: value [8319,8324]" dest="identifier: value [8883,8888]"/>
  <match src=",: , [99788,99789]" dest=",: , [38944,38945]"/>
  <match src="constant: constant [42584,42592]" dest="constant: constant [12717,12725]"/>
  <match src="identifier: spender [54113,54120]" dest="identifier: spender [21962,21969]"/>
  <match src="assignment_expression [36391,36401]" dest="assignment_expression [54785,54795]"/>
  <match src="visibility [42778,42785]" dest="visibility [12911,12918]"/>
  <match src="function: function [48504,48512]" dest="function: function [18637,18645]"/>
  <match src="address: address [64691,64698]" dest="address: address [79257,79264]"/>
  <match src="identifier: input [33992,33997]" dest="identifier: input [52386,52391]"/>
  <match src="identifier: Upgradeable [90267,90278]" dest="identifier: Upgradeable [76577,76588]"/>
  <match src="type_name [79136,79140]" dest="type_name [62968,62972]"/>
  <match src="binary_expression [74693,74719]" dest="binary_expression [62936,62957]"/>
  <match src="variable_declaration_statement [103910,103973]" dest="variable_declaration_statement [43066,43129]"/>
  <match src="identifier: _state [105268,105274]" dest="identifier: _state [44424,44430]"/>
  <match src="string: string [105227,105233]" dest="string: string [44383,44389]"/>
  <match src="identifier: Require [84161,84168]" dest="identifier: Require [81076,81083]"/>
  <match src="address: address [41717,41724]" dest="address: address [11850,11857]"/>
  <match src="primitive_type [48655,48662]" dest="primitive_type [18788,18795]"/>
  <match src="expression_statement [81674,81689]" dest="expression_statement [57443,57458]"/>
  <match src="if_statement [36719,36798]" dest="if_statement [55113,55192]"/>
  <match src="type_alias [65465,65472]" dest="type_alias [66767,66774]"/>
  <match src="): ) [6741,6742]" dest="): ) [7305,7306]"/>
  <match src="): ) [55731,55732]" dest="): ) [23580,23581]"/>
  <match src="primitive_type [30761,30768]" dest="primitive_type [49155,49162]"/>
  <match src="parameter [32901,32913]" dest="parameter [51295,51307]"/>
  <match src="identifier: i [33148,33149]" dest="identifier: i [51542,51543]"/>
  <match src="): ) [56092,56093]" dest="): ) [23941,23942]"/>
  <match src="bytes: bytes [32976,32981]" dest="bytes: bytes [51370,51375]"/>
  <match src="call_argument [30304,30328]" dest="call_argument [48698,48722]"/>
  <match src="=: = [100579,100580]" dest="=: = [39735,39736]"/>
  <match src="type_name [63872,63884]" dest="type_name [28660,28672]"/>
  <match src="identifier: sub [101302,101305]" dest="identifier: sub [40458,40461]"/>
  <match src="member_expression [103292,103331]" dest="member_expression [42448,42487]"/>
  <match src="user_defined_type [7328,7332]" dest="user_defined_type [7892,7896]"/>
  <match src="variable_declaration [35199,35208]" dest="variable_declaration [53593,53602]"/>
  <match src="{: { [102078,102079]" dest="{: { [41234,41235]"/>
  <match src="array_access [102234,102254]" dest="array_access [41390,41410]"/>
  <match src=",: , [104281,104282]" dest=",: , [43437,43438]"/>
  <match src="identifier: getCouponRedemptionPenaltyDecay [47665,47696]" dest="identifier: getCouponRedemptionPenaltyDecay [17798,17829]"/>
  <match src="uint256: uint256 [11578,11585]" dest="uint256: uint256 [24567,24574]"/>
  <match src="identifier: eliminateOutstandingCoupons [103848,103875]" dest="identifier: eliminateOutstandingCoupons [43004,43031]"/>
  <match src="is: is [90279,90281]" dest="is: is [76589,76591]"/>
  <match src="assignment_expression [100410,100471]" dest="assignment_expression [39566,39627]"/>
  <match src="type_name [74373,74380]" dest="type_name [67941,67948]"/>
  <match src=".: . [98434,98435]" dest=".: . [37590,37591]"/>
  <match src="): ) [92850,92851]" dest="): ) [32006,32007]"/>
  <match src="number_literal: 0 [101099,101100]" dest="number_literal: 0 [40255,40256]"/>
  <match src="identifier: this [81597,81601]" dest="identifier: this [72120,72124]"/>
  <match src="&gt;&gt;: &gt;&gt; [36535,36537]" dest="&gt;&gt;: &gt;&gt; [54929,54931]"/>
  <match src="number_literal: 1 [57332,57333]" dest="number_literal: 1 [81236,81237]"/>
  <match src="array_access [95188,95223]" dest="array_access [34344,34379]"/>
  <match src="identifier: balance [100266,100273]" dest="identifier: balance [39422,39429]"/>
  <match src="parameter [101772,101792]" dest="parameter [40928,40948]"/>
  <match src="): ) [82226,82227]" dest="): ) [73828,73829]"/>
  <match src="primitive_type [34007,34014]" dest="primitive_type [52401,52408]"/>
  <match src="function_body [96174,96315]" dest="function_body [35330,35471]"/>
  <match src="return_statement [1376,1385]" dest="return_statement [1940,1949]"/>
  <match src="(: ( [85101,85102]" dest="(: ( [59496,59497]"/>
  <match src="(: ( [29020,29021]" dest="(: ( [47414,47415]"/>
  <match src="call_argument [30991,31015]" dest="call_argument [49385,49409]"/>
  <match src="return: return [4049,4055]" dest="return: return [4613,4619]"/>
  <match src=",: , [105209,105210]" dest=",: , [44365,44366]"/>
  <match src=",: , [54632,54633]" dest=",: , [22481,22482]"/>
  <match src="}: } [93572,93573]" dest="}: } [32728,32729]"/>
  <match src=".: . [95076,95077]" dest=".: . [34232,34233]"/>
  <match src="): ) [55943,55944]" dest="): ) [23792,23793]"/>
  <match src="array_access [97453,97496]" dest="array_access [36609,36652]"/>
  <match src="if_statement [74435,74570]" dest="if_statement [68488,68645]"/>
  <match src="): ) [100998,100999]" dest="): ) [40154,40155]"/>
  <match src="primitive_type [98506,98513]" dest="primitive_type [37662,37669]"/>
  <match src="call_argument [19882,19883]" dest="call_argument [65512,65513]"/>
  <match src="identifier: result [32989,32995]" dest="identifier: result [51383,51389]"/>
  <match src="): ) [105737,105738]" dest="): ) [44893,44894]"/>
  <match src="user_defined_type [88794,88798]" dest="user_defined_type [30294,30298]"/>
  <match src="expression_statement [22048,22085]" dest="expression_statement [65162,65214]"/>
  <match src="number_literal: 1 [10132,10133]" dest="number_literal: 1 [10696,10697]"/>
  <match src="identifier: r [55123,55124]" dest="identifier: r [22972,22973]"/>
  <match src="struct_member [88531,88547]" dest="struct_member [30031,30047]"/>
  <match src="type_cast_expression [19791,19801]" dest="type_cast_expression [65413,65423]"/>
  <match src="): ) [7719,7720]" dest="): ) [8283,8284]"/>
  <match src="identifier: BOOTSTRAPPING_PERIOD [41461,41481]" dest="identifier: BOOTSTRAPPING_PERIOD [11594,11614]"/>
  <match src="primitive_type [88343,88350]" dest="primitive_type [29843,29850]"/>
  <match src="view: view [97213,97217]" dest="view: view [36369,36373]"/>
  <match src="return_statement [94261,94307]" dest="return_statement [33417,33463]"/>
  <match src="}: } [105157,105158]" dest="}: } [44313,44314]"/>
  <match src="visibility [9609,9617]" dest="visibility [10173,10181]"/>
  <match src="expression_statement [106675,106807]" dest="expression_statement [70017,70149]"/>
  <match src="internal: internal [47699,47707]" dest="internal: internal [17832,17840]"/>
  <match src="state_mutability [6288,6292]" dest="state_mutability [6852,6856]"/>
  <match src="identifier: value [8759,8764]" dest="identifier: value [9323,9328]"/>
  <match src="identifier: account [106976,106983]" dest="identifier: account [70318,70325]"/>
  <match src="primitive_type [1689,1696]" dest="primitive_type [2253,2260]"/>
  <match src="returns: returns [55637,55644]" dest="returns: returns [23486,23493]"/>
  <match src="(: ( [51788,51789]" dest="(: ( [27724,27725]"/>
  <match src="identifier: value [48053,48058]" dest="identifier: value [18186,18191]"/>
  <match src="return_type_definition [4021,4038]" dest="return_type_definition [4585,4602]"/>
  <match src="primitive_type [54253,54259]" dest="primitive_type [22102,22108]"/>
  <match src="identifier: balanceOfRewarded [84187,84204]" dest="identifier: balanceOf [79373,79382]"/>
  <match src="identifier: accounts [95518,95526]" dest="identifier: accounts [34674,34682]"/>
  <match src="user_defined_type [7868,7872]" dest="user_defined_type [8432,8436]"/>
  <match src="visibility [68721,68728]" dest="visibility [84338,84345]"/>
  <match src="assembly_statement [98574,98626]" dest="assembly_statement [37730,37782]"/>
  <match src="event_paramater [13939,13960]" dest="event_paramater [26928,26949]"/>
  <match src="}: } [5771,5772]" dest="}: } [6335,6336]"/>
  <match src="yul_identifier [33595,33601]" dest="yul_identifier [51989,51995]"/>
  <match src="member_expression [101659,101684]" dest="member_expression [40815,40840]"/>
  <match src="}: } [53360,53361]" dest="}: } [65930,65931]"/>
  <match src="string [50758,50777]" dest="string [56761,56805]"/>
  <match src="return_statement [96680,96727]" dest="return_statement [35836,35883]"/>
  <match src="call_expression [84412,84458]" dest="call_expression [81013,81065]"/>
  <match src="external: external [69095,69103]" dest="external: external [65056,65064]"/>
  <match src="call_argument [8547,8554]" dest="call_argument [9111,9118]"/>
  <match src="member_expression [97859,97895]" dest="member_expression [37015,37051]"/>
  <match src="string_literal [50987,50996]" dest="string_literal [65622,65659]"/>
  <match src="primitive_type [11995,12002]" dest="primitive_type [24984,24991]"/>
  <match src="[: [ [97487,97488]" dest="[: [ [36643,36644]"/>
  <match src="]: ] [104345,104346]" dest="]: ] [43501,43502]"/>
  <match src="call_argument [85524,85528]" dest="call_argument [79412,79416]"/>
  <match src="type_name [95314,95321]" dest="type_name [34470,34477]"/>
  <match src="indexed: indexed [81230,81237]" dest="indexed: indexed [71703,71710]"/>
  <match src="primitive_type [6679,6686]" dest="primitive_type [7243,7250]"/>
  <match src="): ) [82669,82670]" dest="): ) [72862,72863]"/>
  <match src="parameter [97380,97397]" dest="parameter [36536,36553]"/>
  <match src="): ) [56031,56032]" dest="): ) [23880,23881]"/>
  <match src="type_name [81191,81198]" dest="type_name [61385,61392]"/>
  <match src="call_expression [91228,91260]" dest="call_expression [77538,77570]"/>
  <match src="primitive_type [88987,88994]" dest="primitive_type [30487,30494]"/>
  <match src="identifier: staged [101607,101613]" dest="identifier: staged [40763,40769]"/>
  <match src="type_name [63943,63950]" dest="type_name [28731,28738]"/>
  <match src="binary_expression [34555,34561]" dest="binary_expression [52949,52955]"/>
  <match src="expression_statement [102603,102707]" dest="expression_statement [41759,41863]"/>
  <match src=".: . [100764,100765]" dest=".: . [39920,39921]"/>
  <match src="): ) [44641,44642]" dest="): ) [14774,14775]"/>
  <match src="identifier: b [3415,3416]" dest="identifier: b [3979,3980]"/>
  <match src="uint: uint [79812,79816]" dest="uint: uint [62835,62839]"/>
  <match src="}: } [107090,107091]" dest="}: } [70432,70433]"/>
  <match src="): ) [47926,47927]" dest="): ) [18059,18060]"/>
  <match src="primitive_type [54314,54320]" dest="primitive_type [22163,22169]"/>
  <match src="internal: internal [30153,30161]" dest="internal: internal [48547,48555]"/>
  <match src="primitive_type [8853,8857]" dest="primitive_type [9417,9421]"/>
  <match src="): ) [46582,46583]" dest="): ) [16715,16716]"/>
  <match src="memory: memory [8936,8942]" dest="memory: memory [9500,9506]"/>
  <match src="external: external [55793,55801]" dest="external: external [23642,23650]"/>
  <match src=".: . [97008,97009]" dest=".: . [36164,36165]"/>
  <match src="identifier: redeemable [100568,100578]" dest="identifier: redeemable [39724,39734]"/>
  <match src="internal: internal [45328,45336]" dest="internal: internal [15461,15469]"/>
  <match src="): ) [54862,54863]" dest="): ) [22711,22712]"/>
  <match src="(: ( [94030,94031]" dest="(: ( [33186,33187]"/>
  <match src="}: } [104764,104765]" dest="}: } [43920,43921]"/>
  <match src="comment: /* DAO */ [42951,42960]" dest="comment: /* DAO */ [13084,13093]"/>
  <match src="(: ( [97291,97292]" dest="(: ( [36447,36448]"/>
  <match src="primitive_type [103656,103663]" dest="primitive_type [42812,42819]"/>
  <match src="}: } [91783,91784]" dest="}: } [78093,78094]"/>
  <match src="array_access [101234,101258]" dest="array_access [40390,40414]"/>
  <match src="parameter [27851,27863]" dest="parameter [46245,46257]"/>
  <match src="returns: returns [46119,46126]" dest="returns: returns [16252,16259]"/>
  <match src="event_paramater [81109,81132]" dest="event_paramater [71541,71564]"/>
  <match src="parameter [97659,97676]" dest="parameter [36815,36832]"/>
  <match src="returns: returns [98374,98381]" dest="returns: returns [37530,37537]"/>
  <match src="&quot;: &quot; [81027,81028]" dest="&quot;: &quot; [71459,71460]"/>
  <match src="identifier: sender [84596,84602]" dest="identifier: sender [72896,72902]"/>
  <match src="internal: internal [79008,79016]" dest="internal: internal [57513,57521]"/>
  <match src="primitive_type [4628,4635]" dest="primitive_type [5192,5199]"/>
  <match src="function_definition [8781,8904]" dest="function_definition [9345,9468]"/>
  <match src="view: view [93705,93709]" dest="view: view [32861,32865]"/>
  <match src="call_expression [7196,7213]" dest="call_expression [7760,7777]"/>
  <match src="identifier: deadline [55096,55104]" dest="identifier: deadline [22945,22953]"/>
  <match src=".: . [31663,31664]" dest=".: . [50057,50058]"/>
  <match src="identifier: errorMessage [4653,4665]" dest="identifier: errorMessage [5217,5229]"/>
  <match src="internal: internal [45600,45608]" dest="internal: internal [15733,15741]"/>
  <match src="parameter [104819,104833]" dest="parameter [43975,43989]"/>
  <match src="primitive_type [96483,96490]" dest="primitive_type [35639,35646]"/>
  <match src="call_expression [5914,5932]" dest="call_expression [6478,6496]"/>
  <match src="(: ( [100304,100305]" dest="(: ( [39460,39461]"/>
  <match src="type_name [7787,7791]" dest="type_name [8351,8355]"/>
  <match src="return: return [8305,8311]" dest="return: return [8869,8875]"/>
  <match src="return: return [9651,9657]" dest="return: return [10215,10221]"/>
  <match src="function_definition [94201,94313]" dest="function_definition [33357,33469]"/>
  <match src="call_argument [83577,83582]" dest="call_argument [80743,80752]"/>
  <match src="(: ( [29183,29184]" dest="(: ( [47577,47578]"/>
  <match src="(: ( [93615,93616]" dest="(: ( [32771,32772]"/>
  <match src="identifier: reason [102586,102592]" dest="identifier: reason [41742,41748]"/>
  <match src="identifier: D256 [7977,7981]" dest="identifier: D256 [8541,8545]"/>
  <match src="(: ( [94218,94219]" dest="(: ( [33374,33375]"/>
  <match src="visibility [8649,8657]" dest="visibility [9213,9221]"/>
  <match src="identifier: account [23124,23131]" dest="identifier: account [56702,56709]"/>
  <match src="state_variable_declaration [41835,41890]" dest="state_variable_declaration [11968,12023]"/>
  <match src="type_name [99692,99696]" dest="type_name [38848,38852]"/>
  <match src="function_body [92888,92919]" dest="function_body [32044,32075]"/>
  <match src="uint256: uint256 [81074,81081]" dest="uint256: uint256 [71506,71513]"/>
  <match src="comment: // 1.10 DAI [41577,41588]" dest="comment: // 1.10 DAI [11710,11721]"/>
  <match src="member_expression [102234,102274]" dest="member_expression [41390,41430]"/>
  <match src="function_definition [6631,6815]" dest="function_definition [7195,7379]"/>
  <match src="}: } [2089,2090]" dest="}: } [2653,2654]"/>
  <match src=".: . [105274,105275]" dest=".: . [44430,44431]"/>
  <match src=",: , [32497,32498]" dest=",: , [50891,50892]"/>
  <match src="identifier: provider [93551,93559]" dest="identifier: provider [32707,32715]"/>
  <match src="identifier: msg [82919,82922]" dest="identifier: msg [74181,74184]"/>
  <match src="state_mutability [48345,48349]" dest="state_mutability [18478,18482]"/>
  <match src="primitive_type [93256,93263]" dest="primitive_type [32412,32419]"/>
  <match src="): ) [93902,93903]" dest="): ) [33058,33059]"/>
  <match src="identifier: coupons [103731,103738]" dest="identifier: coupons [42887,42894]"/>
  <match src="user_defined_type [92554,92566]" dest="user_defined_type [31710,31722]"/>
  <match src="identifier: COUPON_SUPPLY_CHANGE_LIMIT [44055,44081]" dest="identifier: COUPON_SUPPLY_CHANGE_LIMIT [14188,14214]"/>
  <match src="call_expression [101932,101973]" dest="call_expression [41088,41129]"/>
  <match src="return: return [9136,9142]" dest="return: return [9700,9706]"/>
  <match src="return_statement [96981,97029]" dest="return_statement [36137,36185]"/>
  <match src="event: event [81094,81099]" dest="event: event [71526,71531]"/>
  <match src="array_access [36333,36351]" dest="array_access [54727,54745]"/>
  <match src="&quot;: &quot; [91202,91203]" dest="&quot;: &quot; [77512,77513]"/>
  <match src="): ) [45441,45442]" dest="): ) [15574,15575]"/>
  <match src="type_name [89360,89375]" dest="type_name [30860,30875]"/>
  <match src="visibility [103429,103437]" dest="visibility [42585,42593]"/>
  <match src=",: , [31175,31176]" dest=",: , [49569,49570]"/>
  <match src="(: ( [30025,30026]" dest="(: ( [48419,48420]"/>
  <match src="identifier: value [82125,82130]" dest="identifier: value [72353,72358]"/>
  <match src="identifier: sender [80876,80882]" dest="identifier: sender [64183,64189]"/>
  <match src=".: . [106995,106996]" dest=".: . [70337,70338]"/>
  <match src="address: address [21839,21846]" dest="address: address [65023,65030]"/>
  <match src="memory: memory [32982,32988]" dest="memory: memory [51376,51382]"/>
  <match src="identifier: coupons [102113,102120]" dest="identifier: coupons [41269,41276]"/>
  <match src="identifier: stringify [28664,28673]" dest="identifier: stringify [47058,47067]"/>
  <match src="pure: pure [48345,48349]" dest="pure: pure [18478,18482]"/>
  <match src="identifier: a [423,424]" dest="identifier: a [987,988]"/>
  <match src="=: = [36531,36532]" dest="=: = [54925,54926]"/>
  <match src="pure: pure [45609,45613]" dest="pure: pure [15742,15746]"/>
  <match src="identifier: ASCII_RELATIVE_ZERO [36871,36890]" dest="identifier: ASCII_RELATIVE_ZERO [55265,55284]"/>
  <match src="call_expression [81556,81563]" dest="call_expression [72079,72086]"/>
  <match src="identifier: couponAllowances [95688,95704]" dest="identifier: couponAllowances [34844,34860]"/>
  <match src="call_argument [4066,4092]" dest="call_argument [4630,4656]"/>
  <match src="): ) [56289,56290]" dest="): ) [24138,24139]"/>
  <match src="function_body [105258,105368]" dest="function_body [44414,44524]"/>
  <match src="type_name [89035,89042]" dest="type_name [30535,30542]"/>
  <match src="identifier: value [7003,7008]" dest="identifier: value [7567,7572]"/>
  <match src="=: = [32996,32997]" dest="=: = [51390,51391]"/>
  <match src="address: address [79548,79555]" dest="address: address [59947,59954]"/>
  <match src="member_expression [102130,102162]" dest="member_expression [41286,41318]"/>
  <match src="pure: pure [9860,9864]" dest="pure: pure [10424,10428]"/>
  <match src="library: library [86226,86233]" dest="library: library [74736,74743]"/>
  <match src="state_variable_declaration [43624,43673]" dest="state_variable_declaration [13757,13806]"/>
  <match src="member_expression [101847,101862]" dest="member_expression [41003,41018]"/>
  <match src="type_name [86700,86707]" dest="type_name [75210,75217]"/>
  <match src="public: public [51868,51874]" dest="public: public [27804,27810]"/>
  <match src="}: } [85222,85223]" dest="}: } [59569,59570]"/>
  <match src="function_body [102856,102930]" dest="function_body [42012,42086]"/>
  <match src="identifier: incrementEpoch [103412,103426]" dest="identifier: incrementEpoch [42568,42582]"/>
  <match src="=: = [43742,43743]" dest="=: = [13875,13876]"/>
  <match src="return_type_definition [96791,96808]" dest="return_type_definition [35947,35964]"/>
  <match src="variable_declaration_statement [84309,84367]" dest="variable_declaration_statement [62033,62086]"/>
  <match src=".: . [104324,104325]" dest=".: . [43480,43481]"/>
  <match src="{: { [99589,99590]" dest="{: { [38745,38746]"/>
  <match src="identifier: div [3199,3202]" dest="identifier: div [3763,3766]"/>
  <match src="primitive_type [30737,30744]" dest="primitive_type [49131,49138]"/>
  <match src="type_name [9791,9798]" dest="type_name [10355,10362]"/>
  <match src=":: : [45137,45138]" dest=":: : [15270,15271]"/>
  <match src="identifier: msg [83565,83568]" dest="identifier: msg [80731,80734]"/>
  <match src="parameter [26162,26177]" dest="parameter [56356,56371]"/>
  <match src="primitive_type [42093,42100]" dest="primitive_type [12226,12233]"/>
  <match src="(: ( [73250,73251]" dest="(: ( [59249,59250]"/>
  <match src="type_name [42069,42076]" dest="type_name [12202,12209]"/>
  <match src="identifier: totalBonded [74058,74069]" dest="identifier: totalRedeemable [68414,68429]"/>
  <match src="type_name [43762,43769]" dest="type_name [13895,13902]"/>
  <match src="[: [ [102881,102882]" dest="[: [ [42037,42038]"/>
  <match src="(: ( [6305,6306]" dest="(: ( [6869,6870]"/>
  <match src="call_expression [82931,82945]" dest="call_expression [74193,74207]"/>
  <match src="function_body [8075,8139]" dest="function_body [8639,8703]"/>
  <match src="event: event [54059,54064]" dest="event: event [21908,21913]"/>
  <match src="primitive_type [95794,95801]" dest="primitive_type [34950,34957]"/>
  <match src="(: ( [9757,9758]" dest="(: ( [10321,10322]"/>
  <match src="}: } [88649,88650]" dest="}: } [30149,30150]"/>
  <match src="return: return [4748,4754]" dest="return: return [5312,5318]"/>
  <match src="identifier: i [33406,33407]" dest="identifier: i [51800,51801]"/>
  <match src="return_statement [94050,94083]" dest="return_statement [33206,33239]"/>
  <match src="(: ( [55162,55163]" dest="(: ( [23011,23012]"/>
  <match src="(: ( [35650,35651]" dest="(: ( [54044,54045]"/>
  <match src="state_variable_declaration [42210,42260]" dest="state_variable_declaration [12343,12393]"/>
  <match src="call_expression [74400,74425]" dest="call_expression [68337,68369]"/>
  <match src="identifier: transfer [99521,99529]" dest="identifier: transfer [38677,38685]"/>
  <match src="parameter [7787,7803]" dest="parameter [8351,8367]"/>
  <match src="(: ( [54692,54693]" dest="(: ( [22541,22542]"/>
  <match src="pragma_directive [0,24]" dest="pragma_directive [0,24]"/>
  <match src="primitive_type [91484,91491]" dest="primitive_type [77794,77801]"/>
  <match src=",: , [69351,69352]" dest=",: , [73571,73572]"/>
  <match src="primitive_type [105448,105455]" dest="primitive_type [44604,44611]"/>
  <match src="identifier: decrementBalanceOfCoupons [102377,102402]" dest="identifier: decrementBalanceOfCoupons [41533,41558]"/>
  <match src="string_literal [50879,50893]" dest="string_literal [56527,56569]"/>
  <match src="identifier: require [4709,4716]" dest="identifier: require [5273,5280]"/>
  <match src="identifier: getOraclePoolRatio [48110,48128]" dest="identifier: getOraclePoolRatio [18243,18261]"/>
  <match src="(: ( [7327,7328]" dest="(: ( [7891,7892]"/>
  <match src="type_name [27491,27498]" dest="type_name [45885,45892]"/>
  <match src=".: . [103567,103568]" dest=".: . [42723,42724]"/>
  <match src="uint256: uint256 [81335,81342]" dest="uint256: uint256 [71637,71644]"/>
  <match src="}: } [5930,5931]" dest="}: } [6494,6495]"/>
  <match src="address: address [88147,88154]" dest="address: address [29647,29654]"/>
  <match src="revert_statement [27955,28211]" dest="revert_statement [46349,46605]"/>
  <match src="internal: internal [6699,6707]" dest="internal: internal [7263,7271]"/>
  <match src="pure: pure [8662,8666]" dest="pure: pure [9226,9230]"/>
  <match src="{: { [15758,15759]" dest="{: { [60769,60770]"/>
  <match src="identifier: owner [54090,54095]" dest="identifier: owner [21939,21944]"/>
  <match src="): ) [9124,9125]" dest="): ) [9688,9689]"/>
  <match src="primitive_type [81320,81327]" dest="primitive_type [71622,71629]"/>
  <match src="member_expression [7629,7639]" dest="member_expression [8193,8203]"/>
  <match src="yul_identifier [91750,91767]" dest="yul_identifier [78060,78077]"/>
  <match src="visibility [96640,96646]" dest="visibility [35796,35802]"/>
  <match src="primitive_type [55126,55133]" dest="primitive_type [22975,22982]"/>
  <match src="identifier: sub [104106,104109]" dest="identifier: sub [43262,43265]"/>
  <match src="address: address [25705,25712]" dest="address: address [61132,61139]"/>
  <match src="{: { [45993,45994]" dest="{: { [16126,16127]"/>
  <match src="identifier: rejectFor [98151,98160]" dest="identifier: rejectFor [37307,37316]"/>
  <match src="function: function [81472,81480]" dest="function: function [71997,72005]"/>
  <match src="number_literal: 1 [41387,41388]" dest="number_literal: 1 [11520,11521]"/>
  <match src="call_argument [100305,100311]" dest="call_argument [39461,39467]"/>
  <match src="identifier: add [315,318]" dest="identifier: add [879,882]"/>
  <match src="struct_member [88891,88904]" dest="struct_member [30391,30404]"/>
  <match src="type_name [93823,93830]" dest="type_name [32979,32986]"/>
  <match src=".: . [98146,98147]" dest=".: . [37302,37303]"/>
  <match src="identifier: value [7921,7926]" dest="identifier: value [8485,8490]"/>
  <match src="type_name [88891,88897]" dest="type_name [30391,30397]"/>
  <match src="number_literal: 24 [43373,43375]" dest="number_literal: 24 [13506,13508]"/>
  <match src="primitive_type [54981,54988]" dest="primitive_type [22830,22837]"/>
  <match src="): ) [8356,8357]" dest="): ) [8920,8921]"/>
  <match src="function_definition [93579,93669]" dest="function_definition [32735,32825]"/>
  <match src="external: external [11555,11563]" dest="external: external [24544,24552]"/>
  <match src="return_type_definition [93710,93727]" dest="return_type_definition [32866,32883]"/>
  <match src="identifier: stringifyTruncated [29719,29737]" dest="identifier: stringifyTruncated [48113,48131]"/>
  <match src="if_statement [32194,32746]" dest="if_statement [50588,51140]"/>
  <match src="parameter [6730,6741]" dest="parameter [7294,7305]"/>
  <match src="type_name [88343,88350]" dest="type_name [29843,29850]"/>
  <match src="(: ( [96763,96764]" dest="(: ( [35919,35920]"/>
  <match src="internal: internal [100703,100711]" dest="internal: internal [39859,39867]"/>
  <match src="call_argument [107274,107290]" dest="call_argument [70616,70632]"/>
  <match src="type_name [15890,15897]" dest="type_name [19789,19796]"/>
  <match src="function_definition [97166,97300]" dest="function_definition [36322,36456]"/>
  <match src="state_mutability [95625,95629]" dest="state_mutability [34781,34785]"/>
  <match src="type_name [55756,55763]" dest="type_name [23605,23612]"/>
  <match src=".: . [84652,84653]" dest=".: . [64242,64243]"/>
  <match src="primitive_type [19703,19710]" dest="primitive_type [65310,65317]"/>
  <match src="function_body [46584,46628]" dest="function_body [16717,16761]"/>
  <match src="call_argument [100611,100617]" dest="call_argument [39767,39773]"/>
  <match src="): ) [102910,102911]" dest="): ) [42066,42067]"/>
  <match src="memory: memory [101779,101785]" dest="memory: memory [40935,40941]"/>
  <match src="state_mutability [97685,97689]" dest="state_mutability [36841,36845]"/>
  <match src="member_expression [102088,102120]" dest="member_expression [41244,41276]"/>
  <match src="identifier: tokenA [79636,79642]" dest="identifier: candidate [80847,80856]"/>
  <match src="(: ( [108425,108426]" dest="(: ( [56184,56185]"/>
  <match src="identifier: newLock [105593,105600]" dest="identifier: newLock [44749,44756]"/>
  <match src="primitive_type [13484,13491]" dest="primitive_type [26473,26480]"/>
  <match src="): ) [28768,28769]" dest="): ) [47162,47163]"/>
  <match src="type_name [80990,80997]" dest="type_name [71419,71426]"/>
  <match src="comment: /* Deployed */ [44225,44239]" dest="comment: /* Deployed */ [14358,14372]"/>
  <match src="external: external [54291,54299]" dest="external: external [22140,22148]"/>
  <match src="return_type_definition [54655,54669]" dest="return_type_definition [22504,22518]"/>
  <match src="function: function [47656,47664]" dest="function: function [17789,17797]"/>
  <match src="internal: internal [27898,27906]" dest="internal: internal [46292,46300]"/>
  <match src="call_argument [29929,29935]" dest="call_argument [48323,48329]"/>
  <match src="member_expression [83565,83575]" dest="member_expression [80731,80741]"/>
  <match src="comment: // put the input bytes into the result [32929,32967]" dest="comment: // put the input bytes into the result [51323,51361]"/>
  <match src="identifier: account [25721,25728]" dest="identifier: account [61148,61155]"/>
  <match src="member_expression [80872,80882]" dest="member_expression [64179,64189]"/>
  <match src="identifier: epoch [103724,103729]" dest="identifier: epoch [42880,42885]"/>
  <match src="(: ( [6136,6137]" dest="(: ( [6700,6701]"/>
  <match src="event_definition [53426,53512]" dest="event_definition [61299,61400]"/>
  <match src="identifier: LibEIP712 [50010,50019]" dest="identifier: transferFrom [56416,56428]"/>
  <match src="identifier: a [1652,1653]" dest="identifier: a [2216,2217]"/>
  <match src="(: ( [84591,84592]" dest="(: ( [72891,72892]"/>
  <match src="call_argument [77683,77689]" dest="call_argument [84379,84385]"/>
  <match src="): ) [55980,55981]" dest="): ) [23829,23830]"/>
  <match src="binary_expression [36497,36514]" dest="binary_expression [54891,54908]"/>
  <match src="&quot;: &quot; [50879,50880]" dest="&quot;: &quot; [56527,56528]"/>
  <match src="visibility [43632,43639]" dest="visibility [13765,13772]"/>
  <match src="type_name [26162,26169]" dest="type_name [56356,56363]"/>
  <match src="update_expression [35222,35225]" dest="update_expression [53616,53619]"/>
  <match src="identifier: epochTime [95862,95871]" dest="identifier: epochTime [35018,35027]"/>
  <match src="&lt;: &lt; [7674,7675]" dest="&lt;: &lt; [8238,8239]"/>
  <match src="identifier: Require [85617,85624]" dest="identifier: Require [79833,79840]"/>
  <match src="{: { [103700,103701]" dest="{: { [42856,42857]"/>
  <match src="identifier: redeemable [89067,89077]" dest="identifier: redeemable [30567,30577]"/>
  <match src="identifier: ORACLE_POOL_RATIO [44125,44142]" dest="identifier: ORACLE_POOL_RATIO [14258,14275]"/>
  <match src="member_expression [106675,106687]" dest="member_expression [70017,70029]"/>
  <match src="return_type_definition [95630,95647]" dest="return_type_definition [34786,34803]"/>
  <match src="type_name [20450,20457]" dest="type_name [59596,59603]"/>
  <match src="return_statement [95504,95548]" dest="return_statement [34660,34704]"/>
  <match src="call_argument [35069,35083]" dest="call_argument [53463,53477]"/>
  <match src="(: ( [2557,2558]" dest="(: ( [3121,3122]"/>
  <match src="identifier: sub [101879,101882]" dest="identifier: sub [41035,41038]"/>
  <match src="(: ( [108730,108731]" dest="(: ( [56908,56909]"/>
  <match src="type_name [7431,7435]" dest="type_name [7995,7999]"/>
  <match src="call_argument [9153,9157]" dest="call_argument [9717,9721]"/>
  <match src="identifier: errorMessage [3376,3388]" dest="identifier: errorMessage [3940,3952]"/>
  <match src="identifier: i [7665,7666]" dest="identifier: i [8229,8230]"/>
  <match src="identifier: self [7629,7633]" dest="identifier: self [8193,8197]"/>
  <match src="function_definition [7229,7403]" dest="function_definition [7793,7967]"/>
  <match src="public: public [51805,51811]" dest="public: public [27741,27747]"/>
  <match src="{: { [48163,48164]" dest="{: { [18296,18297]"/>
  <match src="solidity_version: 0.5.17 [17,23]" dest="solidity_version: 0.5.17 [17,23]"/>
  <match src=".: . [7200,7201]" dest=".: . [7764,7765]"/>
  <match src="): ) [88120,88121]" dest="): ) [29620,29621]"/>
  <match src="}: } [47785,47786]" dest="}: } [17918,17919]"/>
  <match src="identifier: _state [103229,103235]" dest="identifier: _state [42385,42391]"/>
  <match src="identifier: reason [29819,29825]" dest="identifier: reason [48213,48219]"/>
  <match src="contract: contract [51743,51751]" dest="contract: contract [27679,27687]"/>
  <match src="identifier: _state [102234,102240]" dest="identifier: _state [41390,41396]"/>
  <match src="identifier: vote [104500,104504]" dest="identifier: vote [43656,43660]"/>
  <match src="identifier: spender [21847,21854]" dest="identifier: spender [65031,65038]"/>
  <match src="uint256: uint256 [5592,5599]" dest="uint256: uint256 [6156,6163]"/>
  <match src="primitive_type [65767,65774]" dest="primitive_type [83674,83681]"/>
  <match src="primitive_type [35013,35017]" dest="primitive_type [53407,53411]"/>
  <match src="primitive_type [99380,99387]" dest="primitive_type [38536,38543]"/>
  <match src="function_definition [9046,9173]" dest="function_definition [9610,9737]"/>
  <match src="identifier: lastReserve [68765,68776]" dest="identifier: balance [72716,72723]"/>
  <match src="parameter [96764,96777]" dest="parameter [35920,35933]"/>
  <match src="primitive_type [48454,48461]" dest="primitive_type [18587,18594]"/>
  <match src="): ) [46103,46104]" dest="): ) [16236,16237]"/>
  <match src="visibility [7117,7125]" dest="visibility [7681,7689]"/>
  <match src="identifier: incrementBalanceOfBonded [82681,82705]" dest="identifier: incrementBalanceOfStaged [73405,73429]"/>
  <match src="identifier: self [6778,6782]" dest="identifier: self [7342,7346]"/>
  <match src="(: ( [106709,106710]" dest="(: ( [70051,70052]"/>
  <match src="primitive_type [31459,31463]" dest="primitive_type [49853,49857]"/>
  <match src=",: , [9225,9226]" dest=",: , [9789,9790]"/>
  <match src="user_defined_type [9227,9231]" dest="user_defined_type [9791,9795]"/>
  <match src="(: ( [35198,35199]" dest="(: ( [53592,53593]"/>
  <match src="internal: internal [7297,7305]" dest="internal: internal [7861,7869]"/>
  <match src="visibility [23257,23264]" dest="visibility [67792,67799]"/>
  <match src="call_expression [7182,7216]" dest="call_expression [7746,7780]"/>
  <match src="member_expression [101033,101058]" dest="member_expression [40189,40214]"/>
  <match src="]: ] [35963,35964]" dest="]: ] [54357,54358]"/>
  <match src="uint: uint [54503,54507]" dest="uint: uint [22352,22356]"/>
  <match src="type_alias [92542,92549]" dest="type_alias [31698,31705]"/>
  <match src=".: . [9914,9915]" dest=".: . [10478,10479]"/>
  <match src="}: } [88364,88365]" dest="}: } [29864,29865]"/>
  <match src="event_paramater [81262,81275]" dest="event_paramater [71735,71748]"/>
  <match src="uint256: uint256 [81191,81198]" dest="uint256: uint256 [61385,61392]"/>
  <match src="function: function [7049,7057]" dest="function: function [7613,7621]"/>
  <match src="): ) [94694,94695]" dest="): ) [33850,33851]"/>
  <match src="parameter [47549,47568]" dest="parameter [17682,17701]"/>
  <match src="call_argument [9919,9928]" dest="call_argument [10483,10492]"/>
  <match src="): ) [29343,29344]" dest="): ) [47737,47738]"/>
  <match src="type_name [43229,43236]" dest="type_name [13362,13369]"/>
  <match src="{: { [87945,87946]" dest="{: { [29445,29446]"/>
  <match src="member_expression [97259,97291]" dest="member_expression [36415,36447]"/>
  <match src="identifier: ethicAmount [79418,79429]" dest="identifier: ethicAmount [64191,64202]"/>
  <match src="function: function [35632,35640]" dest="function: function [54026,54034]"/>
  <match src=",: , [8183,8184]" dest=",: , [8747,8748]"/>
  <match src="string [85542,85551]" dest="string [79430,79447]"/>
  <match src="primitive_type [36857,36862]" dest="primitive_type [55251,55256]"/>
  <match src=",: , [23079,23080]" dest=",: , [56648,56649]"/>
  <match src="(: ( [83655,83656]" dest="(: ( [80682,80683]"/>
  <match src="type_name [54435,54439]" dest="type_name [22284,22288]"/>
  <match src="type_name [89260,89273]" dest="type_name [30760,30773]"/>
  <match src="binary_expression [98269,98307]" dest="binary_expression [37425,37463]"/>
  <match src="call_argument [66278,66309]" dest="call_argument [82330,82374]"/>
  <match src=".: . [93965,93966]" dest=".: . [33121,33122]"/>
  <match src="]: ] [104903,104904]" dest="]: ] [44059,44060]"/>
  <match src="(: ( [9297,9298]" dest="(: ( [9861,9862]"/>
  <match src="parameter [93823,93830]" dest="parameter [32979,32986]"/>
  <match src="type_name [97527,97534]" dest="type_name [36683,36690]"/>
  <match src="identifier: D256 [48047,48051]" dest="identifier: D256 [18180,18184]"/>
  <match src="identifier: upgradeTo [91006,91015]" dest="identifier: upgradeTo [77316,77325]"/>
  <match src="number_literal: 0 [5928,5929]" dest="number_literal: 0 [6492,6493]"/>
  <match src="binary_expression [94615,94631]" dest="binary_expression [33771,33787]"/>
  <match src="type_name [88987,88994]" dest="type_name [30487,30494]"/>
  <match src="internal: internal [48431,48439]" dest="internal: internal [18564,18572]"/>
  <match src="comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [1708,1787]" dest="comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [2272,2351]"/>
  <match src="identifier: b [1317,1318]" dest="identifier: b [1881,1882]"/>
  <match src="(: ( [56358,56359]" dest="(: ( [24207,24208]"/>
  <match src="identifier: start [88304,88309]" dest="identifier: start [29804,29809]"/>
  <match src=".: . [104951,104952]" dest=".: . [44107,44108]"/>
  <match src="identifier: balanceOfBonded [74307,74322]" dest="identifier: balanceOf [82707,82716]"/>
  <match src="visibility [47699,47707]" dest="visibility [17832,17840]"/>
  <match src="[: [ [98286,98287]" dest="[: [ [37442,37443]"/>
  <match src="identifier: reason [100788,100794]" dest="identifier: reason [39944,39950]"/>
  <match src="(: ( [27961,27962]" dest="(: ( [46355,46356]"/>
  <match src="while_statement [34031,34100]" dest="while_statement [52425,52494]"/>
  <match src="identifier: bonded [93760,93766]" dest="identifier: bonded [32916,32922]"/>
  <match src="call_argument [91537,91594]" dest="call_argument [77847,77904]"/>
  <match src="parameter [6888,6908]" dest="parameter [7452,7472]"/>
  <match src="}: } [9457,9458]" dest="}: } [10021,10022]"/>
  <match src="identifier: add [96288,96291]" dest="identifier: add [35444,35447]"/>
  <match src="returns: returns [35705,35712]" dest="returns: returns [54099,54106]"/>
  <match src="identifier: reason [27881,27887]" dest="identifier: reason [46275,46281]"/>
  <match src="member_expression [100581,100606]" dest="member_expression [39737,39762]"/>
  <match src="identifier: isContract [91565,91575]" dest="identifier: isContract [77875,77885]"/>
  <match src="parameter [8193,8206]" dest="parameter [8757,8770]"/>
  <match src="indexed: indexed [54105,54112]" dest="indexed: indexed [21954,21961]"/>
  <match src="member_expression [105630,105645]" dest="member_expression [44786,44801]"/>
  <match src="(: ( [9152,9153]" dest="(: ( [9716,9717]"/>
  <match src="identifier: stringifyTruncated [29165,29183]" dest="identifier: stringifyTruncated [47559,47577]"/>
  <match src="for: for [7652,7655]" dest="for: for [8216,8219]"/>
  <match src="return: return [97586,97592]" dest="return: return [36742,36748]"/>
  <match src="type_name [12344,12351]" dest="type_name [25333,25340]"/>
  <match src="return_type_definition [54942,54959]" dest="return_type_definition [22791,22808]"/>
  <match src="parameter [97567,97574]" dest="parameter [36723,36730]"/>
  <match src="call_argument [84604,84612]" dest="call_argument [72904,72911]"/>
  <match src="state_mutability [5862,5866]" dest="state_mutability [6426,6430]"/>
  <match src="expression_statement [2008,2065]" dest="expression_statement [2572,2629]"/>
  <match src="call_expression [6574,6618]" dest="call_expression [7138,7182]"/>
  <match src="): ) [83466,83467]" dest="): ) [74000,74001]"/>
  <match src=",: , [99345,99346]" dest=",: , [38501,38502]"/>
  <match src="identifier: EpochStrategy [96112,96125]" dest="identifier: EpochStrategy [35268,35281]"/>
  <match src="): ) [45865,45866]" dest="): ) [15998,15999]"/>
  <match src="primitive_type [55701,55708]" dest="primitive_type [23550,23557]"/>
  <match src=",: , [55515,55516]" dest=",: , [23364,23365]"/>
  <match src="(: ( [54252,54253]" dest="(: ( [22101,22102]"/>
  <match src="bool: bool [30696,30700]" dest="bool: bool [49090,49094]"/>
  <match src="call_argument [6793,6804]" dest="call_argument [7357,7368]"/>
  <match src="identifier: State [89144,89149]" dest="identifier: State [30644,30649]"/>
  <match src="(: ( [28473,28474]" dest="(: ( [46867,46868]"/>
  <match src="identifier: slot [98611,98615]" dest="identifier: slot [37767,37771]"/>
  <match src="(: ( [84553,84554]" dest="(: ( [73945,73946]"/>
  <match src="type_name [7457,7464]" dest="type_name [8021,8028]"/>
  <match src="constant: constant [41367,41375]" dest="constant: constant [11500,11508]"/>
  <match src="): ) [101624,101625]" dest="): ) [40780,40781]"/>
  <match src="state_mutability [93911,93915]" dest="state_mutability [33067,33071]"/>
  <match src="primitive_type [1217,1224]" dest="primitive_type [1781,1788]"/>
  <match src="): ) [81502,81503]" dest="): ) [72027,72028]"/>
  <match src=",: , [32649,32650]" dest=",: , [51043,51044]"/>
  <match src="identifier: j [34555,34556]" dest="identifier: j [52949,52950]"/>
  <match src="primitive_type [30787,30794]" dest="primitive_type [49181,49188]"/>
  <match src="identifier: result [35001,35007]" dest="identifier: result [53395,53401]"/>
  <match src="identifier: payloadA [29894,29902]" dest="identifier: payloadA [48288,48296]"/>
  <match src="): ) [96239,96240]" dest="): ) [35395,35396]"/>
  <match src=".: . [97599,97600]" dest=".: . [36755,36756]"/>
  <match src="expression_statement [36529,36540]" dest="expression_statement [54923,54934]"/>
  <match src="): ) [95902,95903]" dest="): ) [35058,35059]"/>
  <match src="return: return [98399,98405]" dest="return: return [37555,37561]"/>
  <match src="type_name [97191,97198]" dest="type_name [36347,36354]"/>
  <match src="): ) [36890,36891]" dest="): ) [55284,55285]"/>
  <match src="member_expression [82495,82655]" dest="member_expression [72726,72848]"/>
  <match src="visibility [100099,100107]" dest="visibility [39255,39263]"/>
  <match src="identifier: stringifyTruncated [30385,30403]" dest="identifier: stringifyTruncated [48779,48797]"/>
  <match src="string: string [92873,92879]" dest="string: string [32029,32035]"/>
  <match src="identifier: value [47899,47904]" dest="identifier: value [18032,18037]"/>
  <match src="=: = [74398,74399]" dest="=: = [68335,68336]"/>
  <match src=",: , [83515,83516]" dest=",: , [73486,73487]"/>
  <match src="{: { [96528,96529]" dest="{: { [35684,35685]"/>
  <match src="internal: internal [8247,8255]" dest="internal: internal [8811,8819]"/>
  <match src="return_statement [95371,95414]" dest="return_statement [34527,34570]"/>
  <match src="memory: memory [34764,34770]" dest="memory: memory [53158,53164]"/>
  <match src="identifier: amount [100305,100311]" dest="identifier: amount [39461,39467]"/>
  <match src="primitive_type [30234,30240]" dest="primitive_type [48628,48634]"/>
  <match src="address: address [106914,106921]" dest="address: address [70256,70263]"/>
  <match src="member_expression [104147,104187]" dest="member_expression [43303,43343]"/>
  <match src="}: } [45168,45169]" dest="}: } [15301,15302]"/>
  <match src="visibility [6699,6707]" dest="visibility [7263,7271]"/>
  <match src="]: ] [101292,101293]" dest="]: ] [40448,40449]"/>
  <match src="identifier: reason [103202,103208]" dest="identifier: reason [42358,42364]"/>
  <match src="parameter [67543,67562]" dest="parameter [21544,21569]"/>
  <match src=".: . [84447,84448]" dest=".: . [81058,81059]"/>
  <match src="internal: internal [100240,100248]" dest="internal: internal [39396,39404]"/>
  <match src="call_expression [102904,102923]" dest="call_expression [42060,42079]"/>
  <match src="type_cast_expression [29649,29975]" dest="type_cast_expression [48043,48369]"/>
  <match src="identifier: msg [81577,81580]" dest="identifier: msg [72100,72103]"/>
  <match src="identifier: account [102029,102036]" dest="identifier: account [41185,41192]"/>
  <match src="identifier: pool [93658,93662]" dest="identifier: pool [32814,32818]"/>
  <match src=",: , [83972,83973]" dest=",: , [81887,81888]"/>
  <match src="call_expression [30991,31015]" dest="call_expression [49385,49409]"/>
  <match src="function_body [48368,48400]" dest="function_body [18501,18533]"/>
  <match src="parameter [13080,13094]" dest="parameter [26069,26083]"/>
  <match src="parameter [31459,31468]" dest="parameter [49853,49862]"/>
  <match src="address: address [44778,44785]" dest="address: address [14911,14918]"/>
  <match src="member_expression [100432,100451]" dest="member_expression [39588,39607]"/>
  <match src="=: = [105532,105533]" dest="=: = [44688,44689]"/>
  <match src="primitive_type [54794,54798]" dest="primitive_type [22643,22647]"/>
  <match src="(: ( [19860,19861]" dest="(: ( [65490,65491]"/>
  <match src="string_literal [107220,107241]" dest="string_literal [70562,70583]"/>
  <match src="binary_expression [19861,19884]" dest="binary_expression [65491,65514]"/>
  <match src="uint256: uint256 [81134,81141]" dest="uint256: uint256 [71566,71573]"/>
  <match src="memory: memory [92880,92886]" dest="memory: memory [32036,32042]"/>
  <match src="identifier: msg [11038,11041]" dest="identifier: msg [65736,65739]"/>
  <match src="): ) [85142,85143]" dest="): ) [59313,59314]"/>
  <match src="(: ( [96624,96625]" dest="(: ( [35780,35781]"/>
  <match src="identifier: epoch [102660,102665]" dest="identifier: epoch [41816,41821]"/>
  <match src="identifier: Approval [22099,22107]" dest="identifier: CouponApproval [65229,65243]"/>
  <match src="identifier: candidate [104543,104552]" dest="identifier: candidate [43699,43708]"/>
  <match src="member_expression [105104,105143]" dest="member_expression [44260,44299]"/>
  <match src="type_name [42210,42217]" dest="type_name [12343,12350]"/>
  <match src=".: . [105636,105637]" dest=".: . [44792,44793]"/>
  <match src="function_definition [54514,54594]" dest="function_definition [22363,22443]"/>
  <match src="visibility [106546,106553]" dest="visibility [69888,69895]"/>
  <match src="primitive_type [98099,98106]" dest="primitive_type [37255,37262]"/>
  <match src="member_expression [94057,94071]" dest="member_expression [33213,33227]"/>
  <match src="primitive_type [97380,97387]" dest="primitive_type [36536,36543]"/>
  <match src="function: function [6212,6220]" dest="function: function [6776,6784]"/>
  <match src="constant: constant [92589,92597]" dest="constant: constant [31745,31753]"/>
  <match src="pure: pure [55579,55583]" dest="pure: pure [23428,23432]"/>
  <match src="block_statement [66807,66893]" dest="block_statement [69007,69052]"/>
  <match src="number_literal: 6 [42534,42535]" dest="number_literal: 6 [12667,12668]"/>
  <match src="identifier: result [35379,35385]" dest="identifier: result [53773,53779]"/>
  <match src="primitive_type [34141,34146]" dest="primitive_type [52535,52540]"/>
  <match src="address: address [48759,48766]" dest="address: address [18892,18899]"/>
  <match src=",: , [21135,21136]" dest=",: , [64590,64591]"/>
  <match src="primitive_type [27832,27836]" dest="primitive_type [46226,46230]"/>
  <match src="identifier: encodePacked [33002,33014]" dest="identifier: encodePacked [51396,51408]"/>
  <match src="identifier: i [7679,7680]" dest="identifier: i [8243,8244]"/>
  <match src="call_expression [94700,94718]" dest="call_expression [33856,33874]"/>
  <match src="contract: contract [106500,106508]" dest="contract: contract [69842,69850]"/>
  <match src="): ) [55676,55677]" dest="): ) [23525,23526]"/>
  <match src="return: return [46819,46825]" dest="return: return [16952,16958]"/>
  <match src="): ) [44785,44786]" dest="): ) [14918,14919]"/>
  <match src="visibility [63825,63831]" dest="visibility [28613,28619]"/>
  <match src="returns: returns [55747,55754]" dest="returns: returns [23596,23603]"/>
  <match src="type_name [8815,8819]" dest="type_name [9379,9383]"/>
  <match src="*: * [36259,36260]" dest="*: * [54653,54654]"/>
  <match src="=: = [43371,43372]" dest="=: = [13504,13505]"/>
  <match src="}: } [96448,96449]" dest="}: } [35604,35605]"/>
  <match src="function_definition [45559,45684]" dest="function_definition [15692,15817]"/>
  <match src="identifier: Provide [81383,81390]" dest="identifier: Commit [79178,79184]"/>
  <match src="emit: emit [101407,101411]" dest="emit: emit [40563,40567]"/>
  <match src="type_name [50208,50215]" dest="type_name [57494,57501]"/>
  <match src="(: ( [96518,96519]" dest="(: ( [35674,35675]"/>
  <match src="identifier: balance [89196,89203]" dest="identifier: balance [30696,30703]"/>
  <match src="type_name [96401,96408]" dest="type_name [35557,35564]"/>
  <match src="identifier: startFor [97518,97526]" dest="identifier: startFor [36674,36682]"/>
  <match src="address: address [101160,101167]" dest="address: address [40316,40323]"/>
  <match src="(: ( [97792,97793]" dest="(: ( [36948,36949]"/>
  <match src="variable_declaration_statement [32976,33022]" dest="variable_declaration_statement [51370,51416]"/>
  <match src="type_name [89293,89324]" dest="type_name [30793,30824]"/>
  <match src="(: ( [6768,6769]" dest="(: ( [7332,7333]"/>
  <match src="): ) [93039,93040]" dest="): ) [32195,32196]"/>
  <match src="): ) [32203,32204]" dest="): ) [50597,50598]"/>
  <match src="[: [ [35961,35962]" dest="[: [ [54355,54356]"/>
  <match src="memory: memory [100084,100090]" dest="memory: memory [39240,39246]"/>
  <match src="new: new [33745,33748]" dest="new: new [52139,52142]"/>
  <match src="}: } [66892,66893]" dest="}: } [69051,69052]"/>
  <match src="{: { [5567,5568]" dest="{: { [6131,6132]"/>
  <match src=".: . [47400,47401]" dest=".: . [17533,17534]"/>
  <match src="function_body [9891,9953]" dest="function_body [10455,10517]"/>
  <match src="identifier: ASCII_ZERO [35024,35034]" dest="identifier: ASCII_ZERO [53418,53428]"/>
  <match src="number_literal: 0 [98306,98307]" dest="number_literal: 0 [37462,37463]"/>
  <match src="parameter [69213,69220]" dest="parameter [62614,62621]"/>
  <match src="): ) [48020,48021]" dest="): ) [18153,18154]"/>
  <match src="uint256: uint256 [76147,76154]" dest="uint256: uint256 [84322,84329]"/>
  <match src=",: , [8554,8555]" dest=",: , [9118,9119]"/>
  <match src="): ) [104970,104971]" dest="): ) [44126,44127]"/>
  <match src="returns: returns [93302,93309]" dest="returns: returns [32458,32465]"/>
  <match src="interface: interface [11438,11447]" dest="interface: interface [24427,24436]"/>
  <match src="function: function [31436,31444]" dest="function: function [49830,49838]"/>
  <match src=",: , [45085,45086]" dest=",: , [15218,15219]"/>
  <match src="returns: returns [98237,98244]" dest="returns: returns [37393,37400]"/>
  <match src="]: ] [102889,102890]" dest="]: ] [42045,42046]"/>
  <match src="}: } [45544,45545]" dest="}: } [15677,15678]"/>
  <match src="(: ( [88146,88147]" dest="(: ( [29646,29647]"/>
  <match src="variable_declaration [36241,36254]" dest="variable_declaration [54635,54648]"/>
  <match src="(: ( [34945,34946]" dest="(: ( [53339,53340]"/>
  <match src="return_type_definition [69204,69221]" dest="return_type_definition [62605,62622]"/>
  <match src="): ) [103014,103015]" dest="): ) [42170,42171]"/>
  <match src="}: } [7948,7949]" dest="}: } [8512,8513]"/>
  <match src="primitive_type [55255,55259]" dest="primitive_type [23104,23108]"/>
  <match src="identifier: reason [101966,101972]" dest="identifier: reason [41122,41128]"/>
  <match src="identifier: b [399,400]" dest="identifier: b [963,964]"/>
  <match src="identifier: that [84169,84173]" dest="identifier: that [81084,81088]"/>
  <match src="external: external [54928,54936]" dest="external: external [22777,22785]"/>
  <match src="view: view [93809,93813]" dest="view: view [32965,32969]"/>
  <match src="identifier: b [6793,6794]" dest="identifier: b [7357,7358]"/>
  <match src="parameter [8167,8183]" dest="parameter [8731,8747]"/>
  <match src="+: + [36773,36774]" dest="+: + [55167,55168]"/>
  <match src="call_argument [76009,76015]" dest="call_argument [56519,56525]"/>
  <match src="}: } [98452,98453]" dest="}: } [37608,37609]"/>
  <match src="identifier: coupons [94181,94188]" dest="identifier: coupons [33337,33344]"/>
  <match src="): ) [81609,81610]" dest="): ) [72132,72133]"/>
  <match src="view: view [97553,97557]" dest="view: view [36709,36713]"/>
  <match src="return_type_definition [56047,56061]" dest="return_type_definition [23896,23910]"/>
  <match src="identifier: _state [102866,102872]" dest="identifier: _state [42022,42028]"/>
  <match src="comment: // 24 epochs fluid = 4 days [43377,43404]" dest="comment: // 24 epochs fluid = 4 days [13510,13537]"/>
  <match src="identifier: epoch [95827,95832]" dest="identifier: epoch [34983,34988]"/>
  <match src="expression_statement [33301,33305]" dest="expression_statement [51695,51699]"/>
  <match src="user_defined_type [6730,6734]" dest="user_defined_type [7294,7298]"/>
  <match src="[: [ [101563,101564]" dest="[: [ [40719,40720]"/>
  <match src="returns: returns [32892,32899]" dest="returns: returns [51286,51293]"/>
  <match src="[: [ [34524,34525]" dest="[: [ [52918,52919]"/>
  <match src="identifier: fluidUntil [95303,95313]" dest="identifier: fluidUntil [34459,34469]"/>
  <match src="[: [ [103244,103245]" dest="[: [ [42400,42401]"/>
  <match src="identifier: decimals [92934,92942]" dest="identifier: decimals [32090,32098]"/>
  <match src="event_paramater [55458,55476]" dest="event_paramater [23307,23325]"/>
  <match src="uint256: uint256 [42321,42328]" dest="uint256: uint256 [12454,12461]"/>
  <match src="type_name [31459,31463]" dest="type_name [49853,49857]"/>
  <match src="parameter [8216,8236]" dest="parameter [8780,8800]"/>
  <match src="(: ( [105191,105192]" dest="(: ( [44347,44348]"/>
  <match src="uint256: uint256 [9791,9798]" dest="uint256: uint256 [10355,10362]"/>
  <match src="}: } [100477,100478]" dest="}: } [39633,39634]"/>
  <match src="function: function [95756,95764]" dest="function: function [34912,34920]"/>
  <match src="[: [ [104688,104689]" dest="[: [ [43844,43845]"/>
  <match src="return_statement [6977,7037]" dest="return_statement [7541,7601]"/>
  <match src=".: . [103454,103455]" dest=".: . [42610,42611]"/>
  <match src="parameter [7328,7339]" dest="parameter [7892,7903]"/>
  <match src="identifier: input [34712,34717]" dest="identifier: input [53106,53111]"/>
  <match src="+: + [36869,36870]" dest="+: + [55263,55264]"/>
  <match src="member_expression [83110,83122]" dest="member_expression [82096,82108]"/>
  <match src="private: private [43770,43777]" dest="private: private [13903,13910]"/>
  <match src="visibility [41601,41608]" dest="visibility [11734,11741]"/>
  <match src="=: = [105102,105103]" dest="=: = [44258,44259]"/>
  <match src="if_statement [103982,104049]" dest="if_statement [43138,43205]"/>
  <match src="call_argument [9445,9446]" dest="call_argument [10009,10010]"/>
  <match src="(: ( [5879,5880]" dest="(: ( [6443,6444]"/>
  <match src="type_name [46292,46304]" dest="type_name [16425,16437]"/>
  <match src="}: } [47466,47467]" dest="}: } [17599,17600]"/>
  <match src="identifier: approve [97888,97895]" dest="identifier: approve [37044,37051]"/>
  <match src="(: ( [47392,47393]" dest="(: ( [17525,17526]"/>
  <match src="solidity_version_comparison_operator [15,17]" dest="solidity_version_comparison_operator [15,17]"/>
  <match src="contract: contract [99320,99328]" dest="contract: contract [38476,38484]"/>
  <match src="identifier: period [88710,88716]" dest="identifier: period [30210,30216]"/>
  <match src="address: address [54533,54540]" dest="address: address [22382,22389]"/>
  <match src="parameter [103656,103669]" dest="parameter [42812,42825]"/>
  <match src=",: , [32420,32421]" dest=",: , [50814,50815]"/>
  <match src="{: { [5919,5920]" dest="{: { [6483,6484]"/>
  <match src="&amp;: &amp; [35407,35408]" dest="&amp;: &amp; [53801,53802]"/>
  <match src="(: ( [106953,106954]" dest="(: ( [70295,70296]"/>
  <match src="=&gt;: =&gt; [88155,88157]" dest="=&gt;: =&gt; [29655,29657]"/>
  <match src="array_access [102603,102623]" dest="array_access [41759,41779]"/>
  <match src="binary_expression [1317,1323]" dest="binary_expression [1881,1887]"/>
  <match src="internal: internal [6275,6283]" dest="internal: internal [6839,6847]"/>
  <match src="(: ( [36760,36761]" dest="(: ( [55154,55155]"/>
  <match src="identifier: _state [101548,101554]" dest="identifier: _state [40704,40710]"/>
  <match src="return_statement [2075,2084]" dest="return_statement [2639,2648]"/>
  <match src="extcodesize: extcodesize [87187,87198]" dest="extcodesize: extcodesize [75697,75708]"/>
  <match src="external: external [54996,55004]" dest="external: external [22845,22853]"/>
  <match src="): ) [96638,96639]" dest="): ) [35794,35795]"/>
  <match src="state_variable_declaration [42568,42619]" dest="state_variable_declaration [12701,12752]"/>
  <match src="identifier: Status [95245,95251]" dest="identifier: Status [34401,34407]"/>
  <match src="=: = [100748,100749]" dest="=: = [39904,39905]"/>
  <match src="type_name [82474,82481]" dest="type_name [67604,67611]"/>
  <match src="variable_declaration_statement [74036,74072]" dest="variable_declaration_statement [68388,68432]"/>
  <match src="event_paramater [53492,53504]" dest="event_paramater [61449,61472]"/>
  <match src="identifier: value [84755,84760]" dest="identifier: candidate [81735,81744]"/>
  <match src="identifier: D256 [5914,5918]" dest="identifier: D256 [6478,6482]"/>
  <match src="identifier: epochTimeWithStrategy [96028,96049]" dest="identifier: epochTimeWithStrategy [35184,35205]"/>
  <match src="member_expression [101331,101352]" dest="member_expression [40487,40508]"/>
  <match src="string_literal [83584,83619]" dest="string_literal [81645,81659]"/>
  <match src="type_name [28321,28328]" dest="type_name [46715,46722]"/>
  <match src="type_name [41835,41842]" dest="type_name [11968,11975]"/>
  <match src="type_name [6950,6954]" dest="type_name [7514,7518]"/>
  <match src="type_name [100665,100672]" dest="type_name [39821,39828]"/>
  <match src="primitive_type [20450,20457]" dest="primitive_type [59596,59603]"/>
  <match src="expression_statement [82681,82725]" dest="expression_statement [73405,73450]"/>
  <match src="(: ( [363,364]" dest="(: ( [927,928]"/>
  <match src="visibility [46552,46560]" dest="visibility [16685,16693]"/>
  <match src="state_mutability [54873,54877]" dest="state_mutability [22722,22726]"/>
  <match src="identifier: epochs [96833,96839]" dest="identifier: epochs [35989,35995]"/>
  <match src="primitive_type [35660,35667]" dest="primitive_type [54054,54061]"/>
  <match src="identifier: Decimal [47587,47594]" dest="identifier: Decimal [17720,17727]"/>
  <match src="binary_expression [103985,104016]" dest="binary_expression [43141,43172]"/>
  <match src="(: ( [94139,94140]" dest="(: ( [33295,33296]"/>
  <match src="return: return [94159,94165]" dest="return: return [33315,33321]"/>
  <match src="function: function [105374,105382]" dest="function: function [44530,44538]"/>
  <match src="view: view [94400,94404]" dest="view: view [33556,33560]"/>
  <match src="identifier: FILE [84239,84243]" dest="identifier: FILE [81135,81139]"/>
  <match src="identifier: mul [84524,84527]" dest="identifier: mul [73911,73914]"/>
  <match src="call_argument [36767,36785]" dest="call_argument [55161,55179]"/>
  <match src="(: ( [74698,74699]" dest="(: ( [62941,62942]"/>
  <match src="primitive_type [43140,43147]" dest="primitive_type [13273,13280]"/>
  <match src="uint256: uint256 [7097,7104]" dest="uint256: uint256 [7661,7668]"/>
  <match src="state_mutability [92756,92760]" dest="state_mutability [31912,31916]"/>
  <match src="): ) [101527,101528]" dest="): ) [40683,40684]"/>
  <match src="memory: memory [46305,46311]" dest="memory: memory [16438,16444]"/>
  <match src="call_expression [7916,7939]" dest="call_expression [8480,8503]"/>
  <match src="): ) [53348,53349]" dest="): ) [65919,65920]"/>
  <match src="call_expression [29084,29108]" dest="call_expression [47478,47502]"/>
  <match src="type_name [46689,46696]" dest="type_name [16822,16829]"/>
  <match src=",: , [100883,100884]" dest=",: , [40039,40040]"/>
  <match src="(: ( [36599,36600]" dest="(: ( [54993,54994]"/>
  <match src="): ) [94524,94525]" dest="): ) [33680,33681]"/>
  <match src="(: ( [55318,55319]" dest="(: ( [23167,23168]"/>
  <match src=".: . [104699,104700]" dest=".: . [43855,43856]"/>
  <match src="): ) [54289,54290]" dest="): ) [22138,22139]"/>
  <match src="string [19141,19180]" dest="string [64016,64033]"/>
  <match src="returns: returns [45457,45464]" dest="returns: returns [15590,15597]"/>
  <match src="identifier: _transfer [19693,19702]" dest="identifier: transferCoupons [65294,65309]"/>
  <match src=".: . [101938,101939]" dest=".: . [41094,41095]"/>
  <match src="): ) [74070,74071]" dest="): ) [68430,68431]"/>
  <match src="visibility [48131,48139]" dest="visibility [18264,18272]"/>
  <match src="type_name [105448,105455]" dest="type_name [44604,44611]"/>
  <match src="(: ( [93924,93925]" dest="(: ( [33080,33081]"/>
  <match src="return: return [96420,96426]" dest="return: return [35576,35582]"/>
  <match src="array_access [96988,97028]" dest="array_access [36144,36184]"/>
  <match src="): ) [35225,35226]" dest="): ) [53619,53620]"/>
  <match src="identifier: c [2082,2083]" dest="identifier: c [2646,2647]"/>
  <match src=",: , [28638,28639]" dest=",: , [47032,47033]"/>
  <match src="identifier: input [34270,34275]" dest="identifier: input [52664,52669]"/>
  <match src="type_name [54097,54104]" dest="type_name [21946,21953]"/>
  <match src="return_type_definition [70146,70163]" dest="return_type_definition [57096,57113]"/>
  <match src="string [81022,81028]" dest="string [71451,71460]"/>
  <match src="function: function [56210,56218]" dest="function: function [24059,24067]"/>
  <match src="parameter [95485,95492]" dest="parameter [34641,34648]"/>
  <match src="(: ( [44860,44861]" dest="(: ( [14993,14994]"/>
  <match src="memory: memory [6545,6551]" dest="memory: memory [7109,7115]"/>
  <match src="member_expression [96191,96291]" dest="member_expression [35347,35447]"/>
  <match src="return_type_definition [92761,92784]" dest="return_type_definition [31917,31940]"/>
  <match src="state_mutability [94126,94130]" dest="state_mutability [33282,33286]"/>
  <match src="uint112: uint112 [55816,55823]" dest="uint112: uint112 [23665,23672]"/>
  <match src="call_expression [74058,74071]" dest="call_expression [68414,68431]"/>
  <match src="visibility [81776,81784]" dest="visibility [72274,72282]"/>
  <match src="identifier: D256 [47557,47561]" dest="identifier: D256 [17690,17694]"/>
  <match src="false: false [99715,99720]" dest="false: false [38871,38876]"/>
  <match src="array_access [96687,96707]" dest="array_access [35843,35863]"/>
  <match src="parameter [100353,100367]" dest="parameter [39509,39523]"/>
  <match src="(: ( [81596,81597]" dest="(: ( [72119,72120]"/>
  <match src="member_expression [100920,100952]" dest="member_expression [40076,40108]"/>
  <match src="member_expression [83370,83380]" dest="member_expression [73383,73393]"/>
  <match src="=: = [36352,36353]" dest="=: = [54746,54747]"/>
  <match src="identifier: _state [101009,101015]" dest="identifier: _state [40165,40171]"/>
  <match src="parameter [99658,99672]" dest="parameter [38814,38828]"/>
  <match src=",: , [83155,83156]" dest=",: , [82225,82226]"/>
  <match src="member_expression [100281,100300]" dest="member_expression [39437,39456]"/>
  <match src="uint: uint [54122,54126]" dest="uint: uint [21971,21975]"/>
  <match src="type_name [93925,93932]" dest="type_name [33081,33088]"/>
  <match src="identifier: _state [104525,104531]" dest="identifier: _state [43681,43687]"/>
  <match src="identifier: value [47445,47450]" dest="identifier: value [17578,17583]"/>
  <match src="(: ( [83948,83949]" dest="(: ( [59271,59272]"/>
  <match src=",: , [28265,28266]" dest=",: , [46659,46660]"/>
  <match src="identifier: msg [84649,84652]" dest="identifier: msg [64239,64242]"/>
  <match src="primitive_type [44385,44392]" dest="primitive_type [14518,14525]"/>
  <match src="): ) [46929,46930]" dest="): ) [17062,17063]"/>
  <match src="returns: returns [55692,55699]" dest="returns: returns [23541,23548]"/>
  <match src="identifier: file [29103,29107]" dest="identifier: file [47497,47501]"/>
  <match src="(: ( [6792,6793]" dest="(: ( [7356,7357]"/>
  <match src="): ) [83225,83226]" dest="): ) [82292,82293]"/>
  <match src="identifier: result [35046,35052]" dest="identifier: result [53440,53446]"/>
  <match src="call_argument [31041,31046]" dest="call_argument [49435,49440]"/>
  <match src="): ) [47524,47525]" dest="): ) [17657,17658]"/>
  <match src="}: } [47102,47103]" dest="}: } [17235,17236]"/>
  <match src="}: } [48094,48095]" dest="}: } [18227,18228]"/>
  <match src="call_argument [81657,81662]" dest="call_argument [72180,72185]"/>
  <match src="identifier: amount1 [56196,56203]" dest="identifier: amount1 [24045,24052]"/>
  <match src="array_access [35517,35535]" dest="array_access [53911,53929]"/>
  <match src="type_name [105410,105417]" dest="type_name [44566,44573]"/>
  <match src="constant: constant [42226,42234]" dest="constant: constant [12359,12367]"/>
  <match src="): ) [48561,48562]" dest="): ) [18694,18695]"/>
  <match src="(: ( [81294,81295]" dest="(: ( [71596,71597]"/>
  <match src=".: . [101039,101040]" dest=".: . [40195,40196]"/>
  <match src="primitive_type [27873,27880]" dest="primitive_type [46267,46274]"/>
  <match src="call_argument [32640,32648]" dest="call_argument [51034,51042]"/>
  <match src="identifier: value [81604,81609]" dest="identifier: value [72127,72132]"/>
  <match src="primitive_type [55593,55597]" dest="primitive_type [23442,23446]"/>
  <match src="identifier: self [8326,8330]" dest="identifier: self [8890,8894]"/>
  <match src="identifier: _state [100553,100559]" dest="identifier: _state [39709,39715]"/>
  <match src="call_expression [6998,7033]" dest="call_expression [7562,7597]"/>
  <match src="parameter [96930,96939]" dest="parameter [36086,36095]"/>
  <match src="parameter [13518,13522]" dest="parameter [26507,26511]"/>
  <match src="function: function [30673,30681]" dest="function: function [49067,49075]"/>
  <match src="identifier: INCENTIVE [43186,43195]" dest="identifier: INCENTIVE [13319,13328]"/>
  <match src="member_expression [104915,104951]" dest="member_expression [44071,44107]"/>
  <match src="primitive_type [13750,13757]" dest="primitive_type [26739,26746]"/>
  <match src="external: external [82997,83005]" dest="external: external [73150,73158]"/>
  <match src="(: ( [107273,107274]" dest="(: ( [70615,70616]"/>
  <match src="function_definition [98320,98453]" dest="function_definition [37476,37609]"/>
  <match src=".: . [100438,100439]" dest=".: . [39594,39595]"/>
  <match src="uint256: uint256 [45623,45630]" dest="uint256: uint256 [15756,15763]"/>
  <match src="using: using [92536,92541]" dest="using: using [31692,31697]"/>
  <match src="}: } [88246,88247]" dest="}: } [29746,29747]"/>
  <match src="expression_statement [81863,81944]" dest="expression_statement [72369,72453]"/>
  <match src="expression_statement [7672,7678]" dest="expression_statement [8236,8242]"/>
  <match src=".: . [97753,97754]" dest=".: . [36909,36910]"/>
  <match src="user_defined_type [6137,6141]" dest="user_defined_type [6701,6705]"/>
  <match src="expression_statement [21106,21174]" dest="expression_statement [64554,64658]"/>
  <match src="expression_statement [21283,21323]" dest="expression_statement [56903,56924]"/>
  <match src="memory: memory [6735,6741]" dest="memory: memory [7299,7305]"/>
  <match src="variable_declaration [68180,68204]" dest="variable_declaration [68028,68045]"/>
  <match src="call_expression [32554,32573]" dest="call_expression [50948,50967]"/>
  <match src=",: , [54703,54704]" dest=",: , [22552,22553]"/>
  <match src=".: . [99991,99992]" dest=".: . [39147,39148]"/>
  <match src="primitive_type [29495,29502]" dest="primitive_type [47889,47896]"/>
  <match src="&quot;: &quot; [92905,92906]" dest="&quot;: &quot; [32061,32062]"/>
  <match src=".: . [97887,97888]" dest=".: . [37043,37044]"/>
  <match src="call_expression [85076,85083]" dest="call_expression [59476,59483]"/>
  <match src="parameter [55646,55653]" dest="parameter [23495,23502]"/>
  <match src="comment: // ' &lt;' [27662,27669]" dest="comment: // ' &lt;' [46056,46063]"/>
  <match src="identifier: stringifyTruncated [28130,28148]" dest="identifier: stringifyTruncated [46524,46542]"/>
  <match src=".: . [6794,6795]" dest=".: . [7358,7359]"/>
  <match src="identifier: accounts [105637,105645]" dest="identifier: accounts [44793,44801]"/>
  <match src="pure: pure [47030,47034]" dest="pure: pure [17163,17167]"/>
  <match src="uint256: uint256 [96764,96771]" dest="uint256: uint256 [35920,35927]"/>
  <match src="parameter [54435,54439]" dest="parameter [22284,22288]"/>
  <match src="identifier: D256 [8599,8603]" dest="identifier: D256 [9163,9167]"/>
  <match src="uint256: uint256 [48359,48366]" dest="uint256: uint256 [18492,18499]"/>
  <match src="number_literal: 0 [34043,34044]" dest="number_literal: 0 [52437,52438]"/>
  <match src="identifier: SUPPLY_CHANGE_LIMIT [47906,47925]" dest="identifier: SUPPLY_CHANGE_LIMIT [18039,18058]"/>
  <match src="&quot;: &quot; [19841,19842]" dest="&quot;: &quot; [65471,65472]"/>
  <match src="struct_member [42069,42084]" dest="struct_member [12202,12217]"/>
  <match src="): ) [34317,34318]" dest="): ) [52711,52712]"/>
  <match src="type_name [6137,6141]" dest="type_name [6701,6705]"/>
  <match src="(: ( [100223,100224]" dest="(: ( [39379,39380]"/>
  <match src="): ) [91258,91259]" dest="): ) [77568,77569]"/>
  <match src="user_defined_type [9209,9213]" dest="user_defined_type [9773,9777]"/>
  <match src="memory: memory [67593,67599]" dest="memory: memory [67100,67106]"/>
  <match src="(: ( [46291,46292]" dest="(: ( [16424,16425]"/>
  <match src="=: = [84410,84411]" dest="=: = [81011,81012]"/>
  <match src="call_argument [21315,21321]" dest="call_argument [59681,59687]"/>
  <match src="}: } [104581,104582]" dest="}: } [43737,43738]"/>
  <match src="parameter [79628,79642]" dest="parameter [80839,80856]"/>
  <match src=",: , [81655,81656]" dest=",: , [72178,72179]"/>
  <match src="identifier: b [837,838]" dest="identifier: b [1401,1402]"/>
  <match src="private: private [42218,42225]" dest="private: private [12351,12358]"/>
  <match src="function_definition [92834,92919]" dest="function_definition [31990,32075]"/>
  <match src="): ) [93154,93155]" dest="): ) [32310,32311]"/>
  <match src=",: , [55267,55268]" dest=",: , [23116,23117]"/>
  <match src="identifier: value [82005,82010]" dest="identifier: value [72489,72494]"/>
  <match src="view: view [94126,94130]" dest="view: view [33282,33286]"/>
  <match src="function: function [21806,21814]" dest="function: function [64999,65007]"/>
  <match src="call_expression [4709,4738]" dest="call_expression [5273,5302]"/>
  <match src="identifier: compareTo [9143,9152]" dest="identifier: compareTo [9707,9716]"/>
  <match src="return: return [33660,33666]" dest="return: return [52054,52060]"/>
  <match src="member_expression [100553,100567]" dest="member_expression [39709,39723]"/>
  <match src="function_body [45020,45169]" dest="function_body [15153,15302]"/>
  <match src="=: = [393,394]" dest="=: = [957,958]"/>
  <match src="}: } [31429,31430]" dest="}: } [49823,49824]"/>
  <match src="call_argument [6579,6617]" dest="call_argument [7143,7181]"/>
  <match src="contract_body [86262,87242]" dest="contract_body [74772,75752]"/>
  <match src="type_cast_expression [35967,35990]" dest="type_cast_expression [54361,54384]"/>
  <match src=".: . [105654,105655]" dest=".: . [44810,44811]"/>
  <match src="using: using [75688,75693]" dest="using: using [83589,83594]"/>
  <match src="array_access [103229,103277]" dest="array_access [42385,42433]"/>
  <match src="function_body [100400,100478]" dest="function_body [39556,39634]"/>
  <match src="identifier: amount [102578,102584]" dest="identifier: amount [41734,41740]"/>
  <match src="call_expression [108439,108447]" dest="call_expression [68855,68863]"/>
  <match src="identifier: z [35405,35406]" dest="identifier: z [53799,53800]"/>
  <match src="contract: contract [87928,87936]" dest="contract: contract [29428,29436]"/>
  <match src="return: return [6977,6983]" dest="return: return [7541,7547]"/>
  <match src="}: } [104977,104978]" dest="}: } [44133,44134]"/>
  <match src="return: return [97852,97858]" dest="return: return [37008,37014]"/>
  <match src="identifier: add [101614,101617]" dest="identifier: add [40770,40773]"/>
  <match src="parameter [12384,12391]" dest="parameter [25373,25380]"/>
  <match src="identifier: epoch [95109,95114]" dest="identifier: epoch [34265,34270]"/>
  <match src="(: ( [54409,54410]" dest="(: ( [22258,22259]"/>
  <match src=",: , [56268,56269]" dest=",: , [24117,24118]"/>
  <match src="return_type_definition [93168,93185]" dest="return_type_definition [32324,32341]"/>
  <match src="primitive_type [93311,93318]" dest="primitive_type [32467,32474]"/>
  <match src="call_argument [82591,82596]" dest="call_argument [72769,72804]"/>
  <match src="primitive_type [54074,54081]" dest="primitive_type [21923,21930]"/>
  <match src="identifier: ORACLE_RESERVE_MINIMUM [41860,41882]" dest="identifier: ORACLE_RESERVE_MINIMUM [11993,12015]"/>
  <match src="identifier: sender [83569,83575]" dest="identifier: sender [80735,80741]"/>
  <match src="): ) [85701,85702]" dest="): ) [79962,79963]"/>
  <match src="number_literal: 0 [35008,35009]" dest="number_literal: 0 [53402,53403]"/>
  <match src="identifier: newImplementation [91024,91041]" dest="identifier: newImplementation [77334,77351]"/>
  <match src="primitive_type [16990,16997]" dest="primitive_type [59735,59742]"/>
  <match src="address: address [13465,13472]" dest="address: address [26454,26461]"/>
  <match src="identifier: result [36333,36339]" dest="identifier: result [54727,54733]"/>
  <match src="visibility [101529,101537]" dest="visibility [40685,40693]"/>
  <match src="parameter [31524,31540]" dest="parameter [49918,49934]"/>
  <match src="member_expression [85076,85129]" dest="member_expression [59224,59296]"/>
  <match src="identifier: Require [85456,85463]" dest="identifier: Require [79347,79354]"/>
  <match src="): ) [98483,98484]" dest="): ) [37639,37640]"/>
  <match src="identifier: votes [104554,104559]" dest="identifier: votes [43710,43715]"/>
  <match src="function_definition [96455,96592]" dest="function_definition [35611,35748]"/>
  <match src="contract_body [11455,14004]" dest="contract_body [24444,26993]"/>
  <match src="identifier: COMMA [31201,31206]" dest="identifier: COMMA [49595,49600]"/>
  <match src="parameter [92770,92783]" dest="parameter [31926,31939]"/>
  <match src="identifier: decrementBalanceOfClaimable [82141,82168]" dest="identifier: unfreeze [73773,73781]"/>
  <match src="visibility [45721,45729]" dest="visibility [15854,15862]"/>
  <match src="function_definition [100631,100802]" dest="function_definition [39787,39958]"/>
  <match src="type_name [101160,101167]" dest="type_name [40316,40323]"/>
  <match src="string [85684,85692]" dest="string [79946,79953]"/>
  <match src="{: { [74103,74104]" dest="{: { [63166,63167]"/>
  <match src="identifier: newUniv2 [81456,81464]" dest="identifier: period [79054,79060]"/>
  <match src=",: , [50973,50974]" dest=",: , [65612,65613]"/>
  <match src="comment: // for each byte (starting from the lowest byte), populate the result with two characters [35096,35185]" dest="comment: // for each byte (starting from the lowest byte), populate the result with two characters [53490,53579]"/>
  <match src="user_defined_type [108051,108062]" dest="user_defined_type [78822,78833]"/>
  <match src="type_name [47722,47729]" dest="type_name [17855,17862]"/>
  <match src="function: function [9464,9472]" dest="function: function [10028,10036]"/>
  <match src="state_mutability [1276,1280]" dest="state_mutability [1840,1844]"/>
  <match src=".: . [89165,89166]" dest=".: . [30665,30666]"/>
  <match src="parameter [55062,55077]" dest="parameter [22911,22926]"/>
  <match src="visibility [6275,6283]" dest="visibility [6839,6847]"/>
  <match src="identifier: BOOTSTRAPPING_SPEEDUP_FACTOR [45649,45677]" dest="identifier: BOOTSTRAPPING_SPEEDUP_FACTOR [15782,15810]"/>
  <match src=",: , [103186,103187]" dest=",: , [42342,42343]"/>
  <match src="): ) [106663,106664]" dest="): ) [70005,70006]"/>
  <match src="identifier: reason [102699,102705]" dest="identifier: reason [41855,41861]"/>
  <match src="primitive_type [79628,79635]" dest="primitive_type [80839,80846]"/>
  <match src="expression_statement [23114,23141]" dest="expression_statement [56685,56719]"/>
  <match src="return_statement [97119,97154]" dest="return_statement [36275,36310]"/>
  <match src="call_argument [101314,101320]" dest="call_argument [40470,40476]"/>
  <match src="internal: internal [103210,103218]" dest="internal: internal [42366,42374]"/>
  <match src="binary_expression [395,400]" dest="binary_expression [959,964]"/>
  <match src="): ) [98615,98616]" dest="): ) [37771,37772]"/>
  <match src=",: , [81072,81073]" dest=",: , [71504,71505]"/>
  <match src="type_name [4690,4697]" dest="type_name [5254,5261]"/>
  <match src="=: = [35965,35966]" dest="=: = [54359,54360]"/>
  <match src="type_name [54377,54382]" dest="type_name [22226,22231]"/>
  <match src="identifier: Decimal [68122,68129]" dest="identifier: Decimal [68782,68789]"/>
  <match src="member_expression [68505,68518]" dest="member_expression [82693,82706]"/>
  <match src="identifier: approve [13055,13062]" dest="identifier: approve [26044,26051]"/>
  <match src="call_argument [53138,53150]" dest="call_argument [65785,65795]"/>
  <match src="return_type_definition [93302,93319]" dest="return_type_definition [32458,32475]"/>
  <match src="=: = [41482,41483]" dest="=: = [11615,11616]"/>
  <match src="visibility [42677,42684]" dest="visibility [12810,12817]"/>
  <match src="binary_expression [43275,43293]" dest="binary_expression [13408,13426]"/>
  <match src="): ) [9269,9270]" dest="): ) [9833,9834]"/>
  <match src="type_name [48261,48268]" dest="type_name [18394,18401]"/>
  <match src="primitive_type [70973,70980]" dest="primitive_type [66819,66826]"/>
  <match src="identifier: EPOCH_OFFSET [45073,45085]" dest="identifier: EPOCH_OFFSET [15206,15218]"/>
  <match src="visibility [9242,9250]" dest="visibility [9806,9814]"/>
  <match src="call_expression [8092,8132]" dest="call_expression [8656,8696]"/>
  <match src="enum_value: APPROVE [88621,88628]" dest="enum_value: APPROVE [30121,30128]"/>
  <match src="call_argument [22115,22122]" dest="call_argument [65256,65263]"/>
  <match src="}: } [48203,48204]" dest="}: } [18336,18337]"/>
  <match src="uint256: uint256 [48261,48268]" dest="uint256: uint256 [18394,18401]"/>
  <match src="identifier: epochs [102653,102659]" dest="identifier: epochs [41809,41815]"/>
  <match src="): ) [105360,105361]" dest="): ) [44516,44517]"/>
  <match src="identifier: COLON [29134,29139]" dest="identifier: COLON [47528,47533]"/>
  <match src="identifier: balance [100588,100595]" dest="identifier: balance [39744,39751]"/>
  <match src="identifier: payloadA [29259,29267]" dest="identifier: payloadA [47653,47661]"/>
  <match src="): ) [101448,101449]" dest="): ) [40604,40605]"/>
  <match src="identifier: getEpochStrategy [95965,95981]" dest="identifier: getEpochStrategy [35121,35137]"/>
  <match src="struct_member [88751,88766]" dest="struct_member [30251,30266]"/>
  <match src="): ) [9928,9929]" dest="): ) [10492,10493]"/>
  <match src="primitive_type [102435,102442]" dest="primitive_type [41591,41598]"/>
  <match src="internal: internal [48336,48344]" dest="internal: internal [18469,18477]"/>
  <match src=".: . [50019,50020]" dest=".: . [56415,56416]"/>
  <match src="user_defined_type [15751,15757]" dest="user_defined_type [60763,60768]"/>
  <match src="parameter [1689,1696]" dest="parameter [2253,2260]"/>
  <match src="constant: constant [27440,27448]" dest="constant: constant [45834,45842]"/>
  <match src="): ) [21172,21173]" dest="): ) [64656,64657]"/>
  <match src="return_type_definition [97091,97108]" dest="return_type_definition [36247,36264]"/>
  <match src="): ) [83529,83530]" dest="): ) [73524,73525]"/>
  <match src="[: [ [101862,101863]" dest="[: [ [41018,41019]"/>
  <match src="identifier: account [101504,101511]" dest="identifier: account [40660,40667]"/>
  <match src="identifier: ethicAmount [78995,79006]" dest="identifier: ethicAmount [63757,63768]"/>
  <match src="(: ( [93310,93311]" dest="(: ( [32466,32467]"/>
  <match src="if_statement [7535,7586]" dest="if_statement [8099,8150]"/>
  <match src="): ) [44861,44862]" dest="): ) [14994,14995]"/>
  <match src="return_type_definition [68113,68142]" dest="return_type_definition [68773,68802]"/>
  <match src="call_argument [83766,83776]" dest="call_argument [73628,73638]"/>
  <match src=",: , [31726,31727]" dest=",: , [50120,50121]"/>
  <match src="): ) [94421,94422]" dest="): ) [33577,33578]"/>
  <match src="call_argument [29800,29826]" dest="call_argument [48194,48220]"/>
  <match src="uint256: uint256 [11995,12002]" dest="uint256: uint256 [24984,24991]"/>
  <match src="identifier: denominator [9934,9945]" dest="identifier: denominator [10498,10509]"/>
  <match src="identifier: value [7381,7386]" dest="identifier: value [7945,7950]"/>
  <match src="call_argument [84592,84602]" dest="call_argument [72892,72902]"/>
  <match src="identifier: Decimal [92542,92549]" dest="identifier: Decimal [31698,31705]"/>
  <match src="type_name [92554,92566]" dest="type_name [31710,31722]"/>
  <match src="): ) [104016,104017]" dest="): ) [43172,43173]"/>
  <match src="function_body [68143,68690]" dest="function_body [67800,68168]"/>
  <match src="function: function [23046,23054]" dest="function: function [56608,56616]"/>
  <match src=".: . [91181,91182]" dest=".: . [77491,77492]"/>
  <match src="uint256: uint256 [2603,2610]" dest="uint256: uint256 [3167,3174]"/>
  <match src="]: ] [97620,97621]" dest="]: ] [36776,36777]"/>
  <match src="): ) [9639,9640]" dest="): ) [10203,10204]"/>
  <match src="uint256: uint256 [45858,45865]" dest="uint256: uint256 [15991,15998]"/>
  <match src="): ) [103427,103428]" dest="): ) [42583,42584]"/>
  <match src="external: external [56361,56369]" dest="external: external [24210,24218]"/>
  <match src="function: function [82305,82313]" dest="function: function [72508,72516]"/>
  <match src="uint: uint [55360,55364]" dest="uint: uint [23209,23213]"/>
  <match src="type_name [6306,6310]" dest="type_name [6870,6874]"/>
  <match src="identifier: balance [101666,101673]" dest="identifier: balance [40822,40829]"/>
  <match src="function_body [104515,104582]" dest="function_body [43671,43738]"/>
  <match src="identifier: b [6877,6878]" dest="identifier: b [7441,7442]"/>
  <match src="function_body [97233,97300]" dest="function_body [36389,36456]"/>
  <match src="call_expression [91062,91098]" dest="call_expression [77372,77408]"/>
  <match src="identifier: D256 [8714,8718]" dest="identifier: D256 [9278,9282]"/>
  <match src="[: [ [36477,36478]" dest="[: [ [54871,54872]"/>
  <match src="identifier: epoch [103664,103669]" dest="identifier: epoch [42820,42825]"/>
  <match src="]: ] [96845,96846]" dest="]: ] [36001,36002]"/>
  <match src="number_literal: 30e16 [42613,42618]" dest="number_literal: 30e16 [12746,12751]"/>
  <match src="return_type_definition [97690,97707]" dest="return_type_definition [36846,36863]"/>
  <match src="identifier: DOMAIN_SEPARATOR [54845,54861]" dest="identifier: DOMAIN_SEPARATOR [22694,22710]"/>
  <match src="state_mutability [10046,10050]" dest="state_mutability [10610,10614]"/>
  <match src="identifier: stringify [31232,31241]" dest="identifier: stringify [49626,49635]"/>
  <match src="(: ( [7421,7422]" dest="(: ( [7985,7986]"/>
  <match src="parameter [364,371]" dest="parameter [928,935]"/>
  <match src="identifier: periodFor [97649,97658]" dest="identifier: periodFor [36805,36814]"/>
  <match src="): ) [35422,35423]" dest="): ) [53816,53817]"/>
  <match src="pure: pure [6522,6526]" dest="pure: pure [7086,7090]"/>
  <match src=".: . [93759,93760]" dest=".: . [32915,32916]"/>
  <match src="call_argument [94294,94305]" dest="call_argument [33450,33461]"/>
  <match src="identifier: decrementBalanceOfStaged [81863,81887]" dest="identifier: decrementBalanceOfStaged [72369,72393]"/>
  <match src=".: . [89369,89370]" dest=".: . [30869,30870]"/>
  <match src="uint256: uint256 [99790,99797]" dest="uint256: uint256 [38946,38953]"/>
  <match src="primitive_type [44283,44290]" dest="primitive_type [14416,14423]"/>
  <match src="(: ( [101957,101958]" dest="(: ( [41113,41114]"/>
  <match src="(: ( [31241,31242]" dest="(: ( [49635,49636]"/>
  <match src="): ) [100017,100018]" dest="): ) [39173,39174]"/>
  <match src="identifier: msg [83278,83281]" dest="identifier: msg [80001,80004]"/>
  <match src=",: , [29223,29224]" dest=",: , [47617,47618]"/>
  <match src=",: , [20121,20122]" dest=",: , [65967,65968]"/>
  <match src="variable_declaration [35868,35887]" dest="variable_declaration [54262,54281]"/>
  <match src="primitive_type [56241,56245]" dest="primitive_type [24090,24094]"/>
  <match src=",: , [83459,83460]" dest=",: , [73993,73994]"/>
  <match src="primitive_type [43515,43522]" dest="primitive_type [13648,13655]"/>
  <match src="): ) [93830,93831]" dest="): ) [32986,32987]"/>
  <match src="memory: memory [7818,7824]" dest="memory: memory [8382,8388]"/>
  <match src="uint256: uint256 [79026,79033]" dest="uint256: uint256 [57531,57538]"/>
  <match src="function: function [31995,32003]" dest="function: function [50389,50397]"/>
  <match src="visibility [42329,42336]" dest="visibility [12462,12469]"/>
  <match src="identifier: account [101285,101292]" dest="identifier: account [40441,40448]"/>
  <match src="}: } [34641,34642]" dest="}: } [53035,53036]"/>
  <match src="false: false [66876,66881]" dest="false: false [82639,82644]"/>
  <match src="identifier: _state [97453,97459]" dest="identifier: _state [36609,36615]"/>
  <match src="(: ( [81644,81645]" dest="(: ( [72167,72168]"/>
  <match src="event_paramater [81350,81370]" dest="event_paramater [79151,79165]"/>
  <match src="identifier: value [54799,54804]" dest="identifier: value [22648,22653]"/>
  <match src="call_expression [85050,85216]" dest="call_expression [59198,59380]"/>
  <match src="&quot;: &quot; [106775,106776]" dest="&quot;: &quot; [70117,70118]"/>
  <match src="(: ( [85123,85124]" dest="(: ( [59289,59290]"/>
  <match src="identifier: sender [83660,83666]" dest="identifier: sender [80687,80693]"/>
  <match src="identifier: expiration [96716,96726]" dest="identifier: expiration [35872,35882]"/>
  <match src="bool: bool [8987,8991]" dest="bool: bool [9551,9555]"/>
  <match src="emit_statement [84730,84781]" dest="emit_statement [81711,81746]"/>
  <match src="enum: enum [87951,87955]" dest="enum: enum [29451,29455]"/>
  <match src="type_name [26048,26055]" dest="type_name [56633,56640]"/>
  <match src="&quot;: &quot; [33917,33918]" dest="&quot;: &quot; [52311,52312]"/>
  <match src="expression_statement [81954,81969]" dest="expression_statement [57228,57243]"/>
  <match src="primitive_type [91110,91114]" dest="primitive_type [77420,77424]"/>
  <match src="bytes32: bytes32 [28297,28304]" dest="bytes32: bytes32 [46691,46698]"/>
  <match src="expression_statement [35046,35086]" dest="expression_statement [53440,53480]"/>
  <match src="identifier: epoch [103884,103889]" dest="identifier: epoch [43040,43045]"/>
  <match src="uint256: uint256 [34786,34793]" dest="uint256: uint256 [53180,53187]"/>
  <match src="address: address [100868,100875]" dest="address: address [40024,40031]"/>
  <match src="state_mutability [7310,7314]" dest="state_mutability [7874,7878]"/>
  <match src="visibility [49823,49830]" dest="visibility [61954,61961]"/>
  <match src="function: function [51817,51825]" dest="function: function [27753,27761]"/>
  <match src="call_expression [73225,73257]" dest="call_expression [59224,59256]"/>
  <match src="return: return [46594,46600]" dest="return: return [16727,16733]"/>
  <match src="): ) [13094,13095]" dest="): ) [26083,26084]"/>
  <match src="function: function [6821,6829]" dest="function: function [7385,7393]"/>
  <match src="return_type_definition [99574,99588]" dest="return_type_definition [38730,38744]"/>
  <match src="(: ( [55230,55231]" dest="(: ( [23079,23080]"/>
  <match src="identifier: implementation [107274,107288]" dest="identifier: implementation [70616,70630]"/>
  <match src="expression_statement [100920,101000]" dest="expression_statement [40076,40156]"/>
  <match src=".: . [63879,63880]" dest=".: . [28667,28668]"/>
  <match src="}: } [36898,36899]" dest="}: } [55292,55293]"/>
  <match src="primitive_type [88425,88432]" dest="primitive_type [29925,29932]"/>
  <match src="pure: pure [27911,27915]" dest="pure: pure [46305,46309]"/>
  <match src="comment: /**      * Governance      */ [97306,97335]" dest="comment: /**      * Governance      */ [36462,36491]"/>
  <match src="comment: /**      * @dev Emitted when `value` tokens are moved from one account (`from`) to      * another (`to`).      *      * Note that `value` may be zero.      */ [13530,13688]" dest="comment: /**      * @dev Emitted when `value` tokens are moved from one account (`from`) to      * another (`to`).      *      * Note that `value` may be zero.      */ [26519,26677]"/>
  <match src="uint256: uint256 [51852,51859]" dest="uint256: uint256 [27788,27795]"/>
  <match src="returns: returns [96652,96659]" dest="returns: returns [35808,35815]"/>
  <match src=".: . [102631,102632]" dest=".: . [41787,41788]"/>
  <match src="member_expression [83656,83666]" dest="member_expression [80683,80693]"/>
  <match src="{: { [373,374]" dest="{: { [937,938]"/>
  <match src="call_argument [96050,96057]" dest="call_argument [35206,35213]"/>
  <match src="}: } [99726,99727]" dest="}: } [38882,38883]"/>
  <match src="identifier: mul [7207,7210]" dest="identifier: mul [7771,7774]"/>
  <match src="variable_declaration [36153,36162]" dest="variable_declaration [54547,54556]"/>
  <match src=",: , [56403,56404]" dest=",: , [24252,24253]"/>
  <match src="identifier: coupons [103798,103805]" dest="identifier: coupons [42954,42961]"/>
  <match src="user_defined_type [46292,46304]" dest="user_defined_type [16425,16437]"/>
  <match src="(: ( [97526,97527]" dest="(: ( [36682,36683]"/>
  <match src=".: . [101878,101879]" dest=".: . [41034,41035]"/>
  <match src="identifier: BASE [9673,9677]" dest="identifier: BASE [10237,10241]"/>
  <match src="call_expression [82363,82383]" dest="call_expression [73199,73255]"/>
  <match src="primitive_type [88045,88052]" dest="primitive_type [29545,29552]"/>
  <match src="identifier: that [28801,28805]" dest="identifier: that [47195,47199]"/>
  <match src="primitive_type [103876,103883]" dest="primitive_type [43032,43039]"/>
  <match src="function_definition [100325,100478]" dest="function_definition [39481,39634]"/>
  <match src="(: ( [84046,84047]" dest="(: ( [80889,80890]"/>
  <match src="uint8: uint8 [35018,35023]" dest="uint8: uint8 [53412,53417]"/>
  <match src="): ) [91593,91594]" dest="): ) [77903,77904]"/>
  <match src="type_name [81320,81327]" dest="type_name [71622,71629]"/>
  <match src="): ) [33894,33895]" dest="): ) [52288,52289]"/>
  <match src="call_struct_argument [6347,6376]" dest="call_struct_argument [6911,6940]"/>
  <match src="parameter [54465,54478]" dest="parameter [22314,22327]"/>
  <match src="(: ( [100779,100780]" dest="(: ( [39935,39936]"/>
  <match src="internal: internal [21087,21095]" dest="internal: internal [56884,56892]"/>
  <match src="uint256: uint256 [99549,99556]" dest="uint256: uint256 [38705,38712]"/>
  <match src="event_paramater [13987,14000]" dest="event_paramater [26976,26989]"/>
  <match src="(: ( [85062,85063]" dest="(: ( [59210,59211]"/>
  <match src="return: return [2622,2628]" dest="return: return [3186,3192]"/>
  <match src="block_statement [33896,33931]" dest="block_statement [52290,52325]"/>
  <match src="contract: contract [15724,15732]" dest="contract: contract [60731,60739]"/>
  <match src="identifier: _state [102130,102136]" dest="identifier: _state [41286,41292]"/>
  <match src="type_name [11578,11585]" dest="type_name [24567,24574]"/>
  <match src="identifier: account [26391,26398]" dest="identifier: account [84370,84377]"/>
  <match src="): ) [47178,47179]" dest="): ) [17311,17312]"/>
  <match src="view: view [96151,96155]" dest="view: view [35307,35311]"/>
  <match src="identifier: balance [101915,101922]" dest="identifier: balance [41071,41078]"/>
  <match src="identifier: stringifyTruncated [32313,32331]" dest="identifier: stringifyTruncated [50707,50725]"/>
  <match src="}: } [91777,91778]" dest="}: } [78087,78088]"/>
  <match src="(: ( [47523,47524]" dest="(: ( [17656,17657]"/>
  <match src="type_name [88139,88166]" dest="type_name [29639,29666]"/>
  <match src="parameter [95586,95599]" dest="parameter [34742,34755]"/>
  <match src="identifier: account [106710,106717]" dest="identifier: account [70052,70059]"/>
  <match src="number_literal: 1e16 [42726,42730]" dest="number_literal: 1e16 [12859,12863]"/>
  <match src="parameter [29495,29507]" dest="parameter [47889,47901]"/>
  <match src="call_expression [78081,78088]" dest="call_expression [61788,61795]"/>
  <match src="call_argument [29325,29344]" dest="call_argument [47719,47738]"/>
  <match src="): ) [811,812]" dest="): ) [1375,1376]"/>
  <match src="state_variable_declaration [90513,90627]" dest="state_variable_declaration [76823,76937]"/>
  <match src="identifier: epoch [102046,102051]" dest="identifier: epoch [41202,41207]"/>
  <match src="comment: /* Regulator */ [43921,43936]" dest="comment: /* Regulator */ [14054,14069]"/>
  <match src="function_definition [97341,97503]" dest="function_definition [36497,36659]"/>
  <match src="address: address [104449,104456]" dest="address: address [43605,43612]"/>
  <match src="): ) [44333,44334]" dest="): ) [14466,14467]"/>
  <match src="uint256: uint256 [9767,9774]" dest="uint256: uint256 [10331,10338]"/>
  <match src="indexed: indexed [54184,54191]" dest="indexed: indexed [22033,22040]"/>
  <match src="identifier: supply [101024,101030]" dest="identifier: supply [40180,40186]"/>
  <match src="type_name [79628,79635]" dest="type_name [80839,80846]"/>
  <match src="call_argument [29103,29107]" dest="call_argument [47497,47501]"/>
  <match src="uint256: uint256 [100061,100068]" dest="uint256: uint256 [39217,39224]"/>
  <match src="(: ( [103965,103966]" dest="(: ( [43121,43122]"/>
  <match src="identifier: that [83919,83923]" dest="identifier: that [81829,81833]"/>
  <match src="source_file [0,108876]" dest="source_file [0,84442]"/>
  <match src=",: , [101964,101965]" dest=",: , [41120,41121]"/>
  <match src="visibility [68992,69000]" dest="visibility [67068,67076]"/>
  <match src=",: , [28683,28684]" dest=",: , [47077,47078]"/>
  <match src="variable_declaration_statement [34786,34813]" dest="variable_declaration_statement [53180,53207]"/>
  <match src="type_name [76147,76154]" dest="type_name [84322,84329]"/>
  <match src="function_body [47414,47475]" dest="function_body [17547,17608]"/>
  <match src="member_expression [95955,95981]" dest="member_expression [35111,35137]"/>
  <match src="identifier: EPOCH_OFFSET [42172,42184]" dest="identifier: EPOCH_OFFSET [12305,12317]"/>
  <match src="identifier: IMPLEMENTATION_SLOT [92598,92617]" dest="identifier: IMPLEMENTATION_SLOT [31754,31773]"/>
  <match src="returns: returns [95785,95792]" dest="returns: returns [34941,34948]"/>
  <match src="returns: returns [46444,46451]" dest="returns: returns [16577,16584]"/>
  <match src="(: ( [84431,84432]" dest="(: ( [81036,81037]"/>
  <match src="identifier: reserveB [79141,79149]" dest="identifier: couponEpochDecay [62973,62989]"/>
  <match src="(: ( [91201,91202]" dest="(: ( [77511,77512]"/>
  <match src="identifier: recipient [53088,53097]" dest="identifier: recipient [65696,65705]"/>
  <match src=".: . [102154,102155]" dest=".: . [41310,41311]"/>
  <match src="number_literal: 10 [36731,36733]" dest="number_literal: 10 [55125,55127]"/>
  <match src="identifier: _state [101234,101240]" dest="identifier: _state [40390,40396]"/>
  <match src="call_argument [83169,83173]" dest="call_argument [82239,82243]"/>
  <match src="): ) [96777,96778]" dest="): ) [35933,35934]"/>
  <match src="{: { [95361,95362]" dest="{: { [34517,34518]"/>
  <match src="function: function [13046,13054]" dest="function: function [26035,26043]"/>
  <match src="==: == [9555,9557]" dest="==: == [10119,10121]"/>
  <match src=".: . [7386,7387]" dest=".: . [7950,7951]"/>
  <match src="parameter [9791,9808]" dest="parameter [10355,10372]"/>
  <match src="type_name [28275,28282]" dest="type_name [46669,46676]"/>
  <match src="!: ! [30189,30190]" dest="!: ! [48583,48584]"/>
  <match src="internal: internal [96378,96386]" dest="internal: internal [35534,35542]"/>
  <match src="parameter [44778,44785]" dest="parameter [14911,14918]"/>
  <match src="uint256: uint256 [33132,33139]" dest="uint256: uint256 [51526,51533]"/>
  <match src="(: ( [48235,48236]" dest="(: ( [18368,18369]"/>
  <match src="identifier: D256 [7508,7512]" dest="identifier: D256 [8072,8076]"/>
  <match src="(: ( [25222,25223]" dest="(: ( [80386,80387]"/>
  <match src="uint256: uint256 [6869,6876]" dest="uint256: uint256 [7433,7440]"/>
  <match src="return_statement [7895,7943]" dest="return_statement [8459,8507]"/>
  <match src="type_name [65670,65677]" dest="type_name [79103,79110]"/>
  <match src="array_access [94932,94956]" dest="array_access [34088,34112]"/>
  <match src=".: . [102911,102912]" dest=".: . [42067,42068]"/>
  <match src="visibility [32871,32878]" dest="visibility [51265,51272]"/>
  <match src=",: , [94790,94791]" dest=",: , [33946,33947]"/>
  <match src="type_name [32901,32906]" dest="type_name [51295,51300]"/>
  <match src="function_definition [96739,96877]" dest="function_definition [35895,36033]"/>
  <match src="function_definition [105699,105812]" dest="function_definition [44855,44968]"/>
  <match src="type_name [105192,105199]" dest="type_name [44348,44355]"/>
  <match src="constant: constant [43081,43089]" dest="constant: constant [13214,13222]"/>
  <match src="primitive_type [7657,7664]" dest="primitive_type [8221,8228]"/>
  <match src="bool: bool [91110,91114]" dest="bool: bool [77420,77424]"/>
  <match src="function_body [83006,83821]" dest="function_body [73189,73677]"/>
  <match src="uint256: uint256 [43624,43631]" dest="uint256: uint256 [13757,13764]"/>
  <match src="identifier: lockedUntil [95435,95446]" dest="identifier: lockedUntil [34591,34602]"/>
  <match src="function_definition [95426,95554]" dest="function_definition [34582,34710]"/>
  <match src="view: view [63929,63933]" dest="view: view [28717,28721]"/>
  <match src="primitive_type [94242,94249]" dest="primitive_type [33398,33405]"/>
  <match src="function_definition [83827,84787]" dest="function_definition [80823,81752]"/>
  <match src="identifier: self [8407,8411]" dest="identifier: self [8971,8975]"/>
  <match src=":: : [6041,6042]" dest=":: : [6605,6606]"/>
  <match src="uint256: uint256 [6086,6093]" dest="uint256: uint256 [6650,6657]"/>
  <match src="visibility [93288,93296]" dest="visibility [32444,32452]"/>
  <match src="): ) [12033,12034]" dest="): ) [25022,25023]"/>
  <match src="pure: pure [47535,47539]" dest="pure: pure [17668,17672]"/>
  <match src="identifier: EpochStrategy [45037,45050]" dest="identifier: EpochStrategy [15170,15183]"/>
  <match src="return_statement [48473,48492]" dest="return_statement [18606,18625]"/>
  <match src="assignment_expression [102603,102706]" dest="assignment_expression [41759,41862]"/>
  <match src="(: ( [11688,11689]" dest="(: ( [24677,24678]"/>
  <match src="parenthesized_expression [30903,31413]" dest="parenthesized_expression [49297,49807]"/>
  <match src="): ) [66873,66874]" dest="): ) [69040,69041]"/>
  <match src="state_variable_declaration [43319,43376]" dest="state_variable_declaration [13452,13509]"/>
  <match src="type_name [103910,103917]" dest="type_name [43066,43073]"/>
  <match src="identifier: div [2554,2557]" dest="identifier: div [3118,3121]"/>
  <match src="contract_declaration [88557,88840]" dest="contract_declaration [30057,30340]"/>
  <match src="identifier: _state [103471,103477]" dest="identifier: _state [42627,42633]"/>
  <match src="return_type_definition [48445,48462]" dest="return_type_definition [18578,18595]"/>
  <match src="parameter [54533,54546]" dest="parameter [22382,22395]"/>
  <match src="parameter [91016,91041]" dest="parameter [77326,77351]"/>
  <match src=",: , [84243,84244]" dest=",: , [81139,81140]"/>
  <match src="identifier: CHAIN_ID [48385,48393]" dest="identifier: CHAIN_ID [18518,18526]"/>
  <match src="identifier: period [104410,104416]" dest="identifier: period [43566,43572]"/>
  <match src="identifier: candidate [104808,104817]" dest="identifier: candidate [43964,43973]"/>
  <match src="identifier: implementation [90801,90815]" dest="identifier: implementation [77111,77125]"/>
  <match src="): ) [56203,56204]" dest="): ) [24052,24053]"/>
  <match src="identifier: stringify [29884,29893]" dest="identifier: stringify [48278,48287]"/>
  <match src=".: . [84427,84428]" dest=".: . [81032,81033]"/>
  <match src="]: ] [104942,104943]" dest="]: ] [44098,44099]"/>
  <match src="!: ! [29604,29605]" dest="!: ! [47998,47999]"/>
  <match src=",: , [30727,30728]" dest=",: , [49121,49122]"/>
  <match src="(: ( [3984,3985]" dest="(: ( [4548,4549]"/>
  <match src="returns: returns [45342,45349]" dest="returns: returns [15475,15482]"/>
  <match src="}: } [46738,46739]" dest="}: } [16871,16872]"/>
  <match src="identifier: SafeMath [69,77]" dest="identifier: SafeMath [633,641]"/>
  <match src="parameter [56405,56412]" dest="parameter [24254,24261]"/>
  <match src="identifier: D256 [7902,7906]" dest="identifier: D256 [8466,8470]"/>
  <match src="primitive_type [2558,2565]" dest="primitive_type [3122,3129]"/>
  <match src="parameter [51852,51866]" dest="parameter [27788,27802]"/>
  <match src="identifier: reason [100383,100389]" dest="identifier: reason [39539,39545]"/>
  <match src="visibility [97812,97818]" dest="visibility [36968,36974]"/>
  <match src="type_name [101739,101746]" dest="type_name [40895,40902]"/>
  <match src="identifier: setImplementation [91062,91079]" dest="identifier: setImplementation [77372,77389]"/>
  <match src="uint256: uint256 [96483,96490]" dest="uint256: uint256 [35639,35646]"/>
  <match src="return_type_definition [54815,54829]" dest="return_type_definition [22664,22678]"/>
  <match src="call_argument [94724,94735]" dest="call_argument [33880,33891]"/>
  <match src=".: . [95244,95245]" dest=".: . [34400,34401]"/>
  <match src="event_paramater [90785,90815]" dest="event_paramater [77095,77125]"/>
  <match src="identifier: _state [102741,102747]" dest="identifier: _state [41897,41903]"/>
  <match src="type_name [27387,27394]" dest="type_name [45781,45788]"/>
  <match src="binary_expression [35386,35396]" dest="binary_expression [53780,53790]"/>
  <match src="identifier: approve [104905,104912]" dest="identifier: approve [44061,44068]"/>
  <match src="visibility [56414,56422]" dest="visibility [24263,24271]"/>
  <match src="{: { [88859,88860]" dest="{: { [30359,30360]"/>
  <match src="block_statement [33157,33698]" dest="block_statement [51551,52092]"/>
  <match src="(: ( [45465,45466]" dest="(: ( [15598,15599]"/>
  <match src="(: ( [9208,9209]" dest="(: ( [9772,9773]"/>
  <match src="parameter [104449,104464]" dest="parameter [43605,43620]"/>
  <match src="type_name [89241,89274]" dest="type_name [30741,30774]"/>
  <match src="call_argument [94700,94718]" dest="call_argument [33856,33874]"/>
  <match src="state_mutability [8839,8843]" dest="state_mutability [9403,9407]"/>
  <match src="]: ] [102153,102154]" dest="]: ] [41309,41310]"/>
  <match src="type_name [89160,89172]" dest="type_name [30660,30672]"/>
  <match src="visibility [93156,93162]" dest="visibility [32312,32318]"/>
  <match src="identifier: epoch [97199,97204]" dest="identifier: epoch [36355,36360]"/>
  <match src="view: view [95338,95342]" dest="view: view [34494,34498]"/>
  <match src="): ) [5958,5959]" dest="): ) [6522,6523]"/>
  <match src="library_declaration [27320,36901]" dest="library_declaration [45714,55295]"/>
  <match src="call_expression [98151,98171]" dest="call_expression [37307,37327]"/>
  <match src="identifier: D256 [48009,48013]" dest="identifier: D256 [18142,18146]"/>
  <match src="function_definition [103839,104198]" dest="function_definition [42995,43354]"/>
  <match src="parameter [34704,34717]" dest="parameter [53098,53111]"/>
  <match src="type_name [99549,99556]" dest="type_name [38705,38712]"/>
  <match src="}: } [95170,95171]" dest="}: } [34326,34327]"/>
  <match src="primitive_type [46575,46582]" dest="primitive_type [16708,16715]"/>
  <match src="internal: internal [48531,48539]" dest="internal: internal [18664,18672]"/>
  <match src="(: ( [63917,63918]" dest="(: ( [28705,28706]"/>
  <match src="primitive_type [53022,53029]" dest="primitive_type [56373,56380]"/>
  <match src="view: view [98492,98496]" dest="view: view [37648,37652]"/>
  <match src="constant: constant [42878,42886]" dest="constant: constant [13011,13019]"/>
  <match src="(: ( [94546,94547]" dest="(: ( [33702,33703]"/>
  <match src="parameter [94775,94790]" dest="parameter [33931,33946]"/>
  <match src="type_name [35868,35873]" dest="type_name [54262,54267]"/>
  <match src="state_mutability [93504,93508]" dest="state_mutability [32660,32664]"/>
  <match src="): ) [48734,48735]" dest="): ) [18867,18868]"/>
  <match src="primitive_type [88507,88514]" dest="primitive_type [30007,30014]"/>
  <match src="function: function [54334,54342]" dest="function: function [22183,22191]"/>
  <match src="identifier: _state [102646,102652]" dest="identifier: _state [41802,41808]"/>
  <match src="visibility [15934,15941]" dest="visibility [21321,21328]"/>
  <match src="variable_declaration [86700,86712]" dest="variable_declaration [75210,75222]"/>
  <match src="): ) [83035,83036]" dest="): ) [72645,72646]"/>
  <match src="comment: // populate the result with &quot;0x&quot; [34960,34992]" dest="comment: // populate the result with &quot;0x&quot; [53354,53386]"/>
  <match src="identifier: SafeMath [75694,75702]" dest="identifier: SafeMath [83595,83603]"/>
  <match src="yul_path [33595,33601]" dest="yul_path [51989,51995]"/>
  <match src="return: return [34652,34658]" dest="return: return [53046,53052]"/>
  <match src="member_expression [6778,6788]" dest="member_expression [7342,7352]"/>
  <match src="(: ( [19881,19882]" dest="(: ( [65511,65512]"/>
  <match src="=: = [36163,36164]" dest="=: = [54557,54558]"/>
  <match src="function: function [306,314]" dest="function: function [870,878]"/>
  <match src="type_name [65496,65503]" dest="type_name [60808,60815]"/>
  <match src=",: , [101101,101102]" dest=",: , [40257,40258]"/>
  <match src="): ) [48268,48269]" dest="): ) [18401,18402]"/>
  <match src="primitive_type [54951,54958]" dest="primitive_type [22800,22807]"/>
  <match src="{: { [29590,29591]" dest="{: { [47984,47985]"/>
  <match src="identifier: D256 [8815,8819]" dest="identifier: D256 [9379,9383]"/>
  <match src="return_type_definition [47992,48021]" dest="return_type_definition [18125,18154]"/>
  <match src="function: function [104429,104437]" dest="function: function [43585,43593]"/>
  <match src="user_defined_type [93518,93525]" dest="user_defined_type [32674,32681]"/>
  <match src="{: { [97576,97577]" dest="{: { [36732,36733]"/>
  <match src="function_definition [29453,30006]" dest="function_definition [47847,48400]"/>
  <match src="identifier: nonces [54974,54980]" dest="identifier: nonces [22823,22829]"/>
  <match src="function: function [55031,55039]" dest="function: function [22880,22888]"/>
  <match src="identifier: self [8876,8880]" dest="identifier: self [9440,9444]"/>
  <match src="identifier: State [90282,90287]" dest="identifier: State [76592,76597]"/>
  <match src="identifier: b [8637,8638]" dest="identifier: b [9201,9202]"/>
  <match src="expression_statement [34520,34565]" dest="expression_statement [52914,52959]"/>
  <match src="event_paramater [81448,81464]" dest="event_paramater [79046,79060]"/>
  <match src="byte: byte [34530,34534]" dest="byte: byte [52924,52928]"/>
  <match src="function: function [98320,98328]" dest="function: function [37476,37484]"/>
  <match src=".: . [103738,103739]" dest=".: . [42894,42895]"/>
  <match src="function_definition [11670,11738]" dest="function_definition [24659,24727]"/>
  <match src="identifier: DAO_EXIT_LOCKUP_EPOCHS [43434,43456]" dest="identifier: DAO_EXIT_LOCKUP_EPOCHS [13567,13589]"/>
  <match src="number_literal: 4 [36400,36401]" dest="number_literal: 4 [54794,54795]"/>
  <match src="binary_expression [1360,1365]" dest="binary_expression [1924,1929]"/>
  <match src="using: using [5573,5578]" dest="using: using [6137,6142]"/>
  <match src="type_name [70997,71004]" dest="type_name [66966,66973]"/>
  <match src="return_type_definition [48350,48367]" dest="return_type_definition [18483,18500]"/>
  <match src="): ) [78128,78129]" dest="): ) [61831,61832]"/>
  <match src="member_expression [93951,93965]" dest="member_expression [33107,33121]"/>
  <match src="): ) [68103,68104]" dest="): ) [68763,68764]"/>
  <match src="returns: returns [92761,92768]" dest="returns: returns [31917,31924]"/>
  <match src="primitive_type [4617,4624]" dest="primitive_type [5181,5188]"/>
  <match src="identifier: balance [102328,102335]" dest="identifier: balance [41484,41491]"/>
  <match src="visibility [44555,44562]" dest="visibility [14688,14695]"/>
  <match src="number_literal: 1 [35053,35054]" dest="number_literal: 1 [53447,53448]"/>
  <match src="(: ( [81390,81391]" dest="(: ( [79184,79185]"/>
  <match src="function_definition [7955,8139]" dest="function_definition [8519,8703]"/>
  <match src="uint32: uint32 [55852,55858]" dest="uint32: uint32 [23701,23707]"/>
  <match src="identifier: ethic [93391,93396]" dest="identifier: ethic [32547,32552]"/>
  <match src="function_definition [306,482]" dest="function_definition [870,1046]"/>
  <match src="binary_expression [33884,33894]" dest="binary_expression [52278,52288]"/>
  <match src="identifier: Account [87937,87944]" dest="identifier: Account [29437,29444]"/>
  <match src="primitive_type [28815,28819]" dest="primitive_type [47209,47213]"/>
  <match src="visibility [65550,65557]" dest="visibility [67449,67456]"/>
  <match src="variable_declaration [91124,91143]" dest="variable_declaration [77434,77453]"/>
  <match src="primitive_type [13939,13946]" dest="primitive_type [26928,26935]"/>
  <match src="uint256: uint256 [3996,4003]" dest="uint256: uint256 [4560,4567]"/>
  <match src="function_definition [54446,54509]" dest="function_definition [22295,22358]"/>
  <match src="call_argument [31277,31282]" dest="call_argument [49671,49676]"/>
  <match src="): ) [3251,3252]" dest="): ) [3815,3816]"/>
  <match src="): ) [91302,91303]" dest="): ) [77612,77613]"/>
  <match src="pure: pure [9392,9396]" dest="pure: pure [9956,9960]"/>
  <match src="(: ( [32487,32488]" dest="(: ( [50881,50882]"/>
  <match src="=: = [41980,41981]" dest="=: = [12113,12114]"/>
  <match src=".: . [85283,85284]" dest=".: . [81192,81193]"/>
  <match src="address: address [103140,103147]" dest="address: address [42296,42303]"/>
  <match src="identifier: BASE [6043,6047]" dest="identifier: BASE [6607,6611]"/>
  <match src="call_argument [6989,7035]" dest="call_argument [7553,7599]"/>
  <match src="identifier: balance [100729,100736]" dest="identifier: balance [39885,39892]"/>
  <match src="function_definition [102796,102930]" dest="function_definition [41952,42086]"/>
  <match src="comment: //  [41652,41655]" dest="comment: //  [11785,11788]"/>
  <match src="state_mutability [95471,95475]" dest="state_mutability [34627,34631]"/>
  <match src="member_expression [102866,102881]" dest="member_expression [42022,42037]"/>
  <match src="): ) [32720,32721]" dest="): ) [51114,51115]"/>
  <match src="comment: /*     Copyright 2021 Ethic Money Devs &lt;devs@ethic.money&gt; and Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [98636,99319]" dest="comment: /*     Copyright 2021 Ethic Money Devs &lt;devs@ethic.money&gt; and Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [82830,83513]"/>
  <match src="(: ( [93255,93256]" dest="(: ( [32411,32412]"/>
  <match src="identifier: _state [100920,100926]" dest="identifier: _state [40076,40082]"/>
  <match src="(: ( [48654,48655]" dest="(: ( [18787,18788]"/>
  <match src="identifier: incrementBalanceOfStaged [101471,101495]" dest="identifier: incrementBalanceOfStaged [40627,40651]"/>
  <match src="identifier: lessThan [9055,9063]" dest="identifier: lessThan [9619,9627]"/>
  <match src="event_paramater [81222,81245]" dest="event_paramater [71695,71718]"/>
  <match src="type_name [23081,23088]" dest="type_name [20062,20069]"/>
  <match src="): ) [94305,94306]" dest="): ) [33461,33462]"/>
  <match src="user_defined_type [63872,63884]" dest="user_defined_type [28660,28672]"/>
  <match src="=: = [7667,7668]" dest="=: = [8231,8232]"/>
  <match src="call_argument [50740,50744]" dest="call_argument [63998,64002]"/>
  <match src="parameter [6489,6498]" dest="parameter [7053,7062]"/>
  <match src="call_argument [9673,9677]" dest="call_argument [10237,10241]"/>
  <match src="return_type_definition [48750,48767]" dest="return_type_definition [18883,18900]"/>
  <match src="string_literal [21137,21172]" dest="string_literal [64619,64656]"/>
  <match src="identifier: currentLock [105456,105467]" dest="identifier: currentLock [44612,44623]"/>
  <match src="boolean_literal [66876,66881]" dest="boolean_literal [82639,82644]"/>
  <match src="): ) [107186,107187]" dest="): ) [70528,70529]"/>
  <match src="function: function [7765,7773]" dest="function: function [8329,8337]"/>
  <match src="type_name [89213,89221]" dest="type_name [30713,30721]"/>
  <match src="visibility [72459,72465]" dest="visibility [83801,83807]"/>
  <match src="primitive_type [95002,95009]" dest="primitive_type [34158,34165]"/>
  <match src="uint256: uint256 [94242,94249]" dest="uint256: uint256 [33398,33405]"/>
  <match src="call_argument [101430,101440]" dest="call_argument [40586,40596]"/>
  <match src="identifier: self [9076,9080]" dest="identifier: self [9640,9644]"/>
  <match src="}: } [93668,93669]" dest="}: } [32824,32825]"/>
  <match src="type_name [47393,47405]" dest="type_name [17526,17538]"/>
  <match src="(: ( [7619,7620]" dest="(: ( [8183,8184]"/>
  <match src=".: . [7926,7927]" dest=".: . [8490,8491]"/>
  <match src="identifier: setup [63817,63822]" dest="identifier: setup [28605,28610]"/>
  <match src="address: address [81109,81116]" dest="address: address [71541,71548]"/>
  <match src="type_name [33132,33139]" dest="type_name [51526,51533]"/>
  <match src="identifier: offset [45065,45071]" dest="identifier: offset [15198,15204]"/>
  <match src="(: ( [94599,94600]" dest="(: ( [33755,33756]"/>
  <match src="function: function [55715,55723]" dest="function: function [23564,23572]"/>
  <match src="(: ( [13062,13063]" dest="(: ( [26051,26052]"/>
  <match src="function_definition [23046,23147]" dest="function_definition [56608,56838]"/>
  <match src="visibility [4667,4675]" dest="visibility [5231,5239]"/>
  <match src="identifier: timestamp [96433,96442]" dest="identifier: timestamp [35589,35598]"/>
  <match src="return: return [33738,33744]" dest="return: return [52132,52138]"/>
  <match src="type_name [21839,21846]" dest="type_name [65023,65030]"/>
  <match src="identifier: a [4625,4626]" dest="identifier: a [5189,5190]"/>
  <match src="(: ( [6033,6034]" dest="(: ( [6597,6598]"/>
  <match src=".: . [101837,101838]" dest=".: . [40993,40994]"/>
  <match src="return_statement [46159,46219]" dest="return_statement [16292,16352]"/>
  <match src="member_expression [105268,105285]" dest="member_expression [44424,44441]"/>
  <match src="}: } [95419,95420]" dest="}: } [34575,34576]"/>
  <match src="(: ( [36152,36153]" dest="(: ( [54546,54547]"/>
  <match src="(: ( [94709,94710]" dest="(: ( [33865,33866]"/>
  <match src="identifier: outstandingCouponsForEpoch [103985,104011]" dest="identifier: outstandingCouponsForEpoch [43141,43167]"/>
  <match src="identifier: D256 [6764,6768]" dest="identifier: D256 [7328,7332]"/>
  <match src="call_argument [30437,30443]" dest="call_argument [48831,48837]"/>
  <match src="call_argument [32478,32497]" dest="call_argument [50872,50891]"/>
  <match src="}: } [7214,7215]" dest="}: } [7778,7779]"/>
  <match src="): ) [85143,85144]" dest="): ) [59314,59315]"/>
  <match src="identifier: BASE [7019,7023]" dest="identifier: BASE [7583,7587]"/>
  <match src=".: . [28460,28461]" dest=".: . [46854,46855]"/>
  <match src="identifier: balance [93210,93217]" dest="identifier: balance [32366,32373]"/>
  <match src="uint8: uint8 [54377,54382]" dest="uint8: uint8 [22226,22231]"/>
  <match src="identifier: amount [12003,12009]" dest="identifier: amount [24992,24998]"/>
  <match src="function_body [93625,93669]" dest="function_body [32781,32825]"/>
  <match src="comment: // for each byte (starting from the lowest byte), populate the result with two characters [36050,36139]" dest="comment: // for each byte (starting from the lowest byte), populate the result with two characters [54444,54533]"/>
  <match src="bool: bool [9521,9525]" dest="bool: bool [10085,10089]"/>
  <match src="identifier: _state [103561,103567]" dest="identifier: _state [42717,42723]"/>
  <match src="identifier: LPAREN [32446,32452]" dest="identifier: LPAREN [50840,50846]"/>
  <match src="identifier: D256 [68130,68134]" dest="identifier: D256 [68790,68794]"/>
  <match src="block_statement [30883,31424]" dest="block_statement [49277,49818]"/>
  <match src="parameter [99549,99563]" dest="parameter [38705,38719]"/>
  <match src="function: function [48406,48414]" dest="function: function [18539,18547]"/>
  <match src="public: public [94526,94532]" dest="public: public [33682,33688]"/>
  <match src="function_definition [47792,47934]" dest="function_definition [17925,18067]"/>
  <match src="member_expression [9544,9554]" dest="member_expression [10108,10118]"/>
  <match src="state_mutability [46439,46443]" dest="state_mutability [16572,16576]"/>
  <match src="identifier: updateAllowanceCoupons [102945,102967]" dest="identifier: updateAllowanceCoupons [42101,42123]"/>
  <match src="block_statement [32205,32746]" dest="block_statement [50599,51140]"/>
  <match src="identifier: coupons [102667,102674]" dest="identifier: coupons [41823,41830]"/>
  <match src="type_name [100369,100375]" dest="type_name [39525,39531]"/>
  <match src="member_expression [104083,104097]" dest="member_expression [43239,43253]"/>
  <match src="identifier: COLON [31752,31757]" dest="identifier: COLON [50146,50151]"/>
  <match src="member_expression [98269,98286]" dest="member_expression [37425,37442]"/>
  <match src="identifier: payloadA [31877,31885]" dest="identifier: payloadA [50271,50279]"/>
  <match src="bool: bool [99583,99587]" dest="bool: bool [38739,38743]"/>
  <match src="): ) [103605,103606]" dest="): ) [42761,42762]"/>
  <match src="primitive_type [54196,54200]" dest="primitive_type [22045,22049]"/>
  <match src="): ) [31971,31972]" dest="): ) [50365,50366]"/>
  <match src="identifier: delegatecall [91165,91177]" dest="identifier: delegatecall [77475,77487]"/>
  <match src="identifier: epoch [96701,96706]" dest="identifier: epoch [35857,35862]"/>
  <match src=",: , [104962,104963]" dest=",: , [44118,44119]"/>
  <match src="identifier: _state [98406,98412]" dest="identifier: _state [37562,37568]"/>
  <match src="string [92905,92912]" dest="string [32061,32068]"/>
  <match src="identifier: amount [105346,105352]" dest="identifier: amount [44502,44508]"/>
  <match src="): ) [28754,28755]" dest="): ) [47148,47149]"/>
  <match src="primitive_type [1239,1245]" dest="primitive_type [1803,1809]"/>
  <match src="struct: struct [42038,42044]" dest="struct: struct [12171,12177]"/>
  <match src="inheritance_specifier [99340,99345]" dest="inheritance_specifier [38496,38501]"/>
  <match src="identifier: b [8121,8122]" dest="identifier: b [8685,8686]"/>
  <match src="array_access [97453,97481]" dest="array_access [36609,36637]"/>
  <match src="returns: returns [54426,54433]" dest="returns: returns [22275,22282]"/>
  <match src="{: { [88266,88267]" dest="{: { [29766,29767]"/>
  <match src="&quot;: &quot; [84287,84288]" dest="&quot;: &quot; [81163,81164]"/>
  <match src="!: ! [107156,107157]" dest="!: ! [70498,70499]"/>
  <match src=".: . [97132,97133]" dest=".: . [36288,36289]"/>
  <match src="visibility [51805,51811]" dest="visibility [27741,27747]"/>
  <match src="function_definition [21806,22138]" dest="function_definition [64999,65279]"/>
  <match src="function_definition [9464,9566]" dest="function_definition [10028,10130]"/>
  <match src="function_definition [34676,35626]" dest="function_definition [53070,54020]"/>
  <match src="type_name [95485,95492]" dest="type_name [34641,34648]"/>
  <match src=",: , [82003,82004]" dest=",: , [72487,72488]"/>
  <match src=".: . [101641,101642]" dest=".: . [40797,40798]"/>
  <match src="function_body [103900,104198]" dest="function_body [43056,43354]"/>
  <match src="return_type_definition [46680,46697]" dest="return_type_definition [16813,16830]"/>
  <match src="identifier: bootstrappingAt [97175,97190]" dest="identifier: bootstrappingAt [36331,36346]"/>
  <match src="member_expression [82818,82828]" dest="member_expression [72984,72994]"/>
  <match src="primitive_type [74226,74233]" dest="primitive_type [64745,64752]"/>
  <match src="constant: constant [27636,27644]" dest="constant: constant [46030,46038]"/>
  <match src="type_name [13449,13456]" dest="type_name [26438,26445]"/>
  <match src=",: , [4637,4638]" dest=",: , [5201,5202]"/>
  <match src="parameter [54664,54668]" dest="parameter [22513,22517]"/>
  <match src="expression_statement [36333,36378]" dest="expression_statement [54727,54772]"/>
  <match src="identifier: a [10160,10161]" dest="identifier: a [10724,10725]"/>
  <match src="string [17791,17833]" dest="string [73488,73524]"/>
  <match src="type_name [83047,83054]" dest="type_name [67543,67550]"/>
  <match src="identifier: GOVERNANCE_PERIOD [42435,42452]" dest="identifier: GOVERNANCE_PERIOD [12568,12585]"/>
  <match src="{: { [36735,36736]" dest="{: { [55129,55130]"/>
  <match src=".: . [100979,100980]" dest=".: . [40135,40136]"/>
  <match src="(: ( [31317,31318]" dest="(: ( [49711,49712]"/>
  <match src="return: return [47580,47586]" dest="return: return [17713,17719]"/>
  <match src="): ) [96206,96207]" dest="): ) [35362,35363]"/>
  <match src="primitive_type [88102,88109]" dest="primitive_type [29602,29609]"/>
  <match src="string: string [29014,29020]" dest="string: string [47408,47414]"/>
  <match src="}: } [48307,48308]" dest="}: } [18440,18441]"/>
  <match src="}: } [28220,28221]" dest="}: } [46614,46615]"/>
  <match src="state_mutability [39843,39847]" dest="state_mutability [21329,21333]"/>
  <match src="binary_expression [95188,95214]" dest="binary_expression [34344,34370]"/>
  <match src="identifier: shift [36483,36488]" dest="identifier: shift [54877,54882]"/>
  <match src="=: = [35398,35399]" dest="=: = [53792,53793]"/>
  <match src="): ) [30649,30650]" dest="): ) [49043,49044]"/>
  <match src="(: ( [8120,8121]" dest="(: ( [8684,8685]"/>
  <match src="comment: /*     Copyright 2021 Ethic Money Devs &lt;devs@ethic.money&gt; and Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [40627,41310]" dest="comment: /*     Copyright 2021 Ethic Money Devs &lt;devs@ethic.money&gt; and Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [26995,27678]"/>
  <match src="): ) [19923,19924]" dest="): ) [65561,65562]"/>
  <match src="{: { [34319,34320]" dest="{: { [52713,52714]"/>
  <match src="(: ( [98135,98136]" dest="(: ( [37291,37292]"/>
  <match src=".: . [101649,101650]" dest=".: . [40805,40806]"/>
  <match src="uint256: uint256 [89011,89018]" dest="uint256: uint256 [30511,30518]"/>
  <match src="state_mutability [48641,48645]" dest="state_mutability [18774,18778]"/>
  <match src="identifier: epochTimeWithStrategy [96080,96101]" dest="identifier: epochTimeWithStrategy [35236,35257]"/>
  <match src=".: . [97865,97866]" dest=".: . [37021,37022]"/>
  <match src="returns: returns [95476,95483]" dest="returns: returns [34632,34639]"/>
  <match src="address: address [51835,51842]" dest="address: address [27771,27778]"/>
  <match src="): ) [53510,53511]" dest="): ) [61398,61399]"/>
  <match src="visibility [96498,96504]" dest="visibility [35654,35660]"/>
  <match src="(: ( [99529,99530]" dest="(: ( [38685,38686]"/>
  <match src=",: , [30328,30329]" dest=",: , [48722,48723]"/>
  <match src="(: ( [81795,81796]" dest="(: ( [73176,73177]"/>
  <match src="}: } [105367,105368]" dest="}: } [44523,44524]"/>
  <match src="uint256: uint256 [103656,103663]" dest="uint256: uint256 [42812,42819]"/>
  <match src="unary_expression [32198,32203]" dest="unary_expression [50592,50597]"/>
  <match src="{: { [94837,94838]" dest="{: { [33993,33994]"/>
  <match src="call_expression [84623,84693]" dest="call_expression [64213,64271]"/>
  <match src="}: } [56424,56425]" dest="}: } [24273,24274]"/>
  <match src="(: ( [31676,31677]" dest="(: ( [50070,50071]"/>
  <match src="primitive_type [29541,29548]" dest="primitive_type [47935,47942]"/>
  <match src=".: . [100944,100945]" dest=".: . [40100,40101]"/>
  <match src="primitive_type [92873,92879]" dest="primitive_type [32029,32035]"/>
  <match src="if: if [33880,33882]" dest="if: if [52274,52276]"/>
  <match src="function: function [1631,1639]" dest="function: function [2195,2203]"/>
  <match src="identifier: Locked [95154,95160]" dest="identifier: Locked [34310,34316]"/>
  <match src="): ) [34562,34563]" dest="): ) [52956,52957]"/>
  <match src="identifier: reason [8350,8356]" dest="identifier: reason [8914,8920]"/>
  <match src="parameter [54314,54327]" dest="parameter [22163,22176]"/>
  <match src=".: . [100132,100133]" dest=".: . [39288,39289]"/>
  <match src="external: external [55916,55924]" dest="external: external [23765,23773]"/>
  <match src="call_expression [107157,107188]" dest="call_expression [70499,70530]"/>
  <match src="identifier: MinterAdded [25693,25704]" dest="identifier: CouponRedemption [61115,61131]"/>
  <match src="external: external [56159,56167]" dest="external: external [24008,24016]"/>
  <match src=",: , [82179,82180]" dest=",: , [73792,73793]"/>
  <match src="{: { [52899,52900]" dest="{: { [56169,56170]"/>
  <match src="state_mutability [96151,96155]" dest="state_mutability [35307,35311]"/>
  <match src="external: external [55137,55145]" dest="external: external [22986,22994]"/>
  <match src="uint256: uint256 [88343,88350]" dest="uint256: uint256 [29843,29850]"/>
  <match src="(: ( [30478,30479]" dest="(: ( [48872,48873]"/>
  <match src="return: return [97243,97249]" dest="return: return [36399,36405]"/>
  <match src="call_argument [7019,7023]" dest="call_argument [7583,7587]"/>
  <match src="type_name [8193,8197]" dest="type_name [8757,8761]"/>
  <match src="state_mutability [36645,36649]" dest="state_mutability [55039,55043]"/>
  <match src="identifier: b [778,779]" dest="identifier: b [1342,1343]"/>
  <match src="number_literal: 10 [34087,34089]" dest="number_literal: 10 [52481,52483]"/>
  <match src="): ) [8691,8692]" dest="): ) [9255,9256]"/>
  <match src="state_variable_declaration [43840,43904]" dest="state_variable_declaration [13973,14037]"/>
  <match src="primitive_type [82474,82481]" dest="primitive_type [67604,67611]"/>
  <match src="function_definition [93382,93473]" dest="function_definition [32538,32629]"/>
  <match src=".: . [46017,46018]" dest=".: . [16150,16151]"/>
  <match src="}: } [30660,30661]" dest="}: } [49054,49055]"/>
  <match src="]: ] [104552,104553]" dest="]: ] [43708,43709]"/>
  <match src="returns: returns [8671,8678]" dest="returns: returns [9235,9242]"/>
  <match src="function_definition [93675,93773]" dest="function_definition [32831,32929]"/>
  <match src="}: } [95719,95720]" dest="}: } [34875,34876]"/>
  <match src="identifier: must [29481,29485]" dest="identifier: must [47875,47879]"/>
  <match src="internal: internal [9498,9506]" dest="internal: internal [10062,10070]"/>
  <match src="(: ( [8738,8739]" dest="(: ( [9302,9303]"/>
  <match src="internal: internal [6919,6927]" dest="internal: internal [7483,7491]"/>
  <match src="): ) [50098,50099]" dest="): ) [56459,56460]"/>
  <match src="(: ( [54288,54289]" dest="(: ( [22137,22138]"/>
  <match src="member_expression [7916,7926]" dest="member_expression [8480,8490]"/>
  <match src="call_expression [8312,8360]" dest="call_expression [8876,8924]"/>
  <match src="public: public [63825,63831]" dest="public: public [28613,28619]"/>
  <match src="identifier: shift [36345,36350]" dest="identifier: shift [54739,54744]"/>
  <match src="type_name [99583,99587]" dest="type_name [38739,38743]"/>
  <match src="identifier: D256 [63880,63884]" dest="identifier: D256 [28668,28672]"/>
  <match src="identifier: D256 [8395,8399]" dest="identifier: D256 [8959,8963]"/>
  <match src="): ) [30327,30328]" dest="): ) [48721,48722]"/>
  <match src="identifier: success [91115,91122]" dest="identifier: success [77425,77432]"/>
  <match src="): ) [83784,83785]" dest="): ) [73646,73647]"/>
  <match src="identifier: value [82947,82952]" dest="identifier: value [74218,74223]"/>
  <match src="parameter [51894,51909]" dest="parameter [27830,27845]"/>
  <match src="member_expression [105470,105506]" dest="member_expression [44626,44662]"/>
  <match src="address: address [73243,73250]" dest="address: address [59242,59249]"/>
  <match src="]: ] [97480,97481]" dest="]: ] [36636,36637]"/>
  <match src="uint256: uint256 [81489,81496]" dest="uint256: uint256 [72014,72021]"/>
  <match src="bytes: bytes [56270,56275]" dest="bytes: bytes [24119,24124]"/>
  <match src="function_body [48022,48095]" dest="function_body [18155,18228]"/>
  <match src="type_name [31524,31531]" dest="type_name [49918,49925]"/>
  <match src="identifier: stringify [31867,31876]" dest="identifier: stringify [50261,50270]"/>
  <match src="call_argument [100992,100998]" dest="call_argument [40148,40154]"/>
  <match src="return_type_definition [13509,13523]" dest="return_type_definition [26498,26512]"/>
  <match src="): ) [96273,96274]" dest="): ) [35429,35430]"/>
  <match src="(: ( [35899,35900]" dest="(: ( [54293,54294]"/>
  <match src="identifier: b [4636,4637]" dest="identifier: b [5200,5201]"/>
  <match src="primitive_type [28297,28304]" dest="primitive_type [46691,46698]"/>
  <match src="primitive_type [74373,74380]" dest="primitive_type [67941,67948]"/>
  <match src="{: { [7885,7886]" dest="{: { [8449,8450]"/>
  <match src="): ) [36785,36786]" dest="): ) [55179,55180]"/>
  <match src="{: { [36181,36182]" dest="{: { [54575,54576]"/>
  <match src="function: function [56345,56353]" dest="function: function [24194,24202]"/>
  <match src="identifier: start [45099,45104]" dest="identifier: start [15232,15237]"/>
  <match src="type_name [47044,47051]" dest="type_name [17177,17184]"/>
  <match src="): ) [96969,96970]" dest="): ) [36125,36126]"/>
  <match src="identifier: amount0Out [56229,56239]" dest="identifier: amount0Out [24078,24088]"/>
  <match src="primitive_type [81166,81173]" dest="primitive_type [83720,83727]"/>
  <match src="identifier: from [54170,54174]" dest="identifier: from [22019,22023]"/>
  <match src="function_definition [104239,104423]" dest="function_definition [43395,43579]"/>
  <match src="(: ( [32331,32332]" dest="(: ( [50725,50726]"/>
  <match src="uint256: uint256 [15783,15790]" dest="uint256: uint256 [60794,60801]"/>
  <match src="pure: pure [36645,36649]" dest="pure: pure [55039,55043]"/>
  <match src="variable_declaration_statement [34290,34309]" dest="variable_declaration_statement [52684,52703]"/>
  <match src="constant: constant [43856,43864]" dest="constant: constant [13989,13997]"/>
  <match src="identifier: _state [95820,95826]" dest="identifier: _state [34976,34982]"/>
  <match src="identifier: self [7715,7719]" dest="identifier: self [8279,8283]"/>
  <match src=":: : [45104,45105]" dest=":: : [15237,15238]"/>
  <match src="identifier: owner [93264,93269]" dest="identifier: owner [32420,32425]"/>
  <match src="visibility [70132,70140]" dest="visibility [81802,81810]"/>
  <match src="call_expression [82141,82227]" dest="call_expression [73773,73829]"/>
  <match src="[: [ [102507,102508]" dest="[: [ [41663,41664]"/>
  <match src="(: ( [68102,68103]" dest="(: ( [68762,68763]"/>
  <match src="primitive_type [32018,32022]" dest="primitive_type [50412,50416]"/>
  <match src="pure: pure [6288,6292]" dest="pure: pure [6852,6856]"/>
  <match src="uint256: uint256 [97064,97071]" dest="uint256: uint256 [36220,36227]"/>
  <match src="[: [ [88460,88461]" dest="[: [ [29960,29961]"/>
  <match src="(: ( [34037,34038]" dest="(: ( [52431,52432]"/>
  <match src="returns: returns [1281,1288]" dest="returns: returns [1845,1852]"/>
  <match src="visibility [47824,47832]" dest="visibility [17957,17965]"/>
  <match src="identifier: amount [16518,16524]" dest="identifier: amount [57347,57353]"/>
  <match src="}: } [47226,47227]" dest="}: } [17359,17360]"/>
  <match src="emit_statement [101407,101450]" dest="emit_statement [40563,40606]"/>
  <match src="identifier: totalPhantom [84432,84444]" dest="identifier: periodFor [81037,81046]"/>
  <match src="primitive_type [42210,42217]" dest="primitive_type [12343,12350]"/>
  <match src="primitive_type [48759,48766]" dest="primitive_type [18892,18899]"/>
  <match src="identifier: msg [81888,81891]" dest="identifier: msg [72394,72397]"/>
  <match src="pure: pure [48140,48144]" dest="pure: pure [18273,18277]"/>
  <match src="number_literal: 0x0000000000000000000000000000000000000000 [44393,44435]" dest="number_literal: 0x0000000000000000000000000000000000000000 [14526,14568]"/>
  <match src="call_argument [83656,83666]" dest="call_argument [80683,80693]"/>
  <match src="identifier: amount [20654,20660]" dest="identifier: amount [59546,59552]"/>
  <match src=".: . [95384,95385]" dest=".: . [34540,34541]"/>
  <match src="[: [ [102616,102617]" dest="[: [ [41772,41773]"/>
  <match src="(: ( [46022,46023]" dest="(: ( [16155,16156]"/>
  <match src="]: ] [101571,101572]" dest="]: ] [40727,40728]"/>
  <match src=".: . [102262,102263]" dest=".: . [41418,41419]"/>
  <match src="}: } [9952,9953]" dest="}: } [10516,10517]"/>
  <match src="): ) [35902,35903]" dest="): ) [54296,54297]"/>
  <match src="identifier: file [32332,32336]" dest="identifier: file [50726,50730]"/>
  <match src="pure: pure [29581,29585]" dest="pure: pure [47975,47979]"/>
  <match src="primitive_type [46922,46929]" dest="primitive_type [17055,17062]"/>
  <match src="return_type_definition [10055,10072]" dest="return_type_definition [10619,10636]"/>
  <match src="uint: uint [56191,56195]" dest="uint: uint [24040,24044]"/>
  <match src="address: address [44344,44351]" dest="address: address [14477,14484]"/>
  <match src="expression_statement [83477,83531]" dest="expression_statement [73459,73526]"/>
  <match src="(: ( [31009,31010]" dest="(: ( [49403,49404]"/>
  <match src="state_mutability [74003,74007]" dest="state_mutability [62802,62806]"/>
  <match src="identifier: b [10102,10103]" dest="identifier: b [10666,10667]"/>
  <match src="uint256: uint256 [50208,50215]" dest="uint256: uint256 [57494,57501]"/>
  <match src="identifier: current [103484,103491]" dest="identifier: current [42640,42647]"/>
  <match src="private: private [33822,33829]" dest="private: private [52216,52223]"/>
  <match src="return_statement [48778,48802]" dest="return_statement [18911,18935]"/>
  <match src="): ) [100470,100471]" dest="): ) [39626,39627]"/>
  <match src="state_mutability [27911,27915]" dest="state_mutability [46305,46309]"/>
  <match src="private: private [43949,43956]" dest="private: private [14082,14089]"/>
  <match src="primitive_type [68392,68399]" dest="primitive_type [73313,73320]"/>
  <match src="private: private [41531,41538]" dest="private: private [11664,11671]"/>
  <match src="external: external [13500,13508]" dest="external: external [26489,26497]"/>
  <match src="identifier: reject [105095,105101]" dest="identifier: reject [44251,44257]"/>
  <match src=".: . [94956,94957]" dest=".: . [34112,34113]"/>
  <match src="identifier: a [767,768]" dest="identifier: a [1331,1332]"/>
  <match src="call_argument [31232,31251]" dest="call_argument [49626,49645]"/>
  <match src="type_name [36241,36248]" dest="type_name [54635,54642]"/>
  <match src="state_mutability [8040,8044]" dest="state_mutability [8604,8608]"/>
  <match src="type_name [45466,45478]" dest="type_name [15599,15611]"/>
  <match src="parameter [81761,81774]" dest="parameter [72259,72272]"/>
  <match src="): ) [19800,19801]" dest="): ) [65422,65423]"/>
  <match src="call_argument [9304,9305]" dest="call_argument [9868,9869]"/>
  <match src="identifier: _ [106817,106818]" dest="identifier: _ [70159,70160]"/>
  <match src="type_name [68122,68134]" dest="type_name [68782,68794]"/>
  <match src="return_type_definition [8844,8858]" dest="return_type_definition [9408,9422]"/>
  <match src="identifier: require [91228,91235]" dest="identifier: require [77538,77545]"/>
  <match src="primitive_type [35199,35206]" dest="primitive_type [53593,53600]"/>
  <match src="address: address [53444,53451]" dest="address: address [61320,61327]"/>
  <match src="identifier: reserveA [79126,79134]" dest="identifier: couponAge [62924,62933]"/>
  <match src="): ) [85106,85107]" dest="): ) [59501,59502]"/>
  <match src="): ) [35989,35990]" dest="): ) [54383,54384]"/>
  <match src="(: ( [106687,106688]" dest="(: ( [70029,70030]"/>
  <match src="number_literal: 6e16 [44084,44088]" dest="number_literal: 6e16 [14217,14221]"/>
  <match src="type_name [3399,3406]" dest="type_name [3963,3970]"/>
  <match src="return_statement [92898,92913]" dest="return_statement [32054,32069]"/>
  <match src="identifier: candidates [104883,104893]" dest="identifier: candidates [44039,44049]"/>
  <match src="identifier: a [834,835]" dest="identifier: a [1398,1399]"/>
  <match src="(: ( [5994,5995]" dest="(: ( [6558,6559]"/>
  <match src=",: , [32337,32338]" dest=",: , [50731,50732]"/>
  <match src="type_name [65863,65870]" dest="type_name [79023,79030]"/>
  <match src="(: ( [8475,8476]" dest="(: ( [9039,9040]"/>
  <match src=".: . [93550,93551]" dest=".: . [32706,32707]"/>
  <match src="identifier: State [92492,92497]" dest="identifier: State [31648,31653]"/>
  <match src="identifier: liquidity [56117,56126]" dest="identifier: liquidity [23966,23975]"/>
  <match src="{: { [47180,47181]" dest="{: { [17313,17314]"/>
  <match src="call_argument [50093,50097]" dest="call_argument [56446,56450]"/>
  <match src="binary_expression [35524,35534]" dest="binary_expression [53918,53928]"/>
  <match src="internal: internal [47264,47272]" dest="internal: internal [17397,17405]"/>
  <match src="(: ( [94375,94376]" dest="(: ( [33531,33532]"/>
  <match src="): ) [46664,46665]" dest="): ) [16797,16798]"/>
  <match src="comment: /**  * @dev Optional functions from the ERC20 standard.  */ [23151,23210]" dest="comment: /**  * @title Require  * @author dYdX  *  * Stringifies parameters to pretty-print revert messages. Costs more gas than regular require()  */ [45572,45713]"/>
  <match src=".: . [100756,100757]" dest=".: . [39912,39913]"/>
  <match src="{: { [90288,90289]" dest="{: { [76598,76599]"/>
  <match src="revert_statement [28990,29431]" dest="revert_statement [47384,47825]"/>
  <match src=",: , [55077,55078]" dest=",: , [22926,22927]"/>
  <match src="&quot;: &quot; [83187,83188]" dest="&quot;: &quot; [82257,82258]"/>
  <match src=",: , [2637,2638]" dest=",: , [3201,3202]"/>
  <match src="=: = [42724,42725]" dest="=: = [12857,12858]"/>
  <match src="returns: returns [95630,95637]" dest="returns: returns [34786,34793]"/>
  <match src="call_expression [100581,100618]" dest="call_expression [39737,39774]"/>
  <match src="variable_declaration [33433,33447]" dest="variable_declaration [51827,51841]"/>
  <match src="comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      */ [2096,2540]" dest="comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      */ [2660,3104]"/>
  <match src="function_definition [93133,93231]" dest="function_definition [32289,32387]"/>
  <match src="struct_member [88453,88472]" dest="struct_member [29953,29972]"/>
  <match src="=: = [105304,105305]" dest="=: = [44460,44461]"/>
  <match src="identifier: balanceCheck [84705,84717]" dest="identifier: balanceCheck [56817,56829]"/>
  <match src="comment: // 4 hours [42369,42379]" dest="comment: // 4 hours [12502,12512]"/>
  <match src="pure: pure [9507,9511]" dest="pure: pure [10071,10075]"/>
  <match src="if_statement [29600,30000]" dest="if_statement [47994,48394]"/>
  <match src=".: . [6592,6593]" dest=".: . [7156,7157]"/>
  <match src="type_name [80772,80779]" dest="type_name [71405,71412]"/>
  <match src=".: . [8891,8892]" dest=".: . [9455,9456]"/>
  <match src="{: { [93625,93626]" dest="{: { [32781,32782]"/>
  <match src="identifier: a [3411,3412]" dest="identifier: a [3975,3976]"/>
  <match src="visibility [55137,55145]" dest="visibility [22986,22994]"/>
  <match src="call_argument [82947,82952]" dest="call_argument [74218,74223]"/>
  <match src="): ) [100182,100183]" dest="): ) [39338,39339]"/>
  <match src="member_expression [102296,102310]" dest="member_expression [41452,41466]"/>
  <match src="parameter [45972,45991]" dest="parameter [16105,16124]"/>
  <match src="call_argument [20134,20140]" dest="call_argument [65987,65993]"/>
  <match src="identifier: b [7676,7677]" dest="identifier: b [8240,8241]"/>
  <match src="]: ] [105131,105132]" dest="]: ] [44287,44288]"/>
  <match src="type_name [97833,97840]" dest="type_name [36989,36996]"/>
  <match src="type_name [55701,55708]" dest="type_name [23550,23557]"/>
  <match src="type_name [88193,88200]" dest="type_name [29693,29700]"/>
  <match src="return_type_definition [13105,13119]" dest="return_type_definition [26094,26108]"/>
  <match src="identifier: amount [20134,20140]" dest="identifier: amount [65987,65993]"/>
  <match src="call_argument [21363,21364]" dest="call_argument [62528,62529]"/>
  <match src="primitive_type [79548,79555]" dest="primitive_type [59947,59954]"/>
  <match src="for: for [80768,80771]" dest="for: for [71401,71404]"/>
  <match src="member_expression [101269,101284]" dest="member_expression [40425,40440]"/>
  <match src=".: . [82651,82652]" dest=".: . [72844,72845]"/>
  <match src="memory: memory [8954,8960]" dest="memory: memory [9518,9524]"/>
  <match src="address: address [44385,44392]" dest="address: address [14518,14525]"/>
  <match src="state_mutability [54239,54243]" dest="state_mutability [22088,22092]"/>
  <match src="visibility [54717,54725]" dest="visibility [22566,22574]"/>
  <match src="(: ( [27985,27986]" dest="(: ( [46379,46380]"/>
  <match src="=: = [44589,44590]" dest="=: = [14722,14723]"/>
  <match src="visibility [26487,26495]" dest="visibility [56389,56397]"/>
  <match src="state_mutability [32175,32179]" dest="state_mutability [50569,50573]"/>
  <match src="=: = [99983,99984]" dest="=: = [39139,39140]"/>
  <match src="return: return [48473,48479]" dest="return: return [18606,18612]"/>
  <match src="parameter [54253,54266]" dest="parameter [22102,22115]"/>
  <match src="visibility [78872,78879]" dest="visibility [68243,68250]"/>
  <match src="identifier: amount [75912,75918]" dest="identifier: amount [56658,56664]"/>
  <match src="pure: pure [28361,28365]" dest="pure: pure [46755,46759]"/>
  <match src="external: external [82334,82342]" dest="external: external [72537,72545]"/>
  <match src=".: . [105764,105765]" dest=".: . [44920,44921]"/>
  <match src="primitive_type [97527,97534]" dest="primitive_type [36683,36690]"/>
  <match src="return_statement [44797,44816]" dest="return_statement [14930,14949]"/>
  <match src="(: ( [16218,16219]" dest="(: ( [58809,58810]"/>
  <match src="parameter [55816,55832]" dest="parameter [23665,23681]"/>
  <match src="address: address [81589,81596]" dest="address: address [72112,72119]"/>
  <match src="call_argument [32675,32681]" dest="call_argument [51069,51075]"/>
  <match src="member_expression [95665,95680]" dest="member_expression [34821,34836]"/>
  <match src="call_argument [44291,44333]" dest="call_argument [14424,14466]"/>
  <match src="=: = [27607,27608]" dest="=: = [46001,46002]"/>
  <match src="type_name [82394,82401]" dest="type_name [67810,67817]"/>
  <match src="identifier: stringify [30469,30478]" dest="identifier: stringify [48863,48872]"/>
  <match src="(: ( [91284,91285]" dest="(: ( [77594,77595]"/>
  <match src="bytes: bytes [91124,91129]" dest="bytes: bytes [77434,77439]"/>
  <match src="type_name [96661,96668]" dest="type_name [35817,35824]"/>
  <match src="=: = [43100,43101]" dest="=: = [13233,13234]"/>
  <match src="call_expression [7615,7642]" dest="call_expression [8179,8206]"/>
  <match src="call_argument [76873,76879]" dest="call_argument [65714,65720]"/>
  <match src="function: function [54675,54683]" dest="function: function [22524,22532]"/>
  <match src="}: } [6205,6206]" dest="}: } [6769,6770]"/>
  <match src="): ) [104297,104298]" dest="): ) [43453,43454]"/>
  <match src="uint256: uint256 [97967,97974]" dest="uint256: uint256 [37123,37130]"/>
  <match src="state_variable_declaration [41932,41986]" dest="state_variable_declaration [12065,12119]"/>
  <match src="uint: uint [55408,55412]" dest="uint: uint [23257,23261]"/>
  <match src="comment: // 30% - higher quorum for better governance [42620,42664]" dest="comment: // 30% - higher quorum for better governance [12753,12797]"/>
  <match src="identifier: value [7369,7374]" dest="identifier: value [7933,7938]"/>
  <match src="member_expression [93203,93217]" dest="member_expression [32359,32373]"/>
  <match src="user_defined_type [106523,106530]" dest="user_defined_type [69865,69872]"/>
  <match src="function_body [96528,96592]" dest="function_body [35684,35748]"/>
  <match src="call_argument [6769,6807]" dest="call_argument [7333,7371]"/>
  <match src="identifier: success [91236,91243]" dest="identifier: success [77546,77553]"/>
  <match src="struct_member [89341,89388]" dest="struct_member [30841,30888]"/>
  <match src="type_name [93256,93263]" dest="type_name [32412,32419]"/>
  <match src="(: ( [95039,95040]" dest="(: ( [34195,34196]"/>
  <match src=".: . [85125,85126]" dest=".: . [59292,59293]"/>
  <match src="address: address [89249,89256]" dest="address: address [30749,30756]"/>
  <match src=",: , [6669,6670]" dest=",: , [7233,7234]"/>
  <match src="call_argument [100011,100017]" dest="call_argument [39167,39173]"/>
  <match src=".: . [98275,98276]" dest=".: . [37431,37432]"/>
  <match src="call_argument [96292,96307]" dest="call_argument [35448,35463]"/>
  <match src="identifier: value [10172,10177]" dest="identifier: value [10736,10741]"/>
  <match src="): ) [82102,82103]" dest="): ) [72330,72331]"/>
  <match src="): ) [9446,9447]" dest="): ) [10010,10011]"/>
  <match src="): ) [29742,29743]" dest="): ) [48136,48137]"/>
  <match src="bytes: bytes [34940,34945]" dest="bytes: bytes [53334,53339]"/>
  <match src="identifier: _state [95070,95076]" dest="identifier: _state [34226,34232]"/>
  <match src="identifier: account [26170,26177]" dest="identifier: account [56364,56371]"/>
  <match src="(: ( [318,319]" dest="(: ( [882,883]"/>
  <match src="(: ( [48260,48261]" dest="(: ( [18393,18394]"/>
  <match src="type_name [105227,105233]" dest="type_name [44383,44389]"/>
  <match src="uint256: uint256 [94828,94835]" dest="uint256: uint256 [33984,33991]"/>
  <match src="member_expression [106988,107002]" dest="member_expression [70330,70344]"/>
  <match src="call_argument [6345,6378]" dest="call_argument [6909,6942]"/>
  <match src="): ) [30617,30618]" dest="): ) [49011,49012]"/>
  <match src="identifier: balance [93856,93863]" dest="identifier: balance [33012,33019]"/>
  <match src="identifier: getDAOExitLockupEpochs [46874,46896]" dest="identifier: getDAOExitLockupEpochs [17007,17029]"/>
  <match src="type_name [8949,8953]" dest="type_name [9513,9517]"/>
  <match src="}: } [87241,87242]" dest="}: } [75751,75752]"/>
  <match src="): ) [102285,102286]" dest="): ) [41441,41442]"/>
  <match src="identifier: D256 [8193,8197]" dest="identifier: D256 [8757,8761]"/>
  <match src="(: ( [52914,52915]" dest="(: ( [56191,56192]"/>
  <match src="comment: // Only one epoch strategy [95985,96011]" dest="comment: // Only one epoch strategy [35141,35167]"/>
  <match src="user_defined_type [8058,8062]" dest="user_defined_type [8622,8626]"/>
  <match src=",: , [31015,31016]" dest=",: , [49409,49410]"/>
  <match src="): ) [4697,4698]" dest="): ) [5261,5262]"/>
  <match src="comment: /**      * Governance      */ [104204,104233]" dest="comment: /**      * Governance      */ [43360,43389]"/>
  <match src="): ) [100311,100312]" dest="): ) [39467,39468]"/>
  <match src="function_body [8493,8571]" dest="function_body [9057,9135]"/>
  <match src="address: address [97527,97534]" dest="address: address [36683,36690]"/>
  <match src="!=: != [33409,33411]" dest="!=: != [51803,51805]"/>
  <match src="identifier: reason [8230,8236]" dest="identifier: reason [8794,8800]"/>
  <match src="primitive_type [91016,91023]" dest="primitive_type [77326,77333]"/>
  <match src="type_name [88937,88944]" dest="type_name [30437,30444]"/>
  <match src="identifier: bonded [100000,100006]" dest="identifier: bonded [39156,39162]"/>
  <match src="expression_statement [34060,34069]" dest="expression_statement [52454,52463]"/>
  <match src="&quot;: &quot; [22000,22001]" dest="&quot;: &quot; [65106,65107]"/>
  <match src="view: view [92952,92956]" dest="view: view [32108,32112]"/>
  <match src="type_name [56258,56265]" dest="type_name [24107,24114]"/>
  <match src="primitive_type [88679,88686]" dest="primitive_type [30179,30186]"/>
  <match src="returns: returns [93710,93717]" dest="returns: returns [32866,32873]"/>
  <match src="uint256: uint256 [28906,28913]" dest="uint256: uint256 [47300,47307]"/>
  <match src="): ) [81275,81276]" dest="): ) [71773,71774]"/>
  <match src="identifier: mint [79543,79547]" dest="identifier: mint [59942,59946]"/>
  <match src="}: } [481,482]" dest="}: } [1045,1046]"/>
  <match src=".: . [103460,103461]" dest=".: . [42616,42617]"/>
  <match src="uint256: uint256 [30126,30133]" dest="uint256: uint256 [48520,48527]"/>
  <match src="): ) [30881,30882]" dest="): ) [49275,49276]"/>
  <match src="visibility [10981,10989]" dest="visibility [19837,19845]"/>
  <match src="uint256: uint256 [88751,88758]" dest="uint256: uint256 [30251,30258]"/>
  <match src="parameter [28275,28287]" dest="parameter [46669,46681]"/>
  <match src="identifier: add [104747,104750]" dest="identifier: add [43903,43906]"/>
  <match src="expression_statement [50914,51007]" dest="expression_statement [65573,65661]"/>
  <match src="): ) [94881,94882]" dest="): ) [34037,34038]"/>
  <match src="comment: /**  * @dev Implementation of the {IERC20} interface.  *  * This implementation is agnostic to the way tokens are created. This means  * that a supply mechanism has to be added in a derived contract using {_mint}.  * For a generic mechanism see {ERC20Mintable}.  *  * TIP: For a detailed writeup see our guide  * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How  * to implement supply mechanisms].  *  * We have followed general OpenZeppelin guidelines: functions revert instead  * of returning `false` on failure. This behavior is nonetheless conventional  * and does not conflict with the expectations of ERC20 applications.  *  * Additionally, an {Approval} event is emitted on calls to {transferFrom}.  * This allows applications to reconstruct the allowance for all accounts just  * by listening to said events. Other implementations of the EIP may not emit  * these events, as it isn't required by the specification.  *  * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}  * functions have been added to mitigate the well-known issues around setting  * allowances. See {IERC20-approve}.  */ [14571,15723]" dest="comment: /*     Copyright 2021 Ethic Money Devs &lt;devs@ethic.money&gt; and Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [18945,19628]"/>
  <match src="indexed: indexed [25713,25720]" dest="indexed: indexed [61140,61147]"/>
  <match src="identifier: file [32045,32049]" dest="identifier: file [50439,50443]"/>
  <match src="identifier: balance [101040,101047]" dest="identifier: balance [40196,40203]"/>
  <match src="type_name [71245,71252]" dest="type_name [66943,66950]"/>
  <match src="call_argument [107040,107062]" dest="call_argument [70382,70404]"/>
  <match src="external: external [56414,56422]" dest="external: external [24263,24271]"/>
  <match src="type_name [96800,96807]" dest="type_name [35956,35963]"/>
  <match src="address: address [55756,55763]" dest="address: address [23605,23612]"/>
  <match src="}: } [98178,98179]" dest="}: } [37334,37335]"/>
  <match src="identifier: votes [97482,97487]" dest="identifier: votes [36638,36643]"/>
  <match src="member_expression [94682,94699]" dest="member_expression [33838,33855]"/>
  <match src="type_name [55517,55524]" dest="type_name [23366,23373]"/>
  <match src="call_expression [19955,20026]" dest="call_expression [57374,57432]"/>
  <match src="type_cast_expression [35058,35085]" dest="type_cast_expression [53452,53479]"/>
  <match src="call_expression [102234,102286]" dest="call_expression [41390,41442]"/>
  <match src="private: private [32871,32878]" dest="private: private [51265,51272]"/>
  <match src="parameter [7251,7267]" dest="parameter [7815,7831]"/>
  <match src="event: event [55220,55225]" dest="event: event [23069,23074]"/>
  <match src="): ) [94600,94601]" dest="): ) [33756,33757]"/>
  <match src=",: , [23131,23132]" dest=",: , [56709,56710]"/>
  <match src="call_argument [8556,8560]" dest="call_argument [9120,9124]"/>
  <match src="variable_declaration [7596,7612]" dest="variable_declaration [8160,8176]"/>
  <match src="identifier: b [8827,8828]" dest="identifier: b [9391,9392]"/>
  <match src="): ) [99563,99564]" dest="): ) [38719,38720]"/>
  <match src="internal: internal [47526,47534]" dest="internal: internal [17659,17667]"/>
  <match src="call_struct_argument [8517,8561]" dest="call_struct_argument [9081,9125]"/>
  <match src="primitive_type [105031,105038]" dest="primitive_type [44187,44194]"/>
  <match src="uint256: uint256 [81431,81438]" dest="uint256: uint256 [83745,83752]"/>
  <match src="&quot;: &quot; [22498,22499]" dest="&quot;: &quot; [71895,71896]"/>
  <match src="identifier: balance [99968,99975]" dest="identifier: balance [39124,39131]"/>
  <match src="call_expression [35890,35903]" dest="call_expression [54284,54297]"/>
  <match src="call_argument [100176,100182]" dest="call_argument [39332,39338]"/>
  <match src="type_name [6489,6496]" dest="type_name [7053,7060]"/>
  <match src="{: { [91519,91520]" dest="{: { [77829,77830]"/>
  <match src="call_argument [83278,83288]" dest="call_argument [80001,80011]"/>
  <match src=",: , [1653,1654]" dest=",: , [2217,2218]"/>
  <match src="type_name [81109,81116]" dest="type_name [71541,71548]"/>
  <match src="function: function [52819,52827]" dest="function: function [56104,56112]"/>
  <match src=".: . [103814,103815]" dest=".: . [42970,42971]"/>
  <match src="memory: memory [8063,8069]" dest="memory: memory [8627,8633]"/>
  <match src="state_mutability [93602,93606]" dest="state_mutability [32758,32762]"/>
  <match src="parameter [48454,48461]" dest="parameter [18587,18594]"/>
  <match src="call_argument [82181,82186]" dest="call_argument [72943,72948]"/>
  <match src="identifier: b [8890,8891]" dest="identifier: b [9454,9455]"/>
  <match src="): ) [29190,29191]" dest="): ) [47584,47585]"/>
  <match src="): ) [28177,28178]" dest="): ) [46571,46572]"/>
  <match src="function: function [46231,46239]" dest="function: function [16364,16372]"/>
  <match src=",: , [28554,28555]" dest=",: , [46948,46949]"/>
  <match src="public: public [97946,97952]" dest="public: public [37102,37108]"/>
  <match src="type_name [45744,45751]" dest="type_name [15877,15884]"/>
  <match src="comment: /* Epoch */ [42022,42033]" dest="comment: /* Epoch */ [12155,12166]"/>
  <match src="identifier: price1Cumulative [68188,68204]" dest="identifier: newBonded [68036,68045]"/>
  <match src="identifier: msg [81993,81996]" dest="identifier: msg [72477,72480]"/>
  <match src="comment: // populate the most-significant character [35462,35504]" dest="comment: // populate the most-significant character [53856,53898]"/>
  <match src="identifier: stringify [35641,35650]" dest="identifier: stringify [54035,54044]"/>
  <match src="member_expression [100281,100304]" dest="member_expression [39437,39460]"/>
  <match src="identifier: balanceOfPhantom [83353,83369]" dest="identifier: balanceOf [73373,73382]"/>
  <match src="identifier: owner [103051,103056]" dest="identifier: owner [42207,42212]"/>
  <match src="primitive_type [81191,81198]" dest="primitive_type [61385,61392]"/>
  <match src="function_definition [104429,104582]" dest="function_definition [43585,43738]"/>
  <match src="variable_declaration_statement [7596,7643]" dest="variable_declaration_statement [8160,8207]"/>
  <match src="call_argument [101091,101101]" dest="call_argument [40247,40257]"/>
  <match src="): ) [104757,104758]" dest="): ) [43913,43914]"/>
  <match src="identifier: _state [103710,103716]" dest="identifier: _state [42866,42872]"/>
  <match src="): ) [47368,47369]" dest="): ) [17501,17502]"/>
  <match src="parameter [11578,11585]" dest="parameter [24567,24574]"/>
  <match src="string_literal [81907,81942]" dest="string_literal [72413,72451]"/>
  <match src="memory: memory [7513,7519]" dest="memory: memory [8077,8083]"/>
  <match src="): ) [55301,55302]" dest="): ) [23150,23151]"/>
  <match src="{: { [69222,69223]" dest="{: { [62623,62624]"/>
  <match src="function: function [98185,98193]" dest="function: function [37341,37349]"/>
  <match src="primitive_type [101193,101199]" dest="primitive_type [40349,40355]"/>
  <match src="}: } [1970,1971]" dest="}: } [2534,2535]"/>
  <match src="identifier: epoch [83778,83783]" dest="identifier: epoch [73640,73645]"/>
  <match src="state_variable_declaration [80990,81029]" dest="state_variable_declaration [71419,71461]"/>
  <match src="function: function [97509,97517]" dest="function: function [36665,36673]"/>
  <match src="identifier: _state [95665,95671]" dest="identifier: _state [34821,34827]"/>
  <match src="comment: //  Mainnet  [41390,41402]" dest="comment: //  Mainnet  [11523,11535]"/>
  <match src="parenthesized_expression [32225,32735]" dest="parenthesized_expression [50619,51129]"/>
  <match src="identifier: b [8547,8548]" dest="identifier: b [9111,9112]"/>
  <match src="indexed: indexed [54082,54089]" dest="indexed: indexed [21931,21938]"/>
  <match src="identifier: totalSupply [11541,11552]" dest="identifier: totalSupply [24530,24541]"/>
  <match src="function_definition [103619,103833]" dest="function_definition [42775,42989]"/>
  <match src="primitive_type [42770,42777]" dest="primitive_type [12903,12910]"/>
  <match src="identifier: value [7201,7206]" dest="identifier: value [7765,7770]"/>
  <match src=".: . [103340,103341]" dest=".: . [42496,42497]"/>
  <match src="(: ( [103819,103820]" dest="(: ( [42975,42976]"/>
  <match src="return_type_definition [97824,97841]" dest="return_type_definition [36980,36997]"/>
  <match src="(: ( [9933,9934]" dest="(: ( [10497,10498]"/>
  <match src="comment: // determine the length of the input by finding the location of the last non-zero byte [33032,33118]" dest="comment: // determine the length of the input by finding the location of the last non-zero byte [51426,51512]"/>
  <match src="comment: // 20% [44149,44155]" dest="comment: // 20% [14282,14288]"/>
  <match src="function_body [103219,103367]" dest="function_body [42375,42523]"/>
  <match src="type_name [6236,6243]" dest="type_name [6800,6807]"/>
  <match src="=: = [36393,36394]" dest="=: = [54787,54788]"/>
  <match src="identifier: getBootstrappingPrice [45419,45440]" dest="identifier: getBootstrappingPrice [15552,15573]"/>
  <match src="primitive_type [33132,33139]" dest="primitive_type [51526,51533]"/>
  <match src="number_literal: 24 [43566,43568]" dest="number_literal: 24 [13699,13701]"/>
  <match src="string [58282,58319]" dest="string [74039,74075]"/>
  <match src="identifier: amount [53030,53036]" dest="identifier: amount [56381,56387]"/>
  <match src="): ) [1664,1665]" dest="): ) [2228,2229]"/>
  <match src="state_mutability [28946,28950]" dest="state_mutability [47340,47344]"/>
  <match src=".: . [100559,100560]" dest=".: . [39715,39716]"/>
  <match src="{: { [98583,98584]" dest="{: { [37739,37740]"/>
  <match src="identifier: start [98298,98303]" dest="identifier: start [37454,37459]"/>
  <match src=".: . [101047,101048]" dest=".: . [40203,40204]"/>
  <match src="(: ( [82896,82897]" dest="(: ( [57034,57035]"/>
  <match src="call_argument [81524,81534]" dest="call_argument [79325,79335]"/>
  <match src="): ) [31592,31593]" dest="): ) [49986,49987]"/>
  <match src="state_mutability [86670,86674]" dest="state_mutability [75180,75184]"/>
  <match src="parameter [95040,95054]" dest="parameter [34196,34210]"/>
  <match src="parameter [20450,20464]" dest="parameter [59596,59610]"/>
  <match src="): ) [98170,98171]" dest="): ) [37326,37327]"/>
  <match src="member_expression [78081,78092]" dest="member_expression [61788,61799]"/>
  <match src="interface_declaration [11438,14004]" dest="interface_declaration [24427,26993]"/>
  <match src="expression_statement [36471,36516]" dest="expression_statement [54865,54910]"/>
  <match src="comment: // 100 ETHC -&gt; 100M ETHCS [41987,42012]" dest="comment: // 100 ETHC -&gt; 100M ETHCS [12120,12145]"/>
  <match src="&quot;: &quot; [84111,84112]" dest="&quot;: &quot; [80957,80958]"/>
  <match src="variable_declaration [34141,34158]" dest="variable_declaration [52535,52552]"/>
  <match src="member_expression [95139,95153]" dest="member_expression [34295,34309]"/>
  <match src="&quot;: &quot; [58282,58283]" dest="&quot;: &quot; [74039,74040]"/>
  <match src="identifier: must [32199,32203]" dest="identifier: must [50593,50597]"/>
  <match src="): ) [36891,36892]" dest="): ) [55285,55286]"/>
  <match src="function_body [99589,99618]" dest="function_body [38745,38774]"/>
  <match src="indexed: indexed [13738,13745]" dest="indexed: indexed [26727,26734]"/>
  <match src="identifier: data [56285,56289]" dest="identifier: data [24134,24138]"/>
  <match src="type_name [98059,98066]" dest="type_name [37215,37222]"/>
  <match src="primitive_type [97659,97666]" dest="primitive_type [36815,36822]"/>
  <match src="identifier: value [9549,9554]" dest="identifier: value [10113,10118]"/>
  <match src="identifier: account [101421,101428]" dest="identifier: account [40577,40584]"/>
  <match src="number_literal: 18 [5678,5680]" dest="number_literal: 18 [6242,6244]"/>
  <match src="visibility [36633,36640]" dest="visibility [55027,55034]"/>
  <match src="call_expression [9288,9306]" dest="call_expression [9852,9870]"/>
  <match src="identifier: updatePrice [68091,68102]" dest="identifier: oracleCapture [68749,68762]"/>
  <match src="==: == [8887,8889]" dest="==: == [9451,9453]"/>
  <match src="parameter [76147,76161]" dest="parameter [84322,84336]"/>
  <match src="returns: returns [54726,54733]" dest="returns: returns [22575,22582]"/>
  <match src="uint256: uint256 [76428,76435]" dest="uint256: uint256 [57071,57078]"/>
  <match src="identifier: D256 [9987,9991]" dest="identifier: D256 [10551,10555]"/>
  <match src="primitive_type [13063,13070]" dest="primitive_type [26052,26059]"/>
  <match src="): ) [54994,54995]" dest="): ) [22843,22844]"/>
  <match src="call_expression [84705,84719]" dest="call_expression [56817,56831]"/>
  <match src="(: ( [28673,28674]" dest="(: ( [47067,47068]"/>
  <match src="identifier: div [8586,8589]" dest="identifier: div [9150,9153]"/>
  <match src="string_literal [92802,92821]" dest="string_literal [31958,31977]"/>
  <match src="(: ( [81887,81888]" dest="(: ( [72393,72394]"/>
  <match src="type_name [44344,44351]" dest="type_name [14477,14484]"/>
  <match src="): ) [32913,32914]" dest="): ) [51307,51308]"/>
  <match src="): ) [8131,8132]" dest="): ) [8695,8696]"/>
  <match src="{: { [73208,73209]" dest="{: { [59188,59189]"/>
  <match src="call_expression [100281,100312]" dest="call_expression [39437,39468]"/>
  <match src="call_argument [84205,84215]" dest="call_argument [79383,79393]"/>
  <match src="return_statement [97243,97294]" dest="return_statement [36399,36450]"/>
  <match src=".: . [7380,7381]" dest=".: . [7944,7945]"/>
  <match src="return_statement [98118,98173]" dest="return_statement [37274,37329]"/>
  <match src="parameter [73331,73335]" dest="parameter [82578,82582]"/>
  <match src=",: , [51909,51910]" dest=",: , [27845,27846]"/>
  <match src=",: , [82929,82930]" dest=",: , [74191,74192]"/>
  <match src="bytes32: bytes32 [32037,32044]" dest="bytes32: bytes32 [50431,50438]"/>
  <match src="identifier: file [31486,31490]" dest="identifier: file [49880,49884]"/>
  <match src="address: address [73437,73444]" dest="address: address [82539,82546]"/>
  <match src="(: ( [85129,85130]" dest="(: ( [59296,59297]"/>
  <match src="member_expression [93088,93103]" dest="member_expression [32244,32259]"/>
  <match src="function_definition [6212,6386]" dest="function_definition [6776,6950]"/>
  <match src="function: function [9738,9746]" dest="function: function [10302,10310]"/>
  <match src="primitive_type [21856,21863]" dest="primitive_type [65040,65047]"/>
  <match src="address: address [99641,99648]" dest="address: address [38797,38804]"/>
  <match src="event_paramater [54097,54120]" dest="event_paramater [21946,21969]"/>
  <match src=",: , [9808,9809]" dest=",: , [10372,10373]"/>
  <match src="private: private [42870,42877]" dest="private: private [13003,13010]"/>
  <match src="address: address [90785,90792]" dest="address: address [77095,77102]"/>
  <match src="): ) [55621,55622]" dest="): ) [23470,23471]"/>
  <match src="identifier: char [35538,35542]" dest="identifier: char [53932,53936]"/>
  <match src="identifier: amount [77139,77145]" dest="identifier: amount [20336,20342]"/>
  <match src="}: } [94312,94313]" dest="}: } [33468,33469]"/>
  <match src="state_variable_declaration [44547,44643]" dest="state_variable_declaration [14680,14776]"/>
  <match src="visibility [45949,45957]" dest="visibility [16082,16090]"/>
  <match src="type_name [38271,38278]" dest="type_name [65345,65352]"/>
  <match src="number_literal: 0 [94630,94631]" dest="number_literal: 0 [33786,33787]"/>
  <match src="function_definition [30673,31430]" dest="function_definition [49067,49824]"/>
  <match src="function: function [9179,9187]" dest="function: function [9743,9751]"/>
  <match src=".: . [95268,95269]" dest=".: . [34424,34425]"/>
  <match src="): ) [6693,6694]" dest="): ) [7257,7258]"/>
  <match src="(: ( [45050,45051]" dest="(: ( [15183,15184]"/>
  <match src="string_literal [50758,50777]" dest="string_literal [56761,56805]"/>
  <match src="internal: internal [105739,105747]" dest="internal: internal [44895,44903]"/>
  <match src="identifier: msg [83505,83508]" dest="identifier: msg [73554,73557]"/>
  <match src="identifier: staged [101923,101929]" dest="identifier: staged [41079,41085]"/>
  <match src="{: { [94883,94884]" dest="{: { [34039,34040]"/>
  <match src="): ) [93184,93185]" dest="): ) [32340,32341]"/>
  <match src="(: ( [54767,54768]" dest="(: ( [22616,22617]"/>
  <match src="identifier: amount [99666,99672]" dest="identifier: amount [38822,38828]"/>
  <match src="identifier: unfreeze [77998,78006]" dest="identifier: step [61504,61508]"/>
  <match src="if: if [28380,28382]" dest="if: if [46774,46776]"/>
  <match src="identifier: stringifyTruncated [31702,31720]" dest="identifier: stringifyTruncated [50096,50114]"/>
  <match src="internal: internal [7117,7125]" dest="internal: internal [7681,7689]"/>
  <match src="type_name [88702,88709]" dest="type_name [30202,30209]"/>
  <match src="type_name [88045,88052]" dest="type_name [29545,29552]"/>
  <match src="address: address [41756,41763]" dest="address: address [11889,11896]"/>
  <match src="function: function [94484,94492]" dest="function: function [33640,33648]"/>
  <match src="pure: pure [1276,1280]" dest="pure: pure [1840,1844]"/>
  <match src="identifier: FILE [85666,85670]" dest="identifier: FILE [79928,79932]"/>
  <match src="number_literal: 75 [43201,43203]" dest="number_literal: 75 [13334,13336]"/>
  <match src="address: address [19703,19710]" dest="address: address [65310,65317]"/>
  <match src="identifier: LPAREN [31124,31130]" dest="identifier: LPAREN [49518,49524]"/>
  <match src=",: , [32573,32574]" dest=",: , [50967,50968]"/>
  <match src="visibility [5964,5972]" dest="visibility [6528,6536]"/>
  <match src="comment: /**      * Account      */ [94319,94345]" dest="comment: /**      * Account      */ [33475,33501]"/>
  <match src="type_name [55091,55095]" dest="type_name [22940,22944]"/>
  <match src="type_name [54314,54320]" dest="type_name [22163,22169]"/>
  <match src="(: ( [8057,8058]" dest="(: ( [8621,8622]"/>
  <match src="function_body [81808,82018]" dest="function_body [72314,72502]"/>
  <match src="): ) [28605,28606]" dest="): ) [46999,47000]"/>
  <match src="&quot;: &quot; [84139,84140]" dest="&quot;: &quot; [80971,80972]"/>
  <match src="primitive_type [55939,55943]" dest="primitive_type [23788,23792]"/>
  <match src="type_name [97363,97370]" dest="type_name [36519,36526]"/>
  <match src="(: ( [6226,6227]" dest="(: ( [6790,6791]"/>
  <match src="variable_declaration_statement [67580,67622]" dest="variable_declaration_statement [67087,67131]"/>
  <match src="): ) [35726,35727]" dest="): ) [54120,54121]"/>
  <match src="return_type_definition [8978,8992]" dest="return_type_definition [9542,9556]"/>
  <match src="parameter [11995,12009]" dest="parameter [24984,24998]"/>
  <match src="uint256: uint256 [4690,4697]" dest="uint256: uint256 [5254,5261]"/>
  <match src=".: . [94275,94276]" dest=".: . [33431,33432]"/>
  <match src="): ) [92971,92972]" dest="): ) [32127,32128]"/>
  <match src=".: . [97016,97017]" dest=".: . [36172,36173]"/>
  <match src=".: . [100606,100607]" dest=".: . [39762,39763]"/>
  <match src="address: address [104800,104807]" dest="address: address [43956,43963]"/>
  <match src="function_definition [55715,55765]" dest="function_definition [23564,23614]"/>
  <match src="type_name [56396,56403]" dest="type_name [24245,24252]"/>
  <match src="primitive_type [99692,99696]" dest="primitive_type [38848,38852]"/>
  <match src="number_literal: 0 [101438,101439]" dest="number_literal: 0 [40594,40595]"/>
  <match src="state_mutability [7130,7134]" dest="state_mutability [7694,7698]"/>
  <match src="&quot;: &quot; [21271,21272]" dest="&quot;: &quot; [57009,57010]"/>
  <match src="function_body [94837,94978]" dest="function_body [33993,34134]"/>
  <match src="type_name [54951,54958]" dest="type_name [22800,22807]"/>
  <match src="memory: memory [91130,91136]" dest="memory: memory [77440,77446]"/>
  <match src="number_literal: 66 [35900,35902]" dest="number_literal: 66 [54294,54296]"/>
  <match src="memory: memory [68490,68496]" dest="memory: memory [68827,68833]"/>
  <match src="primitive_type [105192,105199]" dest="primitive_type [44348,44355]"/>
  <match src="identifier: balance [102748,102755]" dest="identifier: balance [41904,41911]"/>
  <match src="emit_statement [91271,91304]" dest="emit_statement [77581,77614]"/>
  <match src="memory: memory [66713,66719]" dest="memory: memory [21303,21309]"/>
  <match src="(: ( [55815,55816]" dest="(: ( [23664,23665]"/>
  <match src="state_mutability [45609,45613]" dest="state_mutability [15742,15746]"/>
  <match src="(: ( [13707,13708]" dest="(: ( [26696,26697]"/>
  <match src="function_body [107120,107310]" dest="function_body [70462,70652]"/>
  <match src="(: ( [33883,33884]" dest="(: ( [52277,52278]"/>
  <match src="call_expression [106967,106984]" dest="call_expression [70309,70326]"/>
  <match src="parameter [11689,11704]" dest="parameter [24678,24693]"/>
  <match src="visibility [90521,90528]" dest="visibility [76831,76838]"/>
  <match src=",: , [4723,4724]" dest=",: , [5287,5288]"/>
  <match src="visibility [45600,45608]" dest="visibility [15733,15741]"/>
  <match src="identifier: totalCoupons [94104,94116]" dest="identifier: totalCoupons [33260,33272]"/>
  <match src="(: ( [82584,82585]" dest="(: ( [72802,72803]"/>
  <match src="function: function [94749,94757]" dest="function: function [33905,33913]"/>
  <match src="return_statement [47424,47469]" dest="return_statement [17557,17602]"/>
  <match src="function_body [7885,7949]" dest="function_body [8449,8513]"/>
  <match src="returns: returns [94538,94545]" dest="returns: returns [33694,33701]"/>
  <match src="memory: memory [9214,9220]" dest="memory: memory [9778,9784]"/>
  <match src="): ) [48129,48130]" dest="): ) [18262,18263]"/>
  <match src="(: ( [78086,78087]" dest="(: ( [61793,61794]"/>
  <match src="primitive_type [106648,106655]" dest="primitive_type [69990,69997]"/>
  <match src="private: private [41725,41732]" dest="private: private [11858,11865]"/>
  <match src="identifier: token0 [53460,53466]" dest="identifier: from [61336,61340]"/>
  <match src="returns: returns [45849,45856]" dest="returns: returns [15982,15989]"/>
  <match src="uint256: uint256 [364,371]" dest="uint256: uint256 [928,935]"/>
  <match src="primitive_type [83047,83054]" dest="primitive_type [67543,67550]"/>
  <match src="type_name [35894,35899]" dest="type_name [54288,54293]"/>
  <match src="type_name [68180,68187]" dest="type_name [68028,68035]"/>
  <match src="identifier: payloadB [30795,30803]" dest="identifier: payloadB [49189,49197]"/>
  <match src="=: = [103469,103470]" dest="=: = [42625,42626]"/>
  <match src="{: { [101538,101539]" dest="{: { [40694,40695]"/>
  <match src="member_expression [82919,82929]" dest="member_expression [74181,74191]"/>
  <match src=",: , [7024,7025]" dest=",: , [7588,7589]"/>
  <match src="array_access [100920,100944]" dest="array_access [40076,40100]"/>
  <match src=",: , [2026,2027]" dest=",: , [2590,2591]"/>
  <match src="&quot;: &quot; [107220,107221]" dest="&quot;: &quot; [70562,70563]"/>
  <match src="struct_declaration [89137,89394]" dest="struct_declaration [30637,30894]"/>
  <match src="identifier: D256 [7362,7366]" dest="identifier: D256 [7926,7930]"/>
  <match src="external: external [55623,55631]" dest="external: external [23472,23480]"/>
  <match src="identifier: recipient [99779,99788]" dest="identifier: recipient [38935,38944]"/>
  <match src="{: { [104661,104662]" dest="{: { [43817,43818]"/>
  <match src="call_argument [44393,44435]" dest="call_argument [14526,14568]"/>
  <match src="primitive_type [48261,48268]" dest="primitive_type [18394,18401]"/>
  <match src="type_name [44446,44453]" dest="type_name [14579,14586]"/>
  <match src="address: address [54693,54700]" dest="address: address [22542,22549]"/>
  <match src="address: address [98206,98213]" dest="address: address [37362,37369]"/>
  <match src="identifier: D256 [8058,8062]" dest="identifier: D256 [8622,8626]"/>
  <match src="==: == [33890,33892]" dest="==: == [52284,52286]"/>
  <match src="identifier: accounts [95206,95214]" dest="identifier: accounts [34362,34370]"/>
  <match src="bytes32: bytes32 [32847,32854]" dest="bytes32: bytes32 [51241,51248]"/>
  <match src="primitive_type [100224,100231]" dest="primitive_type [39380,39387]"/>
  <match src="bool: bool [54824,54828]" dest="bool: bool [22673,22677]"/>
  <match src="primitive_type [93925,93932]" dest="primitive_type [33081,33088]"/>
  <match src=".: . [95402,95403]" dest=".: . [34558,34559]"/>
  <match src="identifier: D256 [45512,45516]" dest="identifier: D256 [15645,15649]"/>
  <match src="identifier: accounts [101241,101249]" dest="identifier: accounts [40397,40405]"/>
  <match src="primitive_type [44100,44107]" dest="primitive_type [14233,14240]"/>
  <match src="primitive_type [3276,3283]" dest="primitive_type [3840,3847]"/>
  <match src="parameter [9406,9410]" dest="parameter [9970,9974]"/>
  <match src="call_argument [103966,103971]" dest="call_argument [43122,43127]"/>
  <match src="type_cast_expression [36012,36039]" dest="type_cast_expression [54406,54433]"/>
  <match src="number_literal: 0 [36165,36166]" dest="number_literal: 0 [54559,54560]"/>
  <match src="parameter [13114,13118]" dest="parameter [26103,26107]"/>
  <match src="identifier: account [100936,100943]" dest="identifier: account [40092,40099]"/>
  <match src=",: , [88628,88629]" dest=",: , [30128,30129]"/>
  <match src="(: ( [100664,100665]" dest="(: ( [39820,39821]"/>
  <match src="function: function [100031,100039]" dest="function: function [39187,39195]"/>
  <match src="call_argument [102916,102922]" dest="call_argument [42072,42078]"/>
  <match src="type_name [383,390]" dest="type_name [947,954]"/>
  <match src="identifier: sender [81800,81806]" dest="identifier: sender [73181,73187]"/>
  <match src="call_argument [77427,77433]" dest="call_argument [62699,62705]"/>
  <match src="call_argument [30354,30359]" dest="call_argument [48748,48753]"/>
  <match src="): ) [84297,84298]" dest="): ) [81173,81174]"/>
  <match src="array_access [105268,105296]" dest="array_access [44424,44452]"/>
  <match src="primitive_type [32901,32906]" dest="primitive_type [51295,51300]"/>
  <match src="identifier: Require [27328,27335]" dest="identifier: Require [45722,45729]"/>
  <match src="member_expression [8106,8120]" dest="member_expression [8670,8684]"/>
  <match src="): ) [99696,99697]" dest="): ) [38852,38853]"/>
  <match src="call_argument [19985,20025]" dest="call_argument [57401,57431]"/>
  <match src="return_type_definition [9512,9526]" dest="return_type_definition [10076,10090]"/>
  <match src="public: public [92852,92858]" dest="public: public [32008,32014]"/>
  <match src="return: return [2075,2081]" dest="return: return [2639,2645]"/>
  <match src="return_statement [47580,47644]" dest="return_statement [17713,17777]"/>
  <match src="assignment_expression [34266,34275]" dest="assignment_expression [52660,52669]"/>
  <match src="return_statement [9537,9560]" dest="return_statement [10101,10124]"/>
  <match src="): ) [82995,82996]" dest="): ) [73148,73149]"/>
  <match src="memory: memory [8481,8487]" dest="memory: memory [9045,9051]"/>
  <match src="function_body [48563,48600]" dest="function_body [18696,18733]"/>
  <match src="function_body [48664,48700]" dest="function_body [18797,18833]"/>
  <match src="uint256: uint256 [42669,42676]" dest="uint256: uint256 [12802,12809]"/>
  <match src="function_body [28370,28786]" dest="function_body [46764,47180]"/>
  <match src="type_name [105393,105400]" dest="type_name [44549,44556]"/>
  <match src="(: ( [56146,56147]" dest="(: ( [23995,23996]"/>
  <match src="identifier: sender [55179,55185]" dest="identifier: sender [23028,23034]"/>
  <match src="member_expression [100118,100139]" dest="member_expression [39274,39295]"/>
  <match src="primitive_type [83331,83338]" dest="primitive_type [64054,64061]"/>
  <match src="identifier: totalBonded [94682,94693]" dest="identifier: totalBonded [33838,33849]"/>
  <match src="parameter [102420,102433]" dest="parameter [41576,41589]"/>
  <match src="call_argument [58642,58667]" dest="call_argument [74126,74157]"/>
  <match src="primitive_type [54735,54739]" dest="primitive_type [22584,22588]"/>
  <match src="return_type_definition [55747,55764]" dest="return_type_definition [23596,23613]"/>
  <match src="(: ( [85468,85469]" dest="(: ( [79359,79360]"/>
  <match src="uint256: uint256 [96930,96937]" dest="uint256: uint256 [36086,36093]"/>
  <match src="call_argument [105558,105578]" dest="call_argument [44714,44734]"/>
  <match src="primitive_type [1655,1662]" dest="primitive_type [2219,2226]"/>
  <match src="parameter [28321,28337]" dest="parameter [46715,46731]"/>
  <match src="type_cast_expression [101091,101101]" dest="type_cast_expression [40247,40257]"/>
  <match src="identifier: self [9221,9225]" dest="identifier: self [9785,9789]"/>
  <match src="): ) [54804,54805]" dest="): ) [22653,22654]"/>
  <match src="state_mutability [46908,46912]" dest="state_mutability [17041,17045]"/>
  <match src="identifier: approveFor [98125,98135]" dest="identifier: approveFor [37281,37291]"/>
  <match src="user_defined_type [88913,88920]" dest="user_defined_type [30413,30420]"/>
  <match src="return: return [66853,66859]" dest="return: return [69021,69027]"/>
  <match src="identifier: amount1 [55274,55281]" dest="identifier: amount1 [23123,23130]"/>
  <match src="member_expression [95070,95106]" dest="member_expression [34226,34262]"/>
  <match src="identifier: totalDebt [93892,93901]" dest="identifier: totalDebt [33048,33057]"/>
  <match src="type_name [47549,47561]" dest="type_name [17682,17694]"/>
  <match src="}: } [101979,101980]" dest="}: } [41135,41136]"/>
  <match src="binary_expression [74085,74101]" dest="binary_expression [63132,63164]"/>
  <match src="type_name [16219,16226]" dest="type_name [58810,58817]"/>
  <match src=".: . [81799,81800]" dest=".: . [73180,73181]"/>
  <match src="identifier: Status [87956,87962]" dest="identifier: Status [29456,29462]"/>
  <match src="identifier: account [87199,87206]" dest="identifier: account [75709,75716]"/>
  <match src="internal: internal [8964,8972]" dest="internal: internal [9528,9536]"/>
  <match src="call_argument [2639,2667]" dest="call_argument [3203,3231]"/>
  <match src="return_statement [48378,48394]" dest="return_statement [18511,18527]"/>
  <match src="call_argument [834,835]" dest="call_argument [1398,1399]"/>
  <match src="identifier: amount [53099,53105]" dest="identifier: amount [56453,56459]"/>
  <match src="comment: /**      * ERC20 Interface      */ [99472,99506]" dest="comment: /**      * ERC20 Interface      */ [38628,38662]"/>
  <match src="primitive_type [30696,30700]" dest="primitive_type [49090,49094]"/>
  <match src="identifier: getPoolExitLockupEpochs [47122,47145]" dest="identifier: getPoolExitLockupEpochs [17255,17278]"/>
  <match src="state_mutability [56042,56046]" dest="state_mutability [23891,23895]"/>
  <match src=".: . [104097,104098]" dest=".: . [43253,43254]"/>
  <match src="type_name [104466,104473]" dest="type_name [43622,43629]"/>
  <match src="call_expression [91178,91217]" dest="call_expression [77488,77527]"/>
  <match src="(: ( [44972,44973]" dest="(: ( [15105,15106]"/>
  <match src="(: ( [81108,81109]" dest="(: ( [71540,71541]"/>
  <match src=",: , [6859,6860]" dest=",: , [7423,7424]"/>
  <match src="variable_declaration [67580,67605]" dest="variable_declaration [67087,67112]"/>
  <match src="function_definition [45410,45553]" dest="function_definition [15543,15686]"/>
  <match src="identifier: _state [97126,97132]" dest="identifier: _state [36282,36288]"/>
  <match src="returns: returns [46566,46573]" dest="returns: returns [16699,16706]"/>
  <match src="state_mutability [63929,63933]" dest="state_mutability [28717,28721]"/>
  <match src="call_expression [82449,82463]" dest="call_expression [67839,67853]"/>
  <match src="state_mutability [98232,98236]" dest="state_mutability [37388,37392]"/>
  <match src="memory: memory [6848,6854]" dest="memory: memory [7412,7418]"/>
  <match src="number_literal: 0 [94904,94905]" dest="number_literal: 0 [34060,34061]"/>
  <match src="uint256: uint256 [100665,100672]" dest="uint256: uint256 [39821,39828]"/>
  <match src="parameter [4690,4697]" dest="parameter [5254,5261]"/>
  <match src="return_statement [6164,6200]" dest="return_statement [6728,6764]"/>
  <match src="function_definition [8145,8367]" dest="function_definition [8709,8931]"/>
  <match src="member_expression [97126,97153]" dest="member_expression [36282,36309]"/>
  <match src="function_definition [6821,7043]" dest="function_definition [7385,7607]"/>
  <match src="state_mutability [44872,44876]" dest="state_mutability [15005,15009]"/>
  <match src="=: = [34528,34529]" dest="=: = [52922,52923]"/>
  <match src="primitive_type [94775,94782]" dest="primitive_type [33931,33938]"/>
  <match src="member_expression [105306,105345]" dest="member_expression [44462,44501]"/>
  <match src="call_argument [32630,32649]" dest="call_argument [51024,51043]"/>
  <match src="member_expression [82551,82584]" dest="member_expression [72769,72802]"/>
  <match src="identifier: stringifyTruncated [28499,28517]" dest="identifier: stringifyTruncated [46893,46911]"/>
  <match src="!=: != [106985,106987]" dest="!=: != [70327,70329]"/>
  <match src="emit: emit [84730,84734]" dest="emit: emit [81711,81715]"/>
  <match src="identifier: Decimal [46166,46173]" dest="identifier: Decimal [16299,16306]"/>
  <match src="address: address [29541,29548]" dest="address: address [47935,47942]"/>
  <match src="identifier: D256 [47595,47599]" dest="identifier: D256 [17728,17732]"/>
  <match src="parameter [36609,36622]" dest="parameter [55003,55016]"/>
  <match src="call_argument [81835,81845]" dest="call_argument [84003,84013]"/>
  <match src="): ) [84692,84693]" dest="): ) [64270,64271]"/>
  <match src="address: address [88783,88790]" dest="address: address [30283,30290]"/>
  <match src="identifier: amount [76274,76280]" dest="identifier: amount [20390,20396]"/>
  <match src="identifier: self [7443,7447]" dest="identifier: self [8007,8011]"/>
  <match src="inheritance_specifier [15742,15749]" dest="inheritance_specifier [60750,60761]"/>
  <match src="function_definition [94095,94195]" dest="function_definition [33251,33351]"/>
  <match src="(: ( [100517,100518]" dest="(: ( [39673,39674]"/>
  <match src="identifier: COMMA [27601,27606]" dest="identifier: COMMA [45995,46000]"/>
  <match src=".: . [98021,98022]" dest=".: . [37177,37178]"/>
  <match src="=: = [42611,42612]" dest="=: = [12744,12745]"/>
  <match src="uint256: uint256 [75904,75911]" dest="uint256: uint256 [56650,56657]"/>
  <match src="]: ] [35054,35055]" dest="]: ] [53448,53449]"/>
  <match src="(: ( [105345,105346]" dest="(: ( [44501,44502]"/>
  <match src="return_statement [6567,6619]" dest="return_statement [7131,7183]"/>
  <match src="primitive_type [55360,55364]" dest="primitive_type [23209,23213]"/>
  <match src="): ) [48662,48663]" dest="): ) [18795,18796]"/>
  <match src="return_type_definition [36654,36668]" dest="return_type_definition [55048,55062]"/>
  <match src="state_mutability [47987,47991]" dest="state_mutability [18120,18124]"/>
  <match src="return_type_definition [48646,48663]" dest="return_type_definition [18779,18796]"/>
  <match src="identifier: outstanding [104176,104187]" dest="identifier: outstanding [43332,43343]"/>
  <match src="if_statement [28380,28780]" dest="if_statement [46774,47174]"/>
  <match src="binary_expression [4755,4760]" dest="binary_expression [5319,5324]"/>
  <match src="call_argument [83386,83391]" dest="call_argument [73373,73394]"/>
  <match src="primitive_type [101177,101184]" dest="primitive_type [40333,40340]"/>
  <match src="internal: internal [47148,47156]" dest="internal: internal [17281,17289]"/>
  <match src="member_expression [96687,96700]" dest="member_expression [35843,35856]"/>
  <match src="identifier: slot [91744,91748]" dest="identifier: slot [78054,78058]"/>
  <match src="&quot;: &quot; [426,427]" dest="&quot;: &quot; [990,991]"/>
  <match src="{: { [7367,7368]" dest="{: { [7931,7932]"/>
  <match src="modifier_invocation [82063,82085]" dest="modifier_invocation [73733,73762]"/>
  <match src="(: ( [43275,43276]" dest="(: ( [13408,13409]"/>
  <match src="): ) [7392,7393]" dest="): ) [7956,7957]"/>
  <match src="member_expression [9908,9933]" dest="member_expression [10472,10497]"/>
  <match src="assignment_expression [100553,100618]" dest="assignment_expression [39709,39774]"/>
  <match src="}: } [89393,89394]" dest="}: } [30893,30894]"/>
  <match src="(: ( [82168,82169]" dest="(: ( [73781,73782]"/>
  <match src="identifier: coupons [104098,104105]" dest="identifier: coupons [43254,43261]"/>
  <match src="uint256: uint256 [88221,88228]" dest="uint256: uint256 [29721,29728]"/>
  <match src="call_argument [35024,35034]" dest="call_argument [53418,53428]"/>
  <match src="): ) [51925,51926]" dest="): ) [27861,27862]"/>
  <match src="type_name [68154,68161]" dest="type_name [68005,68012]"/>
  <match src="number_literal: 0x3a20 [27565,27571]" dest="number_literal: 0x3a20 [45959,45965]"/>
  <match src="array_access [105104,105132]" dest="array_access [44260,44288]"/>
  <match src="number_literal: 4 [36538,36539]" dest="number_literal: 4 [54932,54933]"/>
  <match src="call_argument [101618,101624]" dest="call_argument [40774,40780]"/>
  <match src="pure: pure [9251,9255]" dest="pure: pure [9815,9819]"/>
  <match src="bool: bool [97227,97231]" dest="bool: bool [36383,36387]"/>
  <match src="identifier: to [13746,13748]" dest="identifier: to [26735,26737]"/>
  <match src="}: } [6814,6815]" dest="}: } [7378,7379]"/>
  <match src="): ) [101792,101793]" dest="): ) [40948,40949]"/>
  <match src="identifier: amount [102768,102774]" dest="identifier: amount [41924,41930]"/>
  <match src="member_expression [101847,101878]" dest="member_expression [41003,41034]"/>
  <match src="call_argument [53163,53165]" dest="call_argument [65808,65810]"/>
  <match src="pure: pure [47987,47991]" dest="pure: pure [18120,18124]"/>
  <match src="uint256: uint256 [42970,42977]" dest="uint256: uint256 [13103,13110]"/>
  <match src="identifier: ethic [108420,108425]" dest="identifier: ethic [56179,56184]"/>
  <match src="identifier: reason [30084,30090]" dest="identifier: reason [48478,48484]"/>
  <match src="internal: internal [781,789]" dest="internal: internal [1345,1353]"/>
  <match src="function: function [96455,96463]" dest="function: function [35611,35619]"/>
  <match src="identifier: initialize [90832,90842]" dest="identifier: initialize [77142,77152]"/>
  <match src="function: function [93579,93587]" dest="function: function [32735,32743]"/>
  <match src="identifier: result [33399,33405]" dest="identifier: result [51793,51799]"/>
  <match src="): ) [91259,91260]" dest="): ) [77569,77570]"/>
  <match src="(: ( [803,804]" dest="(: ( [1367,1368]"/>
  <match src="identifier: approve [88734,88741]" dest="identifier: approve [30234,30241]"/>
  <match src="{: { [8515,8516]" dest="{: { [9079,9080]"/>
  <match src="visibility [93399,93405]" dest="visibility [32555,32561]"/>
  <match src="parameter [11976,11993]" dest="parameter [24965,24982]"/>
  <match src="pure: pure [6932,6936]" dest="pure: pure [7496,7500]"/>
  <match src="primitive_type [88158,88165]" dest="primitive_type [29658,29665]"/>
  <match src="type_name [103656,103663]" dest="type_name [42812,42819]"/>
  <match src="parameter [7431,7447]" dest="parameter [7995,8011]"/>
  <match src="=: = [35536,35537]" dest="=: = [53930,53931]"/>
  <match src="yul_path [98597,98601]" dest="yul_path [37753,37757]"/>
  <match src=":: : [7374,7375]" dest=":: : [7938,7939]"/>
  <match src="identifier: D256 [10010,10014]" dest="identifier: D256 [10574,10578]"/>
  <match src="call_argument [19886,19923]" dest="call_argument [65516,65561]"/>
  <match src="internal: internal [29568,29576]" dest="internal: internal [47962,47970]"/>
  <match src="private: private [43148,43155]" dest="private: private [13281,13288]"/>
  <match src="identifier: add [102912,102915]" dest="identifier: add [42068,42071]"/>
  <match src="): ) [8828,8829]" dest="): ) [9392,9393]"/>
  <match src="member_expression [94268,94293]" dest="member_expression [33424,33449]"/>
  <match src="contract_declaration [80707,85723]" dest="contract_declaration [71340,74233]"/>
  <match src="(: ( [44598,44599]" dest="(: ( [14731,14732]"/>
  <match src=",: , [28287,28288]" dest=",: , [46681,46682]"/>
  <match src=".: . [92561,92562]" dest=".: . [31717,31718]"/>
  <match src="{: { [5897,5898]" dest="{: { [6461,6462]"/>
  <match src="uint256: uint256 [84468,84475]" dest="uint256: uint256 [62141,62148]"/>
  <match src="): ) [94875,94876]" dest="): ) [34031,34032]"/>
  <match src="parameter [94547,94554]" dest="parameter [33703,33710]"/>
  <match src="-: - [35389,35390]" dest="-: - [53783,53784]"/>
  <match src="call_expression [94588,94601]" dest="call_expression [33744,33757]"/>
  <match src=":: : [6183,6184]" dest=":: : [6747,6748]"/>
  <match src="parameter [100224,100238]" dest="parameter [39380,39394]"/>
  <match src="address: address [48655,48662]" dest="address: address [18788,18795]"/>
  <match src="identifier: TREASURY_ADDRESS [48785,48801]" dest="identifier: TREASURY_ADDRESS [18918,18934]"/>
  <match src="type_name [51835,51842]" dest="type_name [27771,27778]"/>
  <match src="call_argument [68678,68682]" dest="call_argument [69087,69091]"/>
  <match src="function_definition [97640,97767]" dest="function_definition [36796,36923]"/>
  <match src="constant: constant [27395,27403]" dest="constant: constant [45789,45797]"/>
  <match src="function_definition [45918,46057]" dest="function_definition [16051,16190]"/>
  <match src="user_defined_type [44998,45011]" dest="user_defined_type [15131,15144]"/>
  <match src="member_expression [73225,73261]" dest="member_expression [59224,59277]"/>
  <match src="address: address [105720,105727]" dest="address: address [44876,44883]"/>
  <match src="type_name [93518,93525]" dest="type_name [32674,32681]"/>
  <match src="primitive_type [98206,98213]" dest="primitive_type [37362,37369]"/>
  <match src="primitive_type [41523,41530]" dest="primitive_type [11656,11663]"/>
  <match src="identifier: value [83461,83466]" dest="identifier: value [73995,74000]"/>
  <match src="bytes32: bytes32 [35660,35667]" dest="bytes32: bytes32 [54054,54061]"/>
  <match src="array_access [97593,97621]" dest="array_access [36749,36777]"/>
  <match src="return_type_definition [45849,45866]" dest="return_type_definition [15982,15999]"/>
  <match src="identifier: ASCII_RELATIVE_ZERO [27449,27468]" dest="identifier: ASCII_RELATIVE_ZERO [45843,45862]"/>
  <match src="visibility [43327,43334]" dest="visibility [13460,13467]"/>
  <match src="): ) [47467,47468]" dest="): ) [17600,17601]"/>
  <match src="user_defined_type [47847,47859]" dest="user_defined_type [17980,17992]"/>
  <match src="return_type_definition [45614,45631]" dest="return_type_definition [15747,15764]"/>
  <match src="(: ( [98505,98506]" dest="(: ( [37661,37662]"/>
  <match src="): ) [1297,1298]" dest="): ) [1861,1862]"/>
  <match src="assignment_expression [99961,100018]" dest="assignment_expression [39117,39174]"/>
  <match src="call_argument [91245,91259]" dest="call_argument [77555,77569]"/>
  <match src="}: } [4099,4100]" dest="}: } [4663,4664]"/>
  <match src="struct_member [88221,88241]" dest="struct_member [29721,29741]"/>
  <match src="event_paramater [55408,55423]" dest="event_paramater [23257,23272]"/>
  <match src="member_expression [95237,95258]" dest="member_expression [34393,34414]"/>
  <match src="): ) [47729,47730]" dest="): ) [17862,17863]"/>
  <match src="call_argument [85684,85692]" dest="call_argument [79946,79953]"/>
  <match src="bool: bool [54664,54668]" dest="bool: bool [22513,22517]"/>
  <match src="identifier: result [35881,35887]" dest="identifier: result [54275,54281]"/>
  <match src="identifier: getSupplyChangeLimit [47801,47821]" dest="identifier: getSupplyChangeLimit [17934,17954]"/>
  <match src="internal: internal [32162,32170]" dest="internal: internal [50556,50564]"/>
  <match src="uint256: uint256 [88193,88200]" dest="uint256: uint256 [29693,29700]"/>
  <match src="primitive_type [3985,3992]" dest="primitive_type [4549,4556]"/>
  <match src="identifier: amount [102443,102449]" dest="identifier: amount [41599,41605]"/>
  <match src="variable_declaration [98530,98542]" dest="variable_declaration [37686,37698]"/>
  <match src="returns: returns [98090,98097]" dest="returns: returns [37246,37253]"/>
  <match src="address: address [11689,11696]" dest="address: address [24678,24685]"/>
  <match src="member_expression [97126,97139]" dest="member_expression [36282,36295]"/>
  <match src="uint256: uint256 [95639,95646]" dest="uint256: uint256 [34795,34802]"/>
  <match src="identifier: encodePacked [32275,32287]" dest="identifier: encodePacked [50669,50681]"/>
  <match src="call_argument [101966,101972]" dest="call_argument [41122,41128]"/>
  <match src="identifier: Decimal [92554,92561]" dest="identifier: Decimal [31710,31717]"/>
  <match src="identifier: symbol [92843,92849]" dest="identifier: symbol [31999,32005]"/>
  <match src="type_name [46453,46460]" dest="type_name [16586,16593]"/>
  <match src="type_name [55499,55506]" dest="type_name [23348,23355]"/>
  <match src="identifier: Bond [82914,82918]" dest="identifier: Unbond [74174,74180]"/>
  <match src="): ) [32496,32497]" dest="): ) [50890,50891]"/>
  <match src="primitive_type [41835,41842]" dest="primitive_type [11968,11975]"/>
  <match src="number_literal: 0xf [27747,27750]" dest="number_literal: 0xf [46141,46144]"/>
  <match src="function_definition [93779,93877]" dest="function_definition [32935,33033]"/>
  <match src="state_mutability [97213,97217]" dest="state_mutability [36369,36373]"/>
  <match src="parameter [100868,100883]" dest="parameter [40024,40039]"/>
  <match src="): ) [8359,8360]" dest="): ) [8923,8924]"/>
  <match src=".: . [104072,104073]" dest=".: . [43228,43229]"/>
  <match src="(: ( [74416,74417]" dest="(: ( [68367,68368]"/>
  <match src="identifier: outstandingCouponsForEpoch [103918,103944]" dest="identifier: outstandingCouponsForEpoch [43074,43100]"/>
  <match src="internal: internal [48131,48139]" dest="internal: internal [18264,18272]"/>
  <match src="member_expression [82096,82112]" dest="member_expression [72324,72340]"/>
  <match src="modifier_definition [106621,106825]" dest="modifier_definition [69963,70167]"/>
  <match src="assignment_expression [35437,35447]" dest="assignment_expression [53831,53841]"/>
  <match src="string [840,872]" dest="string [1404,1436]"/>
  <match src="public: public [96941,96947]" dest="public: public [36097,36103]"/>
  <match src="return_type_definition [9397,9411]" dest="return_type_definition [9961,9975]"/>
  <match src=".: . [85624,85625]" dest=".: . [79840,79841]"/>
  <match src="{: { [105438,105439]" dest="{: { [44594,44595]"/>
  <match src="(: ( [100167,100168]" dest="(: ( [39323,39324]"/>
  <match src="assignment_expression [105758,105805]" dest="assignment_expression [44914,44961]"/>
  <match src="function_body [106665,106825]" dest="function_body [70007,70167]"/>
  <match src=",: , [13985,13986]" dest=",: , [26974,26975]"/>
  <match src="call_expression [100955,100999]" dest="call_expression [40111,40155]"/>
  <match src="identifier: pair [63913,63917]" dest="identifier: pair [28701,28705]"/>
  <match src="type_name [102451,102457]" dest="type_name [41607,41613]"/>
  <match src="binary_expression [105593,105614]" dest="binary_expression [44749,44770]"/>
  <match src="type_name [33749,33754]" dest="type_name [52143,52148]"/>
  <match src=":: : [8522,8523]" dest=":: : [9086,9087]"/>
  <match src="type_name [93616,93623]" dest="type_name [32772,32779]"/>
  <match src="primitive_type [1228,1235]" dest="primitive_type [1792,1799]"/>
  <match src="visibility [44168,44175]" dest="visibility [14301,14308]"/>
  <match src="=: = [43016,43017]" dest="=: = [13149,13150]"/>
  <match src=".: . [91164,91165]" dest=".: . [77474,77475]"/>
  <match src="identifier: COUPON_REDEMPTION_PENALTY_DECAY [47748,47779]" dest="identifier: COUPON_REDEMPTION_PENALTY_DECAY [17881,17912]"/>
  <match src="identifier: _state [102321,102327]" dest="identifier: _state [41477,41483]"/>
  <match src="primitive_type [102831,102838]" dest="primitive_type [41987,41994]"/>
  <match src="memory: memory [6468,6474]" dest="memory: memory [7032,7038]"/>
  <match src="type_name [92523,92530]" dest="type_name [31679,31686]"/>
  <match src="member_expression [82074,82084]" dest="member_expression [73751,73761]"/>
  <match src="return_statement [93537,93567]" dest="return_statement [32693,32723]"/>
  <match src="(: ( [88782,88783]" dest="(: ( [30282,30283]"/>
  <match src="call_argument [30262,30618]" dest="call_argument [48656,49012]"/>
  <match src="type_name [82982,82989]" dest="type_name [73135,73142]"/>
  <match src="identifier: _state [103292,103298]" dest="identifier: _state [42448,42454]"/>
  <match src="&quot;: &quot; [58318,58319]" dest="&quot;: &quot; [74074,74075]"/>
  <match src=".: . [104738,104739]" dest=".: . [43894,43895]"/>
  <match src="parameter [99641,99656]" dest="parameter [38797,38812]"/>
  <match src="type_name [48454,48461]" dest="type_name [18587,18594]"/>
  <match src="returns: returns [79017,79024]" dest="returns: returns [57522,57529]"/>
  <match src="identifier: D256 [6540,6544]" dest="identifier: D256 [7104,7108]"/>
  <match src="expression_statement [35575,35586]" dest="expression_statement [53969,53980]"/>
  <match src="member_expression [102534,102577]" dest="member_expression [41690,41733]"/>
  <match src="): ) [91217,91218]" dest="): ) [77527,77528]"/>
  <match src="call_expression [94682,94695]" dest="call_expression [33838,33851]"/>
  <match src="call_expression [47587,47643]" dest="call_expression [17720,17776]"/>
  <match src="call_argument [36863,36890]" dest="call_argument [55257,55284]"/>
  <match src="identifier: bonded [97147,97153]" dest="identifier: bonded [36303,36309]"/>
  <match src="call_argument [101112,101118]" dest="call_argument [40268,40274]"/>
  <match src="call_argument [83968,83972]" dest="call_argument [81883,81887]"/>
  <match src="): ) [98250,98251]" dest="): ) [37406,37407]"/>
  <match src="(: ( [29058,29059]" dest="(: ( [47452,47453]"/>
  <match src="[: [ [35007,35008]" dest="[: [ [53401,53402]"/>
  <match src="identifier: balanceOfBonded [94493,94508]" dest="identifier: balanceOfBonded [33649,33664]"/>
  <match src="primitive_type [42485,42492]" dest="primitive_type [12618,12625]"/>
  <match src="comment: /* solium-disable-next-line security/no-modify-for-iter-var */ [34388,34450]" dest="comment: /* solium-disable-next-line security/no-modify-for-iter-var */ [52782,52844]"/>
  <match src="call_struct_argument [45518,45544]" dest="call_struct_argument [15651,15677]"/>
  <match src="identifier: must [30190,30194]" dest="identifier: must [48584,48588]"/>
  <match src="parameter [1228,1237]" dest="parameter [1792,1801]"/>
  <match src="=: = [33990,33991]" dest="=: = [52384,52385]"/>
  <match src="external: external [54646,54654]" dest="external: external [22495,22503]"/>
  <match src="]: ] [105785,105786]" dest="]: ] [44941,44942]"/>
  <match src="visibility [56033,56041]" dest="visibility [23882,23890]"/>
  <match src="byte: byte [35058,35062]" dest="byte: byte [53452,53456]"/>
  <match src="type_name [41436,41443]" dest="type_name [11569,11576]"/>
  <match src="call_argument [36017,36038]" dest="call_argument [54411,54432]"/>
  <match src="state_variable_declaration [27491,27529]" dest="state_variable_declaration [45885,45923]"/>
  <match src="view: view [55687,55691]" dest="view: view [23536,23540]"/>
  <match src="parameter [47847,47866]" dest="parameter [17980,17999]"/>
  <match src="visibility [43073,43080]" dest="visibility [13206,13213]"/>
  <match src="uint: uint [54634,54638]" dest="uint: uint [22483,22487]"/>
  <match src="(: ( [100991,100992]" dest="(: ( [40147,40148]"/>
  <match src="comment: // populate the least-significant character [36277,36320]" dest="comment: // populate the least-significant character [54671,54714]"/>
  <match src=",: , [50955,50956]" dest=",: , [65605,65606]"/>
  <match src="&quot;: &quot; [83681,83682]" dest="&quot;: &quot; [81504,81505]"/>
  <match src="identifier: epoch [74693,74698]" dest="identifier: epoch [62936,62941]"/>
  <match src="bool: bool [28815,28819]" dest="bool: bool [47209,47213]"/>
  <match src="identifier: amount [103086,103092]" dest="identifier: amount [42242,42248]"/>
  <match src="member_expression [103292,103344]" dest="member_expression [42448,42500]"/>
  <match src="uint256: uint256 [42147,42154]" dest="uint256: uint256 [12280,12287]"/>
  <match src="private: private [10034,10041]" dest="private: private [10598,10605]"/>
  <match src="[: [ [105285,105286]" dest="[: [ [44441,44442]"/>
  <match src="array_access [104318,104346]" dest="array_access [43474,43502]"/>
  <match src="identifier: reason [30745,30751]" dest="identifier: reason [49139,49145]"/>
  <match src=",: , [81414,81415]" dest=",: , [79208,79209]"/>
  <match src="return_statement [33660,33674]" dest="return_statement [52054,52068]"/>
  <match src=",: , [101110,101111]" dest=",: , [40266,40267]"/>
  <match src="expression_statement [102296,102356]" dest="expression_statement [41452,41512]"/>
  <match src="pure: pure [47157,47161]" dest="pure: pure [17290,17294]"/>
  <match src="indexed: indexed [55291,55298]" dest="indexed: indexed [23140,23147]"/>
  <match src="memory: memory [7436,7442]" dest="memory: memory [8000,8006]"/>
  <match src="address: address [98506,98513]" dest="address: address [37662,37669]"/>
  <match src="number_literal: 1e10 [41885,41889]" dest="number_literal: 1e10 [12018,12022]"/>
  <match src="internal: internal [44755,44763]" dest="internal: internal [14888,14896]"/>
  <match src="contract_body [27336,36901]" dest="contract_body [45730,55295]"/>
  <match src="identifier: _state [101355,101361]" dest="identifier: _state [40511,40517]"/>
  <match src="identifier: self [9020,9024]" dest="identifier: self [9584,9588]"/>
  <match src="identifier: candidates [105313,105323]" dest="identifier: candidates [44469,44479]"/>
  <match src="parameter [98246,98250]" dest="parameter [37402,37406]"/>
  <match src="call_argument [29852,29858]" dest="call_argument [48246,48252]"/>
  <match src="internal: internal [104652,104660]" dest="internal: internal [43808,43816]"/>
  <match src="identifier: SafeMath [15770,15778]" dest="identifier: SafeMath [60781,60789]"/>
  <match src="}: } [45403,45404]" dest="}: } [15536,15537]"/>
  <match src="type_name [55269,55273]" dest="type_name [23118,23122]"/>
  <match src="binary_expression [35214,35220]" dest="binary_expression [53608,53614]"/>
  <match src="call_argument [6368,6372]" dest="call_argument [6932,6936]"/>
  <match src="parameter [97363,97378]" dest="parameter [36519,36534]"/>
  <match src="type_name [45351,45358]" dest="type_name [15484,15491]"/>
  <match src="user_defined_type [88891,88897]" dest="user_defined_type [30391,30397]"/>
  <match src=".: . [101680,101681]" dest=".: . [40836,40837]"/>
  <match src="event: event [55308,55313]" dest="event: event [23157,23162]"/>
  <match src="}: } [96876,96877]" dest="}: } [36032,36033]"/>
  <match src="function_definition [51817,51875]" dest="function_definition [27753,27811]"/>
  <match src="type_name [34940,34945]" dest="type_name [53334,53339]"/>
  <match src="identifier: IOracle [93518,93525]" dest="identifier: IOracle [32674,32681]"/>
  <match src="binary_expression [33399,33413]" dest="binary_expression [51793,51807]"/>
  <match src="parameter [100518,100532]" dest="parameter [39674,39688]"/>
  <match src=":=: := [98602,98604]" dest=":=: := [37758,37760]"/>
  <match src=",: , [100679,100680]" dest=",: , [39835,39836]"/>
  <match src="user_defined_type [8476,8480]" dest="user_defined_type [9040,9044]"/>
  <match src="&quot;: &quot; [82225,82226]" dest="&quot;: &quot; [82074,82075]"/>
  <match src="event_paramater [81295,81318]" dest="event_paramater [71597,71620]"/>
  <match src="(: ( [84742,84743]" dest="(: ( [81722,81723]"/>
  <match src="call_expression [84499,84537]" dest="call_expression [73905,73929]"/>
  <match src="function_body [6154,6206]" dest="function_body [6718,6770]"/>
  <match src="parameter [6679,6688]" dest="parameter [7243,7252]"/>
  <match src="identifier: value [10093,10098]" dest="identifier: value [10657,10662]"/>
  <match src="member_expression [100142,100163]" dest="member_expression [39298,39319]"/>
  <match src="comment: // 6 + 1 epochs = 24 hours [42537,42563]" dest="comment: // 6 + 1 epochs = 24 hours [12670,12696]"/>
  <match src="uint256: uint256 [67631,67638]" dest="uint256: uint256 [73887,73894]"/>
  <match src="/=: /= [34626,34628]" dest="/=: /= [53020,53022]"/>
  <match src="identifier: amount [100011,100017]" dest="identifier: amount [39167,39173]"/>
  <match src="primitive_type [43702,43709]" dest="primitive_type [13835,13842]"/>
  <match src="(: ( [98342,98343]" dest="(: ( [37498,37499]"/>
  <match src="): ) [101065,101066]" dest="): ) [40221,40222]"/>
  <match src="string [106570,106582]" dest="string [69912,69924]"/>
  <match src="): ) [99587,99588]" dest="): ) [38743,38744]"/>
  <match src="function: function [54214,54222]" dest="function: function [22063,22071]"/>
  <match src="uint256: uint256 [1290,1297]" dest="uint256: uint256 [1854,1861]"/>
  <match src="): ) [105150,105151]" dest="): ) [44306,44307]"/>
  <match src="member_expression [98125,98150]" dest="member_expression [37281,37306]"/>
  <match src="=: = [41385,41386]" dest="=: = [11518,11519]"/>
  <match src="parenthesized_expression [28411,28769]" dest="parenthesized_expression [46805,47163]"/>
  <match src=",: , [84602,84603]" dest=",: , [72902,72903]"/>
  <match src="call_argument [46023,46049]" dest="call_argument [16156,16182]"/>
  <match src="return_statement [66853,66883]" dest="return_statement [69021,69042]"/>
  <match src="member_expression [93445,93460]" dest="member_expression [32601,32616]"/>
  <match src="identifier: _state [102492,102498]" dest="identifier: _state [41648,41654]"/>
  <match src="return_statement [9651,9679]" dest="return_statement [10215,10243]"/>
  <match src="public: public [97079,97085]" dest="public: public [36235,36241]"/>
  <match src="call_argument [82372,82382]" dest="call_argument [73208,73218]"/>
  <match src="expression_statement [36391,36402]" dest="expression_statement [54785,54796]"/>
  <match src="): ) [7215,7216]" dest="): ) [7779,7780]"/>
  <match src="identifier: j [34624,34625]" dest="identifier: j [53018,53019]"/>
  <match src="call_struct_argument [7369,7393]" dest="call_struct_argument [7933,7957]"/>
  <match src="identifier: candidates [104717,104727]" dest="identifier: candidates [43873,43883]"/>
  <match src="member_expression [107130,107142]" dest="member_expression [70472,70484]"/>
  <match src="bytes: bytes [35868,35873]" dest="bytes: bytes [54262,54267]"/>
  <match src="type_name [54794,54798]" dest="type_name [22643,22647]"/>
  <match src="identifier: value [54639,54644]" dest="identifier: value [22488,22493]"/>
  <match src="external: external [70132,70140]" dest="external: external [81802,81810]"/>
  <match src="): ) [95771,95772]" dest="): ) [34927,34928]"/>
  <match src="identifier: D256 [9064,9068]" dest="identifier: D256 [9628,9632]"/>
  <match src="function_definition [44828,44941]" dest="function_definition [14961,15074]"/>
  <match src="identifier: RPAREN [31912,31918]" dest="identifier: RPAREN [50306,50312]"/>
  <match src="}: } [100318,100319]" dest="}: } [39474,39475]"/>
  <match src="type_name [97659,97666]" dest="type_name [36815,36822]"/>
  <match src="visibility [100534,100542]" dest="visibility [39690,39698]"/>
  <match src="call_argument [840,872]" dest="call_argument [1404,1436]"/>
  <match src="): ) [31174,31175]" dest="): ) [49568,49569]"/>
  <match src="(: ( [46427,46428]" dest="(: ( [16560,16561]"/>
  <match src="private: private [78872,78879]" dest="private: private [68243,68250]"/>
  <match src="identifier: staged [101573,101579]" dest="identifier: staged [40729,40735]"/>
  <match src="return_statement [35606,35620]" dest="return_statement [54000,54014]"/>
  <match src="member_expression [28007,28023]" dest="member_expression [46401,46417]"/>
  <match src="function_body [8697,8775]" dest="function_body [9261,9339]"/>
  <match src="function_definition [13046,13120]" dest="function_definition [26035,26109]"/>
  <match src="(: ( [28805,28806]" dest="(: ( [47199,47200]"/>
  <match src="type_name [89419,89432]" dest="type_name [30919,30932]"/>
  <match src="return_type_definition [35705,35727]" dest="return_type_definition [54099,54121]"/>
  <match src="identifier: input [34806,34811]" dest="identifier: input [53200,53205]"/>
  <match src="inheritance_specifier [99347,99354]" dest="inheritance_specifier [38503,38510]"/>
  <match src=".: . [104378,104379]" dest=".: . [43534,43535]"/>
  <match src="function_definition [99896,100025]" dest="function_definition [39052,39181]"/>
  <match src="call_argument [76533,76539]" dest="call_argument [59844,59850]"/>
  <match src="): ) [56157,56158]" dest="): ) [24006,24007]"/>
  <match src="]: ] [100943,100944]" dest="]: ] [40099,40100]"/>
  <match src="identifier: debt [100296,100300]" dest="identifier: debt [39452,39456]"/>
  <match src="uint256: uint256 [34007,34014]" dest="uint256: uint256 [52401,52408]"/>
  <match src="(: ( [93592,93593]" dest="(: ( [32748,32749]"/>
  <match src="parameter [9878,9885]" dest="parameter [10442,10449]"/>
  <match src="identifier: payloadA [31532,31540]" dest="identifier: payloadA [49926,49934]"/>
  <match src="call_expression [19853,19924]" dest="call_expression [65483,65562]"/>
  <match src="private: private [23283,23290]" dest="private: private [59751,59758]"/>
  <match src="primitive_type [41932,41939]" dest="primitive_type [12065,12072]"/>
  <match src="identifier: shift [36249,36254]" dest="identifier: shift [54643,54648]"/>
  <match src="return: return [45370,45376]" dest="return: return [15503,15509]"/>
  <match src="type_name [16059,16066]" dest="type_name [19860,19867]"/>
  <match src="function_body [95648,95720]" dest="function_body [34804,34876]"/>
  <match src="function: function [101462,101470]" dest="function: function [40618,40626]"/>
  <match src="string_literal [58282,58319]" dest="string_literal [74039,74075]"/>
  <match src="}: } [96591,96592]" dest="}: } [35747,35748]"/>
  <match src="returns: returns [70146,70153]" dest="returns: returns [57096,57103]"/>
  <match src="contract_declaration [92472,98634]" dest="contract_declaration [31628,37790]"/>
  <match src="type_name [2603,2610]" dest="type_name [3167,3174]"/>
  <match src="returns: returns [96392,96399]" dest="returns: returns [35548,35555]"/>
  <match src="type_name [44778,44785]" dest="type_name [14911,14918]"/>
  <match src="uint256: uint256 [68154,68161]" dest="uint256: uint256 [68005,68012]"/>
  <match src="internal: internal [99942,99950]" dest="internal: internal [39098,39106]"/>
  <match src="(: ( [56395,56396]" dest="(: ( [24244,24245]"/>
  <match src="[: [ [103307,103308]" dest="[: [ [42463,42464]"/>
  <match src="internal: internal [8445,8453]" dest="internal: internal [9009,9017]"/>
  <match src="view: view [98369,98373]" dest="view: view [37525,37529]"/>
  <match src="number_literal: 0x6B175474E89094C44Da98b954EedeAC495271d0F [41764,41806]" dest="number_literal: 0x6B175474E89094C44Da98b954EedeAC495271d0F [11897,11939]"/>
  <match src="type_name [101772,101778]" dest="type_name [40928,40934]"/>
  <match src="primitive_type [55517,55524]" dest="primitive_type [23366,23373]"/>
  <match src="uint: uint [56112,56116]" dest="uint: uint [23961,23965]"/>
  <match src="call_argument [28549,28554]" dest="call_argument [46943,46948]"/>
  <match src="comment: // each byte takes two characters [36195,36228]" dest="comment: // each byte takes two characters [54589,54622]"/>
  <match src=".: . [99999,100000]" dest=".: . [39155,39156]"/>
  <match src="uint256: uint256 [46689,46696]" dest="uint256: uint256 [16822,16829]"/>
  <match src="type_name [101513,101520]" dest="type_name [40669,40676]"/>
  <match src="type_name [99771,99778]" dest="type_name [38927,38934]"/>
  <match src="}: } [88554,88555]" dest="}: } [30054,30055]"/>
  <match src="if: if [74081,74083]" dest="if: if [63129,63131]"/>
  <match src="primitive_type [34786,34793]" dest="primitive_type [53180,53187]"/>
  <match src="returns: returns [68113,68120]" dest="returns: returns [68773,68780]"/>
  <match src="member_expression [99961,99975]" dest="member_expression [39117,39131]"/>
  <match src="identifier: amount [100893,100899]" dest="identifier: amount [40049,40055]"/>
  <match src="event: event [81282,81287]" dest="event: event [71586,71591]"/>
  <match src="primitive_type [1644,1651]" dest="primitive_type [2208,2215]"/>
  <match src="function: function [56133,56141]" dest="function: function [23982,23990]"/>
  <match src="contract_declaration [90258,91786]" dest="contract_declaration [76568,78096]"/>
  <match src="address: address [48554,48561]" dest="address: address [18687,18694]"/>
  <match src="while: while [34031,34036]" dest="while: while [52425,52430]"/>
  <match src="identifier: transfer [82104,82112]" dest="identifier: transfer [72332,72340]"/>
  <match src="member_expression [100722,100747]" dest="member_expression [39878,39903]"/>
  <match src="public: public [90845,90851]" dest="public: public [77155,77161]"/>
  <match src="comment: // ============ Constants ============ [5606,5644]" dest="comment: // ============ Constants ============ [6170,6208]"/>
  <match src="type_cast_expression [34535,34563]" dest="type_cast_expression [52929,52957]"/>
  <match src="type_name [94242,94249]" dest="type_name [33398,33405]"/>
  <match src="expression_statement [36168,36175]" dest="expression_statement [54562,54569]"/>
  <match src="return_statement [98262,98308]" dest="return_statement [37418,37464]"/>
  <match src=".: . [81838,81839]" dest=".: . [84006,84007]"/>
  <match src="array_access [102646,102666]" dest="array_access [41802,41822]"/>
  <match src=".: . [8110,8111]" dest=".: . [8674,8675]"/>
  <match src="number_literal: 1e6 [41982,41985]" dest="number_literal: 1e6 [12115,12118]"/>
  <match src="function_body [10077,10192]" dest="function_body [10641,10756]"/>
  <match src="identifier: DAO_ENTRANCE_LOCKUP_EPOCHS [47070,47096]" dest="identifier: DAO_ENTRANCE_LOCKUP_EPOCHS [17203,17229]"/>
  <match src="binary_expression [84187,84225]" dest="binary_expression [79373,79398]"/>
  <match src="expression_statement [105066,105152]" dest="expression_statement [44222,44308]"/>
  <match src="identifier: value [82990,82995]" dest="identifier: value [73143,73148]"/>
  <match src="parameter [95601,95616]" dest="parameter [34757,34772]"/>
  <match src="call_struct_argument [6991,7033]" dest="call_struct_argument [7555,7597]"/>
  <match src="expression_statement [102492,102594]" dest="expression_statement [41648,41750]"/>
  <match src="visibility [100240,100248]" dest="visibility [39396,39404]"/>
  <match src="identifier: c [1356,1357]" dest="identifier: c [1920,1921]"/>
  <match src=".: . [96994,96995]" dest=".: . [36150,36151]"/>
  <match src="identifier: Permission [106509,106519]" dest="identifier: Permission [69851,69861]"/>
  <match src=":: : [5926,5927]" dest=":: : [6490,6491]"/>
  <match src="type_name [54176,54183]" dest="type_name [22025,22032]"/>
  <match src="identifier: Decimal [66700,66707]" dest="identifier: Decimal [21290,21297]"/>
  <match src="{: { [45487,45488]" dest="{: { [15620,15621]"/>
  <match src="visibility [56291,56299]" dest="visibility [24140,24148]"/>
  <match src="[: [ [104160,104161]" dest="[: [ [43316,43317]"/>
  <match src="bool: bool [28256,28260]" dest="bool: bool [46650,46654]"/>
  <match src="identifier: amount [76076,76082]" dest="identifier: amount [56916,56922]"/>
  <match src=",: , [6245,6246]" dest=",: , [6809,6810]"/>
  <match src="string: string [102451,102457]" dest="string: string [41607,41613]"/>
  <match src="identifier: price [67600,67605]" dest="identifier: price [67107,67112]"/>
  <match src="call_expression [105558,105578]" dest="call_expression [44714,44734]"/>
  <match src="call_argument [28499,28523]" dest="call_argument [46893,46917]"/>
  <match src="identifier: recipient [19861,19870]" dest="identifier: recipient [65491,65500]"/>
  <match src="return_statement [93944,93971]" dest="return_statement [33100,33127]"/>
  <match src="}: } [100801,100802]" dest="}: } [39957,39958]"/>
  <match src="primitive_type [72299,72306]" dest="primitive_type [56038,56045]"/>
  <match src="type_name [54887,54894]" dest="type_name [22736,22743]"/>
  <match src="identifier: ERC20 [15733,15738]" dest="identifier: Market [60740,60746]"/>
  <match src="identifier: balance [101939,101946]" dest="identifier: balance [41095,41102]"/>
  <match src="modifier: modifier [107097,107105]" dest="modifier: modifier [70439,70447]"/>
  <match src="internal: internal [4007,4015]" dest="internal: internal [4571,4579]"/>
  <match src="identifier: coupons [89117,89124]" dest="identifier: coupons [30617,30624]"/>
  <match src="internal: internal [105047,105055]" dest="internal: internal [44203,44211]"/>
  <match src="primitive_type [35967,35971]" dest="primitive_type [54361,54365]"/>
  <match src="member_expression [103471,103495]" dest="member_expression [42627,42651]"/>
  <match src="user_defined_type [9987,9991]" dest="user_defined_type [10551,10555]"/>
  <match src="identifier: spender [103269,103276]" dest="identifier: spender [42425,42432]"/>
  <match src="(: ( [103495,103496]" dest="(: ( [42651,42652]"/>
  <match src="member_expression [81796,81806]" dest="member_expression [73177,73187]"/>
  <match src="identifier: require [19853,19860]" dest="identifier: require [65483,65490]"/>
  <match src="primitive_type [30921,30927]" dest="primitive_type [49315,49321]"/>
  <match src="(: ( [6602,6603]" dest="(: ( [7166,7167]"/>
  <match src="type_name [9209,9213]" dest="type_name [9773,9777]"/>
  <match src="type_name [102435,102442]" dest="type_name [41591,41598]"/>
  <match src="): ) [56359,56360]" dest="): ) [24208,24209]"/>
  <match src="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      */ [3534,3967]" dest="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      */ [4098,4531]"/>
  <match src="identifier: add [102344,102347]" dest="identifier: add [41500,41503]"/>
  <match src="visibility [8247,8255]" dest="visibility [8811,8819]"/>
  <match src="type_name [54664,54668]" dest="type_name [22513,22517]"/>
  <match src="identifier: D256 [9209,9213]" dest="identifier: D256 [9773,9777]"/>
  <match src="call_argument [101059,101065]" dest="call_argument [40215,40221]"/>
  <match src="): ) [28736,28737]" dest="): ) [47130,47131]"/>
  <match src="state_mutability [9860,9864]" dest="state_mutability [10424,10428]"/>
  <match src="comment: /**  * @dev Extension of {ERC20} that allows token holders to destroy both their own  * tokens and those that they have an allowance for, in a way that can be  * recognized off-chain (via event analysis).  */ [22549,22757]" dest="comment: /*     Copyright 2019 dYdX Trading Inc.      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [44972,45571]"/>
  <match src="): ) [68300,68301]" dest="): ) [68073,68074]"/>
  <match src="): ) [21997,21998]" dest="): ) [65103,65104]"/>
  <match src="parameter [5880,5891]" dest="parameter [6444,6455]"/>
  <match src="return_type_definition [46119,46148]" dest="return_type_definition [16252,16281]"/>
  <match src="parameter [56056,56060]" dest="parameter [23905,23909]"/>
  <match src="user_defined_type [15742,15749]" dest="user_defined_type [60750,60761]"/>
  <match src="identifier: Decimal [47847,47854]" dest="identifier: Decimal [17980,17987]"/>
  <match src="primitive_type [29014,29020]" dest="primitive_type [47408,47414]"/>
  <match src="{: { [7684,7685]" dest="{: { [8248,8249]"/>
  <match src="expression_statement [104147,104192]" dest="expression_statement [43303,43348]"/>
  <match src="member_expression [101813,101828]" dest="member_expression [40969,40984]"/>
  <match src="identifier: value [7189,7194]" dest="identifier: value [7753,7758]"/>
  <match src="public: public [95874,95880]" dest="public: public [35030,35036]"/>
  <match src="): ) [46428,46429]" dest="): ) [16561,16562]"/>
  <match src="}: } [99858,99859]" dest="}: } [39014,39015]"/>
  <match src="identifier: msg [82818,82821]" dest="identifier: msg [72984,72987]"/>
  <match src="function: function [69171,69179]" dest="function: function [62554,62562]"/>
  <match src="array_access [102130,102169]" dest="array_access [41286,41325]"/>
  <match src="{: { [28391,28392]" dest="{: { [46785,46786]"/>
  <match src="if: if [32194,32196]" dest="if: if [50588,50590]"/>
  <match src=".: . [93657,93658]" dest=".: . [32813,32814]"/>
  <match src="uint: uint [55079,55083]" dest="uint: uint [22928,22932]"/>
  <match src="pure: pure [7850,7854]" dest="pure: pure [8414,8418]"/>
  <match src="external: external [63920,63928]" dest="external: external [28708,28716]"/>
  <match src="if: if [7535,7537]" dest="if: if [8099,8101]"/>
  <match src="primitive_type [93177,93184]" dest="primitive_type [32333,32340]"/>
  <match src="return_statement [95658,95714]" dest="return_statement [34814,34870]"/>
  <match src="function: function [101705,101713]" dest="function: function [40861,40869]"/>
  <match src="(: ( [102915,102916]" dest="(: ( [42071,42072]"/>
  <match src="returns: returns [63934,63941]" dest="returns: returns [28722,28729]"/>
  <match src="function: function [100196,100204]" dest="function: function [39352,39360]"/>
  <match src="(: ( [102402,102403]" dest="(: ( [41558,41559]"/>
  <match src="primitive_type [84468,84475]" dest="primitive_type [62141,62148]"/>
  <match src="identifier: b [7465,7466]" dest="identifier: b [8029,8030]"/>
  <match src="constant: constant [81006,81014]" dest="constant: constant [71435,71443]"/>
  <match src=".: . [102094,102095]" dest=".: . [41250,41251]"/>
  <match src="variable_declaration [1348,1357]" dest="variable_declaration [1912,1921]"/>
  <match src="internal: internal [5849,5857]" dest="internal: internal [6413,6421]"/>
  <match src="type_name [54768,54775]" dest="type_name [22617,22624]"/>
  <match src="function: function [103619,103627]" dest="function: function [42775,42783]"/>
  <match src="{: { [46149,46150]" dest="{: { [16282,16283]"/>
  <match src="&quot;: &quot; [53306,53307]" dest="&quot;: &quot; [65881,65882]"/>
  <match src="call_expression [1309,1338]" dest="call_expression [1873,1902]"/>
  <match src="): ) [96668,96669]" dest="): ) [35824,35825]"/>
  <match src="ternary_expression [95188,95275]" dest="ternary_expression [34344,34431]"/>
  <match src="identifier: a [2633,2634]" dest="identifier: a [3197,3198]"/>
  <match src="visibility [92749,92755]" dest="visibility [31905,31911]"/>
  <match src=".: . [93094,93095]" dest=".: . [32250,32251]"/>
  <match src="(: ( [47261,47262]" dest="(: ( [17394,17395]"/>
  <match src="(: ( [31449,31450]" dest="(: ( [49843,49844]"/>
  <match src="primitive_type [34530,34534]" dest="primitive_type [52924,52928]"/>
  <match src="identifier: start [81255,81260]" dest="identifier: start [71728,71733]"/>
  <match src="]: ] [102530,102531]" dest="]: ] [41686,41687]"/>
  <match src="call_argument [22402,22408]" dest="call_argument [65614,65620]"/>
  <match src="address: address [44446,44453]" dest="address: address [14579,14586]"/>
  <match src="identifier: COLON [29769,29774]" dest="identifier: COLON [48163,48168]"/>
  <match src="address: address [101496,101503]" dest="address: address [40652,40659]"/>
  <match src=".: . [100926,100927]" dest=".: . [40082,40083]"/>
  <match src="): ) [21958,21959]" dest="): ) [63920,63921]"/>
  <match src="call_expression [103471,103498]" dest="call_expression [42627,42654]"/>
  <match src="&quot;: &quot; [19141,19142]" dest="&quot;: &quot; [64016,64017]"/>
  <match src="identifier: D256 [7071,7075]" dest="identifier: D256 [7635,7639]"/>
  <match src="function: function [56376,56384]" dest="function: function [24225,24233]"/>
  <match src="call_argument [50758,50777]" dest="call_argument [56761,56805]"/>
  <match src="call_argument [101891,101897]" dest="call_argument [41047,41053]"/>
  <match src="identifier: char [36595,36599]" dest="identifier: char [54989,54993]"/>
  <match src="string_literal [83681,83717]" dest="string_literal [81504,81522]"/>
  <match src="primitive_type [32847,32854]" dest="primitive_type [51241,51248]"/>
  <match src=".: . [46135,46136]" dest=".: . [16268,16269]"/>
  <match src="identifier: lessPhantom [83668,83679]" dest="identifier: candidate [80695,80704]"/>
  <match src="identifier: sender [82173,82179]" dest="identifier: sender [73786,73792]"/>
  <match src="): ) [84343,84344]" dest="): ) [62075,62076]"/>
  <match src="]: ] [98020,98021]" dest="]: ] [37176,37177]"/>
  <match src="member_expression [47587,47599]" dest="member_expression [17720,17732]"/>
  <match src="primitive_type [54693,54700]" dest="primitive_type [22542,22549]"/>
  <match src="return_type_definition [92864,92887]" dest="return_type_definition [32020,32043]"/>
  <match src="}: } [98313,98314]" dest="}: } [37469,37470]"/>
  <match src="function_definition [95560,95720]" dest="function_definition [34716,34876]"/>
  <match src="primitive_type [99790,99797]" dest="primitive_type [38946,38953]"/>
  <match src="returns: returns [54815,54822]" dest="returns: returns [22664,22671]"/>
  <match src="&gt;: &gt; [10168,10169]" dest="&gt;: &gt; [10732,10733]"/>
  <match src="(: ( [82273,82274]" dest="(: ( [82483,82484]"/>
  <match src="event_paramater [25755,25778]" dest="event_paramater [61012,61035]"/>
  <match src="uint256: uint256 [94566,94573]" dest="uint256: uint256 [33722,33729]"/>
  <match src="call_argument [31242,31250]" dest="call_argument [49636,49644]"/>
  <match src="call_argument [101381,101387]" dest="call_argument [40537,40543]"/>
  <match src="): ) [46049,46050]" dest="): ) [16182,16183]"/>
  <match src="number_literal: 32 [33144,33146]" dest="number_literal: 32 [51538,51540]"/>
  <match src="{: { [6769,6770]" dest="{: { [7333,7334]"/>
  <match src="visibility [41531,41538]" dest="visibility [11664,11671]"/>
  <match src="variable_declaration_statement [35199,35213]" dest="variable_declaration_statement [53593,53607]"/>
  <match src="call_argument [31912,31918]" dest="call_argument [50306,50312]"/>
  <match src="identifier: reason [32413,32419]" dest="identifier: reason [50807,50813]"/>
  <match src="number_literal: 1 [7669,7670]" dest="number_literal: 1 [8233,8234]"/>
  <match src="user_defined_type [92492,92497]" dest="user_defined_type [31648,31653]"/>
  <match src="parameter [97227,97231]" dest="parameter [36383,36387]"/>
  <match src=".: . [45979,45980]" dest=".: . [16112,16113]"/>
  <match src=".: . [84537,84538]" dest=".: . [73929,73930]"/>
  <match src="call_expression [83353,83392]" dest="call_expression [73330,73395]"/>
  <match src="call_argument [101883,101889]" dest="call_argument [41039,41045]"/>
  <match src="{: { [35227,35228]" dest="{: { [53621,53622]"/>
  <match src="function: function [82966,82974]" dest="function: function [73119,73127]"/>
  <match src="call_struct_argument [47601,47641]" dest="call_struct_argument [17734,17774]"/>
  <match src="function: function [104984,104992]" dest="function: function [44140,44148]"/>
  <match src="&gt;: &gt; [33150,33151]" dest="&gt;: &gt; [51544,51545]"/>
  <match src=".: . [97481,97482]" dest=".: . [36637,36638]"/>
  <match src="visibility [19754,19762]" dest="visibility [57355,57363]"/>
  <match src=",: , [54792,54793]" dest=",: , [22641,22642]"/>
  <match src="): ) [107289,107290]" dest="): ) [70631,70632]"/>
  <match src="parameter [55852,55877]" dest="parameter [23701,23726]"/>
  <match src="function_definition [98185,98314]" dest="function_definition [37341,37470]"/>
  <match src="call_expression [67608,67621]" dest="call_expression [67115,67130]"/>
  <match src="{: { [9891,9892]" dest="{: { [10455,10456]"/>
  <match src="): ) [55213,55214]" dest="): ) [23062,23063]"/>
  <match src="identifier: temp [7709,7713]" dest="identifier: temp [8273,8277]"/>
  <match src="): ) [4092,4093]" dest="): ) [4656,4657]"/>
  <match src=",: , [8947,8948]" dest=",: , [9511,9512]"/>
  <match src="call_expression [84567,84613]" dest="call_expression [72873,72912]"/>
  <match src="identifier: self [6665,6669]" dest="identifier: self [7229,7233]"/>
  <match src="event_definition [55488,55535]" dest="event_definition [23337,23384]"/>
  <match src="]: ] [102557,102558]" dest="]: ] [41713,41714]"/>
  <match src="type_name [31478,31485]" dest="type_name [49872,49879]"/>
  <match src="return_statement [7355,7397]" dest="return_statement [7919,7961]"/>
  <match src="return_statement [48173,48198]" dest="return_statement [18306,18331]"/>
  <match src="=: = [36490,36491]" dest="=: = [54884,54885]"/>
  <match src="state_mutability [31564,31568]" dest="state_mutability [49958,49962]"/>
  <match src="parameter [102053,102067]" dest="parameter [41209,41223]"/>
  <match src="user_defined_type [8167,8171]" dest="user_defined_type [8731,8735]"/>
  <match src="call_expression [53120,53151]" dest="call_expression [65760,65796]"/>
  <match src="): ) [100532,100533]" dest="): ) [39688,39689]"/>
  <match src="state_mutability [93809,93813]" dest="state_mutability [32965,32969]"/>
  <match src="(: ( [8986,8987]" dest="(: ( [9550,9551]"/>
  <match src="return: return [104032,104038]" dest="return: return [43188,43194]"/>
  <match src="primitive_type [7097,7104]" dest="primitive_type [7661,7668]"/>
  <match src="=: = [41754,41755]" dest="=: = [11887,11888]"/>
  <match src="(: ( [30278,30279]" dest="(: ( [48672,48673]"/>
  <match src="function_body [48768,48808]" dest="function_body [18901,18941]"/>
  <match src="primitive_type [9878,9885]" dest="primitive_type [10442,10449]"/>
  <match src="identifier: Sync [55494,55498]" dest="identifier: Sync [23343,23347]"/>
  <match src="identifier: D256 [46018,46022]" dest="identifier: D256 [16151,16155]"/>
  <match src="): ) [100701,100702]" dest="): ) [39857,39858]"/>
  <match src="returns: returns [54494,54501]" dest="returns: returns [22343,22350]"/>
  <match src="==: == [7541,7543]" dest="==: == [8105,8107]"/>
  <match src="[: [ [95214,95215]" dest="[: [ [34370,34371]"/>
  <match src="call_argument [22000,22036]" dest="call_argument [65106,65150]"/>
  <match src="identifier: value [5921,5926]" dest="identifier: value [6485,6490]"/>
  <match src="visibility [15826,15833]" dest="visibility [59916,59923]"/>
  <match src="function_definition [8373,8571]" dest="function_definition [8937,9135]"/>
  <match src="returns: returns [46283,46290]" dest="returns: returns [16416,16423]"/>
  <match src="): ) [47568,47569]" dest="): ) [17701,17702]"/>
  <match src="comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [14006,14569]" dest="comment: /*     Copyright 2021 Ethic Money Devs &lt;devs@ethic.money&gt; and Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [10760,11443]"/>
  <match src="variable_declaration_statement [74226,74363]" dest="variable_declaration_statement [82665,82742]"/>
  <match src="/: / [2018,2019]" dest="/: / [2582,2583]"/>
  <match src="type_name [55816,55823]" dest="type_name [23665,23672]"/>
  <match src="identifier: must [27837,27841]" dest="identifier: must [46231,46235]"/>
  <match src="(: ( [36662,36663]" dest="(: ( [55056,55057]"/>
  <match src="member_expression [99985,100010]" dest="member_expression [39141,39166]"/>
  <match src="function_definition [81472,81737]" dest="function_definition [71997,72235]"/>
  <match src="call_expression [103947,103972]" dest="call_expression [43103,43128]"/>
  <match src="identifier: accounts [95385,95393]" dest="identifier: accounts [34541,34549]"/>
  <match src="): ) [87206,87207]" dest="): ) [75716,75717]"/>
  <match src="): ) [105045,105046]" dest="): ) [44201,44202]"/>
  <match src="user_defined_type [95914,95937]" dest="user_defined_type [35070,35093]"/>
  <match src="{: { [1299,1300]" dest="{: { [1863,1864]"/>
  <match src="comment: /* Chain */ [41335,41346]" dest="comment: /* Chain */ [11468,11479]"/>
  <match src="state_variable_declaration [43702,43750]" dest="state_variable_declaration [13835,13883]"/>
  <match src="primitive_type [44244,44251]" dest="primitive_type [14377,14384]"/>
  <match src="): ) [45719,45720]" dest="): ) [15852,15853]"/>
  <match src="primitive_type [97699,97706]" dest="primitive_type [36855,36862]"/>
  <match src="(: ( [46921,46922]" dest="(: ( [17054,17055]"/>
  <match src="(: ( [55567,55568]" dest="(: ( [23416,23417]"/>
  <match src="call_expression [9908,9946]" dest="call_expression [10472,10510]"/>
  <match src="type_name [4030,4037]" dest="type_name [4594,4601]"/>
  <match src="event_paramater [54154,54174]" dest="event_paramater [22003,22023]"/>
  <match src="visibility [78024,78032]" dest="visibility [61511,61519]"/>
  <match src="uint256: uint256 [44886,44893]" dest="uint256: uint256 [15019,15026]"/>
  <match src="identifier: value [54710,54715]" dest="identifier: value [22559,22564]"/>
  <match src="call_argument [83801,83813]" dest="call_argument [73663,73669]"/>
  <match src="binary_expression [35303,35308]" dest="binary_expression [53697,53702]"/>
  <match src="type_name [104636,104643]" dest="type_name [43792,43799]"/>
  <match src="identifier: Provider [89213,89221]" dest="identifier: Provider [30713,30721]"/>
  <match src="function: function [6631,6639]" dest="function: function [7195,7203]"/>
</matches>
<actions>
  <move-tree tree="comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [10196,10695]" parent="source_file [0,84442]" at="2"/>
  <move-tree tree="library_declaration [41311,48810]" parent="source_file [0,84442]" at="11"/>
  <move-tree tree="interface_declaration [54028,56425]" parent="source_file [0,84442]" at="13"/>
  <move-tree tree="comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP. Does not include  * the optional functions; to access them see {ERC20Detailed}.  */ [11287,11437]" parent="source_file [0,84442]" at="13"/>
  <move-tree tree="interface_declaration [11438,14004]" parent="source_file [0,84442]" at="13"/>
  <move-tree tree="comment: /*     Copyright 2021 Ethic Money Devs &lt;devs@ethic.money&gt; and Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [51059,51742]" parent="source_file [0,84442]" at="31"/>
  <move-tree tree="contract_declaration [63785,63954]" parent="source_file [0,84442]" at="32"/>
  <move-tree tree="contract_declaration [87928,88249]" parent="source_file [0,84442]" at="34"/>
  <move-tree tree="contract_declaration [88251,88555]" parent="source_file [0,84442]" at="35"/>
  <move-tree tree="contract_declaration [88557,88840]" parent="source_file [0,84442]" at="36"/>
  <move-tree tree="contract_declaration [88842,89396]" parent="source_file [0,84442]" at="37"/>
  <move-tree tree="contract_declaration [89398,89442]" parent="source_file [0,84442]" at="38"/>
  <move-tree tree="contract_declaration [92472,98634]" parent="source_file [0,84442]" at="50"/>
  <move-tree tree="contract_declaration [99320,105814]" parent="source_file [0,84442]" at="54"/>
  <move-tree tree="comment: /**  * @dev Extension of {ERC20} that allows token holders to destroy both their own  * tokens and those that they have an allowance for, in a way that can be  * recognized off-chain (via event analysis).  */ [22549,22757]" parent="source_file [0,84442]" at="54"/>
  <move-tree tree="comment: /**  * @dev Optional functions from the ERC20 standard.  */ [23151,23210]" parent="source_file [0,84442]" at="54"/>
  <move-tree tree="library_declaration [27320,36901]" parent="source_file [0,84442]" at="54"/>
  <move-tree tree="contract_declaration [15724,22547]" parent="source_file [0,84442]" at="62"/>
  <move-tree tree="contract_declaration [106500,107312]" parent="source_file [0,84442]" at="67"/>
  <update-node tree="comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [10196,10695]" label="/**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */"/>
  <update-node tree="comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [14006,14569]" label="/*     Copyright 2021 Ethic Money Devs &lt;devs@ethic.money&gt; and Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */"/>
  <update-node tree="comment: /**  * @dev Implementation of the {IERC20} interface.  *  * This implementation is agnostic to the way tokens are created. This means  * that a supply mechanism has to be added in a derived contract using {_mint}.  * For a generic mechanism see {ERC20Mintable}.  *  * TIP: For a detailed writeup see our guide  * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How  * to implement supply mechanisms].  *  * We have followed general OpenZeppelin guidelines: functions revert instead  * of returning `false` on failure. This behavior is nonetheless conventional  * and does not conflict with the expectations of ERC20 applications.  *  * Additionally, an {Approval} event is emitted on calls to {transferFrom}.  * This allows applications to reconstruct the allowance for all accounts just  * by listening to said events. Other implementations of the EIP may not emit  * these events, as it isn't required by the specification.  *  * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}  * functions have been added to mitigate the well-known issues around setting  * allowances. See {IERC20-approve}.  */ [14571,15723]" label="/*     Copyright 2021 Ethic Money Devs &lt;devs@ethic.money&gt; and Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */"/>
  <insert-node tree="contract_declaration [19629,21875]" parent="source_file [0,84442]" at="10"/>
  <update-node tree="comment: /**  * @dev Extension of {ERC20} that allows token holders to destroy both their own  * tokens and those that they have an allowance for, in a way that can be  * recognized off-chain (via event analysis).  */ [22549,22757]" label="/*     Copyright 2019 dYdX Trading Inc.      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */"/>
  <update-node tree="comment: /**  * @dev Optional functions from the ERC20 standard.  */ [23151,23210]" label="/**  * @title Require  * @author dYdX  *  * Stringifies parameters to pretty-print revert messages. Costs more gas than regular require()  */"/>
  <insert-node tree="contract_declaration [55981,60045]" parent="source_file [0,84442]" at="32"/>
  <insert-node tree="contract_declaration [66689,69156]" parent="source_file [0,84442]" at="36"/>
  <insert-node tree="contract_declaration [78782,82828]" parent="source_file [0,84442]" at="47"/>
  <insert-node tree="contract_declaration [83514,84442]" parent="source_file [0,84442]" at="49"/>
  <insert-node tree="contract: contract [19629,19637]" parent="contract_declaration [19629,21875]" at="0"/>
  <insert-node tree="identifier: Curve [19638,19643]" parent="contract_declaration [19629,21875]" at="1"/>
  <insert-node tree="contract_body [19644,21875]" parent="contract_declaration [19629,21875]" at="2"/>
  <insert-node tree="contract: contract [55981,55989]" parent="contract_declaration [55981,60045]" at="0"/>
  <insert-node tree="identifier: Comptroller [55990,56001]" parent="contract_declaration [55981,60045]" at="1"/>
  <insert-node tree="is: is [56002,56004]" parent="contract_declaration [55981,60045]" at="2"/>
  <insert-tree tree="inheritance_specifier [56005,56012]" parent="contract_declaration [55981,60045]" at="3"/>
  <insert-node tree="contract_body [56013,60045]" parent="contract_declaration [55981,60045]" at="4"/>
  <update-node tree="identifier: ERC20 [15733,15738]" label="Market"/>
  <move-tree tree="function_definition [19684,20148]" parent="contract_body [60769,66003]" at="28"/>
  <insert-node tree="contract: contract [66689,66697]" parent="contract_declaration [66689,69156]" at="0"/>
  <insert-node tree="identifier: Regulator [66698,66707]" parent="contract_declaration [66689,69156]" at="1"/>
  <insert-node tree="is: is [66708,66710]" parent="contract_declaration [66689,69156]" at="2"/>
  <insert-tree tree="inheritance_specifier [66711,66722]" parent="contract_declaration [66689,69156]" at="3"/>
  <insert-node tree="contract_body [66723,69156]" parent="contract_declaration [66689,69156]" at="4"/>
  <update-node tree="identifier: Pool [80716,80720]" label="Bonding"/>
  <move-tree tree="inheritance_specifier [108295,108305]" parent="contract_declaration [71340,74233]" at="5"/>
  <move-tree tree="event_definition [81211,81277]" parent="contract_body [71380,74233]" at="8"/>
  <insert-node tree="contract: contract [78782,78790]" parent="contract_declaration [78782,82828]" at="0"/>
  <insert-node tree="identifier: Govern [78791,78797]" parent="contract_declaration [78782,82828]" at="1"/>
  <insert-node tree="is: is [78798,78800]" parent="contract_declaration [78782,82828]" at="2"/>
  <insert-tree tree="inheritance_specifier [78801,78808]" parent="contract_declaration [78782,82828]" at="3"/>
  <insert-node tree=",: , [78808,78809]" parent="contract_declaration [78782,82828]" at="4"/>
  <move-tree tree="inheritance_specifier [108039,108049]" parent="contract_declaration [78782,82828]" at="5"/>
  <insert-node tree=",: , [78820,78821]" parent="contract_declaration [78782,82828]" at="6"/>
  <move-tree tree="inheritance_specifier [108051,108062]" parent="contract_declaration [78782,82828]" at="7"/>
  <insert-node tree="contract_body [78834,82828]" parent="contract_declaration [78782,82828]" at="8"/>
  <insert-node tree="contract: contract [83514,83522]" parent="contract_declaration [83514,84442]" at="0"/>
  <insert-node tree="identifier: Implementation [83523,83537]" parent="contract_declaration [83514,84442]" at="1"/>
  <insert-node tree="is: is [83538,83540]" parent="contract_declaration [83514,84442]" at="2"/>
  <move-tree tree="inheritance_specifier [108032,108037]" parent="contract_declaration [83514,84442]" at="3"/>
  <insert-node tree=",: , [83546,83547]" parent="contract_declaration [83514,84442]" at="4"/>
  <insert-tree tree="inheritance_specifier [83548,83555]" parent="contract_declaration [83514,84442]" at="5"/>
  <insert-node tree=",: , [83555,83556]" parent="contract_declaration [83514,84442]" at="6"/>
  <insert-tree tree="inheritance_specifier [83557,83563]" parent="contract_declaration [83514,84442]" at="7"/>
  <insert-node tree=",: , [83563,83564]" parent="contract_declaration [83514,84442]" at="8"/>
  <insert-tree tree="inheritance_specifier [83565,83574]" parent="contract_declaration [83514,84442]" at="9"/>
  <insert-node tree=",: , [83574,83575]" parent="contract_declaration [83514,84442]" at="10"/>
  <insert-tree tree="inheritance_specifier [83576,83582]" parent="contract_declaration [83514,84442]" at="11"/>
  <insert-node tree="contract_body [83583,84442]" parent="contract_declaration [83514,84442]" at="12"/>
  <insert-node tree="{: { [19644,19645]" parent="contract_body [19644,21875]" at="0"/>
  <insert-tree tree="using_directive [19650,19677]" parent="contract_body [19644,21875]" at="1"/>
  <insert-tree tree="using_directive [19682,19713]" parent="contract_body [19644,21875]" at="2"/>
  <insert-node tree="function_definition [19719,19965]" parent="contract_body [19644,21875]" at="3"/>
  <insert-node tree="function_definition [19971,21248]" parent="contract_body [19644,21875]" at="4"/>
  <insert-node tree="comment: // 1/((1-R)^2)-1 [21254,21270]" parent="contract_body [19644,21875]" at="5"/>
  <insert-node tree="function_definition [21275,21485]" parent="contract_body [19644,21875]" at="6"/>
  <insert-node tree="comment: // 1/((1-R)(1-R'))-1 [21491,21511]" parent="contract_body [19644,21875]" at="7"/>
  <insert-node tree="function_definition [21516,21873]" parent="contract_body [19644,21875]" at="8"/>
  <insert-node tree="}: } [21874,21875]" parent="contract_body [19644,21875]" at="9"/>
  <insert-node tree="{: { [56013,56014]" parent="contract_body [56013,60045]" at="0"/>
  <move-tree tree="using_directive [72280,72307]" parent="contract_body [56013,60045]" at="1"/>
  <insert-tree tree="state_variable_declaration [56052,56098]" parent="contract_body [56013,60045]" at="2"/>
  <move-tree tree="function_definition [52819,52959]" parent="contract_body [56013,60045]" at="3"/>
  <insert-node tree="function_definition [56331,56602]" parent="contract_body [56013,60045]" at="4"/>
  <move-tree tree="function_definition [23046,23147]" parent="contract_body [56013,60045]" at="5"/>
  <move-tree tree="function_definition [21039,21381]" parent="contract_body [56013,60045]" at="6"/>
  <insert-node tree="function_definition [57049,57311]" parent="contract_body [56013,60045]" at="7"/>
  <insert-node tree="function_definition [57317,57464]" parent="contract_body [56013,60045]" at="8"/>
  <insert-node tree="function_definition [57470,58730]" parent="contract_body [56013,60045]" at="9"/>
  <insert-node tree="function_definition [58736,59150]" parent="contract_body [56013,60045]" at="10"/>
  <move-tree tree="function_definition [73153,73286]" parent="contract_body [56013,60045]" at="11"/>
  <move-tree tree="function_definition [85008,85223]" parent="contract_body [56013,60045]" at="12"/>
  <insert-node tree="function_definition [59576,59705]" parent="contract_body [56013,60045]" at="13"/>
  <insert-node tree="function_definition [59711,59868]" parent="contract_body [56013,60045]" at="14"/>
  <insert-node tree="function_definition [59874,60043]" parent="contract_body [56013,60045]" at="15"/>
  <insert-node tree="}: } [60044,60045]" parent="contract_body [56013,60045]" at="16"/>
  <move-tree tree="state_variable_declaration [65496,65537]" parent="contract_body [60769,66003]" at="2"/>
  <insert-node tree="event_definition [60855,60986]" parent="contract_body [60769,66003]" at="3"/>
  <insert-node tree="event_definition [60991,61104]" parent="contract_body [60769,66003]" at="4"/>
  <move-tree tree="event_definition [25687,25730]" parent="contract_body [60769,66003]" at="5"/>
  <insert-tree tree="event_definition [61207,61294]" parent="contract_body [60769,66003]" at="6"/>
  <move-tree tree="event_definition [53426,53512]" parent="contract_body [60769,66003]" at="7"/>
  <move-tree tree=",: , [53504,53505]" parent="event_definition [61299,61400]" at="9"/>
  <insert-node tree="event_definition [61405,61489]" parent="contract_body [60769,66003]" at="8"/>
  <move-tree tree="function_definition [77989,78136]" parent="contract_body [60769,66003]" at="9"/>
  <insert-node tree="function_definition [61908,62548]" parent="contract_body [60769,66003]" at="10"/>
  <move-tree tree="function_definition [69171,69254]" parent="contract_body [60769,66003]" at="11"/>
  <insert-node tree="function_definition [62719,63722]" parent="contract_body [60769,66003]" at="12"/>
  <insert-node tree="function_definition [63724,64384]" parent="contract_body [60769,66003]" at="13"/>
  <insert-node tree="function_definition [64390,64993]" parent="contract_body [60769,66003]" at="14"/>
  <move-tree tree=",: , [21837,21838]" parent="function_definition [64999,65279]" at="5"/>
  <insert-node tree="{: { [66723,66724]" parent="contract_body [66723,69156]" at="0"/>
  <insert-tree tree="using_directive [66729,66756]" parent="contract_body [66723,69156]" at="1"/>
  <move-tree tree="using_directive [65459,65490]" parent="contract_body [66723,69156]" at="2"/>
  <insert-node tree="event_definition [66798,66917]" parent="contract_body [66723,69156]" at="3"/>
  <insert-node tree="event_definition [66922,66998]" parent="contract_body [66723,69156]" at="4"/>
  <insert-node tree="event_definition [67003,67046]" parent="contract_body [66723,69156]" at="5"/>
  <insert-node tree="function_definition [67052,67394]" parent="contract_body [66723,69156]" at="6"/>
  <insert-node tree="function_definition [67400,67739]" parent="contract_body [66723,69156]" at="7"/>
  <insert-node tree="function_definition [67745,68168]" parent="contract_body [66723,69156]" at="8"/>
  <move-tree tree="function_definition [73952,74594]" parent="contract_body [66723,69156]" at="9"/>
  <move-tree tree="function_definition [68082,68690]" parent="contract_body [66723,69156]" at="10"/>
  <insert-node tree="}: } [69155,69156]" parent="contract_body [66723,69156]" at="11"/>
  <insert-node tree="function_definition [71781,71991]" parent="contract_body [71380,74233]" at="7"/>
  <insert-node tree="function_definition [73683,74231]" parent="contract_body [71380,74233]" at="12"/>
  <insert-node tree="{: { [78834,78835]" parent="contract_body [78834,82828]" at="0"/>
  <insert-tree tree="using_directive [78840,78867]" parent="contract_body [78834,82828]" at="1"/>
  <insert-tree tree="using_directive [78872,78903]" parent="contract_body [78834,82828]" at="2"/>
  <insert-tree tree="state_variable_declaration [78909,78950]" parent="contract_body [78834,82828]" at="3"/>
  <insert-node tree="event_definition [78956,79062]" parent="contract_body [78834,82828]" at="4"/>
  <insert-node tree="event_definition [79067,79167]" parent="contract_body [78834,82828]" at="5"/>
  <move-tree tree="event_definition [81377,81466]" parent="contract_body [78834,82828]" at="6"/>
  <insert-node tree="function_definition [79243,80817]" parent="contract_body [78834,82828]" at="7"/>
  <move-tree tree="function_definition [83827,84787]" parent="contract_body [78834,82828]" at="8"/>
  <insert-node tree="function_definition [81758,82513]" parent="contract_body [78834,82828]" at="9"/>
  <insert-node tree="function_definition [82519,82826]" parent="contract_body [78834,82828]" at="10"/>
  <insert-node tree="}: } [82827,82828]" parent="contract_body [78834,82828]" at="11"/>
  <insert-node tree="{: { [83583,83584]" parent="contract_body [83583,84442]" at="0"/>
  <move-tree tree="using_directive [75688,75715]" parent="contract_body [83583,84442]" at="1"/>
  <insert-node tree="event_definition [83622,83693]" parent="contract_body [83583,84442]" at="2"/>
  <move-tree tree="event_definition [81154,81206]" parent="contract_body [83583,84442]" at="3"/>
  <insert-node tree="function_definition [83767,83947]" parent="contract_body [83583,84442]" at="4"/>
  <insert-node tree="function_definition [83953,84278]" parent="contract_body [83583,84442]" at="5"/>
  <insert-node tree="function_definition [84284,84440]" parent="contract_body [83583,84442]" at="6"/>
  <insert-node tree="}: } [84441,84442]" parent="contract_body [83583,84442]" at="7"/>
  <insert-node tree="function: function [19719,19727]" parent="function_definition [19719,19965]" at="0"/>
  <insert-node tree="identifier: calculateCouponPremium [19728,19750]" parent="function_definition [19719,19965]" at="1"/>
  <insert-node tree="(: ( [19750,19751]" parent="function_definition [19719,19965]" at="2"/>
  <insert-node tree="parameter [19760,19779]" parent="function_definition [19719,19965]" at="3"/>
  <insert-node tree=",: , [19779,19780]" parent="function_definition [19719,19965]" at="4"/>
  <insert-node tree="parameter [19789,19806]" parent="function_definition [19719,19965]" at="5"/>
  <insert-node tree=",: , [19806,19807]" parent="function_definition [19719,19965]" at="6"/>
  <move-tree tree="parameter [22922,22936]" parent="function_definition [19719,19965]" at="7"/>
  <insert-node tree="): ) [19835,19836]" parent="function_definition [19719,19965]" at="8"/>
  <move-tree tree="visibility [10981,10989]" parent="function_definition [19719,19965]" at="9"/>
  <move-tree tree="state_mutability [56621,56625]" parent="function_definition [19719,19965]" at="10"/>
  <move-tree tree="return_type_definition [16050,16067]" parent="function_definition [19719,19965]" at="11"/>
  <insert-node tree="function_body [19869,19965]" parent="function_definition [19719,19965]" at="12"/>
  <insert-node tree="function: function [19971,19979]" parent="function_definition [19971,21248]" at="0"/>
  <insert-node tree="identifier: effectivePremium [19980,19996]" parent="function_definition [19971,21248]" at="1"/>
  <insert-node tree="(: ( [19996,19997]" parent="function_definition [19971,21248]" at="2"/>
  <move-tree tree="parameter [18996,19019]" parent="function_definition [19971,21248]" at="3"/>
  <insert-node tree=",: , [20025,20026]" parent="function_definition [19971,21248]" at="4"/>
  <move-tree tree="parameter [18302,18320]" parent="function_definition [19971,21248]" at="5"/>
  <insert-node tree=",: , [20052,20053]" parent="function_definition [19971,21248]" at="6"/>
  <move-tree tree="parameter [23081,23095]" parent="function_definition [19971,21248]" at="7"/>
  <insert-node tree="): ) [20081,20082]" parent="function_definition [19971,21248]" at="8"/>
  <move-tree tree="visibility [15900,15907]" parent="function_definition [19971,21248]" at="9"/>
  <move-tree tree="state_mutability [57483,57487]" parent="function_definition [19971,21248]" at="10"/>
  <insert-tree tree="return_type_definition [20096,20125]" parent="function_definition [19971,21248]" at="11"/>
  <insert-node tree="function_body [20126,21248]" parent="function_definition [19971,21248]" at="12"/>
  <insert-node tree="function: function [21275,21283]" parent="function_definition [21275,21485]" at="0"/>
  <insert-node tree="identifier: curve [21284,21289]" parent="function_definition [21275,21485]" at="1"/>
  <insert-node tree="(: ( [21289,21290]" parent="function_definition [21275,21485]" at="2"/>
  <move-tree tree="parameter [66700,66719]" parent="function_definition [21275,21485]" at="3"/>
  <insert-node tree="): ) [21319,21320]" parent="function_definition [21275,21485]" at="4"/>
  <move-tree tree="visibility [15934,15941]" parent="function_definition [21275,21485]" at="5"/>
  <move-tree tree="state_mutability [39843,39847]" parent="function_definition [21275,21485]" at="6"/>
  <insert-tree tree="return_type_definition [21334,21363]" parent="function_definition [21275,21485]" at="7"/>
  <insert-tree tree="function_body [21364,21485]" parent="function_definition [21275,21485]" at="8"/>
  <insert-node tree="function: function [21516,21524]" parent="function_definition [21516,21873]" at="0"/>
  <insert-node tree="identifier: curveMean [21525,21534]" parent="function_definition [21516,21873]" at="1"/>
  <insert-node tree="(: ( [21534,21535]" parent="function_definition [21516,21873]" at="2"/>
  <move-tree tree="parameter [67543,67562]" parent="function_definition [21516,21873]" at="3"/>
  <insert-node tree=",: , [21569,21570]" parent="function_definition [21516,21873]" at="4"/>
  <insert-tree tree="parameter [21579,21604]" parent="function_definition [21516,21873]" at="5"/>
  <insert-node tree="): ) [21609,21610]" parent="function_definition [21516,21873]" at="6"/>
  <move-tree tree="visibility [67526,67533]" parent="function_definition [21516,21873]" at="7"/>
  <move-tree tree="state_mutability [38345,38349]" parent="function_definition [21516,21873]" at="8"/>
  <insert-tree tree="return_type_definition [21624,21653]" parent="function_definition [21516,21873]" at="9"/>
  <insert-tree tree="function_body [21654,21873]" parent="function_definition [21516,21873]" at="10"/>
  <update-node tree="identifier: mint [52828,52832]" label="mintToAccount"/>
  <move-tree tree="visibility [11081,11089]" parent="function_definition [56104,56325]" at="7"/>
  <insert-node tree="function: function [56331,56339]" parent="function_definition [56331,56602]" at="0"/>
  <insert-node tree="identifier: burnFromAccount [56340,56355]" parent="function_definition [56331,56602]" at="1"/>
  <insert-node tree="(: ( [56355,56356]" parent="function_definition [56331,56602]" at="2"/>
  <move-tree tree="parameter [26162,26177]" parent="function_definition [56331,56602]" at="3"/>
  <insert-node tree=",: , [56371,56372]" parent="function_definition [56331,56602]" at="4"/>
  <move-tree tree="parameter [53022,53036]" parent="function_definition [56331,56602]" at="5"/>
  <insert-node tree="): ) [56387,56388]" parent="function_definition [56331,56602]" at="6"/>
  <move-tree tree="visibility [26487,26495]" parent="function_definition [56331,56602]" at="7"/>
  <move-tree tree="function_body [49974,50106]" parent="function_definition [56331,56602]" at="8"/>
  <update-node tree="identifier: burnFrom [23055,23063]" label="redeemToAccount"/>
  <move-tree tree="parameter [26048,26063]" parent="function_definition [56608,56838]" at="3"/>
  <move-tree tree="parameter [75904,75918]" parent="function_definition [56608,56838]" at="6"/>
  <move-tree tree="visibility [75920,75928]" parent="function_definition [56608,56838]" at="8"/>
  <update-node tree="identifier: _burn [21048,21053]" label="burnRedeemable"/>
  <move-tree tree="expression_statement [21184,21274]" parent="function_body [56893,57043]" at="3"/>
  <insert-node tree="function: function [57049,57057]" parent="function_definition [57049,57311]" at="0"/>
  <insert-node tree="identifier: increaseDebt [57058,57070]" parent="function_definition [57049,57311]" at="1"/>
  <insert-node tree="(: ( [57070,57071]" parent="function_definition [57049,57311]" at="2"/>
  <move-tree tree="parameter [76428,76442]" parent="function_definition [57049,57311]" at="3"/>
  <insert-node tree="): ) [57085,57086]" parent="function_definition [57049,57311]" at="4"/>
  <move-tree tree="visibility [76444,76452]" parent="function_definition [57049,57311]" at="5"/>
  <move-tree tree="return_type_definition [70146,70163]" parent="function_definition [57049,57311]" at="6"/>
  <insert-node tree="function_body [57114,57311]" parent="function_definition [57049,57311]" at="7"/>
  <insert-node tree="function: function [57317,57325]" parent="function_definition [57317,57464]" at="0"/>
  <insert-node tree="identifier: decreaseDebt [57326,57338]" parent="function_definition [57317,57464]" at="1"/>
  <insert-node tree="(: ( [57338,57339]" parent="function_definition [57317,57464]" at="2"/>
  <move-tree tree="parameter [16510,16524]" parent="function_definition [57317,57464]" at="3"/>
  <insert-node tree="): ) [57353,57354]" parent="function_definition [57317,57464]" at="4"/>
  <move-tree tree="visibility [19754,19762]" parent="function_definition [57317,57464]" at="5"/>
  <insert-node tree="function_body [57364,57464]" parent="function_definition [57317,57464]" at="6"/>
  <insert-node tree="function: function [57470,57478]" parent="function_definition [57470,58730]" at="0"/>
  <insert-node tree="identifier: increaseSupply [57479,57493]" parent="function_definition [57470,58730]" at="1"/>
  <insert-node tree="(: ( [57493,57494]" parent="function_definition [57470,58730]" at="2"/>
  <move-tree tree="parameter [50208,50224]" parent="function_definition [57470,58730]" at="3"/>
  <insert-node tree="): ) [57511,57512]" parent="function_definition [57470,58730]" at="4"/>
  <move-tree tree="visibility [79008,79016]" parent="function_definition [57470,58730]" at="5"/>
  <move-tree tree="return_type_definition [79017,79043]" parent="function_definition [57470,58730]" at="6"/>
  <insert-node tree="function_body [57549,58730]" parent="function_definition [57470,58730]" at="7"/>
  <insert-node tree="function: function [58736,58744]" parent="function_definition [58736,59150]" at="0"/>
  <insert-node tree="identifier: resetDebt [58745,58754]" parent="function_definition [58736,59150]" at="1"/>
  <insert-node tree="(: ( [58754,58755]" parent="function_definition [58736,59150]" at="2"/>
  <insert-tree tree="parameter [58755,58790]" parent="function_definition [58736,59150]" at="3"/>
  <insert-node tree="): ) [58790,58791]" parent="function_definition [58736,59150]" at="4"/>
  <move-tree tree="visibility [26359,26367]" parent="function_definition [58736,59150]" at="5"/>
  <move-tree tree="return_type_definition [16210,16227]" parent="function_definition [58736,59150]" at="6"/>
  <insert-node tree="function_body [58819,59150]" parent="function_definition [58736,59150]" at="7"/>
  <update-node tree="identifier: totalRewarded [73162,73175]" label="balanceCheck"/>
  <move-tree tree="visibility [85032,85039]" parent="function_definition [59156,59387]" at="4"/>
  <update-node tree="identifier: balanceCheck [85017,85029]" label="mintToDAO"/>
  <move-tree tree="parameter [77755,77769]" parent="function_definition [59393,59570]" at="3"/>
  <move-tree tree="visibility [25797,25804]" parent="function_definition [59393,59570]" at="5"/>
  <insert-node tree="function: function [59576,59584]" parent="function_definition [59576,59705]" at="0"/>
  <insert-node tree="identifier: mintToPool [59585,59595]" parent="function_definition [59576,59705]" at="1"/>
  <insert-node tree="(: ( [59595,59596]" parent="function_definition [59576,59705]" at="2"/>
  <move-tree tree="parameter [20450,20464]" parent="function_definition [59576,59705]" at="3"/>
  <insert-node tree="): ) [59610,59611]" parent="function_definition [59576,59705]" at="4"/>
  <move-tree tree="visibility [23310,23317]" parent="function_definition [59576,59705]" at="5"/>
  <insert-node tree="function_body [59620,59705]" parent="function_definition [59576,59705]" at="6"/>
  <insert-node tree="function: function [59711,59719]" parent="function_definition [59711,59868]" at="0"/>
  <insert-node tree="identifier: mintToTreasury [59720,59734]" parent="function_definition [59711,59868]" at="1"/>
  <insert-node tree="(: ( [59734,59735]" parent="function_definition [59711,59868]" at="2"/>
  <move-tree tree="parameter [16990,17004]" parent="function_definition [59711,59868]" at="3"/>
  <insert-node tree="): ) [59749,59750]" parent="function_definition [59711,59868]" at="4"/>
  <move-tree tree="visibility [23283,23290]" parent="function_definition [59711,59868]" at="5"/>
  <insert-node tree="function_body [59759,59868]" parent="function_definition [59711,59868]" at="6"/>
  <insert-node tree="function: function [59874,59882]" parent="function_definition [59874,60043]" at="0"/>
  <insert-node tree="identifier: mintToRedeemable [59883,59899]" parent="function_definition [59874,60043]" at="1"/>
  <insert-node tree="(: ( [59899,59900]" parent="function_definition [59874,60043]" at="2"/>
  <move-tree tree="parameter [17620,17634]" parent="function_definition [59874,60043]" at="3"/>
  <insert-node tree="): ) [59914,59915]" parent="function_definition [59874,60043]" at="4"/>
  <move-tree tree="visibility [15826,15833]" parent="function_definition [59874,60043]" at="5"/>
  <insert-node tree="function_body [59924,60043]" parent="function_definition [59874,60043]" at="6"/>
  <update-node tree="identifier: Context [15742,15749]" label="Comptroller"/>
  <update-node tree="identifier: IERC20 [15751,15757]" label="Curve"/>
  <insert-node tree="event: event [60855,60860]" parent="event_definition [60855,60986]" at="0"/>
  <insert-node tree="identifier: CouponExpiration [60861,60877]" parent="event_definition [60855,60986]" at="1"/>
  <insert-node tree="(: ( [60877,60878]" parent="event_definition [60855,60986]" at="2"/>
  <insert-node tree="event_paramater [60878,60899]" parent="event_definition [60855,60986]" at="3"/>
  <insert-node tree=",: , [60899,60900]" parent="event_definition [60855,60986]" at="4"/>
  <insert-tree tree="event_paramater [60901,60923]" parent="event_definition [60855,60986]" at="5"/>
  <insert-node tree=",: , [60923,60924]" parent="event_definition [60855,60986]" at="6"/>
  <insert-tree tree="event_paramater [60925,60947]" parent="event_definition [60855,60986]" at="7"/>
  <insert-node tree=",: , [60947,60948]" parent="event_definition [60855,60986]" at="8"/>
  <insert-tree tree="event_paramater [60949,60965]" parent="event_definition [60855,60986]" at="9"/>
  <insert-node tree=",: , [60965,60966]" parent="event_definition [60855,60986]" at="10"/>
  <insert-tree tree="event_paramater [60967,60984]" parent="event_definition [60855,60986]" at="11"/>
  <insert-node tree="): ) [60984,60985]" parent="event_definition [60855,60986]" at="12"/>
  <insert-node tree="event: event [60991,60996]" parent="event_definition [60991,61104]" at="0"/>
  <insert-node tree="identifier: CouponPurchase [60997,61011]" parent="event_definition [60991,61104]" at="1"/>
  <insert-node tree="(: ( [61011,61012]" parent="event_definition [60991,61104]" at="2"/>
  <move-tree tree="event_paramater [25755,25778]" parent="event_definition [60991,61104]" at="3"/>
  <insert-node tree=",: , [61035,61036]" parent="event_definition [60991,61104]" at="4"/>
  <insert-tree tree="event_paramater [61037,61058]" parent="event_definition [60991,61104]" at="5"/>
  <insert-node tree=",: , [61058,61059]" parent="event_definition [60991,61104]" at="6"/>
  <insert-tree tree="event_paramater [61060,61080]" parent="event_definition [60991,61104]" at="7"/>
  <insert-node tree=",: , [61080,61081]" parent="event_definition [60991,61104]" at="8"/>
  <insert-tree tree="event_paramater [61082,61102]" parent="event_definition [60991,61104]" at="9"/>
  <insert-node tree="): ) [61102,61103]" parent="event_definition [60991,61104]" at="10"/>
  <update-node tree="identifier: MinterAdded [25693,25704]" label="CouponRedemption"/>
  <insert-node tree=",: , [61155,61156]" parent="event_definition [61109,61202]" at="4"/>
  <insert-tree tree="event_paramater [61157,61178]" parent="event_definition [61109,61202]" at="5"/>
  <insert-node tree=",: , [61178,61179]" parent="event_definition [61109,61202]" at="6"/>
  <insert-tree tree="event_paramater [61180,61200]" parent="event_definition [61109,61202]" at="7"/>
  <update-node tree="identifier: PairCreated [53432,53443]" label="CouponTransfer"/>
  <move-tree tree="event_paramater [81191,81204]" parent="event_definition [61299,61400]" at="10"/>
  <insert-node tree="event: event [61405,61410]" parent="event_definition [61405,61489]" at="0"/>
  <insert-node tree="identifier: CouponApproval [61411,61425]" parent="event_definition [61405,61489]" at="1"/>
  <insert-node tree="(: ( [61425,61426]" parent="event_definition [61405,61489]" at="2"/>
  <insert-node tree="event_paramater [61426,61447]" parent="event_definition [61405,61489]" at="3"/>
  <insert-node tree=",: , [61447,61448]" parent="event_definition [61405,61489]" at="4"/>
  <move-tree tree="event_paramater [53492,53504]" parent="event_definition [61405,61489]" at="5"/>
  <insert-node tree=",: , [61472,61473]" parent="event_definition [61405,61489]" at="6"/>
  <move-tree tree="event_paramater [81416,81429]" parent="event_definition [61405,61489]" at="7"/>
  <insert-node tree="): ) [61487,61488]" parent="event_definition [61405,61489]" at="8"/>
  <update-node tree="identifier: unfreeze [77998,78006]" label="step"/>
  <insert-node tree="function: function [61908,61916]" parent="function_definition [61908,62548]" at="0"/>
  <insert-node tree="identifier: expireCouponsForEpoch [61917,61938]" parent="function_definition [61908,62548]" at="1"/>
  <insert-node tree="(: ( [61938,61939]" parent="function_definition [61908,62548]" at="2"/>
  <insert-tree tree="parameter [61939,61952]" parent="function_definition [61908,62548]" at="3"/>
  <insert-node tree="): ) [61952,61953]" parent="function_definition [61908,62548]" at="4"/>
  <move-tree tree="visibility [49823,49830]" parent="function_definition [61908,62548]" at="5"/>
  <insert-node tree="function_body [61962,62548]" parent="function_definition [61908,62548]" at="6"/>
  <update-node tree="identifier: reserve [69180,69187]" label="couponPremium"/>
  <move-tree tree="parameter [77507,77521]" parent="function_definition [62554,62713]" at="3"/>
  <move-tree tree="visibility [53038,53044]" parent="function_definition [62554,62713]" at="5"/>
  <insert-node tree="function: function [62719,62727]" parent="function_definition [62719,63722]" at="0"/>
  <insert-node tree="identifier: couponRedemptionPenalty [62728,62751]" parent="function_definition [62719,63722]" at="1"/>
  <insert-node tree="(: ( [62751,62752]" parent="function_definition [62719,63722]" at="2"/>
  <insert-tree tree="parameter [62752,62771]" parent="function_definition [62719,63722]" at="3"/>
  <insert-node tree=",: , [62771,62772]" parent="function_definition [62719,63722]" at="4"/>
  <insert-tree tree="parameter [62773,62793]" parent="function_definition [62719,63722]" at="5"/>
  <insert-node tree="): ) [62793,62794]" parent="function_definition [62719,63722]" at="6"/>
  <move-tree tree="visibility [73996,74002]" parent="function_definition [62719,63722]" at="7"/>
  <move-tree tree="state_mutability [74003,74007]" parent="function_definition [62719,63722]" at="8"/>
  <move-tree tree="return_type_definition [74008,74025]" parent="function_definition [62719,63722]" at="9"/>
  <insert-node tree="function_body [62825,63722]" parent="function_definition [62719,63722]" at="10"/>
  <insert-node tree="function: function [63724,63732]" parent="function_definition [63724,64384]" at="0"/>
  <insert-node tree="identifier: purchaseCoupons [63733,63748]" parent="function_definition [63724,64384]" at="1"/>
  <insert-node tree="(: ( [63748,63749]" parent="function_definition [63724,64384]" at="2"/>
  <move-tree tree="parameter [78987,79006]" parent="function_definition [63724,64384]" at="3"/>
  <insert-node tree="): ) [63768,63769]" parent="function_definition [63724,64384]" at="4"/>
  <move-tree tree="visibility [50286,50294]" parent="function_definition [63724,64384]" at="5"/>
  <move-tree tree="return_type_definition [68729,68746]" parent="function_definition [63724,64384]" at="6"/>
  <insert-node tree="function_body [63797,64384]" parent="function_definition [63724,64384]" at="7"/>
  <insert-node tree="function: function [64390,64398]" parent="function_definition [64390,64993]" at="0"/>
  <insert-node tree="identifier: redeemCoupons [64399,64412]" parent="function_definition [64390,64993]" at="1"/>
  <insert-node tree="(: ( [64412,64413]" parent="function_definition [64390,64993]" at="2"/>
  <insert-tree tree="parameter [64413,64432]" parent="function_definition [64390,64993]" at="3"/>
  <insert-node tree=",: , [64432,64433]" parent="function_definition [64390,64993]" at="4"/>
  <insert-tree tree="parameter [64434,64454]" parent="function_definition [64390,64993]" at="5"/>
  <insert-node tree="): ) [64454,64455]" parent="function_definition [64390,64993]" at="6"/>
  <move-tree tree="visibility [69190,69198]" parent="function_definition [64390,64993]" at="7"/>
  <insert-node tree="function_body [64465,64993]" parent="function_definition [64390,64993]" at="8"/>
  <update-node tree="identifier: _approve [21815,21823]" label="approveCoupons"/>
  <move-tree tree="visibility [69095,69103]" parent="function_definition [64999,65279]" at="9"/>
  <update-node tree="identifier: _transfer [19693,19702]" label="transferCoupons"/>
  <move-tree tree="parameter [38271,38286]" parent="function_definition [65285,66001]" at="7"/>
  <insert-node tree=",: , [65358,65359]" parent="function_definition [65285,66001]" at="8"/>
  <move-tree tree="visibility [84961,84969]" parent="function_definition [65285,66001]" at="11"/>
  <insert-node tree="event: event [66798,66803]" parent="event_definition [66798,66917]" at="0"/>
  <insert-node tree="identifier: SupplyIncrease [66804,66818]" parent="event_definition [66798,66917]" at="1"/>
  <insert-node tree="(: ( [66818,66819]" parent="event_definition [66798,66917]" at="2"/>
  <insert-node tree="event_paramater [66819,66840]" parent="event_definition [66798,66917]" at="3"/>
  <insert-node tree=",: , [66840,66841]" parent="event_definition [66798,66917]" at="4"/>
  <insert-node tree="event_paramater [66842,66855]" parent="event_definition [66798,66917]" at="5"/>
  <insert-node tree=",: , [66855,66856]" parent="event_definition [66798,66917]" at="6"/>
  <insert-node tree="event_paramater [66857,66878]" parent="event_definition [66798,66917]" at="7"/>
  <insert-node tree=",: , [66878,66879]" parent="event_definition [66798,66917]" at="8"/>
  <insert-tree tree="event_paramater [66880,66896]" parent="event_definition [66798,66917]" at="9"/>
  <insert-node tree=",: , [66896,66897]" parent="event_definition [66798,66917]" at="10"/>
  <insert-tree tree="event_paramater [66898,66915]" parent="event_definition [66798,66917]" at="11"/>
  <insert-node tree="): ) [66915,66916]" parent="event_definition [66798,66917]" at="12"/>
  <insert-node tree="event: event [66922,66927]" parent="event_definition [66922,66998]" at="0"/>
  <insert-node tree="identifier: SupplyDecrease [66928,66942]" parent="event_definition [66922,66998]" at="1"/>
  <insert-node tree="(: ( [66942,66943]" parent="event_definition [66922,66998]" at="2"/>
  <insert-node tree="event_paramater [66943,66964]" parent="event_definition [66922,66998]" at="3"/>
  <insert-node tree=",: , [66964,66965]" parent="event_definition [66922,66998]" at="4"/>
  <insert-node tree="event_paramater [66966,66979]" parent="event_definition [66922,66998]" at="5"/>
  <insert-node tree=",: , [66979,66980]" parent="event_definition [66922,66998]" at="6"/>
  <insert-node tree="event_paramater [66981,66996]" parent="event_definition [66922,66998]" at="7"/>
  <insert-node tree="): ) [66996,66997]" parent="event_definition [66922,66998]" at="8"/>
  <insert-node tree="event: event [67003,67008]" parent="event_definition [67003,67046]" at="0"/>
  <insert-node tree="identifier: SupplyNeutral [67009,67022]" parent="event_definition [67003,67046]" at="1"/>
  <insert-node tree="(: ( [67022,67023]" parent="event_definition [67003,67046]" at="2"/>
  <insert-node tree="event_paramater [67023,67044]" parent="event_definition [67003,67046]" at="3"/>
  <insert-node tree="): ) [67044,67045]" parent="event_definition [67003,67046]" at="4"/>
  <insert-node tree="function: function [67052,67060]" parent="function_definition [67052,67394]" at="0"/>
  <insert-node tree="identifier: step [67061,67065]" parent="function_definition [67052,67394]" at="1"/>
  <insert-node tree="(: ( [67065,67066]" parent="function_definition [67052,67394]" at="2"/>
  <insert-node tree="): ) [67066,67067]" parent="function_definition [67052,67394]" at="3"/>
  <move-tree tree="visibility [68992,69000]" parent="function_definition [67052,67394]" at="4"/>
  <insert-node tree="function_body [67077,67394]" parent="function_definition [67052,67394]" at="5"/>
  <insert-node tree="function: function [67400,67408]" parent="function_definition [67400,67739]" at="0"/>
  <insert-node tree="identifier: shrinkSupply [67409,67421]" parent="function_definition [67400,67739]" at="1"/>
  <insert-node tree="(: ( [67421,67422]" parent="function_definition [67400,67739]" at="2"/>
  <insert-tree tree="parameter [67422,67447]" parent="function_definition [67400,67739]" at="3"/>
  <insert-node tree="): ) [67447,67448]" parent="function_definition [67400,67739]" at="4"/>
  <move-tree tree="visibility [65550,65557]" parent="function_definition [67400,67739]" at="5"/>
  <insert-node tree="function_body [67457,67739]" parent="function_definition [67400,67739]" at="6"/>
  <insert-node tree="function: function [67745,67753]" parent="function_definition [67745,68168]" at="0"/>
  <insert-node tree="identifier: growSupply [67754,67764]" parent="function_definition [67745,68168]" at="1"/>
  <insert-node tree="(: ( [67764,67765]" parent="function_definition [67745,68168]" at="2"/>
  <insert-tree tree="parameter [67765,67790]" parent="function_definition [67745,68168]" at="3"/>
  <insert-node tree="): ) [67790,67791]" parent="function_definition [67745,68168]" at="4"/>
  <move-tree tree="visibility [23257,23264]" parent="function_definition [67745,68168]" at="5"/>
  <move-tree tree="function_body [68143,68690]" parent="function_definition [67745,68168]" at="6"/>
  <update-node tree="identifier: balanceOfRewarded [73961,73978]" label="limit"/>
  <insert-tree tree="parameter [68189,68214]" parent="function_definition [68174,68734]" at="3"/>
  <insert-node tree=",: , [68214,68215]" parent="function_definition [68174,68734]" at="4"/>
  <insert-tree tree="parameter [68216,68241]" parent="function_definition [68174,68734]" at="5"/>
  <move-tree tree="visibility [78872,78879]" parent="function_definition [68174,68734]" at="8"/>
  <move-tree tree="state_mutability [64718,64722]" parent="function_definition [68174,68734]" at="9"/>
  <insert-tree tree="return_type_definition [68256,68285]" parent="function_definition [68174,68734]" at="9"/>
  <move-tree tree="variable_declaration_statement [74373,74426]" parent="function_body [68286,68734]" at="1"/>
  <update-node tree="identifier: updatePrice [68091,68102]" label="oracleCapture"/>
  <insert-node tree="function_body [68803,69154]" parent="function_definition [68740,69154]" at="6"/>
  <update-node tree="identifier: PoolSetters [80724,80735]" label="Setters"/>
  <update-node tree="identifier: Unbond [81288,81294]" label="Bond"/>
  <insert-node tree="event_paramater [71652,71675]" parent="event_definition [71586,71677]" at="9"/>
  <update-node tree="identifier: Bond [81217,81221]" label="Unbond"/>
  <insert-node tree=",: , [71748,71749]" parent="event_definition [71682,71775]" at="8"/>
  <insert-node tree="event_paramater [71750,71773]" parent="event_definition [71682,71775]" at="9"/>
  <insert-node tree="function: function [71781,71789]" parent="function_definition [71781,71991]" at="0"/>
  <insert-node tree="identifier: step [71790,71794]" parent="function_definition [71781,71991]" at="1"/>
  <insert-node tree="(: ( [71794,71795]" parent="function_definition [71781,71991]" at="2"/>
  <insert-node tree="): ) [71795,71796]" parent="function_definition [71781,71991]" at="3"/>
  <move-tree tree="visibility [22368,22376]" parent="function_definition [71781,71991]" at="4"/>
  <insert-node tree="function_body [71806,71991]" parent="function_definition [71781,71991]" at="5"/>
  <insert-tree tree="modifier_invocation [72283,72313]" parent="function_definition [72241,72502]" at="6"/>
  <move-tree tree="modifier_invocation [81785,81807]" parent="function_definition [73119,73677]" at="6"/>
  <insert-node tree="function: function [73683,73691]" parent="function_definition [73683,74231]" at="0"/>
  <insert-node tree="identifier: unbondUnderlying [73692,73708]" parent="function_definition [73683,74231]" at="1"/>
  <insert-node tree="(: ( [73708,73709]" parent="function_definition [73683,74231]" at="2"/>
  <move-tree tree="parameter [50185,50198]" parent="function_definition [73683,74231]" at="3"/>
  <insert-node tree="): ) [73722,73723]" parent="function_definition [73683,74231]" at="4"/>
  <move-tree tree="visibility [82054,82062]" parent="function_definition [73683,74231]" at="5"/>
  <move-tree tree="modifier_invocation [82063,82085]" parent="function_definition [73683,74231]" at="6"/>
  <insert-node tree="function_body [73763,74231]" parent="function_definition [73683,74231]" at="7"/>
  <insert-node tree="event: event [78956,78961]" parent="event_definition [78956,79062]" at="0"/>
  <insert-node tree="identifier: Proposal [78962,78970]" parent="event_definition [78956,79062]" at="1"/>
  <insert-node tree="(: ( [78970,78971]" parent="event_definition [78956,79062]" at="2"/>
  <insert-node tree="event_paramater [78971,78996]" parent="event_definition [78956,79062]" at="3"/>
  <insert-node tree=",: , [78996,78997]" parent="event_definition [78956,79062]" at="4"/>
  <insert-tree tree="event_paramater [78998,79021]" parent="event_definition [78956,79062]" at="5"/>
  <insert-node tree=",: , [79021,79022]" parent="event_definition [78956,79062]" at="6"/>
  <insert-node tree="event_paramater [79023,79044]" parent="event_definition [78956,79062]" at="7"/>
  <insert-node tree=",: , [79044,79045]" parent="event_definition [78956,79062]" at="8"/>
  <move-tree tree="event_paramater [81448,81464]" parent="event_definition [78956,79062]" at="9"/>
  <insert-node tree="): ) [79060,79061]" parent="event_definition [78956,79062]" at="10"/>
  <insert-node tree="event: event [79067,79072]" parent="event_definition [79067,79167]" at="0"/>
  <insert-node tree="identifier: Vote [79073,79077]" parent="event_definition [79067,79167]" at="1"/>
  <insert-node tree="(: ( [79077,79078]" parent="event_definition [79067,79167]" at="2"/>
  <insert-tree tree="event_paramater [79078,79101]" parent="event_definition [79067,79167]" at="3"/>
  <insert-node tree=",: , [79101,79102]" parent="event_definition [79067,79167]" at="4"/>
  <insert-node tree="event_paramater [79103,79128]" parent="event_definition [79067,79167]" at="5"/>
  <insert-node tree=",: , [79128,79129]" parent="event_definition [79067,79167]" at="6"/>
  <insert-tree tree="event_paramater [79130,79149]" parent="event_definition [79067,79167]" at="7"/>
  <insert-node tree=",: , [79149,79150]" parent="event_definition [79067,79167]" at="8"/>
  <move-tree tree="event_paramater [81350,81370]" parent="event_definition [79067,79167]" at="9"/>
  <insert-node tree="): ) [79165,79166]" parent="event_definition [79067,79167]" at="10"/>
  <update-node tree="identifier: Provide [81383,81390]" label="Commit"/>
  <insert-node tree="event_paramater [79210,79235]" parent="event_definition [79172,79237]" at="5"/>
  <insert-node tree="function: function [79243,79251]" parent="function_definition [79243,80817]" at="0"/>
  <insert-node tree="identifier: vote [79252,79256]" parent="function_definition [79243,80817]" at="1"/>
  <insert-node tree="(: ( [79256,79257]" parent="function_definition [79243,80817]" at="2"/>
  <move-tree tree="parameter [64691,64707]" parent="function_definition [79243,80817]" at="3"/>
  <insert-node tree=",: , [79274,79275]" parent="function_definition [79243,80817]" at="4"/>
  <insert-tree tree="parameter [79276,79295]" parent="function_definition [79243,80817]" at="5"/>
  <insert-node tree="): ) [79295,79296]" parent="function_definition [79243,80817]" at="6"/>
  <move-tree tree="visibility [64709,64717]" parent="function_definition [79243,80817]" at="7"/>
  <move-tree tree="modifier_invocation [81513,81535]" parent="function_definition [79243,80817]" at="8"/>
  <insert-node tree="function_body [79337,80817]" parent="function_definition [79243,80817]" at="9"/>
  <update-node tree="identifier: provide [83836,83843]" label="commit"/>
  <move-tree tree="parameter [79628,79642]" parent="function_definition [80823,81752]" at="3"/>
  <move-tree tree="expression_statement [84161,84299]" parent="function_body [80867,81752]" at="5"/>
  <insert-node tree="function: function [81758,81766]" parent="function_definition [81758,82513]" at="0"/>
  <insert-node tree="identifier: emergencyCommit [81767,81782]" parent="function_definition [81758,82513]" at="1"/>
  <insert-node tree="(: ( [81782,81783]" parent="function_definition [81758,82513]" at="2"/>
  <move-tree tree="parameter [79644,79658]" parent="function_definition [81758,82513]" at="3"/>
  <insert-node tree="): ) [81800,81801]" parent="function_definition [81758,82513]" at="4"/>
  <move-tree tree="visibility [70132,70140]" parent="function_definition [81758,82513]" at="5"/>
  <insert-node tree="function_body [81811,82513]" parent="function_definition [81758,82513]" at="6"/>
  <insert-node tree="function: function [82519,82527]" parent="function_definition [82519,82826]" at="0"/>
  <insert-node tree="identifier: canPropose [82528,82538]" parent="function_definition [82519,82826]" at="1"/>
  <insert-node tree="(: ( [82538,82539]" parent="function_definition [82519,82826]" at="2"/>
  <move-tree tree="parameter [73437,73452]" parent="function_definition [82519,82826]" at="3"/>
  <insert-node tree="): ) [82554,82555]" parent="function_definition [82519,82826]" at="4"/>
  <move-tree tree="visibility [66933,66940]" parent="function_definition [82519,82826]" at="5"/>
  <move-tree tree="state_mutability [73317,73321]" parent="function_definition [82519,82826]" at="6"/>
  <move-tree tree="return_type_definition [73322,73336]" parent="function_definition [82519,82826]" at="7"/>
  <insert-node tree="function_body [82584,82826]" parent="function_definition [82519,82826]" at="8"/>
  <insert-node tree="event: event [83622,83627]" parent="event_definition [83622,83693]" at="0"/>
  <insert-node tree="identifier: Advance [83628,83635]" parent="event_definition [83622,83693]" at="1"/>
  <insert-node tree="(: ( [83635,83636]" parent="event_definition [83622,83693]" at="2"/>
  <insert-node tree="event_paramater [83636,83657]" parent="event_definition [83622,83693]" at="3"/>
  <insert-node tree=",: , [83657,83658]" parent="event_definition [83622,83693]" at="4"/>
  <insert-node tree="event_paramater [83659,83672]" parent="event_definition [83622,83693]" at="5"/>
  <insert-node tree=",: , [83672,83673]" parent="event_definition [83622,83693]" at="6"/>
  <insert-node tree="event_paramater [83674,83691]" parent="event_definition [83622,83693]" at="7"/>
  <insert-node tree="): ) [83691,83692]" parent="event_definition [83622,83693]" at="8"/>
  <update-node tree="identifier: Claim [81160,81165]" label="Incentivization"/>
  <move-tree tree="event_paramater [81431,81446]" parent="event_definition [83698,83761]" at="5"/>
  <insert-node tree="function: function [83767,83775]" parent="function_definition [83767,83947]" at="0"/>
  <insert-node tree="identifier: initialize [83776,83786]" parent="function_definition [83767,83947]" at="1"/>
  <insert-node tree="(: ( [83786,83787]" parent="function_definition [83767,83947]" at="2"/>
  <insert-node tree="): ) [83787,83788]" parent="function_definition [83767,83947]" at="3"/>
  <move-tree tree="modifier_invocation [108091,108102]" parent="function_definition [83767,83947]" at="4"/>
  <move-tree tree="visibility [72459,72465]" parent="function_definition [83767,83947]" at="5"/>
  <insert-node tree="function_body [83808,83947]" parent="function_definition [83767,83947]" at="6"/>
  <insert-node tree="function: function [83953,83961]" parent="function_definition [83953,84278]" at="0"/>
  <insert-node tree="identifier: advance [83962,83969]" parent="function_definition [83953,84278]" at="1"/>
  <insert-node tree="(: ( [83969,83970]" parent="function_definition [83953,84278]" at="2"/>
  <insert-node tree="): ) [83970,83971]" parent="function_definition [83953,84278]" at="3"/>
  <move-tree tree="visibility [84850,84858]" parent="function_definition [83953,84278]" at="4"/>
  <insert-node tree="function_body [83981,84278]" parent="function_definition [83953,84278]" at="5"/>
  <insert-node tree="function: function [84284,84292]" parent="function_definition [84284,84440]" at="0"/>
  <insert-node tree="identifier: incentivize [84293,84304]" parent="function_definition [84284,84440]" at="1"/>
  <insert-node tree="(: ( [84304,84305]" parent="function_definition [84284,84440]" at="2"/>
  <move-tree tree="parameter [76130,76145]" parent="function_definition [84284,84440]" at="3"/>
  <insert-node tree=",: , [84320,84321]" parent="function_definition [84284,84440]" at="4"/>
  <move-tree tree="parameter [76147,76161]" parent="function_definition [84284,84440]" at="5"/>
  <insert-node tree="): ) [84336,84337]" parent="function_definition [84284,84440]" at="6"/>
  <move-tree tree="visibility [68721,68728]" parent="function_definition [84284,84440]" at="7"/>
  <insert-node tree="function_body [84346,84440]" parent="function_definition [84284,84440]" at="8"/>
  <move-tree tree="type_name [15817,15824]" parent="parameter [19760,19779]" at="0"/>
  <insert-node tree="identifier: totalSupply [19768,19779]" parent="parameter [19760,19779]" at="1"/>
  <move-tree tree="type_name [15890,15897]" parent="parameter [19789,19806]" at="0"/>
  <insert-node tree="identifier: totalDebt [19797,19806]" parent="parameter [19789,19806]" at="1"/>
  <insert-node tree="{: { [19869,19870]" parent="function_body [19869,19965]" at="0"/>
  <insert-node tree="return_statement [19879,19959]" parent="function_body [19869,19965]" at="1"/>
  <insert-node tree="}: } [19964,19965]" parent="function_body [19869,19965]" at="2"/>
  <update-node tree="identifier: subtractedValue [19004,19019]" label="totalSupply"/>
  <update-node tree="identifier: addedValue [18310,18320]" label="totalDebt"/>
  <insert-node tree="{: { [20126,20127]" parent="function_body [20126,21248]" at="0"/>
  <insert-tree tree="variable_declaration_statement [20136,20206]" parent="function_body [20126,21248]" at="1"/>
  <insert-tree tree="variable_declaration_statement [20215,20285]" parent="function_body [20126,21248]" at="2"/>
  <insert-node tree="variable_declaration_statement [20295,20344]" parent="function_body [20126,21248]" at="3"/>
  <insert-node tree="variable_declaration_statement [20353,20398]" parent="function_body [20126,21248]" at="4"/>
  <insert-tree tree="variable_declaration_statement [20407,20486]" parent="function_body [20126,21248]" at="5"/>
  <insert-tree tree="if_statement [20496,21190]" parent="function_body [20126,21248]" at="6"/>
  <insert-tree tree="return_statement [21200,21242]" parent="function_body [20126,21248]" at="7"/>
  <insert-node tree="}: } [21247,21248]" parent="function_body [20126,21248]" at="8"/>
  <insert-node tree="identifier: debtRatio [21310,21319]" parent="parameter [21290,21319]" at="2"/>
  <insert-node tree="identifier: lower [21564,21569]" parent="parameter [21544,21569]" at="2"/>
  <insert-node tree="if_statement [56218,56294]" parent="function_body [56169,56325]" at="2"/>
  <insert-tree tree="expression_statement [56304,56319]" parent="function_body [56169,56325]" at="3"/>
  <insert-node tree="expression_statement [56470,56491]" parent="function_body [56398,56602]" at="2"/>
  <insert-node tree="expression_statement [56500,56571]" parent="function_body [56398,56602]" at="3"/>
  <insert-tree tree="expression_statement [56581,56596]" parent="function_body [56398,56602]" at="4"/>
  <insert-node tree="expression_statement [56728,56807]" parent="function_body [56675,56838]" at="2"/>
  <move-tree tree="expression_statement [84705,84720]" parent="function_body [56675,56838]" at="3"/>
  <move-tree tree="expression_statement [82884,82899]" parent="function_body [56893,57043]" at="4"/>
  <insert-node tree="{: { [57114,57115]" parent="function_body [57114,57311]" at="0"/>
  <insert-node tree="expression_statement [57124,57151]" parent="function_body [57114,57311]" at="1"/>
  <insert-tree tree="variable_declaration_statement [57160,57218]" parent="function_body [57114,57311]" at="2"/>
  <move-tree tree="expression_statement [81954,81969]" parent="function_body [57114,57311]" at="3"/>
  <insert-tree tree="return_statement [57253,57305]" parent="function_body [57114,57311]" at="4"/>
  <insert-node tree="}: } [57310,57311]" parent="function_body [57114,57311]" at="5"/>
  <insert-node tree="{: { [57364,57365]" parent="function_body [57364,57464]" at="0"/>
  <move-tree tree="expression_statement [19935,20027]" parent="function_body [57364,57464]" at="1"/>
  <move-tree tree="expression_statement [81674,81689]" parent="function_body [57364,57464]" at="2"/>
  <insert-node tree="}: } [57463,57464]" parent="function_body [57364,57464]" at="3"/>
  <update-node tree="identifier: deadline [50216,50224]" label="newSupply"/>
  <insert-node tree="{: { [57549,57550]" parent="function_body [57549,58730]" at="0"/>
  <insert-node tree="comment: // 0-a. Pay out to Pool [57559,57582]" parent="function_body [57549,58730]" at="1"/>
  <insert-tree tree="variable_declaration_statement [57591,57667]" parent="function_body [57549,58730]" at="2"/>
  <insert-tree tree="expression_statement [57676,57699]" parent="function_body [57549,58730]" at="3"/>
  <insert-node tree="comment: // 0-b. Pay out to Treasury [57709,57736]" parent="function_body [57549,58730]" at="4"/>
  <insert-tree tree="variable_declaration_statement [57745,57825]" parent="function_body [57549,58730]" at="5"/>
  <insert-tree tree="expression_statement [57834,57865]" parent="function_body [57549,58730]" at="6"/>
  <insert-tree tree="variable_declaration_statement [57875,57924]" parent="function_body [57549,58730]" at="7"/>
  <insert-tree tree="expression_statement [57933,57994]" parent="function_body [57549,58730]" at="8"/>
  <insert-node tree="comment: // 1. True up redeemable pool [58004,58033]" parent="function_body [57549,58730]" at="9"/>
  <insert-tree tree="variable_declaration_statement [58042,58068]" parent="function_body [57549,58730]" at="10"/>
  <insert-tree tree="variable_declaration_statement [58077,58121]" parent="function_body [57549,58730]" at="11"/>
  <insert-tree tree="variable_declaration_statement [58130,58168]" parent="function_body [57549,58730]" at="12"/>
  <insert-tree tree="if_statement [58177,58469]" parent="function_body [57549,58730]" at="13"/>
  <insert-node tree="comment: // 2. Payout to DAO [58479,58498]" parent="function_body [57549,58730]" at="14"/>
  <insert-tree tree="if_statement [58507,58569]" parent="function_body [57549,58730]" at="15"/>
  <insert-tree tree="if_statement [58578,58642]" parent="function_body [57549,58730]" at="16"/>
  <move-tree tree="expression_statement [83729,83744]" parent="function_body [57549,58730]" at="17"/>
  <insert-tree tree="return_statement [58677,58724]" parent="function_body [57549,58730]" at="18"/>
  <insert-node tree="}: } [58729,58730]" parent="function_body [57549,58730]" at="19"/>
  <insert-node tree="{: { [58819,58820]" parent="function_body [58819,59150]" at="0"/>
  <insert-node tree="variable_declaration_statement [58829,58905]" parent="function_body [58819,59150]" at="1"/>
  <insert-tree tree="variable_declaration_statement [58914,58948]" parent="function_body [58819,59150]" at="2"/>
  <insert-tree tree="if_statement [58958,59125]" parent="function_body [58819,59150]" at="3"/>
  <move-tree tree="return_statement [74579,74588]" parent="function_body [58819,59150]" at="4"/>
  <insert-node tree="}: } [59149,59150]" parent="function_body [58819,59150]" at="5"/>
  <move-tree tree="expression_statement [85050,85217]" parent="function_body [59188,59387]" at="1"/>
  <insert-node tree="if_statement [59446,59564]" parent="function_body [59436,59570]" at="1"/>
  <insert-node tree="{: { [59620,59621]" parent="function_body [59620,59705]" at="0"/>
  <insert-node tree="if_statement [59630,59699]" parent="function_body [59620,59705]" at="1"/>
  <insert-node tree="}: } [59704,59705]" parent="function_body [59620,59705]" at="2"/>
  <insert-node tree="{: { [59759,59760]" parent="function_body [59759,59868]" at="0"/>
  <insert-node tree="if_statement [59769,59862]" parent="function_body [59759,59868]" at="1"/>
  <insert-node tree="}: } [59867,59868]" parent="function_body [59759,59868]" at="2"/>
  <insert-node tree="{: { [59924,59925]" parent="function_body [59924,60043]" at="0"/>
  <insert-node tree="expression_statement [59934,59970]" parent="function_body [59924,60043]" at="1"/>
  <insert-node tree="expression_statement [59979,60012]" parent="function_body [59924,60043]" at="2"/>
  <move-tree tree="expression_statement [82238,82253]" parent="function_body [59924,60043]" at="3"/>
  <insert-node tree="}: } [60042,60043]" parent="function_body [59924,60043]" at="4"/>
  <move-tree tree="type_name [49931,49938]" parent="event_paramater [60878,60899]" at="0"/>
  <insert-node tree="indexed: indexed [60886,60893]" parent="event_paramater [60878,60899]" at="1"/>
  <insert-node tree="identifier: epoch [60894,60899]" parent="event_paramater [60878,60899]" at="2"/>
  <update-node tree="identifier: token0 [53460,53466]" label="from"/>
  <update-node tree="identifier: token1 [53484,53490]" label="to"/>
  <insert-node tree="indexed: indexed [61370,61377]" parent="event_paramater [61362,61383]" at="1"/>
  <insert-node tree="identifier: epoch [61378,61383]" parent="event_paramater [61362,61383]" at="2"/>
  <move-tree tree="type_name [78864,78871]" parent="event_paramater [61426,61447]" at="0"/>
  <insert-node tree="indexed: indexed [61434,61441]" parent="event_paramater [61426,61447]" at="1"/>
  <insert-node tree="identifier: owner [61442,61447]" parent="event_paramater [61426,61447]" at="2"/>
  <insert-node tree="indexed: indexed [61457,61464]" parent="event_paramater [61449,61472]" at="1"/>
  <update-node tree="identifier: pair [53500,53504]" label="spender"/>
  <insert-node tree="comment: // Expire prior coupons [61530,61553]" parent="function_body [61520,61902]" at="1"/>
  <insert-tree tree="for_statement [61562,61699]" parent="function_body [61520,61902]" at="2"/>
  <insert-node tree="comment: // Record expiry for current epoch's coupons [61709,61753]" parent="function_body [61520,61902]" at="3"/>
  <insert-node tree="variable_declaration_statement [61762,61833]" parent="function_body [61520,61902]" at="4"/>
  <insert-node tree="{: { [61962,61963]" parent="function_body [61962,62548]" at="0"/>
  <insert-tree tree="variable_declaration_statement [61972,62024]" parent="function_body [61962,62548]" at="1"/>
  <move-tree tree="variable_declaration_statement [84309,84367]" parent="function_body [61962,62548]" at="2"/>
  <insert-tree tree="expression_statement [62096,62131]" parent="function_body [61962,62548]" at="3"/>
  <insert-node tree="variable_declaration_statement [62141,62185]" parent="function_body [61962,62548]" at="4"/>
  <insert-node tree="variable_declaration_statement [62194,62232]" parent="function_body [61962,62548]" at="5"/>
  <insert-tree tree="if_statement [62241,62456]" parent="function_body [61962,62548]" at="6"/>
  <insert-node tree="emit_statement [62466,62542]" parent="function_body [61962,62548]" at="7"/>
  <insert-node tree="}: } [62547,62548]" parent="function_body [61962,62548]" at="8"/>
  <insert-node tree="{: { [62825,62826]" parent="function_body [62825,63722]" at="0"/>
  <insert-node tree="variable_declaration_statement [62835,62910]" parent="function_body [62825,63722]" at="1"/>
  <insert-node tree="variable_declaration_statement [62919,62958]" parent="function_body [62825,63722]" at="2"/>
  <insert-node tree="variable_declaration_statement [62968,63119]" parent="function_body [62825,63722]" at="3"/>
  <move-tree tree="if_statement [74081,74136]" parent="function_body [62825,63722]" at="4"/>
  <insert-tree tree="variable_declaration_statement [63209,63436]" parent="function_body [62825,63722]" at="5"/>
  <insert-tree tree="variable_declaration_statement [63446,63626]" parent="function_body [62825,63722]" at="6"/>
  <insert-tree tree="return_statement [63636,63716]" parent="function_body [62825,63722]" at="7"/>
  <insert-node tree="}: } [63721,63722]" parent="function_body [62825,63722]" at="8"/>
  <insert-node tree="{: { [63797,63798]" parent="function_body [63797,64384]" at="0"/>
  <move-tree tree="expression_statement [21891,21960]" parent="function_body [63797,64384]" at="1"/>
  <move-tree tree="expression_statement [50682,50788]" parent="function_body [63797,64384]" at="2"/>
  <insert-node tree="variable_declaration_statement [64054,64078]" parent="function_body [63797,64384]" at="3"/>
  <insert-node tree="variable_declaration_statement [64087,64154]" parent="function_body [63797,64384]" at="4"/>
  <move-tree tree="expression_statement [80845,80884]" parent="function_body [63797,64384]" at="5"/>
  <move-tree tree="expression_statement [84623,84694]" parent="function_body [63797,64384]" at="6"/>
  <insert-tree tree="emit_statement [64282,64348]" parent="function_body [63797,64384]" at="7"/>
  <insert-tree tree="return_statement [64358,64378]" parent="function_body [63797,64384]" at="8"/>
  <insert-node tree="}: } [64383,64384]" parent="function_body [63797,64384]" at="9"/>
  <insert-node tree="{: { [64465,64466]" parent="function_body [64465,64993]" at="0"/>
  <insert-node tree="expression_statement [64475,64545]" parent="function_body [64465,64993]" at="1"/>
  <move-tree tree="expression_statement [21106,21174]" parent="function_body [64465,64993]" at="2"/>
  <insert-node tree="variable_declaration_statement [64667,64736]" parent="function_body [64465,64993]" at="3"/>
  <insert-node tree="variable_declaration_statement [64745,64794]" parent="function_body [64465,64993]" at="4"/>
  <insert-tree tree="expression_statement [64804,64846]" parent="function_body [64465,64993]" at="5"/>
  <insert-tree tree="emit_statement [64864,64917]" parent="function_body [64465,64993]" at="6"/>
  <insert-tree tree="emit_statement [64926,64987]" parent="function_body [64465,64993]" at="7"/>
  <insert-node tree="}: } [64992,64993]" parent="function_body [64465,64993]" at="8"/>
  <update-node tree="identifier: chainId [38279,38286]" label="epoch"/>
  <move-tree tree="expression_statement [50914,51007]" parent="function_body [65385,66001]" at="3"/>
  <insert-node tree="expression_statement [65670,65722]" parent="function_body [65385,66001]" at="4"/>
  <move-tree tree="if_statement [53116,53361]" parent="function_body [65385,66001]" at="5"/>
  <move-tree tree="type_name [70973,70980]" parent="event_paramater [66819,66840]" at="0"/>
  <insert-node tree="indexed: indexed [66827,66834]" parent="event_paramater [66819,66840]" at="1"/>
  <insert-node tree="identifier: epoch [66835,66840]" parent="event_paramater [66819,66840]" at="2"/>
  <move-tree tree="type_name [71024,71031]" parent="event_paramater [66842,66855]" at="0"/>
  <insert-node tree="identifier: price [66850,66855]" parent="event_paramater [66842,66855]" at="1"/>
  <move-tree tree="type_name [71320,71327]" parent="event_paramater [66857,66878]" at="0"/>
  <insert-node tree="identifier: newRedeemable [66865,66878]" parent="event_paramater [66857,66878]" at="1"/>
  <move-tree tree="type_name [71245,71252]" parent="event_paramater [66943,66964]" at="0"/>
  <insert-node tree="indexed: indexed [66951,66958]" parent="event_paramater [66943,66964]" at="1"/>
  <insert-node tree="identifier: epoch [66959,66964]" parent="event_paramater [66943,66964]" at="2"/>
  <move-tree tree="type_name [70997,71004]" parent="event_paramater [66966,66979]" at="0"/>
  <insert-node tree="identifier: price [66974,66979]" parent="event_paramater [66966,66979]" at="1"/>
  <move-tree tree="type_name [71296,71303]" parent="event_paramater [66981,66996]" at="0"/>
  <insert-node tree="identifier: newDebt [66989,66996]" parent="event_paramater [66981,66996]" at="1"/>
  <move-tree tree="type_name [71269,71276]" parent="event_paramater [67023,67044]" at="0"/>
  <insert-node tree="indexed: indexed [67031,67038]" parent="event_paramater [67023,67044]" at="1"/>
  <insert-node tree="identifier: epoch [67039,67044]" parent="event_paramater [67023,67044]" at="2"/>
  <insert-node tree="{: { [67077,67078]" parent="function_body [67077,67394]" at="0"/>
  <move-tree tree="variable_declaration_statement [67580,67622]" parent="function_body [67077,67394]" at="1"/>
  <insert-tree tree="if_statement [67141,67241]" parent="function_body [67077,67394]" at="2"/>
  <insert-tree tree="if_statement [67251,67350]" parent="function_body [67077,67394]" at="3"/>
  <insert-tree tree="emit_statement [67360,67388]" parent="function_body [67077,67394]" at="4"/>
  <insert-node tree="}: } [67393,67394]" parent="function_body [67077,67394]" at="5"/>
  <insert-node tree="{: { [67457,67458]" parent="function_body [67457,67739]" at="0"/>
  <insert-tree tree="variable_declaration_statement [67467,67534]" parent="function_body [67457,67739]" at="1"/>
  <insert-node tree="variable_declaration_statement [67543,67595]" parent="function_body [67457,67739]" at="2"/>
  <insert-node tree="variable_declaration_statement [67604,67650]" parent="function_body [67457,67739]" at="3"/>
  <insert-tree tree="emit_statement [67660,67717]" parent="function_body [67457,67739]" at="4"/>
  <insert-tree tree="return_statement [67726,67733]" parent="function_body [67457,67739]" at="5"/>
  <insert-node tree="}: } [67738,67739]" parent="function_body [67457,67739]" at="6"/>
  <move-tree tree="variable_declaration_statement [82394,82465]" parent="function_body [67800,68168]" at="1"/>
  <insert-tree tree="variable_declaration_statement [67865,67932]" parent="function_body [67800,68168]" at="2"/>
  <insert-node tree="variable_declaration_statement [67941,67995]" parent="function_body [67800,68168]" at="3"/>
  <insert-tree tree="emit_statement [68084,68162]" parent="function_body [67800,68168]" at="5"/>
  <insert-tree tree="return_statement [68655,68727]" parent="function_body [68286,68734]" at="5"/>
  <insert-node tree="{: { [68803,68804]" parent="function_body [68803,69154]" at="0"/>
  <move-tree tree="variable_declaration_statement [68477,68574]" parent="function_body [68803,69154]" at="1"/>
  <insert-tree tree="if_statement [68884,68986]" parent="function_body [68803,69154]" at="2"/>
  <move-tree tree="if_statement [66737,66893]" parent="function_body [68803,69154]" at="3"/>
  <insert-node tree="return_statement [69070,69100]" parent="function_body [68803,69154]" at="4"/>
  <insert-node tree="comment: // Note: Price comes in x 1e12, normalize here [69102,69148]" parent="function_body [68803,69154]" at="5"/>
  <insert-node tree="}: } [69153,69154]" parent="function_body [68803,69154]" at="6"/>
  <move-tree tree="type_name [71073,71080]" parent="event_paramater [71652,71675]" at="0"/>
  <insert-node tree="identifier: valueUnderlying [71660,71675]" parent="event_paramater [71652,71675]" at="1"/>
  <move-tree tree="type_name [71048,71055]" parent="event_paramater [71750,71773]" at="0"/>
  <insert-node tree="identifier: valueUnderlying [71758,71773]" parent="event_paramater [71750,71773]" at="1"/>
  <insert-node tree="{: { [71806,71807]" parent="function_body [71806,71991]" at="0"/>
  <insert-node tree="expression_statement [71816,71927]" parent="function_body [71806,71991]" at="1"/>
  <insert-tree tree="expression_statement [71937,71959]" parent="function_body [71806,71991]" at="2"/>
  <insert-tree tree="expression_statement [71968,71985]" parent="function_body [71806,71991]" at="3"/>
  <insert-node tree="}: } [71990,71991]" parent="function_body [71806,71991]" at="4"/>
  <update-node tree="identifier: notPaused [81536,81545]" label="onlyFrozenOrLocked"/>
  <insert-node tree="(: ( [72056,72057]" parent="modifier_invocation [72038,72068]" at="1"/>
  <insert-tree tree="call_argument [72057,72067]" parent="modifier_invocation [72038,72068]" at="2"/>
  <insert-node tree="): ) [72067,72068]" parent="modifier_invocation [72038,72068]" at="3"/>
  <move-tree tree="expression_statement [82096,82132]" parent="function_body [72314,72502]" at="1"/>
  <update-node tree="identifier: notPaused [82343,82352]" label="onlyFrozenOrFluid"/>
  <insert-node tree="(: ( [72563,72564]" parent="modifier_invocation [72546,72575]" at="1"/>
  <move-tree tree="call_argument [83879,83889]" parent="modifier_invocation [72546,72575]" at="2"/>
  <insert-node tree="): ) [72574,72575]" parent="modifier_invocation [72546,72575]" at="3"/>
  <move-tree tree="expression_statement [83016,83037]" parent="function_body [72576,73113]" at="1"/>
  <insert-node tree="comment: // Use individual DAO entrance lockups per address [72648,72698]" parent="function_body [72576,73113]" at="2"/>
  <move-tree tree="expression_statement [84567,84614]" parent="function_body [72576,73113]" at="5"/>
  <insert-node tree="expression_statement [72922,72950]" parent="function_body [72576,73113]" at="5"/>
  <insert-node tree="emit_statement [73053,73107]" parent="function_body [72576,73113]" at="7"/>
  <update-node tree="identifier: onlyFrozen [81785,81795]" label="onlyFrozenOrFluid"/>
  <move-tree tree="expression_statement [82363,82384]" parent="function_body [73189,73677]" at="1"/>
  <insert-node tree="comment: // Use individual DAO exit lockups per address [73257,73303]" parent="function_body [73189,73677]" at="2"/>
  <move-tree tree="expression_statement [82681,82725]" parent="function_body [73189,73677]" at="4"/>
  <move-tree tree="expression_statement [69289,69385]" parent="function_body [73189,73677]" at="10"/>
  <update-node tree="identifier: onlyFrozen [82063,82073]" label="onlyFrozenOrFluid"/>
  <insert-node tree="{: { [73763,73764]" parent="function_body [73763,74231]" at="0"/>
  <move-tree tree="expression_statement [82141,82228]" parent="function_body [73763,74231]" at="1"/>
  <insert-node tree="comment: // Use individual DAO exit lockups per address [73831,73877]" parent="function_body [73763,74231]" at="2"/>
  <move-tree tree="variable_declaration_statement [84468,84557]" parent="function_body [73763,74231]" at="3"/>
  <move-tree tree="expression_statement [83424,83468]" parent="function_body [73763,74231]" at="4"/>
  <insert-node tree="expression_statement [74011,74077]" parent="function_body [73763,74231]" at="5"/>
  <move-tree tree="expression_statement [58617,58669]" parent="function_body [73763,74231]" at="6"/>
  <move-tree tree="emit_statement [82909,82954]" parent="function_body [73763,74231]" at="7"/>
  <insert-node tree="}: } [74230,74231]" parent="function_body [73763,74231]" at="8"/>
  <move-tree tree="type_name [65542,65549]" parent="event_paramater [78971,78996]" at="0"/>
  <insert-node tree="indexed: indexed [78979,78986]" parent="event_paramater [78971,78996]" at="1"/>
  <insert-node tree="identifier: candidate [78987,78996]" parent="event_paramater [78971,78996]" at="2"/>
  <move-tree tree="type_name [65863,65870]" parent="event_paramater [79023,79044]" at="0"/>
  <insert-node tree="indexed: indexed [79031,79038]" parent="event_paramater [79023,79044]" at="1"/>
  <insert-node tree="identifier: start [79039,79044]" parent="event_paramater [79023,79044]" at="2"/>
  <update-node tree="identifier: newUniv2 [81456,81464]" label="period"/>
  <move-tree tree="type_name [65670,65677]" parent="event_paramater [79103,79128]" at="0"/>
  <insert-node tree="indexed: indexed [79111,79118]" parent="event_paramater [79103,79128]" at="1"/>
  <insert-node tree="identifier: candidate [79119,79128]" parent="event_paramater [79103,79128]" at="2"/>
  <update-node tree="identifier: newClaimable [81358,81370]" label="bonded"/>
  <move-tree tree="type_name [65643,65650]" parent="event_paramater [79210,79235]" at="0"/>
  <insert-node tree="indexed: indexed [79218,79225]" parent="event_paramater [79210,79235]" at="1"/>
  <insert-node tree="identifier: candidate [79226,79235]" parent="event_paramater [79210,79235]" at="2"/>
  <update-node tree="identifier: _account [64699,64707]" label="candidate"/>
  <update-node tree="identifier: onlyFrozen [81513,81523]" label="onlyFrozenOrLocked"/>
  <insert-node tree="{: { [79337,79338]" parent="function_body [79337,80817]" at="0"/>
  <move-tree tree="expression_statement [85456,85562]" parent="function_body [79337,80817]" at="1"/>
  <insert-node tree="if_statement [79468,79823]" parent="function_body [79337,80817]" at="2"/>
  <move-tree tree="expression_statement [85617,85703]" parent="function_body [79337,80817]" at="3"/>
  <move-tree tree="variable_declaration_statement [83237,83322]" parent="function_body [79337,80817]" at="4"/>
  <insert-tree tree="variable_declaration_statement [80022,80088]" parent="function_body [79337,80817]" at="5"/>
  <insert-tree tree="if_statement [80097,80154]" parent="function_body [79337,80817]" at="6"/>
  <insert-node tree="if_statement [80164,80300]" parent="function_body [79337,80817]" at="7"/>
  <insert-node tree="if_statement [80309,80448]" parent="function_body [79337,80817]" at="8"/>
  <insert-tree tree="if_statement [80457,80554]" parent="function_body [79337,80817]" at="9"/>
  <insert-tree tree="if_statement [80563,80662]" parent="function_body [79337,80817]" at="10"/>
  <move-tree tree="expression_statement [83630,83719]" parent="function_body [79337,80817]" at="11"/>
  <move-tree tree="expression_statement [83540,83621]" parent="function_body [79337,80817]" at="12"/>
  <insert-tree tree="emit_statement [80764,80811]" parent="function_body [79337,80817]" at="13"/>
  <insert-node tree="}: } [80816,80817]" parent="function_body [79337,80817]" at="14"/>
  <update-node tree="identifier: tokenA [79636,79642]" label="candidate"/>
  <move-tree tree="expression_statement [85276,85403]" parent="function_body [80867,81752]" at="5"/>
  <insert-node tree="expression_statement [81341,81533]" parent="function_body [80867,81752]" at="5"/>
  <insert-node tree="expression_statement [81543,81670]" parent="function_body [80867,81752]" at="6"/>
  <insert-tree tree="expression_statement [81680,81701]" parent="function_body [80867,81752]" at="7"/>
  <update-node tree="identifier: tokenB [79652,79658]" label="candidate"/>
  <insert-node tree="{: { [81811,81812]" parent="function_body [81811,82513]" at="0"/>
  <move-tree tree="expression_statement [83911,84024]" parent="function_body [81811,82513]" at="1"/>
  <insert-node tree="expression_statement [81937,82086]" parent="function_body [81811,82513]" at="2"/>
  <move-tree tree="expression_statement [83110,83227]" parent="function_body [81811,82513]" at="3"/>
  <move-tree tree="expression_statement [66252,66369]" parent="function_body [81811,82513]" at="4"/>
  <insert-tree tree="expression_statement [82441,82462]" parent="function_body [81811,82513]" at="5"/>
  <move-tree tree="emit_statement [82263,82293]" parent="function_body [81811,82513]" at="6"/>
  <insert-node tree="}: } [82512,82513]" parent="function_body [81811,82513]" at="7"/>
  <insert-node tree="{: { [82584,82585]" parent="function_body [82584,82826]" at="0"/>
  <insert-node tree="if_statement [82594,82655]" parent="function_body [82584,82826]" at="1"/>
  <move-tree tree="variable_declaration_statement [74226,74363]" parent="function_body [82584,82826]" at="2"/>
  <insert-tree tree="return_statement [82751,82820]" parent="function_body [82584,82826]" at="3"/>
  <insert-node tree="}: } [82825,82826]" parent="function_body [82584,82826]" at="4"/>
  <move-tree tree="type_name [15926,15933]" parent="event_paramater [83636,83657]" at="0"/>
  <insert-node tree="indexed: indexed [83644,83651]" parent="event_paramater [83636,83657]" at="1"/>
  <insert-node tree="identifier: epoch [83652,83657]" parent="event_paramater [83636,83657]" at="2"/>
  <move-tree tree="type_name [65796,65803]" parent="event_paramater [83659,83672]" at="0"/>
  <insert-node tree="identifier: block [83667,83672]" parent="event_paramater [83659,83672]" at="1"/>
  <move-tree tree="type_name [65767,65774]" parent="event_paramater [83674,83691]" at="0"/>
  <insert-node tree="identifier: timestamp [83682,83691]" parent="event_paramater [83674,83691]" at="1"/>
  <update-node tree="identifier: lessDai [81439,81446]" label="amount"/>
  <insert-node tree="{: { [83808,83809]" parent="function_body [83808,83947]" at="0"/>
  <insert-node tree="comment: // Create Initial Liquidity Pool for Committer [83818,83864]" parent="function_body [83808,83947]" at="1"/>
  <move-tree tree="expression_statement [79440,79494]" parent="function_body [83808,83947]" at="2"/>
  <insert-node tree="}: } [83946,83947]" parent="function_body [83808,83947]" at="3"/>
  <insert-node tree="{: { [83981,83982]" parent="function_body [83981,84278]" at="0"/>
  <move-tree tree="expression_statement [81818,81854]" parent="function_body [83981,84278]" at="1"/>
  <insert-tree tree="expression_statement [84057,84135]" parent="function_body [83981,84278]" at="2"/>
  <insert-tree tree="expression_statement [84145,84160]" parent="function_body [83981,84278]" at="3"/>
  <insert-tree tree="expression_statement [84169,84186]" parent="function_body [83981,84278]" at="4"/>
  <insert-tree tree="expression_statement [84195,84209]" parent="function_body [83981,84278]" at="5"/>
  <insert-node tree="emit_statement [84219,84272]" parent="function_body [83981,84278]" at="6"/>
  <insert-node tree="}: } [84277,84278]" parent="function_body [83981,84278]" at="7"/>
  <insert-node tree="{: { [84346,84347]" parent="function_body [84346,84440]" at="0"/>
  <insert-node tree="expression_statement [84356,84387]" parent="function_body [84346,84440]" at="1"/>
  <insert-node tree="emit_statement [84396,84434]" parent="function_body [84346,84440]" at="2"/>
  <insert-node tree="}: } [84439,84440]" parent="function_body [84346,84440]" at="3"/>
  <insert-node tree="return: return [19879,19885]" parent="return_statement [19879,19959]" at="0"/>
  <insert-node tree="call_expression [19886,19958]" parent="return_statement [19879,19959]" at="1"/>
  <insert-tree tree="variable_declaration [20295,20317]" parent="variable_declaration_statement [20295,20344]" at="0"/>
  <insert-node tree="=: = [20318,20319]" parent="variable_declaration_statement [20295,20344]" at="1"/>
  <insert-node tree="call_expression [20320,20343]" parent="variable_declaration_statement [20295,20344]" at="2"/>
  <insert-tree tree="variable_declaration [20353,20373]" parent="variable_declaration_statement [20353,20398]" at="0"/>
  <insert-node tree="=: = [20374,20375]" parent="variable_declaration_statement [20353,20398]" at="1"/>
  <insert-node tree="call_expression [20376,20397]" parent="variable_declaration_statement [20353,20398]" at="2"/>
  <insert-node tree="if: if [56218,56220]" parent="if_statement [56218,56294]" at="0"/>
  <insert-node tree="(: ( [56221,56222]" parent="if_statement [56218,56294]" at="1"/>
  <insert-tree tree="unary_expression [56222,56247]" parent="if_statement [56218,56294]" at="2"/>
  <insert-node tree="): ) [56247,56248]" parent="if_statement [56218,56294]" at="3"/>
  <insert-node tree="block_statement [56249,56294]" parent="if_statement [56218,56294]" at="4"/>
  <move-tree tree="call_expression [50010,50099]" parent="expression_statement [56408,56461]" at="0"/>
  <move-tree tree=",: , [50059,50060]" parent="call_expression [56408,56460]" at="8"/>
  <insert-node tree="call_expression [56470,56490]" parent="expression_statement [56470,56491]" at="0"/>
  <insert-node tree="call_expression [56500,56570]" parent="expression_statement [56500,56571]" at="0"/>
  <insert-node tree="call_expression [56728,56806]" parent="expression_statement [56728,56807]" at="0"/>
  <insert-node tree="call_expression [56903,56923]" parent="expression_statement [56903,56924]" at="0"/>
  <move-tree tree="call_expression [21205,21273]" parent="expression_statement [56933,57012]" at="0"/>
  <insert-node tree="call_expression [57124,57150]" parent="expression_statement [57124,57151]" at="0"/>
  <move-tree tree="call_expression [19955,20026]" parent="expression_statement [57374,57433]" at="0"/>
  <insert-tree tree="variable_declaration [58829,58847]" parent="variable_declaration_statement [58829,58905]" at="0"/>
  <insert-node tree="=: = [58848,58849]" parent="variable_declaration_statement [58829,58905]" at="1"/>
  <insert-node tree="call_expression [58850,58904]" parent="variable_declaration_statement [58829,58905]" at="2"/>
  <insert-node tree="if: if [59446,59448]" parent="if_statement [59446,59564]" at="0"/>
  <insert-node tree="(: ( [59449,59450]" parent="if_statement [59446,59564]" at="1"/>
  <insert-tree tree="binary_expression [59450,59460]" parent="if_statement [59446,59564]" at="2"/>
  <insert-node tree="): ) [59460,59461]" parent="if_statement [59446,59564]" at="3"/>
  <insert-node tree="block_statement [59462,59564]" parent="if_statement [59446,59564]" at="4"/>
  <insert-node tree="if: if [59630,59632]" parent="if_statement [59630,59699]" at="0"/>
  <insert-node tree="(: ( [59633,59634]" parent="if_statement [59630,59699]" at="1"/>
  <insert-tree tree="binary_expression [59634,59644]" parent="if_statement [59630,59699]" at="2"/>
  <insert-node tree="): ) [59644,59645]" parent="if_statement [59630,59699]" at="3"/>
  <insert-node tree="block_statement [59646,59699]" parent="if_statement [59630,59699]" at="4"/>
  <insert-node tree="if: if [59769,59771]" parent="if_statement [59769,59862]" at="0"/>
  <insert-node tree="(: ( [59772,59773]" parent="if_statement [59769,59862]" at="1"/>
  <insert-tree tree="binary_expression [59773,59783]" parent="if_statement [59769,59862]" at="2"/>
  <insert-node tree="): ) [59783,59784]" parent="if_statement [59769,59862]" at="3"/>
  <insert-node tree="block_statement [59785,59862]" parent="if_statement [59769,59862]" at="4"/>
  <move-tree tree="call_expression [79522,79562]" parent="expression_statement [59934,59970]" at="0"/>
  <insert-node tree="call_expression [59979,60011]" parent="expression_statement [59979,60012]" at="0"/>
  <insert-tree tree="variable_declaration [61762,61785]" parent="variable_declaration_statement [61762,61833]" at="0"/>
  <insert-node tree="=: = [61786,61787]" parent="variable_declaration_statement [61762,61833]" at="1"/>
  <move-tree tree="call_expression [78081,78129]" parent="variable_declaration_statement [61762,61833]" at="2"/>
  <insert-tree tree="call_expression [61842,61895]" parent="expression_statement [61842,61896]" at="0"/>
  <insert-tree tree="tuple_expression [62079,62085]" parent="variable_declaration_statement [62033,62086]" at="2"/>
  <move-tree tree="variable_declaration [84468,84496]" parent="variable_declaration_statement [62141,62185]" at="0"/>
  <insert-node tree="=: = [62165,62166]" parent="variable_declaration_statement [62141,62185]" at="1"/>
  <insert-tree tree="call_expression [62167,62184]" parent="variable_declaration_statement [62141,62185]" at="2"/>
  <move-tree tree="variable_declaration [84377,84409]" parent="variable_declaration_statement [62194,62232]" at="0"/>
  <insert-node tree="=: = [62215,62216]" parent="variable_declaration_statement [62194,62232]" at="1"/>
  <insert-tree tree="call_expression [62217,62231]" parent="variable_declaration_statement [62194,62232]" at="2"/>
  <insert-node tree="emit: emit [62466,62470]" parent="emit_statement [62466,62542]" at="0"/>
  <insert-node tree="identifier: CouponExpiration [62471,62487]" parent="emit_statement [62466,62542]" at="1"/>
  <insert-node tree="(: ( [62487,62488]" parent="emit_statement [62466,62542]" at="2"/>
  <insert-tree tree="call_argument [62488,62493]" parent="emit_statement [62466,62542]" at="3"/>
  <insert-node tree=",: , [62493,62494]" parent="emit_statement [62466,62542]" at="4"/>
  <insert-tree tree="call_argument [62495,62510]" parent="emit_statement [62466,62542]" at="5"/>
  <insert-node tree=",: , [62510,62511]" parent="emit_statement [62466,62542]" at="6"/>
  <insert-tree tree="call_argument [62512,62526]" parent="emit_statement [62466,62542]" at="7"/>
  <insert-node tree=",: , [62526,62527]" parent="emit_statement [62466,62542]" at="8"/>
  <move-tree tree="call_argument [21363,21364]" parent="emit_statement [62466,62542]" at="9"/>
  <insert-node tree=",: , [62529,62530]" parent="emit_statement [62466,62542]" at="10"/>
  <insert-tree tree="call_argument [62531,62540]" parent="emit_statement [62466,62542]" at="11"/>
  <insert-node tree="): ) [62540,62541]" parent="emit_statement [62466,62542]" at="12"/>
  <insert-node tree="call_expression [62640,62706]" parent="return_statement [62633,62707]" at="1"/>
  <move-tree tree="variable_declaration [79812,79825]" parent="variable_declaration_statement [62835,62910]" at="0"/>
  <insert-node tree="=: = [62854,62855]" parent="variable_declaration_statement [62835,62910]" at="1"/>
  <insert-tree tree="member_expression [62856,62909]" parent="variable_declaration_statement [62835,62910]" at="2"/>
  <move-tree tree="variable_declaration [79121,79134]" parent="variable_declaration_statement [62919,62958]" at="0"/>
  <insert-node tree="=: = [62934,62935]" parent="variable_declaration_statement [62919,62958]" at="1"/>
  <move-tree tree="binary_expression [74693,74719]" parent="variable_declaration_statement [62919,62958]" at="2"/>
  <move-tree tree="variable_declaration [79136,79149]" parent="variable_declaration_statement [62968,63119]" at="0"/>
  <insert-node tree="=: = [62990,62991]" parent="variable_declaration_statement [62968,63119]" at="1"/>
  <insert-tree tree="binary_expression [62992,63118]" parent="variable_declaration_statement [62968,63119]" at="2"/>
  <move-tree tree="variable_declaration [83331,83350]" parent="variable_declaration_statement [64054,64078]" at="0"/>
  <insert-node tree="=: = [64068,64069]" parent="variable_declaration_statement [64054,64078]" at="1"/>
  <insert-tree tree="call_expression [64070,64077]" parent="variable_declaration_statement [64054,64078]" at="2"/>
  <move-tree tree="variable_declaration [83237,83257]" parent="variable_declaration_statement [64087,64154]" at="0"/>
  <insert-node tree="=: = [64108,64109]" parent="variable_declaration_statement [64087,64154]" at="1"/>
  <insert-node tree="call_expression [64110,64153]" parent="variable_declaration_statement [64087,64154]" at="2"/>
  <move-tree tree="call_expression [80867,80883]" parent="expression_statement [64163,64204]" at="0"/>
  <insert-node tree="call_expression [64475,64544]" parent="expression_statement [64475,64545]" at="0"/>
  <move-tree tree="variable_declaration [79797,79810]" parent="variable_declaration_statement [64667,64736]" at="0"/>
  <insert-node tree="=: = [64683,64684]" parent="variable_declaration_statement [64667,64736]" at="1"/>
  <insert-tree tree="call_expression [64685,64735]" parent="variable_declaration_statement [64667,64736]" at="2"/>
  <move-tree tree="variable_declaration [74226,74262]" parent="variable_declaration_statement [64745,64794]" at="0"/>
  <insert-node tree="=: = [64766,64767]" parent="variable_declaration_statement [64745,64794]" at="1"/>
  <insert-tree tree="binary_expression [64768,64793]" parent="variable_declaration_statement [64745,64794]" at="2"/>
  <insert-node tree="call_expression [65162,65213]" parent="expression_statement [65162,65214]" at="0"/>
  <update-node tree="identifier: Approval [22099,22107]" label="CouponApproval"/>
  <insert-tree tree="call_argument [65244,65254]" parent="emit_statement [65224,65273]" at="3"/>
  <move-tree tree="call_argument [20706,20712]" parent="emit_statement [65224,65273]" at="8"/>
  <move-tree tree="call_argument [50940,50955]" parent="call_expression [65573,65660]" at="3"/>
  <insert-node tree="call_expression [65670,65721]" parent="expression_statement [65670,65722]" at="0"/>
  <insert-node tree="binary_expression [65736,65811]" parent="if_statement [65732,65931]" at="2"/>
  <update-node tree="identifier: Transfer [20106,20114]" label="CouponTransfer"/>
  <insert-tree tree="call_argument [65980,65985]" parent="emit_statement [65941,65995]" at="7"/>
  <insert-node tree=",: , [65985,65986]" parent="emit_statement [65941,65995]" at="8"/>
  <move-tree tree="variable_declaration [83047,83070]" parent="variable_declaration_statement [67543,67595]" at="0"/>
  <insert-node tree="=: = [67559,67560]" parent="variable_declaration_statement [67543,67595]" at="1"/>
  <insert-tree tree="call_expression [67561,67594]" parent="variable_declaration_statement [67543,67595]" at="2"/>
  <move-tree tree="variable_declaration [82474,82492]" parent="variable_declaration_statement [67604,67650]" at="0"/>
  <insert-node tree="=: = [67626,67627]" parent="variable_declaration_statement [67604,67650]" at="1"/>
  <insert-tree tree="call_expression [67628,67649]" parent="variable_declaration_statement [67604,67650]" at="2"/>
  <move-tree tree="variable_declaration [74373,74397]" parent="variable_declaration_statement [67941,67995]" at="0"/>
  <insert-node tree="=: = [67959,67960]" parent="variable_declaration_statement [67941,67995]" at="1"/>
  <insert-tree tree="call_expression [67961,67994]" parent="variable_declaration_statement [67941,67995]" at="2"/>
  <insert-tree tree="variable_declaration [68297,68334]" parent="variable_declaration_statement [68297,68370]" at="0"/>
  <insert-node tree="variable_declaration_tuple [68813,68852]" parent="variable_declaration_statement [68813,68874]" at="0"/>
  <insert-tree tree="unary_expression [68999,69005]" parent="if_statement [68995,69052]" at="2"/>
  <insert-node tree="return: return [69070,69076]" parent="return_statement [69070,69100]" at="0"/>
  <insert-node tree="call_expression [69077,69099]" parent="return_statement [69070,69100]" at="1"/>
  <insert-node tree="call_expression [71816,71926]" parent="expression_statement [71816,71927]" at="0"/>
  <move-tree tree="variable_declaration [68757,68776]" parent="variable_declaration_statement [72708,72864]" at="0"/>
  <insert-node tree="call_expression [72922,72949]" parent="expression_statement [72922,72950]" at="0"/>
  <insert-node tree="emit: emit [73053,73057]" parent="emit_statement [73053,73107]" at="0"/>
  <insert-node tree="identifier: Bond [73058,73062]" parent="emit_statement [73053,73107]" at="1"/>
  <insert-node tree="(: ( [73062,73063]" parent="emit_statement [73053,73107]" at="2"/>
  <insert-tree tree="call_argument [73063,73073]" parent="emit_statement [73053,73107]" at="3"/>
  <insert-node tree=",: , [73073,73074]" parent="emit_statement [73053,73107]" at="4"/>
  <insert-tree tree="call_argument [73075,73089]" parent="emit_statement [73053,73107]" at="5"/>
  <insert-node tree=",: , [73089,73090]" parent="emit_statement [73053,73107]" at="6"/>
  <insert-tree tree="call_argument [73091,73098]" parent="emit_statement [73053,73107]" at="7"/>
  <insert-node tree=",: , [73098,73099]" parent="emit_statement [73053,73107]" at="8"/>
  <move-tree tree="call_argument [82286,82291]" parent="emit_statement [73053,73107]" at="9"/>
  <insert-node tree="): ) [73105,73106]" parent="emit_statement [73053,73107]" at="10"/>
  <move-tree tree="variable_declaration [68392,68415]" parent="variable_declaration_statement [73313,73396]" at="0"/>
  <move-tree tree="call_expression [83353,83392]" parent="variable_declaration_statement [73313,73396]" at="2"/>
  <move-tree tree=",: , [83515,83516]" parent="call_expression [73459,73525]" at="4"/>
  <move-tree tree="variable_declaration [67631,67650]" parent="variable_declaration_statement [73887,73949]" at="0"/>
  <insert-node tree="call_expression [74011,74076]" parent="expression_statement [74011,74077]" at="0"/>
  <move-tree tree="call_argument [58625,58640]" parent="call_expression [74086,74158]" at="3"/>
  <update-node tree="identifier: Bond [82914,82918]" label="Unbond"/>
  <insert-tree tree="call_argument [74209,74216]" parent="emit_statement [74169,74225]" at="7"/>
  <insert-node tree=",: , [74216,74217]" parent="emit_statement [74169,74225]" at="8"/>
  <insert-node tree="if: if [79468,79470]" parent="if_statement [79468,79823]" at="0"/>
  <insert-node tree="(: ( [79471,79472]" parent="if_statement [79468,79823]" at="1"/>
  <insert-tree tree="unary_expression [79472,79495]" parent="if_statement [79468,79823]" at="2"/>
  <insert-node tree="): ) [79495,79496]" parent="if_statement [79468,79823]" at="3"/>
  <insert-node tree="block_statement [79497,79823]" parent="if_statement [79468,79823]" at="4"/>
  <move-tree tree="variable_declaration [79187,79204]" parent="variable_declaration_statement [79974,80013]" at="0"/>
  <move-tree tree="call_expression [83260,83289]" parent="variable_declaration_statement [79974,80013]" at="2"/>
  <insert-node tree="if: if [80164,80166]" parent="if_statement [80164,80300]" at="0"/>
  <insert-node tree="(: ( [80167,80168]" parent="if_statement [80164,80300]" at="1"/>
  <insert-tree tree="member_expression [80168,80205]" parent="if_statement [80164,80300]" at="2"/>
  <insert-node tree="): ) [80205,80206]" parent="if_statement [80164,80300]" at="3"/>
  <insert-node tree="block_statement [80207,80300]" parent="if_statement [80164,80300]" at="4"/>
  <insert-node tree="if: if [80309,80311]" parent="if_statement [80309,80448]" at="0"/>
  <insert-node tree="(: ( [80312,80313]" parent="if_statement [80309,80448]" at="1"/>
  <insert-tree tree="member_expression [80313,80351]" parent="if_statement [80309,80448]" at="2"/>
  <insert-node tree="): ) [80351,80352]" parent="if_statement [80309,80448]" at="3"/>
  <insert-node tree="block_statement [80353,80448]" parent="if_statement [80309,80448]" at="4"/>
  <move-tree tree="variable_declaration [66988,67011]" parent="variable_declaration_statement [80993,81066]" at="0"/>
  <insert-node tree="call_expression [81341,81532]" parent="expression_statement [81341,81533]" at="0"/>
  <insert-node tree="call_expression [81543,81669]" parent="expression_statement [81543,81670]" at="0"/>
  <update-node tree="identifier: Provide [84735,84742]" label="Commit"/>
  <insert-node tree="call_expression [81937,82085]" parent="expression_statement [81937,82086]" at="0"/>
  <update-node tree="identifier: Claim [82268,82273]" label="Commit"/>
  <insert-tree tree="call_argument [82496,82505]" parent="emit_statement [82472,82507]" at="5"/>
  <insert-node tree="if: if [82594,82596]" parent="if_statement [82594,82655]" at="0"/>
  <insert-node tree="(: ( [82597,82598]" parent="if_statement [82594,82655]" at="1"/>
  <insert-tree tree="binary_expression [82598,82616]" parent="if_statement [82594,82655]" at="2"/>
  <insert-node tree="): ) [82616,82617]" parent="if_statement [82594,82655]" at="3"/>
  <insert-node tree="block_statement [82618,82655]" parent="if_statement [82594,82655]" at="4"/>
  <insert-tree tree="variable_declaration [82665,82690]" parent="variable_declaration_statement [82665,82742]" at="0"/>
  <move-tree tree="call_expression [74265,74332]" parent="variable_declaration_statement [82665,82742]" at="2"/>
  <insert-node tree="emit: emit [84219,84223]" parent="emit_statement [84219,84272]" at="0"/>
  <insert-node tree="identifier: Advance [84224,84231]" parent="emit_statement [84219,84272]" at="1"/>
  <insert-node tree="(: ( [84231,84232]" parent="emit_statement [84219,84272]" at="2"/>
  <insert-tree tree="call_argument [84232,84239]" parent="emit_statement [84219,84272]" at="3"/>
  <insert-node tree=",: , [84239,84240]" parent="emit_statement [84219,84272]" at="4"/>
  <insert-tree tree="call_argument [84241,84253]" parent="emit_statement [84219,84272]" at="5"/>
  <insert-node tree=",: , [84253,84254]" parent="emit_statement [84219,84272]" at="6"/>
  <move-tree tree="call_argument [59985,60010]" parent="emit_statement [84219,84272]" at="7"/>
  <insert-node tree="): ) [84270,84271]" parent="emit_statement [84219,84272]" at="8"/>
  <insert-node tree="call_expression [84356,84386]" parent="expression_statement [84356,84387]" at="0"/>
  <insert-node tree="emit: emit [84396,84400]" parent="emit_statement [84396,84434]" at="0"/>
  <insert-node tree="identifier: Incentivization [84401,84416]" parent="emit_statement [84396,84434]" at="1"/>
  <insert-node tree="(: ( [84416,84417]" parent="emit_statement [84396,84434]" at="2"/>
  <move-tree tree="call_argument [21346,21353]" parent="emit_statement [84396,84434]" at="3"/>
  <insert-node tree=",: , [84424,84425]" parent="emit_statement [84396,84434]" at="4"/>
  <move-tree tree="call_argument [21367,21373]" parent="emit_statement [84396,84434]" at="5"/>
  <insert-node tree="): ) [84432,84433]" parent="emit_statement [84396,84434]" at="6"/>
  <insert-node tree="member_expression [19886,19956]" parent="call_expression [19886,19958]" at="0"/>
  <insert-node tree="(: ( [19956,19957]" parent="call_expression [19886,19958]" at="1"/>
  <insert-node tree="): ) [19957,19958]" parent="call_expression [19886,19958]" at="2"/>
  <insert-tree tree="member_expression [20320,20335]" parent="call_expression [20320,20343]" at="0"/>
  <insert-node tree="(: ( [20335,20336]" parent="call_expression [20320,20343]" at="1"/>
  <move-tree tree="call_argument [77139,77145]" parent="call_expression [20320,20343]" at="2"/>
  <insert-node tree="): ) [20342,20343]" parent="call_expression [20320,20343]" at="3"/>
  <insert-tree tree="member_expression [20376,20389]" parent="call_expression [20376,20397]" at="0"/>
  <insert-node tree="(: ( [20389,20390]" parent="call_expression [20376,20397]" at="1"/>
  <move-tree tree="call_argument [76274,76280]" parent="call_expression [20376,20397]" at="2"/>
  <insert-node tree="): ) [20396,20397]" parent="call_expression [20376,20397]" at="3"/>
  <insert-node tree="member_expression [56179,56191]" parent="call_expression [56179,56208]" at="0"/>
  <insert-node tree="{: { [56249,56250]" parent="block_statement [56249,56294]" at="0"/>
  <insert-node tree="expression_statement [56263,56284]" parent="block_statement [56249,56294]" at="1"/>
  <insert-node tree="}: } [56293,56294]" parent="block_statement [56249,56294]" at="2"/>
  <move-tree tree="identifier: LibEIP712 [50010,50019]" parent="member_expression [56408,56428]" at="1"/>
  <move-tree tree="call_argument [26218,26225]" parent="call_expression [56408,56460]" at="2"/>
  <move-tree tree="call_argument [53099,53105]" parent="call_expression [56408,56460]" at="10"/>
  <insert-tree tree="member_expression [56470,56482]" parent="call_expression [56470,56490]" at="0"/>
  <insert-node tree="(: ( [56482,56483]" parent="call_expression [56470,56490]" at="1"/>
  <move-tree tree="call_argument [22975,22981]" parent="call_expression [56470,56490]" at="2"/>
  <insert-node tree="): ) [56489,56490]" parent="call_expression [56470,56490]" at="3"/>
  <insert-node tree="identifier: decrementTotalDebt [56500,56518]" parent="call_expression [56500,56570]" at="0"/>
  <insert-node tree="(: ( [56518,56519]" parent="call_expression [56500,56570]" at="1"/>
  <move-tree tree="call_argument [76009,76015]" parent="call_expression [56500,56570]" at="2"/>
  <insert-node tree=",: , [56525,56526]" parent="call_expression [56500,56570]" at="3"/>
  <move-tree tree="call_argument [50879,50893]" parent="call_expression [56500,56570]" at="4"/>
  <insert-node tree="): ) [56569,56570]" parent="call_expression [56500,56570]" at="5"/>
  <insert-tree tree="member_expression [56685,56701]" parent="call_expression [56685,56718]" at="0"/>
  <insert-node tree="identifier: decrementTotalRedeemable [56728,56752]" parent="call_expression [56728,56806]" at="0"/>
  <insert-node tree="(: ( [56752,56753]" parent="call_expression [56728,56806]" at="1"/>
  <move-tree tree="call_argument [76600,76606]" parent="call_expression [56728,56806]" at="2"/>
  <insert-node tree=",: , [56759,56760]" parent="call_expression [56728,56806]" at="3"/>
  <move-tree tree="call_argument [50758,50777]" parent="call_expression [56728,56806]" at="4"/>
  <insert-node tree="): ) [56805,56806]" parent="call_expression [56728,56806]" at="5"/>
  <insert-node tree="member_expression [56903,56915]" parent="call_expression [56903,56923]" at="0"/>
  <insert-node tree="(: ( [56915,56916]" parent="call_expression [56903,56923]" at="1"/>
  <move-tree tree="call_argument [76076,76082]" parent="call_expression [56903,56923]" at="2"/>
  <insert-node tree="): ) [56922,56923]" parent="call_expression [56903,56923]" at="3"/>
  <insert-node tree="identifier: decrementTotalRedeemable [56933,56957]" parent="call_expression [56933,57011]" at="0"/>
  <insert-node tree="identifier: incrementTotalDebt [57124,57142]" parent="call_expression [57124,57150]" at="0"/>
  <insert-node tree="(: ( [57142,57143]" parent="call_expression [57124,57150]" at="1"/>
  <move-tree tree="call_argument [16593,16599]" parent="call_expression [57124,57150]" at="2"/>
  <insert-node tree="): ) [57149,57150]" parent="call_expression [57124,57150]" at="3"/>
  <insert-node tree="identifier: decrementTotalDebt [57374,57392]" parent="call_expression [57374,57432]" at="0"/>
  <insert-node tree="member_expression [58850,58902]" parent="call_expression [58850,58904]" at="0"/>
  <insert-node tree="(: ( [58902,58903]" parent="call_expression [58850,58904]" at="1"/>
  <insert-node tree="): ) [58903,58904]" parent="call_expression [58850,58904]" at="2"/>
  <insert-node tree="{: { [59462,59463]" parent="block_statement [59462,59564]" at="0"/>
  <insert-node tree="expression_statement [59476,59512]" parent="block_statement [59462,59564]" at="1"/>
  <insert-node tree="expression_statement [59525,59554]" parent="block_statement [59462,59564]" at="2"/>
  <insert-node tree="}: } [59563,59564]" parent="block_statement [59462,59564]" at="3"/>
  <insert-node tree="{: { [59646,59647]" parent="block_statement [59646,59699]" at="0"/>
  <insert-node tree="expression_statement [59660,59689]" parent="block_statement [59646,59699]" at="1"/>
  <insert-node tree="}: } [59698,59699]" parent="block_statement [59646,59699]" at="2"/>
  <insert-node tree="{: { [59785,59786]" parent="block_statement [59785,59862]" at="0"/>
  <insert-node tree="expression_statement [59799,59852]" parent="block_statement [59785,59862]" at="1"/>
  <insert-node tree="}: } [59861,59862]" parent="block_statement [59785,59862]" at="2"/>
  <insert-node tree=",: , [59960,59961]" parent="call_expression [59934,59969]" at="3"/>
  <move-tree tree="call_argument [17070,17076]" parent="call_expression [59934,59969]" at="4"/>
  <insert-node tree="identifier: incrementTotalRedeemable [59979,60003]" parent="call_expression [59979,60011]" at="0"/>
  <insert-node tree="(: ( [60003,60004]" parent="call_expression [59979,60011]" at="1"/>
  <move-tree tree="call_argument [17697,17703]" parent="call_expression [59979,60011]" at="2"/>
  <insert-node tree="): ) [60010,60011]" parent="call_expression [59979,60011]" at="3"/>
  <insert-node tree="uint256: uint256 [61362,61369]" parent="primitive_type [61362,61369]" at="0"/>
  <update-node tree="identifier: newPhantomFromBonded [84476,84496]" label="totalRedeemable"/>
  <update-node tree="identifier: totalRewardedWithPhantom [84385,84409]" label="totalCoupons"/>
  <insert-node tree="identifier: calculateCouponPremium [62640,62662]" parent="call_expression [62640,62706]" at="0"/>
  <insert-node tree="(: ( [62662,62663]" parent="call_expression [62640,62706]" at="1"/>
  <insert-tree tree="call_argument [62663,62684]" parent="call_expression [62640,62706]" at="2"/>
  <insert-node tree=",: , [62684,62685]" parent="call_expression [62640,62706]" at="3"/>
  <insert-tree tree="call_argument [62686,62697]" parent="call_expression [62640,62706]" at="4"/>
  <insert-node tree=",: , [62697,62698]" parent="call_expression [62640,62706]" at="5"/>
  <move-tree tree="call_argument [77427,77433]" parent="call_expression [62640,62706]" at="6"/>
  <insert-node tree="): ) [62705,62706]" parent="call_expression [62640,62706]" at="7"/>
  <update-node tree="identifier: reserve1 [79817,79825]" label="timeIntoEpoch"/>
  <update-node tree="identifier: reserveA [79126,79134]" label="couponAge"/>
  <insert-node tree="-: - [62944,62945]" parent="binary_expression [62936,62957]" at="1"/>
  <insert-node tree="identifier: couponEpoch [62946,62957]" parent="binary_expression [62936,62957]" at="2"/>
  <update-node tree="identifier: reserveB [79141,79149]" label="couponEpochDecay"/>
  <update-node tree="identifier: totalBonded [74085,74096]" label="timeIntoEpoch"/>
  <insert-node tree="&gt;: &gt; [63146,63147]" parent="binary_expression [63132,63164]" at="1"/>
  <insert-node tree="identifier: couponEpochDecay [63148,63164]" parent="binary_expression [63132,63164]" at="2"/>
  <move-tree tree="member_expression [50798,50810]" parent="call_expression [63807,63921]" at="0"/>
  <move-tree tree="call_argument [50861,50865]" parent="call_expression [63807,63921]" at="5"/>
  <insert-node tree=",: , [63866,63867]" parent="call_expression [63807,63921]" at="5"/>
  <move-tree tree="call_argument [19141,19180]" parent="call_expression [63932,64043]" at="6"/>
  <update-node tree="identifier: lessPhantom [83339,83350]" label="epoch"/>
  <update-node tree="identifier: newClaimable [83245,83257]" label="couponAmount"/>
  <insert-tree tree="member_expression [64110,64125]" parent="call_expression [64110,64153]" at="0"/>
  <insert-node tree="(: ( [64125,64126]" parent="call_expression [64110,64153]" at="1"/>
  <insert-node tree="call_argument [64126,64152]" parent="call_expression [64110,64153]" at="2"/>
  <insert-node tree="): ) [64152,64153]" parent="call_expression [64110,64153]" at="3"/>
  <update-node tree="identifier: IDAO [80867,80871]" label="burnFromAccount"/>
  <insert-node tree=",: , [64189,64190]" parent="call_expression [64163,64203]" at="3"/>
  <move-tree tree="call_argument [79418,79429]" parent="call_expression [64163,64203]" at="4"/>
  <update-node tree="identifier: incrementBalanceOfPhantom [84623,84648]" label="incrementBalanceOfCoupons"/>
  <insert-tree tree="call_argument [64251,64256]" parent="call_expression [64213,64271]" at="4"/>
  <insert-node tree=",: , [64256,64257]" parent="call_expression [64213,64271]" at="5"/>
  <insert-tree tree="call_argument [64258,64270]" parent="call_expression [64213,64271]" at="6"/>
  <insert-node tree="identifier: require [64475,64482]" parent="call_expression [64475,64544]" at="0"/>
  <insert-node tree="(: ( [64482,64483]" parent="call_expression [64475,64544]" at="1"/>
  <insert-tree tree="call_argument [64483,64512]" parent="call_expression [64475,64544]" at="2"/>
  <insert-node tree=",: , [64512,64513]" parent="call_expression [64475,64544]" at="3"/>
  <move-tree tree="call_argument [20516,20549]" parent="call_expression [64475,64544]" at="4"/>
  <insert-node tree="): ) [64543,64544]" parent="call_expression [64475,64544]" at="5"/>
  <update-node tree="identifier: require [21106,21113]" label="decrementBalanceOfCoupons"/>
  <insert-tree tree="call_argument [64580,64590]" parent="call_expression [64554,64657]" at="2"/>
  <insert-tree tree="call_argument [64592,64603]" parent="call_expression [64554,64657]" at="4"/>
  <insert-node tree=",: , [64603,64604]" parent="call_expression [64554,64657]" at="5"/>
  <insert-tree tree="call_argument [64605,64617]" parent="call_expression [64554,64657]" at="6"/>
  <insert-node tree=",: , [64617,64618]" parent="call_expression [64554,64657]" at="7"/>
  <update-node tree="identifier: reserve0 [79802,79810]" label="burnAmount"/>
  <update-node tree="identifier: balanceOfRewardedWithPhantom [74234,74262]" label="redeemAmount"/>
  <insert-node tree="identifier: updateAllowanceCoupons [65162,65184]" parent="call_expression [65162,65213]" at="0"/>
  <insert-node tree="(: ( [65184,65185]" parent="call_expression [65162,65213]" at="1"/>
  <insert-tree tree="call_argument [65185,65195]" parent="call_expression [65162,65213]" at="2"/>
  <insert-node tree=",: , [65195,65196]" parent="call_expression [65162,65213]" at="3"/>
  <move-tree tree="call_argument [51033,51040]" parent="call_expression [65162,65213]" at="4"/>
  <insert-node tree=",: , [65204,65205]" parent="call_expression [65162,65213]" at="5"/>
  <move-tree tree="call_argument [76349,76355]" parent="call_expression [65162,65213]" at="6"/>
  <insert-node tree="): ) [65212,65213]" parent="call_expression [65162,65213]" at="7"/>
  <insert-node tree="identifier: decrementBalanceOfCoupons [65573,65598]" parent="call_expression [65573,65660]" at="0"/>
  <move-tree tree="call_argument [53080,53086]" parent="call_expression [65573,65660]" at="3"/>
  <move-tree tree="call_argument [22402,22408]" parent="call_expression [65573,65660]" at="8"/>
  <insert-node tree=",: , [65620,65621]" parent="call_expression [65573,65660]" at="7"/>
  <insert-node tree="identifier: incrementBalanceOfCoupons [65670,65695]" parent="call_expression [65670,65721]" at="0"/>
  <insert-node tree="(: ( [65695,65696]" parent="call_expression [65670,65721]" at="1"/>
  <move-tree tree="call_argument [53088,53097]" parent="call_expression [65670,65721]" at="2"/>
  <insert-node tree=",: , [65705,65706]" parent="call_expression [65670,65721]" at="3"/>
  <insert-tree tree="call_argument [65707,65712]" parent="call_expression [65670,65721]" at="4"/>
  <insert-node tree=",: , [65712,65713]" parent="call_expression [65670,65721]" at="5"/>
  <move-tree tree="call_argument [76873,76879]" parent="call_expression [65670,65721]" at="6"/>
  <insert-node tree="): ) [65720,65721]" parent="call_expression [65670,65721]" at="7"/>
  <insert-node tree="binary_expression [65736,65756]" parent="binary_expression [65736,65811]" at="0"/>
  <insert-node tree="&amp;&amp;: &amp;&amp; [65757,65759]" parent="binary_expression [65736,65811]" at="1"/>
  <move-tree tree="binary_expression [53120,53166]" parent="binary_expression [65736,65811]" at="2"/>
  <update-node tree="identifier: updatePrice [67608,67619]" label="oracleCapture"/>
  <update-node tree="identifier: balanceOfBonded [83055,83070]" label="newDebt"/>
  <update-node tree="identifier: newPhantom [82482,82492]" label="cappedNewDebt"/>
  <update-node tree="identifier: totalRewardedWithPhantom [82402,82426]" label="lessDebt"/>
  <insert-node tree="identifier: resetDebt [67829,67838]" parent="call_expression [67829,67854]" at="0"/>
  <update-node tree="identifier: balanceOfPhantom [74381,74397]" label="newSupply"/>
  <insert-node tree="identifier: increaseSupply [68049,68063]" parent="call_expression [68049,68074]" at="0"/>
  <insert-tree tree="member_expression [68337,68367]" parent="call_expression [68337,68369]" at="0"/>
  <update-node tree="identifier: totalBonded [74044,74055]" label="totalRedeemable"/>
  <update-node tree="identifier: totalBonded [74058,74069]" label="totalRedeemable"/>
  <update-node tree="identifier: totalRewardedWithPhantom [74154,74178]" label="totalCoupons"/>
  <insert-node tree="identifier: totalCoupons [68464,68476]" parent="call_expression [68464,68478]" at="0"/>
  <insert-tree tree="call_expression [68492,68524]" parent="binary_expression [68492,68560]" at="0"/>
  <insert-node tree="&amp;&amp;: &amp;&amp; [68525,68527]" parent="binary_expression [68492,68560]" at="1"/>
  <insert-tree tree="parenthesized_expression [68528,68560]" parent="binary_expression [68492,68560]" at="2"/>
  <insert-tree tree="expression_statement [68576,68635]" parent="block_statement [68562,68645]" at="1"/>
  <insert-node tree="(: ( [68813,68814]" parent="variable_declaration_tuple [68813,68852]" at="0"/>
  <move-tree tree="variable_declaration [68477,68502]" parent="variable_declaration_tuple [68813,68852]" at="1"/>
  <insert-node tree=",: , [68839,68840]" parent="variable_declaration_tuple [68813,68852]" at="2"/>
  <move-tree tree="variable_declaration [67753,67763]" parent="variable_declaration_tuple [68813,68852]" at="3"/>
  <insert-node tree="): ) [68851,68852]" parent="variable_declaration_tuple [68813,68852]" at="4"/>
  <move-tree tree="member_expression [108439,108453]" parent="call_expression [68855,68873]" at="0"/>
  <insert-node tree="member_expression [69077,69096]" parent="call_expression [69077,69099]" at="0"/>
  <insert-node tree="(: ( [69096,69097]" parent="call_expression [69077,69099]" at="1"/>
  <insert-tree tree="call_argument [69097,69098]" parent="call_expression [69077,69099]" at="2"/>
  <insert-node tree="): ) [69098,69099]" parent="call_expression [69077,69099]" at="3"/>
  <move-tree tree="member_expression [50914,50926]" parent="call_expression [71816,71926]" at="0"/>
  <insert-node tree="(: ( [71828,71829]" parent="call_expression [71816,71926]" at="1"/>
  <insert-tree tree="call_argument [71842,71863]" parent="call_expression [71816,71926]" at="2"/>
  <insert-node tree=",: , [71863,71864]" parent="call_expression [71816,71926]" at="3"/>
  <move-tree tree="call_argument [50969,50973]" parent="call_expression [71816,71926]" at="4"/>
  <insert-node tree=",: , [71881,71882]" parent="call_expression [71816,71926]" at="5"/>
  <move-tree tree="call_argument [22498,22536]" parent="call_expression [71816,71926]" at="6"/>
  <insert-node tree="): ) [71925,71926]" parent="call_expression [71816,71926]" at="7"/>
  <insert-node tree=",: , [72605,72606]" parent="call_expression [72586,72646]" at="3"/>
  <insert-tree tree="call_argument [72607,72645]" parent="call_expression [72586,72646]" at="4"/>
  <update-node tree="identifier: lastReserve [68765,68776]" label="balance"/>
  <update-node tree="identifier: incrementBalanceOfBonded [84567,84591]" label="incrementBalanceOf"/>
  <insert-node tree="identifier: incrementTotalBonded [72922,72942]" parent="call_expression [72922,72949]" at="0"/>
  <insert-node tree="(: ( [72942,72943]" parent="call_expression [72922,72949]" at="1"/>
  <move-tree tree="call_argument [82181,82186]" parent="call_expression [72922,72949]" at="2"/>
  <insert-node tree="): ) [72948,72949]" parent="call_expression [72922,72949]" at="3"/>
  <insert-node tree=",: , [73218,73219]" parent="call_expression [73199,73255]" at="3"/>
  <insert-tree tree="call_argument [73220,73254]" parent="call_expression [73199,73255]" at="4"/>
  <update-node tree="identifier: priceCumulative [68400,68415]" label="staged"/>
  <update-node tree="identifier: incrementBalanceOfBonded [82681,82705]" label="incrementBalanceOfStaged"/>
  <insert-tree tree="call_argument [73442,73448]" parent="call_expression [73405,73449]" at="4"/>
  <update-node tree="identifier: incrementBalanceOfClaimable [83477,83504]" label="decrementTotalBonded"/>
  <move-tree tree="call_argument [17791,17833]" parent="call_expression [73459,73525]" at="5"/>
  <insert-node tree="identifier: decrementBalanceOf [73535,73553]" parent="call_expression [73535,73605]" at="0"/>
  <move-tree tree="call_argument [83505,83515]" parent="call_expression [73535,73605]" at="3"/>
  <move-tree tree="call_argument [51042,51047]" parent="call_expression [73535,73605]" at="6"/>
  <update-node tree="identifier: newClaimable [83801,83813]" label="staged"/>
  <update-node tree="identifier: decrementBalanceOfClaimable [82141,82168]" label="unfreeze"/>
  <insert-tree tree="call_argument [73794,73828]" parent="call_expression [73773,73829]" at="4"/>
  <update-node tree="identifier: lastReserve [67639,67650]" label="balance"/>
  <insert-node tree="identifier: decrementTotalBonded [74011,74031]" parent="call_expression [74011,74076]" at="0"/>
  <insert-node tree="(: ( [74031,74032]" parent="call_expression [74011,74076]" at="1"/>
  <move-tree tree="call_argument [82718,82723]" parent="call_expression [74011,74076]" at="2"/>
  <insert-node tree=",: , [74037,74038]" parent="call_expression [74011,74076]" at="3"/>
  <move-tree tree="call_argument [58282,58319]" parent="call_expression [74011,74076]" at="4"/>
  <insert-node tree="): ) [74075,74076]" parent="call_expression [74011,74076]" at="5"/>
  <update-node tree="identifier: require [58617,58624]" label="decrementBalanceOf"/>
  <move-tree tree="call_argument [82760,82770]" parent="call_expression [74086,74158]" at="2"/>
  <insert-node tree=",: , [74124,74125]" parent="call_expression [74086,74158]" at="5"/>
  <move-tree tree="call_argument [84187,84225]" parent="call_expression [79347,79457]" at="2"/>
  <insert-node tree="{: { [79497,79498]" parent="block_statement [79497,79823]" at="0"/>
  <insert-node tree="expression_statement [79511,79647]" parent="block_statement [79497,79823]" at="1"/>
  <insert-tree tree="expression_statement [79661,79721]" parent="block_statement [79497,79823]" at="2"/>
  <insert-tree tree="emit_statement [79734,79813]" parent="block_statement [79497,79823]" at="3"/>
  <insert-node tree="}: } [79822,79823]" parent="block_statement [79497,79823]" at="4"/>
  <update-node tree="identifier: daiAmount [79195,79204]" label="bonded"/>
  <update-node tree="identifier: balanceOfRewarded [83260,83277]" label="balanceOf"/>
  <insert-node tree="{: { [80207,80208]" parent="block_statement [80207,80300]" at="0"/>
  <move-tree tree="expression_statement [25923,26007]" parent="block_statement [80207,80300]" at="1"/>
  <insert-node tree="}: } [80299,80300]" parent="block_statement [80207,80300]" at="2"/>
  <insert-node tree="{: { [80353,80354]" parent="block_statement [80353,80448]" at="0"/>
  <move-tree tree="expression_statement [25215,25280]" parent="block_statement [80353,80448]" at="1"/>
  <insert-node tree="}: } [80447,80448]" parent="block_statement [80353,80448]" at="2"/>
  <update-node tree="identifier: decrementBalanceOfPhantom [83630,83655]" label="recordVote"/>
  <insert-tree tree="call_argument [80706,80710]" parent="call_expression [80672,80711]" at="6"/>
  <update-node tree="identifier: decrementBalanceOfBonded [83540,83564]" label="placeLock"/>
  <update-node tree="identifier: priceCumulative [66996,67011]" label="endsAfter"/>
  <insert-tree tree="call_argument [81102,81121]" parent="call_expression [81076,81174]" at="2"/>
  <insert-tree tree="member_expression [81341,81353]" parent="call_expression [81341,81532]" at="0"/>
  <insert-node tree="(: ( [81353,81354]" parent="call_expression [81341,81532]" at="1"/>
  <insert-tree tree="call_argument [81367,81472]" parent="call_expression [81341,81532]" at="2"/>
  <insert-node tree=",: , [81472,81473]" parent="call_expression [81341,81532]" at="3"/>
  <insert-tree tree="call_argument [81486,81490]" parent="call_expression [81341,81532]" at="4"/>
  <insert-node tree=",: , [81490,81491]" parent="call_expression [81341,81532]" at="5"/>
  <move-tree tree="call_argument [83681,83717]" parent="call_expression [81341,81532]" at="6"/>
  <insert-node tree="): ) [81531,81532]" parent="call_expression [81341,81532]" at="7"/>
  <insert-tree tree="member_expression [81543,81555]" parent="call_expression [81543,81669]" at="0"/>
  <insert-node tree="(: ( [81555,81556]" parent="call_expression [81543,81669]" at="1"/>
  <insert-tree tree="call_argument [81569,81613]" parent="call_expression [81543,81669]" at="2"/>
  <insert-node tree=",: , [81613,81614]" parent="call_expression [81543,81669]" at="3"/>
  <insert-tree tree="call_argument [81627,81631]" parent="call_expression [81543,81669]" at="4"/>
  <insert-node tree=",: , [81631,81632]" parent="call_expression [81543,81669]" at="5"/>
  <move-tree tree="call_argument [83584,83619]" parent="call_expression [81543,81669]" at="6"/>
  <insert-node tree="): ) [81668,81669]" parent="call_expression [81543,81669]" at="7"/>
  <update-node tree="identifier: value [84755,84760]" label="candidate"/>
  <move-tree tree="member_expression [69289,69301]" parent="call_expression [81937,82085]" at="0"/>
  <insert-node tree="(: ( [81949,81950]" parent="call_expression [81937,82085]" at="1"/>
  <insert-tree tree="call_argument [81963,82029]" parent="call_expression [81937,82085]" at="2"/>
  <insert-node tree=",: , [82029,82030]" parent="call_expression [81937,82085]" at="3"/>
  <move-tree tree="call_argument [69347,69351]" parent="call_expression [81937,82085]" at="4"/>
  <insert-node tree=",: , [82047,82048]" parent="call_expression [81937,82085]" at="5"/>
  <move-tree tree="call_argument [82188,82226]" parent="call_expression [81937,82085]" at="6"/>
  <insert-node tree="): ) [82084,82085]" parent="call_expression [81937,82085]" at="7"/>
  <insert-node tree="{: { [82618,82619]" parent="block_statement [82618,82655]" at="0"/>
  <insert-node tree="return_statement [82632,82645]" parent="block_statement [82618,82655]" at="1"/>
  <insert-node tree="}: } [82654,82655]" parent="block_statement [82618,82655]" at="2"/>
  <move-tree tree="member_expression [68505,68518]" parent="call_expression [82693,82741]" at="0"/>
  <insert-node tree=",: , [82725,82726]" parent="call_expression [82693,82741]" at="3"/>
  <insert-tree tree="call_argument [82727,82740]" parent="call_expression [82693,82741]" at="4"/>
  <insert-node tree="identifier: incentivize [83873,83884]" parent="call_expression [83873,83932]" at="0"/>
  <insert-tree tree="call_argument [83897,83931]" parent="call_expression [83873,83932]" at="4"/>
  <insert-node tree="identifier: incentivize [83991,84002]" parent="call_expression [83991,84047]" at="0"/>
  <move-tree tree="member_expression [59985,60000]" parent="call_argument [84255,84270]" at="0"/>
  <insert-node tree="identifier: mintToAccount [84356,84369]" parent="call_expression [84356,84386]" at="0"/>
  <insert-node tree="(: ( [84369,84370]" parent="call_expression [84356,84386]" at="1"/>
  <move-tree tree="call_argument [26391,26398]" parent="call_expression [84356,84386]" at="2"/>
  <insert-node tree=",: , [84377,84378]" parent="call_expression [84356,84386]" at="3"/>
  <move-tree tree="call_argument [77683,77689]" parent="call_expression [84356,84386]" at="4"/>
  <insert-node tree="): ) [84385,84386]" parent="call_expression [84356,84386]" at="5"/>
  <insert-node tree="call_expression [19886,19946]" parent="member_expression [19886,19956]" at="0"/>
  <insert-node tree=".: . [19946,19947]" parent="member_expression [19886,19956]" at="1"/>
  <insert-node tree="identifier: asUint256 [19947,19956]" parent="member_expression [19886,19956]" at="2"/>
  <move-tree tree="call_expression [108420,108427]" parent="member_expression [56179,56191]" at="0"/>
  <insert-node tree=".: . [56186,56187]" parent="member_expression [56179,56191]" at="1"/>
  <insert-node tree="identifier: mint [56187,56191]" parent="member_expression [56179,56191]" at="2"/>
  <insert-node tree="call_expression [56263,56283]" parent="expression_statement [56263,56284]" at="0"/>
  <insert-tree tree="call_expression [56408,56415]" parent="member_expression [56408,56428]" at="0"/>
  <update-node tree="identifier: LibEIP712 [50010,50019]" label="transferFrom"/>
  <move-tree tree="call_expression [108725,108732]" parent="member_expression [56903,56915]" at="0"/>
  <insert-node tree=".: . [56910,56911]" parent="member_expression [56903,56915]" at="1"/>
  <insert-node tree="identifier: burn [56911,56915]" parent="member_expression [56903,56915]" at="2"/>
  <insert-node tree="call_expression [58850,58892]" parent="member_expression [58850,58902]" at="0"/>
  <insert-node tree=".: . [58892,58893]" parent="member_expression [58850,58902]" at="1"/>
  <insert-node tree="identifier: asUint256 [58893,58902]" parent="member_expression [58850,58902]" at="2"/>
  <move-tree tree="call_expression [85076,85108]" parent="expression_statement [59476,59512]" at="0"/>
  <insert-node tree="call_expression [59525,59553]" parent="expression_statement [59525,59554]" at="0"/>
  <insert-node tree="call_expression [59660,59688]" parent="expression_statement [59660,59689]" at="0"/>
  <insert-node tree="call_expression [59799,59851]" parent="expression_statement [59799,59852]" at="0"/>
  <update-node tree="identifier: lessDai [84318,84325]" label="lessRedeemable"/>
  <update-node tree="identifier: newUniv2 [84335,84343]" label="newBonded"/>
  <insert-node tree="call_expression [64126,64152]" parent="call_argument [64126,64152]" at="0"/>
  <insert-node tree="identifier: epoch [65607,65612]" parent="call_argument [65607,65612]" at="0"/>
  <move-tree tree="member_expression [11038,11048]" parent="binary_expression [65736,65756]" at="0"/>
  <insert-node tree="!=: != [65747,65749]" parent="binary_expression [65736,65756]" at="1"/>
  <insert-node tree="identifier: sender [65750,65756]" parent="binary_expression [65736,65756]" at="2"/>
  <move-tree tree="call_expression [53262,53349]" parent="expression_statement [65827,65921]" at="0"/>
  <move-tree tree="call_argument [53298,53304]" parent="call_expression [65827,65920]" at="3"/>
  <update-node tree="identifier: price0Cumulative [68162,68178]" label="newRedeemable"/>
  <update-node tree="identifier: price1Cumulative [68188,68204]" label="newBonded"/>
  <insert-node tree="identifier: newSupply [68064,68073]" parent="call_argument [68064,68073]" at="0"/>
  <update-node tree="identifier: setup [108448,108453]" label="capture"/>
  <move-tree tree="call_expression [66861,66874]" parent="return_statement [69021,69042]" at="1"/>
  <insert-node tree="call_expression [69077,69092]" parent="member_expression [69077,69096]" at="0"/>
  <insert-node tree=".: . [69092,69093]" parent="member_expression [69077,69096]" at="1"/>
  <insert-node tree="identifier: mul [69093,69096]" parent="member_expression [69077,69096]" at="2"/>
  <move-tree tree="ternary_expression [82528,82601]" parent="member_expression [72726,72848]" at="0"/>
  <update-node tree="identifier: newUniv2 [84604,84612]" label="balance"/>
  <insert-node tree="call_expression [73330,73368]" parent="member_expression [73330,73372]" at="0"/>
  <update-node tree="identifier: mul [83382,83385]" label="div"/>
  <move-tree tree="call_expression [83353,83381]" parent="call_argument [73373,73394]" at="0"/>
  <update-node tree="identifier: newClaimable [83517,83529]" label="staged"/>
  <insert-node tree="identifier: balance [74117,74124]" parent="call_argument [74117,74124]" at="0"/>
  <insert-node tree="call_expression [79511,79646]" parent="expression_statement [79511,79647]" at="0"/>
  <insert-tree tree="call_expression [79859,79914]" parent="call_argument [79859,79914]" at="0"/>
  <update-node tree="identifier: lessPhantom [83668,83679]" label="candidate"/>
  <update-node tree="identifier: value [83577,83582]" label="candidate"/>
  <insert-tree tree="call_expression [80903,80925]" parent="call_argument [80903,80925]" at="0"/>
  <update-node tree="identifier: add [84448,84451]" label="sub"/>
  <insert-node tree="number_literal: 1 [81063,81064]" parent="call_argument [81063,81064]" at="0"/>
  <insert-node tree="call_expression [81211,81279]" parent="call_argument [81211,81279]" at="0"/>
  <insert-tree tree="call_expression [81847,81869]" parent="call_argument [81847,81869]" at="0"/>
  <insert-tree tree="call_expression [82122,82225]" parent="call_argument [82122,82225]" at="0"/>
  <insert-node tree="return: return [82632,82638]" parent="return_statement [82632,82645]" at="0"/>
  <move-tree tree="boolean_literal [66876,66881]" parent="return_statement [82632,82645]" at="1"/>
  <insert-tree tree="call_expression [84015,84046]" parent="call_argument [84015,84046]" at="0"/>
  <insert-node tree="member_expression [19886,19938]" parent="call_expression [19886,19946]" at="0"/>
  <insert-node tree="(: ( [19938,19939]" parent="call_expression [19886,19946]" at="1"/>
  <move-tree tree="call_argument [17783,17789]" parent="call_expression [19886,19946]" at="2"/>
  <insert-node tree="): ) [19945,19946]" parent="call_expression [19886,19946]" at="3"/>
  <insert-node tree="identifier: increaseDebt [56263,56275]" parent="call_expression [56263,56283]" at="0"/>
  <insert-node tree="(: ( [56275,56276]" parent="call_expression [56263,56283]" at="1"/>
  <move-tree tree="call_argument [20084,20090]" parent="call_expression [56263,56283]" at="2"/>
  <insert-node tree="): ) [56282,56283]" parent="call_expression [56263,56283]" at="3"/>
  <insert-tree tree="member_expression [58850,58869]" parent="call_expression [58850,58892]" at="0"/>
  <insert-node tree="(: ( [58869,58870]" parent="call_expression [58850,58892]" at="1"/>
  <move-tree tree="call_argument [79094,79101]" parent="call_expression [58850,58892]" at="2"/>
  <insert-node tree="): ) [58891,58892]" parent="call_expression [58850,58892]" at="3"/>
  <insert-node tree=",: , [59502,59503]" parent="call_expression [59476,59511]" at="3"/>
  <move-tree tree="call_argument [20593,20599]" parent="call_expression [59476,59511]" at="4"/>
  <insert-node tree="identifier: incrementTotalBonded [59525,59545]" parent="call_expression [59525,59553]" at="0"/>
  <insert-node tree="(: ( [59545,59546]" parent="call_expression [59525,59553]" at="1"/>
  <move-tree tree="call_argument [20654,20660]" parent="call_expression [59525,59553]" at="2"/>
  <insert-node tree="): ) [59552,59553]" parent="call_expression [59525,59553]" at="3"/>
  <insert-tree tree="member_expression [59660,59672]" parent="call_expression [59660,59688]" at="0"/>
  <insert-node tree="(: ( [59672,59673]" parent="call_expression [59660,59688]" at="1"/>
  <insert-tree tree="call_argument [59673,59679]" parent="call_expression [59660,59688]" at="2"/>
  <insert-node tree=",: , [59679,59680]" parent="call_expression [59660,59688]" at="3"/>
  <move-tree tree="call_argument [21315,21321]" parent="call_expression [59660,59688]" at="4"/>
  <insert-node tree="): ) [59687,59688]" parent="call_expression [59660,59688]" at="5"/>
  <insert-tree tree="member_expression [59799,59811]" parent="call_expression [59799,59851]" at="0"/>
  <insert-node tree="(: ( [59811,59812]" parent="call_expression [59799,59851]" at="1"/>
  <insert-tree tree="call_argument [59812,59842]" parent="call_expression [59799,59851]" at="2"/>
  <insert-node tree=",: , [59842,59843]" parent="call_expression [59799,59851]" at="3"/>
  <move-tree tree="call_argument [76533,76539]" parent="call_expression [59799,59851]" at="4"/>
  <insert-node tree="): ) [59850,59851]" parent="call_expression [59799,59851]" at="5"/>
  <update-node tree="identifier: IUniswapV2Pair [79522,79536]" label="ethic"/>
  <update-node tree="identifier: owner [21899,21904]" label="ethicAmount"/>
  <insert-node tree="&gt;: &gt; [63845,63846]" parent="binary_expression [63833,63848]" at="1"/>
  <insert-node tree="number_literal: 0 [63847,63848]" parent="binary_expression [63833,63848]" at="2"/>
  <insert-tree tree="call_expression [63958,63969]" parent="binary_expression [63958,63984]" at="0"/>
  <insert-node tree="&gt;=: &gt;= [63970,63972]" parent="binary_expression [63958,63984]" at="1"/>
  <update-node tree="identifier: recovered [50708,50717]" label="ethicAmount"/>
  <insert-node tree="identifier: couponPremium [64126,64139]" parent="call_expression [64126,64152]" at="0"/>
  <insert-node tree="(: ( [64139,64140]" parent="call_expression [64126,64152]" at="1"/>
  <move-tree tree="call_argument [79305,79316]" parent="call_expression [64126,64152]" at="2"/>
  <insert-node tree="): ) [64151,64152]" parent="call_expression [64126,64152]" at="3"/>
  <update-node tree="identifier: allowance [53120,53129]" label="allowanceCoupons"/>
  <insert-node tree="identifier: decrementAllowanceCoupons [65827,65852]" parent="call_expression [65827,65920]" at="0"/>
  <move-tree tree="call_argument [53208,53214]" parent="call_expression [65827,65920]" at="3"/>
  <insert-tree tree="call_argument [65861,65871]" parent="call_expression [65827,65920]" at="4"/>
  <insert-node tree=",: , [65871,65872]" parent="call_expression [65827,65920]" at="5"/>
  <insert-node tree=",: , [65879,65880]" parent="call_expression [65827,65920]" at="7"/>
  <insert-tree tree="member_expression [67839,67851]" parent="call_expression [67839,67853]" at="0"/>
  <insert-tree tree="member_expression [69077,69086]" parent="call_expression [69077,69092]" at="0"/>
  <insert-node tree="(: ( [69086,69087]" parent="call_expression [69077,69092]" at="1"/>
  <move-tree tree="call_argument [68678,68682]" parent="call_expression [69077,69092]" at="2"/>
  <insert-node tree="): ) [69091,69092]" parent="call_expression [69077,69092]" at="3"/>
  <update-node tree="identifier: univ2 [81556,81561]" label="ethic"/>
  <move-tree tree="binary_expression [82495,82513]" parent="ternary_expression [72726,72844]" at="0"/>
  <insert-tree tree="call_expression [72820,72844]" parent="ternary_expression [72726,72844]" at="4"/>
  <insert-tree tree="member_expression [73330,73339]" parent="call_expression [73330,73368]" at="0"/>
  <insert-node tree="(: ( [73339,73340]" parent="call_expression [73330,73368]" at="1"/>
  <insert-node tree="call_argument [73340,73367]" parent="call_expression [73330,73368]" at="2"/>
  <insert-node tree="): ) [73367,73368]" parent="call_expression [73330,73368]" at="3"/>
  <update-node tree="identifier: balanceOfPhantom [83353,83369]" label="balanceOf"/>
  <insert-node tree="&gt;: &gt; [79395,79396]" parent="binary_expression [79373,79398]" at="1"/>
  <insert-node tree="number_literal: 0 [79397,79398]" parent="binary_expression [79373,79398]" at="2"/>
  <insert-tree tree="member_expression [79511,79523]" parent="call_expression [79511,79646]" at="0"/>
  <insert-node tree="(: ( [79523,79524]" parent="call_expression [79511,79646]" at="1"/>
  <insert-tree tree="call_argument [79541,79563]" parent="call_expression [79511,79646]" at="2"/>
  <insert-node tree=",: , [79563,79564]" parent="call_expression [79511,79646]" at="3"/>
  <insert-tree tree="call_argument [79581,79585]" parent="call_expression [79511,79646]" at="4"/>
  <insert-node tree=",: , [79585,79586]" parent="call_expression [79511,79646]" at="5"/>
  <move-tree tree="call_argument [24991,25024]" parent="call_expression [79511,79646]" at="6"/>
  <insert-node tree="): ) [79645,79646]" parent="call_expression [79511,79646]" at="7"/>
  <update-node tree="identifier: require [25923,25930]" label="decrementRejectFor"/>
  <insert-tree tree="call_argument [80240,80249]" parent="call_expression [80221,80289]" at="2"/>
  <insert-tree tree="call_argument [80251,80257]" parent="call_expression [80221,80289]" at="4"/>
  <insert-node tree=",: , [80257,80258]" parent="call_expression [80221,80289]" at="5"/>
  <update-node tree="identifier: require [25215,25222]" label="decrementApproveFor"/>
  <insert-tree tree="call_argument [80387,80396]" parent="call_expression [80367,80437]" at="2"/>
  <insert-tree tree="call_argument [80398,80404]" parent="call_expression [80367,80437]" at="4"/>
  <insert-node tree=",: , [80404,80405]" parent="call_expression [80367,80437]" at="5"/>
  <insert-node tree="member_expression [81211,81242]" parent="call_expression [81211,81279]" at="0"/>
  <insert-node tree="(: ( [81242,81243]" parent="call_expression [81211,81279]" at="1"/>
  <insert-tree tree="call_argument [81243,81278]" parent="call_expression [81211,81279]" at="2"/>
  <insert-node tree="): ) [81278,81279]" parent="call_expression [81211,81279]" at="3"/>
  <insert-tree tree="call_expression [82330,82351]" parent="binary_expression [82330,82374]" at="0"/>
  <insert-node tree="&gt;: &gt; [82352,82353]" parent="binary_expression [82330,82374]" at="1"/>
  <insert-tree tree="call_expression [82354,82374]" parent="binary_expression [82330,82374]" at="2"/>
  <update-node tree="identifier: balanceOfBonded [74307,74322]" label="balanceOf"/>
  <insert-node tree="call_expression [19886,19934]" parent="member_expression [19886,19938]" at="0"/>
  <insert-node tree=".: . [19934,19935]" parent="member_expression [19886,19938]" at="1"/>
  <insert-node tree="identifier: mul [19935,19938]" parent="member_expression [19886,19938]" at="2"/>
  <insert-node tree="call_expression [58870,58891]" parent="call_argument [58870,58891]" at="0"/>
  <move-tree tree="call_expression [73225,73279]" parent="member_expression [59224,59296]" at="0"/>
  <update-node tree="identifier: balanceOf [85084,85093]" label="mint"/>
  <update-node tree="identifier: getPoolExitLockupEpochs [78103,78126]" label="getCouponExpiration"/>
  <insert-tree tree="member_expression [65785,65795]" parent="call_argument [65785,65795]" at="0"/>
  <move-tree tree="call_expression [83073,83100]" parent="call_argument [73340,73367]" at="0"/>
  <update-node tree="identifier: totalRewardedWithPhantom [84499,84523]" label="value"/>
  <insert-tree tree="call_expression [73915,73928]" parent="call_argument [73915,73928]" at="0"/>
  <update-node tree="identifier: balanceOfRewarded [84187,84204]" label="balanceOf"/>
  <insert-node tree="binary_expression [81211,81238]" parent="member_expression [81211,81242]" at="0"/>
  <insert-node tree=".: . [81238,81239]" parent="member_expression [81211,81242]" at="1"/>
  <insert-node tree="identifier: add [81239,81242]" parent="member_expression [81211,81242]" at="2"/>
  <insert-node tree="identifier: effectivePremium [19886,19902]" parent="call_expression [19886,19934]" at="0"/>
  <insert-node tree="(: ( [19902,19903]" parent="call_expression [19886,19934]" at="1"/>
  <insert-tree tree="call_argument [19903,19914]" parent="call_expression [19886,19934]" at="2"/>
  <insert-node tree=",: , [19914,19915]" parent="call_expression [19886,19934]" at="3"/>
  <insert-tree tree="call_argument [19916,19925]" parent="call_expression [19886,19934]" at="4"/>
  <insert-node tree=",: , [19925,19926]" parent="call_expression [19886,19934]" at="5"/>
  <move-tree tree="call_argument [22490,22496]" parent="call_expression [19886,19934]" at="6"/>
  <insert-node tree="): ) [19933,19934]" parent="call_expression [19886,19934]" at="7"/>
  <insert-node tree="member_expression [58870,58889]" parent="call_expression [58870,58891]" at="0"/>
  <insert-node tree="(: ( [58889,58890]" parent="call_expression [58870,58891]" at="1"/>
  <insert-node tree="): ) [58890,58891]" parent="call_expression [58870,58891]" at="2"/>
  <update-node tree="identifier: totalBonded [85130,85141]" label="totalRedeemable"/>
  <update-node tree="identifier: univ2 [85076,85081]" label="ethic"/>
  <insert-node tree="identifier: value [72759,72764]" parent="member_expression [72759,72768]" at="0"/>
  <move-tree tree="call_expression [82551,82586]" parent="call_argument [72769,72804]" at="0"/>
  <update-node tree="identifier: totalRewarded [84412,84425]" label="startFor"/>
  <insert-tree tree="call_argument [81022,81031]" parent="call_expression [81013,81032]" at="2"/>
  <update-node tree="identifier: totalPhantom [84432,84444]" label="periodFor"/>
  <insert-tree tree="call_argument [81047,81056]" parent="call_expression [81037,81057]" at="2"/>
  <insert-tree tree="call_expression [81211,81218]" parent="binary_expression [81211,81238]" at="0"/>
  <insert-node tree="&lt;=: &lt;= [81219,81221]" parent="binary_expression [81211,81238]" at="1"/>
  <insert-node tree="call_expression [81222,81238]" parent="binary_expression [81211,81238]" at="2"/>
  <move-tree tree="call_expression [79094,79101]" parent="member_expression [58870,58889]" at="0"/>
  <insert-node tree=".: . [58877,58878]" parent="member_expression [58870,58889]" at="1"/>
  <insert-node tree="identifier: totalSupply [58878,58889]" parent="member_expression [58870,58889]" at="2"/>
  <insert-node tree="binary_expression [59224,59273]" parent="member_expression [59224,59277]" at="0"/>
  <update-node tree="identifier: sub [73258,73261]" label="add"/>
  <move-tree tree="call_expression [85112,85125]" parent="call_argument [59278,59291]" at="0"/>
  <insert-tree tree="member_expression [81222,81235]" parent="call_expression [81222,81238]" at="0"/>
  <insert-node tree="(: ( [81235,81236]" parent="call_expression [81222,81238]" at="1"/>
  <move-tree tree="call_argument [57332,57333]" parent="call_expression [81222,81238]" at="2"/>
  <insert-node tree="): ) [81237,81238]" parent="call_expression [81222,81238]" at="3"/>
  <move-tree tree="call_expression [73225,73257]" parent="binary_expression [59224,59273]" at="0"/>
  <insert-node tree="&gt;=: &gt;= [59257,59259]" parent="binary_expression [59224,59273]" at="1"/>
  <move-tree tree="call_expression [83937,83950]" parent="binary_expression [59224,59273]" at="2"/>
  <delete-node tree="contract: contract [10696,10704]"/>
  <delete-node tree="identifier: Context [10705,10712]"/>
  <delete-node tree="{: { [10713,10714]"/>
  <delete-node tree="comment: // Empty internal constructor, to prevent people from mistakenly deploying [10719,10793]"/>
  <delete-node tree="comment: // an instance of this contract, which should be used via inheritance. [10798,10868]"/>
  <delete-tree tree="constructor_definition [10873,10900]"/>
  <delete-node tree="comment: // solhint-disable-previous-line no-empty-blocks [10905,10953]"/>
  <delete-node tree="function: function [10959,10967]"/>
  <delete-node tree="identifier: _msgSender [10968,10978]"/>
  <delete-node tree="(: ( [10978,10979]"/>
  <delete-node tree="): ) [10979,10980]"/>
  <delete-tree tree="state_mutability [10990,10994]"/>
  <delete-tree tree="return_type_definition [10995,11020]"/>
  <delete-node tree="{: { [11021,11022]"/>
  <delete-node tree="return: return [11031,11037]"/>
  <delete-node tree="return_statement [11031,11049]"/>
  <delete-node tree="}: } [11054,11055]"/>
  <delete-node tree="function_body [11021,11055]"/>
  <delete-node tree="function_definition [10959,11055]"/>
  <delete-node tree="function: function [11061,11069]"/>
  <delete-node tree="identifier: _msgData [11070,11078]"/>
  <delete-node tree="(: ( [11078,11079]"/>
  <delete-node tree="): ) [11079,11080]"/>
  <delete-tree tree="state_mutability [11090,11094]"/>
  <delete-tree tree="return_type_definition [11095,11117]"/>
  <delete-tree tree="function_body [11118,11283]"/>
  <delete-node tree="function_definition [11061,11283]"/>
  <delete-node tree="}: } [11284,11285]"/>
  <delete-node tree="contract_body [10713,11285]"/>
  <delete-node tree="contract_declaration [10696,11285]"/>
  <delete-node tree="contract: contract [22758,22766]"/>
  <delete-node tree="identifier: ERC20Burnable [22767,22780]"/>
  <delete-node tree="is: is [22781,22783]"/>
  <delete-tree tree="inheritance_specifier [22784,22791]"/>
  <delete-node tree=",: , [22791,22792]"/>
  <delete-tree tree="inheritance_specifier [22793,22798]"/>
  <delete-node tree="{: { [22799,22800]"/>
  <delete-node tree="comment: /**      * @dev Destroys `amount` tokens from the caller.      *      * See {ERC20-_burn}.      */ [22805,22903]"/>
  <delete-node tree="function: function [22908,22916]"/>
  <delete-node tree="identifier: burn [22917,22921]"/>
  <delete-node tree="(: ( [22921,22922]"/>
  <delete-node tree="): ) [22936,22937]"/>
  <delete-tree tree="visibility [22938,22944]"/>
  <delete-node tree="{: { [22945,22946]"/>
  <delete-node tree="identifier: _burn [22955,22960]"/>
  <delete-node tree="(: ( [22960,22961]"/>
  <delete-tree tree="call_argument [22961,22973]"/>
  <delete-node tree=",: , [22973,22974]"/>
  <delete-node tree="): ) [22981,22982]"/>
  <delete-node tree="call_expression [22955,22982]"/>
  <delete-node tree="expression_statement [22955,22983]"/>
  <delete-node tree="}: } [22988,22989]"/>
  <delete-node tree="function_body [22945,22989]"/>
  <delete-node tree="function_definition [22908,22989]"/>
  <delete-node tree="comment: /**      * @dev See {ERC20-_burnFrom}.      */ [22995,23041]"/>
  <delete-node tree="}: } [23148,23149]"/>
  <delete-node tree="contract_body [22799,23149]"/>
  <delete-node tree="contract_declaration [22758,23149]"/>
  <delete-node tree="contract: contract [23211,23219]"/>
  <delete-node tree="identifier: ERC20Detailed [23220,23233]"/>
  <delete-node tree="is: is [23234,23236]"/>
  <delete-tree tree="inheritance_specifier [23237,23243]"/>
  <delete-node tree="{: { [23244,23245]"/>
  <delete-tree tree="type_name [23250,23256]"/>
  <delete-node tree="identifier: _name [23265,23270]"/>
  <delete-node tree="state_variable_declaration [23250,23271]"/>
  <delete-tree tree="type_name [23276,23282]"/>
  <delete-node tree="identifier: _symbol [23291,23298]"/>
  <delete-node tree="state_variable_declaration [23276,23299]"/>
  <delete-tree tree="type_name [23304,23309]"/>
  <delete-node tree="identifier: _decimals [23318,23327]"/>
  <delete-node tree="state_variable_declaration [23304,23328]"/>
  <delete-node tree="comment: /**      * @dev Sets the values for `name`, `symbol`, and `decimals`. All three of      * these values are immutable: they can only be set once during      * construction.      */ [23334,23513]"/>
  <delete-tree tree="constructor_definition [23518,23681]"/>
  <delete-node tree="comment: /**      * @dev Returns the name of the token.      */ [23687,23741]"/>
  <delete-tree tree="function_definition [23746,23827]"/>
  <delete-node tree="comment: /**      * @dev Returns the symbol of the token, usually a shorter version of the      * name.      */ [23833,23935]"/>
  <delete-tree tree="function_definition [23940,24025]"/>
  <delete-node tree="comment: /**      * @dev Returns the number of decimals used to get its user representation.      * For example, if `decimals` equals `2`, a balance of `505` tokens should      * be displayed to a user as `5,05` (`505 / 10 ** 2`).      *      * Tokens usually opt for a value of 18, imitating the relationship between      * Ether and Wei.      *      * NOTE: This information is only used for _display_ purposes: it in      * no way affects any of the arithmetic of the contract, including      * {IERC20-balanceOf} and {IERC20-transfer}.      */ [24031,24569]"/>
  <delete-tree tree="function_definition [24574,24655]"/>
  <delete-node tree="}: } [24656,24657]"/>
  <delete-node tree="contract_body [23244,24657]"/>
  <delete-node tree="contract_declaration [23211,24657]"/>
  <delete-node tree="comment: /**  * @title Roles  * @dev Library for managing addresses assigned to a Role.  */ [24659,24741]"/>
  <delete-node tree="library: library [24742,24749]"/>
  <delete-node tree="identifier: Roles [24750,24755]"/>
  <delete-node tree="{: { [24756,24757]"/>
  <delete-tree tree="struct_declaration [24762,24823]"/>
  <delete-node tree="comment: /**      * @dev Give an account access to this role.      */ [24829,24889]"/>
  <delete-node tree="function: function [24894,24902]"/>
  <delete-node tree="identifier: add [24903,24906]"/>
  <delete-node tree="(: ( [24906,24907]"/>
  <delete-tree tree="parameter [24907,24924]"/>
  <delete-node tree=",: , [24924,24925]"/>
  <delete-tree tree="parameter [24926,24941]"/>
  <delete-node tree="): ) [24941,24942]"/>
  <delete-tree tree="visibility [24943,24951]"/>
  <delete-node tree="{: { [24952,24953]"/>
  <delete-node tree="identifier: require [24962,24969]"/>
  <delete-node tree="(: ( [24969,24970]"/>
  <delete-tree tree="call_argument [24970,24989]"/>
  <delete-node tree=",: , [24989,24990]"/>
  <delete-node tree="): ) [25024,25025]"/>
  <delete-node tree="call_expression [24962,25025]"/>
  <delete-node tree="expression_statement [24962,25026]"/>
  <delete-tree tree="expression_statement [25035,25063]"/>
  <delete-node tree="}: } [25068,25069]"/>
  <delete-node tree="function_body [24952,25069]"/>
  <delete-node tree="function_definition [24894,25069]"/>
  <delete-node tree="comment: /**      * @dev Remove an account's access to this role.      */ [25075,25139]"/>
  <delete-node tree="function: function [25144,25152]"/>
  <delete-node tree="identifier: remove [25153,25159]"/>
  <delete-node tree="(: ( [25159,25160]"/>
  <delete-tree tree="parameter [25160,25177]"/>
  <delete-node tree=",: , [25177,25178]"/>
  <delete-tree tree="parameter [25179,25194]"/>
  <delete-node tree="): ) [25194,25195]"/>
  <delete-tree tree="visibility [25196,25204]"/>
  <delete-node tree="{: { [25205,25206]"/>
  <delete-tree tree="expression_statement [25289,25318]"/>
  <delete-node tree="}: } [25323,25324]"/>
  <delete-node tree="function_body [25205,25324]"/>
  <delete-node tree="function_definition [25144,25324]"/>
  <delete-node tree="comment: /**      * @dev Check if an account has this role.      * @return bool      */ [25330,25408]"/>
  <delete-tree tree="function_definition [25413,25613]"/>
  <delete-node tree="}: } [25614,25615]"/>
  <delete-node tree="contract_body [24756,25615]"/>
  <delete-node tree="library_declaration [24742,25615]"/>
  <delete-node tree="contract: contract [25617,25625]"/>
  <delete-node tree="identifier: MinterRole [25626,25636]"/>
  <delete-node tree="is: is [25637,25639]"/>
  <delete-tree tree="inheritance_specifier [25640,25647]"/>
  <delete-node tree="{: { [25648,25649]"/>
  <delete-tree tree="using_directive [25654,25681]"/>
  <delete-node tree="event: event [25735,25740]"/>
  <delete-node tree="identifier: MinterRemoved [25741,25754]"/>
  <delete-node tree="(: ( [25754,25755]"/>
  <delete-node tree="): ) [25778,25779]"/>
  <delete-node tree="event_definition [25735,25780]"/>
  <delete-tree tree="type_name [25786,25796]"/>
  <delete-node tree="identifier: _minters [25805,25813]"/>
  <delete-node tree="state_variable_declaration [25786,25814]"/>
  <delete-tree tree="constructor_definition [25820,25885]"/>
  <delete-node tree="modifier: modifier [25891,25899]"/>
  <delete-node tree="identifier: onlyMinter [25900,25910]"/>
  <delete-node tree="(: ( [25910,25911]"/>
  <delete-node tree="): ) [25911,25912]"/>
  <delete-node tree="{: { [25913,25914]"/>
  <delete-tree tree="expression_statement [26016,26018]"/>
  <delete-node tree="}: } [26023,26024]"/>
  <delete-node tree="function_body [25913,26024]"/>
  <delete-node tree="modifier_definition [25891,26024]"/>
  <delete-node tree="function: function [26030,26038]"/>
  <delete-node tree="identifier: isMinter [26039,26047]"/>
  <delete-node tree="(: ( [26047,26048]"/>
  <delete-node tree="): ) [26063,26064]"/>
  <delete-tree tree="visibility [26065,26071]"/>
  <delete-tree tree="state_mutability [26072,26076]"/>
  <delete-tree tree="return_type_definition [26077,26091]"/>
  <delete-tree tree="function_body [26092,26137]"/>
  <delete-node tree="function_definition [26030,26137]"/>
  <delete-node tree="function: function [26143,26151]"/>
  <delete-node tree="identifier: addMinter [26152,26161]"/>
  <delete-node tree="(: ( [26161,26162]"/>
  <delete-node tree="): ) [26177,26178]"/>
  <delete-tree tree="visibility [26179,26185]"/>
  <delete-tree tree="modifier_invocation [26186,26196]"/>
  <delete-node tree="{: { [26197,26198]"/>
  <delete-node tree="identifier: _addMinter [26207,26217]"/>
  <delete-node tree="(: ( [26217,26218]"/>
  <delete-node tree="): ) [26225,26226]"/>
  <delete-node tree="call_expression [26207,26226]"/>
  <delete-node tree="expression_statement [26207,26227]"/>
  <delete-node tree="}: } [26232,26233]"/>
  <delete-node tree="function_body [26197,26233]"/>
  <delete-node tree="function_definition [26143,26233]"/>
  <delete-tree tree="function_definition [26239,26316]"/>
  <delete-node tree="function: function [26322,26330]"/>
  <delete-node tree="identifier: _addMinter [26331,26341]"/>
  <delete-node tree="(: ( [26341,26342]"/>
  <delete-tree tree="parameter [26342,26357]"/>
  <delete-node tree="): ) [26357,26358]"/>
  <delete-node tree="{: { [26368,26369]"/>
  <delete-tree tree="member_expression [26378,26390]"/>
  <delete-node tree="(: ( [26390,26391]"/>
  <delete-node tree="): ) [26398,26399]"/>
  <delete-node tree="call_expression [26378,26399]"/>
  <delete-node tree="expression_statement [26378,26400]"/>
  <delete-tree tree="emit_statement [26409,26435]"/>
  <delete-node tree="}: } [26440,26441]"/>
  <delete-node tree="function_body [26368,26441]"/>
  <delete-node tree="function_definition [26322,26441]"/>
  <delete-node tree="function: function [26447,26455]"/>
  <delete-node tree="identifier: _removeMinter [26456,26469]"/>
  <delete-node tree="(: ( [26469,26470]"/>
  <delete-tree tree="parameter [26470,26485]"/>
  <delete-node tree="): ) [26485,26486]"/>
  <delete-tree tree="function_body [26496,26574]"/>
  <delete-node tree="function_definition [26447,26574]"/>
  <delete-node tree="}: } [26575,26576]"/>
  <delete-node tree="contract_body [25648,26576]"/>
  <delete-node tree="contract_declaration [25617,26576]"/>
  <delete-node tree="comment: /*     Copyright 2019 dYdX Trading Inc.      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [26578,27177]"/>
  <delete-node tree="comment: /**  * @title Require  * @author dYdX  *  * Stringifies parameters to pretty-print revert messages. Costs more gas than regular require()  */ [27178,27319]"/>
  <delete-node tree="comment: /*     Copyright 2019 ZeroEx Intl.      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [36903,37497]"/>
  <delete-node tree="library: library [37498,37505]"/>
  <delete-node tree="identifier: LibEIP712 [37506,37515]"/>
  <delete-node tree="{: { [37516,37517]"/>
  <delete-node tree="comment: // Hash of the EIP712 Domain Separator Schema [37523,37568]"/>
  <delete-node tree="comment: // keccak256(abi.encodePacked( [37573,37603]"/>
  <delete-node tree="comment: //     &quot;EIP712Domain(&quot;, [37608,37631]"/>
  <delete-node tree="comment: //     &quot;string name,&quot;, [37636,37658]"/>
  <delete-node tree="comment: //     &quot;string version,&quot;, [37663,37688]"/>
  <delete-node tree="comment: //     &quot;uint256 chainId,&quot;, [37693,37719]"/>
  <delete-node tree="comment: //     &quot;address verifyingContract&quot;, [37724,37759]"/>
  <delete-node tree="comment: //     &quot;)&quot; [37764,37774]"/>
  <delete-node tree="comment: // )) [37779,37784]"/>
  <delete-tree tree="state_variable_declaration [37789,37921]"/>
  <delete-node tree="comment: /// @dev Calculates a EIP712 domain separator. [37927,37973]"/>
  <delete-node tree="comment: /// @param name The EIP712 domain name. [37978,38017]"/>
  <delete-node tree="comment: /// @param version The EIP712 domain version. [38022,38067]"/>
  <delete-node tree="comment: /// @param verifyingContract The EIP712 verifying contract. [38072,38131]"/>
  <delete-node tree="comment: /// @return EIP712 domain separator. [38136,38172]"/>
  <delete-node tree="function: function [38177,38185]"/>
  <delete-node tree="identifier: hashEIP712Domain [38186,38202]"/>
  <delete-node tree="(: ( [38202,38203]"/>
  <delete-tree tree="parameter [38212,38230]"/>
  <delete-node tree=",: , [38230,38231]"/>
  <delete-tree tree="parameter [38240,38261]"/>
  <delete-node tree=",: , [38261,38262]"/>
  <delete-node tree=",: , [38286,38287]"/>
  <delete-tree tree="parameter [38296,38321]"/>
  <delete-node tree="): ) [38326,38327]"/>
  <delete-tree tree="visibility [38332,38340]"/>
  <delete-tree tree="return_type_definition [38354,38378]"/>
  <delete-tree tree="function_body [38383,39412]"/>
  <delete-node tree="function_definition [38177,39412]"/>
  <delete-node tree="comment: /// @dev Calculates EIP712 encoding for a hash struct with a given domain hash. [39418,39497]"/>
  <delete-node tree="comment: /// @param eip712DomainHash Hash of the domain domain separator data, computed [39502,39580]"/>
  <delete-node tree="comment: ///                         with getDomainHash(). [39585,39634]"/>
  <delete-node tree="comment: /// @param hashStruct The EIP712 hash struct. [39639,39684]"/>
  <delete-node tree="comment: /// @return EIP712 hash applied to the given EIP712 Domain. [39689,39748]"/>
  <delete-node tree="function: function [39753,39761]"/>
  <delete-node tree="identifier: hashEIP712Message [39762,39779]"/>
  <delete-node tree="(: ( [39779,39780]"/>
  <delete-tree tree="parameter [39780,39804]"/>
  <delete-node tree=",: , [39804,39805]"/>
  <delete-tree tree="parameter [39806,39824]"/>
  <delete-node tree="): ) [39824,39825]"/>
  <delete-tree tree="visibility [39830,39838]"/>
  <delete-tree tree="return_type_definition [39852,39876]"/>
  <delete-tree tree="function_body [39881,40623]"/>
  <delete-node tree="function_definition [39753,40623]"/>
  <delete-node tree="}: } [40624,40625]"/>
  <delete-node tree="contract_body [37516,40625]"/>
  <delete-node tree="library_declaration [37498,40625]"/>
  <delete-node tree="comment: /*     Copyright 2021 Ethic Money Devs ,devs@ethic.money&gt; and Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [48812,49495]"/>
  <delete-node tree="contract: contract [49496,49504]"/>
  <delete-node tree="identifier: Permittable [49505,49516]"/>
  <delete-node tree="is: is [49517,49519]"/>
  <delete-tree tree="inheritance_specifier [49520,49533]"/>
  <delete-node tree=",: , [49533,49534]"/>
  <delete-tree tree="inheritance_specifier [49535,49540]"/>
  <delete-node tree="{: { [49541,49542]"/>
  <delete-tree tree="state_variable_declaration [49547,49585]"/>
  <delete-node tree="comment: // keccak256(&quot;Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)&quot;); [49591,49690]"/>
  <delete-tree tree="state_variable_declaration [49695,49811]"/>
  <delete-tree tree="type_name [49816,49822]"/>
  <delete-node tree="constant: constant [49831,49839]"/>
  <delete-node tree="identifier: EIP712_VERSION [49840,49854]"/>
  <delete-node tree="=: = [49855,49856]"/>
  <delete-tree tree="string_literal [49857,49860]"/>
  <delete-node tree="state_variable_declaration [49816,49861]"/>
  <delete-tree tree="state_variable_declaration [49867,49906]"/>
  <delete-node tree="mapping: mapping [49912,49919]"/>
  <delete-node tree="(: ( [49919,49920]"/>
  <delete-tree tree="primitive_type [49920,49927]"/>
  <delete-node tree="=&gt;: =&gt; [49928,49930]"/>
  <delete-node tree="): ) [49938,49939]"/>
  <delete-node tree="type_name [49912,49939]"/>
  <delete-node tree="identifier: nonces [49940,49946]"/>
  <delete-node tree="state_variable_declaration [49912,49947]"/>
  <delete-node tree="constructor: constructor [49953,49964]"/>
  <delete-node tree="(: ( [49964,49965]"/>
  <delete-node tree="): ) [49965,49966]"/>
  <delete-node tree="public: public [49967,49973]"/>
  <delete-node tree="constructor_definition [49953,50106]"/>
  <delete-node tree="function: function [50112,50120]"/>
  <delete-node tree="identifier: permit [50121,50127]"/>
  <delete-node tree="(: ( [50127,50128]"/>
  <delete-tree tree="parameter [50137,50150]"/>
  <delete-node tree=",: , [50150,50151]"/>
  <delete-tree tree="parameter [50160,50175]"/>
  <delete-node tree=",: , [50175,50176]"/>
  <delete-node tree=",: , [50198,50199]"/>
  <delete-node tree=",: , [50224,50225]"/>
  <delete-tree tree="parameter [50234,50241]"/>
  <delete-node tree=",: , [50241,50242]"/>
  <delete-tree tree="parameter [50251,50260]"/>
  <delete-node tree=",: , [50260,50261]"/>
  <delete-tree tree="parameter [50270,50279]"/>
  <delete-node tree="): ) [50284,50285]"/>
  <delete-node tree="{: { [50295,50296]"/>
  <delete-tree tree="variable_declaration_statement [50305,50616]"/>
  <delete-tree tree="variable_declaration_statement [50626,50673]"/>
  <delete-node tree="(: ( [50810,50811]"/>
  <delete-tree tree="call_argument [50824,50847]"/>
  <delete-node tree=",: , [50847,50848]"/>
  <delete-node tree=",: , [50865,50866]"/>
  <delete-node tree="): ) [50902,50903]"/>
  <delete-node tree="call_expression [50798,50903]"/>
  <delete-node tree="expression_statement [50798,50904]"/>
  <delete-node tree="identifier: _approve [51017,51025]"/>
  <delete-node tree="(: ( [51025,51026]"/>
  <delete-tree tree="call_argument [51026,51031]"/>
  <delete-node tree=",: , [51031,51032]"/>
  <delete-node tree=",: , [51040,51041]"/>
  <delete-node tree="): ) [51047,51048]"/>
  <delete-node tree="call_expression [51017,51048]"/>
  <delete-node tree="expression_statement [51017,51049]"/>
  <delete-node tree="}: } [51054,51055]"/>
  <delete-node tree="function_body [50295,51055]"/>
  <delete-node tree="function_definition [50112,51055]"/>
  <delete-node tree="}: } [51056,51057]"/>
  <delete-node tree="contract_body [49541,51057]"/>
  <delete-node tree="contract_declaration [49496,51057]"/>
  <delete-node tree="contract: contract [52637,52645]"/>
  <delete-node tree="identifier: Ethic [52646,52651]"/>
  <delete-node tree="is: is [52652,52654]"/>
  <delete-tree tree="inheritance_specifier [52655,52661]"/>
  <delete-node tree=",: , [52661,52662]"/>
  <delete-tree tree="inheritance_specifier [52663,52673]"/>
  <delete-node tree=",: , [52673,52674]"/>
  <delete-tree tree="inheritance_specifier [52675,52688]"/>
  <delete-node tree=",: , [52688,52689]"/>
  <delete-tree tree="inheritance_specifier [52690,52701]"/>
  <delete-node tree=",: , [52701,52702]"/>
  <delete-tree tree="inheritance_specifier [52703,52716]"/>
  <delete-node tree="{: { [52717,52718]"/>
  <delete-tree tree="constructor_definition [52724,52813]"/>
  <delete-node tree="function: function [52965,52973]"/>
  <delete-node tree="identifier: transferFrom [52974,52986]"/>
  <delete-node tree="(: ( [52986,52987]"/>
  <delete-tree tree="parameter [52987,53001]"/>
  <delete-node tree=",: , [53001,53002]"/>
  <delete-tree tree="parameter [53003,53020]"/>
  <delete-node tree=",: , [53020,53021]"/>
  <delete-node tree="): ) [53036,53037]"/>
  <delete-tree tree="return_type_definition [53045,53059]"/>
  <delete-node tree="{: { [53060,53061]"/>
  <delete-node tree="identifier: _transfer [53070,53079]"/>
  <delete-node tree="(: ( [53079,53080]"/>
  <delete-node tree=",: , [53086,53087]"/>
  <delete-node tree=",: , [53097,53098]"/>
  <delete-node tree="): ) [53105,53106]"/>
  <delete-node tree="call_expression [53070,53106]"/>
  <delete-node tree="expression_statement [53070,53107]"/>
  <delete-tree tree="return_statement [53370,53382]"/>
  <delete-node tree="}: } [53387,53388]"/>
  <delete-node tree="function_body [53060,53388]"/>
  <delete-node tree="function_definition [52965,53388]"/>
  <delete-node tree="}: } [53389,53390]"/>
  <delete-node tree="contract_body [52717,53390]"/>
  <delete-node tree="contract_declaration [52637,53390]"/>
  <delete-node tree="interface: interface [53392,53401]"/>
  <delete-node tree="identifier: IUniswapV2Factory [53402,53419]"/>
  <delete-node tree="{: { [53420,53421]"/>
  <delete-tree tree="function_definition [53518,53567]"/>
  <delete-tree tree="function_definition [53572,53627]"/>
  <delete-tree tree="function_definition [53633,53719]"/>
  <delete-tree tree="function_definition [53724,53785]"/>
  <delete-tree tree="function_definition [53790,53845]"/>
  <delete-tree tree="function_definition [53851,53935]"/>
  <delete-tree tree="function_definition [53941,53977]"/>
  <delete-tree tree="function_definition [53982,54024]"/>
  <delete-node tree="}: } [54025,54026]"/>
  <delete-node tree="contract_body [53420,54026]"/>
  <delete-node tree="interface_declaration [53392,54026]"/>
  <delete-node tree="comment: // computes square roots using the babylonian method [56427,56479]"/>
  <delete-node tree="comment: // https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method [56480,56564]"/>
  <delete-node tree="library: library [56565,56572]"/>
  <delete-node tree="identifier: Babylonian [56573,56583]"/>
  <delete-node tree="{: { [56584,56585]"/>
  <delete-node tree="function: function [56590,56598]"/>
  <delete-node tree="identifier: sqrt [56599,56603]"/>
  <delete-node tree="(: ( [56603,56604]"/>
  <delete-tree tree="parameter [56604,56610]"/>
  <delete-node tree="): ) [56610,56611]"/>
  <delete-tree tree="visibility [56612,56620]"/>
  <delete-tree tree="return_type_definition [56626,56642]"/>
  <delete-tree tree="function_body [56643,56904]"/>
  <delete-node tree="function_definition [56590,56904]"/>
  <delete-node tree="}: } [56905,56906]"/>
  <delete-node tree="contract_body [56584,56906]"/>
  <delete-node tree="library_declaration [56565,56906]"/>
  <delete-node tree="comment: // a library for handling binary fixed point numbers (https://en.wikipedia.org/wiki/Q_(number_format)) [56908,57010]"/>
  <delete-node tree="library: library [57011,57018]"/>
  <delete-node tree="identifier: FixedPoint [57019,57029]"/>
  <delete-node tree="{: { [57030,57031]"/>
  <delete-node tree="comment: // range: [0, 2**112 - 1] [57036,57061]"/>
  <delete-node tree="comment: // resolution: 1 / 2**112 [57066,57091]"/>
  <delete-tree tree="struct_declaration [57096,57140]"/>
  <delete-node tree="comment: // range: [0, 2**144 - 1] [57146,57171]"/>
  <delete-node tree="comment: // resolution: 1 / 2**112 [57176,57201]"/>
  <delete-tree tree="struct_declaration [57206,57247]"/>
  <delete-tree tree="state_variable_declaration [57253,57293]"/>
  <delete-tree tree="type_name [57298,57302]"/>
  <delete-tree tree="visibility [57303,57310]"/>
  <delete-node tree="constant: constant [57311,57319]"/>
  <delete-node tree="identifier: Q112 [57320,57324]"/>
  <delete-node tree="=: = [57325,57326]"/>
  <delete-tree tree="primitive_type [57327,57331]"/>
  <delete-node tree="(: ( [57331,57332]"/>
  <delete-node tree="): ) [57333,57334]"/>
  <delete-node tree="type_cast_expression [57327,57334]"/>
  <delete-node tree="&lt;&lt;: &lt;&lt; [57335,57337]"/>
  <delete-node tree="identifier: RESOLUTION [57338,57348]"/>
  <delete-node tree="binary_expression [57327,57348]"/>
  <delete-node tree="state_variable_declaration [57298,57349]"/>
  <delete-tree tree="state_variable_declaration [57354,57402]"/>
  <delete-node tree="comment: // encode a uint112 as a UQ112x112 [57408,57442]"/>
  <delete-node tree="function: function [57447,57455]"/>
  <delete-node tree="identifier: encode [57456,57462]"/>
  <delete-node tree="(: ( [57462,57463]"/>
  <delete-tree tree="parameter [57463,57472]"/>
  <delete-node tree="): ) [57472,57473]"/>
  <delete-tree tree="visibility [57474,57482]"/>
  <delete-tree tree="return_type_definition [57488,57514]"/>
  <delete-tree tree="function_body [57515,57574]"/>
  <delete-node tree="function_definition [57447,57574]"/>
  <delete-node tree="comment: // encodes a uint144 as a UQ144x112 [57580,57615]"/>
  <delete-tree tree="function_definition [57620,57750]"/>
  <delete-node tree="comment: // divide a UQ112x112 by a uint112, returning a UQ112x112 [57756,57813]"/>
  <delete-tree tree="function_definition [57818,58013]"/>
  <delete-node tree="comment: // multiply a UQ112x112 by a uint, returning a UQ144x112 [58019,58075]"/>
  <delete-node tree="comment: // reverts on overflow [58080,58102]"/>
  <delete-node tree="function: function [58107,58115]"/>
  <delete-node tree="identifier: mul [58116,58119]"/>
  <delete-node tree="(: ( [58119,58120]"/>
  <delete-tree tree="parameter [58120,58141]"/>
  <delete-node tree=",: , [58141,58142]"/>
  <delete-tree tree="parameter [58143,58149]"/>
  <delete-node tree="): ) [58149,58150]"/>
  <delete-tree tree="visibility [58151,58159]"/>
  <delete-tree tree="state_mutability [58160,58164]"/>
  <delete-tree tree="return_type_definition [58165,58191]"/>
  <delete-node tree="{: { [58192,58193]"/>
  <delete-tree tree="variable_declaration_statement [58202,58209]"/>
  <delete-node tree="identifier: require [58218,58225]"/>
  <delete-node tree="(: ( [58225,58226]"/>
  <delete-tree tree="call_argument [58226,58280]"/>
  <delete-node tree=",: , [58280,58281]"/>
  <delete-node tree="): ) [58319,58320]"/>
  <delete-node tree="call_expression [58218,58320]"/>
  <delete-node tree="expression_statement [58218,58321]"/>
  <delete-tree tree="return_statement [58330,58350]"/>
  <delete-node tree="}: } [58355,58356]"/>
  <delete-node tree="function_body [58192,58356]"/>
  <delete-node tree="function_definition [58107,58356]"/>
  <delete-node tree="comment: // returns a UQ112x112 which represents the ratio of the numerator to the denominator [58362,58447]"/>
  <delete-node tree="comment: // equivalent to encode(numerator).div(denominator) [58452,58503]"/>
  <delete-node tree="function: function [58508,58516]"/>
  <delete-node tree="identifier: fraction [58517,58525]"/>
  <delete-node tree="(: ( [58525,58526]"/>
  <delete-tree tree="parameter [58526,58543]"/>
  <delete-node tree=",: , [58543,58544]"/>
  <delete-tree tree="parameter [58545,58564]"/>
  <delete-node tree="): ) [58564,58565]"/>
  <delete-tree tree="visibility [58566,58574]"/>
  <delete-tree tree="state_mutability [58575,58579]"/>
  <delete-tree tree="return_type_definition [58580,58606]"/>
  <delete-node tree="{: { [58607,58608]"/>
  <delete-tree tree="return_statement [58678,58745]"/>
  <delete-node tree="}: } [58750,58751]"/>
  <delete-node tree="function_body [58607,58751]"/>
  <delete-node tree="function_definition [58508,58751]"/>
  <delete-node tree="comment: // decode a UQ112x112 into a uint112 by truncating after the radix point [58757,58829]"/>
  <delete-tree tree="function_definition [58834,58959]"/>
  <delete-node tree="comment: // decode a UQ144x112 into a uint144 by truncating after the radix point [58965,59037]"/>
  <delete-tree tree="function_definition [59042,59170]"/>
  <delete-node tree="comment: // take the reciprocal of a UQ112x112 [59176,59213]"/>
  <delete-tree tree="function_definition [59218,59422]"/>
  <delete-node tree="comment: // square root of a UQ112x112 [59428,59457]"/>
  <delete-tree tree="function_definition [59462,59623]"/>
  <delete-node tree="}: } [59624,59625]"/>
  <delete-node tree="contract_body [57030,59625]"/>
  <delete-node tree="library_declaration [57011,59625]"/>
  <delete-node tree="comment: // library with helper methods for oracles that are concerned with computing average prices [59627,59718]"/>
  <delete-node tree="library: library [59719,59726]"/>
  <delete-node tree="identifier: UniswapV2OracleLibrary [59727,59749]"/>
  <delete-node tree="{: { [59750,59751]"/>
  <delete-tree tree="using_directive [59756,59779]"/>
  <delete-node tree="comment: // helper function that returns the current block timestamp within the range of uint32, i.e. [0, 2**32 - 1] [59785,59892]"/>
  <delete-node tree="function: function [59897,59905]"/>
  <delete-node tree="identifier: currentBlockTimestamp [59906,59927]"/>
  <delete-node tree="(: ( [59927,59928]"/>
  <delete-node tree="): ) [59928,59929]"/>
  <delete-tree tree="visibility [59930,59938]"/>
  <delete-tree tree="state_mutability [59939,59943]"/>
  <delete-tree tree="return_type_definition [59944,59960]"/>
  <delete-node tree="{: { [59961,59962]"/>
  <delete-node tree="return: return [59971,59977]"/>
  <delete-tree tree="primitive_type [59978,59984]"/>
  <delete-node tree="(: ( [59984,59985]"/>
  <delete-node tree="): ) [60010,60011]"/>
  <delete-node tree="type_cast_expression [59978,60011]"/>
  <delete-node tree="return_statement [59971,60012]"/>
  <delete-node tree="}: } [60017,60018]"/>
  <delete-node tree="function_body [59961,60018]"/>
  <delete-node tree="function_definition [59897,60018]"/>
  <delete-node tree="comment: // produces the cumulative price using counterfactuals to save gas and avoid a call to sync. [60024,60116]"/>
  <delete-tree tree="function_definition [60121,61159]"/>
  <delete-node tree="}: } [61160,61161]"/>
  <delete-node tree="contract_body [59750,61161]"/>
  <delete-node tree="library_declaration [59719,61161]"/>
  <delete-tree tree="library_declaration [61163,63099]"/>
  <delete-node tree="comment: /*     Copyright 2021 Ethic Money Devs &lt;devs@ethic.money&gt; and Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at          http://www.apache.org/licenses/LICENSE-2.0          Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [63956,64647]"/>
  <delete-node tree="contract: contract [64648,64656]"/>
  <delete-node tree="identifier: IDAI [64657,64661]"/>
  <delete-node tree="{: { [64662,64663]"/>
  <delete-node tree="function: function [64668,64676]"/>
  <delete-node tree="identifier: isBlacklisted [64677,64690]"/>
  <delete-node tree="(: ( [64690,64691]"/>
  <delete-node tree="): ) [64707,64708]"/>
  <delete-tree tree="return_type_definition [64723,64737]"/>
  <delete-node tree="function_definition [64668,64738]"/>
  <delete-node tree="}: } [64739,64740]"/>
  <delete-node tree="contract_body [64662,64740]"/>
  <delete-node tree="contract_declaration [64648,64740]"/>
  <delete-node tree="contract: contract [65426,65434]"/>
  <delete-node tree="identifier: Oracle [65435,65441]"/>
  <delete-node tree="is: is [65442,65444]"/>
  <delete-tree tree="inheritance_specifier [65445,65452]"/>
  <delete-node tree="{: { [65453,65454]"/>
  <delete-node tree="constant: constant [65558,65566]"/>
  <delete-node tree="identifier: UNISWAP_FACTORY [65567,65582]"/>
  <delete-node tree="=: = [65583,65584]"/>
  <delete-tree tree="type_cast_expression [65585,65636]"/>
  <delete-node tree="state_variable_declaration [65542,65637]"/>
  <delete-tree tree="visibility [65651,65659]"/>
  <delete-node tree="identifier: _dao [65660,65664]"/>
  <delete-node tree="state_variable_declaration [65643,65665]"/>
  <delete-tree tree="visibility [65678,65686]"/>
  <delete-node tree="identifier: _ethic [65687,65693]"/>
  <delete-node tree="state_variable_declaration [65670,65694]"/>
  <delete-tree tree="state_variable_declaration [65700,65727]"/>
  <delete-tree tree="state_variable_declaration [65732,65762]"/>
  <delete-tree tree="visibility [65775,65783]"/>
  <delete-node tree="identifier: _index [65784,65790]"/>
  <delete-node tree="state_variable_declaration [65767,65791]"/>
  <delete-tree tree="visibility [65804,65812]"/>
  <delete-node tree="identifier: _cumulative [65813,65824]"/>
  <delete-node tree="state_variable_declaration [65796,65825]"/>
  <delete-tree tree="state_variable_declaration [65830,65857]"/>
  <delete-tree tree="visibility [65871,65879]"/>
  <delete-node tree="identifier: _reserve [65880,65888]"/>
  <delete-node tree="state_variable_declaration [65863,65889]"/>
  <delete-tree tree="constructor_definition [65895,65988]"/>
  <delete-node tree="function: function [65994,66002]"/>
  <delete-node tree="identifier: setup [66003,66008]"/>
  <delete-node tree="(: ( [66008,66009]"/>
  <delete-node tree="): ) [66009,66010]"/>
  <delete-tree tree="visibility [66011,66017]"/>
  <delete-tree tree="modifier_invocation [66018,66025]"/>
  <delete-node tree="{: { [66026,66027]"/>
  <delete-tree tree="expression_statement [66036,66121]"/>
  <delete-tree tree="variable_declaration_statement [66131,66199]"/>
  <delete-tree tree="expression_statement [66208,66242]"/>
  <delete-node tree="}: } [66374,66375]"/>
  <delete-node tree="function_body [66026,66375]"/>
  <delete-node tree="function_definition [65994,66375]"/>
  <delete-node tree="comment: /**      * Trades/Liquidity: (1) Initializes reserve and blockTimestampLast (can calculate a price)      *                   (2) Has non-zero cumulative prices      *      * Steps: (1) Captures a reference blockTimestampLast      *        (2) First reported value      */ [66381,66652]"/>
  <delete-node tree="function: function [66657,66665]"/>
  <delete-node tree="identifier: capture [66666,66673]"/>
  <delete-node tree="(: ( [66673,66674]"/>
  <delete-node tree="): ) [66674,66675]"/>
  <delete-tree tree="visibility [66676,66682]"/>
  <delete-tree tree="modifier_invocation [66683,66690]"/>
  <delete-node tree="returns: returns [66691,66698]"/>
  <delete-node tree="(: ( [66699,66700]"/>
  <delete-node tree=",: , [66719,66720]"/>
  <delete-tree tree="parameter [66721,66725]"/>
  <delete-node tree="): ) [66725,66726]"/>
  <delete-node tree="return_type_definition [66691,66726]"/>
  <delete-node tree="{: { [66727,66728]"/>
  <delete-node tree="}: } [66898,66899]"/>
  <delete-node tree="function_body [66727,66899]"/>
  <delete-node tree="function_definition [66657,66899]"/>
  <delete-node tree="function: function [66905,66913]"/>
  <delete-node tree="identifier: initializeOracle [66914,66930]"/>
  <delete-node tree="(: ( [66930,66931]"/>
  <delete-node tree="): ) [66931,66932]"/>
  <delete-node tree="{: { [66941,66942]"/>
  <delete-tree tree="variable_declaration_statement [66951,66979]"/>
  <delete-node tree="=: = [67012,67013]"/>
  <delete-tree tree="ternary_expression [67014,67109]"/>
  <delete-node tree="variable_declaration_statement [66988,67110]"/>
  <delete-tree tree="variable_declaration_statement [67119,67204]"/>
  <delete-tree tree="if_statement [67213,67490]"/>
  <delete-node tree="}: } [67495,67496]"/>
  <delete-node tree="function_body [66941,67496]"/>
  <delete-node tree="function_definition [66905,67496]"/>
  <delete-node tree="function: function [67502,67510]"/>
  <delete-node tree="identifier: updateOracle [67511,67523]"/>
  <delete-node tree="(: ( [67523,67524]"/>
  <delete-node tree="): ) [67524,67525]"/>
  <delete-node tree="returns: returns [67534,67541]"/>
  <delete-node tree="(: ( [67542,67543]"/>
  <delete-node tree=",: , [67562,67563]"/>
  <delete-tree tree="parameter [67564,67568]"/>
  <delete-node tree="): ) [67568,67569]"/>
  <delete-node tree="return_type_definition [67534,67569]"/>
  <delete-node tree="{: { [67570,67571]"/>
  <delete-node tree="=: = [67651,67652]"/>
  <delete-tree tree="call_expression [67653,67668]"/>
  <delete-node tree="variable_declaration_statement [67631,67669]"/>
  <delete-tree tree="variable_declaration_statement [67678,67705]"/>
  <delete-node tree="comment: // DAI does not support blacklisting. [67706,67743]"/>
  <delete-node tree="=: = [67764,67765]"/>
  <delete-tree tree="boolean_literal [67766,67770]"/>
  <delete-node tree="variable_declaration_statement [67753,67771]"/>
  <delete-tree tree="if_statement [67780,67873]"/>
  <delete-tree tree="if_statement [67882,67972]"/>
  <delete-tree tree="if_statement [67981,68038]"/>
  <delete-tree tree="return_statement [68048,68070]"/>
  <delete-node tree="}: } [68075,68076]"/>
  <delete-node tree="function_body [67570,68076]"/>
  <delete-node tree="function_definition [67502,68076]"/>
  <delete-node tree="function: function [68696,68704]"/>
  <delete-node tree="identifier: updateReserve [68705,68718]"/>
  <delete-node tree="(: ( [68718,68719]"/>
  <delete-node tree="): ) [68719,68720]"/>
  <delete-node tree="{: { [68747,68748]"/>
  <delete-node tree="=: = [68777,68778]"/>
  <delete-node tree="identifier: _reserve [68779,68787]"/>
  <delete-node tree="variable_declaration_statement [68757,68788]"/>
  <delete-tree tree="variable_declaration_statement [68797,68857]"/>
  <delete-tree tree="expression_statement [68866,68911]"/>
  <delete-node tree="comment: // get counter's reserve [68912,68936]"/>
  <delete-tree tree="return_statement [68946,68965]"/>
  <delete-node tree="}: } [68970,68971]"/>
  <delete-node tree="function_body [68747,68971]"/>
  <delete-node tree="function_definition [68696,68971]"/>
  <delete-node tree="function: function [68977,68985]"/>
  <delete-node tree="identifier: dai [68986,68989]"/>
  <delete-node tree="(: ( [68989,68990]"/>
  <delete-node tree="): ) [68990,68991]"/>
  <delete-tree tree="state_mutability [69001,69005]"/>
  <delete-tree tree="return_type_definition [69006,69023]"/>
  <delete-tree tree="function_body [69024,69073]"/>
  <delete-node tree="function_definition [68977,69073]"/>
  <delete-node tree="function: function [69079,69087]"/>
  <delete-node tree="identifier: pair [69088,69092]"/>
  <delete-node tree="(: ( [69092,69093]"/>
  <delete-node tree="): ) [69093,69094]"/>
  <delete-tree tree="state_mutability [69104,69108]"/>
  <delete-tree tree="return_type_definition [69109,69126]"/>
  <delete-tree tree="function_body [69127,69165]"/>
  <delete-node tree="function_definition [69079,69165]"/>
  <delete-node tree="modifier: modifier [69260,69268]"/>
  <delete-node tree="identifier: onlyDao [69269,69276]"/>
  <delete-node tree="(: ( [69276,69277]"/>
  <delete-node tree="): ) [69277,69278]"/>
  <delete-node tree="{: { [69279,69280]"/>
  <delete-tree tree="expression_statement [69395,69397]"/>
  <delete-node tree="}: } [69402,69403]"/>
  <delete-node tree="function_body [69279,69403]"/>
  <delete-node tree="modifier_definition [69260,69403]"/>
  <delete-node tree="}: } [69404,69405]"/>
  <delete-node tree="contract_body [65453,69405]"/>
  <delete-node tree="contract_declaration [65426,69405]"/>
  <delete-node tree="comment: /*     Copyright 2021 Ethic Money Devs &lt;devs@ethic.money&gt; and Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;          Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [69407,70094]"/>
  <delete-node tree="contract: contract [70095,70103]"/>
  <delete-node tree="identifier: IDAO [70104,70108]"/>
  <delete-node tree="{: { [70109,70110]"/>
  <delete-node tree="function: function [70115,70123]"/>
  <delete-node tree="identifier: epoch [70124,70129]"/>
  <delete-node tree="(: ( [70129,70130]"/>
  <delete-node tree="): ) [70130,70131]"/>
  <delete-tree tree="state_mutability [70141,70145]"/>
  <delete-node tree="function_definition [70115,70164]"/>
  <delete-node tree="}: } [70165,70166]"/>
  <delete-node tree="contract_body [70109,70166]"/>
  <delete-node tree="contract_declaration [70095,70166]"/>
  <delete-tree tree="visibility [52866,52872]"/>
  <delete-tree tree="modifier_invocation [52873,52883]"/>
  <delete-tree tree="return_type_definition [52884,52898]"/>
  <delete-node tree="identifier: _mint [52909,52914]"/>
  <delete-tree tree="return_statement [52941,52953]"/>
  <delete-node tree="identifier: hashEIP712Domain [50020,50036]"/>
  <delete-tree tree="call_argument [50037,50043]"/>
  <delete-tree tree="call_argument [50045,50059]"/>
  <delete-tree tree="call_argument [50061,50083]"/>
  <delete-node tree=",: , [50083,50084]"/>
  <delete-node tree="identifier: EIP712_DOMAIN_SEPARATOR [49984,50007]"/>
  <delete-node tree="=: = [50008,50009]"/>
  <delete-node tree="assignment_expression [49984,50099]"/>
  <delete-tree tree="parameter [23064,23079]"/>
  <delete-tree tree="visibility [23097,23103]"/>
  <delete-node tree="identifier: _burnFrom [23114,23123]"/>
  <delete-tree tree="parameter [21054,21069]"/>
  <delete-node tree=",: , [21069,21070]"/>
  <delete-node tree="identifier: _totalSupply [21283,21295]"/>
  <delete-node tree="=: = [21296,21297]"/>
  <delete-tree tree="member_expression [21298,21314]"/>
  <delete-node tree="(: ( [21314,21315]"/>
  <delete-node tree="): ) [21321,21322]"/>
  <delete-node tree="call_expression [21298,21322]"/>
  <delete-node tree="assignment_expression [21283,21322]"/>
  <delete-tree tree="member_expression [21205,21227]"/>
  <delete-tree tree="array_access [21184,21202]"/>
  <delete-node tree="=: = [21203,21204]"/>
  <delete-node tree="assignment_expression [21184,21273]"/>
  <delete-node tree="emit: emit [21332,21336]"/>
  <delete-node tree="identifier: Transfer [21337,21345]"/>
  <delete-node tree="(: ( [21345,21346]"/>
  <delete-node tree=",: , [21353,21354]"/>
  <delete-tree tree="primitive_type [21355,21362]"/>
  <delete-node tree="(: ( [21362,21363]"/>
  <delete-node tree="): ) [21364,21365]"/>
  <delete-node tree="type_cast_expression [21355,21365]"/>
  <delete-node tree="call_argument [21355,21365]"/>
  <delete-node tree=",: , [21365,21366]"/>
  <delete-node tree="): ) [21373,21374]"/>
  <delete-node tree="emit_statement [21332,21375]"/>
  <delete-tree tree="member_expression [19955,19976]"/>
  <delete-tree tree="array_access [19935,19952]"/>
  <delete-node tree="=: = [19953,19954]"/>
  <delete-node tree="assignment_expression [19935,20026]"/>
  <delete-tree tree="visibility [73178,73184]"/>
  <delete-tree tree="state_mutability [73185,73189]"/>
  <delete-tree tree="return_type_definition [73190,73207]"/>
  <delete-tree tree="call_expression [73262,73278]"/>
  <delete-node tree="&gt;=: &gt;= [85109,85111]"/>
  <delete-node tree="binary_expression [85076,85125]"/>
  <delete-node tree="return: return [73218,73224]"/>
  <delete-node tree="return_statement [73218,73280]"/>
  <delete-tree tree="call_argument [79537,79541]"/>
  <delete-node tree="contract: contract [70852,70860]"/>
  <delete-node tree="identifier: PoolAccount [70861,70872]"/>
  <delete-node tree="{: { [70873,70874]"/>
  <delete-tree tree="enum_declaration [70879,70944]"/>
  <delete-node tree="struct: struct [70950,70956]"/>
  <delete-node tree="identifier: State [70957,70962]"/>
  <delete-node tree="{: { [70963,70964]"/>
  <delete-node tree="identifier: staged [70981,70987]"/>
  <delete-node tree="struct_member [70973,70988]"/>
  <delete-node tree="identifier: claimable [71005,71014]"/>
  <delete-node tree="struct_member [70997,71015]"/>
  <delete-node tree="identifier: bonded [71032,71038]"/>
  <delete-node tree="struct_member [71024,71039]"/>
  <delete-node tree="identifier: phantom [71056,71063]"/>
  <delete-node tree="struct_member [71048,71064]"/>
  <delete-node tree="identifier: fluidUntil [71081,71091]"/>
  <delete-node tree="struct_member [71073,71092]"/>
  <delete-node tree="}: } [71097,71098]"/>
  <delete-node tree="struct_declaration [70950,71098]"/>
  <delete-node tree="}: } [71099,71100]"/>
  <delete-node tree="contract_body [70873,71100]"/>
  <delete-node tree="contract_declaration [70852,71100]"/>
  <delete-node tree="contract: contract [71102,71110]"/>
  <delete-node tree="identifier: PoolStorage [71111,71122]"/>
  <delete-node tree="{: { [71123,71124]"/>
  <delete-tree tree="struct_declaration [71129,71214]"/>
  <delete-node tree="struct: struct [71220,71226]"/>
  <delete-node tree="identifier: Balance [71227,71234]"/>
  <delete-node tree="{: { [71235,71236]"/>
  <delete-node tree="identifier: staged [71253,71259]"/>
  <delete-node tree="struct_member [71245,71260]"/>
  <delete-node tree="identifier: claimable [71277,71286]"/>
  <delete-node tree="struct_member [71269,71287]"/>
  <delete-node tree="identifier: bonded [71304,71310]"/>
  <delete-node tree="struct_member [71296,71311]"/>
  <delete-node tree="identifier: phantom [71328,71335]"/>
  <delete-node tree="struct_member [71320,71336]"/>
  <delete-node tree="}: } [71341,71342]"/>
  <delete-node tree="struct_declaration [71220,71342]"/>
  <delete-tree tree="struct_declaration [71348,71498]"/>
  <delete-node tree="}: } [71499,71500]"/>
  <delete-node tree="contract_body [71123,71500]"/>
  <delete-node tree="contract_declaration [71102,71500]"/>
  <delete-tree tree="contract_declaration [71502,71554]"/>
  <delete-node tree="uint: uint [53506,53510]"/>
  <delete-tree tree="parameter [78007,78022]"/>
  <delete-tree tree="member_expression [78043,78078]"/>
  <delete-node tree="=: = [78079,78080]"/>
  <delete-node tree="assignment_expression [78043,78129]"/>
  <delete-tree tree="call_expression [84347,84366]"/>
  <delete-node tree="identifier: _reserve [69239,69247]"/>
  <delete-node tree="&gt;=: &gt;= [74701,74703]"/>
  <delete-tree tree="member_expression [74704,74719]"/>
  <delete-node tree="==: == [74097,74099]"/>
  <delete-node tree="number_literal: 0 [74100,74101]"/>
  <delete-node tree="identifier: require [21891,21898]"/>
  <delete-node tree="!=: != [21905,21907]"/>
  <delete-tree tree="type_cast_expression [21908,21918]"/>
  <delete-node tree="==: == [50718,50720]"/>
  <delete-node tree="identifier: owner [50721,50726]"/>
  <delete-tree tree="member_expression [80845,80864]"/>
  <delete-node tree="=: = [80865,80866]"/>
  <delete-node tree="assignment_expression [80845,80883]"/>
  <delete-tree tree="call_argument [84661,84692]"/>
  <delete-tree tree="call_argument [21114,21135]"/>
  <delete-node tree="mapping: mapping [15797,15804]"/>
  <delete-node tree="(: ( [15805,15806]"/>
  <delete-tree tree="primitive_type [15806,15813]"/>
  <delete-node tree="=&gt;: =&gt; [15814,15816]"/>
  <delete-node tree="): ) [15824,15825]"/>
  <delete-node tree="type_name [15797,15825]"/>
  <delete-node tree="identifier: _balances [15834,15843]"/>
  <delete-node tree="state_variable_declaration [15797,15844]"/>
  <delete-node tree="mapping: mapping [15850,15857]"/>
  <delete-node tree="(: ( [15858,15859]"/>
  <delete-tree tree="primitive_type [15859,15866]"/>
  <delete-node tree="=&gt;: =&gt; [15867,15869]"/>
  <delete-node tree="mapping: mapping [15870,15877]"/>
  <delete-node tree="(: ( [15878,15879]"/>
  <delete-tree tree="primitive_type [15879,15886]"/>
  <delete-node tree="=&gt;: =&gt; [15887,15889]"/>
  <delete-node tree="): ) [15897,15898]"/>
  <delete-node tree="type_name [15870,15898]"/>
  <delete-node tree="): ) [15898,15899]"/>
  <delete-node tree="type_name [15850,15899]"/>
  <delete-node tree="identifier: _allowances [15908,15919]"/>
  <delete-node tree="state_variable_declaration [15850,15920]"/>
  <delete-node tree="identifier: _totalSupply [15942,15954]"/>
  <delete-node tree="state_variable_declaration [15926,15955]"/>
  <delete-node tree="comment: /**      * @dev See {IERC20-totalSupply}.      */ [15961,16010]"/>
  <delete-node tree="function: function [16015,16023]"/>
  <delete-node tree="identifier: totalSupply [16024,16035]"/>
  <delete-node tree="(: ( [16035,16036]"/>
  <delete-node tree="): ) [16036,16037]"/>
  <delete-tree tree="visibility [16038,16044]"/>
  <delete-tree tree="state_mutability [16045,16049]"/>
  <delete-tree tree="function_body [16068,16104]"/>
  <delete-node tree="function_definition [16015,16104]"/>
  <delete-node tree="comment: /**      * @dev See {IERC20-balanceOf}.      */ [16110,16157]"/>
  <delete-node tree="function: function [16162,16170]"/>
  <delete-node tree="identifier: balanceOf [16171,16180]"/>
  <delete-node tree="(: ( [16180,16181]"/>
  <delete-tree tree="parameter [16181,16196]"/>
  <delete-node tree="): ) [16196,16197]"/>
  <delete-tree tree="visibility [16198,16204]"/>
  <delete-tree tree="state_mutability [16205,16209]"/>
  <delete-tree tree="function_body [16228,16270]"/>
  <delete-node tree="function_definition [16162,16270]"/>
  <delete-node tree="comment: /**      * @dev See {IERC20-transfer}.      *      * Requirements:      *      * - `recipient` cannot be the zero address.      * - the caller must have a balance of at least `amount`.      */ [16276,16468]"/>
  <delete-node tree="function: function [16473,16481]"/>
  <delete-node tree="identifier: transfer [16482,16490]"/>
  <delete-node tree="(: ( [16490,16491]"/>
  <delete-tree tree="parameter [16491,16508]"/>
  <delete-node tree=",: , [16508,16509]"/>
  <delete-node tree="): ) [16524,16525]"/>
  <delete-tree tree="visibility [16526,16532]"/>
  <delete-tree tree="return_type_definition [16533,16547]"/>
  <delete-node tree="{: { [16548,16549]"/>
  <delete-node tree="identifier: _transfer [16558,16567]"/>
  <delete-node tree="(: ( [16567,16568]"/>
  <delete-tree tree="call_argument [16568,16580]"/>
  <delete-node tree=",: , [16580,16581]"/>
  <delete-tree tree="call_argument [16582,16591]"/>
  <delete-node tree=",: , [16591,16592]"/>
  <delete-node tree="): ) [16599,16600]"/>
  <delete-node tree="call_expression [16558,16600]"/>
  <delete-node tree="expression_statement [16558,16601]"/>
  <delete-tree tree="return_statement [16610,16622]"/>
  <delete-node tree="}: } [16627,16628]"/>
  <delete-node tree="function_body [16548,16628]"/>
  <delete-node tree="function_definition [16473,16628]"/>
  <delete-node tree="comment: /**      * @dev See {IERC20-allowance}.      */ [16634,16681]"/>
  <delete-tree tree="function_definition [16686,16818]"/>
  <delete-node tree="comment: /**      * @dev See {IERC20-approve}.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [16824,16951]"/>
  <delete-node tree="function: function [16956,16964]"/>
  <delete-node tree="identifier: approve [16965,16972]"/>
  <delete-node tree="(: ( [16972,16973]"/>
  <delete-tree tree="parameter [16973,16988]"/>
  <delete-node tree=",: , [16988,16989]"/>
  <delete-node tree="): ) [17004,17005]"/>
  <delete-tree tree="visibility [17006,17012]"/>
  <delete-tree tree="return_type_definition [17013,17027]"/>
  <delete-node tree="{: { [17028,17029]"/>
  <delete-node tree="identifier: _approve [17038,17046]"/>
  <delete-node tree="(: ( [17046,17047]"/>
  <delete-tree tree="call_argument [17047,17059]"/>
  <delete-node tree=",: , [17059,17060]"/>
  <delete-tree tree="call_argument [17061,17068]"/>
  <delete-node tree=",: , [17068,17069]"/>
  <delete-node tree="): ) [17076,17077]"/>
  <delete-node tree="call_expression [17038,17077]"/>
  <delete-node tree="expression_statement [17038,17078]"/>
  <delete-tree tree="return_statement [17087,17099]"/>
  <delete-node tree="}: } [17104,17105]"/>
  <delete-node tree="function_body [17028,17105]"/>
  <delete-node tree="function_definition [16956,17105]"/>
  <delete-node tree="comment: /**      * @dev See {IERC20-transferFrom}.      *      * Emits an {Approval} event indicating the updated allowance. This is not      * required by the EIP. See the note at the beginning of {ERC20};      *      * Requirements:      * - `sender` and `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      * - the caller must have allowance for `sender`'s tokens of at least      * `amount`.      */ [17111,17558]"/>
  <delete-node tree="function: function [17563,17571]"/>
  <delete-node tree="identifier: transferFrom [17572,17584]"/>
  <delete-node tree="(: ( [17584,17585]"/>
  <delete-tree tree="parameter [17585,17599]"/>
  <delete-node tree=",: , [17599,17600]"/>
  <delete-tree tree="parameter [17601,17618]"/>
  <delete-node tree=",: , [17618,17619]"/>
  <delete-node tree="): ) [17634,17635]"/>
  <delete-tree tree="visibility [17636,17642]"/>
  <delete-tree tree="return_type_definition [17643,17657]"/>
  <delete-node tree="{: { [17658,17659]"/>
  <delete-node tree="identifier: _transfer [17668,17677]"/>
  <delete-node tree="(: ( [17677,17678]"/>
  <delete-tree tree="call_argument [17678,17684]"/>
  <delete-node tree=",: , [17684,17685]"/>
  <delete-tree tree="call_argument [17686,17695]"/>
  <delete-node tree=",: , [17695,17696]"/>
  <delete-node tree="): ) [17703,17704]"/>
  <delete-node tree="call_expression [17668,17704]"/>
  <delete-node tree="expression_statement [17668,17705]"/>
  <delete-node tree="identifier: _approve [17714,17722]"/>
  <delete-node tree="(: ( [17722,17723]"/>
  <delete-tree tree="call_argument [17723,17729]"/>
  <delete-node tree=",: , [17729,17730]"/>
  <delete-tree tree="call_argument [17731,17743]"/>
  <delete-node tree=",: , [17743,17744]"/>
  <delete-tree tree="member_expression [17745,17782]"/>
  <delete-node tree="(: ( [17782,17783]"/>
  <delete-node tree=",: , [17789,17790]"/>
  <delete-node tree="): ) [17833,17834]"/>
  <delete-node tree="call_expression [17745,17834]"/>
  <delete-node tree="call_argument [17745,17834]"/>
  <delete-node tree="): ) [17834,17835]"/>
  <delete-node tree="call_expression [17714,17835]"/>
  <delete-node tree="expression_statement [17714,17836]"/>
  <delete-tree tree="return_statement [17845,17857]"/>
  <delete-node tree="}: } [17862,17863]"/>
  <delete-node tree="function_body [17658,17863]"/>
  <delete-node tree="function_definition [17563,17863]"/>
  <delete-node tree="comment: /**      * @dev Atomically increases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [17869,18253]"/>
  <delete-node tree="function: function [18258,18266]"/>
  <delete-node tree="identifier: increaseAllowance [18267,18284]"/>
  <delete-node tree="(: ( [18284,18285]"/>
  <delete-tree tree="parameter [18285,18300]"/>
  <delete-node tree=",: , [18300,18301]"/>
  <delete-node tree="): ) [18320,18321]"/>
  <delete-tree tree="visibility [18322,18328]"/>
  <delete-tree tree="return_type_definition [18329,18343]"/>
  <delete-tree tree="function_body [18344,18465]"/>
  <delete-node tree="function_definition [18258,18465]"/>
  <delete-node tree="comment: /**      * @dev Atomically decreases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      * - `spender` must have allowance for the caller of at least      * `subtractedValue`.      */ [18471,18947]"/>
  <delete-node tree="function: function [18952,18960]"/>
  <delete-node tree="identifier: decreaseAllowance [18961,18978]"/>
  <delete-node tree="(: ( [18978,18979]"/>
  <delete-tree tree="parameter [18979,18994]"/>
  <delete-node tree=",: , [18994,18995]"/>
  <delete-node tree="): ) [19019,19020]"/>
  <delete-tree tree="visibility [19021,19027]"/>
  <delete-tree tree="return_type_definition [19028,19042]"/>
  <delete-node tree="{: { [19043,19044]"/>
  <delete-node tree="identifier: _approve [19053,19061]"/>
  <delete-node tree="(: ( [19061,19062]"/>
  <delete-tree tree="call_argument [19062,19074]"/>
  <delete-node tree=",: , [19074,19075]"/>
  <delete-tree tree="call_argument [19076,19083]"/>
  <delete-node tree=",: , [19083,19084]"/>
  <delete-tree tree="member_expression [19085,19123]"/>
  <delete-node tree="(: ( [19123,19124]"/>
  <delete-tree tree="call_argument [19124,19139]"/>
  <delete-node tree=",: , [19139,19140]"/>
  <delete-node tree="): ) [19180,19181]"/>
  <delete-node tree="call_expression [19085,19181]"/>
  <delete-node tree="call_argument [19085,19181]"/>
  <delete-node tree="): ) [19181,19182]"/>
  <delete-node tree="call_expression [19053,19182]"/>
  <delete-node tree="expression_statement [19053,19183]"/>
  <delete-tree tree="return_statement [19192,19204]"/>
  <delete-node tree="}: } [19209,19210]"/>
  <delete-node tree="function_body [19043,19210]"/>
  <delete-node tree="function_definition [18952,19210]"/>
  <delete-node tree="comment: /**      * @dev Moves tokens `amount` from `sender` to `recipient`.      *      * This is internal function is equivalent to {transfer}, and can be used to      * e.g. implement automatic token fees, slashing mechanisms, etc.      *      * Emits a {Transfer} event.      *      * Requirements:      *      * - `sender` cannot be the zero address.      * - `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      */ [19216,19679]"/>
  <delete-node tree="comment: /** @dev Creates `amount` tokens and assigns them to `account`, increasing      * the total supply.      *      * Emits a {Transfer} event with `from` set to the zero address.      *      * Requirements      *      * - `to` cannot be the zero address.      */ [20154,20413]"/>
  <delete-node tree="function: function [20418,20426]"/>
  <delete-node tree="identifier: _mint [20427,20432]"/>
  <delete-node tree="(: ( [20432,20433]"/>
  <delete-tree tree="parameter [20433,20448]"/>
  <delete-node tree=",: , [20448,20449]"/>
  <delete-node tree="): ) [20464,20465]"/>
  <delete-tree tree="visibility [20466,20474]"/>
  <delete-node tree="{: { [20475,20476]"/>
  <delete-node tree="identifier: require [20485,20492]"/>
  <delete-node tree="(: ( [20492,20493]"/>
  <delete-tree tree="call_argument [20493,20514]"/>
  <delete-node tree=",: , [20514,20515]"/>
  <delete-node tree="): ) [20549,20550]"/>
  <delete-node tree="call_expression [20485,20550]"/>
  <delete-node tree="expression_statement [20485,20551]"/>
  <delete-node tree="identifier: _totalSupply [20561,20573]"/>
  <delete-node tree="=: = [20574,20575]"/>
  <delete-tree tree="member_expression [20576,20592]"/>
  <delete-node tree="(: ( [20592,20593]"/>
  <delete-node tree="): ) [20599,20600]"/>
  <delete-node tree="call_expression [20576,20600]"/>
  <delete-node tree="assignment_expression [20561,20600]"/>
  <delete-node tree="expression_statement [20561,20601]"/>
  <delete-tree tree="array_access [20610,20628]"/>
  <delete-node tree="=: = [20629,20630]"/>
  <delete-tree tree="member_expression [20631,20653]"/>
  <delete-node tree="(: ( [20653,20654]"/>
  <delete-node tree="): ) [20660,20661]"/>
  <delete-node tree="call_expression [20631,20661]"/>
  <delete-node tree="assignment_expression [20610,20661]"/>
  <delete-node tree="expression_statement [20610,20662]"/>
  <delete-node tree="emit: emit [20671,20675]"/>
  <delete-node tree="identifier: Transfer [20676,20684]"/>
  <delete-node tree="(: ( [20684,20685]"/>
  <delete-tree tree="call_argument [20685,20695]"/>
  <delete-node tree=",: , [20695,20696]"/>
  <delete-tree tree="call_argument [20697,20704]"/>
  <delete-node tree=",: , [20704,20705]"/>
  <delete-node tree="): ) [20712,20713]"/>
  <delete-node tree="emit_statement [20671,20714]"/>
  <delete-node tree="}: } [20719,20720]"/>
  <delete-node tree="function_body [20475,20720]"/>
  <delete-node tree="function_definition [20418,20720]"/>
  <delete-node tree="comment: /**      * @dev Destroys `amount` tokens from `account`, reducing the      * total supply.      *      * Emits a {Transfer} event with `to` set to the zero address.      *      * Requirements      *      * - `account` cannot be the zero address.      * - `account` must have at least `amount` tokens.      */ [20726,21034]"/>
  <delete-node tree="comment: /**      * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.      *      * This is internal function is equivalent to `approve`, and can be used to      * e.g. set automatic allowances for certain subsystems, etc.      *      * Emits an {Approval} event.      *      * Requirements:      *      * - `owner` cannot be the zero address.      * - `spender` cannot be the zero address.      */ [21387,21801]"/>
  <delete-tree tree="parameter [21824,21837]"/>
  <delete-node tree=",: , [21854,21855]"/>
  <delete-tree tree="visibility [21872,21880]"/>
  <delete-tree tree="assignment_expression [22048,22084]"/>
  <delete-tree tree="call_argument [22108,22113]"/>
  <delete-tree tree="call_argument [22124,22130]"/>
  <delete-tree tree="binary_expression [50940,50955]"/>
  <delete-tree tree="call_expression [53138,53150]"/>
  <delete-tree tree="member_expression [53262,53297]"/>
  <delete-node tree="identifier: _approve [53182,53190]"/>
  <delete-node tree="(: ( [53190,53191]"/>
  <delete-node tree=",: , [53214,53215]"/>
  <delete-tree tree="call_argument [53232,53244]"/>
  <delete-node tree=",: , [53244,53245]"/>
  <delete-node tree="call_argument [53262,53349]"/>
  <delete-node tree="): ) [53349,53350]"/>
  <delete-node tree="call_expression [53182,53350]"/>
  <delete-tree tree="array_access [20036,20056]"/>
  <delete-node tree="=: = [20057,20058]"/>
  <delete-tree tree="member_expression [20059,20083]"/>
  <delete-node tree="(: ( [20083,20084]"/>
  <delete-node tree="): ) [20090,20091]"/>
  <delete-node tree="call_expression [20059,20091]"/>
  <delete-node tree="assignment_expression [20036,20091]"/>
  <delete-node tree="expression_statement [20036,20092]"/>
  <delete-node tree="comment: /**      * @dev Destroys `amount` tokens from `account`.`amount` is then deducted      * from the caller's allowance.      *      * See {_burn} and {_approve}.      */ [22144,22311]"/>
  <delete-node tree="function: function [22316,22324]"/>
  <delete-node tree="identifier: _burnFrom [22325,22334]"/>
  <delete-node tree="(: ( [22334,22335]"/>
  <delete-tree tree="parameter [22335,22350]"/>
  <delete-node tree=",: , [22350,22351]"/>
  <delete-tree tree="parameter [22352,22366]"/>
  <delete-node tree="): ) [22366,22367]"/>
  <delete-node tree="{: { [22377,22378]"/>
  <delete-node tree="identifier: _burn [22387,22392]"/>
  <delete-node tree="(: ( [22392,22393]"/>
  <delete-tree tree="call_argument [22393,22400]"/>
  <delete-node tree=",: , [22400,22401]"/>
  <delete-node tree="): ) [22408,22409]"/>
  <delete-node tree="call_expression [22387,22409]"/>
  <delete-node tree="expression_statement [22387,22410]"/>
  <delete-node tree="identifier: _approve [22419,22427]"/>
  <delete-node tree="(: ( [22427,22428]"/>
  <delete-tree tree="call_argument [22428,22435]"/>
  <delete-node tree=",: , [22435,22436]"/>
  <delete-tree tree="call_argument [22437,22449]"/>
  <delete-node tree=",: , [22449,22450]"/>
  <delete-tree tree="member_expression [22451,22489]"/>
  <delete-node tree="(: ( [22489,22490]"/>
  <delete-node tree=",: , [22496,22497]"/>
  <delete-node tree="): ) [22536,22537]"/>
  <delete-node tree="call_expression [22451,22537]"/>
  <delete-node tree="call_argument [22451,22537]"/>
  <delete-node tree="): ) [22537,22538]"/>
  <delete-node tree="call_expression [22419,22538]"/>
  <delete-node tree="expression_statement [22419,22539]"/>
  <delete-node tree="}: } [22544,22545]"/>
  <delete-node tree="function_body [22377,22545]"/>
  <delete-node tree="function_definition [22316,22545]"/>
  <delete-node tree="contract: contract [72240,72248]"/>
  <delete-node tree="identifier: PoolGetters [72249,72260]"/>
  <delete-node tree="is: is [72261,72263]"/>
  <delete-tree tree="inheritance_specifier [72264,72273]"/>
  <delete-node tree="{: { [72274,72275]"/>
  <delete-node tree="comment: /**      * Global      */ [72313,72338]"/>
  <delete-tree tree="function_definition [72344,72438]"/>
  <delete-node tree="function: function [72444,72452]"/>
  <delete-node tree="identifier: dao [72453,72456]"/>
  <delete-node tree="(: ( [72456,72457]"/>
  <delete-node tree="): ) [72457,72458]"/>
  <delete-tree tree="state_mutability [72466,72470]"/>
  <delete-tree tree="return_type_definition [72471,72485]"/>
  <delete-tree tree="function_body [72486,72529]"/>
  <delete-node tree="function_definition [72444,72529]"/>
  <delete-tree tree="function_definition [72535,72626]"/>
  <delete-tree tree="function_definition [72632,72723]"/>
  <delete-tree tree="function_definition [72729,72827]"/>
  <delete-tree tree="function_definition [72833,72931]"/>
  <delete-tree tree="function_definition [72937,73041]"/>
  <delete-tree tree="function_definition [73047,73147]"/>
  <delete-node tree="function: function [73292,73300]"/>
  <delete-node tree="identifier: paused [73301,73307]"/>
  <delete-node tree="(: ( [73307,73308]"/>
  <delete-node tree="): ) [73308,73309]"/>
  <delete-tree tree="visibility [73310,73316]"/>
  <delete-tree tree="function_body [73337,73374]"/>
  <delete-node tree="function_definition [73292,73374]"/>
  <delete-node tree="comment: /**      * Account      */ [73380,73406]"/>
  <delete-node tree="function: function [73412,73420]"/>
  <delete-node tree="identifier: balanceOfStaged [73421,73436]"/>
  <delete-node tree="(: ( [73436,73437]"/>
  <delete-node tree="): ) [73452,73453]"/>
  <delete-tree tree="visibility [73454,73460]"/>
  <delete-tree tree="state_mutability [73461,73465]"/>
  <delete-tree tree="return_type_definition [73466,73483]"/>
  <delete-tree tree="function_body [73484,73539]"/>
  <delete-node tree="function_definition [73412,73539]"/>
  <delete-tree tree="function_definition [73545,73678]"/>
  <delete-tree tree="function_definition [73684,73811]"/>
  <delete-tree tree="function_definition [73817,73946]"/>
  <delete-node tree="function: function [74600,74608]"/>
  <delete-node tree="identifier: statusOf [74609,74617]"/>
  <delete-node tree="(: ( [74617,74618]"/>
  <delete-tree tree="parameter [74618,74633]"/>
  <delete-node tree="): ) [74633,74634]"/>
  <delete-tree tree="visibility [74635,74641]"/>
  <delete-tree tree="state_mutability [74642,74646]"/>
  <delete-tree tree="return_type_definition [74647,74675]"/>
  <delete-node tree="{: { [74676,74677]"/>
  <delete-node tree="return: return [74686,74692]"/>
  <delete-node tree="[: [ [74719,74720]"/>
  <delete-node tree="identifier: account [74720,74727]"/>
  <delete-node tree="]: ] [74727,74728]"/>
  <delete-node tree="array_access [74693,74728]"/>
  <delete-node tree=".: . [74728,74729]"/>
  <delete-node tree="identifier: fluidUntil [74729,74739]"/>
  <delete-node tree="member_expression [74693,74739]"/>
  <delete-node tree="?: ? [74740,74741]"/>
  <delete-tree tree="member_expression [74754,74779]"/>
  <delete-node tree=":: : [74780,74781]"/>
  <delete-tree tree="member_expression [74794,74812]"/>
  <delete-node tree="ternary_expression [74693,74812]"/>
  <delete-node tree=".: . [74812,74813]"/>
  <delete-node tree="identifier: Fluid [74813,74818]"/>
  <delete-node tree="member_expression [74693,74818]"/>
  <delete-node tree="return_statement [74686,74819]"/>
  <delete-node tree="}: } [74824,74825]"/>
  <delete-node tree="function_body [74676,74825]"/>
  <delete-node tree="function_definition [74600,74825]"/>
  <delete-node tree="comment: /**      * Epoch      */ [74831,74855]"/>
  <delete-tree tree="function_definition [74861,74947]"/>
  <delete-node tree="}: } [74948,74949]"/>
  <delete-node tree="contract_body [72274,74949]"/>
  <delete-node tree="contract_declaration [72240,74949]"/>
  <delete-tree tree="member_expression [82429,82448]"/>
  <delete-node tree="identifier: totalPhantom [82449,82461]"/>
  <delete-node tree=",: , [68204,68205]"/>
  <delete-tree tree="variable_declaration [68206,68227]"/>
  <delete-tree tree="member_expression [68239,68285]"/>
  <delete-tree tree="type_cast_expression [68286,68300]"/>
  <delete-tree tree="variable_declaration_statement [68311,68360]"/>
  <delete-node tree="comment: // overflow is desired [68361,68383]"/>
  <delete-node tree="=: = [68416,68417]"/>
  <delete-tree tree="ternary_expression [68418,68467]"/>
  <delete-node tree="variable_declaration_statement [68392,68468]"/>
  <delete-tree tree="expression_statement [68584,68612]"/>
  <delete-tree tree="expression_statement [68621,68651]"/>
  <delete-node tree="return: return [68661,68667]"/>
  <delete-tree tree="member_expression [68668,68677]"/>
  <delete-node tree="(: ( [68677,68678]"/>
  <delete-node tree="): ) [68682,68683]"/>
  <delete-node tree="call_expression [68668,68683]"/>
  <delete-node tree="return_statement [68661,68684]"/>
  <delete-tree tree="parameter [73979,73994]"/>
  <delete-node tree="identifier: balanceOfPhantom [74400,74416]"/>
  <delete-tree tree="call_argument [74417,74424]"/>
  <delete-tree tree="member_expression [74181,74200]"/>
  <delete-tree tree="call_argument [74201,74215]"/>
  <delete-node tree="identifier: balanceOfRewardedWithPhantom [74439,74467]"/>
  <delete-node tree="&gt;: &gt; [74468,74469]"/>
  <delete-node tree="identifier: balanceOfPhantom [74470,74486]"/>
  <delete-tree tree="return_statement [74502,74560]"/>
  <delete-tree tree="call_argument [68519,68564]"/>
  <delete-node tree=",: , [68564,68565]"/>
  <delete-tree tree="call_argument [68566,68572]"/>
  <delete-node tree="identifier: _initialized [66741,66753]"/>
  <delete-tree tree="block_statement [66755,66801]"/>
  <delete-node tree="else: else [66802,66806]"/>
  <delete-tree tree="expression_statement [66821,66840]"/>
  <delete-node tree="(: ( [66860,66861]"/>
  <delete-node tree=",: , [66874,66875]"/>
  <delete-node tree="): ) [66881,66882]"/>
  <delete-node tree="tuple_expression [66860,66882]"/>
  <delete-node tree="contract: contract [75635,75643]"/>
  <delete-node tree="identifier: PoolSetters [75644,75655]"/>
  <delete-node tree="is: is [75656,75658]"/>
  <delete-tree tree="inheritance_specifier [75659,75668]"/>
  <delete-node tree=",: , [75668,75669]"/>
  <delete-tree tree="inheritance_specifier [75670,75681]"/>
  <delete-node tree="{: { [75682,75683]"/>
  <delete-node tree="comment: /**      * Global      */ [75721,75746]"/>
  <delete-tree tree="function_definition [75752,75815]"/>
  <delete-node tree="comment: /**      * Account      */ [75821,75847]"/>
  <delete-node tree="function: function [75853,75861]"/>
  <delete-node tree="identifier: incrementBalanceOfBonded [75862,75886]"/>
  <delete-node tree="(: ( [75886,75887]"/>
  <delete-tree tree="parameter [75887,75902]"/>
  <delete-node tree=",: , [75902,75903]"/>
  <delete-node tree="): ) [75918,75919]"/>
  <delete-node tree="{: { [75929,75930]"/>
  <delete-tree tree="member_expression [75939,75970]"/>
  <delete-node tree="=: = [75971,75972]"/>
  <delete-tree tree="member_expression [75973,76008]"/>
  <delete-node tree="(: ( [76008,76009]"/>
  <delete-node tree="): ) [76015,76016]"/>
  <delete-node tree="call_expression [75973,76016]"/>
  <delete-node tree="assignment_expression [75939,76016]"/>
  <delete-node tree="expression_statement [75939,76017]"/>
  <delete-tree tree="member_expression [76026,76047]"/>
  <delete-node tree="=: = [76048,76049]"/>
  <delete-tree tree="member_expression [76050,76075]"/>
  <delete-node tree="(: ( [76075,76076]"/>
  <delete-node tree="): ) [76082,76083]"/>
  <delete-node tree="call_expression [76050,76083]"/>
  <delete-node tree="assignment_expression [76026,76083]"/>
  <delete-node tree="expression_statement [76026,76084]"/>
  <delete-node tree="}: } [76089,76090]"/>
  <delete-node tree="function_body [75929,76090]"/>
  <delete-node tree="function_definition [75853,76090]"/>
  <delete-node tree="function: function [76096,76104]"/>
  <delete-node tree="identifier: decrementBalanceOfBonded [76105,76129]"/>
  <delete-node tree="(: ( [76129,76130]"/>
  <delete-node tree=",: , [76145,76146]"/>
  <delete-node tree=",: , [76161,76162]"/>
  <delete-tree tree="parameter [76163,76183]"/>
  <delete-node tree="): ) [76183,76184]"/>
  <delete-tree tree="visibility [76185,76193]"/>
  <delete-node tree="{: { [76194,76195]"/>
  <delete-tree tree="member_expression [76204,76235]"/>
  <delete-node tree="=: = [76236,76237]"/>
  <delete-tree tree="member_expression [76238,76273]"/>
  <delete-node tree="(: ( [76273,76274]"/>
  <delete-node tree=",: , [76280,76281]"/>
  <delete-tree tree="call_argument [76282,76288]"/>
  <delete-node tree="): ) [76288,76289]"/>
  <delete-node tree="call_expression [76238,76289]"/>
  <delete-node tree="assignment_expression [76204,76289]"/>
  <delete-node tree="expression_statement [76204,76290]"/>
  <delete-tree tree="member_expression [76299,76320]"/>
  <delete-node tree="=: = [76321,76322]"/>
  <delete-tree tree="member_expression [76323,76348]"/>
  <delete-node tree="(: ( [76348,76349]"/>
  <delete-node tree=",: , [76355,76356]"/>
  <delete-tree tree="call_argument [76357,76363]"/>
  <delete-node tree="): ) [76363,76364]"/>
  <delete-node tree="call_expression [76323,76364]"/>
  <delete-node tree="assignment_expression [76299,76364]"/>
  <delete-node tree="expression_statement [76299,76365]"/>
  <delete-node tree="}: } [76370,76371]"/>
  <delete-node tree="function_body [76194,76371]"/>
  <delete-node tree="function_definition [76096,76371]"/>
  <delete-node tree="function: function [76377,76385]"/>
  <delete-node tree="identifier: incrementBalanceOfStaged [76386,76410]"/>
  <delete-node tree="(: ( [76410,76411]"/>
  <delete-tree tree="parameter [76411,76426]"/>
  <delete-node tree=",: , [76426,76427]"/>
  <delete-node tree="): ) [76442,76443]"/>
  <delete-node tree="{: { [76453,76454]"/>
  <delete-tree tree="member_expression [76463,76494]"/>
  <delete-node tree="=: = [76495,76496]"/>
  <delete-tree tree="member_expression [76497,76532]"/>
  <delete-node tree="(: ( [76532,76533]"/>
  <delete-node tree="): ) [76539,76540]"/>
  <delete-node tree="call_expression [76497,76540]"/>
  <delete-node tree="assignment_expression [76463,76540]"/>
  <delete-node tree="expression_statement [76463,76541]"/>
  <delete-tree tree="member_expression [76550,76571]"/>
  <delete-node tree="=: = [76572,76573]"/>
  <delete-tree tree="member_expression [76574,76599]"/>
  <delete-node tree="(: ( [76599,76600]"/>
  <delete-node tree="): ) [76606,76607]"/>
  <delete-node tree="call_expression [76574,76607]"/>
  <delete-node tree="assignment_expression [76550,76607]"/>
  <delete-node tree="expression_statement [76550,76608]"/>
  <delete-node tree="}: } [76613,76614]"/>
  <delete-node tree="function_body [76453,76614]"/>
  <delete-node tree="function_definition [76377,76614]"/>
  <delete-node tree="function: function [76620,76628]"/>
  <delete-node tree="identifier: decrementBalanceOfStaged [76629,76653]"/>
  <delete-node tree="(: ( [76653,76654]"/>
  <delete-tree tree="parameter [76654,76669]"/>
  <delete-node tree=",: , [76669,76670]"/>
  <delete-tree tree="parameter [76671,76685]"/>
  <delete-node tree=",: , [76685,76686]"/>
  <delete-tree tree="parameter [76687,76707]"/>
  <delete-node tree="): ) [76707,76708]"/>
  <delete-tree tree="visibility [76709,76717]"/>
  <delete-node tree="{: { [76718,76719]"/>
  <delete-tree tree="expression_statement [76728,76814]"/>
  <delete-tree tree="member_expression [76823,76844]"/>
  <delete-node tree="=: = [76845,76846]"/>
  <delete-tree tree="member_expression [76847,76872]"/>
  <delete-node tree="(: ( [76872,76873]"/>
  <delete-node tree=",: , [76879,76880]"/>
  <delete-tree tree="call_argument [76881,76887]"/>
  <delete-node tree="): ) [76887,76888]"/>
  <delete-node tree="call_expression [76847,76888]"/>
  <delete-node tree="assignment_expression [76823,76888]"/>
  <delete-node tree="expression_statement [76823,76889]"/>
  <delete-node tree="}: } [76894,76895]"/>
  <delete-node tree="function_body [76718,76895]"/>
  <delete-node tree="function_definition [76620,76895]"/>
  <delete-node tree="function: function [76901,76909]"/>
  <delete-node tree="identifier: incrementBalanceOfClaimable [76910,76937]"/>
  <delete-node tree="(: ( [76937,76938]"/>
  <delete-tree tree="parameter [76938,76953]"/>
  <delete-node tree=",: , [76953,76954]"/>
  <delete-tree tree="parameter [76955,76969]"/>
  <delete-node tree="): ) [76969,76970]"/>
  <delete-tree tree="visibility [76971,76979]"/>
  <delete-node tree="{: { [76980,76981]"/>
  <delete-tree tree="expression_statement [76990,77074]"/>
  <delete-tree tree="member_expression [77083,77107]"/>
  <delete-node tree="=: = [77108,77109]"/>
  <delete-tree tree="member_expression [77110,77138]"/>
  <delete-node tree="(: ( [77138,77139]"/>
  <delete-node tree="): ) [77145,77146]"/>
  <delete-node tree="call_expression [77110,77146]"/>
  <delete-node tree="assignment_expression [77083,77146]"/>
  <delete-node tree="expression_statement [77083,77147]"/>
  <delete-node tree="}: } [77152,77153]"/>
  <delete-node tree="function_body [76980,77153]"/>
  <delete-node tree="function_definition [76901,77153]"/>
  <delete-node tree="function: function [77159,77167]"/>
  <delete-node tree="identifier: decrementBalanceOfClaimable [77168,77195]"/>
  <delete-node tree="(: ( [77195,77196]"/>
  <delete-tree tree="parameter [77196,77211]"/>
  <delete-node tree=",: , [77211,77212]"/>
  <delete-tree tree="parameter [77213,77227]"/>
  <delete-node tree=",: , [77227,77228]"/>
  <delete-tree tree="parameter [77229,77249]"/>
  <delete-node tree="): ) [77249,77250]"/>
  <delete-tree tree="visibility [77251,77259]"/>
  <delete-node tree="{: { [77260,77261]"/>
  <delete-tree tree="expression_statement [77270,77362]"/>
  <delete-tree tree="member_expression [77371,77395]"/>
  <delete-node tree="=: = [77396,77397]"/>
  <delete-tree tree="member_expression [77398,77426]"/>
  <delete-node tree="(: ( [77426,77427]"/>
  <delete-node tree=",: , [77433,77434]"/>
  <delete-tree tree="call_argument [77435,77441]"/>
  <delete-node tree="): ) [77441,77442]"/>
  <delete-node tree="call_expression [77398,77442]"/>
  <delete-node tree="assignment_expression [77371,77442]"/>
  <delete-node tree="expression_statement [77371,77443]"/>
  <delete-node tree="}: } [77448,77449]"/>
  <delete-node tree="function_body [77260,77449]"/>
  <delete-node tree="function_definition [77159,77449]"/>
  <delete-node tree="function: function [77455,77463]"/>
  <delete-node tree="identifier: incrementBalanceOfPhantom [77464,77489]"/>
  <delete-node tree="(: ( [77489,77490]"/>
  <delete-tree tree="parameter [77490,77505]"/>
  <delete-node tree=",: , [77505,77506]"/>
  <delete-node tree="): ) [77521,77522]"/>
  <delete-tree tree="visibility [77523,77531]"/>
  <delete-node tree="{: { [77532,77533]"/>
  <delete-tree tree="expression_statement [77542,77622]"/>
  <delete-tree tree="member_expression [77631,77653]"/>
  <delete-node tree="=: = [77654,77655]"/>
  <delete-tree tree="member_expression [77656,77682]"/>
  <delete-node tree="(: ( [77682,77683]"/>
  <delete-node tree="): ) [77689,77690]"/>
  <delete-node tree="call_expression [77656,77690]"/>
  <delete-node tree="assignment_expression [77631,77690]"/>
  <delete-node tree="expression_statement [77631,77691]"/>
  <delete-node tree="}: } [77696,77697]"/>
  <delete-node tree="function_body [77532,77697]"/>
  <delete-node tree="function_definition [77455,77697]"/>
  <delete-node tree="function: function [77703,77711]"/>
  <delete-node tree="identifier: decrementBalanceOfPhantom [77712,77737]"/>
  <delete-node tree="(: ( [77737,77738]"/>
  <delete-tree tree="parameter [77738,77753]"/>
  <delete-node tree=",: , [77753,77754]"/>
  <delete-node tree=",: , [77769,77770]"/>
  <delete-tree tree="parameter [77771,77791]"/>
  <delete-node tree="): ) [77791,77792]"/>
  <delete-tree tree="visibility [77793,77801]"/>
  <delete-tree tree="function_body [77802,77983]"/>
  <delete-node tree="function_definition [77703,77983]"/>
  <delete-node tree="}: } [78137,78138]"/>
  <delete-node tree="contract_body [75682,78138]"/>
  <delete-node tree="contract_declaration [75635,78138]"/>
  <delete-node tree="contract: contract [78824,78832]"/>
  <delete-node tree="identifier: Liquidity [78833,78842]"/>
  <delete-node tree="is: is [78843,78845]"/>
  <delete-tree tree="inheritance_specifier [78846,78857]"/>
  <delete-node tree="{: { [78858,78859]"/>
  <delete-node tree="constant: constant [78880,78888]"/>
  <delete-node tree="identifier: UNISWAP_FACTORY [78889,78904]"/>
  <delete-node tree="=: = [78905,78906]"/>
  <delete-tree tree="type_cast_expression [78907,78958]"/>
  <delete-node tree="state_variable_declaration [78864,78959]"/>
  <delete-node tree="function: function [78965,78973]"/>
  <delete-node tree="identifier: addLiquidity [78974,78986]"/>
  <delete-node tree="(: ( [78986,78987]"/>
  <delete-node tree="): ) [79006,79007]"/>
  <delete-node tree="{: { [79044,79045]"/>
  <delete-tree tree="variable_declaration_tuple [79054,79082]"/>
  <delete-node tree="=: = [79083,79084]"/>
  <delete-node tree="(: ( [79085,79086]"/>
  <delete-tree tree="primitive_type [79086,79093]"/>
  <delete-node tree="(: ( [79093,79094]"/>
  <delete-node tree="): ) [79101,79102]"/>
  <delete-node tree="type_cast_expression [79086,79102]"/>
  <delete-node tree=",: , [79102,79103]"/>
  <delete-tree tree="call_expression [79104,79109]"/>
  <delete-node tree="): ) [79109,79110]"/>
  <delete-node tree="tuple_expression [79085,79110]"/>
  <delete-node tree="variable_declaration_statement [79054,79111]"/>
  <delete-node tree="(: ( [79120,79121]"/>
  <delete-node tree=",: , [79134,79135]"/>
  <delete-node tree="): ) [79149,79150]"/>
  <delete-node tree="variable_declaration_tuple [79120,79150]"/>
  <delete-node tree="=: = [79151,79152]"/>
  <delete-tree tree="call_expression [79153,79176]"/>
  <delete-node tree="variable_declaration_statement [79120,79177]"/>
  <delete-node tree="=: = [79205,79206]"/>
  <delete-tree tree="parenthesized_expression [79207,79239]"/>
  <delete-node tree="?: ? [79240,79241]"/>
  <delete-node tree="identifier: ethicAmount [79255,79266]"/>
  <delete-node tree=":: : [79267,79268]"/>
  <delete-tree tree="member_expression [79282,79304]"/>
  <delete-node tree="(: ( [79304,79305]"/>
  <delete-node tree=",: , [79316,79317]"/>
  <delete-tree tree="call_argument [79318,79326]"/>
  <delete-node tree=",: , [79326,79327]"/>
  <delete-tree tree="call_argument [79328,79336]"/>
  <delete-node tree="): ) [79336,79337]"/>
  <delete-node tree="call_expression [79282,79337]"/>
  <delete-node tree="ternary_expression [79207,79337]"/>
  <delete-node tree="variable_declaration_statement [79187,79338]"/>
  <delete-tree tree="variable_declaration_statement [79348,79380]"/>
  <delete-tree tree="member_expression [79389,79411]"/>
  <delete-node tree="(: ( [79411,79412]"/>
  <delete-tree tree="call_argument [79412,79416]"/>
  <delete-node tree=",: , [79416,79417]"/>
  <delete-node tree="): ) [79429,79430]"/>
  <delete-node tree="call_expression [79389,79430]"/>
  <delete-node tree="expression_statement [79389,79431]"/>
  <delete-node tree="return: return [79503,79509]"/>
  <delete-node tree="(: ( [79510,79511]"/>
  <delete-node tree="identifier: daiAmount [79511,79520]"/>
  <delete-node tree=",: , [79520,79521]"/>
  <delete-node tree="): ) [79562,79563]"/>
  <delete-node tree="tuple_expression [79510,79563]"/>
  <delete-node tree="return_statement [79503,79564]"/>
  <delete-node tree="}: } [79569,79570]"/>
  <delete-node tree="function_body [79044,79570]"/>
  <delete-node tree="function_definition [78965,79570]"/>
  <delete-node tree="comment: // overridable for testing [79576,79602]"/>
  <delete-node tree="function: function [79607,79615]"/>
  <delete-node tree="identifier: getReserves [79616,79627]"/>
  <delete-node tree="(: ( [79627,79628]"/>
  <delete-node tree=",: , [79642,79643]"/>
  <delete-node tree="): ) [79658,79659]"/>
  <delete-tree tree="visibility [79660,79668]"/>
  <delete-tree tree="state_mutability [79669,79673]"/>
  <delete-tree tree="return_type_definition [79674,79712]"/>
  <delete-node tree="{: { [79713,79714]"/>
  <delete-tree tree="variable_declaration_statement [79723,79787]"/>
  <delete-node tree="(: ( [79796,79797]"/>
  <delete-node tree=",: , [79810,79811]"/>
  <delete-node tree=",: , [79825,79826]"/>
  <delete-node tree="): ) [79826,79827]"/>
  <delete-node tree="variable_declaration_tuple [79796,79827]"/>
  <delete-node tree="=: = [79828,79829]"/>
  <delete-tree tree="call_expression [79830,79917]"/>
  <delete-node tree="variable_declaration_statement [79796,79918]"/>
  <delete-tree tree="expression_statement [79927,80013]"/>
  <delete-node tree="}: } [80018,80019]"/>
  <delete-node tree="function_body [79713,80019]"/>
  <delete-node tree="function_definition [79607,80019]"/>
  <delete-node tree="}: } [80020,80021]"/>
  <delete-node tree="contract_body [78858,80021]"/>
  <delete-node tree="contract_declaration [78824,80021]"/>
  <delete-tree tree="inheritance_specifier [80737,80746]"/>
  <delete-node tree="constructor: constructor [80786,80797]"/>
  <delete-node tree="(: ( [80797,80798]"/>
  <delete-tree tree="parameter [80798,80811]"/>
  <delete-node tree=",: , [80811,80812]"/>
  <delete-tree tree="parameter [80813,80826]"/>
  <delete-node tree="): ) [80826,80827]"/>
  <delete-node tree="public: public [80828,80834]"/>
  <delete-node tree="{: { [80835,80836]"/>
  <delete-tree tree="expression_statement [80893,80931]"/>
  <delete-tree tree="expression_statement [80940,80978]"/>
  <delete-node tree="}: } [80983,80984]"/>
  <delete-node tree="function_body [80835,80984]"/>
  <delete-node tree="constructor_definition [80786,80984]"/>
  <delete-node tree="function: function [82024,82032]"/>
  <delete-node tree="identifier: claim [82033,82038]"/>
  <delete-node tree="(: ( [82038,82039]"/>
  <delete-tree tree="parameter [82039,82052]"/>
  <delete-node tree="): ) [82052,82053]"/>
  <delete-node tree="{: { [82086,82087]"/>
  <delete-node tree="}: } [82298,82299]"/>
  <delete-node tree="function_body [82086,82299]"/>
  <delete-node tree="function_definition [82024,82299]"/>
  <delete-tree tree="binary_expression [82528,82548]"/>
  <delete-node tree="identifier: value [82591,82596]"/>
  <delete-node tree="number_literal: 0 [82600,82601]"/>
  <delete-node tree="?: ? [82514,82515]"/>
  <delete-node tree=":: : [82602,82603]"/>
  <delete-tree tree="call_expression [82616,82651]"/>
  <delete-node tree="ternary_expression [82495,82651]"/>
  <delete-node tree="identifier: incrementBalanceOfPhantom [82734,82759]"/>
  <delete-node tree="(: ( [82759,82760]"/>
  <delete-node tree=",: , [82770,82771]"/>
  <delete-tree tree="call_argument [82772,82782]"/>
  <delete-node tree="): ) [82782,82783]"/>
  <delete-node tree="call_expression [82734,82783]"/>
  <delete-node tree="expression_statement [82734,82784]"/>
  <delete-node tree="identifier: value [83386,83391]"/>
  <delete-node tree="=: = [83351,83352]"/>
  <delete-node tree=".: . [83392,83393]"/>
  <delete-node tree="identifier: div [83393,83396]"/>
  <delete-node tree="member_expression [83353,83396]"/>
  <delete-node tree="(: ( [83396,83397]"/>
  <delete-tree tree="call_argument [83397,83412]"/>
  <delete-node tree="): ) [83412,83413]"/>
  <delete-node tree="call_expression [83353,83413]"/>
  <delete-node tree="variable_declaration_statement [83331,83414]"/>
  <delete-tree tree="call_argument [69315,69333]"/>
  <delete-node tree=",: , [82186,82187]"/>
  <delete-node tree="identifier: newUniv2 [84528,84536]"/>
  <delete-tree tree="binary_expression [58625,58640]"/>
  <delete-node tree="function: function [84793,84801]"/>
  <delete-node tree="identifier: emergencyWithdraw [84802,84819]"/>
  <delete-node tree="(: ( [84819,84820]"/>
  <delete-tree tree="parameter [84820,84833]"/>
  <delete-node tree=",: , [84833,84834]"/>
  <delete-tree tree="parameter [84835,84848]"/>
  <delete-node tree="): ) [84848,84849]"/>
  <delete-tree tree="modifier_invocation [84859,84866]"/>
  <delete-tree tree="function_body [84867,84929]"/>
  <delete-node tree="function_definition [84793,84929]"/>
  <delete-node tree="function: function [84935,84943]"/>
  <delete-node tree="identifier: emergencyPause [84944,84958]"/>
  <delete-node tree="(: ( [84958,84959]"/>
  <delete-node tree="): ) [84959,84960]"/>
  <delete-tree tree="modifier_invocation [84970,84977]"/>
  <delete-tree tree="function_body [84978,85002]"/>
  <delete-node tree="function_definition [84935,85002]"/>
  <delete-node tree="modifier: modifier [85229,85237]"/>
  <delete-node tree="identifier: onlyFrozen [85238,85248]"/>
  <delete-node tree="(: ( [85248,85249]"/>
  <delete-tree tree="parameter [85249,85264]"/>
  <delete-node tree="): ) [85264,85265]"/>
  <delete-node tree="{: { [85266,85267]"/>
  <delete-tree tree="expression_statement [85413,85415]"/>
  <delete-node tree="}: } [85420,85421]"/>
  <delete-node tree="function_body [85266,85421]"/>
  <delete-node tree="modifier_definition [85229,85421]"/>
  <delete-node tree="modifier: modifier [85427,85435]"/>
  <delete-node tree="identifier: onlyDao [85436,85443]"/>
  <delete-node tree="(: ( [85443,85444]"/>
  <delete-node tree="): ) [85444,85445]"/>
  <delete-node tree="{: { [85446,85447]"/>
  <delete-tree tree="expression_statement [85572,85574]"/>
  <delete-node tree="}: } [85579,85580]"/>
  <delete-node tree="function_body [85446,85580]"/>
  <delete-node tree="modifier_definition [85427,85580]"/>
  <delete-node tree="modifier: modifier [85586,85594]"/>
  <delete-node tree="identifier: notPaused [85595,85604]"/>
  <delete-node tree="(: ( [85604,85605]"/>
  <delete-node tree="): ) [85605,85606]"/>
  <delete-node tree="{: { [85607,85608]"/>
  <delete-tree tree="expression_statement [85713,85715]"/>
  <delete-node tree="}: } [85720,85721]"/>
  <delete-node tree="function_body [85607,85721]"/>
  <delete-node tree="modifier_definition [85586,85721]"/>
  <delete-node tree="comment: /*     Copyright 2021 Ethic Money Devs &lt;devs@ethic.money&gt; and Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [87244,87927]"/>
  <delete-node tree=",: , [81429,81430]"/>
  <delete-node tree=",: , [81446,81447]"/>
  <delete-node tree="&gt;=: &gt;= [84217,84219]"/>
  <delete-node tree="identifier: value [84220,84225]"/>
  <delete-tree tree="call_argument [85482,85510]"/>
  <delete-tree tree="unary_expression [85643,85652]"/>
  <delete-node tree=".: . [83289,83290]"/>
  <delete-node tree="identifier: mul [83290,83293]"/>
  <delete-node tree="member_expression [83260,83293]"/>
  <delete-node tree="(: ( [83293,83294]"/>
  <delete-tree tree="call_argument [83294,83299]"/>
  <delete-node tree="): ) [83299,83300]"/>
  <delete-node tree="call_expression [83260,83300]"/>
  <delete-node tree=".: . [83300,83301]"/>
  <delete-node tree="identifier: div [83301,83304]"/>
  <delete-node tree="member_expression [83260,83304]"/>
  <delete-node tree="(: ( [83304,83305]"/>
  <delete-tree tree="call_argument [83305,83320]"/>
  <delete-node tree="): ) [83320,83321]"/>
  <delete-node tree="call_expression [83260,83321]"/>
  <delete-tree tree="call_argument [25931,25953]"/>
  <delete-tree tree="call_argument [25223,25241]"/>
  <delete-node tree=",: , [83582,83583]"/>
  <delete-tree tree="parameter [83844,83857]"/>
  <delete-node tree="identifier: onlyFrozen [83868,83878]"/>
  <delete-node tree="(: ( [83878,83879]"/>
  <delete-node tree="): ) [83889,83890]"/>
  <delete-node tree="modifier_invocation [83868,83890]"/>
  <delete-tree tree="modifier_invocation [83891,83900]"/>
  <delete-tree tree="binary_expression [84060,84079]"/>
  <delete-node tree="identifier: value [84452,84457]"/>
  <delete-tree tree="member_expression [85302,85348]"/>
  <delete-node tree=",: , [84760,84761]"/>
  <delete-tree tree="call_argument [84762,84769]"/>
  <delete-node tree=",: , [84769,84770]"/>
  <delete-tree tree="call_argument [84771,84779]"/>
  <delete-node tree="&gt;: &gt; [83951,83952]"/>
  <delete-node tree="number_literal: 0 [83953,83954]"/>
  <delete-node tree="binary_expression [83937,83954]"/>
  <delete-tree tree="binary_expression [83136,83155]"/>
  <delete-tree tree="binary_expression [66278,66289]"/>
  <delete-node tree="||: || [66290,66292]"/>
  <delete-tree tree="binary_expression [66293,66309]"/>
  <delete-tree tree="member_expression [74265,74306]"/>
  <delete-node tree=".: . [74345,74346]"/>
  <delete-node tree="identifier: div [74346,74349]"/>
  <delete-node tree="member_expression [74265,74349]"/>
  <delete-node tree="(: ( [74349,74350]"/>
  <delete-tree tree="call_argument [74350,74361]"/>
  <delete-node tree="): ) [74361,74362]"/>
  <delete-node tree="call_expression [74265,74362]"/>
  <delete-tree tree="member_expression [79440,79464]"/>
  <delete-tree tree="call_argument [79477,79481]"/>
  <delete-node tree=",: , [79481,79482]"/>
  <delete-tree tree="call_argument [79483,79492]"/>
  <delete-tree tree="member_expression [81818,81834]"/>
  <delete-node tree="identifier: value [81847,81852]"/>
  <delete-node tree="%: % [60001,60002]"/>
  <delete-tree tree="binary_expression [60003,60010]"/>
  <delete-node tree="binary_expression [59985,60010]"/>
  <delete-node tree="comment: /*     Copyright 2021 Ethic Money Devs &lt;devs@ethic.money&gt; and Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [105816,106499]"/>
  <delete-node tree="comment: /*     Copyright 2021 Ethic Money Devs &lt;devs@ethic.money&gt; and Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;          Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at          http://www.apache.org/licenses/LICENSE-2.0          Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [107314,108009]"/>
  <delete-node tree="contract: contract [108010,108018]"/>
  <delete-node tree="identifier: Deployer1 [108019,108028]"/>
  <delete-node tree="is: is [108029,108031]"/>
  <delete-node tree=",: , [108037,108038]"/>
  <delete-node tree=",: , [108049,108050]"/>
  <delete-node tree="{: { [108063,108064]"/>
  <delete-node tree="function: function [108069,108077]"/>
  <delete-node tree="identifier: initialize [108078,108088]"/>
  <delete-node tree="(: ( [108088,108089]"/>
  <delete-node tree="): ) [108089,108090]"/>
  <delete-tree tree="visibility [108103,108109]"/>
  <delete-tree tree="function_body [108110,108162]"/>
  <delete-node tree="function_definition [108069,108162]"/>
  <delete-tree tree="function_definition [108168,108262]"/>
  <delete-node tree="}: } [108263,108264]"/>
  <delete-node tree="contract_body [108063,108264]"/>
  <delete-node tree="contract_declaration [108010,108264]"/>
  <delete-node tree="contract: contract [108266,108274]"/>
  <delete-node tree="identifier: Deployer2 [108275,108284]"/>
  <delete-node tree="is: is [108285,108287]"/>
  <delete-tree tree="inheritance_specifier [108288,108293]"/>
  <delete-node tree=",: , [108293,108294]"/>
  <delete-node tree=",: , [108305,108306]"/>
  <delete-tree tree="inheritance_specifier [108307,108318]"/>
  <delete-node tree="{: { [108319,108320]"/>
  <delete-node tree="function: function [108325,108333]"/>
  <delete-node tree="identifier: initialize [108334,108344]"/>
  <delete-node tree="(: ( [108344,108345]"/>
  <delete-node tree="): ) [108345,108346]"/>
  <delete-tree tree="modifier_invocation [108347,108358]"/>
  <delete-tree tree="visibility [108359,108365]"/>
  <delete-node tree="{: { [108366,108367]"/>
  <delete-tree tree="member_expression [108376,108398]"/>
  <delete-node tree="=: = [108399,108400]"/>
  <delete-tree tree="new_expression [108401,108411]"/>
  <delete-node tree="(: ( [108411,108412]"/>
  <delete-tree tree="primitive_type [108412,108419]"/>
  <delete-node tree="(: ( [108419,108420]"/>
  <delete-node tree="call_argument [108420,108427]"/>
  <delete-node tree="): ) [108427,108428]"/>
  <delete-node tree="type_cast_expression [108412,108428]"/>
  <delete-node tree="call_argument [108412,108428]"/>
  <delete-node tree="): ) [108428,108429]"/>
  <delete-node tree="call_expression [108401,108429]"/>
  <delete-node tree="assignment_expression [108376,108429]"/>
  <delete-node tree="expression_statement [108376,108430]"/>
  <delete-node tree="(: ( [108453,108454]"/>
  <delete-node tree="): ) [108454,108455]"/>
  <delete-node tree="call_expression [108439,108455]"/>
  <delete-node tree="expression_statement [108439,108456]"/>
  <delete-node tree="}: } [108462,108463]"/>
  <delete-node tree="function_body [108366,108463]"/>
  <delete-node tree="function_definition [108325,108463]"/>
  <delete-tree tree="function_definition [108469,108563]"/>
  <delete-node tree="}: } [108564,108565]"/>
  <delete-node tree="contract_body [108319,108565]"/>
  <delete-node tree="contract_declaration [108266,108565]"/>
  <delete-node tree="contract: contract [108567,108575]"/>
  <delete-node tree="identifier: Deployer3 [108576,108585]"/>
  <delete-node tree="is: is [108586,108588]"/>
  <delete-tree tree="inheritance_specifier [108589,108594]"/>
  <delete-node tree=",: , [108594,108595]"/>
  <delete-tree tree="inheritance_specifier [108596,108606]"/>
  <delete-node tree=",: , [108606,108607]"/>
  <delete-tree tree="inheritance_specifier [108608,108619]"/>
  <delete-node tree="{: { [108620,108621]"/>
  <delete-node tree="function: function [108626,108634]"/>
  <delete-node tree="identifier: initialize [108635,108645]"/>
  <delete-node tree="(: ( [108645,108646]"/>
  <delete-node tree="): ) [108646,108647]"/>
  <delete-tree tree="modifier_invocation [108648,108659]"/>
  <delete-tree tree="visibility [108660,108666]"/>
  <delete-node tree="{: { [108667,108668]"/>
  <delete-tree tree="member_expression [108677,108697]"/>
  <delete-node tree="=: = [108698,108699]"/>
  <delete-tree tree="primitive_type [108700,108707]"/>
  <delete-node tree="(: ( [108707,108708]"/>
  <delete-tree tree="new_expression [108708,108716]"/>
  <delete-node tree="(: ( [108716,108717]"/>
  <delete-tree tree="primitive_type [108717,108724]"/>
  <delete-node tree="(: ( [108724,108725]"/>
  <delete-node tree="call_argument [108725,108732]"/>
  <delete-node tree="): ) [108732,108733]"/>
  <delete-node tree="type_cast_expression [108717,108733]"/>
  <delete-node tree="call_argument [108717,108733]"/>
  <delete-node tree=",: , [108733,108734]"/>
  <delete-tree tree="call_argument [108735,108759]"/>
  <delete-node tree="): ) [108759,108760]"/>
  <delete-node tree="call_expression [108708,108760]"/>
  <delete-node tree="call_argument [108708,108760]"/>
  <delete-node tree="): ) [108760,108761]"/>
  <delete-node tree="type_cast_expression [108700,108761]"/>
  <delete-node tree="assignment_expression [108677,108761]"/>
  <delete-node tree="expression_statement [108677,108762]"/>
  <delete-node tree="}: } [108767,108768]"/>
  <delete-node tree="function_body [108667,108768]"/>
  <delete-node tree="function_definition [108626,108768]"/>
  <delete-tree tree="function_definition [108774,108868]"/>
  <delete-node tree="}: } [108875,108876]"/>
  <delete-node tree="contract_body [108620,108876]"/>
  <delete-node tree="contract_declaration [108567,108876]"/>
</actions>
