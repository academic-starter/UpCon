{
  "matches": [
    {
      "src": "block_statement [1106,1160]",
      "dest": "block_statement [1266,1320]"
    },
    {
      "src": "user_defined_type [231,249]",
      "dest": "user_defined_type [231,249]"
    },
    {
      "src": "{: { [1018,1019]",
      "dest": "{: { [1178,1179]"
    },
    {
      "src": "is: is [228,230]",
      "dest": "is: is [228,230]"
    },
    {
      "src": "constructor: constructor [327,338]",
      "dest": "constructor: constructor [327,338]"
    },
    {
      "src": "{: { [258,259]",
      "dest": "{: { [258,259]"
    },
    {
      "src": "): ) [1195,1196]",
      "dest": "): ) [3197,3198]"
    },
    {
      "src": "\": \" [48,49]",
      "dest": "\": \" [48,49]"
    },
    {
      "src": "identifier: CErc20Delegate [213,227]",
      "dest": "identifier: CErc20Delegate [213,227]"
    },
    {
      "src": "contract_declaration [204,1257]",
      "dest": "contract_declaration [204,3995]"
    },
    {
      "src": "block_statement [720,774]",
      "dest": "block_statement [724,778]"
    },
    {
      "src": "if_statement [709,774]",
      "dest": "if_statement [713,778]"
    },
    {
      "src": "false [1099,1104]",
      "dest": "false [1259,1264]"
    },
    {
      "src": "}: } [1253,1254]",
      "dest": "}: } [1326,1327]"
    },
    {
      "src": "false [713,718]",
      "dest": "false [717,722]"
    },
    {
      "src": "}: } [773,774]",
      "dest": "}: } [777,778]"
    },
    {
      "src": "(: ( [1098,1099]",
      "dest": "(: ( [1258,1259]"
    },
    {
      "src": "type_name [553,558]",
      "dest": "type_name [553,558]"
    },
    {
      "src": "function_body [579,868]",
      "dest": "function_body [583,1026]"
    },
    {
      "src": "function: function [522,530]",
      "dest": "function: function [522,530]"
    },
    {
      "src": "call_argument [1180,1196]",
      "dest": "call_argument [3182,3198]"
    },
    {
      "src": "comment: // Shh -- we don't ever want this hook to be marked pure [643,699]",
      "dest": "comment: // Shh -- we don't ever want this hook to be marked pure [647,703]"
    },
    {
      "src": "): ) [1147,1148]",
      "dest": "): ) [1307,1308]"
    },
    {
      "src": "primitive_type [1138,1145]",
      "dest": "primitive_type [1298,1305]"
    },
    {
      "src": "{: { [1106,1107]",
      "dest": "{: { [1266,1267]"
    },
    {
      "src": "identifier: hasAdminRights [1180,1194]",
      "dest": "identifier: hasAdminRights [3182,3196]"
    },
    {
      "src": "expression_statement [1172,1247]",
      "dest": "expression_statement [3174,3210]"
    },
    {
      "src": "^:  ^ [15,17]",
      "dest": "^:  ^ [15,17]"
    },
    {
      "src": "function_definition [522,868]",
      "dest": "function_definition [522,1026]"
    },
    {
      "src": "if_statement [1095,1160]",
      "dest": "if_statement [1255,1320]"
    },
    {
      "src": "\": \" [35,36]",
      "dest": "\": \" [35,36]"
    },
    {
      "src": "constructor_definition [327,350]",
      "dest": "constructor_definition [327,350]"
    },
    {
      "src": "): ) [570,571]",
      "dest": "): ) [572,573]"
    },
    {
      "src": "assignment_expression [735,762]",
      "dest": "assignment_expression [739,766]"
    },
    {
      "src": "visibility [1011,1017]",
      "dest": "visibility [1169,1177]"
    },
    {
      "src": "contract: contract [204,212]",
      "dest": "contract: contract [204,212]"
    },
    {
      "src": "identifier: CErc20 [251,257]",
      "dest": "identifier: CErc20 [251,257]"
    },
    {
      "src": "comment: /**      * @notice Called by the delegator on a delegate to initialize it for duty      * @param data The encoded bytes data for any initialization      */ [358,516]",
      "dest": "comment: /**      * @notice Called by the delegator on a delegate to initialize it for duty      * @param data The encoded bytes data for any initialization      */ [358,516]"
    },
    {
      "src": "identifier: require [1172,1179]",
      "dest": "identifier: require [3174,3181]"
    },
    {
      "src": "comment: // Shh -- currently unused [590,616]",
      "dest": "comment: // Shh -- currently unused [594,620]"
    },
    {
      "src": "comment: /**      * @notice Construct an empty delegate      */ [265,321]",
      "dest": "comment: /**      * @notice Construct an empty delegate      */ [265,321]"
    },
    {
      "src": "primitive_type [553,558]",
      "dest": "primitive_type [553,558]"
    },
    {
      "src": "inheritance_specifier [231,249]",
      "dest": "inheritance_specifier [231,249]"
    },
    {
      "src": "}: } [1256,1257]",
      "dest": "}: } [3994,3995]"
    },
    {
      "src": "function_body [348,350]",
      "dest": "function_body [348,350]"
    },
    {
      "src": "(: ( [1008,1009]",
      "dest": "(: ( [1166,1167]"
    },
    {
      "src": "solidity_pragma_token [7,23]",
      "dest": "solidity_pragma_token [7,23]"
    },
    {
      "src": "identifier: CDelegateInterface [231,249]",
      "dest": "identifier: CDelegateInterface [231,249]"
    },
    {
      "src": "\": \" [1244,1245]",
      "dest": "\": \" [3207,3208]"
    },
    {
      "src": "{: { [348,349]",
      "dest": "{: { [348,349]"
    },
    {
      "src": "{: { [579,580]",
      "dest": "{: { [583,584]"
    },
    {
      "src": "): ) [718,719]",
      "dest": "): ) [722,723]"
    },
    {
      "src": "expression_statement [1121,1149]",
      "dest": "expression_statement [1281,1309]"
    },
    {
      "src": "solidity_version_comparison_operator [15,17]",
      "dest": "solidity_version_comparison_operator [15,17]"
    },
    {
      "src": "address: address [1138,1145]",
      "dest": "address: address [1298,1305]"
    },
    {
      "src": "): ) [761,762]",
      "dest": "): ) [765,766]"
    },
    {
      "src": "public: public [341,347]",
      "dest": "public: public [341,347]"
    },
    {
      "src": "call_argument [1198,1245]",
      "dest": "call_argument [3200,3208]"
    },
    {
      "src": "function_body [1018,1254]",
      "dest": "function_body [1178,1327]"
    },
    {
      "src": "(: ( [712,713]",
      "dest": "(: ( [716,717]"
    },
    {
      "src": "boolean_literal [713,718]",
      "dest": "boolean_literal [717,722]"
    },
    {
      "src": "comment: /**  * @title Compound's CErc20Delegate Contract  * @notice CTokens which wrap an EIP-20 underlying and are delegated to  * @author Compound  */ [54,202]",
      "dest": "comment: /**  * @title Compound's CErc20Delegate Contract  * @notice CTokens which wrap an EIP-20 underlying and are delegated to  * @author Compound  */ [54,202]"
    },
    {
      "src": "false: false [713,718]",
      "dest": "false: false [717,722]"
    },
    {
      "src": ",: , [1196,1197]",
      "dest": ",: , [3198,3199]"
    },
    {
      "src": "false: false [1099,1104]",
      "dest": "false: false [1259,1264]"
    },
    {
      "src": "): ) [1104,1105]",
      "dest": "): ) [1264,1265]"
    },
    {
      "src": "number_literal: 0 [760,761]",
      "dest": "number_literal: 0 [764,765]"
    },
    {
      "src": "identifier: _becomeImplementation [531,552]",
      "dest": "identifier: _becomeImplementation [531,552]"
    },
    {
      "src": "address: address [752,759]",
      "dest": "address: address [756,763]"
    },
    {
      "src": "comment: // Shh -- we don't ever want this hook to be marked pure [1029,1085]",
      "dest": "comment: // Shh -- we don't ever want this hook to be marked pure [1189,1245]"
    },
    {
      "src": "contract_body [258,1257]",
      "dest": "contract_body [258,3995]"
    },
    {
      "src": "visibility [572,578]",
      "dest": "visibility [574,582]"
    },
    {
      "src": "identifier: implementation [735,749]",
      "dest": "identifier: implementation [739,753]"
    },
    {
      "src": "}: } [1159,1160]",
      "dest": "}: } [1319,1320]"
    },
    {
      "src": "pragma: pragma [0,6]",
      "dest": "pragma: pragma [0,6]"
    },
    {
      "src": "if: if [1095,1097]",
      "dest": "if: if [1255,1257]"
    },
    {
      "src": "(: ( [759,760]",
      "dest": "(: ( [763,764]"
    },
    {
      "src": "identifier: data [626,630]",
      "dest": "identifier: data [630,634]"
    },
    {
      "src": "if: if [709,711]",
      "dest": "if: if [713,715]"
    },
    {
      "src": "(: ( [1194,1195]",
      "dest": "(: ( [3196,3197]"
    },
    {
      "src": "pragma_directive [0,24]",
      "dest": "pragma_directive [0,24]"
    },
    {
      "src": "{: { [720,721]",
      "dest": "{: { [724,725]"
    },
    {
      "src": "call_expression [1172,1246]",
      "dest": "call_expression [3174,3209]"
    },
    {
      "src": "solidity_version: 0.5.16 [17,23]",
      "dest": "solidity_version: 0.5.16 [17,23]"
    },
    {
      "src": "string_literal [1198,1245]",
      "dest": "string_literal [3200,3208]"
    },
    {
      "src": "}: } [867,868]",
      "dest": "}: } [1025,1026]"
    },
    {
      "src": "=: = [750,751]",
      "dest": "=: = [754,755]"
    },
    {
      "src": "(: ( [1145,1146]",
      "dest": "(: ( [1305,1306]"
    },
    {
      "src": "expression_statement [735,763]",
      "dest": "expression_statement [739,767]"
    },
    {
      "src": "source_file [0,1259]",
      "dest": "source_file [0,3997]"
    },
    {
      "src": "parameter [553,570]",
      "dest": "parameter [553,572]"
    },
    {
      "src": "=: = [1136,1137]",
      "dest": "=: = [1296,1297]"
    },
    {
      "src": "primitive_type [752,759]",
      "dest": "primitive_type [756,763]"
    },
    {
      "src": "solidity: solidity [7,15]",
      "dest": "solidity: solidity [7,15]"
    },
    {
      "src": "(: ( [552,553]",
      "dest": "(: ( [552,553]"
    },
    {
      "src": "comment: /**      * @notice Called by the delegator on a delegate to forfeit its responsibility      */ [876,972]",
      "dest": "comment: /**      * @notice Called by the delegator on a delegate to forfeit its responsibility      */ [1034,1130]"
    },
    {
      "src": "user_defined_type [251,257]",
      "dest": "user_defined_type [251,257]"
    },
    {
      "src": ",: , [249,250]",
      "dest": ",: , [249,250]"
    },
    {
      "src": "boolean_literal [1099,1104]",
      "dest": "boolean_literal [1259,1264]"
    },
    {
      "src": "string [1198,1245]",
      "dest": "string [3200,3208]"
    },
    {
      "src": "identifier: data [566,570]",
      "dest": "identifier: data [568,572]"
    },
    {
      "src": "(: ( [1179,1180]",
      "dest": "(: ( [3181,3182]"
    },
    {
      "src": "): ) [1009,1010]",
      "dest": "): ) [1167,1168]"
    },
    {
      "src": "\": \" [1198,1199]",
      "dest": "\": \" [3200,3201]"
    },
    {
      "src": "import_directive [28,50]",
      "dest": "import_directive [28,50]"
    },
    {
      "src": "}: } [349,350]",
      "dest": "}: } [349,350]"
    },
    {
      "src": "type_cast_expression [752,762]",
      "dest": "type_cast_expression [756,766]"
    },
    {
      "src": "string [35,49]",
      "dest": "string [35,49]"
    },
    {
      "src": "call_expression [1180,1196]",
      "dest": "call_expression [3182,3198]"
    },
    {
      "src": "function: function [978,986]",
      "dest": "function: function [1136,1144]"
    },
    {
      "src": "identifier: implementation [1121,1135]",
      "dest": "identifier: implementation [1281,1295]"
    },
    {
      "src": "): ) [339,340]",
      "dest": "): ) [339,340]"
    },
    {
      "src": "call_argument [1146,1147]",
      "dest": "call_argument [1306,1307]"
    },
    {
      "src": "expression_statement [626,631]",
      "dest": "expression_statement [630,635]"
    },
    {
      "src": "(: ( [338,339]",
      "dest": "(: ( [338,339]"
    },
    {
      "src": "bytes: bytes [553,558]",
      "dest": "bytes: bytes [553,558]"
    },
    {
      "src": "type_cast_expression [1138,1148]",
      "dest": "type_cast_expression [1298,1308]"
    },
    {
      "src": "import: import [28,34]",
      "dest": "import: import [28,34]"
    },
    {
      "src": "inheritance_specifier [251,257]",
      "dest": "inheritance_specifier [251,257]"
    },
    {
      "src": "function_definition [978,1254]",
      "dest": "function_definition [1136,1327]"
    },
    {
      "src": "): ) [1245,1246]",
      "dest": "): ) [3208,3209]"
    },
    {
      "src": "identifier: _resignImplementation [987,1008]",
      "dest": "identifier: _resignImplementation [1145,1166]"
    },
    {
      "src": "call_argument [760,761]",
      "dest": "call_argument [764,765]"
    },
    {
      "src": "assignment_expression [1121,1148]",
      "dest": "assignment_expression [1281,1308]"
    },
    {
      "src": "number_literal: 0 [1146,1147]",
      "dest": "number_literal: 0 [1306,1307]"
    }
  ],
  "actions": [
    {
      "action": "insert-node",
      "tree": "comment: /**      * @dev Internal function to update the implementation of the delegator      * @param implementation_ The address of the new implementation for delegation      * @param allowResign Flag to indicate whether to call _resignImplementation on the old implementation      * @param becomeImplementationData The encoded bytes data to be passed to _becomeImplementation      */ [1335,1717]",
      "parent": "contract_body [258,3995]",
      "at": 7
    },
    {
      "action": "insert-tree",
      "tree": "function_definition [1723,2606]",
      "parent": "contract_body [258,3995]",
      "at": 8
    },
    {
      "action": "insert-node",
      "tree": "comment: /**      * @notice Called by the admin to update the implementation of the delegator      * @param implementation_ The address of the new implementation for delegation      * @param allowResign Flag to indicate whether to call _resignImplementation on the old implementation      * @param becomeImplementationData The encoded bytes data to be passed to _becomeImplementation      */ [2614,3001]",
      "parent": "contract_body [258,3995]",
      "at": 9
    },
    {
      "action": "insert-node",
      "tree": "function_definition [3007,3343]",
      "parent": "contract_body [258,3995]",
      "at": 10
    },
    {
      "action": "insert-node",
      "tree": "comment: /**      * @notice Function called before all delegator functions      * @dev Checks comptroller.autoImplementation and upgrades the implementation if necessary      */ [3351,3522]",
      "parent": "contract_body [258,3995]",
      "at": 11
    },
    {
      "action": "insert-tree",
      "tree": "function_definition [3528,3992]",
      "parent": "contract_body [258,3995]",
      "at": 12
    },
    {
      "action": "insert-node",
      "tree": "function: function [3007,3015]",
      "parent": "function_definition [3007,3343]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: _setImplementationSafe [3016,3038]",
      "parent": "function_definition [3007,3343]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [3038,3039]",
      "parent": "function_definition [3007,3343]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "parameter [3039,3062]",
      "parent": "function_definition [3007,3343]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": ",: , [3062,3063]",
      "parent": "function_definition [3007,3343]",
      "at": 4
    },
    {
      "action": "insert-tree",
      "tree": "parameter [3064,3080]",
      "parent": "function_definition [3007,3343]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": ",: , [3080,3081]",
      "parent": "function_definition [3007,3343]",
      "at": 6
    },
    {
      "action": "insert-tree",
      "tree": "parameter [3082,3121]",
      "parent": "function_definition [3007,3343]",
      "at": 7
    },
    {
      "action": "insert-node",
      "tree": "): ) [3121,3122]",
      "parent": "function_definition [3007,3343]",
      "at": 8
    },
    {
      "action": "insert-tree",
      "tree": "visibility [3123,3131]",
      "parent": "function_definition [3007,3343]",
      "at": 9
    },
    {
      "action": "insert-node",
      "tree": "function_body [3132,3343]",
      "parent": "function_definition [3007,3343]",
      "at": 10
    },
    {
      "action": "insert-node",
      "tree": "calldata: calldata [559,567]",
      "parent": "parameter [553,572]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "external: external [574,582]",
      "parent": "visibility [574,582]",
      "at": 0
    },
    {
      "action": "insert-tree",
      "tree": "expression_statement [790,856]",
      "parent": "function_body [583,1026]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": "comment: // Make sure admin storage is set up correctly [868,914]",
      "parent": "function_body [583,1026]",
      "at": 6
    },
    {
      "action": "insert-tree",
      "tree": "expression_statement [924,945]",
      "parent": "function_body [583,1026]",
      "at": 7
    },
    {
      "action": "insert-tree",
      "tree": "expression_statement [955,980]",
      "parent": "function_body [583,1026]",
      "at": 8
    },
    {
      "action": "insert-tree",
      "tree": "expression_statement [990,1019]",
      "parent": "function_body [583,1026]",
      "at": 9
    },
    {
      "action": "insert-node",
      "tree": "internal: internal [1169,1177]",
      "parent": "visibility [1169,1177]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "{: { [3132,3133]",
      "parent": "function_body [3132,3343]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "comment: // Check admin rights [3143,3164]",
      "parent": "function_body [3132,3343]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "expression_statement [1172,1247]",
      "parent": "function_body [3132,3343]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "comment: // Set implementation [3222,3243]",
      "parent": "function_body [3132,3343]",
      "at": 3
    },
    {
      "action": "insert-tree",
      "tree": "expression_statement [3253,3336]",
      "parent": "function_body [3132,3343]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "}: } [3342,3343]",
      "parent": "function_body [3132,3343]",
      "at": 5
    },
    {
      "action": "delete-node",
      "tree": "memory: memory [559,565]"
    },
    {
      "action": "delete-node",
      "tree": "public: public [572,578]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [786,861]"
    },
    {
      "action": "delete-node",
      "tree": "public: public [1011,1017]"
    }
  ]
}