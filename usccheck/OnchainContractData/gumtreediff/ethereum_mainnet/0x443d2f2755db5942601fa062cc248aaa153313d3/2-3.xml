<?xml version="1.0" ?>
<matches>
  <match src=".: . [95272,95273]" dest=".: . [36032,36033]"/>
  <match src="}: } [6616,6617]" dest="}: } [7180,7181]"/>
  <match src=",: , [28104,28105]" dest=",: , [41482,41483]"/>
  <match src="++: ++ [7680,7682]" dest="++: ++ [8244,8246]"/>
  <match src="identifier: size [80426,80430]" dest="identifier: size [67248,67252]"/>
  <match src="call_expression [32478,32497]" dest="call_expression [45856,45875]"/>
  <match src="call_argument [9304,9305]" dest="call_argument [9868,9869]"/>
  <match src="identifier: COLON [31041,31046]" dest="identifier: COLON [44419,44424]"/>
  <match src="call_expression [93939,93978]" dest="call_expression [34699,34738]"/>
  <match src="public: public [88370,88376]" dest="public: public [29130,29136]"/>
  <match src="yul_identifier [92237,92241]" dest="yul_identifier [32997,33001]"/>
  <match src="call_expression [73695,73715]" dest="call_expression [54252,54260]"/>
  <match src="(: ( [95978,95979]" dest="(: ( [36738,36739]"/>
  <match src="array_access [95531,95555]" dest="array_access [36291,36315]"/>
  <match src="): ) [7392,7393]" dest="): ) [7956,7957]"/>
  <match src="): ) [872,873]" dest="): ) [1436,1437]"/>
  <match src="comment: // 10,000 USDC [41749,41763]" dest="comment: // 10,000 USDC [23853,23867]"/>
  <match src="identifier: expiringCoupons [90388,90403]" dest="identifier: expiringCoupons [31148,31163]"/>
  <match src="identifier: result [36000,36006]" dest="identifier: result [49378,49384]"/>
  <match src="identifier: msg [76350,76353]" dest="identifier: msg [64628,64631]"/>
  <match src="identifier: candidate [91651,91660]" dest="identifier: candidate [32411,32420]"/>
  <match src="identifier: sender [77721,77727]" dest="identifier: sender [72655,72661]"/>
  <match src="}: } [93825,93826]" dest="}: } [34585,34586]"/>
  <match src="identifier: Transfer [49236,49244]" dest="identifier: Transfer [13943,13951]"/>
  <match src="function: function [49691,49699]" dest="function: function [14398,14406]"/>
  <match src="identifier: div [2554,2557]" dest="identifier: div [3118,3121]"/>
  <match src="parameter [12329,12342]" dest="parameter [17267,17280]"/>
  <match src="): ) [28177,28178]" dest="): ) [41555,41556]"/>
  <match src="identifier: Decimal [60384,60391]" dest="identifier: Decimal [59621,59628]"/>
  <match src=".: . [89332,89333]" dest=".: . [30092,30093]"/>
  <match src="address: address [21988,21995]" dest="address: address [58003,58010]"/>
  <match src=".: . [100054,100055]" dest=".: . [62411,62412]"/>
  <match src="private: private [42329,42336]" dest="private: private [24433,24440]"/>
  <match src="): ) [89068,89069]" dest="): ) [29828,29829]"/>
  <match src="call_expression [101985,101993]" dest="call_expression [51836,51844]"/>
  <match src="number_literal: 0 [9558,9559]" dest="number_literal: 0 [10122,10123]"/>
  <match src="member_expression [88495,88527]" dest="member_expression [29255,29287]"/>
  <match src="(: ( [88413,88414]" dest="(: ( [29173,29174]"/>
  <match src="member_expression [8121,8128]" dest="member_expression [8685,8692]"/>
  <match src="type_name [93262,93269]" dest="type_name [34022,34029]"/>
  <match src="): ) [29267,29268]" dest="): ) [42645,42646]"/>
  <match src="): ) [88257,88258]" dest="): ) [29017,29018]"/>
  <match src=".: . [84791,84792]" dest=".: . [69466,69467]"/>
  <match src="identifier: mint [47022,47026]" dest="identifier: mint [19720,19724]"/>
  <match src="type_name [8931,8935]" dest="type_name [9495,9499]"/>
  <match src="return_statement [7741,7753]" dest="return_statement [8305,8317]"/>
  <match src="identifier: value [10104,10109]" dest="identifier: value [10668,10673]"/>
  <match src="identifier: sender [11042,11048]" dest="identifier: sender [58649,58655]"/>
  <match src="modifier_invocation [76299,76321]" dest="modifier_invocation [65846,65875]"/>
  <match src="): ) [28195,28196]" dest="): ) [41573,41574]"/>
  <match src="identifier: value [75893,75898]" dest="identifier: value [64466,64471]"/>
  <match src="parameter [9480,9496]" dest="parameter [10044,10060]"/>
  <match src=".: . [69130,69131]" dest=".: . [71808,71809]"/>
  <match src="primitive_type [3399,3406]" dest="primitive_type [3963,3970]"/>
  <match src="parameter [47027,47042]" dest="parameter [19725,19740]"/>
  <match src="): ) [73734,73735]" dest="): ) [54287,54288]"/>
  <match src="comment: // determine the length of the input by finding the location of the last non-zero byte [33032,33118]" dest="comment: // determine the length of the input by finding the location of the last non-zero byte [46410,46496]"/>
  <match src="call_argument [76987,76997]" dest="call_argument [66135,66145]"/>
  <match src="state_mutability [86511,86515]" dest="state_mutability [27271,27275]"/>
  <match src="identifier: candidates [98453,98463]" dest="identifier: candidates [39213,39223]"/>
  <match src="identifier: amount [19977,19983]" dest="identifier: amount [52180,52186]"/>
  <match src="primitive_type [35868,35873]" dest="primitive_type [49246,49251]"/>
  <match src="state_variable_declaration [41787,41841]" dest="state_variable_declaration [23891,23945]"/>
  <match src="identifier: amount [94400,94406]" dest="identifier: amount [35160,35166]"/>
  <match src="call_argument [17686,17695]" dest="call_argument [58516,58521]"/>
  <match src="if_statement [89733,89886]" dest="if_statement [30493,30646]"/>
  <match src="parameter [6255,6264]" dest="parameter [6819,6828]"/>
  <match src="(: ( [49404,49405]" dest="(: ( [14111,14112]"/>
  <match src="internal: internal [8027,8035]" dest="internal: internal [8591,8599]"/>
  <match src="identifier: amount [93963,93969]" dest="identifier: amount [34723,34729]"/>
  <match src="function: function [42498,42506]" dest="function: function [24602,24610]"/>
  <match src="identifier: self [7989,7993]" dest="identifier: self [8553,8557]"/>
  <match src="identifier: stringify [29884,29893]" dest="identifier: stringify [43262,43271]"/>
  <match src="identifier: push [97195,97199]" dest="identifier: push [37955,37959]"/>
  <match src="(: ( [51146,51147]" dest="(: ( [15853,15854]"/>
  <match src="address: address [48559,48566]" dest="address: address [55514,55521]"/>
  <match src="parameter [30035,30044]" dest="parameter [43413,43422]"/>
  <match src="visibility [781,789]" dest="visibility [1345,1353]"/>
  <match src=",: , [98014,98015]" dest=",: , [38774,38775]"/>
  <match src="(: ( [75769,75770]" dest="(: ( [71244,71245]"/>
  <match src="function: function [1631,1639]" dest="function: function [2195,2203]"/>
  <match src="parameter [90740,90747]" dest="parameter [31500,31507]"/>
  <match src="identifier: balanceCheck [75910,75922]" dest="identifier: balanceCheck [52230,52242]"/>
  <match src="external: external [49808,49816]" dest="external: external [14515,14523]"/>
  <match src="parameter [8278,8289]" dest="parameter [8842,8853]"/>
  <match src="state_mutability [88377,88381]" dest="state_mutability [29137,29141]"/>
  <match src="member_expression [100455,100467]" dest="member_expression [62812,62824]"/>
  <match src="contract_body [15758,22547]" dest="contract_body [55033,58912]"/>
  <match src="function_body [9412,9458]" dest="function_body [9976,10022]"/>
  <match src="=: = [35439,35440]" dest="=: = [48817,48818]"/>
  <match src="): ) [90417,90418]" dest="): ) [31177,31178]"/>
  <match src="type_name [35868,35873]" dest="type_name [49246,49251]"/>
  <match src="primitive_type [93278,93285]" dest="primitive_type [34038,34045]"/>
  <match src="): ) [34948,34949]" dest="): ) [48326,48327]"/>
  <match src="identifier: dollar [86950,86956]" dest="identifier: dollar [27710,27716]"/>
  <match src="bytes32: bytes32 [30076,30083]" dest="bytes32: bytes32 [43454,43461]"/>
  <match src="identifier: mul [8382,8385]" dest="identifier: mul [8946,8949]"/>
  <match src=".: . [96075,96076]" dest=".: . [36835,36836]"/>
  <match src="identifier: Require [61178,61185]" dest="identifier: Require [73105,73112]"/>
  <match src="new: new [34936,34939]" dest="new: new [48314,48317]"/>
  <match src="call_expression [97735,97742]" dest="call_expression [38495,38502]"/>
  <match src="uint256: uint256 [87385,87392]" dest="uint256: uint256 [28145,28152]"/>
  <match src="return: return [90320,90326]" dest="return: return [31080,31086]"/>
  <match src="identifier: CHAIN_ID [41321,41329]" dest="identifier: CHAIN_ID [23425,23433]"/>
  <match src="internal: internal [42752,42760]" dest="internal: internal [24856,24864]"/>
  <match src="returns: returns [7139,7146]" dest="returns: returns [7703,7710]"/>
  <match src="parameter [11976,11993]" dest="parameter [16914,16931]"/>
  <match src="identifier: coupons [95712,95719]" dest="identifier: coupons [36472,36479]"/>
  <match src="identifier: owner [50080,50085]" dest="identifier: owner [14787,14792]"/>
  <match src="): ) [97069,97070]" dest="): ) [37829,37830]"/>
  <match src="visibility [51505,51513]" dest="visibility [16212,16220]"/>
  <match src="expression_statement [77601,77682]" dest="expression_statement [57425,57484]"/>
  <match src="event_paramater [50292,50304]" dest="event_paramater [14999,15011]"/>
  <match src="{: { [94939,94940]" dest="{: { [35699,35700]"/>
  <match src="view: view [50723,50727]" dest="view: view [15430,15434]"/>
  <match src="}: } [30660,30661]" dest="}: } [44038,44039]"/>
  <match src="uint256: uint256 [34007,34014]" dest="uint256: uint256 [47385,47392]"/>
  <match src="user_defined_type [6463,6467]" dest="user_defined_type [7027,7031]"/>
  <match src="): ) [84912,84913]" dest="): ) [69587,69588]"/>
  <match src="binary_expression [21899,21918]" dest="binary_expression [57040,57056]"/>
  <match src="function_definition [51159,51219]" dest="function_definition [15866,15926]"/>
  <match src="member_expression [89663,89701]" dest="member_expression [30423,30461]"/>
  <match src="call_argument [426,455]" dest="call_argument [990,1019]"/>
  <match src="function_definition [43707,43849]" dest="function_definition [25811,25953]"/>
  <match src="parameter [91473,91480]" dest="parameter [32233,32240]"/>
  <match src="expression_statement [93625,93691]" dest="expression_statement [34385,34451]"/>
  <match src="function_definition [97809,97962]" dest="function_definition [38569,38722]"/>
  <match src="(: ( [58889,58890]" dest="(: ( [20481,20482]"/>
  <match src=".: . [98323,98324]" dest=".: . [39083,39084]"/>
  <match src="visibility [50769,50777]" dest="visibility [15476,15484]"/>
  <match src="returns: returns [36654,36661]" dest="returns: returns [50032,50039]"/>
  <match src="state_mutability [91193,91197]" dest="state_mutability [31953,31957]"/>
  <match src="user_defined_type [7868,7872]" dest="user_defined_type [8432,8436]"/>
  <match src="uint256: uint256 [33132,33139]" dest="uint256: uint256 [46510,46517]"/>
  <match src="return_type_definition [87693,87710]" dest="return_type_definition [28453,28470]"/>
  <match src="]: ] [95554,95555]" dest="]: ] [36314,36315]"/>
  <match src=",: , [78377,78378]" dest=",: , [56228,56229]"/>
  <match src="(: ( [84719,84720]" dest="(: ( [69394,69395]"/>
  <match src="constant: constant [41620,41628]" dest="constant: constant [23724,23732]"/>
  <match src="returns: returns [49746,49753]" dest="returns: returns [14453,14460]"/>
  <match src="event_paramater [75676,75692]" dest="event_paramater [74678,74692]"/>
  <match src=":: : [6996,6997]" dest=":: : [7560,7561]"/>
  <match src="{: { [94417,94418]" dest="{: { [35177,35178]"/>
  <match src="primitive_type [98199,98206]" dest="primitive_type [38959,38966]"/>
  <match src="address: address [82446,82453]" dest="address: address [22068,22075]"/>
  <match src="uint256: uint256 [78361,78368]" dest="uint256: uint256 [56206,56213]"/>
  <match src="identifier: COMMA [32523,32528]" dest="identifier: COMMA [45901,45906]"/>
  <match src="type_name [90570,90577]" dest="type_name [31330,31337]"/>
  <match src="call_argument [6368,6372]" dest="call_argument [6932,6936]"/>
  <match src=".: . [95959,95960]" dest=".: . [36719,36720]"/>
  <match src="identifier: price1Cumulative [63116,63132]" dest="identifier: lessDebt [60791,60799]"/>
  <match src="memory: memory [7256,7262]" dest="memory: memory [7820,7826]"/>
  <match src="function_body [8697,8775]" dest="function_body [9261,9339]"/>
  <match src="return_statement [823,874]" dest="return_statement [1387,1438]"/>
  <match src="uint256: uint256 [82414,82421]" dest="uint256: uint256 [22036,22043]"/>
  <match src="pure: pure [34740,34744]" dest="pure: pure [48118,48122]"/>
  <match src="byte: byte [27674,27678]" dest="byte: byte [41052,41056]"/>
  <match src=":: : [8726,8727]" dest=":: : [9290,9291]"/>
  <match src="(: ( [89935,89936]" dest="(: ( [30695,30696]"/>
  <match src="function: function [27809,27817]" dest="function: function [41187,41195]"/>
  <match src="identifier: epoch [97104,97109]" dest="identifier: epoch [37864,37869]"/>
  <match src="pure: pure [49454,49458]" dest="pure: pure [14161,14165]"/>
  <match src=",: , [20121,20122]" dest=",: , [58876,58877]"/>
  <match src="identifier: sender [76036,76042]" dest="identifier: sender [65377,65383]"/>
  <match src="}: } [100415,100416]" dest="}: } [62772,62773]"/>
  <match src="uint256: uint256 [90570,90577]" dest="uint256: uint256 [31330,31337]"/>
  <match src=".: . [55081,55082]" dest=".: . [75162,75163]"/>
  <match src="type_name [8815,8819]" dest="type_name [9379,9383]"/>
  <match src="identifier: accounts [88769,88777]" dest="identifier: accounts [29529,29537]"/>
  <match src="call_expression [77402,77441]" dest="call_expression [65443,65508]"/>
  <match src="): ) [6807,6808]" dest="): ) [7371,7372]"/>
  <match src="uint256: uint256 [77274,77281]" dest="uint256: uint256 [56144,56151]"/>
  <match src="call_argument [46048,46052]" dest="call_argument [57070,57074]"/>
  <match src="unary_expression [48253,48255]" dest="unary_expression [58717,58719]"/>
  <match src="identifier: bonded [93664,93670]" dest="identifier: bonded [34424,34430]"/>
  <match src="type_name [49245,49252]" dest="type_name [13952,13959]"/>
  <match src="call_expression [88672,88679]" dest="call_expression [29432,29439]"/>
  <match src="uint256: uint256 [81732,81739]" dest="uint256: uint256 [21354,21361]"/>
  <match src="call_argument [76032,76042]" dest="call_argument [65373,65383]"/>
  <match src="function_definition [7955,8139]" dest="function_definition [8519,8703]"/>
  <match src="(: ( [49977,49978]" dest="(: ( [14684,14685]"/>
  <match src="primitive_type [42556,42563]" dest="primitive_type [24660,24667]"/>
  <match src="call_argument [8751,8755]" dest="call_argument [9315,9319]"/>
  <match src="internal: internal [42533,42541]" dest="internal: internal [24637,24645]"/>
  <match src="!=: != [19788,19790]" dest="!=: != [58319,58321]"/>
  <match src="): ) [94667,94668]" dest="): ) [35427,35428]"/>
  <match src="comment: // take last decimal digit [34481,34507]" dest="comment: // take last decimal digit [47859,47885]"/>
  <match src="identifier: BASE [6368,6372]" dest="identifier: BASE [6932,6936]"/>
  <match src="return_type_definition [6941,6962]" dest="return_type_definition [7505,7526]"/>
  <match src="type_name [30787,30794]" dest="type_name [44165,44172]"/>
  <match src="new_expression [34936,34945]" dest="new_expression [48314,48323]"/>
  <match src="function: function [88857,88865]" dest="function: function [29617,29625]"/>
  <match src="identifier: b [1317,1318]" dest="identifier: b [1881,1882]"/>
  <match src="}: } [9316,9317]" dest="}: } [9880,9881]"/>
  <match src="identifier: BOOTSTRAPPING_SPEEDUP_FACTOR [43191,43219]" dest="identifier: BOOTSTRAPPING_SPEEDUP_FACTOR [25295,25323]"/>
  <match src="state_mutability [50833,50837]" dest="state_mutability [15540,15544]"/>
  <match src="yul_identifier [80917,80924]" dest="yul_identifier [67739,67746]"/>
  <match src="memory: memory [62484,62490]" dest="memory: memory [13344,13350]"/>
  <match src=".: . [94815,94816]" dest=".: . [35575,35576]"/>
  <match src="function_definition [98544,98748]" dest="function_definition [39304,39508]"/>
  <match src="): ) [79124,79125]" dest="): ) [54074,54075]"/>
  <match src="call_argument [19977,19983]" dest="call_argument [52180,52186]"/>
  <match src="member_expression [97152,97194]" dest="member_expression [37912,37954]"/>
  <match src="function_body [4039,4100]" dest="function_body [4603,4664]"/>
  <match src="primitive_type [1239,1245]" dest="primitive_type [1803,1809]"/>
  <match src="returns: returns [4021,4028]" dest="returns: returns [4585,4592]"/>
  <match src="identifier: sender [75885,75891]" dest="identifier: sender [64458,64464]"/>
  <match src="uint256: uint256 [76621,76628]" dest="uint256: uint256 [57296,57303]"/>
  <match src=".: . [7926,7927]" dest=".: . [8490,8491]"/>
  <match src="identifier: Decimal [43396,43403]" dest="identifier: Decimal [25500,25507]"/>
  <match src="type_cast_expression [35013,35036]" dest="type_cast_expression [48391,48414]"/>
  <match src="update_expression [34060,34068]" dest="update_expression [47438,47446]"/>
  <match src="call_argument [17697,17703]" dest="call_argument [58523,58529]"/>
  <match src="identifier: _transfer [19693,19702]" dest="identifier: transferCoupons [58203,58218]"/>
  <match src=".: . [99166,99167]" dest=".: . [39926,39927]"/>
  <match src="&quot;: &quot; [33917,33918]" dest="&quot;: &quot; [47295,47296]"/>
  <match src="primitive_type [97829,97836]" dest="primitive_type [38589,38596]"/>
  <match src="(: ( [4059,4060]" dest="(: ( [4623,4624]"/>
  <match src="event_definition [75456,75522]" dest="event_definition [63967,64060]"/>
  <match src="type_name [6679,6686]" dest="type_name [7243,7250]"/>
  <match src="type_name [28856,28863]" dest="type_name [42234,42241]"/>
  <match src="identifier: compareTo [9429,9438]" dest="identifier: compareTo [9993,10002]"/>
  <match src="(: ( [11552,11553]" dest="(: ( [16490,16491]"/>
  <match src="constant: constant [41391,41399]" dest="constant: constant [23495,23503]"/>
  <match src="(: ( [30554,30555]" dest="(: ( [43932,43933]"/>
  <match src="parameter [98392,98409]" dest="parameter [39152,39169]"/>
  <match src="string_literal [20516,20549]" dest="string_literal [53706,53722]"/>
  <match src="=: = [68730,68731]" dest="=: = [60406,60407]"/>
  <match src="{: { [8515,8516]" dest="{: { [9079,9080]"/>
  <match src="identifier: b [8433,8434]" dest="identifier: b [8997,8998]"/>
  <match src="state_variable_declaration [42183,42231]" dest="state_variable_declaration [24287,24335]"/>
  <match src="(: ( [21053,21054]" dest="(: ( [51800,51801]"/>
  <match src="type_name [49639,49646]" dest="type_name [14346,14353]"/>
  <match src=",: , [32049,32050]" dest=",: , [45427,45428]"/>
  <match src="): ) [87494,87495]" dest="): ) [28254,28255]"/>
  <match src="identifier: amount [94499,94505]" dest="identifier: amount [35259,35265]"/>
  <match src="&gt;&gt;: &gt;&gt; [36535,36537]" dest="&gt;&gt;: &gt;&gt; [49913,49915]"/>
  <match src="!=: != [34040,34042]" dest="!=: != [47418,47420]"/>
  <match src="(: ( [87280,87281]" dest="(: ( [28040,28041]"/>
  <match src="&quot;: &quot; [86470,86471]" dest="&quot;: &quot; [27230,27231]"/>
  <match src="return_type_definition [8467,8488]" dest="return_type_definition [9031,9052]"/>
  <match src="(: ( [13517,13518]" dest="(: ( [18455,18456]"/>
  <match src="identifier: IERC20 [15751,15757]" dest="identifier: Curve [55027,55032]"/>
  <match src=".: . [28010,28011]" dest=".: . [41388,41389]"/>
  <match src="identifier: getInitialStakeMultiple [42726,42749]" dest="identifier: getInitialStakeMultiple [24830,24853]"/>
  <match src="member_expression [95248,95279]" dest="member_expression [36008,36039]"/>
  <match src="identifier: Constants [89663,89672]" dest="identifier: Constants [30423,30432]"/>
  <match src="modifier: modifier [100211,100219]" dest="modifier: modifier [62568,62576]"/>
  <match src="): ) [48439,48440]" dest="): ) [58828,58829]"/>
  <match src="internal: internal [6275,6283]" dest="internal: internal [6839,6847]"/>
  <match src="assignment_expression [93766,93819]" dest="assignment_expression [34526,34579]"/>
  <match src="number_literal: 0 [86896,86897]" dest="number_literal: 0 [27656,27657]"/>
  <match src="(: ( [96919,96920]" dest="(: ( [37679,37680]"/>
  <match src="identifier: _state [95060,95066]" dest="identifier: _state [35820,35826]"/>
  <match src="call_expression [8524,8561]" dest="call_expression [9088,9125]"/>
  <match src="call_argument [41644,41686]" dest="call_argument [23748,23790]"/>
  <match src="=: = [92183,92184]" dest="=: = [32943,32944]"/>
  <match src="function_definition [7765,7949]" dest="function_definition [8329,8513]"/>
  <match src="): ) [76812,76813]" dest="): ) [64999,65000]"/>
  <match src="user_defined_type [58908,58920]" dest="user_defined_type [20500,20512]"/>
  <match src="identifier: period [89333,89339]" dest="identifier: period [30093,30099]"/>
  <match src="if: if [97362,97364]" dest="if: if [38122,38124]"/>
  <match src="variable_declaration_statement [34007,34022]" dest="variable_declaration_statement [47385,47400]"/>
  <match src="primitive_type [28297,28304]" dest="primitive_type [41675,41682]"/>
  <match src=",: , [2026,2027]" dest=",: , [2590,2591]"/>
  <match src="call_argument [78162,78191]" dest="call_argument [72877,72892]"/>
  <match src="type_name [28815,28819]" dest="type_name [42193,42197]"/>
  <match src="address: address [51173,51180]" dest="address: address [15880,15887]"/>
  <match src="identifier: sender [48298,48304]" dest="identifier: sender [58762,58768]"/>
  <match src="(: ( [88632,88633]" dest="(: ( [29392,29393]"/>
  <match src="(: ( [91606,91607]" dest="(: ( [32366,32367]"/>
  <match src="primitive_type [93199,93203]" dest="primitive_type [33959,33963]"/>
  <match src="call_expression [76722,76735]" dest="call_expression [64922,64935]"/>
  <match src="): ) [94039,94040]" dest="): ) [34799,34800]"/>
  <match src="uint256: uint256 [97256,97263]" dest="uint256: uint256 [38016,38023]"/>
  <match src="): ) [89576,89577]" dest="): ) [30336,30337]"/>
  <match src="member_expression [97090,97118]" dest="member_expression [37850,37878]"/>
  <match src="(: ( [98391,98392]" dest="(: ( [39151,39152]"/>
  <match src="number_literal: 10 [34629,34631]" dest="number_literal: 10 [48007,48009]"/>
  <match src="identifier: delegatecall [84775,84787]" dest="identifier: delegatecall [69450,69462]"/>
  <match src="}: } [81678,81679]" dest="}: } [21300,21301]"/>
  <match src="(: ( [34694,34695]" dest="(: ( [48072,48073]"/>
  <match src="): ) [84753,84754]" dest="): ) [69428,69429]"/>
  <match src="identifier: amount [48388,48394]" dest="identifier: amount [58782,58788]"/>
  <match src="function_definition [49992,50051]" dest="function_definition [14699,14758]"/>
  <match src="assignment_expression [94949,95026]" dest="assignment_expression [35709,35786]"/>
  <match src="external: external [50019,50027]" dest="external: external [14726,14734]"/>
  <match src="expression_statement [78085,78202]" dest="expression_statement [72797,72903]"/>
  <match src="identifier: file [30062,30066]" dest="identifier: file [43440,43444]"/>
  <match src="=: = [98848,98849]" dest="=: = [39608,39609]"/>
  <match src="): ) [7682,7683]" dest="): ) [8246,8247]"/>
  <match src="call_expression [72328,72335]" dest="call_expression [55960,55967]"/>
  <match src="identifier: staged [94974,94980]" dest="identifier: staged [35734,35740]"/>
  <match src="identifier: account [75483,75490]" dest="identifier: account [63996,64003]"/>
  <match src="call_expression [77342,77369]" dest="call_expression [65453,65480]"/>
  <match src="&quot;: &quot; [99895,99896]" dest="&quot;: &quot; [62252,62253]"/>
  <match src="identifier: mod [4613,4616]" dest="identifier: mod [5177,5180]"/>
  <match src="call_expression [73255,73263]" dest="call_expression [56873,56881]"/>
  <match src="identifier: add [6599,6602]" dest="identifier: add [7163,7166]"/>
  <match src="pure: pure [43382,43386]" dest="pure: pure [25486,25490]"/>
  <match src="state_mutability [51712,51716]" dest="state_mutability [11606,11610]"/>
  <match src="call_argument [31201,31206]" dest="call_argument [44579,44584]"/>
  <match src="identifier: timestamp [89467,89476]" dest="identifier: timestamp [30227,30236]"/>
  <match src="address: address [93278,93285]" dest="address: address [34038,34045]"/>
  <match src=",: , [96361,96362]" dest=",: , [37121,37122]"/>
  <match src="(: ( [100467,100468]" dest="(: ( [62824,62825]"/>
  <match src="identifier: owner [49632,49637]" dest="identifier: owner [14339,14344]"/>
  <match src="parameter [8395,8411]" dest="parameter [8959,8975]"/>
  <match src="function: function [94138,94146]" dest="function: function [34898,34906]"/>
  <match src="primitive_type [73352,73359]" dest="primitive_type [74751,74758]"/>
  <match src="call_expression [77538,77591]" dest="call_expression [57374,57415]"/>
  <match src="identifier: Fluid [100328,100333]" dest="identifier: Fluid [62685,62690]"/>
  <match src="identifier: PoolSetters [74965,74976]" dest="identifier: Setters [63645,63652]"/>
  <match src="): ) [34563,34564]" dest="): ) [47941,47942]"/>
  <match src=",: , [78812,78813]" dest=",: , [72715,72716]"/>
  <match src="}: } [33930,33931]" dest="}: } [47308,47309]"/>
  <match src=",: , [92930,92931]" dest=",: , [33690,33691]"/>
  <match src="=: = [96658,96659]" dest="=: = [37418,37419]"/>
  <match src="): ) [95755,95756]" dest="): ) [36515,36516]"/>
  <match src="internal: internal [95195,95203]" dest="internal: internal [35955,35963]"/>
  <match src="=: = [75265,75266]" dest="=: = [63734,63735]"/>
  <match src="visibility [42107,42114]" dest="visibility [24211,24218]"/>
  <match src="): ) [82938,82939]" dest="): ) [22560,22561]"/>
  <match src="call_argument [98336,98342]" dest="call_argument [39096,39102]"/>
  <match src="=: = [41634,41635]" dest="=: = [23738,23739]"/>
  <match src="is: is [60361,60363]" dest="is: is [59562,59564]"/>
  <match src="comment: /* solium-disable-next-line security/no-inline-assembly */ [33474,33532]" dest="comment: /* solium-disable-next-line security/no-inline-assembly */ [46852,46910]"/>
  <match src="uint: uint [49885,49889]" dest="uint: uint [14592,14596]"/>
  <match src="member_expression [28457,28473]" dest="member_expression [41835,41851]"/>
  <match src="call_expression [87830,87852]" dest="call_expression [28590,28612]"/>
  <match src="address: address [93148,93155]" dest="address: address [33908,33915]"/>
  <match src="string_literal [61268,61287]" dest="string_literal [73268,73286]"/>
  <match src="string_literal [21920,21958]" dest="string_literal [57088,57119]"/>
  <match src="identifier: self [8611,8615]" dest="identifier: self [9175,9179]"/>
  <match src="call_expression [98090,98138]" dest="call_expression [38850,38898]"/>
  <match src="function_body [87187,87231]" dest="function_body [27947,27991]"/>
  <match src="visibility [8964,8972]" dest="visibility [9528,9536]"/>
  <match src=".: . [95917,95918]" dest=".: . [36677,36678]"/>
  <match src="parameter [38271,38286]" dest="parameter [58254,58267]"/>
  <match src="{: { [35732,35733]" dest="{: { [49110,49111]"/>
  <match src="state_mutability [5977,5981]" dest="state_mutability [6541,6545]"/>
  <match src="identifier: value [6991,6996]" dest="identifier: value [7555,7560]"/>
  <match src="type_name [42666,42673]" dest="type_name [24770,24777]"/>
  <match src="primitive_type [60562,60569]" dest="primitive_type [71130,71137]"/>
  <match src="return_type_definition [58970,58987]" dest="return_type_definition [20562,20579]"/>
  <match src="&quot;: &quot; [46174,46175]" dest="&quot;: &quot; [51459,51460]"/>
  <match src=",: , [33593,33594]" dest=",: , [46971,46972]"/>
  <match src="type_name [75411,75418]" dest="type_name [74653,74660]"/>
  <match src="): ) [98932,98933]" dest="): ) [39692,39693]"/>
  <match src="(: ( [35198,35199]" dest="(: ( [48576,48577]"/>
  <match src="): ) [23139,23140]" dest="): ) [51650,51651]"/>
  <match src="call_expression [88245,88282]" dest="call_expression [29005,29042]"/>
  <match src="return_statement [93215,93228]" dest="return_statement [33975,33988]"/>
  <match src="(: ( [97255,97256]" dest="(: ( [38015,38016]"/>
  <match src="identifier: amount [70683,70689]" dest="identifier: amount [51590,51596]"/>
  <match src="call_argument [21977,21998]" dest="call_argument [57992,58013]"/>
  <match src="return_type_definition [7139,7160]" dest="return_type_definition [7703,7724]"/>
  <match src="revert_statement [30210,30651]" dest="revert_statement [43588,44029]"/>
  <match src="]: ] [91135,91136]" dest="]: ] [31895,31896]"/>
  <match src="identifier: payloadA [29894,29902]" dest="identifier: payloadA [43272,43280]"/>
  <match src="string: string [95173,95179]" dest="string: string [35933,35939]"/>
  <match src="): ) [86713,86714]" dest="): ) [27473,27474]"/>
  <match src="primitive_type [91339,91346]" dest="primitive_type [32099,32106]"/>
  <match src="identifier: epoch [90563,90568]" dest="identifier: epoch [31323,31328]"/>
  <match src="identifier: shift [35391,35396]" dest="identifier: shift [48769,48774]"/>
  <match src="): ) [96877,96878]" dest="): ) [37637,37638]"/>
  <match src=",: , [28824,28825]" dest=",: , [42202,42203]"/>
  <match src="[: [ [99155,99156]" dest="[: [ [39915,39916]"/>
  <match src=",: , [95155,95156]" dest=",: , [35915,35916]"/>
  <match src="string [20516,20549]" dest="string [53706,53722]"/>
  <match src="primitive_type [34798,34805]" dest="primitive_type [48176,48183]"/>
  <match src="parameter [11689,11704]" dest="parameter [16627,16642]"/>
  <match src="event_paramater [75467,75490]" dest="event_paramater [63980,64003]"/>
  <match src="primitive_type [13750,13757]" dest="primitive_type [18688,18695]"/>
  <match src="variable_declaration [77380,77399]" dest="variable_declaration [56334,56357]"/>
  <match src="member_expression [8341,8348]" dest="member_expression [8905,8912]"/>
  <match src="): ) [72341,72342]" dest="): ) [56003,56004]"/>
  <match src=".: . [91239,91240]" dest=".: . [31999,32000]"/>
  <match src="function_body [87813,87876]" dest="function_body [28573,28636]"/>
  <match src="return_statement [91758,91813]" dest="return_statement [32518,32573]"/>
  <match src="function: function [42617,42625]" dest="function: function [24721,24729]"/>
  <match src="return_type_definition [49517,49531]" dest="return_type_definition [14224,14238]"/>
  <match src="): ) [63069,63070]" dest="): ) [61269,61270]"/>
  <match src="identifier: sender [75817,75823]" dest="identifier: sender [64390,64396]"/>
  <match src="return_type_definition [795,812]" dest="return_type_definition [1359,1376]"/>
  <match src="member_expression [87411,87425]" dest="member_expression [28171,28185]"/>
  <match src="visibility [77920,77928]" dest="visibility [71217,71225]"/>
  <match src="state_mutability [43527,43531]" dest="state_mutability [25631,25635]"/>
  <match src="(: ( [2632,2633]" dest="(: ( [3196,3197]"/>
  <match src="identifier: Storage [83084,83091]" dest="identifier: Storage [22706,22713]"/>
  <match src="): ) [77368,77369]" dest="): ) [65479,65480]"/>
  <match src="for: for [34285,34288]" dest="for: for [47663,47666]"/>
  <match src="type_name [49287,49291]" dest="type_name [13994,13998]"/>
  <match src="visibility [93898,93906]" dest="visibility [34658,34666]"/>
  <match src=",: , [75838,75839]" dest=",: , [64411,64412]"/>
  <match src="): ) [9945,9946]" dest="): ) [10509,10510]"/>
  <match src="function: function [90238,90246]" dest="function: function [30998,31006]"/>
  <match src="function_definition [90523,90675]" dest="function_definition [31283,31435]"/>
  <match src="): ) [8560,8561]" dest="): ) [9124,9125]"/>
  <match src="member_expression [75881,75891]" dest="member_expression [64454,64464]"/>
  <match src="): ) [7215,7216]" dest="): ) [7779,7780]"/>
  <match src="primitive_type [86870,86877]" dest="primitive_type [27630,27637]"/>
  <match src="comment: // populate the string starting with the least-significant character [34189,34257]" dest="comment: // populate the string starting with the least-significant character [47567,47635]"/>
  <match src="): ) [61801,61802]" dest="): ) [61508,61509]"/>
  <match src="): ) [32865,32866]" dest="): ) [46243,46244]"/>
  <match src="type_name [81708,81715]" dest="type_name [21330,21337]"/>
  <match src="type_name [8476,8480]" dest="type_name [9040,9044]"/>
  <match src="primitive_type [1290,1297]" dest="primitive_type [1854,1861]"/>
  <match src="type_cast_expression [36852,36892]" dest="type_cast_expression [50230,50270]"/>
  <match src="parameter [51203,51217]" dest="parameter [15910,15924]"/>
  <match src="(: ( [32008,32009]" dest="(: ( [45386,45387]"/>
  <match src="address: address [73721,73728]" dest="address: address [54266,54273]"/>
  <match src="function: function [94863,94871]" dest="function: function [35623,35631]"/>
  <match src="parameter [49725,49735]" dest="parameter [14432,14442]"/>
  <match src="user_defined_type [9064,9068]" dest="user_defined_type [9628,9632]"/>
  <match src="identifier: encodePacked [29046,29058]" dest="identifier: encodePacked [42424,42436]"/>
  <match src="call_argument [29894,29902]" dest="call_argument [43272,43280]"/>
  <match src="): ) [99117,99118]" dest="): ) [39877,39878]"/>
  <match src="uint: uint [50360,50364]" dest="uint: uint [15067,15071]"/>
  <match src="): ) [95025,95026]" dest="): ) [35785,35786]"/>
  <match src="event_paramater [50322,50344]" dest="event_paramater [15029,15051]"/>
  <match src="array_access [88962,88984]" dest="array_access [29722,29744]"/>
  <match src=".: . [96857,96858]" dest=".: . [37617,37618]"/>
  <match src="identifier: mul [6795,6798]" dest="identifier: mul [7359,7362]"/>
  <match src="(: ( [30965,30966]" dest="(: ( [44343,44344]"/>
  <match src="variable_declaration_statement [35868,35904]" dest="variable_declaration_statement [49246,49282]"/>
  <match src="!: ! [100481,100482]" dest="!: ! [62838,62839]"/>
  <match src="primitive_type [35287,35294]" dest="primitive_type [48665,48672]"/>
  <match src="identifier: bonded [93507,93513]" dest="identifier: bonded [34267,34273]"/>
  <match src="type_name [83006,83041]" dest="type_name [22628,22663]"/>
  <match src="member_expression [6778,6788]" dest="member_expression [7342,7352]"/>
  <match src="call_expression [91765,91786]" dest="call_expression [32525,32546]"/>
  <match src="=: = [84755,84756]" dest="=: = [69430,69431]"/>
  <match src="identifier: b [8890,8891]" dest="identifier: b [9454,9455]"/>
  <match src="returns: returns [87169,87176]" dest="returns: returns [27929,27936]"/>
  <match src=".: . [6788,6789]" dest=".: . [7352,7353]"/>
  <match src="identifier: mul [9915,9918]" dest="identifier: mul [10479,10482]"/>
  <match src="variable_declaration_statement [84719,84829]" dest="variable_declaration_statement [69394,69504]"/>
  <match src="&quot;: &quot; [86357,86358]" dest="&quot;: &quot; [27117,27118]"/>
  <match src="(: ( [31090,31091]" dest="(: ( [44468,44469]"/>
  <match src="assignment_expression [95489,95582]" dest="assignment_expression [36249,36342]"/>
  <match src="identifier: amount [95844,95850]" dest="identifier: amount [36604,36610]"/>
  <match src="parameter [70675,70689]" dest="parameter [51582,51596]"/>
  <match src=".: . [90772,90773]" dest=".: . [31532,31533]"/>
  <match src="variable_declaration_statement [89534,89625]" dest="variable_declaration_statement [30294,30385]"/>
  <match src="visibility [91865,91871]" dest="visibility [32625,32631]"/>
  <match src="struct_member [82414,82429]" dest="struct_member [22036,22051]"/>
  <match src="&quot;: &quot; [79194,79195]" dest="&quot;: &quot; [66069,66070]"/>
  <match src="identifier: expiration [97166,97176]" dest="identifier: expiration [37926,37936]"/>
  <match src="call_expression [89936,89970]" dest="call_expression [30696,30730]"/>
  <match src=".: . [76787,76788]" dest=".: . [64974,64975]"/>
  <match src="member_expression [78644,78654]" dest="member_expression [58094,58104]"/>
  <match src="type_name [91020,91027]" dest="type_name [31780,31787]"/>
  <match src="primitive_type [61916,61923]" dest="primitive_type [72913,72920]"/>
  <match src="array_access [94427,94451]" dest="array_access [35187,35211]"/>
  <match src="function: function [98754,98762]" dest="function: function [39514,39522]"/>
  <match src="type_name [319,326]" dest="type_name [883,890]"/>
  <match src="function: function [87914,87922]" dest="function: function [28674,28682]"/>
  <match src="): ) [59710,59711]" dest="): ) [73585,73586]"/>
  <match src=".: . [94468,94469]" dest=".: . [35228,35229]"/>
  <match src=",: , [94390,94391]" dest=",: , [35150,35151]"/>
  <match src="function_definition [49691,49761]" dest="function_definition [14398,14468]"/>
  <match src="call_argument [32363,32368]" dest="call_argument [45741,45746]"/>
  <match src="return_type_definition [90593,90610]" dest="return_type_definition [31353,31370]"/>
  <match src="type_name [78429,78436]" dest="type_name [56387,56394]"/>
  <match src="member_expression [89117,89129]" dest="member_expression [29877,29889]"/>
  <match src="return_statement [4049,4094]" dest="return_statement [4613,4658]"/>
  <match src="}: } [42610,42611]" dest="}: } [24714,24715]"/>
  <match src="identifier: epochs [90192,90198]" dest="identifier: epochs [30952,30958]"/>
  <match src="): ) [42531,42532]" dest="): ) [24635,24636]"/>
  <match src="identifier: self [9153,9157]" dest="identifier: self [9717,9721]"/>
  <match src="): ) [79100,79101]" dest="): ) [54055,54056]"/>
  <match src="call_argument [33015,33020]" dest="call_argument [46393,46398]"/>
  <match src="constant: constant [41803,41811]" dest="constant: constant [23907,23915]"/>
  <match src="parameter [89193,89200]" dest="parameter [29953,29960]"/>
  <match src="mapping: mapping [82906,82913]" dest="mapping: mapping [22528,22535]"/>
  <match src="{: { [1938,1939]" dest="{: { [2502,2503]"/>
  <match src="{: { [98996,98997]" dest="{: { [39756,39757]"/>
  <match src="event_paramater [49213,49223]" dest="event_paramater [13920,13930]"/>
  <match src="visibility [91186,91192]" dest="visibility [31946,31952]"/>
  <match src="variable_declaration [63685,63704]" dest="variable_declaration [64904,64919]"/>
  <match src=".: . [43053,43054]" dest=".: . [25157,25158]"/>
  <match src="identifier: balance [94713,94720]" dest="identifier: balance [35473,35480]"/>
  <match src="constant: constant [41985,41993]" dest="constant: constant [24089,24097]"/>
  <match src="primitive_type [58979,58986]" dest="primitive_type [20571,20578]"/>
  <match src="call_argument [77419,77429]" dest="call_argument [65496,65506]"/>
  <match src="): ) [1664,1665]" dest="): ) [2228,2229]"/>
  <match src="call_argument [77626,77636]" dest="call_argument [57451,57461]"/>
  <match src="identifier: balanceCheck [76475,76487]" dest="identifier: balanceCheck [54341,54353]"/>
  <match src="identifier: _state [94688,94694]" dest="identifier: _state [35448,35454]"/>
  <match src="memory: memory [7873,7879]" dest="memory: memory [8437,8443]"/>
  <match src="identifier: candidate [91776,91785]" dest="identifier: candidate [32536,32545]"/>
  <match src="type_name [91699,91706]" dest="type_name [32459,32466]"/>
  <match src="visibility [91718,91724]" dest="visibility [32478,32484]"/>
  <match src="identifier: sub [93959,93962]" dest="identifier: sub [34719,34722]"/>
  <match src="primitive_type [35199,35206]" dest="primitive_type [48577,48584]"/>
  <match src="identifier: msg [77827,77830]" dest="identifier: msg [65741,65744]"/>
  <match src="identifier: epochStart [89936,89946]" dest="identifier: epochStart [30696,30706]"/>
  <match src="number_literal: 90 [42228,42230]" dest="number_literal: 90 [24332,24334]"/>
  <match src="address: address [47027,47034]" dest="address: address [19725,19732]"/>
  <match src="): ) [7545,7546]" dest="): ) [8109,8110]"/>
  <match src="assignment_expression [98446,98531]" dest="assignment_expression [39206,39291]"/>
  <match src="identifier: file [31721,31725]" dest="identifier: file [45099,45103]"/>
  <match src="return: return [4049,4055]" dest="return: return [4613,4619]"/>
  <match src="array_access [97527,97547]" dest="array_access [38287,38307]"/>
  <match src="address: address [26162,26169]" dest="address: address [51286,51293]"/>
  <match src="primitive_type [28429,28435]" dest="primitive_type [41807,41813]"/>
  <match src="visibility [86304,86310]" dest="visibility [27064,27070]"/>
  <match src="array_access [96047,96067]" dest="array_access [36807,36827]"/>
  <match src="pure: pure [1276,1280]" dest="pure: pure [1840,1844]"/>
  <match src="parameter [90123,90136]" dest="parameter [30883,30896]"/>
  <match src="identifier: epochs [90473,90479]" dest="identifier: epochs [31233,31239]"/>
  <match src="type_name [82457,82461]" dest="type_name [22079,22083]"/>
  <match src="call_argument [17791,17833]" dest="call_argument [65601,65637]"/>
  <match src="yul_identifier [85354,85358]" dest="yul_identifier [70029,70033]"/>
  <match src="identifier: require [410,417]" dest="identifier: require [974,981]"/>
  <match src="identifier: decimals [86493,86501]" dest="identifier: decimals [27253,27261]"/>
  <match src="): ) [89489,89490]" dest="): ) [30249,30250]"/>
  <match src="identifier: FILE [60440,60444]" dest="identifier: FILE [55097,55101]"/>
  <match src="call_expression [96289,96303]" dest="call_expression [37049,37063]"/>
  <match src="return_statement [2075,2084]" dest="return_statement [2639,2648]"/>
  <match src="user_defined_type [63405,63417]" dest="user_defined_type [61282,61294]"/>
  <match src="number_literal: 2 [10180,10181]" dest="number_literal: 2 [10744,10745]"/>
  <match src="external: external [50228,50236]" dest="external: external [14935,14943]"/>
  <match src="(: ( [94565,94566]" dest="(: ( [35325,35326]"/>
  <match src="): ) [98530,98531]" dest="): ) [39290,39291]"/>
  <match src="uint8: uint8 [35018,35023]" dest="uint8: uint8 [48396,48401]"/>
  <match src="member_expression [96117,96139]" dest="member_expression [36877,36899]"/>
  <match src="}: } [98357,98358]" dest="}: } [39117,39118]"/>
  <match src="primitive_type [82724,82731]" dest="primitive_type [22346,22353]"/>
  <match src="call_argument [36023,36037]" dest="call_argument [49401,49415]"/>
  <match src="view: view [49512,49516]" dest="view: view [14219,14223]"/>
  <match src="identifier: balanceCheck [76190,76202]" dest="identifier: balanceCheck [52077,52089]"/>
  <match src="member_expression [76310,76320]" dest="member_expression [65864,65874]"/>
  <match src="parameter [59665,59681]" dest="parameter [71177,71194]"/>
  <match src="call_expression [77158,77172]" dest="call_expression [66223,66237]"/>
  <match src="type_name [61628,61640]" dest="type_name [13047,13059]"/>
  <match src="): ) [98425,98426]" dest="): ) [39185,39186]"/>
  <match src="call_expression [9429,9447]" dest="call_expression [9993,10011]"/>
  <match src="identifier: _state [93625,93631]" dest="identifier: _state [34385,34391]"/>
  <match src="call_expression [100455,100576]" dest="call_expression [62812,62933]"/>
  <match src="uint256: uint256 [75676,75683]" dest="uint256: uint256 [74678,74685]"/>
  <match src="(: ( [68857,68858]" dest="(: ( [73709,73710]"/>
  <match src="type_name [81959,81966]" dest="type_name [21581,21588]"/>
  <match src="(: ( [30025,30026]" dest="(: ( [43403,43404]"/>
  <match src="inheritance_specifier [15742,15749]" dest="inheritance_specifier [55014,55025]"/>
  <match src="identifier: D256 [43404,43408]" dest="identifier: D256 [25508,25512]"/>
  <match src="function_definition [9323,9458]" dest="function_definition [9887,10022]"/>
  <match src="primitive_type [49725,49729]" dest="primitive_type [14432,14436]"/>
  <match src="identifier: BASE [6609,6613]" dest="identifier: BASE [7173,7177]"/>
  <match src="identifier: b [837,838]" dest="identifier: b [1401,1402]"/>
  <match src="=: = [36010,36011]" dest="=: = [49388,49389]"/>
  <match src="view: view [87963,87967]" dest="view: view [28723,28727]"/>
  <match src="&quot;: &quot; [19985,19986]" dest="&quot;: &quot; [52188,52189]"/>
  <match src="pure: pure [42542,42546]" dest="pure: pure [24646,24650]"/>
  <match src="external: external [49445,49453]" dest="external: external [14152,14160]"/>
  <match src="identifier: value [8099,8104]" dest="identifier: value [8663,8668]"/>
  <match src="=: = [35577,35578]" dest="=: = [48955,48956]"/>
  <match src="call_expression [88263,88281]" dest="call_expression [29023,29041]"/>
  <match src="member_expression [11038,11048]" dest="member_expression [58645,58655]"/>
  <match src="&gt;=: &gt;= [88759,88761]" dest="&gt;=: &gt;= [29519,29521]"/>
  <match src="primitive_type [31524,31531]" dest="primitive_type [44902,44909]"/>
  <match src="(: ( [36152,36153]" dest="(: ( [49530,49531]"/>
  <match src="visibility [51073,51081]" dest="visibility [15780,15788]"/>
  <match src="identifier: Require [79294,79301]" dest="identifier: Require [71753,71760]"/>
  <match src="(: ( [94286,94287]" dest="(: ( [35046,35047]"/>
  <match src="identifier: _state [87006,87012]" dest="identifier: _state [27766,27772]"/>
  <match src="primitive_type [75319,75326]" dest="primitive_type [63791,63798]"/>
  <match src="return_statement [88695,88724]" dest="return_statement [29455,29484]"/>
  <match src="{: { [7187,7188]" dest="{: { [7751,7752]"/>
  <match src="return: return [8085,8091]" dest="return: return [8649,8655]"/>
  <match src="(: ( [49914,49915]" dest="(: ( [14621,14622]"/>
  <match src="&quot;: &quot; [77645,77646]" dest="&quot;: &quot; [73409,73410]"/>
  <match src="(: ( [49952,49953]" dest="(: ( [14659,14660]"/>
  <match src="return: return [9003,9009]" dest="return: return [9567,9573]"/>
  <match src="assignment_expression [93625,93690]" dest="assignment_expression [34385,34450]"/>
  <match src="function_body [42464,42492]" dest="function_body [24568,24596]"/>
  <match src="visibility [70691,70699]" dest="visibility [51598,51606]"/>
  <match src="): ) [6613,6614]" dest="): ) [7177,7178]"/>
  <match src="identifier: sub [8154,8157]" dest="identifier: sub [8718,8721]"/>
  <match src="view: view [86966,86970]" dest="view: view [27726,27730]"/>
  <match src="member_expression [94785,94806]" dest="member_expression [35545,35566]"/>
  <match src="parameter [58908,58927]" dest="parameter [20500,20519]"/>
  <match src="identifier: priceCumulative [63328,63343]" dest="identifier: staged [65434,65440]"/>
  <match src="constant: constant [27592,27600]" dest="constant: constant [40970,40978]"/>
  <match src="identifier: i [35303,35304]" dest="identifier: i [48681,48682]"/>
  <match src="variable_declaration [33132,33141]" dest="variable_declaration [46510,46519]"/>
  <match src="identifier: State [82983,82988]" dest="identifier: State [22605,22610]"/>
  <match src="function_definition [50695,50746]" dest="function_definition [15402,15453]"/>
  <match src="parameter [11729,11736]" dest="parameter [16667,16674]"/>
  <match src="member_expression [90185,90213]" dest="member_expression [30945,30973]"/>
  <match src="type_name [33798,33805]" dest="type_name [47176,47183]"/>
  <match src="member_expression [10170,10177]" dest="member_expression [10734,10741]"/>
  <match src="string [100100,100121]" dest="string [62457,62478]"/>
  <match src="visibility [49955,49963]" dest="visibility [14662,14670]"/>
  <match src="parameter [8797,8813]" dest="parameter [9361,9377]"/>
  <match src="call_expression [35400,35423]" dest="call_expression [48778,48801]"/>
  <match src="identifier: a [2633,2634]" dest="identifier: a [3197,3198]"/>
  <match src="uint256: uint256 [94631,94638]" dest="uint256: uint256 [35391,35398]"/>
  <match src=".: . [96053,96054]" dest=".: . [36813,36814]"/>
  <match src="return: return [89313,89319]" dest="return: return [30073,30079]"/>
  <match src="identifier: epochs [97159,97165]" dest="identifier: epochs [37919,37925]"/>
  <match src="identifier: LPAREN [31835,31841]" dest="identifier: LPAREN [45213,45219]"/>
  <match src="type_name [33132,33139]" dest="type_name [46510,46517]"/>
  <match src="primitive_type [73022,73029]" dest="primitive_type [55598,55605]"/>
  <match src="}: } [8562,8563]" dest="}: } [9126,9127]"/>
  <match src="member_expression [89320,89332]" dest="member_expression [30080,30092]"/>
  <match src="visibility [22368,22376]" dest="visibility [11597,11605]"/>
  <match src="identifier: stringify [31308,31317]" dest="identifier: stringify [44686,44695]"/>
  <match src=".: . [88768,88769]" dest=".: . [29528,29529]"/>
  <match src="identifier: length [34302,34308]" dest="identifier: length [47680,47686]"/>
  <match src="comment: /* Governance */ [41948,41964]" dest="comment: /* Governance */ [24052,24068]"/>
  <match src=",: , [50372,50373]" dest=",: , [15079,15080]"/>
  <match src="(: ( [51267,51268]" dest="(: ( [15974,15975]"/>
  <match src="): ) [7035,7036]" dest="): ) [7599,7600]"/>
  <match src="return_type_definition [9111,9125]" dest="return_type_definition [9675,9689]"/>
  <match src="uint256: uint256 [6869,6876]" dest="uint256: uint256 [7433,7440]"/>
  <match src=".: . [30265,30266]" dest=".: . [43643,43644]"/>
  <match src="identifier: expiration [97059,97069]" dest="identifier: expiration [37819,37829]"/>
  <match src=".: . [88984,88985]" dest=".: . [29744,29745]"/>
  <match src="identifier: epochs [96054,96060]" dest="identifier: epochs [36814,36820]"/>
  <match src=".: . [98654,98655]" dest=".: . [39414,39415]"/>
  <match src="user_defined_type [97865,97879]" dest="user_defined_type [38625,38639]"/>
  <match src="member_expression [76032,76042]" dest="member_expression [65373,65383]"/>
  <match src="parameter [51282,51294]" dest="parameter [15989,16001]"/>
  <match src="identifier: outstanding [96076,96087]" dest="identifier: outstanding [36836,36847]"/>
  <match src="(: ( [58858,58859]" dest="(: ( [20450,20451]"/>
  <match src="expression_statement [93468,93526]" dest="expression_statement [34228,34286]"/>
  <match src="identifier: totalCoupons [87666,87678]" dest="identifier: totalCoupons [28426,28438]"/>
  <match src="state_mutability [5862,5866]" dest="state_mutability [6426,6430]"/>
  <match src="}: } [29440,29441]" dest="}: } [42818,42819]"/>
  <match src="parameter [49784,49794]" dest="parameter [14491,14501]"/>
  <match src="(: ( [48004,48005]" dest="(: ( [51121,51122]"/>
  <match src="function: function [50695,50703]" dest="function: function [15402,15410]"/>
  <match src="contract_body [74988,79441]" dest="contract_body [63665,66263]"/>
  <match src="(: ( [75466,75467]" dest="(: ( [63979,63980]"/>
  <match src="type_name [28906,28913]" dest="type_name [42284,42291]"/>
  <match src="uint256: uint256 [98199,98206]" dest="uint256: uint256 [38959,38966]"/>
  <match src=",: , [51347,51348]" dest=",: , [16054,16055]"/>
  <match src="identifier: add [96872,96875]" dest="identifier: add [37632,37635]"/>
  <match src="): ) [811,812]" dest="): ) [1375,1376]"/>
  <match src=".: . [90056,90057]" dest=".: . [30816,30817]"/>
  <match src="call_argument [8757,8764]" dest="call_argument [9321,9328]"/>
  <match src="state_mutability [86419,86423]" dest="state_mutability [27179,27183]"/>
  <match src="member_expression [93468,93482]" dest="member_expression [34228,34242]"/>
  <match src="type_name [94172,94179]" dest="type_name [34932,34939]"/>
  <match src="primitive_type [96348,96355]" dest="primitive_type [37108,37115]"/>
  <match src="(: ( [79111,79112]" dest="(: ( [54061,54062]"/>
  <match src="identifier: i [35207,35208]" dest="identifier: i [48585,48586]"/>
  <match src="constant: constant [42037,42045]" dest="constant: constant [24141,24149]"/>
  <match src="parameter [9120,9124]" dest="parameter [9684,9688]"/>
  <match src="user_defined_type [8797,8801]" dest="user_defined_type [9361,9365]"/>
  <match src=".: . [95513,95514]" dest=".: . [36273,36274]"/>
  <match src="(: ( [97364,97365]" dest="(: ( [38124,38125]"/>
  <match src="state_mutability [43748,43752]" dest="state_mutability [25852,25856]"/>
  <match src="identifier: size [80943,80947]" dest="identifier: size [67765,67769]"/>
  <match src="identifier: Require [78888,78895]" dest="identifier: Require [53417,53424]"/>
  <match src=".: . [89577,89578]" dest=".: . [30337,30338]"/>
  <match src="comment: /**      * Global      */ [93372,93397]" dest="comment: /**      * Global      */ [34132,34157]"/>
  <match src="identifier: epoch [88528,88533]" dest="identifier: epoch [29288,29293]"/>
  <match src="state_mutability [43637,43641]" dest="state_mutability [25741,25745]"/>
  <match src="uint256: uint256 [82059,82066]" dest="uint256: uint256 [21681,21688]"/>
  <match src="event_paramater [48535,48557]" dest="event_paramater [55492,55512]"/>
  <match src="(: ( [78700,78701]" dest="(: ( [57804,57805]"/>
  <match src="parameter [46968,46983]" dest="parameter [19666,19681]"/>
  <match src="identifier: c [3520,3521]" dest="identifier: c [4084,4085]"/>
  <match src="{: { [87496,87497]" dest="{: { [28256,28257]"/>
  <match src="(: ( [87701,87702]" dest="(: ( [28461,28462]"/>
  <match src="identifier: slot [92178,92182]" dest="identifier: slot [32938,32942]"/>
  <match src="variable_declaration [92170,92182]" dest="variable_declaration [32930,32942]"/>
  <match src="event_definition [75339,75394]" dest="event_definition [63811,63866]"/>
  <match src="identifier: candidates [97912,97922]" dest="identifier: candidates [38672,38682]"/>
  <match src="identifier: denominator [9826,9837]" dest="identifier: denominator [10390,10401]"/>
  <match src="contract_declaration [92905,99194]" dest="contract_declaration [33665,39954]"/>
  <match src="parameter [86815,86828]" dest="parameter [27575,27588]"/>
  <match src="expression_statement [100627,100629]" dest="expression_statement [62984,62986]"/>
  <match src="]: ] [98322,98323]" dest="]: ] [39082,39083]"/>
  <match src="return: return [43039,43045]" dest="return: return [25143,25149]"/>
  <match src="visibility [51382,51390]" dest="visibility [16089,16097]"/>
  <match src="using_directive [92946,92973]" dest="using_directive [33706,33733]"/>
  <match src="visibility [42752,42760]" dest="visibility [24856,24864]"/>
  <match src="type_cast_expression [21988,21998]" dest="type_cast_expression [58003,58013]"/>
  <match src="(: ( [91166,91167]" dest="(: ( [31926,31927]"/>
  <match src=",: , [76360,76361]" dest=",: , [64638,64639]"/>
  <match src="parameter [51096,51100]" dest="parameter [15803,15807]"/>
  <match src="call_argument [17783,17789]" dest="call_argument [11699,11705]"/>
  <match src="identifier: totalSupply [88151,88162]" dest="identifier: totalSupply [28911,28922]"/>
  <match src="{: { [6769,6770]" dest="{: { [7333,7334]"/>
  <match src="block_statement [34046,34100]" dest="block_statement [47424,47478]"/>
  <match src="identifier: b [9239,9240]" dest="identifier: b [9803,9804]"/>
  <match src="primitive_type [4617,4624]" dest="primitive_type [5181,5188]"/>
  <match src="identifier: epoch [88363,88368]" dest="identifier: epoch [29123,29128]"/>
  <match src="identifier: onlyFrozen [75759,75769]" dest="identifier: onlyFrozenOrLocked [71226,71244]"/>
  <match src="return_type_definition [86316,86339]" dest="return_type_definition [27076,27099]"/>
  <match src="identifier: size [80897,80901]" dest="identifier: size [67719,67723]"/>
  <match src="identifier: vote [97951,97955]" dest="identifier: vote [38711,38715]"/>
  <match src="): ) [4005,4006]" dest="): ) [4569,4570]"/>
  <match src="comment: /**  * Based off of, and designed to interface with, openzeppelin/upgrades package  */ [83781,83867]" dest="comment: /**  * Based off of, and designed to interface with, openzeppelin/upgrades package  */ [68456,68542]"/>
  <match src="call_argument [73721,73734]" dest="call_argument [54266,54279]"/>
  <match src="type_name [21071,21078]" dest="type_name [51801,51808]"/>
  <match src="member_expression [97438,97452]" dest="member_expression [38198,38212]"/>
  <match src="call_argument [78824,78832]" dest="call_argument [72723,72729]"/>
  <match src="memory: memory [34920,34926]" dest="memory: memory [48298,48304]"/>
  <match src="type_name [75997,76004]" dest="type_name [64545,64552]"/>
  <match src="call_expression [32271,32703]" dest="call_expression [45649,46081]"/>
  <match src="primitive_type [87593,87600]" dest="primitive_type [28353,28360]"/>
  <match src="): ) [49569,49570]" dest="): ) [14276,14277]"/>
  <match src="(: ( [88935,88936]" dest="(: ( [29695,29696]"/>
  <match src="(: ( [88337,88338]" dest="(: ( [29097,29098]"/>
  <match src="=: = [93786,93787]" dest="=: = [34546,34547]"/>
  <match src="state_mutability [43151,43155]" dest="state_mutability [25255,25259]"/>
  <match src="uint256: uint256 [27387,27394]" dest="uint256: uint256 [40765,40772]"/>
  <match src="): ) [95993,95994]" dest="): ) [36753,36754]"/>
  <match src="identifier: IOracle [60364,60371]" dest="identifier: Comptroller [59565,59576]"/>
  <match src="type_name [89294,89301]" dest="type_name [30054,30061]"/>
  <match src="parameter [50737,50744]" dest="parameter [15444,15451]"/>
  <match src="contract_declaration [46875,47084]" dest="contract_declaration [19573,19782]"/>
  <match src="primitive_type [16990,16997]" dest="primitive_type [54218,54225]"/>
  <match src="primitive_type [31459,31463]" dest="primitive_type [44837,44841]"/>
  <match src="view: view [86511,86515]" dest="view: view [27271,27275]"/>
  <match src="uint256: uint256 [75013,75020]" dest="uint256: uint256 [63690,63697]"/>
  <match src="}: } [28226,28227]" dest="}: } [41604,41605]"/>
  <match src="identifier: amount [12003,12009]" dest="identifier: amount [16941,16947]"/>
  <match src="(: ( [86301,86302]" dest="(: ( [27061,27062]"/>
  <match src="identifier: lessUsdc [78814,78822]" dest="identifier: vote [72717,72721]"/>
  <match src="(: ( [43650,43651]" dest="(: ( [25754,25755]"/>
  <match src="using: using [67015,67020]" dest="using: using [70760,70765]"/>
  <match src="): ) [50744,50745]" dest="): ) [15451,15452]"/>
  <match src="call_argument [30354,30359]" dest="call_argument [43732,43737]"/>
  <match src="identifier: D256 [7596,7600]" dest="identifier: D256 [8160,8164]"/>
  <match src="): ) [28522,28523]" dest="): ) [41900,41901]"/>
  <match src="view: view [86311,86315]" dest="view: view [27071,27075]"/>
  <match src="&lt;: &lt; [9448,9449]" dest="&lt;: &lt; [10012,10013]"/>
  <match src="identifier: shift [36249,36254]" dest="identifier: shift [49627,49632]"/>
  <match src="return_statement [42575,42605]" dest="return_statement [24679,24709]"/>
  <match src=".: . [87838,87839]" dest=".: . [28598,28599]"/>
  <match src="identifier: incrementEpoch [96792,96806]" dest="identifier: incrementEpoch [37552,37566]"/>
  <match src="public: public [91718,91724]" dest="public: public [32478,32484]"/>
  <match src="identifier: IOracle [87080,87087]" dest="identifier: IOracle [27840,27847]"/>
  <match src="(: ( [76932,76933]" dest="(: ( [65138,65139]"/>
  <match src="call_expression [84757,84828]" dest="call_expression [69432,69503]"/>
  <match src="return_statement [42474,42486]" dest="return_statement [24578,24590]"/>
  <match src="identifier: outstandingCouponsForEpoch [97490,97516]" dest="identifier: outstandingCouponsForEpoch [38250,38276]"/>
  <match src="call_expression [76722,76897]" dest="call_expression [64922,65059]"/>
  <match src="(: ( [90300,90301]" dest="(: ( [31060,31061]"/>
  <match src="parameter [8193,8206]" dest="parameter [8757,8770]"/>
  <match src="identifier: Epoch [82977,82982]" dest="identifier: Epoch [22599,22604]"/>
  <match src=".: . [90656,90657]" dest=".: . [31416,31417]"/>
  <match src="call_expression [6574,6618]" dest="call_expression [7138,7182]"/>
  <match src="type_name [34165,34170]" dest="type_name [47543,47548]"/>
  <match src="inheritance_specifier [15751,15757]" dest="inheritance_specifier [55027,55032]"/>
  <match src="identifier: stringify [31867,31876]" dest="identifier: stringify [45245,45254]"/>
  <match src="identifier: Require [27328,27335]" dest="identifier: Require [40706,40713]"/>
  <match src="call_argument [7187,7215]" dest="call_argument [7751,7779]"/>
  <match src="identifier: Withdraw [75345,75353]" dest="identifier: Withdraw [63817,63825]"/>
  <match src="parameter [33852,33864]" dest="parameter [47230,47242]"/>
  <match src="primitive_type [95140,95147]" dest="primitive_type [35900,35907]"/>
  <match src="identifier: amount [95359,95365]" dest="identifier: amount [36119,36125]"/>
  <match src=",: , [32420,32421]" dest=",: , [45798,45799]"/>
  <match src="identifier: newImplementation [85360,85377]" dest="identifier: newImplementation [70035,70052]"/>
  <match src="returns: returns [91051,91058]" dest="returns: returns [31811,31818]"/>
  <match src="&quot;: &quot; [426,427]" dest="&quot;: &quot; [990,991]"/>
  <match src="primitive_type [49267,49274]" dest="primitive_type [13974,13981]"/>
  <match src="string_literal [19886,19923]" dest="string_literal [58425,58470]"/>
  <match src=",: , [98589,98590]" dest=",: , [39349,39350]"/>
  <match src="returns: returns [1680,1687]" dest="returns: returns [2244,2251]"/>
  <match src="type_name [89634,89641]" dest="type_name [30394,30401]"/>
  <match src="identifier: period [90002,90008]" dest="identifier: period [30762,30768]"/>
  <match src="]: ] [94972,94973]" dest="]: ] [35732,35733]"/>
  <match src="address: address [49708,49715]" dest="address: address [14415,14422]"/>
  <match src="bytes: bytes [32976,32981]" dest="bytes: bytes [46354,46359]"/>
  <match src="(: ( [7366,7367]" dest="(: ( [7930,7931]"/>
  <match src="call_expression [79094,79126]" dest="call_expression [54048,54100]"/>
  <match src="identifier: epoch [88672,88677]" dest="identifier: epoch [29432,29437]"/>
  <match src="identifier: payloadB [30134,30142]" dest="identifier: payloadB [43512,43520]"/>
  <match src="{: { [35227,35228]" dest="{: { [48605,48606]"/>
  <match src="(: ( [27822,27823]" dest="(: ( [41200,41201]"/>
  <match src=".: . [93506,93507]" dest=".: . [34266,34267]"/>
  <match src="identifier: reason [32067,32073]" dest="identifier: reason [45445,45451]"/>
  <match src="identifier: start [89232,89237]" dest="identifier: start [29992,29997]"/>
  <match src="primitive_type [50943,50949]" dest="primitive_type [15650,15656]"/>
  <match src="member_expression [94427,94442]" dest="member_expression [35187,35202]"/>
  <match src="identifier: Upgraded [84386,84394]" dest="identifier: Upgraded [69061,69069]"/>
  <match src="(: ( [94834,94835]" dest="(: ( [35594,35595]"/>
  <match src="parameter [91739,91746]" dest="parameter [32499,32506]"/>
  <match src="identifier: _state [89219,89225]" dest="identifier: _state [29979,29985]"/>
  <match src="): ) [12009,12010]" dest="): ) [16947,16948]"/>
  <match src="(: ( [49623,49624]" dest="(: ( [14330,14331]"/>
  <match src=".: . [63440,63441]" dest=".: . [73703,73704]"/>
  <match src="identifier: result [35379,35385]" dest="identifier: result [48757,48763]"/>
  <match src="member_expression [95722,95748]" dest="member_expression [36482,36508]"/>
  <match src="function_definition [96316,96479]" dest="function_definition [37076,37239]"/>
  <match src="identifier: sender [76075,76081]" dest="identifier: sender [65092,65098]"/>
  <match src="]: ] [97546,97547]" dest="]: ] [38306,38307]"/>
  <match src="(: ( [9672,9673]" dest="(: ( [10236,10237]"/>
  <match src="struct: struct [82627,82633]" dest="struct: struct [22249,22255]"/>
  <match src="type_name [36663,36667]" dest="type_name [50041,50045]"/>
  <match src="return_statement [6977,7037]" dest="return_statement [7541,7601]"/>
  <match src="function_body [8493,8571]" dest="function_body [9057,9135]"/>
  <match src="parameter [4030,4037]" dest="parameter [4594,4601]"/>
  <match src="&quot;: &quot; [2028,2029]" dest="&quot;: &quot; [2592,2593]"/>
  <match src="visibility [94041,94049]" dest="visibility [34801,34809]"/>
  <match src="function: function [96999,97007]" dest="function: function [37759,37767]"/>
  <match src="primitive_type [66056,66063]" dest="primitive_type [59797,59804]"/>
  <match src="struct_member [82170,82185]" dest="struct_member [21792,21807]"/>
  <match src="&quot;: &quot; [26004,26005]" dest="&quot;: &quot; [72207,72208]"/>
  <match src="user_defined_type [9368,9372]" dest="user_defined_type [9932,9936]"/>
  <match src="identifier: candidate [98274,98283]" dest="identifier: candidate [39034,39043]"/>
  <match src="return: return [43793,43799]" dest="return: return [25897,25903]"/>
  <match src="}: } [77881,77882]" dest="}: } [65789,65790]"/>
  <match src="call_expression [32998,33021]" dest="call_expression [46376,46399]"/>
  <match src="parameter [43286,43293]" dest="parameter [25390,25397]"/>
  <match src="): ) [91811,91812]" dest="): ) [32571,32572]"/>
  <match src="enum_declaration [82245,82313]" dest="enum_declaration [21867,21935]"/>
  <match src="comment: // See https://ethereum.stackexchange.com/a/14016/36603 [80597,80652]" dest="comment: // See https://ethereum.stackexchange.com/a/14016/36603 [67419,67474]"/>
  <match src="}: } [48451,48452]" dest="}: } [58839,58840]"/>
  <match src="type_alias [86097,86104]" dest="type_alias [26857,26864]"/>
  <match src="}: } [91541,91542]" dest="}: } [32301,32302]"/>
  <match src="call_expression [25215,25279]" dest="call_expression [72287,72357]"/>
  <match src="identifier: _state [95489,95495]" dest="identifier: _state [36249,36255]"/>
  <match src="identifier: kLast [51116,51121]" dest="identifier: kLast [15823,15828]"/>
  <match src="parameter [95836,95850]" dest="parameter [36596,36610]"/>
  <match src="parameter [88355,88368]" dest="parameter [29115,29128]"/>
  <match src="identifier: a [10091,10092]" dest="identifier: a [10655,10656]"/>
  <match src="type_name [32059,32066]" dest="type_name [45437,45444]"/>
  <match src="identifier: epoch [95829,95834]" dest="identifier: epoch [36589,36594]"/>
  <match src="]: ] [94711,94712]" dest="]: ] [35471,35472]"/>
  <match src="): ) [3388,3389]" dest="): ) [3952,3953]"/>
  <match src="memory: memory [95859,95865]" dest="memory: memory [36619,36625]"/>
  <match src="type_name [46968,46975]" dest="type_name [19666,19673]"/>
  <match src="function_body [91616,91675]" dest="function_body [32376,32435]"/>
  <match src="identifier: errorMessage [4725,4737]" dest="identifier: errorMessage [5289,5301]"/>
  <match src=",: , [29774,29775]" dest=",: , [43152,43153]"/>
  <match src="}: } [99072,99073]" dest="}: } [39832,39833]"/>
  <match src="type_name [1644,1651]" dest="type_name [2208,2215]"/>
  <match src=".: . [94823,94824]" dest=".: . [35583,35584]"/>
  <match src="state_variable_declaration [41431,41484]" dest="state_variable_declaration [23535,23588]"/>
  <match src="variable_declaration [76701,76719]" dest="variable_declaration [57263,57276]"/>
  <match src="uint: uint [51096,51100]" dest="uint: uint [15803,15807]"/>
  <match src="type_name [68587,68594]" dest="type_name [60696,60703]"/>
  <match src="identifier: value [77174,77179]" dest="identifier: value [66248,66253]"/>
  <match src="identifier: candidates [91916,91926]" dest="identifier: candidates [32676,32686]"/>
  <match src="function_body [96599,96747]" dest="function_body [37359,37507]"/>
  <match src="(: ( [100510,100511]" dest="(: ( [62867,62868]"/>
  <match src="identifier: to [51246,51248]" dest="identifier: to [15953,15955]"/>
  <match src="(: ( [87866,87867]" dest="(: ( [28626,28627]"/>
  <match src="primitive_type [91299,91306]" dest="primitive_type [32059,32066]"/>
  <match src="(: ( [91432,91433]" dest="(: ( [32192,32193]"/>
  <match src="type_name [30813,30820]" dest="type_name [44191,44198]"/>
  <match src="function: function [306,314]" dest="function: function [870,878]"/>
  <match src="identifier: numerator [9799,9808]" dest="identifier: numerator [10363,10372]"/>
  <match src="inheritance_specifier [101309,101320]" dest="inheritance_specifier [70742,70753]"/>
  <match src="identifier: burnFrom [23055,23063]" dest="identifier: redeemToAccount [51549,51564]"/>
  <match src="call_argument [29217,29223]" dest="call_argument [42595,42601]"/>
  <match src="identifier: sender [50435,50441]" dest="identifier: sender [15142,15148]"/>
  <match src="parameter [49639,49654]" dest="parameter [14346,14361]"/>
  <match src="member_expression [89755,89769]" dest="member_expression [30515,30529]"/>
  <match src="(: ( [43625,43626]" dest="(: ( [25729,25730]"/>
  <match src="comment: // reverse-for-loops with unsigned integer [33171,33213]" dest="comment: // reverse-for-loops with unsigned integer [46549,46591]"/>
  <match src="uint256: uint256 [48245,48252]" dest="uint256: uint256 [58709,58716]"/>
  <match src="pure: pure [4016,4020]" dest="pure: pure [4580,4584]"/>
  <match src="member_expression [45869,45881]" dest="member_expression [57140,57152]"/>
  <match src=",: , [9225,9226]" dest=",: , [9789,9790]"/>
  <match src="pragma_value:  ABIEncoderV2 [44,57]" dest="pragma_value:  ABIEncoderV2 [44,57]"/>
  <match src="call_expression [28499,28523]" dest="call_expression [41877,41901]"/>
  <match src="number_literal: 0 [33893,33894]" dest="number_literal: 0 [47271,47272]"/>
  <match src=".: . [91786,91787]" dest=".: . [32546,32547]"/>
  <match src="parameter [1655,1664]" dest="parameter [2219,2228]"/>
  <match src="): ) [45284,45285]" dest="): ) [51381,51382]"/>
  <match src=",: , [29268,29269]" dest=",: , [42646,42647]"/>
  <match src="parameter [27873,27887]" dest="parameter [41251,41265]"/>
  <match src="call_argument [29719,29743]" dest="call_argument [43097,43121]"/>
  <match src="expression_statement [77111,77126]" dest="expression_statement [51956,51971]"/>
  <match src="type_name [50499,50503]" dest="type_name [15206,15210]"/>
  <match src="parameter [12384,12391]" dest="parameter [17322,17329]"/>
  <match src="visibility [76571,76579]" dest="visibility [64824,64832]"/>
  <match src=".: . [82830,82831]" dest=".: . [22452,22453]"/>
  <match src="member_expression [98051,98068]" dest="member_expression [38811,38828]"/>
  <match src="contract_body [81608,81912]" dest="contract_body [21230,21534]"/>
  <match src="identifier: amount [71120,71126]" dest="identifier: amount [58115,58121]"/>
  <match src="bool: bool [12029,12033]" dest="bool: bool [16967,16971]"/>
  <match src="primitive_type [93433,93440]" dest="primitive_type [34193,34200]"/>
  <match src=",: , [6859,6860]" dest=",: , [7423,7424]"/>
  <match src="identifier: balance [94095,94102]" dest="identifier: balance [34855,34862]"/>
  <match src="(: ( [3368,3369]" dest="(: ( [3932,3933]"/>
  <match src="type_name [35287,35294]" dest="type_name [48665,48672]"/>
  <match src="(: ( [48219,48220]" dest="(: ( [58685,58686]"/>
  <match src="}: } [96190,96191]" dest="}: } [36950,36951]"/>
  <match src="): ) [91450,91451]" dest="): ) [32210,32211]"/>
  <match src="contract_body [82522,83061]" dest="contract_body [22144,22683]"/>
  <match src=",: , [30564,30565]" dest=",: , [43942,43943]"/>
  <match src="comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [14006,14569]" dest="comment: /*     Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [10760,11388]"/>
  <match src="{: { [58838,58839]" dest="{: { [20430,20431]"/>
  <match src="return: return [88744,88750]" dest="return: return [29504,29510]"/>
  <match src="uint256: uint256 [1689,1696]" dest="uint256: uint256 [2253,2260]"/>
  <match src="function: function [87445,87453]" dest="function: function [28205,28213]"/>
  <match src="type_name [47940,47947]" dest="type_name [51073,51080]"/>
  <match src="identifier: input [36767,36772]" dest="identifier: input [50145,50150]"/>
  <match src="uint256: uint256 [6236,6243]" dest="uint256: uint256 [6800,6807]"/>
  <match src="function_body [6967,7043]" dest="function_body [7531,7607]"/>
  <match src="{: { [36673,36674]" dest="{: { [50051,50052]"/>
  <match src="augmented_assignment_expression [34624,34631]" dest="augmented_assignment_expression [48002,48009]"/>
  <match src="identifier: coupons [82782,82789]" dest="identifier: coupons [22404,22411]"/>
  <match src="parameter [71202,71216]" dest="parameter [52005,52019]"/>
  <match src="variable_declaration [84734,84753]" dest="variable_declaration [69409,69428]"/>
  <match src="parameter [87593,87600]" dest="parameter [28353,28360]"/>
  <match src=".: . [95744,95745]" dest=".: . [36504,36505]"/>
  <match src="{: { [97080,97081]" dest="{: { [37840,37841]"/>
  <match src="expression_statement [34060,34069]" dest="expression_statement [47438,47447]"/>
  <match src="parameter [43541,43548]" dest="parameter [25645,25652]"/>
  <match src="parameter [95454,95468]" dest="parameter [36214,36228]"/>
  <match src="(: ( [68751,68752]" dest="(: ( [60439,60440]"/>
  <match src="identifier: D256 [8931,8935]" dest="identifier: D256 [9495,9499]"/>
  <match src="member_expression [90185,90225]" dest="member_expression [30945,30985]"/>
  <match src="}: } [47083,47084]" dest="}: } [19781,19782]"/>
  <match src="): ) [87464,87465]" dest="): ) [28224,28225]"/>
  <match src="call_argument [78933,78946]" dest="call_argument [53462,53475]"/>
  <match src="parameter [91607,91614]" dest="parameter [32367,32374]"/>
  <match src="call_argument [34535,34563]" dest="call_argument [47913,47941]"/>
  <match src="): ) [98994,98995]" dest="): ) [39754,39755]"/>
  <match src="comment: // than to check the size of the code at that address. [80534,80588]" dest="comment: // than to check the size of the code at that address. [67356,67410]"/>
  <match src="event_definition [13693,13765]" dest="event_definition [18631,18703]"/>
  <match src="identifier: EPOCH_PERIOD [41912,41924]" dest="identifier: EPOCH_PERIOD [24016,24028]"/>
  <match src="identifier: Decimal [43800,43807]" dest="identifier: Decimal [25904,25911]"/>
  <match src="internal: internal [97271,97279]" dest="internal: internal [38031,38039]"/>
  <match src="identifier: IUniswapV2Pair [73695,73709]" dest="identifier: dollar [54252,54258]"/>
  <match src="variable_declaration_statement [34141,34179]" dest="variable_declaration_statement [47519,47557]"/>
  <match src="number_literal: 0 [10184,10185]" dest="number_literal: 0 [10748,10749]"/>
  <match src="type_name [75436,75443]" dest="type_name [55646,55653]"/>
  <match src="identifier: oracle [101700,101706]" dest="identifier: oracle [61323,61329]"/>
  <match src="number_literal: 0x3e [27697,27701]" dest="number_literal: 0x3e [41075,41079]"/>
  <match src="identifier: amount [17783,17789]" dest="identifier: amount [11699,11705]"/>
  <match src="function_body [8075,8139]" dest="function_body [8639,8703]"/>
  <match src="identifier: b [9026,9027]" dest="identifier: b [9590,9591]"/>
  <match src="&amp;: &amp; [36361,36362]" dest="&amp;: &amp; [49739,49740]"/>
  <match src="internal: internal [6919,6927]" dest="internal: internal [7483,7491]"/>
  <match src="visibility [42870,42878]" dest="visibility [24974,24982]"/>
  <match src="binary_expression [90890,90933]" dest="binary_expression [31650,31693]"/>
  <match src="type_name [6950,6954]" dest="type_name [7514,7518]"/>
  <match src="type_name [1348,1355]" dest="type_name [1912,1919]"/>
  <match src="primitive_type [66080,66087]" dest="primitive_type [59877,59884]"/>
  <match src=".: . [99016,99017]" dest=".: . [39776,39777]"/>
  <match src="=: = [95720,95721]" dest="=: = [36480,36481]"/>
  <match src="string_literal [45945,45964]" dest="string_literal [58531,58568]"/>
  <match src="type_name [60461,60468]" dest="type_name [70891,70898]"/>
  <match src="variable_declaration [89634,89660]" dest="variable_declaration [30394,30420]"/>
  <match src="comment: /* Epoch */ [41871,41882]" dest="comment: /* Epoch */ [23975,23986]"/>
  <match src="): ) [7339,7340]" dest="): ) [7903,7904]"/>
  <match src="identifier: reason [28599,28605]" dest="identifier: reason [41977,41983]"/>
  <match src="identifier: result [36567,36573]" dest="identifier: result [49945,49951]"/>
  <match src="pure: pure [43527,43531]" dest="pure: pure [25631,25635]"/>
  <match src="): ) [7574,7575]" dest="): ) [8138,8139]"/>
  <match src="user_defined_type [8167,8171]" dest="user_defined_type [8731,8735]"/>
  <match src="call_expression [61789,61802]" dest="call_expression [61496,61509]"/>
  <match src="identifier: reject [98677,98683]" dest="identifier: reject [39437,39443]"/>
  <match src="return: return [43184,43190]" dest="return: return [25288,25294]"/>
  <match src=",: , [30066,30067]" dest=",: , [43444,43445]"/>
  <match src="identifier: nonces [50065,50071]" dest="identifier: nonces [14772,14778]"/>
  <match src="): ) [100614,100615]" dest="): ) [62971,62972]"/>
  <match src="contract: contract [82505,82513]" dest="contract: contract [22127,22135]"/>
  <match src="member_expression [77827,77837]" dest="member_expression [65741,65751]"/>
  <match src=".: . [8891,8892]" dest=".: . [9455,9456]"/>
  <match src="identifier: amount [22930,22936]" dest="identifier: amount [11584,11590]"/>
  <match src="): ) [26005,26006]" dest="): ) [72208,72209]"/>
  <match src="function: function [80342,80350]" dest="function: function [67164,67172]"/>
  <match src="uint256: uint256 [22922,22929]" dest="uint256: uint256 [11576,11583]"/>
  <match src="call_expression [95722,95756]" dest="call_expression [36482,36516]"/>
  <match src="state_mutability [88589,88593]" dest="state_mutability [29349,29353]"/>
  <match src="identifier: spender [96649,96656]" dest="identifier: spender [37409,37416]"/>
  <match src="parameter [51410,51420]" dest="parameter [16117,16127]"/>
  <match src="): ) [50572,50573]" dest="): ) [15279,15280]"/>
  <match src="call_struct_argument [8721,8765]" dest="call_struct_argument [9285,9329]"/>
  <match src="primitive_type [15783,15790]" dest="primitive_type [55058,55065]"/>
  <match src="address: address [91299,91306]" dest="address: address [32059,32066]"/>
  <match src="(: ( [6643,6644]" dest="(: ( [7207,7208]"/>
  <match src="identifier: D256 [5880,5884]" dest="identifier: D256 [6444,6448]"/>
  <match src=".: . [91915,91916]" dest=".: . [32675,32676]"/>
  <match src="primitive_type [93584,93590]" dest="primitive_type [34344,34350]"/>
  <match src="primitive_type [94025,94032]" dest="primitive_type [34785,34792]"/>
  <match src=":: : [7914,7915]" dest=":: : [8478,8479]"/>
  <match src="visibility [94210,94218]" dest="visibility [34970,34978]"/>
  <match src="(: ( [29020,29021]" dest="(: ( [42398,42399]"/>
  <match src="function_definition [9464,9566]" dest="function_definition [10028,10130]"/>
  <match src="(: ( [100613,100614]" dest="(: ( [62970,62971]"/>
  <match src="return_statement [10153,10186]" dest="return_statement [10717,10750]"/>
  <match src="identifier: expiring [97186,97194]" dest="identifier: expiring [37946,37954]"/>
  <match src="(: ( [43370,43371]" dest="(: ( [25474,25475]"/>
  <match src="identifier: reason [84747,84753]" dest="identifier: reason [69422,69428]"/>
  <match src="visibility [43628,43636]" dest="visibility [25732,25740]"/>
  <match src="call_argument [19886,19923]" dest="call_argument [58425,58470]"/>
  <match src="if: if [48206,48208]" dest="if: if [58641,58643]"/>
  <match src="number_literal: 18 [86549,86551]" dest="number_literal: 18 [27309,27311]"/>
  <match src="type_name [49755,49759]" dest="type_name [14462,14466]"/>
  <match src="primitive_type [47076,47080]" dest="primitive_type [19774,19778]"/>
  <match src="identifier: spender [12352,12359]" dest="identifier: spender [17290,17297]"/>
  <match src="identifier: length [34015,34021]" dest="identifier: length [47393,47399]"/>
  <match src="identifier: timestamp [89818,89827]" dest="identifier: timestamp [30578,30587]"/>
  <match src="return_statement [86640,86680]" dest="return_statement [27400,27440]"/>
  <match src="identifier: BASE [7019,7023]" dest="identifier: BASE [7583,7587]"/>
  <match src="type_name [15817,15824]" dest="type_name [11520,11527]"/>
  <match src="uint256: uint256 [87804,87811]" dest="uint256: uint256 [28564,28571]"/>
  <match src="call_argument [78807,78812]" dest="call_argument [72706,72715]"/>
  <match src="=: = [89661,89662]" dest="=: = [30421,30422]"/>
  <match src="identifier: a [395,396]" dest="identifier: a [959,960]"/>
  <match src=",: , [9157,9158]" dest=",: , [9721,9722]"/>
  <match src="identifier: sub [95975,95978]" dest="identifier: sub [36735,36738]"/>
  <match src="internal: internal [43628,43636]" dest="internal: internal [25732,25740]"/>
  <match src="variable_declaration_statement [63081,63230]" dest="variable_declaration_statement [60759,60848]"/>
  <match src=",: , [77837,77838]" dest=",: , [65751,65752]"/>
  <match src="variable_declaration [88129,88148]" dest="variable_declaration [28889,28908]"/>
  <match src="(: ( [44008,44009]" dest="(: ( [26112,26113]"/>
  <match src="): ) [50114,50115]" dest="): ) [14821,14822]"/>
  <match src=",: , [23131,23132]" dest=",: , [51642,51643]"/>
  <match src="identifier: getBootstrappingSpeedupFactor [89592,89621]" dest="identifier: getBootstrappingSpeedupFactor [30352,30381]"/>
  <match src="): ) [79056,79057]" dest="): ) [53599,53600]"/>
  <match src="parameter [7148,7159]" dest="parameter [7712,7723]"/>
  <match src="function: function [8577,8585]" dest="function: function [9141,9149]"/>
  <match src="identifier: accounts [95221,95229]" dest="identifier: accounts [35981,35989]"/>
  <match src="primitive_type [49188,49195]" dest="primitive_type [13895,13902]"/>
  <match src="false [93222,93227]" dest="false [33982,33987]"/>
  <match src="bytes32: bytes32 [31500,31507]" dest="bytes32: bytes32 [44878,44885]"/>
  <match src="): ) [33601,33602]" dest="): ) [46979,46980]"/>
  <match src="primitive_type [43286,43293]" dest="primitive_type [25390,25397]"/>
  <match src="primitive_type [65833,65840]" dest="primitive_type [59696,59703]"/>
  <match src="identifier: b [9159,9160]" dest="identifier: b [9723,9724]"/>
  <match src="parameter [93278,93295]" dest="parameter [34038,34055]"/>
  <match src="function_body [91482,91542]" dest="function_body [32242,32302]"/>
  <match src="primitive_type [50072,50079]" dest="primitive_type [14779,14786]"/>
  <match src="parameter [2569,2578]" dest="parameter [3133,3142]"/>
  <match src="(: ( [77418,77419]" dest="(: ( [65495,65496]"/>
  <match src="primitive_type [71202,71209]" dest="primitive_type [52005,52012]"/>
  <match src="member_expression [95722,95736]" dest="member_expression [36482,36496]"/>
  <match src="internal: internal [26359,26367]" dest="internal: internal [51089,51097]"/>
  <match src="type_cast_expression [79112,79125]" dest="type_cast_expression [54062,54075]"/>
  <match src="}: } [77186,77187]" dest="}: } [65308,65309]"/>
  <match src="]: ] [91260,91261]" dest="]: ] [32020,32021]"/>
  <match src="parameter [7251,7267]" dest="parameter [7815,7831]"/>
  <match src="state_mutability [87473,87477]" dest="state_mutability [28233,28237]"/>
  <match src="function_body [28955,29447]" dest="function_body [42333,42825]"/>
  <match src="memory: memory [63418,63424]" dest="memory: memory [61295,61301]"/>
  <match src="call_expression [25923,26006]" dest="call_expression [72141,72209]"/>
  <match src="binary_expression [3411,3416]" dest="binary_expression [3975,3980]"/>
  <match src="function_definition [11532,11587]" dest="function_definition [16470,16525]"/>
  <match src="(: ( [22107,22108]" dest="(: ( [58152,58153]"/>
  <match src="type_cast_expression [34798,34812]" dest="type_cast_expression [48176,48190]"/>
  <match src="primitive_type [4690,4697]" dest="primitive_type [5254,5261]"/>
  <match src="identifier: redeemable [94244,94254]" dest="identifier: redeemable [35004,35014]"/>
  <match src="): ) [6503,6504]" dest="): ) [7067,7068]"/>
  <match src="call_expression [77839,77853]" dest="call_expression [65753,65767]"/>
  <match src="(: ( [87361,87362]" dest="(: ( [28121,28122]"/>
  <match src="]: ] [99165,99166]" dest="]: ] [39925,39926]"/>
  <match src="primitive_type [50278,50282]" dest="primitive_type [14985,14989]"/>
  <match src="parameter [45372,45385]" dest="parameter [65331,65344]"/>
  <match src="return_type_definition [44000,44017]" dest="return_type_definition [26104,26121]"/>
  <match src="identifier: balance [96124,96131]" dest="identifier: balance [36884,36891]"/>
  <match src=".: . [93655,93656]" dest=".: . [34415,34416]"/>
  <match src="): ) [51005,51006]" dest="): ) [15712,15713]"/>
  <match src="primitive_type [50549,50556]" dest="primitive_type [15256,15263]"/>
  <match src="identifier: abi [31660,31663]" dest="identifier: abi [45038,45041]"/>
  <match src="type_name [86433,86439]" dest="type_name [27193,27199]"/>
  <match src=",: , [51280,51281]" dest=",: , [15987,15988]"/>
  <match src="type_name [9767,9774]" dest="type_name [10331,10338]"/>
  <match src="): ) [51151,51152]" dest="): ) [15858,15859]"/>
  <match src="{: { [89403,89404]" dest="{: { [30163,30164]"/>
  <match src="(: ( [84861,84862]" dest="(: ( [69536,69537]"/>
  <match src="]: ] [33407,33408]" dest="]: ] [46785,46786]"/>
  <match src="private: private [60469,60476]" dest="private: private [60303,60310]"/>
  <match src="}: } [8774,8775]" dest="}: } [9338,9339]"/>
  <match src=".: . [95238,95239]" dest=".: . [35998,35999]"/>
  <match src="memory: memory [62521,62527]" dest="memory: memory [59954,59960]"/>
  <match src="revert_statement [28405,28770]" dest="revert_statement [41783,42148]"/>
  <match src="=: = [36255,36256]" dest="=: = [49633,49634]"/>
  <match src="(: ( [9019,9020]" dest="(: ( [9583,9584]"/>
  <match src="(: ( [87592,87593]" dest="(: ( [28352,28353]"/>
  <match src="{: { [9891,9892]" dest="{: { [10455,10456]"/>
  <match src="call_expression [29884,29903]" dest="call_expression [43262,43281]"/>
  <match src="{: { [94678,94679]" dest="{: { [35438,35439]"/>
  <match src="return_statement [43560,43585]" dest="return_statement [25664,25689]"/>
  <match src="uint256: uint256 [75379,75386]" dest="uint256: uint256 [63851,63858]"/>
  <match src="member_expression [7013,7018]" dest="member_expression [7577,7582]"/>
  <match src="): ) [91037,91038]" dest="): ) [31797,31798]"/>
  <match src="member_expression [55076,55091]" dest="member_expression [75157,75172]"/>
  <match src="): ) [9269,9270]" dest="): ) [9833,9834]"/>
  <match src="(: ( [58907,58908]" dest="(: ( [20499,20500]"/>
  <match src="function: function [8373,8381]" dest="function: function [8937,8945]"/>
  <match src="comment: /*     Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [64330,64958]" dest="comment: /*     Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [54366,54994]"/>
  <match src="(: ( [29655,29656]" dest="(: ( [43033,43034]"/>
  <match src=".: . [87519,87520]" dest=".: . [28279,28280]"/>
  <match src="(: ( [28517,28518]" dest="(: ( [41895,41896]"/>
  <match src="member_expression [89936,89950]" dest="member_expression [30696,30710]"/>
  <match src="identifier: value [7921,7926]" dest="identifier: value [8485,8490]"/>
  <match src="(: ( [803,804]" dest="(: ( [1367,1368]"/>
  <match src="type_name [63685,63692]" dest="type_name [64904,64911]"/>
  <match src="parameter [759,768]" dest="parameter [1323,1332]"/>
  <match src="(: ( [758,759]" dest="(: ( [1322,1323]"/>
  <match src="primitive_type [50419,50426]" dest="primitive_type [15126,15133]"/>
  <match src="primitive_type [75411,75418]" dest="primitive_type [74653,74660]"/>
  <match src=",: , [49186,49187]" dest=",: , [13893,13894]"/>
  <match src="indexed: indexed [84403,84410]" dest="indexed: indexed [69078,69085]"/>
  <match src="identifier: value [6178,6183]" dest="identifier: value [6742,6747]"/>
  <match src="call_argument [31835,31841]" dest="call_argument [45213,45219]"/>
  <match src=".: . [7002,7003]" dest=".: . [7566,7567]"/>
  <match src=",: , [73652,73653]" dest=",: , [72624,72625]"/>
  <match src="member_expression [97152,97185]" dest="member_expression [37912,37945]"/>
  <match src="expression_statement [85139,85269]" dest="expression_statement [69814,69944]"/>
  <match src="parameter [90404,90417]" dest="parameter [31164,31177]"/>
  <match src="primitive_type [8987,8991]" dest="primitive_type [9551,9555]"/>
  <match src="primitive_type [50197,50202]" dest="primitive_type [14904,14909]"/>
  <match src="): ) [2667,2668]" dest="): ) [3231,3232]"/>
  <match src="=: = [34796,34797]" dest="=: = [48174,48175]"/>
  <match src=".: . [9668,9669]" dest=".: . [10232,10233]"/>
  <match src="identifier: couponAllowances [96438,96454]" dest="identifier: couponAllowances [37198,37214]"/>
  <match src="identifier: amount [94922,94928]" dest="identifier: amount [35682,35688]"/>
  <match src="primitive_type [65782,65789]" dest="primitive_type [59673,59680]"/>
  <match src="address: address [60589,60596]" dest="address: address [71023,71030]"/>
  <match src="call_argument [98344,98350]" dest="call_argument [39104,39110]"/>
  <match src="expression_statement [410,457]" dest="expression_statement [974,1021]"/>
  <match src="function: function [96891,96899]" dest="function: function [37651,37659]"/>
  <match src="): ) [91785,91786]" dest="): ) [32545,32546]"/>
  <match src="identifier: payloadA [31166,31174]" dest="identifier: payloadA [44544,44552]"/>
  <match src="function_body [94939,95100]" dest="function_body [35699,35860]"/>
  <match src="(: ( [7906,7907]" dest="(: ( [8470,8471]"/>
  <match src="&lt;: &lt; [89753,89754]" dest="&lt;: &lt; [30513,30514]"/>
  <match src="call_argument [48298,48304]" dest="call_argument [58762,58768]"/>
  <match src="primitive_type [34535,34540]" dest="primitive_type [47913,47918]"/>
  <match src="identifier: account [95430,95437]" dest="identifier: account [36190,36197]"/>
  <match src="function: function [93240,93248]" dest="function: function [34000,34008]"/>
  <match src="identifier: balance [94264,94271]" dest="identifier: balance [35024,35031]"/>
  <match src="identifier: stringify [33779,33788]" dest="identifier: stringify [47157,47166]"/>
  <match src=".: . [98118,98119]" dest=".: . [38878,38879]"/>
  <match src="parameter [97051,97069]" dest="parameter [37811,37829]"/>
  <match src="function_body [90873,90940]" dest="function_body [31633,31700]"/>
  <match src="identifier: Locked [100062,100068]" dest="identifier: Locked [62419,62425]"/>
  <match src="(: ( [8340,8341]" dest="(: ( [8904,8905]"/>
  <match src="identifier: payloadC [31318,31326]" dest="identifier: payloadC [44696,44704]"/>
  <match src="(: ( [29102,29103]" dest="(: ( [42480,42481]"/>
  <match src="identifier: value [76564,76569]" dest="identifier: value [64817,64822]"/>
  <match src="=: = [35536,35537]" dest="=: = [48914,48915]"/>
  <match src="pure: pure [31564,31568]" dest="pure: pure [44942,44946]"/>
  <match src="comment: /**      * Account      */ [94315,94341]" dest="comment: /**      * Account      */ [35075,35101]"/>
  <match src="parameter [87702,87709]" dest="parameter [28462,28469]"/>
  <match src=":: : [43453,43454]" dest=":: : [25557,25558]"/>
  <match src=".: . [89817,89818]" dest=".: . [30577,30578]"/>
  <match src="call_expression [28007,28178]" dest="call_expression [41385,41556]"/>
  <match src=".: . [94729,94730]" dest=".: . [35489,35490]"/>
  <match src="memory: memory [43775,43781]" dest="memory: memory [25879,25885]"/>
  <match src="identifier: epoch [88433,88438]" dest="identifier: epoch [29193,29198]"/>
  <match src="(: ( [49593,49594]" dest="(: ( [14300,14301]"/>
  <match src="member_expression [31660,31676]" dest="member_expression [45038,45054]"/>
  <match src="identifier: account [95547,95554]" dest="identifier: account [36307,36314]"/>
  <match src="struct_member [5752,5766]" dest="struct_member [6316,6330]"/>
  <match src="internal: internal [94210,94218]" dest="internal: internal [34970,34978]"/>
  <match src="function_body [100256,100416]" dest="function_body [62613,62773]"/>
  <match src="call_expression [89582,89623]" dest="call_expression [30342,30383]"/>
  <match src="function: function [42836,42844]" dest="function: function [24940,24948]"/>
  <match src="comment: // '0' [27421,27427]" dest="comment: // '0' [40799,40805]"/>
  <match src="function_body [373,482]" dest="function_body [937,1046]"/>
  <match src="): ) [48020,48021]" dest="): ) [51137,51138]"/>
  <match src="identifier: that [28801,28805]" dest="identifier: that [42179,42183]"/>
  <match src="state_mutability [9392,9396]" dest="state_mutability [9956,9960]"/>
  <match src="function_definition [49537,49600]" dest="function_definition [14244,14307]"/>
  <match src="identifier: _state [96142,96148]" dest="identifier: _state [36902,36908]"/>
  <match src="visibility [8830,8838]" dest="visibility [9394,9402]"/>
  <match src="(: ( [91885,91886]" dest="(: ( [32645,32646]"/>
  <match src="identifier: current [96864,96871]" dest="identifier: current [37624,37631]"/>
  <match src=".: . [89868,89869]" dest=".: . [30628,30629]"/>
  <match src="identifier: D256 [7251,7255]" dest="identifier: D256 [7815,7819]"/>
  <match src="return_statement [87721,87751]" dest="return_statement [28481,28511]"/>
  <match src="number_literal: 65 [36340,36342]" dest="number_literal: 65 [49718,49720]"/>
  <match src="(: ( [29737,29738]" dest="(: ( [43115,43116]"/>
  <match src="identifier: _state [87204,87210]" dest="identifier: _state [27964,27970]"/>
  <match src="[: [ [97165,97166]" dest="[: [ [37925,37926]"/>
  <match src="call_expression [89903,90009]" dest="call_expression [30663,30769]"/>
  <match src="parameter [319,328]" dest="parameter [883,892]"/>
  <match src="parameter [91886,91890]" dest="parameter [32646,32650]"/>
  <match src="constant: constant [84139,84147]" dest="constant: constant [68814,68822]"/>
  <match src="pure: pure [8040,8044]" dest="pure: pure [8604,8608]"/>
  <match src="return: return [87099,87105]" dest="return: return [27859,27865]"/>
  <match src="call_struct_argument [7189,7213]" dest="call_struct_argument [7753,7777]"/>
  <match src="type_name [75595,75602]" dest="type_name [71071,71078]"/>
  <match src="primitive_type [88355,88362]" dest="primitive_type [29115,29122]"/>
  <match src="function_body [96931,96993]" dest="function_body [37691,37753]"/>
  <match src="): ) [76320,76321]" dest="): ) [65874,65875]"/>
  <match src="identifier: account [95812,95819]" dest="identifier: account [36572,36579]"/>
  <match src="}: } [79440,79441]" dest="}: } [66262,66263]"/>
  <match src="if_statement [1926,1971]" dest="if_statement [2490,2535]"/>
  <match src="visibility [12011,12019]" dest="visibility [16949,16957]"/>
  <match src="identifier: abi [32998,33001]" dest="identifier: abi [46376,46379]"/>
  <match src="using: using [5573,5578]" dest="using: using [6137,6142]"/>
  <match src="}: } [6814,6815]" dest="}: } [7378,7379]"/>
  <match src="identifier: totalPhantom [76676,76688]" dest="identifier: couponPremium [57336,57349]"/>
  <match src="identifier: value [9663,9668]" dest="identifier: value [10227,10232]"/>
  <match src="assignment_expression [95036,95093]" dest="assignment_expression [35796,35853]"/>
  <match src="[: [ [89001,89002]" dest="[: [ [29761,29762]"/>
  <match src="): ) [47058,47059]" dest="): ) [19756,19757]"/>
  <match src="identifier: msg [75770,75773]" dest="identifier: msg [71245,71248]"/>
  <match src="return: return [42685,42691]" dest="return: return [24789,24795]"/>
  <match src="identifier: candidate [98188,98197]" dest="identifier: candidate [38948,38957]"/>
  <match src="identifier: self [7799,7803]" dest="identifier: self [8363,8367]"/>
  <match src=",: , [79006,79007]" dest=",: , [53553,53554]"/>
  <match src="bool: bool [30696,30700]" dest="bool: bool [44074,44078]"/>
  <match src="member_expression [90899,90931]" dest="member_expression [31659,31691]"/>
  <match src=",: , [31514,31515]" dest=",: , [44892,44893]"/>
  <match src="identifier: i [34463,34464]" dest="identifier: i [47841,47842]"/>
  <match src="identifier: z [35437,35438]" dest="identifier: z [48815,48816]"/>
  <match src="unary_expression [32198,32203]" dest="unary_expression [45576,45581]"/>
  <match src="variable_declaration_statement [34290,34309]" dest="variable_declaration_statement [47668,47687]"/>
  <match src="identifier: startFor [98914,98922]" dest="identifier: startFor [39674,39682]"/>
  <match src="identifier: sub [6640,6643]" dest="identifier: sub [7204,7207]"/>
  <match src="identifier: sub [7964,7967]" dest="identifier: sub [8528,8531]"/>
  <match src="): ) [30194,30195]" dest="): ) [43572,43573]"/>
  <match src="type_name [34758,34763]" dest="type_name [48136,48141]"/>
  <match src="comment: // ============ Constants ============ [27343,27381]" dest="comment: // ============ Constants ============ [40721,40759]"/>
  <match src="call_expression [6171,6199]" dest="call_expression [6735,6763]"/>
  <match src="identifier: z [36395,36396]" dest="identifier: z [49773,49774]"/>
  <match src="return: return [7895,7901]" dest="return: return [8459,8465]"/>
  <match src="): ) [63031,63032]" dest="): ) [60607,60608]"/>
  <match src="type_name [28275,28282]" dest="type_name [41653,41660]"/>
  <match src=",: , [29743,29744]" dest=",: , [43121,43122]"/>
  <match src="primitive_type [29495,29502]" dest="primitive_type [42873,42880]"/>
  <match src="}: } [88540,88541]" dest="}: } [29300,29301]"/>
  <match src=".: . [10103,10104]" dest=".: . [10667,10668]"/>
  <match src="number_literal: 0 [88193,88194]" dest="number_literal: 0 [28953,28954]"/>
  <match src="primitive_type [50451,50455]" dest="primitive_type [15158,15162]"/>
  <match src="return_type_definition [6128,6149]" dest="return_type_definition [6692,6713]"/>
  <match src="(: ( [62547,62548]" dest="(: ( [59982,59983]"/>
  <match src="]: ] [88518,88519]" dest="]: ] [29278,29279]"/>
  <match src="yul_function_call [92245,92256]" dest="yul_function_call [33005,33016]"/>
  <match src="identifier: this [45280,45284]" dest="identifier: this [51377,51381]"/>
  <match src="call_expression [87830,87869]" dest="call_expression [28590,28629]"/>
  <match src=".: . [90042,90043]" dest=".: . [30802,30803]"/>
  <match src="): ) [43087,43088]" dest="): ) [25191,25192]"/>
  <match src="visibility [96396,96404]" dest="visibility [37156,37164]"/>
  <match src="address: address [48535,48542]" dest="address: address [55492,55499]"/>
  <match src="function_definition [61585,61827]" dest="function_definition [61208,61549]"/>
  <match src="member_expression [93492,93506]" dest="member_expression [34252,34266]"/>
  <match src="returns: returns [49906,49913]" dest="returns: returns [14613,14620]"/>
  <match src="(: ( [81809,81810]" dest="(: ( [21431,21432]"/>
  <match src="internal: internal [5849,5857]" dest="internal: internal [6413,6421]"/>
  <match src="uint256: uint256 [94392,94399]" dest="uint256: uint256 [35152,35159]"/>
  <match src="bytes2: bytes2 [27585,27591]" dest="bytes2: bytes2 [40963,40969]"/>
  <match src=",: , [28606,28607]" dest=",: , [41984,41985]"/>
  <match src="function_definition [32810,33764]" dest="function_definition [46188,47142]"/>
  <match src="identifier: FILE [99888,99892]" dest="identifier: FILE [62245,62249]"/>
  <match src="identifier: expiring [90657,90665]" dest="identifier: expiring [31417,31425]"/>
  <match src="): ) [84651,84652]" dest="): ) [69326,69327]"/>
  <match src="variable_declaration [32976,32995]" dest="variable_declaration [46354,46373]"/>
  <match src=".: . [96257,96258]" dest=".: . [37017,37018]"/>
  <match src="expression_statement [78212,78350]" dest="expression_statement [71267,71378]"/>
  <match src="identifier: Decimal [86097,86104]" dest="identifier: Decimal [26857,26864]"/>
  <match src="?: ? [88798,88799]" dest="?: ? [29558,29559]"/>
  <match src="member_expression [78701,78711]" dest="member_expression [57805,57815]"/>
  <match src="member_expression [89117,89137]" dest="member_expression [29877,29897]"/>
  <match src="call_argument [84690,84707]" dest="call_argument [69365,69382]"/>
  <match src="parameter [59706,59710]" dest="parameter [73581,73585]"/>
  <match src="primitive_type [91739,91746]" dest="primitive_type [32499,32506]"/>
  <match src="comment: /**      * ERC20 Interface      */ [86248,86282]" dest="comment: /**      * ERC20 Interface      */ [27008,27042]"/>
  <match src="}: } [7034,7035]" dest="}: } [7598,7599]"/>
  <match src="uint256: uint256 [4617,4624]" dest="uint256: uint256 [5181,5188]"/>
  <match src="parameter [35714,35726]" dest="parameter [49092,49104]"/>
  <match src="(: ( [43285,43286]" dest="(: ( [25389,25390]"/>
  <match src="==: == [76736,76738]" dest="==: == [64936,64938]"/>
  <match src="comment: // populate the least-significant character [35323,35366]" dest="comment: // populate the least-significant character [48701,48744]"/>
  <match src="[: [ [96017,96018]" dest="[: [ [36777,36778]"/>
  <match src="call_expression [43434,43474]" dest="call_expression [25538,25578]"/>
  <match src="primitive_type [98016,98023]" dest="primitive_type [38776,38783]"/>
  <match src="primitive_type [49165,49172]" dest="primitive_type [13872,13879]"/>
  <match src="function_body [36673,36899]" dest="function_body [50051,50277]"/>
  <match src="type_name [89394,89401]" dest="type_name [30154,30161]"/>
  <match src="member_expression [89582,89621]" dest="member_expression [30342,30381]"/>
  <match src="member_expression [93788,93802]" dest="member_expression [34548,34562]"/>
  <match src="identifier: D256 [5995,5999]" dest="identifier: D256 [6559,6563]"/>
  <match src="type_name [78361,78368]" dest="type_name [56206,56213]"/>
  <match src="return_statement [89896,90083]" dest="return_statement [30656,30843]"/>
  <match src="state_mutability [49964,49968]" dest="state_mutability [14671,14675]"/>
  <match src="primitive_type [27491,27498]" dest="primitive_type [40869,40876]"/>
  <match src="identifier: abi [32271,32274]" dest="identifier: abi [45649,45652]"/>
  <match src="return_type_definition [50101,50115]" dest="return_type_definition [14808,14822]"/>
  <match src="): ) [31808,31809]" dest="): ) [45186,45187]"/>
  <match src="state_variable_declaration [27629,27661]" dest="state_variable_declaration [41007,41039]"/>
  <match src="call_argument [28580,28606]" dest="call_argument [41958,41984]"/>
  <match src="call_expression [76332,76368]" dest="call_expression [64610,64646]"/>
  <match src="(: ( [45881,45882]" dest="(: ( [57152,57153]"/>
  <match src="member_expression [10091,10098]" dest="member_expression [10655,10662]"/>
  <match src=",: , [94293,94294]" dest=",: , [35053,35054]"/>
  <match src="call_argument [77315,77325]" dest="call_argument [71921,71931]"/>
  <match src="is: is [99845,99847]" dest="is: is [62202,62204]"/>
  <match src="state_mutability [43382,43386]" dest="state_mutability [25486,25490]"/>
  <match src="uint256: uint256 [89091,89098]" dest="uint256: uint256 [29851,29858]"/>
  <match src="(: ( [42749,42750]" dest="(: ( [24853,24854]"/>
  <match src="(: ( [86979,86980]" dest="(: ( [27739,27740]"/>
  <match src=",: , [32497,32498]" dest=",: , [45875,45876]"/>
  <match src=".: . [93953,93954]" dest=".: . [34713,34714]"/>
  <match src="state_variable_declaration [27585,27616]" dest="state_variable_declaration [40963,40994]"/>
  <match src=".: . [96087,96088]" dest=".: . [36847,36848]"/>
  <match src="function_definition [50122,50237]" dest="function_definition [14829,14944]"/>
  <match src="binary_expression [4717,4723]" dest="binary_expression [5281,5287]"/>
  <match src="{: { [74988,74989]" dest="{: { [63665,63666]"/>
  <match src="(: ( [73261,73262]" dest="(: ( [56879,56880]"/>
  <match src="identifier: epochStart [89421,89431]" dest="identifier: epochStart [30181,30191]"/>
  <match src="(: ( [8589,8590]" dest="(: ( [9153,9154]"/>
  <match src="(: ( [42665,42666]" dest="(: ( [24769,24770]"/>
  <match src="identifier: Vote [82250,82254]" dest="identifier: Vote [21872,21876]"/>
  <match src="): ) [64111,64112]" dest="): ) [56801,56802]"/>
  <match src="visibility [64996,65004]" dest="visibility [75015,75023]"/>
  <match src="uint256: uint256 [6086,6093]" dest="uint256: uint256 [6650,6657]"/>
  <match src="primitive_type [95821,95828]" dest="primitive_type [36581,36588]"/>
  <match src="&quot;: &quot; [46182,46183]" dest="&quot;: &quot; [51500,51501]"/>
  <match src="return: return [42575,42581]" dest="return: return [24679,24685]"/>
  <match src="uint256: uint256 [19738,19745]" dest="uint256: uint256 [58269,58276]"/>
  <match src=",: , [30359,30360]" dest=",: , [43737,43738]"/>
  <match src="type_name [65806,65813]" dest="type_name [59820,59827]"/>
  <match src="number_literal: 0x203c [27654,27660]" dest="number_literal: 0x203c [41032,41038]"/>
  <match src="type_cast_expression [19791,19801]" dest="type_cast_expression [58322,58332]"/>
  <match src="type_name [62471,62483]" dest="type_name [13331,13343]"/>
  <match src="&quot;: &quot; [76425,76426]" dest="&quot;: &quot; [73073,73074]"/>
  <match src="identifier: mul [6605,6608]" dest="identifier: mul [7169,7172]"/>
  <match src="if: if [98969,98971]" dest="if: if [39729,39731]"/>
  <match src="primitive_type [50153,50160]" dest="primitive_type [14860,14867]"/>
  <match src="(: ( [89067,89068]" dest="(: ( [29827,29828]"/>
  <match src="identifier: amount [98024,98030]" dest="identifier: amount [38784,38790]"/>
  <match src="identifier: lessUsdc [75684,75692]" dest="identifier: amount [74686,74692]"/>
  <match src="identifier: coupons [95918,95925]" dest="identifier: coupons [36678,36685]"/>
  <match src="uint: uint [51030,51034]" dest="uint: uint [15737,15741]"/>
  <match src="identifier: _state [90628,90634]" dest="identifier: _state [31388,31394]"/>
  <match src=",: , [10000,10001]" dest=",: , [10564,10565]"/>
  <match src="pure: pure [7310,7314]" dest="pure: pure [7874,7878]"/>
  <match src="identifier: that [32004,32008]" dest="identifier: that [45382,45386]"/>
  <match src="identifier: reason [95292,95298]" dest="identifier: reason [36052,36058]"/>
  <match src="): ) [92158,92159]" dest="): ) [32918,32919]"/>
  <match src="uint256: uint256 [34290,34297]" dest="uint256: uint256 [47668,47675]"/>
  <match src="parameter [17620,17634]" dest="parameter [52126,52140]"/>
  <match src="(: ( [89370,89371]" dest="(: ( [30130,30131]"/>
  <match src="variable_declaration [36153,36162]" dest="variable_declaration [49531,49540]"/>
  <match src="function_body [86630,86686]" dest="function_body [27390,27446]"/>
  <match src="identifier: IUniswapV2Pair [49129,49143]" dest="identifier: IUniswapV2Pair [13836,13850]"/>
  <match src="state_mutability [52750,52754]" dest="state_mutability [11851,11855]"/>
  <match src=",: , [29139,29140]" dest=",: , [42517,42518]"/>
  <match src="**: ** [5676,5678]" dest="**: ** [6240,6242]"/>
  <match src="identifier: totalBonded [77988,77999]" dest="identifier: totalBonded [53827,53838]"/>
  <match src=",: , [98213,98214]" dest=",: , [38973,38974]"/>
  <match src="struct_member [82365,82380]" dest="struct_member [21987,22002]"/>
  <match src="): ) [93311,93312]" dest="): ) [34071,34072]"/>
  <match src="function_body [89403,90089]" dest="function_body [30163,30849]"/>
  <match src="struct_declaration [82147,82216]" dest="struct_declaration [21769,21838]"/>
  <match src="identifier: amount [96169,96175]" dest="identifier: amount [36929,36935]"/>
  <match src="=: = [27607,27608]" dest="=: = [40985,40986]"/>
  <match src="): ) [86530,86531]" dest="): ) [27290,27291]"/>
  <match src="identifier: amount [93868,93874]" dest="identifier: amount [34628,34634]"/>
  <match src="identifier: account [26056,26063]" dest="identifier: account [51573,51580]"/>
  <match src="return_type_definition [7499,7520]" dest="return_type_definition [8063,8084]"/>
  <match src="call_argument [91791,91811]" dest="call_argument [32551,32571]"/>
  <match src="(: ( [6453,6454]" dest="(: ( [7017,7018]"/>
  <match src="parameter [98016,98030]" dest="parameter [38776,38790]"/>
  <match src="{: { [8697,8698]" dest="{: { [9261,9262]"/>
  <match src="external: external [49382,49390]" dest="external: external [14089,14097]"/>
  <match src="(: ( [100238,100239]" dest="(: ( [62595,62596]"/>
  <match src="type_name [32037,32044]" dest="type_name [45415,45422]"/>
  <match src="returns: returns [9512,9519]" dest="returns: returns [10076,10083]"/>
  <match src="struct_member [82554,82569]" dest="struct_member [22176,22191]"/>
  <match src=",: , [47938,47939]" dest=",: , [51071,51072]"/>
  <match src="library_declaration [27320,36901]" dest="library_declaration [40698,50279]"/>
  <match src="user_defined_type [83025,83040]" dest="user_defined_type [22647,22662]"/>
  <match src="function: function [97619,97627]" dest="function: function [38379,38387]"/>
  <match src="}: } [6377,6378]" dest="}: } [6941,6942]"/>
  <match src=".: . [83034,83035]" dest=".: . [22656,22657]"/>
  <match src="memory: memory [95180,95186]" dest="memory: memory [35940,35946]"/>
  <match src="): ) [77164,77165]" dest="): ) [66229,66230]"/>
  <match src="parameter [80362,80377]" dest="parameter [67184,67199]"/>
  <match src="type_name [83025,83040]" dest="type_name [22647,22662]"/>
  <match src="memory: memory [7333,7339]" dest="memory: memory [7897,7903]"/>
  <match src="identifier: temp [7748,7752]" dest="identifier: temp [8312,8316]"/>
  <match src=".: . [94522,94523]" dest=".: . [35282,35283]"/>
  <match src="type_name [73185,73192]" dest="type_name [52318,52325]"/>
  <match src="}: } [63617,63618]" dest="}: } [60940,60941]"/>
  <match src="call_expression [31156,31175]" dest="call_expression [44534,44553]"/>
  <match src=".: . [100273,100274]" dest=".: . [62630,62631]"/>
  <match src="function: function [6441,6449]" dest="function: function [7005,7013]"/>
  <match src="type_name [98199,98206]" dest="type_name [38959,38966]"/>
  <match src="string: string [29014,29020]" dest="string: string [42392,42398]"/>
  <match src="identifier: mul [88259,88262]" dest="identifier: mul [29019,29022]"/>
  <match src="]: ] [97947,97948]" dest="]: ] [38707,38708]"/>
  <match src="member_expression [96609,96624]" dest="member_expression [37369,37384]"/>
  <match src="type_name [49885,49889]" dest="type_name [14592,14596]"/>
  <match src="function: function [91681,91689]" dest="function: function [32441,32449]"/>
  <match src="[: [ [96624,96625]" dest="[: [ [37384,37385]"/>
  <match src="/=: /= [34084,34086]" dest="/=: /= [47462,47464]"/>
  <match src="(: ( [88677,88678]" dest="(: ( [29437,29438]"/>
  <match src="return_type_definition [3267,3284]" dest="return_type_definition [3831,3848]"/>
  <match src="boolean_literal [99181,99185]" dest="boolean_literal [39941,39945]"/>
  <match src="}: } [97961,97962]" dest="}: } [38721,38722]"/>
  <match src="primitive_type [27873,27880]" dest="primitive_type [41251,41258]"/>
  <match src="=: = [94721,94722]" dest="=: = [35481,35482]"/>
  <match src="*: * [36259,36260]" dest="*: * [49637,49638]"/>
  <match src="identifier: z [36533,36534]" dest="identifier: z [49911,49912]"/>
  <match src="(: ( [89581,89582]" dest="(: ( [30341,30342]"/>
  <match src="emit: emit [77136,77140]" dest="emit: emit [66199,66203]"/>
  <match src="private: private [15934,15941]" dest="private: private [13078,13085]"/>
  <match src=",: , [30328,30329]" dest=",: , [43706,43707]"/>
  <match src="type_name [90123,90130]" dest="type_name [30883,30890]"/>
  <match src="emit: emit [84881,84885]" dest="emit: emit [69556,69560]"/>
  <match src="(: ( [61190,61191]" dest="(: ( [73117,73118]"/>
  <match src="pure: pure [39843,39847]" dest="pure: pure [13741,13745]"/>
  <match src="primitive_type [96535,96542]" dest="primitive_type [37295,37302]"/>
  <match src="(: ( [100012,100013]" dest="(: ( [62369,62370]"/>
  <match src="struct_member [82438,82469]" dest="struct_member [22060,22091]"/>
  <match src="yul_identifier [92251,92255]" dest="yul_identifier [33011,33015]"/>
  <match src="): ) [6317,6318]" dest="): ) [6881,6882]"/>
  <match src="call_argument [78308,78339]" dest="call_argument [71866,71873]"/>
  <match src="type_name [97051,97058]" dest="type_name [37811,37818]"/>
  <match src="{: { [86745,86746]" dest="{: { [27505,27506]"/>
  <match src="member_expression [89903,90026]" dest="member_expression [30663,30786]"/>
  <match src="visibility [93181,93189]" dest="visibility [33941,33949]"/>
  <match src="number_literal: 1 [33454,33455]" dest="number_literal: 1 [46832,46833]"/>
  <match src="bytes32: bytes32 [32083,32090]" dest="bytes32: bytes32 [45461,45468]"/>
  <match src="state_mutability [34740,34744]" dest="state_mutability [48118,48122]"/>
  <match src=",: , [96566,96567]" dest=",: , [37326,37327]"/>
  <match src="type_name [43908,43915]" dest="type_name [26012,26019]"/>
  <match src="assignment_expression [98051,98138]" dest="assignment_expression [38811,38898]"/>
  <match src="parameter [16510,16524]" dest="parameter [53767,53781]"/>
  <match src="): ) [98957,98958]" dest="): ) [39717,39718]"/>
  <match src="type_name [82906,82939]" dest="type_name [22528,22561]"/>
  <match src="event_paramater [75661,75674]" dest="event_paramater [55557,55570]"/>
  <match src="identifier: amount1 [51287,51294]" dest="identifier: amount1 [15994,16001]"/>
  <match src=",: , [75823,75824]" dest=",: , [64396,64397]"/>
  <match src="identifier: value [6771,6776]" dest="identifier: value [7335,7340]"/>
  <match src="identifier: require [19773,19780]" dest="identifier: require [58304,58311]"/>
  <match src="visibility [60423,60430]" dest="visibility [55080,55087]"/>
  <match src="call_expression [8510,8564]" dest="call_expression [9074,9128]"/>
  <match src="identifier: self [9020,9024]" dest="identifier: self [9584,9588]"/>
  <match src=",: , [85204,85205]" dest=",: , [69879,69880]"/>
  <match src="primitive_type [60461,60468]" dest="primitive_type [70891,70898]"/>
  <match src="(: ( [75539,75540]" dest="(: ( [63881,63882]"/>
  <match src="state_mutability [87066,87070]" dest="state_mutability [27826,27830]"/>
  <match src="primitive_type [50110,50114]" dest="primitive_type [14817,14821]"/>
  <match src="identifier: i [90666,90667]" dest="identifier: i [31426,31427]"/>
  <match src="=: = [94460,94461]" dest="=: = [35220,35221]"/>
  <match src=",: , [13078,13079]" dest=",: , [18016,18017]"/>
  <match src="uint256: uint256 [47940,47947]" dest="uint256: uint256 [51073,51080]"/>
  <match src="primitive_type [50374,50381]" dest="primitive_type [15081,15088]"/>
  <match src="private: private [15900,15907]" dest="private: private [13733,13740]"/>
  <match src="identifier: COMMA [27601,27606]" dest="identifier: COMMA [40979,40984]"/>
  <match src="primitive_type [32018,32022]" dest="primitive_type [45396,45400]"/>
  <match src="type_name [82170,82177]" dest="type_name [21792,21799]"/>
  <match src="address: address [98790,98797]" dest="address: address [39550,39557]"/>
  <match src="memory: memory [8283,8289]" dest="memory: memory [8847,8853]"/>
  <match src="identifier: _state [97090,97096]" dest="identifier: _state [37850,37856]"/>
  <match src="uint112: uint112 [50925,50932]" dest="uint112: uint112 [15632,15639]"/>
  <match src=",: , [22113,22114]" dest=",: , [58163,58164]"/>
  <match src="uint8: uint8 [36017,36022]" dest="uint8: uint8 [49395,49400]"/>
  <match src="primitive_type [27541,27547]" dest="primitive_type [40919,40925]"/>
  <match src="identifier: spender [96712,96719]" dest="identifier: spender [37472,37479]"/>
  <match src="call_expression [7376,7393]" dest="call_expression [7940,7957]"/>
  <match src="string [79020,79047]" dest="string [53567,53590]"/>
  <match src="type_name [66107,66114]" dest="type_name [59835,59842]"/>
  <match src="primitive_type [83014,83021]" dest="primitive_type [22636,22643]"/>
  <match src="member_expression [95333,95347]" dest="member_expression [36093,36107]"/>
  <match src="string_literal [22498,22536]" dest="string_literal [57225,57242]"/>
  <match src="}: } [31982,31983]" dest="}: } [45360,45361]"/>
  <match src="type_name [50346,50350]" dest="type_name [15053,15057]"/>
  <match src="uint256: uint256 [12384,12391]" dest="uint256: uint256 [17322,17329]"/>
  <match src="type_name [42183,42190]" dest="type_name [24287,24294]"/>
  <match src="type_name [50138,50145]" dest="type_name [14845,14852]"/>
  <match src="primitive_type [13080,13087]" dest="primitive_type [18018,18025]"/>
  <match src="function_definition [94863,95100]" dest="function_definition [35623,35860]"/>
  <match src="if_statement [33395,33688]" dest="if_statement [46773,47066]"/>
  <match src="array_access [96415,96437]" dest="array_access [37175,37197]"/>
  <match src="type_name [82774,82781]" dest="type_name [22396,22403]"/>
  <match src="variable_declaration_statement [62508,62550]" dest="variable_declaration_statement [59941,59985]"/>
  <match src="parameter [1689,1696]" dest="parameter [2253,2260]"/>
  <match src="primitive_type [87804,87811]" dest="primitive_type [28564,28571]"/>
  <match src="primitive_type [60783,60790]" dest="primitive_type [70943,70950]"/>
  <match src="user_defined_type [8680,8684]" dest="user_defined_type [9244,9248]"/>
  <match src="identifier: encodePacked [32275,32287]" dest="identifier: encodePacked [45653,45665]"/>
  <match src="identifier: b [8121,8122]" dest="identifier: b [8685,8686]"/>
  <match src=":: : [7194,7195]" dest=":: : [7758,7759]"/>
  <match src="=: = [41835,41836]" dest="=: = [23939,23940]"/>
  <match src="identifier: outstandingCouponsForEpoch [97298,97324]" dest="identifier: outstandingCouponsForEpoch [38058,38084]"/>
  <match src=",: , [768,769]" dest=",: , [1332,1333]"/>
  <match src="return_type_definition [43277,43294]" dest="return_type_definition [25381,25398]"/>
  <match src="assignment_expression [35517,35561]" dest="assignment_expression [48895,48939]"/>
  <match src="}: } [7585,7586]" dest="}: } [8149,8150]"/>
  <match src="type_name [82853,82860]" dest="type_name [22475,22482]"/>
  <match src="type_name [87178,87185]" dest="type_name [27938,27945]"/>
  <match src="function_definition [90681,90800]" dest="function_definition [31441,31560]"/>
  <match src="inheritance_specifier [99848,99855]" dest="inheritance_specifier [62205,62212]"/>
  <match src="return_type_definition [87478,87495]" dest="return_type_definition [28238,28255]"/>
  <match src="uint256: uint256 [82006,82013]" dest="uint256: uint256 [21628,21635]"/>
  <match src="identifier: require [53708,53715]" dest="identifier: decrementBalanceOf [65648,65666]"/>
  <match src="identifier: accounts [96422,96430]" dest="identifier: accounts [37182,37190]"/>
  <match src="]: ] [98078,98079]" dest="]: ] [38838,38839]"/>
  <match src=".: . [91261,91262]" dest=".: . [32021,32022]"/>
  <match src="(: ( [76986,76987]" dest="(: ( [66134,66135]"/>
  <match src="boolean_literal [93354,93359]" dest="boolean_literal [34114,34119]"/>
  <match src="expression_statement [33301,33305]" dest="expression_statement [46679,46683]"/>
  <match src="comment: // ============ Static Functions ============ [5778,5823]" dest="comment: // ============ Static Functions ============ [6342,6387]"/>
  <match src="type_name [75676,75683]" dest="type_name [74678,74685]"/>
  <match src="uint: uint [51315,51319]" dest="uint: uint [16022,16026]"/>
  <match src="identifier: redeemable [94075,94085]" dest="identifier: redeemable [34835,34845]"/>
  <match src="comment: // put the input bytes into the result [32929,32967]" dest="comment: // put the input bytes into the result [46307,46345]"/>
  <match src="primitive_type [86078,86085]" dest="primitive_type [26838,26845]"/>
  <match src="identifier: Permission [99834,99844]" dest="identifier: Permission [62191,62201]"/>
  <match src="visibility [5849,5857]" dest="visibility [6413,6421]"/>
  <match src="identifier: amount0 [50351,50358]" dest="identifier: amount0 [15058,15065]"/>
  <match src="event_paramater [75580,75593]" dest="event_paramater [63922,63935]"/>
  <match src="identifier: b [7465,7466]" dest="identifier: b [8029,8030]"/>
  <match src="primitive_type [87487,87494]" dest="primitive_type [28247,28254]"/>
  <match src="identifier: coupons [82202,82209]" dest="identifier: coupons [21824,21831]"/>
  <match src="identifier: recipient [19861,19870]" dest="identifier: recipient [58400,58409]"/>
  <match src="primitive_type [34007,34014]" dest="primitive_type [47385,47392]"/>
  <match src="call_expression [93649,93690]" dest="call_expression [34409,34450]"/>
  <match src="parameter [51332,51347]" dest="parameter [16039,16054]"/>
  <match src="member_expression [96672,96687]" dest="member_expression [37432,37447]"/>
  <match src="(: ( [86432,86433]" dest="(: ( [27192,27193]"/>
  <match src=".: . [93482,93483]" dest=".: . [34242,34243]"/>
  <match src="identifier: i [33148,33149]" dest="identifier: i [46526,46527]"/>
  <match src="returns: returns [51021,51028]" dest="returns: returns [15728,15735]"/>
  <match src="primitive_type [75467,75474]" dest="primitive_type [63980,63987]"/>
  <match src="parameter [30100,30116]" dest="parameter [43478,43494]"/>
  <match src="number_literal: 2 [35307,35308]" dest="number_literal: 2 [48685,48686]"/>
  <match src="}: } [87034,87035]" dest="}: } [27794,27795]"/>
  <match src="call_argument [6603,6614]" dest="call_argument [7167,7178]"/>
  <match src="call_argument [100026,100068]" dest="call_argument [62383,62425]"/>
  <match src="address: address [73022,73029]" dest="address: address [55598,55605]"/>
  <match src=":=: := [92242,92244]" dest=":=: := [33002,33004]"/>
  <match src="identifier: msg [76071,76074]" dest="identifier: msg [65088,65091]"/>
  <match src="member_expression [76124,76134]" dest="member_expression [64681,64691]"/>
  <match src="block_statement [48258,48452]" dest="block_statement [58722,58840]"/>
  <match src="): ) [7941,7942]" dest="): ) [8505,8506]"/>
  <match src="): ) [22036,22037]" dest="): ) [58059,58060]"/>
  <match src="identifier: sender [13457,13463]" dest="identifier: sender [18395,18401]"/>
  <match src="[: [ [82123,82124]" dest="[: [ [21745,21746]"/>
  <match src="type_name [3399,3406]" dest="type_name [3963,3970]"/>
  <match src="): ) [75615,75616]" dest="): ) [63960,63961]"/>
  <match src="function_definition [97219,97578]" dest="function_definition [37979,38338]"/>
  <match src="returns: returns [88594,88601]" dest="returns: returns [29354,29361]"/>
  <match src="function_body [43550,43591]" dest="function_body [25654,25695]"/>
  <match src="array_access [95893,95917]" dest="array_access [36653,36677]"/>
  <match src="): ) [97884,97885]" dest="): ) [38644,38645]"/>
  <match src="call_argument [77827,77837]" dest="call_argument [65741,65751]"/>
  <match src="type_name [27541,27547]" dest="type_name [40919,40925]"/>
  <match src="type_name [32976,32981]" dest="type_name [46354,46359]"/>
  <match src="identifier: sub [89932,89935]" dest="identifier: sub [30692,30695]"/>
  <match src="internal: internal [781,789]" dest="internal: internal [1345,1353]"/>
  <match src="}: } [36579,36580]" dest="}: } [49957,49958]"/>
  <match src="type_name [95157,95164]" dest="type_name [35917,35924]"/>
  <match src="address: address [13962,13969]" dest="address: address [18900,18907]"/>
  <match src="call_expression [76883,76896]" dest="call_expression [65045,65058]"/>
  <match src="type_name [8625,8629]" dest="type_name [9189,9193]"/>
  <match src=",: , [78294,78295]" dest=",: , [71336,71337]"/>
  <match src="call_argument [28518,28522]" dest="call_argument [41896,41900]"/>
  <match src="identifier: amount [94566,94572]" dest="identifier: amount [35326,35332]"/>
  <match src="external: external [49737,49745]" dest="external: external [14444,14452]"/>
  <match src="call_expression [93788,93819]" dest="call_expression [34548,34579]"/>
  <match src="parameter [93876,93896]" dest="parameter [34636,34656]"/>
  <match src="&quot;: &quot; [22000,22001]" dest="&quot;: &quot; [58015,58016]"/>
  <match src="member_expression [97527,97540]" dest="member_expression [38287,38300]"/>
  <match src="identifier: D256 [6730,6734]" dest="identifier: D256 [7294,7298]"/>
  <match src="internal: internal [95874,95882]" dest="internal: internal [36634,36642]"/>
  <match src="identifier: mul [7058,7061]" dest="identifier: mul [7622,7625]"/>
  <match src="type_name [75467,75474]" dest="type_name [63980,63987]"/>
  <match src="primitive_type [32243,32249]" dest="primitive_type [45621,45627]"/>
  <match src="parameter [11995,12009]" dest="parameter [16933,16947]"/>
  <match src="primitive_type [16059,16066]" dest="primitive_type [11620,11627]"/>
  <match src="type_name [50943,50949]" dest="type_name [15650,15656]"/>
  <match src="call_expression [410,456]" dest="call_expression [974,1020]"/>
  <match src="identifier: State [101290,101295]" dest="identifier: State [74474,74479]"/>
  <match src="call_expression [6340,6379]" dest="call_expression [6904,6943]"/>
  <match src="function: function [46950,46958]" dest="function: function [19648,19656]"/>
  <match src="visibility [92125,92131]" dest="visibility [32885,32891]"/>
  <match src="(: ( [87836,87837]" dest="(: ( [28596,28597]"/>
  <match src="emit: emit [78782,78786]" dest="emit: emit [72684,72688]"/>
  <match src="(: ( [89621,89622]" dest="(: ( [30381,30382]"/>
  <match src="call_expression [97463,97517]" dest="call_expression [38223,38277]"/>
  <match src="constant: constant [27440,27448]" dest="constant: constant [40818,40826]"/>
  <match src="type_name [43541,43548]" dest="type_name [25645,25652]"/>
  <match src="contract_body [60372,64328]" dest="contract_body [59577,61551]"/>
  <match src="identifier: spender [86838,86845]" dest="identifier: spender [27598,27605]"/>
  <match src="(: ( [88177,88178]" dest="(: ( [28937,28938]"/>
  <match src="identifier: reserve [64103,64110]" dest="identifier: couponPremium [56773,56786]"/>
  <match src="number_literal: 90 [41423,41425]" dest="number_literal: 90 [23527,23529]"/>
  <match src="(: ( [42867,42868]" dest="(: ( [24971,24972]"/>
  <match src="visibility [8247,8255]" dest="visibility [8811,8819]"/>
  <match src="expression_statement [35214,35221]" dest="expression_statement [48592,48599]"/>
  <match src="): ) [87679,87680]" dest="): ) [28439,28440]"/>
  <match src="parameter [93165,93179]" dest="parameter [33925,33939]"/>
  <match src="identifier: balanceCheck [77790,77802]" dest="identifier: balanceCheck [51750,51762]"/>
  <match src="identifier: Provider [82535,82543]" dest="identifier: Provider [22157,22165]"/>
  <match src="(: ( [98922,98923]" dest="(: ( [39682,39683]"/>
  <match src="type_name [7431,7435]" dest="type_name [7995,7999]"/>
  <match src="function: function [51396,51404]" dest="function: function [16103,16111]"/>
  <match src="identifier: IDollar [82554,82561]" dest="identifier: IDollar [22176,22183]"/>
  <match src="call_argument [28549,28554]" dest="call_argument [41927,41932]"/>
  <match src="identifier: c [391,392]" dest="identifier: c [955,956]"/>
  <match src="!=: != [33409,33411]" dest="!=: != [46787,46789]"/>
  <match src="call_expression [97152,97206]" dest="call_expression [37912,37966]"/>
  <match src="): ) [88398,88399]" dest="): ) [29158,29159]"/>
  <match src="}: } [93984,93985]" dest="}: } [34744,34745]"/>
  <match src="!: ! [30189,30190]" dest="!: ! [43567,43568]"/>
  <match src="]: ] [95512,95513]" dest="]: ] [36272,36273]"/>
  <match src="): ) [96961,96962]" dest="): ) [37721,37722]"/>
  <match src="type_name [1981,1988]" dest="type_name [2545,2552]"/>
  <match src="return_type_definition [49969,49986]" dest="return_type_definition [14676,14693]"/>
  <match src="type_name [93037,93044]" dest="type_name [33797,33804]"/>
  <match src="returns: returns [86316,86323]" dest="returns: returns [27076,27083]"/>
  <match src="call_argument [77742,77778]" dest="call_argument [71350,71367]"/>
  <match src="binary_expression [10160,10177]" dest="binary_expression [10724,10741]"/>
  <match src="primitive_type [75294,75301]" dest="primitive_type [63766,63773]"/>
  <match src=".: . [93498,93499]" dest=".: . [34258,34259]"/>
  <match src="}: } [88305,88306]" dest="}: } [29065,29066]"/>
  <match src="primitive_type [13114,13118]" dest="primitive_type [18052,18056]"/>
  <match src="parameter [51030,51034]" dest="parameter [15737,15741]"/>
  <match src="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      * - Subtraction cannot overflow.      */ [488,741]" dest="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      * - Subtraction cannot overflow.      */ [1052,1305]"/>
  <match src="uint256: uint256 [95454,95461]" dest="uint256: uint256 [36214,36221]"/>
  <match src="identifier: c [1383,1384]" dest="identifier: c [1947,1948]"/>
  <match src="primitive_type [23081,23088]" dest="primitive_type [11822,11829]"/>
  <match src="identifier: to [51181,51183]" dest="identifier: to [15888,15890]"/>
  <match src=".: . [77513,77514]" dest=".: . [66016,66017]"/>
  <match src="type_cast_expression [41636,41687]" dest="type_cast_expression [23740,23791]"/>
  <match src="(: ( [50041,50042]" dest="(: ( [14748,14749]"/>
  <match src="(: ( [28383,28384]" dest="(: ( [41761,41762]"/>
  <match src="number_literal: 20 [35218,35220]" dest="number_literal: 20 [48596,48598]"/>
  <match src="[: [ [88527,88528]" dest="[: [ [29287,29288]"/>
  <match src="address: address [59665,59672]" dest="address: address [71177,71184]"/>
  <match src="function: function [86941,86949]" dest="function: function [27701,27709]"/>
  <match src="identifier: epoch [95649,95654]" dest="identifier: epoch [36409,36414]"/>
  <match src="primitive_type [50042,50049]" dest="primitive_type [14749,14756]"/>
  <match src=".: . [62478,62479]" dest=".: . [13338,13339]"/>
  <match src="primitive_type [13449,13456]" dest="primitive_type [18387,18394]"/>
  <match src="visibility [85121,85128]" dest="visibility [69796,69803]"/>
  <match src="external: external [51452,51460]" dest="external: external [16159,16167]"/>
  <match src="binary_expression [45895,45913]" dest="binary_expression [57166,57193]"/>
  <match src="public: public [88582,88588]" dest="public: public [29342,29348]"/>
  <match src="}: } [29446,29447]" dest="}: } [42824,42825]"/>
  <match src="return_type_definition [93322,93336]" dest="return_type_definition [34082,34096]"/>
  <match src="primitive_type [50254,50261]" dest="primitive_type [14961,14968]"/>
  <match src="primitive_type [81821,81828]" dest="primitive_type [21443,21450]"/>
  <match src="uint256: uint256 [43651,43658]" dest="uint256: uint256 [25755,25762]"/>
  <match src="call_argument [35900,35902]" dest="call_argument [49278,49280]"/>
  <match src="identifier: b [399,400]" dest="identifier: b [963,964]"/>
  <match src="-: - [48253,48254]" dest="-: - [58717,58718]"/>
  <match src="): ) [77950,77951]" dest="): ) [64861,64862]"/>
  <match src="): ) [47954,47955]" dest="): ) [51087,51088]"/>
  <match src="primitive_type [51282,51286]" dest="primitive_type [15989,15993]"/>
  <match src="primitive_type [3985,3992]" dest="primitive_type [4549,4556]"/>
  <match src="uint256: uint256 [34798,34805]" dest="uint256: uint256 [48176,48183]"/>
  <match src="&lt;: &lt; [89477,89478]" dest="&lt;: &lt; [30237,30238]"/>
  <match src="call_expression [30991,31015]" dest="call_expression [44369,44393]"/>
  <match src="member_expression [95635,95663]" dest="member_expression [36395,36423]"/>
  <match src=".: . [89984,89985]" dest=".: . [30744,30745]"/>
  <match src=".: . [89466,89467]" dest=".: . [30226,30227]"/>
  <match src="=: = [42302,42303]" dest="=: = [24406,24407]"/>
  <match src="parameter [51238,51248]" dest="parameter [15945,15955]"/>
  <match src="function_body [28370,28786]" dest="function_body [41748,42164]"/>
  <match src="primitive_type [11578,11585]" dest="primitive_type [16516,16523]"/>
  <match src="identifier: allowance [49614,49623]" dest="identifier: allowance [14321,14330]"/>
  <match src="identifier: Account [100313,100320]" dest="identifier: Account [62670,62677]"/>
  <match src="): ) [34811,34812]" dest="): ) [48189,48190]"/>
  <match src="expression_statement [20036,20092]" dest="expression_statement [58579,58631]"/>
  <match src="identifier: lessPhantom [77729,77740]" dest="identifier: candidate [72663,72672]"/>
  <match src="pure: pure [5862,5866]" dest="pure: pure [6426,6430]"/>
  <match src="--: -- [34464,34466]" dest="--: -- [47842,47844]"/>
  <match src=".: . [89827,89828]" dest=".: . [30587,30588]"/>
  <match src="parameter [23081,23095]" dest="parameter [11822,11836]"/>
  <match src="primitive_type [47027,47034]" dest="primitive_type [19725,19732]"/>
  <match src="identifier: LPAREN [32446,32452]" dest="identifier: LPAREN [45824,45830]"/>
  <match src="=: = [27745,27746]" dest="=: = [41123,41124]"/>
  <match src="): ) [90080,90081]" dest="): ) [30840,30841]"/>
  <match src="call_argument [9439,9443]" dest="call_argument [10003,10007]"/>
  <match src="returns: returns [87693,87700]" dest="returns: returns [28453,28460]"/>
  <match src="call_argument [100035,100042]" dest="call_argument [62392,62399]"/>
  <match src="yul_function_call [33580,33602]" dest="yul_function_call [46958,46980]"/>
  <match src="identifier: couponAllowances [96632,96648]" dest="identifier: couponAllowances [37392,37408]"/>
  <match src="function_definition [58940,58988]" dest="function_definition [20532,20580]"/>
  <match src="function: function [43101,43109]" dest="function: function [25205,25213]"/>
  <match src="): ) [50968,50969]" dest="): ) [15675,15676]"/>
  <match src="parameter [95804,95819]" dest="parameter [36564,36579]"/>
  <match src="function_definition [4604,4767]" dest="function_definition [5168,5331]"/>
  <match src="array_access [98446,98474]" dest="array_access [39206,39234]"/>
  <match src="function: function [9179,9187]" dest="function: function [9743,9751]"/>
  <match src="array_access [95893,95932]" dest="array_access [36653,36692]"/>
  <match src="): ) [79142,79143]" dest="): ) [53510,53511]"/>
  <match src="state_mutability [790,794]" dest="state_mutability [1354,1358]"/>
  <match src="function: function [90806,90814]" dest="function: function [31566,31574]"/>
  <match src="returns: returns [93081,93088]" dest="returns: returns [33841,33848]"/>
  <match src="identifier: lockedUntil [98875,98886]" dest="identifier: lockedUntil [39635,39646]"/>
  <match src="): ) [11704,11705]" dest="): ) [16642,16643]"/>
  <match src="return: return [33738,33744]" dest="return: return [47116,47122]"/>
  <match src="type_name [75235,75242]" dest="type_name [63704,63711]"/>
  <match src="visibility [99871,99878]" dest="visibility [62228,62235]"/>
  <match src="{: { [88196,88197]" dest="{: { [28956,28957]"/>
  <match src="uint: uint [49725,49729]" dest="uint: uint [14432,14436]"/>
  <match src="bytes32: bytes32 [29517,29524]" dest="bytes32: bytes32 [42895,42902]"/>
  <match src="identifier: z [35543,35544]" dest="identifier: z [48921,48922]"/>
  <match src="comment: // 'a' - 10 [27475,27486]" dest="comment: // 'a' - 10 [40853,40864]"/>
  <match src="identifier: encodePacked [28461,28473]" dest="identifier: encodePacked [41839,41851]"/>
  <match src="string_literal [77742,77778]" dest="string_literal [71350,71367]"/>
  <match src="(: ( [30403,30404]" dest="(: ( [43781,43782]"/>
  <match src="): ) [36038,36039]" dest="): ) [49416,49417]"/>
  <match src="uint256: uint256 [97290,97297]" dest="uint256: uint256 [38050,38057]"/>
  <match src="{: { [98436,98437]" dest="{: { [39196,39197]"/>
  <match src="function_definition [93538,93697]" dest="function_definition [34298,34457]"/>
  <match src="primitive_type [98828,98835]" dest="primitive_type [39588,39595]"/>
  <match src="bool: bool [29476,29480]" dest="bool: bool [42854,42858]"/>
  <match src="type_name [8003,8007]" dest="type_name [8567,8571]"/>
  <match src="member_expression [96828,96840]" dest="member_expression [37588,37600]"/>
  <match src="return_statement [9901,9947]" dest="return_statement [10465,10511]"/>
  <match src="binary_expression [1930,1936]" dest="binary_expression [2494,2500]"/>
  <match src=",: , [31098,31099]" dest=",: , [44476,44477]"/>
  <match src="(: ( [46113,46114]" dest="(: ( [51450,51451]"/>
  <match src=",: , [7024,7025]" dest=",: , [7588,7589]"/>
  <match src="view: view [49580,49584]" dest="view: view [14287,14291]"/>
  <match src="identifier: totalStaged [87350,87361]" dest="identifier: totalStaged [28110,28121]"/>
  <match src="identifier: accounts [88502,88510]" dest="identifier: accounts [29262,29270]"/>
  <match src="type_name [86830,86837]" dest="type_name [27590,27597]"/>
  <match src=".: . [91099,91100]" dest=".: . [31859,31860]"/>
  <match src="}: } [45292,45293]" dest="}: } [51533,51534]"/>
  <match src="(: ( [76487,76488]" dest="(: ( [54353,54354]"/>
  <match src="return_type_definition [6531,6552]" dest="return_type_definition [7095,7116]"/>
  <match src="[: [ [96060,96061]" dest="[: [ [36820,36821]"/>
  <match src="address: address [51349,51356]" dest="address: address [16056,16063]"/>
  <match src="primitive_type [15890,15897]" dest="primitive_type [11549,11556]"/>
  <match src="parameter [1290,1297]" dest="parameter [1854,1861]"/>
  <match src="user_defined_type [8193,8197]" dest="user_defined_type [8757,8761]"/>
  <match src="event_paramater [50278,50290]" dest="event_paramater [14985,14997]"/>
  <match src="function_definition [51107,51153]" dest="function_definition [15814,15860]"/>
  <match src="(: ( [78360,78361]" dest="(: ( [56205,56206]"/>
  <match src="identifier: BASE [6043,6047]" dest="identifier: BASE [6607,6611]"/>
  <match src="expression_statement [7698,7721]" dest="expression_statement [8262,8285]"/>
  <match src="identifier: _state [97698,97704]" dest="identifier: _state [38458,38464]"/>
  <match src="returns: returns [43753,43760]" dest="returns: returns [25857,25864]"/>
  <match src="call_expression [89812,89843]" dest="call_expression [30572,30603]"/>
  <match src="identifier: balanceOf [78923,78932]" dest="identifier: balanceOf [53452,53461]"/>
  <match src="type_name [86815,86822]" dest="type_name [27575,27582]"/>
  <match src="number_literal: 0 [76739,76740]" dest="number_literal: 0 [64939,64940]"/>
  <match src=".: . [77165,77166]" dest=".: . [66230,66231]"/>
  <match src="identifier: Unbond [75533,75539]" dest="identifier: Bond [63877,63881]"/>
  <match src="identifier: mul [89698,89701]" dest="identifier: mul [30458,30461]"/>
  <match src="primitive_type [5650,5657]" dest="primitive_type [6214,6221]"/>
  <match src="primitive_type [86621,86628]" dest="primitive_type [27381,27388]"/>
  <match src="return: return [36560,36566]" dest="return: return [49938,49944]"/>
  <match src="user_defined_type [86980,86987]" dest="user_defined_type [27740,27747]"/>
  <match src="visibility [9498,9506]" dest="visibility [10062,10070]"/>
  <match src="): ) [86302,86303]" dest="): ) [27062,27063]"/>
  <match src="visibility [64113,64121]" dest="visibility [57965,57973]"/>
  <match src="state_mutability [42761,42765]" dest="state_mutability [24865,24869]"/>
  <match src="assignment_expression [36471,36515]" dest="assignment_expression [49849,49893]"/>
  <match src="identifier: Decimal [63050,63057]" dest="identifier: Decimal [61250,61257]"/>
  <match src="type_name [26162,26169]" dest="type_name [51286,51293]"/>
  <match src=",: , [28846,28847]" dest=",: , [42224,42225]"/>
  <match src="identifier: Getters [86036,86043]" dest="identifier: Getters [26796,26803]"/>
  <match src="^:  ^ [15,17]" dest="^:  ^ [15,17]"/>
  <match src="type_name [7868,7872]" dest="type_name [8432,8436]"/>
  <match src="): ) [30635,30636]" dest="): ) [44013,44014]"/>
  <match src="{: { [8097,8098]" dest="{: { [8661,8662]"/>
  <match src="identifier: _state [93468,93474]" dest="identifier: _state [34228,34234]"/>
  <match src="identifier: amount [70596,70602]" dest="identifier: amount [12090,12096]"/>
  <match src="bytes2: bytes2 [27541,27547]" dest="bytes2: bytes2 [40919,40925]"/>
  <match src="visibility [98629,98637]" dest="visibility [39389,39397]"/>
  <match src="function: function [94586,94594]" dest="function: function [35346,35354]"/>
  <match src="(: ( [9933,9934]" dest="(: ( [10497,10498]"/>
  <match src=".: . [95728,95729]" dest=".: . [36488,36489]"/>
  <match src="&quot;: &quot; [79020,79021]" dest="&quot;: &quot; [53567,53568]"/>
  <match src="view: view [91046,91050]" dest="view: view [31806,31810]"/>
  <match src="identifier: Decimal [61789,61796]" dest="identifier: Decimal [61496,61503]"/>
  <match src="identifier: amount [47948,47954]" dest="identifier: amount [51081,51087]"/>
  <match src="mapping: mapping [83006,83013]" dest="mapping: mapping [22628,22635]"/>
  <match src="struct_member [82088,82107]" dest="struct_member [21710,21729]"/>
  <match src=".: . [63057,63058]" dest=".: . [61257,61258]"/>
  <match src="member_expression [100292,100333]" dest="member_expression [62649,62690]"/>
  <match src="member_expression [8757,8764]" dest="member_expression [9321,9328]"/>
  <match src="comment: // reverse-for-loops with unsigned integer [34333,34375]" dest="comment: // reverse-for-loops with unsigned integer [47711,47753]"/>
  <match src="identifier: must [27935,27939]" dest="identifier: must [41313,41317]"/>
  <match src="primitive_type [1228,1235]" dest="primitive_type [1792,1799]"/>
  <match src="identifier: b [4636,4637]" dest="identifier: b [5200,5201]"/>
  <match src="identifier: that [61186,61190]" dest="identifier: that [73113,73117]"/>
  <match src="call_argument [6365,6366]" dest="call_argument [6929,6930]"/>
  <match src=".: . [88009,88010]" dest=".: . [28769,28770]"/>
  <match src="identifier: outstandingCoupons [97327,97345]" dest="identifier: outstandingCoupons [38087,38105]"/>
  <match src="primitive_type [27674,27678]" dest="primitive_type [41052,41056]"/>
  <match src="(: ( [89393,89394]" dest="(: ( [30153,30154]"/>
  <match src="visibility [73167,73175]" dest="visibility [52300,52308]"/>
  <match src="return: return [42912,42918]" dest="return: return [25016,25022]"/>
  <match src="}: } [31988,31989]" dest="}: } [45366,45367]"/>
  <match src="): ) [95581,95582]" dest="): ) [36341,36342]"/>
  <match src="function_body [42784,42830]" dest="function_body [24888,24934]"/>
  <match src=".: . [79101,79102]" dest=".: . [54056,54057]"/>
  <match src=".: . [78219,78220]" dest=".: . [71274,71275]"/>
  <match src="uint256: uint256 [70675,70682]" dest="uint256: uint256 [51582,51589]"/>
  <match src="call_argument [31166,31174]" dest="call_argument [44544,44552]"/>
  <match src=".: . [94494,94495]" dest=".: . [35254,35255]"/>
  <match src="address: address [91167,91174]" dest="address: address [31927,31934]"/>
  <match src="(: ( [33398,33399]" dest="(: ( [46776,46777]"/>
  <match src="comment: // populate the result with &quot;0x&quot; [35914,35946]" dest="comment: // populate the result with &quot;0x&quot; [49292,49324]"/>
  <match src="): ) [7719,7720]" dest="): ) [8283,8284]"/>
  <match src="identifier: stringifyTruncated [30991,31009]" dest="identifier: stringifyTruncated [44369,44387]"/>
  <match src="member_expression [95697,95711]" dest="member_expression [36457,36471]"/>
  <match src="internal: internal [2580,2588]" dest="internal: internal [3144,3152]"/>
  <match src="identifier: a [1225,1226]" dest="identifier: a [1789,1790]"/>
  <match src="parameter [45395,45411]" dest="parameter [52281,52298]"/>
  <match src="): ) [45973,45974]" dest="): ) [57251,57252]"/>
  <match src="&quot;: &quot; [17832,17833]" dest="&quot;: &quot; [65636,65637]"/>
  <match src="revert: revert [32219,32225]" dest="revert: revert [45597,45603]"/>
  <match src="member_expression [89903,89918]" dest="member_expression [30663,30678]"/>
  <match src="): ) [93689,93690]" dest="): ) [34449,34450]"/>
  <match src="primitive_type [49755,49759]" dest="primitive_type [14462,14466]"/>
  <match src="return_type_definition [90292,90309]" dest="return_type_definition [31052,31069]"/>
  <match src=",: , [7803,7804]" dest=",: , [8367,8368]"/>
  <match src="identifier: getBootstrappingPrice [42961,42982]" dest="identifier: getBootstrappingPrice [25065,25086]"/>
  <match src="call_argument [45272,45285]" dest="call_argument [51369,51382]"/>
  <match src="): ) [64143,64144]" dest="): ) [56831,56832]"/>
  <match src="parameter [7328,7339]" dest="parameter [7892,7903]"/>
  <match src="primitive_type [35013,35017]" dest="primitive_type [48391,48395]"/>
  <match src="uint256: uint256 [13080,13087]" dest="uint256: uint256 [18018,18025]"/>
  <match src="identifier: denominator [9934,9945]" dest="identifier: denominator [10498,10509]"/>
  <match src="!=: != [19871,19873]" dest="!=: != [58410,58412]"/>
  <match src="call_argument [100082,100086]" dest="call_argument [62439,62443]"/>
  <match src="identifier: fluidUntil [81864,81874]" dest="identifier: fluidUntil [21486,21496]"/>
  <match src="identifier: epoch [96018,96023]" dest="identifier: epoch [36778,36783]"/>
  <match src=".: . [96123,96124]" dest=".: . [36883,36884]"/>
  <match src="bool: bool [82478,82482]" dest="bool: bool [22100,22104]"/>
  <match src="type_name [32135,32142]" dest="type_name [45513,45520]"/>
  <match src="uint256: uint256 [95439,95446]" dest="uint256: uint256 [36199,36206]"/>
  <match src="uint256: uint256 [82774,82781]" dest="uint256: uint256 [22396,22403]"/>
  <match src="public: public [91186,91192]" dest="public: public [31946,31952]"/>
  <match src="visibility [43263,43271]" dest="visibility [25367,25375]"/>
  <match src="returns: returns [49459,49466]" dest="returns: returns [14166,14173]"/>
  <match src="type_name [82414,82421]" dest="type_name [22036,22043]"/>
  <match src="): ) [46999,47000]" dest="): ) [19697,19698]"/>
  <match src="function: function [87341,87349]" dest="function: function [28101,28109]"/>
  <match src="identifier: account [80917,80924]" dest="identifier: account [67739,67746]"/>
  <match src="uint256: uint256 [90831,90838]" dest="uint256: uint256 [31591,31598]"/>
  <match src="call_argument [55076,55101]" dest="call_argument [75157,75172]"/>
  <match src="primitive_type [94392,94399]" dest="primitive_type [35152,35159]"/>
  <match src="returns: returns [63041,63048]" dest="returns: returns [61241,61248]"/>
  <match src="function: function [9323,9331]" dest="function: function [9887,9895]"/>
  <match src="identifier: SafeMath [15770,15778]" dest="identifier: SafeMath [55045,55053]"/>
  <match src="function: function [36586,36594]" dest="function: function [49964,49972]"/>
  <match src="uint256: uint256 [73185,73192]" dest="uint256: uint256 [52318,52325]"/>
  <match src="call_expression [17668,17704]" dest="call_expression [58482,58569]"/>
  <match src="(: ( [9479,9480]" dest="(: ( [10043,10044]"/>
  <match src="identifier: approve [82397,82404]" dest="identifier: approve [22019,22026]"/>
  <match src="identifier: SafeMath [75000,75008]" dest="identifier: SafeMath [63677,63685]"/>
  <match src="bool: bool [93331,93335]" dest="bool: bool [34091,34095]"/>
  <match src="parameter [62471,62490]" dest="parameter [13331,13356]"/>
  <match src=",: , [32073,32074]" dest=",: , [45451,45452]"/>
  <match src="uint256: uint256 [88355,88362]" dest="uint256: uint256 [29115,29122]"/>
  <match src="primitive_type [4030,4037]" dest="primitive_type [4594,4601]"/>
  <match src="return: return [91902,91908]" dest="return: return [32662,32668]"/>
  <match src="+: + [33452,33453]" dest="+: + [46830,46831]"/>
  <match src="visibility [90581,90587]" dest="visibility [31341,31347]"/>
  <match src="assembly: assembly [33549,33557]" dest="assembly: assembly [46927,46935]"/>
  <match src="type_name [76556,76563]" dest="type_name [64809,64816]"/>
  <match src="(: ( [5918,5919]" dest="(: ( [6482,6483]"/>
  <match src="return: return [86640,86646]" dest="return: return [27400,27406]"/>
  <match src="uint256: uint256 [38271,38278]" dest="uint256: uint256 [58254,58261]"/>
  <match src="(: ( [76123,76124]" dest="(: ( [64680,64681]"/>
  <match src="(: ( [89293,89294]" dest="(: ( [30053,30054]"/>
  <match src="uint256: uint256 [90704,90711]" dest="uint256: uint256 [31464,31471]"/>
  <match src="address: address [49859,49866]" dest="address: address [14566,14573]"/>
  <match src="return_statement [86350,86382]" dest="return_statement [27110,27142]"/>
  <match src="expression_statement [36168,36175]" dest="expression_statement [49546,49553]"/>
  <match src="): ) [77171,77172]" dest="): ) [66236,66237]"/>
  <match src="return_type_definition [91598,91615]" dest="return_type_definition [32358,32375]"/>
  <match src="array_access [97152,97177]" dest="array_access [37912,37937]"/>
  <match src="identifier: balance [94487,94494]" dest="identifier: balance [35247,35254]"/>
  <match src="type_name [58979,58986]" dest="type_name [20571,20578]"/>
  <match src="variable_declaration [62681,62691]" dest="variable_declaration [61309,61319]"/>
  <match src="identifier: c [2016,2017]" dest="identifier: c [2580,2581]"/>
  <match src="): ) [31725,31726]" dest="): ) [45103,45104]"/>
  <match src="public: public [48128,48134]" dest="public: public [56803,56809]"/>
  <match src="): ) [29609,29610]" dest="): ) [42987,42988]"/>
  <match src="identifier: msg [77626,77629]" dest="identifier: msg [57451,57454]"/>
  <match src="function: function [86692,86700]" dest="function: function [27452,27460]"/>
  <match src="number_literal: 0 [35962,35963]" dest="number_literal: 0 [49340,49341]"/>
  <match src="call_expression [89663,89722]" dest="call_expression [30423,30482]"/>
  <match src="return_type_definition [32892,32914]" dest="return_type_definition [46270,46292]"/>
  <match src="call_argument [32332,32336]" dest="call_argument [45710,45714]"/>
  <match src="call_expression [21891,21959]" dest="call_expression [57014,57129]"/>
  <match src="address: address [75294,75301]" dest="address: address [63766,63773]"/>
  <match src="contract: contract [58821,58829]" dest="contract: contract [20413,20421]"/>
  <match src="address: address [50792,50799]" dest="address: address [15499,15506]"/>
  <match src="): ) [30617,30618]" dest="): ) [43995,43996]"/>
  <match src="&quot;: &quot; [100365,100366]" dest="&quot;: &quot; [62722,62723]"/>
  <match src="(: ( [41643,41644]" dest="(: ( [23747,23748]"/>
  <match src="address: address [60461,60468]" dest="address: address [70891,70898]"/>
  <match src="emit_statement [20101,20142]" dest="emit_statement [58850,58904]"/>
  <match src="(: ( [7619,7620]" dest="(: ( [8183,8184]"/>
  <match src=",: , [28287,28288]" dest=",: , [41665,41666]"/>
  <match src="revert: revert [30210,30216]" dest="revert: revert [43588,43594]"/>
  <match src="parameter [97846,97863]" dest="parameter [38606,38623]"/>
  <match src="): ) [93818,93819]" dest="): ) [34578,34579]"/>
  <match src="primitive_type [82966,82973]" dest="primitive_type [22588,22595]"/>
  <match src="identifier: _state [94516,94522]" dest="identifier: _state [35276,35282]"/>
  <match src="): ) [51420,51421]" dest="): ) [16127,16128]"/>
  <match src="{: { [3285,3286]" dest="{: { [3849,3850]"/>
  <match src="identifier: file [31486,31490]" dest="identifier: file [44864,44868]"/>
  <match src="return_type_definition [87968,87985]" dest="return_type_definition [28728,28745]"/>
  <match src=",: , [75578,75579]" dest=",: , [63920,63921]"/>
  <match src="memory: memory [6895,6901]" dest="memory: memory [7459,7465]"/>
  <match src="parameter [50170,50180]" dest="parameter [14877,14887]"/>
  <match src="internal: internal [96396,96404]" dest="internal: internal [37156,37164]"/>
  <match src="block_statement [27941,28221]" dest="block_statement [41319,41599]"/>
  <match src="number_literal: 1 [7573,7574]" dest="number_literal: 1 [8137,8138]"/>
  <match src="identifier: account [100035,100042]" dest="identifier: account [62392,62399]"/>
  <match src="using_directive [70035,70062]" dest="using_directive [74522,74549]"/>
  <match src="string: string [3225,3231]" dest="string: string [3789,3795]"/>
  <match src="user_defined_type [43008,43020]" dest="user_defined_type [25112,25124]"/>
  <match src="pure: pure [42761,42765]" dest="pure: pure [24865,24869]"/>
  <match src="identifier: Decimal [43008,43015]" dest="identifier: Decimal [25112,25119]"/>
  <match src="): ) [76488,76489]" dest="): ) [54354,54355]"/>
  <match src="identifier: usdcAmount [73654,73664]" dest="identifier: vote [72626,72630]"/>
  <match src="(: ( [86501,86502]" dest="(: ( [27261,27262]"/>
  <match src="parameter [16059,16066]" dest="parameter [11620,11627]"/>
  <match src="identifier: that [78220,78224]" dest="identifier: that [71275,71279]"/>
  <match src="constant: constant [27636,27644]" dest="constant: constant [41014,41022]"/>
  <match src="memory: memory [7436,7442]" dest="memory: memory [8000,8006]"/>
  <match src="function: function [49305,49313]" dest="function: function [14012,14020]"/>
  <match src=".: . [76409,76410]" dest=".: . [65546,65547]"/>
  <match src="}: } [87134,87135]" dest="}: } [27894,27895]"/>
  <match src="type_name [84720,84724]" dest="type_name [69395,69399]"/>
  <match src="uint256: uint256 [96552,96559]" dest="uint256: uint256 [37312,37319]"/>
  <match src="identifier: amount [22490,22496]" dest="identifier: amount [11687,11693]"/>
  <match src="type_name [98591,98598]" dest="type_name [39351,39358]"/>
  <match src="memory: memory [8954,8960]" dest="memory: memory [9518,9524]"/>
  <match src="user_defined_type [82878,82886]" dest="user_defined_type [22500,22508]"/>
  <match src="identifier: initialize [51476,51486]" dest="identifier: initialize [16183,16193]"/>
  <match src="user_defined_type [101555,101565]" dest="user_defined_type [63654,63664]"/>
  <match src="): ) [91810,91811]" dest="): ) [32570,32571]"/>
  <match src="identifier: D256 [8058,8062]" dest="identifier: D256 [8622,8626]"/>
  <match src="identifier: FILE [78290,78294]" dest="identifier: FILE [71332,71336]"/>
  <match src="function_definition [8373,8571]" dest="function_definition [8937,9135]"/>
  <match src="parameter [49594,49598]" dest="parameter [14301,14305]"/>
  <match src="uint256: uint256 [82088,82095]" dest="uint256: uint256 [21710,21717]"/>
  <match src="(: ( [76349,76350]" dest="(: ( [64627,64628]"/>
  <match src="identifier: spender [88906,88913]" dest="identifier: spender [29666,29673]"/>
  <match src="identifier: account [94704,94711]" dest="identifier: account [35464,35471]"/>
  <match src="{: { [82522,82523]" dest="{: { [22144,22145]"/>
  <match src="identifier: balance [95729,95736]" dest="identifier: balance [36489,36496]"/>
  <match src=",: , [81642,81643]" dest=",: , [21264,21265]"/>
  <match src="expression_statement [35001,35037]" dest="expression_statement [48379,48415]"/>
  <match src="return: return [86350,86356]" dest="return: return [27110,27116]"/>
  <match src="identifier: self [8326,8330]" dest="identifier: self [8890,8894]"/>
  <match src="call_argument [32640,32648]" dest="call_argument [46018,46026]"/>
  <match src="member_expression [95309,95323]" dest="member_expression [36069,36083]"/>
  <match src="primitive_type [34758,34763]" dest="primitive_type [48136,48141]"/>
  <match src="(: ( [96984,96985]" dest="(: ( [37744,37745]"/>
  <match src="array_access [88633,88657]" dest="array_access [29393,29417]"/>
  <match src="): ) [32336,32337]" dest="): ) [45714,45715]"/>
  <match src="external: external [12011,12019]" dest="external: external [16949,16957]"/>
  <match src="return: return [2075,2081]" dest="return: return [2639,2645]"/>
  <match src="): ) [58890,58891]" dest="): ) [20482,20483]"/>
  <match src="member_expression [90628,90665]" dest="member_expression [31388,31425]"/>
  <match src="expression_statement [100408,100410]" dest="expression_statement [62765,62767]"/>
  <match src="identifier: stringifyTruncated [32394,32412]" dest="identifier: stringifyTruncated [45772,45790]"/>
  <match src="binary_expression [88633,88679]" dest="binary_expression [29393,29439]"/>
  <match src="return_statement [10125,10134]" dest="return_statement [10689,10698]"/>
  <match src="bytes32: bytes32 [85279,85286]" dest="bytes32: bytes32 [69954,69961]"/>
  <match src="type_name [50907,50914]" dest="type_name [15614,15621]"/>
  <match src="identifier: payloadA [30769,30777]" dest="identifier: payloadA [44147,44155]"/>
  <match src="identifier: candidate [91801,91810]" dest="identifier: candidate [32561,32570]"/>
  <match src="): ) [83040,83041]" dest="): ) [22662,22663]"/>
  <match src="identifier: price [62528,62533]" dest="identifier: price [59961,59966]"/>
  <match src="type_name [76621,76628]" dest="type_name [57296,57303]"/>
  <match src="identifier: mul [7705,7708]" dest="identifier: mul [8269,8272]"/>
  <match src="primitive_type [49708,49715]" dest="primitive_type [14415,14422]"/>
  <match src="&quot;: &quot; [100120,100121]" dest="&quot;: &quot; [62477,62478]"/>
  <match src="function: function [93403,93411]" dest="function: function [34163,34171]"/>
  <match src="member_expression [85147,85185]" dest="member_expression [69822,69860]"/>
  <match src="uint256: uint256 [65882,65889]" dest="uint256: uint256 [63937,63944]"/>
  <match src="assembly_statement [33549,33642]" dest="assembly_statement [46927,47020]"/>
  <match src="call_argument [77174,77179]" dest="call_argument [66248,66253]"/>
  <match src="identifier: char [36354,36358]" dest="identifier: char [49732,49736]"/>
  <match src="identifier: reason [32413,32419]" dest="identifier: reason [45791,45797]"/>
  <match src="primitive_type [42775,42782]" dest="primitive_type [24879,24886]"/>
  <match src="parameter [94188,94208]" dest="parameter [34948,34968]"/>
  <match src="member_expression [98295,98312]" dest="member_expression [39055,39072]"/>
  <match src="state_variable_declaration [42021,42072]" dest="state_variable_declaration [24125,24176]"/>
  <match src="): ) [36514,36515]" dest="): ) [49892,49893]"/>
  <match src="primitive_type [48597,48601]" dest="primitive_type [55534,55541]"/>
  <match src="(: ( [75880,75881]" dest="(: ( [64453,64454]"/>
  <match src="primitive_type [50360,50364]" dest="primitive_type [15067,15071]"/>
  <match src="identifier: z [36497,36498]" dest="identifier: z [49875,49876]"/>
  <match src="return_type_definition [91051,91075]" dest="return_type_definition [31811,31835]"/>
  <match src="(: ( [75635,75636]" dest="(: ( [71104,71105]"/>
  <match src="state_mutability [49391,49395]" dest="state_mutability [14098,14102]"/>
  <match src="internal: internal [96922,96930]" dest="internal: internal [37682,37690]"/>
  <match src="identifier: D256 [8092,8096]" dest="identifier: D256 [8656,8660]"/>
  <match src="comment: /**      * @dev Storage slot with the address of the current implementation.      * This is the keccak-256 hash of &quot;eip1967.proxy.implementation&quot; subtracted by 1, and is      * validated in the constructor.      */ [83904,84118]" dest="comment: /**      * @dev Storage slot with the address of the current implementation.      * This is the keccak-256 hash of &quot;eip1967.proxy.implementation&quot; subtracted by 1, and is      * validated in the constructor.      */ [68579,68793]"/>
  <match src="user_defined_type [82194,82201]" dest="user_defined_type [21816,21823]"/>
  <match src="): ) [9027,9028]" dest="): ) [9591,9592]"/>
  <match src="): ) [371,372]" dest="): ) [935,936]"/>
  <match src="): ) [78946,78947]" dest="): ) [53475,53476]"/>
  <match src="comment: /*     Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [66346,66974]" dest="comment: /*     Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [61553,62181]"/>
  <match src="expression_statement [79068,79235]" dest="expression_statement [54048,54101]"/>
  <match src="return_statement [7175,7217]" dest="return_statement [7739,7781]"/>
  <match src=".: . [8342,8343]" dest=".: . [8906,8907]"/>
  <match src="{: { [9126,9127]" dest="{: { [9690,9691]"/>
  <match src="function: function [13046,13054]" dest="function: function [17984,17992]"/>
  <match src="type_name [27873,27880]" dest="type_name [41251,41258]"/>
  <match src="[: [ [35385,35386]" dest="[: [ [48763,48764]"/>
  <match src="uint256: uint256 [18996,19003]" dest="uint256: uint256 [11766,11773]"/>
  <match src="call_expression [76676,76690]" dest="call_expression [57336,57363]"/>
  <match src=",: , [96175,96176]" dest=",: , [36935,36936]"/>
  <match src="): ) [14000,14001]" dest="): ) [18938,18939]"/>
  <match src="}: } [879,880]" dest="}: } [1443,1444]"/>
  <match src="}: } [43335,43336]" dest="}: } [25439,25440]"/>
  <match src="primitive_type [33980,33987]" dest="primitive_type [47358,47365]"/>
  <match src="member_expression [96047,96087]" dest="member_expression [36807,36847]"/>
  <match src="): ) [48256,48257]" dest="): ) [58720,58721]"/>
  <match src="string [17791,17833]" dest="string [65601,65637]"/>
  <match src="returns: returns [87478,87485]" dest="returns: returns [28238,28245]"/>
  <match src=".: . [98284,98285]" dest=".: . [39044,39045]"/>
  <match src="}: } [42945,42946]" dest="}: } [25049,25050]"/>
  <match src="identifier: r [50214,50215]" dest="identifier: r [14921,14922]"/>
  <match src="variable_declaration_statement [89634,89723]" dest="variable_declaration_statement [30394,30483]"/>
  <match src=".: . [94712,94713]" dest=".: . [35472,35473]"/>
  <match src="function: function [6063,6071]" dest="function: function [6627,6635]"/>
  <match src="function_definition [84433,84462]" dest="function_definition [69108,69137]"/>
  <match src="uint256: uint256 [9791,9798]" dest="uint256: uint256 [10355,10362]"/>
  <match src="uint8: uint8 [50197,50202]" dest="uint8: uint8 [14904,14909]"/>
  <match src="primitive_type [27832,27836]" dest="primitive_type [41210,41214]"/>
  <match src="): ) [29562,29563]" dest="): ) [42940,42941]"/>
  <match src="type_name [30737,30744]" dest="type_name [44115,44122]"/>
  <match src="member_expression [78914,78932]" dest="member_expression [53443,53461]"/>
  <match src="): ) [21085,21086]" dest="): ) [51815,51816]"/>
  <match src="identifier: b [7013,7014]" dest="identifier: b [7577,7578]"/>
  <match src="identifier: one [61797,61800]" dest="identifier: one [61504,61507]"/>
  <match src="type_name [51361,51366]" dest="type_name [16068,16073]"/>
  <match src="&amp;: &amp; [36499,36500]" dest="&amp;: &amp; [49877,49878]"/>
  <match src="contract_declaration [83063,83107]" dest="contract_declaration [22685,22729]"/>
  <match src="return_statement [90320,90367]" dest="return_statement [31080,31127]"/>
  <match src="identifier: factory [50704,50711]" dest="identifier: factory [15411,15418]"/>
  <match src="call_expression [53708,53759]" dest="call_expression [65648,65718]"/>
  <match src="): ) [94774,94775]" dest="): ) [35534,35535]"/>
  <match src="primitive_type [81884,81891]" dest="primitive_type [21506,21513]"/>
  <match src="call_argument [97200,97205]" dest="call_argument [37960,37965]"/>
  <match src="(: ( [87384,87385]" dest="(: ( [28144,28145]"/>
  <match src="identifier: burn [51233,51237]" dest="identifier: burn [15940,15944]"/>
  <match src="primitive_type [75436,75443]" dest="primitive_type [55646,55653]"/>
  <match src="member_expression [94229,94254]" dest="member_expression [34989,35014]"/>
  <match src="): ) [90579,90580]" dest="): ) [31339,31340]"/>
  <match src="[: [ [91127,91128]" dest="[: [ [31887,31888]"/>
  <match src="&gt;: &gt; [91944,91945]" dest="&gt;: &gt; [32704,32705]"/>
  <match src=",: , [96550,96551]" dest=",: , [37310,37311]"/>
  <match src="type_name [75580,75587]" dest="type_name [63922,63929]"/>
  <match src="identifier: Account [88824,88831]" dest="identifier: Account [29584,29591]"/>
  <match src="string [45945,45964]" dest="string [58531,58568]"/>
  <match src="public: public [91452,91458]" dest="public: public [32212,32218]"/>
  <match src="call_argument [32271,32703]" dest="call_argument [45649,46081]"/>
  <match src="call_argument [90027,90028]" dest="call_argument [30787,30788]"/>
  <match src="type_name [49859,49866]" dest="type_name [14566,14573]"/>
  <match src="primitive_type [35967,35971]" dest="primitive_type [49345,49349]"/>
  <match src="): ) [5958,5959]" dest="): ) [6522,6523]"/>
  <match src="identifier: reason [96100,96106]" dest="identifier: reason [36860,36866]"/>
  <match src="): ) [68766,68767]" dest="): ) [60440,60441]"/>
  <match src="type_name [93165,93172]" dest="type_name [33925,33932]"/>
  <match src="function: function [5829,5837]" dest="function: function [6393,6401]"/>
  <match src="constant: constant [99879,99887]" dest="constant: constant [62236,62244]"/>
  <match src="event_paramater [75354,75377]" dest="event_paramater [63826,63849]"/>
  <match src=",: , [75593,75594]" dest=",: , [63935,63936]"/>
  <match src="state_mutability [6522,6526]" dest="state_mutability [7086,7090]"/>
  <match src="visibility [26359,26367]" dest="visibility [51089,51097]"/>
  <match src="identifier: b [10102,10103]" dest="identifier: b [10666,10667]"/>
  <match src=".: . [75884,75885]" dest=".: . [64457,64458]"/>
  <match src="array_access [97090,97110]" dest="array_access [37850,37870]"/>
  <match src="call_argument [77862,77874]" dest="call_argument [65776,65782]"/>
  <match src="parameter [42775,42782]" dest="parameter [24879,24886]"/>
  <match src="type_name [95173,95179]" dest="type_name [35933,35939]"/>
  <match src="address: address [96215,96222]" dest="address: address [36975,36982]"/>
  <match src="string_literal [99895,99907]" dest="string_literal [62252,62264]"/>
  <match src="unary_expression [31587,31592]" dest="unary_expression [44965,44970]"/>
  <match src=",: , [95365,95366]" dest=",: , [36125,36126]"/>
  <match src="primitive_type [25755,25762]" dest="primitive_type [55276,55283]"/>
  <match src="member_expression [95592,95620]" dest="member_expression [36352,36380]"/>
  <match src="member_expression [78085,78097]" dest="member_expression [72797,72809]"/>
  <match src="primitive_type [98411,98418]" dest="primitive_type [39171,39178]"/>
  <match src=".: . [96437,96438]" dest=".: . [37197,37198]"/>
  <match src="revert_statement [27955,28211]" dest="revert_statement [41333,41589]"/>
  <match src="return_type_definition [91730,91747]" dest="return_type_definition [32490,32507]"/>
  <match src="for: for [5588,5591]" dest="for: for [6152,6155]"/>
  <match src="parameter [91339,91346]" dest="parameter [32099,32106]"/>
  <match src="type_name [98896,98903]" dest="type_name [39656,39663]"/>
  <match src="(: ( [43139,43140]" dest="(: ( [25243,25244]"/>
  <match src="struct: struct [81685,81691]" dest="struct: struct [21307,21313]"/>
  <match src="primitive_type [45118,45125]" dest="primitive_type [55142,55149]"/>
  <match src="type_cast_expression [30234,30636]" dest="type_cast_expression [43612,44014]"/>
  <match src="bool: bool [31459,31463]" dest="bool: bool [44837,44841]"/>
  <match src=",: , [76416,76417]" dest=",: , [65553,65554]"/>
  <match src="variable_declaration_statement [98896,98960]" dest="variable_declaration_statement [39656,39720]"/>
  <match src="type_name [87702,87709]" dest="type_name [28462,28469]"/>
  <match src="function_body [97895,97962]" dest="function_body [38655,38722]"/>
  <match src="primitive_type [98896,98903]" dest="primitive_type [39656,39663]"/>
  <match src="user_defined_type [60364,60371]" dest="user_defined_type [59565,59576]"/>
  <match src="uint256: uint256 [35199,35206]" dest="uint256: uint256 [48577,48584]"/>
  <match src="function_body [5897,5939]" dest="function_body [6461,6503]"/>
  <match src="type_name [8058,8062]" dest="type_name [8622,8626]"/>
  <match src="binary_expression [36723,36733]" dest="binary_expression [50101,50111]"/>
  <match src="state_variable_declaration [27387,27420]" dest="state_variable_declaration [40765,40798]"/>
  <match src="parenthesized_expression [32225,32735]" dest="parenthesized_expression [45603,46113]"/>
  <match src="}: } [100634,100635]" dest="}: } [62991,62992]"/>
  <match src="identifier: candidate [92064,92073]" dest="identifier: candidate [32824,32833]"/>
  <match src="return_type_definition [63041,63070]" dest="return_type_definition [61241,61270]"/>
  <match src="byte: byte [36012,36016]" dest="byte: byte [49390,49394]"/>
  <match src="comment: /* Market */ [42166,42178]" dest="comment: /* Market */ [24270,24282]"/>
  <match src="comment: /**      * ERC20 Interface      */ [92979,93013]" dest="comment: /**      * ERC20 Interface      */ [33739,33773]"/>
  <match src="identifier: candidate [98069,98078]" dest="identifier: candidate [38829,38838]"/>
  <match src="&quot;: &quot; [77098,77099]" dest="&quot;: &quot; [65236,65237]"/>
  <match src="]: ] [95237,95238]" dest="]: ] [35997,35998]"/>
  <match src="variable_declaration [34786,34795]" dest="variable_declaration [48164,48173]"/>
  <match src="member_expression [90185,90198]" dest="member_expression [30945,30958]"/>
  <match src="call_argument [32394,32420]" dest="call_argument [45772,45798]"/>
  <match src="member_expression [89989,90008]" dest="member_expression [30749,30768]"/>
  <match src="identifier: msg [76310,76313]" dest="identifier: msg [65864,65867]"/>
  <match src="): ) [42673,42674]" dest="): ) [24777,24778]"/>
  <match src="==: == [9162,9164]" dest="==: == [9726,9728]"/>
  <match src="function: function [28792,28800]" dest="function: function [42170,42178]"/>
  <match src="string [100365,100387]" dest="string [62722,62744]"/>
  <match src="returns: returns [51194,51201]" dest="returns: returns [15901,15908]"/>
  <match src="{: { [6967,6968]" dest="{: { [7531,7532]"/>
  <match src="parameter [6540,6551]" dest="parameter [7104,7115]"/>
  <match src="primitive_type [9632,9639]" dest="primitive_type [10196,10203]"/>
  <match src="address: address [75540,75547]" dest="address: address [63882,63889]"/>
  <match src="identifier: b [9304,9305]" dest="identifier: b [9868,9869]"/>
  <match src="identifier: OpenZeppelinUpgradesAddress [79952,79979]" dest="identifier: OpenZeppelinUpgradesAddress [66774,66801]"/>
  <match src="returns: returns [42446,42453]" dest="returns: returns [24550,24557]"/>
  <match src="call_expression [47999,48021]" dest="call_expression [51108,51138]"/>
  <match src="identifier: stringify [35641,35650]" dest="identifier: stringify [49019,49028]"/>
  <match src="member_expression [96047,96075]" dest="member_expression [36807,36835]"/>
  <match src="member_expression [91499,91535]" dest="member_expression [32259,32295]"/>
  <match src="): ) [8691,8692]" dest="): ) [9255,9256]"/>
  <match src="]: ] [88983,88984]" dest="]: ] [29743,29744]"/>
  <match src="(: ( [2557,2558]" dest="(: ( [3121,3122]"/>
  <match src="parameter [89294,89301]" dest="parameter [30054,30061]"/>
  <match src="return_type_definition [51194,51218]" dest="return_type_definition [15901,15925]"/>
  <match src="primitive_type [51349,51356]" dest="primitive_type [16056,16063]"/>
  <match src="primitive_type [94614,94621]" dest="primitive_type [35374,35381]"/>
  <match src="call_expression [89812,89868]" dest="call_expression [30572,30628]"/>
  <match src="identifier: staged [81716,81722]" dest="identifier: staged [21338,21344]"/>
  <match src="identifier: coupons [95613,95620]" dest="identifier: coupons [36373,36380]"/>
  <match src="event_definition [49230,49299]" dest="event_definition [13937,14006]"/>
  <match src="identifier: encodeWithSignature [84792,84811]" dest="identifier: encodeWithSignature [69467,69486]"/>
  <match src="block_statement [10111,10144]" dest="block_statement [10675,10708]"/>
  <match src="view: view [50096,50100]" dest="view: view [14803,14807]"/>
  <match src="view: view [87790,87794]" dest="view: view [28550,28554]"/>
  <match src=".: . [100061,100062]" dest=".: . [62418,62419]"/>
  <match src="identifier: candidate [98666,98675]" dest="identifier: candidate [39426,39435]"/>
  <match src="identifier: value [7201,7206]" dest="identifier: value [7765,7770]"/>
  <match src="call_expression [31232,31251]" dest="call_expression [44610,44629]"/>
  <match src="{: { [33415,33416]" dest="{: { [46793,46794]"/>
  <match src="parameter [9368,9381]" dest="parameter [9932,9945]"/>
  <match src="identifier: D256 [7148,7152]" dest="identifier: D256 [7712,7716]"/>
  <match src="uint256: uint256 [66056,66063]" dest="uint256: uint256 [59797,59804]"/>
  <match src="inheritance_specifier [101297,101307]" dest="inheritance_specifier [70730,70740]"/>
  <match src="call_expression [76054,76089]" dest="call_expression [65069,65108]"/>
  <match src="call_argument [9026,9027]" dest="call_argument [9590,9591]"/>
  <match src="internal: internal [9097,9105]" dest="internal: internal [9661,9669]"/>
  <match src="&quot;: &quot; [100100,100101]" dest="&quot;: &quot; [62457,62458]"/>
  <match src="[: [ [94477,94478]" dest="[: [ [35237,35238]"/>
  <match src="&quot;: &quot; [20548,20549]" dest="&quot;: &quot; [53721,53722]"/>
  <match src="number_literal: 0 [91946,91947]" dest="number_literal: 0 [32706,32707]"/>
  <match src="member_expression [86647,86679]" dest="member_expression [27407,27439]"/>
  <match src="expression_statement [95697,95757]" dest="expression_statement [36457,36517]"/>
  <match src="public: public [86959,86965]" dest="public: public [27719,27725]"/>
  <match src="comment: // return ASCII digit (0-9) [36683,36710]" dest="comment: // return ASCII digit (0-9) [50061,50088]"/>
  <match src="type_name [8949,8953]" dest="type_name [9513,9517]"/>
  <match src="(: ( [89575,89576]" dest="(: ( [30335,30336]"/>
  <match src="identifier: payloadC [30821,30829]" dest="identifier: payloadC [44199,44207]"/>
  <match src="binary_expression [35441,35447]" dest="binary_expression [48819,48825]"/>
  <match src="return: return [87506,87512]" dest="return: return [28266,28272]"/>
  <match src="type_name [81802,81829]" dest="type_name [21424,21451]"/>
  <match src=".: . [94066,94067]" dest=".: . [34826,34827]"/>
  <match src="member_expression [94060,94074]" dest="member_expression [34820,34834]"/>
  <match src="call_expression [9908,9929]" dest="call_expression [10472,10493]"/>
  <match src="): ) [49530,49531]" dest="): ) [14237,14238]"/>
  <match src="member_expression [94257,94286]" dest="member_expression [35017,35046]"/>
  <match src="library: library [61,68]" dest="library: library [625,632]"/>
  <match src="): ) [86743,86744]" dest="): ) [27503,27504]"/>
  <match src="identifier: balance [94523,94530]" dest="identifier: balance [35283,35290]"/>
  <match src="inheritance_specifier [101290,101295]" dest="inheritance_specifier [74474,74479]"/>
  <match src="): ) [8643,8644]" dest="): ) [9207,9208]"/>
  <match src="&quot;: &quot; [2639,2640]" dest="&quot;: &quot; [3203,3204]"/>
  <match src="bool: bool [49915,49919]" dest="bool: bool [14622,14626]"/>
  <match src="(: ( [31317,31318]" dest="(: ( [44695,44696]"/>
  <match src="function_body [43029,43095]" dest="function_body [25133,25199]"/>
  <match src="}: } [82217,82218]" dest="}: } [21839,21840]"/>
  <match src="): ) [90308,90309]" dest="): ) [31068,31069]"/>
  <match src="}: } [91142,91143]" dest="}: } [31902,31903]"/>
  <match src="member_expression [95531,95563]" dest="member_expression [36291,36323]"/>
  <match src="{: { [34776,34777]" dest="{: { [48154,48155]"/>
  <match src="): ) [75449,75450]" dest="): ) [74692,74693]"/>
  <match src="parameter [98411,98425]" dest="parameter [39171,39185]"/>
  <match src="primitive_type [50346,50350]" dest="primitive_type [15053,15057]"/>
  <match src="{: { [68577,68578]" dest="{: { [60311,60312]"/>
  <match src="): ) [93524,93525]" dest="): ) [34284,34285]"/>
  <match src="address: address [51238,51245]" dest="address: address [15945,15952]"/>
  <match src="type_name [12344,12351]" dest="type_name [17282,17289]"/>
  <match src="uint256: uint256 [35287,35294]" dest="uint256: uint256 [48665,48672]"/>
  <match src="[: [ [95925,95926]" dest="[: [ [36685,36686]"/>
  <match src="): ) [87288,87289]" dest="): ) [28048,28049]"/>
  <match src="): ) [90136,90137]" dest="): ) [30896,30897]"/>
  <match src="identifier: implementation [100599,100613]" dest="identifier: implementation [62956,62970]"/>
  <match src="type_name [97663,97670]" dest="type_name [38423,38430]"/>
  <match src=".: . [86776,86777]" dest=".: . [27536,27537]"/>
  <match src=".: . [95495,95496]" dest=".: . [36255,36256]"/>
  <match src="update_expression [33301,33304]" dest="update_expression [46679,46682]"/>
  <match src="): ) [6269,6270]" dest="): ) [6833,6834]"/>
  <match src="identifier: currentLock [98836,98847]" dest="identifier: currentLock [39596,39607]"/>
  <match src="visibility [42533,42541]" dest="visibility [24637,24645]"/>
  <match src="expression_statement [36000,36040]" dest="expression_statement [49378,49418]"/>
  <match src="identifier: to [49881,49883]" dest="identifier: to [14588,14590]"/>
  <match src="): ) [89200,89201]" dest="): ) [29960,29961]"/>
  <match src="): ) [25278,25279]" dest="): ) [72356,72357]"/>
  <match src="expression_statement [78888,79058]" dest="expression_statement [53417,53601]"/>
  <match src="identifier: must [27837,27841]" dest="identifier: must [41215,41219]"/>
  <match src="(: ( [63049,63050]" dest="(: ( [61249,61250]"/>
  <match src="function: function [98364,98372]" dest="function: function [39124,39132]"/>
  <match src="=: = [35011,35012]" dest="=: = [48389,48390]"/>
  <match src="function: function [87657,87665]" dest="function: function [28417,28425]"/>
  <match src="identifier: amount [46930,46936]" dest="identifier: amount [19628,19634]"/>
  <match src="&quot;: &quot; [19841,19842]" dest="&quot;: &quot; [58380,58381]"/>
  <match src="variable_declaration_statement [7657,7671]" dest="variable_declaration_statement [8221,8235]"/>
  <match src="member_expression [96415,96430]" dest="member_expression [37175,37190]"/>
  <match src="): ) [76823,76824]" dest="): ) [65000,65001]"/>
  <match src="identifier: allowance [86805,86814]" dest="identifier: allowance [27565,27574]"/>
  <match src=",: , [93681,93682]" dest=",: , [34441,34442]"/>
  <match src="if: if [88174,88176]" dest="if: if [28934,28936]"/>
  <match src="uint256: uint256 [42893,42900]" dest="uint256: uint256 [24997,25004]"/>
  <match src="type_name [11729,11736]" dest="type_name [16667,16674]"/>
  <match src="identifier: bstr [34659,34663]" dest="identifier: bstr [48037,48041]"/>
  <match src="parameter [88565,88580]" dest="parameter [29325,29340]"/>
  <match src="return_type_definition [91877,91891]" dest="return_type_definition [32637,32651]"/>
  <match src="type_name [34290,34297]" dest="type_name [47668,47675]"/>
  <match src="{: { [97895,97896]" dest="{: { [38655,38656]"/>
  <match src="type_name [43396,43408]" dest="type_name [25500,25512]"/>
  <match src="function_definition [91960,92093]" dest="function_definition [32720,32853]"/>
  <match src="expression_statement [48272,48442]" dest="expression_statement [58736,58830]"/>
  <match src="ternary_expression [76755,76828]" dest="ternary_expression [64922,65040]"/>
  <match src="assignment_expression [34520,34564]" dest="assignment_expression [47898,47942]"/>
  <match src="parameter [50206,50215]" dest="parameter [14913,14922]"/>
  <match src=",: , [8183,8184]" dest=",: , [8747,8748]"/>
  <match src="parameter [6236,6245]" dest="parameter [6800,6809]"/>
  <match src="parameter [64136,64143]" dest="parameter [56824,56831]"/>
  <match src="identifier: pair [73648,73652]" dest="identifier: candidate [72615,72624]"/>
  <match src=".: . [94791,94792]" dest=".: . [35551,35552]"/>
  <match src="): ) [76339,76340]" dest="): ) [64617,64618]"/>
  <match src="visibility [51124,51132]" dest="visibility [15831,15839]"/>
  <match src=",: , [50489,50490]" dest=",: , [15196,15197]"/>
  <match src=".: . [73715,73716]" dest=".: . [54260,54261]"/>
  <match src=".: . [98474,98475]" dest=".: . [39234,39235]"/>
  <match src="identifier: epoch [90273,90278]" dest="identifier: epoch [31033,31038]"/>
  <match src="emit: emit [20101,20105]" dest="emit: emit [58850,58854]"/>
  <match src="primitive_type [99863,99870]" dest="primitive_type [62220,62227]"/>
  <match src="number_literal: 3 [41558,41559]" dest="number_literal: 3 [23662,23663]"/>
  <match src="parameter [9406,9410]" dest="parameter [9970,9974]"/>
  <match src="string_literal [22000,22036]" dest="string_literal [58015,58059]"/>
  <match src="identifier: result [33399,33405]" dest="identifier: result [46777,46783]"/>
  <match src="user_defined_type [82578,82585]" dest="user_defined_type [22200,22207]"/>
  <match src="function: function [49537,49545]" dest="function: function [14244,14252]"/>
  <match src=",: , [75958,75959]" dest=",: , [64506,64507]"/>
  <match src="contract_body [41274,44052]" dest="contract_body [23378,26156]"/>
  <match src="internal: internal [32162,32170]" dest="internal: internal [45540,45548]"/>
  <match src="user_defined_type [99848,99855]" dest="user_defined_type [62205,62212]"/>
  <match src="identifier: setup [101709,101714]" dest="identifier: capture [61332,61339]"/>
  <match src="identifier: BOOTSTRAPPING_SPEEDUP_FACTOR [41527,41555]" dest="identifier: BOOTSTRAPPING_SPEEDUP_FACTOR [23631,23659]"/>
  <match src="primitive_type [49679,49683]" dest="primitive_type [14386,14390]"/>
  <match src="primitive_type [60589,60596]" dest="primitive_type [71023,71030]"/>
  <match src="constant: constant [41709,41717]" dest="constant: constant [23813,23821]"/>
  <match src="): ) [92027,92028]" dest="): ) [32787,32788]"/>
  <match src="yul_identifier [85360,85377]" dest="yul_identifier [70035,70052]"/>
  <match src="member_expression [87006,87021]" dest="member_expression [27766,27781]"/>
  <match src="primitive_type [82389,82396]" dest="primitive_type [22011,22018]"/>
  <match src="function_definition [42617,42711]" dest="function_definition [24721,24815]"/>
  <match src="interface_declaration [49119,51516]" dest="interface_declaration [13826,16223]"/>
  <match src="variable_declaration_statement [97290,97353]" dest="variable_declaration_statement [38050,38113]"/>
  <match src="array_access [97905,97933]" dest="array_access [38665,38693]"/>
  <match src=".: . [95279,95280]" dest=".: . [36039,36040]"/>
  <match src="identifier: sub [96165,96168]" dest="identifier: sub [36925,36928]"/>
  <match src="call_expression [830,873]" dest="call_expression [1394,1437]"/>
  <match src="array_access [88751,88786]" dest="array_access [29511,29546]"/>
  <match src="event_paramater [50451,50465]" dest="event_paramater [15158,15172]"/>
  <match src="{: { [90310,90311]" dest="{: { [31070,31071]"/>
  <match src=".: . [95354,95355]" dest=".: . [36114,36115]"/>
  <match src="parameter [85094,85119]" dest="parameter [69769,69794]"/>
  <match src="call_argument [7715,7719]" dest="call_argument [8279,8283]"/>
  <match src="public: public [90719,90725]" dest="public: public [31479,31485]"/>
  <match src="expression_statement [23114,23141]" dest="expression_statement [51617,51652]"/>
  <match src="=&gt;: =&gt; [82454,82456]" dest="=&gt;: =&gt; [22076,22078]"/>
  <match src="member_expression [94809,94834]" dest="member_expression [35569,35594]"/>
  <match src="identifier: _state [98090,98096]" dest="identifier: _state [38850,38856]"/>
  <match src="primitive_type [49978,49985]" dest="primitive_type [14685,14692]"/>
  <match src=".: . [89672,89673]" dest=".: . [30432,30433]"/>
  <match src="internal: internal [1267,1275]" dest="internal: internal [1831,1839]"/>
  <match src="type_name [19703,19710]" dest="type_name [58219,58226]"/>
  <match src="type_name [30035,30039]" dest="type_name [43413,43417]"/>
  <match src="identifier: sender [77049,77055]" dest="identifier: sender [65184,65190]"/>
  <match src="primitive_type [76556,76563]" dest="primitive_type [64809,64816]"/>
  <match src="state_mutability [30853,30857]" dest="state_mutability [44231,44235]"/>
  <match src="(: ( [5842,5843]" dest="(: ( [6406,6407]"/>
  <match src="identifier: _burn [21048,21053]" dest="identifier: burnRedeemable [51786,51800]"/>
  <match src="): ) [89788,89789]" dest="): ) [30548,30549]"/>
  <match src="uint256: uint256 [11729,11736]" dest="uint256: uint256 [16667,16674]"/>
  <match src="call_expression [5914,5932]" dest="call_expression [6478,6496]"/>
  <match src="address: address [81810,81817]" dest="address: address [21432,21439]"/>
  <match src="): ) [31592,31593]" dest="): ) [44970,44971]"/>
  <match src="(: ( [100300,100301]" dest="(: ( [62657,62658]"/>
  <match src="returns: returns [91877,91884]" dest="returns: returns [32637,32644]"/>
  <match src="(: ( [9757,9758]" dest="(: ( [10321,10322]"/>
  <match src="type_name [48535,48542]" dest="type_name [55492,55499]"/>
  <match src="parenthesized_expression [30216,30650]" dest="parenthesized_expression [43594,44028]"/>
  <match src="function_definition [6063,6206]" dest="function_definition [6627,6770]"/>
  <match src="=: = [7703,7704]" dest="=: = [8267,8268]"/>
  <match src="expression_statement [96004,96108]" dest="expression_statement [36764,36868]"/>
  <match src="type_name [49556,49563]" dest="type_name [14263,14270]"/>
  <match src="identifier: sender [76314,76320]" dest="identifier: sender [65868,65874]"/>
  <match src="identifier: z [35441,35442]" dest="identifier: z [48819,48820]"/>
  <match src="!: ! [30876,30877]" dest="!: ! [44254,44255]"/>
  <match src="state_variable_declaration [42257,42309]" dest="state_variable_declaration [24361,24413]"/>
  <match src="identifier: _state [93917,93923]" dest="identifier: _state [34677,34683]"/>
  <match src=".: . [98721,98722]" dest=".: . [39481,39482]"/>
  <match src="type_name [88355,88362]" dest="type_name [29115,29122]"/>
  <match src="identifier: lockedUntil [99035,99046]" dest="identifier: lockedUntil [39795,39806]"/>
  <match src="expression_statement [77691,77780]" dest="expression_statement [72641,72674]"/>
  <match src="type_name [49405,49411]" dest="type_name [14112,14118]"/>
  <match src="type_name [89534,89541]" dest="type_name [30294,30301]"/>
  <match src="identifier: must [32023,32027]" dest="identifier: must [45401,45405]"/>
  <match src="parameter [8216,8236]" dest="parameter [8780,8800]"/>
  <match src="&quot;: &quot; [25243,25244]" dest="&quot;: &quot; [72326,72327]"/>
  <match src="function_definition [19684,20148]" dest="function_definition [58194,58910]"/>
  <match src="type_name [8853,8857]" dest="type_name [9417,9421]"/>
  <match src="new_expression [33745,33754]" dest="new_expression [47123,47132]"/>
  <match src=":: : [7374,7375]" dest=":: : [7938,7939]"/>
  <match src="identifier: decrementRejectFor [98553,98571]" dest="identifier: decrementRejectFor [39313,39331]"/>
  <match src="call_argument [21996,21997]" dest="call_argument [58011,58012]"/>
  <match src="call_argument [76310,76320]" dest="call_argument [65864,65874]"/>
  <match src="visibility [49571,49579]" dest="visibility [14278,14286]"/>
  <match src="call_argument [35972,35989]" dest="call_argument [49350,49367]"/>
  <match src="return_type_definition [89385,89402]" dest="return_type_definition [30145,30162]"/>
  <match src="parameter [99973,99988]" dest="parameter [62330,62345]"/>
  <match src=".: . [89231,89232]" dest=".: . [29991,29992]"/>
  <match src="user_defined_type [10010,10014]" dest="user_defined_type [10574,10578]"/>
  <match src=",: , [78805,78806]" dest=",: , [72704,72705]"/>
  <match src="address: address [34704,34711]" dest="address: address [48082,48089]"/>
  <match src="=: = [76720,76721]" dest="=: = [64920,64921]"/>
  <match src="pure: pure [6119,6123]" dest="pure: pure [6683,6687]"/>
  <match src="address: address [21839,21846]" dest="address: address [57932,57939]"/>
  <match src="identifier: Epoch [82825,82830]" dest="identifier: Epoch [22447,22452]"/>
  <match src="identifier: that [100008,100012]" dest="identifier: that [62365,62369]"/>
  <match src=",: , [29344,29345]" dest=",: , [42722,42723]"/>
  <match src="=&gt;: =&gt; [82922,82924]" dest="=&gt;: =&gt; [22544,22546]"/>
  <match src="): ) [77124,77125]" dest="): ) [51969,51970]"/>
  <match src="external: external [51250,51258]" dest="external: external [15957,15965]"/>
  <match src="): ) [76367,76368]" dest="): ) [64645,64646]"/>
  <match src="identifier: self [8876,8880]" dest="identifier: self [9440,9444]"/>
  <match src=".: . [87313,87314]" dest=".: . [28073,28074]"/>
  <match src="]: ] [35534,35535]" dest="]: ] [48912,48913]"/>
  <match src="visibility [23283,23290]" dest="visibility [60609,60616]"/>
  <match src="call_expression [45869,45974]" dest="call_expression [57140,57252]"/>
  <match src="returns: returns [8467,8474]" dest="returns: returns [9031,9038]"/>
  <match src="parameter [50197,50204]" dest="parameter [14904,14911]"/>
  <match src="): ) [75332,75333]" dest="): ) [63804,63805]"/>
  <match src="parameter [26048,26063]" dest="parameter [51565,51580]"/>
  <match src="number_literal: 0 [19799,19800]" dest="number_literal: 0 [58330,58331]"/>
  <match src="==: == [88440,88442]" dest="==: == [29200,29202]"/>
  <match src="return_type_definition [86727,86744]" dest="return_type_definition [27487,27504]"/>
  <match src="): ) [50226,50227]" dest="): ) [14933,14934]"/>
  <match src="}: } [43840,43841]" dest="}: } [25944,25945]"/>
  <match src="identifier: stringifyTruncated [31072,31090]" dest="identifier: stringifyTruncated [44450,44468]"/>
  <match src="primitive_type [19874,19881]" dest="primitive_type [58413,58420]"/>
  <match src="): ) [84827,84828]" dest="): ) [69502,69503]"/>
  <match src="member_expression [77626,77636]" dest="member_expression [57451,57461]"/>
  <match src="variable_declaration [63320,63343]" dest="variable_declaration [65426,65440]"/>
  <match src="return_statement [43793,43843]" dest="return_statement [25897,25947]"/>
  <match src="(: ( [48534,48535]" dest="(: ( [55491,55492]"/>
  <match src="primitive_type [6869,6876]" dest="primitive_type [7433,7440]"/>
  <match src="visibility [96922,96930]" dest="visibility [37682,37690]"/>
  <match src="call_struct_argument [7369,7393]" dest="call_struct_argument [7933,7957]"/>
  <match src="identifier: votes [91122,91127]" dest="identifier: votes [31882,31887]"/>
  <match src="expression_statement [21969,22038]" dest="expression_statement [57984,58061]"/>
  <match src="parameter [88898,88913]" dest="parameter [29658,29673]"/>
  <match src="primitive_type [13518,13522]" dest="primitive_type [18456,18460]"/>
  <match src="(: ( [50683,50684]" dest="(: ( [15390,15391]"/>
  <match src="type_name [51030,51034]" dest="type_name [15737,15741]"/>
  <match src="type_name [75661,75668]" dest="type_name [55557,55564]"/>
  <match src="=: = [95246,95247]" dest="=: = [36006,36007]"/>
  <match src="(: ( [51237,51238]" dest="(: ( [15944,15945]"/>
  <match src="): ) [30410,30411]" dest="): ) [43788,43789]"/>
  <match src="identifier: provider [87113,87121]" dest="identifier: provider [27873,27881]"/>
  <match src=",: , [100068,100069]" dest=",: , [62425,62426]"/>
  <match src="visibility [45473,45481]" dest="visibility [58285,58293]"/>
  <match src="primitive_type [30234,30240]" dest="primitive_type [43612,43618]"/>
  <match src="{: { [95883,95884]" dest="{: { [36643,36644]"/>
  <match src="call_expression [94809,94850]" dest="call_expression [35569,35610]"/>
  <match src="expression_statement [76908,76952]" dest="expression_statement [65118,65146]"/>
  <match src="member_expression [94723,94738]" dest="member_expression [35483,35498]"/>
  <match src="]: ] [82124,82125]" dest="]: ] [21746,21747]"/>
  <match src=".: . [101708,101709]" dest=".: . [61331,61332]"/>
  <match src="]: ] [89009,89010]" dest="]: ] [29769,29770]"/>
  <match src="address: address [91699,91706]" dest="address: address [32459,32466]"/>
  <match src="identifier: reason [30745,30751]" dest="identifier: reason [44123,44129]"/>
  <match src="(: ( [82965,82966]" dest="(: ( [22587,22588]"/>
  <match src="binary_expression [36168,36174]" dest="binary_expression [49546,49552]"/>
  <match src="if_statement [88629,88734]" dest="if_statement [29389,29494]"/>
  <match src="identifier: self [9362,9366]" dest="identifier: self [9926,9930]"/>
  <match src="=: = [35398,35399]" dest="=: = [48776,48777]"/>
  <match src="(: ( [8796,8797]" dest="(: ( [9360,9361]"/>
  <match src="(: ( [30686,30687]" dest="(: ( [44064,44065]"/>
  <match src="}: } [7042,7043]" dest="}: } [7606,7607]"/>
  <match src="member_expression [43046,43058]" dest="member_expression [25150,25162]"/>
  <match src="(: ( [6136,6137]" dest="(: ( [6700,6701]"/>
  <match src="parameter [47940,47954]" dest="parameter [51073,51087]"/>
  <match src="parameter [42455,42462]" dest="parameter [24559,24566]"/>
  <match src="): ) [6375,6376]" dest="): ) [6939,6940]"/>
  <match src="primitive_type [90123,90130]" dest="primitive_type [30883,30890]"/>
  <match src="parameter [7431,7447]" dest="parameter [7995,8011]"/>
  <match src=",: , [94186,94187]" dest=",: , [34946,34947]"/>
  <match src="identifier: b [4717,4718]" dest="identifier: b [5281,5282]"/>
  <match src="call_argument [79176,79180]" dest="call_argument [73055,73059]"/>
  <match src="pure: pure [43748,43752]" dest="pure: pure [25852,25856]"/>
  <match src="function: function [21039,21047]" dest="function: function [51777,51785]"/>
  <match src="(: ( [87486,87487]" dest="(: ( [28246,28247]"/>
  <match src="visibility [41612,41619]" dest="visibility [23716,23723]"/>
  <match src="function: function [93832,93840]" dest="function: function [34592,34600]"/>
  <match src="internal: internal [7837,7845]" dest="internal: internal [8401,8409]"/>
  <match src="call_argument [8547,8554]" dest="call_argument [9111,9118]"/>
  <match src="identifier: data [51376,51380]" dest="identifier: data [16083,16087]"/>
  <match src="member_expression [6998,7012]" dest="member_expression [7562,7576]"/>
  <match src="): ) [100042,100043]" dest="): ) [62399,62400]"/>
  <match src="identifier: amount [47052,47058]" dest="identifier: amount [19750,19756]"/>
  <match src="identifier: amount [98726,98732]" dest="identifier: amount [39486,39492]"/>
  <match src="address: address [60562,60569]" dest="address: address [71130,71137]"/>
  <match src="): ) [29825,29826]" dest="): ) [43203,43204]"/>
  <match src="): ) [1297,1298]" dest="): ) [1861,1862]"/>
  <match src="function: function [63010,63018]" dest="function: function [60562,60570]"/>
  <match src="identifier: j [34624,34625]" dest="identifier: j [48002,48003]"/>
  <match src="comment: // ============ Self Functions ============ [6392,6435]" dest="comment: // ============ Self Functions ============ [6956,6999]"/>
  <match src="boolean_literal [93113,93118]" dest="boolean_literal [33873,33878]"/>
  <match src="identifier: payloadA [31532,31540]" dest="identifier: payloadA [44910,44918]"/>
  <match src="type_cast_expression [36756,36787]" dest="type_cast_expression [50134,50165]"/>
  <match src="contract_body [58838,58990]" dest="contract_body [20430,20582]"/>
  <match src="address: address [78933,78940]" dest="address: address [53462,53469]"/>
  <match src="expression_statement [21283,21323]" dest="expression_statement [51836,51858]"/>
  <match src="(: ( [29603,29604]" dest="(: ( [42981,42982]"/>
  <match src="identifier: stringify [32630,32639]" dest="identifier: stringify [46008,46017]"/>
  <match src="call_argument [19141,19180]" dest="call_argument [64180,64201]"/>
  <match src="parameter [9878,9885]" dest="parameter [10442,10449]"/>
  <match src="visibility [5964,5972]" dest="visibility [6528,6536]"/>
  <match src="): ) [90278,90279]" dest="): ) [31038,31039]"/>
  <match src="call_argument [52423,52424]" dest="call_argument [13672,13673]"/>
  <match src="identifier: msg [77419,77422]" dest="identifier: msg [65496,65499]"/>
  <match src="parameter [9082,9095]" dest="parameter [9646,9659]"/>
  <match src="identifier: payloadB [32117,32125]" dest="identifier: payloadB [45495,45503]"/>
  <match src="parameter [8680,8691]" dest="parameter [9244,9255]"/>
  <match src="function_definition [12310,12393]" dest="function_definition [17248,17331]"/>
  <match src=".: . [94451,94452]" dest=".: . [35211,35212]"/>
  <match src="comment: // r.length = length; [33603,33624]" dest="comment: // r.length = length; [46981,47002]"/>
  <match src="identifier: Decimal [61628,61635]" dest="identifier: Decimal [13047,13054]"/>
  <match src="call_argument [28007,28178]" dest="call_argument [41385,41556]"/>
  <match src="{: { [87813,87814]" dest="{: { [28573,28574]"/>
  <match src="function: function [6212,6220]" dest="function: function [6776,6784]"/>
  <match src="return_type_definition [59697,59711]" dest="return_type_definition [73572,73586]"/>
  <match src=".: . [77569,77570]" dest=".: . [57393,57394]"/>
  <match src=",: , [9080,9081]" dest=",: , [9644,9645]"/>
  <match src="uint256: uint256 [16510,16517]" dest="uint256: uint256 [53767,53774]"/>
  <match src="identifier: COLON [30354,30359]" dest="identifier: COLON [43732,43737]"/>
  <match src="comment: // Can modify account state [99914,99941]" dest="comment: // Can modify account state [62271,62298]"/>
  <match src="identifier: D256 [6540,6544]" dest="identifier: D256 [7104,7108]"/>
  <match src="identifier: self [8809,8813]" dest="identifier: self [9373,9377]"/>
  <match src="identifier: currentLock [98983,98994]" dest="identifier: currentLock [39743,39754]"/>
  <match src="identifier: D256 [7508,7512]" dest="identifier: D256 [8072,8076]"/>
  <match src="expression_statement [34082,34090]" dest="expression_statement [47460,47468]"/>
  <match src="identifier: encodePacked [30266,30278]" dest="identifier: encodePacked [43644,43656]"/>
  <match src="function_definition [49766,49832]" dest="function_definition [14473,14539]"/>
  <match src="(: ( [27961,27962]" dest="(: ( [41339,41340]"/>
  <match src="uint256: uint256 [68587,68594]" dest="uint256: uint256 [60696,60703]"/>
  <match src="function_body [33870,34670]" dest="function_body [47248,48048]"/>
  <match src="identifier: accounts [95900,95908]" dest="identifier: accounts [36660,36668]"/>
  <match src="identifier: stringifyTruncated [28130,28148]" dest="identifier: stringifyTruncated [41508,41526]"/>
  <match src="(: ( [76688,76689]" dest="(: ( [57349,57350]"/>
  <match src="primitive_type [99973,99980]" dest="primitive_type [62330,62337]"/>
  <match src="function: function [8145,8153]" dest="function: function [8709,8717]"/>
  <match src="expression_statement [53708,53760]" dest="expression_statement [65648,65719]"/>
  <match src="identifier: amount [98524,98530]" dest="identifier: amount [39284,39290]"/>
  <match src="call_expression [30304,30328]" dest="call_expression [43682,43706]"/>
  <match src="pure: pure [6522,6526]" dest="pure: pure [7086,7090]"/>
  <match src="identifier: value [6783,6788]" dest="identifier: value [7347,7352]"/>
  <match src="call_argument [88287,88298]" dest="call_argument [29047,29058]"/>
  <match src="state_mutability [33834,33838]" dest="state_mutability [47212,47216]"/>
  <match src="(: ( [77716,77717]" dest="(: ( [72650,72651]"/>
  <match src="identifier: epochs [90773,90779]" dest="identifier: epochs [31533,31539]"/>
  <match src="member_expression [97090,97103]" dest="member_expression [37850,37863]"/>
  <match src="call_argument [4725,4737]" dest="call_argument [5289,5301]"/>
  <match src="): ) [68545,68546]" dest="): ) [60301,60302]"/>
  <match src="variable_declaration_statement [63405,63502]" dest="variable_declaration_statement [61281,61342]"/>
  <match src="external: external [49955,49963]" dest="external: external [14662,14670]"/>
  <match src="visibility [78870,78877]" dest="visibility [53399,53406]"/>
  <match src="(: ( [32837,32838]" dest="(: ( [46215,46216]"/>
  <match src="): ) [87811,87812]" dest="): ) [28571,28572]"/>
  <match src="function_body [93907,93985]" dest="function_body [34667,34745]"/>
  <match src="): ) [88438,88439]" dest="): ) [29198,29199]"/>
  <match src="call_argument [75893,75898]" dest="call_argument [64466,64471]"/>
  <match src="struct_declaration [82528,82621]" dest="struct_declaration [22150,22243]"/>
  <match src="identifier: sub [6789,6792]" dest="identifier: sub [7353,7356]"/>
  <match src="(: ( [30278,30279]" dest="(: ( [43656,43657]"/>
  <match src="member_expression [94688,94703]" dest="member_expression [35448,35463]"/>
  <match src="event_paramater [50590,50606]" dest="event_paramater [15297,15313]"/>
  <match src="identifier: sub [1213,1216]" dest="identifier: sub [1777,1780]"/>
  <match src="identifier: add [91787,91790]" dest="identifier: add [32547,32550]"/>
  <match src="visibility [92002,92008]" dest="visibility [32762,32768]"/>
  <match src="identifier: BASE [9673,9677]" dest="identifier: BASE [10237,10241]"/>
  <match src="type_name [6463,6467]" dest="type_name [7027,7031]"/>
  <match src="type_name [98572,98579]" dest="type_name [39332,39339]"/>
  <match src="comment: // for more details about how this works. [80661,80702]" dest="comment: // for more details about how this works. [67483,67524]"/>
  <match src="{: { [43813,43814]" dest="{: { [25917,25918]"/>
  <match src="identifier: epoch [90642,90647]" dest="identifier: epoch [31402,31407]"/>
  <match src="parameter [4617,4626]" dest="parameter [5181,5190]"/>
  <match src="string [76425,76463]" dest="string [73073,73084]"/>
  <match src="): ) [90717,90718]" dest="): ) [31477,31478]"/>
  <match src="member_expression [97463,97485]" dest="member_expression [38223,38245]"/>
  <match src="view: view [64122,64126]" dest="view: view [56810,56814]"/>
  <match src="visibility [64018,64026]" dest="visibility [65837,65845]"/>
  <match src="return: return [90759,90765]" dest="return: return [31519,31525]"/>
  <match src="identifier: epoch [88751,88756]" dest="identifier: epoch [29511,29516]"/>
  <match src="public: public [90419,90425]" dest="public: public [31179,31185]"/>
  <match src="address: address [49873,49880]" dest="address: address [14580,14587]"/>
  <match src="variable_declaration_statement [34786,34813]" dest="variable_declaration_statement [48164,48191]"/>
  <match src="bytes32: bytes32 [28275,28282]" dest="bytes32: bytes32 [41653,41660]"/>
  <match src="call_argument [17070,17076]" dest="call_argument [54281,54287]"/>
  <match src="(: ( [30875,30876]" dest="(: ( [44253,44254]"/>
  <match src="contract: contract [92905,92913]" dest="contract: contract [33665,33673]"/>
  <match src="state_variable_declaration [99863,99908]" dest="state_variable_declaration [62220,62265]"/>
  <match src="identifier: Decimal [63405,63412]" dest="identifier: Decimal [61282,61289]"/>
  <match src="identifier: value [75444,75449]" dest="identifier: value [55654,55659]"/>
  <match src="}: } [93365,93366]" dest="}: } [34125,34126]"/>
  <match src="member_expression [30949,30965]" dest="member_expression [44327,44343]"/>
  <match src="type_name [34786,34793]" dest="type_name [48164,48171]"/>
  <match src="false: false [93113,93118]" dest="false: false [33873,33878]"/>
  <match src="(: ( [98571,98572]" dest="(: ( [39331,39332]"/>
  <match src="parameter [32083,32099]" dest="parameter [45461,45477]"/>
  <match src="uint256: uint256 [75580,75587]" dest="uint256: uint256 [63922,63929]"/>
  <match src="): ) [5843,5844]" dest="): ) [6407,6408]"/>
  <match src="identifier: b [8341,8342]" dest="identifier: b [8905,8906]"/>
  <match src="identifier: implementation [100496,100510]" dest="identifier: implementation [62853,62867]"/>
  <match src="identifier: totalRewardedWithPhantom [68705,68729]" dest="identifier: newDebt [60398,60405]"/>
  <match src="(: ( [48209,48210]" dest="(: ( [58644,58645]"/>
  <match src="call_argument [77158,77172]" dest="call_argument [66223,66237]"/>
  <match src="uint256: uint256 [43541,43548]" dest="uint256: uint256 [25645,25652]"/>
  <match src="type_name [8680,8684]" dest="type_name [9244,9248]"/>
  <match src="return_statement [90759,90794]" dest="return_statement [31519,31554]"/>
  <match src="identifier: amount [94180,94186]" dest="identifier: amount [34940,34946]"/>
  <match src="identifier: value [75840,75845]" dest="identifier: value [64413,64418]"/>
  <match src="function: function [96316,96324]" dest="function: function [37076,37084]"/>
  <match src="member_expression [95333,95354]" dest="member_expression [36093,36114]"/>
  <match src="identifier: LPAREN [29852,29858]" dest="identifier: LPAREN [43230,43236]"/>
  <match src="parameter [47076,47080]" dest="parameter [19774,19778]"/>
  <match src="(: ( [35713,35714]" dest="(: ( [49091,49092]"/>
  <match src="): ) [1696,1697]" dest="): ) [2260,2261]"/>
  <match src="identifier: getPartial [8524,8534]" dest="identifier: getPartial [9088,9098]"/>
  <match src="function: function [96197,96205]" dest="function: function [36957,36965]"/>
  <match src="call_argument [48253,48255]" dest="call_argument [58717,58719]"/>
  <match src="primitive_type [97036,97043]" dest="primitive_type [37796,37803]"/>
  <match src="member_expression [7931,7938]" dest="member_expression [8495,8502]"/>
  <match src="mstore: mstore [33580,33586]" dest="mstore: mstore [46958,46964]"/>
  <match src="(: ( [34945,34946]" dest="(: ( [48323,48324]"/>
  <match src="call_expression [7568,7575]" dest="call_expression [8132,8139]"/>
  <match src="return_type_definition [11720,11737]" dest="return_type_definition [16658,16675]"/>
  <match src="function_definition [746,880]" dest="function_definition [1310,1444]"/>
  <match src="identifier: that [31445,31449]" dest="identifier: that [44823,44827]"/>
  <match src="visibility [93313,93321]" dest="visibility [34073,34081]"/>
  <match src="identifier: owner [96356,96361]" dest="identifier: owner [37116,37121]"/>
  <match src="state_mutability [12370,12374]" dest="state_mutability [17308,17312]"/>
  <match src="primitive_type [31500,31507]" dest="primitive_type [44878,44885]"/>
  <match src="primitive_type [319,326]" dest="primitive_type [883,890]"/>
  <match src="primitive_type [35714,35719]" dest="primitive_type [49092,49097]"/>
  <match src=".: . [91937,91938]" dest=".: . [32697,32698]"/>
  <match src="(: ( [88432,88433]" dest="(: ( [29192,29193]"/>
  <match src="visibility [94408,94416]" dest="visibility [35168,35176]"/>
  <match src="contract: contract [74948,74956]" dest="contract: contract [63625,63633]"/>
  <match src="identifier: file [28068,28072]" dest="identifier: file [41446,41450]"/>
  <match src="(: ( [20114,20115]" dest="(: ( [58869,58870]"/>
  <match src="number_literal: 0 [35211,35212]" dest="number_literal: 0 [48589,48590]"/>
  <match src="event_paramater [49165,49186]" dest="event_paramater [13872,13893]"/>
  <match src="type_name [49188,49195]" dest="type_name [13895,13902]"/>
  <match src="returns: returns [86612,86619]" dest="returns: returns [27372,27379]"/>
  <match src="call_argument [2028,2063]" dest="call_argument [2592,2627]"/>
  <match src="identifier: experimental [32,44]" dest="identifier: experimental [32,44]"/>
  <match src="(: ( [63665,63666]" dest="(: ( [56994,56995]"/>
  <match src="): ) [9160,9161]" dest="): ) [9724,9725]"/>
  <match src="visibility [95470,95478]" dest="visibility [36230,36238]"/>
  <match src="type_name [95439,95446]" dest="type_name [36199,36206]"/>
  <match src="visibility [89273,89279]" dest="visibility [30033,30039]"/>
  <match src="(: ( [16058,16059]" dest="(: ( [11619,11620]"/>
  <match src="parameter [58979,58986]" dest="parameter [20571,20578]"/>
  <match src="identifier: coupons [87743,87750]" dest="identifier: coupons [28503,28510]"/>
  <match src="member_expression [96004,96017]" dest="member_expression [36764,36777]"/>
  <match src="member_expression [91499,91516]" dest="member_expression [32259,32276]"/>
  <match src="}: } [8138,8139]" dest="}: } [8702,8703]"/>
  <match src="): ) [100512,100513]" dest="): ) [62869,62870]"/>
  <match src="variable_declaration_statement [3399,3417]" dest="variable_declaration_statement [3963,3981]"/>
  <match src="identifier: getBootstrappingPeriod [90909,90931]" dest="identifier: getBootstrappingPeriod [31669,31691]"/>
  <match src="primitive_type [42099,42106]" dest="primitive_type [24203,24210]"/>
  <match src="=: = [98912,98913]" dest="=: = [39672,39673]"/>
  <match src="function_body [64145,64177]" dest="function_body [56833,56924]"/>
  <match src="identifier: approve [49700,49707]" dest="identifier: approve [14407,14414]"/>
  <match src="uint256: uint256 [42556,42563]" dest="uint256: uint256 [24660,24667]"/>
  <match src="): ) [6006,6007]" dest="): ) [6570,6571]"/>
  <match src="return: return [88695,88701]" dest="return: return [29455,29461]"/>
  <match src="identifier: coupons [97111,97118]" dest="identifier: coupons [37871,37878]"/>
  <match src="identifier: deposit [75727,75734]" dest="identifier: deposit [64291,64298]"/>
  <match src="if_statement [97362,97429]" dest="if_statement [38122,38189]"/>
  <match src="function: function [91825,91833]" dest="function: function [32585,32593]"/>
  <match src="type_alias [60384,60391]" dest="type_alias [59621,59628]"/>
  <match src="(: ( [80361,80362]" dest="(: ( [67183,67184]"/>
  <match src="primitive_type [62681,62685]" dest="primitive_type [61309,61313]"/>
  <match src="type_name [50419,50426]" dest="type_name [15126,15133]"/>
  <match src="returns: returns [91198,91205]" dest="returns: returns [31958,31965]"/>
  <match src="comment: // populate the least-significant character [36277,36320]" dest="comment: // populate the least-significant character [49655,49698]"/>
  <match src="return_statement [6022,6051]" dest="return_statement [6586,6615]"/>
  <match src="identifier: FILE [79176,79180]" dest="identifier: FILE [73055,73059]"/>
  <match src="(: ( [61800,61801]" dest="(: ( [61507,61508]"/>
  <match src="function_body [88619,88851]" dest="function_body [29379,29611]"/>
  <match src="function_definition [9959,10192]" dest="function_definition [10523,10756]"/>
  <match src="return_type_definition [43753,43782]" dest="return_type_definition [25857,25886]"/>
  <match src="=: = [7613,7614]" dest="=: = [8177,8178]"/>
  <match src="identifier: epoch [96858,96863]" dest="identifier: epoch [37618,37623]"/>
  <match src="): ) [87600,87601]" dest="): ) [28360,28361]"/>
  <match src="type_name [49915,49919]" dest="type_name [14622,14626]"/>
  <match src="return: return [8707,8713]" dest="return: return [9271,9277]"/>
  <match src="): ) [2610,2611]" dest="): ) [3174,3175]"/>
  <match src="(: ( [12383,12384]" dest="(: ( [17321,17322]"/>
  <match src="return_statement [9003,9034]" dest="return_statement [9567,9598]"/>
  <match src="function_definition [87445,87539]" dest="function_definition [28205,28299]"/>
  <match src="}: } [51515,51516]" dest="}: } [16222,16223]"/>
  <match src="string [19141,19180]" dest="string [64180,64201]"/>
  <match src="identifier: this [75833,75837]" dest="identifier: this [64406,64410]"/>
  <match src="returns: returns [89082,89089]" dest="returns: returns [29842,29849]"/>
  <match src="): ) [78606,78607]" dest="): ) [73742,73743]"/>
  <match src="function_body [8993,9040]" dest="function_body [9557,9604]"/>
  <match src="call_expression [78914,78922]" dest="call_expression [53443,53451]"/>
  <match src="(: ( [91566,91567]" dest="(: ( [32326,32327]"/>
  <match src="type_name [68697,68704]" dest="type_name [60390,60397]"/>
  <match src="view: view [65005,65009]" dest="view: view [60997,61001]"/>
  <match src="call_expression [100292,100309]" dest="call_expression [62649,62666]"/>
  <match src="identifier: value [77522,77527]" dest="identifier: value [66025,66030]"/>
  <match src="parameter [42893,42900]" dest="parameter [24997,25004]"/>
  <match src=".: . [97758,97759]" dest=".: . [38518,38519]"/>
  <match src="}: } [89143,89144]" dest="}: } [29903,29904]"/>
  <match src="public: public [87783,87789]" dest="public: public [28543,28549]"/>
  <match src="call_argument [22975,22981]" dest="call_argument [51415,51421]"/>
  <match src="identifier: start [75500,75505]" dest="identifier: start [64013,64018]"/>
  <match src="visibility [77224,77232]" dest="visibility [65346,65354]"/>
  <match src="}: } [31429,31430]" dest="}: } [44807,44808]"/>
  <match src="&quot;: &quot; [78063,78064]" dest="&quot;: &quot; [53900,53901]"/>
  <match src="struct_member [82825,82844]" dest="struct_member [22447,22466]"/>
  <match src="primitive_type [67988,67995]" dest="primitive_type [73542,73549]"/>
  <match src="view: view [90588,90592]" dest="view: view [31348,31352]"/>
  <match src="member_expression [96851,96871]" dest="member_expression [37611,37631]"/>
  <match src="function: function [91280,91288]" dest="function: function [32040,32048]"/>
  <match src="call_expression [30469,30488]" dest="call_expression [43847,43866]"/>
  <match src="primitive_type [27585,27591]" dest="primitive_type [40963,40969]"/>
  <match src="returns: returns [87071,87078]" dest="returns: returns [27831,27838]"/>
  <match src="): ) [49473,49474]" dest="): ) [14180,14181]"/>
  <match src="uint256: uint256 [7097,7104]" dest="uint256: uint256 [7661,7668]"/>
  <match src="function_definition [8781,8904]" dest="function_definition [9345,9468]"/>
  <match src="identifier: reason [95367,95373]" dest="identifier: reason [36127,36133]"/>
  <match src="uint256: uint256 [804,811]" dest="uint256: uint256 [1368,1375]"/>
  <match src="identifier: result [35001,35007]" dest="identifier: result [48379,48385]"/>
  <match src="array_access [91909,91937]" dest="array_access [32669,32697]"/>
  <match src="function_body [43174,43226]" dest="function_body [25278,25330]"/>
  <match src="function_definition [51041,51102]" dest="function_definition [15748,15809]"/>
  <match src="public: public [91039,91045]" dest="public: public [31799,31805]"/>
  <match src="identifier: accounts [94469,94477]" dest="identifier: accounts [35229,35237]"/>
  <match src="(: ( [6833,6834]" dest="(: ( [7397,7398]"/>
  <match src=".: . [94094,94095]" dest=".: . [34854,34855]"/>
  <match src="type_name [50254,50261]" dest="type_name [14961,14968]"/>
  <match src="primitive_type [75580,75587]" dest="primitive_type [63922,63929]"/>
  <match src="uint256: uint256 [73145,73152]" dest="uint256: uint256 [56955,56962]"/>
  <match src=".: . [83091,83092]" dest=".: . [22713,22714]"/>
  <match src="): ) [75898,75899]" dest="): ) [64471,64472]"/>
  <match src=",: , [45913,45914]" dest=",: , [57193,57194]"/>
  <match src="address: address [88883,88890]" dest="address: address [29643,29650]"/>
  <match src="(: ( [35017,35018]" dest="(: ( [48395,48396]"/>
  <match src="identifier: decrementTotalDebt [93841,93859]" dest="identifier: decrementTotalDebt [34601,34619]"/>
  <match src="(: ( [100598,100599]" dest="(: ( [62955,62956]"/>
  <match src="address: address [51487,51494]" dest="address: address [16194,16201]"/>
  <match src="return: return [91758,91764]" dest="return: return [32518,32524]"/>
  <match src="type_name [91299,91306]" dest="type_name [32059,32066]"/>
  <match src="type_name [9987,9991]" dest="type_name [10551,10555]"/>
  <match src="): ) [33413,33414]" dest="): ) [46791,46792]"/>
  <match src="function_definition [88547,88851]" dest="function_definition [29307,29611]"/>
  <match src=".: . [93639,93640]" dest=".: . [34399,34400]"/>
  <match src="function_body [95883,96191]" dest="function_body [36643,36951]"/>
  <match src="expression_statement [97090,97143]" dest="expression_statement [37850,37903]"/>
  <match src="call_expression [46101,46193]" dest="call_expression [51432,51502]"/>
  <match src="identifier: IDollar [86980,86987]" dest="identifier: IDollar [27740,27747]"/>
  <match src="returns: returns [43532,43539]" dest="returns: returns [25636,25643]"/>
  <match src="call_expression [90047,90081]" dest="call_expression [30807,30841]"/>
  <match src="identifier: value [76136,76141]" dest="identifier: value [64693,64698]"/>
  <match src="address: address [13063,13070]" dest="address: address [18001,18008]"/>
  <match src="returns: returns [64127,64134]" dest="returns: returns [56815,56822]"/>
  <match src="return_type_definition [7859,7880]" dest="return_type_definition [8423,8444]"/>
  <match src="identifier: Constants [90047,90056]" dest="identifier: Constants [30807,30816]"/>
  <match src="}: } [95762,95763]" dest="}: } [36522,36523]"/>
  <match src="returns: returns [89285,89292]" dest="returns: returns [30045,30052]"/>
  <match src="identifier: dollar [73255,73261]" dest="identifier: dollar [56873,56879]"/>
  <match src="identifier: self [8407,8411]" dest="identifier: self [8971,8975]"/>
  <match src="public: public [86304,86310]" dest="public: public [27064,27070]"/>
  <match src="member_expression [88702,88716]" dest="member_expression [29462,29476]"/>
  <match src="(: ( [10063,10064]" dest="(: ( [10627,10628]"/>
  <match src="}: } [29999,30000]" dest="}: } [43377,43378]"/>
  <match src="returns: returns [42884,42891]" dest="returns: returns [24988,24995]"/>
  <match src="type_name [50524,50528]" dest="type_name [15231,15235]"/>
  <match src="function_definition [51467,51514]" dest="function_definition [16174,16221]"/>
  <match src="&quot;: &quot; [77777,77778]" dest="&quot;: &quot; [71366,71367]"/>
  <match src="external: external [51382,51390]" dest="external: external [16089,16097]"/>
  <match src="type_name [72002,72009]" dest="type_name [56787,56794]"/>
  <match src="member_expression [7376,7386]" dest="member_expression [7940,7950]"/>
  <match src="): ) [78000,78001]" dest="): ) [53839,53840]"/>
  <match src="call_expression [68816,68883]" dest="call_expression [73696,73744]"/>
  <match src=",: , [94645,94646]" dest=",: , [35405,35406]"/>
  <match src="identifier: spender [21977,21984]" dest="identifier: spender [57992,57999]"/>
  <match src="type_name [81732,81739]" dest="type_name [21354,21361]"/>
  <match src="function_definition [87545,87651]" dest="function_definition [28305,28411]"/>
  <match src="user_defined_type [82977,82988]" dest="user_defined_type [22599,22610]"/>
  <match src="&lt;: &lt; [7674,7675]" dest="&lt;: &lt; [8238,8239]"/>
  <match src="parameter [49826,49830]" dest="parameter [14533,14537]"/>
  <match src="(: ( [3275,3276]" dest="(: ( [3839,3840]"/>
  <match src="type_name [51282,51286]" dest="type_name [15989,15993]"/>
  <match src="primitive_type [77209,77216]" dest="primitive_type [65822,65829]"/>
  <match src="identifier: candidate [98704,98713]" dest="identifier: candidate [39464,39473]"/>
  <match src="): ) [36786,36787]" dest="): ) [50164,50165]"/>
  <match src="public: public [86600,86606]" dest="public: public [27360,27366]"/>
  <match src="comment: /**      * Governance      */ [90946,90975]" dest="comment: /**      * Governance      */ [31706,31735]"/>
  <match src="member_expression [97527,97555]" dest="member_expression [38287,38315]"/>
  <match src="(: ( [49467,49468]" dest="(: ( [14174,14175]"/>
  <match src="type_name [81776,81783]" dest="type_name [21398,21405]"/>
  <match src="function: function [51224,51232]" dest="function: function [15931,15939]"/>
  <match src="): ) [63500,63501]" dest="): ) [61340,61341]"/>
  <match src="primitive_type [32976,32981]" dest="primitive_type [46354,46359]"/>
  <match src="(: ( [85146,85147]" dest="(: ( [69821,69822]"/>
  <match src="type_name [49594,49598]" dest="type_name [14301,14305]"/>
  <match src="user_defined_type [9209,9213]" dest="user_defined_type [9773,9777]"/>
  <match src="type_name [82652,82659]" dest="type_name [22274,22281]"/>
  <match src=".: . [89123,89124]" dest=".: . [29883,29884]"/>
  <match src="identifier: account [26170,26177]" dest="identifier: account [51294,51301]"/>
  <match src="call_expression [78238,78267]" dest="call_expression [71293,71314]"/>
  <match src="bytes: bytes [34141,34146]" dest="bytes: bytes [47519,47524]"/>
  <match src="function_definition [89250,89346]" dest="function_definition [30010,30106]"/>
  <match src="identifier: epoch [96835,96840]" dest="identifier: epoch [37595,37600]"/>
  <match src="return_statement [88744,88845]" dest="return_statement [29504,29605]"/>
  <match src="member_expression [8547,8554]" dest="member_expression [9111,9118]"/>
  <match src=",: , [77860,77861]" dest=",: , [65774,65775]"/>
  <match src="(: ( [32287,32288]" dest="(: ( [45665,45666]"/>
  <match src="primitive_type [6255,6262]" dest="primitive_type [6819,6826]"/>
  <match src="): ) [75520,75521]" dest="): ) [64058,64059]"/>
  <match src="identifier: BASE [5667,5671]" dest="identifier: BASE [6231,6235]"/>
  <match src="function_body [3285,3528]" dest="function_body [3849,4092]"/>
  <match src="uint256: uint256 [90404,90411]" dest="uint256: uint256 [31164,31171]"/>
  <match src=".: . [6782,6783]" dest=".: . [7346,7347]"/>
  <match src="): ) [93335,93336]" dest="): ) [34095,34096]"/>
  <match src="returns: returns [42766,42773]" dest="returns: returns [24870,24877]"/>
  <match src="identifier: sender [77423,77429]" dest="identifier: sender [65500,65506]"/>
  <match src="): ) [49895,49896]" dest="): ) [14602,14603]"/>
  <match src="): ) [16066,16067]" dest="): ) [11627,11628]"/>
  <match src="visibility [88089,88095]" dest="visibility [28849,28855]"/>
  <match src="internal: internal [70691,70699]" dest="internal: internal [51598,51606]"/>
  <match src=".: . [8548,8549]" dest=".: . [9112,9113]"/>
  <match src="identifier: D256 [9350,9354]" dest="identifier: D256 [9914,9918]"/>
  <match src="function_definition [75979,76254]" dest="function_definition [64527,64789]"/>
  <match src="call_argument [78238,78276]" dest="call_argument [71293,71318]"/>
  <match src="bytes32: bytes32 [30737,30744]" dest="bytes32: bytes32 [44115,44122]"/>
  <match src="identifier: value [5921,5926]" dest="identifier: value [6485,6490]"/>
  <match src="identifier: debt [93932,93936]" dest="identifier: debt [34692,34696]"/>
  <match src="identifier: getPartial [8728,8738]" dest="identifier: getPartial [9292,9302]"/>
  <match src="&gt;: &gt; [80948,80949]" dest="&gt;: &gt; [67770,67771]"/>
  <match src=".: . [43015,43016]" dest=".: . [25119,25120]"/>
  <match src="visibility [11706,11714]" dest="visibility [16644,16652]"/>
  <match src="function: function [97809,97817]" dest="function: function [38569,38577]"/>
  <match src="): ) [49830,49831]" dest="): ) [14537,14538]"/>
  <match src="member_expression [87513,87527]" dest="member_expression [28273,28287]"/>
  <match src="): ) [91584,91585]" dest="): ) [32344,32345]"/>
  <match src="identifier: amount [98419,98425]" dest="identifier: amount [39179,39185]"/>
  <match src="identifier: abi [29042,29045]" dest="identifier: abi [42420,42423]"/>
  <match src="array_access [94688,94712]" dest="array_access [35448,35472]"/>
  <match src="}: } [21380,21381]" dest="}: } [51976,51977]"/>
  <match src="type_name [91567,91574]" dest="type_name [32327,32334]"/>
  <match src=".: . [88657,88658]" dest=".: . [29417,29418]"/>
  <match src="string [2028,2063]" dest="string [2592,2627]"/>
  <match src="type_name [41604,41611]" dest="type_name [23708,23715]"/>
  <match src="call_argument [70780,70786]" dest="call_argument [12144,12150]"/>
  <match src="): ) [78987,78988]" dest="): ) [53511,53512]"/>
  <match src="{: { [100256,100257]" dest="{: { [62613,62614]"/>
  <match src="primitive_type [97051,97058]" dest="primitive_type [37811,37818]"/>
  <match src="identifier: that [78896,78900]" dest="identifier: that [53425,53429]"/>
  <match src="): ) [77009,77010]" dest="): ) [66187,66188]"/>
  <match src="member_expression [90327,90366]" dest="member_expression [31087,31126]"/>
  <match src="identifier: amount [93518,93524]" dest="identifier: amount [34278,34284]"/>
  <match src="boolean_literal [61804,61809]" dest="boolean_literal [73642,73647]"/>
  <match src="(: ( [29893,29894]" dest="(: ( [43271,43272]"/>
  <match src="primitive_type [98790,98797]" dest="primitive_type [39550,39557]"/>
  <match src="call_argument [29294,29299]" dest="call_argument [42672,42677]"/>
  <match src="uint256: uint256 [7457,7464]" dest="uint256: uint256 [8021,8028]"/>
  <match src="=: = [35056,35057]" dest="=: = [48434,48435]"/>
  <match src="identifier: reason [28864,28870]" dest="identifier: reason [42242,42248]"/>
  <match src="function: function [87041,87049]" dest="function: function [27801,27809]"/>
  <match src="identifier: _state [98446,98452]" dest="identifier: _state [39206,39212]"/>
  <match src="function_body [98436,98538]" dest="function_body [39196,39298]"/>
  <match src="address: address [49165,49172]" dest="address: address [13872,13879]"/>
  <match src="identifier: to [51357,51359]" dest="identifier: to [16064,16066]"/>
  <match src="number_literal: 0 [88217,88218]" dest="number_literal: 0 [28977,28978]"/>
  <match src="): ) [95686,95687]" dest="): ) [36446,36447]"/>
  <match src="call_expression [76778,76813]" dest="call_expression [64965,65000]"/>
  <match src="comment: // allocate the string [34110,34132]" dest="comment: // allocate the string [47488,47510]"/>
  <match src="identifier: epoch [90712,90717]" dest="identifier: epoch [31472,31477]"/>
  <match src="identifier: amount [94639,94645]" dest="identifier: amount [35399,35405]"/>
  <match src="identifier: _state [90185,90191]" dest="identifier: _state [30945,30951]"/>
  <match src="type_name [41693,41700]" dest="type_name [23797,23804]"/>
  <match src=".: . [90205,90206]" dest=".: . [30965,30966]"/>
  <match src="uint256: uint256 [61916,61923]" dest="uint256: uint256 [72913,72920]"/>
  <match src="member_expression [79294,79306]" dest="member_expression [71753,71765]"/>
  <match src="): ) [86338,86339]" dest="): ) [27098,27099]"/>
  <match src="identifier: msg [73636,73639]" dest="identifier: msg [72603,72606]"/>
  <match src="return_type_definition [49459,49474]" dest="return_type_definition [14166,14181]"/>
  <match src="call_argument [23133,23139]" dest="call_argument [51644,51650]"/>
  <match src="type_name [50292,50296]" dest="type_name [14999,15003]"/>
  <match src="=: = [41476,41477]" dest="=: = [23580,23581]"/>
  <match src=",: , [13463,13464]" dest=",: , [18401,18402]"/>
  <match src="call_expression [89663,89697]" dest="call_expression [30423,30457]"/>
  <match src="type_name [97290,97297]" dest="type_name [38050,38057]"/>
  <match src="(: ( [87257,87258]" dest="(: ( [28017,28018]"/>
  <match src="event_definition [49150,49225]" dest="event_definition [13857,13932]"/>
  <match src="function_body [27920,28227]" dest="function_body [41298,41605]"/>
  <match src="(: ( [7210,7211]" dest="(: ( [7774,7775]"/>
  <match src="yul_path [85354,85358]" dest="yul_path [70029,70033]"/>
  <match src=",: , [19736,19737]" dest=",: , [58252,58253]"/>
  <match src=",: , [77576,77577]" dest=",: , [57400,57401]"/>
  <match src="parameter [2558,2567]" dest="parameter [3122,3131]"/>
  <match src="bytes32: bytes32 [50206,50213]" dest="bytes32: bytes32 [14913,14920]"/>
  <match src="identifier: epoch [95447,95452]" dest="identifier: epoch [36207,36212]"/>
  <match src="identifier: div [77338,77341]" dest="identifier: value [65443,65448]"/>
  <match src="return: return [43305,43311]" dest="return: return [25409,25415]"/>
  <match src="public: public [91318,91324]" dest="public: public [32078,32084]"/>
  <match src="identifier: compareTo [9288,9297]" dest="identifier: compareTo [9852,9861]"/>
  <match src="expression_statement [75910,75925]" dest="expression_statement [52230,52245]"/>
  <match src="identifier: b [7285,7286]" dest="identifier: b [7849,7850]"/>
  <match src="identifier: reason [27881,27887]" dest="identifier: reason [41259,41265]"/>
  <match src=".: . [84774,84775]" dest=".: . [69449,69450]"/>
  <match src="binary_expression [35214,35220]" dest="binary_expression [48592,48598]"/>
  <match src="identifier: balance [93475,93482]" dest="identifier: balance [34235,34242]"/>
  <match src="identifier: owner [12337,12342]" dest="identifier: owner [17275,17280]"/>
  <match src="parameter [86525,86530]" dest="parameter [27285,27290]"/>
  <match src="return_statement [88238,88300]" dest="return_statement [28998,29060]"/>
  <match src="}: } [82215,82216]" dest="}: } [21837,21838]"/>
  <match src="type_name [92023,92027]" dest="type_name [32783,32787]"/>
  <match src="primitive_type [48245,48252]" dest="primitive_type [58709,58716]"/>
  <match src="parameter [9591,9607]" dest="parameter [10155,10171]"/>
  <match src="identifier: amount [21228,21234]" dest="identifier: amount [51892,51898]"/>
  <match src="?: ? [76776,76777]" dest="?: ? [64941,64942]"/>
  <match src="if_statement [33880,33931]" dest="if_statement [47258,47309]"/>
  <match src=".: . [90213,90214]" dest=".: . [30973,30974]"/>
  <match src="member_expression [10102,10109]" dest="member_expression [10666,10673]"/>
  <match src="public: public [47060,47066]" dest="public: public [19758,19764]"/>
  <match src="function_definition [91280,91407]" dest="function_definition [32040,32167]"/>
  <match src="member_expression [77510,77520]" dest="member_expression [66013,66023]"/>
  <match src="state_mutability [89280,89284]" dest="state_mutability [30040,30044]"/>
  <match src="primitive_type [3203,3210]" dest="primitive_type [3767,3774]"/>
  <match src="function_definition [89150,89244]" dest="function_definition [29910,30004]"/>
  <match src="uint256: uint256 [82342,82349]" dest="uint256: uint256 [21964,21971]"/>
  <match src="number_literal: 40 [35524,35526]" dest="number_literal: 40 [48902,48904]"/>
  <match src="function_definition [51301,51391]" dest="function_definition [16008,16098]"/>
  <match src="(: ( [78932,78933]" dest="(: ( [53461,53462]"/>
  <match src="parameter [18302,18320]" dest="parameter [11795,11812]"/>
  <match src="block_statement [33896,33931]" dest="block_statement [47274,47309]"/>
  <match src="uint256: uint256 [3276,3283]" dest="uint256: uint256 [3840,3847]"/>
  <match src="byte: byte [36663,36667]" dest="byte: byte [50041,50045]"/>
  <match src="identifier: LibEIP712 [45197,45206]" dest="identifier: transferFrom [51347,51359]"/>
  <match src="identifier: totalBonded [68595,68606]" dest="identifier: newSupply [60704,60713]"/>
  <match src="type_name [1290,1297]" dest="type_name [1854,1861]"/>
  <match src="primitive_type [93876,93882]" dest="primitive_type [34636,34642]"/>
  <match src="parameter [94914,94928]" dest="parameter [35674,35688]"/>
  <match src="type_name [75694,75701]" dest="type_name [70966,70973]"/>
  <match src="call_expression [76378,76464]" dest="call_expression [65518,65562]"/>
  <match src="parameter [51268,51280]" dest="parameter [15975,15987]"/>
  <match src="parameter [7457,7466]" dest="parameter [8021,8030]"/>
  <match src="identifier: balance [95043,95050]" dest="identifier: balance [35803,35810]"/>
  <match src="primitive_type [8216,8222]" dest="primitive_type [8780,8786]"/>
  <match src="memory: memory [94654,94660]" dest="memory: memory [35414,35420]"/>
  <match src="primitive_type [96552,96559]" dest="primitive_type [37312,37319]"/>
  <match src="indexed: indexed [75419,75426]" dest="indexed: indexed [74661,74668]"/>
  <match src="{: { [90611,90612]" dest="{: { [31371,31372]"/>
  <match src="identifier: _state [91909,91915]" dest="identifier: _state [32669,32675]"/>
  <match src="string: string [27979,27985]" dest="string: string [41357,41363]"/>
  <match src="type_name [9521,9525]" dest="type_name [10085,10089]"/>
  <match src="function_definition [42498,42611]" dest="function_definition [24602,24715]"/>
  <match src="primitive_type [84123,84130]" dest="primitive_type [68798,68805]"/>
  <match src="call_argument [8515,8563]" dest="call_argument [9079,9127]"/>
  <match src="primitive_type [36663,36667]" dest="primitive_type [50041,50045]"/>
  <match src="expression_statement [61178,61297]" dest="expression_statement [73105,73297]"/>
  <match src="member_expression [72328,72339]" dest="member_expression [55960,55971]"/>
  <match src="{: { [42565,42566]" dest="{: { [24669,24670]"/>
  <match src="unary_expression [28384,28389]" dest="unary_expression [41762,41767]"/>
  <match src="bool: bool [8987,8991]" dest="bool: bool [9551,9555]"/>
  <match src="struct: struct [82528,82534]" dest="struct: struct [22150,22156]"/>
  <match src="(: ( [87177,87178]" dest="(: ( [27937,27938]"/>
  <match src="primitive_type [93731,93738]" dest="primitive_type [34491,34498]"/>
  <match src="primitive_type [49468,49473]" dest="primitive_type [14175,14180]"/>
  <match src="type_name [96535,96542]" dest="type_name [37295,37302]"/>
  <match src="identifier: account [75370,75377]" dest="identifier: account [63842,63849]"/>
  <match src="return: return [87721,87727]" dest="return: return [28481,28487]"/>
  <match src="member_expression [46101,46113]" dest="member_expression [53611,53623]"/>
  <match src="identifier: input [36863,36868]" dest="identifier: input [50241,50246]"/>
  <match src="comment: /*     Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [58192,58820]" dest="comment: /*     Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [26158,26786]"/>
  <match src="identifier: msg [77510,77513]" dest="identifier: msg [66013,66016]"/>
  <match src="): ) [86598,86599]" dest="): ) [27358,27359]"/>
  <match src="returns: returns [51138,51145]" dest="returns: returns [15845,15852]"/>
  <match src="): ) [32734,32735]" dest="): ) [46112,46113]"/>
  <match src="contract: contract [86027,86035]" dest="contract: contract [26787,26795]"/>
  <match src="identifier: _state [87106,87112]" dest="identifier: _state [27866,27872]"/>
  <match src="identifier: D256 [5914,5918]" dest="identifier: D256 [6478,6482]"/>
  <match src="identifier: require [21106,21113]" dest="identifier: decrementBalanceOfCoupons [57682,57707]"/>
  <match src="member_expression [78914,78970]" dest="member_expression [53443,53497]"/>
  <match src="call_argument [28099,28104]" dest="call_argument [41477,41482]"/>
  <match src="): ) [99988,99989]" dest="): ) [62345,62346]"/>
  <match src="function: function [88547,88555]" dest="function: function [29307,29315]"/>
  <match src="(: ( [8679,8680]" dest="(: ( [9243,9244]"/>
  <match src="identifier: D256 [7868,7872]" dest="identifier: D256 [8432,8436]"/>
  <match src="return: return [8305,8311]" dest="return: return [8869,8875]"/>
  <match src="identifier: _state [91093,91099]" dest="identifier: _state [31853,31859]"/>
  <match src="identifier: balance [81740,81747]" dest="identifier: balance [21362,21369]"/>
  <match src="pragma: pragma [0,6]" dest="pragma: pragma [0,6]"/>
  <match src="return: return [9537,9543]" dest="return: return [10101,10107]"/>
  <match src="primitive_type [30076,30083]" dest="primitive_type [43454,43461]"/>
  <match src="identifier: amount [16998,17004]" dest="identifier: amount [54226,54232]"/>
  <match src="(: ( [76405,76406]" dest="(: ( [65542,65543]"/>
  <match src="bytes32: bytes32 [99863,99870]" dest="bytes32: bytes32 [62220,62227]"/>
  <match src="type_name [29541,29548]" dest="type_name [42919,42926]"/>
  <match src="{: { [33157,33158]" dest="{: { [46535,46536]"/>
  <match src="type_name [36609,36616]" dest="type_name [49987,49994]"/>
  <match src="contract_body [83898,85396]" dest="contract_body [68573,70071]"/>
  <match src="bytes32: bytes32 [60415,60422]" dest="bytes32: bytes32 [55072,55079]"/>
  <match src="uint256: uint256 [81765,81772]" dest="uint256: uint256 [21387,21394]"/>
  <match src="array_access [91093,91121]" dest="array_access [31853,31881]"/>
  <match src="&quot;: &quot; [78308,78309]" dest="&quot;: &quot; [71866,71867]"/>
  <match src="bytes: bytes [34165,34170]" dest="bytes: bytes [47543,47548]"/>
  <match src="identifier: _state [90766,90772]" dest="identifier: _state [31526,31532]"/>
  <match src="call_argument [78713,78744]" dest="call_argument [57817,57829]"/>
  <match src="call_argument [2633,2634]" dest="call_argument [3197,3198]"/>
  <match src="indexed: indexed [13970,13977]" dest="indexed: indexed [18908,18915]"/>
  <match src="identifier: value [8721,8726]" dest="identifier: value [9285,9290]"/>
  <match src="string [19803,19842]" dest="string [58334,58381]"/>
  <match src="{: { [75782,75783]" dest="{: { [64354,64355]"/>
  <match src="visibility [93449,93457]" dest="visibility [34209,34217]"/>
  <match src="identifier: reason [30404,30410]" dest="identifier: reason [43782,43788]"/>
  <match src="identifier: token1 [48575,48581]" dest="identifier: to [55530,55532]"/>
  <match src="expression_statement [75792,75847]" dest="expression_statement [64364,64420]"/>
  <match src="): ) [84425,84426]" dest="): ) [69100,69101]"/>
  <match src="identifier: CHAIN_ID [44035,44043]" dest="identifier: CHAIN_ID [26139,26147]"/>
  <match src="): ) [94208,94209]" dest="): ) [34968,34969]"/>
  <match src="primitive_type [27714,27721]" dest="primitive_type [41092,41099]"/>
  <match src="]: ] [36008,36009]" dest="]: ] [49386,49387]"/>
  <match src="constant: constant [41447,41455]" dest="constant: constant [23551,23559]"/>
  <match src="type_name [91846,91853]" dest="type_name [32606,32613]"/>
  <match src="type_name [16510,16517]" dest="type_name [53767,53774]"/>
  <match src="state_mutability [50723,50727]" dest="state_mutability [15430,15434]"/>
  <match src="identifier: i [90578,90579]" dest="identifier: i [31338,31339]"/>
  <match src="visibility [8649,8657]" dest="visibility [9213,9221]"/>
  <match src="expression_statement [17668,17705]" dest="expression_statement [58482,58570]"/>
  <match src="identifier: incrementApproveFor [97977,97996]" dest="identifier: incrementApproveFor [38737,38756]"/>
  <match src="identifier: Approval [13930,13938]" dest="identifier: Approval [18868,18876]"/>
  <match src="visibility [43986,43994]" dest="visibility [26090,26098]"/>
  <match src="comment: /**      * @dev Returns the amount of tokens owned by `account`.      */ [11593,11665]" dest="comment: /**      * @dev Returns the amount of tokens owned by `account`.      */ [16531,16603]"/>
  <match src="expression_statement [96415,96473]" dest="expression_statement [37175,37233]"/>
  <match src=".: . [88639,88640]" dest=".: . [29399,29400]"/>
  <match src="(: ( [92122,92123]" dest="(: ( [32882,32883]"/>
  <match src="uint256: uint256 [98016,98023]" dest="uint256: uint256 [38776,38783]"/>
  <match src=",: , [75659,75660]" dest=",: , [71128,71129]"/>
  <match src=".: . [93958,93959]" dest=".: . [34718,34719]"/>
  <match src="event: event [75280,75285]" dest="event: event [63752,63757]"/>
  <match src="expression_statement [95036,95094]" dest="expression_statement [35796,35854]"/>
  <match src=".: . [8110,8111]" dest=".: . [8674,8675]"/>
  <match src="call_argument [84788,84827]" dest="call_argument [69463,69502]"/>
  <match src="&quot;: &quot; [21271,21272]" dest="&quot;: &quot; [51943,51944]"/>
  <match src="identifier: stringify [29249,29258]" dest="identifier: stringify [42627,42636]"/>
  <match src="]: ] [98873,98874]" dest="]: ] [39633,39634]"/>
  <match src="memory: memory [33858,33864]" dest="memory: memory [47236,47242]"/>
  <match src="bool: bool [32018,32022]" dest="bool: bool [45396,45400]"/>
  <match src="+: + [34552,34553]" dest="+: + [47930,47931]"/>
  <match src="identifier: _state [89989,89995]" dest="identifier: _state [30749,30755]"/>
  <match src="primitive_type [75825,75832]" dest="primitive_type [64398,64405]"/>
  <match src="uint256: uint256 [3203,3210]" dest="uint256: uint256 [3767,3774]"/>
  <match src="parameter [91167,91184]" dest="parameter [31927,31944]"/>
  <match src="visibility [12361,12369]" dest="visibility [17299,17307]"/>
  <match src=".: . [68747,68748]" dest=".: . [60429,60430]"/>
  <match src="function_definition [9046,9173]" dest="function_definition [9610,9737]"/>
  <match src="uint256: uint256 [81884,81891]" dest="uint256: uint256 [21506,21513]"/>
  <match src="identifier: amount [21079,21085]" dest="identifier: amount [51809,51815]"/>
  <match src="{: { [91482,91483]" dest="{: { [32242,32243]"/>
  <match src="identifier: msg [77940,77943]" dest="identifier: msg [64851,64854]"/>
  <match src="return_type_definition [36654,36668]" dest="return_type_definition [50032,50046]"/>
  <match src="identifier: b [7825,7826]" dest="identifier: b [8389,8390]"/>
  <match src="identifier: epochs [90334,90340]" dest="identifier: epochs [31094,31100]"/>
  <match src="identifier: b [1997,1998]" dest="identifier: b [2561,2562]"/>
  <match src="return: return [9901,9907]" dest="return: return [10465,10471]"/>
  <match src="identifier: errorMessage [1253,1265]" dest="identifier: errorMessage [1817,1829]"/>
  <match src="uint8: uint8 [34535,34540]" dest="uint8: uint8 [47913,47918]"/>
  <match src="event_definition [75280,75334]" dest="event_definition [63752,63806]"/>
  <match src="identifier: sub [6830,6833]" dest="identifier: sub [7394,7397]"/>
  <match src="function_body [9641,9685]" dest="function_body [10205,10249]"/>
  <match src="return_statement [87197,87225]" dest="return_statement [27957,27985]"/>
  <match src="visibility [91586,91592]" dest="visibility [32346,32352]"/>
  <match src="member_expression [91633,91650]" dest="member_expression [32393,32410]"/>
  <match src="): ) [35560,35561]" dest="): ) [48938,48939]"/>
  <match src="member_expression [94540,94561]" dest="member_expression [35300,35321]"/>
  <match src="identifier: D256 [8476,8480]" dest="identifier: D256 [9040,9044]"/>
  <match src="}: } [95099,95100]" dest="}: } [35859,35860]"/>
  <match src="call_expression [68732,68747]" dest="call_expression [60408,60429]"/>
  <match src="return_statement [6567,6619]" dest="return_statement [7131,7183]"/>
  <match src="uint256: uint256 [80418,80425]" dest="uint256: uint256 [67240,67247]"/>
  <match src="(: ( [91800,91801]" dest="(: ( [32560,32561]"/>
  <match src="call_argument [77342,77369]" dest="call_argument [65453,65480]"/>
  <match src="function_body [90168,90232]" dest="function_body [30928,30992]"/>
  <match src="member_expression [90628,90656]" dest="member_expression [31388,31416]"/>
  <match src="identifier: supply [94824,94830]" dest="identifier: supply [35584,35590]"/>
  <match src="visibility [41895,41902]" dest="visibility [23999,24006]"/>
  <match src="identifier: amount [96092,96098]" dest="identifier: amount [36852,36858]"/>
  <match src="}: } [6806,6807]" dest="}: } [7370,7371]"/>
  <match src="state_mutability [8458,8462]" dest="state_mutability [9022,9026]"/>
  <match src="member_expression [95036,95057]" dest="member_expression [35796,35817]"/>
  <match src="enum: enum [81614,81618]" dest="enum: enum [21236,21240]"/>
  <match src="library_declaration [41256,44052]" dest="library_declaration [23360,26156]"/>
  <match src="primitive_type [75540,75547]" dest="primitive_type [63882,63889]"/>
  <match src="event: event [48517,48522]" dest="event: event [55471,55476]"/>
  <match src="emit_statement [75935,75967]" dest="emit_statement [64483,64515]"/>
  <match src="expression_statement [35517,35562]" dest="expression_statement [48895,48940]"/>
  <match src="(: ( [9119,9120]" dest="(: ( [9683,9684]"/>
  <match src="internal: internal [3253,3261]" dest="internal: internal [3817,3825]"/>
  <match src="type_cast_expression [48245,48256]" dest="type_cast_expression [58709,58720]"/>
  <match src="&quot;: &quot; [75267,75268]" dest="&quot;: &quot; [63736,63737]"/>
  <match src=".: . [97933,97934]" dest=".: . [38693,38694]"/>
  <match src="primitive_type [93568,93575]" dest="primitive_type [34328,34335]"/>
  <match src="identifier: impl [92154,92158]" dest="identifier: impl [32914,32918]"/>
  <match src="identifier: spender [49647,49654]" dest="identifier: spender [14354,14361]"/>
  <match src="type_name [43008,43020]" dest="type_name [25112,25124]"/>
  <match src="): ) [35988,35989]" dest="): ) [49366,49367]"/>
  <match src="identifier: b [7105,7106]" dest="identifier: b [7669,7670]"/>
  <match src="=: = [76654,76655]" dest="=: = [57317,57318]"/>
  <match src=".: . [96164,96165]" dest=".: . [36924,36925]"/>
  <match src="type_name [81757,81784]" dest="type_name [21379,21406]"/>
  <match src="identifier: totalSupply [87839,87850]" dest="identifier: totalSupply [28599,28610]"/>
  <match src="identifier: value [8540,8545]" dest="identifier: value [9104,9109]"/>
  <match src="(: ( [73728,73729]" dest="(: ( [54273,54274]"/>
  <match src="parameter [6086,6095]" dest="parameter [6650,6659]"/>
  <match src="pure: pure [6288,6292]" dest="pure: pure [6852,6856]"/>
  <match src="parameter [88110,88117]" dest="parameter [28870,28877]"/>
  <match src="): ) [6741,6742]" dest="): ) [7305,7306]"/>
  <match src="parameter [7813,7826]" dest="parameter [8377,8390]"/>
  <match src=".: . [7200,7201]" dest=".: . [7764,7765]"/>
  <match src="uint256: uint256 [98591,98598]" dest="uint256: uint256 [39351,39358]"/>
  <match src=",: , [45246,45247]" dest=",: , [51382,51383]"/>
  <match src="type_name [30761,30768]" dest="type_name [44139,44146]"/>
  <match src="identifier: chainId [38279,38286]" dest="identifier: epoch [58262,58267]"/>
  <match src="[: [ [97103,97104]" dest="[: [ [37863,37864]"/>
  <match src="member_expression [98850,98886]" dest="member_expression [39610,39646]"/>
  <match src="identifier: D256 [8003,8007]" dest="identifier: D256 [8567,8571]"/>
  <match src="primitive_type [3996,4003]" dest="primitive_type [4560,4567]"/>
  <match src="}: } [32751,32752]" dest="}: } [46129,46130]"/>
  <match src="identifier: Upgradeable [83877,83888]" dest="identifier: Upgradeable [68552,68563]"/>
  <match src="state_variable_declaration [27714,27751]" dest="state_variable_declaration [41092,41129]"/>
  <match src="identifier: Status [88808,88814]" dest="identifier: Status [29568,29574]"/>
  <match src="&lt;=: &lt;= [1319,1321]" dest="&lt;=: &lt;= [1883,1885]"/>
  <match src="state_mutability [43995,43999]" dest="state_mutability [26099,26103]"/>
  <match src="type_cast_expression [36012,36039]" dest="type_cast_expression [49390,49417]"/>
  <match src="for: for [86074,86077]" dest="for: for [26834,26837]"/>
  <match src="call_argument [79020,79047]" dest="call_argument [53567,53590]"/>
  <match src="address: address [99973,99980]" dest="address: address [62330,62337]"/>
  <match src="return_type_definition [33843,33865]" dest="return_type_definition [47221,47243]"/>
  <match src="function_body [42565,42611]" dest="function_body [24669,24715]"/>
  <match src="if_statement [88410,88479]" dest="if_statement [29170,29239]"/>
  <match src=".: . [76340,76341]" dest=".: . [64618,64619]"/>
  <match src="address: address [25705,25712]" dest="address: address [55396,55403]"/>
  <match src="uint256: uint256 [91207,91214]" dest="uint256: uint256 [31967,31974]"/>
  <match src="primitive_type [73924,73931]" dest="primitive_type [72759,72766]"/>
  <match src=".: . [77422,77423]" dest=".: . [65499,65500]"/>
  <match src="call_argument [2016,2026]" dest="call_argument [2580,2590]"/>
  <match src="type_name [98773,98780]" dest="type_name [39533,39540]"/>
  <match src="internal: internal [42870,42878]" dest="internal: internal [24974,24982]"/>
  <match src="return_type_definition [34749,34771]" dest="return_type_definition [48127,48149]"/>
  <match src="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      */ [3534,3967]" dest="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      */ [4098,4531]"/>
  <match src="}: } [93124,93125]" dest="}: } [33884,33885]"/>
  <match src="call_expression [100000,100131]" dest="call_expression [62357,62488]"/>
  <match src="comment: // 1.10 USDC [41485,41497]" dest="comment: // 1.10 USDC [23589,23601]"/>
  <match src="call_argument [46174,46183]" dest="call_argument [51459,51501]"/>
  <match src="=: = [27415,27416]" dest="=: = [40793,40794]"/>
  <match src="user_defined_type [8625,8629]" dest="user_defined_type [9189,9193]"/>
  <match src="array_access [95935,95974]" dest="array_access [36695,36734]"/>
  <match src="returns: returns [16050,16057]" dest="returns: returns [11611,11618]"/>
  <match src="): ) [19883,19884]" dest="): ) [58422,58423]"/>
  <match src="type_name [50847,50854]" dest="type_name [15554,15561]"/>
  <match src="visibility [59683,59691]" dest="visibility [56977,56985]"/>
  <match src="address: address [19703,19710]" dest="address: address [58219,58226]"/>
  <match src="(: ( [86324,86325]" dest="(: ( [27084,27085]"/>
  <match src=",: , [78276,78277]" dest=",: , [71318,71319]"/>
  <match src="parameter [804,811]" dest="parameter [1368,1375]"/>
  <match src="uint256: uint256 [75595,75602]" dest="uint256: uint256 [71071,71078]"/>
  <match src="): ) [100511,100512]" dest="): ) [62868,62869]"/>
  <match src="primitive_type [29014,29020]" dest="primitive_type [42392,42398]"/>
  <match src="binary_expression [395,400]" dest="binary_expression [959,964]"/>
  <match src="primitive_type [86736,86743]" dest="primitive_type [27496,27503]"/>
  <match src="private: private [25797,25804]" dest="private: private [53783,53790]"/>
  <match src="(: ( [35650,35651]" dest="(: ( [49028,49029]"/>
  <match src="call_argument [61204,61236]" dest="call_argument [73131,73236]"/>
  <match src="identifier: _state [95722,95728]" dest="identifier: _state [36482,36488]"/>
  <match src="uint256: uint256 [90602,90609]" dest="uint256: uint256 [31362,31369]"/>
  <match src="(: ( [94171,94172]" dest="(: ( [34931,34932]"/>
  <match src=".: . [97110,97111]" dest=".: . [37870,37871]"/>
  <match src="state_mutability [1276,1280]" dest="state_mutability [1840,1844]"/>
  <match src="call_argument [4063,4064]" dest="call_argument [4627,4628]"/>
  <match src="identifier: IOracle [82578,82585]" dest="identifier: IOracle [22200,22207]"/>
  <match src=",: , [31468,31469]" dest=",: , [44846,44847]"/>
  <match src="(: ( [79141,79142]" dest="(: ( [53509,53510]"/>
  <match src="parameter [96520,96533]" dest="parameter [37280,37293]"/>
  <match src="identifier: compareTo [9010,9019]" dest="identifier: compareTo [9574,9583]"/>
  <match src="identifier: period [97790,97796]" dest="identifier: period [38550,38556]"/>
  <match src="]: ] [96693,96694]" dest="]: ] [37453,37454]"/>
  <match src="member_expression [29677,29693]" dest="member_expression [43055,43071]"/>
  <match src="]: ] [95931,95932]" dest="]: ] [36691,36692]"/>
  <match src=".: . [6604,6605]" dest=".: . [7168,7169]"/>
  <match src="): ) [8828,8829]" dest="): ) [9392,9393]"/>
  <match src="function_definition [29453,30006]" dest="function_definition [42831,43384]"/>
  <match src=",: , [32027,32028]" dest=",: , [45405,45406]"/>
  <match src="type_name [98215,98221]" dest="type_name [38975,38981]"/>
  <match src="number_literal: 4 [36400,36401]" dest="number_literal: 4 [49778,49779]"/>
  <match src="return: return [9281,9287]" dest="return: return [9845,9851]"/>
  <match src="(: ( [93147,93148]" dest="(: ( [33907,33908]"/>
  <match src="memory: memory [8685,8691]" dest="memory: memory [9249,9255]"/>
  <match src="function_body [43295,43336]" dest="function_body [25399,25440]"/>
  <match src="identifier: Candidate [83025,83034]" dest="identifier: Candidate [22647,22656]"/>
  <match src="identifier: LPAREN [29217,29223]" dest="identifier: LPAREN [42595,42601]"/>
  <match src="identifier: msg [77566,77569]" dest="identifier: msg [57390,57393]"/>
  <match src="]: ] [97932,97933]" dest="]: ] [38692,38693]"/>
  <match src="using_directive [86091,86122]" dest="using_directive [26851,26882]"/>
  <match src="call_argument [94566,94572]" dest="call_argument [35326,35332]"/>
  <match src="user_defined_type [7148,7152]" dest="user_defined_type [7712,7716]"/>
  <match src="visibility [3253,3261]" dest="visibility [3817,3825]"/>
  <match src="primitive_type [50206,50213]" dest="primitive_type [14913,14920]"/>
  <match src="): ) [32203,32204]" dest="): ) [45581,45582]"/>
  <match src="primitive_type [91699,91706]" dest="primitive_type [32459,32466]"/>
  <match src="(: ( [25704,25705]" dest="(: ( [55395,55396]"/>
  <match src="): ) [76734,76735]" dest="): ) [64934,64935]"/>
  <match src="comment: // addresses are &quot;0x&quot; followed by 20 bytes of data which take up 2 characters each [34823,34905]" dest="comment: // addresses are &quot;0x&quot; followed by 20 bytes of data which take up 2 characters each [48201,48283]"/>
  <match src="visibility [51452,51460]" dest="visibility [16159,16167]"/>
  <match src="pure: pure [28361,28365]" dest="pure: pure [41739,41743]"/>
  <match src="type_name [85279,85286]" dest="type_name [69954,69961]"/>
  <match src="identifier: must [31588,31592]" dest="identifier: must [44966,44970]"/>
  <match src="parameter [90301,90308]" dest="parameter [31061,31068]"/>
  <match src="call_argument [29134,29139]" dest="call_argument [42512,42517]"/>
  <match src="identifier: add [94562,94565]" dest="identifier: add [35322,35325]"/>
  <match src="pure: pure [7490,7494]" dest="pure: pure [8054,8058]"/>
  <match src="(: ( [92022,92023]" dest="(: ( [32782,32783]"/>
  <match src="yul_path [33587,33593]" dest="yul_path [46965,46971]"/>
  <match src="call_argument [78019,78023]" dest="call_argument [53858,53862]"/>
  <match src="primitive_type [87385,87392]" dest="primitive_type [28145,28152]"/>
  <match src=",: , [12342,12343]" dest=",: , [17280,17281]"/>
  <match src="call_argument [35024,35034]" dest="call_argument [48402,48412]"/>
  <match src="return_type_definition [16050,16067]" dest="return_type_definition [11611,11628]"/>
  <match src="}: } [10143,10144]" dest="}: } [10707,10708]"/>
  <match src="call_argument [85206,85267]" dest="call_argument [69881,69942]"/>
  <match src="identifier: Require [79068,79075]" dest="identifier: Require [72996,73003]"/>
  <match src="return_type_definition [6297,6318]" dest="return_type_definition [6861,6882]"/>
  <match src="bytes32: bytes32 [28834,28841]" dest="bytes32: bytes32 [42212,42219]"/>
  <match src="primitive_type [11976,11983]" dest="primitive_type [16914,16921]"/>
  <match src="primitive_type [29517,29524]" dest="primitive_type [42895,42902]"/>
  <match src="}: } [3527,3528]" dest="}: } [4091,4092]"/>
  <match src="parenthesized_expression [29631,29989]" dest="parenthesized_expression [43009,43367]"/>
  <match src="type_name [1217,1224]" dest="type_name [1781,1788]"/>
  <match src="identifier: a [834,835]" dest="identifier: a [1398,1399]"/>
  <match src="): ) [8439,8440]" dest="): ) [9003,9004]"/>
  <match src="=: = [99179,99180]" dest="=: = [39939,39940]"/>
  <match src="type_name [6843,6847]" dest="type_name [7407,7411]"/>
  <match src="identifier: value [7381,7386]" dest="identifier: value [7945,7950]"/>
  <match src="return_statement [36560,36574]" dest="return_statement [49938,49952]"/>
  <match src="view: view [87371,87375]" dest="view: view [28131,28135]"/>
  <match src=",: , [11993,11994]" dest=",: , [16931,16932]"/>
  <match src="user_defined_type [6843,6847]" dest="user_defined_type [7407,7411]"/>
  <match src="primitive_type [7277,7284]" dest="primitive_type [7841,7848]"/>
  <match src="): ) [43473,43474]" dest="): ) [25577,25578]"/>
  <match src="visibility [86715,86721]" dest="visibility [27475,27481]"/>
  <match src="function: function [50122,50130]" dest="function: function [14829,14837]"/>
  <match src="parameter [87281,87288]" dest="parameter [28041,28048]"/>
  <match src="identifier: coupons [90487,90494]" dest="identifier: coupons [31247,31254]"/>
  <match src="uint: uint [51268,51272]" dest="uint: uint [15975,15979]"/>
  <match src="identifier: epoch [90480,90485]" dest="identifier: epoch [31240,31245]"/>
  <match src="(: ( [91338,91339]" dest="(: ( [32098,32099]"/>
  <match src="type_name [43651,43658]" dest="type_name [25755,25762]"/>
  <match src="extcodesize: extcodesize [80905,80916]" dest="extcodesize: extcodesize [67727,67738]"/>
  <match src="identifier: burn [46917,46921]" dest="identifier: burn [19615,19619]"/>
  <match src="contract_declaration [82505,83061]" dest="contract_declaration [22127,22683]"/>
  <match src="primitive_type [91846,91853]" dest="primitive_type [32606,32613]"/>
  <match src="(: ( [75922,75923]" dest="(: ( [52242,52243]"/>
  <match src="parameter [13449,13463]" dest="parameter [18387,18401]"/>
  <match src="primitive_type [51096,51100]" dest="primitive_type [15803,15807]"/>
  <match src="member_expression [87307,87328]" dest="member_expression [28067,28088]"/>
  <match src="): ) [63155,63156]" dest="): ) [60818,60819]"/>
  <match src="call_argument [90047,90081]" dest="call_argument [30807,30841]"/>
  <match src="identifier: b [10022,10023]" dest="identifier: b [10586,10587]"/>
  <match src="solidity_version: 0.5.17 [17,23]" dest="solidity_version: 0.5.17 [17,23]"/>
  <match src="{: { [92940,92941]" dest="{: { [33700,33701]"/>
  <match src="state_mutability [89380,89384]" dest="state_mutability [30140,30144]"/>
  <match src="member_expression [91093,91127]" dest="member_expression [31853,31887]"/>
  <match src="array_access [91633,91661]" dest="array_access [32393,32421]"/>
  <match src=".: . [96156,96157]" dest=".: . [36916,36917]"/>
  <match src="identifier: _state [91365,91371]" dest="identifier: _state [32125,32131]"/>
  <match src="pure: pure [42879,42883]" dest="pure: pure [24983,24987]"/>
  <match src="identifier: totalBonded [68609,68620]" dest="identifier: totalBonded [53480,53491]"/>
  <match src="member_expression [75792,75812]" dest="member_expression [64364,64385]"/>
  <match src="state_mutability [86607,86611]" dest="state_mutability [27367,27371]"/>
  <match src="return_type_definition [51087,51101]" dest="return_type_definition [15794,15808]"/>
  <match src="call_expression [85147,85204]" dest="call_expression [69822,69879]"/>
  <match src="call_expression [6984,7036]" dest="call_expression [7548,7600]"/>
  <match src="(: ( [61601,61602]" dest="(: ( [61230,61231]"/>
  <match src="primitive_type [88898,88905]" dest="primitive_type [29658,29665]"/>
  <match src="primitive_type [48583,48590]" dest="primitive_type [55621,55628]"/>
  <match src="identifier: dollar [101985,101991]" dest="identifier: dollar [51836,51842]"/>
  <match src="identifier: payloadA [28888,28896]" dest="identifier: payloadA [42266,42274]"/>
  <match src="call_argument [9020,9024]" dest="call_argument [9584,9588]"/>
  <match src="identifier: msg [76406,76409]" dest="identifier: msg [65543,65546]"/>
  <match src="member_expression [94229,94243]" dest="member_expression [34989,35003]"/>
  <match src="state_mutability [90588,90592]" dest="state_mutability [31348,31352]"/>
  <match src="identifier: getEpochPeriod [42626,42640]" dest="identifier: getEpochPeriod [24730,24744]"/>
  <match src=".: . [97096,97097]" dest=".: . [37856,37857]"/>
  <match src="binary_expression [97365,97396]" dest="binary_expression [38125,38156]"/>
  <match src="return_statement [86458,86472]" dest="return_statement [27218,27232]"/>
  <match src="}: } [80957,80958]" dest="}: } [67779,67780]"/>
  <match src="function: function [96485,96493]" dest="function: function [37245,37253]"/>
  <match src="identifier: impl [92237,92241]" dest="identifier: impl [32997,33001]"/>
  <match src="call_argument [89582,89623]" dest="call_argument [30342,30383]"/>
  <match src="): ) [91346,91347]" dest="): ) [32106,32107]"/>
  <match src="indexed: indexed [13738,13745]" dest="indexed: indexed [18676,18683]"/>
  <match src="type_name [95804,95811]" dest="type_name [36564,36571]"/>
  <match src="type_name [4639,4645]" dest="type_name [5203,5209]"/>
  <match src="type_name [81884,81891]" dest="type_name [21506,21513]"/>
  <match src="call_argument [21920,21958]" dest="call_argument [57088,57119]"/>
  <match src="assignment_expression [96251,96303]" dest="assignment_expression [37011,37063]"/>
  <match src="uint256: uint256 [41431,41438]" dest="uint256: uint256 [23535,23542]"/>
  <match src="binary_expression [78238,78276]" dest="binary_expression [71293,71318]"/>
  <match src="variable_declaration_statement [98828,98887]" dest="variable_declaration_statement [39588,39647]"/>
  <match src="member_expression [93625,93646]" dest="member_expression [34385,34406]"/>
  <match src="primitive_type [59706,59710]" dest="primitive_type [73581,73585]"/>
  <match src="parameter [5995,6006]" dest="parameter [6559,6570]"/>
  <match src="parameter [27832,27841]" dest="parameter [41210,41219]"/>
  <match src=".: . [91639,91640]" dest=".: . [32399,32400]"/>
  <match src="visibility [42191,42198]" dest="visibility [24295,24302]"/>
  <match src="identifier: self [9658,9662]" dest="identifier: self [10222,10226]"/>
  <match src="primitive_type [36012,36016]" dest="primitive_type [49390,49394]"/>
  <match src="uint256: uint256 [11578,11585]" dest="uint256: uint256 [16516,16523]"/>
  <match src="member_expression [76071,76081]" dest="member_expression [65088,65098]"/>
  <match src="(: ( [32563,32564]" dest="(: ( [45941,45942]"/>
  <match src="type_name [50608,50615]" dest="type_name [15315,15322]"/>
  <match src="identifier: value [75588,75593]" dest="identifier: value [63930,63935]"/>
  <match src="member_expression [88962,89001]" dest="member_expression [29722,29761]"/>
  <match src="if: if [61665,61667]" dest="if: if [61463,61465]"/>
  <match src="identifier: Account [88702,88709]" dest="identifier: Account [29462,29469]"/>
  <match src=":: : [88822,88823]" dest=":: : [29582,29583]"/>
  <match src="[: [ [97922,97923]" dest="[: [ [38682,38683]"/>
  <match src="): ) [78868,78869]" dest="): ) [53397,53398]"/>
  <match src="state_mutability [89077,89081]" dest="state_mutability [29837,29841]"/>
  <match src="struct_declaration [82627,82796]" dest="struct_declaration [22249,22418]"/>
  <match src=".: . [86671,86672]" dest=".: . [27431,27432]"/>
  <match src="function: function [88312,88320]" dest="function: function [29072,29080]"/>
  <match src="uint: uint [51147,51151]" dest="uint: uint [15854,15858]"/>
  <match src="(: ( [86582,86583]" dest="(: ( [27342,27343]"/>
  <match src="primitive_type [98392,98399]" dest="primitive_type [39152,39159]"/>
  <match src="type_name [48112,48119]" dest="type_name [51303,51310]"/>
  <match src="(: ( [97345,97346]" dest="(: ( [38105,38106]"/>
  <match src="primitive_type [13987,13994]" dest="primitive_type [18925,18932]"/>
  <match src="{: { [21096,21097]" dest="{: { [51826,51827]"/>
  <match src="member_expression [88003,88034]" dest="member_expression [28763,28794]"/>
  <match src="return: return [87612,87618]" dest="return: return [28372,28378]"/>
  <match src="identifier: _state [95036,95042]" dest="identifier: _state [35796,35802]"/>
  <match src="call_argument [76933,76943]" dest="call_argument [65667,65677]"/>
  <match src="identifier: Transfer [13699,13707]" dest="identifier: Transfer [18637,18645]"/>
  <match src=".: . [98490,98491]" dest=".: . [39250,39251]"/>
  <match src="): ) [50688,50689]" dest="): ) [15395,15396]"/>
  <match src="): ) [43984,43985]" dest="): ) [26088,26089]"/>
  <match src="(: ( [97035,97036]" dest="(: ( [37795,37796]"/>
  <match src="}: } [90372,90373]" dest="}: } [31132,31133]"/>
  <match src="call_argument [100545,100566]" dest="call_argument [62902,62923]"/>
  <match src="type_name [94647,94653]" dest="type_name [35407,35413]"/>
  <match src="uint256: uint256 [82365,82372]" dest="uint256: uint256 [21987,21994]"/>
  <match src="): ) [77099,77100]" dest="): ) [65237,65238]"/>
  <match src="constant: constant [60431,60439]" dest="constant: constant [55088,55096]"/>
  <match src="view: view [91459,91463]" dest="view: view [32219,32223]"/>
  <match src="=: = [97788,97789]" dest="=: = [38548,38549]"/>
  <match src="type_name [82365,82372]" dest="type_name [21987,21994]"/>
  <match src="(: ( [33788,33789]" dest="(: ( [47166,47167]"/>
  <match src=",: , [50539,50540]" dest=",: , [15246,15247]"/>
  <match src="(: ( [94896,94897]" dest="(: ( [35656,35657]"/>
  <match src="private: private [41895,41902]" dest="private: private [23999,24006]"/>
  <match src="parameter [95852,95872]" dest="parameter [36612,36632]"/>
  <match src="call_expression [96047,96107]" dest="call_expression [36807,36867]"/>
  <match src="event: event [75339,75344]" dest="event: event [63811,63816]"/>
  <match src="return: return [93215,93221]" dest="return: return [33975,33981]"/>
  <match src="uint256: uint256 [82724,82731]" dest="uint256: uint256 [22346,22353]"/>
  <match src="function_definition [42717,42830]" dest="function_definition [24821,24934]"/>
  <match src="identifier: a [767,768]" dest="identifier: a [1331,1332]"/>
  <match src="call_expression [30545,30564]" dest="call_expression [43923,43942]"/>
  <match src="function_definition [9738,9953]" dest="function_definition [10302,10517]"/>
  <match src="): ) [21958,21959]" dest="): ) [57128,57129]"/>
  <match src="type_name [81856,81863]" dest="type_name [21478,21485]"/>
  <match src="(: ( [98725,98726]" dest="(: ( [39485,39486]"/>
  <match src="view: view [88096,88100]" dest="view: view [28856,28860]"/>
  <match src="call_argument [75960,75965]" dest="call_argument [64508,64513]"/>
  <match src=",: , [48557,48558]" dest=",: , [55512,55513]"/>
  <match src="parameter [90867,90871]" dest="parameter [31627,31631]"/>
  <match src="type_name [48583,48590]" dest="type_name [55621,55628]"/>
  <match src="identifier: _state [96609,96615]" dest="identifier: _state [37369,37375]"/>
  <match src="identifier: amount [98336,98342]" dest="identifier: amount [39096,39102]"/>
  <match src="internal: internal [43142,43150]" dest="internal: internal [25246,25254]"/>
  <match src="identifier: COLON [29134,29139]" dest="identifier: COLON [42512,42517]"/>
  <match src="memory: memory [8198,8204]" dest="memory: memory [8762,8768]"/>
  <match src="identifier: balance [93632,93639]" dest="identifier: balance [34392,34399]"/>
  <match src="return: return [86542,86548]" dest="return: return [27302,27308]"/>
  <match src="uint256: uint256 [34786,34793]" dest="uint256: uint256 [48164,48171]"/>
  <match src="identifier: self [8739,8743]" dest="identifier: self [9303,9307]"/>
  <match src="assignment_expression [96941,96986]" dest="assignment_expression [37701,37746]"/>
  <match src="array_access [34520,34527]" dest="array_access [47898,47905]"/>
  <match src="number_literal: 41 [35386,35388]" dest="number_literal: 41 [48764,48766]"/>
  <match src="uint256: uint256 [75997,76004]" dest="uint256: uint256 [64545,64552]"/>
  <match src="pure: pure [5977,5981]" dest="pure: pure [6541,6545]"/>
  <match src=",: , [13748,13749]" dest=",: , [18686,18687]"/>
  <match src="member_expression [96142,96156]" dest="member_expression [36902,36916]"/>
  <match src="identifier: sub [94283,94286]" dest="identifier: sub [35043,35046]"/>
  <match src="call_argument [93518,93524]" dest="call_argument [34278,34284]"/>
  <match src="): ) [100396,100397]" dest="): ) [62753,62754]"/>
  <match src="user_defined_type [6306,6310]" dest="user_defined_type [6870,6874]"/>
  <match src="): ) [49735,49736]" dest="): ) [14442,14443]"/>
  <match src="memory: memory [6658,6664]" dest="memory: memory [7222,7228]"/>
  <match src="identifier: i [33406,33407]" dest="identifier: i [46784,46785]"/>
  <match src="bytes32: bytes32 [35660,35667]" dest="bytes32: bytes32 [49038,49045]"/>
  <match src="identifier: self [8535,8539]" dest="identifier: self [9099,9103]"/>
  <match src="function: function [51301,51309]" dest="function: function [16008,16016]"/>
  <match src=".: . [75799,75800]" dest=".: . [64372,64373]"/>
  <match src="): ) [30834,30835]" dest="): ) [44212,44213]"/>
  <match src="=: = [41421,41422]" dest="=: = [23525,23526]"/>
  <match src="address: address [29541,29548]" dest="address: address [42919,42926]"/>
  <match src="returns: returns [49670,49677]" dest="returns: returns [14377,14384]"/>
  <match src="returns: returns [11569,11576]" dest="returns: returns [16507,16514]"/>
  <match src="type_name [93148,93155]" dest="type_name [33908,33915]"/>
  <match src="type_name [49165,49172]" dest="type_name [13872,13879]"/>
  <match src="): ) [31939,31940]" dest="): ) [45317,45318]"/>
  <match src="member_expression [91633,91668]" dest="member_expression [32393,32428]"/>
  <match src="]: ] [96274,96275]" dest="]: ] [37034,37035]"/>
  <match src="[: [ [35961,35962]" dest="[: [ [49339,49340]"/>
  <match src="=: = [62534,62535]" dest="=: = [59967,59968]"/>
  <match src="identifier: Deposit [75286,75293]" dest="identifier: Deposit [63758,63765]"/>
  <match src="string [78162,78191]" dest="string [72877,72892]"/>
  <match src="identifier: Withdraw [76220,76228]" dest="identifier: Withdraw [64755,64763]"/>
  <match src="state_variable_declaration [41296,41334]" dest="state_variable_declaration [23400,23438]"/>
  <match src="call_expression [77691,77779]" dest="call_expression [72641,72673]"/>
  <match src="private: private [9848,9855]" dest="private: private [10412,10419]"/>
  <match src="function: function [47909,47917]" dest="function: function [51033,51041]"/>
  <match src="parameter [50153,50168]" dest="parameter [14860,14875]"/>
  <match src="identifier: balance [95704,95711]" dest="identifier: balance [36464,36471]"/>
  <match src="}: } [28220,28221]" dest="}: } [41598,41599]"/>
  <match src="identifier: payloadA [29259,29267]" dest="identifier: payloadA [42637,42645]"/>
  <match src=",: , [31206,31207]" dest=",: , [44584,44585]"/>
  <match src="visibility [9242,9250]" dest="visibility [9806,9814]"/>
  <match src="identifier: input [34806,34811]" dest="identifier: input [48184,48189]"/>
  <match src="member_expression [97752,97769]" dest="member_expression [38512,38529]"/>
  <match src="variable_declaration [33433,33447]" dest="variable_declaration [46811,46825]"/>
  <match src="solidity_version_comparison_operator [15,17]" dest="solidity_version_comparison_operator [15,17]"/>
  <match src="comment: // all bytes are zero [33708,33729]" dest="comment: // all bytes are zero [47086,47107]"/>
  <match src="identifier: _state [96004,96010]" dest="identifier: _state [36764,36770]"/>
  <match src="[: [ [35052,35053]" dest="[: [ [48430,48431]"/>
  <match src="primitive_type [7097,7104]" dest="primitive_type [7661,7668]"/>
  <match src="call_argument [19803,19842]" dest="call_argument [58334,58381]"/>
  <match src="member_expression [96672,96711]" dest="member_expression [37432,37471]"/>
  <match src="number_literal: 1e6 [41837,41840]" dest="number_literal: 1e6 [23941,23944]"/>
  <match src="type_name [29517,29524]" dest="type_name [42895,42902]"/>
  <match src="return: return [9422,9428]" dest="return: return [9986,9992]"/>
  <match src="): ) [63228,63229]" dest="): ) [60846,60847]"/>
  <match src="{: { [89303,89304]" dest="{: { [30063,30064]"/>
  <match src="): ) [100443,100444]" dest="): ) [62800,62801]"/>
  <match src="identifier: D256 [63058,63062]" dest="identifier: D256 [61258,61262]"/>
  <match src="bytes32: bytes32 [75235,75242]" dest="bytes32: bytes32 [63704,63711]"/>
  <match src="primitive_type [19738,19745]" dest="primitive_type [58269,58276]"/>
  <match src="return_statement [89212,89238]" dest="return_statement [29972,29998]"/>
  <match src="}: } [97577,97578]" dest="}: } [38337,38338]"/>
  <match src="primitive_type [49213,49217]" dest="primitive_type [13920,13924]"/>
  <match src="identifier: D256 [5737,5741]" dest="identifier: D256 [6301,6305]"/>
  <match src="call_argument [78941,78945]" dest="call_argument [53470,53474]"/>
  <match src="address: address [49267,49274]" dest="address: address [13974,13981]"/>
  <match src="member_expression [98686,98725]" dest="member_expression [39446,39485]"/>
  <match src="identifier: balance [95316,95323]" dest="identifier: balance [36076,36083]"/>
  <match src="[: [ [35523,35524]" dest="[: [ [48901,48902]"/>
  <match src="identifier: candidate [91517,91526]" dest="identifier: candidate [32277,32286]"/>
  <match src="address: address [50322,50329]" dest="address: address [15029,15036]"/>
  <match src="}: } [64176,64177]" dest="}: } [56923,56924]"/>
  <match src="call_argument [68874,68881]" dest="call_argument [73720,73727]"/>
  <match src="primitive_type [93148,93155]" dest="primitive_type [33908,33915]"/>
  <match src="type_name [3985,3992]" dest="type_name [4549,4556]"/>
  <match src="(: ( [29693,29694]" dest="(: ( [43071,43072]"/>
  <match src="private: private [86136,86143]" dest="private: private [26896,26903]"/>
  <match src="call_argument [30590,30596]" dest="call_argument [43968,43974]"/>
  <match src=".: . [8743,8744]" dest=".: . [9307,9308]"/>
  <match src="parameter [50042,50049]" dest="parameter [14749,14756]"/>
  <match src="parameter [8853,8857]" dest="parameter [9417,9421]"/>
  <match src="}: } [98537,98538]" dest="}: } [39297,39298]"/>
  <match src="identifier: self [7263,7267]" dest="identifier: self [7827,7831]"/>
  <match src="state_mutability [43272,43276]" dest="state_mutability [25376,25380]"/>
  <match src="parameter [42666,42673]" dest="parameter [24770,24777]"/>
  <match src="): ) [89371,89372]" dest="): ) [30131,30132]"/>
  <match src="call_argument [89936,89970]" dest="call_argument [30696,30730]"/>
  <match src="}: } [6205,6206]" dest="}: } [6769,6770]"/>
  <match src="function: function [95387,95395]" dest="function: function [36147,36155]"/>
  <match src="identifier: msg [78256,78259]" dest="identifier: msg [71303,71306]"/>
  <match src="string [21920,21958]" dest="string [57088,57119]"/>
  <match src="visibility [87364,87370]" dest="visibility [28124,28130]"/>
  <match src="identifier: amount [20706,20712]" dest="identifier: amount [58174,58180]"/>
  <match src="parameter [73185,73192]" dest="parameter [52318,52325]"/>
  <match src="&amp;: &amp; [35545,35546]" dest="&amp;: &amp; [48923,48924]"/>
  <match src="type_name [82438,82462]" dest="type_name [22060,22084]"/>
  <match src="): ) [49985,49986]" dest="): ) [14692,14693]"/>
  <match src="type_name [58929,58933]" dest="type_name [20521,20525]"/>
  <match src="(: ( [95085,95086]" dest="(: ( [35845,35846]"/>
  <match src="constant: constant [41312,41320]" dest="constant: constant [23416,23424]"/>
  <match src="function: function [87763,87771]" dest="function: function [28523,28531]"/>
  <match src=".: . [96148,96149]" dest=".: . [36908,36909]"/>
  <match src="identifier: MINIMUM_LIQUIDITY [50641,50658]" dest="identifier: MINIMUM_LIQUIDITY [15348,15365]"/>
  <match src="comment: // ============ Core Methods ============ [9691,9732]" dest="comment: // ============ Core Methods ============ [10255,10296]"/>
  <match src="identifier: incrementTotalDebt [93712,93730]" dest="identifier: incrementTotalDebt [34472,34490]"/>
  <match src="function_definition [43232,43336]" dest="function_definition [25336,25440]"/>
  <match src="identifier: FILE [75260,75264]" dest="identifier: FILE [63729,63733]"/>
  <match src="&quot;: &quot; [86380,86381]" dest="&quot;: &quot; [27140,27141]"/>
  <match src="visibility [94930,94938]" dest="visibility [35690,35698]"/>
  <match src="uint256: uint256 [42257,42264]" dest="uint256: uint256 [24361,24368]"/>
  <match src="identifier: spender [50161,50168]" dest="identifier: spender [14868,14875]"/>
  <match src=".: . [87633,87634]" dest=".: . [28393,28394]"/>
  <match src="identifier: amount [95749,95755]" dest="identifier: amount [36509,36515]"/>
  <match src="identifier: require [25215,25222]" dest="identifier: decrementApproveFor [72287,72306]"/>
  <match src="array_access [35517,35535]" dest="array_access [48895,48913]"/>
  <match src="identifier: self [9221,9225]" dest="identifier: self [9785,9789]"/>
  <match src="binary_expression [88178,88194]" dest="binary_expression [28938,28954]"/>
  <match src="for_statement [7652,7731]" dest="for_statement [8216,8295]"/>
  <match src="internal: internal [8247,8255]" dest="internal: internal [8811,8819]"/>
  <match src="): ) [11585,11586]" dest="): ) [16523,16524]"/>
  <match src="type_name [92170,92177]" dest="type_name [32930,32937]"/>
  <match src="call_argument [94768,94774]" dest="call_argument [35528,35534]"/>
  <match src="(: ( [49525,49526]" dest="(: ( [14232,14233]"/>
  <match src="identifier: D256 [7977,7981]" dest="identifier: D256 [8541,8545]"/>
  <match src="array_access [98686,98714]" dest="array_access [39446,39474]"/>
  <match src="): ) [75837,75838]" dest="): ) [64410,64411]"/>
  <match src="comment: // ' &lt;' [27662,27669]" dest="comment: // ' &lt;' [41040,41047]"/>
  <match src="(: ( [42454,42455]" dest="(: ( [24558,24559]"/>
  <match src="type_name [49784,49791]" dest="type_name [14491,14498]"/>
  <match src="call_argument [34171,34177]" dest="call_argument [47549,47555]"/>
  <match src=",: , [8947,8948]" dest=",: , [9511,9512]"/>
  <match src="}: } [87538,87539]" dest="}: } [28298,28299]"/>
  <match src="): ) [9496,9497]" dest="): ) [10060,10061]"/>
  <match src="event: event [25687,25692]" dest="event: event [55373,55378]"/>
  <match src="comment: /**  * Utility library of inline functions on addresses  *  * Source https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-solidity/v2.1.3/contracts/utils/Address.sol  * This contract is copied here and renamed from the original to avoid clashes in the compiled artifacts  * when the user imports a zos-lib contract (that transitively causes this contract to be compiled and added to the  * build/artifacts folder) as well as the vanilla Address implementation from an openzeppelin version.  */ [79443,79943]" dest="comment: /**  * Utility library of inline functions on addresses  *  * Source https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-solidity/v2.1.3/contracts/utils/Address.sol  * This contract is copied here and renamed from the original to avoid clashes in the compiled artifacts  * when the user imports a zos-lib contract (that transitively causes this contract to be compiled and added to the  * build/artifacts folder) as well as the vanilla Address implementation from an openzeppelin version.  */ [66265,66765]"/>
  <match src="type_cast_expression [32243,32721]" dest="type_cast_expression [45621,46099]"/>
  <match src="returns: returns [8269,8276]" dest="returns: returns [8833,8840]"/>
  <match src="internal: internal [93898,93906]" dest="internal: internal [34658,34666]"/>
  <match src="identifier: reserve0 [50598,50606]" dest="identifier: reserve0 [15305,15313]"/>
  <match src="): ) [31097,31098]" dest="): ) [44475,44476]"/>
  <match src="): ) [8563,8564]" dest="): ) [9127,9128]"/>
  <match src="identifier: a [1930,1931]" dest="identifier: a [2494,2495]"/>
  <match src="primitive_type [10064,10071]" dest="primitive_type [10628,10635]"/>
  <match src="type_name [96215,96222]" dest="type_name [36975,36982]"/>
  <match src="identifier: D256 [8680,8684]" dest="identifier: D256 [9244,9248]"/>
  <match src="): ) [7212,7213]" dest="): ) [7776,7777]"/>
  <match src="primitive_type [88072,88079]" dest="primitive_type [28832,28839]"/>
  <match src="struct_member [82700,82715]" dest="struct_member [22322,22337]"/>
  <match src="call_argument [29800,29826]" dest="call_argument [43178,43204]"/>
  <match src="identifier: totalSupply [88178,88189]" dest="identifier: totalSupply [28938,28949]"/>
  <match src="member_expression [95060,95081]" dest="member_expression [35820,35841]"/>
  <match src="member_expression [95060,95074]" dest="member_expression [35820,35834]"/>
  <match src="(: ( [93674,93675]" dest="(: ( [34434,34435]"/>
  <match src="(: ( [90046,90047]" dest="(: ( [30806,30807]"/>
  <match src="member_expression [96415,96454]" dest="member_expression [37175,37214]"/>
  <match src="string [99895,99907]" dest="string [62252,62264]"/>
  <match src="identifier: _state [97905,97911]" dest="identifier: _state [38665,38671]"/>
  <match src="function_definition [49364,49420]" dest="function_definition [14071,14127]"/>
  <match src="return_statement [7561,7576]" dest="return_statement [8125,8140]"/>
  <match src=".: . [97555,97556]" dest=".: . [38315,38316]"/>
  <match src="parameter [49978,49985]" dest="parameter [14685,14692]"/>
  <match src="returns: returns [50101,50108]" dest="returns: returns [14808,14815]"/>
  <match src=".: . [97704,97705]" dest=".: . [38464,38465]"/>
  <match src="function_definition [50806,50856]" dest="function_definition [15513,15563]"/>
  <match src="call_expression [8728,8765]" dest="call_expression [9292,9329]"/>
  <match src="parameter [9818,9837]" dest="parameter [10382,10401]"/>
  <match src="pure: pure [43637,43641]" dest="pure: pure [25741,25745]"/>
  <match src=",: , [46983,46984]" dest=",: , [19681,19682]"/>
  <match src="): ) [29974,29975]" dest="): ) [43352,43353]"/>
  <match src="): ) [93094,93095]" dest="): ) [33854,33855]"/>
  <match src="[: [ [95229,95230]" dest="[: [ [35989,35990]"/>
  <match src="visibility [90138,90144]" dest="visibility [30898,30904]"/>
  <match src="visibility [93606,93614]" dest="visibility [34366,34374]"/>
  <match src="contract: contract [81591,81599]" dest="contract: contract [21213,21221]"/>
  <match src="(: ( [75293,75294]" dest="(: ( [63765,63766]"/>
  <match src="]: ] [91526,91527]" dest="]: ] [32286,32287]"/>
  <match src=".: . [95711,95712]" dest=".: . [36471,36472]"/>
  <match src="type_name [2603,2610]" dest="type_name [3167,3174]"/>
  <match src="primitive_type [12344,12351]" dest="primitive_type [17282,17289]"/>
  <match src="identifier: account [48005,48012]" dest="identifier: account [51122,51129]"/>
  <match src="&quot;: &quot; [19803,19804]" dest="&quot;: &quot; [58334,58335]"/>
  <match src="variable_declaration [34141,34158]" dest="variable_declaration [47519,47536]"/>
  <match src="number_literal: 1e20 [42144,42148]" dest="number_literal: 1e20 [24248,24252]"/>
  <match src="primitive_type [49405,49411]" dest="primitive_type [14112,14118]"/>
  <match src="): ) [95468,95469]" dest="): ) [36228,36229]"/>
  <match src="): ) [91074,91075]" dest="): ) [31834,31835]"/>
  <match src="identifier: provider [87211,87219]" dest="identifier: provider [27971,27979]"/>
  <match src="visibility [93747,93755]" dest="visibility [34507,34515]"/>
  <match src="true [99181,99185]" dest="true [39941,39945]"/>
  <match src="uint256: uint256 [98411,98418]" dest="uint256: uint256 [39171,39178]"/>
  <match src="): ) [88678,88679]" dest="): ) [29438,29439]"/>
  <match src="returns: returns [7859,7866]" dest="returns: returns [8423,8430]"/>
  <match src="parameter [28815,28824]" dest="parameter [42193,42202]"/>
  <match src="*: * [1995,1996]" dest="*: * [2559,2560]"/>
  <match src="indexed: indexed [49173,49180]" dest="indexed: indexed [13880,13887]"/>
  <match src="identifier: _state [87411,87417]" dest="identifier: _state [28171,28177]"/>
  <match src="&gt;: &gt; [88670,88671]" dest="&gt;: &gt; [29430,29431]"/>
  <match src="expression_statement [3361,3390]" dest="expression_statement [3925,3954]"/>
  <match src="member_expression [95489,95504]" dest="member_expression [36249,36264]"/>
  <match src="call_argument [22498,22536]" dest="call_argument [57225,57242]"/>
  <match src="visibility [43142,43150]" dest="visibility [25246,25254]"/>
  <match src="private: private [36633,36640]" dest="private: private [50011,50018]"/>
  <match src="state_mutability [6932,6936]" dest="state_mutability [7496,7500]"/>
  <match src="new: new [35890,35893]" dest="new: new [49268,49271]"/>
  <match src="function: function [58844,58852]" dest="function: function [20436,20444]"/>
  <match src="state_mutability [87688,87692]" dest="state_mutability [28448,28452]"/>
  <match src="(: ( [96300,96301]" dest="(: ( [37060,37061]"/>
  <match src="primitive_type [75507,75514]" dest="primitive_type [64020,64027]"/>
  <match src="indexed: indexed [75302,75309]" dest="indexed: indexed [63774,63781]"/>
  <match src="uint256: uint256 [30813,30820]" dest="uint256: uint256 [44191,44198]"/>
  <match src="identifier: shift [36483,36488]" dest="identifier: shift [49861,49866]"/>
  <match src="identifier: balanceOfBonded [68858,68873]" dest="identifier: balanceOf [73710,73719]"/>
  <match src="): ) [89098,89099]" dest="): ) [29858,29859]"/>
  <match src="view: view [50778,50782]" dest="view: view [15485,15489]"/>
  <match src="memory: memory [61641,61647]" dest="memory: memory [13060,13066]"/>
  <match src="uint256: uint256 [4690,4697]" dest="uint256: uint256 [5254,5261]"/>
  <match src=".: . [90908,90909]" dest=".: . [31668,31669]"/>
  <match src="yul_path [92237,92241]" dest="yul_path [32997,33001]"/>
  <match src="identifier: sub [93671,93674]" dest="identifier: sub [34431,34434]"/>
  <match src="member_expression [77045,77055]" dest="member_expression [65180,65190]"/>
  <match src="assignment_expression [97752,97796]" dest="assignment_expression [38512,38556]"/>
  <match src="primitive_type [63082,63089]" dest="primitive_type [60760,60767]"/>
  <match src="bytes32: bytes32 [28856,28863]" dest="bytes32: bytes32 [42234,42241]"/>
  <match src="identifier: value [7634,7639]" dest="identifier: value [8198,8203]"/>
  <match src=".: . [95050,95051]" dest=".: . [35810,35811]"/>
  <match src="call_argument [19799,19800]" dest="call_argument [58330,58331]"/>
  <match src="identifier: payloadC [32640,32648]" dest="identifier: payloadC [46018,46026]"/>
  <match src="return: return [36749,36755]" dest="return: return [50127,50133]"/>
  <match src="number_literal: 0 [80950,80951]" dest="number_literal: 0 [67772,67773]"/>
  <match src="function_definition [96891,96993]" dest="function_definition [37651,37753]"/>
  <match src="identifier: account [86663,86670]" dest="identifier: account [27423,27430]"/>
  <match src="array_access [96941,96963]" dest="array_access [37701,37723]"/>
  <match src="function_definition [50861,50970]" dest="function_definition [15568,15677]"/>
  <match src="(: ( [21823,21824]" dest="(: ( [57931,57932]"/>
  <match src="identifier: _state [87728,87734]" dest="identifier: _state [28488,28494]"/>
  <match src="type_name [330,337]" dest="type_name [894,901]"/>
  <match src="returns: returns [90731,90738]" dest="returns: returns [31491,31498]"/>
  <match src="primitive_type [12329,12336]" dest="primitive_type [17267,17274]"/>
  <match src="identifier: balance [94236,94243]" dest="identifier: balance [34996,35003]"/>
  <match src="identifier: slot [85287,85291]" dest="identifier: slot [69962,69966]"/>
  <match src="primitive_type [50847,50854]" dest="primitive_type [15554,15561]"/>
  <match src=".: . [87527,87528]" dest=".: . [28287,28288]"/>
  <match src="function_body [95204,95381]" dest="function_body [35964,36141]"/>
  <match src="returns: returns [86516,86523]" dest="returns: returns [27276,27283]"/>
  <match src="identifier: _state [96941,96947]" dest="identifier: _state [37701,37707]"/>
  <match src="function: function [49992,50000]" dest="function: function [14699,14707]"/>
  <match src="parameter [77209,77222]" dest="parameter [65822,65835]"/>
  <match src="expression_statement [19935,20027]" dest="expression_statement [52161,52220]"/>
  <match src="call_argument [48178,48187]" dest="call_argument [58605,58614]"/>
  <match src="call_struct_argument [6581,6615]" dest="call_struct_argument [7145,7179]"/>
  <match src="identifier: _state [97463,97469]" dest="identifier: _state [38223,38229]"/>
  <match src=",: , [25953,25954]" dest=",: , [72169,72170]"/>
  <match src="primitive_type [90740,90747]" dest="primitive_type [31500,31507]"/>
  <match src="primitive_type [91473,91480]" dest="primitive_type [32233,32240]"/>
  <match src="address: address [91983,91990]" dest="address: address [32743,32750]"/>
  <match src="identifier: Swap [50405,50409]" dest="identifier: Swap [15112,15116]"/>
  <match src="(: ( [73635,73636]" dest="(: ( [72602,72603]"/>
  <match src="(: ( [51095,51096]" dest="(: ( [15802,15803]"/>
  <match src="identifier: name [86297,86301]" dest="identifier: name [27057,27061]"/>
  <match src="[: [ [98312,98313]" dest="[: [ [39072,39073]"/>
  <match src="=: = [98482,98483]" dest="=: = [39242,39243]"/>
  <match src="]: ] [36350,36351]" dest="]: ] [49728,49729]"/>
  <match src="member_expression [90766,90793]" dest="member_expression [31526,31553]"/>
  <match src="type_name [3214,3221]" dest="type_name [3778,3785]"/>
  <match src="uint: uint [50524,50528]" dest="uint: uint [15231,15235]"/>
  <match src="return_type_definition [90150,90167]" dest="return_type_definition [30910,30927]"/>
  <match src="pure: pure [7850,7854]" dest="pure: pure [8414,8418]"/>
  <match src="uint256: uint256 [41296,41303]" dest="uint256: uint256 [23400,23407]"/>
  <match src="{: { [94219,94220]" dest="{: { [34979,34980]"/>
  <match src="memory: memory [9069,9075]" dest="memory: memory [9633,9639]"/>
  <match src="type_name [11578,11585]" dest="type_name [16516,16523]"/>
  <match src="call_argument [35978,35988]" dest="call_argument [49356,49366]"/>
  <match src="binary_expression [36533,36539]" dest="binary_expression [49911,49917]"/>
  <match src="state_mutability [49665,49669]" dest="state_mutability [14372,14376]"/>
  <match src="): ) [97516,97517]" dest="): ) [38276,38277]"/>
  <match src="enum_value: APPROVE [82284,82291]" dest="enum_value: APPROVE [21906,21913]"/>
  <match src="(: ( [73184,73185]" dest="(: ( [52317,52318]"/>
  <match src="type_name [96380,96387]" dest="type_name [37140,37147]"/>
  <match src="member_expression [6603,6608]" dest="member_expression [7167,7172]"/>
  <match src="uint256: uint256 [75492,75499]" dest="uint256: uint256 [64005,64012]"/>
  <match src="identifier: account [87947,87954]" dest="identifier: account [28707,28714]"/>
  <match src="return: return [90459,90465]" dest="return: return [31219,31225]"/>
  <match src="enum_value: UNDECIDED [82265,82274]" dest="enum_value: UNDECIDED [21887,21896]"/>
  <match src="identifier: sender [77630,77636]" dest="identifier: sender [57455,57461]"/>
  <match src="event_definition [84380,84427]" dest="event_definition [69055,69102]"/>
  <match src="primitive_type [48559,48566]" dest="primitive_type [55514,55521]"/>
  <match src="identifier: input [34270,34275]" dest="identifier: input [47648,47653]"/>
  <match src="function: function [50056,50064]" dest="function: function [14763,14771]"/>
  <match src="function_definition [68503,68996]" dest="function_definition [60254,60556]"/>
  <match src="[: [ [36006,36007]" dest="[: [ [49384,49385]"/>
  <match src="type_cast_expression [45272,45285]" dest="type_cast_expression [51369,51382]"/>
  <match src="call_argument [78644,78654]" dest="call_argument [58094,58104]"/>
  <match src="user_defined_type [101309,101320]" dest="user_defined_type [70742,70753]"/>
  <match src="uint256: uint256 [71202,71209]" dest="uint256: uint256 [52005,52012]"/>
  <match src="identifier: must [29605,29609]" dest="identifier: must [42983,42987]"/>
  <match src="(: ( [84689,84690]" dest="(: ( [69364,69365]"/>
  <match src="(: ( [77341,77342]" dest="(: ( [65452,65453]"/>
  <match src="primitive_type [94914,94921]" dest="primitive_type [35674,35681]"/>
  <match src="parameter [98180,98197]" dest="parameter [38940,38957]"/>
  <match src="identifier: Require [64212,64219]" dest="identifier: Require [73307,73314]"/>
  <match src=".: . [78922,78923]" dest=".: . [53451,53452]"/>
  <match src="number_literal: 0 [78004,78005]" dest="number_literal: 0 [53843,53844]"/>
  <match src="]: ] [88656,88657]" dest="]: ] [29416,29417]"/>
  <match src="function_definition [43855,43958]" dest="function_definition [25959,26062]"/>
  <match src=".: . [94113,94114]" dest=".: . [34873,34874]"/>
  <match src="identifier: amount [93812,93818]" dest="identifier: amount [34572,34578]"/>
  <match src="(: ( [47026,47027]" dest="(: ( [19724,19725]"/>
  <match src=".: . [96067,96068]" dest=".: . [36827,36828]"/>
  <match src="call_argument [24991,25024]" dest="call_argument [71523,71552]"/>
  <match src="(: ( [69100,69101]" dest="(: ( [71784,71785]"/>
  <match src="}: } [9039,9040]" dest="}: } [9603,9604]"/>
  <match src="identifier: value [13758,13763]" dest="identifier: value [18696,18701]"/>
  <match src="visibility [51422,51430]" dest="visibility [16129,16137]"/>
  <match src="visibility [62454,62461]" dest="visibility [13398,13405]"/>
  <match src="identifier: b [7391,7392]" dest="identifier: b [7955,7956]"/>
  <match src="parameter [51349,51359]" dest="parameter [16056,16066]"/>
  <match src="call_expression [84788,84827]" dest="call_expression [69463,69502]"/>
  <match src="identifier: reason [31091,31097]" dest="identifier: reason [44469,44475]"/>
  <match src=",: , [50168,50169]" dest=",: , [14875,14876]"/>
  <match src="[: [ [88018,88019]" dest="[: [ [28778,28779]"/>
  <match src="string: string [94188,94194]" dest="string: string [34948,34954]"/>
  <match src="primitive_type [6086,6093]" dest="primitive_type [6650,6657]"/>
  <match src="type_name [43165,43172]" dest="type_name [25269,25276]"/>
  <match src="identifier: recipient [93286,93295]" dest="identifier: recipient [34046,34055]"/>
  <match src="state_variable_declaration [60415,60456]" dest="state_variable_declaration [55072,55113]"/>
  <match src="variable_declaration [89413,89431]" dest="variable_declaration [30173,30191]"/>
  <match src="): ) [42782,42783]" dest="): ) [24886,24887]"/>
  <match src="function_body [90611,90675]" dest="function_body [31371,31435]"/>
  <match src="parameter [43008,43027]" dest="parameter [25112,25131]"/>
  <match src=".: . [11041,11042]" dest=".: . [58648,58649]"/>
  <match src="identifier: coupons [95960,95967]" dest="identifier: coupons [36720,36727]"/>
  <match src="external: external [11706,11714]" dest="external: external [16644,16652]"/>
  <match src="(: ( [89769,89770]" dest="(: ( [30529,30530]"/>
  <match src=",: , [50276,50277]" dest=",: , [14983,14984]"/>
  <match src="return: return [8503,8509]" dest="return: return [9067,9073]"/>
  <match src="type_name [77380,77387]" dest="type_name [56334,56341]"/>
  <match src="assignment_expression [99010,99056]" dest="assignment_expression [39770,39816]"/>
  <match src="): ) [49501,49502]" dest="): ) [14208,14209]"/>
  <match src="type_name [90265,90272]" dest="type_name [31025,31032]"/>
  <match src="primitive_type [51361,51366]" dest="primitive_type [16068,16073]"/>
  <match src="type_name [9209,9213]" dest="type_name [9773,9777]"/>
  <match src="yul_path [80897,80901]" dest="yul_path [67719,67723]"/>
  <match src="[: [ [36339,36340]" dest="[: [ [49717,49718]"/>
  <match src="): ) [9410,9411]" dest="): ) [9974,9975]"/>
  <match src="parameter [73924,73938]" dest="parameter [72759,72776]"/>
  <match src="member_expression [76229,76239]" dest="member_expression [64764,64774]"/>
  <match src="visibility [34728,34735]" dest="visibility [48106,48113]"/>
  <match src="identifier: value [76083,76088]" dest="identifier: balance [65100,65107]"/>
  <match src="function_definition [58873,58935]" dest="function_definition [20465,20527]"/>
  <match src="}: } [94131,94132]" dest="}: } [34891,34892]"/>
  <match src="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts with custom message when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      *      * _Available since v2.4.0._      */ [4106,4599]" dest="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts with custom message when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      *      * _Available since v2.4.0._      */ [4670,5163]"/>
  <match src="=: = [89432,89433]" dest="=: = [30192,30193]"/>
  <match src="string_literal [4066,4092]" dest="string_literal [4630,4656]"/>
  <match src="revert_statement [30897,31414]" dest="revert_statement [44275,44792]"/>
  <match src="identifier: _state [91633,91639]" dest="identifier: _state [32393,32399]"/>
  <match src="{: { [43029,43030]" dest="{: { [25133,25134]"/>
  <match src="call_argument [5919,5931]" dest="call_argument [6483,6495]"/>
  <match src="member_expression [77962,77974]" dest="member_expression [53801,53813]"/>
  <match src=".: . [96131,96132]" dest=".: . [36891,36892]"/>
  <match src="struct_declaration [82034,82141]" dest="struct_declaration [21656,21763]"/>
  <match src="call_argument [73587,73599]" dest="call_argument [57402,57414]"/>
  <match src="string: string [98215,98221]" dest="string: string [38975,38981]"/>
  <match src="member_expression [30262,30278]" dest="member_expression [43640,43656]"/>
  <match src="view: view [86419,86423]" dest="view: view [27179,27183]"/>
  <match src="member_expression [7196,7210]" dest="member_expression [7760,7774]"/>
  <match src="identifier: _state [95531,95537]" dest="identifier: _state [36291,36297]"/>
  <match src="identifier: value [76523,76528]" dest="identifier: value [65296,65301]"/>
  <match src="uint256: uint256 [3996,4003]" dest="uint256: uint256 [4560,4567]"/>
  <match src="state_mutability [35696,35700]" dest="state_mutability [49074,49078]"/>
  <match src="visibility [43739,43747]" dest="visibility [25843,25851]"/>
  <match src="identifier: must [28261,28265]" dest="identifier: must [41639,41643]"/>
  <match src="block_statement [36735,36798]" dest="block_statement [50113,50176]"/>
  <match src="): ) [31326,31327]" dest="): ) [44704,44705]"/>
  <match src="type_name [383,390]" dest="type_name [947,954]"/>
  <match src="call_argument [76883,76896]" dest="call_argument [65045,65058]"/>
  <match src="address: address [50254,50261]" dest="address: address [14961,14968]"/>
  <match src="{: { [82049,82050]" dest="{: { [21671,21672]"/>
  <match src="type_name [48559,48566]" dest="type_name [55514,55521]"/>
  <match src="identifier: div [7387,7390]" dest="identifier: div [7951,7954]"/>
  <match src="if_statement [28965,29441]" dest="if_statement [42343,42819]"/>
  <match src="array_access [96672,96720]" dest="array_access [37432,37480]"/>
  <match src="internal: internal [27898,27906]" dest="internal: internal [41276,41284]"/>
  <match src="identifier: sender [76128,76134]" dest="identifier: sender [64685,64691]"/>
  <match src="identifier: SafeMath [69,77]" dest="identifier: SafeMath [633,641]"/>
  <match src="call_expression [30262,30618]" dest="call_expression [43640,43996]"/>
  <match src="identifier: self [8943,8947]" dest="identifier: self [9507,9511]"/>
  <match src="identifier: SafeMath [5579,5587]" dest="identifier: SafeMath [6143,6151]"/>
  <match src="comment: /* Bonding */ [41769,41782]" dest="comment: /* Bonding */ [23873,23886]"/>
  <match src="user_defined_type [82853,82860]" dest="user_defined_type [22475,22482]"/>
  <match src="%: % [34557,34558]" dest="%: % [47935,47936]"/>
  <match src="identifier: sender [93270,93276]" dest="identifier: sender [34030,34036]"/>
  <match src=",: , [28870,28871]" dest=",: , [42248,42249]"/>
  <match src="uint256: uint256 [75735,75742]" dest="uint256: uint256 [64299,64306]"/>
  <match src="variable_declaration_statement [34914,34950]" dest="variable_declaration_statement [48292,48328]"/>
  <match src="identifier: totalNet [87772,87780]" dest="identifier: totalNet [28532,28540]"/>
  <match src="): ) [36627,36628]" dest="): ) [50005,50006]"/>
  <match src=",: , [13960,13961]" dest=",: , [18898,18899]"/>
  <match src="return_statement [86889,86898]" dest="return_statement [27649,27658]"/>
  <match src="return: return [64155,64161]" dest="return: return [56843,56849]"/>
  <match src="identifier: mul [6187,6190]" dest="identifier: mul [6751,6754]"/>
  <match src="returns: returns [87272,87279]" dest="returns: returns [28032,28039]"/>
  <match src="member_expression [88962,88977]" dest="member_expression [29722,29737]"/>
  <match src="{: { [93458,93459]" dest="{: { [34218,34219]"/>
  <match src="array_access [95248,95272]" dest="array_access [36008,36032]"/>
  <match src="&quot;: &quot; [22498,22499]" dest="&quot;: &quot; [57225,57226]"/>
  <match src="(: ( [63446,63447]" dest="(: ( [61339,61340]"/>
  <match src="emit_statement [76500,76530]" dest="emit_statement [73475,73510]"/>
  <match src="identifier: ASCII_RELATIVE_ZERO [27449,27468]" dest="identifier: ASCII_RELATIVE_ZERO [40827,40846]"/>
  <match src="(: ( [88602,88603]" dest="(: ( [29362,29363]"/>
  <match src="identifier: b [338,339]" dest="identifier: b [902,903]"/>
  <match src="}: } [89523,89524]" dest="}: } [30283,30284]"/>
  <match src="identifier: D256 [7787,7791]" dest="identifier: D256 [8351,8355]"/>
  <match src="call_argument [36017,36038]" dest="call_argument [49395,49416]"/>
  <match src="(: ( [36016,36017]" dest="(: ( [49394,49395]"/>
  <match src="function_definition [94347,94580]" dest="function_definition [35107,35340]"/>
  <match src="{: { [78,79]" dest="{: { [642,643]"/>
  <match src="identifier: D256 [6574,6578]" dest="identifier: D256 [7138,7142]"/>
  <match src="visibility [50228,50236]" dest="visibility [14935,14943]"/>
  <match src=",: , [48012,48013]" dest=",: , [51129,51130]"/>
  <match src="{: { [47989,47990]" dest="{: { [51098,51099]"/>
  <match src="identifier: Decimal [43762,43769]" dest="identifier: Decimal [25866,25873]"/>
  <match src="call_expression [77790,77804]" dest="call_expression [51750,51764]"/>
  <match src="(: ( [35023,35024]" dest="(: ( [48401,48402]"/>
  <match src="(: ( [83013,83014]" dest="(: ( [22635,22636]"/>
  <match src="): ) [78945,78946]" dest="): ) [53474,53475]"/>
  <match src="member_expression [88762,88777]" dest="member_expression [29522,29537]"/>
  <match src="identifier: msg [75813,75816]" dest="identifier: msg [64386,64389]"/>
  <match src="state_mutability [49454,49458]" dest="state_mutability [14161,14165]"/>
  <match src="primitive_type [73721,73728]" dest="primitive_type [54266,54273]"/>
  <match src="): ) [77590,77591]" dest="): ) [57414,57415]"/>
  <match src="function_body [6323,6386]" dest="function_body [6887,6950]"/>
  <match src="uint256: uint256 [35742,35749]" dest="uint256: uint256 [49120,49127]"/>
  <match src="call_expression [79130,79143]" dest="call_expression [53498,53511]"/>
  <match src="update_expression [36176,36179]" dest="update_expression [49554,49557]"/>
  <match src="primitive_type [92965,92972]" dest="primitive_type [33725,33732]"/>
  <match src="struct_declaration [81935,82028]" dest="struct_declaration [21557,21650]"/>
  <match src="): ) [90844,90845]" dest="): ) [31604,31605]"/>
  <match src="type_name [92146,92153]" dest="type_name [32906,32913]"/>
  <match src="member_expression [78212,78224]" dest="member_expression [71267,71279]"/>
  <match src="{: { [98041,98042]" dest="{: { [38801,38802]"/>
  <match src=",: , [49794,49795]" dest=",: , [14501,14502]"/>
  <match src="event: event [50311,50316]" dest="event: event [15018,15023]"/>
  <match src="): ) [84868,84869]" dest="): ) [69543,69544]"/>
  <match src="identifier: getBootstrappingPeriod [42845,42867]" dest="identifier: getBootstrappingPeriod [24949,24971]"/>
  <match src="view: view [89179,89183]" dest="view: view [29939,29943]"/>
  <match src="call_argument [91776,91785]" dest="call_argument [32536,32545]"/>
  <match src="returns: returns [8671,8678]" dest="returns: returns [9235,9242]"/>
  <match src="internal: internal [93449,93457]" dest="internal: internal [34209,34217]"/>
  <match src="(: ( [88109,88110]" dest="(: ( [28869,28870]"/>
  <match src="type_name [7787,7791]" dest="type_name [8351,8355]"/>
  <match src="=: = [42364,42365]" dest="=: = [24468,24469]"/>
  <match src="identifier: oracle [82586,82592]" dest="identifier: oracle [22208,22214]"/>
  <match src="{: { [98246,98247]" dest="{: { [39006,39007]"/>
  <match src="identifier: owner [96625,96630]" dest="identifier: owner [37385,37390]"/>
  <match src="type_name [97036,97043]" dest="type_name [37796,37803]"/>
  <match src="member_expression [95635,95675]" dest="member_expression [36395,36435]"/>
  <match src="memory: memory [63063,63069]" dest="memory: memory [61263,61269]"/>
  <match src="array_access [88003,88027]" dest="array_access [28763,28787]"/>
  <match src="identifier: epoch [69095,69100]" dest="identifier: epoch [71779,71784]"/>
  <match src="identifier: account [23124,23131]" dest="identifier: account [51635,51642]"/>
  <match src="{: { [30175,30176]" dest="{: { [43553,43554]"/>
  <match src=",: , [50204,50205]" dest=",: , [14911,14912]"/>
  <match src="(: ( [94759,94760]" dest="(: ( [35519,35520]"/>
  <match src="[: [ [92063,92064]" dest="[: [ [32823,32824]"/>
  <match src="call_expression [78619,78665]" dest="call_expression [58071,58122]"/>
  <match src="number_literal: 0 [88443,88444]" dest="number_literal: 0 [29203,29204]"/>
  <match src="function_definition [8145,8367]" dest="function_definition [8709,8931]"/>
  <match src="call_expression [89903,89971]" dest="call_expression [30663,30731]"/>
  <match src="address: address [73924,73931]" dest="address: address [72759,72766]"/>
  <match src="=: = [5672,5673]" dest="=: = [6236,6237]"/>
  <match src=":: : [6586,6587]" dest=":: : [7150,7151]"/>
  <match src="identifier: msg [77315,77318]" dest="identifier: msg [71921,71924]"/>
  <match src="member_expression [84757,84787]" dest="member_expression [69432,69462]"/>
  <match src="call_expression [79094,79101]" dest="call_expression [54048,54056]"/>
  <match src="primitive_type [32083,32090]" dest="primitive_type [45461,45468]"/>
  <match src="type_name [28834,28841]" dest="type_name [42212,42219]"/>
  <match src="): ) [30563,30564]" dest="): ) [43941,43942]"/>
  <match src="function_definition [95106,95381]" dest="function_definition [35866,36141]"/>
  <match src="identifier: totalBonded [88245,88256]" dest="identifier: totalBonded [29005,29016]"/>
  <match src="identifier: amount [93305,93311]" dest="identifier: amount [34065,34071]"/>
  <match src="state_mutability [89179,89183]" dest="state_mutability [29939,29943]"/>
  <match src="parameter [97997,98014]" dest="parameter [38757,38774]"/>
  <match src="function_body [96405,96479]" dest="function_body [37165,37239]"/>
  <match src=",: , [84853,84854]" dest=",: , [69528,69529]"/>
  <match src="identifier: owner [49181,49186]" dest="identifier: owner [13888,13893]"/>
  <match src="parameter [19738,19752]" dest="parameter [58269,58283]"/>
  <match src="identifier: a [3211,3212]" dest="identifier: a [3775,3776]"/>
  <match src="type_cast_expression [30921,31399]" dest="type_cast_expression [44299,44777]"/>
  <match src="identifier: encodePacked [30953,30965]" dest="identifier: encodePacked [44331,44343]"/>
  <match src="identifier: newImplementation [85186,85203]" dest="identifier: newImplementation [69861,69878]"/>
  <match src="identifier: ORACLE_RESERVE_MINIMUM [41718,41740]" dest="identifier: ORACLE_RESERVE_MINIMUM [23822,23844]"/>
  <match src="address: address [67988,67995]" dest="address: address [73542,73549]"/>
  <match src="uint256: uint256 [42775,42782]" dest="uint256: uint256 [24879,24886]"/>
  <match src="}: } [64327,64328]" dest="}: } [61550,61551]"/>
  <match src="{: { [89202,89203]" dest="{: { [29962,29963]"/>
  <match src="binary_expression [35579,35585]" dest="binary_expression [48957,48963]"/>
  <match src=".: . [99034,99035]" dest=".: . [39794,39795]"/>
  <match src="call_argument [36857,36891]" dest="call_argument [50235,50269]"/>
  <match src="}: } [82620,82621]" dest="}: } [22242,22243]"/>
  <match src="type_name [42021,42028]" dest="type_name [24125,24132]"/>
  <match src="(: ( [30903,30904]" dest="(: ( [44281,44282]"/>
  <match src="): ) [51217,51218]" dest="): ) [15924,15925]"/>
  <match src="member_expression [89812,89827]" dest="member_expression [30572,30587]"/>
  <match src="internal: internal [96232,96240]" dest="internal: internal [36992,37000]"/>
  <match src="(: ( [49164,49165]" dest="(: ( [13871,13872]"/>
  <match src="==: == [33890,33892]" dest="==: == [47268,47270]"/>
  <match src="): ) [7291,7292]" dest="): ) [7855,7856]"/>
  <match src="identifier: sender [77256,77262]" dest="identifier: sender [65899,65905]"/>
  <match src="function_body [94219,94309]" dest="function_body [34979,35069]"/>
  <match src="unary_expression [100481,100513]" dest="unary_expression [62838,62870]"/>
  <match src="call_struct_argument [6771,6805]" dest="call_struct_argument [7335,7369]"/>
  <match src="(: ( [90703,90704]" dest="(: ( [31463,31464]"/>
  <match src="(: ( [78605,78606]" dest="(: ( [73741,73742]"/>
  <match src="call_argument [94118,94124]" dest="call_argument [34878,34884]"/>
  <match src="parameter [63666,63673]" dest="parameter [56995,57002]"/>
  <match src="address: address [50072,50079]" dest="address: address [14779,14786]"/>
  <match src="identifier: token0 [50760,50766]" dest="identifier: token0 [15467,15473]"/>
  <match src="view: view [58965,58969]" dest="view: view [20557,20561]"/>
  <match src="modifier_invocation [101349,101360]" dest="modifier_invocation [74722,74733]"/>
  <match src="(: ( [95748,95749]" dest="(: ( [36508,36509]"/>
  <match src="): ) [89401,89402]" dest="): ) [30161,30162]"/>
  <match src="identifier: result [35613,35619]" dest="identifier: result [48991,48997]"/>
  <match src="uint256: uint256 [2569,2576]" dest="uint256: uint256 [3133,3140]"/>
  <match src="return_statement [88488,88535]" dest="return_statement [29248,29295]"/>
  <match src="using_directive [86059,86086]" dest="using_directive [26819,26846]"/>
  <match src="return: return [6567,6573]" dest="return: return [7131,7137]"/>
  <match src="state_mutability [4676,4680]" dest="state_mutability [5240,5244]"/>
  <match src="visibility [9383,9391]" dest="visibility [9947,9955]"/>
  <match src="member_expression [97698,97715]" dest="member_expression [38458,38475]"/>
  <match src="address: address [42455,42462]" dest="address: address [24559,24566]"/>
  <match src="identifier: sub [96721,96724]" dest="identifier: sub [37481,37484]"/>
  <match src="expression_statement [76475,76490]" dest="expression_statement [54341,54356]"/>
  <match src="return: return [89212,89218]" dest="return: return [29972,29978]"/>
  <match src="&gt;=: &gt;= [420,422]" dest="&gt;=: &gt;= [984,986]"/>
  <match src="identifier: lockedUntil [81892,81903]" dest="identifier: lockedUntil [21514,21525]"/>
  <match src="struct: struct [82802,82808]" dest="struct: struct [22424,22430]"/>
  <match src="identifier: that [45993,45997]" dest="identifier: that [57022,57026]"/>
  <match src="identifier: file [32332,32336]" dest="identifier: file [45710,45714]"/>
  <match src="number_literal: 0 [97570,97571]" dest="number_literal: 0 [38330,38331]"/>
  <match src="identifier: COMMA [31201,31206]" dest="identifier: COMMA [44579,44584]"/>
  <match src="function_body [31573,31989]" dest="function_body [44951,45367]"/>
  <match src="identifier: D256 [6171,6175]" dest="identifier: D256 [6735,6739]"/>
  <match src="identifier: debt [93781,93785]" dest="identifier: debt [34541,34545]"/>
  <match src="primitive_type [16510,16517]" dest="primitive_type [53767,53774]"/>
  <match src="): ) [7023,7024]" dest="): ) [7587,7588]"/>
  <match src="identifier: self [9439,9443]" dest="identifier: self [10003,10007]"/>
  <match src="call_argument [100496,100512]" dest="call_argument [62853,62869]"/>
  <match src="bool: bool [28256,28260]" dest="bool: bool [41634,41638]"/>
  <match src="!=: != [48242,48244]" dest="!=: != [58706,58708]"/>
  <match src=",: , [19983,19984]" dest=",: , [52186,52187]"/>
  <match src="array_access [36471,36489]" dest="array_access [49849,49867]"/>
  <match src="parameter [16990,17004]" dest="parameter [54218,54232]"/>
  <match src=",: , [31757,31758]" dest=",: , [45135,45136]"/>
  <match src="parameter [93860,93874]" dest="parameter [34620,34634]"/>
  <match src="pure: pure [33834,33838]" dest="pure: pure [47212,47216]"/>
  <match src="]: ] [95006,95007]" dest="]: ] [35766,35767]"/>
  <match src="parameter [42556,42563]" dest="parameter [24660,24667]"/>
  <match src="(: ( [88256,88257]" dest="(: ( [29016,29017]"/>
  <match src="user_defined_type [43762,43774]" dest="user_defined_type [25866,25878]"/>
  <match src="call_expression [35538,35561]" dest="call_expression [48916,48939]"/>
  <match src="function: function [51467,51475]" dest="function: function [16174,16182]"/>
  <match src="): ) [100575,100576]" dest="): ) [62932,62933]"/>
  <match src="primitive_type [9521,9525]" dest="primitive_type [10085,10089]"/>
  <match src="return_type_definition [89285,89302]" dest="return_type_definition [30045,30062]"/>
  <match src="identifier: reject [98513,98519]" dest="identifier: reject [39273,39279]"/>
  <match src="address: address [79112,79119]" dest="address: address [54062,54069]"/>
  <match src="visibility [43373,43381]" dest="visibility [25477,25485]"/>
  <match src="primitive_type [51268,51272]" dest="primitive_type [15975,15979]"/>
  <match src="string [86357,86381]" dest="string [27117,27141]"/>
  <match src="primitive_type [84855,84861]" dest="primitive_type [69530,69536]"/>
  <match src="event: event [75527,75532]" dest="event: event [63871,63876]"/>
  <match src=".: . [88838,88839]" dest=".: . [29598,29599]"/>
  <match src="]: ] [90647,90648]" dest="]: ] [31407,31408]"/>
  <match src="member_expression [97905,97939]" dest="member_expression [38665,38699]"/>
  <match src="(: ( [77974,77975]" dest="(: ( [53813,53814]"/>
  <match src="new_expression [34161,34170]" dest="new_expression [47539,47548]"/>
  <match src="parameter [88072,88087]" dest="parameter [28832,28847]"/>
  <match src="primitive_type [82116,82123]" dest="primitive_type [21738,21745]"/>
  <match src="uint256: uint256 [73352,73359]" dest="uint256: uint256 [74751,74758]"/>
  <match src="identifier: amount [48189,48195]" dest="identifier: amount [51384,51390]"/>
  <match src="identifier: Decimal [62508,62515]" dest="identifier: Decimal [59941,59948]"/>
  <match src="primitive_type [89413,89420]" dest="primitive_type [30173,30180]"/>
  <match src="(: ( [33883,33884]" dest="(: ( [47261,47262]"/>
  <match src="type_name [51203,51207]" dest="type_name [15910,15914]"/>
  <match src="identifier: value [7909,7914]" dest="identifier: value [8473,8478]"/>
  <match src="call_argument [78037,78064]" dest="call_argument [53876,53901]"/>
  <match src="call_argument [76241,76246]" dest="call_argument [64776,64781]"/>
  <match src="call_argument [36497,36514]" dest="call_argument [49875,49892]"/>
  <match src="identifier: FILE [64270,64274]" dest="identifier: FILE [73391,73395]"/>
  <match src="type_name [97644,97651]" dest="type_name [38404,38411]"/>
  <match src="visibility [49321,49329]" dest="visibility [14028,14036]"/>
  <match src="[: [ [35007,35008]" dest="[: [ [48385,48386]"/>
  <match src="=: = [95529,95530]" dest="=: = [36289,36290]"/>
  <match src="identifier: candidate [99156,99165]" dest="identifier: candidate [39916,39925]"/>
  <match src="=: = [35301,35302]" dest="=: = [48679,48680]"/>
  <match src="primitive_type [94172,94179]" dest="primitive_type [34932,34939]"/>
  <match src="view: view [86856,86860]" dest="view: view [27616,27620]"/>
  <match src="type_name [13063,13070]" dest="type_name [18001,18008]"/>
  <match src="identifier: MinterAdded [25693,25704]" dest="identifier: CouponRedemption [55379,55395]"/>
  <match src="member_expression [87830,87850]" dest="member_expression [28590,28610]"/>
  <match src=",: , [93276,93277]" dest=",: , [34036,34037]"/>
  <match src="identifier: add [95571,95574]" dest="identifier: add [36331,36334]"/>
  <match src="): ) [8359,8360]" dest="): ) [8923,8924]"/>
  <match src=".: . [62515,62516]" dest=".: . [59948,59949]"/>
  <match src="address: address [49188,49195]" dest="address: address [13895,13902]"/>
  <match src="identifier: Constants [76778,76787]" dest="identifier: Constants [64965,64974]"/>
  <match src="}: } [8130,8131]" dest="}: } [8694,8695]"/>
  <match src="function_definition [3972,4100]" dest="function_definition [4536,4664]"/>
  <match src="identifier: FOUR_BIT_MASK [35409,35422]" dest="identifier: FOUR_BIT_MASK [48787,48800]"/>
  <match src="&quot;: &quot; [61268,61269]" dest="&quot;: &quot; [73268,73269]"/>
  <match src="internal: internal [94041,94049]" dest="internal: internal [34801,34809]"/>
  <match src="memory: memory [8802,8808]" dest="memory: memory [9366,9372]"/>
  <match src="identifier: self [6998,7002]" dest="identifier: self [7562,7566]"/>
  <match src="function_definition [47013,47082]" dest="function_definition [19711,19780]"/>
  <match src="return_type_definition [92137,92159]" dest="return_type_definition [32897,32919]"/>
  <match src="identifier: a [1360,1361]" dest="identifier: a [1924,1925]"/>
  <match src="variable_declaration_statement [76701,76898]" dest="variable_declaration_statement [64904,65060]"/>
  <match src="identifier: pool [87150,87154]" dest="identifier: pool [27910,27914]"/>
  <match src="member_expression [92046,92086]" dest="member_expression [32806,32846]"/>
  <match src="variable_declaration [63134,63155]" dest="variable_declaration [60801,60818]"/>
  <match src="{: { [6323,6324]" dest="{: { [6887,6888]"/>
  <match src=".: . [96615,96616]" dest=".: . [37375,37376]"/>
  <match src="uint256: uint256 [82966,82973]" dest="uint256: uint256 [22588,22595]"/>
  <match src="identifier: this [79120,79124]" dest="identifier: this [54070,54074]"/>
  <match src="state_mutability [7850,7854]" dest="state_mutability [8414,8418]"/>
  <match src="primitive_type [21071,21078]" dest="primitive_type [51801,51808]"/>
  <match src="parameter [7277,7286]" dest="parameter [7841,7850]"/>
  <match src="parameter [8421,8434]" dest="parameter [8985,8998]"/>
  <match src="type_name [86525,86530]" dest="type_name [27285,27290]"/>
  <match src="call_argument [31041,31046]" dest="call_argument [44419,44424]"/>
  <match src="): ) [97205,97206]" dest="): ) [37965,37966]"/>
  <match src="identifier: add [95745,95748]" dest="identifier: add [36505,36508]"/>
  <match src="member_expression [95214,95245]" dest="member_expression [35974,36005]"/>
  <match src=",: , [95452,95453]" dest=",: , [36212,36213]"/>
  <match src=".: . [98519,98520]" dest=".: . [39279,39280]"/>
  <match src="}: } [98747,98748]" dest="}: } [39507,39508]"/>
  <match src="(: ( [31876,31877]" dest="(: ( [45254,45255]"/>
  <match src="memory: memory [9992,9998]" dest="memory: memory [10556,10562]"/>
  <match src="(: ( [99099,99100]" dest="(: ( [39859,39860]"/>
  <match src=".: . [96834,96835]" dest=".: . [37594,37595]"/>
  <match src="function_body [1698,2090]" dest="function_body [2262,2654]"/>
  <match src="&quot;: &quot; [4091,4092]" dest="&quot;: &quot; [4655,4656]"/>
  <match src=",: , [29903,29904]" dest=",: , [43281,43282]"/>
  <match src="unary_expression [30189,30194]" dest="unary_expression [43567,43572]"/>
  <match src="!=: != [100044,100046]" dest="!=: != [62401,62403]"/>
  <match src="type_name [6888,6894]" dest="type_name [7452,7458]"/>
  <match src="parameter [86736,86743]" dest="parameter [27496,27503]"/>
  <match src="visibility [84455,84461]" dest="visibility [69130,69136]"/>
  <match src="function_body [9891,9953]" dest="function_body [10455,10517]"/>
  <match src="(: ( [43515,43516]" dest="(: ( [25619,25620]"/>
  <match src="identifier: _state [89117,89123]" dest="identifier: _state [29877,29883]"/>
  <match src="identifier: msg [76124,76127]" dest="identifier: msg [64681,64684]"/>
  <match src="identifier: Require [78212,78219]" dest="identifier: Require [71267,71274]"/>
  <match src="function: function [7409,7417]" dest="function: function [7973,7981]"/>
  <match src="!: ! [32198,32199]" dest="!: ! [45576,45577]"/>
  <match src="function_body [84662,84920]" dest="function_body [69337,69595]"/>
  <match src="(: ( [46967,46968]" dest="(: ( [19665,19666]"/>
  <match src="}: } [87650,87651]" dest="}: } [28410,28411]"/>
  <match src="identifier: msg [78701,78704]" dest="identifier: msg [57805,57808]"/>
  <match src="returns: returns [49517,49524]" dest="returns: returns [14224,14231]"/>
  <match src=",: , [78130,78131]" dest=",: , [72845,72846]"/>
  <match src="return: return [4748,4754]" dest="return: return [5312,5318]"/>
  <match src="type_name [33980,33987]" dest="type_name [47358,47365]"/>
  <match src=",: , [4626,4627]" dest=",: , [5190,5191]"/>
  <match src="mapping: mapping [81802,81809]" dest="mapping: mapping [21424,21431]"/>
  <match src="type_name [50182,50186]" dest="type_name [14889,14893]"/>
  <match src="parameter [9209,9225]" dest="parameter [9773,9789]"/>
  <match src="(: ( [63213,63214]" dest="(: ( [60836,60837]"/>
  <match src="internal: internal [8830,8838]" dest="internal: internal [9394,9402]"/>
  <match src="uint256: uint256 [28906,28913]" dest="uint256: uint256 [42284,42291]"/>
  <match src="identifier: candidates [91640,91650]" dest="identifier: candidates [32400,32410]"/>
  <match src="identifier: start [91938,91943]" dest="identifier: start [32698,32703]"/>
  <match src="): ) [90609,90610]" dest="): ) [31369,31370]"/>
  <match src=".: . [75951,75952]" dest=".: . [64499,64500]"/>
  <match src="identifier: _approve [21815,21823]" dest="identifier: approveCoupons [57917,57931]"/>
  <match src="member_expression [6185,6190]" dest="member_expression [6749,6754]"/>
  <match src="): ) [9305,9306]" dest="): ) [9869,9870]"/>
  <match src="returns: returns [4681,4688]" dest="returns: returns [5245,5252]"/>
  <match src="identifier: COLON [27557,27562]" dest="identifier: COLON [40935,40940]"/>
  <match src="function_definition [93131,93234]" dest="function_definition [33891,33994]"/>
  <match src="primitive_type [98607,98613]" dest="primitive_type [39367,39373]"/>
  <match src="expression_statement [94516,94574]" dest="expression_statement [35276,35334]"/>
  <match src="): ) [78348,78349]" dest="): ) [71376,71377]"/>
  <match src="identifier: D256 [8599,8603]" dest="identifier: D256 [9163,9167]"/>
  <match src="): ) [85267,85268]" dest="): ) [69942,69943]"/>
  <match src="parameter [22922,22936]" dest="parameter [11576,11590]"/>
  <match src="uint256: uint256 [88110,88117]" dest="uint256: uint256 [28870,28877]"/>
  <match src="parameter [13484,13498]" dest="parameter [18422,18436]"/>
  <match src="identifier: spender [93156,93163]" dest="identifier: spender [33916,33923]"/>
  <match src=".: . [88831,88832]" dest=".: . [29591,29592]"/>
  <match src="identifier: target [9775,9781]" dest="identifier: target [10339,10345]"/>
  <match src=".: . [76035,76036]" dest=".: . [65376,65377]"/>
  <match src="identifier: mul [1640,1643]" dest="identifier: mul [2204,2207]"/>
  <match src="uint256: uint256 [77209,77216]" dest="uint256: uint256 [65822,65829]"/>
  <match src="(: ( [77169,77170]" dest="(: ( [66234,66235]"/>
  <match src="type_name [4628,4635]" dest="type_name [5192,5199]"/>
  <match src="function_definition [76542,77187]" dest="function_definition [64795,65309]"/>
  <match src="): ) [28342,28343]" dest="): ) [41720,41721]"/>
  <match src="identifier: balanceOfPhantom [77402,77418]" dest="identifier: balanceOf [65486,65495]"/>
  <match src="identifier: D256 [6463,6467]" dest="identifier: D256 [7027,7031]"/>
  <match src="uint256: uint256 [1644,1651]" dest="uint256: uint256 [2208,2215]"/>
  <match src="parameter [43165,43172]" dest="parameter [25269,25276]"/>
  <match src="primitive_type [32901,32906]" dest="primitive_type [46279,46284]"/>
  <match src="identifier: State [83072,83077]" dest="identifier: State [22694,22699]"/>
  <match src="new_expression [35890,35899]" dest="new_expression [49268,49277]"/>
  <match src="comment: /**      * Global      */ [86910,86935]" dest="comment: /**      * Global      */ [27670,27695]"/>
  <match src="call_argument [6345,6378]" dest="call_argument [6909,6942]"/>
  <match src="memory: memory [3232,3238]" dest="memory: memory [3796,3802]"/>
  <match src="call_struct_argument [43814,43840]" dest="call_struct_argument [25918,25944]"/>
  <match src="identifier: accounts [95255,95263]" dest="identifier: accounts [36015,36023]"/>
  <match src="assignment_expression [97698,97742]" dest="assignment_expression [38458,38502]"/>
  <match src="parameter [50684,50688]" dest="parameter [15391,15395]"/>
  <match src="identifier: spender [22115,22122]" dest="identifier: spender [58165,58172]"/>
  <match src="function_definition [5945,6057]" dest="function_definition [6509,6621]"/>
  <match src="&lt;: &lt; [35216,35217]" dest="&lt;: &lt; [48594,48595]"/>
  <match src="assignment_expression [93468,93525]" dest="assignment_expression [34228,34285]"/>
  <match src="primitive_type [97997,98004]" dest="primitive_type [38757,38764]"/>
  <match src="false [93354,93359]" dest="false [34114,34119]"/>
  <match src="parameter [96348,96361]" dest="parameter [37108,37121]"/>
  <match src="identifier: _state [91233,91239]" dest="identifier: _state [31993,31999]"/>
  <match src="parameter [7977,7993]" dest="parameter [8541,8557]"/>
  <match src=".: . [89742,89743]" dest=".: . [30502,30503]"/>
  <match src="variable_declaration [80418,80430]" dest="variable_declaration [67240,67252]"/>
  <match src="function_body [98638,98748]" dest="function_body [39398,39508]"/>
  <match src="]: ] [95611,95612]" dest="]: ] [36371,36372]"/>
  <match src="primitive_type [33433,33440]" dest="primitive_type [46811,46818]"/>
  <match src="identifier: input [36723,36728]" dest="identifier: input [50101,50106]"/>
  <match src="string [25243,25278]" dest="string [72326,72356]"/>
  <match src="primitive_type [34786,34793]" dest="primitive_type [48164,48171]"/>
  <match src=",: , [88896,88897]" dest=",: , [29656,29657]"/>
  <match src="primitive_type [9265,9269]" dest="primitive_type [9829,9833]"/>
  <match src="(: ( [96806,96807]" dest="(: ( [37566,37567]"/>
  <match src="(: ( [6344,6345]" dest="(: ( [6908,6909]"/>
  <match src="]: ] [96023,96024]" dest="]: ] [36783,36784]"/>
  <match src="string_literal [46174,46183]" dest="string_literal [51459,51501]"/>
  <match src="variable_declaration_tuple [63081,63156]" dest="variable_declaration_tuple [60759,60819]"/>
  <match src="call_argument [837,838]" dest="call_argument [1401,1402]"/>
  <match src="(: ( [36760,36761]" dest="(: ( [50138,50139]"/>
  <match src="): ) [8289,8290]" dest="): ) [8853,8854]"/>
  <match src=",: , [98409,98410]" dest=",: , [39169,39170]"/>
  <match src="identifier: bonded [82178,82184]" dest="identifier: bonded [21800,21806]"/>
  <match src="primitive_type [33798,33805]" dest="primitive_type [47176,47183]"/>
  <match src=".: . [45206,45207]" dest=".: . [51346,51347]"/>
  <match src="identifier: approve [91528,91535]" dest="identifier: approve [32288,32295]"/>
  <match src="state_mutability [36645,36649]" dest="state_mutability [50023,50027]"/>
  <match src="uint256: uint256 [87702,87709]" dest="uint256: uint256 [28462,28469]"/>
  <match src="pure: pure [49330,49334]" dest="pure: pure [14037,14041]"/>
  <match src="public: public [84455,84461]" dest="public: public [69130,69136]"/>
  <match src="uint: uint [50170,50174]" dest="uint: uint [14877,14881]"/>
  <match src="): ) [89970,89971]" dest="): ) [30730,30731]"/>
  <match src="(: ( [30322,30323]" dest="(: ( [43700,43701]"/>
  <match src="call_argument [95979,95985]" dest="call_argument [36739,36745]"/>
  <match src="): ) [29902,29903]" dest="): ) [43280,43281]"/>
  <match src="call_argument [34541,34562]" dest="call_argument [47919,47940]"/>
  <match src="identifier: totalBonded [78594,78605]" dest="identifier: totalBonded [73730,73741]"/>
  <match src="function_definition [5829,5939]" dest="function_definition [6393,6503]"/>
  <match src="state_mutability [52574,52578]" dest="state_mutability [13086,13090]"/>
  <match src="): ) [92000,92001]" dest="): ) [32760,32761]"/>
  <match src="address: address [87178,87185]" dest="address: address [27938,27945]"/>
  <match src="identifier: block [55076,55081]" dest="identifier: block [75157,75162]"/>
  <match src=".: . [94486,94487]" dest=".: . [35246,35247]"/>
  <match src="call_argument [100527,100531]" dest="call_argument [62884,62888]"/>
  <match src="type_name [47044,47051]" dest="type_name [19742,19749]"/>
  <match src="binary_expression [4755,4760]" dest="binary_expression [5319,5324]"/>
  <match src="): ) [78266,78267]" dest="): ) [71313,71314]"/>
  <match src="call_expression [29677,29957]" dest="call_expression [43055,43335]"/>
  <match src="visibility [35684,35691]" dest="visibility [49062,49069]"/>
  <match src="identifier: reason [31508,31514]" dest="identifier: reason [44886,44892]"/>
  <match src="type_name [73022,73029]" dest="type_name [55598,55605]"/>
  <match src="): ) [8962,8963]" dest="): ) [9526,9527]"/>
  <match src="identifier: ERC20 [15733,15738]" dest="identifier: Market [55004,55010]"/>
  <match src="member_expression [97463,97477]" dest="member_expression [38223,38237]"/>
  <match src="): ) [96807,96808]" dest="): ) [37567,37568]"/>
  <match src="identifier: start [81967,81972]" dest="identifier: start [21589,21594]"/>
  <match src="type_name [100239,100246]" dest="type_name [62596,62603]"/>
  <match src="comment: // Solidity only automatically asserts when dividing by 0 [3295,3352]" dest="comment: // Solidity only automatically asserts when dividing by 0 [3859,3916]"/>
  <match src="event_definition [50399,50574]" dest="event_definition [15106,15281]"/>
  <match src="=: = [36531,36532]" dest="=: = [49909,49910]"/>
  <match src="return_type_definition [43642,43659]" dest="return_type_definition [25746,25763]"/>
  <match src="): ) [28389,28390]" dest="): ) [41767,41768]"/>
  <match src="state_mutability [8260,8264]" dest="state_mutability [8824,8828]"/>
  <match src="primitive_type [94897,94904]" dest="primitive_type [35657,35664]"/>
  <match src="type_name [88110,88117]" dest="type_name [28870,28877]"/>
  <match src="function: function [76542,76550]" dest="function: function [64795,64803]"/>
  <match src="): ) [76950,76951]" dest="): ) [65144,65145]"/>
  <match src="}: } [30666,30667]" dest="}: } [44044,44045]"/>
  <match src="call_expression [7013,7024]" dest="call_expression [7577,7588]"/>
  <match src="): ) [49418,49419]" dest="): ) [14125,14126]"/>
  <match src="identifier: stringifyTruncated [28049,28067]" dest="identifier: stringifyTruncated [41427,41445]"/>
  <match src="identifier: char [35400,35404]" dest="identifier: char [48778,48782]"/>
  <match src="type_name [8987,8991]" dest="type_name [9551,9555]"/>
  <match src="member_expression [94540,94554]" dest="member_expression [35300,35314]"/>
  <match src="yul_assignment [80897,80925]" dest="yul_assignment [67719,67747]"/>
  <match src="primitive_type [49594,49598]" dest="primitive_type [14301,14305]"/>
  <match src="call_expression [28664,28683]" dest="call_expression [42042,42061]"/>
  <match src="identifier: transferFrom [49846,49858]" dest="identifier: transferFrom [14553,14565]"/>
  <match src="): ) [9607,9608]" dest="): ) [10171,10172]"/>
  <match src="for_statement [34285,34642]" dest="for_statement [47663,48020]"/>
  <match src="&quot;: &quot; [84825,84826]" dest="&quot;: &quot; [69500,69501]"/>
  <match src="): ) [51122,51123]" dest="): ) [15829,15830]"/>
  <match src="memory: memory [98614,98620]" dest="memory: memory [39374,39380]"/>
  <match src="identifier: candidate [91111,91120]" dest="identifier: candidate [31871,31880]"/>
  <match src="): ) [6614,6615]" dest="): ) [7178,7179]"/>
  <match src="call_expression [87857,87868]" dest="call_expression [28617,28628]"/>
  <match src="primitive_type [91567,91574]" dest="primitive_type [32327,32334]"/>
  <match src="primitive_type [34290,34297]" dest="primitive_type [47668,47675]"/>
  <match src=",: , [9781,9782]" dest=",: , [10345,10346]"/>
  <match src="type_name [29495,29502]" dest="type_name [42873,42880]"/>
  <match src="(: ( [9918,9919]" dest="(: ( [10482,10483]"/>
  <match src="identifier: self [9603,9607]" dest="identifier: self [10167,10171]"/>
  <match src="memory: memory [58921,58927]" dest="memory: memory [20513,20519]"/>
  <match src="identifier: balanceCheck [78757,78769]" dest="identifier: balanceCheck [54165,54177]"/>
  <match src=",: , [31886,31887]" dest=",: , [45264,45265]"/>
  <match src="visibility [95874,95882]" dest="visibility [36634,36642]"/>
  <match src="uint256: uint256 [67034,67041]" dest="uint256: uint256 [70779,70786]"/>
  <match src="): ) [31971,31972]" dest="): ) [45349,45350]"/>
  <match src="function_definition [6821,7043]" dest="function_definition [7385,7607]"/>
  <match src="variable_declaration [68697,68729]" dest="variable_declaration [60390,60405]"/>
  <match src="uint256: uint256 [93731,93738]" dest="uint256: uint256 [34491,34498]"/>
  <match src="call_argument [48396,48439]" dest="call_argument [58790,58828]"/>
  <match src="member_expression [75948,75958]" dest="member_expression [64496,64506]"/>
  <match src="): ) [9240,9241]" dest="): ) [9804,9805]"/>
  <match src="}: } [98144,98145]" dest="}: } [38904,38905]"/>
  <match src="{: { [99990,99991]" dest="{: { [62347,62348]"/>
  <match src="library: library [41256,41263]" dest="library: library [23360,23367]"/>
  <match src="identifier: Provide [78787,78794]" dest="identifier: Vote [72689,72693]"/>
  <match src="returns: returns [88101,88108]" dest="returns: returns [28861,28868]"/>
  <match src="}: } [23146,23147]" dest="}: } [51770,51771]"/>
  <match src="member_expression [89812,89847]" dest="member_expression [30572,30607]"/>
  <match src="identifier: greaterThan [8919,8930]" dest="identifier: greaterThan [9483,9494]"/>
  <match src="return: return [9136,9142]" dest="return: return [9700,9706]"/>
  <match src="function: function [11670,11678]" dest="function: function [16608,16616]"/>
  <match src="identifier: balanceOf [88263,88272]" dest="identifier: balanceOf [29023,29032]"/>
  <match src="number_literal: 0 [9309,9310]" dest="number_literal: 0 [9873,9874]"/>
  <match src="uint256: uint256 [48112,48119]" dest="uint256: uint256 [51303,51310]"/>
  <match src="{: { [7907,7908]" dest="{: { [8471,8472]"/>
  <match src=".: . [76990,76991]" dest=".: . [66138,66139]"/>
  <match src="identifier: _state [94809,94815]" dest="identifier: _state [35569,35575]"/>
  <match src="): ) [7159,7160]" dest="): ) [7723,7724]"/>
  <match src="primitive_type [84734,84739]" dest="primitive_type [69409,69414]"/>
  <match src="call_expression [29249,29268]" dest="call_expression [42627,42646]"/>
  <match src="): ) [100615,100616]" dest="): ) [62972,62973]"/>
  <match src="event_paramater [50475,50489]" dest="event_paramater [15182,15196]"/>
  <match src="internal: internal [97886,97894]" dest="internal: internal [38646,38654]"/>
  <match src="identifier: div [89578,89581]" dest="identifier: div [30338,30341]"/>
  <match src=".: . [78092,78093]" dest=".: . [72804,72805]"/>
  <match src="(: ( [93567,93568]" dest="(: ( [34327,34328]"/>
  <match src="primitive_type [41502,41509]" dest="primitive_type [23606,23613]"/>
  <match src="identifier: sender [73640,73646]" dest="identifier: sender [72607,72613]"/>
  <match src="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      * - Subtraction cannot overflow.      *      * _Available since v2.4.0._      */ [886,1199]" dest="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      * - Subtraction cannot overflow.      *      * _Available since v2.4.0._      */ [1450,1763]"/>
  <match src=".: . [88610,88611]" dest=".: . [29370,29371]"/>
  <match src="parameter [90555,90568]" dest="parameter [31315,31328]"/>
  <match src="type_name [11995,12002]" dest="type_name [16933,16940]"/>
  <match src="parameter [7071,7087]" dest="parameter [7635,7651]"/>
  <match src=".: . [94243,94244]" dest=".: . [35003,35004]"/>
  <match src="primitive_type [78379,78386]" dest="primitive_type [60801,60808]"/>
  <match src="parameter [97663,97677]" dest="parameter [38423,38437]"/>
  <match src="primitive_type [87977,87984]" dest="primitive_type [28737,28744]"/>
  <match src="memory: memory [93591,93597]" dest="memory: memory [34351,34357]"/>
  <match src="identifier: decrementBalanceOfStaged [95115,95139]" dest="identifier: decrementBalanceOfStaged [35875,35899]"/>
  <match src="array_access [96609,96657]" dest="array_access [37369,37417]"/>
  <match src="expression_statement [76190,76205]" dest="expression_statement [52077,52092]"/>
  <match src="bool: bool [92023,92027]" dest="bool: bool [32783,32787]"/>
  <match src="binary_expression [36359,36376]" dest="binary_expression [49737,49754]"/>
  <match src="uint256: uint256 [43165,43172]" dest="uint256: uint256 [25269,25276]"/>
  <match src="identifier: amount [17697,17703]" dest="identifier: amount [58523,58529]"/>
  <match src="identifier: RPAREN [31912,31918]" dest="identifier: RPAREN [45290,45296]"/>
  <match src="visibility [72271,72279]" dest="visibility [55683,55691]"/>
  <match src="function: function [89352,89360]" dest="function: function [30112,30120]"/>
  <match src="binary_expression [8876,8897]" dest="binary_expression [9440,9461]"/>
  <match src="comment: /*     Copyright 2018-2019 zOS Global Limited     Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [83109,83780]" dest="comment: /*     Copyright 2018-2019 zOS Global Limited     Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [67784,68455]"/>
  <match src="{: { [86630,86631]" dest="{: { [27390,27391]"/>
  <match src=".: . [96421,96422]" dest=".: . [37181,37182]"/>
  <match src="): ) [76895,76896]" dest="): ) [65057,65058]"/>
  <match src="emit_statement [84881,84914]" dest="emit_statement [69556,69589]"/>
  <match src="primitive_type [96215,96222]" dest="primitive_type [36975,36982]"/>
  <match src="block_statement [33157,33698]" dest="block_statement [46535,47076]"/>
  <match src="identifier: _state [96047,96053]" dest="identifier: _state [36807,36813]"/>
  <match src="return_statement [88460,88469]" dest="return_statement [29220,29229]"/>
  <match src="return_statement [9651,9679]" dest="return_statement [10215,10243]"/>
  <match src="identifier: decimals [49434,49442]" dest="identifier: decimals [14141,14149]"/>
  <match src="primitive_type [76621,76628]" dest="primitive_type [57296,57303]"/>
  <match src="(: ( [75734,75735]" dest="(: ( [64298,64299]"/>
  <match src="identifier: msg [77146,77149]" dest="identifier: msg [66211,66214]"/>
  <match src="primitive_type [82774,82781]" dest="primitive_type [22396,22403]"/>
  <match src="block_statement [36181,36550]" dest="block_statement [49559,49928]"/>
  <match src="}: } [92271,92272]" dest="}: } [33031,33032]"/>
  <match src="expression_statement [34520,34565]" dest="expression_statement [47898,47943]"/>
  <match src="block_statement [89791,89886]" dest="block_statement [30551,30646]"/>
  <match src="primitive_type [6236,6243]" dest="primitive_type [6800,6807]"/>
  <match src="(: ( [75797,75798]" dest="(: ( [64370,64371]"/>
  <match src="event_paramater [13962,13985]" dest="event_paramater [18900,18923]"/>
  <match src="identifier: _state [96851,96857]" dest="identifier: _state [37611,37617]"/>
  <match src=".: . [97452,97453]" dest=".: . [38212,38213]"/>
  <match src="function_body [32919,33764]" dest="function_body [46297,47142]"/>
  <match src="identifier: accounts [95496,95504]" dest="identifier: accounts [36256,36264]"/>
  <match src="(: ( [78643,78644]" dest="(: ( [58093,58094]"/>
  <match src="return_type_definition [49817,49831]" dest="return_type_definition [14524,14538]"/>
  <match src="primitive_type [3276,3283]" dest="primitive_type [3840,3847]"/>
  <match src="variable_declaration_statement [68777,68914]" dest="variable_declaration_statement [73668,73745]"/>
  <match src="type_name [6306,6310]" dest="type_name [6870,6874]"/>
  <match src="primitive_type [50907,50914]" dest="primitive_type [15614,15621]"/>
  <match src="): ) [68621,68622]" dest="): ) [53492,53493]"/>
  <match src="function_definition [80342,80958]" dest="function_definition [67164,67780]"/>
  <match src=".: . [29680,29681]" dest=".: . [43058,43059]"/>
  <match src="state_mutability [28361,28365]" dest="state_mutability [41739,41743]"/>
  <match src="(: ( [92145,92146]" dest="(: ( [32905,32906]"/>
  <match src="address: address [45272,45279]" dest="address: address [51369,51376]"/>
  <match src=",: , [30090,30091]" dest=",: , [43468,43469]"/>
  <match src="function_body [9271,9317]" dest="function_body [9835,9881]"/>
  <match src="type_name [93876,93882]" dest="type_name [34636,34642]"/>
  <match src=".: . [75773,75774]" dest=".: . [71248,71249]"/>
  <match src="uint256: uint256 [1217,1224]" dest="uint256: uint256 [1781,1788]"/>
  <match src=".: . [90022,90023]" dest=".: . [30782,30783]"/>
  <match src="(: ( [82913,82914]" dest="(: ( [22535,22536]"/>
  <match src="type_name [12384,12391]" dest="type_name [17322,17329]"/>
  <match src="return_statement [93347,93360]" dest="return_statement [34107,34120]"/>
  <match src="user_defined_type [86047,86052]" dest="user_defined_type [26807,26812]"/>
  <match src="string: string [86325,86331]" dest="string: string [27085,27091]"/>
  <match src="call_expression [95333,95374]" dest="call_expression [36093,36134]"/>
  <match src="identifier: lessThanOrEqualTo [9332,9349]" dest="identifier: lessThanOrEqualTo [9896,9913]"/>
  <match src="identifier: onlyFrozen [76021,76031]" dest="identifier: onlyFrozenOrFluid [65355,65372]"/>
  <match src=".: . [96275,96276]" dest=".: . [37035,37036]"/>
  <match src="return: return [7355,7361]" dest="return: return [7919,7925]"/>
  <match src="uint256: uint256 [13750,13757]" dest="uint256: uint256 [18688,18695]"/>
  <match src="): ) [63673,63674]" dest="): ) [57002,57003]"/>
  <match src="(: ( [93330,93331]" dest="(: ( [34090,34091]"/>
  <match src="identifier: b [4759,4760]" dest="identifier: b [5323,5324]"/>
  <match src="type_name [13114,13118]" dest="type_name [18052,18056]"/>
  <match src="event_paramater [75294,75317]" dest="event_paramater [63766,63789]"/>
  <match src="uint256: uint256 [42099,42106]" dest="uint256: uint256 [24203,24210]"/>
  <match src="identifier: Coupons [82194,82201]" dest="identifier: Coupons [21816,21823]"/>
  <match src="parameter [91060,91074]" dest="parameter [31820,31834]"/>
  <match src="identifier: epoch [97541,97546]" dest="identifier: epoch [38301,38306]"/>
  <match src="call_argument [6769,6807]" dest="call_argument [7333,7371]"/>
  <match src="function_definition [95769,96191]" dest="function_definition [36529,36951]"/>
  <match src="comment: /* Bootstrapping */ [41351,41370]" dest="comment: /* Bootstrapping */ [23455,23474]"/>
  <match src="): ) [43261,43262]" dest="): ) [25365,25366]"/>
  <match src="call_expression [88414,88439]" dest="call_expression [29174,29199]"/>
  <match src="): ) [28155,28156]" dest="): ) [41533,41534]"/>
  <match src="state_mutability [86856,86860]" dest="state_mutability [27616,27620]"/>
  <match src="call_argument [32675,32681]" dest="call_argument [46053,46059]"/>
  <match src="assignment_expression [97905,97955]" dest="assignment_expression [38665,38715]"/>
  <match src="}: } [75972,75973]" dest="}: } [64520,64521]"/>
  <match src="parameter [31524,31540]" dest="parameter [44902,44918]"/>
  <match src="(: ( [87678,87679]" dest="(: ( [28438,28439]"/>
  <match src=".: . [76602,76603]" dest=".: . [64885,64886]"/>
  <match src="(: ( [93811,93812]" dest="(: ( [34571,34572]"/>
  <match src="(: ( [94374,94375]" dest="(: ( [35134,35135]"/>
  <match src="function_body [96241,96310]" dest="function_body [37001,37070]"/>
  <match src="primitive_type [78429,78436]" dest="primitive_type [56387,56394]"/>
  <match src="expression_statement [25923,26007]" dest="expression_statement [72141,72210]"/>
  <match src="for: for [35194,35197]" dest="for: for [48572,48575]"/>
  <match src="call_argument [30262,30618]" dest="call_argument [43640,43996]"/>
  <match src="member_expression [96941,96970]" dest="member_expression [37701,37730]"/>
  <match src="comment: // populate the result with &quot;0x&quot; [34960,34992]" dest="comment: // populate the result with &quot;0x&quot; [48338,48370]"/>
  <match src="address: address [41604,41611]" dest="address: address [23708,23715]"/>
  <match src="identifier: account [94739,94746]" dest="identifier: account [35499,35506]"/>
  <match src="): ) [50822,50823]" dest="): ) [15529,15530]"/>
  <match src="member_expression [96851,96863]" dest="member_expression [37611,37623]"/>
  <match src=",: , [95290,95291]" dest=",: , [36050,36051]"/>
  <match src="string [77645,77680]" dest="string [73409,73423]"/>
  <match src="type_name [70675,70682]" dest="type_name [51582,51589]"/>
  <match src="{: { [5567,5568]" dest="{: { [6131,6132]"/>
  <match src="parenthesized_expression [28411,28769]" dest="parenthesized_expression [41789,42147]"/>
  <match src="(: ( [32412,32413]" dest="(: ( [45790,45791]"/>
  <match src="identifier: z [36529,36530]" dest="identifier: z [49907,49908]"/>
  <match src="number_literal: 5 [42366,42367]" dest="number_literal: 5 [24470,24471]"/>
  <match src="state_mutability [9618,9622]" dest="state_mutability [10182,10186]"/>
  <match src="state_mutability [7490,7494]" dest="state_mutability [8054,8058]"/>
  <match src="): ) [7938,7939]" dest="): ) [8502,8503]"/>
  <match src="&quot;: &quot; [2062,2063]" dest="&quot;: &quot; [2626,2627]"/>
  <match src="(: ( [50321,50322]" dest="(: ( [15028,15029]"/>
  <match src="): ) [29190,29191]" dest="): ) [42568,42569]"/>
  <match src="member_expression [77717,77727]" dest="member_expression [72651,72661]"/>
  <match src="identifier: D256 [6653,6657]" dest="identifier: D256 [7217,7221]"/>
  <match src="type_name [8421,8425]" dest="type_name [8985,8989]"/>
  <match src="assignment_expression [97527,97571]" dest="assignment_expression [38287,38331]"/>
  <match src="internal: internal [98427,98435]" dest="internal: internal [39187,39195]"/>
  <match src="==: == [10099,10101]" dest="==: == [10663,10665]"/>
  <match src="using_directive [67015,67042]" dest="using_directive [70760,70787]"/>
  <match src="): ) [96230,96231]" dest="): ) [36990,36991]"/>
  <match src="expression_statement [21891,21960]" dest="expression_statement [57014,57130]"/>
  <match src="primitive_type [96380,96387]" dest="primitive_type [37140,37147]"/>
  <match src="): ) [4737,4738]" dest="): ) [5301,5302]"/>
  <match src="identifier: BASE [6191,6195]" dest="identifier: BASE [6755,6759]"/>
  <match src="): ) [87185,87186]" dest="): ) [27945,27946]"/>
  <match src="type_name [12029,12033]" dest="type_name [16967,16971]"/>
  <match src="): ) [86446,86447]" dest="): ) [27206,27207]"/>
  <match src=":: : [76825,76826]" dest=":: : [65002,65003]"/>
  <match src="function: function [95106,95114]" dest="function: function [35866,35874]"/>
  <match src="event_paramater [13939,13960]" dest="event_paramater [18877,18898]"/>
  <match src="member_expression [94427,94459]" dest="member_expression [35187,35219]"/>
  <match src="expression_statement [94060,94126]" dest="expression_statement [34820,34886]"/>
  <match src="identifier: recovered [45895,45904]" dest="identifier: dollarAmount [57181,57193]"/>
  <match src="returns: returns [47067,47074]" dest="returns: returns [19765,19772]"/>
  <match src="identifier: totalSupply [86701,86712]" dest="identifier: totalSupply [27461,27472]"/>
  <match src="return_type_definition [86971,86988]" dest="return_type_definition [27731,27748]"/>
  <match src="memory: memory [7076,7082]" dest="memory: memory [7640,7646]"/>
  <match src="string [25955,26005]" dest="string [72179,72208]"/>
  <match src=".: . [87742,87743]" dest=".: . [28502,28503]"/>
  <match src="primitive_type [35660,35667]" dest="primitive_type [49038,49045]"/>
  <match src="type_name [82088,82095]" dest="type_name [21710,21717]"/>
  <match src="call_expression [29165,29191]" dest="call_expression [42543,42569]"/>
  <match src="=: = [7667,7668]" dest="=: = [8231,8232]"/>
  <match src="type_name [93056,93063]" dest="type_name [33816,33823]"/>
  <match src="member_expression [95635,95648]" dest="member_expression [36395,36408]"/>
  <match src="primitive_type [75354,75361]" dest="primitive_type [63826,63833]"/>
  <match src="member_expression [77839,77850]" dest="member_expression [65753,65764]"/>
  <match src="event: event [75399,75404]" dest="event: event [74631,74636]"/>
  <match src="identifier: decrementBalanceOfCoupons [95778,95803]" dest="identifier: decrementBalanceOfCoupons [36538,36563]"/>
  <match src="identifier: stringifyTruncated [28580,28598]" dest="identifier: stringifyTruncated [41958,41976]"/>
  <match src="identifier: State [82154,82159]" dest="identifier: State [21776,21781]"/>
  <match src="uint256: uint256 [68697,68704]" dest="uint256: uint256 [60390,60397]"/>
  <match src="): ) [98627,98628]" dest="): ) [39387,39388]"/>
  <match src="identifier: must [29481,29485]" dest="identifier: must [42859,42863]"/>
  <match src="identifier: recipient [48178,48187]" dest="identifier: recipient [58605,58614]"/>
  <match src="member_expression [91765,91790]" dest="member_expression [32525,32550]"/>
  <match src="(: ( [51486,51487]" dest="(: ( [16193,16194]"/>
  <match src="identifier: epoch [90341,90346]" dest="identifier: epoch [31101,31106]"/>
  <match src="(: ( [87056,87057]" dest="(: ( [27816,27817]"/>
  <match src="): ) [90081,90082]" dest="): ) [30841,30842]"/>
  <match src="primitive_type [2558,2565]" dest="primitive_type [3122,3129]"/>
  <match src="): ) [89867,89868]" dest="): ) [30627,30628]"/>
  <match src="identifier: _state [97527,97533]" dest="identifier: _state [38287,38293]"/>
  <match src="call_argument [31318,31326]" dest="call_argument [44696,44704]"/>
  <match src="function_body [86532,86558]" dest="function_body [27292,27318]"/>
  <match src="user_defined_type [87080,87087]" dest="user_defined_type [27840,27847]"/>
  <match src="(: ( [95421,95422]" dest="(: ( [36181,36182]"/>
  <match src="(: ( [19860,19861]" dest="(: ( [58399,58400]"/>
  <match src="identifier: staged [95324,95330]" dest="identifier: staged [36084,36090]"/>
  <match src="function_definition [77193,77882]" dest="function_definition [65315,65790]"/>
  <match src="identifier: approve [13055,13062]" dest="identifier: approve [17993,18000]"/>
  <match src=".: . [87625,87626]" dest=".: . [28385,28386]"/>
  <match src="returns: returns [92137,92144]" dest="returns: returns [32897,32904]"/>
  <match src="}: } [92265,92266]" dest="}: } [33025,33026]"/>
  <match src="(: ( [7147,7148]" dest="(: ( [7711,7712]"/>
  <match src="call_struct_argument [8319,8357]" dest="call_struct_argument [8883,8921]"/>
  <match src="false: false [93222,93227]" dest="false: false [33982,33987]"/>
  <match src="uint256: uint256 [60687,60694]" dest="uint256: uint256 [74607,74614]"/>
  <match src="call_expression [96955,96962]" dest="call_expression [37715,37722]"/>
  <match src="identifier: _state [97152,97158]" dest="identifier: _state [37912,37918]"/>
  <match src="identifier: stringifyTruncated [32819,32837]" dest="identifier: stringifyTruncated [46197,46215]"/>
  <match src="=: = [27695,27696]" dest="=: = [41073,41074]"/>
  <match src=".: . [30952,30953]" dest=".: . [44330,44331]"/>
  <match src=".: . [91393,91394]" dest=".: . [32153,32154]"/>
  <match src="type_name [29476,29480]" dest="type_name [42854,42858]"/>
  <match src="}: } [8358,8359]" dest="}: } [8922,8923]"/>
  <match src="visibility [98427,98435]" dest="visibility [39187,39195]"/>
  <match src="member_expression [95489,95521]" dest="member_expression [36249,36281]"/>
  <match src="identifier: value [8759,8764]" dest="identifier: value [9323,9328]"/>
  <match src="identifier: epoch [96289,96294]" dest="identifier: epoch [37049,37054]"/>
  <match src="}: } [100149,100150]" dest="}: } [62506,62507]"/>
  <match src="identifier: SUPPLY_CHANGE_LIMIT [43821,43840]" dest="identifier: SUPPLY_CHANGE_LIMIT [25925,25944]"/>
  <match src="type_name [84123,84130]" dest="type_name [68798,68805]"/>
  <match src="visibility [90846,90852]" dest="visibility [31606,31612]"/>
  <match src="primitive_type [15926,15933]" dest="primitive_type [74569,74576]"/>
  <match src="call_argument [85147,85204]" dest="call_argument [69822,69879]"/>
  <match src="call_argument [32554,32573]" dest="call_argument [45932,45951]"/>
  <match src="identifier: Require [46101,46108]" dest="identifier: Require [53611,53618]"/>
  <match src="identifier: amount0Out [51320,51330]" dest="identifier: amount0Out [16027,16037]"/>
  <match src="identifier: incrementBalanceOfStaged [77485,77509]" dest="identifier: incrementBalanceOfStaged [65988,66012]"/>
  <match src="string [77064,77099]" dest="string [65199,65237]"/>
  <match src="identifier: amount [96560,96566]" dest="identifier: amount [37320,37326]"/>
  <match src="event_paramater [48583,48595]" dest="event_paramater [55621,55644]"/>
  <match src="type_name [90404,90411]" dest="type_name [31164,31171]"/>
  <match src="comment: /**      * Governance      */ [97584,97613]" dest="comment: /**      * Governance      */ [38344,38373]"/>
  <match src="): ) [7395,7396]" dest="): ) [7959,7960]"/>
  <match src="identifier: coupons [96132,96139]" dest="identifier: coupons [36892,36899]"/>
  <match src="(: ( [12328,12329]" dest="(: ( [17266,17267]"/>
  <match src="call_argument [77045,77055]" dest="call_argument [65180,65190]"/>
  <match src="type_name [82825,82837]" dest="type_name [22447,22459]"/>
  <match src="type_name [73924,73931]" dest="type_name [72759,72766]"/>
  <match src="identifier: amount [95019,95025]" dest="identifier: amount [35779,35785]"/>
  <match src="(: ( [31676,31677]" dest="(: ( [45054,45055]"/>
  <match src="]: ] [91936,91937]" dest="]: ] [32696,32697]"/>
  <match src="identifier: Claim [75405,75410]" dest="identifier: Incentivization [74637,74652]"/>
  <match src="&quot;: &quot; [100565,100566]" dest="&quot;: &quot; [62922,62923]"/>
  <match src="call_argument [30555,30563]" dest="call_argument [43933,43941]"/>
  <match src="type_name [95422,95429]" dest="type_name [36182,36189]"/>
  <match src="return_statement [6164,6200]" dest="return_statement [6728,6764]"/>
  <match src="): ) [34177,34178]" dest="): ) [47555,47556]"/>
  <match src="address: address [87939,87946]" dest="address: address [28699,28706]"/>
  <match src="primitive_type [32847,32854]" dest="primitive_type [46225,46232]"/>
  <match src="): ) [101707,101708]" dest="): ) [61330,61331]"/>
  <match src="}: } [20147,20148]" dest="}: } [58909,58910]"/>
  <match src="=: = [33142,33143]" dest="=: = [46520,46521]"/>
  <match src="call_argument [7211,7212]" dest="call_argument [7775,7776]"/>
  <match src="{: { [5742,5743]" dest="{: { [6306,6307]"/>
  <match src="variable_declaration_statement [33132,33147]" dest="variable_declaration_statement [46510,46525]"/>
  <match src="revert: revert [31608,31614]" dest="revert: revert [44986,44992]"/>
  <match src="): ) [50392,50393]" dest="): ) [15099,15100]"/>
  <match src="identifier: outstanding [96033,96044]" dest="identifier: outstanding [36793,36804]"/>
  <match src="private: private [23310,23317]" dest="private: private [54234,54241]"/>
  <match src="identifier: value [8744,8749]" dest="identifier: value [9308,9313]"/>
  <match src="call_argument [94295,94301]" dest="call_argument [35055,35061]"/>
  <match src="call_argument [30385,30411]" dest="call_argument [43763,43789]"/>
  <match src="function: function [3972,3980]" dest="function: function [4536,4544]"/>
  <match src="string_literal [86357,86381]" dest="string_literal [27117,27141]"/>
  <match src="array_access [99138,99166]" dest="array_access [39898,39926]"/>
  <match src="call_expression [9658,9678]" dest="call_expression [10222,10242]"/>
  <match src="call_argument [19861,19884]" dest="call_argument [58400,58423]"/>
  <match src="): ) [49297,49298]" dest="): ) [14004,14005]"/>
  <match src="modifier: modifier [99946,99954]" dest="modifier: modifier [62303,62311]"/>
  <match src=",: , [45931,45932]" dest=",: , [57211,57212]"/>
  <match src="member_expression [93939,93958]" dest="member_expression [34699,34718]"/>
  <match src="primitive_type [92023,92027]" dest="primitive_type [32783,32787]"/>
  <match src="identifier: State [82809,82814]" dest="identifier: State [22431,22436]"/>
  <match src="call_argument [76229,76239]" dest="call_argument [64764,64774]"/>
  <match src="parameter [3203,3212]" dest="parameter [3767,3776]"/>
  <match src="call_argument [77855,77860]" dest="call_argument [65769,65774]"/>
  <match src="binary_expression [34555,34561]" dest="binary_expression [47933,47939]"/>
  <match src="identifier: COMMA [32599,32604]" dest="identifier: COMMA [45977,45982]"/>
  <match src="identifier: COUPON_EXPIRATION [43677,43694]" dest="identifier: COUPON_EXPIRATION [25781,25798]"/>
  <match src="variable_declaration [383,392]" dest="variable_declaration [947,956]"/>
  <match src="primitive_type [13484,13491]" dest="primitive_type [18422,18429]"/>
  <match src=",: , [53731,53732]" dest=",: , [65677,65678]"/>
  <match src="identifier: value [75387,75392]" dest="identifier: value [63859,63864]"/>
  <match src="identifier: input [35668,35673]" dest="identifier: input [49046,49051]"/>
  <match src="return_type_definition [87795,87812]" dest="return_type_definition [28555,28572]"/>
  <match src="function_definition [84607,84920]" dest="function_definition [69282,69595]"/>
  <match src="): ) [22130,22131]" dest="): ) [58180,58181]"/>
  <match src="primitive_type [99100,99107]" dest="primitive_type [39860,39867]"/>
  <match src="(: ( [29183,29184]" dest="(: ( [42561,42562]"/>
  <match src="}: } [1390,1391]" dest="}: } [1954,1955]"/>
  <match src="comment: /* Regulator */ [42237,42252]" dest="comment: /* Regulator */ [24341,24356]"/>
  <match src="(: ( [89988,89989]" dest="(: ( [30748,30749]"/>
  <match src="identifier: b [3415,3416]" dest="identifier: b [3979,3980]"/>
  <match src="}: } [79240,79241]" dest="}: } [53738,53739]"/>
  <match src="): ) [61681,61682]" dest="): ) [61473,61474]"/>
  <match src="primitive_type [91020,91027]" dest="primitive_type [31780,31787]"/>
  <match src="}: } [99193,99194]" dest="}: } [39953,39954]"/>
  <match src="number_literal: 0 [19882,19883]" dest="number_literal: 0 [58421,58422]"/>
  <match src="identifier: account [88649,88656]" dest="identifier: account [29409,29416]"/>
  <match src="call_argument [75825,75838]" dest="call_argument [64398,64411]"/>
  <match src="(: ( [42982,42983]" dest="(: ( [25086,25087]"/>
  <match src="identifier: period [81990,81996]" dest="identifier: period [21612,21618]"/>
  <match src="identifier: add [78967,78970]" dest="identifier: add [53494,53497]"/>
  <match src="primitive_type [93262,93269]" dest="primitive_type [34022,34029]"/>
  <match src="identifier: epoch [97346,97351]" dest="identifier: epoch [38106,38111]"/>
  <match src="revert: revert [28405,28411]" dest="revert: revert [41783,41789]"/>
  <match src="): ) [8767,8768]" dest="): ) [9331,9332]"/>
  <match src="function: function [90523,90531]" dest="function: function [31283,31291]"/>
  <match src="uint8: uint8 [86525,86530]" dest="uint8: uint8 [27285,27290]"/>
  <match src="type_name [87080,87087]" dest="type_name [27840,27847]"/>
  <match src="member_expression [98090,98130]" dest="member_expression [38850,38890]"/>
  <match src="(: ( [93432,93433]" dest="(: ( [34192,34193]"/>
  <match src="visibility [50087,50095]" dest="visibility [14794,14802]"/>
  <match src="identifier: add [90023,90026]" dest="identifier: add [30783,30786]"/>
  <match src="identifier: account [47931,47938]" dest="identifier: account [51064,51071]"/>
  <match src="=: = [27563,27564]" dest="=: = [40941,40942]"/>
  <match src="type_name [89091,89098]" dest="type_name [29851,29858]"/>
  <match src="parameter [43651,43658]" dest="parameter [25755,25762]"/>
  <match src="string [19985,20025]" dest="string [52188,52218]"/>
  <match src="identifier: i [35214,35215]" dest="identifier: i [48592,48593]"/>
  <match src="type_name [27585,27591]" dest="type_name [40963,40969]"/>
  <match src="(: ( [68620,68621]" dest="(: ( [53491,53492]"/>
  <match src="variable_declaration_statement [32976,33022]" dest="variable_declaration_statement [46354,46400]"/>
  <match src="(: ( [6175,6176]" dest="(: ( [6739,6740]"/>
  <match src="returns: returns [49335,49342]" dest="returns: returns [14042,14049]"/>
  <match src="primitive_type [76701,76708]" dest="primitive_type [57263,57270]"/>
  <match src="parameter [29541,29557]" dest="parameter [42919,42935]"/>
  <match src=".: . [95339,95340]" dest=".: . [36099,36100]"/>
  <match src="identifier: _state [94060,94066]" dest="identifier: _state [34820,34826]"/>
  <match src=".: . [95537,95538]" dest=".: . [36297,36298]"/>
  <match src="address: address [96520,96527]" dest="address: address [37280,37287]"/>
  <match src="internal: internal [94930,94938]" dest="internal: internal [35690,35698]"/>
  <match src="uint256: uint256 [90123,90130]" dest="uint256: uint256 [30883,30890]"/>
  <match src="]: ] [98473,98474]" dest="]: ] [39233,39234]"/>
  <match src="identifier: staged [88028,88034]" dest="identifier: staged [28788,28794]"/>
  <match src="public: public [47001,47007]" dest="public: public [19699,19705]"/>
  <match src=",: , [50180,50181]" dest=",: , [14887,14888]"/>
  <match src="call_argument [89832,89842]" dest="call_argument [30592,30602]"/>
  <match src="number_literal: 1 [41332,41333]" dest="number_literal: 1 [23436,23437]"/>
  <match src="identifier: amount [96466,96472]" dest="identifier: amount [37226,37232]"/>
  <match src="]: ] [35963,35964]" dest="]: ] [49341,49342]"/>
  <match src="+: + [397,398]" dest="+: + [961,962]"/>
  <match src="memory: memory [9485,9491]" dest="memory: memory [10049,10055]"/>
  <match src="indexed: indexed [49253,49260]" dest="indexed: indexed [13960,13967]"/>
  <match src="type_name [97997,98004]" dest="type_name [38757,38764]"/>
  <match src="call_argument [23124,23131]" dest="call_argument [51635,51642]"/>
  <match src=",: , [30705,30706]" dest=",: , [44083,44084]"/>
  <match src="member_expression [94516,94537]" dest="member_expression [35276,35297]"/>
  <match src="primitive_type [28880,28887]" dest="primitive_type [42258,42265]"/>
  <match src="returns: returns [91730,91737]" dest="returns: returns [32490,32497]"/>
  <match src="type_name [8167,8171]" dest="type_name [8731,8735]"/>
  <match src="return: return [7741,7747]" dest="return: return [8305,8311]"/>
  <match src="=: = [98684,98685]" dest="=: = [39444,39445]"/>
  <match src="yul_assignment [92237,92256]" dest="yul_assignment [32997,33016]"/>
  <match src="(: ( [84394,84395]" dest="(: ( [69069,69070]"/>
  <match src="identifier: spender [21847,21854]" dest="identifier: spender [57940,57947]"/>
  <match src="internal: internal [7477,7485]" dest="internal: internal [8041,8049]"/>
  <match src="function: function [23046,23054]" dest="function: function [51540,51548]"/>
  <match src="call_struct_argument [6036,6047]" dest="call_struct_argument [6600,6611]"/>
  <match src="]: ] [90204,90205]" dest="]: ] [30964,30965]"/>
  <match src="(: ( [6226,6227]" dest="(: ( [6790,6791]"/>
  <match src="comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts with custom message on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      *      * _Available since v2.4.0._      */ [2681,3185]" dest="comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts with custom message on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      *      * _Available since v2.4.0._      */ [3245,3749]"/>
  <match src="identifier: _state [89320,89326]" dest="identifier: _state [30080,30086]"/>
  <match src="comment: /**  * @dev Extension of {ERC20} that allows token holders to destroy both their own  * tokens and those that they have an allowance for, in a way that can be  * recognized off-chain (via event analysis).  */ [22549,22757]" dest="comment: /**  * @title Require  * @author dYdX  *  * Stringifies parameters to pretty-print revert messages. Costs more gas than regular require()  */ [40556,40697]"/>
  <match src="pure: pure [9392,9396]" dest="pure: pure [9956,9960]"/>
  <match src="function_definition [6441,6625]" dest="function_definition [7005,7189]"/>
  <match src="visibility [63033,63040]" dest="visibility [61233,61240]"/>
  <match src="identifier: balanceOfStaged [87923,87938]" dest="identifier: balanceOfStaged [28683,28698]"/>
  <match src="type_name [94631,94638]" dest="type_name [35391,35398]"/>
  <match src="identifier: expiration [97132,97142]" dest="identifier: expiration [37892,37902]"/>
  <match src="identifier: Locked [88717,88723]" dest="identifier: Locked [29477,29483]"/>
  <match src="call_argument [73729,73733]" dest="call_argument [54274,54278]"/>
  <match src="(: ( [6076,6077]" dest="(: ( [6640,6641]"/>
  <match src="[: [ [95563,95564]" dest="[: [ [36323,36324]"/>
  <match src="identifier: amount1In [50480,50489]" dest="identifier: amount1In [15187,15196]"/>
  <match src="function: function [61585,61593]" dest="function: function [61208,61216]"/>
  <match src="identifier: amount1 [50297,50304]" dest="identifier: amount1 [15004,15011]"/>
  <match src="member_expression [98648,98665]" dest="member_expression [39408,39425]"/>
  <match src="parameter [30737,30751]" dest="parameter [44115,44129]"/>
  <match src="member_expression [95893,95908]" dest="member_expression [36653,36668]"/>
  <match src="primitive_type [4628,4635]" dest="primitive_type [5192,5199]"/>
  <match src="identifier: D256 [61636,61640]" dest="identifier: D256 [13055,13059]"/>
  <match src="): ) [90008,90009]" dest="): ) [30768,30769]"/>
  <match src="type_name [94614,94621]" dest="type_name [35374,35381]"/>
  <match src="uint256: uint256 [95157,95164]" dest="uint256: uint256 [35917,35924]"/>
  <match src="member_expression [7916,7926]" dest="member_expression [8480,8490]"/>
  <match src="event_paramater [13730,13748]" dest="event_paramater [18668,18686]"/>
  <match src="identifier: require [3361,3368]" dest="identifier: require [3925,3932]"/>
  <match src="identifier: Permission [101555,101565]" dest="identifier: Permission [63654,63664]"/>
  <match src=".: . [28460,28461]" dest=".: . [41838,41839]"/>
  <match src=".: . [97194,97195]" dest=".: . [37954,37955]"/>
  <match src="(: ( [34289,34290]" dest="(: ( [47667,47668]"/>
  <match src="uint256: uint256 [41375,41382]" dest="uint256: uint256 [23479,23486]"/>
  <match src="type_name [82554,82561]" dest="type_name [22176,22183]"/>
  <match src="public: public [87572,87578]" dest="public: public [28332,28338]"/>
  <match src="type_name [93860,93867]" dest="type_name [34620,34627]"/>
  <match src="identifier: newImplementation [84757,84774]" dest="identifier: newImplementation [69432,69449]"/>
  <match src="return_type_definition [89184,89201]" dest="return_type_definition [29944,29961]"/>
  <match src="identifier: outstanding [95664,95675]" dest="identifier: outstanding [36424,36435]"/>
  <match src="call_expression [84672,84708]" dest="call_expression [69347,69383]"/>
  <match src="parameter [90602,90609]" dest="parameter [31362,31369]"/>
  <match src="type_cast_expression [31632,31958]" dest="type_cast_expression [45010,45336]"/>
  <match src="call_argument [29769,29774]" dest="call_argument [43147,43152]"/>
  <match src="&quot;: &quot; [78190,78191]" dest="&quot;: &quot; [72891,72892]"/>
  <match src="revert: revert [30897,30903]" dest="revert: revert [44275,44281]"/>
  <match src="): ) [35034,35035]" dest="): ) [48412,48413]"/>
  <match src="return_type_definition [10055,10072]" dest="return_type_definition [10619,10636]"/>
  <match src="{: { [7684,7685]" dest="{: { [8248,8249]"/>
  <match src="call_argument [77566,77576]" dest="call_argument [57390,57400]"/>
  <match src="(: ( [98523,98524]" dest="(: ( [39283,39284]"/>
  <match src="member_expression [94723,94755]" dest="member_expression [35483,35515]"/>
  <match src="variable_declaration [76621,76653]" dest="variable_declaration [57296,57316]"/>
  <match src="): ) [58954,58955]" dest="): ) [20546,20547]"/>
  <match src="array_access [88495,88519]" dest="array_access [29255,29279]"/>
  <match src="identifier: Constants [89582,89591]" dest="identifier: Constants [30342,30351]"/>
  <match src="return: return [6977,6983]" dest="return: return [7541,7547]"/>
  <match src="parameter [93090,93094]" dest="parameter [33850,33854]"/>
  <match src="identifier: block [89737,89742]" dest="identifier: block [30497,30502]"/>
  <match src="(: ( [96724,96725]" dest="(: ( [37484,37485]"/>
  <match src="binary_expression [2016,2026]" dest="binary_expression [2580,2590]"/>
  <match src="identifier: dollar [87022,87028]" dest="identifier: dollar [27782,27788]"/>
  <match src="event_paramater [75319,75332]" dest="event_paramater [63791,63804]"/>
  <match src="}: } [33641,33642]" dest="}: } [47019,47020]"/>
  <match src="type_name [35742,35749]" dest="type_name [49120,49127]"/>
  <match src="type_name [87804,87811]" dest="type_name [28564,28571]"/>
  <match src="address: address [82914,82921]" dest="address: address [22536,22543]"/>
  <match src="identifier: newUniv2 [75702,75710]" dest="identifier: period [70974,70980]"/>
  <match src="(: ( [43395,43396]" dest="(: ( [25499,25500]"/>
  <match src="identifier: bootstrappingTotal [89642,89660]" dest="identifier: bootstrappingTotal [30402,30420]"/>
  <match src="identifier: ratio [6221,6226]" dest="identifier: ratio [6785,6790]"/>
  <match src="identifier: account [100247,100254]" dest="identifier: account [62604,62611]"/>
  <match src="(: ( [96214,96215]" dest="(: ( [36974,36975]"/>
  <match src="{: { [6747,6748]" dest="{: { [7311,7312]"/>
  <match src="call_argument [31156,31175]" dest="call_argument [44534,44553]"/>
  <match src=".: . [94074,94075]" dest=".: . [34834,34835]"/>
  <match src="member_expression [96828,96848]" dest="member_expression [37588,37608]"/>
  <match src="call_expression [98914,98933]" dest="call_expression [39674,39693]"/>
  <match src="binary_expression [36497,36514]" dest="binary_expression [49875,49892]"/>
  <match src="primitive_type [11689,11696]" dest="primitive_type [16627,16634]"/>
  <match src="return_type_definition [4681,4698]" dest="return_type_definition [5245,5262]"/>
  <match src="member_expression [93649,93670]" dest="member_expression [34409,34430]"/>
  <match src="uint256: uint256 [86870,86877]" dest="uint256: uint256 [27630,27637]"/>
  <match src="return_statement [93106,93119]" dest="return_statement [33866,33879]"/>
  <match src="call_expression [29719,29743]" dest="call_expression [43097,43121]"/>
  <match src="user_defined_type [7431,7435]" dest="user_defined_type [7995,7999]"/>
  <match src="number_literal: 7 [42014,42015]" dest="number_literal: 7 [24118,24119]"/>
  <match src="primitive_type [82700,82707]" dest="primitive_type [22322,22329]"/>
  <match src="return: return [6757,6763]" dest="return: return [7321,7327]"/>
  <match src="identifier: amount0 [50283,50290]" dest="identifier: amount0 [14990,14997]"/>
  <match src="): ) [35678,35679]" dest="): ) [49056,49057]"/>
  <match src="sstore: sstore [85347,85353]" dest="sstore: sstore [70022,70028]"/>
  <match src="uint256: uint256 [43286,43293]" dest="uint256: uint256 [25390,25397]"/>
  <match src="call_expression [95248,95299]" dest="call_expression [36008,36059]"/>
  <match src="identifier: value [8123,8128]" dest="identifier: value [8687,8692]"/>
  <match src="visibility [90419,90425]" dest="visibility [31179,31185]"/>
  <match src="): ) [86628,86629]" dest="): ) [27388,27389]"/>
  <match src="identifier: owner [49564,49569]" dest="identifier: owner [14271,14276]"/>
  <match src="struct: struct [82034,82040]" dest="struct: struct [21656,21662]"/>
  <match src="number_literal: 10 [36731,36733]" dest="number_literal: 10 [50109,50111]"/>
  <match src="if: if [29600,29602]" dest="if: if [42978,42980]"/>
  <match src="{: { [32919,32920]" dest="{: { [46297,46298]"/>
  <match src="identifier: Candidate [82229,82238]" dest="identifier: Candidate [21851,21860]"/>
  <match src="): ) [35767,35768]" dest="): ) [49145,49146]"/>
  <match src="internal: internal [4007,4015]" dest="internal: internal [4571,4579]"/>
  <match src="primitive_type [49796,49800]" dest="primitive_type [14503,14507]"/>
  <match src="identifier: value [7622,7627]" dest="identifier: value [8186,8191]"/>
  <match src="identifier: USDC [42481,42485]" dest="identifier: USDC [24585,24589]"/>
  <match src="primitive_type [86815,86822]" dest="primitive_type [27575,27582]"/>
  <match src=",: , [328,329]" dest=",: , [892,893]"/>
  <match src="primitive_type [1217,1224]" dest="primitive_type [1781,1788]"/>
  <match src="memory: memory [34764,34770]" dest="memory: memory [48142,48148]"/>
  <match src="member_expression [98648,98683]" dest="member_expression [39408,39443]"/>
  <match src="return_statement [89110,89138]" dest="return_statement [29870,29898]"/>
  <match src=".: . [93670,93671]" dest=".: . [34430,34431]"/>
  <match src=",: , [50358,50359]" dest=",: , [15065,15066]"/>
  <match src=",: , [96378,96379]" dest=",: , [37138,37139]"/>
  <match src="visibility [50714,50722]" dest="visibility [15421,15429]"/>
  <match src="member_expression [28007,28023]" dest="member_expression [41385,41401]"/>
  <match src="user_defined_type [83892,83897]" dest="user_defined_type [68567,68572]"/>
  <match src="public: public [46938,46944]" dest="public: public [19636,19642]"/>
  <match src=",: , [30727,30728]" dest=",: , [44105,44106]"/>
  <match src="using: using [86059,86064]" dest="using: using [26819,26824]"/>
  <match src="parameter [91846,91863]" dest="parameter [32606,32623]"/>
  <match src="number_literal: 1 [36007,36008]" dest="number_literal: 1 [49385,49386]"/>
  <match src="function_definition [94138,94309]" dest="function_definition [34898,35069]"/>
  <match src="): ) [49919,49920]" dest="): ) [14626,14627]"/>
  <match src="function_body [30175,30667]" dest="function_body [43553,44045]"/>
  <match src=",: , [28523,28524]" dest=",: , [41901,41902]"/>
  <match src="primitive_type [95852,95858]" dest="primitive_type [36612,36618]"/>
  <match src=".: . [87734,87735]" dest=".: . [28494,28495]"/>
  <match src="pure: pure [3262,3266]" dest="pure: pure [3826,3830]"/>
  <match src="function_body [21096,21381]" dest="function_body [51826,51977]"/>
  <match src="/: / [3413,3414]" dest="/: / [3977,3978]"/>
  <match src="member_expression [29042,29058]" dest="member_expression [42420,42436]"/>
  <match src="block_statement [88446,88479]" dest="block_statement [29206,29239]"/>
  <match src="identifier: votes [82463,82468]" dest="identifier: votes [22085,22090]"/>
  <match src="identifier: ADVANCE_INCENTIVE [43567,43584]" dest="identifier: ADVANCE_INCENTIVE [25671,25688]"/>
  <match src="&gt;: &gt; [78002,78003]" dest="&gt;: &gt; [53841,53842]"/>
  <match src="{: { [44018,44019]" dest="{: { [26122,26123]"/>
  <match src="identifier: State [83092,83097]" dest="identifier: State [22714,22719]"/>
  <match src="internal: internal [96590,96598]" dest="internal: internal [37350,37358]"/>
  <match src="mapping: mapping [81757,81764]" dest="mapping: mapping [21379,21386]"/>
  <match src="identifier: file [29738,29742]" dest="identifier: file [43116,43120]"/>
  <match src=".: . [96010,96011]" dest=".: . [36770,36771]"/>
  <match src="comment: /**      * @dev Returns the amount of tokens in existence.      */ [11461,11527]" dest="comment: /**      * @dev Returns the amount of tokens in existence.      */ [16399,16465]"/>
  <match src="identifier: totalRewardedWithPhantom [78437,78461]" dest="identifier: totalCoupons [56395,56407]"/>
  <match src="}: } [33697,33698]" dest="}: } [47075,47076]"/>
  <match src="member_expression [6793,6798]" dest="member_expression [7357,7362]"/>
  <match src="identifier: c [3407,3408]" dest="identifier: c [3971,3972]"/>
  <match src="call_expression [75856,75899]" dest="call_expression [64429,64472]"/>
  <match src=".: . [89765,89766]" dest=".: . [30525,30526]"/>
  <match src="call_expression [32394,32420]" dest="call_expression [45772,45798]"/>
  <match src="function_body [87089,87135]" dest="function_body [27849,27895]"/>
  <match src="call_argument [31702,31726]" dest="call_argument [45080,45104]"/>
  <match src="private: private [62454,62461]" dest="private: private [13398,13405]"/>
  <match src="call_argument [88433,88438]" dest="call_argument [29193,29198]"/>
  <match src="identifier: msg [77252,77255]" dest="identifier: msg [65895,65898]"/>
  <match src="parameter [4690,4697]" dest="parameter [5254,5261]"/>
  <match src="assignment_expression [36333,36377]" dest="assignment_expression [49711,49755]"/>
  <match src="): ) [89696,89697]" dest="): ) [30456,30457]"/>
  <match src="{: { [87711,87712]" dest="{: { [28471,28472]"/>
  <match src="parameter [86583,86598]" dest="parameter [27343,27358]"/>
  <match src="function_body [813,880]" dest="function_body [1377,1444]"/>
  <match src="string: string [30921,30927]" dest="string: string [44299,44305]"/>
  <match src="parameter [98790,98807]" dest="parameter [39550,39567]"/>
  <match src="array_access [88495,88534]" dest="array_access [29255,29294]"/>
  <match src="call_argument [78701,78711]" dest="call_argument [57805,57815]"/>
  <match src="uint32: uint32 [50943,50949]" dest="uint32: uint32 [15650,15656]"/>
  <match src="public: public [91865,91871]" dest="public: public [32625,32631]"/>
  <match src="number_literal: 0 [1935,1936]" dest="number_literal: 0 [2499,2500]"/>
  <match src="type_name [98392,98399]" dest="type_name [39152,39159]"/>
  <match src="!: ! [28969,28970]" dest="!: ! [42347,42348]"/>
  <match src="uint256: uint256 [44009,44016]" dest="uint256: uint256 [26113,26120]"/>
  <match src="): ) [8857,8858]" dest="): ) [9421,9422]"/>
  <match src="identifier: amount [20134,20140]" dest="identifier: amount [58896,58902]"/>
  <match src="return_type_definition [50728,50745]" dest="return_type_definition [15435,15452]"/>
  <match src="identifier: supply [86777,86783]" dest="identifier: supply [27537,27543]"/>
  <match src="identifier: deadline [50187,50195]" dest="identifier: deadline [14894,14902]"/>
  <match src="function_definition [95387,95763]" dest="function_definition [36147,36523]"/>
  <match src="{: { [9641,9642]" dest="{: { [10205,10206]"/>
  <match src="identifier: blockTimestamp [63141,63155]" dest="identifier: newBonded [60809,60818]"/>
  <match src="identifier: this [78941,78945]" dest="identifier: this [53470,53474]"/>
  <match src=".: . [99144,99145]" dest=".: . [39904,39905]"/>
  <match src="state_mutability [49512,49516]" dest="state_mutability [14219,14223]"/>
  <match src="(: ( [17677,17678]" dest="(: ( [58507,58508]"/>
  <match src="expression_statement [35575,35586]" dest="expression_statement [48953,48964]"/>
  <match src="visibility [9609,9617]" dest="visibility [10173,10181]"/>
  <match src="primitive_type [49287,49291]" dest="primitive_type [13994,13998]"/>
  <match src="identifier: D256 [62516,62520]" dest="identifier: D256 [59949,59953]"/>
  <match src=".: . [61185,61186]" dest=".: . [73112,73113]"/>
  <match src="identifier: account [91011,91018]" dest="identifier: account [31771,31778]"/>
  <match src="): ) [89842,89843]" dest="): ) [30602,30603]"/>
  <match src="): ) [33894,33895]" dest="): ) [47272,47273]"/>
  <match src="identifier: reject [91662,91668]" dest="identifier: reject [32422,32428]"/>
  <match src="): ) [10028,10029]" dest="): ) [10592,10593]"/>
  <match src="variable_declaration [34007,34021]" dest="variable_declaration [47385,47399]"/>
  <match src="state_mutability [4016,4020]" dest="state_mutability [4580,4584]"/>
  <match src="pure: pure [42441,42445]" dest="pure: pure [24545,24549]"/>
  <match src="event: event [75456,75461]" dest="event: event [63967,63972]"/>
  <match src="returns: returns [8844,8851]" dest="returns: returns [9408,9415]"/>
  <match src="private: private [23283,23290]" dest="private: private [60609,60616]"/>
  <match src="{: { [82544,82545]" dest="{: { [22166,22167]"/>
  <match src=",: , [19884,19885]" dest=",: , [58423,58424]"/>
  <match src="&quot;: &quot; [78338,78339]" dest="&quot;: &quot; [71872,71873]"/>
  <match src="number_literal: 1 [7669,7670]" dest="number_literal: 1 [8233,8234]"/>
  <match src="external: external [50824,50832]" dest="external: external [15531,15539]"/>
  <match src="uint256: uint256 [62559,62566]" dest="uint256: uint256 [65917,65924]"/>
  <match src="type_name [95836,95843]" dest="type_name [36596,36603]"/>
  <match src="type_name [770,777]" dest="type_name [1334,1341]"/>
  <match src="(: ( [45223,45224]" dest="(: ( [51359,51360]"/>
  <match src="call_argument [8350,8356]" dest="call_argument [8914,8920]"/>
  <match src="identifier: value [78807,78812]" dest="identifier: candidate [72706,72715]"/>
  <match src="identifier: a [9999,10000]" dest="identifier: a [10563,10564]"/>
  <match src="primitive_type [90602,90609]" dest="primitive_type [31362,31369]"/>
  <match src="call_argument [98938,98958]" dest="call_argument [39698,39718]"/>
  <match src="modifier_invocation [77929,77951]" dest="modifier_invocation [64833,64862]"/>
  <match src="pure: pure [28946,28950]" dest="pure: pure [42324,42328]"/>
  <match src="comment: /*     Copyright 2019 dYdX Trading Inc.     Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [4771,5436]" dest="comment: /*     Copyright 2019 dYdX Trading Inc.     Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [5335,6000]"/>
  <match src="call_expression [30949,31381]" dest="call_expression [44327,44759]"/>
  <match src="identifier: ORACLE_RESERVE_MINIMUM [42582,42604]" dest="identifier: ORACLE_RESERVE_MINIMUM [24686,24708]"/>
  <match src="function_body [47989,48049]" dest="function_body [51098,51255]"/>
  <match src="member_expression [90327,90355]" dest="member_expression [31087,31115]"/>
  <match src="primitive_type [49639,49646]" dest="primitive_type [14346,14353]"/>
  <match src="return: return [33910,33916]" dest="return: return [47288,47294]"/>
  <match src="call_expression [35890,35903]" dest="call_expression [49268,49281]"/>
  <match src="return: return [34652,34658]" dest="return: return [48030,48036]"/>
  <match src="function: function [99079,99087]" dest="function: function [39839,39847]"/>
  <match src="(: ( [35062,35063]" dest="(: ( [48440,48441]"/>
  <match src="array_access [36333,36351]" dest="array_access [49711,49729]"/>
  <match src="call_expression [31072,31098]" dest="call_expression [44450,44476]"/>
  <match src="type_name [7977,7981]" dest="type_name [8541,8545]"/>
  <match src="parameter [91433,91450]" dest="parameter [32193,32210]"/>
  <match src="identifier: _state [94540,94546]" dest="identifier: _state [35300,35306]"/>
  <match src="parameter [34758,34770]" dest="parameter [48136,48148]"/>
  <match src=".: . [82982,82983]" dest=".: . [22604,22605]"/>
  <match src="}: } [7948,7949]" dest="}: } [8512,8513]"/>
  <match src="call_argument [31353,31359]" dest="call_argument [44731,44737]"/>
  <match src="=: = [3409,3410]" dest="=: = [3973,3974]"/>
  <match src="identifier: bonded [82684,82690]" dest="identifier: bonded [22306,22312]"/>
  <match src="return_statement [8305,8361]" dest="return_statement [8869,8925]"/>
  <match src="parameter [7508,7519]" dest="parameter [8072,8083]"/>
  <match src="type_name [51410,51417]" dest="type_name [16117,16124]"/>
  <match src="identifier: reason [94843,94849]" dest="identifier: reason [35603,35609]"/>
  <match src="{: { [6557,6558]" dest="{: { [7121,7122]"/>
  <match src="pure: pure [32883,32887]" dest="pure: pure [46261,46265]"/>
  <match src=".: . [86768,86769]" dest=".: . [27528,27529]"/>
  <match src="function: function [11532,11540]" dest="function: function [16470,16478]"/>
  <match src="function_definition [13427,13524]" dest="function_definition [18365,18462]"/>
  <match src="(: ( [7507,7508]" dest="(: ( [8071,8072]"/>
  <match src="identifier: _state [95333,95339]" dest="identifier: _state [36093,36099]"/>
  <match src="member_expression [76656,76675]" dest="member_expression [57319,57335]"/>
  <match src="modifier_definition [99946,100150]" dest="modifier_definition [62303,62507]"/>
  <match src="assembly: assembly [80886,80894]" dest="assembly: assembly [67708,67716]"/>
  <match src="type_name [75735,75742]" dest="type_name [64299,64306]"/>
  <match src="block_statement [61735,61821]" dest="block_statement [61475,61520]"/>
  <match src="): ) [50304,50305]" dest="): ) [15011,15012]"/>
  <match src=".: . [61635,61636]" dest=".: . [13054,13055]"/>
  <match src="]: ] [95973,95974]" dest="]: ] [36733,36734]"/>
  <match src="type_name [9818,9825]" dest="type_name [10382,10389]"/>
  <match src="binary_expression [36863,36890]" dest="binary_expression [50241,50268]"/>
  <match src="): ) [9381,9382]" dest="): ) [9945,9946]"/>
  <match src="return: return [36845,36851]" dest="return: return [50223,50229]"/>
  <match src="identifier: D256 [6306,6310]" dest="identifier: D256 [6870,6874]"/>
  <match src="memory: memory [1246,1252]" dest="memory: memory [1810,1816]"/>
  <match src="(: ( [28411,28412]" dest="(: ( [41789,41790]"/>
  <match src="string [77742,77778]" dest="string [71350,71367]"/>
  <match src="identifier: epochStart [89434,89444]" dest="identifier: epochStart [30194,30204]"/>
  <match src="identifier: Vote [82457,82461]" dest="identifier: Vote [22079,22083]"/>
  <match src="function_definition [63010,63618]" dest="function_definition [60562,60941]"/>
  <match src="}: } [8766,8767]" dest="}: } [9330,9331]"/>
  <match src="call_argument [28632,28638]" dest="call_argument [42010,42016]"/>
  <match src="function_body [97080,97213]" dest="function_body [37840,37973]"/>
  <match src="identifier: permit [50131,50137]" dest="identifier: permit [14838,14844]"/>
  <match src=",: , [28311,28312]" dest=",: , [41689,41690]"/>
  <match src="function_body [91348,91407]" dest="function_body [32108,32167]"/>
  <match src="bool: bool [9120,9124]" dest="bool: bool [9684,9688]"/>
  <match src=",: , [48394,48395]" dest=",: , [58768,58769]"/>
  <match src="member_expression [95592,95605]" dest="member_expression [36352,36365]"/>
  <match src="type_name [23081,23088]" dest="type_name [11822,11829]"/>
  <match src="type_name [71202,71209]" dest="type_name [52005,52012]"/>
  <match src="call_argument [30991,31015]" dest="call_argument [44369,44393]"/>
  <match src="): ) [1265,1266]" dest="): ) [1829,1830]"/>
  <match src="(: ( [33754,33755]" dest="(: ( [47132,47133]"/>
  <match src="member_expression [91093,91110]" dest="member_expression [31853,31870]"/>
  <match src="call_argument [77839,77853]" dest="call_argument [65753,65767]"/>
  <match src="member_expression [9908,9918]" dest="member_expression [10472,10482]"/>
  <match src="address: address [97846,97853]" dest="address: address [38606,38613]"/>
  <match src="identifier: coupons [90649,90656]" dest="identifier: coupons [31409,31416]"/>
  <match src="identifier: State [83892,83897]" dest="identifier: State [68567,68572]"/>
  <match src="identifier: amount [70847,70853]" dest="identifier: amount [51850,51856]"/>
  <match src="): ) [10071,10072]" dest="): ) [10635,10636]"/>
  <match src="function: function [3190,3198]" dest="function: function [3754,3762]"/>
  <match src="): ) [98030,98031]" dest="): ) [38790,38791]"/>
  <match src="): ) [31545,31546]" dest="): ) [44923,44924]"/>
  <match src="identifier: _state [96117,96123]" dest="identifier: _state [36877,36883]"/>
  <match src="(: ( [31720,31721]" dest="(: ( [45098,45099]"/>
  <match src="internal: internal [70167,70175]" dest="internal: internal [51319,51327]"/>
  <match src="identifier: _state [95309,95315]" dest="identifier: _state [36069,36075]"/>
  <match src="{: { [42902,42903]" dest="{: { [25006,25007]"/>
  <match src="binary_expression [91909,91947]" dest="binary_expression [32669,32707]"/>
  <match src="binary_expression [1317,1323]" dest="binary_expression [1881,1887]"/>
  <match src="member_expression [89663,89695]" dest="member_expression [30423,30455]"/>
  <match src="call_argument [31232,31251]" dest="call_argument [44610,44629]"/>
  <match src=",: , [31175,31176]" dest=",: , [44553,44554]"/>
  <match src="external: external [93072,93080]" dest="external: external [33832,33840]"/>
  <match src="identifier: add [94495,94498]" dest="identifier: add [35255,35258]"/>
  <match src="call_argument [29325,29344]" dest="call_argument [42703,42722]"/>
  <match src="bytes32: bytes32 [86128,86135]" dest="bytes32: bytes32 [26888,26895]"/>
  <match src="}: } [96746,96747]" dest="}: } [37506,37507]"/>
  <match src="(: ( [34037,34038]" dest="(: ( [47415,47416]"/>
  <match src=".: . [43769,43770]" dest=".: . [25873,25874]"/>
  <match src="identifier: usdcAmount [73360,73370]" dest="identifier: epochPeriod [74759,74770]"/>
  <match src="parameter [35660,35673]" dest="parameter [49038,49051]"/>
  <match src=".: . [88027,88028]" dest=".: . [28787,28788]"/>
  <match src="call_argument [29370,29376]" dest="call_argument [42748,42754]"/>
  <match src="internal: internal [31551,31559]" dest="internal: internal [44929,44937]"/>
  <match src=".: . [91661,91662]" dest=".: . [32421,32422]"/>
  <match src="function_body [6747,6815]" dest="function_body [7311,7379]"/>
  <match src="identifier: token1 [50815,50821]" dest="identifier: token1 [15522,15528]"/>
  <match src="{: { [97688,97689]" dest="{: { [38448,38449]"/>
  <match src="event_paramater [49287,49297]" dest="event_paramater [13994,14004]"/>
  <match src="uint256: uint256 [6679,6686]" dest="uint256: uint256 [7243,7250]"/>
  <match src=".: . [100327,100328]" dest=".: . [62684,62685]"/>
  <match src="address: address [98773,98780]" dest="address: address [39533,39540]"/>
  <match src="identifier: Decimal [62471,62478]" dest="identifier: Decimal [13331,13338]"/>
  <match src="(: ( [48387,48388]" dest="(: ( [58761,58762]"/>
  <match src="return: return [91492,91498]" dest="return: return [32252,32258]"/>
  <match src="call_expression [6354,6376]" dest="call_expression [6918,6940]"/>
  <match src="(: ( [91738,91739]" dest="(: ( [32498,32499]"/>
  <match src="{: { [86989,86990]" dest="{: { [27749,27750]"/>
  <match src=".: . [93945,93946]" dest=".: . [34705,34706]"/>
  <match src="identifier: _state [96415,96421]" dest="identifier: _state [37175,37181]"/>
  <match src="returns: returns [90593,90600]" dest="returns: returns [31353,31360]"/>
  <match src="visibility [7117,7125]" dest="visibility [7681,7689]"/>
  <match src="(: ( [77251,77252]" dest="(: ( [65894,65895]"/>
  <match src="internal: internal [94669,94677]" dest="internal: internal [35429,35437]"/>
  <match src="identifier: msg [77358,77361]" dest="identifier: msg [65469,65472]"/>
  <match src="indexed: indexed [48543,48550]" dest="indexed: indexed [55500,55507]"/>
  <match src="memory: memory [6311,6317]" dest="memory: memory [6875,6881]"/>
  <match src="parameter [1644,1653]" dest="parameter [2208,2217]"/>
  <match src="identifier: amount [17628,17634]" dest="identifier: amount [52134,52140]"/>
  <match src="(: ( [77123,77124]" dest="(: ( [51968,51969]"/>
  <match src="(: ( [34757,34758]" dest="(: ( [48135,48136]"/>
  <match src="member_expression [89812,89831]" dest="member_expression [30572,30591]"/>
  <match src="call_argument [29852,29858]" dest="call_argument [43230,43236]"/>
  <match src="(: ( [91298,91299]" dest="(: ( [32058,32059]"/>
  <match src="primitive_type [91983,91990]" dest="primitive_type [32743,32750]"/>
  <match src="primitive_type [49873,49880]" dest="primitive_type [14580,14587]"/>
  <match src="call_expression [29084,29108]" dest="call_expression [42462,42486]"/>
  <match src="[: [ [86662,86663]" dest="[: [ [27422,27423]"/>
  <match src="primitive_type [32135,32142]" dest="primitive_type [45513,45520]"/>
  <match src="call_argument [96725,96731]" dest="call_argument [37485,37491]"/>
  <match src="binary_expression [36478,36488]" dest="binary_expression [49856,49866]"/>
  <match src="internal: internal [9609,9617]" dest="internal: internal [10173,10181]"/>
  <match src="(: ( [87463,87464]" dest="(: ( [28223,28224]"/>
  <match src="): ) [43371,43372]" dest="): ) [25475,25476]"/>
  <match src=",: , [28554,28555]" dest=",: , [41932,41933]"/>
  <match src=":: : [6352,6353]" dest=":: : [6916,6917]"/>
  <match src="identifier: votesFor [91690,91698]" dest="identifier: votesFor [32450,32458]"/>
  <match src="variable_declaration [61916,61939]" dest="variable_declaration [72913,72930]"/>
  <match src="(: ( [98937,98938]" dest="(: ( [39697,39698]"/>
  <match src="identifier: _state [94723,94729]" dest="identifier: _state [35483,35489]"/>
  <match src="member_expression [100313,100327]" dest="member_expression [62670,62684]"/>
  <match src="string [61268,61287]" dest="string [73268,73286]"/>
  <match src="(: ( [90122,90123]" dest="(: ( [30882,30883]"/>
  <match src="comment: /**      * @dev Emitted when the allowance of a `spender` for an `owner` is set by      * a call to {approve}. `value` is the new allowance.      */ [13771,13919]" dest="comment: /**      * @dev Emitted when the allowance of a `spender` for an `owner` is set by      * a call to {approve}. `value` is the new allowance.      */ [18709,18857]"/>
  <match src="identifier: abi [29677,29680]" dest="identifier: abi [43055,43058]"/>
  <match src="binary_expression [2016,2021]" dest="binary_expression [2580,2585]"/>
  <match src="): ) [49759,49760]" dest="): ) [14466,14467]"/>
  <match src="type_name [62508,62520]" dest="type_name [59941,59953]"/>
  <match src="primitive_type [97846,97853]" dest="primitive_type [38606,38613]"/>
  <match src="): ) [28605,28606]" dest="): ) [41983,41984]"/>
  <match src="primitive_type [90831,90838]" dest="primitive_type [31591,31598]"/>
  <match src="identifier: createCandidate [97628,97643]" dest="identifier: createCandidate [38388,38403]"/>
  <match src="primitive_type [13939,13946]" dest="primitive_type [18877,18884]"/>
  <match src="}: } [36900,36901]" dest="}: } [50278,50279]"/>
  <match src="call_argument [93963,93969]" dest="call_argument [34723,34729]"/>
  <match src="if: if [36719,36721]" dest="if: if [50097,50099]"/>
  <match src="uint256: uint256 [90740,90747]" dest="uint256: uint256 [31500,31507]"/>
  <match src="(: ( [34554,34555]" dest="(: ( [47932,47933]"/>
  <match src="(: ( [363,364]" dest="(: ( [927,928]"/>
  <match src="{: { [27941,27942]" dest="{: { [41319,41320]"/>
  <match src="identifier: candidate [91991,92000]" dest="identifier: candidate [32751,32760]"/>
  <match src="string [60447,60455]" dest="string [55104,55112]"/>
  <match src="yul_evm_builtin [92245,92250]" dest="yul_evm_builtin [33005,33010]"/>
  <match src="function_body [86989,87035]" dest="function_body [27749,27795]"/>
  <match src="call_argument [7573,7574]" dest="call_argument [8137,8138]"/>
  <match src="(: ( [42429,42430]" dest="(: ( [24533,24534]"/>
  <match src="(: ( [86620,86621]" dest="(: ( [27380,27381]"/>
  <match src="private: private [61861,61868]" dest="private: private [73559,73566]"/>
  <match src="visibility [70167,70175]" dest="visibility [51319,51327]"/>
  <match src="byte: byte [35967,35971]" dest="byte: byte [49345,49349]"/>
  <match src="member_expression [90628,90641]" dest="member_expression [31388,31401]"/>
  <match src="identifier: spender [13978,13985]" dest="identifier: spender [18916,18923]"/>
  <match src="member_expression [91365,91382]" dest="member_expression [32125,32142]"/>
  <match src="{: { [87394,87395]" dest="{: { [28154,28155]"/>
  <match src="type_cast_expression [34535,34563]" dest="type_cast_expression [47913,47941]"/>
  <match src="primitive_type [25705,25712]" dest="primitive_type [55396,55403]"/>
  <match src="function: function [86394,86402]" dest="function: function [27154,27162]"/>
  <match src="call_argument [43447,43473]" dest="call_argument [25551,25577]"/>
  <match src="constant: constant [75251,75259]" dest="constant: constant [63720,63728]"/>
  <match src="returns: returns [43387,43394]" dest="returns: returns [25491,25498]"/>
  <match src="identifier: account [47035,47042]" dest="identifier: account [19733,19740]"/>
  <match src="identifier: FOUR_BIT_MASK [36363,36376]" dest="identifier: FOUR_BIT_MASK [49741,49754]"/>
  <match src="return_type_definition [50675,50689]" dest="return_type_definition [15382,15396]"/>
  <match src="member_expression [90327,90340]" dest="member_expression [31087,31100]"/>
  <match src="view: view [11715,11719]" dest="view: view [16653,16657]"/>
  <match src="function_definition [28233,28786]" dest="function_definition [41611,42164]"/>
  <match src="identifier: amount [95462,95468]" dest="identifier: amount [36222,36228]"/>
  <match src="identifier: reason [95187,95193]" dest="identifier: reason [35947,35953]"/>
  <match src="returns: returns [90858,90865]" dest="returns: returns [31618,31625]"/>
  <match src="expression_statement [96609,96741]" dest="expression_statement [37369,37501]"/>
  <match src="call_argument [7026,7032]" dest="call_argument [7590,7596]"/>
  <match src="comment: /* solium-disable-next-line security/no-modify-for-iter-var */ [34388,34450]" dest="comment: /* solium-disable-next-line security/no-modify-for-iter-var */ [47766,47828]"/>
  <match src="user_defined_type [7251,7255]" dest="user_defined_type [7815,7819]"/>
  <match src="primitive_type [65806,65813]" dest="primitive_type [59820,59827]"/>
  <match src="identifier: amount [23133,23139]" dest="identifier: amount [51644,51650]"/>
  <match src="identifier: balance [93946,93953]" dest="identifier: balance [34706,34713]"/>
  <match src="struct_member [82116,82135]" dest="struct_member [21738,21757]"/>
  <match src="constant: constant [27395,27403]" dest="constant: constant [40773,40781]"/>
  <match src="]: ] [94746,94747]" dest="]: ] [35506,35507]"/>
  <match src="call_argument [32630,32649]" dest="call_argument [46008,46027]"/>
  <match src="type_name [27832,27836]" dest="type_name [41210,41214]"/>
  <match src="): ) [43027,43028]" dest="): ) [25131,25132]"/>
  <match src="identifier: epoch [90131,90136]" dest="identifier: epoch [30891,30896]"/>
  <match src="address: address [82602,82609]" dest="address: address [22224,22231]"/>
  <match src="identifier: sender [19781,19787]" dest="identifier: sender [58312,58318]"/>
  <match src="return_type_definition [86612,86629]" dest="return_type_definition [27372,27389]"/>
  <match src="): ) [86987,86988]" dest="): ) [27747,27748]"/>
  <match src="identifier: FILE [100527,100531]" dest="identifier: FILE [62884,62888]"/>
  <match src="bool: bool [49826,49830]" dest="bool: bool [14533,14537]"/>
  <match src="call_argument [94287,94293]" dest="call_argument [35047,35053]"/>
  <match src="identifier: sub [97486,97489]" dest="identifier: sub [38246,38249]"/>
  <match src="&gt;: &gt; [98981,98982]" dest="&gt;: &gt; [39741,39742]"/>
  <match src="identifier: capture [58882,58889]" dest="identifier: capture [20474,20481]"/>
  <match src="): ) [455,456]" dest="): ) [1019,1020]"/>
  <match src="(: ( [42640,42641]" dest="(: ( [24744,24745]"/>
  <match src="primitive_type [81708,81715]" dest="primitive_type [21330,21337]"/>
  <match src="identifier: periodFor [91289,91298]" dest="identifier: periodFor [32049,32058]"/>
  <match src="member_expression [98446,98481]" dest="member_expression [39206,39241]"/>
  <match src="call_expression [100599,100615]" dest="call_expression [62956,62972]"/>
  <match src="&gt;: &gt; [34312,34313]" dest="&gt;: &gt; [47690,47691]"/>
  <match src="uint256: uint256 [81708,81715]" dest="uint256: uint256 [21330,21337]"/>
  <match src="user_defined_type [7596,7600]" dest="user_defined_type [8160,8164]"/>
  <match src="): ) [44016,44017]" dest="): ) [26120,26121]"/>
  <match src="call_expression [32630,32649]" dest="call_expression [46008,46027]"/>
  <match src="identifier: value [7189,7194]" dest="identifier: value [7753,7758]"/>
  <match src="string_literal [77645,77680]" dest="string_literal [73409,73423]"/>
  <match src="-: - [36343,36344]" dest="-: - [49721,49722]"/>
  <match src="type_name [91607,91614]" dest="type_name [32367,32374]"/>
  <match src="event_paramater [50419,50441]" dest="event_paramater [15126,15148]"/>
  <match src="call_argument [75770,75780]" dest="call_argument [71245,71255]"/>
  <match src="external: external [93181,93189]" dest="external: external [33941,33949]"/>
  <match src="visibility [29568,29576]" dest="visibility [42946,42954]"/>
  <match src="parameter [93199,93203]" dest="parameter [33959,33963]"/>
  <match src=".: . [94799,94800]" dest=".: . [35559,35560]"/>
  <match src="struct_member [82958,82997]" dest="struct_member [22580,22619]"/>
  <match src="call_argument [71674,71680]" dest="call_argument [56910,56916]"/>
  <match src="call_argument [8121,8128]" dest="call_argument [8685,8692]"/>
  <match src="primitive_type [5752,5759]" dest="primitive_type [6316,6323]"/>
  <match src="if: if [30872,30874]" dest="if: if [44250,44252]"/>
  <match src="identifier: D256 [9082,9086]" dest="identifier: D256 [9646,9650]"/>
  <match src="identifier: coupons [95737,95744]" dest="identifier: coupons [36497,36504]"/>
  <match src="&quot;: &quot; [85206,85207]" dest="&quot;: &quot; [69881,69882]"/>
  <match src="binary_expression [89737,89789]" dest="binary_expression [30497,30549]"/>
  <match src="identifier: self [6588,6592]" dest="identifier: self [7152,7156]"/>
  <match src="number_literal: 1 [72340,72341]" dest="number_literal: 1 [72983,72984]"/>
  <match src="call_expression [90899,90933]" dest="call_expression [31659,31693]"/>
  <match src="=: = [98293,98294]" dest="=: = [39053,39054]"/>
  <match src="call_expression [7902,7942]" dest="call_expression [8466,8506]"/>
  <match src="uint256: uint256 [42183,42190]" dest="uint256: uint256 [24287,24294]"/>
  <match src="identifier: INITIAL_STAKE_MULTIPLE [42801,42823]" dest="identifier: INITIAL_STAKE_MULTIPLE [24905,24927]"/>
  <match src="uint256: uint256 [76701,76708]" dest="uint256: uint256 [57263,57270]"/>
  <match src=",: , [3994,3995]" dest=",: , [4558,4559]"/>
  <match src="parameter [72002,72016]" dest="parameter [56787,56801]"/>
  <match src="inheritance_specifier [92925,92930]" dest="inheritance_specifier [33685,33690]"/>
  <match src="call_argument [79148,79161]" dest="call_argument [65964,65977]"/>
  <match src="assignment_expression [98256,98351]" dest="assignment_expression [39016,39111]"/>
  <match src="identifier: epoch [77839,77844]" dest="identifier: epoch [65753,65758]"/>
  <match src="assignment_expression [97090,97142]" dest="assignment_expression [37850,37902]"/>
  <match src="uint: uint [51203,51207]" dest="uint: uint [15910,15914]"/>
  <match src="return_statement [91086,91137]" dest="return_statement [31846,31897]"/>
  <match src="identifier: value [6036,6041]" dest="identifier: value [6600,6605]"/>
  <match src="call_argument [77057,77062]" dest="call_argument [65192,65197]"/>
  <match src=",: , [77062,77063]" dest=",: , [65197,65198]"/>
  <match src="call_argument [94499,94505]" dest="call_argument [35259,35265]"/>
  <match src="binary_expression [19861,19884]" dest="binary_expression [58400,58423]"/>
  <match src="call_argument [4066,4092]" dest="call_argument [4630,4656]"/>
  <match src="primitive_type [5592,5599]" dest="primitive_type [6156,6163]"/>
  <match src="struct_declaration [82802,83059]" dest="struct_declaration [22424,22681]"/>
  <match src="uint256: uint256 [1655,1662]" dest="uint256: uint256 [2219,2226]"/>
  <match src="}: } [2089,2090]" dest="}: } [2653,2654]"/>
  <match src="array_access [90628,90668]" dest="array_access [31388,31428]"/>
  <match src="returns: returns [42547,42554]" dest="returns: returns [24651,24658]"/>
  <match src="byte: byte [36852,36856]" dest="byte: byte [50230,50234]"/>
  <match src="type_name [13962,13969]" dest="type_name [18900,18907]"/>
  <match src="if: if [1926,1928]" dest="if: if [2490,2492]"/>
  <match src="primitive_type [58929,58933]" dest="primitive_type [20521,20525]"/>
  <match src="comment: // XXX Currently there is no better way to check if there is a contract in an address [80440,80525]" dest="comment: // XXX Currently there is no better way to check if there is a contract in an address [67262,67347]"/>
  <match src="primitive_type [86325,86331]" dest="primitive_type [27085,27091]"/>
  <match src="view: view [87164,87168]" dest="view: view [27924,27928]"/>
  <match src="{: { [96931,96932]" dest="{: { [37691,37692]"/>
  <match src="function_body [45161,45293]" dest="function_body [51328,51534]"/>
  <match src="function_definition [33770,34670]" dest="function_definition [47148,48048]"/>
  <match src="call_argument [8739,8749]" dest="call_argument [9303,9313]"/>
  <match src="identifier: account [98866,98873]" dest="identifier: account [39626,39633]"/>
  <match src=".: . [77361,77362]" dest=".: . [65472,65473]"/>
  <match src="private: private [42191,42198]" dest="private: private [24295,24302]"/>
  <match src="member_expression [96941,96954]" dest="member_expression [37701,37714]"/>
  <match src="identifier: value [9549,9554]" dest="identifier: value [10113,10118]"/>
  <match src="function_definition [96783,96885]" dest="function_definition [37543,37645]"/>
  <match src="primitive_type [770,777]" dest="primitive_type [1334,1341]"/>
  <match src="return_statement [8707,8769]" dest="return_statement [9271,9333]"/>
  <match src="): ) [6617,6618]" dest="): ) [7181,7182]"/>
  <match src="call_argument [31124,31130]" dest="call_argument [44502,44508]"/>
  <match src="call_argument [87857,87868]" dest="call_argument [28617,28628]"/>
  <match src=",: , [2567,2568]" dest=",: , [3131,3132]"/>
  <match src=",: , [31809,31810]" dest=",: , [45187,45188]"/>
  <match src="for_statement [35194,35596]" dest="for_statement [48572,48974]"/>
  <match src="primitive_type [64136,64143]" dest="primitive_type [56824,56831]"/>
  <match src="}: } [7640,7641]" dest="}: } [8204,8205]"/>
  <match src="identifier: swap [51310,51314]" dest="identifier: swap [16017,16021]"/>
  <match src="identifier: value [10093,10098]" dest="identifier: value [10657,10662]"/>
  <match src="(: ( [50846,50847]" dest="(: ( [15553,15554]"/>
  <match src="{: { [81929,81930]" dest="{: { [21551,21552]"/>
  <match src="&quot;: &quot; [85266,85267]" dest="&quot;: &quot; [69941,69942]"/>
  <match src="identifier: couponsExpiration [90247,90264]" dest="identifier: couponsExpiration [31007,31024]"/>
  <match src="identifier: Provider [82878,82886]" dest="identifier: Provider [22500,22508]"/>
  <match src="identifier: accounts [94695,94703]" dest="identifier: accounts [35455,35463]"/>
  <match src="(: ( [95358,95359]" dest="(: ( [36118,36119]"/>
  <match src="call_expression [48210,48241]" dest="call_expression [58669,58705]"/>
  <match src="call_argument [16593,16599]" dest="call_argument [54323,54329]"/>
  <match src="type_name [51487,51494]" dest="type_name [16194,16201]"/>
  <match src="pure: pure [790,794]" dest="pure: pure [1354,1358]"/>
  <match src="identifier: D256 [7328,7332]" dest="identifier: D256 [7892,7896]"/>
  <match src="identifier: getChainId [43973,43983]" dest="identifier: getChainId [26077,26087]"/>
  <match src="(: ( [11728,11729]" dest="(: ( [16666,16667]"/>
  <match src="identifier: _state [94427,94433]" dest="identifier: _state [35187,35193]"/>
  <match src="(: ( [29334,29335]" dest="(: ( [42712,42713]"/>
  <match src="[: [ [94998,94999]" dest="[: [ [35758,35759]"/>
  <match src="yul_function_call [85347,85378]" dest="yul_function_call [70022,70053]"/>
  <match src="primitive_type [8853,8857]" dest="primitive_type [9417,9421]"/>
  <match src="parameter [50792,50799]" dest="parameter [15499,15506]"/>
  <match src="parameter [50925,50941]" dest="parameter [15632,15648]"/>
  <match src="(: ( [77314,77315]" dest="(: ( [71920,71921]"/>
  <match src="identifier: ASCII_RELATIVE_ZERO [36871,36890]" dest="identifier: ASCII_RELATIVE_ZERO [50249,50268]"/>
  <match src="identifier: i [35222,35223]" dest="identifier: i [48600,48601]"/>
  <match src="assignment_expression [94427,94506]" dest="assignment_expression [35187,35266]"/>
  <match src="member_expression [93788,93807]" dest="member_expression [34548,34567]"/>
  <match src="indexed: indexed [13947,13954]" dest="indexed: indexed [18885,18892]"/>
  <match src="type_cast_expression [35972,35989]" dest="type_cast_expression [49350,49367]"/>
  <match src="call_expression [88751,88758]" dest="call_expression [29511,29518]"/>
  <match src="uint256: uint256 [3985,3992]" dest="uint256: uint256 [4549,4556]"/>
  <match src=".: . [82932,82933]" dest=".: . [22554,22555]"/>
  <match src="call_argument [94760,94766]" dest="call_argument [35520,35526]"/>
  <match src=".: . [100462,100463]" dest=".: . [62819,62820]"/>
  <match src="comment: // remove the last decimal digit [34579,34611]" dest="comment: // remove the last decimal digit [47957,47989]"/>
  <match src="(: ( [98335,98336]" dest="(: ( [39095,39096]"/>
  <match src="user_defined_type [86109,86121]" dest="user_defined_type [26869,26881]"/>
  <match src="member_expression [88702,88723]" dest="member_expression [29462,29483]"/>
  <match src="state_mutability [88922,88926]" dest="state_mutability [29682,29686]"/>
  <match src="(: ( [86869,86870]" dest="(: ( [27629,27630]"/>
  <match src="string [85206,85267]" dest="string [69881,69942]"/>
  <match src=".: . [29045,29046]" dest=".: . [42423,42424]"/>
  <match src="identifier: reason [8350,8356]" dest="identifier: reason [8914,8920]"/>
  <match src="identifier: reason [93598,93604]" dest="identifier: reason [34358,34364]"/>
  <match src="string_literal [53733,53758]" dest="string_literal [65686,65717]"/>
  <match src="member_expression [45985,45997]" dest="member_expression [57014,57026]"/>
  <match src="returns: returns [89184,89191]" dest="returns: returns [29944,29951]"/>
  <match src="): ) [100130,100131]" dest="): ) [62487,62488]"/>
  <match src="identifier: newImplementation [84634,84651]" dest="identifier: newImplementation [69309,69326]"/>
  <match src="type_name [13730,13737]" dest="type_name [18668,18675]"/>
  <match src="call_argument [95987,95993]" dest="call_argument [36747,36753]"/>
  <match src="): ) [35225,35226]" dest="): ) [48603,48604]"/>
  <match src=",: , [61236,61237]" dest=",: , [73236,73237]"/>
  <match src="): ) [50799,50800]" dest="): ) [15506,15507]"/>
  <match src="variable_declaration [97290,97324]" dest="variable_declaration [38050,38084]"/>
  <match src="return_statement [43305,43330]" dest="return_statement [25409,25434]"/>
  <match src="return: return [10153,10159]" dest="return: return [10717,10723]"/>
  <match src="identifier: lessThan [9055,9063]" dest="identifier: lessThan [9619,9627]"/>
  <match src=",: , [75490,75491]" dest=",: , [64003,64004]"/>
  <match src="uint256: uint256 [66107,66114]" dest="uint256: uint256 [59835,59842]"/>
  <match src="call_expression [75910,75924]" dest="call_expression [52230,52244]"/>
  <match src="function_definition [90238,90373]" dest="function_definition [30998,31133]"/>
  <match src="interface: interface [49119,49128]" dest="interface: interface [13826,13835]"/>
  <match src="identifier: decrementBalanceOfStaged [76099,76123]" dest="identifier: decrementBalanceOfStaged [64656,64680]"/>
  <match src="identifier: Decimal [58908,58915]" dest="identifier: Decimal [20500,20507]"/>
  <match src="type_name [64136,64143]" dest="type_name [56824,56831]"/>
  <match src="call_argument [61250,61254]" dest="call_argument [73250,73254]"/>
  <match src="visibility [4667,4675]" dest="visibility [5231,5239]"/>
  <match src="(: ( [1316,1317]" dest="(: ( [1880,1881]"/>
  <match src="call_argument [43059,43087]" dest="call_argument [25163,25191]"/>
  <match src="identifier: D256 [9591,9595]" dest="identifier: D256 [10155,10159]"/>
  <match src=".: . [98856,98857]" dest=".: . [39616,39617]"/>
  <match src="identifier: totalSupply [11541,11552]" dest="identifier: totalSupply [16479,16490]"/>
  <match src="struct_member [82878,82896]" dest="struct_member [22500,22518]"/>
  <match src="event_definition [75399,75451]" dest="event_definition [74631,74694]"/>
  <match src="=: = [27469,27470]" dest="=: = [40847,40848]"/>
  <match src="return_statement [33738,33758]" dest="return_statement [47116,47136]"/>
  <match src="primitive_type [91207,91214]" dest="primitive_type [31967,31974]"/>
  <match src="{: { [33896,33897]" dest="{: { [47274,47275]"/>
  <match src="identifier: amount [95979,95985]" dest="identifier: amount [36739,36745]"/>
  <match src="string_literal [46066,46080]" dest="string_literal [51694,51738]"/>
  <match src="type_name [3996,4003]" dest="type_name [4560,4567]"/>
  <match src="function_definition [86692,86790]" dest="function_definition [27452,27550]"/>
  <match src="struct_declaration [5730,5772]" dest="struct_declaration [6294,6336]"/>
  <match src="identifier: RPAREN [31353,31359]" dest="identifier: RPAREN [44731,44737]"/>
  <match src="primitive_type [51173,51180]" dest="primitive_type [15880,15887]"/>
  <match src="member_expression [87204,87219]" dest="member_expression [27964,27979]"/>
  <match src="call_argument [79380,79384]" dest="call_argument [71848,71852]"/>
  <match src="{: { [23104,23105]" dest="{: { [51607,51608]"/>
  <match src=".: . [97185,97186]" dest=".: . [37945,37946]"/>
  <match src="identifier: candidates [98302,98312]" dest="identifier: candidates [39062,39072]"/>
  <match src="identifier: mod [3981,3984]" dest="identifier: mod [4545,4548]"/>
  <match src="function: function [51041,51049]" dest="function: function [15748,15756]"/>
  <match src="identifier: D256 [8714,8718]" dest="identifier: D256 [9278,9282]"/>
  <match src="identifier: epoch [96955,96960]" dest="identifier: epoch [37715,37720]"/>
  <match src="type_name [7071,7075]" dest="type_name [7635,7639]"/>
  <match src="returns: returns [35705,35712]" dest="returns: returns [49083,49090]"/>
  <match src="): ) [79125,79126]" dest="): ) [54099,54100]"/>
  <match src="comment: /**  * @title Decimal  * @author dYdX  *  * Library that defines a fixed-point number with 18 decimal places.  */ [5437,5550]" dest="comment: /**  * @title Decimal  * @author dYdX  *  * Library that defines a fixed-point number with 18 decimal places.  */ [6001,6114]"/>
  <match src="): ) [91614,91615]" dest="): ) [32374,32375]"/>
  <match src="): ) [87155,87156]" dest="): ) [27915,27916]"/>
  <match src="uint256: uint256 [41502,41509]" dest="uint256: uint256 [23606,23613]"/>
  <match src="): ) [42868,42869]" dest="): ) [24972,24973]"/>
  <match src="identifier: FILE [79002,79006]" dest="identifier: FILE [53549,53553]"/>
  <match src="yul_evm_builtin [80905,80916]" dest="yul_evm_builtin [67727,67738]"/>
  <match src="binary_expression [100026,100061]" dest="binary_expression [62383,62418]"/>
  <match src=".: . [98057,98058]" dest=".: . [38817,38818]"/>
  <match src="primitive_type [21988,21995]" dest="primitive_type [58003,58010]"/>
  <match src="identifier: D256 [62479,62483]" dest="identifier: D256 [13339,13343]"/>
  <match src="visibility [60469,60476]" dest="visibility [60303,60310]"/>
  <match src="identifier: dollarAmount [73472,73484]" dest="identifier: dollarAmount [57350,57362]"/>
  <match src="primitive_type [96568,96574]" dest="primitive_type [37328,37334]"/>
  <match src="function: function [43964,43972]" dest="function: function [26068,26076]"/>
  <match src="address: address [58979,58986]" dest="address: address [20571,20578]"/>
  <match src="return: return [90621,90627]" dest="return: return [31381,31387]"/>
  <match src="(: ( [93730,93731]" dest="(: ( [34490,34491]"/>
  <match src="uint256: uint256 [35754,35761]" dest="uint256: uint256 [49132,49139]"/>
  <match src="(: ( [86735,86736]" dest="(: ( [27495,27496]"/>
  <match src="&quot;: &quot; [60454,60455]" dest="&quot;: &quot; [55111,55112]"/>
  <match src="(: ( [78867,78868]" dest="(: ( [53396,53397]"/>
  <match src="member_expression [94809,94830]" dest="member_expression [35569,35590]"/>
  <match src="[: [ [96266,96267]" dest="[: [ [37026,37027]"/>
  <match src="identifier: getBootstrappingPeriod [90057,90079]" dest="identifier: getBootstrappingPeriod [30817,30839]"/>
  <match src=",: , [91018,91019]" dest=",: , [31778,31779]"/>
  <match src="identifier: amount [94760,94766]" dest="identifier: amount [35520,35526]"/>
  <match src="number_literal: 0 [36165,36166]" dest="number_literal: 0 [49543,49544]"/>
  <match src="(: ( [96960,96961]" dest="(: ( [37720,37721]"/>
  <match src="call_expression [31702,31726]" dest="call_expression [45080,45104]"/>
  <match src="): ) [95092,95093]" dest="): ) [35852,35853]"/>
  <match src="): ) [28072,28073]" dest="): ) [41450,41451]"/>
  <match src="uint256: uint256 [76556,76563]" dest="uint256: uint256 [64809,64816]"/>
  <match src="}: } [100636,100637]" dest="}: } [62993,62994]"/>
  <match src="contract: contract [83868,83876]" dest="contract: contract [68543,68551]"/>
  <match src="identifier: State [86047,86052]" dest="identifier: State [26807,26812]"/>
  <match src="bytes32: bytes32 [31524,31531]" dest="bytes32: bytes32 [44902,44909]"/>
  <match src="): ) [77874,77875]" dest="): ) [65782,65783]"/>
  <match src="(: ( [6364,6365]" dest="(: ( [6928,6929]"/>
  <match src="=: = [393,394]" dest="=: = [957,958]"/>
  <match src="call_argument [34946,34948]" dest="call_argument [48324,48326]"/>
  <match src=".: . [9914,9915]" dest=".: . [10478,10479]"/>
  <match src="expression_statement [77962,78075]" dest="expression_statement [53801,53912]"/>
  <match src="identifier: recipient [17686,17695]" dest="identifier: epoch [58516,58521]"/>
  <match src="member_expression [88800,88821]" dest="member_expression [29560,29581]"/>
  <match src="uint256: uint256 [72002,72009]" dest="uint256: uint256 [56787,56794]"/>
  <match src="}: } [89243,89244]" dest="}: } [30003,30004]"/>
  <match src="[: [ [95521,95522]" dest="[: [ [36281,36282]"/>
  <match src="returns: returns [6941,6948]" dest="returns: returns [7505,7512]"/>
  <match src="assignment_expression [34266,34275]" dest="assignment_expression [47644,47653]"/>
  <match src="}: } [92092,92093]" dest="}: } [32852,32853]"/>
  <match src=",: , [9024,9025]" dest=",: , [9588,9589]"/>
  <match src="user_defined_type [9591,9595]" dest="user_defined_type [10155,10159]"/>
  <match src="): ) [7032,7033]" dest="): ) [7596,7597]"/>
  <match src="identifier: account [86591,86598]" dest="identifier: account [27351,27358]"/>
  <match src="identifier: epoch [97264,97269]" dest="identifier: epoch [38024,38029]"/>
  <match src="identifier: add [93514,93517]" dest="identifier: add [34274,34277]"/>
  <match src="parameter [7868,7879]" dest="parameter [8432,8443]"/>
  <match src="identifier: transfer [11967,11975]" dest="identifier: transfer [16905,16913]"/>
  <match src="call_expression [95635,95687]" dest="call_expression [36395,36447]"/>
  <match src="view: view [87066,87070]" dest="view: view [27826,27830]"/>
  <match src="): ) [73714,73715]" dest="): ) [54259,54260]"/>
  <match src="type_name [93199,93203]" dest="type_name [33959,33963]"/>
  <match src="{: { [31573,31574]" dest="{: { [44951,44952]"/>
  <match src="): ) [97677,97678]" dest="): ) [38437,38438]"/>
  <match src="function_body [78878,79241]" dest="function_body [53407,53739]"/>
  <match src="call_expression [7196,7213]" dest="call_expression [7760,7777]"/>
  <match src="function_definition [43487,43591]" dest="function_definition [25591,25695]"/>
  <match src="internal: internal [98629,98637]" dest="internal: internal [39389,39397]"/>
  <match src="(: ( [88286,88287]" dest="(: ( [29046,29047]"/>
  <match src="): ) [89445,89446]" dest="): ) [30205,30206]"/>
  <match src=".: . [98512,98513]" dest=".: . [39272,39273]"/>
  <match src="parameter [88883,88896]" dest="parameter [29643,29656]"/>
  <match src="): ) [6803,6804]" dest="): ) [7367,7368]"/>
  <match src="function_definition [7049,7223]" dest="function_definition [7613,7787]"/>
  <match src="identifier: dollar [78914,78920]" dest="identifier: dollar [53443,53449]"/>
  <match src="identifier: ASCII_ZERO [35978,35988]" dest="identifier: ASCII_ZERO [49356,49366]"/>
  <match src="identifier: epochStart [89755,89765]" dest="identifier: epochStart [30515,30525]"/>
  <match src="call_argument [21899,21918]" dest="call_argument [57040,57056]"/>
  <match src="): ) [90166,90167]" dest="): ) [30926,30927]"/>
  <match src="): ) [28736,28737]" dest="): ) [42114,42115]"/>
  <match src="uint256: uint256 [82700,82707]" dest="uint256: uint256 [22322,22329]"/>
  <match src="state_mutability [9860,9864]" dest="state_mutability [10424,10428]"/>
  <match src="call_expression [95060,95093]" dest="call_expression [35820,35853]"/>
  <match src="(: ( [2015,2016]" dest="(: ( [2579,2580]"/>
  <match src="(: ( [77802,77803]" dest="(: ( [51762,51763]"/>
  <match src="(: ( [8930,8931]" dest="(: ( [9494,9495]"/>
  <match src="): ) [96394,96395]" dest="): ) [37154,37155]"/>
  <match src=",: , [1653,1654]" dest=",: , [2217,2218]"/>
  <match src="identifier: timestamp [89909,89918]" dest="identifier: timestamp [30669,30678]"/>
  <match src="identifier: D256 [86117,86121]" dest="identifier: D256 [26877,26881]"/>
  <match src="function: function [49927,49935]" dest="function: function [14634,14642]"/>
  <match src="function_definition [306,482]" dest="function_definition [870,1046]"/>
  <match src="identifier: amount [96388,96394]" dest="identifier: amount [37148,37154]"/>
  <match src="identifier: isInitialized [100482,100495]" dest="identifier: isInitialized [62839,62852]"/>
  <match src="type_name [67034,67041]" dest="type_name [70779,70786]"/>
  <match src="parameter [91299,91316]" dest="parameter [32059,32076]"/>
  <match src="function_definition [91413,91542]" dest="function_definition [32173,32302]"/>
  <match src="uint256: uint256 [97663,97670]" dest="uint256: uint256 [38423,38430]"/>
  <match src="=: = [36163,36164]" dest="=: = [49541,49542]"/>
  <match src="}: } [91818,91819]" dest="}: } [32578,32579]"/>
  <match src="parameter [47044,47058]" dest="parameter [19742,19756]"/>
  <match src="visibility [50824,50832]" dest="visibility [15531,15539]"/>
  <match src=",: , [100086,100087]" dest=",: , [62443,62444]"/>
  <match src="visibility [6275,6283]" dest="visibility [6839,6847]"/>
  <match src="identifier: epoch [95522,95527]" dest="identifier: epoch [36282,36287]"/>
  <match src="identifier: getPartial [6354,6364]" dest="identifier: getPartial [6918,6928]"/>
  <match src="assignment_expression [95697,95756]" dest="assignment_expression [36457,36516]"/>
  <match src="internal: internal [71218,71226]" dest="internal: internal [52021,52029]"/>
  <match src="identifier: D256 [43770,43774]" dest="identifier: D256 [25874,25878]"/>
  <match src="function_definition [97619,97803]" dest="function_definition [38379,38563]"/>
  <match src="comment: // ', ' [27617,27624]" dest="comment: // ', ' [40995,41002]"/>
  <match src="identifier: oracle [87050,87056]" dest="identifier: oracle [27810,27816]"/>
  <match src="--: -- [33302,33304]" dest="--: -- [46680,46682]"/>
  <match src="identifier: redeemable [87634,87644]" dest="identifier: redeemable [28394,28404]"/>
  <match src=",: , [30411,30412]" dest=",: , [43789,43790]"/>
  <match src="uint256: uint256 [88129,88136]" dest="uint256: uint256 [28889,28896]"/>
  <match src="primitive_type [49826,49830]" dest="primitive_type [14533,14537]"/>
  <match src="identifier: account [99026,99033]" dest="identifier: account [39786,39793]"/>
  <match src="visibility [7837,7845]" dest="visibility [8401,8409]"/>
  <match src="address: address [98392,98399]" dest="address: address [39152,39159]"/>
  <match src="primitive_type [89091,89098]" dest="primitive_type [29851,29858]"/>
  <match src="type_name [60589,60596]" dest="type_name [71023,71030]"/>
  <match src=".: . [88968,88969]" dest=".: . [29728,29729]"/>
  <match src="identifier: accounts [86654,86662]" dest="identifier: accounts [27414,27422]"/>
  <match src="uint256: uint256 [15890,15897]" dest="uint256: uint256 [11549,11556]"/>
  <match src="type_name [42321,42328]" dest="type_name [24425,24432]"/>
  <match src="returns: returns [51259,51266]" dest="returns: returns [15966,15973]"/>
  <match src="parameter [8625,8638]" dest="parameter [9189,9202]"/>
  <match src="type_name [50684,50688]" dest="type_name [15391,15395]"/>
  <match src="(: ( [8475,8476]" dest="(: ( [9039,9040]"/>
  <match src="identifier: balance [95340,95347]" dest="identifier: balance [36100,36107]"/>
  <match src="indexed: indexed [75475,75482]" dest="indexed: indexed [63988,63995]"/>
  <match src="): ) [76246,76247]" dest="): ) [64781,64782]"/>
  <match src="call_argument [6579,6617]" dest="call_argument [7143,7181]"/>
  <match src="string [78037,78064]" dest="string [53876,53901]"/>
  <match src="&quot;: &quot; [25955,25956]" dest="&quot;: &quot; [72179,72180]"/>
  <match src="expression_statement [21106,21174]" dest="expression_statement [57682,57780]"/>
  <match src=".: . [94271,94272]" dest=".: . [35031,35032]"/>
  <match src="): ) [80406,80407]" dest="): ) [67228,67229]"/>
  <match src="identifier: epochPeriod [89259,89270]" dest="identifier: epochPeriod [30019,30030]"/>
  <match src="primitive_type [84626,84633]" dest="primitive_type [69301,69308]"/>
  <match src="function_body [7885,7949]" dest="function_body [8449,8513]"/>
  <match src="{: { [97280,97281]" dest="{: { [38040,38041]"/>
  <match src="primitive_type [41296,41303]" dest="primitive_type [23400,23407]"/>
  <match src="call_argument [95359,95365]" dest="call_argument [36119,36125]"/>
  <match src="for: for [67030,67033]" dest="for: for [70775,70778]"/>
  <match src="call_argument [95292,95298]" dest="call_argument [36052,36058]"/>
  <match src="): ) [13118,13119]" dest="): ) [18056,18057]"/>
  <match src="(: ( [89090,89091]" dest="(: ( [29850,29851]"/>
  <match src="external: external [49897,49905]" dest="external: external [14604,14612]"/>
  <match src="public: public [87059,87065]" dest="public: public [27819,27825]"/>
  <match src="member_expression [87106,87121]" dest="member_expression [27866,27881]"/>
  <match src="uint256: uint256 [41693,41700]" dest="uint256: uint256 [23797,23804]"/>
  <match src="type_name [75540,75547]" dest="type_name [63882,63889]"/>
  <match src="{: { [813,814]" dest="{: { [1377,1378]"/>
  <match src="): ) [19752,19753]" dest="): ) [58283,58284]"/>
  <match src="identifier: tokenA [73932,73938]" dest="identifier: candidate [72767,72776]"/>
  <match src="call_argument [29249,29268]" dest="call_argument [42627,42646]"/>
  <match src="identifier: reason [8230,8236]" dest="identifier: reason [8794,8800]"/>
  <match src="): ) [77179,77180]" dest="): ) [66253,66254]"/>
  <match src="): ) [30487,30488]" dest="): ) [43865,43866]"/>
  <match src="(: ( [8852,8853]" dest="(: ( [9416,9417]"/>
  <match src="{: { [8993,8994]" dest="{: { [9557,9558]"/>
  <match src=".: . [96694,96695]" dest=".: . [37454,37455]"/>
  <match src="visibility [87572,87578]" dest="visibility [28332,28338]"/>
  <match src="internal: internal [22368,22376]" dest="internal: internal [11597,11605]"/>
  <match src="): ) [68881,68882]" dest="): ) [73727,73728]"/>
  <match src=",: , [75377,75378]" dest=",: , [63849,63850]"/>
  <match src="identifier: sub [87853,87856]" dest="identifier: sub [28613,28616]"/>
  <match src="identifier: value [8319,8324]" dest="identifier: value [8883,8888]"/>
  <match src="internal: internal [9242,9250]" dest="internal: internal [9806,9814]"/>
  <match src="contract: contract [81914,81922]" dest="contract: contract [21536,21544]"/>
  <match src=".: . [7206,7207]" dest=".: . [7770,7771]"/>
  <match src="primitive_type [19791,19798]" dest="primitive_type [58322,58329]"/>
  <match src="member_expression [97463,97489]" dest="member_expression [38223,38249]"/>
  <match src="call_expression [96672,96740]" dest="call_expression [37432,37500]"/>
  <match src="string_literal [25243,25278]" dest="string_literal [72326,72356]"/>
  <match src="identifier: sender [77570,77576]" dest="identifier: sender [57394,57400]"/>
  <match src="}: } [14003,14004]" dest="}: } [18941,18942]"/>
  <match src="parameter [30715,30727]" dest="parameter [44093,44105]"/>
  <match src="member_expression [8739,8749]" dest="member_expression [9303,9313]"/>
  <match src="call_argument [100599,100615]" dest="call_argument [62956,62972]"/>
  <match src="(: ( [9520,9521]" dest="(: ( [10084,10085]"/>
  <match src="identifier: account [25721,25728]" dest="identifier: account [55412,55419]"/>
  <match src="unary_expression [27934,27939]" dest="unary_expression [41312,41317]"/>
  <match src="!: ! [31587,31588]" dest="!: ! [44965,44966]"/>
  <match src="(: ( [8277,8278]" dest="(: ( [8841,8842]"/>
  <match src="identifier: incrementBalanceOf [94356,94374]" dest="identifier: incrementBalanceOf [35116,35134]"/>
  <match src="return_statement [1952,1961]" dest="return_statement [2516,2525]"/>
  <match src="external: external [12361,12369]" dest="external: external [17299,17307]"/>
  <match src="function: function [6631,6639]" dest="function: function [7195,7203]"/>
  <match src="{: { [7345,7346]" dest="{: { [7909,7910]"/>
  <match src="]: ] [97779,97780]" dest="]: ] [38539,38540]"/>
  <match src="memory: memory [98222,98228]" dest="memory: memory [38982,38988]"/>
  <match src="identifier: to [49283,49285]" dest="identifier: to [13990,13992]"/>
  <match src="type_name [26048,26055]" dest="type_name [51565,51572]"/>
  <match src="memory: memory [32982,32988]" dest="memory: memory [46360,46366]"/>
  <match src="): ) [42750,42751]" dest="): ) [24854,24855]"/>
  <match src="struct_member [82774,82790]" dest="struct_member [22396,22412]"/>
  <match src="(: ( [101706,101707]" dest="(: ( [61329,61330]"/>
  <match src="parameter [6843,6859]" dest="parameter [7407,7423]"/>
  <match src="comment: // Mainnet [41335,41345]" dest="comment: // Mainnet [23439,23449]"/>
  <match src=".: . [95620,95621]" dest=".: . [36380,36381]"/>
  <match src="[: [ [98273,98274]" dest="[: [ [39033,39034]"/>
  <match src="&lt;: &lt; [36729,36730]" dest="&lt;: &lt; [50107,50108]"/>
  <match src="identifier: owner [88891,88896]" dest="identifier: owner [29651,29656]"/>
  <match src="function_definition [2545,2675]" dest="function_definition [3109,3239]"/>
  <match src="type_name [63082,63089]" dest="type_name [60760,60767]"/>
  <match src="identifier: result [33587,33593]" dest="identifier: result [46965,46971]"/>
  <match src="call_argument [9153,9157]" dest="call_argument [9717,9721]"/>
  <match src="identifier: amount [98599,98605]" dest="identifier: amount [39359,39365]"/>
  <match src="string [22498,22536]" dest="string [57225,57242]"/>
  <match src="): ) [50049,50050]" dest="): ) [14756,14757]"/>
  <match src="identifier: payloadB [32564,32572]" dest="identifier: payloadB [45942,45950]"/>
  <match src="identifier: numerator [9919,9928]" dest="identifier: numerator [10483,10492]"/>
  <match src=".: . [96296,96297]" dest=".: . [37056,37057]"/>
  <match src="number_literal: 120 [27525,27528]" dest="number_literal: 120 [40903,40906]"/>
  <match src="identifier: div [88283,88286]" dest="identifier: div [29043,29046]"/>
  <match src="call_expression [21969,22037]" dest="call_expression [57984,58060]"/>
  <match src="parameter [95140,95155]" dest="parameter [35900,35915]"/>
  <match src="return: return [6333,6339]" dest="return: return [6897,6903]"/>
  <match src="function_body [86448,86478]" dest="function_body [27208,27238]"/>
  <match src="function: function [7955,7963]" dest="function: function [8519,8527]"/>
  <match src="private: private [32871,32878]" dest="private: private [46249,46256]"/>
  <match src="type_name [6653,6657]" dest="type_name [7217,7221]"/>
  <match src="primitive_type [9767,9774]" dest="primitive_type [10331,10338]"/>
  <match src="): ) [95298,95299]" dest="): ) [36058,36059]"/>
  <match src="(: ( [1216,1217]" dest="(: ( [1780,1781]"/>
  <match src="parameter [28906,28922]" dest="parameter [42284,42300]"/>
  <match src="primitive_type [89193,89200]" dest="primitive_type [29953,29960]"/>
  <match src="member_expression [6998,7008]" dest="member_expression [7562,7572]"/>
  <match src="binary_expression [7539,7545]" dest="binary_expression [8103,8109]"/>
  <match src="): ) [93604,93605]" dest="): ) [34364,34365]"/>
  <match src=",: , [50290,50291]" dest=",: , [14997,14998]"/>
  <match src=".: . [8758,8759]" dest=".: . [9322,9323]"/>
  <match src="member_expression [100026,100068]" dest="member_expression [62383,62425]"/>
  <match src="memory: memory [96575,96581]" dest="memory: memory [37335,37341]"/>
  <match src="): ) [61295,61296]" dest="): ) [73295,73296]"/>
  <match src="state_mutability [8973,8977]" dest="state_mutability [9537,9541]"/>
  <match src=".: . [76353,76354]" dest=".: . [64631,64632]"/>
  <match src="identifier: balanceOfBonded [77342,77357]" dest="identifier: balanceOfBonded [65453,65468]"/>
  <match src=".: . [88786,88787]" dest=".: . [29546,29547]"/>
  <match src="call_expression [98484,98531]" dest="call_expression [39244,39291]"/>
  <match src="identifier: amount [95284,95290]" dest="identifier: amount [36044,36050]"/>
  <match src="call_argument [100301,100308]" dest="call_argument [62658,62665]"/>
  <match src="function: function [51159,51167]" dest="function: function [15866,15874]"/>
  <match src="variable_declaration_statement [68587,68623]" dest="variable_declaration_statement [60321,60381]"/>
  <match src="call_argument [96876,96877]" dest="call_argument [37636,37637]"/>
  <match src="identifier: a [1322,1323]" dest="identifier: a [1886,1887]"/>
  <match src="identifier: _state [88633,88639]" dest="identifier: _state [29393,29399]"/>
  <match src="state_mutability [87579,87583]" dest="state_mutability [28339,28343]"/>
  <match src="memory: memory [6000,6006]" dest="memory: memory [6564,6570]"/>
  <match src=",: , [78005,78006]" dest=",: , [53844,53845]"/>
  <match src="): ) [96106,96107]" dest="): ) [36866,36867]"/>
  <match src="binary_expression [7672,7677]" dest="binary_expression [8236,8241]"/>
  <match src="call_argument [73654,73664]" dest="call_argument [72626,72630]"/>
  <match src="identifier: that [30682,30686]" dest="identifier: that [44060,44064]"/>
  <match src="return_statement [90459,90511]" dest="return_statement [31219,31271]"/>
  <match src="address: address [91567,91574]" dest="address: address [32327,32334]"/>
  <match src="if_statement [32194,32746]" dest="if_statement [45572,46124]"/>
  <match src="function_body [10077,10192]" dest="function_body [10641,10756]"/>
  <match src="): ) [6198,6199]" dest="): ) [6762,6763]"/>
  <match src="state_mutability [50893,50897]" dest="state_mutability [15600,15604]"/>
  <match src="user_defined_type [15742,15749]" dest="user_defined_type [55014,55025]"/>
  <match src="parameter [94631,94645]" dest="parameter [35391,35405]"/>
  <match src="identifier: D256 [7431,7435]" dest="identifier: D256 [7995,7999]"/>
  <match src="indexed: indexed [13716,13723]" dest="indexed: indexed [18654,18661]"/>
  <match src="user_defined_type [63050,63062]" dest="user_defined_type [61250,61262]"/>
  <match src="expression_statement [34310,34316]" dest="expression_statement [47688,47694]"/>
  <match src="uint256: uint256 [87977,87984]" dest="uint256: uint256 [28737,28744]"/>
  <match src="identifier: compareTo [9968,9977]" dest="identifier: compareTo [10532,10541]"/>
  <match src="): ) [85203,85204]" dest="): ) [69878,69879]"/>
  <match src="call_argument [30437,30443]" dest="call_argument [43815,43821]"/>
  <match src="identifier: must [32199,32203]" dest="identifier: must [45577,45581]"/>
  <match src="): ) [25728,25729]" dest="): ) [55464,55465]"/>
  <match src="array_access [35001,35010]" dest="array_access [48379,48388]"/>
  <match src="function: function [33770,33778]" dest="function: function [47148,47156]"/>
  <match src="member_expression [88824,88838]" dest="member_expression [29584,29598]"/>
  <match src="identifier: BOOTSTRAPPING_PERIOD [41400,41420]" dest="identifier: BOOTSTRAPPING_PERIOD [23504,23524]"/>
  <match src="view: view [12370,12374]" dest="view: view [17308,17312]"/>
  <match src="primitive_type [6888,6894]" dest="primitive_type [7452,7458]"/>
  <match src="&quot;: &quot; [76177,76178]" dest="&quot;: &quot; [64737,64738]"/>
  <match src="(: ( [12028,12029]" dest="(: ( [16966,16967]"/>
  <match src="function_definition [91548,91675]" dest="function_definition [32308,32435]"/>
  <match src="identifier: shift [36345,36350]" dest="identifier: shift [49723,49728]"/>
  <match src="visibility [97271,97279]" dest="visibility [38031,38039]"/>
  <match src="return: return [88488,88494]" dest="return: return [29248,29254]"/>
  <match src="call_argument [77940,77950]" dest="call_argument [64851,64861]"/>
  <match src="function: function [32810,32818]" dest="function: function [46188,46196]"/>
  <match src="(: ( [90026,90027]" dest="(: ( [30786,30787]"/>
  <match src="member_expression [7916,7930]" dest="member_expression [8480,8494]"/>
  <match src="call_argument [4717,4723]" dest="call_argument [5281,5287]"/>
  <match src="type_cast_expression [34530,34564]" dest="type_cast_expression [47908,47942]"/>
  <match src=",: , [13985,13986]" dest=",: , [18923,18924]"/>
  <match src="): ) [77222,77223]" dest="): ) [65344,65345]"/>
  <match src="identifier: must [30040,30044]" dest="identifier: must [43418,43422]"/>
  <match src="returns: returns [9397,9404]" dest="returns: returns [9961,9968]"/>
  <match src=".: . [94561,94562]" dest=".: . [35321,35322]"/>
  <match src="member_expression [95893,95925]" dest="member_expression [36653,36685]"/>
  <match src="number_literal: 1e17 [42304,42308]" dest="number_literal: 1e17 [24408,24412]"/>
  <match src="identifier: ASCII_ZERO [35024,35034]" dest="identifier: ASCII_ZERO [48402,48412]"/>
  <match src="call_argument [89702,89721]" dest="call_argument [30462,30481]"/>
  <match src="identifier: totalSupply [49489,49500]" dest="identifier: totalSupply [14196,14207]"/>
  <match src="return_statement [87823,87870]" dest="return_statement [28583,28630]"/>
  <match src="return: return [88460,88466]" dest="return: return [29220,29226]"/>
  <match src="(: ( [3202,3203]" dest="(: ( [3766,3767]"/>
  <match src="array_access [95635,95655]" dest="array_access [36395,36415]"/>
  <match src=".: . [96032,96033]" dest=".: . [36792,36793]"/>
  <match src="parameter [96380,96394]" dest="parameter [37140,37154]"/>
  <match src="): ) [42641,42642]" dest="): ) [24745,24746]"/>
  <match src="uint256: uint256 [91607,91614]" dest="uint256: uint256 [32367,32374]"/>
  <match src="function_definition [13046,13120]" dest="function_definition [17984,18058]"/>
  <match src=".: . [98262,98263]" dest=".: . [39022,39023]"/>
  <match src="type_name [82194,82201]" dest="type_name [21816,21823]"/>
  <match src="primitive_type [43651,43658]" dest="primitive_type [25755,25762]"/>
  <match src="type_name [95852,95858]" dest="type_name [36612,36618]"/>
  <match src="): ) [27892,27893]" dest="): ) [41270,41271]"/>
  <match src="}: } [48048,48049]" dest="}: } [51254,51255]"/>
  <match src="identifier: Claim [76505,76510]" dest="identifier: Commit [73480,73486]"/>
  <match src="bytes32: bytes32 [32847,32854]" dest="bytes32: bytes32 [46225,46232]"/>
  <match src="uint256: uint256 [16990,16997]" dest="uint256: uint256 [54218,54225]"/>
  <match src="identifier: msg [11038,11041]" dest="identifier: msg [58645,58648]"/>
  <match src="variable_declaration [63405,63430]" dest="variable_declaration [61282,61307]"/>
  <match src="return_statement [64155,64171]" dest="return_statement [56843,56918]"/>
  <match src="function_body [93337,93366]" dest="function_body [34097,34126]"/>
  <match src="primitive_type [100239,100246]" dest="primitive_type [62596,62603]"/>
  <match src="returns: returns [43156,43163]" dest="returns: returns [25260,25267]"/>
  <match src="identifier: char [35538,35542]" dest="identifier: char [48916,48920]"/>
  <match src="uint256: uint256 [36241,36248]" dest="uint256: uint256 [49619,49626]"/>
  <match src="[: [ [91926,91927]" dest="[: [ [32686,32687]"/>
  <match src="(: ( [98947,98948]" dest="(: ( [39707,39708]"/>
  <match src="identifier: sender [75118,75124]" dest="identifier: sender [57712,57718]"/>
  <match src="identifier: IERC20 [46895,46901]" dest="identifier: IERC20 [19593,19599]"/>
  <match src="type_name [49708,49715]" dest="type_name [14415,14422]"/>
  <match src="function_definition [6212,6386]" dest="function_definition [6776,6950]"/>
  <match src="modifier_definition [100211,100416]" dest="modifier_definition [62568,62773]"/>
  <match src="member_expression [98256,98292]" dest="member_expression [39016,39052]"/>
  <match src="type_name [43286,43293]" dest="type_name [25390,25397]"/>
  <match src="primitive_type [98180,98187]" dest="primitive_type [38940,38947]"/>
  <match src="external: external [50884,50892]" dest="external: external [15591,15599]"/>
  <match src="): ) [35422,35423]" dest="): ) [48800,48801]"/>
  <match src="[: [ [97939,97940]" dest="[: [ [38699,38700]"/>
  <match src=",: , [74976,74977]" dest=",: , [63652,63653]"/>
  <match src="identifier: epochs [95599,95605]" dest="identifier: epochs [36359,36365]"/>
  <match src="identifier: account [95148,95155]" dest="identifier: account [35908,35915]"/>
  <match src="primitive_type [50684,50688]" dest="primitive_type [15391,15395]"/>
  <match src="identifier: value [75515,75520]" dest="identifier: value [64028,64033]"/>
  <match src="state_mutability [29581,29585]" dest="state_mutability [42959,42963]"/>
  <match src="call_expression [77839,77846]" dest="call_expression [65753,65760]"/>
  <match src="[: [ [98463,98464]" dest="[: [ [39223,39224]"/>
  <match src=".: . [10092,10093]" dest=".: . [10656,10657]"/>
  <match src="constant: constant [27548,27556]" dest="constant: constant [40926,40934]"/>
  <match src="return_type_definition [51138,51152]" dest="return_type_definition [15845,15859]"/>
  <match src="call_argument [20516,20549]" dest="call_argument [53706,53722]"/>
  <match src="identifier: reason [6902,6908]" dest="identifier: reason [7466,7472]"/>
  <match src="identifier: balance [87735,87742]" dest="identifier: balance [28495,28502]"/>
  <match src="visibility [86136,86143]" dest="visibility [26896,26903]"/>
  <match src="state_mutability [9507,9511]" dest="state_mutability [10071,10075]"/>
  <match src=".: . [88716,88717]" dest=".: . [29476,29477]"/>
  <match src="type_name [36241,36248]" dest="type_name [49619,49626]"/>
  <match src="identifier: a [1993,1994]" dest="identifier: a [2557,2558]"/>
  <match src="): ) [78744,78745]" dest="): ) [57829,57830]"/>
  <match src="type_name [7251,7255]" dest="type_name [7815,7819]"/>
  <match src="member_expression [94257,94282]" dest="member_expression [35017,35042]"/>
  <match src="using: using [74994,74999]" dest="using: using [63671,63676]"/>
  <match src="identifier: sender [78260,78266]" dest="identifier: sender [71307,71313]"/>
  <match src="expression_statement [45171,45287]" dest="expression_statement [51338,51392]"/>
  <match src="identifier: candidate [91028,91037]" dest="identifier: candidate [31788,31797]"/>
  <match src="function: function [9464,9472]" dest="function: function [10028,10036]"/>
  <match src="{: { [80408,80409]" dest="{: { [67230,67231]"/>
  <match src="function_definition [87041,87135]" dest="function_definition [27801,27895]"/>
  <match src="member_expression [95531,95574]" dest="member_expression [36291,36334]"/>
  <match src="&quot;: &quot; [20024,20025]" dest="&quot;: &quot; [52217,52218]"/>
  <match src=".: . [78966,78967]" dest=".: . [53493,53494]"/>
  <match src="member_expression [8106,8116]" dest="member_expression [8670,8680]"/>
  <match src="type_name [49826,49830]" dest="type_name [14533,14537]"/>
  <match src="identifier: Constants [90899,90908]" dest="identifier: Constants [31659,31668]"/>
  <match src="type_cast_expression [29649,29975]" dest="type_cast_expression [43027,43353]"/>
  <match src="!=: != [100310,100312]" dest="!=: != [62667,62669]"/>
  <match src="primitive_type [94631,94638]" dest="primitive_type [35391,35398]"/>
  <match src="identifier: balance [93773,93780]" dest="identifier: balance [34533,34540]"/>
  <match src="call_argument [6374,6375]" dest="call_argument [6938,6939]"/>
  <match src="uint256: uint256 [92965,92972]" dest="uint256: uint256 [33725,33732]"/>
  <match src="contract_declaration [86027,92274]" dest="contract_declaration [26787,33034]"/>
  <match src="expression_statement [99138,99186]" dest="expression_statement [39898,39946]"/>
  <match src="returns: returns [49969,49976]" dest="returns: returns [14676,14683]"/>
  <match src="call_argument [29042,29398]" dest="call_argument [42420,42776]"/>
  <match src="{: { [33558,33559]" dest="{: { [46936,46937]"/>
  <match src="): ) [4037,4038]" dest="): ) [4601,4602]"/>
  <match src="view: view [91193,91197]" dest="view: view [31953,31957]"/>
  <match src="identifier: recipient [13473,13482]" dest="identifier: recipient [18411,18420]"/>
  <match src="member_expression [90466,90510]" dest="member_expression [31226,31270]"/>
  <match src="function: function [90981,90989]" dest="function: function [31741,31749]"/>
  <match src="identifier: add [77166,77169]" dest="identifier: add [66231,66234]"/>
  <match src="function_definition [49480,49532]" dest="function_definition [14187,14239]"/>
  <match src="augmented_assignment_expression [34082,34089]" dest="augmented_assignment_expression [47460,47467]"/>
  <match src="identifier: that [29462,29466]" dest="identifier: that [42840,42844]"/>
  <match src="identifier: c [1989,1990]" dest="identifier: c [2553,2554]"/>
  <match src="return: return [93347,93353]" dest="return: return [34107,34113]"/>
  <match src="number_literal: 0 [97395,97396]" dest="number_literal: 0 [38155,38156]"/>
  <match src="}: } [83058,83059]" dest="}: } [22680,22681]"/>
  <match src="(: ( [9264,9265]" dest="(: ( [9828,9829]"/>
  <match src="(: ( [1688,1689]" dest="(: ( [2252,2253]"/>
  <match src="parameter [19703,19717]" dest="parameter [58219,58233]"/>
  <match src=".: . [43441,43442]" dest=".: . [25545,25546]"/>
  <match src="function: function [50751,50759]" dest="function: function [15458,15466]"/>
  <match src="identifier: Setters [99848,99855]" dest="identifier: Setters [62205,62212]"/>
  <match src="return_statement [90883,90934]" dest="return_statement [31643,31694]"/>
  <match src="}: } [6624,6625]" dest="}: } [7188,7189]"/>
  <match src="function: function [58940,58948]" dest="function: function [20532,20540]"/>
  <match src="): ) [46192,46193]" dest="): ) [51501,51502]"/>
  <match src="uint256: uint256 [30787,30794]" dest="uint256: uint256 [44165,44172]"/>
  <match src="state_mutability [7310,7314]" dest="state_mutability [7874,7878]"/>
  <match src="{: { [4699,4700]" dest="{: { [5263,5264]"/>
  <match src="}: } [82027,82028]" dest="}: } [21649,21650]"/>
  <match src="identifier: spender [96543,96550]" dest="identifier: spender [37303,37310]"/>
  <match src="function_definition [86941,87035]" dest="function_definition [27701,27795]"/>
  <match src=",: , [97863,97864]" dest=",: , [38623,38624]"/>
  <match src="variable_declaration [35287,35300]" dest="variable_declaration [48665,48678]"/>
  <match src="}: } [82502,82503]" dest="}: } [22124,22125]"/>
  <match src="): ) [97741,97742]" dest="): ) [38501,38502]"/>
  <match src="visibility [88370,88376]" dest="visibility [29130,29136]"/>
  <match src=",: , [48595,48596]" dest=",: , [55555,55556]"/>
  <match src="parameter [28256,28265]" dest="parameter [41634,41643]"/>
  <match src="identifier: IOracle [58830,58837]" dest="identifier: IOracle [20422,20429]"/>
  <match src="type_name [41431,41438]" dest="type_name [23535,23542]"/>
  <match src="function: function [49364,49372]" dest="function: function [14071,14079]"/>
  <match src="visibility [42432,42440]" dest="visibility [24536,24544]"/>
  <match src="address: address [47923,47930]" dest="address: address [51056,51063]"/>
  <match src="view: view [90426,90430]" dest="view: view [31186,31190]"/>
  <match src="[: [ [91250,91251]" dest="[: [ [32010,32011]"/>
  <match src="type_name [96363,96370]" dest="type_name [37123,37130]"/>
  <match src="identifier: sub [7009,7012]" dest="identifier: sub [7573,7576]"/>
  <match src="}: } [86685,86686]" dest="}: } [27445,27446]"/>
  <match src="identifier: z [34794,34795]" dest="identifier: z [48172,48173]"/>
  <match src="state_mutability [58965,58969]" dest="state_mutability [20557,20561]"/>
  <match src="return: return [43560,43566]" dest="return: return [25664,25670]"/>
  <match src="}: } [36549,36550]" dest="}: } [49927,49928]"/>
  <match src="primitive_type [80402,80406]" dest="primitive_type [67224,67228]"/>
  <match src="type_name [90831,90838]" dest="type_name [31591,31598]"/>
  <match src="parameter [1239,1265]" dest="parameter [1803,1829]"/>
  <match src="parameter [10064,10071]" dest="parameter [10628,10635]"/>
  <match src="identifier: amount [93675,93681]" dest="identifier: amount [34435,34441]"/>
  <match src="&quot;: &quot; [46066,46067]" dest="&quot;: &quot; [51694,51695]"/>
  <match src="return_statement [90621,90669]" dest="return_statement [31381,31429]"/>
  <match src="identifier: Approval [49156,49164]" dest="identifier: Approval [13863,13871]"/>
  <match src="}: } [95380,95381]" dest="}: } [36140,36141]"/>
  <match src="pure: pure [9860,9864]" dest="pure: pure [10424,10428]"/>
  <match src="identifier: input [36617,36622]" dest="identifier: input [49995,50000]"/>
  <match src="state_mutability [65005,65009]" dest="state_mutability [60997,61001]"/>
  <match src="call_argument [95019,95025]" dest="call_argument [35779,35785]"/>
  <match src="comment: // 30 days @ 8 hours [41561,41581]" dest="comment: // 30 days @ 8 hours [23665,23685]"/>
  <match src="internal: internal [30153,30161]" dest="internal: internal [43531,43539]"/>
  <match src="identifier: bootstrappingPeriod [89542,89561]" dest="identifier: bootstrappingPeriod [30302,30321]"/>
  <match src="function: function [86796,86804]" dest="function: function [27556,27564]"/>
  <match src="(: ( [43540,43541]" dest="(: ( [25644,25645]"/>
  <match src="identifier: balance [87314,87321]" dest="identifier: balance [28074,28081]"/>
  <match src="member_expression [77566,77576]" dest="member_expression [57390,57400]"/>
  <match src="if_statement [27930,28221]" dest="if_statement [41308,41599]"/>
  <match src="): ) [95872,95873]" dest="): ) [36632,36633]"/>
  <match src="identifier: SafeMath [86065,86073]" dest="identifier: SafeMath [26825,26833]"/>
  <match src="identifier: Status [88611,88617]" dest="identifier: Status [29371,29377]"/>
  <match src="identifier: D256 [8625,8629]" dest="identifier: D256 [9189,9193]"/>
  <match src="}: } [43480,43481]" dest="}: } [25584,25585]"/>
  <match src="bool: bool [93199,93203]" dest="bool: bool [33959,33963]"/>
  <match src="type_name [8278,8282]" dest="type_name [8842,8846]"/>
  <match src="(: ( [8385,8386]" dest="(: ( [8949,8950]"/>
  <match src="type_name [87281,87288]" dest="type_name [28041,28048]"/>
  <match src="function_definition [91149,91274]" dest="function_definition [31909,32034]"/>
  <match src="struct: struct [81935,81941]" dest="struct: struct [21557,21563]"/>
  <match src="identifier: debt [87528,87532]" dest="identifier: debt [28288,28292]"/>
  <match src=".: . [89326,89327]" dest=".: . [30086,30087]"/>
  <match src="primitive_type [89534,89541]" dest="primitive_type [30294,30301]"/>
  <match src="{: { [83898,83899]" dest="{: { [68573,68574]"/>
  <match src="address: address [83014,83021]" dest="address: address [22636,22643]"/>
  <match src="address: address [49556,49563]" dest="address: address [14263,14270]"/>
  <match src="identifier: stringifyTruncated [30385,30403]" dest="identifier: stringifyTruncated [43763,43781]"/>
  <match src="function_body [85129,85394]" dest="function_body [69804,70069]"/>
  <match src="type_name [42455,42462]" dest="type_name [24559,24566]"/>
  <match src="(: ( [29631,29632]" dest="(: ( [43009,43010]"/>
  <match src="function_definition [86288,86388]" dest="function_definition [27048,27148]"/>
  <match src="uint256: uint256 [91339,91346]" dest="uint256: uint256 [32099,32106]"/>
  <match src="&gt;&gt;: &gt;&gt; [36397,36399]" dest="&gt;&gt;: &gt;&gt; [49775,49777]"/>
  <match src="): ) [4092,4093]" dest="): ) [4656,4657]"/>
  <match src="{: { [88619,88620]" dest="{: { [29379,29380]"/>
  <match src="(: ( [80401,80402]" dest="(: ( [67223,67224]"/>
  <match src="using_directive [74994,75021]" dest="using_directive [63671,63698]"/>
  <match src="{: { [5897,5898]" dest="{: { [6461,6462]"/>
  <match src="): ) [41686,41687]" dest="): ) [23790,23791]"/>
  <match src="internal: internal [1666,1674]" dest="internal: internal [2230,2238]"/>
  <match src="(: ( [43907,43908]" dest="(: ( [26011,26012]"/>
  <match src="}: } [7214,7215]" dest="}: } [7778,7779]"/>
  <match src=",: , [49637,49638]" dest=",: , [14344,14345]"/>
  <match src=",: , [84732,84733]" dest=",: , [69407,69408]"/>
  <match src="new: new [33745,33748]" dest="new: new [47123,47126]"/>
  <match src="call_argument [75813,75823]" dest="call_argument [64386,64396]"/>
  <match src="primitive_type [98773,98780]" dest="primitive_type [39533,39540]"/>
  <match src="emit_statement [77136,77181]" dest="emit_statement [66199,66255]"/>
  <match src="identifier: onlyFrozenOrFluid [99955,99972]" dest="identifier: onlyFrozenOrFluid [62312,62329]"/>
  <match src=",: , [100513,100514]" dest=",: , [62870,62871]"/>
  <match src=",: , [15749,15750]" dest=",: , [55025,55026]"/>
  <match src="address: address [95422,95429]" dest="address: address [36182,36189]"/>
  <match src="type_name [75013,75020]" dest="type_name [63690,63697]"/>
  <match src="state_mutability [90145,90149]" dest="state_mutability [30905,30909]"/>
  <match src="user_defined_type [8058,8062]" dest="user_defined_type [8622,8626]"/>
  <match src="call_argument [72340,72341]" dest="call_argument [72983,72984]"/>
  <match src="function: function [75718,75726]" dest="function: function [64282,64290]"/>
  <match src="parameter [87178,87185]" dest="parameter [27938,27945]"/>
  <match src="pure: pure [8260,8264]" dest="pure: pure [8824,8828]"/>
  <match src="identifier: approve [98119,98126]" dest="identifier: approve [38879,38886]"/>
  <match src="identifier: totalBonded [79148,79159]" dest="identifier: totalBonded [65964,65975]"/>
  <match src="identifier: mul [7207,7210]" dest="identifier: mul [7771,7774]"/>
  <match src="function_body [7165,7223]" dest="function_body [7729,7787]"/>
  <match src="type_name [94188,94194]" dest="type_name [34948,34954]"/>
  <match src="identifier: Setters [92914,92921]" dest="identifier: Setters [33674,33681]"/>
  <match src="identifier: sub [94756,94759]" dest="identifier: sub [35516,35519]"/>
  <match src="{: { [6345,6346]" dest="{: { [6909,6910]"/>
  <match src="function: function [50975,50983]" dest="function: function [15682,15690]"/>
  <match src="(: ( [76031,76032]" dest="(: ( [65372,65373]"/>
  <match src="(: ( [76894,76895]" dest="(: ( [65056,65057]"/>
  <match src="variable_declaration_statement [88129,88165]" dest="variable_declaration_statement [28889,28925]"/>
  <match src="): ) [34770,34771]" dest="): ) [48148,48149]"/>
  <match src="call_argument [89770,89788]" dest="call_argument [30530,30548]"/>
  <match src="type_name [91060,91074]" dest="type_name [31820,31834]"/>
  <match src=",: , [29223,29224]" dest=",: , [42601,42602]"/>
  <match src="private: private [41701,41708]" dest="private: private [23805,23812]"/>
  <match src="identifier: unbond [77202,77208]" dest="identifier: unbond [65324,65330]"/>
  <match src="identifier: D256 [8815,8819]" dest="identifier: D256 [9379,9383]"/>
  <match src="call_expression [100026,100043]" dest="call_expression [62383,62400]"/>
  <match src="call_argument [6034,6049]" dest="call_argument [6598,6613]"/>
  <match src="identifier: coupons [95656,95663]" dest="identifier: coupons [36416,36423]"/>
  <match src="identifier: balance [87418,87425]" dest="identifier: balance [28178,28185]"/>
  <match src="parameter [8476,8487]" dest="parameter [9040,9051]"/>
  <match src="): ) [91890,91891]" dest="): ) [32650,32651]"/>
  <match src="visibility [9097,9105]" dest="visibility [9661,9669]"/>
  <match src="identifier: Burn [50317,50321]" dest="identifier: Burn [15024,15028]"/>
  <match src="(: ( [51314,51315]" dest="(: ( [16021,16022]"/>
  <match src="identifier: balance [93795,93802]" dest="identifier: balance [34555,34562]"/>
  <match src="identifier: SUPPLY_CHANGE_LIMIT [42282,42301]" dest="identifier: SUPPLY_CHANGE_LIMIT [24386,24405]"/>
  <match src="view: view [51133,51137]" dest="view: view [15840,15844]"/>
  <match src="identifier: div [76879,76882]" dest="identifier: div [65041,65044]"/>
  <match src="call_expression [96142,96184]" dest="call_expression [36902,36944]"/>
  <match src="struct: struct [82319,82325]" dest="struct: struct [21941,21947]"/>
  <match src="primitive_type [98215,98221]" dest="primitive_type [38975,38981]"/>
  <match src="): ) [50767,50768]" dest="): ) [15474,15475]"/>
  <match src="): ) [72334,72335]" dest="): ) [55966,55967]"/>
  <match src="primitive_type [34165,34170]" dest="primitive_type [47543,47548]"/>
  <match src="call_argument [36359,36376]" dest="call_argument [49737,49754]"/>
  <match src="string [46066,46080]" dest="string [51694,51738]"/>
  <match src="}: } [31423,31424]" dest="}: } [44801,44802]"/>
  <match src="}: } [8903,8904]" dest="}: } [9467,9468]"/>
  <match src="function_definition [43101,43226]" dest="function_definition [25205,25330]"/>
  <match src="primitive_type [90404,90411]" dest="primitive_type [31164,31171]"/>
  <match src="call_expression [9010,9028]" dest="call_expression [9574,9592]"/>
  <match src="identifier: balance [97470,97477]" dest="identifier: balance [38230,38237]"/>
  <match src="pure: pure [35696,35700]" dest="pure: pure [49074,49078]"/>
  <match src="): ) [78921,78922]" dest="): ) [53450,53451]"/>
  <match src="function_definition [46908,46945]" dest="function_definition [19606,19643]"/>
  <match src="function_definition [85067,85394]" dest="function_definition [69742,70069]"/>
  <match src="state_mutability [27911,27915]" dest="state_mutability [41289,41293]"/>
  <match src="variable_declaration [36241,36254]" dest="variable_declaration [49619,49632]"/>
  <match src="primitive_type [86128,86135]" dest="primitive_type [26888,26895]"/>
  <match src="identifier: spender [89002,89009]" dest="identifier: spender [29762,29769]"/>
  <match src="identifier: isNominated [91834,91845]" dest="identifier: isNominated [32594,32605]"/>
  <match src="): ) [42563,42564]" dest="): ) [24667,24668]"/>
  <match src="identifier: input [32855,32860]" dest="identifier: input [46233,46238]"/>
  <match src="for: for [15779,15782]" dest="for: for [55054,55057]"/>
  <match src="type_name [82342,82349]" dest="type_name [21964,21971]"/>
  <match src="comment: /*     Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [40627,41255]" dest="comment: /*     Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [18944,19572]"/>
  <match src="member_expression [98484,98519]" dest="member_expression [39244,39279]"/>
  <match src="parameter [98199,98213]" dest="parameter [38959,38973]"/>
  <match src="call_argument [75833,75837]" dest="call_argument [64406,64410]"/>
  <match src="}: } [85393,85394]" dest="}: } [70068,70069]"/>
  <match src="): ) [88194,88195]" dest="): ) [28954,28955]"/>
  <match src="return: return [7561,7567]" dest="return: return [8125,8131]"/>
  <match src="[: [ [99025,99026]" dest="[: [ [39785,39786]"/>
  <match src=",: , [94629,94630]" dest=",: , [35389,35390]"/>
  <match src=".: . [77318,77319]" dest=".: . [71924,71925]"/>
  <match src="primitive_type [75694,75701]" dest="primitive_type [70966,70973]"/>
  <match src="): ) [29107,29108]" dest="): ) [42485,42486]"/>
  <match src="primitive_type [30035,30039]" dest="primitive_type [43413,43417]"/>
  <match src="return_statement [9281,9311]" dest="return_statement [9845,9875]"/>
  <match src="primitive_type [42183,42190]" dest="primitive_type [24287,24294]"/>
  <match src=",: , [30116,30117]" dest=",: , [43494,43495]"/>
  <match src="event_paramater [13987,14000]" dest="event_paramater [18925,18938]"/>
  <match src="type_name [28297,28304]" dest="type_name [41675,41682]"/>
  <match src="(: ( [33014,33015]" dest="(: ( [46392,46393]"/>
  <match src="call_argument [97490,97516]" dest="call_argument [38250,38276]"/>
  <match src=".: . [6592,6593]" dest=".: . [7156,7157]"/>
  <match src="primitive_type [77274,77281]" dest="primitive_type [56144,56151]"/>
  <match src="identifier: bonded [90787,90793]" dest="identifier: bonded [31547,31553]"/>
  <match src="identifier: bonded [96964,96970]" dest="identifier: bonded [37724,37730]"/>
  <match src="}: } [86477,86478]" dest="}: } [27237,27238]"/>
  <match src=".: . [89946,89947]" dest=".: . [30706,30707]"/>
  <match src="member_expression [88800,88814]" dest="member_expression [29560,29574]"/>
  <match src="comment: // 'x' [27530,27536]" dest="comment: // 'x' [40908,40914]"/>
  <match src="parameter [73145,73165]" dest="parameter [56955,56975]"/>
  <match src=",: , [48226,48227]" dest=",: , [58692,58693]"/>
  <match src="type_name [43762,43774]" dest="type_name [25866,25878]"/>
  <match src="member_expression [87830,87856]" dest="member_expression [28590,28616]"/>
  <match src=".: . [7014,7015]" dest=".: . [7578,7579]"/>
  <match src="identifier: _state [97438,97444]" dest="identifier: _state [38198,38204]"/>
  <match src="identifier: candidate [98923,98932]" dest="identifier: candidate [39683,39692]"/>
  <match src="expression_statement [36333,36378]" dest="expression_statement [49711,49756]"/>
  <match src="]: ] [95271,95272]" dest="]: ] [36031,36032]"/>
  <match src="emit_statement [76215,76248]" dest="emit_statement [64750,64783]"/>
  <match src="enum_value: REJECT [82301,82307]" dest="enum_value: REJECT [21923,21929]"/>
  <match src="false: false [93354,93359]" dest="false: false [34114,34119]"/>
  <match src="identifier: add [95015,95018]" dest="identifier: add [35775,35778]"/>
  <match src="identifier: j [33988,33989]" dest="identifier: j [47366,47367]"/>
  <match src="string: string [93584,93590]" dest="string: string [34344,34350]"/>
  <match src="uint256: uint256 [3214,3221]" dest="uint256: uint256 [3778,3785]"/>
  <match src="uint: uint [50499,50503]" dest="uint: uint [15206,15210]"/>
  <match src="parameter [30696,30705]" dest="parameter [44074,44083]"/>
  <match src="visibility [45010,45017]" dest="visibility [56126,56133]"/>
  <match src="type_name [5592,5599]" dest="type_name [6156,6163]"/>
  <match src="): ) [7879,7880]" dest="): ) [8443,8444]"/>
  <match src="function_definition [94586,94857]" dest="function_definition [35346,35617]"/>
  <match src="identifier: coupons [96157,96164]" dest="identifier: coupons [36917,36924]"/>
  <match src="member_expression [76933,76943]" dest="member_expression [65667,65677]"/>
  <match src="parameter [11578,11585]" dest="parameter [16516,16523]"/>
  <match src="(: ( [9063,9064]" dest="(: ( [9627,9628]"/>
  <match src="): ) [51071,51072]" dest="): ) [15778,15779]"/>
  <match src="call_argument [28599,28605]" dest="call_argument [41977,41983]"/>
  <match src=",: , [32604,32605]" dest=",: , [45982,45983]"/>
  <match src="(: ( [89192,89193]" dest="(: ( [29952,29953]"/>
  <match src="type_name [9082,9086]" dest="type_name [9646,9650]"/>
  <match src="{: { [96405,96406]" dest="{: { [37165,37166]"/>
  <match src="number_literal: 66 [35900,35902]" dest="number_literal: 66 [49278,49280]"/>
  <match src="identifier: D256 [7362,7366]" dest="identifier: D256 [7926,7930]"/>
  <match src="(: ( [50736,50737]" dest="(: ( [15443,15444]"/>
  <match src="call_argument [9159,9160]" dest="call_argument [9723,9724]"/>
  <match src="(: ( [13707,13708]" dest="(: ( [18645,18646]"/>
  <match src="identifier: sender [76354,76360]" dest="identifier: sender [64632,64638]"/>
  <match src=",: , [49723,49724]" dest=",: , [14430,14431]"/>
  <match src="identifier: this [73729,73733]" dest="identifier: this [54274,54278]"/>
  <match src="pure: pure [4676,4680]" dest="pure: pure [5240,5244]"/>
  <match src="): ) [87954,87955]" dest="): ) [28714,28715]"/>
  <match src="return_type_definition [91198,91215]" dest="return_type_definition [31958,31975]"/>
  <match src="): ) [88280,88281]" dest="): ) [29040,29041]"/>
  <match src="uint256: uint256 [7277,7284]" dest="uint256: uint256 [7841,7848]"/>
  <match src="uint: uint [50475,50479]" dest="uint: uint [15182,15186]"/>
  <match src="identifier: RPAREN [29929,29935]" dest="identifier: RPAREN [43307,43313]"/>
  <match src="binary_expression [80943,80951]" dest="binary_expression [67765,67773]"/>
  <match src="internal: internal [28348,28356]" dest="internal: internal [41726,41734]"/>
  <match src="identifier: that [79302,79306]" dest="identifier: that [71761,71765]"/>
  <match src="identifier: COMMA [29294,29299]" dest="identifier: COMMA [42672,42677]"/>
  <match src="identifier: z [35750,35751]" dest="identifier: z [49128,49129]"/>
  <match src="(: ( [43882,43883]" dest="(: ( [25986,25987]"/>
  <match src="identifier: totalSupply [88287,88298]" dest="identifier: totalSupply [29047,29058]"/>
  <match src="identifier: _state [95893,95899]" dest="identifier: _state [36653,36659]"/>
  <match src="type_name [33852,33857]" dest="type_name [47230,47235]"/>
  <match src="): ) [51248,51249]" dest="): ) [15955,15956]"/>
  <match src="visibility [80379,80387]" dest="visibility [67201,67209]"/>
  <match src="function_body [43783,43849]" dest="function_body [25887,25953]"/>
  <match src="primitive_type [32037,32044]" dest="primitive_type [45415,45422]"/>
  <match src="(: ( [77434,77435]" dest="(: ( [65485,65486]"/>
  <match src="parameter [46985,46999]" dest="parameter [19683,19697]"/>
  <match src="call_argument [95575,95581]" dest="call_argument [36335,36341]"/>
  <match src="identifier: b [8015,8016]" dest="identifier: b [8579,8580]"/>
  <match src="primitive_type [90867,90871]" dest="primitive_type [31627,31631]"/>
  <match src="interface_declaration [11438,14004]" dest="interface_declaration [16376,18942]"/>
  <match src="): ) [21997,21998]" dest="): ) [58012,58013]"/>
  <match src="type_name [98180,98187]" dest="type_name [38940,38947]"/>
  <match src="returns: returns [73176,73183]" dest="returns: returns [52309,52316]"/>
  <match src="identifier: payloadB [31242,31250]" dest="identifier: payloadB [44620,44628]"/>
  <match src="{: { [1299,1300]" dest="{: { [1863,1864]"/>
  <match src="parameter [6869,6878]" dest="parameter [7433,7442]"/>
  <match src="identifier: value [43060,43065]" dest="identifier: value [25164,25169]"/>
  <match src="emit: emit [75935,75939]" dest="emit: emit [64483,64487]"/>
  <match src="member_expression [97527,97567]" dest="member_expression [38287,38327]"/>
  <match src="identifier: to [50565,50567]" dest="identifier: to [15272,15274]"/>
  <match src="identifier: balanceCheck [77111,77123]" dest="identifier: balanceCheck [51956,51968]"/>
  <match src="identifier: amount [71386,71392]" dest="identifier: amount [51686,51692]"/>
  <match src="identifier: abi [84788,84791]" dest="identifier: abi [69463,69466]"/>
  <match src=",: , [76239,76240]" dest=",: , [64774,64775]"/>
  <match src="visibility [23310,23317]" dest="visibility [54234,54241]"/>
  <match src="identifier: temp [7698,7702]" dest="identifier: temp [8262,8266]"/>
  <match src="=: = [84168,84169]" dest="=: = [68843,68844]"/>
  <match src=",: , [75891,75892]" dest=",: , [64464,64465]"/>
  <match src="event_definition [25687,25730]" dest="event_definition [55373,55466]"/>
  <match src="{: { [78878,78879]" dest="{: { [53407,53408]"/>
  <match src="parameter [91567,91584]" dest="parameter [32327,32344]"/>
  <match src="visibility [58956,58964]" dest="visibility [20548,20556]"/>
  <match src="visibility [43518,43526]" dest="visibility [25622,25630]"/>
  <match src="(: ( [42555,42556]" dest="(: ( [24659,24660]"/>
  <match src="member_expression [75114,75124]" dest="member_expression [57708,57718]"/>
  <match src="(: ( [28673,28674]" dest="(: ( [42051,42052]"/>
  <match src="visibility [97071,97079]" dest="visibility [37831,37839]"/>
  <match src="identifier: payloadA [31877,31885]" dest="identifier: payloadA [45255,45263]"/>
  <match src="using: using [70035,70040]" dest="using: using [74522,74527]"/>
  <match src="identifier: block [89903,89908]" dest="identifier: block [30663,30668]"/>
  <match src="type_name [82878,82886]" dest="type_name [22500,22508]"/>
  <match src="{: { [91748,91749]" dest="{: { [32508,32509]"/>
  <match src="string [78308,78339]" dest="string [71866,71873]"/>
  <match src="identifier: Balance [82853,82860]" dest="identifier: Balance [22475,22482]"/>
  <match src="primitive_type [50590,50597]" dest="primitive_type [15297,15304]"/>
  <match src="block_statement [28976,29441]" dest="block_statement [42354,42819]"/>
  <match src="): ) [31398,31399]" dest="): ) [44776,44777]"/>
  <match src="identifier: expiration [90356,90366]" dest="identifier: expiration [31116,31126]"/>
  <match src="function: function [50632,50640]" dest="function: function [15339,15347]"/>
  <match src="parameter [50217,50226]" dest="parameter [14924,14933]"/>
  <match src="function_definition [9572,9685]" dest="function_definition [10136,10249]"/>
  <match src="uint256: uint256 [42666,42673]" dest="uint256: uint256 [24770,24777]"/>
  <match src="type_name [82006,82013]" dest="type_name [21628,21635]"/>
  <match src="private: private [63033,63040]" dest="private: private [61233,61240]"/>
  <match src="type_name [9406,9410]" dest="type_name [9970,9974]"/>
  <match src="member_expression [88245,88262]" dest="member_expression [29005,29022]"/>
  <match src="address: address [49639,49646]" dest="address: address [14346,14353]"/>
  <match src="return: return [467,473]" dest="return: return [1031,1037]"/>
  <match src="{: { [9271,9272]" dest="{: { [9835,9836]"/>
  <match src="primitive_type [82088,82095]" dest="primitive_type [21710,21717]"/>
  <match src="(: ( [78920,78921]" dest="(: ( [53449,53450]"/>
  <match src="type_name [91167,91174]" dest="type_name [31927,31934]"/>
  <match src="identifier: account [94478,94485]" dest="identifier: account [35238,35245]"/>
  <match src="assignment_expression [95214,95299]" dest="assignment_expression [35974,36059]"/>
  <match src="parameter [28856,28870]" dest="parameter [42234,42248]"/>
  <match src="identifier: outstandingCouponsForEpoch [97365,97391]" dest="identifier: outstandingCouponsForEpoch [38125,38151]"/>
  <match src="call_expression [94088,94125]" dest="call_expression [34848,34885]"/>
  <match src="): ) [2063,2064]" dest="): ) [2627,2628]"/>
  <match src="identifier: b [778,779]" dest="identifier: b [1342,1343]"/>
  <match src="}: } [83060,83061]" dest="}: } [22682,22683]"/>
  <match src="call_expression [30385,30411]" dest="call_expression [43763,43789]"/>
  <match src="type_name [91886,91890]" dest="type_name [32646,32650]"/>
  <match src="return_type_definition [8049,8070]" dest="return_type_definition [8613,8634]"/>
  <match src="): ) [79160,79161]" dest="): ) [65976,65977]"/>
  <match src="identifier: D256 [63413,63417]" dest="identifier: D256 [61290,61294]"/>
  <match src="(: ( [89270,89271]" dest="(: ( [30030,30031]"/>
  <match src="identifier: payloadA [32091,32099]" dest="identifier: payloadA [45469,45477]"/>
  <match src="return_type_definition [50783,50800]" dest="return_type_definition [15490,15507]"/>
  <match src="parameter [13063,13078]" dest="parameter [18001,18016]"/>
  <match src="(: ( [75832,75833]" dest="(: ( [64405,64406]"/>
  <match src="assignment_expression [35575,35585]" dest="assignment_expression [48953,48963]"/>
  <match src="parameter [99100,99117]" dest="parameter [39860,39877]"/>
  <match src=",: , [73646,73647]" dest=",: , [72613,72614]"/>
  <match src="parameter [93568,93582]" dest="parameter [34328,34342]"/>
  <match src="member_expression [78795,78805]" dest="member_expression [72694,72704]"/>
  <match src="identifier: getAdvanceIncentive [43496,43515]" dest="identifier: getAdvanceIncentive [25600,25619]"/>
  <match src="{: { [88945,88946]" dest="{: { [29705,29706]"/>
  <match src="call_argument [76136,76141]" dest="call_argument [64693,64698]"/>
  <match src=".: . [90786,90787]" dest=".: . [31546,31547]"/>
  <match src="private: private [41612,41619]" dest="private: private [23716,23723]"/>
  <match src="identifier: b [8757,8758]" dest="identifier: b [9321,9322]"/>
  <match src="identifier: target [9908,9914]" dest="identifier: target [10472,10478]"/>
  <match src="=: = [41330,41331]" dest="=: = [23434,23435]"/>
  <match src="primitive_type [95422,95429]" dest="primitive_type [36182,36189]"/>
  <match src="return_statement [6757,6809]" dest="return_statement [7321,7373]"/>
  <match src=",: , [94841,94842]" dest=",: , [35601,35602]"/>
  <match src="(: ( [35977,35978]" dest="(: ( [49355,49356]"/>
  <match src="(: ( [43260,43261]" dest="(: ( [25364,25365]"/>
  <match src="state_mutability [91046,91050]" dest="state_mutability [31806,31810]"/>
  <match src="identifier: snapshotTotalBonded [96900,96919]" dest="identifier: snapshotTotalBonded [37660,37679]"/>
  <match src="identifier: must [28385,28389]" dest="identifier: must [41763,41767]"/>
  <match src="identifier: from [49867,49871]" dest="identifier: from [14574,14578]"/>
  <match src="identifier: account [98781,98788]" dest="identifier: account [39541,39548]"/>
  <match src="function_body [19763,20148]" dest="function_body [58294,58910]"/>
  <match src="visibility [96232,96240]" dest="visibility [36992,37000]"/>
  <match src="primitive_type [97663,97670]" dest="primitive_type [38423,38430]"/>
  <match src="identifier: sender [20115,20121]" dest="identifier: sender [58870,58876]"/>
  <match src="): ) [88757,88758]" dest="): ) [29517,29518]"/>
  <match src="identifier: v [50203,50204]" dest="identifier: v [14910,14911]"/>
  <match src="): ) [48240,48241]" dest="): ) [58704,58705]"/>
  <match src="(: ( [6033,6034]" dest="(: ( [6597,6598]"/>
  <match src="=&gt;: =&gt; [81818,81820]" dest="=&gt;: =&gt; [21440,21442]"/>
  <match src="): ) [77778,77779]" dest="): ) [72672,72673]"/>
  <match src="user_defined_type [101290,101295]" dest="user_defined_type [74474,74479]"/>
  <match src="member_expression [93492,93517]" dest="member_expression [34252,34277]"/>
  <match src="=: = [27652,27653]" dest="=: = [41030,41031]"/>
  <match src="identifier: require [85139,85146]" dest="identifier: require [69814,69821]"/>
  <match src="visibility [96590,96598]" dest="visibility [37350,37358]"/>
  <match src="view: view [88377,88381]" dest="view: view [29137,29141]"/>
  <match src="): ) [9095,9096]" dest="): ) [9659,9660]"/>
  <match src="call_argument [29165,29191]" dest="call_argument [42543,42569]"/>
  <match src="uint: uint [49679,49683]" dest="uint: uint [14386,14390]"/>
  <match src="(: ( [68529,68530]" dest="(: ( [60275,60276]"/>
  <match src="identifier: Vote [97875,97879]" dest="identifier: Vote [38635,38639]"/>
  <match src="function_definition [93991,94132]" dest="function_definition [34751,34892]"/>
  <match src="event_definition [50243,50306]" dest="event_definition [14950,15013]"/>
  <match src="type_name [32018,32022]" dest="type_name [45396,45400]"/>
  <match src="comment: /**      * @dev Returns the remaining number of tokens that `spender` will be      * allowed to spend on behalf of `owner` through {transferFrom}. This is      * zero by default.      *      * This value changes when {approve} or {transferFrom} are called.      */ [12041,12305]" dest="comment: /**      * @dev Returns the remaining number of tokens that `spender` will be      * allowed to spend on behalf of `owner` through {transferFrom}. This is      * zero by default.      *      * This value changes when {approve} or {transferFrom} are called.      */ [16979,17243]"/>
  <match src="return_statement [467,476]" dest="return_statement [1031,1040]"/>
  <match src="): ) [36037,36038]" dest="): ) [49415,49416]"/>
  <match src="(: ( [49825,49826]" dest="(: ( [14532,14533]"/>
  <match src="visibility [99119,99127]" dest="visibility [39879,39887]"/>
  <match src="external: external [51124,51132]" dest="external: external [15831,15839]"/>
  <match src="): ) [31174,31175]" dest="): ) [44552,44553]"/>
  <match src="function: function [86484,86492]" dest="function: function [27244,27252]"/>
  <match src="parameter [6489,6498]" dest="parameter [7053,7062]"/>
  <match src="type_name [86583,86590]" dest="type_name [27343,27350]"/>
  <match src="identifier: Coupons [82041,82048]" dest="identifier: Coupons [21663,21670]"/>
  <match src="comment: /* Chain */ [41280,41291]" dest="comment: /* Chain */ [23384,23395]"/>
  <match src="binary_expression [9010,9033]" dest="binary_expression [9574,9597]"/>
  <match src="call_expression [9908,9946]" dest="call_expression [10472,10510]"/>
  <match src="identifier: upgradeTo [84616,84625]" dest="identifier: upgradeTo [69291,69300]"/>
  <match src="return: return [87404,87410]" dest="return: return [28164,28170]"/>
  <match src="identifier: value [8343,8348]" dest="identifier: value [8907,8912]"/>
  <match src=".: . [9548,9549]" dest=".: . [10112,10113]"/>
  <match src="call_argument [70323,70329]" dest="call_argument [52059,52065]"/>
  <match src="member_expression [99010,99025]" dest="member_expression [39770,39785]"/>
  <match src="returns: returns [44000,44007]" dest="returns: returns [26104,26111]"/>
  <match src="=&gt;: =&gt; [82974,82976]" dest="=&gt;: =&gt; [22596,22598]"/>
  <match src=",: , [49265,49266]" dest=",: , [13972,13973]"/>
  <match src="bytes32: bytes32 [49978,49985]" dest="bytes32: bytes32 [14685,14692]"/>
  <match src="returns: returns [12020,12027]" dest="returns: returns [16958,16965]"/>
  <match src="(: ( [95283,95284]" dest="(: ( [36043,36044]"/>
  <match src="call_argument [71386,71392]" dest="call_argument [51686,51692]"/>
  <match src="): ) [7831,7832]" dest="): ) [8395,8396]"/>
  <match src="identifier: self [8179,8183]" dest="identifier: self [8743,8747]"/>
  <match src="identifier: value [49890,49895]" dest="identifier: value [14597,14602]"/>
  <match src="identifier: candidates [92053,92063]" dest="identifier: candidates [32813,32823]"/>
  <match src="identifier: D256 [7813,7817]" dest="identifier: D256 [8377,8381]"/>
  <match src="return: return [86889,86895]" dest="return: return [27649,27655]"/>
  <match src="{: { [81698,81699]" dest="{: { [21320,21321]"/>
  <match src=",: , [1323,1324]" dest=",: , [1887,1888]"/>
  <match src="call_argument [7391,7392]" dest="call_argument [7955,7956]"/>
  <match src="(: ( [6539,6540]" dest="(: ( [7103,7104]"/>
  <match src="function: function [90681,90689]" dest="function: function [31441,31449]"/>
  <match src="type_name [3225,3231]" dest="type_name [3789,3795]"/>
  <match src="&quot;: &quot; [840,841]" dest="&quot;: &quot; [1404,1405]"/>
  <match src="identifier: amount [94835,94841]" dest="identifier: amount [35595,35601]"/>
  <match src="type_name [91339,91346]" dest="type_name [32099,32106]"/>
  <match src="{: { [28976,28977]" dest="{: { [42354,42355]"/>
  <match src="identifier: must [31464,31468]" dest="identifier: must [44842,44846]"/>
  <match src="type_name [31459,31463]" dest="type_name [44837,44841]"/>
  <match src="call_argument [32523,32528]" dest="call_argument [45901,45906]"/>
  <match src="identifier: mul [7015,7018]" dest="identifier: mul [7579,7582]"/>
  <match src="(: ( [77999,78000]" dest="(: ( [53838,53839]"/>
  <match src="&quot;: &quot; [53733,53734]" dest="&quot;: &quot; [65686,65687]"/>
  <match src="visibility [42985,42993]" dest="visibility [25089,25097]"/>
  <match src="event: event [75622,75627]" dest="event: event [71092,71097]"/>
  <match src="}: } [30005,30006]" dest="}: } [43383,43384]"/>
  <match src="): ) [6693,6694]" dest="): ) [7257,7258]"/>
  <match src="call_expression [8106,8129]" dest="call_expression [8670,8693]"/>
  <match src="(: ( [89950,89951]" dest="(: ( [30710,30711]"/>
  <match src="type_name [15783,15790]" dest="type_name [55058,55065]"/>
  <match src="constant: constant [42199,42207]" dest="constant: constant [24303,24311]"/>
  <match src="comment: /**  * @dev Implementation of the {IERC20} interface.  *  * This implementation is agnostic to the way tokens are created. This means  * that a supply mechanism has to be added in a derived contract using {_mint}.  * For a generic mechanism see {ERC20Mintable}.  *  * TIP: For a detailed writeup see our guide  * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How  * to implement supply mechanisms].  *  * We have followed general OpenZeppelin guidelines: functions revert instead  * of returning `false` on failure. This behavior is nonetheless conventional  * and does not conflict with the expectations of ERC20 applications.  *  * Additionally, an {Approval} event is emitted on calls to {transferFrom}.  * This allows applications to reconstruct the allowance for all accounts just  * by listening to said events. Other implementations of the EIP may not emit  * these events, as it isn't required by the specification.  *  * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}  * functions have been added to mitigate the well-known issues around setting  * allowances. See {IERC20-approve}.  */ [14571,15723]" dest="comment: /*     Copyright 2019 dYdX Trading Inc.      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [39956,40555]"/>
  <match src="): ) [87984,87985]" dest="): ) [28744,28745]"/>
  <match src="parameter [8599,8615]" dest="parameter [9163,9179]"/>
  <match src="): ) [43883,43884]" dest="): ) [25987,25988]"/>
  <match src=".: . [63412,63413]" dest=".: . [61289,61290]"/>
  <match src="function_body [44018,44050]" dest="function_body [26122,26154]"/>
  <match src="identifier: epoch [89327,89332]" dest="identifier: epoch [30087,30092]"/>
  <match src="identifier: implementation [84411,84425]" dest="identifier: implementation [69086,69100]"/>
  <match src="event_paramater [75595,75615]" dest="event_paramater [71071,71085]"/>
  <match src="parameter [7097,7106]" dest="parameter [7661,7670]"/>
  <match src="identifier: epoch [95926,95931]" dest="identifier: epoch [36686,36691]"/>
  <match src="type_name [804,811]" dest="type_name [1368,1375]"/>
  <match src="state_mutability [50028,50032]" dest="state_mutability [14735,14739]"/>
  <match src="identifier: payloadA [29549,29557]" dest="identifier: payloadA [42927,42935]"/>
  <match src="): ) [20025,20026]" dest="): ) [52218,52219]"/>
  <match src="variable_declaration [33980,33989]" dest="variable_declaration [47358,47367]"/>
  <match src="bytes: bytes [35868,35873]" dest="bytes: bytes [49246,49251]"/>
  <match src="{: { [90749,90750]" dest="{: { [31509,31510]"/>
  <match src="type_name [19719,19726]" dest="type_name [58235,58242]"/>
  <match src="(: ( [9208,9209]" dest="(: ( [9772,9773]"/>
  <match src=".: . [95254,95255]" dest=".: . [36014,36015]"/>
  <match src="member_expression [77252,77262]" dest="member_expression [65895,65905]"/>
  <match src="function: function [95769,95777]" dest="function: function [36529,36537]"/>
  <match src="&quot;: &quot; [22035,22036]" dest="&quot;: &quot; [58058,58059]"/>
  <match src="contract_declaration [60345,64328]" dest="contract_declaration [59543,61551]"/>
  <match src="identifier: epoch [97735,97740]" dest="identifier: epoch [38495,38500]"/>
  <match src="uint256: uint256 [383,390]" dest="uint256: uint256 [947,954]"/>
  <match src="(: ( [9349,9350]" dest="(: ( [9913,9914]"/>
  <match src="(: ( [95018,95019]" dest="(: ( [35778,35779]"/>
  <match src="call_argument [76362,76367]" dest="call_argument [64640,64645]"/>
  <match src="string_literal [33917,33920]" dest="string_literal [47295,47298]"/>
  <match src="user_defined_type [8421,8425]" dest="user_defined_type [8985,8989]"/>
  <match src="identifier: account [88019,88026]" dest="identifier: account [28779,28786]"/>
  <match src=".: . [90503,90504]" dest=".: . [31263,31264]"/>
  <match src="parameter [61628,61647]" dest="parameter [13047,13076]"/>
  <match src="type_name [49679,49683]" dest="type_name [14386,14390]"/>
  <match src="{: { [64145,64146]" dest="{: { [56833,56834]"/>
  <match src="): ) [49683,49684]" dest="): ) [14390,14391]"/>
  <match src="call_argument [7367,7395]" dest="call_argument [7931,7959]"/>
  <match src="binary_expression [34541,34562]" dest="binary_expression [47919,47940]"/>
  <match src="public: public [87260,87266]" dest="public: public [28020,28026]"/>
  <match src="contract_body [49144,51516]" dest="contract_body [13851,16223]"/>
  <match src="public: public [92125,92131]" dest="public: public [32885,32891]"/>
  <match src="memory: memory [49412,49418]" dest="memory: memory [14119,14125]"/>
  <match src="{: { [29611,29612]" dest="{: { [42989,42990]"/>
  <match src="call_expression [9143,9161]" dest="call_expression [9707,9725]"/>
  <match src=".: . [95703,95704]" dest=".: . [36463,36464]"/>
  <match src="function_body [89202,89244]" dest="function_body [29962,30004]"/>
  <match src="]: ] [97109,97110]" dest="]: ] [37869,37870]"/>
  <match src="primitive_type [383,390]" dest="primitive_type [947,954]"/>
  <match src="type_name [68530,68537]" dest="type_name [60276,60288]"/>
  <match src="primitive_type [75492,75499]" dest="primitive_type [64005,64012]"/>
  <match src="(: ( [75410,75411]" dest="(: ( [74652,74653]"/>
  <match src="function_definition [1204,1391]" dest="function_definition [1768,1955]"/>
  <match src="variable_declaration_statement [35742,35769]" dest="variable_declaration_statement [49120,49147]"/>
  <match src="array_access [94723,94747]" dest="array_access [35483,35507]"/>
  <match src="): ) [6195,6196]" dest="): ) [6759,6760]"/>
  <match src="{: { [100445,100446]" dest="{: { [62802,62803]"/>
  <match src=".: . [87021,87022]" dest=".: . [27781,27782]"/>
  <match src="member_expression [94949,94980]" dest="member_expression [35709,35740]"/>
  <match src="array_access [90466,90486]" dest="array_access [31226,31246]"/>
  <match src="parameter [87939,87954]" dest="parameter [28699,28714]"/>
  <match src="parameter [6306,6317]" dest="parameter [6870,6881]"/>
  <match src="type_name [90301,90308]" dest="type_name [31061,31068]"/>
  <match src="primitive_type [2569,2576]" dest="primitive_type [3133,3140]"/>
  <match src="): ) [43915,43916]" dest="): ) [26019,26020]"/>
  <match src="visibility [41510,41517]" dest="visibility [23614,23621]"/>
  <match src="assignment_expression [96415,96472]" dest="assignment_expression [37175,37232]"/>
  <match src="call_struct_argument [5921,5929]" dest="call_struct_argument [6485,6493]"/>
  <match src="identifier: candidates [98693,98703]" dest="identifier: candidates [39453,39463]"/>
  <match src="(: ( [59705,59706]" dest="(: ( [73580,73581]"/>
  <match src="identifier: value [7003,7008]" dest="identifier: value [7567,7572]"/>
  <match src="memory: memory [8820,8826]" dest="memory: memory [9384,9390]"/>
  <match src="primitive_type [50499,50503]" dest="primitive_type [15206,15210]"/>
  <match src="pure: pure [43272,43276]" dest="pure: pure [25376,25380]"/>
  <match src="for_statement [36148,36550]" dest="for_statement [49526,49928]"/>
  <match src="state_mutability [7130,7134]" dest="state_mutability [7694,7698]"/>
  <match src="identifier: Deposit [75940,75947]" dest="identifier: Deposit [64488,64495]"/>
  <match src="identifier: getInitialStakeMultiple [76788,76811]" dest="identifier: getInitialStakeMultiple [64975,64998]"/>
  <match src=".: . [88519,88520]" dest=".: . [29279,29280]"/>
  <match src="call_argument [95367,95373]" dest="call_argument [36127,36133]"/>
  <match src="identifier: a [6244,6245]" dest="identifier: a [6808,6809]"/>
  <match src="returns: returns [50675,50682]" dest="returns: returns [15382,15389]"/>
  <match src="identifier: amount [22975,22981]" dest="identifier: amount [51415,51421]"/>
  <match src="uint256: uint256 [73194,73201]" dest="uint256: uint256 [52327,52334]"/>
  <match src="(: ( [6190,6191]" dest="(: ( [6754,6755]"/>
  <match src="identifier: D256 [43016,43020]" dest="identifier: D256 [25120,25124]"/>
  <match src="bytes2: bytes2 [27629,27635]" dest="bytes2: bytes2 [41007,41013]"/>
  <match src="primitive_type [93860,93867]" dest="primitive_type [34620,34627]"/>
  <match src="expression_statement [94688,94776]" dest="expression_statement [35448,35536]"/>
  <match src="parameter [12029,12033]" dest="parameter [16967,16971]"/>
  <match src=",: , [75563,75564]" dest=",: , [63905,63906]"/>
  <match src="(: ( [7241,7242]" dest="(: ( [7805,7806]"/>
  <match src="primitive_type [36609,36616]" dest="primitive_type [49987,49994]"/>
  <match src="type_name [90555,90562]" dest="type_name [31315,31322]"/>
  <match src="identifier: b [10170,10171]" dest="identifier: b [10734,10735]"/>
  <match src="=: = [42064,42065]" dest="=: = [24168,24169]"/>
  <match src="comment: // ': ' [27573,27580]" dest="comment: // ': ' [40951,40958]"/>
  <match src="[: [ [90641,90642]" dest="[: [ [31401,31402]"/>
  <match src="identifier: coupons [96068,96075]" dest="identifier: coupons [36828,36835]"/>
  <match src="returns: returns [91598,91605]" dest="returns: returns [32358,32365]"/>
  <match src="contract_body [79980,80960]" dest="contract_body [66802,67782]"/>
  <match src=".: . [87112,87113]" dest=".: . [27872,27873]"/>
  <match src="member_expression [95592,95632]" dest="member_expression [36352,36392]"/>
  <match src="user_defined_type [82825,82837]" dest="user_defined_type [22447,22459]"/>
  <match src="parameter [93331,93335]" dest="parameter [34091,34095]"/>
  <match src="primitive_type [41431,41438]" dest="primitive_type [23535,23542]"/>
  <match src="identifier: amount [48014,48020]" dest="identifier: amount [51131,51137]"/>
  <match src="identifier: must [28970,28974]" dest="identifier: must [42348,42352]"/>
  <match src=",: , [2637,2638]" dest=",: , [3201,3202]"/>
  <match src="function_body [77233,77882]" dest="function_body [65385,65790]"/>
  <match src="number_literal: 4 [35446,35447]" dest="number_literal: 4 [48824,48825]"/>
  <match src="expression_statement [100000,100132]" dest="expression_statement [62357,62489]"/>
  <match src="identifier: expiringCouponsAtIndex [90532,90554]" dest="identifier: expiringCouponsAtIndex [31292,31314]"/>
  <match src="{: { [48258,48259]" dest="{: { [58722,58723]"/>
  <match src="&quot;: &quot; [61286,61287]" dest="&quot;: &quot; [73285,73286]"/>
  <match src="visibility [21087,21095]" dest="visibility [51817,51825]"/>
  <match src="identifier: Provide [75628,75635]" dest="identifier: Commit [71098,71104]"/>
  <match src="(: ( [88272,88273]" dest="(: ( [29032,29033]"/>
  <match src="array_access [91093,91136]" dest="array_access [31853,31896]"/>
  <match src="variable_declaration [84720,84732]" dest="variable_declaration [69395,69407]"/>
  <match src="call_argument [89873,89874]" dest="call_argument [30633,30634]"/>
  <match src="identifier: div [8586,8589]" dest="identifier: div [9150,9153]"/>
  <match src="binary_expression [33450,33455]" dest="binary_expression [46828,46833]"/>
  <match src="}: } [96309,96310]" dest="}: } [37069,37070]"/>
  <match src="type_name [98016,98023]" dest="type_name [38776,38783]"/>
  <match src="call_expression [94462,94506]" dest="call_expression [35222,35266]"/>
  <match src=",: , [424,425]" dest=",: , [988,989]"/>
  <match src="identifier: length [33441,33447]" dest="identifier: length [46819,46825]"/>
  <match src="memory: memory [6735,6741]" dest="memory: memory [7299,7305]"/>
  <match src="call_expression [77297,77326]" dest="call_expression [71911,71932]"/>
  <match src="visibility [47001,47007]" dest="visibility [19699,19705]"/>
  <match src="visibility [19754,19762]" dest="visibility [52142,52150]"/>
  <match src="call_struct_argument [6991,7033]" dest="call_struct_argument [7555,7597]"/>
  <match src="state_mutability [87963,87967]" dest="state_mutability [28723,28727]"/>
  <match src="visibility [87466,87472]" dest="visibility [28226,28232]"/>
  <match src="type_name [99100,99107]" dest="type_name [39860,39867]"/>
  <match src="type_name [5880,5884]" dest="type_name [6444,6448]"/>
  <match src="state_mutability [42542,42546]" dest="state_mutability [24646,24650]"/>
  <match src="visibility [30153,30161]" dest="visibility [43531,43539]"/>
  <match src="parameter [50907,50923]" dest="parameter [15614,15630]"/>
  <match src="identifier: c [1356,1357]" dest="identifier: c [1920,1921]"/>
  <match src=",: , [94766,94767]" dest=",: , [35526,35527]"/>
  <match src="call_argument [77252,77262]" dest="call_argument [65895,65905]"/>
  <match src="identifier: candidate [98400,98409]" dest="identifier: candidate [39160,39169]"/>
  <match src="identifier: transferFrom [75800,75812]" dest="identifier: transferFrom [64373,64385]"/>
  <match src="): ) [94505,94506]" dest="): ) [35265,35266]"/>
  <match src="uint: uint [49213,49217]" dest="uint: uint [13920,13924]"/>
  <match src="]: ] [88533,88534]" dest="]: ] [29293,29294]"/>
  <match src="(: ( [98772,98773]" dest="(: ( [39532,39533]"/>
  <match src="binary_expression [88414,88444]" dest="binary_expression [29174,29204]"/>
  <match src="variable_declaration_statement [383,401]" dest="variable_declaration_statement [947,965]"/>
  <match src="uint: uint [50182,50186]" dest="uint: uint [14889,14893]"/>
  <match src="primitive_type [50925,50932]" dest="primitive_type [15632,15639]"/>
  <match src=",: , [21234,21235]" dest=",: , [51898,51899]"/>
  <match src="function_definition [50632,50690]" dest="function_definition [15339,15397]"/>
  <match src="identifier: value [45380,45385]" dest="identifier: value [65339,65344]"/>
  <match src="private: private [45010,45017]" dest="private: private [56126,56133]"/>
  <match src="identifier: allowance [48210,48219]" dest="identifier: allowanceCoupons [58669,58685]"/>
  <match src="visibility [6509,6517]" dest="visibility [7073,7081]"/>
  <match src="): ) [86957,86958]" dest="): ) [27717,27718]"/>
  <match src="primitive_type [81776,81783]" dest="primitive_type [21398,21405]"/>
  <match src="{: { [95479,95480]" dest="{: { [36239,36240]"/>
  <match src="identifier: block [89812,89817]" dest="identifier: block [30572,30577]"/>
  <match src="type_name [99973,99980]" dest="type_name [62330,62337]"/>
  <match src="bool: bool [28815,28819]" dest="bool: bool [42193,42197]"/>
  <match src="identifier: payloadA [30479,30487]" dest="identifier: payloadA [43857,43865]"/>
  <match src="(: ( [97199,97200]" dest="(: ( [37959,37960]"/>
  <match src="type_name [30100,30107]" dest="type_name [43478,43485]"/>
  <match src="): ) [5891,5892]" dest="): ) [6455,6456]"/>
  <match src="view: view [49665,49669]" dest="view: view [14372,14376]"/>
  <match src="identifier: transfer [76341,76349]" dest="identifier: transfer [64619,64627]"/>
  <match src="expression_statement [34266,34276]" dest="expression_statement [47644,47654]"/>
  <match src="{: { [6579,6580]" dest="{: { [7143,7144]"/>
  <match src="call_argument [28499,28523]" dest="call_argument [41877,41901]"/>
  <match src="identifier: _state [93939,93945]" dest="identifier: _state [34699,34705]"/>
  <match src="): ) [80377,80378]" dest="): ) [67199,67200]"/>
  <match src="identifier: value [43814,43819]" dest="identifier: value [25918,25923]"/>
  <match src="identifier: reject [98475,98481]" dest="identifier: reject [39235,39241]"/>
  <match src="if_statement [29600,30000]" dest="if_statement [42978,43378]"/>
  <match src="member_expression [93766,93780]" dest="member_expression [34526,34540]"/>
  <match src="internal: internal [8964,8972]" dest="internal: internal [9528,9536]"/>
  <match src="address: address [19874,19881]" dest="address: address [58413,58420]"/>
  <match src="expression_statement [19773,19844]" dest="expression_statement [58304,58383]"/>
  <match src="return_type_definition [50033,50050]" dest="return_type_definition [14740,14757]"/>
  <match src="call_argument [35762,35767]" dest="call_argument [49140,49145]"/>
  <match src="parameter [96535,96550]" dest="parameter [37295,37310]"/>
  <match src="modifier_definition [100422,100635]" dest="modifier_definition [62779,62992]"/>
  <match src="identifier: value [6581,6586]" dest="identifier: value [7145,7150]"/>
  <match src="call_expression [78914,78988]" dest="call_expression [53443,53512]"/>
  <match src="call_expression [34936,34949]" dest="call_expression [48314,48327]"/>
  <match src="identifier: spender [49204,49211]" dest="identifier: spender [13911,13918]"/>
  <match src=",: , [77520,77521]" dest=",: , [66023,66024]"/>
  <match src="call_argument [53733,53758]" dest="call_argument [65686,65717]"/>
  <match src="state_mutability [92009,92013]" dest="state_mutability [32769,32773]"/>
  <match src="string: string [96568,96574]" dest="string: string [37328,37334]"/>
  <match src="primitive_type [97290,97297]" dest="primitive_type [38050,38057]"/>
  <match src="identifier: Constants [41264,41273]" dest="identifier: Constants [23368,23377]"/>
  <match src="primitive_type [28321,28328]" dest="primitive_type [41699,41706]"/>
  <match src="member_expression [94809,94823]" dest="member_expression [35569,35583]"/>
  <match src=".: . [91505,91506]" dest=".: . [32265,32266]"/>
  <match src="bytes32: bytes32 [50217,50224]" dest="bytes32: bytes32 [14924,14931]"/>
  <match src="}: } [86903,86904]" dest="}: } [27663,27664]"/>
  <match src="parameter [12344,12359]" dest="parameter [17282,17297]"/>
  <match src="primitive_type [85094,85101]" dest="primitive_type [69769,69776]"/>
  <match src="identifier: msg [76229,76232]" dest="identifier: msg [64764,64767]"/>
  <match src="identifier: payloadA [32488,32496]" dest="identifier: payloadA [45866,45874]"/>
  <match src="type_name [91207,91214]" dest="type_name [31967,31974]"/>
  <match src="type_name [50278,50282]" dest="type_name [14985,14989]"/>
  <match src="identifier: from [6072,6076]" dest="identifier: from [6636,6640]"/>
  <match src="visibility [98809,98817]" dest="visibility [39569,39577]"/>
  <match src="parameter [32135,32151]" dest="parameter [45513,45529]"/>
  <match src="address: address [48583,48590]" dest="address: address [55621,55628]"/>
  <match src="expression_statement [35955,35991]" dest="expression_statement [49333,49369]"/>
  <match src="memory: memory [43409,43415]" dest="memory: memory [25513,25519]"/>
  <match src="binary_expression [36340,36350]" dest="binary_expression [49718,49728]"/>
  <match src="parameter [93262,93276]" dest="parameter [34022,34036]"/>
  <match src="): ) [49654,49655]" dest="): ) [14361,14362]"/>
  <match src="string_literal [79020,79047]" dest="string_literal [53567,53590]"/>
  <match src="function: function [91960,91968]" dest="function: function [32720,32728]"/>
  <match src="=: = [60445,60446]" dest="=: = [55102,55103]"/>
  <match src="parameter [93148,93163]" dest="parameter [33908,33923]"/>
  <match src="return_statement [91626,91669]" dest="return_statement [32386,32429]"/>
  <match src="primitive_type [36241,36248]" dest="primitive_type [49619,49626]"/>
  <match src="identifier: Vote [91070,91074]" dest="identifier: Vote [31830,31834]"/>
  <match src="identifier: FILE [100082,100086]" dest="identifier: FILE [62439,62443]"/>
  <match src="(: ( [32197,32198]" dest="(: ( [45575,45576]"/>
  <match src="identifier: candidate [98313,98322]" dest="identifier: candidate [39073,39082]"/>
  <match src="}: } [22546,22547]" dest="}: } [58911,58912]"/>
  <match src="identifier: D256 [8510,8514]" dest="identifier: D256 [9074,9078]"/>
  <match src="if: if [89457,89459]" dest="if: if [30217,30219]"/>
  <match src="): ) [75710,75711]" dest="): ) [71155,71156]"/>
  <match src="expression_statement [34624,34632]" dest="expression_statement [48002,48010]"/>
  <match src="call_argument [840,872]" dest="call_argument [1404,1436]"/>
  <match src="identifier: stringify [30469,30478]" dest="identifier: stringify [43847,43856]"/>
  <match src="(: ( [49379,49380]" dest="(: ( [14086,14087]"/>
  <match src="member_expression [97752,97787]" dest="member_expression [38512,38547]"/>
  <match src="call_expression [77962,78074]" dest="call_expression [53801,53911]"/>
  <match src="function_definition [97968,98145]" dest="function_definition [38728,38905]"/>
  <match src="visibility [63649,63656]" dest="visibility [60989,60996]"/>
  <match src=".: . [78798,78799]" dest=".: . [72697,72698]"/>
  <match src="if: if [32194,32196]" dest="if: if [45572,45574]"/>
  <match src="identifier: initializer [101349,101360]" dest="identifier: initializer [74722,74733]"/>
  <match src=",: , [31490,31491]" dest=",: , [44868,44869]"/>
  <match src="): ) [28768,28769]" dest="): ) [42146,42147]"/>
  <match src="identifier: balanceOf [86573,86582]" dest="identifier: balanceOf [27333,27342]"/>
  <match src="type_name [9878,9885]" dest="type_name [10442,10449]"/>
  <match src="visibility [15826,15833]" dest="visibility [11843,11850]"/>
  <match src="identifier: initializer [100431,100442]" dest="identifier: initializer [62788,62799]"/>
  <match src="uint256: uint256 [75436,75443]" dest="uint256: uint256 [55646,55653]"/>
  <match src="string_literal [2028,2063]" dest="string_literal [2592,2627]"/>
  <match src="): ) [75780,75781]" dest="): ) [71255,71256]"/>
  <match src="{: { [28370,28371]" dest="{: { [41748,41749]"/>
  <match src="identifier: epoch [89062,89067]" dest="identifier: epoch [29822,29827]"/>
  <match src="identifier: incrementBalanceOfClaimable [77538,77565]" dest="identifier: burnFromAccount [57374,57389]"/>
  <match src="identifier: b [1236,1237]" dest="identifier: b [1800,1801]"/>
  <match src="): ) [77262,77263]" dest="): ) [65905,65906]"/>
  <match src="return_statement [87612,87645]" dest="return_statement [28372,28405]"/>
  <match src="{: { [91892,91893]" dest="{: { [32652,32653]"/>
  <match src="internal: internal [84653,84661]" dest="internal: internal [69328,69336]"/>
  <match src="uint256: uint256 [81776,81783]" dest="uint256: uint256 [21398,21405]"/>
  <match src="identifier: D256 [7615,7619]" dest="identifier: D256 [8179,8183]"/>
  <match src="state_variable_declaration [41502,41560]" dest="state_variable_declaration [23606,23664]"/>
  <match src="call_struct_argument [43448,43472]" dest="call_struct_argument [25552,25576]"/>
  <match src="parameter [3996,4005]" dest="parameter [4560,4569]"/>
  <match src="address: address [75825,75832]" dest="address: address [64398,64405]"/>
  <match src="type_name [60783,60790]" dest="type_name [70943,70950]"/>
  <match src=",: , [8755,8756]" dest=",: , [9319,9320]"/>
  <match src="call_argument [76071,76081]" dest="call_argument [65088,65098]"/>
  <match src="contract_body [27336,36901]" dest="contract_body [40714,50279]"/>
  <match src="identifier: div [89844,89847]" dest="identifier: div [30604,30607]"/>
  <match src=",: , [6878,6879]" dest=",: , [7442,7443]"/>
  <match src="external: external [64113,64121]" dest="external: external [57965,57973]"/>
  <match src="{: { [76044,76045]" dest="{: { [64600,64601]"/>
  <match src="parameter [75997,76010]" dest="parameter [64545,64558]"/>
  <match src="(: ( [96091,96092]" dest="(: ( [36851,36852]"/>
  <match src="identifier: Require [100000,100007]" dest="identifier: Require [62357,62364]"/>
  <match src="}: } [43225,43226]" dest="}: } [25329,25330]"/>
  <match src="view: view [59692,59696]" dest="view: view [73567,73571]"/>
  <match src="(: ( [33131,33132]" dest="(: ( [46509,46510]"/>
  <match src="]: ] [95958,95959]" dest="]: ] [36718,36719]"/>
  <match src="member_expression [87619,87633]" dest="member_expression [28379,28393]"/>
  <match src="type_name [34141,34146]" dest="type_name [47519,47524]"/>
  <match src="primitive_type [81732,81739]" dest="primitive_type [21354,21361]"/>
  <match src=",: , [76141,76142]" dest=",: , [64698,64699]"/>
  <match src="identifier: stringify [31156,31165]" dest="identifier: stringify [44534,44543]"/>
  <match src="identifier: result [32989,32995]" dest="identifier: result [46367,46373]"/>
  <match src="{: { [91348,91349]" dest="{: { [32108,32109]"/>
  <match src="identifier: b [6374,6375]" dest="identifier: b [6938,6939]"/>
  <match src="-: - [36481,36482]" dest="-: - [49859,49860]"/>
  <match src="visibility [91039,91045]" dest="visibility [31799,31805]"/>
  <match src="): ) [7641,7642]" dest="): ) [8205,8206]"/>
  <match src="user_defined_type [92925,92930]" dest="user_defined_type [33685,33690]"/>
  <match src="(: ( [29258,29259]" dest="(: ( [42636,42637]"/>
  <match src="call_argument [30304,30328]" dest="call_argument [43682,43706]"/>
  <match src="identifier: getPartial [9747,9757]" dest="identifier: getPartial [10311,10321]"/>
  <match src="parameter [90440,90447]" dest="parameter [31200,31207]"/>
  <match src="identifier: accounts [95538,95546]" dest="identifier: accounts [36298,36306]"/>
  <match src="identifier: file [27859,27863]" dest="identifier: file [41237,41241]"/>
  <match src="user_defined_type [5880,5884]" dest="user_defined_type [6444,6448]"/>
  <match src="assignment_expression [99138,99185]" dest="assignment_expression [39898,39945]"/>
  <match src="call_expression [94540,94573]" dest="call_expression [35300,35333]"/>
  <match src="identifier: Candidate [91060,91069]" dest="identifier: Candidate [31820,31829]"/>
  <match src="}: } [91674,91675]" dest="}: } [32434,32435]"/>
  <match src="identifier: add [6450,6453]" dest="identifier: add [7014,7017]"/>
  <match src="function_definition [78846,79241]" dest="function_definition [53375,53739]"/>
  <match src="state_mutability [50096,50100]" dest="state_mutability [14803,14807]"/>
  <match src="if: if [7535,7537]" dest="if: if [8099,8101]"/>
  <match src="type_name [82389,82396]" dest="type_name [22011,22018]"/>
  <match src="primitive_type [82342,82349]" dest="primitive_type [21964,21971]"/>
  <match src="returns: returns [87584,87591]" dest="returns: returns [28344,28351]"/>
  <match src="{: { [43295,43296]" dest="{: { [25399,25400]"/>
  <match src="type_name [77209,77216]" dest="type_name [65822,65829]"/>
  <match src=",: , [9302,9303]" dest=",: , [9866,9867]"/>
  <match src="uint256: uint256 [60716,60723]" dest="uint256: uint256 [74592,74599]"/>
  <match src="primitive_type [21856,21863]" dest="primitive_type [57949,57956]"/>
  <match src="identifier: dollarAmount [73153,73165]" dest="identifier: dollarAmount [56963,56975]"/>
  <match src="member_expression [61178,61190]" dest="member_expression [73105,73117]"/>
  <match src="(: ( [30216,30217]" dest="(: ( [43594,43595]"/>
  <match src="identifier: stringifyTruncated [29084,29102]" dest="identifier: stringifyTruncated [42462,42480]"/>
  <match src="): ) [90747,90748]" dest="): ) [31507,31508]"/>
  <match src="identifier: D256 [7182,7186]" dest="identifier: D256 [7746,7750]"/>
  <match src=".: . [93923,93924]" dest=".: . [34683,34684]"/>
  <match src="identifier: reject [82422,82428]" dest="identifier: reject [22044,22050]"/>
  <match src="primitive_type [49526,49530]" dest="primitive_type [14233,14237]"/>
  <match src="(: ( [51004,51005]" dest="(: ( [15711,15712]"/>
  <match src="identifier: epochStart [89479,89489]" dest="identifier: epochStart [30239,30249]"/>
  <match src="expression_statement [19853,19925]" dest="expression_statement [58392,58472]"/>
  <match src=":=: := [80902,80904]" dest=":=: := [67724,67726]"/>
  <match src="function: function [13427,13435]" dest="function: function [18365,18373]"/>
  <match src="type_name [9265,9269]" dest="type_name [9829,9833]"/>
  <match src="indexed: indexed [75548,75555]" dest="indexed: indexed [63890,63897]"/>
  <match src="memory: memory [9596,9602]" dest="memory: memory [10160,10166]"/>
  <match src="call_argument [75114,75124]" dest="call_argument [57708,57718]"/>
  <match src="parameter [51487,51494]" dest="parameter [16194,16201]"/>
  <match src="identifier: from [7568,7572]" dest="identifier: from [8132,8136]"/>
  <match src="identifier: balance [87626,87633]" dest="identifier: balance [28386,28393]"/>
  <match src="external: external [50661,50669]" dest="external: external [15368,15376]"/>
  <match src="type_name [3276,3283]" dest="type_name [3840,3847]"/>
  <match src="return_statement [3513,3522]" dest="return_statement [4077,4086]"/>
  <match src="comment: // TODO Check this again before the Serenity release, because all addresses will be [80711,80794]" dest="comment: // TODO Check this again before the Serenity release, because all addresses will be [67533,67616]"/>
  <match src="): ) [73201,73202]" dest="): ) [52343,52344]"/>
  <match src=".: . [88709,88710]" dest=".: . [29469,29470]"/>
  <match src="call_expression [77297,77370]" dest="call_expression [65443,65481]"/>
  <match src="primitive_type [42257,42264]" dest="primitive_type [24361,24368]"/>
  <match src="identifier: _state [90466,90472]" dest="identifier: _state [31226,31232]"/>
  <match src="returns: returns [11720,11727]" dest="returns: returns [16658,16665]"/>
  <match src="identifier: sender [75952,75958]" dest="identifier: sender [64500,64506]"/>
  <match src=",: , [20132,20133]" dest=",: , [58887,58888]"/>
  <match src="visibility [98032,98040]" dest="visibility [38792,38800]"/>
  <match src="constant: constant [27679,27687]" dest="constant: constant [41057,41065]"/>
  <match src="}: } [43472,43473]" dest="}: } [25576,25577]"/>
  <match src="identifier: ratio [63441,63446]" dest="identifier: ratio [73704,73709]"/>
  <match src="): ) [78395,78396]" dest="): ) [56265,56266]"/>
  <match src="identifier: c [2082,2083]" dest="identifier: c [2646,2647]"/>
  <match src="primitive_type [81765,81772]" dest="primitive_type [21387,21394]"/>
  <match src="call_argument [29677,29957]" dest="call_argument [43055,43335]"/>
  <match src="primitive_type [66131,66138]" dest="primitive_type [59711,59718]"/>
  <match src="}: } [80959,80960]" dest="}: } [67781,67782]"/>
  <match src=".: . [46108,46109]" dest=".: . [53618,53619]"/>
  <match src="call_argument [77645,77680]" dest="call_argument [73409,73423]"/>
  <match src="parameter [36663,36667]" dest="parameter [50041,50045]"/>
  <match src="memory: memory [6142,6148]" dest="memory: memory [6706,6712]"/>
  <match src=":: : [6183,6184]" dest=":: : [6747,6748]"/>
  <match src="primitive_type [75636,75643]" dest="primitive_type [71105,71112]"/>
  <match src="function_body [21881,22138]" dest="function_body [57974,58188]"/>
  <match src="returns: returns [88382,88389]" dest="returns: returns [29142,29149]"/>
  <match src=",: , [28896,28897]" dest=",: , [42274,42275]"/>
  <match src="returns: returns [93190,93197]" dest="returns: returns [33950,33957]"/>
  <match src="identifier: sender [19711,19717]" dest="identifier: sender [58227,58233]"/>
  <match src="returns: returns [43899,43906]" dest="returns: returns [26003,26010]"/>
  <match src="string_literal [84812,84826]" dest="string_literal [69487,69501]"/>
  <match src="identifier: BOOTSTRAPPING_PRICE [41456,41475]" dest="identifier: BOOTSTRAPPING_PRICE [23560,23579]"/>
  <match src="}: } [83106,83107]" dest="}: } [22728,22729]"/>
  <match src="): ) [31412,31413]" dest="): ) [44790,44791]"/>
  <match src="identifier: _state [95214,95220]" dest="identifier: _state [35974,35980]"/>
  <match src="primitive_type [73145,73152]" dest="primitive_type [56955,56962]"/>
  <match src="): ) [49319,49320]" dest="): ) [14026,14027]"/>
  <match src="primitive_type [98572,98579]" dest="primitive_type [39332,39339]"/>
  <match src="external: external [13096,13104]" dest="external: external [18034,18042]"/>
  <match src="primitive_type [82652,82659]" dest="primitive_type [22274,22281]"/>
  <match src="parameter [91003,91018]" dest="parameter [31763,31778]"/>
  <match src="visibility [49445,49453]" dest="visibility [14152,14160]"/>
  <match src=".: . [76232,76233]" dest=".: . [64767,64768]"/>
  <match src="identifier: redeemable [82732,82742]" dest="identifier: redeemable [22354,22364]"/>
  <match src="primitive_type [87281,87288]" dest="primitive_type [28041,28048]"/>
  <match src="indexed: indexed [49196,49203]" dest="indexed: indexed [13903,13910]"/>
  <match src="state_mutability [91725,91729]" dest="state_mutability [32485,32489]"/>
  <match src="function: function [50806,50814]" dest="function: function [15513,15521]"/>
  <match src="type_name [32847,32854]" dest="type_name [46225,46232]"/>
  <match src="event_paramater [50608,50624]" dest="event_paramater [15315,15331]"/>
  <match src="identifier: pool [87220,87224]" dest="identifier: pool [27980,27984]"/>
  <match src="bytes: bytes [34940,34945]" dest="bytes: bytes [48318,48323]"/>
  <match src="array_access [96415,96463]" dest="array_access [37175,37223]"/>
  <match src="identifier: reason [28305,28311]" dest="identifier: reason [41683,41689]"/>
  <match src="(: ( [25222,25223]" dest="(: ( [72306,72307]"/>
  <match src="identifier: file [29103,29107]" dest="identifier: file [42481,42485]"/>
  <match src="=: = [34300,34301]" dest="=: = [47678,47679]"/>
  <match src="user_defined_type [8476,8480]" dest="user_defined_type [9040,9044]"/>
  <match src="type_name [89413,89420]" dest="type_name [30173,30180]"/>
  <match src="primitive_type [81959,81966]" dest="primitive_type [21581,21588]"/>
  <match src="identifier: file [28842,28846]" dest="identifier: file [42220,42224]"/>
  <match src="identifier: RPAREN [29370,29376]" dest="identifier: RPAREN [42748,42754]"/>
  <match src="identifier: coupons [96025,96032]" dest="identifier: coupons [36785,36792]"/>
  <match src="number_literal: 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 [41644,41686]" dest="number_literal: 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 [23748,23790]"/>
  <match src="primitive_type [30761,30768]" dest="primitive_type [44139,44146]"/>
  <match src="array_access [97752,97780]" dest="array_access [38512,38540]"/>
  <match src="=: = [35965,35966]" dest="=: = [49343,49344]"/>
  <match src="uint256: uint256 [89413,89420]" dest="uint256: uint256 [30173,30180]"/>
  <match src="type_name [96520,96527]" dest="type_name [37280,37287]"/>
  <match src="}: } [88228,88229]" dest="}: } [28988,28989]"/>
  <match src=",: , [96731,96732]" dest=",: , [37491,37492]"/>
  <match src="identifier: value [8892,8897]" dest="identifier: value [9456,9461]"/>
  <match src=".: . [90333,90334]" dest=".: . [31093,31094]"/>
  <match src="pure: pure [8458,8462]" dest="pure: pure [9022,9026]"/>
  <match src="(: ( [50071,50072]" dest="(: ( [14778,14779]"/>
  <match src="uint8: uint8 [36761,36766]" dest="uint8: uint8 [50139,50144]"/>
  <match src="return_type_definition [42547,42564]" dest="return_type_definition [24651,24668]"/>
  <match src="==: == [8887,8889]" dest="==: == [9451,9453]"/>
  <match src="identifier: div [2629,2632]" dest="identifier: div [3193,3196]"/>
  <match src="internal: internal [73167,73175]" dest="internal: internal [52300,52308]"/>
  <match src="{: { [86532,86533]" dest="{: { [27292,27293]"/>
  <match src=",: , [76134,76135]" dest=",: , [64691,64692]"/>
  <match src="): ) [50085,50086]" dest="): ) [14792,14793]"/>
  <match src="return_statement [9422,9452]" dest="return_statement [9986,10016]"/>
  <match src="return_type_definition [43532,43549]" dest="return_type_definition [25636,25653]"/>
  <match src="function_definition [51436,51461]" dest="function_definition [16143,16168]"/>
  <match src="[: [ [96954,96955]" dest="[: [ [37714,37715]"/>
  <match src="(: ( [77044,77045]" dest="(: ( [65179,65180]"/>
  <match src=",: , [22122,22123]" dest=",: , [58172,58173]"/>
  <match src="function: function [93991,93999]" dest="function: function [34751,34759]"/>
  <match src="identifier: epoch [90199,90204]" dest="identifier: epoch [30959,30964]"/>
  <match src="if: if [28380,28382]" dest="if: if [41758,41760]"/>
  <match src="call_argument [2639,2667]" dest="call_argument [3203,3231]"/>
  <match src="parameter [88338,88353]" dest="parameter [29098,29113]"/>
  <match src="call_expression [2008,2064]" dest="call_expression [2572,2628]"/>
  <match src="primitive_type [65882,65889]" dest="primitive_type [63937,63944]"/>
  <match src="type_name [93297,93304]" dest="type_name [34057,34064]"/>
  <match src=".: . [93807,93808]" dest=".: . [34567,34568]"/>
  <match src="): ) [77429,77430]" dest="): ) [65506,65507]"/>
  <match src="primitive_type [90570,90577]" dest="primitive_type [31330,31337]"/>
  <match src=".: . [88807,88808]" dest=".: . [29567,29568]"/>
  <match src="): ) [36179,36180]" dest="): ) [49557,49558]"/>
  <match src="primitive_type [4639,4645]" dest="primitive_type [5203,5209]"/>
  <match src="primitive_type [93331,93335]" dest="primitive_type [34091,34095]"/>
  <match src="assignment_expression [94688,94775]" dest="assignment_expression [35448,35535]"/>
  <match src="comment: /**      * Getters      */ [42381,42407]" dest="comment: /**      * Getters      */ [24485,24511]"/>
  <match src="parameter [95439,95452]" dest="parameter [36199,36212]"/>
  <match src="identifier: a [10160,10161]" dest="identifier: a [10724,10725]"/>
  <match src=",: , [49871,49872]" dest=",: , [14578,14579]"/>
  <match src="parameter [94025,94039]" dest="parameter [34785,34799]"/>
  <match src="parameter [63050,63069]" dest="parameter [61250,61269]"/>
  <match src=",: , [78023,78024]" dest=",: , [53862,53863]"/>
  <match src="): ) [29988,29989]" dest="): ) [43366,43367]"/>
  <match src="call_expression [6778,6805]" dest="call_expression [7342,7369]"/>
  <match src="primitive_type [32109,32116]" dest="primitive_type [45487,45494]"/>
  <match src="enum_value: Frozen [81636,81642]" dest="enum_value: Frozen [21258,21264]"/>
  <match src="}: } [7222,7223]" dest="}: } [7786,7787]"/>
  <match src="(: ( [49500,49501]" dest="(: ( [14207,14208]"/>
  <match src="visibility [26487,26495]" dest="visibility [59922,59930]"/>
  <match src="type_alias [15770,15778]" dest="type_alias [55045,55053]"/>
  <match src="identifier: supply [82660,82666]" dest="identifier: supply [22282,22288]"/>
  <match src="call_argument [84862,84868]" dest="call_argument [69537,69543]"/>
  <match src="type_name [6137,6141]" dest="type_name [6701,6705]"/>
  <match src="variable_declaration_statement [68697,68768]" dest="variable_declaration_statement [60390,60442]"/>
  <match src="identifier: value [5760,5765]" dest="identifier: value [6324,6329]"/>
  <match src="binary_expression [9288,9310]" dest="binary_expression [9852,9874]"/>
  <match src="return_type_definition [80393,80407]" dest="return_type_definition [67215,67229]"/>
  <match src="member_expression [101700,101714]" dest="member_expression [61323,61339]"/>
  <match src="call_argument [32488,32496]" dest="call_argument [45866,45874]"/>
  <match src="identifier: incrementBalanceOfCoupons [95396,95421]" dest="identifier: incrementBalanceOfCoupons [36156,36181]"/>
  <match src="primitive_type [46922,46929]" dest="primitive_type [19620,19627]"/>
  <match src="type_name [63050,63062]" dest="type_name [61250,61262]"/>
  <match src="): ) [28682,28683]" dest="): ) [42060,42061]"/>
  <match src="event_paramater [75507,75520]" dest="event_paramater [64020,64033]"/>
  <match src="(: ( [87569,87570]" dest="(: ( [28329,28330]"/>
  <match src="call_argument [73472,73484]" dest="call_argument [57350,57362]"/>
  <match src="return: return [9651,9657]" dest="return: return [10215,10221]"/>
  <match src="identifier: reason [93971,93977]" dest="identifier: reason [34731,34737]"/>
  <match src="identifier: isContract [80351,80361]" dest="identifier: isContract [67173,67183]"/>
  <match src="true: true [99181,99185]" dest="true: true [39941,39945]"/>
  <match src="call_argument [76083,76088]" dest="call_argument [65100,65107]"/>
  <match src="type_name [82925,82938]" dest="type_name [22547,22560]"/>
  <match src="identifier: RPAREN [27688,27694]" dest="identifier: RPAREN [41066,41072]"/>
  <match src=".: . [94973,94974]" dest=".: . [35733,35734]"/>
  <match src="identifier: to [51418,51420]" dest="identifier: to [16125,16127]"/>
  <match src="identifier: epoch [72328,72333]" dest="identifier: epoch [55960,55965]"/>
  <match src="identifier: decrementBalanceOfClaimable [76378,76405]" dest="identifier: incrementBalanceOfStaged [65518,65542]"/>
  <match src="identifier: reason [31802,31808]" dest="identifier: reason [45180,45186]"/>
  <match src="identifier: mod [4056,4059]" dest="identifier: mod [4620,4623]"/>
  <match src="bytes: bytes [35714,35719]" dest="bytes: bytes [49092,49097]"/>
  <match src="return_type_definition [9869,9886]" dest="return_type_definition [10433,10450]"/>
  <match src="type_name [49796,49800]" dest="type_name [14503,14507]"/>
  <match src="pure: pure [38345,38349]" dest="pure: pure [13406,13410]"/>
  <match src="function_definition [46950,47008]" dest="function_definition [19648,19706]"/>
  <match src="memory: memory [6848,6854]" dest="memory: memory [7412,7418]"/>
  <match src="(: ( [86409,86410]" dest="(: ( [27169,27170]"/>
  <match src="member_expression [98686,98721]" dest="member_expression [39446,39481]"/>
  <match src="function_body [99128,99192]" dest="function_body [39888,39952]"/>
  <match src="]: ] [35396,35397]" dest="]: ] [48774,48775]"/>
  <match src="{: { [43174,43175]" dest="{: { [25278,25279]"/>
  <match src="returns: returns [87968,87975]" dest="returns: returns [28728,28735]"/>
  <match src="event_paramater [75636,75659]" dest="event_paramater [71105,71128]"/>
  <match src="memory: memory [8630,8636]" dest="memory: memory [9194,9200]"/>
  <match src="(: ( [19798,19799]" dest="(: ( [58329,58330]"/>
  <match src=".: . [98692,98693]" dest=".: . [39452,39453]"/>
  <match src="array_access [91365,91393]" dest="array_access [32125,32153]"/>
  <match src="identifier: length [90504,90510]" dest="identifier: length [31264,31270]"/>
  <match src="identifier: reason [98344,98350]" dest="identifier: reason [39104,39110]"/>
  <match src="identifier: debt [82760,82764]" dest="identifier: debt [22382,22386]"/>
  <match src="call_expression [77158,77165]" dest="call_expression [66223,66230]"/>
  <match src="expression_statement [77485,77529]" dest="expression_statement [65988,66032]"/>
  <match src="(: ( [31586,31587]" dest="(: ( [44964,44965]"/>
  <match src="(: ( [85093,85094]" dest="(: ( [69768,69769]"/>
  <match src="assignment_expression [7698,7720]" dest="assignment_expression [8262,8284]"/>
  <match src="call_expression [69095,69102]" dest="call_expression [71779,71786]"/>
  <match src="(: ( [36862,36863]" dest="(: ( [50240,50241]"/>
  <match src="memory: memory [6468,6474]" dest="memory: memory [7032,7038]"/>
  <match src=".: . [96863,96864]" dest=".: . [37623,37624]"/>
  <match src="expression_statement [36391,36402]" dest="expression_statement [49769,49780]"/>
  <match src="): ) [6049,6050]" dest="): ) [6613,6614]"/>
  <match src="type_name [50217,50224]" dest="type_name [14924,14931]"/>
  <match src="call_expression [96851,96878]" dest="call_expression [37611,37638]"/>
  <match src="event_paramater [50346,50358]" dest="event_paramater [15053,15065]"/>
  <match src="(: ( [78794,78795]" dest="(: ( [72693,72694]"/>
  <match src="primitive_type [51496,51503]" dest="primitive_type [16203,16210]"/>
  <match src="call_argument [30404,30410]" dest="call_argument [43782,43788]"/>
  <match src="visibility [97679,97687]" dest="visibility [38439,38447]"/>
  <match src="member_expression [89461,89476]" dest="member_expression [30221,30236]"/>
  <match src="return_type_definition [11569,11586]" dest="return_type_definition [16507,16524]"/>
  <match src="identifier: z [35579,35580]" dest="identifier: z [48957,48958]"/>
  <match src=":: : [8324,8325]" dest=":: : [8888,8889]"/>
  <match src="return: return [43927,43933]" dest="return: return [26031,26037]"/>
  <match src="type_name [82602,82609]" dest="type_name [22224,22231]"/>
  <match src="parameter [89091,89098]" dest="parameter [29851,29858]"/>
  <match src="internal: internal [43986,43994]" dest="internal: internal [26090,26098]"/>
  <match src="parameter [50138,50151]" dest="parameter [14845,14858]"/>
  <match src=",: , [81657,81658]" dest=",: , [21279,21280]"/>
  <match src="(: ( [42774,42775]" dest="(: ( [24878,24879]"/>
  <match src="(: ( [49244,49245]" dest="(: ( [13951,13952]"/>
  <match src=".: . [94546,94547]" dest=".: . [35306,35307]"/>
  <match src="call_argument [43813,43841]" dest="call_argument [25917,25945]"/>
  <match src="private: private [41439,41446]" dest="private: private [23543,23550]"/>
  <match src=",: , [93054,93055]" dest=",: , [33814,33815]"/>
  <match src="): ) [20140,20141]" dest="): ) [58902,58903]"/>
  <match src="type_name [84626,84633]" dest="type_name [69301,69308]"/>
  <match src="call_expression [77111,77125]" dest="call_expression [51956,51970]"/>
  <match src="): ) [76528,76529]" dest="): ) [73508,73509]"/>
  <match src="(: ( [6608,6609]" dest="(: ( [7172,7173]"/>
  <match src="identifier: valid [62686,62691]" dest="identifier: valid [61314,61319]"/>
  <match src="): ) [91746,91747]" dest="): ) [32506,32507]"/>
  <match src="type_name [27629,27635]" dest="type_name [41007,41013]"/>
  <match src="member_expression [61789,61800]" dest="member_expression [61496,61507]"/>
  <match src="): ) [36785,36786]" dest="): ) [50163,50164]"/>
  <match src=".: . [93802,93803]" dest=".: . [34562,34563]"/>
  <match src="private: private [41977,41984]" dest="private: private [24081,24088]"/>
  <match src="return: return [87300,87306]" dest="return: return [28060,28066]"/>
  <match src="identifier: account [68538,68545]" dest="identifier: price [60296,60301]"/>
  <match src="expression_statement [79431,79433]" dest="expression_statement [75379,75381]"/>
  <match src="internal: internal [96809,96817]" dest="internal: internal [37569,37577]"/>
  <match src="&quot;: &quot; [100545,100546]" dest="&quot;: &quot; [62902,62903]"/>
  <match src="expression_statement [25215,25280]" dest="expression_statement [72287,72358]"/>
  <match src="): ) [17703,17704]" dest="): ) [58568,58569]"/>
  <match src="user_defined_type [60396,60408]" dest="user_defined_type [59633,59645]"/>
  <match src="member_expression [94088,94113]" dest="member_expression [34848,34873]"/>
  <match src="primitive_type [15817,15824]" dest="primitive_type [11520,11527]"/>
  <match src="return_type_definition [5986,6007]" dest="return_type_definition [6550,6571]"/>
  <match src="identifier: D256 [43442,43446]" dest="identifier: D256 [25546,25550]"/>
  <match src="type_cast_expression [36761,36786]" dest="type_cast_expression [50139,50164]"/>
  <match src="type_name [28256,28260]" dest="type_name [41634,41638]"/>
  <match src="identifier: totalRedeemable [87554,87569]" dest="identifier: totalRedeemable [28314,28329]"/>
  <match src="type_name [50549,50556]" dest="type_name [15256,15263]"/>
  <match src="(: ( [3984,3985]" dest="(: ( [4548,4549]"/>
  <match src="): ) [7519,7520]" dest="): ) [8083,8084]"/>
  <match src="bool: bool [47076,47080]" dest="bool: bool [19774,19778]"/>
  <match src="identifier: lessUsdc [78369,78377]" dest="identifier: lessRedeemable [56214,56228]"/>
  <match src="call_argument [46220,46227]" dest="call_argument [58106,58113]"/>
  <match src="&quot;: &quot; [20516,20517]" dest="&quot;: &quot; [53706,53707]"/>
  <match src="visibility [51007,51015]" dest="visibility [15714,15722]"/>
  <match src="assignment_expression [35955,35990]" dest="assignment_expression [49333,49368]"/>
  <match src=",: , [95437,95438]" dest=",: , [36197,36198]"/>
  <match src="binary_expression [78914,78966]" dest="binary_expression [53443,53493]"/>
  <match src="identifier: SafeMath [70041,70049]" dest="identifier: SafeMath [74528,74536]"/>
  <match src="}: } [43957,43958]" dest="}: } [26061,26062]"/>
  <match src="string_literal [19803,19842]" dest="string_literal [58334,58381]"/>
  <match src="call_expression [21106,21173]" dest="call_expression [57682,57779]"/>
  <match src=".: . [88814,88815]" dest=".: . [29574,29575]"/>
  <match src="identifier: _state [93788,93794]" dest="identifier: _state [34548,34554]"/>
  <match src="number_literal: 1e10 [41743,41747]" dest="number_literal: 1e10 [23847,23851]"/>
  <match src="primitive_type [19719,19726]" dest="primitive_type [58235,58242]"/>
  <match src="primitive_type [92170,92177]" dest="primitive_type [32930,32937]"/>
  <match src=".: . [95074,95075]" dest=".: . [35834,35835]"/>
  <match src="identifier: FILE [46048,46052]" dest="identifier: FILE [57070,57074]"/>
  <match src="return: return [87996,88002]" dest="return: return [28756,28762]"/>
  <match src="identifier: stringifyTruncated [29719,29737]" dest="identifier: stringifyTruncated [43097,43115]"/>
  <match src="user_defined_type [7508,7512]" dest="user_defined_type [8072,8076]"/>
  <match src="type_name [94025,94032]" dest="type_name [34785,34792]"/>
  <match src="visibility [88582,88588]" dest="visibility [29342,29348]"/>
  <match src="returns: returns [12375,12382]" dest="returns: returns [17313,17320]"/>
  <match src="using: using [86091,86096]" dest="using: using [26851,26856]"/>
  <match src="type_name [63320,63327]" dest="type_name [65426,65433]"/>
  <match src="): ) [28209,28210]" dest="): ) [41587,41588]"/>
  <match src="type_name [82700,82707]" dest="type_name [22322,22329]"/>
  <match src=".: . [76313,76314]" dest=".: . [65867,65868]"/>
  <match src="(: ( [43812,43813]" dest="(: ( [25916,25917]"/>
  <match src="&quot;: &quot; [21920,21921]" dest="&quot;: &quot; [57088,57089]"/>
  <match src="parameter [48112,48126]" dest="parameter [51303,51317]"/>
  <match src="block_statement [28391,28780]" dest="block_statement [41769,42158]"/>
  <match src="uint256: uint256 [90301,90308]" dest="uint256: uint256 [31061,31068]"/>
  <match src="): ) [98137,98138]" dest="): ) [38897,38898]"/>
  <match src="memory: memory [8936,8942]" dest="memory: memory [9500,9506]"/>
  <match src="member_expression [76599,76609]" dest="member_expression [64882,64892]"/>
  <match src="]: ] [91392,91393]" dest="]: ] [32152,32153]"/>
  <match src="struct_member [82906,82949]" dest="struct_member [22528,22571]"/>
  <match src="binary_expression [21977,21998]" dest="binary_expression [57992,58013]"/>
  <match src="state_mutability [92132,92136]" dest="state_mutability [32892,32896]"/>
  <match src="type_name [6540,6544]" dest="type_name [7104,7108]"/>
  <match src="expression_statement [35437,35448]" dest="expression_statement [48815,48826]"/>
  <match src=".: . [95941,95942]" dest=".: . [36701,36702]"/>
  <match src="identifier: placeLock [98763,98772]" dest="identifier: placeLock [39523,39532]"/>
  <match src="function: function [9572,9580]" dest="function: function [10136,10144]"/>
  <match src="array_access [95935,95959]" dest="array_access [36695,36719]"/>
  <match src="visibility [30840,30848]" dest="visibility [44218,44226]"/>
  <match src="identifier: decrementTotalBonded [93547,93567]" dest="identifier: decrementTotalBonded [34307,34327]"/>
  <match src="member_expression [90466,90494]" dest="member_expression [31226,31254]"/>
  <match src="identifier: result [35046,35052]" dest="identifier: result [48424,48430]"/>
  <match src="identifier: incrementBalanceOfBonded [76908,76932]" dest="identifier: incrementTotalBonded [65118,65138]"/>
  <match src="number_literal: 1 [96301,96302]" dest="number_literal: 1 [37061,37062]"/>
  <match src="identifier: sub [94831,94834]" dest="identifier: sub [35591,35594]"/>
  <match src="(: ( [28805,28806]" dest="(: ( [42183,42184]"/>
  <match src="identifier: candidates [91506,91516]" dest="identifier: candidates [32266,32276]"/>
  <match src="parameter [51496,51503]" dest="parameter [16203,16210]"/>
  <match src="internal: internal [43373,43381]" dest="internal: internal [25477,25485]"/>
  <match src="primitive_type [75661,75668]" dest="primitive_type [55557,55564]"/>
  <match src="{: { [30196,30197]" dest="{: { [43574,43575]"/>
  <match src="primitive_type [9791,9798]" dest="primitive_type [10355,10362]"/>
  <match src="call_argument [21137,21172]" dest="call_argument [57741,57778]"/>
  <match src="function_definition [49305,49359]" dest="function_definition [14012,14066]"/>
  <match src="returns: returns [49585,49592]" dest="returns: returns [14292,14299]"/>
  <match src="identifier: staged [95273,95279]" dest="identifier: staged [36033,36039]"/>
  <match src="state_mutability [1675,1679]" dest="state_mutability [2239,2243]"/>
  <match src="type_name [32083,32090]" dest="type_name [45461,45468]"/>
  <match src="member_expression [98686,98703]" dest="member_expression [39446,39463]"/>
  <match src="identifier: BOOTSTRAPPING_PERIOD [42919,42939]" dest="identifier: BOOTSTRAPPING_PERIOD [25023,25043]"/>
  <match src="identifier: _state [98256,98262]" dest="identifier: _state [39016,39022]"/>
  <match src="type_name [4617,4624]" dest="type_name [5181,5188]"/>
  <match src="identifier: GOVERNANCE_PERIOD [41994,42011]" dest="identifier: GOVERNANCE_PERIOD [24098,24115]"/>
  <match src="primitive_type [51238,51245]" dest="primitive_type [15945,15952]"/>
  <match src="identifier: initialized [92075,92086]" dest="identifier: initialized [32835,32846]"/>
  <match src="identifier: stringify [34685,34694]" dest="identifier: stringify [48063,48072]"/>
  <match src="[: [ [98865,98866]" dest="[: [ [39625,39626]"/>
  <match src="primitive_type [13063,13070]" dest="primitive_type [18001,18008]"/>
  <match src="): ) [29343,29344]" dest="): ) [42721,42722]"/>
  <match src="): ) [85377,85378]" dest="): ) [70052,70053]"/>
  <match src="identifier: COLON [32363,32368]" dest="identifier: COLON [45741,45746]"/>
  <match src="): ) [35083,35084]" dest="): ) [48461,48462]"/>
  <match src="function_definition [92099,92272]" dest="function_definition [32859,33032]"/>
  <match src="call_argument [78594,78607]" dest="call_argument [73730,73743]"/>
  <match src=".: . [94282,94283]" dest=".: . [35042,35043]"/>
  <match src="identifier: getReserves [50870,50881]" dest="identifier: getReserves [15577,15588]"/>
  <match src="identifier: value [77855,77860]" dest="identifier: value [65769,65774]"/>
  <match src="string: string [93876,93882]" dest="string: string [34636,34642]"/>
  <match src="identifier: sender [78705,78711]" dest="identifier: sender [57809,57815]"/>
  <match src="call_argument [7907,7941]" dest="call_argument [8471,8505]"/>
  <match src="expression_statement [95893,95995]" dest="expression_statement [36653,36755]"/>
  <match src="member_expression [94983,95014]" dest="member_expression [35743,35774]"/>
  <match src="identifier: msg [75114,75117]" dest="identifier: msg [57708,57711]"/>
  <match src="assignment_expression [95592,95687]" dest="assignment_expression [36352,36447]"/>
  <match src="type_name [16990,16997]" dest="type_name [54218,54225]"/>
  <match src="call_expression [87830,87838]" dest="call_expression [28590,28598]"/>
  <match src="): ) [51450,51451]" dest="): ) [16157,16158]"/>
  <match src="return: return [91086,91092]" dest="return: return [31846,31852]"/>
  <match src="(: ( [95574,95575]" dest="(: ( [36334,36335]"/>
  <match src="call_argument [21236,21272]" dest="call_argument [51900,51944]"/>
  <match src="call_argument [25243,25278]" dest="call_argument [72326,72356]"/>
  <match src="(: ( [79159,79160]" dest="(: ( [65975,65976]"/>
  <match src="}: } [88478,88479]" dest="}: } [29238,29239]"/>
  <match src="identifier: start [82350,82355]" dest="identifier: start [21972,21977]"/>
  <match src="emit_statement [22094,22132]" dest="emit_statement [58133,58182]"/>
  <match src="public: public [86715,86721]" dest="public: public [27475,27481]"/>
  <match src="return_type_definition [9256,9270]" dest="return_type_definition [9820,9834]"/>
  <match src="type_name [66056,66063]" dest="type_name [59797,59804]"/>
  <match src="{: { [43550,43551]" dest="{: { [25654,25655]"/>
  <match src="type_name [7596,7600]" dest="type_name [8160,8164]"/>
  <match src="expression_statement [95592,95688]" dest="expression_statement [36352,36448]"/>
  <match src="type_name [90602,90609]" dest="type_name [31362,31369]"/>
  <match src="returns: returns [92014,92021]" dest="returns: returns [32774,32781]"/>
  <match src="type_name [67988,67995]" dest="type_name [73542,73549]"/>
  <match src="}: } [9565,9566]" dest="}: } [10129,10130]"/>
  <match src=",: , [86828,86829]" dest=",: , [27588,27589]"/>
  <match src="): ) [89623,89624]" dest="): ) [30383,30384]"/>
  <match src="type_name [9350,9354]" dest="type_name [9914,9918]"/>
  <match src="(: ( [84894,84895]" dest="(: ( [69569,69570]"/>
  <match src="variable_declaration [1981,1990]" dest="variable_declaration [2545,2554]"/>
  <match src="uint256: uint256 [66131,66138]" dest="uint256: uint256 [59711,59718]"/>
  <match src="parameter [51147,51151]" dest="parameter [15854,15858]"/>
  <match src="type_alias [5579,5587]" dest="type_alias [6143,6151]"/>
  <match src="&quot;: &quot; [53373,53374]" dest="&quot;: &quot; [66156,66157]"/>
  <match src=".: . [93780,93781]" dest=".: . [34540,34541]"/>
  <match src="comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP. Does not include  * the optional functions; to access them see {ERC20Detailed}.  */ [11287,11437]" dest="comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP. Does not include  * the optional functions; to access them see {ERC20Detailed}.  */ [16225,16375]"/>
  <match src="string [4066,4092]" dest="string [4630,4656]"/>
  <match src="struct_member [81884,81904]" dest="struct_member [21506,21526]"/>
  <match src="call_argument [84812,84826]" dest="call_argument [69487,69501]"/>
  <match src="): ) [97351,97352]" dest="): ) [38111,38112]"/>
  <match src="return_type_definition [88594,88618]" dest="return_type_definition [29354,29378]"/>
  <match src="type_name [9120,9124]" dest="type_name [9684,9688]"/>
  <match src="]: ] [97725,97726]" dest="]: ] [38485,38486]"/>
  <match src="function_body [86340,86388]" dest="function_body [27100,27148]"/>
  <match src="expression_statement [34463,34467]" dest="expression_statement [47841,47845]"/>
  <match src="type_name [32109,32116]" dest="type_name [45487,45494]"/>
  <match src="identifier: recipient [93045,93054]" dest="identifier: recipient [33805,33814]"/>
  <match src="visibility [94669,94677]" dest="visibility [35429,35437]"/>
  <match src="call_argument [6793,6804]" dest="call_argument [7357,7368]"/>
  <match src="primitive_type [50217,50224]" dest="primitive_type [14924,14931]"/>
  <match src="identifier: approve [98285,98292]" dest="identifier: approve [39045,39052]"/>
  <match src="{: { [27920,27921]" dest="{: { [41298,41299]"/>
  <match src="primitive_type [9818,9825]" dest="primitive_type [10382,10389]"/>
  <match src="assignment_expression [94229,94302]" dest="assignment_expression [34989,35062]"/>
  <match src="): ) [61602,61603]" dest="): ) [61231,61232]"/>
  <match src="return_type_definition [91464,91481]" dest="return_type_definition [32224,32241]"/>
  <match src="primitive_type [42021,42028]" dest="primitive_type [24125,24132]"/>
  <match src="solidity_pragma_token [7,23]" dest="solidity_pragma_token [7,23]"/>
  <match src="identifier: div [7238,7241]" dest="identifier: div [7802,7805]"/>
  <match src="call_argument [834,835]" dest="call_argument [1398,1399]"/>
  <match src="visibility [1267,1275]" dest="visibility [1831,1839]"/>
  <match src="type_name [75636,75643]" dest="type_name [71105,71112]"/>
  <match src="identifier: amount1 [50365,50372]" dest="identifier: amount1 [15072,15079]"/>
  <match src="primitive_type [1644,1651]" dest="primitive_type [2208,2215]"/>
  <match src="function_definition [89352,90089]" dest="function_definition [30112,30849]"/>
  <match src="uint8: uint8 [35063,35068]" dest="uint8: uint8 [48441,48446]"/>
  <match src="parameter [68530,68545]" dest="parameter [60276,60301]"/>
  <match src="public: public [90581,90587]" dest="public: public [31341,31347]"/>
  <match src="primitive_type [94375,94382]" dest="primitive_type [35135,35142]"/>
  <match src="): ) [29956,29957]" dest="): ) [43334,43335]"/>
  <match src="variable_declaration_statement [36241,36263]" dest="variable_declaration_statement [49619,49641]"/>
  <match src="(: ( [21976,21977]" dest="(: ( [57991,57992]"/>
  <match src="): ) [34044,34045]" dest="): ) [47422,47423]"/>
  <match src="identifier: amount [71210,71216]" dest="identifier: amount [52013,52019]"/>
  <match src="): ) [87258,87259]" dest="): ) [28018,28019]"/>
  <match src="comment: /*     Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [46246,46874]" dest="comment: /*     Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [20584,21212]"/>
  <match src="): ) [96295,96296]" dest="): ) [37055,37056]"/>
  <match src="return_statement [91492,91536]" dest="return_statement [32252,32296]"/>
  <match src="number_literal: 0x3a20 [27565,27571]" dest="number_literal: 0x3a20 [40943,40949]"/>
  <match src="type_name [51096,51100]" dest="type_name [15803,15807]"/>
  <match src="number_literal: 0 [33755,33756]" dest="number_literal: 0 [47133,47134]"/>
  <match src="call_expression [6588,6615]" dest="call_expression [7152,7179]"/>
  <match src="type_name [50153,50160]" dest="type_name [14860,14867]"/>
  <match src="call_expression [76332,76340]" dest="call_expression [64610,64618]"/>
  <match src="{: { [36735,36736]" dest="{: { [50113,50114]"/>
  <match src="expression_statement [94427,94507]" dest="expression_statement [35187,35267]"/>
  <match src="identifier: account [94965,94972]" dest="identifier: account [35725,35732]"/>
  <match src="type_name [15890,15897]" dest="type_name [11549,11556]"/>
  <match src="(: ( [63081,63082]" dest="(: ( [60759,60760]"/>
  <match src="return_statement [6333,6380]" dest="return_statement [6897,6944]"/>
  <match src="visibility [4007,4015]" dest="visibility [4571,4579]"/>
  <match src="struct_member [82342,82356]" dest="struct_member [21964,21978]"/>
  <match src="bool: bool [62681,62685]" dest="bool: bool [61309,61313]"/>
  <match src="identifier: capture [61594,61601]" dest="identifier: oracleCapture [61217,61230]"/>
  <match src="identifier: couponAllowances [81830,81846]" dest="identifier: couponAllowances [21452,21468]"/>
  <match src="member_expression [77940,77950]" dest="member_expression [64851,64861]"/>
  <match src="function_definition [49837,49921]" dest="function_definition [14544,14628]"/>
  <match src="(: ( [85353,85354]" dest="(: ( [70028,70029]"/>
  <match src="identifier: amount [72010,72016]" dest="identifier: amount [56795,56801]"/>
  <match src="function_body [93615,93697]" dest="function_body [34375,34457]"/>
  <match src="identifier: amount [93576,93582]" dest="identifier: amount [34336,34342]"/>
  <match src="external: external [11555,11563]" dest="external: external [16493,16501]"/>
  <match src="call_expression [89755,89789]" dest="call_expression [30515,30549]"/>
  <match src="parameter [1217,1226]" dest="parameter [1781,1790]"/>
  <match src="(: ( [89831,89832]" dest="(: ( [30591,30592]"/>
  <match src="array_access [94983,95007]" dest="array_access [35743,35767]"/>
  <match src="identifier: owner [96528,96533]" dest="identifier: owner [37288,37293]"/>
  <match src="state_mutability [42879,42883]" dest="state_mutability [24983,24987]"/>
  <match src="variable_declaration [77274,77294]" dest="variable_declaration [56144,56167]"/>
  <match src="identifier: newClaimable [77862,77874]" dest="identifier: staged [65776,65782]"/>
  <match src="uint256: uint256 [15926,15933]" dest="uint256: uint256 [74569,74576]"/>
  <match src="): ) [4665,4666]" dest="): ) [5229,5230]"/>
  <match src="): ) [84869,84870]" dest="): ) [69544,69545]"/>
  <match src="identifier: decrementTotalRedeemable [94147,94171]" dest="identifier: decrementTotalRedeemable [34907,34931]"/>
  <match src="event_definition [13924,14002]" dest="event_definition [18862,18940]"/>
  <match src="member_expression [9658,9668]" dest="member_expression [10222,10232]"/>
  <match src="event_paramater [49267,49285]" dest="event_paramater [13974,13992]"/>
  <match src="library_declaration [61,4769]" dest="library_declaration [625,5333]"/>
  <match src="return_type_definition [49335,49358]" dest="return_type_definition [14042,14065]"/>
  <match src="(: ( [77844,77845]" dest="(: ( [65758,65759]"/>
  <match src="member_expression [94257,94271]" dest="member_expression [35017,35031]"/>
  <match src="call_expression [88151,88164]" dest="call_expression [28911,28924]"/>
  <match src="identifier: require [4709,4716]" dest="identifier: require [5273,5280]"/>
  <match src="identifier: b [6603,6604]" dest="identifier: b [7167,7168]"/>
  <match src="identifier: add [7927,7930]" dest="identifier: add [8491,8494]"/>
  <match src="user_defined_type [9480,9484]" dest="user_defined_type [10044,10048]"/>
  <match src="comment: /**      * @dev Sets the implementation address of the proxy.      * @param newImplementation Address of the new implementation.      */ [84926,85062]" dest="comment: /**      * @dev Sets the implementation address of the proxy.      * @param newImplementation Address of the new implementation.      */ [69601,69737]"/>
  <match src="state_mutability [90726,90730]" dest="state_mutability [31486,31490]"/>
  <match src="function_body [4699,4767]" dest="function_body [5263,5331]"/>
  <match src="(: ( [78940,78941]" dest="(: ( [53469,53470]"/>
  <match src="uint256: uint256 [89634,89641]" dest="uint256: uint256 [30394,30401]"/>
  <match src="parameter [95821,95834]" dest="parameter [36581,36594]"/>
  <match src="identifier: result [35517,35523]" dest="identifier: result [48895,48901]"/>
  <match src="sload: sload [92245,92250]" dest="sload: sload [33005,33010]"/>
  <match src="): ) [87837,87838]" dest="): ) [28597,28598]"/>
  <match src="primitive_type [82170,82177]" dest="primitive_type [21792,21799]"/>
  <match src="identifier: _state [87307,87313]" dest="identifier: _state [28067,28073]"/>
  <match src=".: . [93931,93932]" dest=".: . [34691,34692]"/>
  <match src="primitive_type [82414,82421]" dest="primitive_type [22036,22043]"/>
  <match src="!=: != [4719,4721]" dest="!=: != [5283,5285]"/>
  <match src="[: [ [96430,96431]" dest="[: [ [37190,37191]"/>
  <match src="identifier: _state [93766,93772]" dest="identifier: _state [34526,34532]"/>
  <match src="): ) [93070,93071]" dest="): ) [33830,33831]"/>
  <match src="member_expression [86762,86776]" dest="member_expression [27522,27536]"/>
  <match src="string: string [86433,86439]" dest="string: string [27193,27199]"/>
  <match src="comment: // for each byte (starting from the lowest byte), populate the result with two characters [35096,35185]" dest="comment: // for each byte (starting from the lowest byte), populate the result with two characters [48474,48563]"/>
  <match src="identifier: account [88511,88518]" dest="identifier: account [29271,29278]"/>
  <match src="function_body [94678,94857]" dest="function_body [35438,35617]"/>
  <match src="state_mutability [42994,42998]" dest="state_mutability [25098,25102]"/>
  <match src="function_definition [49927,49987]" dest="function_definition [14634,14694]"/>
  <match src="visibility [89070,89076]" dest="visibility [29830,29836]"/>
  <match src="identifier: epochs [90635,90641]" dest="identifier: epochs [31395,31401]"/>
  <match src="): ) [76088,76089]" dest="): ) [65107,65108]"/>
  <match src="parameter [92146,92158]" dest="parameter [32906,32918]"/>
  <match src="comment: // 100 ESD [42150,42160]" dest="comment: // 100 ESD [24254,24264]"/>
  <match src="member_expression [97698,97732]" dest="member_expression [38458,38492]"/>
  <match src="visibility [75243,75250]" dest="visibility [63712,63719]"/>
  <match src="identifier: Status [88710,88716]" dest="identifier: Status [29470,29476]"/>
  <match src="view: view [49964,49968]" dest="view: view [14671,14675]"/>
  <match src="if_statement [89457,89524]" dest="if_statement [30217,30284]"/>
  <match src="parameter [50847,50854]" dest="parameter [15554,15561]"/>
  <match src="visibility [91452,91458]" dest="visibility [32212,32218]"/>
  <match src="{: { [97398,97399]" dest="{: { [38158,38159]"/>
  <match src="call_argument [19882,19883]" dest="call_argument [58421,58422]"/>
  <match src="string_literal [25955,26005]" dest="string_literal [72179,72208]"/>
  <match src="identifier: incrementBalanceOfStaged [94872,94896]" dest="identifier: incrementBalanceOfStaged [35632,35656]"/>
  <match src="identifier: reason [28149,28155]" dest="identifier: reason [41527,41533]"/>
  <match src="memory: memory [35720,35726]" dest="memory: memory [49098,49104]"/>
  <match src="return: return [87197,87203]" dest="return: return [27957,27963]"/>
  <match src="returns: returns [2594,2601]" dest="returns: returns [3158,3165]"/>
  <match src="{: { [43447,43448]" dest="{: { [25551,25552]"/>
  <match src="primitive_type [18302,18309]" dest="primitive_type [11795,11802]"/>
  <match src="return_type_definition [9397,9411]" dest="return_type_definition [9961,9975]"/>
  <match src="(: ( [79119,79120]" dest="(: ( [54069,54070]"/>
  <match src="): ) [6100,6101]" dest="): ) [6664,6665]"/>
  <match src=",: , [100333,100334]" dest=",: , [62690,62691]"/>
  <match src="event_paramater [50374,50392]" dest="event_paramater [15081,15099]"/>
  <match src="visibility [58861,58867]" dest="visibility [20453,20459]"/>
  <match src="variable_declaration [35868,35887]" dest="variable_declaration [49246,49265]"/>
  <match src="identifier: errorMessage [3376,3388]" dest="identifier: errorMessage [3940,3952]"/>
  <match src="comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [10196,10695]" dest="comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [61,624]"/>
  <match src="visibility [87059,87065]" dest="visibility [27819,27825]"/>
  <match src=".: . [92074,92075]" dest=".: . [32834,32835]"/>
  <match src="type_name [41296,41303]" dest="type_name [23400,23407]"/>
  <match src="call_expression [96973,96986]" dest="call_expression [37733,37746]"/>
  <match src="identifier: rejectFor [91791,91800]" dest="identifier: rejectFor [32551,32560]"/>
  <match src="identifier: must [30701,30705]" dest="identifier: must [44079,44083]"/>
  <match src="member_expression [91233,91267]" dest="member_expression [31993,32027]"/>
  <match src="number_literal: 33e16 [42066,42071]" dest="number_literal: 33e16 [24170,24175]"/>
  <match src="call_expression [89564,89577]" dest="call_expression [30324,30337]"/>
  <match src="(: ( [90079,90080]" dest="(: ( [30839,30840]"/>
  <match src="type_alias [86065,86073]" dest="type_alias [26825,26833]"/>
  <match src="variable_declaration [35742,35751]" dest="variable_declaration [49120,49129]"/>
  <match src="member_expression [89903,89935]" dest="member_expression [30663,30695]"/>
  <match src="type_name [75319,75326]" dest="type_name [63791,63798]"/>
  <match src="primitive_type [35058,35062]" dest="primitive_type [48436,48440]"/>
  <match src="using_directive [15764,15791]" dest="using_directive [55039,55066]"/>
  <match src="): ) [77680,77681]" dest="): ) [57482,57483]"/>
  <match src="call_argument [28664,28683]" dest="call_argument [42042,42061]"/>
  <match src=",: , [28638,28639]" dest=",: , [42016,42017]"/>
  <match src="primitive_type [89294,89301]" dest="primitive_type [30054,30061]"/>
  <match src="contract_body [92940,99194]" dest="contract_body [33700,39954]"/>
  <match src="call_expression [6793,6804]" dest="call_expression [7357,7368]"/>
  <match src="return_type_definition [50898,50969]" dest="return_type_definition [15605,15676]"/>
  <match src="function: function [50861,50869]" dest="function: function [15568,15576]"/>
  <match src="function_definition [50975,51036]" dest="function_definition [15682,15743]"/>
  <match src="type_cast_expression [84855,84869]" dest="type_cast_expression [69530,69544]"/>
  <match src="parameter [770,779]" dest="parameter [1334,1343]"/>
  <match src="function_definition [58844,58868]" dest="function_definition [20436,20460]"/>
  <match src="uint256: uint256 [63666,63673]" dest="uint256: uint256 [56995,57002]"/>
  <match src="primitive_type [78520,78527]" dest="primitive_type [55934,55941]"/>
  <match src="): ) [32720,32721]" dest="): ) [46098,46099]"/>
  <match src="visibility [49808,49816]" dest="visibility [14515,14523]"/>
  <match src="parameter [9767,9781]" dest="parameter [10331,10345]"/>
  <match src="identifier: account [94622,94629]" dest="identifier: account [35382,35389]"/>
  <match src="primitive_type [49624,49631]" dest="primitive_type [14331,14338]"/>
  <match src="]: ] [97176,97177]" dest="]: ] [37936,37937]"/>
  <match src=",: , [4637,4638]" dest=",: , [5201,5202]"/>
  <match src="external: external [49503,49511]" dest="external: external [14210,14218]"/>
  <match src="): ) [8069,8070]" dest="): ) [8633,8634]"/>
  <match src=".: . [94955,94956]" dest=".: . [35715,35716]"/>
  <match src="uint8: uint8 [49468,49473]" dest="uint8: uint8 [14175,14180]"/>
  <match src="member_expression [9658,9672]" dest="member_expression [10222,10236]"/>
  <match src="function_body [95479,95763]" dest="function_body [36239,36523]"/>
  <match src="array_access [96251,96275]" dest="array_access [37011,37035]"/>
  <match src="assignment_expression [96117,96184]" dest="assignment_expression [36877,36944]"/>
  <match src="primitive_type [49556,49563]" dest="primitive_type [14263,14270]"/>
  <match src="identifier: _state [87619,87625]" dest="identifier: _state [28379,28385]"/>
  <match src="{: { [85333,85334]" dest="{: { [70008,70009]"/>
  <match src="{: { [77233,77234]" dest="{: { [65385,65386]"/>
  <match src="{: { [42464,42465]" dest="{: { [24568,24569]"/>
  <match src="identifier: transfer [49775,49783]" dest="identifier: transfer [14482,14490]"/>
  <match src="member_expression [90766,90779]" dest="member_expression [31526,31539]"/>
  <match src="(: ( [7061,7062]" dest="(: ( [7625,7626]"/>
  <match src="type_name [80402,80406]" dest="type_name [67224,67228]"/>
  <match src="call_expression [77243,77263]" dest="call_expression [65886,65906]"/>
  <match src="parameter [49755,49759]" dest="parameter [14462,14466]"/>
  <match src="type_name [49978,49985]" dest="type_name [14685,14692]"/>
  <match src="): ) [58933,58934]" dest="): ) [20525,20526]"/>
  <match src="identifier: amount [48120,48126]" dest="identifier: amount [51311,51317]"/>
  <match src="identifier: accounts [96679,96687]" dest="identifier: accounts [37439,37447]"/>
  <match src="yul_path [80917,80924]" dest="yul_path [67739,67746]"/>
  <match src="call_expression [78594,78607]" dest="call_expression [73730,73743]"/>
  <match src="{: { [6154,6155]" dest="{: { [6718,6719]"/>
  <match src="function_definition [51224,51296]" dest="function_definition [15931,16003]"/>
  <match src="parameter [91020,91037]" dest="parameter [31780,31797]"/>
  <match src="call_expression [7182,7216]" dest="call_expression [7746,7780]"/>
  <match src="call_argument [32413,32419]" dest="call_argument [45791,45797]"/>
  <match src="parameter [26162,26177]" dest="parameter [51286,51301]"/>
  <match src="returns: returns [42999,43006]" dest="returns: returns [25103,25110]"/>
  <match src=",: , [50465,50466]" dest=",: , [15172,15173]"/>
  <match src="inheritance_specifier [46895,46901]" dest="inheritance_specifier [19593,19599]"/>
  <match src="state_mutability [3262,3266]" dest="state_mutability [3826,3830]"/>
  <match src="identifier: D256 [6137,6141]" dest="identifier: D256 [6701,6705]"/>
  <match src="member_expression [96047,96091]" dest="member_expression [36807,36851]"/>
  <match src="primitive_type [82914,82921]" dest="primitive_type [22536,22543]"/>
  <match src="is: is [86044,86046]" dest="is: is [26804,26806]"/>
  <match src="function_body [97280,97578]" dest="function_body [38040,38338]"/>
  <match src="(: ( [100034,100035]" dest="(: ( [62391,62392]"/>
  <match src="return_type_definition [90731,90748]" dest="return_type_definition [31491,31508]"/>
  <match src="identifier: shift [35529,35534]" dest="identifier: shift [48907,48912]"/>
  <match src="type_name [42099,42106]" dest="type_name [24203,24210]"/>
  <match src="(: ( [6729,6730]" dest="(: ( [7293,7294]"/>
  <match src="}: } [97428,97429]" dest="}: } [38188,38189]"/>
  <match src="&quot;: &quot; [79223,79224]" dest="&quot;: &quot; [66104,66105]"/>
  <match src="function: function [98544,98552]" dest="function: function [39304,39312]"/>
  <match src="primitive_type [82059,82066]" dest="primitive_type [21681,21688]"/>
  <match src="user_defined_type [6950,6954]" dest="user_defined_type [7514,7518]"/>
  <match src="type_name [8599,8603]" dest="type_name [9163,9167]"/>
  <match src="uint256: uint256 [33980,33987]" dest="uint256: uint256 [47358,47365]"/>
  <match src="): ) [49357,49358]" dest="): ) [14064,14065]"/>
  <match src="(: ( [76817,76818]" dest="(: ( [64964,64965]"/>
  <match src="): ) [36667,36668]" dest="): ) [50045,50046]"/>
  <match src="binary_expression [36767,36785]" dest="binary_expression [50145,50163]"/>
  <match src="if_statement [48206,48452]" dest="if_statement [58641,58840]"/>
  <match src="address: address [86830,86837]" dest="address: address [27590,27597]"/>
  <match src="identifier: spender [96371,96378]" dest="identifier: spender [37131,37138]"/>
  <match src="returns: returns [63657,63664]" dest="returns: returns [56986,56993]"/>
  <match src="private: private [15826,15833]" dest="private: private [11843,11850]"/>
  <match src="identifier: fluidUntil [88787,88797]" dest="identifier: fluidUntil [29547,29557]"/>
  <match src="): ) [51503,51504]" dest="): ) [16210,16211]"/>
  <match src="{: { [10077,10078]" dest="{: { [10641,10642]"/>
  <match src="primitive_type [90704,90711]" dest="primitive_type [31464,31471]"/>
  <match src="if: if [33395,33397]" dest="if: if [46773,46775]"/>
  <match src="function_body [98041,98145]" dest="function_body [38801,38905]"/>
  <match src="type_name [27387,27394]" dest="type_name [40765,40772]"/>
  <match src="type_name [5650,5657]" dest="type_name [6214,6221]"/>
  <match src="identifier: newPhantom [76709,76719]" dest="identifier: epoch [57271,57276]"/>
  <match src="identifier: value [49292,49297]" dest="identifier: value [13999,14004]"/>
  <match src="visibility [95195,95203]" dest="visibility [35955,35963]"/>
  <match src="(: ( [46921,46922]" dest="(: ( [19619,19620]"/>
  <match src="): ) [75923,75924]" dest="): ) [52243,52244]"/>
  <match src="contract_body [86053,92274]" dest="contract_body [26813,33034]"/>
  <match src="identifier: amount1Out [51337,51347]" dest="identifier: amount1Out [16044,16054]"/>
  <match src="function_definition [47909,48049]" dest="function_definition [51033,51255]"/>
  <match src="internal: internal [80379,80387]" dest="internal: internal [67201,67209]"/>
  <match src="member_expression [98051,98087]" dest="member_expression [38811,38847]"/>
  <match src="internal: internal [63921,63929]" dest="internal: internal [64082,64090]"/>
  <match src="identifier: incrementBalanceOfStaged [75856,75880]" dest="identifier: incrementBalanceOfStaged [64429,64453]"/>
  <match src="{: { [82255,82256]" dest="{: { [21877,21878]"/>
  <match src="number_literal: 10 [5674,5676]" dest="number_literal: 10 [6238,6240]"/>
  <match src="array_access [94462,94486]" dest="array_access [35222,35246]"/>
  <match src="library: library [79944,79951]" dest="library: library [66766,66773]"/>
  <match src=",: , [50151,50152]" dest=",: , [14858,14859]"/>
  <match src="type_name [51349,51356]" dest="type_name [16056,16063]"/>
  <match src="[: [ [88510,88511]" dest="[: [ [29270,29271]"/>
  <match src="comment: /**      * @dev Moves `amount` tokens from `sender` to `recipient` using the      * allowance mechanism. `amount` is then deducted from the caller's      * allowance.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [13126,13422]" dest="comment: /**      * @dev Moves `amount` tokens from `sender` to `recipient` using the      * allowance mechanism. `amount` is then deducted from the caller's      * allowance.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [18064,18360]"/>
  <match src="member_expression [75770,75780]" dest="member_expression [71245,71255]"/>
  <match src="identifier: b [6877,6878]" dest="identifier: b [7441,7442]"/>
  <match src="(: ( [19976,19977]" dest="(: ( [52179,52180]"/>
  <match src="member_expression [89564,89581]" dest="member_expression [30324,30341]"/>
  <match src="type_name [90704,90711]" dest="type_name [31464,31471]"/>
  <match src="identifier: D256 [9368,9372]" dest="identifier: D256 [9932,9936]"/>
  <match src=":: : [6776,6777]" dest=":: : [7340,7341]"/>
  <match src="assignment_expression [96609,96740]" dest="assignment_expression [37369,37500]"/>
  <match src="): ) [78200,78201]" dest="): ) [72901,72902]"/>
  <match src="type_name [99863,99870]" dest="type_name [62220,62227]"/>
  <match src="number_literal: 42 [34946,34948]" dest="number_literal: 42 [48324,48326]"/>
  <match src="comment: /**      * Returns whether the target address is a contract      * @dev This function will return false if invoked during the constructor of a contract,      * as the code is not actually created until after the constructor finishes.      * @param account address of the account to check      * @return whether the target address is a contract      */ [79986,80337]" dest="comment: /**      * Returns whether the target address is a contract      * @dev This function will return false if invoked during the constructor of a contract,      * as the code is not actually created until after the constructor finishes.      * @param account address of the account to check      * @return whether the target address is a contract      */ [66808,67159]"/>
  <match src="identifier: totalDebt [87454,87463]" dest="identifier: totalDebt [28214,28223]"/>
  <match src="identifier: self [7376,7380]" dest="identifier: self [7940,7944]"/>
  <match src=".: . [10171,10172]" dest=".: . [10735,10736]"/>
  <match src="function_body [87986,88041]" dest="function_body [28746,28801]"/>
  <match src="type_name [10064,10071]" dest="type_name [10628,10635]"/>
  <match src="(: ( [49678,49679]" dest="(: ( [14385,14386]"/>
  <match src="{: { [82815,82816]" dest="{: { [22437,22438]"/>
  <match src="{: { [45161,45162]" dest="{: { [51328,51329]"/>
  <match src="(: ( [86814,86815]" dest="(: ( [27574,27575]"/>
  <match src="&quot;: &quot; [86465,86466]" dest="&quot;: &quot; [27225,27226]"/>
  <match src="pure: pure [8662,8666]" dest="pure: pure [9226,9230]"/>
  <match src="member_expression [99138,99155]" dest="member_expression [39898,39915]"/>
  <match src="primitive_type [26048,26055]" dest="primitive_type [51565,51572]"/>
  <match src="identifier: i [7665,7666]" dest="identifier: i [8229,8230]"/>
  <match src="return_type_definition [87272,87289]" dest="return_type_definition [28032,28049]"/>
  <match src="binary_expression [89461,89489]" dest="binary_expression [30221,30249]"/>
  <match src="user_defined_type [7813,7817]" dest="user_defined_type [8377,8381]"/>
  <match src="enum_declaration [81614,81679]" dest="enum_declaration [21236,21301]"/>
  <match src="member_expression [90047,90079]" dest="member_expression [30807,30839]"/>
  <match src="identifier: slot [92251,92255]" dest="identifier: slot [33011,33015]"/>
  <match src="primitive_type [94647,94653]" dest="primitive_type [35407,35413]"/>
  <match src="call_argument [48189,48195]" dest="call_argument [51384,51390]"/>
  <match src="): ) [21272,21273]" dest="): ) [51944,51945]"/>
  <match src="identifier: account [88346,88353]" dest="identifier: account [29106,29113]"/>
  <match src="identifier: b [8961,8962]" dest="identifier: b [9525,9526]"/>
  <match src="type_name [87939,87946]" dest="type_name [28699,28706]"/>
  <match src="type_name [42893,42900]" dest="type_name [24997,25004]"/>
  <match src="function_body [32184,32752]" dest="function_body [45562,46130]"/>
  <match src="function_body [86745,86790]" dest="function_body [27505,27550]"/>
  <match src="parameter [19719,19736]" dest="parameter [58235,58252]"/>
  <match src="{: { [46902,46903]" dest="{: { [19600,19601]"/>
  <match src="identifier: subtractedValue [19004,19019]" dest="identifier: totalSupply [11774,11785]"/>
  <match src="parenthesized_expression [30903,31413]" dest="parenthesized_expression [44281,44791]"/>
  <match src="primitive_type [364,371]" dest="primitive_type [928,935]"/>
  <match src="state_mutability [8662,8666]" dest="state_mutability [9226,9230]"/>
  <match src="pure: pure [10046,10050]" dest="pure: pure [10610,10614]"/>
  <match src="identifier: encodePacked [28011,28023]" dest="identifier: encodePacked [41389,41401]"/>
  <match src="identifier: accounts [88640,88648]" dest="identifier: accounts [29400,29408]"/>
  <match src="indexed: indexed [50262,50269]" dest="indexed: indexed [14969,14976]"/>
  <match src="call_argument [63214,63228]" dest="call_argument [60837,60846]"/>
  <match src="parameter [50943,50968]" dest="parameter [15650,15675]"/>
  <match src=".: . [95612,95613]" dest=".: . [36372,36373]"/>
  <match src=".: . [77943,77944]" dest=".: . [64854,64855]"/>
  <match src="for: for [60392,60395]" dest="for: for [59629,59632]"/>
  <match src="member_expression [63433,63446]" dest="member_expression [73696,73709]"/>
  <match src="identifier: accounts [99017,99025]" dest="identifier: accounts [39777,39785]"/>
  <match src="uint256: uint256 [81959,81966]" dest="uint256: uint256 [21581,21588]"/>
  <match src="identifier: D256 [6950,6954]" dest="identifier: D256 [7514,7518]"/>
  <match src="identifier: epochStart [89159,89169]" dest="identifier: epochStart [29919,29929]"/>
  <match src="primitive_type [50608,50615]" dest="primitive_type [15315,15322]"/>
  <match src="public: public [92002,92008]" dest="public: public [32762,32768]"/>
  <match src="function: function [92099,92107]" dest="function: function [32859,32867]"/>
  <match src="): ) [75392,75393]" dest="): ) [63864,63865]"/>
  <match src="): ) [43140,43141]" dest="): ) [25244,25245]"/>
  <match src="(: ( [92250,92251]" dest="(: ( [33010,33011]"/>
  <match src="member_expression [90466,90479]" dest="member_expression [31226,31239]"/>
  <match src="uint256: uint256 [87281,87288]" dest="uint256: uint256 [28041,28048]"/>
  <match src="(: ( [77357,77358]" dest="(: ( [65468,65469]"/>
  <match src="identifier: D256 [60404,60408]" dest="identifier: D256 [59641,59645]"/>
  <match src="): ) [98807,98808]" dest="): ) [39567,39568]"/>
  <match src="type_name [30054,30061]" dest="type_name [43432,43439]"/>
  <match src="{: { [86053,86054]" dest="{: { [26813,26814]"/>
  <match src="parameter [94647,94667]" dest="parameter [35407,35427]"/>
  <match src="call_argument [19985,20025]" dest="call_argument [52188,52218]"/>
  <match src="member_expression [94949,94964]" dest="member_expression [35709,35724]"/>
  <match src=".: . [87417,87418]" dest=".: . [28177,28178]"/>
  <match src="return_type_definition [12375,12392]" dest="return_type_definition [17313,17330]"/>
  <match src="visibility [8027,8035]" dest="visibility [8591,8599]"/>
  <match src="): ) [9639,9640]" dest="): ) [10203,10204]"/>
  <match src="identifier: sender [17678,17684]" dest="identifier: sender [58508,58514]"/>
  <match src="member_expression [95036,95050]" dest="member_expression [35796,35810]"/>
  <match src="(: ( [97740,97741]" dest="(: ( [38500,38501]"/>
  <match src=".: . [79075,79076]" dest=".: . [73003,73004]"/>
  <match src="event: event [84380,84385]" dest="event: event [69055,69060]"/>
  <match src="call_argument [36767,36785]" dest="call_argument [50145,50163]"/>
  <match src="return_statement [9136,9167]" dest="return_statement [9700,9731]"/>
  <match src=".: . [96720,96721]" dest=".: . [37480,37481]"/>
  <match src="identifier: accounts [95942,95950]" dest="identifier: accounts [36702,36710]"/>
  <match src="member_expression [96004,96032]" dest="member_expression [36764,36792]"/>
  <match src="identifier: payloadB [30555,30563]" dest="identifier: payloadB [43933,43941]"/>
  <match src="return: return [89110,89116]" dest="return: return [29870,29876]"/>
  <match src="}: } [99191,99192]" dest="}: } [39951,39952]"/>
  <match src="&quot;: &quot; [100386,100387]" dest="&quot;: &quot; [62743,62744]"/>
  <match src="{: { [8317,8318]" dest="{: { [8881,8882]"/>
  <match src="member_expression [96047,96060]" dest="member_expression [36807,36820]"/>
  <match src=".: . [94755,94756]" dest=".: . [35515,35516]"/>
  <match src="comment: /**      * Epoch      */ [89023,89047]" dest="comment: /**      * Epoch      */ [29783,29807]"/>
  <match src="type_name [7148,7152]" dest="type_name [7712,7716]"/>
  <match src="uint256: uint256 [93165,93172]" dest="uint256: uint256 [33925,33932]"/>
  <match src="identifier: State [82933,82938]" dest="identifier: State [22555,22560]"/>
  <match src="&quot;: &quot; [21137,21138]" dest="&quot;: &quot; [57741,57742]"/>
  <match src="function_definition [9179,9317]" dest="function_definition [9743,9881]"/>
  <match src="(: ( [49343,49344]" dest="(: ( [14050,14051]"/>
  <match src="number_literal: 32 [33144,33146]" dest="number_literal: 32 [46522,46524]"/>
  <match src="assignment_expression [35001,35036]" dest="assignment_expression [48379,48414]"/>
  <match src="(: ( [36599,36600]" dest="(: ( [49977,49978]"/>
  <match src="identifier: j [34555,34556]" dest="identifier: j [47933,47934]"/>
  <match src="parameter [8003,8016]" dest="parameter [8567,8580]"/>
  <match src="function_body [35732,36580]" dest="function_body [49110,49958]"/>
  <match src="parameter [33798,33811]" dest="parameter [47176,47189]"/>
  <match src="type_cast_expression [35754,35768]" dest="type_cast_expression [49132,49146]"/>
  <match src="view: view [88589,88593]" dest="view: view [29349,29353]"/>
  <match src="(: ( [5879,5880]" dest="(: ( [6443,6444]"/>
  <match src="primitive_type [36153,36160]" dest="primitive_type [49531,49538]"/>
  <match src="identifier: i [33450,33451]" dest="identifier: i [46828,46829]"/>
  <match src=".: . [98301,98302]" dest=".: . [39061,39062]"/>
  <match src="{: { [11455,11456]" dest="{: { [16393,16394]"/>
  <match src="byte: byte [34530,34534]" dest="byte: byte [47908,47912]"/>
  <match src="): ) [13094,13095]" dest="): ) [18032,18033]"/>
  <match src="comment: // get the final string length [33941,33971]" dest="comment: // get the final string length [47319,47349]"/>
  <match src="address: address [49624,49631]" dest="address: address [14331,14338]"/>
  <match src="identifier: epoch [77158,77163]" dest="identifier: epoch [66223,66228]"/>
  <match src="visibility [6919,6927]" dest="visibility [7483,7491]"/>
  <match src="comment: /**      * Epoch      */ [96753,96777]" dest="comment: /**      * Epoch      */ [37513,37537]"/>
  <match src="): ) [49598,49599]" dest="): ) [14305,14306]"/>
  <match src="uint256: uint256 [60783,60790]" dest="uint256: uint256 [70943,70950]"/>
  <match src="call_argument [48228,48240]" dest="call_argument [58694,58704]"/>
  <match src="array_access [86647,86671]" dest="array_access [27407,27431]"/>
  <match src="identifier: errorMessage [3239,3251]" dest="identifier: errorMessage [3803,3815]"/>
  <match src=",: , [77636,77637]" dest=",: , [57461,57462]"/>
  <match src="identifier: value [8549,8554]" dest="identifier: value [9113,9118]"/>
  <match src="return_type_definition [87169,87186]" dest="return_type_definition [27929,27946]"/>
  <match src="variable_declaration [85279,85291]" dest="variable_declaration [69954,69966]"/>
  <match src="type_name [91433,91440]" dest="type_name [32193,32200]"/>
  <match src="identifier: zero [5838,5842]" dest="identifier: zero [6402,6406]"/>
  <match src="(: ( [49707,49708]" dest="(: ( [14414,14415]"/>
  <match src="call_argument [9298,9302]" dest="call_argument [9862,9866]"/>
  <match src="identifier: newClaimable [77282,77294]" dest="identifier: couponsForEpoch [56152,56167]"/>
  <match src="comment: // benefit is lost if 'b' is also tested. [1796,1837]" dest="comment: // benefit is lost if 'b' is also tested. [2360,2401]"/>
  <match src="return_statement [43039,43089]" dest="return_statement [25143,25193]"/>
  <match src="call_argument [8341,8348]" dest="call_argument [8905,8912]"/>
  <match src="parameter [9350,9366]" dest="parameter [9914,9930]"/>
  <match src="emit: emit [22094,22098]" dest="emit: emit [58133,58137]"/>
  <match src="primitive_type [68777,68784]" dest="primitive_type [71894,71901]"/>
  <match src="identifier: div [9669,9672]" dest="identifier: div [10233,10236]"/>
  <match src="call_argument [7709,7713]" dest="call_argument [8273,8277]"/>
  <match src="identifier: sender [78648,78654]" dest="identifier: sender [58098,58104]"/>
  <match src="returns: returns [86861,86868]" dest="returns: returns [27621,27628]"/>
  <match src="=: = [42226,42227]" dest="=: = [24330,24331]"/>
  <match src="expression_statement [22048,22085]" dest="expression_statement [58071,58123]"/>
  <match src="type_name [35199,35206]" dest="type_name [48577,48584]"/>
  <match src="parameter [94375,94390]" dest="parameter [35135,35150]"/>
  <match src="function_body [88400,88541]" dest="function_body [29160,29301]"/>
  <match src="internal: internal [8649,8657]" dest="internal: internal [9213,9221]"/>
  <match src="user_defined_type [61628,61640]" dest="user_defined_type [13047,13059]"/>
  <match src="identifier: stringify [32478,32487]" dest="identifier: stringify [45856,45865]"/>
  <match src="state_variable_declaration [84123,84237]" dest="state_variable_declaration [68798,68912]"/>
  <match src="view: view [92009,92013]" dest="view: view [32769,32773]"/>
  <match src="identifier: bstr [34154,34158]" dest="identifier: bstr [47532,47536]"/>
  <match src="member_expression [89320,89339]" dest="member_expression [30080,30099]"/>
  <match src="member_expression [8890,8897]" dest="member_expression [9454,9461]"/>
  <match src="=: = [93490,93491]" dest="=: = [34250,34251]"/>
  <match src="{: { [8719,8720]" dest="{: { [9283,9284]"/>
  <match src="call_argument [8097,8131]" dest="call_argument [8661,8695]"/>
  <match src="[: [ [96454,96455]" dest="[: [ [37214,37215]"/>
  <match src="type_name [45372,45379]" dest="type_name [65331,65338]"/>
  <match src="): ) [46936,46937]" dest="): ) [19634,19635]"/>
  <match src="): ) [73262,73263]" dest="): ) [56880,56881]"/>
  <match src="identifier: PERMIT_TYPEHASH [50001,50016]" dest="identifier: PERMIT_TYPEHASH [14708,14723]"/>
  <match src="uint256: uint256 [2603,2610]" dest="uint256: uint256 [3167,3174]"/>
  <match src="primitive_type [47940,47947]" dest="primitive_type [51073,51080]"/>
  <match src="memory: memory [7513,7519]" dest="memory: memory [8077,8083]"/>
  <match src="): ) [3251,3252]" dest="): ) [3815,3816]"/>
  <match src="{: { [88119,88120]" dest="{: { [28879,28880]"/>
  <match src="function: function [90095,90103]" dest="function: function [30855,30863]"/>
  <match src="{: { [93096,93097]" dest="{: { [33856,33857]"/>
  <match src="identifier: candidate [98580,98589]" dest="identifier: candidate [39340,39349]"/>
  <match src="parameter [3985,3994]" dest="parameter [4549,4558]"/>
  <match src="(: ( [88390,88391]" dest="(: ( [29150,29151]"/>
  <match src="identifier: getUsdc [42422,42429]" dest="identifier: getUsdc [24526,24533]"/>
  <match src="identifier: ASCII_ZERO [27404,27414]" dest="identifier: ASCII_ZERO [40782,40792]"/>
  <match src=",: , [88353,88354]" dest=",: , [29113,29114]"/>
  <match src="primitive_type [35742,35749]" dest="primitive_type [49120,49127]"/>
  <match src="identifier: account [100301,100308]" dest="identifier: account [62658,62665]"/>
  <match src="comment: /**      * Account      */ [87882,87908]" dest="comment: /**      * Account      */ [28642,28668]"/>
  <match src="(: ( [51172,51173]" dest="(: ( [15879,15880]"/>
  <match src="type_name [7277,7284]" dest="type_name [7841,7848]"/>
  <match src="identifier: incrementBalanceOfPhantom [78675,78700]" dest="identifier: redeemToAccount [57789,57804]"/>
  <match src="primitive_type [29476,29480]" dest="primitive_type [42854,42858]"/>
  <match src="user_defined_type [9350,9354]" dest="user_defined_type [9914,9918]"/>
  <match src="{: { [82332,82333]" dest="{: { [21954,21955]"/>
  <match src="(: ( [49442,49443]" dest="(: ( [14149,14150]"/>
  <match src="): ) [87851,87852]" dest="): ) [28611,28612]"/>
  <match src="identifier: that [46109,46113]" dest="identifier: that [53619,53623]"/>
  <match src="identifier: isContract [85175,85185]" dest="identifier: isContract [69850,69860]"/>
  <match src="external: external [50714,50722]" dest="external: external [15421,15429]"/>
  <match src="parameter [94614,94629]" dest="parameter [35374,35389]"/>
  <match src="expression_statement [78757,78772]" dest="expression_statement [54165,54180]"/>
  <match src="call_expression [89903,90029]" dest="call_expression [30663,30789]"/>
  <match src="type_name [98607,98613]" dest="type_name [39367,39373]"/>
  <match src="function: function [51107,51115]" dest="function: function [15814,15822]"/>
  <match src="return: return [97412,97418]" dest="return: return [38172,38178]"/>
  <match src="(: ( [43983,43984]" dest="(: ( [26087,26088]"/>
  <match src="constant: constant [86144,86152]" dest="constant: constant [26904,26912]"/>
  <match src="identifier: recipient [20123,20132]" dest="identifier: recipient [58878,58887]"/>
  <match src="type_name [88338,88345]" dest="type_name [29098,29105]"/>
  <match src="): ) [9124,9125]" dest="): ) [9688,9689]"/>
  <match src="): ) [82988,82989]" dest="): ) [22610,22611]"/>
  <match src="identifier: require [19853,19860]" dest="identifier: require [58392,58399]"/>
  <match src="variable_declaration [68777,68813]" dest="variable_declaration [71894,71908]"/>
  <match src="{: { [28391,28392]" dest="{: { [41769,41770]"/>
  <match src="visibility [86600,86606]" dest="visibility [27360,27366]"/>
  <match src="(: ( [8718,8719]" dest="(: ( [9282,9283]"/>
  <match src="identifier: setImplementation [85076,85093]" dest="identifier: setImplementation [69751,69768]"/>
  <match src=".: . [73639,73640]" dest=".: . [72606,72607]"/>
  <match src="byte: byte [35058,35062]" dest="byte: byte [48436,48440]"/>
  <match src="state_mutability [8839,8843]" dest="state_mutability [9403,9407]"/>
  <match src="identifier: Status [100321,100327]" dest="identifier: Status [62678,62684]"/>
  <match src="identifier: candidate [99108,99117]" dest="identifier: candidate [39868,39877]"/>
  <match src="type_name [42775,42782]" dest="type_name [24879,24886]"/>
  <match src="string [48396,48439]" dest="string [58790,58828]"/>
  <match src="identifier: add [89947,89950]" dest="identifier: add [30707,30710]"/>
  <match src="call_expression [94257,94302]" dest="call_expression [35017,35062]"/>
  <match src="comment: // populate the most-significant character [36416,36458]" dest="comment: // populate the most-significant character [49794,49836]"/>
  <match src="identifier: amount [98131,98137]" dest="identifier: amount [38891,38897]"/>
  <match src="(: ( [43736,43737]" dest="(: ( [25840,25841]"/>
  <match src="call_expression [34161,34178]" dest="call_expression [47539,47556]"/>
  <match src="identifier: account [97837,97844]" dest="identifier: account [38597,38604]"/>
  <match src="parameter [93584,93604]" dest="parameter [34344,34364]"/>
  <match src="event_paramater [75540,75563]" dest="event_paramater [63882,63905]"/>
  <match src="memory: memory [86332,86338]" dest="memory: memory [27092,27098]"/>
  <match src="return: return [6164,6170]" dest="return: return [6728,6734]"/>
  <match src="(: ( [87780,87781]" dest="(: ( [28540,28541]"/>
  <match src=".: . [95663,95664]" dest=".: . [36423,36424]"/>
  <match src="identifier: epochs [97534,97540]" dest="identifier: epochs [38294,38300]"/>
  <match src="parameter [43908,43915]" dest="parameter [26012,26019]"/>
  <match src="state_mutability [87371,87375]" dest="state_mutability [28131,28135]"/>
  <match src="bytes: bytes [34758,34763]" dest="bytes: bytes [48136,48141]"/>
  <match src="(: ( [50109,50110]" dest="(: ( [14816,14817]"/>
  <match src="}: } [28785,28786]" dest="}: } [42163,42164]"/>
  <match src="[: [ [33405,33406]" dest="[: [ [46783,46784]"/>
  <match src="uint256: uint256 [86736,86743]" dest="uint256: uint256 [27496,27503]"/>
  <match src="(: ( [76309,76310]" dest="(: ( [65863,65864]"/>
  <match src="comment: // 1 day [41934,41942]" dest="comment: // 1 day [24038,24046]"/>
  <match src="uint256: uint256 [90159,90166]" dest="uint256: uint256 [30919,30926]"/>
  <match src="return_type_definition [1281,1298]" dest="return_type_definition [1845,1862]"/>
  <match src="{: { [9527,9528]" dest="{: { [10091,10092]"/>
  <match src="{: { [90168,90169]" dest="{: { [30928,30929]"/>
  <match src="comment: /**      * @dev Emitted when the implementation is upgraded.      * @param implementation Address of the new implementation.      */ [84243,84375]" dest="comment: /**      * @dev Emitted when the implementation is upgraded.      * @param implementation Address of the new implementation.      */ [68918,69050]"/>
  <match src="parameter [87977,87984]" dest="parameter [28737,28744]"/>
  <match src=",: , [6372,6373]" dest=",: , [6936,6937]"/>
  <match src="{: { [87290,87291]" dest="{: { [28050,28051]"/>
  <match src="identifier: compareTo [9143,9152]" dest="identifier: compareTo [9707,9716]"/>
  <match src="private: private [75243,75250]" dest="private: private [63712,63719]"/>
  <match src="return: return [87823,87829]" dest="return: return [28583,28589]"/>
  <match src="(: ( [34170,34171]" dest="(: ( [47548,47549]"/>
  <match src=".: . [96840,96841]" dest=".: . [37600,37601]"/>
  <match src="parameter [97644,97661]" dest="parameter [38404,38421]"/>
  <match src="uint256: uint256 [4628,4635]" dest="uint256: uint256 [5192,5199]"/>
  <match src="type_name [73352,73359]" dest="type_name [74751,74758]"/>
  <match src="user_defined_type [5995,5999]" dest="user_defined_type [6559,6563]"/>
  <match src="member_expression [77158,77169]" dest="member_expression [66223,66234]"/>
  <match src="&quot;: &quot; [19179,19180]" dest="&quot;: &quot; [64200,64201]"/>
  <match src="member_expression [96289,96300]" dest="member_expression [37049,37060]"/>
  <match src="internal: internal [6106,6114]" dest="internal: internal [6670,6678]"/>
  <match src="uint256: uint256 [93297,93304]" dest="uint256: uint256 [34057,34064]"/>
  <match src="uint256: uint256 [47044,47051]" dest="uint256: uint256 [19742,19749]"/>
  <match src="primitive_type [12029,12033]" dest="primitive_type [16967,16971]"/>
  <match src="function_body [91216,91274]" dest="function_body [31976,32034]"/>
  <match src="identifier: epoch [90839,90844]" dest="identifier: epoch [31599,31604]"/>
  <match src=",: , [8411,8412]" dest=",: , [8975,8976]"/>
  <match src="memory: memory [93883,93889]" dest="memory: memory [34643,34649]"/>
  <match src="primitive_type [1689,1696]" dest="primitive_type [2253,2260]"/>
  <match src="identifier: file [29503,29507]" dest="identifier: file [42881,42885]"/>
  <match src="): ) [87709,87710]" dest="): ) [28469,28470]"/>
  <match src="]: ] [95654,95655]" dest="]: ] [36414,36415]"/>
  <match src="public: public [90846,90852]" dest="public: public [31606,31612]"/>
  <match src="identifier: b [9445,9446]" dest="identifier: b [10009,10010]"/>
  <match src="call_argument [98524,98530]" dest="call_argument [39284,39290]"/>
  <match src="function_definition [8910,9040]" dest="function_definition [9474,9604]"/>
  <match src="identifier: D256 [8193,8197]" dest="identifier: D256 [8757,8761]"/>
  <match src="string_literal [53373,53410]" dest="string_literal [66156,66187]"/>
  <match src="primitive_type [30715,30722]" dest="primitive_type [44093,44100]"/>
  <match src="member_expression [94723,94759]" dest="member_expression [35483,35519]"/>
  <match src="parameter [88936,88943]" dest="parameter [29696,29703]"/>
  <match src="): ) [35989,35990]" dest="): ) [49367,49368]"/>
  <match src="{: { [42675,42676]" dest="{: { [24779,24780]"/>
  <match src="external: external [64996,65004]" dest="external: external [75015,75023]"/>
  <match src="identifier: reason [98621,98627]" dest="identifier: reason [39381,39387]"/>
  <match src="comment: /**      * @dev Moves `amount` tokens from the caller's account to `recipient`.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [11744,11953]" dest="comment: /**      * @dev Moves `amount` tokens from the caller's account to `recipient`.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [16682,16891]"/>
  <match src="member_expression [76332,76349]" dest="member_expression [64610,64627]"/>
  <match src="call_argument [100481,100513]" dest="call_argument [62838,62870]"/>
  <match src="identifier: dollar [101680,101686]" dest="identifier: dollar [51108,51114]"/>
  <match src="primitive_type [90265,90272]" dest="primitive_type [31025,31032]"/>
  <match src="}: } [89345,89346]" dest="}: } [30105,30106]"/>
  <match src="): ) [42462,42463]" dest="): ) [24566,24567]"/>
  <match src="member_expression [75813,75823]" dest="member_expression [64386,64396]"/>
  <match src="visibility [76290,76298]" dest="visibility [72778,72786]"/>
  <match src="block_statement [35227,35596]" dest="block_statement [48605,48974]"/>
  <match src="address: address [75411,75418]" dest="address: address [74653,74660]"/>
  <match src="string [86465,86471]" dest="string [27225,27231]"/>
  <match src="external: external [86847,86855]" dest="external: external [27607,27615]"/>
  <match src="bytes32: bytes32 [31478,31485]" dest="bytes32: bytes32 [44856,44863]"/>
  <match src="identifier: account [97940,97947]" dest="identifier: account [38700,38707]"/>
  <match src="external: external [76571,76579]" dest="external: external [64824,64832]"/>
  <match src="): ) [94124,94125]" dest="): ) [34884,34885]"/>
  <match src="parenthesized_expression [28996,29430]" dest="parenthesized_expression [42374,42808]"/>
  <match src="}: } [5930,5931]" dest="}: } [6494,6495]"/>
  <match src="parameter [8931,8947]" dest="parameter [9495,9511]"/>
  <match src="}: } [7394,7395]" dest="}: } [7958,7959]"/>
  <match src="member_expression [94983,94998]" dest="member_expression [35743,35758]"/>
  <match src="function_body [43660,43701]" dest="function_body [25764,25805]"/>
  <match src="(: ( [78255,78256]" dest="(: ( [71302,71303]"/>
  <match src="(: ( [48252,48253]" dest="(: ( [58716,58717]"/>
  <match src="=: = [1991,1992]" dest="=: = [2555,2556]"/>
  <match src="pure: pure [42652,42656]" dest="pure: pure [24756,24760]"/>
  <match src="function_definition [1631,2090]" dest="function_definition [2195,2654]"/>
  <match src="event_paramater [75492,75505]" dest="event_paramater [64005,64018]"/>
  <match src="pure: pure [7130,7134]" dest="pure: pure [7694,7698]"/>
  <match src="primitive_type [94188,94194]" dest="primitive_type [34948,34954]"/>
  <match src="address: address [19719,19726]" dest="address: address [58235,58242]"/>
  <match src="identifier: length [34060,34066]" dest="identifier: length [47438,47444]"/>
  <match src="): ) [88298,88299]" dest="): ) [29058,29059]"/>
  <match src="variable_declaration [78361,78377]" dest="variable_declaration [56206,56228]"/>
  <match src=",: , [9808,9809]" dest=",: , [10372,10373]"/>
  <match src="member_expression [93649,93674]" dest="member_expression [34409,34434]"/>
  <match src="string_literal [78162,78191]" dest="string_literal [72877,72892]"/>
  <match src="identifier: candidate [98798,98807]" dest="identifier: candidate [39558,39567]"/>
  <match src="function_body [100445,100635]" dest="function_body [62802,62992]"/>
  <match src="function: function [68503,68511]" dest="function: function [60254,60262]"/>
  <match src="state_mutability [10046,10050]" dest="state_mutability [10610,10614]"/>
  <match src="identifier: FILE [61250,61254]" dest="identifier: FILE [73250,73254]"/>
  <match src="number_literal: 1 [52423,52424]" dest="number_literal: 1 [13672,13673]"/>
  <match src="): ) [78832,78833]" dest="): ) [72729,72730]"/>
  <match src="primitive_type [45272,45279]" dest="primitive_type [51369,51376]"/>
  <match src="state_mutability [88096,88100]" dest="state_mutability [28856,28860]"/>
  <match src="uint256: uint256 [87487,87494]" dest="uint256: uint256 [28247,28254]"/>
  <match src="): ) [90447,90448]" dest="): ) [31207,31208]"/>
  <match src="identifier: input [33015,33020]" dest="identifier: input [46393,46398]"/>
  <match src="(: ( [61668,61669]" dest="(: ( [61466,61467]"/>
  <match src="user_defined_type [8931,8935]" dest="user_defined_type [9495,9499]"/>
  <match src="identifier: Account [100047,100054]" dest="identifier: Account [62404,62411]"/>
  <match src="type_name [41887,41894]" dest="type_name [23991,23998]"/>
  <match src="type_name [46985,46992]" dest="type_name [19683,19690]"/>
  <match src="type_name [88936,88943]" dest="type_name [29696,29703]"/>
  <match src="return: return [44028,44034]" dest="return: return [26132,26138]"/>
  <match src="string [53733,53758]" dest="string [65686,65717]"/>
  <match src="returns: returns [87795,87802]" dest="returns: returns [28555,28562]"/>
  <match src="struct: struct [5730,5736]" dest="struct: struct [6294,6300]"/>
  <match src="string_literal [77064,77099]" dest="string_literal [65199,65237]"/>
  <match src="(: ( [28148,28149]" dest="(: ( [41526,41527]"/>
  <match src="parameter [95173,95193]" dest="parameter [35933,35953]"/>
  <match src="enum_value: Fluid [81652,81657]" dest="enum_value: Fluid [21274,21279]"/>
  <match src="event_definition [75622,75712]" dest="event_definition [71092,71157]"/>
  <match src="): ) [47080,47081]" dest="): ) [19778,19779]"/>
  <match src="function_definition [90095,90232]" dest="function_definition [30855,30992]"/>
  <match src=",: , [75505,75506]" dest=",: , [64018,64019]"/>
  <match src="): ) [88368,88369]" dest="): ) [29128,29129]"/>
  <match src="identifier: require [1309,1316]" dest="identifier: require [1873,1880]"/>
  <match src="visibility [43885,43893]" dest="visibility [25989,25997]"/>
  <match src="type_name [94897,94904]" dest="type_name [35657,35664]"/>
  <match src="identifier: value [76241,76246]" dest="identifier: value [64776,64781]"/>
  <match src="identifier: add [98934,98937]" dest="identifier: add [39694,39697]"/>
  <match src="parameter [75735,75748]" dest="parameter [64299,64312]"/>
  <match src="number_literal: 32 [36172,36174]" dest="number_literal: 32 [49550,49552]"/>
  <match src="(: ( [91698,91699]" dest="(: ( [32458,32459]"/>
  <match src="identifier: value [13995,14000]" dest="identifier: value [18933,18938]"/>
  <match src="type_name [35714,35719]" dest="type_name [49092,49097]"/>
  <match src="returns: returns [43642,43649]" dest="returns: returns [25746,25753]"/>
  <match src="): ) [31250,31251]" dest="): ) [44628,44629]"/>
  <match src="): ) [90028,90029]" dest="): ) [30788,30789]"/>
  <match src="identifier: candidates [97759,97769]" dest="identifier: candidates [38519,38529]"/>
  <match src="uint256: uint256 [6489,6496]" dest="uint256: uint256 [7053,7060]"/>
  <match src="): ) [34722,34723]" dest="): ) [48100,48101]"/>
  <match src="function_definition [86394,86478]" dest="function_definition [27154,27238]"/>
  <match src="return: return [3513,3519]" dest="return: return [4077,4083]"/>
  <match src="(: ( [94613,94614]" dest="(: ( [35373,35374]"/>
  <match src="}: } [44049,44050]" dest="}: } [26153,26154]"/>
  <match src="call_argument [29819,29825]" dest="call_argument [43197,43203]"/>
  <match src="comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      */ [2096,2540]" dest="comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      */ [2660,3104]"/>
  <match src="identifier: _state [96828,96834]" dest="identifier: _state [37588,37594]"/>
  <match src="{: { [87089,87090]" dest="{: { [27849,27850]"/>
  <match src="primitive_type [60687,60694]" dest="primitive_type [74607,74614]"/>
  <match src="state_mutability [51016,51020]" dest="state_mutability [15723,15727]"/>
  <match src="(: ( [5994,5995]" dest="(: ( [6558,6559]"/>
  <match src="function_definition [6631,6815]" dest="function_definition [7195,7379]"/>
  <match src="identifier: value [76362,76367]" dest="identifier: value [64640,64645]"/>
  <match src=".: . [94554,94555]" dest=".: . [35314,35315]"/>
  <match src="identifier: coupons [95556,95563]" dest="identifier: coupons [36316,36323]"/>
  <match src="(: ( [25930,25931]" dest="(: ( [72159,72160]"/>
  <match src="call_argument [76418,76423]" dest="call_argument [66062,66067]"/>
  <match src="{: { [15758,15759]" dest="{: { [55033,55034]"/>
  <match src="type_name [50322,50329]" dest="type_name [15029,15036]"/>
  <match src="(: ( [21113,21114]" dest="(: ( [57707,57708]"/>
  <match src="primitive_type [43908,43915]" dest="primitive_type [26012,26019]"/>
  <match src="revert_statement [32219,32736]" dest="revert_statement [45597,46114]"/>
  <match src="address: address [49245,49252]" dest="address: address [13952,13959]"/>
  <match src="primitive_type [81856,81863]" dest="primitive_type [21478,21485]"/>
  <match src="type_name [87385,87392]" dest="type_name [28145,28152]"/>
  <match src="): ) [94572,94573]" dest="): ) [35332,35333]"/>
  <match src="): ) [8021,8022]" dest="): ) [8585,8586]"/>
  <match src="(: ( [35761,35762]" dest="(: ( [49139,49140]"/>
  <match src="expression_statement [93917,93979]" dest="expression_statement [34677,34739]"/>
  <match src=",: , [78148,78149]" dest=",: , [72863,72864]"/>
  <match src="identifier: self [7196,7200]" dest="identifier: self [7760,7764]"/>
  <match src="return_type_definition [43156,43173]" dest="return_type_definition [25260,25277]"/>
  <match src="visibility [15900,15907]" dest="visibility [13733,13740]"/>
  <match src="variable_declaration_statement [33433,33456]" dest="variable_declaration_statement [46811,46834]"/>
  <match src="=: = [88149,88150]" dest="=: = [28909,28910]"/>
  <match src="(: ( [96294,96295]" dest="(: ( [37054,37055]"/>
  <match src="(: ( [1289,1290]" dest="(: ( [1853,1854]"/>
  <match src="call_argument [78144,78148]" dest="call_argument [72859,72863]"/>
  <match src="[: [ [90198,90199]" dest="[: [ [30958,30959]"/>
  <match src="identifier: accounts [94730,94738]" dest="identifier: accounts [35490,35498]"/>
  <match src="uint256: uint256 [33798,33805]" dest="uint256: uint256 [47176,47183]"/>
  <match src="call_expression [73695,73735]" dest="call_expression [54252,54288]"/>
  <match src="member_expression [98914,98937]" dest="member_expression [39674,39697]"/>
  <match src="internal: internal [7297,7305]" dest="internal: internal [7861,7869]"/>
  <match src="array_access [95592,95612]" dest="array_access [36352,36372]"/>
  <match src="memory: memory [9087,9093]" dest="memory: memory [9651,9657]"/>
  <match src="): ) [34562,34563]" dest="): ) [47940,47941]"/>
  <match src="uint256: uint256 [97051,97058]" dest="uint256: uint256 [37811,37818]"/>
  <match src="call_argument [28674,28682]" dest="call_argument [42052,42060]"/>
  <match src="function_body [76044,76254]" dest="function_body [64600,64789]"/>
  <match src="identifier: abi [28457,28460]" dest="identifier: abi [41835,41838]"/>
  <match src="bytes32: bytes32 [30715,30722]" dest="bytes32: bytes32 [44093,44100]"/>
  <match src="type_name [7657,7664]" dest="type_name [8221,8228]"/>
  <match src="=: = [94086,94087]" dest="=: = [34846,34847]"/>
  <match src="uint256: uint256 [94172,94179]" dest="uint256: uint256 [34932,34939]"/>
  <match src="call_argument [94835,94841]" dest="call_argument [35595,35601]"/>
  <match src="number_literal: 0x2c20 [27609,27615]" dest="number_literal: 0x2c20 [40987,40993]"/>
  <match src="function: function [84433,84441]" dest="function: function [69108,69116]"/>
  <match src="address: address [91433,91440]" dest="address: address [32193,32200]"/>
  <match src="type_name [70054,70061]" dest="type_name [74541,74548]"/>
  <match src="returns: returns [58970,58977]" dest="returns: returns [20562,20569]"/>
  <match src="function_definition [49425,49475]" dest="function_definition [14132,14182]"/>
  <match src="member_expression [8326,8340]" dest="member_expression [8890,8904]"/>
  <match src="external: external [13500,13508]" dest="external: external [18438,18446]"/>
  <match src="returns: returns [5871,5878]" dest="returns: returns [6435,6442]"/>
  <match src="function: function [43487,43495]" dest="function: function [25591,25599]"/>
  <match src="primitive_type [34940,34945]" dest="primitive_type [48318,48323]"/>
  <match src="[: [ [88977,88978]" dest="[: [ [29737,29738]"/>
  <match src=",: , [6366,6367]" dest=",: , [6930,6931]"/>
  <match src="returns: returns [59697,59704]" dest="returns: returns [73572,73579]"/>
  <match src="return_statement [87404,87433]" dest="return_statement [28164,28193]"/>
  <match src="number_literal: 10 [34559,34561]" dest="number_literal: 10 [47937,47939]"/>
  <match src="view: view [87267,87271]" dest="view: view [28027,28031]"/>
  <match src="primitive_type [95157,95164]" dest="primitive_type [35917,35924]"/>
  <match src="): ) [13522,13523]" dest="): ) [18460,18461]"/>
  <match src="}: } [91406,91407]" dest="}: } [32166,32167]"/>
  <match src="=: = [63157,63158]" dest="=: = [60820,60821]"/>
  <match src="call_argument [31660,31940]" dest="call_argument [45038,45318]"/>
  <match src="string [21236,21272]" dest="string [51900,51944]"/>
  <match src="(: ( [7327,7328]" dest="(: ( [7891,7892]"/>
  <match src="parameter [49915,49919]" dest="parameter [14622,14626]"/>
  <match src="(: ( [1643,1644]" dest="(: ( [2207,2208]"/>
  <match src="member_expression [8876,8886]" dest="member_expression [9440,9450]"/>
  <match src="]: ] [98713,98714]" dest="]: ] [39473,39474]"/>
  <match src="address: address [98572,98579]" dest="address: address [39332,39339]"/>
  <match src="]: ] [98511,98512]" dest="]: ] [39271,39272]"/>
  <match src="call_argument [73636,73646]" dest="call_argument [72603,72613]"/>
  <match src="): ) [75965,75966]" dest="): ) [64513,64514]"/>
  <match src="number_literal: 0 [34314,34315]" dest="number_literal: 0 [47692,47693]"/>
  <match src="): ) [7111,7112]" dest="): ) [7675,7676]"/>
  <match src="array_access [98090,98118]" dest="array_access [38850,38878]"/>
  <match src="internal: internal [98809,98817]" dest="internal: internal [39569,39577]"/>
  <match src="(: ( [35899,35900]" dest="(: ( [49277,49278]"/>
  <match src="uint256: uint256 [64136,64143]" dest="uint256: uint256 [56824,56831]"/>
  <match src="identifier: account [88273,88280]" dest="identifier: account [29033,29040]"/>
  <match src="parameter [8987,8991]" dest="parameter [9551,9555]"/>
  <match src="function_body [93205,93234]" dest="function_body [33965,33994]"/>
  <match src="parameter [97036,97049]" dest="parameter [37796,37809]"/>
  <match src="identifier: token0 [48551,48557]" dest="identifier: from [55508,55512]"/>
  <match src="*: * [35305,35306]" dest="*: * [48683,48684]"/>
  <match src="assembly_statement [92214,92266]" dest="assembly_statement [32974,33026]"/>
  <match src="number_literal: 0 [35008,35009]" dest="number_literal: 0 [48386,48387]"/>
  <match src="call_expression [96289,96296]" dest="call_expression [37049,37056]"/>
  <match src="(: ( [23123,23124]" dest="(: ( [51634,51635]"/>
  <match src="type_name [91983,91990]" dest="type_name [32743,32750]"/>
  <match src="identifier: input [33992,33997]" dest="identifier: input [47370,47375]"/>
  <match src="event_paramater [48559,48581]" dest="event_paramater [55514,55532]"/>
  <match src="identifier: outstanding [97556,97567]" dest="identifier: outstanding [38316,38327]"/>
  <match src="comment: /*     Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [44054,44682]" dest="comment: /*     Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [19784,20412]"/>
  <match src="(: ( [29466,29467]" dest="(: ( [42844,42845]"/>
  <match src="primitive_type [63685,63692]" dest="primitive_type [64904,64911]"/>
  <match src="parameter [95422,95437]" dest="parameter [36182,36197]"/>
  <match src="[: [ [97540,97541]" dest="[: [ [38300,38301]"/>
  <match src="function: function [35632,35640]" dest="function: function [49010,49018]"/>
  <match src="state_variable_declaration [41604,41688]" dest="state_variable_declaration [23708,23792]"/>
  <match src="identifier: BOOTSTRAPPING_PRICE [43067,43086]" dest="identifier: BOOTSTRAPPING_PRICE [25171,25190]"/>
  <match src="primitive_type [97644,97651]" dest="primitive_type [38404,38411]"/>
  <match src="memory: memory [49351,49357]" dest="memory: memory [14058,14064]"/>
  <match src="identifier: redeemable [94272,94282]" dest="identifier: redeemable [35032,35042]"/>
  <match src="address: address [13708,13715]" dest="address: address [18646,18653]"/>
  <match src="member_expression [77402,77434]" dest="member_expression [65443,65485]"/>
  <match src="(: ( [7656,7657]" dest="(: ( [8220,8221]"/>
  <match src="assignment_expression [35046,35085]" dest="assignment_expression [48424,48463]"/>
  <match src="uint256: uint256 [82170,82177]" dest="uint256: uint256 [21792,21799]"/>
  <match src="&quot;: &quot; [48396,48397]" dest="&quot;: &quot; [58790,58791]"/>
  <match src="state_mutability [31564,31568]" dest="state_mutability [44942,44946]"/>
  <match src="identifier: ORACLE_POOL_RATIO [42346,42363]" dest="identifier: ORACLE_POOL_RATIO [24450,24467]"/>
  <match src="call_argument [35018,35035]" dest="call_argument [48396,48413]"/>
  <match src="identifier: eliminateOutstandingCoupons [97228,97255]" dest="identifier: eliminateOutstandingCoupons [37988,38015]"/>
  <match src="identifier: candidate [91441,91450]" dest="identifier: candidate [32201,32210]"/>
  <match src="function_body [93096,93125]" dest="function_body [33856,33885]"/>
  <match src="(: ( [72333,72334]" dest="(: ( [55965,55966]"/>
  <match src="(: ( [86712,86713]" dest="(: ( [27472,27473]"/>
  <match src="primitive_type [73185,73192]" dest="primitive_type [52318,52325]"/>
  <match src="parameter [9265,9269]" dest="parameter [9829,9833]"/>
  <match src="type_name [95821,95828]" dest="type_name [36581,36588]"/>
  <match src="variable_declaration_statement [33980,33998]" dest="variable_declaration_statement [47358,47376]"/>
  <match src="comment: // each byte takes two characters [36195,36228]" dest="comment: // each byte takes two characters [49573,49606]"/>
  <match src="identifier: candidate [91251,91260]" dest="identifier: candidate [32011,32020]"/>
  <match src=",: , [95985,95986]" dest=",: , [36745,36746]"/>
  <match src="): ) [12033,12034]" dest="): ) [16971,16972]"/>
  <match src="comment: // each byte takes two characters [35241,35274]" dest="comment: // each byte takes two characters [48619,48652]"/>
  <match src="primitive_type [51315,51319]" dest="primitive_type [16022,16026]"/>
  <match src="primitive_type [89634,89641]" dest="primitive_type [30394,30401]"/>
  <match src=",: , [45230,45231]" dest=",: , [51367,51368]"/>
  <match src="identifier: _state [95635,95641]" dest="identifier: _state [36395,36401]"/>
  <match src="identifier: stringify [30545,30554]" dest="identifier: stringify [43923,43932]"/>
  <match src="): ) [95373,95374]" dest="): ) [36133,36134]"/>
  <match src="emit: emit [76215,76219]" dest="emit: emit [64750,64754]"/>
  <match src="if_statement [31583,31983]" dest="if_statement [44961,45361]"/>
  <match src="identifier: value [7933,7938]" dest="identifier: value [8497,8502]"/>
  <match src="identifier: lessPhantom [77388,77399]" dest="identifier: totalRedeemable [56342,56357]"/>
  <match src="member_expression [86762,86783]" dest="member_expression [27522,27543]"/>
  <match src="identifier: start [91262,91267]" dest="identifier: start [32022,32027]"/>
  <match src="identifier: amount [95086,95092]" dest="identifier: amount [35846,35852]"/>
  <match src="call_expression [89903,90082]" dest="call_expression [30663,30842]"/>
  <match src="function: function [12310,12318]" dest="function: function [17248,17256]"/>
  <match src="returns: returns [6721,6728]" dest="returns: returns [7285,7292]"/>
  <match src="}: } [93696,93697]" dest="}: } [34456,34457]"/>
  <match src="identifier: value [6593,6598]" dest="identifier: value [7157,7162]"/>
  <match src="identifier: candidate [97770,97779]" dest="identifier: candidate [38530,38539]"/>
  <match src="indexed: indexed [75362,75369]" dest="indexed: indexed [63834,63841]"/>
  <match src="identifier: a [6365,6366]" dest="identifier: a [6929,6930]"/>
  <match src="parameter [28880,28896]" dest="parameter [42258,42274]"/>
  <match src="call_argument [29259,29267]" dest="call_argument [42637,42645]"/>
  <match src="variable_declaration_statement [36153,36167]" dest="variable_declaration_statement [49531,49545]"/>
  <match src="{: { [7547,7548]" dest="{: { [8111,8112]"/>
  <match src=",: , [100351,100352]" dest=",: , [62708,62709]"/>
  <match src="(: ( [417,418]" dest="(: ( [981,982]"/>
  <match src="type_name [36153,36160]" dest="type_name [49531,49538]"/>
  <match src="identifier: isZero [9473,9479]" dest="identifier: isZero [10037,10043]"/>
  <match src="uint256: uint256 [63320,63327]" dest="uint256: uint256 [65426,65433]"/>
  <match src="call_argument [31802,31808]" dest="call_argument [45180,45186]"/>
  <match src="primitive_type [34914,34919]" dest="primitive_type [48292,48297]"/>
  <match src="visibility [61861,61868]" dest="visibility [73559,73566]"/>
  <match src="if: if [88410,88412]" dest="if: if [29170,29172]"/>
  <match src="primitive_type [43541,43548]" dest="primitive_type [25645,25652]"/>
  <match src="identifier: FOUR_BIT_MASK [27731,27744]" dest="identifier: FOUR_BIT_MASK [41109,41122]"/>
  <match src="type_cast_expression [27979,28196]" dest="type_cast_expression [41357,41574]"/>
  <match src="variable_declaration_statement [78360,78419]" dest="variable_declaration_statement [56205,56279]"/>
  <match src="array_access [35046,35055]" dest="array_access [48424,48433]"/>
  <match src="(: ( [8120,8121]" dest="(: ( [8684,8685]"/>
  <match src="return: return [43427,43433]" dest="return: return [25531,25537]"/>
  <match src="=: = [97568,97569]" dest="=: = [38328,38329]"/>
  <match src="memory: memory [8481,8487]" dest="memory: memory [9045,9051]"/>
  <match src="address: address [30761,30768]" dest="address: address [44139,44146]"/>
  <match src="identifier: reserve1 [50933,50941]" dest="identifier: reserve1 [15640,15648]"/>
  <match src="}: } [61820,61821]" dest="}: } [61519,61520]"/>
  <match src="bool: bool [30035,30039]" dest="bool: bool [43413,43417]"/>
  <match src="identifier: period [97671,97677]" dest="identifier: period [38431,38437]"/>
  <match src="call_expression [77988,78001]" dest="call_expression [53827,53840]"/>
  <match src="pure: pure [30166,30170]" dest="pure: pure [43544,43548]"/>
  <match src=".: . [89697,89698]" dest=".: . [30457,30458]"/>
  <match src="identifier: _state [83098,83104]" dest="identifier: _state [22720,22726]"/>
  <match src=".: . [89995,89996]" dest=".: . [30755,30756]"/>
  <match src="memory: memory [8426,8432]" dest="memory: memory [8990,8996]"/>
  <match src="type_name [28321,28328]" dest="type_name [41699,41706]"/>
  <match src="type_name [34704,34711]" dest="type_name [48082,48089]"/>
  <match src="member_expression [73695,73720]" dest="member_expression [54252,54265]"/>
  <match src="return: return [90178,90184]" dest="return: return [30938,30944]"/>
  <match src="identifier: current [96841,96848]" dest="identifier: current [37601,37608]"/>
  <match src=".: . [43403,43404]" dest=".: . [25507,25508]"/>
  <match src="return_type_definition [86424,86447]" dest="return_type_definition [27184,27207]"/>
  <match src="&quot;: &quot; [53757,53758]" dest="&quot;: &quot; [65716,65717]"/>
  <match src="if_statement [30185,30661]" dest="if_statement [43563,44039]"/>
  <match src="(: ( [21227,21228]" dest="(: ( [51891,51892]"/>
  <match src="identifier: onlyFrozen [76299,76309]" dest="identifier: onlyFrozenOrFluid [65846,65863]"/>
  <match src="parameter [21856,21870]" dest="parameter [57949,57963]"/>
  <match src="view: view [50833,50837]" dest="view: view [15540,15544]"/>
  <match src="parameter [47923,47938]" dest="parameter [51056,51071]"/>
  <match src="address: address [93037,93044]" dest="address: address [33797,33804]"/>
  <match src="identifier: State [82326,82331]" dest="identifier: State [21948,21953]"/>
  <match src="identifier: candidate [98464,98473]" dest="identifier: candidate [39224,39233]"/>
  <match src="visibility [6699,6707]" dest="visibility [7263,7271]"/>
  <match src="memory: memory [9232,9238]" dest="memory: memory [9796,9802]"/>
  <match src="identifier: decrementBalanceOf [94595,94613]" dest="identifier: decrementBalanceOf [35355,35373]"/>
  <match src="using_directive [5573,5600]" dest="using_directive [6137,6164]"/>
  <match src="identifier: epoch [97200,97205]" dest="identifier: epoch [37960,37965]"/>
  <match src=",: , [28683,28684]" dest=",: , [42061,42062]"/>
  <match src="{: { [32184,32185]" dest="{: { [45562,45563]"/>
  <match src="call_argument [76350,76360]" dest="call_argument [64628,64638]"/>
  <match src="identifier: bonded [87322,87328]" dest="identifier: bonded [28082,28088]"/>
  <match src="view: view [91593,91597]" dest="view: view [32353,32357]"/>
  <match src="identifier: mint [73716,73720]" dest="identifier: mint [54261,54265]"/>
  <match src="}: } [35625,35626]" dest="}: } [49003,49004]"/>
  <match src="revert: revert [29625,29631]" dest="revert: revert [43003,43009]"/>
  <match src="identifier: incrementRejectFor [98373,98391]" dest="identifier: incrementRejectFor [39133,39151]"/>
  <match src="identifier: epoch [95968,95973]" dest="identifier: epoch [36728,36733]"/>
  <match src="): ) [82461,82462]" dest="): ) [22083,22084]"/>
  <match src="{: { [6034,6035]" dest="{: { [6598,6599]"/>
  <match src="identifier: value [43448,43453]" dest="identifier: value [25552,25557]"/>
  <match src="call_argument [96100,96106]" dest="call_argument [36860,36866]"/>
  <match src="expression_statement [21184,21274]" dest="expression_statement [51867,51946]"/>
  <match src="call_expression [84838,84870]" dest="call_expression [69513,69545]"/>
  <match src="number_literal: 64 [36478,36480]" dest="number_literal: 64 [49856,49858]"/>
  <match src="function: function [91149,91157]" dest="function: function [31909,31917]"/>
  <match src="{: { [95204,95205]" dest="{: { [35964,35965]"/>
  <match src=".: . [86116,86117]" dest=".: . [26876,26877]"/>
  <match src="using: using [92946,92951]" dest="using: using [33706,33711]"/>
  <match src="}: } [90799,90800]" dest="}: } [31559,31560]"/>
  <match src="identifier: IMPLEMENTATION_SLOT [84148,84167]" dest="identifier: IMPLEMENTATION_SLOT [68823,68842]"/>
  <match src="constant: constant [42273,42281]" dest="constant: constant [24377,24385]"/>
  <match src="identifier: LPAREN [27645,27651]" dest="identifier: LPAREN [41023,41029]"/>
  <match src="(: ( [318,319]" dest="(: ( [882,883]"/>
  <match src="return_type_definition [1680,1697]" dest="return_type_definition [2244,2261]"/>
  <match src="}: } [43700,43701]" dest="}: } [25804,25805]"/>
  <match src="identifier: amount [93739,93745]" dest="identifier: amount [34499,34505]"/>
  <match src="type_name [21856,21863]" dest="type_name [57949,57956]"/>
  <match src="{: { [30862,30863]" dest="{: { [44240,44241]"/>
  <match src="visibility [89373,89379]" dest="visibility [30133,30139]"/>
  <match src="identifier: _state [94257,94263]" dest="identifier: _state [35017,35023]"/>
  <match src="return: return [43670,43676]" dest="return: return [25774,25780]"/>
  <match src="uint256: uint256 [66080,66087]" dest="uint256: uint256 [59877,59884]"/>
  <match src="primitive_type [49245,49252]" dest="primitive_type [13952,13959]"/>
  <match src="identifier: candidate [91854,91863]" dest="identifier: candidate [32614,32623]"/>
  <match src="type_name [82116,82123]" dest="type_name [21738,21745]"/>
  <match src="type_name [75354,75361]" dest="type_name [63826,63833]"/>
  <match src="uint: uint [50684,50688]" dest="uint: uint [15391,15395]"/>
  <match src="string: string [4639,4645]" dest="string: string [5203,5209]"/>
  <match src="primitive_type [81982,81989]" dest="primitive_type [21604,21611]"/>
  <match src="return_type_definition [64127,64144]" dest="return_type_definition [56815,56832]"/>
  <match src="member_expression [95248,95263]" dest="member_expression [36008,36023]"/>
  <match src="event_paramater [75694,75710]" dest="event_paramater [70966,70980]"/>
  <match src="type_name [82724,82731]" dest="type_name [22346,22353]"/>
  <match src="uint256: uint256 [5592,5599]" dest="uint256: uint256 [6156,6163]"/>
  <match src="member_expression [95248,95283]" dest="member_expression [36008,36043]"/>
  <match src="(: ( [30478,30479]" dest="(: ( [43856,43857]"/>
  <match src=".: . [98096,98097]" dest=".: . [38856,38857]"/>
  <match src="function_definition [23046,23147]" dest="function_definition [51540,51771]"/>
  <match src="): ) [95193,95194]" dest="): ) [35953,35954]"/>
  <match src="): ) [98740,98741]" dest="): ) [39500,39501]"/>
  <match src="pure: pure [8973,8977]" dest="pure: pure [9537,9541]"/>
  <match src="call_argument [31308,31327]" dest="call_argument [44686,44705]"/>
  <match src="string: string [84855,84861]" dest="string: string [69530,69536]"/>
  <match src="identifier: _state [96251,96257]" dest="identifier: _state [37011,37017]"/>
  <match src="pragma_directive [25,58]" dest="pragma_directive [25,58]"/>
  <match src="returns: returns [80393,80400]" dest="returns: returns [67215,67222]"/>
  <match src="state_variable_declaration [83084,83105]" dest="state_variable_declaration [22706,22727]"/>
  <match src="yul_path [33595,33601]" dest="yul_path [46973,46979]"/>
  <match src="identifier: i [7679,7680]" dest="identifier: i [8243,8244]"/>
  <match src="pure: pure [9251,9255]" dest="pure: pure [9815,9819]"/>
  <match src="returns: returns [50838,50845]" dest="returns: returns [15545,15552]"/>
  <match src="comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      * - Addition cannot overflow.      */ [84,301]" dest="comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      * - Addition cannot overflow.      */ [648,865]"/>
  <match src="identifier: candidates [91372,91382]" dest="identifier: candidates [32132,32142]"/>
  <match src="member_expression [69095,69141]" dest="member_expression [71779,71812]"/>
  <match src=".: . [95347,95348]" dest=".: . [36107,36108]"/>
  <match src="): ) [77845,77846]" dest="): ) [65759,65760]"/>
  <match src="identifier: sub [98722,98725]" dest="identifier: sub [39482,39485]"/>
  <match src="block_statement [88681,88734]" dest="block_statement [29441,29494]"/>
  <match src="comment: // 5% [42369,42374]" dest="comment: // 5% [24473,24478]"/>
  <match src="(: ( [51029,51030]" dest="(: ( [15736,15737]"/>
  <match src=".: . [90347,90348]" dest=".: . [31107,31108]"/>
  <match src="type_name [93568,93575]" dest="type_name [34328,34335]"/>
  <match src="function: function [746,754]" dest="function: function [1310,1318]"/>
  <match src="identifier: amount [22402,22408]" dest="identifier: amount [58623,58629]"/>
  <match src="type_name [13987,13994]" dest="type_name [18925,18932]"/>
  <match src="expression_statement [33148,33154]" dest="expression_statement [46526,46532]"/>
  <match src="): ) [87392,87393]" dest="): ) [28152,28153]"/>
  <match src="identifier: _transfer [17668,17677]" dest="identifier: decrementBalanceOfCoupons [58482,58507]"/>
  <match src="member_expression [93492,93513]" dest="member_expression [34252,34273]"/>
  <match src="&quot;: &quot; [22535,22536]" dest="&quot;: &quot; [57241,57242]"/>
  <match src="public: public [88915,88921]" dest="public: public [29675,29681]"/>
  <match src="primitive_type [36852,36856]" dest="primitive_type [50230,50234]"/>
  <match src="user_defined_type [6540,6544]" dest="user_defined_type [7104,7108]"/>
  <match src="identifier: INITIAL_STAKE_MULTIPLE [41812,41834]" dest="identifier: INITIAL_STAKE_MULTIPLE [23916,23938]"/>
  <match src="identifier: staged [95008,95014]" dest="identifier: staged [35768,35774]"/>
  <match src="string: string [95852,95858]" dest="string: string [36612,36618]"/>
  <match src="&quot;: &quot; [17791,17792]" dest="&quot;: &quot; [65601,65602]"/>
  <match src="comment: // bytes32 are &quot;0x&quot; followed by 32 bytes of data which take up 2 characters each [35779,35859]" dest="comment: // bytes32 are &quot;0x&quot; followed by 32 bytes of data which take up 2 characters each [49157,49237]"/>
  <match src=".: . [97118,97119]" dest=".: . [37878,37879]"/>
  <match src="assignment_expression [35437,35447]" dest="assignment_expression [48815,48825]"/>
  <match src="{: { [27336,27337]" dest="{: { [40714,40715]"/>
  <match src="(: ( [75812,75813]" dest="(: ( [64385,64386]"/>
  <match src="uint256: uint256 [18302,18309]" dest="uint256: uint256 [11795,11802]"/>
  <match src="identifier: RPAREN [28709,28715]" dest="identifier: RPAREN [42087,42093]"/>
  <match src="identifier: outstandingCoupons [90104,90122]" dest="identifier: outstandingCoupons [30864,30882]"/>
  <match src=".: . [77048,77049]" dest=".: . [65183,65184]"/>
  <match src="}: } [81909,81910]" dest="}: } [21531,21532]"/>
  <match src="call_argument [85186,85203]" dest="call_argument [69861,69878]"/>
  <match src="identifier: length [34171,34177]" dest="identifier: length [47549,47555]"/>
  <match src="parameter [89394,89401]" dest="parameter [30154,30161]"/>
  <match src="identifier: sub [8337,8340]" dest="identifier: sub [8901,8904]"/>
  <match src="return_type_definition [93190,93204]" dest="return_type_definition [33950,33964]"/>
  <match src="external: external [49656,49664]" dest="external: external [14363,14371]"/>
  <match src="return_statement [91358,91401]" dest="return_statement [32118,32161]"/>
  <match src="parameter [330,339]" dest="parameter [894,903]"/>
  <match src="call_expression [28457,28737]" dest="call_expression [41835,42115]"/>
  <match src="identifier: ASCII_LOWER_EX [35069,35083]" dest="identifier: ASCII_LOWER_EX [48447,48461]"/>
  <match src="primitive_type [36756,36760]" dest="primitive_type [50134,50138]"/>
  <match src="function_body [87290,87335]" dest="function_body [28050,28095]"/>
  <match src="parameter [28275,28287]" dest="parameter [41653,41665]"/>
  <match src="function_body [7345,7403]" dest="function_body [7909,7967]"/>
  <match src="): ) [30881,30882]" dest="): ) [44259,44260]"/>
  <match src=".: . [75816,75817]" dest=".: . [64389,64390]"/>
  <match src="member_expression [94060,94085]" dest="member_expression [34820,34845]"/>
  <match src="type_name [41502,41509]" dest="type_name [23606,23613]"/>
  <match src="identifier: Decimal [60396,60403]" dest="identifier: Decimal [59633,59640]"/>
  <match src="call_expression [78914,78947]" dest="call_expression [53443,53476]"/>
  <match src="member_expression [94688,94720]" dest="member_expression [35448,35480]"/>
  <match src="return_type_definition [43387,43416]" dest="return_type_definition [25491,25520]"/>
  <match src=",: , [32099,32100]" dest=",: , [45477,45478]"/>
  <match src="member_expression [7629,7639]" dest="member_expression [8193,8203]"/>
  <match src="): ) [91480,91481]" dest="): ) [32240,32241]"/>
  <match src="): ) [30649,30650]" dest="): ) [44027,44028]"/>
  <match src="function: function [89053,89061]" dest="function: function [29813,29821]"/>
  <match src="(: ( [7867,7868]" dest="(: ( [8431,8432]"/>
  <match src="(: ( [91775,91776]" dest="(: ( [32535,32536]"/>
  <match src="bool: bool [13518,13522]" dest="bool: bool [18456,18460]"/>
  <match src="return: return [88955,88961]" dest="return: return [29715,29721]"/>
  <match src="(: ( [90739,90740]" dest="(: ( [31499,31500]"/>
  <match src="identifier: self [9298,9302]" dest="identifier: self [9862,9866]"/>
  <match src="function: function [42717,42725]" dest="function: function [24821,24829]"/>
  <match src="(: ( [4616,4617]" dest="(: ( [5180,5181]"/>
  <match src="pure: pure [42994,42998]" dest="pure: pure [25098,25102]"/>
  <match src="identifier: _state [97752,97758]" dest="identifier: _state [38512,38518]"/>
  <match src="return_statement [80936,80952]" dest="return_statement [67758,67774]"/>
  <match src="address: address [97644,97651]" dest="address: address [38404,38411]"/>
  <match src="view: view [87579,87583]" dest="view: view [28339,28343]"/>
  <match src="]: ] [98117,98118]" dest="]: ] [38877,38878]"/>
  <match src="{: { [87986,87987]" dest="{: { [28746,28747]"/>
  <match src=".: . [6794,6795]" dest=".: . [7358,7359]"/>
  <match src="identifier: self [6855,6859]" dest="identifier: self [7419,7423]"/>
  <match src="identifier: _state [95248,95254]" dest="identifier: _state [36008,36014]"/>
  <match src="identifier: result [35955,35961]" dest="identifier: result [49333,49339]"/>
  <match src="identifier: require [21969,21976]" dest="identifier: require [57984,57991]"/>
  <match src="returns: returns [50898,50905]" dest="returns: returns [15605,15612]"/>
  <match src="function_definition [11670,11738]" dest="function_definition [16608,16676]"/>
  <match src="call_expression [28049,28073]" dest="call_expression [41427,41451]"/>
  <match src="(: ( [7186,7187]" dest="(: ( [7750,7751]"/>
  <match src="identifier: length [33595,33601]" dest="identifier: length [46973,46979]"/>
  <match src="): ) [33864,33865]" dest="): ) [47242,47243]"/>
  <match src="expression_statement [98051,98139]" dest="expression_statement [38811,38899]"/>
  <match src="(: ( [50881,50882]" dest="(: ( [15588,15589]"/>
  <match src="function_body [98818,99073]" dest="function_body [39578,39833]"/>
  <match src="member_expression [96851,96875]" dest="member_expression [37611,37635]"/>
  <match src="call_expression [68609,68622]" dest="call_expression [53480,53493]"/>
  <match src="return_type_definition [87071,87088]" dest="return_type_definition [27831,27848]"/>
  <match src="(: ( [90439,90440]" dest="(: ( [31199,31200]"/>
  <match src="type_name [7097,7104]" dest="type_name [7661,7668]"/>
  <match src="): ) [86410,86411]" dest="): ) [27170,27171]"/>
  <match src=",: , [77727,77728]" dest=",: , [72661,72662]"/>
  <match src="function: function [98151,98159]" dest="function: function [38911,38919]"/>
  <match src="uint256: uint256 [5650,5657]" dest="uint256: uint256 [6214,6221]"/>
  <match src="identifier: D256 [9064,9068]" dest="identifier: D256 [9628,9632]"/>
  <match src="type_name [76701,76708]" dest="type_name [57263,57270]"/>
  <match src="identifier: incrementTotalBonded [93412,93432]" dest="identifier: incrementTotalBonded [34172,34192]"/>
  <match src=".: . [97874,97875]" dest=".: . [38634,38635]"/>
  <match src="[: [ [95908,95909]" dest="[: [ [36668,36669]"/>
  <match src="address: address [92146,92153]" dest="address: address [32906,32913]"/>
  <match src=":: : [43819,43820]" dest=":: : [25923,25924]"/>
  <match src="primitive_type [75735,75742]" dest="primitive_type [64299,64306]"/>
  <match src="): ) [51380,51381]" dest="): ) [16087,16088]"/>
  <match src="type_name [12329,12336]" dest="type_name [17267,17274]"/>
  <match src="return_type_definition [42884,42901]" dest="return_type_definition [24988,25005]"/>
  <match src="call_expression [68858,68882]" dest="call_expression [73710,73728]"/>
  <match src="identifier: supply [94555,94561]" dest="identifier: supply [35315,35321]"/>
  <match src="type_name [22922,22929]" dest="type_name [11576,11583]"/>
  <match src="identifier: totalStaged [79130,79141]" dest="identifier: totalStaged [53498,53509]"/>
  <match src="return: return [10125,10131]" dest="return: return [10689,10695]"/>
  <match src="call_argument [30323,30327]" dest="call_argument [43701,43705]"/>
  <match src="event_paramater [75565,75578]" dest="event_paramater [63907,63920]"/>
  <match src="call_argument [45927,45931]" dest="call_argument [57207,57211]"/>
  <match src="parameter [49526,49530]" dest="parameter [14233,14237]"/>
  <match src=".: . [95641,95642]" dest=".: . [36401,36402]"/>
  <match src="primitive_type [42321,42328]" dest="primitive_type [24425,24432]"/>
  <match src="call_expression [75792,75846]" dest="call_expression [64364,64419]"/>
  <match src="type_name [7813,7817]" dest="type_name [8377,8381]"/>
  <match src="identifier: sender [50338,50344]" dest="identifier: sender [15045,15051]"/>
  <match src="comment: /* solium-disable-next-line security/no-modify-for-iter-var */ [33226,33288]" dest="comment: /* solium-disable-next-line security/no-modify-for-iter-var */ [46604,46666]"/>
  <match src="{: { [86448,86449]" dest="{: { [27208,27209]"/>
  <match src="block_statement [97398,97429]" dest="block_statement [38158,38189]"/>
  <match src="visibility [49737,49745]" dest="visibility [14444,14452]"/>
  <match src="{: { [63071,63072]" dest="{: { [60617,60618]"/>
  <match src="call_argument [7620,7641]" dest="call_argument [8184,8205]"/>
  <match src=".: . [87210,87211]" dest=".: . [27970,27971]"/>
  <match src="comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      * - Multiplication cannot overflow.      */ [1397,1626]" dest="comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      * - Multiplication cannot overflow.      */ [1961,2190]"/>
  <match src="expression_statement [76590,76611]" dest="expression_statement [64873,64894]"/>
  <match src=".: . [94830,94831]" dest=".: . [35590,35591]"/>
  <match src="identifier: sub [8117,8120]" dest="identifier: sub [8681,8684]"/>
  <match src="identifier: owner [86823,86828]" dest="identifier: owner [27583,27588]"/>
  <match src="state_mutability [2589,2593]" dest="state_mutability [3153,3157]"/>
  <match src="function_definition [8577,8775]" dest="function_definition [9141,9339]"/>
  <match src="type_name [50475,50479]" dest="type_name [15182,15186]"/>
  <match src="member_expression [96672,96724]" dest="member_expression [37432,37484]"/>
  <match src="uint256: uint256 [81982,81989]" dest="uint256: uint256 [21604,21611]"/>
  <match src="member_expression [79094,79111]" dest="member_expression [54048,54061]"/>
  <match src="memory: memory [5885,5891]" dest="memory: memory [6449,6455]"/>
  <match src="(: ( [43164,43165]" dest="(: ( [25268,25269]"/>
  <match src="(: ( [42892,42893]" dest="(: ( [24996,24997]"/>
  <match src="type_name [49624,49631]" dest="type_name [14331,14338]"/>
  <match src="): ) [35902,35903]" dest="): ) [49280,49281]"/>
  <match src="address: address [50153,50160]" dest="address: address [14860,14867]"/>
  <match src="visibility [41439,41446]" dest="visibility [23543,23550]"/>
  <match src="primitive_type [35972,35977]" dest="primitive_type [49350,49355]"/>
  <match src=",: , [75434,75435]" dest=",: , [74676,74677]"/>
  <match src="identifier: amount [20084,20090]" dest="identifier: amount [51206,51212]"/>
  <match src="return: return [8869,8875]" dest="return: return [9433,9439]"/>
  <match src=".: . [43807,43808]" dest=".: . [25911,25912]"/>
  <match src="call_argument [76523,76528]" dest="call_argument [65296,65301]"/>
  <match src=".: . [95315,95316]" dest=".: . [36075,36076]"/>
  <match src="++: ++ [34066,34068]" dest="++: ++ [47444,47446]"/>
  <match src="number_literal: 0 [89512,89513]" dest="number_literal: 0 [30272,30273]"/>
  <match src="}: } [6048,6049]" dest="}: } [6612,6613]"/>
  <match src="block_statement [98996,99067]" dest="block_statement [39756,39827]"/>
  <match src="visibility [42029,42036]" dest="visibility [24133,24140]"/>
  <match src="identifier: initialized [99167,99178]" dest="identifier: initialized [39927,39938]"/>
  <match src="memory: memory [86440,86446]" dest="memory: memory [27200,27206]"/>
  <match src="type_cast_expression [28429,28755]" dest="type_cast_expression [41807,42133]"/>
  <match src="update_expression [7679,7682]" dest="update_expression [8243,8246]"/>
  <match src="address: address [50847,50854]" dest="address: address [15554,15561]"/>
  <match src="(: ( [35971,35972]" dest="(: ( [49349,49350]"/>
  <match src="function_body [88945,89017]" dest="function_body [29705,29777]"/>
  <match src="identifier: a [4625,4626]" dest="identifier: a [5189,5190]"/>
  <match src="call_expression [95531,95582]" dest="call_expression [36291,36342]"/>
  <match src="{: { [98818,98819]" dest="{: { [39578,39579]"/>
  <match src="identifier: setup [58853,58858]" dest="identifier: setup [20445,20450]"/>
  <match src="type_name [59665,59672]" dest="type_name [71177,71184]"/>
  <match src="function: function [87545,87553]" dest="function: function [28305,28313]"/>
  <match src="state_mutability [90287,90291]" dest="state_mutability [31047,31051]"/>
  <match src="expression_statement [94785,94851]" dest="expression_statement [35545,35611]"/>
  <match src="=: = [97130,97131]" dest="=: = [37890,37891]"/>
  <match src="parameter [49885,49895]" dest="parameter [14592,14602]"/>
  <match src="uint: uint [51332,51336]" dest="uint: uint [16039,16043]"/>
  <match src="member_expression [93649,93663]" dest="member_expression [34409,34423]"/>
  <match src=",: , [2634,2635]" dest=",: , [3198,3199]"/>
  <match src="call_argument [418,424]" dest="call_argument [982,988]"/>
  <match src="call_argument [78290,78294]" dest="call_argument [71332,71336]"/>
  <match src="(: ( [13938,13939]" dest="(: ( [18876,18877]"/>
  <match src="assignment_expression [95893,95994]" dest="assignment_expression [36653,36754]"/>
  <match src="contract: contract [99825,99833]" dest="contract: contract [62182,62190]"/>
  <match src="(: ( [82445,82446]" dest="(: ( [22067,22068]"/>
  <match src="identifier: equals [8790,8796]" dest="identifier: equals [9354,9360]"/>
  <match src="function_body [75782,75973]" dest="function_body [64354,64521]"/>
  <match src="identifier: self [9544,9548]" dest="identifier: self [10108,10112]"/>
  <match src="memory: memory [9373,9379]" dest="memory: memory [9937,9943]"/>
  <match src="bool: bool [49755,49759]" dest="bool: bool [14462,14466]"/>
  <match src="primitive_type [75565,75572]" dest="primitive_type [63907,63914]"/>
  <match src="identifier: FILE [79380,79384]" dest="identifier: FILE [71848,71852]"/>
  <match src="if: if [30185,30187]" dest="if: if [43563,43565]"/>
  <match src="identifier: b [7931,7932]" dest="identifier: b [8495,8496]"/>
  <match src="member_expression [95635,95679]" dest="member_expression [36395,36439]"/>
  <match src="uint256: uint256 [95821,95828]" dest="uint256: uint256 [36581,36588]"/>
  <match src="identifier: value [77217,77222]" dest="identifier: value [65830,65835]"/>
  <match src="(: ( [36662,36663]" dest="(: ( [50040,50041]"/>
  <match src="identifier: ORACLE_POOL_RATIO [43934,43951]" dest="identifier: ORACLE_POOL_RATIO [26038,26055]"/>
  <match src="function_definition [87763,87876]" dest="function_definition [28523,28636]"/>
  <match src="visibility [91318,91324]" dest="visibility [32078,32084]"/>
  <match src="member_expression [88633,88669]" dest="member_expression [29393,29429]"/>
  <match src="is: is [46892,46894]" dest="is: is [19590,19592]"/>
  <match src="type_name [7328,7332]" dest="type_name [7892,7896]"/>
  <match src="(: ( [87850,87851]" dest="(: ( [28610,28611]"/>
  <match src="returns: returns [88927,88934]" dest="returns: returns [29687,29694]"/>
  <match src="call_expression [31867,31886]" dest="call_expression [45245,45264]"/>
  <match src="primitive_type [30100,30107]" dest="primitive_type [43478,43485]"/>
  <match src="visibility [48128,48134]" dest="visibility [56803,56809]"/>
  <match src="function: function [28233,28241]" dest="function: function [41611,41619]"/>
  <match src="user_defined_type [101297,101307]" dest="user_defined_type [70730,70740]"/>
  <match src="identifier: IERC20 [11448,11454]" dest="identifier: IERC20 [16386,16392]"/>
  <match src="comment: // for each byte (starting from the lowest byte), populate the result with two characters [36050,36139]" dest="comment: // for each byte (starting from the lowest byte), populate the result with two characters [49428,49517]"/>
  <match src="pure: pure [6932,6936]" dest="pure: pure [7496,7500]"/>
  <match src="uint: uint [50278,50282]" dest="uint: uint [14985,14989]"/>
  <match src="return_type_definition [9623,9640]" dest="return_type_definition [10187,10204]"/>
  <match src="state_variable_declaration [42099,42149]" dest="state_variable_declaration [24203,24253]"/>
  <match src="(: ( [28968,28969]" dest="(: ( [42346,42347]"/>
  <match src="type_name [47027,47034]" dest="type_name [19725,19732]"/>
  <match src="(: ( [49858,49859]" dest="(: ( [14565,14566]"/>
  <match src="): ) [76178,76179]" dest="): ) [64738,64739]"/>
  <match src="): ) [75845,75846]" dest="): ) [64418,64419]"/>
  <match src="identifier: amount [94287,94293]" dest="identifier: amount [35047,35053]"/>
  <match src="return_type_definition [92014,92028]" dest="return_type_definition [32774,32788]"/>
  <match src="identifier: Frozen [88815,88821]" dest="identifier: Frozen [29575,29581]"/>
  <match src="identifier: reason [30084,30090]" dest="identifier: reason [43462,43468]"/>
  <match src="comment: /* DAO */ [42085,42094]" dest="comment: /* DAO */ [24189,24198]"/>
  <match src="): ) [93179,93180]" dest="): ) [33939,33940]"/>
  <match src="type_name [51315,51319]" dest="type_name [16022,16026]"/>
  <match src="identifier: owner [21899,21904]" dest="identifier: dollarAmount [57040,57052]"/>
  <match src="(: ( [76733,76734]" dest="(: ( [64933,64934]"/>
  <match src="bytes32: bytes32 [29495,29502]" dest="bytes32: bytes32 [42873,42880]"/>
  <match src="function_definition [87141,87231]" dest="function_definition [27901,27991]"/>
  <match src="return_type_definition [2594,2611]" dest="return_type_definition [3158,3175]"/>
  <match src="string [21137,21172]" dest="string [57741,57778]"/>
  <match src="return_statement [9537,9560]" dest="return_statement [10101,10124]"/>
  <match src="{: { [81626,81627]" dest="{: { [21248,21249]"/>
  <match src="call_expression [93492,93525]" dest="call_expression [34252,34285]"/>
  <match src="): ) [98958,98959]" dest="): ) [39718,39719]"/>
  <match src="parameter [94172,94186]" dest="parameter [34932,34946]"/>
  <match src="}: } [82312,82313]" dest="}: } [21934,21935]"/>
  <match src="identifier: lastReserve [63693,63704]" dest="identifier: balance [64912,64919]"/>
  <match src="parameter [87080,87087]" dest="parameter [27840,27847]"/>
  <match src="parenthesized_expression [27961,28210]" dest="parenthesized_expression [41339,41588]"/>
  <match src="state_mutability [91325,91329]" dest="state_mutability [32085,32089]"/>
  <match src="number_literal: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc [84170,84236]" dest="number_literal: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc [68845,68911]"/>
  <match src=",: , [93969,93970]" dest=",: , [34729,34730]"/>
  <match src="user_defined_type [62508,62520]" dest="user_defined_type [59941,59953]"/>
  <match src="identifier: reason [93890,93896]" dest="identifier: reason [34650,34656]"/>
  <match src="call_argument [22000,22036]" dest="call_argument [58015,58059]"/>
  <match src="(: ( [36856,36857]" dest="(: ( [50234,50235]"/>
  <match src="): ) [51034,51035]" dest="): ) [15741,15742]"/>
  <match src="call_expression [33745,33757]" dest="call_expression [47123,47135]"/>
  <match src="return_type_definition [86861,86878]" dest="return_type_definition [27621,27638]"/>
  <match src="): ) [84826,84827]" dest="): ) [69501,69502]"/>
  <match src="call_argument [7931,7938]" dest="call_argument [8495,8502]"/>
  <match src="pure: pure [9618,9622]" dest="pure: pure [10182,10186]"/>
  <match src="uint256: uint256 [95836,95843]" dest="uint256: uint256 [36596,36603]"/>
  <match src="member_expression [45197,45223]" dest="member_expression [51338,51359]"/>
  <match src="(: ( [50253,50254]" dest="(: ( [14960,14961]"/>
  <match src="primitive_type [1981,1988]" dest="primitive_type [2545,2552]"/>
  <match src="(: ( [77208,77209]" dest="(: ( [65330,65331]"/>
  <match src="function: function [49837,49845]" dest="function: function [14544,14552]"/>
  <match src="{: { [32205,32206]" dest="{: { [45583,45584]"/>
  <match src=",: , [21918,21919]" dest=",: , [57056,57057]"/>
  <match src="identifier: balanceOf [79102,79111]" dest="identifier: mint [54057,54061]"/>
  <match src="internal: internal [9383,9391]" dest="internal: internal [9947,9955]"/>
  <match src="identifier: D256 [9227,9231]" dest="identifier: D256 [9791,9795]"/>
  <match src="&quot;: &quot; [60447,60448]" dest="&quot;: &quot; [55104,55105]"/>
  <match src="parameter [49405,49418]" dest="parameter [14112,14125]"/>
  <match src="): ) [58859,58860]" dest="): ) [20451,20452]"/>
  <match src="=: = [33990,33991]" dest="=: = [47368,47369]"/>
  <match src="=: = [42012,42013]" dest="=: = [24116,24117]"/>
  <match src="identifier: State [81692,81697]" dest="identifier: State [21314,21319]"/>
  <match src="number_literal: 1 [77851,77852]" dest="number_literal: 1 [65765,65766]"/>
  <match src="): ) [62548,62549]" dest="): ) [59983,59984]"/>
  <match src="public: public [86504,86510]" dest="public: public [27264,27270]"/>
  <match src="pure: pure [43894,43898]" dest="pure: pure [25998,26002]"/>
  <match src="uint256: uint256 [23081,23088]" dest="uint256: uint256 [11822,11829]"/>
  <match src="function_definition [93832,93985]" dest="function_definition [34592,34745]"/>
  <match src="(: ( [13062,13063]" dest="(: ( [18000,18001]"/>
  <match src="(: ( [77163,77164]" dest="(: ( [66228,66229]"/>
  <match src="(: ( [50016,50017]" dest="(: ( [14723,14724]"/>
  <match src="&quot;: &quot; [45945,45946]" dest="&quot;: &quot; [58531,58532]"/>
  <match src="identifier: decrementBalanceOfPhantom [77691,77716]" dest="identifier: placeLock [72641,72650]"/>
  <match src="identifier: unfreeze [96206,96214]" dest="identifier: unfreeze [36966,36974]"/>
  <match src="identifier: sub [95355,95358]" dest="identifier: sub [36115,36118]"/>
  <match src="call_expression [75792,75799]" dest="call_expression [64364,64372]"/>
  <match src="identifier: greaterThanOrEqualTo [9188,9208]" dest="identifier: greaterThanOrEqualTo [9752,9772]"/>
  <match src="event_paramater [49188,49211]" dest="event_paramater [13895,13918]"/>
  <match src="expression_statement [73610,73666]" dest="expression_statement [72592,72632]"/>
  <match src="): ) [30147,30148]" dest="): ) [43525,43526]"/>
  <match src="function_definition [31995,32752]" dest="function_definition [45373,46130]"/>
  <match src="visibility [46938,46944]" dest="visibility [19636,19642]"/>
  <match src="number_literal: 2 [36261,36262]" dest="number_literal: 2 [49639,49640]"/>
  <match src="parameter [87385,87392]" dest="parameter [28145,28152]"/>
  <match src="memory: memory [8063,8069]" dest="memory: memory [8627,8633]"/>
  <match src="identifier: getBootstrappingPeriod [89673,89695]" dest="identifier: getBootstrappingPeriod [30433,30455]"/>
  <match src="type_name [13518,13522]" dest="type_name [18456,18460]"/>
  <match src="type_name [66131,66138]" dest="type_name [59711,59718]"/>
  <match src="is: is [92922,92924]" dest="is: is [33682,33684]"/>
  <match src="modifier: modifier [100422,100430]" dest="modifier: modifier [62779,62787]"/>
  <match src="member_expression [8326,8336]" dest="member_expression [8890,8900]"/>
  <match src="type_name [50737,50744]" dest="type_name [15444,15451]"/>
  <match src="call_argument [33755,33756]" dest="call_argument [47133,47134]"/>
  <match src="internal: internal [7117,7125]" dest="internal: internal [7681,7689]"/>
  <match src="): ) [50712,50713]" dest="): ) [15419,15420]"/>
  <match src="identifier: D256 [8949,8953]" dest="identifier: D256 [9513,9517]"/>
  <match src="identifier: z [35575,35576]" dest="identifier: z [48953,48954]"/>
  <match src="call_argument [98131,98137]" dest="call_argument [38891,38897]"/>
  <match src="primitive_type [7457,7464]" dest="primitive_type [8021,8028]"/>
  <match src="identifier: require [25923,25930]" dest="identifier: decrementRejectFor [72141,72159]"/>
  <match src="(: ( [94024,94025]" dest="(: ( [34784,34785]"/>
  <match src="address: address [51410,51417]" dest="address: address [16117,16124]"/>
  <match src=",: , [7993,7994]" dest=",: , [8557,8558]"/>
  <match src="type_name [49213,49217]" dest="type_name [13920,13924]"/>
  <match src="): ) [81783,81784]" dest="): ) [21405,21406]"/>
  <match src="library: library [27320,27327]" dest="library: library [40698,40705]"/>
  <match src="identifier: D256 [7071,7075]" dest="identifier: D256 [7635,7639]"/>
  <match src="}: } [5938,5939]" dest="}: } [6502,6503]"/>
  <match src="external: external [75750,75758]" dest="external: external [64314,64322]"/>
  <match src="comment: // ============ Structs ============ [5687,5723]" dest="comment: // ============ Structs ============ [6251,6287]"/>
  <match src="uint: uint [50346,50350]" dest="uint: uint [15053,15057]"/>
  <match src="primitive_type [45395,45402]" dest="primitive_type [52281,52288]"/>
  <match src="identifier: getBootstrappingSpeedupFactor [43110,43139]" dest="identifier: getBootstrappingSpeedupFactor [25214,25243]"/>
  <match src="number_literal: 11e17 [41478,41483]" dest="number_literal: 11e17 [23582,23587]"/>
  <match src="call_argument [76124,76134]" dest="call_argument [64681,64691]"/>
  <match src="function: function [30012,30020]" dest="function: function [43390,43398]"/>
  <match src="function_body [96818,96885]" dest="function_body [37578,37645]"/>
  <match src="primitive_type [93297,93304]" dest="primitive_type [34057,34064]"/>
  <match src="identifier: Transfer [20106,20114]" dest="identifier: CouponTransfer [58855,58869]"/>
  <match src="(: ( [76882,76883]" dest="(: ( [65044,65045]"/>
  <match src="member_expression [98484,98501]" dest="member_expression [39244,39261]"/>
  <match src="view: view [86722,86726]" dest="view: view [27482,27486]"/>
  <match src="(: ( [88262,88263]" dest="(: ( [29022,29023]"/>
  <match src="): ) [77325,77326]" dest="): ) [71931,71932]"/>
  <match src="function_body [89100,89144]" dest="function_body [29860,29904]"/>
  <match src="primitive_type [28856,28863]" dest="primitive_type [42234,42241]"/>
  <match src="{: { [87602,87603]" dest="{: { [28362,28363]"/>
  <match src="type_name [66080,66087]" dest="type_name [59877,59884]"/>
  <match src="call_argument [79112,79125]" dest="call_argument [54062,54075]"/>
  <match src="&quot;: &quot; [19922,19923]" dest="&quot;: &quot; [58469,58470]"/>
  <match src="event_paramater [50360,50372]" dest="event_paramater [15067,15079]"/>
  <match src="return: return [5907,5913]" dest="return: return [6471,6477]"/>
  <match src="member_expression [98295,98335]" dest="member_expression [39055,39095]"/>
  <match src="variable_declaration [34290,34299]" dest="variable_declaration [47668,47677]"/>
  <match src="call_expression [45197,45286]" dest="call_expression [51338,51391]"/>
  <match src="[: [ [90340,90341]" dest="[: [ [31100,31101]"/>
  <match src="return_statement [5907,5933]" dest="return_statement [6471,6497]"/>
  <match src="uint256: uint256 [9878,9885]" dest="uint256: uint256 [10442,10449]"/>
  <match src="): ) [9928,9929]" dest="): ) [10492,10493]"/>
  <match src="member_expression [95935,95978]" dest="member_expression [36695,36738]"/>
  <match src="identifier: statusOf [100292,100300]" dest="identifier: statusOf [62649,62657]"/>
  <match src=".: . [60403,60404]" dest=".: . [59640,59641]"/>
  <match src="member_expression [95060,95085]" dest="member_expression [35820,35845]"/>
  <match src="primitive_type [47044,47051]" dest="primitive_type [19742,19749]"/>
  <match src="parameter [31478,31490]" dest="parameter [44856,44868]"/>
  <match src="identifier: self [7715,7719]" dest="identifier: self [8279,8283]"/>
  <match src="): ) [9885,9886]" dest="): ) [10449,10450]"/>
  <match src="): ) [91214,91215]" dest="): ) [31974,31975]"/>
  <match src="function: function [4604,4612]" dest="function: function [5168,5176]"/>
  <match src=".: . [98933,98934]" dest=".: . [39693,39694]"/>
  <match src="call_expression [73610,73665]" dest="call_expression [72592,72631]"/>
  <match src="): ) [48255,48256]" dest="): ) [58719,58720]"/>
  <match src="primitive_type [88391,88398]" dest="primitive_type [29151,29158]"/>
  <match src="identifier: OpenZeppelinUpgradesAddress [85147,85174]" dest="identifier: OpenZeppelinUpgradesAddress [69822,69849]"/>
  <match src="expression_statement [77538,77592]" dest="expression_statement [57374,57416]"/>
  <match src=".: . [86653,86654]" dest=".: . [27413,27414]"/>
  <match src="return_statement [87300,87329]" dest="return_statement [28060,28089]"/>
  <match src="return: return [93106,93112]" dest="return: return [33866,33872]"/>
  <match src="revert: revert [27955,27961]" dest="revert: revert [41333,41339]"/>
  <match src="return_type_definition [42766,42783]" dest="return_type_definition [24870,24887]"/>
  <match src="call_expression [6603,6614]" dest="call_expression [7167,7178]"/>
  <match src="visibility [50661,50669]" dest="visibility [15368,15376]"/>
  <match src="type_name [34914,34919]" dest="type_name [48292,48297]"/>
  <match src="primitive_type [50182,50186]" dest="primitive_type [14889,14893]"/>
  <match src="parameter [50182,50195]" dest="parameter [14889,14902]"/>
  <match src="type_name [13449,13456]" dest="type_name [18387,18394]"/>
  <match src="(: ( [4716,4717]" dest="(: ( [5280,5281]"/>
  <match src="(: ( [91472,91473]" dest="(: ( [32232,32233]"/>
  <match src="member_expression [93468,93489]" dest="member_expression [34228,34249]"/>
  <match src="emit_statement [77815,77876]" dest="emit_statement [65729,65784]"/>
  <match src="primitive_type [63320,63327]" dest="primitive_type [65426,65433]"/>
  <match src="expression_statement [45869,45975]" dest="expression_statement [57140,57253]"/>
  <match src="identifier: priceCumulative [61924,61939]" dest="identifier: endsAfter [72921,72930]"/>
  <match src="function_body [87394,87439]" dest="function_body [28154,28199]"/>
  <match src="uint: uint [49594,49598]" dest="uint: uint [14301,14305]"/>
  <match src="function_definition [93019,93125]" dest="function_definition [33779,33885]"/>
  <match src=",: , [98197,98198]" dest=",: , [38957,38958]"/>
  <match src="&gt;: &gt; [33150,33151]" dest="&gt;: &gt; [46528,46529]"/>
  <match src="(: ( [21995,21996]" dest="(: ( [58010,58011]"/>
  <match src=".: . [97780,97781]" dest=".: . [38540,38541]"/>
  <match src="modifier_invocation [75759,75781]" dest="modifier_invocation [71226,71256]"/>
  <match src=".: . [98126,98127]" dest=".: . [38886,38887]"/>
  <match src="identifier: account [94443,94450]" dest="identifier: account [35203,35210]"/>
  <match src="visibility [8445,8453]" dest="visibility [9009,9017]"/>
  <match src="member_expression [89903,89988]" dest="member_expression [30663,30748]"/>
  <match src="): ) [11736,11737]" dest="): ) [16674,16675]"/>
  <match src="member_expression [6588,6598]" dest="member_expression [7152,7162]"/>
  <match src="primitive_type [3214,3221]" dest="primitive_type [3778,3785]"/>
  <match src="identifier: EPOCH_PERIOD [42692,42704]" dest="identifier: EPOCH_PERIOD [24796,24808]"/>
  <match src="identifier: Storage [82514,82521]" dest="identifier: Storage [22136,22143]"/>
  <match src="identifier: sync [51445,51449]" dest="identifier: sync [16152,16156]"/>
  <match src="call_expression [62536,62549]" dest="call_expression [59969,59984]"/>
  <match src="variable_declaration_statement [89413,89447]" dest="variable_declaration_statement [30173,30207]"/>
  <match src="identifier: Context [15742,15749]" dest="identifier: Comptroller [55014,55025]"/>
  <match src="identifier: stringifyTruncated [28499,28517]" dest="identifier: stringifyTruncated [41877,41895]"/>
  <match src="type_name [84734,84739]" dest="type_name [69409,69414]"/>
  <match src="expression_statement [94949,95027]" dest="expression_statement [35709,35787]"/>
  <match src="(: ( [35542,35543]" dest="(: ( [48920,48921]"/>
  <match src="user_defined_type [9227,9231]" dest="user_defined_type [9791,9795]"/>
  <match src="(: ( [75947,75948]" dest="(: ( [64495,64496]"/>
  <match src="identifier: recordVote [97818,97828]" dest="identifier: recordVote [38578,38588]"/>
  <match src="call_expression [6764,6808]" dest="call_expression [7328,7372]"/>
  <match src="identifier: _state [86647,86653]" dest="identifier: _state [27407,27413]"/>
  <match src="state_mutability [9106,9110]" dest="state_mutability [9670,9674]"/>
  <match src="returns: returns [86971,86978]" dest="returns: returns [27731,27738]"/>
  <match src="): ) [30327,30328]" dest="): ) [43705,43706]"/>
  <match src="identifier: bootstrappingTotal [89770,89788]" dest="identifier: bootstrappingTotal [30530,30548]"/>
  <match src="contract_body [11455,14004]" dest="contract_body [16393,18942]"/>
  <match src="primitive_type [11995,12002]" dest="primitive_type [16933,16940]"/>
  <match src="identifier: that [64220,64224]" dest="identifier: that [73315,73319]"/>
  <match src="primitive_type [17620,17627]" dest="primitive_type [52126,52133]"/>
  <match src="(: ( [27933,27934]" dest="(: ( [41311,41312]"/>
  <match src="primitive_type [87702,87709]" dest="primitive_type [28462,28469]"/>
  <match src="(: ( [78900,78901]" dest="(: ( [53429,53430]"/>
  <match src="type_name [59706,59710]" dest="type_name [73581,73585]"/>
  <match src="state_mutability [32883,32887]" dest="state_mutability [46261,46265]"/>
  <match src="comment: /*     Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [59716,60344]" dest="comment: /*     Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [50281,50909]"/>
  <match src="assignment_expression [95309,95374]" dest="assignment_expression [36069,36134]"/>
  <match src="(: ( [90158,90159]" dest="(: ( [30918,30919]"/>
  <match src="identifier: b [6263,6264]" dest="identifier: b [6827,6828]"/>
  <match src="comment: // assert(a == b * c + a % b); // There is no case in which this doesn't hold [3426,3503]" dest="comment: // assert(a == b * c + a % b); // There is no case in which this doesn't hold [3990,4067]"/>
  <match src="comment: /**      * @dev Upgrades the proxy to a new implementation.      * @param newImplementation Address of the new implementation.      */ [84468,84602]" dest="comment: /**      * @dev Upgrades the proxy to a new implementation.      * @param newImplementation Address of the new implementation.      */ [69143,69277]"/>
  <match src="): ) [19800,19801]" dest="): ) [58331,58332]"/>
  <match src="type_name [50170,50174]" dest="type_name [14877,14881]"/>
  <match src="(: ( [93261,93262]" dest="(: ( [34021,34022]"/>
  <match src="identifier: spender [49716,49723]" dest="identifier: spender [14423,14430]"/>
  <match src="primitive_type [66107,66114]" dest="primitive_type [59835,59842]"/>
  <match src="identifier: temp [7709,7713]" dest="identifier: temp [8273,8277]"/>
  <match src="uint256: uint256 [1228,1235]" dest="uint256: uint256 [1792,1799]"/>
  <match src=".: . [91371,91372]" dest=".: . [32131,32132]"/>
  <match src="identifier: candidate [91707,91716]" dest="identifier: candidate [32467,32476]"/>
  <match src="==: == [7541,7543]" dest="==: == [8105,8107]"/>
  <match src="identifier: msg [77717,77720]" dest="identifier: msg [72651,72654]"/>
  <match src="member_expression [94785,94799]" dest="member_expression [35545,35559]"/>
  <match src="member_expression [77297,77341]" dest="member_expression [65443,65452]"/>
  <match src="call_expression [89564,89624]" dest="call_expression [30324,30384]"/>
  <match src="type_name [82116,82125]" dest="type_name [21738,21747]"/>
  <match src=".: . [31663,31664]" dest=".: . [45041,45042]"/>
  <match src="{: { [79980,79981]" dest="{: { [66802,66803]"/>
  <match src="primitive_type [82478,82482]" dest="primitive_type [22100,22104]"/>
  <match src="member_expression [96609,96648]" dest="member_expression [37369,37408]"/>
  <match src="parameter [32901,32913]" dest="parameter [46279,46291]"/>
  <match src="{: { [41274,41275]" dest="{: { [23378,23379]"/>
  <match src="}: } [90088,90089]" dest="}: } [30848,30849]"/>
  <match src="identifier: Unbond [77820,77826]" dest="identifier: Unbond [65734,65740]"/>
  <match src="binary_expression [35386,35396]" dest="binary_expression [48764,48774]"/>
  <match src="{: { [96599,96600]" dest="{: { [37359,37360]"/>
  <match src="identifier: c [474,475]" dest="identifier: c [1038,1039]"/>
  <match src="): ) [43781,43782]" dest="): ) [25885,25886]"/>
  <match src="uint256: uint256 [45118,45125]" dest="uint256: uint256 [55142,55149]"/>
  <match src="): ) [35084,35085]" dest="): ) [48462,48463]"/>
  <match src="member_expression [87106,87128]" dest="member_expression [27866,27888]"/>
  <match src="bool: bool [80402,80406]" dest="bool: bool [67224,67228]"/>
  <match src="string_literal [76425,76463]" dest="string_literal [73073,73084]"/>
  <match src="visibility [50019,50027]" dest="visibility [14726,14734]"/>
  <match src="call_expression [7916,7939]" dest="call_expression [8480,8503]"/>
  <match src="member_expression [7196,7206]" dest="member_expression [7760,7770]"/>
  <match src="assembly: assembly [85324,85332]" dest="assembly: assembly [69999,70007]"/>
  <match src="call_argument [93683,93689]" dest="call_argument [34443,34449]"/>
  <match src="identifier: accounts [98857,98865]" dest="identifier: accounts [39617,39625]"/>
  <match src="): ) [93977,93978]" dest="): ) [34737,34738]"/>
  <match src="return_type_definition [87584,87601]" dest="return_type_definition [28344,28361]"/>
  <match src="identifier: vote [97880,97884]" dest="identifier: vote [38640,38644]"/>
  <match src="uint256: uint256 [93433,93440]" dest="uint256: uint256 [34193,34200]"/>
  <match src="function: function [49480,49488]" dest="function: function [14187,14195]"/>
  <match src="identifier: result [34927,34933]" dest="identifier: result [48305,48311]"/>
  <match src="address: address [96348,96355]" dest="address: address [37108,37115]"/>
  <match src="primitive_type [75676,75683]" dest="primitive_type [74678,74685]"/>
  <match src="identifier: self [7916,7920]" dest="identifier: self [8480,8484]"/>
  <match src="uint256: uint256 [9632,9639]" dest="uint256: uint256 [10196,10203]"/>
  <match src="internal: internal [94408,94416]" dest="internal: internal [35168,35176]"/>
  <match src="identifier: reason [94661,94667]" dest="identifier: reason [35421,35427]"/>
  <match src="string_literal [78308,78339]" dest="string_literal [71866,71873]"/>
  <match src="variable_declaration [78429,78461]" dest="variable_declaration [56387,56407]"/>
  <match src="identifier: candidate [97716,97725]" dest="identifier: candidate [38476,38485]"/>
  <match src="state_mutability [11715,11719]" dest="state_mutability [16653,16657]"/>
  <match src="public: public [88089,88095]" dest="public: public [28849,28855]"/>
  <match src="type_name [33433,33440]" dest="type_name [46811,46818]"/>
  <match src="call_expression [78888,79057]" dest="call_expression [53417,53600]"/>
  <match src="view: view [91725,91729]" dest="view: view [32485,32489]"/>
  <match src="parameter [46922,46936]" dest="parameter [19620,19634]"/>
  <match src="identifier: candidates [98097,98107]" dest="identifier: candidates [38857,38867]"/>
  <match src="call_argument [32313,32337]" dest="call_argument [45691,45715]"/>
  <match src="variable_declaration [7657,7666]" dest="variable_declaration [8221,8230]"/>
  <match src="(: ( [9152,9153]" dest="(: ( [9716,9717]"/>
  <match src="state_mutability [50670,50674]" dest="state_mutability [15377,15381]"/>
  <match src="bool: bool [9406,9410]" dest="bool: bool [9970,9974]"/>
  <match src="bytes32: bytes32 [32037,32044]" dest="bytes32: bytes32 [45415,45422]"/>
  <match src="identifier: value [49801,49806]" dest="identifier: value [14508,14513]"/>
  <match src="-: - [35527,35528]" dest="-: - [48905,48906]"/>
  <match src="struct_member [81708,81723]" dest="struct_member [21330,21345]"/>
  <match src="state_mutability [91872,91876]" dest="state_mutability [32632,32636]"/>
  <match src="block_statement [33415,33688]" dest="block_statement [46793,47066]"/>
  <match src="identifier: Account [81600,81607]" dest="identifier: Account [21222,21229]"/>
  <match src="primitive_type [87178,87185]" dest="primitive_type [27938,27945]"/>
  <match src="call_expression [1309,1338]" dest="call_expression [1873,1902]"/>
  <match src="primitive_type [82676,82683]" dest="primitive_type [22298,22305]"/>
  <match src="==: == [78948,78950]" dest="==: == [53477,53479]"/>
  <match src="identifier: rejectFor [91557,91566]" dest="identifier: rejectFor [32317,32326]"/>
  <match src="uint256: uint256 [21856,21863]" dest="uint256: uint256 [57949,57956]"/>
  <match src="type_name [96348,96355]" dest="type_name [37108,37115]"/>
  <match src="uint256: uint256 [89394,89401]" dest="uint256: uint256 [30154,30161]"/>
  <match src="call_argument [100100,100121]" dest="call_argument [62457,62478]"/>
  <match src="if: if [89733,89735]" dest="if: if [30493,30495]"/>
  <match src="uint256: uint256 [65857,65864]" dest="uint256: uint256 [64035,64042]"/>
  <match src="function_definition [90981,91143]" dest="function_definition [31741,31903]"/>
  <match src="variable_declaration [62508,62533]" dest="variable_declaration [59941,59966]"/>
  <match src="=: = [97325,97326]" dest="=: = [38085,38086]"/>
  <match src="address: address [75354,75361]" dest="address: address [63826,63833]"/>
  <match src="function_definition [88857,89017]" dest="function_definition [29617,29777]"/>
  <match src="member_expression [95309,95330]" dest="member_expression [36069,36090]"/>
  <match src="(: ( [19881,19882]" dest="(: ( [58420,58421]"/>
  <match src="returns: returns [91330,91337]" dest="returns: returns [32090,32097]"/>
  <match src="type_name [86980,86987]" dest="type_name [27740,27747]"/>
  <match src="identifier: from [49261,49265]" dest="identifier: from [13968,13972]"/>
  <match src="returns: returns [42657,42664]" dest="returns: returns [24761,24768]"/>
  <match src="identifier: must [30877,30881]" dest="identifier: must [44255,44259]"/>
  <match src="visibility [41383,41390]" dest="visibility [23487,23494]"/>
  <match src="primitive_type [50524,50528]" dest="primitive_type [15231,15235]"/>
  <match src="type_name [47923,47930]" dest="type_name [51056,51063]"/>
  <match src="visibility [15934,15941]" dest="visibility [13078,13085]"/>
  <match src="primitive_type [50792,50799]" dest="primitive_type [15499,15506]"/>
  <match src="identifier: Require [45869,45876]" dest="identifier: Require [57140,57147]"/>
  <match src="{: { [90449,90450]" dest="{: { [31209,31210]"/>
  <match src="{: { [93337,93338]" dest="{: { [34097,34098]"/>
  <match src="string [46174,46183]" dest="string [51459,51501]"/>
  <match src="): ) [43841,43842]" dest="): ) [25945,25946]"/>
  <match src="type_name [73145,73152]" dest="type_name [56955,56962]"/>
  <match src="identifier: errorMessage [1325,1337]" dest="identifier: errorMessage [1889,1901]"/>
  <match src="visibility [32871,32878]" dest="visibility [46249,46256]"/>
  <match src="identifier: expiration [82096,82106]" dest="identifier: expiration [21718,21728]"/>
  <match src="primitive_type [31632,31638]" dest="primitive_type [45010,45016]"/>
  <match src="address: address [86815,86822]" dest="address: address [27575,27582]"/>
  <match src="string: string [29649,29655]" dest="string: string [43027,43033]"/>
  <match src="using_directive [60378,60409]" dest="using_directive [59615,59646]"/>
  <match src="number_literal: 0 [7544,7545]" dest="number_literal: 0 [8108,8109]"/>
  <match src="address: address [94375,94382]" dest="address: address [35135,35142]"/>
  <match src="event_paramater [75379,75392]" dest="event_paramater [63851,63864]"/>
  <match src="(: ( [7967,7968]" dest="(: ( [8531,8532]"/>
  <match src=",: , [32368,32369]" dest=",: , [45746,45747]"/>
  <match src="type_name [49267,49274]" dest="type_name [13974,13981]"/>
  <match src="user_defined_type [8949,8953]" dest="user_defined_type [9513,9517]"/>
  <match src="(: ( [96519,96520]" dest="(: ( [37279,37280]"/>
  <match src="variable_declaration [62559,62578]" dest="variable_declaration [65917,65932]"/>
  <match src=".: . [7008,7009]" dest=".: . [7572,7573]"/>
  <match src=",: , [94912,94913]" dest=",: , [35672,35673]"/>
  <match src="private: private [41510,41517]" dest="private: private [23614,23621]"/>
  <match src="(: ( [87803,87804]" dest="(: ( [28563,28564]"/>
  <match src=",: , [25241,25242]" dest=",: , [72316,72317]"/>
  <match src="call_argument [76143,76178]" dest="call_argument [64700,64738]"/>
  <match src="==: == [9555,9557]" dest="==: == [10119,10121]"/>
  <match src="}: } [481,482]" dest="}: } [1045,1046]"/>
  <match src="pure: pure [9106,9110]" dest="pure: pure [9670,9674]"/>
  <match src="array_access [98256,98284]" dest="array_access [39016,39044]"/>
  <match src="function_body [6154,6206]" dest="function_body [6718,6770]"/>
  <match src="uint256: uint256 [78379,78386]" dest="uint256: uint256 [60801,60808]"/>
  <match src="uint256: uint256 [75694,75701]" dest="uint256: uint256 [70966,70973]"/>
  <match src="}: } [33687,33688]" dest="}: } [47065,47066]"/>
  <match src="type_name [2558,2565]" dest="type_name [3122,3129]"/>
  <match src="binary_expression [9429,9451]" dest="binary_expression [9993,10015]"/>
  <match src="function_definition [96197,96310]" dest="function_definition [36957,37070]"/>
  <match src="member_expression [89219,89237]" dest="member_expression [29979,29997]"/>
  <match src="%: % [4757,4758]" dest="%: % [5321,5322]"/>
  <match src="expression_statement [76378,76465]" dest="expression_statement [65518,65563]"/>
  <match src="type_name [34940,34945]" dest="type_name [48318,48323]"/>
  <match src="(: ( [84811,84812]" dest="(: ( [69486,69487]"/>
  <match src="type_name [11689,11696]" dest="type_name [16627,16634]"/>
  <match src="identifier: file [30723,30727]" dest="identifier: file [44101,44105]"/>
  <match src="(: ( [9297,9298]" dest="(: ( [9861,9862]"/>
  <match src="=: = [93647,93648]" dest="=: = [34407,34408]"/>
  <match src=".: . [96631,96632]" dest=".: . [37391,37392]"/>
  <match src="(: ( [31241,31242]" dest="(: ( [44619,44620]"/>
  <match src="}: } [87875,87876]" dest="}: } [28635,28636]"/>
  <match src=",: , [95834,95835]" dest=",: , [36594,36595]"/>
  <match src="if: if [27930,27932]" dest="if: if [41308,41310]"/>
  <match src="number_literal: 0 [3373,3374]" dest="number_literal: 0 [3937,3938]"/>
  <match src="call_argument [77170,77171]" dest="call_argument [66235,66236]"/>
  <match src="address: address [91846,91853]" dest="address: address [32606,32613]"/>
  <match src="pure: pure [6712,6716]" dest="pure: pure [7276,7280]"/>
  <match src="function: function [5945,5953]" dest="function: function [6509,6517]"/>
  <match src="address: address [50549,50556]" dest="address: address [15256,15263]"/>
  <match src="if: if [28965,28967]" dest="if: if [42343,42345]"/>
  <match src="identifier: z [36359,36360]" dest="identifier: z [49737,49738]"/>
  <match src="identifier: start [97727,97732]" dest="identifier: start [38487,38492]"/>
  <match src="identifier: outstanding [90214,90225]" dest="identifier: outstanding [30974,30985]"/>
  <match src="call_argument [6176,6198]" dest="call_argument [6740,6762]"/>
  <match src="identifier: b [6687,6688]" dest="identifier: b [7251,7252]"/>
  <match src="identifier: j [34266,34267]" dest="identifier: j [47644,47645]"/>
  <match src="member_expression [7376,7390]" dest="member_expression [7940,7954]"/>
  <match src="type_name [94914,94921]" dest="type_name [35674,35681]"/>
  <match src="struct_member [82389,82405]" dest="struct_member [22011,22027]"/>
  <match src="function: function [94347,94355]" dest="function: function [35107,35115]"/>
  <match src="if_statement [7535,7586]" dest="if_statement [8099,8150]"/>
  <match src="primitive_type [78361,78368]" dest="primitive_type [56206,56213]"/>
  <match src="array_access [90185,90205]" dest="array_access [30945,30965]"/>
  <match src="identifier: b [7539,7540]" dest="identifier: b [8103,8104]"/>
  <match src="identifier: Account [88800,88807]" dest="identifier: Account [29560,29567]"/>
  <match src="type_name [51332,51336]" dest="type_name [16039,16043]"/>
  <match src="memory: memory [7982,7988]" dest="memory: memory [8546,8552]"/>
  <match src="binary_expression [34038,34044]" dest="binary_expression [47416,47422]"/>
  <match src="internal: internal [43739,43747]" dest="internal: internal [25843,25851]"/>
  <match src="identifier: j [34082,34083]" dest="identifier: j [47460,47461]"/>
  <match src="{: { [6176,6177]" dest="{: { [6740,6741]"/>
  <match src="primitive_type [41887,41894]" dest="primitive_type [23991,23998]"/>
  <match src="identifier: amount [23089,23095]" dest="identifier: amount [11830,11836]"/>
  <match src=",: , [8554,8555]" dest=",: , [9118,9119]"/>
  <match src="&quot;: &quot; [53409,53410]" dest="&quot;: &quot; [66186,66187]"/>
  <match src="identifier: must [28820,28824]" dest="identifier: must [42198,42202]"/>
  <match src="call_argument [75881,75891]" dest="call_argument [64454,64464]"/>
  <match src="): ) [31957,31958]" dest="): ) [45335,45336]"/>
  <match src="contract_body [83078,83107]" dest="contract_body [22700,22729]"/>
  <match src="identifier: sender [77362,77368]" dest="identifier: sender [65473,65479]"/>
  <match src="member_expression [64212,64224]" dest="member_expression [73307,73319]"/>
  <match src="uint256: uint256 [96380,96387]" dest="uint256: uint256 [37140,37147]"/>
  <match src="type_name [77274,77281]" dest="type_name [56144,56151]"/>
  <match src="parameter [28834,28846]" dest="parameter [42212,42224]"/>
  <match src="array_access [98295,98323]" dest="array_access [39055,39083]"/>
  <match src="identifier: _state [98295,98301]" dest="identifier: _state [39055,39061]"/>
  <match src="identifier: newLock [98904,98911]" dest="identifier: newLock [39664,39671]"/>
  <match src="(: ( [51409,51410]" dest="(: ( [16116,16117]"/>
  <match src=".: . [76074,76075]" dest=".: . [65091,65092]"/>
  <match src="view: view [90853,90857]" dest="view: view [31613,31617]"/>
  <match src=".: . [89591,89592]" dest=".: . [30351,30352]"/>
  <match src="return_type_definition [49746,49760]" dest="return_type_definition [14453,14467]"/>
  <match src="}: } [96992,96993]" dest="}: } [37752,37753]"/>
  <match src=".: . [77337,77338]" dest=".: . [65448,65449]"/>
  <match src="): ) [42430,42431]" dest="): ) [24534,24535]"/>
  <match src="uint256: uint256 [68777,68784]" dest="uint256: uint256 [71894,71901]"/>
  <match src="}: } [1970,1971]" dest="}: } [2534,2535]"/>
  <match src="identifier: Balance [82634,82641]" dest="identifier: Balance [22256,22263]"/>
  <match src=".: . [85174,85175]" dest=".: . [69849,69850]"/>
  <match src="user_defined_type [7977,7981]" dest="user_defined_type [8541,8545]"/>
  <match src="bytes: bytes [84734,84739]" dest="bytes: bytes [69409,69414]"/>
  <match src="=: = [32996,32997]" dest="=: = [46374,46375]"/>
  <match src="(: ( [88071,88072]" dest="(: ( [28831,28832]"/>
  <match src="primitive_type [97256,97263]" dest="primitive_type [38016,38023]"/>
  <match src="primitive_type [38271,38278]" dest="primitive_type [58254,58261]"/>
  <match src="identifier: stringify [32554,32563]" dest="identifier: stringify [45932,45941]"/>
  <match src="call_argument [100347,100351]" dest="call_argument [62704,62708]"/>
  <match src="returns: returns [6531,6538]" dest="returns: returns [7095,7102]"/>
  <match src="): ) [91863,91864]" dest="): ) [32623,32624]"/>
  <match src=".: . [9929,9930]" dest=".: . [10493,10494]"/>
  <match src="return: return [88238,88244]" dest="return: return [28998,29004]"/>
  <match src="identifier: epoch [90780,90785]" dest="identifier: epoch [31540,31545]"/>
  <match src="struct_member [82853,82869]" dest="struct_member [22475,22491]"/>
  <match src="type_name [49725,49729]" dest="type_name [14432,14436]"/>
  <match src="comment: // 10% [42310,42316]" dest="comment: // 10% [24414,24420]"/>
  <match src="member_expression [95531,95546]" dest="member_expression [36291,36306]"/>
  <match src="string: string [1239,1245]" dest="string: string [1803,1809]"/>
  <match src="identifier: i [34298,34299]" dest="identifier: i [47676,47677]"/>
  <match src=".: . [94530,94531]" dest=".: . [35290,35291]"/>
  <match src="internal: internal [97071,97079]" dest="internal: internal [37831,37839]"/>
  <match src="identifier: _state [98484,98490]" dest="identifier: _state [39244,39250]"/>
  <match src="uint256: uint256 [65782,65789]" dest="uint256: uint256 [59673,59680]"/>
  <match src="identifier: balance [93499,93506]" dest="identifier: balance [34259,34266]"/>
  <match src="identifier: GOVERNANCE_QUORUM [43455,43472]" dest="identifier: GOVERNANCE_QUORUM [25559,25576]"/>
  <match src="type_name [90867,90871]" dest="type_name [31627,31631]"/>
  <match src="): ) [84453,84454]" dest="): ) [69128,69129]"/>
  <match src="number_literal: 1 [48254,48255]" dest="number_literal: 1 [58718,58719]"/>
  <match src="primitive_type [27432,27439]" dest="primitive_type [40810,40817]"/>
  <match src="identifier: account [88080,88087]" dest="identifier: account [28840,28847]"/>
  <match src="primitive_type [91886,91890]" dest="primitive_type [32646,32650]"/>
  <match src="bool: bool [9521,9525]" dest="bool: bool [10085,10089]"/>
  <match src="(: ( [89872,89873]" dest="(: ( [30632,30633]"/>
  <match src="(: ( [77145,77146]" dest="(: ( [66210,66211]"/>
  <match src="++: ++ [36177,36179]" dest="++: ++ [49555,49557]"/>
  <match src="type_alias [92952,92960]" dest="type_alias [33712,33720]"/>
  <match src="{: { [91216,91217]" dest="{: { [31976,31977]"/>
  <match src="return: return [91226,91232]" dest="return: return [31986,31992]"/>
  <match src="external: external [50769,50777]" dest="external: external [15476,15484]"/>
  <match src="comment: /*     Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [65032,65660]" dest="comment: /*     Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [58914,59542]"/>
  <match src="member_expression [6588,6602]" dest="member_expression [7152,7166]"/>
  <match src="primitive_type [9120,9124]" dest="primitive_type [9684,9688]"/>
  <match src="identifier: amount [98207,98213]" dest="identifier: amount [38967,38973]"/>
  <match src="call_expression [101700,101708]" dest="call_expression [61323,61331]"/>
  <match src="visibility [7477,7485]" dest="visibility [8041,8049]"/>
  <match src="function_definition [3190,3528]" dest="function_definition [3754,4092]"/>
  <match src="variable_declaration_statement [77274,77371]" dest="variable_declaration_statement [65426,65509]"/>
  <match src="primitive_type [35754,35761]" dest="primitive_type [49132,49139]"/>
  <match src="identifier: _state [94229,94235]" dest="identifier: _state [34989,34995]"/>
  <match src="uint256: uint256 [82389,82396]" dest="uint256: uint256 [22011,22018]"/>
  <match src="array_access [90628,90648]" dest="array_access [31388,31408]"/>
  <match src="function: function [43707,43715]" dest="function: function [25811,25819]"/>
  <match src=".: . [76878,76879]" dest=".: . [65040,65041]"/>
  <match src="parameter [49679,49683]" dest="parameter [14386,14390]"/>
  <match src="[: [ [98107,98108]" dest="[: [ [38867,38868]"/>
  <match src="=: = [96287,96288]" dest="=: = [37047,37048]"/>
  <match src="(: ( [64110,64111]" dest="(: ( [56786,56787]"/>
  <match src="identifier: dollar [76332,76338]" dest="identifier: dollar [64610,64616]"/>
  <match src="]: ] [98675,98676]" dest="]: ] [39435,39436]"/>
  <match src="number_literal: 1 [90027,90028]" dest="number_literal: 1 [30787,30788]"/>
  <match src="): ) [77369,77370]" dest="): ) [65480,65481]"/>
  <match src="member_expression [9544,9554]" dest="member_expression [10108,10118]"/>
  <match src="identifier: value [6347,6352]" dest="identifier: value [6911,6916]"/>
  <match src="): ) [86845,86846]" dest="): ) [27605,27606]"/>
  <match src="type_cast_expression [78933,78946]" dest="type_cast_expression [53462,53475]"/>
  <match src="call_argument [31867,31886]" dest="call_argument [45245,45264]"/>
  <match src="yul_identifier [33595,33601]" dest="yul_identifier [46973,46979]"/>
  <match src="type_name [87487,87494]" dest="type_name [28247,28254]"/>
  <match src="uint256: uint256 [46985,46992]" dest="uint256: uint256 [19683,19690]"/>
  <match src="variable_declaration [89534,89561]" dest="variable_declaration [30294,30321]"/>
  <match src="call_argument [31072,31098]" dest="call_argument [44450,44476]"/>
  <match src="identifier: msg [76599,76602]" dest="identifier: msg [64882,64885]"/>
  <match src="identifier: sender [77319,77325]" dest="identifier: sender [71925,71931]"/>
  <match src="struct_member [82194,82210]" dest="struct_member [21816,21832]"/>
  <match src="identifier: amount [70256,70262]" dest="identifier: amount [51451,51457]"/>
  <match src="identifier: transferFrom [93249,93261]" dest="identifier: transferFrom [34009,34021]"/>
  <match src="function_body [92029,92093]" dest="function_body [32789,32853]"/>
  <match src=".: . [94263,94264]" dest=".: . [35023,35024]"/>
  <match src="internal: internal [98032,98040]" dest="internal: internal [38792,38800]"/>
  <match src="address: address [12329,12336]" dest="address: address [17267,17274]"/>
  <match src="): ) [13763,13764]" dest="): ) [18701,18702]"/>
  <match src="identifier: result [36471,36477]" dest="identifier: result [49849,49855]"/>
  <match src="(: ( [91002,91003]" dest="(: ( [31762,31763]"/>
  <match src="): ) [88117,88118]" dest="): ) [28877,28878]"/>
  <match src="binary_expression [418,424]" dest="binary_expression [982,988]"/>
  <match src="identifier: getGovernancePeriod [43241,43260]" dest="identifier: getGovernancePeriod [25345,25364]"/>
  <match src="}: } [34669,34670]" dest="}: } [48047,48048]"/>
  <match src="primitive_type [19703,19710]" dest="primitive_type [58219,58226]"/>
  <match src="returns: returns [7499,7506]" dest="returns: returns [8063,8070]"/>
  <match src="{: { [373,374]" dest="{: { [937,938]"/>
  <match src=".: . [45992,45993]" dest=".: . [57021,57022]"/>
  <match src="): ) [87057,87058]" dest="): ) [27817,27818]"/>
  <match src="primitive_type [3225,3231]" dest="primitive_type [3789,3795]"/>
  <match src="identifier: onlyFrozen [77929,77939]" dest="identifier: onlyFrozenOrFluid [64833,64850]"/>
  <match src="address: address [96363,96370]" dest="address: address [37123,37130]"/>
  <match src="identifier: add [68748,68751]" dest="identifier: asUint256 [60430,60439]"/>
  <match src=",: , [27841,27842]" dest=",: , [41219,41220]"/>
  <match src="library_declaration [79944,80960]" dest="library_declaration [66766,67782]"/>
  <match src="return_statement [43184,43220]" dest="return_statement [25288,25324]"/>
  <match src="identifier: value [75327,75332]" dest="identifier: value [63799,63804]"/>
  <match src="identifier: b [9380,9381]" dest="identifier: b [9944,9945]"/>
  <match src="address: address [100239,100246]" dest="address: address [62596,62603]"/>
  <match src="identifier: FILE [78019,78023]" dest="identifier: FILE [53858,53862]"/>
  <match src="call_argument [32564,32572]" dest="call_argument [45942,45950]"/>
  <match src="identifier: reason [29819,29825]" dest="identifier: reason [43197,43203]"/>
  <match src="call_argument [17678,17684]" dest="call_argument [58508,58514]"/>
  <match src="(: ( [43761,43762]" dest="(: ( [25865,25866]"/>
  <match src="binary_expression [3369,3374]" dest="binary_expression [3933,3938]"/>
  <match src="type_name [50206,50213]" dest="type_name [14913,14920]"/>
  <match src="for: for [86105,86108]" dest="for: for [26865,26868]"/>
  <match src=".: . [92052,92053]" dest=".: . [32812,32813]"/>
  <match src="user_defined_type [6137,6141]" dest="user_defined_type [6701,6705]"/>
  <match src="call_struct_argument [8099,8129]" dest="call_struct_argument [8663,8693]"/>
  <match src="{: { [60372,60373]" dest="{: { [59577,59578]"/>
  <match src="return_type_definition [73176,73202]" dest="return_type_definition [52309,52344]"/>
  <match src="identifier: pool [82610,82614]" dest="identifier: pool [22232,22236]"/>
  <match src=",: , [97049,97050]" dest=",: , [37809,37810]"/>
  <match src="call_argument [30514,30519]" dest="call_argument [43892,43897]"/>
  <match src="identifier: statusOf [88556,88564]" dest="identifier: statusOf [29316,29324]"/>
  <match src="identifier: _state [95592,95598]" dest="identifier: _state [36352,36358]"/>
  <match src="=: = [41556,41557]" dest="=: = [23660,23661]"/>
  <match src="=: = [68814,68815]" dest="=: = [73694,73695]"/>
  <match src="return_statement [43927,43952]" dest="return_statement [26031,26056]"/>
  <match src="): ) [8241,8242]" dest="): ) [8805,8806]"/>
  <match src="primitive_type [30787,30794]" dest="primitive_type [44165,44172]"/>
  <match src="state_variable_declaration [5650,5681]" dest="state_variable_declaration [6214,6245]"/>
  <match src="internal: internal [6699,6707]" dest="internal: internal [7263,7271]"/>
  <match src="call_argument [76511,76521]" dest="call_argument [73487,73497]"/>
  <match src="uint256: uint256 [46922,46929]" dest="uint256: uint256 [19620,19627]"/>
  <match src="external: external [64018,64026]" dest="external: external [65837,65845]"/>
  <match src="(: ( [58953,58954]" dest="(: ( [20545,20546]"/>
  <match src="address: address [50138,50145]" dest="address: address [14845,14852]"/>
  <match src="identifier: incrementBalanceOfBonded [78619,78643]" dest="identifier: updateAllowanceCoupons [58071,58093]"/>
  <match src="): ) [6913,6914]" dest="): ) [7477,7478]"/>
  <match src="function_definition [7409,7759]" dest="function_definition [7973,8323]"/>
  <match src="call_argument [26218,26225]" dest="call_argument [51360,51367]"/>
  <match src="memory: memory [84740,84746]" dest="memory: memory [69415,69421]"/>
  <match src="array_access [95214,95238]" dest="array_access [35974,35998]"/>
  <match src="identifier: from [13724,13728]" dest="identifier: from [18662,18666]"/>
  <match src="): ) [8128,8129]" dest="): ) [8692,8693]"/>
  <match src="primitive_type [75595,75602]" dest="primitive_type [71071,71078]"/>
  <match src="state_variable_declaration [41693,41748]" dest="state_variable_declaration [23797,23852]"/>
  <match src="]: ] [94450,94451]" dest="]: ] [35210,35211]"/>
  <match src="user_defined_type [9082,9086]" dest="user_defined_type [9646,9650]"/>
  <match src=",: , [21135,21136]" dest=",: , [57718,57719]"/>
  <match src="memory: memory [35874,35880]" dest="memory: memory [49252,49258]"/>
  <match src="member_expression [89903,90046]" dest="member_expression [30663,30806]"/>
  <match src="member_expression [68732,68751]" dest="member_expression [60408,60439]"/>
  <match src="expression_statement [36529,36540]" dest="expression_statement [49907,49918]"/>
  <match src="identifier: reason [96733,96739]" dest="identifier: reason [37493,37499]"/>
  <match src="(: ( [97828,97829]" dest="(: ( [38588,38589]"/>
  <match src="identifier: D256 [7902,7906]" dest="identifier: D256 [8466,8470]"/>
  <match src=".: . [95081,95082]" dest=".: . [35841,35842]"/>
  <match src="): ) [32419,32420]" dest="): ) [45797,45798]"/>
  <match src="primitive_type [75013,75020]" dest="primitive_type [63690,63697]"/>
  <match src="member_expression [87307,87321]" dest="member_expression [28067,28081]"/>
  <match src=",: , [49285,49286]" dest=",: , [13992,13993]"/>
  <match src="return_type_definition [49585,49599]" dest="return_type_definition [14292,14306]"/>
  <match src="type_name [87977,87984]" dest="type_name [28737,28744]"/>
  <match src="type_name [51173,51180]" dest="type_name [15880,15887]"/>
  <match src="type_name [62559,62566]" dest="type_name [65917,65924]"/>
  <match src="type_alias [75000,75008]" dest="type_alias [63677,63685]"/>
  <match src="}: } [87438,87439]" dest="}: } [28198,28199]"/>
  <match src="identifier: amount1Out [50529,50539]" dest="identifier: amount1Out [15236,15246]"/>
  <match src="}: } [85395,85396]" dest="}: } [70070,70071]"/>
  <match src="state_mutability [91593,91597]" dest="state_mutability [32353,32357]"/>
  <match src="(: ( [94498,94499]" dest="(: ( [35258,35259]"/>
  <match src="return: return [89505,89511]" dest="return: return [30265,30271]"/>
  <match src="(: ( [8057,8058]" dest="(: ( [8621,8622]"/>
  <match src="identifier: value [10172,10177]" dest="identifier: value [10736,10741]"/>
  <match src="type_name [80418,80425]" dest="type_name [67240,67247]"/>
  <match src="identifier: amount [93173,93179]" dest="identifier: amount [33933,33939]"/>
  <match src="call_expression [19955,20026]" dest="call_expression [52161,52219]"/>
  <match src="array_access [88962,89010]" dest="array_access [29722,29770]"/>
  <match src=",: , [7447,7448]" dest=",: , [8011,8012]"/>
  <match src="call_argument [48388,48394]" dest="call_argument [58782,58788]"/>
  <match src="parameter [100239,100254]" dest="parameter [62596,62611]"/>
  <match src=",: , [31251,31252]" dest=",: , [44629,44630]"/>
  <match src="view: view [51016,51020]" dest="view: view [15723,15727]"/>
  <match src="(: ( [77509,77510]" dest="(: ( [66012,66013]"/>
  <match src="type_name [18996,19003]" dest="type_name [11766,11773]"/>
  <match src="return_statement [7895,7943]" dest="return_statement [8459,8507]"/>
  <match src="&quot;: &quot; [84812,84813]" dest="&quot;: &quot; [69487,69488]"/>
  <match src=".: . [94694,94695]" dest=".: . [35454,35455]"/>
  <match src="address: address [13939,13946]" dest="address: address [18877,18884]"/>
  <match src="call_argument [77146,77156]" dest="call_argument [66211,66221]"/>
  <match src="call_expression [76656,76691]" dest="call_expression [57319,57364]"/>
  <match src="event_paramater [48597,48601]" dest="event_paramater [55534,55555]"/>
  <match src="return_type_definition [87376,87393]" dest="return_type_definition [28136,28153]"/>
  <match src="primitive_type [51203,51207]" dest="primitive_type [15910,15914]"/>
  <match src="event: event [49230,49235]" dest="event: event [13937,13942]"/>
  <match src="memory: memory [9355,9361]" dest="memory: memory [9919,9925]"/>
  <match src="for: for [92961,92964]" dest="for: for [33721,33724]"/>
  <match src="identifier: D256 [43808,43812]" dest="identifier: D256 [25912,25916]"/>
  <match src="identifier: symbol [86403,86409]" dest="identifier: symbol [27163,27169]"/>
  <match src="): ) [89874,89875]" dest="): ) [30634,30635]"/>
  <match src="binary_expression [77988,78005]" dest="binary_expression [53827,53844]"/>
  <match src="): ) [88163,88164]" dest="): ) [28923,28924]"/>
  <match src="(: ( [19702,19703]" dest="(: ( [58218,58219]"/>
  <match src="string_literal [426,455]" dest="string_literal [990,1019]"/>
  <match src="if: if [33880,33882]" dest="if: if [47258,47260]"/>
  <match src="pure: pure [43151,43155]" dest="pure: pure [25255,25259]"/>
  <match src="returns: returns [9111,9118]" dest="returns: returns [9675,9682]"/>
  <match src=",: , [29507,29508]" dest=",: , [42885,42886]"/>
  <match src="(: ( [87856,87857]" dest="(: ( [28616,28617]"/>
  <match src=".: . [7920,7921]" dest=".: . [8484,8485]"/>
  <match src="(: ( [30240,30241]" dest="(: ( [43618,43619]"/>
  <match src="[: [ [98501,98502]" dest="[: [ [39261,39262]"/>
  <match src="bool: bool [84720,84724]" dest="bool: bool [69395,69399]"/>
  <match src="memory: memory [7792,7798]" dest="memory: memory [8356,8362]"/>
  <match src="visibility [31551,31559]" dest="visibility [44929,44937]"/>
  <match src="]: ] [96962,96963]" dest="]: ] [37722,37723]"/>
  <match src="(: ( [28598,28599]" dest="(: ( [41976,41977]"/>
  <match src="external: external [49571,49579]" dest="external: external [14278,14286]"/>
  <match src="identifier: amount [19746,19752]" dest="identifier: amount [58277,58283]"/>
  <match src="}: } [90674,90675]" dest="}: } [31434,31435]"/>
  <match src="(: ( [7538,7539]" dest="(: ( [8102,8103]"/>
  <match src="uint256: uint256 [65833,65840]" dest="uint256: uint256 [59696,59703]"/>
  <match src="parameter [31459,31468]" dest="parameter [44837,44846]"/>
  <match src="visibility [87956,87962]" dest="visibility [28716,28722]"/>
  <match src="member_expression [91909,91926]" dest="member_expression [32669,32686]"/>
  <match src=",: , [50215,50216]" dest=",: , [14922,14923]"/>
  <match src="function_body [43417,43481]" dest="function_body [25521,25585]"/>
  <match src=".: . [58915,58916]" dest=".: . [20507,20508]"/>
  <match src="(: ( [90264,90265]" dest="(: ( [31024,31025]"/>
  <match src="false [93113,93118]" dest="false [33873,33878]"/>
  <match src="member_expression [100000,100012]" dest="member_expression [62357,62369]"/>
  <match src="internal: internal [30840,30848]" dest="internal: internal [44218,44226]"/>
  <match src="event_paramater [75411,75434]" dest="event_paramater [74653,74676]"/>
  <match src="(: ( [45279,45280]" dest="(: ( [51376,51377]"/>
  <match src="function_definition [21806,22138]" dest="function_definition [57908,58188]"/>
  <match src="identifier: input [34712,34717]" dest="identifier: input [48090,48095]"/>
  <match src="address: address [30100,30107]" dest="address: address [43478,43485]"/>
  <match src="call_struct_argument [43060,43086]" dest="call_struct_argument [25164,25190]"/>
  <match src=".: . [95899,95900]" dest=".: . [36659,36660]"/>
  <match src="{: { [86879,86880]" dest="{: { [27639,27640]"/>
  <match src="address: address [11976,11983]" dest="address: address [16914,16921]"/>
  <match src="call_expression [28130,28156]" dest="call_expression [41508,41534]"/>
  <match src="call_argument [3369,3374]" dest="call_argument [3933,3938]"/>
  <match src="parameter [49624,49637]" dest="parameter [14331,14344]"/>
  <match src="identifier: _state [95697,95703]" dest="identifier: _state [36457,36463]"/>
  <match src="=: = [41925,41926]" dest="=: = [24029,24030]"/>
  <match src="call_expression [100496,100512]" dest="call_expression [62853,62869]"/>
  <match src="{: { [7885,7886]" dest="{: { [8449,8450]"/>
  <match src="type_name [3203,3210]" dest="type_name [3767,3774]"/>
  <match src="function: function [96783,96791]" dest="function: function [37543,37551]"/>
  <match src="identifier: accounts [94990,94998]" dest="identifier: accounts [35750,35758]"/>
  <match src="user_defined_type [9987,9991]" dest="user_defined_type [10551,10555]"/>
  <match src="identifier: dollar [82562,82568]" dest="identifier: dollar [22184,22190]"/>
  <match src="uint: uint [50110,50114]" dest="uint: uint [14817,14821]"/>
  <match src="(: ( [76510,76511]" dest="(: ( [73486,73487]"/>
  <match src="}: } [44051,44052]" dest="}: } [26155,26156]"/>
  <match src="state_variable_declaration [75235,75274]" dest="state_variable_declaration [63704,63746]"/>
  <match src="address: address [94614,94621]" dest="address: address [35374,35381]"/>
  <match src="primitive_type [88338,88345]" dest="primitive_type [29098,29105]"/>
  <match src="(: ( [72339,72340]" dest="(: ( [55971,55972]"/>
  <match src=".: . [95974,95975]" dest=".: . [36734,36735]"/>
  <match src="=: = [96140,96141]" dest="=: = [36900,36901]"/>
  <match src="comment: // find the last non-zero byte in order to determine the length [33319,33382]" dest="comment: // find the last non-zero byte in order to determine the length [46697,46760]"/>
  <match src="emit: emit [77815,77819]" dest="emit: emit [65729,65733]"/>
  <match src=".: . [8880,8881]" dest=".: . [9444,9445]"/>
  <match src="{: { [86340,86341]" dest="{: { [27100,27101]"/>
  <match src="parameter [7787,7803]" dest="parameter [8351,8367]"/>
  <match src="visibility [71218,71226]" dest="visibility [52021,52029]"/>
  <match src="}: } [43848,43849]" dest="}: } [25952,25953]"/>
  <match src="view: view [90287,90291]" dest="view: view [31047,31051]"/>
  <match src="identifier: candidates [98491,98501]" dest="identifier: candidates [39251,39261]"/>
  <match src=".: . [90472,90473]" dest=".: . [31232,31233]"/>
  <match src="state_mutability [42652,42656]" dest="state_mutability [24756,24760]"/>
  <match src="type_name [30126,30133]" dest="type_name [43504,43511]"/>
  <match src="return_statement [33660,33674]" dest="return_statement [47038,47052]"/>
  <match src="returns: returns [6297,6304]" dest="returns: returns [6861,6868]"/>
  <match src="function_body [43917,43958]" dest="function_body [26021,26062]"/>
  <match src="!=: != [21985,21987]" dest="!=: != [58000,58002]"/>
  <match src="identifier: COMMA [31277,31282]" dest="identifier: COMMA [44655,44660]"/>
  <match src="expression_statement [2008,2065]" dest="expression_statement [2572,2629]"/>
  <match src="identifier: _state [96672,96678]" dest="identifier: _state [37432,37438]"/>
  <match src="function: function [34676,34684]" dest="function: function [48054,48062]"/>
  <match src="is: is [74962,74964]" dest="is: is [63642,63644]"/>
  <match src="): ) [77803,77804]" dest="): ) [51763,51764]"/>
  <match src="identifier: b [9094,9095]" dest="identifier: b [9658,9659]"/>
  <match src="constant: constant [41518,41526]" dest="constant: constant [23622,23630]"/>
  <match src="identifier: that [77970,77974]" dest="identifier: that [53809,53813]"/>
  <match src="user_defined_type [7071,7075]" dest="user_defined_type [7635,7639]"/>
  <match src="binary_expression [9544,9559]" dest="binary_expression [10108,10123]"/>
  <match src="identifier: Global [81942,81948]" dest="identifier: Global [21564,21570]"/>
  <match src="identifier: allowanceCoupons [88866,88882]" dest="identifier: allowanceCoupons [29626,29642]"/>
  <match src="identifier: one [5954,5957]" dest="identifier: one [6518,6521]"/>
  <match src="variable_declaration_statement [1348,1366]" dest="variable_declaration_statement [1912,1930]"/>
  <match src="): ) [76010,76011]" dest="): ) [64558,64559]"/>
  <match src="solidity: solidity [7,15]" dest="solidity: solidity [7,15]"/>
  <match src="string_literal [19141,19180]" dest="string_literal [64180,64201]"/>
  <match src="function: function [1204,1212]" dest="function: function [1768,1776]"/>
  <match src="source_file [0,102131]" dest="source_file [0,75389]"/>
  <match src="address: address [25755,25762]" dest="address: address [55276,55283]"/>
  <match src=".: . [9662,9663]" dest=".: . [10226,10227]"/>
  <match src="primitive_type [50322,50329]" dest="primitive_type [15029,15036]"/>
  <match src="(: ( [7572,7573]" dest="(: ( [8136,8137]"/>
  <match src="member_expression [10160,10167]" dest="member_expression [10724,10731]"/>
  <match src="type_name [58908,58920]" dest="type_name [20500,20512]"/>
  <match src="(: ( [89169,89170]" dest="(: ( [29929,29930]"/>
  <match src="for: for [33127,33130]" dest="for: for [46505,46508]"/>
  <match src="identifier: D256 [6843,6847]" dest="identifier: D256 [7407,7411]"/>
  <match src="visibility [42265,42272]" dest="visibility [24369,24376]"/>
  <match src="type_cast_expression [36857,36891]" dest="type_cast_expression [50235,50269]"/>
  <match src="modifier_invocation [76021,76043]" dest="modifier_invocation [65355,65384]"/>
  <match src="return_statement [43427,43475]" dest="return_statement [25531,25579]"/>
  <match src="returns: returns [49817,49824]" dest="returns: returns [14524,14531]"/>
  <match src=",: , [95850,95851]" dest=",: , [36610,36611]"/>
  <match src="comment: // Can participate in balance-dependant activities [100156,100206]" dest="comment: // Can participate in balance-dependant activities [62513,62563]"/>
  <match src="visibility [90719,90725]" dest="visibility [31479,31485]"/>
  <match src="}: } [61826,61827]" dest="}: } [61548,61549]"/>
  <match src="++: ++ [35223,35225]" dest="++: ++ [48601,48603]"/>
  <match src="=&gt;: =&gt; [81773,81775]" dest="=&gt;: =&gt; [21395,21397]"/>
  <match src="emit: emit [76500,76504]" dest="emit: emit [73475,73479]"/>
  <match src="): ) [31380,31381]" dest="): ) [44758,44759]"/>
  <match src="return: return [86999,87005]" dest="return: return [27759,27765]"/>
  <match src="contract: contract [83063,83071]" dest="contract: contract [22685,22693]"/>
  <match src="(: ( [76598,76599]" dest="(: ( [64881,64882]"/>
  <match src="(: ( [7421,7422]" dest="(: ( [7985,7986]"/>
  <match src="primitive_type [51487,51494]" dest="primitive_type [16194,16201]"/>
  <match src="}: } [7402,7403]" dest="}: } [7966,7967]"/>
  <match src="state_mutability [64122,64126]" dest="state_mutability [56810,56814]"/>
  <match src=",: , [23079,23080]" dest=",: , [51580,51581]"/>
  <match src="visibility [27898,27906]" dest="visibility [41276,41284]"/>
  <match src="function: function [97219,97227]" dest="function: function [37979,37987]"/>
  <match src="visibility [36633,36640]" dest="visibility [50011,50018]"/>
  <match src="call_expression [85139,85268]" dest="call_expression [69814,69943]"/>
  <match src="primitive_type [33852,33857]" dest="primitive_type [47230,47235]"/>
  <match src="function: function [9959,9967]" dest="function: function [10523,10531]"/>
  <match src="identifier: fluidUntil [96276,96286]" dest="identifier: fluidUntil [37036,37046]"/>
  <match src=".: . [7932,7933]" dest=".: . [8496,8497]"/>
  <match src=",: , [75317,75318]" dest=",: , [63789,63790]"/>
  <match src="primitive_type [95454,95461]" dest="primitive_type [36214,36221]"/>
  <match src="call_expression [78085,78201]" dest="call_expression [72797,72902]"/>
  <match src="type_name [86078,86085]" dest="type_name [26838,26845]"/>
  <match src="string: string [28429,28435]" dest="string: string [41807,41813]"/>
  <match src="number_literal: 4 [35584,35585]" dest="number_literal: 4 [48962,48963]"/>
  <match src="function_body [63071,63618]" dest="function_body [60617,60941]"/>
  <match src="member_expression [98446,98463]" dest="member_expression [39206,39223]"/>
  <match src="}: } [91273,91274]" dest="}: } [32033,32034]"/>
  <match src="primitive_type [95836,95843]" dest="primitive_type [36596,36603]"/>
  <match src="identifier: accounts [96616,96624]" dest="identifier: accounts [37376,37384]"/>
  <match src="call_argument [36761,36786]" dest="call_argument [50139,50164]"/>
  <match src=",: , [98605,98606]" dest=",: , [39365,39366]"/>
  <match src="member_expression [78888,78900]" dest="member_expression [53417,53429]"/>
  <match src="call_expression [77601,77681]" dest="call_expression [57425,57483]"/>
  <match src="identifier: sender [76937,76943]" dest="identifier: sender [65671,65677]"/>
  <match src=",: , [17684,17685]" dest=",: , [58514,58515]"/>
  <match src="primitive_type [70054,70061]" dest="primitive_type [74541,74548]"/>
  <match src="type_name [94392,94399]" dest="type_name [35152,35159]"/>
  <match src="identifier: D256 [6764,6768]" dest="identifier: D256 [7328,7332]"/>
  <match src="call_argument [73648,73652]" dest="call_argument [72615,72624]"/>
  <match src="calldata: calldata [51367,51375]" dest="calldata: calldata [16074,16082]"/>
  <match src="identifier: balanceOfRewardedWithPhantom [68785,68813]" dest="identifier: bonded [71902,71908]"/>
  <match src="call_expression [78212,78349]" dest="call_expression [71267,71377]"/>
  <match src="(: ( [43446,43447]" dest="(: ( [25550,25551]"/>
  <match src="identifier: reject [98715,98721]" dest="identifier: reject [39475,39481]"/>
  <match src="memory: memory [7601,7607]" dest="memory: memory [8165,8171]"/>
  <match src="{: { [6012,6013]" dest="{: { [6576,6577]"/>
  <match src="type_name [31500,31507]" dest="type_name [44878,44885]"/>
  <match src="returns: returns [9869,9876]" dest="returns: returns [10433,10440]"/>
  <match src="parameter [90570,90579]" dest="parameter [31330,31339]"/>
  <match src="type_name [50197,50202]" dest="type_name [14904,14909]"/>
  <match src="): ) [88087,88088]" dest="): ) [28847,28848]"/>
  <match src="returns: returns [33843,33850]" dest="returns: returns [47221,47228]"/>
  <match src="member_expression [8106,8120]" dest="member_expression [8670,8684]"/>
  <match src="internal: internal [43263,43271]" dest="internal: internal [25367,25375]"/>
  <match src="identifier: _state [98051,98057]" dest="identifier: _state [38811,38817]"/>
  <match src="binary_expression [98973,98994]" dest="binary_expression [39733,39754]"/>
  <match src="view: view [90726,90730]" dest="view: view [31486,31490]"/>
  <match src="comment: // return ASCII letter (a-f) [36808,36836]" dest="comment: // return ASCII letter (a-f) [50186,50214]"/>
  <match src="type_name [82578,82585]" dest="type_name [22200,22207]"/>
  <match src="function_definition [30012,30667]" dest="function_definition [43390,44045]"/>
  <match src="call_argument [84846,84853]" dest="call_argument [69521,69528]"/>
  <match src="(: ( [47075,47076]" dest="(: ( [19773,19774]"/>
  <match src=",: , [50923,50924]" dest=",: , [15630,15631]"/>
  <match src="identifier: debt [93954,93958]" dest="identifier: debt [34714,34718]"/>
  <match src="]: ] [95569,95570]" dest="]: ] [36329,36330]"/>
  <match src="return_statement [88210,88219]" dest="return_statement [28970,28979]"/>
  <match src=",: , [30488,30489]" dest=",: , [43866,43867]"/>
  <match src="primitive_type [93056,93063]" dest="primitive_type [33816,33823]"/>
  <match src="identifier: deadline [45403,45411]" dest="identifier: newSupply [52289,52298]"/>
  <match src="parameter [87487,87494]" dest="parameter [28247,28254]"/>
  <match src="identifier: Account [88603,88610]" dest="identifier: Account [29363,29370]"/>
  <match src="comment: // 33% [42073,42079]" dest="comment: // 33% [24177,24183]"/>
  <match src=".: . [78895,78896]" dest=".: . [53424,53425]"/>
  <match src="function: function [91548,91556]" dest="function: function [32308,32316]"/>
  <match src="identifier: Upgraded [84886,84894]" dest="identifier: Upgraded [69561,69569]"/>
  <match src="): ) [49380,49381]" dest="): ) [14087,14088]"/>
  <match src="state_variable_declaration [27432,27474]" dest="state_variable_declaration [40810,40852]"/>
  <match src="]: ] [35009,35010]" dest="]: ] [48387,48388]"/>
  <match src="return_type_definition [13509,13523]" dest="return_type_definition [18447,18461]"/>
  <match src="type_alias [67021,67029]" dest="type_alias [70766,70774]"/>
  <match src="return: return [1952,1958]" dest="return: return [2516,2522]"/>
  <match src="identifier: recipient [19727,19736]" dest="identifier: recipient [58243,58252]"/>
  <match src="call_argument [97346,97351]" dest="call_argument [38106,38111]"/>
  <match src=",: , [4061,4062]" dest=",: , [4625,4626]"/>
  <match src="comment: // ============ Private Functions ============ [32758,32804]" dest="comment: // ============ Private Functions ============ [46136,46182]"/>
  <match src="uint256: uint256 [6255,6262]" dest="uint256: uint256 [6819,6826]"/>
  <match src=".: . [94433,94434]" dest=".: . [35193,35194]"/>
  <match src="parameter [43396,43415]" dest="parameter [25500,25519]"/>
  <match src="[: [ [95263,95264]" dest="[: [ [36023,36024]"/>
  <match src=",: , [31841,31842]" dest=",: , [45219,45220]"/>
  <match src="identifier: value [10162,10167]" dest="identifier: value [10726,10731]"/>
  <match src="if: if [31583,31585]" dest="if: if [44961,44963]"/>
  <match src="return_type_definition [88382,88399]" dest="return_type_definition [29142,29159]"/>
  <match src="identifier: BASE [6799,6803]" dest="identifier: BASE [7363,7367]"/>
  <match src="return_statement [33910,33921]" dest="return_statement [47288,47299]"/>
  <match src="contract_body [78,4769]" dest="contract_body [642,5333]"/>
  <match src="call_expression [61178,61296]" dest="call_expression [73105,73296]"/>
  <match src="&quot;: &quot; [77064,77065]" dest="&quot;: &quot; [65199,65200]"/>
  <match src="primitive_type [84395,84402]" dest="primitive_type [69070,69077]"/>
  <match src="view: view [51082,51086]" dest="view: view [15789,15793]"/>
  <match src="type_name [60415,60422]" dest="type_name [55072,55079]"/>
  <match src="event_paramater [75436,75449]" dest="event_paramater [55646,55659]"/>
  <match src=".: . [100007,100008]" dest=".: . [62364,62365]"/>
  <match src="identifier: epoch [82838,82843]" dest="identifier: epoch [22460,22465]"/>
  <match src="primitive_type [30126,30133]" dest="primitive_type [43504,43511]"/>
  <match src="primitive_type [98591,98598]" dest="primitive_type [39351,39358]"/>
  <match src="type_name [7508,7512]" dest="type_name [8072,8076]"/>
  <match src="uint256: uint256 [89193,89200]" dest="uint256: uint256 [29953,29960]"/>
  <match src="(: ( [51121,51122]" dest="(: ( [15828,15829]"/>
  <match src="identifier: sender [77150,77156]" dest="identifier: sender [66215,66221]"/>
  <match src="primitive_type [86583,86590]" dest="primitive_type [27343,27350]"/>
  <match src="call_argument [2636,2637]" dest="call_argument [3200,3201]"/>
  <match src="parameter [96552,96566]" dest="parameter [37312,37326]"/>
  <match src="parameter [3276,3283]" dest="parameter [3840,3847]"/>
  <match src="state_mutability [87164,87168]" dest="state_mutability [27924,27928]"/>
  <match src="&quot;: &quot; [76143,76144]" dest="&quot;: &quot; [64700,64701]"/>
  <match src="yul_evm_builtin [33580,33586]" dest="yul_evm_builtin [46958,46964]"/>
  <match src="type_name [86621,86628]" dest="type_name [27381,27388]"/>
  <match src="(: ( [91845,91846]" dest="(: ( [32605,32606]"/>
  <match src="identifier: reason [94202,94208]" dest="identifier: reason [34962,34968]"/>
  <match src="identifier: balanceCheck [78855,78867]" dest="identifier: balanceCheck [53384,53396]"/>
  <match src="(: ( [8514,8515]" dest="(: ( [9078,9079]"/>
  <match src="expression_statement [96251,96304]" dest="expression_statement [37011,37064]"/>
  <match src="&quot;: &quot; [25023,25024]" dest="&quot;: &quot; [71551,71552]"/>
  <match src="identifier: add [76672,76675]" dest="identifier: add [57332,57335]"/>
  <match src="[: [ [95967,95968]" dest="[: [ [36727,36728]"/>
  <match src="primitive_type [41604,41611]" dest="primitive_type [23708,23715]"/>
  <match src="primitive_type [82602,82609]" dest="primitive_type [22224,22231]"/>
  <match src="): ) [12359,12360]" dest="): ) [17297,17298]"/>
  <match src="array_access [33399,33408]" dest="array_access [46777,46786]"/>
  <match src="function: function [84607,84615]" dest="function: function [69282,69290]"/>
  <match src="number_literal: 0 [21996,21997]" dest="number_literal: 0 [58011,58012]"/>
  <match src=".: . [95042,95043]" dest=".: . [35802,35803]"/>
  <match src=",: , [98788,98789]" dest=",: , [39548,39549]"/>
  <match src="=: = [85292,85293]" dest="=: = [69967,69968]"/>
  <match src="member_expression [96142,96168]" dest="member_expression [36902,36928]"/>
  <match src="call_argument [75840,75845]" dest="call_argument [64413,64418]"/>
  <match src=",: , [6669,6670]" dest=",: , [7233,7234]"/>
  <match src="pure: pure [29581,29585]" dest="pure: pure [42959,42963]"/>
  <match src="call_argument [29084,29108]" dest="call_argument [42462,42486]"/>
  <match src="type_name [27674,27678]" dest="type_name [41052,41056]"/>
  <match src="): ) [75748,75749]" dest="): ) [64312,64313]"/>
  <match src="(: ( [35068,35069]" dest="(: ( [48446,48447]"/>
  <match src="primitive_type [2603,2610]" dest="primitive_type [3167,3174]"/>
  <match src=",: , [48581,48582]" dest=",: , [55532,55533]"/>
  <match src="): ) [35726,35727]" dest="): ) [49104,49105]"/>
  <match src="identifier: allowance [12319,12328]" dest="identifier: allowance [17257,17266]"/>
  <match src="(: ( [64135,64136]" dest="(: ( [56823,56824]"/>
  <match src="type_name [50451,50455]" dest="type_name [15158,15162]"/>
  <match src="identifier: account [46976,46983]" dest="identifier: account [19674,19681]"/>
  <match src="}: } [94308,94309]" dest="}: } [35068,35069]"/>
  <match src="type_name [45395,45402]" dest="type_name [52281,52288]"/>
  <match src="=: = [99893,99894]" dest="=: = [62250,62251]"/>
  <match src="member_expression [77146,77156]" dest="member_expression [66211,66221]"/>
  <match src="identifier: balance [93656,93663]" dest="identifier: balance [34416,34423]"/>
  <match src="visibility [63921,63929]" dest="visibility [64082,64090]"/>
  <match src="type_name [13484,13491]" dest="type_name [18422,18429]"/>
  <match src="call_argument [93675,93681]" dest="call_argument [34435,34441]"/>
  <match src=".: . [72335,72336]" dest=".: . [55967,55968]"/>
  <match src="expression_statement [77243,77264]" dest="expression_statement [65886,65907]"/>
  <match src="(: ( [96168,96169]" dest="(: ( [36928,36929]"/>
  <match src="for: for [70050,70053]" dest="for: for [74537,74540]"/>
  <match src="identifier: reason [94768,94774]" dest="identifier: reason [35528,35534]"/>
  <match src="primitive_type [22922,22929]" dest="primitive_type [11576,11583]"/>
  <match src="identifier: bootstrappingAt [90815,90830]" dest="identifier: bootstrappingAt [31575,31590]"/>
  <match src="parameter [93297,93311]" dest="parameter [34057,34071]"/>
  <match src="parameter [93056,93070]" dest="parameter [33816,33830]"/>
  <match src="uint256: uint256 [4030,4037]" dest="uint256: uint256 [4594,4601]"/>
  <match src="call_expression [79148,79161]" dest="call_expression [65964,65977]"/>
  <match src="string: string [49344,49350]" dest="string: string [14051,14057]"/>
  <match src="pure: pure [350,354]" dest="pure: pure [914,918]"/>
  <match src="member_expression [98256,98273]" dest="member_expression [39016,39033]"/>
  <match src=".: . [98079,98080]" dest=".: . [38839,38840]"/>
  <match src="): ) [43548,43549]" dest="): ) [25652,25653]"/>
  <match src="identifier: value [77638,77643]" dest="identifier: epoch [57463,57468]"/>
  <match src="type_name [8797,8801]" dest="type_name [9361,9365]"/>
  <match src="): ) [88617,88618]" dest="): ) [29377,29378]"/>
  <match src="state_mutability [6119,6123]" dest="state_mutability [6683,6687]"/>
  <match src="{: { [2612,2613]" dest="{: { [3176,3177]"/>
  <match src="(: ( [31614,31615]" dest="(: ( [44992,44993]"/>
  <match src="pure: pure [43995,43999]" dest="pure: pure [26099,26103]"/>
  <match src="call_expression [8326,8357]" dest="call_expression [8890,8921]"/>
  <match src="(: ( [51202,51203]" dest="(: ( [15909,15910]"/>
  <match src="primitive_type [35894,35899]" dest="primitive_type [49272,49277]"/>
  <match src="type_name [44009,44016]" dest="type_name [26113,26120]"/>
  <match src="call_expression [8312,8360]" dest="call_expression [8876,8924]"/>
  <match src=",: , [85358,85359]" dest=",: , [70033,70034]"/>
  <match src="parameter [51315,51330]" dest="parameter [16022,16037]"/>
  <match src="identifier: _state [94462,94468]" dest="identifier: _state [35222,35228]"/>
  <match src="returns: returns [90292,90299]" dest="returns: returns [31052,31059]"/>
  <match src="private: private [42029,42036]" dest="private: private [24133,24140]"/>
  <match src="(: ( [7708,7709]" dest="(: ( [8272,8273]"/>
  <match src="primitive_type [13730,13737]" dest="primitive_type [18668,18675]"/>
  <match src="identifier: payloadB [29335,29343]" dest="identifier: payloadB [42713,42721]"/>
  <match src="parameter [9987,10000]" dest="parameter [10551,10564]"/>
  <match src="block_statement [31594,31983]" dest="block_statement [44972,45361]"/>
  <match src="memory: memory [9214,9220]" dest="memory: memory [9778,9784]"/>
  <match src="function_body [94050,94132]" dest="function_body [34810,34892]"/>
  <match src="primitive_type [50292,50296]" dest="primitive_type [14999,15003]"/>
  <match src="parameter [2603,2610]" dest="parameter [3167,3174]"/>
  <match src="parameter [21071,21085]" dest="parameter [51801,51815]"/>
  <match src="identifier: add [7774,7777]" dest="identifier: add [8338,8341]"/>
  <match src="state_variable_declaration [41887,41933]" dest="state_variable_declaration [23991,24037]"/>
  <match src="array_access [96609,96631]" dest="array_access [37369,37391]"/>
  <match src="primitive_type [91167,91174]" dest="primitive_type [31927,31934]"/>
  <match src="identifier: getGovernanceQuorum [43351,43370]" dest="identifier: getGovernanceQuorum [25455,25474]"/>
  <match src="parameter [49556,49569]" dest="parameter [14263,14276]"/>
  <match src="state_mutability [28946,28950]" dest="state_mutability [42324,42328]"/>
  <match src=",: , [97844,97845]" dest=",: , [38604,38605]"/>
  <match src="view: view [90145,90149]" dest="view: view [30905,30909]"/>
  <match src="}: } [92273,92274]" dest="}: } [33033,33034]"/>
  <match src="for_statement [33127,33698]" dest="for_statement [46505,47076]"/>
  <match src="binary_expression [34310,34315]" dest="binary_expression [47688,47693]"/>
  <match src="identifier: candidate [98005,98014]" dest="identifier: candidate [38765,38774]"/>
  <match src="identifier: self [8106,8110]" dest="identifier: self [8670,8674]"/>
  <match src="member_expression [94516,94530]" dest="member_expression [35276,35290]"/>
  <match src="uint: uint [51282,51286]" dest="uint: uint [15989,15993]"/>
  <match src="(: ( [76675,76676]" dest="(: ( [57335,57336]"/>
  <match src="(: ( [89736,89737]" dest="(: ( [30496,30497]"/>
  <match src="identifier: b [3369,3370]" dest="identifier: b [3933,3934]"/>
  <match src="uint: uint [49287,49291]" dest="uint: uint [13994,13998]"/>
  <match src="parameter [3225,3251]" dest="parameter [3789,3815]"/>
  <match src="identifier: account [25771,25778]" dest="identifier: account [55292,55299]"/>
  <match src=",: , [29858,29859]" dest=",: , [43236,43237]"/>
  <match src="visibility [42643,42651]" dest="visibility [24747,24755]"/>
  <match src="update_expression [34463,34466]" dest="update_expression [47841,47844]"/>
  <match src="=: = [27523,27524]" dest="=: = [40901,40902]"/>
  <match src="identifier: staged [95239,95245]" dest="identifier: staged [35999,36005]"/>
  <match src="function_definition [49605,49685]" dest="function_definition [14312,14392]"/>
  <match src="function_body [91748,91819]" dest="function_body [32508,32579]"/>
  <match src="): ) [91716,91717]" dest="): ) [32476,32477]"/>
  <match src="return_type_definition [42657,42674]" dest="return_type_definition [24761,24778]"/>
  <match src="call_argument [29929,29935]" dest="call_argument [43307,43313]"/>
  <match src="): ) [86502,86503]" dest="): ) [27262,27263]"/>
  <match src="): ) [43516,43517]" dest="): ) [25620,25621]"/>
  <match src="identifier: current [82014,82021]" dest="identifier: current [21636,21643]"/>
  <match src="&gt;&gt;: &gt;&gt; [35581,35583]" dest="&gt;&gt;: &gt;&gt; [48959,48961]"/>
  <match src="primitive_type [96363,96370]" dest="primitive_type [37123,37130]"/>
  <match src="return_statement [87506,87533]" dest="return_statement [28266,28293]"/>
  <match src="member_expression [77315,77325]" dest="member_expression [71921,71931]"/>
  <match src="identifier: epoch [95606,95611]" dest="identifier: epoch [36366,36371]"/>
  <match src="identifier: value [75669,75674]" dest="identifier: value [55565,55570]"/>
  <match src="function: function [97968,97976]" dest="function: function [38728,38736]"/>
  <match src="function_definition [99079,99192]" dest="function_definition [39839,39952]"/>
  <match src="}: } [90939,90940]" dest="}: } [31699,31700]"/>
  <match src="}: } [6385,6386]" dest="}: } [6949,6950]"/>
  <match src="(: ( [51070,51071]" dest="(: ( [15777,15778]"/>
  <match src="return_statement [36845,36893]" dest="return_statement [50223,50271]"/>
  <match src="(: ( [78769,78770]" dest="(: ( [54177,54178]"/>
  <match src="): ) [76689,76690]" dest="): ) [57362,57363]"/>
  <match src="comment: /*     Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [92276,92904]" dest="comment: /*     Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [73818,74446]"/>
  <match src="call_argument [35543,35560]" dest="call_argument [48921,48938]"/>
  <match src="parameter [92023,92027]" dest="parameter [32783,32787]"/>
  <match src="block_statement [7547,7586]" dest="block_statement [8111,8150]"/>
  <match src="(: ( [8986,8987]" dest="(: ( [9550,9551]"/>
  <match src="): ) [100308,100309]" dest="): ) [62665,62666]"/>
  <match src="uint256: uint256 [75661,75668]" dest="uint256: uint256 [55557,55564]"/>
  <match src="return_type_definition [89082,89099]" dest="return_type_definition [29842,29859]"/>
  <match src=",: , [93582,93583]" dest=",: , [34342,34343]"/>
  <match src="comment: // 100 ESD -&gt; 100M ESDS [41842,41865]" dest="comment: // 100 ESD -&gt; 100M ESDS [23946,23969]"/>
  <match src="(: ( [11577,11578]" dest="(: ( [16515,16516]"/>
  <match src="call_argument [45945,45964]" dest="call_argument [58531,58568]"/>
  <match src="primitive_type [41693,41700]" dest="primitive_type [23797,23804]"/>
  <match src="function: function [43597,43605]" dest="function: function [25701,25709]"/>
  <match src="visibility [67188,67194]" dest="visibility [74734,74740]"/>
  <match src="(: ( [28067,28068]" dest="(: ( [41445,41446]"/>
  <match src="member_expression [32271,32287]" dest="member_expression [45649,45665]"/>
  <match src="returns: returns [49396,49403]" dest="returns: returns [14103,14110]"/>
  <match src="return: return [89805,89811]" dest="return: return [30565,30571]"/>
  <match src="call_expression [76099,76179]" dest="call_expression [64656,64739]"/>
  <match src="primitive_type [87939,87946]" dest="primitive_type [28699,28706]"/>
  <match src="(: ( [80916,80917]" dest="(: ( [67738,67739]"/>
  <match src="parameter [4628,4637]" dest="parameter [5192,5201]"/>
  <match src="identifier: bonded [93640,93646]" dest="identifier: bonded [34400,34406]"/>
  <match src="binary_expression [33399,33413]" dest="binary_expression [46777,46791]"/>
  <match src="constant: constant [27722,27730]" dest="constant: constant [41100,41108]"/>
  <match src=",: , [77853,77854]" dest=",: , [65767,65768]"/>
  <match src="binary_expression [35303,35308]" dest="binary_expression [48681,48686]"/>
  <match src="return_type_definition [90431,90448]" dest="return_type_definition [31191,31208]"/>
  <match src=".: . [96947,96948]" dest=".: . [37707,37708]"/>
  <match src="(: ( [31801,31802]" dest="(: ( [45179,45180]"/>
  <match src="identifier: value [75743,75748]" dest="identifier: value [64307,64312]"/>
  <match src="public: public [87364,87370]" dest="public: public [28124,28130]"/>
  <match src="type_name [65857,65864]" dest="type_name [64035,64042]"/>
  <match src="type_name [364,371]" dest="type_name [928,935]"/>
  <match src="function_definition [42952,43095]" dest="function_definition [25056,25199]"/>
  <match src="contract_body [81929,82218]" dest="contract_body [21551,21840]"/>
  <match src="function_definition [7229,7403]" dest="function_definition [7793,7967]"/>
  <match src="): ) [10109,10110]" dest="): ) [10673,10674]"/>
  <match src="&quot;: &quot; [79046,79047]" dest="&quot;: &quot; [53589,53590]"/>
  <match src=".: . [88501,88502]" dest=".: . [29261,29262]"/>
  <match src="(: ( [89701,89702]" dest="(: ( [30461,30462]"/>
  <match src="function_definition [43964,44050]" dest="function_definition [26068,26154]"/>
  <match src="call_expression [77485,77528]" dest="call_expression [65988,66031]"/>
  <match src="identifier: FILE [78144,78148]" dest="identifier: FILE [72859,72863]"/>
  <match src="binary_expression [36257,36262]" dest="binary_expression [49635,49640]"/>
  <match src="): ) [3283,3284]" dest="): ) [3847,3848]"/>
  <match src="primitive_type [67034,67041]" dest="primitive_type [70779,70786]"/>
  <match src="identifier: incrementTotalRedeemable [94000,94024]" dest="identifier: incrementTotalRedeemable [34760,34784]"/>
  <match src="constant: constant [27499,27507]" dest="constant: constant [40877,40885]"/>
  <match src="expression_statement [97152,97207]" dest="expression_statement [37912,37967]"/>
  <match src="call_expression [48352,48440]" dest="call_expression [58736,58829]"/>
  <match src="return_statement [92039,92087]" dest="return_statement [32799,32847]"/>
  <match src="call_argument [78814,78822]" dest="call_argument [72717,72721]"/>
  <match src="identifier: value [49218,49223]" dest="identifier: value [13925,13930]"/>
  <match src="call_argument [6989,7035]" dest="call_argument [7553,7599]"/>
  <match src="{: { [81949,81950]" dest="{: { [21571,21572]"/>
  <match src="pure: pure [27911,27915]" dest="pure: pure [41289,41293]"/>
  <match src="state_mutability [90853,90857]" dest="state_mutability [31613,31617]"/>
  <match src="struct_member [82059,82079]" dest="struct_member [21681,21701]"/>
  <match src=".: . [61796,61797]" dest=".: . [61503,61504]"/>
  <match src="): ) [89789,89790]" dest="): ) [30549,30550]"/>
  <match src="identifier: add [77847,77850]" dest="identifier: add [65761,65764]"/>
  <match src="type_name [95454,95461]" dest="type_name [36214,36221]"/>
  <match src="public: public [91586,91592]" dest="public: public [32346,32352]"/>
  <match src="identifier: staged [95051,95057]" dest="identifier: staged [35811,35817]"/>
  <match src="(: ( [89444,89445]" dest="(: ( [30204,30205]"/>
  <match src="identifier: totalDebt [87857,87866]" dest="identifier: totalDebt [28617,28626]"/>
  <match src="call_argument [96177,96183]" dest="call_argument [36937,36943]"/>
  <match src="identifier: account [11697,11704]" dest="identifier: account [16635,16642]"/>
  <match src="assignment_expression [94785,94850]" dest="assignment_expression [35545,35610]"/>
  <match src="call_argument [48220,48226]" dest="call_argument [58686,58692]"/>
  <match src="identifier: balance [94748,94755]" dest="identifier: balance [35508,35515]"/>
  <match src="type_name [38271,38278]" dest="type_name [58254,58261]"/>
  <match src="call_argument [53373,53410]" dest="call_argument [66156,66187]"/>
  <match src="(: ( [32331,32332]" dest="(: ( [45709,45710]"/>
  <match src="identifier: b [1663,1664]" dest="identifier: b [2227,2228]"/>
  <match src="type_name [50360,50364]" dest="type_name [15067,15071]"/>
  <match src="private: private [84131,84138]" dest="private: private [68806,68813]"/>
  <match src="primitive_type [46985,46992]" dest="primitive_type [19683,19690]"/>
  <match src=",: , [50514,50515]" dest=",: , [15221,15222]"/>
  <match src="state_variable_declaration [86128,86242]" dest="state_variable_declaration [26888,27002]"/>
  <match src="return: return [89896,89902]" dest="return: return [30656,30662]"/>
  <match src="primitive_type [50138,50145]" dest="primitive_type [14845,14852]"/>
  <match src="identifier: value [77057,77062]" dest="identifier: value [65192,65197]"/>
  <match src="identifier: pow [7418,7421]" dest="identifier: pow [7982,7985]"/>
  <match src="): ) [96588,96589]" dest="): ) [37348,37349]"/>
  <match src="member_expression [98484,98523]" dest="member_expression [39244,39283]"/>
  <match src="): ) [2578,2579]" dest="): ) [3142,3143]"/>
  <match src="{: { [43917,43918]" dest="{: { [26021,26022]"/>
  <match src="identifier: _ [79431,79432]" dest="identifier: _ [75379,75380]"/>
  <match src="function_body [90310,90373]" dest="function_body [31070,31133]"/>
  <match src=".: . [87121,87122]" dest=".: . [27881,27882]"/>
  <match src="identifier: abi [28007,28010]" dest="identifier: abi [41385,41388]"/>
  <match src="identifier: Fluid [88839,88844]" dest="identifier: Fluid [29599,29604]"/>
  <match src="): ) [49223,49224]" dest="): ) [13930,13931]"/>
  <match src="identifier: b [2577,2578]" dest="identifier: b [3141,3142]"/>
  <match src="call_expression [78675,78745]" dest="call_expression [57789,57830]"/>
  <match src="view: view [91325,91329]" dest="view: view [32085,32089]"/>
  <match src="(: ( [9877,9878]" dest="(: ( [10441,10442]"/>
  <match src="identifier: epochs [96948,96954]" dest="identifier: epochs [37708,37714]"/>
  <match src="(: ( [4689,4690]" dest="(: ( [5253,5254]"/>
  <match src="primitive_type [42666,42673]" dest="primitive_type [24770,24777]"/>
  <match src="identifier: name [49314,49318]" dest="identifier: name [14021,14025]"/>
  <match src="primitive_type [34141,34146]" dest="primitive_type [47519,47524]"/>
  <match src="identifier: supply [94531,94537]" dest="identifier: supply [35291,35297]"/>
  <match src="identifier: sub [830,833]" dest="identifier: sub [1394,1397]"/>
  <match src="(: ( [95679,95680]" dest="(: ( [36439,36440]"/>
  <match src="primitive_type [28815,28819]" dest="primitive_type [42193,42197]"/>
  <match src="identifier: GOVERNANCE_PERIOD [43312,43329]" dest="identifier: GOVERNANCE_PERIOD [25416,25433]"/>
  <match src="comment: /**      * @dev Emitted when `value` tokens are moved from one account (`from`) to      * another (`to`).      *      * Note that `value` may be zero.      */ [13530,13688]" dest="comment: /**      * @dev Emitted when `value` tokens are moved from one account (`from`) to      * another (`to`).      *      * Note that `value` may be zero.      */ [18468,18626]"/>
  <match src="call_argument [8317,8359]" dest="call_argument [8881,8923]"/>
  <match src=".: . [10161,10162]" dest=".: . [10725,10726]"/>
  <match src="user_defined_type [83084,83097]" dest="user_defined_type [22706,22719]"/>
  <match src="identifier: ASCII_LOWER_EX [36023,36037]" dest="identifier: ASCII_LOWER_EX [49401,49415]"/>
  <match src="{: { [88681,88682]" dest="{: { [29441,29442]"/>
  <match src="return_statement [4748,4761]" dest="return_statement [5312,5325]"/>
  <match src="internal: internal [26487,26495]" dest="internal: internal [59922,59930]"/>
  <match src="expression_statement [47999,48022]" dest="expression_statement [51108,51139]"/>
  <match src="(: ( [76070,76071]" dest="(: ( [65087,65088]"/>
  <match src="return_statement [91902,91948]" dest="return_statement [32662,32708]"/>
  <match src="pure: pure [49391,49395]" dest="pure: pure [14098,14102]"/>
  <match src="parameter [364,371]" dest="parameter [928,935]"/>
  <match src="parameter [30126,30142]" dest="parameter [43504,43520]"/>
  <match src="visibility [97886,97894]" dest="visibility [38646,38654]"/>
  <match src="{: { [99856,99857]" dest="{: { [62213,62214]"/>
  <match src="type_name [21839,21846]" dest="type_name [57932,57939]"/>
  <match src="returns: returns [50033,50040]" dest="returns: returns [14740,14747]"/>
  <match src="{: { [85129,85130]" dest="{: { [69804,69805]"/>
  <match src="(: ( [28435,28436]" dest="(: ( [41813,41814]"/>
  <match src=",: , [21998,21999]" dest=",: , [58013,58014]"/>
  <match src=",: , [96533,96534]" dest=",: , [37293,37294]"/>
  <match src="member_expression [99138,99178]" dest="member_expression [39898,39938]"/>
  <match src="identifier: a [4060,4061]" dest="identifier: a [4624,4625]"/>
  <match src="constant: constant [5658,5666]" dest="constant: constant [6222,6230]"/>
  <match src="ternary_expression [10160,10185]" dest="ternary_expression [10724,10749]"/>
  <match src="primitive_type [49344,49350]" dest="primitive_type [14051,14057]"/>
  <match src="identifier: msg [76032,76035]" dest="identifier: msg [65373,65376]"/>
  <match src="call_expression [21205,21273]" dest="call_expression [51867,51945]"/>
  <match src=",: , [19801,19802]" dest=",: , [58332,58333]"/>
  <match src="(: ( [11975,11976]" dest="(: ( [16913,16914]"/>
  <match src="identifier: Oracle [60354,60360]" dest="identifier: Regulator [59552,59561]"/>
  <match src="identifier: startFor [91158,91166]" dest="identifier: startFor [31918,31926]"/>
  <match src="&gt;: &gt; [3371,3372]" dest="&gt;: &gt; [3935,3936]"/>
  <match src="member_expression [76987,76997]" dest="member_expression [66135,66145]"/>
  <match src="call_argument [76599,76609]" dest="call_argument [64882,64892]"/>
  <match src="): ) [101992,101993]" dest="): ) [51843,51844]"/>
  <match src="primitive_type [29649,29655]" dest="primitive_type [43027,43033]"/>
  <match src="pure: pure [30853,30857]" dest="pure: pure [44231,44235]"/>
  <match src="identifier: coupons [90348,90355]" dest="identifier: coupons [31108,31115]"/>
  <match src="bytes32: bytes32 [50042,50049]" dest="bytes32: bytes32 [14749,14756]"/>
  <match src="bool: bool [91886,91890]" dest="bool: bool [32646,32650]"/>
  <match src="identifier: sub [98332,98335]" dest="identifier: sub [39092,39095]"/>
  <match src="variable_declaration_tuple [84719,84754]" dest="variable_declaration_tuple [69394,69429]"/>
  <match src="(: ( [50589,50590]" dest="(: ( [15296,15297]"/>
  <match src="+: + [36773,36774]" dest="+: + [50151,50152]"/>
  <match src="}: } [35595,35596]" dest="}: } [48973,48974]"/>
  <match src="primitive_type [29541,29548]" dest="primitive_type [42919,42926]"/>
  <match src="call_argument [64270,64274]" dest="call_argument [73391,73395]"/>
  <match src="address: address [86583,86590]" dest="address: address [27343,27350]"/>
  <match src="call_argument [78795,78805]" dest="call_argument [72694,72704]"/>
  <match src="type_name [87593,87600]" dest="type_name [28353,28360]"/>
  <match src="call_argument [96733,96739]" dest="call_argument [37493,37499]"/>
  <match src="identifier: Status [100055,100061]" dest="identifier: Status [62412,62418]"/>
  <match src="member_expression [43434,43446]" dest="member_expression [25538,25550]"/>
  <match src="library: library [5551,5558]" dest="library: library [6115,6122]"/>
  <match src="primitive_type [96520,96527]" dest="primitive_type [37280,37287]"/>
  <match src="return_statement [90178,90226]" dest="return_statement [30938,30986]"/>
  <match src="}: } [90231,90232]" dest="}: } [30991,30992]"/>
  <match src="(: ( [91790,91791]" dest="(: ( [32550,32551]"/>
  <match src="user_defined_type [92932,92939]" dest="user_defined_type [33692,33699]"/>
  <match src="identifier: D256 [6984,6988]" dest="identifier: D256 [7548,7552]"/>
  <match src="(: ( [29818,29819]" dest="(: ( [43196,43197]"/>
  <match src=".: . [94747,94748]" dest=".: . [35507,35508]"/>
  <match src="): ) [43737,43738]" dest="): ) [25841,25842]"/>
  <match src="identifier: approve [98080,98087]" dest="identifier: approve [38840,38847]"/>
  <match src="call_expression [36492,36515]" dest="call_expression [49870,49893]"/>
  <match src="identifier: initialized [100587,100598]" dest="identifier: initialized [62944,62955]"/>
  <match src="public: public [90280,90286]" dest="public: public [31040,31046]"/>
  <match src="call_argument [89951,89969]" dest="call_argument [30711,30729]"/>
  <match src="number_literal: 0 [9165,9166]" dest="number_literal: 0 [9729,9730]"/>
  <match src="member_expression [77419,77429]" dest="member_expression [65496,65506]"/>
  <match src="binary_expression [35405,35422]" dest="binary_expression [48783,48800]"/>
  <match src="identifier: account [68874,68881]" dest="identifier: account [73720,73727]"/>
  <match src="memory: memory [43021,43027]" dest="memory: memory [25125,25131]"/>
  <match src="external: external [51007,51015]" dest="external: external [15714,15722]"/>
  <match src="parameter [88391,88398]" dest="parameter [29151,29158]"/>
  <match src="if: if [10087,10089]" dest="if: if [10651,10653]"/>
  <match src="function: function [49425,49433]" dest="function: function [14132,14140]"/>
  <match src="(: ( [76202,76203]" dest="(: ( [52089,52090]"/>
  <match src=".: . [87012,87013]" dest=".: . [27772,27773]"/>
  <match src="]: ] [90667,90668]" dest="]: ] [31427,31428]"/>
  <match src="number_literal: 0 [34043,34044]" dest="number_literal: 0 [47421,47422]"/>
  <match src="return_statement [87996,88035]" dest="return_statement [28756,28795]"/>
  <match src=",: , [8813,8814]" dest=",: , [9377,9378]"/>
  <match src="primitive_type [88565,88572]" dest="primitive_type [29325,29332]"/>
  <match src="): ) [76609,76610]" dest="): ) [64892,64893]"/>
  <match src="visibility [28348,28356]" dest="visibility [41726,41734]"/>
  <match src="member_expression [94462,94494]" dest="member_expression [35222,35254]"/>
  <match src=".: . [77846,77847]" dest=".: . [65760,65761]"/>
  <match src="identifier: _state [88495,88501]" dest="identifier: _state [29255,29261]"/>
  <match src="uint256: uint256 [41787,41794]" dest="uint256: uint256 [23891,23898]"/>
  <match src="type_name [8395,8399]" dest="type_name [8959,8963]"/>
  <match src=",: , [51494,51495]" dest=",: , [16201,16202]"/>
  <match src="string [75267,75273]" dest="string [63736,63745]"/>
  <match src="identifier: Account [82925,82932]" dest="identifier: Account [22547,22554]"/>
  <match src="(: ( [96875,96876]" dest="(: ( [37635,37636]"/>
  <match src="identifier: newLock [99049,99056]" dest="identifier: newLock [39809,39816]"/>
  <match src="call_argument [29335,29343]" dest="call_argument [42713,42721]"/>
  <match src="=: = [89562,89563]" dest="=: = [30322,30323]"/>
  <match src="internal: internal [43885,43893]" dest="internal: internal [25989,25997]"/>
  <match src="call_argument [89989,90008]" dest="call_argument [30749,30768]"/>
  <match src="assembly: assembly [92214,92222]" dest="assembly: assembly [32974,32982]"/>
  <match src="): ) [5931,5932]" dest="): ) [6495,6496]"/>
  <match src="member_expression [94088,94117]" dest="member_expression [34848,34877]"/>
  <match src=",: , [58927,58928]" dest=",: , [20519,20520]"/>
  <match src="function_definition [75718,75973]" dest="function_definition [64282,64521]"/>
  <match src="struct_member [81856,81875]" dest="struct_member [21478,21497]"/>
  <match src="identifier: balanceOfCoupons [88321,88337]" dest="identifier: balanceOfCoupons [29081,29097]"/>
  <match src="[: [ [88648,88649]" dest="[: [ [29408,29409]"/>
  <match src="identifier: sender [77514,77520]" dest="identifier: sender [66017,66023]"/>
  <match src="primitive_type [63666,63673]" dest="primitive_type [56995,57002]"/>
  <match src="[: [ [34524,34525]" dest="[: [ [47902,47903]"/>
  <match src="library_declaration [5551,10194]" dest="library_declaration [6115,10758]"/>
  <match src="type_name [50925,50932]" dest="type_name [15632,15639]"/>
  <match src="(: ( [51449,51450]" dest="(: ( [16156,16157]"/>
  <match src=",: , [31015,31016]" dest=",: , [44393,44394]"/>
  <match src="type_name [97846,97853]" dest="type_name [38606,38613]"/>
  <match src="parameter [6888,6908]" dest="parameter [7452,7472]"/>
  <match src="member_expression [76778,76811]" dest="member_expression [64965,64998]"/>
  <match src="primitive_type [26162,26169]" dest="primitive_type [51286,51293]"/>
  <match src="call_argument [31783,31809]" dest="call_argument [45161,45187]"/>
  <match src="?: ? [10178,10179]" dest="?: ? [10742,10743]"/>
  <match src="user_defined_type [7787,7791]" dest="user_defined_type [8351,8355]"/>
  <match src="type_name [8193,8197]" dest="type_name [8757,8761]"/>
  <match src="return_type_definition [42446,42463]" dest="return_type_definition [24550,24567]"/>
  <match src="): ) [78770,78771]" dest="): ) [54178,54179]"/>
  <match src="type_name [8216,8222]" dest="type_name [8780,8786]"/>
  <match src="(: ( [21898,21899]" dest="(: ( [57026,57027]"/>
  <match src="identifier: payloadB [28914,28922]" dest="identifier: payloadB [42292,42300]"/>
  <match src="returns: returns [9623,9630]" dest="returns: returns [10187,10194]"/>
  <match src=".: . [97533,97534]" dest=".: . [38293,38294]"/>
  <match src="visibility [76012,76020]" dest="visibility [64560,64568]"/>
  <match src="=: = [35209,35210]" dest="=: = [48587,48588]"/>
  <match src="member_expression [78256,78266]" dest="member_expression [71303,71313]"/>
  <match src="): ) [8131,8132]" dest="): ) [8695,8696]"/>
  <match src=",: , [4723,4724]" dest=",: , [5287,5288]"/>
  <match src="identifier: newUniv2 [78824,78832]" dest="identifier: bonded [72723,72729]"/>
  <match src="type_name [9480,9484]" dest="type_name [10044,10048]"/>
  <match src="primitive_type [86433,86439]" dest="primitive_type [27193,27199]"/>
  <match src="identifier: coupons [97453,97460]" dest="identifier: coupons [38213,38220]"/>
  <match src="type_name [97829,97836]" dest="type_name [38589,38596]"/>
  <match src="identifier: isInitialized [91969,91982]" dest="identifier: isInitialized [32729,32742]"/>
  <match src="type_name [4690,4697]" dest="type_name [5254,5261]"/>
  <match src="expression_statement [97527,97572]" dest="expression_statement [38287,38332]"/>
  <match src="identifier: D256 [6340,6344]" dest="identifier: D256 [6904,6908]"/>
  <match src="member_expression [89989,90001]" dest="member_expression [30749,30761]"/>
  <match src="function: function [86564,86572]" dest="function: function [27324,27332]"/>
  <match src="parameter [98591,98605]" dest="parameter [39351,39365]"/>
  <match src="return_statement [44028,44044]" dest="return_statement [26132,26148]"/>
  <match src="uint256: uint256 [93860,93867]" dest="uint256: uint256 [34620,34627]"/>
  <match src="identifier: Decimal [63433,63440]" dest="identifier: Decimal [73696,73703]"/>
  <match src="(: ( [50711,50712]" dest="(: ( [15418,15419]"/>
  <match src="&quot;: &quot; [2666,2667]" dest="&quot;: &quot; [3230,3231]"/>
  <match src="number_literal: 1 [96876,96877]" dest="number_literal: 1 [37636,37637]"/>
  <match src="type_name [50072,50079]" dest="type_name [14779,14786]"/>
  <match src="variable_declaration_statement [92170,92205]" dest="variable_declaration_statement [32930,32965]"/>
  <match src="identifier: sender [76991,76997]" dest="identifier: sender [66139,66145]"/>
  <match src="identifier: file [28283,28287]" dest="identifier: file [41661,41665]"/>
  <match src=".: . [87321,87322]" dest=".: . [28081,28082]"/>
  <match src=".: . [90648,90649]" dest=".: . [31408,31409]"/>
  <match src="): ) [87867,87868]" dest="): ) [28627,28628]"/>
  <match src="public: public [87681,87687]" dest="public: public [28441,28447]"/>
  <match src="identifier: approveFor [91765,91775]" dest="identifier: approveFor [32525,32535]"/>
  <match src="address: address [11689,11696]" dest="address: address [16627,16634]"/>
  <match src="expression_statement [36471,36516]" dest="expression_statement [49849,49894]"/>
  <match src="type_name [27491,27498]" dest="type_name [40869,40876]"/>
  <match src="call_argument [79194,79224]" dest="call_argument [66069,66105]"/>
  <match src="type_name [4030,4037]" dest="type_name [4594,4601]"/>
  <match src="type_name [25705,25712]" dest="type_name [55396,55403]"/>
  <match src="{: { [87187,87188]" dest="{: { [27947,27948]"/>
  <match src="function_body [92160,92272]" dest="function_body [32920,33032]"/>
  <match src="variable_declaration_statement [80418,80431]" dest="variable_declaration_statement [67240,67253]"/>
  <match src="identifier: sender [75774,75780]" dest="identifier: sender [71249,71255]"/>
  <match src="primitive_type [30921,30927]" dest="primitive_type [44299,44305]"/>
  <match src="member_expression [88751,88844]" dest="member_expression [29511,29604]"/>
  <match src="public: public [67188,67194]" dest="public: public [74734,74740]"/>
  <match src="identifier: State [92925,92930]" dest="identifier: State [33685,33690]"/>
  <match src="primitive_type [42455,42462]" dest="primitive_type [24559,24566]"/>
  <match src="primitive_type [33132,33139]" dest="primitive_type [46510,46517]"/>
  <match src="bytes32: bytes32 [28297,28304]" dest="bytes32: bytes32 [41675,41682]"/>
  <match src="}: } [90516,90517]" dest="}: } [31276,31277]"/>
  <match src="type_name [6489,6496]" dest="type_name [7053,7060]"/>
  <match src="}: } [9684,9685]" dest="}: } [10248,10249]"/>
  <match src="call_argument [84895,84912]" dest="call_argument [69570,69587]"/>
  <match src="{: { [98638,98639]" dest="{: { [39398,39399]"/>
  <match src="[: [ [95605,95606]" dest="[: [ [36365,36366]"/>
  <match src="contract_body [82239,82503]" dest="contract_body [21861,22125]"/>
  <match src="identifier: msg [78795,78798]" dest="identifier: msg [72694,72697]"/>
  <match src="pure: pure [36645,36649]" dest="pure: pure [50023,50027]"/>
  <match src="number_literal: 10 [34087,34089]" dest="number_literal: 10 [47465,47467]"/>
  <match src="member_expression [94983,95018]" dest="member_expression [35743,35778]"/>
  <match src="struct_member [82676,82691]" dest="struct_member [22298,22313]"/>
  <match src="(: ( [89847,89848]" dest="(: ( [30607,30608]"/>
  <match src="parameter [29476,29485]" dest="parameter [42854,42863]"/>
  <match src="type_name [86128,86135]" dest="type_name [26888,26895]"/>
  <match src="identifier: stringifyTruncated [29165,29183]" dest="identifier: stringifyTruncated [42543,42561]"/>
  <match src="function: function [77193,77201]" dest="function: function [65315,65323]"/>
  <match src="primitive_type [34530,34534]" dest="primitive_type [47908,47912]"/>
  <match src="array_access [97905,97948]" dest="array_access [38665,38708]"/>
  <match src="(: ( [7018,7019]" dest="(: ( [7582,7583]"/>
  <match src="visibility [75750,75758]" dest="visibility [64314,64322]"/>
  <match src="call_expression [100587,100616]" dest="call_expression [62944,62973]"/>
  <match src=",: , [7713,7714]" dest=",: , [8277,8278]"/>
  <match src="block_statement [1938,1971]" dest="block_statement [2502,2535]"/>
  <match src="identifier: oracle [87122,87128]" dest="identifier: oracle [27882,27888]"/>
  <match src="primitive_type [90555,90562]" dest="primitive_type [31315,31322]"/>
  <match src="identifier: epoch [97044,97049]" dest="identifier: epoch [37804,37809]"/>
  <match src="primitive_type [73194,73201]" dest="primitive_type [52327,52334]"/>
  <match src="call_expression [31660,31940]" dest="call_expression [45038,45318]"/>
  <match src="identifier: coupons [95514,95521]" dest="identifier: coupons [36274,36281]"/>
  <match src="(: ( [33586,33587]" dest="(: ( [46964,46965]"/>
  <match src="identifier: b [1364,1365]" dest="identifier: b [1928,1929]"/>
  <match src="call_expression [100266,100397]" dest="call_expression [62623,62754]"/>
  <match src="[: [ [98665,98666]" dest="[: [ [39425,39426]"/>
  <match src="identifier: periodFor [98938,98947]" dest="identifier: periodFor [39698,39707]"/>
  <match src="string_literal [840,872]" dest="string_literal [1404,1436]"/>
  <match src="identifier: Approval [22099,22107]" dest="identifier: CouponApproval [58138,58152]"/>
  <match src="return_statement [36749,36788]" dest="return_statement [50127,50166]"/>
  <match src="call_expression [63167,63229]" dest="call_expression [60822,60847]"/>
  <match src="identifier: that [28242,28246]" dest="identifier: that [41620,41624]"/>
  <match src="[: [ [95546,95547]" dest="[: [ [36306,36307]"/>
  <match src="): ) [50882,50883]" dest="): ) [15589,15590]"/>
  <match src="): ) [97269,97270]" dest="): ) [38029,38030]"/>
  <match src="type_name [51147,51151]" dest="type_name [15854,15858]"/>
  <match src="identifier: coupons [81785,81792]" dest="identifier: coupons [21407,21414]"/>
  <match src=",: , [8206,8207]" dest=",: , [8770,8771]"/>
  <match src="private: private [41304,41311]" dest="private: private [23408,23415]"/>
  <match src="contract_declaration [74948,79441]" dest="contract_declaration [63625,66263]"/>
  <match src="type_name [49468,49473]" dest="type_name [14175,14180]"/>
  <match src="=: = [78397,78398]" dest="=: = [56267,56268]"/>
  <match src="returns: returns [86424,86431]" dest="returns: returns [27184,27191]"/>
  <match src="function: function [31436,31444]" dest="function: function [44814,44822]"/>
  <match src="returns: returns [91464,91471]" dest="returns: returns [32224,32231]"/>
  <match src="visibility [42329,42336]" dest="visibility [24433,24440]"/>
  <match src="type_name [98828,98835]" dest="type_name [39588,39595]"/>
  <match src="==: == [2022,2024]" dest="==: == [2586,2588]"/>
  <match src="function_definition [28792,29447]" dest="function_definition [42170,42825]"/>
  <match src="call_argument [1317,1323]" dest="call_argument [1881,1887]"/>
  <match src="comment: // ============ Constants ============ [5606,5644]" dest="comment: // ============ Constants ============ [6170,6208]"/>
  <match src="string [79194,79224]" dest="string [66069,66105]"/>
  <match src="public: public [86412,86418]" dest="public: public [27172,27178]"/>
  <match src=".: . [77430,77431]" dest=".: . [65481,65482]"/>
  <match src="{: { [8075,8076]" dest="{: { [8639,8640]"/>
  <match src="expression_statement [97438,97518]" dest="expression_statement [38198,38278]"/>
  <match src="primitive_type [88883,88890]" dest="primitive_type [29643,29650]"/>
  <match src="=: = [86173,86174]" dest="=: = [26933,26934]"/>
  <match src="call_argument [20123,20132]" dest="call_argument [58878,58887]"/>
  <match src="primitive_type [30696,30700]" dest="primitive_type [44074,44078]"/>
  <match src="=: = [34528,34529]" dest="=: = [47906,47907]"/>
  <match src="identifier: D256 [9987,9991]" dest="identifier: D256 [10551,10555]"/>
  <match src=".: . [93663,93664]" dest=".: . [34423,34424]"/>
  <match src="identifier: epoch [90412,90417]" dest="identifier: epoch [31172,31177]"/>
  <match src="primitive_type [11729,11736]" dest="primitive_type [16667,16674]"/>
  <match src="identifier: a [6094,6095]" dest="identifier: a [6658,6659]"/>
  <match src="&gt;: &gt; [9307,9308]" dest="&gt;: &gt; [9871,9872]"/>
  <match src="call_argument [28457,28737]" dest="call_argument [41835,42115]"/>
  <match src=".: . [97547,97548]" dest=".: . [38307,38308]"/>
  <match src="return_statement [97412,97419]" dest="return_statement [38172,38179]"/>
  <match src="type_name [97865,97879]" dest="type_name [38625,38639]"/>
  <match src="identifier: balance [94547,94554]" dest="identifier: balance [35307,35314]"/>
  <match src="type_alias [70041,70049]" dest="type_alias [74528,74536]"/>
  <match src="[: [ [96648,96649]" dest="[: [ [37408,37409]"/>
  <match src="address: address [46968,46975]" dest="address: address [19666,19673]"/>
  <match src="identifier: mint [51168,51172]" dest="identifier: mint [15875,15879]"/>
  <match src="function_body [90449,90517]" dest="function_body [31209,31277]"/>
  <match src="array_access [99010,99034]" dest="array_access [39770,39794]"/>
  <match src="identifier: account [26218,26225]" dest="identifier: account [51360,51367]"/>
  <match src="assignment_expression [36000,36039]" dest="assignment_expression [49378,49417]"/>
  <match src="(: ( [6798,6799]" dest="(: ( [7362,7363]"/>
  <match src="): ) [88580,88581]" dest="): ) [29340,29341]"/>
  <match src="visibility [93072,93080]" dest="visibility [33832,33840]"/>
  <match src="visibility [101471,101479]" dest="visibility [57663,57671]"/>
  <match src="identifier: candidate [97923,97932]" dest="identifier: candidate [38683,38692]"/>
  <match src="user_defined_type [62471,62483]" dest="user_defined_type [13331,13343]"/>
  <match src="identifier: candidates [98263,98273]" dest="identifier: candidates [39023,39033]"/>
  <match src="uint256: uint256 [45395,45402]" dest="uint256: uint256 [52281,52288]"/>
  <match src="identifier: that [27818,27822]" dest="identifier: that [41196,41200]"/>
  <match src="uint256: uint256 [5752,5759]" dest="uint256: uint256 [6316,6323]"/>
  <match src="bool: bool [27832,27836]" dest="bool: bool [41210,41214]"/>
  <match src="primitive_type [28256,28260]" dest="primitive_type [41634,41638]"/>
  <match src="identifier: mul [77431,77434]" dest="identifier: div [65482,65485]"/>
  <match src="=: = [95331,95332]" dest="=: = [36091,36092]"/>
  <match src="primitive_type [44009,44016]" dest="primitive_type [26113,26120]"/>
  <match src="[: [ [96711,96712]" dest="[: [ [37471,37472]"/>
  <match src="call_expression [4709,4738]" dest="call_expression [5273,5302]"/>
  <match src="(: ( [100495,100496]" dest="(: ( [62852,62853]"/>
  <match src="return_type_definition [13105,13119]" dest="return_type_definition [18043,18057]"/>
  <match src="identifier: candidates [91100,91110]" dest="identifier: candidates [31860,31870]"/>
  <match src="call_argument [45280,45284]" dest="call_argument [51377,51381]"/>
  <match src="identifier: that [30021,30025]" dest="identifier: that [43399,43403]"/>
  <match src=".: . [95570,95571]" dest=".: . [36330,36331]"/>
  <match src="return_type_definition [8844,8858]" dest="return_type_definition [9408,9422]"/>
  <match src="(: ( [98972,98973]" dest="(: ( [39732,39733]"/>
  <match src="}: } [82795,82796]" dest="}: } [22417,22418]"/>
  <match src="identifier: encodePacked [29681,29693]" dest="identifier: encodePacked [43059,43071]"/>
  <match src="private: private [10034,10041]" dest="private: private [10598,10605]"/>
  <match src="identifier: sender [77944,77950]" dest="identifier: sender [64855,64861]"/>
  <match src=",: , [50344,50345]" dest=",: , [15051,15052]"/>
  <match src="if_statement [36719,36798]" dest="if_statement [50097,50176]"/>
  <match src="): ) [96920,96921]" dest="): ) [37680,37681]"/>
  <match src="function: function [29453,29461]" dest="function: function [42831,42839]"/>
  <match src="identifier: couponAllowances [88985,89001]" dest="identifier: couponAllowances [29745,29761]"/>
  <match src="call_argument [88273,88280]" dest="call_argument [29033,29040]"/>
  <match src="inheritance_specifier [92932,92939]" dest="inheritance_specifier [33692,33699]"/>
  <match src="call_argument [35069,35083]" dest="call_argument [48447,48461]"/>
  <match src="identifier: balance [94067,94074]" dest="identifier: balance [34827,34834]"/>
  <match src="identifier: i [34525,34526]" dest="identifier: i [47903,47904]"/>
  <match src="member_expression [98295,98331]" dest="member_expression [39055,39091]"/>
  <match src="primitive_type [41969,41976]" dest="primitive_type [24073,24080]"/>
  <match src="identifier: amount [96725,96731]" dest="identifier: amount [37485,37491]"/>
  <match src="identifier: to [13746,13748]" dest="identifier: to [18684,18686]"/>
  <match src="state_mutability [59692,59696]" dest="state_mutability [73567,73571]"/>
  <match src="call_expression [89434,89446]" dest="call_expression [30194,30206]"/>
  <match src="): ) [28927,28928]" dest="): ) [42305,42306]"/>
  <match src="identifier: payloadA [30108,30116]" dest="identifier: payloadA [43486,43494]"/>
  <match src="return: return [7175,7181]" dest="return: return [7739,7745]"/>
  <match src="assignment_expression [94516,94573]" dest="assignment_expression [35276,35333]"/>
  <match src="member_expression [77358,77368]" dest="member_expression [65469,65479]"/>
  <match src="): ) [32572,32573]" dest="): ) [45950,45951]"/>
  <match src="array_access [98850,98874]" dest="array_access [39610,39634]"/>
  <match src="function_definition [43342,43481]" dest="function_definition [25446,25585]"/>
  <match src="identifier: liquidity [51208,51217]" dest="identifier: liquidity [15915,15924]"/>
  <match src="call_argument [93971,93977]" dest="call_argument [34731,34737]"/>
  <match src="(: ( [88882,88883]" dest="(: ( [29642,29643]"/>
  <match src="address: address [50374,50381]" dest="address: address [15081,15088]"/>
  <match src="state_mutability [30166,30170]" dest="state_mutability [43544,43548]"/>
  <match src="if: if [88629,88631]" dest="if: if [29389,29391]"/>
  <match src="function_definition [91681,91819]" dest="function_definition [32441,32579]"/>
  <match src="parameter [49708,49723]" dest="parameter [14415,14430]"/>
  <match src="identifier: to [50390,50392]" dest="identifier: to [15097,15099]"/>
  <match src="call_argument [31242,31250]" dest="call_argument [44620,44628]"/>
  <match src="uint256: uint256 [89294,89301]" dest="uint256: uint256 [30054,30061]"/>
  <match src="): ) [89622,89623]" dest="): ) [30382,30383]"/>
  <match src="identifier: mint [47918,47922]" dest="identifier: mintToAccount [51042,51055]"/>
  <match src="(: ( [28246,28247]" dest="(: ( [41624,41625]"/>
  <match src="call_argument [78256,78266]" dest="call_argument [71303,71313]"/>
  <match src="function_definition [86484,86558]" dest="function_definition [27244,27318]"/>
  <match src="call_argument [77729,77740]" dest="call_argument [72663,72672]"/>
  <match src="primitive_type [12384,12391]" dest="primitive_type [17322,17329]"/>
  <match src="yul_path [85360,85377]" dest="yul_path [70035,70052]"/>
  <match src="identifier: unfreeze [76590,76598]" dest="identifier: unfreeze [64873,64881]"/>
  <match src="type_name [5752,5759]" dest="type_name [6316,6323]"/>
  <match src="type_name [41969,41976]" dest="type_name [24073,24080]"/>
  <match src="call_argument [94843,94849]" dest="call_argument [35603,35609]"/>
  <match src="memory: memory [8604,8610]" dest="memory: memory [9168,9174]"/>
  <match src="parameter [97865,97884]" dest="parameter [38625,38644]"/>
  <match src="function: function [75979,75987]" dest="function: function [64527,64535]"/>
  <match src="identifier: ADVANCE_INCENTIVE [42124,42141]" dest="identifier: ADVANCE_INCENTIVE [24228,24245]"/>
  <match src="external: external [51185,51193]" dest="external: external [15892,15900]"/>
  <match src="parameter [98607,98627]" dest="parameter [39367,39387]"/>
  <match src="(: ( [84452,84453]" dest="(: ( [69127,69128]"/>
  <match src="-: - [35389,35390]" dest="-: - [48767,48768]"/>
  <match src=",: , [31327,31328]" dest=",: , [44705,44706]"/>
  <match src=".: . [95014,95015]" dest=".: . [35774,35775]"/>
  <match src=",: , [50606,50607]" dest=",: , [15313,15314]"/>
  <match src="[: [ [94703,94704]" dest="[: [ [35463,35464]"/>
  <match src="visibility [49382,49390]" dest="visibility [14089,14097]"/>
  <match src="member_expression [96251,96266]" dest="member_expression [37011,37026]"/>
  <match src="call_expression [77402,77430]" dest="call_expression [65486,65507]"/>
  <match src="identifier: result [35881,35887]" dest="identifier: result [49259,49265]"/>
  <match src="type_name [49344,49350]" dest="type_name [14051,14057]"/>
  <match src=",: , [6479,6480]" dest=",: , [7043,7044]"/>
  <match src="identifier: accounts [96258,96266]" dest="identifier: accounts [37018,37026]"/>
  <match src="identifier: Global [82831,82837]" dest="identifier: Global [22453,22459]"/>
  <match src="identifier: account [95230,95237]" dest="identifier: account [35990,35997]"/>
  <match src="identifier: candidates [99145,99155]" dest="identifier: candidates [39905,39915]"/>
  <match src="identifier: to [49792,49794]" dest="identifier: to [14499,14501]"/>
  <match src="}: } [96884,96885]" dest="}: } [37644,37645]"/>
  <match src="member_expression [87728,87750]" dest="member_expression [28488,28510]"/>
  <match src="identifier: getOracleReserveMinimum [42507,42530]" dest="identifier: getOracleReserveMinimum [24611,24634]"/>
  <match src="}: } [36797,36798]" dest="}: } [50175,50176]"/>
  <match src="primitive_type [91433,91440]" dest="primitive_type [32193,32200]"/>
  <match src="parameter [80402,80406]" dest="parameter [67224,67228]"/>
  <match src="type_name [1689,1696]" dest="type_name [2253,2260]"/>
  <match src="identifier: Candidate [97865,97874]" dest="identifier: Candidate [38625,38634]"/>
  <match src="function: function [89150,89158]" dest="function: function [29910,29918]"/>
  <match src="identifier: outstanding [82067,82078]" dest="identifier: outstanding [21689,21700]"/>
  <match src="{: { [83078,83079]" dest="{: { [22700,22701]"/>
  <match src="): ) [88913,88914]" dest="): ) [29673,29674]"/>
  <match src="expression_statement [94229,94303]" dest="expression_statement [34989,35063]"/>
  <match src="struct_member [82578,82593]" dest="struct_member [22200,22215]"/>
  <match src="): ) [11553,11554]" dest="): ) [16491,16492]"/>
  <match src="primitive_type [72002,72009]" dest="primitive_type [56787,56794]"/>
  <match src="function: function [19684,19692]" dest="function: function [58194,58202]"/>
  <match src="(: ( [87976,87977]" dest="(: ( [28736,28737]"/>
  <match src="identifier: sub [96088,96091]" dest="identifier: sub [36848,36851]"/>
  <match src="identifier: price [63425,63430]" dest="identifier: price [61302,61307]"/>
  <match src="{: { [94050,94051]" dest="{: { [34810,34811]"/>
  <match src="(: ( [30927,30928]" dest="(: ( [44305,44306]"/>
  <match src="identifier: lockedUntil [88658,88669]" dest="identifier: lockedUntil [29418,29429]"/>
  <match src="member_expression [95935,95950]" dest="member_expression [36695,36710]"/>
  <match src="identifier: candidate [98108,98117]" dest="identifier: candidate [38868,38877]"/>
  <match src="identifier: bstr [34520,34524]" dest="identifier: bstr [47898,47902]"/>
  <match src="identifier: _state [90327,90333]" dest="identifier: _state [31087,31093]"/>
  <match src="identifier: account [96267,96274]" dest="identifier: account [37027,37034]"/>
  <match src="internal: internal [8445,8453]" dest="internal: internal [9009,9017]"/>
  <match src=".: . [76514,76515]" dest=".: . [73490,73491]"/>
  <match src="event: event [50579,50584]" dest="event: event [15286,15291]"/>
  <match src="==: == [88190,88192]" dest="==: == [28950,28952]"/>
  <match src=".: . [95066,95067]" dest=".: . [35826,35827]"/>
  <match src="(: ( [49555,49556]" dest="(: ( [14262,14263]"/>
  <match src="call_argument [1325,1337]" dest="call_argument [1889,1901]"/>
  <match src="struct_member [82006,82022]" dest="struct_member [21628,21644]"/>
  <match src="): ) [21172,21173]" dest="): ) [57778,57779]"/>
  <match src="return_type_definition [88927,88944]" dest="return_type_definition [29687,29704]"/>
  <match src="number_literal: 48 [27417,27419]" dest="number_literal: 48 [40795,40797]"/>
  <match src="number_literal: 86400 [41927,41932]" dest="number_literal: 86400 [24031,24036]"/>
  <match src="parameter [49344,49357]" dest="parameter [14051,14064]"/>
  <match src=".: . [79301,79302]" dest=".: . [71760,71761]"/>
  <match src="identifier: stringifyTruncated [29800,29818]" dest="identifier: stringifyTruncated [43178,43196]"/>
  <match src="event_paramater [50549,50567]" dest="event_paramater [15256,15274]"/>
  <match src="identifier: decrementBalanceOfBonded [77601,77625]" dest="identifier: incrementBalanceOfCoupons [57425,57450]"/>
  <match src="block_statement [30883,31424]" dest="block_statement [44261,44802]"/>
  <match src="member_expression [97905,97922]" dest="member_expression [38665,38682]"/>
  <match src="address: address [51496,51503]" dest="address: address [16203,16210]"/>
  <match src="call_expression [76908,76951]" dest="call_expression [65118,65145]"/>
  <match src="): ) [49806,49807]" dest="): ) [14513,14514]"/>
  <match src="identifier: IMPLEMENTATION_SLOT [85294,85313]" dest="identifier: IMPLEMENTATION_SLOT [69969,69988]"/>
  <match src="event_paramater [50254,50276]" dest="event_paramater [14961,14983]"/>
  <match src="(: ( [13113,13114]" dest="(: ( [18051,18052]"/>
  <match src="identifier: sender [76515,76521]" dest="identifier: sender [73491,73497]"/>
  <match src="(: ( [78224,78225]" dest="(: ( [71279,71280]"/>
  <match src="call_argument [35405,35422]" dest="call_argument [48783,48800]"/>
  <match src="function_body [30862,31430]" dest="function_body [44240,44808]"/>
  <match src=",: , [29299,29300]" dest=",: , [42677,42678]"/>
  <match src="visibility [87681,87687]" dest="visibility [28441,28447]"/>
  <match src="primitive_type [88936,88943]" dest="primitive_type [29696,29703]"/>
  <match src="function_definition [11958,12035]" dest="function_definition [16896,16973]"/>
  <match src=",: , [835,836]" dest=",: , [1399,1400]"/>
  <match src="{: { [89491,89492]" dest="{: { [30251,30252]"/>
  <match src="identifier: must [30190,30194]" dest="identifier: must [43568,43572]"/>
  <match src=",: , [95819,95820]" dest=",: , [36579,36580]"/>
  <match src="identifier: candidates [98058,98068]" dest="identifier: candidates [38818,38828]"/>
  <match src="primitive_type [27851,27858]" dest="primitive_type [41229,41236]"/>
  <match src="function_body [91892,91954]" dest="function_body [32652,32714]"/>
  <match src="primitive_type [50737,50744]" dest="primitive_type [15444,15451]"/>
  <match src="(: ( [76338,76339]" dest="(: ( [64616,64617]"/>
  <match src="identifier: block [89461,89466]" dest="identifier: block [30221,30226]"/>
  <match src="(: ( [8157,8158]" dest="(: ( [8721,8722]"/>
  <match src="): ) [94406,94407]" dest="): ) [35166,35167]"/>
  <match src="identifier: candidate [98948,98957]" dest="identifier: candidate [39708,39717]"/>
  <match src="parameter [9521,9525]" dest="parameter [10085,10089]"/>
  <match src="{: { [92223,92224]" dest="{: { [32983,32984]"/>
  <match src=".: . [64219,64220]" dest=".: . [73314,73315]"/>
  <match src="comment: // solhint-disable-next-line no-inline-assembly [80830,80877]" dest="comment: // solhint-disable-next-line no-inline-assembly [67652,67699]"/>
  <match src="(: ( [50766,50767]" dest="(: ( [15473,15474]"/>
  <match src="identifier: lastReserve [62567,62578]" dest="identifier: balance [65925,65932]"/>
  <match src="primitive_type [75997,76004]" dest="primitive_type [64545,64552]"/>
  <match src="}: } [43086,43087]" dest="}: } [25190,25191]"/>
  <match src="[: [ [90479,90480]" dest="[: [ [31239,31240]"/>
  <match src="identifier: epochPeriod [89564,89575]" dest="identifier: epochPeriod [30324,30335]"/>
  <match src="identifier: _state [87513,87519]" dest="identifier: _state [28273,28279]"/>
  <match src="internal: internal [21087,21095]" dest="internal: internal [51817,51825]"/>
  <match src="interface: interface [11438,11447]" dest="interface: interface [16376,16385]"/>
  <match src="call_argument [61268,61287]" dest="call_argument [73268,73286]"/>
  <match src="member_expression [88633,88648]" dest="member_expression [29393,29408]"/>
  <match src="public: public [89070,89076]" dest="public: public [29830,29836]"/>
  <match src="return_type_definition [47067,47081]" dest="return_type_definition [19765,19779]"/>
  <match src="state_mutability [6712,6716]" dest="state_mutability [7276,7280]"/>
  <match src="user_defined_type [15751,15757]" dest="user_defined_type [55027,55032]"/>
  <match src=",: , [50941,50942]" dest=",: , [15648,15649]"/>
  <match src="identifier: D256 [8278,8282]" dest="identifier: D256 [8842,8846]"/>
  <match src="identifier: encodePacked [31664,31676]" dest="identifier: encodePacked [45042,45054]"/>
  <match src="constant: constant [42115,42123]" dest="constant: constant [24219,24227]"/>
  <match src="identifier: initialized [82483,82494]" dest="identifier: initialized [22105,22116]"/>
  <match src="identifier: getSupplyChangeLimit [43716,43736]" dest="identifier: getSupplyChangeLimit [25820,25840]"/>
  <match src="return_type_definition [51021,51035]" dest="return_type_definition [15728,15742]"/>
  <match src="type_name [89193,89200]" dest="type_name [29953,29960]"/>
  <match src="type_name [33749,33754]" dest="type_name [47127,47132]"/>
  <match src="type_name [51238,51245]" dest="type_name [15945,15952]"/>
  <match src="call_expression [43046,43088]" dest="call_expression [25150,25192]"/>
  <match src=",: , [82291,82292]" dest=",: , [21913,21914]"/>
  <match src="parameter [30076,30090]" dest="parameter [43454,43468]"/>
  <match src="address: address [88565,88572]" dest="address: address [29325,29332]"/>
  <match src="function_body [91076,91143]" dest="function_body [31836,31903]"/>
  <match src="identifier: BASE [8751,8755]" dest="identifier: BASE [9315,9319]"/>
  <match src="function_body [80408,80958]" dest="function_body [67230,67780]"/>
  <match src="type_name [6869,6876]" dest="type_name [7433,7440]"/>
  <match src="identifier: _ [100142,100143]" dest="identifier: _ [62499,62500]"/>
  <match src="): ) [42983,42984]" dest="): ) [25087,25088]"/>
  <match src="identifier: stringifyTruncated [31702,31720]" dest="identifier: stringifyTruncated [45080,45098]"/>
  <match src="function: function [43232,43240]" dest="function: function [25336,25344]"/>
  <match src="uint256: uint256 [770,777]" dest="uint256: uint256 [1334,1341]"/>
  <match src="uint256: uint256 [27432,27439]" dest="uint256: uint256 [40810,40817]"/>
  <match src="{: { [10111,10112]" dest="{: { [10675,10676]"/>
  <match src=",: , [30777,30778]" dest=",: , [44155,44156]"/>
  <match src="identifier: msg [75948,75951]" dest="identifier: msg [64496,64499]"/>
  <match src="identifier: add [98520,98523]" dest="identifier: add [39280,39283]"/>
  <match src="(: ( [50906,50907]" dest="(: ( [15613,15614]"/>
  <match src="primitive_type [759,766]" dest="primitive_type [1323,1330]"/>
  <match src="(: ( [50137,50138]" dest="(: ( [14844,14845]"/>
  <match src="identifier: _state [98686,98692]" dest="identifier: _state [39446,39452]"/>
  <match src="(: ( [76228,76229]" dest="(: ( [64763,64764]"/>
  <match src="member_expression [93917,93936]" dest="member_expression [34677,34696]"/>
  <match src="(: ( [50658,50659]" dest="(: ( [15365,15366]"/>
  <match src="identifier: input [35762,35767]" dest="identifier: input [49140,49145]"/>
  <match src="parameter [73194,73201]" dest="parameter [52327,52334]"/>
  <match src="array_access [95489,95528]" dest="array_access [36249,36288]"/>
  <match src="primitive_type [35063,35068]" dest="primitive_type [48441,48446]"/>
  <match src="(: ( [6602,6603]" dest="(: ( [7166,7167]"/>
  <match src="&lt;: &lt; [36170,36171]" dest="&lt;: &lt; [49548,49549]"/>
  <match src="member_expression [93939,93953]" dest="member_expression [34699,34713]"/>
  <match src="type_name [60396,60408]" dest="type_name [59633,59645]"/>
  <match src="number_literal: 0xf [27747,27750]" dest="number_literal: 0xf [41125,41128]"/>
  <match src="(: ( [87154,87155]" dest="(: ( [27914,27915]"/>
  <match src="call_argument [76945,76950]" dest="call_argument [65679,65684]"/>
  <match src="parameter [28297,28311]" dest="parameter [41675,41689]"/>
  <match src="expression_statement [4709,4739]" dest="expression_statement [5273,5303]"/>
  <match src="address: address [98180,98187]" dest="address: address [38940,38947]"/>
  <match src="function_body [9527,9566]" dest="function_body [10091,10130]"/>
  <match src="type_name [31478,31485]" dest="type_name [44856,44863]"/>
  <match src="call_expression [19773,19843]" dest="call_expression [58304,58382]"/>
  <match src="call_struct_argument [8517,8561]" dest="call_struct_argument [9081,9125]"/>
  <match src="call_expression [100482,100513]" dest="call_expression [62839,62870]"/>
  <match src="user_defined_type [88603,88617]" dest="user_defined_type [29363,29377]"/>
  <match src=".: . [7386,7387]" dest=".: . [7950,7951]"/>
  <match src="=: = [96971,96972]" dest="=: = [37731,37732]"/>
  <match src="identifier: price0Cumulative [63090,63106]" dest="identifier: newRedeemable [60768,60781]"/>
  <match src="identifier: _state [99138,99144]" dest="identifier: _state [39898,39904]"/>
  <match src="(: ( [78970,78971]" dest="(: ( [53497,53498]"/>
  <match src="variable_declaration [78520,78548]" dest="variable_declaration [55934,55957]"/>
  <match src="function_body [23104,23147]" dest="function_body [51607,51771]"/>
  <match src="primitive_type [75235,75242]" dest="primitive_type [63704,63711]"/>
  <match src="identifier: that [79076,79080]" dest="identifier: that [73004,73008]"/>
  <match src="return_type_definition [8269,8290]" dest="return_type_definition [8833,8854]"/>
  <match src="returns: returns [87376,87383]" dest="returns: returns [28136,28143]"/>
  <match src="uint256: uint256 [78429,78436]" dest="uint256: uint256 [56387,56394]"/>
  <match src="call_argument [8556,8560]" dest="call_argument [9120,9124]"/>
  <match src="function: function [42413,42421]" dest="function: function [24517,24525]"/>
  <match src="): ) [6804,6805]" dest="): ) [7368,7369]"/>
  <match src="parameter [5880,5891]" dest="parameter [6444,6455]"/>
  <match src="expression_statement [99010,99057]" dest="expression_statement [39770,39817]"/>
  <match src="primitive_type [91607,91614]" dest="primitive_type [32367,32374]"/>
  <match src="type_name [49873,49880]" dest="type_name [14580,14587]"/>
  <match src="struct_member [81757,81793]" dest="struct_member [21379,21415]"/>
  <match src="call_argument [22115,22122]" dest="call_argument [58165,58172]"/>
  <match src=",: , [47042,47043]" dest=",: , [19740,19741]"/>
  <match src="identifier: updateAllowanceCoupons [96325,96347]" dest="identifier: updateAllowanceCoupons [37085,37107]"/>
  <match src="assignment_expression [98648,98741]" dest="assignment_expression [39408,39501]"/>
  <match src=",: , [49211,49212]" dest=",: , [13918,13919]"/>
  <match src="identifier: D256 [9209,9213]" dest="identifier: D256 [9773,9777]"/>
  <match src="identifier: Decimal [43046,43053]" dest="identifier: Decimal [25150,25157]"/>
  <match src="}: } [89016,89017]" dest="}: } [29776,29777]"/>
  <match src="visibility [41977,41984]" dest="visibility [24081,24088]"/>
  <match src="view: view [50893,50897]" dest="view: view [15600,15604]"/>
  <match src=",: , [61254,61255]" dest=",: , [73254,73255]"/>
  <match src=",: , [93163,93164]" dest=",: , [33923,33924]"/>
  <match src="call_expression [6029,6050]" dest="call_expression [6593,6614]"/>
  <match src="=: = [94981,94982]" dest="=: = [35741,35742]"/>
  <match src=".: . [97911,97912]" dest=".: . [38671,38672]"/>
  <match src="block_statement [7684,7731]" dest="block_statement [8248,8295]"/>
  <match src="(: ( [35404,35405]" dest="(: ( [48782,48783]"/>
  <match src=".: . [91069,91070]" dest=".: . [31829,31830]"/>
  <match src="function_body [6557,6625]" dest="function_body [7121,7189]"/>
  <match src="number_literal: 0 [88467,88468]" dest="number_literal: 0 [29227,29228]"/>
  <match src="uint256: uint256 [94025,94032]" dest="uint256: uint256 [34785,34792]"/>
  <match src="member_expression [76722,76882]" dest="member_expression [64922,65044]"/>
  <match src="call_argument [91801,91810]" dest="call_argument [32561,32570]"/>
  <match src="identifier: i [36176,36177]" dest="identifier: i [49554,49555]"/>
  <match src="parameter [86830,86845]" dest="parameter [27590,27605]"/>
  <match src="parameter [86980,86987]" dest="parameter [27740,27747]"/>
  <match src="primitive_type [30813,30820]" dest="primitive_type [44191,44198]"/>
  <match src="block_statement [89491,89524]" dest="block_statement [30251,30284]"/>
  <match src="call_argument [30479,30487]" dest="call_argument [43857,43865]"/>
  <match src="primitive_type [93037,93044]" dest="primitive_type [33797,33804]"/>
  <match src="identifier: _ [100627,100628]" dest="identifier: _ [62984,62985]"/>
  <match src="(: ( [6792,6793]" dest="(: ( [7356,7357]"/>
  <match src="(: ( [49754,49755]" dest="(: ( [14461,14462]"/>
  <match src="&quot;: &quot; [78162,78163]" dest="&quot;: &quot; [72877,72878]"/>
  <match src="[: [ [94738,94739]" dest="[: [ [35498,35499]"/>
  <match src="member_expression [100266,100278]" dest="member_expression [62623,62635]"/>
  <match src="identifier: balance [82861,82868]" dest="identifier: balance [22483,22490]"/>
  <match src="variable_declaration [1348,1357]" dest="variable_declaration [1912,1921]"/>
  <match src="}: } [81911,81912]" dest="}: } [21533,21534]"/>
  <match src="internal: internal [29568,29576]" dest="internal: internal [42946,42954]"/>
  <match src="call_argument [100365,100387]" dest="call_argument [62722,62744]"/>
  <match src="returns: returns [1281,1288]" dest="returns: returns [1845,1852]"/>
  <match src="uint256: uint256 [70054,70061]" dest="uint256: uint256 [74541,74548]"/>
  <match src="view: view [80388,80392]" dest="view: view [67210,67214]"/>
  <match src="primitive_type [41375,41382]" dest="primitive_type [23479,23486]"/>
  <match src="}: } [22137,22138]" dest="}: } [58187,58188]"/>
  <match src="parameter [6463,6479]" dest="parameter [7027,7043]"/>
  <match src="identifier: pair [58949,58953]" dest="identifier: pair [20541,20545]"/>
  <match src="}: } [68995,68996]" dest="}: } [60555,60556]"/>
  <match src="]: ] [99033,99034]" dest="]: ] [39793,39794]"/>
  <match src="return_type_definition [8671,8692]" dest="return_type_definition [9235,9256]"/>
  <match src="call_argument [77717,77727]" dest="call_argument [72651,72661]"/>
  <match src="identifier: start [75573,75578]" dest="identifier: start [63915,63920]"/>
  <match src="visibility [7297,7305]" dest="visibility [7861,7869]"/>
  <match src="[: [ [94964,94965]" dest="[: [ [35724,35725]"/>
  <match src="type_name [9064,9068]" dest="type_name [9628,9632]"/>
  <match src="identifier: _state [98648,98654]" dest="identifier: _state [39408,39414]"/>
  <match src="): ) [6961,6962]" dest="): ) [7525,7526]"/>
  <match src="type_name [88883,88890]" dest="type_name [29643,29650]"/>
  <match src="function_body [94417,94580]" dest="function_body [35177,35340]"/>
  <match src="array_access [36000,36009]" dest="array_access [49378,49387]"/>
  <match src="function_definition [42836,42946]" dest="function_definition [24940,25050]"/>
  <match src=",: , [30803,30804]" dest=",: , [44181,44182]"/>
  <match src="function: function [42952,42960]" dest="function: function [25056,25064]"/>
  <match src="parameter [29517,29531]" dest="parameter [42895,42909]"/>
  <match src="parameter [98215,98235]" dest="parameter [38975,38995]"/>
  <match src="): ) [50017,50018]" dest="): ) [14724,14725]"/>
  <match src="bool: bool [90867,90871]" dest="bool: bool [31627,31631]"/>
  <match src="return_type_definition [91330,91347]" dest="return_type_definition [32090,32107]"/>
  <match src="expression_statement [96828,96879]" dest="expression_statement [37588,37639]"/>
  <match src="(: ( [90931,90932]" dest="(: ( [31691,31692]"/>
  <match src="visibility [50884,50892]" dest="visibility [15591,15599]"/>
  <match src="identifier: expiring [82126,82134]" dest="identifier: expiring [21748,21756]"/>
  <match src="(: ( [7012,7013]" dest="(: ( [7576,7577]"/>
  <match src="function: function [43855,43863]" dest="function: function [25959,25967]"/>
  <match src="memory: memory [94195,94201]" dest="memory: memory [34955,34961]"/>
  <match src="identifier: ASCII_LOWER_EX [27508,27522]" dest="identifier: ASCII_LOWER_EX [40886,40900]"/>
  <match src=".: . [45876,45877]" dest=".: . [57147,57148]"/>
  <match src="identifier: COLON [29769,29774]" dest="identifier: COLON [43147,43152]"/>
  <match src="type_name [91003,91010]" dest="type_name [31763,31770]"/>
  <match src="expression_statement [76961,77011]" dest="expression_statement [66116,66189]"/>
  <match src=".: . [77969,77970]" dest=".: . [53808,53809]"/>
  <match src="{: { [93205,93206]" dest="{: { [33965,33966]"/>
  <match src="primitive_type [95804,95811]" dest="primitive_type [36564,36571]"/>
  <match src="call_argument [73255,73263]" dest="call_argument [56873,56895]"/>
  <match src="]: ] [96066,96067]" dest="]: ] [36826,36827]"/>
  <match src="identifier: b [7211,7212]" dest="identifier: b [7775,7776]"/>
  <match src="primitive_type [60415,60422]" dest="primitive_type [55072,55079]"/>
  <match src="user_defined_type [91060,91074]" dest="user_defined_type [31820,31834]"/>
  <match src="yul_identifier [33587,33593]" dest="yul_identifier [46965,46971]"/>
  <match src="identifier: staged [95075,95081]" dest="identifier: staged [35835,35841]"/>
  <match src="identifier: approveFor [91422,91432]" dest="identifier: approveFor [32182,32192]"/>
  <match src=".: . [100320,100321]" dest=".: . [62677,62678]"/>
  <match src="event: event [13924,13929]" dest="event: event [18862,18867]"/>
  <match src="identifier: sender [78799,78805]" dest="identifier: sender [72698,72704]"/>
  <match src="(: ( [36022,36023]" dest="(: ( [49400,49401]"/>
  <match src="identifier: staged [82708,82714]" dest="identifier: staged [22330,22336]"/>
  <match src=".: . [78647,78648]" dest=".: . [58097,58098]"/>
  <match src="call_argument [76676,76690]" dest="call_argument [57336,57363]"/>
  <match src="memory: memory [7153,7159]" dest="memory: memory [7717,7723]"/>
  <match src=".: . [94235,94236]" dest=".: . [34995,34996]"/>
  <match src="): ) [69101,69102]" dest="): ) [71785,71786]"/>
  <match src="identifier: LPAREN [28632,28638]" dest="identifier: LPAREN [42010,42016]"/>
  <match src="string_literal [100545,100566]" dest="string_literal [62902,62923]"/>
  <match src=":: : [6041,6042]" dest=":: : [6605,6606]"/>
  <match src="return: return [823,829]" dest="return: return [1387,1393]"/>
  <match src="call_expression [6185,6196]" dest="call_expression [6749,6760]"/>
  <match src="string_literal [79194,79224]" dest="string_literal [66069,66105]"/>
  <match src="function: function [31995,32003]" dest="function: function [45373,45381]"/>
  <match src="primitive_type [18996,19003]" dest="primitive_type [11766,11773]"/>
  <match src="): ) [73733,73734]" dest="): ) [54278,54279]"/>
  <match src="(: ( [98179,98180]" dest="(: ( [38939,38940]"/>
  <match src="primitive_type [49859,49866]" dest="primitive_type [14566,14573]"/>
  <match src="identifier: updatePrice [63019,63030]" dest="identifier: growSupply [60571,60581]"/>
  <match src="expression_statement [76332,76369]" dest="expression_statement [64610,64647]"/>
  <match src="identifier: setImplementation [84672,84689]" dest="identifier: setImplementation [69347,69364]"/>
  <match src="identifier: dollarAmount [73587,73599]" dest="identifier: dollarAmount [57402,57414]"/>
  <match src="): ) [78664,78665]" dest="): ) [58121,58122]"/>
  <match src="array_access [95531,95570]" dest="array_access [36291,36330]"/>
  <match src="uint256: uint256 [63685,63692]" dest="uint256: uint256 [64904,64911]"/>
  <match src="(: ( [88756,88757]" dest="(: ( [29516,29517]"/>
  <match src="): ) [51294,51295]" dest="): ) [16001,16002]"/>
  <match src="expression_statement [77790,77805]" dest="expression_statement [51750,51765]"/>
  <match src="call_argument [6609,6613]" dest="call_argument [7173,7177]"/>
  <match src="visibility [90280,90286]" dest="visibility [31040,31046]"/>
  <match src="call_argument [28068,28072]" dest="call_argument [41446,41450]"/>
  <match src="array_access [98648,98676]" dest="array_access [39408,39436]"/>
  <match src="address: address [84395,84402]" dest="address: address [69070,69077]"/>
  <match src="member_expression [89737,89752]" dest="member_expression [30497,30512]"/>
  <match src="function_definition [91825,91954]" dest="function_definition [32585,32714]"/>
  <match src="identifier: self [7629,7633]" dest="identifier: self [8193,8197]"/>
  <match src="identifier: accounts [94434,94442]" dest="identifier: accounts [35194,35202]"/>
  <match src="string_literal [19985,20025]" dest="string_literal [52188,52218]"/>
  <match src="identifier: add [95082,95085]" dest="identifier: add [35842,35845]"/>
  <match src="public: public [58861,58867]" dest="public: public [20453,20459]"/>
  <match src="call_argument [6799,6803]" dest="call_argument [7363,7367]"/>
  <match src="type_name [9368,9372]" dest="type_name [9932,9936]"/>
  <match src="event_paramater [50524,50539]" dest="event_paramater [15231,15246]"/>
  <match src="identifier: Decimal [5559,5566]" dest="identifier: Decimal [6123,6130]"/>
  <match src="(: ( [43007,43008]" dest="(: ( [25111,25112]"/>
  <match src="identifier: value [76005,76010]" dest="identifier: value [64553,64558]"/>
  <match src="primitive_type [86830,86837]" dest="primitive_type [27590,27597]"/>
  <match src="]: ] [36488,36489]" dest="]: ] [49866,49867]"/>
  <match src="function: function [49766,49774]" dest="function: function [14473,14481]"/>
  <match src="(: ( [47922,47923]" dest="(: ( [51055,51056]"/>
  <match src="): ) [32156,32157]" dest="): ) [45534,45535]"/>
  <match src="member_expression [100047,100061]" dest="member_expression [62404,62418]"/>
  <match src=".: . [93631,93632]" dest=".: . [34391,34392]"/>
  <match src="parameter [49859,49871]" dest="parameter [14566,14578]"/>
  <match src="uint256: uint256 [36153,36160]" dest="uint256: uint256 [49531,49538]"/>
  <match src="(: ( [9438,9439]" dest="(: ( [10002,10003]"/>
  <match src="call_argument [70596,70602]" dest="call_argument [12090,12096]"/>
  <match src="primitive_type [82006,82013]" dest="primitive_type [21628,21635]"/>
  <match src="address: address [85094,85101]" dest="address: address [69769,69776]"/>
  <match src="identifier: a [3993,3994]" dest="identifier: a [4557,4558]"/>
  <match src="primitive_type [36857,36862]" dest="primitive_type [50235,50240]"/>
  <match src=",: , [98342,98343]" dest=",: , [39102,39103]"/>
  <match src="variable_declaration_statement [1981,1999]" dest="variable_declaration_statement [2545,2563]"/>
  <match src="member_expression [32998,33014]" dest="member_expression [46376,46392]"/>
  <match src="state_mutability [91459,91463]" dest="state_mutability [32219,32223]"/>
  <match src="returns: returns [50783,50790]" dest="returns: returns [15490,15497]"/>
  <match src="parameter [29495,29507]" dest="parameter [42873,42885]"/>
  <match src="parameter [1228,1237]" dest="parameter [1792,1801]"/>
  <match src="state_mutability [38345,38349]" dest="state_mutability [13406,13410]"/>
  <match src="(: ( [86524,86525]" dest="(: ( [27284,27285]"/>
  <match src="identifier: amount [94118,94124]" dest="identifier: amount [34878,34884]"/>
  <match src=",: , [3212,3213]" dest=",: , [3776,3777]"/>
  <match src="is: is [83889,83891]" dest="is: is [68564,68566]"/>
  <match src="identifier: require [84838,84845]" dest="identifier: require [69513,69520]"/>
  <match src="uint256: uint256 [75565,75572]" dest="uint256: uint256 [63907,63914]"/>
  <match src="identifier: stringify [29325,29334]" dest="identifier: stringify [42703,42712]"/>
  <match src="function: function [89250,89258]" dest="function: function [30010,30018]"/>
  <match src="pure: pure [52574,52578]" dest="pure: pure [13086,13090]"/>
  <match src="]: ] [92073,92074]" dest="]: ] [32833,32834]"/>
  <match src="uint256: uint256 [81821,81828]" dest="uint256: uint256 [21443,21450]"/>
  <match src="uint256: uint256 [45372,45379]" dest="uint256: uint256 [65331,65338]"/>
  <match src="): ) [91184,91185]" dest="): ) [31944,31945]"/>
  <match src="(: ( [9631,9632]" dest="(: ( [10195,10196]"/>
  <match src="identifier: getOraclePoolRatio [43864,43882]" dest="identifier: getOraclePoolRatio [25968,25986]"/>
  <match src="bytes32: bytes32 [92170,92177]" dest="bytes32: bytes32 [32930,32937]"/>
  <match src="): ) [9677,9678]" dest="): ) [10241,10242]"/>
  <match src="member_expression [79068,79080]" dest="member_expression [72996,73008]"/>
  <match src="state_mutability [6288,6292]" dest="state_mutability [6852,6856]"/>
  <match src="uint256: uint256 [21071,21078]" dest="uint256: uint256 [51801,51808]"/>
  <match src="{: { [43417,43418]" dest="{: { [25521,25522]"/>
  <match src="primitive_type [48535,48542]" dest="primitive_type [55492,55499]"/>
  <match src="identifier: PairCreated [48523,48534]" dest="identifier: CouponTransfer [55477,55491]"/>
  <match src="identifier: balanceOfRewarded [77297,77314]" dest="identifier: balanceOf [71911,71920]"/>
  <match src="call_expression [94983,95026]" dest="call_expression [35743,35786]"/>
  <match src="state_variable_declaration [42321,42368]" dest="state_variable_declaration [24425,24472]"/>
  <match src="uint256: uint256 [15817,15824]" dest="uint256: uint256 [11520,11527]"/>
  <match src="function: function [6821,6829]" dest="function: function [7385,7393]"/>
  <match src="call_argument [98948,98957]" dest="call_argument [39708,39717]"/>
  <match src="(: ( [9977,9978]" dest="(: ( [10541,10542]"/>
  <match src="parameter [97256,97269]" dest="parameter [38016,38029]"/>
  <match src="call_expression [31308,31327]" dest="call_expression [44686,44705]"/>
  <match src="function_definition [50056,50116]" dest="function_definition [14763,14823]"/>
  <match src="identifier: encodePacked [33002,33014]" dest="identifier: encodePacked [46380,46392]"/>
  <match src="{: { [89791,89792]" dest="{: { [30551,30552]"/>
  <match src="{: { [31594,31595]" dest="{: { [44972,44973]"/>
  <match src="uint256: uint256 [82116,82123]" dest="uint256: uint256 [21738,21745]"/>
  <match src="}: } [88733,88734]" dest="}: } [29493,29494]"/>
  <match src="identifier: b [3222,3223]" dest="identifier: b [3786,3787]"/>
  <match src="parameter [6950,6961]" dest="parameter [7514,7525]"/>
  <match src="type_name [6255,6262]" dest="type_name [6819,6826]"/>
  <match src="internal: internal [99119,99127]" dest="internal: internal [39879,39887]"/>
  <match src="type_name [84395,84402]" dest="type_name [69070,69077]"/>
  <match src="(: ( [2602,2603]" dest="(: ( [3166,3167]"/>
  <match src="return_type_definition [7319,7340]" dest="return_type_definition [7883,7904]"/>
  <match src="array_access [35955,35964]" dest="array_access [49333,49342]"/>
  <match src="parameter [91699,91716]" dest="parameter [32459,32476]"/>
  <match src="identifier: FOUR_BIT_MASK [35547,35560]" dest="identifier: FOUR_BIT_MASK [48925,48938]"/>
  <match src="]: ] [90485,90486]" dest="]: ] [31245,31246]"/>
  <match src="expression_statement [97698,97743]" dest="expression_statement [38458,38503]"/>
  <match src="type_name [50792,50799]" dest="type_name [15499,15506]"/>
  <match src="function: function [87141,87149]" dest="function: function [27901,27909]"/>
  <match src="expression_statement [84838,84871]" dest="expression_statement [69513,69546]"/>
  <match src="member_expression [89812,89872]" dest="member_expression [30572,30632]"/>
  <match src="uint256: uint256 [32109,32116]" dest="uint256: uint256 [45487,45494]"/>
  <match src="}: } [9457,9458]" dest="}: } [10021,10022]"/>
  <match src="{: { [28955,28956]" dest="{: { [42333,42334]"/>
  <match src="identifier: COUPON_EXPIRATION [42208,42225]" dest="identifier: COUPON_EXPIRATION [24312,24329]"/>
  <match src="{: { [92160,92161]" dest="{: { [32920,32921]"/>
  <match src="identifier: b [4004,4005]" dest="identifier: b [4568,4569]"/>
  <match src="uint256: uint256 [63082,63089]" dest="uint256: uint256 [60760,60767]"/>
  <match src="user_defined_type [74965,74976]" dest="user_defined_type [63645,63652]"/>
  <match src="{: { [88400,88401]" dest="{: { [29160,29161]"/>
  <match src="byte: byte [36756,36760]" dest="byte: byte [50134,50138]"/>
  <match src="}: } [6197,6198]" dest="}: } [6761,6762]"/>
  <match src="number_literal: 87 [27471,27473]" dest="number_literal: 87 [40849,40851]"/>
  <match src=",: , [31282,31283]" dest=",: , [44660,44661]"/>
  <match src="identifier: amount [94033,94039]" dest="identifier: amount [34793,34799]"/>
  <match src="binary_expression [36395,36401]" dest="binary_expression [49773,49779]"/>
  <match src="any_pragma_token [32,57]" dest="any_pragma_token [32,57]"/>
  <match src="unary_expression [29604,29609]" dest="unary_expression [42982,42987]"/>
  <match src=".: . [93474,93475]" dest=".: . [34234,34235]"/>
  <match src="type_name [92965,92972]" dest="type_name [33725,33732]"/>
  <match src="return_type_definition [51259,51295]" dest="return_type_definition [15966,16002]"/>
  <match src="): ) [32913,32914]" dest="): ) [46291,46292]"/>
  <match src="call_argument [89848,89867]" dest="call_argument [30608,30627]"/>
  <match src="}: } [33763,33764]" dest="}: } [47141,47142]"/>
  <match src="]: ] [35054,35055]" dest="]: ] [48432,48433]"/>
  <match src="): ) [36376,36377]" dest="): ) [49754,49755]"/>
  <match src="): ) [81828,81829]" dest="): ) [21450,21451]"/>
  <match src="primitive_type [13465,13472]" dest="primitive_type [18403,18410]"/>
  <match src="array_access [98051,98079]" dest="array_access [38811,38839]"/>
  <match src="string_literal [24991,25024]" dest="string_literal [71523,71552]"/>
  <match src="identifier: univ2 [75792,75797]" dest="identifier: dollar [64364,64370]"/>
  <match src="}: } [99066,99067]" dest="}: } [39826,39827]"/>
  <match src="returns: returns [86727,86734]" dest="returns: returns [27487,27494]"/>
  <match src="function_body [99990,100150]" dest="function_body [62347,62507]"/>
  <match src="contract: contract [46875,46883]" dest="contract: contract [19573,19581]"/>
  <match src="function_body [87711,87757]" dest="function_body [28471,28517]"/>
  <match src="call_expression [78757,78771]" dest="call_expression [54165,54179]"/>
  <match src="pure: pure [52750,52754]" dest="pure: pure [11851,11855]"/>
  <match src="(: ( [28023,28024]" dest="(: ( [41401,41402]"/>
  <match src="}: } [97802,97803]" dest="}: } [38562,38563]"/>
  <match src="function_body [7525,7759]" dest="function_body [8089,8323]"/>
  <match src="uint256: uint256 [90440,90447]" dest="uint256: uint256 [31200,31207]"/>
  <match src="type_name [94375,94382]" dest="type_name [35135,35142]"/>
  <match src="call_argument [29103,29107]" dest="call_argument [42481,42485]"/>
  <match src="uint256: uint256 [81856,81863]" dest="uint256: uint256 [21478,21485]"/>
  <match src="function_definition [93403,93532]" dest="function_definition [34163,34292]"/>
  <match src="internal: internal [341,349]" dest="internal: internal [905,913]"/>
  <match src="primitive_type [88110,88117]" dest="primitive_type [28870,28877]"/>
  <match src="parameter [96363,96378]" dest="parameter [37123,37138]"/>
  <match src="call_argument [70847,70853]" dest="call_argument [51850,51856]"/>
  <match src=",: , [78654,78655]" dest=",: , [58104,58105]"/>
  <match src="private: private [34728,34735]" dest="private: private [48106,48113]"/>
  <match src="function_definition [31436,31989]" dest="function_definition [44814,45367]"/>
  <match src="parameter [32059,32073]" dest="parameter [45437,45451]"/>
  <match src=".: . [8330,8331]" dest=".: . [8894,8895]"/>
  <match src="): ) [1936,1937]" dest="): ) [2500,2501]"/>
  <match src="string_literal [21137,21172]" dest="string_literal [57741,57778]"/>
  <match src="uint256: uint256 [82652,82659]" dest="uint256: uint256 [22274,22281]"/>
  <match src="call_argument [28149,28155]" dest="call_argument [41527,41533]"/>
  <match src=".: . [95220,95221]" dest=".: . [35980,35981]"/>
  <match src="type_cast_expression [73721,73734]" dest="type_cast_expression [54266,54279]"/>
  <match src="call_expression [29800,29826]" dest="call_expression [43178,43204]"/>
  <match src="identifier: stringifyTruncated [32313,32331]" dest="identifier: stringifyTruncated [45691,45709]"/>
  <match src="parameter [93037,93054]" dest="parameter [33797,33814]"/>
  <match src="function_definition [35632,36580]" dest="function_definition [49010,49958]"/>
  <match src="bytes: bytes [32901,32906]" dest="bytes: bytes [46279,46284]"/>
  <match src="identifier: b [8827,8828]" dest="identifier: b [9391,9392]"/>
  <match src="(: ( [93859,93860]" dest="(: ( [34619,34620]"/>
  <match src="uint256: uint256 [16059,16066]" dest="uint256: uint256 [11620,11627]"/>
  <match src="): ) [8764,8765]" dest="): ) [9328,9329]"/>
  <match src="address: address [50419,50426]" dest="address: address [15126,15133]"/>
  <match src="type_name [88072,88079]" dest="type_name [28832,28839]"/>
  <match src="uint256: uint256 [1981,1988]" dest="uint256: uint256 [2545,2552]"/>
  <match src="return_statement [86999,87029]" dest="return_statement [27759,27789]"/>
  <match src="function_definition [88312,88541]" dest="function_definition [29072,29301]"/>
  <match src="assignment_expression [94060,94125]" dest="assignment_expression [34820,34885]"/>
  <match src="identifier: value [75960,75965]" dest="identifier: value [64508,64513]"/>
  <match src=".: . [75117,75118]" dest=".: . [57711,57712]"/>
  <match src=".: . [88258,88259]" dest=".: . [29018,29019]"/>
  <match src="}: } [93531,93532]" dest="}: } [34291,34292]"/>
  <match src="type_name [82676,82683]" dest="type_name [22298,22305]"/>
  <match src="inheritance_specifier [60364,60371]" dest="inheritance_specifier [59565,59576]"/>
  <match src="primitive_type [36017,36022]" dest="primitive_type [49395,49400]"/>
  <match src="primitive_type [9878,9885]" dest="primitive_type [10442,10449]"/>
  <match src="=&gt;: =&gt; [83022,83024]" dest="=&gt;: =&gt; [22644,22646]"/>
  <match src="identifier: file [30323,30327]" dest="identifier: file [43701,43705]"/>
  <match src="bool: bool [13114,13118]" dest="bool: bool [18052,18056]"/>
  <match src="uint256: uint256 [33433,33440]" dest="uint256: uint256 [46811,46818]"/>
  <match src="return_statement [86755,86784]" dest="return_statement [27515,27544]"/>
  <match src="type_name [60562,60569]" dest="type_name [71130,71137]"/>
  <match src="indexed: indexed [75644,75651]" dest="indexed: indexed [71113,71120]"/>
  <match src="identifier: Upgradeable [101309,101320]" dest="identifier: Upgradeable [70742,70753]"/>
  <match src=",: , [49883,49884]" dest=",: , [14590,14591]"/>
  <match src="function: function [88047,88055]" dest="function: function [28807,28815]"/>
  <match src="call_expression [91765,91812]" dest="call_expression [32525,32572]"/>
  <match src="function_definition [87914,88041]" dest="function_definition [28674,28801]"/>
  <match src="internal: internal [42985,42993]" dest="internal: internal [25089,25097]"/>
  <match src="}: } [87334,87335]" dest="}: } [28094,28095]"/>
  <match src="function_definition [34676,35626]" dest="function_definition [48054,49004]"/>
  <match src="string: string [94647,94653]" dest="string: string [35407,35413]"/>
  <match src="identifier: reason [96177,96183]" dest="identifier: reason [36937,36943]"/>
  <match src="(: ( [100278,100279]" dest="(: ( [62635,62636]"/>
  <match src="user_defined_type [82554,82561]" dest="user_defined_type [22176,22183]"/>
  <match src="type_name [75294,75301]" dest="type_name [63766,63773]"/>
  <match src="array_access [98484,98512]" dest="array_access [39244,39272]"/>
  <match src="(: ( [11688,11689]" dest="(: ( [16626,16627]"/>
  <match src="call_expression [72328,72342]" dest="call_expression [55960,56004]"/>
  <match src="call_expression [91791,91811]" dest="call_expression [32551,32571]"/>
  <match src="function: function [87237,87245]" dest="function: function [27997,28005]"/>
  <match src="identifier: add [315,318]" dest="identifier: add [879,882]"/>
  <match src="identifier: self [7443,7447]" dest="identifier: self [8007,8011]"/>
  <match src="identifier: SafeMath [92952,92960]" dest="identifier: SafeMath [33712,33720]"/>
  <match src="identifier: Decimal [86109,86116]" dest="identifier: Decimal [26869,26876]"/>
  <match src="identifier: account [91128,91135]" dest="identifier: account [31888,31895]"/>
  <match src="type_name [75507,75514]" dest="type_name [64020,64027]"/>
  <match src="identifier: expiration [97119,97129]" dest="identifier: expiration [37879,37889]"/>
  <match src="primitive_type [46968,46975]" dest="primitive_type [19666,19673]"/>
  <match src="call_argument [77358,77368]" dest="call_argument [65469,65479]"/>
  <match src="returns: returns [89385,89392]" dest="returns: returns [30145,30152]"/>
  <match src="identifier: balanceOf [11679,11688]" dest="identifier: balanceOf [16617,16626]"/>
  <match src="function_body [68577,68996]" dest="function_body [60311,60556]"/>
  <match src="): ) [29397,29398]" dest="): ) [42775,42776]"/>
  <match src="&quot;: &quot; [77679,77680]" dest="&quot;: &quot; [73422,73423]"/>
  <match src="type_name [90440,90447]" dest="type_name [31200,31207]"/>
  <match src="identifier: asUint256 [9581,9590]" dest="identifier: asUint256 [10145,10154]"/>
  <match src="(: ( [79099,79100]" dest="(: ( [54054,54055]"/>
  <match src="variable_declaration [7596,7612]" dest="variable_declaration [8160,8176]"/>
  <match src="=: = [34934,34935]" dest="=: = [48312,48313]"/>
  <match src="}: } [7758,7759]" dest="}: } [8322,8323]"/>
  <match src="identifier: epoch [95564,95569]" dest="identifier: epoch [36324,36329]"/>
  <match src="internal: internal [97679,97687]" dest="internal: internal [38439,38447]"/>
  <match src="uint256: uint256 [364,371]" dest="uint256: uint256 [928,935]"/>
  <match src=".: . [91121,91122]" dest=".: . [31881,31882]"/>
  <match src="type_name [95140,95147]" dest="type_name [35900,35907]"/>
  <match src="{: { [93615,93616]" dest="{: { [34375,34376]"/>
  <match src="pure: pure [32175,32179]" dest="pure: pure [45553,45557]"/>
  <match src="): ) [86877,86878]" dest="): ) [27637,27638]"/>
  <match src="identifier: epoch [89996,90001]" dest="identifier: epoch [30756,30761]"/>
  <match src="!: ! [29604,29605]" dest="!: ! [42982,42983]"/>
  <match src="if_statement [61665,61821]" dest="if_statement [61463,61520]"/>
  <match src="pure: pure [51712,51716]" dest="pure: pure [11606,11610]"/>
  <match src="parameter [94897,94912]" dest="parameter [35657,35672]"/>
  <match src="identifier: newClaimable [75603,75615]" dest="identifier: bonded [71079,71085]"/>
  <match src="uint256: uint256 [88936,88943]" dest="uint256: uint256 [29696,29703]"/>
  <match src="function: function [58873,58881]" dest="function: function [20465,20473]"/>
  <match src="event_definition [75527,75617]" dest="event_definition [63871,63962]"/>
  <match src=".: . [89843,89844]" dest=".: . [30603,30604]"/>
  <match src="ternary_expression [88751,88838]" dest="ternary_expression [29511,29598]"/>
  <match src="call_expression [76475,76489]" dest="call_expression [54341,54355]"/>
  <match src="=: = [77295,77296]" dest="=: = [65441,65442]"/>
  <match src="): ) [96183,96184]" dest="): ) [36943,36944]"/>
  <match src="(: ( [7930,7931]" dest="(: ( [8494,8495]"/>
  <match src="(: ( [32487,32488]" dest="(: ( [45865,45866]"/>
  <match src="identifier: account [75427,75434]" dest="identifier: account [74669,74676]"/>
  <match src="type_name [49526,49530]" dest="type_name [14233,14237]"/>
  <match src="(: ( [19780,19781]" dest="(: ( [58311,58312]"/>
  <match src="identifier: amount0Out [50504,50514]" dest="identifier: amount0Out [15211,15221]"/>
  <match src="type_name [98790,98797]" dest="type_name [39550,39557]"/>
  <match src="function: function [46908,46916]" dest="function: function [19606,19614]"/>
  <match src="): ) [88943,88944]" dest="): ) [29703,29704]"/>
  <match src="): ) [33155,33156]" dest="): ) [46533,46534]"/>
  <match src="identifier: D256 [8312,8316]" dest="identifier: D256 [8876,8880]"/>
  <match src="private: private [41795,41802]" dest="private: private [23899,23906]"/>
  <match src="boolean_literal [93222,93227]" dest="boolean_literal [33982,33987]"/>
  <match src="type_name [65782,65789]" dest="type_name [59673,59680]"/>
  <match src="[: [ [88777,88778]" dest="[: [ [29537,29538]"/>
  <match src="identifier: char [36492,36496]" dest="identifier: char [49870,49874]"/>
  <match src=",: , [28265,28266]" dest=",: , [41643,41644]"/>
  <match src="}: } [4768,4769]" dest="}: } [5332,5333]"/>
  <match src="public: public [58892,58898]" dest="public: public [20484,20490]"/>
  <match src="call_expression [32313,32337]" dest="call_expression [45691,45715]"/>
  <match src="type_name [65882,65889]" dest="type_name [63937,63944]"/>
  <match src="address: address [88338,88345]" dest="address: address [29098,29105]"/>
  <match src="call_argument [78971,78987]" dest="call_argument [53498,53511]"/>
  <match src="): ) [96302,96303]" dest="): ) [37062,37063]"/>
  <match src="view: view [89280,89284]" dest="view: view [30040,30044]"/>
  <match src="view: view [89077,89081]" dest="view: view [29837,29841]"/>
  <match src=",: , [31726,31727]" dest=",: , [45104,45105]"/>
  <match src="&amp;: &amp; [35407,35408]" dest="&amp;: &amp; [48785,48786]"/>
  <match src="identifier: _state [88962,88968]" dest="identifier: _state [29722,29728]"/>
  <match src="type_name [16059,16066]" dest="type_name [11620,11627]"/>
  <match src="call_argument [45895,45913]" dest="call_argument [57166,57193]"/>
  <match src="member_expression [88751,88797]" dest="member_expression [29511,29557]"/>
  <match src="call_argument [78111,78130]" dest="call_argument [72823,72845]"/>
  <match src="visibility [49503,49511]" dest="visibility [14210,14218]"/>
  <match src="function_definition [42413,42492]" dest="function_definition [24517,24596]"/>
  <match src="array_access [91499,91527]" dest="array_access [32259,32287]"/>
  <match src=",: , [51359,51360]" dest=",: , [16066,16067]"/>
  <match src="(: ( [8316,8317]" dest="(: ( [8880,8881]"/>
  <match src="call_expression [32554,32573]" dest="call_expression [45932,45951]"/>
  <match src="yul_path [92251,92255]" dest="yul_path [33011,33015]"/>
  <match src="=: = [99047,99048]" dest="=: = [39807,39808]"/>
  <match src="identifier: coupons [97478,97485]" dest="identifier: coupons [38238,38245]"/>
  <match src="parameter [6679,6688]" dest="parameter [7243,7252]"/>
  <match src="returns: returns [795,802]" dest="returns: returns [1359,1366]"/>
  <match src="call_argument [77510,77520]" dest="call_argument [66013,66023]"/>
  <match src="identifier: account [75556,75563]" dest="identifier: account [63898,63905]"/>
  <match src="block_statement [30196,30661]" dest="block_statement [43574,44039]"/>
  <match src="primitive_type [68587,68594]" dest="primitive_type [60696,60703]"/>
  <match src=",: , [76081,76082]" dest=",: , [65098,65099]"/>
  <match src="=: = [96464,96465]" dest="=: = [37224,37225]"/>
  <match src="{: { [34046,34047]" dest="{: { [47424,47425]"/>
  <match src="visibility [84653,84661]" dest="visibility [69328,69336]"/>
  <match src="identifier: account [75310,75317]" dest="identifier: account [63782,63789]"/>
  <match src="uint256: uint256 [30126,30133]" dest="uint256: uint256 [43504,43511]"/>
  <match src="type_name [42556,42563]" dest="type_name [24660,24667]"/>
  <match src="(: ( [31165,31166]" dest="(: ( [44543,44544]"/>
  <match src="function: function [93131,93139]" dest="function: function [33891,33899]"/>
  <match src="identifier: that [100274,100278]" dest="identifier: that [62631,62635]"/>
  <match src="identifier: amount [95165,95171]" dest="identifier: amount [35925,35931]"/>
  <match src="identifier: newImplementation [84690,84707]" dest="identifier: newImplementation [69365,69382]"/>
  <match src="external: external [77224,77232]" dest="external: external [65346,65354]"/>
  <match src="identifier: initialize [84442,84452]" dest="identifier: initialize [69117,69127]"/>
  <match src="type_name [13465,13472]" dest="type_name [18403,18410]"/>
  <match src="identifier: coupons [97178,97185]" dest="identifier: coupons [37938,37945]"/>
  <match src="pragma_directive [0,24]" dest="pragma_directive [0,24]"/>
  <match src="(: ( [6305,6306]" dest="(: ( [6869,6870]"/>
  <match src="user_defined_type [43396,43408]" dest="user_defined_type [25500,25512]"/>
  <match src="state_variable_declaration [27541,27572]" dest="state_variable_declaration [40919,40950]"/>
  <match src="}: } [97212,97213]" dest="}: } [37972,37973]"/>
  <match src="binary_expression [88751,88777]" dest="binary_expression [29511,29537]"/>
  <match src="primitive_type [51410,51417]" dest="primitive_type [16117,16124]"/>
  <match src="[: [ [96687,96688]" dest="[: [ [37447,37448]"/>
  <match src=",: , [9443,9444]" dest=",: , [10007,10008]"/>
  <match src="function_body [8295,8367]" dest="function_body [8859,8931]"/>
  <match src="call_argument [4060,4061]" dest="call_argument [4624,4625]"/>
  <match src="(: ( [77850,77851]" dest="(: ( [65764,65765]"/>
  <match src="identifier: msg [75881,75884]" dest="identifier: msg [64454,64457]"/>
  <match src=",: , [30519,30520]" dest=",: , [43897,43898]"/>
  <match src=",: , [7267,7268]" dest=",: , [7831,7832]"/>
  <match src="type_name [80362,80369]" dest="type_name [67184,67191]"/>
  <match src="struct_member [82724,82743]" dest="struct_member [22346,22365]"/>
  <match src="visibility [86847,86855]" dest="visibility [27607,27615]"/>
  <match src="returns: returns [8049,8056]" dest="returns: returns [8613,8620]"/>
  <match src="identifier: debt [93803,93807]" dest="identifier: debt [34563,34567]"/>
  <match src="call_argument [21228,21234]" dest="call_argument [51892,51898]"/>
  <match src="memory: memory [8172,8178]" dest="memory: memory [8736,8742]"/>
  <match src="(: ( [101991,101992]" dest="(: ( [51842,51843]"/>
  <match src=",: , [78711,78712]" dest=",: , [57815,57816]"/>
  <match src=",: , [8749,8750]" dest=",: , [9313,9314]"/>
  <match src="call_expression [76590,76610]" dest="call_expression [64873,64893]"/>
  <match src="): ) [87570,87571]" dest="): ) [28330,28331]"/>
  <match src="expression_statement [98446,98532]" dest="expression_statement [39206,39292]"/>
  <match src="(: ( [36358,36359]" dest="(: ( [49736,49737]"/>
  <match src="call_argument [30949,31381]" dest="call_argument [44327,44759]"/>
  <match src="identifier: msg [77045,77048]" dest="identifier: msg [65180,65183]"/>
  <match src="identifier: Require [100455,100462]" dest="identifier: Require [62812,62819]"/>
  <match src=",: , [77055,77056]" dest=",: , [65190,65191]"/>
  <match src="parameter [6137,6148]" dest="parameter [6701,6712]"/>
  <match src="type_name [1655,1662]" dest="type_name [2219,2226]"/>
  <match src="): ) [76042,76043]" dest="): ) [65383,65384]"/>
  <match src="identifier: epochs [96011,96017]" dest="identifier: epochs [36771,36777]"/>
  <match src="event_paramater [84395,84425]" dest="event_paramater [69070,69100]"/>
  <match src="type_name [68777,68784]" dest="type_name [71894,71901]"/>
  <match src="call_expression [7705,7720]" dest="call_expression [8269,8284]"/>
  <match src="identifier: coupons [97548,97555]" dest="identifier: coupons [38308,38315]"/>
  <match src="comment: /**      * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * IMPORTANT: Beware that changing an allowance with this method brings the risk      * that someone may use both the old and the new allowance by unfortunate      * transaction ordering. One possible solution to mitigate this race      * condition is to first reduce the spender's allowance to 0 and set the      * desired value afterwards:      * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      *      * Emits an {Approval} event.      */ [12399,13041]" dest="comment: /**      * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * IMPORTANT: Beware that changing an allowance with this method brings the risk      * that someone may use both the old and the new allowance by unfortunate      * transaction ordering. One possible solution to mitigate this race      * condition is to first reduce the spender's allowance to 0 and set the      * desired value afterwards:      * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      *      * Emits an {Approval} event.      */ [17337,17979]"/>
  <match src="uint256: uint256 [32135,32142]" dest="uint256: uint256 [45513,45520]"/>
  <match src="identifier: reason [94295,94301]" dest="identifier: reason [35055,35061]"/>
  <match src="identifier: candidate [97652,97661]" dest="identifier: candidate [38412,38421]"/>
  <match src="identifier: FILE [46156,46160]" dest="identifier: FILE [53688,53692]"/>
  <match src="memory: memory [10015,10021]" dest="memory: memory [10579,10585]"/>
  <match src="call_expression [98686,98741]" dest="call_expression [39446,39501]"/>
  <match src="type_name [65833,65840]" dest="type_name [59696,59703]"/>
  <match src="internal: internal [42432,42440]" dest="internal: internal [24536,24544]"/>
  <match src=".: . [7633,7634]" dest=".: . [8197,8198]"/>
  <match src="function_body [9126,9173]" dest="function_body [9690,9737]"/>
  <match src="visibility [49656,49664]" dest="visibility [14363,14371]"/>
  <match src="if_statement [30872,31424]" dest="if_statement [44250,44802]"/>
  <match src="call_argument [9934,9945]" dest="call_argument [10498,10509]"/>
  <match src="identifier: period [82373,82379]" dest="identifier: period [21995,22001]"/>
  <match src=".: . [94102,94103]" dest=".: . [34862,34863]"/>
  <match src="(: ( [87938,87939]" dest="(: ( [28698,28699]"/>
  <match src="variable_declaration [35199,35208]" dest="variable_declaration [48577,48586]"/>
  <match src="user_defined_type [6730,6734]" dest="user_defined_type [7294,7298]"/>
  <match src=",: , [63132,63133]" dest=",: , [60799,60800]"/>
  <match src="identifier: D256 [43054,43058]" dest="identifier: D256 [25158,25162]"/>
  <match src="type_name [86109,86121]" dest="type_name [26869,26881]"/>
  <match src="public: public [89373,89379]" dest="public: public [30133,30139]"/>
  <match src=".: . [88282,88283]" dest=".: . [29042,29043]"/>
  <match src="identifier: bootstrappingPeriod [89702,89721]" dest="identifier: bootstrappingPeriod [30462,30481]"/>
  <match src="address: address [75636,75643]" dest="address: address [71105,71112]"/>
  <match src="identifier: COMMA [30514,30519]" dest="identifier: COMMA [43892,43897]"/>
  <match src="member_expression [97152,97199]" dest="member_expression [37912,37959]"/>
  <match src="expression_statement [95309,95375]" dest="expression_statement [36069,36135]"/>
  <match src="function_definition [93703,93826]" dest="function_definition [34463,34586]"/>
  <match src="assembly_statement [80886,80927]" dest="assembly_statement [67708,67749]"/>
  <match src="parameter [58929,58933]" dest="parameter [20521,20525]"/>
  <match src="member_expression [92046,92063]" dest="member_expression [32806,32823]"/>
  <match src="identifier: epochs [97097,97103]" dest="identifier: epochs [37857,37863]"/>
  <match src="identifier: msg [76987,76990]" dest="identifier: msg [66135,66138]"/>
  <match src="identifier: mul [76814,76817]" dest="identifier: mul [64961,64964]"/>
  <match src="{: { [7165,7166]" dest="{: { [7729,7730]"/>
  <match src="function_body [89303,89346]" dest="function_body [30063,30106]"/>
  <match src="type_name [51496,51503]" dest="type_name [16203,16210]"/>
  <match src="identifier: sender [48220,48226]" dest="identifier: sender [58686,58692]"/>
  <match src="return_type_definition [90858,90872]" dest="return_type_definition [31618,31632]"/>
  <match src="function_body [42902,42946]" dest="function_body [25006,25050]"/>
  <match src="primitive_type [59665,59672]" dest="primitive_type [71177,71184]"/>
  <match src="unary_expression [30876,30881]" dest="unary_expression [44254,44259]"/>
  <match src="identifier: provider [82887,82895]" dest="identifier: provider [22509,22517]"/>
  <match src="return_type_definition [6721,6742]" dest="return_type_definition [7285,7306]"/>
  <match src="{: { [82642,82643]" dest="{: { [22264,22265]"/>
  <match src="primitive_type [330,337]" dest="primitive_type [894,901]"/>
  <match src=",: , [50441,50442]" dest=",: , [15148,15149]"/>
  <match src="identifier: provider [87013,87021]" dest="identifier: provider [27773,27781]"/>
  <match src="comment: // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522 [1846,1917]" dest="comment: // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522 [2410,2481]"/>
  <match src="comment: /*     Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [69353,69981]" dest="comment: /*     Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [62996,63624]"/>
  <match src="type_name [86325,86331]" dest="type_name [27085,27091]"/>
  <match src="parameter [8949,8962]" dest="parameter [9513,9526]"/>
  <match src="type_cast_expression [35967,35990]" dest="type_cast_expression [49345,49368]"/>
  <match src="returns: returns [10055,10062]" dest="returns: returns [10619,10626]"/>
  <match src="call_argument [77522,77527]" dest="call_argument [66025,66030]"/>
  <match src="type_name [78520,78527]" dest="type_name [55934,55941]"/>
  <match src="string [840,872]" dest="string [1404,1436]"/>
  <match src="call_expression [4056,4093]" dest="call_expression [4620,4657]"/>
  <match src="]: ] [88785,88786]" dest="]: ] [29545,29546]"/>
  <match src="(: ( [76555,76556]" dest="(: ( [64808,64809]"/>
  <match src="parameter [8167,8183]" dest="parameter [8731,8747]"/>
  <match src="function_definition [89053,89144]" dest="function_definition [29813,29904]"/>
  <match src="view: view [92132,92136]" dest="view: view [32892,32896]"/>
  <match src="call_argument [8719,8767]" dest="call_argument [9283,9331]"/>
  <match src="call_expression [89812,89875]" dest="call_expression [30572,30635]"/>
  <match src="while_statement [34031,34100]" dest="while_statement [47409,47478]"/>
  <match src="returns: returns [355,362]" dest="returns: returns [919,926]"/>
  <match src="(: ( [68873,68874]" dest="(: ( [73719,73720]"/>
  <match src="assignment_expression [93917,93978]" dest="assignment_expression [34677,34738]"/>
  <match src="type_name [82059,82066]" dest="type_name [21681,21688]"/>
  <match src="type_name [75492,75499]" dest="type_name [64005,64012]"/>
  <match src="type_name [98411,98418]" dest="type_name [39171,39178]"/>
  <match src="): ) [85119,85120]" dest="): ) [69794,69795]"/>
  <match src="identifier: price0CumulativeLast [50984,51004]" dest="identifier: price0CumulativeLast [15691,15711]"/>
  <match src="{: { [89100,89101]" dest="{: { [29860,29861]"/>
  <match src="return_type_definition [63657,63674]" dest="return_type_definition [56986,57003]"/>
  <match src="string [426,455]" dest="string [990,1019]"/>
  <match src="number_literal: 0 [33412,33413]" dest="number_literal: 0 [46790,46791]"/>
  <match src="variable_declaration [98896,98911]" dest="variable_declaration [39656,39671]"/>
  <match src="[: [ [36477,36478]" dest="[: [ [49855,49856]"/>
  <match src="identifier: bootstrappingPeriod [89848,89867]" dest="identifier: bootstrappingPeriod [30608,30627]"/>
  <match src="state_mutability [49580,49584]" dest="state_mutability [14287,14291]"/>
  <match src="}: } [42491,42492]" dest="}: } [24595,24596]"/>
  <match src="string_literal [60447,60455]" dest="string_literal [55104,55112]"/>
  <match src="identifier: account [94905,94912]" dest="identifier: account [35665,35672]"/>
  <match src="): ) [73664,73665]" dest="): ) [72630,72631]"/>
  <match src="): ) [50659,50660]" dest="): ) [15366,15367]"/>
  <match src="uint256: uint256 [63108,63115]" dest="uint256: uint256 [60783,60790]"/>
  <match src="parameter [93433,93447]" dest="parameter [34193,34207]"/>
  <match src="is: is [15739,15741]" dest="is: is [55011,55013]"/>
  <match src="call_expression [76961,77010]" dest="call_expression [66116,66188]"/>
  <match src="array_access [96672,96694]" dest="array_access [37432,37454]"/>
  <match src="identifier: file [31010,31014]" dest="identifier: file [44388,44392]"/>
  <match src="): ) [88281,88282]" dest="): ) [29041,29042]"/>
  <match src="call_argument [29184,29190]" dest="call_argument [42562,42568]"/>
  <match src="identifier: RPAREN [30590,30596]" dest="identifier: RPAREN [43968,43974]"/>
  <match src="): ) [33756,33757]" dest="): ) [47134,47135]"/>
  <match src="identifier: sender [77831,77837]" dest="identifier: sender [65745,65751]"/>
  <match src="): ) [76569,76570]" dest="): ) [64822,64823]"/>
  <match src="call_argument [77064,77099]" dest="call_argument [65199,65237]"/>
  <match src="return: return [88210,88216]" dest="return: return [28970,28976]"/>
  <match src="primitive_type [91003,91010]" dest="primitive_type [31763,31770]"/>
  <match src="visibility [6106,6114]" dest="visibility [6670,6678]"/>
  <match src="identifier: amount [93441,93447]" dest="identifier: amount [34201,34207]"/>
  <match src="identifier: totalBonded [76722,76733]" dest="identifier: totalBonded [64922,64933]"/>
  <match src="function: function [93538,93546]" dest="function: function [34298,34306]"/>
  <match src="identifier: b [2025,2026]" dest="identifier: b [2589,2590]"/>
  <match src="comment: /* Oracle */ [41587,41599]" dest="comment: /* Oracle */ [23691,23703]"/>
  <match src="call_struct_argument [6178,6196]" dest="call_struct_argument [6742,6760]"/>
  <match src="parameter [95157,95171]" dest="parameter [35917,35931]"/>
  <match src="identifier: value [76418,76423]" dest="identifier: value [66062,66067]"/>
  <match src="identifier: epochTime [89361,89370]" dest="identifier: epochTime [30121,30130]"/>
  <match src=".: . [98331,98332]" dest=".: . [39091,39092]"/>
  <match src="identifier: msg [78644,78647]" dest="identifier: msg [58094,58097]"/>
  <match src="type_name [78379,78386]" dest="type_name [60801,60808]"/>
  <match src="array_access [94949,94973]" dest="array_access [35709,35733]"/>
  <match src="{: { [81608,81609]" dest="{: { [21230,21231]"/>
  <match src="type_name [75379,75386]" dest="type_name [63851,63858]"/>
  <match src="type_name [60716,60723]" dest="type_name [74592,74599]"/>
  <match src="type_name [82958,82989]" dest="type_name [22580,22611]"/>
  <match src=".: . [6186,6187]" dest=".: . [6750,6751]"/>
  <match src="member_expression [89219,89231]" dest="member_expression [29979,29991]"/>
  <match src="revert_statement [29625,29990]" dest="revert_statement [43003,43368]"/>
  <match src=".: . [87852,87853]" dest=".: . [28612,28613]"/>
  <match src="number_literal: 2 [9450,9451]" dest="number_literal: 2 [10014,10015]"/>
  <match src="member_expression [6778,6792]" dest="member_expression [7342,7356]"/>
  <match src="address: address [80362,80369]" dest="address: address [67184,67191]"/>
  <match src="identifier: COLON [31752,31757]" dest="identifier: COLON [45130,45135]"/>
  <match src="{: { [9412,9413]" dest="{: { [9976,9977]"/>
  <match src="}: } [80926,80927]" dest="}: } [67748,67749]"/>
  <match src="call_expression [68732,68767]" dest="call_expression [60408,60441]"/>
  <match src="type_name [88565,88572]" dest="type_name [29325,29332]"/>
  <match src="identifier: reason [7026,7032]" dest="identifier: reason [7590,7596]"/>
  <match src="member_expression [93939,93962]" dest="member_expression [34699,34722]"/>
  <match src="identifier: staged [95348,95354]" dest="identifier: staged [36108,36114]"/>
  <match src="(: ( [94117,94118]" dest="(: ( [34877,34878]"/>
  <match src="]: ] [96656,96657]" dest="]: ] [37416,37417]"/>
  <match src="call_argument [8535,8545]" dest="call_argument [9099,9109]"/>
  <match src="type_name [30696,30700]" dest="type_name [44074,44078]"/>
  <match src="(: ( [90866,90867]" dest="(: ( [31626,31627]"/>
  <match src="identifier: LPAREN [30437,30443]" dest="identifier: LPAREN [43815,43821]"/>
  <match src="member_expression [43800,43812]" dest="member_expression [25904,25916]"/>
  <match src="visibility [58892,58898]" dest="visibility [20484,20490]"/>
  <match src=".: . [89129,89130]" dest=".: . [29889,29890]"/>
  <match src="struct_member [82652,82667]" dest="struct_member [22274,22289]"/>
  <match src="state_variable_declaration [27674,27702]" dest="state_variable_declaration [41052,41080]"/>
  <match src="identifier: balance [86769,86776]" dest="identifier: balance [27529,27536]"/>
  <match src="=: = [41741,41742]" dest="=: = [23845,23846]"/>
  <match src="call_expression [95935,95994]" dest="call_expression [36695,36754]"/>
  <match src="event: event [13693,13698]" dest="event: event [18631,18636]"/>
  <match src="(: ( [6949,6950]" dest="(: ( [7513,7514]"/>
  <match src="returns: returns [43277,43284]" dest="returns: returns [25381,25388]"/>
  <match src="}: } [28779,28780]" dest="}: } [42157,42158]"/>
  <match src=",: , [98732,98733]" dest=",: , [39492,39493]"/>
  <match src="return: return [90883,90889]" dest="return: return [31643,31649]"/>
  <match src="==: == [1932,1934]" dest="==: == [2496,2498]"/>
  <match src=",: , [96098,96099]" dest=",: , [36858,36859]"/>
  <match src="member_expression [86647,86662]" dest="member_expression [27407,27422]"/>
  <match src="call_struct_argument [7622,7639]" dest="call_struct_argument [8186,8203]"/>
  <match src="call_expression [28580,28606]" dest="call_expression [41958,41984]"/>
  <match src="function: function [78846,78854]" dest="function: function [53375,53383]"/>
  <match src="type_name [60687,60694]" dest="type_name [74607,74614]"/>
  <match src="primitive_type [50170,50174]" dest="primitive_type [14877,14881]"/>
  <match src="parameter [49873,49883]" dest="parameter [14580,14590]"/>
  <match src="&quot;: &quot; [25277,25278]" dest="&quot;: &quot; [72355,72356]"/>
  <match src=".: . [76936,76937]" dest=".: . [65670,65671]"/>
  <match src="primitive_type [1348,1355]" dest="primitive_type [1912,1919]"/>
  <match src="(: ( [8096,8097]" dest="(: ( [8660,8661]"/>
  <match src="comment: // contracts then. [80803,80821]" dest="comment: // contracts then. [67625,67643]"/>
  <match src="block_statement [29611,30000]" dest="block_statement [42989,43378]"/>
  <match src="identifier: statusOf [100026,100034]" dest="identifier: statusOf [62383,62391]"/>
  <match src="&quot;: &quot; [78037,78038]" dest="&quot;: &quot; [53876,53877]"/>
  <match src="): ) [76463,76464]" dest="): ) [65561,65562]"/>
  <match src="expression_statement [7672,7678]" dest="expression_statement [8236,8242]"/>
  <match src="member_expression [93917,93931]" dest="member_expression [34677,34691]"/>
  <match src="struct_member [82478,82495]" dest="struct_member [22100,22117]"/>
  <match src="struct_member [82602,82615]" dest="struct_member [22224,22237]"/>
  <match src="struct_member [83006,83053]" dest="struct_member [22628,22675]"/>
  <match src=",: , [76997,76998]" dest=",: , [66145,66146]"/>
  <match src="type_name [93278,93285]" dest="type_name [34038,34045]"/>
  <match src="identifier: candidates [83042,83052]" dest="identifier: candidates [22664,22674]"/>
  <match src="identifier: Bond [75462,75466]" dest="identifier: Unbond [63973,63979]"/>
  <match src=".: . [89908,89909]" dest=".: . [30668,30669]"/>
  <match src="uint256: uint256 [94914,94921]" dest="uint256: uint256 [35674,35681]"/>
  <match src="pure: pure [50670,50674]" dest="pure: pure [15377,15381]"/>
  <match src="identifier: SafeMath [67021,67029]" dest="identifier: SafeMath [70766,70774]"/>
  <match src="return_type_definition [5871,5892]" dest="return_type_definition [6435,6456]"/>
  <match src="(: ( [93198,93199]" dest="(: ( [33958,33959]"/>
  <match src="function: function [8781,8789]" dest="function: function [9345,9353]"/>
  <match src="identifier: reserve0 [50915,50923]" dest="identifier: reserve0 [15622,15630]"/>
  <match src="call_argument [77988,78005]" dest="call_argument [53827,53844]"/>
  <match src="comment: // ============ Library Functions ============ [27757,27803]" dest="comment: // ============ Library Functions ============ [41135,41181]"/>
  <match src="function: function [43342,43350]" dest="function: function [25446,25454]"/>
  <match src="uint256: uint256 [41969,41976]" dest="uint256: uint256 [24073,24080]"/>
  <match src="member_expression [76778,76817]" dest="member_expression [64955,64964]"/>
  <match src="function: function [85067,85075]" dest="function: function [69742,69750]"/>
  <match src="call_expression [97327,97352]" dest="call_expression [38087,38112]"/>
  <match src=",: , [90568,90569]" dest=",: , [31328,31329]"/>
  <match src="external: external [51505,51513]" dest="external: external [16212,16220]"/>
  <match src="member_expression [93788,93811]" dest="member_expression [34548,34571]"/>
  <match src="identifier: candidate [97854,97863]" dest="identifier: candidate [38614,38623]"/>
  <match src="): ) [7471,7472]" dest="): ) [8035,8036]"/>
  <match src="primitive_type [86525,86530]" dest="primitive_type [27285,27290]"/>
  <match src="call_expression [23114,23140]" dest="call_expression [51617,51651]"/>
  <match src="state_mutability [86311,86315]" dest="state_mutability [27071,27075]"/>
  <match src="identifier: Require [100266,100273]" dest="identifier: Require [62623,62630]"/>
  <match src=",: , [77172,77173]" dest=",: , [66237,66238]"/>
  <match src="identifier: j [34038,34039]" dest="identifier: j [47416,47417]"/>
  <match src=",: , [78822,78823]" dest=",: , [72721,72722]"/>
  <match src="parameter [90265,90278]" dest="parameter [31025,31038]"/>
  <match src=",: , [29191,29192]" dest=",: , [42569,42570]"/>
  <match src="expression_statement [35046,35086]" dest="expression_statement [48424,48464]"/>
  <match src="): ) [87362,87363]" dest="): ) [28122,28123]"/>
  <match src="using: using [15764,15769]" dest="using: using [55039,55044]"/>
  <match src="for: for [75009,75012]" dest="for: for [63686,63689]"/>
  <match src="uint256: uint256 [17620,17627]" dest="uint256: uint256 [52126,52133]"/>
  <match src="public: public [87956,87962]" dest="public: public [28716,28722]"/>
  <match src="return_statement [89805,89876]" dest="return_statement [30565,30636]"/>
  <match src="parameter [50072,50085]" dest="parameter [14779,14792]"/>
  <match src="event_paramater [49245,49265]" dest="event_paramater [13952,13972]"/>
  <match src=",: , [13482,13483]" dest=",: , [18420,18421]"/>
  <match src="function_body [34776,35626]" dest="function_body [48154,49004]"/>
  <match src="uint256: uint256 [91473,91480]" dest="uint256: uint256 [32233,32240]"/>
  <match src="string [33917,33920]" dest="string [47295,47298]"/>
  <match src="&lt;=: &lt;= [90896,90898]" dest="&lt;=: &lt;= [31656,31658]"/>
  <match src="identifier: newPhantom [76999,77009]" dest="identifier: balance [66147,66154]"/>
  <match src="type_name [81982,81989]" dest="type_name [21604,21611]"/>
  <match src="{: { [7620,7621]" dest="{: { [8184,8185]"/>
  <match src="): ) [29742,29743]" dest="): ) [43120,43121]"/>
  <match src="identifier: approve [93140,93147]" dest="identifier: approve [33900,33907]"/>
  <match src="parameter [49468,49473]" dest="parameter [14175,14180]"/>
  <match src="bytes32: bytes32 [27851,27858]" dest="bytes32: bytes32 [41229,41236]"/>
  <match src="call_argument [84855,84869]" dest="call_argument [69530,69544]"/>
  <match src="bytes: bytes [33852,33857]" dest="bytes: bytes [47230,47235]"/>
  <match src="function_body [93458,93532]" dest="function_body [34218,34292]"/>
  <match src="}: } [93233,93234]" dest="}: } [33993,33994]"/>
  <match src="primitive_type [89394,89401]" dest="primitive_type [30154,30161]"/>
  <match src="identifier: owner [96431,96436]" dest="identifier: owner [37191,37196]"/>
  <match src="return: return [91358,91364]" dest="return: return [32118,32124]"/>
  <match src="identifier: self [6475,6479]" dest="identifier: self [7039,7043]"/>
  <match src="unary_expression [28969,28974]" dest="unary_expression [42347,42352]"/>
  <match src="=: = [35752,35753]" dest="=: = [49130,49131]"/>
  <match src="type_name [18302,18309]" dest="type_name [11795,11802]"/>
  <match src="): ) [33020,33021]" dest="): ) [46398,46399]"/>
  <match src="address: address [99100,99107]" dest="address: address [39860,39867]"/>
  <match src="): ) [96739,96740]" dest="): ) [37499,37500]"/>
  <match src="expression_statement [100455,100577]" dest="expression_statement [62812,62934]"/>
  <match src="(: ( [7777,7778]" dest="(: ( [8341,8342]"/>
  <match src="]: ] [96630,96631]" dest="]: ] [37390,37391]"/>
  <match src="identifier: balance [95067,95074]" dest="identifier: balance [35827,35834]"/>
  <match src="string: string [32243,32249]" dest="string: string [45621,45627]"/>
  <match src="type_name [88898,88905]" dest="type_name [29658,29665]"/>
  <match src=".: . [93794,93795]" dest=".: . [34554,34555]"/>
  <match src=",: , [73192,73193]" dest=",: , [52325,52326]"/>
  <match src="primitive_type [93090,93094]" dest="primitive_type [33850,33854]"/>
  <match src="state_mutability [39843,39847]" dest="state_mutability [13741,13745]"/>
  <match src="=: = [93937,93938]" dest="=: = [34697,34698]"/>
  <match src="=: = [94807,94808]" dest="=: = [35567,35568]"/>
  <match src="uint256: uint256 [82752,82759]" dest="uint256: uint256 [22374,22381]"/>
  <match src="primitive_type [82365,82372]" dest="primitive_type [21987,21994]"/>
  <match src="address: address [88072,88079]" dest="address: address [28832,28839]"/>
  <match src="parameter [8815,8828]" dest="parameter [9379,9392]"/>
  <match src="): ) [98350,98351]" dest="): ) [39110,39111]"/>
  <match src=":: : [10182,10183]" dest=":: : [10746,10747]"/>
  <match src="primitive_type [80418,80425]" dest="primitive_type [67240,67247]"/>
  <match src="call_argument [20134,20140]" dest="call_argument [58896,58902]"/>
  <match src="(: ( [84625,84626]" dest="(: ( [69300,69301]"/>
  <match src="visibility [51250,51258]" dest="visibility [15957,15965]"/>
  <match src="private: private [63649,63656]" dest="private: private [60989,60996]"/>
  <match src="identifier: getCouponExpiration [43606,43625]" dest="identifier: getCouponExpiration [25710,25729]"/>
  <match src="type_name [82478,82482]" dest="type_name [22100,22104]"/>
  <match src="yul_identifier [80897,80901]" dest="yul_identifier [67719,67723]"/>
  <match src="member_expression [93625,93639]" dest="member_expression [34385,34399]"/>
  <match src="{: { [91616,91617]" dest="{: { [32376,32377]"/>
  <match src="[: [ [91650,91651]" dest="[: [ [32410,32411]"/>
  <match src="return: return [86755,86761]" dest="return: return [27515,27521]"/>
  <match src="}: } [8366,8367]" dest="}: } [8930,8931]"/>
  <match src="parameter [90704,90717]" dest="parameter [31464,31477]"/>
  <match src="{: { [61655,61656]" dest="{: { [61271,61272]"/>
  <match src="state_mutability [87790,87794]" dest="state_mutability [28550,28554]"/>
  <match src="assignment_expression [96828,96878]" dest="assignment_expression [37588,37638]"/>
  <match src="identifier: Sync [50585,50589]" dest="identifier: Sync [15292,15296]"/>
  <match src="return: return [33660,33666]" dest="return: return [47038,47044]"/>
  <match src="identifier: Status [81619,81625]" dest="identifier: Status [21241,21247]"/>
  <match src="type_name [90740,90747]" dest="type_name [31500,31507]"/>
  <match src="type_name [759,766]" dest="type_name [1323,1330]"/>
  <match src="function: function [64094,64102]" dest="function: function [56764,56772]"/>
  <match src="function: function [93019,93027]" dest="function: function [33779,33787]"/>
  <match src="primitive_type [95173,95179]" dest="primitive_type [35933,35939]"/>
  <match src="call_argument [20084,20090]" dest="call_argument [51206,51212]"/>
  <match src="identifier: _state [91499,91505]" dest="identifier: _state [32259,32265]"/>
  <match src="identifier: a [327,328]" dest="identifier: a [891,892]"/>
  <match src="return_statement [42912,42940]" dest="return_statement [25016,25044]"/>
  <match src="function_definition [64094,64177]" dest="function_definition [56764,56924]"/>
  <match src="{: { [82239,82240]" dest="{: { [21861,21862]"/>
  <match src="type_name [82752,82759]" dest="type_name [22374,22381]"/>
  <match src="identifier: balance [94452,94459]" dest="identifier: balance [35212,35219]"/>
  <match src="return: return [42794,42800]" dest="return: return [24898,24904]"/>
  <match src="event_paramater [13750,13763]" dest="event_paramater [18688,18701]"/>
  <match src="internal: internal [6509,6517]" dest="internal: internal [7073,7081]"/>
  <match src="identifier: initializeCouponsExpiration [97008,97035]" dest="identifier: initializeCouponsExpiration [37768,37795]"/>
  <match src="contract_declaration [81591,81912]" dest="contract_declaration [21213,21534]"/>
  <match src="uint256: uint256 [7657,7664]" dest="uint256: uint256 [8221,8228]"/>
  <match src="uint256: uint256 [75319,75326]" dest="uint256: uint256 [63791,63798]"/>
  <match src="primitive_type [30054,30061]" dest="primitive_type [43432,43439]"/>
  <match src="): ) [43172,43173]" dest="): ) [25276,25277]"/>
  <match src=".: . [93513,93514]" dest=".: . [34273,34274]"/>
  <match src="private: private [78870,78877]" dest="private: private [53399,53406]"/>
  <match src=":: : [8104,8105]" dest=":: : [8668,8669]"/>
  <match src="identifier: owner [88978,88983]" dest="identifier: owner [29738,29743]"/>
  <match src="return: return [91626,91632]" dest="return: return [32386,32392]"/>
  <match src="binary_expression [33884,33894]" dest="binary_expression [47262,47272]"/>
  <match src="address: address [95140,95147]" dest="address: address [35900,35907]"/>
  <match src="&quot;: &quot; [19141,19142]" dest="&quot;: &quot; [64180,64181]"/>
  <match src="(: ( [30188,30189]" dest="(: ( [43566,43567]"/>
  <match src="public: public [90138,90144]" dest="public: public [30898,30904]"/>
  <match src="): ) [80924,80925]" dest="): ) [67746,67747]"/>
  <match src="event: event [49150,49155]" dest="event: event [13857,13862]"/>
  <match src="identifier: balanceOf [49546,49555]" dest="identifier: balanceOf [14253,14262]"/>
  <match src="visibility [28933,28941]" dest="visibility [42311,42319]"/>
  <match src="state_mutability [87267,87271]" dest="state_mutability [28027,28031]"/>
  <match src="call_argument [76425,76463]" dest="call_argument [73073,73084]"/>
  <match src="&quot;: &quot; [76462,76463]" dest="&quot;: &quot; [73083,73084]"/>
  <match src=".: . [78704,78705]" dest=".: . [57808,57809]"/>
  <match src="call_argument [95086,95092]" dest="call_argument [35846,35852]"/>
  <match src="identifier: D256 [58916,58920]" dest="identifier: D256 [20508,20512]"/>
  <match src="external: external [49321,49329]" dest="external: external [14028,14036]"/>
  <match src="primitive_type [60716,60723]" dest="primitive_type [74592,74599]"/>
  <match src="event: event [50399,50404]" dest="event: event [15106,15111]"/>
  <match src="identifier: reason [29525,29531]" dest="identifier: reason [42903,42909]"/>
  <match src="identifier: candidate [91575,91584]" dest="identifier: candidate [32335,32344]"/>
  <match src="uint256: uint256 [91739,91746]" dest="uint256: uint256 [32499,32506]"/>
  <match src="): ) [28974,28975]" dest="): ) [42352,42353]"/>
  <match src="returns: returns [13509,13516]" dest="returns: returns [18447,18454]"/>
  <match src="): ) [87781,87782]" dest="): ) [28541,28542]"/>
  <match src=",: , [7087,7088]" dest=",: , [7651,7652]"/>
  <match src="): ) [8991,8992]" dest="): ) [9555,9556]"/>
  <match src="uint256: uint256 [13987,13994]" dest="uint256: uint256 [18925,18932]"/>
  <match src="bytes: bytes [51361,51366]" dest="bytes: bytes [16068,16073]"/>
  <match src="function_body [93756,93826]" dest="function_body [34516,34586]"/>
  <match src="]: ] [96436,96437]" dest="]: ] [37196,37197]"/>
  <match src="identifier: _state [98850,98856]" dest="identifier: _state [39610,39616]"/>
  <match src="primitive_type [68697,68704]" dest="primitive_type [60390,60397]"/>
  <match src="=: = [63431,63432]" dest="=: = [61321,61322]"/>
  <match src="returns: returns [93322,93329]" dest="returns: returns [34082,34089]"/>
  <match src="(: ( [85185,85186]" dest="(: ( [69860,69861]"/>
  <match src="primitive_type [33749,33754]" dest="primitive_type [47127,47132]"/>
  <match src="call_expression [29042,29398]" dest="call_expression [42420,42776]"/>
  <match src="return_type_definition [49396,49419]" dest="return_type_definition [14103,14126]"/>
  <match src="): ) [1337,1338]" dest="): ) [1901,1902]"/>
  <match src="visibility [41795,41802]" dest="visibility [23899,23906]"/>
  <match src="call_expression [8092,8132]" dest="call_expression [8656,8696]"/>
  <match src="primitive_type [21839,21846]" dest="primitive_type [57932,57939]"/>
  <match src=",: , [93874,93875]" dest=",: , [34634,34635]"/>
  <match src="type_name [9591,9595]" dest="type_name [10155,10159]"/>
  <match src="identifier: owner [96688,96693]" dest="identifier: owner [37448,37453]"/>
  <match src="visibility [51185,51193]" dest="visibility [15892,15900]"/>
  <match src="(: ( [49318,49319]" dest="(: ( [14025,14026]"/>
  <match src="call_argument [34806,34811]" dest="call_argument [48184,48189]"/>
  <match src="address: address [96535,96542]" dest="address: address [37295,37302]"/>
  <match src="private: private [42107,42114]" dest="private: private [24211,24218]"/>
  <match src="visibility [86504,86510]" dest="visibility [27264,27270]"/>
  <match src="call_expression [98295,98351]" dest="call_expression [39055,39111]"/>
  <match src="call_argument [31877,31885]" dest="call_argument [45255,45263]"/>
  <match src="{: { [82160,82161]" dest="{: { [21782,21783]"/>
  <match src=",: , [29826,29827]" dest=",: , [43204,43205]"/>
  <match src="internal: internal [5964,5972]" dest="internal: internal [6528,6536]"/>
  <match src="constant: constant [42337,42345]" dest="constant: constant [24441,24449]"/>
  <match src="visibility [11555,11563]" dest="visibility [16493,16501]"/>
  <match src="string: string [49405,49411]" dest="string: string [14112,14118]"/>
  <match src="bytes32: bytes32 [30054,30061]" dest="bytes32: bytes32 [43432,43439]"/>
  <match src="type_name [30715,30722]" dest="type_name [44093,44100]"/>
  <match src="variable_declaration_statement [7596,7643]" dest="variable_declaration_statement [8160,8207]"/>
  <match src="type_name [25755,25762]" dest="type_name [55276,55283]"/>
  <match src="(: ( [23063,23064]" dest="(: ( [51564,51565]"/>
  <match src="call_argument [22490,22496]" dest="call_argument [11687,11693]"/>
  <match src="address: address [84626,84633]" dest="address: address [69301,69308]"/>
  <match src="!: ! [27934,27935]" dest="!: ! [41312,41313]"/>
  <match src="identifier: account [80370,80377]" dest="identifier: account [67192,67199]"/>
  <match src="identifier: Require [78085,78092]" dest="identifier: Require [72797,72804]"/>
  <match src="identifier: _state [88762,88768]" dest="identifier: _state [29522,29528]"/>
  <match src=".: . [95736,95737]" dest=".: . [36496,36497]"/>
  <match src="comment: /*     Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [85398,86026]" dest="comment: /*     Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [70073,70701]"/>
  <match src=",: , [82274,82275]" dest=",: , [21896,21897]"/>
  <match src=":: : [43065,43066]" dest=":: : [25169,25170]"/>
  <match src=",: , [95171,95172]" dest=",: , [35931,35932]"/>
  <match src="identifier: _state [86762,86768]" dest="identifier: _state [27522,27528]"/>
  <match src="comment: /*     Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [47086,47714]" dest="comment: /*     Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [22731,23359]"/>
  <match src="binary_expression [76722,76740]" dest="binary_expression [64922,64940]"/>
  <match src="identifier: b [7676,7677]" dest="identifier: b [8240,8241]"/>
  <match src="}: } [94579,94580]" dest="}: } [35339,35340]"/>
  <match src="identifier: Mint [50249,50253]" dest="identifier: Mint [14956,14960]"/>
  <match src="number_literal: 1 [89873,89874]" dest="number_literal: 1 [30633,30634]"/>
  <match src="(: ( [93036,93037]" dest="(: ( [33796,33797]"/>
  <match src="call_argument [77435,77440]" dest="call_argument [65486,65507]"/>
  <match src="}: } [4766,4767]" dest="}: } [5330,5331]"/>
  <match src="primitive_type [45372,45379]" dest="primitive_type [65331,65338]"/>
  <match src="): ) [77527,77528]" dest="): ) [66030,66031]"/>
  <match src=".: . [6598,6599]" dest=".: . [7162,7163]"/>
  <match src=".: . [91527,91528]" dest=".: . [32287,32288]"/>
  <match src="identifier: _state [93649,93655]" dest="identifier: _state [34409,34415]"/>
  <match src="identifier: sender [50270,50276]" dest="identifier: sender [14977,14983]"/>
  <match src=",: , [30443,30444]" dest=",: , [43821,43822]"/>
  <match src="identifier: file [32045,32049]" dest="identifier: file [45423,45427]"/>
  <match src="binary_expression [9143,9166]" dest="binary_expression [9707,9730]"/>
  <match src="identifier: account [94383,94390]" dest="identifier: account [35143,35150]"/>
  <match src="member_expression [94540,94565]" dest="member_expression [35300,35325]"/>
  <match src="contract: contract [60345,60353]" dest="contract: contract [59543,59551]"/>
  <match src="function: function [9046,9054]" dest="function: function [9610,9618]"/>
  <match src="expression_statement [100266,100398]" dest="expression_statement [62623,62755]"/>
  <match src="uint256: uint256 [15783,15790]" dest="uint256: uint256 [55058,55065]"/>
  <match src="visibility [33822,33829]" dest="visibility [47200,47207]"/>
  <match src="call_argument [95680,95686]" dest="call_argument [36440,36446]"/>
  <match src="external: external [50087,50095]" dest="external: external [14794,14802]"/>
  <match src="function_definition [50751,50801]" dest="function_definition [15458,15508]"/>
  <match src="return_statement [61781,61811]" dest="return_statement [61489,61510]"/>
  <match src="(: ( [6988,6989]" dest="(: ( [7552,7553]"/>
  <match src="primitive_type [42893,42900]" dest="primitive_type [24997,25004]"/>
  <match src="internal: internal [72271,72279]" dest="internal: internal [55683,55691]"/>
  <match src="parameter [30761,30777]" dest="parameter [44139,44155]"/>
  <match src="type_name [17620,17627]" dest="type_name [52126,52133]"/>
  <match src="type_name [27851,27858]" dest="type_name [41229,41236]"/>
  <match src="]: ] [94485,94486]" dest="]: ] [35245,35246]"/>
  <match src="address: address [49784,49791]" dest="address: address [14491,14498]"/>
  <match src="visibility [87783,87789]" dest="visibility [28543,28549]"/>
  <match src="call_argument [28130,28156]" dest="call_argument [41508,41534]"/>
  <match src="call_argument [36863,36890]" dest="call_argument [50241,50268]"/>
  <match src="return_statement [42794,42824]" dest="return_statement [24898,24928]"/>
  <match src="bool: bool [58929,58933]" dest="bool: bool [20521,20525]"/>
  <match src="indexed: indexed [49275,49282]" dest="indexed: indexed [13982,13989]"/>
  <match src="expression_statement [100142,100144]" dest="expression_statement [62499,62501]"/>
  <match src="identifier: Epoch [81923,81928]" dest="identifier: Epoch [21545,21550]"/>
  <match src="(: ( [53715,53716]" dest="(: ( [65666,65667]"/>
  <match src="internal: internal [4667,4675]" dest="internal: internal [5231,5239]"/>
  <match src=",: , [31046,31047]" dest=",: , [44424,44425]"/>
  <match src="member_expression [96004,96044]" dest="member_expression [36764,36804]"/>
  <match src="): ) [4697,4698]" dest="): ) [5261,5262]"/>
  <match src="identifier: candidates [97705,97715]" dest="identifier: candidates [38465,38475]"/>
  <match src="identifier: b [8637,8638]" dest="identifier: b [9201,9202]"/>
  <match src=".: . [97477,97478]" dest=".: . [38237,38238]"/>
  <match src="member_expression [76350,76360]" dest="member_expression [64628,64638]"/>
  <match src="identifier: FILE [45927,45931]" dest="identifier: FILE [57207,57211]"/>
  <match src="identifier: value [8881,8886]" dest="identifier: value [9445,9450]"/>
  <match src="identifier: slot [85354,85358]" dest="identifier: slot [70029,70033]"/>
  <match src="(: ( [833,834]" dest="(: ( [1397,1398]"/>
  <match src="(: ( [32639,32640]" dest="(: ( [46017,46018]"/>
  <match src="(: ( [58978,58979]" dest="(: ( [20570,20571]"/>
  <match src="return_type_definition [86516,86531]" dest="return_type_definition [27276,27291]"/>
  <match src="uint256: uint256 [27714,27721]" dest="uint256: uint256 [41092,41099]"/>
  <match src="): ) [94301,94302]" dest="): ) [35061,35062]"/>
  <match src="block_statement [32205,32746]" dest="block_statement [45583,46124]"/>
  <match src="parameter [50110,50114]" dest="parameter [14817,14821]"/>
  <match src=",: , [19717,19718]" dest=",: , [58233,58234]"/>
  <match src="identifier: _state [88003,88009]" dest="identifier: _state [28763,28769]"/>
  <match src="): ) [31014,31015]" dest="): ) [44392,44393]"/>
  <match src="expression_statement [100587,100617]" dest="expression_statement [62944,62974]"/>
  <match src="constant: constant [41903,41911]" dest="constant: constant [24007,24015]"/>
  <match src="parameter [86325,86338]" dest="parameter [27085,27098]"/>
  <match src="primitive_type [80362,80369]" dest="primitive_type [67184,67191]"/>
  <match src="call_expression [7615,7642]" dest="call_expression [8179,8206]"/>
  <match src="(: ( [75996,75997]" dest="(: ( [64544,64545]"/>
  <match src="identifier: file [28518,28522]" dest="identifier: file [41896,41900]"/>
  <match src="assignment_expression [96004,96107]" dest="assignment_expression [36764,36867]"/>
  <match src="return_type_definition [35705,35727]" dest="return_type_definition [49083,49105]"/>
  <match src=".: . [77629,77630]" dest=".: . [57454,57455]"/>
  <match src="): ) [36733,36734]" dest="): ) [50111,50112]"/>
  <match src="if_statement [98969,99067]" dest="if_statement [39729,39827]"/>
  <match src="parameter [91983,92000]" dest="parameter [32743,32760]"/>
  <match src="=: = [95933,95934]" dest="=: = [36693,36694]"/>
  <match src="type_name [93090,93094]" dest="type_name [33850,33854]"/>
  <match src="internal: internal [93747,93755]" dest="internal: internal [34507,34515]"/>
  <match src="type_name [27714,27721]" dest="type_name [41092,41099]"/>
  <match src="parameter [93731,93745]" dest="parameter [34491,34505]"/>
  <match src="type_name [88603,88617]" dest="type_name [29363,29377]"/>
  <match src="struct_declaration [82319,82501]" dest="struct_declaration [21941,22123]"/>
  <match src="variable_declaration_tuple [78360,78396]" dest="variable_declaration_tuple [56205,56266]"/>
  <match src="return_statement [8085,8133]" dest="return_statement [8649,8697]"/>
  <match src="parenthesized_expression [34554,34562]" dest="parenthesized_expression [47932,47940]"/>
  <match src="type_name [90159,90166]" dest="type_name [30919,30926]"/>
  <match src="{: { [76580,76581]" dest="{: { [64863,64864]"/>
  <match src="call_expression [9288,9306]" dest="call_expression [9852,9870]"/>
  <match src="type_name [85094,85101]" dest="type_name [69769,69776]"/>
  <match src="identifier: _state [94949,94955]" dest="identifier: _state [35709,35715]"/>
  <match src="array_access [35379,35397]" dest="array_access [48757,48775]"/>
  <match src="identifier: add [96297,96300]" dest="identifier: add [37057,37060]"/>
  <match src="function_definition [96485,96747]" dest="function_definition [37245,37507]"/>
  <match src="private: private [41383,41390]" dest="private: private [23487,23494]"/>
  <match src="function_body [86879,86904]" dest="function_body [27639,27664]"/>
  <match src="primitive_type [93165,93172]" dest="primitive_type [33925,33932]"/>
  <match src="call_argument [100292,100333]" dest="call_argument [62649,62690]"/>
  <match src=":: : [7627,7628]" dest=":: : [8191,8192]"/>
  <match src="external: external [76290,76298]" dest="external: external [72778,72786]"/>
  <match src="identifier: a [423,424]" dest="identifier: a [987,988]"/>
  <match src=",: , [77156,77157]" dest=",: , [66221,66222]"/>
  <match src="return_type_definition [43899,43916]" dest="return_type_definition [26003,26020]"/>
  <match src="string: string [30234,30240]" dest="string: string [43612,43618]"/>
  <match src="call_expression [77020,77100]" dest="call_expression [65155,65238]"/>
  <match src="}: } [91953,91954]" dest="}: } [32713,32714]"/>
  <match src="event: event [50243,50248]" dest="event: event [14950,14955]"/>
  <match src="state_variable_declaration [41375,41426]" dest="state_variable_declaration [23479,23530]"/>
  <match src="view: view [87688,87692]" dest="view: view [28448,28452]"/>
  <match src="identifier: a [6185,6186]" dest="identifier: a [6749,6750]"/>
  <match src="type_name [2569,2576]" dest="type_name [3133,3140]"/>
  <match src="{: { [8859,8860]" dest="{: { [9423,9424]"/>
  <match src="external: external [76012,76020]" dest="external: external [64560,64568]"/>
  <match src="(: ( [100442,100443]" dest="(: ( [62799,62800]"/>
  <match src="]: ] [88026,88027]" dest="]: ] [28786,28787]"/>
  <match src="}: } [87230,87231]" dest="}: } [27990,27991]"/>
  <match src=".: . [8116,8117]" dest=".: . [8680,8681]"/>
  <match src="user_defined_type [8815,8819]" dest="user_defined_type [9379,9383]"/>
  <match src="primitive_type [62559,62566]" dest="primitive_type [65917,65924]"/>
  <match src=".: . [98714,98715]" dest=".: . [39474,39475]"/>
  <match src="identifier: spender [96455,96462]" dest="identifier: spender [37215,37222]"/>
  <match src="identifier: payloadC [32143,32151]" dest="identifier: payloadC [45521,45529]"/>
  <match src="): ) [75798,75799]" dest="): ) [64371,64372]"/>
  <match src="contract_declaration [99825,100637]" dest="contract_declaration [62182,62994]"/>
  <match src="variable_declaration [98828,98847]" dest="variable_declaration [39588,39607]"/>
  <match src="(: ( [13448,13449]" dest="(: ( [18386,18387]"/>
  <match src="string [19886,19923]" dest="string [58425,58470]"/>
  <match src="binary_expression [48210,48256]" dest="binary_expression [58669,58720]"/>
  <match src="primitive_type [6489,6496]" dest="primitive_type [7053,7060]"/>
  <match src="identifier: account [88778,88785]" dest="identifier: account [29538,29545]"/>
  <match src="type_name [6236,6243]" dest="type_name [6800,6807]"/>
  <match src="): ) [97396,97397]" dest="): ) [38156,38157]"/>
  <match src="{: { [30883,30884]" dest="{: { [44261,44262]"/>
  <match src="return: return [61781,61787]" dest="return: return [61489,61495]"/>
  <match src="uint256: uint256 [28880,28887]" dest="uint256: uint256 [42258,42265]"/>
  <match src=":: : [5926,5927]" dest=":: : [6490,6491]"/>
  <match src=",: , [63106,63107]" dest=",: , [60781,60782]"/>
  <match src="(: ( [5957,5958]" dest="(: ( [6521,6522]"/>
  <match src="bool: bool [9265,9269]" dest="bool: bool [9829,9833]"/>
  <match src="type_name [6730,6734]" dest="type_name [7294,7298]"/>
  <match src="memory: memory [8400,8406]" dest="memory: memory [8964,8970]"/>
  <match src="identifier: amount [13492,13498]" dest="identifier: amount [18430,18436]"/>
  <match src="mapping: mapping [82958,82965]" dest="mapping: mapping [22580,22587]"/>
  <match src="identifier: balanceOfRewarded [78238,78255]" dest="identifier: balanceOf [71293,71302]"/>
  <match src="type_name [13750,13757]" dest="type_name [18688,18695]"/>
  <match src="type_cast_expression [29014,29416]" dest="type_cast_expression [42392,42794]"/>
  <match src="&quot;: &quot; [77742,77743]" dest="&quot;: &quot; [71350,71351]"/>
  <match src="identifier: value [7369,7374]" dest="identifier: value [7933,7938]"/>
  <match src="parameter [67988,68003]" dest="parameter [73542,73557]"/>
  <match src="call_expression [98914,98959]" dest="call_expression [39674,39719]"/>
  <match src=".: . [32274,32275]" dest=".: . [45652,45653]"/>
  <match src="uint256: uint256 [86078,86085]" dest="uint256: uint256 [26838,26845]"/>
  <match src="call_argument [7019,7023]" dest="call_argument [7583,7587]"/>
  <match src="bool: bool [93090,93094]" dest="bool: bool [33850,33854]"/>
  <match src="parameter [76556,76569]" dest="parameter [64809,64822]"/>
  <match src="external: external [45473,45481]" dest="external: external [58285,58293]"/>
  <match src="enum_value: Locked [81667,81673]" dest="enum_value: Locked [21289,21295]"/>
  <match src="uint256: uint256 [3399,3406]" dest="uint256: uint256 [3963,3970]"/>
  <match src="parameter [9064,9080]" dest="parameter [9628,9644]"/>
  <match src="(: ( [32249,32250]" dest="(: ( [45627,45628]"/>
  <match src="pragma: pragma [25,31]" dest="pragma: pragma [25,31]"/>
  <match src="identifier: pair [48591,48595]" dest="identifier: spender [55637,55644]"/>
  <match src="function_definition [90379,90517]" dest="function_definition [31139,31277]"/>
  <match src="array_access [96004,96024]" dest="array_access [36764,36784]"/>
  <match src="call_argument [25955,26005]" dest="call_argument [72179,72208]"/>
  <match src=".: . [90494,90495]" dest=".: . [31254,31255]"/>
  <match src="expression_statement [98648,98742]" dest="expression_statement [39408,39502]"/>
  <match src="primitive_type [51332,51336]" dest="primitive_type [16039,16043]"/>
  <match src="member_expression [95214,95229]" dest="member_expression [35974,35989]"/>
  <match src="variable_declaration_statement [35199,35213]" dest="variable_declaration_statement [48577,48591]"/>
  <match src="): ) [93447,93448]" dest="): ) [34207,34208]"/>
  <match src="event_paramater [25705,25728]" dest="event_paramater [55396,55419]"/>
  <match src="&quot;: &quot; [454,455]" dest="&quot;: &quot; [1018,1019]"/>
  <match src="primitive_type [78933,78940]" dest="primitive_type [53462,53469]"/>
  <match src="call_argument [30545,30564]" dest="call_argument [43923,43942]"/>
  <match src="identifier: self [9076,9080]" dest="identifier: self [9640,9644]"/>
  <match src=",: , [32649,32650]" dest=",: , [46027,46028]"/>
  <match src=".: . [98874,98875]" dest=".: . [39634,39635]"/>
  <match src="call_expression [98938,98958]" dest="call_expression [39698,39718]"/>
  <match src="type_name [50110,50114]" dest="type_name [14817,14821]"/>
  <match src="identifier: balance [97445,97452]" dest="identifier: balance [38205,38212]"/>
  <match src="&quot;: &quot; [48438,48439]" dest="&quot;: &quot; [58827,58828]"/>
  <match src="visibility [9848,9855]" dest="visibility [10412,10419]"/>
  <match src="): ) [94928,94929]" dest="): ) [35688,35689]"/>
  <match src="uint256: uint256 [78520,78527]" dest="uint256: uint256 [55934,55941]"/>
  <match src="): ) [8487,8488]" dest="): ) [9051,9052]"/>
  <match src="call_argument [22402,22408]" dest="call_argument [58623,58629]"/>
  <match src="parameter [32018,32027]" dest="parameter [45396,45405]"/>
  <match src="member_expression [95722,95744]" dest="member_expression [36482,36504]"/>
  <match src="type_name [45118,45125]" dest="type_name [55142,55149]"/>
  <match src="return_statement [87099,87129]" dest="return_statement [27859,27889]"/>
  <match src="member_expression [98850,98865]" dest="member_expression [39610,39625]"/>
  <match src="identifier: Status [88832,88838]" dest="identifier: Status [29592,29598]"/>
  <match src="identifier: temp [7608,7612]" dest="identifier: temp [8172,8176]"/>
  <match src="expression_statement [96941,96987]" dest="expression_statement [37701,37747]"/>
  <match src="{: { [19763,19764]" dest="{: { [58294,58295]"/>
  <match src="primitive_type [65857,65864]" dest="primitive_type [64035,64042]"/>
  <match src="identifier: onlyFrozenOrLocked [100220,100238]" dest="identifier: onlyFrozenOrLocked [62577,62595]"/>
  <match src="function: function [30673,30681]" dest="function: function [44051,44059]"/>
  <match src=".: . [90486,90487]" dest=".: . [31246,31247]"/>
  <match src="internal: internal [93606,93614]" dest="internal: internal [34366,34374]"/>
  <match src="identifier: period [91394,91400]" dest="identifier: period [32154,32160]"/>
  <match src="return_type_definition [4021,4038]" dest="return_type_definition [4585,4602]"/>
  <match src="string_literal [2639,2667]" dest="string_literal [3203,3231]"/>
  <match src="call_argument [70256,70262]" dest="call_argument [51451,51457]"/>
  <match src="pure: pure [2589,2593]" dest="pure: pure [3153,3157]"/>
  <match src="inheritance_specifier [101555,101565]" dest="inheritance_specifier [63654,63664]"/>
  <match src="(: ( [90554,90555]" dest="(: ( [31314,31315]"/>
  <match src="(: ( [32900,32901]" dest="(: ( [46278,46279]"/>
  <match src="return_statement [68923,68990]" dest="return_statement [60543,60550]"/>
  <match src="public: public [89273,89279]" dest="public: public [30033,30039]"/>
  <match src="for: for [7652,7655]" dest="for: for [8216,8219]"/>
  <match src="member_expression [97438,97460]" dest="member_expression [38198,38220]"/>
  <match src="enum: enum [82245,82249]" dest="enum: enum [21867,21871]"/>
  <match src=",: , [32125,32126]" dest=",: , [45503,45504]"/>
  <match src="call_expression [76190,76204]" dest="call_expression [52077,52091]"/>
  <match src="primitive_type [28275,28282]" dest="primitive_type [41653,41660]"/>
  <match src="contract_body [5567,10194]" dest="contract_body [6131,10758]"/>
  <match src="identifier: i [7672,7673]" dest="identifier: i [8236,8237]"/>
  <match src="): ) [89969,89970]" dest="): ) [30729,30730]"/>
  <match src="user_defined_type [8003,8007]" dest="user_defined_type [8567,8571]"/>
  <match src="parameter [88603,88617]" dest="parameter [29363,29377]"/>
  <match src="(: ( [96347,96348]" dest="(: ( [37107,37108]"/>
  <match src="): ) [21870,21871]" dest="): ) [57963,57964]"/>
  <match src=",: , [21837,21838]" dest=",: , [57947,57948]"/>
  <match src="(: ( [97489,97490]" dest="(: ( [38249,38250]"/>
  <match src="type_name [93331,93335]" dest="type_name [34091,34095]"/>
  <match src="call_argument [79120,79124]" dest="call_argument [54070,54074]"/>
  <match src="member_expression [97090,97129]" dest="member_expression [37850,37889]"/>
  <match src="private: private [42265,42272]" dest="private: private [24369,24376]"/>
  <match src="member_expression [87513,87532]" dest="member_expression [28273,28292]"/>
  <match src="parameter [21839,21854]" dest="parameter [57932,57947]"/>
  <match src="/=: /= [34626,34628]" dest="/=: /= [48004,48006]"/>
  <match src="private: private [60423,60430]" dest="private: private [55080,55087]"/>
  <match src="type_name [35894,35899]" dest="type_name [49272,49277]"/>
  <match src="returns: returns [90431,90438]" dest="returns: returns [31191,31198]"/>
  <match src="(: ( [9590,9591]" dest="(: ( [10154,10155]"/>
  <match src="): ) [90871,90872]" dest="): ) [31631,31632]"/>
  <match src="[: [ [91516,91517]" dest="[: [ [32276,32277]"/>
  <match src="uint256: uint256 [13484,13491]" dest="uint256: uint256 [18422,18429]"/>
  <match src="parameter [97829,97844]" dest="parameter [38589,38604]"/>
  <match src="(: ( [1929,1930]" dest="(: ( [2493,2494]"/>
  <match src="function_definition [96999,97213]" dest="function_definition [37759,37973]"/>
  <match src="primitive_type [90159,90166]" dest="primitive_type [30919,30926]"/>
  <match src="): ) [339,340]" dest="): ) [903,904]"/>
  <match src=",: , [13728,13729]" dest=",: , [18666,18667]"/>
  <match src=",: , [8348,8349]" dest=",: , [8912,8913]"/>
  <match src="[: [ [94442,94443]" dest="[: [ [35202,35203]"/>
  <match src="number_literal: 1 [77170,77171]" dest="number_literal: 1 [66235,66236]"/>
  <match src="identifier: result [33667,33673]" dest="identifier: result [47045,47051]"/>
  <match src="(: ( [50821,50822]" dest="(: ( [15528,15529]"/>
  <match src="type_name [63666,63673]" dest="type_name [56995,57002]"/>
  <match src="): ) [28754,28755]" dest="): ) [42132,42133]"/>
  <match src=".: . [97726,97727]" dest=".: . [38486,38487]"/>
  <match src="identifier: i [33140,33141]" dest="identifier: i [46518,46519]"/>
  <match src="address: address [94897,94904]" dest="address: address [35657,35664]"/>
  <match src="identifier: reason [95866,95872]" dest="identifier: reason [36626,36632]"/>
  <match src=",: , [97661,97662]" dest=",: , [38421,38422]"/>
  <match src="identifier: totalRewardedWithPhantom [76629,76653]" dest="identifier: couponAmount [57304,57316]"/>
  <match src="(: ( [29058,29059]" dest="(: ( [42436,42437]"/>
  <match src="function: function [8910,8918]" dest="function: function [9474,9482]"/>
  <match src="revert_statement [31608,31973]" dest="revert_statement [44986,45351]"/>
  <match src="parameter [96215,96230]" dest="parameter [36975,36990]"/>
  <match src=".: . [96963,96964]" dest=".: . [37723,37724]"/>
  <match src=":: : [8522,8523]" dest=":: : [9086,9087]"/>
  <match src="binary_expression [35524,35534]" dest="binary_expression [48902,48912]"/>
  <match src="(: ( [88564,88565]" dest="(: ( [29324,29325]"/>
  <match src="parameter [30813,30829]" dest="parameter [44191,44207]"/>
  <match src=",: , [32528,32529]" dest=",: , [45906,45907]"/>
  <match src=",: , [93295,93296]" dest=",: , [34055,34056]"/>
  <match src="&gt;&gt;: &gt;&gt; [35443,35445]" dest="&gt;&gt;: &gt;&gt; [48821,48823]"/>
  <match src="identifier: add [89869,89872]" dest="identifier: add [30629,30632]"/>
  <match src="member_expression [76511,76521]" dest="member_expression [73487,73497]"/>
  <match src=",: , [3223,3224]" dest=",: , [3787,3788]"/>
  <match src=".: . [94989,94990]" dest=".: . [35749,35750]"/>
  <match src=",: , [1226,1227]" dest=",: , [1790,1791]"/>
  <match src="call_argument [29738,29742]" dest="call_argument [43116,43120]"/>
  <match src="identifier: period [97781,97787]" dest="identifier: period [38541,38547]"/>
  <match src="{: { [96818,96819]" dest="{: { [37578,37579]"/>
  <match src="primitive_type [30737,30744]" dest="primitive_type [44115,44122]"/>
  <match src="[: [ [98703,98704]" dest="[: [ [39463,39464]"/>
  <match src="{: { [7367,7368]" dest="{: { [7931,7932]"/>
  <match src="call_argument [46156,46160]" dest="call_argument [53688,53692]"/>
  <match src="identifier: _state [94785,94791]" dest="identifier: _state [35545,35551]"/>
  <match src="type_name [91473,91480]" dest="type_name [32233,32240]"/>
  <match src="identifier: Decimal [43434,43441]" dest="identifier: Decimal [25538,25545]"/>
  <match src="contract_declaration [81914,82218]" dest="contract_declaration [21536,21840]"/>
  <match src="{: { [43059,43060]" dest="{: { [25163,25164]"/>
  <match src=",: , [32573,32574]" dest=",: , [45951,45952]"/>
  <match src="view: view [87473,87477]" dest="view: view [28233,28237]"/>
  <match src="visibility [25797,25804]" dest="visibility [53783,53790]"/>
  <match src="=: = [95058,95059]" dest="=: = [35818,35819]"/>
  <match src="{: { [99128,99129]" dest="{: { [39888,39889]"/>
  <match src="uint256: uint256 [42321,42328]" dest="uint256: uint256 [24425,24432]"/>
  <match src="(: ( [93089,93090]" dest="(: ( [33849,33850]"/>
  <match src="assembly_statement [85324,85388]" dest="assembly_statement [69999,70063]"/>
  <match src="assignment_expression [36529,36539]" dest="assignment_expression [49907,49917]"/>
  <match src="type_name [15926,15933]" dest="type_name [74569,74576]"/>
  <match src="state_mutability [51082,51086]" dest="state_mutability [15789,15793]"/>
  <match src="(: ( [68745,68746]" dest="(: ( [60417,60418]"/>
  <match src="binary_expression [5674,5680]" dest="binary_expression [6238,6244]"/>
  <match src="state_mutability [49330,49334]" dest="state_mutability [14037,14041]"/>
  <match src="public: public [87466,87472]" dest="public: public [28226,28232]"/>
  <match src=".: . [7380,7381]" dest=".: . [7944,7945]"/>
  <match src="assignment_expression [35379,35423]" dest="assignment_expression [48757,48801]"/>
  <match src="parenthesized_expression [31614,31972]" dest="parenthesized_expression [44992,45350]"/>
  <match src="member_expression [87411,87432]" dest="member_expression [28171,28192]"/>
  <match src="(: ( [28473,28474]" dest="(: ( [41851,41852]"/>
  <match src="binary_expression [69095,69121]" dest="binary_expression [71779,71808]"/>
  <match src="identifier: a [4755,4756]" dest="identifier: a [5319,5320]"/>
  <match src="identifier: balance [86672,86679]" dest="identifier: balance [27432,27439]"/>
  <match src="address: address [88898,88905]" dest="address: address [29658,29665]"/>
  <match src="uint112: uint112 [50590,50597]" dest="uint112: uint112 [15297,15304]"/>
  <match src="identifier: candidate [91927,91936]" dest="identifier: candidate [32687,32696]"/>
  <match src="identifier: success [84725,84732]" dest="identifier: success [69400,69407]"/>
  <match src="identifier: staged [87426,87432]" dest="identifier: staged [28186,28192]"/>
  <match src="function_definition [43597,43701]" dest="function_definition [25701,25805]"/>
  <match src="call_argument [9673,9677]" dest="call_argument [10237,10241]"/>
  <match src="member_expression [84788,84811]" dest="member_expression [69463,69486]"/>
  <match src="identifier: Require [77962,77969]" dest="identifier: Require [53801,53808]"/>
  <match src="identifier: candidate [91383,91392]" dest="identifier: candidate [32143,32152]"/>
  <match src="binary_expression [10091,10109]" dest="binary_expression [10655,10673]"/>
  <match src=".: . [95655,95656]" dest=".: . [36415,36416]"/>
  <match src="(: ( [78097,78098]" dest="(: ( [72809,72810]"/>
  <match src="identifier: unfreeze [77243,77251]" dest="identifier: unfreeze [65886,65894]"/>
  <match src="): ) [93896,93897]" dest="): ) [34656,34657]"/>
  <match src="(: ( [84787,84788]" dest="(: ( [69462,69463]"/>
  <match src="): ) [91316,91317]" dest="): ) [32076,32077]"/>
  <match src="visibility [13096,13104]" dest="visibility [18034,18042]"/>
  <match src="(: ( [76811,76812]" dest="(: ( [64998,64999]"/>
  <match src=".: . [77149,77150]" dest=".: . [66214,66215]"/>
  <match src="private: private [33822,33829]" dest="private: private [47200,47207]"/>
  <match src="returns: returns [7319,7326]" dest="returns: returns [7883,7890]"/>
  <match src="&quot;: &quot; [21171,21172]" dest="&quot;: &quot; [57777,57778]"/>
  <match src="expression_statement [1309,1339]" dest="expression_statement [1873,1903]"/>
  <match src="type_name [63108,63115]" dest="type_name [60783,60790]"/>
  <match src="function: function [51436,51444]" dest="function: function [16143,16151]"/>
  <match src="!: ! [28384,28385]" dest="!: ! [41762,41763]"/>
  <match src="bytes: bytes [34914,34919]" dest="bytes: bytes [48292,48297]"/>
  <match src="parameter [10010,10023]" dest="parameter [10574,10587]"/>
  <match src="variable_declaration [68587,68606]" dest="variable_declaration [60696,60713]"/>
  <match src="): ) [29415,29416]" dest="): ) [42793,42794]"/>
  <match src="type_name [31524,31531]" dest="type_name [44902,44909]"/>
  <match src="): ) [31885,31886]" dest="): ) [45263,45264]"/>
  <match src="(: ( [73709,73710]" dest="(: ( [54258,54259]"/>
  <match src="primitive_type [88129,88136]" dest="primitive_type [28889,28896]"/>
  <match src="address: address [97829,97836]" dest="address: address [38589,38596]"/>
  <match src="address: address [93262,93269]" dest="address: address [34022,34029]"/>
  <match src="expression_statement [95489,95583]" dest="expression_statement [36249,36343]"/>
  <match src="identifier: div [9930,9933]" dest="identifier: div [10494,10497]"/>
  <match src="function_body [8859,8904]" dest="function_body [9423,9468]"/>
  <match src="uint256: uint256 [90265,90272]" dest="uint256: uint256 [31025,31032]"/>
  <match src="(: ( [77826,77827]" dest="(: ( [65740,65741]"/>
  <match src="identifier: stringifyTruncated [31783,31801]" dest="identifier: stringifyTruncated [45161,45179]"/>
  <match src="identifier: input [33884,33889]" dest="identifier: input [47262,47267]"/>
  <match src="view: view [91872,91876]" dest="view: view [32632,32636]"/>
  <match src="): ) [87087,87088]" dest="): ) [27847,27848]"/>
  <match src="identifier: add [90043,90046]" dest="identifier: add [30803,30806]"/>
  <match src="identifier: totalSupply [88137,88148]" dest="identifier: totalSupply [28897,28908]"/>
  <match src="member_expression [94462,94477]" dest="member_expression [35222,35237]"/>
  <match src="]: ] [96462,96463]" dest="]: ] [37222,37223]"/>
  <match src="primitive_type [85279,85286]" dest="primitive_type [69954,69961]"/>
  <match src="identifier: c [418,419]" dest="identifier: c [982,983]"/>
  <match src="(: ( [89695,89696]" dest="(: ( [30455,30456]"/>
  <match src="state_mutability [90426,90430]" dest="state_mutability [31186,31190]"/>
  <match src="identifier: self [6778,6782]" dest="identifier: self [7342,7346]"/>
  <match src="uint256: uint256 [89534,89541]" dest="uint256: uint256 [30294,30301]"/>
  <match src="bool: bool [8853,8857]" dest="bool: bool [9417,9421]"/>
  <match src="primitive_type [41636,41643]" dest="primitive_type [23740,23747]"/>
  <match src="parameter [9632,9639]" dest="parameter [10196,10203]"/>
  <match src="state_mutability [80388,80392]" dest="state_mutability [67210,67214]"/>
  <match src="}: } [9172,9173]" dest="}: } [9736,9737]"/>
  <match src="type_cast_expression [19874,19884]" dest="type_cast_expression [58413,58423]"/>
  <match src="string_literal [17791,17833]" dest="string_literal [65601,65637]"/>
  <match src="identifier: i [33301,33302]" dest="identifier: i [46679,46680]"/>
  <match src="call_argument [31091,31097]" dest="call_argument [44469,44475]"/>
  <match src="(: ( [31009,31010]" dest="(: ( [44387,44388]"/>
  <match src="identifier: RPAREN [32675,32681]" dest="identifier: RPAREN [46053,46059]"/>
  <match src="internal: internal [42643,42651]" dest="internal: internal [24747,24755]"/>
  <match src="type_name [82977,82988]" dest="type_name [22599,22610]"/>
  <match src="function_body [76580,77187]" dest="function_body [64863,65309]"/>
  <match src="returns: returns [3267,3274]" dest="returns: returns [3831,3838]"/>
  <match src="type_name [93584,93590]" dest="type_name [34344,34350]"/>
  <match src="}: } [34099,34100]" dest="}: } [47477,47478]"/>
  <match src="): ) [779,780]" dest="): ) [1343,1344]"/>
  <match src="}: } [88040,88041]" dest="}: } [28800,28801]"/>
  <match src="identifier: timestamp [89743,89752]" dest="identifier: timestamp [30503,30512]"/>
  <match src="): ) [49443,49444]" dest="): ) [14150,14151]"/>
  <match src="]: ] [96719,96720]" dest="]: ] [37479,37480]"/>
  <match src="primitive_type [49885,49889]" dest="primitive_type [14592,14596]"/>
  <match src="number_literal: 0 [1959,1960]" dest="number_literal: 0 [2523,2524]"/>
  <match src="identifier: D256 [8421,8425]" dest="identifier: D256 [8985,8989]"/>
  <match src="internal: internal [95470,95478]" dest="internal: internal [36230,36238]"/>
  <match src="if_statement [10087,10144]" dest="if_statement [10651,10708]"/>
  <match src="return_type_definition [88101,88118]" dest="return_type_definition [28861,28878]"/>
  <match src="state_mutability [43894,43898]" dest="state_mutability [25998,26002]"/>
  <match src="=: = [94538,94539]" dest="=: = [35298,35299]"/>
  <match src="parameter [90831,90844]" dest="parameter [31591,31604]"/>
  <match src="type_name [6086,6093]" dest="type_name [6650,6657]"/>
  <match src="uint256: uint256 [98896,98903]" dest="uint256: uint256 [39656,39663]"/>
  <match src="call_argument [68858,68882]" dest="call_argument [73710,73728]"/>
  <match src="call_expression [8714,8768]" dest="call_expression [9278,9332]"/>
  <match src="(: ( [75353,75354]" dest="(: ( [63825,63826]"/>
  <match src="): ) [33816,33817]" dest="): ) [47194,47195]"/>
  <match src="(: ( [91206,91207]" dest="(: ( [31966,31967]"/>
  <match src="member_expression [98090,98107]" dest="member_expression [38850,38867]"/>
  <match src=",: , [77643,77644]" dest=",: , [57468,57469]"/>
  <match src="string [76143,76178]" dest="string [64700,64738]"/>
  <match src="identifier: totalBondedAt [90690,90703]" dest="identifier: totalBondedAt [31450,31463]"/>
  <match src="identifier: Require [45985,45992]" dest="identifier: Require [57014,57021]"/>
  <match src="=: = [36490,36491]" dest="=: = [49868,49869]"/>
  <match src="type_name [51268,51272]" dest="type_name [15975,15979]"/>
  <match src="visibility [13500,13508]" dest="visibility [18438,18446]"/>
  <match src="function_body [90749,90800]" dest="function_body [31509,31560]"/>
  <match src="memory: memory [32907,32913]" dest="memory: memory [46285,46291]"/>
  <match src="identifier: amount [46993,46999]" dest="identifier: amount [19691,19697]"/>
  <match src=".: . [90191,90192]" dest=".: . [30951,30952]"/>
  <match src="state_mutability [32175,32179]" dest="state_mutability [45553,45557]"/>
  <match src="internal: internal [43518,43526]" dest="internal: internal [25622,25630]"/>
  <match src="identifier: owner [50146,50151]" dest="identifier: owner [14853,14858]"/>
  <match src="identifier: addedValue [18310,18320]" dest="identifier: totalDebt [11803,11812]"/>
  <match src=".: . [87425,87426]" dest=".: . [28185,28186]"/>
  <match src=".: . [98676,98677]" dest=".: . [39436,39437]"/>
  <match src="member_expression [88003,88018]" dest="member_expression [28763,28778]"/>
  <match src="primitive_type [90440,90447]" dest="primitive_type [31200,31207]"/>
  <match src="number_literal: 1 [10132,10133]" dest="number_literal: 1 [10696,10697]"/>
  <match src="event_definition [48517,48603]" dest="event_definition [55471,55572]"/>
  <match src="identifier: blockTimestampLast [50950,50968]" dest="identifier: blockTimestampLast [15657,15675]"/>
  <match src="uint256: uint256 [90555,90562]" dest="uint256: uint256 [31315,31322]"/>
  <match src=",: , [838,839]" dest=",: , [1402,1403]"/>
  <match src="string_literal [21236,21272]" dest="string_literal [51900,51944]"/>
  <match src="member_expression [95935,95967]" dest="member_expression [36695,36727]"/>
  <match src="{: { [96241,96242]" dest="{: { [37001,37002]"/>
  <match src=",: , [31130,31131]" dest=",: , [44508,44509]"/>
  <match src="}: } [6056,6057]" dest="}: } [6620,6621]"/>
  <match src="identifier: couponAllowances [96695,96711]" dest="identifier: couponAllowances [37455,37471]"/>
  <match src="}: } [94856,94857]" dest="}: } [35616,35617]"/>
  <match src="call_struct_argument [7909,7939]" dest="call_struct_argument [8473,8503]"/>
  <match src="(: ( [33851,33852]" dest="(: ( [47229,47230]"/>
  <match src="revert_statement [28990,29431]" dest="revert_statement [42368,42809]"/>
  <match src="member_expression [96251,96286]" dest="member_expression [37011,37046]"/>
  <match src="identifier: z [36391,36392]" dest="identifier: z [49769,49770]"/>
  <match src=".: . [96678,96679]" dest=".: . [37438,37439]"/>
  <match src="identifier: implementation [92108,92122]" dest="identifier: implementation [32868,32882]"/>
  <match src="member_expression [96142,96164]" dest="member_expression [36902,36924]"/>
  <match src="call_argument [30469,30488]" dest="call_argument [43847,43866]"/>
  <match src="member_expression [95697,95719]" dest="member_expression [36457,36479]"/>
  <match src="}: } [10191,10192]" dest="}: } [10755,10756]"/>
  <match src="primitive_type [7657,7664]" dest="primitive_type [8221,8228]"/>
  <match src=".: . [77255,77256]" dest=".: . [65898,65899]"/>
  <match src="&quot;: &quot; [871,872]" dest="&quot;: &quot; [1435,1436]"/>
  <match src="contract_declaration [82220,82503]" dest="contract_declaration [21842,22125]"/>
  <match src="identifier: skim [51405,51409]" dest="identifier: skim [16112,16116]"/>
  <match src="comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [1708,1787]" dest="comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [2272,2351]"/>
  <match src="): ) [89301,89302]" dest="): ) [30061,30062]"/>
  <match src="member_expression [91909,91943]" dest="member_expression [32669,32703]"/>
  <match src="number_literal: 0 [5928,5929]" dest="number_literal: 0 [6492,6493]"/>
  <match src="function_definition [93240,93366]" dest="function_definition [34000,34126]"/>
  <match src="type_name [97256,97263]" dest="type_name [38016,38023]"/>
  <match src=".: . [95555,95556]" dest=".: . [36315,36316]"/>
  <match src="=: = [33448,33449]" dest="=: = [46826,46827]"/>
  <match src="identifier: balance [87520,87527]" dest="identifier: balance [28280,28287]"/>
  <match src="identifier: ASCII_ZERO [34541,34551]" dest="identifier: ASCII_ZERO [47919,47929]"/>
  <match src="identifier: COLON [28549,28554]" dest="identifier: COLON [41927,41932]"/>
  <match src="=: = [35888,35889]" dest="=: = [49266,49267]"/>
  <match src="function_body [88119,88306]" dest="function_body [28879,29066]"/>
  <match src="identifier: symbol [49373,49379]" dest="identifier: symbol [14080,14086]"/>
  <match src="(: ( [63030,63031]" dest="(: ( [60581,60582]"/>
  <match src="uint256: uint256 [65806,65813]" dest="uint256: uint256 [59820,59827]"/>
  <match src="identifier: balanceOfBonded [88056,88071]" dest="identifier: balanceOfBonded [28816,28831]"/>
  <match src="call_expression [7362,7396]" dest="call_expression [7926,7960]"/>
  <match src="expression_statement [96117,96185]" dest="expression_statement [36877,36945]"/>
  <match src="&quot;: &quot; [46079,46080]" dest="&quot;: &quot; [51737,51738]"/>
  <match src="): ) [90932,90933]" dest="): ) [31692,31693]"/>
  <match src="user_defined_type [8278,8282]" dest="user_defined_type [8842,8846]"/>
  <match src="uint112: uint112 [50907,50914]" dest="uint112: uint112 [15614,15621]"/>
  <match src="string [22000,22036]" dest="string [58015,58059]"/>
  <match src=".: . [78259,78260]" dest=".: . [71306,71307]"/>
  <match src="call_expression [36354,36377]" dest="call_expression [49732,49755]"/>
  <match src="call_expression [2629,2668]" dest="call_expression [3193,3232]"/>
  <match src="return_type_definition [42999,43028]" dest="return_type_definition [25103,25132]"/>
  <match src="identifier: b [4063,4064]" dest="identifier: b [4627,4628]"/>
  <match src="struct: struct [82147,82153]" dest="struct: struct [21769,21775]"/>
  <match src="{: { [36181,36182]" dest="{: { [49559,49560]"/>
  <match src="identifier: recipient [11984,11993]" dest="identifier: recipient [16922,16931]"/>
  <match src="external: external [77920,77928]" dest="external: external [71217,71225]"/>
  <match src=".: . [97158,97159]" dest=".: . [37918,37919]"/>
  <match src="identifier: LPAREN [31124,31130]" dest="identifier: LPAREN [44502,44508]"/>
  <match src="(: ( [8534,8535]" dest="(: ( [9098,9099]"/>
  <match src="): ) [89721,89722]" dest="): ) [30481,30482]"/>
  <match src="identifier: transfer [93028,93036]" dest="identifier: transfer [33788,33796]"/>
  <match src="assignment_expression [36391,36401]" dest="assignment_expression [49769,49779]"/>
  <match src="address: address [13465,13472]" dest="address: address [18403,18410]"/>
  <match src="state_variable_declaration [27491,27529]" dest="state_variable_declaration [40869,40907]"/>
  <match src="}: } [36898,36899]" dest="}: } [50276,50277]"/>
  <match src="identifier: account [96223,96230]" dest="identifier: account [36983,36990]"/>
  <match src="=: = [34159,34160]" dest="=: = [47537,47538]"/>
  <match src="primitive_type [70675,70682]" dest="primitive_type [51582,51589]"/>
  <match src="identifier: value [76945,76950]" dest="identifier: value [65679,65684]"/>
  <match src="identifier: bootstrappingTotal [89951,89969]" dest="identifier: bootstrappingTotal [30711,30729]"/>
  <match src="identifier: add [98127,98130]" dest="identifier: add [38887,38890]"/>
  <match src="member_expression [91233,91250]" dest="member_expression [31993,32010]"/>
  <match src="parameter [86433,86446]" dest="parameter [27193,27206]"/>
  <match src="visibility [41701,41708]" dest="visibility [23805,23812]"/>
  <match src=".: . [93772,93773]" dest=".: . [34532,34533]"/>
  <match src="private: private [35684,35691]" dest="private: private [49062,49069]"/>
  <match src="parameter [32109,32125]" dest="parameter [45487,45503]"/>
  <match src="number_literal: 18 [5678,5680]" dest="number_literal: 18 [6242,6244]"/>
  <match src="primitive_type [13962,13969]" dest="primitive_type [18900,18907]"/>
  <match src="identifier: input [33806,33811]" dest="identifier: input [47184,47189]"/>
  <match src="identifier: initialized [99088,99099]" dest="identifier: initialized [39848,39859]"/>
  <match src="identifier: D256 [8395,8399]" dest="identifier: D256 [8959,8963]"/>
  <match src="identifier: D256 [8797,8801]" dest="identifier: D256 [9361,9365]"/>
  <match src="primitive_type [35018,35023]" dest="primitive_type [48396,48401]"/>
  <match src="state_mutability [86722,86726]" dest="state_mutability [27482,27486]"/>
  <match src="identifier: account [95951,95958]" dest="identifier: account [36711,36718]"/>
  <match src="): ) [51183,51184]" dest="): ) [15890,15891]"/>
  <match src="identifier: BASE [8556,8560]" dest="identifier: BASE [9120,9124]"/>
  <match src="while: while [34031,34036]" dest="while: while [47409,47414]"/>
  <match src="type_name [5995,5999]" dest="type_name [6559,6563]"/>
  <match src=",: , [9366,9367]" dest=",: , [9930,9931]"/>
  <match src="}: } [76253,76254]" dest="}: } [64788,64789]"/>
  <match src="uint256: uint256 [86621,86628]" dest="uint256: uint256 [27381,27388]"/>
  <match src="(: ( [90403,90404]" dest="(: ( [31163,31164]"/>
  <match src="uint256: uint256 [82676,82683]" dest="uint256: uint256 [22298,22305]"/>
  <match src="identifier: b [6497,6498]" dest="identifier: b [7061,7062]"/>
  <match src="pure: pure [9507,9511]" dest="pure: pure [10071,10075]"/>
  <match src="parameter [43762,43781]" dest="parameter [25866,25885]"/>
  <match src="]: ] [95527,95528]" dest="]: ] [36287,36288]"/>
  <match src="function_body [98246,98358]" dest="function_body [39006,39118]"/>
  <match src="address: address [95804,95811]" dest="address: address [36564,36571]"/>
  <match src="{: { [92029,92030]" dest="{: { [32789,32790]"/>
  <match src="user_defined_type [82925,82938]" dest="user_defined_type [22547,22560]"/>
  <match src="parameter [32037,32049]" dest="parameter [45415,45427]"/>
  <match src="call_argument [32446,32452]" dest="call_argument [45824,45830]"/>
  <match src="contract_declaration [58821,58990]" dest="contract_declaration [20413,20582]"/>
  <match src="identifier: COLON [28099,28104]" dest="identifier: COLON [41477,41482]"/>
  <match src="byte: byte [35013,35017]" dest="byte: byte [48391,48395]"/>
  <match src="primitive_type [6679,6686]" dest="primitive_type [7243,7250]"/>
  <match src="false [61804,61809]" dest="false [73642,73647]"/>
  <match src="function: function [7765,7773]" dest="function: function [8329,8337]"/>
  <match src="function_definition [86564,86686]" dest="function_definition [27324,27446]"/>
  <match src="return_statement [8869,8898]" dest="return_statement [9433,9462]"/>
  <match src="binary_expression [1360,1365]" dest="binary_expression [1924,1929]"/>
  <match src="member_expression [94088,94102]" dest="member_expression [34848,34862]"/>
  <match src="string: string [98607,98613]" dest="string: string [39367,39373]"/>
  <match src="identifier: errorMessage [4653,4665]" dest="identifier: errorMessage [5217,5229]"/>
  <match src="return_statement [7355,7397]" dest="return_statement [7919,7961]"/>
  <match src="{: { [90873,90874]" dest="{: { [31633,31634]"/>
  <match src="[: [ [95950,95951]" dest="[: [ [36710,36711]"/>
  <match src="parameter [13114,13118]" dest="parameter [18052,18056]"/>
  <match src="string [100545,100566]" dest="string [62902,62923]"/>
  <match src="return_type_definition [58899,58934]" dest="return_type_definition [20491,20526]"/>
  <match src="member_expression [9908,9933]" dest="member_expression [10472,10497]"/>
  <match src="identifier: a [2566,2567]" dest="identifier: a [3130,3131]"/>
  <match src="function: function [49605,49613]" dest="function: function [14312,14320]"/>
  <match src="member_expression [90466,90503]" dest="member_expression [31226,31263]"/>
  <match src="using: using [60378,60383]" dest="using: using [59615,59620]"/>
  <match src="number_literal: 4 [36538,36539]" dest="number_literal: 4 [49916,49917]"/>
  <match src="identifier: that [78093,78097]" dest="identifier: that [72805,72809]"/>
  <match src="{: { [4039,4040]" dest="{: { [4603,4604]"/>
  <match src="memory: memory [8223,8229]" dest="memory: memory [8787,8793]"/>
  <match src="external: external [59683,59691]" dest="external: external [56977,56985]"/>
  <match src="indexed: indexed [50427,50434]" dest="indexed: indexed [15134,15141]"/>
  <match src="return_type_definition [9512,9526]" dest="return_type_definition [10076,10090]"/>
  <match src="primitive_type [47923,47930]" dest="primitive_type [51056,51063]"/>
  <match src="=: = [36393,36394]" dest="=: = [49771,49772]"/>
  <match src="binary_expression [19781,19801]" dest="binary_expression [58312,58332]"/>
  <match src="call_argument [79002,79006]" dest="call_argument [53549,53553]"/>
  <match src="type_name [34007,34014]" dest="type_name [47385,47392]"/>
  <match src="member_expression [87619,87644]" dest="member_expression [28379,28404]"/>
  <match src="(: ( [28996,28997]" dest="(: ( [42374,42375]"/>
  <match src="expression_statement [97905,97956]" dest="expression_statement [38665,38716]"/>
  <match src="struct_member [82752,82765]" dest="struct_member [22374,22387]"/>
  <match src="=: = [36352,36353]" dest="=: = [49730,49731]"/>
  <match src="array_access [91233,91261]" dest="array_access [31993,32021]"/>
  <match src="[: [ [91382,91383]" dest="[: [ [32142,32143]"/>
  <match src="): ) [51100,51101]" dest="): ) [15807,15808]"/>
  <match src="call_argument [31010,31014]" dest="call_argument [44388,44392]"/>
  <match src="state_mutability [9251,9255]" dest="state_mutability [9815,9819]"/>
  <match src="call_argument [98726,98732]" dest="call_argument [39486,39492]"/>
  <match src="member_expression [96117,96131]" dest="member_expression [36877,36891]"/>
  <match src="identifier: reason [98734,98740]" dest="identifier: reason [39494,39500]"/>
  <match src="[: [ [97715,97716]" dest="[: [ [38475,38476]"/>
  <match src="{: { [34319,34320]" dest="{: { [47697,47698]"/>
  <match src="contract_declaration [15724,22547]" dest="contract_declaration [54995,58912]"/>
  <match src="identifier: add [95676,95679]" dest="identifier: add [36436,36439]"/>
  <match src="call_expression [94723,94775]" dest="call_expression [35483,35535]"/>
  <match src="false: false [61804,61809]" dest="false: false [73642,73647]"/>
  <match src="): ) [88444,88445]" dest="): ) [29204,29205]"/>
  <match src="identifier: char [36595,36599]" dest="identifier: char [49973,49977]"/>
  <match src="(: ( [6578,6579]" dest="(: ( [7142,7143]"/>
  <match src="): ) [89170,89171]" dest="): ) [29930,29931]"/>
  <match src="identifier: epoch [89124,89129]" dest="identifier: epoch [29884,29889]"/>
  <match src="type_name [35660,35667]" dest="type_name [49038,49045]"/>
  <match src="): ) [36890,36891]" dest="): ) [50268,50269]"/>
  <match src="variable_declaration_statement [85279,85314]" dest="variable_declaration_statement [69954,69989]"/>
  <match src="type_name [50042,50049]" dest="type_name [14749,14756]"/>
  <match src="comment: // populate the most-significant character [35462,35504]" dest="comment: // populate the most-significant character [48840,48882]"/>
  <match src="return_type_definition [49670,49684]" dest="return_type_definition [14377,14391]"/>
  <match src="identifier: GOVERNANCE_QUORUM [42046,42063]" dest="identifier: GOVERNANCE_QUORUM [24150,24167]"/>
  <match src="member_expression [93766,93785]" dest="member_expression [34526,34545]"/>
  <match src="return_statement [34652,34664]" dest="return_statement [48030,48042]"/>
  <match src="function: function [11958,11966]" dest="function: function [16896,16904]"/>
  <match src=",: , [8545,8546]" dest=",: , [9109,9110]"/>
  <match src="identifier: _state [94983,94989]" dest="identifier: _state [35743,35749]"/>
  <match src="=: = [97733,97734]" dest="=: = [38493,38494]"/>
  <match src="type_name [1239,1245]" dest="type_name [1803,1809]"/>
  <match src="uint: uint [50451,50455]" dest="uint: uint [15158,15162]"/>
  <match src="state_mutability [350,354]" dest="state_mutability [914,918]"/>
  <match src=".: . [90355,90356]" dest=".: . [31115,31116]"/>
  <match src="identifier: sub [89828,89831]" dest="identifier: sub [30588,30591]"/>
  <match src="return_statement [8503,8565]" dest="return_statement [9067,9129]"/>
  <match src="): ) [34561,34562]" dest="): ) [47939,47940]"/>
  <match src="function: function [21806,21814]" dest="function: function [57908,57916]"/>
  <match src="identifier: stringifyTruncated [30304,30322]" dest="identifier: stringifyTruncated [43682,43700]"/>
  <match src="identifier: that [100463,100467]" dest="identifier: that [62820,62824]"/>
  <match src="): ) [45285,45286]" dest="): ) [51390,51391]"/>
  <match src="identifier: burnFrom [46959,46967]" dest="identifier: burnFrom [19657,19665]"/>
  <match src="&quot;: &quot; [19886,19887]" dest="&quot;: &quot; [58425,58426]"/>
  <match src="expression_statement [77020,77101]" dest="expression_statement [65155,65239]"/>
  <match src="identifier: newPhantomFromBonded [78528,78548]" dest="identifier: expirationEpoch [55942,55957]"/>
  <match src="parameter [30787,30803]" dest="parameter [44165,44181]"/>
  <match src="primitive_type [63108,63115]" dest="primitive_type [60783,60790]"/>
  <match src="(: ( [36496,36497]" dest="(: ( [49874,49875]"/>
  <match src="): ) [77440,77441]" dest="): ) [65507,65508]"/>
  <match src="{: { [8295,8296]" dest="{: { [8859,8860]"/>
  <match src="private: private [99871,99878]" dest="private: private [62228,62235]"/>
  <match src="string_literal [48396,48439]" dest="string_literal [58790,58828]"/>
  <match src="contract_declaration [83868,85396]" dest="contract_declaration [68543,70071]"/>
  <match src="state_mutability [8040,8044]" dest="state_mutability [8604,8608]"/>
  <match src="identifier: amount [95680,95686]" dest="identifier: amount [36440,36446]"/>
  <match src="call_expression [29325,29344]" dest="call_expression [42703,42722]"/>
  <match src="}: } [8570,8571]" dest="}: } [9134,9135]"/>
  <match src="=: = [96849,96850]" dest="=: = [37609,37610]"/>
  <match src="bytes: bytes [35894,35899]" dest="bytes: bytes [49272,49277]"/>
  <match src="uint112: uint112 [50608,50615]" dest="uint112: uint112 [15315,15322]"/>
  <match src=".: . [95323,95324]" dest=".: . [36083,36084]"/>
  <match src="(: ( [6768,6769]" dest="(: ( [7332,7333]"/>
  <match src="visibility [88915,88921]" dest="visibility [29675,29681]"/>
  <match src="identifier: price1CumulativeLast [51050,51070]" dest="identifier: price1CumulativeLast [15757,15777]"/>
  <match src="type_name [7457,7464]" dest="type_name [8021,8028]"/>
  <match src="visibility [1666,1674]" dest="visibility [2230,2238]"/>
  <match src="return_statement [89313,89340]" dest="return_statement [30073,30100]"/>
  <match src="identifier: add [72336,72339]" dest="identifier: add [55968,55971]"/>
  <match src="parameter [28321,28337]" dest="parameter [41699,41715]"/>
  <match src="call_argument [88263,88281]" dest="call_argument [29023,29041]"/>
  <match src="primitive_type [92146,92153]" dest="primitive_type [32906,32913]"/>
  <match src="identifier: value [8111,8116]" dest="identifier: value [8675,8680]"/>
  <match src="]: ] [95916,95917]" dest="]: ] [36676,36677]"/>
  <match src="function_body [1299,1391]" dest="function_body [1863,1955]"/>
  <match src="identifier: fluidUntil [69131,69141]" dest="identifier: add [71809,71812]"/>
  <match src="call_argument [95284,95290]" dest="call_argument [36044,36050]"/>
  <match src="member_expression [97152,97165]" dest="member_expression [37912,37925]"/>
  <match src="visibility [84131,84138]" dest="visibility [68806,68813]"/>
  <match src="primitive_type [90301,90308]" dest="primitive_type [31061,31068]"/>
  <match src="identifier: a [2020,2021]" dest="identifier: a [2584,2585]"/>
  <match src="parameter [86621,86628]" dest="parameter [27381,27388]"/>
  <match src="member_expression [87006,87028]" dest="member_expression [27766,27788]"/>
  <match src="): ) [98235,98236]" dest="): ) [38995,38996]"/>
  <match src="identifier: epochs [95642,95648]" dest="identifier: epochs [36402,36408]"/>
  <match src="(: ( [97643,97644]" dest="(: ( [38403,38404]"/>
  <match src="identifier: State [83035,83040]" dest="identifier: State [22657,22662]"/>
  <match src="identifier: msg [76511,76514]" dest="identifier: msg [73487,73490]"/>
  <match src="identifier: amount [70323,70329]" dest="identifier: amount [52059,52065]"/>
  <match src="parameter [91207,91214]" dest="parameter [31967,31974]"/>
  <match src="uint256: uint256 [10064,10071]" dest="uint256: uint256 [10628,10635]"/>
  <match src="identifier: amount [71674,71680]" dest="identifier: amount [56910,56916]"/>
  <match src="identifier: _state [92046,92052]" dest="identifier: _state [32806,32812]"/>
  <match src="(: ( [7390,7391]" dest="(: ( [7954,7955]"/>
  <match src="/: / [2018,2019]" dest="/: / [2582,2583]"/>
  <match src="external: external [51422,51430]" dest="external: external [16129,16137]"/>
  <match src="identifier: b [8205,8206]" dest="identifier: b [8769,8770]"/>
  <match src=".: . [87219,87220]" dest=".: . [27979,27980]"/>
  <match src="(: ( [50409,50410]" dest="(: ( [15116,15117]"/>
  <match src="(: ( [73720,73721]" dest="(: ( [54265,54266]"/>
  <match src="type_name [86870,86877]" dest="type_name [27630,27637]"/>
  <match src="identifier: decrementApproveFor [98160,98179]" dest="identifier: decrementApproveFor [38920,38939]"/>
  <match src="primitive_type [27979,27985]" dest="primitive_type [41357,41363]"/>
  <match src="call_argument [98734,98740]" dest="call_argument [39494,39500]"/>
  <match src="): ) [77852,77853]" dest="): ) [65766,65767]"/>
  <match src="}: } [7730,7731]" dest="}: } [8294,8295]"/>
  <match src="primitive_type [43165,43172]" dest="primitive_type [25269,25276]"/>
  <match src="identifier: that [45877,45881]" dest="identifier: that [57148,57152]"/>
  <match src="type_cast_expression [35018,35035]" dest="type_cast_expression [48396,48413]"/>
  <match src="identifier: i [36257,36258]" dest="identifier: i [49635,49636]"/>
  <match src="(: ( [87079,87080]" dest="(: ( [27839,27840]"/>
  <match src="identifier: epoch [96061,96066]" dest="identifier: epoch [36821,36826]"/>
  <match src="function_definition [87657,87757]" dest="function_definition [28417,28517]"/>
  <match src="variable_declaration_statement [35287,35309]" dest="variable_declaration_statement [48665,48687]"/>
  <match src="function_definition [51396,51431]" dest="function_definition [16103,16138]"/>
  <match src="indexed: indexed [48567,48574]" dest="indexed: indexed [55522,55529]"/>
  <match src="call_argument [76818,76823]" dest="call_argument [64965,65000]"/>
  <match src="]: ] [34526,34527]" dest="]: ] [47904,47905]"/>
  <match src="identifier: account [95264,95271]" dest="identifier: account [36024,36031]"/>
  <match src="uint256: uint256 [330,337]" dest="uint256: uint256 [894,901]"/>
  <match src="(: ( [84845,84846]" dest="(: ( [69520,69521]"/>
  <match src="type_name [63405,63417]" dest="type_name [61282,61294]"/>
  <match src="type_name [48597,48601]" dest="type_name [55534,55541]"/>
  <match src="}: } [7940,7941]" dest="}: } [8504,8505]"/>
  <match src="type_name [1228,1235]" dest="type_name [1792,1799]"/>
  <match src="identifier: newImplementation [84895,84912]" dest="identifier: newImplementation [69570,69587]"/>
  <match src="call_argument [28709,28715]" dest="call_argument [42087,42093]"/>
  <match src="primitive_type [82752,82759]" dest="primitive_type [22374,22381]"/>
  <match src=".: . [96871,96872]" dest=".: . [37631,37632]"/>
  <match src="uint256: uint256 [1290,1297]" dest="uint256: uint256 [1854,1861]"/>
  <match src="call_argument [32478,32497]" dest="call_argument [45856,45875]"/>
  <match src="string: string [6888,6894]" dest="string: string [7452,7458]"/>
  <match src="}: } [85387,85388]" dest="}: } [70062,70063]"/>
  <match src="identifier: amount [13088,13094]" dest="identifier: amount [18026,18032]"/>
  <match src="type_name [50374,50381]" dest="type_name [15081,15088]"/>
  <match src="type_name [19738,19745]" dest="type_name [58269,58276]"/>
  <match src="&quot;: &quot; [21957,21958]" dest="&quot;: &quot; [57118,57119]"/>
  <match src="parameter [8058,8069]" dest="parameter [8622,8633]"/>
  <match src="parameter [30054,30066]" dest="parameter [43432,43444]"/>
  <match src="identifier: value [50175,50180]" dest="identifier: value [14882,14887]"/>
  <match src="call_expression [31783,31809]" dest="call_expression [45161,45187]"/>
  <match src="identifier: z [35405,35406]" dest="identifier: z [48783,48784]"/>
  <match src="primitive_type [27387,27394]" dest="primitive_type [40765,40772]"/>
  <match src="return_type_definition [355,372]" dest="return_type_definition [919,936]"/>
  <match src="{: { [5919,5920]" dest="{: { [6483,6484]"/>
  <match src="}: } [86789,86790]" dest="}: } [27549,27550]"/>
  <match src="(: ( [101686,101687]" dest="(: ( [51114,51115]"/>
  <match src="return_type_definition [93081,93095]" dest="return_type_definition [33841,33855]"/>
  <match src="contract_body [46902,47084]" dest="contract_body [19600,19782]"/>
  <match src="identifier: stringify [31232,31241]" dest="identifier: stringify [44610,44619]"/>
  <match src="identifier: candidates [91240,91250]" dest="identifier: candidates [32000,32010]"/>
  <match src="type_name [41375,41382]" dest="type_name [23479,23486]"/>
  <match src="call_expression [63433,63501]" dest="call_expression [61323,61341]"/>
  <match src="state_mutability [50778,50782]" dest="state_mutability [15485,15489]"/>
  <match src="): ) [68746,68747]" dest="): ) [60428,60429]"/>
  <match src="call_argument [46229,46234]" dest="call_argument [65139,65144]"/>
  <match src="&quot;: &quot; [33919,33920]" dest="&quot;: &quot; [47297,47298]"/>
  <match src="parameter [13080,13094]" dest="parameter [18018,18032]"/>
  <match src="parameter [9227,9240]" dest="parameter [9791,9804]"/>
  <match src="type_name [9227,9231]" dest="type_name [9791,9795]"/>
  <match src="state_mutability [51133,51137]" dest="state_mutability [15840,15844]"/>
  <match src=".: . [96024,96025]" dest=".: . [36784,36785]"/>
  <match src=".: . [76813,76814]" dest=".: . [64960,64961]"/>
  <match src="identifier: Bond [77141,77145]" dest="identifier: Unbond [66204,66210]"/>
  <match src="primitive_type [804,811]" dest="primitive_type [1368,1375]"/>
  <match src="[: [ [95504,95505]" dest="[: [ [36264,36265]"/>
  <match src=",: , [6245,6246]" dest=",: , [6809,6810]"/>
  <match src="address: address [75467,75474]" dest="address: address [63980,63987]"/>
  <match src="call_struct_argument [6347,6376]" dest="call_struct_argument [6911,6940]"/>
  <match src="visibility [341,349]" dest="visibility [905,913]"/>
  <match src="): ) [48601,48602]" dest="): ) [55570,55571]"/>
  <match src="comment: // '&gt;' [27703,27709]" dest="comment: // '&gt;' [41081,41087]"/>
  <match src="call_argument [20115,20121]" dest="call_argument [58870,58876]"/>
  <match src="identifier: recordedVote [90990,91002]" dest="identifier: recordedVote [31750,31762]"/>
  <match src="return: return [6022,6028]" dest="return: return [6586,6592]"/>
  <match src="member_expression [73636,73646]" dest="member_expression [72603,72613]"/>
  <match src="identifier: updatePrice [62536,62547]" dest="identifier: oracleCapture [59969,59982]"/>
  <match src="return: return [2622,2628]" dest="return: return [3186,3192]"/>
  <match src="(: ( [93962,93963]" dest="(: ( [34722,34723]"/>
  <match src="(: ( [77625,77626]" dest="(: ( [57450,57451]"/>
  <match src="primitive_type [34704,34711]" dest="primitive_type [48082,48089]"/>
  <match src="block_statement [88196,88229]" dest="block_statement [28956,28989]"/>
  <match src="pure: pure [8839,8843]" dest="pure: pure [9403,9407]"/>
  <match src="call_expression [6998,7033]" dest="call_expression [7562,7597]"/>
  <match src="&quot;: &quot; [21236,21237]" dest="&quot;: &quot; [51900,51901]"/>
  <match src="parameter [9791,9808]" dest="parameter [10355,10372]"/>
  <match src="call_argument [32599,32604]" dest="call_argument [45977,45982]"/>
  <match src="bool: bool [59706,59710]" dest="bool: bool [73581,73585]"/>
  <match src="function: function [93703,93711]" dest="function: function [34463,34471]"/>
  <match src="}: } [43590,43591]" dest="}: } [25694,25695]"/>
  <match src="parameter [44009,44016]" dest="parameter [26113,26120]"/>
  <match src=".: . [97485,97486]" dest=".: . [38245,38246]"/>
  <match src="=: = [98088,98089]" dest="=: = [38848,38849]"/>
  <match src="expression_statement [84672,84709]" dest="expression_statement [69347,69384]"/>
  <match src="identifier: amount [21864,21870]" dest="identifier: amount [57957,57963]"/>
  <match src="parameter [98773,98788]" dest="parameter [39533,39548]"/>
  <match src="type_name [88129,88136]" dest="type_name [28889,28896]"/>
  <match src=".: . [89931,89932]" dest=".: . [30691,30692]"/>
  <match src="identifier: reason [98229,98235]" dest="identifier: reason [38989,38995]"/>
  <match src="{: { [80895,80896]" dest="{: { [67717,67718]"/>
  <match src="function_definition [98151,98358]" dest="function_definition [38911,39118]"/>
  <match src="return: return [80936,80942]" dest="return: return [67758,67764]"/>
  <match src="identifier: D256 [10010,10014]" dest="identifier: D256 [10574,10578]"/>
  <match src="identifier: totalBonded [96973,96984]" dest="identifier: totalBonded [37733,37744]"/>
  <match src="member_expression [88495,88510]" dest="member_expression [29255,29270]"/>
  <match src="identifier: Pool [74957,74961]" dest="identifier: Bonding [63634,63641]"/>
  <match src="(: ( [86956,86957]" dest="(: ( [27716,27717]"/>
  <match src="(: ( [95803,95804]" dest="(: ( [36563,36564]"/>
  <match src="identifier: timestamp [55082,55091]" dest="identifier: timestamp [75163,75172]"/>
  <match src="member_expression [88245,88286]" dest="member_expression [29005,29046]"/>
  <match src="expression_statement [93766,93820]" dest="expression_statement [34526,34580]"/>
  <match src="=: = [42142,42143]" dest="=: = [24246,24247]"/>
  <match src="binary_expression [1993,1998]" dest="binary_expression [2557,2562]"/>
  <match src="mapping: mapping [82438,82445]" dest="mapping: mapping [22060,22067]"/>
  <match src="primitive_type [32059,32066]" dest="primitive_type [45437,45444]"/>
  <match src="): ) [34317,34318]" dest="): ) [47695,47696]"/>
  <match src="identifier: epochs [82990,82996]" dest="identifier: epochs [22612,22618]"/>
  <match src="type_cast_expression [75825,75838]" dest="type_cast_expression [64398,64411]"/>
  <match src="parameter [51173,51183]" dest="parameter [15880,15890]"/>
  <match src="memory: memory [34147,34153]" dest="memory: memory [47525,47531]"/>
  <match src="return: return [1376,1382]" dest="return: return [1940,1946]"/>
  <match src="struct_member [81982,81997]" dest="struct_member [21604,21619]"/>
  <match src="return: return [92039,92045]" dest="return: return [32799,32805]"/>
  <match src="(: ( [99972,99973]" dest="(: ( [62329,62330]"/>
  <match src="indexed: indexed [50557,50564]" dest="indexed: indexed [15264,15271]"/>
  <match src="primitive_type [51147,51151]" dest="primitive_type [15854,15858]"/>
  <match src="expression_statement [97752,97797]" dest="expression_statement [38512,38557]"/>
  <match src="call_argument [48005,48012]" dest="call_argument [51122,51129]"/>
  <match src="): ) [89271,89272]" dest="): ) [30031,30032]"/>
  <match src="identifier: sender [76233,76239]" dest="identifier: sender [64768,64774]"/>
  <match src="identifier: b [6793,6794]" dest="identifier: b [7357,7358]"/>
  <match src="indexed: indexed [25763,25770]" dest="indexed: indexed [55284,55291]"/>
  <match src="primitive_type [75379,75386]" dest="primitive_type [63851,63858]"/>
  <match src="identifier: totalBonded [76883,76894]" dest="identifier: totalBonded [65045,65056]"/>
  <match src="]: ] [86670,86671]" dest="]: ] [27430,27431]"/>
  <match src="==: == [97392,97394]" dest="==: == [38152,38154]"/>
  <match src="}: } [82500,82501]" dest="}: } [22122,22123]"/>
  <match src="comment: /*     Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [58992,59620]" dest="comment: /*     Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [33036,33664]"/>
  <match src="identifier: totalBonded [87246,87257]" dest="identifier: totalBonded [28006,28017]"/>
  <match src=",: , [8615,8616]" dest=",: , [9179,9180]"/>
  <match src="): ) [49953,49954]" dest="): ) [14660,14661]"/>
  <match src="event_paramater [25755,25778]" dest="event_paramater [55276,55299]"/>
  <match src="identifier: spender [13071,13078]" dest="identifier: spender [18009,18016]"/>
  <match src="function: function [86288,86296]" dest="function: function [27048,27056]"/>
  <match src="parameter [36609,36622]" dest="parameter [49987,50000]"/>
  <match src="identifier: withdraw [75988,75996]" dest="identifier: withdraw [64536,64544]"/>
  <match src="(: ( [91059,91060]" dest="(: ( [31819,31820]"/>
  <match src="if_statement [88174,88229]" dest="if_statement [28934,28989]"/>
  <match src="user_defined_type [6653,6657]" dest="user_defined_type [7217,7221]"/>
  <match src="call_argument [29884,29903]" dest="call_argument [43262,43281]"/>
  <match src="identifier: approve [98324,98331]" dest="identifier: approve [39084,39091]"/>
  <match src="parameter [27851,27863]" dest="parameter [41229,41241]"/>
  <match src="primitive_type [51030,51034]" dest="primitive_type [15737,15741]"/>
  <match src="identifier: ASCII_ZERO [36775,36785]" dest="identifier: ASCII_ZERO [50153,50163]"/>
  <match src="type_name [96568,96574]" dest="type_name [37328,37334]"/>
  <match src="{: { [84662,84663]" dest="{: { [69337,69338]"/>
  <match src="return_statement [42685,42705]" dest="return_statement [24789,24809]"/>
  <match src="internal: internal [28933,28941]" dest="internal: internal [42311,42319]"/>
  <match src="call_argument [20706,20712]" dest="call_argument [58174,58180]"/>
  <match src="identifier: self [6665,6669]" dest="identifier: self [7229,7233]"/>
  <match src="): ) [36891,36892]" dest="): ) [50269,50270]"/>
  <match src="type_name [61916,61923]" dest="type_name [72913,72920]"/>
  <match src="expression_statement [75856,75900]" dest="expression_statement [64429,64473]"/>
  <match src="identifier: add [93808,93811]" dest="identifier: add [34568,34571]"/>
  <match src="update_expression [35222,35225]" dest="update_expression [48600,48603]"/>
  <match src=",: , [29485,29486]" dest=",: , [42863,42864]"/>
  <match src="=: = [96045,96046]" dest="=: = [36805,36806]"/>
  <match src="identifier: IDollar [46884,46891]" dest="identifier: IDollar [19582,19589]"/>
  <match src="primitive_type [31478,31485]" dest="primitive_type [44856,44863]"/>
  <match src="primitive_type [81810,81817]" dest="primitive_type [21432,21439]"/>
  <match src="identifier: stringify [28664,28673]" dest="identifier: stringify [42042,42051]"/>
  <match src="=: = [1358,1359]" dest="=: = [1922,1923]"/>
  <match src="[: [ [91110,91111]" dest="[: [ [31870,31871]"/>
  <match src="view: view [86607,86611]" dest="view: view [27367,27371]"/>
  <match src="identifier: account [94999,95006]" dest="identifier: account [35759,35766]"/>
  <match src="uint256: uint256 [77380,77387]" dest="uint256: uint256 [56334,56341]"/>
  <match src="address: address [13449,13456]" dest="address: address [18387,18394]"/>
  <match src="call_argument [19781,19801]" dest="call_argument [58312,58332]"/>
  <match src="call_argument [76406,76416]" dest="call_argument [65543,65553]"/>
  <match src=".: . [8336,8337]" dest=".: . [8900,8901]"/>
  <match src="expression_statement [95214,95300]" dest="expression_statement [35974,36060]"/>
  <match src="identifier: amount [16518,16524]" dest="identifier: amount [53775,53781]"/>
  <match src="{: { [93756,93757]" dest="{: { [34516,34517]"/>
  <match src="type_name [9632,9639]" dest="type_name [10196,10203]"/>
  <match src="identifier: _state [93492,93498]" dest="identifier: _state [34252,34258]"/>
  <match src=",: , [29108,29109]" dest=",: , [42486,42487]"/>
  <match src="uint256: uint256 [93568,93575]" dest="uint256: uint256 [34328,34335]"/>
  <match src="identifier: amount [70780,70786]" dest="identifier: amount [12144,12150]"/>
  <match src="(: ( [91982,91983]" dest="(: ( [32742,32743]"/>
  <match src="{: { [29590,29591]" dest="{: { [42968,42969]"/>
  <match src=".: . [90634,90635]" dest=".: . [31394,31395]"/>
  <match src="function_definition [98754,99073]" dest="function_definition [39514,39833]"/>
  <match src="function_body [97688,97803]" dest="function_body [38448,38563]"/>
  <match src="): ) [87868,87869]" dest="): ) [28628,28629]"/>
  <match src="parameter [31500,31514]" dest="parameter [44878,44892]"/>
  <match src="(: ( [97996,97997]" dest="(: ( [38756,38757]"/>
  <match src="function_definition [88047,88306]" dest="function_definition [28807,29066]"/>
  <match src="): ) [88679,88680]" dest="): ) [29439,29440]"/>
  <match src="(: ( [77939,77940]" dest="(: ( [64850,64851]"/>
  <match src=",: , [32337,32338]" dest=",: , [45715,45716]"/>
  <match src="): ) [19842,19843]" dest="): ) [58381,58382]"/>
  <match src="identifier: add [89766,89769]" dest="identifier: add [30526,30529]"/>
  <match src="{: { [8493,8494]" dest="{: { [9057,9058]"/>
  <match src="primitive_type [13708,13715]" dest="primitive_type [18646,18653]"/>
  <match src="type_name [13080,13087]" dest="type_name [18018,18025]"/>
  <match src="variable_declaration [34914,34933]" dest="variable_declaration [48292,48311]"/>
  <match src="{: { [33870,33871]" dest="{: { [47248,47249]"/>
  <match src="visibility [2580,2588]" dest="visibility [3144,3152]"/>
  <match src="indexed: indexed [25713,25720]" dest="indexed: indexed [55404,55411]"/>
  <match src="identifier: div [89985,89988]" dest="identifier: div [30745,30748]"/>
  <match src="): ) [6551,6552]" dest="): ) [7115,7116]"/>
  <match src="if_statement [28380,28780]" dest="if_statement [41758,42158]"/>
  <match src="type_name [32901,32906]" dest="type_name [46279,46284]"/>
  <match src="public: public [87157,87163]" dest="public: public [27917,27923]"/>
  <match src="parameter [87804,87811]" dest="parameter [28564,28571]"/>
  <match src="): ) [58986,58987]" dest="): ) [20578,20579]"/>
  <match src=",: , [1237,1238]" dest=",: , [1801,1802]"/>
  <match src="identifier: D256 [6029,6033]" dest="identifier: D256 [6593,6597]"/>
  <match src="expression_statement [98256,98352]" dest="expression_statement [39016,39112]"/>
  <match src="primitive_type [49784,49791]" dest="primitive_type [14491,14498]"/>
  <match src="type_name [81821,81828]" dest="type_name [21443,21450]"/>
  <match src=".: . [95675,95676]" dest=".: . [36435,36436]"/>
  <match src="identifier: success [84846,84853]" dest="identifier: success [69521,69528]"/>
  <match src="uint256: uint256 [759,766]" dest="uint256: uint256 [1323,1330]"/>
  <match src="memory: memory [7818,7824]" dest="memory: memory [8382,8388]"/>
  <match src="primitive_type [27629,27635]" dest="primitive_type [41007,41013]"/>
  <match src="}: } [42710,42711]" dest="}: } [24814,24815]"/>
  <match src="type_name [50590,50597]" dest="type_name [15297,15304]"/>
  <match src="returns: returns [34749,34756]" dest="returns: returns [48127,48134]"/>
  <match src="identifier: shift [35295,35300]" dest="identifier: shift [48673,48678]"/>
  <match src="string_literal [100100,100121]" dest="string_literal [62457,62478]"/>
  <match src=",: , [30044,30045]" dest=",: , [43422,43423]"/>
  <match src="member_expression [8535,8545]" dest="member_expression [9099,9109]"/>
  <match src="return_statement [89505,89514]" dest="return_statement [30265,30274]"/>
  <match src="identifier: i [36161,36162]" dest="identifier: i [49539,49540]"/>
  <match src="visibility [32162,32170]" dest="visibility [45540,45548]"/>
  <match src="function_definition [30673,31430]" dest="function_definition [44051,44808]"/>
  <match src="parameter [51361,51380]" dest="parameter [16068,16087]"/>
  <match src="string_literal [75267,75273]" dest="string_literal [63736,63745]"/>
  <match src="return_statement [91226,91268]" dest="return_statement [31986,32028]"/>
  <match src="identifier: accounts [82940,82948]" dest="identifier: accounts [22562,22570]"/>
  <match src="event_paramater [50499,50514]" dest="event_paramater [15206,15221]"/>
  <match src="}: } [58989,58990]" dest="}: } [20581,20582]"/>
  <match src="identifier: msg [76933,76936]" dest="identifier: msg [65667,65670]"/>
  <match src="parameter [6730,6741]" dest="parameter [7294,7305]"/>
  <match src=".: . [90001,90002]" dest=".: . [30761,30762]"/>
  <match src="}: } [84919,84920]" dest="}: } [69594,69595]"/>
  <match src="): ) [92123,92124]" dest="): ) [32883,32884]"/>
  <match src="returns: returns [5986,5993]" dest="returns: returns [6550,6557]"/>
  <match src="identifier: balance [96149,96156]" dest="identifier: balance [36909,36916]"/>
  <match src="uint: uint [49526,49530]" dest="uint: uint [14233,14237]"/>
  <match src="[: [ [90779,90780]" dest="[: [ [31539,31540]"/>
  <match src="type_name [9791,9798]" dest="type_name [10355,10362]"/>
  <match src="identifier: account [99981,99988]" dest="identifier: account [62338,62345]"/>
  <match src="parameter [4639,4665]" dest="parameter [5203,5229]"/>
  <match src="type_name [93731,93738]" dest="type_name [34491,34498]"/>
  <match src="binary_expression [100292,100327]" dest="binary_expression [62649,62684]"/>
  <match src="parameter [49796,49806]" dest="parameter [14503,14513]"/>
  <match src="(: ( [34534,34535]" dest="(: ( [47912,47913]"/>
  <match src="): ) [42900,42901]" dest="): ) [25004,25005]"/>
  <match src=".: . [33001,33002]" dest=".: . [46379,46380]"/>
  <match src="uint8: uint8 [36857,36862]" dest="uint8: uint8 [50235,50240]"/>
  <match src="expression_statement [35379,35424]" dest="expression_statement [48757,48802]"/>
  <match src="): ) [32702,32703]" dest="): ) [46080,46081]"/>
  <match src="uint256: uint256 [319,326]" dest="uint256: uint256 [883,890]"/>
  <match src="identifier: value [8517,8522]" dest="identifier: value [9081,9086]"/>
  <match src="external: external [58956,58964]" dest="external: external [20548,20556]"/>
  <match src="parameter [32847,32860]" dest="parameter [46225,46238]"/>
  <match src="identifier: value [46229,46234]" dest="identifier: value [65139,65144]"/>
  <match src="call_argument [77851,77852]" dest="call_argument [65765,65766]"/>
  <match src="(: ( [49783,49784]" dest="(: ( [14490,14491]"/>
  <match src="type_name [30076,30083]" dest="type_name [43454,43461]"/>
  <match src="internal: internal [9498,9506]" dest="internal: internal [10062,10070]"/>
  <match src="return_statement [35606,35620]" dest="return_statement [48984,48998]"/>
  <match src="call_argument [95749,95755]" dest="call_argument [36509,36515]"/>
  <match src="identifier: a [3411,3412]" dest="identifier: a [3975,3976]"/>
  <match src="identifier: coupons [90206,90213]" dest="identifier: coupons [30966,30973]"/>
  <match src="}: } [2674,2675]" dest="}: } [3238,3239]"/>
  <match src="primitive_type [36761,36766]" dest="primitive_type [50139,50144]"/>
  <match src=",: , [3374,3375]" dest=",: , [3938,3939]"/>
  <match src="uint256: uint256 [75507,75514]" dest="uint256: uint256 [64020,64027]"/>
  <match src="&gt;: &gt; [10168,10169]" dest="&gt;: &gt; [10732,10733]"/>
  <match src="variable_declaration [63108,63132]" dest="variable_declaration [60783,60799]"/>
  <match src="{: { [91076,91077]" dest="{: { [31836,31837]"/>
  <match src="type_name [28880,28887]" dest="type_name [42258,42265]"/>
  <match src="identifier: balance [94816,94823]" dest="identifier: balance [35576,35583]"/>
  <match src="parameter [98572,98589]" dest="parameter [39332,39349]"/>
  <match src=",: , [100531,100532]" dest=",: , [62888,62889]"/>
  <match src="(: ( [10090,10091]" dest="(: ( [10654,10655]"/>
  <match src="identifier: votes [97934,97939]" dest="identifier: votes [38694,38699]"/>
  <match src="call_expression [76778,76824]" dest="call_expression [64955,65001]"/>
  <match src="identifier: abi [30949,30952]" dest="identifier: abi [44327,44330]"/>
  <match src="(: ( [90601,90602]" dest="(: ( [31361,31362]"/>
  <match src="array_access [92046,92074]" dest="array_access [32806,32834]"/>
  <match src="identifier: epoch [89226,89231]" dest="identifier: epoch [29986,29991]"/>
  <match src="[: [ [97769,97770]" dest="[: [ [38529,38530]"/>
  <match src="&quot;: &quot; [45963,45964]" dest="&quot;: &quot; [58567,58568]"/>
  <match src="): ) [9446,9447]" dest="): ) [10010,10011]"/>
  <match src="=: = [95633,95634]" dest="=: = [36393,36394]"/>
  <match src="(: ( [93517,93518]" dest="(: ( [34277,34278]"/>
  <match src="): ) [27939,27940]" dest="): ) [41317,41318]"/>
  <match src="identifier: sub [755,758]" dest="identifier: sub [1319,1322]"/>
  <match src="call_argument [96301,96302]" dest="call_argument [37061,37062]"/>
  <match src="identifier: _state [99010,99016]" dest="identifier: _state [39770,39776]"/>
  <match src="string_literal [76143,76178]" dest="string_literal [64700,64738]"/>
  <match src="function_definition [36586,36899]" dest="function_definition [49964,50277]"/>
  <match src="yul_function_call [80905,80925]" dest="yul_function_call [67727,67747]"/>
  <match src="block_statement [34319,34642]" dest="block_statement [47697,48020]"/>
  <match src="pure: pure [50028,50032]" dest="pure: pure [14735,14739]"/>
  <match src="identifier: amount [16593,16599]" dest="identifier: amount [54323,54329]"/>
  <match src="yul_evm_builtin [85347,85353]" dest="yul_evm_builtin [70022,70028]"/>
  <match src="address: address [26048,26055]" dest="address: address [51565,51572]"/>
  <match src="identifier: newLock [98973,98980]" dest="identifier: newLock [39733,39740]"/>
  <match src="string_literal [85206,85267]" dest="string_literal [69881,69942]"/>
  <match src="struct_declaration [81685,81910]" dest="struct_declaration [21307,21532]"/>
  <match src="uint256: uint256 [11995,12002]" dest="uint256: uint256 [16933,16940]"/>
  <match src="identifier: account [75652,75659]" dest="identifier: account [71121,71128]"/>
  <match src="identifier: candidate [98502,98511]" dest="identifier: candidate [39262,39271]"/>
  <match src="identifier: sender [76603,76609]" dest="identifier: sender [64886,64892]"/>
  <match src=",: , [30751,30752]" dest=",: , [44129,44130]"/>
  <match src="expression_statement [46101,46194]" dest="expression_statement [51432,51503]"/>
  <match src="{: { [1698,1699]" dest="{: { [2262,2263]"/>
  <match src="address: address [41636,41643]" dest="address: address [23740,23747]"/>
  <match src="): ) [12391,12392]" dest="): ) [17329,17330]"/>
  <match src="variable_declaration [3399,3408]" dest="variable_declaration [3963,3972]"/>
  <match src="(: ( [89460,89461]" dest="(: ( [30220,30221]"/>
  <match src="(: ( [9405,9406]" dest="(: ( [9969,9970]"/>
  <match src="return_statement [2622,2669]" dest="return_statement [3186,3233]"/>
  <match src="): ) [6148,6149]" dest="): ) [6712,6713]"/>
  <match src="): ) [19923,19924]" dest="): ) [58470,58471]"/>
  <match src="call_argument [46066,46080]" dest="call_argument [51694,51738]"/>
  <match src="call_argument [75948,75958]" dest="call_argument [64496,64506]"/>
  <match src="call_argument [98923,98932]" dest="call_argument [39683,39692]"/>
  <match src="type_name [62681,62685]" dest="type_name [61309,61313]"/>
  <match src="identifier: sub [95280,95283]" dest="identifier: sub [36040,36043]"/>
  <match src="string [53373,53410]" dest="string [66156,66187]"/>
  <match src="identifier: IMPLEMENTATION_SLOT [86153,86172]" dest="identifier: IMPLEMENTATION_SLOT [26913,26932]"/>
  <match src="type_name [27432,27439]" dest="type_name [40810,40817]"/>
  <match src="external: external [101471,101479]" dest="external: external [57663,57671]"/>
  <match src="identifier: reserve1 [50616,50624]" dest="identifier: reserve1 [15323,15331]"/>
  <match src="identifier: reason [93683,93689]" dest="identifier: reason [34443,34449]"/>
  <match src="return: return [68923,68929]" dest="return: return [60543,60549]"/>
  <match src="number_literal: 2 [9032,9033]" dest="number_literal: 2 [9596,9597]"/>
  <match src="}: } [88850,88851]" dest="}: } [29610,29611]"/>
  <match src="identifier: self [9492,9496]" dest="identifier: self [10056,10060]"/>
  <match src="): ) [29429,29430]" dest="): ) [42807,42808]"/>
  <match src="primitive_type [9406,9410]" dest="primitive_type [9970,9974]"/>
  <match src="address: address [91020,91027]" dest="address: address [31780,31787]"/>
  <match src="returns: returns [8978,8985]" dest="returns: returns [9542,9549]"/>
  <match src="{: { [42784,42785]" dest="{: { [24888,24889]"/>
  <match src="type_name [47076,47080]" dest="type_name [19774,19778]"/>
  <match src="}: } [43094,43095]" dest="}: } [25198,25199]"/>
  <match src="type_name [10010,10014]" dest="type_name [10574,10578]"/>
  <match src="identifier: balanceOfRewarded [68512,68529]" dest="identifier: shrinkSupply [60263,60275]"/>
  <match src="identifier: accounts [94956,94964]" dest="identifier: accounts [35716,35724]"/>
  <match src="function_body [61655,61827]" dest="function_body [61271,61549]"/>
  <match src="&quot;: &quot; [99906,99907]" dest="&quot;: &quot; [62263,62264]"/>
  <match src="(: ( [36722,36723]" dest="(: ( [50100,50101]"/>
  <match src="uint256: uint256 [87593,87600]" dest="uint256: uint256 [28353,28360]"/>
  <match src="function_body [29590,30006]" dest="function_body [42968,43384]"/>
  <match src="state_mutability [11564,11568]" dest="state_mutability [16502,16506]"/>
  <match src="identifier: D256 [8167,8171]" dest="identifier: D256 [8731,8735]"/>
  <match src="(: ( [32225,32226]" dest="(: ( [45603,45604]"/>
  <match src="identifier: outstanding [95621,95632]" dest="identifier: outstanding [36381,36392]"/>
  <match src="primitive_type [1655,1662]" dest="primitive_type [2219,2226]"/>
  <match src="variable_declaration [63082,63106]" dest="variable_declaration [60760,60781]"/>
  <match src="function_body [6012,6057]" dest="function_body [6576,6621]"/>
  <match src="=: = [94255,94256]" dest="=: = [35015,35016]"/>
  <match src="type_name [13939,13946]" dest="type_name [18877,18884]"/>
  <match src="string_literal [86465,86471]" dest="string_literal [27225,27231]"/>
  <match src="private: private [85121,85128]" dest="private: private [69796,69803]"/>
  <match src="function: function [2545,2553]" dest="function: function [3109,3117]"/>
  <match src="(: ( [81764,81765]" dest="(: ( [21386,21387]"/>
  <match src=",: , [27863,27864]" dest=",: , [41241,41242]"/>
  <match src="visibility [49897,49905]" dest="visibility [14604,14612]"/>
  <match src="primitive_type [49915,49919]" dest="primitive_type [14622,14626]"/>
  <match src="internal: internal [98237,98245]" dest="internal: internal [38997,39005]"/>
  <match src="expression_statement [76054,76090]" dest="expression_statement [65069,65109]"/>
  <match src="call_argument [78914,78988]" dest="call_argument [53443,53535]"/>
  <match src="returns: returns [32892,32899]" dest="returns: returns [46270,46277]"/>
  <match src="indexed: indexed [50382,50389]" dest="indexed: indexed [15089,15096]"/>
  <match src="}: } [32745,32746]" dest="}: } [46123,46124]"/>
  <match src="): ) [50854,50855]" dest="): ) [15561,15562]"/>
  <match src="function_definition [86796,86904]" dest="function_definition [27556,27664]"/>
  <match src="inheritance_specifier [86047,86052]" dest="inheritance_specifier [26807,26812]"/>
  <match src="}: } [34641,34642]" dest="}: } [48019,48020]"/>
  <match src="identifier: payloadA [28674,28682]" dest="identifier: payloadA [42052,42060]"/>
  <match src="array_access [95489,95513]" dest="array_access [36249,36273]"/>
  <match src="indexed: indexed [50330,50337]" dest="indexed: indexed [15037,15044]"/>
  <match src="visibility [47060,47066]" dest="visibility [19758,19764]"/>
  <match src="array_access [90327,90347]" dest="array_access [31087,31107]"/>
  <match src="identifier: bonded [93483,93489]" dest="identifier: bonded [34243,34249]"/>
  <match src="member_expression [99010,99046]" dest="member_expression [39770,39806]"/>
  <match src="call_argument [9445,9446]" dest="call_argument [10009,10010]"/>
  <match src="identifier: _state [94088,94094]" dest="identifier: _state [34848,34854]"/>
  <match src=",: , [32452,32453]" dest=",: , [45830,45831]"/>
  <match src="identifier: newImplementation [85102,85119]" dest="identifier: newImplementation [69777,69794]"/>
  <match src=",: , [50195,50196]" dest=",: , [14902,14903]"/>
  <match src=",: , [51330,51331]" dest=",: , [16037,16038]"/>
  <match src="type_name [73194,73201]" dest="type_name [52327,52334]"/>
  <match src="=: = [34268,34269]" dest="=: = [47646,47647]"/>
  <match src="identifier: owner [13955,13960]" dest="identifier: owner [18893,18898]"/>
  <match src="returns: returns [9256,9263]" dest="returns: returns [9820,9827]"/>
  <match src="(: ( [34805,34806]" dest="(: ( [48183,48184]"/>
  <match src="visibility [41304,41311]" dest="visibility [23408,23415]"/>
  <match src=",: , [4064,4065]" dest=",: , [4628,4629]"/>
  <match src="state_mutability [42441,42445]" dest="state_mutability [24545,24549]"/>
  <match src="identifier: payloadB [30795,30803]" dest="identifier: payloadB [44173,44181]"/>
  <match src="identifier: epoch [90890,90895]" dest="identifier: epoch [31650,31655]"/>
  <match src="uint8: uint8 [35972,35977]" dest="uint8: uint8 [49350,49355]"/>
  <match src="contract: contract [82220,82228]" dest="contract: contract [21842,21850]"/>
  <match src="identifier: decrementBalanceOfStaged [77020,77044]" dest="identifier: decrementBalanceOfStaged [65155,65179]"/>
  <match src=",: , [28073,28074]" dest=",: , [41451,41452]"/>
  <match src="identifier: Getters [92932,92939]" dest="identifier: Getters [33692,33699]"/>
  <match src="): ) [6378,6379]" dest="): ) [6942,6943]"/>
  <match src="identifier: amount0 [51273,51280]" dest="identifier: amount0 [15980,15987]"/>
  <match src="=: = [97461,97462]" dest="=: = [38221,38222]"/>
  <match src="): ) [13498,13499]" dest="): ) [18436,18437]"/>
  <match src="call_argument [9919,9928]" dest="call_argument [10483,10492]"/>
  <match src="returns: returns [6128,6135]" dest="returns: returns [6692,6699]"/>
  <match src="primitive_type [50475,50479]" dest="primitive_type [15182,15186]"/>
  <match src=".: . [98452,98453]" dest=".: . [39212,39213]"/>
  <match src="primitive_type [28834,28841]" dest="primitive_type [42212,42219]"/>
  <match src="{: { [93907,93908]" dest="{: { [34667,34668]"/>
  <match src="parameter [18996,19019]" dest="parameter [11766,11785]"/>
  <match src="primitive_type [48112,48119]" dest="primitive_type [51303,51310]"/>
  <match src="call_argument [93812,93818]" dest="call_argument [34572,34578]"/>
  <match src="visibility [87157,87163]" dest="visibility [27917,27923]"/>
  <match src=",: , [17695,17696]" dest=",: , [58521,58522]"/>
  <match src="returns: returns [90150,90157]" dest="returns: returns [30910,30917]"/>
  <match src="(: ( [95139,95140]" dest="(: ( [35899,35900]"/>
  <match src="return_type_definition [49906,49920]" dest="return_type_definition [14613,14627]"/>
  <match src="uint256: uint256 [9818,9825]" dest="uint256: uint256 [10382,10389]"/>
  <match src="identifier: _state [95935,95941]" dest="identifier: _state [36695,36701]"/>
  <match src="(: ( [4029,4030]" dest="(: ( [4593,4594]"/>
  <match src="identifier: _ [100408,100409]" dest="identifier: _ [62765,62766]"/>
  <match src="identifier: accounts [88969,88977]" dest="identifier: accounts [29729,29737]"/>
  <match src="type_name [86736,86743]" dest="type_name [27496,27503]"/>
  <match src="address: address [91003,91010]" dest="address: address [31763,31770]"/>
  <match src="returns: returns [13105,13112]" dest="returns: returns [18043,18050]"/>
  <match src="parameter [90159,90166]" dest="parameter [30919,30926]"/>
  <match src="array_access [90766,90786]" dest="array_access [31526,31546]"/>
  <match src="primitive_type [79112,79119]" dest="primitive_type [54062,54069]"/>
  <match src="): ) [84707,84708]" dest="): ) [69382,69383]"/>
  <match src="identifier: incrementBalanceOfPhantom [76961,76986]" dest="identifier: decrementBalanceOf [66116,66134]"/>
  <match src=".: . [8539,8540]" dest=".: . [9103,9104]"/>
  <match src="struct_member [81802,81847]" dest="struct_member [21424,21469]"/>
  <match src="): ) [76690,76691]" dest="): ) [57363,57364]"/>
  <match src="call_argument [31277,31282]" dest="call_argument [44655,44660]"/>
  <match src="visibility [86412,86418]" dest="visibility [27172,27178]"/>
  <match src="primitive_type [95439,95446]" dest="primitive_type [36199,36206]"/>
  <match src="member_expression [91365,91400]" dest="member_expression [32125,32160]"/>
  <match src="): ) [8356,8357]" dest="): ) [8920,8921]"/>
  <match src="call_expression [43800,43842]" dest="call_expression [25904,25946]"/>
  <match src="uint256: uint256 [36609,36616]" dest="uint256: uint256 [49987,49994]"/>
  <match src="identifier: outstandingCoupons [88414,88432]" dest="identifier: outstandingCoupons [29174,29192]"/>
  <match src="user_defined_type [46895,46901]" dest="user_defined_type [19593,19599]"/>
  <match src="(: ( [50791,50792]" dest="(: ( [15498,15499]"/>
  <match src="identifier: dollar [87830,87836]" dest="identifier: dollar [28590,28596]"/>
  <match src="+: + [36869,36870]" dest="+: + [50247,50248]"/>
  <match src="): ) [53758,53759]" dest="): ) [65717,65718]"/>
  <match src="variable_declaration [73352,73370]" dest="variable_declaration [74751,74770]"/>
  <match src="return_statement [88955,89011]" dest="return_statement [29715,29771]"/>
  <match src="identifier: IMPLEMENTATION_SLOT [92185,92204]" dest="identifier: IMPLEMENTATION_SLOT [32945,32964]"/>
  <match src="identifier: redeemable [94103,94113]" dest="identifier: redeemable [34863,34873]"/>
  <match src="}: } [82140,82141]" dest="}: } [21762,21763]"/>
  <match src="identifier: payloadA [28329,28337]" dest="identifier: payloadA [41707,41715]"/>
  <match src="parameter [86870,86877]" dest="parameter [27630,27637]"/>
  <match src="identifier: account [88573,88580]" dest="identifier: account [29333,29340]"/>
  <match src="bytes: bytes [33749,33754]" dest="bytes: bytes [47127,47132]"/>
  <match src="identifier: account [95505,95512]" dest="identifier: account [36265,36272]"/>
  <match src="external: external [51073,51081]" dest="external: external [15780,15788]"/>
  <match src="call_expression [88245,88299]" dest="call_expression [29005,29059]"/>
  <match src="type_name [91739,91746]" dest="type_name [32499,32506]"/>
  <match src="call_expression [3361,3389]" dest="call_expression [3925,3953]"/>
  <match src="revert: revert [28990,28996]" dest="revert: revert [42368,42374]"/>
  <match src=".: . [76127,76128]" dest=".: . [64684,64685]"/>
  <match src="identifier: FILE [100347,100351]" dest="identifier: FILE [62704,62708]"/>
  <match src="&quot;: &quot; [4066,4067]" dest="&quot;: &quot; [4630,4631]"/>
  <match src="returns: returns [51087,51094]" dest="returns: returns [15794,15801]"/>
  <match src="identifier: bond [76551,76555]" dest="identifier: bond [64804,64808]"/>
  <match src="uint256: uint256 [41887,41894]" dest="uint256: uint256 [23991,23998]"/>
  <match src="number_literal: 0 [4722,4723]" dest="number_literal: 0 [5286,5287]"/>
  <match src="(: ( [42530,42531]" dest="(: ( [24634,24635]"/>
  <match src="}: } [86557,86558]" dest="}: } [27317,27318]"/>
  <match src="identifier: self [7083,7087]" dest="identifier: self [7647,7651]"/>
  <match src="(: ( [88162,88163]" dest="(: ( [28922,28923]"/>
  <match src="uint256: uint256 [43908,43915]" dest="uint256: uint256 [26012,26019]"/>
  <match src="function_body [2612,2675]" dest="function_body [3176,3239]"/>
  <match src="number_literal: 1 [35053,35054]" dest="number_literal: 1 [48431,48432]"/>
  <match src="identifier: reason [95987,95993]" dest="identifier: reason [36747,36753]"/>
  <match src="primitive_type [84720,84724]" dest="primitive_type [69395,69399]"/>
  <match src="uint256: uint256 [9767,9774]" dest="uint256: uint256 [10331,10338]"/>
  <match src="primitive_type [41787,41794]" dest="primitive_type [23891,23898]"/>
  <match src="identifier: add [94114,94117]" dest="identifier: add [34874,34877]"/>
  <match src="(: ( [27985,27986]" dest="(: ( [41363,41364]"/>
  <match src="identifier: amount [95575,95581]" dest="identifier: amount [36335,36341]"/>
  <match src="contract_body [99856,100637]" dest="contract_body [62213,62994]"/>
  <match src="type_cast_expression [36017,36038]" dest="type_cast_expression [49395,49416]"/>
  <match src="identifier: a [1652,1653]" dest="identifier: a [2216,2217]"/>
  <match src="identifier: USDC [41629,41633]" dest="identifier: USDC [23733,23737]"/>
  <match src="(: ( [43058,43059]" dest="(: ( [25162,25163]"/>
  <match src="number_literal: 0 [33152,33153]" dest="number_literal: 0 [46530,46531]"/>
  <match src="}: } [86387,86388]" dest="}: } [27147,27148]"/>
  <match src="parameter [13518,13522]" dest="parameter [18456,18460]"/>
  <match src="return_type_definition [8978,8992]" dest="return_type_definition [9542,9556]"/>
  <match src="type_name [93433,93440]" dest="type_name [34193,34200]"/>
  <match src="address: address [12344,12351]" dest="address: address [17282,17289]"/>
  <match src="): ) [101687,101688]" dest="): ) [51115,51116]"/>
  <match src="}: } [9952,9953]" dest="}: } [10516,10517]"/>
  <match src="{: { [43783,43784]" dest="{: { [25887,25888]"/>
  <match src="}: } [42829,42830]" dest="}: } [24933,24934]"/>
  <match src=",: , [46142,46143]" dest=",: , [51457,51458]"/>
  <match src="{: { [61735,61736]" dest="{: { [61475,61476]"/>
  <match src="): ) [43626,43627]" dest="): ) [25730,25731]"/>
  <match src="type_name [75565,75572]" dest="type_name [63907,63914]"/>
  <match src="function_body [42675,42711]" dest="function_body [24779,24815]"/>
  <match src="return_statement [1376,1385]" dest="return_statement [1940,1949]"/>
  <match src="): ) [23095,23096]" dest="): ) [51596,51597]"/>
  <match src="(: ( [34540,34541]" dest="(: ( [47918,47919]"/>
  <match src="identifier: expiring [90495,90503]" dest="identifier: expiring [31255,31263]"/>
  <match src="): ) [100254,100255]" dest="): ) [62611,62612]"/>
  <match src="parameter [3214,3223]" dest="parameter [3778,3787]"/>
  <match src="type_cast_expression [35058,35085]" dest="type_cast_expression [48436,48463]"/>
  <match src="identifier: candidate [91307,91316]" dest="identifier: candidate [32067,32076]"/>
  <match src="identifier: value [8331,8336]" dest="identifier: value [8895,8900]"/>
  <match src="identifier: amount [17070,17076]" dest="identifier: amount [54281,54287]"/>
  <match src="]: ] [91660,91661]" dest="]: ] [32420,32421]"/>
  <match src="number_literal: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc [86175,86241]" dest="number_literal: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc [26935,27001]"/>
  <match src="internal: internal [19754,19762]" dest="internal: internal [52142,52150]"/>
  <match src="(: ( [77565,77566]" dest="(: ( [57389,57390]"/>
  <match src="identifier: current [89130,89137]" dest="identifier: current [29890,29897]"/>
  <match src=".: . [77720,77721]" dest=".: . [72654,72655]"/>
  <match src="{: { [43660,43661]" dest="{: { [25764,25765]"/>
  <match src="identifier: supply [94800,94806]" dest="identifier: supply [35560,35566]"/>
  <match src="primitive_type [82446,82453]" dest="primitive_type [22068,22075]"/>
  <match src="): ) [9525,9526]" dest="): ) [10089,10090]"/>
  <match src="[: [ [98068,98069]" dest="[: [ [38828,38829]"/>
  <match src="identifier: account [95909,95916]" dest="identifier: account [36669,36676]"/>
  <match src="[: [ [90665,90666]" dest="[: [ [31425,31426]"/>
  <match src="): ) [9842,9843]" dest="): ) [10406,10407]"/>
  <match src="memory: memory [8008,8014]" dest="memory: memory [8572,8578]"/>
  <match src="identifier: reason [29184,29190]" dest="identifier: reason [42562,42568]"/>
  <match src="function: function [9738,9746]" dest="function: function [10302,10310]"/>
  <match src="}: } [96478,96479]" dest="}: } [37238,37239]"/>
  <match src="call_argument [31721,31725]" dest="call_argument [45099,45103]"/>
  <match src="identifier: require [2008,2015]" dest="identifier: require [2572,2579]"/>
  <match src="parameter [6653,6669]" dest="parameter [7217,7233]"/>
  <match src="member_expression [87728,87742]" dest="member_expression [28488,28502]"/>
  <match src="view: view [89380,89384]" dest="view: view [30140,30144]"/>
  <match src="call_argument [76999,77009]" dest="call_argument [66147,66154]"/>
  <match src="): ) [32496,32497]" dest="): ) [45874,45875]"/>
  <match src="&quot;: &quot; [24991,24992]" dest="&quot;: &quot; [71523,71524]"/>
  <match src="type_cast_expression [35063,35084]" dest="type_cast_expression [48441,48462]"/>
  <match src="): ) [92255,92256]" dest="): ) [33015,33016]"/>
  <match src=".: . [97444,97445]" dest=".: . [38204,38205]"/>
  <match src="): ) [94849,94850]" dest="): ) [35609,35610]"/>
  <match src="identifier: DOMAIN_SEPARATOR [49936,49952]" dest="identifier: DOMAIN_SEPARATOR [14643,14659]"/>
  <match src="string [2639,2667]" dest="string [3203,3231]"/>
  <match src="[: [ [95648,95649]" dest="[: [ [36408,36409]"/>
  <match src=".: . [97469,97470]" dest=".: . [38229,38230]"/>
  <match src="call_argument [7013,7024]" dest="call_argument [7577,7588]"/>
  <match src="): ) [43415,43416]" dest="): ) [25519,25520]"/>
  <match src="return_statement [43670,43695]" dest="return_statement [25774,25799]"/>
  <match src="event_definition [50579,50626]" dest="event_definition [15286,15333]"/>
  <match src="identifier: transferFrom [13436,13448]" dest="identifier: transferFrom [18374,18386]"/>
  <match src="call_argument [96092,96098]" dest="call_argument [36852,36858]"/>
  <match src="visibility [10034,10041]" dest="visibility [10598,10605]"/>
  <match src="function: function [91413,91421]" dest="function: function [32173,32181]"/>
  <match src="identifier: amount0In [50456,50465]" dest="identifier: amount0In [15163,15172]"/>
  <match src="(: ( [98130,98131]" dest="(: ( [38890,38891]"/>
  <match src="{: { [7525,7526]" dest="{: { [8089,8090]"/>
  <match src="identifier: balance [93924,93931]" dest="identifier: balance [34684,34691]"/>
  <match src="binary_expression [33148,33153]" dest="binary_expression [46526,46531]"/>
  <match src="uint256: uint256 [28321,28328]" dest="uint256: uint256 [41699,41706]"/>
  <match src="identifier: abi [30262,30265]" dest="identifier: abi [43640,43643]"/>
  <match src="address: address [13730,13737]" dest="address: address [18668,18675]"/>
  <match src="view: view [11564,11568]" dest="view: view [16502,16506]"/>
  <match src="]: ] [91120,91121]" dest="]: ] [31880,31881]"/>
  <match src="uint: uint [49796,49800]" dest="uint: uint [14503,14507]"/>
  <match src="string_literal [100365,100387]" dest="string_literal [62722,62744]"/>
  <match src="identifier: i [34310,34311]" dest="identifier: i [47688,47689]"/>
  <match src="uint256: uint256 [97036,97043]" dest="uint256: uint256 [37796,37803]"/>
  <match src="): ) [43658,43659]" dest="): ) [25762,25763]"/>
  <match src="string [24991,25024]" dest="string [71523,71552]"/>
  <match src="function_definition [87341,87439]" dest="function_definition [28101,28199]"/>
  <match src="function: function [7049,7057]" dest="function: function [7613,7621]"/>
  <match src="uint: uint [50292,50296]" dest="uint: uint [14999,15003]"/>
  <match src="call_argument [35063,35084]" dest="call_argument [48441,48462]"/>
  <match src="uint256: uint256 [93056,93063]" dest="uint256: uint256 [33816,33823]"/>
  <match src="user_defined_type [7328,7332]" dest="user_defined_type [7892,7896]"/>
  <match src="memory: memory [6955,6961]" dest="memory: memory [7519,7525]"/>
  <match src="type_name [88391,88398]" dest="type_name [29151,29158]"/>
  <match src="): ) [50624,50625]" dest="): ) [15331,15332]"/>
  <match src="(: ( [31449,31450]" dest="(: ( [44827,44828]"/>
  <match src="): ) [35035,35036]" dest="): ) [48413,48414]"/>
  <match src="identifier: candidate [91175,91184]" dest="identifier: candidate [31935,31944]"/>
  <match src="): ) [78073,78074]" dest="): ) [53910,53911]"/>
  <match src="inheritance_specifier [74965,74976]" dest="inheritance_specifier [63645,63652]"/>
  <match src="string: string [8216,8222]" dest="string: string [8780,8786]"/>
  <match src="): ) [76896,76897]" dest="): ) [65058,65059]"/>
  <match src="identifier: div [3199,3202]" dest="identifier: div [3763,3766]"/>
  <match src="}: } [5771,5772]" dest="}: } [6335,6336]"/>
  <match src="identifier: _account [59673,59681]" dest="identifier: candidate [71185,71194]"/>
  <match src="): ) [43293,43294]" dest="): ) [25397,25398]"/>
  <match src="event_paramater [13708,13728]" dest="event_paramater [18646,18666]"/>
  <match src="identifier: balance [94792,94799]" dest="identifier: balance [35552,35559]"/>
  <match src="identifier: candidates [98655,98665]" dest="identifier: candidates [39415,39425]"/>
  <match src="call_expression [101680,101688]" dest="call_expression [51108,51116]"/>
  <match src="call_argument [77638,77643]" dest="call_argument [57463,57468]"/>
  <match src="bytes32: bytes32 [84123,84130]" dest="bytes32: bytes32 [68798,68805]"/>
  <match src=".: . [97177,97178]" dest=".: . [37937,37938]"/>
  <match src="type_name [96552,96559]" dest="type_name [37312,37319]"/>
  <match src="): ) [68882,68883]" dest="): ) [73743,73744]"/>
  <match src="identifier: reason [96582,96588]" dest="identifier: reason [37342,37348]"/>
  <match src="uint256: uint256 [88391,88398]" dest="uint256: uint256 [29151,29158]"/>
  <match src="function_definition [90806,90940]" dest="function_definition [31566,31700]"/>
  <match src="pure: pure [1675,1679]" dest="pure: pure [2239,2243]"/>
  <match src="{: { [88446,88447]" dest="{: { [29206,29207]"/>
  <match src="memory: memory [4646,4652]" dest="memory: memory [5210,5216]"/>
  <match src="identifier: sender [76410,76416]" dest="identifier: sender [65547,65553]"/>
  <match src="function_body [87496,87539]" dest="function_body [28256,28299]"/>
  <match src="identifier: value [49730,49735]" dest="identifier: value [14437,14442]"/>
  <match src="identifier: epochStart [89832,89842]" dest="identifier: epochStart [30592,30602]"/>
  <match src="function_definition [87237,87335]" dest="function_definition [27997,28095]"/>
  <match src="inheritance_specifier [83892,83897]" dest="inheritance_specifier [68567,68572]"/>
  <match src="identifier: coupons [88520,88527]" dest="identifier: coupons [29280,29287]"/>
  <match src="parameter [96568,96588]" dest="parameter [37328,37348]"/>
  <match src="(: ( [36766,36767]" dest="(: ( [50144,50145]"/>
  <match src="string [84812,84826]" dest="string [69487,69501]"/>
  <match src=".: . [76671,76672]" dest=".: . [57331,57332]"/>
  <match src="contract: contract [15724,15732]" dest="contract: contract [54995,55003]"/>
  <match src="assignment_expression [97438,97517]" dest="assignment_expression [38198,38277]"/>
  <match src="): ) [93745,93746]" dest="): ) [34505,34506]"/>
  <match src="call_argument [31752,31757]" dest="call_argument [45130,45135]"/>
  <match src="returns: returns [50728,50735]" dest="returns: returns [15435,15442]"/>
  <match src="==: == [9029,9031]" dest="==: == [9593,9595]"/>
  <match src="identifier: accounts [88010,88018]" dest="identifier: accounts [28770,28778]"/>
  <match src="visibility [89172,89178]" dest="visibility [29932,29938]"/>
  <match src="function_definition [21039,21381]" dest="function_definition [51777,51977]"/>
  <match src="identifier: reason [84862,84868]" dest="identifier: reason [69537,69543]"/>
  <match src="uint256: uint256 [42021,42028]" dest="uint256: uint256 [24125,24132]"/>
  <match src="identifier: univ2 [79094,79099]" dest="identifier: dollar [54048,54054]"/>
  <match src="view: view [88922,88926]" dest="view: view [29682,29686]"/>
  <match src="type_name [46922,46929]" dest="type_name [19620,19627]"/>
  <match src="string_literal [78037,78064]" dest="string_literal [53876,53901]"/>
  <match src="visibility [86959,86965]" dest="visibility [27719,27725]"/>
  <match src="call_argument [71120,71126]" dest="call_argument [58115,58121]"/>
  <match src="identifier: decrementAllowanceCoupons [96494,96519]" dest="identifier: decrementAllowanceCoupons [37254,37279]"/>
  <match src="): ) [93203,93204]" dest="): ) [33963,33964]"/>
  <match src="function: function [47013,47021]" dest="function: function [19711,19719]"/>
  <match src="expression_statement [78675,78746]" dest="expression_statement [57789,57831]"/>
  <match src="visibility [87260,87266]" dest="visibility [28020,28026]"/>
  <match src="}: } [89885,89886]" dest="}: } [30645,30646]"/>
  <match src="return_statement [86542,86552]" dest="return_statement [27302,27312]"/>
  <match src="identifier: s [50225,50226]" dest="identifier: s [14932,14933]"/>
  <match src=",: , [78988,78989]" dest=",: , [53535,53536]"/>
  <match src="uint256: uint256 [27491,27498]" dest="uint256: uint256 [40869,40876]"/>
  <match src="}: } [87756,87757]" dest="}: } [28516,28517]"/>
  <match src="type_name [83084,83097]" dest="type_name [22706,22719]"/>
  <match src="user_defined_type [8599,8603]" dest="user_defined_type [9163,9167]"/>
  <match src="return_type_definition [50838,50855]" dest="return_type_definition [15545,15562]"/>
  <match src="): ) [32648,32649]" dest="): ) [46026,46027]"/>
  <match src="type_name [42257,42264]" dest="type_name [24361,24368]"/>
  <match src="user_defined_type [8395,8399]" dest="user_defined_type [8959,8963]"/>
  <match src="expression_statement [76099,76180]" dest="expression_statement [64656,64740]"/>
  <match src="address: address [97997,98004]" dest="address: address [38757,38764]"/>
  <match src="]: ] [90346,90347]" dest="]: ] [31106,31107]"/>
  <match src="call_argument [48014,48020]" dest="call_argument [51131,51137]"/>
  <match src="bytes32: bytes32 [27873,27880]" dest="bytes32: bytes32 [41251,41258]"/>
  <match src="function: function [7229,7237]" dest="function: function [7793,7801]"/>
  <match src="state_mutability [86966,86970]" dest="state_mutability [27726,27730]"/>
  <match src="]: ] [90785,90786]" dest="]: ] [31545,31546]"/>
  <match src="member_expression [94462,94498]" dest="member_expression [35222,35258]"/>
  <match src="state_variable_declaration [41969,42016]" dest="state_variable_declaration [24073,24120]"/>
  <match src="uint256: uint256 [98828,98835]" dest="uint256: uint256 [39588,39595]"/>
  <match src="identifier: spender [46220,46227]" dest="identifier: spender [58106,58113]"/>
  <match src="return_type_definition [12020,12034]" dest="return_type_definition [16958,16972]"/>
  <match src="array_access [97698,97726]" dest="array_access [38458,38486]"/>
  <match src=",: , [76521,76522]" dest=",: , [73497,73498]"/>
  <match src="call_argument [28049,28073]" dest="call_argument [41427,41451]"/>
  <match src="primitive_type [77380,77387]" dest="primitive_type [56334,56341]"/>
  <match src="call_expression [88245,88258]" dest="call_expression [29005,29018]"/>
  <match src="return: return [35606,35612]" dest="return: return [48984,48990]"/>
  <match src="memory: memory [6545,6551]" dest="memory: memory [7109,7115]"/>
  <match src="identifier: b [2636,2637]" dest="identifier: b [3200,3201]"/>
  <match src="=: = [97949,97950]" dest="=: = [38709,38710]"/>
  <match src="identifier: i [36168,36169]" dest="identifier: i [49546,49547]"/>
  <match src="return: return [86458,86464]" dest="return: return [27218,27224]"/>
  <match src="bytes32: bytes32 [32059,32066]" dest="bytes32: bytes32 [45437,45444]"/>
  <match src="function_body [87602,87651]" dest="function_body [28362,28411]"/>
  <match src=".: . [77830,77831]" dest=".: . [65744,65745]"/>
  <match src="public: public [89172,89178]" dest="public: public [29932,29938]"/>
  <match src="type_name [11976,11983]" dest="type_name [16914,16921]"/>
  <match src="identifier: amount [93064,93070]" dest="identifier: amount [33824,33830]"/>
  <match src="visibility [98237,98245]" dest="visibility [38997,39005]"/>
  <match src="user_defined_type [82457,82461]" dest="user_defined_type [22079,22083]"/>
  <match src=".: . [95007,95008]" dest=".: . [35767,35768]"/>
  <match src="type_name [13708,13715]" dest="type_name [18646,18653]"/>
  <match src="call_argument [31912,31918]" dest="call_argument [45290,45296]"/>
  <match src="member_expression [98090,98126]" dest="member_expression [38850,38886]"/>
  <match src="call_argument [96169,96175]" dest="call_argument [36929,36935]"/>
  <match src="call_argument [6191,6195]" dest="call_argument [6755,6759]"/>
  <match src="identifier: result [36333,36339]" dest="identifier: result [49711,49717]"/>
  <match src="identifier: FOUR_BIT_MASK [36501,36514]" dest="identifier: FOUR_BIT_MASK [49879,49892]"/>
  <match src="(: ( [8738,8739]" dest="(: ( [9302,9303]"/>
  <match src="member_expression [95333,95358]" dest="member_expression [36093,36118]"/>
  <match src="address: address [50737,50744]" dest="address: address [15444,15451]"/>
  <match src="}: } [10193,10194]" dest="}: } [10757,10758]"/>
  <match src="uint256: uint256 [2558,2565]" dest="uint256: uint256 [3122,3129]"/>
  <match src="parameter [34704,34717]" dest="parameter [48082,48095]"/>
  <match src="identifier: Permission [101297,101307]" dest="identifier: Permission [70730,70740]"/>
  <match src="variable_declaration_statement [76621,76692]" dest="variable_declaration_statement [57296,57365]"/>
  <match src="emit_statement [78782,78834]" dest="emit_statement [72684,72731]"/>
  <match src="): ) [76203,76204]" dest="): ) [52090,52091]"/>
  <match src="): ) [96985,96986]" dest="): ) [37745,37746]"/>
  <match src="event_definition [50311,50394]" dest="event_definition [15018,15101]"/>
  <match src="type_name [41787,41794]" dest="type_name [23891,23898]"/>
  <match src=".: . [8122,8123]" dest=".: . [8686,8687]"/>
  <match src="for: for [36148,36151]" dest="for: for [49526,49529]"/>
  <match src=",: , [29531,29532]" dest=",: , [42909,42910]"/>
  <match src=".: . [95598,95599]" dest=".: . [36358,36359]"/>
  <match src="function_definition [27809,28227]" dest="function_definition [41187,41605]"/>
  <match src="parameter [94392,94406]" dest="parameter [35152,35166]"/>
  <match src="function: function [90379,90387]" dest="function: function [31139,31147]"/>
  <match src="function_definition [98364,98538]" dest="function_definition [39124,39298]"/>
  <match src="member_expression [76406,76416]" dest="member_expression [65543,65553]"/>
  <match src="string: string [31632,31638]" dest="string: string [45010,45016]"/>
  <match src="identifier: D256 [9480,9484]" dest="identifier: D256 [10044,10048]"/>
  <match src="external: external [93313,93321]" dest="external: external [34073,34081]"/>
  <match src="(: ( [31638,31639]" dest="(: ( [45016,45017]"/>
  <match src="-: - [1362,1363]" dest="-: - [1926,1927]"/>
  <match src="new: new [34161,34164]" dest="new: new [47539,47542]"/>
  <match src="{: { [21881,21882]" dest="{: { [57974,57975]"/>
  <match src="identifier: b [8547,8548]" dest="identifier: b [9111,9112]"/>
  <match src="struct_member [81959,81973]" dest="struct_member [21581,21595]"/>
  <match src="visibility [96809,96817]" dest="visibility [37569,37577]"/>
  <match src="binary_expression [35543,35560]" dest="binary_expression [48921,48938]"/>
  <match src="identifier: account [67996,68003]" dest="identifier: account [73550,73557]"/>
  <match src=".: . [89225,89226]" dest=".: . [29985,29986]"/>
  <match src="(: ( [90830,90831]" dest="(: ( [31590,31591]"/>
  <match src="returns: returns [58899,58906]" dest="returns: returns [20491,20498]"/>
  <match src="{: { [6989,6990]" dest="{: { [7553,7554]"/>
  <match src="}: } [4099,4100]" dest="}: } [4663,4664]"/>
  <match src="struct_member [81732,81748]" dest="struct_member [21354,21370]"/>
  <match src="primitive_type [28906,28913]" dest="primitive_type [42284,42291]"/>
  <match src="call_expression [19853,19924]" dest="call_expression [58392,58471]"/>
  <match src="call_argument [3376,3388]" dest="call_argument [3940,3952]"/>
  <match src="return: return [42474,42480]" dest="return: return [24578,24584]"/>
  <match src="&quot;: &quot; [75272,75273]" dest="&quot;: &quot; [63744,63745]"/>
  <match src="{: { [49144,49145]" dest="{: { [13851,13852]"/>
  <match src="=: = [68607,68608]" dest="=: = [60347,60348]"/>
  <match src="parameter [13465,13482]" dest="parameter [18403,18420]"/>
  <match src="]: ] [98283,98284]" dest="]: ] [39043,39044]"/>
  <match src="address: address [19791,19798]" dest="address: address [58322,58329]"/>
  <match src="parameter [84626,84651]" dest="parameter [69301,69326]"/>
  <match src="uint256: uint256 [1348,1355]" dest="uint256: uint256 [1912,1919]"/>
  <match src="member_expression [87204,87224]" dest="member_expression [27964,27984]"/>
</matches>
<actions>
  <move-tree tree="comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [10196,10695]" parent="source_file [0,75389]" at="2"/>
  <move-tree tree="comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [14006,14569]" parent="source_file [0,75389]" at="7"/>
  <move-tree tree="interface_declaration [49119,51516]" parent="source_file [0,75389]" at="8"/>
  <move-tree tree="contract_declaration [46875,47084]" parent="source_file [0,75389]" at="27"/>
  <move-tree tree="contract_declaration [58821,58990]" parent="source_file [0,75389]" at="30"/>
  <move-tree tree="contract_declaration [81591,81912]" parent="source_file [0,75389]" at="33"/>
  <move-tree tree="contract_declaration [81914,82218]" parent="source_file [0,75389]" at="34"/>
  <move-tree tree="contract_declaration [82220,82503]" parent="source_file [0,75389]" at="35"/>
  <move-tree tree="contract_declaration [82505,83061]" parent="source_file [0,75389]" at="36"/>
  <move-tree tree="contract_declaration [83063,83107]" parent="source_file [0,75389]" at="37"/>
  <move-tree tree="library_declaration [41256,44052]" parent="source_file [0,75389]" at="38"/>
  <move-tree tree="contract_declaration [86027,92274]" parent="source_file [0,75389]" at="50"/>
  <move-tree tree="contract_declaration [92905,99194]" parent="source_file [0,75389]" at="52"/>
  <move-tree tree="comment: /**  * @dev Implementation of the {IERC20} interface.  *  * This implementation is agnostic to the way tokens are created. This means  * that a supply mechanism has to be added in a derived contract using {_mint}.  * For a generic mechanism see {ERC20Mintable}.  *  * TIP: For a detailed writeup see our guide  * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How  * to implement supply mechanisms].  *  * We have followed general OpenZeppelin guidelines: functions revert instead  * of returning `false` on failure. This behavior is nonetheless conventional  * and does not conflict with the expectations of ERC20 applications.  *  * Additionally, an {Approval} event is emitted on calls to {transferFrom}.  * This allows applications to reconstruct the allowance for all accounts just  * by listening to said events. Other implementations of the EIP may not emit  * these events, as it isn't required by the specification.  *  * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}  * functions have been added to mitigate the well-known issues around setting  * allowances. See {IERC20-approve}.  */ [14571,15723]" parent="source_file [0,75389]" at="52"/>
  <move-tree tree="comment: /**  * @dev Extension of {ERC20} that allows token holders to destroy both their own  * tokens and those that they have an allowance for, in a way that can be  * recognized off-chain (via event analysis).  */ [22549,22757]" parent="source_file [0,75389]" at="52"/>
  <move-tree tree="library_declaration [27320,36901]" parent="source_file [0,75389]" at="52"/>
  <move-tree tree="contract_declaration [15724,22547]" parent="source_file [0,75389]" at="56"/>
  <move-tree tree="contract_declaration [60345,64328]" parent="source_file [0,75389]" at="58"/>
  <move-tree tree="contract_declaration [99825,100637]" parent="source_file [0,75389]" at="63"/>
  <update-node tree="comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [10196,10695]" label="/**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */"/>
  <update-node tree="comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [14006,14569]" label="/*     Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */"/>
  <insert-node tree="contract_declaration [11389,13824]" parent="source_file [0,75389]" at="8"/>
  <update-node tree="comment: /**  * @dev Implementation of the {IERC20} interface.  *  * This implementation is agnostic to the way tokens are created. This means  * that a supply mechanism has to be added in a derived contract using {_mint}.  * For a generic mechanism see {ERC20Mintable}.  *  * TIP: For a detailed writeup see our guide  * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How  * to implement supply mechanisms].  *  * We have followed general OpenZeppelin guidelines: functions revert instead  * of returning `false` on failure. This behavior is nonetheless conventional  * and does not conflict with the expectations of ERC20 applications.  *  * Additionally, an {Approval} event is emitted on calls to {transferFrom}.  * This allows applications to reconstruct the allowance for all accounts just  * by listening to said events. Other implementations of the EIP may not emit  * these events, as it isn't required by the specification.  *  * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}  * functions have been added to mitigate the well-known issues around setting  * allowances. See {IERC20-approve}.  */ [14571,15723]" label="/*     Copyright 2019 dYdX Trading Inc.      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */"/>
  <update-node tree="comment: /**  * @dev Extension of {ERC20} that allows token holders to destroy both their own  * tokens and those that they have an allowance for, in a way that can be  * recognized off-chain (via event analysis).  */ [22549,22757]" label="/**  * @title Require  * @author dYdX  *  * Stringifies parameters to pretty-print revert messages. Costs more gas than regular require()  */"/>
  <insert-node tree="contract_declaration [50910,54364]" parent="source_file [0,75389]" at="32"/>
  <insert-node tree="contract_declaration [70702,73816]" parent="source_file [0,75389]" at="47"/>
  <insert-node tree="contract_declaration [74447,75389]" parent="source_file [0,75389]" at="49"/>
  <insert-node tree="contract: contract [11389,11397]" parent="contract_declaration [11389,13824]" at="0"/>
  <insert-node tree="identifier: Curve [11398,11403]" parent="contract_declaration [11389,13824]" at="1"/>
  <insert-node tree="contract_body [11404,13824]" parent="contract_declaration [11389,13824]" at="2"/>
  <insert-node tree="contract: contract [50910,50918]" parent="contract_declaration [50910,54364]" at="0"/>
  <insert-node tree="identifier: Comptroller [50919,50930]" parent="contract_declaration [50910,54364]" at="1"/>
  <insert-node tree="is: is [50931,50933]" parent="contract_declaration [50910,54364]" at="2"/>
  <insert-tree tree="inheritance_specifier [50934,50941]" parent="contract_declaration [50910,54364]" at="3"/>
  <insert-node tree="contract_body [50942,54364]" parent="contract_declaration [50910,54364]" at="4"/>
  <update-node tree="identifier: ERC20 [15733,15738]" label="Market"/>
  <move-tree tree="function_definition [19684,20148]" parent="contract_body [55033,58912]" at="28"/>
  <update-node tree="identifier: Oracle [60354,60360]" label="Regulator"/>
  <move-tree tree="function_definition [61585,61827]" parent="contract_body [59577,61551]" at="18"/>
  <update-node tree="identifier: Pool [74957,74961]" label="Bonding"/>
  <move-tree tree="inheritance_specifier [101555,101565]" parent="contract_declaration [63625,66263]" at="5"/>
  <move-tree tree="event_definition [75456,75522]" parent="contract_body [63665,66263]" at="8"/>
  <insert-node tree="contract: contract [70702,70710]" parent="contract_declaration [70702,73816]" at="0"/>
  <insert-node tree="identifier: Govern [70711,70717]" parent="contract_declaration [70702,73816]" at="1"/>
  <insert-node tree="is: is [70718,70720]" parent="contract_declaration [70702,73816]" at="2"/>
  <insert-tree tree="inheritance_specifier [70721,70728]" parent="contract_declaration [70702,73816]" at="3"/>
  <insert-node tree=",: , [70728,70729]" parent="contract_declaration [70702,73816]" at="4"/>
  <move-tree tree="inheritance_specifier [101297,101307]" parent="contract_declaration [70702,73816]" at="5"/>
  <insert-node tree=",: , [70740,70741]" parent="contract_declaration [70702,73816]" at="6"/>
  <move-tree tree="inheritance_specifier [101309,101320]" parent="contract_declaration [70702,73816]" at="7"/>
  <insert-node tree="contract_body [70754,73816]" parent="contract_declaration [70702,73816]" at="8"/>
  <insert-node tree="contract: contract [74447,74455]" parent="contract_declaration [74447,75389]" at="0"/>
  <insert-node tree="identifier: Implementation [74456,74470]" parent="contract_declaration [74447,75389]" at="1"/>
  <insert-node tree="is: is [74471,74473]" parent="contract_declaration [74447,75389]" at="2"/>
  <move-tree tree="inheritance_specifier [101290,101295]" parent="contract_declaration [74447,75389]" at="3"/>
  <insert-node tree=",: , [74479,74480]" parent="contract_declaration [74447,75389]" at="4"/>
  <insert-tree tree="inheritance_specifier [74481,74488]" parent="contract_declaration [74447,75389]" at="5"/>
  <insert-node tree=",: , [74488,74489]" parent="contract_declaration [74447,75389]" at="6"/>
  <insert-tree tree="inheritance_specifier [74490,74496]" parent="contract_declaration [74447,75389]" at="7"/>
  <insert-node tree=",: , [74496,74497]" parent="contract_declaration [74447,75389]" at="8"/>
  <insert-tree tree="inheritance_specifier [74498,74507]" parent="contract_declaration [74447,75389]" at="9"/>
  <insert-node tree=",: , [74507,74508]" parent="contract_declaration [74447,75389]" at="10"/>
  <insert-tree tree="inheritance_specifier [74509,74515]" parent="contract_declaration [74447,75389]" at="11"/>
  <insert-node tree="contract_body [74516,75389]" parent="contract_declaration [74447,75389]" at="12"/>
  <insert-node tree="{: { [11404,11405]" parent="contract_body [11404,13824]" at="0"/>
  <insert-tree tree="using_directive [11410,11437]" parent="contract_body [11404,13824]" at="1"/>
  <insert-tree tree="using_directive [11442,11473]" parent="contract_body [11404,13824]" at="2"/>
  <insert-node tree="function_definition [11479,11725]" parent="contract_body [11404,13824]" at="3"/>
  <insert-node tree="function_definition [11731,13002]" parent="contract_body [11404,13824]" at="4"/>
  <insert-node tree="comment: // 1/(3(1-R)^2)-1/3 [13008,13027]" parent="contract_body [11404,13824]" at="5"/>
  <insert-node tree="function_definition [13032,13269]" parent="contract_body [11404,13824]" at="6"/>
  <insert-node tree="comment: // 1/(3(1-R)(1-R'))-1/3 [13275,13298]" parent="contract_body [11404,13824]" at="7"/>
  <insert-node tree="function_definition [13303,13685]" parent="contract_body [11404,13824]" at="8"/>
  <insert-node tree="comment: // 30% [13691,13697]" parent="contract_body [11404,13824]" at="9"/>
  <insert-node tree="function_definition [13702,13822]" parent="contract_body [11404,13824]" at="10"/>
  <insert-node tree="}: } [13823,13824]" parent="contract_body [11404,13824]" at="11"/>
  <insert-node tree="{: { [50942,50943]" parent="contract_body [50942,54364]" at="0"/>
  <insert-tree tree="using_directive [50948,50975]" parent="contract_body [50942,54364]" at="1"/>
  <insert-tree tree="state_variable_declaration [50981,51027]" parent="contract_body [50942,54364]" at="2"/>
  <move-tree tree="function_definition [47909,48049]" parent="contract_body [50942,54364]" at="3"/>
  <insert-node tree="function_definition [51261,51534]" parent="contract_body [50942,54364]" at="4"/>
  <move-tree tree="function_definition [23046,23147]" parent="contract_body [50942,54364]" at="5"/>
  <move-tree tree="function_definition [21039,21381]" parent="contract_body [50942,54364]" at="6"/>
  <insert-node tree="function_definition [51983,52098]" parent="contract_body [50942,54364]" at="7"/>
  <insert-node tree="function_definition [52104,52251]" parent="contract_body [50942,54364]" at="8"/>
  <insert-node tree="function_definition [52257,53369]" parent="contract_body [50942,54364]" at="9"/>
  <move-tree tree="function_definition [78846,79241]" parent="contract_body [50942,54364]" at="10"/>
  <insert-node tree="function_definition [53745,54186]" parent="contract_body [50942,54364]" at="11"/>
  <insert-node tree="function_definition [54192,54362]" parent="contract_body [50942,54364]" at="12"/>
  <insert-node tree="}: } [54363,54364]" parent="contract_body [50942,54364]" at="13"/>
  <move-tree tree="state_variable_declaration [60415,60456]" parent="contract_body [55033,58912]" at="2"/>
  <insert-node tree="event_definition [55119,55250]" parent="contract_body [55033,58912]" at="3"/>
  <insert-node tree="event_definition [55255,55368]" parent="contract_body [55033,58912]" at="4"/>
  <move-tree tree="event_definition [25687,25730]" parent="contract_body [55033,58912]" at="5"/>
  <move-tree tree="event_definition [48517,48603]" parent="contract_body [55033,58912]" at="6"/>
  <move-tree tree=",: , [48595,48596]" parent="event_definition [55471,55572]" at="9"/>
  <insert-node tree="event_definition [55577,55661]" parent="contract_body [55033,58912]" at="7"/>
  <insert-node tree="function_definition [55667,56074]" parent="contract_body [55033,58912]" at="8"/>
  <insert-node tree="function_definition [56080,56758]" parent="contract_body [55033,58912]" at="9"/>
  <move-tree tree="function_definition [64094,64177]" parent="contract_body [55033,58912]" at="10"/>
  <insert-node tree="function_definition [56930,57597]" parent="contract_body [55033,58912]" at="11"/>
  <insert-node tree="function_definition [57603,57902]" parent="contract_body [55033,58912]" at="12"/>
  <move-tree tree=",: , [21837,21838]" parent="function_definition [57908,58188]" at="5"/>
  <insert-tree tree="using_directive [59583,59610]" parent="contract_body [59577,61551]" at="1"/>
  <insert-node tree="event_definition [59652,59771]" parent="contract_body [59577,61551]" at="3"/>
  <insert-node tree="event_definition [59776,59852]" parent="contract_body [59577,61551]" at="4"/>
  <insert-node tree="event_definition [59857,59900]" parent="contract_body [59577,61551]" at="5"/>
  <insert-node tree="function_definition [59906,60248]" parent="contract_body [59577,61551]" at="6"/>
  <move-tree tree="function_definition [68503,68996]" parent="contract_body [59577,61551]" at="7"/>
  <insert-node tree="function_definition [60947,61202]" parent="contract_body [59577,61551]" at="9"/>
  <insert-node tree="function_definition [64066,64276]" parent="contract_body [63665,66263]" at="7"/>
  <insert-node tree="function_definition [65796,66261]" parent="contract_body [63665,66263]" at="12"/>
  <insert-node tree="{: { [70754,70755]" parent="contract_body [70754,73816]" at="0"/>
  <move-tree tree="using_directive [67015,67042]" parent="contract_body [70754,73816]" at="1"/>
  <insert-tree tree="using_directive [70792,70823]" parent="contract_body [70754,73816]" at="2"/>
  <insert-tree tree="state_variable_declaration [70829,70870]" parent="contract_body [70754,73816]" at="3"/>
  <insert-node tree="event_definition [70876,70982]" parent="contract_body [70754,73816]" at="4"/>
  <insert-node tree="event_definition [70987,71087]" parent="contract_body [70754,73816]" at="5"/>
  <move-tree tree="event_definition [75622,75712]" parent="contract_body [70754,73816]" at="6"/>
  <insert-node tree="function_definition [71163,72737]" parent="contract_body [70754,73816]" at="7"/>
  <insert-node tree="function_definition [72743,73516]" parent="contract_body [70754,73816]" at="8"/>
  <insert-node tree="function_definition [73522,73814]" parent="contract_body [70754,73816]" at="9"/>
  <insert-node tree="}: } [73815,73816]" parent="contract_body [70754,73816]" at="10"/>
  <insert-node tree="{: { [74516,74517]" parent="contract_body [74516,75389]" at="0"/>
  <move-tree tree="using_directive [70035,70062]" parent="contract_body [74516,75389]" at="1"/>
  <insert-node tree="event_definition [74555,74626]" parent="contract_body [74516,75389]" at="2"/>
  <move-tree tree="event_definition [75399,75451]" parent="contract_body [74516,75389]" at="3"/>
  <insert-node tree="function_definition [74700,74990]" parent="contract_body [74516,75389]" at="4"/>
  <insert-node tree="function_definition [74996,75180]" parent="contract_body [74516,75389]" at="5"/>
  <insert-node tree="modifier_definition [75186,75387]" parent="contract_body [74516,75389]" at="6"/>
  <insert-node tree="}: } [75388,75389]" parent="contract_body [74516,75389]" at="7"/>
  <insert-node tree="function: function [11479,11487]" parent="function_definition [11479,11725]" at="0"/>
  <insert-node tree="identifier: calculateCouponPremium [11488,11510]" parent="function_definition [11479,11725]" at="1"/>
  <insert-node tree="(: ( [11510,11511]" parent="function_definition [11479,11725]" at="2"/>
  <insert-node tree="parameter [11520,11539]" parent="function_definition [11479,11725]" at="3"/>
  <insert-node tree=",: , [11539,11540]" parent="function_definition [11479,11725]" at="4"/>
  <insert-node tree="parameter [11549,11566]" parent="function_definition [11479,11725]" at="5"/>
  <insert-node tree=",: , [11566,11567]" parent="function_definition [11479,11725]" at="6"/>
  <move-tree tree="parameter [22922,22936]" parent="function_definition [11479,11725]" at="7"/>
  <insert-node tree="): ) [11595,11596]" parent="function_definition [11479,11725]" at="8"/>
  <move-tree tree="visibility [22368,22376]" parent="function_definition [11479,11725]" at="9"/>
  <move-tree tree="state_mutability [51712,51716]" parent="function_definition [11479,11725]" at="10"/>
  <move-tree tree="return_type_definition [16050,16067]" parent="function_definition [11479,11725]" at="11"/>
  <insert-node tree="function_body [11629,11725]" parent="function_definition [11479,11725]" at="12"/>
  <insert-node tree="function: function [11731,11739]" parent="function_definition [11731,13002]" at="0"/>
  <insert-node tree="identifier: effectivePremium [11740,11756]" parent="function_definition [11731,13002]" at="1"/>
  <insert-node tree="(: ( [11756,11757]" parent="function_definition [11731,13002]" at="2"/>
  <move-tree tree="parameter [18996,19019]" parent="function_definition [11731,13002]" at="3"/>
  <insert-node tree=",: , [11785,11786]" parent="function_definition [11731,13002]" at="4"/>
  <move-tree tree="parameter [18302,18320]" parent="function_definition [11731,13002]" at="5"/>
  <insert-node tree=",: , [11812,11813]" parent="function_definition [11731,13002]" at="6"/>
  <move-tree tree="parameter [23081,23095]" parent="function_definition [11731,13002]" at="7"/>
  <insert-node tree="): ) [11841,11842]" parent="function_definition [11731,13002]" at="8"/>
  <move-tree tree="visibility [15826,15833]" parent="function_definition [11731,13002]" at="9"/>
  <move-tree tree="state_mutability [52750,52754]" parent="function_definition [11731,13002]" at="10"/>
  <insert-tree tree="return_type_definition [11856,11885]" parent="function_definition [11731,13002]" at="11"/>
  <insert-node tree="function_body [11886,13002]" parent="function_definition [11731,13002]" at="12"/>
  <insert-node tree="function: function [13032,13040]" parent="function_definition [13032,13269]" at="0"/>
  <insert-node tree="identifier: curve [13041,13046]" parent="function_definition [13032,13269]" at="1"/>
  <insert-node tree="(: ( [13046,13047]" parent="function_definition [13032,13269]" at="2"/>
  <move-tree tree="parameter [61628,61647]" parent="function_definition [13032,13269]" at="3"/>
  <insert-node tree="): ) [13076,13077]" parent="function_definition [13032,13269]" at="4"/>
  <move-tree tree="visibility [15934,15941]" parent="function_definition [13032,13269]" at="5"/>
  <move-tree tree="state_mutability [52574,52578]" parent="function_definition [13032,13269]" at="6"/>
  <insert-tree tree="return_type_definition [13091,13120]" parent="function_definition [13032,13269]" at="7"/>
  <insert-tree tree="function_body [13121,13269]" parent="function_definition [13032,13269]" at="8"/>
  <insert-node tree="function: function [13303,13311]" parent="function_definition [13303,13685]" at="0"/>
  <insert-node tree="identifier: curveMean [13312,13321]" parent="function_definition [13303,13685]" at="1"/>
  <insert-node tree="(: ( [13321,13322]" parent="function_definition [13303,13685]" at="2"/>
  <move-tree tree="parameter [62471,62490]" parent="function_definition [13303,13685]" at="3"/>
  <insert-node tree=",: , [13356,13357]" parent="function_definition [13303,13685]" at="4"/>
  <insert-tree tree="parameter [13366,13391]" parent="function_definition [13303,13685]" at="5"/>
  <insert-node tree="): ) [13396,13397]" parent="function_definition [13303,13685]" at="6"/>
  <move-tree tree="visibility [62454,62461]" parent="function_definition [13303,13685]" at="7"/>
  <move-tree tree="state_mutability [38345,38349]" parent="function_definition [13303,13685]" at="8"/>
  <insert-tree tree="return_type_definition [13411,13440]" parent="function_definition [13303,13685]" at="9"/>
  <insert-node tree="function_body [13441,13685]" parent="function_definition [13303,13685]" at="10"/>
  <insert-node tree="function: function [13702,13710]" parent="function_definition [13702,13822]" at="0"/>
  <insert-node tree="identifier: debtRatioUpperBound [13711,13730]" parent="function_definition [13702,13822]" at="1"/>
  <insert-node tree="(: ( [13730,13731]" parent="function_definition [13702,13822]" at="2"/>
  <insert-node tree="): ) [13731,13732]" parent="function_definition [13702,13822]" at="3"/>
  <move-tree tree="visibility [15900,15907]" parent="function_definition [13702,13822]" at="4"/>
  <move-tree tree="state_mutability [39843,39847]" parent="function_definition [13702,13822]" at="5"/>
  <insert-tree tree="return_type_definition [13746,13775]" parent="function_definition [13702,13822]" at="6"/>
  <insert-tree tree="function_body [13776,13822]" parent="function_definition [13702,13822]" at="7"/>
  <update-node tree="identifier: mint [47918,47922]" label="mintToAccount"/>
  <move-tree tree="visibility [26359,26367]" parent="function_definition [51033,51255]" at="7"/>
  <insert-node tree="function: function [51261,51269]" parent="function_definition [51261,51534]" at="0"/>
  <insert-node tree="identifier: burnFromAccount [51270,51285]" parent="function_definition [51261,51534]" at="1"/>
  <insert-node tree="(: ( [51285,51286]" parent="function_definition [51261,51534]" at="2"/>
  <move-tree tree="parameter [26162,26177]" parent="function_definition [51261,51534]" at="3"/>
  <insert-node tree=",: , [51301,51302]" parent="function_definition [51261,51534]" at="4"/>
  <move-tree tree="parameter [48112,48126]" parent="function_definition [51261,51534]" at="5"/>
  <insert-node tree="): ) [51317,51318]" parent="function_definition [51261,51534]" at="6"/>
  <move-tree tree="visibility [70167,70175]" parent="function_definition [51261,51534]" at="7"/>
  <move-tree tree="function_body [45161,45293]" parent="function_definition [51261,51534]" at="8"/>
  <update-node tree="identifier: burnFrom [23055,23063]" label="redeemToAccount"/>
  <move-tree tree="parameter [26048,26063]" parent="function_definition [51540,51771]" at="3"/>
  <move-tree tree="parameter [70675,70689]" parent="function_definition [51540,51771]" at="6"/>
  <move-tree tree="visibility [70691,70699]" parent="function_definition [51540,51771]" at="8"/>
  <update-node tree="identifier: _burn [21048,21053]" label="burnRedeemable"/>
  <move-tree tree="expression_statement [21184,21274]" parent="function_body [51826,51977]" at="3"/>
  <insert-node tree="function: function [51983,51991]" parent="function_definition [51983,52098]" at="0"/>
  <insert-node tree="identifier: increaseDebt [51992,52004]" parent="function_definition [51983,52098]" at="1"/>
  <insert-node tree="(: ( [52004,52005]" parent="function_definition [51983,52098]" at="2"/>
  <move-tree tree="parameter [71202,71216]" parent="function_definition [51983,52098]" at="3"/>
  <insert-node tree="): ) [52019,52020]" parent="function_definition [51983,52098]" at="4"/>
  <move-tree tree="visibility [71218,71226]" parent="function_definition [51983,52098]" at="5"/>
  <insert-node tree="function_body [52030,52098]" parent="function_definition [51983,52098]" at="6"/>
  <insert-node tree="function: function [52104,52112]" parent="function_definition [52104,52251]" at="0"/>
  <insert-node tree="identifier: decreaseDebt [52113,52125]" parent="function_definition [52104,52251]" at="1"/>
  <insert-node tree="(: ( [52125,52126]" parent="function_definition [52104,52251]" at="2"/>
  <move-tree tree="parameter [17620,17634]" parent="function_definition [52104,52251]" at="3"/>
  <insert-node tree="): ) [52140,52141]" parent="function_definition [52104,52251]" at="4"/>
  <move-tree tree="visibility [19754,19762]" parent="function_definition [52104,52251]" at="5"/>
  <insert-node tree="function_body [52151,52251]" parent="function_definition [52104,52251]" at="6"/>
  <insert-node tree="function: function [52257,52265]" parent="function_definition [52257,53369]" at="0"/>
  <insert-node tree="identifier: increaseSupply [52266,52280]" parent="function_definition [52257,53369]" at="1"/>
  <insert-node tree="(: ( [52280,52281]" parent="function_definition [52257,53369]" at="2"/>
  <move-tree tree="parameter [45395,45411]" parent="function_definition [52257,53369]" at="3"/>
  <insert-node tree="): ) [52298,52299]" parent="function_definition [52257,53369]" at="4"/>
  <move-tree tree="visibility [73167,73175]" parent="function_definition [52257,53369]" at="5"/>
  <move-tree tree="return_type_definition [73176,73202]" parent="function_definition [52257,53369]" at="6"/>
  <insert-tree tree="function_body [52345,53369]" parent="function_definition [52257,53369]" at="7"/>
  <insert-node tree="function: function [53745,53753]" parent="function_definition [53745,54186]" at="0"/>
  <insert-node tree="identifier: mintToBonded [53754,53766]" parent="function_definition [53745,54186]" at="1"/>
  <insert-node tree="(: ( [53766,53767]" parent="function_definition [53745,54186]" at="2"/>
  <move-tree tree="parameter [16510,16524]" parent="function_definition [53745,54186]" at="3"/>
  <insert-node tree="): ) [53781,53782]" parent="function_definition [53745,54186]" at="4"/>
  <move-tree tree="visibility [25797,25804]" parent="function_definition [53745,54186]" at="5"/>
  <insert-node tree="function_body [53791,54186]" parent="function_definition [53745,54186]" at="6"/>
  <insert-node tree="function: function [54192,54200]" parent="function_definition [54192,54362]" at="0"/>
  <insert-node tree="identifier: mintToRedeemable [54201,54217]" parent="function_definition [54192,54362]" at="1"/>
  <insert-node tree="(: ( [54217,54218]" parent="function_definition [54192,54362]" at="2"/>
  <move-tree tree="parameter [16990,17004]" parent="function_definition [54192,54362]" at="3"/>
  <insert-node tree="): ) [54232,54233]" parent="function_definition [54192,54362]" at="4"/>
  <move-tree tree="visibility [23310,23317]" parent="function_definition [54192,54362]" at="5"/>
  <insert-node tree="function_body [54242,54362]" parent="function_definition [54192,54362]" at="6"/>
  <update-node tree="identifier: Context [15742,15749]" label="Comptroller"/>
  <update-node tree="identifier: IERC20 [15751,15757]" label="Curve"/>
  <insert-node tree="event: event [55119,55124]" parent="event_definition [55119,55250]" at="0"/>
  <insert-node tree="identifier: CouponExpiration [55125,55141]" parent="event_definition [55119,55250]" at="1"/>
  <insert-node tree="(: ( [55141,55142]" parent="event_definition [55119,55250]" at="2"/>
  <insert-node tree="event_paramater [55142,55163]" parent="event_definition [55119,55250]" at="3"/>
  <insert-node tree=",: , [55163,55164]" parent="event_definition [55119,55250]" at="4"/>
  <insert-tree tree="event_paramater [55165,55187]" parent="event_definition [55119,55250]" at="5"/>
  <insert-node tree=",: , [55187,55188]" parent="event_definition [55119,55250]" at="6"/>
  <insert-tree tree="event_paramater [55189,55211]" parent="event_definition [55119,55250]" at="7"/>
  <insert-node tree=",: , [55211,55212]" parent="event_definition [55119,55250]" at="8"/>
  <insert-tree tree="event_paramater [55213,55229]" parent="event_definition [55119,55250]" at="9"/>
  <insert-node tree=",: , [55229,55230]" parent="event_definition [55119,55250]" at="10"/>
  <insert-tree tree="event_paramater [55231,55248]" parent="event_definition [55119,55250]" at="11"/>
  <insert-node tree="): ) [55248,55249]" parent="event_definition [55119,55250]" at="12"/>
  <insert-node tree="event: event [55255,55260]" parent="event_definition [55255,55368]" at="0"/>
  <insert-node tree="identifier: CouponPurchase [55261,55275]" parent="event_definition [55255,55368]" at="1"/>
  <insert-node tree="(: ( [55275,55276]" parent="event_definition [55255,55368]" at="2"/>
  <move-tree tree="event_paramater [25755,25778]" parent="event_definition [55255,55368]" at="3"/>
  <insert-node tree=",: , [55299,55300]" parent="event_definition [55255,55368]" at="4"/>
  <insert-tree tree="event_paramater [55301,55322]" parent="event_definition [55255,55368]" at="5"/>
  <insert-node tree=",: , [55322,55323]" parent="event_definition [55255,55368]" at="6"/>
  <insert-tree tree="event_paramater [55324,55344]" parent="event_definition [55255,55368]" at="7"/>
  <insert-node tree=",: , [55344,55345]" parent="event_definition [55255,55368]" at="8"/>
  <insert-tree tree="event_paramater [55346,55366]" parent="event_definition [55255,55368]" at="9"/>
  <insert-node tree="): ) [55366,55367]" parent="event_definition [55255,55368]" at="10"/>
  <update-node tree="identifier: MinterAdded [25693,25704]" label="CouponRedemption"/>
  <insert-node tree=",: , [55419,55420]" parent="event_definition [55373,55466]" at="4"/>
  <insert-tree tree="event_paramater [55421,55442]" parent="event_definition [55373,55466]" at="5"/>
  <insert-node tree=",: , [55442,55443]" parent="event_definition [55373,55466]" at="6"/>
  <insert-tree tree="event_paramater [55444,55464]" parent="event_definition [55373,55466]" at="7"/>
  <update-node tree="identifier: PairCreated [48523,48534]" label="CouponTransfer"/>
  <move-tree tree="event_paramater [75661,75674]" parent="event_definition [55471,55572]" at="10"/>
  <insert-node tree="event: event [55577,55582]" parent="event_definition [55577,55661]" at="0"/>
  <insert-node tree="identifier: CouponApproval [55583,55597]" parent="event_definition [55577,55661]" at="1"/>
  <insert-node tree="(: ( [55597,55598]" parent="event_definition [55577,55661]" at="2"/>
  <insert-node tree="event_paramater [55598,55619]" parent="event_definition [55577,55661]" at="3"/>
  <insert-node tree=",: , [55619,55620]" parent="event_definition [55577,55661]" at="4"/>
  <move-tree tree="event_paramater [48583,48595]" parent="event_definition [55577,55661]" at="5"/>
  <insert-node tree=",: , [55644,55645]" parent="event_definition [55577,55661]" at="6"/>
  <move-tree tree="event_paramater [75436,75449]" parent="event_definition [55577,55661]" at="7"/>
  <insert-node tree="): ) [55659,55660]" parent="event_definition [55577,55661]" at="8"/>
  <insert-node tree="function: function [55667,55675]" parent="function_definition [55667,56074]" at="0"/>
  <insert-node tree="identifier: step [55676,55680]" parent="function_definition [55667,56074]" at="1"/>
  <insert-node tree="(: ( [55680,55681]" parent="function_definition [55667,56074]" at="2"/>
  <insert-node tree="): ) [55681,55682]" parent="function_definition [55667,56074]" at="3"/>
  <move-tree tree="visibility [72271,72279]" parent="function_definition [55667,56074]" at="4"/>
  <insert-node tree="function_body [55692,56074]" parent="function_definition [55667,56074]" at="5"/>
  <insert-node tree="function: function [56080,56088]" parent="function_definition [56080,56758]" at="0"/>
  <insert-node tree="identifier: expireCouponsForEpoch [56089,56110]" parent="function_definition [56080,56758]" at="1"/>
  <insert-node tree="(: ( [56110,56111]" parent="function_definition [56080,56758]" at="2"/>
  <insert-tree tree="parameter [56111,56124]" parent="function_definition [56080,56758]" at="3"/>
  <insert-node tree="): ) [56124,56125]" parent="function_definition [56080,56758]" at="4"/>
  <move-tree tree="visibility [45010,45017]" parent="function_definition [56080,56758]" at="5"/>
  <insert-node tree="function_body [56134,56758]" parent="function_definition [56080,56758]" at="6"/>
  <update-node tree="identifier: reserve [64103,64110]" label="couponPremium"/>
  <move-tree tree="parameter [72002,72016]" parent="function_definition [56764,56924]" at="3"/>
  <move-tree tree="visibility [48128,48134]" parent="function_definition [56764,56924]" at="5"/>
  <insert-node tree="function: function [56930,56938]" parent="function_definition [56930,57597]" at="0"/>
  <insert-node tree="identifier: purchaseCoupons [56939,56954]" parent="function_definition [56930,57597]" at="1"/>
  <insert-node tree="(: ( [56954,56955]" parent="function_definition [56930,57597]" at="2"/>
  <move-tree tree="parameter [73145,73165]" parent="function_definition [56930,57597]" at="3"/>
  <insert-node tree="): ) [56975,56976]" parent="function_definition [56930,57597]" at="4"/>
  <move-tree tree="visibility [59683,59691]" parent="function_definition [56930,57597]" at="5"/>
  <move-tree tree="return_type_definition [63657,63674]" parent="function_definition [56930,57597]" at="6"/>
  <insert-node tree="function_body [57004,57597]" parent="function_definition [56930,57597]" at="7"/>
  <insert-node tree="function: function [57603,57611]" parent="function_definition [57603,57902]" at="0"/>
  <insert-node tree="identifier: redeemCoupons [57612,57625]" parent="function_definition [57603,57902]" at="1"/>
  <insert-node tree="(: ( [57625,57626]" parent="function_definition [57603,57902]" at="2"/>
  <insert-tree tree="parameter [57626,57639]" parent="function_definition [57603,57902]" at="3"/>
  <insert-node tree=",: , [57639,57640]" parent="function_definition [57603,57902]" at="4"/>
  <insert-tree tree="parameter [57641,57661]" parent="function_definition [57603,57902]" at="5"/>
  <insert-node tree="): ) [57661,57662]" parent="function_definition [57603,57902]" at="6"/>
  <move-tree tree="visibility [101471,101479]" parent="function_definition [57603,57902]" at="7"/>
  <insert-node tree="function_body [57672,57902]" parent="function_definition [57603,57902]" at="8"/>
  <update-node tree="identifier: _approve [21815,21823]" label="approveCoupons"/>
  <move-tree tree="visibility [64113,64121]" parent="function_definition [57908,58188]" at="9"/>
  <update-node tree="identifier: _transfer [19693,19702]" label="transferCoupons"/>
  <move-tree tree="parameter [38271,38286]" parent="function_definition [58194,58910]" at="7"/>
  <insert-node tree=",: , [58267,58268]" parent="function_definition [58194,58910]" at="8"/>
  <move-tree tree="visibility [45473,45481]" parent="function_definition [58194,58910]" at="11"/>
  <update-node tree="identifier: IOracle [60364,60371]" label="Comptroller"/>
  <insert-node tree="event: event [59652,59657]" parent="event_definition [59652,59771]" at="0"/>
  <insert-node tree="identifier: SupplyIncrease [59658,59672]" parent="event_definition [59652,59771]" at="1"/>
  <insert-node tree="(: ( [59672,59673]" parent="event_definition [59652,59771]" at="2"/>
  <insert-node tree="event_paramater [59673,59694]" parent="event_definition [59652,59771]" at="3"/>
  <insert-node tree=",: , [59694,59695]" parent="event_definition [59652,59771]" at="4"/>
  <insert-node tree="event_paramater [59696,59709]" parent="event_definition [59652,59771]" at="5"/>
  <insert-node tree=",: , [59709,59710]" parent="event_definition [59652,59771]" at="6"/>
  <insert-node tree="event_paramater [59711,59732]" parent="event_definition [59652,59771]" at="7"/>
  <insert-node tree=",: , [59732,59733]" parent="event_definition [59652,59771]" at="8"/>
  <insert-tree tree="event_paramater [59734,59750]" parent="event_definition [59652,59771]" at="9"/>
  <insert-node tree=",: , [59750,59751]" parent="event_definition [59652,59771]" at="10"/>
  <insert-tree tree="event_paramater [59752,59769]" parent="event_definition [59652,59771]" at="11"/>
  <insert-node tree="): ) [59769,59770]" parent="event_definition [59652,59771]" at="12"/>
  <insert-node tree="event: event [59776,59781]" parent="event_definition [59776,59852]" at="0"/>
  <insert-node tree="identifier: SupplyDecrease [59782,59796]" parent="event_definition [59776,59852]" at="1"/>
  <insert-node tree="(: ( [59796,59797]" parent="event_definition [59776,59852]" at="2"/>
  <insert-node tree="event_paramater [59797,59818]" parent="event_definition [59776,59852]" at="3"/>
  <insert-node tree=",: , [59818,59819]" parent="event_definition [59776,59852]" at="4"/>
  <insert-node tree="event_paramater [59820,59833]" parent="event_definition [59776,59852]" at="5"/>
  <insert-node tree=",: , [59833,59834]" parent="event_definition [59776,59852]" at="6"/>
  <insert-node tree="event_paramater [59835,59850]" parent="event_definition [59776,59852]" at="7"/>
  <insert-node tree="): ) [59850,59851]" parent="event_definition [59776,59852]" at="8"/>
  <insert-node tree="event: event [59857,59862]" parent="event_definition [59857,59900]" at="0"/>
  <insert-node tree="identifier: SupplyNeutral [59863,59876]" parent="event_definition [59857,59900]" at="1"/>
  <insert-node tree="(: ( [59876,59877]" parent="event_definition [59857,59900]" at="2"/>
  <insert-node tree="event_paramater [59877,59898]" parent="event_definition [59857,59900]" at="3"/>
  <insert-node tree="): ) [59898,59899]" parent="event_definition [59857,59900]" at="4"/>
  <insert-node tree="function: function [59906,59914]" parent="function_definition [59906,60248]" at="0"/>
  <insert-node tree="identifier: step [59915,59919]" parent="function_definition [59906,60248]" at="1"/>
  <insert-node tree="(: ( [59919,59920]" parent="function_definition [59906,60248]" at="2"/>
  <insert-node tree="): ) [59920,59921]" parent="function_definition [59906,60248]" at="3"/>
  <move-tree tree="visibility [26487,26495]" parent="function_definition [59906,60248]" at="4"/>
  <insert-node tree="function_body [59931,60248]" parent="function_definition [59906,60248]" at="5"/>
  <update-node tree="identifier: balanceOfRewarded [68512,68529]" label="shrinkSupply"/>
  <move-tree tree="visibility [60469,60476]" parent="function_definition [60254,60556]" at="5"/>
  <update-node tree="identifier: updatePrice [63019,63030]" label="growSupply"/>
  <insert-tree tree="parameter [60582,60607]" parent="function_definition [60562,60941]" at="3"/>
  <move-tree tree="visibility [23283,23290]" parent="function_definition [60562,60941]" at="5"/>
  <insert-node tree="function: function [60947,60955]" parent="function_definition [60947,61202]" at="0"/>
  <insert-node tree="identifier: limit [60956,60961]" parent="function_definition [60947,61202]" at="1"/>
  <insert-node tree="(: ( [60961,60962]" parent="function_definition [60947,61202]" at="2"/>
  <insert-tree tree="parameter [60962,60987]" parent="function_definition [60947,61202]" at="3"/>
  <insert-node tree="): ) [60987,60988]" parent="function_definition [60947,61202]" at="4"/>
  <move-tree tree="visibility [63649,63656]" parent="function_definition [60947,61202]" at="5"/>
  <move-tree tree="state_mutability [65005,65009]" parent="function_definition [60947,61202]" at="6"/>
  <insert-tree tree="return_type_definition [61002,61031]" parent="function_definition [60947,61202]" at="7"/>
  <insert-tree tree="function_body [61032,61202]" parent="function_definition [60947,61202]" at="8"/>
  <update-node tree="identifier: capture [61594,61601]" label="oracleCapture"/>
  <move-tree tree="visibility [63033,63040]" parent="function_definition [61208,61549]" at="4"/>
  <move-tree tree="return_type_definition [63041,63070]" parent="function_definition [61208,61549]" at="5"/>
  <update-node tree="identifier: PoolSetters [74965,74976]" label="Setters"/>
  <update-node tree="identifier: Unbond [75533,75539]" label="Bond"/>
  <insert-node tree="event_paramater [63937,63960]" parent="event_definition [63871,63962]" at="9"/>
  <update-node tree="identifier: Bond [75462,75466]" label="Unbond"/>
  <insert-node tree=",: , [64033,64034]" parent="event_definition [63967,64060]" at="8"/>
  <insert-node tree="event_paramater [64035,64058]" parent="event_definition [63967,64060]" at="9"/>
  <insert-node tree="function: function [64066,64074]" parent="function_definition [64066,64276]" at="0"/>
  <insert-node tree="identifier: step [64075,64079]" parent="function_definition [64066,64276]" at="1"/>
  <insert-node tree="(: ( [64079,64080]" parent="function_definition [64066,64276]" at="2"/>
  <insert-node tree="): ) [64080,64081]" parent="function_definition [64066,64276]" at="3"/>
  <move-tree tree="visibility [63921,63929]" parent="function_definition [64066,64276]" at="4"/>
  <insert-node tree="function_body [64091,64276]" parent="function_definition [64066,64276]" at="5"/>
  <insert-tree tree="modifier_invocation [64323,64353]" parent="function_definition [64282,64521]" at="6"/>
  <insert-tree tree="modifier_invocation [64569,64599]" parent="function_definition [64527,64789]" at="6"/>
  <move-tree tree="modifier_invocation [77929,77951]" parent="function_definition [64795,65309]" at="6"/>
  <move-tree tree="parameter [45372,45385]" parent="function_definition [65315,65790]" at="3"/>
  <move-tree tree="modifier_invocation [76021,76043]" parent="function_definition [65315,65790]" at="7"/>
  <insert-node tree="function: function [65796,65804]" parent="function_definition [65796,66261]" at="0"/>
  <insert-node tree="identifier: unbondUnderlying [65805,65821]" parent="function_definition [65796,66261]" at="1"/>
  <insert-node tree="(: ( [65821,65822]" parent="function_definition [65796,66261]" at="2"/>
  <move-tree tree="parameter [77209,77222]" parent="function_definition [65796,66261]" at="3"/>
  <insert-node tree="): ) [65835,65836]" parent="function_definition [65796,66261]" at="4"/>
  <move-tree tree="visibility [64018,64026]" parent="function_definition [65796,66261]" at="5"/>
  <move-tree tree="modifier_invocation [76299,76321]" parent="function_definition [65796,66261]" at="6"/>
  <insert-node tree="function_body [65876,66261]" parent="function_definition [65796,66261]" at="7"/>
  <insert-node tree="event: event [70876,70881]" parent="event_definition [70876,70982]" at="0"/>
  <insert-node tree="identifier: Proposal [70882,70890]" parent="event_definition [70876,70982]" at="1"/>
  <insert-node tree="(: ( [70890,70891]" parent="event_definition [70876,70982]" at="2"/>
  <insert-node tree="event_paramater [70891,70916]" parent="event_definition [70876,70982]" at="3"/>
  <insert-node tree=",: , [70916,70917]" parent="event_definition [70876,70982]" at="4"/>
  <insert-tree tree="event_paramater [70918,70941]" parent="event_definition [70876,70982]" at="5"/>
  <insert-node tree=",: , [70941,70942]" parent="event_definition [70876,70982]" at="6"/>
  <insert-node tree="event_paramater [70943,70964]" parent="event_definition [70876,70982]" at="7"/>
  <insert-node tree=",: , [70964,70965]" parent="event_definition [70876,70982]" at="8"/>
  <move-tree tree="event_paramater [75694,75710]" parent="event_definition [70876,70982]" at="9"/>
  <insert-node tree="): ) [70980,70981]" parent="event_definition [70876,70982]" at="10"/>
  <insert-node tree="event: event [70987,70992]" parent="event_definition [70987,71087]" at="0"/>
  <insert-node tree="identifier: Vote [70993,70997]" parent="event_definition [70987,71087]" at="1"/>
  <insert-node tree="(: ( [70997,70998]" parent="event_definition [70987,71087]" at="2"/>
  <insert-tree tree="event_paramater [70998,71021]" parent="event_definition [70987,71087]" at="3"/>
  <insert-node tree=",: , [71021,71022]" parent="event_definition [70987,71087]" at="4"/>
  <insert-node tree="event_paramater [71023,71048]" parent="event_definition [70987,71087]" at="5"/>
  <insert-node tree=",: , [71048,71049]" parent="event_definition [70987,71087]" at="6"/>
  <insert-tree tree="event_paramater [71050,71069]" parent="event_definition [70987,71087]" at="7"/>
  <insert-node tree=",: , [71069,71070]" parent="event_definition [70987,71087]" at="8"/>
  <move-tree tree="event_paramater [75595,75615]" parent="event_definition [70987,71087]" at="9"/>
  <insert-node tree="): ) [71085,71086]" parent="event_definition [70987,71087]" at="10"/>
  <update-node tree="identifier: Provide [75628,75635]" label="Commit"/>
  <insert-node tree="event_paramater [71130,71155]" parent="event_definition [71092,71157]" at="5"/>
  <insert-node tree="function: function [71163,71171]" parent="function_definition [71163,72737]" at="0"/>
  <insert-node tree="identifier: vote [71172,71176]" parent="function_definition [71163,72737]" at="1"/>
  <insert-node tree="(: ( [71176,71177]" parent="function_definition [71163,72737]" at="2"/>
  <move-tree tree="parameter [59665,59681]" parent="function_definition [71163,72737]" at="3"/>
  <insert-node tree=",: , [71194,71195]" parent="function_definition [71163,72737]" at="4"/>
  <insert-tree tree="parameter [71196,71215]" parent="function_definition [71163,72737]" at="5"/>
  <insert-node tree="): ) [71215,71216]" parent="function_definition [71163,72737]" at="6"/>
  <move-tree tree="visibility [77920,77928]" parent="function_definition [71163,72737]" at="7"/>
  <move-tree tree="modifier_invocation [75759,75781]" parent="function_definition [71163,72737]" at="8"/>
  <insert-node tree="function_body [71257,72737]" parent="function_definition [71163,72737]" at="9"/>
  <insert-node tree="function: function [72743,72751]" parent="function_definition [72743,73516]" at="0"/>
  <insert-node tree="identifier: commit [72752,72758]" parent="function_definition [72743,73516]" at="1"/>
  <insert-node tree="(: ( [72758,72759]" parent="function_definition [72743,73516]" at="2"/>
  <move-tree tree="parameter [73924,73938]" parent="function_definition [72743,73516]" at="3"/>
  <insert-node tree="): ) [72776,72777]" parent="function_definition [72743,73516]" at="4"/>
  <move-tree tree="visibility [76290,76298]" parent="function_definition [72743,73516]" at="5"/>
  <insert-node tree="function_body [72787,73516]" parent="function_definition [72743,73516]" at="6"/>
  <insert-node tree="function: function [73522,73530]" parent="function_definition [73522,73814]" at="0"/>
  <insert-node tree="identifier: canPropose [73531,73541]" parent="function_definition [73522,73814]" at="1"/>
  <insert-node tree="(: ( [73541,73542]" parent="function_definition [73522,73814]" at="2"/>
  <move-tree tree="parameter [67988,68003]" parent="function_definition [73522,73814]" at="3"/>
  <insert-node tree="): ) [73557,73558]" parent="function_definition [73522,73814]" at="4"/>
  <move-tree tree="visibility [61861,61868]" parent="function_definition [73522,73814]" at="5"/>
  <move-tree tree="state_mutability [59692,59696]" parent="function_definition [73522,73814]" at="6"/>
  <move-tree tree="return_type_definition [59697,59711]" parent="function_definition [73522,73814]" at="7"/>
  <insert-node tree="function_body [73587,73814]" parent="function_definition [73522,73814]" at="8"/>
  <insert-node tree="event: event [74555,74560]" parent="event_definition [74555,74626]" at="0"/>
  <insert-node tree="identifier: Advance [74561,74568]" parent="event_definition [74555,74626]" at="1"/>
  <insert-node tree="(: ( [74568,74569]" parent="event_definition [74555,74626]" at="2"/>
  <insert-node tree="event_paramater [74569,74590]" parent="event_definition [74555,74626]" at="3"/>
  <insert-node tree=",: , [74590,74591]" parent="event_definition [74555,74626]" at="4"/>
  <insert-node tree="event_paramater [74592,74605]" parent="event_definition [74555,74626]" at="5"/>
  <insert-node tree=",: , [74605,74606]" parent="event_definition [74555,74626]" at="6"/>
  <insert-node tree="event_paramater [74607,74624]" parent="event_definition [74555,74626]" at="7"/>
  <insert-node tree="): ) [74624,74625]" parent="event_definition [74555,74626]" at="8"/>
  <update-node tree="identifier: Claim [75405,75410]" label="Incentivization"/>
  <move-tree tree="event_paramater [75676,75692]" parent="event_definition [74631,74694]" at="5"/>
  <insert-node tree="function: function [74700,74708]" parent="function_definition [74700,74990]" at="0"/>
  <insert-node tree="identifier: initialize [74709,74719]" parent="function_definition [74700,74990]" at="1"/>
  <insert-node tree="(: ( [74719,74720]" parent="function_definition [74700,74990]" at="2"/>
  <insert-node tree="): ) [74720,74721]" parent="function_definition [74700,74990]" at="3"/>
  <move-tree tree="modifier_invocation [101349,101360]" parent="function_definition [74700,74990]" at="4"/>
  <move-tree tree="visibility [67188,67194]" parent="function_definition [74700,74990]" at="5"/>
  <insert-node tree="function_body [74741,74990]" parent="function_definition [74700,74990]" at="6"/>
  <insert-node tree="function: function [74996,75004]" parent="function_definition [74996,75180]" at="0"/>
  <insert-node tree="identifier: advance [75005,75012]" parent="function_definition [74996,75180]" at="1"/>
  <insert-node tree="(: ( [75012,75013]" parent="function_definition [74996,75180]" at="2"/>
  <insert-node tree="): ) [75013,75014]" parent="function_definition [74996,75180]" at="3"/>
  <move-tree tree="visibility [64996,65004]" parent="function_definition [74996,75180]" at="4"/>
  <insert-tree tree="modifier_invocation [75024,75036]" parent="function_definition [74996,75180]" at="5"/>
  <insert-node tree="function_body [75037,75180]" parent="function_definition [74996,75180]" at="6"/>
  <insert-node tree="modifier: modifier [75186,75194]" parent="modifier_definition [75186,75387]" at="0"/>
  <insert-node tree="identifier: incentivized [75195,75207]" parent="modifier_definition [75186,75387]" at="1"/>
  <insert-node tree="function_body [75208,75387]" parent="modifier_definition [75186,75387]" at="2"/>
  <move-tree tree="type_name [15817,15824]" parent="parameter [11520,11539]" at="0"/>
  <insert-node tree="identifier: totalSupply [11528,11539]" parent="parameter [11520,11539]" at="1"/>
  <move-tree tree="type_name [15890,15897]" parent="parameter [11549,11566]" at="0"/>
  <insert-node tree="identifier: totalDebt [11557,11566]" parent="parameter [11549,11566]" at="1"/>
  <insert-node tree="{: { [11629,11630]" parent="function_body [11629,11725]" at="0"/>
  <insert-node tree="return_statement [11639,11719]" parent="function_body [11629,11725]" at="1"/>
  <insert-node tree="}: } [11724,11725]" parent="function_body [11629,11725]" at="2"/>
  <update-node tree="identifier: subtractedValue [19004,19019]" label="totalSupply"/>
  <update-node tree="identifier: addedValue [18310,18320]" label="totalDebt"/>
  <insert-node tree="{: { [11886,11887]" parent="function_body [11886,13002]" at="0"/>
  <insert-tree tree="variable_declaration_statement [11896,11966]" parent="function_body [11886,13002]" at="1"/>
  <insert-tree tree="variable_declaration_statement [11975,12039]" parent="function_body [11886,13002]" at="2"/>
  <insert-node tree="variable_declaration_statement [12049,12098]" parent="function_body [11886,13002]" at="3"/>
  <insert-node tree="variable_declaration_statement [12107,12152]" parent="function_body [11886,13002]" at="4"/>
  <insert-tree tree="variable_declaration_statement [12161,12240]" parent="function_body [11886,13002]" at="5"/>
  <insert-tree tree="if_statement [12250,12944]" parent="function_body [11886,13002]" at="6"/>
  <insert-tree tree="return_statement [12954,12996]" parent="function_body [11886,13002]" at="7"/>
  <insert-node tree="}: } [13001,13002]" parent="function_body [11886,13002]" at="8"/>
  <insert-node tree="identifier: debtRatio [13067,13076]" parent="parameter [13047,13076]" at="2"/>
  <insert-node tree="identifier: lower [13351,13356]" parent="parameter [13331,13356]" at="2"/>
  <insert-node tree="{: { [13441,13442]" parent="function_body [13441,13685]" at="0"/>
  <insert-tree tree="if_statement [13451,13520]" parent="function_body [13441,13685]" at="1"/>
  <insert-node tree="return_statement [13530,13679]" parent="function_body [13441,13685]" at="2"/>
  <insert-node tree="}: } [13684,13685]" parent="function_body [13441,13685]" at="3"/>
  <insert-node tree="if_statement [51148,51224]" parent="function_body [51098,51255]" at="2"/>
  <insert-tree tree="expression_statement [51234,51249]" parent="function_body [51098,51255]" at="3"/>
  <insert-node tree="expression_statement [51401,51423]" parent="function_body [51328,51534]" at="2"/>
  <move-tree tree="expression_statement [46101,46194]" parent="function_body [51328,51534]" at="3"/>
  <insert-tree tree="expression_statement [51513,51528]" parent="function_body [51328,51534]" at="4"/>
  <insert-node tree="expression_statement [51661,51740]" parent="function_body [51607,51771]" at="2"/>
  <move-tree tree="expression_statement [77790,77805]" parent="function_body [51607,51771]" at="3"/>
  <move-tree tree="expression_statement [77111,77126]" parent="function_body [51826,51977]" at="4"/>
  <insert-node tree="{: { [52030,52031]" parent="function_body [52030,52098]" at="0"/>
  <insert-node tree="expression_statement [52040,52067]" parent="function_body [52030,52098]" at="1"/>
  <move-tree tree="expression_statement [76190,76205]" parent="function_body [52030,52098]" at="2"/>
  <insert-node tree="}: } [52097,52098]" parent="function_body [52030,52098]" at="3"/>
  <insert-node tree="{: { [52151,52152]" parent="function_body [52151,52251]" at="0"/>
  <move-tree tree="expression_statement [19935,20027]" parent="function_body [52151,52251]" at="1"/>
  <move-tree tree="expression_statement [75910,75925]" parent="function_body [52151,52251]" at="2"/>
  <insert-node tree="}: } [52250,52251]" parent="function_body [52151,52251]" at="3"/>
  <update-node tree="identifier: deadline [45403,45411]" label="newSupply"/>
  <insert-node tree=",: , [52334,52335]" parent="return_type_definition [52309,52344]" at="5"/>
  <insert-tree tree="parameter [52336,52343]" parent="return_type_definition [52309,52344]" at="6"/>
  <insert-node tree="expression_statement [53611,53733]" parent="function_body [53407,53739]" at="2"/>
  <insert-node tree="{: { [53791,53792]" parent="function_body [53791,54186]" at="0"/>
  <move-tree tree="expression_statement [77962,78075]" parent="function_body [53791,54186]" at="1"/>
  <insert-tree tree="variable_declaration_statement [53922,53995]" parent="function_body [53791,54186]" at="2"/>
  <insert-tree tree="expression_statement [54004,54038]" parent="function_body [53791,54186]" at="3"/>
  <move-tree tree="expression_statement [79068,79235]" parent="function_body [53791,54186]" at="4"/>
  <insert-tree tree="expression_statement [54110,54155]" parent="function_body [53791,54186]" at="5"/>
  <move-tree tree="expression_statement [78757,78772]" parent="function_body [53791,54186]" at="6"/>
  <insert-node tree="}: } [54185,54186]" parent="function_body [53791,54186]" at="7"/>
  <insert-node tree="{: { [54242,54243]" parent="function_body [54242,54362]" at="0"/>
  <insert-node tree="expression_statement [54252,54289]" parent="function_body [54242,54362]" at="1"/>
  <insert-node tree="expression_statement [54298,54331]" parent="function_body [54242,54362]" at="2"/>
  <move-tree tree="expression_statement [76475,76490]" parent="function_body [54242,54362]" at="3"/>
  <insert-node tree="}: } [54361,54362]" parent="function_body [54242,54362]" at="4"/>
  <move-tree tree="type_name [45118,45125]" parent="event_paramater [55142,55163]" at="0"/>
  <insert-node tree="indexed: indexed [55150,55157]" parent="event_paramater [55142,55163]" at="1"/>
  <insert-node tree="identifier: epoch [55158,55163]" parent="event_paramater [55142,55163]" at="2"/>
  <update-node tree="identifier: token0 [48551,48557]" label="from"/>
  <update-node tree="identifier: token1 [48575,48581]" label="to"/>
  <insert-node tree="indexed: indexed [55542,55549]" parent="event_paramater [55534,55555]" at="1"/>
  <insert-node tree="identifier: epoch [55550,55555]" parent="event_paramater [55534,55555]" at="2"/>
  <move-tree tree="type_name [73022,73029]" parent="event_paramater [55598,55619]" at="0"/>
  <insert-node tree="indexed: indexed [55606,55613]" parent="event_paramater [55598,55619]" at="1"/>
  <insert-node tree="identifier: owner [55614,55619]" parent="event_paramater [55598,55619]" at="2"/>
  <insert-node tree="indexed: indexed [55629,55636]" parent="event_paramater [55621,55644]" at="1"/>
  <update-node tree="identifier: pair [48591,48595]" label="spender"/>
  <insert-node tree="{: { [55692,55693]" parent="function_body [55692,56074]" at="0"/>
  <insert-node tree="comment: // Expire prior coupons [55702,55725]" parent="function_body [55692,56074]" at="1"/>
  <insert-tree tree="for_statement [55734,55871]" parent="function_body [55692,56074]" at="2"/>
  <insert-node tree="comment: // Record expiry for current epoch's coupons [55881,55925]" parent="function_body [55692,56074]" at="3"/>
  <insert-node tree="variable_declaration_statement [55934,56005]" parent="function_body [55692,56074]" at="4"/>
  <insert-tree tree="expression_statement [56014,56068]" parent="function_body [55692,56074]" at="5"/>
  <insert-node tree="}: } [56073,56074]" parent="function_body [55692,56074]" at="6"/>
  <insert-node tree="{: { [56134,56135]" parent="function_body [56134,56758]" at="0"/>
  <insert-node tree="variable_declaration_statement [56144,56196]" parent="function_body [56134,56758]" at="1"/>
  <move-tree tree="variable_declaration_statement [78360,78419]" parent="function_body [56134,56758]" at="2"/>
  <insert-tree tree="expression_statement [56289,56324]" parent="function_body [56134,56758]" at="3"/>
  <insert-node tree="variable_declaration_statement [56334,56378]" parent="function_body [56134,56758]" at="4"/>
  <insert-node tree="variable_declaration_statement [56387,56425]" parent="function_body [56134,56758]" at="5"/>
  <insert-tree tree="if_statement [56434,56659]" parent="function_body [56134,56758]" at="6"/>
  <insert-tree tree="emit_statement [56669,56752]" parent="function_body [56134,56758]" at="7"/>
  <insert-node tree="}: } [56757,56758]" parent="function_body [56134,56758]" at="8"/>
  <insert-node tree="{: { [57004,57005]" parent="function_body [57004,57597]" at="0"/>
  <move-tree tree="expression_statement [21891,21960]" parent="function_body [57004,57597]" at="1"/>
  <move-tree tree="expression_statement [45869,45975]" parent="function_body [57004,57597]" at="2"/>
  <insert-node tree="variable_declaration_statement [57263,57287]" parent="function_body [57004,57597]" at="3"/>
  <move-tree tree="variable_declaration_statement [76621,76692]" parent="function_body [57004,57597]" at="4"/>
  <move-tree tree="expression_statement [77538,77592]" parent="function_body [57004,57597]" at="5"/>
  <move-tree tree="expression_statement [77601,77682]" parent="function_body [57004,57597]" at="6"/>
  <insert-tree tree="emit_statement [57494,57561]" parent="function_body [57004,57597]" at="7"/>
  <insert-tree tree="return_statement [57571,57591]" parent="function_body [57004,57597]" at="8"/>
  <insert-node tree="}: } [57596,57597]" parent="function_body [57004,57597]" at="9"/>
  <insert-node tree="{: { [57672,57673]" parent="function_body [57672,57902]" at="0"/>
  <move-tree tree="expression_statement [21106,21174]" parent="function_body [57672,57902]" at="1"/>
  <move-tree tree="expression_statement [78675,78746]" parent="function_body [57672,57902]" at="2"/>
  <insert-tree tree="emit_statement [57841,57896]" parent="function_body [57672,57902]" at="3"/>
  <insert-node tree="}: } [57901,57902]" parent="function_body [57672,57902]" at="4"/>
  <update-node tree="identifier: chainId [38279,38286]" label="epoch"/>
  <move-tree tree="expression_statement [17668,17705]" parent="function_body [58294,58910]" at="3"/>
  <move-tree tree="if_statement [48206,48452]" parent="function_body [58294,58910]" at="5"/>
  <move-tree tree="type_name [65782,65789]" parent="event_paramater [59673,59694]" at="0"/>
  <insert-node tree="indexed: indexed [59681,59688]" parent="event_paramater [59673,59694]" at="1"/>
  <insert-node tree="identifier: epoch [59689,59694]" parent="event_paramater [59673,59694]" at="2"/>
  <move-tree tree="type_name [65833,65840]" parent="event_paramater [59696,59709]" at="0"/>
  <insert-node tree="identifier: price [59704,59709]" parent="event_paramater [59696,59709]" at="1"/>
  <move-tree tree="type_name [66131,66138]" parent="event_paramater [59711,59732]" at="0"/>
  <insert-node tree="identifier: newRedeemable [59719,59732]" parent="event_paramater [59711,59732]" at="1"/>
  <move-tree tree="type_name [66056,66063]" parent="event_paramater [59797,59818]" at="0"/>
  <insert-node tree="indexed: indexed [59805,59812]" parent="event_paramater [59797,59818]" at="1"/>
  <insert-node tree="identifier: epoch [59813,59818]" parent="event_paramater [59797,59818]" at="2"/>
  <move-tree tree="type_name [65806,65813]" parent="event_paramater [59820,59833]" at="0"/>
  <insert-node tree="identifier: price [59828,59833]" parent="event_paramater [59820,59833]" at="1"/>
  <move-tree tree="type_name [66107,66114]" parent="event_paramater [59835,59850]" at="0"/>
  <insert-node tree="identifier: newDebt [59843,59850]" parent="event_paramater [59835,59850]" at="1"/>
  <move-tree tree="type_name [66080,66087]" parent="event_paramater [59877,59898]" at="0"/>
  <insert-node tree="indexed: indexed [59885,59892]" parent="event_paramater [59877,59898]" at="1"/>
  <insert-node tree="identifier: epoch [59893,59898]" parent="event_paramater [59877,59898]" at="2"/>
  <insert-node tree="{: { [59931,59932]" parent="function_body [59931,60248]" at="0"/>
  <move-tree tree="variable_declaration_statement [62508,62550]" parent="function_body [59931,60248]" at="1"/>
  <insert-tree tree="if_statement [59995,60095]" parent="function_body [59931,60248]" at="2"/>
  <insert-tree tree="if_statement [60105,60204]" parent="function_body [59931,60248]" at="3"/>
  <insert-tree tree="emit_statement [60214,60242]" parent="function_body [59931,60248]" at="4"/>
  <insert-node tree="}: } [60247,60248]" parent="function_body [59931,60248]" at="5"/>
  <insert-node tree="memory: memory [60289,60295]" parent="parameter [60276,60301]" at="1"/>
  <update-node tree="identifier: account [68538,68545]" label="price"/>
  <insert-tree tree="expression_statement [60451,60473]" parent="function_body [60311,60556]" at="3"/>
  <insert-tree tree="emit_statement [60483,60534]" parent="function_body [60311,60556]" at="4"/>
  <insert-tree tree="variable_declaration_statement [60627,60687]" parent="function_body [60617,60941]" at="1"/>
  <insert-node tree="variable_declaration_statement [60696,60750]" parent="function_body [60617,60941]" at="2"/>
  <insert-tree tree="emit_statement [60857,60935]" parent="function_body [60617,60941]" at="4"/>
  <move-tree tree="variable_declaration_statement [63405,63502]" parent="function_body [61271,61549]" at="1"/>
  <insert-tree tree="if_statement [61352,61454]" parent="function_body [61271,61549]" at="2"/>
  <insert-tree tree="return_statement [61530,61543]" parent="function_body [61271,61549]" at="4"/>
  <move-tree tree="type_name [65882,65889]" parent="event_paramater [63937,63960]" at="0"/>
  <insert-node tree="identifier: valueUnderlying [63945,63960]" parent="event_paramater [63937,63960]" at="1"/>
  <move-tree tree="type_name [65857,65864]" parent="event_paramater [64035,64058]" at="0"/>
  <insert-node tree="identifier: valueUnderlying [64043,64058]" parent="event_paramater [64035,64058]" at="1"/>
  <insert-node tree="{: { [64091,64092]" parent="function_body [64091,64276]" at="0"/>
  <insert-node tree="expression_statement [64101,64212]" parent="function_body [64091,64276]" at="1"/>
  <insert-tree tree="expression_statement [64222,64244]" parent="function_body [64091,64276]" at="2"/>
  <insert-tree tree="expression_statement [64253,64270]" parent="function_body [64091,64276]" at="3"/>
  <insert-node tree="}: } [64275,64276]" parent="function_body [64091,64276]" at="4"/>
  <move-tree tree="expression_statement [76332,76369]" parent="function_body [64600,64789]" at="1"/>
  <update-node tree="identifier: onlyFrozen [77929,77939]" label="onlyFrozenOrFluid"/>
  <move-tree tree="expression_statement [76054,76090]" parent="function_body [64863,65309]" at="3"/>
  <insert-node tree="emit_statement [65249,65303]" parent="function_body [64863,65309]" at="6"/>
  <update-node tree="identifier: onlyFrozen [76021,76031]" label="onlyFrozenOrFluid"/>
  <insert-tree tree="expression_statement [65395,65416]" parent="function_body [65385,65790]" at="1"/>
  <move-tree tree="expression_statement [76378,76465]" parent="function_body [65385,65790]" at="4"/>
  <insert-node tree="expression_statement [65572,65639]" parent="function_body [65385,65790]" at="4"/>
  <move-tree tree="expression_statement [53708,53760]" parent="function_body [65385,65790]" at="6"/>
  <update-node tree="identifier: onlyFrozen [76299,76309]" label="onlyFrozenOrFluid"/>
  <insert-node tree="{: { [65876,65877]" parent="function_body [65876,66261]" at="0"/>
  <move-tree tree="expression_statement [77243,77264]" parent="function_body [65876,66261]" at="1"/>
  <insert-node tree="variable_declaration_statement [65917,65979]" parent="function_body [65876,66261]" at="2"/>
  <move-tree tree="expression_statement [77485,77529]" parent="function_body [65876,66261]" at="3"/>
  <insert-node tree="expression_statement [66041,66107]" parent="function_body [65876,66261]" at="4"/>
  <move-tree tree="expression_statement [76961,77011]" parent="function_body [65876,66261]" at="5"/>
  <move-tree tree="emit_statement [77136,77181]" parent="function_body [65876,66261]" at="6"/>
  <insert-node tree="}: } [66260,66261]" parent="function_body [65876,66261]" at="7"/>
  <move-tree tree="type_name [60461,60468]" parent="event_paramater [70891,70916]" at="0"/>
  <insert-node tree="indexed: indexed [70899,70906]" parent="event_paramater [70891,70916]" at="1"/>
  <insert-node tree="identifier: candidate [70907,70916]" parent="event_paramater [70891,70916]" at="2"/>
  <move-tree tree="type_name [60783,60790]" parent="event_paramater [70943,70964]" at="0"/>
  <insert-node tree="indexed: indexed [70951,70958]" parent="event_paramater [70943,70964]" at="1"/>
  <insert-node tree="identifier: start [70959,70964]" parent="event_paramater [70943,70964]" at="2"/>
  <update-node tree="identifier: newUniv2 [75702,75710]" label="period"/>
  <move-tree tree="type_name [60589,60596]" parent="event_paramater [71023,71048]" at="0"/>
  <insert-node tree="indexed: indexed [71031,71038]" parent="event_paramater [71023,71048]" at="1"/>
  <insert-node tree="identifier: candidate [71039,71048]" parent="event_paramater [71023,71048]" at="2"/>
  <update-node tree="identifier: newClaimable [75603,75615]" label="bonded"/>
  <move-tree tree="type_name [60562,60569]" parent="event_paramater [71130,71155]" at="0"/>
  <insert-node tree="indexed: indexed [71138,71145]" parent="event_paramater [71130,71155]" at="1"/>
  <insert-node tree="identifier: candidate [71146,71155]" parent="event_paramater [71130,71155]" at="2"/>
  <update-node tree="identifier: _account [59673,59681]" label="candidate"/>
  <update-node tree="identifier: onlyFrozen [75759,75769]" label="onlyFrozenOrLocked"/>
  <insert-node tree="{: { [71257,71258]" parent="function_body [71257,72737]" at="0"/>
  <move-tree tree="expression_statement [78212,78350]" parent="function_body [71257,72737]" at="1"/>
  <insert-node tree="if_statement [71388,71743]" parent="function_body [71257,72737]" at="2"/>
  <insert-node tree="expression_statement [71753,71884]" parent="function_body [71257,72737]" at="3"/>
  <insert-node tree="variable_declaration_statement [71894,71933]" parent="function_body [71257,72737]" at="4"/>
  <insert-tree tree="variable_declaration_statement [71942,72008]" parent="function_body [71257,72737]" at="5"/>
  <insert-tree tree="if_statement [72017,72074]" parent="function_body [71257,72737]" at="6"/>
  <insert-node tree="if_statement [72084,72220]" parent="function_body [71257,72737]" at="7"/>
  <insert-node tree="if_statement [72229,72368]" parent="function_body [71257,72737]" at="8"/>
  <insert-tree tree="if_statement [72377,72474]" parent="function_body [71257,72737]" at="9"/>
  <insert-tree tree="if_statement [72483,72582]" parent="function_body [71257,72737]" at="10"/>
  <move-tree tree="expression_statement [73610,73666]" parent="function_body [71257,72737]" at="11"/>
  <move-tree tree="expression_statement [77691,77780]" parent="function_body [71257,72737]" at="12"/>
  <move-tree tree="emit_statement [78782,78834]" parent="function_body [71257,72737]" at="13"/>
  <insert-node tree="}: } [72736,72737]" parent="function_body [71257,72737]" at="14"/>
  <update-node tree="identifier: tokenA [73932,73938]" label="candidate"/>
  <insert-node tree="{: { [72787,72788]" parent="function_body [72787,73516]" at="0"/>
  <move-tree tree="expression_statement [78085,78202]" parent="function_body [72787,73516]" at="1"/>
  <insert-node tree="variable_declaration_statement [72913,72986]" parent="function_body [72787,73516]" at="2"/>
  <insert-node tree="expression_statement [72996,73095]" parent="function_body [72787,73516]" at="3"/>
  <move-tree tree="expression_statement [61178,61297]" parent="function_body [72787,73516]" at="4"/>
  <insert-node tree="expression_statement [73307,73434]" parent="function_body [72787,73516]" at="5"/>
  <insert-tree tree="expression_statement [73444,73465]" parent="function_body [72787,73516]" at="6"/>
  <move-tree tree="emit_statement [76500,76530]" parent="function_body [72787,73516]" at="7"/>
  <insert-node tree="}: } [73515,73516]" parent="function_body [72787,73516]" at="8"/>
  <insert-node tree="{: { [73587,73588]" parent="function_body [73587,73814]" at="0"/>
  <insert-node tree="if_statement [73597,73658]" parent="function_body [73587,73814]" at="1"/>
  <move-tree tree="variable_declaration_statement [68777,68914]" parent="function_body [73587,73814]" at="2"/>
  <insert-tree tree="return_statement [73754,73802]" parent="function_body [73587,73814]" at="3"/>
  <insert-node tree="comment: // 1% [73803,73808]" parent="function_body [73587,73814]" at="4"/>
  <insert-node tree="}: } [73813,73814]" parent="function_body [73587,73814]" at="5"/>
  <move-tree tree="type_name [15926,15933]" parent="event_paramater [74569,74590]" at="0"/>
  <insert-node tree="indexed: indexed [74577,74584]" parent="event_paramater [74569,74590]" at="1"/>
  <insert-node tree="identifier: epoch [74585,74590]" parent="event_paramater [74569,74590]" at="2"/>
  <move-tree tree="type_name [60716,60723]" parent="event_paramater [74592,74605]" at="0"/>
  <insert-node tree="identifier: block [74600,74605]" parent="event_paramater [74592,74605]" at="1"/>
  <move-tree tree="type_name [60687,60694]" parent="event_paramater [74607,74624]" at="0"/>
  <insert-node tree="identifier: timestamp [74615,74624]" parent="event_paramater [74607,74624]" at="1"/>
  <update-node tree="identifier: lessUsdc [75684,75692]" label="amount"/>
  <insert-node tree="{: { [74741,74742]" parent="function_body [74741,74990]" at="0"/>
  <insert-node tree="variable_declaration_statement [74751,74800]" parent="function_body [74741,74990]" at="1"/>
  <insert-tree tree="expression_statement [74809,74834]" parent="function_body [74741,74990]" at="2"/>
  <insert-tree tree="expression_statement [74843,74914]" parent="function_body [74741,74990]" at="3"/>
  <insert-node tree="comment: // Round to the next UTC-0 [74915,74941]" parent="function_body [74741,74990]" at="4"/>
  <insert-tree tree="expression_statement [74950,74984]" parent="function_body [74741,74990]" at="5"/>
  <insert-node tree="}: } [74989,74990]" parent="function_body [74741,74990]" at="6"/>
  <insert-node tree="{: { [75037,75038]" parent="function_body [75037,75180]" at="0"/>
  <insert-tree tree="expression_statement [75047,75062]" parent="function_body [75037,75180]" at="1"/>
  <insert-tree tree="expression_statement [75071,75088]" parent="function_body [75037,75180]" at="2"/>
  <insert-tree tree="expression_statement [75097,75111]" parent="function_body [75037,75180]" at="3"/>
  <insert-node tree="emit_statement [75121,75174]" parent="function_body [75037,75180]" at="4"/>
  <insert-node tree="}: } [75179,75180]" parent="function_body [75037,75180]" at="5"/>
  <insert-node tree="{: { [75208,75209]" parent="function_body [75208,75387]" at="0"/>
  <insert-tree tree="variable_declaration_statement [75218,75270]" parent="function_body [75208,75387]" at="1"/>
  <insert-tree tree="expression_statement [75279,75316]" parent="function_body [75208,75387]" at="2"/>
  <insert-tree tree="emit_statement [75325,75369]" parent="function_body [75208,75387]" at="3"/>
  <move-tree tree="expression_statement [79431,79433]" parent="function_body [75208,75387]" at="4"/>
  <insert-node tree="}: } [75386,75387]" parent="function_body [75208,75387]" at="5"/>
  <insert-node tree="return: return [11639,11645]" parent="return_statement [11639,11719]" at="0"/>
  <insert-node tree="call_expression [11646,11718]" parent="return_statement [11639,11719]" at="1"/>
  <insert-tree tree="variable_declaration [12049,12071]" parent="variable_declaration_statement [12049,12098]" at="0"/>
  <insert-node tree="=: = [12072,12073]" parent="variable_declaration_statement [12049,12098]" at="1"/>
  <insert-node tree="call_expression [12074,12097]" parent="variable_declaration_statement [12049,12098]" at="2"/>
  <insert-tree tree="variable_declaration [12107,12127]" parent="variable_declaration_statement [12107,12152]" at="0"/>
  <insert-node tree="=: = [12128,12129]" parent="variable_declaration_statement [12107,12152]" at="1"/>
  <insert-node tree="call_expression [12130,12151]" parent="variable_declaration_statement [12107,12152]" at="2"/>
  <insert-node tree="return: return [13530,13536]" parent="return_statement [13530,13679]" at="0"/>
  <insert-node tree="call_expression [13537,13678]" parent="return_statement [13530,13679]" at="1"/>
  <insert-node tree="if: if [51148,51150]" parent="if_statement [51148,51224]" at="0"/>
  <insert-node tree="(: ( [51151,51152]" parent="if_statement [51148,51224]" at="1"/>
  <insert-tree tree="unary_expression [51152,51177]" parent="if_statement [51148,51224]" at="2"/>
  <insert-node tree="): ) [51177,51178]" parent="if_statement [51148,51224]" at="3"/>
  <insert-node tree="block_statement [51179,51224]" parent="if_statement [51148,51224]" at="4"/>
  <move-tree tree="call_expression [45197,45286]" parent="expression_statement [51338,51392]" at="0"/>
  <move-tree tree=",: , [45246,45247]" parent="call_expression [51338,51391]" at="8"/>
  <insert-node tree="call_expression [51401,51422]" parent="expression_statement [51401,51423]" at="0"/>
  <insert-node tree="call_expression [51661,51739]" parent="expression_statement [51661,51740]" at="0"/>
  <insert-node tree="call_expression [51836,51857]" parent="expression_statement [51836,51858]" at="0"/>
  <move-tree tree="call_expression [21205,21273]" parent="expression_statement [51867,51946]" at="0"/>
  <insert-node tree="call_expression [52040,52066]" parent="expression_statement [52040,52067]" at="0"/>
  <move-tree tree="call_expression [19955,20026]" parent="expression_statement [52161,52220]" at="0"/>
  <insert-node tree="call_expression [53611,53732]" parent="expression_statement [53611,53733]" at="0"/>
  <move-tree tree="call_expression [79094,79126]" parent="expression_statement [54048,54101]" at="0"/>
  <move-tree tree="call_expression [73695,73735]" parent="expression_statement [54252,54289]" at="0"/>
  <insert-node tree="call_expression [54298,54330]" parent="expression_statement [54298,54331]" at="0"/>
  <move-tree tree="variable_declaration [78520,78548]" parent="variable_declaration_statement [55934,56005]" at="0"/>
  <insert-node tree="=: = [55958,55959]" parent="variable_declaration_statement [55934,56005]" at="1"/>
  <move-tree tree="call_expression [72328,72342]" parent="variable_declaration_statement [55934,56005]" at="2"/>
  <move-tree tree="variable_declaration [77274,77294]" parent="variable_declaration_statement [56144,56196]" at="0"/>
  <insert-node tree="=: = [56168,56169]" parent="variable_declaration_statement [56144,56196]" at="1"/>
  <insert-tree tree="call_expression [56170,56195]" parent="variable_declaration_statement [56144,56196]" at="2"/>
  <insert-tree tree="tuple_expression [56269,56278]" parent="variable_declaration_statement [56205,56279]" at="2"/>
  <move-tree tree="variable_declaration [77380,77399]" parent="variable_declaration_statement [56334,56378]" at="0"/>
  <insert-node tree="=: = [56358,56359]" parent="variable_declaration_statement [56334,56378]" at="1"/>
  <insert-tree tree="call_expression [56360,56377]" parent="variable_declaration_statement [56334,56378]" at="2"/>
  <move-tree tree="variable_declaration [78429,78461]" parent="variable_declaration_statement [56387,56425]" at="0"/>
  <insert-node tree="=: = [56408,56409]" parent="variable_declaration_statement [56387,56425]" at="1"/>
  <insert-tree tree="call_expression [56410,56424]" parent="variable_declaration_statement [56387,56425]" at="2"/>
  <insert-node tree="call_expression [56850,56917]" parent="return_statement [56843,56918]" at="1"/>
  <move-tree tree="variable_declaration [76701,76719]" parent="variable_declaration_statement [57263,57287]" at="0"/>
  <insert-node tree="=: = [57277,57278]" parent="variable_declaration_statement [57263,57287]" at="1"/>
  <insert-tree tree="call_expression [57279,57286]" parent="variable_declaration_statement [57263,57287]" at="2"/>
  <move-tree tree="call_expression [78619,78665]" parent="expression_statement [58071,58123]" at="0"/>
  <update-node tree="identifier: Approval [22099,22107]" label="CouponApproval"/>
  <insert-tree tree="call_argument [58153,58163]" parent="emit_statement [58133,58182]" at="3"/>
  <move-tree tree="call_argument [20706,20712]" parent="emit_statement [58133,58182]" at="8"/>
  <insert-node tree="call_expression [58579,58630]" parent="expression_statement [58579,58631]" at="0"/>
  <insert-node tree="binary_expression [58645,58720]" parent="if_statement [58641,58840]" at="2"/>
  <update-node tree="identifier: Transfer [20106,20114]" label="CouponTransfer"/>
  <insert-tree tree="call_argument [58889,58894]" parent="emit_statement [58850,58904]" at="7"/>
  <insert-node tree=",: , [58894,58895]" parent="emit_statement [58850,58904]" at="8"/>
  <insert-tree tree="user_defined_type [60276,60288]" parent="type_name [60276,60288]" at="0"/>
  <insert-tree tree="variable_declaration [60321,60346]" parent="variable_declaration_statement [60321,60381]" at="0"/>
  <insert-tree tree="call_expression [60349,60380]" parent="variable_declaration_statement [60321,60381]" at="2"/>
  <move-tree tree="variable_declaration [68587,68606]" parent="variable_declaration_statement [60696,60750]" at="0"/>
  <insert-node tree="=: = [60714,60715]" parent="variable_declaration_statement [60696,60750]" at="1"/>
  <insert-tree tree="call_expression [60716,60749]" parent="variable_declaration_statement [60696,60750]" at="2"/>
  <insert-node tree="variable_declaration_tuple [61281,61320]" parent="variable_declaration_statement [61281,61342]" at="0"/>
  <insert-tree tree="unary_expression [61467,61473]" parent="if_statement [61463,61520]" at="2"/>
  <insert-node tree="call_expression [64101,64211]" parent="expression_statement [64101,64212]" at="0"/>
  <move-tree tree="variable_declaration [63685,63704]" parent="variable_declaration_statement [64904,65060]" at="0"/>
  <insert-node tree="emit: emit [65249,65253]" parent="emit_statement [65249,65303]" at="0"/>
  <insert-node tree="identifier: Bond [65254,65258]" parent="emit_statement [65249,65303]" at="1"/>
  <insert-node tree="(: ( [65258,65259]" parent="emit_statement [65249,65303]" at="2"/>
  <insert-tree tree="call_argument [65259,65269]" parent="emit_statement [65249,65303]" at="3"/>
  <insert-node tree=",: , [65269,65270]" parent="emit_statement [65249,65303]" at="4"/>
  <insert-tree tree="call_argument [65271,65285]" parent="emit_statement [65249,65303]" at="5"/>
  <insert-node tree=",: , [65285,65286]" parent="emit_statement [65249,65303]" at="6"/>
  <insert-tree tree="call_argument [65287,65294]" parent="emit_statement [65249,65303]" at="7"/>
  <insert-node tree=",: , [65294,65295]" parent="emit_statement [65249,65303]" at="8"/>
  <move-tree tree="call_argument [76523,76528]" parent="emit_statement [65249,65303]" at="9"/>
  <insert-node tree="): ) [65301,65302]" parent="emit_statement [65249,65303]" at="10"/>
  <move-tree tree="variable_declaration [63320,63343]" parent="variable_declaration_statement [65426,65509]" at="0"/>
  <move-tree tree="call_expression [77402,77441]" parent="variable_declaration_statement [65426,65509]" at="2"/>
  <insert-node tree="call_expression [65572,65638]" parent="expression_statement [65572,65639]" at="0"/>
  <move-tree tree="variable_declaration [62559,62578]" parent="variable_declaration_statement [65917,65979]" at="0"/>
  <insert-node tree="=: = [65933,65934]" parent="variable_declaration_statement [65917,65979]" at="1"/>
  <insert-node tree="call_expression [65935,65978]" parent="variable_declaration_statement [65917,65979]" at="2"/>
  <insert-node tree="call_expression [66041,66106]" parent="expression_statement [66041,66107]" at="0"/>
  <update-node tree="identifier: Bond [77141,77145]" label="Unbond"/>
  <insert-tree tree="call_argument [66239,66246]" parent="emit_statement [66199,66255]" at="7"/>
  <insert-node tree=",: , [66246,66247]" parent="emit_statement [66199,66255]" at="8"/>
  <insert-node tree="if: if [71388,71390]" parent="if_statement [71388,71743]" at="0"/>
  <insert-node tree="(: ( [71391,71392]" parent="if_statement [71388,71743]" at="1"/>
  <insert-tree tree="unary_expression [71392,71415]" parent="if_statement [71388,71743]" at="2"/>
  <insert-node tree="): ) [71415,71416]" parent="if_statement [71388,71743]" at="3"/>
  <insert-node tree="block_statement [71417,71743]" parent="if_statement [71388,71743]" at="4"/>
  <insert-node tree="call_expression [71753,71883]" parent="expression_statement [71753,71884]" at="0"/>
  <move-tree tree="variable_declaration [68777,68813]" parent="variable_declaration_statement [71894,71933]" at="0"/>
  <insert-node tree="=: = [71909,71910]" parent="variable_declaration_statement [71894,71933]" at="1"/>
  <move-tree tree="call_expression [77297,77326]" parent="variable_declaration_statement [71894,71933]" at="2"/>
  <insert-node tree="if: if [72084,72086]" parent="if_statement [72084,72220]" at="0"/>
  <insert-node tree="(: ( [72087,72088]" parent="if_statement [72084,72220]" at="1"/>
  <insert-tree tree="member_expression [72088,72125]" parent="if_statement [72084,72220]" at="2"/>
  <insert-node tree="): ) [72125,72126]" parent="if_statement [72084,72220]" at="3"/>
  <insert-node tree="block_statement [72127,72220]" parent="if_statement [72084,72220]" at="4"/>
  <insert-node tree="if: if [72229,72231]" parent="if_statement [72229,72368]" at="0"/>
  <insert-node tree="(: ( [72232,72233]" parent="if_statement [72229,72368]" at="1"/>
  <insert-tree tree="member_expression [72233,72271]" parent="if_statement [72229,72368]" at="2"/>
  <insert-node tree="): ) [72271,72272]" parent="if_statement [72229,72368]" at="3"/>
  <insert-node tree="block_statement [72273,72368]" parent="if_statement [72229,72368]" at="4"/>
  <update-node tree="identifier: Provide [78787,78794]" label="Vote"/>
  <move-tree tree="variable_declaration [61916,61939]" parent="variable_declaration_statement [72913,72986]" at="0"/>
  <insert-node tree="=: = [72931,72932]" parent="variable_declaration_statement [72913,72986]" at="1"/>
  <insert-node tree="call_expression [72933,72985]" parent="variable_declaration_statement [72913,72986]" at="2"/>
  <insert-node tree="call_expression [72996,73094]" parent="expression_statement [72996,73095]" at="0"/>
  <insert-node tree="call_expression [73307,73433]" parent="expression_statement [73307,73434]" at="0"/>
  <update-node tree="identifier: Claim [76505,76510]" label="Commit"/>
  <insert-tree tree="call_argument [73499,73508]" parent="emit_statement [73475,73510]" at="5"/>
  <insert-node tree="if: if [73597,73599]" parent="if_statement [73597,73658]" at="0"/>
  <insert-node tree="(: ( [73600,73601]" parent="if_statement [73597,73658]" at="1"/>
  <insert-tree tree="binary_expression [73601,73619]" parent="if_statement [73597,73658]" at="2"/>
  <insert-node tree="): ) [73619,73620]" parent="if_statement [73597,73658]" at="3"/>
  <insert-node tree="block_statement [73621,73658]" parent="if_statement [73597,73658]" at="4"/>
  <insert-tree tree="variable_declaration [73668,73693]" parent="variable_declaration_statement [73668,73745]" at="0"/>
  <move-tree tree="call_expression [68816,68883]" parent="variable_declaration_statement [73668,73745]" at="2"/>
  <move-tree tree="variable_declaration [73352,73370]" parent="variable_declaration_statement [74751,74800]" at="0"/>
  <insert-node tree="=: = [74771,74772]" parent="variable_declaration_statement [74751,74800]" at="1"/>
  <insert-tree tree="call_expression [74773,74799]" parent="variable_declaration_statement [74751,74800]" at="2"/>
  <insert-node tree="emit: emit [75121,75125]" parent="emit_statement [75121,75174]" at="0"/>
  <insert-node tree="identifier: Advance [75126,75133]" parent="emit_statement [75121,75174]" at="1"/>
  <insert-node tree="(: ( [75133,75134]" parent="emit_statement [75121,75174]" at="2"/>
  <insert-tree tree="call_argument [75134,75141]" parent="emit_statement [75121,75174]" at="3"/>
  <insert-node tree=",: , [75141,75142]" parent="emit_statement [75121,75174]" at="4"/>
  <insert-tree tree="call_argument [75143,75155]" parent="emit_statement [75121,75174]" at="5"/>
  <insert-node tree=",: , [75155,75156]" parent="emit_statement [75121,75174]" at="6"/>
  <move-tree tree="call_argument [55076,55101]" parent="emit_statement [75121,75174]" at="7"/>
  <insert-node tree="): ) [75172,75173]" parent="emit_statement [75121,75174]" at="8"/>
  <insert-node tree="member_expression [11646,11716]" parent="call_expression [11646,11718]" at="0"/>
  <insert-node tree="(: ( [11716,11717]" parent="call_expression [11646,11718]" at="1"/>
  <insert-node tree="): ) [11717,11718]" parent="call_expression [11646,11718]" at="2"/>
  <insert-tree tree="member_expression [12074,12089]" parent="call_expression [12074,12097]" at="0"/>
  <insert-node tree="(: ( [12089,12090]" parent="call_expression [12074,12097]" at="1"/>
  <move-tree tree="call_argument [70596,70602]" parent="call_expression [12074,12097]" at="2"/>
  <insert-node tree="): ) [12096,12097]" parent="call_expression [12074,12097]" at="3"/>
  <insert-tree tree="member_expression [12130,12143]" parent="call_expression [12130,12151]" at="0"/>
  <insert-node tree="(: ( [12143,12144]" parent="call_expression [12130,12151]" at="1"/>
  <move-tree tree="call_argument [70780,70786]" parent="call_expression [12130,12151]" at="2"/>
  <insert-node tree="): ) [12150,12151]" parent="call_expression [12130,12151]" at="3"/>
  <insert-tree tree="member_expression [13537,13657]" parent="call_expression [13537,13678]" at="0"/>
  <insert-node tree="(: ( [13657,13658]" parent="call_expression [13537,13678]" at="1"/>
  <insert-node tree="call_argument [13658,13677]" parent="call_expression [13537,13678]" at="2"/>
  <insert-node tree="): ) [13677,13678]" parent="call_expression [13537,13678]" at="3"/>
  <insert-node tree="member_expression [51108,51121]" parent="call_expression [51108,51138]" at="0"/>
  <insert-node tree="{: { [51179,51180]" parent="block_statement [51179,51224]" at="0"/>
  <insert-node tree="expression_statement [51193,51214]" parent="block_statement [51179,51224]" at="1"/>
  <insert-node tree="}: } [51223,51224]" parent="block_statement [51179,51224]" at="2"/>
  <move-tree tree="identifier: LibEIP712 [45197,45206]" parent="member_expression [51338,51359]" at="1"/>
  <move-tree tree="call_argument [26218,26225]" parent="call_expression [51338,51391]" at="2"/>
  <move-tree tree="call_argument [48189,48195]" parent="call_expression [51338,51391]" at="10"/>
  <insert-tree tree="member_expression [51401,51414]" parent="call_expression [51401,51422]" at="0"/>
  <insert-node tree="(: ( [51414,51415]" parent="call_expression [51401,51422]" at="1"/>
  <move-tree tree="call_argument [22975,22981]" parent="call_expression [51401,51422]" at="2"/>
  <insert-node tree="): ) [51421,51422]" parent="call_expression [51401,51422]" at="3"/>
  <insert-node tree="identifier: decrementTotalDebt [51432,51450]" parent="call_expression [51432,51502]" at="0"/>
  <move-tree tree="call_argument [70256,70262]" parent="call_expression [51432,51502]" at="3"/>
  <insert-tree tree="member_expression [51617,51634]" parent="call_expression [51617,51651]" at="0"/>
  <insert-node tree="identifier: decrementTotalRedeemable [51661,51685]" parent="call_expression [51661,51739]" at="0"/>
  <insert-node tree="(: ( [51685,51686]" parent="call_expression [51661,51739]" at="1"/>
  <move-tree tree="call_argument [71386,71392]" parent="call_expression [51661,51739]" at="2"/>
  <insert-node tree=",: , [51692,51693]" parent="call_expression [51661,51739]" at="3"/>
  <move-tree tree="call_argument [46066,46080]" parent="call_expression [51661,51739]" at="4"/>
  <insert-node tree="): ) [51738,51739]" parent="call_expression [51661,51739]" at="5"/>
  <insert-node tree="member_expression [51836,51849]" parent="call_expression [51836,51857]" at="0"/>
  <insert-node tree="(: ( [51849,51850]" parent="call_expression [51836,51857]" at="1"/>
  <move-tree tree="call_argument [70847,70853]" parent="call_expression [51836,51857]" at="2"/>
  <insert-node tree="): ) [51856,51857]" parent="call_expression [51836,51857]" at="3"/>
  <insert-node tree="identifier: decrementTotalRedeemable [51867,51891]" parent="call_expression [51867,51945]" at="0"/>
  <insert-node tree="identifier: incrementTotalDebt [52040,52058]" parent="call_expression [52040,52066]" at="0"/>
  <insert-node tree="(: ( [52058,52059]" parent="call_expression [52040,52066]" at="1"/>
  <move-tree tree="call_argument [70323,70329]" parent="call_expression [52040,52066]" at="2"/>
  <insert-node tree="): ) [52065,52066]" parent="call_expression [52040,52066]" at="3"/>
  <insert-node tree="identifier: decrementTotalDebt [52161,52179]" parent="call_expression [52161,52219]" at="0"/>
  <move-tree tree="member_expression [46101,46113]" parent="call_expression [53611,53732]" at="0"/>
  <insert-node tree="(: ( [53623,53624]" parent="call_expression [53611,53732]" at="1"/>
  <insert-tree tree="call_argument [53637,53674]" parent="call_expression [53611,53732]" at="2"/>
  <insert-node tree=",: , [53674,53675]" parent="call_expression [53611,53732]" at="3"/>
  <move-tree tree="call_argument [46156,46160]" parent="call_expression [53611,53732]" at="4"/>
  <insert-node tree=",: , [53692,53693]" parent="call_expression [53611,53732]" at="5"/>
  <move-tree tree="call_argument [20516,20549]" parent="call_expression [53611,53732]" at="6"/>
  <insert-node tree="): ) [53731,53732]" parent="call_expression [53611,53732]" at="7"/>
  <insert-node tree=",: , [54075,54076]" parent="call_expression [54048,54100]" at="3"/>
  <insert-tree tree="call_argument [54077,54099]" parent="call_expression [54048,54100]" at="4"/>
  <insert-node tree=",: , [54279,54280]" parent="call_expression [54252,54288]" at="3"/>
  <move-tree tree="call_argument [17070,17076]" parent="call_expression [54252,54288]" at="4"/>
  <insert-node tree="identifier: incrementTotalRedeemable [54298,54322]" parent="call_expression [54298,54330]" at="0"/>
  <insert-node tree="(: ( [54322,54323]" parent="call_expression [54298,54330]" at="1"/>
  <move-tree tree="call_argument [16593,16599]" parent="call_expression [54298,54330]" at="2"/>
  <insert-node tree="): ) [54329,54330]" parent="call_expression [54298,54330]" at="3"/>
  <insert-node tree="uint256: uint256 [55534,55541]" parent="primitive_type [55534,55541]" at="0"/>
  <update-node tree="identifier: newPhantomFromBonded [78528,78548]" label="expirationEpoch"/>
  <insert-tree tree="call_argument [55972,56003]" parent="call_expression [55960,56004]" at="2"/>
  <update-node tree="identifier: newClaimable [77282,77294]" label="couponsForEpoch"/>
  <insert-tree tree="variable_declaration [56230,56246]" parent="variable_declaration_tuple [56205,56266]" at="3"/>
  <insert-node tree=",: , [56246,56247]" parent="variable_declaration_tuple [56205,56266]" at="4"/>
  <insert-tree tree="variable_declaration [56248,56265]" parent="variable_declaration_tuple [56205,56266]" at="5"/>
  <update-node tree="identifier: lessPhantom [77388,77399]" label="totalRedeemable"/>
  <update-node tree="identifier: totalRewardedWithPhantom [78437,78461]" label="totalCoupons"/>
  <insert-node tree="identifier: calculateCouponPremium [56850,56872]" parent="call_expression [56850,56917]" at="0"/>
  <insert-node tree="(: ( [56872,56873]" parent="call_expression [56850,56917]" at="1"/>
  <move-tree tree="call_argument [73255,73263]" parent="call_expression [56850,56917]" at="2"/>
  <insert-node tree=",: , [56895,56896]" parent="call_expression [56850,56917]" at="3"/>
  <insert-tree tree="call_argument [56897,56908]" parent="call_expression [56850,56917]" at="4"/>
  <insert-node tree=",: , [56908,56909]" parent="call_expression [56850,56917]" at="5"/>
  <move-tree tree="call_argument [71674,71680]" parent="call_expression [56850,56917]" at="6"/>
  <insert-node tree="): ) [56916,56917]" parent="call_expression [56850,56917]" at="7"/>
  <move-tree tree="member_expression [45985,45997]" parent="call_expression [57014,57129]" at="0"/>
  <move-tree tree="call_argument [46048,46052]" parent="call_expression [57014,57129]" at="5"/>
  <insert-node tree=",: , [57074,57075]" parent="call_expression [57014,57129]" at="5"/>
  <move-tree tree="call_argument [22498,22536]" parent="call_expression [57140,57252]" at="6"/>
  <update-node tree="identifier: newPhantom [76709,76719]" label="epoch"/>
  <update-node tree="identifier: totalRewardedWithPhantom [76629,76653]" label="couponAmount"/>
  <update-node tree="identifier: incrementBalanceOfClaimable [77538,77565]" label="burnFromAccount"/>
  <move-tree tree="call_argument [73587,73599]" parent="call_expression [57374,57415]" at="4"/>
  <update-node tree="identifier: decrementBalanceOfBonded [77601,77625]" label="incrementBalanceOfCoupons"/>
  <insert-tree tree="call_argument [57470,57482]" parent="call_expression [57425,57483]" at="6"/>
  <update-node tree="identifier: require [21106,21113]" label="decrementBalanceOfCoupons"/>
  <move-tree tree="call_argument [75114,75124]" parent="call_expression [57682,57779]" at="2"/>
  <insert-tree tree="call_argument [57720,57725]" parent="call_expression [57682,57779]" at="4"/>
  <insert-node tree=",: , [57725,57726]" parent="call_expression [57682,57779]" at="5"/>
  <insert-tree tree="call_argument [57727,57739]" parent="call_expression [57682,57779]" at="6"/>
  <insert-node tree=",: , [57739,57740]" parent="call_expression [57682,57779]" at="7"/>
  <update-node tree="identifier: incrementBalanceOfPhantom [78675,78700]" label="redeemToAccount"/>
  <update-node tree="identifier: incrementBalanceOfBonded [78619,78643]" label="updateAllowanceCoupons"/>
  <move-tree tree="call_argument [46220,46227]" parent="call_expression [58071,58122]" at="4"/>
  <insert-node tree=",: , [58113,58114]" parent="call_expression [58071,58122]" at="5"/>
  <move-tree tree="call_argument [71120,71126]" parent="call_expression [58071,58122]" at="6"/>
  <update-node tree="identifier: _transfer [17668,17677]" label="decrementBalanceOfCoupons"/>
  <insert-node tree=",: , [58529,58530]" parent="call_expression [58482,58569]" at="7"/>
  <move-tree tree="call_argument [45945,45964]" parent="call_expression [58482,58569]" at="8"/>
  <insert-node tree="identifier: incrementBalanceOfCoupons [58579,58604]" parent="call_expression [58579,58630]" at="0"/>
  <insert-node tree="(: ( [58604,58605]" parent="call_expression [58579,58630]" at="1"/>
  <move-tree tree="call_argument [48178,48187]" parent="call_expression [58579,58630]" at="2"/>
  <insert-node tree=",: , [58614,58615]" parent="call_expression [58579,58630]" at="3"/>
  <insert-tree tree="call_argument [58616,58621]" parent="call_expression [58579,58630]" at="4"/>
  <insert-node tree=",: , [58621,58622]" parent="call_expression [58579,58630]" at="5"/>
  <move-tree tree="call_argument [22402,22408]" parent="call_expression [58579,58630]" at="6"/>
  <insert-node tree="): ) [58629,58630]" parent="call_expression [58579,58630]" at="7"/>
  <insert-node tree="binary_expression [58645,58665]" parent="binary_expression [58645,58720]" at="0"/>
  <insert-node tree="&amp;&amp;: &amp;&amp; [58666,58668]" parent="binary_expression [58645,58720]" at="1"/>
  <move-tree tree="binary_expression [48210,48256]" parent="binary_expression [58645,58720]" at="2"/>
  <update-node tree="identifier: updatePrice [62536,62547]" label="oracleCapture"/>
  <update-node tree="identifier: totalRewardedWithPhantom [68705,68729]" label="newDebt"/>
  <update-node tree="identifier: totalBonded [68595,68606]" label="newSupply"/>
  <insert-node tree="identifier: increaseSupply [60822,60836]" parent="call_expression [60822,60847]" at="0"/>
  <insert-node tree="(: ( [61281,61282]" parent="variable_declaration_tuple [61281,61320]" at="0"/>
  <move-tree tree="variable_declaration [63405,63430]" parent="variable_declaration_tuple [61281,61320]" at="1"/>
  <insert-node tree=",: , [61307,61308]" parent="variable_declaration_tuple [61281,61320]" at="2"/>
  <move-tree tree="variable_declaration [62681,62691]" parent="variable_declaration_tuple [61281,61320]" at="3"/>
  <insert-node tree="): ) [61319,61320]" parent="variable_declaration_tuple [61281,61320]" at="4"/>
  <move-tree tree="member_expression [101700,101714]" parent="call_expression [61323,61341]" at="0"/>
  <insert-tree tree="member_expression [64101,64113]" parent="call_expression [64101,64211]" at="0"/>
  <insert-node tree="(: ( [64113,64114]" parent="call_expression [64101,64211]" at="1"/>
  <insert-tree tree="call_argument [64127,64148]" parent="call_expression [64101,64211]" at="2"/>
  <insert-node tree=",: , [64148,64149]" parent="call_expression [64101,64211]" at="3"/>
  <insert-tree tree="call_argument [64162,64166]" parent="call_expression [64101,64211]" at="4"/>
  <insert-node tree=",: , [64166,64167]" parent="call_expression [64101,64211]" at="5"/>
  <move-tree tree="call_argument [19141,19180]" parent="call_expression [64101,64211]" at="6"/>
  <insert-node tree="): ) [64210,64211]" parent="call_expression [64101,64211]" at="7"/>
  <update-node tree="identifier: lastReserve [63693,63704]" label="balance"/>
  <insert-node tree="identifier: incrementBalanceOf [65069,65087]" parent="call_expression [65069,65108]" at="0"/>
  <update-node tree="identifier: incrementBalanceOfBonded [76908,76932]" label="incrementTotalBonded"/>
  <move-tree tree="call_argument [46229,46234]" parent="call_expression [65118,65145]" at="2"/>
  <update-node tree="identifier: priceCumulative [63328,63343]" label="staged"/>
  <update-node tree="identifier: decrementBalanceOfClaimable [76378,76405]" label="incrementBalanceOfStaged"/>
  <insert-tree tree="call_argument [65555,65561]" parent="call_expression [65518,65562]" at="4"/>
  <insert-node tree="identifier: decrementTotalBonded [65572,65592]" parent="call_expression [65572,65638]" at="0"/>
  <insert-node tree="(: ( [65592,65593]" parent="call_expression [65572,65638]" at="1"/>
  <insert-tree tree="call_argument [65593,65599]" parent="call_expression [65572,65638]" at="2"/>
  <insert-node tree=",: , [65599,65600]" parent="call_expression [65572,65638]" at="3"/>
  <move-tree tree="call_argument [17791,17833]" parent="call_expression [65572,65638]" at="4"/>
  <insert-node tree="): ) [65637,65638]" parent="call_expression [65572,65638]" at="5"/>
  <update-node tree="identifier: require [53708,53715]" label="decrementBalanceOf"/>
  <move-tree tree="call_argument [76933,76943]" parent="call_expression [65648,65718]" at="2"/>
  <move-tree tree="call_argument [76945,76950]" parent="call_expression [65648,65718]" at="5"/>
  <insert-node tree=",: , [65684,65685]" parent="call_expression [65648,65718]" at="5"/>
  <update-node tree="identifier: newClaimable [77862,77874]" label="staged"/>
  <update-node tree="identifier: lastReserve [62567,62578]" label="balance"/>
  <insert-tree tree="member_expression [65935,65963]" parent="call_expression [65935,65978]" at="0"/>
  <insert-node tree="(: ( [65963,65964]" parent="call_expression [65935,65978]" at="1"/>
  <move-tree tree="call_argument [79148,79161]" parent="call_expression [65935,65978]" at="2"/>
  <insert-node tree="): ) [65977,65978]" parent="call_expression [65935,65978]" at="3"/>
  <insert-node tree="identifier: decrementTotalBonded [66041,66061]" parent="call_expression [66041,66106]" at="0"/>
  <insert-node tree="(: ( [66061,66062]" parent="call_expression [66041,66106]" at="1"/>
  <move-tree tree="call_argument [76418,76423]" parent="call_expression [66041,66106]" at="2"/>
  <insert-node tree=",: , [66067,66068]" parent="call_expression [66041,66106]" at="3"/>
  <move-tree tree="call_argument [79194,79224]" parent="call_expression [66041,66106]" at="4"/>
  <insert-node tree="): ) [66105,66106]" parent="call_expression [66041,66106]" at="5"/>
  <update-node tree="identifier: incrementBalanceOfPhantom [76961,76986]" label="decrementBalanceOf"/>
  <insert-node tree=",: , [66154,66155]" parent="call_expression [66116,66188]" at="5"/>
  <move-tree tree="call_argument [53373,53410]" parent="call_expression [66116,66188]" at="6"/>
  <move-tree tree="call_argument [77742,77778]" parent="call_expression [71267,71377]" at="6"/>
  <insert-node tree="{: { [71417,71418]" parent="block_statement [71417,71743]" at="0"/>
  <insert-node tree="expression_statement [71431,71567]" parent="block_statement [71417,71743]" at="1"/>
  <insert-tree tree="expression_statement [71581,71641]" parent="block_statement [71417,71743]" at="2"/>
  <insert-tree tree="emit_statement [71654,71733]" parent="block_statement [71417,71743]" at="3"/>
  <insert-node tree="}: } [71742,71743]" parent="block_statement [71417,71743]" at="4"/>
  <move-tree tree="member_expression [79294,79306]" parent="call_expression [71753,71883]" at="0"/>
  <insert-node tree="(: ( [71765,71766]" parent="call_expression [71753,71883]" at="1"/>
  <insert-node tree="call_argument [71779,71834]" parent="call_expression [71753,71883]" at="2"/>
  <insert-node tree=",: , [71834,71835]" parent="call_expression [71753,71883]" at="3"/>
  <move-tree tree="call_argument [79380,79384]" parent="call_expression [71753,71883]" at="4"/>
  <insert-node tree=",: , [71852,71853]" parent="call_expression [71753,71883]" at="5"/>
  <move-tree tree="call_argument [78308,78339]" parent="call_expression [71753,71883]" at="6"/>
  <insert-node tree="): ) [71882,71883]" parent="call_expression [71753,71883]" at="7"/>
  <update-node tree="identifier: balanceOfRewardedWithPhantom [68785,68813]" label="bonded"/>
  <update-node tree="identifier: balanceOfRewarded [77297,77314]" label="balanceOf"/>
  <insert-node tree="{: { [72127,72128]" parent="block_statement [72127,72220]" at="0"/>
  <move-tree tree="expression_statement [25923,26007]" parent="block_statement [72127,72220]" at="1"/>
  <insert-node tree="}: } [72219,72220]" parent="block_statement [72127,72220]" at="2"/>
  <insert-node tree="{: { [72273,72274]" parent="block_statement [72273,72368]" at="0"/>
  <move-tree tree="expression_statement [25215,25280]" parent="block_statement [72273,72368]" at="1"/>
  <insert-node tree="}: } [72367,72368]" parent="block_statement [72273,72368]" at="2"/>
  <insert-node tree="identifier: recordVote [72592,72602]" parent="call_expression [72592,72631]" at="0"/>
  <update-node tree="identifier: decrementBalanceOfPhantom [77691,77716]" label="placeLock"/>
  <update-node tree="identifier: value [78807,78812]" label="candidate"/>
  <update-node tree="identifier: lessUsdc [78814,78822]" label="vote"/>
  <update-node tree="identifier: newUniv2 [78824,78832]" label="bonded"/>
  <update-node tree="identifier: priceCumulative [61924,61939]" label="endsAfter"/>
  <insert-tree tree="member_expression [72933,72982]" parent="call_expression [72933,72985]" at="0"/>
  <insert-node tree="(: ( [72982,72983]" parent="call_expression [72933,72985]" at="1"/>
  <move-tree tree="call_argument [72340,72341]" parent="call_expression [72933,72985]" at="2"/>
  <insert-node tree="): ) [72984,72985]" parent="call_expression [72933,72985]" at="3"/>
  <move-tree tree="member_expression [79068,79080]" parent="call_expression [72996,73094]" at="0"/>
  <insert-node tree="(: ( [73008,73009]" parent="call_expression [72996,73094]" at="1"/>
  <insert-tree tree="call_argument [73022,73041]" parent="call_expression [72996,73094]" at="2"/>
  <insert-node tree=",: , [73041,73042]" parent="call_expression [72996,73094]" at="3"/>
  <move-tree tree="call_argument [79176,79180]" parent="call_expression [72996,73094]" at="4"/>
  <insert-node tree=",: , [73059,73060]" parent="call_expression [72996,73094]" at="5"/>
  <move-tree tree="call_argument [76425,76463]" parent="call_expression [72996,73094]" at="6"/>
  <insert-node tree="): ) [73093,73094]" parent="call_expression [72996,73094]" at="7"/>
  <move-tree tree="member_expression [64212,64224]" parent="call_expression [73307,73433]" at="0"/>
  <insert-node tree="(: ( [73319,73320]" parent="call_expression [73307,73433]" at="1"/>
  <insert-tree tree="call_argument [73333,73377]" parent="call_expression [73307,73433]" at="2"/>
  <insert-node tree=",: , [73377,73378]" parent="call_expression [73307,73433]" at="3"/>
  <move-tree tree="call_argument [64270,64274]" parent="call_expression [73307,73433]" at="4"/>
  <insert-node tree=",: , [73395,73396]" parent="call_expression [73307,73433]" at="5"/>
  <move-tree tree="call_argument [77645,77680]" parent="call_expression [73307,73433]" at="6"/>
  <insert-node tree="): ) [73432,73433]" parent="call_expression [73307,73433]" at="7"/>
  <insert-node tree="{: { [73621,73622]" parent="block_statement [73621,73658]" at="0"/>
  <insert-node tree="return_statement [73635,73648]" parent="block_statement [73621,73658]" at="1"/>
  <insert-node tree="}: } [73657,73658]" parent="block_statement [73621,73658]" at="2"/>
  <move-tree tree="member_expression [63433,63446]" parent="call_expression [73696,73744]" at="0"/>
  <insert-node tree=",: , [73728,73729]" parent="call_expression [73696,73744]" at="3"/>
  <move-tree tree="call_argument [78594,78607]" parent="call_expression [73696,73744]" at="5"/>
  <update-node tree="identifier: usdcAmount [73360,73370]" label="epochPeriod"/>
  <move-tree tree="member_expression [55076,55091]" parent="call_argument [75157,75172]" at="0"/>
  <insert-node tree="call_expression [11646,11706]" parent="member_expression [11646,11716]" at="0"/>
  <insert-node tree=".: . [11706,11707]" parent="member_expression [11646,11716]" at="1"/>
  <insert-node tree="identifier: asUint256 [11707,11716]" parent="member_expression [11646,11716]" at="2"/>
  <insert-node tree="call_expression [13658,13677]" parent="call_argument [13658,13677]" at="0"/>
  <move-tree tree="call_expression [101680,101688]" parent="member_expression [51108,51121]" at="0"/>
  <insert-node tree=".: . [51116,51117]" parent="member_expression [51108,51121]" at="1"/>
  <insert-node tree="identifier: mint [51117,51121]" parent="member_expression [51108,51121]" at="2"/>
  <insert-node tree="call_expression [51193,51213]" parent="expression_statement [51193,51214]" at="0"/>
  <insert-tree tree="call_expression [51338,51346]" parent="member_expression [51338,51359]" at="0"/>
  <update-node tree="identifier: LibEIP712 [45197,45206]" label="transferFrom"/>
  <move-tree tree="call_expression [101985,101993]" parent="member_expression [51836,51849]" at="0"/>
  <insert-node tree=".: . [51844,51845]" parent="member_expression [51836,51849]" at="1"/>
  <insert-node tree="identifier: burn [51845,51849]" parent="member_expression [51836,51849]" at="2"/>
  <insert-node tree="call_expression [53443,53535]" parent="call_argument [53443,53535]" at="0"/>
  <update-node tree="identifier: balanceOf [79102,79111]" label="mint"/>
  <update-node tree="identifier: lessUsdc [78369,78377]" label="lessRedeemable"/>
  <insert-node tree="call_expression [56873,56895]" parent="call_argument [56873,56895]" at="0"/>
  <insert-node tree="identifier: dollarAmount [57319,57331]" parent="member_expression [57319,57335]" at="0"/>
  <update-node tree="identifier: value [77638,77643]" label="epoch"/>
  <insert-node tree="identifier: couponAmount [57817,57829]" parent="call_argument [57817,57829]" at="0"/>
  <update-node tree="identifier: recipient [17686,17695]" label="epoch"/>
  <move-tree tree="member_expression [11038,11048]" parent="binary_expression [58645,58665]" at="0"/>
  <insert-node tree="!=: != [58656,58658]" parent="binary_expression [58645,58665]" at="1"/>
  <insert-node tree="identifier: sender [58659,58665]" parent="binary_expression [58645,58665]" at="2"/>
  <move-tree tree="call_expression [48352,48440]" parent="expression_statement [58736,58830]" at="0"/>
  <move-tree tree="call_argument [48388,48394]" parent="call_expression [58736,58829]" at="3"/>
  <update-node tree="identifier: add [68748,68751]" label="asUint256"/>
  <update-node tree="identifier: price0Cumulative [63090,63106]" label="newRedeemable"/>
  <update-node tree="identifier: price1Cumulative [63116,63132]" label="lessDebt"/>
  <move-tree tree="type_name [78379,78386]" parent="variable_declaration [60801,60818]" at="0"/>
  <update-node tree="identifier: blockTimestamp [63141,63155]" label="newBonded"/>
  <insert-node tree="identifier: newSupply [60837,60846]" parent="call_argument [60837,60846]" at="0"/>
  <update-node tree="identifier: setup [101709,101714]" label="capture"/>
  <move-tree tree="call_expression [61789,61802]" parent="return_statement [61489,61510]" at="1"/>
  <move-tree tree="ternary_expression [76755,76828]" parent="member_expression [64922,65044]" at="0"/>
  <update-node tree="identifier: value [76083,76088]" label="balance"/>
  <move-tree tree="call_expression [77297,77370]" parent="member_expression [65443,65485]" at="0"/>
  <update-node tree="identifier: mul [77431,77434]" label="div"/>
  <move-tree tree="call_expression [77402,77430]" parent="call_argument [65486,65507]" at="0"/>
  <update-node tree="identifier: newPhantom [76999,77009]" label="balance"/>
  <insert-node tree="call_expression [71431,71566]" parent="expression_statement [71431,71567]" at="0"/>
  <insert-node tree="call_expression [71779,71834]" parent="call_argument [71779,71834]" at="0"/>
  <update-node tree="identifier: pair [73648,73652]" label="candidate"/>
  <update-node tree="identifier: usdcAmount [73654,73664]" label="vote"/>
  <update-node tree="identifier: lessPhantom [77729,77740]" label="candidate"/>
  <insert-tree tree="call_expression [72823,72845]" parent="call_argument [72823,72845]" at="0"/>
  <insert-tree tree="call_expression [73131,73236]" parent="call_argument [73131,73236]" at="0"/>
  <insert-node tree="return: return [73635,73641]" parent="return_statement [73635,73648]" at="0"/>
  <move-tree tree="boolean_literal [61804,61809]" parent="return_statement [73635,73648]" at="1"/>
  <insert-node tree="member_expression [11646,11698]" parent="call_expression [11646,11706]" at="0"/>
  <insert-node tree="(: ( [11698,11699]" parent="call_expression [11646,11706]" at="1"/>
  <move-tree tree="call_argument [17783,17789]" parent="call_expression [11646,11706]" at="2"/>
  <insert-node tree="): ) [11705,11706]" parent="call_expression [11646,11706]" at="3"/>
  <insert-tree tree="member_expression [13658,13671]" parent="call_expression [13658,13677]" at="0"/>
  <insert-node tree="(: ( [13671,13672]" parent="call_expression [13658,13677]" at="1"/>
  <move-tree tree="call_argument [52423,52424]" parent="call_expression [13658,13677]" at="2"/>
  <insert-node tree=",: , [13673,13674]" parent="call_expression [13658,13677]" at="3"/>
  <insert-tree tree="call_argument [13675,13676]" parent="call_expression [13658,13677]" at="4"/>
  <insert-node tree="): ) [13676,13677]" parent="call_expression [13658,13677]" at="5"/>
  <insert-node tree="identifier: increaseDebt [51193,51205]" parent="call_expression [51193,51213]" at="0"/>
  <insert-node tree="(: ( [51205,51206]" parent="call_expression [51193,51213]" at="1"/>
  <move-tree tree="call_argument [20084,20090]" parent="call_expression [51193,51213]" at="2"/>
  <insert-node tree="): ) [51212,51213]" parent="call_expression [51193,51213]" at="3"/>
  <insert-node tree="member_expression [53443,53516]" parent="call_expression [53443,53535]" at="0"/>
  <insert-node tree="(: ( [53516,53517]" parent="call_expression [53443,53535]" at="1"/>
  <insert-tree tree="call_argument [53517,53534]" parent="call_expression [53443,53535]" at="2"/>
  <insert-node tree="): ) [53534,53535]" parent="call_expression [53443,53535]" at="3"/>
  <update-node tree="identifier: univ2 [79094,79099]" label="dollar"/>
  <update-node tree="identifier: IUniswapV2Pair [73695,73709]" label="dollar"/>
  <insert-node tree="member_expression [56873,56893]" parent="call_expression [56873,56895]" at="0"/>
  <insert-node tree="(: ( [56893,56894]" parent="call_expression [56873,56895]" at="1"/>
  <insert-node tree="): ) [56894,56895]" parent="call_expression [56873,56895]" at="2"/>
  <update-node tree="identifier: owner [21899,21904]" label="dollarAmount"/>
  <insert-node tree="&gt;: &gt; [57053,57054]" parent="binary_expression [57040,57056]" at="1"/>
  <insert-node tree="number_literal: 0 [57055,57056]" parent="binary_expression [57040,57056]" at="2"/>
  <insert-tree tree="call_expression [57166,57177]" parent="binary_expression [57166,57193]" at="0"/>
  <insert-node tree="&gt;=: &gt;= [57178,57180]" parent="binary_expression [57166,57193]" at="1"/>
  <update-node tree="identifier: recovered [45895,45904]" label="dollarAmount"/>
  <update-node tree="identifier: totalPhantom [76676,76688]" label="couponPremium"/>
  <move-tree tree="call_argument [73472,73484]" parent="call_expression [57336,57363]" at="2"/>
  <update-node tree="identifier: allowance [48210,48219]" label="allowanceCoupons"/>
  <insert-node tree="identifier: decrementAllowanceCoupons [58736,58761]" parent="call_expression [58736,58829]" at="0"/>
  <move-tree tree="call_argument [48298,48304]" parent="call_expression [58736,58829]" at="3"/>
  <insert-tree tree="call_argument [58770,58780]" parent="call_expression [58736,58829]" at="4"/>
  <insert-node tree=",: , [58780,58781]" parent="call_expression [58736,58829]" at="5"/>
  <insert-node tree=",: , [58788,58789]" parent="call_expression [58736,58829]" at="7"/>
  <insert-tree tree="member_expression [60408,60417]" parent="call_expression [60408,60429]" at="0"/>
  <insert-tree tree="call_argument [60418,60428]" parent="call_expression [60408,60429]" at="2"/>
  <update-node tree="identifier: univ2 [75792,75797]" label="dollar"/>
  <move-tree tree="binary_expression [76722,76740]" parent="ternary_expression [64922,65040]" at="0"/>
  <insert-tree tree="call_expression [65016,65040]" parent="ternary_expression [64922,65040]" at="4"/>
  <move-tree tree=".: . [77337,77338]" parent="member_expression [65443,65452]" at="2"/>
  <update-node tree="identifier: balanceOfPhantom [77402,77418]" label="balanceOf"/>
  <insert-node tree="&gt;: &gt; [71315,71316]" parent="binary_expression [71293,71318]" at="1"/>
  <insert-node tree="number_literal: 0 [71317,71318]" parent="binary_expression [71293,71318]" at="2"/>
  <insert-tree tree="member_expression [71431,71443]" parent="call_expression [71431,71566]" at="0"/>
  <insert-node tree="(: ( [71443,71444]" parent="call_expression [71431,71566]" at="1"/>
  <insert-tree tree="call_argument [71461,71483]" parent="call_expression [71431,71566]" at="2"/>
  <insert-node tree=",: , [71483,71484]" parent="call_expression [71431,71566]" at="3"/>
  <insert-tree tree="call_argument [71501,71505]" parent="call_expression [71431,71566]" at="4"/>
  <insert-node tree=",: , [71505,71506]" parent="call_expression [71431,71566]" at="5"/>
  <move-tree tree="call_argument [24991,25024]" parent="call_expression [71431,71566]" at="6"/>
  <insert-node tree="): ) [71565,71566]" parent="call_expression [71431,71566]" at="7"/>
  <move-tree tree="member_expression [69095,69141]" parent="call_expression [71779,71834]" at="0"/>
  <insert-node tree="(: ( [71812,71813]" parent="call_expression [71779,71834]" at="1"/>
  <insert-tree tree="call_argument [71813,71833]" parent="call_expression [71779,71834]" at="2"/>
  <insert-node tree="): ) [71833,71834]" parent="call_expression [71779,71834]" at="3"/>
  <update-node tree="identifier: require [25923,25930]" label="decrementRejectFor"/>
  <insert-tree tree="call_argument [72160,72169]" parent="call_expression [72141,72209]" at="2"/>
  <insert-tree tree="call_argument [72171,72177]" parent="call_expression [72141,72209]" at="4"/>
  <insert-node tree=",: , [72177,72178]" parent="call_expression [72141,72209]" at="5"/>
  <update-node tree="identifier: require [25215,25222]" label="decrementApproveFor"/>
  <insert-tree tree="call_argument [72307,72316]" parent="call_expression [72287,72357]" at="2"/>
  <insert-tree tree="call_argument [72318,72324]" parent="call_expression [72287,72357]" at="4"/>
  <insert-node tree=",: , [72324,72325]" parent="call_expression [72287,72357]" at="5"/>
  <update-node tree="identifier: balanceOfBonded [68858,68873]" label="balanceOf"/>
  <insert-node tree="call_expression [11646,11694]" parent="member_expression [11646,11698]" at="0"/>
  <insert-node tree=".: . [11694,11695]" parent="member_expression [11646,11698]" at="1"/>
  <insert-node tree="identifier: mul [11695,11698]" parent="member_expression [11646,11698]" at="2"/>
  <move-tree tree="call_expression [78914,78988]" parent="member_expression [53443,53516]" at="0"/>
  <insert-node tree=".: . [53512,53513]" parent="member_expression [53443,53516]" at="1"/>
  <insert-node tree="identifier: add [53513,53516]" parent="member_expression [53443,53516]" at="2"/>
  <move-tree tree="call_expression [73255,73263]" parent="member_expression [56873,56893]" at="0"/>
  <insert-node tree=".: . [56881,56882]" parent="member_expression [56873,56893]" at="1"/>
  <insert-node tree="identifier: totalSupply [56882,56893]" parent="member_expression [56873,56893]" at="2"/>
  <insert-tree tree="member_expression [58694,58704]" parent="call_argument [58694,58704]" at="0"/>
  <update-node tree="identifier: div [77338,77341]" label="value"/>
  <insert-node tree="identifier: mul [65449,65452]" parent="member_expression [65443,65452]" at="2"/>
  <update-node tree="identifier: balanceOfRewarded [78238,78255]" label="balanceOf"/>
  <move-tree tree="binary_expression [69095,69121]" parent="member_expression [71779,71812]" at="0"/>
  <update-node tree="identifier: fluidUntil [69131,69141]" label="add"/>
  <insert-node tree="identifier: effectivePremium [11646,11662]" parent="call_expression [11646,11694]" at="0"/>
  <insert-node tree="(: ( [11662,11663]" parent="call_expression [11646,11694]" at="1"/>
  <insert-tree tree="call_argument [11663,11674]" parent="call_expression [11646,11694]" at="2"/>
  <insert-node tree=",: , [11674,11675]" parent="call_expression [11646,11694]" at="3"/>
  <insert-tree tree="call_argument [11676,11685]" parent="call_expression [11646,11694]" at="4"/>
  <insert-node tree=",: , [11685,11686]" parent="call_expression [11646,11694]" at="5"/>
  <move-tree tree="call_argument [22490,22496]" parent="call_expression [11646,11694]" at="6"/>
  <insert-node tree="): ) [11693,11694]" parent="call_expression [11646,11694]" at="7"/>
  <insert-node tree="identifier: value [64955,64960]" parent="member_expression [64955,64964]" at="0"/>
  <move-tree tree="call_expression [76778,76813]" parent="call_argument [64965,65000]" at="0"/>
  <insert-node tree="&lt;: &lt; [71787,71788]" parent="binary_expression [71779,71808]" at="1"/>
  <insert-tree tree="call_expression [71789,71808]" parent="binary_expression [71779,71808]" at="2"/>
  <move-tree tree="call_expression [79130,79143]" parent="call_argument [53498,53511]" at="0"/>
  <move-tree tree="call_expression [68609,68622]" parent="binary_expression [53443,53493]" at="2"/>
  <delete-node tree="contract: contract [10696,10704]"/>
  <delete-node tree="identifier: Context [10705,10712]"/>
  <delete-node tree="{: { [10713,10714]"/>
  <delete-node tree="comment: // Empty internal constructor, to prevent people from mistakenly deploying [10719,10793]"/>
  <delete-node tree="comment: // an instance of this contract, which should be used via inheritance. [10798,10868]"/>
  <delete-tree tree="constructor_definition [10873,10900]"/>
  <delete-node tree="comment: // solhint-disable-previous-line no-empty-blocks [10905,10953]"/>
  <delete-node tree="function: function [10959,10967]"/>
  <delete-node tree="identifier: _msgSender [10968,10978]"/>
  <delete-node tree="(: ( [10978,10979]"/>
  <delete-node tree="): ) [10979,10980]"/>
  <delete-tree tree="visibility [10981,10989]"/>
  <delete-tree tree="state_mutability [10990,10994]"/>
  <delete-tree tree="return_type_definition [10995,11020]"/>
  <delete-node tree="{: { [11021,11022]"/>
  <delete-node tree="return: return [11031,11037]"/>
  <delete-node tree="return_statement [11031,11049]"/>
  <delete-node tree="}: } [11054,11055]"/>
  <delete-node tree="function_body [11021,11055]"/>
  <delete-node tree="function_definition [10959,11055]"/>
  <delete-tree tree="function_definition [11061,11283]"/>
  <delete-node tree="}: } [11284,11285]"/>
  <delete-node tree="contract_body [10713,11285]"/>
  <delete-node tree="contract_declaration [10696,11285]"/>
  <delete-node tree="contract: contract [22758,22766]"/>
  <delete-node tree="identifier: ERC20Burnable [22767,22780]"/>
  <delete-node tree="is: is [22781,22783]"/>
  <delete-tree tree="inheritance_specifier [22784,22791]"/>
  <delete-node tree=",: , [22791,22792]"/>
  <delete-tree tree="inheritance_specifier [22793,22798]"/>
  <delete-node tree="{: { [22799,22800]"/>
  <delete-node tree="comment: /**      * @dev Destroys `amount` tokens from the caller.      *      * See {ERC20-_burn}.      */ [22805,22903]"/>
  <delete-node tree="function: function [22908,22916]"/>
  <delete-node tree="identifier: burn [22917,22921]"/>
  <delete-node tree="(: ( [22921,22922]"/>
  <delete-node tree="): ) [22936,22937]"/>
  <delete-tree tree="visibility [22938,22944]"/>
  <delete-node tree="{: { [22945,22946]"/>
  <delete-node tree="identifier: _burn [22955,22960]"/>
  <delete-node tree="(: ( [22960,22961]"/>
  <delete-tree tree="call_argument [22961,22973]"/>
  <delete-node tree=",: , [22973,22974]"/>
  <delete-node tree="): ) [22981,22982]"/>
  <delete-node tree="call_expression [22955,22982]"/>
  <delete-node tree="expression_statement [22955,22983]"/>
  <delete-node tree="}: } [22988,22989]"/>
  <delete-node tree="function_body [22945,22989]"/>
  <delete-node tree="function_definition [22908,22989]"/>
  <delete-node tree="comment: /**      * @dev See {ERC20-_burnFrom}.      */ [22995,23041]"/>
  <delete-node tree="}: } [23148,23149]"/>
  <delete-node tree="contract_body [22799,23149]"/>
  <delete-node tree="contract_declaration [22758,23149]"/>
  <delete-node tree="comment: /**  * @dev Optional functions from the ERC20 standard.  */ [23151,23210]"/>
  <delete-node tree="contract: contract [23211,23219]"/>
  <delete-node tree="identifier: ERC20Detailed [23220,23233]"/>
  <delete-node tree="is: is [23234,23236]"/>
  <delete-tree tree="inheritance_specifier [23237,23243]"/>
  <delete-node tree="{: { [23244,23245]"/>
  <delete-tree tree="state_variable_declaration [23250,23271]"/>
  <delete-tree tree="type_name [23276,23282]"/>
  <delete-node tree="identifier: _symbol [23291,23298]"/>
  <delete-node tree="state_variable_declaration [23276,23299]"/>
  <delete-tree tree="type_name [23304,23309]"/>
  <delete-node tree="identifier: _decimals [23318,23327]"/>
  <delete-node tree="state_variable_declaration [23304,23328]"/>
  <delete-node tree="comment: /**      * @dev Sets the values for `name`, `symbol`, and `decimals`. All three of      * these values are immutable: they can only be set once during      * construction.      */ [23334,23513]"/>
  <delete-tree tree="constructor_definition [23518,23681]"/>
  <delete-node tree="comment: /**      * @dev Returns the name of the token.      */ [23687,23741]"/>
  <delete-tree tree="function_definition [23746,23827]"/>
  <delete-node tree="comment: /**      * @dev Returns the symbol of the token, usually a shorter version of the      * name.      */ [23833,23935]"/>
  <delete-tree tree="function_definition [23940,24025]"/>
  <delete-node tree="comment: /**      * @dev Returns the number of decimals used to get its user representation.      * For example, if `decimals` equals `2`, a balance of `505` tokens should      * be displayed to a user as `5,05` (`505 / 10 ** 2`).      *      * Tokens usually opt for a value of 18, imitating the relationship between      * Ether and Wei.      *      * NOTE: This information is only used for _display_ purposes: it in      * no way affects any of the arithmetic of the contract, including      * {IERC20-balanceOf} and {IERC20-transfer}.      */ [24031,24569]"/>
  <delete-tree tree="function_definition [24574,24655]"/>
  <delete-node tree="}: } [24656,24657]"/>
  <delete-node tree="contract_body [23244,24657]"/>
  <delete-node tree="contract_declaration [23211,24657]"/>
  <delete-node tree="comment: /**  * @title Roles  * @dev Library for managing addresses assigned to a Role.  */ [24659,24741]"/>
  <delete-node tree="library: library [24742,24749]"/>
  <delete-node tree="identifier: Roles [24750,24755]"/>
  <delete-node tree="{: { [24756,24757]"/>
  <delete-tree tree="struct_declaration [24762,24823]"/>
  <delete-node tree="comment: /**      * @dev Give an account access to this role.      */ [24829,24889]"/>
  <delete-node tree="function: function [24894,24902]"/>
  <delete-node tree="identifier: add [24903,24906]"/>
  <delete-node tree="(: ( [24906,24907]"/>
  <delete-tree tree="parameter [24907,24924]"/>
  <delete-node tree=",: , [24924,24925]"/>
  <delete-tree tree="parameter [24926,24941]"/>
  <delete-node tree="): ) [24941,24942]"/>
  <delete-tree tree="visibility [24943,24951]"/>
  <delete-node tree="{: { [24952,24953]"/>
  <delete-node tree="identifier: require [24962,24969]"/>
  <delete-node tree="(: ( [24969,24970]"/>
  <delete-tree tree="call_argument [24970,24989]"/>
  <delete-node tree=",: , [24989,24990]"/>
  <delete-node tree="): ) [25024,25025]"/>
  <delete-node tree="call_expression [24962,25025]"/>
  <delete-node tree="expression_statement [24962,25026]"/>
  <delete-tree tree="expression_statement [25035,25063]"/>
  <delete-node tree="}: } [25068,25069]"/>
  <delete-node tree="function_body [24952,25069]"/>
  <delete-node tree="function_definition [24894,25069]"/>
  <delete-node tree="comment: /**      * @dev Remove an account's access to this role.      */ [25075,25139]"/>
  <delete-node tree="function: function [25144,25152]"/>
  <delete-node tree="identifier: remove [25153,25159]"/>
  <delete-node tree="(: ( [25159,25160]"/>
  <delete-tree tree="parameter [25160,25177]"/>
  <delete-node tree=",: , [25177,25178]"/>
  <delete-tree tree="parameter [25179,25194]"/>
  <delete-node tree="): ) [25194,25195]"/>
  <delete-tree tree="visibility [25196,25204]"/>
  <delete-node tree="{: { [25205,25206]"/>
  <delete-tree tree="expression_statement [25289,25318]"/>
  <delete-node tree="}: } [25323,25324]"/>
  <delete-node tree="function_body [25205,25324]"/>
  <delete-node tree="function_definition [25144,25324]"/>
  <delete-node tree="comment: /**      * @dev Check if an account has this role.      * @return bool      */ [25330,25408]"/>
  <delete-tree tree="function_definition [25413,25613]"/>
  <delete-node tree="}: } [25614,25615]"/>
  <delete-node tree="contract_body [24756,25615]"/>
  <delete-node tree="library_declaration [24742,25615]"/>
  <delete-node tree="contract: contract [25617,25625]"/>
  <delete-node tree="identifier: MinterRole [25626,25636]"/>
  <delete-node tree="is: is [25637,25639]"/>
  <delete-tree tree="inheritance_specifier [25640,25647]"/>
  <delete-node tree="{: { [25648,25649]"/>
  <delete-tree tree="using_directive [25654,25681]"/>
  <delete-node tree="event: event [25735,25740]"/>
  <delete-node tree="identifier: MinterRemoved [25741,25754]"/>
  <delete-node tree="(: ( [25754,25755]"/>
  <delete-node tree="): ) [25778,25779]"/>
  <delete-node tree="event_definition [25735,25780]"/>
  <delete-tree tree="type_name [25786,25796]"/>
  <delete-node tree="identifier: _minters [25805,25813]"/>
  <delete-node tree="state_variable_declaration [25786,25814]"/>
  <delete-tree tree="constructor_definition [25820,25885]"/>
  <delete-node tree="modifier: modifier [25891,25899]"/>
  <delete-node tree="identifier: onlyMinter [25900,25910]"/>
  <delete-node tree="(: ( [25910,25911]"/>
  <delete-node tree="): ) [25911,25912]"/>
  <delete-node tree="{: { [25913,25914]"/>
  <delete-tree tree="expression_statement [26016,26018]"/>
  <delete-node tree="}: } [26023,26024]"/>
  <delete-node tree="function_body [25913,26024]"/>
  <delete-node tree="modifier_definition [25891,26024]"/>
  <delete-node tree="function: function [26030,26038]"/>
  <delete-node tree="identifier: isMinter [26039,26047]"/>
  <delete-node tree="(: ( [26047,26048]"/>
  <delete-node tree="): ) [26063,26064]"/>
  <delete-tree tree="visibility [26065,26071]"/>
  <delete-tree tree="state_mutability [26072,26076]"/>
  <delete-tree tree="return_type_definition [26077,26091]"/>
  <delete-tree tree="function_body [26092,26137]"/>
  <delete-node tree="function_definition [26030,26137]"/>
  <delete-node tree="function: function [26143,26151]"/>
  <delete-node tree="identifier: addMinter [26152,26161]"/>
  <delete-node tree="(: ( [26161,26162]"/>
  <delete-node tree="): ) [26177,26178]"/>
  <delete-tree tree="visibility [26179,26185]"/>
  <delete-tree tree="modifier_invocation [26186,26196]"/>
  <delete-node tree="{: { [26197,26198]"/>
  <delete-node tree="identifier: _addMinter [26207,26217]"/>
  <delete-node tree="(: ( [26217,26218]"/>
  <delete-node tree="): ) [26225,26226]"/>
  <delete-node tree="call_expression [26207,26226]"/>
  <delete-node tree="expression_statement [26207,26227]"/>
  <delete-node tree="}: } [26232,26233]"/>
  <delete-node tree="function_body [26197,26233]"/>
  <delete-node tree="function_definition [26143,26233]"/>
  <delete-tree tree="function_definition [26239,26316]"/>
  <delete-node tree="function: function [26322,26330]"/>
  <delete-node tree="identifier: _addMinter [26331,26341]"/>
  <delete-node tree="(: ( [26341,26342]"/>
  <delete-tree tree="parameter [26342,26357]"/>
  <delete-node tree="): ) [26357,26358]"/>
  <delete-tree tree="function_body [26368,26441]"/>
  <delete-node tree="function_definition [26322,26441]"/>
  <delete-node tree="function: function [26447,26455]"/>
  <delete-node tree="identifier: _removeMinter [26456,26469]"/>
  <delete-node tree="(: ( [26469,26470]"/>
  <delete-tree tree="parameter [26470,26485]"/>
  <delete-node tree="): ) [26485,26486]"/>
  <delete-tree tree="function_body [26496,26574]"/>
  <delete-node tree="function_definition [26447,26574]"/>
  <delete-node tree="}: } [26575,26576]"/>
  <delete-node tree="contract_body [25648,26576]"/>
  <delete-node tree="contract_declaration [25617,26576]"/>
  <delete-node tree="comment: /*     Copyright 2019 dYdX Trading Inc.      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [26578,27177]"/>
  <delete-node tree="comment: /**  * @title Require  * @author dYdX  *  * Stringifies parameters to pretty-print revert messages. Costs more gas than regular require()  */ [27178,27319]"/>
  <delete-node tree="comment: /*     Copyright 2019 ZeroEx Intl.      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [36903,37497]"/>
  <delete-node tree="library: library [37498,37505]"/>
  <delete-node tree="identifier: LibEIP712 [37506,37515]"/>
  <delete-node tree="{: { [37516,37517]"/>
  <delete-node tree="comment: // Hash of the EIP712 Domain Separator Schema [37523,37568]"/>
  <delete-node tree="comment: // keccak256(abi.encodePacked( [37573,37603]"/>
  <delete-node tree="comment: //     &quot;EIP712Domain(&quot;, [37608,37631]"/>
  <delete-node tree="comment: //     &quot;string name,&quot;, [37636,37658]"/>
  <delete-node tree="comment: //     &quot;string version,&quot;, [37663,37688]"/>
  <delete-node tree="comment: //     &quot;uint256 chainId,&quot;, [37693,37719]"/>
  <delete-node tree="comment: //     &quot;address verifyingContract&quot;, [37724,37759]"/>
  <delete-node tree="comment: //     &quot;)&quot; [37764,37774]"/>
  <delete-node tree="comment: // )) [37779,37784]"/>
  <delete-tree tree="state_variable_declaration [37789,37921]"/>
  <delete-node tree="comment: /// @dev Calculates a EIP712 domain separator. [37927,37973]"/>
  <delete-node tree="comment: /// @param name The EIP712 domain name. [37978,38017]"/>
  <delete-node tree="comment: /// @param version The EIP712 domain version. [38022,38067]"/>
  <delete-node tree="comment: /// @param verifyingContract The EIP712 verifying contract. [38072,38131]"/>
  <delete-node tree="comment: /// @return EIP712 domain separator. [38136,38172]"/>
  <delete-node tree="function: function [38177,38185]"/>
  <delete-node tree="identifier: hashEIP712Domain [38186,38202]"/>
  <delete-node tree="(: ( [38202,38203]"/>
  <delete-tree tree="parameter [38212,38230]"/>
  <delete-node tree=",: , [38230,38231]"/>
  <delete-tree tree="parameter [38240,38261]"/>
  <delete-node tree=",: , [38261,38262]"/>
  <delete-node tree=",: , [38286,38287]"/>
  <delete-tree tree="parameter [38296,38321]"/>
  <delete-node tree="): ) [38326,38327]"/>
  <delete-tree tree="visibility [38332,38340]"/>
  <delete-tree tree="return_type_definition [38354,38378]"/>
  <delete-tree tree="function_body [38383,39412]"/>
  <delete-node tree="function_definition [38177,39412]"/>
  <delete-node tree="comment: /// @dev Calculates EIP712 encoding for a hash struct with a given domain hash. [39418,39497]"/>
  <delete-node tree="comment: /// @param eip712DomainHash Hash of the domain domain separator data, computed [39502,39580]"/>
  <delete-node tree="comment: ///                         with getDomainHash(). [39585,39634]"/>
  <delete-node tree="comment: /// @param hashStruct The EIP712 hash struct. [39639,39684]"/>
  <delete-node tree="comment: /// @return EIP712 hash applied to the given EIP712 Domain. [39689,39748]"/>
  <delete-node tree="function: function [39753,39761]"/>
  <delete-node tree="identifier: hashEIP712Message [39762,39779]"/>
  <delete-node tree="(: ( [39779,39780]"/>
  <delete-tree tree="parameter [39780,39804]"/>
  <delete-node tree=",: , [39804,39805]"/>
  <delete-tree tree="parameter [39806,39824]"/>
  <delete-node tree="): ) [39824,39825]"/>
  <delete-tree tree="visibility [39830,39838]"/>
  <delete-tree tree="return_type_definition [39852,39876]"/>
  <delete-tree tree="function_body [39881,40623]"/>
  <delete-node tree="function_definition [39753,40623]"/>
  <delete-node tree="}: } [40624,40625]"/>
  <delete-node tree="contract_body [37516,40625]"/>
  <delete-node tree="library_declaration [37498,40625]"/>
  <delete-node tree="contract: contract [44683,44691]"/>
  <delete-node tree="identifier: Permittable [44692,44703]"/>
  <delete-node tree="is: is [44704,44706]"/>
  <delete-tree tree="inheritance_specifier [44707,44720]"/>
  <delete-node tree=",: , [44720,44721]"/>
  <delete-tree tree="inheritance_specifier [44722,44727]"/>
  <delete-node tree="{: { [44728,44729]"/>
  <delete-tree tree="state_variable_declaration [44734,44772]"/>
  <delete-node tree="comment: // keccak256(&quot;Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)&quot;); [44778,44877]"/>
  <delete-tree tree="state_variable_declaration [44882,44998]"/>
  <delete-tree tree="type_name [45003,45009]"/>
  <delete-node tree="constant: constant [45018,45026]"/>
  <delete-node tree="identifier: EIP712_VERSION [45027,45041]"/>
  <delete-node tree="=: = [45042,45043]"/>
  <delete-tree tree="string_literal [45044,45047]"/>
  <delete-node tree="state_variable_declaration [45003,45048]"/>
  <delete-tree tree="state_variable_declaration [45054,45093]"/>
  <delete-node tree="mapping: mapping [45099,45106]"/>
  <delete-node tree="(: ( [45106,45107]"/>
  <delete-tree tree="primitive_type [45107,45114]"/>
  <delete-node tree="=&gt;: =&gt; [45115,45117]"/>
  <delete-node tree="): ) [45125,45126]"/>
  <delete-node tree="type_name [45099,45126]"/>
  <delete-node tree="identifier: nonces [45127,45133]"/>
  <delete-node tree="state_variable_declaration [45099,45134]"/>
  <delete-node tree="constructor: constructor [45140,45151]"/>
  <delete-node tree="(: ( [45151,45152]"/>
  <delete-node tree="): ) [45152,45153]"/>
  <delete-node tree="public: public [45154,45160]"/>
  <delete-node tree="constructor_definition [45140,45293]"/>
  <delete-node tree="function: function [45299,45307]"/>
  <delete-node tree="identifier: permit [45308,45314]"/>
  <delete-node tree="(: ( [45314,45315]"/>
  <delete-tree tree="parameter [45324,45337]"/>
  <delete-node tree=",: , [45337,45338]"/>
  <delete-tree tree="parameter [45347,45362]"/>
  <delete-node tree=",: , [45362,45363]"/>
  <delete-node tree=",: , [45385,45386]"/>
  <delete-node tree=",: , [45411,45412]"/>
  <delete-tree tree="parameter [45421,45428]"/>
  <delete-node tree=",: , [45428,45429]"/>
  <delete-tree tree="parameter [45438,45447]"/>
  <delete-node tree=",: , [45447,45448]"/>
  <delete-tree tree="parameter [45457,45466]"/>
  <delete-node tree="): ) [45471,45472]"/>
  <delete-node tree="{: { [45482,45483]"/>
  <delete-tree tree="variable_declaration_statement [45492,45803]"/>
  <delete-tree tree="variable_declaration_statement [45813,45860]"/>
  <delete-node tree="(: ( [45997,45998]"/>
  <delete-tree tree="call_argument [46011,46034]"/>
  <delete-node tree=",: , [46034,46035]"/>
  <delete-node tree=",: , [46052,46053]"/>
  <delete-node tree="): ) [46089,46090]"/>
  <delete-node tree="call_expression [45985,46090]"/>
  <delete-node tree="expression_statement [45985,46091]"/>
  <delete-node tree="identifier: _approve [46204,46212]"/>
  <delete-node tree="(: ( [46212,46213]"/>
  <delete-tree tree="call_argument [46213,46218]"/>
  <delete-node tree=",: , [46218,46219]"/>
  <delete-node tree=",: , [46227,46228]"/>
  <delete-node tree="): ) [46234,46235]"/>
  <delete-node tree="call_expression [46204,46235]"/>
  <delete-node tree="expression_statement [46204,46236]"/>
  <delete-node tree="}: } [46241,46242]"/>
  <delete-node tree="function_body [45482,46242]"/>
  <delete-node tree="function_definition [45299,46242]"/>
  <delete-node tree="}: } [46243,46244]"/>
  <delete-node tree="contract_body [44728,46244]"/>
  <delete-node tree="contract_declaration [44683,46244]"/>
  <delete-node tree="contract: contract [47715,47723]"/>
  <delete-node tree="identifier: Dollar [47724,47730]"/>
  <delete-node tree="is: is [47731,47733]"/>
  <delete-tree tree="inheritance_specifier [47734,47741]"/>
  <delete-node tree=",: , [47741,47742]"/>
  <delete-tree tree="inheritance_specifier [47743,47753]"/>
  <delete-node tree=",: , [47753,47754]"/>
  <delete-tree tree="inheritance_specifier [47755,47768]"/>
  <delete-node tree=",: , [47768,47769]"/>
  <delete-tree tree="inheritance_specifier [47770,47781]"/>
  <delete-node tree=",: , [47781,47782]"/>
  <delete-tree tree="inheritance_specifier [47783,47796]"/>
  <delete-node tree="{: { [47797,47798]"/>
  <delete-tree tree="constructor_definition [47804,47903]"/>
  <delete-node tree="function: function [48055,48063]"/>
  <delete-node tree="identifier: transferFrom [48064,48076]"/>
  <delete-node tree="(: ( [48076,48077]"/>
  <delete-tree tree="parameter [48077,48091]"/>
  <delete-node tree=",: , [48091,48092]"/>
  <delete-tree tree="parameter [48093,48110]"/>
  <delete-node tree=",: , [48110,48111]"/>
  <delete-node tree="): ) [48126,48127]"/>
  <delete-tree tree="return_type_definition [48135,48149]"/>
  <delete-node tree="{: { [48150,48151]"/>
  <delete-node tree="identifier: _transfer [48160,48169]"/>
  <delete-node tree="(: ( [48169,48170]"/>
  <delete-tree tree="call_argument [48170,48176]"/>
  <delete-node tree=",: , [48176,48177]"/>
  <delete-node tree=",: , [48187,48188]"/>
  <delete-node tree="): ) [48195,48196]"/>
  <delete-node tree="call_expression [48160,48196]"/>
  <delete-node tree="expression_statement [48160,48197]"/>
  <delete-tree tree="return_statement [48461,48473]"/>
  <delete-node tree="}: } [48478,48479]"/>
  <delete-node tree="function_body [48150,48479]"/>
  <delete-node tree="function_definition [48055,48479]"/>
  <delete-node tree="}: } [48480,48481]"/>
  <delete-node tree="contract_body [47797,48481]"/>
  <delete-node tree="contract_declaration [47715,48481]"/>
  <delete-node tree="interface: interface [48483,48492]"/>
  <delete-node tree="identifier: IUniswapV2Factory [48493,48510]"/>
  <delete-node tree="{: { [48511,48512]"/>
  <delete-tree tree="function_definition [48609,48658]"/>
  <delete-tree tree="function_definition [48663,48718]"/>
  <delete-tree tree="function_definition [48724,48810]"/>
  <delete-tree tree="function_definition [48815,48876]"/>
  <delete-tree tree="function_definition [48881,48936]"/>
  <delete-tree tree="function_definition [48942,49026]"/>
  <delete-tree tree="function_definition [49032,49068]"/>
  <delete-tree tree="function_definition [49073,49115]"/>
  <delete-node tree="}: } [49116,49117]"/>
  <delete-node tree="contract_body [48511,49117]"/>
  <delete-node tree="interface_declaration [48483,49117]"/>
  <delete-node tree="comment: // computes square roots using the babylonian method [51518,51570]"/>
  <delete-node tree="comment: // https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method [51571,51655]"/>
  <delete-node tree="library: library [51656,51663]"/>
  <delete-node tree="identifier: Babylonian [51664,51674]"/>
  <delete-node tree="{: { [51675,51676]"/>
  <delete-node tree="function: function [51681,51689]"/>
  <delete-node tree="identifier: sqrt [51690,51694]"/>
  <delete-node tree="(: ( [51694,51695]"/>
  <delete-tree tree="parameter [51695,51701]"/>
  <delete-node tree="): ) [51701,51702]"/>
  <delete-tree tree="visibility [51703,51711]"/>
  <delete-tree tree="return_type_definition [51717,51733]"/>
  <delete-tree tree="function_body [51734,51995]"/>
  <delete-node tree="function_definition [51681,51995]"/>
  <delete-node tree="}: } [51996,51997]"/>
  <delete-node tree="contract_body [51675,51997]"/>
  <delete-node tree="library_declaration [51656,51997]"/>
  <delete-node tree="comment: // a library for handling binary fixed point numbers (https://en.wikipedia.org/wiki/Q_(number_format)) [51999,52101]"/>
  <delete-node tree="library: library [52102,52109]"/>
  <delete-node tree="identifier: FixedPoint [52110,52120]"/>
  <delete-node tree="{: { [52121,52122]"/>
  <delete-node tree="comment: // range: [0, 2**112 - 1] [52127,52152]"/>
  <delete-node tree="comment: // resolution: 1 / 2**112 [52157,52182]"/>
  <delete-tree tree="struct_declaration [52187,52231]"/>
  <delete-node tree="comment: // range: [0, 2**144 - 1] [52237,52262]"/>
  <delete-node tree="comment: // resolution: 1 / 2**112 [52267,52292]"/>
  <delete-tree tree="struct_declaration [52297,52338]"/>
  <delete-tree tree="state_variable_declaration [52344,52384]"/>
  <delete-tree tree="type_name [52389,52393]"/>
  <delete-tree tree="visibility [52394,52401]"/>
  <delete-node tree="constant: constant [52402,52410]"/>
  <delete-node tree="identifier: Q112 [52411,52415]"/>
  <delete-node tree="=: = [52416,52417]"/>
  <delete-tree tree="primitive_type [52418,52422]"/>
  <delete-node tree="(: ( [52422,52423]"/>
  <delete-node tree="): ) [52424,52425]"/>
  <delete-node tree="type_cast_expression [52418,52425]"/>
  <delete-node tree="&lt;&lt;: &lt;&lt; [52426,52428]"/>
  <delete-node tree="identifier: RESOLUTION [52429,52439]"/>
  <delete-node tree="binary_expression [52418,52439]"/>
  <delete-node tree="state_variable_declaration [52389,52440]"/>
  <delete-tree tree="state_variable_declaration [52445,52493]"/>
  <delete-node tree="comment: // encode a uint112 as a UQ112x112 [52499,52533]"/>
  <delete-node tree="function: function [52538,52546]"/>
  <delete-node tree="identifier: encode [52547,52553]"/>
  <delete-node tree="(: ( [52553,52554]"/>
  <delete-tree tree="parameter [52554,52563]"/>
  <delete-node tree="): ) [52563,52564]"/>
  <delete-tree tree="visibility [52565,52573]"/>
  <delete-tree tree="return_type_definition [52579,52605]"/>
  <delete-tree tree="function_body [52606,52665]"/>
  <delete-node tree="function_definition [52538,52665]"/>
  <delete-node tree="comment: // encodes a uint144 as a UQ144x112 [52671,52706]"/>
  <delete-node tree="function: function [52711,52719]"/>
  <delete-node tree="identifier: encode144 [52720,52729]"/>
  <delete-node tree="(: ( [52729,52730]"/>
  <delete-tree tree="parameter [52730,52739]"/>
  <delete-node tree="): ) [52739,52740]"/>
  <delete-tree tree="visibility [52741,52749]"/>
  <delete-tree tree="return_type_definition [52755,52781]"/>
  <delete-tree tree="function_body [52782,52841]"/>
  <delete-node tree="function_definition [52711,52841]"/>
  <delete-node tree="comment: // divide a UQ112x112 by a uint112, returning a UQ112x112 [52847,52904]"/>
  <delete-tree tree="function_definition [52909,53104]"/>
  <delete-node tree="comment: // multiply a UQ112x112 by a uint, returning a UQ144x112 [53110,53166]"/>
  <delete-node tree="comment: // reverts on overflow [53171,53193]"/>
  <delete-node tree="function: function [53198,53206]"/>
  <delete-node tree="identifier: mul [53207,53210]"/>
  <delete-node tree="(: ( [53210,53211]"/>
  <delete-tree tree="parameter [53211,53232]"/>
  <delete-node tree=",: , [53232,53233]"/>
  <delete-tree tree="parameter [53234,53240]"/>
  <delete-node tree="): ) [53240,53241]"/>
  <delete-tree tree="visibility [53242,53250]"/>
  <delete-tree tree="state_mutability [53251,53255]"/>
  <delete-tree tree="return_type_definition [53256,53282]"/>
  <delete-node tree="{: { [53283,53284]"/>
  <delete-tree tree="variable_declaration_statement [53293,53300]"/>
  <delete-node tree="identifier: require [53309,53316]"/>
  <delete-node tree="(: ( [53316,53317]"/>
  <delete-tree tree="call_argument [53317,53371]"/>
  <delete-node tree=",: , [53371,53372]"/>
  <delete-node tree="): ) [53410,53411]"/>
  <delete-node tree="call_expression [53309,53411]"/>
  <delete-node tree="expression_statement [53309,53412]"/>
  <delete-tree tree="return_statement [53421,53441]"/>
  <delete-node tree="}: } [53446,53447]"/>
  <delete-node tree="function_body [53283,53447]"/>
  <delete-node tree="function_definition [53198,53447]"/>
  <delete-node tree="comment: // returns a UQ112x112 which represents the ratio of the numerator to the denominator [53453,53538]"/>
  <delete-node tree="comment: // equivalent to encode(numerator).div(denominator) [53543,53594]"/>
  <delete-node tree="function: function [53599,53607]"/>
  <delete-node tree="identifier: fraction [53608,53616]"/>
  <delete-node tree="(: ( [53616,53617]"/>
  <delete-tree tree="parameter [53617,53634]"/>
  <delete-node tree=",: , [53634,53635]"/>
  <delete-tree tree="parameter [53636,53655]"/>
  <delete-node tree="): ) [53655,53656]"/>
  <delete-tree tree="visibility [53657,53665]"/>
  <delete-tree tree="state_mutability [53666,53670]"/>
  <delete-tree tree="return_type_definition [53671,53697]"/>
  <delete-node tree="{: { [53698,53699]"/>
  <delete-tree tree="return_statement [53769,53836]"/>
  <delete-node tree="}: } [53841,53842]"/>
  <delete-node tree="function_body [53698,53842]"/>
  <delete-node tree="function_definition [53599,53842]"/>
  <delete-node tree="comment: // decode a UQ112x112 into a uint112 by truncating after the radix point [53848,53920]"/>
  <delete-tree tree="function_definition [53925,54050]"/>
  <delete-node tree="comment: // decode a UQ144x112 into a uint144 by truncating after the radix point [54056,54128]"/>
  <delete-tree tree="function_definition [54133,54261]"/>
  <delete-node tree="comment: // take the reciprocal of a UQ112x112 [54267,54304]"/>
  <delete-tree tree="function_definition [54309,54513]"/>
  <delete-node tree="comment: // square root of a UQ112x112 [54519,54548]"/>
  <delete-tree tree="function_definition [54553,54714]"/>
  <delete-node tree="}: } [54715,54716]"/>
  <delete-node tree="contract_body [52121,54716]"/>
  <delete-node tree="library_declaration [52102,54716]"/>
  <delete-node tree="comment: // library with helper methods for oracles that are concerned with computing average prices [54718,54809]"/>
  <delete-node tree="library: library [54810,54817]"/>
  <delete-node tree="identifier: UniswapV2OracleLibrary [54818,54840]"/>
  <delete-node tree="{: { [54841,54842]"/>
  <delete-tree tree="using_directive [54847,54870]"/>
  <delete-node tree="comment: // helper function that returns the current block timestamp within the range of uint32, i.e. [0, 2**32 - 1] [54876,54983]"/>
  <delete-node tree="function: function [54988,54996]"/>
  <delete-node tree="identifier: currentBlockTimestamp [54997,55018]"/>
  <delete-node tree="(: ( [55018,55019]"/>
  <delete-node tree="): ) [55019,55020]"/>
  <delete-tree tree="visibility [55021,55029]"/>
  <delete-tree tree="state_mutability [55030,55034]"/>
  <delete-tree tree="return_type_definition [55035,55051]"/>
  <delete-node tree="{: { [55052,55053]"/>
  <delete-node tree="return: return [55062,55068]"/>
  <delete-tree tree="primitive_type [55069,55075]"/>
  <delete-node tree="(: ( [55075,55076]"/>
  <delete-node tree="): ) [55101,55102]"/>
  <delete-node tree="type_cast_expression [55069,55102]"/>
  <delete-node tree="return_statement [55062,55103]"/>
  <delete-node tree="}: } [55108,55109]"/>
  <delete-node tree="function_body [55052,55109]"/>
  <delete-node tree="function_definition [54988,55109]"/>
  <delete-node tree="comment: // produces the cumulative price using counterfactuals to save gas and avoid a call to sync. [55115,55207]"/>
  <delete-tree tree="function_definition [55212,56250]"/>
  <delete-node tree="}: } [56251,56252]"/>
  <delete-node tree="contract_body [54841,56252]"/>
  <delete-node tree="library_declaration [54810,56252]"/>
  <delete-tree tree="library_declaration [56254,58190]"/>
  <delete-node tree="contract: contract [59621,59629]"/>
  <delete-node tree="identifier: IUSDC [59630,59635]"/>
  <delete-node tree="{: { [59636,59637]"/>
  <delete-node tree="function: function [59642,59650]"/>
  <delete-node tree="identifier: isBlacklisted [59651,59664]"/>
  <delete-node tree="(: ( [59664,59665]"/>
  <delete-node tree="): ) [59681,59682]"/>
  <delete-node tree="function_definition [59642,59712]"/>
  <delete-node tree="}: } [59713,59714]"/>
  <delete-node tree="contract_body [59636,59714]"/>
  <delete-node tree="contract_declaration [59621,59714]"/>
  <delete-tree tree="visibility [47956,47962]"/>
  <delete-tree tree="modifier_invocation [47963,47973]"/>
  <delete-tree tree="return_type_definition [47974,47988]"/>
  <delete-node tree="identifier: _mint [47999,48004]"/>
  <delete-tree tree="return_statement [48031,48043]"/>
  <delete-node tree="identifier: hashEIP712Domain [45207,45223]"/>
  <delete-tree tree="call_argument [45224,45230]"/>
  <delete-tree tree="call_argument [45232,45246]"/>
  <delete-tree tree="call_argument [45248,45270]"/>
  <delete-node tree=",: , [45270,45271]"/>
  <delete-node tree="identifier: EIP712_DOMAIN_SEPARATOR [45171,45194]"/>
  <delete-node tree="=: = [45195,45196]"/>
  <delete-node tree="assignment_expression [45171,45286]"/>
  <delete-tree tree="call_argument [46127,46142]"/>
  <delete-node tree=",: , [46160,46161]"/>
  <delete-tree tree="parameter [23064,23079]"/>
  <delete-tree tree="visibility [23097,23103]"/>
  <delete-node tree="identifier: _burnFrom [23114,23123]"/>
  <delete-tree tree="parameter [21054,21069]"/>
  <delete-node tree=",: , [21069,21070]"/>
  <delete-tree tree="assignment_expression [21283,21322]"/>
  <delete-tree tree="member_expression [21205,21227]"/>
  <delete-tree tree="array_access [21184,21202]"/>
  <delete-node tree="=: = [21203,21204]"/>
  <delete-node tree="assignment_expression [21184,21273]"/>
  <delete-tree tree="emit_statement [21332,21375]"/>
  <delete-tree tree="member_expression [19955,19976]"/>
  <delete-tree tree="array_access [19935,19952]"/>
  <delete-node tree="=: = [19953,19954]"/>
  <delete-node tree="assignment_expression [19935,20026]"/>
  <delete-tree tree="call_expression [78951,78966]"/>
  <delete-tree tree="call_expression [78971,78987]"/>
  <delete-node tree="(: ( [79080,79081]"/>
  <delete-node tree="==: == [79127,79129]"/>
  <delete-node tree="binary_expression [79094,79143]"/>
  <delete-node tree=".: . [79143,79144]"/>
  <delete-node tree="identifier: add [79144,79147]"/>
  <delete-node tree="member_expression [79094,79147]"/>
  <delete-node tree="(: ( [79147,79148]"/>
  <delete-node tree="): ) [79161,79162]"/>
  <delete-node tree="call_expression [79094,79162]"/>
  <delete-node tree="call_argument [79094,79162]"/>
  <delete-node tree=",: , [79162,79163]"/>
  <delete-node tree=",: , [79180,79181]"/>
  <delete-node tree="): ) [79233,79234]"/>
  <delete-node tree="call_expression [79068,79234]"/>
  <delete-tree tree="call_argument [73710,73714]"/>
  <delete-node tree="uint: uint [48597,48601]"/>
  <delete-node tree="identifier: newUniv2 [78387,78395]"/>
  <delete-node tree="variable_declaration [78379,78395]"/>
  <delete-tree tree="call_expression [78399,78418]"/>
  <delete-node tree="identifier: _reserve [64162,64170]"/>
  <delete-node tree="identifier: require [21891,21898]"/>
  <delete-node tree="!=: != [21905,21907]"/>
  <delete-tree tree="type_cast_expression [21908,21918]"/>
  <delete-node tree="==: == [45905,45907]"/>
  <delete-node tree="identifier: owner [45908,45913]"/>
  <delete-tree tree="call_expression [76656,76671]"/>
  <delete-tree tree="call_argument [77578,77590]"/>
  <delete-tree tree="call_argument [21114,21135]"/>
  <delete-tree tree="call_expression [78713,78744]"/>
  <delete-node tree="mapping: mapping [15797,15804]"/>
  <delete-node tree="(: ( [15805,15806]"/>
  <delete-tree tree="primitive_type [15806,15813]"/>
  <delete-node tree="=&gt;: =&gt; [15814,15816]"/>
  <delete-node tree="): ) [15824,15825]"/>
  <delete-node tree="type_name [15797,15825]"/>
  <delete-node tree="identifier: _balances [15834,15843]"/>
  <delete-node tree="state_variable_declaration [15797,15844]"/>
  <delete-node tree="mapping: mapping [15850,15857]"/>
  <delete-node tree="(: ( [15858,15859]"/>
  <delete-tree tree="primitive_type [15859,15866]"/>
  <delete-node tree="=&gt;: =&gt; [15867,15869]"/>
  <delete-node tree="mapping: mapping [15870,15877]"/>
  <delete-node tree="(: ( [15878,15879]"/>
  <delete-tree tree="primitive_type [15879,15886]"/>
  <delete-node tree="=&gt;: =&gt; [15887,15889]"/>
  <delete-node tree="): ) [15897,15898]"/>
  <delete-node tree="type_name [15870,15898]"/>
  <delete-node tree="): ) [15898,15899]"/>
  <delete-node tree="type_name [15850,15899]"/>
  <delete-node tree="identifier: _allowances [15908,15919]"/>
  <delete-node tree="state_variable_declaration [15850,15920]"/>
  <delete-node tree="identifier: _totalSupply [15942,15954]"/>
  <delete-node tree="state_variable_declaration [15926,15955]"/>
  <delete-node tree="comment: /**      * @dev See {IERC20-totalSupply}.      */ [15961,16010]"/>
  <delete-node tree="function: function [16015,16023]"/>
  <delete-node tree="identifier: totalSupply [16024,16035]"/>
  <delete-node tree="(: ( [16035,16036]"/>
  <delete-node tree="): ) [16036,16037]"/>
  <delete-tree tree="visibility [16038,16044]"/>
  <delete-tree tree="state_mutability [16045,16049]"/>
  <delete-tree tree="function_body [16068,16104]"/>
  <delete-node tree="function_definition [16015,16104]"/>
  <delete-node tree="comment: /**      * @dev See {IERC20-balanceOf}.      */ [16110,16157]"/>
  <delete-tree tree="function_definition [16162,16270]"/>
  <delete-node tree="comment: /**      * @dev See {IERC20-transfer}.      *      * Requirements:      *      * - `recipient` cannot be the zero address.      * - the caller must have a balance of at least `amount`.      */ [16276,16468]"/>
  <delete-node tree="function: function [16473,16481]"/>
  <delete-node tree="identifier: transfer [16482,16490]"/>
  <delete-node tree="(: ( [16490,16491]"/>
  <delete-tree tree="parameter [16491,16508]"/>
  <delete-node tree=",: , [16508,16509]"/>
  <delete-node tree="): ) [16524,16525]"/>
  <delete-tree tree="visibility [16526,16532]"/>
  <delete-tree tree="return_type_definition [16533,16547]"/>
  <delete-node tree="{: { [16548,16549]"/>
  <delete-node tree="identifier: _transfer [16558,16567]"/>
  <delete-node tree="(: ( [16567,16568]"/>
  <delete-tree tree="call_argument [16568,16580]"/>
  <delete-node tree=",: , [16580,16581]"/>
  <delete-tree tree="call_argument [16582,16591]"/>
  <delete-node tree=",: , [16591,16592]"/>
  <delete-node tree="): ) [16599,16600]"/>
  <delete-node tree="call_expression [16558,16600]"/>
  <delete-node tree="expression_statement [16558,16601]"/>
  <delete-tree tree="return_statement [16610,16622]"/>
  <delete-node tree="}: } [16627,16628]"/>
  <delete-node tree="function_body [16548,16628]"/>
  <delete-node tree="function_definition [16473,16628]"/>
  <delete-node tree="comment: /**      * @dev See {IERC20-allowance}.      */ [16634,16681]"/>
  <delete-tree tree="function_definition [16686,16818]"/>
  <delete-node tree="comment: /**      * @dev See {IERC20-approve}.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [16824,16951]"/>
  <delete-node tree="function: function [16956,16964]"/>
  <delete-node tree="identifier: approve [16965,16972]"/>
  <delete-node tree="(: ( [16972,16973]"/>
  <delete-tree tree="parameter [16973,16988]"/>
  <delete-node tree=",: , [16988,16989]"/>
  <delete-node tree="): ) [17004,17005]"/>
  <delete-tree tree="visibility [17006,17012]"/>
  <delete-tree tree="return_type_definition [17013,17027]"/>
  <delete-node tree="{: { [17028,17029]"/>
  <delete-node tree="identifier: _approve [17038,17046]"/>
  <delete-node tree="(: ( [17046,17047]"/>
  <delete-tree tree="call_argument [17047,17059]"/>
  <delete-node tree=",: , [17059,17060]"/>
  <delete-tree tree="call_argument [17061,17068]"/>
  <delete-node tree=",: , [17068,17069]"/>
  <delete-node tree="): ) [17076,17077]"/>
  <delete-node tree="call_expression [17038,17077]"/>
  <delete-node tree="expression_statement [17038,17078]"/>
  <delete-tree tree="return_statement [17087,17099]"/>
  <delete-node tree="}: } [17104,17105]"/>
  <delete-node tree="function_body [17028,17105]"/>
  <delete-node tree="function_definition [16956,17105]"/>
  <delete-node tree="comment: /**      * @dev See {IERC20-transferFrom}.      *      * Emits an {Approval} event indicating the updated allowance. This is not      * required by the EIP. See the note at the beginning of {ERC20};      *      * Requirements:      * - `sender` and `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      * - the caller must have allowance for `sender`'s tokens of at least      * `amount`.      */ [17111,17558]"/>
  <delete-node tree="function: function [17563,17571]"/>
  <delete-node tree="identifier: transferFrom [17572,17584]"/>
  <delete-node tree="(: ( [17584,17585]"/>
  <delete-tree tree="parameter [17585,17599]"/>
  <delete-node tree=",: , [17599,17600]"/>
  <delete-tree tree="parameter [17601,17618]"/>
  <delete-node tree=",: , [17618,17619]"/>
  <delete-node tree="): ) [17634,17635]"/>
  <delete-tree tree="visibility [17636,17642]"/>
  <delete-tree tree="return_type_definition [17643,17657]"/>
  <delete-node tree="{: { [17658,17659]"/>
  <delete-node tree="identifier: _approve [17714,17722]"/>
  <delete-node tree="(: ( [17722,17723]"/>
  <delete-tree tree="call_argument [17723,17729]"/>
  <delete-node tree=",: , [17729,17730]"/>
  <delete-tree tree="call_argument [17731,17743]"/>
  <delete-node tree=",: , [17743,17744]"/>
  <delete-tree tree="member_expression [17745,17782]"/>
  <delete-node tree="(: ( [17782,17783]"/>
  <delete-node tree=",: , [17789,17790]"/>
  <delete-node tree="): ) [17833,17834]"/>
  <delete-node tree="call_expression [17745,17834]"/>
  <delete-node tree="call_argument [17745,17834]"/>
  <delete-node tree="): ) [17834,17835]"/>
  <delete-node tree="call_expression [17714,17835]"/>
  <delete-node tree="expression_statement [17714,17836]"/>
  <delete-tree tree="return_statement [17845,17857]"/>
  <delete-node tree="}: } [17862,17863]"/>
  <delete-node tree="function_body [17658,17863]"/>
  <delete-node tree="function_definition [17563,17863]"/>
  <delete-node tree="comment: /**      * @dev Atomically increases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [17869,18253]"/>
  <delete-node tree="function: function [18258,18266]"/>
  <delete-node tree="identifier: increaseAllowance [18267,18284]"/>
  <delete-node tree="(: ( [18284,18285]"/>
  <delete-tree tree="parameter [18285,18300]"/>
  <delete-node tree=",: , [18300,18301]"/>
  <delete-node tree="): ) [18320,18321]"/>
  <delete-tree tree="visibility [18322,18328]"/>
  <delete-tree tree="return_type_definition [18329,18343]"/>
  <delete-tree tree="function_body [18344,18465]"/>
  <delete-node tree="function_definition [18258,18465]"/>
  <delete-node tree="comment: /**      * @dev Atomically decreases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      * - `spender` must have allowance for the caller of at least      * `subtractedValue`.      */ [18471,18947]"/>
  <delete-node tree="function: function [18952,18960]"/>
  <delete-node tree="identifier: decreaseAllowance [18961,18978]"/>
  <delete-node tree="(: ( [18978,18979]"/>
  <delete-tree tree="parameter [18979,18994]"/>
  <delete-node tree=",: , [18994,18995]"/>
  <delete-node tree="): ) [19019,19020]"/>
  <delete-tree tree="visibility [19021,19027]"/>
  <delete-tree tree="return_type_definition [19028,19042]"/>
  <delete-node tree="{: { [19043,19044]"/>
  <delete-node tree="identifier: _approve [19053,19061]"/>
  <delete-node tree="(: ( [19061,19062]"/>
  <delete-tree tree="call_argument [19062,19074]"/>
  <delete-node tree=",: , [19074,19075]"/>
  <delete-tree tree="call_argument [19076,19083]"/>
  <delete-node tree=",: , [19083,19084]"/>
  <delete-tree tree="member_expression [19085,19123]"/>
  <delete-node tree="(: ( [19123,19124]"/>
  <delete-tree tree="call_argument [19124,19139]"/>
  <delete-node tree=",: , [19139,19140]"/>
  <delete-node tree="): ) [19180,19181]"/>
  <delete-node tree="call_expression [19085,19181]"/>
  <delete-node tree="call_argument [19085,19181]"/>
  <delete-node tree="): ) [19181,19182]"/>
  <delete-node tree="call_expression [19053,19182]"/>
  <delete-node tree="expression_statement [19053,19183]"/>
  <delete-tree tree="return_statement [19192,19204]"/>
  <delete-node tree="}: } [19209,19210]"/>
  <delete-node tree="function_body [19043,19210]"/>
  <delete-node tree="function_definition [18952,19210]"/>
  <delete-node tree="comment: /**      * @dev Moves tokens `amount` from `sender` to `recipient`.      *      * This is internal function is equivalent to {transfer}, and can be used to      * e.g. implement automatic token fees, slashing mechanisms, etc.      *      * Emits a {Transfer} event.      *      * Requirements:      *      * - `sender` cannot be the zero address.      * - `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      */ [19216,19679]"/>
  <delete-node tree="comment: /** @dev Creates `amount` tokens and assigns them to `account`, increasing      * the total supply.      *      * Emits a {Transfer} event with `from` set to the zero address.      *      * Requirements      *      * - `to` cannot be the zero address.      */ [20154,20413]"/>
  <delete-node tree="function: function [20418,20426]"/>
  <delete-node tree="identifier: _mint [20427,20432]"/>
  <delete-node tree="(: ( [20432,20433]"/>
  <delete-tree tree="parameter [20433,20448]"/>
  <delete-node tree=",: , [20448,20449]"/>
  <delete-tree tree="parameter [20450,20464]"/>
  <delete-node tree="): ) [20464,20465]"/>
  <delete-tree tree="visibility [20466,20474]"/>
  <delete-node tree="{: { [20475,20476]"/>
  <delete-node tree="identifier: require [20485,20492]"/>
  <delete-node tree="(: ( [20492,20493]"/>
  <delete-tree tree="call_argument [20493,20514]"/>
  <delete-node tree=",: , [20514,20515]"/>
  <delete-node tree="): ) [20549,20550]"/>
  <delete-node tree="call_expression [20485,20550]"/>
  <delete-node tree="expression_statement [20485,20551]"/>
  <delete-tree tree="expression_statement [20561,20601]"/>
  <delete-tree tree="expression_statement [20610,20662]"/>
  <delete-node tree="emit: emit [20671,20675]"/>
  <delete-node tree="identifier: Transfer [20676,20684]"/>
  <delete-node tree="(: ( [20684,20685]"/>
  <delete-tree tree="call_argument [20685,20695]"/>
  <delete-node tree=",: , [20695,20696]"/>
  <delete-tree tree="call_argument [20697,20704]"/>
  <delete-node tree=",: , [20704,20705]"/>
  <delete-node tree="): ) [20712,20713]"/>
  <delete-node tree="emit_statement [20671,20714]"/>
  <delete-node tree="}: } [20719,20720]"/>
  <delete-node tree="function_body [20475,20720]"/>
  <delete-node tree="function_definition [20418,20720]"/>
  <delete-node tree="comment: /**      * @dev Destroys `amount` tokens from `account`, reducing the      * total supply.      *      * Emits a {Transfer} event with `to` set to the zero address.      *      * Requirements      *      * - `account` cannot be the zero address.      * - `account` must have at least `amount` tokens.      */ [20726,21034]"/>
  <delete-node tree="comment: /**      * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.      *      * This is internal function is equivalent to `approve`, and can be used to      * e.g. set automatic allowances for certain subsystems, etc.      *      * Emits an {Approval} event.      *      * Requirements:      *      * - `owner` cannot be the zero address.      * - `spender` cannot be the zero address.      */ [21387,21801]"/>
  <delete-tree tree="parameter [21824,21837]"/>
  <delete-node tree=",: , [21854,21855]"/>
  <delete-tree tree="visibility [21872,21880]"/>
  <delete-tree tree="call_argument [78656,78664]"/>
  <delete-tree tree="assignment_expression [22048,22084]"/>
  <delete-tree tree="call_argument [22108,22113]"/>
  <delete-tree tree="call_argument [22124,22130]"/>
  <delete-tree tree="array_access [20036,20056]"/>
  <delete-node tree="=: = [20057,20058]"/>
  <delete-tree tree="member_expression [20059,20083]"/>
  <delete-node tree="(: ( [20083,20084]"/>
  <delete-node tree="): ) [20090,20091]"/>
  <delete-node tree="call_expression [20059,20091]"/>
  <delete-node tree="assignment_expression [20036,20091]"/>
  <delete-tree tree="call_expression [48228,48240]"/>
  <delete-tree tree="member_expression [48352,48387]"/>
  <delete-node tree="identifier: _approve [48272,48280]"/>
  <delete-node tree="(: ( [48280,48281]"/>
  <delete-node tree=",: , [48304,48305]"/>
  <delete-tree tree="call_argument [48322,48334]"/>
  <delete-node tree=",: , [48334,48335]"/>
  <delete-node tree="call_argument [48352,48440]"/>
  <delete-node tree="): ) [48440,48441]"/>
  <delete-node tree="call_expression [48272,48441]"/>
  <delete-node tree="comment: /**      * @dev Destroys `amount` tokens from `account`.`amount` is then deducted      * from the caller's allowance.      *      * See {_burn} and {_approve}.      */ [22144,22311]"/>
  <delete-node tree="function: function [22316,22324]"/>
  <delete-node tree="identifier: _burnFrom [22325,22334]"/>
  <delete-node tree="(: ( [22334,22335]"/>
  <delete-tree tree="parameter [22335,22350]"/>
  <delete-node tree=",: , [22350,22351]"/>
  <delete-tree tree="parameter [22352,22366]"/>
  <delete-node tree="): ) [22366,22367]"/>
  <delete-node tree="{: { [22377,22378]"/>
  <delete-node tree="identifier: _burn [22387,22392]"/>
  <delete-node tree="(: ( [22392,22393]"/>
  <delete-tree tree="call_argument [22393,22400]"/>
  <delete-node tree=",: , [22400,22401]"/>
  <delete-node tree="): ) [22408,22409]"/>
  <delete-node tree="call_expression [22387,22409]"/>
  <delete-node tree="expression_statement [22387,22410]"/>
  <delete-node tree="identifier: _approve [22419,22427]"/>
  <delete-node tree="(: ( [22427,22428]"/>
  <delete-tree tree="call_argument [22428,22435]"/>
  <delete-node tree=",: , [22435,22436]"/>
  <delete-tree tree="call_argument [22437,22449]"/>
  <delete-node tree=",: , [22449,22450]"/>
  <delete-tree tree="member_expression [22451,22489]"/>
  <delete-node tree="(: ( [22489,22490]"/>
  <delete-node tree=",: , [22496,22497]"/>
  <delete-node tree="): ) [22536,22537]"/>
  <delete-node tree="call_expression [22451,22537]"/>
  <delete-node tree="call_argument [22451,22537]"/>
  <delete-node tree="): ) [22537,22538]"/>
  <delete-node tree="call_expression [22419,22538]"/>
  <delete-node tree="expression_statement [22419,22539]"/>
  <delete-node tree="}: } [22544,22545]"/>
  <delete-node tree="function_body [22377,22545]"/>
  <delete-node tree="function_definition [22316,22545]"/>
  <delete-node tree="contract: contract [64959,64967]"/>
  <delete-node tree="identifier: IDAO [64968,64972]"/>
  <delete-node tree="{: { [64973,64974]"/>
  <delete-node tree="function: function [64979,64987]"/>
  <delete-node tree="identifier: epoch [64988,64993]"/>
  <delete-node tree="(: ( [64993,64994]"/>
  <delete-node tree="): ) [64994,64995]"/>
  <delete-tree tree="return_type_definition [65010,65027]"/>
  <delete-node tree="function_definition [64979,65028]"/>
  <delete-node tree="}: } [65029,65030]"/>
  <delete-node tree="contract_body [64973,65030]"/>
  <delete-node tree="contract_declaration [64959,65030]"/>
  <delete-tree tree="primitive_type [68530,68537]"/>
  <delete-tree tree="visibility [68547,68553]"/>
  <delete-tree tree="state_mutability [68554,68558]"/>
  <delete-tree tree="return_type_definition [68559,68576]"/>
  <delete-tree tree="if_statement [68632,68687]"/>
  <delete-node tree="identifier: totalRewarded [68732,68745]"/>
  <delete-tree tree="call_argument [68752,68766]"/>
  <delete-tree tree="call_expression [68930,68989]"/>
  <delete-node tree="constant: constant [60477,60485]"/>
  <delete-node tree="identifier: UNISWAP_FACTORY [60486,60501]"/>
  <delete-node tree="=: = [60502,60503]"/>
  <delete-tree tree="type_cast_expression [60504,60555]"/>
  <delete-node tree="state_variable_declaration [60461,60556]"/>
  <delete-tree tree="visibility [60570,60578]"/>
  <delete-node tree="identifier: _dao [60579,60583]"/>
  <delete-node tree="state_variable_declaration [60562,60584]"/>
  <delete-tree tree="visibility [60597,60605]"/>
  <delete-node tree="identifier: _dollar [60606,60613]"/>
  <delete-node tree="state_variable_declaration [60589,60614]"/>
  <delete-tree tree="state_variable_declaration [60620,60647]"/>
  <delete-tree tree="state_variable_declaration [60652,60682]"/>
  <delete-tree tree="visibility [60695,60703]"/>
  <delete-node tree="identifier: _index [60704,60710]"/>
  <delete-node tree="state_variable_declaration [60687,60711]"/>
  <delete-tree tree="visibility [60724,60732]"/>
  <delete-node tree="identifier: _cumulative [60733,60744]"/>
  <delete-node tree="state_variable_declaration [60716,60745]"/>
  <delete-tree tree="state_variable_declaration [60750,60777]"/>
  <delete-tree tree="visibility [60791,60799]"/>
  <delete-node tree="identifier: _reserve [60800,60808]"/>
  <delete-node tree="state_variable_declaration [60783,60809]"/>
  <delete-tree tree="constructor_definition [60815,60911]"/>
  <delete-node tree="function: function [60917,60925]"/>
  <delete-node tree="identifier: setup [60926,60931]"/>
  <delete-node tree="(: ( [60931,60932]"/>
  <delete-node tree="): ) [60932,60933]"/>
  <delete-tree tree="visibility [60934,60940]"/>
  <delete-tree tree="modifier_invocation [60941,60948]"/>
  <delete-node tree="{: { [60949,60950]"/>
  <delete-tree tree="expression_statement [60959,61046]"/>
  <delete-tree tree="variable_declaration_statement [61056,61124]"/>
  <delete-tree tree="expression_statement [61133,61168]"/>
  <delete-node tree="}: } [61302,61303]"/>
  <delete-node tree="function_body [60949,61303]"/>
  <delete-node tree="function_definition [60917,61303]"/>
  <delete-node tree="comment: /**      * Trades/Liquidity: (1) Initializes reserve and blockTimestampLast (can calculate a price)      *                   (2) Has non-zero cumulative prices      *      * Steps: (1) Captures a reference blockTimestampLast      *        (2) First reported value      */ [61309,61580]"/>
  <delete-node tree="function: function [61833,61841]"/>
  <delete-node tree="identifier: initializeOracle [61842,61858]"/>
  <delete-node tree="(: ( [61858,61859]"/>
  <delete-node tree="): ) [61859,61860]"/>
  <delete-node tree="{: { [61869,61870]"/>
  <delete-tree tree="variable_declaration_statement [61879,61907]"/>
  <delete-node tree="=: = [61940,61941]"/>
  <delete-tree tree="ternary_expression [61942,62037]"/>
  <delete-node tree="variable_declaration_statement [61916,62038]"/>
  <delete-tree tree="variable_declaration_statement [62047,62132]"/>
  <delete-tree tree="if_statement [62141,62418]"/>
  <delete-node tree="}: } [62423,62424]"/>
  <delete-node tree="function_body [61869,62424]"/>
  <delete-node tree="function_definition [61833,62424]"/>
  <delete-node tree="function: function [62430,62438]"/>
  <delete-node tree="identifier: updateOracle [62439,62451]"/>
  <delete-node tree="(: ( [62451,62452]"/>
  <delete-node tree="): ) [62452,62453]"/>
  <delete-node tree="returns: returns [62462,62469]"/>
  <delete-node tree="(: ( [62470,62471]"/>
  <delete-node tree=",: , [62490,62491]"/>
  <delete-tree tree="parameter [62492,62496]"/>
  <delete-node tree="): ) [62496,62497]"/>
  <delete-node tree="return_type_definition [62462,62497]"/>
  <delete-node tree="{: { [62498,62499]"/>
  <delete-node tree="=: = [62579,62580]"/>
  <delete-tree tree="call_expression [62581,62596]"/>
  <delete-node tree="variable_declaration_statement [62559,62597]"/>
  <delete-tree tree="variable_declaration_statement [62606,62671]"/>
  <delete-node tree="=: = [62692,62693]"/>
  <delete-tree tree="boolean_literal [62694,62698]"/>
  <delete-node tree="variable_declaration_statement [62681,62699]"/>
  <delete-tree tree="if_statement [62708,62801]"/>
  <delete-tree tree="if_statement [62810,62900]"/>
  <delete-tree tree="if_statement [62909,62966]"/>
  <delete-tree tree="return_statement [62976,62998]"/>
  <delete-node tree="}: } [63003,63004]"/>
  <delete-node tree="function_body [62498,63004]"/>
  <delete-node tree="function_definition [62430,63004]"/>
  <delete-tree tree="type_name [63134,63140]"/>
  <delete-tree tree="member_expression [63167,63213]"/>
  <delete-tree tree="type_cast_expression [63214,63228]"/>
  <delete-tree tree="variable_declaration_statement [63239,63288]"/>
  <delete-node tree="comment: // overflow is desired [63289,63311]"/>
  <delete-node tree="=: = [63344,63345]"/>
  <delete-tree tree="ternary_expression [63346,63395]"/>
  <delete-node tree="variable_declaration_statement [63320,63396]"/>
  <delete-tree tree="expression_statement [63512,63540]"/>
  <delete-tree tree="expression_statement [63549,63579]"/>
  <delete-tree tree="return_statement [63589,63612]"/>
  <delete-tree tree="visibility [61604,61610]"/>
  <delete-tree tree="modifier_invocation [61611,61618]"/>
  <delete-node tree="returns: returns [61619,61626]"/>
  <delete-node tree="(: ( [61627,61628]"/>
  <delete-node tree=",: , [61647,61648]"/>
  <delete-tree tree="parameter [61649,61653]"/>
  <delete-node tree="): ) [61653,61654]"/>
  <delete-node tree="return_type_definition [61619,61654]"/>
  <delete-tree tree="call_argument [63447,63492]"/>
  <delete-node tree=",: , [63492,63493]"/>
  <delete-tree tree="call_argument [63494,63500]"/>
  <delete-node tree="identifier: _initialized [61669,61681]"/>
  <delete-tree tree="block_statement [61683,61729]"/>
  <delete-node tree="else: else [61730,61734]"/>
  <delete-tree tree="expression_statement [61749,61768]"/>
  <delete-node tree="(: ( [61788,61789]"/>
  <delete-node tree=",: , [61802,61803]"/>
  <delete-node tree="): ) [61809,61810]"/>
  <delete-node tree="tuple_expression [61788,61810]"/>
  <delete-node tree="function: function [63624,63632]"/>
  <delete-node tree="identifier: updateReserve [63633,63646]"/>
  <delete-node tree="(: ( [63646,63647]"/>
  <delete-node tree="): ) [63647,63648]"/>
  <delete-node tree="{: { [63675,63676]"/>
  <delete-node tree="=: = [63705,63706]"/>
  <delete-node tree="identifier: _reserve [63707,63715]"/>
  <delete-node tree="variable_declaration_statement [63685,63716]"/>
  <delete-tree tree="variable_declaration_statement [63725,63785]"/>
  <delete-tree tree="expression_statement [63794,63839]"/>
  <delete-node tree="comment: // get counter's reserve [63840,63864]"/>
  <delete-tree tree="return_statement [63874,63893]"/>
  <delete-node tree="}: } [63898,63899]"/>
  <delete-node tree="function_body [63675,63899]"/>
  <delete-node tree="function_definition [63624,63899]"/>
  <delete-node tree="function: function [63905,63913]"/>
  <delete-node tree="identifier: usdc [63914,63918]"/>
  <delete-node tree="(: ( [63918,63919]"/>
  <delete-node tree="): ) [63919,63920]"/>
  <delete-tree tree="state_mutability [63930,63934]"/>
  <delete-tree tree="return_type_definition [63935,63952]"/>
  <delete-tree tree="function_body [63953,63996]"/>
  <delete-node tree="function_definition [63905,63996]"/>
  <delete-node tree="function: function [64002,64010]"/>
  <delete-node tree="identifier: pair [64011,64015]"/>
  <delete-node tree="(: ( [64015,64016]"/>
  <delete-node tree="): ) [64016,64017]"/>
  <delete-tree tree="state_mutability [64027,64031]"/>
  <delete-tree tree="return_type_definition [64032,64049]"/>
  <delete-tree tree="function_body [64050,64088]"/>
  <delete-node tree="function_definition [64002,64088]"/>
  <delete-node tree="modifier: modifier [64183,64191]"/>
  <delete-node tree="identifier: onlyDao [64192,64199]"/>
  <delete-node tree="(: ( [64199,64200]"/>
  <delete-node tree="): ) [64200,64201]"/>
  <delete-node tree="{: { [64202,64203]"/>
  <delete-node tree="(: ( [64224,64225]"/>
  <delete-tree tree="call_argument [64238,64256]"/>
  <delete-node tree=",: , [64256,64257]"/>
  <delete-node tree=",: , [64274,64275]"/>
  <delete-tree tree="call_argument [64288,64297]"/>
  <delete-node tree="): ) [64306,64307]"/>
  <delete-node tree="call_expression [64212,64307]"/>
  <delete-node tree="expression_statement [64212,64308]"/>
  <delete-tree tree="expression_statement [64318,64320]"/>
  <delete-node tree="}: } [64325,64326]"/>
  <delete-node tree="function_body [64202,64326]"/>
  <delete-node tree="modifier_definition [64183,64326]"/>
  <delete-node tree="contract: contract [65661,65669]"/>
  <delete-node tree="identifier: PoolAccount [65670,65681]"/>
  <delete-node tree="{: { [65682,65683]"/>
  <delete-tree tree="enum_declaration [65688,65753]"/>
  <delete-node tree="struct: struct [65759,65765]"/>
  <delete-node tree="identifier: State [65766,65771]"/>
  <delete-node tree="{: { [65772,65773]"/>
  <delete-node tree="identifier: staged [65790,65796]"/>
  <delete-node tree="struct_member [65782,65797]"/>
  <delete-node tree="identifier: claimable [65814,65823]"/>
  <delete-node tree="struct_member [65806,65824]"/>
  <delete-node tree="identifier: bonded [65841,65847]"/>
  <delete-node tree="struct_member [65833,65848]"/>
  <delete-node tree="identifier: phantom [65865,65872]"/>
  <delete-node tree="struct_member [65857,65873]"/>
  <delete-node tree="identifier: fluidUntil [65890,65900]"/>
  <delete-node tree="struct_member [65882,65901]"/>
  <delete-node tree="}: } [65906,65907]"/>
  <delete-node tree="struct_declaration [65759,65907]"/>
  <delete-node tree="}: } [65908,65909]"/>
  <delete-node tree="contract_body [65682,65909]"/>
  <delete-node tree="contract_declaration [65661,65909]"/>
  <delete-node tree="contract: contract [65911,65919]"/>
  <delete-node tree="identifier: PoolStorage [65920,65931]"/>
  <delete-node tree="{: { [65932,65933]"/>
  <delete-tree tree="struct_declaration [65938,66025]"/>
  <delete-node tree="struct: struct [66031,66037]"/>
  <delete-node tree="identifier: Balance [66038,66045]"/>
  <delete-node tree="{: { [66046,66047]"/>
  <delete-node tree="identifier: staged [66064,66070]"/>
  <delete-node tree="struct_member [66056,66071]"/>
  <delete-node tree="identifier: claimable [66088,66097]"/>
  <delete-node tree="struct_member [66080,66098]"/>
  <delete-node tree="identifier: bonded [66115,66121]"/>
  <delete-node tree="struct_member [66107,66122]"/>
  <delete-node tree="identifier: phantom [66139,66146]"/>
  <delete-node tree="struct_member [66131,66147]"/>
  <delete-node tree="}: } [66152,66153]"/>
  <delete-node tree="struct_declaration [66031,66153]"/>
  <delete-tree tree="struct_declaration [66159,66288]"/>
  <delete-node tree="}: } [66289,66290]"/>
  <delete-node tree="contract_body [65932,66290]"/>
  <delete-node tree="contract_declaration [65911,66290]"/>
  <delete-tree tree="contract_declaration [66292,66344]"/>
  <delete-node tree="contract: contract [66975,66983]"/>
  <delete-node tree="identifier: PoolGetters [66984,66995]"/>
  <delete-node tree="is: is [66996,66998]"/>
  <delete-tree tree="inheritance_specifier [66999,67008]"/>
  <delete-node tree="{: { [67009,67010]"/>
  <delete-node tree="comment: /**      * Global      */ [67048,67073]"/>
  <delete-tree tree="function_definition [67079,67164]"/>
  <delete-node tree="function: function [67170,67178]"/>
  <delete-node tree="identifier: dollar [67179,67185]"/>
  <delete-node tree="(: ( [67185,67186]"/>
  <delete-node tree="): ) [67186,67187]"/>
  <delete-tree tree="state_mutability [67195,67199]"/>
  <delete-tree tree="return_type_definition [67200,67217]"/>
  <delete-tree tree="function_body [67218,67264]"/>
  <delete-node tree="function_definition [67170,67264]"/>
  <delete-tree tree="function_definition [67270,67361]"/>
  <delete-tree tree="function_definition [67367,67465]"/>
  <delete-tree tree="function_definition [67471,67569]"/>
  <delete-tree tree="function_definition [67575,67679]"/>
  <delete-tree tree="function_definition [67685,67785]"/>
  <delete-tree tree="function_definition [67791,67925]"/>
  <delete-node tree="comment: /**      * Account      */ [67931,67957]"/>
  <delete-node tree="function: function [67963,67971]"/>
  <delete-node tree="identifier: balanceOfStaged [67972,67987]"/>
  <delete-node tree="(: ( [67987,67988]"/>
  <delete-node tree="): ) [68003,68004]"/>
  <delete-tree tree="visibility [68005,68011]"/>
  <delete-tree tree="state_mutability [68012,68016]"/>
  <delete-tree tree="return_type_definition [68017,68034]"/>
  <delete-tree tree="function_body [68035,68090]"/>
  <delete-node tree="function_definition [67963,68090]"/>
  <delete-tree tree="function_definition [68096,68229]"/>
  <delete-tree tree="function_definition [68235,68362]"/>
  <delete-tree tree="function_definition [68368,68497]"/>
  <delete-node tree="function: function [69002,69010]"/>
  <delete-node tree="identifier: statusOf [69011,69019]"/>
  <delete-node tree="(: ( [69019,69020]"/>
  <delete-tree tree="parameter [69020,69035]"/>
  <delete-node tree="): ) [69035,69036]"/>
  <delete-tree tree="visibility [69037,69043]"/>
  <delete-tree tree="state_mutability [69044,69048]"/>
  <delete-tree tree="return_type_definition [69049,69077]"/>
  <delete-node tree="{: { [69078,69079]"/>
  <delete-node tree="return: return [69088,69094]"/>
  <delete-node tree="?: ? [69142,69143]"/>
  <delete-tree tree="member_expression [69156,69181]"/>
  <delete-node tree=":: : [69182,69183]"/>
  <delete-tree tree="member_expression [69196,69214]"/>
  <delete-node tree="ternary_expression [69095,69214]"/>
  <delete-node tree=".: . [69214,69215]"/>
  <delete-node tree="identifier: Fluid [69215,69220]"/>
  <delete-node tree="member_expression [69095,69220]"/>
  <delete-node tree="return_statement [69088,69221]"/>
  <delete-node tree="}: } [69226,69227]"/>
  <delete-node tree="function_body [69078,69227]"/>
  <delete-node tree="function_definition [69002,69227]"/>
  <delete-node tree="comment: /**      * Epoch      */ [69233,69257]"/>
  <delete-tree tree="function_definition [69263,69349]"/>
  <delete-node tree="}: } [69350,69351]"/>
  <delete-node tree="contract_body [67009,69351]"/>
  <delete-node tree="contract_declaration [66975,69351]"/>
  <delete-node tree="contract: contract [69982,69990]"/>
  <delete-node tree="identifier: PoolSetters [69991,70002]"/>
  <delete-node tree="is: is [70003,70005]"/>
  <delete-tree tree="inheritance_specifier [70006,70015]"/>
  <delete-node tree=",: , [70015,70016]"/>
  <delete-tree tree="inheritance_specifier [70017,70028]"/>
  <delete-node tree="{: { [70029,70030]"/>
  <delete-node tree="comment: /**      * Account      */ [70068,70094]"/>
  <delete-node tree="function: function [70100,70108]"/>
  <delete-node tree="identifier: incrementBalanceOfBonded [70109,70133]"/>
  <delete-node tree="(: ( [70133,70134]"/>
  <delete-tree tree="parameter [70134,70149]"/>
  <delete-node tree=",: , [70149,70150]"/>
  <delete-tree tree="parameter [70151,70165]"/>
  <delete-node tree="): ) [70165,70166]"/>
  <delete-node tree="{: { [70176,70177]"/>
  <delete-tree tree="member_expression [70186,70217]"/>
  <delete-node tree="=: = [70218,70219]"/>
  <delete-tree tree="member_expression [70220,70255]"/>
  <delete-node tree="(: ( [70255,70256]"/>
  <delete-node tree="): ) [70262,70263]"/>
  <delete-node tree="call_expression [70220,70263]"/>
  <delete-node tree="assignment_expression [70186,70263]"/>
  <delete-node tree="expression_statement [70186,70264]"/>
  <delete-tree tree="member_expression [70273,70294]"/>
  <delete-node tree="=: = [70295,70296]"/>
  <delete-tree tree="member_expression [70297,70322]"/>
  <delete-node tree="(: ( [70322,70323]"/>
  <delete-node tree="): ) [70329,70330]"/>
  <delete-node tree="call_expression [70297,70330]"/>
  <delete-node tree="assignment_expression [70273,70330]"/>
  <delete-node tree="expression_statement [70273,70331]"/>
  <delete-node tree="}: } [70336,70337]"/>
  <delete-node tree="function_body [70176,70337]"/>
  <delete-node tree="function_definition [70100,70337]"/>
  <delete-node tree="function: function [70343,70351]"/>
  <delete-node tree="identifier: decrementBalanceOfBonded [70352,70376]"/>
  <delete-node tree="(: ( [70376,70377]"/>
  <delete-tree tree="parameter [70377,70392]"/>
  <delete-node tree=",: , [70392,70393]"/>
  <delete-tree tree="parameter [70394,70408]"/>
  <delete-node tree=",: , [70408,70409]"/>
  <delete-tree tree="parameter [70410,70430]"/>
  <delete-node tree="): ) [70430,70431]"/>
  <delete-tree tree="visibility [70432,70440]"/>
  <delete-node tree="{: { [70441,70442]"/>
  <delete-tree tree="expression_statement [70451,70537]"/>
  <delete-tree tree="member_expression [70546,70567]"/>
  <delete-node tree="=: = [70568,70569]"/>
  <delete-tree tree="member_expression [70570,70595]"/>
  <delete-node tree="(: ( [70595,70596]"/>
  <delete-node tree=",: , [70602,70603]"/>
  <delete-tree tree="call_argument [70604,70610]"/>
  <delete-node tree="): ) [70610,70611]"/>
  <delete-node tree="call_expression [70570,70611]"/>
  <delete-node tree="assignment_expression [70546,70611]"/>
  <delete-node tree="expression_statement [70546,70612]"/>
  <delete-node tree="}: } [70617,70618]"/>
  <delete-node tree="function_body [70441,70618]"/>
  <delete-node tree="function_definition [70343,70618]"/>
  <delete-node tree="function: function [70624,70632]"/>
  <delete-node tree="identifier: incrementBalanceOfStaged [70633,70657]"/>
  <delete-node tree="(: ( [70657,70658]"/>
  <delete-tree tree="parameter [70658,70673]"/>
  <delete-node tree=",: , [70673,70674]"/>
  <delete-node tree="): ) [70689,70690]"/>
  <delete-node tree="{: { [70700,70701]"/>
  <delete-tree tree="member_expression [70710,70741]"/>
  <delete-node tree="=: = [70742,70743]"/>
  <delete-tree tree="member_expression [70744,70779]"/>
  <delete-node tree="(: ( [70779,70780]"/>
  <delete-node tree="): ) [70786,70787]"/>
  <delete-node tree="call_expression [70744,70787]"/>
  <delete-node tree="assignment_expression [70710,70787]"/>
  <delete-node tree="expression_statement [70710,70788]"/>
  <delete-tree tree="member_expression [70797,70818]"/>
  <delete-node tree="=: = [70819,70820]"/>
  <delete-tree tree="member_expression [70821,70846]"/>
  <delete-node tree="(: ( [70846,70847]"/>
  <delete-node tree="): ) [70853,70854]"/>
  <delete-node tree="call_expression [70821,70854]"/>
  <delete-node tree="assignment_expression [70797,70854]"/>
  <delete-node tree="expression_statement [70797,70855]"/>
  <delete-node tree="}: } [70860,70861]"/>
  <delete-node tree="function_body [70700,70861]"/>
  <delete-node tree="function_definition [70624,70861]"/>
  <delete-node tree="function: function [70867,70875]"/>
  <delete-node tree="identifier: decrementBalanceOfStaged [70876,70900]"/>
  <delete-node tree="(: ( [70900,70901]"/>
  <delete-tree tree="parameter [70901,70916]"/>
  <delete-node tree=",: , [70916,70917]"/>
  <delete-tree tree="parameter [70918,70932]"/>
  <delete-node tree=",: , [70932,70933]"/>
  <delete-tree tree="parameter [70934,70954]"/>
  <delete-node tree="): ) [70954,70955]"/>
  <delete-tree tree="visibility [70956,70964]"/>
  <delete-node tree="{: { [70965,70966]"/>
  <delete-tree tree="expression_statement [70975,71061]"/>
  <delete-tree tree="member_expression [71070,71091]"/>
  <delete-node tree="=: = [71092,71093]"/>
  <delete-tree tree="member_expression [71094,71119]"/>
  <delete-node tree="(: ( [71119,71120]"/>
  <delete-node tree=",: , [71126,71127]"/>
  <delete-tree tree="call_argument [71128,71134]"/>
  <delete-node tree="): ) [71134,71135]"/>
  <delete-node tree="call_expression [71094,71135]"/>
  <delete-node tree="assignment_expression [71070,71135]"/>
  <delete-node tree="expression_statement [71070,71136]"/>
  <delete-node tree="}: } [71141,71142]"/>
  <delete-node tree="function_body [70965,71142]"/>
  <delete-node tree="function_definition [70867,71142]"/>
  <delete-node tree="function: function [71148,71156]"/>
  <delete-node tree="identifier: incrementBalanceOfClaimable [71157,71184]"/>
  <delete-node tree="(: ( [71184,71185]"/>
  <delete-tree tree="parameter [71185,71200]"/>
  <delete-node tree=",: , [71200,71201]"/>
  <delete-node tree="): ) [71216,71217]"/>
  <delete-node tree="{: { [71227,71228]"/>
  <delete-tree tree="expression_statement [71237,71321]"/>
  <delete-tree tree="member_expression [71330,71354]"/>
  <delete-node tree="=: = [71355,71356]"/>
  <delete-tree tree="member_expression [71357,71385]"/>
  <delete-node tree="(: ( [71385,71386]"/>
  <delete-node tree="): ) [71392,71393]"/>
  <delete-node tree="call_expression [71357,71393]"/>
  <delete-node tree="assignment_expression [71330,71393]"/>
  <delete-node tree="expression_statement [71330,71394]"/>
  <delete-node tree="}: } [71399,71400]"/>
  <delete-node tree="function_body [71227,71400]"/>
  <delete-node tree="function_definition [71148,71400]"/>
  <delete-node tree="function: function [71406,71414]"/>
  <delete-node tree="identifier: decrementBalanceOfClaimable [71415,71442]"/>
  <delete-node tree="(: ( [71442,71443]"/>
  <delete-tree tree="parameter [71443,71458]"/>
  <delete-node tree=",: , [71458,71459]"/>
  <delete-tree tree="parameter [71460,71474]"/>
  <delete-node tree=",: , [71474,71475]"/>
  <delete-tree tree="parameter [71476,71496]"/>
  <delete-node tree="): ) [71496,71497]"/>
  <delete-tree tree="visibility [71498,71506]"/>
  <delete-node tree="{: { [71507,71508]"/>
  <delete-tree tree="expression_statement [71517,71609]"/>
  <delete-tree tree="member_expression [71618,71642]"/>
  <delete-node tree="=: = [71643,71644]"/>
  <delete-tree tree="member_expression [71645,71673]"/>
  <delete-node tree="(: ( [71673,71674]"/>
  <delete-node tree=",: , [71680,71681]"/>
  <delete-tree tree="call_argument [71682,71688]"/>
  <delete-node tree="): ) [71688,71689]"/>
  <delete-node tree="call_expression [71645,71689]"/>
  <delete-node tree="assignment_expression [71618,71689]"/>
  <delete-node tree="expression_statement [71618,71690]"/>
  <delete-node tree="}: } [71695,71696]"/>
  <delete-node tree="function_body [71507,71696]"/>
  <delete-node tree="function_definition [71406,71696]"/>
  <delete-tree tree="function_definition [71702,71944]"/>
  <delete-node tree="function: function [71950,71958]"/>
  <delete-node tree="identifier: decrementBalanceOfPhantom [71959,71984]"/>
  <delete-node tree="(: ( [71984,71985]"/>
  <delete-tree tree="parameter [71985,72000]"/>
  <delete-node tree=",: , [72000,72001]"/>
  <delete-node tree=",: , [72016,72017]"/>
  <delete-tree tree="parameter [72018,72038]"/>
  <delete-node tree="): ) [72038,72039]"/>
  <delete-tree tree="visibility [72040,72048]"/>
  <delete-tree tree="function_body [72049,72230]"/>
  <delete-node tree="function_definition [71950,72230]"/>
  <delete-node tree="function: function [72236,72244]"/>
  <delete-node tree="identifier: unfreeze [72245,72253]"/>
  <delete-node tree="(: ( [72253,72254]"/>
  <delete-tree tree="parameter [72254,72269]"/>
  <delete-node tree="): ) [72269,72270]"/>
  <delete-node tree="{: { [72280,72281]"/>
  <delete-tree tree="member_expression [72290,72325]"/>
  <delete-node tree="=: = [72326,72327]"/>
  <delete-node tree="assignment_expression [72290,72342]"/>
  <delete-node tree="expression_statement [72290,72343]"/>
  <delete-node tree="}: } [72348,72349]"/>
  <delete-node tree="function_body [72280,72349]"/>
  <delete-node tree="function_definition [72236,72349]"/>
  <delete-node tree="}: } [72350,72351]"/>
  <delete-node tree="contract_body [70029,72351]"/>
  <delete-node tree="contract_declaration [69982,72351]"/>
  <delete-node tree="comment: /*     Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [72353,72981]"/>
  <delete-node tree="contract: contract [72982,72990]"/>
  <delete-node tree="identifier: Liquidity [72991,73000]"/>
  <delete-node tree="is: is [73001,73003]"/>
  <delete-tree tree="inheritance_specifier [73004,73015]"/>
  <delete-node tree="{: { [73016,73017]"/>
  <delete-tree tree="visibility [73030,73037]"/>
  <delete-node tree="constant: constant [73038,73046]"/>
  <delete-node tree="identifier: UNISWAP_FACTORY [73047,73062]"/>
  <delete-node tree="=: = [73063,73064]"/>
  <delete-tree tree="type_cast_expression [73065,73116]"/>
  <delete-node tree="state_variable_declaration [73022,73117]"/>
  <delete-node tree="function: function [73123,73131]"/>
  <delete-node tree="identifier: addLiquidity [73132,73144]"/>
  <delete-node tree="(: ( [73144,73145]"/>
  <delete-node tree="): ) [73165,73166]"/>
  <delete-node tree="{: { [73203,73204]"/>
  <delete-tree tree="variable_declaration_tuple [73213,73243]"/>
  <delete-node tree="=: = [73244,73245]"/>
  <delete-node tree="(: ( [73246,73247]"/>
  <delete-tree tree="primitive_type [73247,73254]"/>
  <delete-node tree="(: ( [73254,73255]"/>
  <delete-node tree="): ) [73263,73264]"/>
  <delete-node tree="type_cast_expression [73247,73264]"/>
  <delete-node tree=",: , [73264,73265]"/>
  <delete-tree tree="call_expression [73266,73272]"/>
  <delete-node tree="): ) [73272,73273]"/>
  <delete-node tree="tuple_expression [73246,73273]"/>
  <delete-node tree="variable_declaration_statement [73213,73274]"/>
  <delete-tree tree="variable_declaration_statement [73283,73342]"/>
  <delete-node tree="=: = [73371,73372]"/>
  <delete-tree tree="parenthesized_expression [73373,73405]"/>
  <delete-node tree="?: ? [73406,73407]"/>
  <delete-node tree="identifier: dollarAmount [73421,73433]"/>
  <delete-node tree=":: : [73434,73435]"/>
  <delete-tree tree="member_expression [73449,73471]"/>
  <delete-node tree="(: ( [73471,73472]"/>
  <delete-node tree=",: , [73484,73485]"/>
  <delete-tree tree="call_argument [73486,73494]"/>
  <delete-node tree=",: , [73494,73495]"/>
  <delete-tree tree="call_argument [73496,73504]"/>
  <delete-node tree="): ) [73504,73505]"/>
  <delete-node tree="call_expression [73449,73505]"/>
  <delete-node tree="ternary_expression [73373,73505]"/>
  <delete-node tree="variable_declaration_statement [73352,73506]"/>
  <delete-tree tree="variable_declaration_statement [73516,73548]"/>
  <delete-tree tree="member_expression [73557,73580]"/>
  <delete-node tree="(: ( [73580,73581]"/>
  <delete-tree tree="call_argument [73581,73585]"/>
  <delete-node tree=",: , [73585,73586]"/>
  <delete-node tree="): ) [73599,73600]"/>
  <delete-node tree="call_expression [73557,73600]"/>
  <delete-node tree="expression_statement [73557,73601]"/>
  <delete-node tree="return: return [73675,73681]"/>
  <delete-node tree="(: ( [73682,73683]"/>
  <delete-node tree="identifier: usdcAmount [73683,73693]"/>
  <delete-node tree=",: , [73693,73694]"/>
  <delete-node tree="): ) [73735,73736]"/>
  <delete-node tree="tuple_expression [73682,73736]"/>
  <delete-node tree="return_statement [73675,73737]"/>
  <delete-node tree="}: } [73742,73743]"/>
  <delete-node tree="function_body [73203,73743]"/>
  <delete-node tree="function_definition [73123,73743]"/>
  <delete-node tree="comment: // overridable for testing [73749,73775]"/>
  <delete-tree tree="function_definition [73780,73866]"/>
  <delete-node tree="comment: // overridable for testing [73872,73898]"/>
  <delete-node tree="function: function [73903,73911]"/>
  <delete-node tree="identifier: getReserves [73912,73923]"/>
  <delete-node tree="(: ( [73923,73924]"/>
  <delete-node tree=",: , [73938,73939]"/>
  <delete-tree tree="parameter [73940,73954]"/>
  <delete-node tree="): ) [73954,73955]"/>
  <delete-tree tree="visibility [73956,73964]"/>
  <delete-tree tree="state_mutability [73965,73969]"/>
  <delete-tree tree="return_type_definition [73970,74008]"/>
  <delete-tree tree="function_body [74009,74315]"/>
  <delete-node tree="function_definition [73903,74315]"/>
  <delete-node tree="}: } [74316,74317]"/>
  <delete-node tree="contract_body [73016,74317]"/>
  <delete-node tree="contract_declaration [72982,74317]"/>
  <delete-node tree="comment: /*     Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [74319,74947]"/>
  <delete-tree tree="inheritance_specifier [74978,74987]"/>
  <delete-node tree="constructor: constructor [75027,75038]"/>
  <delete-node tree="(: ( [75038,75039]"/>
  <delete-tree tree="parameter [75039,75053]"/>
  <delete-node tree=",: , [75053,75054]"/>
  <delete-tree tree="parameter [75055,75068]"/>
  <delete-node tree="): ) [75068,75069]"/>
  <delete-node tree="public: public [75070,75076]"/>
  <delete-node tree="{: { [75077,75078]"/>
  <delete-tree tree="member_expression [75087,75106]"/>
  <delete-node tree="=: = [75107,75108]"/>
  <delete-node tree="identifier: IDAO [75109,75113]"/>
  <delete-node tree="(: ( [75113,75114]"/>
  <delete-node tree="): ) [75124,75125]"/>
  <delete-node tree="call_expression [75109,75125]"/>
  <delete-node tree="assignment_expression [75087,75125]"/>
  <delete-node tree="expression_statement [75087,75126]"/>
  <delete-tree tree="expression_statement [75135,75176]"/>
  <delete-tree tree="expression_statement [75185,75223]"/>
  <delete-node tree="}: } [75228,75229]"/>
  <delete-node tree="function_body [75077,75229]"/>
  <delete-node tree="constructor_definition [75027,75229]"/>
  <delete-node tree="function: function [76260,76268]"/>
  <delete-node tree="identifier: claim [76269,76274]"/>
  <delete-node tree="(: ( [76274,76275]"/>
  <delete-tree tree="parameter [76275,76288]"/>
  <delete-node tree="): ) [76288,76289]"/>
  <delete-node tree="{: { [76322,76323]"/>
  <delete-node tree="}: } [76535,76536]"/>
  <delete-node tree="function_body [76322,76536]"/>
  <delete-node tree="function_definition [76260,76536]"/>
  <delete-tree tree="binary_expression [76755,76775]"/>
  <delete-node tree="identifier: value [76818,76823]"/>
  <delete-node tree="number_literal: 0 [76827,76828]"/>
  <delete-node tree="?: ? [76741,76742]"/>
  <delete-node tree=":: : [76829,76830]"/>
  <delete-tree tree="call_expression [76843,76878]"/>
  <delete-node tree="ternary_expression [76722,76878]"/>
  <delete-tree tree="member_expression [76054,76070]"/>
  <delete-node tree=",: , [76943,76944]"/>
  <delete-node tree=".: . [77326,77327]"/>
  <delete-node tree="identifier: mul [77327,77330]"/>
  <delete-node tree="member_expression [77297,77330]"/>
  <delete-node tree="(: ( [77330,77331]"/>
  <delete-tree tree="call_argument [77331,77336]"/>
  <delete-node tree="): ) [77336,77337]"/>
  <delete-node tree="call_expression [77297,77337]"/>
  <delete-node tree="identifier: value [77435,77440]"/>
  <delete-node tree=",: , [76423,76424]"/>
  <delete-tree tree="call_argument [53716,53731]"/>
  <delete-node tree="=: = [77400,77401]"/>
  <delete-node tree=".: . [77441,77442]"/>
  <delete-node tree="identifier: div [77442,77445]"/>
  <delete-node tree="member_expression [77402,77445]"/>
  <delete-node tree="(: ( [77445,77446]"/>
  <delete-tree tree="call_argument [77446,77473]"/>
  <delete-node tree="): ) [77473,77474]"/>
  <delete-node tree="call_expression [77402,77474]"/>
  <delete-node tree="variable_declaration_statement [77380,77475]"/>
  <delete-node tree="function: function [77888,77896]"/>
  <delete-node tree="identifier: provide [77897,77904]"/>
  <delete-node tree="(: ( [77904,77905]"/>
  <delete-tree tree="parameter [77905,77918]"/>
  <delete-node tree="): ) [77918,77919]"/>
  <delete-node tree="{: { [77952,77953]"/>
  <delete-node tree="=: = [78462,78463]"/>
  <delete-tree tree="call_expression [78464,78510]"/>
  <delete-node tree="variable_declaration_statement [78429,78511]"/>
  <delete-node tree="=: = [78549,78550]"/>
  <delete-tree tree="member_expression [78551,78593]"/>
  <delete-node tree="(: ( [78593,78594]"/>
  <delete-node tree="): ) [78607,78608]"/>
  <delete-node tree="call_expression [78551,78608]"/>
  <delete-node tree="variable_declaration_statement [78520,78609]"/>
  <delete-node tree="expression_statement [78619,78666]"/>
  <delete-node tree="}: } [78839,78840]"/>
  <delete-node tree="function_body [77952,78840]"/>
  <delete-node tree="function_definition [77888,78840]"/>
  <delete-node tree="modifier: modifier [79247,79255]"/>
  <delete-node tree="identifier: onlyFrozen [79256,79266]"/>
  <delete-node tree="(: ( [79266,79267]"/>
  <delete-tree tree="parameter [79267,79282]"/>
  <delete-node tree="): ) [79282,79283]"/>
  <delete-node tree="{: { [79284,79285]"/>
  <delete-node tree="(: ( [79306,79307]"/>
  <delete-tree tree="call_argument [79320,79366]"/>
  <delete-node tree=",: , [79366,79367]"/>
  <delete-node tree=",: , [79384,79385]"/>
  <delete-tree tree="call_argument [79398,79410]"/>
  <delete-node tree="): ) [79419,79420]"/>
  <delete-node tree="call_expression [79294,79420]"/>
  <delete-node tree="expression_statement [79294,79421]"/>
  <delete-node tree="}: } [79438,79439]"/>
  <delete-node tree="function_body [79284,79439]"/>
  <delete-node tree="modifier_definition [79247,79439]"/>
  <delete-node tree="comment: /*     Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [80962,81590]"/>
  <delete-node tree=",: , [75674,75675]"/>
  <delete-node tree=",: , [75692,75693]"/>
  <delete-node tree="&gt;=: &gt;= [78268,78270]"/>
  <delete-node tree="identifier: value [78271,78276]"/>
  <delete-node tree="&gt;=: &gt;= [69103,69105]"/>
  <delete-tree tree="member_expression [69106,69121]"/>
  <delete-node tree="[: [ [69121,69122]"/>
  <delete-node tree="identifier: account [69122,69129]"/>
  <delete-node tree="]: ] [69129,69130]"/>
  <delete-node tree="array_access [69095,69130]"/>
  <delete-tree tree="call_argument [25931,25953]"/>
  <delete-tree tree="call_argument [25223,25241]"/>
  <delete-tree tree="member_expression [73610,73635]"/>
  <delete-node tree=",: , [77740,77741]"/>
  <delete-tree tree="binary_expression [78111,78130]"/>
  <delete-tree tree="binary_expression [61204,61236]"/>
  <delete-tree tree="member_expression [68816,68857]"/>
  <delete-node tree=".: . [68896,68897]"/>
  <delete-node tree="identifier: div [68897,68900]"/>
  <delete-node tree="member_expression [68816,68900]"/>
  <delete-node tree="(: ( [68900,68901]"/>
  <delete-tree tree="call_argument [68901,68912]"/>
  <delete-node tree="): ) [68912,68913]"/>
  <delete-node tree="call_expression [68816,68913]"/>
  <delete-node tree="%: % [55092,55093]"/>
  <delete-tree tree="binary_expression [55094,55101]"/>
  <delete-node tree="binary_expression [55076,55101]"/>
  <delete-node tree="comment: /*     Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [99196,99824]"/>
  <delete-node tree="comment: /*     Copyright 2020 Empty Set Squad &lt;emptysetsquad@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [100639,101267]"/>
  <delete-node tree="contract: contract [101268,101276]"/>
  <delete-node tree="identifier: Deployer1 [101277,101286]"/>
  <delete-node tree="is: is [101287,101289]"/>
  <delete-node tree=",: , [101295,101296]"/>
  <delete-node tree=",: , [101307,101308]"/>
  <delete-node tree="{: { [101321,101322]"/>
  <delete-node tree="function: function [101327,101335]"/>
  <delete-node tree="identifier: initialize [101336,101346]"/>
  <delete-node tree="(: ( [101346,101347]"/>
  <delete-node tree="): ) [101347,101348]"/>
  <delete-tree tree="visibility [101361,101367]"/>
  <delete-tree tree="function_body [101368,101422]"/>
  <delete-node tree="function_definition [101327,101422]"/>
  <delete-node tree="function: function [101428,101436]"/>
  <delete-node tree="identifier: implement [101437,101446]"/>
  <delete-node tree="(: ( [101446,101447]"/>
  <delete-tree tree="parameter [101447,101469]"/>
  <delete-node tree="): ) [101469,101470]"/>
  <delete-tree tree="function_body [101480,101522]"/>
  <delete-node tree="function_definition [101428,101522]"/>
  <delete-node tree="}: } [101523,101524]"/>
  <delete-node tree="contract_body [101321,101524]"/>
  <delete-node tree="contract_declaration [101268,101524]"/>
  <delete-node tree="contract: contract [101526,101534]"/>
  <delete-node tree="identifier: Deployer2 [101535,101544]"/>
  <delete-node tree="is: is [101545,101547]"/>
  <delete-tree tree="inheritance_specifier [101548,101553]"/>
  <delete-node tree=",: , [101553,101554]"/>
  <delete-node tree=",: , [101565,101566]"/>
  <delete-tree tree="inheritance_specifier [101567,101578]"/>
  <delete-node tree="{: { [101579,101580]"/>
  <delete-node tree="function: function [101585,101593]"/>
  <delete-node tree="identifier: initialize [101594,101604]"/>
  <delete-node tree="(: ( [101604,101605]"/>
  <delete-node tree="): ) [101605,101606]"/>
  <delete-tree tree="modifier_invocation [101607,101618]"/>
  <delete-tree tree="visibility [101619,101625]"/>
  <delete-node tree="{: { [101626,101627]"/>
  <delete-tree tree="member_expression [101636,101658]"/>
  <delete-node tree="=: = [101659,101660]"/>
  <delete-tree tree="new_expression [101661,101671]"/>
  <delete-node tree="(: ( [101671,101672]"/>
  <delete-tree tree="primitive_type [101672,101679]"/>
  <delete-node tree="(: ( [101679,101680]"/>
  <delete-node tree="call_argument [101680,101688]"/>
  <delete-node tree="): ) [101688,101689]"/>
  <delete-node tree="type_cast_expression [101672,101689]"/>
  <delete-node tree="call_argument [101672,101689]"/>
  <delete-node tree="): ) [101689,101690]"/>
  <delete-node tree="call_expression [101661,101690]"/>
  <delete-node tree="assignment_expression [101636,101690]"/>
  <delete-node tree="expression_statement [101636,101691]"/>
  <delete-node tree="(: ( [101714,101715]"/>
  <delete-node tree="): ) [101715,101716]"/>
  <delete-node tree="call_expression [101700,101716]"/>
  <delete-node tree="expression_statement [101700,101717]"/>
  <delete-node tree="}: } [101722,101723]"/>
  <delete-node tree="function_body [101626,101723]"/>
  <delete-node tree="function_definition [101585,101723]"/>
  <delete-tree tree="function_definition [101729,101823]"/>
  <delete-node tree="}: } [101824,101825]"/>
  <delete-node tree="contract_body [101579,101825]"/>
  <delete-node tree="contract_declaration [101526,101825]"/>
  <delete-node tree="contract: contract [101827,101835]"/>
  <delete-node tree="identifier: Deployer3 [101836,101845]"/>
  <delete-node tree="is: is [101846,101848]"/>
  <delete-tree tree="inheritance_specifier [101849,101854]"/>
  <delete-node tree=",: , [101854,101855]"/>
  <delete-tree tree="inheritance_specifier [101856,101866]"/>
  <delete-node tree=",: , [101866,101867]"/>
  <delete-tree tree="inheritance_specifier [101868,101879]"/>
  <delete-node tree="{: { [101880,101881]"/>
  <delete-node tree="function: function [101886,101894]"/>
  <delete-node tree="identifier: initialize [101895,101905]"/>
  <delete-node tree="(: ( [101905,101906]"/>
  <delete-node tree="): ) [101906,101907]"/>
  <delete-tree tree="modifier_invocation [101908,101919]"/>
  <delete-tree tree="visibility [101920,101926]"/>
  <delete-node tree="{: { [101927,101928]"/>
  <delete-tree tree="member_expression [101937,101957]"/>
  <delete-node tree="=: = [101958,101959]"/>
  <delete-tree tree="primitive_type [101960,101967]"/>
  <delete-node tree="(: ( [101967,101968]"/>
  <delete-tree tree="new_expression [101968,101976]"/>
  <delete-node tree="(: ( [101976,101977]"/>
  <delete-tree tree="primitive_type [101977,101984]"/>
  <delete-node tree="(: ( [101984,101985]"/>
  <delete-node tree="call_argument [101985,101993]"/>
  <delete-node tree="): ) [101993,101994]"/>
  <delete-node tree="type_cast_expression [101977,101994]"/>
  <delete-node tree="call_argument [101977,101994]"/>
  <delete-node tree=",: , [101994,101995]"/>
  <delete-tree tree="call_argument [101996,102020]"/>
  <delete-node tree="): ) [102020,102021]"/>
  <delete-node tree="call_expression [101968,102021]"/>
  <delete-node tree="call_argument [101968,102021]"/>
  <delete-node tree="): ) [102021,102022]"/>
  <delete-node tree="type_cast_expression [101960,102022]"/>
  <delete-node tree="assignment_expression [101937,102022]"/>
  <delete-node tree="expression_statement [101937,102023]"/>
  <delete-node tree="}: } [102028,102029]"/>
  <delete-node tree="function_body [101927,102029]"/>
  <delete-node tree="function_definition [101886,102029]"/>
  <delete-tree tree="function_definition [102035,102129]"/>
  <delete-node tree="}: } [102130,102131]"/>
  <delete-node tree="contract_body [101880,102131]"/>
  <delete-node tree="contract_declaration [101827,102131]"/>
</actions>
