<?xml version="1.0" ?>
<matches>
  <match src="identifier: _who [25857,25861]" dest="identifier: _who [26122,26126]"/>
  <match src="(: ( [26181,26182]" dest="(: ( [34329,34330]"/>
  <match src="{: { [19059,19060]" dest="{: { [19162,19163]"/>
  <match src="identifier: _who [23695,23699]" dest="identifier: _who [23968,23972]"/>
  <match src=",: , [33375,33376]" dest=",: , [42083,42084]"/>
  <match src="identifier: unsubscribe [11534,11545]" dest="identifier: unsubscribe [11382,11393]"/>
  <match src="assignment_expression [18549,18563]" dest="assignment_expression [18667,18681]"/>
  <match src="identifier: onlyOwner [33403,33412]" dest="identifier: onlyOwner [42111,42120]"/>
  <match src="type_name [27705,27712]" dest="type_name [27818,27825]"/>
  <match src="{: { [27823,27824]" dest="{: { [27936,27937]"/>
  <match src="type_name [17773,17780]" dest="type_name [17768,17775]"/>
  <match src="identifier: ACCOUNT_ADDRESS_INV [26326,26345]" dest="identifier: ACCOUNT_ADDRESS_INV [26468,26487]"/>
  <match src="identifier: div [3317,3320]" dest="identifier: div [3344,3347]"/>
  <match src="type_name [8674,8681]" dest="type_name [8508,8515]"/>
  <match src="identifier: _who [12095,12099]" dest="identifier: _who [11939,11943]"/>
  <match src="if: if [29311,29313]" dest="if: if [29557,29559]"/>
  <match src="public: public [15298,15304]" dest="public: public [15303,15309]"/>
  <match src="parenthesized_expression [28136,28179]" dest="parenthesized_expression [28249,28292]"/>
  <match src="string [14683,14695]" dest="string [14681,14693]"/>
  <match src="): ) [22607,22608]" dest="): ) [22776,22777]"/>
  <match src="binary_expression [18250,18256]" dest="binary_expression [18332,18338]"/>
  <match src="): ) [12741,12742]" dest="): ) [12609,12610]"/>
  <match src="bool: bool [12764,12768]" dest="bool: bool [12632,12636]"/>
  <match src="function_definition [20730,20889]" dest="function_definition [20825,20984]"/>
  <match src="parameter [17838,17852]" dest="parameter [17848,17862]"/>
  <match src="variable_declaration [1996,2005]" dest="variable_declaration [2007,2016]"/>
  <match src="primitive_type [27590,27597]" dest="primitive_type [27703,27710]"/>
  <match src="call_expression [33007,33049]" dest="call_expression [41708,41750]"/>
  <match src="return: return [2748,2754]" dest="return: return [2767,2773]"/>
  <match src="parameter [29503,29524]" dest="parameter [29757,29778]"/>
  <match src="type_name [14008,14015]" dest="type_name [14003,14010]"/>
  <match src="variable_declaration_statement [12377,12435]" dest="variable_declaration_statement [12245,12303]"/>
  <match src="modifier_invocation [31838,31847]" dest="modifier_invocation [32067,32076]"/>
  <match src="identifier: from [28198,28202]" dest="identifier: from [28311,28315]"/>
  <match src="identifier: targets [13881,13888]" dest="identifier: targets [13876,13883]"/>
  <match src="parameter [20747,20763]" dest="parameter [20842,20858]"/>
  <match src="contract_body [8635,15457]" dest="contract_body [8469,15462]"/>
  <match src="else: else [26386,26390]" dest="else: else [26528,26532]"/>
  <match src="string: string [33903,33909]" dest="string: string [42602,42608]"/>
  <match src="pure: pure [1421,1425]" dest="pure: pure [1466,1470]"/>
  <match src="member_expression [13628,13666]" dest="member_expression [13589,13627]"/>
  <match src="identifier: _ [31621,31622]" dest="identifier: _ [31847,31848]"/>
  <match src="bytes32: bytes32 [9633,9640]" dest="bytes32: bytes32 [9463,9470]"/>
  <match src="variable_declaration [29102,29114]" dest="variable_declaration [29348,29360]"/>
  <match src="uint256: uint256 [7452,7459]" dest="uint256: uint256 [7265,7272]"/>
  <match src="block_statement [22987,23026]" dest="block_statement [23190,23229]"/>
  <match src="primitive_type [28936,28943]" dest="primitive_type [29150,29157]"/>
  <match src="uint256: uint256 [1390,1397]" dest="uint256: uint256 [1435,1442]"/>
  <match src="type_name [28599,28606]" dest="type_name [28784,28791]"/>
  <match src="visibility [20781,20787]" dest="visibility [20876,20882]"/>
  <match src="return_type_definition [33632,33647]" dest="return_type_definition [42331,42346]"/>
  <match src="(: ( [29565,29566]" dest="(: ( [29819,29820]"/>
  <match src="array_access [13298,13326]" dest="array_access [13259,13287]"/>
  <match src="primitive_type [31813,31820]" dest="primitive_type [32042,32049]"/>
  <match src=",: , [17963,17964]" dest=",: , [17985,17986]"/>
  <match src="=: = [26576,26577]" dest="=: = [26717,26718]"/>
  <match src="call_expression [20998,21043]" dest="call_expression [21127,21172]"/>
  <match src="call_argument [21741,21751]" dest="call_argument [21873,21883]"/>
  <match src="primitive_type [17954,17961]" dest="primitive_type [17976,17983]"/>
  <match src="}: } [18570,18571]" dest="}: } [18688,18689]"/>
  <match src=",: , [4080,4081]" dest=",: , [4006,4007]"/>
  <match src="identifier: _who [12949,12953]" dest="identifier: _who [12815,12819]"/>
  <match src="variable_declaration_statement [14008,14038]" dest="variable_declaration_statement [14003,14033]"/>
  <match src="identifier: _spender [23859,23867]" dest="identifier: _spender [24166,24174]"/>
  <match src="function_definition [33600,33675]" dest="function_definition [42299,42374]"/>
  <match src="function: function [10474,10482]" dest="function: function [10279,10287]"/>
  <match src="call_argument [29381,29387]" dest="call_argument [29627,29633]"/>
  <match src="type_name [14437,14444]" dest="type_name [14432,14439]"/>
  <match src="expression_statement [28463,28502]" dest="expression_statement [28627,28666]"/>
  <match src="bytes32: bytes32 [13005,13012]" dest="bytes32: bytes32 [12925,12932]"/>
  <match src=".: . [21744,21745]" dest=".: . [21876,21877]"/>
  <match src="parameter [28646,28650]" dest="parameter [28846,28850]"/>
  <match src=",: , [12278,12279]" dest=",: , [12146,12147]"/>
  <match src="variable_declaration [11612,11626]" dest="variable_declaration [11460,11474]"/>
  <match src="identifier: TrustToken [32644,32654]" dest="identifier: TrustToken [41363,41373]"/>
  <match src="}: } [30759,30760]" dest="}: } [31004,31005]"/>
  <match src="comment: /**     * @dev sets the original `owner` of the contract to the sender     * at construction. Must then be reinitialized      */ [30986,31117]" dest="comment: /**      * @dev sets the original `owner` of the contract to the sender      * at construction. Must then be reinitialized      */ [31206,31339]"/>
  <match src="{: { [28652,28653]" dest="{: { [28852,28853]"/>
  <match src="): ) [28820,28821]" dest="): ) [29022,29023]"/>
  <match src="constant: constant [24445,24453]" dest="constant: constant [24748,24756]"/>
  <match src="emit_statement [29872,29911]" dest="emit_statement [30134,30173]"/>
  <match src="call_argument [11274,11278]" dest="call_argument [11122,11126]"/>
  <match src="parameter [22586,22607]" dest="parameter [22752,22776]"/>
  <match src="): ) [26135,26136]" dest="): ) [26424,26425]"/>
  <match src="visibility [12975,12981]" dest="visibility [12850,12856]"/>
  <match src=",: , [28539,28540]" dest=",: , [28703,28704]"/>
  <match src="user_defined_type [33198,33206]" dest="user_defined_type [41906,41914]"/>
  <match src="call_argument [21718,21726]" dest="call_argument [21850,21858]"/>
  <match src="parameter [21863,21883]" dest="parameter [22023,22043]"/>
  <match src="identifier: to [27838,27840]" dest="identifier: to [27951,27953]"/>
  <match src="identifier: a [3915,3916]" dest="identifier: a [3908,3909]"/>
  <match src="expression_statement [27976,27996]" dest="expression_statement [28089,28109]"/>
  <match src="identifier: Registry [8626,8634]" dest="identifier: Registry [8460,8468]"/>
  <match src="identifier: require [14862,14869]" dest="identifier: require [14862,14869]"/>
  <match src="variable_declaration [25930,25941]" dest="variable_declaration [26219,26230]"/>
  <match src="[: [ [12804,12805]" dest="[: [ [12672,12673]"/>
  <match src="pure: pure [33889,33893]" dest="pure: pure [42588,42592]"/>
  <match src="state_variable_declaration [8830,8851]" dest="state_variable_declaration [8660,8681]"/>
  <match src="call_argument [1472,1504]" dest="call_argument [1517,1549]"/>
  <match src="parameter [20922,20938]" dest="parameter [21027,21043]"/>
  <match src="pragma: pragma [5585,5591]" dest="pragma: pragma [5479,5485]"/>
  <match src="function: function [7418,7426]" dest="function: function [7231,7239]"/>
  <match src="parameter [6700,6715]" dest="parameter [6513,6528]"/>
  <match src="contract: contract [27429,27437]" dest="contract: contract [27552,27560]"/>
  <match src="return_type_definition [19028,19058]" dest="return_type_definition [19131,19161]"/>
  <match src="type_name [11096,11109]" dest="type_name [10944,10957]"/>
  <match src="call_argument [29998,30001]" dest="call_argument [30260,30263]"/>
  <match src="): ) [8599,8600]" dest="): ) [8433,8434]"/>
  <match src="parameter [21824,21840]" dest="parameter [21966,21982]"/>
  <match src="number_literal: 0 [5464,5465]" dest="number_literal: 0 [5364,5365]"/>
  <match src="identifier: adminAddr [9976,9985]" dest="identifier: adminAddr [9781,9790]"/>
  <match src="number_literal: 0x6973426c61636b6c697374656400000000000000000000000000000000000000 [24222,24288]" dest="number_literal: 0x6973426c61636b6c697374656400000000000000000000000000000000000000 [24525,24591]"/>
  <match src=",: , [11070,11071]" dest=",: , [10918,10919]"/>
  <match src="number_literal: 8 [33749,33750]" dest="number_literal: 8 [42448,42449]"/>
  <match src="if_statement [26642,27116]" dest="if_statement [26783,27257]"/>
  <match src="visibility [6717,6725]" dest="visibility [6530,6538]"/>
  <match src="): ) [12199,12200]" dest="): ) [12067,12068]"/>
  <match src="]: ] [23699,23700]" dest="]: ] [23972,23973]"/>
  <match src="{: { [22987,22988]" dest="{: { [23190,23191]"/>
  <match src="identifier: a [1398,1399]" dest="identifier: a [1443,1444]"/>
  <match src="[: [ [13842,13843]" dest="[: [ [13837,13838]"/>
  <match src="call_argument [11501,11508]" dest="call_argument [11349,11356]"/>
  <match src="(: ( [4074,4075]" dest="(: ( [4000,4001]"/>
  <match src="type_name [12955,12962]" dest="type_name [12821,12828]"/>
  <match src="string [33551,33572]" dest="string [42250,42271]"/>
  <match src="binary_expression [4118,4123]" dest="binary_expression [4044,4049]"/>
  <match src="identifier: require [33007,33014]" dest="identifier: require [41708,41715]"/>
  <match src="}: } [18573,18574]" dest="}: } [18691,18692]"/>
  <match src="call_argument [21919,21931]" dest="call_argument [22085,22097]"/>
  <match src="identifier: _who [23452,23456]" dest="identifier: _who [23700,23704]"/>
  <match src="call_expression [28833,28874]" dest="call_expression [29035,29076]"/>
  <match src="internal: internal [3267,3275]" dest="internal: internal [3294,3302]"/>
  <match src="function_body [21894,22046]" dest="function_body [22060,22212]"/>
  <match src="return_statement [33829,33849]" dest="return_statement [42528,42548]"/>
  <match src=",: , [21931,21932]" dest=",: , [22097,22098]"/>
  <match src="event_paramater [30906,30935]" dest="event_paramater [31141,31170]"/>
  <match src="call_expression [14862,14897]" dest="call_expression [14862,14897]"/>
  <match src="emit: emit [11466,11470]" dest="emit: emit [11314,11318]"/>
  <match src="): ) [22037,22038]" dest="): ) [22203,22204]"/>
  <match src="uint256: uint256 [1936,1943]" dest="uint256: uint256 [1947,1954]"/>
  <match src="event: event [30869,30874]" dest="event: event [31114,31119]"/>
  <match src="(: ( [22666,22667]" dest="(: ( [22835,22836]"/>
  <match src="}: } [21781,21782]" dest="}: } [21913,21914]"/>
  <match src="identifier: REGISTERED_CONTRACT [24312,24331]" dest="identifier: REGISTERED_CONTRACT [24615,24634]"/>
  <match src="pure: pure [33627,33631]" dest="pure: pure [42326,42330]"/>
  <match src="member_expression [14662,14672]" dest="member_expression [14660,14670]"/>
  <match src="indexed: indexed [27535,27542]" dest="indexed: indexed [27648,27655]"/>
  <match src="binary_expression [10580,10679]" dest="binary_expression [10385,10484]"/>
  <match src="): ) [21883,21884]" dest="): ) [22049,22050]"/>
  <match src="uint256: uint256 [27610,27617]" dest="uint256: uint256 [27723,27730]"/>
  <match src="(: ( [10009,10010]" dest="(: ( [9814,9815]"/>
  <match src="call_expression [14496,14524]" dest="call_expression [14491,14519]"/>
  <match src="call_argument [30159,30165]" dest="call_argument [30421,30427]"/>
  <match src="uint256: uint256 [27739,27746]" dest="uint256: uint256 [27852,27859]"/>
  <match src="{: { [30822,30823]" dest="{: { [31067,31068]"/>
  <match src="&quot;: &quot; [33551,33552]" dest="&quot;: &quot; [42250,42251]"/>
  <match src="type_name [5380,5386]" dest="type_name [5280,5286]"/>
  <match src="(: ( [2350,2351]" dest="(: ( [2369,2370]"/>
  <match src="expression_statement [23542,23621]" dest="expression_statement [23815,23894]"/>
  <match src="event_paramater [18925,18943]" dest="event_paramater [19028,19046]"/>
  <match src="address: address [6027,6034]" dest="address: address [5840,5847]"/>
  <match src="function: function [23752,23760]" dest="function: function [24025,24033]"/>
  <match src="[: [ [26814,26815]" dest="[: [ [26955,26956]"/>
  <match src="identifier: _tokenHolder [21012,21024]" dest="identifier: _tokenHolder [21141,21153]"/>
  <match src="array_access [26804,26819]" dest="array_access [26945,26960]"/>
  <match src="identifier: _to [14272,14275]" dest="identifier: _to [14267,14270]"/>
  <match src="number_literal: 0 [27820,27821]" dest="number_literal: 0 [27933,27934]"/>
  <match src=",: , [28407,28408]" dest=",: , [28539,28540]"/>
  <match src=",: , [10792,10793]" dest=",: , [10607,10608]"/>
  <match src="event_paramater [8141,8154]" dest="event_paramater [7954,7967]"/>
  <match src="identifier: a [4118,4119]" dest="identifier: a [4044,4045]"/>
  <match src="type_name [27549,27556]" dest="type_name [27662,27669]"/>
  <match src="comment: // assert(a == b * c + a % b); // There is no case in which this doesn't hold [4134,4211]" dest="comment: // assert(a == b * c + a % b); // There is no case in which this doesn't hold [4060,4137]"/>
  <match src="return_statement [10572,10681]" dest="return_statement [10377,10486]"/>
  <match src="call_expression [30095,30118]" dest="call_expression [30357,30380]"/>
  <match src="comment: // File: @trusttoken/trusttokens/contracts/ValTokenWithHook.sol [27328,27391]" dest="comment: // File: contracts/trusttokens/TrueCoinReceiver.sol [27271,27322]"/>
  <match src=",: , [29077,29078]" dest=",: , [29323,29324]"/>
  <match src="identifier: oldValue [22977,22985]" dest="identifier: oldValue [23180,23188]"/>
  <match src="]: ] [13086,13087]" dest="]: ] [13047,13048]"/>
  <match src="return: return [30833,30839]" dest="return: return [31078,31084]"/>
  <match src="call_argument [29931,29934]" dest="call_argument [30193,30196]"/>
  <match src="): ) [5918,5919]" dest="): ) [5731,5732]"/>
  <match src="identifier: allowance [22883,22892]" dest="identifier: allowance [23086,23095]"/>
  <match src="type_name [22927,22934]" dest="type_name [23130,23137]"/>
  <match src="]: ] [27794,27795]" dest="]: ] [27907,27908]"/>
  <match src="}: } [18292,18293]" dest="}: } [18374,18375]"/>
  <match src=",: , [11290,11291]" dest=",: , [11138,11139]"/>
  <match src="): ) [21042,21043]" dest="): ) [21171,21172]"/>
  <match src="identifier: Transfer [29264,29272]" dest="identifier: Transfer [29510,29518]"/>
  <match src="): ) [33646,33647]" dest="): ) [42345,42346]"/>
  <match src="identifier: hasHook [29151,29158]" dest="identifier: hasHook [29397,29404]"/>
  <match src="string_literal [29717,29753]" dest="string_literal [29971,30007]"/>
  <match src="string [1043,1072]" dest="string [1080,1109]"/>
  <match src="primitive_type [28156,28163]" dest="primitive_type [28269,28276]"/>
  <match src="identifier: notes [13135,13140]" dest="identifier: notes [13096,13101]"/>
  <match src="identifier: RegistryClone [10123,10136]" dest="identifier: RegistryClone [9928,9941]"/>
  <match src="identifier: index [12453,12458]" dest="identifier: index [12321,12326]"/>
  <match src="primitive_type [25883,25890]" dest="primitive_type [26166,26173]"/>
  <match src="if_statement [29311,29400]" dest="if_statement [29557,29646]"/>
  <match src="type_name [1435,1442]" dest="type_name [1480,1487]"/>
  <match src="pure: pure [33789,33793]" dest="pure: pure [42488,42492]"/>
  <match src="event_paramater [9945,9958]" dest="event_paramater [9750,9763]"/>
  <match src="identifier: balanceOf [19111,19120]" dest="identifier: balanceOf [19214,19223]"/>
  <match src="address: address [14069,14076]" dest="address: address [14064,14071]"/>
  <match src="event: event [27579,27584]" dest="event: event [27692,27697]"/>
  <match src="internal: internal [28980,28988]" dest="internal: internal [29218,29226]"/>
  <match src="}: } [11516,11517]" dest="}: } [11364,11365]"/>
  <match src="event: event [8084,8089]" dest="event: event [7897,7902]"/>
  <match src="bytes32: bytes32 [10096,10103]" dest="bytes32: bytes32 [9901,9908]"/>
  <match src="number_literal: 20 [25969,25971]" dest="number_literal: 20 [26258,26260]"/>
  <match src="primitive_type [29886,29893]" dest="primitive_type [30148,30155]"/>
  <match src="string [28292,28311]" dest="string [28405,28424]"/>
  <match src="emit: emit [29921,29925]" dest="emit: emit [30183,30187]"/>
  <match src="member_expression [33428,33443]" dest="member_expression [42136,42151]"/>
  <match src="type_name [28409,28416]" dest="type_name [28550,28557]"/>
  <match src="return_type_definition [2342,2359]" dest="return_type_definition [2361,2378]"/>
  <match src="): ) [1943,1944]" dest="): ) [1954,1955]"/>
  <match src="{: { [28822,28823]" dest="{: { [29024,29025]"/>
  <match src="function: function [33766,33774]" dest="function: function [42465,42473]"/>
  <match src="returns: returns [33894,33901]" dest="returns: returns [42593,42600]"/>
  <match src=",: , [10514,10515]" dest=",: , [10319,10320]"/>
  <match src="state_variable_declaration [19874,19979]" dest="state_variable_declaration [19977,20082]"/>
  <match src="comment: /**      * @dev Emitted when the allowance of a `spender` for an `owner` is set by      * a call to {approve}. `value` is the new allowance.      */ [8164,8315]" dest="comment: /**      * @dev Emitted when the allowance of a `spender` for an `owner` is set by      * a call to {approve}. `value` is the new allowance.      */ [7977,8128]"/>
  <match src="identifier: _to [14511,14514]" dest="identifier: _to [14506,14509]"/>
  <match src="state_variable_declaration [24295,24401]" dest="state_variable_declaration [24598,24704]"/>
  <match src="call_expression [14307,14342]" dest="call_expression [14302,14337]"/>
  <match src=".: . [13162,13163]" dest=".: . [13123,13124]"/>
  <match src="): ) [26076,26077]" dest="): ) [26365,26366]"/>
  <match src="=: = [23056,23057]" dest="=: = [23259,23260]"/>
  <match src="returns: returns [4745,4752]" dest="returns: returns [4679,4686]"/>
  <match src="type_name [8121,8128]" dest="type_name [7934,7941]"/>
  <match src="indexed: indexed [10227,10234]" dest="indexed: indexed [10032,10039]"/>
  <match src="bytes32: bytes32 [13560,13567]" dest="bytes32: bytes32 [13521,13528]"/>
  <match src="event: event [10163,10168]" dest="event: event [9968,9973]"/>
  <match src="type_name [28396,28403]" dest="type_name [28528,28535]"/>
  <match src="parameter [1874,1883]" dest="parameter [1885,1894]"/>
  <match src="&quot;: &quot; [1071,1072]" dest="&quot;: &quot; [1108,1109]"/>
  <match src="function_definition [11921,12052]" dest="function_definition [11755,11886]"/>
  <match src=".: . [14121,14122]" dest=".: . [14116,14117]"/>
  <match src="primitive_type [17838,17845]" dest="primitive_type [17848,17855]"/>
  <match src="event: event [18888,18893]" dest="event: event [18991,18996]"/>
  <match src="identifier: a [18558,18559]" dest="identifier: a [18676,18677]"/>
  <match src="return: return [5491,5497]" dest="return: return [5391,5397]"/>
  <match src="=: = [1009,1010]" dest="=: = [1046,1047]"/>
  <match src="==: == [18347,18349]" dest="==: == [18429,18431]"/>
  <match src="): ) [2734,2735]" dest="): ) [2753,2754]"/>
  <match src="function_body [1444,1513]" dest="function_body [1489,1558]"/>
  <match src="}: } [29300,29301]" dest="}: } [29546,29547]"/>
  <match src="function: function [6008,6016]" dest="function: function [5821,5829]"/>
  <match src="state_mutability [6053,6057]" dest="state_mutability [5866,5870]"/>
  <match src="{: { [26137,26138]" dest="{: { [26426,26427]"/>
  <match src="user_defined_type [19813,19830]" dest="user_defined_type [19916,19933]"/>
  <match src="identifier: getAttributeTimestamp [13524,13545]" dest="identifier: getAttributeTimestamp [13485,13506]"/>
  <match src="comment: /**      * @dev Decrease the amount of tokens that an owner allowed to a spender.      *      * approve should be called when allowed[_spender] == 0. To decrement      * allowed value is better to use this function to avoid 2 calls (and wait until      * the first transaction is mined)      * From MonolithDAO Token.sol      * @param _spender The address which will spend the funds.      * @param _subtractedValue The amount of tokens to decrease the allowance by.      */ [22054,22536]" dest="comment: /**      * @dev Decrease the amount of tokens that an owner allowed to a spender.      *      * approve should be called when allowed[_spender] == 0. To decrement      * allowed value is better to use this function to avoid 2 calls (and wait until      * the first transaction is mined)      * From MonolithDAO Token.sol      * @param _spender The address which will spend the funds.      * @param _subtractedValue The amount of tokens to decrease the allowance by.      */ [22220,22702]"/>
  <match src="identifier: resolveSender [28989,29002]" dest="identifier: resolveSender [29235,29248]"/>
  <match src="&quot;: &quot; [33047,33048]" dest="&quot;: &quot; [41748,41749]"/>
  <match src="binary_expression [1964,1970]" dest="binary_expression [1975,1981]"/>
  <match src="=: = [27979,27980]" dest="=: = [28092,28093]"/>
  <match src="type_name [19874,19881]" dest="type_name [19977,19984]"/>
  <match src="uint256: uint256 [6740,6747]" dest="uint256: uint256 [6553,6560]"/>
  <match src="call_argument [15444,15445]" dest="call_argument [15449,15450]"/>
  <match src="type_name [5369,5376]" dest="type_name [5269,5276]"/>
  <match src="uint256: uint256 [18396,18403]" dest="uint256: uint256 [18490,18497]"/>
  <match src="): ) [27571,27572]" dest="): ) [27684,27685]"/>
  <match src="uint256: uint256 [6342,6349]" dest="uint256: uint256 [6155,6162]"/>
  <match src="(: ( [9889,9890]" dest="(: ( [9694,9695]"/>
  <match src="=: = [33070,33071]" dest="=: = [41771,41772]"/>
  <match src="identifier: _spender [23797,23805]" dest="identifier: _spender [24089,24097]"/>
  <match src="binary_expression [26822,26845]" dest="binary_expression [26963,26986]"/>
  <match src="if: if [22954,22956]" dest="if: if [23157,23159]"/>
  <match src="identifier: _syncer [11379,11386]" dest="identifier: _syncer [11227,11234]"/>
  <match src="identifier: require [2679,2686]" dest="identifier: require [2698,2705]"/>
  <match src="primitive_type [18396,18403]" dest="primitive_type [18490,18497]"/>
  <match src="parameter [17976,18006]" dest="parameter [18016,18046]"/>
  <match src="(: ( [4753,4754]" dest="(: ( [4687,4688]"/>
  <match src="}: } [28555,28556]" dest="}: } [28719,28720]"/>
  <match src="function_definition [25367,25420]" dest="function_definition [25616,25675]"/>
  <match src="parameter [2317,2326]" dest="parameter [2336,2345]"/>
  <match src="return: return [13110,13116]" dest="return: return [13071,13077]"/>
  <match src="address: address [25849,25856]" dest="address: address [26114,26121]"/>
  <match src="): ) [3355,3356]" dest="): ) [3382,3383]"/>
  <match src="identifier: who [9906,9909]" dest="identifier: who [9711,9714]"/>
  <match src="identifier: _value [29903,29909]" dest="identifier: _value [30165,30171]"/>
  <match src="identifier: OwnershipTransferred [31190,31210]" dest="identifier: OwnershipTransferred [31412,31432]"/>
  <match src="identifier: _attribute [26882,26892]" dest="identifier: _attribute [27023,27033]"/>
  <match src="primitive_type [11345,11352]" dest="primitive_type [11193,11200]"/>
  <match src="event_definition [8321,8399]" dest="event_definition [8134,8212]"/>
  <match src="type_name [24553,24560]" dest="type_name [24852,24859]"/>
  <match src="using: using [32701,32706]" dest="using: using [41400,41405]"/>
  <match src="call_argument [14870,14896]" dest="call_argument [14870,14896]"/>
  <match src="member_expression [31373,31383]" dest="member_expression [31597,31607]"/>
  <match src="type_name [7901,7905]" dest="type_name [7714,7718]"/>
  <match src="): ) [22705,22706]" dest="): ) [22874,22875]"/>
  <match src="&amp;: &amp; [26584,26585]" dest="&amp;: &amp; [26725,26726]"/>
  <match src="address: address [10038,10045]" dest="address: address [9843,9850]"/>
  <match src="type_name [5431,5438]" dest="type_name [5331,5338]"/>
  <match src="parenthesized_expression [33550,33573]" dest="parenthesized_expression [42249,42272]"/>
  <match src="binary_expression [2663,2668]" dest="binary_expression [2682,2687]"/>
  <match src="primitive_type [28951,28958]" dest="primitive_type [29174,29181]"/>
  <match src="array_access [13298,13314]" dest="array_access [13259,13275]"/>
  <match src="(: ( [33172,33173]" dest="(: ( [41873,41874]"/>
  <match src="call_expression [21905,21955]" dest="call_expression [22071,22121]"/>
  <match src="visibility [33882,33888]" dest="visibility [42581,42587]"/>
  <match src="type_name [29823,29830]" dest="type_name [30077,30084]"/>
  <match src="pure: pure [17824,17828]" dest="pure: pure [17834,17838]"/>
  <match src="}: } [26533,26534]" dest="}: } [26675,26676]"/>
  <match src="]: ] [13313,13314]" dest="]: ] [13274,13275]"/>
  <match src="identifier: _approveAllArgs [20814,20829]" dest="identifier: _approveAllArgs [20909,20924]"/>
  <match src="): ) [32212,32213]" dest="): ) [32443,32444]"/>
  <match src="user_defined_type [27466,27486]" dest="user_defined_type [27581,27601]"/>
  <match src="type_name [6700,6707]" dest="type_name [6513,6520]"/>
  <match src="call_argument [14479,14483]" dest="call_argument [14474,14478]"/>
  <match src="address: address [13216,13223]" dest="address: address [13177,13184]"/>
  <match src="identifier: attributes [10920,10930]" dest="identifier: attributes [10768,10778]"/>
  <match src="visibility [13413,13419]" dest="visibility [13374,13380]"/>
  <match src="): ) [15797,15798]" dest="): ) [15788,15789]"/>
  <match src="call_expression [28463,28501]" dest="call_expression [28627,28665]"/>
  <match src="parameter [1435,1442]" dest="parameter [1480,1487]"/>
  <match src=",: , [5367,5368]" dest=",: , [5267,5268]"/>
  <match src="identifier: c [2004,2005]" dest="identifier: c [2015,2016]"/>
  <match src="type_name [27669,27676]" dest="type_name [27782,27789]"/>
  <match src="call_argument [12280,12295]" dest="call_argument [12148,12163]"/>
  <match src="call_argument [29273,29276]" dest="call_argument [29519,29522]"/>
  <match src="identifier: _burn [29424,29429]" dest="identifier: _burn [29670,29675]"/>
  <match src="): ) [28650,28651]" dest="): ) [28850,28851]"/>
  <match src="identifier: balanceOf [19294,19303]" dest="identifier: balanceOf [19397,19406]"/>
  <match src="array_access [11240,11254]" dest="array_access [11088,11102]"/>
  <match src="identifier: prior [25991,25996]" dest="identifier: prior [26280,26285]"/>
  <match src="{: { [30728,30729]" dest="{: { [30973,30974]"/>
  <match src="address: address [21863,21870]" dest="address: address [22023,22030]"/>
  <match src="{: { [26422,26423]" dest="{: { [26564,26565]"/>
  <match src="public: public [12137,12143]" dest="public: public [12005,12011]"/>
  <match src="}: } [14349,14350]" dest="}: } [14344,14345]"/>
  <match src="expression_statement [29623,29667]" dest="expression_statement [29877,29921]"/>
  <match src="type_name [15842,15870]" dest="type_name [15832,15859]"/>
  <match src="identifier: index [13982,13987]" dest="identifier: index [13977,13982]"/>
  <match src="if: if [18246,18248]" dest="if: if [18328,18330]"/>
  <match src="identifier: _value [29084,29090]" dest="identifier: _value [29330,29336]"/>
  <match src="array_access [25999,26014]" dest="array_access [26288,26303]"/>
  <match src="solidity_version_comparison_operator [77,79]" dest="solidity_version_comparison_operator [106,108]"/>
  <match src="primitive_type [21824,21831]" dest="primitive_type [21966,21973]"/>
  <match src="contract: contract [8617,8625]" dest="contract: contract [8451,8459]"/>
  <match src="identifier: _setAllowance [23107,23120]" dest="identifier: _setAllowance [23310,23323]"/>
  <match src="public: public [20781,20787]" dest="public: public [20876,20882]"/>
  <match src="&quot;: &quot; [12351,12352]" dest="&quot;: &quot; [12219,12220]"/>
  <match src="=: = [23869,23870]" dest="=: = [24176,24177]"/>
  <match src="array_access [12521,12535]" dest="array_access [12389,12403]"/>
  <match src="primitive_type [14471,14478]" dest="primitive_type [14466,14473]"/>
  <match src="function_definition [30681,30760]" dest="function_definition [30926,31005]"/>
  <match src="return_type_definition [10546,10560]" dest="return_type_definition [10351,10365]"/>
  <match src="function: function [17749,17757]" dest="function: function [17725,17733]"/>
  <match src="parameter [28769,28780]" dest="parameter [28971,28982]"/>
  <match src="}: } [15453,15454]" dest="}: } [15458,15459]"/>
  <match src="primitive_type [33724,33729]" dest="primitive_type [42423,42428]"/>
  <match src="return_type_definition [13425,13442]" dest="return_type_definition [13386,13403]"/>
  <match src="address: address [7435,7442]" dest="address: address [7248,7255]"/>
  <match src="&quot;: &quot; [12352,12353]" dest="&quot;: &quot; [12220,12221]"/>
  <match src="state_mutability [33627,33631]" dest="state_mutability [42326,42330]"/>
  <match src="): ) [17926,17927]" dest="): ) [17936,17937]"/>
  <match src="primitive_type [28094,28101]" dest="primitive_type [28207,28214]"/>
  <match src="=: = [23711,23712]" dest="=: = [23984,23985]"/>
  <match src="=: = [32161,32162]" dest="=: = [32392,32393]"/>
  <match src="identifier: msg [22695,22698]" dest="identifier: msg [22864,22867]"/>
  <match src="parameter [33724,33729]" dest="parameter [42423,42428]"/>
  <match src="parameter [17784,17813]" dest="parameter [17788,17817]"/>
  <match src="parameter [11946,11964]" dest="parameter [11780,11798]"/>
  <match src=",: , [20027,20028]" dest=",: , [20126,20127]"/>
  <match src="array_access [19467,19482]" dest="array_access [19570,19585]"/>
  <match src="contract: contract [32635,32643]" dest="contract: contract [41354,41362]"/>
  <match src="modifier: modifier [31535,31543]" dest="modifier: modifier [31761,31769]"/>
  <match src=",: , [28689,28690]" dest=",: , [28889,28890]"/>
  <match src="address: address [14320,14327]" dest="address: address [14315,14322]"/>
  <match src="): ) [6356,6357]" dest="): ) [6169,6170]"/>
  <match src="public: public [31137,31143]" dest="public: public [31359,31365]"/>
  <match src="parameter [13379,13391]" dest="parameter [13340,13352]"/>
  <match src="member_expression [33101,33111]" dest="member_expression [41802,41812]"/>
  <match src="==: == [26406,26408]" dest="==: == [26548,26550]"/>
  <match src="indexed: indexed [10018,10025]" dest="indexed: indexed [9823,9830]"/>
  <match src="identifier: ProxyStorage [24022,24034]" dest="identifier: ProxyStorage [24325,24337]"/>
  <match src="primitive_type [28816,28820]" dest="primitive_type [29018,29022]"/>
  <match src="): ) [4094,4095]" dest="): ) [4020,4021]"/>
  <match src="type_name [945,952]" dest="type_name [982,989]"/>
  <match src="function_definition [13682,14226]" dest="function_definition [13643,14221]"/>
  <match src="): ) [27821,27822]" dest="): ) [27934,27935]"/>
  <match src="primitive_type [32203,32210]" dest="primitive_type [32434,32441]"/>
  <match src="{: { [19274,19275]" dest="{: { [19377,19378]"/>
  <match src="parameter [32969,32987]" dest="parameter [41670,41688]"/>
  <match src="(: ( [29314,29315]" dest="(: ( [29560,29561]"/>
  <match src="(: ( [2595,2596]" dest="(: ( [2614,2615]"/>
  <match src="uint8: uint8 [33641,33646]" dest="uint8: uint8 [42340,42345]"/>
  <match src="): ) [14405,14406]" dest="): ) [14400,14401]"/>
  <match src="call_argument [21036,21042]" dest="call_argument [21165,21171]"/>
  <match src="): ) [33816,33817]" dest="): ) [42515,42516]"/>
  <match src="parameter [12087,12099]" dest="parameter [11931,11943]"/>
  <match src="{: { [18492,18493]" dest="{: { [18610,18611]"/>
  <match src="emit_statement [21966,22039]" dest="emit_statement [22132,22205]"/>
  <match src="parameter [28936,28949]" dest="parameter [29150,29163]"/>
  <match src="[: [ [26570,26571]" dest="[: [ [26711,26712]"/>
  <match src="address: address [8359,8366]" dest="address: address [8172,8179]"/>
  <match src="false: false [27938,27943]" dest="false: false [28051,28056]"/>
  <match src="type_name [15915,15922]" dest="type_name [15903,15910]"/>
  <match src="primitive_type [8121,8128]" dest="primitive_type [7934,7941]"/>
  <match src="identifier: b [5459,5460]" dest="identifier: b [5359,5360]"/>
  <match src="type_name [25133,25140]" dest="type_name [25400,25407]"/>
  <match src="identifier: c [2687,2688]" dest="identifier: c [2706,2707]"/>
  <match src="memory: memory [33910,33916]" dest="memory: memory [42609,42615]"/>
  <match src="emit: emit [29259,29263]" dest="emit: emit [29505,29509]"/>
  <match src="event: event [8321,8326]" dest="event: event [8134,8139]"/>
  <match src="constant: constant [24561,24569]" dest="constant: constant [24860,24868]"/>
  <match src="type_name [13434,13441]" dest="type_name [13395,13402]"/>
  <match src="returns: returns [22616,22623]" dest="returns: returns [22785,22792]"/>
  <match src="return_statement [2026,2035]" dest="return_statement [2037,2046]"/>
  <match src="identifier: getAttributeAdminAddr [13357,13378]" dest="identifier: getAttributeAdminAddr [13318,13339]"/>
  <match src="variable_declaration_statement [13865,13896]" dest="variable_declaration_statement [13860,13891]"/>
  <match src="identifier: tokenFallback [30247,30260]" dest="identifier: tokenFallback [30509,30522]"/>
  <match src=",: , [19222,19223]" dest=",: , [19325,19326]"/>
  <match src="address: address [14394,14401]" dest="address: address [14389,14396]"/>
  <match src="uint256: uint256 [29445,29452]" dest="uint256: uint256 [29691,29698]"/>
  <match src="parameter [7435,7450]" dest="parameter [7248,7263]"/>
  <match src="parameter [18143,18152]" dest="parameter [18201,18210]"/>
  <match src="string_literal [33836,33848]" dest="string_literal [42535,42547]"/>
  <match src="function_body [13786,14226]" dest="function_body [13781,14221]"/>
  <match src="identifier: _tokenHolder [21919,21931]" dest="identifier: _tokenHolder [22085,22097]"/>
  <match src="identifier: _spender [21832,21840]" dest="identifier: _spender [21974,21982]"/>
  <match src="identifier: Transfer [29063,29071]" dest="identifier: Transfer [29309,29317]"/>
  <match src="identifier: _value [19232,19238]" dest="identifier: _value [19335,19341]"/>
  <match src="parameter [27282,27294]" dest="parameter [27410,27422]"/>
  <match src="identifier: msg [31373,31376]" dest="identifier: msg [31597,31600]"/>
  <match src=".: . [11885,11886]" dest=".: . [11733,11734]"/>
  <match src="): ) [22629,22630]" dest="): ) [22798,22799]"/>
  <match src="identifier: _who [23853,23857]" dest="identifier: _who [24160,24164]"/>
  <match src=",: , [8139,8140]" dest=",: , [7952,7953]"/>
  <match src="user_defined_type [27488,27506]" dest="user_defined_type [27603,27621]"/>
  <match src="function: function [10758,10766]" dest="function: function [10563,10571]"/>
  <match src="string [33836,33848]" dest="string [42535,42547]"/>
  <match src=",: , [14144,14145]" dest=",: , [14139,14140]"/>
  <match src="binary_expression [18336,18346]" dest="binary_expression [18418,18428]"/>
  <match src="primitive_type [25849,25856]" dest="primitive_type [26114,26121]"/>
  <match src="is: is [30656,30658]" dest="is: is [30903,30905]"/>
  <match src="&quot;: &quot; [30188,30189]" dest="&quot;: &quot; [30450,30451]"/>
  <match src="primitive_type [24669,24676]" dest="primitive_type [24968,24975]"/>
  <match src="parameter [19037,19057]" dest="parameter [19140,19160]"/>
  <match src="identifier: onlyOwner [14286,14295]" dest="identifier: onlyOwner [14281,14290]"/>
  <match src="call_argument [29566,29567]" dest="call_argument [29820,29821]"/>
  <match src="identifier: _value [12129,12135]" dest="identifier: _value [11991,11997]"/>
  <match src="mapping: mapping [9420,9427]" dest="mapping: mapping [9250,9257]"/>
  <match src="variable_declaration [27739,27752]" dest="variable_declaration [27852,27865]"/>
  <match src="identifier: _setAllowance [23761,23774]" dest="identifier: _setAllowance [24034,24047]"/>
  <match src="parameter [20765,20779]" dest="parameter [20860,20874]"/>
  <match src="binary_expression [18558,18563]" dest="binary_expression [18676,18681]"/>
  <match src="primitive_type [22568,22575]" dest="primitive_type [22734,22741]"/>
  <match src="[: [ [13081,13082]" dest="[: [ [13042,13043]"/>
  <match src="indexed: indexed [10137,10144]" dest="indexed: indexed [9942,9949]"/>
  <match src="constant: constant [25141,25149]" dest="constant: constant [25408,25416]"/>
  <match src=",: , [18163,18164]" dest=",: , [18230,18231]"/>
  <match src="event_paramater [20029,20052]" dest="event_paramater [20128,20151]"/>
  <match src="constant: constant [24793,24801]" dest="constant: constant [25080,25088]"/>
  <match src="internal: internal [22844,22852]" dest="internal: internal [23047,23055]"/>
  <match src="expression_statement [29021,29048]" dest="expression_statement [29267,29294]"/>
  <match src="): ) [13030,13031]" dest="): ) [12986,12987]"/>
  <match src="=: = [23344,23345]" dest="=: = [23582,23583]"/>
  <match src="boolean_literal [21770,21774]" dest="boolean_literal [21902,21906]"/>
  <match src="(: ( [28093,28094]" dest="(: ( [28206,28207]"/>
  <match src="state_mutability [18017,18021]" dest="state_mutability [18063,18067]"/>
  <match src="]: ] [11850,11851]" dest="]: ] [11698,11699]"/>
  <match src=".: . [13326,13327]" dest=".: . [13287,13288]"/>
  <match src="type_name [21863,21870]" dest="type_name [22023,22030]"/>
  <match src="call_argument [14471,14484]" dest="call_argument [14466,14479]"/>
  <match src="state_variable_declaration [9633,9694]" dest="state_variable_declaration [9463,9524]"/>
  <match src="&quot;: &quot; [19171,19172]" dest="&quot;: &quot; [19274,19275]"/>
  <match src="array_access [26299,26314]" dest="array_access [26441,26456]"/>
  <match src="state_variable_declaration [15735,15762]" dest="state_variable_declaration [15727,15754]"/>
  <match src="comment: /**      * @dev Returns the amount of tokens owned by `account`.      */ [5928,6002]" dest="comment: /**      * @dev Returns the amount of tokens owned by `account`.      */ [5741,5815]"/>
  <match src="assignment_expression [19070,19100]" dest="assignment_expression [19173,19203]"/>
  <match src="{: { [18047,18048]" dest="{: { [18093,18094]"/>
  <match src="state_mutability [4740,4744]" dest="state_mutability [4674,4678]"/>
  <match src="type_name [23250,23257]" dest="type_name [23464,23471]"/>
  <match src="}: } [19501,19502]" dest="}: } [19604,19605]"/>
  <match src="(: ( [11945,11946]" dest="(: ( [11779,11780]"/>
  <match src="return: return [10572,10578]" dest="return: return [10377,10383]"/>
  <match src="==: == [26114,26116]" dest="==: == [26403,26405]"/>
  <match src="): ) [19344,19345]" dest="): ) [19447,19448]"/>
  <match src="uint256: uint256 [23807,23814]" dest="uint256: uint256 [24108,24115]"/>
  <match src="{: { [8663,8664]" dest="{: { [8497,8498]"/>
  <match src="(: ( [7831,7832]" dest="(: ( [7644,7645]"/>
  <match src="}: } [14916,14917]" dest="}: } [14916,14917]"/>
  <match src="function_definition [22744,23219]" dest="function_definition [22913,23423]"/>
  <match src="identifier: _tokenHolder [22830,22842]" dest="identifier: _tokenHolder [23027,23039]"/>
  <match src="identifier: setAttributeValue [12069,12086]" dest="identifier: setAttributeValue [11903,11920]"/>
  <match src="return_statement [2748,2757]" dest="return_statement [2767,2776]"/>
  <match src="): ) [11454,11455]" dest="): ) [11302,11303]"/>
  <match src="identifier: _spender [20755,20763]" dest="identifier: _spender [20850,20858]"/>
  <match src="string [19154,19172]" dest="string [19257,19275]"/>
  <match src="}: } [26624,26625]" dest="}: } [26765,26766]"/>
  <match src="identifier: newAllowance [23542,23554]" dest="identifier: newAllowance [23815,23827]"/>
  <match src="visibility [23823,23831]" dest="visibility [24130,24138]"/>
  <match src="uint256: uint256 [4754,4761]" dest="uint256: uint256 [4688,4695]"/>
  <match src="&quot;: &quot; [29752,29753]" dest="&quot;: &quot; [30006,30007]"/>
  <match src="external: external [14277,14285]" dest="external: external [14272,14280]"/>
  <match src="{: { [27028,27029]" dest="{: { [27169,27170]"/>
  <match src="function: function [15073,15081]" dest="function: function [15076,15084]"/>
  <match src="parameter [3290,3297]" dest="parameter [3317,3324]"/>
  <match src="assignment_expression [23843,23877]" dest="assignment_expression [24150,24184]"/>
  <match src="bytes32: bytes32 [13393,13400]" dest="bytes32: bytes32 [13354,13361]"/>
  <match src="(: ( [6026,6027]" dest="(: ( [5839,5840]"/>
  <match src="type_name [13797,13812]" dest="type_name [13792,13807]"/>
  <match src="indexed: indexed [18933,18940]" dest="indexed: indexed [19036,19043]"/>
  <match src="binary_expression [26318,26345]" dest="binary_expression [26460,26487]"/>
  <match src="(: ( [9707,9708]" dest="(: ( [9537,9538]"/>
  <match src="identifier: _addresses [14083,14093]" dest="identifier: _addresses [14078,14088]"/>
  <match src="string: string [18165,18171]" dest="string: string [18241,18247]"/>
  <match src="}: } [26635,26636]" dest="}: } [26776,26777]"/>
  <match src="identifier: _from [29438,29443]" dest="identifier: _from [29684,29689]"/>
  <match src="external: external [33394,33402]" dest="external: external [42102,42110]"/>
  <match src="identifier: require [17890,17897]" dest="identifier: require [17900,17907]"/>
  <match src="call_expression [29640,29666]" dest="call_expression [29894,29920]"/>
  <match src="=: = [12409,12410]" dest="=: = [12277,12278]"/>
  <match src="&gt;: &gt; [13921,13922]" dest="&gt;: &gt; [13916,13917]"/>
  <match src=",: , [1041,1042]" dest=",: , [1078,1079]"/>
  <match src="call_argument [28494,28500]" dest="call_argument [28658,28664]"/>
  <match src="identifier: require [28269,28276]" dest="identifier: require [28382,28389]"/>
  <match src="address: address [6700,6707]" dest="address: address [6513,6520]"/>
  <match src="address: address [21624,21631]" dest="address: address [21753,21760]"/>
  <match src="boolean_literal [27938,27943]" dest="boolean_literal [28051,28056]"/>
  <match src="type_name [7435,7442]" dest="type_name [7248,7255]"/>
  <match src="internal: internal [956,964]" dest="internal: internal [993,1001]"/>
  <match src="call_expression [14654,14696]" dest="call_expression [14652,14694]"/>
  <match src="address: address [31813,31820]" dest="address: address [32042,32049]"/>
  <match src="call_expression [12521,12580]" dest="call_expression [12389,12448]"/>
  <match src="]: ] [19481,19482]" dest="]: ] [19584,19585]"/>
  <match src="address: address [27282,27289]" dest="address: address [27410,27417]"/>
  <match src="(: ( [27280,27281]" dest="(: ( [27409,27410]"/>
  <match src="bytes32: bytes32 [24295,24302]" dest="bytes32: bytes32 [24598,24605]"/>
  <match src="event: event [9756,9761]" dest="event: event [9586,9591]"/>
  <match src="): ) [27680,27681]" dest="): ) [27793,27794]"/>
  <match src=",: , [22584,22585]" dest=",: , [22750,22751]"/>
  <match src=".: . [20851,20852]" dest=".: . [20946,20947]"/>
  <match src="&quot;: &quot; [23384,23385]" dest="&quot;: &quot; [23622,23623]"/>
  <match src="mapping: mapping [15770,15777]" dest="mapping: mapping [15762,15769]"/>
  <match src="=: = [19292,19293]" dest="=: = [19395,19396]"/>
  <match src="(: ( [6375,6376]" dest="(: ( [6188,6189]"/>
  <match src="variable_declaration_statement [999,1017]" dest="variable_declaration_statement [1036,1054]"/>
  <match src="identifier: resultBalance_ [29623,29637]" dest="identifier: resultBalance_ [29877,29891]"/>
  <match src="assignment_expression [15421,15446]" dest="assignment_expression [15426,15451]"/>
  <match src="): ) [30790,30791]" dest="): ) [31035,31036]"/>
  <match src="expression_statement [14862,14898]" dest="expression_statement [14862,14898]"/>
  <match src="{: { [4763,4764]" dest="{: { [4697,4698]"/>
  <match src="=: = [24594,24595]" dest="=: = [24893,24894]"/>
  <match src="function: function [29415,29423]" dest="function: function [29661,29669]"/>
  <match src="): ) [7490,7491]" dest="): ) [7303,7304]"/>
  <match src="}: } [8774,8775]" dest="}: } [8608,8609]"/>
  <match src="bytes32: bytes32 [11946,11953]" dest="bytes32: bytes32 [11780,11787]"/>
  <match src="identifier: _who [25960,25964]" dest="identifier: _who [26249,26253]"/>
  <match src="type_name [20940,20947]" dest="type_name [21054,21061]"/>
  <match src="address: address [9793,9800]" dest="address: address [9613,9620]"/>
  <match src="update_expression [14039,14043]" dest="update_expression [14034,14037]"/>
  <match src="): ) [11508,11509]" dest="): ) [11356,11357]"/>
  <match src="identifier: _from [29072,29077]" dest="identifier: _from [29318,29323]"/>
  <match src="): ) [1442,1443]" dest="): ) [1487,1488]"/>
  <match src="primitive_type [29955,29962]" dest="primitive_type [30217,30224]"/>
  <match src="comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      * - Multiplication cannot overflow.      */ [2050,2287]" dest="comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      *      * - Multiplication cannot overflow.      */ [2061,2306]"/>
  <match src=",: , [25861,25862]" dest=",: , [26126,26127]"/>
  <match src="identifier: _value [19314,19320]" dest="identifier: _value [19417,19423]"/>
  <match src="identifier: adminAddr [8730,8739]" dest="identifier: adminAddr [8564,8573]"/>
  <match src="parameter [4754,4761]" dest="parameter [4688,4695]"/>
  <match src="expression_statement [2679,2736]" dest="expression_statement [2698,2755]"/>
  <match src="{: { [12144,12145]" dest="{: { [12012,12013]"/>
  <match src="uint256: uint256 [29479,29486]" dest="uint256: uint256 [29733,29740]"/>
  <match src="type_name [8891,8895]" dest="type_name [8721,8725]"/>
  <match src="primitive_type [20747,20754]" dest="primitive_type [20842,20849]"/>
  <match src="identifier: target [13965,13971]" dest="identifier: target [13960,13966]"/>
  <match src="identifier: require [10864,10871]" dest="identifier: require [10712,10719]"/>
  <match src="&quot;: &quot; [24183,24184]" dest="&quot;: &quot; [24486,24487]"/>
  <match src="function_definition [8523,8610]" dest="function_definition [8323,8444]"/>
  <match src="&gt;&gt;: &gt;&gt; [25966,25968]" dest="&gt;&gt;: &gt;&gt; [26255,26257]"/>
  <match src="type_name [25930,25937]" dest="type_name [26219,26226]"/>
  <match src="(: ( [25959,25960]" dest="(: ( [26248,26249]"/>
  <match src="address: address [9890,9897]" dest="address: address [9695,9702]"/>
  <match src="returns: returns [19249,19256]" dest="returns: returns [19352,19359]"/>
  <match src="identifier: _attribute [10504,10514]" dest="identifier: _attribute [10309,10319]"/>
  <match src="user_defined_type [13951,13964]" dest="user_defined_type [13946,13959]"/>
  <match src="}: } [14531,14532]" dest="}: } [14526,14527]"/>
  <match src="(: ( [15443,15444]" dest="(: ( [15448,15449]"/>
  <match src="primitive_type [2306,2313]" dest="primitive_type [2325,2332]"/>
  <match src="primitive_type [3245,3252]" dest="primitive_type [3272,3279]"/>
  <match src="visibility [28980,28988]" dest="visibility [29218,29226]"/>
  <match src="call_argument [12325,12329]" dest="call_argument [12193,12197]"/>
  <match src="(: ( [21823,21824]" dest="(: ( [21955,21956]"/>
  <match src="identifier: BLACKLISTED [24208,24219]" dest="identifier: BLACKLISTED [24511,24522]"/>
  <match src="primitive_type [23250,23257]" dest="primitive_type [23464,23471]"/>
  <match src="&quot;: &quot; [1043,1044]" dest="&quot;: &quot; [1080,1081]"/>
  <match src="{: { [23670,23671]" dest="{: { [23943,23944]"/>
  <match src="string_literal [4791,4817]" dest="string_literal [4725,4751]"/>
  <match src="{: { [5440,5441]" dest="{: { [5340,5341]"/>
  <match src="): ) [28441,28442]" dest="): ) [28597,28598]"/>
  <match src="primitive_type [9708,9715]" dest="primitive_type [9538,9545]"/>
  <match src="address: address [30946,30953]" dest="address: address [31172,31179]"/>
  <match src="identifier: _value [29605,29611]" dest="identifier: _value [29859,29865]"/>
  <match src="type_name [1874,1881]" dest="type_name [1885,1892]"/>
  <match src="parameter [3256,3265]" dest="parameter [3283,3292]"/>
  <match src="{: { [23032,23033]" dest="{: { [23235,23236]"/>
  <match src="{: { [14296,14297]" dest="{: { [14291,14292]"/>
  <match src="): ) [26188,26189]" dest="): ) [34331,34332]"/>
  <match src="identifier: _transferFromAllArgs [28360,28380]" dest="identifier: _transferFromAllArgs [28473,28493]"/>
  <match src="{: { [29010,29011]" dest="{: { [29256,29257]"/>
  <match src="identifier: sender [14666,14672]" dest="identifier: sender [14664,14670]"/>
  <match src="public: public [33882,33888]" dest="public: public [42581,42587]"/>
  <match src="visibility [18453,18461]" dest="visibility [18571,18579]"/>
  <match src="identifier: b [18316,18317]" dest="identifier: b [18398,18399]"/>
  <match src="assignment_expression [19111,19173]" dest="assignment_expression [19214,19276]"/>
  <match src="indexed: indexed [27557,27564]" dest="indexed: indexed [27670,27677]"/>
  <match src="identifier: rounding [33692,33700]" dest="identifier: rounding [42391,42399]"/>
  <match src="uint256: uint256 [17954,17961]" dest="uint256: uint256 [17976,17983]"/>
  <match src="&quot;: &quot; [9679,9680]" dest="&quot;: &quot; [9509,9510]"/>
  <match src="modifier_invocation [15125,15134]" dest="modifier_invocation [15128,15137]"/>
  <match src="identifier: _who [13639,13643]" dest="identifier: _who [13600,13604]"/>
  <match src="): ) [28218,28219]" dest="): ) [28331,28332]"/>
  <match src="): ) [22842,22843]" dest="): ) [23045,23046]"/>
  <match src="emit_statement [21054,21100]" dest="emit_statement [21183,21229]"/>
  <match src="return_type_definition [12755,12769]" dest="return_type_definition [12623,12637]"/>
  <match src="expression_statement [18503,18539]" dest="expression_statement [18621,18657]"/>
  <match src="[: [ [13644,13645]" dest="[: [ [13605,13606]"/>
  <match src="function_definition [32949,33147]" dest="function_definition [41650,41848]"/>
  <match src="expression_statement [14908,14910]" dest="expression_statement [14908,14910]"/>
  <match src="expression_statement [20998,21044]" dest="expression_statement [21127,21173]"/>
  <match src="&quot;: &quot; [24166,24167]" dest="&quot;: &quot; [24469,24470]"/>
  <match src="modifier_definition [28071,28343]" dest="modifier_definition [28184,28456]"/>
  <match src="user_defined_type [9439,9452]" dest="user_defined_type [9269,9282]"/>
  <match src="call_argument [11727,11737]" dest="call_argument [11575,11585]"/>
  <match src="identifier: onlyOwner [31342,31351]" dest="identifier: onlyOwner [31566,31575]"/>
  <match src="parameter [20956,20976]" dest="parameter [21079,21099]"/>
  <match src="&quot;: &quot; [19343,19344]" dest="&quot;: &quot; [19446,19447]"/>
  <match src="call_argument [26365,26371]" dest="call_argument [26507,26513]"/>
  <match src="variable_declaration_statement [25983,26015]" dest="variable_declaration_statement [26272,26304]"/>
  <match src="type_cast_expression [14471,14484]" dest="type_cast_expression [14466,14479]"/>
  <match src="(: ( [13378,13379]" dest="(: ( [13339,13340]"/>
  <match src="type_name [8830,8837]" dest="type_name [8660,8667]"/>
  <match src="state_mutability [27691,27695]" dest="state_mutability [27804,27808]"/>
  <match src="): ) [7466,7467]" dest="): ) [7279,7280]"/>
  <match src="identifier: allowance [23685,23694]" dest="identifier: allowance [23958,23967]"/>
  <match src="(: ( [29597,29598]" dest="(: ( [29851,29852]"/>
  <match src="parameter [28584,28597]" dest="parameter [28760,28773]"/>
  <match src="visibility [18196,18204]" dest="visibility [18278,18286]"/>
  <match src="parameter [5380,5406]" dest="parameter [5280,5306]"/>
  <match src="comment: // attributes Bitmasks [24409,24431]" dest="comment: // attributes Bitmasks [24712,24734]"/>
  <match src="identifier: ACCOUNT_HOOK_INV [27073,27089]" dest="identifier: ACCOUNT_HOOK_INV [27214,27230]"/>
  <match src="variable_declaration_statement [29102,29115]" dest="variable_declaration_statement [29348,29361]"/>
  <match src="true [20877,20881]" dest="true [20972,20976]"/>
  <match src=",: , [18516,18517]" dest=",: , [18634,18635]"/>
  <match src="{: { [12506,12507]" dest="{: { [12374,12375]"/>
  <match src="parameter [5358,5367]" dest="parameter [5258,5267]"/>
  <match src="visibility [15118,15124]" dest="visibility [15121,15127]"/>
  <match src="member_expression [13158,13172]" dest="member_expression [13119,13133]"/>
  <match src="uint256: uint256 [15862,15869]" dest="uint256: uint256 [15851,15858]"/>
  <match src="call_argument [21980,21992]" dest="call_argument [22146,22158]"/>
  <match src="visibility [13580,13586]" dest="visibility [13541,13547]"/>
  <match src="identifier: newValue [23145,23153]" dest="identifier: newValue [23348,23356]"/>
  <match src="uint256: uint256 [8141,8148]" dest="uint256: uint256 [7954,7961]"/>
  <match src=",: , [13723,13724]" dest=",: , [13694,13695]"/>
  <match src="|: | [26497,26498]" dest="|: | [26639,26640]"/>
  <match src="visibility [30792,30798]" dest="visibility [31037,31043]"/>
  <match src=".: . [14185,14186]" dest=".: . [14180,14181]"/>
  <match src="identifier: length [11886,11892]" dest="identifier: pop [11734,11737]"/>
  <match src="primitive_type [15790,15797]" dest="primitive_type [15781,15788]"/>
  <match src=",: , [7865,7866]" dest=",: , [7678,7679]"/>
  <match src="binary_expression [18312,18317]" dest="binary_expression [18394,18399]"/>
  <match src="uint256: uint256 [32759,32766]" dest="uint256: uint256 [41458,41465]"/>
  <match src="&quot;: &quot; [9691,9692]" dest="&quot;: &quot; [9521,9522]"/>
  <match src="address: address [9960,9967]" dest="address: address [9765,9772]"/>
  <match src="if: if [30201,30203]" dest="if: if [30463,30465]"/>
  <match src=",: , [13391,13392]" dest=",: , [13352,13353]"/>
  <match src="binary_expression [18336,18351]" dest="binary_expression [18418,18433]"/>
  <match src="solidity_version_comparison_operator [5600,5602]" dest="solidity_version_comparison_operator [5494,5496]"/>
  <match src="bool: bool [6376,6380]" dest="bool: bool [6189,6193]"/>
  <match src="parameter [6027,6042]" dest="parameter [5840,5855]"/>
  <match src="(: ( [10964,10965]" dest="(: ( [10812,10813]"/>
  <match src="address: address [20747,20754]" dest="address: address [20842,20849]"/>
  <match src="call_expression [11670,11694]" dest="call_expression [11518,11542]"/>
  <match src=",: , [3927,3928]" dest=",: , [3920,3921]"/>
  <match src="primitive_type [8585,8592]" dest="primitive_type [8413,8420]"/>
  <match src="primitive_type [10038,10045]" dest="primitive_type [9843,9850]"/>
  <match src="contract: contract [15684,15692]" dest="contract: contract [15676,15684]"/>
  <match src="parameter [10830,10844]" dest="parameter [10672,10686]"/>
  <match src="array_access [23318,23343]" dest="array_access [23556,23581]"/>
  <match src="call_argument [11038,11042]" dest="call_argument [10886,10890]"/>
  <match src="]: ] [11769,11770]" dest="]: ] [11617,11618]"/>
  <match src="call_argument [21943,21954]" dest="call_argument [22109,22120]"/>
  <match src="while_statement [11205,11311]" dest="while_statement [11053,11159]"/>
  <match src="identifier: _decreaseApprovalAllArgs [22642,22666]" dest="identifier: _decreaseApprovalAllArgs [22811,22835]"/>
  <match src="function: function [32949,32957]" dest="function: function [41650,41658]"/>
  <match src="=: = [23555,23556]" dest="=: = [23828,23829]"/>
  <match src="type_name [9945,9952]" dest="type_name [9750,9757]"/>
  <match src="type_name [12996,13003]" dest="type_name [12903,12910]"/>
  <match src="block_statement [26541,26625]" dest="block_statement [26682,26766]"/>
  <match src="parameter [1863,1872]" dest="parameter [1874,1883]"/>
  <match src="call_argument [11678,11693]" dest="call_argument [11526,11541]"/>
  <match src="[: [ [10936,10937]" dest="[: [ [10784,10785]"/>
  <match src="return_type_definition [11978,11995]" dest="return_type_definition [11812,11829]"/>
  <match src="type_name [20054,20061]" dest="type_name [20153,20160]"/>
  <match src="string_literal [19322,19344]" dest="string_literal [19425,19447]"/>
  <match src="[: [ [13471,13472]" dest="[: [ [13432,13433]"/>
  <match src="type_name [1885,1891]" dest="type_name [1896,1902]"/>
  <match src=".: . [12285,12286]" dest=".: . [12153,12154]"/>
  <match src="=: = [26984,26985]" dest="=: = [27125,27126]"/>
  <match src="call_argument [28867,28873]" dest="call_argument [29069,29075]"/>
  <match src="function_definition [27642,28063]" dest="function_definition [27755,28176]"/>
  <match src="function: function [31786,31794]" dest="function: function [32015,32023]"/>
  <match src="identifier: _to [33489,33492]" dest="identifier: _to [42197,42200]"/>
  <match src="assignment_expression [18303,18317]" dest="assignment_expression [18385,18399]"/>
  <match src="identifier: _subtractedValue [23069,23085]" dest="identifier: _subtractedValue [23272,23288]"/>
  <match src=",: , [28482,28483]" dest=",: , [28646,28647]"/>
  <match src="function: function [33155,33163]" dest="function: function [41856,41864]"/>
  <match src="[: [ [12025,12026]" dest="[: [ [11859,11860]"/>
  <match src="identifier: b [3324,3325]" dest="identifier: b [3351,3352]"/>
  <match src="identifier: _to [28404,28407]" dest="identifier: _to [28536,28539]"/>
  <match src="parenthesized_expression [28017,28039]" dest="parenthesized_expression [28130,28152]"/>
  <match src="(: ( [1963,1964]" dest="(: ( [1974,1975]"/>
  <match src="visibility [1412,1420]" dest="visibility [1457,1465]"/>
  <match src=",: , [8357,8358]" dest=",: , [8170,8171]"/>
  <match src="function_definition [7418,7492]" dest="function_definition [7231,7305]"/>
  <match src="{: { [28254,28255]" dest="{: { [28367,28368]"/>
  <match src="identifier: _value [28417,28423]" dest="identifier: _value [28558,28564]"/>
  <match src="identifier: _notes [10973,10979]" dest="identifier: _notes [10821,10827]"/>
  <match src="=: = [23011,23012]" dest="=: = [23214,23215]"/>
  <match src="=: = [24710,24711]" dest="=: = [24997,24998]"/>
  <match src=",: , [12341,12342]" dest=",: , [12209,12210]"/>
  <match src="event_paramater [27549,27571]" dest="event_paramater [27662,27684]"/>
  <match src="): ) [31220,31221]" dest="): ) [31442,31443]"/>
  <match src="return_type_definition [6058,6075]" dest="return_type_definition [5871,5888]"/>
  <match src="returns: returns [13262,13269]" dest="returns: returns [13223,13230]"/>
  <match src="address: address [8551,8558]" dest="address: address [8361,8368]"/>
  <match src="type_name [8722,8729]" dest="type_name [8556,8563]"/>
  <match src="address: address [22568,22575]" dest="address: address [22734,22741]"/>
  <match src="identifier: decreaseApproval [22551,22567]" dest="identifier: decreaseApproval [22717,22733]"/>
  <match src="): ) [12973,12974]" dest="): ) [12839,12840]"/>
  <match src="identifier: subscriberCount [11930,11945]" dest="identifier: subscriberCount [11764,11779]"/>
  <match src=",: , [9909,9910]" dest=",: , [9714,9715]"/>
  <match src="&quot;: &quot; [1472,1473]" dest="&quot;: &quot; [1517,1518]"/>
  <match src="(: ( [29822,29823]" dest="(: ( [30076,30077]"/>
  <match src="(: ( [26693,26694]" dest="(: ( [26834,26835]"/>
  <match src="variable_declaration [14008,14017]" dest="variable_declaration [14003,14012]"/>
  <match src="expression_statement [23318,23406]" dest="expression_statement [23556,23644]"/>
  <match src="(: ( [4784,4785]" dest="(: ( [4718,4719]"/>
  <match src="address: address [13434,13441]" dest="address: address [13395,13402]"/>
  <match src="identifier: subscribers [11816,11827]" dest="identifier: subscribers [11664,11675]"/>
  <match src="string [24103,24121]" dest="string [24406,24424]"/>
  <match src="visibility [28628,28636]" dest="visibility [28828,28836]"/>
  <match src="identifier: _addresses [13765,13775]" dest="identifier: _addresses [13754,13764]"/>
  <match src="identifier: ValTokenWithHook [27438,27454]" dest="identifier: ValTokenWithHook [27561,27577]"/>
  <match src="block_statement [30028,30085]" dest="block_statement [30290,30347]"/>
  <match src="emit_statement [15333,15380]" dest="emit_statement [15338,15385]"/>
  <match src="uint256: uint256 [8750,8757]" dest="uint256: uint256 [8584,8591]"/>
  <match src="(: ( [21675,21676]" dest="(: ( [21807,21808]"/>
  <match src="identifier: AttributeData [13043,13056]" dest="identifier: AttributeData [13004,13017]"/>
  <match src="parameter [28409,28423]" dest="parameter [28550,28564]"/>
  <match src="bytes32: bytes32 [8565,8572]" dest="bytes32: bytes32 [8384,8391]"/>
  <match src="/: / [4120,4121]" dest="/: / [4046,4047]"/>
  <match src="): ) [32987,32988]" dest="): ) [41688,41689]"/>
  <match src="address: address [29558,29565]" dest="address: address [29812,29819]"/>
  <match src="primitive_type [19037,19044]" dest="primitive_type [19140,19147]"/>
  <match src="call_argument [29551,29556]" dest="call_argument [29805,29810]"/>
  <match src="]: ] [22036,22037]" dest="]: ] [22202,22203]"/>
  <match src="return_statement [13110,13174]" dest="return_statement [13071,13135]"/>
  <match src="}: } [19180,19181]" dest="}: } [19283,19284]"/>
  <match src=",: , [2315,2316]" dest=",: , [2334,2335]"/>
  <match src="call_argument [2687,2697]" dest="call_argument [2706,2716]"/>
  <match src="type_cast_expression [25944,25972]" dest="type_cast_expression [26233,26261]"/>
  <match src="identifier: notes [8706,8711]" dest="identifier: notes [8540,8545]"/>
  <match src="primitive_type [25249,25256]" dest="primitive_type [25505,25512]"/>
  <match src="(: ( [13117,13118]" dest="(: ( [13078,13079]"/>
  <match src="emit_statement [12307,12367]" dest="emit_statement [12175,12235]"/>
  <match src="primitive_type [14008,14015]" dest="primitive_type [14003,14010]"/>
  <match src="identifier: _attribute [8573,8583]" dest="identifier: _attribute [8392,8402]"/>
  <match src="identifier: require [1027,1034]" dest="identifier: require [1064,1071]"/>
  <match src="identifier: _value [21036,21042]" dest="identifier: _value [21165,21171]"/>
  <match src="function_body [1945,2042]" dest="function_body [1956,2053]"/>
  <match src="primitive_type [27610,27617]" dest="primitive_type [27723,27730]"/>
  <match src="{: { [683,684]" dest="{: { [712,713]"/>
  <match src=",: , [29896,29897]" dest=",: , [30158,30159]"/>
  <match src="call_argument [10981,10991]" dest="call_argument [10829,10839]"/>
  <match src="type_name [14069,14076]" dest="type_name [14064,14071]"/>
  <match src="internal: internal [10532,10540]" dest="internal: internal [10337,10345]"/>
  <match src="call_argument [10885,10895]" dest="call_argument [10733,10743]"/>
  <match src="{: { [33208,33209]" dest="{: { [41916,41917]"/>
  <match src="binary_expression [4075,4080]" dest="binary_expression [4001,4006]"/>
  <match src="binary_expression [13913,13934]" dest="binary_expression [13908,13929]"/>
  <match src="[: [ [13638,13639]" dest="[: [ [13599,13600]"/>
  <match src="identifier: msg [14870,14873]" dest="identifier: msg [14870,14873]"/>
  <match src="identifier: _amount [33494,33501]" dest="identifier: _amount [42202,42209]"/>
  <match src=",: , [23200,23201]" dest=",: , [23404,23405]"/>
  <match src="return: return [13454,13460]" dest="return: return [13415,13421]"/>
  <match src="expression_statement [28833,28875]" dest="expression_statement [29035,29077]"/>
  <match src="(: ( [26102,26103]" dest="(: ( [26391,26392]"/>
  <match src="(: ( [13215,13216]" dest="(: ( [13176,13177]"/>
  <match src="=: = [27936,27937]" dest="=: = [28049,28050]"/>
  <match src="identifier: token [14496,14501]" dest="identifier: token [14491,14496]"/>
  <match src="returns: returns [970,977]" dest="returns: returns [1007,1014]"/>
  <match src="identifier: _pendingOwner [32055,32068]" dest="identifier: _pendingOwner [32286,32299]"/>
  <match src="identifier: AttributeData [8649,8662]" dest="identifier: AttributeData [8483,8496]"/>
  <match src="identifier: length [11687,11693]" dest="identifier: length [11535,11541]"/>
  <match src="event_paramater [8336,8357]" dest="event_paramater [8149,8170]"/>
  <match src="primitive_type [23476,23483]" dest="primitive_type [23742,23749]"/>
  <match src="type_name [22796,22803]" dest="type_name [22984,22991]"/>
  <match src="address: address [15831,15838]" dest="address: address [15821,15828]"/>
  <match src="identifier: token [14387,14392]" dest="identifier: token [14382,14387]"/>
  <match src="): ) [28176,28177]" dest="): ) [28289,28290]"/>
  <match src="library_declaration [666,5514]" dest="library_declaration [695,5414]"/>
  <match src="(: ( [10611,10612]" dest="(: ( [10416,10417]"/>
  <match src=".: . [11441,11442]" dest=".: . [11289,11290]"/>
  <match src="parameter [29836,29850]" dest="parameter [30090,30104]"/>
  <match src="return_type_definition [30804,30821]" dest="return_type_definition [31049,31066]"/>
  <match src="visibility [25899,25905]" dest="visibility [26188,26194]"/>
  <match src="number_literal: 0 [2601,2602]" dest="number_literal: 0 [2620,2621]"/>
  <match src=".: . [14501,14502]" dest=".: . [14496,14497]"/>
  <match src="identifier: sender [12192,12198]" dest="identifier: sender [12060,12066]"/>
  <match src="type_name [27296,27303]" dest="type_name [27424,27431]"/>
  <match src="parameter [13005,13012]" dest="parameter [12925,12932]"/>
  <match src="type_alias [18856,18867]" dest="type_alias [18959,18970]"/>
  <match src="(: ( [13270,13271]" dest="(: ( [13231,13232]"/>
  <match src="identifier: require [12155,12162]" dest="identifier: require [12023,12030]"/>
  <match src="[: [ [13981,13982]" dest="[: [ [13976,13977]"/>
  <match src="number_literal: 0 [31219,31220]" dest="number_literal: 0 [31441,31442]"/>
  <match src="identifier: INFINITE_ALLOWANCE [23650,23668]" dest="identifier: INFINITE_ALLOWANCE [23923,23941]"/>
  <match src="[: [ [23361,23362]" dest="[: [ [23599,23600]"/>
  <match src="): ) [25500,25501]" dest="): ) [25755,25756]"/>
  <match src="): ) [33572,33573]" dest="): ) [42271,42272]"/>
  <match src="identifier: _value [19146,19152]" dest="identifier: _value [19249,19255]"/>
  <match src="state_variable_declaration [15895,15935]" dest="state_variable_declaration [15884,15923]"/>
  <match src="type_name [33641,33646]" dest="type_name [42340,42345]"/>
  <match src="(: ( [33197,33198]" dest="(: ( [41905,41906]"/>
  <match src="primitive_type [24901,24908]" dest="primitive_type [25180,25187]"/>
  <match src="array_access [27756,27795]" dest="array_access [27869,27908]"/>
  <match src="array_access [23685,23710]" dest="array_access [23958,23983]"/>
  <match src="type_name [32734,32742]" dest="type_name [41433,41441]"/>
  <match src="identifier: balanceOf [19356,19365]" dest="identifier: balanceOf [19459,19468]"/>
  <match src="type_name [2351,2358]" dest="type_name [2370,2377]"/>
  <match src="identifier: onlyOwner [14416,14425]" dest="identifier: onlyOwner [14411,14420]"/>
  <match src="primitive_type [934,941]" dest="primitive_type [971,978]"/>
  <match src="&lt;=: &lt;= [33453,33455]" dest="&lt;=: &lt;= [42161,42163]"/>
  <match src="parameter [10780,10792]" dest="parameter [10595,10607]"/>
  <match src="is: is [24019,24021]" dest="is: is [24322,24324]"/>
  <match src="call_argument [28684,28689]" dest="call_argument [28884,28889]"/>
  <match src="expression_statement [28334,28336]" dest="expression_statement [28447,28449]"/>
  <match src="identifier: SafeMath [32707,32715]" dest="identifier: SafeMath [41406,41414]"/>
  <match src="(: ( [30268,30269]" dest="(: ( [30530,30531]"/>
  <match src="identifier: _syncer [11447,11454]" dest="identifier: _syncer [11295,11302]"/>
  <match src="parameter [28964,28978]" dest="parameter [29196,29210]"/>
  <match src="type_name [20747,20754]" dest="type_name [20842,20849]"/>
  <match src="type_cast_expression [32203,32213]" dest="type_cast_expression [32434,32444]"/>
  <match src="primitive_type [14437,14444]" dest="primitive_type [14432,14439]"/>
  <match src="identifier: b [18511,18512]" dest="identifier: b [18629,18630]"/>
  <match src="identifier: _notes [11064,11070]" dest="identifier: _notes [10912,10918]"/>
  <match src="identifier: subscriber [10145,10155]" dest="identifier: subscriber [9950,9960]"/>
  <match src="memory: memory [17983,17989]" dest="memory: memory [18023,18029]"/>
  <match src="block_statement [26917,27116]" dest="block_statement [27058,27257]"/>
  <match src="identifier: _to [27843,27846]" dest="identifier: _to [27956,27959]"/>
  <match src="using_directive [19838,19868]" dest="using_directive [19941,19971]"/>
  <match src="): ) [30072,30073]" dest="): ) [30334,30335]"/>
  <match src="primitive_type [8141,8148]" dest="primitive_type [7954,7961]"/>
  <match src="identifier: sub [1859,1862]" dest="identifier: sub [1870,1873]"/>
  <match src="primitive_type [11566,11573]" dest="primitive_type [11414,11421]"/>
  <match src="&quot;: &quot; [12264,12265]" dest="&quot;: &quot; [12132,12133]"/>
  <match src="return_type_definition [28637,28651]" dest="return_type_definition [28837,28851]"/>
  <match src="type_name [25983,25990]" dest="type_name [26272,26279]"/>
  <match src="visibility [4731,4739]" dest="visibility [4665,4673]"/>
  <match src="): ) [1504,1505]" dest="): ) [1549,1550]"/>
  <match src="comment: /* Additionally, we have several keccak-based storage locations.      * If you add more keccak-based storage mappings, such as mappings, you must document them here.      * If the length of the keccak input is the same as an existing mapping, it is possible there could be a preimage collision.      * A preimage collision can be used to attack the contract by treating one storage location as another,      * which would always be a critical issue.      * Carefully examine future keccak-based storage to ensure there can be no preimage collisions.      *******************************************************************************************************      ** length     input                                                         usage      *******************************************************************************************************      ** 19         &quot;trueXXX.proxy.owner&quot;                                         Proxy Owner      ** 27         &quot;trueXXX.pending.proxy.owner&quot;                                 Pending Proxy Owner      ** 28         &quot;trueXXX.proxy.implementation&quot;                                Proxy Implementation      ** 64         uint256(address),uint256(1)                                   balanceOf      ** 64         uint256(address),keccak256(uint256(address),uint256(2))       allowance      ** 64         uint256(address),keccak256(bytes32,uint256(3))                attributes     **/ [16020,17467]" dest="comment: /* Additionally, we have several keccak-based storage locations.      * If you add more keccak-based storage mappings, such as mappings, you must document them here.      * If the length of the keccak input is the same as an existing mapping, it is possible there could be a preimage collision.      * A preimage collision can be used to attack the contract by treating one storage location as another,      * which would always be a critical issue.      * Carefully examine future keccak-based storage to ensure there can be no preimage collisions.      *******************************************************************************************************      ** length     input                                                         usage      *******************************************************************************************************      ** 19         &quot;trueXXX.proxy.owner&quot;                                         Proxy Owner      ** 27         &quot;trueXXX.pending.proxy.owner&quot;                                 Pending Proxy Owner      ** 28         &quot;trueXXX.proxy.implementation&quot;                                Proxy Implementation      ** 64         uint256(address),uint256(1)                                   balanceOf      ** 64         uint256(address),keccak256(uint256(address),uint256(2))       allowance      ** 64         uint256(address),keccak256(bytes32,uint256(3))                attributes      **/ [16008,17456]"/>
  <match src="[: [ [26309,26310]" dest="[: [ [26451,26452]"/>
  <match src="]: ] [11804,11805]" dest="]: ] [11652,11653]"/>
  <match src="type_name [13230,13237]" dest="type_name [13191,13198]"/>
  <match src="primitive_type [29102,29106]" dest="primitive_type [29348,29352]"/>
  <match src="type_name [20797,20801]" dest="type_name [20892,20896]"/>
  <match src="expression_statement [23843,23878]" dest="expression_statement [24150,24185]"/>
  <match src="identifier: add [19142,19145]" dest="identifier: add [19245,19248]"/>
  <match src="(: ( [33723,33724]" dest="(: ( [42422,42423]"/>
  <match src="type_name [4754,4761]" dest="type_name [4688,4695]"/>
  <match src="parameter [28612,28626]" dest="parameter [28806,28820]"/>
  <match src="expression_statement [26726,26764]" dest="expression_statement [26867,26905]"/>
  <match src="}: } [4238,4239]" dest="}: } [4164,4165]"/>
  <match src="variable_declaration_statement [13043,13100]" dest="variable_declaration_statement [13004,13061]"/>
  <match src="primitive_type [26349,26356]" dest="primitive_type [26491,26498]"/>
  <match src="array_access [14158,14185]" dest="array_access [14153,14180]"/>
  <match src="): ) [28978,28979]" dest="): ) [29216,29217]"/>
  <match src="+: + [1013,1014]" dest="+: + [1050,1051]"/>
  <match src="member_expression [21741,21751]" dest="member_expression [21873,21883]"/>
  <match src="array_access [11130,11153]" dest="array_access [10978,11001]"/>
  <match src="parameter [12996,13003]" dest="parameter [12903,12910]"/>
  <match src="[: [ [14168,14169]" dest="[: [ [14163,14164]"/>
  <match src="): ) [30272,30273]" dest="): ) [30534,30535]"/>
  <match src="identifier: _ [14707,14708]" dest="identifier: _ [14705,14706]"/>
  <match src="binary_expression [18111,18116]" dest="binary_expression [18157,18162]"/>
  <match src="return_type_definition [1426,1443]" dest="return_type_definition [1471,1488]"/>
  <match src="return: return [4223,4229]" dest="return: return [4149,4155]"/>
  <match src="=: = [26742,26743]" dest="=: = [26883,26884]"/>
  <match src=",: , [20846,20847]" dest=",: , [20941,20942]"/>
  <match src="function: function [25821,25829]" dest="function: function [26076,26084]"/>
  <match src=",: , [28610,28611]" dest=",: , [28795,28796]"/>
  <match src="expression_statement [1027,1074]" dest="expression_statement [1064,1111]"/>
  <match src="): ) [33729,33730]" dest="): ) [42428,42429]"/>
  <match src="type_name [22822,22829]" dest="type_name [23019,23026]"/>
  <match src="number_literal: 0 [32211,32212]" dest="number_literal: 0 [32442,32443]"/>
  <match src="identifier: _who [12799,12803]" dest="identifier: _who [12667,12671]"/>
  <match src="]: ] [13754,13755]" dest="]: ] [13743,13744]"/>
  <match src="parameter [11365,11386]" dest="parameter [11213,11234]"/>
  <match src="expression_statement [11862,11906]" dest="expression_statement [11710,11740]"/>
  <match src="identifier: _value [29453,29459]" dest="identifier: _value [29699,29705]"/>
  <match src="array_access [14083,14096]" dest="array_access [14078,14091]"/>
  <match src="event_paramater [10213,10245]" dest="event_paramater [10018,10050]"/>
  <match src="identifier: to [30024,30026]" dest="identifier: to [30286,30288]"/>
  <match src="call_expression [30226,30282]" dest="call_expression [30488,30544]"/>
  <match src="call_argument [15359,15364]" dest="call_argument [15364,15369]"/>
  <match src="primitive_type [18165,18171]" dest="primitive_type [18241,18247]"/>
  <match src="function_definition [23752,23885]" dest="function_definition [24025,24192]"/>
  <match src="public: public [15799,15805]" dest="public: public [15790,15796]"/>
  <match src="(: ( [18395,18396]" dest="(: ( [18479,18480]"/>
  <match src="^:  ^ [5600,5602]" dest="^:  ^ [5494,5496]"/>
  <match src="function_definition [22542,22736]" dest="function_definition [22708,22905]"/>
  <match src="contract: contract [18800,18808]" dest="contract: contract [18903,18911]"/>
  <match src="primitive_type [33641,33646]" dest="primitive_type [42340,42345]"/>
  <match src="primitive_type [8857,8864]" dest="primitive_type [8687,8694]"/>
  <match src="primitive_type [13434,13441]" dest="primitive_type [13395,13402]"/>
  <match src="function_definition [29808,30301]" dest="function_definition [30062,30563]"/>
  <match src="(: ( [17837,17838]" dest="(: ( [17847,17848]"/>
  <match src="identifier: _amount [33385,33392]" dest="identifier: _amount [42093,42100]"/>
  <match src="event_definition [27516,27573]" dest="event_definition [27629,27686]"/>
  <match src="solidity_pragma_token [69,84]" dest="solidity_pragma_token [98,113]"/>
  <match src="string_literal [24103,24121]" dest="string_literal [24406,24424]"/>
  <match src="identifier: _to [28777,28780]" dest="identifier: _to [28979,28982]"/>
  <match src="constant: constant [24677,24685]" dest="constant: constant [24976,24984]"/>
  <match src="returns: returns [5902,5909]" dest="returns: returns [5715,5722]"/>
  <match src="identifier: _value [11292,11298]" dest="identifier: _value [11140,11146]"/>
  <match src="}: } [27021,27022]" dest="}: } [27162,27163]"/>
  <match src="identifier: _who [23328,23332]" dest="identifier: _who [23566,23570]"/>
  <match src="function: function [921,929]" dest="function: function [958,966]"/>
  <match src="expression_statement [23047,23086]" dest="expression_statement [23250,23289]"/>
  <match src="primitive_type [13560,13567]" dest="primitive_type [13521,13528]"/>
  <match src="identifier: _attribute [13645,13655]" dest="identifier: _attribute [13606,13616]"/>
  <match src="(: ( [9678,9679]" dest="(: ( [9508,9509]"/>
  <match src="^: ^ [10664,10665]" dest="^: ^ [10469,10470]"/>
  <match src="emit: emit [15333,15337]" dest="emit: emit [15338,15342]"/>
  <match src="modifier: modifier [28071,28079]" dest="modifier: modifier [28184,28192]"/>
  <match src="type_name [21824,21831]" dest="type_name [21966,21973]"/>
  <match src="variable_declaration [32047,32068]" dest="variable_declaration [32278,32299]"/>
  <match src="binary_expression [17898,17909]" dest="binary_expression [17908,17919]"/>
  <match src="binary_expression [31582,31609]" dest="binary_expression [31808,31835]"/>
  <match src="primitive_type [18031,18038]" dest="primitive_type [18077,18084]"/>
  <match src="primitive_type [22796,22803]" dest="primitive_type [22984,22991]"/>
  <match src="event_definition [10072,10157]" dest="event_definition [9877,9962]"/>
  <match src="type_name [10096,10103]" dest="type_name [9901,9908]"/>
  <match src="identifier: registry [25376,25384]" dest="identifier: registry [25625,25633]"/>
  <match src="): ) [23153,23154]" dest="): ) [23356,23357]"/>
  <match src="primitive_type [15100,15107]" dest="primitive_type [15103,15110]"/>
  <match src="identifier: subscribers [11739,11750]" dest="identifier: subscribers [11587,11598]"/>
  <match src="=: = [18109,18110]" dest="=: = [18155,18156]"/>
  <match src="function_definition [12919,13181]" dest="function_definition [12785,13142]"/>
  <match src="identifier: StopSubscription [10169,10185]" dest="identifier: StopSubscription [9974,9990]"/>
  <match src="type_name [25017,25024]" dest="type_name [25288,25295]"/>
  <match src="type_name [33198,33206]" dest="type_name [41906,41914]"/>
  <match src="--: -- [11218,11220]" dest="--: -- [11065,11067]"/>
  <match src="=: = [29691,29692]" dest="=: = [29945,29946]"/>
  <match src="state_variable_declaration [24669,24779]" dest="state_variable_declaration [24968,25066]"/>
  <match src="primitive_type [18903,18910]" dest="primitive_type [19006,19013]"/>
  <match src="call_argument [28541,28547]" dest="call_argument [28705,28711]"/>
  <match src="=: = [31162,31163]" dest="=: = [31384,31385]"/>
  <match src="call_argument [20830,20838]" dest="call_argument [20925,20933]"/>
  <match src="primitive_type [6323,6330]" dest="primitive_type [6136,6143]"/>
  <match src="primitive_type [27282,27289]" dest="primitive_type [27410,27417]"/>
  <match src="public: public [31831,31837]" dest="public: public [32060,32066]"/>
  <match src="(: ( [29997,29998]" dest="(: ( [30259,30260]"/>
  <match src="identifier: Transfer [30048,30056]" dest="identifier: Transfer [30310,30318]"/>
  <match src="uint256: uint256 [6067,6074]" dest="uint256: uint256 [5880,5887]"/>
  <match src="state_variable_declaration [8857,8885]" dest="state_variable_declaration [8687,8715]"/>
  <match src="member_expression [31164,31174]" dest="member_expression [31386,31396]"/>
  <match src=",: , [12953,12954]" dest=",: , [12819,12820]"/>
  <match src="state_variable_declaration [15969,15984]" dest="state_variable_declaration [15957,15972]"/>
  <match src="number_literal: 1 [11849,11850]" dest="number_literal: 1 [11697,11698]"/>
  <match src="=: = [13972,13973]" dest="=: = [13967,13968]"/>
  <match src="type_name [18925,18932]" dest="type_name [19028,19035]"/>
  <match src="library: library [666,673]" dest="library: library [695,702]"/>
  <match src="binary_expression [26646,26673]" dest="binary_expression [26787,26814]"/>
  <match src="identifier: TrueCoinReceiver [27234,27250]" dest="identifier: TimeLockedToken [33284,33299]"/>
  <match src="identifier: c [1093,1094]" dest="identifier: c [1130,1131]"/>
  <match src="identifier: notes [9953,9958]" dest="identifier: notes [9758,9763]"/>
  <match src="expression_statement [26560,26610]" dest="expression_statement [26701,26751]"/>
  <match src="primitive_type [29558,29565]" dest="primitive_type [29812,29819]"/>
  <match src="block_statement [27028,27105]" dest="block_statement [27169,27246]"/>
  <match src="call_argument [19322,19344]" dest="call_argument [19425,19447]"/>
  <match src="event_paramater [18903,18923]" dest="event_paramater [19006,19026]"/>
  <match src=".: . [12037,12038]" dest=".: . [11871,11872]"/>
  <match src="indexed: indexed [8107,8114]" dest="indexed: indexed [7920,7927]"/>
  <match src="identifier: who [26815,26818]" dest="identifier: who [26956,26959]"/>
  <match src="emit: emit [32095,32099]" dest="emit: emit [32326,32330]"/>
  <match src="): ) [18006,18007]" dest="): ) [18052,18053]"/>
  <match src="(: ( [29146,29147]" dest="(: ( [29392,29393]"/>
  <match src="identifier: _attribute [11142,11152]" dest="identifier: _attribute [10990,11000]"/>
  <match src="identifier: a [18404,18405]" dest="identifier: a [18498,18499]"/>
  <match src="{: { [19831,19832]" dest="{: { [19934,19935]"/>
  <match src="assignment_expression [29765,29792]" dest="assignment_expression [30019,30046]"/>
  <match src="identifier: approve [20739,20746]" dest="identifier: approve [20834,20841]"/>
  <match src="identifier: i [14039,14040]" dest="identifier: i [14034,14035]"/>
  <match src="identifier: subscribers [11862,11873]" dest="identifier: subscribers [11710,11721]"/>
  <match src="binary_expression [28156,28176]" dest="binary_expression [28269,28289]"/>
  <match src="[: [ [12422,12423]" dest="[: [ [12290,12291]"/>
  <match src="function_definition [23421,23744]" dest="function_definition [23659,24017]"/>
  <match src="event_definition [9756,9865]" dest="event_definition [9586,9670]"/>
  <match src="member_expression [13881,13895]" dest="member_expression [13876,13890]"/>
  <match src="identifier: length [11188,11194]" dest="identifier: length [11036,11042]"/>
  <match src="identifier: index [11212,11217]" dest="identifier: index [11060,11065]"/>
  <match src=",: , [8563,8564]" dest=",: , [8373,8374]"/>
  <match src="identifier: _attribute [11727,11737]" dest="identifier: _attribute [11575,11585]"/>
  <match src="function_body [15322,15454]" dest="function_body [15327,15459]"/>
  <match src="identifier: a [3321,3322]" dest="identifier: a [3348,3349]"/>
  <match src="(: ( [28476,28477]" dest="(: ( [28640,28641]"/>
  <match src="identifier: _to [29180,29183]" dest="identifier: _to [29426,29429]"/>
  <match src="call_expression [21693,21752]" dest="call_expression [21825,21884]"/>
  <match src="public: public [8838,8844]" dest="public: public [8668,8674]"/>
  <match src="&quot;: &quot; [23618,23619]" dest="&quot;: &quot; [23891,23892]"/>
  <match src="bytes32: bytes32 [11546,11553]" dest="bytes32: bytes32 [11394,11401]"/>
  <match src="): ) [29358,29359]" dest="): ) [29604,29605]"/>
  <match src="): ) [23296,23297]" dest="): ) [23534,23535]"/>
  <match src="identifier: msg [12268,12271]" dest="identifier: msg [12136,12139]"/>
  <match src="}: } [25522,25523]" dest="}: } [25777,25778]"/>
  <match src=",: , [9822,9823]" dest=",: , [9642,9643]"/>
  <match src="type_name [28584,28591]" dest="type_name [28760,28767]"/>
  <match src="=: = [26489,26490]" dest="=: = [26631,26632]"/>
  <match src="return_type_definition [6731,6748]" dest="return_type_definition [6544,6561]"/>
  <match src="identifier: Registry [32969,32977]" dest="identifier: Registry [41670,41678]"/>
  <match src="identifier: _resolveRecipient [29980,29997]" dest="identifier: _resolveRecipient [30242,30259]"/>
  <match src="primitive_type [11946,11953]" dest="primitive_type [11780,11787]"/>
  <match src="comment: /**      * @dev mint TRU      * Can never mint more than MAX_SUPPLY = 1.45 billion      */ [33251,33344]" dest="comment: /**      * @dev mint TRU      * Can never mint more than MAX_SUPPLY = 1.45 billion      */ [41959,42052]"/>
  <match src="identifier: result [18549,18555]" dest="identifier: result [18667,18673]"/>
  <match src="call_argument [28213,28218]" dest="call_argument [28326,28331]"/>
  <match src="call_argument [23595,23619]" dest="call_argument [23868,23892]"/>
  <match src="identifier: from [27290,27294]" dest="identifier: from [27418,27422]"/>
  <match src="if_statement [29229,29301]" dest="if_statement [29475,29547]"/>
  <match src="identifier: _attribute [13568,13578]" dest="identifier: _attribute [13529,13539]"/>
  <match src="type_name [13393,13400]" dest="type_name [13354,13361]"/>
  <match src="return: return [12007,12013]" dest="return: return [11841,11847]"/>
  <match src="user_defined_type [10123,10136]" dest="user_defined_type [9928,9941]"/>
  <match src="uint256: uint256 [18945,18952]" dest="uint256: uint256 [19048,19055]"/>
  <match src="comment: // b) the writer is writing to attribute foo and that writer already has [10331,10403]" dest="comment: // b) the writer is writing to attribute foo and that writer already has [10136,10208]"/>
  <match src="string [24166,24184]" dest="string [24469,24487]"/>
  <match src="bool: bool [29967,29971]" dest="bool: bool [30229,30233]"/>
  <match src="expression_statement [19467,19492]" dest="expression_statement [19570,19595]"/>
  <match src="call_expression [29980,30002]" dest="call_expression [30242,30264]"/>
  <match src="): ) [20801,20802]" dest="): ) [20896,20897]"/>
  <match src="): ) [9452,9453]" dest="): ) [9282,9283]"/>
  <match src="(: ( [33427,33428]" dest="(: ( [42135,42136]"/>
  <match src=",: , [29934,29935]" dest=",: , [30196,30197]"/>
  <match src="-: - [11847,11848]" dest="-: - [11695,11696]"/>
  <match src="function_definition [21598,21782]" dest="function_definition [21727,21914]"/>
  <match src="type_name [33803,33809]" dest="type_name [42502,42508]"/>
  <match src="function_body [22853,23219]" dest="function_body [23056,23423]"/>
  <match src="primitive_type [10010,10017]" dest="primitive_type [9815,9822]"/>
  <match src="identifier: flags [27747,27752]" dest="identifier: flags [27860,27865]"/>
  <match src="state_mutability [18462,18466]" dest="state_mutability [18580,18584]"/>
  <match src="parameter [18165,18194]" dest="parameter [18241,18270]"/>
  <match src="(: ( [28276,28277]" dest="(: ( [28389,28390]"/>
  <match src="type_name [15822,15871]" dest="type_name [15813,15860]"/>
  <match src="uint256: uint256 [22927,22934]" dest="uint256: uint256 [23130,23137]"/>
  <match src="identifier: subscribers [11782,11793]" dest="identifier: subscribers [11630,11641]"/>
  <match src="modifier_definition [31333,31428]" dest="modifier_definition [31557,31652]"/>
  <match src="identifier: b [18562,18563]" dest="identifier: b [18680,18681]"/>
  <match src="identifier: _startIndex [13733,13744]" dest="identifier: _startIndex [13713,13724]"/>
  <match src="primitive_type [28120,28127]" dest="primitive_type [28233,28240]"/>
  <match src="type_name [19860,19867]" dest="type_name [19963,19970]"/>
  <match src="contract_body [18843,19502]" dest="contract_body [18946,19605]"/>
  <match src="call_argument [28250,28251]" dest="call_argument [28363,28364]"/>
  <match src="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts with custom message when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      *      * _Available since v2.4.0._      */ [4834,5339]" dest="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts with custom message when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [4768,5239]"/>
  <match src="identifier: Burn [29593,29597]" dest="identifier: Burn [29847,29851]"/>
  <match src="identifier: _subtractedValue [22804,22820]" dest="identifier: _subtractedValue [22992,23008]"/>
  <match src="parameter [6323,6340]" dest="parameter [6136,6153]"/>
  <match src="parameter [23789,23805]" dest="parameter [24081,24097]"/>
  <match src="(: ( [5910,5911]" dest="(: ( [5723,5724]"/>
  <match src="identifier: keccak256 [9669,9678]" dest="identifier: keccak256 [9499,9508]"/>
  <match src="emit_statement [29537,29578]" dest="emit_statement [29791,29832]"/>
  <match src="identifier: totalSupply [5874,5885]" dest="identifier: totalSupply [5687,5698]"/>
  <match src="state_variable_declaration [24070,24122]" dest="state_variable_declaration [24373,24425]"/>
  <match src="): ) [12579,12580]" dest="): ) [12447,12448]"/>
  <match src="block_statement [26041,26089]" dest="block_statement [26330,26378]"/>
  <match src="(: ( [29355,29356]" dest="(: ( [29601,29602]"/>
  <match src="[: [ [26009,26010]" dest="[: [ [26298,26299]"/>
  <match src="address: address [22822,22829]" dest="address: address [23019,23026]"/>
  <match src="(: ( [11726,11727]" dest="(: ( [11574,11575]"/>
  <match src="identifier: div [3241,3244]" dest="identifier: div [3268,3271]"/>
  <match src="[: [ [22027,22028]" dest="[: [ [22193,22194]"/>
  <match src="inheritance_specifier [27488,27506]" dest="inheritance_specifier [27603,27621]"/>
  <match src="visibility [28798,28806]" dest="visibility [29000,29008]"/>
  <match src="primitive_type [10096,10103]" dest="primitive_type [9901,9908]"/>
  <match src="if_statement [18246,18293]" dest="if_statement [18328,18375]"/>
  <match src="comment: /**      * @dev initialize trusttoken and give ownership to sender      * This is necessary to set ownership for proxy      */ [32814,32943]" dest="comment: /**      * @dev initialize trusttoken and give ownership to sender      * This is necessary to set ownership for proxy      */ [41515,41644]"/>
  <match src="binary_expression [25952,25971]" dest="binary_expression [26241,26260]"/>
  <match src="identifier: msg [14662,14665]" dest="identifier: msg [14660,14663]"/>
  <match src="type_cast_expression [27767,27794]" dest="type_cast_expression [27880,27907]"/>
  <match src="comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [89,664]" dest="comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [118,693]"/>
  <match src=",: , [23787,23788]" dest=",: , [24070,24071]"/>
  <match src="identifier: who [26737,26740]" dest="identifier: who [26878,26881]"/>
  <match src="public: public [11966,11972]" dest="public: public [11800,11806]"/>
  <match src="assignment_expression [19467,19491]" dest="assignment_expression [19570,19594]"/>
  <match src=".: . [13134,13135]" dest=".: . [13095,13096]"/>
  <match src="variable_declaration [29955,29965]" dest="variable_declaration [30217,30227]"/>
  <match src="state_variable_declaration [8891,8908]" dest="state_variable_declaration [8721,8738]"/>
  <match src="call_argument [33015,33026]" dest="call_argument [41716,41727]"/>
  <match src="identifier: newOwner [31875,31883]" dest="identifier: newOwner [32104,32112]"/>
  <match src="): ) [29322,29323]" dest="): ) [29568,29569]"/>
  <match src="call_argument [3324,3325]" dest="call_argument [3351,3352]"/>
  <match src="return_statement [30739,30753]" dest="return_statement [30984,30998]"/>
  <match src="state_mutability [33889,33893]" dest="state_mutability [42588,42592]"/>
  <match src="{: { [13443,13444]" dest="{: { [13404,13405]"/>
  <match src="block_statement [27823,27955]" dest="block_statement [27936,28068]"/>
  <match src="call_argument [29207,29209]" dest="call_argument [29453,29455]"/>
  <match src="identifier: hasHook [29315,29322]" dest="identifier: hasHook [29561,29568]"/>
  <match src="expression_statement [15390,15411]" dest="expression_statement [15395,15416]"/>
  <match src="identifier: b [5502,5503]" dest="identifier: b [5402,5403]"/>
  <match src="true [28733,28737]" dest="true [28933,28937]"/>
  <match src="]: ] [22915,22916]" dest="]: ] [23118,23119]"/>
  <match src="): ) [20976,20977]" dest="): ) [21105,21106]"/>
  <match src="primitive_type [24070,24077]" dest="primitive_type [24373,24380]"/>
  <match src="{: { [18258,18259]" dest="{: { [18340,18341]"/>
  <match src="variable_declaration_statement [2651,2669]" dest="variable_declaration_statement [2670,2688]"/>
  <match src="}: } [26088,26089]" dest="}: } [26377,26378]"/>
  <match src="array_access [23557,23572]" dest="array_access [23830,23845]"/>
  <match src="primitive_type [12101,12108]" dest="primitive_type [11954,11961]"/>
  <match src="contract_declaration [27429,30304]" dest="contract_declaration [27543,30566]"/>
  <match src="function: function [31986,31994]" dest="function: function [32217,32225]"/>
  <match src="(: ( [28233,28234]" dest="(: ( [28346,28347]"/>
  <match src="view: view [6726,6730]" dest="view: view [6539,6543]"/>
  <match src="uint256: uint256 [19258,19265]" dest="uint256: uint256 [19361,19368]"/>
  <match src=",: , [22675,22676]" dest=",: , [22844,22845]"/>
  <match src="address: address [23250,23257]" dest="address: address [23464,23471]"/>
  <match src="primitive_type [9890,9897]" dest="primitive_type [9695,9702]"/>
  <match src="function_body [19059,19181]" dest="function_body [19162,19284]"/>
  <match src="call_argument [30269,30272]" dest="call_argument [30531,30534]"/>
  <match src="identifier: _to [28959,28962]" dest="identifier: _to [29182,29185]"/>
  <match src="): ) [14275,14276]" dest="): ) [14270,14271]"/>
  <match src="(: ( [32968,32969]" dest="(: ( [41669,41670]"/>
  <match src="binary_expression [2687,2697]" dest="binary_expression [2706,2716]"/>
  <match src="identifier: index [12493,12498]" dest="identifier: index [12361,12366]"/>
  <match src="state_mutability [17824,17828]" dest="state_mutability [17834,17838]"/>
  <match src="primitive_type [20940,20947]" dest="primitive_type [21054,21061]"/>
  <match src="external: external [7883,7891]" dest="external: external [7696,7704]"/>
  <match src="expression_statement [28010,28045]" dest="expression_statement [28123,28158]"/>
  <match src="revert: revert [33544,33550]" dest="revert: revert [42243,42249]"/>
  <match src="number_literal: 0x0000ff0000000000000000000000000000000000000000000000000000000000 [25176,25242]" dest="number_literal: 0x0000ff0000000000000000000000000000000000000000000000000000000000 [25432,25498]"/>
  <match src="function: function [12919,12927]" dest="function: function [12785,12793]"/>
  <match src="[: [ [11873,11874]" dest="[: [ [11721,11722]"/>
  <match src="identifier: _who [12555,12559]" dest="identifier: _who [12423,12427]"/>
  <match src="binary_expression [2008,2013]" dest="binary_expression [2019,2024]"/>
  <match src="primitive_type [11164,11171]" dest="primitive_type [11012,11019]"/>
  <match src="address: address [28769,28776]" dest="address: address [28971,28978]"/>
  <match src="indexed: indexed [10194,10201]" dest="indexed: indexed [9999,10006]"/>
  <match src="primitive_type [14256,14271]" dest="primitive_type [14251,14266]"/>
  <match src="identifier: Mint [27585,27589]" dest="identifier: Mint [27698,27702]"/>
  <match src="identifier: b [17973,17974]" dest="identifier: b [18004,18005]"/>
  <match src="function: function [22744,22752]" dest="function: function [22913,22921]"/>
  <match src="if: if [26025,26027]" dest="if: if [26314,26316]"/>
  <match src="user_defined_type [25410,25418]" dest="user_defined_type [25665,25673]"/>
  <match src=",: , [10971,10972]" dest=",: , [10819,10820]"/>
  <match src="visibility [8865,8871]" dest="visibility [8695,8701]"/>
  <match src="comment: // File: @trusttoken/registry/contracts/Registry.sol [8406,8458]" dest="comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP.  */ [5506,5578]"/>
  <match src="identifier: targets [11240,11247]" dest="identifier: targets [11088,11095]"/>
  <match src="=: = [24164,24165]" dest="=: = [24467,24468]"/>
  <match src="call_argument [30243,30245]" dest="call_argument [30505,30507]"/>
  <match src="): ) [11223,11224]" dest="): ) [11071,11072]"/>
  <match src="(: ( [15358,15359]" dest="(: ( [15363,15364]"/>
  <match src="expression_statement [23107,23155]" dest="expression_statement [23310,23358]"/>
  <match src="identifier: AttributeData [12242,12255]" dest="identifier: AttributeData [12110,12123]"/>
  <match src="call_argument [31582,31609]" dest="call_argument [31808,31835]"/>
  <match src="comment: /**      * @dev Returns the remaining number of tokens that `spender` will be      * allowed to spend on behalf of `owner` through {transferFrom}. This is      * zero by default.      *      * This value changes when {approve} or {transferFrom} are called.      */ [6390,6660]" dest="comment: /**      * @dev Returns the remaining number of tokens that `spender` will be      * allowed to spend on behalf of `owner` through {transferFrom}. This is      * zero by default.      *      * This value changes when {approve} or {transferFrom} are called.      */ [6203,6473]"/>
  <match src="): ) [23821,23822]" dest="): ) [24128,24129]"/>
  <match src="=: = [26820,26821]" dest="=: = [26961,26962]"/>
  <match src="number_literal: 0x00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff [24596,24662]" dest="number_literal: 0x00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff [24895,24961]"/>
  <match src="): ) [3955,3956]" dest="): ) [3948,3949]"/>
  <match src="identifier: i [14094,14095]" dest="identifier: i [14089,14090]"/>
  <match src="call_expression [18328,18369]" dest="call_expression [18410,18451]"/>
  <match src="member_expression [14307,14319]" dest="member_expression [14302,14314]"/>
  <match src="type_cast_expression [26174,26189]" dest="type_cast_expression [34322,34332]"/>
  <match src="identifier: b [2325,2326]" dest="identifier: b [2344,2345]"/>
  <match src="expression_statement [31574,31611]" dest="expression_statement [31800,31837]"/>
  <match src="type_cast_expression [15436,15446]" dest="type_cast_expression [15441,15451]"/>
  <match src="identifier: allowance [6675,6684]" dest="identifier: allowance [6488,6497]"/>
  <match src="identifier: who [26571,26574]" dest="identifier: who [26712,26715]"/>
  <match src="function_body [28452,28556]" dest="function_body [28616,28720]"/>
  <match src="call_argument [29033,29038]" dest="call_argument [29279,29284]"/>
  <match src="expression_statement [14039,14047]" dest="expression_statement [14034,14042]"/>
  <match src="{: { [10561,10562]" dest="{: { [10366,10367]"/>
  <match src="(: ( [22624,22625]" dest="(: ( [22793,22794]"/>
  <match src="=: = [28203,28204]" dest="=: = [28316,28317]"/>
  <match src="returns: returns [6731,6738]" dest="returns: returns [6544,6551]"/>
  <match src="address: address [28584,28591]" dest="address: address [28760,28767]"/>
  <match src="identifier: recipient [7856,7865]" dest="identifier: recipient [7669,7678]"/>
  <match src=",: , [28394,28395]" dest=",: , [28517,28518]"/>
  <match src=",: , [13003,13004]" dest=",: , [12910,12911]"/>
  <match src="type_name [28936,28943]" dest="type_name [29150,29157]"/>
  <match src="user_defined_type [10213,10226]" dest="user_defined_type [10018,10031]"/>
  <match src="): ) [19172,19173]" dest="): ) [19275,19276]"/>
  <match src="address: address [6323,6330]" dest="address: address [6136,6143]"/>
  <match src="parameter [12941,12953]" dest="parameter [12807,12819]"/>
  <match src="identifier: _addresses [14020,14030]" dest="identifier: _addresses [14015,14025]"/>
  <match src="identifier: a [18250,18251]" dest="identifier: a [18332,18333]"/>
  <match src="identifier: _attribute [11641,11651]" dest="identifier: _attribute [11489,11499]"/>
  <match src="primitive_type [7832,7839]" dest="primitive_type [7645,7652]"/>
  <match src="}: } [2638,2639]" dest="}: } [2657,2658]"/>
  <match src="-: - [2010,2011]" dest="-: - [2021,2022]"/>
  <match src="primitive_type [11612,11619]" dest="primitive_type [11460,11467]"/>
  <match src="=: = [17872,17873]" dest="=: = [17882,17883]"/>
  <match src="primitive_type [12723,12730]" dest="primitive_type [12591,12598]"/>
  <match src="state_mutability [5897,5901]" dest="state_mutability [5710,5714]"/>
  <match src="(: ( [29002,29003]" dest="(: ( [29248,29249]"/>
  <match src=",: , [12186,12187]" dest=",: , [12054,12055]"/>
  <match src="identifier: result [18227,18233]" dest="identifier: result [18309,18315]"/>
  <match src="array_access [28137,28178]" dest="array_access [28250,28291]"/>
  <match src="[: [ [19120,19121]" dest="[: [ [19223,19224]"/>
  <match src="{: { [26707,26708]" dest="{: { [26848,26849]"/>
  <match src="variable_declaration_statement [14069,14097]" dest="variable_declaration_statement [14064,14092]"/>
  <match src="(: ( [7434,7435]" dest="(: ( [7247,7248]"/>
  <match src="identifier: WRITE_PERMISSION [9650,9666]" dest="identifier: WRITE_PERMISSION [9480,9496]"/>
  <match src="return_type_definition [18467,18491]" dest="return_type_definition [18585,18609]"/>
  <match src="function_definition [15272,15454]" dest="function_definition [15277,15459]"/>
  <match src="constant: constant [25257,25265]" dest="constant: constant [25513,25521]"/>
  <match src="]: ] [26013,26014]" dest="]: ] [26302,26303]"/>
  <match src="identifier: b [18415,18416]" dest="identifier: b [18518,18519]"/>
  <match src="identifier: hook [30205,30209]" dest="identifier: hook [30467,30471]"/>
  <match src="parameter [28599,28610]" dest="parameter [28784,28795]"/>
  <match src="binary_expression [27811,27821]" dest="binary_expression [27924,27934]"/>
  <match src="(: ( [11273,11274]" dest="(: ( [11121,11122]"/>
  <match src="identifier: _attribute [10666,10676]" dest="identifier: _attribute [10471,10481]"/>
  <match src="(: ( [1434,1435]" dest="(: ( [1479,1480]"/>
  <match src="visibility [14407,14415]" dest="visibility [14402,14410]"/>
  <match src="primitive_type [13230,13237]" dest="primitive_type [13191,13198]"/>
  <match src="identifier: sender [20852,20858]" dest="identifier: sender [20947,20953]"/>
  <match src="identifier: _value [26694,26700]" dest="identifier: _value [26835,26841]"/>
  <match src="else: else [26780,26784]" dest="else: else [26921,26925]"/>
  <match src="return_type_definition [6367,6381]" dest="return_type_definition [6180,6194]"/>
  <match src="return_statement [2619,2628]" dest="return_statement [2638,2647]"/>
  <match src="emit: emit [23165,23169]" dest="emit: emit [23368,23372]"/>
  <match src="(: ( [28849,28850]" dest="(: ( [29051,29052]"/>
  <match src="identifier: who [26484,26487]" dest="identifier: who [26626,26629]"/>
  <match src="identifier: timestamp [12286,12295]" dest="identifier: timestamp [12154,12163]"/>
  <match src="{: { [27961,27962]" dest="{: { [28074,28075]"/>
  <match src=",: , [12559,12560]" dest=",: , [12427,12428]"/>
  <match src="type_cast_expression [28156,28170]" dest="type_cast_expression [28269,28283]"/>
  <match src="assignment_expression [27047,27089]" dest="assignment_expression [27188,27230]"/>
  <match src="(: ( [20796,20797]" dest="(: ( [20891,20892]"/>
  <match src="uint144: uint144 [28148,28155]" dest="uint144: uint144 [28261,28268]"/>
  <match src="call_argument [12256,12262]" dest="call_argument [12124,12130]"/>
  <match src="parameter [12709,12721]" dest="parameter [12577,12589]"/>
  <match src="event_definition [9871,9987]" dest="event_definition [9676,9792]"/>
  <match src="returns: returns [11978,11985]" dest="returns: returns [11812,11819]"/>
  <match src="array_access [11782,11813]" dest="array_access [11630,11661]"/>
  <match src="binary_expression [23635,23668]" dest="binary_expression [23908,23941]"/>
  <match src="identifier: c [1007,1008]" dest="identifier: c [1044,1045]"/>
  <match src="indexed: indexed [9841,9848]" dest="indexed: indexed [9652,9659]"/>
  <match src="identifier: PASSED_KYCAML [26660,26673]" dest="identifier: PASSED_KYCAML [26801,26814]"/>
  <match src=",: , [1470,1471]" dest=",: , [1515,1516]"/>
  <match src="uint256: uint256 [11987,11994]" dest="uint256: uint256 [11821,11828]"/>
  <match src="using: using [19838,19843]" dest="using: using [19941,19946]"/>
  <match src="identifier: b [3926,3927]" dest="identifier: b [3919,3920]"/>
  <match src="event_paramater [8099,8119]" dest="event_paramater [7912,7932]"/>
  <match src="identifier: transferOwnership [15082,15099]" dest="identifier: transferOwnership [15085,15102]"/>
  <match src="}: } [33584,33585]" dest="}: } [42283,42284]"/>
  <match src="identifier: onlyPendingOwner [15305,15321]" dest="identifier: onlyPendingOwner [15310,15326]"/>
  <match src="expression_statement [19356,19381]" dest="expression_statement [19459,19484]"/>
  <match src="): ) [2358,2359]" dest="): ) [2377,2378]"/>
  <match src="primitive_type [20029,20036]" dest="primitive_type [20128,20135]"/>
  <match src="bytes32: bytes32 [24128,24135]" dest="bytes32: bytes32 [24431,24438]"/>
  <match src="parameter [1390,1399]" dest="parameter [1435,1444]"/>
  <match src=",: , [27715,27716]" dest=",: , [27828,27829]"/>
  <match src="type_name [8565,8572]" dest="type_name [8384,8391]"/>
  <match src="if: if [28230,28232]" dest="if: if [28343,28345]"/>
  <match src="variable_declaration [25983,25996]" dest="variable_declaration [26272,26285]"/>
  <match src="identifier: approve [7427,7434]" dest="identifier: approve [7240,7247]"/>
  <match src="expression_statement [31859,31884]" dest="expression_statement [32088,32113]"/>
  <match src="address: address [7832,7839]" dest="address: address [7645,7652]"/>
  <match src="address: address [28381,28388]" dest="address: address [28504,28511]"/>
  <match src="): ) [10679,10680]" dest="): ) [10484,10485]"/>
  <match src="&quot;: &quot; [19322,19323]" dest="&quot;: &quot; [19425,19426]"/>
  <match src="}: } [22735,22736]" dest="}: } [22904,22905]"/>
  <match src="array_access [12411,12434]" dest="array_access [12279,12302]"/>
  <match src="identifier: _ [28334,28335]" dest="identifier: _ [28447,28448]"/>
  <match src="binary_expression [26491,26518]" dest="binary_expression [26633,26660]"/>
  <match src="external: external [6044,6052]" dest="external: external [5857,5865]"/>
  <match src="identifier: _who [19425,19429]" dest="identifier: _who [19528,19532]"/>
  <match src="address: address [7848,7855]" dest="address: address [7661,7668]"/>
  <match src="parameter [6342,6356]" dest="parameter [6155,6169]"/>
  <match src=",: , [30060,30061]" dest=",: , [30322,30323]"/>
  <match src="}: } [23412,23413]" dest="}: } [23650,23651]"/>
  <match src="type_name [7867,7874]" dest="type_name [7680,7687]"/>
  <match src="&lt;: &lt; [11685,11686]" dest="&lt;: &lt; [11533,11534]"/>
  <match src=",: , [29834,29835]" dest=",: , [30088,30089]"/>
  <match src="contract_declaration [18800,19502]" dest="contract_declaration [18903,19605]"/>
  <match src="type_name [10794,10801]" dest="type_name [10618,10625]"/>
  <match src="&quot;: &quot; [1503,1504]" dest="&quot;: &quot; [1548,1549]"/>
  <match src="primitive_type [29836,29843]" dest="primitive_type [30090,30097]"/>
  <match src="): ) [31609,31610]" dest="): ) [31835,31836]"/>
  <match src="): ) [8397,8398]" dest="): ) [8210,8211]"/>
  <match src="(: ( [8550,8551]" dest="(: ( [8350,8351]"/>
  <match src="assignment_expression [18102,18116]" dest="assignment_expression [18148,18162]"/>
  <match src="struct_member [8750,8768]" dest="struct_member [8584,8602]"/>
  <match src=".: . [33104,33105]" dest=".: . [41805,41806]"/>
  <match src="parameter [23807,23821]" dest="parameter [24108,24122]"/>
  <match src="string [23595,23619]" dest="string [23868,23892]"/>
  <match src="primitive_type [33377,33384]" dest="primitive_type [42085,42092]"/>
  <match src="identifier: subscribers [13831,13842]" dest="identifier: subscribers [13826,13837]"/>
  <match src="bytes32: bytes32 [10794,10801]" dest="bytes32: bytes32 [10618,10625]"/>
  <match src="string: string [18418,18424]" dest="string: string [18530,18536]"/>
  <match src="): ) [9734,9735]" dest="): ) [9564,9565]"/>
  <match src="parameter [29445,29459]" dest="parameter [29691,29705]"/>
  <match src="bytes32: bytes32 [10830,10837]" dest="bytes32: bytes32 [10672,10679]"/>
  <match src="function_body [19456,19499]" dest="function_body [19559,19602]"/>
  <match src="while: while [12486,12491]" dest="while: while [12354,12359]"/>
  <match src="}: } [13673,13674]" dest="}: } [13634,13635]"/>
  <match src="function: function [15272,15280]" dest="function: function [15277,15285]"/>
  <match src="internal: internal [19240,19248]" dest="internal: internal [19343,19351]"/>
  <match src="type_cast_expression [14320,14333]" dest="type_cast_expression [14315,14328]"/>
  <match src="primitive_type [13546,13553]" dest="primitive_type [13507,13514]"/>
  <match src="primitive_type [13705,13712]" dest="primitive_type [13676,13683]"/>
  <match src="call_argument [12555,12559]" dest="call_argument [12423,12427]"/>
  <match src="solidity_version: 0.5.0 [79,84]" dest="solidity_version: 0.6.0 [108,113]"/>
  <match src="=: = [11128,11129]" dest="=: = [10976,10977]"/>
  <match src="function_definition [31986,32221]" dest="function_definition [32217,32452]"/>
  <match src="identifier: _ [31419,31420]" dest="identifier: _ [31643,31644]"/>
  <match src=".: . [14460,14461]" dest=".: . [14455,14456]"/>
  <match src="): ) [26371,26372]" dest="): ) [26513,26514]"/>
  <match src="identifier: _tokenHolder [20964,20976]" dest="identifier: _tokenHolder [21087,21099]"/>
  <match src="): ) [6715,6716]" dest="): ) [6528,6529]"/>
  <match src="primitive_type [20765,20772]" dest="primitive_type [20860,20867]"/>
  <match src="binary_expression [26744,26763]" dest="binary_expression [26885,26904]"/>
  <match src="]: ] [23571,23572]" dest="]: ] [23844,23845]"/>
  <match src="(: ( [26364,26365]" dest="(: ( [26506,26507]"/>
  <match src="external: external [6717,6725]" dest="external: external [6530,6538]"/>
  <match src="identifier: _attribute [11430,11440]" dest="identifier: _attribute [11278,11288]"/>
  <match src="type_name [18031,18038]" dest="type_name [18077,18084]"/>
  <match src="primitive_type [8565,8572]" dest="primitive_type [8384,8391]"/>
  <match src="address: address [15779,15786]" dest="address: address [15770,15777]"/>
  <match src="state_variable_declaration [32759,32808]" dest="state_variable_declaration [41458,41507]"/>
  <match src="external: external [11582,11590]" dest="external: external [11430,11438]"/>
  <match src="parameter [23250,23262]" dest="parameter [23464,23476]"/>
  <match src="state_mutability [1421,1425]" dest="state_mutability [1466,1470]"/>
  <match src="type_name [28120,28127]" dest="type_name [28233,28240]"/>
  <match src="type_name [19003,19010]" dest="type_name [19106,19113]"/>
  <match src="call_expression [10630,10677]" dest="call_expression [10435,10482]"/>
  <match src="parameter [13230,13248]" dest="parameter [13191,13209]"/>
  <match src="[: [ [19476,19477]" dest="[: [ [19579,19580]"/>
  <match src="identifier: _attribute [12423,12433]" dest="identifier: _attribute [12291,12301]"/>
  <match src="block_statement [28254,28324]" dest="block_statement [28367,28437]"/>
  <match src="parameter [11345,11363]" dest="parameter [11193,11211]"/>
  <match src="identifier: require [4067,4074]" dest="identifier: require [3993,4000]"/>
  <match src="&gt;&gt;: &gt;&gt; [28171,28173]" dest="&gt;&gt;: &gt;&gt; [28284,28286]"/>
  <match src="identifier: ValSafeMath [19844,19855]" dest="identifier: ValSafeMath [19947,19958]"/>
  <match src="type_name [25849,25856]" dest="type_name [26114,26121]"/>
  <match src="solidity: solidity [5592,5600]" dest="solidity: solidity [5486,5494]"/>
  <match src="identifier: _value [30111,30117]" dest="identifier: _value [30373,30379]"/>
  <match src="identifier: owner [8845,8850]" dest="identifier: owner [8675,8680]"/>
  <match src="function_body [13032,13181]" dest="function_body [12993,13142]"/>
  <match src="): ) [18045,18046]" dest="): ) [18091,18092]"/>
  <match src="(: ( [33779,33780]" dest="(: ( [42478,42479]"/>
  <match src="): ) [12365,12366]" dest="): ) [12233,12234]"/>
  <match src="uint256: uint256 [12996,13003]" dest="uint256: uint256 [12903,12910]"/>
  <match src="bytes32: bytes32 [9945,9952]" dest="bytes32: bytes32 [9750,9757]"/>
  <match src="assignment_expression [23002,23014]" dest="assignment_expression [23205,23217]"/>
  <match src="bytes32: bytes32 [13230,13237]" dest="bytes32: bytes32 [13191,13198]"/>
  <match src="uint256: uint256 [999,1006]" dest="uint256: uint256 [1036,1043]"/>
  <match src="function_body [22631,22736]" dest="function_body [22800,22905]"/>
  <match src="comment: /**     * @dev Allows the current owner to set the pendingOwner address.     * @param newOwner The address to transfer ownership to.     */ [31638,31780]" dest="comment: /**      * @dev Allows the current owner to set the pendingOwner address.      * @param newOwner The address to transfer ownership to.      */ [31864,32009]"/>
  <match src="(: ( [17761,17762]" dest="(: ( [17737,17738]"/>
  <match src="identifier: _value [19485,19491]" dest="identifier: _value [19588,19594]"/>
  <match src="identifier: a [942,943]" dest="identifier: a [979,980]"/>
  <match src="identifier: to [18941,18943]" dest="identifier: to [19044,19046]"/>
  <match src="[: [ [14093,14094]" dest="[: [ [14088,14089]"/>
  <match src="contract_body [27251,27324]" dest="contract_body [27380,27451]"/>
  <match src="call_argument [30062,30064]" dest="call_argument [30324,30326]"/>
  <match src="constant: constant [19882,19890]" dest="constant: constant [19985,19993]"/>
  <match src="address: address [12087,12094]" dest="address: address [11931,11938]"/>
  <match src="expression_statement [33483,33503]" dest="expression_statement [42191,42211]"/>
  <match src="identifier: _attribute [14146,14156]" dest="identifier: _attribute [14141,14151]"/>
  <match src="identifier: msg [33101,33104]" dest="identifier: msg [41802,41805]"/>
  <match src="for_statement [14003,14208]" dest="for_statement [13998,14203]"/>
  <match src="identifier: b [18162,18163]" dest="identifier: b [18229,18230]"/>
  <match src="primitive_type [6740,6747]" dest="primitive_type [6553,6560]"/>
  <match src="returns: returns [30710,30717]" dest="returns: returns [30955,30962]"/>
  <match src="number_literal: 0 [12826,12827]" dest="number_literal: 0 [12694,12695]"/>
  <match src="identifier: _value [28972,28978]" dest="identifier: _value [29204,29210]"/>
  <match src="): ) [33701,33702]" dest="): ) [42400,42401]"/>
  <match src="type_name [23775,23782]" dest="type_name [24058,24065]"/>
  <match src="primitive_type [23458,23465]" dest="primitive_type [23715,23722]"/>
  <match src="event_paramater [8121,8139]" dest="event_paramater [7934,7952]"/>
  <match src="identifier: allowance [23318,23327]" dest="identifier: allowance [23556,23565]"/>
  <match src="identifier: divideByZeroMessage [18518,18537]" dest="identifier: divideByZeroMessage [18636,18655]"/>
  <match src="array_access [23557,23582]" dest="array_access [23830,23855]"/>
  <match src="function_body [14643,14716]" dest="function_body [14641,14714]"/>
  <match src="primitive_type [10516,10523]" dest="primitive_type [10321,10328]"/>
  <match src="}: } [26860,26861]" dest="}: } [27001,27002]"/>
  <match src="identifier: TrueCoinReceiver [30226,30242]" dest="identifier: TrueCoinReceiver [30488,30504]"/>
  <match src="(: ( [10095,10096]" dest="(: ( [9900,9901]"/>
  <match src="(: ( [28163,28164]" dest="(: ( [28276,28277]"/>
  <match src="uint256: uint256 [19037,19044]" dest="uint256: uint256 [19140,19147]"/>
  <match src=".: . [12271,12272]" dest=".: . [12139,12140]"/>
  <match src="address: address [23458,23465]" dest="address: address [23715,23722]"/>
  <match src="type_name [4709,4716]" dest="type_name [4643,4650]"/>
  <match src="parameter [3907,3916]" dest="parameter [3900,3909]"/>
  <match src="identifier: a [2691,2692]" dest="identifier: a [2710,2711]"/>
  <match src="function_definition [19189,19388]" dest="function_definition [19292,19491]"/>
  <match src="function_body [14426,14532]" dest="function_body [14421,14527]"/>
  <match src="type_name [4106,4113]" dest="type_name [4032,4039]"/>
  <match src="identifier: msg [28704,28707]" dest="identifier: msg [28904,28907]"/>
  <match src="event_paramater [10096,10121]" dest="event_paramater [9901,9926]"/>
  <match src="address: address [27669,27676]" dest="address: address [27782,27789]"/>
  <match src="): ) [31829,31830]" dest="): ) [32058,32059]"/>
  <match src="block_statement [26949,27022]" dest="block_statement [27090,27163]"/>
  <match src="else: else [33524,33528]" dest="else: else [42223,42227]"/>
  <match src="(: ( [14478,14479]" dest="(: ( [14473,14474]"/>
  <match src="(: ( [23774,23775]" dest="(: ( [24047,24048]"/>
  <match src="number_literal: 0 [12503,12504]" dest="number_literal: 0 [12371,12372]"/>
  <match src="array_access [11862,11885]" dest="array_access [11710,11733]"/>
  <match src="return_statement [28885,28897]" dest="return_statement [29087,29099]"/>
  <match src="identifier: _value [29659,29665]" dest="identifier: _value [29913,29919]"/>
  <match src="function_definition [33766,33856]" dest="function_definition [42465,42555]"/>
  <match src="=: = [13829,13830]" dest="=: = [13824,13825]"/>
  <match src="type_name [10186,10193]" dest="type_name [9991,9998]"/>
  <match src="function_definition [29415,29800]" dest="function_definition [29661,30054]"/>
  <match src="parameter [28381,28394]" dest="parameter [28504,28517]"/>
  <match src="parameter [18396,18405]" dest="parameter [18490,18499]"/>
  <match src="type_name [1936,1943]" dest="type_name [1947,1954]"/>
  <match src="public: public [15872,15878]" dest="public: public [15861,15867]"/>
  <match src="uint256: uint256 [23510,23517]" dest="uint256: uint256 [23782,23789]"/>
  <match src="identifier: _addBalance [29195,29206]" dest="identifier: _addBalance [29441,29452]"/>
  <match src="memory: memory [17791,17797]" dest="memory: memory [17795,17801]"/>
  <match src="type_name [33724,33729]" dest="type_name [42423,42428]"/>
  <match src="block_statement [14050,14208]" dest="block_statement [14045,14203]"/>
  <match src="identifier: onlyOwner [11591,11600]" dest="identifier: onlyOwner [11439,11448]"/>
  <match src="assignment_expression [23318,23405]" dest="assignment_expression [23556,23643]"/>
  <match src="primitive_type [25863,25870]" dest="primitive_type [26137,26144]"/>
  <match src="(: ( [19313,19314]" dest="(: ( [19416,19417]"/>
  <match src="indexed: indexed [8344,8351]" dest="indexed: indexed [8157,8164]"/>
  <match src="): ) [5406,5407]" dest="): ) [5306,5307]"/>
  <match src="comment: /**  * All storage must be declared here  * New storage must be appended to the end  * Never remove items from this list  */ [15554,15682]" dest="comment: /**  * All storage must be declared here  * New storage must be appended to the end  * Never remove items from this list  */ [15546,15674]"/>
  <match src="): ) [5438,5439]" dest="): ) [5338,5339]"/>
  <match src="): ) [29008,29009]" dest="): ) [29254,29255]"/>
  <match src="): ) [14641,14642]" dest="): ) [14639,14640]"/>
  <match src="uint256: uint256 [26064,26071]" dest="uint256: uint256 [26353,26360]"/>
  <match src="]: ] [28177,28178]" dest="]: ] [28290,28291]"/>
  <match src="visibility [11582,11590]" dest="visibility [11430,11438]"/>
  <match src="call_argument [28704,28714]" dest="call_argument [28904,28914]"/>
  <match src="type_cast_expression [29886,29896]" dest="type_cast_expression [30148,30158]"/>
  <match src="true [28892,28896]" dest="true [29094,29098]"/>
  <match src="primitive_type [15969,15976]" dest="primitive_type [15957,15964]"/>
  <match src="): ) [13934,13935]" dest="): ) [13929,13930]"/>
  <match src="call_expression [3317,3356]" dest="call_expression [3344,3383]"/>
  <match src="while_statement [13906,14219]" dest="while_statement [13901,14214]"/>
  <match src="member_expression [11418,11446]" dest="member_expression [11266,11294]"/>
  <match src="(: ( [31134,31135]" dest="(: ( [31356,31357]"/>
  <match src="state_mutability [3276,3280]" dest="state_mutability [3303,3307]"/>
  <match src="): ) [19445,19446]" dest="): ) [19548,19549]"/>
  <match src="address: address [9409,9416]" dest="address: address [9239,9246]"/>
  <match src="bool: bool [20797,20801]" dest="bool: bool [20892,20896]"/>
  <match src="uint256: uint256 [24785,24792]" dest="uint256: uint256 [25072,25079]"/>
  <match src="parameter [12955,12973]" dest="parameter [12821,12839]"/>
  <match src="uint256: uint256 [24669,24676]" dest="uint256: uint256 [24968,24975]"/>
  <match src="public: public [25899,25905]" dest="public: public [26188,26194]"/>
  <match src="external: external [6358,6366]" dest="external: external [6171,6179]"/>
  <match src=",: , [25881,25882]" dest=",: , [26155,26156]"/>
  <match src="parameter [934,943]" dest="parameter [971,980]"/>
  <match src="uint256: uint256 [28964,28971]" dest="uint256: uint256 [29196,29203]"/>
  <match src="expression_statement [17890,17928]" dest="expression_statement [17900,17938]"/>
  <match src="type_name [23444,23451]" dest="type_name [23692,23699]"/>
  <match src="type_name [2651,2658]" dest="type_name [2670,2677]"/>
  <match src="[: [ [12528,12529]" dest="[: [ [12396,12397]"/>
  <match src="for: for [14003,14006]" dest="for: for [13998,14001]"/>
  <match src="modifier: modifier [14622,14630]" dest="modifier: modifier [14620,14628]"/>
  <match src="view: view [12750,12754]" dest="view: view [12618,12622]"/>
  <match src="identifier: previousOwner [9809,9822]" dest="identifier: previousOwner [9629,9642]"/>
  <match src="!=: != [29237,29239]" dest="!=: != [29483,29485]"/>
  <match src="return: return [1086,1092]" dest="return: return [1123,1129]"/>
  <match src="==: == [26893,26895]" dest="==: == [27034,27036]"/>
  <match src="returns: returns [6058,6065]" dest="returns: returns [5871,5878]"/>
  <match src="|: | [26347,26348]" dest="|: | [26489,26490]"/>
  <match src="identifier: RegistryClone [8502,8515]" dest="identifier: RegistryClone [8302,8315]"/>
  <match src="call_argument [28477,28482]" dest="call_argument [28641,28646]"/>
  <match src="identifier: mod [5354,5357]" dest="identifier: mod [5254,5257]"/>
  <match src="identifier: newValue [23047,23055]" dest="identifier: newValue [23250,23258]"/>
  <match src="identifier: who [26010,26013]" dest="identifier: who [26299,26302]"/>
  <match src="[: [ [12227,12228]" dest="[: [ [12095,12096]"/>
  <match src="variable_declaration [2651,2660]" dest="variable_declaration [2670,2679]"/>
  <match src="identifier: _attribute [26646,26656]" dest="identifier: _attribute [26787,26797]"/>
  <match src="(: ( [28768,28769]" dest="(: ( [28970,28971]"/>
  <match src="identifier: targets [13821,13828]" dest="identifier: targets [13816,13823]"/>
  <match src="identifier: registry_ [33060,33069]" dest="identifier: registry_ [41761,41770]"/>
  <match src="type_name [11546,11553]" dest="type_name [11394,11401]"/>
  <match src="call_expression [33483,33502]" dest="call_expression [42191,42210]"/>
  <match src="if: if [29229,29231]" dest="if: if [29475,29477]"/>
  <match src="primitive_type [25983,25990]" dest="primitive_type [26272,26279]"/>
  <match src="identifier: result [19374,19380]" dest="identifier: result [19477,19483]"/>
  <match src="primitive_type [3907,3914]" dest="primitive_type [3900,3907]"/>
  <match src="identifier: _from [29598,29603]" dest="identifier: _from [29852,29857]"/>
  <match src="expression_statement [29765,29793]" dest="expression_statement [30019,30047]"/>
  <match src="expression_statement [19070,19101]" dest="expression_statement [19173,19204]"/>
  <match src="identifier: _attribute [13088,13098]" dest="identifier: _attribute [13049,13059]"/>
  <match src="): ) [18233,18234]" dest="): ) [18315,18316]"/>
  <match src="identifier: subscriber [10235,10245]" dest="identifier: subscriber [10040,10050]"/>
  <match src="(: ( [19036,19037]" dest="(: ( [19139,19140]"/>
  <match src="call_argument [28164,28169]" dest="call_argument [28277,28282]"/>
  <match src="returns: returns [17829,17836]" dest="returns: returns [17839,17846]"/>
  <match src="(: ( [5458,5459]" dest="(: ( [5358,5359]"/>
  <match src="[: [ [13314,13315]" dest="[: [ [13275,13276]"/>
  <match src="assignment_expression [26726,26763]" dest="assignment_expression [26867,26904]"/>
  <match src="}: } [33757,33758]" dest="}: } [42456,42457]"/>
  <match src="parameter [17762,17771]" dest="parameter [17748,17757]"/>
  <match src="(: ( [12255,12256]" dest="(: ( [12123,12124]"/>
  <match src="call_argument [29084,29090]" dest="call_argument [29330,29336]"/>
  <match src="emit: emit [29872,29876]" dest="emit: emit [30134,30138]"/>
  <match src="(: ( [21011,21012]" dest="(: ( [21140,21141]"/>
  <match src="{: { [22631,22632]" dest="{: { [22800,22801]"/>
  <match src="address: address [30719,30726]" dest="address: address [30964,30971]"/>
  <match src=",: , [18416,18417]" dest=",: , [18519,18520]"/>
  <match src="(: ( [18335,18336]" dest="(: ( [18417,18418]"/>
  <match src="identifier: _value [29040,29046]" dest="identifier: _value [29286,29292]"/>
  <match src="comment: /**     * @dev Throws if called by any account other than the owner.     */ [31250,31327]" dest="comment: /**      * @dev Throws if called by any account other than the owner.      */ [31472,31551]"/>
  <match src="function: function [1850,1858]" dest="function: function [1861,1869]"/>
  <match src="): ) [23619,23620]" dest="): ) [23892,23893]"/>
  <match src="type_name [8384,8391]" dest="type_name [8197,8204]"/>
  <match src="primitive_type [10496,10503]" dest="primitive_type [10301,10308]"/>
  <match src="(: ( [13433,13434]" dest="(: ( [13394,13395]"/>
  <match src="address: address [19210,19217]" dest="address: address [19313,19320]"/>
  <match src="contract_declaration [23991,27126]" dest="contract_declaration [24285,27267]"/>
  <match src="identifier: attributes [26299,26309]" dest="identifier: attributes [26441,26451]"/>
  <match src="(: ( [28645,28646]" dest="(: ( [28845,28846]"/>
  <match src="number_literal: 0x00ff000000000000000000000000000000000000000000000000000000000000 [24712,24778]" dest="number_literal: 0x00ff000000000000000000000000000000000000000000000000000000000000 [24999,25065]"/>
  <match src="identifier: _who [23783,23787]" dest="identifier: _who [24066,24070]"/>
  <match src="type_name [32720,32727]" dest="type_name [41419,41426]"/>
  <match src="identifier: length [14031,14037]" dest="identifier: length [14026,14032]"/>
  <match src="return: return [33659,33665]" dest="return: return [42358,42364]"/>
  <match src="): ) [21098,21099]" dest="): ) [21227,21228]"/>
  <match src="): ) [12768,12769]" dest="): ) [12636,12637]"/>
  <match src="identifier: length [12469,12475]" dest="identifier: length [12337,12343]"/>
  <match src="member_expression [23557,23586]" dest="member_expression [23830,23859]"/>
  <match src="type_name [20956,20963]" dest="type_name [21079,21086]"/>
  <match src="identifier: sender [12359,12365]" dest="identifier: sender [12227,12233]"/>
  <match src="&quot;: &quot; [33571,33572]" dest="&quot;: &quot; [42270,42271]"/>
  <match src="assignment_expression [15390,15410]" dest="assignment_expression [15395,15415]"/>
  <match src="if: if [26099,26101]" dest="if: if [26388,26390]"/>
  <match src="identifier: b [18350,18351]" dest="identifier: b [18432,18433]"/>
  <match src="type_name [22568,22575]" dest="type_name [22734,22741]"/>
  <match src=",: , [14156,14157]" dest=",: , [14151,14152]"/>
  <match src="type_name [15990,15997]" dest="type_name [15978,15985]"/>
  <match src="primitive_type [12121,12128]" dest="primitive_type [11983,11990]"/>
  <match src="identifier: _tokenHolder [23121,23133]" dest="identifier: _tokenHolder [23324,23336]"/>
  <match src="=: = [26315,26316]" dest="=: = [26457,26458]"/>
  <match src="member_expression [29693,29708]" dest="member_expression [29947,29962]"/>
  <match src="!=: != [5461,5463]" dest="!=: != [5361,5363]"/>
  <match src="identifier: newOwner [15161,15169]" dest="identifier: newOwner [15164,15172]"/>
  <match src="&quot;: &quot; [28310,28311]" dest="&quot;: &quot; [28423,28424]"/>
  <match src="): ) [26915,26916]" dest="): ) [27056,27057]"/>
  <match src="block_statement [26137,26385]" dest="block_statement [26426,26527]"/>
  <match src="(: ( [28528,28529]" dest="(: ( [28692,28693]"/>
  <match src="identifier: msg [21741,21744]" dest="identifier: msg [21873,21876]"/>
  <match src="identifier: sender [31586,31592]" dest="identifier: sender [31812,31818]"/>
  <match src="function_body [20803,20889]" dest="function_body [20898,20984]"/>
  <match src="identifier: pendingOwner_ [31859,31872]" dest="identifier: pendingOwner_ [32088,32101]"/>
  <match src="boolean_literal [28733,28737]" dest="boolean_literal [28933,28937]"/>
  <match src="=&gt;: =&gt; [9436,9438]" dest="=&gt;: =&gt; [9266,9268]"/>
  <match src="variable_declaration [11096,11127]" dest="variable_declaration [10944,10975]"/>
  <match src="type_name [28816,28820]" dest="type_name [29018,29022]"/>
  <match src="(: ( [25951,25952]" dest="(: ( [26240,26241]"/>
  <match src="identifier: to [29147,29149]" dest="identifier: to [29393,29395]"/>
  <match src="identifier: a [18312,18313]" dest="identifier: a [18394,18395]"/>
  <match src="identifier: _attribute [11044,11054]" dest="identifier: _attribute [10892,10902]"/>
  <match src="call_argument [31211,31221]" dest="call_argument [31433,31443]"/>
  <match src="pure: pure [3966,3970]" dest="pure: pure [3959,3963]"/>
  <match src="]: ] [26818,26819]" dest="]: ] [26959,26960]"/>
  <match src=",: , [21941,21942]" dest=",: , [22107,22108]"/>
  <match src="&amp;: &amp; [26828,26829]" dest="&amp;: &amp; [26969,26970]"/>
  <match src="primitive_type [23775,23782]" dest="primitive_type [24058,24065]"/>
  <match src="identifier: _value [20840,20846]" dest="identifier: _value [20935,20941]"/>
  <match src="member_expression [30226,30260]" dest="member_expression [30488,30522]"/>
  <match src="event_definition [8084,8156]" dest="event_definition [7897,7969]"/>
  <match src="primitive_type [11546,11553]" dest="primitive_type [11394,11401]"/>
  <match src="type_name [28612,28619]" dest="type_name [28806,28813]"/>
  <match src="type_name [18945,18952]" dest="type_name [19048,19055]"/>
  <match src="[: [ [11640,11641]" dest="[: [ [11488,11489]"/>
  <match src="solidity_version: 0.5.0 [5602,5607]" dest="solidity_version: 0.6.0 [5496,5501]"/>
  <match src="binary_expression [26694,26705]" dest="binary_expression [26835,26846]"/>
  <match src="}: } [23736,23737]" dest="}: } [24009,24010]"/>
  <match src="primitive_type [1936,1943]" dest="primitive_type [1947,1954]"/>
  <match src="call_argument [27783,27786]" dest="call_argument [27896,27899]"/>
  <match src="identifier: _attribute [12805,12815]" dest="identifier: _attribute [12673,12683]"/>
  <match src="type_name [18143,18150]" dest="type_name [18201,18208]"/>
  <match src="view: view [11973,11977]" dest="view: view [11807,11811]"/>
  <match src="type_name [19037,19044]" dest="type_name [19140,19147]"/>
  <match src="call_argument [30111,30117]" dest="call_argument [30373,30379]"/>
  <match src="call_argument [14146,14156]" dest="call_argument [14141,14151]"/>
  <match src="uint256: uint256 [29503,29510]" dest="uint256: uint256 [29757,29764]"/>
  <match src="type_name [979,986]" dest="type_name [1016,1023]"/>
  <match src="identifier: _index [11678,11684]" dest="identifier: _index [11526,11532]"/>
  <match src="type_name [18903,18910]" dest="type_name [19006,19013]"/>
  <match src="modifier_invocation [25906,25918]" dest="modifier_invocation [26195,26207]"/>
  <match src="address: address [28425,28432]" dest="address: address [28575,28582]"/>
  <match src="identifier: SetAttribute [9877,9889]" dest="identifier: SetAttribute [9682,9694]"/>
  <match src="identifier: _value [26441,26447]" dest="identifier: _value [26583,26589]"/>
  <match src="identifier: _syncer [11501,11508]" dest="identifier: _syncer [11349,11356]"/>
  <match src="uint256: uint256 [18476,18483]" dest="uint256: uint256 [18594,18601]"/>
  <match src="): ) [30001,30002]" dest="): ) [30263,30264]"/>
  <match src="uint256: uint256 [945,952]" dest="uint256: uint256 [982,989]"/>
  <match src="call_argument [33444,33451]" dest="call_argument [42152,42159]"/>
  <match src="): ) [14484,14485]" dest="): ) [14479,14480]"/>
  <match src="identifier: balanceOf [15806,15815]" dest="identifier: balanceOf [15797,15806]"/>
  <match src="==: == [27817,27819]" dest="==: == [27930,27932]"/>
  <match src="bool: bool [29102,29106]" dest="bool: bool [29348,29352]"/>
  <match src="identifier: this [14479,14483]" dest="identifier: this [14474,14478]"/>
  <match src="type_name [29102,29106]" dest="type_name [29348,29352]"/>
  <match src="payable: payable [14264,14271]" dest="payable: payable [14259,14266]"/>
  <match src="visibility [15799,15805]" dest="visibility [15790,15796]"/>
  <match src="visibility [22844,22852]" dest="visibility [23047,23055]"/>
  <match src="identifier: value [9938,9943]" dest="identifier: value [9743,9748]"/>
  <match src="uint256: uint256 [12445,12452]" dest="uint256: uint256 [12313,12320]"/>
  <match src="}: } [30300,30301]" dest="}: } [30562,30563]"/>
  <match src=",: , [21739,21740]" dest=",: , [21871,21872]"/>
  <match src="expression_statement [29677,29755]" dest="expression_statement [29931,30009]"/>
  <match src="identifier: b [2696,2697]" dest="identifier: b [2715,2716]"/>
  <match src="type_name [9719,9732]" dest="type_name [9549,9562]"/>
  <match src="identifier: resultBalance_ [29487,29501]" dest="identifier: resultBalance_ [29741,29755]"/>
  <match src="visibility [19447,19455]" dest="visibility [19550,19558]"/>
  <match src="string [23384,23404]" dest="string [23622,23642]"/>
  <match src="bytes32: bytes32 [8698,8705]" dest="bytes32: bytes32 [8532,8539]"/>
  <match src=",: , [17974,17975]" dest=",: , [18005,18006]"/>
  <match src="primitive_type [15851,15858]" dest="primitive_type [15840,15847]"/>
  <match src="expression_statement [11418,11456]" dest="expression_statement [11266,11304]"/>
  <match src="identifier: amount [7875,7881]" dest="identifier: amount [7688,7694]"/>
  <match src="identifier: owner_ [33092,33098]" dest="identifier: owner_ [41793,41799]"/>
  <match src=".: . [11187,11188]" dest=".: . [11035,11036]"/>
  <match src="&quot;: &quot; [31395,31396]" dest="&quot;: &quot; [31619,31620]"/>
  <match src="type_name [13005,13012]" dest="type_name [12925,12932]"/>
  <match src="): ) [10559,10560]" dest="): ) [10364,10365]"/>
  <match src="): ) [11770,11771]" dest="): ) [11618,11619]"/>
  <match src="): ) [29288,29289]" dest="): ) [29534,29535]"/>
  <match src="): ) [20067,20068]" dest="): ) [20166,20167]"/>
  <match src="identifier: IS_DEPOSIT_ADDRESS [26117,26135]" dest="identifier: IS_DEPOSIT_ADDRESS [26406,26424]"/>
  <match src="primitive_type [7848,7855]" dest="primitive_type [7661,7668]"/>
  <match src="uint256: uint256 [24437,24444]" dest="uint256: uint256 [24740,24747]"/>
  <match src="[: [ [23572,23573]" dest="[: [ [23845,23846]"/>
  <match src="event_paramater [20054,20067]" dest="event_paramater [20153,20166]"/>
  <match src="function: function [14358,14366]" dest="function: function [14353,14361]"/>
  <match src="identifier: _value [30275,30281]" dest="identifier: _value [30537,30543]"/>
  <match src=",: , [21726,21727]" dest=",: , [21858,21859]"/>
  <match src="identifier: sub [1462,1465]" dest="identifier: sub [1507,1510]"/>
  <match src="if: if [27807,27809]" dest="if: if [27920,27922]"/>
  <match src="{: { [13032,13033]" dest="{: { [12993,12994]"/>
  <match src="identifier: sender [22699,22705]" dest="identifier: sender [22868,22874]"/>
  <match src="(: ( [23375,23376]" dest="(: ( [23613,23614]"/>
  <match src="array_access [13071,13099]" dest="array_access [13032,13060]"/>
  <match src="call_argument [31395,31407]" dest="call_argument [31619,31631]"/>
  <match src="visibility [33703,33709]" dest="visibility [42402,42408]"/>
  <match src="call_argument [11447,11454]" dest="call_argument [11295,11302]"/>
  <match src="identifier: attributes [13461,13471]" dest="identifier: attributes [13422,13432]"/>
  <match src="==: == [14881,14883]" dest="==: == [14881,14883]"/>
  <match src="address: address [18903,18910]" dest="address: address [19006,19013]"/>
  <match src="block_statement [33468,33514]" dest="block_statement [42176,42222]"/>
  <match src="parameter [22822,22842]" dest="parameter [23019,23039]"/>
  <match src="parameter [27717,27726]" dest="parameter [27830,27839]"/>
  <match src="primitive_type [25483,25490]" dest="primitive_type [25738,25745]"/>
  <match src="}: } [30303,30304]" dest="}: } [30565,30566]"/>
  <match src="[: [ [12221,12222]" dest="[: [ [12089,12090]"/>
  <match src="event_paramater [8359,8382]" dest="event_paramater [8172,8195]"/>
  <match src="}: } [3363,3364]" dest="}: } [3390,3391]"/>
  <match src="uint144: uint144 [15904,15911]" dest="uint144: uint144 [15892,15899]"/>
  <match src="primitive_type [13271,13278]" dest="primitive_type [13232,13239]"/>
  <match src="): ) [18490,18491]" dest="): ) [18608,18609]"/>
  <match src="(: ( [12324,12325]" dest="(: ( [12192,12193]"/>
  <match src="identifier: _spender [28484,28492]" dest="identifier: _spender [28648,28656]"/>
  <match src="identifier: attributes [27756,27766]" dest="identifier: attributes [27869,27879]"/>
  <match src="identifier: keccak256 [10620,10629]" dest="identifier: keccak256 [10425,10434]"/>
  <match src="identifier: priorBalance [19129,19141]" dest="identifier: priorBalance [19232,19244]"/>
  <match src="): ) [18194,18195]" dest="): ) [18276,18277]"/>
  <match src="parameter [22796,22820]" dest="parameter [22984,23008]"/>
  <match src="identifier: allowance [22004,22013]" dest="identifier: allowance [22170,22179]"/>
  <match src="parameter [20940,20954]" dest="parameter [21054,21068]"/>
  <match src="identifier: _spender [23701,23709]" dest="identifier: _spender [23974,23982]"/>
  <match src="call_argument [18511,18516]" dest="call_argument [18629,18634]"/>
  <match src="parameter [20797,20801]" dest="parameter [20892,20896]"/>
  <match src="call_argument [29717,29753]" dest="call_argument [29971,30007]"/>
  <match src="identifier: AttributeData [9439,9452]" dest="identifier: AttributeData [9269,9282]"/>
  <match src="visibility [6044,6052]" dest="visibility [5857,5865]"/>
  <match src="emit: emit [30043,30047]" dest="emit: emit [30305,30309]"/>
  <match src="array_access [13461,13477]" dest="array_access [13422,13438]"/>
  <match src="}: } [33674,33675]" dest="}: } [42373,42374]"/>
  <match src="identifier: pendingOwner [15398,15410]" dest="identifier: pendingOwner [15403,15415]"/>
  <match src="contract_declaration [8617,15457]" dest="contract_declaration [8451,15462]"/>
  <match src="identifier: prior [26822,26827]" dest="identifier: prior [26963,26968]"/>
  <match src="[: [ [23566,23567]" dest="[: [ [23839,23840]"/>
  <match src="(: ( [26317,26318]" dest="(: ( [26459,26460]"/>
  <match src="): ) [11693,11694]" dest="): ) [11541,11542]"/>
  <match src="&gt;: &gt; [18513,18514]" dest="&gt;: &gt; [18631,18632]"/>
  <match src="uint256: uint256 [19431,19438]" dest="uint256: uint256 [19534,19541]"/>
  <match src="(: ( [12554,12555]" dest="(: ( [12422,12423]"/>
  <match src="): ) [13578,13579]" dest="): ) [13539,13540]"/>
  <match src=".: . [28853,28854]" dest=".: . [29055,29056]"/>
  <match src="return: return [28885,28891]" dest="return: return [29087,29093]"/>
  <match src="type_name [33903,33909]" dest="type_name [42602,42608]"/>
  <match src="struct_member [8674,8688]" dest="struct_member [8508,8522]"/>
  <match src="identifier: i [14016,14017]" dest="identifier: i [14011,14012]"/>
  <match src="identifier: _startIndex [13923,13934]" dest="identifier: _startIndex [13918,13929]"/>
  <match src="(: ( [5357,5358]" dest="(: ( [5257,5258]"/>
  <match src="identifier: _to [29998,30001]" dest="identifier: _to [30260,30263]"/>
  <match src="(: ( [27774,27775]" dest="(: ( [27887,27888]"/>
  <match src="call_argument [10647,10676]" dest="call_argument [10452,10481]"/>
  <match src="{: { [18843,18844]" dest="{: { [18946,18947]"/>
  <match src="call_expression [12155,12200]" dest="call_expression [12023,12068]"/>
  <match src="]: ] [12391,12392]" dest="]: ] [12259,12260]"/>
  <match src=".: . [10900,10901]" dest=".: . [10748,10749]"/>
  <match src="comment: // Writes are allowed only if the accessManager approves [10696,10752]" dest="comment: // Writes are allowed only if the accessManager approves [10501,10557]"/>
  <match src="{: { [30211,30212]" dest="{: { [30473,30474]"/>
  <match src="type_name [27717,27721]" dest="type_name [27830,27834]"/>
  <match src="call_argument [12268,12278]" dest="call_argument [12136,12146]"/>
  <match src="identifier: _value [29709,29715]" dest="identifier: _value [29963,29969]"/>
  <match src="address: address [29955,29962]" dest="address: address [30217,30224]"/>
  <match src="type_name [4720,4727]" dest="type_name [4654,4661]"/>
  <match src="(: ( [9427,9428]" dest="(: ( [9257,9258]"/>
  <match src="return_statement [21763,21775]" dest="return_statement [21895,21907]"/>
  <match src="type_name [9401,9454]" dest="type_name [9231,9284]"/>
  <match src="[: [ [10930,10931]" dest="[: [ [10778,10779]"/>
  <match src="internal: internal [1412,1420]" dest="internal: internal [1457,1465]"/>
  <match src="function: function [21598,21606]" dest="function: function [21727,21735]"/>
  <match src="(: ( [33902,33903]" dest="(: ( [42601,42602]"/>
  <match src="): ) [13278,13279]" dest="): ) [13239,13240]"/>
  <match src="primitive_type [13023,13030]" dest="primitive_type [12969,12976]"/>
  <match src="function: function [22542,22550]" dest="function: function [22708,22716]"/>
  <match src="state_variable_declaration [24437,24547]" dest="state_variable_declaration [24740,24846]"/>
  <match src="): ) [30245,30246]" dest="): ) [30507,30508]"/>
  <match src="identifier: timestamp [10999,11008]" dest="identifier: timestamp [10847,10856]"/>
  <match src="primitive_type [7486,7490]" dest="primitive_type [7299,7303]"/>
  <match src="[: [ [23333,23334]" dest="[: [ [23571,23572]"/>
  <match src="call_argument [29180,29183]" dest="call_argument [29426,29429]"/>
  <match src="identifier: hook [27931,27935]" dest="identifier: hook [28044,28048]"/>
  <match src="{: { [26949,26950]" dest="{: { [27090,27091]"/>
  <match src=",: , [30165,30166]" dest=",: , [30427,30428]"/>
  <match src="): ) [33466,33467]" dest="): ) [42174,42175]"/>
  <match src="identifier: data [13158,13162]" dest="identifier: data [13119,13123]"/>
  <match src="member_expression [12355,12365]" dest="member_expression [12223,12233]"/>
  <match src="expression_statement [29195,29219]" dest="expression_statement [29441,29465]"/>
  <match src="(: ( [14869,14870]" dest="(: ( [14869,14870]"/>
  <match src=",: , [29379,29380]" dest=",: , [29625,29626]"/>
  <match src="): ) [14048,14049]" dest="): ) [14043,14044]"/>
  <match src="identifier: require [31574,31581]" dest="identifier: require [31800,31807]"/>
  <match src="): ) [10064,10065]" dest="): ) [9869,9870]"/>
  <match src="return: return [30739,30745]" dest="return: return [30984,30990]"/>
  <match src="inheritance_specifier [30659,30671]" dest="inheritance_specifier [30906,30918]"/>
  <match src="uint256: uint256 [18407,18414]" dest="uint256: uint256 [18510,18517]"/>
  <match src="function_body [32996,33147]" dest="function_body [41697,41848]"/>
  <match src="primitive_type [5911,5918]" dest="primitive_type [5724,5731]"/>
  <match src="(: ( [23509,23510]" dest="(: ( [23781,23782]"/>
  <match src="member_expression [14870,14880]" dest="member_expression [14870,14880]"/>
  <match src="parameter [7452,7466]" dest="parameter [7265,7279]"/>
  <match src="state_variable_declaration [24785,24895]" dest="state_variable_declaration [25072,25174]"/>
  <match src=".: . [30246,30247]" dest=".: . [30508,30509]"/>
  <match src="state_mutability [11973,11977]" dest="state_mutability [11807,11811]"/>
  <match src=",: , [28860,28861]" dest=",: , [29062,29063]"/>
  <match src="internal: internal [3957,3965]" dest="internal: internal [3950,3958]"/>
  <match src="if_statement [22954,23097]" dest="if_statement [23157,23300]"/>
  <match src="identifier: _spender [21933,21941]" dest="identifier: _spender [22099,22107]"/>
  <match src="(: ( [5430,5431]" dest="(: ( [5330,5331]"/>
  <match src="primitive_type [29503,29510]" dest="primitive_type [29757,29764]"/>
  <match src="address: address [10516,10523]" dest="address: address [10321,10328]"/>
  <match src="identifier: to [27606,27608]" dest="identifier: to [27719,27721]"/>
  <match src="identifier: sender [31227,31233]" dest="identifier: sender [31449,31455]"/>
  <match src="[: [ [11839,11840]" dest="[: [ [11687,11688]"/>
  <match src="comment: // File: openzeppelin-solidity/contracts/math/SafeMath.sol [0,58]" dest="comment: // SPDX-License-Identifier: MIT [0,31]"/>
  <match src="type_name [6323,6330]" dest="type_name [6136,6143]"/>
  <match src=",: , [8583,8584]" dest=",: , [8402,8403]"/>
  <match src="): ) [18451,18452]" dest="): ) [18569,18570]"/>
  <match src="primitive_type [2651,2658]" dest="primitive_type [2670,2677]"/>
  <match src="primitive_type [24128,24135]" dest="primitive_type [24431,24438]"/>
  <match src="event: event [9993,9998]" dest="event: event [9798,9803]"/>
  <match src="parameter [3929,3955]" dest="parameter [3922,3948]"/>
  <match src="identifier: value [13123,13128]" dest="identifier: value [13084,13089]"/>
  <match src="identifier: pendingOwner [14884,14896]" dest="identifier: pendingOwner [14884,14896]"/>
  <match src="function_body [18235,18377]" dest="function_body [18317,18459]"/>
  <match src="&quot;: &quot; [29717,29718]" dest="&quot;: &quot; [29971,29972]"/>
  <match src="identifier: _from [29551,29556]" dest="identifier: _from [29805,29810]"/>
  <match src="(: ( [11344,11345]" dest="(: ( [11192,11193]"/>
  <match src=",: , [23280,23281]" dest=",: , [23503,23504]"/>
  <match src="call_argument [19146,19152]" dest="call_argument [19249,19255]"/>
  <match src="user_defined_type [32658,32674]" dest="user_defined_type [33303,33319]"/>
  <match src="identifier: abi [10630,10633]" dest="identifier: abi [10435,10438]"/>
  <match src="(: ( [23586,23587]" dest="(: ( [23859,23860]"/>
  <match src="]: ] [26982,26983]" dest="]: ] [27123,27124]"/>
  <match src="[: [ [19303,19304]" dest="[: [ [19406,19407]"/>
  <match src="): ) [29895,29896]" dest="): ) [30157,30158]"/>
  <match src="): ) [27310,27311]" dest="): ) [27437,27438]"/>
  <match src="parameter [6376,6380]" dest="parameter [6189,6193]"/>
  <match src="primitive_type [27669,27676]" dest="primitive_type [27782,27789]"/>
  <match src="(: ( [33640,33641]" dest="(: ( [42339,42340]"/>
  <match src="assignment_expression [19285,19345]" dest="assignment_expression [19388,19448]"/>
  <match src="primitive_type [22625,22629]" dest="primitive_type [22794,22798]"/>
  <match src="identifier: _value [30159,30165]" dest="identifier: _value [30421,30427]"/>
  <match src="user_defined_type [11096,11109]" dest="user_defined_type [10944,10957]"/>
  <match src="type_name [23807,23814]" dest="type_name [24108,24115]"/>
  <match src="&gt;=: &gt;= [1037,1039]" dest="&gt;=: &gt;= [1074,1076]"/>
  <match src="address: address [28936,28943]" dest="address: address [29150,29157]"/>
  <match src="expression_statement [18058,18092]" dest="expression_statement [18104,18138]"/>
  <match src="indexed: indexed [27598,27605]" dest="indexed: indexed [27711,27718]"/>
  <match src="type_name [11987,11994]" dest="type_name [11821,11828]"/>
  <match src="identifier: _attribute [13713,13723]" dest="identifier: _attribute [13684,13694]"/>
  <match src="primitive_type [13379,13386]" dest="primitive_type [13340,13347]"/>
  <match src="member_expression [13298,13332]" dest="member_expression [13259,13293]"/>
  <match src="primitive_type [10794,10801]" dest="primitive_type [10618,10625]"/>
  <match src="}: } [4825,4826]" dest="}: } [4759,4760]"/>
  <match src=".: . [14030,14031]" dest=".: . [14025,14026]"/>
  <match src="view: view [5897,5901]" dest="view: view [5710,5714]"/>
  <match src="identifier: a [17962,17963]" dest="identifier: a [17984,17985]"/>
  <match src="uint256: uint256 [19224,19231]" dest="uint256: uint256 [19327,19334]"/>
  <match src="identifier: getAttribute [12928,12940]" dest="identifier: getAttribute [12794,12806]"/>
  <match src=".: . [19141,19142]" dest=".: . [19244,19245]"/>
  <match src="type_name [9700,9735]" dest="type_name [9530,9565]"/>
  <match src="}: } [31629,31630]" dest="}: } [31855,31856]"/>
  <match src="primitive_type [12996,13003]" dest="primitive_type [12903,12910]"/>
  <match src="}: } [20888,20889]" dest="}: } [20983,20984]"/>
  <match src="parameter [18418,18451]" dest="parameter [18530,18563]"/>
  <match src="): ) [29183,29184]" dest="): ) [29429,29430]"/>
  <match src="function_definition [27258,27321]" dest="function_definition [27387,27448]"/>
  <match src="event_paramater [8384,8397]" dest="event_paramater [8197,8210]"/>
  <match src="call_expression [22642,22706]" dest="call_expression [22811,22875]"/>
  <match src="identifier: _from [28477,28482]" dest="identifier: _from [28641,28646]"/>
  <match src="primitive_type [3256,3263]" dest="primitive_type [3283,3290]"/>
  <match src="array_access [13628,13644]" dest="array_access [13589,13605]"/>
  <match src="identifier: amount [27626,27632]" dest="identifier: amount [27739,27745]"/>
  <match src="identifier: _spender [22786,22794]" dest="identifier: _spender [22965,22973]"/>
  <match src=".: . [10998,10999]" dest=".: . [10846,10847]"/>
  <match src="(: ( [28136,28137]" dest="(: ( [28249,28250]"/>
  <match src="primitive_type [33903,33909]" dest="primitive_type [42602,42608]"/>
  <match src="number_literal: 0xff00000000000000000000000000000000000000000000000000000000000000 [24480,24546]" dest="number_literal: 0xff00000000000000000000000000000000000000000000000000000000000000 [24779,24845]"/>
  <match src="inheritance_specifier [24022,24034]" dest="inheritance_specifier [24325,24337]"/>
  <match src="): ) [27793,27794]" dest="): ) [27906,27907]"/>
  <match src="string [4791,4817]" dest="string [4725,4751]"/>
  <match src="array_access [11629,11652]" dest="array_access [11477,11500]"/>
  <match src="(: ( [11446,11447]" dest="(: ( [11294,11295]"/>
  <match src="identifier: require [18503,18510]" dest="identifier: require [18621,18628]"/>
  <match src="user_defined_type [13797,13810]" dest="user_defined_type [13792,13805]"/>
  <match src="identifier: owner_ [15977,15983]" dest="identifier: owner_ [15965,15971]"/>
  <match src="parameter [11546,11564]" dest="parameter [11394,11412]"/>
  <match src="binary_expression [14870,14896]" dest="binary_expression [14870,14896]"/>
  <match src="identifier: _amount [33444,33451]" dest="identifier: _amount [42152,42159]"/>
  <match src="=: = [11627,11628]" dest="=: = [11475,11476]"/>
  <match src="}: } [2763,2764]" dest="}: } [2782,2783]"/>
  <match src=",: , [12329,12330]" dest=",: , [12197,12198]"/>
  <match src="user_defined_type [12377,12390]" dest="user_defined_type [12245,12258]"/>
  <match src="type_name [17965,17972]" dest="type_name [17996,18003]"/>
  <match src="member_expression [11240,11273]" dest="member_expression [11088,11121]"/>
  <match src="identifier: value [8149,8154]" dest="identifier: value [7962,7967]"/>
  <match src="binary_expression [12493,12504]" dest="binary_expression [12361,12372]"/>
  <match src="internal: internal [4731,4739]" dest="internal: internal [4665,4673]"/>
  <match src="}: } [33855,33856]" dest="}: } [42554,42555]"/>
  <match src="%: % [5500,5501]" dest="%: % [5400,5401]"/>
  <match src=",: , [27464,27465]" dest=",: , [27601,27602]"/>
  <match src="primitive_type [1863,1870]" dest="primitive_type [1874,1881]"/>
  <match src="memory: memory [13057,13063]" dest="memory: memory [13018,13024]"/>
  <match src="primitive_type [27767,27774]" dest="primitive_type [27880,27887]"/>
  <match src="identifier: _value [26182,26188]" dest="identifier: _value [35121,35127]"/>
  <match src="(: ( [29930,29931]" dest="(: ( [30192,30193]"/>
  <match src="identifier: data [13064,13068]" dest="identifier: data [13025,13029]"/>
  <match src="uint256: uint256 [32720,32727]" dest="uint256: uint256 [41419,41426]"/>
  <match src="primitive_type [22927,22934]" dest="primitive_type [23130,23137]"/>
  <match src="number_literal: 8 [33666,33667]" dest="number_literal: 8 [42365,42366]"/>
  <match src="parameter [11566,11580]" dest="parameter [11414,11428]"/>
  <match src="): ) [31352,31353]" dest="): ) [31576,31577]"/>
  <match src="=: = [4116,4117]" dest="=: = [4042,4043]"/>
  <match src="return: return [21763,21769]" dest="return: return [21895,21901]"/>
  <match src="}: } [12591,12592]" dest="}: } [12459,12460]"/>
  <match src=",: , [19320,19321]" dest=",: , [19423,19424]"/>
  <match src="identifier: _value [8593,8599]" dest="identifier: _value [8421,8427]"/>
  <match src="type_name [9793,9800]" dest="type_name [9613,9620]"/>
  <match src="parameter [23458,23474]" dest="parameter [23715,23731]"/>
  <match src="function_body [17854,17935]" dest="function_body [17864,17945]"/>
  <match src="}: } [26778,26779]" dest="}: } [26919,26920]"/>
  <match src="identifier: length [13889,13895]" dest="identifier: length [13884,13890]"/>
  <match src="identifier: to [27713,27715]" dest="identifier: to [27826,27828]"/>
  <match src="]: ] [14184,14185]" dest="]: ] [14179,14180]"/>
  <match src="primitive_type [22586,22590]" dest="primitive_type [22752,22759]"/>
  <match src="): ) [26673,26674]" dest="): ) [26814,26815]"/>
  <match src="return: return [2619,2625]" dest="return: return [2638,2644]"/>
  <match src="): ) [6380,6381]" dest="): ) [6193,6194]"/>
  <match src="): ) [31233,31234]" dest="): ) [31455,31456]"/>
  <match src="primitive_type [23789,23796]" dest="primitive_type [24081,24088]"/>
  <match src="identifier: attribute [10112,10121]" dest="identifier: attribute [9917,9926]"/>
  <match src="function_definition [14358,14532]" dest="function_definition [14353,14527]"/>
  <match src="=: = [15396,15397]" dest="=: = [15401,15402]"/>
  <match src="array_access [13831,13854]" dest="array_access [13826,13849]"/>
  <match src="type_name [18989,18996]" dest="type_name [19092,19099]"/>
  <match src="member_expression [14320,14341]" dest="member_expression [14315,14336]"/>
  <match src="contract_body [27507,30304]" dest="contract_body [27622,30566]"/>
  <match src="event_definition [19991,20069]" dest="event_definition [20090,20168]"/>
  <match src="visibility [29461,29469]" dest="visibility [29707,29715]"/>
  <match src="type_name [9890,9897]" dest="type_name [9695,9702]"/>
  <match src="(: ( [17897,17898]" dest="(: ( [17907,17908]"/>
  <match src="expression_statement [12211,12297]" dest="expression_statement [12079,12165]"/>
  <match src="address: address [10780,10787]" dest="address: address [10595,10602]"/>
  <match src="function_definition [3232,3364]" dest="function_definition [3259,3391]"/>
  <match src="primitive_type [5431,5438]" dest="primitive_type [5331,5338]"/>
  <match src="address: address [33364,33371]" dest="address: address [42072,42079]"/>
  <match src="identifier: oldValue [23058,23066]" dest="identifier: oldValue [23261,23269]"/>
  <match src="(: ( [26440,26441]" dest="(: ( [26582,26583]"/>
  <match src="call_argument [21068,21080]" dest="call_argument [21197,21209]"/>
  <match src="return_statement [12781,12828]" dest="return_statement [12649,12696]"/>
  <match src="type_name [11612,11619]" dest="type_name [11460,11467]"/>
  <match src="identifier: to [27976,27978]" dest="identifier: to [28089,28091]"/>
  <match src="identifier: initalized [33016,33026]" dest="identifier: initalized [41717,41727]"/>
  <match src="&gt;: &gt; [22975,22976]" dest="&gt;: &gt; [23178,23179]"/>
  <match src="using: using [18850,18855]" dest="using: using [18953,18958]"/>
  <match src="member_expression [12788,12822]" dest="member_expression [12656,12690]"/>
  <match src="!=: != [26701,26703]" dest="!=: != [26842,26844]"/>
  <match src="identifier: _value [23290,23296]" dest="identifier: _value [23522,23528]"/>
  <match src="identifier: _value [28867,28873]" dest="identifier: _value [29069,29075]"/>
  <match src="=: = [12240,12241]" dest="=: = [12108,12109]"/>
  <match src="): ) [11386,11387]" dest="): ) [11234,11235]"/>
  <match src="identifier: _from [28164,28169]" dest="identifier: _from [28277,28282]"/>
  <match src="call_argument [33028,33048]" dest="call_argument [41729,41749]"/>
  <match src="interface: interface [8492,8501]" dest="interface: interface [8292,8301]"/>
  <match src="parameter [19258,19272]" dest="parameter [19361,19375]"/>
  <match src="}: } [2041,2042]" dest="}: } [2052,2053]"/>
  <match src="identifier: target [14115,14121]" dest="identifier: target [14110,14116]"/>
  <match src="uint256: uint256 [13023,13030]" dest="uint256: uint256 [12969,12976]"/>
  <match src="identifier: a [18111,18112]" dest="identifier: a [18157,18158]"/>
  <match src="if_statement [26391,27116]" dest="if_statement [26533,27257]"/>
  <match src="identifier: _value [28790,28796]" dest="identifier: _value [28992,28998]"/>
  <match src="=: = [31873,31874]" dest="=: = [32102,32103]"/>
  <match src="): ) [26452,26453]" dest="): ) [26594,26595]"/>
  <match src=",: , [3325,3326]" dest=",: , [3352,3353]"/>
  <match src="(: ( [29550,29551]" dest="(: ( [29804,29805]"/>
  <match src=",: , [21090,21091]" dest=",: , [21219,21220]"/>
  <match src=",: , [29209,29210]" dest=",: , [29455,29456]"/>
  <match src="primitive_type [30946,30953]" dest="primitive_type [31172,31179]"/>
  <match src="return_type_definition [22616,22630]" dest="return_type_definition [22785,22799]"/>
  <match src="function_definition [15073,15177]" dest="function_definition [15076,15180]"/>
  <match src="function: function [19396,19404]" dest="function: function [19499,19507]"/>
  <match src="assignment_expression [28010,28044]" dest="assignment_expression [28123,28157]"/>
  <match src="indexed: indexed [30954,30961]" dest="indexed: indexed [31180,31187]"/>
  <match src="identifier: newValue [23202,23210]" dest="identifier: newValue [23406,23414]"/>
  <match src="): ) [29753,29754]" dest="): ) [30007,30008]"/>
  <match src="(: ( [11488,11489]" dest="(: ( [11336,11337]"/>
  <match src="internal: internal [29461,29469]" dest="internal: internal [29707,29715]"/>
  <match src="{: { [29861,29862]" dest="{: { [30123,30124]"/>
  <match src="assignment_expression [31155,31174]" dest="assignment_expression [31377,31396]"/>
  <match src="identifier: _spender [22576,22584]" dest="identifier: _spender [22742,22750]"/>
  <match src="&quot;: &quot; [12265,12266]" dest="&quot;: &quot; [12133,12134]"/>
  <match src="indexed: indexed [9898,9905]" dest="indexed: indexed [9703,9710]"/>
  <match src=",: , [30109,30110]" dest=",: , [30371,30372]"/>
  <match src="function: function [13515,13523]" dest="function: function [13476,13484]"/>
  <match src="&quot;: &quot; [24120,24121]" dest="&quot;: &quot; [24423,24424]"/>
  <match src="parenthesized_expression [27755,27796]" dest="parenthesized_expression [27868,27909]"/>
  <match src="variable_declaration_statement [11612,11660]" dest="variable_declaration_statement [11460,11508]"/>
  <match src="number_literal: 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 [25060,25126]" dest="number_literal: 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 [25327,25393]"/>
  <match src="primitive_type [13725,13732]" dest="primitive_type [13705,13712]"/>
  <match src="assignment_expression [33060,33081]" dest="assignment_expression [41761,41782]"/>
  <match src="type_name [12941,12948]" dest="type_name [12807,12814]"/>
  <match src=",: , [21034,21035]" dest=",: , [21163,21164]"/>
  <match src="call_argument [14662,14681]" dest="call_argument [14660,14679]"/>
  <match src="visibility [3267,3275]" dest="visibility [3294,3302]"/>
  <match src="{: { [29526,29527]" dest="{: { [29780,29781]"/>
  <match src="type_name [10038,10045]" dest="type_name [9843,9850]"/>
  <match src="{: { [26785,26786]" dest="{: { [26926,26927]"/>
  <match src="type_name [13379,13386]" dest="type_name [13340,13347]"/>
  <match src="identifier: length [11620,11626]" dest="identifier: length [11468,11474]"/>
  <match src="identifier: add [33440,33443]" dest="identifier: add [42148,42151]"/>
  <match src="(: ( [12763,12764]" dest="(: ( [12631,12632]"/>
  <match src="(: ( [18475,18476]" dest="(: ( [18593,18594]"/>
  <match src="[: [ [26736,26737]" dest="[: [ [26877,26878]"/>
  <match src="): ) [20779,20780]" dest="): ) [20874,20875]"/>
  <match src="function: function [29808,29816]" dest="function: function [30062,30070]"/>
  <match src="=: = [19127,19128]" dest="=: = [19230,19231]"/>
  <match src="function_definition [18383,18571]" dest="function_definition [18467,18689]"/>
  <match src="): ) [33880,33881]" dest="): ) [42579,42580]"/>
  <match src="indexed: indexed [20014,20021]" dest="indexed: indexed [20113,20120]"/>
  <match src="uint256: uint256 [25017,25024]" dest="uint256: uint256 [25288,25295]"/>
  <match src="(: ( [13600,13601]" dest="(: ( [13561,13562]"/>
  <match src="parameter [25863,25881]" dest="parameter [26137,26155]"/>
  <match src="identifier: c [4230,4231]" dest="identifier: c [4156,4157]"/>
  <match src="call_argument [26357,26372]" dest="call_argument [26499,26514]"/>
  <match src="return: return [18273,18279]" dest="return: return [18355,18361]"/>
  <match src="{: { [31144,31145]" dest="{: { [31366,31367]"/>
  <match src="identifier: ACCOUNT_KYC [26752,26763]" dest="identifier: ACCOUNT_KYC [26893,26904]"/>
  <match src="}: } [28903,28904]" dest="}: } [29105,29106]"/>
  <match src="type_name [31813,31820]" dest="type_name [32042,32049]"/>
  <match src="identifier: RegistryClone [10213,10226]" dest="identifier: RegistryClone [10018,10031]"/>
  <match src="(: ( [30812,30813]" dest="(: ( [31057,31058]"/>
  <match src="(: ( [30789,30790]" dest="(: ( [31034,31035]"/>
  <match src="memory: memory [1892,1898]" dest="memory: memory [1903,1909]"/>
  <match src="(: ( [10579,10580]" dest="(: ( [10384,10385]"/>
  <match src="identifier: flags [28128,28133]" dest="identifier: flags [28241,28246]"/>
  <match src="identifier: _attribute [12561,12571]" dest="identifier: _attribute [12429,12439]"/>
  <match src="): ) [28626,28627]" dest="): ) [28826,28827]"/>
  <match src="): ) [32142,32143]" dest="): ) [32373,32374]"/>
  <match src="primitive_type [28381,28388]" dest="primitive_type [28504,28511]"/>
  <match src="uint256: uint256 [23476,23483]" dest="uint256: uint256 [23742,23749]"/>
  <match src="string: string [3929,3935]" dest="string: string [3922,3928]"/>
  <match src="primitive_type [4106,4113]" dest="primitive_type [4032,4039]"/>
  <match src="unary_expression [33015,33026]" dest="unary_expression [41716,41727]"/>
  <match src=",: , [33026,33027]" dest=",: , [41727,41728]"/>
  <match src=",: , [9943,9944]" dest=",: , [9748,9749]"/>
  <match src="call_argument [30167,30189]" dest="call_argument [30429,30451]"/>
  <match src="return_statement [13291,13333]" dest="return_statement [13252,13294]"/>
  <match src="identifier: Approval [19997,20005]" dest="identifier: Approval [20096,20104]"/>
  <match src="(: ( [18065,18066]" dest="(: ( [18111,18112]"/>
  <match src="identifier: owner_ [31155,31161]" dest="identifier: owner_ [31377,31383]"/>
  <match src="parameter [979,986]" dest="parameter [1016,1023]"/>
  <match src="variable_declaration_statement [29954,30003]" dest="variable_declaration_statement [30216,30265]"/>
  <match src="): ) [986,987]" dest="): ) [1023,1024]"/>
  <match src="expression_statement [22642,22707]" dest="expression_statement [22811,22876]"/>
  <match src="identifier: a [2663,2664]" dest="identifier: a [2682,2683]"/>
  <match src="type_name [28190,28197]" dest="type_name [28303,28310]"/>
  <match src="if_statement [26437,26625]" dest="if_statement [26579,26766]"/>
  <match src="identifier: underflowMessage [18074,18090]" dest="identifier: underflowMessage [18120,18136]"/>
  <match src="call_expression [4067,4095]" dest="call_expression [3993,4021]"/>
  <match src="): ) [33451,33452]" dest="): ) [42159,42160]"/>
  <match src="&gt;&gt;: &gt;&gt; [27788,27790]" dest="&gt;&gt;: &gt;&gt; [27901,27903]"/>
  <match src="call_expression [18503,18538]" dest="call_expression [18621,18656]"/>
  <match src="number_literal: 0 [18255,18256]" dest="number_literal: 0 [18337,18338]"/>
  <match src="variable_declaration_statement [11096,11154]" dest="variable_declaration_statement [10944,11002]"/>
  <match src="expression_statement [26968,27007]" dest="expression_statement [27109,27148]"/>
  <match src="visibility [12743,12749]" dest="visibility [12611,12617]"/>
  <match src=",: , [28492,28493]" dest=",: , [28656,28657]"/>
  <match src="identifier: to [29133,29135]" dest="identifier: to [29379,29381]"/>
  <match src=",: , [13012,13013]" dest=",: , [12932,12933]"/>
  <match src="(: ( [13704,13705]" dest="(: ( [13665,13666]"/>
  <match src="!=: != [28040,28042]" dest="!=: != [28153,28155]"/>
  <match src="identifier: sub [29705,29708]" dest="identifier: sub [29959,29962]"/>
  <match src="type_name [12764,12768]" dest="type_name [12632,12636]"/>
  <match src="identifier: who [26310,26313]" dest="identifier: who [26452,26455]"/>
  <match src="type_name [28769,28776]" dest="type_name [28971,28978]"/>
  <match src="call_argument [14141,14144]" dest="call_argument [14136,14139]"/>
  <match src="visibility [19240,19248]" dest="visibility [19343,19351]"/>
  <match src=",: , [20838,20839]" dest=",: , [20933,20934]"/>
  <match src="type_name [22586,22590]" dest="type_name [22752,22759]"/>
  <match src="function_body [33208,33243]" dest="function_body [41916,41951]"/>
  <match src="identifier: _value [26936,26942]" dest="identifier: _value [27077,27083]"/>
  <match src="identifier: transferOwnership [31795,31812]" dest="identifier: transferOwnership [32024,32041]"/>
  <match src="identifier: OwnershipTransferred [30875,30895]" dest="identifier: OwnershipTransferred [31120,31140]"/>
  <match src="comment: /**      * @dev Increase the amount of tokens that an owner allowed to a spender.      *      * approve should be called when allowed[_spender] == 0. To increment      * allowed value is better to use this function to avoid 2 calls (and wait until      * the first transaction is mined)      * From MonolithDAO Token.sol      * @param _spender The address which will spend the funds.      * @param _addedValue The amount of tokens to increase the allowance by.      */ [21115,21592]" dest="comment: /**      * @dev Increase the amount of tokens that an owner allowed to a spender.      *      * approve should be called when allowed[_spender] == 0. To increment      * allowed value is better to use this function to avoid 2 calls (and wait until      * the first transaction is mined)      * From MonolithDAO Token.sol      * @param _spender The address which will spend the funds.      * @param _addedValue The amount of tokens to increase the allowance by.      */ [21244,21721]"/>
  <match src="identifier: to [29207,29209]" dest="identifier: to [29453,29455]"/>
  <match src="variable_declaration_tuple [29954,29977]" dest="variable_declaration_tuple [30216,30239]"/>
  <match src="if_statement [33424,33585]" dest="if_statement [42132,42284]"/>
  <match src="expression_statement [17865,17880]" dest="expression_statement [17875,17890]"/>
  <match src="identifier: newValue [23002,23010]" dest="identifier: newValue [23205,23213]"/>
  <match src="identifier: _to [28862,28865]" dest="identifier: _to [29064,29067]"/>
  <match src="call_argument [28529,28534]" dest="call_argument [28693,28698]"/>
  <match src="constructor: constructor [31123,31134]" dest="constructor: constructor [31345,31356]"/>
  <match src="function_body [21682,21782]" dest="function_body [21814,21914]"/>
  <match src="indexed: indexed [27618,27625]" dest="indexed: indexed [27731,27738]"/>
  <match src="primitive_type [23264,23271]" dest="primitive_type [23487,23494]"/>
  <match src="function_definition [28351,28556]" dest="function_definition [28464,28720]"/>
  <match src="visibility [2328,2336]" dest="visibility [2347,2355]"/>
  <match src="address: address [14256,14263]" dest="address: address [14251,14258]"/>
  <match src="identifier: _spender [21082,21090]" dest="identifier: _spender [21211,21219]"/>
  <match src="identifier: _attribute [11874,11884]" dest="identifier: _attribute [11722,11732]"/>
  <match src="indexed: indexed [8129,8136]" dest="indexed: indexed [7942,7949]"/>
  <match src="identifier: _attribute [11280,11290]" dest="identifier: _attribute [11128,11138]"/>
  <match src="type_name [23510,23517]" dest="type_name [23782,23789]"/>
  <match src="): ) [28796,28797]" dest="): ) [28998,28999]"/>
  <match src="function: function [4696,4704]" dest="function: function [4630,4638]"/>
  <match src=",: , [17782,17783]" dest=",: , [17777,17778]"/>
  <match src="): ) [23404,23405]" dest="): ) [23642,23643]"/>
  <match src="identifier: length [12038,12044]" dest="identifier: length [11872,11878]"/>
  <match src="--: -- [13919,13921]" dest="--: -- [13913,13915]"/>
  <match src="string_literal [19154,19172]" dest="string_literal [19257,19275]"/>
  <match src="returns: returns [5422,5429]" dest="returns: returns [5322,5329]"/>
  <match src="type_name [25883,25890]" dest="type_name [26166,26173]"/>
  <match src="identifier: Approval [8327,8335]" dest="identifier: Approval [8140,8148]"/>
  <match src="identifier: oldManager [10026,10036]" dest="identifier: oldManager [9831,9841]"/>
  <match src="identifier: spender [20045,20052]" dest="identifier: spender [20144,20151]"/>
  <match src="primitive_type [18219,18226]" dest="primitive_type [18301,18308]"/>
  <match src="primitive_type [19224,19231]" dest="primitive_type [19327,19334]"/>
  <match src="type_name [25863,25870]" dest="type_name [26137,26144]"/>
  <match src="identifier: _spender [22907,22915]" dest="identifier: _spender [23110,23118]"/>
  <match src="type_name [9960,9967]" dest="type_name [9765,9772]"/>
  <match src="bytes32: bytes32 [10186,10193]" dest="bytes32: bytes32 [9991,9998]"/>
  <match src="call_argument [20840,20846]" dest="call_argument [20935,20941]"/>
  <match src="parameter [12121,12135]" dest="parameter [11983,11997]"/>
  <match src="(: ( [28380,28381]" dest="(: ( [28493,28494]"/>
  <match src="{: { [31563,31564]" dest="{: { [31789,31790]"/>
  <match src="public: public [12975,12981]" dest="public: public [12850,12856]"/>
  <match src="(: ( [15830,15831]" dest="(: ( [15820,15821]"/>
  <match src="is: is [27455,27457]" dest="is: is [27578,27580]"/>
  <match src="primitive_type [33803,33809]" dest="primitive_type [42502,42508]"/>
  <match src="primitive_type [14069,14076]" dest="primitive_type [14064,14071]"/>
  <match src="string_literal [1472,1504]" dest="string_literal [1517,1549]"/>
  <match src="primitive_type [15904,15911]" dest="primitive_type [15892,15899]"/>
  <match src="(: ( [32009,32010]" dest="(: ( [32240,32241]"/>
  <match src=",: , [23382,23383]" dest=",: , [23620,23621]"/>
  <match src="identifier: c [2033,2034]" dest="identifier: c [2044,2045]"/>
  <match src="identifier: from [28234,28238]" dest="identifier: from [28347,28351]"/>
  <match src="parameter [13746,13775]" dest="parameter [13735,13764]"/>
  <match src="indexed: indexed [30914,30921]" dest="indexed: indexed [31149,31156]"/>
  <match src="identifier: a [2314,2315]" dest="identifier: a [2333,2334]"/>
  <match src="{: { [28452,28453]" dest="{: { [28616,28617]"/>
  <match src="visibility [7883,7891]" dest="visibility [7696,7704]"/>
  <match src="*: * [2665,2666]" dest="*: * [2684,2685]"/>
  <match src="identifier: sender [28854,28860]" dest="identifier: sender [29056,29062]"/>
  <match src="else: else [26535,26539]" dest="else: else [26677,26681]"/>
  <match src="type_name [18872,18879]" dest="type_name [18975,18982]"/>
  <match src="visibility [956,964]" dest="visibility [993,1001]"/>
  <match src="member_expression [19294,19313]" dest="member_expression [19397,19416]"/>
  <match src="identifier: _to [30057,30060]" dest="identifier: _to [30319,30322]"/>
  <match src="array_access [19356,19371]" dest="array_access [19459,19474]"/>
  <match src="{: { [25450,25451]" dest="{: { [25705,25706]"/>
  <match src=",: , [7846,7847]" dest=",: , [7659,7660]"/>
  <match src="): ) [31135,31136]" dest="): ) [31357,31358]"/>
  <match src="parameter [22568,22584]" dest="parameter [22734,22750]"/>
  <match src="variable_declaration_statement [29125,29136]" dest="variable_declaration_statement [29371,29382]"/>
  <match src="parameter [4709,4718]" dest="parameter [4643,4652]"/>
  <match src="identifier: resultSupply_ [29511,29524]" dest="identifier: resultSupply_ [29765,29778]"/>
  <match src="type_name [19224,19231]" dest="type_name [19327,19334]"/>
  <match src=",: , [28694,28695]" dest=",: , [28894,28895]"/>
  <match src="{: { [11407,11408]" dest="{: { [11255,11256]"/>
  <match src="array_access [14158,14173]" dest="array_access [14153,14168]"/>
  <match src="uint256: uint256 [2651,2658]" dest="uint256: uint256 [2670,2677]"/>
  <match src="call_argument [14511,14514]" dest="call_argument [14506,14509]"/>
  <match src="variable_declaration_statement [12445,12476]" dest="variable_declaration_statement [12313,12344]"/>
  <match src="type_name [1401,1408]" dest="type_name [1446,1453]"/>
  <match src="identifier: msg [12188,12191]" dest="identifier: msg [12056,12059]"/>
  <match src="identifier: _attribute [11489,11499]" dest="identifier: _attribute [11337,11347]"/>
  <match src="address: address [15851,15858]" dest="address: address [15840,15847]"/>
  <match src="return_type_definition [18022,18046]" dest="return_type_definition [18068,18092]"/>
  <match src="call_argument [14158,14191]" dest="call_argument [14153,14186]"/>
  <match src="function_body [28109,28343]" dest="function_body [28222,28456]"/>
  <match src="==: == [25480,25482]" dest="==: == [25735,25737]"/>
  <match src="--: -- [12499,12501]" dest="--: -- [12366,12368]"/>
  <match src="identifier: _attribute [12731,12741]" dest="identifier: _attribute [12599,12609]"/>
  <match src="{: { [11601,11602]" dest="{: { [11449,11450]"/>
  <match src="==: == [31593,31595]" dest="==: == [31819,31821]"/>
  <match src="identifier: onlyPendingOwner [32019,32035]" dest="identifier: onlyPendingOwner [32250,32266]"/>
  <match src="&quot;: &quot; [24103,24104]" dest="&quot;: &quot; [24406,24407]"/>
  <match src=".: . [31167,31168]" dest=".: . [31389,31390]"/>
  <match src="identifier: Approval [21059,21067]" dest="identifier: Approval [21188,21196]"/>
  <match src="function_body [31848,31891]" dest="function_body [32077,32120]"/>
  <match src="visibility [21660,21666]" dest="visibility [21792,21798]"/>
  <match src="return_statement [3310,3357]" dest="return_statement [3337,3384]"/>
  <match src="}: } [5510,5511]" dest="}: } [5410,5411]"/>
  <match src="identifier: getAttributeValue [13198,13215]" dest="identifier: getAttributeValue [13159,13176]"/>
  <match src="/: / [18343,18344]" dest="/: / [18425,18426]"/>
  <match src="identifier: _value [12343,12349]" dest="identifier: _value [12211,12217]"/>
  <match src="function_body [19274,19388]" dest="function_body [19377,19491]"/>
  <match src="{: { [26917,26918]" dest="{: { [27058,27059]"/>
  <match src="=: = [30141,30142]" dest="=: = [30403,30404]"/>
  <match src="state_mutability [965,969]" dest="state_mutability [1002,1006]"/>
  <match src="identifier: timestamp [8758,8767]" dest="identifier: timestamp [8592,8601]"/>
  <match src="type_name [30813,30820]" dest="type_name [31058,31065]"/>
  <match src="parameter [3980,3987]" dest="parameter [3973,3980]"/>
  <match src="(: ( [33879,33880]" dest="(: ( [42578,42579]"/>
  <match src="identifier: _attribute [11794,11804]" dest="identifier: _attribute [11642,11652]"/>
  <match src="identifier: _tokenHolder [22014,22026]" dest="identifier: _tokenHolder [22180,22192]"/>
  <match src="identifier: AttributeData [10951,10964]" dest="identifier: AttributeData [10799,10812]"/>
  <match src="constant: constant [24909,24917]" dest="constant: constant [25188,25196]"/>
  <match src="type_name [8141,8148]" dest="type_name [7954,7961]"/>
  <match src=",: , [14681,14682]" dest=",: , [14679,14680]"/>
  <match src="!=: != [28239,28241]" dest="!=: != [28352,28354]"/>
  <match src="identifier: subscribers [11418,11429]" dest="identifier: subscribers [11266,11277]"/>
  <match src="identifier: _spender [28433,28441]" dest="identifier: _spender [28583,28591]"/>
  <match src="identifier: _attribute [12176,12186]" dest="identifier: _attribute [12044,12054]"/>
  <match src="type_name [7452,7459]" dest="type_name [7265,7272]"/>
  <match src="primitive_type [8698,8705]" dest="primitive_type [8532,8539]"/>
  <match src="identifier: from [8115,8119]" dest="identifier: from [7928,7932]"/>
  <match src="primitive_type [1401,1408]" dest="primitive_type [1446,1453]"/>
  <match src="call_argument [33489,33492]" dest="call_argument [42197,42200]"/>
  <match src="identifier: balance [14334,14341]" dest="identifier: balance [14329,14336]"/>
  <match src="type_name [11566,11573]" dest="type_name [11414,11421]"/>
  <match src="identifier: overflowMessage [18179,18194]" dest="identifier: overflowMessage [18255,18270]"/>
  <match src="parameter [3918,3927]" dest="parameter [3911,3920]"/>
  <match src="identifier: REGISTERED_CONTRACT [26896,26915]" dest="identifier: REGISTERED_CONTRACT [27037,27056]"/>
  <match src="identifier: mul [2302,2305]" dest="identifier: mul [2321,2324]"/>
  <match src="=: = [15159,15160]" dest="=: = [15162,15163]"/>
  <match src="function_body [29861,30301]" dest="function_body [30123,30563]"/>
  <match src="identifier: index [11248,11253]" dest="identifier: index [11096,11101]"/>
  <match src="uint256: uint256 [17773,17780]" dest="uint256: uint256 [17768,17775]"/>
  <match src="]: ] [23581,23582]" dest="]: ] [23854,23855]"/>
  <match src="string_literal [24166,24184]" dest="string_literal [24469,24487]"/>
  <match src="expression_statement [23002,23015]" dest="expression_statement [23205,23218]"/>
  <match src="): ) [12135,12136]" dest="): ) [12003,12004]"/>
  <match src="uint256: uint256 [20054,20061]" dest="uint256: uint256 [20153,20160]"/>
  <match src="type_name [7848,7855]" dest="type_name [7661,7668]"/>
  <match src="call_argument [1466,1467]" dest="call_argument [1511,1512]"/>
  <match src="event_paramater [9911,9928]" dest="event_paramater [9716,9733]"/>
  <match src="state_variable_declaration [25017,25127]" dest="state_variable_declaration [25288,25394]"/>
  <match src="parameter [13601,13608]" dest="parameter [13562,13569]"/>
  <match src="]: ] [27061,27062]" dest="]: ] [27202,27203]"/>
  <match src="pragma_directive [62,85]" dest="pragma_directive [91,114]"/>
  <match src="public: public [15118,15124]" dest="public: public [15121,15127]"/>
  <match src="identifier: owner_ [32154,32160]" dest="identifier: owner_ [32385,32391]"/>
  <match src="call_argument [28691,28694]" dest="call_argument [28891,28894]"/>
  <match src="[: [ [11793,11794]" dest="[: [ [11641,11642]"/>
  <match src="array_access [11816,11851]" dest="array_access [11664,11699]"/>
  <match src="): ) [30117,30118]" dest="): ) [30379,30380]"/>
  <match src="identifier: _value [29381,29387]" dest="identifier: _value [29627,29633]"/>
  <match src="=: = [15434,15435]" dest="=: = [15439,15440]"/>
  <match src="user_defined_type [11365,11378]" dest="user_defined_type [11213,11226]"/>
  <match src="identifier: StartSubscription [11471,11488]" dest="identifier: StartSubscription [11319,11336]"/>
  <match src="binary_expression [26395,26420]" dest="binary_expression [26537,26562]"/>
  <match src="block_statement [29324,29400]" dest="block_statement [29570,29646]"/>
  <match src="identifier: SetAttribute [11025,11037]" dest="identifier: SetAttribute [10873,10885]"/>
  <match src="): ) [13441,13442]" dest="): ) [13402,13403]"/>
  <match src="&gt;: &gt; [11220,11221]" dest="&gt;: &gt; [11068,11069]"/>
  <match src="external: external [13777,13785]" dest="external: external [13772,13780]"/>
  <match src="type_name [13560,13567]" dest="type_name [13521,13528]"/>
  <match src="array_access [13974,13988]" dest="array_access [13969,13983]"/>
  <match src="call_expression [25461,25503]" dest="call_expression [25716,25758]"/>
  <match src="function_body [31563,31630]" dest="function_body [31789,31856]"/>
  <match src="memory: memory [3936,3942]" dest="memory: memory [3929,3935]"/>
  <match src="}: } [22045,22046]" dest="}: } [22211,22212]"/>
  <match src="member_expression [10897,10907]" dest="member_expression [10745,10755]"/>
  <match src="return: return [13621,13627]" dest="return: return [13582,13588]"/>
  <match src="call_expression [31574,31610]" dest="call_expression [31800,31836]"/>
  <match src="comment: // this accessManager, so that it may be replaced by the owner as needed [9555,9627]" dest="comment: // this accessManager, so that it may be replaced by the owner as needed [9385,9457]"/>
  <match src="primitive_type [19210,19217]" dest="primitive_type [19313,19320]"/>
  <match src="variable_declaration [29125,29135]" dest="variable_declaration [29371,29381]"/>
  <match src="return_type_definition [27696,27727]" dest="return_type_definition [27809,27840]"/>
  <match src="uint256: uint256 [28612,28619]" dest="uint256: uint256 [28806,28813]"/>
  <match src="address: address [13014,13021]" dest="address: address [12947,12954]"/>
  <match src="call_expression [28663,28715]" dest="call_expression [28863,28915]"/>
  <match src="type_name [28782,28789]" dest="type_name [28984,28991]"/>
  <match src="binary_expression [10647,10676]" dest="binary_expression [10452,10481]"/>
  <match src="(: ( [14379,14380]" dest="(: ( [14374,14375]"/>
  <match src="contract_body [5784,8402]" dest="contract_body [5597,8215]"/>
  <match src="identifier: ClaimableContract [30638,30655]" dest="identifier: ClaimableContract [30885,30902]"/>
  <match src="(: ( [15778,15779]" dest="(: ( [15769,15770]"/>
  <match src="(: ( [12708,12709]" dest="(: ( [12576,12577]"/>
  <match src="identifier: registry_ [33226,33235]" dest="identifier: registry_ [41934,41943]"/>
  <match src="identifier: prior [26056,26061]" dest="identifier: prior [26345,26350]"/>
  <match src="(: ( [5885,5886]" dest="(: ( [5698,5699]"/>
  <match src="identifier: ValSafeMath [17730,17741]" dest="identifier: ValSafeMath [17706,17717]"/>
  <match src="[: [ [13087,13088]" dest="[: [ [13048,13049]"/>
  <match src="event_definition [18888,18960]" dest="event_definition [18991,19063]"/>
  <match src="function_definition [20897,21107]" dest="function_definition [20992,21236]"/>
  <match src="*: * [18314,18315]" dest="*: * [18396,18397]"/>
  <match src="{: { [2360,2361]" dest="{: { [2379,2380]"/>
  <match src="}: } [23025,23026]" dest="}: } [23228,23229]"/>
  <match src="call_argument [12343,12349]" dest="call_argument [12211,12217]"/>
  <match src="call_argument [1469,1470]" dest="call_argument [1514,1515]"/>
  <match src="identifier: _tokenHolder [23179,23191]" dest="identifier: _tokenHolder [23382,23394]"/>
  <match src="(: ( [15903,15904]" dest="(: ( [15891,15892]"/>
  <match src="=: = [11814,11815]" dest="=: = [11662,11663]"/>
  <match src="array_access [11739,11770]" dest="array_access [11587,11618]"/>
  <match src="{: { [19456,19457]" dest="{: { [19559,19560]"/>
  <match src="identifier: allowance [23346,23355]" dest="identifier: allowance [23584,23593]"/>
  <match src="mapping: mapping [15822,15829]" dest="mapping: mapping [15813,15820]"/>
  <match src="identifier: IS_DEPOSIT_ADDRESS [24145,24163]" dest="identifier: IS_DEPOSIT_ADDRESS [24448,24466]"/>
  <match src="parameter [27296,27309]" dest="parameter [27424,27437]"/>
  <match src="expression_statement [28663,28716]" dest="expression_statement [28863,28916]"/>
  <match src="}: } [30084,30085]" dest="}: } [30346,30347]"/>
  <match src=",: , [12099,12100]" dest=",: , [11943,11944]"/>
  <match src="string_literal [14683,14695]" dest="string_literal [14681,14693]"/>
  <match src="{: { [33529,33530]" dest="{: { [42228,42229]"/>
  <match src="identifier: attributes [15924,15934]" dest="identifier: attributes [15912,15922]"/>
  <match src="primitive_type [29823,29830]" dest="primitive_type [30077,30084]"/>
  <match src="identifier: newOwner [30962,30970]" dest="identifier: newOwner [31188,31196]"/>
  <match src="): ) [14849,14850]" dest="): ) [14849,14850]"/>
  <match src="identifier: subscribers [12411,12422]" dest="identifier: subscribers [12279,12290]"/>
  <match src="else: else [26873,26877]" dest="else: else [27014,27018]"/>
  <match src="function: function [14234,14242]" dest="function: function [14229,14237]"/>
  <match src=",: , [943,944]" dest=",: , [980,981]"/>
  <match src="event_definition [10163,10247]" dest="event_definition [9968,10052]"/>
  <match src="identifier: _value [23376,23382]" dest="identifier: _value [23614,23620]"/>
  <match src="==: == [2598,2600]" dest="==: == [2617,2619]"/>
  <match src="(: ( [17953,17954]" dest="(: ( [17965,17966]"/>
  <match src=",: , [10121,10122]" dest=",: , [9926,9927]"/>
  <match src="parameter [10555,10559]" dest="parameter [10360,10364]"/>
  <match src="(: ( [29893,29894]" dest="(: ( [30155,30156]"/>
  <match src="number_literal: 0 [18515,18516]" dest="number_literal: 0 [18633,18634]"/>
  <match src="primitive_type [12445,12452]" dest="primitive_type [12313,12320]"/>
  <match src="primitive_type [30906,30913]" dest="primitive_type [31141,31148]"/>
  <match src="string: string [17976,17982]" dest="string: string [18016,18022]"/>
  <match src="identifier: msg [31223,31226]" dest="identifier: msg [31445,31448]"/>
  <match src="primitive_type [27296,27303]" dest="primitive_type [27424,27431]"/>
  <match src="call_expression [10951,11009]" dest="call_expression [10799,10857]"/>
  <match src="parameter [29430,29443]" dest="parameter [29676,29689]"/>
  <match src="parameter [1936,1943]" dest="parameter [1947,1954]"/>
  <match src="visibility [3957,3965]" dest="visibility [3950,3958]"/>
  <match src="): ) [9692,9693]" dest="): ) [9522,9523]"/>
  <match src="identifier: a [1871,1872]" dest="identifier: a [1882,1883]"/>
  <match src=",: , [11042,11043]" dest=",: , [10890,10891]"/>
  <match src="primitive_type [19874,19881]" dest="primitive_type [19977,19984]"/>
  <match src="emit_statement [11466,11510]" dest="emit_statement [11314,11358]"/>
  <match src="identifier: add [23372,23375]" dest="identifier: add [23610,23613]"/>
  <match src="(: ( [31351,31352]" dest="(: ( [31575,31576]"/>
  <match src="binary_expression [17874,17879]" dest="binary_expression [17884,17889]"/>
  <match src="emit_statement [29259,29290]" dest="emit_statement [29505,29536]"/>
  <match src="parameter [7901,7905]" dest="parameter [7714,7718]"/>
  <match src="call_argument [32121,32127]" dest="call_argument [32352,32358]"/>
  <match src="&quot;: &quot; [3327,3328]" dest="&quot;: &quot; [3354,3355]"/>
  <match src="function: function [23227,23235]" dest="function: function [23431,23439]"/>
  <match src="&gt;: &gt; [14043,14044]" dest="&gt;: &gt; [14038,14039]"/>
  <match src="primitive_type [8722,8729]" dest="primitive_type [8556,8563]"/>
  <match src="return_statement [33742,33751]" dest="return_statement [42441,42450]"/>
  <match src="primitive_type [9911,9918]" dest="primitive_type [9716,9723]"/>
  <match src="(: ( [29272,29273]" dest="(: ( [29518,29519]"/>
  <match src="expression_statement [21693,21753]" dest="expression_statement [21825,21885]"/>
  <match src="primitive_type [15862,15869]" dest="primitive_type [15851,15858]"/>
  <match src="[: [ [13477,13478]" dest="[: [ [13438,13439]"/>
  <match src="uint256: uint256 [3290,3297]" dest="uint256: uint256 [3317,3324]"/>
  <match src="event_paramater [10010,10036]" dest="event_paramater [9815,9841]"/>
  <match src="call_argument [29356,29358]" dest="call_argument [29602,29604]"/>
  <match src="identifier: hasAttribute [12696,12708]" dest="identifier: hasAttribute [12564,12576]"/>
  <match src="visibility [25387,25395]" dest="visibility [36113,36121]"/>
  <match src="call_argument [10897,10907]" dest="call_argument [10745,10755]"/>
  <match src="identifier: errorMessage [5467,5479]" dest="identifier: errorMessage [5367,5379]"/>
  <match src="=&gt;: =&gt; [15859,15861]" dest="=&gt;: =&gt; [15848,15850]"/>
  <match src=",: , [23143,23144]" dest=",: , [23346,23347]"/>
  <match src="]: ] [9733,9734]" dest="]: ] [9563,9564]"/>
  <match src="emit_statement [11705,11772]" dest="emit_statement [11553,11620]"/>
  <match src="identifier: encodePacked [10634,10646]" dest="identifier: encodePacked [10439,10451]"/>
  <match src="uint256: uint256 [11164,11171]" dest="uint256: uint256 [11012,11019]"/>
  <match src="(: ( [28155,28156]" dest="(: ( [28268,28269]"/>
  <match src="identifier: TrueCoinReceiver [29339,29355]" dest="identifier: TrueCoinReceiver [29585,29601]"/>
  <match src="(: ( [18030,18031]" dest="(: ( [18076,18077]"/>
  <match src="type_name [12723,12730]" dest="type_name [12591,12598]"/>
  <match src="primitive_type [10186,10193]" dest="primitive_type [9991,9998]"/>
  <match src="identifier: b [1015,1016]" dest="identifier: b [1052,1053]"/>
  <match src="if: if [23631,23633]" dest="if: if [23904,23906]"/>
  <match src="{: { [1444,1445]" dest="{: { [1489,1490]"/>
  <match src="=: = [25290,25291]" dest="=: = [25539,25540]"/>
  <match src=",: , [28597,28598]" dest=",: , [28773,28774]"/>
  <match src="number_literal: 0 [4079,4080]" dest="number_literal: 0 [4005,4006]"/>
  <match src="type_name [17954,17961]" dest="type_name [17976,17983]"/>
  <match src=",: , [12119,12120]" dest=",: , [11972,11973]"/>
  <match src="(: ( [31218,31219]" dest="(: ( [31440,31441]"/>
  <match src="identifier: errorMessage [1899,1911]" dest="identifier: errorMessage [1910,1922]"/>
  <match src="uint256: uint256 [26349,26356]" dest="uint256: uint256 [26491,26498]"/>
  <match src="identifier: errorMessage [4082,4094]" dest="identifier: errorMessage [4008,4020]"/>
  <match src=",: , [23262,23263]" dest=",: , [23476,23477]"/>
  <match src="[: [ [11247,11248]" dest="[: [ [11095,11096]"/>
  <match src="identifier: from [18919,18923]" dest="identifier: from [19022,19026]"/>
  <match src="function_definition [17941,18124]" dest="function_definition [17953,18170]"/>
  <match src="call_argument [23135,23143]" dest="call_argument [23338,23346]"/>
  <match src="while: while [13906,13911]" dest="while: while [13901,13906]"/>
  <match src="primitive_type [13005,13012]" dest="primitive_type [12925,12932]"/>
  <match src="identifier: Transfer [29877,29885]" dest="identifier: Transfer [30139,30147]"/>
  <match src="}: } [27954,27955]" dest="}: } [28067,28068]"/>
  <match src="): ) [21954,21955]" dest="): ) [22120,22121]"/>
  <match src="array_access [19294,19309]" dest="array_access [19397,19412]"/>
  <match src="visibility [13250,13256]" dest="visibility [13211,13217]"/>
  <match src="parameter [33198,33206]" dest="parameter [41906,41914]"/>
  <match src="return_statement [33929,33942]" dest="return_statement [42628,42641]"/>
  <match src="event_paramater [9930,9943]" dest="event_paramater [9735,9748]"/>
  <match src="(: ( [8335,8336]" dest="(: ( [8148,8149]"/>
  <match src="identifier: transfer [6314,6322]" dest="identifier: transfer [6127,6135]"/>
  <match src="identifier: hook [28010,28014]" dest="identifier: hook [28123,28127]"/>
  <match src=",: , [9958,9959]" dest=",: , [9763,9764]"/>
  <match src=".: . [10984,10985]" dest=".: . [10832,10833]"/>
  <match src=".: . [13146,13147]" dest=".: . [13107,13108]"/>
  <match src="comment: /**         Attributes are set per autosweep account         The layout of attributes is detailed here         lower bytes -&gt; upper bytes         [0, 20)  recipient address         [29, 30) REGISTERED_CONTRACT         [30, 31) PASSED_KYCAML         [31, 32) BLACKLISTED     */ [25531,25815]" dest="comment: /**         Attributes are set per autosweep account         The layout of attributes is detailed here         lower bytes -&gt; upper bytes         [0, 20)  recipient address         [29, 30) REGISTERED_CONTRACT         [30, 31) PASSED_KYCAML         [31, 32) BLACKLISTED     */ [25786,26070]"/>
  <match src="address: address [31211,31218]" dest="address: address [31433,31440]"/>
  <match src="}: } [32220,32221]" dest="}: } [32451,32452]"/>
  <match src="block_statement [26707,26779]" dest="block_statement [26848,26920]"/>
  <match src="public: public [21660,21666]" dest="public: public [21792,21798]"/>
  <match src="string [9679,9692]" dest="string [9509,9522]"/>
  <match src="call_argument [11044,11054]" dest="call_argument [10892,10902]"/>
  <match src="identifier: Transfer [29542,29550]" dest="identifier: Transfer [29796,29804]"/>
  <match src="call_argument [23145,23153]" dest="call_argument [23348,23356]"/>
  <match src="): ) [33048,33049]" dest="): ) [41749,41750]"/>
  <match src="public: public [13413,13419]" dest="public: public [13374,13380]"/>
  <match src="binary_expression [2687,2692]" dest="binary_expression [2706,2711]"/>
  <match src=",: , [30935,30936]" dest=",: , [31170,31171]"/>
  <match src="return_type_definition [13262,13279]" dest="return_type_definition [13223,13240]"/>
  <match src="address: address [21824,21831]" dest="address: address [21966,21973]"/>
  <match src="|: | [26750,26751]" dest="|: | [26891,26892]"/>
  <match src="primitive_type [13746,13753]" dest="primitive_type [13735,13742]"/>
  <match src="if: if [26932,26934]" dest="if: if [27073,27075]"/>
  <match src="identifier: block [10993,10998]" dest="identifier: block [10841,10846]"/>
  <match src="+: + [17876,17877]" dest="+: + [17886,17887]"/>
  <match src="identifier: _registry [32978,32987]" dest="identifier: _registry [41679,41688]"/>
  <match src=",: , [12721,12722]" dest=",: , [12589,12590]"/>
  <match src="=: = [26062,26063]" dest="=: = [26351,26352]"/>
  <match src="type_name [3980,3987]" dest="type_name [3973,3980]"/>
  <match src="primitive_type [21624,21631]" dest="primitive_type [21753,21760]"/>
  <match src="): ) [30820,30821]" dest="): ) [31065,31066]"/>
  <match src="call_argument [23376,23382]" dest="call_argument [23614,23620]"/>
  <match src="binary_expression [26317,26373]" dest="binary_expression [26459,26515]"/>
  <match src="assignment_expression [33122,33139]" dest="assignment_expression [41823,41840]"/>
  <match src="(: ( [11211,11212]" dest="(: ( [11059,11060]"/>
  <match src="identifier: syncAttributeValue [11255,11273]" dest="identifier: syncAttributeValue [11103,11121]"/>
  <match src="call_argument [19314,19320]" dest="call_argument [19417,19423]"/>
  <match src="{: { [11996,11997]" dest="{: { [11830,11831]"/>
  <match src="uint8: uint8 [33724,33729]" dest="uint8: uint8 [42423,42428]"/>
  <match src="return_type_definition [19249,19273]" dest="return_type_definition [19352,19376]"/>
  <match src="source_file [0,33952]" dest="source_file [0,42651]"/>
  <match src="return_type_definition [5902,5919]" dest="return_type_definition [5715,5732]"/>
  <match src="type_cast_expression [30261,30273]" dest="type_cast_expression [30523,30535]"/>
  <match src="identifier: msg [10981,10984]" dest="identifier: msg [10829,10832]"/>
  <match src="solidity: solidity [69,77]" dest="solidity: solidity [98,106]"/>
  <match src="identifier: prior [26578,26583]" dest="identifier: prior [26719,26724]"/>
  <match src="identifier: priorBalance [19045,19057]" dest="identifier: priorBalance [19148,19160]"/>
  <match src="function: function [20730,20738]" dest="function: function [20825,20833]"/>
  <match src="bytes32: bytes32 [9911,9918]" dest="bytes32: bytes32 [9716,9723]"/>
  <match src="is: is [32655,32657]" dest="is: is [41374,41376]"/>
  <match src="): ) [5886,5887]" dest="): ) [5699,5700]"/>
  <match src="identifier: _value [28620,28626]" dest="identifier: _value [28814,28820]"/>
  <match src="call_argument [29374,29379]" dest="call_argument [29620,29625]"/>
  <match src="identifier: recipient [6331,6340]" dest="identifier: recipient [6144,6153]"/>
  <match src="call_argument [17911,17926]" dest="call_argument [17921,17936]"/>
  <match src="identifier: _spender [20830,20838]" dest="identifier: _spender [20925,20933]"/>
  <match src="identifier: _spender [23573,23581]" dest="identifier: _spender [23846,23854]"/>
  <match src="(: ( [19145,19146]" dest="(: ( [19248,19249]"/>
  <match src="address: address [8830,8837]" dest="address: address [8660,8667]"/>
  <match src="comment: // Allows a write if either a) the writer is that Registry's owner, or [10255,10325]" dest="comment: // Allows a write if either a) the writer is that Registry's owner, or [10060,10130]"/>
  <match src="{: { [3989,3990]" dest="{: { [3982,3983]"/>
  <match src="call_argument [23121,23133]" dest="call_argument [23324,23336]"/>
  <match src="identifier: _pendingOwner [32129,32142]" dest="identifier: _pendingOwner [32360,32373]"/>
  <match src="identifier: to [29240,29242]" dest="identifier: to [29486,29488]"/>
  <match src="uint256: uint256 [1401,1408]" dest="uint256: uint256 [1446,1453]"/>
  <match src="identifier: prior [26491,26496]" dest="identifier: prior [26633,26638]"/>
  <match src="type_name [10780,10787]" dest="type_name [10595,10602]"/>
  <match src=".: . [29704,29705]" dest=".: . [29958,29959]"/>
  <match src="uint256: uint256 [18872,18879]" dest="uint256: uint256 [18975,18982]"/>
  <match src="array_access [11418,11441]" dest="array_access [11266,11289]"/>
  <match src="type_name [20029,20036]" dest="type_name [20128,20135]"/>
  <match src="): ) [28169,28170]" dest="): ) [28282,28283]"/>
  <match src="assignment_expression [26299,26373]" dest="assignment_expression [26441,26515]"/>
  <match src="]: ] [12433,12434]" dest="]: ] [12301,12302]"/>
  <match src="): ) [30209,30210]" dest="): ) [30471,30472]"/>
  <match src="}: } [27115,27116]" dest="}: } [27256,27257]"/>
  <match src="primitive_type [8674,8681]" dest="primitive_type [8508,8515]"/>
  <match src="primitive_type [8750,8757]" dest="primitive_type [8584,8591]"/>
  <match src="identifier: _attribute [11954,11964]" dest="identifier: _attribute [11788,11798]"/>
  <match src="uint256: uint256 [25133,25140]" dest="uint256: uint256 [25400,25407]"/>
  <match src="}: } [12051,12052]" dest="}: } [11885,11886]"/>
  <match src="comment: /**      * @dev Returns the amount of tokens in existence.      */ [5791,5859]" dest="comment: /**      * @dev Returns the amount of tokens in existence.      */ [5604,5672]"/>
  <match src="call_argument [2699,2734]" dest="call_argument [2718,2753]"/>
  <match src="type_name [9633,9640]" dest="type_name [9463,9470]"/>
  <match src="returns: returns [18467,18474]" dest="returns: returns [18585,18592]"/>
  <match src="function: function [5865,5873]" dest="function: function [5678,5686]"/>
  <match src="identifier: _attribute [13238,13248]" dest="identifier: _attribute [13199,13209]"/>
  <match src="contract_body [15706,17470]" dest="contract_body [15698,17459]"/>
  <match src="comment: /**  * @title ClaimableContract  * @dev The ClaimableContract contract is a copy of Claimable Contract by Zeppelin.   and provides basic authorization control functions. Inherits storage layout of   ProxyStorage.  */ [30406,30627]" dest="comment: // File: contracts/trusttokens/ClaimableContract.sol [30570,30622]"/>
  <match src="identifier: flags [27989,27994]" dest="identifier: flags [28102,28107]"/>
  <match src="type_name [9911,9918]" dest="type_name [9716,9723]"/>
  <match src="parameter [25883,25897]" dest="parameter [26166,26180]"/>
  <match src="state_mutability [33710,33714]" dest="state_mutability [42409,42413]"/>
  <match src="identifier: SetManager [9999,10009]" dest="identifier: SetManager [9804,9814]"/>
  <match src="primitive_type [28964,28971]" dest="primitive_type [29196,29203]"/>
  <match src="identifier: totalSupply [29765,29776]" dest="identifier: totalSupply [30019,30030]"/>
  <match src="primitive_type [12087,12094]" dest="primitive_type [11931,11938]"/>
  <match src="identifier: _who [12325,12329]" dest="identifier: _who [12193,12197]"/>
  <match src="call_expression [29162,29184]" dest="call_expression [29408,29430]"/>
  <match src="identifier: _to [29233,29236]" dest="identifier: _to [29479,29482]"/>
  <match src="if: if [33424,33426]" dest="if: if [42132,42134]"/>
  <match src="identifier: sender [21745,21751]" dest="identifier: sender [21877,21883]"/>
  <match src="identifier: _who [11274,11278]" dest="identifier: _who [11122,11126]"/>
  <match src="event_paramater [10123,10155]" dest="event_paramater [9928,9960]"/>
  <match src="true: true [22724,22728]" dest="true: true [22893,22897]"/>
  <match src="primitive_type [17976,17982]" dest="primitive_type [18016,18022]"/>
  <match src="identifier: value [12817,12822]" dest="identifier: value [12685,12690]"/>
  <match src="binary_expression [22958,22985]" dest="binary_expression [23161,23188]"/>
  <match src="return_type_definition [1927,1944]" dest="return_type_definition [1938,1955]"/>
  <match src="(: ( [21918,21919]" dest="(: ( [22084,22085]"/>
  <match src="identifier: prior [27065,27070]" dest="identifier: prior [27206,27211]"/>
  <match src="visibility [1913,1921]" dest="visibility [1924,1932]"/>
  <match src="external: external [28628,28636]" dest="external: external [28828,28836]"/>
  <match src="): ) [10530,10531]" dest="): ) [10335,10336]"/>
  <match src="{: { [27507,27508]" dest="{: { [27622,27623]"/>
  <match src="identifier: _from [28285,28290]" dest="identifier: _from [28398,28403]"/>
  <match src="identifier: setAttribute [10767,10779]" dest="identifier: setAttribute [10572,10584]"/>
  <match src="]: ] [19308,19309]" dest="]: ] [19411,19412]"/>
  <match src="identifier: RegistrySubscriber [24000,24018]" dest="identifier: RegistrySubscriber [24303,24321]"/>
  <match src="!=: != [30021,30023]" dest="!=: != [30283,30285]"/>
  <match src="visibility [6358,6366]" dest="visibility [6171,6179]"/>
  <match src="expression_statement [33060,33082]" dest="expression_statement [41761,41783]"/>
  <match src="}: } [15456,15457]" dest="}: } [15461,15462]"/>
  <match src="{: { [13786,13787]" dest="{: { [13781,13782]"/>
  <match src="string: string [1885,1891]" dest="string: string [1896,1902]"/>
  <match src="): ) [33780,33781]" dest="): ) [42479,42480]"/>
  <match src="array_access [23843,23868]" dest="array_access [24150,24175]"/>
  <match src="uint160: uint160 [28156,28163]" dest="uint160: uint160 [28269,28276]"/>
  <match src="): ) [11580,11581]" dest="): ) [11428,11429]"/>
  <match src="emit_statement [29058,29092]" dest="emit_statement [29304,29338]"/>
  <match src="identifier: StartSubscription [10078,10095]" dest="identifier: StartSubscription [9883,9900]"/>
  <match src="primitive_type [28612,28619]" dest="primitive_type [28806,28813]"/>
  <match src="identifier: _ [25514,25515]" dest="identifier: _ [25769,25770]"/>
  <match src="parameter [7486,7490]" dest="parameter [7299,7303]"/>
  <match src="emit: emit [21054,21058]" dest="emit: emit [21183,21187]"/>
  <match src="parameter [10814,10828]" dest="parameter [10647,10661]"/>
  <match src="address: address [26156,26163]" dest="address: address [34232,34239]"/>
  <match src="memory: memory [18172,18178]" dest="memory: memory [18248,18254]"/>
  <match src=".: . [30154,30155]" dest=".: . [30416,30417]"/>
  <match src="identifier: _attribute [12109,12119]" dest="identifier: _attribute [11962,11972]"/>
  <match src="function_body [18047,18124]" dest="function_body [18093,18170]"/>
  <match src="identifier: _value [10965,10971]" dest="identifier: _value [10813,10819]"/>
  <match src="expression_statement [14707,14709]" dest="expression_statement [14705,14707]"/>
  <match src="(: ( [12940,12941]" dest="(: ( [12806,12807]"/>
  <match src="bytes32: bytes32 [9428,9435]" dest="bytes32: bytes32 [9258,9265]"/>
  <match src="visibility [31831,31837]" dest="visibility [32060,32066]"/>
  <match src="number_literal: 20 [28174,28176]" dest="number_literal: 20 [28287,28289]"/>
  <match src="variable_declaration_statement [22927,22944]" dest="variable_declaration_statement [23130,23147]"/>
  <match src="(: ( [30056,30057]" dest="(: ( [30318,30319]"/>
  <match src="returns: returns [23501,23508]" dest="returns: returns [23773,23780]"/>
  <match src="(: ( [26028,26029]" dest="(: ( [26317,26318]"/>
  <match src="): ) [30726,30727]" dest="): ) [30971,30972]"/>
  <match src="primitive_type [30719,30726]" dest="primitive_type [30964,30971]"/>
  <match src="(: ( [14640,14641]" dest="(: ( [14638,14639]"/>
  <match src="primitive_type [999,1006]" dest="primitive_type [1036,1043]"/>
  <match src="member_expression [13142,13156]" dest="member_expression [13103,13117]"/>
  <match src="}: } [26871,26872]" dest="}: } [27012,27013]"/>
  <match src="expression_statement [14496,14525]" dest="expression_statement [14491,14520]"/>
  <match src="]: ] [13488,13489]" dest="]: ] [13449,13450]"/>
  <match src="): ) [33173,33174]" dest="): ) [41874,41875]"/>
  <match src="(: ( [15099,15100]" dest="(: ( [15102,15103]"/>
  <match src="uint256: uint256 [13271,13278]" dest="uint256: uint256 [13232,13239]"/>
  <match src="primitive_type [28396,28403]" dest="primitive_type [28528,28535]"/>
  <match src="uint256: uint256 [934,941]" dest="uint256: uint256 [971,978]"/>
  <match src="event_paramater [10038,10064]" dest="event_paramater [9843,9869]"/>
  <match src="variable_declaration [22927,22943]" dest="variable_declaration [23130,23146]"/>
  <match src="identifier: owner [14676,14681]" dest="identifier: owner [14674,14679]"/>
  <match src="true: true [33135,33139]" dest="true: true [41836,41840]"/>
  <match src="&quot;: &quot; [33936,33937]" dest="&quot;: &quot; [42635,42636]"/>
  <match src="indexed: indexed [20037,20044]" dest="indexed: indexed [20136,20143]"/>
  <match src="identifier: attributes [26726,26736]" dest="identifier: attributes [26867,26877]"/>
  <match src="primitive_type [7452,7459]" dest="primitive_type [7265,7272]"/>
  <match src="array_access [11739,11762]" dest="array_access [11587,11610]"/>
  <match src="assignment_expression [11782,11851]" dest="assignment_expression [11630,11699]"/>
  <match src="primitive_type [9833,9840]" dest="primitive_type [9644,9651]"/>
  <match src="}: } [28062,28063]" dest="}: } [28175,28176]"/>
  <match src="identifier: _spender [23272,23280]" dest="identifier: _spender [23495,23503]"/>
  <match src="): ) [6042,6043]" dest="): ) [5855,5856]"/>
  <match src="identifier: _attribute [12963,12973]" dest="identifier: _attribute [12829,12839]"/>
  <match src="primitive_type [8336,8343]" dest="primitive_type [8149,8156]"/>
  <match src="): ) [25385,25386]" dest="): ) [25634,25635]"/>
  <match src="view: view [13587,13591]" dest="view: view [13548,13552]"/>
  <match src="(: ( [6739,6740]" dest="(: ( [6552,6553]"/>
  <match src="function_definition [5865,5920]" dest="function_definition [5678,5733]"/>
  <match src="function_definition [23227,23413]" dest="function_definition [23431,23651]"/>
  <match src="expression_statement [28269,28313]" dest="expression_statement [28382,28426]"/>
  <match src="=: = [9667,9668]" dest="=: = [9497,9498]"/>
  <match src="binary_expression [28277,28290]" dest="binary_expression [28390,28403]"/>
  <match src="type_name [25249,25256]" dest="type_name [25505,25512]"/>
  <match src="): ) [13248,13249]" dest="): ) [13209,13210]"/>
  <match src="expression_statement [33092,33112]" dest="expression_statement [41793,41813]"/>
  <match src="uint256: uint256 [27296,27303]" dest="uint256: uint256 [27424,27431]"/>
  <match src="identifier: previousOwner [30922,30935]" dest="identifier: previousOwner [31157,31170]"/>
  <match src="[: [ [28147,28148]" dest="[: [ [28260,28261]"/>
  <match src="(: ( [20746,20747]" dest="(: ( [20841,20842]"/>
  <match src="function_body [23531,23744]" dest="function_body [23804,24017]"/>
  <match src="identifier: _from [28529,28534]" dest="identifier: _from [28693,28698]"/>
  <match src="call_argument [21012,21024]" dest="call_argument [21141,21153]"/>
  <match src="{: { [28109,28110]" dest="{: { [28222,28223]"/>
  <match src="(: ( [23249,23250]" dest="(: ( [23453,23454]"/>
  <match src="parameter [21642,21658]" dest="parameter [21771,21790]"/>
  <match src=",: , [19429,19430]" dest=",: , [19532,19533]"/>
  <match src=".: . [28707,28708]" dest=".: . [28907,28908]"/>
  <match src="assignment_expression [27838,27846]" dest="assignment_expression [27951,27959]"/>
  <match src="visibility [11388,11396]" dest="visibility [11236,11244]"/>
  <match src="block_statement [12506,12592]" dest="block_statement [12374,12460]"/>
  <match src="identifier: to [30107,30109]" dest="identifier: to [30369,30371]"/>
  <match src="member_expression [14158,14191]" dest="member_expression [14153,14186]"/>
  <match src="(: ( [7485,7486]" dest="(: ( [7298,7299]"/>
  <match src="identifier: from [28277,28281]" dest="identifier: from [28390,28394]"/>
  <match src=",: , [18072,18073]" dest=",: , [18118,18119]"/>
  <match src="return_statement [1455,1506]" dest="return_statement [1500,1551]"/>
  <match src="=: = [32787,32788]" dest="=: = [41486,41487]"/>
  <match src="type_name [15969,15976]" dest="type_name [15957,15964]"/>
  <match src="address: address [29430,29437]" dest="address: address [29676,29683]"/>
  <match src=",: , [10828,10829]" dest=",: , [10661,10662]"/>
  <match src="): ) [10907,10908]" dest="): ) [10755,10756]"/>
  <match src="member_expression [11180,11194]" dest="member_expression [11028,11042]"/>
  <match src="type_name [28951,28958]" dest="type_name [29174,29181]"/>
  <match src="primitive_type [26357,26364]" dest="primitive_type [26499,26506]"/>
  <match src=",: , [22002,22003]" dest=",: , [22168,22169]"/>
  <match src="call_argument [31219,31220]" dest="call_argument [31441,31442]"/>
  <match src="identifier: ACCOUNT_ADDRESS [24918,24933]" dest="identifier: ACCOUNT_ADDRESS [25197,25212]"/>
  <match src="assignment_expression [31859,31883]" dest="assignment_expression [32088,32112]"/>
  <match src="uint256: uint256 [11566,11573]" dest="uint256: uint256 [11414,11421]"/>
  <match src="identifier: b [4122,4123]" dest="identifier: b [4048,4049]"/>
  <match src="parameter [27669,27680]" dest="parameter [27782,27793]"/>
  <match src="parameter [13725,13744]" dest="parameter [13705,13724]"/>
  <match src="call_argument [18066,18072]" dest="call_argument [18112,18118]"/>
  <match src="public: public [33782,33788]" dest="public: public [42481,42487]"/>
  <match src="type_name [29503,29510]" dest="type_name [29757,29764]"/>
  <match src=",: , [23805,23806]" dest=",: , [24097,24098]"/>
  <match src="identifier: _addedValue [21728,21739]" dest="identifier: _addedValue [21860,21871]"/>
  <match src="identifier: _value [26365,26371]" dest="identifier: _value [26507,26513]"/>
  <match src="array_access [11782,11805]" dest="array_access [11630,11653]"/>
  <match src="identifier: require [5451,5458]" dest="identifier: require [5351,5358]"/>
  <match src="parameter [13705,13723]" dest="parameter [13676,13694]"/>
  <match src="identifier: errorMessage [3943,3955]" dest="identifier: errorMessage [3936,3948]"/>
  <match src=",: , [30064,30065]" dest=",: , [30326,30327]"/>
  <match src="uint256: uint256 [3256,3263]" dest="uint256: uint256 [3283,3290]"/>
  <match src="identifier: pendingOwner [15366,15378]" dest="identifier: pendingOwner [15371,15383]"/>
  <match src="binary_expression [26578,26609]" dest="binary_expression [26719,26750]"/>
  <match src="identifier: value [8392,8397]" dest="identifier: value [8205,8210]"/>
  <match src="=&gt;: =&gt; [9716,9718]" dest="=&gt;: =&gt; [9546,9548]"/>
  <match src="number_literal: 0 [2626,2627]" dest="number_literal: 0 [2645,2646]"/>
  <match src="): ) [25501,25502]" dest="): ) [25756,25757]"/>
  <match src="parameter [23775,23787]" dest="parameter [24058,24070]"/>
  <match src="identifier: add [930,933]" dest="identifier: add [967,970]"/>
  <match src="parameter [19431,19445]" dest="parameter [19534,19548]"/>
  <match src="identifier: onlyOwner [15125,15134]" dest="identifier: onlyOwner [15128,15137]"/>
  <match src="]: ] [12815,12816]" dest="]: ] [12683,12684]"/>
  <match src="(: ( [25848,25849]" dest="(: ( [26103,26104]"/>
  <match src="identifier: _attribute [13401,13411]" dest="identifier: _attribute [13362,13372]"/>
  <match src="function: function [13348,13356]" dest="function: function [13309,13317]"/>
  <match src=",: , [11278,11279]" dest=",: , [11126,11127]"/>
  <match src="type_name [15100,15107]" dest="type_name [15103,15110]"/>
  <match src="identifier: errorMessage [5394,5406]" dest="identifier: errorMessage [5294,5306]"/>
  <match src="call_argument [22695,22705]" dest="call_argument [22864,22874]"/>
  <match src="contract_body [24035,27126]" dest="contract_body [24338,27267]"/>
  <match src="parameter [945,954]" dest="parameter [982,991]"/>
  <match src="type_name [8857,8864]" dest="type_name [8687,8694]"/>
  <match src="call_argument [22677,22693]" dest="call_argument [22846,22862]"/>
  <match src="call_argument [12355,12365]" dest="call_argument [12223,12233]"/>
  <match src="identifier: _value [21092,21098]" dest="identifier: _value [21221,21227]"/>
  <match src="call_argument [32129,32142]" dest="call_argument [32360,32373]"/>
  <match src=".: . [31585,31586]" dest=".: . [31811,31812]"/>
  <match src="primitive_type [25017,25024]" dest="primitive_type [25288,25295]"/>
  <match src="if: if [26690,26692]" dest="if: if [26831,26833]"/>
  <match src="(: ( [2686,2687]" dest="(: ( [2705,2706]"/>
  <match src="state_variable_declaration [15990,16012]" dest="state_variable_declaration [15978,16000]"/>
  <match src="string: string [5380,5386]" dest="string: string [5280,5286]"/>
  <match src="{: { [22853,22854]" dest="{: { [23056,23057]"/>
  <match src="expression_statement [20814,20860]" dest="expression_statement [20909,20955]"/>
  <match src="internal: internal [23823,23831]" dest="internal: internal [24130,24138]"/>
  <match src="block_statement [27961,28056]" dest="block_statement [28074,28169]"/>
  <match src="identifier: _from [28684,28689]" dest="identifier: _from [28884,28889]"/>
  <match src="type_name [29125,29132]" dest="type_name [29371,29378]"/>
  <match src="state_mutability [13587,13591]" dest="state_mutability [13548,13552]"/>
  <match src="(: ( [29232,29233]" dest="(: ( [29478,29479]"/>
  <match src="identifier: _value [11056,11062]" dest="identifier: _value [10904,10910]"/>
  <match src="comment: // Stores arbitrary attributes for users. An example use case is an IERC20 [8916,8990]" dest="comment: // Stores arbitrary attributes for users. An example use case is an IERC20 [8746,8820]"/>
  <match src="identifier: priorBalance [19070,19082]" dest="identifier: priorBalance [19173,19185]"/>
  <match src="expression_statement [12155,12201]" dest="expression_statement [12023,12069]"/>
  <match src="identifier: b [1469,1470]" dest="identifier: b [1514,1515]"/>
  <match src="internal: internal [18453,18461]" dest="internal: internal [18571,18579]"/>
  <match src="view: view [33184,33188]" dest="view: view [41892,41896]"/>
  <match src="identifier: adminAddr [13490,13499]" dest="identifier: adminAddr [13451,13460]"/>
  <match src="uint256: uint256 [9930,9937]" dest="uint256: uint256 [9735,9742]"/>
  <match src="identifier: syncAttributeValue [12536,12554]" dest="identifier: syncAttributeValue [12404,12422]"/>
  <match src="call_argument [21933,21941]" dest="call_argument [22099,22107]"/>
  <match src="array_access [26726,26741]" dest="array_access [26867,26882]"/>
  <match src="function: function [6305,6313]" dest="function: function [6118,6126]"/>
  <match src="address: address [22778,22785]" dest="address: address [22957,22964]"/>
  <match src=",: , [12349,12350]" dest=",: , [12217,12218]"/>
  <match src="uint256: uint256 [18154,18161]" dest="uint256: uint256 [18221,18228]"/>
  <match src="type_name [12121,12128]" dest="type_name [11983,11990]"/>
  <match src=".: . [13656,13657]" dest=".: . [13617,13618]"/>
  <match src="call_argument [22667,22675]" dest="call_argument [22836,22844]"/>
  <match src="(: ( [33363,33364]" dest="(: ( [42071,42072]"/>
  <match src="(: ( [11677,11678]" dest="(: ( [11525,11526]"/>
  <match src="member_expression [12280,12295]" dest="member_expression [12148,12163]"/>
  <match src="identifier: _value [29936,29942]" dest="identifier: _value [30198,30204]"/>
  <match src=".: . [29359,29360]" dest=".: . [29605,29606]"/>
  <match src="identifier: Transfer [8090,8098]" dest="identifier: Transfer [7903,7911]"/>
  <match src=",: , [29501,29502]" dest=",: , [29755,29756]"/>
  <match src="function_body [33918,33949]" dest="function_body [42617,42648]"/>
  <match src="primitive_type [29445,29452]" dest="primitive_type [29691,29698]"/>
  <match src="parameter [19417,19429]" dest="parameter [19520,19532]"/>
  <match src="identifier: msg [12355,12358]" dest="identifier: msg [12223,12226]"/>
  <match src="function_body [33731,33758]" dest="function_body [42430,42457]"/>
  <match src="function_definition [14234,14350]" dest="function_definition [14229,14345]"/>
  <match src="==: == [18252,18254]" dest="==: == [18334,18336]"/>
  <match src="{: { [15135,15136]" dest="{: { [15138,15139]"/>
  <match src="}: } [23218,23219]" dest="}: } [23422,23423]"/>
  <match src="parameter [22625,22629]" dest="parameter [22794,22798]"/>
  <match src=",: , [11062,11063]" dest=",: , [10910,10911]"/>
  <match src="expression_statement [5451,5481]" dest="expression_statement [5351,5381]"/>
  <match src="expression_statement [30226,30283]" dest="expression_statement [30488,30545]"/>
  <match src="primitive_type [13601,13608]" dest="primitive_type [13562,13569]"/>
  <match src="identifier: subscribers [11629,11640]" dest="identifier: subscribers [11477,11488]"/>
  <match src="event_paramater [9793,9822]" dest="event_paramater [9613,9642]"/>
  <match src="(: ( [1862,1863]" dest="(: ( [1873,1874]"/>
  <match src="call_expression [19294,19345]" dest="call_expression [19397,19448]"/>
  <match src="identifier: claimOwnership [31995,32009]" dest="identifier: claimOwnership [32226,32240]"/>
  <match src="call_argument [29570,29576]" dest="call_argument [29824,29830]"/>
  <match src="primitive_type [14320,14327]" dest="primitive_type [14315,14322]"/>
  <match src=",: , [3322,3323]" dest=",: , [3349,3350]"/>
  <match src="(: ( [1935,1936]" dest="(: ( [1946,1947]"/>
  <match src="]: ] [12238,12239]" dest="]: ] [12106,12107]"/>
  <match src="identifier: value [14186,14191]" dest="identifier: value [14181,14186]"/>
  <match src="string [12264,12266]" dest="string [12132,12134]"/>
  <match src="type_name [24191,24198]" dest="type_name [24494,24501]"/>
  <match src="(: ( [4708,4709]" dest="(: ( [4642,4643]"/>
  <match src="returns: returns [1927,1934]" dest="returns: returns [1938,1945]"/>
  <match src="primitive_type [18476,18483]" dest="primitive_type [18594,18601]"/>
  <match src="identifier: allowance [23557,23566]" dest="identifier: allowance [23830,23839]"/>
  <match src="expression_statement [30129,30191]" dest="expression_statement [30391,30453]"/>
  <match src=",: , [1970,1971]" dest=",: , [1981,1982]"/>
  <match src="type_name [6740,6747]" dest="type_name [6553,6560]"/>
  <match src="]: ] [12226,12227]" dest="]: ] [12094,12095]"/>
  <match src="type_name [8336,8343]" dest="type_name [8149,8156]"/>
  <match src="(: ( [2305,2306]" dest="(: ( [2324,2325]"/>
  <match src="public: public [33703,33709]" dest="public: public [42402,42408]"/>
  <match src="member_expression [13118,13128]" dest="member_expression [13079,13089]"/>
  <match src="identifier: result [19285,19291]" dest="identifier: result [19388,19394]"/>
  <match src="identifier: _who [19095,19099]" dest="identifier: _who [19198,19202]"/>
  <match src="function: function [20897,20905]" dest="function: function [20992,21000]"/>
  <match src="primitive_type [15831,15838]" dest="primitive_type [15821,15828]"/>
  <match src="boolean_literal [28892,28896]" dest="boolean_literal [29094,29098]"/>
  <match src="member_expression [13461,13499]" dest="member_expression [13422,13460]"/>
  <match src="[: [ [22013,22014]" dest="[: [ [22179,22180]"/>
  <match src="type_name [28425,28432]" dest="type_name [28575,28582]"/>
  <match src="function_body [13280,13340]" dest="function_body [13241,13301]"/>
  <match src="(: ( [12162,12163]" dest="(: ( [12030,12031]"/>
  <match src="call_expression [10872,10908]" dest="call_expression [10720,10756]"/>
  <match src="]: ] [10947,10948]" dest="]: ] [10795,10796]"/>
  <match src="(: ( [29651,29652]" dest="(: ( [29905,29906]"/>
  <match src="identifier: require [14654,14661]" dest="identifier: require [14652,14659]"/>
  <match src="comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      */ [2772,3226]" dest="comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [2791,3253]"/>
  <match src="type_name [3245,3252]" dest="type_name [3272,3279]"/>
  <match src="primitive_type [28148,28155]" dest="primitive_type [28261,28268]"/>
  <match src="call_argument [29898,29901]" dest="call_argument [30160,30163]"/>
  <match src="member_expression [11072,11082]" dest="member_expression [10920,10930]"/>
  <match src="pragma_directive [5585,5608]" dest="pragma_directive [5479,5502]"/>
  <match src="interface_declaration [5767,8402]" dest="interface_declaration [5580,8215]"/>
  <match src="(: ( [13912,13913]" dest="(: ( [13907,13908]"/>
  <match src="identifier: owner_ [31387,31393]" dest="identifier: owner_ [31611,31617]"/>
  <match src="call_argument [25952,25971]" dest="call_argument [26241,26260]"/>
  <match src="primitive_type [19003,19010]" dest="primitive_type [19106,19113]"/>
  <match src="parameter [6067,6074]" dest="parameter [5880,5887]"/>
  <match src="(: ( [31210,31211]" dest="(: ( [31432,31433]"/>
  <match src="public: public [30792,30798]" dest="public: public [31037,31043]"/>
  <match src="string [30167,30189]" dest="string [30429,30451]"/>
  <match src="): ) [14896,14897]" dest="): ) [14896,14897]"/>
  <match src="call_expression [1027,1073]" dest="call_expression [1064,1110]"/>
  <match src=",: , [8382,8383]" dest=",: , [8195,8196]"/>
  <match src="contract_body [30672,32224]" dest="contract_body [30919,32455]"/>
  <match src="primitive_type [18925,18932]" dest="primitive_type [19028,19035]"/>
  <match src="type_name [13951,13964]" dest="type_name [13946,13959]"/>
  <match src="call_argument [30066,30072]" dest="call_argument [30328,30334]"/>
  <match src="]: ] [11110,11111]" dest="]: ] [10958,10959]"/>
  <match src="type_name [14394,14401]" dest="type_name [14389,14396]"/>
  <match src="primitive_type [24785,24792]" dest="primitive_type [25072,25079]"/>
  <match src="): ) [29976,29977]" dest="): ) [30238,30239]"/>
  <match src="else: else [27956,27960]" dest="else: else [28069,28073]"/>
  <match src="==: == [26035,26037]" dest="==: == [26324,26326]"/>
  <match src="{: { [988,989]" dest="{: { [1025,1026]"/>
  <match src="function_body [2360,2764]" dest="function_body [2379,2783]"/>
  <match src="address: address [15100,15107]" dest="address: address [15103,15110]"/>
  <match src="function_body [5440,5511]" dest="function_body [5340,5411]"/>
  <match src="function_body [11407,11517]" dest="function_body [11255,11365]"/>
  <match src="type_name [3918,3925]" dest="type_name [3911,3918]"/>
  <match src="address: address [9833,9840]" dest="address: address [9644,9651]"/>
  <match src="primitive_type [19417,19424]" dest="primitive_type [19520,19527]"/>
  <match src="indexed: indexed [9968,9975]" dest="indexed: indexed [9773,9780]"/>
  <match src="expression_statement [25514,25516]" dest="expression_statement [25769,25771]"/>
  <match src="contract_declaration [27225,27324]" dest="contract_declaration [33266,40956]"/>
  <match src="identifier: a [4717,4718]" dest="identifier: a [4651,4652]"/>
  <match src="identifier: sender [31168,31174]" dest="identifier: sender [31390,31396]"/>
  <match src="call_expression [14115,14192]" dest="call_expression [14110,14187]"/>
  <match src="event_paramater [18945,18958]" dest="event_paramater [19048,19061]"/>
  <match src="assignment_expression [23047,23085]" dest="assignment_expression [23250,23288]"/>
  <match src="type_name [8750,8757]" dest="type_name [8584,8591]"/>
  <match src="type_name [6342,6349]" dest="type_name [6155,6162]"/>
  <match src="): ) [33392,33393]" dest="): ) [42100,42101]"/>
  <match src="=: = [24220,24221]" dest="=: = [24523,24524]"/>
  <match src="binary_expression [27065,27089]" dest="binary_expression [27206,27230]"/>
  <match src="primitive_type [9409,9416]" dest="primitive_type [9239,9246]"/>
  <match src="uint256: uint256 [22864,22871]" dest="uint256: uint256 [23067,23074]"/>
  <match src="type_name [3290,3297]" dest="type_name [3317,3324]"/>
  <match src="boolean_literal [33135,33139]" dest="boolean_literal [41836,41840]"/>
  <match src="function_body [13443,13507]" dest="function_body [13404,13468]"/>
  <match src="user_defined_type [32676,32693]" dest="user_defined_type [33321,33338]"/>
  <match src="identifier: a [5498,5499]" dest="identifier: a [5398,5399]"/>
  <match src="variable_declaration [12445,12458]" dest="variable_declaration [12313,12326]"/>
  <match src="type_name [10830,10837]" dest="type_name [10672,10679]"/>
  <match src="[: [ [22892,22893]" dest="[: [ [23095,23096]"/>
  <match src="call_expression [29195,29218]" dest="call_expression [29441,29464]"/>
  <match src="(: ( [933,934]" dest="(: ( [970,971]"/>
  <match src="parameter [21624,21640]" dest="parameter [21753,21769]"/>
  <match src="): ) [9985,9986]" dest="): ) [9790,9791]"/>
  <match src="external: external [11388,11396]" dest="external: external [11236,11244]"/>
  <match src="[: [ [19094,19095]" dest="[: [ [19197,19198]"/>
  <match src="expression_statement [29339,29389]" dest="expression_statement [29585,29635]"/>
  <match src="&quot;: &quot; [33847,33848]" dest="&quot;: &quot; [42546,42547]"/>
  <match src="uint256: uint256 [2351,2358]" dest="uint256: uint256 [2370,2377]"/>
  <match src="}: } [8401,8402]" dest="}: } [8214,8215]"/>
  <match src="identifier: _from [28592,28597]" dest="identifier: _from [28768,28773]"/>
  <match src="call_argument [29282,29288]" dest="call_argument [29528,29534]"/>
  <match src="=: = [28015,28016]" dest="=: = [28128,28129]"/>
  <match src="uint256: uint256 [3907,3914]" dest="uint256: uint256 [3900,3907]"/>
  <match src="identifier: RegistryClone [11096,11109]" dest="identifier: RegistryClone [10944,10957]"/>
  <match src="binary_expression [14039,14046]" dest="binary_expression [14034,14041]"/>
  <match src="identifier: newAllowance [23713,23725]" dest="identifier: newAllowance [23986,23998]"/>
  <match src="): ) [27795,27796]" dest="): ) [27908,27909]"/>
  <match src="&quot;: &quot; [33836,33837]" dest="&quot;: &quot; [42535,42536]"/>
  <match src=",: , [21992,21993]" dest=",: , [22158,22159]"/>
  <match src="identifier: data [13142,13146]" dest="identifier: data [13103,13107]"/>
  <match src="function_definition [12687,12835]" dest="function_definition [12555,12703]"/>
  <match src="identifier: claimOwnership [15281,15295]" dest="identifier: claimOwnership [15286,15300]"/>
  <match src="function_body [33818,33856]" dest="function_body [42517,42555]"/>
  <match src="type_name [21624,21631]" dest="type_name [21753,21760]"/>
  <match src="address: address [19417,19424]" dest="address: address [19520,19527]"/>
  <match src="): ) [14523,14524]" dest="): ) [14518,14519]"/>
  <match src="]: ] [11651,11652]" dest="]: ] [11499,11500]"/>
  <match src="type_name [23264,23271]" dest="type_name [23487,23494]"/>
  <match src="parameter [17965,17974]" dest="parameter [17996,18005]"/>
  <match src="identifier: _who [13082,13086]" dest="identifier: _who [13043,13047]"/>
  <match src="address: address [6685,6692]" dest="address: address [6498,6505]"/>
  <match src=",: , [17771,17772]" dest=",: , [17757,17758]"/>
  <match src="): ) [18256,18257]" dest="): ) [18338,18339]"/>
  <match src="type_name [11164,11171]" dest="type_name [11012,11019]"/>
  <match src=",: , [28423,28424]" dest=",: , [28564,28565]"/>
  <match src="uint256: uint256 [25983,25990]" dest="uint256: uint256 [26272,26279]"/>
  <match src="identifier: resolveSender [28080,28093]" dest="identifier: resolveSender [28193,28206]"/>
  <match src="parameter [18154,18163]" dest="parameter [18221,18230]"/>
  <match src="}: } [10687,10688]" dest="}: } [10492,10493]"/>
  <match src="type_name [18407,18414]" dest="type_name [18510,18517]"/>
  <match src="return: return [2026,2032]" dest="return: return [2037,2043]"/>
  <match src="primitive_type [12941,12948]" dest="primitive_type [12807,12814]"/>
  <match src="identifier: attributes [13071,13081]" dest="identifier: attributes [13032,13042]"/>
  <match src="uint256: uint256 [22796,22803]" dest="uint256: uint256 [22984,22991]"/>
  <match src="function_definition [1850,2042]" dest="function_definition [1861,2053]"/>
  <match src="true: true [21770,21774]" dest="true: true [21902,21906]"/>
  <match src="): ) [10844,10845]" dest="): ) [10692,10693]"/>
  <match src=",: , [1467,1468]" dest=",: , [1512,1513]"/>
  <match src="return: return [20870,20876]" dest="return: return [20965,20971]"/>
  <match src="identifier: require [18058,18065]" dest="identifier: require [18104,18111]"/>
  <match src="identifier: _spender [21632,21640]" dest="identifier: _spender [21761,21769]"/>
  <match src="type_name [22625,22629]" dest="type_name [22794,22798]"/>
  <match src="tuple_expression [13117,13173]" dest="tuple_expression [13078,13134]"/>
  <match src="identifier: balanceOf [14461,14470]" dest="identifier: balanceOf [14456,14465]"/>
  <match src="public: public [13580,13586]" dest="public: public [13541,13547]"/>
  <match src="address: address [27981,27988]" dest="address: address [28094,28101]"/>
  <match src="if: if [26878,26880]" dest="if: if [27019,27021]"/>
  <match src="variable_declaration [4106,4115]" dest="variable_declaration [4032,4041]"/>
  <match src="(: ( [13545,13546]" dest="(: ( [13506,13507]"/>
  <match src="{: { [29244,29245]" dest="{: { [29490,29491]"/>
  <match src="(: ( [6322,6323]" dest="(: ( [6135,6136]"/>
  <match src="address: address [26174,26181]" dest="address: address [34322,34329]"/>
  <match src="event_paramater [9890,9909]" dest="event_paramater [9695,9714]"/>
  <match src="type_name [30719,30726]" dest="type_name [30964,30971]"/>
  <match src="member_expression [29339,29373]" dest="member_expression [29585,29619]"/>
  <match src="type_name [999,1006]" dest="type_name [1036,1043]"/>
  <match src="address: address [23775,23782]" dest="address: address [24058,24065]"/>
  <match src="): ) [28251,28252]" dest="): ) [28364,28365]"/>
  <match src="uint160: uint160 [25952,25959]" dest="uint160: uint160 [26241,26248]"/>
  <match src="true: true [20877,20881]" dest="true: true [20972,20976]"/>
  <match src="type_name [27527,27534]" dest="type_name [27640,27647]"/>
  <match src=",: , [13128,13129]" dest=",: , [13089,13090]"/>
  <match src="): ) [27726,27727]" dest="): ) [27839,27840]"/>
  <match src="address: address [26357,26364]" dest="address: address [26499,26506]"/>
  <match src="identifier: transferFrom [28571,28583]" dest="identifier: transferFrom [28737,28749]"/>
  <match src="call_argument [4785,4786]" dest="call_argument [4719,4720]"/>
  <match src="returns: returns [33715,33722]" dest="returns: returns [42414,42421]"/>
  <match src="identifier: WRITE_PERMISSION [10647,10663]" dest="identifier: WRITE_PERMISSION [10452,10468]"/>
  <match src="returns: returns [13425,13432]" dest="returns: returns [13386,13393]"/>
  <match src="primitive_type [6067,6074]" dest="primitive_type [5880,5887]"/>
  <match src="identifier: account [6035,6042]" dest="identifier: account [5848,5855]"/>
  <match src=".: . [12358,12359]" dest=".: . [12226,12227]"/>
  <match src="uint256: uint256 [21842,21849]" dest="uint256: uint256 [21993,22000]"/>
  <match src="type_cast_expression [25952,25965]" dest="type_cast_expression [26241,26254]"/>
  <match src="primitive_type [27717,27721]" dest="primitive_type [27830,27834]"/>
  <match src="parameter [21842,21861]" dest="parameter [21993,22012]"/>
  <match src="return: return [13291,13297]" dest="return: return [13252,13258]"/>
  <match src="identifier: ModularStandardToken [27466,27486]" dest="identifier: ModularStandardToken [27581,27601]"/>
  <match src="else: else [26637,26641]" dest="else: else [26778,26782]"/>
  <match src="visibility [27682,27690]" dest="visibility [27795,27803]"/>
  <match src="{: { [29324,29325]" dest="{: { [29570,29571]"/>
  <match src="}: } [13506,13507]" dest="}: } [13467,13468]"/>
  <match src="primitive_type [21863,21870]" dest="primitive_type [22023,22030]"/>
  <match src="modifier_invocation [11591,11600]" dest="modifier_invocation [11439,11448]"/>
  <match src="]: ] [11253,11254]" dest="]: ] [11101,11102]"/>
  <match src="boolean_literal [22724,22728]" dest="boolean_literal [22893,22897]"/>
  <match src="type_name [10123,10136]" dest="type_name [9928,9941]"/>
  <match src="primitive_type [20006,20013]" dest="primitive_type [20105,20112]"/>
  <match src="): ) [28038,28039]" dest="): ) [28151,28152]"/>
  <match src="binary_expression [26103,26135]" dest="binary_expression [26392,26424]"/>
  <match src="primitive_type [5380,5386]" dest="primitive_type [5280,5286]"/>
  <match src="identifier: a [1969,1970]" dest="identifier: a [1980,1981]"/>
  <match src="(: ( [26356,26357]" dest="(: ( [26498,26499]"/>
  <match src="identifier: _spender [23334,23342]" dest="identifier: _spender [23572,23580]"/>
  <match src="block_statement [23670,23737]" dest="block_statement [23943,24010]"/>
  <match src="}: } [13339,13340]" dest="}: } [13300,13301]"/>
  <match src="type_name [13014,13021]" dest="type_name [12947,12954]"/>
  <match src="comment: // File: @trusttoken/trusttokens/contracts/ERC20.sol [18578,18630]" dest="comment: // File: contracts/trusttokens/ValSafeMath.sol [17463,17509]"/>
  <match src="): ) [13172,13173]" dest="): ) [13133,13134]"/>
  <match src="primitive_type [20797,20801]" dest="primitive_type [20892,20896]"/>
  <match src="function_body [3299,3364]" dest="function_body [3326,3391]"/>
  <match src="{: { [21894,21895]" dest="{: { [22060,22061]"/>
  <match src="binary_expression [26029,26039]" dest="binary_expression [26318,26328]"/>
  <match src="identifier: result [18102,18108]" dest="identifier: result [18148,18154]"/>
  <match src="if_statement [26878,27116]" dest="if_statement [27019,27257]"/>
  <match src="type_name [2317,2324]" dest="type_name [2336,2343]"/>
  <match src="=: = [12459,12460]" dest="=: = [12327,12328]"/>
  <match src="identifier: _value [28541,28547]" dest="identifier: _value [28705,28711]"/>
  <match src="number_literal: 0xff00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff [24828,24894]" dest="number_literal: 0xff00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff [25107,25173]"/>
  <match src="uint256: uint256 [24553,24560]" dest="uint256: uint256 [24852,24859]"/>
  <match src="uint256: uint256 [14437,14444]" dest="uint256: uint256 [14432,14439]"/>
  <match src="primitive_type [27705,27712]" dest="primitive_type [27818,27825]"/>
  <match src="state_mutability [25396,25400]" dest="state_mutability [25651,25655]"/>
  <match src="primitive_type [21642,21646]" dest="primitive_type [21771,21778]"/>
  <match src="&quot;: &quot; [31406,31407]" dest="&quot;: &quot; [31630,31631]"/>
  <match src="returns: returns [3971,3978]" dest="returns: returns [3964,3971]"/>
  <match src="string [2699,2734]" dest="string [2718,2753]"/>
  <match src="identifier: _addedValue [21943,21954]" dest="identifier: _addedValue [22109,22120]"/>
  <match src="identifier: ProxyStorage [15693,15705]" dest="identifier: ProxyStorage [15685,15697]"/>
  <match src="comment: // the canWriteTo-foo attribute set (in that same Registry) [10409,10468]" dest="comment: // the canWriteTo-foo attribute set (in that same Registry) [10214,10273]"/>
  <match src="modifier_invocation [15305,15321]" dest="modifier_invocation [15310,15326]"/>
  <match src="uint256: uint256 [13725,13732]" dest="uint256: uint256 [13705,13712]"/>
  <match src="address: address [23444,23451]" dest="address: address [23692,23699]"/>
  <match src="variable_declaration [999,1008]" dest="variable_declaration [1036,1045]"/>
  <match src="[: [ [13308,13309]" dest="[: [ [13269,13270]"/>
  <match src="=&gt;: =&gt; [15912,15914]" dest="=&gt;: =&gt; [15900,15902]"/>
  <match src="visibility [23492,23500]" dest="visibility [23764,23772]"/>
  <match src="constant: constant [24136,24144]" dest="constant: constant [24439,24447]"/>
  <match src="{: { [5784,5785]" dest="{: { [5597,5598]"/>
  <match src="state_variable_declaration [24553,24663]" dest="state_variable_declaration [24852,24962]"/>
  <match src="identifier: sub [17950,17953]" dest="identifier: sub [17962,17965]"/>
  <match src="uint256: uint256 [8585,8592]" dest="uint256: uint256 [8413,8420]"/>
  <match src="(: ( [18902,18903]" dest="(: ( [19005,19006]"/>
  <match src="state_mutability [30799,30803]" dest="state_mutability [31044,31048]"/>
  <match src="identifier: errorMessage [1972,1984]" dest="identifier: errorMessage [1983,1995]"/>
  <match src="parameter [28782,28796]" dest="parameter [28984,28998]"/>
  <match src="visibility [30698,30704]" dest="visibility [30943,30949]"/>
  <match src="comment: /**      * @dev Emitted when `value` tokens are moved from one account (`from`) to      * another (`to`).      *      * Note that `value` may be zero.      */ [7915,8078]" dest="comment: /**      * @dev Emitted when `value` tokens are moved from one account (`from`) to      * another (`to`).      *      * Note that `value` may be zero.      */ [7728,7891]"/>
  <match src="identifier: _registry [33072,33081]" dest="identifier: _registry [41773,41782]"/>
  <match src="expression_statement [25461,25504]" dest="expression_statement [25716,25759]"/>
  <match src=",: , [11737,11738]" dest=",: , [11585,11586]"/>
  <match src="): ) [18958,18959]" dest="): ) [19061,19062]"/>
  <match src="identifier: amount [7460,7466]" dest="identifier: amount [7273,7279]"/>
  <match src="uint256: uint256 [15790,15797]" dest="uint256: uint256 [15781,15788]"/>
  <match src="return_statement [33659,33668]" dest="return_statement [42358,42367]"/>
  <match src="): ) [19238,19239]" dest="): ) [19341,19342]"/>
  <match src="parameter [10516,10530]" dest="parameter [10321,10335]"/>
  <match src="type_name [29836,29843]" dest="type_name [30090,30097]"/>
  <match src="identifier: _transferAllArgs [28512,28528]" dest="identifier: _transferAllArgs [28676,28692]"/>
  <match src="member_expression [10981,10991]" dest="member_expression [10829,10839]"/>
  <match src="if_statement [2592,2639]" dest="if_statement [2611,2658]"/>
  <match src="parameter [13023,13030]" dest="parameter [12969,12976]"/>
  <match src="string [12351,12353]" dest="string [12219,12221]"/>
  <match src="(: ( [21717,21718]" dest="(: ( [21849,21850]"/>
  <match src="primitive_type [9428,9435]" dest="primitive_type [9258,9265]"/>
  <match src="identifier: b [2667,2668]" dest="identifier: b [2686,2687]"/>
  <match src="event_paramater [27527,27547]" dest="event_paramater [27640,27660]"/>
  <match src="if_statement [23631,23737]" dest="if_statement [23904,24010]"/>
  <match src="string [19322,19344]" dest="string [19425,19447]"/>
  <match src="function_definition [13515,13674]" dest="function_definition [13476,13635]"/>
  <match src="type_name [8585,8592]" dest="type_name [8413,8420]"/>
  <match src="type_name [7486,7490]" dest="type_name [7299,7303]"/>
  <match src="identifier: oldValue [22872,22880]" dest="identifier: oldValue [23075,23083]"/>
  <match src="identifier: onlyOwner [14631,14640]" dest="identifier: onlyOwner [14629,14638]"/>
  <match src="call_argument [26182,26188]" dest="call_argument [35121,35127]"/>
  <match src="[: [ [11109,11110]" dest="[: [ [10957,10958]"/>
  <match src="): ) [28547,28548]" dest="): ) [28711,28712]"/>
  <match src="identifier: _attribute [11554,11564]" dest="identifier: _attribute [11402,11412]"/>
  <match src="else: else [27023,27027]" dest="else: else [27164,27168]"/>
  <match src="type_name [13797,13810]" dest="type_name [13792,13805]"/>
  <match src="uint256: uint256 [12121,12128]" dest="uint256: uint256 [11983,11990]"/>
  <match src="type_name [32759,32766]" dest="type_name [41458,41465]"/>
  <match src="=: = [13879,13880]" dest="=: = [13874,13875]"/>
  <match src="return: return [22717,22723]" dest="return: return [22886,22892]"/>
  <match src="view: view [12982,12986]" dest="view: view [12866,12870]"/>
  <match src="type_name [24070,24077]" dest="type_name [24373,24380]"/>
  <match src="parameter [23476,23490]" dest="parameter [23742,23756]"/>
  <match src="call_argument [29652,29657]" dest="call_argument [29906,29911]"/>
  <match src="visibility [5408,5416]" dest="visibility [5308,5316]"/>
  <match src="indexed: indexed [8367,8374]" dest="indexed: indexed [8180,8187]"/>
  <match src="mapping: mapping [15895,15902]" dest="mapping: mapping [15884,15891]"/>
  <match src="user_defined_type [24022,24034]" dest="user_defined_type [24325,24337]"/>
  <match src="call_expression [33428,33452]" dest="call_expression [42136,42160]"/>
  <match src="member_expression [28850,28860]" dest="member_expression [29052,29062]"/>
  <match src="member_expression [11862,11892]" dest="member_expression [11710,11737]"/>
  <match src="type_name [11096,11111]" dest="type_name [10944,10959]"/>
  <match src="function_definition [7810,7907]" dest="function_definition [7623,7720]"/>
  <match src="modifier_invocation [32019,32035]" dest="modifier_invocation [32250,32266]"/>
  <match src="bool: bool [7486,7490]" dest="bool: bool [7299,7303]"/>
  <match src="{: { [33918,33919]" dest="{: { [42617,42618]"/>
  <match src="uint256: uint256 [25249,25256]" dest="uint256: uint256 [25505,25512]"/>
  <match src="identifier: ModularBasicToken [19813,19830]" dest="identifier: ModularBasicToken [19916,19933]"/>
  <match src="identifier: value [20062,20067]" dest="identifier: value [20161,20166]"/>
  <match src="identifier: hasAttribute [10599,10611]" dest="identifier: hasAttribute [10404,10416]"/>
  <match src="identifier: syncAttributeValue [25830,25848]" dest="identifier: syncAttributeValue [26085,26103]"/>
  <match src="primitive_type [19258,19265]" dest="primitive_type [19361,19368]"/>
  <match src="expression_statement [19111,19174]" dest="expression_statement [19214,19277]"/>
  <match src="if_statement [27807,28056]" dest="if_statement [27920,28169]"/>
  <match src="=: = [22881,22882]" dest="=: = [23084,23085]"/>
  <match src="identifier: owner [30690,30695]" dest="identifier: owner [30935,30940]"/>
  <match src="comment: // Fork of OpenZeppelin's BasicToken [18668,18704]" dest="comment: // Fork of OpenZeppelin's BasicToken [18771,18807]"/>
  <match src="identifier: confirmWrite [10483,10495]" dest="identifier: confirmWrite [10288,10300]"/>
  <match src="comment: /**     * @dev Allows the current owner to set the pendingOwner address.     * @param newOwner The address to transfer ownership to.     */ [14925,15067]" dest="comment: /**      * @dev Allows the current owner to set the pendingOwner address.      * @param newOwner The address to transfer ownership to.      */ [14925,15070]"/>
  <match src="bytes32: bytes32 [9708,9715]" dest="bytes32: bytes32 [9538,9545]"/>
  <match src="type_name [6685,6692]" dest="type_name [6498,6505]"/>
  <match src="call_argument [23587,23593]" dest="call_argument [23860,23866]"/>
  <match src="uint256: uint256 [20940,20947]" dest="uint256: uint256 [21054,21061]"/>
  <match src="]: ] [26740,26741]" dest="]: ] [26881,26882]"/>
  <match src="(: ( [25468,25469]" dest="(: ( [25723,25724]"/>
  <match src="identifier: attributes [28137,28147]" dest="identifier: attributes [28250,28260]"/>
  <match src="expression_statement [30095,30119]" dest="expression_statement [30357,30381]"/>
  <match src="identifier: attributes [12788,12798]" dest="identifier: attributes [12656,12666]"/>
  <match src="function_body [11996,12052]" dest="function_body [11830,11886]"/>
  <match src="identifier: _to [27783,27786]" dest="identifier: _to [27896,27899]"/>
  <match src="(: ( [22567,22568]" dest="(: ( [22733,22734]"/>
  <match src=",: , [3916,3917]" dest=",: , [3909,3910]"/>
  <match src="if: if [2592,2594]" dest="if: if [2611,2613]"/>
  <match src="{: { [23531,23532]" dest="{: { [23804,23805]"/>
  <match src="=: = [2006,2007]" dest="=: = [2017,2018]"/>
  <match src="call_expression [29021,29047]" dest="call_expression [29267,29293]"/>
  <match src="assignment_expression [17865,17879]" dest="assignment_expression [17875,17889]"/>
  <match src=",: , [29038,29039]" dest=",: , [29284,29285]"/>
  <match src="type_name [18219,18226]" dest="type_name [18301,18308]"/>
  <match src="array_access [12211,12239]" dest="array_access [12079,12107]"/>
  <match src="&lt;=: &lt;= [1966,1968]" dest="&lt;=: &lt;= [1977,1979]"/>
  <match src=",: , [20763,20764]" dest=",: , [20858,20859]"/>
  <match src="uint256: uint256 [979,986]" dest="uint256: uint256 [1016,1023]"/>
  <match src="number_literal: 0x697352656769737465726564436f6e7472616374000000000000000000000000 [24334,24400]" dest="number_literal: 0x697352656769737465726564436f6e7472616374000000000000000000000000 [24637,24703]"/>
  <match src="identifier: sub [1386,1389]" dest="identifier: sub [1431,1434]"/>
  <match src="comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP. Does not include  * the optional functions; to access them see {ERC20Detailed}.  */ [5612,5765]" dest="comment: // File: @openzeppelin/contracts/token/ERC20/IERC20.sol [5418,5473]"/>
  <match src="visibility [15872,15878]" dest="visibility [15861,15867]"/>
  <match src="identifier: result [17846,17852]" dest="identifier: result [17856,17862]"/>
  <match src="function: function [7810,7818]" dest="function: function [7623,7631]"/>
  <match src="block_statement [26785,26861]" dest="block_statement [26926,27002]"/>
  <match src="type_name [9420,9453]" dest="type_name [9250,9283]"/>
  <match src="function_body [23307,23413]" dest="function_body [23545,23651]"/>
  <match src="function_body [4763,4826]" dest="function_body [4697,4760]"/>
  <match src="parameter [28094,28107]" dest="parameter [28207,28220]"/>
  <match src="number_literal: 0 [26946,26947]" dest="number_literal: 0 [27087,27088]"/>
  <match src="binary_expression [11678,11693]" dest="binary_expression [11526,11541]"/>
  <match src="(: ( [31812,31813]" dest="(: ( [32041,32042]"/>
  <match src="(: ( [27704,27705]" dest="(: ( [27817,27818]"/>
  <match src="&gt;=: &gt;= [17905,17907]" dest="&gt;=: &gt;= [17915,17917]"/>
  <match src="type_name [12709,12716]" dest="type_name [12577,12584]"/>
  <match src="primitive_type [19860,19867]" dest="primitive_type [19963,19970]"/>
  <match src="primitive_type [6342,6349]" dest="primitive_type [6155,6162]"/>
  <match src="state_variable_declaration [15822,15889]" dest="state_variable_declaration [15813,15878]"/>
  <match src="return: return [3310,3316]" dest="return: return [3337,3343]"/>
  <match src="]: ] [12803,12804]" dest="]: ] [12671,12672]"/>
  <match src="identifier: _value [12256,12262]" dest="identifier: _value [12124,12130]"/>
  <match src="assignment_expression [26056,26077]" dest="assignment_expression [26345,26366]"/>
  <match src="variable_declaration_statement [27739,27797]" dest="variable_declaration_statement [27852,27910]"/>
  <match src="): ) [29524,29525]" dest="): ) [29778,29779]"/>
  <match src=".: . [13888,13889]" dest=".: . [13883,13884]"/>
  <match src="(: ( [33802,33803]" dest="(: ( [42501,42502]"/>
  <match src="primitive_type [8891,8895]" dest="primitive_type [8721,8725]"/>
  <match src="identifier: name [33775,33779]" dest="identifier: name [42474,42478]"/>
  <match src="identifier: _who [19366,19370]" dest="identifier: _who [19469,19473]"/>
  <match src="identifier: _who [19304,19308]" dest="identifier: _who [19407,19411]"/>
  <match src="parameter [8565,8583]" dest="parameter [8384,8402]"/>
  <match src="uint256: uint256 [8384,8391]" dest="uint256: uint256 [8197,8204]"/>
  <match src="contract_body [683,5514]" dest="contract_body [712,5414]"/>
  <match src="call_argument [21092,21098]" dest="call_argument [21221,21227]"/>
  <match src="identifier: SetAttribute [12312,12324]" dest="identifier: SetAttribute [12180,12192]"/>
  <match src="primitive_type [945,952]" dest="primitive_type [982,989]"/>
  <match src="uint256: uint256 [1874,1881]" dest="uint256: uint256 [1885,1892]"/>
  <match src="(: ( [3906,3907]" dest="(: ( [3899,3900]"/>
  <match src="member_expression [14496,14510]" dest="member_expression [14491,14505]"/>
  <match src="identifier: _to [29273,29276]" dest="identifier: _to [29519,29522]"/>
  <match src="type_name [27282,27289]" dest="type_name [27410,27417]"/>
  <match src="parameter [6740,6747]" dest="parameter [6553,6560]"/>
  <match src="call_argument [29072,29077]" dest="call_argument [29318,29323]"/>
  <match src="primitive_type [1390,1397]" dest="primitive_type [1435,1442]"/>
  <match src="): ) [29090,29091]" dest="): ) [29336,29337]"/>
  <match src="return_type_definition [28807,28821]" dest="return_type_definition [29009,29023]"/>
  <match src="type_name [9439,9452]" dest="type_name [9269,9282]"/>
  <match src="parameter [18989,19001]" dest="parameter [19092,19104]"/>
  <match src="revert_statement [33544,33574]" dest="revert_statement [42243,42273]"/>
  <match src="identifier: _who [10788,10792]" dest="identifier: _who [10603,10607]"/>
  <match src="identifier: _tokenHolder [22893,22905]" dest="identifier: _tokenHolder [23096,23108]"/>
  <match src="string_literal [9679,9692]" dest="string_literal [9509,9522]"/>
  <match src="primitive_type [27739,27746]" dest="primitive_type [27852,27859]"/>
  <match src="identifier: _value [23871,23877]" dest="identifier: _value [24178,24184]"/>
  <match src="identifier: value [8682,8687]" dest="identifier: value [8516,8521]"/>
  <match src="event: event [9871,9876]" dest="event: event [9676,9681]"/>
  <match src="identifier: _who [11038,11042]" dest="identifier: _who [10886,10890]"/>
  <match src="/: / [2689,2690]" dest="/: / [2708,2709]"/>
  <match src="=: = [33099,33100]" dest="=: = [41800,41801]"/>
  <match src="parameter [33364,33375]" dest="parameter [42072,42083]"/>
  <match src="function: function [12060,12068]" dest="function: function [11894,11902]"/>
  <match src="primitive_type [9633,9640]" dest="primitive_type [9463,9470]"/>
  <match src="identifier: value [18953,18958]" dest="identifier: value [19056,19061]"/>
  <match src="comment: /**      * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.      *      * Beware that changing an allowance with this method brings the risk that someone may use both the old      * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this      * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:      * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      * @param _spender The address which will spend the funds.      * @param _value The amount of tokens to be spent.      */ [20081,20724]" dest="comment: /**      * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.      *      * Beware that changing an allowance with this method brings the risk that someone may use both the old      * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this      * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:      * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      * @param _spender The address which will spend the funds.      * @param _value The amount of tokens to be spent.      */ [20176,20819]"/>
  <match src="emit: emit [31185,31189]" dest="emit: emit [31407,31411]"/>
  <match src="): ) [27786,27787]" dest="): ) [27899,27900]"/>
  <match src="call_argument [25960,25964]" dest="call_argument [26249,26253]"/>
  <match src="=: = [10949,10950]" dest="=: = [10797,10798]"/>
  <match src="(: ( [15295,15296]" dest="(: ( [15300,15301]"/>
  <match src="function_body [33648,33675]" dest="function_body [42347,42374]"/>
  <match src=",: , [4718,4719]" dest=",: , [4652,4653]"/>
  <match src="call_argument [20848,20858]" dest="call_argument [20943,20953]"/>
  <match src="identifier: sub [19310,19313]" dest="identifier: sub [19413,19416]"/>
  <match src="(: ( [3320,3321]" dest="(: ( [3347,3348]"/>
  <match src=",: , [21840,21841]" dest=",: , [21982,21983]"/>
  <match src="[: [ [23694,23695]" dest="[: [ [23967,23968]"/>
  <match src="{: { [12770,12771]" dest="{: { [12638,12639]"/>
  <match src="type_name [10555,10559]" dest="type_name [10360,10364]"/>
  <match src="function_definition [30768,30861]" dest="function_definition [31013,31106]"/>
  <match src="assignment_expression [29623,29666]" dest="assignment_expression [29877,29920]"/>
  <match src="primitive_type [18418,18424]" dest="primitive_type [18530,18536]"/>
  <match src="]: ] [22905,22906]" dest="]: ] [23108,23109]"/>
  <match src="public: public [8865,8871]" dest="public: public [8695,8701]"/>
  <match src="call_argument [12264,12266]" dest="call_argument [12132,12134]"/>
  <match src="return_type_definition [23501,23531]" dest="return_type_definition [23773,23803]"/>
  <match src="visibility [28443,28451]" dest="visibility [28599,28607]"/>
  <match src="-: - [18113,18114]" dest="-: - [18159,18160]"/>
  <match src="identifier: subscribers [11130,11141]" dest="identifier: subscribers [10978,10989]"/>
  <match src="string: string [17784,17790]" dest="string: string [17788,17794]"/>
  <match src="returns: returns [27696,27703]" dest="returns: returns [27809,27816]"/>
  <match src="array_access [26968,26983]" dest="array_access [27109,27124]"/>
  <match src="{: { [23307,23308]" dest="{: { [23545,23546]"/>
  <match src="): ) [29387,29388]" dest="): ) [29633,29634]"/>
  <match src="uint256: uint256 [3918,3925]" dest="uint256: uint256 [3911,3918]"/>
  <match src="identifier: RegistryClone [9719,9732]" dest="identifier: RegistryClone [9549,9562]"/>
  <match src="address: address [30906,30913]" dest="address: address [31141,31148]"/>
  <match src="uint256: uint256 [5369,5376]" dest="uint256: uint256 [5269,5276]"/>
  <match src="]: ] [11761,11762]" dest="]: ] [11609,11610]"/>
  <match src="function: function [18130,18138]" dest="function: function [18178,18186]"/>
  <match src="type_name [6067,6074]" dest="type_name [5880,5887]"/>
  <match src="call_argument [10612,10618]" dest="call_argument [10417,10423]"/>
  <match src="bytes32: bytes32 [12101,12108]" dest="bytes32: bytes32 [11954,11961]"/>
  <match src="call_argument [1043,1072]" dest="call_argument [1080,1109]"/>
  <match src="member_expression [23346,23375]" dest="member_expression [23584,23613]"/>
  <match src="identifier: index [13913,13918]" dest="identifier: index [13908,13913]"/>
  <match src="interface_declaration [8492,8613]" dest="interface_declaration [8292,8447]"/>
  <match src="identifier: b [1882,1883]" dest="identifier: b [1893,1894]"/>
  <match src="primitive_type [3929,3935]" dest="primitive_type [3922,3928]"/>
  <match src="binary_expression [2596,2602]" dest="binary_expression [2615,2621]"/>
  <match src="function_body [31354,31428]" dest="function_body [31578,31652]"/>
  <match src="identifier: data [13130,13134]" dest="identifier: data [13091,13095]"/>
  <match src="call_argument [10973,10979]" dest="call_argument [10821,10827]"/>
  <match src="returns: returns [7892,7899]" dest="returns: returns [7705,7712]"/>
  <match src="return_statement [4774,4819]" dest="return_statement [4708,4753]"/>
  <match src="constant: constant [24199,24207]" dest="constant: constant [24502,24510]"/>
  <match src="type_name [14256,14271]" dest="type_name [14251,14266]"/>
  <match src="identifier: StopSubscription [11710,11726]" dest="identifier: StopSubscription [11558,11574]"/>
  <match src="return_type_definition [25401,25419]" dest="return_type_definition [25656,25674]"/>
  <match src="primitive_type [5369,5376]" dest="primitive_type [5269,5276]"/>
  <match src="identifier: attribute [9919,9928]" dest="identifier: attribute [9724,9733]"/>
  <match src="=: = [29160,29161]" dest="=: = [29406,29407]"/>
  <match src="identifier: _from [29374,29379]" dest="identifier: _from [29620,29625]"/>
  <match src="primitive_type [17965,17972]" dest="primitive_type [17996,18003]"/>
  <match src="(: ( [10554,10555]" dest="(: ( [10359,10360]"/>
  <match src="(: ( [12995,12996]" dest="(: ( [12888,12889]"/>
  <match src="(: ( [3289,3290]" dest="(: ( [3316,3317]"/>
  <match src="[: [ [14173,14174]" dest="[: [ [14168,14169]"/>
  <match src="(: ( [33488,33489]" dest="(: ( [42196,42197]"/>
  <match src="identifier: _who [12717,12721]" dest="identifier: _who [12585,12589]"/>
  <match src="identifier: _subAllowance [23430,23443]" dest="identifier: _subAllowance [23668,23681]"/>
  <match src="variable_declaration_statement [22864,22917]" dest="variable_declaration_statement [23067,23120]"/>
  <match src="primitive_type [4709,4716]" dest="primitive_type [4643,4650]"/>
  <match src="array_access [23346,23371]" dest="array_access [23584,23609]"/>
  <match src="identifier: amount [27565,27571]" dest="identifier: amount [27678,27684]"/>
  <match src="identifier: msg [31582,31585]" dest="identifier: msg [31808,31811]"/>
  <match src="expression_statement [1956,1986]" dest="expression_statement [1967,1997]"/>
  <match src="type_name [14380,14386]" dest="type_name [14375,14381]"/>
  <match src="type_name [25410,25418]" dest="type_name [25665,25673]"/>
  <match src="primitive_type [22822,22829]" dest="primitive_type [23019,23026]"/>
  <match src="bool: bool [22625,22629]" dest="bool: bool [22794,22798]"/>
  <match src="type_name [28381,28388]" dest="type_name [28504,28511]"/>
  <match src="address: address [30813,30820]" dest="address: address [31058,31065]"/>
  <match src="(: ( [32120,32121]" dest="(: ( [32351,32352]"/>
  <match src="visibility [15298,15304]" dest="visibility [15303,15309]"/>
  <match src="type_name [30906,30913]" dest="type_name [31141,31148]"/>
  <match src="type_name [33364,33371]" dest="type_name [42072,42079]"/>
  <match src="call_expression [12163,12199]" dest="call_expression [12031,12067]"/>
  <match src="function_definition [33683,33758]" dest="function_definition [42382,42457]"/>
  <match src="call_argument [4075,4080]" dest="call_argument [4001,4006]"/>
  <match src="function_body [23832,23885]" dest="function_body [24139,24192]"/>
  <match src="(: ( [27526,27527]" dest="(: ( [27639,27640]"/>
  <match src="(: ( [33014,33015]" dest="(: ( [41715,41716]"/>
  <match src="using_directive [18850,18880]" dest="using_directive [18953,18983]"/>
  <match src="parameter [5369,5378]" dest="parameter [5269,5278]"/>
  <match src="return: return [33742,33748]" dest="return: return [42441,42447]"/>
  <match src="address: address [25483,25490]" dest="address: address [25738,25745]"/>
  <match src="array_access [13461,13489]" dest="array_access [13422,13450]"/>
  <match src="function_body [29526,29800]" dest="function_body [29780,30054]"/>
  <match src="return_statement [22717,22729]" dest="return_statement [22886,22898]"/>
  <match src="identifier: b [4075,4076]" dest="identifier: b [4001,4002]"/>
  <match src="primitive_type [26174,26181]" dest="primitive_type [34322,34329]"/>
  <match src=".: . [14310,14311]" dest=".: . [14305,14306]"/>
  <match src="returns: returns [28637,28644]" dest="returns: returns [28837,28844]"/>
  <match src="): ) [3987,3988]" dest="): ) [3980,3981]"/>
  <match src="call_argument [29003,29008]" dest="call_argument [29249,29254]"/>
  <match src="true [22724,22728]" dest="true [22893,22897]"/>
  <match src="address: address [28951,28958]" dest="address: address [29174,29181]"/>
  <match src="primitive_type [7901,7905]" dest="primitive_type [7714,7718]"/>
  <match src="primitive_type [28646,28650]" dest="primitive_type [28846,28850]"/>
  <match src="{: { [25919,25920]" dest="{: { [26208,26209]"/>
  <match src="call_expression [29339,29359]" dest="call_expression [29585,29605]"/>
  <match src="external: external [8601,8609]" dest="external: external [8435,8443]"/>
  <match src="identifier: _who [13554,13558]" dest="identifier: _who [13515,13519]"/>
  <match src="identifier: registry_ [32743,32752]" dest="identifier: registry_ [41442,41451]"/>
  <match src="identifier: _addAllowance [23236,23249]" dest="identifier: _addAllowance [23440,23453]"/>
  <match src="internal: internal [2328,2336]" dest="internal: internal [2347,2355]"/>
  <match src="identifier: owner [20022,20027]" dest="identifier: owner [20121,20126]"/>
  <match src="function_definition [10474,10688]" dest="function_definition [10279,10493]"/>
  <match src="number_literal: 0 [11222,11223]" dest="number_literal: 0 [11070,11071]"/>
  <match src="indexed: indexed [18911,18918]" dest="indexed: indexed [19014,19021]"/>
  <match src="update_expression [11212,11220]" dest="update_expression [11060,11067]"/>
  <match src="identifier: _transferFromAllArgs [28663,28683]" dest="identifier: _transferFromAllArgs [28863,28883]"/>
  <match src=",: , [28962,28963]" dest=",: , [29185,29186]"/>
  <match src="public: public [30698,30704]" dest="public: public [30943,30949]"/>
  <match src="function: function [3894,3902]" dest="function: function [3887,3895]"/>
  <match src="identifier: msg [28850,28853]" dest="identifier: msg [29052,29055]"/>
  <match src="[: [ [23852,23853]" dest="[: [ [24159,24160]"/>
  <match src="{: { [32036,32037]" dest="{: { [32267,32268]"/>
  <match src="(: ( [29179,29180]" dest="(: ( [29425,29426]"/>
  <match src="{: { [13280,13281]" dest="{: { [13241,13242]"/>
  <match src="member_expression [30143,30158]" dest="member_expression [30405,30420]"/>
  <match src="modifier_invocation [14286,14295]" dest="modifier_invocation [14281,14290]"/>
  <match src="identifier: owner_ [32121,32127]" dest="identifier: owner_ [32352,32358]"/>
  <match src="identifier: _setBalance [19405,19416]" dest="identifier: _setBalance [19508,19519]"/>
  <match src="identifier: registry [33164,33172]" dest="identifier: registry [41865,41873]"/>
  <match src="=: = [27841,27842]" dest="=: = [27954,27955]"/>
  <match src="external: external [7468,7476]" dest="external: external [7281,7289]"/>
  <match src="identifier: _pendingOwner [32163,32176]" dest="identifier: _pendingOwner [32394,32407]"/>
  <match src="identifier: _to [29079,29082]" dest="identifier: _to [29325,29328]"/>
  <match src="call_argument [28484,28492]" dest="call_argument [28648,28656]"/>
  <match src="): ) [10245,10246]" dest="): ) [10050,10051]"/>
  <match src="expression_statement [31621,31623]" dest="expression_statement [31847,31849]"/>
  <match src="comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts with custom message on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      *      * _Available since v2.4.0._      */ [3372,3888]" dest="comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts with custom message on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [3399,3881]"/>
  <match src="identifier: a [5366,5367]" dest="identifier: a [5266,5267]"/>
  <match src=",: , [27547,27548]" dest=",: , [27660,27661]"/>
  <match src="primitive_type [28242,28249]" dest="primitive_type [28355,28362]"/>
  <match src="(: ( [26881,26882]" dest="(: ( [27022,27023]"/>
  <match src="(: ( [33700,33701]" dest="(: ( [42399,42400]"/>
  <match src="primitive_type [8551,8558]" dest="primitive_type [8361,8368]"/>
  <match src="identifier: _approveAllArgs [20906,20921]" dest="identifier: _approveAllArgs [21001,21016]"/>
  <match src="array_access [10920,10948]" dest="array_access [10768,10796]"/>
  <match src="visibility [5888,5896]" dest="visibility [5701,5709]"/>
  <match src="--: -- [14041,14043]" dest="--: -- [14035,14037]"/>
  <match src="primitive_type [3980,3987]" dest="primitive_type [3973,3980]"/>
  <match src="identifier: totalSupply [30129,30140]" dest="identifier: totalSupply [30391,30402]"/>
  <match src="parameter [19210,19222]" dest="parameter [19313,19325]"/>
  <match src="identifier: a [1011,1012]" dest="identifier: a [1048,1049]"/>
  <match src="uint256: uint256 [3980,3987]" dest="uint256: uint256 [3973,3980]"/>
  <match src="function: function [25367,25375]" dest="function: function [25616,25624]"/>
  <match src="parameter [33803,33816]" dest="parameter [42502,42515]"/>
  <match src="primitive_type [29479,29486]" dest="primitive_type [29733,29740]"/>
  <match src="{: { [18235,18236]" dest="{: { [18317,18318]"/>
  <match src="identifier: sender [31377,31383]" dest="identifier: sender [31601,31607]"/>
  <match src="view: view [30799,30803]" dest="view: view [31044,31048]"/>
  <match src="identifier: index [11172,11177]" dest="identifier: index [11020,11025]"/>
  <match src="{: { [11225,11226]" dest="{: { [11073,11074]"/>
  <match src="identifier: c [1035,1036]" dest="identifier: c [1072,1073]"/>
  <match src="identifier: index [13873,13878]" dest="identifier: index [13868,13873]"/>
  <match src=".: . [12191,12192]" dest=".: . [12059,12060]"/>
  <match src="primitive_type [23444,23451]" dest="primitive_type [23692,23699]"/>
  <match src="returns: returns [7477,7484]" dest="returns: returns [7290,7297]"/>
  <match src="number_literal: 0 [28043,28044]" dest="number_literal: 0 [28156,28157]"/>
  <match src="{: { [33468,33469]" dest="{: { [42176,42177]"/>
  <match src="primitive_type [17784,17790]" dest="primitive_type [17788,17794]"/>
  <match src="parameter [23264,23280]" dest="parameter [23487,23503]"/>
  <match src="): ) [29665,29666]" dest="): ) [29919,29920]"/>
  <match src="identifier: onlyPendingOwner [31544,31560]" dest="identifier: onlyPendingOwner [31770,31786]"/>
  <match src="]: ] [13476,13477]" dest="]: ] [13437,13438]"/>
  <match src="identifier: to [29963,29965]" dest="identifier: to [30225,30227]"/>
  <match src="primitive_type [13865,13872]" dest="primitive_type [13860,13867]"/>
  <match src="[: [ [12798,12799]" dest="[: [ [12666,12667]"/>
  <match src="identifier: _spender [21994,22002]" dest="identifier: _spender [22160,22168]"/>
  <match src="return_type_definition [7892,7906]" dest="return_type_definition [7705,7719]"/>
  <match src="string_literal [28292,28311]" dest="string_literal [28405,28424]"/>
  <match src="(: ( [27589,27590]" dest="(: ( [27702,27703]"/>
  <match src="): ) [18368,18369]" dest="): ) [18450,18451]"/>
  <match src="block_statement [29244,29301]" dest="block_statement [29490,29547]"/>
  <match src="parameter [28425,28441]" dest="parameter [28575,28591]"/>
  <match src="{: { [26041,26042]" dest="{: { [26330,26331]"/>
  <match src="{: { [26541,26542]" dest="{: { [26682,26683]"/>
  <match src="parameter [8585,8599]" dest="parameter [8413,8427]"/>
  <match src="): ) [4817,4818]" dest="): ) [4751,4752]"/>
  <match src="): ) [25418,25419]" dest="): ) [25673,25674]"/>
  <match src="library_declaration [17722,18574]" dest="library_declaration [17698,18692]"/>
  <match src="call_argument [1972,1984]" dest="call_argument [1983,1995]"/>
  <match src="identifier: _attribute [25871,25881]" dest="identifier: _attribute [26145,26155]"/>
  <match src="parameter [25410,25418]" dest="parameter [25665,25673]"/>
  <match src="}: } [23096,23097]" dest="}: } [23299,23300]"/>
  <match src="}: } [33948,33949]" dest="}: } [42647,42648]"/>
  <match src="comment: // never remove any storage variables [8787,8824]" dest="comment: // never remove any storage variables [8617,8654]"/>
  <match src="(: ( [10871,10872]" dest="(: ( [10719,10720]"/>
  <match src="identifier: attributes [13628,13638]" dest="identifier: attributes [13589,13599]"/>
  <match src="binary_expression [5459,5465]" dest="binary_expression [5359,5365]"/>
  <match src="identifier: result [17898,17904]" dest="identifier: result [17908,17914]"/>
  <match src="}: } [26384,26385]" dest="}: } [26526,26527]"/>
  <match src="identifier: a [2596,2597]" dest="identifier: a [2615,2616]"/>
  <match src="): ) [25964,25965]" dest="): ) [26253,26254]"/>
  <match src="number_literal: 0 [29894,29895]" dest="number_literal: 0 [30156,30157]"/>
  <match src="type_alias [19844,19855]" dest="type_alias [19947,19958]"/>
  <match src="identifier: _value [29570,29576]" dest="identifier: _value [29824,29830]"/>
  <match src="function: function [12687,12695]" dest="function: function [12555,12563]"/>
  <match src="string_literal [30167,30189]" dest="string_literal [30429,30451]"/>
  <match src="identifier: IERC20 [5777,5783]" dest="identifier: IERC20 [5590,5596]"/>
  <match src="expression_statement [19285,19346]" dest="expression_statement [19388,19449]"/>
  <match src="call_argument [33494,33501]" dest="call_argument [42202,42209]"/>
  <match src="constant: constant [24078,24086]" dest="constant: constant [24381,24389]"/>
  <match src="call_expression [11418,11455]" dest="call_expression [11266,11303]"/>
  <match src="call_expression [17890,17927]" dest="call_expression [17900,17937]"/>
  <match src="array_access [26560,26575]" dest="array_access [26701,26716]"/>
  <match src="public: public [15743,15749]" dest="public: public [15735,15741]"/>
  <match src="=: = [19083,19084]" dest="=: = [19186,19187]"/>
  <match src="binary_expression [18066,18072]" dest="binary_expression [18112,18118]"/>
  <match src=",: , [27294,27295]" dest=",: , [27422,27423]"/>
  <match src="number_literal: 0 [29566,29567]" dest="number_literal: 0 [29820,29821]"/>
  <match src="identifier: _subtractedValue [22591,22607]" dest="identifier: _subtractedValue [22760,22776]"/>
  <match src="identifier: _value [25891,25897]" dest="identifier: _value [26174,26180]"/>
  <match src="comment: // The logic governing who is allowed to set what attributes is abstracted as [9472,9549]" dest="comment: // The logic governing who is allowed to set what attributes is abstracted as [9302,9379]"/>
  <match src="call_expression [4781,4818]" dest="call_expression [4715,4752]"/>
  <match src="identifier: onlyRegistry [25906,25918]" dest="identifier: onlyRegistry [26195,26207]"/>
  <match src="emit: emit [11705,11709]" dest="emit: emit [11553,11557]"/>
  <match src="identifier: b [2012,2013]" dest="identifier: b [2023,2024]"/>
  <match src="type_name [21842,21849]" dest="type_name [21993,22000]"/>
  <match src="identifier: owner_ [30746,30752]" dest="identifier: owner_ [30991,30997]"/>
  <match src="type_name [19417,19424]" dest="type_name [19520,19527]"/>
  <match src="visibility [23298,23306]" dest="visibility [23536,23544]"/>
  <match src="visibility [22609,22615]" dest="visibility [22778,22784]"/>
  <match src="identifier: result [18336,18342]" dest="identifier: result [18418,18424]"/>
  <match src="identifier: b [4728,4729]" dest="identifier: b [4662,4663]"/>
  <match src="struct_member [8722,8740]" dest="struct_member [8556,8574]"/>
  <match src="type_name [19258,19265]" dest="type_name [19361,19368]"/>
  <match src="primitive_type [25952,25959]" dest="primitive_type [26241,26248]"/>
  <match src="call_argument [11489,11499]" dest="call_argument [11337,11347]"/>
  <match src="{: { [31354,31355]" dest="{: { [31578,31579]"/>
  <match src="identifier: _admin [10612,10618]" dest="identifier: _admin [10417,10423]"/>
  <match src="type_name [24437,24444]" dest="type_name [24740,24747]"/>
  <match src="parameter [1401,1410]" dest="parameter [1446,1455]"/>
  <match src="identifier: b [17878,17879]" dest="identifier: b [17888,17889]"/>
  <match src="type_name [19431,19438]" dest="type_name [19534,19541]"/>
  <match src="): ) [27994,27995]" dest="): ) [28107,28108]"/>
  <match src="type_name [15790,15797]" dest="type_name [15781,15788]"/>
  <match src=",: , [19001,19002]" dest=",: , [19104,19105]"/>
  <match src="returns: returns [20788,20795]" dest="returns: returns [20883,20890]"/>
  <match src="call_argument [12176,12186]" dest="call_argument [12044,12054]"/>
  <match src="state_mutability [33184,33188]" dest="state_mutability [41892,41896]"/>
  <match src="=: = [25174,25175]" dest="=: = [25430,25431]"/>
  <match src="true: true [28733,28737]" dest="true: true [28933,28937]"/>
  <match src="primitive_type [25944,25951]" dest="primitive_type [26233,26240]"/>
  <match src="(: ( [14319,14320]" dest="(: ( [14314,14315]"/>
  <match src="variable_declaration [28190,28202]" dest="variable_declaration [28303,28315]"/>
  <match src="parameter [13434,13441]" dest="parameter [13395,13402]"/>
  <match src="comment: // a validator can set an account's &quot;hasPassedKYC/AML&quot; attribute to 1 to indicate [9079,9160]" dest="comment: // a validator can set an account's &quot;hasPassedKYC/AML&quot; attribute to 1 to indicate [8909,8990]"/>
  <match src="event_paramater [9833,9857]" dest="event_paramater [9644,9668]"/>
  <match src="return_statement [4223,4232]" dest="return_statement [4149,4158]"/>
  <match src="array_access [26473,26488]" dest="array_access [26615,26630]"/>
  <match src="identifier: prior [26986,26991]" dest="identifier: prior [27127,27132]"/>
  <match src="struct_member [8698,8712]" dest="struct_member [8532,8546]"/>
  <match src="returns: returns [33632,33639]" dest="returns: returns [42331,42338]"/>
  <match src="parenthesized_expression [26317,26346]" dest="parenthesized_expression [26459,26488]"/>
  <match src="member_expression [14115,14140]" dest="member_expression [14110,14135]"/>
  <match src="array_access [13628,13656]" dest="array_access [13589,13617]"/>
  <match src="identifier: _to [14402,14405]" dest="identifier: _to [14397,14400]"/>
  <match src="event_paramater [9960,9985]" dest="event_paramater [9765,9790]"/>
  <match src=",: , [14392,14393]" dest=",: , [14387,14388]"/>
  <match src="(: ( [12086,12087]" dest="(: ( [11920,11921]"/>
  <match src="function_body [988,1102]" dest="function_body [1025,1139]"/>
  <match src="expression_statement [18328,18370]" dest="expression_statement [18410,18452]"/>
  <match src="parameter [12723,12741]" dest="parameter [12591,12609]"/>
  <match src="identifier: attributes [14158,14168]" dest="identifier: attributes [14153,14163]"/>
  <match src="identifier: pendingOwner [15421,15433]" dest="identifier: pendingOwner [15426,15438]"/>
  <match src="parameter [28951,28962]" dest="parameter [29174,29185]"/>
  <match src="parameter [23282,23296]" dest="parameter [23514,23528]"/>
  <match src="type_name [2306,2313]" dest="type_name [2325,2332]"/>
  <match src="internal: internal [23298,23306]" dest="internal: internal [23536,23544]"/>
  <match src="&quot;: &quot; [4791,4792]" dest="&quot;: &quot; [4725,4726]"/>
  <match src="binary_expression [10580,10595]" dest="binary_expression [10385,10400]"/>
  <match src="function_definition [17749,17935]" dest="function_definition [17725,17945]"/>
  <match src="identifier: tokenFallback [27267,27280]" dest="identifier: tokenFallback [27396,27409]"/>
  <match src="-: - [23067,23068]" dest="-: - [23270,23271]"/>
  <match src="member_expression [14020,14037]" dest="member_expression [14015,14032]"/>
  <match src="function: function [17941,17949]" dest="function: function [17953,17961]"/>
  <match src="expression_statement [18303,18318]" dest="expression_statement [18385,18400]"/>
  <match src="(: ( [23634,23635]" dest="(: ( [23907,23908]"/>
  <match src="identifier: attribute [10202,10211]" dest="identifier: attribute [10007,10016]"/>
  <match src="identifier: balanceOf [19467,19476]" dest="identifier: balanceOf [19570,19579]"/>
  <match src="type_name [18476,18483]" dest="type_name [18594,18601]"/>
  <match src="visibility [33620,33626]" dest="visibility [42319,42325]"/>
  <match src="&amp;: &amp; [28024,28025]" dest="&amp;: &amp; [28137,28138]"/>
  <match src="]: ] [13853,13854]" dest="]: ] [13848,13849]"/>
  <match src="state_mutability [10541,10545]" dest="state_mutability [10346,10350]"/>
  <match src="number_literal: 0xffff00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff [25292,25358]" dest="number_literal: 0xffff00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff [25541,25607]"/>
  <match src="expression_statement [26473,26519]" dest="expression_statement [26615,26661]"/>
  <match src="type_name [27739,27746]" dest="type_name [27852,27859]"/>
  <match src="call_argument [23179,23191]" dest="call_argument [23382,23394]"/>
  <match src="address: address [10010,10017]" dest="address: address [9815,9822]"/>
  <match src="uint256: uint256 [25883,25890]" dest="uint256: uint256 [26166,26173]"/>
  <match src="contract_body [32694,33952]" dest="contract_body [41393,42651]"/>
  <match src="true [21770,21774]" dest="true [21902,21906]"/>
  <match src="function: function [13682,13690]" dest="function: function [13643,13651]"/>
  <match src="{: { [13936,13937]" dest="{: { [13931,13932]"/>
  <match src="identifier: ProxyStorage [18830,18842]" dest="identifier: ProxyStorage [18933,18945]"/>
  <match src="(: ( [14661,14662]" dest="(: ( [14659,14660]"/>
  <match src=".: . [14333,14334]" dest=".: . [14328,14329]"/>
  <match src="identifier: Registry [33198,33206]" dest="identifier: Registry [41906,41914]"/>
  <match src="primitive_type [9960,9967]" dest="primitive_type [9765,9772]"/>
  <match src="identifier: who [14077,14080]" dest="identifier: who [14072,14075]"/>
  <match src="primitive_type [28205,28212]" dest="primitive_type [28318,28325]"/>
  <match src="address: address [28599,28606]" dest="address: address [28784,28791]"/>
  <match src="primitive_type [6027,6034]" dest="primitive_type [5840,5847]"/>
  <match src="returns: returns [25401,25408]" dest="returns: returns [25656,25663]"/>
  <match src="identifier: result [19266,19272]" dest="identifier: result [19369,19375]"/>
  <match src="assignment_expression [26804,26845]" dest="assignment_expression [26945,26986]"/>
  <match src="parameter [14256,14275]" dest="parameter [14251,14270]"/>
  <match src="binary_expression [1011,1016]" dest="binary_expression [1048,1053]"/>
  <match src="!: ! [33015,33016]" dest="!: ! [41716,41717]"/>
  <match src="contract: contract [19780,19788]" dest="contract: contract [19883,19891]"/>
  <match src="state_mutability [13420,13424]" dest="state_mutability [13381,13385]"/>
  <match src="function_definition [31786,31891]" dest="function_definition [32015,32120]"/>
  <match src="{: { [31848,31849]" dest="{: { [32077,32078]"/>
  <match src="type_name [29430,29437]" dest="type_name [29676,29683]"/>
  <match src="&lt;: &lt; [23648,23649]" dest="&lt;: &lt; [23921,23922]"/>
  <match src="}: } [12834,12835]" dest="}: } [12702,12703]"/>
  <match src="return_statement [13454,13500]" dest="return_statement [13415,13461]"/>
  <match src="identifier: _spender [20930,20938]" dest="identifier: _spender [21035,21043]"/>
  <match src="(: ( [19209,19210]" dest="(: ( [19312,19313]"/>
  <match src="call_expression [23346,23405]" dest="call_expression [23584,23643]"/>
  <match src="identifier: result [18484,18490]" dest="identifier: result [18602,18608]"/>
  <match src="state_mutability [3966,3970]" dest="state_mutability [3959,3963]"/>
  <match src="comment: // that account can use the token. This mapping stores that value (1, in the [9166,9242]" dest="comment: // that account can use the token. This mapping stores that value (1, in the [8996,9072]"/>
  <match src="uint256: uint256 [17838,17845]" dest="uint256: uint256 [17848,17855]"/>
  <match src="uint256: uint256 [18031,18038]" dest="uint256: uint256 [18077,18084]"/>
  <match src="variable_declaration [13865,13878]" dest="variable_declaration [13860,13873]"/>
  <match src="): ) [19017,19018]" dest="): ) [19120,19121]"/>
  <match src="identifier: ACCOUNT_BLACKLISTED_INV [24570,24593]" dest="identifier: ACCOUNT_BLACKLISTED_INV [24869,24892]"/>
  <match src="expression_statement [11782,11852]" dest="expression_statement [11630,11700]"/>
  <match src="parameter [5431,5438]" dest="parameter [5331,5338]"/>
  <match src="while: while [11205,11210]" dest="while: while [11053,11058]"/>
  <match src="function_definition [11326,11517]" dest="function_definition [11174,11365]"/>
  <match src="type_name [24785,24792]" dest="type_name [25072,25079]"/>
  <match src="if_statement [26025,26089]" dest="if_statement [26314,26378]"/>
  <match src=",: , [18152,18153]" dest=",: , [18210,18211]"/>
  <match src=",: , [28865,28866]" dest=",: , [29067,29068]"/>
  <match src="): ) [12198,12199]" dest="): ) [12066,12067]"/>
  <match src="array_access [22883,22906]" dest="array_access [23086,23109]"/>
  <match src="type_name [28094,28101]" dest="type_name [28207,28214]"/>
  <match src="=: = [27063,27064]" dest="=: = [27204,27205]"/>
  <match src="call_argument [29709,29715]" dest="call_argument [29963,29969]"/>
  <match src="): ) [4729,4730]" dest="): ) [4663,4664]"/>
  <match src="(: ( [11545,11546]" dest="(: ( [11393,11394]"/>
  <match src="identifier: targets [12521,12528]" dest="identifier: targets [12389,12396]"/>
  <match src="=: = [33133,33134]" dest="=: = [41834,41835]"/>
  <match src="{: { [20987,20988]" dest="{: { [21116,21117]"/>
  <match src="variable_declaration_statement [28190,28220]" dest="variable_declaration_statement [28303,28333]"/>
  <match src="block_statement [23032,23097]" dest="block_statement [23235,23300]"/>
  <match src="return_type_definition [5422,5439]" dest="return_type_definition [5322,5339]"/>
  <match src="public: public [22609,22615]" dest="public: public [22778,22784]"/>
  <match src="return_type_definition [20788,20802]" dest="return_type_definition [20883,20897]"/>
  <match src="block_statement [33529,33585]" dest="block_statement [42228,42284]"/>
  <match src="function_body [20987,21107]" dest="function_body [21116,21236]"/>
  <match src="function_definition [33864,33949]" dest="function_definition [42563,42648]"/>
  <match src="identifier: div [18392,18395]" dest="identifier: div [18476,18479]"/>
  <match src="parameter [28816,28820]" dest="parameter [29018,29022]"/>
  <match src="array_access [19085,19100]" dest="array_access [19188,19203]"/>
  <match src="(: ( [27782,27783]" dest="(: ( [27895,27896]"/>
  <match src="(: ( [33550,33551]" dest="(: ( [42249,42250]"/>
  <match src="function: function [28562,28570]" dest="function: function [28728,28736]"/>
  <match src="type_name [24669,24676]" dest="type_name [24968,24975]"/>
  <match src=",: , [29965,29966]" dest=",: , [30227,30228]"/>
  <match src="(: ( [28815,28816]" dest="(: ( [29017,29018]"/>
  <match src="call_argument [29659,29665]" dest="call_argument [29913,29919]"/>
  <match src="parameter [15100,15116]" dest="parameter [15103,15119]"/>
  <match src="function: function [28751,28759]" dest="function: function [28953,28961]"/>
  <match src="return_type_definition [21667,21681]" dest="return_type_definition [21799,21813]"/>
  <match src="variable_declaration [13951,13971]" dest="variable_declaration [13946,13966]"/>
  <match src="state_mutability [2337,2341]" dest="state_mutability [2356,2360]"/>
  <match src="=: = [18556,18557]" dest="=: = [18674,18675]"/>
  <match src="=: = [25058,25059]" dest="=: = [25325,25326]"/>
  <match src="(: ( [15850,15851]" dest="(: ( [15839,15840]"/>
  <match src="identifier: flags [28213,28218]" dest="identifier: flags [28326,28331]"/>
  <match src="comment: // see RegistrySubscriber [15936,15961]" dest="comment: // see RegistrySubscriber [15924,15949]"/>
  <match src="}: } [19498,19499]" dest="}: } [19601,19602]"/>
  <match src="): ) [28252,28253]" dest="): ) [28365,28366]"/>
  <match src="type_name [23458,23465]" dest="type_name [23715,23722]"/>
  <match src="call_expression [29693,29754]" dest="call_expression [29947,30008]"/>
  <match src="number_literal: 0 [14045,14046]" dest="number_literal: 0 [14040,14041]"/>
  <match src="(: ( [30106,30107]" dest="(: ( [30368,30369]"/>
  <match src="identifier: b [1409,1410]" dest="identifier: b [1454,1455]"/>
  <match src="(: ( [11986,11987]" dest="(: ( [11820,11821]"/>
  <match src="{: { [26675,26676]" dest="{: { [26816,26817]"/>
  <match src="): ) [29158,29159]" dest="): ) [29404,29405]"/>
  <match src="): ) [29850,29851]" dest="): ) [30104,30105]"/>
  <match src="=&gt;: =&gt; [15839,15841]" dest="=&gt;: =&gt; [15829,15831]"/>
  <match src="{: { [24035,24036]" dest="{: { [24338,24339]"/>
  <match src="parameter [18476,18490]" dest="parameter [18594,18608]"/>
  <match src="identifier: _who [19477,19481]" dest="identifier: _who [19580,19584]"/>
  <match src="primitive_type [18945,18952]" dest="primitive_type [19048,19055]"/>
  <match src=",: , [10211,10212]" dest=",: , [10016,10017]"/>
  <match src="primitive_type [18143,18150]" dest="primitive_type [18201,18208]"/>
  <match src="identifier: sender [33105,33111]" dest="identifier: sender [41806,41812]"/>
  <match src="uint144: uint144 [25930,25937]" dest="uint144: uint144 [26219,26226]"/>
  <match src="): ) [13608,13609]" dest="): ) [13569,13570]"/>
  <match src="(: ( [14327,14328]" dest="(: ( [14322,14323]"/>
  <match src="(: ( [14140,14141]" dest="(: ( [14135,14136]"/>
  <match src="primitive_type [10830,10837]" dest="primitive_type [10672,10679]"/>
  <match src="(: ( [10185,10186]" dest="(: ( [9990,9991]"/>
  <match src="type_cast_expression [28205,28219]" dest="type_cast_expression [28318,28332]"/>
  <match src="==: == [31384,31386]" dest="==: == [31608,31610]"/>
  <match src="parameter [7832,7846]" dest="parameter [7645,7659]"/>
  <match src="uint256: uint256 [1863,1870]" dest="uint256: uint256 [1874,1881]"/>
  <match src="comment: // token that requires its users to go through a KYC/AML check - in this case [8996,9073]" dest="comment: // token that requires its users to go through a KYC/AML check - in this case [8826,8903]"/>
  <match src="function_body [25450,25523]" dest="function_body [25705,25778]"/>
  <match src="identifier: OwnershipTransferred [15338,15358]" dest="identifier: OwnershipTransferred [15343,15363]"/>
  <match src="[: [ [9732,9733]" dest="[: [ [9562,9563]"/>
  <match src="identifier: _value [19011,19017]" dest="identifier: _value [19114,19120]"/>
  <match src="{: { [14851,14852]" dest="{: { [14851,14852]"/>
  <match src="identifier: sender [12272,12278]" dest="identifier: sender [12140,12146]"/>
  <match src="state_variable_declaration [15770,15816]" dest="state_variable_declaration [15762,15807]"/>
  <match src="primitive_type [24295,24302]" dest="primitive_type [24598,24605]"/>
  <match src="type_name [19210,19217]" dest="type_name [19313,19320]"/>
  <match src="&quot;: &quot; [14683,14684]" dest="&quot;: &quot; [14681,14682]"/>
  <match src="parameter [17773,17782]" dest="parameter [17768,17777]"/>
  <match src="(: ( [28212,28213]" dest="(: ( [28325,28326]"/>
  <match src="(: ( [30016,30017]" dest="(: ( [30278,30279]"/>
  <match src="expression_statement [12521,12581]" dest="expression_statement [12389,12449]"/>
  <match src="block_statement [30211,30294]" dest="block_statement [30473,30556]"/>
  <match src="comment: /**  * @title Basic token  * @dev Basic version of StandardToken, with no allowances.  */ [18706,18798]" dest="comment: /**  * @title Basic token  * @dev Basic version of StandardToken, with no allowances.  */ [18809,18901]"/>
  <match src="uint256: uint256 [19860,19867]" dest="uint256: uint256 [19963,19970]"/>
  <match src="parameter [12101,12119]" dest="parameter [11954,11972]"/>
  <match src="internal: internal [18196,18204]" dest="internal: internal [18278,18286]"/>
  <match src="}: } [23887,23888]" dest="}: } [24194,24195]"/>
  <match src="return_type_definition [17829,17853]" dest="return_type_definition [17839,17863]"/>
  <match src="number_literal: 0 [28250,28251]" dest="number_literal: 0 [28363,28364]"/>
  <match src=",: , [29901,29902]" dest=",: , [30163,30164]"/>
  <match src="internal: internal [29852,29860]" dest="internal: internal [30106,30114]"/>
  <match src="}: } [30293,30294]" dest="}: } [30555,30556]"/>
  <match src="variable_declaration [11164,11177]" dest="variable_declaration [11012,11025]"/>
  <match src="emit_statement [23165,23212]" dest="emit_statement [23368,23416]"/>
  <match src="user_defined_type [9719,9732]" dest="user_defined_type [9549,9562]"/>
  <match src="identifier: ACCOUNT_HOOK [28026,28038]" dest="identifier: ACCOUNT_HOOK [28139,28151]"/>
  <match src="call_expression [11240,11299]" dest="call_expression [11088,11147]"/>
  <match src="parameter [33377,33392]" dest="parameter [42085,42100]"/>
  <match src="&quot;: &quot; [3354,3355]" dest="&quot;: &quot; [3381,3382]"/>
  <match src="identifier: _admin [10524,10530]" dest="identifier: _admin [10329,10335]"/>
  <match src="}: } [29799,29800]" dest="}: } [30053,30054]"/>
  <match src=",: , [18405,18406]" dest=",: , [18499,18500]"/>
  <match src="): ) [29611,29612]" dest="): ) [29865,29866]"/>
  <match src="primitive_type [8099,8106]" dest="primitive_type [7912,7919]"/>
  <match src=",: , [11499,11500]" dest=",: , [11347,11348]"/>
  <match src="): ) [28178,28179]" dest="): ) [28291,28292]"/>
  <match src="type_name [29445,29452]" dest="type_name [29691,29698]"/>
  <match src="identifier: targets [11120,11127]" dest="identifier: targets [10968,10975]"/>
  <match src="uint256: uint256 [3245,3252]" dest="uint256: uint256 [3272,3279]"/>
  <match src="variable_declaration_statement [14437,14486]" dest="variable_declaration_statement [14432,14481]"/>
  <match src="parameter [28396,28407]" dest="parameter [28528,28539]"/>
  <match src="(: ( [20921,20922]" dest="(: ( [21016,21017]"/>
  <match src="uint256: uint256 [11612,11619]" dest="uint256: uint256 [11460,11467]"/>
  <match src="identifier: b [953,954]" dest="identifier: b [990,991]"/>
  <match src="): ) [1984,1985]" dest="): ) [1995,1996]"/>
  <match src=".: . [31226,31227]" dest=".: . [31448,31449]"/>
  <match src="assignment_expression [33092,33111]" dest="assignment_expression [41793,41812]"/>
  <match src="identifier: resultSupply_ [29677,29690]" dest="identifier: resultSupply_ [29931,29944]"/>
  <match src="call_argument [21994,22002]" dest="call_argument [22160,22168]"/>
  <match src="(: ( [20005,20006]" dest="(: ( [20104,20105]"/>
  <match src="call_argument [18353,18368]" dest="call_argument [18435,18450]"/>
  <match src="primitive_type [15990,15997]" dest="primitive_type [15978,15985]"/>
  <match src="type_name [3907,3914]" dest="type_name [3900,3907]"/>
  <match src="identifier: _index [11763,11769]" dest="identifier: _index [11611,11617]"/>
  <match src="(: ( [26071,26072]" dest="(: ( [26360,26361]"/>
  <match src="state_variable_declaration [24191,24289]" dest="state_variable_declaration [24494,24592]"/>
  <match src="=: = [19483,19484]" dest="=: = [19586,19587]"/>
  <match src="&amp;: &amp; [26324,26325]" dest="&amp;: &amp; [26466,26467]"/>
  <match src="function: function [27258,27266]" dest="function: function [27387,27395]"/>
  <match src="call_argument [29903,29909]" dest="call_argument [30165,30171]"/>
  <match src="primitive_type [23282,23289]" dest="primitive_type [23514,23521]"/>
  <match src="type_name [21676,21680]" dest="type_name [21808,21812]"/>
  <match src="boolean_literal [20877,20881]" dest="boolean_literal [20972,20976]"/>
  <match src="visibility [29852,29860]" dest="visibility [30106,30114]"/>
  <match src="array_access [23318,23333]" dest="array_access [23556,23571]"/>
  <match src="call_expression [2679,2735]" dest="call_expression [2698,2754]"/>
  <match src="}: } [32223,32224]" dest="}: } [32454,32455]"/>
  <match src="}: } [29399,29400]" dest="}: } [29645,29646]"/>
  <match src="comment: // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522 [2511,2582]" dest="comment: // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522 [2530,2601]"/>
  <match src="primitive_type [14394,14401]" dest="primitive_type [14389,14396]"/>
  <match src="{: { [13610,13611]" dest="{: { [13571,13572]"/>
  <match src="identifier: prior [26318,26323]" dest="identifier: prior [26460,26465]"/>
  <match src="identifier: _from [29652,29657]" dest="identifier: _from [29906,29911]"/>
  <match src="primitive_type [32759,32766]" dest="primitive_type [41458,41465]"/>
  <match src="type_name [21642,21646]" dest="type_name [21771,21778]"/>
  <match src="identifier: attributes [25999,26009]" dest="identifier: attributes [26288,26298]"/>
  <match src="call_expression [29339,29388]" dest="call_expression [29585,29634]"/>
  <match src="): ) [32010,32011]" dest="): ) [32241,32242]"/>
  <match src="comment: // File: @trusttoken/trusttokens/contracts/TrustToken.sol [32228,32285]" dest="comment: /**  * @title ClaimableContract  * @dev The ClaimableContract contract is a copy of Claimable Contract by Zeppelin.  and provides basic authorization control functions. Inherits storage layout of  ProxyStorage.  */ [30655,30874]"/>
  <match src="): ) [21680,21681]" dest="): ) [21812,21813]"/>
  <match src=",: , [10812,10813]" dest=",: , [10636,10637]"/>
  <match src="function_body [3989,4239]" dest="function_body [3982,4165]"/>
  <match src="tuple_expression [29146,29159]" dest="tuple_expression [29392,29405]"/>
  <match src="{: { [26454,26455]" dest="{: { [26596,26597]"/>
  <match src="identifier: totalSupply [15750,15761]" dest="identifier: totalSupply [15742,15753]"/>
  <match src="event_paramater [27590,27608]" dest="event_paramater [27703,27721]"/>
  <match src="function_definition [4696,4826]" dest="function_definition [4630,4760]"/>
  <match src="variable_declaration_statement [13951,13989]" dest="variable_declaration_statement [13946,13984]"/>
  <match src="(: ( [9782,9783]" dest="(: ( [9612,9613]"/>
  <match src="call_argument [10993,11008]" dest="call_argument [10841,10856]"/>
  <match src="primitive_type [13216,13223]" dest="primitive_type [13177,13184]"/>
  <match src="comment: /**     * @dev Allows the pendingOwner address to finalize the transfer.     */ [15185,15266]" dest="comment: /**      * @dev Allows the pendingOwner address to finalize the transfer.      */ [15188,15271]"/>
  <match src="binary_expression [28234,28252]" dest="binary_expression [28347,28365]"/>
  <match src="expression_statement [26804,26846]" dest="expression_statement [26945,26987]"/>
  <match src="primitive_type [25930,25937]" dest="primitive_type [26219,26226]"/>
  <match src="&gt;: &gt; [12501,12502]" dest="&gt;: &gt; [12369,12370]"/>
  <match src=",: , [13156,13157]" dest=",: , [13117,13118]"/>
  <match src="type_name [12377,12392]" dest="type_name [12245,12260]"/>
  <match src="identifier: _subBalance [19198,19209]" dest="identifier: _subBalance [19301,19312]"/>
  <match src="): ) [6074,6075]" dest="): ) [5887,5888]"/>
  <match src="}: } [14218,14219]" dest="}: } [14213,14214]"/>
  <match src="string [1472,1504]" dest="string [1517,1549]"/>
  <match src="expression_statement [27047,27090]" dest="expression_statement [27188,27231]"/>
  <match src="if_statement [26099,27116]" dest="if_statement [26388,27257]"/>
  <match src="parameter [1885,1911]" dest="parameter [1896,1922]"/>
  <match src="identifier: _index [11806,11812]" dest="identifier: _index [11654,11660]"/>
  <match src="): ) [15378,15379]" dest="): ) [15383,15384]"/>
  <match src="primitive_type [28425,28432]" dest="primitive_type [28575,28582]"/>
  <match src="identifier: token [14455,14460]" dest="identifier: token [14450,14455]"/>
  <match src="identifier: prior [26744,26749]" dest="identifier: prior [26885,26890]"/>
  <match src="identifier: add [30155,30158]" dest="identifier: add [30417,30420]"/>
  <match src="number_literal: 0x0 [30269,30272]" dest="number_literal: 0x0 [30531,30534]"/>
  <match src="array_access [19111,19126]" dest="array_access [19214,19229]"/>
  <match src="identifier: _value [10822,10828]" dest="identifier: _value [10655,10661]"/>
  <match src="=: = [29638,29639]" dest="=: = [29892,29893]"/>
  <match src="parameter [13560,13578]" dest="parameter [13521,13539]"/>
  <match src="address: address [28094,28101]" dest="address: address [28207,28214]"/>
  <match src="type_cast_expression [28242,28252]" dest="type_cast_expression [28355,28365]"/>
  <match src="(: ( [29885,29886]" dest="(: ( [30147,30148]"/>
  <match src="&quot;: &quot; [14694,14695]" dest="&quot;: &quot; [14692,14693]"/>
  <match src="type_name [24901,24908]" dest="type_name [25180,25187]"/>
  <match src="type_name [13705,13712]" dest="type_name [13676,13683]"/>
  <match src="uint256: uint256 [17762,17769]" dest="uint256: uint256 [17748,17755]"/>
  <match src="binary_expression [26986,27006]" dest="binary_expression [27127,27147]"/>
  <match src="identifier: underflowMessage [17990,18006]" dest="identifier: underflowMessage [18030,18046]"/>
  <match src="visibility [10846,10852]" dest="visibility [10694,10700]"/>
  <match src="return_statement [20870,20882]" dest="return_statement [20965,20977]"/>
  <match src="type_name [3929,3935]" dest="type_name [3922,3928]"/>
  <match src="uint144: uint144 [27767,27774]" dest="uint144: uint144 [27880,27887]"/>
  <match src="): ) [33206,33207]" dest="): ) [41914,41915]"/>
  <match src="expression_statement [32187,32214]" dest="expression_statement [32418,32445]"/>
  <match src="return_type_definition [3971,3988]" dest="return_type_definition [3964,3981]"/>
  <match src="is: is [18827,18829]" dest="is: is [18930,18932]"/>
  <match src="identifier: pendingOwner_ [15998,16011]" dest="identifier: pendingOwner_ [15986,15999]"/>
  <match src="call_argument [28277,28290]" dest="call_argument [28390,28403]"/>
  <match src="primitive_type [12955,12962]" dest="primitive_type [12821,12828]"/>
  <match src="call_argument [29598,29603]" dest="call_argument [29852,29857]"/>
  <match src="address: address [29823,29830]" dest="address: address [30077,30084]"/>
  <match src="interface: interface [5767,5776]" dest="interface: interface [5580,5589]"/>
  <match src="event_paramater [10186,10211]" dest="event_paramater [9991,10016]"/>
  <match src="function_definition [6666,6749]" dest="function_definition [6479,6562]"/>
  <match src="public: public [33620,33626]" dest="public: public [42319,42325]"/>
  <match src="[: [ [13810,13811]" dest="[: [ [13805,13806]"/>
  <match src="identifier: confirmWrite [12163,12175]" dest="identifier: confirmWrite [12031,12043]"/>
  <match src="&quot;: &quot; [4816,4817]" dest="&quot;: &quot; [4750,4751]"/>
  <match src="address: address [29886,29893]" dest="address: address [30148,30155]"/>
  <match src="external: external [28798,28806]" dest="external: external [29000,29008]"/>
  <match src="identifier: a [18151,18152]" dest="identifier: a [18209,18210]"/>
  <match src="state_mutability [5417,5421]" dest="state_mutability [5317,5321]"/>
  <match src="function_definition [13348,13507]" dest="function_definition [13309,13468]"/>
  <match src="return_statement [12007,12045]" dest="return_statement [11841,11879]"/>
  <match src="internal: internal [1913,1921]" dest="internal: internal [1924,1932]"/>
  <match src="internal: internal [25387,25395]" dest="internal: internal [36113,36121]"/>
  <match src="identifier: balanceOf [19085,19094]" dest="identifier: balanceOf [19188,19197]"/>
  <match src="call_argument [3327,3355]" dest="call_argument [3354,3382]"/>
  <match src="public: public [32012,32018]" dest="public: public [32243,32249]"/>
  <match src="returns: returns [18210,18217]" dest="returns: returns [18292,18299]"/>
  <match src="primitive_type [29967,29971]" dest="primitive_type [30229,30233]"/>
  <match src="call_expression [23557,23620]" dest="call_expression [23830,23893]"/>
  <match src="uint256: uint256 [18219,18226]" dest="uint256: uint256 [18301,18308]"/>
  <match src="function_definition [12060,12599]" dest="function_definition [11894,12467]"/>
  <match src="identifier: amount [6350,6356]" dest="identifier: amount [6163,6169]"/>
  <match src="(: ( [29708,29709]" dest="(: ( [29962,29963]"/>
  <match src="identifier: to [29356,29358]" dest="identifier: to [29602,29604]"/>
  <match src="]: ] [23360,23361]" dest="]: ] [23598,23599]"/>
  <match src="visibility [10532,10540]" dest="visibility [10337,10345]"/>
  <match src="identifier: index [12529,12534]" dest="identifier: index [12397,12402]"/>
  <match src="block_statement [2604,2639]" dest="block_statement [2623,2658]"/>
  <match src="modifier: modifier [31333,31341]" dest="modifier: modifier [31557,31565]"/>
  <match src="type_name [5911,5918]" dest="type_name [5724,5731]"/>
  <match src="state_variable_declaration [24901,25011]" dest="state_variable_declaration [25180,25282]"/>
  <match src="visibility [33175,33183]" dest="visibility [34873,34881]"/>
  <match src="call_argument [11064,11070]" dest="call_argument [10912,10918]"/>
  <match src="address: address [32047,32054]" dest="address: address [32278,32285]"/>
  <match src="=&gt;: =&gt; [15787,15789]" dest="=&gt;: =&gt; [15778,15780]"/>
  <match src="constant: constant [25025,25033]" dest="constant: constant [25296,25304]"/>
  <match src="returns: returns [19028,19035]" dest="returns: returns [19131,19138]"/>
  <match src="event_definition [30869,30978]" dest="event_definition [31114,31198]"/>
  <match src="identifier: MAX_SUPPLY [32776,32786]" dest="identifier: MAX_SUPPLY [41475,41485]"/>
  <match src="address: address [28396,28403]" dest="address: address [28528,28535]"/>
  <match src="identifier: _index [11574,11580]" dest="identifier: _index [11422,11428]"/>
  <match src="): ) [15922,15923]" dest="): ) [15910,15911]"/>
  <match src="parameter [14394,14405]" dest="parameter [14389,14400]"/>
  <match src="variable_declaration [22864,22880]" dest="variable_declaration [23067,23083]"/>
  <match src=",: , [20938,20939]" dest=",: , [21043,21044]"/>
  <match src="internal: internal [21885,21893]" dest="internal: internal [22051,22059]"/>
  <match src="{: { [32996,32997]" dest="{: { [41697,41698]"/>
  <match src="(: ( [14255,14256]" dest="(: ( [14250,14251]"/>
  <match src="call_argument [29040,29046]" dest="call_argument [29286,29292]"/>
  <match src="identifier: pendingOwner [8872,8884]" dest="identifier: pendingOwner [8702,8714]"/>
  <match src=",: , [23133,23134]" dest=",: , [23336,23337]"/>
  <match src="uint256: uint256 [13865,13872]" dest="uint256: uint256 [13860,13867]"/>
  <match src="returns: returns [13592,13599]" dest="returns: returns [13553,13560]"/>
  <match src="type_cast_expression [28148,28177]" dest="type_cast_expression [28261,28290]"/>
  <match src="): ) [9453,9454]" dest="): ) [9283,9284]"/>
  <match src="binary_expression [11212,11223]" dest="binary_expression [11060,11071]"/>
  <match src="parameter [18219,18233]" dest="parameter [18301,18315]"/>
  <match src=",: , [12353,12354]" dest=",: , [12221,12222]"/>
  <match src="call_argument [14516,14523]" dest="call_argument [14511,14518]"/>
  <match src="parameter [6685,6698]" dest="parameter [6498,6511]"/>
  <match src="variable_declaration [13043,13068]" dest="variable_declaration [13004,13029]"/>
  <match src="identifier: _who [23567,23571]" dest="identifier: _who [23840,23844]"/>
  <match src="call_expression [31365,31408]" dest="call_expression [31589,31632]"/>
  <match src="string: string [33803,33809]" dest="string: string [42502,42508]"/>
  <match src="identifier: flags [28018,28023]" dest="identifier: flags [28131,28136]"/>
  <match src="if_statement [26690,26861]" dest="if_statement [26831,27002]"/>
  <match src="array_access [23346,23361]" dest="array_access [23584,23599]"/>
  <match src="type_name [12087,12094]" dest="type_name [11931,11938]"/>
  <match src="identifier: _tokenHolder [21068,21080]" dest="identifier: _tokenHolder [21197,21209]"/>
  <match src="call_argument [12188,12198]" dest="call_argument [12056,12066]"/>
  <match src="}: } [33591,33592]" dest="}: } [42290,42291]"/>
  <match src="parameter [11987,11994]" dest="parameter [11821,11828]"/>
  <match src="call_argument [15366,15378]" dest="call_argument [15371,15383]"/>
  <match src="(: ( [8098,8099]" dest="(: ( [7911,7912]"/>
  <match src="uint256: uint256 [15915,15922]" dest="uint256: uint256 [15903,15910]"/>
  <match src="uint256: uint256 [24901,24908]" dest="uint256: uint256 [25180,25187]"/>
  <match src="}: } [1512,1513]" dest="}: } [1557,1558]"/>
  <match src="identifier: _attribute [11828,11838]" dest="identifier: _attribute [11676,11686]"/>
  <match src=".: . [12535,12536]" dest=".: . [12403,12404]"/>
  <match src="identifier: _addAllowance [21905,21918]" dest="identifier: _addAllowance [22071,22084]"/>
  <match src="public: public [12743,12749]" dest="public: public [12611,12617]"/>
  <match src="identifier: attributes [26473,26483]" dest="identifier: attributes [26615,26625]"/>
  <match src="[: [ [23858,23859]" dest="[: [ [24165,24166]"/>
  <match src="(: ( [14510,14511]" dest="(: ( [14505,14506]"/>
  <match src="call_argument [11739,11770]" dest="call_argument [11587,11618]"/>
  <match src="identifier: mint [33359,33363]" dest="identifier: mint [42067,42071]"/>
  <match src="returns: returns [21667,21674]" dest="returns: returns [21799,21806]"/>
  <match src="=: = [25942,25943]" dest="=: = [26231,26232]"/>
  <match src="event_paramater [20006,20027]" dest="event_paramater [20105,20126]"/>
  <match src="call_argument [11056,11062]" dest="call_argument [10904,10910]"/>
  <match src="identifier: _value [23484,23490]" dest="identifier: _value [23750,23756]"/>
  <match src="(: ( [22777,22778]" dest="(: ( [22946,22947]"/>
  <match src="identifier: ModularBasicToken [18809,18826]" dest="identifier: ModularBasicToken [18912,18929]"/>
  <match src="type_name [8099,8106]" dest="type_name [7912,7919]"/>
  <match src="}: } [8612,8613]" dest="}: } [8446,8447]"/>
  <match src="parameter [3245,3254]" dest="parameter [3272,3281]"/>
  <match src="identifier: pendingOwner_ [32071,32084]" dest="identifier: pendingOwner_ [32302,32315]"/>
  <match src="): ) [21658,21659]" dest="): ) [21790,21791]"/>
  <match src="]: ] [11838,11839]" dest="]: ] [11686,11687]"/>
  <match src="function_definition [10758,11318]" dest="function_definition [10563,11166]"/>
  <match src="comment: // example) as well as which validator last set the value and at what time, [9248,9323]" dest="comment: // example) as well as which validator last set the value and at what time, [9078,9153]"/>
  <match src="identifier: ValSafeMath [18856,18867]" dest="identifier: ValSafeMath [18959,18970]"/>
  <match src="identifier: _who [19218,19222]" dest="identifier: _who [19321,19325]"/>
  <match src="type_name [8359,8366]" dest="type_name [8172,8179]"/>
  <match src="array_access [13071,13087]" dest="array_access [13032,13048]"/>
  <match src="identifier: _attribute [13315,13325]" dest="identifier: _attribute [13276,13286]"/>
  <match src="identifier: onlyOwner [31838,31847]" dest="identifier: onlyOwner [32067,32076]"/>
  <match src="): ) [28107,28108]" dest="): ) [28220,28221]"/>
  <match src="function: function [33600,33608]" dest="function: function [42299,42307]"/>
  <match src="identifier: msg [10897,10900]" dest="identifier: msg [10745,10748]"/>
  <match src="identifier: _spender [23192,23200]" dest="identifier: _spender [23396,23404]"/>
  <match src="]: ] [26574,26575]" dest="]: ] [26715,26716]"/>
  <match src="primitive_type [5358,5365]" dest="primitive_type [5258,5265]"/>
  <match src="address: address [8121,8128]" dest="address: address [7934,7941]"/>
  <match src="}: } [23743,23744]" dest="}: } [24016,24017]"/>
  <match src="call_expression [10864,10909]" dest="call_expression [10712,10757]"/>
  <match src="&quot;: &quot; [23403,23404]" dest="&quot;: &quot; [23641,23642]"/>
  <match src="call_expression [25491,25501]" dest="call_expression [25746,25756]"/>
  <match src="memory: memory [18425,18431]" dest="memory: memory [18537,18543]"/>
  <match src="assignment_expression [23685,23725]" dest="assignment_expression [23958,23998]"/>
  <match src="]: ] [23857,23858]" dest="]: ] [24164,24165]"/>
  <match src="bytes32: bytes32 [12723,12730]" dest="bytes32: bytes32 [12591,12598]"/>
  <match src="(: ( [29429,29430]" dest="(: ( [29675,29676]"/>
  <match src="comment: /**     * @dev Allows the pendingOwner address to finalize the transfer.     */ [31899,31980]" dest="comment: /**      * @dev Allows the pendingOwner address to finalize the transfer.      */ [32128,32211]"/>
  <match src="visibility [18008,18016]" dest="visibility [18054,18062]"/>
  <match src="internal: internal [23492,23500]" dest="internal: internal [23764,23772]"/>
  <match src="function: function [28351,28359]" dest="function: function [28464,28472]"/>
  <match src="call_argument [19154,19172]" dest="call_argument [19257,19275]"/>
  <match src="}: } [15176,15177]" dest="}: } [15179,15180]"/>
  <match src="type_name [24295,24302]" dest="type_name [24598,24605]"/>
  <match src="returns: returns [29470,29477]" dest="returns: returns [29724,29731]"/>
  <match src="identifier: _from [28944,28949]" dest="identifier: _from [29158,29163]"/>
  <match src="identifier: RegistrySubscriber [27488,27506]" dest="identifier: RegistrySubscriber [27603,27621]"/>
  <match src="storage: storage [13813,13820]" dest="storage: storage [13808,13815]"/>
  <match src="identifier: totalSupply [33428,33439]" dest="identifier: totalSupply [42136,42147]"/>
  <match src="emit_statement [29588,29613]" dest="emit_statement [29842,29867]"/>
  <match src="return_type_definition [7477,7491]" dest="return_type_definition [7290,7304]"/>
  <match src="call_argument [29605,29611]" dest="call_argument [29859,29865]"/>
  <match src="for: for [32716,32719]" dest="for: for [41415,41418]"/>
  <match src="call_argument [1964,1970]" dest="call_argument [1975,1981]"/>
  <match src="variable_declaration_statement [1996,2014]" dest="variable_declaration_statement [2007,2025]"/>
  <match src="identifier: _to [28607,28610]" dest="identifier: _to [28792,28795]"/>
  <match src="(: ( [26935,26936]" dest="(: ( [27076,27077]"/>
  <match src="parameter [2306,2315]" dest="parameter [2325,2334]"/>
  <match src="uint256: uint256 [15735,15742]" dest="uint256: uint256 [15727,15734]"/>
  <match src="identifier: _value [29211,29217]" dest="identifier: _value [29457,29463]"/>
  <match src="type_name [28646,28650]" dest="type_name [28846,28850]"/>
  <match src="binary_expression [18511,18516]" dest="binary_expression [18629,18634]"/>
  <match src=",: , [28949,28950]" dest=",: , [29163,29164]"/>
  <match src="identifier: _addBalance [30095,30106]" dest="identifier: _addBalance [30357,30368]"/>
  <match src=",: , [1872,1873]" dest=",: , [1883,1884]"/>
  <match src="identifier: require [31365,31372]" dest="identifier: require [31589,31596]"/>
  <match src="(: ( [30204,30205]" dest="(: ( [30466,30467]"/>
  <match src="primitive_type [7867,7874]" dest="primitive_type [7680,7687]"/>
  <match src="modifier_invocation [11397,11406]" dest="modifier_invocation [11245,11254]"/>
  <match src="primitive_type [9945,9952]" dest="primitive_type [9750,9757]"/>
  <match src="parameter [19224,19238]" dest="parameter [19327,19341]"/>
  <match src="primitive_type [6376,6380]" dest="primitive_type [6189,6193]"/>
  <match src="(: ( [3244,3245]" dest="(: ( [3271,3272]"/>
  <match src="return: return [33829,33835]" dest="return: return [42528,42534]"/>
  <match src="comment: // Registry Attributes [24042,24064]" dest="comment: // Registry Attributes [24345,24367]"/>
  <match src="string_literal [23384,23404]" dest="string_literal [23622,23642]"/>
  <match src="user_defined_type [18830,18842]" dest="user_defined_type [18933,18945]"/>
  <match src="function_definition [1377,1513]" dest="function_definition [1422,1558]"/>
  <match src="identifier: b [1964,1965]" dest="identifier: b [1975,1976]"/>
  <match src="identifier: prior [26029,26034]" dest="identifier: prior [26318,26323]"/>
  <match src="): ) [11008,11009]" dest="): ) [10856,10857]"/>
  <match src="]: ] [26313,26314]" dest="]: ] [26455,26456]"/>
  <match src="number_literal: 20 [27791,27793]" dest="number_literal: 20 [27904,27906]"/>
  <match src="assignment_expression [27931,27943]" dest="assignment_expression [28044,28056]"/>
  <match src="): ) [21751,21752]" dest="): ) [21883,21884]"/>
  <match src="]: ] [11884,11885]" dest="]: ] [11732,11733]"/>
  <match src="primitive_type [15779,15786]" dest="primitive_type [15770,15777]"/>
  <match src=",: , [10895,10896]" dest=",: , [10743,10744]"/>
  <match src="type_name [3256,3263]" dest="type_name [3283,3290]"/>
  <match src="view: view [13420,13424]" dest="view: view [13381,13385]"/>
  <match src=",: , [27608,27609]" dest=",: , [27721,27722]"/>
  <match src=",: , [29603,29604]" dest=",: , [29857,29858]"/>
  <match src="call_argument [17898,17909]" dest="call_argument [17908,17919]"/>
  <match src="}: } [33513,33514]" dest="}: } [42221,42222]"/>
  <match src="pure: pure [1922,1926]" dest="pure: pure [1933,1937]"/>
  <match src="primitive_type [13393,13400]" dest="primitive_type [13354,13361]"/>
  <match src="primitive_type [3918,3925]" dest="primitive_type [3911,3918]"/>
  <match src="(: ( [31560,31561]" dest="(: ( [31786,31787]"/>
  <match src="expression_statement [14654,14697]" dest="expression_statement [14652,14695]"/>
  <match src="identifier: who [25938,25941]" dest="identifier: who [26227,26230]"/>
  <match src=",: , [15364,15365]" dest=",: , [15369,15370]"/>
  <match src="||: || [10596,10598]" dest="||: || [10401,10403]"/>
  <match src="function_body [33413,33592]" dest="function_body [42121,42291]"/>
  <match src="return: return [12781,12787]" dest="return: return [12649,12655]"/>
  <match src="primitive_type [28782,28789]" dest="primitive_type [28984,28991]"/>
  <match src="indexed: indexed [10046,10053]" dest="indexed: indexed [9851,9858]"/>
  <match src="parameter [10496,10514]" dest="parameter [10301,10319]"/>
  <match src="parameter [19003,19017]" dest="parameter [19106,19120]"/>
  <match src="(: ( [26394,26395]" dest="(: ( [26536,26537]"/>
  <match src="primitive_type [15436,15443]" dest="primitive_type [15441,15448]"/>
  <match src="type_cast_expression [29558,29568]" dest="type_cast_expression [29812,29822]"/>
  <match src="parameter [7867,7881]" dest="parameter [7680,7694]"/>
  <match src="type_name [12101,12108]" dest="type_name [11954,11961]"/>
  <match src="{: { [17742,17743]" dest="{: { [17718,17719]"/>
  <match src="identifier: attributes [26968,26978]" dest="identifier: attributes [27109,27119]"/>
  <match src="function: function [8523,8531]" dest="function: function [8323,8331]"/>
  <match src="emit_statement [30043,30074]" dest="emit_statement [30305,30336]"/>
  <match src="uint256: uint256 [20765,20772]" dest="uint256: uint256 [20860,20867]"/>
  <match src="expression_statement [11240,11300]" dest="expression_statement [11088,11148]"/>
  <match src="): ) [19057,19058]" dest="): ) [19160,19161]"/>
  <match src="address: address [30261,30268]" dest="address: address [30523,30530]"/>
  <match src="primitive_type [2351,2358]" dest="primitive_type [2370,2377]"/>
  <match src="identifier: _to [29831,29834]" dest="identifier: _to [30085,30088]"/>
  <match src="type_name [13023,13030]" dest="type_name [12969,12976]"/>
  <match src="}: } [14715,14716]" dest="}: } [14713,14714]"/>
  <match src="call_argument [29558,29568]" dest="call_argument [29812,29822]"/>
  <match src="pure: pure [33710,33714]" dest="pure: pure [42409,42413]"/>
  <match src="}: } [1101,1102]" dest="}: } [1138,1139]"/>
  <match src="}: } [28744,28745]" dest="}: } [28944,28945]"/>
  <match src="contract: contract [30629,30637]" dest="contract: contract [30876,30884]"/>
  <match src="identifier: onlyOwner [11397,11406]" dest="identifier: onlyOwner [11245,11254]"/>
  <match src="call_argument [28156,28176]" dest="call_argument [28269,28289]"/>
  <match src="type_name [9719,9734]" dest="type_name [9549,9564]"/>
  <match src="state_mutability [18205,18209]" dest="state_mutability [18287,18291]"/>
  <match src="identifier: onlyRegistry [25437,25449]" dest="identifier: onlyRegistry [25692,25704]"/>
  <match src="primitive_type [6700,6707]" dest="primitive_type [6513,6520]"/>
  <match src=",: , [10618,10619]" dest=",: , [10423,10424]"/>
  <match src="variable_declaration_statement [13797,13855]" dest="variable_declaration_statement [13792,13850]"/>
  <match src="=: = [25997,25998]" dest="=: = [26286,26287]"/>
  <match src="function_definition [3894,4239]" dest="function_definition [3887,4165]"/>
  <match src="]: ] [10935,10936]" dest="]: ] [10783,10784]"/>
  <match src="string_literal [2699,2734]" dest="string_literal [2718,2753]"/>
  <match src="identifier: _spender [22667,22675]" dest="identifier: _spender [22836,22844]"/>
  <match src="primitive_type [11987,11994]" dest="primitive_type [11821,11828]"/>
  <match src="address: address [20006,20013]" dest="address: address [20105,20112]"/>
  <match src="comment: // File: @trusttoken/trusttokens/contracts/ValSafeMath.sol [17474,17532]" dest="comment: // File: contracts/trusttokens/ProxyStorage.sol [15466,15513]"/>
  <match src=",: , [9928,9929]" dest=",: , [9733,9734]"/>
  <match src="type_name [29479,29486]" dest="type_name [29733,29740]"/>
  <match src="inheritance_specifier [18830,18842]" dest="inheritance_specifier [18933,18945]"/>
  <match src="&quot;: &quot; [33028,33029]" dest="&quot;: &quot; [41729,41730]"/>
  <match src="internal: internal [28443,28451]" dest="internal: internal [28599,28607]"/>
  <match src="type_name [9833,9840]" dest="type_name [9644,9651]"/>
  <match src="comment: // File: @trusttoken/trusttokens/contracts/ProxyStorage.sol [15461,15520]" dest="comment: // File: contracts/registry/Registry.sol [8219,8259]"/>
  <match src="identifier: b [18115,18116]" dest="identifier: b [18161,18162]"/>
  <match src="member_expression [31223,31233]" dest="member_expression [31445,31455]"/>
  <match src="identifier: _transferAllArgs [28919,28935]" dest="identifier: _transferAllArgs [29123,29139]"/>
  <match src="[: [ [19365,19366]" dest="[: [ [19468,19469]"/>
  <match src="identifier: _from [29033,29038]" dest="identifier: _from [29279,29284]"/>
  <match src="primitive_type [9930,9937]" dest="primitive_type [9735,9742]"/>
  <match src="identifier: _who [12222,12226]" dest="identifier: _who [12090,12094]"/>
  <match src="identifier: BLACKLISTED [26409,26420]" dest="identifier: BLACKLISTED [26551,26562]"/>
  <match src="(: ( [1034,1035]" dest="(: ( [1071,1072]"/>
  <match src="primitive_type [15915,15922]" dest="primitive_type [15903,15910]"/>
  <match src="(: ( [26645,26646]" dest="(: ( [26786,26787]"/>
  <match src="identifier: hook [27722,27726]" dest="identifier: hook [27835,27839]"/>
  <match src="emit: emit [29058,29062]" dest="emit: emit [29304,29308]"/>
  <match src="(: ( [31581,31582]" dest="(: ( [31807,31808]"/>
  <match src="identifier: ACCOUNT_BLACKLISTED_INV [26586,26609]" dest="identifier: ACCOUNT_BLACKLISTED_INV [26727,26750]"/>
  <match src="): ) [11994,11995]" dest="): ) [11828,11829]"/>
  <match src="string_literal [31395,31407]" dest="string_literal [31619,31631]"/>
  <match src="&lt;=: &lt;= [18068,18070]" dest="&lt;=: &lt;= [18114,18116]"/>
  <match src="returns: returns [1426,1433]" dest="returns: returns [1471,1478]"/>
  <match src="type_name [11345,11352]" dest="type_name [11193,11200]"/>
  <match src=",: , [1883,1884]" dest=",: , [1894,1895]"/>
  <match src=".: . [11075,11076]" dest=".: . [10923,10924]"/>
  <match src="number_literal: 0 [18280,18281]" dest="number_literal: 0 [18362,18363]"/>
  <match src="state_variable_declaration [25133,25243]" dest="state_variable_declaration [25400,25499]"/>
  <match src="address: address [8722,8729]" dest="address: address [8556,8563]"/>
  <match src=",: , [29280,29281]" dest=",: , [29526,29527]"/>
  <match src="return: return [33929,33935]" dest="return: return [42628,42634]"/>
  <match src="[: [ [27057,27058]" dest="[: [ [27198,27199]"/>
  <match src="return: return [4774,4780]" dest="return: return [4708,4714]"/>
  <match src="return_type_definition [13592,13609]" dest="return_type_definition [13553,13570]"/>
  <match src="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      */ [4247,4690]" dest="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [4173,4624]"/>
  <match src="identifier: mod [4781,4784]" dest="identifier: mod [4715,4718]"/>
  <match src="binary_expression [23058,23085]" dest="binary_expression [23261,23288]"/>
  <match src="identifier: IERC20 [14380,14386]" dest="identifier: IERC20 [14375,14381]"/>
  <match src="member_expression [25469,25479]" dest="member_expression [25724,25734]"/>
  <match src="identifier: _addBalance [18977,18988]" dest="identifier: _addBalance [19080,19091]"/>
  <match src="call_expression [10620,10678]" dest="call_expression [10425,10483]"/>
  <match src="identifier: owner [8352,8357]" dest="identifier: owner [8165,8170]"/>
  <match src="string_literal [33936,33941]" dest="string_literal [42635,42640]"/>
  <match src="bool: bool [27717,27721]" dest="bool: bool [27830,27834]"/>
  <match src="function_body [11601,11913]" dest="function_body [11449,11747]"/>
  <match src="return_type_definition [33894,33917]" dest="return_type_definition [42593,42616]"/>
  <match src="primitive_type [17773,17780]" dest="primitive_type [17768,17775]"/>
  <match src="contract_declaration [30629,32224]" dest="contract_declaration [30876,32455]"/>
  <match src="address: address [32203,32210]" dest="address: address [32434,32441]"/>
  <match src="identifier: _resolveRecipient [29162,29179]" dest="identifier: _resolveRecipient [29408,29425]"/>
  <match src="primitive_type [22778,22785]" dest="primitive_type [22957,22964]"/>
  <match src="identifier: _to [29931,29934]" dest="identifier: _to [30193,30196]"/>
  <match src="identifier: who [14169,14172]" dest="identifier: who [14164,14167]"/>
  <match src="update_expression [12493,12501]" dest="update_expression [12361,12368]"/>
  <match src="}: } [31427,31428]" dest="}: } [31651,31652]"/>
  <match src="identifier: _tokenHolder [21871,21883]" dest="identifier: _tokenHolder [22031,22043]"/>
  <match src="internal: internal [19019,19027]" dest="internal: internal [19122,19130]"/>
  <match src="type_cast_expression [25483,25502]" dest="type_cast_expression [25738,25757]"/>
  <match src="): ) [23530,23531]" dest="): ) [23802,23803]"/>
  <match src="identifier: this [14328,14332]" dest="identifier: this [14323,14327]"/>
  <match src="}: } [12598,12599]" dest="}: } [12466,12467]"/>
  <match src="): ) [22985,22986]" dest="): ) [23188,23189]"/>
  <match src=",: , [23191,23192]" dest=",: , [23394,23395]"/>
  <match src="type_name [11946,11953]" dest="type_name [11780,11787]"/>
  <match src="]: ] [26487,26488]" dest="]: ] [26629,26630]"/>
  <match src="uint160: uint160 [27775,27782]" dest="uint160: uint160 [27888,27895]"/>
  <match src="function_body [29010,29407]" dest="function_body [29256,29653]"/>
  <match src="(: ( [20829,20830]" dest="(: ( [20924,20925]"/>
  <match src="primitive_type [18407,18414]" dest="primitive_type [18510,18517]"/>
  <match src="identifier: a [17770,17771]" dest="identifier: a [17756,17757]"/>
  <match src=",: , [29276,29277]" dest=",: , [29522,29523]"/>
  <match src="assignment_expression [12211,12296]" dest="assignment_expression [12079,12164]"/>
  <match src="contract_declaration [32635,33952]" dest="contract_declaration [41354,42651]"/>
  <match src="primitive_type [13014,13021]" dest="primitive_type [12947,12954]"/>
  <match src="uint256: uint256 [33377,33384]" dest="uint256: uint256 [42085,42092]"/>
  <match src="]: ] [12036,12037]" dest="]: ] [11870,11871]"/>
  <match src="==: == [2693,2695]" dest="==: == [2712,2714]"/>
  <match src="member_expression [22695,22705]" dest="member_expression [22864,22874]"/>
  <match src="identifier: _value [23815,23821]" dest="identifier: _value [24116,24122]"/>
  <match src="identifier: balance [14445,14452]" dest="identifier: balance [14440,14447]"/>
  <match src="type_name [13546,13553]" dest="type_name [13507,13514]"/>
  <match src=",: , [10991,10992]" dest=",: , [10839,10840]"/>
  <match src="identifier: balanceOf [6017,6026]" dest="identifier: balanceOf [5830,5839]"/>
  <match src="identifier: decimals [33609,33617]" dest="identifier: decimals [42308,42316]"/>
  <match src="address: address [13379,13386]" dest="address: address [13340,13347]"/>
  <match src="identifier: _subBalance [29640,29651]" dest="identifier: _subBalance [29894,29905]"/>
  <match src="{: { [33413,33414]" dest="{: { [42121,42122]"/>
  <match src="parameter [23510,23530]" dest="parameter [23782,23802]"/>
  <match src="{: { [20803,20804]" dest="{: { [20898,20899]"/>
  <match src="=: = [29777,29778]" dest="=: = [30031,30032]"/>
  <match src="): ) [15296,15297]" dest="): ) [15301,15302]"/>
  <match src="&quot;: &quot; [2733,2734]" dest="&quot;: &quot; [2752,2753]"/>
  <match src=",: , [30273,30274]" dest=",: , [30535,30536]"/>
  <match src="parameter [22778,22794]" dest="parameter [22957,22973]"/>
  <match src="identifier: _to [30017,30020]" dest="identifier: _to [30279,30282]"/>
  <match src="identifier: a [1040,1041]" dest="identifier: a [1077,1078]"/>
  <match src="(: ( [14470,14471]" dest="(: ( [14465,14466]"/>
  <match src="identifier: _value [19439,19445]" dest="identifier: _value [19542,19548]"/>
  <match src="internal: internal [33175,33183]" dest="internal: internal [34873,34881]"/>
  <match src="call_argument [3321,3322]" dest="call_argument [3348,3349]"/>
  <match src="expression_statement [31365,31409]" dest="expression_statement [31589,31633]"/>
  <match src="using_directive [32701,32728]" dest="using_directive [41400,41427]"/>
  <match src="identifier: flags [27811,27816]" dest="identifier: flags [27924,27929]"/>
  <match src=",: , [29149,29150]" dest=",: , [29395,29396]"/>
  <match src="identifier: _attribute [10802,10812]" dest="identifier: _attribute [10626,10636]"/>
  <match src="=: = [19372,19373]" dest="=: = [19475,19476]"/>
  <match src="}: } [31241,31242]" dest="}: } [31463,31464]"/>
  <match src="assignment_expression [27976,27995]" dest="assignment_expression [28089,28108]"/>
  <match src="binary_expression [30017,30026]" dest="binary_expression [30279,30288]"/>
  <match src="assignment_expression [29146,29184]" dest="assignment_expression [29392,29430]"/>
  <match src="): ) [30696,30697]" dest="): ) [30941,30942]"/>
  <match src="): ) [6747,6748]" dest="): ) [6560,6561]"/>
  <match src="(: ( [1389,1390]" dest="(: ( [1434,1435]"/>
  <match src=",: , [20954,20955]" dest=",: , [21068,21069]"/>
  <match src="): ) [31407,31408]" dest="): ) [31631,31632]"/>
  <match src="comment: /**      * @dev Moves `amount` tokens from the caller's account to `recipient`.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [6084,6299]" dest="comment: /**      * @dev Moves `amount` tokens from the caller's account to `recipient`.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [5897,6112]"/>
  <match src="primitive_type [27775,27782]" dest="primitive_type [27888,27895]"/>
  <match src="array_access [11816,11839]" dest="array_access [11664,11687]"/>
  <match src="): ) [13775,13776]" dest="): ) [13770,13771]"/>
  <match src="call_expression [28269,28312]" dest="call_expression [28382,28425]"/>
  <match src="identifier: _value [29844,29850]" dest="identifier: _value [30098,30104]"/>
  <match src="return_type_definition [33189,33207]" dest="return_type_definition [41897,41915]"/>
  <match src="mapping: mapping [9401,9408]" dest="mapping: mapping [9231,9238]"/>
  <match src="assignment_expression [29677,29754]" dest="assignment_expression [29931,30008]"/>
  <match src="): ) [11082,11083]" dest="): ) [10930,10931]"/>
  <match src="identifier: SafeMath [674,682]" dest="identifier: SafeMath [703,711]"/>
  <match src="identifier: overflowMessage [18353,18368]" dest="identifier: overflowMessage [18435,18450]"/>
  <match src="(: ( [21979,21980]" dest="(: ( [22145,22146]"/>
  <match src="call_argument [18074,18090]" dest="call_argument [18120,18136]"/>
  <match src="parameter [23444,23456]" dest="parameter [23692,23704]"/>
  <match src="(: ( [10779,10780]" dest="(: ( [10584,10585]"/>
  <match src="=: = [24478,24479]" dest="=: = [24777,24778]"/>
  <match src="}: } [11912,11913]" dest="}: } [11746,11747]"/>
  <match src=",: , [29715,29716]" dest=",: , [29969,29970]"/>
  <match src="modifier_definition [25428,25523]" dest="modifier_definition [25683,25778]"/>
  <match src="identifier: subscribers [9736,9747]" dest="identifier: subscribers [9566,9577]"/>
  <match src="mapping: mapping [15842,15849]" dest="mapping: mapping [15832,15839]"/>
  <match src="address: address [27705,27712]" dest="address: address [27818,27825]"/>
  <match src="variable_declaration_statement [28120,28180]" dest="variable_declaration_statement [28233,28293]"/>
  <match src="array_access [23843,23858]" dest="array_access [24150,24165]"/>
  <match src=",: , [33492,33493]" dest=",: , [42200,42201]"/>
  <match src="return_type_definition [30710,30727]" dest="return_type_definition [30955,30972]"/>
  <match src="function_body [30822,30861]" dest="function_body [31067,31106]"/>
  <match src="calldata: calldata [13756,13764]" dest="calldata: calldata [13745,13753]"/>
  <match src="array_access [10920,10936]" dest="array_access [10768,10784]"/>
  <match src=",: , [31393,31394]" dest=",: , [31617,31618]"/>
  <match src="}: } [13180,13181]" dest="}: } [13141,13142]"/>
  <match src="call_argument [28862,28865]" dest="call_argument [29064,29067]"/>
  <match src="(: ( [30718,30719]" dest="(: ( [30963,30964]"/>
  <match src="pure: pure [18462,18466]" dest="pure: pure [18580,18584]"/>
  <match src="call_argument [23192,23200]" dest="call_argument [23396,23404]"/>
  <match src="primitive_type [23807,23814]" dest="primitive_type [24108,24115]"/>
  <match src="for: for [19856,19859]" dest="for: for [19959,19962]"/>
  <match src="identifier: _who [18997,19001]" dest="identifier: _who [19100,19104]"/>
  <match src="function: function [19189,19197]" dest="function: function [19292,19300]"/>
  <match src="event_definition [27579,27634]" dest="event_definition [27692,27747]"/>
  <match src="if_statement [26932,27105]" dest="if_statement [27073,27246]"/>
  <match src="identifier: divideByZeroMessage [18432,18451]" dest="identifier: divideByZeroMessage [18544,18563]"/>
  <match src="function_definition [28562,28745]" dest="function_definition [28728,28945]"/>
  <match src="call_argument [29278,29280]" dest="call_argument [29524,29526]"/>
  <match src="identifier: tokenFallback [29360,29373]" dest="identifier: tokenFallback [29606,29619]"/>
  <match src="identifier: _addedValue [21850,21861]" dest="identifier: _addedValue [22001,22012]"/>
  <match src="member_expression [14455,14470]" dest="member_expression [14450,14465]"/>
  <match src="=: = [13069,13070]" dest="=: = [13030,13031]"/>
  <match src="{: { [8635,8636]" dest="{: { [8469,8470]"/>
  <match src="internal: internal [17815,17823]" dest="internal: internal [17825,17833]"/>
  <match src="primitive_type [9793,9800]" dest="primitive_type [9613,9620]"/>
  <match src="variable_declaration [14069,14080]" dest="variable_declaration [14064,14075]"/>
  <match src="call_argument [25491,25501]" dest="call_argument [25746,25756]"/>
  <match src="parameter [27705,27715]" dest="parameter [27818,27828]"/>
  <match src="identifier: balance [14516,14523]" dest="identifier: balance [14511,14518]"/>
  <match src="&quot;: &quot; [28292,28293]" dest="&quot;: &quot; [28405,28406]"/>
  <match src="identifier: totalSupply [29693,29704]" dest="identifier: totalSupply [29947,29958]"/>
  <match src="(: ( [18249,18250]" dest="(: ( [18331,18332]"/>
  <match src="{: { [15706,15707]" dest="{: { [15698,15699]"/>
  <match src="string [33936,33941]" dest="string [42635,42640]"/>
  <match src="primitive_type [26064,26071]" dest="primitive_type [26353,26360]"/>
  <match src="modifier_invocation [14416,14425]" dest="modifier_invocation [14411,14420]"/>
  <match src="primitive_type [20054,20061]" dest="primitive_type [20153,20160]"/>
  <match src="identifier: to [30243,30245]" dest="identifier: to [30505,30507]"/>
  <match src="primitive_type [21842,21849]" dest="primitive_type [21993,22000]"/>
  <match src="identifier: syncAttributeValue [8532,8550]" dest="identifier: syncAttributeValue [8332,8350]"/>
  <match src="identifier: _increaseApprovalAllArgs [21693,21717]" dest="identifier: _increaseApprovalAllArgs [21825,21849]"/>
  <match src="bytes32: bytes32 [25863,25870]" dest="bytes32: bytes32 [26137,26144]"/>
  <match src="call_argument [10872,10908]" dest="call_argument [10720,10756]"/>
  <match src="expression_statement [31419,31421]" dest="expression_statement [31643,31645]"/>
  <match src="uint256: uint256 [5911,5918]" dest="uint256: uint256 [5724,5731]"/>
  <match src="function_body [12144,12599]" dest="function_body [12012,12467]"/>
  <match src="[: [ [26483,26484]" dest="[: [ [26625,26626]"/>
  <match src="visibility [21885,21893]" dest="visibility [22051,22059]"/>
  <match src="number_literal: 0 [26451,26452]" dest="number_literal: 0 [26593,26594]"/>
  <match src="identifier: reclaimToken [14367,14379]" dest="identifier: reclaimToken [14362,14374]"/>
  <match src="primitive_type [6685,6692]" dest="primitive_type [6498,6505]"/>
  <match src="(: ( [10495,10496]" dest="(: ( [10300,10301]"/>
  <match src="): ) [12295,12296]" dest="): ) [12163,12164]"/>
  <match src="identifier: hasHook [29107,29114]" dest="identifier: hasHook [29353,29360]"/>
  <match src="identifier: a [18345,18346]" dest="identifier: a [18427,18428]"/>
  <match src="(: ( [30895,30896]" dest="(: ( [31140,31141]"/>
  <match src="(: ( [27668,27669]" dest="(: ( [27781,27782]"/>
  <match src="primitive_type [12709,12716]" dest="primitive_type [12577,12584]"/>
  <match src="identifier: PASSED_KYCAML [24087,24100]" dest="identifier: PASSED_KYCAML [24390,24403]"/>
  <match src="identifier: a [1466,1467]" dest="identifier: a [1511,1512]"/>
  <match src="binary_expression [31373,31393]" dest="binary_expression [31597,31617]"/>
  <match src=".: . [13489,13490]" dest=".: . [13450,13451]"/>
  <match src="return_type_definition [33715,33730]" dest="return_type_definition [42414,42429]"/>
  <match src="identifier: _admin [10580,10586]" dest="identifier: _admin [10385,10391]"/>
  <match src="identifier: newManager [10054,10064]" dest="identifier: newManager [9859,9869]"/>
  <match src="(: ( [978,979]" dest="(: ( [1015,1016]"/>
  <match src="identifier: push [11442,11446]" dest="identifier: push [11290,11294]"/>
  <match src="call_argument [21728,21739]" dest="call_argument [21860,21871]"/>
  <match src="call_argument [1035,1041]" dest="call_argument [1072,1078]"/>
  <match src="identifier: owner [15390,15395]" dest="identifier: owner [15395,15400]"/>
  <match src="primitive_type [20922,20929]" dest="primitive_type [21027,21034]"/>
  <match src="address: address [8099,8106]" dest="address: address [7912,7919]"/>
  <match src="!=: != [26943,26945]" dest="!=: != [27084,27086]"/>
  <match src="binary_expression [1035,1041]" dest="binary_expression [1072,1078]"/>
  <match src="identifier: _who [26072,26076]" dest="identifier: _who [26361,26365]"/>
  <match src="uint256: uint256 [4709,4716]" dest="uint256: uint256 [4643,4650]"/>
  <match src="variable_declaration_statement [32047,32085]" dest="variable_declaration_statement [32278,32316]"/>
  <match src="primitive_type [1874,1881]" dest="primitive_type [1885,1892]"/>
  <match src="(: ( [18510,18511]" dest="(: ( [18628,18629]"/>
  <match src="identifier: Burn [27522,27526]" dest="identifier: Burn [27635,27639]"/>
  <match src="bool: bool [10555,10559]" dest="bool: bool [10360,10364]"/>
  <match src="}: } [18123,18124]" dest="}: } [18169,18170]"/>
  <match src="emit_statement [29921,29944]" dest="emit_statement [30183,30206]"/>
  <match src="event: event [19991,19996]" dest="event: event [20090,20095]"/>
  <match src="type_name [27610,27617]" dest="type_name [27723,27730]"/>
  <match src="binary_expression [26936,26947]" dest="binary_expression [27077,27088]"/>
  <match src="): ) [954,955]" dest="): ) [991,992]"/>
  <match src="=: = [24332,24333]" dest="=: = [24635,24636]"/>
  <match src="call_expression [9669,9693]" dest="call_expression [9499,9523]"/>
  <match src="if: if [26642,26644]" dest="if: if [26783,26785]"/>
  <match src="function_body [31144,31242]" dest="function_body [31366,31464]"/>
  <match src="&quot;: &quot; [23595,23596]" dest="&quot;: &quot; [23868,23869]"/>
  <match src="visibility [20978,20986]" dest="visibility [21107,21115]"/>
  <match src="): ) [28311,28312]" dest="): ) [28424,28425]"/>
  <match src="function_body [28822,28904]" dest="function_body [29024,29106]"/>
  <match src="identifier: b [18066,18067]" dest="identifier: b [18112,18113]"/>
  <match src="identifier: spender [6708,6715]" dest="identifier: spender [6521,6528]"/>
  <match src="identifier: pendingOwner_ [30840,30853]" dest="identifier: pendingOwner_ [31085,31098]"/>
  <match src="type_name [15713,15717]" dest="type_name [15705,15709]"/>
  <match src="modifier: modifier [25428,25436]" dest="modifier: modifier [25683,25691]"/>
  <match src="variable_declaration_statement [4106,4124]" dest="variable_declaration_statement [4032,4050]"/>
  <match src="type_name [13725,13732]" dest="type_name [13705,13712]"/>
  <match src="public: public [10846,10852]" dest="public: public [10694,10700]"/>
  <match src="identifier: pendingOwner_ [32187,32200]" dest="identifier: pendingOwner_ [32418,32431]"/>
  <match src=",: , [7450,7451]" dest=",: , [7263,7264]"/>
  <match src="uint256: uint256 [1996,2003]" dest="uint256: uint256 [2007,2014]"/>
  <match src="identifier: pendingOwner_ [31596,31609]" dest="identifier: pendingOwner_ [31822,31835]"/>
  <match src="(: ( [27810,27811]" dest="(: ( [27923,27924]"/>
  <match src="modifier_invocation [33403,33412]" dest="modifier_invocation [42111,42120]"/>
  <match src=".: . [11254,11255]" dest=".: . [11102,11103]"/>
  <match src="identifier: allowance [23843,23852]" dest="identifier: allowance [24150,24159]"/>
  <match src="[: [ [11750,11751]" dest="[: [ [11598,11599]"/>
  <match src="identifier: _subBalance [29021,29032]" dest="identifier: _subBalance [29267,29278]"/>
  <match src="visibility [8601,8609]" dest="visibility [8435,8443]"/>
  <match src="call_argument [25469,25502]" dest="call_argument [25724,25757]"/>
  <match src="identifier: Registry [32734,32742]" dest="identifier: Registry [41433,41441]"/>
  <match src="address: address [18989,18996]" dest="address: address [19092,19099]"/>
  <match src="identifier: newAllowance [23518,23530]" dest="identifier: newAllowance [23790,23802]"/>
  <match src="{: { [33648,33649]" dest="{: { [42347,42348]"/>
  <match src="array_access [23685,23700]" dest="array_access [23958,23973]"/>
  <match src="identifier: sender [10985,10991]" dest="identifier: sender [10833,10839]"/>
  <match src="comment: // benefit is lost if 'b' is also tested. [2460,2501]" dest="comment: // benefit is lost if 'b' is also tested. [2479,2520]"/>
  <match src="call_expression [28512,28548]" dest="call_expression [28676,28712]"/>
  <match src="(: ( [25409,25410]" dest="(: ( [25664,25665]"/>
  <match src="comment: // File: @trusttoken/trusttokens/contracts/ClaimableContract.sol [30308,30372]" dest="comment: // File: contracts/trusttokens/ValTokenWithHook.sol [27455,27506]"/>
  <match src="string_literal [23595,23619]" dest="string_literal [23868,23892]"/>
  <match src="): ) [23210,23211]" dest="): ) [23414,23415]"/>
  <match src="identifier: initialized [8896,8907]" dest="identifier: initialized [8726,8737]"/>
  <match src="[: [ [23327,23328]" dest="[: [ [23565,23566]"/>
  <match src="user_defined_type [32734,32742]" dest="user_defined_type [41433,41441]"/>
  <match src="identifier: _tokenHolder [21980,21992]" dest="identifier: _tokenHolder [22146,22158]"/>
  <match src="identifier: a [18071,18072]" dest="identifier: a [18117,18118]"/>
  <match src="(: ( [1465,1466]" dest="(: ( [1510,1511]"/>
  <match src="type_name [22864,22871]" dest="type_name [23067,23074]"/>
  <match src="[: [ [11805,11806]" dest="[: [ [11653,11654]"/>
  <match src="state_variable_declaration [25249,25359]" dest="state_variable_declaration [25505,25608]"/>
  <match src="identifier: c [2755,2756]" dest="identifier: c [2774,2775]"/>
  <match src="identifier: _value [28494,28500]" dest="identifier: _value [28658,28664]"/>
  <match src="call_argument [31223,31233]" dest="call_argument [31445,31455]"/>
  <match src="primitive_type [27549,27556]" dest="primitive_type [27662,27669]"/>
  <match src="library: library [17722,17729]" dest="library: library [17698,17705]"/>
  <match src="identifier: _subtractedValue [22677,22693]" dest="identifier: _subtractedValue [22846,22862]"/>
  <match src="(: ( [10646,10647]" dest="(: ( [10451,10452]"/>
  <match src="call_expression [12242,12296]" dest="call_expression [12110,12164]"/>
  <match src=",: , [12262,12263]" dest=",: , [12130,12131]"/>
  <match src="call_argument [30275,30281]" dest="call_argument [30537,30543]"/>
  <match src="{: { [23832,23833]" dest="{: { [24139,24140]"/>
  <match src="{: { [8516,8517]" dest="{: { [8316,8317]"/>
  <match src="==: == [10587,10589]" dest="==: == [10392,10394]"/>
  <match src="address: address [28242,28249]" dest="address: address [28355,28362]"/>
  <match src="modifier_definition [14622,14716]" dest="modifier_definition [14620,14714]"/>
  <match src=",: , [11363,11364]" dest=",: , [11211,11212]"/>
  <match src="): ) [10678,10679]" dest="): ) [10483,10484]"/>
  <match src="address: address [27590,27597]" dest="address: address [27703,27710]"/>
  <match src="identifier: newOwner [31821,31829]" dest="identifier: newOwner [32050,32058]"/>
  <match src="type_name [13271,13278]" dest="type_name [13232,13239]"/>
  <match src="identifier: b [17781,17782]" dest="identifier: b [17776,17777]"/>
  <match src="]: ] [19370,19371]" dest="]: ] [19473,19474]"/>
  <match src="primitive_type [30261,30268]" dest="primitive_type [30523,30530]"/>
  <match src="]: ] [23709,23710]" dest="]: ] [23982,23983]"/>
  <match src="identifier: who [27058,27061]" dest="identifier: who [27199,27202]"/>
  <match src="): ) [33501,33502]" dest="): ) [42209,42210]"/>
  <match src="identifier: _who [8559,8563]" dest="identifier: _who [8369,8373]"/>
  <match src="identifier: _value [23587,23593]" dest="identifier: _value [23860,23866]"/>
  <match src="}: } [11310,11311]" dest="}: } [11158,11159]"/>
  <match src="): ) [8154,8155]" dest="): ) [7967,7968]"/>
  <match src="primitive_type [8384,8391]" dest="primitive_type [8197,8204]"/>
  <match src="member_expression [31582,31592]" dest="member_expression [31808,31818]"/>
  <match src="identifier: a [17908,17909]" dest="identifier: a [17918,17919]"/>
  <match src="type_name [10814,10821]" dest="type_name [10647,10654]"/>
  <match src="external: external [5888,5896]" dest="external: external [5701,5709]"/>
  <match src="parameter [14380,14392]" dest="parameter [14375,14387]"/>
  <match src="inheritance_specifier [32658,32674]" dest="inheritance_specifier [33303,33319]"/>
  <match src="internal: internal [18008,18016]" dest="internal: internal [18054,18062]"/>
  <match src="return_type_definition [18210,18234]" dest="return_type_definition [18292,18316]"/>
  <match src=",: , [18943,18944]" dest=",: , [19046,19047]"/>
  <match src="bytes32: bytes32 [10496,10503]" dest="bytes32: bytes32 [10301,10308]"/>
  <match src="string [29717,29753]" dest="string [29971,30007]"/>
  <match src="binary_expression [26441,26452]" dest="binary_expression [26583,26594]"/>
  <match src="parameter [13014,13021]" dest="parameter [12947,12954]"/>
  <match src="identifier: _who [10931,10935]" dest="identifier: _who [10779,10783]"/>
  <match src="member_expression [12461,12475]" dest="member_expression [12329,12343]"/>
  <match src="else: else [23027,23031]" dest="else: else [23230,23234]"/>
  <match src="identifier: _attribute [13843,13853]" dest="identifier: _attribute [13838,13848]"/>
  <match src="view: view [30705,30709]" dest="view: view [30950,30954]"/>
  <match src="bool: bool [15713,15717]" dest="bool: bool [15705,15709]"/>
  <match src="primitive_type [18154,18161]" dest="primitive_type [18221,18228]"/>
  <match src="): ) [30026,30027]" dest="): ) [30288,30289]"/>
  <match src="identifier: targets [13974,13981]" dest="identifier: targets [13969,13976]"/>
  <match src="identifier: _to [29898,29901]" dest="identifier: _to [30160,30163]"/>
  <match src="expression_statement [31155,31175]" dest="expression_statement [31377,31397]"/>
  <match src="): ) [14341,14342]" dest="): ) [14336,14337]"/>
  <match src="(: ( [27755,27756]" dest="(: ( [27868,27869]"/>
  <match src="function: function [33350,33358]" dest="function: function [42058,42066]"/>
  <match src="primitive_type [33364,33371]" dest="primitive_type [42072,42079]"/>
  <match src="binary_expression [26156,26189]" dest="binary_expression [34299,34332]"/>
  <match src="primitive_type [18989,18996]" dest="primitive_type [19092,19099]"/>
  <match src="=: = [2661,2662]" dest="=: = [2680,2681]"/>
  <match src="identifier: owner [10590,10595]" dest="identifier: owner [10395,10400]"/>
  <match src="call_argument [27989,27994]" dest="call_argument [28102,28107]"/>
  <match src="state_variable_declaration [15713,15729]" dest="state_variable_declaration [15705,15721]"/>
  <match src="): ) [29942,29943]" dest="): ) [30204,30205]"/>
  <match src="number_literal: 0 [26704,26705]" dest="number_literal: 0 [26845,26846]"/>
  <match src="type_name [17784,17790]" dest="type_name [17788,17794]"/>
  <match src="type_name [11365,11378]" dest="type_name [11213,11226]"/>
  <match src="identifier: _who [13309,13313]" dest="identifier: _who [13270,13274]"/>
  <match src="(: ( [9408,9409]" dest="(: ( [9238,9239]"/>
  <match src="type_name [17762,17769]" dest="type_name [17748,17755]"/>
  <match src="identifier: add [17758,17761]" dest="identifier: add [17734,17737]"/>
  <match src="identifier: registry [25491,25499]" dest="identifier: registry [25746,25754]"/>
  <match src="identifier: who [26979,26982]" dest="identifier: who [27120,27123]"/>
  <match src="type_name [15895,15923]" dest="type_name [15884,15911]"/>
  <match src="=: = [27753,27754]" dest="=: = [27866,27867]"/>
  <match src="memory: memory [5387,5393]" dest="memory: memory [5287,5293]"/>
  <match src="parameter [21676,21680]" dest="parameter [21808,21812]"/>
  <match src="&gt;: &gt; [4077,4078]" dest="&gt;: &gt; [4003,4004]"/>
  <match src="(: ( [28583,28584]" dest="(: ( [28749,28750]"/>
  <match src="uint256: uint256 [19003,19010]" dest="uint256: uint256 [19106,19113]"/>
  <match src="identifier: mod [4705,4708]" dest="identifier: mod [4639,4642]"/>
  <match src="returns: returns [18022,18029]" dest="returns: returns [18068,18075]"/>
  <match src=",: , [1399,1400]" dest=",: , [1444,1445]"/>
  <match src="): ) [28714,28715]" dest="): ) [28914,28915]"/>
  <match src="]: ] [11440,11441]" dest="]: ] [11288,11289]"/>
  <match src="return_type_definition [33794,33817]" dest="return_type_definition [42493,42516]"/>
  <match src="identifier: attributes [27047,27057]" dest="identifier: attributes [27188,27198]"/>
  <match src="identifier: mul [18139,18142]" dest="identifier: mul [18187,18190]"/>
  <match src="type_cast_expression [31211,31221]" dest="type_cast_expression [31433,31443]"/>
  <match src="): ) [3265,3266]" dest="): ) [3292,3293]"/>
  <match src="): ) [5479,5480]" dest="): ) [5379,5380]"/>
  <match src="identifier: _who [19121,19125]" dest="identifier: _who [19224,19228]"/>
  <match src="): ) [17852,17853]" dest="): ) [17862,17863]"/>
  <match src="type_cast_expression [27981,27995]" dest="type_cast_expression [28094,28108]"/>
  <match src="type_name [17838,17845]" dest="type_name [17848,17855]"/>
  <match src="primitive_type [28599,28606]" dest="primitive_type [28784,28791]"/>
  <match src="comment: // File: openzeppelin-solidity/contracts/token/ERC20/IERC20.sol [5518,5581]" dest="comment: // File: @openzeppelin/contracts/math/SafeMath.sol [35,85]"/>
  <match src="call_argument [29886,29896]" dest="call_argument [30148,30158]"/>
  <match src=".: . [22698,22699]" dest=".: . [22867,22868]"/>
  <match src="]: ] [13811,13812]" dest="]: ] [13806,13807]"/>
  <match src="parameter [18031,18045]" dest="parameter [18077,18091]"/>
  <match src="function_body [28652,28745]" dest="function_body [28852,28945]"/>
  <match src="primitive_type [1996,2003]" dest="primitive_type [2007,2014]"/>
  <match src="expression_statement [23685,23726]" dest="expression_statement [23958,23999]"/>
  <match src="assignment_expression [26473,26518]" dest="assignment_expression [26615,26660]"/>
  <match src="state_variable_declaration [9700,9748]" dest="state_variable_declaration [9530,9578]"/>
  <match src="assignment_expression [15146,15169]" dest="assignment_expression [15149,15172]"/>
  <match src="function: function [18383,18391]" dest="function: function [18467,18475]"/>
  <match src="type_name [1863,1870]" dest="type_name [1874,1881]"/>
  <match src="identifier: _who [13387,13391]" dest="identifier: _who [13348,13352]"/>
  <match src="identifier: _spender [23466,23474]" dest="identifier: _spender [23723,23731]"/>
  <match src="}: } [27122,27123]" dest="}: } [27263,27264]"/>
  <match src="emit: emit [21966,21970]" dest="emit: emit [22132,22136]"/>
  <match src="inheritance_specifier [32676,32693]" dest="inheritance_specifier [33321,33338]"/>
  <match src="identifier: b [4788,4789]" dest="identifier: b [4722,4723]"/>
  <match src="{: { [10853,10854]" dest="{: { [10701,10702]"/>
  <match src="returns: returns [2342,2349]" dest="returns: returns [2361,2368]"/>
  <match src="if_statement [28230,28324]" dest="if_statement [28343,28437]"/>
  <match src="expression_statement [21905,21956]" dest="expression_statement [22071,22122]"/>
  <match src="array_access [22883,22916]" dest="array_access [23086,23119]"/>
  <match src="state_mutability [13257,13261]" dest="state_mutability [13218,13222]"/>
  <match src="visibility [17815,17823]" dest="visibility [17825,17833]"/>
  <match src="address: address [13546,13553]" dest="address: address [13507,13514]"/>
  <match src="call_argument [11280,11290]" dest="call_argument [11128,11138]"/>
  <match src="member_expression [12188,12198]" dest="member_expression [12056,12066]"/>
  <match src="call_expression [30143,30190]" dest="call_expression [30405,30452]"/>
  <match src="modifier_definition [31535,31630]" dest="modifier_definition [31761,31856]"/>
  <match src="return_type_definition [29470,29525]" dest="return_type_definition [29724,29779]"/>
  <match src="&amp;: &amp; [27071,27072]" dest="&amp;: &amp; [27212,27213]"/>
  <match src=",: , [18351,18352]" dest=",: , [18433,18434]"/>
  <match src="uint256: uint256 [4106,4113]" dest="uint256: uint256 [4032,4039]"/>
  <match src="identifier: transfer [14311,14319]" dest="identifier: transfer [14306,14314]"/>
  <match src="identifier: a [2008,2009]" dest="identifier: a [2019,2020]"/>
  <match src="identifier: subscribers [12014,12025]" dest="identifier: subscribers [11848,11859]"/>
  <match src="]: ] [13655,13656]" dest="]: ] [13616,13617]"/>
  <match src="]: ] [13987,13988]" dest="]: ] [13982,13983]"/>
  <match src="return_statement [33219,33236]" dest="return_statement [41927,41944]"/>
  <match src="type_name [22778,22785]" dest="type_name [22957,22964]"/>
  <match src="{: { [3299,3300]" dest="{: { [3326,3327]"/>
  <match src="identifier: _setAllowance [20998,21011]" dest="identifier: _setAllowance [21127,21140]"/>
  <match src="call_argument [10630,10677]" dest="call_argument [10435,10482]"/>
  <match src=".: . [23371,23372]" dest=".: . [23609,23610]"/>
  <match src="primitive_type [31211,31218]" dest="primitive_type [31433,31440]"/>
  <match src="return: return [28726,28732]" dest="return: return [28926,28932]"/>
  <match src="identifier: attributes [26804,26814]" dest="identifier: attributes [26945,26955]"/>
  <match src="[: [ [11141,11142]" dest="[: [ [10989,10990]"/>
  <match src="bool: bool [28646,28650]" dest="bool: bool [28846,28850]"/>
  <match src=",: , [13558,13559]" dest=",: , [13519,13520]"/>
  <match src="primitive_type [8359,8366]" dest="primitive_type [8172,8179]"/>
  <match src=",: , [22820,22821]" dest=",: , [23008,23009]"/>
  <match src="if_statement [30201,30294]" dest="if_statement [30463,30556]"/>
  <match src="identifier: _spender [23135,23143]" dest="identifier: _spender [23338,23346]"/>
  <match src="{: { [15322,15323]" dest="{: { [15327,15328]"/>
  <match src="primitive_type [28190,28197]" dest="primitive_type [28303,28310]"/>
  <match src="state_variable_declaration [24128,24185]" dest="state_variable_declaration [24431,24488]"/>
  <match src="number_literal: 145000000000000000 [32789,32807]" dest="number_literal: 145000000000000000 [41488,41506]"/>
  <match src="indexed: indexed [9801,9808]" dest="indexed: indexed [9621,9628]"/>
  <match src=",: , [32127,32128]" dest=",: , [32358,32359]"/>
  <match src="struct: struct [8642,8648]" dest="struct: struct [8476,8482]"/>
  <match src="return_statement [30833,30854]" dest="return_statement [31078,31099]"/>
  <match src="]: ] [22026,22027]" dest="]: ] [22192,22193]"/>
  <match src="): ) [10908,10909]" dest="): ) [10756,10757]"/>
  <match src="identifier: value [13327,13332]" dest="identifier: value [13288,13293]"/>
  <match src="primitive_type [4720,4727]" dest="primitive_type [4654,4661]"/>
  <match src="primitive_type [30813,30820]" dest="primitive_type [31058,31065]"/>
  <match src="function_body [14296,14350]" dest="function_body [14291,14345]"/>
  <match src="visibility [32989,32995]" dest="visibility [41690,41696]"/>
  <match src="string_literal [3327,3355]" dest="string_literal [3354,3382]"/>
  <match src="identifier: _attribute [11353,11363]" dest="identifier: _attribute [11201,11211]"/>
  <match src="function_definition [19396,19499]" dest="function_definition [19499,19602]"/>
  <match src="): ) [17813,17814]" dest="): ) [17823,17824]"/>
  <match src="identifier: timestamp [13163,13172]" dest="identifier: timestamp [13124,13133]"/>
  <match src="parameter [10794,10812]" dest="parameter [10618,10636]"/>
  <match src="call_argument [10965,10971]" dest="call_argument [10813,10819]"/>
  <match src="identifier: length [11840,11846]" dest="identifier: length [11688,11694]"/>
  <match src="(: ( [19257,19258]" dest="(: ( [19360,19361]"/>
  <match src=",: , [29657,29658]" dest=",: , [29911,29912]"/>
  <match src="}: } [29406,29407]" dest="}: } [29652,29653]"/>
  <match src=".: . [23582,23583]" dest=".: . [23855,23856]"/>
  <match src="identifier: newValue [22935,22943]" dest="identifier: newValue [23138,23146]"/>
  <match src="): ) [26039,26040]" dest="): ) [26328,26329]"/>
  <match src="pure: pure [3276,3280]" dest="pure: pure [3303,3307]"/>
  <match src="(: ( [29478,29479]" dest="(: ( [29732,29733]"/>
  <match src="type_name [28964,28971]" dest="type_name [29196,29203]"/>
  <match src="visibility [32012,32018]" dest="visibility [32243,32249]"/>
  <match src="memory: memory [33810,33816]" dest="memory: memory [42509,42515]"/>
  <match src="address: address [12709,12716]" dest="address: address [12577,12584]"/>
  <match src="view: view [10541,10545]" dest="view: view [10346,10350]"/>
  <match src="function: function [27642,27650]" dest="function: function [27755,27763]"/>
  <match src="{: { [27251,27252]" dest="{: { [27380,27381]"/>
  <match src="type_name [13216,13223]" dest="type_name [13177,13184]"/>
  <match src=".: . [25472,25473]" dest=".: . [25727,25728]"/>
  <match src="identifier: _attribute [14174,14184]" dest="identifier: _attribute [14169,14179]"/>
  <match src="call_expression [20814,20859]" dest="call_expression [20909,20954]"/>
  <match src="identifier: OwnershipTransferred [9762,9782]" dest="identifier: OwnershipTransferred [9592,9612]"/>
  <match src="call_argument [18336,18351]" dest="call_argument [18418,18433]"/>
  <match src="=: = [11178,11179]" dest="=: = [11026,11027]"/>
  <match src="identifier: _value [30066,30072]" dest="identifier: _value [30328,30334]"/>
  <match src="array_access [27047,27062]" dest="array_access [27188,27203]"/>
  <match src="): ) [20858,20859]" dest="): ) [20953,20954]"/>
  <match src="primitive_type [18872,18879]" dest="primitive_type [18975,18982]"/>
  <match src="identifier: allowance [15879,15888]" dest="identifier: allowance [15868,15877]"/>
  <match src="type_cast_expression [26357,26372]" dest="type_cast_expression [26499,26514]"/>
  <match src="identifier: sender [10901,10907]" dest="identifier: sender [10749,10755]"/>
  <match src="public: public [13250,13256]" dest="public: public [13211,13217]"/>
  <match src=",: , [22693,22694]" dest=",: , [22862,22863]"/>
  <match src="user_defined_type [13043,13056]" dest="user_defined_type [13004,13017]"/>
  <match src="]: ] [23370,23371]" dest="]: ] [23608,23609]"/>
  <match src="identifier: sender [25473,25479]" dest="identifier: sender [25728,25734]"/>
  <match src="function_definition [21790,22046]" dest="function_definition [21922,22212]"/>
  <match src="returns: returns [3281,3288]" dest="returns: returns [3308,3315]"/>
  <match src="]: ] [11812,11813]" dest="]: ] [11660,11661]"/>
  <match src="bytes32: bytes32 [13705,13712]" dest="bytes32: bytes32 [13676,13683]"/>
  <match src="]: ] [23342,23343]" dest="]: ] [23580,23581]"/>
  <match src="(: ( [23178,23179]" dest="(: ( [23381,23382]"/>
  <match src="{: { [1945,1946]" dest="{: { [1956,1957]"/>
  <match src="call_argument [29936,29942]" dest="call_argument [30198,30204]"/>
  <match src="}: } [28342,28343]" dest="}: } [28455,28456]"/>
  <match src="comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [2371,2450]" dest="comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [2390,2469]"/>
  <match src="function_body [27728,28063]" dest="function_body [27841,28176]"/>
  <match src="type_name [13601,13608]" dest="type_name [13562,13569]"/>
  <match src="expression_statement [27838,27847]" dest="expression_statement [27951,27960]"/>
  <match src="block_statement [18258,18293]" dest="block_statement [18340,18375]"/>
  <match src="call_argument [18518,18537]" dest="call_argument [18636,18655]"/>
  <match src="identifier: ACCOUNT_BLACKLISTED [24454,24473]" dest="identifier: ACCOUNT_BLACKLISTED [24757,24776]"/>
  <match src="emit: emit [12307,12311]" dest="emit: emit [12175,12179]"/>
  <match src="): ) [30281,30282]" dest="): ) [30543,30544]"/>
  <match src="state_variable_declaration [9401,9466]" dest="state_variable_declaration [9231,9296]"/>
  <match src=".: . [11652,11653]" dest=".: . [11500,11501]"/>
  <match src="call_argument [29894,29895]" dest="call_argument [30156,30157]"/>
  <match src="expression_statement [15421,15447]" dest="expression_statement [15426,15452]"/>
  <match src="comment: /**  * Forked subset of Openzeppelin SafeMath allowing custom underflow/overflow messages  * Useful for debugging, replaceable with standard SafeMath  */ [17564,17720]" dest="comment: /**  * Forked subset of Openzeppelin SafeMath allowing custom underflow/overflow messages  * Useful for debugging, replaceable with standard SafeMath  */ [17540,17696]"/>
  <match src="type_name [13746,13755]" dest="type_name [13735,13744]"/>
  <match src="emit_statement [32095,32144]" dest="emit_statement [32326,32375]"/>
  <match src="event_definition [9993,10066]" dest="event_definition [9798,9871]"/>
  <match src="identifier: ACCOUNT_ADDRESS_INV [25034,25053]" dest="identifier: ACCOUNT_ADDRESS_INV [25305,25324]"/>
  <match src="identifier: reclaimEther [14243,14255]" dest="identifier: reclaimEther [14238,14250]"/>
  <match src=",: , [21640,21641]" dest=",: , [21769,21770]"/>
  <match src="): ) [2326,2327]" dest="): ) [2345,2346]"/>
  <match src="identifier: ValTokenWithHook [32658,32674]" dest="identifier: ValTokenWithHook [33303,33319]"/>
  <match src="identifier: ACCOUNT_KYC [24686,24697]" dest="identifier: ACCOUNT_KYC [24985,24996]"/>
  <match src="(: ( [33443,33444]" dest="(: ( [42151,42152]"/>
  <match src="identifier: _spender [21718,21726]" dest="identifier: _spender [21850,21858]"/>
  <match src=",: , [5378,5379]" dest=",: , [5278,5279]"/>
  <match src="visibility [13777,13785]" dest="visibility [13772,13780]"/>
  <match src="=: = [14453,14454]" dest="=: = [14448,14449]"/>
  <match src="type_name [32047,32054]" dest="type_name [32278,32285]"/>
  <match src="[: [ [27766,27767]" dest="[: [ [27879,27880]"/>
  <match src="type_name [1390,1397]" dest="type_name [1435,1442]"/>
  <match src="function_definition [28751,28904]" dest="function_definition [28953,29106]"/>
  <match src="): ) [29217,29218]" dest="): ) [29463,29464]"/>
  <match src="array_access [22004,22027]" dest="array_access [22170,22193]"/>
  <match src="identifier: _increaseApprovalAllArgs [21799,21823]" dest="identifier: _increaseApprovalAllArgs [21931,21955]"/>
  <match src="call_argument [27775,27793]" dest="call_argument [27888,27906]"/>
  <match src="expression_statement [29146,29185]" dest="expression_statement [29392,29431]"/>
  <match src="(: ( [11037,11038]" dest="(: ( [10885,10886]"/>
  <match src="primitive_type [10780,10787]" dest="primitive_type [10595,10602]"/>
  <match src="function: function [33864,33872]" dest="function: function [42563,42571]"/>
  <match src="}: } [33146,33147]" dest="}: } [41847,41848]"/>
  <match src="bool: bool [8891,8895]" dest="bool: bool [8721,8725]"/>
  <match src="constant: constant [32767,32775]" dest="constant: constant [41466,41474]"/>
  <match src="|: | [26992,26993]" dest="|: | [27133,27134]"/>
  <match src="identifier: sender [7840,7846]" dest="identifier: sender [7653,7659]"/>
  <match src="primitive_type [15735,15742]" dest="primitive_type [15727,15734]"/>
  <match src="=: = [19910,19911]" dest="=: = [20013,20014]"/>
  <match src="expression_statement [28512,28549]" dest="expression_statement [28676,28713]"/>
  <match src="&quot;: &quot; [30167,30168]" dest="&quot;: &quot; [30429,30430]"/>
  <match src="identifier: value [27304,27309]" dest="identifier: value [27432,27437]"/>
  <match src="identifier: block [12280,12285]" dest="identifier: block [12148,12153]"/>
  <match src="type_name [934,941]" dest="type_name [971,978]"/>
  <match src="function_definition [5345,5511]" dest="function_definition [5245,5411]"/>
  <match src="contract_body [19831,23888]" dest="contract_body [19934,24195]"/>
  <match src="parameter [13216,13228]" dest="parameter [13177,13189]"/>
  <match src="contract_body [8516,8613]" dest="contract_body [8316,8447]"/>
  <match src="identifier: overflowMessage [17798,17813]" dest="identifier: overflowMessage [17802,17817]"/>
  <match src="address: address [20956,20963]" dest="address: address [21079,21086]"/>
  <match src="primitive_type [17762,17769]" dest="primitive_type [17748,17755]"/>
  <match src="(: ( [27988,27989]" dest="(: ( [28101,28102]"/>
  <match src="type_name [18165,18171]" dest="type_name [18241,18247]"/>
  <match src="external: external [27312,27320]" dest="external: external [27439,27447]"/>
  <match src="identifier: RegistryClone [12377,12390]" dest="identifier: RegistryClone [12245,12258]"/>
  <match src="type_name [20922,20929]" dest="type_name [21027,21034]"/>
  <match src="view: view [27691,27695]" dest="view: view [27804,27808]"/>
  <match src="identifier: RegistryClone [13951,13964]" dest="identifier: RegistryClone [13946,13959]"/>
  <match src="address: address [15436,15443]" dest="address: address [15441,15448]"/>
  <match src="function: function [11525,11533]" dest="function: function [11373,11381]"/>
  <match src="returns: returns [30804,30811]" dest="returns: returns [31049,31056]"/>
  <match src="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      * - Subtraction cannot overflow.      *      * _Available since v2.4.0._      */ [1521,1844]" dest="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [1566,1855]"/>
  <match src="[: [ [23355,23356]" dest="[: [ [23593,23594]"/>
  <match src=",: , [4789,4790]" dest=",: , [4723,4724]"/>
  <match src="): ) [15116,15117]" dest="): ) [15119,15120]"/>
  <match src="internal: internal [27682,27690]" dest="internal: internal [27795,27803]"/>
  <match src="call_argument [29079,29082]" dest="call_argument [29325,29328]"/>
  <match src="{: { [2604,2605]" dest="{: { [2623,2624]"/>
  <match src="identifier: who [14141,14144]" dest="identifier: who [14136,14139]"/>
  <match src="function_definition [6008,6076]" dest="function_definition [5821,5889]"/>
  <match src="(: ( [28249,28250]" dest="(: ( [28362,28363]"/>
  <match src="emit_statement [11020,11084]" dest="emit_statement [10868,10932]"/>
  <match src="number_literal: 0xfe00000000000000000000000000000000000000000000000000000000000000 [19912,19978]" dest="number_literal: 0xfe00000000000000000000000000000000000000000000000000000000000000 [20015,20081]"/>
  <match src="identifier: _subtractedValue [22958,22974]" dest="identifier: _subtractedValue [23161,23177]"/>
  <match src="type_name [33377,33384]" dest="type_name [42085,42092]"/>
  <match src="assignment_expression [30129,30190]" dest="assignment_expression [30391,30452]"/>
  <match src=".: . [31376,31377]" dest=".: . [31600,31601]"/>
  <match src="primitive_type [10814,10821]" dest="primitive_type [10647,10654]"/>
  <match src="user_defined_type [14380,14386]" dest="user_defined_type [14375,14381]"/>
  <match src="primitive_type [27527,27534]" dest="primitive_type [27640,27647]"/>
  <match src="function_definition [11525,11913]" dest="function_definition [11373,11747]"/>
  <match src="identifier: owner [6693,6698]" dest="identifier: owner [6506,6511]"/>
  <match src="type_cast_expression [26349,26373]" dest="type_cast_expression [26491,26515]"/>
  <match src="variable_declaration [29967,29976]" dest="variable_declaration [30229,30238]"/>
  <match src="constant: constant [9641,9649]" dest="constant: constant [9471,9479]"/>
  <match src="emit: emit [11020,11024]" dest="emit: emit [10868,10872]"/>
  <match src="array_access [12788,12804]" dest="array_access [12656,12672]"/>
  <match src="): ) [4761,4762]" dest="): ) [4695,4696]"/>
  <match src="emit: emit [29537,29541]" dest="emit: emit [29791,29795]"/>
  <match src="identifier: ModularStandardToken [19789,19809]" dest="identifier: ModularStandardToken [19892,19912]"/>
  <match src="update_expression [13913,13921]" dest="update_expression [13908,13915]"/>
  <match src="address: address [20029,20036]" dest="address: address [20128,20135]"/>
  <match src="primitive_type [24553,24560]" dest="primitive_type [24852,24859]"/>
  <match src="parenthesized_expression [10579,10680]" dest="parenthesized_expression [10384,10485]"/>
  <match src="identifier: _spender [23362,23370]" dest="identifier: _spender [23600,23608]"/>
  <match src=",: , [21080,21081]" dest=",: , [21209,21210]"/>
  <match src="}: } [5513,5514]" dest="}: } [5413,5414]"/>
  <match src="if: if [30013,30015]" dest="if: if [30275,30277]"/>
  <match src=",: , [3254,3255]" dest=",: , [3281,3282]"/>
  <match src="internal: internal [20978,20986]" dest="internal: internal [21107,21115]"/>
  <match src=",: , [11054,11055]" dest=",: , [10902,10903]"/>
  <match src="function_definition [921,1102]" dest="function_definition [958,1139]"/>
  <match src="}: } [11317,11318]" dest="}: } [11165,11166]"/>
  <match src="variable_declaration [12377,12408]" dest="variable_declaration [12245,12276]"/>
  <match src="identifier: msg [11072,11075]" dest="identifier: msg [10920,10923]"/>
  <match src=".: . [14873,14874]" dest=".: . [14873,14874]"/>
  <match src="uint144: uint144 [25944,25951]" dest="uint144: uint144 [26233,26240]"/>
  <match src=",: , [21024,21025]" dest=",: , [21153,21154]"/>
  <match src="function_body [10853,11318]" dest="function_body [10701,11166]"/>
  <match src="{: { [32694,32695]" dest="{: { [41393,41394]"/>
  <match src="): ) [26947,26948]" dest="): ) [27088,27089]"/>
  <match src="emit: emit [29588,29592]" dest="emit: emit [29842,29846]"/>
  <match src="member_expression [10993,11008]" dest="member_expression [10841,10856]"/>
  <match src="binary_expression [5498,5503]" dest="binary_expression [5398,5403]"/>
  <match src="function_body [14851,14917]" dest="function_body [14851,14917]"/>
  <match src="^:  ^ [77,79]" dest="^:  ^ [106,108]"/>
  <match src="return_statement [5491,5504]" dest="return_statement [5391,5404]"/>
  <match src=",: , [20052,20053]" dest=",: , [20151,20152]"/>
  <match src=",: , [17909,17910]" dest=",: , [17919,17920]"/>
  <match src="): ) [29567,29568]" dest="): ) [29821,29822]"/>
  <match src="return_statement [13621,13667]" dest="return_statement [13582,13628]"/>
  <match src="uint256: uint256 [28782,28789]" dest="uint256: uint256 [28984,28991]"/>
  <match src="identifier: _resolveRecipient [27651,27668]" dest="identifier: _resolveRecipient [27764,27781]"/>
  <match src="identifier: totalSupply [30143,30154]" dest="identifier: totalSupply [30405,30416]"/>
  <match src="call_argument [28850,28860]" dest="call_argument [29052,29062]"/>
  <match src="return_statement [1086,1095]" dest="return_statement [1123,1132]"/>
  <match src="(: ( [33617,33618]" dest="(: ( [42316,42317]"/>
  <match src="identifier: require [1956,1963]" dest="identifier: require [1967,1974]"/>
  <match src="address: address [28190,28197]" dest="address: address [28303,28310]"/>
  <match src="call_expression [30226,30246]" dest="call_expression [30488,30508]"/>
  <match src="internal: internal [19447,19455]" dest="internal: internal [19550,19558]"/>
  <match src="call_argument [26072,26076]" dest="call_argument [26361,26365]"/>
  <match src=",: , [12571,12572]" dest=",: , [12439,12440]"/>
  <match src="type_cast_expression [27775,27787]" dest="type_cast_expression [27888,27900]"/>
  <match src="string_literal [33551,33572]" dest="string_literal [42250,42271]"/>
  <match src="identifier: _to [28536,28539]" dest="identifier: _to [28700,28703]"/>
  <match src="primitive_type [24437,24444]" dest="primitive_type [24740,24747]"/>
  <match src="identifier: resultSupply_ [29779,29792]" dest="identifier: resultSupply_ [30033,30046]"/>
  <match src="array_access [22004,22037]" dest="array_access [22170,22203]"/>
  <match src="primitive_type [25133,25140]" dest="primitive_type [25400,25407]"/>
  <match src="function: function [11921,11929]" dest="function: function [11755,11763]"/>
  <match src="identifier: _from [28389,28394]" dest="identifier: _from [28512,28517]"/>
  <match src="primitive_type [19431,19438]" dest="primitive_type [19534,19541]"/>
  <match src="=: = [32201,32202]" dest="=: = [32432,32433]"/>
  <match src="call_expression [19129,19173]" dest="call_expression [19232,19276]"/>
  <match src="call_argument [12561,12571]" dest="call_argument [12429,12439]"/>
  <match src="returns: returns [6367,6374]" dest="returns: returns [6180,6187]"/>
  <match src="false [27938,27943]" dest="false [28051,28056]"/>
  <match src="identifier: _value [20773,20779]" dest="identifier: _value [20868,20874]"/>
  <match src="bytes32: bytes32 [11345,11352]" dest="bytes32: bytes32 [11193,11200]"/>
  <match src="call_argument [14328,14332]" dest="call_argument [14323,14327]"/>
  <match src="expression_statement [33007,33050]" dest="expression_statement [41708,41751]"/>
  <match src="identifier: attributes [12211,12221]" dest="identifier: attributes [12079,12089]"/>
  <match src="): ) [29046,29047]" dest="): ) [29292,29293]"/>
  <match src=",: , [28290,28291]" dest=",: , [28403,28404]"/>
  <match src="function_definition [18130,18377]" dest="function_definition [18178,18459]"/>
  <match src="returns: returns [33189,33196]" dest="returns: returns [41897,41904]"/>
  <match src="block_statement [13936,14219]" dest="block_statement [13931,14214]"/>
  <match src="expression_statement [18549,18564]" dest="expression_statement [18667,18682]"/>
  <match src="visibility [14277,14285]" dest="visibility [14272,14280]"/>
  <match src="true [33135,33139]" dest="true [41836,41840]"/>
  <match src="(: ( [18988,18989]" dest="(: ( [19091,19092]"/>
  <match src="type_name [18154,18161]" dest="type_name [18221,18228]"/>
  <match src="pure: pure [18017,18021]" dest="pure: pure [18063,18067]"/>
  <match src="primitive_type [3290,3297]" dest="primitive_type [3317,3324]"/>
  <match src="): ) [29909,29910]" dest="): ) [30171,30172]"/>
  <match src="identifier: _value [29282,29288]" dest="identifier: _value [29528,29534]"/>
  <match src="identifier: newAllowance [23635,23647]" dest="identifier: newAllowance [23908,23920]"/>
  <match src="identifier: INFINITE_ALLOWANCE [19891,19909]" dest="identifier: INFINITE_ALLOWANCE [19994,20012]"/>
  <match src="address: address [13746,13753]" dest="address: address [13735,13742]"/>
  <match src="[: [ [13753,13754]" dest="[: [ [13742,13743]"/>
  <match src="identifier: to [8137,8139]" dest="identifier: to [7950,7952]"/>
  <match src="{: { [17854,17855]" dest="{: { [17864,17865]"/>
  <match src="identifier: _who [13224,13228]" dest="identifier: _who [13185,13189]"/>
  <match src="{: { [14643,14644]" dest="{: { [14641,14642]"/>
  <match src="]: ] [13643,13644]" dest="]: ] [13604,13605]"/>
  <match src="type_name [10213,10226]" dest="type_name [10018,10031]"/>
  <match src="identifier: subscribe [11335,11344]" dest="identifier: subscribe [11183,11192]"/>
  <match src="): ) [30189,30190]" dest="): ) [30451,30452]"/>
  <match src="uint256: uint256 [1435,1442]" dest="uint256: uint256 [1480,1487]"/>
  <match src="comment: /**      * @dev Moves `amount` tokens from `sender` to `recipient` using the      * allowance mechanism. `amount` is then deducted from the caller's      * allowance.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [7500,7804]" dest="comment: /**      * @dev Moves `amount` tokens from `sender` to `recipient` using the      * allowance mechanism. `amount` is then deducted from the caller's      * allowance.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [7313,7617]"/>
  <match src="comment: // Returns true if the uint256 value stored for this attribute is non-zero [12607,12681]" dest="comment: // Returns true if the uint256 value stored for this attribute is non-zero [12475,12549]"/>
  <match src=",: , [23474,23475]" dest=",: , [23731,23732]"/>
  <match src="identifier: newOwner [9849,9857]" dest="identifier: newOwner [9660,9668]"/>
  <match src="identifier: confirmWrite [10872,10884]" dest="identifier: confirmWrite [10720,10732]"/>
  <match src="): ) [27632,27633]" dest="): ) [27745,27746]"/>
  <match src="identifier: result [18039,18045]" dest="identifier: result [18085,18091]"/>
  <match src="[: [ [12390,12391]" dest="[: [ [12258,12259]"/>
  <match src="address: address [18925,18932]" dest="address: address [19028,19035]"/>
  <match src="(: ( [31372,31373]" dest="(: ( [31596,31597]"/>
  <match src="identifier: _spender [21026,21034]" dest="identifier: _spender [21155,21163]"/>
  <match src="assignment_expression [32154,32176]" dest="assignment_expression [32385,32407]"/>
  <match src="): ) [33916,33917]" dest="): ) [42615,42616]"/>
  <match src="): ) [1410,1411]" dest="): ) [1455,1456]"/>
  <match src=",: , [28780,28781]" dest=",: , [28982,28983]"/>
  <match src="(: ( [23120,23121]" dest="(: ( [23323,23324]"/>
  <match src="expression_statement [27931,27944]" dest="expression_statement [28044,28057]"/>
  <match src="call_argument [12573,12579]" dest="call_argument [12441,12447]"/>
  <match src="expression_statement [26299,26374]" dest="expression_statement [26441,26516]"/>
  <match src="binary_expression [25469,25502]" dest="binary_expression [25724,25757]"/>
  <match src="identifier: RegistryClone [11365,11378]" dest="identifier: RegistryClone [11213,11226]"/>
  <match src="}: } [17469,17470]" dest="}: } [17458,17459]"/>
  <match src="primitive_type [8830,8837]" dest="primitive_type [8660,8667]"/>
  <match src="user_defined_type [32969,32977]" dest="user_defined_type [41670,41678]"/>
  <match src="return_type_definition [3281,3298]" dest="return_type_definition [3308,3325]"/>
  <match src="(: ( [6684,6685]" dest="(: ( [6497,6498]"/>
  <match src="function_body [12770,12835]" dest="function_body [12638,12703]"/>
  <match src="returns: returns [12755,12762]" dest="returns: returns [12623,12630]"/>
  <match src="identifier: ACCOUNT_KYC_INV [24802,24817]" dest="identifier: ACCOUNT_KYC_INV [25089,25104]"/>
  <match src="=: = [28134,28135]" dest="=: = [28247,28248]"/>
  <match src="identifier: _decreaseApprovalAllArgs [22753,22777]" dest="identifier: _decreaseApprovalAllArgs [22922,22946]"/>
  <match src="identifier: hook [29972,29976]" dest="identifier: hook [30234,30238]"/>
  <match src="view: view [13257,13261]" dest="view: view [13218,13222]"/>
  <match src="parameter [8551,8563]" dest="parameter [8361,8373]"/>
  <match src="identifier: ACCOUNT_HOOK_INV [25266,25282]" dest="identifier: ACCOUNT_HOOK_INV [25522,25538]"/>
  <match src="comment: // File: @trusttoken/trusttokens/contracts/RegistrySubscriber.sol [23892,23957]" dest="comment: // File: contracts/trusttokens/ERC20.sol [18696,18736]"/>
  <match src="member_expression [10630,10646]" dest="member_expression [10435,10451]"/>
  <match src=",: , [22794,22795]" dest=",: , [22973,22974]"/>
  <match src="type_name [9930,9937]" dest="type_name [9735,9742]"/>
  <match src="identifier: _who [13472,13476]" dest="identifier: _who [13433,13437]"/>
  <match src="type_name [15735,15742]" dest="type_name [15727,15734]"/>
  <match src="returns: returns [10546,10553]" dest="returns: returns [10351,10358]"/>
  <match src="identifier: result [18303,18309]" dest="identifier: result [18385,18391]"/>
  <match src="uint256: uint256 [4720,4727]" dest="uint256: uint256 [4654,4661]"/>
  <match src="return_type_definition [4745,4762]" dest="return_type_definition [4679,4696]"/>
  <match src="type_name [27590,27597]" dest="type_name [27703,27710]"/>
  <match src="member_expression [12521,12554]" dest="member_expression [12389,12422]"/>
  <match src="uint256: uint256 [13601,13608]" dest="uint256: uint256 [13562,13569]"/>
  <match src=",: , [13744,13745]" dest=",: , [13724,13725]"/>
  <match src="): ) [26705,26706]" dest="): ) [26846,26847]"/>
  <match src="inheritance_specifier [19813,19830]" dest="inheritance_specifier [19916,19933]"/>
  <match src="(: ( [21623,21624]" dest="(: ( [21752,21753]"/>
  <match src=",: , [10979,10980]" dest=",: , [10827,10828]"/>
  <match src="identifier: Mint [29926,29930]" dest="identifier: Mint [30188,30192]"/>
  <match src="): ) [7881,7882]" dest="): ) [7694,7695]"/>
  <match src="identifier: transferFrom [7819,7831]" dest="identifier: transferFrom [7632,7644]"/>
  <match src="primitive_type [24191,24198]" dest="primitive_type [24494,24501]"/>
  <match src="call_argument [21082,21090]" dest="call_argument [21211,21219]"/>
  <match src="parameter [31813,31829]" dest="parameter [32042,32058]"/>
  <match src="=&gt;: =&gt; [9417,9419]" dest="=&gt;: =&gt; [9247,9249]"/>
  <match src="indexed: indexed [10104,10111]" dest="indexed: indexed [9909,9916]"/>
  <match src="type_name [5358,5365]" dest="type_name [5258,5265]"/>
  <match src="identifier: MAX_SUPPLY [33456,33466]" dest="identifier: MAX_SUPPLY [42164,42174]"/>
  <match src="(: ( [14848,14849]" dest="(: ( [14848,14849]"/>
  <match src="identifier: attributes [9455,9465]" dest="identifier: attributes [9285,9295]"/>
  <match src="modifier: modifier [14823,14831]" dest="modifier: modifier [14823,14831]"/>
  <match src="uint256: uint256 [23282,23289]" dest="uint256: uint256 [23514,23521]"/>
  <match src="identifier: _attribute [12331,12341]" dest="identifier: _attribute [12199,12209]"/>
  <match src="primitive_type [32720,32727]" dest="primitive_type [41419,41426]"/>
  <match src=",: , [4786,4787]" dest=",: , [4720,4721]"/>
  <match src="comment: // so that e.g. the check can be renewed at appropriate intervals. [9329,9395]" dest="comment: // so that e.g. the check can be renewed at appropriate intervals. [9159,9225]"/>
  <match src="bytes32: bytes32 [24191,24198]" dest="bytes32: bytes32 [24494,24501]"/>
  <match src="=: = [14081,14082]" dest="=: = [14076,14077]"/>
  <match src="member_expression [20848,20858]" dest="member_expression [20943,20953]"/>
  <match src="): ) [29459,29460]" dest="): ) [29705,29706]"/>
  <match src="primitive_type [26156,26163]" dest="primitive_type [34232,34239]"/>
  <match src="}: } [28323,28324]" dest="}: } [28436,28437]"/>
  <match src="uint256: uint256 [17965,17972]" dest="uint256: uint256 [17996,18003]"/>
  <match src="identifier: _transferAllArgs [28833,28849]" dest="identifier: _transferAllArgs [29035,29051]"/>
  <match src="returns: returns [28807,28814]" dest="returns: returns [29009,29016]"/>
  <match src="type_name [12377,12390]" dest="type_name [12245,12258]"/>
  <match src="state_mutability [12982,12986]" dest="state_mutability [12866,12870]"/>
  <match src="==: == [14673,14675]" dest="==: == [14671,14673]"/>
  <match src="internal: internal [5408,5416]" dest="internal: internal [5308,5316]"/>
  <match src="pure: pure [2337,2341]" dest="pure: pure [2356,2360]"/>
  <match src="public: public [32989,32995]" dest="public: public [41690,41696]"/>
  <match src="pure: pure [4740,4744]" dest="pure: pure [4674,4678]"/>
  <match src="solidity_pragma_token [5592,5607]" dest="solidity_pragma_token [5486,5501]"/>
  <match src="constant: constant [24303,24311]" dest="constant: constant [24606,24614]"/>
  <match src="(: ( [10629,10630]" dest="(: ( [10434,10435]"/>
  <match src="uint256: uint256 [28120,28127]" dest="uint256: uint256 [28233,28240]"/>
  <match src="uint256: uint256 [19874,19881]" dest="uint256: uint256 [19977,19984]"/>
  <match src=",: , [11564,11565]" dest=",: , [11412,11413]"/>
  <match src="parameter [13546,13558]" dest="parameter [13507,13519]"/>
  <match src="type_name [30946,30953]" dest="type_name [31172,31179]"/>
  <match src="identifier: from [27543,27547]" dest="identifier: from [27656,27660]"/>
  <match src="identifier: _spender [22028,22036]" dest="identifier: _spender [22194,22202]"/>
  <match src="identifier: sub [23583,23586]" dest="identifier: sub [23856,23859]"/>
  <match src="call_argument [4082,4094]" dest="call_argument [4008,4020]"/>
  <match src="call_expression [18058,18091]" dest="call_expression [18104,18137]"/>
  <match src="function_body [10561,10688]" dest="function_body [10366,10493]"/>
  <match src="assignment_expression [23542,23620]" dest="assignment_expression [23815,23893]"/>
  <match src="type_name [17976,17982]" dest="type_name [18016,18022]"/>
  <match src="call_argument [12331,12341]" dest="call_argument [12199,12209]"/>
  <match src="function_body [18492,18571]" dest="function_body [18610,18689]"/>
  <match src="&quot;: &quot; [2699,2700]" dest="&quot;: &quot; [2718,2719]"/>
  <match src="address: address [29125,29132]" dest="address: address [29371,29378]"/>
  <match src="identifier: a [3253,3254]" dest="identifier: a [3280,3281]"/>
  <match src="primitive_type [23510,23517]" dest="primitive_type [23782,23789]"/>
  <match src="identifier: initialize [32958,32968]" dest="identifier: initialize [41659,41669]"/>
  <match src="identifier: ACCOUNT_BLACKLISTED [26499,26518]" dest="identifier: ACCOUNT_BLACKLISTED [26641,26660]"/>
  <match src="binary_expression [29233,29242]" dest="binary_expression [29479,29488]"/>
  <match src="function: function [33683,33691]" dest="function: function [42382,42390]"/>
  <match src="bytes32: bytes32 [24070,24077]" dest="bytes32: bytes32 [24373,24380]"/>
  <match src="function_definition [33350,33592]" dest="function_definition [42058,42291]"/>
  <match src="comment: /**  * @title Standard ERC20 token  *  * @dev Implementation of the basic standard token.  * @dev https://github.com/ethereum/EIPs/issues/20  * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol  */ [19506,19778]" dest="comment: /**  * @title Standard ERC20 token  *  * @dev Implementation of the basic standard token.  * @dev https://github.com/ethereum/EIPs/issues/20  * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol  */ [19609,19881]"/>
  <match src="block_statement [26454,26534]" dest="block_statement [26596,26676]"/>
  <match src="]: ] [12534,12535]" dest="]: ] [12402,12403]"/>
  <match src="[: [ [11827,11828]" dest="[: [ [11675,11676]"/>
  <match src="uint256: uint256 [2306,2313]" dest="uint256: uint256 [2325,2332]"/>
  <match src="function: function [23421,23429]" dest="function: function [23659,23667]"/>
  <match src="(: ( [29954,29955]" dest="(: ( [30216,30217]"/>
  <match src="comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      * - Addition cannot overflow.      */ [690,915]" dest="comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      *      * - Addition cannot overflow.      */ [719,952]"/>
  <match src="binary_expression [26882,26915]" dest="binary_expression [27023,27056]"/>
  <match src="]: ] [11152,11153]" dest="]: ] [11000,11001]"/>
  <match src=",: , [6340,6341]" dest=",: , [6153,6154]"/>
  <match src="bool: bool [7901,7905]" dest="bool: bool [7714,7718]"/>
  <match src="identifier: _notes [10838,10844]" dest="identifier: _notes [10680,10686]"/>
  <match src="parameter [29823,29834]" dest="parameter [30077,30088]"/>
  <match src="identifier: require [25461,25468]" dest="identifier: require [25716,25723]"/>
  <match src="(: ( [12175,12176]" dest="(: ( [12043,12044]"/>
  <match src="primitive_type [28769,28776]" dest="primitive_type [28971,28978]"/>
  <match src="call_argument [30261,30273]" dest="call_argument [30523,30535]"/>
  <match src="comment: // File: @trusttoken/trusttokens/contracts/TrueCoinReceiver.sol [27130,27193]" dest="comment: // File: contracts/trusttokens/RegistrySubscriber.sol [24199,24252]"/>
  <match src="identifier: syncAttributeValue [14122,14140]" dest="identifier: syncAttributeValue [14117,14135]"/>
  <match src="if: if [26437,26439]" dest="if: if [26579,26581]"/>
  <match src="}: } [18376,18377]" dest="}: } [18458,18459]"/>
  <match src="}: } [33951,33952]" dest="}: } [42650,42651]"/>
  <match src="identifier: a [4785,4786]" dest="identifier: a [4719,4720]"/>
  <match src=",: , [18923,18924]" dest=",: , [19026,19027]"/>
  <match src="primitive_type [979,986]" dest="primitive_type [1016,1023]"/>
  <match src="visibility [33782,33788]" dest="visibility [42481,42487]"/>
  <match src=".: . [19309,19310]" dest=".: . [19412,19413]"/>
  <match src="(: ( [29032,29033]" dest="(: ( [29278,29279]"/>
  <match src="while_statement [12486,12592]" dest="while_statement [12354,12460]"/>
  <match src="number_literal: 0x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff [24944,25010]" dest="number_literal: 0x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff [25215,25281]"/>
  <match src=",: , [8119,8120]" dest=",: , [7932,7933]"/>
  <match src="comment: /**     * @dev Modifier throws if called by any account other than the pendingOwner.     */ [14724,14817]" dest="comment: /**      * @dev Modifier throws if called by any account other than the pendingOwner.      */ [14722,14817]"/>
  <match src="identifier: _mint [33483,33488]" dest="identifier: _mint [42191,42196]"/>
  <match src="function: function [13189,13197]" dest="function: function [13150,13158]"/>
  <match src="expression_statement [14115,14193]" dest="expression_statement [14110,14188]"/>
  <match src="expression_statement [33122,33140]" dest="expression_statement [41823,41841]"/>
  <match src="visibility [7468,7476]" dest="visibility [7281,7289]"/>
  <match src="}: } [21106,21107]" dest="}: } [21235,21236]"/>
  <match src="identifier: pendingOwner [30777,30789]" dest="identifier: pendingOwner [31022,31034]"/>
  <match src="expression_statement [14307,14343]" dest="expression_statement [14302,14338]"/>
  <match src="identifier: timestamp [13657,13666]" dest="identifier: timestamp [13618,13627]"/>
  <match src="(: ( [28935,28936]" dest="(: ( [29139,29140]"/>
  <match src="identifier: _to [28691,28694]" dest="identifier: _to [28891,28894]"/>
  <match src="type_alias [32707,32715]" dest="type_alias [41406,41414]"/>
  <match src="type_name [13043,13056]" dest="type_name [13004,13017]"/>
  <match src=",: , [23456,23457]" dest=",: , [23704,23705]"/>
  <match src="call_argument [23202,23210]" dest="call_argument [23406,23414]"/>
  <match src="assignment_expression [26560,26609]" dest="assignment_expression [26701,26750]"/>
  <match src="(: ( [25499,25500]" dest="(: ( [25754,25755]"/>
  <match src="identifier: _value [20948,20954]" dest="identifier: _value [21062,21068]"/>
  <match src="visibility [27312,27320]" dest="visibility [27439,27447]"/>
  <match src="expression_statement [15146,15170]" dest="expression_statement [15149,15173]"/>
  <match src="): ) [14695,14696]" dest="): ) [14693,14694]"/>
  <match src="member_expression [13130,13140]" dest="member_expression [13091,13101]"/>
  <match src="state_mutability [1922,1926]" dest="state_mutability [1933,1937]"/>
  <match src="identifier: _attribute [26395,26405]" dest="identifier: _attribute [26537,26547]"/>
  <match src="type_name [29967,29971]" dest="type_name [30229,30233]"/>
  <match src="state_mutability [33789,33793]" dest="state_mutability [42488,42492]"/>
  <match src="identifier: newOwner [15108,15116]" dest="identifier: newOwner [15111,15119]"/>
  <match src="type_name [18396,18403]" dest="type_name [18490,18497]"/>
  <match src="type_name [15770,15798]" dest="type_name [15762,15789]"/>
  <match src="(: ( [30242,30243]" dest="(: ( [30504,30505]"/>
  <match src="type_name [23282,23289]" dest="type_name [23514,23521]"/>
  <match src="is: is [19810,19812]" dest="is: is [19913,19915]"/>
  <match src="): ) [15870,15871]" dest="): ) [15859,15860]"/>
  <match src="visibility [33394,33402]" dest="visibility [42102,42110]"/>
  <match src="{: { [33818,33819]" dest="{: { [42517,42518]"/>
  <match src="parameter [18407,18416]" dest="parameter [18510,18519]"/>
  <match src="identifier: b [5377,5378]" dest="identifier: b [5277,5278]"/>
  <match src="call_argument [11072,11082]" dest="call_argument [10920,10930]"/>
  <match src="primitive_type [28409,28416]" dest="primitive_type [28550,28557]"/>
  <match src="identifier: ACCOUNT_HOOK [26994,27006]" dest="identifier: ACCOUNT_HOOK [27135,27147]"/>
  <match src="identifier: _attribute [26103,26113]" dest="identifier: _attribute [26392,26402]"/>
  <match src="view: view [25396,25400]" dest="view: view [25651,25655]"/>
  <match src="contract_body [17742,18574]" dest="contract_body [17718,18692]"/>
  <match src="identifier: Approval [21971,21979]" dest="identifier: Approval [22137,22145]"/>
  <match src="function_body [13610,13674]" dest="function_body [13571,13635]"/>
  <match src="visibility [19019,19027]" dest="visibility [19122,19130]"/>
  <match src="): ) [15869,15870]" dest="): ) [15858,15859]"/>
  <match src="=: = [24101,24102]" dest="=: = [24404,24405]"/>
  <match src="function_body [30728,30760]" dest="function_body [30973,31005]"/>
  <match src="primitive_type [1885,1891]" dest="primitive_type [1896,1902]"/>
  <match src="identifier: _ [14908,14909]" dest="identifier: _ [14908,14909]"/>
  <match src="function: function [30768,30776]" dest="function: function [31013,31021]"/>
  <match src="primitive_type [27981,27988]" dest="primitive_type [28094,28101]"/>
  <match src="comment: /**     * @dev Throws if called by any account other than the owner.     */ [14539,14616]" dest="comment: /**      * @dev Throws if called by any account other than the owner.      */ [14535,14614]"/>
  <match src="if: if [26391,26393]" dest="if: if [26533,26535]"/>
  <match src="function: function [1377,1385]" dest="function: function [1422,1430]"/>
  <match src="expression_statement [4067,4096]" dest="expression_statement [3993,4022]"/>
  <match src="expression_statement [11670,11695]" dest="expression_statement [11518,11543]"/>
  <match src="contract_declaration [19780,23888]" dest="contract_declaration [19883,24195]"/>
  <match src="(: ( [23443,23444]" dest="(: ( [23681,23682]"/>
  <match src="): ) [1072,1073]" dest="): ) [1109,1110]"/>
  <match src="identifier: _attribute [12228,12238]" dest="identifier: _attribute [12096,12106]"/>
  <match src="address: address [23264,23271]" dest="address: address [23487,23494]"/>
  <match src="call_argument [4788,4789]" dest="call_argument [4722,4723]"/>
  <match src="type_name [6376,6380]" dest="type_name [6189,6193]"/>
  <match src="external: external [14407,14415]" dest="external: external [14402,14410]"/>
  <match src="call_argument [12163,12199]" dest="call_argument [12031,12067]"/>
  <match src="type_name [12445,12452]" dest="type_name [12313,12320]"/>
  <match src="call_expression [1462,1505]" dest="call_expression [1507,1550]"/>
  <match src="]: ] [14095,14096]" dest="]: ] [14090,14091]"/>
  <match src="): ) [11964,11965]" dest="): ) [11798,11799]"/>
  <match src=",: , [29443,29444]" dest=",: , [29689,29690]"/>
  <match src="for: for [18868,18871]" dest="for: for [18971,18974]"/>
  <match src="address: address [8857,8864]" dest="address: address [8687,8694]"/>
  <match src="identifier: ProxyStorage [30659,30671]" dest="identifier: ProxyStorage [30906,30918]"/>
  <match src=",: , [2697,2698]" dest=",: , [2716,2717]"/>
  <match src="call_expression [1956,1985]" dest="call_expression [1967,1996]"/>
  <match src="uint256: uint256 [2317,2324]" dest="uint256: uint256 [2336,2343]"/>
  <match src="visibility [8838,8844]" dest="visibility [8668,8674]"/>
  <match src="identifier: _to [14307,14310]" dest="identifier: _to [14302,14305]"/>
  <match src="event: event [27516,27521]" dest="event: event [27629,27634]"/>
  <match src="comment: /**  * @title TrustToken  * @dev The TrustToken contract is a claimable contract where the  * owner can only mint or transfer ownership. TrustTokens use 8 decimals  * in order to prevent rewards from getting stuck in the remainder on division.  * Tolerates dilution to slash stake and accept rewards.  */ [32323,32633]" dest="comment: /**  * @title TrustToken  * @dev The TrustToken contract is a claimable contract where the  * owner can only mint or transfer ownership. TrustTokens use 8 decimals  * in order to prevent rewards from getting stuck in the remainder on division.  * Tolerates dilution to slash stake and accept rewards.  */ [41042,41352]"/>
  <match src="): ) [26420,26421]" dest="): ) [26562,26563]"/>
  <match src="member_expression [12268,12278]" dest="member_expression [12136,12146]"/>
  <match src="parameter [33641,33646]" dest="parameter [42340,42345]"/>
  <match src="expression_statement [26056,26078]" dest="expression_statement [26345,26367]"/>
  <match src="identifier: Registry [25410,25418]" dest="identifier: Registry [25665,25673]"/>
  <match src="type_name [13746,13753]" dest="type_name [13735,13742]"/>
  <match src="parameter [2351,2358]" dest="parameter [2370,2377]"/>
  <match src="identifier: sender [11076,11082]" dest="identifier: sender [10924,10930]"/>
  <match src=",: , [12266,12267]" dest=",: , [12134,12135]"/>
  <match src="call_argument [12351,12353]" dest="call_argument [12219,12221]"/>
  <match src=",: , [13140,13141]" dest=",: , [13101,13102]"/>
  <match src="(: ( [29373,29374]" dest="(: ( [29619,29620]"/>
  <match src="identifier: ACCOUNT_HOOK [25150,25162]" dest="identifier: ACCOUNT_HOOK [25417,25429]"/>
  <match src="identifier: initalized [33122,33132]" dest="identifier: initalized [41823,41833]"/>
  <match src="): ) [30976,30977]" dest="): ) [31196,31197]"/>
  <match src="comment: /**     * @dev Modifier throws if called by any account other than the pendingOwner.     */ [31436,31529]" dest="comment: /**      * @dev Modifier throws if called by any account other than the pendingOwner.      */ [31660,31755]"/>
  <match src=",: , [31221,31222]" dest=",: , [31443,31444]"/>
  <match src="}: } [31890,31891]" dest="}: } [32119,32120]"/>
  <match src="event: event [10072,10077]" dest="event: event [9877,9882]"/>
  <match src="): ) [11298,11299]" dest="): ) [11146,11147]"/>
  <match src="(: ( [32210,32211]" dest="(: ( [32441,32442]"/>
  <match src="address: address [12941,12948]" dest="address: address [12807,12814]"/>
  <match src="(: ( [29206,29207]" dest="(: ( [29452,29453]"/>
  <match src="modifier_invocation [28989,29009]" dest="modifier_invocation [29235,29255]"/>
  <match src=".: . [10633,10634]" dest=".: . [10438,10439]"/>
  <match src="): ) [14332,14333]" dest="): ) [14327,14328]"/>
  <match src="comment: /**      * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * IMPORTANT: Beware that changing an allowance with this method brings the risk      * that someone may use both the old and the new allowance by unfortunate      * transaction ordering. One possible solution to mitigate this race      * condition is to first reduce the spender's allowance to 0 and set the      * desired value afterwards:      * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      *      * Emits an {Approval} event.      */ [6757,7412]" dest="comment: /**      * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * IMPORTANT: Beware that changing an allowance with this method brings the risk      * that someone may use both the old and the new allowance by unfortunate      * transaction ordering. One possible solution to mitigate this race      * condition is to first reduce the spender's allowance to 0 and set the      * desired value afterwards:      * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      *      * Emits an {Approval} event.      */ [6570,7225]"/>
  <match src="primitive_type [22864,22871]" dest="primitive_type [23067,23074]"/>
  <match src="identifier: _mint [29817,29822]" dest="identifier: _mint [30071,30076]"/>
  <match src="): ) [23490,23491]" dest="): ) [23762,23763]"/>
  <match src="}: } [30860,30861]" dest="}: } [31105,31106]"/>
  <match src="identifier: _who [23356,23360]" dest="identifier: _who [23594,23598]"/>
  <match src="type_name [18418,18424]" dest="type_name [18530,18536]"/>
  <match src="type_name [7832,7839]" dest="type_name [7645,7652]"/>
  <match src="type_name [8698,8705]" dest="type_name [8532,8539]"/>
  <match src="identifier: symbol [33873,33879]" dest="identifier: symbol [42572,42578]"/>
  <match src="identifier: _attribute [12026,12036]" dest="identifier: _attribute [11860,11870]"/>
  <match src="type_name [23476,23483]" dest="type_name [23742,23749]"/>
  <match src="=: = [14018,14019]" dest="=: = [14013,14014]"/>
  <match src="!=: != [26448,26450]" dest="!=: != [26590,26592]"/>
  <match src="): ) [3297,3298]" dest="): ) [3324,3325]"/>
  <match src="type_name [10516,10523]" dest="type_name [10321,10328]"/>
  <match src="comment: // Returns the exact value of the attribute, as well as its metadata [12845,12913]" dest="comment: // Returns the exact value of the attribute, as well as its metadata [12711,12779]"/>
  <match src="): ) [25502,25503]" dest="): ) [25757,25758]"/>
  <match src="call_argument [32211,32212]" dest="call_argument [32442,32443]"/>
  <match src="type_name [10496,10503]" dest="type_name [10301,10308]"/>
  <match src="string [3327,3355]" dest="string [3354,3382]"/>
  <match src="identifier: _who [23258,23262]" dest="identifier: _who [23472,23476]"/>
  <match src="function_definition [18968,19181]" dest="function_definition [19071,19284]"/>
  <match src="&quot;: &quot; [33940,33941]" dest="&quot;: &quot; [42639,42640]"/>
  <match src="binary_expression [12788,12827]" dest="binary_expression [12656,12695]"/>
  <match src="): ) [2602,2603]" dest="): ) [2621,2622]"/>
  <match src="identifier: OwnershipTransferred [32100,32120]" dest="identifier: OwnershipTransferred [32331,32351]"/>
  <match src="): ) [10676,10677]" dest="): ) [10481,10482]"/>
  <match src=",: , [29556,29557]" dest=",: , [29810,29811]"/>
  <match src="): ) [29242,29243]" dest="): ) [29488,29489]"/>
  <match src="identifier: _from [29003,29008]" dest="identifier: _from [29249,29254]"/>
  <match src="): ) [9863,9864]" dest="): ) [9668,9669]"/>
  <match src="function_definition [25821,27123]" dest="function_definition [26076,27264]"/>
  <match src="identifier: ACCOUNT_KYC_INV [26830,26845]" dest="identifier: ACCOUNT_KYC_INV [26971,26986]"/>
  <match src="(: ( [21067,21068]" dest="(: ( [21196,21197]"/>
  <match src="): ) [28873,28874]" dest="): ) [29075,29076]"/>
  <match src="identifier: _addedValue [21647,21658]" dest="identifier: _addedValue [21779,21790]"/>
  <match src="): ) [18537,18538]" dest="): ) [18655,18656]"/>
  <match src=",: , [5465,5466]" dest=",: , [5365,5366]"/>
  <match src="function: function [21790,21798]" dest="function: function [21922,21930]"/>
  <match src="expression_statement [32154,32177]" dest="expression_statement [32385,32408]"/>
  <match src="(: ( [3979,3980]" dest="(: ( [3972,3973]"/>
  <match src="identifier: to [29278,29280]" dest="identifier: to [29524,29526]"/>
  <match src="storage: storage [12393,12400]" dest="storage: storage [12261,12268]"/>
  <match src="primitive_type [7435,7442]" dest="primitive_type [7248,7255]"/>
  <match src="{: { [33731,33732]" dest="{: { [42430,42431]"/>
  <match src="call_argument [29211,29217]" dest="call_argument [29457,29463]"/>
  <match src="address: address [27527,27534]" dest="address: address [27640,27647]"/>
  <match src="=: = [32069,32070]" dest="=: = [32300,32301]"/>
  <match src="identifier: ClaimableContract [32676,32693]" dest="identifier: ClaimableContract [33321,33338]"/>
  <match src="primitive_type [20956,20963]" dest="primitive_type [21079,21086]"/>
  <match src="(: ( [10884,10885]" dest="(: ( [10732,10733]"/>
  <match src="): ) [31561,31562]" dest="): ) [31787,31788]"/>
  <match src="uint256: uint256 [10814,10821]" dest="uint256: uint256 [10647,10654]"/>
  <match src="inheritance_specifier [27466,27486]" dest="inheritance_specifier [27581,27601]"/>
  <match src="primitive_type [32047,32054]" dest="primitive_type [32278,32285]"/>
  <match src="binary_expression [11840,11850]" dest="binary_expression [11688,11698]"/>
  <match src="parameter [29479,29501]" dest="parameter [29733,29755]"/>
  <match src=",: , [13021,13022]" dest=",: , [12954,12955]"/>
  <match src="function_definition [28910,29407]" dest="function_definition [29114,29653]"/>
  <match src="(: ( [30695,30696]" dest="(: ( [30940,30941]"/>
  <match src="array_access [12211,12227]" dest="array_access [12079,12095]"/>
  <match src="{: { [14426,14427]" dest="{: { [14421,14422]"/>
  <match src="identifier: sender [14874,14880]" dest="identifier: sender [14874,14880]"/>
  <match src="contract: contract [27225,27233]" dest="contract: contract [33275,33283]"/>
  <match src="&quot;: &quot; [19154,19155]" dest="&quot;: &quot; [19257,19258]"/>
  <match src="identifier: _value [12573,12579]" dest="identifier: _value [12441,12447]"/>
  <match src="assignment_expression [32187,32213]" dest="assignment_expression [32418,32444]"/>
  <match src="address: address [23789,23796]" dest="address: address [24081,24088]"/>
  <match src=",: , [28534,28535]" dest=",: , [28698,28699]"/>
  <match src="{: { [27728,27729]" dest="{: { [27841,27842]"/>
  <match src="!=: != [12823,12825]" dest="!=: != [12691,12693]"/>
  <match src="identifier: Transfer [18894,18902]" dest="identifier: Transfer [18997,19005]"/>
  <match src="binary_expression [14662,14681]" dest="binary_expression [14660,14679]"/>
  <match src="(: ( [28683,28684]" dest="(: ( [28883,28884]"/>
  <match src=",: , [13228,13229]" dest=",: , [13189,13190]"/>
  <match src="): ) [28500,28501]" dest="): ) [28664,28665]"/>
  <match src="identifier: a [17874,17875]" dest="identifier: a [17884,17885]"/>
  <match src="identifier: _attribute [10885,10895]" dest="identifier: _attribute [10733,10743]"/>
  <match src="parameter [4720,4729]" dest="parameter [4654,4663]"/>
  <match src="return_statement [28726,28738]" dest="return_statement [28926,28938]"/>
  <match src="]: ] [13325,13326]" dest="]: ] [13286,13287]"/>
  <match src="identifier: pendingOwner [15146,15158]" dest="identifier: pendingOwner [15149,15161]"/>
  <match src="event_paramater [30946,30970]" dest="event_paramater [31172,31196]"/>
  <match src="call_argument [28292,28311]" dest="call_argument [28405,28424]"/>
  <match src="identifier: _attribute [11751,11761]" dest="identifier: _attribute [11599,11609]"/>
  <match src="function_definition [33155,33243]" dest="function_definition [41856,41951]"/>
  <match src="call_argument [22004,22037]" dest="call_argument [22170,22203]"/>
  <match src="]: ] [19099,19100]" dest="]: ] [19202,19203]"/>
  <match src="): ) [25897,25898]" dest="): ) [26186,26187]"/>
  <match src="visibility [11966,11972]" dest="visibility [11800,11806]"/>
  <match src="call_expression [23107,23154]" dest="call_expression [23310,23357]"/>
  <match src="call_argument [30107,30109]" dest="call_argument [30369,30371]"/>
  <match src="call_expression [14455,14485]" dest="call_expression [14450,14480]"/>
  <match src=",: , [14514,14515]" dest=",: , [14509,14510]"/>
  <match src="member_expression [19129,19145]" dest="member_expression [19232,19248]"/>
  <match src="array_access [12788,12816]" dest="array_access [12656,12684]"/>
  <match src="function_definition [2293,2764]" dest="function_definition [2312,2783]"/>
  <match src="contract: contract [23991,23999]" dest="contract: contract [24294,24302]"/>
  <match src="call_argument [10620,10678]" dest="call_argument [10425,10483]"/>
  <match src="[: [ [11429,11430]" dest="[: [ [11277,11278]"/>
  <match src="identifier: c [4114,4115]" dest="identifier: c [4040,4041]"/>
  <match src="): ) [25971,25972]" dest="): ) [26260,26261]"/>
  <match src="bool: bool [21676,21680]" dest="bool: bool [21808,21812]"/>
  <match src="type_name [20006,20013]" dest="type_name [20105,20112]"/>
  <match src="uint256: uint256 [5431,5438]" dest="uint256: uint256 [5331,5338]"/>
  <match src=",: , [29568,29569]" dest=",: , [29822,29823]"/>
  <match src="address: address [14471,14478]" dest="address: address [14466,14473]"/>
  <match src="[: [ [26978,26979]" dest="[: [ [27119,27120]"/>
  <match src="type_name [13865,13872]" dest="type_name [13860,13867]"/>
  <match src="bool: bool [28816,28820]" dest="bool: bool [29018,29022]"/>
  <match src="view: view [6053,6057]" dest="view: view [5866,5870]"/>
  <match src="parameter [13393,13411]" dest="parameter [13354,13372]"/>
  <match src="}: } [27323,27324]" dest="}: } [27450,27451]"/>
  <match src="function: function [28910,28918]" dest="function: function [29114,29122]"/>
  <match src="returns: returns [12987,12994]" dest="returns: returns [12880,12887]"/>
  <match src="}: } [23884,23885]" dest="}: } [24191,24192]"/>
  <match src="number_literal: 0 [23013,23014]" dest="number_literal: 0 [23216,23217]"/>
  <match src="identifier: attributes [13298,13308]" dest="identifier: attributes [13259,13269]"/>
  <match src="variable_declaration [28120,28133]" dest="variable_declaration [28233,28246]"/>
  <match src="binary_expression [28017,28044]" dest="binary_expression [28130,28157]"/>
  <match src="[: [ [22906,22907]" dest="[: [ [23109,23110]"/>
  <match src="): ) [33618,33619]" dest="): ) [42317,42318]"/>
  <match src="identifier: _attribute [10937,10947]" dest="identifier: _attribute [10785,10795]"/>
  <match src=".: . [14665,14666]" dest=".: . [14663,14664]"/>
  <match src="(: ( [25384,25385]" dest="(: ( [25633,25634]"/>
  <match src="identifier: div [3903,3906]" dest="identifier: div [3896,3899]"/>
  <match src="string [31395,31407]" dest="string [31619,31631]"/>
  <match src="block_statement [26675,26872]" dest="block_statement [26816,27013]"/>
  <match src="struct_declaration [8642,8775]" dest="struct_declaration [8476,8609]"/>
  <match src="assignment_expression [26968,27006]" dest="assignment_expression [27109,27147]"/>
  <match src="identifier: targets [12461,12468]" dest="identifier: targets [12329,12336]"/>
  <match src="primitive_type [1435,1442]" dest="primitive_type [1480,1487]"/>
  <match src="identifier: initalized [15718,15728]" dest="identifier: initalized [15710,15720]"/>
  <match src="): ) [23668,23669]" dest="): ) [23941,23942]"/>
  <match src="assignment_expression [19356,19380]" dest="assignment_expression [19459,19483]"/>
  <match src="variable_declaration_statement [11164,11195]" dest="variable_declaration_statement [11012,11043]"/>
  <match src="type_name [23789,23796]" dest="type_name [24081,24088]"/>
  <match src=",: , [10036,10037]" dest=",: , [9841,9842]"/>
  <match src="{: { [30672,30673]" dest="{: { [30919,30920]"/>
  <match src="mapping: mapping [9700,9707]" dest="mapping: mapping [9530,9537]"/>
  <match src="(: ( [6066,6067]" dest="(: ( [5879,5880]"/>
  <match src=",: , [21861,21862]" dest=",: , [22012,22013]"/>
  <match src="binary_expression [33428,33466]" dest="binary_expression [42136,42174]"/>
  <match src="}: } [33242,33243]" dest="}: } [41950,41951]"/>
  <match src="call_argument [9679,9692]" dest="call_argument [9509,9522]"/>
  <match src="{: { [14050,14051]" dest="{: { [14045,14046]"/>
  <match src="parameter [25849,25861]" dest="parameter [26114,26126]"/>
  <match src="parameter [13271,13278]" dest="parameter [13232,13239]"/>
  <match src="member_expression [11629,11659]" dest="member_expression [11477,11507]"/>
  <match src="expression_statement [10864,10910]" dest="expression_statement [10712,10758]"/>
  <match src="state_mutability [6726,6730]" dest="state_mutability [6539,6543]"/>
  <match src="type_name [1996,2003]" dest="type_name [2007,2014]"/>
  <match src="string_literal [12264,12266]" dest="string_literal [12132,12134]"/>
  <match src="uint256: uint256 [5358,5365]" dest="uint256: uint256 [5258,5265]"/>
  <match src="type_name [10010,10017]" dest="type_name [9815,9822]"/>
  <match src="state_mutability [12750,12754]" dest="state_mutability [12618,12622]"/>
  <match src="(: ( [29071,29072]" dest="(: ( [29317,29318]"/>
  <match src="return_type_definition [12987,13031]" dest="return_type_definition [12880,12987]"/>
  <match src="type_cast_expression [26064,26077]" dest="type_cast_expression [26353,26366]"/>
  <match src="identifier: _from [28102,28107]" dest="identifier: _from [28215,28220]"/>
  <match src="return_type_definition [970,987]" dest="return_type_definition [1007,1024]"/>
  <match src="): ) [10155,10156]" dest="): ) [9960,9961]"/>
  <match src="type_name [24128,24135]" dest="type_name [24431,24438]"/>
  <match src="primitive_type [28584,28591]" dest="primitive_type [28760,28767]"/>
  <match src="call_argument [31373,31393]" dest="call_argument [31597,31617]"/>
  <match src="pragma: pragma [62,68]" dest="pragma: pragma [91,97]"/>
  <match src="): ) [14191,14192]" dest="): ) [14186,14187]"/>
  <match src="emit_statement [31185,31235]" dest="emit_statement [31407,31457]"/>
  <match src="(: ( [18142,18143]" dest="(: ( [18190,18191]"/>
  <match src="visibility [15743,15749]" dest="visibility [15735,15741]"/>
  <match src="primitive_type [29430,29437]" dest="primitive_type [29676,29683]"/>
  <match src="uint256: uint256 [29836,29843]" dest="uint256: uint256 [30090,30097]"/>
  <match src="binary_expression [28018,28038]" dest="binary_expression [28131,28151]"/>
  <match src="/: / [18560,18561]" dest="/: / [18678,18679]"/>
  <match src="identifier: owner [15359,15364]" dest="identifier: owner [15364,15369]"/>
  <match src="[: [ [23700,23701]" dest="[: [ [23973,23974]"/>
  <match src="call_argument [23384,23404]" dest="call_argument [23622,23642]"/>
  <match src="block_statement [11225,11311]" dest="block_statement [11073,11159]"/>
  <match src="function: function [30681,30689]" dest="function: function [30926,30934]"/>
  <match src="}: } [17934,17935]" dest="}: } [17944,17945]"/>
  <match src="pure: pure [965,969]" dest="pure: pure [1002,1006]"/>
  <match src="uint256: uint256 [14008,14015]" dest="uint256: uint256 [14003,14010]"/>
  <match src="call_argument [30057,30060]" dest="call_argument [30319,30322]"/>
  <match src="constructor_definition [31123,31242]" dest="constructor_definition [31345,31464]"/>
  <match src=",: , [6698,6699]" dest=",: , [6511,6512]"/>
  <match src="identifier: spender [8375,8382]" dest="identifier: spender [8188,8195]"/>
  <match src="identifier: spender [7443,7450]" dest="identifier: spender [7256,7263]"/>
  <match src="primitive_type [15713,15717]" dest="primitive_type [15705,15709]"/>
  <match src="identifier: _attribute [13478,13488]" dest="identifier: _attribute [13439,13449]"/>
  <match src="call_argument [14320,14341]" dest="call_argument [14315,14336]"/>
  <match src="primitive_type [12764,12768]" dest="primitive_type [12632,12636]"/>
  <match src="block_statement [26422,26636]" dest="block_statement [26564,26777]"/>
  <match src="): ) [10677,10678]" dest="): ) [10482,10483]"/>
  <match src="): ) [15445,15446]" dest="): ) [15450,15451]"/>
  <match src="number_literal: 0 [26038,26039]" dest="number_literal: 0 [26327,26328]"/>
  <match src="parameter [30719,30726]" dest="parameter [30964,30971]"/>
  <match src="type_name [8551,8558]" dest="type_name [8361,8368]"/>
  <match src="address: address [15969,15976]" dest="address: address [15957,15964]"/>
  <match src="parameter [30813,30820]" dest="parameter [31058,31065]"/>
  <match src="}: } [19387,19388]" dest="}: } [19490,19491]"/>
  <match src="==: == [26657,26659]" dest="==: == [26798,26800]"/>
  <match src="call_argument [21026,21034]" dest="call_argument [21155,21163]"/>
  <match src="parameter [33903,33916]" dest="parameter [42602,42615]"/>
  <match src="pure: pure [5417,5421]" dest="pure: pure [5317,5321]"/>
  <match src="identifier: msg [20848,20851]" dest="identifier: msg [20943,20946]"/>
  <match src="=: = [24826,24827]" dest="=: = [25105,25106]"/>
  <match src="uint256: uint256 [28409,28416]" dest="uint256: uint256 [28550,28557]"/>
  <match src="(: ( [28017,28018]" dest="(: ( [28130,28131]"/>
  <match src="type_name [29955,29962]" dest="type_name [30217,30224]"/>
  <match src="]: ] [19125,19126]" dest="]: ] [19228,19229]"/>
  <match src="parameter [17954,17963]" dest="parameter [17976,17985]"/>
  <match src="identifier: attributes [26560,26570]" dest="identifier: attributes [26701,26711]"/>
  <match src="call_argument [5459,5465]" dest="call_argument [5359,5365]"/>
  <match src="function_body [15135,15177]" dest="function_body [15138,15180]"/>
  <match src="bytes32: bytes32 [12955,12962]" dest="bytes32: bytes32 [12821,12828]"/>
  <match src="if_statement [30013,30085]" dest="if_statement [30275,30347]"/>
  <match src=".: . [33439,33440]" dest=".: . [42147,42148]"/>
  <match src="primitive_type [2317,2324]" dest="primitive_type [2336,2343]"/>
  <match src=",: , [28702,28703]" dest=",: , [28902,28903]"/>
  <match src="(: ( [12492,12493]" dest="(: ( [12360,12361]"/>
  <match src=".: . [12816,12817]" dest=".: . [12684,12685]"/>
  <match src="string_literal [33028,33048]" dest="string_literal [41729,41749]"/>
  <match src="[: [ [11762,11763]" dest="[: [ [11610,11611]"/>
  <match src="identifier: c [2659,2660]" dest="identifier: c [2678,2679]"/>
  <match src="identifier: length [11653,11659]" dest="identifier: length [11501,11507]"/>
  <match src="identifier: transfer [14502,14510]" dest="identifier: transfer [14497,14505]"/>
  <match src="identifier: _subAllowance [28463,28476]" dest="identifier: _subAllowance [28627,28640]"/>
  <match src="call_argument [14683,14695]" dest="call_argument [14681,14693]"/>
  <match src="uint256: uint256 [8674,8681]" dest="uint256: uint256 [8508,8515]"/>
  <match src="address: address [15990,15997]" dest="address: address [15978,15985]"/>
  <match src="!=: != [26171,26173]" dest="!=: != [34319,34321]"/>
  <match src="): ) [19272,19273]" dest="): ) [19375,19376]"/>
  <match src="primitive_type [29125,29132]" dest="primitive_type [29371,29378]"/>
  <match src="(: ( [22957,22958]" dest="(: ( [23160,23161]"/>
  <match src="member_expression [28704,28714]" dest="member_expression [28904,28914]"/>
  <match src="identifier: RegistryClone [13797,13810]" dest="identifier: RegistryClone [13792,13805]"/>
  <match src="type_name [15862,15869]" dest="type_name [15851,15858]"/>
  <match src="): ) [26345,26346]" dest="): ) [26487,26488]"/>
  <match src="identifier: syncAttribute [13691,13704]" dest="identifier: syncAttribute [13652,13665]"/>
  <match src="}: } [28055,28056]" dest="}: } [28168,28169]"/>
  <match src="call_expression [10599,10679]" dest="call_expression [10404,10484]"/>
  <match src="parameter [12764,12768]" dest="parameter [12632,12636]"/>
  <match src="identifier: msg [25469,25472]" dest="identifier: msg [25724,25727]"/>
  <match src="uint256: uint256 [18143,18150]" dest="uint256: uint256 [18201,18208]"/>
  <match src="): ) [7905,7906]" dest="): ) [7718,7719]"/>
  <match src="state_variable_declaration [32734,32753]" dest="state_variable_declaration [41433,41452]"/>
  <match src="identifier: to [30062,30064]" dest="identifier: to [30324,30326]"/>
  <match src="function: function [2293,2301]" dest="function: function [2312,2320]"/>
  <match src="): ) [26372,26373]" dest="): ) [26514,26515]"/>
  <match src="(: ( [30158,30159]" dest="(: ( [30420,30421]"/>
  <match src="type_name [6027,6034]" dest="type_name [5840,5847]"/>
  <match src=",: , [23593,23594]" dest=",: , [23866,23867]"/>
  <match src="variable_declaration [13797,13828]" dest="variable_declaration [13792,13823]"/>
  <match src="visibility [12137,12143]" dest="visibility [12005,12011]"/>
  <match src="contract_declaration [15684,17470]" dest="contract_declaration [15676,17459]"/>
  <match src="call_argument [5467,5479]" dest="call_argument [5367,5379]"/>
  <match src="identifier: transfer [28760,28768]" dest="identifier: transfer [28962,28970]"/>
  <match src="address: address [28205,28212]" dest="address: address [28318,28325]"/>
  <match src="=: = [29978,29979]" dest="=: = [30240,30241]"/>
  <match src="function: function [3232,3240]" dest="function: function [3259,3267]"/>
  <match src="identifier: targets [11180,11187]" dest="identifier: targets [11028,11035]"/>
  <match src="==: == [28282,28284]" dest="==: == [28395,28397]"/>
  <match src="(: ( [25490,25491]" dest="(: ( [25745,25746]"/>
  <match src="): ) [12504,12505]" dest="): ) [12372,12373]"/>
  <match src="identifier: onlyPendingOwner [14832,14848]" dest="identifier: onlyPendingOwner [14832,14848]"/>
  <match src="identifier: adminAddr [13147,13156]" dest="identifier: adminAddr [13108,13117]"/>
  <match src="event_paramater [27610,27632]" dest="event_paramater [27723,27745]"/>
  <match src="}: } [27104,27105]" dest="}: } [27245,27246]"/>
  <match src="return_statement [18273,18282]" dest="return_statement [18355,18364]"/>
  <match src="string_literal [1043,1072]" dest="string_literal [1080,1109]"/>
  <match src="parameter [5911,5918]" dest="parameter [5724,5731]"/>
  <match src="identifier: b [3264,3265]" dest="identifier: b [3291,3292]"/>
  <match src="}: } [27125,27126]" dest="}: } [27266,27267]"/>
  <match src=",: , [19152,19153]" dest=",: , [19255,19256]"/>
  <match src="parameter [7848,7865]" dest="parameter [7661,7678]"/>
  <match src="): ) [14483,14484]" dest="): ) [14478,14479]"/>
  <match src="function_body [32036,32221]" dest="function_body [32267,32452]"/>
  <match src="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      * - Subtraction cannot overflow.      */ [1110,1371]" dest="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [1147,1416]"/>
  <match src="identifier: _to [27677,27680]" dest="identifier: _to [27790,27793]"/>
  <match src="modifier_definition [14823,14917]" dest="modifier_definition [14823,14917]"/>
  <match src="call_argument [28696,28702]" dest="call_argument [28896,28902]"/>
  <match src="identifier: result [17865,17871]" dest="identifier: result [17875,17881]"/>
  <match src="=: = [24942,24943]" dest="=: = [25213,25214]"/>
  <match src="]: ] [23867,23868]" dest="]: ] [24174,24175]"/>
  <match src="primitive_type [21676,21680]" dest="primitive_type [21808,21812]"/>
  <match src="identifier: targets [12401,12408]" dest="identifier: targets [12269,12276]"/>
  <match src="(: ( [19416,19417]" dest="(: ( [19519,19520]"/>
  <match src="{: { [21682,21683]" dest="{: { [21814,21815]"/>
  <match src="): ) [1911,1912]" dest="): ) [1922,1923]"/>
  <match src="type_name [20765,20772]" dest="type_name [20860,20867]"/>
  <match src="(: ( [7900,7901]" dest="(: ( [7713,7714]"/>
  <match src="expression_statement [10920,11010]" dest="expression_statement [10768,10858]"/>
  <match src="pure: pure [18205,18209]" dest="pure: pure [18287,18291]"/>
  <match src="=: = [18310,18311]" dest="=: = [18392,18393]"/>
  <match src="}: } [14207,14208]" dest="}: } [14202,14203]"/>
  <match src="function: function [6666,6674]" dest="function: function [6479,6487]"/>
  <match src="): ) [13411,13412]" dest="): ) [13372,13373]"/>
  <match src="identifier: overflowMessage [17911,17926]" dest="identifier: overflowMessage [17921,17936]"/>
  <match src="(: ( [18218,18219]" dest="(: ( [18300,18301]"/>
  <match src="primitive_type [4754,4761]" dest="primitive_type [4688,4695]"/>
  <match src="function_definition [13189,13340]" dest="function_definition [13150,13301]"/>
  <match src="call_argument [28536,28539]" dest="call_argument [28700,28703]"/>
  <match src=".: . [12468,12469]" dest=".: . [12336,12337]"/>
  <match src="call_argument [11292,11298]" dest="call_argument [11140,11146]"/>
  <match src="function_body [25919,27123]" dest="function_body [26208,27264]"/>
  <match src="address: address [20922,20929]" dest="address: address [21027,21034]"/>
  <match src="assignment_expression [10920,11009]" dest="assignment_expression [10768,10857]"/>
  <match src="function_definition [6305,6382]" dest="function_definition [6118,6195]"/>
  <match src="return: return [33219,33225]" dest="return: return [41927,41933]"/>
  <match src="uint256: uint256 [7867,7874]" dest="uint256: uint256 [7680,7687]"/>
  <match src="(: ( [14007,14008]" dest="(: ( [14002,14003]"/>
  <match src="identifier: _to [33372,33375]" dest="identifier: _to [42080,42083]"/>
  <match src="type_name [32969,32977]" dest="type_name [41670,41678]"/>
  <match src="call_expression [5451,5480]" dest="call_expression [5351,5380]"/>
  <match src="]: ] [13098,13099]" dest="]: ] [13059,13060]"/>
  <match src="(: ( [30260,30261]" dest="(: ( [30522,30523]"/>
  <match src="return: return [1455,1461]" dest="return: return [1500,1506]"/>
  <match src=".: . [13122,13123]" dest=".: . [13083,13084]"/>
  <match src="state_mutability [30705,30709]" dest="state_mutability [30950,30954]"/>
  <match src="identifier: increaseApproval [21607,21623]" dest="identifier: increaseApproval [21736,21752]"/>
  <match src="identifier: msg [31164,31167]" dest="identifier: msg [31386,31389]"/>
  <match src="array_access [12014,12037]" dest="array_access [11848,11871]"/>
  <match src="user_defined_type [30659,30671]" dest="user_defined_type [30906,30918]"/>
  <match src="variable_declaration_statement [25930,25973]" dest="variable_declaration_statement [26219,26262]"/>
  <match src="identifier: require [18328,18335]" dest="identifier: require [18410,18417]"/>
  <match src="]: ] [14172,14173]" dest="]: ] [14167,14168]"/>
  <match src="): ) [18090,18091]" dest="): ) [18136,18137]"/>
  <match src="number_literal: 0 [15444,15445]" dest="number_literal: 0 [15449,15450]"/>
  <match src="address: address [8336,8343]" dest="address: address [8149,8156]"/>
  <match src="function: function [18968,18976]" dest="function: function [19071,19079]"/>
  <match src="expression_statement [18102,18117]" dest="expression_statement [18148,18163]"/>
  <match src="identifier: Approval [23170,23178]" dest="identifier: Approval [23373,23381]"/>
  <match src="identifier: data [13118,13122]" dest="identifier: data [13079,13083]"/>
  <match src="): ) [29576,29577]" dest="): ) [29830,29831]"/>
  <match src="member_expression [12014,12044]" dest="member_expression [11848,11878]"/>
  <match src="variable_declaration [14437,14452]" dest="variable_declaration [14432,14447]"/>
  <match src="returns: returns [33794,33801]" dest="returns: returns [42493,42500]"/>
  <match src="storage: storage [11112,11119]" dest="storage: storage [10960,10967]"/>
  <match src="]: ] [23332,23333]" dest="]: ] [23570,23571]"/>
  <match src="identifier: _value [28696,28702]" dest="identifier: _value [28896,28902]"/>
  <match src="function: function [11326,11334]" dest="function: function [11174,11182]"/>
  <match src="identifier: sender [28708,28714]" dest="identifier: sender [28908,28914]"/>
  <match src="binary_expression [27775,27793]" dest="binary_expression [27888,27906]"/>
  <match src="call_argument [4791,4817]" dest="call_argument [4725,4751]"/>
  <match src="primitive_type [10555,10559]" dest="primitive_type [10360,10364]"/>
  <match src="identifier: require [11670,11677]" dest="identifier: require [11518,11525]"/>
  <match src="true: true [28892,28896]" dest="true: true [29094,29098]"/>
  <match src="uint256: uint256 [27549,27556]" dest="uint256: uint256 [27662,27669]"/>
  <match src="string_literal [12351,12353]" dest="string_literal [12219,12221]"/>
  <match src="function: function [5345,5353]" dest="function: function [5245,5253]"/>
  <match src="string [33028,33048]" dest="string [41729,41749]"/>
  <match src="{: { [30028,30029]" dest="{: { [30290,30291]"/>
  <match src="}: } [14225,14226]" dest="}: } [14220,14221]"/>
  <match src="comment: // attributes[uint144(uint160(to) &gt;&gt; 20)] = uint256(to); [27861,27917]" dest="comment: // attributes[uint144(uint160(to) &gt;&gt; 20)] = uint256(to); [27974,28030]"/>
  <match src=",: , [29082,29083]" dest=",: , [29328,29329]"/>
</matches>
<actions>
  <move-tree tree="comment: // File: openzeppelin-solidity/contracts/token/ERC20/IERC20.sol [5518,5581]" parent="source_file [0,42651]" at="1"/>
  <move-tree tree="pragma_directive [5585,5608]" parent="source_file [0,42651]" at="6"/>
  <move-tree tree="interface_declaration [5767,8402]" parent="source_file [0,42651]" at="8"/>
  <move-tree tree="comment: // File: @trusttoken/trusttokens/contracts/ProxyStorage.sol [15461,15520]" parent="source_file [0,42651]" at="9"/>
  <move-tree tree="comment: // File: @trusttoken/trusttokens/contracts/ValSafeMath.sol [17474,17532]" parent="source_file [0,42651]" at="13"/>
  <move-tree tree="comment: // File: @trusttoken/trusttokens/contracts/ERC20.sol [18578,18630]" parent="source_file [0,42651]" at="17"/>
  <move-tree tree="comment: // File: @trusttoken/trusttokens/contracts/RegistrySubscriber.sol [23892,23957]" parent="source_file [0,42651]" at="21"/>
  <move-tree tree="contract_declaration [23991,27126]" parent="source_file [0,42651]" at="30"/>
  <move-tree tree="contract_declaration [27429,30304]" parent="source_file [0,42651]" at="36"/>
  <move-tree tree="contract_declaration [30629,32224]" parent="source_file [0,42651]" at="40"/>
  <move-tree tree="contract_declaration [27225,27324]" parent="source_file [0,42651]" at="40"/>
  <update-node tree="comment: // File: openzeppelin-solidity/contracts/math/SafeMath.sol [0,58]" label="// SPDX-License-Identifier: MIT"/>
  <update-node tree="comment: // File: openzeppelin-solidity/contracts/token/ERC20/IERC20.sol [5518,5581]" label="// File: @openzeppelin/contracts/math/SafeMath.sol"/>
  <update-node tree="comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP. Does not include  * the optional functions; to access them see {ERC20Detailed}.  */ [5612,5765]" label="// File: @openzeppelin/contracts/token/ERC20/IERC20.sol"/>
  <update-node tree="comment: // File: @trusttoken/registry/contracts/Registry.sol [8406,8458]" label="/**  * @dev Interface of the ERC20 standard as defined in the EIP.  */"/>
  <update-node tree="comment: // File: @trusttoken/trusttokens/contracts/ProxyStorage.sol [15461,15520]" label="// File: contracts/registry/Registry.sol"/>
  <insert-tree tree="pragma_directive [8263,8286]" parent="source_file [0,42651]" at="10"/>
  <update-node tree="comment: // File: @trusttoken/trusttokens/contracts/ValSafeMath.sol [17474,17532]" label="// File: contracts/trusttokens/ProxyStorage.sol"/>
  <insert-tree tree="pragma_directive [15517,15540]" parent="source_file [0,42651]" at="14"/>
  <update-node tree="comment: // File: @trusttoken/trusttokens/contracts/ERC20.sol [18578,18630]" label="// File: contracts/trusttokens/ValSafeMath.sol"/>
  <insert-tree tree="pragma_directive [17513,17536]" parent="source_file [0,42651]" at="18"/>
  <update-node tree="comment: // File: @trusttoken/trusttokens/contracts/RegistrySubscriber.sol [23892,23957]" label="// File: contracts/trusttokens/ERC20.sol"/>
  <insert-tree tree="pragma_directive [18740,18763]" parent="source_file [0,42651]" at="22"/>
  <update-node tree="comment: // File: @trusttoken/trusttokens/contracts/TrueCoinReceiver.sol [27130,27193]" label="// File: contracts/trusttokens/RegistrySubscriber.sol"/>
  <insert-tree tree="pragma_directive [24256,24279]" parent="source_file [0,42651]" at="29"/>
  <update-node tree="comment: // File: @trusttoken/trusttokens/contracts/ValTokenWithHook.sol [27328,27391]" label="// File: contracts/trusttokens/TrueCoinReceiver.sol"/>
  <insert-tree tree="pragma_directive [27326,27349]" parent="source_file [0,42651]" at="32"/>
  <insert-node tree="interface_declaration [27353,27451]" parent="source_file [0,42651]" at="33"/>
  <update-node tree="comment: // File: @trusttoken/trusttokens/contracts/ClaimableContract.sol [30308,30372]" label="// File: contracts/trusttokens/ValTokenWithHook.sol"/>
  <insert-tree tree="pragma_directive [27510,27533]" parent="source_file [0,42651]" at="35"/>
  <move-tree tree=",: , [27464,27465]" parent="contract_declaration [27543,30566]" at="5"/>
  <update-node tree="comment: /**  * @title ClaimableContract  * @dev The ClaimableContract contract is a copy of Claimable Contract by Zeppelin.   and provides basic authorization control functions. Inherits storage layout of   ProxyStorage.  */ [30406,30627]" label="// File: contracts/trusttokens/ClaimableContract.sol"/>
  <insert-tree tree="pragma_directive [30626,30649]" parent="source_file [0,42651]" at="38"/>
  <update-node tree="comment: // File: @trusttoken/trusttokens/contracts/TrustToken.sol [32228,32285]" label="/**  * @title ClaimableContract  * @dev The ClaimableContract contract is a copy of Claimable Contract by Zeppelin.  and provides basic authorization control functions. Inherits storage layout of  ProxyStorage.  */"/>
  <insert-node tree="comment: // File: contracts/trusttokens/TimeLockedToken.sol [32459,32509]" parent="source_file [0,42651]" at="41"/>
  <insert-tree tree="pragma_directive [32513,32536]" parent="source_file [0,42651]" at="42"/>
  <insert-node tree="comment: /**  * @title TimeLockedToken  * @notice Time Locked ERC20 Token  * @author Harold Hyatt  * @dev Contract which gives the ability to time-lock tokens  *  * The registerLockup() function allows an account to transfer  * its tokens to another account, locking them according to the  * distribution epoch periods  *  * By overriding the balanceOf(), transfer(), and transferFrom()  * functions in ERC20, an account can show its full, post-distribution  * balance but only transfer or spend up to an allowed amount  *  * Every time an epoch passes, a portion of previously non-spendable tokens  * are allowed to be transferred, and after all epochs have passed, the full  * account balance is unlocked  */ [32546,33264]" parent="source_file [0,42651]" at="43"/>
  <insert-node tree="comment: // File: contracts/trusttokens/TrustToken.sol [40960,41005]" parent="source_file [0,42651]" at="45"/>
  <insert-tree tree="pragma_directive [41009,41032]" parent="source_file [0,42651]" at="46"/>
  <insert-node tree="abstract: abstract [24285,24293]" parent="contract_declaration [24285,27267]" at="0"/>
  <insert-node tree="interface: interface [27353,27362]" parent="interface_declaration [27353,27451]" at="0"/>
  <insert-node tree="identifier: TrueCoinReceiver [27363,27379]" parent="interface_declaration [27353,27451]" at="1"/>
  <move-tree tree="contract_body [27251,27324]" parent="interface_declaration [27353,27451]" at="2"/>
  <insert-node tree="abstract: abstract [27543,27551]" parent="contract_declaration [27543,30566]" at="0"/>
  <insert-node tree="abstract: abstract [33266,33274]" parent="contract_declaration [33266,40956]" at="0"/>
  <update-node tree="identifier: TrueCoinReceiver [27234,27250]" label="TimeLockedToken"/>
  <insert-node tree="is: is [33300,33302]" parent="contract_declaration [33266,40956]" at="3"/>
  <move-tree tree="inheritance_specifier [32658,32674]" parent="contract_declaration [33266,40956]" at="4"/>
  <insert-node tree=",: , [33319,33320]" parent="contract_declaration [33266,40956]" at="5"/>
  <move-tree tree="inheritance_specifier [32676,32693]" parent="contract_declaration [33266,40956]" at="6"/>
  <insert-node tree="contract_body [33339,40956]" parent="contract_declaration [33266,40956]" at="7"/>
  <insert-tree tree="inheritance_specifier [41377,41392]" parent="contract_declaration [41354,42651]" at="3"/>
  <update-node tree="solidity_version: 0.5.0 [79,84]" label="0.6.0"/>
  <update-node tree="comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      * - Addition cannot overflow.      */ [690,915]" label="/**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      *      * - Addition cannot overflow.      */"/>
  <update-node tree="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      * - Subtraction cannot overflow.      */ [1110,1371]" label="/**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */"/>
  <update-node tree="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      * - Subtraction cannot overflow.      *      * _Available since v2.4.0._      */ [1521,1844]" label="/**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */"/>
  <update-node tree="comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      * - Multiplication cannot overflow.      */ [2050,2287]" label="/**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      *      * - Multiplication cannot overflow.      */"/>
  <update-node tree="comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      */ [2772,3226]" label="/**      * @dev Returns the integer division of two unsigned integers. Reverts on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */"/>
  <update-node tree="comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts with custom message on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      *      * _Available since v2.4.0._      */ [3372,3888]" label="/**      * @dev Returns the integer division of two unsigned integers. Reverts with custom message on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */"/>
  <update-node tree="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      */ [4247,4690]" label="/**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */"/>
  <update-node tree="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts with custom message when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      *      * _Available since v2.4.0._      */ [4834,5339]" label="/**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts with custom message when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */"/>
  <update-node tree="solidity_version: 0.5.0 [5602,5607]" label="0.6.0"/>
  <update-node tree="comment: /**     * @dev Throws if called by any account other than the owner.     */ [14539,14616]" label="/**      * @dev Throws if called by any account other than the owner.      */"/>
  <update-node tree="comment: /**     * @dev Modifier throws if called by any account other than the pendingOwner.     */ [14724,14817]" label="/**      * @dev Modifier throws if called by any account other than the pendingOwner.      */"/>
  <update-node tree="comment: /**     * @dev Allows the current owner to set the pendingOwner address.     * @param newOwner The address to transfer ownership to.     */ [14925,15067]" label="/**      * @dev Allows the current owner to set the pendingOwner address.      * @param newOwner The address to transfer ownership to.      */"/>
  <update-node tree="comment: /**     * @dev Allows the pendingOwner address to finalize the transfer.     */ [15185,15266]" label="/**      * @dev Allows the pendingOwner address to finalize the transfer.      */"/>
  <update-node tree="comment: /* Additionally, we have several keccak-based storage locations.      * If you add more keccak-based storage mappings, such as mappings, you must document them here.      * If the length of the keccak input is the same as an existing mapping, it is possible there could be a preimage collision.      * A preimage collision can be used to attack the contract by treating one storage location as another,      * which would always be a critical issue.      * Carefully examine future keccak-based storage to ensure there can be no preimage collisions.      *******************************************************************************************************      ** length     input                                                         usage      *******************************************************************************************************      ** 19         &quot;trueXXX.proxy.owner&quot;                                         Proxy Owner      ** 27         &quot;trueXXX.pending.proxy.owner&quot;                                 Pending Proxy Owner      ** 28         &quot;trueXXX.proxy.implementation&quot;                                Proxy Implementation      ** 64         uint256(address),uint256(1)                                   balanceOf      ** 64         uint256(address),keccak256(uint256(address),uint256(2))       allowance      ** 64         uint256(address),keccak256(bytes32,uint256(3))                attributes     **/ [16020,17467]" label="/* Additionally, we have several keccak-based storage locations.      * If you add more keccak-based storage mappings, such as mappings, you must document them here.      * If the length of the keccak input is the same as an existing mapping, it is possible there could be a preimage collision.      * A preimage collision can be used to attack the contract by treating one storage location as another,      * which would always be a critical issue.      * Carefully examine future keccak-based storage to ensure there can be no preimage collisions.      *******************************************************************************************************      ** length     input                                                         usage      *******************************************************************************************************      ** 19         &quot;trueXXX.proxy.owner&quot;                                         Proxy Owner      ** 27         &quot;trueXXX.pending.proxy.owner&quot;                                 Pending Proxy Owner      ** 28         &quot;trueXXX.proxy.implementation&quot;                                Proxy Implementation      ** 64         uint256(address),uint256(1)                                   balanceOf      ** 64         uint256(address),keccak256(uint256(address),uint256(2))       allowance      ** 64         uint256(address),keccak256(bytes32,uint256(3))                attributes      **/"/>
  <update-node tree="comment: /**     * @dev sets the original `owner` of the contract to the sender     * at construction. Must then be reinitialized      */ [30986,31117]" label="/**      * @dev sets the original `owner` of the contract to the sender      * at construction. Must then be reinitialized      */"/>
  <update-node tree="comment: /**     * @dev Throws if called by any account other than the owner.     */ [31250,31327]" label="/**      * @dev Throws if called by any account other than the owner.      */"/>
  <update-node tree="comment: /**     * @dev Modifier throws if called by any account other than the pendingOwner.     */ [31436,31529]" label="/**      * @dev Modifier throws if called by any account other than the pendingOwner.      */"/>
  <update-node tree="comment: /**     * @dev Allows the current owner to set the pendingOwner address.     * @param newOwner The address to transfer ownership to.     */ [31638,31780]" label="/**      * @dev Allows the current owner to set the pendingOwner address.      * @param newOwner The address to transfer ownership to.      */"/>
  <update-node tree="comment: /**     * @dev Allows the pendingOwner address to finalize the transfer.     */ [31899,31980]" label="/**      * @dev Allows the pendingOwner address to finalize the transfer.      */"/>
  <insert-node tree="{: { [33339,33340]" parent="contract_body [33339,40956]" at="0"/>
  <insert-tree tree="using_directive [33346,33373]" parent="contract_body [33339,40956]" at="1"/>
  <insert-node tree="comment: // represents total distribution for locked balances [33381,33433]" parent="contract_body [33339,40956]" at="2"/>
  <insert-tree tree="state_variable_declaration [33439,33480]" parent="contract_body [33339,40956]" at="3"/>
  <insert-node tree="comment: // start of the lockup period [33488,33517]" parent="contract_body [33339,40956]" at="4"/>
  <insert-node tree="comment: // Friday, July 24, 2020 4:58:31 PM GMT [33523,33562]" parent="contract_body [33339,40956]" at="5"/>
  <insert-tree tree="state_variable_declaration [33568,33609]" parent="contract_body [33339,40956]" at="6"/>
  <insert-node tree="comment: // length of time to delay first epoch [33615,33653]" parent="contract_body [33339,40956]" at="7"/>
  <insert-tree tree="state_variable_declaration [33659,33704]" parent="contract_body [33339,40956]" at="8"/>
  <insert-node tree="comment: // how long does an epoch last [33710,33740]" parent="contract_body [33339,40956]" at="9"/>
  <insert-tree tree="state_variable_declaration [33746,33788]" parent="contract_body [33339,40956]" at="10"/>
  <insert-node tree="comment: // number of epochs [33794,33813]" parent="contract_body [33339,40956]" at="11"/>
  <insert-tree tree="state_variable_declaration [33819,33853]" parent="contract_body [33339,40956]" at="12"/>
  <insert-node tree="comment: // registry of locked addresses [33859,33890]" parent="contract_body [33339,40956]" at="13"/>
  <insert-tree tree="state_variable_declaration [33896,33928]" parent="contract_body [33339,40956]" at="14"/>
  <insert-tree tree="modifier_definition [33936,34063]" parent="contract_body [33339,40956]" at="15"/>
  <insert-node tree="comment: /**      * @dev Set TimeLockRegistry address      * @param newTimeLockRegistry Address of TimeLockRegistry contract      */ [34071,34197]" parent="contract_body [33339,40956]" at="16"/>
  <insert-node tree="function_definition [34203,34507]" parent="contract_body [33339,40956]" at="17"/>
  <insert-node tree="comment: /**      * @dev Transfer function which includes unlocked tokens      * @param _from The address to send tokens from      * @param _to The address that will receive the tokens      * @param _value The amount of tokens to be transferred      */ [34515,34763]" parent="contract_body [33339,40956]" at="18"/>
  <insert-node tree="function_definition [34769,35136]" parent="contract_body [33339,40956]" at="19"/>
  <insert-node tree="comment: /**      * @dev transferFrom function which includes unlocked tokens      * @param _from The address to send tokens from      * @param _to The address that will receive the tokens      * @param _value The amount of tokens to be transferred      * @param _spender The address allowed to make the transfer      */ [35144,35461]" parent="contract_body [33339,40956]" at="20"/>
  <insert-tree tree="function_definition [35467,35858]" parent="contract_body [33339,40956]" at="21"/>
  <insert-node tree="comment: /**      * @dev Check if amount we want to burn is unlocked before burning      * @param _from The address whose tokens will burn      * @param _value The amount of tokens to be burnt      */ [35866,36061]" parent="contract_body [33339,40956]" at="22"/>
  <insert-node tree="function_definition [36067,36355]" parent="contract_body [33339,40956]" at="23"/>
  <insert-node tree="comment: /**      * @dev Transfer tokens to another account under the lockup schedule      * Emits a transfer event showing a transfer to the recipient      * Only the registry can call this function      * Once registered, the distribution cannot be registered again      * @param receiver Address to receive the tokens      * @param amount Tokens to be transferred      */ [36363,36735]" parent="contract_body [33339,40956]" at="24"/>
  <insert-tree tree="function_definition [36741,37170]" parent="contract_body [33339,40956]" at="25"/>
  <insert-node tree="comment: /**      * @dev Get locked balance for an account      * @param account Account to check      * @return Amount locked      */ [37178,37307]" parent="contract_body [33339,40956]" at="26"/>
  <insert-tree tree="function_definition [37313,37582]" parent="contract_body [33339,40956]" at="27"/>
  <insert-node tree="comment: /**      * @dev Get unlocked balance for an account      * @param account Account to check      * @return Amount that is unlocked and available eg. to transfer      */ [37590,37761]" parent="contract_body [33339,40956]" at="28"/>
  <insert-tree tree="function_definition [37767,37952]" parent="contract_body [33339,40956]" at="29"/>
  <insert-node tree="comment: /*      * @dev Get number of epochs passed      * @return Value between 0 and 8 of lockup epochs already passed      */ [37960,38082]" parent="contract_body [33339,40956]" at="30"/>
  <insert-tree tree="function_definition [38088,38977]" parent="contract_body [33339,40956]" at="31"/>
  <insert-node tree="comment: /**      * @dev Get timestamp of next epoch      * Will revert if all epochs have passed      * @return Timestamp of when the next epoch starts      */ [38985,39140]" parent="contract_body [33339,40956]" at="32"/>
  <insert-tree tree="function_definition [39146,39756]" parent="contract_body [33339,40956]" at="33"/>
  <insert-node tree="comment: /**      * @dev Get timestamp of latest epoch      * @return Timestamp of when the current epoch has started      */ [39764,39883]" parent="contract_body [33339,40956]" at="34"/>
  <insert-tree tree="function_definition [39889,40369]" parent="contract_body [33339,40956]" at="35"/>
  <insert-node tree="comment: /**      * @dev Get timestamp of final epoch      * @return Timestamp of when the last epoch ends and all funds are released      */ [40377,40512]" parent="contract_body [33339,40956]" at="36"/>
  <insert-tree tree="function_definition [40518,40739]" parent="contract_body [33339,40956]" at="37"/>
  <insert-node tree="comment: /**      * @dev Get timestamp of locking period start      * @return Timestamp of locking period start      */ [40747,40860]" parent="contract_body [33339,40956]" at="38"/>
  <insert-tree tree="function_definition [40866,40953]" parent="contract_body [33339,40956]" at="39"/>
  <insert-node tree="}: } [40955,40956]" parent="contract_body [33339,40956]" at="40"/>
  <insert-tree tree="visibility [25636,25642]" parent="function_definition [25616,25675]" at="4"/>
  <insert-node tree="virtual: virtual [25643,25650]" parent="function_definition [25616,25675]" at="5"/>
  <insert-node tree="virtual: virtual [28608,28615]" parent="function_definition [28464,28720]" at="12"/>
  <insert-node tree="virtual: virtual [29227,29234]" parent="function_definition [29114,29653]" at="10"/>
  <insert-node tree="virtual: virtual [29716,29723]" parent="function_definition [29661,30054]" at="8"/>
  <insert-node tree="virtual: virtual [30115,30122]" parent="function_definition [30062,30563]" at="8"/>
  <insert-node tree="function: function [34203,34211]" parent="function_definition [34203,34507]" at="0"/>
  <insert-node tree="identifier: setTimeLockRegistry [34212,34231]" parent="function_definition [34203,34507]" at="1"/>
  <insert-node tree="(: ( [34231,34232]" parent="function_definition [34203,34507]" at="2"/>
  <insert-node tree="parameter [34232,34259]" parent="function_definition [34203,34507]" at="3"/>
  <insert-node tree="): ) [34259,34260]" parent="function_definition [34203,34507]" at="4"/>
  <insert-tree tree="visibility [34261,34269]" parent="function_definition [34203,34507]" at="5"/>
  <insert-tree tree="modifier_invocation [34270,34279]" parent="function_definition [34203,34507]" at="6"/>
  <insert-node tree="function_body [34280,34507]" parent="function_definition [34203,34507]" at="7"/>
  <insert-node tree="function: function [34769,34777]" parent="function_definition [34769,35136]" at="0"/>
  <insert-node tree="identifier: _transferAllArgs [34778,34794]" parent="function_definition [34769,35136]" at="1"/>
  <insert-node tree="(: ( [34794,34795]" parent="function_definition [34769,35136]" at="2"/>
  <insert-tree tree="parameter [34805,34818]" parent="function_definition [34769,35136]" at="3"/>
  <insert-node tree=",: , [34818,34819]" parent="function_definition [34769,35136]" at="4"/>
  <insert-tree tree="parameter [34829,34840]" parent="function_definition [34769,35136]" at="5"/>
  <insert-node tree=",: , [34840,34841]" parent="function_definition [34769,35136]" at="6"/>
  <insert-tree tree="parameter [34851,34865]" parent="function_definition [34769,35136]" at="7"/>
  <insert-node tree="): ) [34871,34872]" parent="function_definition [34769,35136]" at="8"/>
  <move-tree tree="visibility [33175,33183]" parent="function_definition [34769,35136]" at="9"/>
  <insert-tree tree="override_specifier [34882,34890]" parent="function_definition [34769,35136]" at="10"/>
  <insert-tree tree="modifier_invocation [34891,34911]" parent="function_definition [34769,35136]" at="11"/>
  <insert-node tree="function_body [34912,35136]" parent="function_definition [34769,35136]" at="12"/>
  <insert-node tree="function: function [36067,36075]" parent="function_definition [36067,36355]" at="0"/>
  <insert-node tree="identifier: _burn [36076,36081]" parent="function_definition [36067,36355]" at="1"/>
  <insert-node tree="(: ( [36081,36082]" parent="function_definition [36067,36355]" at="2"/>
  <insert-tree tree="parameter [36082,36095]" parent="function_definition [36067,36355]" at="3"/>
  <insert-node tree=",: , [36095,36096]" parent="function_definition [36067,36355]" at="4"/>
  <insert-tree tree="parameter [36097,36111]" parent="function_definition [36067,36355]" at="5"/>
  <insert-node tree="): ) [36111,36112]" parent="function_definition [36067,36355]" at="6"/>
  <move-tree tree="visibility [25387,25395]" parent="function_definition [36067,36355]" at="7"/>
  <insert-tree tree="override_specifier [36122,36130]" parent="function_definition [36067,36355]" at="8"/>
  <insert-tree tree="return_type_definition [36131,36186]" parent="function_definition [36067,36355]" at="9"/>
  <insert-tree tree="function_body [36187,36355]" parent="function_definition [36067,36355]" at="10"/>
  <insert-tree tree="visibility [41876,41882]" parent="function_definition [41856,41951]" at="4"/>
  <insert-tree tree="override_specifier [41883,41891]" parent="function_definition [41856,41951]" at="5"/>
  <insert-node tree="type_name [34232,34239]" parent="parameter [34232,34259]" at="0"/>
  <insert-node tree="identifier: newTimeLockRegistry [34240,34259]" parent="parameter [34232,34259]" at="1"/>
  <insert-node tree="{: { [34280,34281]" parent="function_body [34280,34507]" at="0"/>
  <insert-node tree="expression_statement [34291,34360]" parent="function_body [34280,34507]" at="1"/>
  <insert-tree tree="expression_statement [34370,34451]" parent="function_body [34280,34507]" at="2"/>
  <insert-tree tree="expression_statement [34461,34500]" parent="function_body [34280,34507]" at="3"/>
  <insert-node tree="}: } [34506,34507]" parent="function_body [34280,34507]" at="4"/>
  <insert-node tree="{: { [34912,34913]" parent="function_body [34912,35136]" at="0"/>
  <insert-tree tree="expression_statement [34923,34983]" parent="function_body [34912,35136]" at="1"/>
  <insert-tree tree="expression_statement [34993,35074]" parent="function_body [34912,35136]" at="2"/>
  <insert-node tree="expression_statement [35086,35129]" parent="function_body [34912,35136]" at="3"/>
  <insert-node tree="}: } [35135,35136]" parent="function_body [34912,35136]" at="4"/>
  <insert-node tree="call_expression [11710,11739]" parent="expression_statement [11710,11740]" at="0"/>
  <move-tree tree="primitive_type [26156,26163]" parent="type_name [34232,34239]" at="0"/>
  <insert-node tree="call_expression [34291,34359]" parent="expression_statement [34291,34360]" at="0"/>
  <insert-node tree="call_expression [35086,35128]" parent="expression_statement [35086,35129]" at="0"/>
  <move-tree tree="member_expression [11862,11892]" parent="call_expression [11710,11739]" at="0"/>
  <insert-node tree="(: ( [11737,11738]" parent="call_expression [11710,11739]" at="1"/>
  <insert-node tree="): ) [11738,11739]" parent="call_expression [11710,11739]" at="2"/>
  <insert-node tree="uint256: uint256 [21771,21778]" parent="primitive_type [21771,21778]" at="0"/>
  <insert-node tree="uint256: uint256 [22752,22759]" parent="primitive_type [22752,22759]" at="0"/>
  <insert-node tree="identifier: require [34291,34298]" parent="call_expression [34291,34359]" at="0"/>
  <insert-node tree="(: ( [34298,34299]" parent="call_expression [34291,34359]" at="1"/>
  <insert-node tree="call_argument [34299,34332]" parent="call_expression [34291,34359]" at="2"/>
  <insert-node tree=",: , [34332,34333]" parent="call_expression [34291,34359]" at="3"/>
  <insert-tree tree="call_argument [34334,34358]" parent="call_expression [34291,34359]" at="4"/>
  <insert-node tree="): ) [34358,34359]" parent="call_expression [34291,34359]" at="5"/>
  <insert-tree tree="member_expression [35086,35108]" parent="call_expression [35086,35128]" at="0"/>
  <insert-node tree="(: ( [35108,35109]" parent="call_expression [35086,35128]" at="1"/>
  <insert-tree tree="call_argument [35109,35114]" parent="call_expression [35086,35128]" at="2"/>
  <insert-node tree=",: , [35114,35115]" parent="call_expression [35086,35128]" at="3"/>
  <insert-tree tree="call_argument [35116,35119]" parent="call_expression [35086,35128]" at="4"/>
  <insert-node tree=",: , [35119,35120]" parent="call_expression [35086,35128]" at="5"/>
  <move-tree tree="call_argument [26182,26188]" parent="call_expression [35086,35128]" at="6"/>
  <insert-node tree="): ) [35127,35128]" parent="call_expression [35086,35128]" at="7"/>
  <update-node tree="identifier: length [11886,11892]" label="pop"/>
  <move-tree tree="binary_expression [26156,26189]" parent="call_argument [34299,34332]" at="0"/>
  <insert-node tree="identifier: newTimeLockRegistry [34299,34318]" parent="binary_expression [34299,34332]" at="0"/>
  <insert-tree tree="call_argument [34330,34331]" parent="type_cast_expression [34322,34332]" at="2"/>
  <delete-node tree="comment: // Solidity only automatically asserts when dividing by 0 [4000,4057]"/>
  <delete-tree tree="pragma_directive [8462,8486]"/>
  <delete-node tree="=: = [11893,11894]"/>
  <delete-tree tree="binary_expression [11895,11905]"/>
  <delete-node tree="assignment_expression [11862,11905]"/>
  <delete-tree tree="pragma_directive [15524,15548]"/>
  <delete-tree tree="pragma_directive [17536,17560]"/>
  <delete-tree tree="pragma_directive [18634,18658]"/>
  <delete-node tree="uint: uint [21642,21646]"/>
  <delete-node tree="uint: uint [22586,22590]"/>
  <delete-tree tree="pragma_directive [23961,23985]"/>
  <delete-node tree="if: if [26152,26154]"/>
  <delete-node tree="(: ( [26155,26156]"/>
  <delete-node tree="): ) [26189,26190]"/>
  <delete-tree tree="block_statement [26191,26285]"/>
  <delete-node tree="if_statement [26152,26285]"/>
  <delete-tree tree="pragma_directive [27197,27221]"/>
  <delete-tree tree="pragma_directive [27395,27419]"/>
  <delete-tree tree="inheritance_specifier [27458,27464]"/>
  <delete-node tree=",: , [27486,27487]"/>
  <delete-tree tree="pragma_directive [30376,30400]"/>
  <delete-node tree="(: ( [26163,26164]"/>
  <delete-tree tree="call_argument [26164,26169]"/>
  <delete-node tree="): ) [26169,26170]"/>
  <delete-node tree="type_cast_expression [26156,26170]"/>
  <delete-tree tree="pragma_directive [32289,32313]"/>
  <delete-node tree=",: , [32674,32675]"/>
</actions>
