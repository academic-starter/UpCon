{
  "matches": [
    {
      "src": "identifier: value [9743,9748]",
      "dest": "identifier: value [11607,11612]"
    },
    {
      "src": "(: ( [36221,36222]",
      "dest": "(: ( [43092,43093]"
    },
    {
      "src": "mapping: mapping [9250,9257]",
      "dest": "mapping: mapping [11114,11121]"
    },
    {
      "src": "parameter [12969,12976]",
      "dest": "parameter [14833,14840]"
    },
    {
      "src": "parameter [11983,11997]",
      "dest": "parameter [13847,13861]"
    },
    {
      "src": "identifier: EPOCH_DURATION [40698,40712]",
      "dest": "identifier: EPOCH_DURATION [47468,47482]"
    },
    {
      "src": "type_name [37792,37799]",
      "dest": "type_name [44444,44451]"
    },
    {
      "src": "identifier: lockStart [40875,40884]",
      "dest": "identifier: lockStart [47645,47654]"
    },
    {
      "src": "}: } [21913,21914]",
      "dest": "}: } [33935,33936]"
    },
    {
      "src": "parameter [22984,23008]",
      "dest": "parameter [33764,33782]"
    },
    {
      "src": "call_argument [10745,10755]",
      "dest": "call_argument [12609,12619]"
    },
    {
      "src": "variable_declaration_statement [39993,40025]",
      "dest": "variable_declaration_statement [46763,46795]"
    },
    {
      "src": "comment: // Returns true if the uint256 value stored for this attribute is non-zero [12475,12549]",
      "dest": "comment: // Returns true if the uint256 value stored for this attribute is non-zero [14339,14413]"
    },
    {
      "src": "parameter [21966,21982]",
      "dest": "parameter [26936,26950]"
    },
    {
      "src": "identifier: FIRST_EPOCH_DELAY [39587,39604]",
      "dest": "identifier: FIRST_EPOCH_DELAY [46357,46374]"
    },
    {
      "src": "binary_expression [34299,34332]",
      "dest": "binary_expression [40529,40562]"
    },
    {
      "src": "call_argument [34334,34358]",
      "dest": "call_argument [40564,40588]"
    },
    {
      "src": "identifier: _attribute [12044,12054]",
      "dest": "identifier: _attribute [13908,13918]"
    },
    {
      "src": "block_statement [39547,39637]",
      "dest": "block_statement [46317,46407]"
    },
    {
      "src": "type_name [2670,2677]",
      "dest": "type_name [4641,4648]"
    },
    {
      "src": "function_body [42517,42555]",
      "dest": "function_body [49275,49306]"
    },
    {
      "src": "): ) [2753,2754]",
      "dest": "): ) [4724,4725]"
    },
    {
      "src": "(: ( [28845,28846]",
      "dest": "(: ( [32440,32441]"
    },
    {
      "src": "user_defined_type [30906,30918]",
      "dest": "user_defined_type [19552,19564]"
    },
    {
      "src": ",: , [42083,42084]",
      "dest": ",: , [48623,48624]"
    },
    {
      "src": "member_expression [40660,40697]",
      "dest": "member_expression [47430,47467]"
    },
    {
      "src": "call_argument [29820,29821]",
      "dest": "call_argument [37121,37122]"
    },
    {
      "src": "event_paramater [9765,9790]",
      "dest": "event_paramater [11629,11654]"
    },
    {
      "src": "array_access [35639,35655]",
      "dest": "array_access [41527,41543]"
    },
    {
      "src": "primitive_type [15781,15788]",
      "dest": "primitive_type [17592,17599]"
    },
    {
      "src": ",: , [35741,35742]",
      "dest": ",: , [41883,41884]"
    },
    {
      "src": "): ) [42271,42272]",
      "dest": "): ) [48811,48812]"
    },
    {
      "src": "parameter [37374,37381]",
      "dest": "parameter [45680,45687]"
    },
    {
      "src": "true [41836,41840]",
      "dest": "true [48479,48483]"
    },
    {
      "src": "identifier: totalEpochsPassed [38853,38870]",
      "dest": "identifier: totalEpochsPassed [45505,45522]"
    },
    {
      "src": "call_expression [3993,4021]",
      "dest": "call_expression [5964,5992]"
    },
    {
      "src": "]: ] [10795,10796]",
      "dest": "]: ] [12659,12660]"
    },
    {
      "src": "identifier: sender [7653,7659]",
      "dest": "identifier: sender [9563,9569]"
    },
    {
      "src": "type_name [9765,9772]",
      "dest": "type_name [11629,11636]"
    },
    {
      "src": "}: } [42221,42222]",
      "dest": "}: } [48761,48762]"
    },
    {
      "src": "inheritance_specifier [19916,19933]",
      "dest": "inheritance_specifier [30240,30247]"
    },
    {
      "src": "parameter [10647,10661]",
      "dest": "parameter [12511,12525]"
    },
    {
      "src": "call_argument [12148,12163]",
      "dest": "call_argument [14012,14027]"
    },
    {
      "src": "return: return [13252,13258]",
      "dest": "return: return [15116,15122]"
    },
    {
      "src": "visibility [36113,36121]",
      "dest": "visibility [42970,42978]"
    },
    {
      "src": "call_argument [29064,29067]",
      "dest": "call_argument [48907,48913]"
    },
    {
      "src": ".: . [12139,12140]",
      "dest": ".: . [14003,14004]"
    },
    {
      "src": "variable_declaration_statement [13004,13061]",
      "dest": "variable_declaration_statement [14868,14925]"
    },
    {
      "src": "call_argument [29824,29830]",
      "dest": "call_argument [37125,37131]"
    },
    {
      "src": "identifier: a [2682,2683]",
      "dest": "identifier: a [4653,4654]"
    },
    {
      "src": "uint256: uint256 [39248,39255]",
      "dest": "uint256: uint256 [46018,46025]"
    },
    {
      "src": "visibility [8435,8443]",
      "dest": "visibility [10299,10307]"
    },
    {
      "src": "identifier: _attribute [11201,11211]",
      "dest": "identifier: _attribute [13065,13075]"
    },
    {
      "src": ".: . [37481,37482]",
      "dest": ".: . [45719,45720]"
    },
    {
      "src": ",: , [35665,35666]",
      "dest": ",: , [41553,41554]"
    },
    {
      "src": "): ) [37942,37943]",
      "dest": "): ) [44594,44595]"
    },
    {
      "src": "): ) [35127,35128]",
      "dest": "): ) [42706,42707]"
    },
    {
      "src": "identifier: _value [11140,11146]",
      "dest": "identifier: _value [13004,13010]"
    },
    {
      "src": "identifier: transferOwnership [32024,32041]",
      "dest": "identifier: transferOwnership [20670,20687]"
    },
    {
      "src": "identifier: RegistryClone [11213,11226]",
      "dest": "identifier: RegistryClone [13077,13090]"
    },
    {
      "src": "public: public [41876,41882]",
      "dest": "public: public [31777,31783]"
    },
    {
      "src": "parameter [35531,35542]",
      "dest": "parameter [41446,41457]"
    },
    {
      "src": "uint256: uint256 [38706,38713]",
      "dest": "uint256: uint256 [45358,45365]"
    },
    {
      "src": "returns: returns [28837,28844]",
      "dest": "returns: returns [32432,32439]"
    },
    {
      "src": "variable_declaration [10944,10975]",
      "dest": "variable_declaration [12808,12839]"
    },
    {
      "src": "assignment_expression [15149,15172]",
      "dest": "assignment_expression [17013,17036]"
    },
    {
      "src": "parameter [34805,34818]",
      "dest": "parameter [42213,42226]"
    },
    {
      "src": "{: { [13781,13782]",
      "dest": "{: { [15645,15646]"
    },
    {
      "src": "identifier: passed [39256,39262]",
      "dest": "identifier: passed [46026,46032]"
    },
    {
      "src": "call_argument [19425,19447]",
      "dest": "call_argument [37703,37741]"
    },
    {
      "src": "primitive_type [39248,39255]",
      "dest": "primitive_type [46018,46025]"
    },
    {
      "src": "internal: internal [29218,29226]",
      "dest": "internal: internal [24353,24361]"
    },
    {
      "src": "type_name [42423,42428]",
      "dest": "type_name [49063,49068]"
    },
    {
      "src": "identifier: balance [14440,14447]",
      "dest": "identifier: balance [16304,16311]"
    },
    {
      "src": ">: > [4003,4004]",
      "dest": ">: > [5974,5975]"
    },
    {
      "src": "identifier: _attribute [11278,11288]",
      "dest": "identifier: _attribute [13142,13152]"
    },
    {
      "src": "(: ( [29017,29018]",
      "dest": "(: ( [32130,32131]"
    },
    {
      "src": "function_body [14421,14527]",
      "dest": "function_body [16285,16391]"
    },
    {
      "src": "}: } [5413,5414]",
      "dest": "}: } [7384,7385]"
    },
    {
      "src": "{: { [41697,41698]",
      "dest": "{: { [48371,48372]"
    },
    {
      "src": "]: ] [13743,13744]",
      "dest": "]: ] [15607,15608]"
    },
    {
      "src": "}: } [29105,29106]",
      "dest": "}: } [48921,48922]"
    },
    {
      "src": "function_body [32077,32120]",
      "dest": "function_body [20723,20766]"
    },
    {
      "src": "public: public [42481,42487]",
      "dest": "public: public [31075,31081]"
    },
    {
      "src": ",: , [23866,23867]",
      "dest": ",: , [35322,35323]"
    },
    {
      "src": "identifier: from [28347,28351]",
      "dest": "identifier: spender [37761,37768]"
    },
    {
      "src": "member_expression [14153,14186]",
      "dest": "member_expression [16017,16050]"
    },
    {
      "src": "string: string [5280,5286]",
      "dest": "string: string [7251,7257]"
    },
    {
      "src": "binary_expression [40097,40108]",
      "dest": "binary_expression [46867,46878]"
    },
    {
      "src": "state_variable_declaration [33896,33928]",
      "dest": "state_variable_declaration [40042,40074]"
    },
    {
      "src": "identifier: timeLockRegistry [34401,34417]",
      "dest": "identifier: timeLockRegistry [40631,40647]"
    },
    {
      "src": "variable_declaration [11012,11025]",
      "dest": "variable_declaration [12876,12889]"
    },
    {
      "src": "user_defined_type [33321,33338]",
      "dest": "user_defined_type [39467,39484]"
    },
    {
      "src": "{: { [28222,28223]",
      "dest": "{: { [37663,37664]"
    },
    {
      "src": "]: ] [11652,11653]",
      "dest": "]: ] [13516,13517]"
    },
    {
      "src": "=: = [13824,13825]",
      "dest": "=: = [15688,15689]"
    },
    {
      "src": "public: public [39167,39173]",
      "dest": "public: public [45937,45943]"
    },
    {
      "src": "identifier: sender [41806,41812]",
      "dest": "identifier: sender [48449,48455]"
    },
    {
      "src": "function: function [4630,4638]",
      "dest": "function: function [6601,6609]"
    },
    {
      "src": "identifier: timePassed [38734,38744]",
      "dest": "identifier: timePassed [45386,45396]"
    },
    {
      "src": "primitive_type [1446,1453]",
      "dest": "primitive_type [3417,3424]"
    },
    {
      "src": "identifier: require [31800,31807]",
      "dest": "identifier: require [20446,20453]"
    },
    {
      "src": "type_name [33746,33753]",
      "dest": "type_name [39892,39899]"
    },
    {
      "src": "[: [ [13275,13276]",
      "dest": "[: [ [15139,15140]"
    },
    {
      "src": "expression_statement [31377,31397]",
      "dest": "expression_statement [20023,20043]"
    },
    {
      "src": ",: , [7659,7660]",
      "dest": ",: , [9569,9570]"
    },
    {
      "src": "else: else [42223,42227]",
      "dest": "else: else [48763,48767]"
    },
    {
      "src": "state_mutability [42588,42592]",
      "dest": "state_mutability [30909,30913]"
    },
    {
      "src": "identifier: add [39606,39609]",
      "dest": "identifier: add [46376,46379]"
    },
    {
      "src": "parameter [42085,42100]",
      "dest": "parameter [48625,48640]"
    },
    {
      "src": "variable_declaration [13004,13029]",
      "dest": "variable_declaration [14868,14893]"
    },
    {
      "src": "primitive_type [18241,18247]",
      "dest": "primitive_type [26986,26992]"
    },
    {
      "src": "call_expression [30242,30264]",
      "dest": "call_expression [27559,27595]"
    },
    {
      "src": "member_expression [37469,37485]",
      "dest": "member_expression [45707,45723]"
    },
    {
      "src": "identifier: _to [14302,14305]",
      "dest": "identifier: _to [16166,16169]"
    },
    {
      "src": "member_expression [38384,38399]",
      "dest": "member_expression [45036,45051]"
    },
    {
      "src": "user_defined_type [9269,9282]",
      "dest": "user_defined_type [11133,11146]"
    },
    {
      "src": "member_expression [41802,41812]",
      "dest": "member_expression [48445,48455]"
    },
    {
      "src": "address: address [9239,9246]",
      "dest": "address: address [11103,11110]"
    },
    {
      "src": "primitive_type [8172,8179]",
      "dest": "primitive_type [10082,10089]"
    },
    {
      "src": "(: ( [9508,9509]",
      "dest": "(: ( [11372,11373]"
    },
    {
      "src": "(: ( [1434,1435]",
      "dest": "(: ( [3405,3406]"
    },
    {
      "src": "identifier: super [36321,36326]",
      "dest": "identifier: super [43158,43163]"
    },
    {
      "src": ",: , [23620,23621]",
      "dest": ",: , [36829,36830]"
    },
    {
      "src": "bool: bool [8721,8725]",
      "dest": "bool: bool [10585,10589]"
    },
    {
      "src": "(: ( [40096,40097]",
      "dest": "(: ( [46866,46867]"
    },
    {
      "src": "function_body [4697,4760]",
      "dest": "function_body [6668,6731]"
    },
    {
      "src": "identifier: _attribute [8392,8402]",
      "dest": "identifier: _attribute [10256,10266]"
    },
    {
      "src": "parameter [40908,40915]",
      "dest": "parameter [47678,47685]"
    },
    {
      "src": "bytes32: bytes32 [10618,10625]",
      "dest": "bytes32: bytes32 [12482,12489]"
    },
    {
      "src": "}: } [15179,15180]",
      "dest": "}: } [17043,17044]"
    },
    {
      "src": "(: ( [39932,39933]",
      "dest": "(: ( [46702,46703]"
    },
    {
      "src": "parameter [23715,23731]",
      "dest": "parameter [34466,34481]"
    },
    {
      "src": "return: return [37512,37518]",
      "dest": "return: return [44162,44168]"
    },
    {
      "src": "comment: // return 0 if timestamp is lower than start time [38153,38202]",
      "dest": "comment: // return 0 if timestamp is lower than start time [44805,44854]"
    },
    {
      "src": "string [36881,36903]",
      "dest": "string [43649,43671]"
    },
    {
      "src": "bool: bool [15705,15709]",
      "dest": "bool: bool [17516,17520]"
    },
    {
      "src": "): ) [30451,30452]",
      "dest": "): ) [36268,36269]"
    },
    {
      "src": "(: ( [40344,40345]",
      "dest": "(: ( [47114,47115]"
    },
    {
      "src": "array_access [14078,14091]",
      "dest": "array_access [15942,15955]"
    },
    {
      "src": "call_argument [28390,28403]",
      "dest": "call_argument [37761,37782]"
    },
    {
      "src": "parameter [8361,8373]",
      "dest": "parameter [10225,10237]"
    },
    {
      "src": "modifier_invocation [36808,36828]",
      "dest": "modifier_invocation [43576,43596]"
    },
    {
      "src": "array_access [13422,13438]",
      "dest": "array_access [15286,15302]"
    },
    {
      "src": "visibility [19343,19351]",
      "dest": "visibility [37646,37654]"
    },
    {
      "src": "function: function [11755,11763]",
      "dest": "function: function [13619,13627]"
    },
    {
      "src": "member_expression [13422,13460]",
      "dest": "member_expression [15286,15324]"
    },
    {
      "src": "identifier: onlyOwner [14411,14420]",
      "dest": "identifier: onlyOwner [16275,16284]"
    },
    {
      "src": "parameter [42502,42515]",
      "dest": "parameter [31104,31117]"
    },
    {
      "src": "state_mutability [42488,42492]",
      "dest": "state_mutability [31090,31094]"
    },
    {
      "src": "==: == [31819,31821]",
      "dest": "==: == [20465,20467]"
    },
    {
      "src": "returns: returns [30955,30962]",
      "dest": "returns: returns [19601,19608]"
    },
    {
      "src": "internal: internal [21107,21115]",
      "dest": "internal: internal [25506,25514]"
    },
    {
      "src": "call_argument [11349,11356]",
      "dest": "call_argument [13213,13220]"
    },
    {
      "src": "!: ! [41716,41717]",
      "dest": "!: ! [48390,48391]"
    },
    {
      "src": "identifier: balanceOf [34931,34940]",
      "dest": "identifier: balanceOf [43007,43016]"
    },
    {
      "src": "primitive_type [14466,14473]",
      "dest": "primitive_type [16330,16337]"
    },
    {
      "src": "member_expression [13876,13890]",
      "dest": "member_expression [15740,15754]"
    },
    {
      "src": "identifier: _addresses [13754,13764]",
      "dest": "identifier: _addresses [15618,15628]"
    },
    {
      "src": "identifier: abi [10435,10438]",
      "dest": "identifier: abi [12299,12302]"
    },
    {
      "src": "primitive_type [7645,7652]",
      "dest": "primitive_type [9555,9562]"
    },
    {
      "src": "identifier: _index [11611,11617]",
      "dest": "identifier: _index [13475,13481]"
    },
    {
      "src": "identifier: amount [7273,7279]",
      "dest": "identifier: amount [9183,9189]"
    },
    {
      "src": "primitive_type [7299,7303]",
      "dest": "primitive_type [9209,9213]"
    },
    {
      "src": ",: , [12589,12590]",
      "dest": ",: , [14453,14454]"
    },
    {
      "src": "identifier: owner_ [30991,30997]",
      "dest": "identifier: owner_ [19637,19643]"
    },
    {
      "src": "string_literal [1080,1109]",
      "dest": "string_literal [3051,3080]"
    },
    {
      "src": "solidity: solidity [24263,24271]",
      "dest": "solidity: solidity [47737,47745]"
    },
    {
      "src": "state_mutability [18063,18067]",
      "dest": "state_mutability [49246,49250]"
    },
    {
      "src": "variable_declaration [13860,13873]",
      "dest": "variable_declaration [15724,15737]"
    },
    {
      "src": "internal: internal [5308,5316]",
      "dest": "internal: internal [7279,7287]"
    },
    {
      "src": "}: } [2657,2658]",
      "dest": "}: } [4628,4629]"
    },
    {
      "src": ",: , [4006,4007]",
      "dest": ",: , [5977,5978]"
    },
    {
      "src": "identifier: require [41708,41715]",
      "dest": "identifier: require [48382,48389]"
    },
    {
      "src": "primitive_type [30077,30084]",
      "dest": "primitive_type [36031,36038]"
    },
    {
      "src": "indexed: indexed [9703,9710]",
      "dest": "indexed: indexed [11567,11574]"
    },
    {
      "src": "address: address [15770,15777]",
      "dest": "address: address [17581,17588]"
    },
    {
      "src": ",: , [35542,35543]",
      "dest": ",: , [41457,41458]"
    },
    {
      "src": "call_argument [10417,10423]",
      "dest": "call_argument [12281,12287]"
    },
    {
      "src": ",: , [11585,11586]",
      "dest": ",: , [13449,13450]"
    },
    {
      "src": "function_definition [38088,38977]",
      "dest": "function_definition [44740,45629]"
    },
    {
      "src": "): ) [37499,37500]",
      "dest": "): ) [45737,45738]"
    },
    {
      "src": "identifier: require [3993,4000]",
      "dest": "identifier: require [5964,5971]"
    },
    {
      "src": "identifier: ModularStandardToken [19892,19912]",
      "dest": "identifier: ERC20 [30217,30222]"
    },
    {
      "src": "(: ( [11294,11295]",
      "dest": "(: ( [13158,13159]"
    },
    {
      "src": "(: ( [42339,42340]",
      "dest": "(: ( [48979,48980]"
    },
    {
      "src": "for: for [13998,14001]",
      "dest": "for: for [15862,15865]"
    },
    {
      "src": "parameter [23464,23476]",
      "dest": "parameter [35215,35229]"
    },
    {
      "src": "call_argument [37133,37143]",
      "dest": "call_argument [43847,43857]"
    },
    {
      "src": "comment: // the canWriteTo-foo attribute set (in that same Registry) [10214,10273]",
      "dest": "comment: // the canWriteTo-foo attribute set (in that same Registry) [12078,12137]"
    },
    {
      "src": "[: [ [13805,13806]",
      "dest": "[: [ [15669,15670]"
    },
    {
      "src": "identifier: newManager [9859,9869]",
      "dest": "identifier: newManager [11723,11733]"
    },
    {
      "src": "identifier: targets [10968,10975]",
      "dest": "identifier: targets [12832,12839]"
    },
    {
      "src": "identifier: hasAttribute [10404,10416]",
      "dest": "identifier: hasAttribute [12268,12280]"
    },
    {
      "src": "): ) [38555,38556]",
      "dest": "): ) [45207,45208]"
    },
    {
      "src": ".: . [40340,40341]",
      "dest": ".: . [47110,47111]"
    },
    {
      "src": "function_body [39197,39756]",
      "dest": "function_body [45967,46526]"
    },
    {
      "src": ".: . [38221,38222]",
      "dest": ".: . [44873,44874]"
    },
    {
      "src": "function: function [14229,14237]",
      "dest": "function: function [16093,16101]"
    },
    {
      "src": "modifier_invocation [14411,14420]",
      "dest": "modifier_invocation [16275,16284]"
    },
    {
      "src": "type_cast_expression [28355,28365]",
      "dest": "type_cast_expression [37772,37782]"
    },
    {
      "src": "): ) [14270,14271]",
      "dest": "): ) [16134,16135]"
    },
    {
      "src": "visibility [7696,7704]",
      "dest": "visibility [9606,9614]"
    },
    {
      "src": "parameter [5840,5855]",
      "dest": "parameter [7750,7765]"
    },
    {
      "src": "type_name [28806,28813]",
      "dest": "type_name [32401,32408]"
    },
    {
      "src": "identifier: owner [20121,20126]",
      "dest": "identifier: owner [30759,30764]"
    },
    {
      "src": "event_paramater [9901,9926]",
      "dest": "event_paramater [11765,11790]"
    },
    {
      "src": "\": \" [42639,42640]",
      "dest": "\": \" [49195,49196]"
    },
    {
      "src": "(: ( [20924,20925]",
      "dest": "(: ( [34557,34558]"
    },
    {
      "src": "call_expression [11266,11303]",
      "dest": "call_expression [13130,13167]"
    },
    {
      "src": "(: ( [4000,4001]",
      "dest": "(: ( [5971,5972]"
    },
    {
      "src": "primitive_type [15903,15910]",
      "dest": "primitive_type [17714,17721]"
    },
    {
      "src": "identifier: _from [36222,36227]",
      "dest": "identifier: _from [43093,43098]"
    },
    {
      "src": "type_name [22957,22964]",
      "dest": "type_name [37598,37605]"
    },
    {
      "src": "call_argument [36848,36879]",
      "dest": "call_argument [43616,43647]"
    },
    {
      "src": "call_argument [12056,12066]",
      "dest": "call_argument [13920,13930]"
    },
    {
      "src": "): ) [12986,12987]",
      "dest": "): ) [14850,14851]"
    },
    {
      "src": "function_body [12638,12703]",
      "dest": "function_body [14502,14567]"
    },
    {
      "src": "block_statement [39361,39437]",
      "dest": "block_statement [46131,46207]"
    },
    {
      "src": "return: return [40653,40659]",
      "dest": "return: return [47423,47429]"
    },
    {
      "src": "{: { [38887,38888]",
      "dest": "{: { [45539,45540]"
    },
    {
      "src": "bool: bool [29018,29022]",
      "dest": "bool: bool [32131,32135]"
    },
    {
      "src": "identifier: add [967,970]",
      "dest": "identifier: add [2938,2941]"
    },
    {
      "src": "parameter [29691,29705]",
      "dest": "parameter [36756,36770]"
    },
    {
      "src": "identifier: value [14181,14186]",
      "dest": "identifier: value [16045,16050]"
    },
    {
      "src": "solidity: solidity [27517,27525]",
      "dest": "solidity: solidity [10136,10144]"
    },
    {
      "src": "visibility [13772,13780]",
      "dest": "visibility [15636,15644]"
    },
    {
      "src": "override: override [35611,35619]",
      "dest": "override: override [41499,41507]"
    },
    {
      "src": "uint256: uint256 [33458,33465]",
      "dest": "uint256: uint256 [39604,39611]"
    },
    {
      "src": "}: } [30562,30563]",
      "dest": "}: } [36391,36392]"
    },
    {
      "src": "{: { [42121,42122]",
      "dest": "{: { [48661,48662]"
    },
    {
      "src": "^:  ^ [5494,5496]",
      "dest": "^:  ^ [2077,2079]"
    },
    {
      "src": "]: ] [12683,12684]",
      "dest": "]: ] [14547,14548]"
    },
    {
      "src": "call_expression [42136,42160]",
      "dest": "call_expression [48676,48700]"
    },
    {
      "src": "type_name [24373,24380]",
      "dest": "type_name [23059,23066]"
    },
    {
      "src": "}: } [14202,14203]",
      "dest": "}: } [16066,16067]"
    },
    {
      "src": "]: ] [13437,13438]",
      "dest": "]: ] [15301,15302]"
    },
    {
      "src": "indexed: indexed [10032,10039]",
      "dest": "indexed: indexed [11896,11903]"
    },
    {
      "src": "(: ( [11574,11575]",
      "dest": "(: ( [13438,13439]"
    },
    {
      "src": "identifier: msg [31597,31600]",
      "dest": "identifier: msg [20243,20246]"
    },
    {
      "src": "function: function [7623,7631]",
      "dest": "function: function [9533,9541]"
    },
    {
      "src": "identifier: _spender [21035,21043]",
      "dest": "identifier: target [25479,25485]"
    },
    {
      "src": "visibility [40540,40546]",
      "dest": "visibility [47310,47316]"
    },
    {
      "src": "identifier: _attribute [12673,12683]",
      "dest": "identifier: _attribute [14537,14547]"
    },
    {
      "src": "emit: emit [12175,12179]",
      "dest": "emit: emit [14039,14043]"
    },
    {
      "src": "type_name [5840,5847]",
      "dest": "type_name [7750,7757]"
    },
    {
      "src": "(: ( [10384,10385]",
      "dest": "(: ( [12248,12249]"
    },
    {
      "src": "string [2718,2753]",
      "dest": "string [4689,4724]"
    },
    {
      "src": "function: function [5245,5253]",
      "dest": "function: function [7216,7224]"
    },
    {
      "src": "call_argument [40311,40328]",
      "dest": "call_argument [47081,47098]"
    },
    {
      "src": "user_defined_type [9928,9941]",
      "dest": "user_defined_type [11792,11805]"
    },
    {
      "src": "visibility [39167,39173]",
      "dest": "visibility [45937,45943]"
    },
    {
      "src": "override_specifier [41883,41891]",
      "dest": "override_specifier [48957,48965]"
    },
    {
      "src": "type_name [37830,37837]",
      "dest": "type_name [44482,44489]"
    },
    {
      "src": "address: address [31141,31148]",
      "dest": "address: address [19787,19794]"
    },
    {
      "src": "type_alias [33352,33360]",
      "dest": "type_alias [39498,39506]"
    },
    {
      "src": "parameter [8413,8427]",
      "dest": "parameter [10277,10291]"
    },
    {
      "src": "primitive_type [19028,19035]",
      "dest": "primitive_type [30528,30535]"
    },
    {
      "src": "parameter [13507,13519]",
      "dest": "parameter [15371,15383]"
    },
    {
      "src": ".: . [14663,14664]",
      "dest": ".: . [16527,16528]"
    },
    {
      "src": "function_definition [36067,36355]",
      "dest": "function_definition [42924,43192]"
    },
    {
      "src": "state_mutability [42409,42413]",
      "dest": "state_mutability [49049,49053]"
    },
    {
      "src": "pragma: pragma [27326,27332]",
      "dest": "pragma: pragma [38676,38682]"
    },
    {
      "src": "comment: /**  * @title TimeLockedToken  * @notice Time Locked ERC20 Token  * @author Harold Hyatt  * @dev Contract which gives the ability to time-lock tokens  *  * The registerLockup() function allows an account to transfer  * its tokens to another account, locking them according to the  * distribution epoch periods  *  * By overriding the balanceOf(), transfer(), and transferFrom()  * functions in ERC20, an account can show its full, post-distribution  * balance but only transfer or spend up to an allowed amount  *  * Every time an epoch passes, a portion of previously non-spendable tokens  * are allowed to be transferred, and after all epochs have passed, the full  * account balance is unlocked  */ [32546,33264]",
      "dest": "comment: /**  * @title TimeLockedToken  * @notice Time Locked ERC20 Token  * @author Harold Hyatt  * @dev Contract which gives the ability to time-lock tokens  *  * The registerLockup() function allows an account to transfer  * its tokens to another account, locking them according to the  * distribution epoch periods  *  * By overriding the balanceOf(), transfer(), and transferFrom()  * functions in ERC20, an account can show its full, post-distribution  * balance but only transfer or spend up to an allowed amount  *  * Every time an epoch passes, a portion of previously non-spendable tokens  * are allowed to be transferred, and after all epochs have passed, the full  * account balance is unlocked  */ [38703,39421]"
    },
    {
      "src": "type_name [8508,8515]",
      "dest": "type_name [10372,10379]"
    },
    {
      "src": "==: == [40104,40106]",
      "dest": "==: == [46874,46876]"
    },
    {
      "src": "): ) [15858,15859]",
      "dest": "): ) [17669,17670]"
    },
    {
      "src": "(: ( [6188,6189]",
      "dest": "(: ( [8098,8099]"
    },
    {
      "src": "type_name [11414,11421]",
      "dest": "type_name [13278,13285]"
    },
    {
      "src": "array_access [13259,13275]",
      "dest": "array_access [15123,15139]"
    },
    {
      "src": ",: , [31170,31171]",
      "dest": ",: , [19816,19817]"
    },
    {
      "src": "identifier: _startIndex [13918,13929]",
      "dest": "identifier: _startIndex [15782,15793]"
    },
    {
      "src": "identifier: _ [34054,34055]",
      "dest": "identifier: _ [40284,40285]"
    },
    {
      "src": "}: } [11165,11166]",
      "dest": "}: } [13029,13030]"
    },
    {
      "src": "uint144: uint144 [15892,15899]",
      "dest": "uint144: uint144 [17703,17710]"
    },
    {
      "src": "return: return [3337,3343]",
      "dest": "return: return [5308,5314]"
    },
    {
      "src": "identifier: transferOwnership [15085,15102]",
      "dest": "identifier: transferOwnership [16949,16966]"
    },
    {
      "src": ",: , [10423,10424]",
      "dest": ",: , [12287,12288]"
    },
    {
      "src": "(: ( [14374,14375]",
      "dest": "(: ( [16238,16239]"
    },
    {
      "src": "call_expression [12031,12067]",
      "dest": "call_expression [13895,13931]"
    },
    {
      "src": "return_type_definition [13223,13240]",
      "dest": "return_type_definition [15087,15104]"
    },
    {
      "src": "type_name [30229,30233]",
      "dest": "type_name [27518,27522]"
    },
    {
      "src": "primitive_type [1036,1043]",
      "dest": "primitive_type [3007,3014]"
    },
    {
      "src": "public: public [42402,42408]",
      "dest": "public: public [49042,49048]"
    },
    {
      "src": "address: address [35578,35585]",
      "dest": "address: address [35231,35238]"
    },
    {
      "src": "]: ] [10783,10784]",
      "dest": "]: ] [12647,12648]"
    },
    {
      "src": "uint256: uint256 [11460,11467]",
      "dest": "uint256: uint256 [13324,13331]"
    },
    {
      "src": "function: function [34769,34777]",
      "dest": "function: function [42188,42196]"
    },
    {
      "src": "public: public [15861,15867]",
      "dest": "public: public [17672,17678]"
    },
    {
      "src": "primitive_type [38133,38140]",
      "dest": "primitive_type [44785,44792]"
    },
    {
      "src": "=>: => [9546,9548]",
      "dest": "=>: => [11410,11412]"
    },
    {
      "src": "call_expression [31589,31632]",
      "dest": "call_expression [20235,20278]"
    },
    {
      "src": "(: ( [37373,37374]",
      "dest": "(: ( [45679,45680]"
    },
    {
      "src": "contract_body [30919,32455]",
      "dest": "contract_body [19565,21101]"
    },
    {
      "src": "modifier_definition [33936,34063]",
      "dest": "modifier_definition [40166,40293]"
    },
    {
      "src": "call_expression [29035,29076]",
      "dest": "call_expression [48889,48914]"
    },
    {
      "src": "string [42535,42547]",
      "dest": "string [49293,49298]"
    },
    {
      "src": "uint256: uint256 [14003,14010]",
      "dest": "uint256: uint256 [15867,15874]"
    },
    {
      "src": "identifier: pendingOwner_ [31085,31098]",
      "dest": "identifier: pendingOwner_ [19731,19744]"
    },
    {
      "src": "identifier: _index [11422,11428]",
      "dest": "identifier: _index [13286,13292]"
    },
    {
      "src": "state_variable_declaration [33659,33704]",
      "dest": "state_variable_declaration [39805,39850]"
    },
    {
      "src": "virtual: virtual [29716,29723]",
      "dest": "virtual: virtual [36781,36788]"
    },
    {
      "src": "identifier: require [10712,10719]",
      "dest": "identifier: require [12576,12583]"
    },
    {
      "src": "call_argument [35743,35780]",
      "dest": "call_argument [41885,41922]"
    },
    {
      "src": "): ) [42515,42516]",
      "dest": "): ) [31117,31118]"
    },
    {
      "src": "comment: /**      * @dev Check if amount we want to burn is unlocked before burning      * @param _from The address whose tokens will burn      * @param _value The amount of tokens to be burnt      */ [35866,36061]",
      "dest": "comment: /**      * @dev Check if amount we want to burn is unlocked before burning      * @param _from The address whose tokens will burn      * @param _value The amount of tokens to be burnt      */ [42723,42918]"
    },
    {
      "src": "primitive_type [3973,3980]",
      "dest": "primitive_type [5944,5951]"
    },
    {
      "src": "for_statement [13998,14203]",
      "dest": "for_statement [15862,16067]"
    },
    {
      "src": "identifier: timestamp [13124,13133]",
      "dest": "identifier: timestamp [14988,14997]"
    },
    {
      "src": "primitive_type [31172,31179]",
      "dest": "primitive_type [19818,19825]"
    },
    {
      "src": "type_name [1874,1881]",
      "dest": "type_name [3845,3852]"
    },
    {
      "src": "identifier: rounding [42391,42399]",
      "dest": "identifier: rounding [49031,49039]"
    },
    {
      "src": "call_argument [36222,36227]",
      "dest": "call_argument [43093,43098]"
    },
    {
      "src": "}: } [12459,12460]",
      "dest": "}: } [14323,14324]"
    },
    {
      "src": "\": \" [35779,35780]",
      "dest": "\": \" [41921,41922]"
    },
    {
      "src": "bool: bool [30229,30233]",
      "dest": "bool: bool [27518,27522]"
    },
    {
      "src": "(: ( [21807,21808]",
      "dest": "(: ( [33807,33808]"
    },
    {
      "src": "identifier: AttributeData [9269,9282]",
      "dest": "identifier: AttributeData [11133,11146]"
    },
    {
      "src": "function_body [10701,11166]",
      "dest": "function_body [12565,13030]"
    },
    {
      "src": "bool: bool [7714,7718]",
      "dest": "bool: bool [9624,9628]"
    },
    {
      "src": "identifier: length [11036,11042]",
      "dest": "identifier: length [12900,12906]"
    },
    {
      "src": "}: } [11158,11159]",
      "dest": "}: } [13022,13023]"
    },
    {
      "src": "(: ( [38132,38133]",
      "dest": "(: ( [44784,44785]"
    },
    {
      "src": "number_literal: 8 [42448,42449]",
      "dest": "number_literal: 8 [49088,49089]"
    },
    {
      "src": "identifier: _to [30260,30263]",
      "dest": "identifier: data [27590,27594]"
    },
    {
      "src": "identifier: b [1454,1455]",
      "dest": "identifier: b [3425,3426]"
    },
    {
      "src": "primitive_type [36765,36772]",
      "dest": "primitive_type [43533,43540]"
    },
    {
      "src": "primitive_type [11931,11938]",
      "dest": "primitive_type [13795,13802]"
    },
    {
      "src": "identifier: MAX_SUPPLY [41475,41485]",
      "dest": "identifier: MAX_SUPPLY [48167,48177]"
    },
    {
      "src": "variable_declaration [39248,39262]",
      "dest": "variable_declaration [46018,46032]"
    },
    {
      "src": "identifier: require [14862,14869]",
      "dest": "identifier: require [16726,16733]"
    },
    {
      "src": "): ) [10482,10483]",
      "dest": "): ) [12346,12347]"
    },
    {
      "src": "primitive_type [15840,15847]",
      "dest": "primitive_type [17651,17658]"
    },
    {
      "src": "identifier: b [18518,18519]",
      "dest": "identifier: weiValue [27304,27312]"
    },
    {
      "src": "bool: bool [22794,22798]",
      "dest": "bool: bool [33098,33102]"
    },
    {
      "src": "string_literal [12132,12134]",
      "dest": "string_literal [13996,13998]"
    },
    {
      "src": "call_argument [38404,38414]",
      "dest": "call_argument [45056,45066]"
    },
    {
      "src": "comment: // start of the lockup period [33488,33517]",
      "dest": "comment: // start of the lockup period [39634,39663]"
    },
    {
      "src": "string [4725,4751]",
      "dest": "string [6696,6722]"
    },
    {
      "src": "state_mutability [2356,2360]",
      "dest": "state_mutability [4327,4331]"
    },
    {
      "src": "): ) [12003,12004]",
      "dest": "): ) [13867,13868]"
    },
    {
      "src": "(: ( [28970,28971]",
      "dest": "(: ( [48852,48853]"
    },
    {
      "src": "public: public [25636,25642]",
      "dest": "public: public [32107,32113]"
    },
    {
      "src": "return_type_definition [5322,5339]",
      "dest": "return_type_definition [7293,7310]"
    },
    {
      "src": "call_argument [42152,42159]",
      "dest": "call_argument [48692,48699]"
    },
    {
      "src": ",: , [13117,13118]",
      "dest": ",: , [14981,14982]"
    },
    {
      "src": "type_name [5269,5276]",
      "dest": "type_name [7240,7247]"
    },
    {
      "src": "variable_declaration [14432,14447]",
      "dest": "variable_declaration [16296,16311]"
    },
    {
      "src": "event_definition [9877,9962]",
      "dest": "event_definition [11741,11826]"
    },
    {
      "src": "{: { [31789,31790]",
      "dest": "{: { [20435,20436]"
    },
    {
      "src": "call_expression [10720,10756]",
      "dest": "call_expression [12584,12620]"
    },
    {
      "src": "binary_expression [14034,14041]",
      "dest": "binary_expression [15898,15905]"
    },
    {
      "src": "=: = [34478,34479]",
      "dest": "=: = [40708,40709]"
    },
    {
      "src": "call_expression [33979,34043]",
      "dest": "call_expression [40209,40273]"
    },
    {
      "src": "call_argument [10435,10482]",
      "dest": "call_argument [12299,12346]"
    },
    {
      "src": ".: . [37916,37917]",
      "dest": ".: . [44568,44569]"
    },
    {
      "src": "visibility [28828,28836]",
      "dest": "visibility [40915,40923]"
    },
    {
      "src": ".: . [10832,10833]",
      "dest": ".: . [12696,12697]"
    },
    {
      "src": "identifier: pop [11734,11737]",
      "dest": "identifier: pop [13598,13601]"
    },
    {
      "src": "parameter [12903,12910]",
      "dest": "parameter [14767,14774]"
    },
    {
      "src": "uint256: uint256 [39414,39421]",
      "dest": "uint256: uint256 [46184,46191]"
    },
    {
      "src": "): ) [32443,32444]",
      "dest": "): ) [21089,21090]"
    },
    {
      "src": "function_body [13241,13301]",
      "dest": "function_body [15105,15165]"
    },
    {
      "src": "call_argument [1517,1549]",
      "dest": "call_argument [3488,3520]"
    },
    {
      "src": "(: ( [22793,22794]",
      "dest": "(: ( [33097,33098]"
    },
    {
      "src": "/: / [2708,2709]",
      "dest": "/: / [4679,4680]"
    },
    {
      "src": "returns: returns [40552,40559]",
      "dest": "returns: returns [47322,47329]"
    },
    {
      "src": "function_definition [34203,34507]",
      "dest": "function_definition [40433,40737]"
    },
    {
      "src": "indexed: indexed [9942,9949]",
      "dest": "indexed: indexed [11806,11813]"
    },
    {
      "src": ",: , [14679,14680]",
      "dest": ",: , [16543,16544]"
    },
    {
      "src": "identifier: account [37908,37915]",
      "dest": "identifier: account [44560,44567]"
    },
    {
      "src": "identifier: targets [12329,12336]",
      "dest": "identifier: targets [14193,14200]"
    },
    {
      "src": "identifier: _burn [36327,36332]",
      "dest": "identifier: _burn [43164,43169]"
    },
    {
      "src": ",: , [10016,10017]",
      "dest": ",: , [11880,11881]"
    },
    {
      "src": "comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      *      * - Multiplication cannot overflow.      */ [2061,2306]",
      "dest": "comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      *      * - Multiplication cannot overflow.      */ [4032,4277]"
    },
    {
      "src": "identifier: EPOCH_DURATION [39733,39747]",
      "dest": "identifier: EPOCH_DURATION [46503,46517]"
    },
    {
      "src": "type_name [15762,15789]",
      "dest": "type_name [17573,17600]"
    },
    {
      "src": "primitive_type [2670,2677]",
      "dest": "primitive_type [4641,4648]"
    },
    {
      "src": "parameter [6189,6193]",
      "dest": "parameter [8099,8103]"
    },
    {
      "src": "identifier: _transferFromAllArgs [35476,35496]",
      "dest": "identifier: _transfer [41402,41411]"
    },
    {
      "src": "]: ] [36868,36869]",
      "dest": "]: ] [43636,43637]"
    },
    {
      "src": "(: ( [36332,36333]",
      "dest": "(: ( [43169,43170]"
    },
    {
      "src": "primitive_type [11193,11200]",
      "dest": "primitive_type [13057,13064]"
    },
    {
      "src": "type_name [12632,12636]",
      "dest": "type_name [14496,14500]"
    },
    {
      "src": "expression_statement [14491,14520]",
      "dest": "expression_statement [16355,16384]"
    },
    {
      "src": "(: ( [39586,39587]",
      "dest": "(: ( [46356,46357]"
    },
    {
      "src": "=: = [33596,33597]",
      "dest": "=: = [39742,39743]"
    },
    {
      "src": "pragma_directive [27326,27349]",
      "dest": "pragma_directive [38676,38699]"
    },
    {
      "src": "identifier: value [27432,27437]",
      "dest": "identifier: value [26497,26502]"
    },
    {
      "src": "uint256: uint256 [12969,12976]",
      "dest": "uint256: uint256 [14833,14840]"
    },
    {
      "src": "): ) [10364,10365]",
      "dest": "): ) [12228,12229]"
    },
    {
      "src": "primitive_type [31058,31065]",
      "dest": "primitive_type [19704,19711]"
    },
    {
      "src": "user_defined_type [11213,11226]",
      "dest": "user_defined_type [13077,13090]"
    },
    {
      "src": "): ) [9282,9283]",
      "dest": "): ) [11146,11147]"
    },
    {
      "src": "number_literal: 0 [12371,12372]",
      "dest": "number_literal: 0 [14235,14236]"
    },
    {
      "src": "function: function [39146,39154]",
      "dest": "function: function [45916,45924]"
    },
    {
      "src": "type_name [2370,2377]",
      "dest": "type_name [4341,4348]"
    },
    {
      "src": "identifier: approve [7240,7247]",
      "dest": "identifier: approve [9150,9157]"
    },
    {
      "src": "call_expression [39569,39625]",
      "dest": "call_expression [46339,46395]"
    },
    {
      "src": "identifier: pendingOwner_ [31822,31835]",
      "dest": "identifier: pendingOwner_ [20468,20481]"
    },
    {
      "src": "(: ( [15102,15103]",
      "dest": "(: ( [16966,16967]"
    },
    {
      "src": "identifier: _from [35649,35654]",
      "dest": "identifier: _from [41537,41542]"
    },
    {
      "src": "call_argument [35109,35114]",
      "dest": "call_argument [42685,42690]"
    },
    {
      "src": "identifier: owner [15395,15400]",
      "dest": "identifier: owner [17259,17264]"
    },
    {
      "src": "expression_statement [31847,31849]",
      "dest": "expression_statement [20493,20495]"
    },
    {
      "src": "call_argument [12211,12217]",
      "dest": "call_argument [14075,14081]"
    },
    {
      "src": "call_argument [39610,39624]",
      "dest": "call_argument [46380,46394]"
    },
    {
      "src": "primitive_type [42602,42608]",
      "dest": "primitive_type [30923,30929]"
    },
    {
      "src": "}: } [4164,4165]",
      "dest": "}: } [6135,6136]"
    },
    {
      "src": "return_type_definition [38124,38141]",
      "dest": "return_type_definition [44776,44793]"
    },
    {
      "src": ".: . [40670,40671]",
      "dest": ".: . [47440,47441]"
    },
    {
      "src": "contract_declaration [15676,17459]",
      "dest": "contract_declaration [17487,19270]"
    },
    {
      "src": ".: . [12226,12227]",
      "dest": ".: . [14090,14091]"
    },
    {
      "src": "function: function [5821,5829]",
      "dest": "function: function [7731,7739]"
    },
    {
      "src": "\": \" [36240,36241]",
      "dest": "\": \" [43111,43112]"
    },
    {
      "src": "uint256: uint256 [1885,1892]",
      "dest": "uint256: uint256 [3856,3863]"
    },
    {
      "src": "internal: internal [993,1001]",
      "dest": "internal: internal [2964,2972]"
    },
    {
      "src": "external: external [28828,28836]",
      "dest": "external: external [40915,40923]"
    },
    {
      "src": "call_expression [35794,35850]",
      "dest": "call_expression [41934,41969]"
    },
    {
      "src": "return_statement [40289,40362]",
      "dest": "return_statement [47059,47132]"
    },
    {
      "src": "call_argument [11526,11541]",
      "dest": "call_argument [13390,13405]"
    },
    {
      "src": "variable_declaration_statement [4032,4050]",
      "dest": "variable_declaration_statement [6003,6021]"
    },
    {
      "src": "comment: /**      * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * IMPORTANT: Beware that changing an allowance with this method brings the risk      * that someone may use both the old and the new allowance by unfortunate      * transaction ordering. One possible solution to mitigate this race      * condition is to first reduce the spender's allowance to 0 and set the      * desired value afterwards:      * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      *      * Emits an {Approval} event.      */ [6570,7225]",
      "dest": "comment: /**      * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * IMPORTANT: Beware that changing an allowance with this method brings the risk      * that someone may use both the old and the new allowance by unfortunate      * transaction ordering. One possible solution to mitigate this race      * condition is to first reduce the spender's allowance to 0 and set the      * desired value afterwards:      * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      *      * Emits an {Approval} event.      */ [8480,9135]"
    },
    {
      "src": "identifier: AttributeData [8483,8496]",
      "dest": "identifier: AttributeData [10347,10360]"
    },
    {
      "src": "comment: // that account can use the token. This mapping stores that value (1, in the [8996,9072]",
      "dest": "comment: // that account can use the token. This mapping stores that value (1, in the [10860,10936]"
    },
    {
      "src": "identifier: pendingOwner [15403,15415]",
      "dest": "identifier: pendingOwner [17267,17279]"
    },
    {
      "src": "call_expression [40660,40731]",
      "dest": "call_expression [47430,47501]"
    },
    {
      "src": "): ) [42345,42346]",
      "dest": "): ) [48985,48986]"
    },
    {
      "src": "uint256: uint256 [15851,15858]",
      "dest": "uint256: uint256 [17662,17669]"
    },
    {
      "src": "identifier: msg [14870,14873]",
      "dest": "identifier: msg [16734,16737]"
    },
    {
      "src": "[: [ [13269,13270]",
      "dest": "[: [ [15133,15134]"
    },
    {
      "src": "call_expression [35086,35128]",
      "dest": "call_expression [42669,42707]"
    },
    {
      "src": "): ) [5855,5856]",
      "dest": "): ) [7765,7766]"
    },
    {
      "src": "=: = [30240,30241]",
      "dest": "=: = [27557,27558]"
    },
    {
      "src": "identifier: attributes [13589,13599]",
      "dest": "identifier: attributes [15453,15463]"
    },
    {
      "src": "type_name [8197,8204]",
      "dest": "type_name [10107,10114]"
    },
    {
      "src": "(: ( [23613,23614]",
      "dest": "(: ( [36807,36808]"
    },
    {
      "src": "type_name [15103,15110]",
      "dest": "type_name [16967,16974]"
    },
    {
      "src": "call_argument [40698,40730]",
      "dest": "call_argument [47468,47500]"
    },
    {
      "src": "comment: // subtract the FIRST_EPOCH_DELAY, so that we can count all epochs as lasting EPOCH_DURATION [38604,38696]",
      "dest": "comment: // subtract the FIRST_EPOCH_DELAY, so that we can count all epochs as lasting EPOCH_DURATION [45256,45348]"
    },
    {
      "src": "(: ( [9238,9239]",
      "dest": "(: ( [11102,11103]"
    },
    {
      "src": "call_argument [37561,37573]",
      "dest": "call_argument [44213,44225]"
    },
    {
      "src": "pure: pure [18063,18067]",
      "dest": "pure: pure [49246,49250]"
    },
    {
      "src": "comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [1566,1855]",
      "dest": "comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [3537,3826]"
    },
    {
      "src": "expression_statement [12389,12449]",
      "dest": "expression_statement [14253,14313]"
    },
    {
      "src": "identifier: _who [13270,13274]",
      "dest": "identifier: _who [15134,15138]"
    },
    {
      "src": "identifier: _attribute [12096,12106]",
      "dest": "identifier: _attribute [13960,13970]"
    },
    {
      "src": "uint256: uint256 [5331,5338]",
      "dest": "uint256: uint256 [7302,7309]"
    },
    {
      "src": "update_expression [14034,14037]",
      "dest": "update_expression [15898,15901]"
    },
    {
      "src": "(: ( [40884,40885]",
      "dest": "(: ( [47654,47655]"
    },
    {
      "src": "call_argument [28891,28894]",
      "dest": "call_argument [32490,32496]"
    },
    {
      "src": "type_name [42602,42608]",
      "dest": "type_name [30923,30929]"
    },
    {
      "src": "identifier: b [1514,1515]",
      "dest": "identifier: b [3485,3486]"
    },
    {
      "src": "variable_declaration [11460,11474]",
      "dest": "variable_declaration [13324,13338]"
    },
    {
      "src": "(: ( [9814,9815]",
      "dest": "(: ( [11678,11679]"
    },
    {
      "src": "type_name [31058,31065]",
      "dest": "type_name [19704,19711]"
    },
    {
      "src": "public: public [39912,39918]",
      "dest": "public: public [46682,46688]"
    },
    {
      "src": "constructor_definition [31345,31464]",
      "dest": "constructor_definition [19991,20110]"
    },
    {
      "src": "member_expression [10841,10856]",
      "dest": "member_expression [12705,12720]"
    },
    {
      "src": "{: { [39361,39362]",
      "dest": "{: { [46131,46132]"
    },
    {
      "src": "parameter [8384,8402]",
      "dest": "parameter [10248,10266]"
    },
    {
      "src": "return_statement [20965,20977]",
      "dest": "return_statement [34687,34699]"
    },
    {
      "src": "if: if [40093,40095]",
      "dest": "if: if [46863,46865]"
    },
    {
      "src": "): ) [10484,10485]",
      "dest": "): ) [12348,12349]"
    },
    {
      "src": "state_mutability [5866,5870]",
      "dest": "state_mutability [7776,7780]"
    },
    {
      "src": "internal: internal [29707,29715]",
      "dest": "internal: internal [36772,36780]"
    },
    {
      "src": "identifier: msg [25724,25727]",
      "dest": "identifier: msg [21763,21766]"
    },
    {
      "src": ".: . [37540,37541]",
      "dest": ".: . [44190,44191]"
    },
    {
      "src": "function_body [2379,2783]",
      "dest": "function_body [4350,4754]"
    },
    {
      "src": "primitive_type [32042,32049]",
      "dest": "primitive_type [20688,20695]"
    },
    {
      "src": "number_literal: 0 [11070,11071]",
      "dest": "number_literal: 0 [12934,12935]"
    },
    {
      "src": "string_literal [14681,14693]",
      "dest": "string_literal [16545,16557]"
    },
    {
      "src": "function_definition [41650,41848]",
      "dest": "function_definition [48342,48491]"
    },
    {
      "src": "return_statement [42628,42641]",
      "dest": "return_statement [49177,49197]"
    },
    {
      "src": "(: ( [1974,1975]",
      "dest": "(: ( [3945,3946]"
    },
    {
      "src": "primitive_type [9765,9772]",
      "dest": "primitive_type [11629,11636]"
    },
    {
      "src": "comment: /**      * @dev Get timestamp of latest epoch      * @return Timestamp of when the current epoch has started      */ [39764,39883]",
      "dest": "comment: /**      * @dev Get timestamp of latest epoch      * @return Timestamp of when the current epoch has started      */ [46534,46653]"
    },
    {
      "src": "primitive_type [5840,5847]",
      "dest": "primitive_type [7750,7757]"
    },
    {
      "src": "using_directive [33346,33373]",
      "dest": "using_directive [39492,39519]"
    },
    {
      "src": "(: ( [40537,40538]",
      "dest": "(: ( [47307,47308]"
    },
    {
      "src": "(: ( [9990,9991]",
      "dest": "(: ( [11854,11855]"
    },
    {
      "src": "primitive_type [29812,29819]",
      "dest": "primitive_type [37113,37120]"
    },
    {
      "src": "function_definition [31013,31106]",
      "dest": "function_definition [19659,19752]"
    },
    {
      "src": "identifier: owner_ [31377,31383]",
      "dest": "identifier: owner_ [20023,20029]"
    },
    {
      "src": "parameter [29676,29689]",
      "dest": "parameter [36739,36754]"
    },
    {
      "src": "identifier: initalized [15710,15720]",
      "dest": "identifier: initalized [17521,17531]"
    },
    {
      "src": "{: { [36829,36830]",
      "dest": "{: { [43597,43598]"
    },
    {
      "src": "function_definition [8323,8444]",
      "dest": "function_definition [10187,10308]"
    },
    {
      "src": "type_name [27703,27710]",
      "dest": "type_name [30306,30313]"
    },
    {
      "src": "identifier: EPOCH_DURATION [38772,38786]",
      "dest": "identifier: EPOCH_DURATION [45424,45438]"
    },
    {
      "src": "uint256: uint256 [36783,36790]",
      "dest": "uint256: uint256 [43551,43558]"
    },
    {
      "src": "function_body [15138,15180]",
      "dest": "function_body [17002,17044]"
    },
    {
      "src": "block_statement [38246,38281]",
      "dest": "block_statement [44898,44933]"
    },
    {
      "src": "call_argument [28405,28424]",
      "dest": "call_argument [37784,37820]"
    },
    {
      "src": "type_name [3911,3918]",
      "dest": "type_name [5882,5889]"
    },
    {
      "src": "identifier: LOCK_START [40296,40306]",
      "dest": "identifier: LOCK_START [47066,47076]"
    },
    {
      "src": "state_mutability [11807,11811]",
      "dest": "state_mutability [13671,13675]"
    },
    {
      "src": "identifier: Approval [8140,8148]",
      "dest": "identifier: Approval [10050,10058]"
    },
    {
      "src": "identifier: _value [30098,30104]",
      "dest": "identifier: amount [36056,36062]"
    },
    {
      "src": ",: , [14509,14510]",
      "dest": ",: , [16373,16374]"
    },
    {
      "src": "): ) [19275,19276]",
      "dest": "): ) [35445,35446]"
    },
    {
      "src": "identifier: transfer [6127,6135]",
      "dest": "identifier: transfer [8037,8045]"
    },
    {
      "src": "}: } [24194,24195]",
      "dest": "}: } [38671,38672]"
    },
    {
      "src": "call_argument [30165,30171]",
      "dest": "call_argument [36377,36383]"
    },
    {
      "src": "||: || [10401,10403]",
      "dest": "||: || [12265,12267]"
    },
    {
      "src": "for: for [33361,33364]",
      "dest": "for: for [39507,39510]"
    },
    {
      "src": "): ) [32373,32374]",
      "dest": "): ) [21019,21020]"
    },
    {
      "src": "uint256: uint256 [13860,13867]",
      "dest": "uint256: uint256 [15724,15731]"
    },
    {
      "src": "primitive_type [8149,8156]",
      "dest": "primitive_type [10059,10066]"
    },
    {
      "src": "returns: returns [42493,42500]",
      "dest": "returns: returns [31095,31102]"
    },
    {
      "src": "primitive_type [7680,7687]",
      "dest": "primitive_type [9590,9597]"
    },
    {
      "src": "parameter [11414,11428]",
      "dest": "parameter [13278,13292]"
    },
    {
      "src": "(: ( [2324,2325]",
      "dest": "(: ( [4295,4296]"
    },
    {
      "src": "primitive_type [39933,39940]",
      "dest": "primitive_type [46703,46710]"
    },
    {
      "src": "): ) [14400,14401]",
      "dest": "): ) [16264,16265]"
    },
    {
      "src": ",: , [12819,12820]",
      "dest": ",: , [14683,14684]"
    },
    {
      "src": "identifier: OwnershipTransferred [31120,31140]",
      "dest": "identifier: OwnershipTransferred [19766,19786]"
    },
    {
      "src": "parameter [35578,35594]",
      "dest": "parameter [35231,35248]"
    },
    {
      "src": "public: public [12611,12617]",
      "dest": "public: public [14475,14481]"
    },
    {
      "src": "binary_expression [38525,38555]",
      "dest": "binary_expression [45177,45207]"
    },
    {
      "src": "type_name [29676,29683]",
      "dest": "type_name [36739,36746]"
    },
    {
      "src": "primitive_type [8532,8539]",
      "dest": "primitive_type [10396,10403]"
    },
    {
      "src": "state_variable_declaration [15813,15878]",
      "dest": "state_variable_declaration [17624,17689]"
    },
    {
      "src": "identifier: sender [12140,12146]",
      "dest": "identifier: sender [14004,14010]"
    },
    {
      "src": "*: * [2684,2685]",
      "dest": "*: * [4655,4656]"
    },
    {
      "src": "indexed: indexed [9773,9780]",
      "dest": "indexed: indexed [11637,11644]"
    },
    {
      "src": "identifier: _to [14267,14270]",
      "dest": "identifier: _to [16131,16134]"
    },
    {
      "src": "function_definition [7231,7305]",
      "dest": "function_definition [9141,9215]"
    },
    {
      "src": "identifier: c [2044,2045]",
      "dest": "identifier: c [4015,4016]"
    },
    {
      "src": "address: address [34322,34329]",
      "dest": "address: address [40552,40559]"
    },
    {
      "src": "call_argument [10829,10839]",
      "dest": "call_argument [12693,12703]"
    },
    {
      "src": "type_name [12903,12910]",
      "dest": "type_name [14767,14774]"
    },
    {
      "src": "(: ( [14659,14660]",
      "dest": "(: ( [16523,16524]"
    },
    {
      "src": "comment: // accounts for first epoch being longer [40166,40206]",
      "dest": "comment: // accounts for first epoch being longer [46936,46976]"
    },
    {
      "src": "visibility [36799,36807]",
      "dest": "visibility [43567,43575]"
    },
    {
      "src": "]: ] [11499,11500]",
      "dest": "]: ] [13363,13364]"
    },
    {
      "src": "type_name [10301,10308]",
      "dest": "type_name [12165,12172]"
    },
    {
      "src": "identifier: mul [2321,2324]",
      "dest": "identifier: mul [4292,4295]"
    },
    {
      "src": "call_argument [31619,31631]",
      "dest": "call_argument [20265,20277]"
    },
    {
      "src": ",: , [6153,6154]",
      "dest": ",: , [8063,8064]"
    },
    {
      "src": "return_statement [42358,42367]",
      "dest": "return_statement [48998,49007]"
    },
    {
      "src": "\": \" [29971,29972]",
      "dest": "\": \" [36994,36995]"
    },
    {
      "src": "return_statement [40928,40946]",
      "dest": "return_statement [47698,47716]"
    },
    {
      "src": "{: { [5597,5598]",
      "dest": "{: { [7507,7508]"
    },
    {
      "src": "returns: returns [38124,38131]",
      "dest": "returns: returns [44776,44783]"
    },
    {
      "src": "call_expression [29947,30008]",
      "dest": "call_expression [37056,37079]"
    },
    {
      "src": "pure: pure [4674,4678]",
      "dest": "pure: pure [6645,6649]"
    },
    {
      "src": "[: [ [36857,36858]",
      "dest": "[: [ [43625,43626]"
    },
    {
      "src": "call_argument [28363,28364]",
      "dest": "call_argument [37780,37781]"
    },
    {
      "src": "(: ( [36081,36082]",
      "dest": "(: ( [42938,42939]"
    },
    {
      "src": "): ) [37381,37382]",
      "dest": "): ) [45687,45688]"
    },
    {
      "src": ",: , [37153,37154]",
      "dest": ",: , [43867,43868]"
    },
    {
      "src": "identifier: target [13960,13966]",
      "dest": "identifier: target [15824,15830]"
    },
    {
      "src": "identifier: sender [31601,31607]",
      "dest": "identifier: sender [20247,20253]"
    },
    {
      "src": "identifier: targets [12389,12396]",
      "dest": "identifier: targets [14253,14260]"
    },
    {
      "src": "struct_member [8508,8522]",
      "dest": "struct_member [10372,10386]"
    },
    {
      "src": "identifier: syncAttribute [13652,13665]",
      "dest": "identifier: syncAttribute [15516,15529]"
    },
    {
      "src": "=: = [38382,38383]",
      "dest": "=: = [45034,45035]"
    },
    {
      "src": "parameter [12947,12954]",
      "dest": "parameter [14811,14818]"
    },
    {
      "src": "identifier: div [3344,3347]",
      "dest": "identifier: div [5315,5318]"
    },
    {
      "src": "pure: pure [42488,42492]",
      "dest": "pure: pure [31090,31094]"
    },
    {
      "src": "type_name [20128,20135]",
      "dest": "type_name [30766,30773]"
    },
    {
      "src": "primitive_type [7912,7919]",
      "dest": "primitive_type [9822,9829]"
    },
    {
      "src": "parameter [3922,3948]",
      "dest": "parameter [5893,5919]"
    },
    {
      "src": "(: ( [28362,28363]",
      "dest": "(: ( [37779,37780]"
    },
    {
      "src": "state_mutability [13218,13222]",
      "dest": "state_mutability [15082,15086]"
    },
    {
      "src": "identifier: _attribute [11337,11347]",
      "dest": "identifier: _attribute [13201,13211]"
    },
    {
      "src": "): ) [14849,14850]",
      "dest": "): ) [16713,16714]"
    },
    {
      "src": "string_literal [9509,9522]",
      "dest": "string_literal [11373,11386]"
    },
    {
      "src": "): ) [37351,37352]",
      "dest": "): ) [44065,44066]"
    },
    {
      "src": "string_literal [42635,42640]",
      "dest": "string_literal [49184,49196]"
    },
    {
      "src": "function_definition [40866,40953]",
      "dest": "function_definition [47636,47723]"
    },
    {
      "src": "identifier: _attribute [12599,12609]",
      "dest": "identifier: _attribute [14463,14473]"
    },
    {
      "src": "type_name [15903,15910]",
      "dest": "type_name [17714,17721]"
    },
    {
      "src": "primitive_type [2336,2343]",
      "dest": "primitive_type [4307,4314]"
    },
    {
      "src": "primitive_type [14064,14071]",
      "dest": "primitive_type [15928,15935]"
    },
    {
      "src": "call_expression [19397,19448]",
      "dest": "call_expression [37674,37742]"
    },
    {
      "src": "parameter [12632,12636]",
      "dest": "parameter [14496,14500]"
    },
    {
      "src": "identifier: hook [30234,30238]",
      "dest": "identifier: success [27523,27530]"
    },
    {
      "src": "event_paramater [9613,9642]",
      "dest": "event_paramater [11477,11506]"
    },
    {
      "src": "address: address [23715,23722]",
      "dest": "address: address [34466,34473]"
    },
    {
      "src": "]: ] [36944,36945]",
      "dest": "]: ] [43777,43778]"
    },
    {
      "src": "identifier: _ [14908,14909]",
      "dest": "identifier: _ [16772,16773]"
    },
    {
      "src": "): ) [1455,1456]",
      "dest": "): ) [3426,3427]"
    },
    {
      "src": "visibility [18054,18062]",
      "dest": "visibility [22774,22782]"
    },
    {
      "src": "{: { [42517,42518]",
      "dest": "{: { [49275,49276]"
    },
    {
      "src": "{: { [14641,14642]",
      "dest": "{: { [16505,16506]"
    },
    {
      "src": "bool: bool [20892,20896]",
      "dest": "bool: bool [34532,34536]"
    },
    {
      "src": "): ) [30534,30535]",
      "dest": "): ) [24393,24394]"
    },
    {
      "src": "parameter [11193,11211]",
      "dest": "parameter [13057,13075]"
    },
    {
      "src": "contract_declaration [30876,32455]",
      "dest": "contract_declaration [19522,21101]"
    },
    {
      "src": "expression_statement [34461,34500]",
      "dest": "expression_statement [40691,40730]"
    },
    {
      "src": "primitive_type [13860,13867]",
      "dest": "primitive_type [15724,15731]"
    },
    {
      "src": "]: ] [34946,34947]",
      "dest": "]: ] [43022,43023]"
    },
    {
      "src": "type_name [5280,5286]",
      "dest": "type_name [7251,7257]"
    },
    {
      "src": "comment: /**      * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.      *      * Beware that changing an allowance with this method brings the risk that someone may use both the old      * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this      * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:      * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      * @param _spender The address which will spend the funds.      * @param _value The amount of tokens to be spent.      */ [20176,20819]",
      "dest": "comment: /**      * @dev Emitted when `value` tokens are moved from one account (`from`) to      * another (`to`).      *      * Note that `value` may be zero.      */ [30322,30485]"
    },
    {
      "src": "(: ( [13231,13232]",
      "dest": "(: ( [15095,15096]"
    },
    {
      "src": "returns: returns [22785,22792]",
      "dest": "returns: returns [33089,33096]"
    },
    {
      "src": "identifier: totalSupply [29947,29958]",
      "dest": "identifier: totalSupply [37056,37067]"
    },
    {
      "src": "): ) [29022,29023]",
      "dest": "): ) [32135,32136]"
    },
    {
      "src": "primitive_type [8721,8725]",
      "dest": "primitive_type [10585,10589]"
    },
    {
      "src": "}: } [42650,42651]",
      "dest": "}: } [49308,49309]"
    },
    {
      "src": "call_argument [1975,1981]",
      "dest": "call_argument [3946,3952]"
    },
    {
      "src": "): ) [13569,13570]",
      "dest": "): ) [15433,15434]"
    },
    {
      "src": "return: return [1500,1506]",
      "dest": "return: return [3471,3477]"
    },
    {
      "src": "type_name [12591,12598]",
      "dest": "type_name [14455,14462]"
    },
    {
      "src": "(: ( [7713,7714]",
      "dest": "(: ( [9623,9624]"
    },
    {
      "src": "days: days [33783,33787]",
      "dest": "days: days [39929,39933]"
    },
    {
      "src": "public: public [37809,37815]",
      "dest": "public: public [44461,44467]"
    },
    {
      "src": "identifier: targets [11088,11095]",
      "dest": "identifier: targets [12952,12959]"
    },
    {
      "src": "string [42250,42271]",
      "dest": "string [48790,48811]"
    },
    {
      "src": "function_definition [42058,42291]",
      "dest": "function_definition [48598,48831]"
    },
    {
      "src": "address: address [7661,7668]",
      "dest": "address: address [9571,9578]"
    },
    {
      "src": "): ) [28364,28365]",
      "dest": "): ) [37781,37782]"
    },
    {
      "src": "identifier: value [19056,19061]",
      "dest": "identifier: value [30556,30561]"
    },
    {
      "src": "modifier_definition [31761,31856]",
      "dest": "modifier_definition [20407,20502]"
    },
    {
      "src": "bytes32: bytes32 [11780,11787]",
      "dest": "bytes32: bytes32 [13644,13651]"
    },
    {
      "src": "): ) [30238,30239]",
      "dest": "): ) [27555,27556]"
    },
    {
      "src": "assignment_expression [10768,10857]",
      "dest": "assignment_expression [12632,12721]"
    },
    {
      "src": "address: address [15821,15828]",
      "dest": "address: address [17632,17639]"
    },
    {
      "src": "primitive_type [13340,13347]",
      "dest": "primitive_type [15204,15211]"
    },
    {
      "src": "identifier: _pendingOwner [32360,32373]",
      "dest": "identifier: _pendingOwner [21006,21019]"
    },
    {
      "src": "type_name [23464,23471]",
      "dest": "type_name [35215,35222]"
    },
    {
      "src": "function_definition [10279,10493]",
      "dest": "function_definition [12143,12357]"
    },
    {
      "src": "parameter [5880,5887]",
      "dest": "parameter [7790,7797]"
    },
    {
      "src": "parameter [13735,13764]",
      "dest": "parameter [15599,15628]"
    },
    {
      "src": "identifier: _from [34941,34946]",
      "dest": "identifier: _from [43017,43022]"
    },
    {
      "src": "type_name [34851,34858]",
      "dest": "type_name [42228,42235]"
    },
    {
      "src": "=: = [10797,10798]",
      "dest": "=: = [12661,12662]"
    },
    {
      "src": "type_name [9549,9562]",
      "dest": "type_name [11413,11426]"
    },
    {
      "src": "--: -- [11065,11067]",
      "dest": "--: -- [12929,12931]"
    },
    {
      "src": "identifier: _spender [35586,35594]",
      "dest": "identifier: recipient [35239,35248]"
    },
    {
      "src": "(: ( [15300,15301]",
      "dest": "(: ( [17164,17165]"
    },
    {
      "src": "parameter [18016,18046]",
      "dest": "parameter [27314,27340]"
    },
    {
      "src": ",: , [31617,31618]",
      "dest": ",: , [20263,20264]"
    },
    {
      "src": "{: { [5340,5341]",
      "dest": "{: { [7311,7312]"
    },
    {
      "src": "call_expression [14862,14897]",
      "dest": "call_expression [16726,16761]"
    },
    {
      "src": "function_definition [3887,4165]",
      "dest": "function_definition [5858,6136]"
    },
    {
      "src": "(: ( [42071,42072]",
      "dest": "(: ( [48611,48612]"
    },
    {
      "src": "binary_expression [2615,2621]",
      "dest": "binary_expression [4586,4592]"
    },
    {
      "src": "assignment_expression [11630,11699]",
      "dest": "assignment_expression [13494,13563]"
    },
    {
      "src": "binary_expression [14660,14679]",
      "dest": "binary_expression [16524,16543]"
    },
    {
      "src": "public: public [30943,30949]",
      "dest": "public: public [19589,19595]"
    },
    {
      "src": "\": \" [1548,1549]",
      "dest": "\": \" [3519,3520]"
    },
    {
      "src": "identifier: to [27826,27828]",
      "dest": "identifier: to [38629,38631]"
    },
    {
      "src": "return_type_definition [1471,1488]",
      "dest": "return_type_definition [3442,3459]"
    },
    {
      "src": "(: ( [40310,40311]",
      "dest": "(: ( [47080,47081]"
    },
    {
      "src": "state_mutability [40547,40551]",
      "dest": "state_mutability [47317,47321]"
    },
    {
      "src": "}: } [14213,14214]",
      "dest": "}: } [16077,16078]"
    },
    {
      "src": "event_definition [31114,31198]",
      "dest": "event_definition [19760,19844]"
    },
    {
      "src": "function_body [37383,37582]",
      "dest": "function_body [44097,44234]"
    },
    {
      "src": "=: = [13874,13875]",
      "dest": "=: = [15738,15739]"
    },
    {
      "src": "public: public [41690,41696]",
      "dest": "public: public [48364,48370]"
    },
    {
      "src": "return_type_definition [30955,30972]",
      "dest": "return_type_definition [19601,19618]"
    },
    {
      "src": "state_mutability [18580,18584]",
      "dest": "state_mutability [31792,31796]"
    },
    {
      "src": "event_definition [18991,19063]",
      "dest": "event_definition [30491,30563]"
    },
    {
      "src": "identifier: who [14136,14139]",
      "dest": "identifier: who [16000,16003]"
    },
    {
      "src": "identifier: _tokenHolder [23027,23039]",
      "dest": "identifier: target [27269,27275]"
    },
    {
      "src": "}: } [35135,35136]",
      "dest": "}: } [43191,43192]"
    },
    {
      "src": "identifier: notes [9758,9763]",
      "dest": "identifier: notes [11622,11627]"
    },
    {
      "src": "identifier: nextEpoch [39155,39164]",
      "dest": "identifier: nextEpoch [45925,45934]"
    },
    {
      "src": "parameter [5258,5267]",
      "dest": "parameter [7229,7238]"
    },
    {
      "src": "=: = [33694,33695]",
      "dest": "=: = [39840,39841]"
    },
    {
      "src": "--: -- [13913,13915]",
      "dest": "--: -- [15777,15779]"
    },
    {
      "src": "address: address [35507,35514]",
      "dest": "address: address [41422,41429]"
    },
    {
      "src": "type_name [39248,39255]",
      "dest": "type_name [46018,46025]"
    },
    {
      "src": "identifier: attributes [9285,9295]",
      "dest": "identifier: attributes [11149,11159]"
    },
    {
      "src": ",: , [4652,4653]",
      "dest": ",: , [6623,6624]"
    },
    {
      "src": "block_statement [40110,40154]",
      "dest": "block_statement [46880,46924]"
    },
    {
      "src": ",: , [7952,7953]",
      "dest": ",: , [9862,9863]"
    },
    {
      "src": "]: ] [11686,11687]",
      "dest": "]: ] [13550,13551]"
    },
    {
      "src": "solidity_pragma_token [27517,27532]",
      "dest": "solidity_pragma_token [10136,10151]"
    },
    {
      "src": "expression_statement [36915,36980]",
      "dest": "expression_statement [43731,43791]"
    },
    {
      "src": "identifier: b [990,991]",
      "dest": "identifier: b [2961,2962]"
    },
    {
      "src": "visibility [30106,30114]",
      "dest": "visibility [36064,36072]"
    },
    {
      "src": "if: if [38212,38214]",
      "dest": "if: if [44864,44866]"
    },
    {
      "src": "function_definition [21727,21914]",
      "dest": "function_definition [33720,33936]"
    },
    {
      "src": "uint256: uint256 [1947,1954]",
      "dest": "uint256: uint256 [3918,3925]"
    },
    {
      "src": "state_mutability [39174,39178]",
      "dest": "state_mutability [45944,45948]"
    },
    {
      "src": "view: view [6539,6543]",
      "dest": "view: view [8449,8453]"
    },
    {
      "src": "): ) [10335,10336]",
      "dest": "): ) [12199,12200]"
    },
    {
      "src": "modifier_definition [14620,14714]",
      "dest": "modifier_definition [16484,16578]"
    },
    {
      "src": "return_statement [1123,1132]",
      "dest": "return_statement [3094,3103]"
    },
    {
      "src": "identifier: account [37344,37351]",
      "dest": "identifier: account [44058,44065]"
    },
    {
      "src": "binary_expression [36206,36238]",
      "dest": "binary_expression [43077,43109]"
    },
    {
      "src": "call_expression [37898,37944]",
      "dest": "call_expression [44550,44596]"
    },
    {
      "src": "returns: returns [10351,10358]",
      "dest": "returns: returns [12215,12222]"
    },
    {
      "src": "member_expression [11266,11294]",
      "dest": "member_expression [13130,13158]"
    },
    {
      "src": "return_type_definition [10351,10365]",
      "dest": "return_type_definition [12215,12229]"
    },
    {
      "src": "primitive_type [40908,40915]",
      "dest": "primitive_type [47678,47685]"
    },
    {
      "src": ",: , [30088,30089]",
      "dest": ",: , [36046,36047]"
    },
    {
      "src": "binary_expression [33987,34017]",
      "dest": "binary_expression [40217,40247]"
    },
    {
      "src": "(: ( [38215,38216]",
      "dest": "(: ( [44867,44868]"
    },
    {
      "src": "uint256: uint256 [19048,19055]",
      "dest": "uint256: uint256 [30548,30555]"
    },
    {
      "src": ",: , [13089,13090]",
      "dest": ",: , [14953,14954]"
    },
    {
      "src": "primitive_type [34805,34812]",
      "dest": "primitive_type [42213,42220]"
    },
    {
      "src": "member_expression [37133,37143]",
      "dest": "member_expression [43847,43857]"
    },
    {
      "src": "primitive_type [10672,10679]",
      "dest": "primitive_type [12536,12543]"
    },
    {
      "src": "): ) [36903,36904]",
      "dest": "): ) [43671,43672]"
    },
    {
      "src": "comment: /**  * All storage must be declared here  * New storage must be appended to the end  * Never remove items from this list  */ [15546,15674]",
      "dest": "comment: /**  * All storage must be declared here  * New storage must be appended to the end  * Never remove items from this list  */ [17357,17485]"
    },
    {
      "src": "identifier: EPOCH_DURATION [40345,40359]",
      "dest": "identifier: EPOCH_DURATION [47115,47129]"
    },
    {
      "src": "call_expression [37921,37943]",
      "dest": "call_expression [44573,44595]"
    },
    {
      "src": "identifier: b [2715,2716]",
      "dest": "identifier: b [4686,4687]"
    },
    {
      "src": "event_paramater [31172,31196]",
      "dest": "event_paramater [19818,19842]"
    },
    {
      "src": "=>: => [15829,15831]",
      "dest": "=>: => [17640,17642]"
    },
    {
      "src": "array_access [13826,13849]",
      "dest": "array_access [15690,15713]"
    },
    {
      "src": "=: = [38732,38733]",
      "dest": "=: = [45384,45385]"
    },
    {
      "src": "uint256: uint256 [3283,3290]",
      "dest": "uint256: uint256 [5254,5261]"
    },
    {
      "src": "{: { [31578,31579]",
      "dest": "{: { [20224,20225]"
    },
    {
      "src": "solidity_pragma_token [27333,27348]",
      "dest": "solidity_pragma_token [38683,38698]"
    },
    {
      "src": "pure: pure [18287,18291]",
      "dest": "pure: pure [49137,49141]"
    },
    {
      "src": "type_name [33896,33903]",
      "dest": "type_name [40042,40049]"
    },
    {
      "src": "identifier: OwnershipTransferred [32331,32351]",
      "dest": "identifier: OwnershipTransferred [20977,20997]"
    },
    {
      "src": "): ) [37943,37944]",
      "dest": "): ) [44595,44596]"
    },
    {
      "src": "primitive_type [12925,12932]",
      "dest": "primitive_type [14789,14796]"
    },
    {
      "src": "call_argument [30531,30534]",
      "dest": "call_argument [24389,24393]"
    },
    {
      "src": "comment: // number of epochs [33794,33813]",
      "dest": "comment: // number of epochs [39940,39959]"
    },
    {
      "src": "identifier: _who [12193,12197]",
      "dest": "identifier: _who [14057,14061]"
    },
    {
      "src": "identifier: _who [13515,13519]",
      "dest": "identifier: _who [15379,15383]"
    },
    {
      "src": "comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP.  */ [5506,5578]",
      "dest": "comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP.  */ [7416,7488]"
    },
    {
      "src": "\": \" [34980,34981]",
      "dest": "\": \" [43056,43057]"
    },
    {
      "src": "type_name [36765,36772]",
      "dest": "type_name [43533,43540]"
    },
    {
      "src": "state_mutability [1933,1937]",
      "dest": "state_mutability [3904,3908]"
    },
    {
      "src": "call_argument [35725,35730]",
      "dest": "call_argument [41867,41872]"
    },
    {
      "src": "identifier: onlyPendingOwner [15310,15326]",
      "dest": "identifier: onlyPendingOwner [17174,17190]"
    },
    {
      "src": "comment: /**      * @dev Returns the amount of tokens owned by `account`.      */ [5741,5815]",
      "dest": "comment: /**      * @dev Returns the amount of tokens owned by `account`.      */ [7651,7725]"
    },
    {
      "src": "return_type_definition [40899,40916]",
      "dest": "return_type_definition [47669,47686]"
    },
    {
      "src": "(: ( [40674,40675]",
      "dest": "(: ( [47444,47445]"
    },
    {
      "src": "parameter [21808,21812]",
      "dest": "parameter [33808,33812]"
    },
    {
      "src": "call_expression [37519,37574]",
      "dest": "call_expression [44169,44226]"
    },
    {
      "src": "parameter [30964,30971]",
      "dest": "parameter [19610,19617]"
    },
    {
      "src": "visibility [29707,29715]",
      "dest": "visibility [36772,36780]"
    },
    {
      "src": "primitive_type [10595,10602]",
      "dest": "primitive_type [12459,12466]"
    },
    {
      "src": "parameter [30090,30104]",
      "dest": "parameter [36048,36062]"
    },
    {
      "src": "type_name [13792,13807]",
      "dest": "type_name [15656,15671]"
    },
    {
      "src": "identifier: TOTAL_EPOCHS [38909,38921]",
      "dest": "identifier: TOTAL_EPOCHS [45561,45573]"
    },
    {
      "src": "primitive_type [8384,8391]",
      "dest": "primitive_type [10248,10255]"
    },
    {
      "src": "state_mutability [1466,1470]",
      "dest": "state_mutability [3437,3441]"
    },
    {
      "src": "\": \" [1517,1518]",
      "dest": "\": \" [3488,3489]"
    },
    {
      "src": "function_body [42347,42374]",
      "dest": "function_body [48987,49014]"
    },
    {
      "src": "memory: memory [3929,3935]",
      "dest": "memory: memory [5900,5906]"
    },
    {
      "src": "(: ( [40907,40908]",
      "dest": "(: ( [47677,47678]"
    },
    {
      "src": "type_name [26137,26144]",
      "dest": "type_name [23086,23093]"
    },
    {
      "src": "identifier: reclaimToken [14362,14374]",
      "dest": "identifier: reclaimToken [16226,16238]"
    },
    {
      "src": "address: address [5840,5847]",
      "dest": "address: address [7750,7757]"
    },
    {
      "src": "identifier: _attribute [13362,13372]",
      "dest": "identifier: _attribute [15226,15236]"
    },
    {
      "src": "struct_member [8532,8546]",
      "dest": "struct_member [10396,10410]"
    },
    {
      "src": "call_argument [29812,29822]",
      "dest": "call_argument [37113,37123]"
    },
    {
      "src": ",: , [28403,28404]",
      "dest": ",: , [37782,37783]"
    },
    {
      "src": "call_argument [40717,40729]",
      "dest": "call_argument [47487,47499]"
    },
    {
      "src": "number_literal: 0 [5364,5365]",
      "dest": "number_literal: 0 [7335,7336]"
    },
    {
      "src": "(: ( [1946,1947]",
      "dest": "(: ( [3917,3918]"
    },
    {
      "src": "identifier: passed [40001,40007]",
      "dest": "identifier: passed [46771,46777]"
    },
    {
      "src": "call_expression [20909,20954]",
      "dest": "call_expression [34549,34676]"
    },
    {
      "src": ".: . [36861,36862]",
      "dest": ".: . [43629,43630]"
    },
    {
      "src": "type_name [35531,35538]",
      "dest": "type_name [41446,41453]"
    },
    {
      "src": "]: ] [12301,12302]",
      "dest": "]: ] [14165,14166]"
    },
    {
      "src": "if: if [2611,2613]",
      "dest": "if: if [4582,4584]"
    },
    {
      "src": "identifier: _from [34813,34818]",
      "dest": "identifier: _from [42221,42226]"
    },
    {
      "src": "}: } [42283,42284]",
      "dest": "}: } [48823,48824]"
    },
    {
      "src": "returns: returns [13386,13393]",
      "dest": "returns: returns [15250,15257]"
    },
    {
      "src": "comment: /**      * @dev Get unlocked balance for an account      * @param account Account to check      * @return Amount that is unlocked and available eg. to transfer      */ [37590,37761]",
      "dest": "comment: /**      * @dev Get unlocked balance for an account      * @param account Account to check      * @return Amount that is unlocked and available eg. to transfer      */ [44242,44413]"
    },
    {
      "src": "expression_statement [20909,20955]",
      "dest": "expression_statement [34549,34677]"
    },
    {
      "src": "uint256: uint256 [15781,15788]",
      "dest": "uint256: uint256 [17592,17599]"
    },
    {
      "src": "return_type_definition [42593,42616]",
      "dest": "return_type_definition [30914,30937]"
    },
    {
      "src": "string_literal [19257,19275]",
      "dest": "string_literal [35408,35445]"
    },
    {
      "src": "type_name [9991,9998]",
      "dest": "type_name [11855,11862]"
    },
    {
      "src": "primitive_type [15957,15964]",
      "dest": "primitive_type [17768,17775]"
    },
    {
      "src": "{: { [28852,28853]",
      "dest": "{: { [32447,32448]"
    },
    {
      "src": "}: } [31105,31106]",
      "dest": "}: } [19751,19752]"
    },
    {
      "src": "): ) [40885,40886]",
      "dest": "): ) [47655,47656]"
    },
    {
      "src": "): ) [23892,23893]",
      "dest": "): ) [35363,35364]"
    },
    {
      "src": "call_argument [11140,11146]",
      "dest": "call_argument [13004,13010]"
    },
    {
      "src": "uint256: uint256 [14432,14439]",
      "dest": "uint256: uint256 [16296,16303]"
    },
    {
      "src": "state_mutability [30950,30954]",
      "dest": "state_mutability [19596,19600]"
    },
    {
      "src": "primitive_type [6553,6560]",
      "dest": "primitive_type [8463,8470]"
    },
    {
      "src": "string [23622,23642]",
      "dest": "string [36831,36866]"
    },
    {
      "src": "(: ( [32041,32042]",
      "dest": "(: ( [20687,20688]"
    },
    {
      "src": "identifier: newTimeLockRegistry [34378,34397]",
      "dest": "identifier: newTimeLockRegistry [40608,40627]"
    },
    {
      "src": "\": \" [42535,42536]",
      "dest": "\": \" [49293,49294]"
    },
    {
      "src": "external: external [29000,29008]",
      "dest": "external: external [48869,48877]"
    },
    {
      "src": ".: . [11035,11036]",
      "dest": ".: . [12899,12900]"
    },
    {
      "src": "public: public [31037,31043]",
      "dest": "public: public [19683,19689]"
    },
    {
      "src": "identifier: confirmWrite [10288,10300]",
      "dest": "identifier: confirmWrite [12152,12164]"
    },
    {
      "src": "binary_expression [34931,34957]",
      "dest": "binary_expression [43007,43033]"
    },
    {
      "src": "parameter [3911,3920]",
      "dest": "parameter [5882,5891]"
    },
    {
      "src": "number_literal: 0 [2645,2646]",
      "dest": "number_literal: 0 [4616,4617]"
    },
    {
      "src": "): ) [5306,5307]",
      "dest": "): ) [7277,7278]"
    },
    {
      "src": "constant: constant [41466,41474]",
      "dest": "constant: constant [48158,48166]"
    },
    {
      "src": "{: { [12374,12375]",
      "dest": "{: { [14238,14239]"
    },
    {
      "src": "identifier: _approveAllArgs [20909,20924]",
      "dest": "identifier: _approve [34549,34557]"
    },
    {
      "src": "uint256: uint256 [37374,37381]",
      "dest": "uint256: uint256 [45680,45687]"
    },
    {
      "src": "(: ( [31807,31808]",
      "dest": "(: ( [20453,20454]"
    },
    {
      "src": "identifier: _who [12667,12671]",
      "dest": "identifier: _who [14531,14535]"
    },
    {
      "src": "function: function [14353,14361]",
      "dest": "function: function [16217,16225]"
    },
    {
      "src": "mapping: mapping [15813,15820]",
      "dest": "mapping: mapping [17624,17631]"
    },
    {
      "src": "address: address [24081,24088]",
      "dest": "address: address [33039,33046]"
    },
    {
      "src": "type_name [38363,38370]",
      "dest": "type_name [45015,45022]"
    },
    {
      "src": "\": \" [3354,3355]",
      "dest": "\": \" [5325,5326]"
    },
    {
      "src": "[: [ [11859,11860]",
      "dest": "[: [ [13723,13724]"
    },
    {
      "src": "call_argument [12044,12054]",
      "dest": "call_argument [13908,13918]"
    },
    {
      "src": "\": \" [19274,19275]",
      "dest": "\": \" [35444,35445]"
    },
    {
      "src": "identifier: who [9711,9714]",
      "dest": "identifier: who [11575,11578]"
    },
    {
      "src": "call_argument [14141,14151]",
      "dest": "call_argument [16005,16015]"
    },
    {
      "src": "member_expression [13589,13627]",
      "dest": "member_expression [15453,15491]"
    },
    {
      "src": "uint256: uint256 [7680,7687]",
      "dest": "uint256: uint256 [9590,9597]"
    },
    {
      "src": "indexed: indexed [20113,20120]",
      "dest": "indexed: indexed [30751,30758]"
    },
    {
      "src": "returns: returns [5322,5329]",
      "dest": "returns: returns [7293,7300]"
    },
    {
      "src": "call_expression [12110,12164]",
      "dest": "call_expression [13974,14028]"
    },
    {
      "src": "(: ( [10719,10720]",
      "dest": "(: ( [12583,12584]"
    },
    {
      "src": "function_body [11255,11365]",
      "dest": "function_body [13119,13229]"
    },
    {
      "src": "{: { [15327,15328]",
      "dest": "{: { [17191,17192]"
    },
    {
      "src": "\": \" [12220,12221]",
      "dest": "\": \" [14084,14085]"
    },
    {
      "src": "parameter [1947,1954]",
      "dest": "parameter [3918,3925]"
    },
    {
      "src": "return_type_definition [6544,6561]",
      "dest": "return_type_definition [8454,8471]"
    },
    {
      "src": "=: = [31384,31385]",
      "dest": "=: = [20030,20031]"
    },
    {
      "src": "function_definition [30926,31005]",
      "dest": "function_definition [19572,19651]"
    },
    {
      "src": "): ) [42317,42318]",
      "dest": "): ) [48948,48949]"
    },
    {
      "src": "type_name [9695,9702]",
      "dest": "type_name [11559,11566]"
    },
    {
      "src": "address: address [7912,7919]",
      "dest": "address: address [9822,9829]"
    },
    {
      "src": "identifier: _subtractedValue [22992,23008]",
      "dest": "identifier: addedValue [33772,33782]"
    },
    {
      "src": ",: , [20858,20859]",
      "dest": ",: , [34481,34482]"
    },
    {
      "src": "identifier: _attribute [12291,12301]",
      "dest": "identifier: _attribute [14155,14165]"
    },
    {
      "src": "return: return [38261,38267]",
      "dest": "return: return [44913,44919]"
    },
    {
      "src": ",: , [20933,20934]",
      "dest": ",: , [34570,34571]"
    },
    {
      "src": "string [1517,1549]",
      "dest": "string [3488,3520]"
    },
    {
      "src": "): ) [11618,11619]",
      "dest": "): ) [13482,13483]"
    },
    {
      "src": "primitive_type [15770,15777]",
      "dest": "primitive_type [17581,17588]"
    },
    {
      "src": "primitive_type [8556,8563]",
      "dest": "primitive_type [10420,10427]"
    },
    {
      "src": "identifier: owner [10395,10400]",
      "dest": "identifier: owner [12259,12264]"
    },
    {
      "src": "returns: returns [42331,42338]",
      "dest": "returns: returns [48971,48978]"
    },
    {
      "src": "primitive_type [19006,19013]",
      "dest": "primitive_type [30506,30513]"
    },
    {
      "src": "type_name [27830,27834]",
      "dest": "type_name [40132,40136]"
    },
    {
      "src": "identifier: OwnershipTransferred [31412,31432]",
      "dest": "identifier: OwnershipTransferred [20058,20078]"
    },
    {
      "src": "call_argument [35639,35665]",
      "dest": "call_argument [41527,41553]"
    },
    {
      "src": "(: ( [970,971]",
      "dest": "(: ( [2941,2942]"
    },
    {
      "src": "): ) [11071,11072]",
      "dest": "): ) [12935,12936]"
    },
    {
      "src": "uint256: uint256 [5258,5265]",
      "dest": "uint256: uint256 [7229,7236]"
    },
    {
      "src": "address: address [19006,19013]",
      "dest": "address: address [30506,30513]"
    },
    {
      "src": "call_argument [35821,35826]",
      "dest": "call_argument [41950,41955]"
    },
    {
      "src": "comment: // how long does an epoch last [33710,33740]",
      "dest": "comment: // how long does an epoch last [39856,39886]"
    },
    {
      "src": "type_name [4688,4695]",
      "dest": "type_name [6659,6666]"
    },
    {
      "src": "parameter [42602,42615]",
      "dest": "parameter [30923,30936]"
    },
    {
      "src": "user_defined_type [33303,33319]",
      "dest": "user_defined_type [39460,39465]"
    },
    {
      "src": "primitive_type [23019,23026]",
      "dest": "primitive_type [27261,27268]"
    },
    {
      "src": ".: . [13287,13288]",
      "dest": ".: . [15151,15152]"
    },
    {
      "src": "identifier: _value [30537,30543]",
      "dest": "identifier: _value [41736,41742]"
    },
    {
      "src": "member_expression [14450,14465]",
      "dest": "member_expression [16314,16329]"
    },
    {
      "src": "function_definition [1422,1558]",
      "dest": "function_definition [3393,3529]"
    },
    {
      "src": "]: ] [14167,14168]",
      "dest": "]: ] [16031,16032]"
    },
    {
      "src": "type_name [13232,13239]",
      "dest": "type_name [15096,15103]"
    },
    {
      "src": "function: function [35467,35475]",
      "dest": "function: function [41393,41401]"
    },
    {
      "src": "call_expression [37116,37162]",
      "dest": "call_expression [43837,43876]"
    },
    {
      "src": "): ) [39165,39166]",
      "dest": "): ) [45935,45936]"
    },
    {
      "src": "array_access [13589,13605]",
      "dest": "array_access [15453,15469]"
    },
    {
      "src": "type_name [39188,39195]",
      "dest": "type_name [45958,45965]"
    },
    {
      "src": "override: override [41883,41891]",
      "dest": "override: override [48957,48965]"
    },
    {
      "src": "comment: // otherwise return latest epoch + epoch duration [39649,39698]",
      "dest": "comment: // otherwise return latest epoch + epoch duration [46419,46468]"
    },
    {
      "src": "identifier: attributes [13422,13432]",
      "dest": "identifier: attributes [15286,15296]"
    },
    {
      "src": "identifier: _attribute [11676,11686]",
      "dest": "identifier: _attribute [13540,13550]"
    },
    {
      "src": "call_argument [12199,12209]",
      "dest": "call_argument [14063,14073]"
    },
    {
      "src": "identifier: who [14072,14075]",
      "dest": "identifier: who [15936,15939]"
    },
    {
      "src": "(: ( [14135,14136]",
      "dest": "(: ( [15999,16000]"
    },
    {
      "src": "expression_statement [15149,15173]",
      "dest": "expression_statement [17013,17037]"
    },
    {
      "src": ".: . [12684,12685]",
      "dest": ".: . [14548,14549]"
    },
    {
      "src": "=: = [14013,14014]",
      "dest": "=: = [15877,15878]"
    },
    {
      "src": "external: external [13772,13780]",
      "dest": "external: external [15636,15644]"
    },
    {
      "src": "identifier: _attribute [11402,11412]",
      "dest": "identifier: _attribute [13266,13276]"
    },
    {
      "src": "member_expression [14315,14336]",
      "dest": "member_expression [16179,16200]"
    },
    {
      "src": "visibility [29218,29226]",
      "dest": "visibility [24353,24361]"
    },
    {
      "src": "uint256: uint256 [8508,8515]",
      "dest": "uint256: uint256 [10372,10379]"
    },
    {
      "src": "visibility [33904,33910]",
      "dest": "visibility [40050,40056]"
    },
    {
      "src": "(: ( [1015,1016]",
      "dest": "(: ( [2986,2987]"
    },
    {
      "src": "identifier: oldManager [9831,9841]",
      "dest": "identifier: oldManager [11695,11705]"
    },
    {
      "src": "call_expression [11088,11147]",
      "dest": "call_expression [12952,13011]"
    },
    {
      "src": "visibility [3294,3302]",
      "dest": "visibility [5265,5273]"
    },
    {
      "src": "internal: internal [18278,18286]",
      "dest": "internal: internal [26504,26512]"
    },
    {
      "src": ",: , [10902,10903]",
      "dest": ",: , [12766,12767]"
    },
    {
      "src": "string_literal [4725,4751]",
      "dest": "string_literal [6696,6722]"
    },
    {
      "src": "=: = [32432,32433]",
      "dest": "=: = [21078,21079]"
    },
    {
      "src": "primitive_type [33568,33575]",
      "dest": "primitive_type [39714,39721]"
    },
    {
      "src": "boolean_literal [22893,22897]",
      "dest": "boolean_literal [33299,33303]"
    },
    {
      "src": "parameter [18510,18519]",
      "dest": "parameter [27296,27312]"
    },
    {
      "src": "identifier: account [37800,37807]",
      "dest": "identifier: account [44452,44459]"
    },
    {
      "src": "binary_expression [31597,31617]",
      "dest": "binary_expression [20243,20263]"
    },
    {
      "src": "uint256: uint256 [36097,36104]",
      "dest": "uint256: uint256 [42954,42961]"
    },
    {
      "src": "call_argument [21850,21858]",
      "dest": "call_argument [33848,33855]"
    },
    {
      "src": "returns: returns [3964,3971]",
      "dest": "returns: returns [5935,5942]"
    },
    {
      "src": "is: is [41374,41376]",
      "dest": "is: is [48089,48091]"
    },
    {
      "src": "comment: // a validator can set an account's \"hasPassedKYC/AML\" attribute to 1 to indicate [8909,8990]",
      "dest": "comment: // a validator can set an account's \"hasPassedKYC/AML\" attribute to 1 to indicate [10773,10854]"
    },
    {
      "src": "internal: internal [10337,10345]",
      "dest": "internal: internal [12201,12209]"
    },
    {
      "src": ",: , [13101,13102]",
      "dest": ",: , [14965,14966]"
    },
    {
      "src": "identifier: owner [14674,14679]",
      "dest": "identifier: owner [16538,16543]"
    },
    {
      "src": "): ) [13209,13210]",
      "dest": "): ) [15073,15074]"
    },
    {
      "src": "function: function [42058,42066]",
      "dest": "function: function [48598,48606]"
    },
    {
      "src": "binary_expression [1975,1981]",
      "dest": "binary_expression [3946,3952]"
    },
    {
      "src": "identifier: onlyTimeLockRegistry [36808,36828]",
      "dest": "identifier: onlyTimeLockRegistry [43576,43596]"
    },
    {
      "src": "pragma: pragma [24256,24262]",
      "dest": "pragma: pragma [47730,47736]"
    },
    {
      "src": "type_name [12969,12976]",
      "dest": "type_name [14833,14840]"
    },
    {
      "src": ",: , [20126,20127]",
      "dest": ",: , [30764,30765]"
    },
    {
      "src": "call_expression [36915,36979]",
      "dest": "call_expression [43756,43790]"
    },
    {
      "src": "-: - [2021,2022]",
      "dest": "-: - [3992,3993]"
    },
    {
      "src": "variable_declaration_statement [13946,13984]",
      "dest": "variable_declaration_statement [15810,15848]"
    },
    {
      "src": "type_name [22794,22798]",
      "dest": "type_name [33098,33102]"
    },
    {
      "src": "==: == [14881,14883]",
      "dest": "==: == [16745,16747]"
    },
    {
      "src": "(: ( [35638,35639]",
      "dest": "(: ( [41526,41527]"
    },
    {
      "src": "pure: pure [1466,1470]",
      "dest": "pure: pure [3437,3441]"
    },
    {
      "src": "returns: returns [42593,42600]",
      "dest": "returns: returns [30914,30921]"
    },
    {
      "src": "variable_declaration [38363,38381]",
      "dest": "variable_declaration [45015,45033]"
    },
    {
      "src": "identifier: _value [29699,29705]",
      "dest": "identifier: amount [36764,36770]"
    },
    {
      "src": "emit_statement [32326,32375]",
      "dest": "emit_statement [20972,21021]"
    },
    {
      "src": "(: ( [7247,7248]",
      "dest": "(: ( [9157,9158]"
    },
    {
      "src": "\": \" [30450,30451]",
      "dest": "\": \" [35608,35609]"
    },
    {
      "src": "(: ( [37560,37561]",
      "dest": "(: ( [44212,44213]"
    },
    {
      "src": "primitive_type [8660,8667]",
      "dest": "primitive_type [10524,10531]"
    },
    {
      "src": "identifier: notes [8540,8545]",
      "dest": "identifier: notes [10404,10409]"
    },
    {
      "src": "primitive_type [18530,18536]",
      "dest": "primitive_type [25909,25915]"
    },
    {
      "src": "type_name [12821,12828]",
      "dest": "type_name [14685,14692]"
    },
    {
      "src": "return_type_definition [39179,39196]",
      "dest": "return_type_definition [45949,45966]"
    },
    {
      "src": "): ) [12372,12373]",
      "dest": "): ) [14236,14237]"
    },
    {
      "src": "mapping: mapping [9231,9238]",
      "dest": "mapping: mapping [11095,11102]"
    },
    {
      "src": "parameter [10321,10335]",
      "dest": "parameter [12185,12199]"
    },
    {
      "src": "): ) [31787,31788]",
      "dest": "): ) [20433,20434]"
    },
    {
      "src": "(: ( [10885,10886]",
      "dest": "(: ( [12749,12750]"
    },
    {
      "src": "\": \" [31619,31620]",
      "dest": "\": \" [20265,20266]"
    },
    {
      "src": "): ) [7303,7304]",
      "dest": "): ) [9213,9214]"
    },
    {
      "src": "primitive_type [4032,4039]",
      "dest": "primitive_type [6003,6010]"
    },
    {
      "src": "return: return [42628,42634]",
      "dest": "return: return [49177,49183]"
    },
    {
      "src": "{: { [12993,12994]",
      "dest": "{: { [14857,14858]"
    },
    {
      "src": "[: [ [37050,37051]",
      "dest": "[: [ [43743,43744]"
    },
    {
      "src": "(: ( [38771,38772]",
      "dest": "(: ( [45423,45424]"
    },
    {
      "src": "identifier: initialized [8726,8737]",
      "dest": "identifier: initialized [10590,10601]"
    },
    {
      "src": "(: ( [6552,6553]",
      "dest": "(: ( [8462,8463]"
    },
    {
      "src": "identifier: LOCK_START [40935,40945]",
      "dest": "identifier: LOCK_START [47705,47715]"
    },
    {
      "src": "constant: constant [33667,33675]",
      "dest": "constant: constant [39813,39821]"
    },
    {
      "src": "identifier: c [2015,2016]",
      "dest": "identifier: c [3986,3987]"
    },
    {
      "src": "type_name [21966,21973]",
      "dest": "type_name [26936,26943]"
    },
    {
      "src": "identifier: length [11501,11507]",
      "dest": "identifier: length [13365,13371]"
    },
    {
      "src": "(: ( [9257,9258]",
      "dest": "(: ( [11121,11122]"
    },
    {
      "src": "event_paramater [9991,10016]",
      "dest": "event_paramater [11855,11880]"
    },
    {
      "src": "comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [2791,3253]",
      "dest": "comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [4762,5224]"
    },
    {
      "src": "): ) [38766,38767]",
      "dest": "): ) [45418,45419]"
    },
    {
      "src": "modifier: modifier [14620,14628]",
      "dest": "modifier: modifier [16484,16492]"
    },
    {
      "src": "return_statement [38572,38581]",
      "dest": "return_statement [45224,45233]"
    },
    {
      "src": "identifier: _transferFromAllArgs [35800,35820]",
      "dest": "identifier: _transfer [41940,41949]"
    },
    {
      "src": "): ) [6560,6561]",
      "dest": "): ) [8470,8471]"
    },
    {
      "src": "\": \" [28423,28424]",
      "dest": "\": \" [37819,37820]"
    },
    {
      "src": "primitive_type [1016,1023]",
      "dest": "primitive_type [2987,2994]"
    },
    {
      "src": "): ) [7967,7968]",
      "dest": "): ) [9877,9878]"
    },
    {
      "src": "pure: pure [42326,42330]",
      "dest": "pure: pure [48966,48970]"
    },
    {
      "src": "): ) [12447,12448]",
      "dest": "): ) [14311,14312]"
    },
    {
      "src": "type_name [13946,13959]",
      "dest": "type_name [15810,15823]"
    },
    {
      "src": "parameter [36082,36095]",
      "dest": "parameter [42939,42952]"
    },
    {
      "src": "identifier: length [14026,14032]",
      "dest": "identifier: length [15890,15896]"
    },
    {
      "src": "state_variable_declaration [15705,15721]",
      "dest": "state_variable_declaration [17516,17532]"
    },
    {
      "src": "parameter [2336,2345]",
      "dest": "parameter [4307,4316]"
    },
    {
      "src": "parameter [39933,39940]",
      "dest": "parameter [46703,46710]"
    },
    {
      "src": "address: address [33896,33903]",
      "dest": "address: address [40042,40049]"
    },
    {
      "src": "identifier: msg [31445,31448]",
      "dest": "identifier: msg [20091,20094]"
    },
    {
      "src": "identifier: _spender [21974,21982]",
      "dest": "identifier: target [26944,26950]"
    },
    {
      "src": "): ) [5379,5380]",
      "dest": "): ) [7350,7351]"
    },
    {
      "src": "type_name [24081,24088]",
      "dest": "type_name [33039,33046]"
    },
    {
      "src": "primitive_type [14315,14322]",
      "dest": "primitive_type [16179,16186]"
    },
    {
      "src": "): ) [39624,39625]",
      "dest": "): ) [46394,46395]"
    },
    {
      "src": "type_name [3283,3290]",
      "dest": "type_name [5254,5261]"
    },
    {
      "src": ",: , [10743,10744]",
      "dest": ",: , [12607,12608]"
    },
    {
      "src": "binary_expression [10385,10400]",
      "dest": "binary_expression [12249,12264]"
    },
    {
      "src": "view: view [13381,13385]",
      "dest": "view: view [15245,15249]"
    },
    {
      "src": "string_literal [3354,3382]",
      "dest": "string_literal [5325,5353]"
    },
    {
      "src": ",: , [8373,8374]",
      "dest": ",: , [10237,10238]"
    },
    {
      "src": ".: . [30416,30417]",
      "dest": ".: . [36257,36258]"
    },
    {
      "src": "comment: // so that e.g. the check can be renewed at appropriate intervals. [9159,9225]",
      "dest": "comment: // so that e.g. the check can be renewed at appropriate intervals. [11023,11089]"
    },
    {
      "src": "}: } [31855,31856]",
      "dest": "}: } [20501,20502]"
    },
    {
      "src": "binary_expression [2706,2711]",
      "dest": "binary_expression [4677,4682]"
    },
    {
      "src": "type_name [5331,5338]",
      "dest": "type_name [7302,7309]"
    },
    {
      "src": "primitive_type [42085,42092]",
      "dest": "primitive_type [48625,48632]"
    },
    {
      "src": "(: ( [35708,35709]",
      "dest": "(: ( [41850,41851]"
    },
    {
      "src": "visibility [37809,37815]",
      "dest": "visibility [44461,44467]"
    },
    {
      "src": "call_argument [31597,31617]",
      "dest": "call_argument [20243,20263]"
    },
    {
      "src": "identifier: targets [13969,13976]",
      "dest": "identifier: targets [15833,15840]"
    },
    {
      "src": "type_name [30217,30224]",
      "dest": "type_name [27532,27537]"
    },
    {
      "src": "number_unit [33699,33703]",
      "dest": "number_unit [39845,39849]"
    },
    {
      "src": "parameter [24058,24070]",
      "dest": "parameter [32384,32399]"
    },
    {
      "src": "pragma_directive [5479,5502]",
      "dest": "pragma_directive [2062,2085]"
    },
    {
      "src": "return_statement [29087,29099]",
      "dest": "return_statement [32201,32213]"
    },
    {
      "src": "(: ( [7298,7299]",
      "dest": "(: ( [9208,9209]"
    },
    {
      "src": "): ) [30007,30008]",
      "dest": "): ) [37078,37079]"
    },
    {
      "src": "identifier: _transferAllArgs [34778,34794]",
      "dest": "identifier: transferToOwner [42197,42212]"
    },
    {
      "src": "type_name [12577,12584]",
      "dest": "type_name [14441,14448]"
    },
    {
      "src": "identifier: _value [10904,10910]",
      "dest": "identifier: _value [12768,12774]"
    },
    {
      "src": "identifier: sender [31390,31396]",
      "dest": "identifier: sender [20036,20042]"
    },
    {
      "src": "call_argument [34019,34042]",
      "dest": "call_argument [40249,40272]"
    },
    {
      "src": "contract_body [8469,15462]",
      "dest": "contract_body [10333,17326]"
    },
    {
      "src": "(: ( [15820,15821]",
      "dest": "(: ( [17631,17632]"
    },
    {
      "src": "primitive_type [30523,30530]",
      "dest": "primitive_type [24381,24388]"
    },
    {
      "src": "state_variable_declaration [15884,15923]",
      "dest": "state_variable_declaration [17695,17734]"
    },
    {
      "src": "=: = [37467,37468]",
      "dest": "=: = [42281,42282]"
    },
    {
      "src": "-: - [11695,11696]",
      "dest": "-: - [13559,13560]"
    },
    {
      "src": "identifier: timeLockRegistry [34461,34477]",
      "dest": "identifier: timeLockRegistry [40691,40707]"
    },
    {
      "src": "pure: pure [40547,40551]",
      "dest": "pure: pure [47317,47321]"
    },
    {
      "src": "call_argument [12031,12067]",
      "dest": "call_argument [13895,13931]"
    },
    {
      "src": "identifier: mul [37541,37544]",
      "dest": "identifier: mul [44191,44194]"
    },
    {
      "src": "identifier: passed [39534,39540]",
      "dest": "identifier: passed [46304,46310]"
    },
    {
      "src": "type_name [10672,10679]",
      "dest": "type_name [12536,12543]"
    },
    {
      "src": "type_name [15813,15860]",
      "dest": "type_name [17624,17671]"
    },
    {
      "src": "call_expression [23584,23643]",
      "dest": "call_expression [36800,36867]"
    },
    {
      "src": "(: ( [13907,13908]",
      "dest": "(: ( [15771,15772]"
    },
    {
      "src": "}: } [20983,20984]",
      "dest": "}: } [34705,34706]"
    },
    {
      "src": "(: ( [14848,14849]",
      "dest": "(: ( [16712,16713]"
    },
    {
      "src": "): ) [29075,29076]",
      "dest": "): ) [48913,48914]"
    },
    {
      "src": "identifier: RegistryClone [9549,9562]",
      "dest": "identifier: RegistryClone [11413,11426]"
    },
    {
      "src": "return: return [2638,2644]",
      "dest": "return: return [4609,4615]"
    },
    {
      "src": "call_argument [1080,1109]",
      "dest": "call_argument [3051,3080]"
    },
    {
      "src": "internal: internal [3950,3958]",
      "dest": "internal: internal [5921,5929]"
    },
    {
      "src": "): ) [12163,12164]",
      "dest": "): ) [14027,14028]"
    },
    {
      "src": ",: , [6511,6512]",
      "dest": ",: , [8421,8422]"
    },
    {
      "src": ".: . [38767,38768]",
      "dest": ".: . [45419,45420]"
    },
    {
      "src": "uint256: uint256 [10647,10654]",
      "dest": "uint256: uint256 [12511,12518]"
    },
    {
      "src": "true [22893,22897]",
      "dest": "true [33299,33303]"
    },
    {
      "src": "identifier: _attribute [11489,11499]",
      "dest": "identifier: _attribute [13353,13363]"
    },
    {
      "src": "function_definition [20825,20984]",
      "dest": "function_definition [34439,34706]"
    },
    {
      "src": "comment: // epochs don't count over TOTAL_EPOCHS [38800,38839]",
      "dest": "comment: // epochs don't count over TOTAL_EPOCHS [45452,45491]"
    },
    {
      "src": "identifier: targets [13876,13883]",
      "dest": "identifier: targets [15740,15747]"
    },
    {
      "src": "parameter [28984,28998]",
      "dest": "parameter [48853,48867]"
    },
    {
      "src": "type_name [7714,7718]",
      "dest": "type_name [9624,9628]"
    },
    {
      "src": "=: = [33778,33779]",
      "dest": "=: = [39924,39925]"
    },
    {
      "src": "\": \" [3381,3382]",
      "dest": "\": \" [5352,5353]"
    },
    {
      "src": "identifier: _who [13433,13437]",
      "dest": "identifier: _who [15297,15301]"
    },
    {
      "src": "visibility [42402,42408]",
      "dest": "visibility [49042,49048]"
    },
    {
      "src": "view: view [12618,12622]",
      "dest": "view: view [14482,14486]"
    },
    {
      "src": "member_expression [14302,14314]",
      "dest": "member_expression [16166,16178]"
    },
    {
      "src": "string [19257,19275]",
      "dest": "string [35408,35445]"
    },
    {
      "src": "identifier: add [40330,40333]",
      "dest": "identifier: add [47100,47103]"
    },
    {
      "src": "identifier: onlyPendingOwner [32250,32266]",
      "dest": "identifier: onlyPendingOwner [20896,20912]"
    },
    {
      "src": "return: return [30984,30990]",
      "dest": "return: return [19630,19636]"
    },
    {
      "src": "{: { [13241,13242]",
      "dest": "{: { [15105,15106]"
    },
    {
      "src": "{: { [34912,34913]",
      "dest": "{: { [42988,42989]"
    },
    {
      "src": "identifier: _value [8421,8427]",
      "dest": "identifier: _value [10285,10291]"
    },
    {
      "src": "identifier: approve [20834,20841]",
      "dest": "identifier: decreaseAllowance [34448,34465]"
    },
    {
      "src": ",: , [28889,28890]",
      "dest": ",: , [32479,32480]"
    },
    {
      "src": "type_name [4654,4661]",
      "dest": "type_name [6625,6632]"
    },
    {
      "src": "modifier: modifier [31557,31565]",
      "dest": "modifier: modifier [20203,20211]"
    },
    {
      "src": "call_argument [23868,23892]",
      "dest": "call_argument [35324,35363]"
    },
    {
      "src": "primitive_type [9750,9757]",
      "dest": "primitive_type [11614,11621]"
    },
    {
      "src": "comment: // example) as well as which validator last set the value and at what time, [9078,9153]",
      "dest": "comment: // example) as well as which validator last set the value and at what time, [10942,11017]"
    },
    {
      "src": "function_definition [12555,12703]",
      "dest": "function_definition [14419,14567]"
    },
    {
      "src": "): ) [28914,28915]",
      "dest": "): ) [32496,32497]"
    },
    {
      "src": ".: . [39728,39729]",
      "dest": ".: . [46498,46499]"
    },
    {
      "src": ",: , [34017,34018]",
      "dest": ",: , [40247,40248]"
    },
    {
      "src": "comment: // Friday, July 24, 2020 4:58:31 PM GMT [33523,33562]",
      "dest": "comment: // Friday, July 24, 2020 4:58:31 PM GMT [39669,39708]"
    },
    {
      "src": "primitive_type [28846,28850]",
      "dest": "primitive_type [32441,32445]"
    },
    {
      "src": "array_access [12079,12107]",
      "dest": "array_access [13943,13971]"
    },
    {
      "src": ".: . [39582,39583]",
      "dest": ".: . [46352,46353]"
    },
    {
      "src": "identifier: require [34291,34298]",
      "dest": "identifier: require [40521,40528]"
    },
    {
      "src": "visibility [8695,8701]",
      "dest": "visibility [10559,10565]"
    },
    {
      "src": "type_name [23019,23026]",
      "dest": "type_name [27261,27268]"
    },
    {
      "src": "{: { [14291,14292]",
      "dest": "{: { [16155,16156]"
    },
    {
      "src": "returns: returns [2361,2368]",
      "dest": "returns: returns [4332,4339]"
    },
    {
      "src": "comment: /**      * @dev Get locked balance for an account      * @param account Account to check      * @return Amount locked      */ [37178,37307]",
      "dest": "comment: /**      * @dev Get locked balance for an account      * @param account Account to check      * @return Amount locked      */ [43892,44021]"
    },
    {
      "src": "return: return [40928,40934]",
      "dest": "return: return [47698,47704]"
    },
    {
      "src": "identifier: _attribute [12429,12439]",
      "dest": "identifier: _attribute [14293,14303]"
    },
    {
      "src": "comment: // set distribution to lockup amount [36992,37028]",
      "dest": "comment: // add amount to locked distribution [43685,43721]"
    },
    {
      "src": "identifier: syncAttributeValue [11103,11121]",
      "dest": "identifier: syncAttributeValue [12967,12985]"
    },
    {
      "src": "(: ( [4687,4688]",
      "dest": "(: ( [6658,6659]"
    },
    {
      "src": "identifier: _spender [28583,28591]",
      "dest": "identifier: recipient [32080,32089]"
    },
    {
      "src": "bytes32: bytes32 [13354,13361]",
      "dest": "bytes32: bytes32 [15218,15225]"
    },
    {
      "src": "function_body [31578,31652]",
      "dest": "function_body [20224,20298]"
    },
    {
      "src": "bytes32: bytes32 [12821,12828]",
      "dest": "bytes32: bytes32 [14685,14692]"
    },
    {
      "src": "string_literal [35743,35780]",
      "dest": "string_literal [41885,41922]"
    },
    {
      "src": "}: } [38280,38281]",
      "dest": "}: } [44932,44933]"
    },
    {
      "src": "identifier: _to [35828,35831]",
      "dest": "identifier: _to [41957,41960]"
    },
    {
      "src": "function_definition [12785,13142]",
      "dest": "function_definition [14649,15006]"
    },
    {
      "src": "function: function [15277,15285]",
      "dest": "function: function [17141,17149]"
    },
    {
      "src": "): ) [4751,4752]",
      "dest": "): ) [6722,6723]"
    },
    {
      "src": "identifier: b [5402,5403]",
      "dest": "identifier: b [7373,7374]"
    },
    {
      "src": "identifier: registerLockup [36750,36764]",
      "dest": "identifier: registerLockup [43518,43532]"
    },
    {
      "src": "primitive_type [30964,30971]",
      "dest": "primitive_type [19610,19617]"
    },
    {
      "src": "interface_declaration [5580,8215]",
      "dest": "interface_declaration [7490,10125]"
    },
    {
      "src": "): ) [39195,39196]",
      "dest": "): ) [45965,45966]"
    },
    {
      "src": "identifier: sub [37917,37920]",
      "dest": "identifier: sub [44569,44572]"
    },
    {
      "src": "call_expression [36321,36347]",
      "dest": "call_expression [43158,43184]"
    },
    {
      "src": "function_body [20898,20984]",
      "dest": "function_body [34538,34706]"
    },
    {
      "src": "identifier: _who [13348,13352]",
      "dest": "identifier: _who [15212,15216]"
    },
    {
      "src": "type_name [8384,8391]",
      "dest": "type_name [10248,10255]"
    },
    {
      "src": "): ) [13402,13403]",
      "dest": "): ) [15266,15267]"
    },
    {
      "src": "call_argument [32360,32373]",
      "dest": "call_argument [21006,21019]"
    },
    {
      "src": "identifier: sender [33991,33997]",
      "dest": "identifier: sender [40221,40227]"
    },
    {
      "src": "identifier: from [7928,7932]",
      "dest": "identifier: from [9838,9842]"
    },
    {
      "src": "bytes32: bytes32 [13191,13198]",
      "dest": "bytes32: bytes32 [15055,15062]"
    },
    {
      "src": "expression_statement [1967,1997]",
      "dest": "expression_statement [3938,3968]"
    },
    {
      "src": "identifier: _who [13600,13604]",
      "dest": "identifier: _who [15464,15468]"
    },
    {
      "src": "return_statement [30984,30998]",
      "dest": "return_statement [19630,19644]"
    },
    {
      "src": "visibility [34261,34269]",
      "dest": "visibility [40491,40499]"
    },
    {
      "src": ".: . [29958,29959]",
      "dest": ".: . [37067,37068]"
    },
    {
      "src": "return: return [21895,21901]",
      "dest": "return: return [33917,33923]"
    },
    {
      "src": ".: . [14180,14181]",
      "dest": ".: . [16044,16045]"
    },
    {
      "src": "identifier: targets [13816,13823]",
      "dest": "identifier: targets [15680,15687]"
    },
    {
      "src": "comment: // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522 [2530,2601]",
      "dest": "comment: // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522 [4501,4572]"
    },
    {
      "src": "address: address [21753,21760]",
      "dest": "address: address [25874,25881]"
    },
    {
      "src": "(: ( [36764,36765]",
      "dest": "(: ( [43532,43533]"
    },
    {
      "src": "primitive_type [26137,26144]",
      "dest": "primitive_type [23086,23093]"
    },
    {
      "src": "primitive_type [10360,10364]",
      "dest": "primitive_type [12224,12228]"
    },
    {
      "src": "function_definition [13309,13468]",
      "dest": "function_definition [15173,15332]"
    },
    {
      "src": "identifier: subscriber [10040,10050]",
      "dest": "identifier: subscriber [11904,11914]"
    },
    {
      "src": "number_literal: 1 [11697,11698]",
      "dest": "number_literal: 1 [13561,13562]"
    },
    {
      "src": "solidity_version: 0.6.0 [108,113]",
      "dest": "solidity_version: 0.6.0 [7406,7411]"
    },
    {
      "src": "identifier: _spender [23723,23731]",
      "dest": "identifier: spender [34474,34481]"
    },
    {
      "src": "identifier: push [11290,11294]",
      "dest": "identifier: push [13154,13158]"
    },
    {
      "src": "identifier: sender [14874,14880]",
      "dest": "identifier: sender [16738,16744]"
    },
    {
      "src": "(: ( [4642,4643]",
      "dest": "(: ( [6613,6614]"
    },
    {
      "src": "parameter [28806,28820]",
      "dest": "parameter [32401,32415]"
    },
    {
      "src": "}: } [40368,40369]",
      "dest": "}: } [47138,47139]"
    },
    {
      "src": "type_name [28984,28991]",
      "dest": "type_name [48853,48860]"
    },
    {
      "src": "state_variable_declaration [9231,9296]",
      "dest": "state_variable_declaration [11095,11160]"
    },
    {
      "src": "call_argument [42202,42209]",
      "dest": "call_argument [48742,48749]"
    },
    {
      "src": "identifier: unlockedBalance [35709,35724]",
      "dest": "identifier: unlockedBalance [41851,41866]"
    },
    {
      "src": "return_type_definition [42493,42516]",
      "dest": "return_type_definition [31095,31118]"
    },
    {
      "src": "call_argument [35667,35689]",
      "dest": "call_argument [41555,41577]"
    },
    {
      "src": "variable_declaration_statement [14432,14481]",
      "dest": "variable_declaration_statement [16296,16345]"
    },
    {
      "src": "address: address [8687,8694]",
      "dest": "address: address [10551,10558]"
    },
    {
      "src": "visibility [13211,13217]",
      "dest": "visibility [15075,15081]"
    },
    {
      "src": "inheritance_specifier [30906,30918]",
      "dest": "inheritance_specifier [19552,19564]"
    },
    {
      "src": "binary_expression [36848,36879]",
      "dest": "binary_expression [43616,43647]"
    },
    {
      "src": "type_name [27424,27431]",
      "dest": "type_name [26489,26496]"
    },
    {
      "src": "identifier: _attribute [14169,14179]",
      "dest": "identifier: _attribute [16033,16043]"
    },
    {
      "src": "return: return [1123,1129]",
      "dest": "return: return [3094,3100]"
    },
    {
      "src": "): ) [22798,22799]",
      "dest": "): ) [33102,33103]"
    },
    {
      "src": "identifier: errorMessage [5294,5306]",
      "dest": "identifier: errorMessage [7265,7277]"
    },
    {
      "src": "(: ( [10300,10301]",
      "dest": "(: ( [12164,12165]"
    },
    {
      "src": "identifier: RegistryClone [8302,8315]",
      "dest": "identifier: RegistryClone [10166,10179]"
    },
    {
      "src": "type_name [34232,34239]",
      "dest": "type_name [40462,40469]"
    },
    {
      "src": "identifier: subscribers [12279,12290]",
      "dest": "identifier: subscribers [14143,14154]"
    },
    {
      "src": "): ) [42159,42160]",
      "dest": "): ) [48699,48700]"
    },
    {
      "src": "address: address [29676,29683]",
      "dest": "address: address [36739,36746]"
    },
    {
      "src": "identifier: _spender [22742,22750]",
      "dest": "identifier: target [26462,26468]"
    },
    {
      "src": "=: = [29945,29946]",
      "dest": "=: = [37054,37055]"
    },
    {
      "src": "type_name [15851,15858]",
      "dest": "type_name [17662,17669]"
    },
    {
      "src": "type_name [26114,26121]",
      "dest": "type_name [33023,33030]"
    },
    {
      "src": "): ) [14043,14044]",
      "dest": "): ) [15907,15908]"
    },
    {
      "src": "call_argument [37145,37153]",
      "dest": "call_argument [43859,43867]"
    },
    {
      "src": "type_name [12807,12814]",
      "dest": "type_name [14671,14678]"
    },
    {
      "src": "binary_expression [39337,39359]",
      "dest": "binary_expression [46107,46129]"
    },
    {
      "src": "(: ( [28749,28750]",
      "dest": "(: ( [32383,32384]"
    },
    {
      "src": "state_variable_declaration [33746,33788]",
      "dest": "state_variable_declaration [39892,39934]"
    },
    {
      "src": "return_type_definition [28837,28851]",
      "dest": "return_type_definition [32432,32446]"
    },
    {
      "src": ".: . [14873,14874]",
      "dest": ".: . [16737,16738]"
    },
    {
      "src": "(: ( [14465,14466]",
      "dest": "(: ( [16329,16330]"
    },
    {
      "src": "identifier: owner_ [31611,31617]",
      "dest": "identifier: owner_ [20257,20263]"
    },
    {
      "src": "comment: // Fork of OpenZeppelin's BasicToken [18771,18807]",
      "dest": "comment: // &&&&&&&&&&&&&,    #&&#                      ./#&&&&&&&&%, %&&&&&&&&&&& [525,598]"
    },
    {
      "src": "primitive_type [8584,8591]",
      "dest": "primitive_type [10448,10455]"
    },
    {
      "src": "identifier: Approval [20096,20104]",
      "dest": "identifier: Approval [30734,30742]"
    },
    {
      "src": "identifier: RegistryClone [13792,13805]",
      "dest": "identifier: RegistryClone [15656,15669]"
    },
    {
      "src": "identifier: errorMessage [3936,3948]",
      "dest": "identifier: errorMessage [5907,5919]"
    },
    {
      "src": "identifier: _pendingOwner [32394,32407]",
      "dest": "identifier: _pendingOwner [21040,21053]"
    },
    {
      "src": "\": \" [14692,14693]",
      "dest": "\": \" [16556,16557]"
    },
    {
      "src": "(: ( [31356,31357]",
      "dest": "(: ( [20002,20003]"
    },
    {
      "src": "identifier: timePassed [38371,38381]",
      "dest": "identifier: timePassed [45023,45033]"
    },
    {
      "src": "emit_statement [10868,10932]",
      "dest": "emit_statement [12732,12796]"
    },
    {
      "src": "call_argument [15449,15450]",
      "dest": "call_argument [17313,17314]"
    },
    {
      "src": "address: address [6498,6505]",
      "dest": "address: address [8408,8415]"
    },
    {
      "src": "public: public [38112,38118]",
      "dest": "public: public [44764,44770]"
    },
    {
      "src": "function_definition [5678,5733]",
      "dest": "function_definition [7588,7643]"
    },
    {
      "src": "visibility [26188,26194]",
      "dest": "visibility [32417,32423]"
    },
    {
      "src": "pragma_directive [41009,41032]",
      "dest": "pragma_directive [28985,29008]"
    },
    {
      "src": "bytes32: bytes32 [10301,10308]",
      "dest": "bytes32: bytes32 [12165,12172]"
    },
    {
      "src": "(: ( [13394,13395]",
      "dest": "(: ( [15258,15259]"
    },
    {
      "src": "contract_body [5597,8215]",
      "dest": "contract_body [7507,10125]"
    },
    {
      "src": "call_argument [14506,14509]",
      "dest": "call_argument [16370,16373]"
    },
    {
      "src": "primitive_type [11394,11401]",
      "dest": "primitive_type [13258,13265]"
    },
    {
      "src": "\": \" [12219,12220]",
      "dest": "\": \" [14083,14084]"
    },
    {
      "src": "identifier: this [14474,14478]",
      "dest": "identifier: this [16338,16342]"
    },
    {
      "src": "primitive_type [30217,30224]",
      "dest": "primitive_type [27532,27537]"
    },
    {
      "src": "parameter [2325,2334]",
      "dest": "parameter [4296,4305]"
    },
    {
      "src": "string [30429,30451]",
      "dest": "string [35569,35609]"
    },
    {
      "src": "identifier: lockedBalance [37322,37335]",
      "dest": "identifier: lockedBalance [44036,44049]"
    },
    {
      "src": "return_statement [3337,3384]",
      "dest": "return_statement [5308,5355]"
    },
    {
      "src": "string: string [42502,42508]",
      "dest": "string: string [31104,31110]"
    },
    {
      "src": "\": \" [42270,42271]",
      "dest": "\": \" [48810,48811]"
    },
    {
      "src": "comment: // File: contracts/trusttokens/ProxyStorage.sol [15466,15513]",
      "dest": "comment: // &&&&&&&&&&&&&&&&&&&&&&&&%(,                 .*#&&&&&&&&&&&&&&&&&&&&&&& [225,298]"
    },
    {
      "src": "function_body [13781,14221]",
      "dest": "function_body [15645,16085]"
    },
    {
      "src": "library_declaration [695,5414]",
      "dest": "library_declaration [2666,7385]"
    },
    {
      "src": "function_body [29024,29106]",
      "dest": "function_body [48878,48922]"
    },
    {
      "src": "function_body [14851,14917]",
      "dest": "function_body [16715,16781]"
    },
    {
      "src": "identifier: subscriber [9950,9960]",
      "dest": "identifier: subscriber [11814,11824]"
    },
    {
      "src": "}: } [14713,14714]",
      "dest": "}: } [16577,16578]"
    },
    {
      "src": "override: override [34882,34890]",
      "dest": "override: override [49237,49245]"
    },
    {
      "src": "[: [ [11610,11611]",
      "dest": "[: [ [13474,13475]"
    },
    {
      "src": "identifier: b [4001,4002]",
      "dest": "identifier: b [5972,5973]"
    },
    {
      "src": "): ) [36111,36112]",
      "dest": "): ) [42968,42969]"
    },
    {
      "src": "member_expression [12223,12233]",
      "dest": "member_expression [14087,14097]"
    },
    {
      "src": "identifier: block [10841,10846]",
      "dest": "identifier: block [12705,12710]"
    },
    {
      "src": "primitive_type [29348,29352]",
      "dest": "primitive_type [24538,24542]"
    },
    {
      "src": "type_name [7661,7668]",
      "dest": "type_name [9571,9578]"
    },
    {
      "src": "identifier: passed [39337,39343]",
      "dest": "identifier: passed [46107,46113]"
    },
    {
      "src": "comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts with custom message on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [3399,3881]",
      "dest": "comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts with custom message on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [5370,5852]"
    },
    {
      "src": "identifier: LOCK_START [38404,38414]",
      "dest": "identifier: LOCK_START [45056,45066]"
    },
    {
      "src": "type_name [35578,35585]",
      "dest": "type_name [35231,35238]"
    },
    {
      "src": "parameter [14375,14387]",
      "dest": "parameter [16239,16251]"
    },
    {
      "src": "identifier: _who [11939,11943]",
      "dest": "identifier: _who [13803,13807]"
    },
    {
      "src": "identifier: overflowMessage [18255,18270]",
      "dest": "identifier: errorMessage [27000,27012]"
    },
    {
      "src": "solidity_pragma_token [98,113]",
      "dest": "solidity_pragma_token [7396,7411]"
    },
    {
      "src": "binary_expression [10452,10481]",
      "dest": "binary_expression [12316,12345]"
    },
    {
      "src": "[: [ [10784,10785]",
      "dest": "[: [ [12648,12649]"
    },
    {
      "src": "identifier: EPOCH_DURATION [39610,39624]",
      "dest": "identifier: EPOCH_DURATION [46380,46394]"
    },
    {
      "src": "identifier: _amount [42152,42159]",
      "dest": "identifier: _amount [48692,48699]"
    },
    {
      "src": "type_name [9928,9941]",
      "dest": "type_name [11792,11805]"
    },
    {
      "src": "}: } [39636,39637]",
      "dest": "}: } [46406,46407]"
    },
    {
      "src": ">: > [12369,12370]",
      "dest": ">: > [14233,14234]"
    },
    {
      "src": "address: address [14389,14396]",
      "dest": "address: address [16253,16260]"
    },
    {
      "src": "expression_statement [34923,34983]",
      "dest": "expression_statement [42999,43059]"
    },
    {
      "src": "identifier: token [14382,14387]",
      "dest": "identifier: token [16246,16251]"
    },
    {
      "src": "\": \" [34448,34449]",
      "dest": "\": \" [40678,40679]"
    },
    {
      "src": "view: view [41892,41896]",
      "dest": "view: view [21818,21822]"
    },
    {
      "src": "=: = [14076,14077]",
      "dest": "=: = [15940,15941]"
    },
    {
      "src": "constant: constant [9471,9479]",
      "dest": "constant: constant [11335,11343]"
    },
    {
      "src": "event_definition [9676,9792]",
      "dest": "event_definition [11540,11656]"
    },
    {
      "src": "identifier: _to [14506,14509]",
      "dest": "identifier: _to [16370,16373]"
    },
    {
      "src": "primitive_type [12947,12954]",
      "dest": "primitive_type [14811,14818]"
    },
    {
      "src": "identifier: WRITE_PERMISSION [9480,9496]",
      "dest": "identifier: WRITE_PERMISSION [11344,11360]"
    },
    {
      "src": "(: ( [39909,39910]",
      "dest": "(: ( [46679,46680]"
    },
    {
      "src": "identifier: _from [35725,35730]",
      "dest": "identifier: _from [41867,41872]"
    },
    {
      "src": "assignment_expression [31377,31396]",
      "dest": "assignment_expression [20023,20042]"
    },
    {
      "src": "(: ( [11737,11738]",
      "dest": "(: ( [13601,13602]"
    },
    {
      "src": "visibility [11236,11244]",
      "dest": "visibility [13100,13108]"
    },
    {
      "src": ".: . [13450,13451]",
      "dest": ".: . [15314,15315]"
    },
    {
      "src": "}: } [11364,11365]",
      "dest": "}: } [13228,13229]"
    },
    {
      "src": "identifier: _value [35121,35127]",
      "dest": "identifier: _value [42700,42706]"
    },
    {
      "src": "(: ( [9900,9901]",
      "dest": "(: ( [11764,11765]"
    },
    {
      "src": "external: external [14272,14280]",
      "dest": "external: external [16136,16144]"
    },
    {
      "src": "external: external [5701,5709]",
      "dest": "external: external [7611,7619]"
    },
    {
      "src": "parameter [40561,40568]",
      "dest": "parameter [47331,47338]"
    },
    {
      "src": "comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [2390,2469]",
      "dest": "comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [4361,4440]"
    },
    {
      "src": "identifier: lockedBalance [37921,37934]",
      "dest": "identifier: lockedBalance [44573,44586]"
    },
    {
      "src": "identifier: unsubscribe [11382,11393]",
      "dest": "identifier: unsubscribe [13246,13257]"
    },
    {
      "src": "public: public [15790,15796]",
      "dest": "public: public [17601,17607]"
    },
    {
      "src": "identifier: decimals [42308,42316]",
      "dest": "identifier: decimals [48939,48947]"
    },
    {
      "src": "{: { [35620,35621]",
      "dest": "{: { [41508,41509]"
    },
    {
      "src": "state_mutability [13548,13552]",
      "dest": "state_mutability [15412,15416]"
    },
    {
      "src": "type_name [38133,38140]",
      "dest": "type_name [44785,44792]"
    },
    {
      "src": "parameter [18530,18563]",
      "dest": "parameter [25909,25935]"
    },
    {
      "src": "primitive_type [30229,30233]",
      "dest": "primitive_type [27518,27522]"
    },
    {
      "src": "address: address [32434,32441]",
      "dest": "address: address [21080,21087]"
    },
    {
      "src": "external: external [36799,36807]",
      "dest": "external: external [43567,43575]"
    },
    {
      "src": "call_argument [10920,10930]",
      "dest": "call_argument [12784,12794]"
    },
    {
      "src": "identifier: owner [15364,15369]",
      "dest": "identifier: owner [17228,17233]"
    },
    {
      "src": "comment: // never remove any storage variables [8617,8654]",
      "dest": "comment: // never remove any storage variables [10481,10518]"
    },
    {
      "src": "identifier: _to [35116,35119]",
      "dest": "identifier: owner_ [42692,42698]"
    },
    {
      "src": "comment: // Allows a write if either a) the writer is that Registry's owner, or [10060,10130]",
      "dest": "comment: // Allows a write if either a) the writer is that Registry's owner, or [11924,11994]"
    },
    {
      "src": "): ) [36797,36798]",
      "dest": "): ) [43565,43566]"
    },
    {
      "src": "(: ( [11525,11526]",
      "dest": "(: ( [13389,13390]"
    },
    {
      "src": "): ) [39604,39605]",
      "dest": "): ) [46374,46375]"
    },
    {
      "src": "function_body [10366,10493]",
      "dest": "function_body [12230,12357]"
    },
    {
      "src": "]: ] [12671,12672]",
      "dest": "]: ] [14535,14536]"
    },
    {
      "src": "(: ( [5358,5359]",
      "dest": "(: ( [7329,7330]"
    },
    {
      "src": "address: address [15441,15448]",
      "dest": "address: address [17305,17312]"
    },
    {
      "src": "call_argument [10886,10890]",
      "dest": "call_argument [12750,12754]"
    },
    {
      "src": "primitive_type [11012,11019]",
      "dest": "primitive_type [12876,12883]"
    },
    {
      "src": "{: { [33339,33340]",
      "dest": "{: { [39485,39486]"
    },
    {
      "src": "{: { [12012,12013]",
      "dest": "{: { [13876,13877]"
    },
    {
      "src": "call_argument [23860,23866]",
      "dest": "call_argument [35302,35322]"
    },
    {
      "src": "comment: /**      * @dev Get timestamp of locking period start      * @return Timestamp of locking period start      */ [40747,40860]",
      "dest": "comment: /**      * @dev Get timestamp of locking period start      * @return Timestamp of locking period start      */ [47517,47630]"
    },
    {
      "src": "!=: != [5361,5363]",
      "dest": "!=: != [7332,7334]"
    },
    {
      "src": "{: { [15698,15699]",
      "dest": "{: { [17509,17510]"
    },
    {
      "src": "primitive_type [3922,3928]",
      "dest": "primitive_type [5893,5899]"
    },
    {
      "src": "type_name [1036,1043]",
      "dest": "type_name [3007,3014]"
    },
    {
      "src": "identifier: latestEpoch [39898,39909]",
      "dest": "identifier: latestEpoch [46668,46679]"
    },
    {
      "src": "identifier: sub [38745,38748]",
      "dest": "identifier: sub [45397,45400]"
    },
    {
      "src": "uint256: uint256 [37448,37455]",
      "dest": "uint256: uint256 [42264,42271]"
    },
    {
      "src": "type_name [19963,19970]",
      "dest": "type_name [30274,30281]"
    },
    {
      "src": "call_argument [1983,1995]",
      "dest": "call_argument [3954,3966]"
    },
    {
      "src": "internal: internal [30106,30114]",
      "dest": "internal: internal [36064,36072]"
    },
    {
      "src": "type_name [9250,9283]",
      "dest": "type_name [11114,11147]"
    },
    {
      "src": "bytes32: bytes32 [8384,8391]",
      "dest": "bytes32: bytes32 [10248,10255]"
    },
    {
      "src": "string_literal [36240,36273]",
      "dest": "string_literal [43111,43144]"
    },
    {
      "src": "primitive_type [24081,24088]",
      "dest": "primitive_type [33039,33046]"
    },
    {
      "src": "parameter [11821,11828]",
      "dest": "parameter [13685,13692]"
    },
    {
      "src": "parameter [37792,37807]",
      "dest": "parameter [44444,44459]"
    },
    {
      "src": "identifier: balanceOf [36848,36857]",
      "dest": "identifier: balanceOf [43616,43625]"
    },
    {
      "src": "address: address [8172,8179]",
      "dest": "address: address [10082,10089]"
    },
    {
      "src": "primitive_type [3911,3918]",
      "dest": "primitive_type [5882,5889]"
    },
    {
      "src": "identifier: a [3280,3281]",
      "dest": "identifier: a [5251,5252]"
    },
    {
      "src": "): ) [1109,1110]",
      "dest": "): ) [3080,3081]"
    },
    {
      "src": "call_argument [11575,11585]",
      "dest": "call_argument [13439,13449]"
    },
    {
      "src": "=: = [4042,4043]",
      "dest": "=: = [6013,6014]"
    },
    {
      "src": "): ) [20953,20954]",
      "dest": "): ) [34675,34676]"
    },
    {
      "src": "}: } [2052,2053]",
      "dest": "}: } [4023,4024]"
    },
    {
      "src": "]: ] [12094,12095]",
      "dest": "]: ] [13958,13959]"
    },
    {
      "src": "): ) [1023,1024]",
      "dest": "): ) [2994,2995]"
    },
    {
      "src": "string [34019,34042]",
      "dest": "string [40249,40272]"
    },
    {
      "src": "call_expression [10435,10482]",
      "dest": "call_expression [12299,12346]"
    },
    {
      "src": "internal: internal [1924,1932]",
      "dest": "internal: internal [3895,3903]"
    },
    {
      "src": "[: [ [11641,11642]",
      "dest": "[: [ [13505,13506]"
    },
    {
      "src": "primitive_type [34322,34329]",
      "dest": "primitive_type [40552,40559]"
    },
    {
      "src": "binary_expression [35639,35665]",
      "dest": "binary_expression [41527,41553]"
    },
    {
      "src": "identifier: hasHook [29353,29360]",
      "dest": "identifier: success [24543,24550]"
    },
    {
      "src": "public: public [8695,8701]",
      "dest": "public: public [10559,10565]"
    },
    {
      "src": "type_name [13507,13514]",
      "dest": "type_name [15371,15378]"
    },
    {
      "src": "call_expression [36206,36228]",
      "dest": "call_expression [43077,43099]"
    },
    {
      "src": "): ) [42479,42480]",
      "dest": "): ) [31073,31074]"
    },
    {
      "src": "identifier: mul [40713,40716]",
      "dest": "identifier: mul [47483,47486]"
    },
    {
      "src": "identifier: amount [36791,36797]",
      "dest": "identifier: amount [43559,43565]"
    },
    {
      "src": "bytes32: bytes32 [24373,24380]",
      "dest": "bytes32: bytes32 [23059,23066]"
    },
    {
      "src": "internal: internal [36113,36121]",
      "dest": "internal: internal [42970,42978]"
    },
    {
      "src": "): ) [7694,7695]",
      "dest": "): ) [9604,9605]"
    },
    {
      "src": "identifier: _from [35821,35826]",
      "dest": "identifier: _from [41950,41955]"
    },
    {
      "src": "identifier: _from [35515,35520]",
      "dest": "identifier: _from [41430,41435]"
    },
    {
      "src": "string_literal [34019,34042]",
      "dest": "string_literal [40249,40272]"
    },
    {
      "src": "identifier: value [13288,13293]",
      "dest": "identifier: value [15152,15157]"
    },
    {
      "src": "variable_declaration [14064,14075]",
      "dest": "variable_declaration [15928,15939]"
    },
    {
      "src": ",: , [9642,9643]",
      "dest": ",: , [11506,11507]"
    },
    {
      "src": "contract: contract [30876,30884]",
      "dest": "contract: contract [19522,19530]"
    },
    {
      "src": "binary_expression [42136,42174]",
      "dest": "binary_expression [48676,48714]"
    },
    {
      "src": "primitive_type [1874,1881]",
      "dest": "primitive_type [3845,3852]"
    },
    {
      "src": "type_name [37448,37455]",
      "dest": "type_name [42264,42271]"
    },
    {
      "src": "): ) [35730,35731]",
      "dest": "): ) [41872,41873]"
    },
    {
      "src": "identifier: initialize [41659,41669]",
      "dest": "identifier: initialize [48351,48361]"
    },
    {
      "src": "variable_declaration_statement [39248,39280]",
      "dest": "variable_declaration_statement [46018,46050]"
    },
    {
      "src": "public: public [32060,32066]",
      "dest": "public: public [20706,20712]"
    },
    {
      "src": "{: { [15138,15139]",
      "dest": "{: { [17002,17003]"
    },
    {
      "src": "primitive_type [8508,8515]",
      "dest": "primitive_type [10372,10379]"
    },
    {
      "src": "type_name [9269,9282]",
      "dest": "type_name [11133,11146]"
    },
    {
      "src": ",: , [12439,12440]",
      "dest": ",: , [14303,14304]"
    },
    {
      "src": "call_expression [38734,38787]",
      "dest": "call_expression [45386,45439]"
    },
    {
      "src": "uint256: uint256 [28806,28813]",
      "dest": "uint256: uint256 [32401,32408]"
    },
    {
      "src": "return_statement [10377,10486]",
      "dest": "return_statement [12241,12350]"
    },
    {
      "src": "comment: // File: contracts/trusttokens/RegistrySubscriber.sol [24199,24252]",
      "dest": "comment: // &&&&&&&&&%    #&&&&&&#    /&&&&&&&&&&&&&&&&&&&&&&&(    .%&&&&&&&&&&&&& [750,823]"
    },
    {
      "src": "identifier: index [13977,13982]",
      "dest": "identifier: index [15841,15846]"
    },
    {
      "src": "(: ( [12043,12044]",
      "dest": "(: ( [13907,13908]"
    },
    {
      "src": "): ) [13372,13373]",
      "dest": "): ) [15236,15237]"
    },
    {
      "src": "): ) [39359,39360]",
      "dest": "): ) [46129,46130]"
    },
    {
      "src": "identifier: RegistryClone [10018,10031]",
      "dest": "identifier: RegistryClone [11882,11895]"
    },
    {
      "src": "identifier: require [14652,14659]",
      "dest": "identifier: require [16516,16523]"
    },
    {
      "src": "call_argument [1511,1512]",
      "dest": "call_argument [3482,3483]"
    },
    {
      "src": ",: , [11943,11944]",
      "dest": ",: , [13807,13808]"
    },
    {
      "src": "parameter [5331,5338]",
      "dest": "parameter [7302,7309]"
    },
    {
      "src": "indexed: indexed [9823,9830]",
      "dest": "indexed: indexed [11687,11694]"
    },
    {
      "src": "identifier: SafeMath [41406,41414]",
      "dest": "identifier: SafeMath [48121,48129]"
    },
    {
      "src": "return_statement [11841,11879]",
      "dest": "return_statement [13705,13743]"
    },
    {
      "src": "visibility [34873,34881]",
      "dest": "visibility [42244,42252]"
    },
    {
      "src": "function: function [12785,12793]",
      "dest": "function: function [14649,14657]"
    },
    {
      "src": "returns: returns [12623,12630]",
      "dest": "returns: returns [14487,14494]"
    },
    {
      "src": "identifier: _attribute [11642,11652]",
      "dest": "identifier: _attribute [13506,13516]"
    },
    {
      "src": "function: function [34203,34211]",
      "dest": "function: function [40433,40441]"
    },
    {
      "src": "identifier: add [40671,40674]",
      "dest": "identifier: add [47441,47444]"
    },
    {
      "src": "type_name [23487,23494]",
      "dest": "type_name [37613,37620]"
    },
    {
      "src": "solidity: solidity [27333,27341]",
      "dest": "solidity: solidity [38683,38691]"
    },
    {
      "src": "address: address [14466,14473]",
      "dest": "address: address [16330,16337]"
    },
    {
      "src": "mapping: mapping [15762,15769]",
      "dest": "mapping: mapping [17573,17580]"
    },
    {
      "src": "string_literal [34334,34358]",
      "dest": "string_literal [40564,40588]"
    },
    {
      "src": "return_statement [31078,31099]",
      "dest": "return_statement [19724,19745]"
    },
    {
      "src": "return: return [42358,42364]",
      "dest": "return: return [48998,49004]"
    },
    {
      "src": "parameter [32042,32058]",
      "dest": "parameter [20688,20704]"
    },
    {
      "src": "identifier: ValSafeMath [17706,17717]",
      "dest": "identifier: Address [22135,22142]"
    },
    {
      "src": "{: { [12638,12639]",
      "dest": "{: { [14502,14503]"
    },
    {
      "src": "return_statement [39407,39426]",
      "dest": "return_statement [46177,46196]"
    },
    {
      "src": "event_definition [7897,7969]",
      "dest": "event_definition [9807,9879]"
    },
    {
      "src": "): ) [40692,40693]",
      "dest": "): ) [47462,47463]"
    },
    {
      "src": "type_name [9716,9723]",
      "dest": "type_name [11580,11587]"
    },
    {
      "src": "address: address [13507,13514]",
      "dest": "address: address [15371,15378]"
    },
    {
      "src": "bytes32: bytes32 [13676,13683]",
      "dest": "bytes32: bytes32 [15540,15547]"
    },
    {
      "src": "address: address [21027,21034]",
      "dest": "address: address [25471,25478]"
    },
    {
      "src": "uint256: uint256 [4654,4661]",
      "dest": "uint256: uint256 [6625,6632]"
    },
    {
      "src": "array_access [37038,37060]",
      "dest": "array_access [43731,43753]"
    },
    {
      "src": "identifier: b [5359,5360]",
      "dest": "identifier: b [7330,7331]"
    },
    {
      "src": "\": \" [35688,35689]",
      "dest": "\": \" [41576,41577]"
    },
    {
      "src": "member_expression [35086,35108]",
      "dest": "member_expression [42669,42684]"
    },
    {
      "src": "primitive_type [2370,2377]",
      "dest": "primitive_type [4341,4348]"
    },
    {
      "src": "call_argument [34959,34981]",
      "dest": "call_argument [43035,43057]"
    },
    {
      "src": "type_name [21808,21812]",
      "dest": "type_name [33808,33812]"
    },
    {
      "src": ",: , [41727,41728]",
      "dest": ",: , [48401,48402]"
    },
    {
      "src": "call_argument [30523,30535]",
      "dest": "call_argument [24381,24412]"
    },
    {
      "src": "internal: internal [19343,19351]",
      "dest": "internal: internal [37646,37654]"
    },
    {
      "src": "}: } [1138,1139]",
      "dest": "}: } [3109,3110]"
    },
    {
      "src": "): ) [12609,12610]",
      "dest": "): ) [14473,14474]"
    },
    {
      "src": "indexed: indexed [19036,19043]",
      "dest": "indexed: indexed [30536,30543]"
    },
    {
      "src": "[: [ [13432,13433]",
      "dest": "[: [ [15296,15297]"
    },
    {
      "src": "identifier: _attribute [13439,13449]",
      "dest": "identifier: _attribute [15303,15313]"
    },
    {
      "src": "identifier: b [3291,3292]",
      "dest": "identifier: b [5262,5263]"
    },
    {
      "src": "array_access [11477,11500]",
      "dest": "array_access [13341,13364]"
    },
    {
      "src": "call_expression [30488,30544]",
      "dest": "call_expression [24373,24446]"
    },
    {
      "src": "uint256: uint256 [27424,27431]",
      "dest": "uint256: uint256 [26489,26496]"
    },
    {
      "src": "identifier: b [2344,2345]",
      "dest": "identifier: b [4315,4316]"
    },
    {
      "src": "call_expression [39715,39728]",
      "dest": "call_expression [46485,46498]"
    },
    {
      "src": "visibility [15735,15741]",
      "dest": "visibility [17546,17552]"
    },
    {
      "src": "address: address [13340,13347]",
      "dest": "address: address [15204,15211]"
    },
    {
      "src": "): ) [2621,2622]",
      "dest": "): ) [4592,4593]"
    },
    {
      "src": "view: view [27804,27808]",
      "dest": "view: view [21706,21710]"
    },
    {
      "src": ",: , [34417,34418]",
      "dest": ",: , [40647,40648]"
    },
    {
      "src": ".: . [12336,12337]",
      "dest": ".: . [14200,14201]"
    },
    {
      "src": "identifier: receiver [37145,37153]",
      "dest": "identifier: receiver [43859,43867]"
    },
    {
      "src": "]: ] [11000,11001]",
      "dest": "]: ] [12864,12865]"
    },
    {
      "src": ",: , [29822,29823]",
      "dest": ",: , [37123,37124]"
    },
    {
      "src": "function_body [3326,3391]",
      "dest": "function_body [5297,5362]"
    },
    {
      "src": "primitive_type [22794,22798]",
      "dest": "primitive_type [33098,33102]"
    },
    {
      "src": "identifier: a [5266,5267]",
      "dest": "identifier: a [7237,7238]"
    },
    {
      "src": "type_name [30090,30097]",
      "dest": "type_name [36048,36055]"
    },
    {
      "src": "type_cast_expression [39414,39425]",
      "dest": "type_cast_expression [46184,46195]"
    },
    {
      "src": "(: ( [35724,35725]",
      "dest": "(: ( [41866,41867]"
    },
    {
      "src": ",: , [3920,3921]",
      "dest": ",: , [5891,5892]"
    },
    {
      "src": "identifier: getAttributeValue [13159,13176]",
      "dest": "identifier: getAttributeValue [15023,15040]"
    },
    {
      "src": "view: view [12866,12870]",
      "dest": "view: view [14730,14734]"
    },
    {
      "src": "function_body [38142,38977]",
      "dest": "function_body [44794,45629]"
    },
    {
      "src": "{: { [37383,37384]",
      "dest": "{: { [44097,44098]"
    },
    {
      "src": "return: return [42528,42534]",
      "dest": "return: return [49286,49292]"
    },
    {
      "src": "identifier: timePassed [38525,38535]",
      "dest": "identifier: timePassed [45177,45187]"
    },
    {
      "src": "uint256: uint256 [38133,38140]",
      "dest": "uint256: uint256 [44785,44792]"
    },
    {
      "src": "identifier: subscribers [11630,11641]",
      "dest": "identifier: subscribers [13494,13505]"
    },
    {
      "src": "identifier: TOTAL_EPOCHS [39347,39359]",
      "dest": "identifier: TOTAL_EPOCHS [46117,46129]"
    },
    {
      "src": "}: } [39436,39437]",
      "dest": "}: } [46206,46207]"
    },
    {
      "src": "type_name [37374,37381]",
      "dest": "type_name [45680,45687]"
    },
    {
      "src": "function: function [7231,7239]",
      "dest": "function: function [9141,9149]"
    },
    {
      "src": ".: . [13883,13884]",
      "dest": ".: . [15747,15748]"
    },
    {
      "src": "type_name [15705,15709]",
      "dest": "type_name [17516,17520]"
    },
    {
      "src": "primitive_type [9843,9850]",
      "dest": "primitive_type [11707,11714]"
    },
    {
      "src": "primitive_type [11414,11421]",
      "dest": "primitive_type [13278,13285]"
    },
    {
      "src": "primitive_type [40561,40568]",
      "dest": "primitive_type [47331,47338]"
    },
    {
      "src": "member_expression [30405,30420]",
      "dest": "member_expression [36246,36261]"
    },
    {
      "src": "address: address [29812,29819]",
      "dest": "address: address [37113,37120]"
    },
    {
      "src": "emit_statement [12175,12235]",
      "dest": "emit_statement [14039,14099]"
    },
    {
      "src": "): ) [31835,31836]",
      "dest": "): ) [20481,20482]"
    },
    {
      "src": "identifier: a [2615,2616]",
      "dest": "identifier: a [4586,4587]"
    },
    {
      "src": "call_argument [36240,36273]",
      "dest": "call_argument [43111,43144]"
    },
    {
      "src": "identifier: attribute [10007,10016]",
      "dest": "identifier: attribute [11871,11880]"
    },
    {
      "src": "type_name [9644,9651]",
      "dest": "type_name [11508,11515]"
    },
    {
      "src": "call_argument [36206,36238]",
      "dest": "call_argument [43077,43109]"
    },
    {
      "src": "identifier: add [42148,42151]",
      "dest": "identifier: add [48688,48691]"
    },
    {
      "src": "(: ( [6497,6498]",
      "dest": "(: ( [8407,8408]"
    },
    {
      "src": "contract_body [8316,8447]",
      "dest": "contract_body [10180,10311]"
    },
    {
      "src": "-: - [39422,39423]",
      "dest": "-: - [46192,46193]"
    },
    {
      "src": "{: { [20898,20899]",
      "dest": "{: { [34538,34539]"
    },
    {
      "src": ">: > [38871,38872]",
      "dest": ">: > [45523,45524]"
    },
    {
      "src": ",: , [29062,29063]",
      "dest": ",: , [48905,48906]"
    },
    {
      "src": "uint256: uint256 [2670,2677]",
      "dest": "uint256: uint256 [4641,4648]"
    },
    {
      "src": "parameter [31058,31065]",
      "dest": "parameter [19704,19711]"
    },
    {
      "src": "=>: => [9247,9249]",
      "dest": "=>: => [11111,11113]"
    },
    {
      "src": "primitive_type [29018,29022]",
      "dest": "primitive_type [32131,32135]"
    },
    {
      "src": "uint256: uint256 [37830,37837]",
      "dest": "uint256: uint256 [44482,44489]"
    },
    {
      "src": "external: external [8435,8443]",
      "dest": "external: external [10299,10307]"
    },
    {
      "src": "call_expression [4715,4752]",
      "dest": "call_expression [6686,6723]"
    },
    {
      "src": "): ) [20896,20897]",
      "dest": "): ) [34536,34537]"
    },
    {
      "src": "function_definition [6479,6562]",
      "dest": "function_definition [8389,8472]"
    },
    {
      "src": "return: return [40125,40131]",
      "dest": "return: return [46895,46901]"
    },
    {
      "src": "identifier: _value [28992,28998]",
      "dest": "identifier: amount [48861,48867]"
    },
    {
      "src": "function: function [8323,8331]",
      "dest": "function: function [10187,10195]"
    },
    {
      "src": "type_name [6553,6560]",
      "dest": "type_name [8463,8470]"
    },
    {
      "src": "(: ( [11393,11394]",
      "dest": "(: ( [13257,13258]"
    },
    {
      "src": "\": \" [34959,34960]",
      "dest": "\": \" [43035,43036]"
    },
    {
      "src": "call_expression [14450,14480]",
      "dest": "call_expression [16314,16344]"
    },
    {
      "src": "): ) [2345,2346]",
      "dest": "): ) [4316,4317]"
    },
    {
      "src": "return: return [13071,13077]",
      "dest": "return: return [14935,14941]"
    },
    {
      "src": "identifier: underflowMessage [18030,18046]",
      "dest": "identifier: errorMessage [27328,27340]"
    },
    {
      "src": "uint256: uint256 [1446,1453]",
      "dest": "uint256: uint256 [3417,3424]"
    },
    {
      "src": ",: , [31443,31444]",
      "dest": ",: , [20089,20090]"
    },
    {
      "src": "primitive_type [37830,37837]",
      "dest": "primitive_type [44482,44489]"
    },
    {
      "src": "type_cast_expression [14315,14328]",
      "dest": "type_cast_expression [16179,16192]"
    },
    {
      "src": "returns: returns [12880,12887]",
      "dest": "returns: returns [14744,14751]"
    },
    {
      "src": "string [31619,31631]",
      "dest": "string [20265,20277]"
    },
    {
      "src": "array_access [12389,12403]",
      "dest": "array_access [14253,14267]"
    },
    {
      "src": "state_mutability [6539,6543]",
      "dest": "state_mutability [8449,8453]"
    },
    {
      "src": "expression_statement [30488,30545]",
      "dest": "expression_statement [24373,24447]"
    },
    {
      "src": "call_argument [11295,11302]",
      "dest": "call_argument [13159,13166]"
    },
    {
      "src": "]: ] [37539,37540]",
      "dest": "]: ] [44189,44190]"
    },
    {
      "src": "): ) [9790,9791]",
      "dest": "): ) [11654,11655]"
    },
    {
      "src": "parameter [12925,12932]",
      "dest": "parameter [14789,14796]"
    },
    {
      "src": "identifier: _spender [23495,23503]",
      "dest": "identifier: spender [37621,37628]"
    },
    {
      "src": "): ) [11738,11739]",
      "dest": "): ) [13602,13603]"
    },
    {
      "src": ".: . [39605,39606]",
      "dest": ".: . [46375,46376]"
    },
    {
      "src": "state_mutability [37360,37364]",
      "dest": "state_mutability [45666,45670]"
    },
    {
      "src": "parameter [10618,10636]",
      "dest": "parameter [12482,12500]"
    },
    {
      "src": "contract_declaration [8451,15462]",
      "dest": "contract_declaration [10315,17326]"
    },
    {
      "src": "[: [ [13438,13439]",
      "dest": "[: [ [15302,15303]"
    },
    {
      "src": "(: ( [40697,40698]",
      "dest": "(: ( [47467,47468]"
    },
    {
      "src": ",: , [980,981]",
      "dest": ",: , [2951,2952]"
    },
    {
      "src": "bytes32: bytes32 [12925,12932]",
      "dest": "bytes32: bytes32 [14789,14796]"
    },
    {
      "src": "event_paramater [20128,20151]",
      "dest": "event_paramater [30766,30789]"
    },
    {
      "src": "call_argument [1072,1078]",
      "dest": "call_argument [3043,3049]"
    },
    {
      "src": "]: ] [11288,11289]",
      "dest": "]: ] [13152,13153]"
    },
    {
      "src": "mapping: mapping [15832,15839]",
      "dest": "mapping: mapping [17643,17650]"
    },
    {
      "src": "call_expression [1064,1110]",
      "dest": "call_expression [3035,3081]"
    },
    {
      "src": "call_argument [10904,10910]",
      "dest": "call_argument [12768,12774]"
    },
    {
      "src": "identifier: mod [4715,4718]",
      "dest": "identifier: mod [6686,6689]"
    },
    {
      "src": "parameter [5724,5731]",
      "dest": "parameter [7634,7641]"
    },
    {
      "src": "visibility [4665,4673]",
      "dest": "visibility [6636,6644]"
    },
    {
      "src": "\": \" [42250,42251]",
      "dest": "\": \" [48790,48791]"
    },
    {
      "src": "identifier: newOwner [9660,9668]",
      "dest": "identifier: newOwner [11524,11532]"
    },
    {
      "src": "user_defined_type [9549,9562]",
      "dest": "user_defined_type [11413,11426]"
    },
    {
      "src": "}: } [14916,14917]",
      "dest": "}: } [16780,16781]"
    },
    {
      "src": "identifier: a [1882,1883]",
      "dest": "identifier: a [3853,3854]"
    },
    {
      "src": "primitive_type [15705,15709]",
      "dest": "primitive_type [17516,17520]"
    },
    {
      "src": "view: view [13548,13552]",
      "dest": "view: view [15412,15416]"
    },
    {
      "src": "return_type_definition [3964,3981]",
      "dest": "return_type_definition [5935,5952]"
    },
    {
      "src": ",: , [34957,34958]",
      "dest": ",: , [43033,43034]"
    },
    {
      "src": "variable_declaration [13792,13823]",
      "dest": "variable_declaration [15656,15687]"
    },
    {
      "src": "identifier: passed [40097,40103]",
      "dest": "identifier: passed [46867,46873]"
    },
    {
      "src": "address: address [30964,30971]",
      "dest": "address: address [19610,19617]"
    },
    {
      "src": "comment: // Returns the exact value of the attribute, as well as its metadata [12711,12779]",
      "dest": "comment: // Returns the exact value of the attribute, as well as its metadata [14575,14643]"
    },
    {
      "src": "primitive_type [42072,42079]",
      "dest": "primitive_type [48612,48619]"
    },
    {
      "src": "\": \" [9521,9522]",
      "dest": "\": \" [11385,11386]"
    },
    {
      "src": "type_name [10944,10959]",
      "dest": "type_name [12808,12823]"
    },
    {
      "src": "member_expression [11710,11737]",
      "dest": "member_expression [13574,13601]"
    },
    {
      "src": "identifier: require [1064,1071]",
      "dest": "identifier: require [3035,3042]"
    },
    {
      "src": "): ) [40108,40109]",
      "dest": "): ) [46878,46879]"
    },
    {
      "src": "user_defined_type [13792,13805]",
      "dest": "user_defined_type [15656,15669]"
    },
    {
      "src": "identifier: a [5398,5399]",
      "dest": "identifier: a [7369,7370]"
    },
    {
      "src": "identifier: add [30417,30420]",
      "dest": "identifier: add [36258,36261]"
    },
    {
      "src": "parameter [27818,27828]",
      "dest": "parameter [38621,38631]"
    },
    {
      "src": "binary_expression [2682,2687]",
      "dest": "binary_expression [4653,4658]"
    },
    {
      "src": "function_definition [7623,7720]",
      "dest": "function_definition [9533,9630]"
    },
    {
      "src": "): ) [29821,29822]",
      "dest": "): ) [37122,37123]"
    },
    {
      "src": "if_statement [38849,38933]",
      "dest": "if_statement [45501,45585]"
    },
    {
      "src": "address: address [33447,33454]",
      "dest": "address: address [39593,39600]"
    },
    {
      "src": "function: function [42563,42571]",
      "dest": "function: function [30878,30886]"
    },
    {
      "src": "identifier: _spender [22965,22973]",
      "dest": "identifier: owner [37606,37611]"
    },
    {
      "src": "identifier: _who [12815,12819]",
      "dest": "identifier: _who [14679,14683]"
    },
    {
      "src": "\": \" [34019,34020]",
      "dest": "\": \" [40249,40250]"
    },
    {
      "src": "primitive_type [37448,37455]",
      "dest": "primitive_type [42264,42271]"
    },
    {
      "src": "identifier: LOCK_START [40132,40142]",
      "dest": "identifier: LOCK_START [46902,46912]"
    },
    {
      "src": "call_argument [39422,39424]",
      "dest": "call_argument [46192,46194]"
    },
    {
      "src": ",: , [11347,11348]",
      "dest": ",: , [13211,13212]"
    },
    {
      "src": "call_argument [12441,12447]",
      "dest": "call_argument [14305,14311]"
    },
    {
      "src": "library: library [695,702]",
      "dest": "library: library [2666,2673]"
    },
    {
      "src": "%: % [5400,5401]",
      "dest": "%: % [7371,7372]"
    },
    {
      "src": "uint256: uint256 [35553,35560]",
      "dest": "uint256: uint256 [41468,41475]"
    },
    {
      "src": "uint256: uint256 [13562,13569]",
      "dest": "uint256: uint256 [15426,15433]"
    },
    {
      "src": "call_argument [30260,30263]",
      "dest": "call_argument [27590,27594]"
    },
    {
      "src": "primitive_type [20892,20896]",
      "dest": "primitive_type [34532,34536]"
    },
    {
      "src": "assignment_expression [15395,15415]",
      "dest": "assignment_expression [17259,17279]"
    },
    {
      "src": "primitive_type [15851,15858]",
      "dest": "primitive_type [17662,17669]"
    },
    {
      "src": "{: { [8497,8498]",
      "dest": "{: { [10361,10362]"
    },
    {
      "src": "identifier: sender [12227,12233]",
      "dest": "identifier: sender [14091,14097]"
    },
    {
      "src": "address: address [9644,9651]",
      "dest": "address: address [11508,11515]"
    },
    {
      "src": "address: address [6136,6143]",
      "dest": "address: address [8046,8053]"
    },
    {
      "src": "): ) [11428,11429]",
      "dest": "): ) [13292,13293]"
    },
    {
      "src": ",: , [12146,12147]",
      "dest": ",: , [14010,14011]"
    },
    {
      "src": "member_expression [31386,31396]",
      "dest": "member_expression [20032,20042]"
    },
    {
      "src": "function_body [40917,40953]",
      "dest": "function_body [47687,47723]"
    },
    {
      "src": "call_argument [14681,14693]",
      "dest": "call_argument [16545,16557]"
    },
    {
      "src": "parameter [11213,11234]",
      "dest": "parameter [13077,13098]"
    },
    {
      "src": "visibility [21107,21115]",
      "dest": "visibility [25506,25514]"
    },
    {
      "src": "primitive_type [1480,1487]",
      "dest": "primitive_type [3451,3458]"
    },
    {
      "src": "identifier: value [8516,8521]",
      "dest": "identifier: value [10380,10385]"
    },
    {
      "src": "call_argument [3348,3349]",
      "dest": "call_argument [5319,5320]"
    },
    {
      "src": "identifier: getAttribute [12794,12806]",
      "dest": "identifier: getAttribute [14658,14670]"
    },
    {
      "src": "array_access [36923,36945]",
      "dest": "array_access [43756,43778]"
    },
    {
      "src": "indexed: indexed [8157,8164]",
      "dest": "indexed: indexed [10067,10074]"
    },
    {
      "src": "pragma_directive [91,114]",
      "dest": "pragma_directive [7389,7412]"
    },
    {
      "src": "member_expression [39569,39586]",
      "dest": "member_expression [46339,46356]"
    },
    {
      "src": ".: . [10438,10439]",
      "dest": ".: . [12302,12303]"
    },
    {
      "src": "primitive_type [31141,31148]",
      "dest": "primitive_type [19787,19794]"
    },
    {
      "src": "visibility [6530,6538]",
      "dest": "visibility [8440,8448]"
    },
    {
      "src": "identifier: _to [30160,30163]",
      "dest": "identifier: account [36368,36375]"
    },
    {
      "src": "comment: /**      * @dev Transfer tokens to another account under the lockup schedule      * Emits a transfer event showing a transfer to the recipient      * Only the registry can call this function      * Once registered, the distribution cannot be registered again      * @param receiver Address to receive the tokens      * @param amount Tokens to be transferred      */ [36363,36735]",
      "dest": "comment: /**      * @dev Transfer function which includes unlocked tokens      * Locked tokens can always be transfered back to the returns address      * Transferring to owner allows re-issuance of funds through registry      *      * @param _from The address to send tokens from      * @param _to The address that will receive the tokens      * @param _value The amount of tokens to be transferred      */ [40981,41387]"
    },
    {
      "src": ".: . [14328,14329]",
      "dest": ".: . [16192,16193]"
    },
    {
      "src": "(: ( [6135,6136]",
      "dest": "(: ( [8045,8046]"
    },
    {
      "src": "uint256: uint256 [12903,12910]",
      "dest": "uint256: uint256 [14767,14774]"
    },
    {
      "src": "member_expression [14015,14032]",
      "dest": "member_expression [15879,15896]"
    },
    {
      "src": "==: == [10392,10394]",
      "dest": "==: == [12256,12258]"
    },
    {
      "src": "number_literal: 0 [40107,40108]",
      "dest": "number_literal: 0 [46877,46878]"
    },
    {
      "src": ",: , [36095,36096]",
      "dest": ",: , [42952,42953]"
    },
    {
      "src": "identifier: _from [28884,28889]",
      "dest": "identifier: spender [32481,32488]"
    },
    {
      "src": "member_expression [40660,40674]",
      "dest": "member_expression [47430,47444]"
    },
    {
      "src": "visibility [18571,18579]",
      "dest": "visibility [25937,25945]"
    },
    {
      "src": "identifier: block [12148,12153]",
      "dest": "identifier: block [14012,14017]"
    },
    {
      "src": "function_definition [5821,5889]",
      "dest": "function_definition [7731,7799]"
    },
    {
      "src": ",: , [36338,36339]",
      "dest": ",: , [43175,43176]"
    },
    {
      "src": "number_literal: 0 [15449,15450]",
      "dest": "number_literal: 0 [17313,17314]"
    },
    {
      "src": "string_literal [23868,23892]",
      "dest": "string_literal [35324,35363]"
    },
    {
      "src": "solidity_version:  0.6.10 [32528,32535]",
      "dest": "solidity_version:  0.6.10 [19289,19296]"
    },
    {
      "src": "solidity_version:  0.6.10 [27341,27348]",
      "dest": "solidity_version:  0.6.10 [38691,38698]"
    },
    {
      "src": "bool: bool [7299,7303]",
      "dest": "bool: bool [9209,9213]"
    },
    {
      "src": "solidity_version:  0.6.10 [24271,24278]",
      "dest": "solidity_version:  0.6.10 [47745,47752]"
    },
    {
      "src": "pure: pure [3303,3307]",
      "dest": "pure: pure [5274,5278]"
    },
    {
      "src": "type_name [6155,6162]",
      "dest": "type_name [8065,8072]"
    },
    {
      "src": "primitive_type [5331,5338]",
      "dest": "primitive_type [7302,7309]"
    },
    {
      "src": "indexed: indexed [9652,9659]",
      "dest": "indexed: indexed [11516,11523]"
    },
    {
      "src": "type_name [40908,40915]",
      "dest": "type_name [47678,47685]"
    },
    {
      "src": "primitive_type [14389,14396]",
      "dest": "primitive_type [16253,16260]"
    },
    {
      "src": "identifier: _who [23472,23476]",
      "dest": "identifier: sender [35223,35229]"
    },
    {
      "src": "comment: /**      * @dev Throws if called by any account other than the owner.      */ [31472,31551]",
      "dest": "comment: /**      * @dev Throws if called by any account other than the owner.      */ [20118,20197]"
    },
    {
      "src": "identifier: sender [12060,12066]",
      "dest": "identifier: sender [13924,13930]"
    },
    {
      "src": "address: address [13395,13402]",
      "dest": "address: address [15259,15266]"
    },
    {
      "src": "identifier: ClaimableContract [30885,30902]",
      "dest": "identifier: ClaimableContract [19531,19548]"
    },
    {
      "src": "identifier: _value [30165,30171]",
      "dest": "identifier: amount [36377,36383]"
    },
    {
      "src": "function: function [13309,13317]",
      "dest": "function: function [15173,15181]"
    },
    {
      "src": "==: == [33998,34000]",
      "dest": "==: == [40228,40230]"
    },
    {
      "src": "): ) [42579,42580]",
      "dest": "): ) [30892,30893]"
    },
    {
      "src": "=>: => [33455,33457]",
      "dest": "=>: => [39601,39603]"
    },
    {
      "src": "): ) [3292,3293]",
      "dest": "): ) [5263,5264]"
    },
    {
      "src": "uint8: uint8 [42340,42345]",
      "dest": "uint8: uint8 [48980,48985]"
    },
    {
      "src": "identifier: errorMessage [4008,4020]",
      "dest": "identifier: errorMessage [5979,5991]"
    },
    {
      "src": "returns: returns [1471,1478]",
      "dest": "returns: returns [3442,3449]"
    },
    {
      "src": "returns: returns [20883,20890]",
      "dest": "returns: returns [34523,34530]"
    },
    {
      "src": "identifier: require [36840,36847]",
      "dest": "identifier: require [43608,43615]"
    },
    {
      "src": "visibility [11800,11806]",
      "dest": "visibility [13664,13670]"
    },
    {
      "src": "identifier: pendingOwner [15149,15161]",
      "dest": "identifier: pendingOwner [17013,17025]"
    },
    {
      "src": "identifier: pendingOwner [31022,31034]",
      "dest": "identifier: pendingOwner [19668,19680]"
    },
    {
      "src": "return_statement [22886,22898]",
      "dest": "return_statement [33292,33304]"
    },
    {
      "src": "function: function [10279,10287]",
      "dest": "function: function [12143,12151]"
    },
    {
      "src": "): ) [30104,30105]",
      "dest": "): ) [36062,36063]"
    },
    {
      "src": "string [3354,3382]",
      "dest": "string [5325,5353]"
    },
    {
      "src": "identifier: OwnershipTransferred [15343,15363]",
      "dest": "identifier: OwnershipTransferred [17207,17227]"
    },
    {
      "src": "]: ] [12106,12107]",
      "dest": "]: ] [13970,13971]"
    },
    {
      "src": "state_mutability [3303,3307]",
      "dest": "state_mutability [5274,5278]"
    },
    {
      "src": "pure: pure [42588,42592]",
      "dest": "pure: pure [30909,30913]"
    },
    {
      "src": "type_name [4032,4039]",
      "dest": "type_name [6003,6010]"
    },
    {
      "src": "[: [ [11488,11489]",
      "dest": "[: [ [13352,13353]"
    },
    {
      "src": "mapping: mapping [15884,15891]",
      "dest": "mapping: mapping [17695,17702]"
    },
    {
      "src": "address: address [9613,9620]",
      "dest": "address: address [11477,11484]"
    },
    {
      "src": "uint256: uint256 [19963,19970]",
      "dest": "uint256: uint256 [30274,30281]"
    },
    {
      "src": "identifier: msg [31386,31389]",
      "dest": "identifier: msg [20032,20035]"
    },
    {
      "src": "identifier: this [14323,14327]",
      "dest": "identifier: this [16187,16191]"
    },
    {
      "src": "return_type_definition [7705,7719]",
      "dest": "return_type_definition [9615,9629]"
    },
    {
      "src": "function_definition [13150,13301]",
      "dest": "function_definition [15014,15165]"
    },
    {
      "src": "visibility [22778,22784]",
      "dest": "visibility [33074,33080]"
    },
    {
      "src": "\": \" [34357,34358]",
      "dest": "\": \" [40587,40588]"
    },
    {
      "src": "call_expression [37486,37500]",
      "dest": "call_expression [45724,45738]"
    },
    {
      "src": "parameter [28846,28850]",
      "dest": "parameter [32441,32445]"
    },
    {
      "src": "): ) [42100,42101]",
      "dest": "): ) [48640,48641]"
    },
    {
      "src": "call_expression [19232,19276]",
      "dest": "call_expression [35375,35446]"
    },
    {
      "src": "(: ( [14869,14870]",
      "dest": "(: ( [16733,16734]"
    },
    {
      "src": "type_name [7645,7652]",
      "dest": "type_name [9555,9562]"
    },
    {
      "src": "(: ( [5330,5331]",
      "dest": "(: ( [7301,7302]"
    },
    {
      "src": "call_expression [34370,34450]",
      "dest": "call_expression [40600,40680]"
    },
    {
      "src": "parameter [3900,3909]",
      "dest": "parameter [5871,5880]"
    },
    {
      "src": ",: , [13352,13353]",
      "dest": ",: , [15216,15217]"
    },
    {
      "src": "identifier: epochsPassed [37486,37498]",
      "dest": "identifier: epochsPassed [45724,45736]"
    },
    {
      "src": "external: external [42102,42110]",
      "dest": "external: external [48642,48650]"
    },
    {
      "src": "==: == [39541,39543]",
      "dest": "==: == [46311,46313]"
    },
    {
      "src": "function_body [42617,42648]",
      "dest": "function_body [49166,49204]"
    },
    {
      "src": "call_expression [41708,41750]",
      "dest": "call_expression [48382,48425]"
    },
    {
      "src": "state_variable_declaration [9530,9578]",
      "dest": "state_variable_declaration [11394,11442]"
    },
    {
      "src": "variable_declaration_statement [12313,12344]",
      "dest": "variable_declaration_statement [14177,14208]"
    },
    {
      "src": "call_expression [35701,35781]",
      "dest": "call_expression [41843,41923]"
    },
    {
      "src": "call_argument [36923,36950]",
      "dest": "call_argument [43783,43789]"
    },
    {
      "src": "): ) [37161,37162]",
      "dest": "): ) [43875,43876]"
    },
    {
      "src": "type_name [13177,13184]",
      "dest": "type_name [15041,15048]"
    },
    {
      "src": "type_cast_expression [14466,14479]",
      "dest": "type_cast_expression [16330,16343]"
    },
    {
      "src": "comment: /**      * @dev sets the original `owner` of the contract to the sender      * at construction. Must then be reinitialized      */ [31206,31339]",
      "dest": "comment: /**      * @dev sets the original `owner` of the contract to the sender      * at construction. Must then be reinitialized      */ [19852,19985]"
    },
    {
      "src": "state_mutability [37816,37820]",
      "dest": "state_mutability [44468,44472]"
    },
    {
      "src": "comment: /**      * @dev Allows the current owner to set the pendingOwner address.      * @param newOwner The address to transfer ownership to.      */ [14925,15070]",
      "dest": "comment: /**      * @dev Allows the current owner to set the pendingOwner address.      * @param newOwner The address to transfer ownership to.      */ [16789,16934]"
    },
    {
      "src": "call_argument [14660,14679]",
      "dest": "call_argument [16524,16543]"
    },
    {
      "src": "primitive_type [4688,4695]",
      "dest": "primitive_type [6659,6666]"
    },
    {
      "src": ",: , [3909,3910]",
      "dest": ",: , [5880,5881]"
    },
    {
      "src": "=: = [32392,32393]",
      "dest": "=: = [21038,21039]"
    },
    {
      "src": "type_name [14251,14266]",
      "dest": "type_name [16115,16130]"
    },
    {
      "src": "type_name [7954,7961]",
      "dest": "type_name [9864,9871]"
    },
    {
      "src": "emit: emit [29791,29795]",
      "dest": "emit: emit [37090,37094]"
    },
    {
      "src": "event_paramater [19006,19026]",
      "dest": "event_paramater [30506,30526]"
    },
    {
      "src": "identifier: _addresses [14015,14025]",
      "dest": "identifier: _addresses [15879,15889]"
    },
    {
      "src": "primitive_type [33458,33465]",
      "dest": "primitive_type [39604,39611]"
    },
    {
      "src": "return: return [31078,31084]",
      "dest": "return: return [19724,19730]"
    },
    {
      "src": "): ) [34871,34872]",
      "dest": "): ) [42242,42243]"
    },
    {
      "src": "visibility [14402,14410]",
      "dest": "visibility [16266,16274]"
    },
    {
      "src": "visibility [40887,40893]",
      "dest": "visibility [47657,47663]"
    },
    {
      "src": "[: [ [14088,14089]",
      "dest": "[: [ [15952,15953]"
    },
    {
      "src": "memory: memory [42509,42515]",
      "dest": "memory: memory [31111,31117]"
    },
    {
      "src": "call_expression [34923,34982]",
      "dest": "call_expression [42999,43058]"
    },
    {
      "src": "primitive_type [37374,37381]",
      "dest": "primitive_type [45680,45687]"
    },
    {
      "src": "type_name [27818,27825]",
      "dest": "type_name [38621,38628]"
    },
    {
      "src": "function: function [36067,36075]",
      "dest": "function: function [42924,42932]"
    },
    {
      "src": "(: ( [42135,42136]",
      "dest": "(: ( [48675,48676]"
    },
    {
      "src": "state_mutability [18287,18291]",
      "dest": "state_mutability [49137,49141]"
    },
    {
      "src": "return_type_definition [39924,39941]",
      "dest": "return_type_definition [46694,46711]"
    },
    {
      "src": "type_name [8172,8179]",
      "dest": "type_name [10082,10089]"
    },
    {
      "src": "modifier_invocation [32250,32266]",
      "dest": "modifier_invocation [20896,20912]"
    },
    {
      "src": "{: { [13404,13405]",
      "dest": "{: { [15268,15269]"
    },
    {
      "src": "expression_statement [21825,21885]",
      "dest": "expression_statement [33825,33907]"
    },
    {
      "src": "identifier: _transferFromAllArgs [28863,28883]",
      "dest": "identifier: _approve [32458,32466]"
    },
    {
      "src": "call_argument [34330,34331]",
      "dest": "call_argument [40560,40561]"
    },
    {
      "src": "): ) [12839,12840]",
      "dest": "): ) [14703,14704]"
    },
    {
      "src": "state_mutability [13381,13385]",
      "dest": "state_mutability [15245,15249]"
    },
    {
      "src": "identifier: timestamp [38390,38399]",
      "dest": "identifier: timestamp [45042,45051]"
    },
    {
      "src": "inheritance_specifier [41377,41392]",
      "dest": "inheritance_specifier [48092,48107]"
    },
    {
      "src": "array_access [12656,12672]",
      "dest": "array_access [14520,14536]"
    },
    {
      "src": "event_paramater [20153,20166]",
      "dest": "event_paramater [30791,30804]"
    },
    {
      "src": "identifier: c [4156,4157]",
      "dest": "identifier: c [6127,6128]"
    },
    {
      "src": "): ) [40730,40731]",
      "dest": "): ) [47500,47501]"
    },
    {
      "src": "address: address [12577,12584]",
      "dest": "address: address [14441,14448]"
    },
    {
      "src": "modifier_invocation [15310,15326]",
      "dest": "modifier_invocation [17174,17190]"
    },
    {
      "src": "identifier: Transfer [18997,19005]",
      "dest": "identifier: Transfer [30497,30505]"
    },
    {
      "src": "primitive_type [13395,13402]",
      "dest": "primitive_type [15259,15266]"
    },
    {
      "src": "}: } [4759,4760]",
      "dest": "}: } [6730,6731]"
    },
    {
      "src": "call_expression [28382,28425]",
      "dest": "call_expression [37753,37821]"
    },
    {
      "src": "uint256: uint256 [42085,42092]",
      "dest": "uint256: uint256 [48625,48632]"
    },
    {
      "src": "visibility [42102,42110]",
      "dest": "visibility [48642,48650]"
    },
    {
      "src": "identifier: _syncer [11227,11234]",
      "dest": "identifier: _syncer [13091,13098]"
    },
    {
      "src": "identifier: _value [35561,35567]",
      "dest": "identifier: _value [41476,41482]"
    },
    {
      "src": "return_type_definition [11812,11829]",
      "dest": "return_type_definition [13676,13693]"
    },
    {
      "src": "identifier: c [4040,4041]",
      "dest": "identifier: c [6011,6012]"
    },
    {
      "src": "{: { [11830,11831]",
      "dest": "{: { [13694,13695]"
    },
    {
      "src": "variable_declaration [12245,12276]",
      "dest": "variable_declaration [14109,14140]"
    },
    {
      "src": "): ) [42428,42429]",
      "dest": "): ) [49068,49069]"
    },
    {
      "src": "type_name [36783,36790]",
      "dest": "type_name [43551,43558]"
    },
    {
      "src": "type_name [19006,19013]",
      "dest": "type_name [30506,30513]"
    },
    {
      "src": "(: ( [34794,34795]",
      "dest": "(: ( [42212,42213]"
    },
    {
      "src": "uint256: uint256 [11414,11421]",
      "dest": "uint256: uint256 [13278,13285]"
    },
    {
      "src": "}: } [34062,34063]",
      "dest": "}: } [40292,40293]"
    },
    {
      "src": "=: = [15162,15163]",
      "dest": "=: = [17026,17027]"
    },
    {
      "src": "function_body [11830,11886]",
      "dest": "function_body [13694,13750]"
    },
    {
      "src": "): ) [13133,13134]",
      "dest": "): ) [14997,14998]"
    },
    {
      "src": "identifier: targets [12269,12276]",
      "dest": "identifier: targets [14133,14140]"
    },
    {
      "src": "identifier: b [3919,3920]",
      "dest": "identifier: b [5890,5891]"
    },
    {
      "src": "identifier: targets [11028,11035]",
      "dest": "identifier: targets [12892,12899]"
    },
    {
      "src": "primitive_type [12903,12910]",
      "dest": "primitive_type [14767,14774]"
    },
    {
      "src": "identifier: hasAttribute [12564,12576]",
      "dest": "identifier: hasAttribute [14428,14440]"
    },
    {
      "src": "parameter [20892,20896]",
      "dest": "parameter [34532,34536]"
    },
    {
      "src": "identifier: TOTAL_EPOCHS [37561,37573]",
      "dest": "identifier: TOTAL_EPOCHS [44213,44225]"
    },
    {
      "src": "type_name [8413,8420]",
      "dest": "type_name [10277,10284]"
    },
    {
      "src": "visibility [28599,28607]",
      "dest": "visibility [21809,21817]"
    },
    {
      "src": "return_type_definition [13553,13570]",
      "dest": "return_type_definition [15417,15434]"
    },
    {
      "src": "identifier: newTimeLockRegistry [34299,34318]",
      "dest": "identifier: newTimeLockRegistry [40529,40548]"
    },
    {
      "src": "address: address [15840,15847]",
      "dest": "address: address [17651,17658]"
    },
    {
      "src": "identifier: onlyOwner [31566,31575]",
      "dest": "identifier: onlyOwner [20212,20221]"
    },
    {
      "src": "number_literal: 1 [39423,39424]",
      "dest": "number_literal: 1 [46193,46194]"
    },
    {
      "src": "): ) [34331,34332]",
      "dest": "): ) [40561,40562]"
    },
    {
      "src": "call_argument [40675,40692]",
      "dest": "call_argument [47445,47462]"
    },
    {
      "src": "(: ( [42601,42602]",
      "dest": "(: ( [30922,30923]"
    },
    {
      "src": "identifier: receiver [36773,36781]",
      "dest": "identifier: receiver [43541,43549]"
    },
    {
      "src": "identifier: onlyOwner [14281,14290]",
      "dest": "identifier: onlyOwner [16145,16154]"
    },
    {
      "src": "identifier: _attribute [13529,13539]",
      "dest": "identifier: _attribute [15393,15403]"
    },
    {
      "src": "type_name [33568,33575]",
      "dest": "type_name [39714,39721]"
    },
    {
      "src": "member_expression [10829,10839]",
      "dest": "member_expression [12693,12703]"
    },
    {
      "src": "{: { [14421,14422]",
      "dest": "{: { [16285,16286]"
    },
    {
      "src": "]: ] [11698,11699]",
      "dest": "]: ] [13562,13563]"
    },
    {
      "src": "): ) [12067,12068]",
      "dest": "): ) [13931,13932]"
    },
    {
      "src": "primitive_type [7661,7668]",
      "dest": "primitive_type [9571,9578]"
    },
    {
      "src": "primitive_type [22752,22759]",
      "dest": "primitive_type [34483,34490]"
    },
    {
      "src": "type_name [15727,15734]",
      "dest": "type_name [17538,17545]"
    },
    {
      "src": "type_name [38706,38713]",
      "dest": "type_name [45358,45365]"
    },
    {
      "src": "(: ( [31786,31787]",
      "dest": "(: ( [20432,20433]"
    },
    {
      "src": "primitive_type [9613,9620]",
      "dest": "primitive_type [11477,11484]"
    },
    {
      "src": "expression_statement [5351,5381]",
      "dest": "expression_statement [7322,7352]"
    },
    {
      "src": "function_body [15327,15459]",
      "dest": "function_body [17191,17323]"
    },
    {
      "src": ",: , [10607,10608]",
      "dest": ",: , [12471,12472]"
    },
    {
      "src": "uint256: uint256 [982,989]",
      "dest": "uint256: uint256 [2953,2960]"
    },
    {
      "src": "type_name [41458,41465]",
      "dest": "type_name [48150,48157]"
    },
    {
      "src": "variable_declaration_statement [14003,14033]",
      "dest": "variable_declaration_statement [15867,15897]"
    },
    {
      "src": "call_argument [40334,40360]",
      "dest": "call_argument [47104,47130]"
    },
    {
      "src": "string_literal [30429,30451]",
      "dest": "string_literal [35569,35609]"
    },
    {
      "src": "visibility [25636,25642]",
      "dest": "visibility [32107,32113]"
    },
    {
      "src": "identifier: a [3348,3349]",
      "dest": "identifier: a [5319,5320]"
    },
    {
      "src": "emit_statement [30134,30173]",
      "dest": "emit_statement [36342,36385]"
    },
    {
      "src": "identifier: totalSupply [5687,5698]",
      "dest": "identifier: totalSupply [7597,7608]"
    },
    {
      "src": "identifier: _value [11991,11997]",
      "dest": "identifier: _value [13855,13861]"
    },
    {
      "src": ",: , [35119,35120]",
      "dest": ",: , [42698,42699]"
    },
    {
      "src": "]: ] [13848,13849]",
      "dest": "]: ] [15712,15713]"
    },
    {
      "src": "while: while [13901,13906]",
      "dest": "while: while [15765,15770]"
    },
    {
      "src": "primitive_type [41458,41465]",
      "dest": "primitive_type [48150,48157]"
    },
    {
      "src": "solidity_pragma_token [30633,30648]",
      "dest": "solidity_pragma_token [17337,17352]"
    },
    {
      "src": "identifier: _admin [10417,10423]",
      "dest": "identifier: _admin [12281,12287]"
    },
    {
      "src": "returns: returns [29009,29016]",
      "dest": "returns: returns [32122,32129]"
    },
    {
      "src": "function_definition [35467,35858]",
      "dest": "function_definition [41393,41977]"
    },
    {
      "src": ",: , [12427,12428]",
      "dest": ",: , [14291,14292]"
    },
    {
      "src": "comment: /**      * @dev Get timestamp of final epoch      * @return Timestamp of when the last epoch ends and all funds are released      */ [40377,40512]",
      "dest": "comment: /**      * @dev Get timestamp of final epoch      * @return Timestamp of when the last epoch ends and all funds are released      */ [47147,47282]"
    },
    {
      "src": "identifier: _index [11526,11532]",
      "dest": "identifier: _index [13390,13396]"
    },
    {
      "src": "{: { [4697,4698]",
      "dest": "{: { [6668,6669]"
    },
    {
      "src": "returns: returns [7290,7297]",
      "dest": "returns: returns [9200,9207]"
    },
    {
      "src": "identifier: ValTokenWithHook [33303,33319]",
      "dest": "identifier: ERC20 [39460,39465]"
    },
    {
      "src": "visibility [11430,11438]",
      "dest": "visibility [13294,13302]"
    },
    {
      "src": "true [20972,20976]",
      "dest": "true [34694,34698]"
    },
    {
      "src": "call_argument [10425,10483]",
      "dest": "call_argument [12289,12347]"
    },
    {
      "src": "call_expression [36198,36274]",
      "dest": "call_expression [43069,43145]"
    },
    {
      "src": "uint256: uint256 [15903,15910]",
      "dest": "uint256: uint256 [17714,17721]"
    },
    {
      "src": "[: [ [11721,11722]",
      "dest": "[: [ [13585,13586]"
    },
    {
      "src": "identifier: latestEpoch [39715,39726]",
      "dest": "identifier: latestEpoch [46485,46496]"
    },
    {
      "src": "parameter [15103,15119]",
      "dest": "parameter [16967,16983]"
    },
    {
      "src": "array_access [11664,11699]",
      "dest": "array_access [13528,13563]"
    },
    {
      "src": "identifier: add [40307,40310]",
      "dest": "identifier: add [47077,47080]"
    },
    {
      "src": "constant: constant [33576,33584]",
      "dest": "constant: constant [39722,39730]"
    },
    {
      "src": "(: ( [35108,35109]",
      "dest": "(: ( [42684,42685]"
    },
    {
      "src": "function: function [40518,40526]",
      "dest": "function: function [47288,47296]"
    },
    {
      "src": "parameter [27424,27437]",
      "dest": "parameter [26489,26502]"
    },
    {
      "src": "returns: returns [13223,13230]",
      "dest": "returns: returns [15087,15094]"
    },
    {
      "src": "comment: /**      * @dev Allows the pendingOwner address to finalize the transfer.      */ [32128,32211]",
      "dest": "comment: /**      * @dev Allows the pendingOwner address to finalize the transfer.      */ [20774,20857]"
    },
    {
      "src": "solidity_pragma_token [24263,24278]",
      "dest": "solidity_pragma_token [47737,47752]"
    },
    {
      "src": "memory: memory [13018,13024]",
      "dest": "memory: memory [14882,14888]"
    },
    {
      "src": "): ) [30971,30972]",
      "dest": "): ) [19617,19618]"
    },
    {
      "src": "primitive_type [36097,36104]",
      "dest": "primitive_type [42954,42961]"
    },
    {
      "src": "}: } [32454,32455]",
      "dest": "}: } [21100,21101]"
    },
    {
      "src": "visibility [5701,5709]",
      "dest": "visibility [7611,7619]"
    },
    {
      "src": "identifier: _value [29824,29830]",
      "dest": "identifier: amount [37125,37131]"
    },
    {
      "src": "\": \" [34041,34042]",
      "dest": "\": \" [40271,40272]"
    },
    {
      "src": "identifier: block [38216,38221]",
      "dest": "identifier: block [44868,44873]"
    },
    {
      "src": "call_argument [11122,11126]",
      "dest": "call_argument [12986,12990]"
    },
    {
      "src": "revert_statement [42243,42273]",
      "dest": "revert_statement [48783,48813]"
    },
    {
      "src": "expression_statement [14034,14042]",
      "dest": "expression_statement [15898,15906]"
    },
    {
      "src": "}: } [14220,14221]",
      "dest": "}: } [16084,16085]"
    },
    {
      "src": "string [36240,36273]",
      "dest": "string [43111,43144]"
    },
    {
      "src": "assignment_expression [30391,30452]",
      "dest": "assignment_expression [36232,36269]"
    },
    {
      "src": ",: , [12217,12218]",
      "dest": ",: , [14081,14082]"
    },
    {
      "src": "(: ( [1510,1511]",
      "dest": "(: ( [3481,3482]"
    },
    {
      "src": "array_access [10978,11001]",
      "dest": "array_access [12842,12865]"
    },
    {
      "src": "type_name [15884,15911]",
      "dest": "type_name [17695,17722]"
    },
    {
      "src": "]: ] [13059,13060]",
      "dest": "]: ] [14923,14924]"
    },
    {
      "src": "call_argument [34299,34332]",
      "dest": "call_argument [40529,40562]"
    },
    {
      "src": "uint256: uint256 [34851,34858]",
      "dest": "uint256: uint256 [42228,42235]"
    },
    {
      "src": "struct_member [8584,8602]",
      "dest": "struct_member [10448,10466]"
    },
    {
      "src": "): ) [32241,32242]",
      "dest": "): ) [20887,20888]"
    },
    {
      "src": "identifier: from [19022,19026]",
      "dest": "identifier: from [30522,30526]"
    },
    {
      "src": "call_argument [39733,39747]",
      "dest": "call_argument [46503,46517]"
    },
    {
      "src": "]: ] [35654,35655]",
      "dest": "]: ] [41542,41543]"
    },
    {
      "src": ",: , [21858,21859]",
      "dest": ",: , [33846,33847]"
    },
    {
      "src": "\": \" [42546,42547]",
      "dest": "\": \" [49297,49298]"
    },
    {
      "src": "{: { [30123,30124]",
      "dest": "{: { [36081,36082]"
    },
    {
      "src": "identifier: unlockedBalance [37776,37791]",
      "dest": "identifier: unlockedBalance [44428,44443]"
    },
    {
      "src": "function_definition [42563,42648]",
      "dest": "function_definition [30878,30938]"
    },
    {
      "src": "bool: bool [12632,12636]",
      "dest": "bool: bool [14496,14500]"
    },
    {
      "src": "\": \" [42635,42636]",
      "dest": "\": \" [49184,49185]"
    },
    {
      "src": ",: , [13519,13520]",
      "dest": ",: , [15383,15384]"
    },
    {
      "src": "event_paramater [9695,9714]",
      "dest": "event_paramater [11559,11578]"
    },
    {
      "src": "primitive_type [39188,39195]",
      "dest": "primitive_type [45958,45965]"
    },
    {
      "src": "identifier: require [31589,31596]",
      "dest": "identifier: require [20235,20242]"
    },
    {
      "src": "identifier: TOTAL_EPOCHS [33836,33848]",
      "dest": "identifier: TOTAL_EPOCHS [39982,39994]"
    },
    {
      "src": "\": \" [36952,36953]",
      "dest": "\": \" [36123,36124]"
    },
    {
      "src": "returns: returns [21799,21806]",
      "dest": "returns: returns [33799,33806]"
    },
    {
      "src": "(: ( [21849,21850]",
      "dest": "(: ( [33833,33834]"
    },
    {
      "src": "pragma: pragma [5479,5485]",
      "dest": "pragma: pragma [2062,2068]"
    },
    {
      "src": ".: . [11500,11501]",
      "dest": ".: . [13364,13365]"
    },
    {
      "src": "function_body [39942,40369]",
      "dest": "function_body [46712,47139]"
    },
    {
      "src": "(: ( [29962,29963]",
      "dest": "(: ( [37071,37072]"
    },
    {
      "src": "revert: revert [42243,42249]",
      "dest": "revert: revert [48783,48789]"
    },
    {
      "src": "identifier: length [13884,13890]",
      "dest": "identifier: length [15748,15754]"
    },
    {
      "src": "type_name [11460,11467]",
      "dest": "type_name [13324,13331]"
    },
    {
      "src": "): ) [3948,3949]",
      "dest": "): ) [5919,5920]"
    },
    {
      "src": "): ) [9668,9669]",
      "dest": "): ) [11532,11533]"
    },
    {
      "src": "member_expression [12389,12422]",
      "dest": "member_expression [14253,14286]"
    },
    {
      "src": "primitive_type [13507,13514]",
      "dest": "primitive_type [15371,15378]"
    },
    {
      "src": "{: { [30973,30974]",
      "dest": "{: { [19619,19620]"
    },
    {
      "src": "call_expression [40296,40361]",
      "dest": "call_expression [47066,47131]"
    },
    {
      "src": "identifier: _attribute [13684,13694]",
      "dest": "identifier: _attribute [15548,15558]"
    },
    {
      "src": "type_name [9750,9757]",
      "dest": "type_name [11614,11621]"
    },
    {
      "src": "\": \" [41729,41730]",
      "dest": "\": \" [48403,48404]"
    },
    {
      "src": "primitive_type [11983,11990]",
      "dest": "primitive_type [13847,13854]"
    },
    {
      "src": "): ) [35849,35850]",
      "dest": "): ) [41968,41969]"
    },
    {
      "src": "parameter [7661,7678]",
      "dest": "parameter [9571,9588]"
    },
    {
      "src": "member_expression [29052,29062]",
      "dest": "member_expression [48895,48905]"
    },
    {
      "src": "function_body [29780,30054]",
      "dest": "function_body [36789,37140]"
    },
    {
      "src": "}: } [28455,28456]",
      "dest": "}: } [37923,37924]"
    },
    {
      "src": "identifier: length [11468,11474]",
      "dest": "identifier: length [13332,13338]"
    },
    {
      "src": "identifier: _from [29279,29284]",
      "dest": "identifier: _from [42299,42304]"
    },
    {
      "src": "type_name [20153,20160]",
      "dest": "type_name [30791,30798]"
    },
    {
      "src": ".: . [13617,13618]",
      "dest": ".: . [15481,15482]"
    },
    {
      "src": "memory: memory [42609,42615]",
      "dest": "memory: memory [30930,30936]"
    },
    {
      "src": "{: { [1025,1026]",
      "dest": "{: { [2996,2997]"
    },
    {
      "src": "=: = [32300,32301]",
      "dest": "=: = [20946,20947]"
    },
    {
      "src": "): ) [21790,21791]",
      "dest": "): ) [33782,33783]"
    },
    {
      "src": "primitive_type [14251,14266]",
      "dest": "primitive_type [16115,16130]"
    },
    {
      "src": "identifier: a [4651,4652]",
      "dest": "identifier: a [6622,6623]"
    },
    {
      "src": "primitive_type [42423,42428]",
      "dest": "primitive_type [49063,49068]"
    },
    {
      "src": "type_name [9530,9565]",
      "dest": "type_name [11394,11429]"
    },
    {
      "src": ".: . [13107,13108]",
      "dest": ".: . [14971,14972]"
    },
    {
      "src": "expression_statement [31589,31633]",
      "dest": "expression_statement [20235,20279]"
    },
    {
      "src": "primitive_type [11460,11467]",
      "dest": "primitive_type [13324,13331]"
    },
    {
      "src": "address: address [20105,20112]",
      "dest": "address: address [30743,30750]"
    },
    {
      "src": "=: = [13030,13031]",
      "dest": "=: = [14894,14895]"
    },
    {
      "src": "(: ( [11121,11122]",
      "dest": "(: ( [12985,12986]"
    },
    {
      "src": "identifier: b [1975,1976]",
      "dest": "identifier: b [3946,3947]"
    },
    {
      "src": "boolean_literal [41836,41840]",
      "dest": "boolean_literal [48479,48483]"
    },
    {
      "src": "number_literal: 1595609911 [33598,33608]",
      "dest": "number_literal: 1595609911 [39744,39754]"
    },
    {
      "src": "identifier: balanceOf [35639,35648]",
      "dest": "identifier: balanceOf [41527,41536]"
    },
    {
      "src": "): ) [19447,19448]",
      "dest": "): ) [37741,37742]"
    },
    {
      "src": "comment: // File: contracts/trusttokens/ValTokenWithHook.sol [27455,27506]",
      "dest": "comment: // &&&&&&&&&*   /&&&&&&&#             %&&&&&&,   (&&&&&&&*   /&&&&&&&&&&& [900,973]"
    },
    {
      "src": "array_access [11587,11610]",
      "dest": "array_access [13451,13474]"
    },
    {
      "src": "function_body [37839,37952]",
      "dest": "function_body [44491,44604]"
    },
    {
      "src": "): ) [14327,14328]",
      "dest": "): ) [16191,16192]"
    },
    {
      "src": "}: } [35857,35858]",
      "dest": "}: } [41976,41977]"
    },
    {
      "src": "event_paramater [9843,9869]",
      "dest": "event_paramater [11707,11733]"
    },
    {
      "src": "uint256: uint256 [11821,11828]",
      "dest": "uint256: uint256 [13685,13692]"
    },
    {
      "src": "): ) [34259,34260]",
      "dest": "): ) [40489,40490]"
    },
    {
      "src": "identifier: _to [35539,35542]",
      "dest": "identifier: _to [41454,41457]"
    },
    {
      "src": "identifier: setAttributeValue [11903,11920]",
      "dest": "identifier: setAttributeValue [13767,13784]"
    },
    {
      "src": "identifier: balance [14329,14336]",
      "dest": "identifier: balance [16193,16200]"
    },
    {
      "src": "identifier: subscriberCount [11764,11779]",
      "dest": "identifier: subscriberCount [13628,13643]"
    },
    {
      "src": "variable_declaration [37448,37466]",
      "dest": "variable_declaration [42264,42280]"
    },
    {
      "src": "visibility [12611,12617]",
      "dest": "visibility [14475,14481]"
    },
    {
      "src": "identifier: onlyTimeLockRegistry [33945,33965]",
      "dest": "identifier: onlyTimeLockRegistry [40175,40195]"
    },
    {
      "src": ",: , [7678,7679]",
      "dest": ",: , [9588,9589]"
    },
    {
      "src": "primitive_type [7934,7941]",
      "dest": "primitive_type [9844,9851]"
    },
    {
      "src": "identifier: _spender [21850,21858]",
      "dest": "identifier: spender [33848,33855]"
    },
    {
      "src": "(: ( [20841,20842]",
      "dest": "(: ( [34465,34466]"
    },
    {
      "src": "visibility [27795,27803]",
      "dest": "visibility [38649,38657]"
    },
    {
      "src": "type_name [33365,33372]",
      "dest": "type_name [39511,39518]"
    },
    {
      "src": "comment: // File: contracts/trusttokens/TrueCoinReceiver.sol [27271,27322]",
      "dest": "comment: // &&&&&&&&&/   ,&&&&&&&#    /&&&&&&&&&&&&&&&&%%%%&&&&%%    /&&&&&&&&&&&& [825,898]"
    },
    {
      "src": ".: . [35799,35800]",
      "dest": ".: . [41939,41940]"
    },
    {
      "src": "call_argument [11128,11138]",
      "dest": "call_argument [12992,13002]"
    },
    {
      "src": "comment: // get number of epochs passed [39953,39983]",
      "dest": "comment: // get number of epochs passed [46723,46753]"
    },
    {
      "src": "function_definition [39146,39756]",
      "dest": "function_definition [45916,46526]"
    },
    {
      "src": "=: = [39263,39264]",
      "dest": "=: = [46033,46034]"
    },
    {
      "src": "): ) [40023,40024]",
      "dest": "): ) [46793,46794]"
    },
    {
      "src": "string_literal [34959,34981]",
      "dest": "string_literal [43035,43057]"
    },
    {
      "src": "call_argument [41729,41749]",
      "dest": "call_argument [48403,48424]"
    },
    {
      "src": "}: } [13467,13468]",
      "dest": "}: } [15331,15332]"
    },
    {
      "src": "type_name [14432,14439]",
      "dest": "type_name [16296,16303]"
    },
    {
      "src": "binary_expression [1072,1078]",
      "dest": "binary_expression [3043,3049]"
    },
    {
      "src": "call_argument [33987,34017]",
      "dest": "call_argument [40217,40247]"
    },
    {
      "src": "call_argument [12136,12146]",
      "dest": "call_argument [14000,14010]"
    },
    {
      "src": "identifier: sender [36862,36868]",
      "dest": "identifier: sender [43630,43636]"
    },
    {
      "src": ",: , [12932,12933]",
      "dest": ",: , [14796,14797]"
    },
    {
      "src": "call_argument [12193,12197]",
      "dest": "call_argument [14057,14061]"
    },
    {
      "src": "uint256: uint256 [15727,15734]",
      "dest": "uint256: uint256 [17538,17545]"
    },
    {
      "src": "function_body [5340,5411]",
      "dest": "function_body [7311,7382]"
    },
    {
      "src": "(: ( [33446,33447]",
      "dest": "(: ( [39592,39593]"
    },
    {
      "src": "comment: /**      * @dev Allows the current owner to set the pendingOwner address.      * @param newOwner The address to transfer ownership to.      */ [31864,32009]",
      "dest": "comment: /**      * @dev Allows the current owner to set the pendingOwner address.      * @param newOwner The address to transfer ownership to.      */ [20510,20655]"
    },
    {
      "src": ",: , [9733,9734]",
      "dest": ",: , [11597,11598]"
    },
    {
      "src": "\": \" [14681,14682]",
      "dest": "\": \" [16545,16546]"
    },
    {
      "src": "parameter [3272,3281]",
      "dest": "parameter [5243,5252]"
    },
    {
      "src": "): ) [30941,30942]",
      "dest": "): ) [19587,19588]"
    },
    {
      "src": "variable_declaration [38706,38731]",
      "dest": "variable_declaration [45358,45383]"
    },
    {
      "src": "emit: emit [30134,30138]",
      "dest": "emit: emit [36342,36346]"
    },
    {
      "src": "number_literal: 0 [31441,31442]",
      "dest": "number_literal: 0 [20087,20088]"
    },
    {
      "src": "\": \" [23641,23642]",
      "dest": "\": \" [36865,36866]"
    },
    {
      "src": ",: , [35831,35832]",
      "dest": ",: , [41960,41961]"
    },
    {
      "src": "identifier: totalEpochsPassed [38714,38731]",
      "dest": "identifier: totalEpochsPassed [45366,45383]"
    },
    {
      "src": "solidity_version: 0.6.0 [5496,5501]",
      "dest": "solidity_version: 0.6.0 [2079,2084]"
    },
    {
      "src": "call_expression [23830,23893]",
      "dest": "call_expression [35294,35364]"
    },
    {
      "src": "parameter [6155,6169]",
      "dest": "parameter [8065,8079]"
    },
    {
      "src": "array_access [12079,12095]",
      "dest": "array_access [13943,13959]"
    },
    {
      "src": "primitive_type [38706,38713]",
      "dest": "primitive_type [45358,45365]"
    },
    {
      "src": "(: ( [37829,37830]",
      "dest": "(: ( [44481,44482]"
    },
    {
      "src": "function_definition [37767,37952]",
      "dest": "function_definition [44419,44604]"
    },
    {
      "src": "call_argument [20925,20933]",
      "dest": "call_argument [34572,34579]"
    },
    {
      "src": "return: return [5391,5397]",
      "dest": "return: return [7362,7368]"
    },
    {
      "src": "identifier: value [8205,8210]",
      "dest": "identifier: value [10115,10120]"
    },
    {
      "src": "identifier: newTimeLockRegistry [34240,34259]",
      "dest": "identifier: newTimeLockRegistry [40470,40489]"
    },
    {
      "src": "type_cast_expression [30148,30158]",
      "dest": "type_cast_expression [36356,36366]"
    },
    {
      "src": "parameter [2370,2377]",
      "dest": "parameter [4341,4348]"
    },
    {
      "src": "assignment_expression [32385,32407]",
      "dest": "assignment_expression [21031,21053]"
    },
    {
      "src": "identifier: SafeMath [703,711]",
      "dest": "identifier: SafeMath [2674,2682]"
    },
    {
      "src": "type_name [13705,13712]",
      "dest": "type_name [15569,15576]"
    },
    {
      "src": "\": \" [36272,36273]",
      "dest": "\": \" [43143,43144]"
    },
    {
      "src": "string: string [42602,42608]",
      "dest": "string: string [30923,30929]"
    },
    {
      "src": ",: , [10910,10911]",
      "dest": ",: , [12774,12775]"
    },
    {
      "src": "event_paramater [7912,7932]",
      "dest": "event_paramater [9822,9842]"
    },
    {
      "src": "call_argument [23614,23620]",
      "dest": "call_argument [36808,36829]"
    },
    {
      "src": "expression_statement [31643,31645]",
      "dest": "expression_statement [20289,20291]"
    },
    {
      "src": "(: ( [34930,34931]",
      "dest": "(: ( [43006,43007]"
    },
    {
      "src": "modifier_invocation [11439,11448]",
      "dest": "modifier_invocation [13303,13312]"
    },
    {
      "src": "string_literal [12219,12221]",
      "dest": "string_literal [14083,14085]"
    },
    {
      "src": "call_expression [34291,34359]",
      "dest": "call_expression [40521,40589]"
    },
    {
      "src": "return: return [20965,20971]",
      "dest": "return: return [34687,34693]"
    },
    {
      "src": "address: address [10321,10328]",
      "dest": "address: address [12185,12192]"
    },
    {
      "src": "event_paramater [31141,31170]",
      "dest": "event_paramater [19787,19816]"
    },
    {
      "src": "identifier: _value [28814,28820]",
      "dest": "identifier: amount [32409,32415]"
    },
    {
      "src": "visibility [30943,30949]",
      "dest": "visibility [19589,19595]"
    },
    {
      "src": "identifier: ProxyStorage [18933,18945]",
      "dest": "identifier: ProxyStorage [30226,30238]"
    },
    {
      "src": "identifier: msg [12136,12139]",
      "dest": "identifier: msg [14000,14003]"
    },
    {
      "src": ".: . [31811,31812]",
      "dest": ".: . [20457,20458]"
    },
    {
      "src": "type_name [19048,19055]",
      "dest": "type_name [30548,30555]"
    },
    {
      "src": "view: view [11807,11811]",
      "dest": "view: view [13671,13675]"
    },
    {
      "src": "identifier: TOTAL_EPOCHS [40717,40729]",
      "dest": "identifier: TOTAL_EPOCHS [47487,47499]"
    },
    {
      "src": ",: , [30158,30159]",
      "dest": ",: , [36366,36367]"
    },
    {
      "src": "): ) [31455,31456]",
      "dest": "): ) [20101,20102]"
    },
    {
      "src": "\": \" [12132,12133]",
      "dest": "\": \" [13996,13997]"
    },
    {
      "src": "function_body [14291,14345]",
      "dest": "function_body [16155,16209]"
    },
    {
      "src": "identifier: _syncer [11295,11302]",
      "dest": "identifier: _syncer [13159,13166]"
    },
    {
      "src": "identifier: Transfer [7903,7911]",
      "dest": "identifier: Transfer [9813,9821]"
    },
    {
      "src": "{: { [3982,3983]",
      "dest": "{: { [5953,5954]"
    },
    {
      "src": "visibility [15790,15796]",
      "dest": "visibility [17601,17607]"
    },
    {
      "src": "expression_statement [28382,28426]",
      "dest": "expression_statement [37753,37822]"
    },
    {
      "src": "event_paramater [9750,9763]",
      "dest": "event_paramater [11614,11627]"
    },
    {
      "src": "binary_expression [28347,28365]",
      "dest": "binary_expression [37761,37782]"
    },
    {
      "src": "identifier: StopSubscription [11558,11574]",
      "dest": "identifier: StopSubscription [13422,13438]"
    },
    {
      "src": "state_variable_declaration [33819,33853]",
      "dest": "state_variable_declaration [39965,39999]"
    },
    {
      "src": "identifier: _to [30085,30088]",
      "dest": "identifier: account [36039,36046]"
    },
    {
      "src": "comment: // token that requires its users to go through a KYC/AML check - in this case [8826,8903]",
      "dest": "comment: // token that requires its users to go through a KYC/AML check - in this case [10690,10767]"
    },
    {
      "src": "identifier: b [4662,4663]",
      "dest": "identifier: b [6633,6634]"
    },
    {
      "src": "function_definition [36741,37170]",
      "dest": "function_definition [43509,43884]"
    },
    {
      "src": "type_alias [41406,41414]",
      "dest": "type_alias [48121,48129]"
    },
    {
      "src": "member_expression [36858,36868]",
      "dest": "member_expression [43626,43636]"
    },
    {
      "src": ".: . [14455,14456]",
      "dest": ".: . [16319,16320]"
    },
    {
      "src": "event_paramater [19048,19061]",
      "dest": "event_paramater [30548,30561]"
    },
    {
      "src": "identifier: _transferAllArgs [37116,37132]",
      "dest": "identifier: _transfer [43837,43846]"
    },
    {
      "src": "primitive_type [13354,13361]",
      "dest": "primitive_type [15218,15225]"
    },
    {
      "src": "identifier: _subtractedValue [22760,22776]",
      "dest": "identifier: subtractedValue [34491,34506]"
    },
    {
      "src": "uint256: uint256 [2336,2343]",
      "dest": "uint256: uint256 [4307,4314]"
    },
    {
      "src": ".: . [38399,38400]",
      "dest": ".: . [45051,45052]"
    },
    {
      "src": "call_argument [14474,14478]",
      "dest": "call_argument [16338,16342]"
    },
    {
      "src": "type_name [7912,7919]",
      "dest": "type_name [9822,9829]"
    },
    {
      "src": "if_statement [42132,42284]",
      "dest": "if_statement [48672,48824]"
    },
    {
      "src": "return_type_definition [40552,40569]",
      "dest": "return_type_definition [47322,47339]"
    },
    {
      "src": "type_name [13395,13402]",
      "dest": "type_name [15259,15266]"
    },
    {
      "src": "identifier: StartSubscription [11319,11336]",
      "dest": "identifier: StartSubscription [13183,13200]"
    },
    {
      "src": "type_name [13521,13528]",
      "dest": "type_name [15385,15392]"
    },
    {
      "src": "binary_expression [4044,4049]",
      "dest": "binary_expression [6015,6020]"
    },
    {
      "src": "address: address [27410,27417]",
      "dest": "address: address [38607,38614]"
    },
    {
      "src": "comment: /**  * @title Basic token  * @dev Basic version of StandardToken, with no allowances.  */ [18809,18901]",
      "dest": "comment: // &&&&&&&&&&&#    (&&&&#                            ,%&&&&&&*/&&&&&&&&&& [600,673]"
    },
    {
      "src": "[: [ [12089,12090]",
      "dest": "[: [ [13953,13954]"
    },
    {
      "src": "identifier: mint [42067,42071]",
      "dest": "identifier: mint [48607,48611]"
    },
    {
      "src": "identifier: msg [37133,37136]",
      "dest": "identifier: msg [43847,43850]"
    },
    {
      "src": "payable: payable [14259,14266]",
      "dest": "payable: payable [16123,16130]"
    },
    {
      "src": "{: { [34280,34281]",
      "dest": "{: { [40510,40511]"
    },
    {
      "src": "\": \" [36977,36978]",
      "dest": "\": \" [36155,36156]"
    },
    {
      "src": "type_name [18241,18247]",
      "dest": "type_name [26986,26992]"
    },
    {
      "src": "true [21902,21906]",
      "dest": "true [33924,33928]"
    },
    {
      "src": "primitive_type [22957,22964]",
      "dest": "primitive_type [37598,37605]"
    },
    {
      "src": ".: . [40693,40694]",
      "dest": ".: . [47463,47464]"
    },
    {
      "src": "): ) [42174,42175]",
      "dest": "): ) [48714,48715]"
    },
    {
      "src": "identifier: _to [29064,29067]",
      "dest": "identifier: amount [48907,48913]"
    },
    {
      "src": "identifier: owner_ [15965,15971]",
      "dest": "identifier: owner_ [17776,17782]"
    },
    {
      "src": "source_file [0,42651]",
      "dest": "source_file [0,49309]"
    },
    {
      "src": "(: ( [38852,38853]",
      "dest": "(: ( [45504,45505]"
    },
    {
      "src": "function_definition [2312,2783]",
      "dest": "function_definition [4283,4754]"
    },
    {
      "src": "address: address [24058,24065]",
      "dest": "address: address [32384,32391]"
    },
    {
      "src": "(: ( [15769,15770]",
      "dest": "(: ( [17580,17581]"
    },
    {
      "src": "expression_statement [37116,37163]",
      "dest": "expression_statement [43837,43877]"
    },
    {
      "src": "array_access [13259,13287]",
      "dest": "array_access [15123,15151]"
    },
    {
      "src": "bytes32: bytes32 [11193,11200]",
      "dest": "bytes32: bytes32 [13057,13064]"
    },
    {
      "src": "parameter [1885,1894]",
      "dest": "parameter [3856,3865]"
    },
    {
      "src": "identifier: ValSafeMath [19947,19958]",
      "dest": "identifier: SafeMath [30261,30269]"
    },
    {
      "src": "modifier: modifier [14823,14831]",
      "dest": "modifier: modifier [16687,16695]"
    },
    {
      "src": "(: ( [31057,31058]",
      "dest": "(: ( [19703,19704]"
    },
    {
      "src": "interface: interface [8292,8301]",
      "dest": "interface: interface [10156,10165]"
    },
    {
      "src": ",: , [12130,12131]",
      "dest": ",: , [13994,13995]"
    },
    {
      "src": "return_statement [4149,4158]",
      "dest": "return_statement [6120,6129]"
    },
    {
      "src": "identifier: _from [36090,36095]",
      "dest": "identifier: _from [42947,42952]"
    },
    {
      "src": "function_definition [1861,2053]",
      "dest": "function_definition [3832,4024]"
    },
    {
      "src": "comment: /**      * @dev Emitted when `value` tokens are moved from one account (`from`) to      * another (`to`).      *      * Note that `value` may be zero.      */ [7728,7891]",
      "dest": "comment: /**      * @dev Emitted when `value` tokens are moved from one account (`from`) to      * another (`to`).      *      * Note that `value` may be zero.      */ [9638,9801]"
    },
    {
      "src": "function_definition [3259,3391]",
      "dest": "function_definition [5230,5362]"
    },
    {
      "src": "return_statement [37512,37575]",
      "dest": "return_statement [44162,44227]"
    },
    {
      "src": "return_statement [42441,42450]",
      "dest": "return_statement [49081,49090]"
    },
    {
      "src": "parenthesized_expression [42249,42272]",
      "dest": "parenthesized_expression [48789,48812]"
    },
    {
      "src": "identifier: subscribers [9566,9577]",
      "dest": "identifier: subscribers [11430,11441]"
    },
    {
      "src": "public: public [13211,13217]",
      "dest": "public: public [15075,15081]"
    },
    {
      "src": "uint256: uint256 [1435,1442]",
      "dest": "uint256: uint256 [3406,3413]"
    },
    {
      "src": "): ) [38885,38886]",
      "dest": "): ) [45537,45538]"
    },
    {
      "src": "identifier: LOCK_START [40660,40670]",
      "dest": "identifier: LOCK_START [47430,47440]"
    },
    {
      "src": "parameter [13676,13694]",
      "dest": "parameter [15540,15558]"
    },
    {
      "src": "block_statement [13931,14214]",
      "dest": "block_statement [15795,16078]"
    },
    {
      "src": ".: . [25727,25728]",
      "dest": ".: . [21766,21767]"
    },
    {
      "src": "): ) [34981,34982]",
      "dest": "): ) [43057,43058]"
    },
    {
      "src": "{: { [1956,1957]",
      "dest": "{: { [3927,3928]"
    },
    {
      "src": "function_body [42430,42457]",
      "dest": "function_body [49070,49097]"
    },
    {
      "src": "event_paramater [10018,10050]",
      "dest": "event_paramater [11882,11914]"
    },
    {
      "src": "assignment_expression [15426,15451]",
      "dest": "assignment_expression [17290,17315]"
    },
    {
      "src": "): ) [40568,40569]",
      "dest": "): ) [47338,47339]"
    },
    {
      "src": "call_argument [38749,38766]",
      "dest": "call_argument [45401,45418]"
    },
    {
      "src": "identifier: _attribute [12829,12839]",
      "dest": "identifier: _attribute [14693,14703]"
    },
    {
      "src": "(: ( [37485,37486]",
      "dest": "(: ( [45723,45724]"
    },
    {
      "src": "call_expression [37519,37556]",
      "dest": "call_expression [44169,44208]"
    },
    {
      "src": "call_argument [1514,1515]",
      "dest": "call_argument [3485,3486]"
    },
    {
      "src": "expression_statement [41708,41751]",
      "dest": "expression_statement [48382,48426]"
    },
    {
      "src": "public: public [32243,32249]",
      "dest": "public: public [20889,20895]"
    },
    {
      "src": "identifier: epochsLeft [37456,37466]",
      "dest": "identifier: unlocked [42272,42280]"
    },
    {
      "src": "identifier: subscribers [11710,11721]",
      "dest": "identifier: subscribers [13574,13585]"
    },
    {
      "src": "address: address [23464,23471]",
      "dest": "address: address [35215,35222]"
    },
    {
      "src": "type_name [41419,41426]",
      "dest": "type_name [48134,48141]"
    },
    {
      "src": "function_definition [42465,42555]",
      "dest": "function_definition [31057,31119]"
    },
    {
      "src": "(: ( [12192,12193]",
      "dest": "(: ( [14056,14057]"
    },
    {
      "src": "): ) [31035,31036]",
      "dest": "): ) [19681,19682]"
    },
    {
      "src": "string [34419,34449]",
      "dest": "string [40649,40679]"
    },
    {
      "src": "(: ( [7644,7645]",
      "dest": "(: ( [9554,9555]"
    },
    {
      "src": "visibility [10694,10700]",
      "dest": "visibility [12558,12564]"
    },
    {
      "src": "visibility [32243,32249]",
      "dest": "visibility [20889,20895]"
    },
    {
      "src": "function_definition [13643,14221]",
      "dest": "function_definition [15507,16085]"
    },
    {
      "src": "string_literal [35667,35689]",
      "dest": "string_literal [41555,41577]"
    },
    {
      "src": "identifier: sub [1870,1873]",
      "dest": "identifier: sub [3841,3844]"
    },
    {
      "src": ",: , [11211,11212]",
      "dest": ",: , [13075,13076]"
    },
    {
      "src": "(: ( [32441,32442]",
      "dest": "(: ( [21087,21088]"
    },
    {
      "src": "array_access [11587,11618]",
      "dest": "array_access [13451,13482]"
    },
    {
      "src": "function_body [30973,31005]",
      "dest": "function_body [19619,19651]"
    },
    {
      "src": "if: if [42132,42134]",
      "dest": "if: if [48672,48674]"
    },
    {
      "src": "returns: returns [40899,40906]",
      "dest": "returns: returns [47669,47676]"
    },
    {
      "src": "): ) [11146,11147]",
      "dest": "): ) [13010,13011]"
    },
    {
      "src": "call_expression [10799,10857]",
      "dest": "call_expression [12663,12721]"
    },
    {
      "src": "}: } [14526,14527]",
      "dest": "}: } [16390,16391]"
    },
    {
      "src": "(: ( [10451,10452]",
      "dest": "(: ( [12315,12316]"
    },
    {
      "src": "type_name [4643,4650]",
      "dest": "type_name [6614,6621]"
    },
    {
      "src": "address: address [8556,8563]",
      "dest": "address: address [10420,10427]"
    },
    {
      "src": "call_argument [14466,14479]",
      "dest": "call_argument [16330,16343]"
    },
    {
      "src": "number_literal: 0 [32442,32443]",
      "dest": "number_literal: 0 [21088,21089]"
    },
    {
      "src": "identifier: index [13908,13913]",
      "dest": "identifier: index [15772,15777]"
    },
    {
      "src": "identifier: notes [13096,13101]",
      "dest": "identifier: notes [14960,14965]"
    },
    {
      "src": "call_argument [37486,37500]",
      "dest": "call_argument [45724,45738]"
    },
    {
      "src": "call_expression [12389,12448]",
      "dest": "call_expression [14253,14312]"
    },
    {
      "src": "identifier: msg [12223,12226]",
      "dest": "identifier: msg [14087,14090]"
    },
    {
      "src": "type_name [2336,2343]",
      "dest": "type_name [4307,4314]"
    },
    {
      "src": "uint256: uint256 [39993,40000]",
      "dest": "uint256: uint256 [46763,46770]"
    },
    {
      "src": "identifier: require [35631,35638]",
      "dest": "identifier: require [41519,41526]"
    },
    {
      "src": "address: address [13735,13742]",
      "dest": "address: address [15599,15606]"
    },
    {
      "src": "parameter [7299,7303]",
      "dest": "parameter [9209,9213]"
    },
    {
      "src": "function: function [39889,39897]",
      "dest": "function: function [46659,46667]"
    },
    {
      "src": "primitive_type [35578,35585]",
      "dest": "primitive_type [35231,35238]"
    },
    {
      "src": "(: ( [11336,11337]",
      "dest": "(: ( [13200,13201]"
    },
    {
      "src": "return_statement [2767,2776]",
      "dest": "return_statement [4738,4747]"
    },
    {
      "src": "parameter [5280,5306]",
      "dest": "parameter [7251,7277]"
    },
    {
      "src": ",: , [4723,4724]",
      "dest": ",: , [6694,6695]"
    },
    {
      "src": "(: ( [9612,9613]",
      "dest": "(: ( [11476,11477]"
    },
    {
      "src": "identifier: adminAddr [13451,13460]",
      "dest": "identifier: adminAddr [15315,15324]"
    },
    {
      "src": "{: { [38142,38143]",
      "dest": "{: { [44794,44795]"
    },
    {
      "src": "uint256: uint256 [3272,3279]",
      "dest": "uint256: uint256 [5243,5250]"
    },
    {
      "src": "type_name [7299,7303]",
      "dest": "type_name [9209,9213]"
    },
    {
      "src": "): ) [39940,39941]",
      "dest": "): ) [46710,46711]"
    },
    {
      "src": "identifier: _mint [42191,42196]",
      "dest": "identifier: _mint [48731,48736]"
    },
    {
      "src": "): ) [28998,28999]",
      "dest": "): ) [48867,48868]"
    },
    {
      "src": "public: public [13374,13380]",
      "dest": "public: public [15238,15244]"
    },
    {
      "src": "(: ( [21752,21753]",
      "dest": "(: ( [33746,33747]"
    },
    {
      "src": "]: ] [9563,9564]",
      "dest": "]: ] [11427,11428]"
    },
    {
      "src": "): ) [14693,14694]",
      "dest": "): ) [16557,16558]"
    },
    {
      "src": "identifier: _who [26122,26126]",
      "dest": "identifier: sender [33031,33037]"
    },
    {
      "src": "identifier: require [2698,2705]",
      "dest": "identifier: require [4669,4676]"
    },
    {
      "src": "[: [ [10957,10958]",
      "dest": "[: [ [12821,12822]"
    },
    {
      "src": "expression_statement [10712,10758]",
      "dest": "expression_statement [12576,12622]"
    },
    {
      "src": "}: } [32451,32452]",
      "dest": "}: } [21097,21098]"
    },
    {
      "src": "=>: => [9266,9268]",
      "dest": "=>: => [11130,11132]"
    },
    {
      "src": "indexed: indexed [20136,20143]",
      "dest": "indexed: indexed [30774,30781]"
    },
    {
      "src": "expression_statement [14652,14695]",
      "dest": "expression_statement [16516,16559]"
    },
    {
      "src": "(: ( [39164,39165]",
      "dest": "(: ( [45934,45935]"
    },
    {
      "src": "parameter [13705,13724]",
      "dest": "parameter [15569,15588]"
    },
    {
      "src": "identifier: totalSupply [42136,42147]",
      "dest": "identifier: totalSupply [48676,48687]"
    },
    {
      "src": "public: public [15303,15309]",
      "dest": "public: public [17167,17173]"
    },
    {
      "src": "): ) [40915,40916]",
      "dest": "): ) [47685,47686]"
    },
    {
      "src": "return: return [38572,38578]",
      "dest": "return: return [45224,45230]"
    },
    {
      "src": "function: function [40866,40874]",
      "dest": "function: function [47636,47644]"
    },
    {
      "src": "type_name [13735,13742]",
      "dest": "type_name [15599,15606]"
    },
    {
      "src": "internal: internal [1457,1465]",
      "dest": "internal: internal [3428,3436]"
    },
    {
      "src": "visibility [19122,19130]",
      "dest": "visibility [35266,35274]"
    },
    {
      "src": "string_literal [29971,30007]",
      "dest": "string_literal [36994,37030]"
    },
    {
      "src": "(: ( [30259,30260]",
      "dest": "(: ( [27589,27590]"
    },
    {
      "src": "days: days [33699,33703]",
      "dest": "days: days [39845,39849]"
    },
    {
      "src": "]: ] [12259,12260]",
      "dest": "]: ] [14123,14124]"
    },
    {
      "src": "comment: /**      * @dev mint TRU      * Can never mint more than MAX_SUPPLY = 1.45 billion      */ [41959,42052]",
      "dest": "comment: /**      * @dev mint TRU      * Can never mint more than MAX_SUPPLY = 1.45 billion      */ [48499,48592]"
    },
    {
      "src": "identifier: _who [24066,24070]",
      "dest": "identifier: spender [32392,32399]"
    },
    {
      "src": "if: if [39333,39335]",
      "dest": "if: if [46103,46105]"
    },
    {
      "src": "interface: interface [5580,5589]",
      "dest": "interface: interface [7490,7499]"
    },
    {
      "src": "primitive_type [19048,19055]",
      "dest": "primitive_type [30548,30555]"
    },
    {
      "src": "solidity_pragma_token [5486,5501]",
      "dest": "solidity_pragma_token [2069,2084]"
    },
    {
      "src": "identifier: attributes [15912,15922]",
      "dest": "identifier: attributes [17723,17733]"
    },
    {
      "src": "function_body [21814,21914]",
      "dest": "function_body [33814,33936]"
    },
    {
      "src": "identifier: SetAttribute [9682,9694]",
      "dest": "identifier: SetAttribute [11546,11558]"
    },
    {
      "src": "string [35667,35689]",
      "dest": "string [41555,41577]"
    },
    {
      "src": ",: , [10827,10828]",
      "dest": ",: , [12691,12692]"
    },
    {
      "src": "visibility [1457,1465]",
      "dest": "visibility [3428,3436]"
    },
    {
      "src": "type_name [12245,12260]",
      "dest": "type_name [14109,14124]"
    },
    {
      "src": "number_literal: 0 [29820,29821]",
      "dest": "number_literal: 0 [37121,37122]"
    },
    {
      "src": "type_name [18016,18022]",
      "dest": "type_name [27314,27320]"
    },
    {
      "src": "): ) [9960,9961]",
      "dest": "): ) [11824,11825]"
    },
    {
      "src": "call_argument [37155,37161]",
      "dest": "call_argument [43869,43875]"
    },
    {
      "src": "\": \" [4725,4726]",
      "dest": "\": \" [6696,6697]"
    },
    {
      "src": "comment: /**      * @dev Returns the amount of tokens in existence.      */ [5604,5672]",
      "dest": "comment: /**      * @dev Returns the amount of tokens in existence.      */ [7514,7582]"
    },
    {
      "src": ",: , [21769,21770]",
      "dest": ",: , [33762,33763]"
    },
    {
      "src": "identifier: FIRST_EPOCH_DELAY [38538,38555]",
      "dest": "identifier: FIRST_EPOCH_DELAY [45190,45207]"
    },
    {
      "src": "public: public [40887,40893]",
      "dest": "public: public [47657,47663]"
    },
    {
      "src": "call_argument [30148,30158]",
      "dest": "call_argument [36356,36366]"
    },
    {
      "src": "identifier: owner [8165,8170]",
      "dest": "identifier: owner [10075,10080]"
    },
    {
      "src": "(: ( [31432,31433]",
      "dest": "(: ( [20078,20079]"
    },
    {
      "src": "parameter [10595,10607]",
      "dest": "parameter [12459,12471]"
    },
    {
      "src": "parameter [1896,1922]",
      "dest": "parameter [3867,3893]"
    },
    {
      "src": "expression_statement [35631,35691]",
      "dest": "expression_statement [41519,41579]"
    },
    {
      "src": "parameter [21753,21769]",
      "dest": "parameter [25874,25888]"
    },
    {
      "src": "member_expression [13259,13293]",
      "dest": "member_expression [15123,15157]"
    },
    {
      "src": "--: -- [14035,14037]",
      "dest": "--: -- [15899,15901]"
    },
    {
      "src": "parameter [34232,34259]",
      "dest": "parameter [40462,40489]"
    },
    {
      "src": "memory: memory [18537,18543]",
      "dest": "memory: memory [25916,25922]"
    },
    {
      "src": "identifier: timeLockRegistry [34001,34017]",
      "dest": "identifier: timeLockRegistry [40231,40247]"
    },
    {
      "src": "): ) [35689,35690]",
      "dest": "): ) [41577,41578]"
    },
    {
      "src": "}: } [2782,2783]",
      "dest": "}: } [4753,4754]"
    },
    {
      "src": "member_expression [13091,13101]",
      "dest": "member_expression [14955,14965]"
    },
    {
      "src": "): ) [38786,38787]",
      "dest": "): ) [45438,45439]"
    },
    {
      "src": "visibility [1924,1932]",
      "dest": "visibility [3895,3903]"
    },
    {
      "src": "): ) [4695,4696]",
      "dest": "): ) [6666,6667]"
    },
    {
      "src": "identifier: _attribute [11128,11138]",
      "dest": "identifier: _attribute [12992,13002]"
    },
    {
      "src": "primitive_type [9735,9742]",
      "dest": "primitive_type [11599,11606]"
    },
    {
      "src": "address: address [14064,14071]",
      "dest": "address: address [15928,15935]"
    },
    {
      "src": "identifier: owner [8675,8680]",
      "dest": "identifier: owner [10539,10544]"
    },
    {
      "src": "call_argument [34419,34449]",
      "dest": "call_argument [40649,40679]"
    },
    {
      "src": "comment: /**      * @dev Get timestamp of next epoch      * Will revert if all epochs have passed      * @return Timestamp of when the next epoch starts      */ [38985,39140]",
      "dest": "comment: /**      * @dev Get timestamp of next epoch      * Will revert if all epochs have passed      * @return Timestamp of when the next epoch starts      */ [45755,45910]"
    },
    {
      "src": "variable_declaration_tuple [30216,30239]",
      "dest": "variable_declaration_tuple [27517,27556]"
    },
    {
      "src": "number_literal: 0 [28363,28364]",
      "dest": "number_literal: 0 [37780,37781]"
    },
    {
      "src": "identifier: subscribe [11183,11192]",
      "dest": "identifier: subscribe [13047,13056]"
    },
    {
      "src": "identifier: c [2678,2679]",
      "dest": "identifier: c [4649,4650]"
    },
    {
      "src": "contract: contract [8451,8459]",
      "dest": "contract: contract [10315,10323]"
    },
    {
      "src": "expression_statement [15426,15452]",
      "dest": "expression_statement [17290,17316]"
    },
    {
      "src": "parameter [37336,37351]",
      "dest": "parameter [44050,44065]"
    },
    {
      "src": "identifier: _who [8369,8373]",
      "dest": "identifier: _who [10233,10237]"
    },
    {
      "src": "member_expression [35794,35820]",
      "dest": "member_expression [41934,41949]"
    },
    {
      "src": "function: function [31013,31021]",
      "dest": "function: function [19659,19667]"
    },
    {
      "src": "(: ( [30076,30077]",
      "dest": "(: ( [36030,36031]"
    },
    {
      "src": "identifier: divideByZeroMessage [18544,18563]",
      "dest": "identifier: errorMessage [25923,25935]"
    },
    {
      "src": "visibility [42319,42325]",
      "dest": "visibility [48950,48956]"
    },
    {
      "src": "type_name [22752,22759]",
      "dest": "type_name [34483,34490]"
    },
    {
      "src": "[: [ [11277,11278]",
      "dest": "[: [ [13141,13142]"
    },
    {
      "src": "identifier: sender [10924,10930]",
      "dest": "identifier: sender [12788,12794]"
    },
    {
      "src": "type_name [13340,13347]",
      "dest": "type_name [15204,15211]"
    },
    {
      "src": "identifier: sub [1431,1434]",
      "dest": "identifier: sub [3402,3405]"
    },
    {
      "src": "(: ( [1873,1874]",
      "dest": "(: ( [3844,3845]"
    },
    {
      "src": "public: public [40540,40546]",
      "dest": "public: public [47310,47316]"
    },
    {
      "src": "(: ( [15363,15364]",
      "dest": "(: ( [17227,17228]"
    },
    {
      "src": "parameter [7248,7263]",
      "dest": "parameter [9158,9173]"
    },
    {
      "src": "array_access [13969,13983]",
      "dest": "array_access [15833,15847]"
    },
    {
      "src": ".: . [38744,38745]",
      "dest": ".: . [45396,45397]"
    },
    {
      "src": "address: address [20128,20135]",
      "dest": "address: address [30766,30773]"
    },
    {
      "src": "function: function [28728,28736]",
      "dest": "function: function [32367,32375]"
    },
    {
      "src": "(: ( [19416,19417]",
      "dest": "(: ( [37681,37682]"
    },
    {
      "src": "binary_expression [11526,11541]",
      "dest": "binary_expression [13390,13405]"
    },
    {
      "src": "comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [118,693]",
      "dest": "comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [2089,2664]"
    },
    {
      "src": "bytes32: bytes32 [9716,9723]",
      "dest": "bytes32: bytes32 [11580,11587]"
    },
    {
      "src": "parameter [12821,12839]",
      "dest": "parameter [14685,14703]"
    },
    {
      "src": "type_name [9463,9470]",
      "dest": "type_name [11327,11334]"
    },
    {
      "src": "call_argument [31808,31835]",
      "dest": "call_argument [20454,20481]"
    },
    {
      "src": "return: return [39562,39568]",
      "dest": "return: return [46332,46338]"
    },
    {
      "src": "visibility [13374,13380]",
      "dest": "visibility [15238,15244]"
    },
    {
      "src": "bytes32: bytes32 [9463,9470]",
      "dest": "bytes32: bytes32 [11327,11334]"
    },
    {
      "src": "member_expression [14870,14880]",
      "dest": "member_expression [16734,16744]"
    },
    {
      "src": "): ) [6528,6529]",
      "dest": "): ) [8438,8439]"
    },
    {
      "src": "--: -- [12366,12368]",
      "dest": "--: -- [14230,14232]"
    },
    {
      "src": "identifier: errorMessage [5367,5379]",
      "dest": "identifier: errorMessage [7338,7350]"
    },
    {
      "src": "(: ( [29819,29820]",
      "dest": "(: ( [37120,37121]"
    },
    {
      "src": "primitive_type [23464,23471]",
      "dest": "primitive_type [35215,35222]"
    },
    {
      "src": "identifier: require [35701,35708]",
      "dest": "identifier: require [41843,41850]"
    },
    {
      "src": "identifier: _who [10779,10783]",
      "dest": "identifier: _who [12643,12647]"
    },
    {
      "src": "primitive_type [13676,13683]",
      "dest": "primitive_type [15540,15547]"
    },
    {
      "src": "function: function [12555,12563]",
      "dest": "function: function [14419,14427]"
    },
    {
      "src": "array_access [14153,14168]",
      "dest": "array_access [16017,16032]"
    },
    {
      "src": "uint256: uint256 [7954,7961]",
      "dest": "uint256: uint256 [9864,9871]"
    },
    {
      "src": "visibility [8668,8674]",
      "dest": "visibility [10532,10538]"
    },
    {
      "src": "uint256: uint256 [20153,20160]",
      "dest": "uint256: uint256 [30791,30798]"
    },
    {
      "src": "identifier: increaseApproval [21736,21752]",
      "dest": "identifier: increaseAllowance [33729,33746]"
    },
    {
      "src": "visibility [21792,21798]",
      "dest": "visibility [33784,33790]"
    },
    {
      "src": "identifier: OwnershipTransferred [9592,9612]",
      "dest": "identifier: OwnershipTransferred [11456,11476]"
    },
    {
      "src": "type_name [1446,1453]",
      "dest": "type_name [3417,3424]"
    },
    {
      "src": "): ) [37807,37808]",
      "dest": "): ) [44459,44460]"
    },
    {
      "src": "identifier: _attribute [14141,14151]",
      "dest": "identifier: _attribute [16005,16015]"
    },
    {
      "src": "comment: /**      * @dev Modifier throws if called by any account other than the pendingOwner.      */ [31660,31755]",
      "dest": "comment: /**      * @dev Modifier throws if called by any account other than the pendingOwner.      */ [20306,20401]"
    },
    {
      "src": "): ) [5699,5700]",
      "dest": "): ) [7609,7610]"
    },
    {
      "src": "(: ( [5257,5258]",
      "dest": "(: ( [7228,7229]"
    },
    {
      "src": "state_mutability [12866,12870]",
      "dest": "state_mutability [14730,14734]"
    },
    {
      "src": "): ) [1995,1996]",
      "dest": "): ) [3966,3967]"
    },
    {
      "src": "identifier: pendingOwner [15371,15383]",
      "dest": "identifier: pendingOwner [17235,17247]"
    },
    {
      "src": "contract_body [17718,18692]",
      "dest": "contract_body [22143,28211]"
    },
    {
      "src": "member_expression [40296,40333]",
      "dest": "member_expression [47066,47103]"
    },
    {
      "src": "call_argument [36340,36346]",
      "dest": "call_argument [43177,43183]"
    },
    {
      "src": "(: ( [36205,36206]",
      "dest": "(: ( [43076,43077]"
    },
    {
      "src": "return_statement [4708,4753]",
      "dest": "return_statement [6679,6724]"
    },
    {
      "src": "address: address [9695,9702]",
      "dest": "address: address [11559,11566]"
    },
    {
      "src": "comment: // File: @openzeppelin/contracts/token/ERC20/IERC20.sol [5418,5473]",
      "dest": "comment: // &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&& [75,148]"
    },
    {
      "src": "contract_body [15698,17459]",
      "dest": "contract_body [17509,19270]"
    },
    {
      "src": "): ) [13929,13930]",
      "dest": "): ) [15793,15794]"
    },
    {
      "src": "state_mutability [39919,39923]",
      "dest": "state_mutability [46689,46693]"
    },
    {
      "src": "(: ( [10416,10417]",
      "dest": "(: ( [12280,12281]"
    },
    {
      "src": "event: event [8134,8139]",
      "dest": "event: event [10044,10049]"
    },
    {
      "src": "public: public [42319,42325]",
      "dest": "public: public [48950,48956]"
    },
    {
      "src": "function_definition [15277,15459]",
      "dest": "function_definition [17141,17323]"
    },
    {
      "src": "): ) [42615,42616]",
      "dest": "): ) [30936,30937]"
    },
    {
      "src": "call_argument [39587,39604]",
      "dest": "call_argument [46357,46374]"
    },
    {
      "src": "): ) [6193,6194]",
      "dest": "): ) [8103,8104]"
    },
    {
      "src": "parameter [36765,36781]",
      "dest": "parameter [43533,43549]"
    },
    {
      "src": "address: address [19028,19035]",
      "dest": "address: address [30528,30535]"
    },
    {
      "src": "return_type_definition [29009,29023]",
      "dest": "return_type_definition [32122,32136]"
    },
    {
      "src": "emit: emit [11314,11318]",
      "dest": "emit: emit [13178,13182]"
    },
    {
      "src": "}: } [40153,40154]",
      "dest": "}: } [46923,46924]"
    },
    {
      "src": "binary_expression [39534,39545]",
      "dest": "binary_expression [46304,46315]"
    },
    {
      "src": "identifier: _transferAllArgs [35092,35108]",
      "dest": "identifier: _transfer [42675,42684]"
    },
    {
      "src": "primitive_type [29676,29683]",
      "dest": "primitive_type [36739,36746]"
    },
    {
      "src": "type_name [10018,10031]",
      "dest": "type_name [11882,11895]"
    },
    {
      "src": "string_literal [31619,31631]",
      "dest": "string_literal [20265,20277]"
    },
    {
      "src": "type_name [33659,33666]",
      "dest": "type_name [39805,39812]"
    },
    {
      "src": "identifier: balanceOf [37898,37907]",
      "dest": "identifier: balanceOf [44550,44559]"
    },
    {
      "src": "type_name [27410,27417]",
      "dest": "type_name [38607,38614]"
    },
    {
      "src": "type_name [32278,32285]",
      "dest": "type_name [20924,20931]"
    },
    {
      "src": ".: . [11733,11734]",
      "dest": ".: . [13597,13598]"
    },
    {
      "src": "modifier: modifier [33936,33944]",
      "dest": "modifier: modifier [40166,40174]"
    },
    {
      "src": "(: ( [15839,15840]",
      "dest": "(: ( [17650,17651]"
    },
    {
      "src": "primitive_type [23692,23699]",
      "dest": "primitive_type [33747,33754]"
    },
    {
      "src": ".: . [13095,13096]",
      "dest": ".: . [14959,14960]"
    },
    {
      "src": "member_expression [11028,11042]",
      "dest": "member_expression [12892,12906]"
    },
    {
      "src": "returns: returns [11812,11819]",
      "dest": "returns: returns [13676,13683]"
    },
    {
      "src": "comment: // this accessManager, so that it may be replaced by the owner as needed [9385,9457]",
      "dest": "comment: // this accessManager, so that it may be replaced by the owner as needed [11249,11321]"
    },
    {
      "src": "identifier: FIRST_EPOCH_DELAY [38749,38766]",
      "dest": "identifier: FIRST_EPOCH_DELAY [45401,45418]"
    },
    {
      "src": "return_type_definition [5715,5732]",
      "dest": "return_type_definition [7625,7642]"
    },
    {
      "src": ",: , [19026,19027]",
      "dest": ",: , [30526,30527]"
    },
    {
      "src": "state_mutability [40894,40898]",
      "dest": "state_mutability [47664,47668]"
    },
    {
      "src": "member_expression [39569,39609]",
      "dest": "member_expression [46339,46379]"
    },
    {
      "src": "identifier: amount [7688,7694]",
      "dest": "identifier: amount [9598,9604]"
    },
    {
      "src": "): ) [1549,1550]",
      "dest": "): ) [3520,3521]"
    },
    {
      "src": "string [29971,30007]",
      "dest": "string [36994,37030]"
    },
    {
      "src": "identifier: pendingOwner [15426,15438]",
      "dest": "identifier: pendingOwner [17290,17302]"
    },
    {
      "src": "function_body [1956,2053]",
      "dest": "function_body [3927,4024]"
    },
    {
      "src": "): ) [10930,10931]",
      "dest": "): ) [12794,12795]"
    },
    {
      "src": "}: } [13634,13635]",
      "dest": "}: } [15498,15499]"
    },
    {
      "src": "return: return [2767,2773]",
      "dest": "return: return [4738,4744]"
    },
    {
      "src": "event: event [31114,31119]",
      "dest": "event: event [19760,19765]"
    },
    {
      "src": ",: , [7263,7264]",
      "dest": ",: , [9173,9174]"
    },
    {
      "src": "primitive_type [8197,8204]",
      "dest": "primitive_type [10107,10114]"
    },
    {
      "src": "comment: /**      * @dev Decrease the amount of tokens that an owner allowed to a spender.      *      * approve should be called when allowed[_spender] == 0. To decrement      * allowed value is better to use this function to avoid 2 calls (and wait until      * the first transaction is mined)      * From MonolithDAO Token.sol      * @param _spender The address which will spend the funds.      * @param _subtractedValue The amount of tokens to decrease the allowance by.      */ [22220,22702]",
      "dest": "comment: /**      * @dev Returns the name of the token.      */ [30816,30872]"
    },
    {
      "src": "expression_statement [42191,42211]",
      "dest": "expression_statement [48731,48751]"
    },
    {
      "src": "type_name [30077,30084]",
      "dest": "type_name [36031,36038]"
    },
    {
      "src": "visibility [20876,20882]",
      "dest": "visibility [34508,34514]"
    },
    {
      "src": ".: . [11102,11103]",
      "dest": ".: . [12966,12967]"
    },
    {
      "src": "): ) [7279,7280]",
      "dest": "): ) [9189,9190]"
    },
    {
      "src": "binary_expression [1048,1053]",
      "dest": "binary_expression [3019,3024]"
    },
    {
      "src": ".: . [14305,14306]",
      "dest": ".: . [16169,16170]"
    },
    {
      "src": "): ) [15119,15120]",
      "dest": "): ) [16983,16984]"
    },
    {
      "src": "address: address [22734,22741]",
      "dest": "address: address [26454,26461]"
    },
    {
      "src": "{: { [42430,42431]",
      "dest": "{: { [49070,49071]"
    },
    {
      "src": "struct_member [8556,8574]",
      "dest": "struct_member [10420,10438]"
    },
    {
      "src": "identifier: _from [36333,36338]",
      "dest": "identifier: _from [43170,43175]"
    },
    {
      "src": "): ) [40360,40361]",
      "dest": "): ) [47130,47131]"
    },
    {
      "src": "primitive_type [34232,34239]",
      "dest": "primitive_type [40462,40469]"
    },
    {
      "src": "identifier: sender [37137,37143]",
      "dest": "identifier: sender [43851,43857]"
    },
    {
      "src": "{: { [38557,38558]",
      "dest": "{: { [45209,45210]"
    },
    {
      "src": "comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [4173,4624]",
      "dest": "comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [6144,6595]"
    },
    {
      "src": "type_name [13860,13867]",
      "dest": "type_name [15724,15731]"
    },
    {
      "src": "type_name [32042,32049]",
      "dest": "type_name [20688,20695]"
    },
    {
      "src": "(: ( [23859,23860]",
      "dest": "(: ( [35301,35302]"
    },
    {
      "src": "indexed: indexed [9909,9916]",
      "dest": "indexed: indexed [11773,11780]"
    },
    {
      "src": "type_name [2325,2332]",
      "dest": "type_name [4296,4303]"
    },
    {
      "src": "identifier: totalEpochsPassed [38952,38969]",
      "dest": "identifier: totalEpochsPassed [45604,45621]"
    },
    {
      "src": "{: { [29024,29025]",
      "dest": "{: { [48878,48879]"
    },
    {
      "src": "expression_statement [41823,41841]",
      "dest": "expression_statement [48466,48484]"
    },
    {
      "src": "parameter [10672,10686]",
      "dest": "parameter [12536,12550]"
    },
    {
      "src": "call_argument [3354,3382]",
      "dest": "call_argument [5325,5353]"
    },
    {
      "src": "): ) [15450,15451]",
      "dest": "): ) [17314,17315]"
    },
    {
      "src": "call_argument [36333,36338]",
      "dest": "call_argument [43170,43175]"
    },
    {
      "src": "identifier: _notes [10821,10827]",
      "dest": "identifier: _notes [12685,12691]"
    },
    {
      "src": "): ) [38244,38245]",
      "dest": "): ) [44896,44897]"
    },
    {
      "src": "boolean_literal [28933,28937]",
      "dest": "boolean_literal [32515,32519]"
    },
    {
      "src": "member_expression [12148,12163]",
      "dest": "member_expression [14012,14027]"
    },
    {
      "src": "bool: bool [28846,28850]",
      "dest": "bool: bool [32441,32445]"
    },
    {
      "src": "expression_statement [14110,14188]",
      "dest": "expression_statement [15974,16052]"
    },
    {
      "src": "while: while [11053,11058]",
      "dest": "while: while [12917,12922]"
    },
    {
      "src": "identifier: _attribute [11962,11972]",
      "dest": "identifier: _attribute [13826,13836]"
    },
    {
      "src": "type_name [24058,24065]",
      "dest": "type_name [32384,32391]"
    },
    {
      "src": ".: . [10846,10847]",
      "dest": ".: . [12710,12711]"
    },
    {
      "src": "(: ( [12576,12577]",
      "dest": "(: ( [14440,14441]"
    },
    {
      "src": "type_name [1016,1023]",
      "dest": "type_name [2987,2994]"
    },
    {
      "src": "primitive_type [27424,27431]",
      "dest": "primitive_type [26489,26496]"
    },
    {
      "src": "): ) [30543,30544]",
      "dest": "): ) [24445,24446]"
    },
    {
      "src": "(: ( [37132,37133]",
      "dest": "(: ( [43846,43847]"
    },
    {
      "src": "array_access [10768,10796]",
      "dest": "array_access [12632,12660]"
    },
    {
      "src": "identifier: _value [35735,35741]",
      "dest": "identifier: _value [41877,41883]"
    },
    {
      "src": "binary_expression [12361,12372]",
      "dest": "binary_expression [14225,14236]"
    },
    {
      "src": "comment: // distribution * (epochsLeft / totalEpochs) [37394,37438]",
      "dest": "comment: // distribution * (epochsLeft / totalEpochs) [44108,44152]"
    },
    {
      "src": "identifier: require [1967,1974]",
      "dest": "identifier: require [3938,3945]"
    },
    {
      "src": "type_name [15978,15985]",
      "dest": "type_name [17789,17796]"
    },
    {
      "src": "call_argument [35833,35839]",
      "dest": "call_argument [41962,41968]"
    },
    {
      "src": "}: } [37581,37582]",
      "dest": "}: } [44233,44234]"
    },
    {
      "src": "struct: struct [8476,8482]",
      "dest": "struct: struct [10340,10346]"
    },
    {
      "src": "number_literal: 0 [12694,12695]",
      "dest": "number_literal: 0 [14558,14559]"
    },
    {
      "src": "expression_statement [29035,29077]",
      "dest": "expression_statement [48889,48915]"
    },
    {
      "src": "function_definition [10563,11166]",
      "dest": "function_definition [12427,13030]"
    },
    {
      "src": ",: , [14387,14388]",
      "dest": ",: , [16251,16252]"
    },
    {
      "src": "returns: returns [6544,6551]",
      "dest": "returns: returns [8454,8461]"
    },
    {
      "src": "primitive_type [38363,38370]",
      "dest": "primitive_type [45015,45022]"
    },
    {
      "src": "event_paramater [9928,9960]",
      "dest": "event_paramater [11792,11824]"
    },
    {
      "src": "string [14681,14693]",
      "dest": "string [16545,16557]"
    },
    {
      "src": "variable_declaration_statement [12245,12303]",
      "dest": "variable_declaration_statement [14109,14167]"
    },
    {
      "src": "call_argument [10733,10743]",
      "dest": "call_argument [12597,12607]"
    },
    {
      "src": ",: , [35826,35827]",
      "dest": ",: , [41955,41956]"
    },
    {
      "src": "(: ( [2614,2615]",
      "dest": "(: ( [4585,4586]"
    },
    {
      "src": "state_mutability [38119,38123]",
      "dest": "state_mutability [44771,44775]"
    },
    {
      "src": "primitive_type [20128,20135]",
      "dest": "primitive_type [30766,30773]"
    },
    {
      "src": "function: function [13476,13484]",
      "dest": "function: function [15340,15348]"
    },
    {
      "src": "}: } [5410,5411]",
      "dest": "}: } [7381,7382]"
    },
    {
      "src": "comment: /* Additionally, we have several keccak-based storage locations.      * If you add more keccak-based storage mappings, such as mappings, you must document them here.      * If the length of the keccak input is the same as an existing mapping, it is possible there could be a preimage collision.      * A preimage collision can be used to attack the contract by treating one storage location as another,      * which would always be a critical issue.      * Carefully examine future keccak-based storage to ensure there can be no preimage collisions.      *******************************************************************************************************      ** length     input                                                         usage      *******************************************************************************************************      ** 19         \"trueXXX.proxy.owner\"                                         Proxy Owner      ** 27         \"trueXXX.pending.proxy.owner\"                                 Pending Proxy Owner      ** 28         \"trueXXX.proxy.implementation\"                                Proxy Implementation      ** 64         uint256(address),uint256(1)                                   balanceOf      ** 64         uint256(address),keccak256(uint256(address),uint256(2))       allowance      ** 64         uint256(address),keccak256(bytes32,uint256(3))                attributes      **/ [16008,17456]",
      "dest": "comment: /* Additionally, we have several keccak-based storage locations.      * If you add more keccak-based storage mappings, such as mappings, you must document them here.      * If the length of the keccak input is the same as an existing mapping, it is possible there could be a preimage collision.      * A preimage collision can be used to attack the contract by treating one storage location as another,      * which would always be a critical issue.      * Carefully examine future keccak-based storage to ensure there can be no preimage collisions.      *******************************************************************************************************      ** length     input                                                         usage      *******************************************************************************************************      ** 19         \"trueXXX.proxy.owner\"                                         Proxy Owner      ** 27         \"trueXXX.pending.proxy.owner\"                                 Pending Proxy Owner      ** 28         \"trueXXX.proxy.implementation\"                                Proxy Implementation      ** 64         uint256(address),uint256(1)                                   balanceOf      ** 64         uint256(address),keccak256(uint256(address),uint256(2))       allowance      ** 64         uint256(address),keccak256(bytes32,uint256(3))                attributes      **/ [17819,19267]"
    },
    {
      "src": "): ) [33465,33466]",
      "dest": "): ) [39611,39612]"
    },
    {
      "src": "member_expression [14491,14505]",
      "dest": "member_expression [16355,16369]"
    },
    {
      "src": "pragma_directive [24256,24279]",
      "dest": "pragma_directive [47730,47753]"
    },
    {
      "src": "string_literal [2718,2753]",
      "dest": "string_literal [4689,4724]"
    },
    {
      "src": "solidity: solidity [32520,32528]",
      "dest": "solidity: solidity [19281,19289]"
    },
    {
      "src": "primitive_type [27410,27417]",
      "dest": "primitive_type [38607,38614]"
    },
    {
      "src": "(: ( [10434,10435]",
      "dest": "(: ( [12298,12299]"
    },
    {
      "src": ",: , [10918,10919]",
      "dest": ",: , [12782,12783]"
    },
    {
      "src": "type_name [18510,18517]",
      "dest": "type_name [27296,27303]"
    },
    {
      "src": "type_name [9843,9850]",
      "dest": "type_name [11707,11714]"
    },
    {
      "src": "identifier: require [5351,5358]",
      "dest": "identifier: require [7322,7329]"
    },
    {
      "src": "uint256: uint256 [11012,11019]",
      "dest": "uint256: uint256 [12876,12883]"
    },
    {
      "src": "identifier: IERC20 [5590,5596]",
      "dest": "identifier: IERC20 [7500,7506]"
    },
    {
      "src": "modifier: modifier [31761,31769]",
      "dest": "modifier: modifier [20407,20415]"
    },
    {
      "src": "type_name [5880,5887]",
      "dest": "type_name [7790,7797]"
    },
    {
      "src": "public: public [31359,31365]",
      "dest": "public: public [20005,20011]"
    },
    {
      "src": "\": \" [1108,1109]",
      "dest": "\": \" [3079,3080]"
    },
    {
      "src": "return_statement [5391,5404]",
      "dest": "return_statement [7362,7375]"
    },
    {
      "src": "primitive_type [35507,35514]",
      "dest": "primitive_type [41422,41429]"
    },
    {
      "src": "uint256: uint256 [1016,1023]",
      "dest": "uint256: uint256 [2987,2994]"
    },
    {
      "src": "call_expression [3344,3383]",
      "dest": "call_expression [5315,5354]"
    },
    {
      "src": "type_name [8660,8667]",
      "dest": "type_name [10524,10531]"
    },
    {
      "src": "state_mutability [5317,5321]",
      "dest": "state_mutability [7288,7292]"
    },
    {
      "src": "identifier: mod [5254,5257]",
      "dest": "identifier: mod [7225,7228]"
    },
    {
      "src": "parameter [35507,35520]",
      "dest": "parameter [41422,41435]"
    },
    {
      "src": ".: . [11871,11872]",
      "dest": ".: . [13735,13736]"
    },
    {
      "src": "identifier: allowance [15868,15877]",
      "dest": "identifier: allowance [17679,17688]"
    },
    {
      "src": "): ) [35600,35601]",
      "dest": "): ) [41488,41489]"
    },
    {
      "src": "]: ] [13274,13275]",
      "dest": "]: ] [15138,15139]"
    },
    {
      "src": "): ) [9869,9870]",
      "dest": "): ) [11733,11734]"
    },
    {
      "src": "virtual: virtual [30115,30122]",
      "dest": "virtual: virtual [36073,36080]"
    },
    {
      "src": "string: string [18530,18536]",
      "dest": "string: string [25909,25915]"
    },
    {
      "src": "): ) [5338,5339]",
      "dest": "): ) [7309,7310]"
    },
    {
      "src": "parameter [1446,1455]",
      "dest": "parameter [3417,3426]"
    },
    {
      "src": "is: is [33300,33302]",
      "dest": "is: is [39457,39459]"
    },
    {
      "src": "binary_expression [13908,13929]",
      "dest": "binary_expression [15772,15793]"
    },
    {
      "src": "}: } [38932,38933]",
      "dest": "}: } [45584,45585]"
    },
    {
      "src": "address: address [28355,28362]",
      "dest": "address: address [37772,37779]"
    },
    {
      "src": "primitive_type [30090,30097]",
      "dest": "primitive_type [36048,36055]"
    },
    {
      "src": "emit: emit [10868,10872]",
      "dest": "emit: emit [12732,12736]"
    },
    {
      "src": "variable_declaration_statement [2007,2025]",
      "dest": "variable_declaration_statement [3978,3996]"
    },
    {
      "src": "function: function [30062,30070]",
      "dest": "function: function [36016,36024]"
    },
    {
      "src": "): ) [40729,40730]",
      "dest": "): ) [47499,47500]"
    },
    {
      "src": "identifier: msg [10745,10748]",
      "dest": "identifier: msg [12609,12612]"
    },
    {
      "src": "identifier: syncAttributeValue [14117,14135]",
      "dest": "identifier: syncAttributeValue [15981,15999]"
    },
    {
      "src": "call_argument [29620,29625]",
      "dest": "call_argument [41729,41734]"
    },
    {
      "src": "function: function [3259,3267]",
      "dest": "function: function [5230,5238]"
    },
    {
      "src": "}: } [8214,8215]",
      "dest": "}: } [10124,10125]"
    },
    {
      "src": "return: return [4708,4714]",
      "dest": "return: return [6679,6685]"
    },
    {
      "src": "[: [ [12290,12291]",
      "dest": "[: [ [14154,14155]"
    },
    {
      "src": "function_definition [13476,13635]",
      "dest": "function_definition [15340,15499]"
    },
    {
      "src": "identifier: TrustToken [41363,41373]",
      "dest": "identifier: TrustToken [48078,48088]"
    },
    {
      "src": "identifier: FIRST_EPOCH_DELAY [40311,40328]",
      "dest": "identifier: FIRST_EPOCH_DELAY [47081,47098]"
    },
    {
      "src": "visibility [29000,29008]",
      "dest": "visibility [48869,48877]"
    },
    {
      "src": "call_expression [1507,1550]",
      "dest": "call_expression [3478,3521]"
    },
    {
      "src": "comment: // File: contracts/trusttokens/ValSafeMath.sol [17463,17509]",
      "dest": "comment: // &&&&&&&&&&&&&&&&&&&&#.        ,/#%%%%%%%#(/,      *%&&&&&&&&&&&&&&&&&& [300,373]"
    },
    {
      "src": "uint256: uint256 [29691,29698]",
      "dest": "uint256: uint256 [36756,36763]"
    },
    {
      "src": "event_definition [9798,9871]",
      "dest": "event_definition [11662,11735]"
    },
    {
      "src": "}: } [37951,37952]",
      "dest": "}: } [44603,44604]"
    },
    {
      "src": "): ) [10481,10482]",
      "dest": "): ) [12345,12346]"
    },
    {
      "src": "(: ( [28883,28884]",
      "dest": "(: ( [32466,32467]"
    },
    {
      "src": "primitive_type [30148,30155]",
      "dest": "primitive_type [36356,36363]"
    },
    {
      "src": ",: , [30163,30164]",
      "dest": ",: , [36375,36376]"
    },
    {
      "src": "parameter [6498,6511]",
      "dest": "parameter [8408,8421]"
    },
    {
      "src": "string_literal [36952,36978]",
      "dest": "string_literal [36123,36156]"
    },
    {
      "src": "{: { [40570,40571]",
      "dest": "{: { [47340,47341]"
    },
    {
      "src": "identifier: div [37557,37560]",
      "dest": "identifier: div [44209,44212]"
    },
    {
      "src": "block_statement [2623,2658]",
      "dest": "block_statement [4594,4629]"
    },
    {
      "src": "parameter [24081,24097]",
      "dest": "parameter [33039,33056]"
    },
    {
      "src": "library_declaration [17698,18692]",
      "dest": "library_declaration [22127,28211]"
    },
    {
      "src": "comment: // benefit is lost if 'b' is also tested. [2479,2520]",
      "dest": "comment: // benefit is lost if 'b' is also tested. [4450,4491]"
    },
    {
      "src": ",: , [12134,12135]",
      "dest": ",: , [13998,13999]"
    },
    {
      "src": "): ) [29705,29706]",
      "dest": "): ) [36770,36771]"
    },
    {
      "src": "identifier: _admin [10385,10391]",
      "dest": "identifier: _admin [12249,12255]"
    },
    {
      "src": "}: } [38976,38977]",
      "dest": "}: } [45628,45629]"
    },
    {
      "src": "call_argument [30429,30451]",
      "dest": "call_argument [35569,35609]"
    },
    {
      "src": "string [9509,9522]",
      "dest": "string [11373,11386]"
    },
    {
      "src": "return_type_definition [20883,20897]",
      "dest": "return_type_definition [34523,34537]"
    },
    {
      "src": "call_argument [29279,29284]",
      "dest": "call_argument [42299,42304]"
    },
    {
      "src": "): ) [2377,2378]",
      "dest": "): ) [4348,4349]"
    },
    {
      "src": "(: ( [8350,8351]",
      "dest": "(: ( [10214,10215]"
    },
    {
      "src": "call_expression [39569,39605]",
      "dest": "call_expression [46339,46375]"
    },
    {
      "src": "member_expression [42136,42151]",
      "dest": "member_expression [48676,48691]"
    },
    {
      "src": "identifier: data [13025,13029]",
      "dest": "identifier: data [14889,14893]"
    },
    {
      "src": "true: true [22893,22897]",
      "dest": "true: true [33299,33303]"
    },
    {
      "src": "binary_expression [2019,2024]",
      "dest": "binary_expression [3990,3995]"
    },
    {
      "src": "[: [ [11675,11676]",
      "dest": "[: [ [13539,13540]"
    },
    {
      "src": "identifier: target [14110,14116]",
      "dest": "identifier: target [15974,15980]"
    },
    {
      "src": "internal: internal [19122,19130]",
      "dest": "internal: internal [35266,35274]"
    },
    {
      "src": "visibility [15861,15867]",
      "dest": "visibility [17672,17678]"
    },
    {
      "src": "identifier: FIRST_EPOCH_DELAY [33676,33693]",
      "dest": "identifier: FIRST_EPOCH_DELAY [39822,39839]"
    },
    {
      "src": "view: view [37360,37364]",
      "dest": "view: view [45666,45670]"
    },
    {
      "src": "user_defined_type [10018,10031]",
      "dest": "user_defined_type [11882,11895]"
    },
    {
      "src": "type_name [3317,3324]",
      "dest": "type_name [5288,5295]"
    },
    {
      "src": "\": \" [2718,2719]",
      "dest": "\": \" [4689,4690]"
    },
    {
      "src": "address: address [32042,32049]",
      "dest": "address: address [20688,20695]"
    },
    {
      "src": "indexed: indexed [31149,31156]",
      "dest": "indexed: indexed [19795,19802]"
    },
    {
      "src": "{: { [33968,33969]",
      "dest": "{: { [40198,40199]"
    },
    {
      "src": "call_argument [28884,28889]",
      "dest": "call_argument [32481,32488]"
    },
    {
      "src": "number_literal: 0 [39544,39545]",
      "dest": "number_literal: 0 [46314,46315]"
    },
    {
      "src": "identifier: finalEpoch [40527,40537]",
      "dest": "identifier: finalEpoch [47297,47307]"
    },
    {
      "src": "call_expression [38384,38415]",
      "dest": "call_expression [45036,45067]"
    },
    {
      "src": "primitive_type [15727,15734]",
      "dest": "primitive_type [17538,17545]"
    },
    {
      "src": "}: } [8446,8447]",
      "dest": "}: } [10310,10311]"
    },
    {
      "src": "parameter [7265,7279]",
      "dest": "parameter [9175,9189]"
    },
    {
      "src": ",: , [30227,30228]",
      "dest": ",: , [27530,27531]"
    },
    {
      "src": "function_definition [28728,28945]",
      "dest": "function_definition [32367,32527]"
    },
    {
      "src": "call_argument [9509,9522]",
      "dest": "call_argument [11373,11386]"
    },
    {
      "src": "array_access [13589,13617]",
      "dest": "array_access [15453,15481]"
    },
    {
      "src": "identifier: amount [36873,36879]",
      "dest": "identifier: amount [43641,43647]"
    },
    {
      "src": "): ) [9522,9523]",
      "dest": "): ) [11386,11387]"
    },
    {
      "src": "event_paramater [9815,9841]",
      "dest": "event_paramater [11679,11705]"
    },
    {
      "src": "type_name [11213,11226]",
      "dest": "type_name [13077,13090]"
    },
    {
      "src": "]: ] [11609,11610]",
      "dest": "]: ] [13473,13474]"
    },
    {
      "src": "function_body [32267,32452]",
      "dest": "function_body [20913,21098]"
    },
    {
      "src": "update_expression [11060,11067]",
      "dest": "update_expression [12924,12931]"
    },
    {
      "src": ",: , [19255,19256]",
      "dest": ",: , [35406,35407]"
    },
    {
      "src": "(: ( [1479,1480]",
      "dest": "(: ( [3450,3451]"
    },
    {
      "src": "identifier: timestamp [10847,10856]",
      "dest": "identifier: timestamp [12711,12720]"
    },
    {
      "src": "identifier: _attribute [10733,10743]",
      "dest": "identifier: _attribute [12597,12607]"
    },
    {
      "src": "identifier: _mint [30071,30076]",
      "dest": "identifier: _mint [36025,36030]"
    },
    {
      "src": "(: ( [37544,37545]",
      "dest": "(: ( [44194,44195]"
    },
    {
      "src": "==: == [2712,2714]",
      "dest": "==: == [4683,4685]"
    },
    {
      "src": "call_expression [14652,14694]",
      "dest": "call_expression [16516,16558]"
    },
    {
      "src": ".: . [29055,29056]",
      "dest": ".: . [48898,48899]"
    },
    {
      "src": "}: } [14344,14345]",
      "dest": "}: } [16208,16209]"
    },
    {
      "src": "comment: /*      * @dev Get number of epochs passed      * @return Value between 0 and 8 of lockup epochs already passed      */ [37960,38082]",
      "dest": "comment: /*      * @dev Get number of epochs passed      * @return Value between 0 and 8 of lockup epochs already passed      */ [44612,44734]"
    },
    {
      "src": "identifier: i [14089,14090]",
      "dest": "identifier: i [15953,15954]"
    },
    {
      "src": "function_definition [15076,15180]",
      "dest": "function_definition [16940,17044]"
    },
    {
      "src": "call_expression [14110,14187]",
      "dest": "call_expression [15974,16051]"
    },
    {
      "src": "type_name [7265,7272]",
      "dest": "type_name [9175,9182]"
    },
    {
      "src": "function: function [10563,10571]",
      "dest": "function: function [12427,12435]"
    },
    {
      "src": "): ) [11302,11303]",
      "dest": "): ) [13166,13167]"
    },
    {
      "src": "uint256: uint256 [33746,33753]",
      "dest": "uint256: uint256 [39892,39899]"
    },
    {
      "src": "call_argument [19249,19255]",
      "dest": "call_argument [35383,35406]"
    },
    {
      "src": "user_defined_type [41377,41392]",
      "dest": "user_defined_type [48092,48107]"
    },
    {
      "src": "return_type_definition [13386,13403]",
      "dest": "return_type_definition [15250,15267]"
    },
    {
      "src": "comment: // see RegistrySubscriber [15924,15949]",
      "dest": "comment: // see RegistrySubscriber [17735,17760]"
    },
    {
      "src": "array_access [13032,13048]",
      "dest": "array_access [14896,14912]"
    },
    {
      "src": "call_argument [34378,34417]",
      "dest": "call_argument [40608,40647]"
    },
    {
      "src": "return_statement [38902,38922]",
      "dest": "return_statement [45554,45574]"
    },
    {
      "src": "identifier: receiver [36936,36944]",
      "dest": "identifier: receiver [43769,43777]"
    },
    {
      "src": "expression_statement [33979,34044]",
      "dest": "expression_statement [40209,40274]"
    },
    {
      "src": "): ) [11356,11357]",
      "dest": "): ) [13220,13221]"
    },
    {
      "src": "public: public [11800,11806]",
      "dest": "public: public [13664,13670]"
    },
    {
      "src": "variable_declaration_statement [10944,11002]",
      "dest": "variable_declaration_statement [12808,12866]"
    },
    {
      "src": "expression_statement [12079,12165]",
      "dest": "expression_statement [13943,14029]"
    },
    {
      "src": "identifier: _who [12423,12427]",
      "dest": "identifier: _who [14287,14291]"
    },
    {
      "src": "return: return [39407,39413]",
      "dest": "return: return [46177,46183]"
    },
    {
      "src": "event: event [9798,9803]",
      "dest": "event: event [11662,11667]"
    },
    {
      "src": "variable_declaration [2670,2679]",
      "dest": "variable_declaration [4641,4650]"
    },
    {
      "src": "identifier: _to [42197,42200]",
      "dest": "identifier: _to [48737,48740]"
    },
    {
      "src": "parameter [27410,27422]",
      "dest": "parameter [38607,38619]"
    },
    {
      "src": "address: address [9765,9772]",
      "dest": "address: address [11629,11636]"
    },
    {
      "src": "identifier: _attribute [10785,10795]",
      "dest": "identifier: _attribute [12649,12659]"
    },
    {
      "src": "identifier: msg [12056,12059]",
      "dest": "identifier: msg [13920,13923]"
    },
    {
      "src": "identifier: IERC20 [14375,14381]",
      "dest": "identifier: IERC20 [16239,16245]"
    },
    {
      "src": "function_body [13404,13468]",
      "dest": "function_body [15268,15332]"
    },
    {
      "src": "external: external [5857,5865]",
      "dest": "external: external [7767,7775]"
    },
    {
      "src": "visibility [13541,13547]",
      "dest": "visibility [15405,15411]"
    },
    {
      "src": "parameter [22794,22798]",
      "dest": "parameter [33098,33102]"
    },
    {
      "src": "call_argument [14511,14518]",
      "dest": "call_argument [16375,16382]"
    },
    {
      "src": "call_argument [35116,35119]",
      "dest": "call_argument [42692,42698]"
    },
    {
      "src": "function: function [15076,15084]",
      "dest": "function: function [16940,16948]"
    },
    {
      "src": "address: address [35531,35538]",
      "dest": "address: address [41446,41453]"
    },
    {
      "src": "(: ( [12123,12124]",
      "dest": "(: ( [13987,13988]"
    },
    {
      "src": "external: external [34261,34269]",
      "dest": "external: external [40491,40499]"
    },
    {
      "src": "identifier: _notes [10912,10918]",
      "dest": "identifier: _notes [12776,12782]"
    },
    {
      "src": "(: ( [37791,37792]",
      "dest": "(: ( [44443,44444]"
    },
    {
      "src": "!=: != [34398,34400]",
      "dest": "!=: != [40628,40630]"
    },
    {
      "src": "call_expression [39265,39279]",
      "dest": "call_expression [46035,46049]"
    },
    {
      "src": "): ) [29830,29831]",
      "dest": "): ) [37131,37132]"
    },
    {
      "src": "comment: /**      * @dev transferFrom function which includes unlocked tokens      * @param _from The address to send tokens from      * @param _to The address that will receive the tokens      * @param _value The amount of tokens to be transferred      * @param _spender The address allowed to make the transfer      */ [35144,35461]",
      "dest": "comment: /**      * @dev Permanently lock transfers to return address      * Lock returns so there isn't always a way to send locked tokens      */ [40745,40886]"
    },
    {
      "src": "call_argument [31433,31443]",
      "dest": "call_argument [20079,20089]"
    },
    {
      "src": "function: function [1861,1869]",
      "dest": "function: function [3832,3840]"
    },
    {
      "src": "(: ( [34231,34232]",
      "dest": "(: ( [40461,40462]"
    },
    {
      "src": "visibility [19550,19558]",
      "dest": "visibility [21697,21705]"
    },
    {
      "src": "): ) [15301,15302]",
      "dest": "): ) [17165,17166]"
    },
    {
      "src": "[: [ [36935,36936]",
      "dest": "[: [ [43768,43769]"
    },
    {
      "src": "primitive_type [21027,21034]",
      "dest": "primitive_type [25471,25478]"
    },
    {
      "src": "identifier: _ [31847,31848]",
      "dest": "identifier: _ [20493,20494]"
    },
    {
      "src": "identifier: index [11060,11065]",
      "dest": "identifier: index [12924,12929]"
    },
    {
      "src": "uint256: uint256 [2007,2014]",
      "dest": "uint256: uint256 [3978,3985]"
    },
    {
      "src": "array_access [11630,11661]",
      "dest": "array_access [13494,13525]"
    },
    {
      "src": "}: } [11885,11886]",
      "dest": "}: } [13749,13750]"
    },
    {
      "src": "if_statement [38212,38281]",
      "dest": "if_statement [44864,44933]"
    },
    {
      "src": "]: ] [14090,14091]",
      "dest": "]: ] [15954,15955]"
    },
    {
      "src": "): ) [42209,42210]",
      "dest": "): ) [48749,48750]"
    },
    {
      "src": "function: function [42382,42390]",
      "dest": "function: function [49022,49030]"
    },
    {
      "src": "uint256: uint256 [33819,33826]",
      "dest": "uint256: uint256 [39965,39972]"
    },
    {
      "src": "variable_declaration [29348,29360]",
      "dest": "variable_declaration [24538,24550]"
    },
    {
      "src": "identifier: pendingOwner_ [32418,32431]",
      "dest": "identifier: pendingOwner_ [21064,21077]"
    },
    {
      "src": "call_argument [5367,5379]",
      "dest": "call_argument [7338,7350]"
    },
    {
      "src": ",: , [15369,15370]",
      "dest": ",: , [17233,17234]"
    },
    {
      "src": "type_name [8556,8563]",
      "dest": "type_name [10420,10427]"
    },
    {
      "src": "]: ] [11101,11102]",
      "dest": "]: ] [12965,12966]"
    },
    {
      "src": "visibility [7281,7289]",
      "dest": "visibility [9191,9199]"
    },
    {
      "src": "return: return [11841,11847]",
      "dest": "return: return [13705,13711]"
    },
    {
      "src": "call_argument [31445,31455]",
      "dest": "call_argument [20091,20101]"
    },
    {
      "src": "(: ( [40560,40561]",
      "dest": "(: ( [47330,47331]"
    },
    {
      "src": "identifier: newOwner [15111,15119]",
      "dest": "identifier: newOwner [16975,16983]"
    },
    {
      "src": "(: ( [42151,42152]",
      "dest": "(: ( [48691,48692]"
    },
    {
      "src": "(: ( [11820,11821]",
      "dest": "(: ( [13684,13685]"
    },
    {
      "src": "pure: pure [2356,2360]",
      "dest": "pure: pure [4327,4331]"
    },
    {
      "src": "(: ( [10812,10813]",
      "dest": "(: ( [12676,12677]"
    },
    {
      "src": "): ) [31357,31358]",
      "dest": "): ) [20003,20004]"
    },
    {
      "src": "identifier: initalized [41717,41727]",
      "dest": "identifier: initalized [48391,48401]"
    },
    {
      "src": "}: } [38591,38592]",
      "dest": "}: } [45243,45244]"
    },
    {
      "src": "address: address [31172,31179]",
      "dest": "address: address [19818,19825]"
    },
    {
      "src": "bytes32: bytes32 [11394,11401]",
      "dest": "bytes32: bytes32 [13258,13265]"
    },
    {
      "src": "identifier: claimOwnership [15286,15300]",
      "dest": "identifier: claimOwnership [17150,17164]"
    },
    {
      "src": "primitive_type [9538,9545]",
      "dest": "primitive_type [11402,11409]"
    },
    {
      "src": "expression_statement [32418,32445]",
      "dest": "expression_statement [21064,21091]"
    },
    {
      "src": "type_name [19028,19035]",
      "dest": "type_name [30528,30535]"
    },
    {
      "src": "function: function [37313,37321]",
      "dest": "function: function [44027,44035]"
    },
    {
      "src": "expression_statement [35086,35129]",
      "dest": "expression_statement [42669,42708]"
    },
    {
      "src": "returns: returns [5715,5722]",
      "dest": "returns: returns [7625,7632]"
    },
    {
      "src": "primitive_type [37792,37799]",
      "dest": "primitive_type [44444,44451]"
    },
    {
      "src": ",: , [35114,35115]",
      "dest": ",: , [42690,42691]"
    },
    {
      "src": "pure: pure [40894,40898]",
      "dest": "pure: pure [47664,47668]"
    },
    {
      "src": "primitive_type [9258,9265]",
      "dest": "primitive_type [11122,11129]"
    },
    {
      "src": "visibility [31037,31043]",
      "dest": "visibility [19683,19689]"
    },
    {
      "src": "\": \" [34334,34335]",
      "dest": "\": \" [40564,40565]"
    },
    {
      "src": "type_name [15957,15964]",
      "dest": "type_name [17768,17775]"
    },
    {
      "src": "[: [ [13976,13977]",
      "dest": "[: [ [15840,15841]"
    },
    {
      "src": "returns: returns [31049,31056]",
      "dest": "returns: returns [19695,19702]"
    },
    {
      "src": "parameter [12807,12819]",
      "dest": "parameter [14671,14683]"
    },
    {
      "src": "external: external [7281,7289]",
      "dest": "external: external [9191,9199]"
    },
    {
      "src": "number_literal: 0 [30156,30157]",
      "dest": "number_literal: 0 [36364,36365]"
    },
    {
      "src": "variable_declaration [12313,12326]",
      "dest": "variable_declaration [14177,14190]"
    },
    {
      "src": "function_body [12012,12467]",
      "dest": "function_body [13876,14331]"
    },
    {
      "src": "(: ( [13561,13562]",
      "dest": "(: ( [15425,15426]"
    },
    {
      "src": "(: ( [38524,38525]",
      "dest": "(: ( [45176,45177]"
    },
    {
      "src": "primitive_type [23715,23722]",
      "dest": "primitive_type [34466,34473]"
    },
    {
      "src": "identifier: claimOwnership [32226,32240]",
      "dest": "identifier: claimOwnership [20872,20886]"
    },
    {
      "src": "[: [ [11095,11096]",
      "dest": "[: [ [12959,12960]"
    },
    {
      "src": "assignment_expression [32418,32444]",
      "dest": "assignment_expression [21064,21090]"
    },
    {
      "src": "call_argument [30537,30543]",
      "dest": "call_argument [41736,41742]"
    },
    {
      "src": "array_access [11266,11289]",
      "dest": "array_access [13130,13153]"
    },
    {
      "src": "public: public [20876,20882]",
      "dest": "public: public [34508,34514]"
    },
    {
      "src": "\": \" [36881,36882]",
      "dest": "\": \" [43649,43650]"
    },
    {
      "src": "identifier: index [12321,12326]",
      "dest": "identifier: index [14185,14190]"
    },
    {
      "src": "type_name [8584,8591]",
      "dest": "type_name [10448,10455]"
    },
    {
      "src": "primitive_type [23487,23494]",
      "dest": "primitive_type [37613,37620]"
    },
    {
      "src": "}: } [11746,11747]",
      "dest": "}: } [13610,13611]"
    },
    {
      "src": "address: address [23692,23699]",
      "dest": "address: address [33747,33754]"
    },
    {
      "src": "type_name [11193,11200]",
      "dest": "type_name [13057,13064]"
    },
    {
      "src": "comment: /**      * @dev Set TimeLockRegistry address      * @param newTimeLockRegistry Address of TimeLockRegistry contract      */ [34071,34197]",
      "dest": "comment: /**      * @dev Set TimeLockRegistry address      * @param newTimeLockRegistry Address of TimeLockRegistry contract      */ [40301,40427]"
    },
    {
      "src": "expression_statement [35794,35851]",
      "dest": "expression_statement [41934,41970]"
    },
    {
      "src": "function: function [42465,42473]",
      "dest": "function: function [31057,31065]"
    },
    {
      "src": "{: { [38246,38247]",
      "dest": "{: { [44898,44899]"
    },
    {
      "src": "\": \" [23891,23892]",
      "dest": "\": \" [35362,35363]"
    },
    {
      "src": "identifier: require [33979,33986]",
      "dest": "identifier: require [40209,40216]"
    },
    {
      "src": "primitive_type [6155,6162]",
      "dest": "primitive_type [8065,8072]"
    },
    {
      "src": "{: { [39197,39198]",
      "dest": "{: { [45967,45968]"
    },
    {
      "src": "view: view [5866,5870]",
      "dest": "view: view [7776,7780]"
    },
    {
      "src": "view: view [25651,25655]",
      "dest": "view: view [44074,44078]"
    },
    {
      "src": ">: > [13916,13917]",
      "dest": ">: > [15780,15781]"
    },
    {
      "src": "function_body [14641,14714]",
      "dest": "function_body [16505,16578]"
    },
    {
      "src": "type_name [21753,21760]",
      "dest": "type_name [25874,25881]"
    },
    {
      "src": "): ) [39727,39728]",
      "dest": "): ) [46497,46498]"
    },
    {
      "src": "=: = [9497,9498]",
      "dest": "=: = [11361,11362]"
    },
    {
      "src": "identifier: a [4719,4720]",
      "dest": "identifier: a [6690,6691]"
    },
    {
      "src": ",: , [5267,5268]",
      "dest": ",: , [7238,7239]"
    },
    {
      "src": "address: address [9843,9850]",
      "dest": "address: address [11707,11714]"
    },
    {
      "src": ",: , [8402,8403]",
      "dest": ",: , [10266,10267]"
    },
    {
      "src": ".: . [12153,12154]",
      "dest": ".: . [14017,14018]"
    },
    {
      "src": "event_paramater [8197,8210]",
      "dest": "event_paramater [10107,10120]"
    },
    {
      "src": "call_expression [10404,10484]",
      "dest": "call_expression [12268,12348]"
    },
    {
      "src": "{: { [30919,30920]",
      "dest": "{: { [19565,19566]"
    },
    {
      "src": "function_body [34280,34507]",
      "dest": "function_body [40510,40737]"
    },
    {
      "src": "type_name [7248,7255]",
      "dest": "type_name [9158,9165]"
    },
    {
      "src": "if: if [38849,38851]",
      "dest": "if: if [45501,45503]"
    },
    {
      "src": "binary_expression [5398,5403]",
      "dest": "binary_expression [7369,7374]"
    },
    {
      "src": "identifier: a [1443,1444]",
      "dest": "identifier: a [3414,3415]"
    },
    {
      "src": "comment: // if all epochs passed, return [39292,39323]",
      "dest": "comment: // if all epochs passed, return [46062,46093]"
    },
    {
      "src": "state_mutability [5710,5714]",
      "dest": "state_mutability [7620,7624]"
    },
    {
      "src": "function_body [31366,31464]",
      "dest": "function_body [20012,20110]"
    },
    {
      "src": "expression_statement [19388,19449]",
      "dest": "expression_statement [37674,37743]"
    },
    {
      "src": "{: { [19934,19935]",
      "dest": "{: { [30248,30249]"
    },
    {
      "src": "comment: // totalBalance - lockedBalance [37850,37881]",
      "dest": "comment: // totalBalance - lockedBalance [44502,44533]"
    },
    {
      "src": "): ) [11798,11799]",
      "dest": "): ) [13662,13663]"
    },
    {
      "src": "uint256: uint256 [6553,6560]",
      "dest": "uint256: uint256 [8463,8470]"
    },
    {
      "src": "uint256: uint256 [1036,1043]",
      "dest": "uint256: uint256 [3007,3014]"
    },
    {
      "src": "parameter [18241,18270]",
      "dest": "parameter [26986,27012]"
    },
    {
      "src": "identifier: encodePacked [10439,10451]",
      "dest": "identifier: encodePacked [12303,12315]"
    },
    {
      "src": "type_name [42085,42092]",
      "dest": "type_name [48625,48632]"
    },
    {
      "src": ">=: >= [36229,36231]",
      "dest": ">=: >= [43100,43102]"
    },
    {
      "src": "address: address [15103,15110]",
      "dest": "address: address [16967,16974]"
    },
    {
      "src": "type_name [15832,15859]",
      "dest": "type_name [17643,17670]"
    },
    {
      "src": "tuple_expression [13078,13134]",
      "dest": "tuple_expression [14942,14998]"
    },
    {
      "src": "identifier: sub [1507,1510]",
      "dest": "identifier: sub [3478,3481]"
    },
    {
      "src": "(: ( [39732,39733]",
      "dest": "(: ( [46502,46503]"
    },
    {
      "src": "(: ( [3316,3317]",
      "dest": "(: ( [5287,5288]"
    },
    {
      "src": "type_name [3922,3928]",
      "dest": "type_name [5893,5899]"
    },
    {
      "src": "uint256: uint256 [4032,4039]",
      "dest": "uint256: uint256 [6003,6010]"
    },
    {
      "src": "identifier: _attribute [11788,11798]",
      "dest": "identifier: _attribute [13652,13662]"
    },
    {
      "src": "identifier: _attribute [11575,11585]",
      "dest": "identifier: _attribute [13439,13449]"
    },
    {
      "src": "identifier: _from [35109,35114]",
      "dest": "identifier: _from [42685,42690]"
    },
    {
      "src": "identifier: to [30225,30227]",
      "dest": "identifier: returndata [27545,27555]"
    },
    {
      "src": "primitive_type [31433,31440]",
      "dest": "primitive_type [20079,20086]"
    },
    {
      "src": "(: ( [28389,28390]",
      "dest": "(: ( [37760,37761]"
    },
    {
      "src": "view: view [31044,31048]",
      "dest": "view: view [19690,19694]"
    },
    {
      "src": "expression_statement [2698,2755]",
      "dest": "expression_statement [4669,4726]"
    },
    {
      "src": "user_defined_type [10944,10957]",
      "dest": "user_defined_type [12808,12821]"
    },
    {
      "src": "identifier: pendingOwner_ [15986,15999]",
      "dest": "identifier: pendingOwner_ [17797,17810]"
    },
    {
      "src": "pragma: pragma [27510,27516]",
      "dest": "pragma: pragma [10129,10135]"
    },
    {
      "src": "event_paramater [20105,20126]",
      "dest": "event_paramater [30743,30764]"
    },
    {
      "src": "call_expression [40334,40360]",
      "dest": "call_expression [47104,47130]"
    },
    {
      "src": "return: return [2037,2043]",
      "dest": "return: return [4008,4014]"
    },
    {
      "src": "function: function [28953,28961]",
      "dest": "function: function [48839,48847]"
    },
    {
      "src": "{: { [8469,8470]",
      "dest": "{: { [10333,10334]"
    },
    {
      "src": "public: public [21792,21798]",
      "dest": "public: public [33784,33790]"
    },
    {
      "src": "visibility [18278,18286]",
      "dest": "visibility [26504,26512]"
    },
    {
      "src": "primitive_type [971,978]",
      "dest": "primitive_type [2942,2949]"
    },
    {
      "src": "): ) [39545,39546]",
      "dest": "): ) [46315,46316]"
    },
    {
      "src": "type_name [11780,11787]",
      "dest": "type_name [13644,13651]"
    },
    {
      "src": "(: ( [36922,36923]",
      "dest": "(: ( [43782,43783]"
    },
    {
      "src": "bool: bool [21808,21812]",
      "dest": "bool: bool [33808,33812]"
    },
    {
      "src": "call_argument [10912,10918]",
      "dest": "call_argument [12776,12782]"
    },
    {
      "src": ",: , [33319,33320]",
      "dest": ",: , [39465,39466]"
    },
    {
      "src": "if: if [39530,39532]",
      "dest": "if: if [46300,46302]"
    },
    {
      "src": "uint256: uint256 [41419,41426]",
      "dest": "uint256: uint256 [48134,48141]"
    },
    {
      "src": ",: , [1078,1079]",
      "dest": ",: , [3049,3050]"
    },
    {
      "src": "abstract: abstract [33266,33274]",
      "dest": "abstract: abstract [39423,39431]"
    },
    {
      "src": "type_name [23692,23699]",
      "dest": "type_name [33747,33754]"
    },
    {
      "src": "member_expression [31808,31818]",
      "dest": "member_expression [20454,20464]"
    },
    {
      "src": "expression_statement [36840,36905]",
      "dest": "expression_statement [43608,43673]"
    },
    {
      "src": "call_argument [30160,30163]",
      "dest": "call_argument [36368,36375]"
    },
    {
      "src": "primitive_type [42502,42508]",
      "dest": "primitive_type [31104,31110]"
    },
    {
      "src": "public: public [8668,8674]",
      "dest": "public: public [10532,10538]"
    },
    {
      "src": "array_access [11088,11102]",
      "dest": "array_access [12952,12966]"
    },
    {
      "src": "type_name [14003,14010]",
      "dest": "type_name [15867,15874]"
    },
    {
      "src": ".: . [38389,38390]",
      "dest": ".: . [45041,45042]"
    },
    {
      "src": "{: { [39547,39548]",
      "dest": "{: { [46317,46318]"
    },
    {
      "src": "): ) [28826,28827]",
      "dest": "): ) [32415,32416]"
    },
    {
      "src": "internal: internal [28599,28607]",
      "dest": "internal: internal [21809,21817]"
    },
    {
      "src": "identifier: _attribute [10990,11000]",
      "dest": "identifier: _attribute [12854,12864]"
    },
    {
      "src": "identifier: getAttributeTimestamp [13485,13506]",
      "dest": "identifier: getAttributeTimestamp [15349,15370]"
    },
    {
      "src": "{: { [42617,42618]",
      "dest": "{: { [49166,49167]"
    },
    {
      "src": "identifier: _value [36340,36346]",
      "dest": "identifier: _value [43177,43183]"
    },
    {
      "src": "comment: // File: contracts/trusttokens/ERC20.sol [18696,18736]",
      "dest": "comment: // &&&&&&&&&&&&&&%,    *%&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&%,  (&&&&&&&&&&&&& [450,523]"
    },
    {
      "src": "identifier: add [39583,39586]",
      "dest": "identifier: add [46353,46356]"
    },
    {
      "src": "): ) [36978,36979]",
      "dest": "): ) [43789,43790]"
    },
    {
      "src": "identifier: require [28382,28389]",
      "dest": "identifier: require [37753,37760]"
    },
    {
      "src": "view: view [10346,10350]",
      "dest": "view: view [12210,12214]"
    },
    {
      "src": "type_cast_expression [29812,29822]",
      "dest": "type_cast_expression [37113,37123]"
    },
    {
      "src": "=: = [41486,41487]",
      "dest": "=: = [48178,48179]"
    },
    {
      "src": "identifier: _value [12441,12447]",
      "dest": "identifier: _value [14305,14311]"
    },
    {
      "src": "primitive_type [6189,6193]",
      "dest": "primitive_type [8099,8103]"
    },
    {
      "src": "}: } [28944,28945]",
      "dest": "}: } [32526,32527]"
    },
    {
      "src": "for: for [19959,19962]",
      "dest": "for: for [30270,30273]"
    },
    {
      "src": "): ) [15910,15911]",
      "dest": "): ) [17721,17722]"
    },
    {
      "src": "parameter [34851,34865]",
      "dest": "parameter [42228,42242]"
    },
    {
      "src": "public: public [12005,12011]",
      "dest": "public: public [13869,13875]"
    },
    {
      "src": "identifier: attribute [9724,9733]",
      "dest": "identifier: attribute [11588,11597]"
    },
    {
      "src": "identifier: onlyOwner [32067,32076]",
      "dest": "identifier: onlyOwner [20713,20722]"
    },
    {
      "src": "uint256: uint256 [33659,33666]",
      "dest": "uint256: uint256 [39805,39812]"
    },
    {
      "src": "binary_expression [34378,34417]",
      "dest": "binary_expression [40608,40647]"
    },
    {
      "src": "uint8: uint8 [42423,42428]",
      "dest": "uint8: uint8 [49063,49068]"
    },
    {
      "src": "boolean_literal [29094,29098]",
      "dest": "boolean_literal [32208,32212]"
    },
    {
      "src": "string: string [3922,3928]",
      "dest": "string: string [5893,5899]"
    },
    {
      "src": "identifier: c [1044,1045]",
      "dest": "identifier: c [3015,3016]"
    },
    {
      "src": "member_expression [12656,12690]",
      "dest": "member_expression [14520,14554]"
    },
    {
      "src": "return_statement [39708,39749]",
      "dest": "return_statement [46478,46519]"
    },
    {
      "src": "function: function [958,966]",
      "dest": "function: function [2929,2937]"
    },
    {
      "src": "type_name [1885,1892]",
      "dest": "type_name [3856,3863]"
    },
    {
      "src": "expression_statement [14302,14338]",
      "dest": "expression_statement [16166,16202]"
    },
    {
      "src": "parameter [13232,13239]",
      "dest": "parameter [15096,15103]"
    },
    {
      "src": "primitive_type [6136,6143]",
      "dest": "primitive_type [8046,8053]"
    },
    {
      "src": "call_argument [10892,10902]",
      "dest": "call_argument [12756,12766]"
    },
    {
      "src": "array_access [11848,11871]",
      "dest": "array_access [13712,13735]"
    },
    {
      "src": "pragma: pragma [30626,30632]",
      "dest": "pragma: pragma [17330,17336]"
    },
    {
      "src": "call_expression [2698,2754]",
      "dest": "call_expression [4669,4725]"
    },
    {
      "src": "{: { [11449,11450]",
      "dest": "{: { [13313,13314]"
    },
    {
      "src": "{: { [2379,2380]",
      "dest": "{: { [4350,4351]"
    },
    {
      "src": "parameter [7714,7718]",
      "dest": "parameter [9624,9628]"
    },
    {
      "src": ",: , [10819,10820]",
      "dest": ",: , [12683,12684]"
    },
    {
      "src": "primitive_type [9815,9822]",
      "dest": "primitive_type [11679,11686]"
    },
    {
      "src": "return_statement [1500,1551]",
      "dest": "return_statement [3471,3522]"
    },
    {
      "src": "identifier: AttributeData [12110,12123]",
      "dest": "identifier: AttributeData [13974,13987]"
    },
    {
      "src": "solidity: solidity [41016,41024]",
      "dest": "solidity: solidity [28992,29000]"
    },
    {
      "src": "(: ( [33986,33987]",
      "dest": "(: ( [40216,40217]"
    },
    {
      "src": "identifier: _who [10603,10607]",
      "dest": "identifier: _who [12467,12471]"
    },
    {
      "src": "address: address [34232,34239]",
      "dest": "address: address [40462,40469]"
    },
    {
      "src": "): ) [37500,37501]",
      "dest": "): ) [45738,45739]"
    },
    {
      "src": "primitive_type [28355,28362]",
      "dest": "primitive_type [37772,37779]"
    },
    {
      "src": "event_definition [9586,9670]",
      "dest": "event_definition [11450,11534]"
    },
    {
      "src": "function_body [11449,11747]",
      "dest": "function_body [13313,13611]"
    },
    {
      "src": "!=: != [28352,28354]",
      "dest": "!=: != [37769,37771]"
    },
    {
      "src": "address: address [34805,34812]",
      "dest": "address: address [42213,42220]"
    },
    {
      "src": "[: [ [12095,12096]",
      "dest": "[: [ [13959,13960]"
    },
    {
      "src": "[: [ [14168,14169]",
      "dest": "[: [ [16032,16033]"
    },
    {
      "src": "call_argument [10452,10481]",
      "dest": "call_argument [12316,12345]"
    },
    {
      "src": "uint256: uint256 [13232,13239]",
      "dest": "uint256: uint256 [15096,15103]"
    },
    {
      "src": "parameter [14389,14400]",
      "dest": "parameter [16253,16264]"
    },
    {
      "src": "member_expression [31445,31455]",
      "dest": "member_expression [20091,20101]"
    },
    {
      "src": "type_name [12245,12258]",
      "dest": "type_name [14109,14122]"
    },
    {
      "src": "primitive_type [1435,1442]",
      "dest": "primitive_type [3406,3413]"
    },
    {
      "src": "expression_statement [3993,4022]",
      "dest": "expression_statement [5964,5993]"
    },
    {
      "src": "=: = [41800,41801]",
      "dest": "=: = [48443,48444]"
    },
    {
      "src": "string_literal [41729,41749]",
      "dest": "string_literal [48403,48424]"
    },
    {
      "src": "override_specifier [34882,34890]",
      "dest": "override_specifier [49237,49245]"
    },
    {
      "src": "visibility [5308,5316]",
      "dest": "visibility [7279,7287]"
    },
    {
      "src": "identifier: sub [37482,37485]",
      "dest": "identifier: sub [45720,45723]"
    },
    {
      "src": "\": \" [19446,19447]",
      "dest": "\": \" [37740,37741]"
    },
    {
      "src": "returns: returns [5871,5878]",
      "dest": "returns: returns [7781,7788]"
    },
    {
      "src": "comment: // return INT_MAX [39376,39393]",
      "dest": "comment: // return INT_MAX [46146,46163]"
    },
    {
      "src": "uint256: uint256 [8584,8591]",
      "dest": "uint256: uint256 [10448,10455]"
    },
    {
      "src": "return_type_definition [42331,42346]",
      "dest": "return_type_definition [48971,48986]"
    },
    {
      "src": "call_argument [15371,15383]",
      "dest": "call_argument [17235,17247]"
    },
    {
      "src": "(: ( [41715,41716]",
      "dest": "(: ( [48389,48390]"
    },
    {
      "src": "identifier: latestEpoch [39569,39580]",
      "dest": "identifier: latestEpoch [46339,46350]"
    },
    {
      "src": "call_expression [39569,39582]",
      "dest": "call_expression [46339,46352]"
    },
    {
      "src": "(: ( [4718,4719]",
      "dest": "(: ( [6689,6690]"
    },
    {
      "src": "(: ( [30147,30148]",
      "dest": "(: ( [36355,36356]"
    },
    {
      "src": "primitive_type [12632,12636]",
      "dest": "primitive_type [14496,14500]"
    },
    {
      "src": "call_expression [14491,14519]",
      "dest": "call_expression [16355,16383]"
    },
    {
      "src": "uint256: uint256 [5724,5731]",
      "dest": "uint256: uint256 [7634,7641]"
    },
    {
      "src": "address: address [10595,10602]",
      "dest": "address: address [12459,12466]"
    },
    {
      "src": "parameter [35553,35567]",
      "dest": "parameter [41468,41482]"
    },
    {
      "src": "uint256: uint256 [6155,6162]",
      "dest": "uint256: uint256 [8065,8072]"
    },
    {
      "src": "identifier: a [1511,1512]",
      "dest": "identifier: a [3482,3483]"
    },
    {
      "src": "type_name [33819,33826]",
      "dest": "type_name [39965,39972]"
    },
    {
      "src": "}: } [8608,8609]",
      "dest": "}: } [10472,10473]"
    },
    {
      "src": "{: { [42228,42229]",
      "dest": "{: { [48768,48769]"
    },
    {
      "src": "identifier: _who [12090,12094]",
      "dest": "identifier: _who [13954,13958]"
    },
    {
      "src": "returns: returns [1007,1014]",
      "dest": "returns: returns [2978,2985]"
    },
    {
      "src": "number_literal [33780,33787]",
      "dest": "number_literal [39926,39933]"
    },
    {
      "src": "returns: returns [39179,39186]",
      "dest": "returns: returns [45949,45956]"
    },
    {
      "src": "address: address [37336,37343]",
      "dest": "address: address [44050,44057]"
    },
    {
      "src": "identifier: add [39729,39732]",
      "dest": "identifier: add [46499,46502]"
    },
    {
      "src": "call_argument [30156,30157]",
      "dest": "call_argument [36364,36365]"
    },
    {
      "src": "comment: /**  * @title Standard ERC20 token  *  * @dev Implementation of the basic standard token.  * @dev https://github.com/ethereum/EIPs/issues/20  * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol  */ [19609,19881]",
      "dest": "comment: // &&&&&&&&&&(    %&&&&&#    /&&&&&&&&&&&&&&&&&&%#,     .%&&&&&(%&&&&&&&& [675,748]"
    },
    {
      "src": "identifier: subscribers [10978,10989]",
      "dest": "identifier: subscribers [12842,12853]"
    },
    {
      "src": ",: , [19423,19424]",
      "dest": ",: , [37701,37702]"
    },
    {
      "src": "variable_declaration [32278,32299]",
      "dest": "variable_declaration [20924,20945]"
    },
    {
      "src": "primitive_type [26114,26121]",
      "dest": "primitive_type [33023,33030]"
    },
    {
      "src": "address: address [30148,30155]",
      "dest": "address: address [36356,36363]"
    },
    {
      "src": "parameter [13191,13209]",
      "dest": "parameter [15055,15073]"
    },
    {
      "src": "string: string [18241,18247]",
      "dest": "string: string [26986,26992]"
    },
    {
      "src": "{: { [13571,13572]",
      "dest": "{: { [15435,15436]"
    },
    {
      "src": "identifier: newOwner [32050,32058]",
      "dest": "identifier: newOwner [20696,20704]"
    },
    {
      "src": "function: function [11373,11381]",
      "dest": "function: function [13237,13245]"
    },
    {
      "src": "): ) [14518,14519]",
      "dest": "): ) [16382,16383]"
    },
    {
      "src": "visibility [993,1001]",
      "dest": "visibility [2964,2972]"
    },
    {
      "src": "identifier: add [40694,40697]",
      "dest": "identifier: add [47464,47467]"
    },
    {
      "src": ",: , [3349,3350]",
      "dest": ",: , [5320,5321]"
    },
    {
      "src": "true: true [41836,41840]",
      "dest": "true: true [48479,48483]"
    },
    {
      "src": "emit_statement [31407,31457]",
      "dest": "emit_statement [20053,20103]"
    },
    {
      "src": "]: ] [37915,37916]",
      "dest": "]: ] [44567,44568]"
    },
    {
      "src": ",: , [9714,9715]",
      "dest": ",: , [11578,11579]"
    },
    {
      "src": "member_expression [37898,37920]",
      "dest": "member_expression [44550,44572]"
    },
    {
      "src": "variable_declaration [30229,30238]",
      "dest": "variable_declaration [27518,27530]"
    },
    {
      "src": "): ) [28424,28425]",
      "dest": "): ) [37820,37821]"
    },
    {
      "src": "state_mutability [12618,12622]",
      "dest": "state_mutability [14482,14486]"
    },
    {
      "src": "expression_statement [34291,34360]",
      "dest": "expression_statement [40521,40590]"
    },
    {
      "src": "call_expression [10425,10483]",
      "dest": "call_expression [12289,12347]"
    },
    {
      "src": "call_argument [10720,10756]",
      "dest": "call_argument [12584,12620]"
    },
    {
      "src": "expression_statement [11630,11700]",
      "dest": "expression_statement [13494,13564]"
    },
    {
      "src": "address: address [32278,32285]",
      "dest": "address: address [20924,20931]"
    },
    {
      "src": "member_expression [40296,40310]",
      "dest": "member_expression [47066,47080]"
    },
    {
      "src": "parameter [6136,6153]",
      "dest": "parameter [8046,8063]"
    },
    {
      "src": "internal: internal [35602,35610]",
      "dest": "internal: internal [41490,41498]"
    },
    {
      "src": "]: ] [11870,11871]",
      "dest": "]: ] [13734,13735]"
    },
    {
      "src": "type_name [11931,11938]",
      "dest": "type_name [13795,13802]"
    },
    {
      "src": "call_expression [14302,14337]",
      "dest": "call_expression [16166,16201]"
    },
    {
      "src": "returns: returns [7705,7712]",
      "dest": "returns: returns [9615,9622]"
    },
    {
      "src": "\": \" [12133,12134]",
      "dest": "\": \" [13997,13998]"
    },
    {
      "src": "parameter [12591,12609]",
      "dest": "parameter [14455,14473]"
    },
    {
      "src": "identifier: transferFrom [28737,28749]",
      "dest": "identifier: approve [32376,32383]"
    },
    {
      "src": "bytes32: bytes32 [9750,9757]",
      "dest": "bytes32: bytes32 [11614,11621]"
    },
    {
      "src": "comment: // length of time to delay first epoch [33615,33653]",
      "dest": "comment: // length of time to delay first epoch [39761,39799]"
    },
    {
      "src": "identifier: index [11096,11101]",
      "dest": "identifier: index [12960,12965]"
    },
    {
      "src": "public: public [12850,12856]",
      "dest": "public: public [14714,14720]"
    },
    {
      "src": "=: = [15401,15402]",
      "dest": "=: = [17265,17266]"
    },
    {
      "src": "(: ( [15448,15449]",
      "dest": "(: ( [17312,17313]"
    },
    {
      "src": "identifier: _who [13185,13189]",
      "dest": "identifier: _who [15049,15053]"
    },
    {
      "src": ",: , [1883,1884]",
      "dest": ",: , [3854,3855]"
    },
    {
      "src": "function: function [32217,32225]",
      "dest": "function: function [20863,20871]"
    },
    {
      "src": "type_name [7934,7941]",
      "dest": "type_name [9844,9851]"
    },
    {
      "src": "): ) [37573,37574]",
      "dest": "): ) [44225,44226]"
    },
    {
      "src": "comment: // assert(a == b * c + a % b); // There is no case in which this doesn't hold [4060,4137]",
      "dest": "comment: // assert(a == b * c + a % b); // There is no case in which this doesn't hold [6031,6108]"
    },
    {
      "src": "identifier: _attribute [11860,11870]",
      "dest": "identifier: _attribute [13724,13734]"
    },
    {
      "src": "solidity: solidity [30633,30641]",
      "dest": "solidity: solidity [17337,17345]"
    },
    {
      "src": "call_argument [35121,35127]",
      "dest": "call_argument [42700,42706]"
    },
    {
      "src": ",: , [13724,13725]",
      "dest": ",: , [15588,15589]"
    },
    {
      "src": "view: view [39919,39923]",
      "dest": "view: view [46689,46693]"
    },
    {
      "src": "identifier: _value [30421,30427]",
      "dest": "identifier: amount [36262,36268]"
    },
    {
      "src": "): ) [39581,39582]",
      "dest": "): ) [46351,46352]"
    },
    {
      "src": "identifier: subscribers [11477,11488]",
      "dest": "identifier: subscribers [13341,13352]"
    },
    {
      "src": "return: return [13415,13421]",
      "dest": "return: return [15279,15285]"
    },
    {
      "src": "): ) [3382,3383]",
      "dest": "): ) [5353,5354]"
    },
    {
      "src": "identifier: _amount [42093,42100]",
      "dest": "identifier: _amount [48633,48640]"
    },
    {
      "src": "primitive_type [15441,15448]",
      "dest": "primitive_type [17305,17312]"
    },
    {
      "src": "type_name [1947,1954]",
      "dest": "type_name [3918,3925]"
    },
    {
      "src": "identifier: newOwner [32104,32112]",
      "dest": "identifier: newOwner [20750,20758]"
    },
    {
      "src": "function_body [31789,31856]",
      "dest": "function_body [20435,20502]"
    },
    {
      "src": "identifier: _value [35659,35665]",
      "dest": "identifier: _value [41547,41553]"
    },
    {
      "src": "primitive_type [35553,35560]",
      "dest": "primitive_type [41468,41475]"
    },
    {
      "src": "call_argument [5359,5365]",
      "dest": "call_argument [7330,7336]"
    },
    {
      "src": "address: address [14251,14258]",
      "dest": "address: address [16115,16122]"
    },
    {
      "src": "expression_statement [23815,23894]",
      "dest": "expression_statement [35294,35365]"
    },
    {
      "src": "): ) [34449,34450]",
      "dest": "): ) [40679,40680]"
    },
    {
      "src": "[: [ [37531,37532]",
      "dest": "[: [ [44181,44182]"
    },
    {
      "src": "identifier: b [5277,5278]",
      "dest": "identifier: b [7248,7249]"
    },
    {
      "src": "return_type_definition [12880,12987]",
      "dest": "return_type_definition [14744,14851]"
    },
    {
      "src": "string_literal [19425,19447]",
      "dest": "string_literal [37703,37741]"
    },
    {
      "src": "identifier: Transfer [30139,30147]",
      "dest": "identifier: Transfer [36347,36355]"
    },
    {
      "src": "comment: // SPDX-License-Identifier: MIT [0,31]",
      "dest": "comment: // SPDX-License-Identifier: MIT [2027,2058]"
    },
    {
      "src": ",: , [1981,1982]",
      "dest": ",: , [3952,3953]"
    },
    {
      "src": "member_expression [12056,12066]",
      "dest": "member_expression [13920,13930]"
    },
    {
      "src": ",: , [12221,12222]",
      "dest": ",: , [14085,14086]"
    },
    {
      "src": "public: public [33904,33910]",
      "dest": "public: public [40050,40056]"
    },
    {
      "src": "identifier: _burn [29670,29675]",
      "dest": "identifier: _burn [36733,36738]"
    },
    {
      "src": "call_argument [34931,34957]",
      "dest": "call_argument [43007,43033]"
    },
    {
      "src": "member_expression [29947,29962]",
      "dest": "member_expression [37056,37071]"
    },
    {
      "src": "return_statement [38261,38270]",
      "dest": "return_statement [44913,44922]"
    },
    {
      "src": "type_name [9815,9822]",
      "dest": "type_name [11679,11686]"
    },
    {
      "src": "variable_declaration_statement [38363,38416]",
      "dest": "variable_declaration_statement [45015,45068]"
    },
    {
      "src": "identifier: sender [10833,10839]",
      "dest": "identifier: sender [12697,12703]"
    },
    {
      "src": "function_body [1025,1139]",
      "dest": "function_body [2996,3110]"
    },
    {
      "src": "(: ( [12360,12361]",
      "dest": "(: ( [14224,14225]"
    },
    {
      "src": "uint256: uint256 [7265,7272]",
      "dest": "uint256: uint256 [9175,9182]"
    },
    {
      "src": "external: external [14402,14410]",
      "dest": "external: external [16266,16274]"
    },
    {
      "src": "identifier: timestamp [13618,13627]",
      "dest": "identifier: timestamp [15482,15491]"
    },
    {
      "src": "): ) [5731,5732]",
      "dest": "): ) [7641,7642]"
    },
    {
      "src": "public: public [26188,26194]",
      "dest": "public: public [32417,32423]"
    },
    {
      "src": "library: library [17698,17705]",
      "dest": "library: library [22127,22134]"
    },
    {
      "src": "emit_statement [15338,15385]",
      "dest": "emit_statement [17202,17249]"
    },
    {
      "src": "{: { [42176,42177]",
      "dest": "{: { [48716,48717]"
    },
    {
      "src": "visibility [37353,37359]",
      "dest": "visibility [45659,45665]"
    },
    {
      "src": "type_name [7680,7687]",
      "dest": "type_name [9590,9597]"
    },
    {
      "src": "=: = [37061,37062]",
      "dest": "=: = [43754,43755]"
    },
    {
      "src": "[: [ [12666,12667]",
      "dest": "[: [ [14530,14531]"
    },
    {
      "src": "): ) [3980,3981]",
      "dest": "): ) [5951,5952]"
    },
    {
      "src": "[: [ [10989,10990]",
      "dest": "[: [ [12853,12854]"
    },
    {
      "src": "internal: internal [2347,2355]",
      "dest": "internal: internal [4318,4326]"
    },
    {
      "src": "state_variable_declaration [15762,15807]",
      "dest": "state_variable_declaration [17573,17618]"
    },
    {
      "src": "user_defined_type [13946,13959]",
      "dest": "user_defined_type [15810,15823]"
    },
    {
      "src": "function_definition [32217,32452]",
      "dest": "function_definition [20863,21098]"
    },
    {
      "src": "\": \" [41748,41749]",
      "dest": "\": \" [48423,48424]"
    },
    {
      "src": "address: address [23487,23494]",
      "dest": "address: address [37613,37620]"
    },
    {
      "src": "primitive_type [13705,13712]",
      "dest": "primitive_type [15569,15576]"
    },
    {
      "src": "identifier: b [1052,1053]",
      "dest": "identifier: b [3023,3024]"
    },
    {
      "src": "member_expression [40334,40344]",
      "dest": "member_expression [47104,47114]"
    },
    {
      "src": ">=: >= [34948,34950]",
      "dest": ">=: >= [43024,43026]"
    },
    {
      "src": "primitive_type [12969,12976]",
      "dest": "primitive_type [14833,14840]"
    },
    {
      "src": "identifier: _value [36232,36238]",
      "dest": "identifier: _value [43103,43109]"
    },
    {
      "src": "identifier: balanceOf [14456,14465]",
      "dest": "identifier: balanceOf [16320,16329]"
    },
    {
      "src": "function_body [28222,28456]",
      "dest": "function_body [37663,37924]"
    },
    {
      "src": "binary_expression [14870,14896]",
      "dest": "binary_expression [16734,16760]"
    },
    {
      "src": "(: ( [42249,42250]",
      "dest": "(: ( [48789,48790]"
    },
    {
      "src": "identifier: sub [29959,29962]",
      "dest": "identifier: sub [37068,37071]"
    },
    {
      "src": "(: ( [13339,13340]",
      "dest": "(: ( [15203,15204]"
    },
    {
      "src": "pure: pure [3959,3963]",
      "dest": "pure: pure [5930,5934]"
    },
    {
      "src": "function: function [42299,42307]",
      "dest": "function: function [48930,48938]"
    },
    {
      "src": "identifier: unlockedBalance [36206,36221]",
      "dest": "identifier: unlockedBalance [43077,43092]"
    },
    {
      "src": "identifier: a [1048,1049]",
      "dest": "identifier: a [3019,3020]"
    },
    {
      "src": ".: . [31600,31601]",
      "dest": ".: . [20246,20247]"
    },
    {
      "src": "bool: bool [29348,29352]",
      "dest": "bool: bool [24538,24542]"
    },
    {
      "src": "address: address [9815,9822]",
      "dest": "address: address [11679,11686]"
    },
    {
      "src": "visibility [12850,12856]",
      "dest": "visibility [14714,14720]"
    },
    {
      "src": "(: ( [35820,35821]",
      "dest": "(: ( [41949,41950]"
    },
    {
      "src": "modifier_invocation [15128,15137]",
      "dest": "modifier_invocation [16992,17001]"
    },
    {
      "src": "identifier: length [12337,12343]",
      "dest": "identifier: length [14201,14207]"
    },
    {
      "src": "public: public [15121,15127]",
      "dest": "public: public [16985,16991]"
    },
    {
      "src": "return: return [42441,42447]",
      "dest": "return: return [49081,49087]"
    },
    {
      "src": "state_mutability [42326,42330]",
      "dest": "state_mutability [48966,48970]"
    },
    {
      "src": "<=: <= [42161,42163]",
      "dest": "<=: <= [48701,48703]"
    },
    {
      "src": "parameter [30077,30088]",
      "dest": "parameter [36031,36046]"
    },
    {
      "src": "call_argument [4719,4720]",
      "dest": "call_argument [6690,6691]"
    },
    {
      "src": "): ) [20166,20167]",
      "dest": "): ) [30804,30805]"
    },
    {
      "src": "number_unit [33783,33787]",
      "dest": "number_unit [39929,39933]"
    },
    {
      "src": ",: , [20941,20942]",
      "dest": ",: , [34579,34580]"
    },
    {
      "src": "bool: bool [6189,6193]",
      "dest": "bool: bool [8099,8103]"
    },
    {
      "src": "(: ( [42316,42317]",
      "dest": "(: ( [48947,48948]"
    },
    {
      "src": "identifier: AttributeData [13004,13017]",
      "dest": "identifier: AttributeData [14868,14881]"
    },
    {
      "src": "call_argument [29627,29633]",
      "dest": "call_argument [42604,42610]"
    },
    {
      "src": "return: return [29087,29093]",
      "dest": "return: return [32201,32207]"
    },
    {
      "src": "if_statement [40093,40154]",
      "dest": "if_statement [46863,46924]"
    },
    {
      "src": "(: ( [2705,2706]",
      "dest": "(: ( [4676,4677]"
    },
    {
      "src": "variable_declaration [39993,40007]",
      "dest": "variable_declaration [46763,46777]"
    },
    {
      "src": ",: , [11972,11973]",
      "dest": ",: , [13836,13837]"
    },
    {
      "src": ",: , [11412,11413]",
      "dest": ",: , [13276,13277]"
    },
    {
      "src": "identifier: SafeMath [33352,33360]",
      "dest": "identifier: SafeMath [39498,39506]"
    },
    {
      "src": "identifier: index [13868,13873]",
      "dest": "identifier: index [15732,15737]"
    },
    {
      "src": "[: [ [12396,12397]",
      "dest": "[: [ [14260,14261]"
    },
    {
      "src": "call_argument [11337,11347]",
      "dest": "call_argument [13201,13211]"
    },
    {
      "src": "identifier: confirmWrite [12031,12043]",
      "dest": "identifier: confirmWrite [13895,13907]"
    },
    {
      "src": "state_variable_declaration [33439,33480]",
      "dest": "state_variable_declaration [39585,39626]"
    },
    {
      "src": "function: function [11174,11182]",
      "dest": "function: function [13038,13046]"
    },
    {
      "src": "type_name [11394,11401]",
      "dest": "type_name [13258,13265]"
    },
    {
      "src": "indexed: indexed [7920,7927]",
      "dest": "indexed: indexed [9830,9837]"
    },
    {
      "src": "call_argument [29805,29810]",
      "dest": "call_argument [37104,37111]"
    },
    {
      "src": "identifier: b [3351,3352]",
      "dest": "identifier: b [5322,5323]"
    },
    {
      "src": "\": \" [23868,23869]",
      "dest": "\": \" [35324,35325]"
    },
    {
      "src": "identifier: from [27418,27422]",
      "dest": "identifier: from [38615,38619]"
    },
    {
      "src": "primitive_type [8687,8694]",
      "dest": "primitive_type [10551,10558]"
    },
    {
      "src": "parameter [37830,37837]",
      "dest": "parameter [44482,44489]"
    },
    {
      "src": "expression_statement [36198,36275]",
      "dest": "expression_statement [43069,43146]"
    },
    {
      "src": "identifier: value [12685,12690]",
      "dest": "identifier: value [14549,14554]"
    },
    {
      "src": "identifier: newOwner [31188,31196]",
      "dest": "identifier: newOwner [19834,19842]"
    },
    {
      "src": "address: address [25738,25745]",
      "dest": "address: address [27065,27072]"
    },
    {
      "src": "[: [ [11598,11599]",
      "dest": "[: [ [13462,13463]"
    },
    {
      "src": "visibility [3950,3958]",
      "dest": "visibility [5921,5929]"
    },
    {
      "src": "returns: returns [37365,37372]",
      "dest": "returns: returns [45671,45678]"
    },
    {
      "src": "variable_declaration_statement [13792,13850]",
      "dest": "variable_declaration_statement [15656,15714]"
    },
    {
      "src": "address: address [31058,31065]",
      "dest": "address: address [19704,19711]"
    },
    {
      "src": "(: ( [8148,8149]",
      "dest": "(: ( [10058,10059]"
    },
    {
      "src": "parameter [982,991]",
      "dest": "parameter [2953,2962]"
    },
    {
      "src": "call_argument [37935,37942]",
      "dest": "call_argument [44587,44594]"
    },
    {
      "src": "function_definition [11894,12467]",
      "dest": "function_definition [13758,14331]"
    },
    {
      "src": "): ) [36346,36347]",
      "dest": "): ) [43183,43184]"
    },
    {
      "src": "): ) [28850,28851]",
      "dest": "): ) [32445,32446]"
    },
    {
      "src": "comment: // Writes are allowed only if the accessManager approves [10501,10557]",
      "dest": "comment: // Writes are allowed only if the accessManager approves [12365,12421]"
    },
    {
      "src": "primitive_type [33447,33454]",
      "dest": "primitive_type [39593,39600]"
    },
    {
      "src": "identifier: LOCK_START [33585,33595]",
      "dest": "identifier: LOCK_START [39731,39741]"
    },
    {
      "src": "return_type_definition [21799,21813]",
      "dest": "return_type_definition [33799,33813]"
    },
    {
      "src": ".: . [42147,42148]",
      "dest": ".: . [48687,48688]"
    },
    {
      "src": "(: ( [38403,38404]",
      "dest": "(: ( [45055,45056]"
    },
    {
      "src": "primitive_type [8361,8368]",
      "dest": "primitive_type [10225,10232]"
    },
    {
      "src": "number_literal: 145000000000000000 [41488,41506]",
      "dest": "number_literal: 145000000000000000 [48180,48198]"
    },
    {
      "src": "return: return [12649,12655]",
      "dest": "return: return [14513,14519]"
    },
    {
      "src": "state_variable_declaration [8721,8738]",
      "dest": "state_variable_declaration [10585,10602]"
    },
    {
      "src": "if_statement [38521,38592]",
      "dest": "if_statement [45173,45244]"
    },
    {
      "src": "address: address [30523,30530]",
      "dest": "address: address [24381,24388]"
    },
    {
      "src": "type_name [20892,20896]",
      "dest": "type_name [34532,34536]"
    },
    {
      "src": "member_expression [40698,40716]",
      "dest": "member_expression [47468,47486]"
    },
    {
      "src": "type_name [11821,11828]",
      "dest": "type_name [13685,13692]"
    },
    {
      "src": "address: address [21966,21973]",
      "dest": "address: address [26936,26943]"
    },
    {
      "src": "variable_declaration_statement [30216,30265]",
      "dest": "variable_declaration_statement [27517,27596]"
    },
    {
      "src": "call_expression [31800,31836]",
      "dest": "call_expression [20446,20482]"
    },
    {
      "src": "identifier: _pendingOwner [32286,32299]",
      "dest": "identifier: _pendingOwner [20932,20945]"
    },
    {
      "src": "==: == [14671,14673]",
      "dest": "==: == [16535,16537]"
    },
    {
      "src": "function_body [41697,41848]",
      "dest": "function_body [48371,48491]"
    },
    {
      "src": "<=: <= [1977,1979]",
      "dest": "<=: <= [3948,3950]"
    },
    {
      "src": "uint256: uint256 [30090,30097]",
      "dest": "uint256: uint256 [36048,36055]"
    },
    {
      "src": "identifier: subscribers [11587,11598]",
      "dest": "identifier: subscribers [13451,13462]"
    },
    {
      "src": "): ) [40538,40539]",
      "dest": "): ) [47308,47309]"
    },
    {
      "src": "function_body [33968,34063]",
      "dest": "function_body [40198,40293]"
    },
    {
      "src": "[: [ [37907,37908]",
      "dest": "[: [ [44559,44560]"
    },
    {
      "src": "identifier: initalized [41823,41833]",
      "dest": "identifier: initalized [48466,48476]"
    },
    {
      "src": "call_expression [40698,40730]",
      "dest": "call_expression [47468,47500]"
    },
    {
      "src": "identifier: super [35794,35799]",
      "dest": "identifier: super [41934,41939]"
    },
    {
      "src": "): ) [11828,11829]",
      "dest": "): ) [13692,13693]"
    },
    {
      "src": "bytes32: bytes32 [9901,9908]",
      "dest": "bytes32: bytes32 [11765,11772]"
    },
    {
      "src": "address: address [13177,13184]",
      "dest": "address: address [15041,15048]"
    },
    {
      "src": "function_definition [4630,4760]",
      "dest": "function_definition [6601,6731]"
    },
    {
      "src": "): ) [39278,39279]",
      "dest": "): ) [46048,46049]"
    },
    {
      "src": "call_argument [4001,4006]",
      "dest": "call_argument [5972,5977]"
    },
    {
      "src": "pragma_directive [32513,32536]",
      "dest": "pragma_directive [19274,19297]"
    },
    {
      "src": "uint256: uint256 [2325,2332]",
      "dest": "uint256: uint256 [4296,4303]"
    },
    {
      "src": "): ) [20874,20875]",
      "dest": "): ) [34506,34507]"
    },
    {
      "src": "true: true [29094,29098]",
      "dest": "true: true [32208,32212]"
    },
    {
      "src": "identifier: Registry [8460,8468]",
      "dest": "identifier: Registry [10324,10332]"
    },
    {
      "src": "(: ( [39421,39422]",
      "dest": "(: ( [46191,46192]"
    },
    {
      "src": "identifier: _ [14705,14706]",
      "dest": "identifier: _ [16569,16570]"
    },
    {
      "src": "=>: => [15848,15850]",
      "dest": "=>: => [17659,17661]"
    },
    {
      "src": "(: ( [37335,37336]",
      "dest": "(: ( [44049,44050]"
    },
    {
      "src": "return_statement [13415,13461]",
      "dest": "return_statement [15279,15325]"
    },
    {
      "src": "uint256: uint256 [1480,1487]",
      "dest": "uint256: uint256 [3451,3458]"
    },
    {
      "src": "): ) [14336,14337]",
      "dest": "): ) [16200,16201]"
    },
    {
      "src": "return_statement [42528,42548]",
      "dest": "return_statement [49286,49299]"
    },
    {
      "src": "pragma_directive [27510,27533]",
      "dest": "pragma_directive [10129,10152]"
    },
    {
      "src": "pure: pure [18580,18584]",
      "dest": "pure: pure [31792,31796]"
    },
    {
      "src": ",: , [1512,1513]",
      "dest": ",: , [3483,3484]"
    },
    {
      "src": "[: [ [13599,13600]",
      "dest": "[: [ [15463,15464]"
    },
    {
      "src": "identifier: subscribers [13826,13837]",
      "dest": "identifier: subscribers [15690,15701]"
    },
    {
      "src": ",: , [1444,1445]",
      "dest": ",: , [3415,3416]"
    },
    {
      "src": "identifier: msg [36858,36861]",
      "dest": "identifier: msg [43626,43629]"
    },
    {
      "src": ".: . [31389,31390]",
      "dest": ".: . [20035,20036]"
    },
    {
      "src": "): ) [21812,21813]",
      "dest": "): ) [33812,33813]"
    },
    {
      "src": "member_expression [11477,11507]",
      "dest": "member_expression [13341,13371]"
    },
    {
      "src": "using_directive [41400,41427]",
      "dest": "using_directive [48115,48142]"
    },
    {
      "src": "parameter [22734,22750]",
      "dest": "parameter [26454,26468]"
    },
    {
      "src": "visibility [38112,38118]",
      "dest": "visibility [44764,44770]"
    },
    {
      "src": "parameter [13395,13402]",
      "dest": "parameter [15259,15266]"
    },
    {
      "src": "function_definition [11174,11365]",
      "dest": "function_definition [13038,13229]"
    },
    {
      "src": "call_argument [14153,14186]",
      "dest": "call_argument [16017,16050]"
    },
    {
      "src": "variable_declaration_statement [1036,1054]",
      "dest": "variable_declaration_statement [3007,3025]"
    },
    {
      "src": "primitive_type [20105,20112]",
      "dest": "primitive_type [30743,30750]"
    },
    {
      "src": "comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts with custom message when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [4768,5239]",
      "dest": "comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts with custom message when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [6739,7210]"
    },
    {
      "src": "type_name [39993,40000]",
      "dest": "type_name [46763,46770]"
    },
    {
      "src": "while_statement [11053,11159]",
      "dest": "while_statement [12917,13023]"
    },
    {
      "src": "primitive_type [11954,11961]",
      "dest": "primitive_type [13818,13825]"
    },
    {
      "src": "identifier: sender [10749,10755]",
      "dest": "identifier: sender [12613,12619]"
    },
    {
      "src": "array_access [11630,11653]",
      "dest": "array_access [13494,13517]"
    },
    {
      "src": "function_body [13571,13635]",
      "dest": "function_body [15435,15499]"
    },
    {
      "src": ",: , [12197,12198]",
      "dest": ",: , [14061,14062]"
    },
    {
      "src": "identifier: _spender [20925,20933]",
      "dest": "identifier: spender [34572,34579]"
    },
    {
      "src": "string [23868,23892]",
      "dest": "string [35324,35363]"
    },
    {
      "src": "call_argument [32442,32443]",
      "dest": "call_argument [21088,21089]"
    },
    {
      "src": "number_literal [33696,33703]",
      "dest": "number_literal [39842,39849]"
    },
    {
      "src": "identifier: a [1077,1078]",
      "dest": "identifier: a [3048,3049]"
    },
    {
      "src": "identifier: StopSubscription [9974,9990]",
      "dest": "identifier: StopSubscription [11838,11854]"
    },
    {
      "src": "primitive_type [32278,32285]",
      "dest": "primitive_type [20924,20931]"
    },
    {
      "src": "uint256: uint256 [41458,41465]",
      "dest": "uint256: uint256 [48150,48157]"
    },
    {
      "src": "[: [ [11653,11654]",
      "dest": "[: [ [13517,13518]"
    },
    {
      "src": "primitive_type [9716,9723]",
      "dest": "primitive_type [11580,11587]"
    },
    {
      "src": "primitive_type [15103,15110]",
      "dest": "primitive_type [16967,16974]"
    },
    {
      "src": "state_variable_declaration [41458,41507]",
      "dest": "state_variable_declaration [48150,48199]"
    },
    {
      "src": "type_name [6136,6143]",
      "dest": "type_name [8046,8053]"
    },
    {
      "src": "(: ( [10359,10360]",
      "dest": "(: ( [12223,12224]"
    },
    {
      "src": "primitive_type [14003,14010]",
      "dest": "primitive_type [15867,15874]"
    },
    {
      "src": "identifier: owner_ [41793,41799]",
      "dest": "identifier: owner_ [48436,48442]"
    },
    {
      "src": "type_name [11012,11019]",
      "dest": "type_name [12876,12883]"
    },
    {
      "src": "\": \" [31630,31631]",
      "dest": "\": \" [20276,20277]"
    },
    {
      "src": "while: while [12354,12359]",
      "dest": "while: while [14218,14223]"
    },
    {
      "src": "number_literal: 0 [38268,38269]",
      "dest": "number_literal: 0 [44920,44921]"
    },
    {
      "src": "}: } [31651,31652]",
      "dest": "}: } [20297,20298]"
    },
    {
      "src": "uint256: uint256 [40908,40915]",
      "dest": "uint256: uint256 [47678,47685]"
    },
    {
      "src": ".: . [14025,14026]",
      "dest": ".: . [15889,15890]"
    },
    {
      "src": "primitive_type [34851,34858]",
      "dest": "primitive_type [42228,42235]"
    },
    {
      "src": "identifier: _attribute [10892,10902]",
      "dest": "identifier: _attribute [12756,12766]"
    },
    {
      "src": "identifier: _burn [36076,36081]",
      "dest": "identifier: _burn [42933,42938]"
    },
    {
      "src": "view: view [37816,37820]",
      "dest": "view: view [44468,44472]"
    },
    {
      "src": "identifier: subscribers [11664,11675]",
      "dest": "identifier: subscribers [13528,13539]"
    },
    {
      "src": "): ) [11541,11542]",
      "dest": "): ) [13405,13406]"
    },
    {
      "src": "identifier: syncAttributeValue [12404,12422]",
      "dest": "identifier: syncAttributeValue [14268,14286]"
    },
    {
      "src": "bytes32: bytes32 [9258,9265]",
      "dest": "bytes32: bytes32 [11122,11129]"
    },
    {
      "src": "(: ( [3899,3900]",
      "dest": "(: ( [5870,5871]"
    },
    {
      "src": "call_argument [12429,12439]",
      "dest": "call_argument [14293,14303]"
    },
    {
      "src": "variable_declaration_statement [32278,32316]",
      "dest": "variable_declaration_statement [20924,20962]"
    },
    {
      "src": "override_specifier [35611,35619]",
      "dest": "override_specifier [41499,41507]"
    },
    {
      "src": "identifier: msg [33987,33990]",
      "dest": "identifier: msg [40217,40220]"
    },
    {
      "src": "identifier: recipient [6144,6153]",
      "dest": "identifier: recipient [8054,8063]"
    },
    {
      "src": "[: [ [34940,34941]",
      "dest": "[: [ [43016,43017]"
    },
    {
      "src": "binary_expression [10385,10484]",
      "dest": "binary_expression [12249,12348]"
    },
    {
      "src": "(: ( [30155,30156]",
      "dest": "(: ( [36363,36364]"
    },
    {
      "src": "type_name [37336,37343]",
      "dest": "type_name [44050,44057]"
    },
    {
      "src": "expression_statement [28863,28916]",
      "dest": "expression_statement [32458,32498]"
    },
    {
      "src": "comment: // File: contracts/registry/Registry.sol [8219,8259]",
      "dest": "comment: // &&&&&&&&&&&&&&&&&&&&&&&&&&&&&%&&&&%%%%&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&& [150,223]"
    },
    {
      "src": "internal: internal [3294,3302]",
      "dest": "internal: internal [5265,5273]"
    },
    {
      "src": "type_name [10321,10328]",
      "dest": "type_name [12185,12192]"
    },
    {
      "src": "returns: returns [42414,42421]",
      "dest": "returns: returns [49054,49061]"
    },
    {
      "src": "primitive_type [24058,24065]",
      "dest": "primitive_type [32384,32391]"
    },
    {
      "src": "internal: internal [27795,27803]",
      "dest": "internal: internal [38649,38657]"
    },
    {
      "src": "(: ( [30522,30523]",
      "dest": "(: ( [24380,24381]"
    },
    {
      "src": "[: [ [10778,10779]",
      "dest": "[: [ [12642,12643]"
    },
    {
      "src": "array_access [37898,37916]",
      "dest": "array_access [44550,44568]"
    },
    {
      "src": "call_expression [35631,35690]",
      "dest": "call_expression [41519,41578]"
    },
    {
      "src": "variable_declaration_statement [11012,11043]",
      "dest": "variable_declaration_statement [12876,12907]"
    },
    {
      "src": "primitive_type [15821,15828]",
      "dest": "primitive_type [17632,17639]"
    },
    {
      "src": "primitive_type [7248,7255]",
      "dest": "primitive_type [9158,9165]"
    },
    {
      "src": "identifier: account [37532,37539]",
      "dest": "identifier: account [44182,44189]"
    },
    {
      "src": "address: address [42072,42079]",
      "dest": "address: address [48612,48619]"
    },
    {
      "src": "contract_declaration [41354,42651]",
      "dest": "contract_declaration [48069,49309]"
    },
    {
      "src": "function_definition [32015,32120]",
      "dest": "function_definition [20661,20766]"
    },
    {
      "src": "event: event [7897,7902]",
      "dest": "event: event [9807,9812]"
    },
    {
      "src": ",: , [20151,20152]",
      "dest": ",: , [30789,30790]"
    },
    {
      "src": "primitive_type [982,989]",
      "dest": "primitive_type [2953,2960]"
    },
    {
      "src": "call_argument [12423,12427]",
      "dest": "call_argument [14287,14291]"
    },
    {
      "src": "<: < [38232,38233]",
      "dest": "<: < [44884,44885]"
    },
    {
      "src": "primitive_type [22734,22741]",
      "dest": "primitive_type [26454,26461]"
    },
    {
      "src": "primitive_type [3283,3290]",
      "dest": "primitive_type [5254,5261]"
    },
    {
      "src": "): ) [6169,6170]",
      "dest": "): ) [8079,8080]"
    },
    {
      "src": "parameter [13340,13352]",
      "dest": "parameter [15204,15216]"
    },
    {
      "src": "call_argument [36881,36903]",
      "dest": "call_argument [43649,43671]"
    },
    {
      "src": "visibility [42481,42487]",
      "dest": "visibility [31075,31081]"
    },
    {
      "src": "identifier: balanceOf [15797,15806]",
      "dest": "identifier: balanceOf [17608,17617]"
    },
    {
      "src": "call_expression [9499,9523]",
      "dest": "call_expression [11363,11387]"
    },
    {
      "src": "): ) [39747,39748]",
      "dest": "): ) [46517,46518]"
    },
    {
      "src": "identifier: _addresses [14078,14088]",
      "dest": "identifier: _addresses [15942,15952]"
    },
    {
      "src": "address: address [27818,27825]",
      "dest": "address: address [38621,38628]"
    },
    {
      "src": "boolean_literal [21902,21906]",
      "dest": "boolean_literal [33924,33928]"
    },
    {
      "src": "!=: != [34319,34321]",
      "dest": "!=: != [40549,40551]"
    },
    {
      "src": "type_name [13191,13198]",
      "dest": "type_name [15055,15062]"
    },
    {
      "src": ",: , [29689,29690]",
      "dest": ",: , [36754,36755]"
    },
    {
      "src": "call_argument [2706,2716]",
      "dest": "call_argument [4677,4687]"
    },
    {
      "src": "function: function [2312,2320]",
      "dest": "function: function [4283,4291]"
    },
    {
      "src": "variable_declaration_statement [13860,13891]",
      "dest": "variable_declaration_statement [15724,15755]"
    },
    {
      "src": "member_expression [38216,38231]",
      "dest": "member_expression [44868,44883]"
    },
    {
      "src": "function: function [20825,20833]",
      "dest": "function: function [34439,34447]"
    },
    {
      "src": "primitive_type [33746,33753]",
      "dest": "primitive_type [39892,39899]"
    },
    {
      "src": "binary_expression [11060,11071]",
      "dest": "binary_expression [12924,12935]"
    },
    {
      "src": ",: , [9926,9927]",
      "dest": ",: , [11790,11791]"
    },
    {
      "src": "expression_statement [10768,10858]",
      "dest": "expression_statement [12632,12722]"
    },
    {
      "src": "(: ( [14505,14506]",
      "dest": "(: ( [16369,16370]"
    },
    {
      "src": ",: , [5365,5366]",
      "dest": ",: , [7336,7337]"
    },
    {
      "src": ".: . [11289,11290]",
      "dest": ".: . [13153,13154]"
    },
    {
      "src": "}: } [42554,42555]",
      "dest": "}: } [49305,49306]"
    },
    {
      "src": "identifier: _value [29963,29969]",
      "dest": "identifier: amount [37072,37078]"
    },
    {
      "src": "identifier: sender [31812,31818]",
      "dest": "identifier: sender [20458,20464]"
    },
    {
      "src": "type_name [6513,6520]",
      "dest": "type_name [8423,8430]"
    },
    {
      "src": "call_argument [14323,14327]",
      "dest": "call_argument [16187,16191]"
    },
    {
      "src": "identifier: receiver [37051,37059]",
      "dest": "identifier: receiver [43744,43752]"
    },
    {
      "src": "calldata: calldata [13745,13753]",
      "dest": "calldata: calldata [15609,15617]"
    },
    {
      "src": "event_definition [8134,8212]",
      "dest": "event_definition [10044,10122]"
    },
    {
      "src": "identifier: _from [29620,29625]",
      "dest": "identifier: _from [41729,41734]"
    },
    {
      "src": "return_type_definition [1938,1955]",
      "dest": "return_type_definition [3909,3926]"
    },
    {
      "src": ",: , [2334,2335]",
      "dest": ",: , [4305,4306]"
    },
    {
      "src": "expression_statement [11088,11148]",
      "dest": "expression_statement [12952,13012]"
    },
    {
      "src": ",: , [30535,30536]",
      "dest": ",: , [24412,24413]"
    },
    {
      "src": "bytes32: bytes32 [9538,9545]",
      "dest": "bytes32: bytes32 [11402,11409]"
    },
    {
      "src": "true: true [21902,21906]",
      "dest": "true: true [33924,33928]"
    },
    {
      "src": "type_name [13676,13683]",
      "dest": "type_name [15540,15547]"
    },
    {
      "src": "string [19425,19447]",
      "dest": "string [37703,37741]"
    },
    {
      "src": "[: [ [35648,35649]",
      "dest": "[: [ [41536,41537]"
    },
    {
      "src": "type_name [10618,10625]",
      "dest": "type_name [12482,12489]"
    },
    {
      "src": "parameter [39188,39195]",
      "dest": "parameter [45958,45965]"
    },
    {
      "src": "identifier: to [7950,7952]",
      "dest": "identifier: to [9860,9862]"
    },
    {
      "src": "return_statement [13252,13294]",
      "dest": "return_statement [15116,15158]"
    },
    {
      "src": ",: , [9763,9764]",
      "dest": ",: , [11627,11628]"
    },
    {
      "src": "state_mutability [3959,3963]",
      "dest": "state_mutability [5930,5934]"
    },
    {
      "src": "identifier: data [13079,13083]",
      "dest": "identifier: data [14943,14947]"
    },
    {
      "src": "solidity_version:  0.6.10 [27525,27532]",
      "dest": "solidity_version:  0.6.10 [10144,10151]"
    },
    {
      "src": "primitive_type [12807,12814]",
      "dest": "primitive_type [14671,14678]"
    },
    {
      "src": "(: ( [34298,34299]",
      "dest": "(: ( [40528,40529]"
    },
    {
      "src": "identifier: totalSupply [30391,30402]",
      "dest": "identifier: totalSupply [36232,36243]"
    },
    {
      "src": "identifier: _attribute [12199,12209]",
      "dest": "identifier: _attribute [14063,14073]"
    },
    {
      "src": "constructor: constructor [31345,31356]",
      "dest": "constructor: constructor [19991,20002]"
    },
    {
      "src": "(: ( [32240,32241]",
      "dest": "(: ( [20886,20887]"
    },
    {
      "src": "internal: internal [19550,19558]",
      "dest": "internal: internal [21697,21705]"
    },
    {
      "src": "identifier: Transfer [29796,29804]",
      "dest": "identifier: Transfer [37095,37103]"
    },
    {
      "src": "type_name [35507,35514]",
      "dest": "type_name [41422,41429]"
    },
    {
      "src": "identifier: msg [14660,14663]",
      "dest": "identifier: msg [16524,16527]"
    },
    {
      "src": "identifier: onlyOwner [11439,11448]",
      "dest": "identifier: onlyOwner [13303,13312]"
    },
    {
      "src": "=: = [14448,14449]",
      "dest": "=: = [16312,16313]"
    },
    {
      "src": "}: } [3390,3391]",
      "dest": "}: } [5361,5362]"
    },
    {
      "src": "primitive_type [28984,28991]",
      "dest": "primitive_type [48853,48860]"
    },
    {
      "src": "}: } [31463,31464]",
      "dest": "}: } [20109,20110]"
    },
    {
      "src": "primitive_type [13521,13528]",
      "dest": "primitive_type [15385,15392]"
    },
    {
      "src": "call_expression [40296,40329]",
      "dest": "call_expression [47066,47099]"
    },
    {
      "src": "bytes32: bytes32 [9991,9998]",
      "dest": "bytes32: bytes32 [11855,11862]"
    },
    {
      "src": "type_name [12925,12932]",
      "dest": "type_name [14789,14796]"
    },
    {
      "src": ">=: >= [1074,1076]",
      "dest": ">=: >= [3045,3047]"
    },
    {
      "src": "parameter [22752,22776]",
      "dest": "parameter [34483,34506]"
    },
    {
      "src": "visibility [6171,6179]",
      "dest": "visibility [8081,8089]"
    },
    {
      "src": "): ) [10756,10757]",
      "dest": "): ) [12620,12621]"
    },
    {
      "src": "true [29094,29098]",
      "dest": "true [32208,32212]"
    },
    {
      "src": "member_expression [38734,38771]",
      "dest": "member_expression [45386,45423]"
    },
    {
      "src": "identifier: TimeLockedToken [33284,33299]",
      "dest": "identifier: TimeLockedToken [39441,39456]"
    },
    {
      "src": "comment: /**      * @dev Emitted when the allowance of a `spender` for an `owner` is set by      * a call to {approve}. `value` is the new allowance.      */ [7977,8128]",
      "dest": "comment: /**      * @dev Emitted when the allowance of a `spender` for an `owner` is set by      * a call to {approve}. `value` is the new allowance.      */ [9887,10038]"
    },
    {
      "src": ".: . [41805,41806]",
      "dest": ".: . [48448,48449]"
    },
    {
      "src": ".: . [36326,36327]",
      "dest": ".: . [43163,43164]"
    },
    {
      "src": "function_definition [5245,5411]",
      "dest": "function_definition [7216,7382]"
    },
    {
      "src": "==: == [2617,2619]",
      "dest": "==: == [4588,4590]"
    },
    {
      "src": "{: { [11255,11256]",
      "dest": "{: { [13119,13120]"
    },
    {
      "src": "{: { [3326,3327]",
      "dest": "{: { [5297,5298]"
    },
    {
      "src": "variable_declaration [4032,4041]",
      "dest": "variable_declaration [6003,6012]"
    },
    {
      "src": "call_argument [31441,31442]",
      "dest": "call_argument [20087,20088]"
    },
    {
      "src": ">=: >= [35656,35658]",
      "dest": ">=: >= [41544,41546]"
    },
    {
      "src": "assignment_expression [37038,37069]",
      "dest": "assignment_expression [43731,43790]"
    },
    {
      "src": "variable_declaration_statement [37448,37502]",
      "dest": "variable_declaration_statement [42264,42306]"
    },
    {
      "src": "uint256: uint256 [13705,13712]",
      "dest": "uint256: uint256 [15569,15576]"
    },
    {
      "src": "identifier: FIRST_EPOCH_DELAY [40675,40692]",
      "dest": "identifier: FIRST_EPOCH_DELAY [47445,47462]"
    },
    {
      "src": "member_expression [10745,10755]",
      "dest": "member_expression [12609,12619]"
    },
    {
      "src": "parameter [11394,11412]",
      "dest": "parameter [13258,13276]"
    },
    {
      "src": "): ) [30263,30264]",
      "dest": "): ) [27594,27595]"
    },
    {
      "src": "solidity_pragma_token [32520,32535]",
      "dest": "solidity_pragma_token [19281,19296]"
    },
    {
      "src": "identifier: setAttribute [10572,10584]",
      "dest": "identifier: setAttribute [12436,12448]"
    },
    {
      "src": "memory: memory [5287,5293]",
      "dest": "memory: memory [7258,7264]"
    },
    {
      "src": "primitive_type [10321,10328]",
      "dest": "primitive_type [12185,12192]"
    },
    {
      "src": "identifier: _from [29684,29689]",
      "dest": "identifier: account [36747,36754]"
    },
    {
      "src": "identifier: _who [10886,10890]",
      "dest": "identifier: _who [12750,12754]"
    },
    {
      "src": "address: address [8149,8156]",
      "dest": "address: address [10059,10066]"
    },
    {
      "src": "uint256: uint256 [4643,4650]",
      "dest": "uint256: uint256 [6614,6621]"
    },
    {
      "src": "=: = [12108,12109]",
      "dest": "=: = [13972,13973]"
    },
    {
      "src": "identifier: c [2706,2707]",
      "dest": "identifier: c [4677,4678]"
    },
    {
      "src": "state_mutability [4674,4678]",
      "dest": "state_mutability [6645,6649]"
    },
    {
      "src": "member_expression [10920,10930]",
      "dest": "member_expression [12784,12794]"
    },
    {
      "src": "identifier: _who [23700,23704]",
      "dest": "identifier: spender [33755,33762]"
    },
    {
      "src": "identifier: _attribute [10626,10636]",
      "dest": "identifier: _attribute [12490,12500]"
    },
    {
      "src": "type_name [31172,31179]",
      "dest": "type_name [19818,19825]"
    },
    {
      "src": "visibility [39912,39918]",
      "dest": "visibility [46682,46688]"
    },
    {
      "src": "=: = [30403,30404]",
      "dest": "=: = [36244,36245]"
    },
    {
      "src": "using_directive [19941,19971]",
      "dest": "using_directive [30255,30282]"
    },
    {
      "src": "parameter [42340,42345]",
      "dest": "parameter [48980,48985]"
    },
    {
      "src": ".: . [31448,31449]",
      "dest": ".: . [20094,20095]"
    },
    {
      "src": "): ) [34358,34359]",
      "dest": "): ) [40588,40589]"
    },
    {
      "src": "identifier: data [13103,13107]",
      "dest": "identifier: data [14967,14971]"
    },
    {
      "src": "return_statement [21895,21907]",
      "dest": "return_statement [33917,33929]"
    },
    {
      "src": "): ) [9283,9284]",
      "dest": "): ) [11147,11148]"
    },
    {
      "src": "parameter [11931,11943]",
      "dest": "parameter [13795,13807]"
    },
    {
      "src": "parameter [13562,13569]",
      "dest": "parameter [15426,15433]"
    },
    {
      "src": "primitive_type [22984,22991]",
      "dest": "primitive_type [33764,33771]"
    },
    {
      "src": "identifier: _notes [10680,10686]",
      "dest": "identifier: _notes [12544,12550]"
    },
    {
      "src": "(: ( [15891,15892]",
      "dest": "(: ( [17702,17703]"
    },
    {
      "src": "identifier: SetAttribute [10873,10885]",
      "dest": "identifier: SetAttribute [12737,12749]"
    },
    {
      "src": "inheritance_specifier [33303,33319]",
      "dest": "inheritance_specifier [39460,39465]"
    },
    {
      "src": "): ) [40359,40360]",
      "dest": "): ) [47129,47130]"
    },
    {
      "src": "primitive_type [18510,18517]",
      "dest": "primitive_type [27296,27303]"
    },
    {
      "src": "=: = [40008,40009]",
      "dest": "=: = [46778,46779]"
    },
    {
      "src": "user_defined_type [14375,14381]",
      "dest": "user_defined_type [16239,16245]"
    },
    {
      "src": "=: = [2680,2681]",
      "dest": "=: = [4651,4652]"
    },
    {
      "src": "identifier: index [12397,12402]",
      "dest": "identifier: index [14261,14266]"
    },
    {
      "src": "user_defined_type [13004,13017]",
      "dest": "user_defined_type [14868,14881]"
    },
    {
      "src": "identifier: sub [38400,38403]",
      "dest": "identifier: sub [45052,45055]"
    },
    {
      "src": "identifier: _who [11122,11126]",
      "dest": "identifier: _who [12986,12990]"
    },
    {
      "src": "}: } [17458,17459]",
      "dest": "}: } [19269,19270]"
    },
    {
      "src": "string [35743,35780]",
      "dest": "string [41885,41922]"
    },
    {
      "src": "expression_statement [11266,11304]",
      "dest": "expression_statement [13130,13168]"
    },
    {
      "src": "identifier: length [11688,11694]",
      "dest": "identifier: length [13552,13558]"
    },
    {
      "src": "function_body [40570,40739]",
      "dest": "function_body [47340,47509]"
    },
    {
      "src": "identifier: previousOwner [9629,9642]",
      "dest": "identifier: previousOwner [11493,11506]"
    },
    {
      "src": "}: } [41847,41848]",
      "dest": "}: } [48490,48491]"
    },
    {
      "src": ",: , [29810,29811]",
      "dest": ",: , [37111,37112]"
    },
    {
      "src": "function_body [42121,42291]",
      "dest": "function_body [48661,48831]"
    },
    {
      "src": "address: address [26114,26121]",
      "dest": "address: address [33023,33030]"
    },
    {
      "src": "type_name [12313,12320]",
      "dest": "type_name [14177,14184]"
    },
    {
      "src": "mapping: mapping [33439,33446]",
      "dest": "mapping: mapping [39585,39592]"
    },
    {
      "src": "]: ] [11617,11618]",
      "dest": "]: ] [13481,13482]"
    },
    {
      "src": "function: function [3887,3895]",
      "dest": "function: function [5858,5866]"
    },
    {
      "src": "primitive_type [28575,28582]",
      "dest": "primitive_type [32072,32079]"
    },
    {
      "src": "primitive_type [33896,33903]",
      "dest": "primitive_type [40042,40049]"
    },
    {
      "src": "]: ] [13982,13983]",
      "dest": "]: ] [15846,15847]"
    },
    {
      "src": "binary_expression [31808,31835]",
      "dest": "binary_expression [20454,20481]"
    },
    {
      "src": "identifier: require [36198,36205]",
      "dest": "identifier: require [43069,43076]"
    },
    {
      "src": ",: , [36781,36782]",
      "dest": ",: , [43549,43550]"
    },
    {
      "src": "member_expression [13119,13133]",
      "dest": "member_expression [14983,14997]"
    },
    {
      "src": "]: ] [13286,13287]",
      "dest": "]: ] [15150,15151]"
    },
    {
      "src": "comment: // represents total distribution for locked balances [33381,33433]",
      "dest": "comment: // represents total distribution for locked balances [39527,39579]"
    },
    {
      "src": "identifier: attributes [13259,13269]",
      "dest": "identifier: attributes [15123,15133]"
    },
    {
      "src": "function: function [6479,6487]",
      "dest": "function: function [8389,8397]"
    },
    {
      "src": "identifier: RegistryClone [12245,12258]",
      "dest": "identifier: RegistryClone [14109,14122]"
    },
    {
      "src": "}: } [42290,42291]",
      "dest": "}: } [48830,48831]"
    },
    {
      "src": "type_name [28575,28582]",
      "dest": "type_name [32072,32079]"
    },
    {
      "src": "expression_statement [11518,11543]",
      "dest": "expression_statement [13382,13407]"
    },
    {
      "src": "emit_statement [11553,11620]",
      "dest": "emit_statement [13417,13484]"
    },
    {
      "src": "identifier: _who [12585,12589]",
      "dest": "identifier: _who [14449,14453]"
    },
    {
      "src": "visibility [2347,2355]",
      "dest": "visibility [4318,4326]"
    },
    {
      "src": "primitive_type [21753,21760]",
      "dest": "primitive_type [25874,25881]"
    },
    {
      "src": "identifier: _attribute [13606,13616]",
      "dest": "identifier: _attribute [15470,15480]"
    },
    {
      "src": "return_type_definition [5871,5888]",
      "dest": "return_type_definition [7781,7798]"
    },
    {
      "src": "identifier: spender [20144,20151]",
      "dest": "identifier: spender [30782,30789]"
    },
    {
      "src": "(: ( [5879,5880]",
      "dest": "(: ( [7789,7790]"
    },
    {
      "src": "external: external [7696,7704]",
      "dest": "external: external [9606,9614]"
    },
    {
      "src": "visibility [22051,22059]",
      "dest": "visibility [27014,27022]"
    },
    {
      "src": "identifier: who [14164,14167]",
      "dest": "identifier: who [16028,16031]"
    },
    {
      "src": "return: return [37891,37897]",
      "dest": "return: return [44543,44549]"
    },
    {
      "src": "]: ] [11732,11733]",
      "dest": "]: ] [13596,13597]"
    },
    {
      "src": "identifier: _who [13043,13047]",
      "dest": "identifier: _who [14907,14911]"
    },
    {
      "src": "): ) [41749,41750]",
      "dest": "): ) [48424,48425]"
    },
    {
      "src": "(: ( [9537,9538]",
      "dest": "(: ( [11401,11402]"
    },
    {
      "src": "identifier: sender [31449,31455]",
      "dest": "identifier: sender [20095,20101]"
    },
    {
      "src": "contract_declaration [33266,40956]",
      "dest": "contract_declaration [39423,47726]"
    },
    {
      "src": ",: , [9748,9749]",
      "dest": ",: , [11612,11613]"
    },
    {
      "src": "identifier: b [1893,1894]",
      "dest": "identifier: b [3864,3865]"
    },
    {
      "src": "modifier_definition [31557,31652]",
      "dest": "modifier_definition [20203,20298]"
    },
    {
      "src": ".: . [10748,10749]",
      "dest": ".: . [12612,12613]"
    },
    {
      "src": "type_name [11983,11990]",
      "dest": "type_name [13847,13854]"
    },
    {
      "src": "identifier: spender [6521,6528]",
      "dest": "identifier: spender [8431,8438]"
    },
    {
      "src": "primitive_type [9991,9998]",
      "dest": "primitive_type [11855,11862]"
    },
    {
      "src": "identifier: owner [6506,6511]",
      "dest": "identifier: owner [8416,8421]"
    },
    {
      "src": "public: public [22778,22784]",
      "dest": "public: public [33074,33080]"
    },
    {
      "src": "binary_expression [2706,2716]",
      "dest": "binary_expression [4677,4687]"
    },
    {
      "src": "member_expression [38384,38403]",
      "dest": "member_expression [45036,45055]"
    },
    {
      "src": "internal: internal [4665,4673]",
      "dest": "internal: internal [6636,6644]"
    },
    {
      "src": "type_name [8721,8725]",
      "dest": "type_name [10585,10589]"
    },
    {
      "src": "return_statement [13071,13135]",
      "dest": "return_statement [14935,14999]"
    },
    {
      "src": "parameter [22957,22973]",
      "dest": "parameter [37598,37611]"
    },
    {
      "src": "identifier: b [2686,2687]",
      "dest": "identifier: b [4657,4658]"
    },
    {
      "src": "address: address [7645,7652]",
      "dest": "address: address [9555,9562]"
    },
    {
      "src": "address: address [7934,7941]",
      "dest": "address: address [9844,9851]"
    },
    {
      "src": "expression_statement [14705,14707]",
      "dest": "expression_statement [16569,16571]"
    },
    {
      "src": "comment: // Stores arbitrary attributes for users. An example use case is an IERC20 [8746,8820]",
      "dest": "comment: // Stores arbitrary attributes for users. An example use case is an IERC20 [10610,10684]"
    },
    {
      "src": "primitive_type [9463,9470]",
      "dest": "primitive_type [11327,11334]"
    },
    {
      "src": "identifier: _attribute [13199,13209]",
      "dest": "identifier: _attribute [15063,15073]"
    },
    {
      "src": "identifier: timeLockRegistry [33911,33927]",
      "dest": "identifier: timeLockRegistry [40057,40073]"
    },
    {
      "src": ".: . [10923,10924]",
      "dest": ".: . [12787,12788]"
    },
    {
      "src": "type_name [22984,22991]",
      "dest": "type_name [33764,33771]"
    },
    {
      "src": "}: } [12702,12703]",
      "dest": "}: } [14566,14567]"
    },
    {
      "src": "uint256: uint256 [18510,18517]",
      "dest": "uint256: uint256 [27296,27303]"
    },
    {
      "src": "visibility [32060,32066]",
      "dest": "visibility [20706,20712]"
    },
    {
      "src": "bytes32: bytes32 [11954,11961]",
      "dest": "bytes32: bytes32 [13818,13825]"
    },
    {
      "src": "address: address [15978,15985]",
      "dest": "address: address [17789,17796]"
    },
    {
      "src": "primitive_type [2325,2332]",
      "dest": "primitive_type [4296,4303]"
    },
    {
      "src": "assignment_expression [32088,32112]",
      "dest": "assignment_expression [20734,20758]"
    },
    {
      "src": "parameter [10301,10319]",
      "dest": "parameter [12165,12183]"
    },
    {
      "src": "contract_declaration [19883,24195]",
      "dest": "contract_declaration [30199,38672]"
    },
    {
      "src": "type_name [40561,40568]",
      "dest": "type_name [47331,47338]"
    },
    {
      "src": "{: { [1489,1490]",
      "dest": "{: { [3460,3461]"
    },
    {
      "src": "primitive_type [39414,39421]",
      "dest": "primitive_type [46184,46191]"
    },
    {
      "src": "function: function [38088,38096]",
      "dest": "function: function [44740,44748]"
    },
    {
      "src": "event: event [20090,20095]",
      "dest": "event: event [30728,30733]"
    },
    {
      "src": "[: [ [11687,11688]",
      "dest": "[: [ [13551,13552]"
    },
    {
      "src": "state_variable_declaration [9463,9524]",
      "dest": "state_variable_declaration [11327,11388]"
    },
    {
      "src": "^: ^ [10469,10470]",
      "dest": "^: ^ [12333,12334]"
    },
    {
      "src": "call_expression [30405,30452]",
      "dest": "call_expression [36246,36269]"
    },
    {
      "src": "primitive_type [37336,37343]",
      "dest": "primitive_type [44050,44057]"
    },
    {
      "src": "return_type_definition [42414,42429]",
      "dest": "return_type_definition [49054,49069]"
    },
    {
      "src": "type_name [18530,18536]",
      "dest": "type_name [25909,25915]"
    },
    {
      "src": "identifier: attributes [14153,14163]",
      "dest": "identifier: attributes [16017,16027]"
    },
    {
      "src": "return_statement [40653,40732]",
      "dest": "return_statement [47423,47502]"
    },
    {
      "src": "primitive_type [6513,6520]",
      "dest": "primitive_type [8423,8430]"
    },
    {
      "src": "): ) [42400,42401]",
      "dest": "): ) [49040,49041]"
    },
    {
      "src": "expression_statement [14908,14910]",
      "dest": "expression_statement [16772,16774]"
    },
    {
      "src": "number_literal: 8 [33851,33852]",
      "dest": "number_literal: 8 [39997,39998]"
    },
    {
      "src": "is: is [19913,19915]",
      "dest": "is: is [30223,30225]"
    },
    {
      "src": "function_body [3982,4165]",
      "dest": "function_body [5953,6136]"
    },
    {
      "src": "view: view [38119,38123]",
      "dest": "view: view [44771,44775]"
    },
    {
      "src": "address: address [37792,37799]",
      "dest": "address: address [44444,44451]"
    },
    {
      "src": "identifier: amount [6163,6169]",
      "dest": "identifier: amount [8073,8079]"
    },
    {
      "src": "pragma: pragma [41009,41015]",
      "dest": "pragma: pragma [28985,28991]"
    },
    {
      "src": "expression_statement [31800,31837]",
      "dest": "expression_statement [20446,20483]"
    },
    {
      "src": "identifier: amount [37155,37161]",
      "dest": "identifier: amount [43869,43875]"
    },
    {
      "src": "external: external [11430,11438]",
      "dest": "external: external [13294,13302]"
    },
    {
      "src": "function_body [35620,35858]",
      "dest": "function_body [41508,41977]"
    },
    {
      "src": "type_name [33458,33465]",
      "dest": "type_name [39604,39611]"
    },
    {
      "src": ",: , [42200,42201]",
      "dest": ",: , [48740,48741]"
    },
    {
      "src": "{: { [42347,42348]",
      "dest": "{: { [48987,48988]"
    },
    {
      "src": "call_expression [11710,11739]",
      "dest": "call_expression [13574,13603]"
    },
    {
      "src": "type_name [6498,6505]",
      "dest": "type_name [8408,8415]"
    },
    {
      "src": "{: { [31366,31367]",
      "dest": "{: { [20012,20013]"
    },
    {
      "src": "assignment_expression [41793,41812]",
      "dest": "assignment_expression [48436,48455]"
    },
    {
      "src": "]: ] [37059,37060]",
      "dest": "]: ] [43752,43753]"
    },
    {
      "src": "event_definition [20090,20168]",
      "dest": "event_definition [30728,30806]"
    },
    {
      "src": "parameter [36783,36797]",
      "dest": "parameter [43551,43565]"
    },
    {
      "src": "): ) [10050,10051]",
      "dest": "): ) [11914,11915]"
    },
    {
      "src": "{: { [32077,32078]",
      "dest": "{: { [20723,20724]"
    },
    {
      "src": "identifier: i [14011,14012]",
      "dest": "identifier: i [15875,15876]"
    },
    {
      "src": "primitive_type [5269,5276]",
      "dest": "primitive_type [7240,7247]"
    },
    {
      "src": "call_expression [35709,35731]",
      "dest": "call_expression [41851,41873]"
    },
    {
      "src": "function_body [31067,31106]",
      "dest": "function_body [19713,19752]"
    },
    {
      "src": "address: address [23019,23026]",
      "dest": "address: address [27261,27268]"
    },
    {
      "src": "call_expression [36840,36904]",
      "dest": "call_expression [43608,43672]"
    },
    {
      "src": "binary_expression [12656,12695]",
      "dest": "binary_expression [14520,14559]"
    },
    {
      "src": "storage: storage [12261,12268]",
      "dest": "storage: storage [14125,14132]"
    },
    {
      "src": "identifier: div [38768,38771]",
      "dest": "identifier: div [45420,45423]"
    },
    {
      "src": "member_expression [11088,11121]",
      "dest": "member_expression [12952,12985]"
    },
    {
      "src": "expression_statement [30391,30453]",
      "dest": "expression_statement [36232,36270]"
    },
    {
      "src": "primitive_type [27818,27825]",
      "dest": "primitive_type [38621,38628]"
    },
    {
      "src": "comment: // 1st epoch is FIRST_EPOCH_DELAY longer; we check to prevent subtraction underflow [38428,38511]",
      "dest": "comment: // 1st epoch is FIRST_EPOCH_DELAY longer; we check to prevent subtraction underflow [45080,45163]"
    },
    {
      "src": "member_expression [11848,11878]",
      "dest": "member_expression [13712,13742]"
    },
    {
      "src": "identifier: subscribers [11848,11859]",
      "dest": "identifier: subscribers [13712,13723]"
    },
    {
      "src": ".: . [14496,14497]",
      "dest": ".: . [16360,16361]"
    },
    {
      "src": "call_argument [29963,29969]",
      "dest": "call_argument [37072,37078]"
    },
    {
      "src": ",: , [36238,36239]",
      "dest": ",: , [43109,43110]"
    },
    {
      "src": "): ) [36227,36228]",
      "dest": "): ) [43098,43099]"
    },
    {
      "src": "identifier: _attribute [10471,10481]",
      "dest": "identifier: _attribute [12335,12345]"
    },
    {
      "src": "address: address [8361,8368]",
      "dest": "address: address [10225,10232]"
    },
    {
      "src": "string_literal [42535,42547]",
      "dest": "string_literal [49293,49298]"
    },
    {
      "src": "identifier: sender [29056,29062]",
      "dest": "identifier: sender [48899,48905]"
    },
    {
      "src": ",: , [10661,10662]",
      "dest": ",: , [12525,12526]"
    },
    {
      "src": "comment: /**      * @dev Returns the remaining number of tokens that `spender` will be      * allowed to spend on behalf of `owner` through {transferFrom}. This is      * zero by default.      *      * This value changes when {approve} or {transferFrom} are called.      */ [6203,6473]",
      "dest": "comment: /**      * @dev Returns the remaining number of tokens that `spender` will be      * allowed to spend on behalf of `owner` through {transferFrom}. This is      * zero by default.      *      * This value changes when {approve} or {transferFrom} are called.      */ [8113,8383]"
    },
    {
      "src": "primitive_type [12821,12828]",
      "dest": "primitive_type [14685,14692]"
    },
    {
      "src": "call_expression [1967,1996]",
      "dest": "call_expression [3938,3967]"
    },
    {
      "src": "indexed: indexed [7942,7949]",
      "dest": "indexed: indexed [9852,9859]"
    },
    {
      "src": "call_argument [19417,19423]",
      "dest": "call_argument [37682,37701]"
    },
    {
      "src": "(: ( [30420,30421]",
      "dest": "(: ( [36261,36262]"
    },
    {
      "src": "identifier: mod [4639,4642]",
      "dest": "identifier: mod [6610,6613]"
    },
    {
      "src": "parameter [13521,13539]",
      "dest": "parameter [15385,15403]"
    },
    {
      "src": "view: view [39174,39178]",
      "dest": "view: view [45944,45948]"
    },
    {
      "src": "): ) [31576,31577]",
      "dest": "): ) [20222,20223]"
    },
    {
      "src": "address: address [12807,12814]",
      "dest": "address: address [14671,14678]"
    },
    {
      "src": "=: = [33849,33850]",
      "dest": "=: = [39995,39996]"
    },
    {
      "src": "(: ( [38748,38749]",
      "dest": "(: ( [45400,45401]"
    },
    {
      "src": "): ) [38110,38111]",
      "dest": "): ) [44762,44763]"
    },
    {
      "src": "parameter [36097,36111]",
      "dest": "parameter [42954,42968]"
    },
    {
      "src": "uint256: uint256 [33365,33372]",
      "dest": "uint256: uint256 [39511,39518]"
    },
    {
      "src": "identifier: sender [14664,14670]",
      "dest": "identifier: sender [16528,16534]"
    },
    {
      "src": "(: ( [12030,12031]",
      "dest": "(: ( [13894,13895]"
    },
    {
      "src": "comment: /**  * @title ClaimableContract  * @dev The ClaimableContract contract is a copy of Claimable Contract by Zeppelin.  and provides basic authorization control functions. Inherits storage layout of  ProxyStorage.  */ [30655,30874]",
      "dest": "comment: /**  * @title ClaimableContract  * @dev The ClaimableContract contract is a copy of Claimable Contract by Zeppelin.  and provides basic authorization control functions. Inherits storage layout of  ProxyStorage.  */ [19301,19520]"
    },
    {
      "src": "block_statement [38887,38933]",
      "dest": "block_statement [45539,45585]"
    },
    {
      "src": "identifier: _attribute [11599,11609]",
      "dest": "identifier: _attribute [13463,13473]"
    },
    {
      "src": "{: { [21814,21815]",
      "dest": "{: { [33814,33815]"
    },
    {
      "src": "member_expression [13079,13089]",
      "dest": "member_expression [14943,14953]"
    },
    {
      "src": "expression_statement [1064,1111]",
      "dest": "expression_statement [3035,3082]"
    },
    {
      "src": "identifier: LOCK_START [38234,38244]",
      "dest": "identifier: LOCK_START [44886,44896]"
    },
    {
      "src": "}: } [12466,12467]",
      "dest": "}: } [14330,14331]"
    },
    {
      "src": "uint256: uint256 [3973,3980]",
      "dest": "uint256: uint256 [5944,5951]"
    },
    {
      "src": ">: > [11068,11069]",
      "dest": ">: > [12932,12933]"
    },
    {
      "src": "parameter [4688,4695]",
      "dest": "parameter [6659,6666]"
    },
    {
      "src": "string [42635,42640]",
      "dest": "string [49184,49196]"
    },
    {
      "src": "call_argument [37921,37943]",
      "dest": "call_argument [44573,44595]"
    },
    {
      "src": "identifier: _transferAllArgs [29035,29051]",
      "dest": "identifier: _burn [48889,48894]"
    },
    {
      "src": "(: ( [30530,30531]",
      "dest": "(: ( [24388,24389]"
    },
    {
      "src": "]: ] [11660,11661]",
      "dest": "]: ] [13524,13525]"
    },
    {
      "src": "}: } [40955,40956]",
      "dest": "}: } [47725,47726]"
    },
    {
      "src": "primitive_type [6498,6505]",
      "dest": "primitive_type [8408,8415]"
    },
    {
      "src": "): ) [35780,35781]",
      "dest": "): ) [41922,41923]"
    },
    {
      "src": "parameter [3283,3292]",
      "dest": "parameter [5254,5263]"
    },
    {
      "src": "function_body [1489,1558]",
      "dest": "function_body [3460,3529]"
    },
    {
      "src": "identifier: syncAttributeValue [8332,8350]",
      "dest": "identifier: syncAttributeValue [10196,10214]"
    },
    {
      "src": "=: = [10976,10977]",
      "dest": "=: = [12840,12841]"
    },
    {
      "src": "primitive_type [13191,13198]",
      "dest": "primitive_type [15055,15062]"
    },
    {
      "src": "comment: // get number of epochs passed [39208,39238]",
      "dest": "comment: // get number of epochs passed [45978,46008]"
    },
    {
      "src": "parameter [13177,13189]",
      "dest": "parameter [15041,15053]"
    },
    {
      "src": "): ) [37837,37838]",
      "dest": "): ) [44489,44490]"
    },
    {
      "src": "primitive_type [24373,24380]",
      "dest": "primitive_type [23059,23066]"
    },
    {
      "src": "uint256: uint256 [3911,3918]",
      "dest": "uint256: uint256 [5882,5889]"
    },
    {
      "src": "address: address [14315,14322]",
      "dest": "address: address [16179,16186]"
    },
    {
      "src": "): ) [12636,12637]",
      "dest": "): ) [14500,14501]"
    },
    {
      "src": ",: , [9841,9842]",
      "dest": ",: , [11705,11706]"
    },
    {
      "src": "comment: // File: contracts/trusttokens/ClaimableContract.sol [30570,30622]",
      "dest": "comment: // &&&&&&&&&/   *&&&&&&&%////////*    %&&&&&&,   (&&&&&&&&,   #&&&&&&&&&& [975,1048]"
    },
    {
      "src": "primitive_type [9695,9702]",
      "dest": "primitive_type [11559,11566]"
    },
    {
      "src": "modifier_invocation [34270,34279]",
      "dest": "modifier_invocation [40500,40509]"
    },
    {
      "src": ",: , [34818,34819]",
      "dest": ",: , [42226,42227]"
    },
    {
      "src": "returns: returns [6180,6187]",
      "dest": "returns: returns [8090,8097]"
    },
    {
      "src": "expression_statement [11710,11740]",
      "dest": "expression_statement [13574,13604]"
    },
    {
      "src": "primitive_type [1947,1954]",
      "dest": "primitive_type [3918,3925]"
    },
    {
      "src": "struct_declaration [8476,8609]",
      "dest": "struct_declaration [10340,10473]"
    },
    {
      "src": "return_statement [39562,39626]",
      "dest": "return_statement [46332,46396]"
    },
    {
      "src": "function_definition [11373,11747]",
      "dest": "function_definition [13237,13611]"
    },
    {
      "src": "primitive_type [10301,10308]",
      "dest": "primitive_type [12165,12172]"
    },
    {
      "src": "address: address [31433,31440]",
      "dest": "address: address [20079,20086]"
    },
    {
      "src": "return: return [38902,38908]",
      "dest": "return: return [45554,45560]"
    },
    {
      "src": "): ) [10692,10693]",
      "dest": "): ) [12556,12557]"
    },
    {
      "src": "type_alias [19947,19958]",
      "dest": "type_alias [30261,30269]"
    },
    {
      "src": "(: ( [31034,31035]",
      "dest": "(: ( [19680,19681]"
    },
    {
      "src": "return_statement [28926,28938]",
      "dest": "return_statement [32508,32520]"
    },
    {
      "src": "array_access [37519,37540]",
      "dest": "array_access [44169,44190]"
    },
    {
      "src": "{: { [11073,11074]",
      "dest": "{: { [12937,12938]"
    },
    {
      "src": "): ) [13539,13540]",
      "dest": "): ) [15403,15404]"
    },
    {
      "src": "function_definition [14229,14345]",
      "dest": "function_definition [16093,16209]"
    },
    {
      "src": "if_statement [39333,39437]",
      "dest": "if_statement [46103,46207]"
    },
    {
      "src": "view: view [5710,5714]",
      "dest": "view: view [7620,7624]"
    },
    {
      "src": "return_type_definition [22785,22799]",
      "dest": "return_type_definition [33089,33103]"
    },
    {
      "src": ",: , [12910,12911]",
      "dest": ",: , [14774,14775]"
    },
    {
      "src": "returns: returns [4679,4686]",
      "dest": "returns: returns [6650,6657]"
    },
    {
      "src": "primitive_type [12313,12320]",
      "dest": "primitive_type [14177,14184]"
    },
    {
      "src": "bytes32: bytes32 [13521,13528]",
      "dest": "bytes32: bytes32 [15385,15392]"
    },
    {
      "src": "parenthesized_expression [10384,10485]",
      "dest": "parenthesized_expression [12248,12349]"
    },
    {
      "src": "{: { [712,713]",
      "dest": "{: { [2683,2684]"
    },
    {
      "src": "emit: emit [31407,31411]",
      "dest": "emit: emit [20053,20057]"
    },
    {
      "src": "identifier: _attribute [13276,13286]",
      "dest": "identifier: _attribute [15140,15150]"
    },
    {
      "src": "\": \" [2752,2753]",
      "dest": "\": \" [4723,4724]"
    },
    {
      "src": "identifier: length [11872,11878]",
      "dest": "identifier: length [13736,13742]"
    },
    {
      "src": "event: event [18991,18996]",
      "dest": "event: event [30491,30496]"
    },
    {
      "src": "{: { [10701,10702]",
      "dest": "{: { [12565,12566]"
    },
    {
      "src": "state_mutability [27804,27808]",
      "dest": "state_mutability [21706,21710]"
    },
    {
      "src": "primitive_type [10618,10625]",
      "dest": "primitive_type [12482,12489]"
    },
    {
      "src": "call_argument [23622,23642]",
      "dest": "call_argument [36831,36866]"
    },
    {
      "src": "user_defined_type [12245,12258]",
      "dest": "user_defined_type [14109,14122]"
    },
    {
      "src": "visibility [15303,15309]",
      "dest": "visibility [17167,17173]"
    },
    {
      "src": "type_name [3900,3907]",
      "dest": "type_name [5871,5878]"
    },
    {
      "src": "primitive_type [11780,11787]",
      "dest": "primitive_type [13644,13651]"
    },
    {
      "src": "memory: memory [18023,18029]",
      "dest": "memory: memory [27321,27327]"
    },
    {
      "src": "type_name [13004,13017]",
      "dest": "type_name [14868,14881]"
    },
    {
      "src": "identifier: newOwner [15164,15172]",
      "dest": "identifier: newOwner [17028,17036]"
    },
    {
      "src": "type_name [29691,29698]",
      "dest": "type_name [36756,36763]"
    },
    {
      "src": "): ) [15383,15384]",
      "dest": "): ) [17247,17248]"
    },
    {
      "src": "{: { [41393,41394]",
      "dest": "{: { [48108,48109]"
    },
    {
      "src": "block_statement [11073,11159]",
      "dest": "block_statement [12937,13023]"
    },
    {
      "src": "type_name [13735,13744]",
      "dest": "type_name [15599,15608]"
    },
    {
      "src": "]: ] [13806,13807]",
      "dest": "]: ] [15670,15671]"
    },
    {
      "src": "(: ( [35496,35497]",
      "dest": "(: ( [41411,41412]"
    },
    {
      "src": "array_access [11710,11733]",
      "dest": "array_access [13574,13597]"
    },
    {
      "src": "type_name [29348,29352]",
      "dest": "type_name [24538,24542]"
    },
    {
      "src": "identifier: attributes [13032,13042]",
      "dest": "identifier: attributes [14896,14906]"
    },
    {
      "src": "type_name [30964,30971]",
      "dest": "type_name [19610,19617]"
    },
    {
      "src": "): ) [33966,33967]",
      "dest": "): ) [40196,40197]"
    },
    {
      "src": "identifier: c [1072,1073]",
      "dest": "identifier: c [3043,3044]"
    },
    {
      "src": "primitive_type [7954,7961]",
      "dest": "primitive_type [9864,9871]"
    },
    {
      "src": "(: ( [30963,30964]",
      "dest": "(: ( [19609,19610]"
    },
    {
      "src": "): ) [14896,14897]",
      "dest": "): ) [16760,16761]"
    },
    {
      "src": "[: [ [12258,12259]",
      "dest": "[: [ [14122,14123]"
    },
    {
      "src": "identifier: ProxyStorage [30906,30918]",
      "dest": "identifier: ProxyStorage [19552,19564]"
    },
    {
      "src": "address: address [7248,7255]",
      "dest": "address: address [9158,9165]"
    },
    {
      "src": "comment: // b) the writer is writing to attribute foo and that writer already has [10136,10208]",
      "dest": "comment: // b) the writer is writing to attribute foo and that writer already has [12000,12072]"
    },
    {
      "src": "primitive_type [21808,21812]",
      "dest": "primitive_type [33808,33812]"
    },
    {
      "src": "type_name [10595,10602]",
      "dest": "type_name [12459,12466]"
    },
    {
      "src": "primitive_type [3317,3324]",
      "dest": "primitive_type [5288,5295]"
    },
    {
      "src": "call_expression [40660,40693]",
      "dest": "call_expression [47430,47463]"
    },
    {
      "src": "type_name [33439,33466]",
      "dest": "type_name [39585,39612]"
    },
    {
      "src": "function: function [11894,11902]",
      "dest": "function: function [13758,13766]"
    },
    {
      "src": "call_argument [35828,35831]",
      "dest": "call_argument [41957,41960]"
    },
    {
      "src": "(: ( [30940,30941]",
      "dest": "(: ( [19586,19587]"
    },
    {
      "src": "address: address [22957,22964]",
      "dest": "address: address [37598,37605]"
    },
    {
      "src": "[: [ [13742,13743]",
      "dest": "[: [ [15606,15607]"
    },
    {
      "src": "(: ( [39277,39278]",
      "dest": "(: ( [46047,46048]"
    },
    {
      "src": "parameter [14251,14270]",
      "dest": "parameter [16115,16134]"
    },
    {
      "src": "}: } [30053,30054]",
      "dest": "}: } [37139,37140]"
    },
    {
      "src": "identifier: onlyOwner [14629,14638]",
      "dest": "identifier: onlyOwner [16493,16502]"
    },
    {
      "src": "comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      *      * - Addition cannot overflow.      */ [719,952]",
      "dest": "comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      *      * - Addition cannot overflow.      */ [2690,2923]"
    },
    {
      "src": "uint256: uint256 [11983,11990]",
      "dest": "uint256: uint256 [13847,13854]"
    },
    {
      "src": ".: . [35091,35092]",
      "dest": ".: . [42674,42675]"
    },
    {
      "src": "]: ] [13616,13617]",
      "dest": "]: ] [15480,15481]"
    },
    {
      "src": "call_argument [14315,14336]",
      "dest": "call_argument [16179,16200]"
    },
    {
      "src": "identifier: setTimeLockRegistry [34212,34231]",
      "dest": "identifier: setTimeLockRegistry [40442,40461]"
    },
    {
      "src": "function: function [36741,36749]",
      "dest": "function: function [43509,43517]"
    },
    {
      "src": "<: < [38536,38537]",
      "dest": "<: < [45188,45189]"
    },
    {
      "src": "call_argument [12124,12130]",
      "dest": "call_argument [13988,13994]"
    },
    {
      "src": "event_definition [9968,10052]",
      "dest": "event_definition [11832,11916]"
    },
    {
      "src": "{: { [37839,37840]",
      "dest": "{: { [44491,44492]"
    },
    {
      "src": "identifier: _to [14397,14400]",
      "dest": "identifier: _to [16261,16264]"
    },
    {
      "src": ",: , [10839,10840]",
      "dest": ",: , [12703,12704]"
    },
    {
      "src": ",: , [12209,12210]",
      "dest": ",: , [14073,14074]"
    },
    {
      "src": ".: . [12403,12404]",
      "dest": ".: . [14267,14268]"
    },
    {
      "src": "call_argument [32352,32358]",
      "dest": "call_argument [20998,21004]"
    },
    {
      "src": "function: function [13150,13158]",
      "dest": "function: function [15014,15022]"
    },
    {
      "src": "identifier: div [3896,3899]",
      "dest": "identifier: div [5867,5870]"
    },
    {
      "src": "identifier: _value [36105,36111]",
      "dest": "identifier: _value [42962,42968]"
    },
    {
      "src": "parameter [7680,7694]",
      "dest": "parameter [9590,9604]"
    },
    {
      "src": "(: ( [29675,29676]",
      "dest": "(: ( [36738,36739]"
    },
    {
      "src": "identifier: index [12361,12366]",
      "dest": "identifier: index [14225,14230]"
    },
    {
      "src": "identifier: _startIndex [13713,13724]",
      "dest": "identifier: _startIndex [15577,15588]"
    },
    {
      "src": "(: ( [19005,19006]",
      "dest": "(: ( [30505,30506]"
    },
    {
      "src": "return_type_definition [4679,4696]",
      "dest": "return_type_definition [6650,6667]"
    },
    {
      "src": ",: , [32358,32359]",
      "dest": ",: , [21004,21005]"
    },
    {
      "src": ",: , [1894,1895]",
      "dest": ",: , [3865,3866]"
    },
    {
      "src": "parameter [1874,1883]",
      "dest": "parameter [3845,3854]"
    },
    {
      "src": "constant: constant [33754,33762]",
      "dest": "constant: constant [39900,39908]"
    },
    {
      "src": "indexed: indexed [9999,10006]",
      "dest": "indexed: indexed [11863,11870]"
    },
    {
      "src": "expression_statement [34054,34056]",
      "dest": "expression_statement [40284,40286]"
    },
    {
      "src": "state_mutability [10346,10350]",
      "dest": "state_mutability [12210,12214]"
    },
    {
      "src": "comment: // transfer to recipient [37082,37106]",
      "dest": "comment: // transfer to recipient [43803,43827]"
    },
    {
      "src": "event: event [9877,9882]",
      "dest": "event: event [11741,11746]"
    },
    {
      "src": "parameter [13354,13372]",
      "dest": "parameter [15218,15236]"
    },
    {
      "src": "visibility [12005,12011]",
      "dest": "visibility [13869,13875]"
    },
    {
      "src": "}: } [42647,42648]",
      "dest": "}: } [49203,49204]"
    },
    {
      "src": "parameter [11954,11972]",
      "dest": "parameter [13818,13836]"
    },
    {
      "src": "address: address [11931,11938]",
      "dest": "address: address [13795,13802]"
    },
    {
      "src": ".: . [13083,13084]",
      "dest": ".: . [14947,14948]"
    },
    {
      "src": "primitive_type [13562,13569]",
      "dest": "primitive_type [15426,15433]"
    },
    {
      "src": "unary_expression [41716,41727]",
      "dest": "unary_expression [48390,48401]"
    },
    {
      "src": "update_expression [13908,13915]",
      "dest": "update_expression [15772,15779]"
    },
    {
      "src": "primitive_type [8413,8420]",
      "dest": "primitive_type [10277,10284]"
    },
    {
      "src": "identifier: pendingOwner_ [32088,32101]",
      "dest": "identifier: pendingOwner_ [20734,20747]"
    },
    {
      "src": "parameter [42423,42428]",
      "dest": "parameter [49063,49068]"
    },
    {
      "src": "(: ( [5698,5699]",
      "dest": "(: ( [7608,7609]"
    },
    {
      "src": "address: address [28575,28582]",
      "dest": "address: address [32072,32079]"
    },
    {
      "src": "call_argument [12219,12221]",
      "dest": "call_argument [14083,14085]"
    },
    {
      "src": "{: { [32267,32268]",
      "dest": "{: { [20913,20914]"
    },
    {
      "src": "block_statement [42228,42284]",
      "dest": "block_statement [48768,48824]"
    },
    {
      "src": "primitive_type [33659,33666]",
      "dest": "primitive_type [39805,39812]"
    },
    {
      "src": "string [34959,34981]",
      "dest": "string [43035,43057]"
    },
    {
      "src": "comment: /**  * Forked subset of Openzeppelin SafeMath allowing custom underflow/overflow messages  * Useful for debugging, replaceable with standard SafeMath  */ [17540,17696]",
      "dest": "comment: // &&&&&&&&&&&&&&&&&(      /&&&&&&&&&&&&&&&&&&&&&%&%*   ,%&&&&&&&&&&&&&&& [375,448]"
    },
    {
      "src": "[: [ [13605,13606]",
      "dest": "[: [ [15469,15470]"
    },
    {
      "src": "=: = [12327,12328]",
      "dest": "=: = [14191,14192]"
    },
    {
      "src": "user_defined_type [18933,18945]",
      "dest": "user_defined_type [30226,30238]"
    },
    {
      "src": "identifier: to [19044,19046]",
      "dest": "identifier: to [30544,30546]"
    },
    {
      "src": "event_paramater [8172,8195]",
      "dest": "event_paramater [10082,10105]"
    },
    {
      "src": ".: . [12059,12060]",
      "dest": ".: . [13923,13924]"
    },
    {
      "src": ",: , [12054,12055]",
      "dest": ",: , [13918,13919]"
    },
    {
      "src": "primitive_type [27830,27834]",
      "dest": "primitive_type [40132,40136]"
    },
    {
      "src": "call_argument [10813,10819]",
      "dest": "call_argument [12677,12683]"
    },
    {
      "src": "=: = [1046,1047]",
      "dest": "=: = [3017,3018]"
    },
    {
      "src": "type_name [2007,2014]",
      "dest": "type_name [3978,3985]"
    },
    {
      "src": "identifier: _attribute [13838,13848]",
      "dest": "identifier: _attribute [15702,15712]"
    },
    {
      "src": "}: } [15458,15459]",
      "dest": "}: } [17322,17323]"
    },
    {
      "src": "expression_statement [32088,32113]",
      "dest": "expression_statement [20734,20759]"
    },
    {
      "src": "identifier: msg [10829,10832]",
      "dest": "identifier: msg [12693,12696]"
    },
    {
      "src": "string [12219,12221]",
      "dest": "string [14083,14085]"
    },
    {
      "src": ",: , [13189,13190]",
      "dest": ",: , [15053,15054]"
    },
    {
      "src": "return_statement [38945,38970]",
      "dest": "return_statement [45597,45622]"
    },
    {
      "src": "identifier: attributes [12656,12666]",
      "dest": "identifier: attributes [14520,14530]"
    },
    {
      "src": "member_expression [37519,37560]",
      "dest": "member_expression [44169,44212]"
    },
    {
      "src": "identifier: owner [30935,30940]",
      "dest": "identifier: owner [19581,19586]"
    },
    {
      "src": "comment: /**      * @dev Transfer function which includes unlocked tokens      * @param _from The address to send tokens from      * @param _to The address that will receive the tokens      * @param _value The amount of tokens to be transferred      */ [34515,34763]",
      "dest": "comment: // allow unlocked transfers to special account [40080,40126]"
    },
    {
      "src": "identifier: b [4048,4049]",
      "dest": "identifier: b [6019,6020]"
    },
    {
      "src": "solidity_version:  0.6.10 [41024,41031]",
      "dest": "solidity_version:  0.6.10 [29000,29007]"
    },
    {
      "src": "): ) [32058,32059]",
      "dest": "): ) [20704,20705]"
    },
    {
      "src": "comment: /**      * @dev Moves `amount` tokens from the caller's account to `recipient`.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [5897,6112]",
      "dest": "comment: /**      * @dev Moves `amount` tokens from the caller's account to `recipient`.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [7807,8022]"
    },
    {
      "src": "identifier: EPOCH_DURATION [33763,33777]",
      "dest": "identifier: EPOCH_DURATION [39909,39923]"
    },
    {
      "src": "(: ( [14314,14315]",
      "dest": "(: ( [16178,16179]"
    },
    {
      "src": "identifier: mul [40341,40344]",
      "dest": "identifier: mul [47111,47114]"
    },
    {
      "src": ",: , [11126,11127]",
      "dest": ",: , [12990,12991]"
    },
    {
      "src": "primitive_type [7265,7272]",
      "dest": "primitive_type [9175,9182]"
    },
    {
      "src": "interface_declaration [8292,8447]",
      "dest": "interface_declaration [10156,10311]"
    },
    {
      "src": "assignment_expression [29931,30008]",
      "dest": "assignment_expression [37042,37079]"
    },
    {
      "src": "identifier: require [12023,12030]",
      "dest": "identifier: require [13887,13894]"
    },
    {
      "src": "(: ( [20104,20105]",
      "dest": "(: ( [30742,30743]"
    },
    {
      "src": "call_expression [10712,10757]",
      "dest": "call_expression [12576,12621]"
    },
    {
      "src": "function: function [13643,13651]",
      "dest": "function: function [15507,15515]"
    },
    {
      "src": "returns: returns [3308,3315]",
      "dest": "returns: returns [5279,5286]"
    },
    {
      "src": "return_statement [12649,12696]",
      "dest": "return_statement [14513,14560]"
    },
    {
      "src": "variable_declaration [1036,1045]",
      "dest": "variable_declaration [3007,3016]"
    },
    {
      "src": "type_name [10647,10654]",
      "dest": "type_name [12511,12518]"
    },
    {
      "src": "view: view [30950,30954]",
      "dest": "view: view [19596,19600]"
    },
    {
      "src": ",: , [10319,10320]",
      "dest": ",: , [12183,12184]"
    },
    {
      "src": "pure: pure [1002,1006]",
      "dest": "pure: pure [2973,2977]"
    },
    {
      "src": "inheritance_specifier [18933,18945]",
      "dest": "inheritance_specifier [30226,30238]"
    },
    {
      "src": "parameter [26114,26126]",
      "dest": "parameter [33023,33037]"
    },
    {
      "src": "emit: emit [11553,11557]",
      "dest": "emit: emit [13417,13421]"
    },
    {
      "src": "(: ( [42399,42400]",
      "dest": "(: ( [49039,49040]"
    },
    {
      "src": ",: , [35520,35521]",
      "dest": ",: , [41435,41436]"
    },
    {
      "src": "address: address [6513,6520]",
      "dest": "address: address [8423,8430]"
    },
    {
      "src": "function: function [37767,37775]",
      "dest": "function: function [44419,44427]"
    },
    {
      "src": "visibility [35602,35610]",
      "dest": "visibility [41490,41498]"
    },
    {
      "src": "(: ( [11059,11060]",
      "dest": "(: ( [12923,12924]"
    },
    {
      "src": ",: , [19046,19047]",
      "dest": ",: , [30546,30547]"
    },
    {
      "src": "visibility [10337,10345]",
      "dest": "visibility [12201,12209]"
    },
    {
      "src": "array_access [13422,13450]",
      "dest": "array_access [15286,15314]"
    },
    {
      "src": "state_mutability [31044,31048]",
      "dest": "state_mutability [19690,19694]"
    },
    {
      "src": "): ) [1922,1923]",
      "dest": "): ) [3893,3894]"
    },
    {
      "src": "array_access [14153,14180]",
      "dest": "array_access [16017,16044]"
    },
    {
      "src": "parameter [1480,1487]",
      "dest": "parameter [3451,3458]"
    },
    {
      "src": "identifier: _attribute [10309,10319]",
      "dest": "identifier: _attribute [12173,12183]"
    },
    {
      "src": "[: [ [14163,14164]",
      "dest": "[: [ [16027,16028]"
    },
    {
      "src": "identifier: epochsPassed [39265,39277]",
      "dest": "identifier: epochsPassed [46035,46047]"
    },
    {
      "src": "primitive_type [9644,9651]",
      "dest": "primitive_type [11508,11515]"
    },
    {
      "src": "identifier: pendingOwner_ [32302,32315]",
      "dest": "identifier: pendingOwner_ [20948,20961]"
    },
    {
      "src": "type_name [20105,20112]",
      "dest": "type_name [30743,30750]"
    },
    {
      "src": "parameter [6553,6560]",
      "dest": "parameter [8463,8470]"
    },
    {
      "src": "(: ( [7911,7912]",
      "dest": "(: ( [9821,9822]"
    },
    {
      "src": "/: / [4046,4047]",
      "dest": "/: / [6017,6018]"
    },
    {
      "src": "type_name [3272,3279]",
      "dest": "type_name [5243,5250]"
    },
    {
      "src": "}: } [32119,32120]",
      "dest": "}: } [20765,20766]"
    },
    {
      "src": "expression_statement [35701,35782]",
      "dest": "expression_statement [41843,41924]"
    },
    {
      "src": "unary_expression [39422,39424]",
      "dest": "unary_expression [46192,46194]"
    },
    {
      "src": "type_name [5724,5731]",
      "dest": "type_name [7634,7641]"
    },
    {
      "src": "is: is [30903,30905]",
      "dest": "is: is [19549,19551]"
    },
    {
      "src": ",: , [14139,14140]",
      "dest": ",: , [16003,16004]"
    },
    {
      "src": "identifier: a [979,980]",
      "dest": "identifier: a [2950,2951]"
    },
    {
      "src": "}: } [39755,39756]",
      "dest": "}: } [46525,46526]"
    },
    {
      "src": "parameter [42072,42083]",
      "dest": "parameter [48612,48623]"
    },
    {
      "src": "return_type_definition [37821,37838]",
      "dest": "return_type_definition [44473,44490]"
    },
    {
      "src": "(: ( [2369,2370]",
      "dest": "(: ( [4340,4341]"
    },
    {
      "src": "call_expression [12023,12068]",
      "dest": "call_expression [13887,13932]"
    },
    {
      "src": "): ) [991,992]",
      "dest": "): ) [2962,2963]"
    },
    {
      "src": "state_mutability [1002,1006]",
      "dest": "state_mutability [2973,2977]"
    },
    {
      "src": "public: public [42581,42587]",
      "dest": "public: public [30894,30900]"
    },
    {
      "src": "state_variable_declaration [8660,8681]",
      "dest": "state_variable_declaration [10524,10545]"
    },
    {
      "src": "identifier: errorMessage [1910,1922]",
      "dest": "identifier: errorMessage [3881,3893]"
    },
    {
      "src": "comment: /**      * @dev Moves `amount` tokens from `sender` to `recipient` using the      * allowance mechanism. `amount` is then deducted from the caller's      * allowance.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [7313,7617]",
      "dest": "comment: /**      * @dev Moves `amount` tokens from `sender` to `recipient` using the      * allowance mechanism. `amount` is then deducted from the caller's      * allowance.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [9223,9527]"
    },
    {
      "src": "variable_declaration [13946,13966]",
      "dest": "variable_declaration [15810,15830]"
    },
    {
      "src": "indexed: indexed [8180,8187]",
      "dest": "indexed: indexed [10090,10097]"
    },
    {
      "src": "identifier: adminAddr [9781,9790]",
      "dest": "identifier: adminAddr [11645,11654]"
    },
    {
      "src": "(: ( [29804,29805]",
      "dest": "(: ( [37103,37104]"
    },
    {
      "src": "identifier: onlyOwner [34270,34279]",
      "dest": "identifier: onlyOwner [40500,40509]"
    },
    {
      "src": "type_name [14064,14071]",
      "dest": "type_name [15928,15935]"
    },
    {
      "src": "function_body [28852,28945]",
      "dest": "function_body [32447,32527]"
    },
    {
      "src": "if_statement [2611,2658]",
      "dest": "if_statement [4582,4629]"
    },
    {
      "src": "bytes32: bytes32 [8532,8539]",
      "dest": "bytes32: bytes32 [10396,10403]"
    },
    {
      "src": "[: [ [13048,13049]",
      "dest": "[: [ [14912,14913]"
    },
    {
      "src": "\": \" [9509,9510]",
      "dest": "\": \" [11373,11374]"
    },
    {
      "src": "(: ( [30216,30217]",
      "dest": "(: ( [27517,27518]"
    },
    {
      "src": "(: ( [12631,12632]",
      "dest": "(: ( [14495,14496]"
    },
    {
      "src": "(: ( [3271,3272]",
      "dest": "(: ( [5242,5243]"
    },
    {
      "src": "identifier: a [4044,4045]",
      "dest": "identifier: a [6015,6016]"
    },
    {
      "src": "]: ] [13604,13605]",
      "dest": "]: ] [15468,15469]"
    },
    {
      "src": "member_expression [37519,37544]",
      "dest": "member_expression [44169,44194]"
    },
    {
      "src": "parameter [23019,23039]",
      "dest": "parameter [27261,27275]"
    },
    {
      "src": "identifier: msg [29052,29055]",
      "dest": "identifier: msg [48895,48898]"
    },
    {
      "src": "): ) [14479,14480]",
      "dest": "): ) [16343,16344]"
    },
    {
      "src": "(: ( [3347,3348]",
      "dest": "(: ( [5318,5319]"
    },
    {
      "src": "}: } [40738,40739]",
      "dest": "}: } [47508,47509]"
    },
    {
      "src": "number_literal: 0 [14040,14041]",
      "dest": "number_literal: 0 [15904,15905]"
    },
    {
      "src": "[: [ [13837,13838]",
      "dest": "[: [ [15701,15702]"
    },
    {
      "src": "identifier: _attribute [13049,13059]",
      "dest": "identifier: _attribute [14913,14923]"
    },
    {
      "src": ",: , [3281,3282]",
      "dest": ",: , [5252,5253]"
    },
    {
      "src": ",: , [8195,8196]",
      "dest": ",: , [10105,10106]"
    },
    {
      "src": "identifier: _increaseApprovalAllArgs [21825,21849]",
      "dest": "identifier: _approve [33825,33833]"
    },
    {
      "src": "parameter [971,980]",
      "dest": "parameter [2942,2951]"
    },
    {
      "src": "event_paramater [7934,7952]",
      "dest": "event_paramater [9844,9862]"
    },
    {
      "src": "(: ( [33965,33966]",
      "dest": "(: ( [40195,40196]"
    },
    {
      "src": "type_name [10944,10957]",
      "dest": "type_name [12808,12821]"
    },
    {
      "src": "primitive_type [20153,20160]",
      "dest": "primitive_type [30791,30798]"
    },
    {
      "src": "parameter [12577,12589]",
      "dest": "parameter [14441,14453]"
    },
    {
      "src": "type_name [12947,12954]",
      "dest": "type_name [14811,14818]"
    },
    {
      "src": "uint256: uint256 [9735,9742]",
      "dest": "uint256: uint256 [11599,11606]"
    },
    {
      "src": "(: ( [14473,14474]",
      "dest": "(: ( [16337,16338]"
    },
    {
      "src": ">=: >= [35732,35734]",
      "dest": ">=: >= [41874,41876]"
    },
    {
      "src": "true: true [28933,28937]",
      "dest": "true: true [32515,32519]"
    },
    {
      "src": "primitive_type [11821,11828]",
      "dest": "primitive_type [13685,13692]"
    },
    {
      "src": "call_argument [2718,2753]",
      "dest": "call_argument [4689,4724]"
    },
    {
      "src": "state_variable_declaration [15957,15972]",
      "dest": "state_variable_declaration [17768,17783]"
    },
    {
      "src": "(: ( [40333,40334]",
      "dest": "(: ( [47103,47104]"
    },
    {
      "src": "call_argument [37545,37555]",
      "dest": "call_argument [44195,44207]"
    },
    {
      "src": "identifier: epochsPassed [38097,38109]",
      "dest": "identifier: epochsPassed [44749,44761]"
    },
    {
      "src": "identifier: _amount [42202,42209]",
      "dest": "identifier: _amount [48742,48749]"
    },
    {
      "src": "pure: pure [42409,42413]",
      "dest": "pure: pure [49049,49053]"
    },
    {
      "src": "comment: // how long it has been since the beginning of lockup period [38293,38353]",
      "dest": "comment: // how long it has been since the beginning of lockup period [44945,45005]"
    },
    {
      "src": "identifier: resultSupply_ [29931,29944]",
      "dest": "identifier: totalSupply [37042,37053]"
    },
    {
      "src": "uint256: uint256 [1874,1881]",
      "dest": "uint256: uint256 [3845,3852]"
    },
    {
      "src": "block_statement [38557,38592]",
      "dest": "block_statement [45209,45244]"
    },
    {
      "src": "identifier: a [2333,2334]",
      "dest": "identifier: a [4304,4305]"
    },
    {
      "src": "call_argument [4725,4751]",
      "dest": "call_argument [6696,6722]"
    },
    {
      "src": "string [1080,1109]",
      "dest": "string [3051,3080]"
    },
    {
      "src": "(: ( [42196,42197]",
      "dest": "(: ( [48736,48737]"
    },
    {
      "src": "return_statement [13582,13628]",
      "dest": "return_statement [15446,15492]"
    },
    {
      "src": "variable_declaration_statement [38706,38788]",
      "dest": "variable_declaration_statement [45358,45440]"
    },
    {
      "src": "return_type_definition [1007,1024]",
      "dest": "return_type_definition [2978,2995]"
    },
    {
      "src": "solidity_version_comparison_operator [106,108]",
      "dest": "solidity_version_comparison_operator [7404,7406]"
    },
    {
      "src": "storage: storage [13808,13815]",
      "dest": "storage: storage [15672,15679]"
    },
    {
      "src": "identifier: previousOwner [31157,31170]",
      "dest": "identifier: previousOwner [19803,19816]"
    },
    {
      "src": "bool: bool [27830,27834]",
      "dest": "bool: bool [40132,40136]"
    },
    {
      "src": "identifier: _value [10655,10661]",
      "dest": "identifier: _value [12519,12525]"
    },
    {
      "src": "type_name [15781,15788]",
      "dest": "type_name [17592,17599]"
    },
    {
      "src": "(: ( [36847,36848]",
      "dest": "(: ( [43615,43616]"
    },
    {
      "src": "contract: contract [33275,33283]",
      "dest": "contract: contract [39432,39440]"
    },
    {
      "src": "uint256: uint256 [971,978]",
      "dest": "uint256: uint256 [2942,2949]"
    },
    {
      "src": "uint256: uint256 [38363,38370]",
      "dest": "uint256: uint256 [45015,45022]"
    },
    {
      "src": "expression_statement [12023,12069]",
      "dest": "expression_statement [13887,13933]"
    },
    {
      "src": "}: } [42373,42374]",
      "dest": "}: } [49013,49014]"
    },
    {
      "src": "type_name [11954,11961]",
      "dest": "type_name [13818,13825]"
    },
    {
      "src": "identifier: name [42474,42478]",
      "dest": "identifier: symbol [31066,31072]"
    },
    {
      "src": "identifier: _ [31643,31644]",
      "dest": "identifier: _ [20289,20290]"
    },
    {
      "src": "block_statement [12374,12460]",
      "dest": "block_statement [14238,14324]"
    },
    {
      "src": "member_expression [14660,14670]",
      "dest": "member_expression [16524,16534]"
    },
    {
      "src": "identifier: ClaimableContract [33321,33338]",
      "dest": "identifier: ClaimableContract [39467,39484]"
    },
    {
      "src": "variable_declaration_statement [14064,14092]",
      "dest": "variable_declaration_statement [15928,15956]"
    },
    {
      "src": "function_definition [6118,6195]",
      "dest": "function_definition [8028,8105]"
    },
    {
      "src": "comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [1147,1416]",
      "dest": "comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [3118,3387]"
    },
    {
      "src": "\": \" [28405,28406]",
      "dest": "\": \" [37784,37785]"
    },
    {
      "src": ".: . [33990,33991]",
      "dest": ".: . [40220,40221]"
    },
    {
      "src": "}: } [15461,15462]",
      "dest": "}: } [17325,17326]"
    },
    {
      "src": "return: return [38945,38951]",
      "dest": "return: return [45597,45603]"
    },
    {
      "src": "string: string [1896,1902]",
      "dest": "string: string [3867,3873]"
    },
    {
      "src": "call_argument [10821,10827]",
      "dest": "call_argument [12685,12691]"
    },
    {
      "src": "for: for [41415,41418]",
      "dest": "for: for [48130,48133]"
    },
    {
      "src": "comment: /**      * @dev Allows the pendingOwner address to finalize the transfer.      */ [15188,15271]",
      "dest": "comment: /**      * @dev Allows the pendingOwner address to finalize the transfer.      */ [17052,17135]"
    },
    {
      "src": "^:  ^ [106,108]",
      "dest": "^:  ^ [7404,7406]"
    },
    {
      "src": "primitive_type [1896,1902]",
      "dest": "primitive_type [3867,3873]"
    },
    {
      "src": "modifier_definition [14823,14917]",
      "dest": "modifier_definition [16687,16781]"
    },
    {
      "src": "parameter [7645,7659]",
      "dest": "parameter [9555,9569]"
    },
    {
      "src": "primitive_type [29691,29698]",
      "dest": "primitive_type [36756,36763]"
    },
    {
      "src": "primitive_type [18016,18022]",
      "dest": "primitive_type [27314,27320]"
    },
    {
      "src": "): ) [39424,39425]",
      "dest": "): ) [46194,46195]"
    },
    {
      "src": "(: ( [14250,14251]",
      "dest": "(: ( [16114,16115]"
    },
    {
      "src": "): ) [14186,14187]",
      "dest": "): ) [16050,16051]"
    },
    {
      "src": "type_name [6189,6193]",
      "dest": "type_name [8099,8103]"
    },
    {
      "src": "identifier: a [1980,1981]",
      "dest": "identifier: a [3951,3952]"
    },
    {
      "src": "function_definition [39889,40369]",
      "dest": "function_definition [46659,47139]"
    },
    {
      "src": "return_statement [37891,37945]",
      "dest": "return_statement [44543,44597]"
    },
    {
      "src": "(: ( [3972,3973]",
      "dest": "(: ( [5943,5944]"
    },
    {
      "src": "state_variable_declaration [15978,16000]",
      "dest": "state_variable_declaration [17789,17811]"
    },
    {
      "src": "public: public [10694,10700]",
      "dest": "public: public [12558,12564]"
    },
    {
      "src": "(: ( [40716,40717]",
      "dest": "(: ( [47486,47487]"
    },
    {
      "src": "identifier: transfer [28962,28970]",
      "dest": "identifier: burn [48848,48852]"
    },
    {
      "src": "]: ] [14179,14180]",
      "dest": "]: ] [16043,16044]"
    },
    {
      "src": "=: = [11475,11476]",
      "dest": "=: = [13339,13340]"
    },
    {
      "src": "identifier: onlyPendingOwner [14832,14848]",
      "dest": "identifier: onlyPendingOwner [16696,16712]"
    },
    {
      "src": "(: ( [34377,34378]",
      "dest": "(: ( [40607,40608]"
    },
    {
      "src": "visibility [5857,5865]",
      "dest": "visibility [7767,7775]"
    },
    {
      "src": "function_definition [11755,11886]",
      "dest": "function_definition [13619,13750]"
    },
    {
      "src": "uint256: uint256 [28984,28991]",
      "dest": "uint256: uint256 [48853,48860]"
    },
    {
      "src": "+: + [1050,1051]",
      "dest": "+: + [3021,3022]"
    },
    {
      "src": "identifier: _spender [21761,21769]",
      "dest": "identifier: target [25882,25888]"
    },
    {
      "src": "visibility [41876,41882]",
      "dest": "visibility [31777,31783]"
    },
    {
      "src": "identifier: _value [10813,10819]",
      "dest": "identifier: _value [12677,12683]"
    },
    {
      "src": "parameter [23487,23503]",
      "dest": "parameter [37613,37628]"
    },
    {
      "src": "(: ( [39336,39337]",
      "dest": "(: ( [46106,46107]"
    },
    {
      "src": "type_name [8149,8156]",
      "dest": "type_name [10059,10066]"
    },
    {
      "src": "expression_statement [28447,28449]",
      "dest": "expression_statement [37834,37869]"
    },
    {
      "src": "{: { [40110,40111]",
      "dest": "{: { [46880,46881]"
    },
    {
      "src": "identifier: StartSubscription [9883,9900]",
      "dest": "identifier: StartSubscription [11747,11764]"
    },
    {
      "src": "call_argument [35709,35741]",
      "dest": "call_argument [41851,41883]"
    },
    {
      "src": "parameter [23692,23704]",
      "dest": "parameter [33747,33762]"
    },
    {
      "src": "identifier: timestamp [8592,8601]",
      "dest": "identifier: timestamp [10456,10465]"
    },
    {
      "src": "public: public [13541,13547]",
      "dest": "public: public [15405,15411]"
    },
    {
      "src": "string_literal [28405,28424]",
      "dest": "string_literal [37784,37820]"
    },
    {
      "src": "internal: internal [18571,18579]",
      "dest": "internal: internal [25937,25945]"
    },
    {
      "src": "primitive_type [13735,13742]",
      "dest": "primitive_type [15599,15606]"
    },
    {
      "src": "pragma: pragma [32513,32519]",
      "dest": "pragma: pragma [19274,19280]"
    },
    {
      "src": "primitive_type [3272,3279]",
      "dest": "primitive_type [5243,5250]"
    },
    {
      "src": "return: return [4149,4155]",
      "dest": "return: return [6120,6126]"
    },
    {
      "src": "comment: // registry of locked addresses [33859,33890]",
      "dest": "comment: // registry of locked addresses [40005,40036]"
    },
    {
      "src": "comment: // if no epochs passed, return lock start time [40037,40083]",
      "dest": "comment: // if no epochs passed, return lock start time [46807,46853]"
    },
    {
      "src": "): ) [3324,3325]",
      "dest": "): ) [5295,5296]"
    },
    {
      "src": "parameter [29018,29022]",
      "dest": "parameter [32131,32135]"
    },
    {
      "src": "call_expression [28863,28915]",
      "dest": "call_expression [32458,32497]"
    },
    {
      "src": "identifier: _value [12124,12130]",
      "dest": "identifier: _value [13988,13994]"
    },
    {
      "src": "primitive_type [5258,5265]",
      "dest": "primitive_type [7229,7236]"
    },
    {
      "src": "=: = [41834,41835]",
      "dest": "=: = [48477,48478]"
    },
    {
      "src": "call_expression [21825,21884]",
      "dest": "call_expression [33825,33906]"
    },
    {
      "src": "): ) [37555,37556]",
      "dest": "): ) [44207,44208]"
    },
    {
      "src": "parameter [5269,5278]",
      "dest": "parameter [7240,7249]"
    },
    {
      "src": "type_name [3973,3980]",
      "dest": "type_name [5944,5951]"
    },
    {
      "src": "event: event [9676,9681]",
      "dest": "event: event [11540,11545]"
    },
    {
      "src": "\": \" [30429,30430]",
      "dest": "\": \" [35569,35570]"
    },
    {
      "src": ",: , [4720,4721]",
      "dest": ",: , [6691,6692]"
    },
    {
      "src": "): ) [14478,14479]",
      "dest": "): ) [16342,16343]"
    },
    {
      "src": "): ) [4663,4664]",
      "dest": "): ) [6634,6635]"
    },
    {
      "src": "): ) [31196,31197]",
      "dest": "): ) [19842,19843]"
    },
    {
      "src": "{: { [14851,14852]",
      "dest": "{: { [16715,16716]"
    },
    {
      "src": "member_expression [14110,14135]",
      "dest": "member_expression [15974,15999]"
    },
    {
      "src": "uint256: uint256 [39188,39195]",
      "dest": "uint256: uint256 [45958,45965]"
    },
    {
      "src": "parameter [21027,21043]",
      "dest": "parameter [25471,25485]"
    },
    {
      "src": "call_argument [3351,3352]",
      "dest": "call_argument [5322,5323]"
    },
    {
      "src": "}: } [18691,18692]",
      "dest": "}: } [28210,28211]"
    },
    {
      "src": "call_argument [38772,38786]",
      "dest": "call_argument [45424,45438]"
    },
    {
      "src": "{: { [10366,10367]",
      "dest": "{: { [12230,12231]"
    },
    {
      "src": "member_expression [39715,39732]",
      "dest": "member_expression [46485,46502]"
    },
    {
      "src": "identifier: _to [42080,42083]",
      "dest": "identifier: _to [48620,48623]"
    },
    {
      "src": "uint256: uint256 [12313,12320]",
      "dest": "uint256: uint256 [14177,14184]"
    },
    {
      "src": ",: , [12954,12955]",
      "dest": ",: , [14818,14819]"
    },
    {
      "src": "event_paramater [9735,9748]",
      "dest": "event_paramater [11599,11612]"
    },
    {
      "src": "call_expression [42191,42210]",
      "dest": "call_expression [48731,48750]"
    },
    {
      "src": "identifier: onlyOwner [11245,11254]",
      "dest": "identifier: onlyOwner [13109,13118]"
    },
    {
      "src": "returns: returns [1938,1945]",
      "dest": "returns: returns [3909,3916]"
    },
    {
      "src": "update_expression [12361,12368]",
      "dest": "update_expression [14225,14232]"
    },
    {
      "src": "visibility [15121,15127]",
      "dest": "visibility [16985,16991]"
    },
    {
      "src": "identifier: _value [12211,12217]",
      "dest": "identifier: _value [14075,14081]"
    },
    {
      "src": "uint256: uint256 [8197,8204]",
      "dest": "uint256: uint256 [10107,10114]"
    },
    {
      "src": "type_name [8532,8539]",
      "dest": "type_name [10396,10403]"
    },
    {
      "src": "primitive_type [14432,14439]",
      "dest": "primitive_type [16296,16303]"
    },
    {
      "src": "array_access [34931,34947]",
      "dest": "array_access [43007,43023]"
    },
    {
      "src": "solidity: solidity [98,106]",
      "dest": "solidity: solidity [7396,7404]"
    },
    {
      "src": "primitive_type [3900,3907]",
      "dest": "primitive_type [5871,5878]"
    },
    {
      "src": "): ) [12066,12067]",
      "dest": "): ) [13930,13931]"
    },
    {
      "src": "override_specifier [36122,36130]",
      "dest": "override_specifier [42979,42987]"
    },
    {
      "src": "(: ( [14002,14003]",
      "dest": "(: ( [15866,15867]"
    },
    {
      "src": "(: ( [42422,42423]",
      "dest": "(: ( [49062,49063]"
    },
    {
      "src": "): ) [39910,39911]",
      "dest": "): ) [46680,46681]"
    },
    {
      "src": "string_literal [23622,23642]",
      "dest": "string_literal [36831,36866]"
    },
    {
      "src": "): ) [13770,13771]",
      "dest": "): ) [15634,15635]"
    },
    {
      "src": ",: , [28894,28895]",
      "dest": ",: , [32488,32489]"
    },
    {
      "src": ",: , [28773,28774]",
      "dest": ",: , [32399,32400]"
    },
    {
      "src": "identifier: c [2774,2775]",
      "dest": "identifier: c [4745,4746]"
    },
    {
      "src": "string: string [18016,18022]",
      "dest": "string: string [27314,27320]"
    },
    {
      "src": "bytes32: bytes32 [26137,26144]",
      "dest": "bytes32: bytes32 [23086,23093]"
    },
    {
      "src": "primitive_type [4654,4661]",
      "dest": "primitive_type [6625,6632]"
    },
    {
      "src": "identifier: TOTAL_EPOCHS [37469,37481]",
      "dest": "identifier: TOTAL_EPOCHS [45707,45719]"
    },
    {
      "src": "call_argument [12223,12233]",
      "dest": "call_argument [14087,14097]"
    },
    {
      "src": "inheritance_specifier [33321,33338]",
      "dest": "inheritance_specifier [39467,39484]"
    },
    {
      "src": "{: { [17718,17719]",
      "dest": "{: { [22143,22144]"
    },
    {
      "src": "comment: // The logic governing who is allowed to set what attributes is abstracted as [9302,9379]",
      "dest": "comment: // The logic governing who is allowed to set what attributes is abstracted as [11166,11243]"
    },
    {
      "src": "external: external [6171,6179]",
      "dest": "external: external [8081,8089]"
    },
    {
      "src": "visibility [41690,41696]",
      "dest": "visibility [48364,48370]"
    },
    {
      "src": "expression_statement [34993,35074]",
      "dest": "expression_statement [43158,43185]"
    },
    {
      "src": "string_literal [42250,42271]",
      "dest": "string_literal [48790,48811]"
    },
    {
      "src": "): ) [7718,7719]",
      "dest": "): ) [9628,9629]"
    },
    {
      "src": "modifier_invocation [14281,14290]",
      "dest": "modifier_invocation [16145,16154]"
    },
    {
      "src": "primitive_type [25738,25745]",
      "dest": "primitive_type [27065,27072]"
    },
    {
      "src": "(: ( [39533,39534]",
      "dest": "(: ( [46303,46304]"
    },
    {
      "src": "primitive_type [32434,32441]",
      "dest": "primitive_type [21080,21087]"
    },
    {
      "src": "state_mutability [25651,25655]",
      "dest": "state_mutability [44074,44078]"
    },
    {
      "src": "identifier: _value [34951,34957]",
      "dest": "identifier: _value [43027,43033]"
    },
    {
      "src": "identifier: _value [34859,34865]",
      "dest": "identifier: _value [42236,42242]"
    },
    {
      "src": "[: [ [13042,13043]",
      "dest": "[: [ [14906,14907]"
    },
    {
      "src": "return: return [10377,10383]",
      "dest": "return: return [12241,12247]"
    },
    {
      "src": "(: ( [32351,32352]",
      "dest": "(: ( [20997,20998]"
    },
    {
      "src": "primitive_type [36082,36089]",
      "dest": "primitive_type [42939,42946]"
    },
    {
      "src": "}: } [34506,34507]",
      "dest": "}: } [40736,40737]"
    },
    {
      "src": "identifier: spender [8188,8195]",
      "dest": "identifier: spender [10098,10105]"
    },
    {
      "src": "return: return [22886,22892]",
      "dest": "return: return [33292,33298]"
    },
    {
      "src": "contract: contract [41354,41362]",
      "dest": "contract: contract [48069,48077]"
    },
    {
      "src": "string [34334,34358]",
      "dest": "string [40564,40588]"
    },
    {
      "src": "(: ( [34329,34330]",
      "dest": "(: ( [40559,40560]"
    },
    {
      "src": "identifier: errorMessage [1983,1995]",
      "dest": "identifier: errorMessage [3954,3966]"
    },
    {
      "src": "comment: // File: contracts/trusttokens/TrustToken.sol [40960,41005]",
      "dest": "comment: // &&&&&&&&&&*   ,&&%&&&&&&&&&&&&%.   %&&&&&(   .%&&&&&&&&#   *&&&&&&&&&& [1125,1198]"
    },
    {
      "src": "parameter [6513,6528]",
      "dest": "parameter [8423,8438]"
    },
    {
      "src": "number_literal: 0 [4005,4006]",
      "dest": "number_literal: 0 [5976,5977]"
    },
    {
      "src": "external: external [6530,6538]",
      "dest": "external: external [8440,8448]"
    },
    {
      "src": "function_definition [34769,35136]",
      "dest": "function_definition [42188,42715]"
    },
    {
      "src": "(: ( [42478,42479]",
      "dest": "(: ( [31072,31073]"
    },
    {
      "src": "call_expression [39715,39748]",
      "dest": "call_expression [46485,46518]"
    },
    {
      "src": "override: override [36122,36130]",
      "dest": "override: override [42979,42987]"
    },
    {
      "src": "function_definition [42299,42374]",
      "dest": "function_definition [48930,49014]"
    },
    {
      "src": "(: ( [37498,37499]",
      "dest": "(: ( [45736,45737]"
    },
    {
      "src": "uint256: uint256 [22984,22991]",
      "dest": "uint256: uint256 [33764,33771]"
    },
    {
      "src": "primitive_type [12591,12598]",
      "dest": "primitive_type [14455,14462]"
    },
    {
      "src": "block_statement [14045,14203]",
      "dest": "block_statement [15909,16067]"
    },
    {
      "src": "primitive_type [5724,5731]",
      "dest": "primitive_type [7634,7641]"
    },
    {
      "src": "(: ( [5839,5840]",
      "dest": "(: ( [7749,7750]"
    },
    {
      "src": "{: { [13931,13932]",
      "dest": "{: { [15795,15796]"
    },
    {
      "src": "identifier: value [20161,20166]",
      "dest": "identifier: value [30799,30804]"
    },
    {
      "src": "type_name [9231,9284]",
      "dest": "type_name [11095,11148]"
    },
    {
      "src": "primitive_type [4643,4650]",
      "dest": "primitive_type [6614,6621]"
    },
    {
      "src": "type_name [13354,13361]",
      "dest": "type_name [15218,15225]"
    },
    {
      "src": "indexed: indexed [31180,31187]",
      "dest": "indexed: indexed [19826,19833]"
    },
    {
      "src": "<: < [11533,11534]",
      "dest": "<: < [13397,13398]"
    },
    {
      "src": "identifier: owner_ [32352,32358]",
      "dest": "identifier: owner_ [20998,21004]"
    },
    {
      "src": "identifier: TOTAL_EPOCHS [38873,38885]",
      "dest": "identifier: TOTAL_EPOCHS [45525,45537]"
    },
    {
      "src": "parameter [3317,3324]",
      "dest": "parameter [5288,5295]"
    },
    {
      "src": "return_type_definition [3308,3325]",
      "dest": "return_type_definition [5279,5296]"
    },
    {
      "src": ",: , [5278,5279]",
      "dest": ",: , [7249,7250]"
    },
    {
      "src": "state_mutability [41892,41896]",
      "dest": "state_mutability [21818,21822]"
    },
    {
      "src": "return_statement [2037,2046]",
      "dest": "return_statement [4008,4017]"
    },
    {
      "src": "type_name [42340,42345]",
      "dest": "type_name [48980,48985]"
    },
    {
      "src": "function: function [1422,1430]",
      "dest": "function: function [3393,3401]"
    },
    {
      "src": "identifier: owner_ [32385,32391]",
      "dest": "identifier: owner_ [21031,21037]"
    },
    {
      "src": ",: , [11138,11139]",
      "dest": ",: , [13002,13003]"
    },
    {
      "src": "(: ( [40022,40023]",
      "dest": "(: ( [46792,46793]"
    },
    {
      "src": "mapping: mapping [9530,9537]",
      "dest": "mapping: mapping [11394,11401]"
    },
    {
      "src": "call_expression [40010,40024]",
      "dest": "call_expression [46780,46794]"
    },
    {
      "src": "}: } [1557,1558]",
      "dest": "}: } [3528,3529]"
    },
    {
      "src": "(: ( [10584,10585]",
      "dest": "(: ( [12448,12449]"
    },
    {
      "src": "=>: => [15900,15902]",
      "dest": "=>: => [17711,17713]"
    },
    {
      "src": "memory: memory [1903,1909]",
      "dest": "memory: memory [3874,3880]"
    },
    {
      "src": "uint256: uint256 [5880,5887]",
      "dest": "uint256: uint256 [7790,7797]"
    },
    {
      "src": "\": \" [19425,19426]",
      "dest": "\": \" [37703,37704]"
    },
    {
      "src": "parameter [4654,4663]",
      "dest": "parameter [6625,6634]"
    },
    {
      "src": "uint256: uint256 [4688,4695]",
      "dest": "uint256: uint256 [6659,6666]"
    },
    {
      "src": "): ) [23642,23643]",
      "dest": "): ) [36866,36867]"
    },
    {
      "src": "{: { [29780,29781]",
      "dest": "{: { [36789,36790]"
    },
    {
      "src": "comment: /**      * @dev Modifier throws if called by any account other than the pendingOwner.      */ [14722,14817]",
      "dest": "comment: /**      * @dev Modifier throws if called by any account other than the pendingOwner.      */ [16586,16681]"
    },
    {
      "src": "identifier: attributes [10768,10778]",
      "dest": "identifier: attributes [12632,12642]"
    },
    {
      "src": ",: , [10890,10891]",
      "dest": ",: , [12754,12755]"
    },
    {
      "src": "): ) [30171,30172]",
      "dest": "): ) [36383,36384]"
    },
    {
      "src": "identifier: timestamp [12154,12163]",
      "dest": "identifier: timestamp [14018,14027]"
    },
    {
      "src": "call_argument [29971,30007]",
      "dest": "call_argument [36994,37030]"
    },
    {
      "src": "call_argument [11587,11618]",
      "dest": "call_argument [13451,13482]"
    },
    {
      "src": "primitive_type [28806,28813]",
      "dest": "primitive_type [32401,32408]"
    },
    {
      "src": "parameter [10360,10364]",
      "dest": "parameter [12224,12228]"
    },
    {
      "src": "): ) [31065,31066]",
      "dest": "): ) [19711,19712]"
    },
    {
      "src": "call_expression [37469,37501]",
      "dest": "call_expression [45707,45739]"
    },
    {
      "src": "uint256: uint256 [39933,39940]",
      "dest": "uint256: uint256 [46703,46710]"
    },
    {
      "src": "identifier: div [3268,3271]",
      "dest": "identifier: div [5239,5242]"
    },
    {
      "src": "identifier: passed [40334,40340]",
      "dest": "identifier: passed [47104,47110]"
    },
    {
      "src": "type_name [42072,42079]",
      "dest": "type_name [48612,48619]"
    },
    {
      "src": "primitive_type [41419,41426]",
      "dest": "primitive_type [48134,48141]"
    },
    {
      "src": "identifier: balanceOf [5830,5839]",
      "dest": "identifier: balanceOf [7740,7749]"
    },
    {
      "src": "): ) [31631,31632]",
      "dest": "): ) [20277,20278]"
    },
    {
      "src": "\": \" [19257,19258]",
      "dest": "\": \" [35408,35409]"
    },
    {
      "src": "primitive_type [42340,42345]",
      "dest": "primitive_type [48980,48985]"
    },
    {
      "src": "pragma: pragma [91,97]",
      "dest": "pragma: pragma [7389,7395]"
    },
    {
      "src": "(: ( [10732,10733]",
      "dest": "(: ( [12596,12597]"
    },
    {
      "src": "identifier: distribution [33467,33479]",
      "dest": "identifier: distribution [39613,39625]"
    },
    {
      "src": "storage: storage [10960,10967]",
      "dest": "storage: storage [12824,12831]"
    },
    {
      "src": "binary_expression [11688,11698]",
      "dest": "binary_expression [13552,13562]"
    },
    {
      "src": "internal: internal [22051,22059]",
      "dest": "internal: internal [27014,27022]"
    },
    {
      "src": "indexed: indexed [9621,9628]",
      "dest": "indexed: indexed [11485,11492]"
    },
    {
      "src": "): ) [12233,12234]",
      "dest": "): ) [14097,14098]"
    },
    {
      "src": "identifier: onlyPendingOwner [31770,31786]",
      "dest": "identifier: onlyPendingOwner [20416,20432]"
    },
    {
      "src": "identifier: SetAttribute [12180,12192]",
      "dest": "identifier: SetAttribute [14044,14056]"
    },
    {
      "src": "=: = [32102,32103]",
      "dest": "=: = [20748,20749]"
    },
    {
      "src": "(: ( [12888,12889]",
      "dest": "(: ( [14752,14753]"
    },
    {
      "src": "comment: // lockStart + firstEpochDelay + (epochDuration * totalEpochs) [40581,40643]",
      "dest": "comment: // lockStart + firstEpochDelay + (epochDuration * totalEpochs) [47351,47413]"
    },
    {
      "src": "emit_statement [29791,29832]",
      "dest": "emit_statement [37090,37133]"
    },
    {
      "src": "event_paramater [8149,8170]",
      "dest": "event_paramater [10059,10080]"
    },
    {
      "src": "assignment_expression [34461,34499]",
      "dest": "assignment_expression [40691,40729]"
    },
    {
      "src": "view: view [13218,13222]",
      "dest": "view: view [15082,15086]"
    },
    {
      "src": "type_name [14389,14396]",
      "dest": "type_name [16253,16260]"
    },
    {
      "src": "type_name [34805,34812]",
      "dest": "type_name [42213,42220]"
    },
    {
      "src": ",: , [13694,13695]",
      "dest": ",: , [15558,15559]"
    },
    {
      "src": "identifier: RegistryClone [9928,9941]",
      "dest": "identifier: RegistryClone [11792,11805]"
    },
    {
      "src": "primitive_type [13177,13184]",
      "dest": "primitive_type [15041,15048]"
    },
    {
      "src": "identifier: b [4722,4723]",
      "dest": "identifier: b [6693,6694]"
    },
    {
      "src": "solidity_pragma_token [41016,41031]",
      "dest": "solidity_pragma_token [28992,29007]"
    },
    {
      "src": "(: ( [31575,31576]",
      "dest": "(: ( [20221,20222]"
    },
    {
      "src": "): ) [21883,21884]",
      "dest": "): ) [33905,33906]"
    },
    {
      "src": ".: . [40306,40307]",
      "dest": ".: . [47076,47077]"
    },
    {
      "src": "): ) [1487,1488]",
      "dest": "): ) [3458,3459]"
    },
    {
      "src": "expression_statement [19214,19277]",
      "dest": "expression_statement [35375,35447]"
    },
    {
      "src": "primitive_type [27703,27710]",
      "dest": "primitive_type [30306,30313]"
    },
    {
      "src": "(: ( [13506,13507]",
      "dest": "(: ( [15370,15371]"
    },
    {
      "src": "array_access [13032,13060]",
      "dest": "array_access [14896,14924]"
    },
    {
      "src": "primitive_type [9239,9246]",
      "dest": "primitive_type [11103,11110]"
    },
    {
      "src": "function: function [41650,41658]",
      "dest": "function: function [48342,48350]"
    },
    {
      "src": "address: address [36082,36089]",
      "dest": "address: address [42939,42946]"
    },
    {
      "src": "contract: contract [19883,19891]",
      "dest": "contract: contract [30208,30216]"
    },
    {
      "src": "=>: => [15778,15780]",
      "dest": "=>: => [17589,17591]"
    },
    {
      "src": "state_variable_declaration [8687,8715]",
      "dest": "state_variable_declaration [10551,10579]"
    },
    {
      "src": "identifier: transfer [14306,14314]",
      "dest": "identifier: transfer [16170,16178]"
    },
    {
      "src": "call_argument [14870,14896]",
      "dest": "call_argument [16734,16760]"
    },
    {
      "src": "modifier_invocation [11245,11254]",
      "dest": "modifier_invocation [13109,13118]"
    },
    {
      "src": "number_literal: 0 [2620,2621]",
      "dest": "number_literal: 0 [4591,4592]"
    },
    {
      "src": "}: } [13141,13142]",
      "dest": "}: } [15005,15006]"
    },
    {
      "src": "return: return [39708,39714]",
      "dest": "return: return [46478,46484]"
    },
    {
      "src": "array_access [12656,12684]",
      "dest": "array_access [14520,14548]"
    },
    {
      "src": "): ) [10483,10484]",
      "dest": "): ) [12347,12348]"
    },
    {
      "src": "primitive_type [5880,5887]",
      "dest": "primitive_type [7790,7797]"
    },
    {
      "src": "expression_statement [41793,41813]",
      "dest": "expression_statement [48436,48456]"
    },
    {
      "src": "string_literal [36881,36903]",
      "dest": "string_literal [43649,43671]"
    },
    {
      "src": "identifier: _index [11654,11660]",
      "dest": "identifier: _index [13518,13524]"
    },
    {
      "src": "\": \" [23622,23623]",
      "dest": "\": \" [36831,36832]"
    },
    {
      "src": "contract_body [33339,40956]",
      "dest": "contract_body [39485,47726]"
    },
    {
      "src": "solidity_version_comparison_operator [5494,5496]",
      "dest": "solidity_version_comparison_operator [2077,2079]"
    },
    {
      "src": "}: } [42456,42457]",
      "dest": "}: } [49096,49097]"
    },
    {
      "src": "function_definition [42382,42457]",
      "dest": "function_definition [49022,49097]"
    },
    {
      "src": "identifier: MAX_SUPPLY [42164,42174]",
      "dest": "identifier: MAX_SUPPLY [48704,48714]"
    },
    {
      "src": "primitive_type [15892,15899]",
      "dest": "primitive_type [17703,17710]"
    },
    {
      "src": "parameter [28575,28591]",
      "dest": "parameter [32072,32089]"
    },
    {
      "src": "visibility [42581,42587]",
      "dest": "visibility [30894,30900]"
    },
    {
      "src": "state_variable_declaration [33568,33609]",
      "dest": "state_variable_declaration [39714,39755]"
    },
    {
      "src": "internal: internal [34873,34881]",
      "dest": "internal: internal [42244,42252]"
    },
    {
      "src": "{: { [31067,31068]",
      "dest": "{: { [19713,19714]"
    },
    {
      "src": "call_argument [14136,14139]",
      "dest": "call_argument [16000,16003]"
    },
    {
      "src": "event_paramater [7954,7967]",
      "dest": "event_paramater [9864,9877]"
    },
    {
      "src": "function_definition [30062,30563]",
      "dest": "function_definition [36016,36392]"
    },
    {
      "src": "primitive_type [13232,13239]",
      "dest": "primitive_type [15096,15103]"
    },
    {
      "src": "primitive_type [1885,1892]",
      "dest": "primitive_type [3856,3863]"
    },
    {
      "src": "identifier: pendingOwner [14884,14896]",
      "dest": "identifier: pendingOwner [16748,16760]"
    },
    {
      "src": "identifier: value [13084,13089]",
      "dest": "identifier: value [14948,14953]"
    },
    {
      "src": "identifier: TimeLockedToken [41377,41392]",
      "dest": "identifier: TimeLockedToken [48092,48107]"
    },
    {
      "src": "primitive_type [39993,40000]",
      "dest": "primitive_type [46763,46770]"
    },
    {
      "src": "=: = [11662,11663]",
      "dest": "=: = [13526,13527]"
    },
    {
      "src": "identifier: adminAddr [13108,13117]",
      "dest": "identifier: adminAddr [14972,14981]"
    },
    {
      "src": "\": \" [30006,30007]",
      "dest": "\": \" [37029,37030]"
    },
    {
      "src": "[: [ [12672,12673]",
      "dest": "[: [ [14536,14537]"
    },
    {
      "src": "identifier: _value [35833,35839]",
      "dest": "identifier: _value [41962,41968]"
    },
    {
      "src": "identifier: subscribers [11266,11277]",
      "dest": "identifier: subscribers [13130,13141]"
    },
    {
      "src": "=: = [15439,15440]",
      "dest": "=: = [17303,17304]"
    },
    {
      "src": "primitive_type [33819,33826]",
      "dest": "primitive_type [39965,39972]"
    },
    {
      "src": "\": \" [36902,36903]",
      "dest": "\": \" [43670,43671]"
    },
    {
      "src": ",: , [1515,1516]",
      "dest": ",: , [3486,3487]"
    },
    {
      "src": ",: , [37143,37144]",
      "dest": ",: , [43857,43858]"
    },
    {
      "src": "if: if [38521,38523]",
      "dest": "if: if [45173,45175]"
    },
    {
      "src": "identifier: i [14034,14035]",
      "dest": "identifier: i [15898,15899]"
    },
    {
      "src": "function: function [32015,32023]",
      "dest": "function: function [20661,20669]"
    },
    {
      "src": "identifier: super [35086,35091]",
      "dest": "identifier: super [42669,42674]"
    },
    {
      "src": "identifier: length [11535,11541]",
      "dest": "identifier: length [13399,13405]"
    },
    {
      "src": "member_expression [36321,36332]",
      "dest": "member_expression [43158,43169]"
    },
    {
      "src": "!=: != [12691,12693]",
      "dest": "!=: != [14555,14557]"
    },
    {
      "src": "identifier: token [14450,14455]",
      "dest": "identifier: token [16314,16319]"
    },
    {
      "src": "identifier: WRITE_PERMISSION [10452,10468]",
      "dest": "identifier: WRITE_PERMISSION [12316,12332]"
    },
    {
      "src": "return: return [13582,13588]",
      "dest": "return: return [15446,15452]"
    },
    {
      "src": "(: ( [11920,11921]",
      "dest": "(: ( [13784,13785]"
    },
    {
      "src": "assignment_expression [41823,41840]",
      "dest": "assignment_expression [48466,48483]"
    },
    {
      "src": "primitive_type [33365,33372]",
      "dest": "primitive_type [39511,39518]"
    },
    {
      "src": "type_name [971,978]",
      "dest": "type_name [2942,2949]"
    },
    {
      "src": "comment: // lockStart + firstEpochDelay + (epochsPassed * epochDuration) [40216,40279]",
      "dest": "comment: // lockStart + firstEpochDelay + (epochsPassed * epochDuration) [46986,47049]"
    },
    {
      "src": "event_paramater [9644,9668]",
      "dest": "event_paramater [11508,11532]"
    },
    {
      "src": "member_expression [13103,13117]",
      "dest": "member_expression [14967,14981]"
    },
    {
      "src": "call_argument [42197,42200]",
      "dest": "call_argument [48737,48740]"
    },
    {
      "src": ".: . [14116,14117]",
      "dest": ".: . [15980,15981]"
    },
    {
      "src": "comment: /**      * @dev Increase the amount of tokens that an owner allowed to a spender.      *      * approve should be called when allowed[_spender] == 0. To increment      * allowed value is better to use this function to avoid 2 calls (and wait until      * the first transaction is mined)      * From MonolithDAO Token.sol      * @param _spender The address which will spend the funds.      * @param _addedValue The amount of tokens to increase the allowance by.      */ [21244,21721]",
      "dest": "comment: /**      * @dev Emitted when the allowance of a `spender` for an `owner` is set by      * a call to {approve}. `value` is the new allowance.      */ [30571,30722]"
    },
    {
      "src": "identifier: require [34923,34930]",
      "dest": "identifier: require [42999,43006]"
    },
    {
      "src": "external: external [11236,11244]",
      "dest": "external: external [13100,13108]"
    },
    {
      "src": "identifier: c [1130,1131]",
      "dest": "identifier: c [3101,3102]"
    },
    {
      "src": ",: , [36879,36880]",
      "dest": ",: , [43647,43648]"
    },
    {
      "src": "identifier: token [14491,14496]",
      "dest": "identifier: token [16355,16360]"
    },
    {
      "src": "{: { [14045,14046]",
      "dest": "{: { [15909,15910]"
    },
    {
      "src": "(: ( [31596,31597]",
      "dest": "(: ( [20242,20243]"
    },
    {
      "src": "type_name [8361,8368]",
      "dest": "type_name [10225,10232]"
    },
    {
      "src": "): ) [5887,5888]",
      "dest": "): ) [7797,7798]"
    },
    {
      "src": "{: { [8316,8317]",
      "dest": "{: { [10180,10181]"
    },
    {
      "src": "(: ( [37920,37921]",
      "dest": "(: ( [44572,44573]"
    },
    {
      "src": "function_body [34912,35136]",
      "dest": "function_body [42988,43192]"
    },
    {
      "src": "identifier: sender [25728,25734]",
      "dest": "identifier: sender [21767,21773]"
    },
    {
      "src": "identifier: _attribute [11722,11732]",
      "dest": "identifier: _attribute [13586,13596]"
    },
    {
      "src": "identifier: totalSupply [15742,15753]",
      "dest": "identifier: totalSupply [17553,17564]"
    },
    {
      "src": "uint256: uint256 [40561,40568]",
      "dest": "uint256: uint256 [47331,47338]"
    },
    {
      "src": "comment: // File: contracts/trusttokens/TimeLockedToken.sol [32459,32509]",
      "dest": "comment: // &&&&&&&&&#    &&&&&&&&&&&&&&&&%.   %&&&&&&.   #&&&&&&&&#   *&&&&&&&&&& [1050,1123]"
    },
    {
      "src": "return_type_definition [37365,37382]",
      "dest": "return_type_definition [45671,45688]"
    },
    {
      "src": "address: address [36765,36772]",
      "dest": "address: address [43533,43540]"
    },
    {
      "src": ".: . [40329,40330]",
      "dest": ".: . [47099,47100]"
    },
    {
      "src": "type_name [36097,36104]",
      "dest": "type_name [42954,42961]"
    },
    {
      "src": "): ) [9564,9565]",
      "dest": "): ) [11428,11429]"
    },
    {
      "src": "identifier: data [13119,13123]",
      "dest": "identifier: data [14983,14987]"
    },
    {
      "src": "=: = [2017,2018]",
      "dest": "=: = [3988,3989]"
    },
    {
      "src": "call_argument [40345,40359]",
      "dest": "call_argument [47115,47129]"
    },
    {
      "src": "identifier: adminAddr [8564,8573]",
      "dest": "identifier: adminAddr [10428,10437]"
    },
    {
      "src": "emit: emit [15338,15342]",
      "dest": "emit: emit [17202,17206]"
    },
    {
      "src": "contract_body [19934,24195]",
      "dest": "contract_body [30248,38672]"
    },
    {
      "src": "block_statement [42176,42222]",
      "dest": "block_statement [48716,48762]"
    },
    {
      "src": "): ) [19061,19062]",
      "dest": "): ) [30561,30562]"
    },
    {
      "src": "binary_expression [35709,35741]",
      "dest": "binary_expression [41851,41883]"
    },
    {
      "src": "true [28933,28937]",
      "dest": "true [32515,32519]"
    },
    {
      "src": "address: address [15957,15964]",
      "dest": "address: address [17768,17775]"
    },
    {
      "src": "constant: constant [33827,33835]",
      "dest": "constant: constant [39973,39981]"
    },
    {
      "src": "call_argument [10841,10856]",
      "dest": "call_argument [12705,12720]"
    },
    {
      "src": "true: true [20972,20976]",
      "dest": "true: true [34694,34698]"
    },
    {
      "src": "identifier: onlyOwner [15128,15137]",
      "dest": "identifier: onlyOwner [16992,17001]"
    },
    {
      "src": "identifier: spender [7256,7263]",
      "dest": "identifier: spender [9166,9173]"
    },
    {
      "src": "type_name [1480,1487]",
      "dest": "type_name [3451,3458]"
    },
    {
      "src": "(: ( [31140,31141]",
      "dest": "(: ( [19786,19787]"
    },
    {
      "src": "]: ] [10958,10959]",
      "dest": "]: ] [12822,12823]"
    },
    {
      "src": "public: public [37353,37359]",
      "dest": "public: public [45659,45665]"
    },
    {
      "src": "identifier: RegistryClone [10944,10957]",
      "dest": "identifier: RegistryClone [12808,12821]"
    },
    {
      "src": "(: ( [12806,12807]",
      "dest": "(: ( [14670,14671]"
    },
    {
      "src": "identifier: pendingOwner [8702,8714]",
      "dest": "identifier: pendingOwner [10566,10578]"
    },
    {
      "src": "string [28405,28424]",
      "dest": "string [37784,37820]"
    },
    {
      "src": "(: ( [31440,31441]",
      "dest": "(: ( [20086,20087]"
    },
    {
      "src": "return_statement [2638,2647]",
      "dest": "return_statement [4609,4618]"
    },
    {
      "src": "primitive_type [2007,2014]",
      "dest": "primitive_type [3978,3985]"
    },
    {
      "src": "function_body [36829,37170]",
      "dest": "function_body [43597,43884]"
    },
    {
      "src": "type_name [9549,9564]",
      "dest": "type_name [11413,11428]"
    },
    {
      "src": "contract_body [41393,42651]",
      "dest": "contract_body [48108,49309]"
    },
    {
      "src": "(: ( [13176,13177]",
      "dest": "(: ( [15040,15041]"
    },
    {
      "src": "): ) [8210,8211]",
      "dest": "): ) [10120,10121]"
    },
    {
      "src": "function: function [29661,29669]",
      "dest": "function: function [36724,36732]"
    },
    {
      "src": "identifier: data [13091,13095]",
      "dest": "identifier: data [14955,14959]"
    },
    {
      "src": "uint256: uint256 [3900,3907]",
      "dest": "uint256: uint256 [5871,5878]"
    },
    {
      "src": "parameter [4643,4652]",
      "dest": "parameter [6614,6623]"
    },
    {
      "src": "returns: returns [37821,37828]",
      "dest": "returns: returns [44473,44480]"
    },
    {
      "src": "using: using [19941,19946]",
      "dest": "using: using [30255,30260]"
    },
    {
      "src": "pure: pure [1933,1937]",
      "dest": "pure: pure [3904,3908]"
    },
    {
      "src": "expression_statement [34370,34451]",
      "dest": "expression_statement [40600,40681]"
    },
    {
      "src": "identifier: reclaimEther [14238,14250]",
      "dest": "identifier: reclaimEther [16102,16114]"
    },
    {
      "src": "\": \" [35667,35668]",
      "dest": "\": \" [41555,41556]"
    },
    {
      "src": "bool: bool [10360,10364]",
      "dest": "bool: bool [12224,12228]"
    },
    {
      "src": "member_expression [33987,33997]",
      "dest": "member_expression [40217,40227]"
    },
    {
      "src": "expression_statement [29931,30009]",
      "dest": "expression_statement [37042,37080]"
    },
    {
      "src": "=: = [11026,11027]",
      "dest": "=: = [12890,12891]"
    },
    {
      "src": "}: } [37169,37170]",
      "dest": "}: } [43883,43884]"
    },
    {
      "src": "member_expression [38734,38748]",
      "dest": "member_expression [45386,45400]"
    },
    {
      "src": "string [41729,41749]",
      "dest": "string [48403,48424]"
    },
    {
      "src": "): ) [30157,30158]",
      "dest": "): ) [36365,36366]"
    },
    {
      "src": "bytes32: bytes32 [10672,10679]",
      "dest": "bytes32: bytes32 [12536,12543]"
    },
    {
      "src": "]: ] [13449,13450]",
      "dest": "]: ] [15313,15314]"
    },
    {
      "src": "address: address [12947,12954]",
      "dest": "address: address [14811,14818]"
    },
    {
      "src": "string [36952,36978]",
      "dest": "string [36123,36156]"
    },
    {
      "src": "primitive_type [15978,15985]",
      "dest": "primitive_type [17789,17796]"
    },
    {
      "src": "variable_declaration [14003,14012]",
      "dest": "variable_declaration [15867,15876]"
    },
    {
      "src": "memory: memory [18248,18254]",
      "dest": "memory: memory [26993,26999]"
    },
    {
      "src": "(: ( [42501,42502]",
      "dest": "(: ( [31103,31104]"
    },
    {
      "src": "type_name [14375,14381]",
      "dest": "type_name [16239,16245]"
    },
    {
      "src": "identifier: block [38384,38389]",
      "dest": "identifier: block [45036,45041]"
    },
    {
      "src": "parameter [11780,11798]",
      "dest": "parameter [13644,13662]"
    },
    {
      "src": "while_statement [13901,14214]",
      "dest": "while_statement [15765,16078]"
    },
    {
      "src": "): ) [10856,10857]",
      "dest": "): ) [12720,12721]"
    },
    {
      "src": "comment: // if no epochs passed, return latest epoch + delay + standard duration [39449,39520]",
      "dest": "comment: // if no epochs passed, return latest epoch + delay + standard duration [46219,46290]"
    },
    {
      "src": "identifier: _value [29627,29633]",
      "dest": "identifier: _value [42604,42610]"
    },
    {
      "src": "type_name [9735,9742]",
      "dest": "type_name [11599,11606]"
    },
    {
      "src": "type_name [42502,42508]",
      "dest": "type_name [31104,31110]"
    },
    {
      "src": "address: address [30077,30084]",
      "dest": "address: address [36031,36038]"
    },
    {
      "src": "number_literal: 8 [42365,42366]",
      "dest": "number_literal: 8 [49005,49006]"
    },
    {
      "src": "type_name [36082,36089]",
      "dest": "type_name [42939,42946]"
    },
    {
      "src": "function_definition [28953,29106]",
      "dest": "function_definition [48839,48922]"
    },
    {
      "src": "): ) [15859,15860]",
      "dest": "): ) [17670,17671]"
    },
    {
      "src": "uint256: uint256 [33568,33575]",
      "dest": "uint256: uint256 [39714,39721]"
    },
    {
      "src": "(: ( [42578,42579]",
      "dest": "(: ( [30891,30892]"
    },
    {
      "src": "identifier: keccak256 [10425,10434]",
      "dest": "identifier: keccak256 [12289,12298]"
    },
    {
      "src": "call_argument [29052,29062]",
      "dest": "call_argument [48895,48905]"
    },
    {
      "src": "(: ( [11779,11780]",
      "dest": "(: ( [13643,13644]"
    },
    {
      "src": "identifier: _from [29805,29810]",
      "dest": "identifier: account [37104,37111]"
    },
    {
      "src": "call_argument [4722,4723]",
      "dest": "call_argument [6693,6694]"
    },
    {
      "src": "binary_expression [4001,4006]",
      "dest": "binary_expression [5972,5977]"
    },
    {
      "src": "expression_statement [14862,14898]",
      "dest": "expression_statement [16726,16762]"
    },
    {
      "src": "(: ( [37934,37935]",
      "dest": "(: ( [44586,44587]"
    },
    {
      "src": "return_statement [40125,40143]",
      "dest": "return_statement [46895,46913]"
    },
    {
      "src": ",: , [3352,3353]",
      "dest": ",: , [5323,5324]"
    },
    {
      "src": "type_name [21027,21034]",
      "dest": "type_name [25471,25478]"
    },
    {
      "src": "): ) [38414,38415]",
      "dest": "): ) [45066,45067]"
    },
    {
      "src": "identifier: SetManager [9804,9814]",
      "dest": "identifier: SetManager [11668,11678]"
    },
    {
      "src": "\": \" [34419,34420]",
      "dest": "\": \" [40649,40650]"
    },
    {
      "src": "returns: returns [39924,39931]",
      "dest": "returns: returns [46694,46701]"
    },
    {
      "src": "identifier: ModularBasicToken [19916,19933]",
      "dest": "identifier: Context [30240,30247]"
    },
    {
      "src": "}: } [40952,40953]",
      "dest": "}: } [47722,47723]"
    },
    {
      "src": "identifier: attributes [12079,12089]",
      "dest": "identifier: attributes [13943,13953]"
    },
    {
      "src": "uint256: uint256 [3317,3324]",
      "dest": "uint256: uint256 [5288,5295]"
    },
    {
      "src": "function_definition [14353,14527]",
      "dest": "function_definition [16217,16391]"
    },
    {
      "src": "uint256: uint256 [2370,2377]",
      "dest": "uint256: uint256 [4341,4348]"
    },
    {
      "src": "\": \" [1080,1081]",
      "dest": "\": \" [3051,3052]"
    },
    {
      "src": "(: ( [5723,5724]",
      "dest": "(: ( [7633,7634]"
    },
    {
      "src": "(: ( [41669,41670]",
      "dest": "(: ( [48361,48362]"
    },
    {
      "src": "parameter [1435,1444]",
      "dest": "parameter [3406,3415]"
    },
    {
      "src": "type_name [1435,1442]",
      "dest": "type_name [3406,3413]"
    },
    {
      "src": "solidity_version:  0.6.10 [30641,30648]",
      "dest": "solidity_version:  0.6.10 [17345,17352]"
    },
    {
      "src": "identifier: _syncer [11349,11356]",
      "dest": "identifier: _syncer [13213,13220]"
    },
    {
      "src": "==: == [31608,31610]",
      "dest": "==: == [20254,20256]"
    },
    {
      "src": "identifier: totalSupply [30405,30416]",
      "dest": "identifier: totalSupply [36246,36257]"
    },
    {
      "src": "type_name [1896,1902]",
      "dest": "type_name [3867,3873]"
    },
    {
      "src": "primitive_type [7714,7718]",
      "dest": "primitive_type [9624,9628]"
    },
    {
      "src": "contract: contract [15676,15684]",
      "dest": "contract: contract [17487,17495]"
    },
    {
      "src": "identifier: a [3908,3909]",
      "dest": "identifier: a [5879,5880]"
    },
    {
      "src": "(: ( [38109,38110]",
      "dest": "(: ( [44761,44762]"
    },
    {
      "src": "identifier: timestamp [38222,38231]",
      "dest": "identifier: timestamp [44874,44883]"
    },
    {
      "src": "call_expression [5351,5380]",
      "dest": "call_expression [7322,7351]"
    },
    {
      "src": "type_name [9613,9620]",
      "dest": "type_name [11477,11484]"
    },
    {
      "src": "identifier: require [34370,34377]",
      "dest": "identifier: require [40600,40607]"
    },
    {
      "src": "): ) [1954,1955]",
      "dest": "): ) [3925,3926]"
    },
    {
      "src": "type_name [29018,29022]",
      "dest": "type_name [32131,32135]"
    },
    {
      "src": "primitive_type [9901,9908]",
      "dest": "primitive_type [11765,11772]"
    },
    {
      "src": "parameter [3973,3980]",
      "dest": "parameter [5944,5951]"
    },
    {
      "src": "pure: pure [5317,5321]",
      "dest": "pure: pure [7288,7292]"
    },
    {
      "src": "return_type_definition [31049,31066]",
      "dest": "return_type_definition [19695,19712]"
    },
    {
      "src": "parameter [38133,38140]",
      "dest": "parameter [44785,44792]"
    },
    {
      "src": "type_name [13562,13569]",
      "dest": "type_name [15426,15433]"
    },
    {
      "src": "variable_declaration [30217,30227]",
      "dest": "variable_declaration [27532,27555]"
    },
    {
      "src": "function_definition [29661,30054]",
      "dest": "function_definition [36724,37140]"
    },
    {
      "src": "primitive_type [10647,10654]",
      "dest": "primitive_type [12511,12518]"
    },
    {
      "src": "identifier: require [11518,11525]",
      "dest": "identifier: require [13382,13389]"
    },
    {
      "src": "uint256: uint256 [8413,8420]",
      "dest": "uint256: uint256 [10277,10284]"
    },
    {
      "src": "identifier: index [11020,11025]",
      "dest": "identifier: index [12884,12889]"
    },
    {
      "src": "identifier: b [2023,2024]",
      "dest": "identifier: b [3994,3995]"
    },
    {
      "src": "identifier: recipient [7669,7678]",
      "dest": "identifier: recipient [9579,9588]"
    },
    {
      "src": ",: , [2716,2717]",
      "dest": ",: , [4687,4688]"
    },
    {
      "src": "expression_statement [32385,32408]",
      "dest": "expression_statement [21031,21054]"
    },
    {
      "src": "parameter [1016,1023]",
      "dest": "parameter [2987,2994]"
    },
    {
      "src": "return_type_definition [7290,7304]",
      "dest": "return_type_definition [9200,9214]"
    },
    {
      "src": "identifier: balance [14511,14518]",
      "dest": "identifier: balance [16375,16382]"
    },
    {
      "src": "type_name [39933,39940]",
      "dest": "type_name [46703,46710]"
    },
    {
      "src": "primitive_type [19963,19970]",
      "dest": "primitive_type [30274,30281]"
    },
    {
      "src": "number_literal: 0 [38579,38580]",
      "dest": "number_literal: 0 [45231,45232]"
    },
    {
      "src": "(: ( [9694,9695]",
      "dest": "(: ( [11558,11559]"
    },
    {
      "src": "identifier: distribution [36923,36935]",
      "dest": "identifier: distribution [43756,43768]"
    },
    {
      "src": "(: ( [39580,39581]",
      "dest": "(: ( [46350,46351]"
    },
    {
      "src": "identifier: allowance [6488,6497]",
      "dest": "identifier: allowance [8398,8407]"
    },
    {
      "src": "identifier: getAttributeAdminAddr [13318,13339]",
      "dest": "identifier: getAttributeAdminAddr [15182,15203]"
    },
    {
      "src": "return_type_definition [2361,2378]",
      "dest": "return_type_definition [4332,4349]"
    },
    {
      "src": "returns: returns [13553,13560]",
      "dest": "returns: returns [15417,15424]"
    },
    {
      "src": "boolean_literal [20972,20976]",
      "dest": "boolean_literal [34694,34698]"
    },
    {
      "src": "function_definition [40518,40739]",
      "dest": "function_definition [47288,47509]"
    },
    {
      "src": "binary_expression [38853,38885]",
      "dest": "binary_expression [45505,45537]"
    },
    {
      "src": "type_name [23715,23722]",
      "dest": "type_name [34466,34473]"
    },
    {
      "src": "\": \" [4750,4751]",
      "dest": "\": \" [6721,6722]"
    },
    {
      "src": ",: , [14151,14152]",
      "dest": ",: , [16015,16016]"
    },
    {
      "src": "comment: /**  * @title TrustToken  * @dev The TrustToken contract is a claimable contract where the  * owner can only mint or transfer ownership. TrustTokens use 8 decimals  * in order to prevent rewards from getting stuck in the remainder on division.  * Tolerates dilution to slash stake and accept rewards.  */ [41042,41352]",
      "dest": "comment: /**  * @title TrustToken  * @dev The TrustToken contract is a claimable contract where the  * owner can only mint or transfer ownership. TrustTokens use 8 decimals  * in order to prevent rewards from getting stuck in the remainder on division.  * Tolerates dilution to slash stake and accept rewards.  */ [47757,48067]"
    },
    {
      "src": "type_name [35553,35560]",
      "dest": "type_name [41468,41475]"
    },
    {
      "src": "using: using [41400,41405]",
      "dest": "using: using [48115,48120]"
    },
    {
      "src": "comment: /**      * @dev Throws if called by any account other than the owner.      */ [14535,14614]",
      "dest": "comment: /**      * @dev Throws if called by any account other than the owner.      */ [16399,16478]"
    },
    {
      "src": "identifier: _to [28891,28894]",
      "dest": "identifier: amount [32490,32496]"
    },
    {
      "src": "identifier: a [2019,2020]",
      "dest": "identifier: a [3990,3991]"
    },
    {
      "src": "emit: emit [32326,32330]",
      "dest": "emit: emit [20972,20976]"
    },
    {
      "src": "(: ( [14322,14323]",
      "dest": "(: ( [16186,16187]"
    },
    {
      "src": "): ) [15788,15789]",
      "dest": "): ) [17599,17600]"
    },
    {
      "src": ".: . [37556,37557]",
      "dest": ".: . [44208,44209]"
    },
    {
      "src": "array_access [10768,10784]",
      "dest": "array_access [12632,12648]"
    },
    {
      "src": "type_cast_expression [34322,34332]",
      "dest": "type_cast_expression [40552,40562]"
    },
    {
      "src": "type_cast_expression [30523,30535]",
      "dest": "type_cast_expression [24381,24394]"
    },
    {
      "src": "array_access [36848,36869]",
      "dest": "array_access [43616,43637]"
    },
    {
      "src": "return_type_definition [6180,6194]",
      "dest": "return_type_definition [8090,8104]"
    },
    {
      "src": "primitive_type [21966,21973]",
      "dest": "primitive_type [26936,26943]"
    },
    {
      "src": "function: function [30926,30934]",
      "dest": "function: function [19572,19580]"
    },
    {
      "src": "): ) [10755,10756]",
      "dest": "): ) [12619,12620]"
    },
    {
      "src": "event_paramater [19028,19046]",
      "dest": "event_paramater [30528,30546]"
    },
    {
      "src": "identifier: symbol [42572,42578]",
      "dest": "identifier: name [30887,30891]"
    },
    {
      "src": "member_expression [12329,12343]",
      "dest": "member_expression [14193,14207]"
    },
    {
      "src": "type_cast_expression [31433,31443]",
      "dest": "type_cast_expression [20079,20089]"
    },
    {
      "src": "function_body [12993,13142]",
      "dest": "function_body [14857,15006]"
    },
    {
      "src": "): ) [14639,14640]",
      "dest": "): ) [16503,16504]"
    },
    {
      "src": "=: = [13967,13968]",
      "dest": "=: = [15831,15832]"
    },
    {
      "src": "type_name [982,989]",
      "dest": "type_name [2953,2960]"
    },
    {
      "src": "string [12132,12134]",
      "dest": "string [13996,13998]"
    },
    {
      "src": "type_name [28846,28850]",
      "dest": "type_name [32441,32445]"
    },
    {
      "src": "call_argument [41716,41727]",
      "dest": "call_argument [48390,48401]"
    },
    {
      "src": "event: event [9586,9591]",
      "dest": "event: event [11450,11455]"
    },
    {
      "src": "variable_declaration [2007,2016]",
      "dest": "variable_declaration [3978,3987]"
    },
    {
      "src": ",: , [34332,34333]",
      "dest": ",: , [40562,40563]"
    },
    {
      "src": ".: . [13123,13124]",
      "dest": ".: . [14987,14988]"
    },
    {
      "src": "comment: // File: @openzeppelin/contracts/math/SafeMath.sol [35,85]",
      "dest": "comment: // &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&& [0,73]"
    },
    {
      "src": "(: ( [19248,19249]",
      "dest": "(: ( [35382,35383]"
    },
    {
      "src": "user_defined_type [19916,19933]",
      "dest": "user_defined_type [30240,30247]"
    },
    {
      "src": "identifier: _spender [24089,24097]",
      "dest": "identifier: recipient [33047,33056]"
    },
    {
      "src": "}: } [13300,13301]",
      "dest": "}: } [15164,15165]"
    },
    {
      "src": "type_cast_expression [32434,32444]",
      "dest": "type_cast_expression [21080,21090]"
    },
    {
      "src": ">=: >= [36870,36872]",
      "dest": ">=: >= [43638,43640]"
    },
    {
      "src": "type_name [9901,9908]",
      "dest": "type_name [11765,11772]"
    },
    {
      "src": "variable_declaration_statement [11460,11508]",
      "dest": "variable_declaration_statement [13324,13372]"
    },
    {
      "src": ".: . [37136,37137]",
      "dest": ".: . [43850,43851]"
    },
    {
      "src": "identifier: confirmWrite [10720,10732]",
      "dest": "identifier: confirmWrite [12584,12596]"
    },
    {
      "src": ">: > [14038,14039]",
      "dest": ">: > [15902,15903]"
    },
    {
      "src": "): ) [11234,11235]",
      "dest": "): ) [13098,13099]"
    },
    {
      "src": "emit_statement [11314,11358]",
      "dest": "emit_statement [13178,13222]"
    },
    {
      "src": "binary_expression [5359,5365]",
      "dest": "binary_expression [7330,7336]"
    },
    {
      "src": "(: ( [14638,14639]",
      "dest": "(: ( [16502,16503]"
    },
    {
      "src": "indexed: indexed [9851,9858]",
      "dest": "indexed: indexed [11715,11722]"
    },
    {
      "src": "member_expression [12136,12146]",
      "dest": "member_expression [14000,14010]"
    },
    {
      "src": "): ) [13239,13240]",
      "dest": "): ) [15103,15104]"
    },
    {
      "src": "identifier: transfer [14497,14505]",
      "dest": "identifier: transfer [16361,16369]"
    },
    {
      "src": "type_name [22734,22741]",
      "dest": "type_name [26454,26461]"
    },
    {
      "src": "): ) [40328,40329]",
      "dest": "): ) [47098,47099]"
    },
    {
      "src": "variable_declaration_statement [2670,2688]",
      "dest": "variable_declaration_statement [4641,4659]"
    },
    {
      "src": "string_literal [34419,34449]",
      "dest": "string_literal [40649,40679]"
    },
    {
      "src": "type_name [8687,8694]",
      "dest": "type_name [10551,10558]"
    },
    {
      "src": "modifier_invocation [42111,42120]",
      "dest": "modifier_invocation [48651,48660]"
    },
    {
      "src": "(: ( [20891,20892]",
      "dest": "(: ( [34531,34532]"
    },
    {
      "src": "): ) [34042,34043]",
      "dest": "): ) [40272,40273]"
    },
    {
      "src": "function: function [21727,21735]",
      "dest": "function: function [33720,33728]"
    },
    {
      "src": "member_expression [31597,31607]",
      "dest": "member_expression [20243,20253]"
    },
    {
      "src": "call_argument [30421,30427]",
      "dest": "call_argument [36262,36268]"
    },
    {
      "src": "binary_expression [38216,38244]",
      "dest": "binary_expression [44868,44896]"
    },
    {
      "src": "{: { [39942,39943]",
      "dest": "{: { [46712,46713]"
    },
    {
      "src": "contract_body [712,5414]",
      "dest": "contract_body [2683,7385]"
    },
    {
      "src": "identifier: transferFrom [7632,7644]",
      "dest": "identifier: transferFrom [9542,9554]"
    },
    {
      "src": "): ) [41688,41689]",
      "dest": "): ) [48362,48363]"
    },
    {
      "src": "type_name [13792,13805]",
      "dest": "type_name [15656,15669]"
    },
    {
      "src": "}: } [31004,31005]",
      "dest": "}: } [19650,19651]"
    },
    {
      "src": "public: public [15735,15741]",
      "dest": "public: public [17546,17552]"
    },
    {
      "src": ".: . [40712,40713]",
      "dest": ".: . [47482,47483]"
    },
    {
      "src": "array_access [11664,11687]",
      "dest": "array_access [13528,13551]"
    },
    {
      "src": "uint256: uint256 [5269,5276]",
      "dest": "uint256: uint256 [7240,7247]"
    },
    {
      "src": "call_argument [36952,36978]",
      "dest": "call_argument [36123,36156]"
    },
    {
      "src": "primitive_type [36783,36790]",
      "dest": "primitive_type [43551,43558]"
    },
    {
      "src": "identifier: _admin [10329,10335]",
      "dest": "identifier: _admin [12193,12199]"
    },
    {
      "src": "string_literal [1517,1549]",
      "dest": "string_literal [3488,3520]"
    },
    {
      "src": "number_literal: 0 [34330,34331]",
      "dest": "number_literal: 0 [40560,40561]"
    },
    {
      "src": "]: ] [13047,13048]",
      "dest": "]: ] [14911,14912]"
    },
    {
      "src": ",: , [21871,21872]",
      "dest": ",: , [33855,33856]"
    },
    {
      "src": "while_statement [12354,12460]",
      "dest": "while_statement [14218,14324]"
    },
    {
      "src": "==: == [39344,39346]",
      "dest": "==: == [46114,46116]"
    },
    {
      "src": "return: return [28926,28932]",
      "dest": "return: return [32508,32514]"
    },
    {
      "src": "modifier_invocation [32067,32076]",
      "dest": "modifier_invocation [20713,20722]"
    },
    {
      "src": "return: return [40289,40295]",
      "dest": "return: return [47059,47065]"
    },
    {
      "src": "function: function [5678,5686]",
      "dest": "function: function [7588,7596]"
    },
    {
      "src": "state_variable_declaration [15727,15754]",
      "dest": "state_variable_declaration [17538,17565]"
    },
    {
      "src": "internal: internal [18054,18062]",
      "dest": "internal: internal [22774,22782]"
    },
    {
      "src": "call_argument [4008,4020]",
      "dest": "call_argument [5979,5991]"
    },
    {
      "src": "identifier: msg [31808,31811]",
      "dest": "identifier: msg [20454,20457]"
    },
    {
      "src": "primitive_type [5280,5286]",
      "dest": "primitive_type [7251,7257]"
    },
    {
      "src": "identifier: a [2710,2711]",
      "dest": "identifier: a [4681,4682]"
    },
    {
      "src": "identifier: value [7962,7967]",
      "dest": "identifier: value [9872,9877]"
    },
    {
      "src": "(: ( [11192,11193]",
      "dest": "(: ( [13056,13057]"
    },
    {
      "src": "address: address [8660,8667]",
      "dest": "address: address [10524,10531]"
    },
    {
      "src": "identifier: attribute [9917,9926]",
      "dest": "identifier: attribute [11781,11790]"
    },
    {
      "src": "): ) [31442,31443]",
      "dest": "): ) [20088,20089]"
    },
    {
      "src": "identifier: AttributeData [10799,10812]",
      "dest": "identifier: AttributeData [12663,12676]"
    },
    {
      "src": "(: ( [39187,39188]",
      "dest": "(: ( [45957,45958]"
    },
    {
      "src": "(: ( [13078,13079]",
      "dest": "(: ( [14942,14943]"
    },
    {
      "src": "identifier: epochsPassed [40010,40022]",
      "dest": "identifier: epochsPassed [46780,46792]"
    },
    {
      "src": "(: ( [29051,29052]",
      "dest": "(: ( [48894,48895]"
    },
    {
      "src": "(: ( [13665,13666]",
      "dest": "(: ( [15529,15530]"
    },
    {
      "src": "primitive_type [12577,12584]",
      "dest": "primitive_type [14441,14448]"
    },
    {
      "src": ",: , [8170,8171]",
      "dest": ",: , [10080,10081]"
    },
    {
      "src": "): ) [38140,38141]",
      "dest": "): ) [44792,44793]"
    },
    {
      "src": "address: address [27703,27710]",
      "dest": "address: address [30306,30313]"
    },
    {
      "src": "[: [ [9562,9563]",
      "dest": "[: [ [11426,11427]"
    },
    {
      "src": "): ) [4020,4021]",
      "dest": "): ) [5991,5992]"
    },
    {
      "src": "assignment_expression [12079,12164]",
      "dest": "assignment_expression [13943,14028]"
    },
    {
      "src": "solidity: solidity [5486,5494]",
      "dest": "solidity: solidity [2069,2077]"
    },
    {
      "src": "event_paramater [9716,9733]",
      "dest": "event_paramater [11580,11597]"
    },
    {
      "src": "call_expression [38734,38767]",
      "dest": "call_expression [45386,45419]"
    },
    {
      "src": "): ) [36273,36274]",
      "dest": "): ) [43144,43145]"
    },
    {
      "src": "member_expression [25724,25734]",
      "dest": "member_expression [21763,21773]"
    },
    {
      "src": "type_cast_expression [15441,15451]",
      "dest": "type_cast_expression [17305,17315]"
    },
    {
      "src": "pragma_directive [30626,30649]",
      "dest": "pragma_directive [17330,17353]"
    },
    {
      "src": "type_name [10360,10364]",
      "dest": "type_name [12224,12228]"
    },
    {
      "src": "(: ( [39726,39727]",
      "dest": "(: ( [46496,46497]"
    },
    {
      "src": "{: { [2623,2624]",
      "dest": "{: { [4594,4595]"
    },
    {
      "src": "]: ] [12402,12403]",
      "dest": "]: ] [14266,14267]"
    },
    {
      "src": "bytes32: bytes32 [12591,12598]",
      "dest": "bytes32: bytes32 [14455,14462]"
    },
    {
      "src": "type_name [31141,31148]",
      "dest": "type_name [19787,19794]"
    },
    {
      "src": "comment: /**      * @dev initialize trusttoken and give ownership to sender      * This is necessary to set ownership for proxy      */ [41515,41644]",
      "dest": "comment: /**      * @dev initialize trusttoken and give ownership to sender      * This is necessary to set ownership for proxy      */ [48207,48336]"
    },
    {
      "src": ",: , [10636,10637]",
      "dest": ",: , [12500,12501]"
    },
    {
      "src": "call_argument [12132,12134]",
      "dest": "call_argument [13996,13998]"
    },
    {
      "src": "(: ( [12422,12423]",
      "dest": "(: ( [14286,14287]"
    },
    {
      "src": "identifier: account [5848,5855]",
      "dest": "identifier: account [7758,7765]"
    },
    {
      "src": "identifier: msg [41802,41805]",
      "dest": "identifier: msg [48445,48448]"
    },
    {
      "src": "function_definition [958,1139]",
      "dest": "function_definition [2929,3110]"
    },
    {
      "src": "(: ( [1071,1072]",
      "dest": "(: ( [3042,3043]"
    },
    {
      "src": "identifier: distribution [37519,37531]",
      "dest": "identifier: distribution [44169,44181]"
    },
    {
      "src": "primitive_type [35531,35538]",
      "dest": "primitive_type [41446,41453]"
    },
    {
      "src": "function_definition [37313,37582]",
      "dest": "function_definition [44027,44234]"
    },
    {
      "src": "visibility [14272,14280]",
      "dest": "visibility [16136,16144]"
    },
    {
      "src": "identifier: newTimeLockRegistry [34480,34499]",
      "dest": "identifier: newTimeLockRegistry [40710,40729]"
    },
    {
      "src": "using: using [33346,33351]",
      "dest": "using: using [39492,39497]"
    },
    {
      "src": "member_expression [10435,10451]",
      "dest": "member_expression [12299,12315]"
    },
    {
      "src": "call_expression [11518,11542]",
      "dest": "call_expression [13382,13406]"
    },
    {
      "src": "indexed: indexed [19014,19021]",
      "dest": "indexed: indexed [30514,30521]"
    },
    {
      "src": "\": \" [35743,35744]",
      "dest": "\": \" [41885,41886]"
    },
    {
      "src": "(: ( [39609,39610]",
      "dest": "(: ( [46379,46380]"
    },
    {
      "src": "identifier: msg [10920,10923]",
      "dest": "identifier: msg [12784,12787]"
    },
    {
      "src": "identifier: keccak256 [9499,9508]",
      "dest": "identifier: keccak256 [11363,11372]"
    },
    {
      "src": "return_type_definition [12623,12637]",
      "dest": "return_type_definition [14487,14501]"
    },
    {
      "src": "=: = [12277,12278]",
      "dest": "=: = [14141,14142]"
    },
    {
      "src": "call_argument [19257,19275]",
      "dest": "call_argument [35408,35445]"
    },
    {
      "src": "function_body [30123,30563]",
      "dest": "function_body [36081,36392]"
    },
    {
      "src": "array_access [12279,12302]",
      "dest": "array_access [14143,14166]"
    },
    {
      "src": ",: , [7932,7933]",
      "dest": ",: , [9842,9843]"
    },
    {
      "src": "identifier: distribution [37038,37050]",
      "dest": "identifier: distribution [43731,43743]"
    },
    {
      "src": "): ) [8433,8434]",
      "dest": "): ) [10297,10298]"
    },
    {
      "src": "identifier: account [37935,37942]",
      "dest": "identifier: account [44587,44594]"
    },
    {
      "src": "identifier: RegistryClone [13946,13959]",
      "dest": "identifier: RegistryClone [15810,15823]"
    },
    {
      "src": "expression_statement [15395,15416]",
      "dest": "expression_statement [17259,17280]"
    },
    {
      "src": "call_argument [15364,15369]",
      "dest": "call_argument [17228,17233]"
    },
    {
      "src": "function: function [6118,6126]",
      "dest": "function: function [8028,8036]"
    },
    {
      "src": "}: } [10492,10493]",
      "dest": "}: } [12356,12357]"
    },
    {
      "src": "if_statement [39530,39637]",
      "dest": "if_statement [46300,46407]"
    },
    {
      "src": "{: { [40917,40918]",
      "dest": "{: { [47687,47688]"
    },
    {
      "src": "expression_statement [23556,23644]",
      "dest": "expression_statement [36800,36868]"
    },
    {
      "src": "uint256: uint256 [22752,22759]",
      "dest": "uint256: uint256 [34483,34490]"
    },
    {
      "src": "event: event [9968,9973]",
      "dest": "event: event [11832,11837]"
    },
    {
      "src": "identifier: onlyOwner [42111,42120]",
      "dest": "identifier: onlyOwner [48651,48660]"
    },
    {
      "src": "type_name [5258,5265]",
      "dest": "type_name [7229,7236]"
    },
    {
      "src": "identifier: ProxyStorage [15685,15697]",
      "dest": "identifier: ProxyStorage [17496,17508]"
    }
  ],
  "actions": [
    {
      "action": "move-tree",
      "tree": "comment: // File: contracts/trusttokens/TimeLockedToken.sol [32459,32509]",
      "parent": "source_file [0,49309]",
      "at": 38
    },
    {
      "action": "move-tree",
      "tree": "comment: // File: contracts/trusttokens/TrustToken.sol [40960,41005]",
      "parent": "source_file [0,49309]",
      "at": 39
    },
    {
      "action": "move-tree",
      "tree": "comment: // SPDX-License-Identifier: MIT [0,31]",
      "parent": "source_file [0,49309]",
      "at": 39
    },
    {
      "action": "move-tree",
      "tree": "pragma_directive [5479,5502]",
      "parent": "source_file [0,49309]",
      "at": 39
    },
    {
      "action": "move-tree",
      "tree": "comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [118,693]",
      "parent": "source_file [0,49309]",
      "at": 39
    },
    {
      "action": "move-tree",
      "tree": "library_declaration [695,5414]",
      "parent": "source_file [0,49309]",
      "at": 39
    },
    {
      "action": "move-tree",
      "tree": "pragma_directive [91,114]",
      "parent": "source_file [0,49309]",
      "at": 39
    },
    {
      "action": "move-tree",
      "tree": "comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP.  */ [5506,5578]",
      "parent": "source_file [0,49309]",
      "at": 39
    },
    {
      "action": "move-tree",
      "tree": "interface_declaration [5580,8215]",
      "parent": "source_file [0,49309]",
      "at": 39
    },
    {
      "action": "move-tree",
      "tree": "pragma_directive [27510,27533]",
      "parent": "source_file [0,49309]",
      "at": 39
    },
    {
      "action": "move-tree",
      "tree": "interface_declaration [8292,8447]",
      "parent": "source_file [0,49309]",
      "at": 39
    },
    {
      "action": "move-tree",
      "tree": "contract_declaration [8451,15462]",
      "parent": "source_file [0,49309]",
      "at": 39
    },
    {
      "action": "move-tree",
      "tree": "comment: /**  * All storage must be declared here  * New storage must be appended to the end  * Never remove items from this list  */ [15546,15674]",
      "parent": "source_file [0,49309]",
      "at": 40
    },
    {
      "action": "move-tree",
      "tree": "contract_declaration [15676,17459]",
      "parent": "source_file [0,49309]",
      "at": 40
    },
    {
      "action": "move-tree",
      "tree": "pragma_directive [32513,32536]",
      "parent": "source_file [0,49309]",
      "at": 41
    },
    {
      "action": "move-tree",
      "tree": "library_declaration [17698,18692]",
      "parent": "source_file [0,49309]",
      "at": 43
    },
    {
      "action": "move-tree",
      "tree": "pragma_directive [41009,41032]",
      "parent": "source_file [0,49309]",
      "at": 44
    },
    {
      "action": "move-tree",
      "tree": "contract_declaration [19883,24195]",
      "parent": "source_file [0,49309]",
      "at": 44
    },
    {
      "action": "move-tree",
      "tree": "pragma_directive [27326,27349]",
      "parent": "source_file [0,49309]",
      "at": 44
    },
    {
      "action": "move-tree",
      "tree": "pragma_directive [24256,24279]",
      "parent": "source_file [0,49309]",
      "at": 46
    },
    {
      "action": "update-node",
      "tree": "comment: // File: @openzeppelin/contracts/math/SafeMath.sol [35,85]",
      "label": "// &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&"
    },
    {
      "action": "update-node",
      "tree": "comment: // File: @openzeppelin/contracts/token/ERC20/IERC20.sol [5418,5473]",
      "label": "// &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&"
    },
    {
      "action": "update-node",
      "tree": "comment: // File: contracts/registry/Registry.sol [8219,8259]",
      "label": "// &&&&&&&&&&&&&&&&&&&&&&&&&&&&&%&&&&%%%%&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&"
    },
    {
      "action": "update-node",
      "tree": "comment: // File: contracts/trusttokens/ProxyStorage.sol [15466,15513]",
      "label": "// &&&&&&&&&&&&&&&&&&&&&&&&%(,                 .*#&&&&&&&&&&&&&&&&&&&&&&&"
    },
    {
      "action": "update-node",
      "tree": "comment: // File: contracts/trusttokens/ValSafeMath.sol [17463,17509]",
      "label": "// &&&&&&&&&&&&&&&&&&&&#.        ,/#%%%%%%%#(/,      *%&&&&&&&&&&&&&&&&&&"
    },
    {
      "action": "update-node",
      "tree": "comment: /**  * Forked subset of Openzeppelin SafeMath allowing custom underflow/overflow messages  * Useful for debugging, replaceable with standard SafeMath  */ [17540,17696]",
      "label": "// &&&&&&&&&&&&&&&&&(      /&&&&&&&&&&&&&&&&&&&&&%&%*   ,%&&&&&&&&&&&&&&&"
    },
    {
      "action": "update-node",
      "tree": "comment: // File: contracts/trusttokens/ERC20.sol [18696,18736]",
      "label": "// &&&&&&&&&&&&&&%,    *%&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&%,  (&&&&&&&&&&&&&"
    },
    {
      "action": "update-node",
      "tree": "comment: // Fork of OpenZeppelin's BasicToken [18771,18807]",
      "label": "// &&&&&&&&&&&&&,    #&&#                      ./#&&&&&&&&%, %&&&&&&&&&&&"
    },
    {
      "action": "update-node",
      "tree": "comment: /**  * @title Basic token  * @dev Basic version of StandardToken, with no allowances.  */ [18809,18901]",
      "label": "// &&&&&&&&&&&#    (&&&&#                            ,%&&&&&&*/&&&&&&&&&&"
    },
    {
      "action": "update-node",
      "tree": "comment: /**  * @title Standard ERC20 token  *  * @dev Implementation of the basic standard token.  * @dev https://github.com/ethereum/EIPs/issues/20  * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol  */ [19609,19881]",
      "label": "// &&&&&&&&&&(    %&&&&&#    /&&&&&&&&&&&&&&&&&&%#,     .%&&&&&(%&&&&&&&&"
    },
    {
      "action": "update-node",
      "tree": "comment: // File: contracts/trusttokens/RegistrySubscriber.sol [24199,24252]",
      "label": "// &&&&&&&&&%    #&&&&&&#    /&&&&&&&&&&&&&&&&&&&&&&&(    .%&&&&&&&&&&&&&"
    },
    {
      "action": "update-node",
      "tree": "comment: // File: contracts/trusttokens/TrueCoinReceiver.sol [27271,27322]",
      "label": "// &&&&&&&&&/   ,&&&&&&&#    /&&&&&&&&&&&&&&&&%%%%&&&&%%    /&&&&&&&&&&&&"
    },
    {
      "action": "update-node",
      "tree": "comment: // File: contracts/trusttokens/ValTokenWithHook.sol [27455,27506]",
      "label": "// &&&&&&&&&*   /&&&&&&&#             %&&&&&&,   (&&&&&&&*   /&&&&&&&&&&&"
    },
    {
      "action": "update-node",
      "tree": "comment: // File: contracts/trusttokens/ClaimableContract.sol [30570,30622]",
      "label": "// &&&&&&&&&/   *&&&&&&&%////////*    %&&&&&&,   (&&&&&&&&,   #&&&&&&&&&&"
    },
    {
      "action": "update-node",
      "tree": "comment: // File: contracts/trusttokens/TimeLockedToken.sol [32459,32509]",
      "label": "// &&&&&&&&&#    &&&&&&&&&&&&&&&&%.   %&&&&&&.   #&&&&&&&&#   *&&&&&&&&&&"
    },
    {
      "action": "update-node",
      "tree": "comment: // File: contracts/trusttokens/TrustToken.sol [40960,41005]",
      "label": "// &&&&&&&&&&*   ,&&%&&&&&&&&&&&&%.   %&&&&&(   .%&&&&&&&&#   *&&&&&&&&&&"
    },
    {
      "action": "insert-node",
      "tree": "comment: // &&&&&&&&&&&,   .&&&&&&&&&&&&&&%.  /&&&&&#    #&&&&&&&&&*   (&&&&&&&&&& [1200,1273]",
      "parent": "source_file [0,49309]",
      "at": 16
    },
    {
      "action": "insert-node",
      "tree": "comment: // &&&&&&&&&&&&#    ,&&&&&&&&&&&&%.,%&&&&%,    %&&&&&&&&&#   .%&&&&&&&&&& [1275,1348]",
      "parent": "source_file [0,49309]",
      "at": 17
    },
    {
      "action": "insert-node",
      "tree": "comment: // &&&&&&&&&&&&&&(     ,#&&&&&&&&&&&&&&(     (&&&&&&&&&&/   .%&&&&&&&&&&& [1350,1423]",
      "parent": "source_file [0,49309]",
      "at": 18
    },
    {
      "action": "insert-node",
      "tree": "comment: // &&&&&&&&&&&&&&&&&*          ..         ,%&&&&&&&&&&#    *&&&&&&&&&&&&& [1425,1498]",
      "parent": "source_file [0,49309]",
      "at": 19
    },
    {
      "action": "insert-node",
      "tree": "comment: // &&&&&&&&&&&&&&&&&&&&%(.           ./%&&&&&&&&&&&%*    *&&&&&&&&&&&&&&& [1500,1573]",
      "parent": "source_file [0,49309]",
      "at": 20
    },
    {
      "action": "insert-node",
      "tree": "comment: // &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&%(.    .#&&&&&&&&&&&&&&&&& [1575,1648]",
      "parent": "source_file [0,49309]",
      "at": 21
    },
    {
      "action": "insert-node",
      "tree": "comment: // &&&&&&&&&&&&&&&&&&&&&%/(%&&&&&&&&&&&&%#/.       *%&&&&&&&&&&&&&&&&&&&& [1650,1723]",
      "parent": "source_file [0,49309]",
      "at": 22
    },
    {
      "action": "insert-node",
      "tree": "comment: // &&&&&&&&&&&&&&&&&&&&&&&&&&%(,             ,(%&&&&&&&&&&&&&&&&&&&&&&&&& [1725,1798]",
      "parent": "source_file [0,49309]",
      "at": 23
    },
    {
      "action": "insert-node",
      "tree": "comment: // &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&& [1800,1873]",
      "parent": "source_file [0,49309]",
      "at": 24
    },
    {
      "action": "insert-node",
      "tree": "comment: // &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&& [1875,1948]",
      "parent": "source_file [0,49309]",
      "at": 25
    },
    {
      "action": "insert-node",
      "tree": "comment: // &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&& [1950,2023]",
      "parent": "source_file [0,49309]",
      "at": 26
    },
    {
      "action": "insert-tree",
      "tree": "pragma_directive [21105,21128]",
      "parent": "source_file [0,49309]",
      "at": 43
    },
    {
      "action": "insert-node",
      "tree": "comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [21132,21640]",
      "parent": "source_file [0,49309]",
      "at": 44
    },
    {
      "action": "insert-node",
      "tree": "contract_declaration [21642,22025]",
      "parent": "source_file [0,49309]",
      "at": 45
    },
    {
      "action": "insert-tree",
      "tree": "pragma_directive [22029,22052]",
      "parent": "source_file [0,49309]",
      "at": 46
    },
    {
      "action": "insert-node",
      "tree": "comment: /**  * @dev Collection of functions related to the address type  */ [22056,22125]",
      "parent": "source_file [0,49309]",
      "at": 47
    },
    {
      "action": "insert-node",
      "tree": "comment: // File: contracts/trusttoken/common/ERC20.sol [28215,28261]",
      "parent": "source_file [0,49309]",
      "at": 49
    },
    {
      "action": "insert-node",
      "tree": "comment: /**  * @notice This is a copy of openzeppelin ERC20 contract with removed state variables.  * Removing state variables has been necessary due to proxy pattern usage.  * Changes to Openzeppelin ERC20 https://github.com/OpenZeppelin/openzeppelin-contracts/blob/de99bccbfd4ecd19d7369d01b070aa72c64423c9/contracts/token/ERC20/ERC20.sol:  * - Remove state variables _name, _symbol, _decimals  * - Use state variables balances, allowances, totalSupply from ProxyStorage  * - Remove constructor  * - Solidity version changed from ^0.6.0 to 0.6.10  * - Contract made abstract  * - Remove inheritance from IERC20 because of ProxyStorage name conflicts  *  * See also: ClaimableOwnable.sol and ProxyStorage.sol  */ [28265,28981]",
      "parent": "source_file [0,49309]",
      "at": 50
    },
    {
      "action": "insert-node",
      "tree": "comment: /**  * @dev Implementation of the {IERC20} interface.  *  * This implementation is agnostic to the way tokens are created. This means  * that a supply mechanism has to be added in a derived contract using {_mint}.  * For a generic mechanism see {ERC20PresetMinterPauser}.  *  * TIP: For a detailed writeup see our guide  * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How  * to implement supply mechanisms].  *  * We have followed general OpenZeppelin guidelines: functions revert instead  * of returning `false` on failure. This behavior is nonetheless conventional  * and does not conflict with the expectations of ERC20 applications.  *  * Additionally, an {Approval} event is emitted on calls to {transferFrom}.  * This allows applications to reconstruct the allowance for all accounts just  * by listening to said events. Other implementations of the EIP may not emit  * these events, as it isn't required by the specification.  *  * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}  * functions have been added to mitigate the well-known issues around setting  * allowances. See {IERC20-approve}.  */ [29012,30197]",
      "parent": "source_file [0,49309]",
      "at": 52
    },
    {
      "action": "insert-node",
      "tree": "abstract: abstract [21642,21650]",
      "parent": "contract_declaration [21642,22025]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "contract: contract [21651,21659]",
      "parent": "contract_declaration [21642,22025]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "identifier: Context [21660,21667]",
      "parent": "contract_declaration [21642,22025]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "contract_body [21668,22025]",
      "parent": "contract_declaration [21642,22025]",
      "at": 3
    },
    {
      "action": "update-node",
      "tree": "identifier: ValSafeMath [17706,17717]",
      "label": "Address"
    },
    {
      "action": "insert-node",
      "tree": "abstract: abstract [30199,30207]",
      "parent": "contract_declaration [30199,38672]",
      "at": 0
    },
    {
      "action": "update-node",
      "tree": "identifier: ModularStandardToken [19892,19912]",
      "label": "ERC20"
    },
    {
      "action": "move-tree",
      "tree": "inheritance_specifier [18933,18945]",
      "parent": "contract_declaration [30199,38672]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": ",: , [30238,30239]",
      "parent": "contract_declaration [30199,38672]",
      "at": 5
    },
    {
      "action": "move-tree",
      "tree": "event_definition [20090,20168]",
      "parent": "contract_body [30248,38672]",
      "at": 7
    },
    {
      "action": "move-tree",
      "tree": "function_definition [21727,21914]",
      "parent": "contract_body [30248,38672]",
      "at": 10
    },
    {
      "action": "move-tree",
      "tree": "function_definition [20825,20984]",
      "parent": "contract_body [30248,38672]",
      "at": 10
    },
    {
      "action": "move-tree",
      "tree": "comment: /**      * @dev Transfer function which includes unlocked tokens      * @param _from The address to send tokens from      * @param _to The address that will receive the tokens      * @param _value The amount of tokens to be transferred      */ [34515,34763]",
      "parent": "contract_body [39485,47726]",
      "at": 15
    },
    {
      "action": "move-tree",
      "tree": "comment: /**      * @dev Transfer tokens to another account under the lockup schedule      * Emits a transfer event showing a transfer to the recipient      * Only the registry can call this function      * Once registered, the distribution cannot be registered again      * @param receiver Address to receive the tokens      * @param amount Tokens to be transferred      */ [36363,36735]",
      "parent": "contract_body [39485,47726]",
      "at": 21
    },
    {
      "action": "move-tree",
      "tree": "function_definition [34769,35136]",
      "parent": "contract_body [39485,47726]",
      "at": 22
    },
    {
      "action": "insert-node",
      "tree": "{: { [21668,21669]",
      "parent": "contract_body [21668,22025]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "function_definition [21675,21781]",
      "parent": "contract_body [21668,22025]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "function_definition [21789,22022]",
      "parent": "contract_body [21668,22025]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "}: } [22024,22025]",
      "parent": "contract_body [21668,22025]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "comment: /**      * @dev Returns true if `account` is a contract.      *      * [IMPORTANT]      * ====      * It is unsafe to assume that an address for which this function returns      * false is an externally-owned account (EOA) and not a contract.      *      * Among others, `isContract` will return false for the following      * types of addresses:      *      *  - an externally-owned account      *  - a contract in construction      *  - an address where a contract will be created      *  - an address where a contract lived, but was destroyed      * ====      */ [22150,22731]",
      "parent": "contract_body [22143,28211]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "function_definition [22737,23356]",
      "parent": "contract_body [22143,28211]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "comment: /**      * @dev Replacement for Solidity's `transfer`: sends `amount` wei to      * `recipient`, forwarding all available gas and reverting on errors.      *      * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost      * of certain opcodes, possibly making contracts go over the 2300 gas limit      * imposed by `transfer`, making them unable to receive funds via      * `transfer`. {sendValue} removes this limitation.      *      * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].      *      * IMPORTANT: because control is transferred to `recipient`, care must be      * taken to not create reentrancy vulnerabilities. Consider using      * {ReentrancyGuard} or the      * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].      */ [23364,24285]",
      "parent": "contract_body [22143,28211]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "function_definition [24291,24688]",
      "parent": "contract_body [22143,28211]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "comment: /**      * @dev Performs a Solidity function call using a low level `call`. A      * plain`call` is an unsafe replacement for a function call: use this      * function instead.      *      * If `target` reverts with a revert reason, it is bubbled up by this      * function (like regular Solidity function calls).      *      * Returns the raw returned data. To convert to the expected return value,      * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].      *      * Requirements:      *      * - `target` must be a contract.      * - calling `target` with `data` must not revert.      *      * _Available since v3.1._      */ [24696,25443]",
      "parent": "contract_body [22143,28211]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": "function_definition [25449,25622]",
      "parent": "contract_body [22143,28211]",
      "at": 6
    },
    {
      "action": "insert-node",
      "tree": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with      * `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [25630,25846]",
      "parent": "contract_body [22143,28211]",
      "at": 7
    },
    {
      "action": "insert-node",
      "tree": "function_definition [25852,26048]",
      "parent": "contract_body [22143,28211]",
      "at": 8
    },
    {
      "action": "insert-node",
      "tree": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but also transferring `value` wei to `target`.      *      * Requirements:      *      * - the calling contract must have an ETH balance of at least `value`.      * - the called Solidity function must be `payable`.      *      * _Available since v3.1._      */ [26056,26417]",
      "parent": "contract_body [22143,28211]",
      "at": 9
    },
    {
      "action": "insert-node",
      "tree": "function_definition [26423,26649]",
      "parent": "contract_body [22143,28211]",
      "at": 10
    },
    {
      "action": "insert-node",
      "tree": "comment: /**      * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but      * with `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [26657,26899]",
      "parent": "contract_body [22143,28211]",
      "at": 11
    },
    {
      "action": "insert-node",
      "tree": "function_definition [26905,27221]",
      "parent": "contract_body [22143,28211]",
      "at": 12
    },
    {
      "action": "insert-node",
      "tree": "function_definition [27229,28208]",
      "parent": "contract_body [22143,28211]",
      "at": 13
    },
    {
      "action": "insert-node",
      "tree": "using_directive [30288,30314]",
      "parent": "contract_body [30248,38672]",
      "at": 2
    },
    {
      "action": "update-node",
      "tree": "comment: /**      * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.      *      * Beware that changing an allowance with this method brings the risk that someone may use both the old      * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this      * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:      * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      * @param _spender The address which will spend the funds.      * @param _value The amount of tokens to be spent.      */ [20176,20819]",
      "label": "/**      * @dev Emitted when `value` tokens are moved from one account (`from`) to      * another (`to`).      *      * Note that `value` may be zero.      */"
    },
    {
      "action": "move-tree",
      "tree": "event_definition [18991,19063]",
      "parent": "contract_body [30248,38672]",
      "at": 5
    },
    {
      "action": "update-node",
      "tree": "comment: /**      * @dev Increase the amount of tokens that an owner allowed to a spender.      *      * approve should be called when allowed[_spender] == 0. To increment      * allowed value is better to use this function to avoid 2 calls (and wait until      * the first transaction is mined)      * From MonolithDAO Token.sol      * @param _spender The address which will spend the funds.      * @param _addedValue The amount of tokens to increase the allowance by.      */ [21244,21721]",
      "label": "/**      * @dev Emitted when the allowance of a `spender` for an `owner` is set by      * a call to {approve}. `value` is the new allowance.      */"
    },
    {
      "action": "update-node",
      "tree": "comment: /**      * @dev Decrease the amount of tokens that an owner allowed to a spender.      *      * approve should be called when allowed[_spender] == 0. To decrement      * allowed value is better to use this function to avoid 2 calls (and wait until      * the first transaction is mined)      * From MonolithDAO Token.sol      * @param _spender The address which will spend the funds.      * @param _subtractedValue The amount of tokens to decrease the allowance by.      */ [22220,22702]",
      "label": "/**      * @dev Returns the name of the token.      */"
    },
    {
      "action": "move-tree",
      "tree": "function_definition [42563,42648]",
      "parent": "contract_body [30248,38672]",
      "at": 11
    },
    {
      "action": "insert-node",
      "tree": "comment: /**      * @dev Returns the symbol of the token, usually a shorter version of the      * name.      */ [30946,31051]",
      "parent": "contract_body [30248,38672]",
      "at": 9
    },
    {
      "action": "move-tree",
      "tree": "function_definition [42465,42555]",
      "parent": "contract_body [30248,38672]",
      "at": 13
    },
    {
      "action": "insert-node",
      "tree": "comment: /**      * @dev Returns the number of decimals used to get its user representation.      * For example, if `decimals` equals `2`, a balance of `505` tokens should      * be displayed to a user as `5,05` (`505 / 10 ** 2`).      *      * Tokens usually opt for a value of 18, imitating the relationship between      * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is      * called.      *      * NOTE: This information is only used for _display_ purposes: it in      * no way affects any of the arithmetic of the contract, including      * {IERC20-balanceOf} and {IERC20-transfer}.      */ [31127,31751]",
      "parent": "contract_body [30248,38672]",
      "at": 11
    },
    {
      "action": "insert-node",
      "tree": "function_definition [31757,31841]",
      "parent": "contract_body [30248,38672]",
      "at": 12
    },
    {
      "action": "insert-node",
      "tree": "comment: /**      * @dev See {IERC20-transfer}.      *      * Requirements:      *      * - `recipient` cannot be the zero address.      * - the caller must have a balance of at least `amount`.      */ [31849,32048]",
      "parent": "contract_body [30248,38672]",
      "at": 13
    },
    {
      "action": "insert-node",
      "tree": "function_definition [32054,32220]",
      "parent": "contract_body [30248,38672]",
      "at": 14
    },
    {
      "action": "insert-node",
      "tree": "comment: /**      * @dev See {IERC20-approve}.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [32228,32361]",
      "parent": "contract_body [30248,38672]",
      "at": 15
    },
    {
      "action": "move-tree",
      "tree": "function_definition [28728,28945]",
      "parent": "contract_body [30248,38672]",
      "at": 19
    },
    {
      "action": "insert-node",
      "tree": "comment: /**      * @dev See {IERC20-transferFrom}.      *      * Emits an {Approval} event indicating the updated allowance. This is not      * required by the EIP. See the note at the beginning of {ERC20};      *      * Requirements:      * - `sender` and `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      * - the caller must have allowance for ``sender``'s tokens of at least      * `amount`.      */ [32535,32995]",
      "parent": "contract_body [30248,38672]",
      "at": 17
    },
    {
      "action": "insert-node",
      "tree": "function_definition [33001,33311]",
      "parent": "contract_body [30248,38672]",
      "at": 18
    },
    {
      "action": "insert-node",
      "tree": "comment: /**      * @dev Atomically increases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [33319,33714]",
      "parent": "contract_body [30248,38672]",
      "at": 19
    },
    {
      "action": "insert-node",
      "tree": "comment: /**      * @dev Atomically decreases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      * - `spender` must have allowance for the caller of at least      * `subtractedValue`.      */ [33944,34433]",
      "parent": "contract_body [30248,38672]",
      "at": 21
    },
    {
      "action": "insert-node",
      "tree": "comment: /**      * @dev Moves tokens `amount` from `sender` to `recipient`.      *      * This is internal function is equivalent to {transfer}, and can be used to      * e.g. implement automatic token fees, slashing mechanisms, etc.      *      * Emits a {Transfer} event.      *      * Requirements:      *      * - `sender` cannot be the zero address.      * - `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      */ [34714,35190]",
      "parent": "contract_body [30248,38672]",
      "at": 23
    },
    {
      "action": "insert-node",
      "tree": "function_definition [35196,35735]",
      "parent": "contract_body [30248,38672]",
      "at": 24
    },
    {
      "action": "insert-node",
      "tree": "comment: /** @dev Creates `amount` tokens and assigns them to `account`, increasing      * the total supply.      *      * Emits a {Transfer} event with `from` set to the zero address.      *      * Requirements      *      * - `to` cannot be the zero address.      */ [35743,36010]",
      "parent": "contract_body [30248,38672]",
      "at": 25
    },
    {
      "action": "move-tree",
      "tree": "function_definition [30062,30563]",
      "parent": "contract_body [30248,38672]",
      "at": 29
    },
    {
      "action": "insert-node",
      "tree": "comment: /**      * @dev Destroys `amount` tokens from `account`, reducing the      * total supply.      *      * Emits a {Transfer} event with `to` set to the zero address.      *      * Requirements      *      * - `account` cannot be the zero address.      * - `account` must have at least `amount` tokens.      */ [36400,36718]",
      "parent": "contract_body [30248,38672]",
      "at": 27
    },
    {
      "action": "move-tree",
      "tree": "function_definition [29661,30054]",
      "parent": "contract_body [30248,38672]",
      "at": 31
    },
    {
      "action": "insert-node",
      "tree": "comment: /**      * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.      *      * This is internal function is equivalent to `approve`, and can be used to      * e.g. set automatic allowances for certain subsystems, etc.      *      * Emits an {Approval} event.      *      * Requirements:      *      * - `owner` cannot be the zero address.      * - `spender` cannot be the zero address.      */ [37148,37574]",
      "parent": "contract_body [30248,38672]",
      "at": 29
    },
    {
      "action": "insert-node",
      "tree": "function_definition [37580,37924]",
      "parent": "contract_body [30248,38672]",
      "at": 30
    },
    {
      "action": "insert-node",
      "tree": "comment: /**      * @dev Hook that is called before any transfer of tokens. This includes      * minting and burning.      *      * Calling conditions:      *      * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens      * will be to transferred to `to`.      * - when `from` is zero, `amount` tokens will be minted for `to`.      * - when `to` is zero, `amount` of ``from``'s tokens will be burned.      * - `from` and `to` are never both zero.      *      * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].      */ [37932,38521]",
      "parent": "contract_body [30248,38672]",
      "at": 31
    },
    {
      "action": "insert-node",
      "tree": "comment: // solhint-disable-next-line no-empty-blocks [38527,38571]",
      "parent": "contract_body [30248,38672]",
      "at": 32
    },
    {
      "action": "insert-node",
      "tree": "function_definition [38577,38669]",
      "parent": "contract_body [30248,38672]",
      "at": 33
    },
    {
      "action": "update-node",
      "tree": "comment: /**      * @dev Transfer function which includes unlocked tokens      * @param _from The address to send tokens from      * @param _to The address that will receive the tokens      * @param _value The amount of tokens to be transferred      */ [34515,34763]",
      "label": "// allow unlocked transfers to special account"
    },
    {
      "action": "insert-node",
      "tree": "state_variable_declaration [40132,40158]",
      "parent": "contract_body [39485,47726]",
      "at": 16
    },
    {
      "action": "update-node",
      "tree": "comment: /**      * @dev transferFrom function which includes unlocked tokens      * @param _from The address to send tokens from      * @param _to The address that will receive the tokens      * @param _value The amount of tokens to be transferred      * @param _spender The address allowed to make the transfer      */ [35144,35461]",
      "label": "/**      * @dev Permanently lock transfers to return address      * Lock returns so there isn't always a way to send locked tokens      */"
    },
    {
      "action": "insert-node",
      "tree": "function_definition [40892,40973]",
      "parent": "contract_body [39485,47726]",
      "at": 21
    },
    {
      "action": "update-node",
      "tree": "comment: /**      * @dev Transfer tokens to another account under the lockup schedule      * Emits a transfer event showing a transfer to the recipient      * Only the registry can call this function      * Once registered, the distribution cannot be registered again      * @param receiver Address to receive the tokens      * @param amount Tokens to be transferred      */ [36363,36735]",
      "label": "/**      * @dev Transfer function which includes unlocked tokens      * Locked tokens can always be transfered back to the returns address      * Transferring to owner allows re-issuance of funds through registry      *      * @param _from The address to send tokens from      * @param _to The address that will receive the tokens      * @param _value The amount of tokens to be transferred      */"
    },
    {
      "action": "insert-node",
      "tree": "comment: /**      * @dev Transfer tokens to owner. Used only when returns allowed.      * @param _from The address to send tokens from      * @param _value The amount of tokens to be transferred      */ [41985,42182]",
      "parent": "contract_body [39485,47726]",
      "at": 24
    },
    {
      "action": "insert-node",
      "tree": "comment: /**      * @dev Transfer tokens to another account under the lockup schedule      * Emits a transfer event showing a transfer to the recipient      * Only the registry can call this function      * @param receiver Address to receive the tokens      * @param amount Tokens to be transferred      */ [43200,43503]",
      "parent": "contract_body [39485,47726]",
      "at": 28
    },
    {
      "action": "insert-node",
      "tree": "function_definition [45637,45747]",
      "parent": "contract_body [39485,47726]",
      "at": 36
    },
    {
      "action": "move-tree",
      "tree": "function_definition [28953,29106]",
      "parent": "contract_body [48108,49309]",
      "at": 9
    },
    {
      "action": "insert-node",
      "tree": "function_definition [49105,49204]",
      "parent": "contract_body [48108,49309]",
      "at": 10
    },
    {
      "action": "insert-node",
      "tree": "function_definition [49212,49306]",
      "parent": "contract_body [48108,49309]",
      "at": 11
    },
    {
      "action": "insert-node",
      "tree": "function: function [21675,21683]",
      "parent": "function_definition [21675,21781]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: _msgSender [21684,21694]",
      "parent": "function_definition [21675,21781]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [21694,21695]",
      "parent": "function_definition [21675,21781]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "): ) [21695,21696]",
      "parent": "function_definition [21675,21781]",
      "at": 3
    },
    {
      "action": "move-tree",
      "tree": "visibility [19550,19558]",
      "parent": "function_definition [21675,21781]",
      "at": 4
    },
    {
      "action": "move-tree",
      "tree": "state_mutability [27804,27808]",
      "parent": "function_definition [21675,21781]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": "virtual: virtual [21711,21718]",
      "parent": "function_definition [21675,21781]",
      "at": 6
    },
    {
      "action": "insert-tree",
      "tree": "return_type_definition [21719,21744]",
      "parent": "function_definition [21675,21781]",
      "at": 7
    },
    {
      "action": "insert-node",
      "tree": "function_body [21745,21781]",
      "parent": "function_definition [21675,21781]",
      "at": 8
    },
    {
      "action": "insert-node",
      "tree": "function: function [21789,21797]",
      "parent": "function_definition [21789,22022]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: _msgData [21798,21806]",
      "parent": "function_definition [21789,22022]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [21806,21807]",
      "parent": "function_definition [21789,22022]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "): ) [21807,21808]",
      "parent": "function_definition [21789,22022]",
      "at": 3
    },
    {
      "action": "move-tree",
      "tree": "visibility [28599,28607]",
      "parent": "function_definition [21789,22022]",
      "at": 4
    },
    {
      "action": "move-tree",
      "tree": "state_mutability [41892,41896]",
      "parent": "function_definition [21789,22022]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": "virtual: virtual [21823,21830]",
      "parent": "function_definition [21789,22022]",
      "at": 6
    },
    {
      "action": "insert-tree",
      "tree": "return_type_definition [21831,21853]",
      "parent": "function_definition [21789,22022]",
      "at": 7
    },
    {
      "action": "insert-tree",
      "tree": "function_body [21854,22022]",
      "parent": "function_definition [21789,22022]",
      "at": 8
    },
    {
      "action": "insert-node",
      "tree": "function: function [22737,22745]",
      "parent": "function_definition [22737,23356]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: isContract [22746,22756]",
      "parent": "function_definition [22737,23356]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [22756,22757]",
      "parent": "function_definition [22737,23356]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "parameter [22757,22772]",
      "parent": "function_definition [22737,23356]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "): ) [22772,22773]",
      "parent": "function_definition [22737,23356]",
      "at": 4
    },
    {
      "action": "move-tree",
      "tree": "visibility [18054,18062]",
      "parent": "function_definition [22737,23356]",
      "at": 5
    },
    {
      "action": "insert-tree",
      "tree": "state_mutability [22783,22787]",
      "parent": "function_definition [22737,23356]",
      "at": 6
    },
    {
      "action": "insert-tree",
      "tree": "return_type_definition [22788,22802]",
      "parent": "function_definition [22737,23356]",
      "at": 7
    },
    {
      "action": "insert-node",
      "tree": "function_body [22803,23356]",
      "parent": "function_definition [22737,23356]",
      "at": 8
    },
    {
      "action": "insert-node",
      "tree": "function: function [24291,24299]",
      "parent": "function_definition [24291,24688]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: sendValue [24300,24309]",
      "parent": "function_definition [24291,24688]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [24309,24310]",
      "parent": "function_definition [24291,24688]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "parameter [24310,24335]",
      "parent": "function_definition [24291,24688]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": ",: , [24335,24336]",
      "parent": "function_definition [24291,24688]",
      "at": 4
    },
    {
      "action": "insert-tree",
      "tree": "parameter [24337,24351]",
      "parent": "function_definition [24291,24688]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": "): ) [24351,24352]",
      "parent": "function_definition [24291,24688]",
      "at": 6
    },
    {
      "action": "move-tree",
      "tree": "visibility [29218,29226]",
      "parent": "function_definition [24291,24688]",
      "at": 7
    },
    {
      "action": "insert-node",
      "tree": "function_body [24362,24688]",
      "parent": "function_definition [24291,24688]",
      "at": 8
    },
    {
      "action": "insert-node",
      "tree": "function: function [25449,25457]",
      "parent": "function_definition [25449,25622]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: functionCall [25458,25470]",
      "parent": "function_definition [25449,25622]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [25470,25471]",
      "parent": "function_definition [25449,25622]",
      "at": 2
    },
    {
      "action": "move-tree",
      "tree": "parameter [21027,21043]",
      "parent": "function_definition [25449,25622]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": ",: , [25485,25486]",
      "parent": "function_definition [25449,25622]",
      "at": 4
    },
    {
      "action": "insert-tree",
      "tree": "parameter [25487,25504]",
      "parent": "function_definition [25449,25622]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": "): ) [25504,25505]",
      "parent": "function_definition [25449,25622]",
      "at": 6
    },
    {
      "action": "move-tree",
      "tree": "visibility [21107,21115]",
      "parent": "function_definition [25449,25622]",
      "at": 7
    },
    {
      "action": "insert-tree",
      "tree": "return_type_definition [25515,25537]",
      "parent": "function_definition [25449,25622]",
      "at": 8
    },
    {
      "action": "insert-tree",
      "tree": "function_body [25538,25622]",
      "parent": "function_definition [25449,25622]",
      "at": 9
    },
    {
      "action": "insert-node",
      "tree": "function: function [25852,25860]",
      "parent": "function_definition [25852,26048]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: functionCall [25861,25873]",
      "parent": "function_definition [25852,26048]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [25873,25874]",
      "parent": "function_definition [25852,26048]",
      "at": 2
    },
    {
      "action": "move-tree",
      "tree": "parameter [21753,21769]",
      "parent": "function_definition [25852,26048]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": ",: , [25888,25889]",
      "parent": "function_definition [25852,26048]",
      "at": 4
    },
    {
      "action": "insert-tree",
      "tree": "parameter [25890,25907]",
      "parent": "function_definition [25852,26048]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": ",: , [25907,25908]",
      "parent": "function_definition [25852,26048]",
      "at": 6
    },
    {
      "action": "move-tree",
      "tree": "parameter [18530,18563]",
      "parent": "function_definition [25852,26048]",
      "at": 7
    },
    {
      "action": "insert-node",
      "tree": "): ) [25935,25936]",
      "parent": "function_definition [25852,26048]",
      "at": 8
    },
    {
      "action": "move-tree",
      "tree": "visibility [18571,18579]",
      "parent": "function_definition [25852,26048]",
      "at": 9
    },
    {
      "action": "insert-tree",
      "tree": "return_type_definition [25946,25968]",
      "parent": "function_definition [25852,26048]",
      "at": 10
    },
    {
      "action": "insert-tree",
      "tree": "function_body [25969,26048]",
      "parent": "function_definition [25852,26048]",
      "at": 11
    },
    {
      "action": "insert-node",
      "tree": "function: function [26423,26431]",
      "parent": "function_definition [26423,26649]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: functionCallWithValue [26432,26453]",
      "parent": "function_definition [26423,26649]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [26453,26454]",
      "parent": "function_definition [26423,26649]",
      "at": 2
    },
    {
      "action": "move-tree",
      "tree": "parameter [22734,22750]",
      "parent": "function_definition [26423,26649]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": ",: , [26468,26469]",
      "parent": "function_definition [26423,26649]",
      "at": 4
    },
    {
      "action": "insert-tree",
      "tree": "parameter [26470,26487]",
      "parent": "function_definition [26423,26649]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": ",: , [26487,26488]",
      "parent": "function_definition [26423,26649]",
      "at": 6
    },
    {
      "action": "move-tree",
      "tree": "parameter [27424,27437]",
      "parent": "function_definition [26423,26649]",
      "at": 7
    },
    {
      "action": "insert-node",
      "tree": "): ) [26502,26503]",
      "parent": "function_definition [26423,26649]",
      "at": 8
    },
    {
      "action": "move-tree",
      "tree": "visibility [18278,18286]",
      "parent": "function_definition [26423,26649]",
      "at": 9
    },
    {
      "action": "insert-tree",
      "tree": "return_type_definition [26513,26535]",
      "parent": "function_definition [26423,26649]",
      "at": 10
    },
    {
      "action": "insert-tree",
      "tree": "function_body [26536,26649]",
      "parent": "function_definition [26423,26649]",
      "at": 11
    },
    {
      "action": "insert-node",
      "tree": "function: function [26905,26913]",
      "parent": "function_definition [26905,27221]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: functionCallWithValue [26914,26935]",
      "parent": "function_definition [26905,27221]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [26935,26936]",
      "parent": "function_definition [26905,27221]",
      "at": 2
    },
    {
      "action": "move-tree",
      "tree": "parameter [21966,21982]",
      "parent": "function_definition [26905,27221]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": ",: , [26950,26951]",
      "parent": "function_definition [26905,27221]",
      "at": 4
    },
    {
      "action": "insert-tree",
      "tree": "parameter [26952,26969]",
      "parent": "function_definition [26905,27221]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": ",: , [26969,26970]",
      "parent": "function_definition [26905,27221]",
      "at": 6
    },
    {
      "action": "insert-tree",
      "tree": "parameter [26971,26984]",
      "parent": "function_definition [26905,27221]",
      "at": 7
    },
    {
      "action": "insert-node",
      "tree": ",: , [26984,26985]",
      "parent": "function_definition [26905,27221]",
      "at": 8
    },
    {
      "action": "move-tree",
      "tree": "parameter [18241,18270]",
      "parent": "function_definition [26905,27221]",
      "at": 9
    },
    {
      "action": "insert-node",
      "tree": "): ) [27012,27013]",
      "parent": "function_definition [26905,27221]",
      "at": 10
    },
    {
      "action": "move-tree",
      "tree": "visibility [22051,22059]",
      "parent": "function_definition [26905,27221]",
      "at": 11
    },
    {
      "action": "insert-tree",
      "tree": "return_type_definition [27023,27045]",
      "parent": "function_definition [26905,27221]",
      "at": 12
    },
    {
      "action": "insert-node",
      "tree": "function_body [27046,27221]",
      "parent": "function_definition [26905,27221]",
      "at": 13
    },
    {
      "action": "insert-node",
      "tree": "function: function [27229,27237]",
      "parent": "function_definition [27229,28208]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: _functionCallWithValue [27238,27260]",
      "parent": "function_definition [27229,28208]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [27260,27261]",
      "parent": "function_definition [27229,28208]",
      "at": 2
    },
    {
      "action": "move-tree",
      "tree": "parameter [23019,23039]",
      "parent": "function_definition [27229,28208]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": ",: , [27275,27276]",
      "parent": "function_definition [27229,28208]",
      "at": 4
    },
    {
      "action": "insert-tree",
      "tree": "parameter [27277,27294]",
      "parent": "function_definition [27229,28208]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": ",: , [27294,27295]",
      "parent": "function_definition [27229,28208]",
      "at": 6
    },
    {
      "action": "move-tree",
      "tree": "parameter [18510,18519]",
      "parent": "function_definition [27229,28208]",
      "at": 7
    },
    {
      "action": "insert-node",
      "tree": ",: , [27312,27313]",
      "parent": "function_definition [27229,28208]",
      "at": 8
    },
    {
      "action": "move-tree",
      "tree": "parameter [18016,18046]",
      "parent": "function_definition [27229,28208]",
      "at": 9
    },
    {
      "action": "insert-node",
      "tree": "): ) [27340,27341]",
      "parent": "function_definition [27229,28208]",
      "at": 10
    },
    {
      "action": "insert-tree",
      "tree": "visibility [27342,27349]",
      "parent": "function_definition [27229,28208]",
      "at": 11
    },
    {
      "action": "insert-tree",
      "tree": "return_type_definition [27350,27372]",
      "parent": "function_definition [27229,28208]",
      "at": 12
    },
    {
      "action": "insert-node",
      "tree": "function_body [27373,28208]",
      "parent": "function_definition [27229,28208]",
      "at": 13
    },
    {
      "action": "update-node",
      "tree": "identifier: ModularBasicToken [19916,19933]",
      "label": "Context"
    },
    {
      "action": "insert-node",
      "tree": "using: using [30288,30293]",
      "parent": "using_directive [30288,30314]",
      "at": 0
    },
    {
      "action": "insert-tree",
      "tree": "type_alias [30294,30301]",
      "parent": "using_directive [30288,30314]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "for: for [30302,30305]",
      "parent": "using_directive [30288,30314]",
      "at": 2
    },
    {
      "action": "move-tree",
      "tree": "type_name [27703,27710]",
      "parent": "using_directive [30288,30314]",
      "at": 3
    },
    {
      "action": "update-node",
      "tree": "identifier: symbol [42572,42578]",
      "label": "name"
    },
    {
      "action": "insert-node",
      "tree": "virtual: virtual [30901,30908]",
      "parent": "function_definition [30878,30938]",
      "at": 5
    },
    {
      "action": "update-node",
      "tree": "identifier: name [42474,42478]",
      "label": "symbol"
    },
    {
      "action": "insert-node",
      "tree": "virtual: virtual [31082,31089]",
      "parent": "function_definition [31057,31119]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": "function: function [31757,31765]",
      "parent": "function_definition [31757,31841]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: decimals [31766,31774]",
      "parent": "function_definition [31757,31841]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [31774,31775]",
      "parent": "function_definition [31757,31841]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "): ) [31775,31776]",
      "parent": "function_definition [31757,31841]",
      "at": 3
    },
    {
      "action": "move-tree",
      "tree": "visibility [41876,41882]",
      "parent": "function_definition [31757,31841]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "virtual: virtual [31784,31791]",
      "parent": "function_definition [31757,31841]",
      "at": 5
    },
    {
      "action": "move-tree",
      "tree": "state_mutability [18580,18584]",
      "parent": "function_definition [31757,31841]",
      "at": 6
    },
    {
      "action": "insert-tree",
      "tree": "return_type_definition [31797,31812]",
      "parent": "function_definition [31757,31841]",
      "at": 7
    },
    {
      "action": "insert-tree",
      "tree": "function_body [31813,31841]",
      "parent": "function_definition [31757,31841]",
      "at": 8
    },
    {
      "action": "insert-node",
      "tree": "function: function [32054,32062]",
      "parent": "function_definition [32054,32220]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: transfer [32063,32071]",
      "parent": "function_definition [32054,32220]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [32071,32072]",
      "parent": "function_definition [32054,32220]",
      "at": 2
    },
    {
      "action": "move-tree",
      "tree": "parameter [28575,28591]",
      "parent": "function_definition [32054,32220]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": ",: , [32089,32090]",
      "parent": "function_definition [32054,32220]",
      "at": 4
    },
    {
      "action": "insert-tree",
      "tree": "parameter [32091,32105]",
      "parent": "function_definition [32054,32220]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": "): ) [32105,32106]",
      "parent": "function_definition [32054,32220]",
      "at": 6
    },
    {
      "action": "move-tree",
      "tree": "visibility [25636,25642]",
      "parent": "function_definition [32054,32220]",
      "at": 7
    },
    {
      "action": "insert-node",
      "tree": "virtual: virtual [32114,32121]",
      "parent": "function_definition [32054,32220]",
      "at": 8
    },
    {
      "action": "move-tree",
      "tree": "return_type_definition [29009,29023]",
      "parent": "function_definition [32054,32220]",
      "at": 9
    },
    {
      "action": "insert-node",
      "tree": "function_body [32137,32220]",
      "parent": "function_definition [32054,32220]",
      "at": 10
    },
    {
      "action": "update-node",
      "tree": "identifier: transferFrom [28737,28749]",
      "label": "approve"
    },
    {
      "action": "move-tree",
      "tree": "parameter [24058,24070]",
      "parent": "function_definition [32367,32527]",
      "at": 3
    },
    {
      "action": "move-tree",
      "tree": "visibility [26188,26194]",
      "parent": "function_definition [32367,32527]",
      "at": 10
    },
    {
      "action": "insert-node",
      "tree": "virtual: virtual [32424,32431]",
      "parent": "function_definition [32367,32527]",
      "at": 8
    },
    {
      "action": "insert-node",
      "tree": "function: function [33001,33009]",
      "parent": "function_definition [33001,33311]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: transferFrom [33010,33022]",
      "parent": "function_definition [33001,33311]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [33022,33023]",
      "parent": "function_definition [33001,33311]",
      "at": 2
    },
    {
      "action": "move-tree",
      "tree": "parameter [26114,26126]",
      "parent": "function_definition [33001,33311]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": ",: , [33037,33038]",
      "parent": "function_definition [33001,33311]",
      "at": 4
    },
    {
      "action": "move-tree",
      "tree": "parameter [24081,24097]",
      "parent": "function_definition [33001,33311]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": ",: , [33056,33057]",
      "parent": "function_definition [33001,33311]",
      "at": 6
    },
    {
      "action": "insert-tree",
      "tree": "parameter [33058,33072]",
      "parent": "function_definition [33001,33311]",
      "at": 7
    },
    {
      "action": "insert-node",
      "tree": "): ) [33072,33073]",
      "parent": "function_definition [33001,33311]",
      "at": 8
    },
    {
      "action": "move-tree",
      "tree": "visibility [22778,22784]",
      "parent": "function_definition [33001,33311]",
      "at": 9
    },
    {
      "action": "insert-node",
      "tree": "virtual: virtual [33081,33088]",
      "parent": "function_definition [33001,33311]",
      "at": 10
    },
    {
      "action": "move-tree",
      "tree": "return_type_definition [22785,22799]",
      "parent": "function_definition [33001,33311]",
      "at": 11
    },
    {
      "action": "insert-node",
      "tree": "function_body [33104,33311]",
      "parent": "function_definition [33001,33311]",
      "at": 12
    },
    {
      "action": "update-node",
      "tree": "identifier: increaseApproval [21736,21752]",
      "label": "increaseAllowance"
    },
    {
      "action": "move-tree",
      "tree": "parameter [23692,23704]",
      "parent": "function_definition [33720,33936]",
      "at": 3
    },
    {
      "action": "move-tree",
      "tree": "parameter [22984,23008]",
      "parent": "function_definition [33720,33936]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": "virtual: virtual [33791,33798]",
      "parent": "function_definition [33720,33936]",
      "at": 8
    },
    {
      "action": "update-node",
      "tree": "identifier: approve [20834,20841]",
      "label": "decreaseAllowance"
    },
    {
      "action": "move-tree",
      "tree": "parameter [23715,23731]",
      "parent": "function_definition [34439,34706]",
      "at": 3
    },
    {
      "action": "move-tree",
      "tree": "parameter [22752,22776]",
      "parent": "function_definition [34439,34706]",
      "at": 6
    },
    {
      "action": "insert-node",
      "tree": "virtual: virtual [34515,34522]",
      "parent": "function_definition [34439,34706]",
      "at": 8
    },
    {
      "action": "insert-node",
      "tree": "function: function [35196,35204]",
      "parent": "function_definition [35196,35735]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: _transfer [35205,35214]",
      "parent": "function_definition [35196,35735]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [35214,35215]",
      "parent": "function_definition [35196,35735]",
      "at": 2
    },
    {
      "action": "move-tree",
      "tree": "parameter [23464,23476]",
      "parent": "function_definition [35196,35735]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": ",: , [35229,35230]",
      "parent": "function_definition [35196,35735]",
      "at": 4
    },
    {
      "action": "move-tree",
      "tree": "parameter [35578,35594]",
      "parent": "function_definition [35196,35735]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": ",: , [35248,35249]",
      "parent": "function_definition [35196,35735]",
      "at": 6
    },
    {
      "action": "insert-tree",
      "tree": "parameter [35250,35264]",
      "parent": "function_definition [35196,35735]",
      "at": 7
    },
    {
      "action": "insert-node",
      "tree": "): ) [35264,35265]",
      "parent": "function_definition [35196,35735]",
      "at": 8
    },
    {
      "action": "move-tree",
      "tree": "visibility [19122,19130]",
      "parent": "function_definition [35196,35735]",
      "at": 9
    },
    {
      "action": "insert-node",
      "tree": "virtual: virtual [35275,35282]",
      "parent": "function_definition [35196,35735]",
      "at": 10
    },
    {
      "action": "insert-node",
      "tree": "function_body [35283,35735]",
      "parent": "function_definition [35196,35735]",
      "at": 11
    },
    {
      "action": "move-tree",
      "tree": "emit_statement [30134,30173]",
      "parent": "function_body [36081,36392]",
      "at": 6
    },
    {
      "action": "move-tree",
      "tree": "emit_statement [29791,29832]",
      "parent": "function_body [36789,37140]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "function: function [37580,37588]",
      "parent": "function_definition [37580,37924]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: _approve [37589,37597]",
      "parent": "function_definition [37580,37924]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [37597,37598]",
      "parent": "function_definition [37580,37924]",
      "at": 2
    },
    {
      "action": "move-tree",
      "tree": "parameter [22957,22973]",
      "parent": "function_definition [37580,37924]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": ",: , [37611,37612]",
      "parent": "function_definition [37580,37924]",
      "at": 4
    },
    {
      "action": "move-tree",
      "tree": "parameter [23487,23503]",
      "parent": "function_definition [37580,37924]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": ",: , [37628,37629]",
      "parent": "function_definition [37580,37924]",
      "at": 6
    },
    {
      "action": "insert-tree",
      "tree": "parameter [37630,37644]",
      "parent": "function_definition [37580,37924]",
      "at": 7
    },
    {
      "action": "insert-node",
      "tree": "): ) [37644,37645]",
      "parent": "function_definition [37580,37924]",
      "at": 8
    },
    {
      "action": "move-tree",
      "tree": "visibility [19343,19351]",
      "parent": "function_definition [37580,37924]",
      "at": 9
    },
    {
      "action": "insert-node",
      "tree": "virtual: virtual [37655,37662]",
      "parent": "function_definition [37580,37924]",
      "at": 10
    },
    {
      "action": "move-tree",
      "tree": "function_body [28222,28456]",
      "parent": "function_definition [37580,37924]",
      "at": 11
    },
    {
      "action": "insert-node",
      "tree": "function: function [38577,38585]",
      "parent": "function_definition [38577,38669]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: _beforeTokenTransfer [38586,38606]",
      "parent": "function_definition [38577,38669]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [38606,38607]",
      "parent": "function_definition [38577,38669]",
      "at": 2
    },
    {
      "action": "move-tree",
      "tree": "parameter [27410,27422]",
      "parent": "function_definition [38577,38669]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": ",: , [38619,38620]",
      "parent": "function_definition [38577,38669]",
      "at": 4
    },
    {
      "action": "move-tree",
      "tree": "parameter [27818,27828]",
      "parent": "function_definition [38577,38669]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": ",: , [38631,38632]",
      "parent": "function_definition [38577,38669]",
      "at": 6
    },
    {
      "action": "insert-tree",
      "tree": "parameter [38633,38647]",
      "parent": "function_definition [38577,38669]",
      "at": 7
    },
    {
      "action": "insert-node",
      "tree": "): ) [38647,38648]",
      "parent": "function_definition [38577,38669]",
      "at": 8
    },
    {
      "action": "move-tree",
      "tree": "visibility [27795,27803]",
      "parent": "function_definition [38577,38669]",
      "at": 9
    },
    {
      "action": "insert-node",
      "tree": "virtual: virtual [38658,38665]",
      "parent": "function_definition [38577,38669]",
      "at": 10
    },
    {
      "action": "insert-tree",
      "tree": "function_body [38666,38669]",
      "parent": "function_definition [38577,38669]",
      "at": 11
    },
    {
      "action": "update-node",
      "tree": "identifier: ValTokenWithHook [33303,33319]",
      "label": "ERC20"
    },
    {
      "action": "move-tree",
      "tree": "type_name [27830,27834]",
      "parent": "state_variable_declaration [40132,40158]",
      "at": 0
    },
    {
      "action": "insert-tree",
      "tree": "visibility [40137,40143]",
      "parent": "state_variable_declaration [40132,40158]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "identifier: returnsLocked [40144,40157]",
      "parent": "state_variable_declaration [40132,40158]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "function: function [40892,40900]",
      "parent": "function_definition [40892,40973]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: lockReturns [40901,40912]",
      "parent": "function_definition [40892,40973]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [40912,40913]",
      "parent": "function_definition [40892,40973]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "): ) [40913,40914]",
      "parent": "function_definition [40892,40973]",
      "at": 3
    },
    {
      "action": "move-tree",
      "tree": "visibility [28828,28836]",
      "parent": "function_definition [40892,40973]",
      "at": 4
    },
    {
      "action": "insert-tree",
      "tree": "modifier_invocation [40924,40933]",
      "parent": "function_definition [40892,40973]",
      "at": 5
    },
    {
      "action": "insert-tree",
      "tree": "function_body [40934,40973]",
      "parent": "function_definition [40892,40973]",
      "at": 6
    },
    {
      "action": "update-node",
      "tree": "identifier: _transferFromAllArgs [35476,35496]",
      "label": "_transfer"
    },
    {
      "action": "update-node",
      "tree": "identifier: _transferAllArgs [34778,34794]",
      "label": "transferToOwner"
    },
    {
      "action": "insert-node",
      "tree": "function_body [42253,42715]",
      "parent": "function_definition [42188,42715]",
      "at": 8
    },
    {
      "action": "move-tree",
      "tree": "function_body [34912,35136]",
      "parent": "function_definition [42924,43192]",
      "at": 9
    },
    {
      "action": "move-tree",
      "tree": "expression_statement [36915,36980]",
      "parent": "function_body [43597,43884]",
      "at": 3
    },
    {
      "action": "insert-tree",
      "tree": "visibility [44067,44073]",
      "parent": "function_definition [44027,44234]",
      "at": 5
    },
    {
      "action": "move-tree",
      "tree": "state_mutability [25651,25655]",
      "parent": "function_definition [44027,44234]",
      "at": 6
    },
    {
      "action": "insert-tree",
      "tree": "return_type_definition [44079,44096]",
      "parent": "function_definition [44027,44234]",
      "at": 7
    },
    {
      "action": "insert-node",
      "tree": "function: function [45637,45645]",
      "parent": "function_definition [45637,45747]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: epochsLeft [45646,45656]",
      "parent": "function_definition [45637,45747]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [45656,45657]",
      "parent": "function_definition [45637,45747]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "): ) [45657,45658]",
      "parent": "function_definition [45637,45747]",
      "at": 3
    },
    {
      "action": "move-tree",
      "tree": "visibility [37353,37359]",
      "parent": "function_definition [45637,45747]",
      "at": 4
    },
    {
      "action": "move-tree",
      "tree": "state_mutability [37360,37364]",
      "parent": "function_definition [45637,45747]",
      "at": 5
    },
    {
      "action": "move-tree",
      "tree": "return_type_definition [37365,37382]",
      "parent": "function_definition [45637,45747]",
      "at": 6
    },
    {
      "action": "insert-node",
      "tree": "function_body [45689,45747]",
      "parent": "function_definition [45637,45747]",
      "at": 7
    },
    {
      "action": "update-node",
      "tree": "identifier: transfer [28962,28970]",
      "label": "burn"
    },
    {
      "action": "move-tree",
      "tree": "override_specifier [41883,41891]",
      "parent": "function_definition [48930,49014]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": "function: function [49105,49113]",
      "parent": "function_definition [49105,49204]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: name [49114,49118]",
      "parent": "function_definition [49105,49204]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [49118,49119]",
      "parent": "function_definition [49105,49204]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "): ) [49119,49120]",
      "parent": "function_definition [49105,49204]",
      "at": 3
    },
    {
      "action": "insert-tree",
      "tree": "visibility [49121,49127]",
      "parent": "function_definition [49105,49204]",
      "at": 4
    },
    {
      "action": "insert-tree",
      "tree": "override_specifier [49128,49136]",
      "parent": "function_definition [49105,49204]",
      "at": 5
    },
    {
      "action": "move-tree",
      "tree": "state_mutability [18287,18291]",
      "parent": "function_definition [49105,49204]",
      "at": 6
    },
    {
      "action": "insert-tree",
      "tree": "return_type_definition [49142,49165]",
      "parent": "function_definition [49105,49204]",
      "at": 7
    },
    {
      "action": "move-tree",
      "tree": "function_body [42617,42648]",
      "parent": "function_definition [49105,49204]",
      "at": 8
    },
    {
      "action": "insert-node",
      "tree": "function: function [49212,49220]",
      "parent": "function_definition [49212,49306]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: symbol [49221,49227]",
      "parent": "function_definition [49212,49306]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [49227,49228]",
      "parent": "function_definition [49212,49306]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "): ) [49228,49229]",
      "parent": "function_definition [49212,49306]",
      "at": 3
    },
    {
      "action": "insert-tree",
      "tree": "visibility [49230,49236]",
      "parent": "function_definition [49212,49306]",
      "at": 4
    },
    {
      "action": "move-tree",
      "tree": "override_specifier [34882,34890]",
      "parent": "function_definition [49212,49306]",
      "at": 5
    },
    {
      "action": "move-tree",
      "tree": "state_mutability [18063,18067]",
      "parent": "function_definition [49212,49306]",
      "at": 6
    },
    {
      "action": "insert-tree",
      "tree": "return_type_definition [49251,49274]",
      "parent": "function_definition [49212,49306]",
      "at": 7
    },
    {
      "action": "move-tree",
      "tree": "function_body [42517,42555]",
      "parent": "function_definition [49212,49306]",
      "at": 8
    },
    {
      "action": "insert-node",
      "tree": "{: { [21745,21746]",
      "parent": "function_body [21745,21781]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "return_statement [21756,21774]",
      "parent": "function_body [21745,21781]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "}: } [21780,21781]",
      "parent": "function_body [21745,21781]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "{: { [22803,22804]",
      "parent": "function_body [22803,23356]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "comment: // According to EIP-1052, 0x0 is the value returned for not-yet created accounts [22814,22894]",
      "parent": "function_body [22803,23356]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "comment: // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned [22904,22989]",
      "parent": "function_body [22803,23356]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "comment: // for accounts without code, i.e. `keccak256('')` [22999,23049]",
      "parent": "function_body [22803,23356]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "variable_declaration_statement [23059,23076]",
      "parent": "function_body [22803,23356]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "variable_declaration_statement [23086,23175]",
      "parent": "function_body [22803,23356]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": "comment: // solhint-disable-next-line no-inline-assembly [23185,23232]",
      "parent": "function_body [22803,23356]",
      "at": 6
    },
    {
      "action": "insert-tree",
      "tree": "assembly_statement [23242,23287]",
      "parent": "function_body [22803,23356]",
      "at": 7
    },
    {
      "action": "insert-tree",
      "tree": "return_statement [23297,23349]",
      "parent": "function_body [22803,23356]",
      "at": 8
    },
    {
      "action": "insert-node",
      "tree": "}: } [23355,23356]",
      "parent": "function_body [22803,23356]",
      "at": 9
    },
    {
      "action": "insert-node",
      "tree": "{: { [24362,24363]",
      "parent": "function_body [24362,24688]",
      "at": 0
    },
    {
      "action": "move-tree",
      "tree": "expression_statement [30488,30545]",
      "parent": "function_body [24362,24688]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "comment: // solhint-disable-next-line avoid-low-level-calls, avoid-call-value [24459,24527]",
      "parent": "function_body [24362,24688]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "variable_declaration_statement [24537,24592]",
      "parent": "function_body [24362,24688]",
      "at": 3
    },
    {
      "action": "insert-tree",
      "tree": "expression_statement [24602,24681]",
      "parent": "function_body [24362,24688]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "}: } [24687,24688]",
      "parent": "function_body [24362,24688]",
      "at": 5
    },
    {
      "action": "update-node",
      "tree": "identifier: _spender [21035,21043]",
      "label": "target"
    },
    {
      "action": "update-node",
      "tree": "identifier: _spender [21761,21769]",
      "label": "target"
    },
    {
      "action": "update-node",
      "tree": "identifier: divideByZeroMessage [18544,18563]",
      "label": "errorMessage"
    },
    {
      "action": "update-node",
      "tree": "identifier: _spender [22742,22750]",
      "label": "target"
    },
    {
      "action": "update-node",
      "tree": "identifier: _spender [21974,21982]",
      "label": "target"
    },
    {
      "action": "update-node",
      "tree": "identifier: overflowMessage [18255,18270]",
      "label": "errorMessage"
    },
    {
      "action": "insert-node",
      "tree": "{: { [27046,27047]",
      "parent": "function_body [27046,27221]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "expression_statement [27057,27139]",
      "parent": "function_body [27046,27221]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "return_statement [27149,27214]",
      "parent": "function_body [27046,27221]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "}: } [27220,27221]",
      "parent": "function_body [27046,27221]",
      "at": 3
    },
    {
      "action": "update-node",
      "tree": "identifier: _tokenHolder [23027,23039]",
      "label": "target"
    },
    {
      "action": "update-node",
      "tree": "identifier: b [18518,18519]",
      "label": "weiValue"
    },
    {
      "action": "update-node",
      "tree": "identifier: underflowMessage [18030,18046]",
      "label": "errorMessage"
    },
    {
      "action": "insert-node",
      "tree": "{: { [27373,27374]",
      "parent": "function_body [27373,28208]",
      "at": 0
    },
    {
      "action": "insert-tree",
      "tree": "expression_statement [27384,27445]",
      "parent": "function_body [27373,28208]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "comment: // solhint-disable-next-line avoid-low-level-calls [27457,27507]",
      "parent": "function_body [27373,28208]",
      "at": 2
    },
    {
      "action": "move-tree",
      "tree": "variable_declaration_statement [30216,30265]",
      "parent": "function_body [27373,28208]",
      "at": 3
    },
    {
      "action": "insert-tree",
      "tree": "if_statement [27606,28201]",
      "parent": "function_body [27373,28208]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "}: } [28207,28208]",
      "parent": "function_body [27373,28208]",
      "at": 5
    },
    {
      "action": "update-node",
      "tree": "identifier: ValSafeMath [19947,19958]",
      "label": "SafeMath"
    },
    {
      "action": "update-node",
      "tree": "identifier: _spender [28583,28591]",
      "label": "recipient"
    },
    {
      "action": "insert-node",
      "tree": "{: { [32137,32138]",
      "parent": "function_body [32137,32220]",
      "at": 0
    },
    {
      "action": "insert-tree",
      "tree": "expression_statement [32148,32191]",
      "parent": "function_body [32137,32220]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "return_statement [29087,29099]",
      "parent": "function_body [32137,32220]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "}: } [32219,32220]",
      "parent": "function_body [32137,32220]",
      "at": 3
    },
    {
      "action": "update-node",
      "tree": "identifier: _who [24066,24070]",
      "label": "spender"
    },
    {
      "action": "update-node",
      "tree": "identifier: _value [28814,28820]",
      "label": "amount"
    },
    {
      "action": "update-node",
      "tree": "identifier: _who [26122,26126]",
      "label": "sender"
    },
    {
      "action": "update-node",
      "tree": "identifier: _spender [24089,24097]",
      "label": "recipient"
    },
    {
      "action": "insert-node",
      "tree": "{: { [33104,33105]",
      "parent": "function_body [33104,33311]",
      "at": 0
    },
    {
      "action": "insert-tree",
      "tree": "expression_statement [33115,33152]",
      "parent": "function_body [33104,33311]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "expression_statement [33162,33282]",
      "parent": "function_body [33104,33311]",
      "at": 2
    },
    {
      "action": "move-tree",
      "tree": "return_statement [22886,22898]",
      "parent": "function_body [33104,33311]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "}: } [33310,33311]",
      "parent": "function_body [33104,33311]",
      "at": 4
    },
    {
      "action": "update-node",
      "tree": "identifier: _who [23700,23704]",
      "label": "spender"
    },
    {
      "action": "update-node",
      "tree": "identifier: _subtractedValue [22992,23008]",
      "label": "addedValue"
    },
    {
      "action": "update-node",
      "tree": "identifier: _spender [23723,23731]",
      "label": "spender"
    },
    {
      "action": "update-node",
      "tree": "identifier: _subtractedValue [22760,22776]",
      "label": "subtractedValue"
    },
    {
      "action": "update-node",
      "tree": "identifier: _who [23472,23476]",
      "label": "sender"
    },
    {
      "action": "update-node",
      "tree": "identifier: _spender [35586,35594]",
      "label": "recipient"
    },
    {
      "action": "insert-node",
      "tree": "{: { [35283,35284]",
      "parent": "function_body [35283,35735]",
      "at": 0
    },
    {
      "action": "move-tree",
      "tree": "expression_statement [23815,23894]",
      "parent": "function_body [35283,35735]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "expression_statement [19214,19277]",
      "parent": "function_body [35283,35735]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "expression_statement [35459,35507]",
      "parent": "function_body [35283,35735]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "expression_statement [35519,35611]",
      "parent": "function_body [35283,35735]",
      "at": 4
    },
    {
      "action": "insert-tree",
      "tree": "expression_statement [35621,35677]",
      "parent": "function_body [35283,35735]",
      "at": 5
    },
    {
      "action": "insert-tree",
      "tree": "emit_statement [35687,35728]",
      "parent": "function_body [35283,35735]",
      "at": 6
    },
    {
      "action": "insert-node",
      "tree": "}: } [35734,35735]",
      "parent": "function_body [35283,35735]",
      "at": 7
    },
    {
      "action": "update-node",
      "tree": "identifier: _to [30085,30088]",
      "label": "account"
    },
    {
      "action": "update-node",
      "tree": "identifier: _value [30098,30104]",
      "label": "amount"
    },
    {
      "action": "insert-node",
      "tree": "expression_statement [36092,36158]",
      "parent": "function_body [36081,36392]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "expression_statement [36170,36220]",
      "parent": "function_body [36081,36392]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "expression_statement [36280,36332]",
      "parent": "function_body [36081,36392]",
      "at": 4
    },
    {
      "action": "update-node",
      "tree": "identifier: _from [29684,29689]",
      "label": "account"
    },
    {
      "action": "update-node",
      "tree": "identifier: _value [29699,29705]",
      "label": "amount"
    },
    {
      "action": "move-tree",
      "tree": "expression_statement [23556,23644]",
      "parent": "function_body [36789,37140]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "expression_statement [36880,36930]",
      "parent": "function_body [36789,37140]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "expression_statement [36942,37032]",
      "parent": "function_body [36789,37140]",
      "at": 3
    },
    {
      "action": "update-node",
      "tree": "identifier: _spender [22965,22973]",
      "label": "owner"
    },
    {
      "action": "update-node",
      "tree": "identifier: _spender [23495,23503]",
      "label": "spender"
    },
    {
      "action": "move-tree",
      "tree": "expression_statement [19388,19449]",
      "parent": "function_body [37663,37924]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "expression_statement [28382,28426]",
      "parent": "function_body [37663,37924]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "emit_statement [37879,37917]",
      "parent": "function_body [37663,37924]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "comment: // transfers to owner proceed as normal when returns allowed [41591,41651]",
      "parent": "function_body [41508,41977]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "if_statement [41661,41776]",
      "parent": "function_body [41508,41977]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "comment: // check if enough unlocked balance to transfer [41786,41833]",
      "parent": "function_body [41508,41977]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "{: { [42253,42254]",
      "parent": "function_body [42253,42715]",
      "at": 0
    },
    {
      "action": "move-tree",
      "tree": "variable_declaration_statement [37448,37502]",
      "parent": "function_body [42253,42715]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "if_statement [42318,42659]",
      "parent": "function_body [42253,42715]",
      "at": 2
    },
    {
      "action": "move-tree",
      "tree": "expression_statement [35086,35129]",
      "parent": "function_body [42253,42715]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "}: } [42714,42715]",
      "parent": "function_body [42253,42715]",
      "at": 4
    },
    {
      "action": "move-tree",
      "tree": "expression_statement [36198,36275]",
      "parent": "function_body [42988,43192]",
      "at": 2
    },
    {
      "action": "update-node",
      "tree": "comment: // set distribution to lockup amount [36992,37028]",
      "label": "// add amount to locked distribution"
    },
    {
      "action": "insert-node",
      "tree": "{: { [45689,45690]",
      "parent": "function_body [45689,45747]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "return_statement [45700,45740]",
      "parent": "function_body [45689,45747]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "}: } [45746,45747]",
      "parent": "function_body [45689,45747]",
      "at": 2
    },
    {
      "action": "update-node",
      "tree": "identifier: _value [28992,28998]",
      "label": "amount"
    },
    {
      "action": "insert-node",
      "tree": "return: return [21756,21762]",
      "parent": "return_statement [21756,21774]",
      "at": 0
    },
    {
      "action": "move-tree",
      "tree": "member_expression [25724,25734]",
      "parent": "return_statement [21756,21774]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "variable_declaration [23059,23075]",
      "parent": "variable_declaration_statement [23059,23076]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "variable_declaration [23086,23105]",
      "parent": "variable_declaration_statement [23086,23175]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "=: = [23106,23107]",
      "parent": "variable_declaration_statement [23086,23175]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "number_literal: 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 [23108,23174]",
      "parent": "variable_declaration_statement [23086,23175]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "variable_declaration_tuple [24537,24553]",
      "parent": "variable_declaration_statement [24537,24592]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "=: = [24554,24555]",
      "parent": "variable_declaration_statement [24537,24592]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "call_expression [24556,24591]",
      "parent": "variable_declaration_statement [24537,24592]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "call_expression [27057,27138]",
      "parent": "expression_statement [27057,27139]",
      "at": 0
    },
    {
      "action": "move-tree",
      "tree": ",: , [30227,30228]",
      "parent": "variable_declaration_tuple [27517,27556]",
      "at": 3
    },
    {
      "action": "move-tree",
      "tree": "variable_declaration [30217,30227]",
      "parent": "variable_declaration_tuple [27517,27556]",
      "at": 3
    },
    {
      "action": "move-tree",
      "tree": "call_argument [28884,28889]",
      "parent": "call_expression [32458,32497]",
      "at": 3
    },
    {
      "action": "move-tree",
      "tree": "call_argument [28891,28894]",
      "parent": "call_expression [32458,32497]",
      "at": 5
    },
    {
      "action": "move-tree",
      "tree": "call_argument [21850,21858]",
      "parent": "call_expression [33825,33906]",
      "at": 3
    },
    {
      "action": "move-tree",
      "tree": "call_argument [20925,20933]",
      "parent": "call_expression [34549,34676]",
      "at": 3
    },
    {
      "action": "move-tree",
      "tree": "call_expression [23830,23893]",
      "parent": "expression_statement [35294,35365]",
      "at": 0
    },
    {
      "action": "move-tree",
      "tree": "call_expression [19232,19276]",
      "parent": "expression_statement [35375,35447]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "assignment_expression [35519,35610]",
      "parent": "expression_statement [35519,35611]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "call_expression [36092,36157]",
      "parent": "expression_statement [36092,36158]",
      "at": 0
    },
    {
      "action": "move-tree",
      "tree": "call_expression [23584,23643]",
      "parent": "expression_statement [36800,36868]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "assignment_expression [36942,37031]",
      "parent": "expression_statement [36942,37032]",
      "at": 0
    },
    {
      "action": "move-tree",
      "tree": "call_expression [19397,19448]",
      "parent": "expression_statement [37674,37743]",
      "at": 0
    },
    {
      "action": "insert-tree",
      "tree": "assignment_expression [37834,37868]",
      "parent": "expression_statement [37834,37869]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "if: if [41661,41663]",
      "parent": "if_statement [41661,41776]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "(: ( [41664,41665]",
      "parent": "if_statement [41661,41776]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "binary_expression [41665,41696]",
      "parent": "if_statement [41661,41776]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "): ) [41696,41697]",
      "parent": "if_statement [41661,41776]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "block_statement [41698,41776]",
      "parent": "if_statement [41661,41776]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "call_expression [42283,42305]",
      "parent": "variable_declaration_statement [42264,42306]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "if: if [42318,42320]",
      "parent": "if_statement [42318,42659]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "(: ( [42321,42322]",
      "parent": "if_statement [42318,42659]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "binary_expression [42322,42339]",
      "parent": "if_statement [42318,42659]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "): ) [42339,42340]",
      "parent": "if_statement [42318,42659]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "block_statement [42341,42659]",
      "parent": "if_statement [42318,42659]",
      "at": 4
    },
    {
      "action": "move-tree",
      "tree": "call_expression [36321,36347]",
      "parent": "expression_statement [43158,43185]",
      "at": 0
    },
    {
      "action": "move-tree",
      "tree": "assignment_expression [37038,37069]",
      "parent": "expression_statement [43731,43791]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "return: return [45700,45706]",
      "parent": "return_statement [45700,45740]",
      "at": 0
    },
    {
      "action": "move-tree",
      "tree": "call_expression [37469,37501]",
      "parent": "return_statement [45700,45740]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "type_name [24373,24380]",
      "parent": "variable_declaration [23059,23075]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: codehash [23067,23075]",
      "parent": "variable_declaration [23059,23075]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "type_name [26137,26144]",
      "parent": "variable_declaration [23086,23105]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: accountHash [23094,23105]",
      "parent": "variable_declaration [23086,23105]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "identifier: require [24373,24380]",
      "parent": "call_expression [24373,24446]",
      "at": 0
    },
    {
      "action": "insert-tree",
      "tree": "call_argument [24414,24445]",
      "parent": "call_expression [24373,24446]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "(: ( [24537,24538]",
      "parent": "variable_declaration_tuple [24537,24553]",
      "at": 0
    },
    {
      "action": "move-tree",
      "tree": "variable_declaration [29348,29360]",
      "parent": "variable_declaration_tuple [24537,24553]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": ",: , [24550,24551]",
      "parent": "variable_declaration_tuple [24537,24553]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "): ) [24552,24553]",
      "parent": "variable_declaration_tuple [24537,24553]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "identifier: require [27057,27064]",
      "parent": "call_expression [27057,27138]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "(: ( [27064,27065]",
      "parent": "call_expression [27057,27138]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "call_argument [27065,27095]",
      "parent": "call_expression [27057,27138]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": ",: , [27095,27096]",
      "parent": "call_expression [27057,27138]",
      "at": 3
    },
    {
      "action": "insert-tree",
      "tree": "call_argument [27097,27137]",
      "parent": "call_expression [27057,27138]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "): ) [27137,27138]",
      "parent": "call_expression [27057,27138]",
      "at": 5
    },
    {
      "action": "insert-tree",
      "tree": "struct_expression [27559,27589]",
      "parent": "call_expression [27559,27595]",
      "at": 0
    },
    {
      "action": "update-node",
      "tree": "identifier: _transferFromAllArgs [28863,28883]",
      "label": "_approve"
    },
    {
      "action": "insert-tree",
      "tree": "call_argument [32467,32479]",
      "parent": "call_expression [32458,32497]",
      "at": 2
    },
    {
      "action": "update-node",
      "tree": "identifier: _increaseApprovalAllArgs [21825,21849]",
      "label": "_approve"
    },
    {
      "action": "insert-tree",
      "tree": "call_argument [33834,33846]",
      "parent": "call_expression [33825,33906]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "call_argument [33857,33905]",
      "parent": "call_expression [33825,33906]",
      "at": 6
    },
    {
      "action": "update-node",
      "tree": "identifier: _approveAllArgs [20909,20924]",
      "label": "_approve"
    },
    {
      "action": "insert-tree",
      "tree": "call_argument [34558,34570]",
      "parent": "call_expression [34549,34676]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "call_argument [34581,34675]",
      "parent": "call_expression [34549,34676]",
      "at": 6
    },
    {
      "action": "insert-node",
      "tree": "identifier: require [35294,35301]",
      "parent": "call_expression [35294,35364]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: require [35375,35382]",
      "parent": "call_expression [35375,35446]",
      "at": 0
    },
    {
      "action": "insert-tree",
      "tree": "array_access [35519,35536]",
      "parent": "assignment_expression [35519,35610]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "=: = [35537,35538]",
      "parent": "assignment_expression [35519,35610]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "call_expression [35539,35610]",
      "parent": "assignment_expression [35519,35610]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "identifier: require [36092,36099]",
      "parent": "call_expression [36092,36157]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "(: ( [36099,36100]",
      "parent": "call_expression [36092,36157]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "call_argument [36100,36121]",
      "parent": "call_expression [36092,36157]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": ",: , [36121,36122]",
      "parent": "call_expression [36092,36157]",
      "at": 3
    },
    {
      "action": "move-tree",
      "tree": "call_argument [36952,36978]",
      "parent": "call_expression [36092,36157]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "): ) [36156,36157]",
      "parent": "call_expression [36092,36157]",
      "at": 5
    },
    {
      "action": "update-node",
      "tree": "identifier: _to [30160,30163]",
      "label": "account"
    },
    {
      "action": "update-node",
      "tree": "identifier: _value [30165,30171]",
      "label": "amount"
    },
    {
      "action": "insert-node",
      "tree": "identifier: require [36800,36807]",
      "parent": "call_expression [36800,36867]",
      "at": 0
    },
    {
      "action": "insert-tree",
      "tree": "array_access [36942,36960]",
      "parent": "assignment_expression [36942,37031]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "=: = [36961,36962]",
      "parent": "assignment_expression [36942,37031]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "call_expression [36963,37031]",
      "parent": "assignment_expression [36942,37031]",
      "at": 2
    },
    {
      "action": "update-node",
      "tree": "identifier: resultSupply_ [29931,29944]",
      "label": "totalSupply"
    },
    {
      "action": "update-node",
      "tree": "identifier: _from [29805,29810]",
      "label": "account"
    },
    {
      "action": "update-node",
      "tree": "identifier: _value [29824,29830]",
      "label": "amount"
    },
    {
      "action": "insert-node",
      "tree": "identifier: require [37674,37681]",
      "parent": "call_expression [37674,37742]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "{: { [41698,41699]",
      "parent": "block_statement [41698,41776]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "expression_statement [41713,41744]",
      "parent": "block_statement [41698,41776]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "return_statement [41758,41765]",
      "parent": "block_statement [41698,41776]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "}: } [41775,41776]",
      "parent": "block_statement [41698,41776]",
      "at": 3
    },
    {
      "action": "update-node",
      "tree": "identifier: epochsLeft [37456,37466]",
      "label": "unlocked"
    },
    {
      "action": "insert-node",
      "tree": "identifier: unlockedBalance [42283,42298]",
      "parent": "call_expression [42283,42305]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "(: ( [42298,42299]",
      "parent": "call_expression [42283,42305]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "call_argument [29279,29284]",
      "parent": "call_expression [42283,42305]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "): ) [42304,42305]",
      "parent": "call_expression [42283,42305]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "{: { [42341,42342]",
      "parent": "block_statement [42341,42659]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "comment: // We want to have unlocked = value, i.e. [42356,42397]",
      "parent": "block_statement [42341,42659]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "comment: // value = balance - distribution * epochsLeft / totalEpochs [42411,42471]",
      "parent": "block_statement [42341,42659]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "comment: // distribution = (balance - value) * totalEpochs / epochsLeft [42485,42547]",
      "parent": "block_statement [42341,42659]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "expression_statement [42561,42648]",
      "parent": "block_statement [42341,42659]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "}: } [42658,42659]",
      "parent": "block_statement [42341,42659]",
      "at": 5
    },
    {
      "action": "move-tree",
      "tree": "call_expression [36915,36979]",
      "parent": "assignment_expression [43731,43790]",
      "at": 2
    },
    {
      "action": "update-node",
      "tree": "identifier: _transferAllArgs [37116,37132]",
      "label": "_transfer"
    },
    {
      "action": "update-node",
      "tree": "identifier: _transferAllArgs [29035,29051]",
      "label": "_burn"
    },
    {
      "action": "insert-node",
      "tree": "binary_expression [24381,24412]",
      "parent": "call_argument [24381,24412]",
      "at": 0
    },
    {
      "action": "update-node",
      "tree": "identifier: hasHook [29353,29360]",
      "label": "success"
    },
    {
      "action": "insert-node",
      "tree": "binary_expression [27065,27095]",
      "parent": "call_argument [27065,27095]",
      "at": 0
    },
    {
      "action": "update-node",
      "tree": "identifier: hook [30234,30238]",
      "label": "success"
    },
    {
      "action": "insert-node",
      "tree": "memory: memory [27538,27544]",
      "parent": "variable_declaration [27532,27555]",
      "at": 1
    },
    {
      "action": "update-node",
      "tree": "identifier: to [30225,30227]",
      "label": "returndata"
    },
    {
      "action": "update-node",
      "tree": "identifier: _to [30260,30263]",
      "label": "data"
    },
    {
      "action": "update-node",
      "tree": "identifier: _from [28884,28889]",
      "label": "spender"
    },
    {
      "action": "update-node",
      "tree": "identifier: _to [28891,28894]",
      "label": "amount"
    },
    {
      "action": "update-node",
      "tree": "identifier: _spender [21850,21858]",
      "label": "spender"
    },
    {
      "action": "update-node",
      "tree": "identifier: _spender [20925,20933]",
      "label": "spender"
    },
    {
      "action": "insert-tree",
      "tree": "binary_expression [35302,35322]",
      "parent": "call_argument [35302,35322]",
      "at": 0
    },
    {
      "action": "insert-tree",
      "tree": "binary_expression [35383,35406]",
      "parent": "call_argument [35383,35406]",
      "at": 0
    },
    {
      "action": "insert-tree",
      "tree": "member_expression [35539,35560]",
      "parent": "call_expression [35539,35610]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "(: ( [35560,35561]",
      "parent": "call_expression [35539,35610]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "call_argument [35561,35567]",
      "parent": "call_expression [35539,35610]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": ",: , [35567,35568]",
      "parent": "call_expression [35539,35610]",
      "at": 3
    },
    {
      "action": "move-tree",
      "tree": "call_argument [30429,30451]",
      "parent": "call_expression [35539,35610]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "): ) [35609,35610]",
      "parent": "call_expression [35539,35610]",
      "at": 5
    },
    {
      "action": "insert-tree",
      "tree": "binary_expression [36808,36829]",
      "parent": "call_argument [36808,36829]",
      "at": 0
    },
    {
      "action": "insert-tree",
      "tree": "member_expression [36963,36985]",
      "parent": "call_expression [36963,37031]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "(: ( [36985,36986]",
      "parent": "call_expression [36963,37031]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "call_argument [36986,36992]",
      "parent": "call_expression [36963,37031]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": ",: , [36992,36993]",
      "parent": "call_expression [36963,37031]",
      "at": 3
    },
    {
      "action": "move-tree",
      "tree": "call_argument [29971,30007]",
      "parent": "call_expression [36963,37031]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "): ) [37030,37031]",
      "parent": "call_expression [36963,37031]",
      "at": 5
    },
    {
      "action": "insert-tree",
      "tree": "binary_expression [37682,37701]",
      "parent": "call_argument [37682,37701]",
      "at": 0
    },
    {
      "action": "move-tree",
      "tree": "binary_expression [28347,28365]",
      "parent": "call_argument [37761,37782]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "call_expression [41713,41743]",
      "parent": "expression_statement [41713,41744]",
      "at": 0
    },
    {
      "action": "update-node",
      "tree": "identifier: _transferFromAllArgs [35800,35820]",
      "label": "_transfer"
    },
    {
      "action": "insert-node",
      "tree": "assignment_expression [42561,42647]",
      "parent": "expression_statement [42561,42648]",
      "at": 0
    },
    {
      "action": "update-node",
      "tree": "identifier: _transferAllArgs [35092,35108]",
      "label": "_transfer"
    },
    {
      "action": "update-node",
      "tree": "identifier: _to [35116,35119]",
      "label": "owner_"
    },
    {
      "action": "insert-node",
      "tree": "member_expression [43756,43782]",
      "parent": "call_expression [43756,43790]",
      "at": 0
    },
    {
      "action": "update-node",
      "tree": "identifier: _to [29064,29067]",
      "label": "amount"
    },
    {
      "action": "insert-node",
      "tree": "member_expression [24381,24402]",
      "parent": "binary_expression [24381,24412]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": ">=: >= [24403,24405]",
      "parent": "binary_expression [24381,24412]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "identifier: amount [24406,24412]",
      "parent": "binary_expression [24381,24412]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "member_expression [27065,27086]",
      "parent": "binary_expression [27065,27095]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": ">=: >= [27087,27089]",
      "parent": "binary_expression [27065,27095]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "identifier: value [27090,27095]",
      "parent": "binary_expression [27065,27095]",
      "at": 2
    },
    {
      "action": "update-node",
      "tree": "identifier: _value [30421,30427]",
      "label": "amount"
    },
    {
      "action": "update-node",
      "tree": "identifier: _value [29963,29969]",
      "label": "amount"
    },
    {
      "action": "update-node",
      "tree": "identifier: from [28347,28351]",
      "label": "spender"
    },
    {
      "action": "insert-node",
      "tree": "identifier: transferToOwner [41713,41728]",
      "parent": "call_expression [41713,41743]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "(: ( [41728,41729]",
      "parent": "call_expression [41713,41743]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "call_argument [29620,29625]",
      "parent": "call_expression [41713,41743]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": ",: , [41734,41735]",
      "parent": "call_expression [41713,41743]",
      "at": 3
    },
    {
      "action": "move-tree",
      "tree": "call_argument [30537,30543]",
      "parent": "call_expression [41713,41743]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "): ) [41742,41743]",
      "parent": "call_expression [41713,41743]",
      "at": 5
    },
    {
      "action": "insert-tree",
      "tree": "array_access [42561,42580]",
      "parent": "assignment_expression [42561,42647]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "=: = [42581,42582]",
      "parent": "assignment_expression [42561,42647]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "call_expression [42583,42647]",
      "parent": "assignment_expression [42561,42647]",
      "at": 2
    },
    {
      "action": "move-tree",
      "tree": "array_access [36923,36945]",
      "parent": "member_expression [43756,43782]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": ".: . [43778,43779]",
      "parent": "member_expression [43756,43782]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "identifier: add [43779,43782]",
      "parent": "member_expression [43756,43782]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "identifier: amount [43783,43789]",
      "parent": "call_argument [43783,43789]",
      "at": 0
    },
    {
      "action": "move-tree",
      "tree": "type_cast_expression [30523,30535]",
      "parent": "member_expression [24381,24402]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": ".: . [24394,24395]",
      "parent": "member_expression [24381,24402]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "identifier: balance [24395,24402]",
      "parent": "member_expression [24381,24402]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "type_cast_expression [27065,27078]",
      "parent": "member_expression [27065,27086]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": ".: . [27078,27079]",
      "parent": "member_expression [27065,27086]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "identifier: balance [27079,27086]",
      "parent": "member_expression [27065,27086]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "bytes: bytes [27532,27537]",
      "parent": "primitive_type [27532,27537]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "member_expression [42583,42633]",
      "parent": "call_expression [42583,42647]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "(: ( [42633,42634]",
      "parent": "call_expression [42583,42647]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "call_argument [42634,42646]",
      "parent": "call_expression [42583,42647]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "): ) [42646,42647]",
      "parent": "call_expression [42583,42647]",
      "at": 3
    },
    {
      "action": "insert-tree",
      "tree": "call_expression [44195,44207]",
      "parent": "call_argument [44195,44207]",
      "at": 0
    },
    {
      "action": "move-tree",
      "tree": "primitive_type [25738,25745]",
      "parent": "type_cast_expression [27065,27078]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "(: ( [27072,27073]",
      "parent": "type_cast_expression [27065,27078]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "call_argument [27073,27077]",
      "parent": "type_cast_expression [27065,27078]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "): ) [27077,27078]",
      "parent": "type_cast_expression [27065,27078]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "call_expression [42583,42629]",
      "parent": "member_expression [42583,42633]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": ".: . [42629,42630]",
      "parent": "member_expression [42583,42633]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "identifier: div [42630,42633]",
      "parent": "member_expression [42583,42633]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "identifier: this [24389,24393]",
      "parent": "call_argument [24389,24393]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "member_expression [42583,42615]",
      "parent": "call_expression [42583,42629]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "(: ( [42615,42616]",
      "parent": "call_expression [42583,42629]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "call_argument [42616,42628]",
      "parent": "call_expression [42583,42629]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "): ) [42628,42629]",
      "parent": "call_expression [42583,42629]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "call_expression [42583,42611]",
      "parent": "member_expression [42583,42615]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": ".: . [42611,42612]",
      "parent": "member_expression [42583,42615]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "identifier: mul [42612,42615]",
      "parent": "member_expression [42583,42615]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "member_expression [42583,42603]",
      "parent": "call_expression [42583,42611]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "(: ( [42603,42604]",
      "parent": "call_expression [42583,42611]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "call_argument [29627,29633]",
      "parent": "call_expression [42583,42611]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "): ) [42610,42611]",
      "parent": "call_expression [42583,42611]",
      "at": 3
    },
    {
      "action": "delete-tree",
      "tree": "pragma_directive [8263,8286]"
    },
    {
      "action": "delete-tree",
      "tree": "pragma_directive [15517,15540]"
    },
    {
      "action": "delete-tree",
      "tree": "pragma_directive [17513,17536]"
    },
    {
      "action": "delete-tree",
      "tree": "pragma_directive [18740,18763]"
    },
    {
      "action": "delete-node",
      "tree": "contract: contract [18903,18911]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: ModularBasicToken [18912,18929]"
    },
    {
      "action": "delete-node",
      "tree": "is: is [18930,18932]"
    },
    {
      "action": "delete-node",
      "tree": "{: { [18946,18947]"
    },
    {
      "action": "delete-tree",
      "tree": "using_directive [18953,18983]"
    },
    {
      "action": "delete-node",
      "tree": "function: function [19071,19079]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: _addBalance [19080,19091]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [19091,19092]"
    },
    {
      "action": "delete-tree",
      "tree": "parameter [19092,19104]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [19104,19105]"
    },
    {
      "action": "delete-tree",
      "tree": "parameter [19106,19120]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [19120,19121]"
    },
    {
      "action": "delete-tree",
      "tree": "return_type_definition [19131,19161]"
    },
    {
      "action": "delete-node",
      "tree": "{: { [19162,19163]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [19173,19204]"
    },
    {
      "action": "delete-node",
      "tree": "}: } [19283,19284]"
    },
    {
      "action": "delete-node",
      "tree": "function_body [19162,19284]"
    },
    {
      "action": "delete-node",
      "tree": "function_definition [19071,19284]"
    },
    {
      "action": "delete-node",
      "tree": "function: function [19292,19300]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: _subBalance [19301,19312]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [19312,19313]"
    },
    {
      "action": "delete-tree",
      "tree": "parameter [19313,19325]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [19325,19326]"
    },
    {
      "action": "delete-tree",
      "tree": "parameter [19327,19341]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [19341,19342]"
    },
    {
      "action": "delete-tree",
      "tree": "return_type_definition [19352,19376]"
    },
    {
      "action": "delete-node",
      "tree": "{: { [19377,19378]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [19459,19484]"
    },
    {
      "action": "delete-node",
      "tree": "}: } [19490,19491]"
    },
    {
      "action": "delete-node",
      "tree": "function_body [19377,19491]"
    },
    {
      "action": "delete-node",
      "tree": "function_definition [19292,19491]"
    },
    {
      "action": "delete-node",
      "tree": "function: function [19499,19507]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: _setBalance [19508,19519]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [19519,19520]"
    },
    {
      "action": "delete-tree",
      "tree": "parameter [19520,19532]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [19532,19533]"
    },
    {
      "action": "delete-tree",
      "tree": "parameter [19534,19548]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [19548,19549]"
    },
    {
      "action": "delete-tree",
      "tree": "function_body [19559,19602]"
    },
    {
      "action": "delete-node",
      "tree": "function_definition [19499,19602]"
    },
    {
      "action": "delete-node",
      "tree": "}: } [19604,19605]"
    },
    {
      "action": "delete-node",
      "tree": "contract_body [18946,19605]"
    },
    {
      "action": "delete-node",
      "tree": "contract_declaration [18903,19605]"
    },
    {
      "action": "delete-node",
      "tree": "abstract: abstract [24285,24293]"
    },
    {
      "action": "delete-node",
      "tree": "contract: contract [24294,24302]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: RegistrySubscriber [24303,24321]"
    },
    {
      "action": "delete-node",
      "tree": "is: is [24322,24324]"
    },
    {
      "action": "delete-tree",
      "tree": "inheritance_specifier [24325,24337]"
    },
    {
      "action": "delete-node",
      "tree": "{: { [24338,24339]"
    },
    {
      "action": "delete-node",
      "tree": "comment: // Registry Attributes [24345,24367]"
    },
    {
      "action": "delete-node",
      "tree": "constant: constant [24381,24389]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: PASSED_KYCAML [24390,24403]"
    },
    {
      "action": "delete-node",
      "tree": "=: = [24404,24405]"
    },
    {
      "action": "delete-tree",
      "tree": "string_literal [24406,24424]"
    },
    {
      "action": "delete-node",
      "tree": "state_variable_declaration [24373,24425]"
    },
    {
      "action": "delete-tree",
      "tree": "state_variable_declaration [24431,24488]"
    },
    {
      "action": "delete-tree",
      "tree": "state_variable_declaration [24494,24592]"
    },
    {
      "action": "delete-tree",
      "tree": "state_variable_declaration [24598,24704]"
    },
    {
      "action": "delete-node",
      "tree": "comment: // attributes Bitmasks [24712,24734]"
    },
    {
      "action": "delete-tree",
      "tree": "state_variable_declaration [24740,24846]"
    },
    {
      "action": "delete-tree",
      "tree": "state_variable_declaration [24852,24962]"
    },
    {
      "action": "delete-tree",
      "tree": "state_variable_declaration [24968,25066]"
    },
    {
      "action": "delete-tree",
      "tree": "state_variable_declaration [25072,25174]"
    },
    {
      "action": "delete-tree",
      "tree": "state_variable_declaration [25180,25282]"
    },
    {
      "action": "delete-tree",
      "tree": "state_variable_declaration [25288,25394]"
    },
    {
      "action": "delete-tree",
      "tree": "state_variable_declaration [25400,25499]"
    },
    {
      "action": "delete-tree",
      "tree": "state_variable_declaration [25505,25608]"
    },
    {
      "action": "delete-node",
      "tree": "function: function [25616,25624]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: registry [25625,25633]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [25633,25634]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [25634,25635]"
    },
    {
      "action": "delete-node",
      "tree": "virtual: virtual [25643,25650]"
    },
    {
      "action": "delete-tree",
      "tree": "return_type_definition [25656,25674]"
    },
    {
      "action": "delete-node",
      "tree": "function_definition [25616,25675]"
    },
    {
      "action": "delete-node",
      "tree": "modifier: modifier [25683,25691]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: onlyRegistry [25692,25704]"
    },
    {
      "action": "delete-node",
      "tree": "{: { [25705,25706]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: require [25716,25723]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [25723,25724]"
    },
    {
      "action": "delete-node",
      "tree": "==: == [25735,25737]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [25745,25746]"
    },
    {
      "action": "delete-tree",
      "tree": "call_argument [25746,25756]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [25756,25757]"
    },
    {
      "action": "delete-node",
      "tree": "type_cast_expression [25738,25757]"
    },
    {
      "action": "delete-node",
      "tree": "binary_expression [25724,25757]"
    },
    {
      "action": "delete-node",
      "tree": "call_argument [25724,25757]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [25757,25758]"
    },
    {
      "action": "delete-node",
      "tree": "call_expression [25716,25758]"
    },
    {
      "action": "delete-node",
      "tree": "expression_statement [25716,25759]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [25769,25771]"
    },
    {
      "action": "delete-node",
      "tree": "}: } [25777,25778]"
    },
    {
      "action": "delete-node",
      "tree": "function_body [25705,25778]"
    },
    {
      "action": "delete-node",
      "tree": "modifier_definition [25683,25778]"
    },
    {
      "action": "delete-node",
      "tree": "comment: /**         Attributes are set per autosweep account         The layout of attributes is detailed here         lower bytes -> upper bytes         [0, 20)  recipient address         [29, 30) REGISTERED_CONTRACT         [30, 31) PASSED_KYCAML         [31, 32) BLACKLISTED     */ [25786,26070]"
    },
    {
      "action": "delete-node",
      "tree": "function: function [26076,26084]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: syncAttributeValue [26085,26103]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [26103,26104]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [26126,26127]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: _attribute [26145,26155]"
    },
    {
      "action": "delete-node",
      "tree": "parameter [26137,26155]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [26155,26156]"
    },
    {
      "action": "delete-tree",
      "tree": "parameter [26166,26180]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [26186,26187]"
    },
    {
      "action": "delete-tree",
      "tree": "modifier_invocation [26195,26207]"
    },
    {
      "action": "delete-tree",
      "tree": "function_body [26208,27264]"
    },
    {
      "action": "delete-node",
      "tree": "function_definition [26076,27264]"
    },
    {
      "action": "delete-node",
      "tree": "}: } [27266,27267]"
    },
    {
      "action": "delete-node",
      "tree": "contract_body [24338,27267]"
    },
    {
      "action": "delete-node",
      "tree": "contract_declaration [24285,27267]"
    },
    {
      "action": "delete-node",
      "tree": "interface: interface [27353,27362]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: TrueCoinReceiver [27363,27379]"
    },
    {
      "action": "delete-node",
      "tree": "{: { [27380,27381]"
    },
    {
      "action": "delete-node",
      "tree": "function: function [27387,27395]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: tokenFallback [27396,27409]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [27409,27410]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [27422,27423]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [27437,27438]"
    },
    {
      "action": "delete-tree",
      "tree": "visibility [27439,27447]"
    },
    {
      "action": "delete-node",
      "tree": "function_definition [27387,27448]"
    },
    {
      "action": "delete-node",
      "tree": "}: } [27450,27451]"
    },
    {
      "action": "delete-node",
      "tree": "contract_body [27380,27451]"
    },
    {
      "action": "delete-node",
      "tree": "interface_declaration [27353,27451]"
    },
    {
      "action": "delete-node",
      "tree": "abstract: abstract [27543,27551]"
    },
    {
      "action": "delete-node",
      "tree": "contract: contract [27552,27560]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: ValTokenWithHook [27561,27577]"
    },
    {
      "action": "delete-node",
      "tree": "is: is [27578,27580]"
    },
    {
      "action": "delete-tree",
      "tree": "inheritance_specifier [27581,27601]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [27601,27602]"
    },
    {
      "action": "delete-tree",
      "tree": "inheritance_specifier [27603,27621]"
    },
    {
      "action": "delete-node",
      "tree": "{: { [27622,27623]"
    },
    {
      "action": "delete-tree",
      "tree": "event_definition [27629,27686]"
    },
    {
      "action": "delete-node",
      "tree": "event: event [27692,27697]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: Mint [27698,27702]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [27702,27703]"
    },
    {
      "action": "delete-node",
      "tree": "indexed: indexed [27711,27718]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: to [27719,27721]"
    },
    {
      "action": "delete-node",
      "tree": "event_paramater [27703,27721]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [27721,27722]"
    },
    {
      "action": "delete-tree",
      "tree": "event_paramater [27723,27745]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [27745,27746]"
    },
    {
      "action": "delete-node",
      "tree": "event_definition [27692,27747]"
    },
    {
      "action": "delete-node",
      "tree": "function: function [27755,27763]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: _resolveRecipient [27764,27781]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [27781,27782]"
    },
    {
      "action": "delete-tree",
      "tree": "parameter [27782,27793]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [27793,27794]"
    },
    {
      "action": "delete-node",
      "tree": "returns: returns [27809,27816]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [27817,27818]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [27828,27829]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: hook [27835,27839]"
    },
    {
      "action": "delete-node",
      "tree": "parameter [27830,27839]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [27839,27840]"
    },
    {
      "action": "delete-node",
      "tree": "return_type_definition [27809,27840]"
    },
    {
      "action": "delete-tree",
      "tree": "function_body [27841,28176]"
    },
    {
      "action": "delete-node",
      "tree": "function_definition [27755,28176]"
    },
    {
      "action": "delete-node",
      "tree": "modifier: modifier [28184,28192]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: resolveSender [28193,28206]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [28206,28207]"
    },
    {
      "action": "delete-tree",
      "tree": "parameter [28207,28220]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [28220,28221]"
    },
    {
      "action": "delete-node",
      "tree": "modifier_definition [28184,28456]"
    },
    {
      "action": "delete-node",
      "tree": "function: function [28464,28472]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: _transferFromAllArgs [28473,28493]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [28493,28494]"
    },
    {
      "action": "delete-tree",
      "tree": "parameter [28504,28517]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [28517,28518]"
    },
    {
      "action": "delete-tree",
      "tree": "parameter [28528,28539]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [28539,28540]"
    },
    {
      "action": "delete-tree",
      "tree": "parameter [28550,28564]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [28564,28565]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [28597,28598]"
    },
    {
      "action": "delete-node",
      "tree": "virtual: virtual [28608,28615]"
    },
    {
      "action": "delete-tree",
      "tree": "function_body [28616,28720]"
    },
    {
      "action": "delete-node",
      "tree": "function_definition [28464,28720]"
    },
    {
      "action": "delete-node",
      "tree": "function: function [29114,29122]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: _transferAllArgs [29123,29139]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [29139,29140]"
    },
    {
      "action": "delete-tree",
      "tree": "parameter [29150,29163]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [29163,29164]"
    },
    {
      "action": "delete-tree",
      "tree": "parameter [29174,29185]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [29185,29186]"
    },
    {
      "action": "delete-tree",
      "tree": "parameter [29196,29210]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [29216,29217]"
    },
    {
      "action": "delete-node",
      "tree": "virtual: virtual [29227,29234]"
    },
    {
      "action": "delete-tree",
      "tree": "modifier_invocation [29235,29255]"
    },
    {
      "action": "delete-node",
      "tree": "{: { [29256,29257]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: _subBalance [29267,29278]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [29278,29279]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [29284,29285]"
    },
    {
      "action": "delete-tree",
      "tree": "call_argument [29286,29292]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [29292,29293]"
    },
    {
      "action": "delete-node",
      "tree": "call_expression [29267,29293]"
    },
    {
      "action": "delete-node",
      "tree": "expression_statement [29267,29294]"
    },
    {
      "action": "delete-tree",
      "tree": "emit_statement [29304,29338]"
    },
    {
      "action": "delete-node",
      "tree": "variable_declaration_statement [29348,29361]"
    },
    {
      "action": "delete-tree",
      "tree": "variable_declaration_statement [29371,29382]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [29392,29431]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [29441,29465]"
    },
    {
      "action": "delete-tree",
      "tree": "if_statement [29475,29547]"
    },
    {
      "action": "delete-node",
      "tree": "if: if [29557,29559]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [29560,29561]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: hasHook [29561,29568]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [29568,29569]"
    },
    {
      "action": "delete-node",
      "tree": "{: { [29570,29571]"
    },
    {
      "action": "delete-tree",
      "tree": "member_expression [29585,29619]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [29619,29620]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [29625,29626]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [29633,29634]"
    },
    {
      "action": "delete-node",
      "tree": "call_expression [29585,29634]"
    },
    {
      "action": "delete-node",
      "tree": "expression_statement [29585,29635]"
    },
    {
      "action": "delete-node",
      "tree": "}: } [29645,29646]"
    },
    {
      "action": "delete-node",
      "tree": "block_statement [29570,29646]"
    },
    {
      "action": "delete-node",
      "tree": "if_statement [29557,29646]"
    },
    {
      "action": "delete-node",
      "tree": "}: } [29652,29653]"
    },
    {
      "action": "delete-node",
      "tree": "function_body [29256,29653]"
    },
    {
      "action": "delete-node",
      "tree": "function_definition [29114,29653]"
    },
    {
      "action": "delete-node",
      "tree": "}: } [30565,30566]"
    },
    {
      "action": "delete-node",
      "tree": "contract_body [27622,30566]"
    },
    {
      "action": "delete-node",
      "tree": "contract_declaration [27543,30566]"
    },
    {
      "action": "delete-tree",
      "tree": "member_expression [30488,30522]"
    },
    {
      "action": "delete-node",
      "tree": "number_literal: 0x0 [30531,30534]"
    },
    {
      "action": "delete-node",
      "tree": "address: address [30217,30224]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: _resolveRecipient [30242,30259]"
    },
    {
      "action": "delete-tree",
      "tree": "function_definition [17725,17945]"
    },
    {
      "action": "delete-node",
      "tree": "function: function [17953,17961]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: sub [17962,17965]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [17965,17966]"
    },
    {
      "action": "delete-tree",
      "tree": "parameter [17976,17985]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [17985,17986]"
    },
    {
      "action": "delete-tree",
      "tree": "parameter [17996,18005]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [18005,18006]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [18052,18053]"
    },
    {
      "action": "delete-tree",
      "tree": "return_type_definition [18068,18092]"
    },
    {
      "action": "delete-tree",
      "tree": "function_body [18093,18170]"
    },
    {
      "action": "delete-node",
      "tree": "function_definition [17953,18170]"
    },
    {
      "action": "delete-node",
      "tree": "function: function [18178,18186]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: mul [18187,18190]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [18190,18191]"
    },
    {
      "action": "delete-tree",
      "tree": "parameter [18201,18210]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [18210,18211]"
    },
    {
      "action": "delete-tree",
      "tree": "parameter [18221,18230]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [18230,18231]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [18276,18277]"
    },
    {
      "action": "delete-tree",
      "tree": "return_type_definition [18292,18316]"
    },
    {
      "action": "delete-tree",
      "tree": "function_body [18317,18459]"
    },
    {
      "action": "delete-node",
      "tree": "function_definition [18178,18459]"
    },
    {
      "action": "delete-node",
      "tree": "function: function [18467,18475]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: div [18476,18479]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [18479,18480]"
    },
    {
      "action": "delete-tree",
      "tree": "parameter [18490,18499]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [18499,18500]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [18519,18520]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [18569,18570]"
    },
    {
      "action": "delete-tree",
      "tree": "return_type_definition [18585,18609]"
    },
    {
      "action": "delete-tree",
      "tree": "function_body [18610,18689]"
    },
    {
      "action": "delete-node",
      "tree": "function_definition [18467,18689]"
    },
    {
      "action": "delete-tree",
      "tree": "state_variable_declaration [19977,20082]"
    },
    {
      "action": "delete-node",
      "tree": "function: function [20992,21000]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: _approveAllArgs [21001,21016]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [21016,21017]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [21043,21044]"
    },
    {
      "action": "delete-tree",
      "tree": "parameter [21054,21068]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [21068,21069]"
    },
    {
      "action": "delete-tree",
      "tree": "parameter [21079,21099]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [21105,21106]"
    },
    {
      "action": "delete-tree",
      "tree": "function_body [21116,21236]"
    },
    {
      "action": "delete-node",
      "tree": "function_definition [20992,21236]"
    },
    {
      "action": "delete-node",
      "tree": "function: function [21922,21930]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: _increaseApprovalAllArgs [21931,21955]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [21955,21956]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [21982,21983]"
    },
    {
      "action": "delete-tree",
      "tree": "parameter [21993,22012]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [22012,22013]"
    },
    {
      "action": "delete-tree",
      "tree": "parameter [22023,22043]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [22049,22050]"
    },
    {
      "action": "delete-tree",
      "tree": "function_body [22060,22212]"
    },
    {
      "action": "delete-node",
      "tree": "function_definition [21922,22212]"
    },
    {
      "action": "delete-tree",
      "tree": "parameter [28760,28773]"
    },
    {
      "action": "delete-tree",
      "tree": "parameter [28784,28795]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [28795,28796]"
    },
    {
      "action": "delete-tree",
      "tree": "call_argument [28896,28902]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [28902,28903]"
    },
    {
      "action": "delete-tree",
      "tree": "call_argument [28904,28914]"
    },
    {
      "action": "delete-tree",
      "tree": "parameter [21771,21790]"
    },
    {
      "action": "delete-tree",
      "tree": "call_argument [21860,21871]"
    },
    {
      "action": "delete-tree",
      "tree": "call_argument [21873,21883]"
    },
    {
      "action": "delete-tree",
      "tree": "parameter [20842,20858]"
    },
    {
      "action": "delete-tree",
      "tree": "parameter [20860,20874]"
    },
    {
      "action": "delete-tree",
      "tree": "call_argument [20935,20941]"
    },
    {
      "action": "delete-tree",
      "tree": "call_argument [20943,20953]"
    },
    {
      "action": "delete-tree",
      "tree": "member_expression [23830,23859]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: _value [23860,23866]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: newAllowance [23815,23827]"
    },
    {
      "action": "delete-node",
      "tree": "=: = [23828,23829]"
    },
    {
      "action": "delete-node",
      "tree": "assignment_expression [23815,23893]"
    },
    {
      "action": "delete-tree",
      "tree": "member_expression [19232,19248]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: _value [19249,19255]"
    },
    {
      "action": "delete-tree",
      "tree": "array_access [19214,19229]"
    },
    {
      "action": "delete-node",
      "tree": "=: = [19230,19231]"
    },
    {
      "action": "delete-node",
      "tree": "assignment_expression [19214,19276]"
    },
    {
      "action": "delete-tree",
      "tree": "emit_statement [30183,30206]"
    },
    {
      "action": "delete-tree",
      "tree": "if_statement [30275,30347]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [30357,30381]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [30427,30428]"
    },
    {
      "action": "delete-node",
      "tree": "if: if [30463,30465]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [30466,30467]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: hook [30467,30471]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [30471,30472]"
    },
    {
      "action": "delete-node",
      "tree": "{: { [30473,30474]"
    },
    {
      "action": "delete-node",
      "tree": "}: } [30555,30556]"
    },
    {
      "action": "delete-node",
      "tree": "block_statement [30473,30556]"
    },
    {
      "action": "delete-node",
      "tree": "if_statement [30463,30556]"
    },
    {
      "action": "delete-tree",
      "tree": "return_type_definition [29724,29779]"
    },
    {
      "action": "delete-tree",
      "tree": "member_expression [23584,23613]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: _value [23614,23620]"
    },
    {
      "action": "delete-tree",
      "tree": "array_access [23556,23581]"
    },
    {
      "action": "delete-node",
      "tree": "=: = [23582,23583]"
    },
    {
      "action": "delete-node",
      "tree": "assignment_expression [23556,23643]"
    },
    {
      "action": "delete-tree",
      "tree": "emit_statement [29842,29867]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [29877,29921]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [29969,29970]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [30019,30047]"
    },
    {
      "action": "delete-tree",
      "tree": "member_expression [19397,19416]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: _value [19417,19423]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: result [19388,19394]"
    },
    {
      "action": "delete-node",
      "tree": "=: = [19395,19396]"
    },
    {
      "action": "delete-node",
      "tree": "assignment_expression [19388,19448]"
    },
    {
      "action": "delete-tree",
      "tree": "binary_expression [28390,28403]"
    },
    {
      "action": "delete-tree",
      "tree": "variable_declaration_statement [28233,28293]"
    },
    {
      "action": "delete-tree",
      "tree": "variable_declaration_statement [28303,28333]"
    },
    {
      "action": "delete-node",
      "tree": "if: if [28343,28345]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [28346,28347]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [28365,28366]"
    },
    {
      "action": "delete-node",
      "tree": "{: { [28367,28368]"
    },
    {
      "action": "delete-node",
      "tree": "}: } [28436,28437]"
    },
    {
      "action": "delete-node",
      "tree": "block_statement [28367,28437]"
    },
    {
      "action": "delete-node",
      "tree": "if_statement [28343,28437]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: _ [28447,28448]"
    },
    {
      "action": "delete-node",
      "tree": "function: function [22708,22716]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: decreaseApproval [22717,22733]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [22733,22734]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [22750,22751]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [22776,22777]"
    },
    {
      "action": "delete-node",
      "tree": "{: { [22800,22801]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [22811,22876]"
    },
    {
      "action": "delete-node",
      "tree": "}: } [22904,22905]"
    },
    {
      "action": "delete-node",
      "tree": "function_body [22800,22905]"
    },
    {
      "action": "delete-node",
      "tree": "function_definition [22708,22905]"
    },
    {
      "action": "delete-node",
      "tree": "function: function [22913,22921]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: _decreaseApprovalAllArgs [22922,22946]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [22946,22947]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [22973,22974]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [23008,23009]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [23045,23046]"
    },
    {
      "action": "delete-tree",
      "tree": "visibility [23047,23055]"
    },
    {
      "action": "delete-tree",
      "tree": "function_body [23056,23423]"
    },
    {
      "action": "delete-node",
      "tree": "function_definition [22913,23423]"
    },
    {
      "action": "delete-node",
      "tree": "function: function [23431,23439]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: _addAllowance [23440,23453]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [23453,23454]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [23476,23477]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [23503,23504]"
    },
    {
      "action": "delete-tree",
      "tree": "parameter [23514,23528]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [23534,23535]"
    },
    {
      "action": "delete-tree",
      "tree": "visibility [23536,23544]"
    },
    {
      "action": "delete-node",
      "tree": "{: { [23545,23546]"
    },
    {
      "action": "delete-node",
      "tree": "}: } [23650,23651]"
    },
    {
      "action": "delete-node",
      "tree": "function_body [23545,23651]"
    },
    {
      "action": "delete-node",
      "tree": "function_definition [23431,23651]"
    },
    {
      "action": "delete-node",
      "tree": "function: function [23659,23667]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: _subAllowance [23668,23681]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [23681,23682]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [23704,23705]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [23731,23732]"
    },
    {
      "action": "delete-tree",
      "tree": "parameter [23742,23756]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [23762,23763]"
    },
    {
      "action": "delete-tree",
      "tree": "visibility [23764,23772]"
    },
    {
      "action": "delete-tree",
      "tree": "return_type_definition [23773,23803]"
    },
    {
      "action": "delete-node",
      "tree": "{: { [23804,23805]"
    },
    {
      "action": "delete-tree",
      "tree": "if_statement [23904,24010]"
    },
    {
      "action": "delete-node",
      "tree": "}: } [24016,24017]"
    },
    {
      "action": "delete-node",
      "tree": "function_body [23804,24017]"
    },
    {
      "action": "delete-node",
      "tree": "function_definition [23659,24017]"
    },
    {
      "action": "delete-node",
      "tree": "function: function [24025,24033]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: _setAllowance [24034,24047]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [24047,24048]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [24070,24071]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [24097,24098]"
    },
    {
      "action": "delete-tree",
      "tree": "parameter [24108,24122]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [24128,24129]"
    },
    {
      "action": "delete-tree",
      "tree": "visibility [24130,24138]"
    },
    {
      "action": "delete-tree",
      "tree": "function_body [24139,24192]"
    },
    {
      "action": "delete-node",
      "tree": "function_definition [24025,24192]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [35567,35568]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [35839,35840]"
    },
    {
      "action": "delete-tree",
      "tree": "call_argument [35841,35849]"
    },
    {
      "action": "delete-tree",
      "tree": "parameter [34829,34840]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [34840,34841]"
    },
    {
      "action": "delete-tree",
      "tree": "modifier_invocation [34891,34911]"
    },
    {
      "action": "delete-tree",
      "tree": "call_expression [34993,35073]"
    },
    {
      "action": "delete-tree",
      "tree": "return_type_definition [36131,36186]"
    },
    {
      "action": "delete-node",
      "tree": "{: { [36187,36188]"
    },
    {
      "action": "delete-tree",
      "tree": "tuple_expression [36287,36318]"
    },
    {
      "action": "delete-node",
      "tree": "=: = [36319,36320]"
    },
    {
      "action": "delete-node",
      "tree": "assignment_expression [36287,36347]"
    },
    {
      "action": "delete-node",
      "tree": "expression_statement [36287,36348]"
    },
    {
      "action": "delete-node",
      "tree": "}: } [36354,36355]"
    },
    {
      "action": "delete-node",
      "tree": "function_body [36187,36355]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: require [36915,36922]"
    },
    {
      "action": "delete-node",
      "tree": "==: == [36946,36948]"
    },
    {
      "action": "delete-node",
      "tree": "number_literal: 0 [36949,36950]"
    },
    {
      "action": "delete-node",
      "tree": "binary_expression [36923,36950]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [36950,36951]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: amount [37063,37069]"
    },
    {
      "action": "delete-node",
      "tree": "expression_statement [37038,37070]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: epochsLeft [37545,37555]"
    },
    {
      "action": "delete-tree",
      "tree": "state_variable_declaration [41433,41452]"
    },
    {
      "action": "delete-tree",
      "tree": "parameter [41670,41688]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [41761,41783]"
    },
    {
      "action": "delete-node",
      "tree": "function: function [41856,41864]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: registry [41865,41873]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [41873,41874]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [41874,41875]"
    },
    {
      "action": "delete-tree",
      "tree": "return_type_definition [41897,41915]"
    },
    {
      "action": "delete-tree",
      "tree": "function_body [41916,41951]"
    },
    {
      "action": "delete-node",
      "tree": "function_definition [41856,41951]"
    },
    {
      "action": "delete-tree",
      "tree": "parameter [28971,28982]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [28982,28983]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [29067,29068]"
    },
    {
      "action": "delete-tree",
      "tree": "call_argument [29069,29075]"
    }
  ]
}