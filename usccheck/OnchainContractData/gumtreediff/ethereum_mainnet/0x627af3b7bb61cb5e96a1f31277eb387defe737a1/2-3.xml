<?xml version="1.0" ?>
<matches>
  <match src="type_name [27291,27298]" dest="type_name [27291,27298]"/>
  <match src="(: ( [72177,72178]" dest="(: ( [71843,71844]"/>
  <match src="parameter [95379,95409]" dest="parameter [94527,94557]"/>
  <match src="identifier: _x [34016,34018]" dest="identifier: _x [34016,34018]"/>
  <match src="call_expression [23538,23623]" dest="call_expression [23538,23623]"/>
  <match src="primitive_type [61431,61438]" dest="primitive_type [61433,61440]"/>
  <match src="call_expression [89256,89290]" dest="call_expression [90181,90215]"/>
  <match src="return_statement [84640,84647]" dest="return_statement [85771,85778]"/>
  <match src="address: address [22295,22302]" dest="address: address [22295,22302]"/>
  <match src="expression_statement [81118,81304]" dest="expression_statement [81805,81993]"/>
  <match src="member_expression [76834,76846]" dest="member_expression [76350,76362]"/>
  <match src="type_name [64660,64667]" dest="type_name [64664,64671]"/>
  <match src="expression_statement [75735,75778]" dest="expression_statement [75251,75294]"/>
  <match src="call_argument [79293,79316]" dest="call_argument [79448,79471]"/>
  <match src="=: = [79598,79599]" dest="=: = [79681,79682]"/>
  <match src="identifier: _lockTime [80584,80593]" dest="identifier: _lockTime [81269,81278]"/>
  <match src="{: { [58621,58622]" dest="{: { [58623,58624]"/>
  <match src=".: . [101187,101188]" dest=".: . [101156,101157]"/>
  <match src="[: [ [95740,95741]" dest="[: [ [94888,94889]"/>
  <match src="parameter [54050,54073]" dest="parameter [54052,54075]"/>
  <match src="identifier: inviteeWeight [63324,63337]" dest="identifier: inviteeWeight [63326,63339]"/>
  <match src="(: ( [85212,85213]" dest="(: ( [86512,86513]"/>
  <match src="address: address [26531,26538]" dest="address: address [26531,26538]"/>
  <match src="address: address [51386,51393]" dest="address: address [51388,51395]"/>
  <match src="[: [ [95861,95862]" dest="[: [ [95133,95134]"/>
  <match src="array_access [62499,62530]" dest="array_access [62501,62532]"/>
  <match src="call_argument [11819,11824]" dest="call_argument [11819,11824]"/>
  <match src="): ) [96200,96201]" dest="): ) [95510,95511]"/>
  <match src="number_literal: 0 [90853,90854]" dest="number_literal: 0 [91878,91879]"/>
  <match src=".: . [87549,87550]" dest=".: . [88710,88711]"/>
  <match src="virtual: virtual [49998,50005]" dest="virtual: virtual [50000,50007]"/>
  <match src="identifier: cp [60870,60872]" dest="identifier: cp [60872,60874]"/>
  <match src="call_argument [86201,86210]" dest="call_argument [87489,87498]"/>
  <match src="identifier: sparePoolCount [87656,87670]" dest="identifier: sparePoolCount [88817,88831]"/>
  <match src="identifier: senderInfo [100389,100399]" dest="identifier: senderInfo [99731,99741]"/>
  <match src="(: ( [60561,60562]" dest="(: ( [60563,60564]"/>
  <match src=",: , [22127,22128]" dest=",: , [22127,22128]"/>
  <match src="function: function [95193,95201]" dest="function: function [94341,94349]"/>
  <match src="identifier: updateTokenPriceTerm [71732,71752]" dest="identifier: updateTokenPriceTerm [71443,71463]"/>
  <match src="uint256: uint256 [92724,92731]" dest="uint256: uint256 [92372,92379]"/>
  <match src="variable_declaration_statement [89429,89487]" dest="variable_declaration_statement [90671,90729]"/>
  <match src="memory: memory [97613,97619]" dest="memory: memory [96378,96384]"/>
  <match src="indexed: indexed [25381,25388]" dest="indexed: indexed [25381,25388]"/>
  <match src="(: ( [22095,22096]" dest="(: ( [22095,22096]"/>
  <match src="string_literal [31313,31349]" dest="string_literal [31313,31349]"/>
  <match src="number_literal: 0x10000 [29326,29333]" dest="number_literal: 0x10000 [29326,29333]"/>
  <match src="variable_declaration_statement [77811,77855]" dest="variable_declaration_statement [78932,78979]"/>
  <match src="variable_declaration_statement [60852,60904]" dest="variable_declaration_statement [60854,60906]"/>
  <match src="&lt;: &lt; [74311,74312]" dest="&lt;: &lt; [74130,74131]"/>
  <match src="identifier: lower_self [35172,35182]" dest="identifier: lower_self [35172,35182]"/>
  <match src="public: public [59497,59503]" dest="public: public [59499,59505]"/>
  <match src="]: ] [61557,61558]" dest="]: ] [61559,61560]"/>
  <match src="-: - [38349,38350]" dest="-: - [38349,38350]"/>
  <match src="identifier: _balances [56536,56545]" dest="identifier: _balances [56538,56547]"/>
  <match src="): ) [29935,29936]" dest="): ) [29935,29936]"/>
  <match src="identifier: add [84931,84934]" dest="identifier: add [86062,86065]"/>
  <match src="): ) [33128,33129]" dest="): ) [33128,33129]"/>
  <match src="[: [ [88537,88538]" dest="[: [ [89385,89386]"/>
  <match src=",: , [71328,71329]" dest=",: , [71039,71040]"/>
  <match src="parameter [6875,6882]" dest="parameter [6875,6882]"/>
  <match src="identifier: _lockTime [81435,81444]" dest="identifier: _lockTime [82124,82133]"/>
  <match src="call_expression [46976,47054]" dest="call_expression [46363,46441]"/>
  <match src="if_statement [102611,102737]" dest="if_statement [102535,102661]"/>
  <match src=",: , [39011,39012]" dest=",: , [39011,39012]"/>
  <match src="identifier: isFirstTokenShard [71491,71508]" dest="identifier: isFirstTokenShard [71202,71219]"/>
  <match src="number_literal: 2206 [68556,68560]" dest="number_literal: 2206 [68456,68460]"/>
  <match src="identifier: termStartIndex [104065,104079]" dest="identifier: termStartIndex [103989,104003]"/>
  <match src="memory: memory [109080,109086]" dest="memory: memory [109004,109010]"/>
  <match src="(: ( [39160,39161]" dest="(: ( [39160,39161]"/>
  <match src="for: for [48936,48939]" dest="for: for [48938,48941]"/>
  <match src="uint256: uint256 [63581,63588]" dest="uint256: uint256 [63583,63590]"/>
  <match src="augmented_assignment_expression [30416,30424]" dest="augmented_assignment_expression [30416,30424]"/>
  <match src="else: else [74870,74874]" dest="else: else [74741,74745]"/>
  <match src="identifier: _pending [89789,89797]" dest="identifier: _pending [91031,91039]"/>
  <match src="call_expression [71578,71600]" dest="call_expression [71289,71311]"/>
  <match src="variable_declaration [89923,89940]" dest="variable_declaration [90226,90257]"/>
  <match src="identifier: sub [87765,87768]" dest="identifier: sub [88926,88929]"/>
  <match src="else: else [106320,106324]" dest="else: else [106244,106248]"/>
  <match src="identifier: denominator [36857,36868]" dest="identifier: denominator [36857,36868]"/>
  <match src="call_argument [62869,62875]" dest="call_argument [62871,62877]"/>
  <match src="{: { [12717,12718]" dest="{: { [12717,12718]"/>
  <match src="expression_statement [27802,27817]" dest="expression_statement [27802,27817]"/>
  <match src="unary_expression [27560,27562]" dest="unary_expression [27560,27562]"/>
  <match src="type_name [89050,89058]" dest="type_name [89898,89906]"/>
  <match src="storage: storage [99429,99436]" dest="storage: storage [97519,97526]"/>
  <match src="primitive_type [36438,36445]" dest="primitive_type [36438,36445]"/>
  <match src="): ) [103797,103798]" dest="): ) [103721,103722]"/>
  <match src="type_cast_expression [107389,107422]" dest="type_cast_expression [107313,107346]"/>
  <match src="function_definition [85181,86480]" dest="function_definition [86481,87768]"/>
  <match src="identifier: value [36407,36412]" dest="identifier: value [36407,36412]"/>
  <match src="member_expression [99990,100011]" dest="member_expression [98695,98716]"/>
  <match src="(: ( [38966,38967]" dest="(: ( [38966,38967]"/>
  <match src="identifier: sub [103469,103472]" dest="identifier: sub [103393,103396]"/>
  <match src="array_access [62414,62449]" dest="array_access [62416,62451]"/>
  <match src="identifier: senderRelationshipInfo [98816,98838]" dest="identifier: senderRelationshipInfo [99009,99031]"/>
  <match src="return_statement [85332,85339]" dest="return_statement [86632,86639]"/>
  <match src="(: ( [8799,8800]" dest="(: ( [8799,8800]"/>
  <match src="type_name [5309,5313]" dest="type_name [5309,5313]"/>
  <match src="call_argument [22330,22373]" dest="call_argument [22330,22373]"/>
  <match src="uint256: uint256 [66927,66934]" dest="uint256: uint256 [67180,67187]"/>
  <match src=",: , [21908,21909]" dest=",: , [21908,21909]"/>
  <match src="identifier: decreaseAllowance [54015,54032]" dest="identifier: decreaseAllowance [54017,54034]"/>
  <match src="visibility [65561,65567]" dest="visibility [65571,65577]"/>
  <match src="binary_expression [29228,29245]" dest="binary_expression [29228,29245]"/>
  <match src=".: . [77272,77273]" dest=".: . [76712,76713]"/>
  <match src="parameter [35927,35948]" dest="parameter [35927,35948]"/>
  <match src="parameter [934,957]" dest="parameter [934,957]"/>
  <match src="&gt;: &gt; [76543,76544]" dest="&gt;: &gt; [76059,76060]"/>
  <match src="external: external [45767,45775]" dest="external: external [45769,45777]"/>
  <match src=":: : [71325,71326]" dest=":: : [71036,71037]"/>
  <match src="identifier: _nftPoolId [69221,69231]" dest="identifier: _nftPoolId [68932,68942]"/>
  <match src="call_expression [54116,54245]" dest="call_expression [54118,54247]"/>
  <match src="identifier: owner [57419,57424]" dest="identifier: owner [57421,57426]"/>
  <match src="call_argument [57468,57473]" dest="call_argument [57470,57475]"/>
  <match src="array_access [61880,61906]" dest="array_access [61882,61908]"/>
  <match src="&gt;: &gt; [101595,101596]" dest="&gt;: &gt; [101332,101333]"/>
  <match src="public: public [43795,43801]" dest="public: public [43795,43801]"/>
  <match src="private: private [88980,88987]" dest="private: private [89828,89835]"/>
  <match src="(: ( [89894,89895]" dest="(: ( [91141,91142]"/>
  <match src="primitive_type [3839,3846]" dest="primitive_type [3839,3846]"/>
  <match src="}: } [71072,71073]" dest="}: } [70783,70784]"/>
  <match src=",: , [3853,3854]" dest=",: , [3853,3854]"/>
  <match src="storage: storage [102440,102447]" dest="storage: storage [102299,102306]"/>
  <match src="identifier: _usersTotalWeight [93559,93576]" dest="identifier: _usersTotalWeight [93207,93224]"/>
  <match src="member_expression [61541,61577]" dest="member_expression [61543,61579]"/>
  <match src="function: function [38910,38918]" dest="function: function [38910,38918]"/>
  <match src="function_body [77413,78123]" dest="function_body [76853,77256]"/>
  <match src="call_argument [18472,18478]" dest="call_argument [18472,18478]"/>
  <match src="(: ( [60791,60792]" dest="(: ( [60793,60794]"/>
  <match src="type_name [34900,34907]" dest="type_name [34900,34907]"/>
  <match src="call_expression [84746,84770]" dest="call_expression [85877,85901]"/>
  <match src="assignment_expression [70199,70321]" dest="assignment_expression [69910,70032]"/>
  <match src="{: { [76701,76702]" dest="{: { [76217,76218]"/>
  <match src="expression_statement [49666,49681]" dest="expression_statement [49668,49683]"/>
  <match src="(: ( [81246,81247]" dest="(: ( [81935,81936]"/>
  <match src="call_expression [97187,97234]" dest="call_expression [95952,95999]"/>
  <match src="solidity_version: 0.5.0 [30026,30031]" dest="solidity_version: 0.5.0 [30026,30031]"/>
  <match src="identifier: shardPoolDividendWeight [78600,78623]" dest="identifier: shardPoolDividendWeight [78180,78203]"/>
  <match src="parameter [18366,18380]" dest="parameter [18366,18380]"/>
  <match src="expression_statement [25584,25603]" dest="expression_statement [25584,25603]"/>
  <match src="[: [ [99240,99241]" dest="[: [ [99400,99401]"/>
  <match src="primitive_type [63676,63683]" dest="primitive_type [63678,63685]"/>
  <match src="struct_member [58925,58939]" dest="struct_member [58927,58941]"/>
  <match src="member_expression [106250,106274]" dest="member_expression [106174,106198]"/>
  <match src="type_name [14054,14061]" dest="type_name [14054,14061]"/>
  <match src=",: , [89544,89545]" dest=",: , [90786,90787]"/>
  <match src="identifier: mm [28125,28127]" dest="identifier: mm [28125,28127]"/>
  <match src="(: ( [82098,82099]" dest="(: ( [82936,82937]"/>
  <match src="): ) [72994,72995]" dest="): ) [72676,72677]"/>
  <match src="uint256: uint256 [63268,63275]" dest="uint256: uint256 [63270,63277]"/>
  <match src="]: ] [59541,59542]" dest="]: ] [59543,59544]"/>
  <match src=",: , [62783,62784]" dest=",: , [62785,62786]"/>
  <match src="function: function [59927,59935]" dest="function: function [59929,59937]"/>
  <match src="function: function [27415,27423]" dest="function: function [27415,27423]"/>
  <match src=".: . [55125,55126]" dest=".: . [55127,55128]"/>
  <match src="virtual: virtual [24321,24328]" dest="virtual: virtual [24321,24328]"/>
  <match src="type_name [102488,102495]" dest="type_name [102412,102419]"/>
  <match src="array_access [55852,55870]" dest="array_access [55854,55872]"/>
  <match src="call_struct_argument [105570,105600]" dest="call_struct_argument [105494,105524]"/>
  <match src="true [70909,70913]" dest="true [70620,70624]"/>
  <match src="identifier: lastDividendHeight [79470,79488]" dest="identifier: lastDividendHeight [79625,79643]"/>
  <match src="]: ] [100429,100430]" dest="]: ] [99772,99773]"/>
  <match src="private: private [79017,79024]" dest="private: private [78806,78813]"/>
  <match src="true [59801,59805]" dest="true [59803,59807]"/>
  <match src="call_struct_argument [105452,105497]" dest="call_struct_argument [105376,105421]"/>
  <match src="-: - [27709,27710]" dest="-: - [27709,27710]"/>
  <match src="): ) [100058,100059]" dest="): ) [98763,98764]"/>
  <match src="): ) [22481,22482]" dest="): ) [22481,22482]"/>
  <match src="internal: internal [28730,28738]" dest="internal: internal [28730,28738]"/>
  <match src="primitive_type [20624,20631]" dest="primitive_type [20624,20631]"/>
  <match src="variable_declaration [73430,73456]" dest="variable_declaration [73195,73221]"/>
  <match src="primitive_type [59183,59190]" dest="primitive_type [59185,59192]"/>
  <match src="(: ( [96152,96153]" dest="(: ( [95462,95463]"/>
  <match src="returns: returns [33906,33913]" dest="returns: returns [33906,33913]"/>
  <match src="call_argument [36407,36412]" dest="call_argument [36407,36412]"/>
  <match src="number_literal: 0 [30279,30280]" dest="number_literal: 0 [30279,30280]"/>
  <match src="): ) [40475,40476]" dest="): ) [40475,40476]"/>
  <match src="type_name [6514,6521]" dest="type_name [6514,6521]"/>
  <match src="augmented_assignment_expression [31858,31864]" dest="augmented_assignment_expression [31858,31864]"/>
  <match src="call_argument [77063,77075]" dest="call_argument [76579,76591]"/>
  <match src="{: { [100610,100611]" dest="{: { [100186,100187]"/>
  <match src=".: . [105063,105064]" dest=".: . [104987,104988]"/>
  <match src="/: / [29764,29765]" dest="/: / [29764,29765]"/>
  <match src="array_access [79973,80006]" dest="array_access [80558,80591]"/>
  <match src="identifier: x [30221,30222]" dest="identifier: x [30221,30222]"/>
  <match src="number_literal: 128 [31426,31429]" dest="number_literal: 128 [31426,31429]"/>
  <match src="(: ( [61407,61408]" dest="(: ( [61409,61410]"/>
  <match src="primitive_type [4148,4155]" dest="primitive_type [4148,4155]"/>
  <match src="uint256: uint256 [78999,79006]" dest="uint256: uint256 [78788,78795]"/>
  <match src="array_access [93627,93653]" dest="array_access [93275,93301]"/>
  <match src="*=: *= [27754,27756]" dest="*=: *= [27754,27756]"/>
  <match src="state_variable_declaration [43928,44003]" dest="state_variable_declaration [43928,44005]"/>
  <match src="call_argument [36471,36475]" dest="call_argument [36471,36475]"/>
  <match src="): ) [54890,54891]" dest="): ) [54892,54893]"/>
  <match src="uint: uint [40433,40437]" dest="uint: uint [40433,40437]"/>
  <match src="identifier: setDividendWeight [44083,44100]" dest="identifier: setDividendWeight [44085,44102]"/>
  <match src="identifier: _invitor [87001,87009]" dest="identifier: _invitor [88158,88166]"/>
  <match src="function_body [78274,78945]" dest="function_body [77407,78734]"/>
  <match src="(: ( [35817,35818]" dest="(: ( [35817,35818]"/>
  <match src="identifier: _pending [46391,46399]" dest="identifier: _pending [46633,46641]"/>
  <match src="): ) [40199,40200]" dest="): ) [40199,40200]"/>
  <match src="identifier: userInfo [99464,99472]" dest="identifier: userInfo [97554,97562]"/>
  <match src="identifier: sender [79999,80005]" dest="identifier: sender [80584,80590]"/>
  <match src="(: ( [28776,28777]" dest="(: ( [28776,28777]"/>
  <match src="): ) [88579,88580]" dest="): ) [89427,89428]"/>
  <match src="function_definition [102856,103068]" dest="function_definition [102780,102992]"/>
  <match src="identifier: lastInvitee [99031,99042]" dest="identifier: lastInvitee [99212,99223]"/>
  <match src="return_type_definition [34627,34653]" dest="return_type_definition [34627,34653]"/>
  <match src="array_access [87848,87876]" dest="array_access [89009,89037]"/>
  <match src="string [37746,37780]" dest="string [37746,37780]"/>
  <match src="event: event [59220,59225]" dest="event: event [59222,59227]"/>
  <match src="parameter [35950,35972]" dest="parameter [35950,35972]"/>
  <match src="identifier: uq112x112 [107993,108002]" dest="identifier: uq112x112 [107917,107926]"/>
  <match src="state_variable_declaration [43092,43121]" dest="state_variable_declaration [43092,43121]"/>
  <match src="]: ] [61201,61202]" dest="]: ] [61203,61204]"/>
  <match src="parameter [39537,39552]" dest="parameter [39537,39552]"/>
  <match src="function_definition [10037,10203]" dest="function_definition [10037,10203]"/>
  <match src="using: using [48921,48926]" dest="using: using [48923,48928]"/>
  <match src="identifier: pow2 [27598,27602]" dest="identifier: pow2 [27598,27602]"/>
  <match src="boolean_literal [70909,70913]" dest="boolean_literal [70620,70624]"/>
  <match src="}: } [22150,22151]" dest="}: } [22150,22151]"/>
  <match src="bool: bool [52661,52665]" dest="bool: bool [52663,52667]"/>
  <match src=",: , [84486,84487]" dest=",: , [85021,85022]"/>
  <match src="augmented_assignment_expression [29094,29102]" dest="augmented_assignment_expression [29094,29102]"/>
  <match src="function_body [17855,18149]" dest="function_body [17855,18149]"/>
  <match src="returns: returns [94130,94137]" dest="returns: returns [93776,93783]"/>
  <match src="type_name [64235,64242]" dest="type_name [64237,64244]"/>
  <match src="assignment_expression [84023,84044]" dest="assignment_expression [84552,84573]"/>
  <match src="&quot;: &quot; [57276,57277]" dest="&quot;: &quot; [57278,57279]"/>
  <match src="call_expression [97711,97758]" dest="call_expression [96476,96523]"/>
  <match src="if: if [30717,30719]" dest="if: if [30717,30719]"/>
  <match src="identifier: INVITEE_WEIGHT [101123,101137]" dest="identifier: INVITEE_WEIGHT [82465,82479]"/>
  <match src="number_literal: 0 [6904,6905]" dest="number_literal: 0 [6904,6905]"/>
  <match src="event_paramater [66880,66899]" dest="event_paramater [67133,67152]"/>
  <match src="expression_statement [67415,67441]" dest="expression_statement [67662,67688]"/>
  <match src="primitive_type [16781,16788]" dest="primitive_type [16781,16788]"/>
  <match src="binary_expression [62294,62338]" dest="binary_expression [62296,62340]"/>
  <match src=".: . [82973,82974]" dest=".: . [83752,83753]"/>
  <match src="): ) [28068,28069]" dest="): ) [28068,28069]"/>
  <match src="=: = [62251,62252]" dest="=: = [62253,62254]"/>
  <match src="function_definition [46075,47202]" dest="function_definition [46077,47204]"/>
  <match src="identifier: require [7750,7757]" dest="identifier: require [7750,7757]"/>
  <match src="assignment_expression [62581,62620]" dest="assignment_expression [62583,62622]"/>
  <match src="contract_declaration [25240,26951]" dest="contract_declaration [25240,26951]"/>
  <match src="): ) [104853,104854]" dest="): ) [104777,104778]"/>
  <match src="struct_member [63395,63422]" dest="struct_member [63397,63424]"/>
  <match src="primitive_type [92984,92991]" dest="primitive_type [92632,92639]"/>
  <match src="solidity: solidity [27020,27028]" dest="solidity: solidity [27020,27028]"/>
  <match src="comment: /**      * @dev Returns the addition of two unsigned integers, with an overflow flag.      *      * _Available since v3.4._      */ [5107,5242]" dest="comment: /**      * @dev Returns the addition of two unsigned integers, with an overflow flag.      *      * _Available since v3.4._      */ [5107,5242]"/>
  <match src="identifier: dealEvilPoolDiviend [73722,73741]" dest="identifier: dealEvilPoolDiviend [73487,73506]"/>
  <match src="identifier: onlyOwner [26445,26454]" dest="identifier: onlyOwner [26445,26454]"/>
  <match src="type_name [5264,5271]" dest="type_name [5264,5271]"/>
  <match src="block_statement [31517,31551]" dest="block_statement [31517,31551]"/>
  <match src="function_definition [40151,40201]" dest="function_definition [40151,40201]"/>
  <match src="identifier: muli [34199,34203]" dest="identifier: muli [34199,34203]"/>
  <match src="[: [ [93050,93051]" dest="[: [ [92698,92699]"/>
  <match src="member_expression [78449,78472]" dest="member_expression [78029,78052]"/>
  <match src="function: function [84511,84519]" dest="function: function [85642,85650]"/>
  <match src="array_access [100890,100924]" dest="array_access [100952,100987]"/>
  <match src=",: , [56481,56482]" dest=",: , [56483,56484]"/>
  <match src="call_argument [92938,92948]" dest="call_argument [92586,92596]"/>
  <match src="&quot;: &quot; [23398,23399]" dest="&quot;: &quot; [23398,23399]"/>
  <match src="assignment_expression [106339,106387]" dest="assignment_expression [106263,106311]"/>
  <match src="type_name [79250,79257]" dest="type_name [79405,79412]"/>
  <match src="call_argument [99840,99858]" dest="call_argument [98032,98050]"/>
  <match src="visibility [85262,85270]" dest="visibility [86562,86570]"/>
  <match src="identifier: mul [83238,83241]" dest="identifier: mul [90417,90420]"/>
  <match src="identifier: isCalculateInvitation [100944,100965]" dest="identifier: isCalculateInvitation [101102,101123]"/>
  <match src="identifier: value [39178,39183]" dest="identifier: value [39178,39183]"/>
  <match src="{: { [95514,95515]" dest="{: { [94662,94663]"/>
  <match src="): ) [69978,69979]" dest="): ) [69689,69690]"/>
  <match src="function_definition [40880,40927]" dest="function_definition [40880,40927]"/>
  <match src="function: function [102330,102338]" dest="function: function [102189,102197]"/>
  <match src="binary_expression [27884,27889]" dest="binary_expression [27884,27889]"/>
  <match src="(: ( [55237,55238]" dest="(: ( [55239,55240]"/>
  <match src="primitive_type [22001,22008]" dest="primitive_type [22001,22008]"/>
  <match src="type_name [73082,73089]" dest="type_name [72847,72854]"/>
  <match src="type_name [100859,100867]" dest="type_name [100921,100929]"/>
  <match src="identifier: startIndex [93577,93587]" dest="identifier: startIndex [93225,93235]"/>
  <match src="identifier: selector [20724,20732]" dest="identifier: selector [20724,20732]"/>
  <match src="number_literal: 0 [61755,61756]" dest="number_literal: 0 [61757,61758]"/>
  <match src="member_expression [80025,80042]" dest="member_expression [80610,80627]"/>
  <match src="expression_statement [74184,74205]" dest="expression_statement [73915,73936]"/>
  <match src=".: . [53456,53457]" dest=".: . [53458,53459]"/>
  <match src="type_name [44130,44137]" dest="type_name [44132,44139]"/>
  <match src=",: , [19759,19760]" dest=",: , [19759,19760]"/>
  <match src="storage: storage [80311,80318]" dest="storage: storage [80931,80938]"/>
  <match src="]: ] [83565,83566]" dest="]: ] [84430,84431]"/>
  <match src="uint112: uint112 [35446,35453]" dest="uint112: uint112 [35446,35453]"/>
  <match src="): ) [82038,82039]" dest="): ) [82876,82877]"/>
  <match src="identifier: target [19050,19056]" dest="identifier: target [19050,19056]"/>
  <match src="block_statement [70366,70426]" dest="block_statement [70077,70137]"/>
  <match src="type_name [102539,102546]" dest="type_name [102463,102470]"/>
  <match src=".: . [87695,87696]" dest=".: . [88856,88857]"/>
  <match src="identifier: SHDToken [58744,58752]" dest="identifier: SHDToken [58746,58754]"/>
  <match src="): ) [107861,107862]" dest="): ) [107785,107786]"/>
  <match src="-: - [27809,27810]" dest="-: - [27809,27810]"/>
  <match src="call_expression [73272,73291]" dest="call_expression [73037,73056]"/>
  <match src="&gt;=:  &gt;= [11950,11953]" dest="&gt;=:  &gt;= [11950,11953]"/>
  <match src=",: , [71472,71473]" dest=",: , [71183,71184]"/>
  <match src="&lt;:  &lt; [23730,23732]" dest="&lt;:  &lt; [23730,23732]"/>
  <match src="function_body [28762,29944]" dest="function_body [28762,29944]"/>
  <match src="identifier: lpTokenAmount [80244,80257]" dest="identifier: lpTokenAmount [80864,80877]"/>
  <match src="': ' [35459,35460]" dest="': ' [35459,35460]"/>
  <match src="=: = [46727,46728]" dest="=: = [46969,46970]"/>
  <match src="call_argument [95129,95133]" dest="call_argument [85292,85296]"/>
  <match src=",: , [69851,69852]" dest=",: , [69562,69563]"/>
  <match src="identifier: allowance [21627,21636]" dest="identifier: allowance [21627,21636]"/>
  <match src="parameter [27213,27222]" dest="parameter [27213,27222]"/>
  <match src="function_body [45925,45974]" dest="function_body [45927,45976]"/>
  <match src="string [22330,22373]" dest="string [22330,22373]"/>
  <match src="number_literal: 2 [41429,41430]" dest="number_literal: 2 [41429,41430]"/>
  <match src="return_type_definition [33457,33474]" dest="return_type_definition [33457,33474]"/>
  <match src="if_statement [83144,83920]" dest="if_statement [84245,84444]"/>
  <match src="}: } [49848,49849]" dest="}: } [49850,49851]"/>
  <match src="memory: memory [23311,23317]" dest="memory: memory [23311,23317]"/>
  <match src="variable_declaration_statement [100317,100356]" dest="variable_declaration_statement [71880,71919]"/>
  <match src="function_definition [33186,33318]" dest="function_definition [33186,33318]"/>
  <match src="identifier: msg [47451,47454]" dest="identifier: msg [47453,47456]"/>
  <match src="call_expression [107106,107177]" dest="call_expression [107030,107101]"/>
  <match src="return_statement [16263,16358]" dest="return_statement [16263,16358]"/>
  <match src="identifier: _owner [26492,26498]" dest="identifier: _owner [26492,26498]"/>
  <match src="call_expression [103458,103485]" dest="call_expression [103382,103409]"/>
  <match src=",: , [78231,78232]" dest=",: , [77364,77365]"/>
  <match src="]: ] [94548,94549]" dest="]: ] [94194,94195]"/>
  <match src="call_argument [98082,98083]" dest="call_argument [96847,96848]"/>
  <match src="type_name [88656,88665]" dest="type_name [89504,89513]"/>
  <match src="variable_declaration [79035,79056]" dest="variable_declaration [78824,78845]"/>
  <match src="return_type_definition [10114,10131]" dest="return_type_definition [10114,10131]"/>
  <match src="identifier: allowance [2682,2691]" dest="identifier: allowance [2682,2691]"/>
  <match src="): ) [82742,82743]" dest="): ) [83580,83581]"/>
  <match src="identifier: x [29638,29639]" dest="identifier: x [29638,29639]"/>
  <match src="type_name [17013,17018]" dest="type_name [17013,17018]"/>
  <match src="]: ] [95694,95695]" dest="]: ] [94842,94843]"/>
  <match src="=: = [94655,94656]" dest="=: = [94301,94302]"/>
  <match src="}: } [61000,61001]" dest="}: } [61002,61003]"/>
  <match src="expression_statement [76675,76695]" dest="expression_statement [76191,76211]"/>
  <match src="assignment_expression [108166,108190]" dest="assignment_expression [108090,108114]"/>
  <match src="(: ( [66798,66799]" dest="(: ( [67051,67052]"/>
  <match src="user_defined_type [63100,63106]" dest="user_defined_type [63102,63108]"/>
  <match src="identifier: blackList [73551,73560]" dest="identifier: blackList [73316,73325]"/>
  <match src="]: ] [87875,87876]" dest="]: ] [89036,89037]"/>
  <match src="&gt;=: &gt;= [30884,30886]" dest="&gt;=: &gt;= [30884,30886]"/>
  <match src="variable_declaration [79510,79533]" dest="variable_declaration [78870,78893]"/>
  <match src="(: ( [29319,29320]" dest="(: ( [29319,29320]"/>
  <match src="identifier: sub [56555,56558]" dest="identifier: sub [56557,56560]"/>
  <match src="identifier: recipient [3863,3872]" dest="identifier: recipient [3863,3872]"/>
  <match src="binary_expression [60922,60949]" dest="binary_expression [60924,60951]"/>
  <match src="assignment_expression [57900,57921]" dest="assignment_expression [57902,57923]"/>
  <match src="call_argument [85057,85058]" dest="call_argument [86357,86358]"/>
  <match src=".: . [98992,98993]" dest=".: . [99177,99178]"/>
  <match src="primitive_type [107304,107310]" dest="primitive_type [107228,107234]"/>
  <match src="call_expression [72074,72106]" dest="call_expression [71627,71659]"/>
  <match src="identifier: a [7763,7764]" dest="identifier: a [7763,7764]"/>
  <match src="uint256: uint256 [43561,43568]" dest="uint256: uint256 [43561,43568]"/>
  <match src="): ) [30254,30255]" dest="): ) [30254,30255]"/>
  <match src="uint144: uint144 [38026,38033]" dest="uint144: uint144 [38026,38033]"/>
  <match src="false: false [6915,6920]" dest="false: false [6915,6920]"/>
  <match src=",: , [67101,67102]" dest=",: , [67354,67355]"/>
  <match src=",: , [34587,34588]" dest=",: , [34587,34588]"/>
  <match src="variable_declaration_statement [82948,83006]" dest="variable_declaration_statement [83727,83785]"/>
  <match src="): ) [64775,64776]" dest="): ) [64781,64782]"/>
  <match src="call_argument [98277,98278]" dest="call_argument [97042,97043]"/>
  <match src="&gt;=: &gt;= [29323,29325]" dest="&gt;=: &gt;= [29323,29325]"/>
  <match src="comment: // encodes a uint144 as a UQ144x112 [33145,33180]" dest="comment: // encodes a uint144 as a UQ144x112 [33145,33180]"/>
  <match src="return_statement [5705,5726]" dest="return_statement [5705,5726]"/>
  <match src="}: } [42611,42612]" dest="}: } [42611,42612]"/>
  <match src="primitive_type [66303,66310]" dest="primitive_type [66323,66330]"/>
  <match src="(: ( [5669,5670]" dest="(: ( [5669,5670]"/>
  <match src="}: } [80925,80926]" dest="}: } [81612,81613]"/>
  <match src="): ) [90991,90992]" dest="): ) [92016,92017]"/>
  <match src="=: = [68032,68033]" dest="=: = [68284,68285]"/>
  <match src="identifier: _x [33996,33998]" dest="identifier: _x [33996,33998]"/>
  <match src="number_literal: 1 [37132,37133]" dest="number_literal: 1 [37132,37133]"/>
  <match src=",: , [81910,81911]" dest=",: , [82742,82743]"/>
  <match src="type_name [36757,36764]" dest="type_name [36757,36764]"/>
  <match src="call_expression [20889,20957]" dest="call_expression [20889,20957]"/>
  <match src="member_expression [86437,86447]" dest="member_expression [87725,87735]"/>
  <match src="call_argument [57334,57355]" dest="call_argument [57336,57357]"/>
  <match src="returns: returns [39284,39291]" dest="returns: returns [39284,39291]"/>
  <match src="==: == [89171,89173]" dest="==: == [90096,90098]"/>
  <match src="identifier: block [106802,106807]" dest="identifier: block [106726,106731]"/>
  <match src="identifier: _approve [57162,57170]" dest="identifier: _approve [57164,57172]"/>
  <match src="(: ( [14326,14327]" dest="(: ( [14326,14327]"/>
  <match src="identifier: returndata [17118,17128]" dest="identifier: returndata [17118,17128]"/>
  <match src="identifier: amount [57437,57443]" dest="identifier: amount [57439,57445]"/>
  <match src="call_expression [56630,56654]" dest="call_expression [56632,56656]"/>
  <match src="): ) [104670,104671]" dest="): ) [104594,104595]"/>
  <match src="identifier: _decimals [50775,50784]" dest="identifier: _decimals [50777,50786]"/>
  <match src="[: [ [95386,95387]" dest="[: [ [94534,94535]"/>
  <match src="user_defined_type [99521,99529]" dest="user_defined_type [97611,97619]"/>
  <match src="uint256: uint256 [64869,64876]" dest="uint256: uint256 [64877,64884]"/>
  <match src="type_name [66170,66177]" dest="type_name [66188,66195]"/>
  <match src="): ) [93765,93766]" dest="): ) [93411,93412]"/>
  <match src="identifier: require [80017,80024]" dest="identifier: require [80602,80609]"/>
  <match src="identifier: value [21935,21940]" dest="identifier: value [21935,21940]"/>
  <match src="identifier: numCheckpoints [59199,59213]" dest="identifier: numCheckpoints [59201,59215]"/>
  <match src="identifier: senderRelationshipInfo [98626,98648]" dest="identifier: senderRelationshipInfo [97391,97413]"/>
  <match src="primitive_type [58897,58904]" dest="primitive_type [58899,58906]"/>
  <match src="variable_declaration_statement [34827,34878]" dest="variable_declaration_statement [34827,34878]"/>
  <match src="parameter [39454,39467]" dest="parameter [39454,39467]"/>
  <match src="type_name [39866,39870]" dest="type_name [39866,39870]"/>
  <match src="function_definition [45848,45974]" dest="function_definition [45850,45976]"/>
  <match src="uint224: uint224 [35164,35171]" dest="uint224: uint224 [35164,35171]"/>
  <match src="variable_declaration_statement [69475,69506]" dest="variable_declaration_statement [69186,69217]"/>
  <match src="virtual: virtual [102930,102937]" dest="virtual: virtual [102854,102861]"/>
  <match src="]: ] [89478,89479]" dest="]: ] [90720,90721]"/>
  <match src="identifier: value [21605,21610]" dest="identifier: value [21605,21610]"/>
  <match src="call_argument [15734,15738]" dest="call_argument [15734,15738]"/>
  <match src="(: ( [55935,55936]" dest="(: ( [55937,55938]"/>
  <match src="): ) [109091,109092]" dest="): ) [109015,109016]"/>
  <match src="): ) [16890,16891]" dest="): ) [16890,16891]"/>
  <match src=".: . [104304,104305]" dest=".: . [104228,104229]"/>
  <match src="solidity: solidity [38463,38471]" dest="solidity: solidity [38463,38471]"/>
  <match src="identifier: contractFeeRateNumerator [45367,45391]" dest="identifier: contractFeeRateNumerator [45369,45393]"/>
  <match src="identifier: contractFeeRateDenominator [46434,46460]" dest="identifier: contractFeeRateDenominator [46676,46702]"/>
  <match src="binary_expression [34424,34429]" dest="binary_expression [34424,34429]"/>
  <match src="public: public [51657,51663]" dest="public: public [51659,51665]"/>
  <match src="visibility [68912,68920]" dest="visibility [68623,68631]"/>
  <match src="(: ( [38199,38200]" dest="(: ( [38199,38200]"/>
  <match src="identifier: otherPoolDividendWeight [76486,76509]" dest="identifier: otherPoolDividendWeight [76002,76025]"/>
  <match src="identifier: endBlock [81247,81255]" dest="identifier: endBlock [81936,81944]"/>
  <match src="block_statement [30733,30788]" dest="block_statement [30733,30788]"/>
  <match src="(: ( [84764,84765]" dest="(: ( [85895,85896]"/>
  <match src="}: } [26950,26951]" dest="}: } [26950,26951]"/>
  <match src="return_statement [79122,79129]" dest="return_statement [79285,79292]"/>
  <match src="=: = [98779,98780]" dest="=: = [98985,98986]"/>
  <match src="}: } [78122,78123]" dest="}: } [77255,77256]"/>
  <match src="uint256: uint256 [58925,58932]" dest="uint256: uint256 [58927,58934]"/>
  <match src="identifier: _x [36482,36484]" dest="identifier: _x [36482,36484]"/>
  <match src="variable_declaration_statement [27291,27330]" dest="variable_declaration_statement [27291,27330]"/>
  <match src="virtual: virtual [50892,50899]" dest="virtual: virtual [50894,50901]"/>
  <match src="variable_declaration [79937,79970]" dest="variable_declaration [80522,80555]"/>
  <match src="): ) [29245,29246]" dest="): ) [29245,29246]"/>
  <match src="member_expression [83212,83237]" dest="member_expression [90391,90416]"/>
  <match src="identifier: sub [83971,83974]" dest="identifier: sub [84500,84503]"/>
  <match src="identifier: targetTokenPosition [70340,70359]" dest="identifier: targetTokenPosition [70051,70070]"/>
  <match src="primitive_type [2692,2699]" dest="primitive_type [2692,2699]"/>
  <match src="}: } [106309,106310]" dest="}: } [106233,106234]"/>
  <match src="returns: returns [2738,2745]" dest="returns: returns [2738,2745]"/>
  <match src="identifier: a [10898,10899]" dest="identifier: a [10898,10899]"/>
  <match src="storage: storage [67734,67741]" dest="storage: storage [67948,67955]"/>
  <match src="[: [ [108531,108532]" dest="[: [ [108455,108456]"/>
  <match src="return_type_definition [40491,40505]" dest="return_type_definition [40491,40505]"/>
  <match src="}: } [81329,81330]" dest="}: } [82018,82019]"/>
  <match src="primitive_type [11729,11736]" dest="primitive_type [11729,11736]"/>
  <match src="identifier: AddToBlacklist [66784,66798]" dest="identifier: AddToBlacklist [67037,67051]"/>
  <match src="primitive_type [28958,28965]" dest="primitive_type [28958,28965]"/>
  <match src="identifier: i [76779,76780]" dest="identifier: i [76295,76296]"/>
  <match src="identifier: denominator [37300,37311]" dest="identifier: denominator [37300,37311]"/>
  <match src="if_statement [78334,78382]" dest="if_statement [77846,77894]"/>
  <match src="expression_statement [92967,93005]" dest="expression_statement [92615,92653]"/>
  <match src=",: , [46232,46233]" dest=",: , [46234,46235]"/>
  <match src="identifier: invitorRelationshipInfo [98884,98907]" dest="identifier: invitorRelationshipInfo [99073,99096]"/>
  <match src="parameter [46120,46132]" dest="parameter [46122,46134]"/>
  <match src="call_argument [34324,34338]" dest="call_argument [34324,34338]"/>
  <match src="type_name [6824,6831]" dest="type_name [6824,6831]"/>
  <match src="primitive_type [83371,83378]" dest="primitive_type [85155,85162]"/>
  <match src="primitive_type [100987,100994]" dest="primitive_type [101002,101009]"/>
  <match src="uint256: uint256 [85903,85910]" dest="uint256: uint256 [97799,97806]"/>
  <match src=".: . [78342,78343]" dest=".: . [77854,77855]"/>
  <match src="member_expression [107472,107500]" dest="member_expression [107396,107424]"/>
  <match src="]: ] [62529,62530]" dest="]: ] [62531,62532]"/>
  <match src="identifier: WETHToken [69853,69862]" dest="identifier: WETHToken [69564,69573]"/>
  <match src="is: is [58753,58755]" dest="is: is [58755,58757]"/>
  <match src="expression_statement [88789,88803]" dest="expression_statement [89637,89651]"/>
  <match src="identifier: poolTotalWeight [100643,100658]" dest="identifier: poolTotalWeight [100219,100234]"/>
  <match src="(: ( [27920,27921]" dest="(: ( [27920,27921]"/>
  <match src="): ) [91088,91089]" dest="): ) [92113,92114]"/>
  <match src="}: } [70639,70640]" dest="}: } [70350,70351]"/>
  <match src="returns: returns [40183,40190]" dest="returns: returns [40183,40190]"/>
  <match src="primitive_type [217,224]" dest="primitive_type [217,224]"/>
  <match src="): ) [20956,20957]" dest="): ) [20956,20957]"/>
  <match src="(: ( [102411,102412]" dest="(: ( [102270,102271]"/>
  <match src="return_statement [86154,86161]" dest="return_statement [87442,87449]"/>
  <match src="): ) [23399,23400]" dest="): ) [23399,23400]"/>
  <match src="variable_declaration_statement [35220,35278]" dest="variable_declaration_statement [35220,35278]"/>
  <match src="identifier: uq112x112 [63998,64007]" dest="identifier: uq112x112 [64000,64009]"/>
  <match src="identifier: safeSHARDTransfer [83855,83872]" dest="identifier: safeSHARDTransfer [85576,85593]"/>
  <match src="function: function [3425,3433]" dest="function: function [3425,3433]"/>
  <match src="member_expression [100766,100788]" dest="member_expression [100751,100773]"/>
  <match src="call_argument [104309,104329]" dest="call_argument [104233,104253]"/>
  <match src="identifier: recipient [55057,55066]" dest="identifier: recipient [55059,55068]"/>
  <match src="binary_expression [35651,35670]" dest="binary_expression [35651,35670]"/>
  <match src="if_statement [69950,70185]" dest="if_statement [69661,69896]"/>
  <match src="uint32: uint32 [106009,106015]" dest="uint32: uint32 [105933,105939]"/>
  <match src="(: ( [90570,90571]" dest="(: ( [91595,91596]"/>
  <match src="member_expression [91108,91123]" dest="member_expression [92133,92148]"/>
  <match src="return_type_definition [40300,40371]" dest="return_type_definition [40300,40371]"/>
  <match src="): ) [30890,30891]" dest="): ) [30890,30891]"/>
  <match src="call_argument [46742,46764]" dest="call_argument [46984,47006]"/>
  <match src="=: = [93715,93716]" dest="=: = [93363,93364]"/>
  <match src="type_cast_expression [34445,34454]" dest="type_cast_expression [34445,34454]"/>
  <match src="variable_declaration [35220,35241]" dest="variable_declaration [35220,35241]"/>
  <match src="type_name [39566,39570]" dest="type_name [39566,39570]"/>
  <match src="internal: internal [34237,34245]" dest="internal: internal [34237,34245]"/>
  <match src="expression_statement [24475,24480]" dest="expression_statement [24475,24480]"/>
  <match src="type_cast_expression [33493,33523]" dest="type_cast_expression [33493,33523]"/>
  <match src="uint256: uint256 [66388,66395]" dest="uint256: uint256 [66408,66415]"/>
  <match src="): ) [85478,85479]" dest="): ) [86778,86779]"/>
  <match src="identifier: a [7231,7232]" dest="identifier: a [7231,7232]"/>
  <match src="assignment_expression [29753,29773]" dest="assignment_expression [29753,29773]"/>
  <match src="primitive_type [59842,59849]" dest="primitive_type [59844,59851]"/>
  <match src="block_statement [19364,19896]" dest="block_statement [19364,19896]"/>
  <match src="call_argument [86449,86465]" dest="call_argument [87737,87753]"/>
  <match src="{: { [100306,100307]" dest="{: { [99647,99648]"/>
  <match src="expression_statement [70505,70629]" dest="expression_statement [70216,70340]"/>
  <match src="assignment_expression [73551,73594]" dest="assignment_expression [73316,73359]"/>
  <match src="uint: uint [95768,95772]" dest="uint: uint [94916,94920]"/>
  <match src="): ) [93169,93170]" dest="): ) [92817,92818]"/>
  <match src="identifier: value [22323,22328]" dest="identifier: value [22323,22328]"/>
  <match src="assignment_expression [98190,98352]" dest="assignment_expression [96955,97117]"/>
  <match src="identifier: _count [87357,87363]" dest="identifier: _count [88518,88524]"/>
  <match src=",: , [27222,27223]" dest=",: , [27222,27223]"/>
  <match src="call_argument [20947,20949]" dest="call_argument [20947,20949]"/>
  <match src="&gt;: &gt; [61535,61536]" dest="&gt;: &gt; [61537,61538]"/>
  <match src="identifier: pool [89067,89071]" dest="identifier: pool [89915,89919]"/>
  <match src="primitive_type [59053,59060]" dest="primitive_type [59055,59062]"/>
  <match src="variable_declaration_statement [78285,78324]" dest="variable_declaration_statement [77418,77457]"/>
  <match src=",: , [19200,19201]" dest=",: , [19200,19201]"/>
  <match src="): ) [75976,75977]" dest="): ) [75492,75493]"/>
  <match src="private: private [49188,49195]" dest="private: private [49190,49197]"/>
  <match src="expression_statement [67966,67995]" dest="expression_statement [68218,68247]"/>
  <match src="type_name [85843,85851]" dest="type_name [87143,87151]"/>
  <match src="identifier: amount [56647,56653]" dest="identifier: amount [56649,56655]"/>
  <match src="type_name [39101,39105]" dest="type_name [39101,39105]"/>
  <match src="uint256: uint256 [61488,61495]" dest="uint256: uint256 [61490,61497]"/>
  <match src="member_expression [105054,105084]" dest="member_expression [104978,105008]"/>
  <match src="number_literal: 36 [80129,80131]" dest="number_literal: 36 [80714,80716]"/>
  <match src="expression_statement [74890,74950]" dest="expression_statement [74761,74822]"/>
  <match src="member_expression [23331,23358]" dest="member_expression [23331,23358]"/>
  <match src="parameter [10963,10970]" dest="parameter [10963,10970]"/>
  <match src="(: ( [64887,64888]" dest="(: ( [64895,64896]"/>
  <match src="function_body [98510,100067]" dest="function_body [97275,98772]"/>
  <match src="uint256: uint256 [73302,73309]" dest="uint256: uint256 [73067,73074]"/>
  <match src="identifier: add [83085,83088]" dest="identifier: add [83864,83867]"/>
  <match src="identifier: poolTotalWeight [101637,101652]" dest="identifier: poolTotalWeight [101374,101389]"/>
  <match src="(: ( [85416,85417]" dest="(: ( [86716,86717]"/>
  <match src="if: if [31381,31383]" dest="if: if [31381,31383]"/>
  <match src="identifier: blockTimestamp [108289,108303]" dest="identifier: blockTimestamp [108213,108227]"/>
  <match src="assignment_expression [99990,100059]" dest="assignment_expression [98695,98764]"/>
  <match src="member_expression [46391,46403]" dest="member_expression [46633,46645]"/>
  <match src="identifier: mintSHARD [82705,82714]" dest="identifier: mintSHARD [83543,83552]"/>
  <match src="(: ( [103873,103874]" dest="(: ( [103797,103798]"/>
  <match src="{: { [94178,94179]" dest="{: { [93824,93825]"/>
  <match src="{: { [61759,61760]" dest="{: { [61761,61762]"/>
  <match src="address: address [57171,57178]" dest="address: address [57173,57180]"/>
  <match src="variable_declaration [99709,99735]" dest="variable_declaration [97901,97927]"/>
  <match src="while_statement [103868,104206]" dest="while_statement [103792,104130]"/>
  <match src="return_statement [107217,107236]" dest="return_statement [107141,107160]"/>
  <match src="): ) [106489,106490]" dest="): ) [106413,106414]"/>
  <match src="(: ( [22434,22435]" dest="(: ( [22434,22435]"/>
  <match src="!=: != [42151,42153]" dest="!=: != [42151,42153]"/>
  <match src="uint256: uint256 [93150,93157]" dest="uint256: uint256 [92798,92805]"/>
  <match src="identifier: l [27450,27451]" dest="identifier: l [27450,27451]"/>
  <match src="return: return [15697,15703]" dest="return: return [15697,15703]"/>
  <match src="primitive_type [6835,6842]" dest="primitive_type [6835,6842]"/>
  <match src="(: ( [40675,40676]" dest="(: ( [40675,40676]"/>
  <match src="): ) [40020,40021]" dest="): ) [40020,40021]"/>
  <match src="identifier: uq112x112 [35950,35959]" dest="identifier: uq112x112 [35950,35959]"/>
  <match src="identifier: r [31532,31533]" dest="identifier: r [31532,31533]"/>
  <match src="): ) [31836,31837]" dest="): ) [31836,31837]"/>
  <match src="=: = [28993,28994]" dest="=: = [28993,28994]"/>
  <match src="identifier: _pid [82328,82332]" dest="identifier: _pid [83166,83170]"/>
  <match src="): ) [58602,58603]" dest="): ) [58604,58605]"/>
  <match src="identifier: _isWithdrawn [42886,42898]" dest="identifier: _isWithdrawn [42886,42898]"/>
  <match src="type_name [66809,66816]" dest="type_name [67062,67069]"/>
  <match src="type_cast_expression [36399,36413]" dest="type_cast_expression [36399,36413]"/>
  <match src="identifier: _potential [88838,88848]" dest="identifier: _potential [89686,89696]"/>
  <match src="type_cast_expression [34777,34807]" dest="type_cast_expression [34777,34807]"/>
  <match src="(: ( [54124,54125]" dest="(: ( [54126,54127]"/>
  <match src="identifier: _amount [96295,96302]" dest="identifier: _amount [95605,95612]"/>
  <match src="): ) [61409,61410]" dest="): ) [61411,61412]"/>
  <match src="if: if [29487,29489]" dest="if: if [29487,29489]"/>
  <match src="(: ( [96229,96230]" dest="(: ( [95539,95540]"/>
  <match src="public: public [59997,60003]" dest="public: public [59999,60005]"/>
  <match src="identifier: setTokenAmountLimitFeeRate [44776,44802]" dest="identifier: setTokenAmountLimitFeeRate [44778,44804]"/>
  <match src="virtual: virtual [75919,75926]" dest="virtual: virtual [75435,75442]"/>
  <match src="call_expression [96217,96244]" dest="call_expression [95527,95554]"/>
  <match src="): ) [92887,92888]" dest="): ) [92535,92536]"/>
  <match src="bool: bool [43968,43972]" dest="bool: bool [43968,43972]"/>
  <match src="type_name [41683,41689]" dest="type_name [41683,41689]"/>
  <match src="identifier: VotesBalanceChanged [59226,59245]" dest="identifier: VotesBalanceChanged [59228,59247]"/>
  <match src="identifier: balanceOf [96143,96152]" dest="identifier: balanceOf [95453,95462]"/>
  <match src="identifier: div [79367,79370]" dest="identifier: div [79522,79525]"/>
  <match src="number_literal: 0 [6294,6295]" dest="number_literal: 0 [6294,6295]"/>
  <match src="identifier: self [38200,38204]" dest="identifier: self [38200,38204]"/>
  <match src="comment: // reverts on overflow [37509,37531]" dest="comment: // reverts on overflow [37509,37531]"/>
  <match src="primitive_type [54819,54826]" dest="primitive_type [54821,54828]"/>
  <match src="identifier: _pid [84581,84585]" dest="identifier: _pid [85712,85716]"/>
  <match src="identifier: sender [84424,84430]" dest="identifier: sender [84959,84965]"/>
  <match src="primitive_type [81891,81898]" dest="primitive_type [82723,82730]"/>
  <match src=",: , [23567,23568]" dest=",: , [23567,23568]"/>
  <match src="type_name [100166,100173]" dest="type_name [80167,80174]"/>
  <match src="emit_statement [71565,71637]" dest="emit_statement [71276,71348]"/>
  <match src="&quot;: &quot; [16923,16924]" dest="&quot;: &quot; [16923,16924]"/>
  <match src="identifier: number [82662,82668]" dest="identifier: number [83500,83506]"/>
  <match src=",: , [46153,46154]" dest=",: , [46155,46156]"/>
  <match src="type_name [79510,79517]" dest="type_name [78870,78877]"/>
  <match src="identifier: _balances [48993,49002]" dest="identifier: _balances [48995,49004]"/>
  <match src="identifier: add [55830,55833]" dest="identifier: add [55832,55835]"/>
  <match src="identifier: account [55940,55947]" dest="identifier: account [55942,55949]"/>
  <match src="): ) [101598,101599]" dest="): ) [101335,101336]"/>
  <match src="binary_expression [36034,36046]" dest="binary_expression [36034,36046]"/>
  <match src="call_argument [34452,34453]" dest="call_argument [34452,34453]"/>
  <match src="memory: memory [88540,88546]" dest="memory: memory [89388,89394]"/>
  <match src="identifier: pool [90503,90507]" dest="identifier: pool [91528,91532]"/>
  <match src="returns: returns [39483,39490]" dest="returns: returns [39483,39490]"/>
  <match src="): ) [64667,64668]" dest="): ) [64671,64672]"/>
  <match src="identifier: sum [35734,35737]" dest="identifier: sum [35734,35737]"/>
  <match src="binary_expression [19450,19471]" dest="binary_expression [19450,19471]"/>
  <match src="(: ( [73342,73343]" dest="(: ( [73107,73108]"/>
  <match src="block_statement [76547,76634]" dest="block_statement [76063,76150]"/>
  <match src="(: ( [31929,31930]" dest="(: ( [31929,31930]"/>
  <match src="member_expression [78837,78862]" dest="member_expression [77553,77578]"/>
  <match src="identifier: name_ [49622,49627]" dest="identifier: name_ [49624,49629]"/>
  <match src="identifier: onlyOwner [44511,44520]" dest="identifier: onlyOwner [44513,44522]"/>
  <match src="call_expression [93247,93271]" dest="call_expression [92895,92919]"/>
  <match src="type_name [96070,96077]" dest="type_name [95380,95387]"/>
  <match src="function_definition [36739,37458]" dest="function_definition [36739,37458]"/>
  <match src="identifier: owner [25970,25975]" dest="identifier: owner [25970,25975]"/>
  <match src="binary_expression [97249,97261]" dest="binary_expression [96014,96026]"/>
  <match src="identifier: _newStartBlock [108364,108378]" dest="identifier: _newStartBlock [108288,108302]"/>
  <match src="{: { [75927,75928]" dest="{: { [75443,75444]"/>
  <match src=".: . [60979,60980]" dest=".: . [60981,60982]"/>
  <match src="call_struct_argument [71267,71286]" dest="call_struct_argument [70978,70997]"/>
  <match src="boolean_literal [6594,6599]" dest="boolean_literal [6594,6599]"/>
  <match src="block_statement [83046,83134]" dest="block_statement [83825,83913]"/>
  <match src="?: ? [61878,61879]" dest="?: ? [61880,61881]"/>
  <match src="identifier: user [62511,62515]" dest="identifier: user [62513,62517]"/>
  <match src="identifier: add [106655,106658]" dest="identifier: add [106579,106582]"/>
  <match src="identifier: setNftShard [68881,68892]" dest="identifier: setNftShard [68592,68603]"/>
  <match src="identifier: _msgData [24408,24416]" dest="identifier: _msgData [24408,24416]"/>
  <match src="identifier: b [8819,8820]" dest="identifier: b [8819,8820]"/>
  <match src="internal: internal [36797,36805]" dest="internal: internal [36797,36805]"/>
  <match src="address: address [2692,2699]" dest="address: address [2692,2699]"/>
  <match src="(: ( [29633,29634]" dest="(: ( [29633,29634]"/>
  <match src="&gt;=: &gt;= [30723,30725]" dest="&gt;=: &gt;= [30723,30725]"/>
  <match src="member_expression [99058,99090]" dest="member_expression [99226,99258]"/>
  <match src="): ) [47053,47054]" dest="): ) [46440,46441]"/>
  <match src="(: ( [108460,108461]" dest="(: ( [108384,108385]"/>
  <match src="*: * [27713,27714]" dest="*: * [27713,27714]"/>
  <match src="parameter [98449,98462]" dest="parameter [98853,98866]"/>
  <match src="call_argument [17068,17072]" dest="call_argument [17068,17072]"/>
  <match src="call_expression [103967,104026]" dest="call_expression [103891,103950]"/>
  <match src="identifier: x [31824,31825]" dest="identifier: x [31824,31825]"/>
  <match src=".: . [38107,38108]" dest=".: . [38107,38108]"/>
  <match src="pure: pure [6855,6859]" dest="pure: pure [6855,6859]"/>
  <match src="type_name [66948,66955]" dest="type_name [67201,67208]"/>
  <match src="): ) [18399,18400]" dest="): ) [18399,18400]"/>
  <match src=".: . [100471,100472]" dest=".: . [78517,78518]"/>
  <match src="type_name [77352,77359]" dest="type_name [76792,76799]"/>
  <match src="primitive_type [73302,73309]" dest="primitive_type [73067,73074]"/>
  <match src="variable_declaration_statement [61600,61638]" dest="variable_declaration_statement [61602,61640]"/>
  <match src="==: == [60257,60259]" dest="==: == [60259,60261]"/>
  <match src=".: . [42415,42416]" dest=".: . [42415,42416]"/>
  <match src="&gt;: &gt; [31308,31309]" dest="&gt;: &gt; [31308,31309]"/>
  <match src="contract_body [135,250]" dest="contract_body [135,250]"/>
  <match src="{: { [81336,81337]" dest="{: { [82025,82026]"/>
  <match src="[: [ [88711,88712]" dest="[: [ [89559,89560]"/>
  <match src="call_expression [33094,33129]" dest="call_expression [33094,33129]"/>
  <match src="call_argument [44296,44311]" dest="call_argument [44298,44313]"/>
  <match src="identifier: d [27711,27712]" dest="identifier: d [27711,27712]"/>
  <match src="number_literal: 36 [65771,65773]" dest="number_literal: 36 [65781,65783]"/>
  <match src="identifier: _fromIndex [93332,93342]" dest="identifier: _fromIndex [92980,92990]"/>
  <match src="{: { [84625,84626]" dest="{: { [85756,85757]"/>
  <match src="identifier: data [17393,17397]" dest="identifier: data [17393,17397]"/>
  <match src="memory: memory [33925,33931]" dest="memory: memory [33925,33931]"/>
  <match src="assignment_expression [101619,101674]" dest="assignment_expression [101356,101413]"/>
  <match src="visibility [38690,38698]" dest="visibility [38690,38698]"/>
  <match src="state_mutability [103208,103212]" dest="state_mutability [103132,103136]"/>
  <match src="type_cast_expression [55928,55938]" dest="type_cast_expression [55930,55940]"/>
  <match src="parameter [5904,5913]" dest="parameter [5904,5913]"/>
  <match src="type_name [64959,64967]" dest="type_name [64969,64977]"/>
  <match src="uint256: uint256 [22221,22228]" dest="uint256: uint256 [22221,22228]"/>
  <match src="state_variable_declaration [43662,43700]" dest="state_variable_declaration [43662,43700]"/>
  <match src="): ) [49058,49059]" dest="): ) [49060,49061]"/>
  <match src="call_argument [55670,55691]" dest="call_argument [55672,55693]"/>
  <match src="uint256: uint256 [92905,92912]" dest="uint256: uint256 [92553,92560]"/>
  <match src="}: } [45477,45478]" dest="}: } [45479,45480]"/>
  <match src="number_literal: 1 [28995,28996]" dest="number_literal: 1 [28995,28996]"/>
  <match src="string [35754,35787]" dest="string [35754,35787]"/>
  <match src="identifier: target [17040,17046]" dest="identifier: target [17040,17046]"/>
  <match src="identifier: x [30450,30451]" dest="identifier: x [30450,30451]"/>
  <match src="block_statement [29335,29393]" dest="block_statement [29335,29393]"/>
  <match src=".: . [97293,97294]" dest=".: . [96058,96059]"/>
  <match src="identifier: otherPoolDividendWeight [79399,79422]" dest="identifier: otherPoolDividendWeight [79554,79577]"/>
  <match src="identifier: isCalculateInvitation [100820,100841]" dest="identifier: isCalculateInvitation [100806,100827]"/>
  <match src="parameter [33058,33074]" dest="parameter [33058,33074]"/>
  <match src="+=: += [27615,27617]" dest="+=: += [27615,27617]"/>
  <match src="identifier: a [8927,8928]" dest="identifier: a [8927,8928]"/>
  <match src="identifier: invitor [87174,87181]" dest="identifier: invitor [88333,88340]"/>
  <match src="returns: returns [25787,25794]" dest="returns: returns [25787,25794]"/>
  <match src="returns: returns [7721,7728]" dest="returns: returns [7721,7728]"/>
  <match src="pragma_directive [4471,4502]" dest="pragma_directive [4471,4502]"/>
  <match src="identifier: farmMint [77920,77928]" dest="identifier: totalReward [77155,77166]"/>
  <match src="return: return [86154,86160]" dest="return: return [87442,87448]"/>
  <match src="binary_expression [61527,61538]" dest="binary_expression [61529,61540]"/>
  <match src="=: = [88748,88749]" dest="=: = [89596,89597]"/>
  <match src="identifier: IUniswapV2Pair [104898,104912]" dest="identifier: IUniswapV2Pair [104822,104836]"/>
  <match src="function_body [31287,32157]" dest="function_body [31287,32157]"/>
  <match src="]: ] [62343,62344]" dest="]: ] [62345,62346]"/>
  <match src="parameter [36757,36774]" dest="parameter [36757,36774]"/>
  <match src="call_expression [81835,81859]" dest="call_expression [82667,82691]"/>
  <match src="): ) [82620,82621]" dest="): ) [83458,83459]"/>
  <match src="primitive_type [43257,43264]" dest="primitive_type [43257,43264]"/>
  <match src="primitive_type [33709,33716]" dest="primitive_type [33709,33716]"/>
  <match src=",: , [55691,55692]" dest=",: , [55693,55694]"/>
  <match src=",: , [39855,39856]" dest=",: , [39855,39856]"/>
  <match src="}: } [30532,30533]" dest="}: } [30532,30533]"/>
  <match src="(: ( [51046,51047]" dest="(: ( [51048,51049]"/>
  <match src="(: ( [38014,38015]" dest="(: ( [38014,38015]"/>
  <match src="): ) [38971,38972]" dest="): ) [38971,38972]"/>
  <match src="primitive_type [92852,92859]" dest="primitive_type [92500,92507]"/>
  <match src="(: ( [37935,37936]" dest="(: ( [37935,37936]"/>
  <match src="binary_expression [85417,85439]" dest="binary_expression [86717,86739]"/>
  <match src="identifier: value [36241,36246]" dest="identifier: value [36241,36246]"/>
  <match src="identifier: sender [47280,47286]" dest="identifier: sender [47282,47288]"/>
  <match src="=: = [106854,106855]" dest="=: = [106778,106779]"/>
  <match src="call_expression [93094,93118]" dest="call_expression [92742,92766]"/>
  <match src="identifier: poolTotalWeight [100625,100640]" dest="identifier: poolTotalWeight [100201,100216]"/>
  <match src="expression_statement [86375,86414]" dest="expression_statement [87663,87702]"/>
  <match src="identifier: otherPoolDividendWeight [75788,75811]" dest="identifier: otherPoolDividendWeight [75304,75327]"/>
  <match src="visibility [50721,50727]" dest="visibility [50723,50729]"/>
  <match src=".: . [108210,108211]" dest=".: . [108134,108135]"/>
  <match src="event_definition [59220,59347]" dest="event_definition [59222,59349]"/>
  <match src="array_access [88877,88885]" dest="array_access [89725,89733]"/>
  <match src="address: address [16781,16788]" dest="address: address [16781,16788]"/>
  <match src=".: . [36198,36199]" dest=".: . [36198,36199]"/>
  <match src="type_name [50918,50925]" dest="type_name [50920,50927]"/>
  <match src="call_argument [82328,82332]" dest="call_argument [83166,83170]"/>
  <match src="[: [ [74282,74283]" dest="[: [ [73995,73996]"/>
  <match src="): ) [56492,56493]" dest="): ) [56494,56495]"/>
  <match src="(: ( [25571,25572]" dest="(: ( [25571,25572]"/>
  <match src="(: ( [97201,97202]" dest="(: ( [95966,95967]"/>
  <match src="solidity_version: 0.5.0 [38474,38479]" dest="solidity_version: 0.5.0 [38474,38479]"/>
  <match src="): ) [95507,95508]" dest="): ) [94655,94656]"/>
  <match src="solidity_pragma_token [108680,108695]" dest="solidity_pragma_token [108604,108619]"/>
  <match src="identifier: _toBlock [79228,79236]" dest="identifier: _toBlock [79383,79391]"/>
  <match src="(: ( [90996,90997]" dest="(: ( [92021,92022]"/>
  <match src="primitive_type [65824,65831]" dest="primitive_type [65834,65841]"/>
  <match src="-: - [61902,61903]" dest="-: - [61904,61905]"/>
  <match src="type_name [40500,40504]" dest="type_name [40500,40504]"/>
  <match src="variable_declaration_statement [86000,86075]" dest="variable_declaration_statement [100130,100152]"/>
  <match src="return: return [37792,37798]" dest="return: return [37792,37798]"/>
  <match src="expression_statement [72212,72230]" dest="expression_statement [72016,72034]"/>
  <match src="call_argument [80584,80593]" dest="call_argument [81269,81278]"/>
  <match src="identifier: length [72345,72351]" dest="identifier: length [72100,72106]"/>
  <match src="pragma_directive [30008,30032]" dest="pragma_directive [30008,30032]"/>
  <match src="type_name [102431,102439]" dest="type_name [102290,102298]"/>
  <match src="identifier: price0CumulativeLast [106468,106488]" dest="identifier: price0CumulativeLast [106392,106412]"/>
  <match src="): ) [89911,89912]" dest="): ) [91158,91159]"/>
  <match src="binary_expression [89707,89732]" dest="binary_expression [90949,90974]"/>
  <match src="memory: memory [22930,22936]" dest="memory: memory [22930,22936]"/>
  <match src="uint16: uint16 [31719,31725]" dest="uint16: uint16 [31719,31725]"/>
  <match src="type_name [85213,85220]" dest="type_name [86513,86520]"/>
  <match src="=: = [46889,46890]" dest="=: = [47131,47132]"/>
  <match src="identifier: a [7329,7330]" dest="identifier: a [7329,7330]"/>
  <match src="internal: internal [16220,16228]" dest="internal: internal [16220,16228]"/>
  <match src="]: ] [95387,95388]" dest="]: ] [94535,94536]"/>
  <match src="identifier: r [29722,29723]" dest="identifier: r [29722,29723]"/>
  <match src="type_name [95582,95589]" dest="type_name [94730,94737]"/>
  <match src="private: private [25292,25299]" dest="private: private [25292,25299]"/>
  <match src=".: . [106467,106468]" dest=".: . [106391,106392]"/>
  <match src="emit_statement [62644,62695]" dest="emit_statement [62646,62697]"/>
  <match src="variable_declaration_statement [95525,95558]" dest="variable_declaration_statement [94673,94706]"/>
  <match src="struct_member [64056,64084]" dest="struct_member [64058,64086]"/>
  <match src="): ) [104798,104799]" dest="): ) [104722,104723]"/>
  <match src="return_statement [102747,102769]" dest="return_statement [102671,102693]"/>
  <match src="variable_declaration_statement [107035,107093]" dest="variable_declaration_statement [106959,107017]"/>
  <match src="}: } [83133,83134]" dest="}: } [83912,83913]"/>
  <match src="parameter [96070,96081]" dest="parameter [95380,95391]"/>
  <match src="view: view [38953,38957]" dest="view: view [38953,38957]"/>
  <match src="): ) [82243,82244]" dest="): ) [83081,83082]"/>
  <match src="member_expression [83930,83951]" dest="member_expression [84454,84475]"/>
  <match src="expression_statement [84781,84827]" dest="expression_statement [85912,85958]"/>
  <match src=",: , [77638,77639]" dest=",: , [77078,77079]"/>
  <match src="storage: storage [98747,98754]" dest="storage: storage [98953,98960]"/>
  <match src="identifier: reserve0 [42553,42561]" dest="identifier: reserve0 [42553,42561]"/>
  <match src="type_name [5335,5342]" dest="type_name [5335,5342]"/>
  <match src="if_statement [85562,85627]" dest="if_statement [86862,86927]"/>
  <match src="identifier: targetPid [85882,85891]" dest="identifier: targetPid [87182,87191]"/>
  <match src="call_argument [34316,34339]" dest="call_argument [34316,34339]"/>
  <match src="variable_declaration_statement [35573,35672]" dest="variable_declaration_statement [35573,35672]"/>
  <match src="(: ( [98624,98625]" dest="(: ( [97389,97390]"/>
  <match src="type_name [78999,79006]" dest="type_name [78788,78795]"/>
  <match src="primitive_type [16687,16694]" dest="primitive_type [16687,16694]"/>
  <match src="if_statement [60918,61147]" dest="if_statement [60920,61149]"/>
  <match src="): ) [53347,53348]" dest="): ) [53349,53350]"/>
  <match src="identifier: UniswapV2OracleLibrary [41148,41170]" dest="identifier: UniswapV2OracleLibrary [41148,41170]"/>
  <match src="(: ( [30801,30802]" dest="(: ( [30801,30802]"/>
  <match src="): ) [52845,52846]" dest="): ) [52847,52848]"/>
  <match src="number_literal: 4 [32003,32004]" dest="number_literal: 4 [32003,32004]"/>
  <match src="bytes: bytes [16186,16191]" dest="bytes: bytes [16186,16191]"/>
  <match src="member_expression [108235,108247]" dest="member_expression [108159,108171]"/>
  <match src="type_cast_expression [98206,98254]" dest="type_cast_expression [96971,97019]"/>
  <match src="type_name [67112,67119]" dest="type_name [67365,67372]"/>
  <match src="]: ] [88884,88885]" dest="]: ] [89732,89733]"/>
  <match src="): ) [31349,31350]" dest="): ) [31349,31350]"/>
  <match src="expression_statement [75564,75577]" dest="expression_statement [75080,75093]"/>
  <match src="identifier: a [8171,8172]" dest="identifier: a [8171,8172]"/>
  <match src="string [82670,82693]" dest="string [83508,83531]"/>
  <match src="identifier: InvitationInfo [94483,94497]" dest="identifier: InvitationInfo [94129,94143]"/>
  <match src=",: , [36335,36336]" dest=",: , [36335,36336]"/>
  <match src="identifier: _transfer [52678,52687]" dest="identifier: _transfer [52680,52689]"/>
  <match src="-: - [31617,31618]" dest="-: - [31617,31618]"/>
  <match src="&quot;: &quot; [86877,86878]" dest="&quot;: &quot; [88034,88035]"/>
  <match src="variable_declaration_statement [73965,74013]" dest="variable_declaration_statement [73695,73743]"/>
  <match src="identifier: x [29793,29794]" dest="identifier: x [29793,29794]"/>
  <match src="primitive_type [40309,40316]" dest="primitive_type [40309,40316]"/>
  <match src="): ) [108061,108062]" dest="): ) [107985,107986]"/>
  <match src="parameter [5640,5644]" dest="parameter [5640,5644]"/>
  <match src="uint256: uint256 [88704,88711]" dest="uint256: uint256 [89552,89559]"/>
  <match src="function_body [59504,59620]" dest="function_body [59506,59622]"/>
  <match src="variable_declaration_statement [83410,83430]" dest="variable_declaration_statement [85190,85210]"/>
  <match src=",: , [22308,22309]" dest=",: , [22308,22309]"/>
  <match src="uint256: uint256 [53329,53336]" dest="uint256: uint256 [53331,53338]"/>
  <match src="tuple_expression [6621,6634]" dest="tuple_expression [6621,6634]"/>
  <match src="primitive_type [89227,89234]" dest="primitive_type [90152,90159]"/>
  <match src="identifier: EvilPoolInfo [72943,72955]" dest="identifier: EvilPoolInfo [72625,72637]"/>
  <match src="call_argument [34377,34405]" dest="call_argument [34377,34405]"/>
  <match src="type_cast_expression [38305,38321]" dest="type_cast_expression [38305,38321]"/>
  <match src="public: public [26749,26755]" dest="public: public [26749,26755]"/>
  <match src=",: , [56402,56403]" dest=",: , [56404,56405]"/>
  <match src=".: . [104330,104331]" dest=".: . [104254,104255]"/>
  <match src=",: , [82597,82598]" dest=",: , [83435,83436]"/>
  <match src="identifier: _msgSender [53434,53444]" dest="identifier: _msgSender [53436,53446]"/>
  <match src="call_argument [76218,76231]" dest="call_argument [75734,75747]"/>
  <match src="): ) [97849,97850]" dest="): ) [96614,96615]"/>
  <match src="call_expression [60061,60170]" dest="call_expression [60063,60172]"/>
  <match src="identifier: RESOLUTION [33118,33128]" dest="identifier: RESOLUTION [33118,33128]"/>
  <match src="identifier: IERC20 [21896,21902]" dest="identifier: IERC20 [21896,21902]"/>
  <match src="type_name [87503,87510]" dest="type_name [88664,88671]"/>
  <match src=",: , [83656,83657]" dest=",: , [85400,85401]"/>
  <match src="user_defined_type [82479,82487]" dest="user_defined_type [83317,83325]"/>
  <match src="identifier: i [74309,74310]" dest="identifier: i [74128,74129]"/>
  <match src="): ) [97937,97938]" dest="): ) [96702,96703]"/>
  <match src="return_type_definition [39122,39136]" dest="return_type_definition [39122,39136]"/>
  <match src="=: = [82862,82863]" dest="=: = [83700,83701]"/>
  <match src="function: function [5888,5896]" dest="function: function [5888,5896]"/>
  <match src="primitive_type [66748,66755]" dest="primitive_type [67001,67008]"/>
  <match src="): ) [28250,28251]" dest="): ) [28250,28251]"/>
  <match src="type_name [39664,39668]" dest="type_name [39664,39668]"/>
  <match src="identifier: r [29735,29736]" dest="identifier: r [29735,29736]"/>
  <match src=",: , [47461,47462]" dest=",: , [47463,47464]"/>
  <match src="solidity: solidity [42662,42670]" dest="solidity: solidity [42662,42670]"/>
  <match src=":: : [34443,34444]" dest=":: : [34443,34444]"/>
  <match src="is: is [63011,63013]" dest="is: is [63013,63015]"/>
  <match src="boolean_literal [5410,5414]" dest="boolean_literal [5410,5414]"/>
  <match src="identifier: r [30929,30930]" dest="identifier: r [30929,30930]"/>
  <match src="identifier: _toIndex [93349,93357]" dest="identifier: _toIndex [92997,93005]"/>
  <match src="identifier: div [81257,81260]" dest="identifier: div [81946,81949]"/>
  <match src="function_definition [51606,51757]" dest="function_definition [51608,51759]"/>
  <match src="identifier: _pid [102465,102469]" dest="identifier: _pid [102324,102328]"/>
  <match src="comment: // reverts on overflow [34162,34184]" dest="comment: // reverts on overflow [34162,34184]"/>
  <match src="comment: /**  * @dev Contract module which provides a basic access control mechanism, where  * there is an account (an owner) that can be granted exclusive access to  * specific functions.  *  * By default, the owner account will be the one that deploys the contract. This  * can later be changed with {transferOwnership}.  *  * This module is used through inheritance. It will make available the modifier  * `onlyOwner`, which can be applied to your functions to restrict their use to  * the owner.  */ [24733,25238]" dest="comment: /**  * @dev Contract module which provides a basic access control mechanism, where  * there is an account (an owner) that can be granted exclusive access to  * specific functions.  *  * By default, the owner account will be the one that deploys the contract. This  * can later be changed with {transferOwnership}.  *  * This module is used through inheritance. It will make available the modifier  * `onlyOwner`, which can be applied to your functions to restrict their use to  * the owner.  */ [24733,25238]"/>
  <match src="member_expression [90589,90600]" dest="member_expression [91614,91625]"/>
  <match src="event_paramater [39917,39932]" dest="event_paramater [39917,39932]"/>
  <match src="(: ( [20597,20598]" dest="(: ( [20597,20598]"/>
  <match src="array_access [86316,86338]" dest="array_access [87604,87626]"/>
  <match src="assignment_expression [47315,47360]" dest="assignment_expression [47317,47362]"/>
  <match src="identifier: accumulativeDividend [79541,79561]" dest="identifier: accumulativeDividend [78901,78921]"/>
  <match src="internal: internal [15223,15231]" dest="internal: internal [15223,15231]"/>
  <match src="primitive_type [103402,103409]" dest="primitive_type [103326,103333]"/>
  <match src="parameter [102947,102954]" dest="parameter [102871,102878]"/>
  <match src="identifier: transferAdmin [45737,45750]" dest="identifier: transferAdmin [45739,45752]"/>
  <match src="return_type_definition [34251,34267]" dest="return_type_definition [34251,34267]"/>
  <match src="(: ( [98301,98302]" dest="(: ( [97066,97067]"/>
  <match src="unary_expression [34332,34334]" dest="unary_expression [34332,34334]"/>
  <match src="&gt;=: &gt;= [46678,46680]" dest="&gt;=: &gt;= [46920,46922]"/>
  <match src="=: = [89842,89843]" dest="=: = [91084,91085]"/>
  <match src="primitive_type [69735,69742]" dest="primitive_type [69446,69453]"/>
  <match src="call_expression [87021,87084]" dest="call_expression [88178,88241]"/>
  <match src="variable_declaration [97449,97466]" dest="variable_declaration [96214,96231]"/>
  <match src="uint256: uint256 [61935,61942]" dest="uint256: uint256 [61937,61944]"/>
  <match src=",: , [34375,34376]" dest=",: , [34375,34376]"/>
  <match src="): ) [106091,106092]" dest="): ) [106015,106016]"/>
  <match src="solidity: solidity [47659,47667]" dest="solidity: solidity [47661,47669]"/>
  <match src="type_name [74230,74238]" dest="type_name [74017,74025]"/>
  <match src="returns: returns [96973,96980]" dest="returns: returns [95738,95745]"/>
  <match src="type_name [54050,54057]" dest="type_name [54052,54059]"/>
  <match src="): ) [100609,100610]" dest="): ) [100185,100186]"/>
  <match src="solidity_version_comparison_operator [4494,4496]" dest="solidity_version_comparison_operator [4494,4496]"/>
  <match src="expression_statement [56453,56503]" dest="expression_statement [56455,56505]"/>
  <match src="type_name [42796,42803]" dest="type_name [42796,42803]"/>
  <match src="solidity: solidity [28369,28377]" dest="solidity: solidity [28369,28377]"/>
  <match src="=: = [80979,80980]" dest="=: = [81666,81667]"/>
  <match src="visibility [37594,37602]" dest="visibility [37594,37602]"/>
  <match src="identifier: _pairInfo [107879,107888]" dest="identifier: _pairInfo [107803,107812]"/>
  <match src=".: . [76298,76299]" dest=".: . [75814,75815]"/>
  <match src="call_argument [103051,103059]" dest="call_argument [102975,102983]"/>
  <match src="identifier: add [78473,78476]" dest="identifier: add [78053,78056]"/>
  <match src="if_statement [62276,62632]" dest="if_statement [62278,62634]"/>
  <match src="uint256: uint256 [51938,51945]" dest="uint256: uint256 [51940,51947]"/>
  <match src="(: ( [107785,107786]" dest="(: ( [107709,107710]"/>
  <match src="external: external [40529,40537]" dest="external: external [40529,40537]"/>
  <match src="user_defined_type [80187,80195]" dest="user_defined_type [80807,80815]"/>
  <match src="parameter [39293,39297]" dest="parameter [39293,39297]"/>
  <match src="address: address [51047,51054]" dest="address: address [51049,51056]"/>
  <match src=",: , [54817,54818]" dest=",: , [54819,54820]"/>
  <match src="&quot;: &quot; [82599,82600]" dest="&quot;: &quot; [83437,83438]"/>
  <match src="[: [ [87000,87001]" dest="[: [ [88157,88158]"/>
  <match src="identifier: _user [88429,88434]" dest="identifier: _user [89277,89282]"/>
  <match src="=: = [35162,35163]" dest="=: = [35162,35163]"/>
  <match src="/=: /= [27575,27577]" dest="/=: /= [27575,27577]"/>
  <match src="identifier: i [88834,88835]" dest="identifier: i [89682,89683]"/>
  <match src="type_name [42853,42860]" dest="type_name [42853,42860]"/>
  <match src="identifier: accumulativeDividend [63589,63609]" dest="identifier: accumulativeDividend [63591,63611]"/>
  <match src="&gt;=:  &gt;= [41030,41033]" dest="&gt;=:  &gt;= [41030,41033]"/>
  <match src="type_cast_expression [36154,36167]" dest="type_cast_expression [36154,36167]"/>
  <match src="identifier: amount [83520,83526]" dest="identifier: amount [84385,84391]"/>
  <match src="storage: storage [108505,108512]" dest="storage: storage [108429,108436]"/>
  <match src="call_argument [101368,101382]" dest="call_argument [82313,82327]"/>
  <match src="return: return [34715,34721]" dest="return: return [34715,34721]"/>
  <match src="(: ( [36100,36101]" dest="(: ( [36100,36101]"/>
  <match src="primitive_type [19202,19207]" dest="primitive_type [19202,19207]"/>
  <match src="internal: internal [33443,33451]" dest="internal: internal [33443,33451]"/>
  <match src=",: , [55276,55277]" dest=",: , [55278,55279]"/>
  <match src=".: . [99001,99002]" dest=".: . [99186,99187]"/>
  <match src="parameter [58576,58586]" dest="parameter [58578,58588]"/>
  <match src="parameter [96930,96945]" dest="parameter [95695,95710]"/>
  <match src="identifier: implementation [109311,109325]" dest="identifier: implementation [109235,109249]"/>
  <match src="identifier: isUsed [86922,86928]" dest="identifier: isUsed [88079,88085]"/>
  <match src="): ) [97687,97688]" dest="): ) [96452,96453]"/>
  <match src="{: { [33076,33077]" dest="{: { [33076,33077]"/>
  <match src="view: view [51664,51668]" dest="view: view [51666,51670]"/>
  <match src="public: public [32673,32679]" dest="public: public [32673,32679]"/>
  <match src="identifier: a [5912,5913]" dest="identifier: a [5912,5913]"/>
  <match src="expression_statement [109311,109339]" dest="expression_statement [109235,109263]"/>
  <match src=",: , [54891,54892]" dest=",: , [54893,54894]"/>
  <match src="call_argument [81261,81282]" dest="call_argument [81950,81971]"/>
  <match src="identifier: invitor [100916,100923]" dest="identifier: invitor [100979,100986]"/>
  <match src="identifier: mintSHARD [77342,77351]" dest="identifier: mintSHARD [76782,76791]"/>
  <match src="call_argument [17885,17891]" dest="call_argument [17885,17891]"/>
  <match src="type_name [77811,77818]" dest="type_name [78932,78939]"/>
  <match src="state_mutability [90788,90792]" dest="state_mutability [91813,91817]"/>
  <match src="identifier: votes [61572,61577]" dest="identifier: votes [61574,61579]"/>
  <match src="primitive_type [101298,101305]" dest="primitive_type [101768,101775]"/>
  <match src="comment: // ignore lockTime in stage one [79714,79745]" dest="comment: // ignore lockTime in stage one [80299,80330]"/>
  <match src="state_mutability [94294,94298]" dest="state_mutability [93940,93944]"/>
  <match src="array_access [83528,83554]" dest="array_access [84393,84419]"/>
  <match src="comment: /**      * @dev Atomically decreases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      * - `spender` must have allowance for the caller of at least      * `subtractedValue`.      */ [53511,54000]" dest="comment: /**      * @dev Atomically decreases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      * - `spender` must have allowance for the caller of at least      * `subtractedValue`.      */ [53513,54002]"/>
  <match src="call_expression [98015,98115]" dest="call_expression [96780,96880]"/>
  <match src="visibility [27988,27996]" dest="visibility [27988,27996]"/>
  <match src="number_literal: 0 [100608,100609]" dest="number_literal: 0 [100184,100185]"/>
  <match src="variable_declaration_statement [60766,60811]" dest="variable_declaration_statement [60768,60813]"/>
  <match src="number_literal: 2221 [68575,68579]" dest="number_literal: 2221 [68461,68465]"/>
  <match src="=: = [74906,74907]" dest="=: = [74777,74778]"/>
  <match src="identifier: _x [38108,38110]" dest="identifier: _x [38108,38110]"/>
  <match src="&gt;=: &gt;= [89615,89617]" dest="&gt;=: &gt;= [90857,90859]"/>
  <match src="): ) [50719,50720]" dest="): ) [50721,50722]"/>
  <match src="if_statement [89155,89217]" dest="if_statement [90080,90142]"/>
  <match src="-: - [38171,38172]" dest="-: - [38171,38172]"/>
  <match src="(: ( [47441,47442]" dest="(: ( [47443,47444]"/>
  <match src="-=: -= [31534,31536]" dest="-=: -= [31534,31536]"/>
  <match src="identifier: lower [61196,61201]" dest="identifier: lower [61198,61203]"/>
  <match src="): ) [84591,84592]" dest="): ) [85722,85723]"/>
  <match src="address: address [49020,49027]" dest="address: address [49022,49029]"/>
  <match src="identifier: sqrt [37931,37935]" dest="identifier: sqrt [37931,37935]"/>
  <match src="visibility [62211,62219]" dest="visibility [62213,62221]"/>
  <match src="visibility [94276,94284]" dest="visibility [93922,93930]"/>
  <match src="[: [ [99572,99573]" dest="[: [ [97662,97663]"/>
  <match src="type_name [97021,97028]" dest="type_name [95786,95793]"/>
  <match src="binary_expression [27836,27841]" dest="binary_expression [27836,27841]"/>
  <match src="primitive_type [5315,5322]" dest="primitive_type [5315,5322]"/>
  <match src="identifier: z [34440,34441]" dest="identifier: z [34440,34441]"/>
  <match src="member_expression [95545,95557]" dest="member_expression [94693,94705]"/>
  <match src="{: { [97984,97985]" dest="{: { [96749,96750]"/>
  <match src=".: . [95550,95551]" dest=".: . [94698,94699]"/>
  <match src="indexed: indexed [66689,66696]" dest="indexed: indexed [66942,66949]"/>
  <match src="type_name [62129,62136]" dest="type_name [62131,62138]"/>
  <match src="variable_declaration_statement [34900,34954]" dest="variable_declaration_statement [34900,34954]"/>
  <match src="call_expression [80981,81099]" dest="call_expression [81668,81786]"/>
  <match src="): ) [86530,86531]" dest="): ) [87818,87819]"/>
  <match src="identifier: originWeight [82992,83004]" dest="identifier: originWeight [83771,83783]"/>
  <match src="uint256: uint256 [48976,48983]" dest="uint256: uint256 [48978,48985]"/>
  <match src="call_expression [72331,72358]" dest="call_expression [72086,72113]"/>
  <match src="identifier: encodeWithSelector [20690,20708]" dest="identifier: encodeWithSelector [20690,20708]"/>
  <match src="uint112: uint112 [97144,97151]" dest="uint112: uint112 [95909,95916]"/>
  <match src="comment: // SHD tokens created per block. [65419,65451]" dest="comment: // SHD tokens created per block. [65429,65461]"/>
  <match src="identifier: fromBlock [60925,60934]" dest="identifier: fromBlock [60927,60936]"/>
  <match src="primitive_type [69878,69885]" dest="primitive_type [69589,69596]"/>
  <match src="]: ] [73023,73024]" dest="]: ] [72705,72706]"/>
  <match src="type_name [93150,93157]" dest="type_name [92798,92805]"/>
  <match src="}: } [6641,6642]" dest="}: } [6641,6642]"/>
  <match src="contract: contract [108704,108712]" dest="contract: contract [108628,108636]"/>
  <match src="identifier: self [34583,34587]" dest="identifier: self [34583,34587]"/>
  <match src=".: . [83101,83102]" dest=".: . [83880,83881]"/>
  <match src="identifier: invitorInfo [99782,99793]" dest="identifier: invitorInfo [97974,97985]"/>
  <match src="[: [ [102470,102471]" dest="[: [ [102329,102330]"/>
  <match src="{: { [47300,47301]" dest="{: { [47302,47303]"/>
  <match src="=: = [65929,65930]" dest="=: = [65939,65940]"/>
  <match src="yul_function_call [19753,19772]" dest="yul_function_call [19753,19772]"/>
  <match src=",: , [37356,37357]" dest=",: , [37356,37357]"/>
  <match src="function_body [107024,108311]" dest="function_body [106948,108235]"/>
  <match src="number_literal: 0 [80111,80112]" dest="number_literal: 0 [80696,80697]"/>
  <match src="call_argument [98333,98351]" dest="call_argument [97098,97116]"/>
  <match src="identifier: amount [82562,82568]" dest="identifier: amount [83400,83406]"/>
  <match src="expression_statement [45367,45412]" dest="expression_statement [45369,45414]"/>
  <match src="while_statement [87782,87984]" dest="while_statement [88943,89145]"/>
  <match src="): ) [60169,60170]" dest="): ) [60171,60172]"/>
  <match src=",: , [10996,10997]" dest=",: , [10996,10997]"/>
  <match src="(: ( [97121,97122]" dest="(: ( [95886,95887]"/>
  <match src="(: ( [89395,89396]" dest="(: ( [77745,77746]"/>
  <match src="identifier: msg [86589,86592]" dest="identifier: msg [87877,87880]"/>
  <match src="(: ( [83707,83708]" dest="(: ( [85443,85444]"/>
  <match src="=: = [89451,89452]" dest="=: = [90693,90694]"/>
  <match src="expression_statement [83290,83357]" dest="expression_statement [84275,84342]"/>
  <match src="uint: uint [39917,39921]" dest="uint: uint [39917,39921]"/>
  <match src="storage: storage [82488,82495]" dest="storage: storage [83326,83333]"/>
  <match src="(: ( [39292,39293]" dest="(: ( [39292,39293]"/>
  <match src="virtual: virtual [55643,55650]" dest="virtual: virtual [55645,55652]"/>
  <match src="identifier: checkpoints [59084,59095]" dest="identifier: checkpoints [59086,59097]"/>
  <match src="type_name [44803,44810]" dest="type_name [44805,44812]"/>
  <match src="binary_expression [80099,80112]" dest="binary_expression [80684,80697]"/>
  <match src="call_expression [103524,103546]" dest="call_expression [103448,103470]"/>
  <match src="type_name [20827,20834]" dest="type_name [20827,20834]"/>
  <match src="type_name [65081,65088]" dest="type_name [65091,65098]"/>
  <match src="(: ( [87909,87910]" dest="(: ( [89070,89071]"/>
  <match src="identifier: _pid [86333,86337]" dest="identifier: _pid [87621,87625]"/>
  <match src="(: ( [45873,45874]" dest="(: ( [45875,45876]"/>
  <match src="): ) [82280,82281]" dest="): ) [83118,83119]"/>
  <match src="public: public [43067,43073]" dest="public: public [43067,43073]"/>
  <match src="): ) [81937,81938]" dest="): ) [82769,82770]"/>
  <match src="call_argument [23339,23344]" dest="call_argument [23339,23344]"/>
  <match src="unary_expression [31726,31728]" dest="unary_expression [31726,31728]"/>
  <match src="solidity_version_comparison_operator [47675,47677]" dest="solidity_version_comparison_operator [47677,47679]"/>
  <match src="identifier: z [34076,34077]" dest="identifier: z [34076,34077]"/>
  <match src=".: . [47029,47030]" dest=".: . [46416,46417]"/>
  <match src=",: , [90538,90539]" dest=",: , [91563,91564]"/>
  <match src=",: , [55771,55772]" dest=",: , [55773,55774]"/>
  <match src="parenthesized_expression [29788,29799]" dest="parenthesized_expression [29788,29799]"/>
  <match src="state_variable_declaration [43706,43746]" dest="state_variable_declaration [43706,43746]"/>
  <match src="(: ( [47238,47239]" dest="(: ( [47240,47241]"/>
  <match src="function_body [61332,62062]" dest="function_body [61334,62064]"/>
  <match src="if_statement [97322,97383]" dest="if_statement [96087,96148]"/>
  <match src="string_literal [37746,37780]" dest="string_literal [37746,37780]"/>
  <match src="(: ( [53398,53399]" dest="(: ( [53400,53401]"/>
  <match src="call_argument [57475,57482]" dest="call_argument [57477,57484]"/>
  <match src="&gt;&gt;: &gt;&gt; [33509,33511]" dest="&gt;&gt;: &gt;&gt; [33509,33511]"/>
  <match src="): ) [67398,67399]" dest="): ) [67645,67646]"/>
  <match src="number_literal: 2 [27807,27808]" dest="number_literal: 2 [27807,27808]"/>
  <match src="): ) [51655,51656]" dest="): ) [51657,51658]"/>
  <match src="block_statement [75978,76022]" dest="block_statement [75494,75538]"/>
  <match src="identifier: div [78596,78599]" dest="identifier: div [78176,78179]"/>
  <match src="string_literal [17894,17932]" dest="string_literal [17894,17932]"/>
  <match src="identifier: number [107134,107140]" dest="identifier: number [107058,107064]"/>
  <match src="library_declaration [41140,42612]" dest="library_declaration [41140,42612]"/>
  <match src="expression_statement [67240,67296]" dest="expression_statement [67487,67543]"/>
  <match src="call_argument [85061,85065]" dest="call_argument [86361,86365]"/>
  <match src="(: ( [40222,40223]" dest="(: ( [40222,40223]"/>
  <match src="assignment_expression [68141,68856]" dest="assignment_expression [68304,68567]"/>
  <match src="expression_statement [79465,79500]" dest="expression_statement [79620,79655]"/>
  <match src="parameter [78204,78231]" dest="parameter [77337,77364]"/>
  <match src="{: { [63040,63041]" dest="{: { [63042,63043]"/>
  <match src="primitive_type [7234,7241]" dest="primitive_type [7234,7241]"/>
  <match src="parameter [108356,108378]" dest="parameter [108280,108302]"/>
  <match src=".: . [99373,99374]" dest=".: . [99525,99526]"/>
  <match src=",: , [68484,68485]" dest=",: , [68440,68441]"/>
  <match src="type_name [39761,39768]" dest="type_name [39761,39768]"/>
  <match src="type_name [95424,95433]" dest="type_name [94572,94581]"/>
  <match src="uint256: uint256 [20827,20834]" dest="uint256: uint256 [20827,20834]"/>
  <match src="primitive_type [90722,90729]" dest="primitive_type [91747,91754]"/>
  <match src="array_access [99558,99579]" dest="array_access [97648,97669]"/>
  <match src="variable_declaration_statement [5335,5353]" dest="variable_declaration_statement [5335,5353]"/>
  <match src="variable_declaration_statement [14254,14309]" dest="variable_declaration_statement [14254,14309]"/>
  <match src="identifier: IERC20 [21256,21262]" dest="identifier: IERC20 [21256,21262]"/>
  <match src="identifier: functionDelegateCall [18739,18759]" dest="identifier: functionDelegateCall [18739,18759]"/>
  <match src="identifier: toNum [62008,62013]" dest="identifier: toNum [62010,62015]"/>
  <match src="identifier: _wethToken [67577,67587]" dest="identifier: _wethToken [67824,67834]"/>
  <match src="function_body [18433,18536]" dest="function_body [18433,18536]"/>
  <match src="): ) [78651,78652]" dest="): ) [78231,78232]"/>
  <match src="user_defined_type [34589,34598]" dest="user_defined_type [34589,34598]"/>
  <match src="call_expression [90879,90903]" dest="call_expression [91904,91928]"/>
  <match src="(: ( [47033,47034]" dest="(: ( [46420,46421]"/>
  <match src="comment: // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since [22962,23070]" dest="comment: // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since [22962,23070]"/>
  <match src="private: private [49160,49167]" dest="private: private [49162,49169]"/>
  <match src="): ) [6584,6585]" dest="): ) [6584,6585]"/>
  <match src="block_statement [102641,102737]" dest="block_statement [102565,102661]"/>
  <match src="(: ( [97077,97078]" dest="(: ( [95842,95843]"/>
  <match src="function_definition [20576,20753]" dest="function_definition [20576,20753]"/>
  <match src="*: * [27763,27764]" dest="*: * [27763,27764]"/>
  <match src="uint8: uint8 [49182,49187]" dest="uint8: uint8 [49184,49189]"/>
  <match src="}: } [8939,8940]" dest="}: } [8939,8940]"/>
  <match src="identifier: a [5347,5348]" dest="identifier: a [5347,5348]"/>
  <match src="uint256: uint256 [9431,9438]" dest="uint256: uint256 [9431,9438]"/>
  <match src="address: address [86722,86729]" dest="address: address [87802,87809]"/>
  <match src="return_statement [89781,89802]" dest="return_statement [91023,91044]"/>
  <match src="identifier: price [64008,64013]" dest="identifier: price [64010,64015]"/>
  <match src=".: . [103770,103771]" dest=".: . [103694,103695]"/>
  <match src="override_specifier [109118,109126]" dest="override_specifier [109042,109050]"/>
  <match src="call_argument [77636,77637]" dest="call_argument [77076,77077]"/>
  <match src="call_expression [47131,47148]" dest="call_expression [46518,46535]"/>
  <match src="&gt;=:  &gt;= [24713,24716]" dest="&gt;=:  &gt;= [24713,24716]"/>
  <match src="identifier: invitees [98993,99001]" dest="identifier: invitees [99178,99186]"/>
  <match src="assignment_expression [74971,75000]" dest="assignment_expression [74843,74923]"/>
  <match src="for_statement [76655,76873]" dest="for_statement [76171,76389]"/>
  <match src="(: ( [54170,54171]" dest="(: ( [54172,54173]"/>
  <match src="uint256: uint256 [71803,71810]" dest="uint256: uint256 [71514,71521]"/>
  <match src="variable_declaration [14255,14267]" dest="variable_declaration [14255,14267]"/>
  <match src="parameter [42835,42851]" dest="parameter [42835,42851]"/>
  <match src=".: . [108240,108241]" dest=".: . [108164,108165]"/>
  <match src="memory: memory [10919,10925]" dest="memory: memory [10919,10925]"/>
  <match src=".: . [80264,80265]" dest=".: . [80884,80885]"/>
  <match src="call_argument [81247,81255]" dest="call_argument [81936,81944]"/>
  <match src="=&gt;: =&gt; [64329,64331]" dest="=&gt;: =&gt; [64331,64333]"/>
  <match src="identifier: fee [46970,46973]" dest="identifier: fee [46357,46360]"/>
  <match src="expression_statement [67565,67588]" dest="expression_statement [67812,67835]"/>
  <match src="identifier: _originWeight [95613,95626]" dest="identifier: _originWeight [94761,94774]"/>
  <match src="comment: // * 2^-112 [35279,35290]" dest="comment: // * 2^-112 [35279,35290]"/>
  <match src="{: { [54105,54106]" dest="{: { [54107,54108]"/>
  <match src="call_argument [20738,20743]" dest="call_argument [20738,20743]"/>
  <match src="identifier: upper_self [35103,35113]" dest="identifier: upper_self [35103,35113]"/>
  <match src="): ) [55632,55633]" dest="): ) [55634,55635]"/>
  <match src="primitive_type [39203,39207]" dest="primitive_type [39203,39207]"/>
  <match src="(: ( [19275,19276]" dest="(: ( [19275,19276]"/>
  <match src="identifier: user [102614,102618]" dest="identifier: user [102538,102542]"/>
  <match src="parameter [68893,68910]" dest="parameter [68604,68621]"/>
  <match src="if: if [83144,83146]" dest="if: if [84245,84247]"/>
  <match src="binary_expression [82113,82170]" dest="binary_expression [82951,83008]"/>
  <match src=",: , [68351,68352]" dest=",: , [68374,68375]"/>
  <match src="(: ( [35926,35927]" dest="(: ( [35926,35927]"/>
  <match src="identifier: otherPoolDividendWeight [78533,78556]" dest="identifier: otherPoolDividendWeight [78113,78136]"/>
  <match src="call_argument [52036,52042]" dest="call_argument [52038,52044]"/>
  <match src=",: , [22219,22220]" dest=",: , [22219,22220]"/>
  <match src="parameter [62750,62762]" dest="parameter [62752,62764]"/>
  <match src="binary_expression [6628,6633]" dest="binary_expression [6628,6633]"/>
  <match src="contract_body [1119,1598]" dest="contract_body [1119,1598]"/>
  <match src="address: address [64321,64328]" dest="address: address [64323,64330]"/>
  <match src="expression_statement [21596,21749]" dest="expression_statement [21596,21749]"/>
  <match src="identifier: poolPosition [73272,73284]" dest="identifier: poolPosition [73037,73049]"/>
  <match src="(: ( [27310,27311]" dest="(: ( [27310,27311]"/>
  <match src="identifier: isCalculateInvitation [99599,99620]" dest="identifier: isCalculateInvitation [97689,97710]"/>
  <match src="assignment_expression [67854,67875]" dest="assignment_expression [68106,68127]"/>
  <match src="identifier: abi [22073,22076]" dest="identifier: abi [22073,22076]"/>
  <match src="identifier: b [9493,9494]" dest="identifier: b [9493,9494]"/>
  <match src="type_name [65340,65347]" dest="type_name [65350,65357]"/>
  <match src="call_argument [31313,31349]" dest="call_argument [31313,31349]"/>
  <match src="identifier: r [27777,27778]" dest="identifier: r [27777,27778]"/>
  <match src="}: } [93862,93863]" dest="}: } [93508,93509]"/>
  <match src="identifier: _devDividendWeight [44138,44156]" dest="identifier: _devDividendWeight [44140,44158]"/>
  <match src="function_definition [21235,21857]" dest="function_definition [21235,21857]"/>
  <match src="function_definition [53285,53503]" dest="function_definition [53287,53505]"/>
  <match src="identifier: upper_other [35117,35128]" dest="identifier: upper_other [35117,35128]"/>
  <match src="]: ] [62448,62449]" dest="]: ] [62450,62451]"/>
  <match src="(: ( [27520,27521]" dest="(: ( [27520,27521]"/>
  <match src="): ) [40167,40168]" dest="): ) [40167,40168]"/>
  <match src="call_expression [37799,37833]" dest="call_expression [37799,37833]"/>
  <match src="member_expression [46976,47011]" dest="member_expression [46363,46398]"/>
  <match src="identifier: setStartBlock [45495,45508]" dest="identifier: setStartBlock [45497,45510]"/>
  <match src="type_name [88397,88404]" dest="type_name [89245,89252]"/>
  <match src="identifier: fromOld [61496,61503]" dest="identifier: fromOld [61498,61505]"/>
  <match src="||: || [69377,69379]" dest="||: || [69088,69090]"/>
  <match src="view: view [49781,49785]" dest="view: view [49783,49787]"/>
  <match src="identifier: _poolIndexInRank [86449,86465]" dest="identifier: _poolIndexInRank [87737,87753]"/>
  <match src="identifier: _blockNumber [88735,88747]" dest="identifier: _blockNumber [89583,89595]"/>
  <match src="primitive_type [44803,44810]" dest="primitive_type [44805,44812]"/>
  <match src="(: ( [84934,84935]" dest="(: ( [86065,86066]"/>
  <match src="primitive_type [34756,34763]" dest="primitive_type [34756,34763]"/>
  <match src=",: , [8809,8810]" dest=",: , [8809,8810]"/>
  <match src="number_literal: 0 [82139,82140]" dest="number_literal: 0 [82977,82978]"/>
  <match src="(: ( [78998,78999]" dest="(: ( [78787,78788]"/>
  <match src="type_name [86946,86960]" dest="type_name [88103,88117]"/>
  <match src="user_defined_type [104898,104912]" dest="user_defined_type [104822,104836]"/>
  <match src="): ) [47052,47053]" dest="): ) [46439,46440]"/>
  <match src="(: ( [6593,6594]" dest="(: ( [6593,6594]"/>
  <match src="call_argument [76486,76509]" dest="call_argument [76002,76025]"/>
  <match src="identifier: amountFeeRateNumerator [43677,43699]" dest="identifier: amountFeeRateNumerator [43677,43699]"/>
  <match src="primitive_type [78181,78188]" dest="primitive_type [77314,77321]"/>
  <match src="): ) [71553,71554]" dest="): ) [71264,71265]"/>
  <match src=",: , [17788,17789]" dest=",: , [17788,17789]"/>
  <match src="primitive_type [63066,63073]" dest="primitive_type [63068,63075]"/>
  <match src="primitive_type [25342,25349]" dest="primitive_type [25342,25349]"/>
  <match src="uint256: uint256 [96982,96989]" dest="uint256: uint256 [95747,95754]"/>
  <match src="): ) [93362,93363]" dest="): ) [93010,93011]"/>
  <match src="uint: uint [107258,107262]" dest="uint: uint [107182,107186]"/>
  <match src="primitive_type [36595,36602]" dest="primitive_type [36595,36602]"/>
  <match src="function: function [85181,85189]" dest="function: function [86481,86489]"/>
  <match src="identifier: _startBlock [67372,67383]" dest="identifier: _startBlock [67619,67630]"/>
  <match src="identifier: pair [41602,41606]" dest="identifier: pair [41602,41606]"/>
  <match src="): ) [42575,42576]" dest="): ) [42575,42576]"/>
  <match src="identifier: add [86358,86361]" dest="identifier: add [87646,87649]"/>
  <match src="=: = [80900,80901]" dest="=: = [81587,81588]"/>
  <match src="block_statement [70646,71073]" dest="block_statement [70357,70784]"/>
  <match src="parenthesized_expression [23569,23575]" dest="parenthesized_expression [23569,23575]"/>
  <match src="address: address [20815,20822]" dest="address: address [20815,20822]"/>
  <match src="binary_expression [7324,7330]" dest="binary_expression [7324,7330]"/>
  <match src=".: . [78841,78842]" dest=".: . [77557,77558]"/>
  <match src="identifier: errorMessage [19241,19253]" dest="identifier: errorMessage [19241,19253]"/>
  <match src="binary_expression [69679,69717]" dest="binary_expression [69390,69428]"/>
  <match src="call_argument [76458,76510]" dest="call_argument [75974,76026]"/>
  <match src="parameter [92724,92758]" dest="parameter [92372,92406]"/>
  <match src="): ) [33441,33442]" dest="): ) [33441,33442]"/>
  <match src="identifier: newOwner [25389,25397]" dest="identifier: newOwner [25389,25397]"/>
  <match src="): ) [81444,81445]" dest="): ) [82133,82134]"/>
  <match src="if: if [30632,30634]" dest="if: if [30632,30634]"/>
  <match src="(: ( [84225,84226]" dest="(: ( [84754,84755]"/>
  <match src="call_argument [85441,85478]" dest="call_argument [86741,86778]"/>
  <match src="if: if [99590,99592]" dest="if: if [97680,97682]"/>
  <match src="array_access [62294,62344]" dest="array_access [62296,62346]"/>
  <match src="identifier: undistributeDividend [74928,74948]" dest="identifier: _undistributeDividend [74799,74820]"/>
  <match src="state_mutability [94099,94103]" dest="state_mutability [93745,93749]"/>
  <match src="view: view [88988,88992]" dest="view: view [89836,89840]"/>
  <match src="number_literal: 1 [62360,62361]" dest="number_literal: 1 [62362,62363]"/>
  <match src="/: / [6630,6631]" dest="/: / [6630,6631]"/>
  <match src="type_name [100317,100325]" dest="type_name [71880,71888]"/>
  <match src="member_expression [76584,76603]" dest="member_expression [76100,76119]"/>
  <match src="identifier: getOracleWeight [82003,82018]" dest="identifier: calculateOracleWeight [82835,82856]"/>
  <match src="?: ? [61539,61540]" dest="?: ? [61541,61542]"/>
  <match src="parameter [5275,5284]" dest="parameter [5275,5284]"/>
  <match src="(: ( [81898,81899]" dest="(: ( [82730,82731]"/>
  <match src="identifier: updateTokenOracle [97807,97824]" dest="identifier: updateTokenOracle [96572,96589]"/>
  <match src="identifier: result [36603,36609]" dest="identifier: result [36603,36609]"/>
  <match src="{: { [27280,27281]" dest="{: { [27280,27281]"/>
  <match src="function_definition [98379,100067]" dest="function_definition [97144,98772]"/>
  <match src="call_argument [107389,107422]" dest="call_argument [107313,107346]"/>
  <match src="identifier: blackListMap [66186,66198]" dest="identifier: blackListMap [66206,66218]"/>
  <match src="uint256: uint256 [5275,5282]" dest="uint256: uint256 [5275,5282]"/>
  <match src="call_argument [9493,9498]" dest="call_argument [9493,9498]"/>
  <match src="type_name [18795,18801]" dest="type_name [18795,18801]"/>
  <match src="function: function [7672,7680]" dest="function: function [7672,7680]"/>
  <match src="primitive_type [32620,32625]" dest="primitive_type [32620,32625]"/>
  <match src="=&gt;: =&gt; [58836,58838]" dest="=&gt;: =&gt; [58838,58840]"/>
  <match src="visibility [5617,5625]" dest="visibility [5617,5625]"/>
  <match src="uint256: uint256 [8113,8120]" dest="uint256: uint256 [8113,8120]"/>
  <match src="expression_statement [27827,27842]" dest="expression_statement [27827,27842]"/>
  <match src="identifier: token1 [104701,104707]" dest="identifier: token1 [104625,104631]"/>
  <match src="type_cast_expression [37201,37216]" dest="type_cast_expression [37201,37216]"/>
  <match src="identifier: add [76482,76485]" dest="identifier: add [75998,76001]"/>
  <match src="=: = [43296,43297]" dest="=: = [43296,43297]"/>
  <match src="if_statement [100761,101702]" dest="if_statement [100746,102029]"/>
  <match src="{: { [38509,38510]" dest="{: { [38509,38510]"/>
  <match src="parameter [7234,7243]" dest="parameter [7234,7243]"/>
  <match src="type_name [11791,11798]" dest="type_name [11791,11798]"/>
  <match src="variable_declaration [104547,104561]" dest="variable_declaration [104471,104485]"/>
  <match src="identifier: y [34001,34002]" dest="identifier: y [34001,34002]"/>
  <match src="identifier: _pid [72714,72718]" dest="identifier: _pid [72756,72760]"/>
  <match src="number_literal: 1 [27665,27666]" dest="number_literal: 1 [27665,27666]"/>
  <match src="&gt;: &gt; [32138,32139]" dest="&gt;: &gt; [32138,32139]"/>
  <match src="): ) [101556,101557]" dest="): ) [101293,101294]"/>
  <match src="&quot;: &quot; [58762,58763]" dest="&quot;: &quot; [58764,58765]"/>
  <match src="assignment_expression [97799,97850]" dest="assignment_expression [96564,96615]"/>
  <match src="binary_expression [8210,8215]" dest="binary_expression [8210,8215]"/>
  <match src="internal: internal [20842,20850]" dest="internal: internal [20842,20850]"/>
  <match src="): ) [36366,36367]" dest="): ) [36366,36367]"/>
  <match src="primitive_type [49126,49132]" dest="primitive_type [49128,49134]"/>
  <match src="primitive_type [36154,36161]" dest="primitive_type [36154,36161]"/>
  <match src="): ) [89764,89765]" dest="): ) [91006,91007]"/>
  <match src="(: ( [21604,21605]" dest="(: ( [21604,21605]"/>
  <match src="binary_expression [34856,34876]" dest="binary_expression [34856,34876]"/>
  <match src="identifier: setContracSenderFeeRate [45135,45158]" dest="identifier: setContracSenderFeeRate [45137,45160]"/>
  <match src="(: ( [105972,105973]" dest="(: ( [105896,105897]"/>
  <match src="primitive_type [39522,39529]" dest="primitive_type [39522,39529]"/>
  <match src="{: { [50757,50758]" dest="{: { [50759,50760]"/>
  <match src="-: - [35454,35455]" dest="-: - [35454,35455]"/>
  <match src="variable_declaration_statement [105131,105166]" dest="variable_declaration_statement [105055,105090]"/>
  <match src="return_statement [61168,61209]" dest="return_statement [61170,61211]"/>
  <match src=",: , [6599,6600]" dest=",: , [6599,6600]"/>
  <match src="+: + [29729,29730]" dest="+: + [29729,29730]"/>
  <match src="identifier: _decimals [49666,49675]" dest="identifier: _decimals [49668,49677]"/>
  <match src="binary_expression [74313,74333]" dest="binary_expression [74132,74152]"/>
  <match src="string: string [64444,64450]" dest="string: string [64446,64452]"/>
  <match src="number_literal: 0 [31514,31515]" dest="number_literal: 0 [31514,31515]"/>
  <match src="(: ( [73288,73289]" dest="(: ( [73053,73054]"/>
  <match src="parameter [3908,3912]" dest="parameter [3908,3912]"/>
  <match src="=: = [76670,76671]" dest="=: = [76186,76187]"/>
  <match src="identifier: _tokenToEthSwap [69295,69310]" dest="identifier: _tokenToEthSwap [69006,69021]"/>
  <match src="(: ( [101656,101657]" dest="(: ( [101393,101394]"/>
  <match src="primitive_type [28082,28089]" dest="primitive_type [28082,28089]"/>
  <match src="(: ( [90464,90465]" dest="(: ( [91503,91504]"/>
  <match src=",: , [52591,52592]" dest=",: , [52593,52594]"/>
  <match src="parameter [11791,11798]" dest="parameter [11791,11798]"/>
  <match src="]: ] [88664,88665]" dest="]: ] [89512,89513]"/>
  <match src="identifier: blackList [73399,73408]" dest="identifier: blackList [73164,73173]"/>
  <match src="parameter [52577,52591]" dest="parameter [52579,52593]"/>
  <match src="identifier: poolInfo [100341,100349]" dest="identifier: poolInfo [71904,71912]"/>
  <match src="solidity: solidity [47562,47570]" dest="solidity: solidity [47564,47572]"/>
  <match src="type_cast_expression [35587,35615]" dest="type_cast_expression [35587,35615]"/>
  <match src="type_name [66712,66719]" dest="type_name [66965,66972]"/>
  <match src="function_definition [73713,75008]" dest="function_definition [73478,74931]"/>
  <match src="identifier: getUserModifiedWeight [102339,102360]" dest="identifier: getUserModifiedWeight [102198,102219]"/>
  <match src="identifier: modifyWeightByInvitation [100084,100108]" dest="identifier: modifyWeightByInvitation [99565,99589]"/>
  <match src="identifier: r [27840,27841]" dest="identifier: r [27840,27841]"/>
  <match src="call_expression [108426,108447]" dest="call_expression [108350,108371]"/>
  <match src="call_argument [45604,45625]" dest="call_argument [45606,45627]"/>
  <match src="identifier: _pool [97898,97903]" dest="identifier: _pool [96663,96668]"/>
  <match src="(: ( [37352,37353]" dest="(: ( [37352,37353]"/>
  <match src="(: ( [90536,90537]" dest="(: ( [91561,91562]"/>
  <match src="call_expression [71111,71543]" dest="call_expression [70822,71254]"/>
  <match src="state_variable_declaration [32665,32728]" dest="state_variable_declaration [32665,32728]"/>
  <match src="&quot;: &quot; [55177,55178]" dest="&quot;: &quot; [55179,55180]"/>
  <match src="solidity: solidity [62944,62952]" dest="solidity: solidity [62946,62954]"/>
  <match src="&gt;=:  &gt;= [1680,1683]" dest="&gt;=:  &gt;= [1680,1683]"/>
  <match src="return: return [34059,34065]" dest="return: return [34059,34065]"/>
  <match src="function_body [60050,61216]" dest="function_body [60052,61218]"/>
  <match src="type_name [103106,103110]" dest="type_name [103030,103034]"/>
  <match src="): ) [79225,79226]" dest="): ) [79380,79381]"/>
  <match src="identifier: _decimals [49196,49205]" dest="identifier: _decimals [49198,49207]"/>
  <match src="solidity_version_comparison_operator [11958,11960]" dest="solidity_version_comparison_operator [11958,11960]"/>
  <match src="}: } [84502,84503]" dest="}: } [85037,85038]"/>
  <match src="return_statement [91101,91124]" dest="return_statement [92126,92149]"/>
  <match src="return_type_definition [38704,38727]" dest="return_type_definition [38704,38727]"/>
  <match src="function_body [104536,104862]" dest="function_body [104460,104786]"/>
  <match src="function_body [24355,24391]" dest="function_body [24355,24391]"/>
  <match src="primitive_type [7288,7295]" dest="primitive_type [7288,7295]"/>
  <match src="assignment_expression [86914,86935]" dest="assignment_expression [88071,88092]"/>
  <match src="call_argument [84432,84444]" dest="call_argument [84967,84979]"/>
  <match src="identifier: returndata_size [19688,19703]" dest="identifier: returndata_size [19688,19703]"/>
  <match src="returns: returns [5631,5638]" dest="returns: returns [5631,5638]"/>
  <match src="event_paramater [66592,66612]" dest="event_paramater [66845,66865]"/>
  <match src="struct_declaration [64391,64470]" dest="struct_declaration [64393,64472]"/>
  <match src="expression_statement [44910,45001]" dest="expression_statement [44912,45003]"/>
  <match src="internal: internal [104947,104955]" dest="internal: internal [104871,104879]"/>
  <match src="identifier: accumulativeDividend [84910,84930]" dest="identifier: accumulativeDividend [86041,86061]"/>
  <match src="): ) [89417,89418]" dest="): ) [77767,77768]"/>
  <match src="using_directive [63047,63074]" dest="using_directive [63049,63076]"/>
  <match src="parameter [18419,18431]" dest="parameter [18419,18431]"/>
  <match src="}: } [47201,47202]" dest="}: } [47203,47204]"/>
  <match src="identifier: require [45569,45576]" dest="identifier: require [45571,45578]"/>
  <match src="uint: uint [42400,42404]" dest="uint: uint [42400,42404]"/>
  <match src="identifier: _verifyCallResult [19093,19110]" dest="identifier: _verifyCallResult [19093,19110]"/>
  <match src="return: return [107217,107223]" dest="return: return [107141,107147]"/>
  <match src="bytes: bytes [19276,19281]" dest="bytes: bytes [19276,19281]"/>
  <match src="type_name [94397,94404]" dest="type_name [94043,94050]"/>
  <match src="function: function [54006,54014]" dest="function: function [54008,54016]"/>
  <match src="member_expression [100014,100039]" dest="member_expression [98719,98744]"/>
  <match src="[: [ [99166,99167]" dest="[: [ [99330,99331]"/>
  <match src="(: ( [38872,38873]" dest="(: ( [38872,38873]"/>
  <match src="variable_declaration [107434,107452]" dest="variable_declaration [107358,107376]"/>
  <match src="type_name [79801,79808]" dest="type_name [80386,80393]"/>
  <match src="contract_body [28549,29947]" dest="contract_body [28549,29947]"/>
  <match src="(: ( [72942,72943]" dest="(: ( [72624,72625]"/>
  <match src="struct_member [64025,64046]" dest="struct_member [64027,64048]"/>
  <match src="identifier: mostSignificantBit [38181,38199]" dest="identifier: mostSignificantBit [38181,38199]"/>
  <match src="identifier: _x [37659,37661]" dest="identifier: _x [37659,37661]"/>
  <match src="call_argument [98107,98114]" dest="call_argument [96872,96879]"/>
  <match src="): ) [86073,86074]" dest="): ) [87365,87366]"/>
  <match src="identifier: approve [21815,21822]" dest="identifier: approve [21815,21822]"/>
  <match src="identifier: poolInfo [82864,82872]" dest="identifier: poolInfo [83702,83710]"/>
  <match src="=: = [46301,46302]" dest="=: = [46303,46304]"/>
  <match src="]: ] [93969,93970]" dest="]: ] [93615,93616]"/>
  <match src="function_definition [1372,1437]" dest="function_definition [1372,1437]"/>
  <match src="parameter [39581,39588]" dest="parameter [39581,39588]"/>
  <match src=":: : [61578,61579]" dest=":: : [61580,61581]"/>
  <match src="call_argument [85964,85988]" dest="call_argument [87263,87287]"/>
  <match src="parameter [15591,15605]" dest="parameter [15591,15605]"/>
  <match src="returns: returns [2374,2381]" dest="returns: returns [2374,2381]"/>
  <match src="using_directive [63080,63107]" dest="using_directive [63082,63109]"/>
  <match src="primitive_type [10963,10970]" dest="primitive_type [10963,10970]"/>
  <match src="primitive_type [75870,75877]" dest="primitive_type [75386,75393]"/>
  <match src="call_expression [36144,36168]" dest="call_expression [36144,36168]"/>
  <match src="variable_declaration [95768,95774]" dest="variable_declaration [94916,94922]"/>
  <match src="member_expression [87742,87768]" dest="member_expression [88903,88929]"/>
  <match src="type_name [98426,98433]" dest="type_name [97191,97198]"/>
  <match src="identifier: mostSignificantBit [30194,30212]" dest="identifier: mostSignificantBit [30194,30212]"/>
  <match src="&quot;: &quot; [79901,79902]" dest="&quot;: &quot; [80486,80487]"/>
  <match src="block_statement [32043,32076]" dest="block_statement [32043,32076]"/>
  <match src="identifier: generateOrcaleInfo [70522,70540]" dest="identifier: generateOrcaleInfo [70233,70251]"/>
  <match src="identifier: getReserves [40272,40283]" dest="identifier: getReserves [40272,40283]"/>
  <match src="call_argument [46770,46794]" dest="call_argument [47012,47036]"/>
  <match src="user_defined_type [34566,34575]" dest="user_defined_type [34566,34575]"/>
  <match src="(: ( [87336,87337]" dest="(: ( [88497,88498]"/>
  <match src="update_expression [93839,93851]" dest="update_expression [93485,93497]"/>
  <match src="expression_statement [29722,29743]" dest="expression_statement [29722,29743]"/>
  <match src="=: = [35322,35323]" dest="=: = [35322,35323]"/>
  <match src="assignment_expression [93181,93221]" dest="assignment_expression [92829,92869]"/>
  <match src="): ) [34002,34003]" dest="): ) [34002,34003]"/>
  <match src="expression_statement [93689,93767]" dest="expression_statement [93337,93413]"/>
  <match src="{: { [30813,30814]" dest="{: { [30813,30814]"/>
  <match src="call_argument [90893,90902]" dest="call_argument [91918,91927]"/>
  <match src="=: = [84069,84070]" dest="=: = [84598,84599]"/>
  <match src="=&gt;: =&gt; [59180,59182]" dest="=&gt;: =&gt; [59182,59184]"/>
  <match src="visibility [59659,59665]" dest="visibility [59661,59667]"/>
  <match src="primitive_type [11791,11798]" dest="primitive_type [11791,11798]"/>
  <match src="(: ( [50877,50878]" dest="(: ( [50879,50880]"/>
  <match src="=: = [73526,73527]" dest="=: = [73291,73292]"/>
  <match src="binary_expression [72178,72195]" dest="binary_expression [71844,71861]"/>
  <match src="true [51531,51535]" dest="true [51533,51537]"/>
  <match src="(: ( [19752,19753]" dest="(: ( [19752,19753]"/>
  <match src="public: public [49596,49602]" dest="public: public [49598,49604]"/>
  <match src="identifier: Q112 [36471,36475]" dest="identifier: Q112 [36471,36475]"/>
  <match src="mapping: mapping [43928,43935]" dest="mapping: mapping [43928,43935]"/>
  <match src="using: using [63114,63119]" dest="using: using [63116,63121]"/>
  <match src="identifier: reserve1 [105999,106007]" dest="identifier: reserve1 [105923,105931]"/>
  <match src="returns: returns [8138,8145]" dest="returns: returns [8138,8145]"/>
  <match src="memory: memory [94154,94160]" dest="memory: memory [93800,93806]"/>
  <match src=".: . [34673,34674]" dest=".: . [34673,34674]"/>
  <match src="solidity: solidity [41022,41030]" dest="solidity: solidity [41022,41030]"/>
  <match src=".: . [99994,99995]" dest=".: . [98699,98700]"/>
  <match src="): ) [48983,48984]" dest="): ) [48985,48986]"/>
  <match src="identifier: data [15734,15738]" dest="identifier: data [15734,15738]"/>
  <match src="public: public [102918,102924]" dest="public: public [102842,102848]"/>
  <match src=".: . [108041,108042]" dest=".: . [107965,107966]"/>
  <match src="(: ( [15187,15188]" dest="(: ( [15187,15188]"/>
  <match src="identifier: subtractedValue [54058,54073]" dest="identifier: subtractedValue [54060,54075]"/>
  <match src="parenthesized_expression [29819,29830]" dest="parenthesized_expression [29819,29830]"/>
  <match src="call_argument [69401,69417]" dest="call_argument [69112,69128]"/>
  <match src="function: function [59719,59727]" dest="function: function [59721,59729]"/>
  <match src="function_definition [108319,108612]" dest="function_definition [108243,108536]"/>
  <match src="&quot;: &quot; [86901,86902]" dest="&quot;: &quot; [88058,88059]"/>
  <match src="): ) [18140,18141]" dest="): ) [18140,18141]"/>
  <match src="identifier: user [89546,89550]" dest="identifier: user [90788,90792]"/>
  <match src="): ) [39273,39274]" dest="): ) [39273,39274]"/>
  <match src="identifier: uq112x112 [34636,34645]" dest="identifier: uq112x112 [34636,34645]"/>
  <match src="(: ( [56490,56491]" dest="(: ( [56492,56493]"/>
  <match src="{: { [31447,31448]" dest="{: { [31447,31448]"/>
  <match src=".: . [103485,103486]" dest=".: . [103409,103410]"/>
  <match src="function_body [11800,11870]" dest="function_body [11800,11870]"/>
  <match src="type_cast_expression [35446,35457]" dest="type_cast_expression [35446,35457]"/>
  <match src="identifier: amount [14062,14068]" dest="identifier: amount [14062,14068]"/>
  <match src="{: { [89632,89633]" dest="{: { [90874,90875]"/>
  <match src="state_mutability [39478,39482]" dest="state_mutability [39478,39482]"/>
  <match src="return_statement [19329,19347]" dest="return_statement [19329,19347]"/>
  <match src=",: , [79226,79227]" dest=",: , [79381,79382]"/>
  <match src="comment: // safeApprove should only be called when setting an initial allowance, [21322,21393]" dest="comment: // safeApprove should only be called when setting an initial allowance, [21322,21393]"/>
  <match src="=: = [14271,14272]" dest="=: = [14271,14272]"/>
  <match src="[: [ [78317,78318]" dest="[: [ [77450,77451]"/>
  <match src=".: . [78472,78473]" dest=".: . [78052,78053]"/>
  <match src="return_statement [38264,38373]" dest="return_statement [38264,38373]"/>
  <match src="return_statement [37406,37440]" dest="return_statement [37406,37440]"/>
  <match src="type_name [95379,95388]" dest="type_name [94527,94536]"/>
  <match src="{: { [73764,73765]" dest="{: { [73560,73561]"/>
  <match src="member_expression [16781,16802]" dest="member_expression [16781,16802]"/>
  <match src="identifier: y [34424,34425]" dest="identifier: y [34424,34425]"/>
  <match src="member_expression [93591,93612]" dest="member_expression [93239,93260]"/>
  <match src="[: [ [88848,88849]" dest="[: [ [89696,89697]"/>
  <match src="identifier: l [28277,28278]" dest="identifier: l [28277,28278]"/>
  <match src="parameter [75504,75528]" dest="parameter [75020,75044]"/>
  <match src="if: if [107103,107105]" dest="if: if [107027,107029]"/>
  <match src="primitive_type [39173,39177]" dest="primitive_type [39173,39177]"/>
  <match src="!=: != [44250,44252]" dest="!=: != [44252,44254]"/>
  <match src="number_literal: 0 [82232,82233]" dest="number_literal: 0 [83070,83071]"/>
  <match src="else: else [37230,37234]" dest="else: else [37230,37234]"/>
  <match src="type_name [35079,35086]" dest="type_name [35079,35086]"/>
  <match src="&gt;&gt;: &gt;&gt; [34793,34795]" dest="&gt;&gt;: &gt;&gt; [34793,34795]"/>
  <match src="uint256: uint256 [54050,54057]" dest="uint256: uint256 [54052,54059]"/>
  <match src="&gt;&gt;: &gt;&gt; [29676,29678]" dest="&gt;&gt;: &gt;&gt; [29676,29678]"/>
  <match src="identifier: pool [84090,84094]" dest="identifier: pool [84619,84623]"/>
  <match src="&lt;: &lt; [67384,67385]" dest="&lt;: &lt; [67631,67632]"/>
  <match src="identifier: amount [55626,55632]" dest="identifier: amount [55628,55634]"/>
  <match src="member_expression [47290,47299]" dest="member_expression [47292,47301]"/>
  <match src="identifier: spender [39021,39028]" dest="identifier: spender [39021,39028]"/>
  <match src="override: override [51677,51685]" dest="override: override [51679,51687]"/>
  <match src="=: = [70403,70404]" dest="=: = [70114,70115]"/>
  <match src="uint112: uint112 [40004,40011]" dest="uint112: uint112 [40004,40011]"/>
  <match src="call_argument [33717,33738]" dest="call_argument [33717,33738]"/>
  <match src="identifier: add [101536,101539]" dest="identifier: add [101271,101274]"/>
  <match src="member_expression [106235,106296]" dest="member_expression [106159,106220]"/>
  <match src="comment: /**      * @notice Called by the delegator on a delegate to initialize it for duty      * @dev Should revert if any issues arise which make it unfit for delegation      * @param data The encoded bytes data for any initialization      */ [1126,1366]" dest="comment: /**      * @notice Called by the delegator on a delegate to initialize it for duty      * @dev Should revert if any issues arise which make it unfit for delegation      * @param data The encoded bytes data for any initialization      */ [1126,1366]"/>
  <match src="uint256: uint256 [77370,77377]" dest="uint256: uint256 [76810,76817]"/>
  <match src="identifier: setPriceUpdateTerm [71661,71679]" dest="identifier: setPriceUpdateTerm [71372,71390]"/>
  <match src="type_name [11740,11746]" dest="type_name [11740,11746]"/>
  <match src="identifier: sender [55270,55276]" dest="identifier: sender [55272,55278]"/>
  <match src="assignment_expression [97703,97758]" dest="assignment_expression [96468,96523]"/>
  <match src="returns: returns [33457,33464]" dest="returns: returns [33457,33464]"/>
  <match src="number_literal: 2 [27682,27683]" dest="number_literal: 2 [27682,27683]"/>
  <match src="==: == [90850,90852]" dest="==: == [91875,91877]"/>
  <match src="&quot;: &quot; [7332,7333]" dest="&quot;: &quot; [7332,7333]"/>
  <match src="identifier: msg [86437,86440]" dest="identifier: msg [87725,87728]"/>
  <match src="identifier: amount0 [39738,39745]" dest="identifier: amount0 [39738,39745]"/>
  <match src="identifier: from [61464,61468]" dest="identifier: from [61466,61470]"/>
  <match src="type_name [31278,31283]" dest="type_name [31278,31283]"/>
  <match src="variable_declaration [89429,89450]" dest="variable_declaration [90671,90692]"/>
  <match src="return_statement [5374,5392]" dest="return_statement [5374,5392]"/>
  <match src="visibility [40286,40294]" dest="visibility [40286,40294]"/>
  <match src="(: ( [97407,97408]" dest="(: ( [96172,96173]"/>
  <match src="assignment_expression [46723,46795]" dest="assignment_expression [46965,47037]"/>
  <match src="indexed: indexed [66502,66509]" dest="indexed: indexed [66755,66762]"/>
  <match src="uint256: uint256 [47239,47246]" dest="uint256: uint256 [47241,47248]"/>
  <match src="state_variable_declaration [25284,25307]" dest="state_variable_declaration [25284,25307]"/>
  <match src="update_expression [93359,93362]" dest="update_expression [93007,93010]"/>
  <match src="variable_declaration [25541,25558]" dest="variable_declaration [25541,25558]"/>
  <match src="): ) [39467,39468]" dest="): ) [39467,39468]"/>
  <match src="user_defined_type [63834,63847]" dest="user_defined_type [63836,63849]"/>
  <match src="type_name [67047,67054]" dest="type_name [67300,67307]"/>
  <match src="parenthesized_expression [38344,38365]" dest="parenthesized_expression [38344,38365]"/>
  <match src="call_struct_argument [105512,105555]" dest="call_struct_argument [105436,105479]"/>
  <match src="type_name [63987,64007]" dest="type_name [63989,64009]"/>
  <match src="identifier: r [27865,27866]" dest="identifier: r [27865,27866]"/>
  <match src=",: , [62867,62868]" dest=",: , [62869,62870]"/>
  <match src="call_expression [80017,80080]" dest="call_expression [80602,80665]"/>
  <match src="assignment_expression [106825,106870]" dest="assignment_expression [106749,106794]"/>
  <match src="type_name [88598,88605]" dest="type_name [89446,89453]"/>
  <match src="constant: constant [43272,43280]" dest="constant: constant [43272,43280]"/>
  <match src="call_argument [104296,104349]" dest="call_argument [104220,104273]"/>
  <match src="identifier: r [27752,27753]" dest="identifier: r [27752,27753]"/>
  <match src="uint256: uint256 [44130,44137]" dest="uint256: uint256 [44132,44139]"/>
  <match src="(: ( [17067,17068]" dest="(: ( [17067,17068]"/>
  <match src="call_expression [82969,83005]" dest="call_expression [83748,83784]"/>
  <match src="return: return [38264,38270]" dest="return: return [38264,38270]"/>
  <match src="assignment_expression [61113,61131]" dest="assignment_expression [61115,61133]"/>
  <match src="call_argument [36315,36335]" dest="call_argument [36315,36335]"/>
  <match src="visibility [8822,8830]" dest="visibility [8822,8830]"/>
  <match src="type_name [61600,61607]" dest="type_name [61602,61609]"/>
  <match src="{: { [30733,30734]" dest="{: { [30733,30734]"/>
  <match src=":: : [72960,72961]" dest=":: : [72642,72643]"/>
  <match src="user_defined_type [104969,104982]" dest="user_defined_type [104893,104906]"/>
  <match src="uint256: uint256 [66948,66955]" dest="uint256: uint256 [67201,67208]"/>
  <match src="(: ( [106249,106250]" dest="(: ( [106173,106174]"/>
  <match src="identifier: lower_self [34835,34845]" dest="identifier: lower_self [34835,34845]"/>
  <match src="state_mutability [33901,33905]" dest="state_mutability [33901,33905]"/>
  <match src="}: } [17066,17067]" dest="}: } [17066,17067]"/>
  <match src="): ) [59986,59987]" dest="): ) [59988,59989]"/>
  <match src="array_access [44705,44731]" dest="array_access [44707,44733]"/>
  <match src="): ) [11766,11767]" dest="): ) [11766,11767]"/>
  <match src="]: ] [64243,64244]" dest="]: ] [64245,64246]"/>
  <match src="primitive_type [18007,18011]" dest="primitive_type [18007,18011]"/>
  <match src=",: , [105225,105226]" dest=",: , [105149,105150]"/>
  <match src="(: ( [35453,35454]" dest="(: ( [35453,35454]"/>
  <match src="{: { [23438,23439]" dest="{: { [23438,23439]"/>
  <match src="assignment_expression [90423,90525]" dest="assignment_expression [91474,91550]"/>
  <match src="(: ( [86513,86514]" dest="(: ( [87801,87802]"/>
  <match src="identifier: _lockTime [90966,90975]" dest="identifier: _lockTime [91991,92000]"/>
  <match src="returns: returns [18410,18417]" dest="returns: returns [18410,18417]"/>
  <match src=",: , [67036,67037]" dest=",: , [67289,67290]"/>
  <match src="binary_expression [37732,37744]" dest="binary_expression [37732,37744]"/>
  <match src=".: . [71593,71594]" dest=".: . [71304,71305]"/>
  <match src="external: external [38752,38760]" dest="external: external [38752,38760]"/>
  <match src="}: } [94218,94219]" dest="}: } [93864,93865]"/>
  <match src="(: ( [52012,52013]" dest="(: ( [52014,52015]"/>
  <match src="identifier: timeElapsed [106547,106558]" dest="identifier: timeElapsed [106471,106482]"/>
  <match src="): ) [79422,79423]" dest="): ) [79577,79578]"/>
  <match src="identifier: mul [76386,76389]" dest="identifier: mul [75902,75905]"/>
  <match src="primitive_type [39986,39993]" dest="primitive_type [39986,39993]"/>
  <match src="identifier: mod [9416,9419]" dest="identifier: mod [9416,9419]"/>
  <match src="identifier: lpTokenAmount [97294,97307]" dest="identifier: lpTokenAmount [96059,96072]"/>
  <match src="state_mutability [36806,36810]" dest="state_mutability [36806,36810]"/>
  <match src="(: ( [96069,96070]" dest="(: ( [95379,95380]"/>
  <match src="identifier: produceBlocksPerMonth [80558,80579]" dest="identifier: produceBlocksPerMonth [81243,81264]"/>
  <match src=",: , [39731,39732]" dest=",: , [39731,39732]"/>
  <match src="identifier: block [76834,76839]" dest="identifier: block [76350,76355]"/>
  <match src="(: ( [39236,39237]" dest="(: ( [39236,39237]"/>
  <match src="number_literal: 0 [87806,87807]" dest="number_literal: 0 [88967,88968]"/>
  <match src=",: , [90587,90588]" dest=",: , [91612,91613]"/>
  <match src="expression_statement [55852,55904]" dest="expression_statement [55854,55906]"/>
  <match src="(: ( [90987,90988]" dest="(: ( [92012,92013]"/>
  <match src="call_argument [102692,102724]" dest="call_argument [102616,102648]"/>
  <match src="identifier: number [108241,108247]" dest="identifier: number [108165,108171]"/>
  <match src="primitive_type [81925,81932]" dest="primitive_type [82757,82764]"/>
  <match src="primitive_type [2330,2337]" dest="primitive_type [2330,2337]"/>
  <match src="expression_statement [67631,67668]" dest="expression_statement [67845,67882]"/>
  <match src="comment: // dev fund [43504,43515]" dest="comment: // dev fund [43504,43515]"/>
  <match src="call_argument [106664,106673]" dest="call_argument [106588,106597]"/>
  <match src="true [5410,5414]" dest="true [5410,5414]"/>
  <match src="identifier: IERC20 [20598,20604]" dest="identifier: IERC20 [20598,20604]"/>
  <match src="bool: bool [64025,64029]" dest="bool: bool [64027,64031]"/>
  <match src="}: } [91130,91131]" dest="}: } [92155,92156]"/>
  <match src="expression_statement [87326,87339]" dest="expression_statement [88487,88500]"/>
  <match src="member_expression [37732,37739]" dest="member_expression [37732,37739]"/>
  <match src="type_name [28082,28089]" dest="type_name [28082,28089]"/>
  <match src="identifier: _owner [26923,26929]" dest="identifier: _owner [26923,26929]"/>
  <match src="visibility [64669,64675]" dest="visibility [64673,64681]"/>
  <match src="comment: /**      * @dev Emitted when `value` tokens are moved from one account (`from`) to      * another (`to`).      *      * Note that `value` may be zero.      */ [3922,4085]" dest="comment: /**      * @dev Emitted when `value` tokens are moved from one account (`from`) to      * another (`to`).      *      * Note that `value` may be zero.      */ [3922,4085]"/>
  <match src="parameter [39173,39183]" dest="parameter [39173,39183]"/>
  <match src="): ) [77928,77929]" dest="): ) [77166,77167]"/>
  <match src="): ) [108080,108081]" dest="): ) [108004,108005]"/>
  <match src="boolean_literal [6943,6947]" dest="boolean_literal [6943,6947]"/>
  <match src="identifier: token0 [69743,69749]" dest="identifier: token0 [69454,69460]"/>
  <match src="type_name [46234,46241]" dest="type_name [46236,46243]"/>
  <match src="uint256: uint256 [14054,14061]" dest="uint256: uint256 [14054,14061]"/>
  <match src="): ) [84494,84495]" dest="): ) [85029,85030]"/>
  <match src="primitive_type [88530,88537]" dest="primitive_type [89378,89385]"/>
  <match src="primitive_type [15672,15677]" dest="primitive_type [15672,15677]"/>
  <match src="member_expression [67428,67440]" dest="member_expression [67675,67687]"/>
  <match src="binary_expression [45577,45602]" dest="binary_expression [45579,45604]"/>
  <match src="uint256: uint256 [62187,62194]" dest="uint256: uint256 [62189,62196]"/>
  <match src="identifier: r1 [29924,29926]" dest="identifier: r1 [29924,29926]"/>
  <match src="call_argument [83520,83526]" dest="call_argument [84385,84391]"/>
  <match src="identifier: inviteeWeight [99822,99835]" dest="identifier: inviteeWeight [98014,98027]"/>
  <match src="identifier: target [16660,16666]" dest="identifier: target [16660,16666]"/>
  <match src="variable_declaration [23305,23328]" dest="variable_declaration [23305,23328]"/>
  <match src="): ) [77316,77317]" dest="): ) [76756,76757]"/>
  <match src=".: . [95065,95066]" dest=".: . [82587,82588]"/>
  <match src="(: ( [61010,61011]" dest="(: ( [61012,61013]"/>
  <match src="number_literal: 18 [49678,49680]" dest="number_literal: 18 [49680,49682]"/>
  <match src="variable_declaration [37250,37264]" dest="variable_declaration [37250,37264]"/>
  <match src="primitive_type [39733,39737]" dest="primitive_type [39733,39737]"/>
  <match src="identifier: token1 [104736,104742]" dest="identifier: token1 [104660,104666]"/>
  <match src="external: external [93901,93909]" dest="external: external [93547,93555]"/>
  <match src=",: , [95456,95457]" dest=",: , [94604,94605]"/>
  <match src="call_argument [71578,71600]" dest="call_argument [71289,71311]"/>
  <match src="array_access [59888,59903]" dest="array_access [59890,59905]"/>
  <match src="emit: emit [73667,73671]" dest="emit: emit [73432,73436]"/>
  <match src="block_statement [70804,70864]" dest="block_statement [70515,70575]"/>
  <match src=",: , [34339,34340]" dest=",: , [34339,34340]"/>
  <match src="memory: memory [104983,104989]" dest="memory: memory [104907,104913]"/>
  <match src="=: = [60204,60205]" dest="=: = [60206,60207]"/>
  <match src="!: ! [97408,97409]" dest="!: ! [96173,96174]"/>
  <match src="variable_declaration_statement [16998,17074]" dest="variable_declaration_statement [16998,17074]"/>
  <match src="number_literal: 32 [29200,29202]" dest="number_literal: 32 [29200,29202]"/>
  <match src="call_struct_argument [71179,71213]" dest="call_struct_argument [70890,70924]"/>
  <match src="]: ] [54181,54182]" dest="]: ] [54183,54184]"/>
  <match src="identifier: uq112x112 [36585,36594]" dest="identifier: uq112x112 [36585,36594]"/>
  <match src=",: , [59310,59311]" dest=",: , [59312,59313]"/>
  <match src="memory: memory [37946,37952]" dest="memory: memory [37946,37952]"/>
  <match src="boolean_literal [51531,51535]" dest="boolean_literal [51533,51537]"/>
  <match src="function_body [44521,44576]" dest="function_body [44523,44578]"/>
  <match src="type_name [96930,96937]" dest="type_name [95695,95702]"/>
  <match src="function_definition [18730,19153]" dest="function_definition [18730,19153]"/>
  <match src="variable_declaration_statement [34756,34808]" dest="variable_declaration_statement [34756,34808]"/>
  <match src="variable_declaration_statement [42233,42290]" dest="variable_declaration_statement [42233,42290]"/>
  <match src="primitive_type [17755,17762]" dest="primitive_type [17755,17762]"/>
  <match src="{: { [57236,57237]" dest="{: { [57238,57239]"/>
  <match src="if: if [60558,60560]" dest="if: if [60560,60562]"/>
  <match src="augmented_assignment_expression [27393,27399]" dest="augmented_assignment_expression [27393,27399]"/>
  <match src="(: ( [36331,36332]" dest="(: ( [36331,36332]"/>
  <match src="primitive_type [102375,102382]" dest="primitive_type [102234,102241]"/>
  <match src="primitive_type [34827,34834]" dest="primitive_type [34827,34834]"/>
  <match src="boolean_literal [6915,6920]" dest="boolean_literal [6915,6920]"/>
  <match src="parameter [39131,39135]" dest="parameter [39131,39135]"/>
  <match src="): ) [50028,50029]" dest="): ) [50030,50031]"/>
  <match src="identifier: x [31715,31716]" dest="identifier: x [31715,31716]"/>
  <match src="-: - [37014,37015]" dest="-: - [37014,37015]"/>
  <match src="identifier: user [95023,95027]" dest="identifier: user [81126,81130]"/>
  <match src="visibility [56345,56353]" dest="visibility [56347,56355]"/>
  <match src="parameter [16702,16728]" dest="parameter [16702,16728]"/>
  <match src="parameter [49573,49594]" dest="parameter [49575,49596]"/>
  <match src="identifier: length [87550,87556]" dest="identifier: length [88711,88717]"/>
  <match src="augmented_assignment_expression [30770,30776]" dest="augmented_assignment_expression [30770,30776]"/>
  <match src="call_argument [41802,41806]" dest="call_argument [41802,41806]"/>
  <match src="visibility [1040,1046]" dest="visibility [1040,1046]"/>
  <match src="number_literal: 0 [69538,69539]" dest="number_literal: 0 [69249,69250]"/>
  <match src="(: ( [6914,6915]" dest="(: ( [6914,6915]"/>
  <match src="string_literal [7766,7798]" dest="string_literal [7766,7798]"/>
  <match src="(: ( [50014,50015]" dest="(: ( [50016,50017]"/>
  <match src="type_name [105001,105008]" dest="type_name [104925,104932]"/>
  <match src="identifier: amount [101588,101594]" dest="identifier: amount [101325,101331]"/>
  <match src="primitive_type [45509,45516]" dest="primitive_type [45511,45518]"/>
  <match src="call_argument [59523,59550]" dest="call_argument [59525,59552]"/>
  <match src="type_name [5315,5322]" dest="type_name [5315,5322]"/>
  <match src="uint256: uint256 [45159,45166]" dest="uint256: uint256 [45161,45168]"/>
  <match src="call_expression [104821,104854]" dest="call_expression [104745,104778]"/>
  <match src="type_name [105991,105998]" dest="type_name [105915,105922]"/>
  <match src="identifier: rankPoolIndex [93991,94004]" dest="identifier: rankPoolIndex [93637,93650]"/>
  <match src="type_name [98449,98456]" dest="type_name [98853,98860]"/>
  <match src="]: ] [93209,93210]" dest="]: ] [92857,92858]"/>
  <match src="comment: // * 2^-112 [35359,35370]" dest="comment: // * 2^-112 [35359,35370]"/>
  <match src="call_argument [93261,93270]" dest="call_argument [92909,92918]"/>
  <match src="call_argument [89530,89538]" dest="call_argument [90772,90780]"/>
  <match src="augmented_assignment_expression [29170,29179]" dest="augmented_assignment_expression [29170,29179]"/>
  <match src="contract_body [42703,42909]" dest="contract_body [42703,42909]"/>
  <match src="identifier: blockTimestampLast [106016,106034]" dest="identifier: blockTimestampLast [105940,105958]"/>
  <match src="call_argument [84488,84494]" dest="call_argument [85023,85029]"/>
  <match src="returns: returns [17413,17420]" dest="returns: returns [17413,17420]"/>
  <match src="call_argument [93108,93117]" dest="call_argument [92756,92765]"/>
  <match src="type_name [107035,107055]" dest="type_name [106959,106979]"/>
  <match src="(: ( [19756,19757]" dest="(: ( [19756,19757]"/>
  <match src="call_argument [107397,107421]" dest="call_argument [107321,107345]"/>
  <match src="parameter [37936,37957]" dest="parameter [37936,37957]"/>
  <match src="(: ( [26491,26492]" dest="(: ( [26491,26492]"/>
  <match src="identifier: d [27561,27562]" dest="identifier: d [27561,27562]"/>
  <match src="{: { [33933,33934]" dest="{: { [33933,33934]"/>
  <match src="type_name [65734,65741]" dest="type_name [65744,65751]"/>
  <match src="type_name [65457,65464]" dest="type_name [65467,65474]"/>
  <match src="library_declaration [20484,23645]" dest="library_declaration [20484,23645]"/>
  <match src="identifier: lastDividendHeight [78771,78789]" dest="identifier: lastDividendHeight [78351,78369]"/>
  <match src="state_mutability [34246,34250]" dest="state_mutability [34246,34250]"/>
  <match src="call_argument [56688,56698]" dest="call_argument [56690,56700]"/>
  <match src="block_statement [83724,83807]" dest="block_statement [85460,85535]"/>
  <match src="indexed: indexed [39717,39724]" dest="indexed: indexed [39717,39724]"/>
  <match src=",: , [105555,105556]" dest=",: , [105479,105480]"/>
  <match src="identifier: amount [58596,58602]" dest="identifier: amount [58598,58604]"/>
  <match src="identifier: amount [2357,2363]" dest="identifier: amount [2357,2363]"/>
  <match src="while: while [60729,60734]" dest="while: while [60731,60736]"/>
  <match src="function_definition [39067,39137]" dest="function_definition [39067,39137]"/>
  <match src="): ) [15684,15685]" dest="): ) [15684,15685]"/>
  <match src="primitive_type [36324,36331]" dest="primitive_type [36324,36331]"/>
  <match src="variable_declaration [42018,42034]" dest="variable_declaration [42018,42034]"/>
  <match src="=: = [95880,95881]" dest="=: = [95137,95138]"/>
  <match src="(: ( [1577,1578]" dest="(: ( [1577,1578]"/>
  <match src="(: ( [5684,5685]" dest="(: ( [5684,5685]"/>
  <match src="identifier: toNew [62022,62027]" dest="identifier: toNew [62024,62029]"/>
  <match src="(: ( [92937,92938]" dest="(: ( [92585,92586]"/>
  <match src="identifier: token [21985,21990]" dest="identifier: token [21985,21990]"/>
  <match src="&gt;: &gt; [8875,8876]" dest="&gt;: &gt; [8875,8876]"/>
  <match src="primitive_type [36757,36764]" dest="primitive_type [36757,36764]"/>
  <match src="uint224: uint224 [108003,108010]" dest="uint224: uint224 [107927,107934]"/>
  <match src="): ) [106466,106467]" dest="): ) [106390,106391]"/>
  <match src="{: { [73922,73923]" dest="{: { [73652,73653]"/>
  <match src="=: = [86399,86400]" dest="=: = [87687,87688]"/>
  <match src="variable_declaration_statement [35300,35358]" dest="variable_declaration_statement [35300,35358]"/>
  <match src="function: function [44438,44446]" dest="function: function [44440,44448]"/>
  <match src="return_statement [94015,94033]" dest="return_statement [93661,93679]"/>
  <match src=".: . [95168,95169]" dest=".: . [82633,82634]"/>
  <match src="): ) [46794,46795]" dest="): ) [47036,47037]"/>
  <match src="(: ( [88665,88666]" dest="(: ( [89513,89514]"/>
  <match src="=: = [71941,71942]" dest="=: = [71826,71827]"/>
  <match src="function: function [56297,56305]" dest="function: function [56299,56307]"/>
  <match src="variable_declaration_statement [29883,29902]" dest="variable_declaration_statement [29883,29902]"/>
  <match src="new_expression [88652,88665]" dest="new_expression [89500,89513]"/>
  <match src="uint256: uint256 [46234,46241]" dest="uint256: uint256 [46236,46243]"/>
  <match src="block_statement [107202,107247]" dest="block_statement [107126,107171]"/>
  <match src="primitive_type [36250,36257]" dest="primitive_type [36250,36257]"/>
  <match src="type_name [40676,40680]" dest="type_name [40676,40680]"/>
  <match src="identifier: InvitationInfo [79937,79951]" dest="identifier: InvitationInfo [80522,80536]"/>
  <match src="(: ( [19187,19188]" dest="(: ( [19187,19188]"/>
  <match src="uint256: uint256 [69213,69220]" dest="uint256: uint256 [68924,68931]"/>
  <match src="identifier: block [67386,67391]" dest="identifier: block [67633,67638]"/>
  <match src="identifier: userInfo [82503,82511]" dest="identifier: userInfo [83341,83349]"/>
  <match src="parameter [17422,17434]" dest="parameter [17422,17434]"/>
  <match src="identifier: inviteeIndexMap [87182,87197]" dest="identifier: inviteeIndexMap [88341,88356]"/>
  <match src="): ) [43972,43973]" dest="): ) [43972,43973]"/>
  <match src=".: . [47345,47346]" dest=".: . [47347,47348]"/>
  <match src="): ) [99897,99898]" dest="): ) [98089,98090]"/>
  <match src="(: ( [84128,84129]" dest="(: ( [84657,84658]"/>
  <match src="identifier: i [103651,103652]" dest="identifier: i [103575,103576]"/>
  <match src="identifier: _name [49141,49146]" dest="identifier: _name [49143,49148]"/>
  <match src="identifier: x [27344,27345]" dest="identifier: x [27344,27345]"/>
  <match src="identifier: SHDToken [64501,64509]" dest="identifier: SHDToken [64503,64511]"/>
  <match src="(: ( [11790,11791]" dest="(: ( [11790,11791]"/>
  <match src=".: . [79540,79541]" dest=".: . [78900,78901]"/>
  <match src="primitive_type [39747,39751]" dest="primitive_type [39747,39751]"/>
  <match src="(: ( [6868,6869]" dest="(: ( [6868,6869]"/>
  <match src="variable_declaration_statement [82479,82530]" dest="variable_declaration_statement [83317,83368]"/>
  <match src="uint32: uint32 [42233,42239]" dest="uint32: uint32 [42233,42239]"/>
  <match src="member_expression [96217,96229]" dest="member_expression [95527,95539]"/>
  <match src="binary_expression [29128,29153]" dest="binary_expression [29128,29153]"/>
  <match src=",: , [84430,84431]" dest=",: , [84965,84966]"/>
  <match src=".: . [99231,99232]" dest=".: . [99391,99392]"/>
  <match src="identifier: require [54944,54951]" dest="identifier: require [54946,54953]"/>
  <match src="primitive_type [35324,35331]" dest="primitive_type [35324,35331]"/>
  <match src="uint256: uint256 [49051,49058]" dest="uint256: uint256 [49053,49060]"/>
  <match src="primitive_type [46120,46127]" dest="primitive_type [46122,46129]"/>
  <match src="member_expression [47451,47461]" dest="member_expression [47453,47463]"/>
  <match src="state_mutability [40178,40182]" dest="state_mutability [40178,40182]"/>
  <match src="address: address [61257,61264]" dest="address: address [61259,61266]"/>
  <match src="string [17487,17526]" dest="string [17487,17526]"/>
  <match src="indexed: indexed [39951,39958]" dest="indexed: indexed [39951,39958]"/>
  <match src="function: function [73059,73067]" dest="function: function [72824,72832]"/>
  <match src="identifier: _totalSupply [55817,55829]" dest="identifier: _totalSupply [55819,55831]"/>
  <match src="): ) [70802,70803]" dest="): ) [70513,70514]"/>
  <match src="(: ( [29490,29491]" dest="(: ( [29490,29491]"/>
  <match src="primitive_type [18419,18424]" dest="primitive_type [18419,18424]"/>
  <match src="binary_expression [60702,60718]" dest="binary_expression [60704,60720]"/>
  <match src="identifier: pool [83290,83294]" dest="identifier: pool [84275,84279]"/>
  <match src="identifier: Address [12049,12056]" dest="identifier: Address [12049,12056]"/>
  <match src="identifier: block [67428,67433]" dest="identifier: block [67675,67680]"/>
  <match src="identifier: msg [80341,80344]" dest="identifier: msg [80961,80964]"/>
  <match src="identifier: recipient [14273,14282]" dest="identifier: recipient [14273,14282]"/>
  <match src="(: ( [102708,102709]" dest="(: ( [102632,102633]"/>
  <match src="returns: returns [52652,52659]" dest="returns: returns [52654,52661]"/>
  <match src="identifier: currentPoolCountInRank [87673,87695]" dest="identifier: currentPoolCountInRank [88834,88856]"/>
  <match src="member_expression [47276,47286]" dest="member_expression [47278,47288]"/>
  <match src="solidity_version:  0.6.12 [58683,58690]" dest="solidity_version:  0.6.12 [58685,58692]"/>
  <match src="=: = [73572,73573]" dest="=: = [73337,73338]"/>
  <match src="identifier: _approve [52004,52012]" dest="identifier: _approve [52006,52014]"/>
  <match src="return_type_definition [30238,30255]" dest="return_type_definition [30238,30255]"/>
  <match src="call_expression [21985,22024]" dest="call_expression [21985,22024]"/>
  <match src="): ) [51702,51703]" dest="): ) [51704,51705]"/>
  <match src="): ) [29767,29768]" dest="): ) [29767,29768]"/>
  <match src="]: ] [87009,87010]" dest="]: ] [88166,88167]"/>
  <match src="identifier: lastDividendHeight [84702,84720]" dest="identifier: lastDividendHeight [85833,85851]"/>
  <match src="identifier: _resignImplementation [1556,1577]" dest="identifier: _resignImplementation [1556,1577]"/>
  <match src="primitive_type [33944,33951]" dest="primitive_type [33944,33951]"/>
  <match src="type_name [99420,99428]" dest="type_name [97510,97518]"/>
  <match src="return: return [8293,8299]" dest="return: return [8293,8299]"/>
  <match src="parameter [8113,8122]" dest="parameter [8113,8122]"/>
  <match src="function: function [61224,61232]" dest="function: function [61226,61234]"/>
  <match src="=: = [93144,93145]" dest="=: = [92792,92793]"/>
  <match src="expression_statement [71732,71761]" dest="expression_statement [71443,71472]"/>
  <match src="type_name [39537,39544]" dest="type_name [39537,39544]"/>
  <match src="expression_statement [90423,90526]" dest="expression_statement [91474,91551]"/>
  <match src="identifier: msg [59531,59534]" dest="identifier: msg [59533,59536]"/>
  <match src="identifier: returndata [23318,23328]" dest="identifier: returndata [23318,23328]"/>
  <match src="primitive_type [934,941]" dest="primitive_type [934,941]"/>
  <match src="call_argument [28108,28109]" dest="call_argument [28108,28109]"/>
  <match src="variable_declaration [86000,86030]" dest="variable_declaration [100130,100151]"/>
  <match src="number_literal: 0 [61537,61538]" dest="number_literal: 0 [61539,61540]"/>
  <match src="expression_statement [88735,88763]" dest="expression_statement [89583,89611]"/>
  <match src="): ) [40370,40371]" dest="): ) [40370,40371]"/>
  <match src="primitive_type [96120,96127]" dest="primitive_type [95430,95437]"/>
  <match src="identifier: lastDividendHeight [79201,79219]" dest="identifier: lastDividendHeight [79356,79374]"/>
  <match src="expression_statement [54944,55016]" dest="expression_statement [54946,55018]"/>
  <match src="variable_declaration_statement [85637,85691]" dest="variable_declaration_statement [86937,86991]"/>
  <match src="memory: memory [34599,34605]" dest="memory: memory [34599,34605]"/>
  <match src="identifier: _maxRankNumber [67153,67167]" dest="identifier: _maxRankNumber [67406,67420]"/>
  <match src="number_literal: 0 [84043,84044]" dest="number_literal: 0 [84572,84573]"/>
  <match src="variable_declaration [78666,78689]" dest="variable_declaration [78246,78269]"/>
  <match src="uint256: uint256 [35587,35594]" dest="uint256: uint256 [35587,35594]"/>
  <match src="member_expression [21809,21822]" dest="member_expression [21809,21822]"/>
  <match src="uint256: uint256 [85213,85220]" dest="uint256: uint256 [86513,86520]"/>
  <match src="variable_declaration [102488,102508]" dest="variable_declaration [102412,102432]"/>
  <match src="uint256: uint256 [78242,78249]" dest="uint256: uint256 [77375,77382]"/>
  <match src=",: , [68807,68808]" dest=",: , [68556,68557]"/>
  <match src="uint256: uint256 [37250,37257]" dest="uint256: uint256 [37250,37257]"/>
  <match src="identifier: timestamp [105871,105880]" dest="identifier: timestamp [105795,105804]"/>
  <match src="comment: /**      * @notice Implementation address for this contract      */ [142,211]" dest="comment: /**      * @notice Implementation address for this contract      */ [142,211]"/>
  <match src="boolean_literal [86931,86935]" dest="boolean_literal [88088,88092]"/>
  <match src=".: . [100943,100944]" dest=".: . [101101,101102]"/>
  <match src="visibility [54835,54843]" dest="visibility [54837,54845]"/>
  <match src="call_argument [44230,44281]" dest="call_argument [44232,44283]"/>
  <match src="{: { [74049,74050]" dest="{: { [73779,73780]"/>
  <match src="identifier: number [80547,80553]" dest="identifier: number [81232,81238]"/>
  <match src="identifier: transfer [51377,51385]" dest="identifier: transfer [51379,51387]"/>
  <match src=".: . [90888,90889]" dest=".: . [91913,91914]"/>
  <match src="&gt;: &gt; [79896,79897]" dest="&gt;: &gt; [80481,80482]"/>
  <match src="call_argument [87029,87043]" dest="call_argument [88186,88200]"/>
  <match src="primitive_type [39131,39135]" dest="primitive_type [39131,39135]"/>
  <match src="identifier: value [39559,39564]" dest="identifier: value [39559,39564]"/>
  <match src="{: { [76988,76989]" dest="{: { [76504,76505]"/>
  <match src="}: } [93869,93870]" dest="}: } [93515,93516]"/>
  <match src="memory: memory [18388,18394]" dest="memory: memory [18388,18394]"/>
  <match src="identifier: _becomeImplementation [1381,1402]" dest="identifier: _becomeImplementation [1381,1402]"/>
  <match src=".: . [108027,108028]" dest=".: . [107951,107952]"/>
  <match src="binary_expression [57334,57355]" dest="binary_expression [57336,57357]"/>
  <match src="primitive_type [78999,79006]" dest="primitive_type [78788,78795]"/>
  <match src="call_argument [25995,26029]" dest="call_argument [25995,26029]"/>
  <match src="virtual: virtual [44663,44670]" dest="virtual: virtual [44665,44672]"/>
  <match src="identifier: beforeCalculateIndex [104042,104062]" dest="identifier: beforeCalculateIndex [103966,103986]"/>
  <match src="tuple_expression [5409,5418]" dest="tuple_expression [5409,5418]"/>
  <match src="): ) [46954,46955]" dest="): ) [46341,46342]"/>
  <match src="string_literal [45604,45625]" dest="string_literal [45606,45627]"/>
  <match src="call_argument [22459,22466]" dest="call_argument [22459,22466]"/>
  <match src="binary_expression [27707,27716]" dest="binary_expression [27707,27716]"/>
  <match src="identifier: userWeight [83061,83071]" dest="identifier: userWeight [83840,83850]"/>
  <match src="assignment_expression [103937,104027]" dest="assignment_expression [103861,103951]"/>
  <match src="identifier: cachedPrice [107106,107117]" dest="identifier: cachedPrice [107030,107041]"/>
  <match src="uint256: uint256 [5595,5602]" dest="uint256: uint256 [5595,5602]"/>
  <match src="number_literal: 0 [21614,21615]" dest="number_literal: 0 [21614,21615]"/>
  <match src="parameter [92548,92566]" dest="parameter [92196,92214]"/>
  <match src="number_literal: 0 [109667,109668]" dest="number_literal: 0 [109591,109592]"/>
  <match src="call_argument [70997,71009]" dest="call_argument [70708,70720]"/>
  <match src="primitive_type [23570,23574]" dest="primitive_type [23570,23574]"/>
  <match src="function: function [51606,51614]" dest="function: function [51608,51616]"/>
  <match src="expression_statement [81391,81446]" dest="expression_statement [82080,82135]"/>
  <match src="{: { [60263,60264]" dest="{: { [60265,60266]"/>
  <match src="): ) [47147,47148]" dest="): ) [46534,46535]"/>
  <match src="type_name [73134,73141]" dest="type_name [72899,72906]"/>
  <match src="type_name [15672,15677]" dest="type_name [15672,15677]"/>
  <match src="&gt;: &gt; [11821,11822]" dest="&gt;: &gt; [11821,11822]"/>
  <match src="(: ( [10049,10050]" dest="(: ( [10049,10050]"/>
  <match src="comment: // indicates whether the pool is in the rank [64591,64635]" dest="comment: // indicates whether the pool is in the rank [64595,64639]"/>
  <match src="identifier: a [6247,6248]" dest="identifier: a [6247,6248]"/>
  <match src="expression_statement [29094,29103]" dest="expression_statement [29094,29103]"/>
  <match src=".: . [47279,47280]" dest=".: . [47281,47282]"/>
  <match src="true [6943,6947]" dest="true [6943,6947]"/>
  <match src="identifier: TokenPairInfo [104969,104982]" dest="identifier: TokenPairInfo [104893,104906]"/>
  <match src="type_name [33636,33645]" dest="type_name [33636,33645]"/>
  <match src="function_body [94178,94219]" dest="function_body [93824,93865]"/>
  <match src="call_expression [41787,41830]" dest="call_expression [41787,41830]"/>
  <match src="(: ( [40166,40167]" dest="(: ( [40166,40167]"/>
  <match src="primitive_type [33466,33473]" dest="primitive_type [33466,33473]"/>
  <match src="identifier: _writeCheckpoint [61987,62003]" dest="identifier: _writeCheckpoint [61989,62005]"/>
  <match src=".: . [78877,78878]" dest=".: . [78460,78461]"/>
  <match src="call_argument [18486,18527]" dest="call_argument [18486,18527]"/>
  <match src=".: . [46429,46430]" dest=".: . [46671,46672]"/>
  <match src="identifier: spender [3450,3457]" dest="identifier: spender [3450,3457]"/>
  <match src="type_name [92769,92776]" dest="type_name [92417,92424]"/>
  <match src="identifier: b [10991,10992]" dest="identifier: b [10991,10992]"/>
  <match src="expression_statement [61113,61132]" dest="expression_statement [61115,61134]"/>
  <match src="identifier: tokenBlockTimestampLast [105229,105252]" dest="identifier: tokenBlockTimestampLast [105153,105176]"/>
  <match src="]: ] [95863,95864]" dest="]: ] [95135,95136]"/>
  <match src="identifier: pool [89867,89871]" dest="identifier: pool [91114,91118]"/>
  <match src="): ) [33738,33739]" dest="): ) [33738,33739]"/>
  <match src="assignment_expression [70104,70132]" dest="assignment_expression [69815,69843]"/>
  <match src="identifier: priceTokenCumulativeLast [105473,105497]" dest="identifier: priceTokenCumulativeLast [105397,105421]"/>
  <match src=",: , [55055,55056]" dest=",: , [55057,55058]"/>
  <match src="call_expression [92925,92949]" dest="call_expression [92573,92597]"/>
  <match src="primitive_type [42835,42842]" dest="primitive_type [42835,42842]"/>
  <match src="primitive_type [40136,40143]" dest="primitive_type [40136,40143]"/>
  <match src="type_name [18382,18387]" dest="type_name [18382,18387]"/>
  <match src="storage: storage [78294,78301]" dest="storage: storage [77427,77434]"/>
  <match src="{: { [28549,28550]" dest="{: { [28549,28550]"/>
  <match src="&lt;&lt;=: &lt;&lt;= [29376,29379]" dest="&lt;&lt;=: &lt;&lt;= [29376,29379]"/>
  <match src="): ) [74047,74048]" dest="): ) [73777,73778]"/>
  <match src="identifier: recipient [54808,54817]" dest="identifier: recipient [54810,54819]"/>
  <match src="return_statement [104774,104800]" dest="return_statement [104698,104724]"/>
  <match src="identifier: rankPoolIndexMap [72141,72157]" dest="identifier: rankPoolIndexMap [71775,71791]"/>
  <match src="event_paramater [39747,39759]" dest="event_paramater [39747,39759]"/>
  <match src="expression_statement [108258,108304]" dest="expression_statement [108182,108228]"/>
  <match src="identifier: safeApprove [21244,21255]" dest="identifier: safeApprove [21244,21255]"/>
  <match src="variable_declaration_statement [69734,69864]" dest="variable_declaration_statement [69445,69575]"/>
  <match src="call_argument [71622,71634]" dest="call_argument [71333,71345]"/>
  <match src="type_name [105973,105980]" dest="type_name [105897,105904]"/>
  <match src="): ) [81255,81256]" dest="): ) [81944,81945]"/>
  <match src="indexed: indexed [66817,66824]" dest="indexed: indexed [67070,67077]"/>
  <match src="uint224: uint224 [33104,33111]" dest="uint224: uint224 [33104,33111]"/>
  <match src="call_argument [25651,25660]" dest="call_argument [25651,25660]"/>
  <match src="=: = [36247,36248]" dest="=: = [36247,36248]"/>
  <match src="array_access [60358,60378]" dest="array_access [60360,60380]"/>
  <match src="expression_statement [86316,86365]" dest="expression_statement [87604,87653]"/>
  <match src="(: ( [46570,46571]" dest="(: ( [46812,46813]"/>
  <match src="assignment_expression [94602,94631]" dest="assignment_expression [94248,94277]"/>
  <match src="]: ] [93804,93805]" dest="]: ] [93450,93451]"/>
  <match src="identifier: LOWER_MASK [32877,32887]" dest="identifier: LOWER_MASK [32877,32887]"/>
  <match src="identifier: token1 [69759,69765]" dest="identifier: token1 [69470,69476]"/>
  <match src="&gt;&gt;: &gt;&gt; [34939,34941]" dest="&gt;&gt;: &gt;&gt; [34939,34941]"/>
  <match src="user_defined_type [63014,63025]" dest="user_defined_type [63016,63027]"/>
  <match src="]: ] [98846,98847]" dest="]: ] [99039,99040]"/>
  <match src="contract_body [20502,23645]" dest="contract_body [20502,23645]"/>
  <match src="): ) [28728,28729]" dest="): ) [28728,28729]"/>
  <match src="(: ( [78532,78533]" dest="(: ( [78112,78113]"/>
  <match src="visibility [65667,65674]" dest="visibility [65677,65684]"/>
  <match src="binary_expression [34669,34681]" dest="binary_expression [34669,34681]"/>
  <match src="uint256: uint256 [8845,8852]" dest="uint256: uint256 [8845,8852]"/>
  <match src="identifier: sender [86593,86599]" dest="identifier: sender [87881,87887]"/>
  <match src="identifier: fromNum [61527,61534]" dest="identifier: fromNum [61529,61536]"/>
  <match src="function: function [28705,28713]" dest="function: function [28705,28713]"/>
  <match src="(: ( [91080,91081]" dest="(: ( [92105,92106]"/>
  <match src="variable_declaration_statement [97449,97486]" dest="variable_declaration_statement [96214,96251]"/>
  <match src="contract_declaration [254,1058]" dest="contract_declaration [254,1058]"/>
  <match src="&amp;&amp;: &amp;&amp; [46663,46665]" dest="&amp;&amp;: &amp;&amp; [46905,46907]"/>
  <match src="primitive_type [25796,25803]" dest="primitive_type [25796,25803]"/>
  <match src="identifier: otherPoolDividendWeight [78628,78651]" dest="identifier: otherPoolDividendWeight [78208,78231]"/>
  <match src="[: [ [60465,60466]" dest="[: [ [60467,60468]"/>
  <match src=":: : [105378,105379]" dest=":: : [105302,105303]"/>
  <match src="): ) [72228,72229]" dest="): ) [72032,72033]"/>
  <match src="abstract: abstract [24252,24260]" dest="abstract: abstract [24252,24260]"/>
  <match src="call_argument [62675,62683]" dest="call_argument [62677,62685]"/>
  <match src="): ) [33522,33523]" dest="): ) [33522,33523]"/>
  <match src="function: function [103076,103084]" dest="function: function [103000,103008]"/>
  <match src="uint: uint [38654,38658]" dest="uint: uint [38654,38658]"/>
  <match src="member_expression [84181,84199]" dest="member_expression [84710,84728]"/>
  <match src="uint256: uint256 [102361,102368]" dest="uint256: uint256 [102220,102227]"/>
  <match src="identifier: _term [104188,104193]" dest="identifier: _term [104112,104117]"/>
  <match src="): ) [71599,71600]" dest="): ) [71310,71311]"/>
  <match src="identifier: _user [98604,98609]" dest="identifier: _user [97369,97374]"/>
  <match src="call_argument [105865,105890]" dest="call_argument [105789,105814]"/>
  <match src="identifier: invitees [87140,87148]" dest="identifier: invitees [88297,88305]"/>
  <match src=".: . [22101,22102]" dest=".: . [22101,22102]"/>
  <match src="state_mutability [35983,35987]" dest="state_mutability [35983,35987]"/>
  <match src="block_statement [89632,89679]" dest="block_statement [90874,90921]"/>
  <match src=".: . [97414,97415]" dest=".: . [96179,96180]"/>
  <match src="if: if [87396,87398]" dest="if: if [88557,88559]"/>
  <match src="identifier: number [77069,77075]" dest="identifier: number [76585,76591]"/>
  <match src="variable_declaration [101955,101973]" dest="variable_declaration [99859,99884]"/>
  <match src="variable_declaration [97592,97625]" dest="variable_declaration [96357,96390]"/>
  <match src="event_definition [4328,4406]" dest="event_definition [4328,4406]"/>
  <match src="primitive_type [103162,103169]" dest="primitive_type [103086,103093]"/>
  <match src="function_definition [57831,57929]" dest="function_definition [57833,57931]"/>
  <match src="binary_expression [105883,105890]" dest="binary_expression [105807,105814]"/>
  <match src="identifier: block [88750,88755]" dest="identifier: block [89598,89603]"/>
  <match src="binary_expression [29696,29705]" dest="binary_expression [29696,29705]"/>
  <match src="parameter [22204,22219]" dest="parameter [22204,22219]"/>
  <match src="): ) [40656,40657]" dest="): ) [40656,40657]"/>
  <match src="): ) [26540,26541]" dest="): ) [26540,26541]"/>
  <match src="return_type_definition [104961,104990]" dest="return_type_definition [104885,104914]"/>
  <match src=",: , [70574,70575]" dest=",: , [70285,70286]"/>
  <match src="call_argument [14327,14334]" dest="call_argument [14327,14334]"/>
  <match src="primitive_type [62129,62136]" dest="primitive_type [62131,62138]"/>
  <match src="identifier: updateSHARDPoolAccumulativeDividend [77027,77062]" dest="identifier: updateSHARDPoolAccumulativeDividend [76543,76578]"/>
  <match src="tuple_expression [90536,90550]" dest="tuple_expression [91561,91575]"/>
  <match src="member_expression [35003,35011]" dest="member_expression [35003,35011]"/>
  <match src="uint112: uint112 [33493,33500]" dest="uint112: uint112 [33493,33500]"/>
  <match src=".: . [79200,79201]" dest=".: . [79355,79356]"/>
  <match src="): ) [51952,51953]" dest="): ) [51954,51955]"/>
  <match src="}: } [76872,76873]" dest="}: } [76388,76389]"/>
  <match src=".: . [17046,17047]" dest=".: . [17046,17047]"/>
  <match src="solidity_pragma_token [53,68]" dest="solidity_pragma_token [53,68]"/>
  <match src="type_name [88704,88711]" dest="type_name [89552,89559]"/>
  <match src="number_literal: 1 [27326,27327]" dest="number_literal: 1 [27326,27327]"/>
  <match src="&amp;: &amp; [31826,31827]" dest="&amp;: &amp; [31826,31827]"/>
  <match src="%: % [11859,11860]" dest="%: % [11859,11860]"/>
  <match src="expression_statement [31532,31540]" dest="expression_statement [31532,31540]"/>
  <match src="(: ( [79292,79293]" dest="(: ( [79447,79448]"/>
  <match src="type_name [18776,18781]" dest="type_name [18776,18781]"/>
  <match src="}: } [83690,83691]" dest="}: } [85430,85431]"/>
  <match src="(: ( [40860,40861]" dest="(: ( [40860,40861]"/>
  <match src="&quot;: &quot; [14306,14307]" dest="&quot;: &quot; [14306,14307]"/>
  <match src="&quot;: &quot; [54931,54932]" dest="&quot;: &quot; [54933,54934]"/>
  <match src="{: { [60951,60952]" dest="{: { [60953,60954]"/>
  <match src="{: { [97688,97689]" dest="{: { [96453,96454]"/>
  <match src="=: = [89072,89073]" dest="=: = [89920,89921]"/>
  <match src="function_body [105823,106902]" dest="function_body [105747,106826]"/>
  <match src="{: { [19661,19662]" dest="{: { [19661,19662]"/>
  <match src="[: [ [93939,93940]" dest="[: [ [93585,93586]"/>
  <match src="(: ( [105178,105179]" dest="(: ( [105102,105103]"/>
  <match src="binary_expression [33991,34002]" dest="binary_expression [33991,34002]"/>
  <match src="memory: memory [34646,34652]" dest="memory: memory [34646,34652]"/>
  <match src="block_statement [77886,78090]" dest="block_statement [77121,77220]"/>
  <match src="comment: // invitee's supply 5% deposit weight to its invitor [43199,43251]" dest="comment: // invitee's supply 5% deposit weight to its invitor [43199,43251]"/>
  <match src="{: { [61094,61095]" dest="{: { [61096,61097]"/>
  <match src="): ) [89800,89801]" dest="): ) [91042,91043]"/>
  <match src="block_statement [29054,29114]" dest="block_statement [29054,29114]"/>
  <match src="type_name [52612,52619]" dest="type_name [52614,52621]"/>
  <match src="member_expression [88750,88762]" dest="member_expression [89598,89610]"/>
  <match src="number_literal: 0 [44253,44254]" dest="number_literal: 0 [44255,44256]"/>
  <match src="expression_statement [45011,45054]" dest="expression_statement [45013,45056]"/>
  <match src="&quot;: &quot; [14305,14306]" dest="&quot;: &quot; [14305,14306]"/>
  <match src="}: } [94686,94687]" dest="}: } [94332,94333]"/>
  <match src="&lt;&lt;=: &lt;&lt;= [29196,29199]" dest="&lt;&lt;=: &lt;&lt;= [29196,29199]"/>
  <match src="primitive_type [22295,22302]" dest="primitive_type [22295,22302]"/>
  <match src="identifier: _amount [96806,96813]" dest="identifier: _amount [85298,85305]"/>
  <match src="type_name [94483,94497]" dest="type_name [94129,94143]"/>
  <match src="if_statement [109285,109350]" dest="if_statement [109209,109274]"/>
  <match src=",: , [51403,51404]" dest=",: , [51405,51406]"/>
  <match src="identifier: _developerDAOFund [67650,67667]" dest="identifier: _developerDAOFund [67864,67881]"/>
  <match src="identifier: lastDividendHeight [71401,71419]" dest="identifier: lastDividendHeight [71112,71130]"/>
  <match src="string_literal [8246,8281]" dest="string_literal [8246,8281]"/>
  <match src="identifier: require [54863,54870]" dest="identifier: require [54865,54872]"/>
  <match src="comment: /**      * @dev Returns the name of the token.      */ [49696,49752]" dest="comment: /**      * @dev Returns the name of the token.      */ [49698,49754]"/>
  <match src=".: . [47454,47455]" dest=".: . [47456,47457]"/>
  <match src="identifier: numerator [37052,37061]" dest="identifier: numerator [37052,37061]"/>
  <match src="state_mutability [17408,17412]" dest="state_mutability [17408,17412]"/>
  <match src="binary_expression [84840,84859]" dest="binary_expression [85971,85990]"/>
  <match src="identifier: shardReserve [97519,97531]" dest="identifier: shardReserve [96284,96296]"/>
  <match src="identifier: invitees [99232,99240]" dest="identifier: invitees [99392,99400]"/>
  <match src="{: { [59877,59878]" dest="{: { [59879,59880]"/>
  <match src="(: ( [30720,30721]" dest="(: ( [30720,30721]"/>
  <match src="): ) [39028,39029]" dest="): ) [39028,39029]"/>
  <match src="primitive_type [64094,64100]" dest="primitive_type [64096,64102]"/>
  <match src=".: . [73478,73479]" dest=".: . [73243,73244]"/>
  <match src="variable_declaration [69878,69895]" dest="variable_declaration [69589,69606]"/>
  <match src="identifier: add [101230,101233]" dest="identifier: add [101199,101202]"/>
  <match src="type_name [51640,51647]" dest="type_name [51642,51649]"/>
  <match src="call_argument [106378,106386]" dest="call_argument [106302,106310]"/>
  <match src="uint32: uint32 [41404,41410]" dest="uint32: uint32 [41404,41410]"/>
  <match src="number_literal: 0 [31310,31311]" dest="number_literal: 0 [31310,31311]"/>
  <match src="identifier: owner [57255,57260]" dest="identifier: owner [57257,57262]"/>
  <match src="memory: memory [38782,38788]" dest="memory: memory [38782,38788]"/>
  <match src="&quot;: &quot; [75670,75671]" dest="&quot;: &quot; [75186,75187]"/>
  <match src="{: { [82468,82469]" dest="{: { [83306,83307]"/>
  <match src="solidity_pragma_token [41022,41038]" dest="solidity_pragma_token [41022,41038]"/>
  <match src="identifier: amount [55949,55955]" dest="identifier: amount [55951,55957]"/>
  <match src="): ) [95601,95602]" dest="): ) [94749,94750]"/>
  <match src="): ) [87423,87424]" dest="): ) [88584,88585]"/>
  <match src="call_argument [60083,60109]" dest="call_argument [60085,60111]"/>
  <match src="variable_declaration_statement [79035,79071]" dest="variable_declaration_statement [78824,78860]"/>
  <match src="identifier: newOwner [26903,26911]" dest="identifier: newOwner [26903,26911]"/>
  <match src="expression_statement [100939,100973]" dest="expression_statement [101097,101131]"/>
  <match src=".: . [77631,77632]" dest=".: . [77071,77072]"/>
  <match src="return_statement [17084,17144]" dest="return_statement [17084,17144]"/>
  <match src="identifier: permit [39515,39521]" dest="identifier: permit [39515,39521]"/>
  <match src="identifier: _callOptionalReturn [21759,21778]" dest="identifier: _callOptionalReturn [21759,21778]"/>
  <match src="event: event [38597,38602]" dest="event: event [38597,38602]"/>
  <match src="call_argument [54139,54146]" dest="call_argument [54141,54148]"/>
  <match src="type_name [96455,96462]" dest="type_name [80202,80209]"/>
  <match src="user_defined_type [105737,105750]" dest="user_defined_type [105661,105674]"/>
  <match src="string [87045,87083]" dest="string [88202,88240]"/>
  <match src="primitive_type [65081,65088]" dest="primitive_type [65091,65098]"/>
  <match src="address: address [95244,95251]" dest="address: address [94392,94399]"/>
  <match src="identifier: _amount [81953,81960]" dest="identifier: _amount [82785,82792]"/>
  <match src="identifier: RemoveFromBlacklist [66850,66869]" dest="identifier: RemoveFromBlacklist [67103,67122]"/>
  <match src="function_definition [88369,88912]" dest="function_definition [89217,89760]"/>
  <match src="state_variable_declaration [48956,49003]" dest="state_variable_declaration [48958,49005]"/>
  <match src="number_literal: 0 [71285,71286]" dest="number_literal: 0 [70996,70997]"/>
  <match src="expression_statement [108201,108248]" dest="expression_statement [108125,108172]"/>
  <match src="parameter [22190,22202]" dest="parameter [22190,22202]"/>
  <match src="=: = [62602,62603]" dest="=: = [62604,62605]"/>
  <match src="(: ( [64868,64869]" dest="(: ( [64876,64877]"/>
  <match src="identifier: from [61553,61557]" dest="identifier: from [61555,61559]"/>
  <match src="comment: /**      * @dev Moves `amount` tokens from `sender` to `recipient` using the      * allowance mechanism. `amount` is then deducted from the caller's      * allowance.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [3507,3811]" dest="comment: /**      * @dev Moves `amount` tokens from `sender` to `recipient` using the      * allowance mechanism. `amount` is then deducted from the caller's      * allowance.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [3507,3811]"/>
  <match src="bytes: bytes [16748,16753]" dest="bytes: bytes [16748,16753]"/>
  <match src="address: address [81925,81932]" dest="address: address [82757,82764]"/>
  <match src="type_name [52661,52665]" dest="type_name [52663,52667]"/>
  <match src="assignment_expression [106147,106195]" dest="assignment_expression [106071,106119]"/>
  <match src="call_argument [73343,73344]" dest="call_argument [73108,73109]"/>
  <match src="member_expression [23546,23556]" dest="member_expression [23546,23556]"/>
  <match src="binary_expression [61559,61570]" dest="binary_expression [61561,61572]"/>
  <match src="): ) [29643,29644]" dest="): ) [29643,29644]"/>
  <match src="assignment_expression [46385,46461]" dest="assignment_expression [46627,46703]"/>
  <match src="assignment_expression [93689,93766]" dest="assignment_expression [93337,93412]"/>
  <match src="type_name [42835,42842]" dest="type_name [42835,42842]"/>
  <match src="call_argument [83242,83252]" dest="call_argument [84048,84058]"/>
  <match src="type_name [18760,18767]" dest="type_name [18760,18767]"/>
  <match src="(: ( [29573,29574]" dest="(: ( [29573,29574]"/>
  <match src="type_name [968,972]" dest="type_name [968,972]"/>
  <match src="identifier: poolInfo [89074,89082]" dest="identifier: poolInfo [89922,89930]"/>
  <match src="identifier: checkpoints [60562,60573]" dest="identifier: checkpoints [60564,60575]"/>
  <match src="=: = [98567,98568]" dest="=: = [97332,97333]"/>
  <match src="pragma: pragma [108673,108679]" dest="pragma: pragma [108597,108603]"/>
  <match src="(: ( [97108,97109]" dest="(: ( [95873,95874]"/>
  <match src="expression_statement [11811,11840]" dest="expression_statement [11811,11840]"/>
  <match src="&quot;: &quot; [18933,18934]" dest="&quot;: &quot; [18933,18934]"/>
  <match src="member_expression [36455,36470]" dest="member_expression [36455,36470]"/>
  <match src="type_name [17380,17385]" dest="type_name [17380,17385]"/>
  <match src="): ) [53445,53446]" dest="): ) [53447,53448]"/>
  <match src="function_definition [6808,6963]" dest="function_definition [6808,6963]"/>
  <match src="solidity_version_comparison_operator [23730,23732]" dest="solidity_version_comparison_operator [23730,23732]"/>
  <match src="identifier: functionCall [15578,15590]" dest="identifier: functionCall [15578,15590]"/>
  <match src="identifier: pool [78302,78306]" dest="identifier: pool [77435,77439]"/>
  <match src="event_paramater [38531,38552]" dest="event_paramater [38531,38552]"/>
  <match src="function: function [45982,45990]" dest="function: function [45984,45992]"/>
  <match src="call_argument [36477,36484]" dest="call_argument [36477,36484]"/>
  <match src="variable_declaration_statement [76184,76247]" dest="variable_declaration_statement [75700,75763]"/>
  <match src=",: , [7694,7695]" dest=",: , [7694,7695]"/>
  <match src="type_name [66494,66501]" dest="type_name [66747,66754]"/>
  <match src=".: . [80486,80487]" dest=".: . [81171,81172]"/>
  <match src="primitive_type [17013,17018]" dest="primitive_type [17013,17018]"/>
  <match src="): ) [28131,28132]" dest="): ) [28131,28132]"/>
  <match src="): ) [16218,16219]" dest="): ) [16218,16219]"/>
  <match src="): ) [42811,42812]" dest="): ) [42811,42812]"/>
  <match src="*: * [35345,35346]" dest="*: * [35345,35346]"/>
  <match src=".: . [46765,46766]" dest=".: . [47007,47008]"/>
  <match src="type_name [107434,107440]" dest="type_name [107358,107364]"/>
  <match src="uint256: uint256 [78811,78818]" dest="uint256: uint256 [77527,77534]"/>
  <match src="identifier: addToRank [84520,84529]" dest="identifier: addToRank [85651,85660]"/>
  <match src="variable_declaration_statement [69642,69665]" dest="variable_declaration_statement [69353,69376]"/>
  <match src="identifier: a [9428,9429]" dest="identifier: a [9428,9429]"/>
  <match src="member_expression [21786,21808]" dest="member_expression [21786,21808]"/>
  <match src="if: if [103325,103327]" dest="if: if [103249,103251]"/>
  <match src="expression_statement [22046,22144]" dest="expression_statement [22046,22144]"/>
  <match src="type_name [83410,83417]" dest="type_name [85190,85197]"/>
  <match src="]: ] [60228,60229]" dest="]: ] [60230,60231]"/>
  <match src="expression_statement [60061,60171]" dest="expression_statement [60063,60173]"/>
  <match src="primitive_type [92568,92575]" dest="primitive_type [92216,92223]"/>
  <match src="primitive_type [53329,53336]" dest="primitive_type [53331,53338]"/>
  <match src="function_definition [51028,51155]" dest="function_definition [51030,51157]"/>
  <match src="identifier: Transfer [55919,55927]" dest="identifier: Transfer [55921,55929]"/>
  <match src="]: ] [44730,44731]" dest="]: ] [44732,44733]"/>
  <match src="identifier: x [33213,33214]" dest="identifier: x [33213,33214]"/>
  <match src="primitive_type [5949,5953]" dest="primitive_type [5949,5953]"/>
  <match src="identifier: sub [7681,7684]" dest="identifier: sub [7681,7684]"/>
  <match src="(: ( [73189,73190]" dest="(: ( [72954,72955]"/>
  <match src="parameter [88951,88963]" dest="parameter [89799,89811]"/>
  <match src="binary_expression [46318,46369]" dest="binary_expression [46560,46611]"/>
  <match src="identifier: r [32058,32059]" dest="identifier: r [32058,32059]"/>
  <match src="&quot;: &quot; [45344,45345]" dest="&quot;: &quot; [45346,45347]"/>
  <match src="identifier: originWeight [82817,82829]" dest="identifier: originWeight [83655,83667]"/>
  <match src="[: [ [73560,73561]" dest="[: [ [73325,73326]"/>
  <match src="identifier: pool [89396,89400]" dest="identifier: pool [77746,77750]"/>
  <match src="member_expression [20709,20723]" dest="member_expression [20709,20723]"/>
  <match src="&quot;: &quot; [7766,7767]" dest="&quot;: &quot; [7766,7767]"/>
  <match src="[: [ [82222,82223]" dest="[: [ [83060,83061]"/>
  <match src="=: = [27554,27555]" dest="=: = [27554,27555]"/>
  <match src="primitive_type [66494,66501]" dest="primitive_type [66747,66754]"/>
  <match src="expression_statement [27360,27371]" dest="expression_statement [27360,27371]"/>
  <match src=",: , [7232,7233]" dest=",: , [7232,7233]"/>
  <match src="number_literal: 1 [103490,103491]" dest="number_literal: 1 [103414,103415]"/>
  <match src="identifier: approve [22102,22109]" dest="identifier: approve [22102,22109]"/>
  <match src="identifier: _userDividendWeight [44354,44373]" dest="identifier: _userDividendWeight [44356,44375]"/>
  <match src="(: ( [6942,6943]" dest="(: ( [6942,6943]"/>
  <match src="uint256: uint256 [50918,50925]" dest="uint256: uint256 [50920,50927]"/>
  <match src="identifier: newOwner [26739,26747]" dest="identifier: newOwner [26739,26747]"/>
  <match src="type_name [63316,63323]" dest="type_name [63318,63325]"/>
  <match src="comment: // Shh -- we don't ever want this hook to be marked pure [109550,109606]" dest="comment: // Shh -- we don't ever want this hook to be marked pure [109474,109530]"/>
  <match src="primitive_type [66463,66470]" dest="primitive_type [66716,66723]"/>
  <match src="state_mutability [50887,50891]" dest="state_mutability [50889,50893]"/>
  <match src="(: ( [19110,19111]" dest="(: ( [19110,19111]"/>
  <match src="type_name [61280,61287]" dest="type_name [61282,61289]"/>
  <match src="array_access [53422,53456]" dest="array_access [53424,53458]"/>
  <match src="returns: returns [40491,40498]" dest="returns: returns [40491,40498]"/>
  <match src="{: { [27189,27190]" dest="{: { [27189,27190]"/>
  <match src="using_directive [20542,20568]" dest="using_directive [20542,20568]"/>
  <match src="]: ] [60395,60396]" dest="]: ] [60397,60398]"/>
  <match src="binary_expression [34785,34806]" dest="binary_expression [34785,34806]"/>
  <match src="string [52802,52844]" dest="string [52804,52846]"/>
  <match src="identifier: add [78624,78627]" dest="identifier: add [78204,78207]"/>
  <match src="primitive_type [40690,40694]" dest="primitive_type [40690,40694]"/>
  <match src="parameter [94397,94423]" dest="parameter [94043,94069]"/>
  <match src="call_argument [52794,52800]" dest="call_argument [52796,52802]"/>
  <match src="uint256: uint256 [61778,61785]" dest="uint256: uint256 [61780,61787]"/>
  <match src="binary_expression [67372,67398]" dest="binary_expression [67619,67645]"/>
  <match src="identifier: _pid [80220,80224]" dest="identifier: _pid [80840,80844]"/>
  <match src="type_name [49126,49132]" dest="type_name [49128,49134]"/>
  <match src="type_name [33881,33888]" dest="type_name [33881,33888]"/>
  <match src="number_literal: 1 [73289,73290]" dest="number_literal: 1 [73054,73055]"/>
  <match src="variable_declaration [98945,98966]" dest="variable_declaration [99130,99151]"/>
  <match src="identifier: Context [48898,48905]" dest="identifier: Context [48900,48907]"/>
  <match src="type_name [64056,64063]" dest="type_name [64058,64065]"/>
  <match src="number_literal: 0 [57272,57273]" dest="number_literal: 0 [57274,57275]"/>
  <match src="identifier: Burn [39704,39708]" dest="identifier: Burn [39704,39708]"/>
  <match src="expression_statement [31897,31905]" dest="expression_statement [31897,31905]"/>
  <match src="==: == [8240,8242]" dest="==: == [8240,8242]"/>
  <match src="virtual: virtual [44868,44875]" dest="virtual: virtual [44870,44877]"/>
  <match src="identifier: _invitor [42746,42754]" dest="identifier: _invitor [42746,42754]"/>
  <match src="primitive_type [40433,40437]" dest="primitive_type [40433,40437]"/>
  <match src="type_name [39678,39682]" dest="type_name [39678,39682]"/>
  <match src="address: address [94250,94257]" dest="address: address [93896,93903]"/>
  <match src="{: { [109296,109297]" dest="{: { [109220,109221]"/>
  <match src="identifier: x [30721,30722]" dest="identifier: x [30721,30722]"/>
  <match src="view: view [40486,40490]" dest="view: view [40486,40490]"/>
  <match src="=: = [85871,85872]" dest="=: = [87171,87172]"/>
  <match src="identifier: ActivityBase [63027,63039]" dest="identifier: ActivityBase [63029,63041]"/>
  <match src="if_statement [106103,106502]" dest="if_statement [106027,106426]"/>
  <match src="array_access [55213,55233]" dest="array_access [55215,55235]"/>
  <match src="user_defined_type [85843,85851]" dest="user_defined_type [87143,87151]"/>
  <match src="): ) [39365,39366]" dest="): ) [39365,39366]"/>
  <match src="member_expression [78449,78476]" dest="member_expression [78029,78056]"/>
  <match src="(: ( [22008,22009]" dest="(: ( [22008,22009]"/>
  <match src="comment: /**      * @dev Returns true if `account` is a contract.      *      * [IMPORTANT]      * ====      * It is unsafe to assume that an address for which this function returns      * false is an externally-owned account (EOA) and not a contract.      *      * Among others, `isContract` will return false for the following      * types of addresses:      *      *  - an externally-owned account      *  - a contract in construction      *  - an address where a contract will be created      *  - an address where a contract lived, but was destroyed      * ====      */ [12064,12645]" dest="comment: /**      * @dev Returns true if `account` is a contract.      *      * [IMPORTANT]      * ====      * It is unsafe to assume that an address for which this function returns      * false is an externally-owned account (EOA) and not a contract.      *      * Among others, `isContract` will return false for the following      * types of addresses:      *      *  - an externally-owned account      *  - a contract in construction      *  - an address where a contract will be created      *  - an address where a contract lived, but was destroyed      * ====      */ [12064,12645]"/>
  <match src="address: address [39237,39244]" dest="address: address [39237,39244]"/>
  <match src="identifier: inviteeWeight [101188,101201]" dest="identifier: inviteeWeight [101157,101170]"/>
  <match src="if_statement [90298,90387]" dest="if_statement [91352,91460]"/>
  <match src="uint224: uint224 [32478,32485]" dest="uint224: uint224 [32478,32485]"/>
  <match src="binary_expression [36514,36535]" dest="binary_expression [36514,36535]"/>
  <match src="uint256: uint256 [28011,28018]" dest="uint256: uint256 [28011,28018]"/>
  <match src="call_argument [103775,103780]" dest="call_argument [103699,103704]"/>
  <match src="uint: uint [39866,39870]" dest="uint: uint [39866,39870]"/>
  <match src="primitive_type [39454,39461]" dest="primitive_type [39454,39461]"/>
  <match src="type_name [35997,36006]" dest="type_name [35997,36006]"/>
  <match src="call_expression [14273,14308]" dest="call_expression [14273,14308]"/>
  <match src="]: ] [92860,92861]" dest="]: ] [92508,92509]"/>
  <match src="type_alias [48927,48935]" dest="type_alias [48929,48937]"/>
  <match src="(: ( [81370,81371]" dest="(: ( [82059,82060]"/>
  <match src="identifier: safeShiftBits [38236,38249]" dest="identifier: safeShiftBits [38236,38249]"/>
  <match src="function_definition [59719,59813]" dest="function_definition [59721,59815]"/>
  <match src="identifier: Checkpoint [60852,60862]" dest="identifier: Checkpoint [60854,60864]"/>
  <match src="identifier: skim [40815,40819]" dest="identifier: skim [40815,40819]"/>
  <match src="variable_declaration_statement [104547,104586]" dest="variable_declaration_statement [104471,104510]"/>
  <match src="parameter [5646,5653]" dest="parameter [5646,5653]"/>
  <match src="(: ( [95742,95743]" dest="(: ( [94890,94891]"/>
  <match src="&gt;: &gt; [9495,9496]" dest="&gt;: &gt; [9495,9496]"/>
  <match src="identifier: l [27613,27614]" dest="identifier: l [27613,27614]"/>
  <match src="event_paramater [66494,66513]" dest="event_paramater [66747,66766]"/>
  <match src="number_literal: 2 [27832,27833]" dest="number_literal: 2 [27832,27833]"/>
  <match src="function_body [109516,109688]" dest="function_body [109440,109612]"/>
  <match src="expression_statement [107973,108082]" dest="expression_statement [107897,108006]"/>
  <match src="identifier: msg [82316,82319]" dest="identifier: msg [83154,83157]"/>
  <match src="number_literal: 0 [54889,54890]" dest="number_literal: 0 [54891,54892]"/>
  <match src="return_statement [103306,103315]" dest="return_statement [103230,103239]"/>
  <match src="identifier: r [30770,30771]" dest="identifier: r [30770,30771]"/>
  <match src="{: { [61039,61040]" dest="{: { [61041,61042]"/>
  <match src="identifier: IUniswapV2Pair [41787,41801]" dest="identifier: IUniswapV2Pair [41787,41801]"/>
  <match src="identifier: getInstantPagePoolInfo [92525,92547]" dest="identifier: getInstantPagePoolInfo [92173,92195]"/>
  <match src="address: address [109659,109666]" dest="address: address [109583,109590]"/>
  <match src="member_expression [86670,86680]" dest="member_expression [88311,88321]"/>
  <match src="(: ( [97325,97326]" dest="(: ( [96090,96091]"/>
  <match src="call_argument [8873,8878]" dest="call_argument [8873,8878]"/>
  <match src="): ) [38369,38370]" dest="): ) [38369,38370]"/>
  <match src="}: } [32115,32116]" dest="}: } [32115,32116]"/>
  <match src="identifier: _fromBlock [103367,103377]" dest="identifier: _fromBlock [103291,103301]"/>
  <match src="identifier: mod [11714,11717]" dest="identifier: mod [11714,11717]"/>
  <match src=",: , [17485,17486]" dest=",: , [17485,17486]"/>
  <match src="using: using [20542,20547]" dest="using: using [20542,20547]"/>
  <match src="identifier: r [29673,29674]" dest="identifier: r [29673,29674]"/>
  <match src="(: ( [73691,73692]" dest="(: ( [73456,73457]"/>
  <match src="-: - [35749,35750]" dest="-: - [35749,35750]"/>
  <match src="call_argument [46571,46574]" dest="call_argument [46813,46816]"/>
  <match src="member_expression [87132,87153]" dest="member_expression [88289,88310]"/>
  <match src="&gt;=: &gt;= [30963,30965]" dest="&gt;=: &gt;= [30963,30965]"/>
  <match src="event_paramater [39678,39690]" dest="event_paramater [39678,39690]"/>
  <match src="call_argument [52027,52034]" dest="call_argument [52029,52036]"/>
  <match src="call_argument [56381,56402]" dest="call_argument [56383,56404]"/>
  <match src="identifier: b [7242,7243]" dest="identifier: b [7242,7243]"/>
  <match src="primitive_type [47239,47246]" dest="primitive_type [47241,47248]"/>
  <match src="identifier: invitees [94583,94591]" dest="identifier: invitees [94229,94237]"/>
  <match src="returns: returns [31269,31276]" dest="returns: returns [31269,31276]"/>
  <match src="identifier: INVITEE_WEIGHT [101056,101070]" dest="identifier: INVITEE_WEIGHT [82423,82437]"/>
  <match src="&quot;: &quot; [87082,87083]" dest="&quot;: &quot; [88239,88240]"/>
  <match src="number_literal: 0 [89200,89201]" dest="number_literal: 0 [90125,90126]"/>
  <match src="identifier: sub [47140,47143]" dest="identifier: sub [46527,46530]"/>
  <match src="expression_statement [44208,44323]" dest="expression_statement [44210,44325]"/>
  <match src="indexed: indexed [66935,66942]" dest="indexed: indexed [67188,67195]"/>
  <match src="identifier: amount [89164,89170]" dest="identifier: amount [90089,90095]"/>
  <match src="identifier: add [7219,7222]" dest="identifier: add [7219,7222]"/>
  <match src="function: function [54765,54773]" dest="function: function [54767,54775]"/>
  <match src="primitive_type [90743,90750]" dest="primitive_type [91768,91775]"/>
  <match src="type_name [92984,92993]" dest="type_name [92632,92641]"/>
  <match src="type_name [22190,22196]" dest="type_name [22190,22196]"/>
  <match src="uint256: uint256 [52612,52619]" dest="uint256: uint256 [52614,52621]"/>
  <match src="primitive_type [71817,71823]" dest="primitive_type [71528,71534]"/>
  <match src="returns: returns [50006,50013]" dest="returns: returns [50008,50015]"/>
  <match src="uint256: uint256 [66748,66755]" dest="uint256: uint256 [67001,67008]"/>
  <match src="type_cast_expression [14098,14111]" dest="type_cast_expression [14098,14111]"/>
  <match src="bytes: bytes [17380,17385]" dest="bytes: bytes [17380,17385]"/>
  <match src="string [55138,55178]" dest="string [55140,55180]"/>
  <match src="(: ( [1892,1893]" dest="(: ( [1892,1893]"/>
  <match src="[: [ [64967,64968]" dest="[: [ [64977,64978]"/>
  <match src="identifier: blockTimestamp [106561,106575]" dest="identifier: blockTimestamp [106485,106499]"/>
  <match src="}: } [70863,70864]" dest="}: } [70574,70575]"/>
  <match src="parameter [44627,44652]" dest="parameter [44629,44654]"/>
  <match src="primitive_type [66524,66531]" dest="primitive_type [66777,66784]"/>
  <match src="identifier: getDepositWeight [80727,80743]" dest="identifier: getDepositWeight [81414,81430]"/>
  <match src="(: ( [25764,25765]" dest="(: ( [25764,25765]"/>
  <match src="bool: bool [58839,58843]" dest="bool: bool [58841,58845]"/>
  <match src="call_argument [28277,28278]" dest="call_argument [28277,28278]"/>
  <match src="(: ( [97824,97825]" dest="(: ( [96589,96590]"/>
  <match src="): ) [107844,107845]" dest="): ) [107768,107769]"/>
  <match src="parameter [62129,62149]" dest="parameter [62131,62151]"/>
  <match src="expression_statement [93129,93171]" dest="expression_statement [92777,92819]"/>
  <match src=".: . [99501,99502]" dest=".: . [97591,97592]"/>
  <match src="=: = [77827,77828]" dest="=: = [78965,78966]"/>
  <match src="return: return [29912,29918]" dest="return: return [29912,29918]"/>
  <match src="=: = [66342,66343]" dest="=: = [66362,66363]"/>
  <match src="): ) [27327,27328]" dest="): ) [27327,27328]"/>
  <match src="type_name [44467,44474]" dest="type_name [44469,44476]"/>
  <match src="call_expression [105256,105279]" dest="call_expression [105180,105203]"/>
  <match src="primitive_type [92905,92912]" dest="primitive_type [92553,92560]"/>
  <match src="&quot;: &quot; [21736,21737]" dest="&quot;: &quot; [21736,21737]"/>
  <match src="(: ( [81425,81426]" dest="(: ( [82114,82115]"/>
  <match src=",: , [71286,71287]" dest=",: , [70997,70998]"/>
  <match src="pragma_directive [62937,62960]" dest="pragma_directive [62939,62962]"/>
  <match src="visibility [73096,73104]" dest="visibility [72861,72869]"/>
  <match src="uint256: uint256 [100166,100173]" dest="uint256: uint256 [80167,80174]"/>
  <match src=",: , [6873,6874]" dest=",: , [6873,6874]"/>
  <match src="identifier: tokenBlockTimestampLast [105138,105161]" dest="identifier: tokenBlockTimestampLast [105062,105085]"/>
  <match src="solidity_pragma_token [19983,20006]" dest="solidity_pragma_token [19983,20006]"/>
  <match src="uint224: uint224 [38071,38078]" dest="uint224: uint224 [38071,38078]"/>
  <match src="identifier: _invitor [86730,86738]" dest="identifier: _invitor [87810,87818]"/>
  <match src="type_name [21910,21917]" dest="type_name [21910,21917]"/>
  <match src="call_argument [55278,55287]" dest="call_argument [55280,55289]"/>
  <match src="identifier: _lockTime [90909,90918]" dest="identifier: _lockTime [91934,91943]"/>
  <match src="(: ( [84614,84615]" dest="(: ( [85745,85746]"/>
  <match src="uint256: uint256 [56329,56336]" dest="uint256: uint256 [56331,56338]"/>
  <match src="block_statement [88809,88905]" dest="block_statement [89657,89753]"/>
  <match src="function_body [86558,86689]" dest="function_body [87846,88409]"/>
  <match src="expression_statement [104266,104351]" dest="expression_statement [104190,104275]"/>
  <match src="array_access [99058,99112]" dest="array_access [99226,99280]"/>
  <match src="expression_statement [76032,76059]" dest="expression_statement [75548,75575]"/>
  <match src="call_argument [82276,82280]" dest="call_argument [83114,83118]"/>
  <match src="identifier: uq144x112 [33275,33284]" dest="identifier: uq144x112 [33275,33284]"/>
  <match src="call_argument [96230,96233]" dest="call_argument [95540,95543]"/>
  <match src="struct_member [63767,63794]" dest="struct_member [63769,63796]"/>
  <match src=".: . [52789,52790]" dest=".: . [52791,52792]"/>
  <match src="variable_declaration [105834,105855]" dest="variable_declaration [105758,105779]"/>
  <match src="identifier: usersRelationshipInfo [98794,98815]" dest="identifier: usersRelationshipInfo [98987,99008]"/>
  <match src="private: private [32752,32759]" dest="private: private [32752,32759]"/>
  <match src="): ) [35262,35263]" dest="): ) [35262,35263]"/>
  <match src="expression_statement [106547,106597]" dest="expression_statement [106471,106521]"/>
  <match src="&amp;&amp;: &amp;&amp; [62311,62313]" dest="&amp;&amp;: &amp;&amp; [62313,62315]"/>
  <match src="call_expression [90210,90256]" dest="call_expression [91193,91232]"/>
  <match src="identifier: other [36034,36039]" dest="identifier: other [36034,36039]"/>
  <match src="tuple_expression [89654,89667]" dest="tuple_expression [90896,90909]"/>
  <match src="identifier: judgeContractSender [81351,81370]" dest="identifier: judgeContractSender [82040,82059]"/>
  <match src="number_literal: 0x4 [30887,30890]" dest="number_literal: 0x4 [30887,30890]"/>
  <match src="false: false [70843,70848]" dest="false: false [70554,70559]"/>
  <match src="call_argument [10159,10171]" dest="call_argument [10159,10171]"/>
  <match src=".: . [78595,78596]" dest=".: . [78175,78176]"/>
  <match src="state_mutability [38761,38765]" dest="state_mutability [38761,38765]"/>
  <match src=".: . [94623,94624]" dest=".: . [94269,94270]"/>
  <match src="(: ( [106663,106664]" dest="(: ( [106587,106588]"/>
  <match src="identifier: _endBlock [95866,95875]" dest="identifier: _endBlock [95192,95201]"/>
  <match src="identifier: currentPoolCountInRank [87742,87764]" dest="identifier: currentPoolCountInRank [88903,88925]"/>
  <match src="(: ( [17108,17109]" dest="(: ( [17108,17109]"/>
  <match src="}: } [96321,96322]" dest="}: } [95631,95632]"/>
  <match src="identifier: add [77632,77635]" dest="identifier: add [77072,77075]"/>
  <match src="primitive_type [14054,14061]" dest="primitive_type [14054,14061]"/>
  <match src="identifier: isUserContractSender [47315,47335]" dest="identifier: isUserContractSender [47317,47337]"/>
  <match src="): ) [10130,10131]" dest="): ) [10130,10131]"/>
  <match src="identifier: b [8214,8215]" dest="identifier: b [8214,8215]"/>
  <match src="function_definition [86488,86689]" dest="function_definition [87776,88409]"/>
  <match src="memory: memory [17777,17783]" dest="memory: memory [17777,17783]"/>
  <match src="=: = [87740,87741]" dest="=: = [88901,88902]"/>
  <match src="memory: memory [95350,95356]" dest="memory: memory [94498,94504]"/>
  <match src="}: } [84375,84376]" dest="}: } [84910,84911]"/>
  <match src="external: external [69318,69326]" dest="external: external [69029,69037]"/>
  <match src="variable_declaration_statement [77562,77650]" dest="variable_declaration_statement [77002,77090]"/>
  <match src="true: true [54263,54267]" dest="true: true [54265,54269]"/>
  <match src="struct_member [63723,63744]" dest="struct_member [63725,63746]"/>
  <match src="call_expression [84386,84445]" dest="call_expression [84921,84980]"/>
  <match src="struct: struct [32450,32456]" dest="struct: struct [32450,32456]"/>
  <match src="identifier: require [60061,60068]" dest="identifier: require [60063,60070]"/>
  <match src="unary_expression [36213,36215]" dest="unary_expression [36213,36215]"/>
  <match src="(: ( [61740,61741]" dest="(: ( [61742,61743]"/>
  <match src="number_literal: 0x2 [30966,30969]" dest="number_literal: 0x2 [30966,30969]"/>
  <match src="call_expression [15704,15756]" dest="call_expression [15704,15756]"/>
  <match src="identifier: msg [83555,83558]" dest="identifier: msg [84420,84423]"/>
  <match src="variable_declaration_statement [80506,80596]" dest="variable_declaration_statement [81191,81281]"/>
  <match src="virtual: virtual [76108,76115]" dest="virtual: virtual [75624,75631]"/>
  <match src="primitive_type [8147,8154]" dest="primitive_type [8147,8154]"/>
  <match src="identifier: _potential [89028,89038]" dest="identifier: _potential [89876,89886]"/>
  <match src="type_name [12671,12678]" dest="type_name [12671,12678]"/>
  <match src="type_cast_expression [36205,36216]" dest="type_cast_expression [36205,36216]"/>
  <match src="type_name [57855,57860]" dest="type_name [57857,57862]"/>
  <match src="type_name [40192,40199]" dest="type_name [40192,40199]"/>
  <match src="bytes: bytes [24450,24455]" dest="bytes: bytes [24450,24455]"/>
  <match src="(: ( [56311,56312]" dest="(: ( [56313,56314]"/>
  <match src="identifier: require [16773,16780]" dest="identifier: require [16773,16780]"/>
  <match src="string_literal [16813,16853]" dest="string_literal [16813,16853]"/>
  <match src="(: ( [36973,36974]" dest="(: ( [36973,36974]"/>
  <match src="address: address [21637,21644]" dest="address: address [21637,21644]"/>
  <match src="{: { [26774,26775]" dest="{: { [26774,26775]"/>
  <match src="}: } [67451,67452]" dest="}: } [67698,67699]"/>
  <match src="public: public [43478,43484]" dest="public: public [43478,43484]"/>
  <match src="state_variable_declaration [59026,59096]" dest="state_variable_declaration [59028,59098]"/>
  <match src="if_statement [31820,31916]" dest="if_statement [31820,31916]"/>
  <match src=":: : [17058,17059]" dest=":: : [17058,17059]"/>
  <match src="identifier: fee [46571,46574]" dest="identifier: fee [46813,46816]"/>
  <match src="if_statement [90836,90865]" dest="if_statement [91861,91890]"/>
  <match src="identifier: newAllowance [22264,22276]" dest="identifier: newAllowance [22264,22276]"/>
  <match src="expression_statement [28207,28252]" dest="expression_statement [28207,28252]"/>
  <match src="identifier: blockTimestampLast [42132,42150]" dest="identifier: blockTimestampLast [42132,42150]"/>
  <match src="type_name [27482,27489]" dest="type_name [27482,27489]"/>
  <match src="number_literal: 2171 [68518,68522]" dest="number_literal: 2171 [68446,68450]"/>
  <match src="string [36874,36914]" dest="string [36874,36914]"/>
  <match src="{: { [102955,102956]" dest="{: { [102879,102880]"/>
  <match src="view: view [17827,17831]" dest="view: view [17827,17831]"/>
  <match src=",: , [21666,21667]" dest=",: , [21666,21667]"/>
  <match src="{: { [46708,46709]" dest="{: { [46950,46951]"/>
  <match src="identifier: usersRelationshipInfo [100402,100423]" dest="identifier: usersRelationshipInfo [99744,99765]"/>
  <match src="identifier: mulDiv [37276,37282]" dest="identifier: mulDiv [37276,37282]"/>
  <match src="expression_statement [83930,83987]" dest="expression_statement [84454,84516]"/>
  <match src="primitive_type [88965,88972]" dest="primitive_type [89813,89820]"/>
  <match src="parameter [40900,40907]" dest="parameter [40900,40907]"/>
  <match src="parameter [40646,40656]" dest="parameter [40646,40656]"/>
  <match src="): ) [109668,109669]" dest="): ) [109592,109593]"/>
  <match src="array_access [82503,82517]" dest="array_access [83341,83355]"/>
  <match src="): ) [33890,33891]" dest="): ) [33890,33891]"/>
  <match src="identifier: fromOld [61688,61695]" dest="identifier: fromOld [61690,61697]"/>
  <match src="identifier: _pid [85583,85587]" dest="identifier: _pid [86883,86887]"/>
  <match src="state_mutability [27997,28001]" dest="state_mutability [27997,28001]"/>
  <match src="member_expression [61880,61912]" dest="member_expression [61882,61914]"/>
  <match src="primitive_type [34995,35002]" dest="primitive_type [34995,35002]"/>
  <match src="identifier: _pairInfo [106512,106521]" dest="identifier: _pairInfo [106436,106445]"/>
  <match src="primitive_type [66592,66599]" dest="primitive_type [66845,66852]"/>
  <match src="): ) [86471,86472]" dest="): ) [87759,87760]"/>
  <match src="type_name [92637,92646]" dest="type_name [92285,92294]"/>
  <match src="member_expression [97202,97219]" dest="member_expression [95967,95984]"/>
  <match src=",: , [30280,30281]" dest=",: , [30280,30281]"/>
  <match src="): ) [37311,37312]" dest="): ) [37311,37312]"/>
  <match src="(: ( [103105,103106]" dest="(: ( [103029,103030]"/>
  <match src="(: ( [75594,75595]" dest="(: ( [75110,75111]"/>
  <match src="==: == [85312,85314]" dest="==: == [86612,86614]"/>
  <match src="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but also transferring `value` wei to `target`.      *      * Requirements:      *      * - the calling contract must have an ETH balance of at least `value`.      * - the called Solidity function must be `payable`.      *      * _Available since v3.1._      */ [15772,16133]" dest="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but also transferring `value` wei to `target`.      *      * Requirements:      *      * - the calling contract must have an ETH balance of at least `value`.      * - the called Solidity function must be `payable`.      *      * _Available since v3.1._      */ [15772,16133]"/>
  <match src="(: ( [71119,71120]" dest="(: ( [70830,70831]"/>
  <match src="binary_expression [47442,47461]" dest="binary_expression [47444,47463]"/>
  <match src=",: , [89557,89558]" dest=",: , [90799,90800]"/>
  <match src="string [67273,67294]" dest="string [67520,67541]"/>
  <match src="number_literal: 16 [30671,30673]" dest="number_literal: 16 [30671,30673]"/>
  <match src="call_expression [101204,101283]" dest="call_expression [101173,101222]"/>
  <match src="binary_expression [27832,27841]" dest="binary_expression [27832,27841]"/>
  <match src="member_expression [82050,82068]" dest="member_expression [82888,82906]"/>
  <match src="binary_expression [31385,31404]" dest="binary_expression [31385,31404]"/>
  <match src="identifier: to [39259,39261]" dest="identifier: to [39259,39261]"/>
  <match src="primitive_type [55601,55608]" dest="primitive_type [55603,55610]"/>
  <match src="identifier: kickEvilPoolByPid [71785,71802]" dest="identifier: kickEvilPoolByPid [71496,71513]"/>
  <match src="private: private [96956,96963]" dest="private: private [95721,95728]"/>
  <match src="expression_statement [21759,21850]" dest="expression_statement [21759,21850]"/>
  <match src="internal: internal [6525,6533]" dest="internal: internal [6525,6533]"/>
  <match src="(: ( [83974,83975]" dest="(: ( [84503,84504]"/>
  <match src="identifier: _allowances [51722,51733]" dest="identifier: _allowances [51724,51735]"/>
  <match src="number_literal: 0x100000000000000000000000000000000 [29017,29052]" dest="number_literal: 0x100000000000000000000000000000000 [29017,29052]"/>
  <match src="[: [ [86294,86295]" dest="[: [ [87582,87583]"/>
  <match src="): ) [38207,38208]" dest="): ) [38207,38208]"/>
  <match src="&lt;: &lt; [76677,76678]" dest="&lt;: &lt; [76193,76194]"/>
  <match src="&gt;=:  &gt;= [32239,32242]" dest="&gt;=:  &gt;= [32239,32242]"/>
  <match src="type_name [65249,65256]" dest="type_name [65259,65266]"/>
  <match src="identifier: swap [40719,40723]" dest="identifier: swap [40719,40723]"/>
  <match src="{: { [60751,60752]" dest="{: { [60753,60754]"/>
  <match src="member_expression [76458,76485]" dest="member_expression [75974,76001]"/>
  <match src="number_literal: 1 [37015,37016]" dest="number_literal: 1 [37015,37016]"/>
  <match src="expression_statement [47120,47149]" dest="expression_statement [46507,46536]"/>
  <match src="(: ( [67371,67372]" dest="(: ( [67618,67619]"/>
  <match src="uint256: uint256 [58897,58904]" dest="uint256: uint256 [58899,58906]"/>
  <match src="returns: returns [30238,30245]" dest="returns: returns [30238,30245]"/>
  <match src="type_name [62106,62113]" dest="type_name [62108,62115]"/>
  <match src="{: { [77886,77887]" dest="{: { [77121,77122]"/>
  <match src="binary_expression [31501,31515]" dest="binary_expression [31501,31515]"/>
  <match src="identifier: _pairSwap [104913,104922]" dest="identifier: _pairSwap [104837,104846]"/>
  <match src="): ) [93220,93221]" dest="): ) [92868,92869]"/>
  <match src="(: ( [3907,3908]" dest="(: ( [3907,3908]"/>
  <match src="call_struct_argument [105404,105437]" dest="call_struct_argument [105328,105361]"/>
  <match src="type_name [20801,20808]" dest="type_name [20801,20808]"/>
  <match src="assignment_expression [55190,55245]" dest="assignment_expression [55192,55247]"/>
  <match src="state_mutability [33044,33048]" dest="state_mutability [33044,33048]"/>
  <match src="identifier: other [34606,34611]" dest="identifier: other [34606,34611]"/>
  <match src="identifier: usersRelationshipInfo [67772,67793]" dest="identifier: usersRelationshipInfo [67986,68007]"/>
  <match src=",: , [57201,57202]" dest=",: , [57203,57204]"/>
  <match src="(: ( [104187,104188]" dest="(: ( [104111,104112]"/>
  <match src="{: { [32381,32382]" dest="{: { [32381,32382]"/>
  <match src="function_body [73123,73705]" dest="function_body [72888,73470]"/>
  <match src="expression_statement [55028,55076]" dest="expression_statement [55030,55078]"/>
  <match src="type_name [31244,31251]" dest="type_name [31244,31251]"/>
  <match src="(: ( [34731,34732]" dest="(: ( [34731,34732]"/>
  <match src="public: public [65188,65194]" dest="public: public [65198,65204]"/>
  <match src="type_name [4343,4350]" dest="type_name [4343,4350]"/>
  <match src="return_statement [36382,36415]" dest="return_statement [36382,36415]"/>
  <match src=",: , [41658,41659]" dest=",: , [41658,41659]"/>
  <match src="]: ] [86304,86305]" dest="]: ] [87592,87593]"/>
  <match src="identifier: minters [59523,59530]" dest="identifier: minters [59525,59532]"/>
  <match src="expression_statement [97799,97851]" dest="expression_statement [96564,96616]"/>
  <match src="identifier: _pid [72082,72086]" dest="identifier: _pid [71635,71639]"/>
  <match src="identifier: Q112 [34341,34345]" dest="identifier: Q112 [34341,34345]"/>
  <match src="(: ( [103327,103328]" dest="(: ( [103251,103252]"/>
  <match src="identifier: div [98329,98332]" dest="identifier: div [97094,97097]"/>
  <match src="visibility [39335,39343]" dest="visibility [39335,39343]"/>
  <match src=",: , [90600,90601]" dest=",: , [91625,91626]"/>
  <match src="type_name [39131,39135]" dest="type_name [39131,39135]"/>
  <match src="string_literal [26817,26857]" dest="string_literal [26817,26857]"/>
  <match src="identifier: contractFeeRateDenominator [46339,46365]" dest="identifier: contractFeeRateDenominator [46581,46607]"/>
  <match src="binary_expression [8873,8878]" dest="binary_expression [8873,8878]"/>
  <match src="call_argument [36486,36494]" dest="call_argument [36486,36494]"/>
  <match src=".: . [20689,20690]" dest=".: . [20689,20690]"/>
  <match src="return_statement [85077,85084]" dest="return_statement [86377,86384]"/>
  <match src="identifier: initialize [67002,67012]" dest="identifier: initialize [67255,67265]"/>
  <match src="{: { [11800,11801]" dest="{: { [11800,11801]"/>
  <match src="identifier: _to [96078,96081]" dest="identifier: _to [95388,95391]"/>
  <match src=".: . [101229,101230]" dest=".: . [101198,101199]"/>
  <match src="type_name [8800,8807]" dest="type_name [8800,8807]"/>
  <match src="type_name [92548,92555]" dest="type_name [92196,92203]"/>
  <match src="uint256: uint256 [69767,69774]" dest="uint256: uint256 [69478,69485]"/>
  <match src="type_name [54819,54826]" dest="type_name [54821,54828]"/>
  <match src="view: view [41364,41368]" dest="view: view [41364,41368]"/>
  <match src="array_access [84781,84803]" dest="array_access [85912,85934]"/>
  <match src="call_expression [73322,73345]" dest="call_expression [73087,73110]"/>
  <match src="member_expression [108549,108575]" dest="member_expression [108473,108499]"/>
  <match src="primitive_type [66948,66955]" dest="primitive_type [67201,67208]"/>
  <match src="identifier: timeElapsed [108067,108078]" dest="identifier: timeElapsed [107991,108002]"/>
  <match src="expression_statement [27593,27603]" dest="expression_statement [27593,27603]"/>
  <match src="identifier: a [8808,8809]" dest="identifier: a [8808,8809]"/>
  <match src="call_expression [52756,52845]" dest="call_expression [52758,52847]"/>
  <match src="member_expression [107106,107144]" dest="member_expression [107030,107068]"/>
  <match src="primitive_type [67794,67801]" dest="primitive_type [68008,68015]"/>
  <match src="return: return [13050,13056]" dest="return: return [13050,13056]"/>
  <match src="address: address [25284,25291]" dest="address: address [25284,25291]"/>
  <match src="}: } [83806,83807]" dest="}: } [85534,85535]"/>
  <match src="call_struct_argument [105615,105650]" dest="call_struct_argument [105539,105574]"/>
  <match src="number_literal: 0x10 [29497,29501]" dest="number_literal: 0x10 [29497,29501]"/>
  <match src="member_expression [105088,105118]" dest="member_expression [105012,105042]"/>
  <match src="(: ( [27623,27624]" dest="(: ( [27623,27624]"/>
  <match src="identifier: require [9485,9492]" dest="identifier: require [9485,9492]"/>
  <match src="primitive_type [82948,82955]" dest="primitive_type [83727,83734]"/>
  <match src="assignment_expression [29784,29804]" dest="assignment_expression [29784,29804]"/>
  <match src="[: [ [61195,61196]" dest="[: [ [61197,61198]"/>
  <match src="comment: // black list [66094,66107]" dest="comment: // black list [66110,66123]"/>
  <match src="call_expression [108011,108062]" dest="call_expression [107935,107986]"/>
  <match src="call_expression [52742,52754]" dest="call_expression [52744,52756]"/>
  <match src="/: / [29640,29641]" dest="/: / [29640,29641]"/>
  <match src="identifier: spender [4382,4389]" dest="identifier: spender [4382,4389]"/>
  <match src="parameter [38929,38942]" dest="parameter [38929,38942]"/>
  <match src="call_expression [79371,79423]" dest="call_expression [79526,79578]"/>
  <match src="identifier: pool [81982,81986]" dest="identifier: pool [82814,82818]"/>
  <match src="member_expression [87095,87110]" dest="member_expression [88252,88267]"/>
  <match src="identifier: data [40785,40789]" dest="identifier: data [40785,40789]"/>
  <match src="string: string [15626,15632]" dest="string: string [15626,15632]"/>
  <match src="primitive_type [94438,94442]" dest="primitive_type [94084,94088]"/>
  <match src=",: , [103037,103038]" dest=",: , [102961,102962]"/>
  <match src=",: , [69399,69400]" dest=",: , [69110,69111]"/>
  <match src="type_name [65553,65560]" dest="type_name [65563,65570]"/>
  <match src="binary_expression [57255,57274]" dest="binary_expression [57257,57276]"/>
  <match src="primitive_type [64056,64063]" dest="primitive_type [64058,64065]"/>
  <match src="visibility [3890,3898]" dest="visibility [3890,3898]"/>
  <match src="type_name [19009,19013]" dest="type_name [19009,19013]"/>
  <match src="&quot;: &quot; [55725,55726]" dest="&quot;: &quot; [55727,55728]"/>
  <match src="return: return [52054,52060]" dest="return: return [52056,52062]"/>
  <match src="contract_body [58793,62887]" dest="contract_body [58795,62889]"/>
  <match src=".: . [22440,22441]" dest=".: . [22440,22441]"/>
  <match src="type_name [89227,89234]" dest="type_name [90152,90159]"/>
  <match src="}: } [89216,89217]" dest="}: } [90141,90142]"/>
  <match src="=: = [86254,86255]" dest="=: = [87542,87543]"/>
  <match src="variable_declaration_statement [93961,94005]" dest="variable_declaration_statement [93607,93651]"/>
  <match src="identifier: pow2 [27625,27629]" dest="identifier: pow2 [27625,27629]"/>
  <match src="augmented_assignment_expression [29374,29381]" dest="augmented_assignment_expression [29374,29381]"/>
  <match src="type_name [41594,41601]" dest="type_name [41594,41601]"/>
  <match src="identifier: targetPid [85789,85798]" dest="identifier: targetPid [87089,87098]"/>
  <match src="type_name [63767,63774]" dest="type_name [63769,63776]"/>
  <match src="override: override [109507,109515]" dest="override: override [109431,109439]"/>
  <match src="expression_statement [87349,87386]" dest="expression_statement [88510,88547]"/>
  <match src="call_argument [95894,95902]" dest="call_argument [95161,95169]"/>
  <match src="{: { [51111,51112]" dest="{: { [51113,51114]"/>
  <match src="identifier: x [31897,31898]" dest="identifier: x [31897,31898]"/>
  <match src="returns: returns [28002,28009]" dest="returns: returns [28002,28009]"/>
  <match src="identifier: isContract [17874,17884]" dest="identifier: isContract [17874,17884]"/>
  <match src="identifier: InvitationInfo [86946,86960]" dest="identifier: InvitationInfo [88103,88117]"/>
  <match src="identifier: _amount [97249,97256]" dest="identifier: _amount [96014,96021]"/>
  <match src="(: ( [72355,72356]" dest="(: ( [72110,72111]"/>
  <match src="return: return [18082,18088]" dest="return: return [18082,18088]"/>
  <match src="function_definition [59628,59711]" dest="function_definition [59630,59713]"/>
  <match src="identifier: poolTokenAmountLimit [44045,44065]" dest="identifier: poolTokenAmountLimit [44047,44067]"/>
  <match src="{: { [21311,21312]" dest="{: { [21311,21312]"/>
  <match src=",: , [53420,53421]" dest=",: , [53422,53423]"/>
  <match src="(: ( [55129,55130]" dest="(: ( [55131,55132]"/>
  <match src=",: , [22014,22015]" dest=",: , [22014,22015]"/>
  <match src="identifier: a [8210,8211]" dest="identifier: a [8210,8211]"/>
  <match src="identifier: xx [29491,29493]" dest="identifier: xx [29491,29493]"/>
  <match src="member_expression [104564,104583]" dest="member_expression [104488,104507]"/>
  <match src="type_cast_expression [34922,34953]" dest="type_cast_expression [34922,34953]"/>
  <match src="comment: /**      * @notice Construct an empty delegate      */ [108786,108842]" dest="comment: /**      * @notice Construct an empty delegate      */ [108710,108766]"/>
  <match src="tuple_expression [6215,6224]" dest="tuple_expression [6215,6224]"/>
  <match src="!: ! [99593,99594]" dest="!: ! [97683,97684]"/>
  <match src="uint256: uint256 [91081,91088]" dest="uint256: uint256 [92106,92113]"/>
  <match src="type_name [92769,92778]" dest="type_name [92417,92426]"/>
  <match src="member_expression [20912,20939]" dest="member_expression [20912,20939]"/>
  <match src=",: , [84562,84563]" dest=",: , [85693,85694]"/>
  <match src="bool: bool [64264,64268]" dest="bool: bool [64266,64270]"/>
  <match src="parameter [40610,40624]" dest="parameter [40610,40624]"/>
  <match src="variable_declaration_statement [98732,98848]" dest="variable_declaration_statement [98938,99041]"/>
  <match src="identifier: _pairInfo [107077,107086]" dest="identifier: _pairInfo [107001,107010]"/>
  <match src="user_defined_type [106937,106950]" dest="user_defined_type [106861,106874]"/>
  <match src="private: private [49061,49068]" dest="private: private [49063,49070]"/>
  <match src="block_statement [104759,104811]" dest="block_statement [104683,104735]"/>
  <match src="binary_expression [10190,10195]" dest="binary_expression [10190,10195]"/>
  <match src="identifier: account [56525,56532]" dest="identifier: account [56527,56534]"/>
  <match src="=: = [78899,78900]" dest="=: = [78407,78408]"/>
  <match src=",: , [82332,82333]" dest=",: , [83170,83171]"/>
  <match src="identifier: admin [43074,43079]" dest="identifier: admin [43074,43079]"/>
  <match src="parameter [59480,59495]" dest="parameter [59482,59497]"/>
  <match src="if: if [61388,61390]" dest="if: if [61390,61392]"/>
  <match src="expression_statement [29784,29805]" dest="expression_statement [29784,29805]"/>
  <match src="event_paramater [462,487]" dest="event_paramater [462,487]"/>
  <match src=",: , [10059,10060]" dest=",: , [10059,10060]"/>
  <match src=".: . [74750,74751]" dest=".: . [74476,74477]"/>
  <match src="primitive_type [50918,50925]" dest="primitive_type [50920,50927]"/>
  <match src="&gt;&gt;=: &gt;&gt;= [29173,29176]" dest="&gt;&gt;=: &gt;&gt;= [29173,29176]"/>
  <match src="(: ( [6266,6267]" dest="(: ( [6266,6267]"/>
  <match src="identifier: _lpTokenAmount [92786,92800]" dest="identifier: _lpTokenAmount [92434,92448]"/>
  <match src="identifier: initialPriceCumulative [106402,106424]" dest="identifier: initialPriceCumulative [106326,106348]"/>
  <match src="member_expression [81231,81260]" dest="member_expression [81920,81949]"/>
  <match src="parameter [16668,16685]" dest="parameter [16668,16685]"/>
  <match src="(: ( [39083,39084]" dest="(: ( [39083,39084]"/>
  <match src="call_expression [67537,67554]" dest="call_expression [67784,67801]"/>
  <match src="): ) [74948,74949]" dest="): ) [74820,74821]"/>
  <match src="type_name [5955,5962]" dest="type_name [5955,5962]"/>
  <match src="}: } [25836,25837]" dest="}: } [25836,25837]"/>
  <match src="identifier: userWeight [82956,82966]" dest="identifier: userWeight [83735,83745]"/>
  <match src="=: = [88853,88854]" dest="=: = [89701,89702]"/>
  <match src="number_literal: 1 [29710,29711]" dest="number_literal: 1 [29710,29711]"/>
  <match src="}: } [76644,76645]" dest="}: } [76160,76161]"/>
  <match src="uint256: uint256 [102539,102546]" dest="uint256: uint256 [102463,102470]"/>
  <match src="state_mutability [8133,8137]" dest="state_mutability [8133,8137]"/>
  <match src="=: = [67991,67992]" dest="=: = [68243,68244]"/>
  <match src="address: address [54033,54040]" dest="address: address [54035,54042]"/>
  <match src="bytes: bytes [15204,15209]" dest="bytes: bytes [15204,15209]"/>
  <match src="virtual: virtual [57228,57235]" dest="virtual: virtual [57230,57237]"/>
  <match src="type_name [82889,82896]" dest="type_name [99992,99999]"/>
  <match src="(: ( [98332,98333]" dest="(: ( [97097,97098]"/>
  <match src="type_name [75089,75096]" dest="type_name [73521,73528]"/>
  <match src="): ) [61321,61322]" dest="): ) [61323,61324]"/>
  <match src="identifier: _pid [82873,82877]" dest="identifier: _pid [83711,83715]"/>
  <match src="-: - [36332,36333]" dest="-: - [36332,36333]"/>
  <match src="parameter [104510,104517]" dest="parameter [104434,104441]"/>
  <match src="call_argument [83761,83777]" dest="call_argument [85493,85509]"/>
  <match src="identifier: Q112 [36162,36166]" dest="identifier: Q112 [36162,36166]"/>
  <match src="return_type_definition [52652,52666]" dest="return_type_definition [52654,52668]"/>
  <match src="}: } [51154,51155]" dest="}: } [51156,51157]"/>
  <match src="return: return [50041,50047]" dest="return: return [50043,50049]"/>
  <match src="(: ( [35331,35332]" dest="(: ( [35331,35332]"/>
  <match src="}: } [29305,29306]" dest="}: } [29305,29306]"/>
  <match src="{: { [37019,37020]" dest="{: { [37019,37020]"/>
  <match src="): ) [7243,7244]" dest="): ) [7243,7244]"/>
  <match src="pragma: pragma [42655,42661]" dest="pragma: pragma [42655,42661]"/>
  <match src="]: ] [88712,88713]" dest="]: ] [89560,89561]"/>
  <match src="}: } [55303,55304]" dest="}: } [55305,55306]"/>
  <match src="identifier: Q224 [32769,32773]" dest="identifier: Q224 [32769,32773]"/>
  <match src="primitive_type [54099,54103]" dest="primitive_type [54101,54105]"/>
  <match src=",: , [16811,16812]" dest=",: , [16811,16812]"/>
  <match src="}: } [37228,37229]" dest="}: } [37228,37229]"/>
  <match src="(: ( [79223,79224]" dest="(: ( [79378,79379]"/>
  <match src="private: private [90771,90778]" dest="private: private [91796,91803]"/>
  <match src="pragma_directive [28362,28386]" dest="pragma_directive [28362,28386]"/>
  <match src="(: ( [46860,46861]" dest="(: ( [47102,47103]"/>
  <match src="returns: returns [93923,93930]" dest="returns: returns [93569,93576]"/>
  <match src="identifier: poolTotalWeight [101736,101751]" dest="identifier: poolTotalWeight [102158,102173]"/>
  <match src="identifier: _tokenToEthSwap [69836,69851]" dest="identifier: _tokenToEthSwap [69547,69562]"/>
  <match src=".: . [84349,84350]" dest=".: . [84884,84885]"/>
  <match src="call_expression [22073,22142]" dest="call_expression [22073,22142]"/>
  <match src="(: ( [5366,5367]" dest="(: ( [5366,5367]"/>
  <match src="}: } [40929,40930]" dest="}: } [40929,40930]"/>
  <match src="if_statement [97636,97862]" dest="if_statement [96401,96627]"/>
  <match src="expression_statement [35429,35496]" dest="expression_statement [35429,35496]"/>
  <match src="{: { [108481,108482]" dest="{: { [108405,108406]"/>
  <match src="identifier: owner [38547,38552]" dest="identifier: owner [38547,38552]"/>
  <match src="memory: memory [49810,49816]" dest="memory: memory [49812,49818]"/>
  <match src="identifier: checkAdmin [44682,44692]" dest="identifier: checkAdmin [44684,44694]"/>
  <match src="binary_expression [35587,35647]" dest="binary_expression [35587,35647]"/>
  <match src="[: [ [61895,61896]" dest="[: [ [61897,61898]"/>
  <match src="): ) [38814,38815]" dest="): ) [38814,38815]"/>
  <match src="identifier: require [36506,36513]" dest="identifier: require [36506,36513]"/>
  <match src="identifier: token [21779,21784]" dest="identifier: token [21779,21784]"/>
  <match src="primitive_type [100269,100276]" dest="primitive_type [66543,66550]"/>
  <match src="comment: // 2**112 [32729,32738]" dest="comment: // 2**112 [32729,32738]"/>
  <match src="): ) [80593,80594]" dest="): ) [81278,81279]"/>
  <match src=".: . [106275,106276]" dest=".: . [106199,106200]"/>
  <match src="address: address [58828,58835]" dest="address: address [58830,58837]"/>
  <match src="identifier: _invitor [94602,94610]" dest="identifier: _invitor [94248,94256]"/>
  <match src="return_type_definition [38766,38789]" dest="return_type_definition [38766,38789]"/>
  <match src="&quot;: &quot; [21681,21682]" dest="&quot;: &quot; [21681,21682]"/>
  <match src="visibility [16730,16738]" dest="visibility [16730,16738]"/>
  <match src="&gt;: &gt; [5672,5673]" dest="&gt;: &gt; [5672,5673]"/>
  <match src="visibility [47253,47261]" dest="visibility [47255,47263]"/>
  <match src="(: ( [33057,33058]" dest="(: ( [33057,33058]"/>
  <match src="uint8: uint8 [38145,38150]" dest="uint8: uint8 [38145,38150]"/>
  <match src="call_argument [56700,56706]" dest="call_argument [56702,56708]"/>
  <match src="expression_statement [93232,93272]" dest="expression_statement [92880,92920]"/>
  <match src="variable_declaration [79139,79157]" dest="variable_declaration [79302,79320]"/>
  <match src="pure: pure [27507,27511]" dest="pure: pure [27507,27511]"/>
  <match src="): ) [20840,20841]" dest="): ) [20840,20841]"/>
  <match src="=: = [84041,84042]" dest="=: = [84570,84571]"/>
  <match src="[: [ [67793,67794]" dest="[: [ [68007,68008]"/>
  <match src="comment: // File: interfaces/IInvitation.sol [42616,42651]" dest="comment: // File: interfaces/IInvitation.sol [42616,42651]"/>
  <match src="identifier: addMiner [59728,59736]" dest="identifier: addMiner [59730,59738]"/>
  <match src="block_statement [86139,86172]" dest="block_statement [87427,87460]"/>
  <match src=",: , [90581,90582]" dest=",: , [91606,91607]"/>
  <match src="=: = [93654,93655]" dest="=: = [93302,93303]"/>
  <match src="[: [ [89137,89138]" dest="[: [ [89985,89986]"/>
  <match src="state_variable_declaration [64641,64693]" dest="state_variable_declaration [64645,64699]"/>
  <match src="assignment_expression [41768,41830]" dest="assignment_expression [41768,41830]"/>
  <match src="): ) [56401,56402]" dest="): ) [56403,56404]"/>
  <match src="=: = [66427,66428]" dest="=: = [66447,66448]"/>
  <match src="inheritance_specifier [63027,63039]" dest="inheritance_specifier [63029,63041]"/>
  <match src="=: = [61447,61448]" dest="=: = [61449,61450]"/>
  <match src="visibility [49986,49992]" dest="visibility [49988,49994]"/>
  <match src="): ) [6223,6224]" dest="): ) [6223,6224]"/>
  <match src="): ) [54244,54245]" dest="): ) [54246,54247]"/>
  <match src=".: . [23345,23346]" dest=".: . [23345,23346]"/>
  <match src="identifier: a [5371,5372]" dest="identifier: a [5371,5372]"/>
  <match src="type_name [3442,3449]" dest="type_name [3442,3449]"/>
  <match src="type_name [98862,98869]" dest="type_name [99051,99058]"/>
  <match src="identifier: _amount [82334,82341]" dest="identifier: _amount [83172,83179]"/>
  <match src="call_expression [84904,84951]" dest="call_expression [86035,86082]"/>
  <match src="=: = [79158,79159]" dest="=: = [79321,79322]"/>
  <match src="*: * [8212,8213]" dest="*: * [8212,8213]"/>
  <match src="call_argument [28283,28284]" dest="call_argument [28283,28284]"/>
  <match src="identifier: _user [89284,89289]" dest="identifier: _user [90209,90214]"/>
  <match src="&quot;: &quot; [23578,23579]" dest="&quot;: &quot; [23578,23579]"/>
  <match src=",: , [71612,71613]" dest=",: , [71323,71324]"/>
  <match src="=: = [100888,100889]" dest="=: = [100950,100951]"/>
  <match src="identifier: wantTokenReserve [97152,97168]" dest="identifier: wantTokenReserve [95917,95933]"/>
  <match src="type_cast_expression [69707,69717]" dest="type_cast_expression [69418,69428]"/>
  <match src="type_name [44613,44620]" dest="type_name [44615,44622]"/>
  <match src="string: string [38775,38781]" dest="string: string [38775,38781]"/>
  <match src="identifier: getUserInfoByPids [95202,95219]" dest="identifier: getUserInfoByPids [94350,94367]"/>
  <match src="identifier: price0Cumulative [41768,41784]" dest="identifier: price0Cumulative [41768,41784]"/>
  <match src="call_expression [62845,62876]" dest="call_expression [62847,62878]"/>
  <match src="external: external [82451,82459]" dest="external: external [83289,83297]"/>
  <match src="expression_statement [45569,45627]" dest="expression_statement [45571,45629]"/>
  <match src="type_name [40248,40255]" dest="type_name [40248,40255]"/>
  <match src="return_statement [34059,34079]" dest="return_statement [34059,34079]"/>
  <match src="]: ] [95228,95229]" dest="]: ] [94376,94377]"/>
  <match src="(: ( [83823,83824]" dest="(: ( [85547,85548]"/>
  <match src="expression_statement [30580,30589]" dest="expression_statement [30580,30589]"/>
  <match src="identifier: lastPidInBlackList [73438,73456]" dest="identifier: lastPidInBlackList [73203,73221]"/>
  <match src="expression_statement [67821,67844]" dest="expression_statement [68073,68096]"/>
  <match src="struct_declaration [64176,64364]" dest="struct_declaration [64178,64366]"/>
  <match src="[: [ [44725,44726]" dest="[: [ [44727,44728]"/>
  <match src="primitive_type [77660,77667]" dest="primitive_type [77467,77474]"/>
  <match src="identifier: user [82640,82644]" dest="identifier: user [83478,83482]"/>
  <match src="identifier: _amount [96091,96098]" dest="identifier: _amount [95401,95408]"/>
  <match src="identifier: _lpTokenAmount [93627,93641]" dest="identifier: _lpTokenAmount [93275,93289]"/>
  <match src="&gt;: &gt; [83720,83721]" dest="&gt;: &gt; [85456,85457]"/>
  <match src="visibility [26430,26436]" dest="visibility [26430,26436]"/>
  <match src="primitive_type [105858,105864]" dest="primitive_type [105782,105788]"/>
  <match src="]: ] [52788,52789]" dest="]: ] [52790,52791]"/>
  <match src="identifier: r [29541,29542]" dest="identifier: r [29541,29542]"/>
  <match src="new: new [93247,93250]" dest="new: new [92895,92898]"/>
  <match src="expression_statement [108549,108594]" dest="expression_statement [108473,108518]"/>
  <match src="}: } [57928,57929]" dest="}: } [57930,57931]"/>
  <match src="(: ( [26894,26895]" dest="(: ( [26894,26895]"/>
  <match src=",: , [85059,85060]" dest=",: , [86359,86360]"/>
  <match src="member_expression [83997,84008]" dest="member_expression [84526,84537]"/>
  <match src="identifier: _potential [90539,90549]" dest="identifier: _potential [91564,91574]"/>
  <match src="identifier: undistributeDividend [74802,74822]" dest="identifier: addDividend [74502,74513]"/>
  <match src="augmented_assignment_expression [30850,30856]" dest="augmented_assignment_expression [30850,30856]"/>
  <match src="}: } [76021,76022]" dest="}: } [75537,75538]"/>
  <match src="type_name [22924,22929]" dest="type_name [22924,22929]"/>
  <match src="number_literal: 0 [8877,8878]" dest="number_literal: 0 [8877,8878]"/>
  <match src="returns: returns [39044,39051]" dest="returns: returns [39044,39051]"/>
  <match src="call_argument [93211,93220]" dest="call_argument [92859,92868]"/>
  <match src="(: ( [27257,27258]" dest="(: ( [27257,27258]"/>
  <match src="identifier: uq112x112 [35997,36006]" dest="identifier: uq112x112 [35997,36006]"/>
  <match src="{: { [104251,104252]" dest="{: { [104175,104176]"/>
  <match src="identifier: priceCumulativeLast [107889,107908]" dest="identifier: priceCumulativeLast [107813,107832]"/>
  <match src="type_name [43257,43264]" dest="type_name [43257,43264]"/>
  <match src="identifier: user [102511,102515]" dest="identifier: user [102435,102439]"/>
  <match src="identifier: FixedPoint [63987,63997]" dest="identifier: FixedPoint [63989,63999]"/>
  <match src="): ) [98057,98058]" dest="): ) [96822,96823]"/>
  <match src="block_statement [30650,30707]" dest="block_statement [30650,30707]"/>
  <match src="member_expression [108166,108181]" dest="member_expression [108090,108105]"/>
  <match src="identifier: beforeCalculateIndex [104230,104250]" dest="identifier: beforeCalculateIndex [104154,104174]"/>
  <match src="): ) [49984,49985]" dest="): ) [49986,49987]"/>
  <match src="uint8: uint8 [31278,31283]" dest="uint8: uint8 [31278,31283]"/>
  <match src="view: view [90788,90792]" dest="view: view [91813,91817]"/>
  <match src="call_expression [21786,21848]" dest="call_expression [21786,21848]"/>
  <match src="call_argument [81550,81567]" dest="call_argument [82243,82260]"/>
  <match src="primitive_type [42853,42860]" dest="primitive_type [42853,42860]"/>
  <match src="identifier: sender [54871,54877]" dest="identifier: sender [54873,54879]"/>
  <match src="member_expression [37824,37831]" dest="member_expression [37824,37831]"/>
  <match src="identifier: r [29691,29692]" dest="identifier: r [29691,29692]"/>
  <match src="function_definition [51904,52073]" dest="function_definition [51906,52075]"/>
  <match src="expression_statement [95568,95603]" dest="expression_statement [94716,94751]"/>
  <match src="function_body [26774,26948]" dest="function_body [26774,26948]"/>
  <match src="identifier: poolReward [90210,90220]" dest="identifier: poolReward [91193,91203]"/>
  <match src="identifier: timeElapsed [42451,42462]" dest="identifier: timeElapsed [42451,42462]"/>
  <match src="&lt;: &lt; [95782,95783]" dest="&lt;: &lt; [94930,94931]"/>
  <match src="function_body [33933,34086]" dest="function_body [33933,34086]"/>
  <match src="primitive_type [65975,65982]" dest="primitive_type [65985,65992]"/>
  <match src="uint256: uint256 [103222,103229]" dest="uint256: uint256 [103146,103153]"/>
  <match src="uint256: uint256 [67145,67152]" dest="uint256: uint256 [67398,67405]"/>
  <match src="number_literal: 1 [67552,67553]" dest="number_literal: 1 [67799,67800]"/>
  <match src="]: ] [59797,59798]" dest="]: ] [59799,59800]"/>
  <match src="number_literal: 1 [31618,31619]" dest="number_literal: 1 [31618,31619]"/>
  <match src="call_argument [17874,17892]" dest="call_argument [17874,17892]"/>
  <match src="array_access [61541,61571]" dest="array_access [61543,61573]"/>
  <match src="}: } [19808,19809]" dest="}: } [19808,19809]"/>
  <match src="identifier: MINIMUM_LIQUIDITY [40039,40056]" dest="identifier: MINIMUM_LIQUIDITY [40039,40056]"/>
  <match src="!: ! [100765,100766]" dest="!: ! [100750,100751]"/>
  <match src="variable_declaration_statement [76127,76174]" dest="variable_declaration_statement [75643,75690]"/>
  <match src="address: address [58576,58583]" dest="address: address [58578,58585]"/>
  <match src="}: } [82292,82293]" dest="}: } [83130,83131]"/>
  <match src="=: = [107075,107076]" dest="=: = [106999,107000]"/>
  <match src="}: } [82366,82367]" dest="}: } [83204,83205]"/>
  <match src="): ) [102388,102389]" dest="): ) [102247,102248]"/>
  <match src="returns: returns [6539,6546]" dest="returns: returns [6539,6546]"/>
  <match src="indexed: indexed [66471,66478]" dest="indexed: indexed [66724,66731]"/>
  <match src="identifier: upper [60736,60741]" dest="identifier: upper [60738,60743]"/>
  <match src="member_expression [77901,77909]" dest="member_expression [77136,77144]"/>
  <match src="struct_field_assignment [14289,14302]" dest="struct_field_assignment [14289,14302]"/>
  <match src="state_mutability [6534,6538]" dest="state_mutability [6534,6538]"/>
  <match src="storage: storage [99950,99957]" dest="storage: storage [98655,98662]"/>
  <match src="address: address [43059,43066]" dest="address: address [43059,43066]"/>
  <match src="function_definition [44584,44759]" dest="function_definition [44586,44761]"/>
  <match src="call_argument [90602,90618]" dest="call_argument [91627,91643]"/>
  <match src="identifier: _totalSupply [49105,49117]" dest="identifier: _totalSupply [49107,49119]"/>
  <match src="function_definition [5248,5426]" dest="function_definition [5248,5426]"/>
  <match src="call_argument [46989,47006]" dest="call_argument [46376,46393]"/>
  <match src="identifier: _pid [82223,82227]" dest="identifier: _pid [83061,83065]"/>
  <match src="}: } [87990,87991]" dest="}: } [89151,89152]"/>
  <match src="comment: /**      * @dev Leaves the contract without owner. It will not be possible to call      * `onlyOwner` functions anymore. Can only be called by the current owner.      *      * NOTE: Renouncing ownership will leave the contract without an owner,      * thereby removing any functionality that is only available to the owner.      */ [26058,26395]" dest="comment: /**      * @dev Leaves the contract without owner. It will not be possible to call      * `onlyOwner` functions anymore. Can only be called by the current owner.      *      * NOTE: Renouncing ownership will leave the contract without an owner,      * thereby removing any functionality that is only available to the owner.      */ [26058,26395]"/>
  <match src="}: } [14303,14304]" dest="}: } [14303,14304]"/>
  <match src=",: , [16685,16686]" dest=",: , [16685,16686]"/>
  <match src="{: { [17436,17437]" dest="{: { [17436,17437]"/>
  <match src="(: ( [62668,62669]" dest="(: ( [62670,62671]"/>
  <match src="): ) [5724,5725]" dest="): ) [5724,5725]"/>
  <match src="identifier: _nftPoolId [92967,92977]" dest="identifier: _nftPoolId [92615,92625]"/>
  <match src="type_name [6835,6842]" dest="type_name [6835,6842]"/>
  <match src="identifier: BitMath [38173,38180]" dest="identifier: BitMath [38173,38180]"/>
  <match src="): ) [29674,29675]" dest="): ) [29674,29675]"/>
  <match src="if_statement [89587,89679]" dest="if_statement [90829,90921]"/>
  <match src="-: - [62358,62359]" dest="-: - [62360,62361]"/>
  <match src="pure: pure [37603,37607]" dest="pure: pure [37603,37607]"/>
  <match src="): ) [14307,14308]" dest="): ) [14307,14308]"/>
  <match src="=: = [86929,86930]" dest="=: = [88086,88087]"/>
  <match src="call_argument [55068,55074]" dest="call_argument [55070,55076]"/>
  <match src="returns: returns [1909,1916]" dest="returns: returns [1909,1916]"/>
  <match src="primitive_type [71192,71199]" dest="primitive_type [70903,70910]"/>
  <match src="identifier: sub [100036,100039]" dest="identifier: sub [98741,98744]"/>
  <match src="yul_identifier [13010,13014]" dest="yul_identifier [13010,13014]"/>
  <match src="identifier: INVITEE_WEIGHT [43281,43295]" dest="identifier: INVITEE_WEIGHT [43281,43295]"/>
  <match src="': ' [36084,36085]" dest="': ' [36084,36085]"/>
  <match src="interface_declaration [38484,40930]" dest="interface_declaration [38484,40930]"/>
  <match src="variable_declaration [46289,46300]" dest="variable_declaration [46291,46302]"/>
  <match src="user_defined_type [69242,69256]" dest="user_defined_type [68953,68967]"/>
  <match src="internal: internal [5286,5294]" dest="internal: internal [5286,5294]"/>
  <match src="=: = [65293,65294]" dest="=: = [65303,65304]"/>
  <match src="public: public [51064,51070]" dest="public: public [51066,51072]"/>
  <match src="primitive_type [44018,44025]" dest="primitive_type [44020,44027]"/>
  <match src="primitive_type [61400,61407]" dest="primitive_type [61402,61409]"/>
  <match src="&gt;=: &gt;= [87578,87580]" dest="&gt;=: &gt;= [88739,88741]"/>
  <match src=".: . [106777,106778]" dest=".: . [106701,106702]"/>
  <match src="type_name [66927,66934]" dest="type_name [67180,67187]"/>
  <match src="identifier: targetIndex [99182,99193]" dest="identifier: targetIndex [99346,99357]"/>
  <match src="variable_declaration_statement [62231,62266]" dest="variable_declaration_statement [62233,62268]"/>
  <match src="call_argument [72750,72754]" dest="call_argument [72803,72807]"/>
  <match src="primitive_type [20560,20567]" dest="primitive_type [20560,20567]"/>
  <match src="call_argument [54187,54202]" dest="call_argument [54189,54204]"/>
  <match src="variable_declaration [80506,80525]" dest="variable_declaration [81191,81210]"/>
  <match src="identifier: pid [66943,66946]" dest="identifier: pid [67196,67199]"/>
  <match src=".: . [94582,94583]" dest=".: . [94228,94229]"/>
  <match src="override_specifier [109507,109515]" dest="override_specifier [109431,109439]"/>
  <match src="=: = [99543,99544]" dest="=: = [97633,97634]"/>
  <match src="(: ( [54972,54973]" dest="(: ( [54974,54975]"/>
  <match src="function_definition [79751,82367]" dest="function_definition [80336,83205]"/>
  <match src="number_literal: 1587 [68233,68237]" dest="number_literal: 1587 [68340,68344]"/>
  <match src="call_argument [26817,26857]" dest="call_argument [26817,26857]"/>
  <match src="identifier: r [29194,29195]" dest="identifier: r [29194,29195]"/>
  <match src="internal: internal [24419,24427]" dest="internal: internal [24419,24427]"/>
  <match src="address: address [67047,67054]" dest="address: address [67300,67307]"/>
  <match src="=: = [72329,72330]" dest="=: = [72070,72071]"/>
  <match src="return: return [54256,54262]" dest="return: return [54258,54264]"/>
  <match src="(: ( [29695,29696]" dest="(: ( [29695,29696]"/>
  <match src="solidity: solidity [30015,30023]" dest="solidity: solidity [30015,30023]"/>
  <match src="): ) [34047,34048]" dest="): ) [34047,34048]"/>
  <match src="identifier: blackList [94202,94211]" dest="identifier: blackList [93848,93857]"/>
  <match src="if: if [72174,72176]" dest="if: if [71840,71842]"/>
  <match src="(: ( [69714,69715]" dest="(: ( [69425,69426]"/>
  <match src="return_type_definition [5631,5654]" dest="return_type_definition [5631,5654]"/>
  <match src="address: address [39251,39258]" dest="address: address [39251,39258]"/>
  <match src="identifier: amount1 [39752,39759]" dest="identifier: amount1 [39752,39759]"/>
  <match src="]: ] [55869,55870]" dest="]: ] [55871,55872]"/>
  <match src="identifier: a [7300,7301]" dest="identifier: a [7300,7301]"/>
  <match src="member_expression [83318,83347]" dest="member_expression [84303,84332]"/>
  <match src=",: , [27940,27941]" dest=",: , [27940,27941]"/>
  <match src="-: - [31834,31835]" dest="-: - [31834,31835]"/>
  <match src="identifier: self [37588,37592]" dest="identifier: self [37588,37592]"/>
  <match src="pragma_directive [27013,27037]" dest="pragma_directive [27013,27037]"/>
  <match src="address: address [426,433]" dest="address: address [426,433]"/>
  <match src="identifier: calculateRewardToken [102973,102993]" dest="identifier: calculateRewardToken [102897,102917]"/>
  <match src="identifier: Checkpoint [62533,62543]" dest="identifier: Checkpoint [62535,62545]"/>
  <match src="identifier: setSHDPerBlock [75855,75869]" dest="identifier: setSHDPerBlock [75371,75385]"/>
  <match src="comment: /**      * @dev Sets the values for {name} and {symbol}, initializes {decimals} with      * a default value of 18.      *      * To select a different value for {decimals}, use {_setupDecimals}.      *      * All three of these values are immutable: they can only be set once during      * construction.      */ [49214,49533]" dest="comment: /**      * @dev Sets the values for {name} and {symbol}, initializes {decimals} with      * a default value of 18.      *      * To select a different value for {decimals}, use {_setupDecimals}.      *      * All three of these values are immutable: they can only be set once during      * construction.      */ [49216,49535]"/>
  <match src="[: [ [80334,80335]" dest="[: [ [80954,80955]"/>
  <match src="visibility [10940,10948]" dest="visibility [10940,10948]"/>
  <match src="uint112: uint112 [42018,42025]" dest="uint112: uint112 [42018,42025]"/>
  <match src="number_literal: 0 [31403,31404]" dest="number_literal: 0 [31403,31404]"/>
  <match src="]: ] [82134,82135]" dest="]: ] [82972,82973]"/>
  <match src="uint256: uint256 [37034,37041]" dest="uint256: uint256 [37034,37041]"/>
  <match src="state_mutability [37968,37972]" dest="state_mutability [37968,37972]"/>
  <match src="returns: returns [34251,34258]" dest="returns: returns [34251,34258]"/>
  <match src="&gt;=: &gt;= [45308,45310]" dest="&gt;=: &gt;= [45310,45312]"/>
  <match src="(: ( [86048,86049]" dest="(: ( [87340,87341]"/>
  <match src="return_type_definition [38889,38903]" dest="return_type_definition [38889,38903]"/>
  <match src="identifier: Babylonian [28538,28548]" dest="identifier: Babylonian [28538,28548]"/>
  <match src="return: return [104372,104378]" dest="return: return [104296,104302]"/>
  <match src="==: == [97334,97336]" dest="==: == [96099,96101]"/>
  <match src="variable_declaration [104596,104610]" dest="variable_declaration [104520,104534]"/>
  <match src="): ) [76245,76246]" dest="): ) [75761,75762]"/>
  <match src=",: , [68446,68447]" dest=",: , [68430,68431]"/>
  <match src="{: { [33475,33476]" dest="{: { [33475,33476]"/>
  <match src="identifier: value [4156,4161]" dest="identifier: value [4156,4161]"/>
  <match src="identifier: EvilPoolInfo [64398,64410]" dest="identifier: EvilPoolInfo [64400,64412]"/>
  <match src="parameter [27269,27278]" dest="parameter [27269,27278]"/>
  <match src=",: , [68332,68333]" dest=",: , [68369,68370]"/>
  <match src="block_statement [36218,36426]" dest="block_statement [36218,36426]"/>
  <match src="identifier: amount0Out [39896,39906]" dest="identifier: amount0Out [39896,39906]"/>
  <match src="call_argument [98138,98156]" dest="call_argument [96903,96921]"/>
  <match src="if_statement [27381,27400]" dest="if_statement [27381,27400]"/>
  <match src="identifier: _msgSender [25981,25991]" dest="identifier: _msgSender [25981,25991]"/>
  <match src="identifier: Q224 [37817,37821]" dest="identifier: Q224 [37817,37821]"/>
  <match src="identifier: lastRewardBlock [108578,108593]" dest="identifier: lastRewardBlock [108502,108517]"/>
  <match src="member_expression [67386,67398]" dest="member_expression [67633,67645]"/>
  <match src="number_literal: 2 [27857,27858]" dest="number_literal: 2 [27857,27858]"/>
  <match src="function_definition [75423,75838]" dest="function_definition [74939,75354]"/>
  <match src="parameter [102880,102898]" dest="parameter [102804,102822]"/>
  <match src="]: ] [61905,61906]" dest="]: ] [61907,61908]"/>
  <match src="storage: storage [82849,82856]" dest="storage: storage [83687,83694]"/>
  <match src="solidity_pragma_token [30015,30031]" dest="solidity_pragma_token [30015,30031]"/>
  <match src="++: ++ [103652,103654]" dest="++: ++ [103576,103578]"/>
  <match src="identifier: a [5603,5604]" dest="identifier: a [5603,5604]"/>
  <match src="binary_expression [73190,73207]" dest="binary_expression [72955,72972]"/>
  <match src=",: , [36484,36485]" dest=",: , [36484,36485]"/>
  <match src="uint256: uint256 [27462,27469]" dest="uint256: uint256 [27462,27469]"/>
  <match src="variable_declaration_statement [61488,61582]" dest="variable_declaration_statement [61490,61584]"/>
  <match src="(: ( [85565,85566]" dest="(: ( [86865,86866]"/>
  <match src="}: } [109356,109357]" dest="}: } [109280,109281]"/>
  <match src="for: for [88773,88776]" dest="for: for [89621,89624]"/>
  <match src="parameter [95244,95257]" dest="parameter [94392,94405]"/>
  <match src="identifier: _lockTime [80099,80108]" dest="identifier: _lockTime [80684,80693]"/>
  <match src="variable_declaration_statement [27541,27563]" dest="variable_declaration_statement [27541,27563]"/>
  <match src="identifier: targetTokenPosition [69954,69973]" dest="identifier: targetTokenPosition [69665,69684]"/>
  <match src="): ) [90618,90619]" dest="): ) [91643,91644]"/>
  <match src="variable_declaration_statement [82889,82938]" dest="variable_declaration_statement [99992,100035]"/>
  <match src="(: ( [38928,38929]" dest="(: ( [38928,38929]"/>
  <match src="(: ( [79084,79085]" dest="(: ( [79247,79248]"/>
  <match src="function_definition [40445,40506]" dest="function_definition [40445,40506]"/>
  <match src="expression_statement [68963,68984]" dest="expression_statement [68674,68695]"/>
  <match src="call_argument [37113,37134]" dest="call_argument [37113,37134]"/>
  <match src="identifier: cp [60977,60979]" dest="identifier: cp [60979,60981]"/>
  <match src="(: ( [10889,10890]" dest="(: ( [10889,10890]"/>
  <match src="type_name [15188,15195]" dest="type_name [15188,15195]"/>
  <match src="{: { [5655,5656]" dest="{: { [5655,5656]"/>
  <match src="call_expression [17040,17073]" dest="call_expression [17040,17073]"/>
  <match src="identifier: lpTokenSwap [81847,81858]" dest="identifier: lpTokenSwap [82679,82690]"/>
  <match src="memory: memory [1001,1007]" dest="memory: memory [1001,1007]"/>
  <match src=",: , [68560,68561]" dest=",: , [68460,68461]"/>
  <match src="}: } [84996,84997]" dest="}: } [86296,86297]"/>
  <match src="type_name [33420,33429]" dest="type_name [33420,33429]"/>
  <match src="block_statement [23438,23635]" dest="block_statement [23438,23635]"/>
  <match src="type_name [17755,17762]" dest="type_name [17755,17762]"/>
  <match src="{: { [42703,42704]" dest="{: { [42703,42704]"/>
  <match src="override: override [108389,108397]" dest="override: override [108313,108321]"/>
  <match src="identifier: toNum [61868,61873]" dest="identifier: toNum [61870,61875]"/>
  <match src="type_cast_expression [33709,33739]" dest="type_cast_expression [33709,33739]"/>
  <match src="function: function [87256,87264]" dest="function: function [88417,88425]"/>
  <match src="(: ( [56558,56559]" dest="(: ( [56560,56561]"/>
  <match src="==: == [67258,67260]" dest="==: == [67505,67507]"/>
  <match src=",: , [18019,18020]" dest=",: , [18019,18020]"/>
  <match src="identifier: userInfo [80326,80334]" dest="identifier: userInfo [80946,80954]"/>
  <match src="=&gt;: =&gt; [43945,43947]" dest="=&gt;: =&gt; [43945,43947]"/>
  <match src="=: = [78307,78308]" dest="=: = [77440,77441]"/>
  <match src="binary_expression [27618,27642]" dest="binary_expression [27618,27642]"/>
  <match src="public: public [43670,43676]" dest="public: public [43670,43676]"/>
  <match src="primitive_type [38654,38658]" dest="primitive_type [38654,38658]"/>
  <match src=".: . [33995,33996]" dest=".: . [33995,33996]"/>
  <match src="type_name [59842,59849]" dest="type_name [59844,59851]"/>
  <match src="uint256: uint256 [72300,72307]" dest="uint256: uint256 [74086,74093]"/>
  <match src="type_name [42018,42025]" dest="type_name [42018,42025]"/>
  <match src="identifier: _blackList [94189,94199]" dest="identifier: _blackList [93835,93845]"/>
  <match src="variable_declaration_statement [87503,87557]" dest="variable_declaration_statement [88664,88718]"/>
  <match src=".: . [104079,104080]" dest=".: . [104003,104004]"/>
  <match src="type_name [934,941]" dest="type_name [934,941]"/>
  <match src="array_access [99965,99979]" dest="array_access [98670,98684]"/>
  <match src="member_expression [82730,82742]" dest="member_expression [83568,83580]"/>
  <match src="&quot;: &quot; [82670,82671]" dest="&quot;: &quot; [83508,83509]"/>
  <match src="-: - [38034,38035]" dest="-: - [38034,38035]"/>
  <match src="(: ( [55833,55834]" dest="(: ( [55835,55836]"/>
  <match src="uint8: uint8 [57855,57860]" dest="uint8: uint8 [57857,57862]"/>
  <match src="binary_expression [33986,34018]" dest="binary_expression [33986,34018]"/>
  <match src="return: return [6935,6941]" dest="return: return [6935,6941]"/>
  <match src="=: = [22277,22278]" dest="=: = [22277,22278]"/>
  <match src="address: address [54784,54791]" dest="address: address [54786,54793]"/>
  <match src="=: = [106346,106347]" dest="=: = [106270,106271]"/>
  <match src="identifier: r [27765,27766]" dest="identifier: r [27765,27766]"/>
  <match src="call_argument [86670,86680]" dest="call_argument [88311,88321]"/>
  <match src="type_name [20624,20631]" dest="type_name [20624,20631]"/>
  <match src="return: return [6307,6313]" dest="return: return [6307,6313]"/>
  <match src="variable_declaration_statement [74230,74287]" dest="variable_declaration_statement [74017,74068]"/>
  <match src="uint144: uint144 [37006,37013]" dest="uint144: uint144 [37006,37013]"/>
  <match src="contract: contract [24261,24269]" dest="contract: contract [24261,24269]"/>
  <match src="(: ( [38094,38095]" dest="(: ( [38094,38095]"/>
  <match src="{: { [60611,60612]" dest="{: { [60613,60614]"/>
  <match src="expression_statement [27613,27643]" dest="expression_statement [27613,27643]"/>
  <match src="string_literal [28222,28250]" dest="string_literal [28222,28250]"/>
  <match src="): ) [38726,38727]" dest="): ) [38726,38727]"/>
  <match src="type_cast_expression [26805,26815]" dest="type_cast_expression [26805,26815]"/>
  <match src="parameter [21927,21940]" dest="parameter [21927,21940]"/>
  <match src="uint256: uint256 [8147,8154]" dest="uint256: uint256 [8147,8154]"/>
  <match src="&lt;:  &lt; [19999,20001]" dest="&lt;:  &lt; [19999,20001]"/>
  <match src="binary_expression [32130,32141]" dest="binary_expression [32130,32141]"/>
  <match src="primitive_type [46019,46026]" dest="primitive_type [46021,46028]"/>
  <match src=",: , [71815,71816]" dest=",: , [71526,71527]"/>
  <match src="identifier: RESOLUTION [34796,34806]" dest="identifier: RESOLUTION [34796,34806]"/>
  <match src="public: public [51954,51960]" dest="public: public [51956,51962]"/>
  <match src="primitive_type [55928,55935]" dest="primitive_type [55930,55937]"/>
  <match src="address: address [25541,25548]" dest="address: address [25541,25548]"/>
  <match src="type_name [99709,99716]" dest="type_name [97901,97908]"/>
  <match src=".: . [97663,97664]" dest=".: . [96428,96429]"/>
  <match src="(: ( [104828,104829]" dest="(: ( [104752,104753]"/>
  <match src="primitive_type [66388,66395]" dest="primitive_type [66408,66415]"/>
  <match src="==: == [89728,89730]" dest="==: == [90970,90972]"/>
  <match src="unary_expression [34432,34442]" dest="unary_expression [34432,34442]"/>
  <match src="identifier: data [18395,18399]" dest="identifier: data [18395,18399]"/>
  <match src="[: [ [92991,92992]" dest="[: [ [92639,92640]"/>
  <match src="=: = [70841,70842]" dest="=: = [70552,70553]"/>
  <match src="identifier: require [35726,35733]" dest="identifier: require [35726,35733]"/>
  <match src="): ) [51991,51992]" dest="): ) [51993,51994]"/>
  <match src="binary_expression [80099,80131]" dest="binary_expression [80684,80716]"/>
  <match src="call_expression [79600,79638]" dest="call_expression [79683,79721]"/>
  <match src="identifier: price1CumulativeLast [41881,41901]" dest="identifier: price1CumulativeLast [41881,41901]"/>
  <match src="call_argument [54204,54243]" dest="call_argument [54206,54245]"/>
  <match src="identifier: rankPoolIndexMap [87831,87847]" dest="identifier: rankPoolIndexMap [88992,89008]"/>
  <match src="parameter [103222,103229]" dest="parameter [103146,103153]"/>
  <match src="identifier: _toBlock [103874,103882]" dest="identifier: _toBlock [103798,103806]"/>
  <match src="identifier: startBlock [45577,45587]" dest="identifier: startBlock [45579,45589]"/>
  <match src="[: [ [74268,74269]" dest="[: [ [74055,74056]"/>
  <match src="identifier: pool [74971,74975]" dest="identifier: pool [74843,74847]"/>
  <match src="identifier: depositTimeWeight [68141,68158]" dest="identifier: depositTimeWeight [68304,68321]"/>
  <match src="(: ( [39422,39423]" dest="(: ( [39422,39423]"/>
  <match src="parameter [95424,95456]" dest="parameter [94572,94604]"/>
  <match src="(: ( [36033,36034]" dest="(: ( [36033,36034]"/>
  <match src="address: address [64235,64242]" dest="address: address [64237,64244]"/>
  <match src="number_literal: 0 [74181,74182]" dest="number_literal: 0 [73912,73913]"/>
  <match src="member_expression [18048,18065]" dest="member_expression [18048,18065]"/>
  <match src="): ) [46369,46370]" dest="): ) [46611,46612]"/>
  <match src="primitive_type [38634,38641]" dest="primitive_type [38634,38641]"/>
  <match src="parameter [39251,39261]" dest="parameter [39251,39261]"/>
  <match src="identifier: FullMath [36455,36463]" dest="identifier: FullMath [36455,36463]"/>
  <match src=",: , [39759,39760]" dest=",: , [39759,39760]"/>
  <match src=".: . [73331,73332]" dest=".: . [73096,73097]"/>
  <match src="identifier: numerator [36765,36774]" dest="identifier: numerator [36765,36774]"/>
  <match src="address: address [25342,25349]" dest="address: address [25342,25349]"/>
  <match src="(: ( [45158,45159]" dest="(: ( [45160,45161]"/>
  <match src="solidity_pragma_token [42961,42976]" dest="solidity_pragma_token [42961,42976]"/>
  <match src="expression_statement [44384,44423]" dest="expression_statement [44386,44425]"/>
  <match src="assignment_expression [93074,93118]" dest="assignment_expression [92722,92766]"/>
  <match src=",: , [52034,52035]" dest=",: , [52036,52037]"/>
  <match src="primitive_type [105001,105008]" dest="primitive_type [104925,104932]"/>
  <match src="identifier: x [31385,31386]" dest="identifier: x [31385,31386]"/>
  <match src="uint256: uint256 [79778,79785]" dest="uint256: uint256 [80363,80370]"/>
  <match src="): ) [25660,25661]" dest="): ) [25660,25661]"/>
  <match src="identifier: SafeERC20 [63086,63095]" dest="identifier: SafeERC20 [63088,63097]"/>
  <match src="): ) [30375,30376]" dest="): ) [30375,30376]"/>
  <match src="{: { [28762,28763]" dest="{: { [28762,28763]"/>
  <match src="identifier: amount [61961,61967]" dest="identifier: amount [61963,61969]"/>
  <match src=".: . [67391,67392]" dest=".: . [67638,67639]"/>
  <match src="}: } [41444,41445]" dest="}: } [41444,41445]"/>
  <match src="): ) [20957,20958]" dest="): ) [20957,20958]"/>
  <match src="member_expression [84181,84203]" dest="member_expression [84710,84732]"/>
  <match src="identifier: invitorInfo [99437,99448]" dest="identifier: invitorInfo [97527,97538]"/>
  <match src="identifier: blackList [73322,73331]" dest="identifier: blackList [73087,73096]"/>
  <match src="}: } [85349,85350]" dest="}: } [86649,86650]"/>
  <match src="(: ( [22302,22303]" dest="(: ( [22302,22303]"/>
  <match src="binary_expression [74184,74204]" dest="binary_expression [73915,73935]"/>
  <match src=".: . [34015,34016]" dest=".: . [34015,34016]"/>
  <match src="): ) [102419,102420]" dest="): ) [102278,102279]"/>
  <match src="parameter [62773,62783]" dest="parameter [62775,62785]"/>
  <match src="(: ( [93159,93160]" dest="(: ( [92807,92808]"/>
  <match src="identifier: z [34452,34453]" dest="identifier: z [34452,34453]"/>
  <match src="identifier: invitor [86969,86976]" dest="identifier: invitor [88126,88133]"/>
  <match src="state_mutability [40295,40299]" dest="state_mutability [40295,40299]"/>
  <match src="if: if [30543,30545]" dest="if: if [30543,30545]"/>
  <match src="returns: returns [24441,24448]" dest="returns: returns [24441,24448]"/>
  <match src="-: - [31508,31509]" dest="-: - [31508,31509]"/>
  <match src="identifier: encode144 [33195,33204]" dest="identifier: encode144 [33195,33204]"/>
  <match src="identifier: self [33437,33441]" dest="identifier: self [33437,33441]"/>
  <match src="(: ( [27431,27432]" dest="(: ( [27431,27432]"/>
  <match src="primitive_type [105973,105980]" dest="primitive_type [105897,105904]"/>
  <match src="): ) [42079,42080]" dest="): ) [42079,42080]"/>
  <match src="function_definition [59453,59620]" dest="function_definition [59455,59622]"/>
  <match src="): ) [104485,104486]" dest="): ) [104409,104410]"/>
  <match src="&gt;: &gt; [107121,107122]" dest="&gt;: &gt; [107045,107046]"/>
  <match src="): ) [106673,106674]" dest="): ) [106597,106598]"/>
  <match src="variable_declaration_statement [104596,104635]" dest="variable_declaration_statement [104520,104559]"/>
  <match src="=: = [70125,70126]" dest="=: = [69836,69837]"/>
  <match src="identifier: originWeight [80394,80406]" dest="identifier: originWeight [81014,81026]"/>
  <match src="call_argument [45577,45602]" dest="call_argument [45579,45604]"/>
  <match src="visibility [71855,71863]" dest="visibility [71566,71574]"/>
  <match src="primitive_type [39640,39647]" dest="primitive_type [39640,39647]"/>
  <match src="call_expression [34722,34734]" dest="call_expression [34722,34734]"/>
  <match src="bool: bool [94438,94442]" dest="bool: bool [94084,94088]"/>
  <match src="identifier: require [21596,21603]" dest="identifier: require [21596,21603]"/>
  <match src="primitive_type [64888,64895]" dest="primitive_type [64896,64903]"/>
  <match src="uint: uint [39747,39751]" dest="uint: uint [39747,39751]"/>
  <match src="call_argument [35826,35829]" dest="call_argument [35826,35829]"/>
  <match src="expression_statement [94560,94592]" dest="expression_statement [94206,94238]"/>
  <match src="member_expression [87174,87197]" dest="member_expression [88333,88356]"/>
  <match src="visibility [93901,93909]" dest="visibility [93547,93555]"/>
  <match src="if: if [69950,69952]" dest="if: if [69661,69663]"/>
  <match src="if: if [89587,89589]" dest="if: if [90829,90831]"/>
  <match src="{: { [103230,103231]" dest="{: { [103154,103155]"/>
  <match src="=: = [98204,98205]" dest="=: = [96969,96970]"/>
  <match src="view: view [17408,17412]" dest="view: view [17408,17412]"/>
  <match src="visibility [43714,43720]" dest="visibility [43714,43720]"/>
  <match src="event_paramater [38579,38589]" dest="event_paramater [38579,38589]"/>
  <match src="identifier: rankPoolIndex [82157,82170]" dest="identifier: rankPoolIndex [82995,83008]"/>
  <match src="uint32: uint32 [31610,31616]" dest="uint32: uint32 [31610,31616]"/>
  <match src="uint256: uint256 [75054,75061]" dest="uint256: uint256 [80059,80066]"/>
  <match src="type_name [64235,64244]" dest="type_name [64237,64246]"/>
  <match src="identifier: length [85684,85690]" dest="identifier: length [86984,86990]"/>
  <match src="parameter [59842,59856]" dest="parameter [59844,59858]"/>
  <match src="[: [ [72588,72589]" dest="[: [ [72280,72281]"/>
  <match src="number_literal: 1 [74332,74333]" dest="number_literal: 1 [74151,74152]"/>
  <match src="&quot;: &quot; [9525,9526]" dest="&quot;: &quot; [9525,9526]"/>
  <match src="): ) [95799,95800]" dest="): ) [94947,94948]"/>
  <match src="address: address [24338,24345]" dest="address: address [24338,24345]"/>
  <match src="call_expression [73641,73656]" dest="call_expression [73406,73421]"/>
  <match src="type_cast_expression [54881,54891]" dest="type_cast_expression [54883,54893]"/>
  <match src="identifier: r [30416,30417]" dest="identifier: r [30416,30417]"/>
  <match src="type_name [39709,39716]" dest="type_name [39709,39716]"/>
  <match src="comment: // undividend shard [66205,66224]" dest="comment: // undividend shard [66225,66244]"/>
  <match src="=: = [95727,95728]" dest="=: = [94875,94876]"/>
  <match src="primitive_type [89002,89009]" dest="primitive_type [89850,89857]"/>
  <match src="visibility [102390,102397]" dest="visibility [102249,102256]"/>
  <match src="function_definition [27415,27897]" dest="function_definition [27415,27897]"/>
  <match src=".: . [60924,60925]" dest=".: . [60926,60927]"/>
  <match src="}: } [97769,97770]" dest="}: } [96534,96535]"/>
  <match src="visibility [77388,77395]" dest="visibility [76828,76835]"/>
  <match src="expression_statement [103367,103392]" dest="expression_statement [103291,103316]"/>
  <match src="bool: bool [51987,51991]" dest="bool: bool [51989,51993]"/>
  <match src="call_argument [67273,67294]" dest="call_argument [67520,67541]"/>
  <match src="=: = [83316,83317]" dest="=: = [84301,84302]"/>
  <match src="if: if [30446,30448]" dest="if: if [30446,30448]"/>
  <match src="binary_expression [35095,35128]" dest="binary_expression [35095,35128]"/>
  <match src="return_statement [37184,37218]" dest="return_statement [37184,37218]"/>
  <match src="if: if [27381,27383]" dest="if: if [27381,27383]"/>
  <match src="identifier: currentCumulativePrices [107365,107388]" dest="identifier: currentCumulativePrices [107289,107312]"/>
  <match src="identifier: leastSignificantBit [31224,31243]" dest="identifier: leastSignificantBit [31224,31243]"/>
  <match src="(: ( [46201,46202]" dest="(: ( [46203,46204]"/>
  <match src="if_statement [61343,62055]" dest="if_statement [61345,62057]"/>
  <match src="{: { [31943,31944]" dest="{: { [31943,31944]"/>
  <match src="member_expression [78426,78532]" dest="member_expression [78014,78112]"/>
  <match src="call_argument [36603,36609]" dest="call_argument [36603,36609]"/>
  <match src="): ) [82449,82450]" dest="): ) [83287,83288]"/>
  <match src="=: = [93589,93590]" dest="=: = [93237,93238]"/>
  <match src="identifier: rankPoolIndexMap [64676,64692]" dest="identifier: rankPoolIndexMap [64682,64698]"/>
  <match src="type_name [45874,45881]" dest="type_name [45876,45883]"/>
  <match src="delete: delete [72565,72571]" dest="delete: delete [72257,72263]"/>
  <match src="member_expression [86401,86413]" dest="member_expression [87689,87701]"/>
  <match src="]: ] [95348,95349]" dest="]: ] [94496,94497]"/>
  <match src="unary_expression [36332,36334]" dest="unary_expression [36332,36334]"/>
  <match src="=: = [67648,67649]" dest="=: = [67862,67863]"/>
  <match src="): ) [54103,54104]" dest="): ) [54105,54106]"/>
  <match src="identifier: _marketingFundDividend [46810,46832]" dest="identifier: _marketingFundDividend [47052,47074]"/>
  <match src="uint256: uint256 [80236,80243]" dest="uint256: uint256 [80856,80863]"/>
  <match src="user_defined_type [37982,37991]" dest="user_defined_type [37982,37991]"/>
  <match src="type_name [71803,71810]" dest="type_name [71514,71521]"/>
  <match src="member_expression [55213,55237]" dest="member_expression [55215,55239]"/>
  <match src="primitive_type [104528,104535]" dest="primitive_type [104452,104459]"/>
  <match src="primitive_type [22221,22228]" dest="primitive_type [22221,22228]"/>
  <match src="(: ( [57254,57255]" dest="(: ( [57256,57257]"/>
  <match src="binary_expression [29762,29767]" dest="binary_expression [29762,29767]"/>
  <match src="returns: returns [16739,16746]" dest="returns: returns [16739,16746]"/>
  <match src="identifier: self [37824,37828]" dest="identifier: self [37824,37828]"/>
  <match src="visibility [57872,57880]" dest="visibility [57874,57882]"/>
  <match src="(: ( [45273,45274]" dest="(: ( [45275,45276]"/>
  <match src=".: . [106674,106675]" dest=".: . [106598,106599]"/>
  <match src="state_variable_declaration [66303,66346]" dest="state_variable_declaration [66323,66366]"/>
  <match src="uint144: uint144 [36205,36212]" dest="uint144: uint144 [36205,36212]"/>
  <match src="call_argument [54952,54975]" dest="call_argument [54954,54977]"/>
  <match src="address: address [51625,51632]" dest="address: address [51627,51634]"/>
  <match src="binary_expression [77869,77884]" dest="binary_expression [77104,77119]"/>
  <match src="primitive_type [51695,51702]" dest="primitive_type [51697,51704]"/>
  <match src="call_argument [62669,62673]" dest="call_argument [62671,62675]"/>
  <match src="parameter [24338,24353]" dest="parameter [24338,24353]"/>
  <match src="identifier: currentPoolCountInRank [85645,85667]" dest="identifier: currentPoolCountInRank [86945,86967]"/>
  <match src="expression_statement [103937,104028]" dest="expression_statement [103861,103952]"/>
  <match src="type_name [37034,37041]" dest="type_name [37034,37041]"/>
  <match src="member_expression [73322,73342]" dest="member_expression [73087,73107]"/>
  <match src="number_literal: 0 [60633,60634]" dest="number_literal: 0 [60635,60636]"/>
  <match src="primitive_type [31278,31283]" dest="primitive_type [31278,31283]"/>
  <match src="-: - [5721,5722]" dest="-: - [5721,5722]"/>
  <match src=",: , [37744,37745]" dest=",: , [37744,37745]"/>
  <match src="primitive_type [82789,82796]" dest="primitive_type [83627,83634]"/>
  <match src="modifier_invocation [26764,26773]" dest="modifier_invocation [26764,26773]"/>
  <match src="bool: bool [63877,63881]" dest="bool: bool [63879,63883]"/>
  <match src=":: : [105086,105087]" dest=":: : [105010,105011]"/>
  <match src=".: . [33721,33722]" dest=".: . [33721,33722]"/>
  <match src="assignment_expression [97500,97531]" dest="assignment_expression [96265,96296]"/>
  <match src="identifier: uq112x112 [36820,36829]" dest="identifier: uq112x112 [36820,36829]"/>
  <match src="{: { [44876,44877]" dest="{: { [44878,44879]"/>
  <match src="new: new [95729,95732]" dest="new: new [94877,94880]"/>
  <match src="comment: /**      * @notice Called by the admin to update the implementation of the delegator      * @param implementation_ The address of the new implementation for delegation      * @param allowResign Flag to indicate whether to call _resignImplementation on the old implementation      * @param becomeImplementationData The encoded bytes data to be passed to _becomeImplementation      */ [503,890]" dest="comment: /**      * @notice Called by the admin to update the implementation of the delegator      * @param implementation_ The address of the new implementation for delegation      * @param allowResign Flag to indicate whether to call _resignImplementation on the old implementation      * @param becomeImplementationData The encoded bytes data to be passed to _becomeImplementation      */ [503,890]"/>
  <match src="identifier: sub [81243,81246]" dest="identifier: sub [81932,81935]"/>
  <match src="number_literal: 0 [104709,104710]" dest="number_literal: 0 [104633,104634]"/>
  <match src="returns: returns [6860,6867]" dest="returns: returns [6860,6867]"/>
  <match src="): ) [87083,87084]" dest="): ) [88240,88241]"/>
  <match src="identifier: _msgSender [53399,53409]" dest="identifier: _msgSender [53401,53411]"/>
  <match src="(: ( [53444,53445]" dest="(: ( [53446,53447]"/>
  <match src="function_body [16762,17151]" dest="function_body [16762,17151]"/>
  <match src="identifier: self [36101,36105]" dest="identifier: self [36101,36105]"/>
  <match src="function: function [39506,39514]" dest="function: function [39506,39514]"/>
  <match src="(: ( [42424,42425]" dest="(: ( [42424,42425]"/>
  <match src="): ) [80848,80849]" dest="): ) [81535,81536]"/>
  <match src="struct_member [64286,64303]" dest="struct_member [64288,64305]"/>
  <match src="comment: // Add a new lp to the pool. Can only be called by the nft shard contract. [68999,69073]" dest="comment: // Add a new lp to the pool. Can only be called by the nft shard contract. [68710,68784]"/>
  <match src="(: ( [82315,82316]" dest="(: ( [83153,83154]"/>
  <match src="identifier: InvitationInfo [64183,64197]" dest="identifier: InvitationInfo [64185,64199]"/>
  <match src="identifier: blackListMap [85498,85510]" dest="identifier: blackListMap [86798,86810]"/>
  <match src="parameter [34566,34587]" dest="parameter [34566,34587]"/>
  <match src="(: ( [78448,78449]" dest="(: ( [78028,78029]"/>
  <match src="identifier: _address [77360,77368]" dest="identifier: _address [76800,76808]"/>
  <match src="variable_declaration_statement [105902,105921]" dest="variable_declaration_statement [105826,105845]"/>
  <match src="type_name [40900,40907]" dest="type_name [40900,40907]"/>
  <match src="expression_statement [86222,86261]" dest="expression_statement [87510,87549]"/>
  <match src="): ) [74148,74149]" dest="): ) [73879,73880]"/>
  <match src="user_defined_type [20598,20604]" dest="user_defined_type [20598,20604]"/>
  <match src="array_access [100402,100430]" dest="array_access [99744,99773]"/>
  <match src="uint256: uint256 [103620,103627]" dest="uint256: uint256 [103544,103551]"/>
  <match src="comment: // used to caculate user deposit weight [65612,65651]" dest="comment: // used to caculate user deposit weight [65622,65661]"/>
  <match src="identifier: xx [29228,29230]" dest="identifier: xx [29228,29230]"/>
  <match src="returns: returns [94343,94350]" dest="returns: returns [93989,93996]"/>
  <match src="identifier: balanceOf [51037,51046]" dest="identifier: balanceOf [51039,51048]"/>
  <match src="memory: memory [50022,50028]" dest="memory: memory [50024,50030]"/>
  <match src="identifier: targetTokenPosition [70674,70693]" dest="identifier: targetTokenPosition [70385,70404]"/>
  <match src="struct_declaration [32450,32496]" dest="struct_declaration [32450,32496]"/>
  <match src="identifier: account [55773,55780]" dest="identifier: account [55775,55782]"/>
  <match src="(: ( [106488,106489]" dest="(: ( [106412,106413]"/>
  <match src="identifier: getBlackList [94057,94069]" dest="identifier: getBlackList [93703,93715]"/>
  <match src="bool: bool [53373,53377]" dest="bool: bool [53375,53379]"/>
  <match src="identifier: accumulativeDividend [79577,79597]" dest="identifier: accumulativeDividend [79737,79757]"/>
  <match src="{: { [41706,41707]" dest="{: { [41706,41707]"/>
  <match src="storage: storage [100868,100875]" dest="storage: storage [100930,100937]"/>
  <match src="(: ( [14026,14027]" dest="(: ( [14026,14027]"/>
  <match src="type_cast_expression [71614,71635]" dest="type_cast_expression [71325,71346]"/>
  <match src="parameter [8811,8820]" dest="parameter [8811,8820]"/>
  <match src="type_name [56329,56336]" dest="type_name [56331,56338]"/>
  <match src="address: address [69878,69885]" dest="address: address [69589,69596]"/>
  <match src=",: , [70664,70665]" dest=",: , [70375,70376]"/>
  <match src="identifier: user [80482,80486]" dest="identifier: user [81167,81171]"/>
  <match src="identifier: _user [99329,99334]" dest="identifier: _user [99485,99490]"/>
  <match src="identifier: token [20794,20799]" dest="identifier: token [20794,20799]"/>
  <match src="memory: memory [18802,18808]" dest="memory: memory [18802,18808]"/>
  <match src="visibility [94754,94761]" dest="visibility [85136,85143]"/>
  <match src="identifier: upper_self [35252,35262]" dest="identifier: upper_self [35252,35262]"/>
  <match src="binary_expression [27811,27816]" dest="binary_expression [27811,27816]"/>
  <match src="primitive_type [39101,39105]" dest="primitive_type [39101,39105]"/>
  <match src="if: if [101572,101574]" dest="if: if [101309,101311]"/>
  <match src="expression_statement [109143,109156]" dest="expression_statement [109067,109080]"/>
  <match src="comment: // uniswapPair contract address [63540,63571]" dest="comment: // uniswapPair contract address [63542,63573]"/>
  <match src="(: ( [47406,47407]" dest="(: ( [47408,47409]"/>
  <match src="identifier: unDividendShard [74890,74905]" dest="identifier: unDividendShard [74761,74776]"/>
  <match src="(: ( [37430,37431]" dest="(: ( [37430,37431]"/>
  <match src="): ) [17932,17933]" dest="): ) [17932,17933]"/>
  <match src="(: ( [87237,87238]" dest="(: ( [88398,88399]"/>
  <match src="(: ( [36161,36162]" dest="(: ( [36161,36162]"/>
  <match src="!=: != [56389,56391]" dest="!=: != [56391,56393]"/>
  <match src="identifier: invitor [94624,94631]" dest="identifier: invitor [94270,94277]"/>
  <match src="identifier: senderInfo [100766,100776]" dest="identifier: senderInfo [100751,100761]"/>
  <match src="=: = [74179,74180]" dest="=: = [73910,73911]"/>
  <match src="visibility [40863,40871]" dest="visibility [40863,40871]"/>
  <match src="identifier: b [10151,10152]" dest="identifier: b [10151,10152]"/>
  <match src="identifier: AddToBlacklist [72735,72749]" dest="identifier: AddToBlacklist [72788,72802]"/>
  <match src="identifier: msg [69354,69357]" dest="identifier: msg [69065,69068]"/>
  <match src="identifier: contractFeeRateDenominator [43848,43874]" dest="identifier: contractFeeRateDenominator [43848,43874]"/>
  <match src="binary_expression [27736,27741]" dest="binary_expression [27736,27741]"/>
  <match src="identifier: block [89618,89623]" dest="identifier: block [90860,90865]"/>
  <match src="type_name [75469,75476]" dest="type_name [74985,74992]"/>
  <match src="parameter [75870,75890]" dest="parameter [75386,75406]"/>
  <match src="return_type_definition [31269,31286]" dest="return_type_definition [31269,31286]"/>
  <match src="parameter [78242,78258]" dest="parameter [77375,77391]"/>
  <match src="if_statement [6574,6604]" dest="if_statement [6574,6604]"/>
  <match src="return_type_definition [49794,49817]" dest="return_type_definition [49796,49819]"/>
  <match src="identifier: errorMessage [17804,17816]" dest="identifier: errorMessage [17804,17816]"/>
  <match src="=: = [72263,72264]" dest="=: = [71974,71975]"/>
  <match src="binary_expression [33285,33309]" dest="binary_expression [33285,33309]"/>
  <match src="type_name [104510,104517]" dest="type_name [104434,104441]"/>
  <match src="[: [ [100904,100905]" dest="[: [ [100967,100968]"/>
  <match src="parameter [50015,50028]" dest="parameter [50017,50030]"/>
  <match src="/: / [8929,8930]" dest="/: / [8929,8930]"/>
  <match src="binary_expression [103874,103900]" dest="binary_expression [103798,103824]"/>
  <match src="primitive_type [57345,57352]" dest="primitive_type [57347,57354]"/>
  <match src="type_name [75054,75061]" dest="type_name [80059,80066]"/>
  <match src="-=: -= [32145,32147]" dest="-=: -= [32145,32147]"/>
  <match src="constructor_definition [108848,108871]" dest="constructor_definition [108772,108795]"/>
  <match src="visibility [40225,40233]" dest="visibility [40225,40233]"/>
  <match src="identifier: _startBlock [103328,103339]" dest="identifier: _startBlock [103252,103263]"/>
  <match src="identifier: sparePoolCount [87789,87803]" dest="identifier: sparePoolCount [88950,88964]"/>
  <match src="primitive_type [62187,62194]" dest="primitive_type [62189,62196]"/>
  <match src="(: ( [62543,62544]" dest="(: ( [62545,62546]"/>
  <match src="uint: uint [39053,39057]" dest="uint: uint [39053,39057]"/>
  <match src="parameter [18841,18853]" dest="parameter [18841,18853]"/>
  <match src="call_argument [81070,81079]" dest="call_argument [81757,81766]"/>
  <match src="]: ] [59902,59903]" dest="]: ] [59904,59905]"/>
  <match src="member_expression [89618,89630]" dest="member_expression [90860,90872]"/>
  <match src="identifier: pair [42098,42102]" dest="identifier: pair [42098,42102]"/>
  <match src="identifier: user [81612,81616]" dest="identifier: user [100239,100243]"/>
  <match src="variable_declaration_statement [100859,100925]" dest="variable_declaration_statement [100921,100988]"/>
  <match src="identifier: target [15599,15605]" dest="identifier: target [15599,15605]"/>
  <match src=".: . [97602,97603]" dest=".: . [96367,96368]"/>
  <match src="(: ( [54032,54033]" dest="(: ( [54034,54035]"/>
  <match src="type_name [107281,107285]" dest="type_name [107205,107209]"/>
  <match src="type_name [34973,34980]" dest="type_name [34973,34980]"/>
  <match src="expression_statement [44333,44374]" dest="expression_statement [44335,44376]"/>
  <match src="identifier: errorMessage [19856,19868]" dest="identifier: errorMessage [19856,19868]"/>
  <match src="{: { [312,313]" dest="{: { [312,313]"/>
  <match src="variable_declaration [100987,101011]" dest="variable_declaration [101002,101031]"/>
  <match src="function: function [45848,45856]" dest="function: function [45850,45858]"/>
  <match src="uint256: uint256 [34316,34323]" dest="uint256: uint256 [34316,34323]"/>
  <match src="uint256: uint256 [102412,102419]" dest="uint256: uint256 [102271,102278]"/>
  <match src="visibility [49097,49104]" dest="visibility [49099,49106]"/>
  <match src="type_name [100201,100208]" dest="type_name [80132,80139]"/>
  <match src="block_statement [74211,74858]" dest="block_statement [73942,74729]"/>
  <match src="(: ( [77635,77636]" dest="(: ( [77075,77076]"/>
  <match src="type_name [94397,94406]" dest="type_name [94043,94052]"/>
  <match src=".: . [84255,84256]" dest=".: . [84784,84785]"/>
  <match src="comment: // File: contracts/ActivityBase.sol [42913,42948]" dest="comment: // File: contracts/ActivityBase.sol [42913,42948]"/>
  <match src="member_expression [90948,90996]" dest="member_expression [91973,92021]"/>
  <match src="=: = [56628,56629]" dest="=: = [56630,56631]"/>
  <match src="): ) [25397,25398]" dest="): ) [25397,25398]"/>
  <match src="): ) [73696,73697]" dest="): ) [73461,73462]"/>
  <match src=".: . [22415,22416]" dest=".: . [22415,22416]"/>
  <match src="augmented_assignment_expression [29069,29079]" dest="augmented_assignment_expression [29069,29079]"/>
  <match src="(: ( [92547,92548]" dest="(: ( [92195,92196]"/>
  <match src="if_statement [97872,98364]" dest="if_statement [96637,97129]"/>
  <match src="number_literal: 1 [37743,37744]" dest="number_literal: 1 [37743,37744]"/>
  <match src="variable_declaration [105301,105332]" dest="variable_declaration [105225,105256]"/>
  <match src="variable_declaration [87718,87739]" dest="variable_declaration [88879,88900]"/>
  <match src="(: ( [51480,51481]" dest="(: ( [51482,51483]"/>
  <match src="identifier: amount [57484,57490]" dest="identifier: amount [57486,57492]"/>
  <match src="type_name [47239,47246]" dest="type_name [47241,47248]"/>
  <match src="function: function [104406,104414]" dest="function: function [104330,104338]"/>
  <match src="=: = [101202,101203]" dest="=: = [101171,101172]"/>
  <match src="expression_statement [31681,31690]" dest="expression_statement [31681,31690]"/>
  <match src="type_name [58925,58932]" dest="type_name [58927,58934]"/>
  <match src="assignment_expression [25584,25602]" dest="assignment_expression [25584,25602]"/>
  <match src="identifier: blackListMap [73493,73505]" dest="identifier: blackListMap [73258,73270]"/>
  <match src="identifier: timeElapsed [107850,107861]" dest="identifier: timeElapsed [107774,107785]"/>
  <match src="returns: returns [8836,8843]" dest="returns: returns [8836,8843]"/>
  <match src="}: } [50791,50792]" dest="}: } [50793,50794]"/>
  <match src="{: { [10132,10133]" dest="{: { [10132,10133]"/>
  <match src="type_name [43600,43607]" dest="type_name [43600,43607]"/>
  <match src="assignment_expression [95815,95910]" dest="assignment_expression [95118,95177]"/>
  <match src="call_expression [102564,102600]" dest="call_expression [102488,102524]"/>
  <match src="}: } [108611,108612]" dest="}: } [108535,108536]"/>
  <match src="address: address [217,224]" dest="address: address [217,224]"/>
  <match src="expression_statement [70104,70133]" dest="expression_statement [69815,69844]"/>
  <match src="uint256: uint256 [10963,10970]" dest="uint256: uint256 [10963,10970]"/>
  <match src="identifier: sub [46900,46903]" dest="identifier: sub [47142,47145]"/>
  <match src="member_expression [79085,79108]" dest="member_expression [79248,79271]"/>
  <match src="call_struct_argument [71438,71472]" dest="call_struct_argument [71149,71183]"/>
  <match src="event_paramater [66748,66762]" dest="event_paramater [67001,67015]"/>
  <match src="identifier: name_ [49566,49571]" dest="identifier: name_ [49568,49573]"/>
  <match src="solidity_version_comparison_operator [19991,19994]" dest="solidity_version_comparison_operator [19991,19994]"/>
  <match src="return_type_definition [39483,39497]" dest="return_type_definition [39483,39497]"/>
  <match src="identifier: nftId [66956,66961]" dest="identifier: nftId [67209,67214]"/>
  <match src="assignment_expression [97999,98157]" dest="assignment_expression [96764,96922]"/>
  <match src="identifier: errorMessage [10998,11010]" dest="identifier: errorMessage [10998,11010]"/>
  <match src="return_statement [60970,60986]" dest="return_statement [60972,60988]"/>
  <match src="[: [ [93157,93158]" dest="[: [ [92805,92806]"/>
  <match src="=: = [105034,105035]" dest="=: = [104958,104959]"/>
  <match src="type_name [32665,32672]" dest="type_name [32665,32672]"/>
  <match src="identifier: IERC20 [63100,63106]" dest="identifier: IERC20 [63102,63108]"/>
  <match src="memory: memory [17019,17025]" dest="memory: memory [17019,17025]"/>
  <match src="type_name [7685,7692]" dest="type_name [7685,7692]"/>
  <match src="member_expression [83318,83343]" dest="member_expression [84303,84328]"/>
  <match src="(: ( [107714,107715]" dest="(: ( [107638,107639]"/>
  <match src="identifier: xx [29128,29130]" dest="identifier: xx [29128,29130]"/>
  <match src="function_body [54852,55304]" dest="function_body [54854,55306]"/>
  <match src="identifier: r1 [29891,29893]" dest="identifier: r1 [29891,29893]"/>
  <match src="}: } [91016,91017]" dest="}: } [92041,92042]"/>
  <match src="uint256: uint256 [88598,88605]" dest="uint256: uint256 [89446,89453]"/>
  <match src="(: ( [9419,9420]" dest="(: ( [9419,9420]"/>
  <match src=",: , [25993,25994]" dest=",: , [25993,25994]"/>
  <match src="call_expression [86569,86633]" dest="call_expression [87857,87921]"/>
  <match src="identifier: _verifyCallResult [18089,18106]" dest="identifier: _verifyCallResult [18089,18106]"/>
  <match src="member_expression [76233,76245]" dest="member_expression [75749,75761]"/>
  <match src="call_argument [87369,87384]" dest="call_argument [88530,88545]"/>
  <match src="=: = [61064,61065]" dest="=: = [61066,61067]"/>
  <match src="binary_expression [35003,35024]" dest="binary_expression [35003,35024]"/>
  <match src="identifier: self [33991,33995]" dest="identifier: self [33991,33995]"/>
  <match src="string [16313,16356]" dest="string [16313,16356]"/>
  <match src="string: string [49803,49809]" dest="string: string [49805,49811]"/>
  <match src="): ) [85316,85317]" dest="): ) [86616,86617]"/>
  <match src="identifier: r [29797,29798]" dest="identifier: r [29797,29798]"/>
  <match src="primitive_type [46102,46109]" dest="primitive_type [46104,46111]"/>
  <match src="returns: returns [50741,50748]" dest="returns: returns [50743,50750]"/>
  <match src="identifier: _pid [85393,85397]" dest="identifier: _pid [86693,86697]"/>
  <match src="visibility [49061,49068]" dest="visibility [49063,49070]"/>
  <match src="memory: memory [18782,18788]" dest="memory: memory [18782,18788]"/>
  <match src="binary_expression [106561,106596]" dest="binary_expression [106485,106520]"/>
  <match src="primitive_type [15188,15195]" dest="primitive_type [15188,15195]"/>
  <match src="call_argument [77640,77648]" dest="call_argument [77080,77088]"/>
  <match src="): ) [59345,59346]" dest="): ) [59347,59348]"/>
  <match src="visibility [96100,96108]" dest="visibility [95410,95418]"/>
  <match src="binary_expression [104648,104670]" dest="binary_expression [104572,104594]"/>
  <match src="{: { [46059,46060]" dest="{: { [46061,46062]"/>
  <match src="expression_statement [57900,57922]" dest="expression_statement [57902,57924]"/>
  <match src="=: = [75812,75813]" dest="=: = [75328,75329]"/>
  <match src="number_literal: 0 [109336,109337]" dest="number_literal: 0 [109260,109261]"/>
  <match src="): ) [87910,87911]" dest="): ) [89071,89072]"/>
  <match src="primitive_type [69642,69646]" dest="primitive_type [69353,69357]"/>
  <match src=",: , [68598,68599]" dest=",: , [68470,68471]"/>
  <match src="call_expression [52776,52788]" dest="call_expression [52778,52790]"/>
  <match src="identifier: newOriginWeight [81391,81406]" dest="identifier: newOriginWeight [82080,82095]"/>
  <match src="(: ( [45576,45577]" dest="(: ( [45578,45579]"/>
  <match src="identifier: numCheckpoints [61794,61808]" dest="identifier: numCheckpoints [61796,61810]"/>
  <match src="external: external [71695,71703]" dest="external: external [71406,71414]"/>
  <match src="): ) [104193,104194]" dest="): ) [104117,104118]"/>
  <match src="call_expression [106427,106467]" dest="call_expression [106351,106391]"/>
  <match src="parenthesized_expression [29633,29644]" dest="parenthesized_expression [29633,29644]"/>
  <match src="identifier: undistributeDividend [74107,74127]" dest="identifier: _undistributeDividend [73837,73858]"/>
  <match src="primitive_type [40552,40556]" dest="primitive_type [40552,40556]"/>
  <match src="): ) [109337,109338]" dest="): ) [109261,109262]"/>
  <match src="++: ++ [93849,93851]" dest="++: ++ [93495,93497]"/>
  <match src="number_literal: 0 [36045,36046]" dest="number_literal: 0 [36045,36046]"/>
  <match src="type_name [38898,38902]" dest="type_name [38898,38902]"/>
  <match src="(: ( [25638,25639]" dest="(: ( [25638,25639]"/>
  <match src="number_literal: 0 [84011,84012]" dest="number_literal: 0 [84540,84541]"/>
  <match src="}: } [109690,109691]" dest="}: } [109614,109615]"/>
  <match src="visibility [49160,49167]" dest="visibility [49162,49169]"/>
  <match src="comment: // * 2^-224 [35199,35210]" dest="comment: // * 2^-224 [35199,35210]"/>
  <match src="(: ( [34364,34365]" dest="(: ( [34364,34365]"/>
  <match src="identifier: newAllowance [22129,22141]" dest="identifier: newAllowance [22129,22141]"/>
  <match src="comment: // decode a UQ144x112 into a uint144 by truncating after the radix point [33539,33611]" dest="comment: // decode a UQ144x112 into a uint144 by truncating after the radix point [33539,33611]"/>
  <match src="&amp;: &amp; [31387,31388]" dest="&amp;: &amp; [31387,31388]"/>
  <match src="expression_statement [103670,103707]" dest="expression_statement [103594,103631]"/>
  <match src="&quot;: &quot; [45330,45331]" dest="&quot;: &quot; [45332,45333]"/>
  <match src="identifier: updateAfterModifyStartBlock [45991,46018]" dest="identifier: updateAfterModifyStartBlock [45993,46020]"/>
  <match src="[: [ [60573,60574]" dest="[: [ [60575,60576]"/>
  <match src="): ) [41353,41354]" dest="): ) [41353,41354]"/>
  <match src="identifier: upper [60694,60699]" dest="identifier: upper [60696,60701]"/>
  <match src="address: address [38612,38619]" dest="address: address [38612,38619]"/>
  <match src="binary_expression [30961,30969]" dest="binary_expression [30961,30969]"/>
  <match src="identifier: msgSender [25593,25602]" dest="identifier: msgSender [25593,25602]"/>
  <match src="): ) [36215,36216]" dest="): ) [36215,36216]"/>
  <match src=".: . [99821,99822]" dest=".: . [98013,98014]"/>
  <match src="member_expression [34930,34938]" dest="member_expression [34930,34938]"/>
  <match src="): ) [76413,76414]" dest="): ) [75929,75930]"/>
  <match src="return_statement [9538,9551]" dest="return_statement [9538,9551]"/>
  <match src="identifier: account [60574,60581]" dest="identifier: account [60576,60583]"/>
  <match src=",: , [68693,68694]" dest=",: , [68526,68527]"/>
  <match src="variable_declaration_statement [37034,37091]" dest="variable_declaration_statement [37034,37091]"/>
  <match src="=: = [74258,74259]" dest="=: = [74045,74046]"/>
  <match src="visibility [58604,58612]" dest="visibility [58606,58614]"/>
  <match src="&gt;&gt;=: &gt;&gt;= [30394,30397]" dest="&gt;&gt;=: &gt;&gt;= [30394,30397]"/>
  <match src=".: . [60483,60484]" dest=".: . [60485,60486]"/>
  <match src="type_name [75504,75511]" dest="type_name [75020,75027]"/>
  <match src="identifier: r [31363,31364]" dest="identifier: r [31363,31364]"/>
  <match src="[: [ [98603,98604]" dest="[: [ [97368,97369]"/>
  <match src="function_body [45232,45478]" dest="function_body [45234,45480]"/>
  <match src="identifier: user [82496,82500]" dest="identifier: user [83334,83338]"/>
  <match src="visibility [45215,45223]" dest="visibility [45217,45225]"/>
  <match src="number_literal: 0 [77883,77884]" dest="number_literal: 0 [77118,77119]"/>
  <match src="call_expression [56373,56440]" dest="call_expression [56375,56442]"/>
  <match src="): ) [25803,25804]" dest="): ) [25803,25804]"/>
  <match src="]: ] [47352,47353]" dest="]: ] [47354,47355]"/>
  <match src="}: } [97861,97862]" dest="}: } [96626,96627]"/>
  <match src="): ) [41612,41613]" dest="): ) [41612,41613]"/>
  <match src="+: + [29667,29668]" dest="+: + [29667,29668]"/>
  <match src="identifier: x [29731,29732]" dest="identifier: x [29731,29732]"/>
  <match src="comment: // File: contracts/ShardingDAOMining.sol [62891,62931]" dest="comment: // File: contracts/ShardingDAOMining.sol [62893,62933]"/>
  <match src="identifier: _price [107756,107762]" dest="identifier: _price [107680,107686]"/>
  <match src="bool: bool [5309,5313]" dest="bool: bool [5309,5313]"/>
  <match src="identifier: _nftPoolId [69555,69565]" dest="identifier: _nftPoolId [69266,69276]"/>
  <match src=".: . [97083,97084]" dest=".: . [95848,95849]"/>
  <match src=",: , [60109,60110]" dest=",: , [60111,60112]"/>
  <match src="identifier: safeSHARDTransfer [83743,83760]" dest="identifier: safeSHARDTransfer [85475,85492]"/>
  <match src="external: external [40169,40177]" dest="external: external [40169,40177]"/>
  <match src="external: external [3890,3898]" dest="external: external [3890,3898]"/>
  <match src="): ) [35113,35114]" dest="): ) [35113,35114]"/>
  <match src="view: view [46188,46192]" dest="view: view [46190,46194]"/>
  <match src="visibility [32752,32759]" dest="visibility [32752,32759]"/>
  <match src="(: ( [19304,19305]" dest="(: ( [19304,19305]"/>
  <match src="identifier: add [89891,89894]" dest="identifier: add [91138,91141]"/>
  <match src="expression_statement [101502,101558]" dest="expression_statement [101237,101295]"/>
  <match src="): ) [29501,29502]" dest="): ) [29501,29502]"/>
  <match src="variable_declaration [88598,88615]" dest="variable_declaration [89446,89463]"/>
  <match src="): ) [60261,60262]" dest="): ) [60263,60264]"/>
  <match src="(: ( [23358,23359]" dest="(: ( [23358,23359]"/>
  <match src="string [59552,59581]" dest="string [59554,59583]"/>
  <match src="comment: // update reward vairables for a pool [76888,76925]" dest="comment: // update reward vairables for a pool [76404,76441]"/>
  <match src="block_statement [37235,37451]" dest="block_statement [37235,37451]"/>
  <match src=".: . [76481,76482]" dest=".: . [75997,75998]"/>
  <match src="member_expression [69519,69534]" dest="member_expression [69230,69245]"/>
  <match src="function: function [94048,94056]" dest="function: function [93694,93702]"/>
  <match src="type_name [104969,104982]" dest="type_name [104893,104906]"/>
  <match src="address: address [20612,20619]" dest="address: address [20612,20619]"/>
  <match src="=: = [59904,59905]" dest="=: = [59906,59907]"/>
  <match src="identifier: require [56373,56380]" dest="identifier: require [56375,56382]"/>
  <match src="variable_declaration_tuple [16998,17037]" dest="variable_declaration_tuple [16998,17037]"/>
  <match src="variable_declaration [27653,27662]" dest="variable_declaration [27653,27662]"/>
  <match src="&gt;=: &gt;= [78362,78364]" dest="&gt;=: &gt;= [77874,77876]"/>
  <match src=".: . [79219,79220]" dest=".: . [79374,79375]"/>
  <match src="(: ( [17873,17874]" dest="(: ( [17873,17874]"/>
  <match src="identifier: tx [47290,47292]" dest="identifier: tx [47292,47294]"/>
  <match src="(: ( [106658,106659]" dest="(: ( [106582,106583]"/>
  <match src="if_statement [105176,105291]" dest="if_statement [105100,105215]"/>
  <match src="binary_expression [75634,75655]" dest="binary_expression [75150,75171]"/>
  <match src="parameter [46256,46277]" dest="parameter [46258,46279]"/>
  <match src="): ) [92948,92949]" dest="): ) [92596,92597]"/>
  <match src="parameter [40345,40370]" dest="parameter [40345,40370]"/>
  <match src="identifier: _lockTime [79835,79844]" dest="identifier: _lockTime [80420,80429]"/>
  <match src="=: = [84982,84983]" dest="=: = [86282,86283]"/>
  <match src="expression_statement [52004,52044]" dest="expression_statement [52006,52046]"/>
  <match src="uint256: uint256 [11718,11725]" dest="uint256: uint256 [11718,11725]"/>
  <match src="pure: pure [11777,11781]" dest="pure: pure [11777,11781]"/>
  <match src=",: , [96081,96082]" dest=",: , [95391,95392]"/>
  <match src="binary_expression [89707,89763]" dest="binary_expression [90949,91005]"/>
  <match src="parameter [39358,39365]" dest="parameter [39358,39365]"/>
  <match src="type_name [49573,49579]" dest="type_name [49575,49581]"/>
  <match src="return_statement [50041,50056]" dest="return_statement [50043,50058]"/>
  <match src="identifier: _fromBlock [102888,102898]" dest="identifier: _fromBlock [102812,102822]"/>
  <match src="array_access [62499,62516]" dest="array_access [62501,62518]"/>
  <match src="identifier: amount [55289,55295]" dest="identifier: amount [55291,55297]"/>
  <match src="visibility [5926,5934]" dest="visibility [5926,5934]"/>
  <match src="(: ( [66591,66592]" dest="(: ( [66844,66845]"/>
  <match src="): ) [73754,73755]" dest="): ) [73550,73551]"/>
  <match src="[: [ [93968,93969]" dest="[: [ [93614,93615]"/>
  <match src="==: == [85732,85734]" dest="==: == [87032,87034]"/>
  <match src="bool: bool [42881,42885]" dest="bool: bool [42881,42885]"/>
  <match src=",: , [89282,89283]" dest=",: , [90207,90208]"/>
  <match src="type_name [80236,80243]" dest="type_name [80856,80863]"/>
  <match src="identifier: recipient [52601,52610]" dest="identifier: recipient [52603,52612]"/>
  <match src="identifier: recipient [52696,52705]" dest="identifier: recipient [52698,52707]"/>
  <match src="indexed: indexed [4351,4358]" dest="indexed: indexed [4351,4358]"/>
  <match src="): ) [25765,25766]" dest="): ) [25765,25766]"/>
  <match src="{: { [31557,31558]" dest="{: { [31557,31558]"/>
  <match src="call_argument [82773,82777]" dest="call_argument [83611,83615]"/>
  <match src=",: , [68408,68409]" dest=",: , [68420,68421]"/>
  <match src="member_expression [84303,84320]" dest="member_expression [84832,84849]"/>
  <match src="(: ( [44195,44196]" dest="(: ( [44197,44198]"/>
  <match src="return: return [24609,24615]" dest="return: return [24609,24615]"/>
  <match src="call_expression [74107,74149]" dest="call_expression [73837,73880]"/>
  <match src="&lt;&lt;=: &lt;&lt;= [29288,29291]" dest="&lt;&lt;=: &lt;&lt;= [29288,29291]"/>
  <match src="uint256: uint256 [70666,70673]" dest="uint256: uint256 [70377,70384]"/>
  <match src="number_literal: 1383 [68195,68199]" dest="number_literal: 1383 [68330,68334]"/>
  <match src="return_statement [33087,33130]" dest="return_statement [33087,33130]"/>
  <match src=".: . [80393,80394]" dest=".: . [81013,81014]"/>
  <match src="identifier: other [36486,36491]" dest="identifier: other [36486,36491]"/>
  <match src=".: . [77299,77300]" dest=".: . [76739,76740]"/>
  <match src="(: ( [29406,29407]" dest="(: ( [29406,29407]"/>
  <match src="primitive_type [72244,72251]" dest="primitive_type [71933,71940]"/>
  <match src="identifier: a [11857,11858]" dest="identifier: a [11857,11858]"/>
  <match src="identifier: userWeight [83975,83985]" dest="identifier: userWeight [84504,84514]"/>
  <match src="revert_statement [19849,19870]" dest="revert_statement [19849,19870]"/>
  <match src=",: , [85237,85238]" dest=",: , [86537,86538]"/>
  <match src="{: { [69719,69720]" dest="{: { [69430,69431]"/>
  <match src="function_definition [27905,28293]" dest="function_definition [27905,28293]"/>
  <match src="): ) [83121,83122]" dest="): ) [83900,83901]"/>
  <match src="identifier: _devDividend [47069,47081]" dest="identifier: _devDividend [46456,46468]"/>
  <match src="parameter [59642,59657]" dest="parameter [59644,59659]"/>
  <match src="address: address [66592,66599]" dest="address: address [66845,66852]"/>
  <match src="visibility [104487,104495]" dest="visibility [104411,104419]"/>
  <match src="primitive_type [64332,64339]" dest="primitive_type [64334,64341]"/>
  <match src="): ) [60609,60610]" dest="): ) [60611,60612]"/>
  <match src="comment: // overflow is desired [107502,107524]" dest="comment: // overflow is desired [107426,107448]"/>
  <match src="identifier: amount [57211,57217]" dest="identifier: amount [57213,57219]"/>
  <match src="=: = [29755,29756]" dest="=: = [29755,29756]"/>
  <match src="assignment_expression [84160,84211]" dest="assignment_expression [84689,84740]"/>
  <match src="address: address [63519,63526]" dest="address: address [63521,63528]"/>
  <match src="identifier: getReserves [106079,106090]" dest="identifier: getReserves [106003,106014]"/>
  <match src="type_name [66151,66178]" dest="type_name [66169,66196]"/>
  <match src="[: [ [57418,57419]" dest="[: [ [57420,57421]"/>
  <match src="number_literal: 0 [89203,89204]" dest="number_literal: 0 [90128,90129]"/>
  <match src="expression_statement [100625,100679]" dest="expression_statement [100201,100259]"/>
  <match src="primitive_type [31610,31616]" dest="primitive_type [31610,31616]"/>
  <match src="member_expression [98626,98660]" dest="member_expression [97391,97425]"/>
  <match src="uint32: uint32 [107304,107310]" dest="uint32: uint32 [107228,107234]"/>
  <match src="call_argument [101056,101070]" dest="call_argument [82423,82437]"/>
  <match src="type_name [33058,33067]" dest="type_name [33058,33067]"/>
  <match src="yul_identifier [19688,19703]" dest="yul_identifier [19688,19703]"/>
  <match src="type_name [62231,62238]" dest="type_name [62233,62240]"/>
  <match src="comment: // Info of each pool. [64527,64548]" dest="comment: // Info of each pool. [64529,64550]"/>
  <match src=",: , [59478,59479]" dest=",: , [59480,59481]"/>
  <match src="identifier: accumulativeDividend [83295,83315]" dest="identifier: accumulativeDividend [84280,84300]"/>
  <match src="identifier: oracleWeight [92392,92404]" dest="identifier: oracleWeight [87304,87316]"/>
  <match src="variable_declaration [80417,80438]" dest="variable_declaration [101538,101560]"/>
  <match src=",: , [39676,39677]" dest=",: , [39676,39677]"/>
  <match src="identifier: _pending [46110,46118]" dest="identifier: _pending [46112,46120]"/>
  <match src="visibility [37959,37967]" dest="visibility [37959,37967]"/>
  <match src="return: return [77167,77173]" dest="return: return [77952,77958]"/>
  <match src="constant: constant [32868,32876]" dest="constant: constant [32868,32876]"/>
  <match src="unary_expression [37131,37133]" dest="unary_expression [37131,37133]"/>
  <match src="(: ( [80557,80558]" dest="(: ( [81242,81243]"/>
  <match src="function_definition [49758,49849]" dest="function_definition [49760,49851]"/>
  <match src="type_name [49803,49809]" dest="type_name [49805,49811]"/>
  <match src="type_name [89823,89830]" dest="type_name [91065,91072]"/>
  <match src="identifier: cachedPrice [107224,107235]" dest="identifier: cachedPrice [107148,107159]"/>
  <match src="(: ( [76319,76320]" dest="(: ( [75835,75836]"/>
  <match src="): ) [24305,24306]" dest="): ) [24305,24306]"/>
  <match src="identifier: value [36315,36320]" dest="identifier: value [36315,36320]"/>
  <match src="false: false [5685,5690]" dest="false: false [5685,5690]"/>
  <match src="!=: != [6273,6275]" dest="!=: != [6273,6275]"/>
  <match src="type_name [97449,97456]" dest="type_name [96214,96221]"/>
  <match src="call_argument [38095,38118]" dest="call_argument [38095,38118]"/>
  <match src=",: , [37298,37299]" dest=",: , [37298,37299]"/>
  <match src="/: / [28191,28192]" dest="/: / [28191,28192]"/>
  <match src="member_expression [89707,89727]" dest="member_expression [90949,90969]"/>
  <match src=".: . [97960,97961]" dest=".: . [96725,96726]"/>
  <match src="identifier: r [29286,29287]" dest="identifier: r [29286,29287]"/>
  <match src="identifier: center [61066,61072]" dest="identifier: center [61068,61074]"/>
  <match src="identifier: x [31252,31253]" dest="identifier: x [31252,31253]"/>
  <match src="assignment_expression [31363,31370]" dest="assignment_expression [31363,31370]"/>
  <match src=".: . [98272,98273]" dest=".: . [97037,97038]"/>
  <match src="=: = [93301,93302]" dest="=: = [92949,92950]"/>
  <match src="): ) [50755,50756]" dest="): ) [50757,50758]"/>
  <match src="identifier: _isContractSender [46318,46335]" dest="identifier: _isContractSender [46560,46577]"/>
  <match src="identifier: fee [46723,46726]" dest="identifier: fee [46965,46968]"/>
  <match src="uint256: uint256 [63676,63683]" dest="uint256: uint256 [63678,63685]"/>
  <match src="(: ( [103985,103986]" dest="(: ( [103909,103910]"/>
  <match src="type_name [52577,52584]" dest="type_name [52579,52586]"/>
  <match src="assignment_expression [83930,83986]" dest="assignment_expression [84454,84515]"/>
  <match src="): ) [33074,33075]" dest="): ) [33074,33075]"/>
  <match src="(: ( [21603,21604]" dest="(: ( [21603,21604]"/>
  <match src="binary_expression [8171,8177]" dest="binary_expression [8171,8177]"/>
  <match src="binary_expression [35587,35671]" dest="binary_expression [35587,35671]"/>
  <match src="(: ( [75948,75949]" dest="(: ( [75464,75465]"/>
  <match src="type_name [64444,64450]" dest="type_name [64446,64452]"/>
  <match src="abstract: abstract [254,262]" dest="abstract: abstract [254,262]"/>
  <match src="primitive_type [80463,80470]" dest="primitive_type [81148,81155]"/>
  <match src="&lt;=: &lt;= [86112,86114]" dest="&lt;=: &lt;= [87399,87401]"/>
  <match src="': ' [34404,34405]" dest="': ' [34404,34405]"/>
  <match src="identifier: _pending [89500,89508]" dest="identifier: _pending [90742,90750]"/>
  <match src="primitive_type [64209,64216]" dest="primitive_type [64211,64218]"/>
  <match src="primitive_type [54050,54057]" dest="primitive_type [54052,54059]"/>
  <match src="binary_expression [54952,54975]" dest="binary_expression [54954,54977]"/>
  <match src=",: , [90741,90742]" dest=",: , [91766,91767]"/>
  <match src="(: ( [84839,84840]" dest="(: ( [85970,85971]"/>
  <match src="[: [ [89131,89132]" dest="[: [ [89979,89980]"/>
  <match src="return_type_definition [50006,50029]" dest="return_type_definition [50008,50031]"/>
  <match src="user_defined_type [37571,37580]" dest="user_defined_type [37571,37580]"/>
  <match src=".: . [90992,90993]" dest=".: . [92017,92018]"/>
  <match src="): ) [76699,76700]" dest="): ) [76215,76216]"/>
  <match src="identifier: _balances [55190,55199]" dest="identifier: _balances [55192,55201]"/>
  <match src="pure: pure [38825,38829]" dest="pure: pure [38825,38829]"/>
  <match src=",: , [17128,17129]" dest=",: , [17128,17129]"/>
  <match src="]: ] [95843,95844]" dest="]: ] [95082,95083]"/>
  <match src="[: [ [62510,62511]" dest="[: [ [62512,62513]"/>
  <match src="return: return [6279,6285]" dest="return: return [6279,6285]"/>
  <match src="=: = [73457,73458]" dest="=: = [73222,73223]"/>
  <match src="return_statement [5402,5419]" dest="return_statement [5402,5419]"/>
  <match src="type_name [63368,63375]" dest="type_name [63370,63377]"/>
  <match src="expression_statement [44887,44900]" dest="expression_statement [44889,44902]"/>
  <match src="[: [ [72157,72158]" dest="[: [ [71791,71792]"/>
  <match src="&lt;: &lt; [28217,28218]" dest="&lt;: &lt; [28217,28218]"/>
  <match src="call_argument [36974,36975]" dest="call_argument [36974,36975]"/>
  <match src="identifier: sqrt [28714,28718]" dest="identifier: sqrt [28714,28718]"/>
  <match src="identifier: r [29920,29921]" dest="identifier: r [29920,29921]"/>
  <match src="': ' [35754,35755]" dest="': ' [35754,35755]"/>
  <match src="function: function [35912,35920]" dest="function: function [35912,35920]"/>
  <match src="augmented_assignment_expression [31421,31429]" dest="augmented_assignment_expression [31421,31429]"/>
  <match src="): ) [73290,73291]" dest="): ) [73055,73056]"/>
  <match src="uint256: uint256 [60766,60773]" dest="uint256: uint256 [60768,60775]"/>
  <match src="expression_statement [45936,45967]" dest="expression_statement [45938,45969]"/>
  <match src="(: ( [82018,82019]" dest="(: ( [82856,82857]"/>
  <match src="type_name [59967,59974]" dest="type_name [59969,59976]"/>
  <match src="parameter [6514,6523]" dest="parameter [6514,6523]"/>
  <match src="identifier: ShardingDAOMining [62993,63010]" dest="identifier: ShardingDAOMining [62995,63012]"/>
  <match src="identifier: _pid [89083,89087]" dest="identifier: _pid [89931,89935]"/>
  <match src="type_name [64264,64268]" dest="type_name [64266,64270]"/>
  <match src="identifier: user [83997,84001]" dest="identifier: user [84526,84530]"/>
  <match src="primitive_type [95471,95478]" dest="primitive_type [94619,94626]"/>
  <match src="(: ( [42115,42116]" dest="(: ( [42115,42116]"/>
  <match src="type_name [98521,98535]" dest="type_name [97286,97300]"/>
  <match src="private: private [78266,78273]" dest="private: private [77399,77406]"/>
  <match src="emit: emit [62644,62648]" dest="emit: emit [62646,62650]"/>
  <match src="(: ( [14097,14098]" dest="(: ( [14097,14098]"/>
  <match src="identifier: updatePoolDividend [86182,86200]" dest="identifier: updatePoolDividend [87470,87488]"/>
  <match src="string_literal [72092,72105]" dest="string_literal [71645,71658]"/>
  <match src="member_expression [89899,89911]" dest="member_expression [91146,91158]"/>
  <match src="(: ( [44917,44918]" dest="(: ( [44919,44920]"/>
  <match src="call_argument [61408,61409]" dest="call_argument [61410,61411]"/>
  <match src="memory: memory [92685,92691]" dest="memory: memory [92333,92339]"/>
  <match src=",: , [59550,59551]" dest=",: , [59552,59553]"/>
  <match src=".: . [83023,83024]" dest=".: . [83802,83803]"/>
  <match src="identifier: poolCount [93211,93220]" dest="identifier: poolCount [92859,92868]"/>
  <match src="function_definition [12651,13073]" dest="function_definition [12651,13073]"/>
  <match src="=: = [89121,89122]" dest="=: = [89969,89970]"/>
  <match src="return: return [35801,35807]" dest="return: return [35801,35807]"/>
  <match src="(: ( [105277,105278]" dest="(: ( [105201,105202]"/>
  <match src="primitive_type [27521,27528]" dest="primitive_type [27521,27528]"/>
  <match src="array_access [73574,73594]" dest="array_access [73339,73359]"/>
  <match src="identifier: uq112x112 [37571,37580]" dest="identifier: uq112x112 [37571,37580]"/>
  <match src="=: = [29786,29787]" dest="=: = [29786,29787]"/>
  <match src="=: = [75759,75760]" dest="=: = [75275,75276]"/>
  <match src="primitive_type [49803,49809]" dest="primitive_type [49805,49811]"/>
  <match src="identifier: require [36307,36314]" dest="identifier: require [36307,36314]"/>
  <match src="call_expression [88652,88676]" dest="call_expression [89500,89524]"/>
  <match src="call_argument [70559,70574]" dest="call_argument [70270,70285]"/>
  <match src="address: address [934,941]" dest="address: address [934,941]"/>
  <match src="function: function [38796,38804]" dest="function: function [38796,38804]"/>
  <match src="identifier: checkAdmin [75564,75574]" dest="identifier: checkAdmin [75080,75090]"/>
  <match src="identifier: _feeRateNumerator [44955,44972]" dest="identifier: _feeRateNumerator [44957,44974]"/>
  <match src="=: = [47184,47185]" dest="=: = [47186,47187]"/>
  <match src="identifier: amountfeeRateDenominator [43721,43745]" dest="identifier: amountfeeRateDenominator [43721,43745]"/>
  <match src="visibility [66067,66073]" dest="visibility [66081,66089]"/>
  <match src="uint256: uint256 [79250,79257]" dest="uint256: uint256 [79405,79412]"/>
  <match src="primitive_type [102900,102907]" dest="primitive_type [102824,102831]"/>
  <match src="identifier: transfer [96281,96289]" dest="identifier: transfer [95591,95599]"/>
  <match src="identifier: _pairInfo [107145,107154]" dest="identifier: _pairInfo [107069,107078]"/>
  <match src="==: == [8173,8175]" dest="==: == [8173,8175]"/>
  <match src="call_expression [75587,75696]" dest="call_expression [75103,75212]"/>
  <match src="call_argument [84482,84486]" dest="call_argument [85017,85021]"/>
  <match src="call_argument [28215,28220]" dest="call_argument [28215,28220]"/>
  <match src="(: ( [31833,31834]" dest="(: ( [31833,31834]"/>
  <match src="if: if [82095,82097]" dest="if: if [82933,82935]"/>
  <match src="solidity_version_comparison_operator [24721,24723]" dest="solidity_version_comparison_operator [24721,24723]"/>
  <match src="return: return [51715,51721]" dest="return: return [51717,51723]"/>
  <match src="function: function [102856,102864]" dest="function: function [102780,102788]"/>
  <match src="return_statement [38054,38122]" dest="return_statement [38054,38122]"/>
  <match src="primitive_type [38026,38033]" dest="primitive_type [38026,38033]"/>
  <match src="virtual: virtual [51076,51083]" dest="virtual: virtual [51078,51085]"/>
  <match src="if: if [73186,73188]" dest="if: if [72951,72953]"/>
  <match src="[: [ [62344,62345]" dest="[: [ [62346,62347]"/>
  <match src="(: ( [94249,94250]" dest="(: ( [93895,93896]"/>
  <match src="state_variable_declaration [65893,65935]" dest="state_variable_declaration [65903,65945]"/>
  <match src=",: , [69269,69270]" dest=",: , [68980,68981]"/>
  <match src="identifier: user [102448,102452]" dest="identifier: user [102307,102311]"/>
  <match src="binary_expression [31930,31941]" dest="binary_expression [31930,31941]"/>
  <match src="external: external [94081,94089]" dest="external: external [93727,93735]"/>
  <match src="identifier: _pool [84904,84909]" dest="identifier: _pool [86035,86040]"/>
  <match src="): ) [104085,104086]" dest="): ) [104009,104010]"/>
  <match src="member_expression [98015,98106]" dest="member_expression [96780,96871]"/>
  <match src="call_argument [90988,90991]" dest="call_argument [92013,92016]"/>
  <match src="call_argument [97733,97757]" dest="call_argument [96498,96522]"/>
  <match src="identifier: functionCallWithValue [16270,16291]" dest="identifier: functionCallWithValue [16270,16291]"/>
  <match src="type_cast_expression [26500,26510]" dest="type_cast_expression [26500,26510]"/>
  <match src="*: * [33999,34000]" dest="*: * [33999,34000]"/>
  <match src="state_mutability [30233,30237]" dest="state_mutability [30233,30237]"/>
  <match src="visibility [26749,26755]" dest="visibility [26749,26755]"/>
  <match src="identifier: invitorRelationshipInfo [99127,99150]" dest="identifier: invitorRelationshipInfo [99291,99314]"/>
  <match src="identifier: _fromBlock [103342,103352]" dest="identifier: _fromBlock [103266,103276]"/>
  <match src="binary_expression [78338,78373]" dest="binary_expression [77850,77885]"/>
  <match src="]: ] [73812,73813]" dest="]: ] [73608,73609]"/>
  <match src="binary_expression [29320,29333]" dest="binary_expression [29320,29333]"/>
  <match src="parameter [105788,105822]" dest="parameter [105712,105746]"/>
  <match src=".: . [84759,84760]" dest=".: . [85890,85891]"/>
  <match src="identifier: _userDividend [46264,46277]" dest="identifier: _userDividend [46266,46279]"/>
  <match src="): ) [45765,45766]" dest="): ) [45767,45768]"/>
  <match src="return_statement [52857,52869]" dest="return_statement [52859,52871]"/>
  <match src="call_argument [19120,19130]" dest="call_argument [19120,19130]"/>
  <match src=".: . [46523,46524]" dest=".: . [46765,46766]"/>
  <match src="number_literal: 1 [29741,29742]" dest="number_literal: 1 [29741,29742]"/>
  <match src="uint256: uint256 [102900,102907]" dest="uint256: uint256 [102824,102831]"/>
  <match src="block_statement [100610,100690]" dest="block_statement [100186,100447]"/>
  <match src="block_statement [90311,90387]" dest="block_statement [91364,91460]"/>
  <match src="comment: // range: [0, 2**144 - 1] [32504,32529]" dest="comment: // range: [0, 2**144 - 1] [32504,32529]"/>
  <match src="type_name [38145,38150]" dest="type_name [38145,38150]"/>
  <match src="virtual: virtual [45224,45231]" dest="virtual: virtual [45226,45233]"/>
  <match src="return: return [89647,89653]" dest="return: return [90889,90895]"/>
  <match src="): ) [37016,37017]" dest="): ) [37016,37017]"/>
  <match src="primitive_type [6503,6510]" dest="primitive_type [6503,6510]"/>
  <match src=",: , [90537,90538]" dest=",: , [91562,91563]"/>
  <match src="returns: returns [51686,51693]" dest="returns: returns [51688,51695]"/>
  <match src=",: , [106184,106185]" dest=",: , [106108,106109]"/>
  <match src="expression_statement [109202,109207]" dest="expression_statement [109126,109131]"/>
  <match src="is: is [108739,108741]" dest="is: is [108663,108665]"/>
  <match src=",: , [16700,16701]" dest=",: , [16700,16701]"/>
  <match src=",: , [53327,53328]" dest=",: , [53329,53330]"/>
  <match src="): ) [90374,90375]" dest="): ) [91447,91448]"/>
  <match src="}: } [47378,47379]" dest="}: } [47380,47381]"/>
  <match src="identifier: timeElapsed [107441,107452]" dest="identifier: timeElapsed [107365,107376]"/>
  <match src="{: { [14079,14080]" dest="{: { [14079,14080]"/>
  <match src=":: : [72979,72980]" dest=":: : [72661,72662]"/>
  <match src="binary_expression [29824,29829]" dest="binary_expression [29824,29829]"/>
  <match src="number_literal: 128 [30421,30424]" dest="number_literal: 128 [30421,30424]"/>
  <match src="=: = [89510,89511]" dest="=: = [90752,90753]"/>
  <match src="call_expression [36307,36367]" dest="call_expression [36307,36367]"/>
  <match src="): ) [22480,22481]" dest="): ) [22480,22481]"/>
  <match src="): ) [88723,88724]" dest="): ) [89571,89572]"/>
  <match src="identifier: currentBlockTimestamp [41734,41755]" dest="identifier: currentBlockTimestamp [41734,41755]"/>
  <match src="uint256: uint256 [16205,16212]" dest="uint256: uint256 [16205,16212]"/>
  <match src=".: . [98297,98298]" dest=".: . [97062,97063]"/>
  <match src="bool: bool [2383,2387]" dest="bool: bool [2383,2387]"/>
  <match src="=: = [92385,92386]" dest="=: = [87317,87318]"/>
  <match src="call_argument [37668,37712]" dest="call_argument [37668,37712]"/>
  <match src="identifier: _pairInfo [108201,108210]" dest="identifier: _pairInfo [108125,108134]"/>
  <match src="identifier: nCheckpoints [60244,60256]" dest="identifier: nCheckpoints [60246,60258]"/>
  <match src="primitive_type [42738,42745]" dest="primitive_type [42738,42745]"/>
  <match src="(: ( [38813,38814]" dest="(: ( [38813,38814]"/>
  <match src="identifier: fraction [106167,106175]" dest="identifier: fraction [106091,106099]"/>
  <match src="type_name [10123,10130]" dest="type_name [10123,10130]"/>
  <match src="pure: pure [33044,33048]" dest="pure: pure [33044,33048]"/>
  <match src="augmented_assignment_expression [30688,30695]" dest="augmented_assignment_expression [30688,30695]"/>
  <match src="identifier: functionCall [15175,15187]" dest="identifier: functionCall [15175,15187]"/>
  <match src="solidity: solidity [58675,58683]" dest="solidity: solidity [58677,58685]"/>
  <match src="number_literal: 1 [36214,36215]" dest="number_literal: 1 [36214,36215]"/>
  <match src="member_expression [76372,76457]" dest="member_expression [75888,75973]"/>
  <match src="array_access [93403,93414]" dest="array_access [93051,93062]"/>
  <match src="return_statement [17447,17528]" dest="return_statement [17447,17528]"/>
  <match src="member_expression [81231,81246]" dest="member_expression [81920,81935]"/>
  <match src="identifier: target [17885,17891]" dest="identifier: target [17885,17891]"/>
  <match src=".: . [45595,45596]" dest=".: . [45597,45598]"/>
  <match src="identifier: FixedPoint [106988,106998]" dest="identifier: FixedPoint [106912,106922]"/>
  <match src="address: address [88965,88972]" dest="address: address [89813,89820]"/>
  <match src="identifier: mul [46738,46741]" dest="identifier: mul [46980,46983]"/>
  <match src="address: address [40192,40199]" dest="address: address [40192,40199]"/>
  <match src="visibility [100299,100306]" dest="visibility [99640,99647]"/>
  <match src="primitive_type [39554,39558]" dest="primitive_type [39554,39558]"/>
  <match src="type_name [37250,37257]" dest="type_name [37250,37257]"/>
  <match src=".: . [14111,14112]" dest=".: . [14111,14112]"/>
  <match src="identifier: _miner [59791,59797]" dest="identifier: _miner [59793,59799]"/>
  <match src="identifier: _x [36199,36201]" dest="identifier: _x [36199,36201]"/>
  <match src="public: public [1580,1586]" dest="public: public [1580,1586]"/>
  <match src="variable_declaration_statement [21962,22036]" dest="variable_declaration_statement [21962,22036]"/>
  <match src=".: . [86673,86674]" dest=".: . [88314,88315]"/>
  <match src="uint224: uint224 [38281,38288]" dest="uint224: uint224 [38281,38288]"/>
  <match src="=: = [100012,100013]" dest="=: = [98717,98718]"/>
  <match src="expression_statement [29286,29295]" dest="expression_statement [29286,29295]"/>
  <match src="identifier: invitor [87029,87036]" dest="identifier: invitor [88186,88193]"/>
  <match src="type_name [73965,73972]" dest="type_name [73695,73702]"/>
  <match src="): ) [37633,37634]" dest="): ) [37633,37634]"/>
  <match src="identifier: isContract [12660,12670]" dest="identifier: isContract [12660,12670]"/>
  <match src="call_argument [8246,8281]" dest="call_argument [8246,8281]"/>
  <match src="(: ( [97638,97639]" dest="(: ( [96403,96404]"/>
  <match src="call_argument [81001,81098]" dest="call_argument [81688,81785]"/>
  <match src="type_name [15204,15209]" dest="type_name [15204,15209]"/>
  <match src="type_name [58897,58904]" dest="type_name [58899,58906]"/>
  <match src="primitive_type [74169,74176]" dest="primitive_type [73900,73907]"/>
  <match src="identifier: uq112x112 [36144,36153]" dest="identifier: uq112x112 [36144,36153]"/>
  <match src="return: return [85609,85615]" dest="return: return [86909,86915]"/>
  <match src="identifier: removeMiner [59830,59841]" dest="identifier: removeMiner [59832,59843]"/>
  <match src="if_statement [86085,86172]" dest="if_statement [87377,87460]"/>
  <match src="): ) [96945,96946]" dest="): ) [95710,95711]"/>
  <match src="virtual: virtual [82460,82467]" dest="virtual: virtual [83298,83305]"/>
  <match src="call_expression [84083,84107]" dest="call_expression [84612,84636]"/>
  <match src="type_name [27653,27660]" dest="type_name [27653,27660]"/>
  <match src="call_argument [56647,56653]" dest="call_argument [56649,56655]"/>
  <match src="type_name [106988,107008]" dest="type_name [106912,106932]"/>
  <match src="primitive_type [107434,107440]" dest="primitive_type [107358,107364]"/>
  <match src="): ) [52787,52788]" dest="): ) [52789,52790]"/>
  <match src="number_literal: 1 [60394,60395]" dest="number_literal: 1 [60396,60397]"/>
  <match src="(: ( [45699,45700]" dest="(: ( [45701,45702]"/>
  <match src=",: , [7764,7765]" dest=",: , [7764,7765]"/>
  <match src="primitive_type [16205,16212]" dest="primitive_type [16205,16212]"/>
  <match src="call_argument [59552,59581]" dest="call_argument [59554,59583]"/>
  <match src="identifier: tokenToEthSwap [106452,106466]" dest="identifier: tokenToEthSwap [106376,106390]"/>
  <match src="): ) [36120,36121]" dest="): ) [36120,36121]"/>
  <match src="): ) [18821,18822]" dest="): ) [18821,18822]"/>
  <match src="primitive_type [105131,105137]" dest="primitive_type [105055,105061]"/>
  <match src="identifier: _x [34936,34938]" dest="identifier: _x [34936,34938]"/>
  <match src="memory: memory [92647,92653]" dest="memory: memory [92295,92301]"/>
  <match src="member_expression [42083,42115]" dest="member_expression [42083,42115]"/>
  <match src="(: ( [16788,16789]" dest="(: ( [16788,16789]"/>
  <match src="comment: // 2**224 [32837,32846]" dest="comment: // 2**224 [32837,32846]"/>
  <match src="variable_declaration [87648,87670]" dest="variable_declaration [88809,88831]"/>
  <match src="bool: bool [18007,18011]" dest="bool: bool [18007,18011]"/>
  <match src=",: , [70202,70203]" dest=",: , [69913,69914]"/>
  <match src="expression_statement [87095,87122]" dest="expression_statement [88252,88279]"/>
  <match src="visibility [88980,88987]" dest="visibility [89828,89835]"/>
  <match src="identifier: Approval [4334,4342]" dest="identifier: Approval [4334,4342]"/>
  <match src="-: - [31397,31398]" dest="-: - [31397,31398]"/>
  <match src="!=: != [47287,47289]" dest="!=: != [47289,47291]"/>
  <match src=",: , [22457,22458]" dest=",: , [22457,22458]"/>
  <match src="visibility [62816,62824]" dest="visibility [62818,62826]"/>
  <match src="primitive_type [80417,80424]" dest="primitive_type [101538,101545]"/>
  <match src="identifier: r [29815,29816]" dest="identifier: r [29815,29816]"/>
  <match src="parameter [15626,15652]" dest="parameter [15626,15652]"/>
  <match src="identifier: reserve1 [42563,42571]" dest="identifier: reserve1 [42563,42571]"/>
  <match src="type_name [64742,64776]" dest="type_name [64748,64782]"/>
  <match src="boolean_literal [52864,52868]" dest="boolean_literal [52866,52870]"/>
  <match src="uint64: uint64 [31501,31507]" dest="uint64: uint64 [31501,31507]"/>
  <match src="array_access [85384,85398]" dest="array_access [86684,86698]"/>
  <match src="): ) [30474,30475]" dest="): ) [30474,30475]"/>
  <match src="array_access [89453,89479]" dest="array_access [90695,90721]"/>
  <match src="augmented_assignment_expression [30748,30755]" dest="augmented_assignment_expression [30748,30755]"/>
  <match src="=: = [87534,87535]" dest="=: = [88695,88696]"/>
  <match src="(: ( [14105,14106]" dest="(: ( [14105,14106]"/>
  <match src="): ) [30563,30564]" dest="): ) [30563,30564]"/>
  <match src="comment: /**      * @dev Initializes the contract setting the deployer as the initial owner.      */ [25407,25500]" dest="comment: /**      * @dev Initializes the contract setting the deployer as the initial owner.      */ [25407,25500]"/>
  <match src=",: , [82023,82024]" dest=",: , [82861,82862]"/>
  <match src="(: ( [31823,31824]" dest="(: ( [31823,31824]"/>
  <match src="identifier: safeShiftBits [38219,38232]" dest="identifier: safeShiftBits [38219,38232]"/>
  <match src="identifier: _pairInfo [107815,107824]" dest="identifier: _pairInfo [107739,107748]"/>
  <match src="identifier: account [60457,60464]" dest="identifier: account [60459,60466]"/>
  <match src="}: } [74857,74858]" dest="}: } [74728,74729]"/>
  <match src="number_literal: 0 [57353,57354]" dest="number_literal: 0 [57355,57356]"/>
  <match src=",: , [22071,22072]" dest=",: , [22071,22072]"/>
  <match src="&lt;: &lt; [27388,27389]" dest="&lt;: &lt; [27388,27389]"/>
  <match src="uint256: uint256 [73082,73089]" dest="uint256: uint256 [72847,72854]"/>
  <match src="type_name [66388,66395]" dest="type_name [66408,66415]"/>
  <match src="expression_statement [45064,45111]" dest="expression_statement [45066,45113]"/>
  <match src=",: , [39261,39262]" dest=",: , [39261,39262]"/>
  <match src=",: , [104707,104708]" dest=",: , [104631,104632]"/>
  <match src="call_argument [67269,67270]" dest="call_argument [67516,67517]"/>
  <match src=",: , [71248,71249]" dest=",: , [70959,70960]"/>
  <match src="address: address [71192,71199]" dest="address: address [70903,70910]"/>
  <match src="identifier: pool [86055,86059]" dest="identifier: pool [87347,87351]"/>
  <match src="call_expression [34066,34078]" dest="call_expression [34066,34078]"/>
  <match src="string [36537,36566]" dest="string [36537,36566]"/>
  <match src="call_argument [108445,108446]" dest="call_argument [108369,108370]"/>
  <match src="visibility [7245,7253]" dest="visibility [7245,7253]"/>
  <match src="call_expression [55873,55903]" dest="call_expression [55875,55905]"/>
  <match src="): ) [6523,6524]" dest="): ) [6523,6524]"/>
  <match src="identifier: div [10886,10889]" dest="identifier: div [10886,10889]"/>
  <match src=",: , [89018,89019]" dest=",: , [89866,89867]"/>
  <match src="identifier: _toBlock [103051,103059]" dest="identifier: _toBlock [102975,102983]"/>
  <match src="user_defined_type [94483,94497]" dest="user_defined_type [94129,94143]"/>
  <match src="number_literal: 0 [76672,76673]" dest="number_literal: 0 [76188,76189]"/>
  <match src="&gt;: &gt; [46627,46628]" dest="&gt;: &gt; [46869,46870]"/>
  <match src="): ) [99858,99859]" dest="): ) [98050,98051]"/>
  <match src="]: ] [80005,80006]" dest="]: ] [80590,80591]"/>
  <match src="(: ( [62739,62740]" dest="(: ( [62741,62742]"/>
  <match src="identifier: b [6578,6579]" dest="identifier: b [6578,6579]"/>
  <match src="identifier: uq112x112 [38061,38070]" dest="identifier: uq112x112 [38061,38070]"/>
  <match src="identifier: require [85701,85708]" dest="identifier: require [87001,87008]"/>
  <match src=".: . [72622,72623]" dest=".: . [72314,72315]"/>
  <match src="type_name [39917,39921]" dest="type_name [39917,39921]"/>
  <match src="[: [ [95823,95824]" dest="[: [ [95035,95036]"/>
  <match src="): ) [50925,50926]" dest="): ) [50927,50928]"/>
  <match src="identifier: result [37258,37264]" dest="identifier: result [37258,37264]"/>
  <match src="call_argument [31397,31399]" dest="call_argument [31397,31399]"/>
  <match src="}: } [29476,29477]" dest="}: } [29476,29477]"/>
  <match src="number_literal: 112 [38115,38118]" dest="number_literal: 112 [38115,38118]"/>
  <match src="identifier: PoolInfo [85360,85368]" dest="identifier: PoolInfo [86660,86668]"/>
  <match src="return: return [102747,102753]" dest="return: return [102671,102677]"/>
  <match src=",: , [107302,107303]" dest=",: , [107226,107227]"/>
  <match src="primitive_type [20801,20808]" dest="primitive_type [20801,20808]"/>
  <match src="(: ( [98276,98277]" dest="(: ( [97041,97042]"/>
  <match src="identifier: add [80279,80282]" dest="identifier: add [80899,80902]"/>
  <match src="&lt;=: &lt;= [60407,60409]" dest="&lt;=: &lt;= [60409,60411]"/>
  <match src="): ) [39333,39334]" dest="): ) [39333,39334]"/>
  <match src="identifier: _pairInfo [106703,106712]" dest="identifier: _pairInfo [106627,106636]"/>
  <match src="string: string [10072,10078]" dest="string: string [10072,10078]"/>
  <match src="uint256: uint256 [65893,65900]" dest="uint256: uint256 [65903,65910]"/>
  <match src="function_definition [51368,51543]" dest="function_definition [51370,51545]"/>
  <match src="modifier: modifier [25930,25938]" dest="modifier: modifier [25930,25938]"/>
  <match src="identifier: DelegationStorage [294,311]" dest="identifier: DelegationStorage [294,311]"/>
  <match src="identifier: _nftShard [68901,68910]" dest="identifier: _nftShard [68612,68621]"/>
  <match src="call_argument [47144,47147]" dest="call_argument [46531,46534]"/>
  <match src="(: ( [104583,104584]" dest="(: ( [104507,104508]"/>
  <match src="binary_expression [27556,27562]" dest="binary_expression [27556,27562]"/>
  <match src="(: ( [73654,73655]" dest="(: ( [73419,73420]"/>
  <match src="binary_expression [30275,30280]" dest="binary_expression [30275,30280]"/>
  <match src="return_type_definition [39194,39208]" dest="return_type_definition [39194,39208]"/>
  <match src="number_literal: 0 [8176,8177]" dest="number_literal: 0 [8176,8177]"/>
  <match src=".: . [84930,84931]" dest=".: . [86061,86062]"/>
  <match src="view: view [42822,42826]" dest="view: view [42822,42826]"/>
  <match src="variable_declaration_statement [103503,103547]" dest="variable_declaration_statement [103427,103471]"/>
  <match src="}: } [15763,15764]" dest="}: } [15763,15764]"/>
  <match src="identifier: averageDividend [74072,74087]" dest="identifier: averageDividend [73802,73817]"/>
  <match src="primitive_type [94874,94881]" dest="primitive_type [73961,73968]"/>
  <match src="): ) [31399,31400]" dest="): ) [31399,31400]"/>
  <match src="==: == [6901,6903]" dest="==: == [6901,6903]"/>
  <match src="member_expression [107879,107908]" dest="member_expression [107803,107832]"/>
  <match src="uint112: uint112 [40327,40334]" dest="uint112: uint112 [40327,40334]"/>
  <match src="{: { [83179,83180]" dest="{: { [84260,84261]"/>
  <match src="address: address [18366,18373]" dest="address: address [18366,18373]"/>
  <match src="binary_expression [31389,31404]" dest="binary_expression [31389,31404]"/>
  <match src="function_definition [75846,76066]" dest="function_definition [75362,75582]"/>
  <match src="type_name [3908,3912]" dest="type_name [3908,3912]"/>
  <match src="uint256: uint256 [64554,64561]" dest="uint256: uint256 [64556,64563]"/>
  <match src="function: function [6808,6816]" dest="function: function [6808,6816]"/>
  <match src="call_argument [90571,90581]" dest="call_argument [91596,91606]"/>
  <match src="(: ( [89590,89591]" dest="(: ( [90832,90833]"/>
  <match src="): ) [54243,54244]" dest="): ) [54245,54246]"/>
  <match src="primitive_type [71614,71621]" dest="primitive_type [71325,71332]"/>
  <match src="number_literal: 2 [27707,27708]" dest="number_literal: 2 [27707,27708]"/>
  <match src="[: [ [93411,93412]" dest="[: [ [93059,93060]"/>
  <match src="member_expression [78338,78361]" dest="member_expression [77850,77873]"/>
  <match src="): ) [31841,31842]" dest="): ) [31841,31842]"/>
  <match src="uint256: uint256 [105931,105938]" dest="uint256: uint256 [105855,105862]"/>
  <match src="=: = [93517,93518]" dest="=: = [93165,93166]"/>
  <match src=".: . [85052,85053]" dest=".: . [86352,86353]"/>
  <match src="return_type_definition [40239,40256]" dest="return_type_definition [40239,40256]"/>
  <match src="primitive_type [37123,37130]" dest="primitive_type [37123,37130]"/>
  <match src="identifier: _nftShard [68974,68983]" dest="identifier: _nftShard [68685,68694]"/>
  <match src="identifier: _x [107118,107120]" dest="identifier: _x [107042,107044]"/>
  <match src="variable_declaration_statement [69910,69936]" dest="variable_declaration_statement [69621,69647]"/>
  <match src="true: true [100968,100972]" dest="true: true [101126,101130]"/>
  <match src="identifier: _user [95904,95909]" dest="identifier: _user [95171,95176]"/>
  <match src="primitive_type [64750,64757]" dest="primitive_type [64756,64763]"/>
  <match src="identifier: userDividendWeight [67821,67839]" dest="identifier: userDividendWeight [68073,68091]"/>
  <match src="member_expression [60097,60109]" dest="member_expression [60099,60111]"/>
  <match src="identifier: fee [46528,46531]" dest="identifier: fee [46770,46773]"/>
  <match src="identifier: _term [71755,71760]" dest="identifier: _term [71466,71471]"/>
  <match src="number_literal: 0 [100810,100811]" dest="number_literal: 0 [100796,100797]"/>
  <match src="if_statement [77480,77552]" dest="if_statement [76920,76992]"/>
  <match src="address: address [40900,40907]" dest="address: address [40900,40907]"/>
  <match src="): ) [37390,37391]" dest="): ) [37390,37391]"/>
  <match src="identifier: _sender [94541,94548]" dest="identifier: _sender [94187,94194]"/>
  <match src="primitive_type [72373,72380]" dest="primitive_type [72048,72055]"/>
  <match src="type_name [40909,40916]" dest="type_name [40909,40916]"/>
  <match src="expression_statement [90909,90931]" dest="expression_statement [91934,91956]"/>
  <match src="expression_statement [97546,97571]" dest="expression_statement [96311,96336]"/>
  <match src="call_argument [70266,70278]" dest="call_argument [69977,69989]"/>
  <match src="call_expression [96277,96303]" dest="call_expression [95587,95613]"/>
  <match src=".: . [81151,81152]" dest=".: . [81838,81839]"/>
  <match src="(: ( [109497,109498]" dest="(: ( [109421,109422]"/>
  <match src="parameter [78181,78193]" dest="parameter [77314,77326]"/>
  <match src="assignment_expression [106512,106536]" dest="assignment_expression [106436,106460]"/>
  <match src="member_expression [106512,106527]" dest="member_expression [106436,106451]"/>
  <match src="identifier: Babylonian [38079,38089]" dest="identifier: Babylonian [38079,38089]"/>
  <match src="ternary_expression [34324,34338]" dest="ternary_expression [34324,34338]"/>
  <match src="uint256: uint256 [73252,73259]" dest="uint256: uint256 [73017,73024]"/>
  <match src="call_expression [26785,26858]" dest="call_expression [26785,26858]"/>
  <match src="): ) [81970,81971]" dest="): ) [82802,82803]"/>
  <match src="(: ( [24416,24417]" dest="(: ( [24416,24417]"/>
  <match src="variable_declaration [36438,36452]" dest="variable_declaration [36438,36452]"/>
  <match src="uint256: uint256 [60658,60665]" dest="uint256: uint256 [60660,60667]"/>
  <match src="identifier: safeTransfer [84108,84120]" dest="identifier: safeTransfer [84637,84649]"/>
  <match src="primitive_type [87718,87725]" dest="primitive_type [88879,88886]"/>
  <match src=".: . [88755,88756]" dest=".: . [89603,89604]"/>
  <match src=",: , [66946,66947]" dest=",: , [67199,67200]"/>
  <match src="identifier: votes [62450,62455]" dest="identifier: votes [62452,62457]"/>
  <match src="if: if [29403,29405]" dest="if: if [29403,29405]"/>
  <match src="string_literal [36048,36085]" dest="string_literal [36048,36085]"/>
  <match src="function: function [39215,39223]" dest="function: function [39215,39223]"/>
  <match src="identifier: setMaxRankNumber [87265,87281]" dest="identifier: setMaxRankNumber [88426,88442]"/>
  <match src="parameter [17771,17788]" dest="parameter [17771,17788]"/>
  <match src="call_argument [62008,62013]" dest="call_argument [62010,62015]"/>
  <match src="identifier: usersTotalWeight [82897,82913]" dest="identifier: poolSHDPerWeight [100000,100016]"/>
  <match src="type_name [82948,82955]" dest="type_name [83727,83734]"/>
  <match src="identifier: xx [28966,28968]" dest="identifier: xx [28966,28968]"/>
  <match src="call_argument [101123,101137]" dest="call_argument [82465,82479]"/>
  <match src="identifier: PoolInfo [79035,79043]" dest="identifier: PoolInfo [78824,78832]"/>
  <match src="virtual: virtual [79861,79868]" dest="virtual: virtual [80446,80453]"/>
  <match src="call_argument [78600,78652]" dest="call_argument [78180,78232]"/>
  <match src="internal: internal [46179,46187]" dest="internal: internal [46181,46189]"/>
  <match src="using_directive [48921,48948]" dest="using_directive [48923,48950]"/>
  <match src="identifier: selector [22110,22118]" dest="identifier: selector [22110,22118]"/>
  <match src="return_statement [18082,18142]" dest="return_statement [18082,18142]"/>
  <match src="identifier: _targetToken [104473,104485]" dest="identifier: _targetToken [104397,104409]"/>
  <match src="primitive_type [46134,46141]" dest="primitive_type [46136,46143]"/>
  <match src="function: function [2673,2681]" dest="function: function [2673,2681]"/>
  <match src="returns: returns [46193,46200]" dest="returns: returns [46195,46202]"/>
  <match src="call_expression [103753,103781]" dest="call_expression [103677,103705]"/>
  <match src="parameter [104924,104945]" dest="parameter [104848,104869]"/>
  <match src="return_type_definition [39349,39366]" dest="return_type_definition [39349,39366]"/>
  <match src="number_literal: 0 [60674,60675]" dest="number_literal: 0 [60676,60677]"/>
  <match src="member_expression [19050,19069]" dest="member_expression [19050,19069]"/>
  <match src="call_argument [26813,26814]" dest="call_argument [26813,26814]"/>
  <match src="&gt;&gt;=: &gt;&gt;= [30667,30670]" dest="&gt;&gt;=: &gt;&gt;= [30667,30670]"/>
  <match src="identifier: poolPosition [73190,73202]" dest="identifier: poolPosition [72955,72967]"/>
  <match src="identifier: IERC20 [20787,20793]" dest="identifier: IERC20 [20787,20793]"/>
  <match src="=: = [69502,69503]" dest="=: = [69213,69214]"/>
  <match src="call_argument [46861,46864]" dest="call_argument [47103,47106]"/>
  <match src="[: [ [56524,56525]" dest="[: [ [56526,56527]"/>
  <match src="identifier: _pid [73808,73812]" dest="identifier: _pid [73604,73608]"/>
  <match src="binary_expression [30450,30474]" dest="binary_expression [30450,30474]"/>
  <match src="identifier: selector [21823,21831]" dest="identifier: selector [21823,21831]"/>
  <match src="identifier: fee [46861,46864]" dest="identifier: fee [47103,47106]"/>
  <match src="binary_expression [100793,100841]" dest="binary_expression [100778,100827]"/>
  <match src=".: . [87233,87234]" dest=".: . [88394,88395]"/>
  <match src="(: ( [77483,77484]" dest="(: ( [76923,76924]"/>
  <match src=".: . [63997,63998]" dest=".: . [63999,64000]"/>
  <match src="function_definition [50857,50965]" dest="function_definition [50859,50967]"/>
  <match src=".: . [93458,93459]" dest=".: . [93106,93107]"/>
  <match src="): ) [16356,16357]" dest="): ) [16356,16357]"/>
  <match src="]: ] [62600,62601]" dest="]: ] [62602,62603]"/>
  <match src="member_expression [62414,62455]" dest="member_expression [62416,62457]"/>
  <match src="identifier: accumulativeDividend [74751,74771]" dest="identifier: accumulativeDividend [74477,74497]"/>
  <match src=".: . [101716,101717]" dest=".: . [102138,102139]"/>
  <match src="identifier: data [17068,17072]" dest="identifier: data [17068,17072]"/>
  <match src="binary_expression [27364,27370]" dest="binary_expression [27364,27370]"/>
  <match src=",: , [6512,6513]" dest=",: , [6512,6513]"/>
  <match src="primitive_type [94397,94404]" dest="primitive_type [94043,94050]"/>
  <match src="}: } [23641,23642]" dest="}: } [23641,23642]"/>
  <match src="using: using [41178,41183]" dest="using: using [41178,41183]"/>
  <match src="identifier: _withUpdate [75897,75908]" dest="identifier: _withUpdate [75413,75424]"/>
  <match src="parameter [26731,26747]" dest="parameter [26731,26747]"/>
  <match src="=: = [57435,57436]" dest="=: = [57437,57438]"/>
  <match src=".: . [78528,78529]" dest=".: . [78108,78109]"/>
  <match src="type_name [97122,97129]" dest="type_name [95887,95894]"/>
  <match src="if: if [107712,107714]" dest="if: if [107636,107638]"/>
  <match src="): ) [32141,32142]" dest="): ) [32141,32142]"/>
  <match src="variable_declaration_statement [100366,100431]" dest="variable_declaration_statement [99708,99774]"/>
  <match src="assignment_expression [109642,109669]" dest="assignment_expression [109566,109593]"/>
  <match src="(: ( [26427,26428]" dest="(: ( [26427,26428]"/>
  <match src="type_name [92984,92991]" dest="type_name [92632,92639]"/>
  <match src="call_expression [102673,102725]" dest="call_expression [102597,102649]"/>
  <match src="number_literal: 2 [60809,60810]" dest="number_literal: 2 [60811,60812]"/>
  <match src="(: ( [40081,40082]" dest="(: ( [40081,40082]"/>
  <match src="identifier: IInvitation [63014,63025]" dest="identifier: IInvitation [63016,63027]"/>
  <match src="call_argument [81231,81283]" dest="call_argument [81920,81972]"/>
  <match src="uint256: uint256 [103118,103125]" dest="uint256: uint256 [103042,103049]"/>
  <match src="indexed: indexed [38642,38649]" dest="indexed: indexed [38642,38649]"/>
  <match src="call_argument [82715,82728]" dest="call_argument [83553,83566]"/>
  <match src="return: return [11850,11856]" dest="return: return [11850,11856]"/>
  <match src=".: . [22318,22319]" dest=".: . [22318,22319]"/>
  <match src="{: { [31775,31776]" dest="{: { [31775,31776]"/>
  <match src="address: address [59737,59744]" dest="address: address [59739,59746]"/>
  <match src=".: . [103535,103536]" dest=".: . [103459,103460]"/>
  <match src="identifier: lpTokenSwap [71179,71190]" dest="identifier: lpTokenSwap [70890,70901]"/>
  <match src="identifier: spender [22310,22317]" dest="identifier: spender [22310,22317]"/>
  <match src="array_access [56536,56554]" dest="array_access [56538,56556]"/>
  <match src="=: = [82967,82968]" dest="=: = [83746,83747]"/>
  <match src="uint256: uint256 [9465,9472]" dest="uint256: uint256 [9465,9472]"/>
  <match src="call_expression [95729,95753]" dest="call_expression [94877,94901]"/>
  <match src="type_name [39203,39207]" dest="type_name [39203,39207]"/>
  <match src=".: . [107724,107725]" dest=".: . [107648,107649]"/>
  <match src="type_cast_expression [107786,107863]" dest="type_cast_expression [107710,107787]"/>
  <match src="identifier: d [27573,27574]" dest="identifier: d [27573,27574]"/>
  <match src="block_statement [76701,76873]" dest="block_statement [76217,76389]"/>
  <match src="member_expression [82557,82568]" dest="member_expression [83395,83406]"/>
  <match src="]: ] [83553,83554]" dest="]: ] [84418,84419]"/>
  <match src="comment: // resolution: 1 / 2**112 [32419,32444]" dest="comment: // resolution: 1 / 2**112 [32419,32444]"/>
  <match src="(: ( [93210,93211]" dest="(: ( [92858,92859]"/>
  <match src="identifier: _feeRateDenominator [45091,45110]" dest="identifier: _feeRateDenominator [45093,45112]"/>
  <match src="address: address [65824,65831]" dest="address: address [65834,65841]"/>
  <match src="variable_declaration [21962,21982]" dest="variable_declaration [21962,21982]"/>
  <match src="identifier: user [66697,66701]" dest="identifier: user [66950,66954]"/>
  <match src="comment: /**      * @dev Returns the integer division of two unsigned integers, reverting with custom message on      * division by zero. The result is rounded towards zero.      *      * CAUTION: This function is deprecated because it requires allocating memory for the error      * message unnecessarily. For custom revert reasons use {tryDiv}.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [10211,10871]" dest="comment: /**      * @dev Returns the integer division of two unsigned integers, reverting with custom message on      * division by zero. The result is rounded towards zero.      *      * CAUTION: This function is deprecated because it requires allocating memory for the error      * message unnecessarily. For custom revert reasons use {tryDiv}.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [10211,10871]"/>
  <match src="}: } [62701,62702]" dest="}: } [62703,62704]"/>
  <match src="primitive_type [46234,46241]" dest="primitive_type [46236,46243]"/>
  <match src="variable_declaration_statement [93379,93415]" dest="variable_declaration_statement [93027,93063]"/>
  <match src="else: else [62479,62483]" dest="else: else [62481,62485]"/>
  <match src="identifier: user [99594,99598]" dest="identifier: user [97684,97688]"/>
  <match src="solidity_version: 0.8.0 [24723,24728]" dest="solidity_version: 0.8.0 [24723,24728]"/>
  <match src="{: { [73123,73124]" dest="{: { [72888,72889]"/>
  <match src="}: } [10202,10203]" dest="}: } [10202,10203]"/>
  <match src=".: . [106451,106452]" dest=".: . [106375,106376]"/>
  <match src="variable_declaration_statement [71916,71974]" dest="variable_declaration_statement [71808,71830]"/>
  <match src="member_expression [80541,80553]" dest="member_expression [81226,81238]"/>
  <match src="(: ( [51694,51695]" dest="(: ( [51696,51697]"/>
  <match src="identifier: poolInfo [73799,73807]" dest="identifier: poolInfo [73595,73603]"/>
  <match src="solidity_version_comparison_operator [38471,38474]" dest="solidity_version_comparison_operator [38471,38474]"/>
  <match src="}: } [97382,97383]" dest="}: } [96147,96148]"/>
  <match src="call_argument [34341,34345]" dest="call_argument [34341,34345]"/>
  <match src="parameter [103182,103198]" dest="parameter [103106,103122]"/>
  <match src="augmented_assignment_expression [30603,30610]" dest="augmented_assignment_expression [30603,30610]"/>
  <match src="&quot;: &quot; [8880,8881]" dest="&quot;: &quot; [8880,8881]"/>
  <match src="call_argument [52707,52713]" dest="call_argument [52709,52715]"/>
  <match src="}: } [105290,105291]" dest="}: } [105214,105215]"/>
  <match src="identifier: _tokenToEthSwap [70559,70574]" dest="identifier: _tokenToEthSwap [70270,70285]"/>
  <match src=".: . [99751,99752]" dest=".: . [97943,97944]"/>
  <match src="(: ( [52576,52577]" dest="(: ( [52578,52579]"/>
  <match src="call_expression [47012,47053]" dest="call_expression [46399,46440]"/>
  <match src=",: , [27267,27268]" dest=",: , [27267,27268]"/>
  <match src="}: } [104722,104723]" dest="}: } [104646,104647]"/>
  <match src="call_argument [22435,22457]" dest="call_argument [22435,22457]"/>
  <match src="assignment_expression [78873,78937]" dest="assignment_expression [78391,78445]"/>
  <match src="}: } [96255,96256]" dest="}: } [95565,95566]"/>
  <match src="string [35459,35494]" dest="string [35459,35494]"/>
  <match src="bool: bool [63395,63399]" dest="bool: bool [63397,63401]"/>
  <match src=".: . [74923,74924]" dest=".: . [74794,74795]"/>
  <match src="(: ( [74026,74027]" dest="(: ( [73756,73757]"/>
  <match src="identifier: lastDividendHeight [89596,89614]" dest="identifier: lastDividendHeight [90838,90856]"/>
  <match src="(: ( [109288,109289]" dest="(: ( [109212,109213]"/>
  <match src="): ) [5284,5285]" dest="): ) [5284,5285]"/>
  <match src="uint112: uint112 [34922,34929]" dest="uint112: uint112 [34922,34929]"/>
  <match src="number_literal: 0 [55769,55770]" dest="number_literal: 0 [55771,55772]"/>
  <match src="type_name [93150,93159]" dest="type_name [92798,92807]"/>
  <match src="assignment_expression [70151,70169]" dest="assignment_expression [69862,69880]"/>
  <match src="member_expression [99127,99166]" dest="member_expression [99291,99330]"/>
  <match src="return: return [85077,85083]" dest="return: return [86377,86383]"/>
  <match src="): ) [87770,87771]" dest="): ) [88931,88932]"/>
  <match src="member_expression [38313,38320]" dest="member_expression [38313,38320]"/>
  <match src="}: } [76879,76880]" dest="}: } [76395,76396]"/>
  <match src="expression_statement [98190,98353]" dest="expression_statement [96955,97118]"/>
  <match src="(: ( [81876,81877]" dest="(: ( [82708,82709]"/>
  <match src="call_argument [62685,62693]" dest="call_argument [62687,62695]"/>
  <match src="variable_declaration [28032,28041]" dest="variable_declaration [28032,28041]"/>
  <match src="[: [ [82517,82518]" dest="[: [ [83355,83356]"/>
  <match src="identifier: token [20912,20917]" dest="identifier: token [20912,20917]"/>
  <match src="uint256: uint256 [88530,88537]" dest="uint256: uint256 [89378,89385]"/>
  <match src="external: external [91050,91058]" dest="external: external [92075,92083]"/>
  <match src="type_name [26731,26738]" dest="type_name [26731,26738]"/>
  <match src="): ) [59751,59752]" dest="): ) [59753,59754]"/>
  <match src="primitive_type [49089,49096]" dest="primitive_type [49091,49098]"/>
  <match src="identifier: center [60774,60780]" dest="identifier: center [60776,60782]"/>
  <match src="(: ( [39052,39053]" dest="(: ( [39052,39053]"/>
  <match src="binary_expression [46339,46369]" dest="binary_expression [46581,46611]"/>
  <match src=",: , [57274,57275]" dest=",: , [57276,57277]"/>
  <match src="identifier: _user [88887,88892]" dest="identifier: _user [89735,89740]"/>
  <match src="identifier: errorMessage [18809,18821]" dest="identifier: errorMessage [18809,18821]"/>
  <match src="return_type_definition [51093,51110]" dest="return_type_definition [51095,51112]"/>
  <match src="type_name [59064,59074]" dest="type_name [59066,59076]"/>
  <match src="identifier: this [22303,22307]" dest="identifier: this [22303,22307]"/>
  <match src="variable_declaration_statement [89050,89089]" dest="variable_declaration_statement [89898,89937]"/>
  <match src="&amp;: &amp; [32132,32133]" dest="&amp;: &amp; [32132,32133]"/>
  <match src="call_expression [46558,46575]" dest="call_expression [46800,46817]"/>
  <match src="uint256: uint256 [75089,75096]" dest="uint256: uint256 [73521,73528]"/>
  <match src="identifier: RESOLUTION [33728,33738]" dest="identifier: RESOLUTION [33728,33738]"/>
  <match src="identifier: target [18885,18891]" dest="identifier: target [18885,18891]"/>
  <match src="yul_path [13010,13014]" dest="yul_path [13010,13014]"/>
  <match src="(: ( [38997,38998]" dest="(: ( [38997,38998]"/>
  <match src="(: ( [79398,79399]" dest="(: ( [79553,79554]"/>
  <match src="parameter [6554,6561]" dest="parameter [6554,6561]"/>
  <match src=".: . [108440,108441]" dest=".: . [108364,108365]"/>
  <match src="assignment_expression [84251,84272]" dest="assignment_expression [84780,84801]"/>
  <match src="identifier: other [36112,36117]" dest="identifier: other [36112,36117]"/>
  <match src="identifier: uq144x112 [33636,33645]" dest="identifier: uq144x112 [33636,33645]"/>
  <match src="(: ( [51986,51987]" dest="(: ( [51988,51989]"/>
  <match src="identifier: uppero_lowers [35634,35647]" dest="identifier: uppero_lowers [35634,35647]"/>
  <match src="=: = [90337,90338]" dest="=: = [91392,91393]"/>
  <match src="call_argument [80558,80594]" dest="call_argument [81243,81279]"/>
  <match src="call_argument [52756,52845]" dest="call_argument [52758,52847]"/>
  <match src="[: [ [60378,60379]" dest="[: [ [60380,60381]"/>
  <match src="pure: pure [8831,8835]" dest="pure: pure [8831,8835]"/>
  <match src="parameter [16748,16760]" dest="parameter [16748,16760]"/>
  <match src="identifier: _miner [59745,59751]" dest="identifier: _miner [59747,59753]"/>
  <match src="call_argument [35003,35024]" dest="call_argument [35003,35024]"/>
  <match src="call_argument [22073,22142]" dest="call_argument [22073,22142]"/>
  <match src="augmented_assignment_expression [31641,31648]" dest="augmented_assignment_expression [31641,31648]"/>
  <match src="primitive_type [66681,66688]" dest="primitive_type [66934,66941]"/>
  <match src="uint256: uint256 [89002,89009]" dest="uint256: uint256 [89850,89857]"/>
  <match src="identifier: _user [102471,102476]" dest="identifier: _user [102330,102335]"/>
  <match src="}: } [20752,20753]" dest="}: } [20752,20753]"/>
  <match src="=: = [70695,70696]" dest="=: = [70406,70407]"/>
  <match src="&quot;: &quot; [60124,60125]" dest="&quot;: &quot; [60126,60127]"/>
  <match src="identifier: _pid [72962,72966]" dest="identifier: _pid [72644,72648]"/>
  <match src="(: ( [30960,30961]" dest="(: ( [30960,30961]"/>
  <match src="if_statement [32126,32150]" dest="if_statement [32126,32150]"/>
  <match src="return_statement [24609,24625]" dest="return_statement [24609,24625]"/>
  <match src="{: { [62834,62835]" dest="{: { [62836,62837]"/>
  <match src="{: { [87605,87606]" dest="{: { [88766,88767]"/>
  <match src="function: function [9407,9415]" dest="function: function [9407,9415]"/>
  <match src=".: . [69527,69528]" dest=".: . [69238,69239]"/>
  <match src="==: == [84245,84247]" dest="==: == [84774,84776]"/>
  <match src="&quot;: &quot; [55013,55014]" dest="&quot;: &quot; [55015,55016]"/>
  <match src="boolean_literal [104829,104834]" dest="boolean_literal [104753,104758]"/>
  <match src="block_statement [61373,62055]" dest="block_statement [61375,62057]"/>
  <match src="identifier: TokenPairInfo [63834,63847]" dest="identifier: TokenPairInfo [63836,63849]"/>
  <match src="&amp;: &amp; [35012,35013]" dest="&amp;: &amp; [35012,35013]"/>
  <match src="(: ( [70978,70979]" dest="(: ( [70689,70690]"/>
  <match src="number_literal: 0 [89762,89763]" dest="number_literal: 0 [91004,91005]"/>
  <match src="}: } [22489,22490]" dest="}: } [22489,22490]"/>
  <match src="type_name [92637,92644]" dest="type_name [92285,92292]"/>
  <match src="return_statement [36946,36977]" dest="return_statement [36946,36977]"/>
  <match src="number_literal: 1 [28138,28139]" dest="number_literal: 1 [28138,28139]"/>
  <match src="): ) [17397,17398]" dest="): ) [17397,17398]"/>
  <match src="return: return [18444,18450]" dest="return: return [18444,18450]"/>
  <match src="address: address [58562,58569]" dest="address: address [58564,58571]"/>
  <match src=",: , [6552,6553]" dest=",: , [6552,6553]"/>
  <match src="identifier: require [36849,36856]" dest="identifier: require [36849,36856]"/>
  <match src="identifier: _symbol [50048,50055]" dest="identifier: _symbol [50050,50057]"/>
  <match src="binary_expression [90301,90310]" dest="binary_expression [91355,91363]"/>
  <match src="if: if [80606,80608]" dest="if: if [81291,81293]"/>
  <match src="identifier: inviteeToSubWeight [100040,100058]" dest="identifier: inviteeToSubWeight [98745,98763]"/>
  <match src="type_name [32852,32859]" dest="type_name [32852,32859]"/>
  <match src="return_statement [73224,73231]" dest="return_statement [72989,72996]"/>
  <match src="parameter [39263,39273]" dest="parameter [39263,39273]"/>
  <match src="}: } [20965,20966]" dest="}: } [20965,20966]"/>
  <match src="number_literal: 0 [84623,84624]" dest="number_literal: 0 [85754,85755]"/>
  <match src="identifier: r [29665,29666]" dest="identifier: r [29665,29666]"/>
  <match src="]: ] [60464,60465]" dest="]: ] [60466,60467]"/>
  <match src="comment: // View function to see pending SHARDs on frontend. [88312,88363]" dest="comment: // View function to see pending SHARDs on frontend. [89160,89211]"/>
  <match src="comment: /**  * @dev Collection of functions related to the address type  */ [11970,12039]" dest="comment: /**  * @dev Collection of functions related to the address type  */ [11970,12039]"/>
  <match src="primitive_type [38145,38150]" dest="primitive_type [38145,38150]"/>
  <match src="): ) [88851,88852]" dest="): ) [89699,89700]"/>
  <match src="variable_declaration [83410,83429]" dest="variable_declaration [85190,85209]"/>
  <match src="): ) [30648,30649]" dest="): ) [30648,30649]"/>
  <match src="type_name [2074,2081]" dest="type_name [2074,2081]"/>
  <match src="identifier: UserInfo [64899,64907]" dest="identifier: UserInfo [64907,64915]"/>
  <match src="type_name [27541,27548]" dest="type_name [27541,27548]"/>
  <match src="number_literal: 0 [11823,11824]" dest="number_literal: 0 [11823,11824]"/>
  <match src="(: ( [28214,28215]" dest="(: ( [28214,28215]"/>
  <match src="function_definition [44767,45118]" dest="function_definition [44769,45120]"/>
  <match src="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with      * `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [15347,15563]" dest="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with      * `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [15347,15563]"/>
  <match src="augmented_assignment_expression [31790,31798]" dest="augmented_assignment_expression [31790,31798]"/>
  <match src="parameter [39237,39249]" dest="parameter [39237,39249]"/>
  <match src="identifier: isUsed [86869,86875]" dest="identifier: isUsed [88026,88032]"/>
  <match src=",: , [86053,86054]" dest=",: , [87345,87346]"/>
  <match src="call_expression [81136,81303]" dest="call_expression [81823,81992]"/>
  <match src="visibility [109500,109506]" dest="visibility [109424,109430]"/>
  <match src="identifier: wantToken [70151,70160]" dest="identifier: wantToken [69862,69871]"/>
  <match src="function: function [21865,21873]" dest="function: function [21865,21873]"/>
  <match src="member_expression [104280,104295]" dest="member_expression [104204,104219]"/>
  <match src=",: , [66701,66702]" dest=",: , [66954,66955]"/>
  <match src="identifier: data [22937,22941]" dest="identifier: data [22937,22941]"/>
  <match src="{: { [71721,71722]" dest="{: { [71432,71433]"/>
  <match src="primitive_type [40580,40587]" dest="primitive_type [40580,40587]"/>
  <match src="comment: // Info of each user. [63145,63166]" dest="comment: // Info of each user. [63147,63168]"/>
  <match src="): ) [98252,98253]" dest="): ) [97017,97018]"/>
  <match src="unary_expression [35454,35456]" dest="unary_expression [35454,35456]"/>
  <match src="boolean_literal [52061,52065]" dest="boolean_literal [52063,52067]"/>
  <match src="string [9500,9526]" dest="string [9500,9526]"/>
  <match src="type_name [66524,66531]" dest="type_name [66777,66784]"/>
  <match src="return_statement [50938,50958]" dest="return_statement [50940,50960]"/>
  <match src="event_paramater [39866,39880]" dest="event_paramater [39866,39880]"/>
  <match src="identifier: symbol [38743,38749]" dest="identifier: symbol [38743,38749]"/>
  <match src="identifier: x [30636,30637]" dest="identifier: x [30636,30637]"/>
  <match src="primitive_type [69767,69774]" dest="primitive_type [69478,69485]"/>
  <match src="augmented_assignment_expression [30514,30521]" dest="augmented_assignment_expression [30514,30521]"/>
  <match src="): ) [59075,59076]" dest="): ) [59077,59078]"/>
  <match src=".: . [89623,89624]" dest=".: . [90865,90866]"/>
  <match src="expression_statement [101176,101284]" dest="expression_statement [101145,101223]"/>
  <match src="assignment_expression [70889,70913]" dest="assignment_expression [70600,70624]"/>
  <match src="return_statement [6307,6324]" dest="return_statement [6307,6324]"/>
  <match src="returns: returns [15232,15239]" dest="returns: returns [15232,15239]"/>
  <match src="identifier: newVotes [62195,62203]" dest="identifier: newVotes [62197,62205]"/>
  <match src="expression_statement [109642,109670]" dest="expression_statement [109566,109594]"/>
  <match src="parameter [33915,33931]" dest="parameter [33915,33931]"/>
  <match src="binary_expression [69519,69539]" dest="binary_expression [69230,69250]"/>
  <match src="(: ( [107388,107389]" dest="(: ( [107312,107313]"/>
  <match src="abstract: abstract [25240,25248]" dest="abstract: abstract [25240,25248]"/>
  <match src="call_argument [71111,71543]" dest="call_argument [70822,71254]"/>
  <match src="block_statement [84860,84997]" dest="block_statement [85991,86297]"/>
  <match src="yul_decimal_number: 32 [19757,19759]" dest="yul_decimal_number: 32 [19757,19759]"/>
  <match src="call_argument [61630,61636]" dest="call_argument [61632,61638]"/>
  <match src="return: return [91101,91107]" dest="return: return [92126,92132]"/>
  <match src="identifier: d [27556,27557]" dest="identifier: d [27556,27557]"/>
  <match src="number_literal: 1 [67993,67994]" dest="number_literal: 1 [68245,68246]"/>
  <match src="=: = [103422,103423]" dest="=: = [103346,103347]"/>
  <match src="array_access [46600,46626]" dest="array_access [46842,46868]"/>
  <match src="): ) [55937,55938]" dest="): ) [55939,55940]"/>
  <match src="call_expression [96139,96167]" dest="call_expression [95449,95477]"/>
  <match src="type_name [16186,16191]" dest="type_name [16186,16191]"/>
  <match src="identifier: safeSHARDTransfer [96052,96069]" dest="identifier: safeSHARDTransfer [95362,95379]"/>
  <match src="identifier: price [107087,107092]" dest="identifier: price [107011,107016]"/>
  <match src="call_expression [45569,45626]" dest="call_expression [45571,45628]"/>
  <match src="else: else [31770,31774]" dest="else: else [31770,31774]"/>
  <match src="{: { [29335,29336]" dest="{: { [29335,29336]"/>
  <match src="binary_expression [46666,46701]" dest="binary_expression [46908,46943]"/>
  <match src="function: function [15166,15174]" dest="function: function [15166,15174]"/>
  <match src="identifier: IERC20 [48907,48913]" dest="identifier: IERC20 [48909,48915]"/>
  <match src="user_defined_type [58756,58761]" dest="user_defined_type [58758,58763]"/>
  <match src="variable_declaration [85781,85798]" dest="variable_declaration [87081,87098]"/>
  <match src="function: function [33404,33412]" dest="function: function [33404,33412]"/>
  <match src=",: , [42034,42035]" dest=",: , [42034,42035]"/>
  <match src="): ) [90902,90903]" dest="): ) [91927,91928]"/>
  <match src="(: ( [40056,40057]" dest="(: ( [40056,40057]"/>
  <match src="identifier: sub [108028,108031]" dest="identifier: sub [107952,107955]"/>
  <match src="call_argument [55270,55276]" dest="call_argument [55272,55278]"/>
  <match src="return_statement [97359,97368]" dest="return_statement [96124,96133]"/>
  <match src="function_body [45784,45840]" dest="function_body [45786,45842]"/>
  <match src="array_access [52756,52789]" dest="array_access [52758,52791]"/>
  <match src="identifier: length [77273,77279]" dest="identifier: length [76713,76719]"/>
  <match src="uint256: uint256 [94874,94881]" dest="uint256: uint256 [73961,73968]"/>
  <match src="[: [ [93793,93794]" dest="[: [ [93439,93440]"/>
  <match src="call_argument [108003,108080]" dest="call_argument [107927,108004]"/>
  <match src="parameter [61257,61269]" dest="parameter [61259,61271]"/>
  <match src="tuple_expression [70199,70224]" dest="tuple_expression [69910,69935]"/>
  <match src="parameter [10890,10899]" dest="parameter [10890,10899]"/>
  <match src="=: = [95680,95681]" dest="=: = [94828,94829]"/>
  <match src="false: false [109289,109294]" dest="false: false [109213,109218]"/>
  <match src="assignment_expression [106547,106596]" dest="assignment_expression [106471,106520]"/>
  <match src="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but performing a delegate call.      *      * _Available since v3.4._      */ [18157,18330]" dest="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but performing a delegate call.      *      * _Available since v3.4._      */ [18157,18330]"/>
  <match src="function_definition [52555,52876]" dest="function_definition [52557,52878]"/>
  <match src="using_directive [43024,43051]" dest="using_directive [43024,43051]"/>
  <match src="function: function [33617,33625]" dest="function: function [33617,33625]"/>
  <match src="contract: contract [58735,58743]" dest="contract: contract [58737,58745]"/>
  <match src="(: ( [69835,69836]" dest="(: ( [69546,69547]"/>
  <match src="type_name [3874,3881]" dest="type_name [3874,3881]"/>
  <match src="type_name [33024,33031]" dest="type_name [33024,33031]"/>
  <match src="call_expression [38173,38208]" dest="call_expression [38173,38208]"/>
  <match src="type_name [3459,3466]" dest="type_name [3459,3466]"/>
  <match src="variable_declaration [89227,89253]" dest="variable_declaration [90152,90178]"/>
  <match src="identifier: pair [41875,41879]" dest="identifier: pair [41875,41879]"/>
  <match src="identifier: _approve [53390,53398]" dest="identifier: _approve [53392,53400]"/>
  <match src="binary_expression [37654,37666]" dest="binary_expression [37654,37666]"/>
  <match src="=: = [41785,41786]" dest="=: = [41785,41786]"/>
  <match src="binary_expression [44230,44254]" dest="binary_expression [44232,44256]"/>
  <match src="-=: -= [31752,31754]" dest="-=: -= [31752,31754]"/>
  <match src="&gt;: &gt; [74044,74045]" dest="&gt;: &gt; [73774,73775]"/>
  <match src="(: ( [41583,41584]" dest="(: ( [41583,41584]"/>
  <match src="expression_statement [27852,27867]" dest="expression_statement [27852,27867]"/>
  <match src="variable_declaration [102431,102452]" dest="variable_declaration [102290,102311]"/>
  <match src="augmented_assignment_expression [30491,30499]" dest="augmented_assignment_expression [30491,30499]"/>
  <match src="visibility [43067,43073]" dest="visibility [43067,43073]"/>
  <match src="=: = [76151,76152]" dest="=: = [75667,75668]"/>
  <match src="function_definition [22159,22490]" dest="function_definition [22159,22490]"/>
  <match src="=: = [81407,81408]" dest="=: = [82096,82097]"/>
  <match src="identifier: block [105865,105870]" dest="identifier: block [105789,105794]"/>
  <match src="public: public [52628,52634]" dest="public: public [52630,52636]"/>
  <match src="identifier: reserve0 [106378,106386]" dest="identifier: reserve0 [106302,106310]"/>
  <match src="comment: // Info of each user is Contract sender [43883,43922]" dest="comment: // Info of each user is Contract sender [43883,43922]"/>
  <match src="type_name [99023,99030]" dest="type_name [99204,99211]"/>
  <match src=",: , [39599,39600]" dest=",: , [39599,39600]"/>
  <match src="type_name [40758,40765]" dest="type_name [40758,40765]"/>
  <match src="identifier: lpTokenSwap [63527,63538]" dest="identifier: lpTokenSwap [63529,63540]"/>
  <match src=".: . [107845,107846]" dest=".: . [107769,107770]"/>
  <match src="identifier: totalReward [77570,77581]" dest="identifier: totalReward [77010,77021]"/>
  <match src="(: ( [52752,52753]" dest="(: ( [52754,52755]"/>
  <match src="member_expression [79196,79219]" dest="member_expression [79351,79374]"/>
  <match src="abstract: abstract [1062,1070]" dest="abstract: abstract [1062,1070]"/>
  <match src="): ) [6602,6603]" dest="): ) [6602,6603]"/>
  <match src="inheritance_specifier [48898,48905]" dest="inheritance_specifier [48900,48907]"/>
  <match src="function_definition [62070,62702]" dest="function_definition [62072,62704]"/>
  <match src="): ) [28284,28285]" dest="): ) [28284,28285]"/>
  <match src="type_name [53373,53377]" dest="type_name [53375,53379]"/>
  <match src=",: , [104463,104464]" dest=",: , [104387,104388]"/>
  <match src=",: , [15605,15606]" dest=",: , [15605,15606]"/>
  <match src=".: . [61013,61014]" dest=".: . [61015,61016]"/>
  <match src="call_argument [81506,81510]" dest="call_argument [97853,97857]"/>
  <match src="primitive_type [77405,77412]" dest="primitive_type [76845,76852]"/>
  <match src="block_statement [108481,108605]" dest="block_statement [108405,108529]"/>
  <match src=".: . [98698,98699]" dest=".: . [98908,98909]"/>
  <match src="identifier: initialPriceCumulative [105939,105961]" dest="identifier: initialPriceCumulative [105863,105885]"/>
  <match src="call_expression [27304,27329]" dest="call_expression [27304,27329]"/>
  <match src="expression_statement [87926,87942]" dest="expression_statement [89087,89103]"/>
  <match src="true: true [53491,53495]" dest="true: true [53493,53497]"/>
  <match src="%: % [41427,41428]" dest="%: % [41427,41428]"/>
  <match src="variable_declaration_statement [46289,46305]" dest="variable_declaration_statement [46291,46307]"/>
  <match src=".: . [108175,108176]" dest=".: . [108099,108100]"/>
  <match src="parameter [17364,17378]" dest="parameter [17364,17378]"/>
  <match src="internal: internal [7245,7253]" dest="internal: internal [7245,7253]"/>
  <match src="function: function [40566,40574]" dest="function: function [40566,40574]"/>
  <match src="expression_statement [27702,27717]" dest="expression_statement [27702,27717]"/>
  <match src="primitive_type [6869,6873]" dest="primitive_type [6869,6873]"/>
  <match src="member_expression [90339,90353]" dest="member_expression [91394,91426]"/>
  <match src="(: ( [6314,6315]" dest="(: ( [6314,6315]"/>
  <match src="type_name [37617,37626]" dest="type_name [37617,37626]"/>
  <match src="virtual: virtual [46052,46059]" dest="virtual: virtual [46054,46061]"/>
  <match src="function_body [34268,34462]" dest="function_body [34268,34462]"/>
  <match src="identifier: amount [82587,82593]" dest="identifier: amount [83425,83431]"/>
  <match src="bool: bool [12711,12715]" dest="bool: bool [12711,12715]"/>
  <match src="type_name [93043,93052]" dest="type_name [92691,92700]"/>
  <match src="): ) [21665,21666]" dest="): ) [21665,21666]"/>
  <match src=",: , [26498,26499]" dest=",: , [26498,26499]"/>
  <match src="return: return [17084,17090]" dest="return: return [17084,17090]"/>
  <match src="identifier: LOWER_MASK [35014,35024]" dest="identifier: LOWER_MASK [35014,35024]"/>
  <match src="primitive_type [71680,71687]" dest="primitive_type [71391,71398]"/>
  <match src="parameter [89020,89038]" dest="parameter [89868,89886]"/>
  <match src="public: public [65089,65095]" dest="public: public [65099,65105]"/>
  <match src="}: } [76065,76066]" dest="}: } [75581,75582]"/>
  <match src="member_expression [92925,92953]" dest="member_expression [92573,92601]"/>
  <match src="identifier: div [90889,90892]" dest="identifier: div [91914,91917]"/>
  <match src="private: private [65667,65674]" dest="private: private [65677,65684]"/>
  <match src="identifier: pool [86049,86053]" dest="identifier: pool [87341,87345]"/>
  <match src="): ) [98309,98310]" dest="): ) [97074,97075]"/>
  <match src="primitive_type [28753,28760]" dest="primitive_type [28753,28760]"/>
  <match src="view: view [40419,40423]" dest="view: view [40419,40423]"/>
  <match src="&quot;: &quot; [54893,54894]" dest="&quot;: &quot; [54895,54896]"/>
  <match src="member_expression [105256,105277]" dest="member_expression [105180,105201]"/>
  <match src="=: = [97709,97710]" dest="=: = [96474,96475]"/>
  <match src="if_statement [70774,70929]" dest="if_statement [70485,70640]"/>
  <match src="if_statement [73891,73955]" dest="if_statement [73620,73685]"/>
  <match src="primitive_type [35164,35171]" dest="primitive_type [35164,35171]"/>
  <match src="identifier: rankPoolIndex [73992,74005]" dest="identifier: rankPoolIndex [73722,73735]"/>
  <match src="identifier: mm [28155,28157]" dest="identifier: mm [28155,28157]"/>
  <match src=".: . [82170,82171]" dest=".: . [83008,83009]"/>
  <match src="identifier: resetEvilPool [73068,73081]" dest="identifier: resetEvilPool [72833,72846]"/>
  <match src=",: , [18478,18479]" dest=",: , [18478,18479]"/>
  <match src="uint256: uint256 [43043,43050]" dest="uint256: uint256 [43043,43050]"/>
  <match src="string [14336,14396]" dest="string [14336,14396]"/>
  <match src="expression_statement [29194,29203]" dest="expression_statement [29194,29203]"/>
  <match src="identifier: factory [40103,40110]" dest="identifier: factory [40103,40110]"/>
  <match src="(: ( [22000,22001]" dest="(: ( [22000,22001]"/>
  <match src="primitive_type [23305,23310]" dest="primitive_type [23305,23310]"/>
  <match src="identifier: _pid [77240,77244]" dest="identifier: _pid [76680,76684]"/>
  <match src="call_argument [83779,83790]" dest="call_argument [85511,85522]"/>
  <match src="+: + [29822,29823]" dest="+: + [29822,29823]"/>
  <match src="identifier: fromNum [61439,61446]" dest="identifier: fromNum [61441,61448]"/>
  <match src="type_name [37571,37580]" dest="type_name [37571,37580]"/>
  <match src="[: [ [60369,60370]" dest="[: [ [60371,60372]"/>
  <match src="returns: returns [5940,5947]" dest="returns: returns [5940,5947]"/>
  <match src="}: } [33746,33747]" dest="}: } [33746,33747]"/>
  <match src="function_definition [40710,40800]" dest="function_definition [40710,40800]"/>
  <match src="identifier: c [8206,8207]" dest="identifier: c [8206,8207]"/>
  <match src="array_access [100890,100904]" dest="array_access [100952,100967]"/>
  <match src="identifier: amount [52036,52042]" dest="identifier: amount [52038,52044]"/>
  <match src="call_argument [21833,21840]" dest="call_argument [21833,21840]"/>
  <match src="identifier: other [34930,34935]" dest="identifier: other [34930,34935]"/>
  <match src="identifier: safeTransferFrom [81860,81876]" dest="identifier: safeTransferFrom [82692,82708]"/>
  <match src="identifier: wantToken [70297,70306]" dest="identifier: wantToken [70008,70017]"/>
  <match src="call_expression [22412,22481]" dest="call_expression [22412,22481]"/>
  <match src="parameter [10061,10070]" dest="parameter [10061,10070]"/>
  <match src="identifier: _ [26041,26042]" dest="identifier: _ [26041,26042]"/>
  <match src="identifier: length [99002,99008]" dest="identifier: length [99187,99193]"/>
  <match src="identifier: _lpTokenSwap [71622,71634]" dest="identifier: _lpTokenSwap [71333,71345]"/>
  <match src="type_name [51921,51928]" dest="type_name [51923,51930]"/>
  <match src="member_expression [95061,95078]" dest="member_expression [82583,82600]"/>
  <match src="): ) [5924,5925]" dest="): ) [5924,5925]"/>
  <match src="uint256: uint256 [83371,83378]" dest="uint256: uint256 [85155,85162]"/>
  <match src="identifier: _x [32486,32488]" dest="identifier: _x [32486,32488]"/>
  <match src="binary_expression [37113,37134]" dest="binary_expression [37113,37134]"/>
  <match src="identifier: amount0Out [40729,40739]" dest="identifier: amount0Out [40729,40739]"/>
  <match src="event_definition [66844,66907]" dest="event_definition [67097,67160]"/>
  <match src="): ) [18934,18935]" dest="): ) [18934,18935]"/>
  <match src="type_name [51625,51632]" dest="type_name [51627,51634]"/>
  <match src="identifier: b [6953,6954]" dest="identifier: b [6953,6954]"/>
  <match src="identifier: poolCount [92913,92922]" dest="identifier: poolCount [92561,92570]"/>
  <match src="internal: internal [34613,34621]" dest="internal: internal [34613,34621]"/>
  <match src="solidity_version_comparison_operator [1688,1690]" dest="solidity_version_comparison_operator [1688,1690]"/>
  <match src="): ) [103545,103546]" dest="): ) [103469,103470]"/>
  <match src="member_expression [78600,78627]" dest="member_expression [78180,78207]"/>
  <match src="if_statement [29487,29560]" dest="if_statement [29487,29560]"/>
  <match src="assignment_expression [93559,93612]" dest="assignment_expression [93207,93260]"/>
  <match src="if: if [29316,29318]" dest="if: if [29316,29318]"/>
  <match src="=: = [65484,65485]" dest="=: = [65494,65495]"/>
  <match src="[: [ [89479,89480]" dest="[: [ [90721,90722]"/>
  <match src="type_name [38554,38561]" dest="type_name [38554,38561]"/>
  <match src="&quot;: &quot; [25995,25996]" dest="&quot;: &quot; [25995,25996]"/>
  <match src="identifier: mul [90461,90464]" dest="identifier: mul [91500,91503]"/>
  <match src="solidity_version: 0.8.0 [1690,1695]" dest="solidity_version: 0.8.0 [1690,1695]"/>
  <match src="call_expression [81001,81098]" dest="call_expression [81688,81785]"/>
  <match src="identifier: pending [83824,83831]" dest="identifier: pending [84248,84255]"/>
  <match src="=: = [106630,106631]" dest="=: = [106554,106555]"/>
  <match src="memory: memory [16754,16760]" dest="memory: memory [16754,16760]"/>
  <match src="true [98713,98717]" dest="true [98923,98927]"/>
  <match src="(: ( [98022,98023]" dest="(: ( [96787,96788]"/>
  <match src="binary_expression [28777,28783]" dest="binary_expression [28777,28783]"/>
  <match src="}: } [34461,34462]" dest="}: } [34461,34462]"/>
  <match src="function: function [49758,49766]" dest="function: function [49760,49768]"/>
  <match src="variable_declaration [73775,73796]" dest="variable_declaration [73571,73592]"/>
  <match src="): ) [70223,70224]" dest="): ) [69934,69935]"/>
  <match src="number_literal: 0 [6222,6223]" dest="number_literal: 0 [6222,6223]"/>
  <match src="identifier: trySub [5588,5594]" dest="identifier: trySub [5588,5594]"/>
  <match src="type_name [66963,66970]" dest="type_name [67216,67223]"/>
  <match src="(: ( [57333,57334]" dest="(: ( [57335,57336]"/>
  <match src="type_name [82437,82444]" dest="type_name [83275,83282]"/>
  <match src="primitive_type [21270,21277]" dest="primitive_type [21270,21277]"/>
  <match src="(: ( [3492,3493]" dest="(: ( [3492,3493]"/>
  <match src="call_argument [52802,52844]" dest="call_argument [52804,52846]"/>
  <match src="type_name [58588,58595]" dest="type_name [58590,58597]"/>
  <match src="type_name [79778,79785]" dest="type_name [80363,80370]"/>
  <match src="): ) [10970,10971]" dest="): ) [10970,10971]"/>
  <match src="{: { [18855,18856]" dest="{: { [18855,18856]"/>
  <match src="type_name [69910,69914]" dest="type_name [69621,69625]"/>
  <match src="identifier: _amount [98107,98114]" dest="identifier: _amount [96872,96879]"/>
  <match src="primitive_type [64554,64561]" dest="primitive_type [64556,64563]"/>
  <match src="(: ( [83347,83348]" dest="(: ( [84332,84333]"/>
  <match src="identifier: updateSHARDPoolAccumulativeDividend [78962,78997]" dest="identifier: updateSHARDPoolAccumulativeDividend [78751,78786]"/>
  <match src="identifier: user [102581,102585]" dest="identifier: user [102505,102509]"/>
  <match src="return: return [25816,25822]" dest="return: return [25816,25822]"/>
  <match src="member_expression [46976,46988]" dest="member_expression [46363,46375]"/>
  <match src="storage: storage [98536,98543]" dest="storage: storage [97301,97308]"/>
  <match src="primitive_type [26731,26738]" dest="primitive_type [26731,26738]"/>
  <match src="if_statement [34665,34746]" dest="if_statement [34665,34746]"/>
  <match src="identifier: c [6321,6322]" dest="identifier: c [6321,6322]"/>
  <match src="parameter [46234,46254]" dest="parameter [46236,46256]"/>
  <match src="identifier: i [74177,74178]" dest="identifier: i [73908,73909]"/>
  <match src="call_argument [21645,21649]" dest="call_argument [21645,21649]"/>
  <match src="call_expression [42083,42117]" dest="call_expression [42083,42117]"/>
  <match src="(: ( [102691,102692]" dest="(: ( [102615,102616]"/>
  <match src="primitive_type [104519,104526]" dest="primitive_type [104443,104450]"/>
  <match src="member_expression [100939,100965]" dest="member_expression [101097,101123]"/>
  <match src="type_name [104596,104603]" dest="type_name [104520,104527]"/>
  <match src="string_literal [14336,14396]" dest="string_literal [14336,14396]"/>
  <match src="identifier: approve [51913,51920]" dest="identifier: approve [51915,51922]"/>
  <match src="member_expression [99810,99839]" dest="member_expression [98002,98031]"/>
  <match src="bool: bool [19009,19013]" dest="bool: bool [19009,19013]"/>
  <match src="identifier: devDividend [83779,83790]" dest="identifier: devDividend [85511,85522]"/>
  <match src="type_name [217,224]" dest="type_name [217,224]"/>
  <match src="=: = [44732,44733]" dest="=: = [44734,44735]"/>
  <match src="call_expression [90553,90619]" dest="call_expression [91578,91644]"/>
  <match src="function_body [49818,49849]" dest="function_body [49820,49851]"/>
  <match src="member_expression [37267,37282]" dest="member_expression [37267,37282]"/>
  <match src="solidity_version:  0.6.12 [108688,108695]" dest="solidity_version:  0.6.12 [108612,108619]"/>
  <match src="address: address [4106,4113]" dest="address: address [4106,4113]"/>
  <match src=",: , [957,958]" dest=",: , [957,958]"/>
  <match src="member_expression [84806,84826]" dest="member_expression [85937,85957]"/>
  <match src="member_expression [97825,97849]" dest="member_expression [96590,96614]"/>
  <match src="identifier: _initialBlock [104117,104130]" dest="identifier: _initialBlock [104041,104054]"/>
  <match src=",: , [52610,52611]" dest=",: , [52612,52613]"/>
  <match src="member_expression [74680,74711]" dest="member_expression [74432,74463]"/>
  <match src="call_expression [104564,104585]" dest="call_expression [104488,104509]"/>
  <match src="emit_statement [82303,82360]" dest="emit_statement [83141,83198]"/>
  <match src="identifier: Replace [86429,86436]" dest="identifier: Replace [87717,87724]"/>
  <match src="member_expression [103951,103966]" dest="member_expression [103875,103890]"/>
  <match src="/: / [29826,29827]" dest="/: / [29826,29827]"/>
  <match src="true: true [5410,5414]" dest="true: true [5410,5414]"/>
  <match src="type_name [8113,8120]" dest="type_name [8113,8120]"/>
  <match src="identifier: pop [72623,72626]" dest="identifier: pop [72315,72318]"/>
  <match src="identifier: sub [52790,52793]" dest="identifier: sub [52792,52795]"/>
  <match src="bytes: bytes [995,1000]" dest="bytes: bytes [995,1000]"/>
  <match src="variable_declaration_statement [72300,72359]" dest="variable_declaration_statement [72048,72115]"/>
  <match src="identifier: lpTokenTotalSupply [98333,98351]" dest="identifier: lpTokenTotalSupply [97098,97116]"/>
  <match src="member_expression [78901,78920]" dest="member_expression [78409,78428]"/>
  <match src="parameter [5606,5615]" dest="parameter [5606,5615]"/>
  <match src="member_expression [101712,101733]" dest="member_expression [102134,102155]"/>
  <match src="type_name [34589,34598]" dest="type_name [34589,34598]"/>
  <match src="primitive_type [8845,8852]" dest="primitive_type [8845,8852]"/>
  <match src="assignment_expression [76566,76618]" dest="assignment_expression [76082,76134]"/>
  <match src="call_argument [79399,79422]" dest="call_argument [79554,79577]"/>
  <match src="function_definition [34190,34462]" dest="function_definition [34190,34462]"/>
  <match src="]: ] [87876,87877]" dest="]: ] [89037,89038]"/>
  <match src="[: [ [53447,53448]" dest="[: [ [53449,53450]"/>
  <match src="state_mutability [10949,10953]" dest="state_mutability [10949,10953]"/>
  <match src="parameter [40500,40504]" dest="parameter [40500,40504]"/>
  <match src="function: function [46075,46083]" dest="function: function [46077,46085]"/>
  <match src="(: ( [61346,61347]" dest="(: ( [61348,61349]"/>
  <match src="}: } [108155,108156]" dest="}: } [108079,108080]"/>
  <match src="identifier: newAllowance [21970,21982]" dest="identifier: newAllowance [21970,21982]"/>
  <match src="+: + [29636,29637]" dest="+: + [29636,29637]"/>
  <match src="identifier: pool [79572,79576]" dest="identifier: pool [79732,79736]"/>
  <match src="call_argument [82730,82742]" dest="call_argument [83568,83580]"/>
  <match src="memory: memory [19208,19214]" dest="memory: memory [19208,19214]"/>
  <match src="return_type_definition [104501,104536]" dest="return_type_definition [104425,104460]"/>
  <match src="comment: // File: interfaces/DelegatorInterface.sol [0,42]" dest="comment: // File: interfaces/DelegatorInterface.sol [0,42]"/>
  <match src="variable_declaration [100317,100338]" dest="variable_declaration [71880,71901]"/>
  <match src="parameter [17755,17769]" dest="parameter [17755,17769]"/>
  <match src="identifier: sub [103851,103854]" dest="identifier: sub [103775,103778]"/>
  <match src="member_expression [107342,107388]" dest="member_expression [107266,107312]"/>
  <match src="call_argument [20912,20939]" dest="call_argument [20912,20939]"/>
  <match src="return: return [85332,85338]" dest="return: return [86632,86638]"/>
  <match src="): ) [65500,65501]" dest="): ) [65510,65511]"/>
  <match src="identifier: _mint [55595,55600]" dest="identifier: _mint [55597,55602]"/>
  <match src="type_name [14255,14259]" dest="type_name [14255,14259]"/>
  <match src="state_mutability [19263,19267]" dest="state_mutability [19263,19267]"/>
  <match src=",: , [76815,76816]" dest=",: , [76331,76332]"/>
  <match src="=: = [60700,60701]" dest="=: = [60702,60703]"/>
  <match src=".: . [98219,98220]" dest=".: . [96984,96985]"/>
  <match src="member_expression [34291,34306]" dest="member_expression [34291,34306]"/>
  <match src="calldata: calldata [40776,40784]" dest="calldata: calldata [40776,40784]"/>
  <match src="(: ( [80282,80283]" dest="(: ( [80902,80903]"/>
  <match src="identifier: currentRankCount [74027,74043]" dest="identifier: currentRankCount [73757,73773]"/>
  <match src="}: } [19884,19885]" dest="}: } [19884,19885]"/>
  <match src="identifier: PoolInfo [63471,63479]" dest="identifier: PoolInfo [63473,63481]"/>
  <match src="): ) [33214,33215]" dest="): ) [33214,33215]"/>
  <match src="returns: returns [11782,11789]" dest="returns: returns [11782,11789]"/>
  <match src="call_argument [42553,42561]" dest="call_argument [42553,42561]"/>
  <match src="uint256: uint256 [93282,93289]" dest="uint256: uint256 [92930,92937]"/>
  <match src="identifier: _isFirstTokenEth [105421,105437]" dest="identifier: _isFirstTokenEth [105345,105361]"/>
  <match src="member_expression [77612,77635]" dest="member_expression [77052,77075]"/>
  <match src="member_expression [72265,72282]" dest="member_expression [72143,72160]"/>
  <match src="address: address [84121,84128]" dest="address: address [84650,84657]"/>
  <match src="public: public [76101,76107]" dest="public: public [75617,75623]"/>
  <match src="primitive_type [101955,101962]" dest="primitive_type [99859,99866]"/>
  <match src="true: true [70022,70026]" dest="true: true [69733,69737]"/>
  <match src="block_statement [70432,70491]" dest="block_statement [70143,70202]"/>
  <match src="call_argument [62022,62027]" dest="call_argument [62024,62029]"/>
  <match src="identifier: poolCountInRank [76679,76694]" dest="identifier: poolCountInRank [76195,76210]"/>
  <match src="primitive_type [5264,5271]" dest="primitive_type [5264,5271]"/>
  <match src="identifier: _marketingFundDividend [46501,46523]" dest="identifier: _marketingFundDividend [46743,46765]"/>
  <match src="=: = [32774,32775]" dest="=: = [32774,32775]"/>
  <match src="(: ( [35825,35826]" dest="(: ( [35825,35826]"/>
  <match src="-=: -= [28135,28137]" dest="-=: -= [28135,28137]"/>
  <match src="=: = [85934,85935]" dest="=: = [97829,97830]"/>
  <match src="string [14305,14307]" dest="string [14305,14307]"/>
  <match src="&quot;: &quot; [26856,26857]" dest="&quot;: &quot; [26856,26857]"/>
  <match src="if: if [83705,83707]" dest="if: if [85441,85443]"/>
  <match src="struct: struct [63172,63178]" dest="struct: struct [63174,63180]"/>
  <match src="user_defined_type [67023,67031]" dest="user_defined_type [67276,67284]"/>
  <match src=",: , [18484,18485]" dest=",: , [18484,18485]"/>
  <match src="}: } [87637,87638]" dest="}: } [88798,88799]"/>
  <match src="call_expression [35808,35831]" dest="call_expression [35808,35831]"/>
  <match src="): ) [71060,71061]" dest="): ) [70771,70772]"/>
  <match src="&gt;: &gt; [13062,13063]" dest="&gt;: &gt; [13062,13063]"/>
  <match src="binary_expression [29491,29501]" dest="binary_expression [29491,29501]"/>
  <match src=".: . [73650,73651]" dest=".: . [73415,73416]"/>
  <match src="identifier: reserveToMint [66074,66087]" dest="identifier: reserveToMint [66090,66103]"/>
  <match src="]: ] [60482,60483]" dest="]: ] [60484,60485]"/>
  <match src="public: public [25767,25773]" dest="public: public [25767,25773]"/>
  <match src="identifier: _userAmount [46142,46153]" dest="identifier: _userAmount [46144,46155]"/>
  <match src="function: function [33008,33016]" dest="function: function [33008,33016]"/>
  <match src=".: . [90241,90242]" dest=".: . [91203,91204]"/>
  <match src="identifier: _callOptionalReturn [20862,20881]" dest="identifier: _callOptionalReturn [20862,20881]"/>
  <match src="identifier: div [76454,76457]" dest="identifier: div [75970,75973]"/>
  <match src="expression_statement [77027,77077]" dest="expression_statement [76543,76593]"/>
  <match src="type_name [66748,66755]" dest="type_name [67001,67008]"/>
  <match src="identifier: number [76840,76846]" dest="identifier: number [76356,76362]"/>
  <match src="expression_statement [37105,37170]" dest="expression_statement [37105,37170]"/>
  <match src="identifier: i [95876,95877]" dest="identifier: i [95202,95203]"/>
  <match src="(: ( [90353,90354]" dest="(: ( [91426,91427]"/>
  <match src="identifier: blockTimestampLast [107482,107500]" dest="identifier: blockTimestampLast [107406,107424]"/>
  <match src="): ) [102916,102917]" dest="): ) [102840,102841]"/>
  <match src="yul_evm_builtin [13018,13029]" dest="yul_evm_builtin [13018,13029]"/>
  <match src="state_mutability [2060,2064]" dest="state_mutability [2060,2064]"/>
  <match src="primitive_type [27258,27265]" dest="primitive_type [27258,27265]"/>
  <match src="identifier: blockNumber [60083,60094]" dest="identifier: blockNumber [60085,60096]"/>
  <match src="identifier: x [30802,30803]" dest="identifier: x [30802,30803]"/>
  <match src="): ) [77386,77387]" dest="): ) [76826,76827]"/>
  <match src="variable_declaration_statement [99709,99772]" dest="variable_declaration_statement [97901,97964]"/>
  <match src="identifier: initializeTokenOracle [105715,105736]" dest="identifier: initializeTokenOracle [105639,105660]"/>
  <match src="member_expression [41860,41901]" dest="member_expression [41860,41901]"/>
  <match src="call_argument [96290,96293]" dest="call_argument [95600,95603]"/>
  <match src="uint256: uint256 [44101,44108]" dest="uint256: uint256 [44103,44110]"/>
  <match src="unary_expression [37353,37355]" dest="unary_expression [37353,37355]"/>
  <match src="primitive_type [38554,38561]" dest="primitive_type [38554,38561]"/>
  <match src="binary_expression [6247,6252]" dest="binary_expression [6247,6252]"/>
  <match src=",: , [97142,97143]" dest=",: , [95907,95908]"/>
  <match src="identifier: timeElapsed [42240,42251]" dest="identifier: timeElapsed [42240,42251]"/>
  <match src="uint256: uint256 [95424,95431]" dest="uint256: uint256 [94572,94579]"/>
  <match src="parameter [14027,14052]" dest="parameter [14027,14052]"/>
  <match src="): ) [103780,103781]" dest="): ) [103704,103705]"/>
  <match src="=: = [82501,82502]" dest="=: = [83339,83340]"/>
  <match src=",: , [11824,11825]" dest=",: , [11824,11825]"/>
  <match src="if: if [29570,29572]" dest="if: if [29570,29572]"/>
  <match src="function: function [19161,19169]" dest="function: function [19161,19169]"/>
  <match src="): ) [90818,90819]" dest="): ) [91843,91844]"/>
  <match src=",: , [14129,14130]" dest=",: , [14129,14130]"/>
  <match src="return: return [73937,73943]" dest="return: return [73667,73673]"/>
  <match src="call_argument [96161,96165]" dest="call_argument [95471,95475]"/>
  <match src="call_expression [98214,98241]" dest="call_expression [96979,97006]"/>
  <match src="augmented_assignment_expression [30907,30914]" dest="augmented_assignment_expression [30907,30914]"/>
  <match src="): ) [89508,89509]" dest="): ) [90750,90751]"/>
  <match src="uint256: uint256 [67178,67185]" dest="uint256: uint256 [67431,67438]"/>
  <match src="variable_declaration [105902,105920]" dest="variable_declaration [105826,105844]"/>
  <match src="=: = [102671,102672]" dest="=: = [102595,102596]"/>
  <match src="function: function [14008,14016]" dest="function: function [14008,14016]"/>
  <match src="identifier: amount [61361,61367]" dest="identifier: amount [61363,61369]"/>
  <match src="call_argument [104829,104834]" dest="call_argument [104753,104758]"/>
  <match src="member_expression [61011,61023]" dest="member_expression [61013,61025]"/>
  <match src="else: else [70080,70084]" dest="else: else [69791,69795]"/>
  <match src="user_defined_type [79937,79951]" dest="user_defined_type [80522,80536]"/>
  <match src="): ) [40255,40256]" dest="): ) [40255,40256]"/>
  <match src=",: , [87367,87368]" dest=",: , [88528,88529]"/>
  <match src="primitive_type [103809,103816]" dest="primitive_type [103733,103740]"/>
  <match src="primitive_type [82889,82896]" dest="primitive_type [99992,99999]"/>
  <match src="expression_statement [106825,106871]" dest="expression_statement [106749,106795]"/>
  <match src="(: ( [69678,69679]" dest="(: ( [69389,69390]"/>
  <match src=".: . [92949,92950]" dest=".: . [92597,92598]"/>
  <match src="identifier: upper [35437,35442]" dest="identifier: upper [35437,35442]"/>
  <match src="variable_declaration [72117,72138]" dest="variable_declaration [71751,71772]"/>
  <match src="[: [ [92644,92645]" dest="[: [ [92292,92293]"/>
  <match src="call_argument [35437,35457]" dest="call_argument [35437,35457]"/>
  <match src="identifier: _pending [47131,47139]" dest="identifier: _pending [46518,46526]"/>
  <match src="call_expression [80707,80869]" dest="call_expression [81394,81556]"/>
  <match src="solidity_pragma_token [47659,47682]" dest="solidity_pragma_token [47661,47684]"/>
  <match src="identifier: checkpoints [62414,62425]" dest="identifier: checkpoints [62416,62427]"/>
  <match src="binary_expression [60792,60805]" dest="binary_expression [60794,60807]"/>
  <match src="[: [ [86235,86236]" dest="[: [ [87523,87524]"/>
  <match src="identifier: lastPriceUpdateHeight [108211,108232]" dest="identifier: lastPriceUpdateHeight [108135,108156]"/>
  <match src="=: = [83072,83073]" dest="=: = [83851,83852]"/>
  <match src="function: function [42712,42720]" dest="function: function [42712,42720]"/>
  <match src="function_body [6563,6642]" dest="function_body [6563,6642]"/>
  <match src="(: ( [84338,84339]" dest="(: ( [84873,84874]"/>
  <match src="call_argument [85020,85030]" dest="call_argument [86320,86330]"/>
  <match src="return_type_definition [51686,51703]" dest="return_type_definition [51688,51705]"/>
  <match src="identifier: isUserContractSender [43982,44002]" dest="identifier: isUserContractSender [43984,44004]"/>
  <match src="identifier: pool [99958,99962]" dest="identifier: pool [98663,98667]"/>
  <match src="memory: memory [18847,18853]" dest="memory: memory [18847,18853]"/>
  <match src="expression_statement [70045,70064]" dest="expression_statement [69756,69775]"/>
  <match src="identifier: IERC20 [1784,1790]" dest="identifier: IERC20 [1784,1790]"/>
  <match src="pragma_directive [19976,20007]" dest="pragma_directive [19976,20007]"/>
  <match src="true [52061,52065]" dest="true [52063,52067]"/>
  <match src="uint256: uint256 [108356,108363]" dest="uint256: uint256 [108280,108287]"/>
  <match src="type_name [69475,69482]" dest="type_name [69186,69193]"/>
  <match src="identifier: _user [98924,98929]" dest="identifier: _user [99113,99118]"/>
  <match src="): ) [41756,41757]" dest="): ) [41756,41757]"/>
  <match src=".: . [86921,86922]" dest=".: . [88078,88079]"/>
  <match src="identifier: add [79395,79398]" dest="identifier: add [79550,79553]"/>
  <match src="binary_expression [70778,70802]" dest="binary_expression [70489,70513]"/>
  <match src="address: address [107389,107396]" dest="address: address [107313,107320]"/>
  <match src="identifier: sender [85024,85030]" dest="identifier: sender [86324,86330]"/>
  <match src="call_argument [18894,18934]" dest="call_argument [18894,18934]"/>
  <match src="function: function [8089,8097]" dest="function: function [8089,8097]"/>
  <match src="parenthesized_expression [27622,27642]" dest="parenthesized_expression [27622,27642]"/>
  <match src="%: % [105881,105882]" dest="%: % [105805,105806]"/>
  <match src="identifier: mul [98078,98081]" dest="identifier: mul [96843,96846]"/>
  <match src="identifier: i [103628,103629]" dest="identifier: i [103552,103553]"/>
  <match src="{: { [76116,76117]" dest="{: { [75632,75633]"/>
  <match src="primitive_type [33285,33292]" dest="primitive_type [33285,33292]"/>
  <match src="string: string [49126,49132]" dest="string: string [49128,49134]"/>
  <match src="comment: // or when resetting it to zero. To increase and decrease it, use [21403,21468]" dest="comment: // or when resetting it to zero. To increase and decrease it, use [21403,21468]"/>
  <match src="type_name [93043,93050]" dest="type_name [92691,92698]"/>
  <match src="address: address [2707,2714]" dest="address: address [2707,2714]"/>
  <match src="number_literal: 0 [31732,31733]" dest="number_literal: 0 [31732,31733]"/>
  <match src="identifier: newAllowance [22468,22480]" dest="identifier: newAllowance [22468,22480]"/>
  <match src="}: } [108614,108615]" dest="}: } [108538,108539]"/>
  <match src="identifier: functionDelegateCall [18345,18365]" dest="identifier: functionDelegateCall [18345,18365]"/>
  <match src="primitive_type [58828,58835]" dest="primitive_type [58830,58837]"/>
  <match src="}: } [51756,51757]" dest="}: } [51758,51759]"/>
  <match src="identifier: isWithdrawn [98699,98710]" dest="identifier: isWithdrawn [98909,98920]"/>
  <match src="(: ( [83257,83258]" dest="(: ( [90430,90431]"/>
  <match src="(: ( [37130,37131]" dest="(: ( [37130,37131]"/>
  <match src=".: . [21626,21627]" dest=".: . [21626,21627]"/>
  <match src="identifier: _pairInfo [106250,106259]" dest="identifier: _pairInfo [106174,106183]"/>
  <match src="(: ( [36406,36407]" dest="(: ( [36406,36407]"/>
  <match src="(: ( [19008,19009]" dest="(: ( [19008,19009]"/>
  <match src="variable_declaration_tuple [42017,42080]" dest="variable_declaration_tuple [42017,42080]"/>
  <match src="call_argument [47101,47104]" dest="call_argument [46488,46491]"/>
  <match src="call_argument [62015,62020]" dest="call_argument [62017,62022]"/>
  <match src="primitive_type [62231,62238]" dest="primitive_type [62233,62240]"/>
  <match src="(: ( [46527,46528]" dest="(: ( [46769,46770]"/>
  <match src="(: ( [40579,40580]" dest="(: ( [40579,40580]"/>
  <match src="{: { [89177,89178]" dest="{: { [90102,90103]"/>
  <match src="function_body [57889,57929]" dest="function_body [57891,57931]"/>
  <match src="identifier: from [38628,38632]" dest="identifier: from [38628,38632]"/>
  <match src="(: ( [5639,5640]" dest="(: ( [5639,5640]"/>
  <match src="identifier: self [34669,34673]" dest="identifier: self [34669,34673]"/>
  <match src="parameter [79801,79816]" dest="parameter [80386,80401]"/>
  <match src="primitive_type [20612,20619]" dest="primitive_type [20612,20619]"/>
  <match src="internal: internal [20639,20647]" dest="internal: internal [20639,20647]"/>
  <match src="member_expression [72331,72351]" dest="member_expression [72086,72106]"/>
  <match src="variable_declaration_statement [94483,94550]" dest="variable_declaration_statement [94129,94196]"/>
  <match src="(: ( [83105,83106]" dest="(: ( [83884,83885]"/>
  <match src="): ) [92584,92585]" dest="): ) [92232,92233]"/>
  <match src="type_name [17422,17427]" dest="type_name [17422,17427]"/>
  <match src="uint256: uint256 [65975,65982]" dest="uint256: uint256 [65985,65992]"/>
  <match src="identifier: returndata [18034,18044]" dest="identifier: returndata [18034,18044]"/>
  <match src="}: } [37457,37458]" dest="}: } [37457,37458]"/>
  <match src="bytes: bytes [15607,15612]" dest="bytes: bytes [15607,15612]"/>
  <match src=",: , [106007,106008]" dest=",: , [105931,105932]"/>
  <match src="): ) [91008,91009]" dest="): ) [92033,92034]"/>
  <match src="return_statement [34715,34735]" dest="return_statement [34715,34735]"/>
  <match src="block_statement [61412,61721]" dest="block_statement [61414,61723]"/>
  <match src="struct_declaration [63464,63907]" dest="struct_declaration [63466,63909]"/>
  <match src="identifier: pool [93808,93812]" dest="identifier: pool [93454,93458]"/>
  <match src="solidity_version_comparison_operator [27028,27031]" dest="solidity_version_comparison_operator [27028,27031]"/>
  <match src="uint256: uint256 [36233,36240]" dest="uint256: uint256 [36233,36240]"/>
  <match src="expression_statement [93483,93545]" dest="expression_statement [93131,93193]"/>
  <match src="identifier: price0CumulativeLast [41808,41828]" dest="identifier: price0CumulativeLast [41808,41828]"/>
  <match src="identifier: devDividendWeight [47012,47029]" dest="identifier: devDividendWeight [46399,46416]"/>
  <match src="identifier: self [34307,34311]" dest="identifier: self [34307,34311]"/>
  <match src="call_argument [61673,61677]" dest="call_argument [61675,61679]"/>
  <match src="type_name [106937,106950]" dest="type_name [106861,106874]"/>
  <match src="identifier: token [22435,22440]" dest="identifier: token [22435,22440]"/>
  <match src="]: ] [68855,68856]" dest="]: ] [68566,68567]"/>
  <match src="member_expression [45590,45602]" dest="member_expression [45592,45604]"/>
  <match src="binary_expression [30721,30731]" dest="binary_expression [30721,30731]"/>
  <match src="call_argument [81933,81937]" dest="call_argument [82765,82769]"/>
  <match src="identifier: isWithdrawn [100777,100788]" dest="identifier: isWithdrawn [100762,100773]"/>
  <match src="function: function [100075,100083]" dest="function: function [99556,99564]"/>
  <match src="): ) [72993,72994]" dest="): ) [72675,72676]"/>
  <match src=".: . [74005,74006]" dest=".: . [73735,73736]"/>
  <match src="primitive_type [17364,17371]" dest="primitive_type [17364,17371]"/>
  <match src="identifier: mul [8098,8101]" dest="identifier: mul [8098,8101]"/>
  <match src="type_name [86740,86747]" dest="type_name [80081,80088]"/>
  <match src="event: event [66844,66849]" dest="event: event [67097,67102]"/>
  <match src="primitive_type [11740,11746]" dest="primitive_type [11740,11746]"/>
  <match src="): ) [79015,79016]" dest="): ) [78804,78805]"/>
  <match src="number_literal: 1 [31398,31399]" dest="number_literal: 1 [31398,31399]"/>
  <match src="identifier: invitation [94657,94667]" dest="identifier: invitation [94303,94313]"/>
  <match src="identifier: symbol_ [49587,49594]" dest="identifier: symbol_ [49589,49596]"/>
  <match src="return_type_definition [39414,39431]" dest="return_type_definition [39414,39431]"/>
  <match src="identifier: _pool [96923,96928]" dest="identifier: _pool [95688,95693]"/>
  <match src="address: address [93251,93258]" dest="address: address [92899,92906]"/>
  <match src="array_access [51722,51749]" dest="array_access [51724,51751]"/>
  <match src="): ) [21300,21301]" dest="): ) [21300,21301]"/>
  <match src="uint32: uint32 [105902,105908]" dest="uint32: uint32 [105826,105832]"/>
  <match src="identifier: lower_other [35186,35197]" dest="identifier: lower_other [35186,35197]"/>
  <match src="state_mutability [40538,40542]" dest="state_mutability [40538,40542]"/>
  <match src="uint256: uint256 [92548,92555]" dest="uint256: uint256 [92196,92203]"/>
  <match src="&quot;: &quot; [7797,7798]" dest="&quot;: &quot; [7797,7798]"/>
  <match src="expression_statement [87021,87085]" dest="expression_statement [88178,88242]"/>
  <match src="uint32: uint32 [105131,105137]" dest="uint32: uint32 [105055,105061]"/>
  <match src="call_argument [67552,67553]" dest="call_argument [67799,67800]"/>
  <match src="primitive_type [104596,104603]" dest="primitive_type [104520,104527]"/>
  <match src="): ) [34077,34078]" dest="): ) [34077,34078]"/>
  <match src="type_name [35148,35155]" dest="type_name [35148,35155]"/>
  <match src=".: . [84001,84002]" dest=".: . [84530,84531]"/>
  <match src="call_argument [89278,89282]" dest="call_argument [90203,90207]"/>
  <match src="visibility [45530,45538]" dest="visibility [45532,45540]"/>
  <match src="parameter [2034,2049]" dest="parameter [2034,2049]"/>
  <match src="identifier: subtractedValue [54187,54202]" dest="identifier: subtractedValue [54189,54204]"/>
  <match src="identifier: recipient [55200,55209]" dest="identifier: recipient [55202,55211]"/>
  <match src="member_expression [81842,81858]" dest="member_expression [82674,82690]"/>
  <match src="call_argument [89284,89289]" dest="call_argument [90209,90214]"/>
  <match src="binary_expression [104736,104758]" dest="binary_expression [104660,104682]"/>
  <match src="call_argument [16873,16891]" dest="call_argument [16873,16891]"/>
  <match src="identifier: tryToReplacePoolInRank [85190,85212]" dest="identifier: tryToReplacePoolInRank [86490,86512]"/>
  <match src="parameter [5315,5322]" dest="parameter [5315,5322]"/>
  <match src="[: [ [87847,87848]" dest="[: [ [89008,89009]"/>
  <match src="comment: // less than 36 months [80155,80177]" dest="comment: // less than 36 months [80740,80762]"/>
  <match src="number_literal: 4 [29525,29526]" dest="number_literal: 4 [29525,29526]"/>
  <match src="parameter [33466,33473]" dest="parameter [33466,33473]"/>
  <match src="identifier: mul [98298,98301]" dest="identifier: mul [97063,97066]"/>
  <match src="call_argument [14305,14307]" dest="call_argument [14305,14307]"/>
  <match src="): ) [66983,66984]" dest="): ) [67236,67237]"/>
  <match src="primitive_type [40248,40255]" dest="primitive_type [40248,40255]"/>
  <match src="block_statement [29503,29560]" dest="block_statement [29503,29560]"/>
  <match src="identifier: errorMessage [11754,11766]" dest="identifier: errorMessage [11754,11766]"/>
  <match src="primitive_type [95424,95431]" dest="primitive_type [94572,94579]"/>
  <match src="expression_statement [27752,27767]" dest="expression_statement [27752,27767]"/>
  <match src="identifier: owner [57468,57473]" dest="identifier: owner [57470,57475]"/>
  <match src="): ) [66905,66906]" dest="): ) [67158,67159]"/>
  <match src=".: . [108556,108557]" dest=".: . [108480,108481]"/>
  <match src="identifier: poolInfo [91108,91116]" dest="identifier: poolInfo [92133,92141]"/>
  <match src="): ) [40504,40505]" dest="): ) [40504,40505]"/>
  <match src="number_literal: 255 [31367,31370]" dest="number_literal: 255 [31367,31370]"/>
  <match src="binary_expression [31828,31841]" dest="binary_expression [31828,31841]"/>
  <match src="): ) [86680,86681]" dest="): ) [88321,88322]"/>
  <match src="identifier: r [27661,27662]" dest="identifier: r [27661,27662]"/>
  <match src="string [82599,82620]" dest="string [83437,83458]"/>
  <match src="string [8246,8281]" dest="string [8246,8281]"/>
  <match src="=: = [68972,68973]" dest="=: = [68683,68684]"/>
  <match src="variable_declaration [42036,42052]" dest="variable_declaration [42036,42052]"/>
  <match src="expression_statement [30748,30756]" dest="expression_statement [30748,30756]"/>
  <match src="identifier: b [7821,7822]" dest="identifier: b [7821,7822]"/>
  <match src="&gt;&gt;=: &gt;&gt;= [31899,31902]" dest="&gt;&gt;=: &gt;&gt;= [31899,31902]"/>
  <match src="=: = [56534,56535]" dest="=: = [56536,56537]"/>
  <match src="call_argument [58762,58775]" dest="call_argument [58764,58777]"/>
  <match src="string_literal [104836,104853]" dest="string_literal [104760,104777]"/>
  <match src=".: . [79366,79367]" dest=".: . [79521,79522]"/>
  <match src="type_name [80187,80195]" dest="type_name [80807,80815]"/>
  <match src="}: } [37840,37841]" dest="}: } [37840,37841]"/>
  <match src="identifier: staticcall [18055,18065]" dest="identifier: staticcall [18055,18065]"/>
  <match src="bool: bool [69642,69646]" dest="bool: bool [69353,69357]"/>
  <match src="assignment_expression [67966,67994]" dest="assignment_expression [68218,68246]"/>
  <match src="identifier: averageDividend [74593,74608]" dest="identifier: averageDividend [74278,74293]"/>
  <match src="): ) [34266,34267]" dest="): ) [34266,34267]"/>
  <match src="member_expression [102564,102580]" dest="member_expression [102488,102504]"/>
  <match src="-: - [27560,27561]" dest="-: - [27560,27561]"/>
  <match src="public: public [109500,109506]" dest="public: public [109424,109430]"/>
  <match src="): ) [60043,60044]" dest="): ) [60045,60046]"/>
  <match src="identifier: number [60103,60109]" dest="identifier: number [60105,60111]"/>
  <match src=",: , [61269,61270]" dest=",: , [61271,61272]"/>
  <match src="address: address [69735,69742]" dest="address: address [69446,69453]"/>
  <match src=".: . [81846,81847]" dest=".: . [82678,82679]"/>
  <match src="identifier: ShardingDAOMiningDelegate [108713,108738]" dest="identifier: ShardingDAOMiningDelegate [108637,108662]"/>
  <match src="type_cast_expression [108003,108080]" dest="type_cast_expression [107927,108004]"/>
  <match src="identifier: inviteesCount [98953,98966]" dest="identifier: inviteesCount [99138,99151]"/>
  <match src="assignment_expression [73006,73043]" dest="assignment_expression [72688,72725]"/>
  <match src="binary_expression [101576,101598]" dest="binary_expression [101313,101335]"/>
  <match src="): ) [16924,16925]" dest="): ) [16924,16925]"/>
  <match src="type_cast_expression [69679,69703]" dest="type_cast_expression [69390,69414]"/>
  <match src="type_name [6503,6510]" dest="type_name [6503,6510]"/>
  <match src="identifier: add [22025,22028]" dest="identifier: add [22025,22028]"/>
  <match src=".: . [35008,35009]" dest=".: . [35008,35009]"/>
  <match src="identifier: blockNumber [61026,61037]" dest="identifier: blockNumber [61028,61039]"/>
  <match src="identifier: fromNum [61559,61566]" dest="identifier: fromNum [61561,61568]"/>
  <match src="external: external [2051,2059]" dest="external: external [2051,2059]"/>
  <match src="number_literal: 6496 [65295,65299]" dest="number_literal: 6496 [65305,65309]"/>
  <match src="return: return [6208,6214]" dest="return: return [6208,6214]"/>
  <match src="identifier: price1Cumulative [107911,107927]" dest="identifier: price1Cumulative [107835,107851]"/>
  <match src="}: } [83908,83909]" dest="}: } [85626,85627]"/>
  <match src="identifier: account [59958,59965]" dest="identifier: account [59960,59967]"/>
  <match src="(: ( [98106,98107]" dest="(: ( [96871,96872]"/>
  <match src="(: ( [45805,45806]" dest="(: ( [45807,45808]"/>
  <match src="parameter [12671,12686]" dest="parameter [12671,12686]"/>
  <match src="pure: pure [5295,5299]" dest="pure: pure [5295,5299]"/>
  <match src="=: = [61119,61120]" dest="=: = [61121,61122]"/>
  <match src="member_expression [87029,87043]" dest="member_expression [88186,88200]"/>
  <match src="identifier: push [84760,84764]" dest="identifier: push [85891,85895]"/>
  <match src="comment: /**      * @dev Destroys `amount` tokens from `account`, reducing the      * total supply.      *      * Emits a {Transfer} event with `to` set to the zero address.      *      * Requirements:      *      * - `account` cannot be the zero address.      * - `account` must have at least `amount` tokens.      */ [55972,56291]" dest="comment: /**      * @dev Destroys `amount` tokens from `account`, reducing the      * total supply.      *      * Emits a {Transfer} event with `to` set to the zero address.      *      * Requirements:      *      * - `account` cannot be the zero address.      * - `account` must have at least `amount` tokens.      */ [55974,56293]"/>
  <match src="identifier: FullMath [27180,27188]" dest="identifier: FullMath [27180,27188]"/>
  <match src="): ) [23344,23345]" dest="): ) [23344,23345]"/>
  <match src="binary_expression [60562,60609]" dest="binary_expression [60564,60611]"/>
  <match src="primitive_type [5309,5313]" dest="primitive_type [5309,5313]"/>
  <match src="private: private [102390,102397]" dest="private: private [102249,102256]"/>
  <match src="return_statement [7373,7382]" dest="return_statement [7373,7382]"/>
  <match src="return_type_definition [51978,51992]" dest="return_type_definition [51980,51994]"/>
  <match src="identifier: _pending [89655,89663]" dest="identifier: _pending [90897,90905]"/>
  <match src="type_name [95633,95642]" dest="type_name [94781,94790]"/>
  <match src=".: . [105587,105588]" dest=".: . [105511,105512]"/>
  <match src="identifier: transferOwnership [26713,26730]" dest="identifier: transferOwnership [26713,26730]"/>
  <match src="identifier: token [20882,20887]" dest="identifier: token [20882,20887]"/>
  <match src="primitive_type [92769,92776]" dest="primitive_type [92417,92424]"/>
  <match src="parameter [14054,14068]" dest="parameter [14054,14068]"/>
  <match src="identifier: _feeRateDenominator [45288,45307]" dest="identifier: _feeRateDenominator [45290,45309]"/>
  <match src="uint224: uint224 [37423,37430]" dest="uint224: uint224 [37423,37430]"/>
  <match src="member_expression [85417,85435]" dest="member_expression [86717,86735]"/>
  <match src="}: } [31591,31592]" dest="}: } [31591,31592]"/>
  <match src="(: ( [923,924]" dest="(: ( [923,924]"/>
  <match src="type_name [45509,45516]" dest="type_name [45511,45518]"/>
  <match src="(: ( [81260,81261]" dest="(: ( [81949,81950]"/>
  <match src="uint144: uint144 [33205,33212]" dest="uint144: uint144 [33205,33212]"/>
  <match src="visibility [40592,40600]" dest="visibility [40592,40600]"/>
  <match src="): ) [93003,93004]" dest="): ) [92651,92652]"/>
  <match src="identifier: _amount [59695,59702]" dest="identifier: _amount [59697,59704]"/>
  <match src="string: string [19227,19233]" dest="string: string [19227,19233]"/>
  <match src="augmented_assignment_expression [31750,31757]" dest="augmented_assignment_expression [31750,31757]"/>
  <match src="(: ( [25969,25970]" dest="(: ( [25969,25970]"/>
  <match src="identifier: lastDividendHeight [89872,89890]" dest="identifier: lastDividendHeight [91119,91137]"/>
  <match src="variable_declaration_statement [69878,69896]" dest="variable_declaration_statement [69589,69607]"/>
  <match src="parameter [42853,42879]" dest="parameter [42853,42879]"/>
  <match src="identifier: _initialBlock [103686,103699]" dest="identifier: _initialBlock [103610,103623]"/>
  <match src="identifier: require [87349,87356]" dest="identifier: require [88510,88517]"/>
  <match src="type_cast_expression [56688,56698]" dest="type_cast_expression [56690,56700]"/>
  <match src="identifier: owner [51633,51638]" dest="identifier: owner [51635,51640]"/>
  <match src="virtual: virtual [44167,44174]" dest="virtual: virtual [44169,44176]"/>
  <match src="function_definition [27196,27407]" dest="function_definition [27196,27407]"/>
  <match src="identifier: SafeMath [48927,48935]" dest="identifier: SafeMath [48929,48937]"/>
  <match src="call_expression [97187,97220]" dest="call_expression [95952,95985]"/>
  <match src="[: [ [54159,54160]" dest="[: [ [54161,54162]"/>
  <match src="string [7332,7361]" dest="string [7332,7361]"/>
  <match src="uint256: uint256 [29883,29890]" dest="uint256: uint256 [29883,29890]"/>
  <match src="{: { [103655,103656]" dest="{: { [103579,103580]"/>
  <match src="&lt;&lt;: &lt;&lt; [37062,37064]" dest="&lt;&lt;: &lt;&lt; [37062,37064]"/>
  <match src="call_argument [38289,38370]" dest="call_argument [38289,38370]"/>
  <match src="uint32: uint32 [41683,41689]" dest="uint32: uint32 [41683,41689]"/>
  <match src="primitive_type [44613,44620]" dest="primitive_type [44615,44622]"/>
  <match src="identifier: mulmod [28095,28101]" dest="identifier: mulmod [28095,28101]"/>
  <match src="pragma_directive [32224,32248]" dest="pragma_directive [32224,32248]"/>
  <match src=",: , [40325,40326]" dest=",: , [40325,40326]"/>
  <match src="visibility [43841,43847]" dest="visibility [43841,43847]"/>
  <match src="call_argument [16300,16304]" dest="call_argument [16300,16304]"/>
  <match src="number_literal: 0 [13064,13065]" dest="number_literal: 0 [13064,13065]"/>
  <match src="return: return [84640,84646]" dest="return: return [85771,85777]"/>
  <match src="internal: internal [47409,47417]" dest="internal: internal [47411,47419]"/>
  <match src="&lt;: &lt; [74186,74187]" dest="&lt;: &lt; [73917,73918]"/>
  <match src="parameter [20612,20622]" dest="parameter [20612,20622]"/>
  <match src="binary_expression [27807,27816]" dest="binary_expression [27807,27816]"/>
  <match src="): ) [34338,34339]" dest="): ) [34338,34339]"/>
  <match src="(: ( [95893,95894]" dest="(: ( [95160,95161]"/>
  <match src="type_name [93098,93105]" dest="type_name [92746,92753]"/>
  <match src="member_expression [73027,73043]" dest="member_expression [72709,72725]"/>
  <match src="): ) [74209,74210]" dest="): ) [73940,73941]"/>
  <match src="block_statement [38039,38133]" dest="block_statement [38039,38133]"/>
  <match src=".: . [60102,60103]" dest=".: . [60104,60105]"/>
  <match src="{: { [37635,37636]" dest="{: { [37635,37636]"/>
  <match src="{: { [44174,44175]" dest="{: { [44176,44177]"/>
  <match src="type_name [64131,64138]" dest="type_name [64133,64140]"/>
  <match src="address: address [56392,56399]" dest="address: address [56394,56401]"/>
  <match src="identifier: _balances [55213,55222]" dest="identifier: _balances [55215,55224]"/>
  <match src="member_expression [89159,89170]" dest="member_expression [90084,90095]"/>
  <match src="): ) [62397,62398]" dest="): ) [62399,62400]"/>
  <match src=",: , [19772,19773]" dest=",: , [19772,19773]"/>
  <match src="uint256: uint256 [7696,7703]" dest="uint256: uint256 [7696,7703]"/>
  <match src="(: ( [33635,33636]" dest="(: ( [33635,33636]"/>
  <match src="parameter [41683,41704]" dest="parameter [41683,41704]"/>
  <match src=".: . [78770,78771]" dest=".: . [78350,78351]"/>
  <match src="(: ( [36992,36993]" dest="(: ( [36992,36993]"/>
  <match src="=: = [84269,84270]" dest="=: = [84798,84799]"/>
  <match src="identifier: PoolInfo [80187,80195]" dest="identifier: PoolInfo [80807,80815]"/>
  <match src="binary_expression [29793,29798]" dest="binary_expression [29793,29798]"/>
  <match src="=: = [45824,45825]" dest="=: = [45826,45827]"/>
  <match src="state_mutability [95286,95290]" dest="state_mutability [94434,94438]"/>
  <match src="assignment_expression [70505,70628]" dest="assignment_expression [70216,70339]"/>
  <match src="comment: // helper function that returns the current block timestamp within the range of uint32, i.e. [0, 2**32 - 1] [41209,41316]" dest="comment: // helper function that returns the current block timestamp within the range of uint32, i.e. [0, 2**32 - 1] [41209,41316]"/>
  <match src="): ) [56343,56344]" dest="): ) [56345,56346]"/>
  <match src="identifier: Withdraw [84461,84469]" dest="identifier: Withdraw [84996,85004]"/>
  <match src="assignment_expression [93627,93674]" dest="assignment_expression [93275,93322]"/>
  <match src="binary_expression [103328,103352]" dest="binary_expression [103252,103276]"/>
  <match src="]: ] [99252,99253]" dest="]: ] [99412,99413]"/>
  <match src="primitive_type [102412,102419]" dest="primitive_type [102271,102278]"/>
  <match src="primitive_type [26805,26812]" dest="primitive_type [26805,26812]"/>
  <match src="identifier: amount [95028,95034]" dest="identifier: amount [81131,81137]"/>
  <match src="call_argument [57255,57274]" dest="call_argument [57257,57276]"/>
  <match src="primitive_type [63877,63881]" dest="primitive_type [63879,63883]"/>
  <match src="member_expression [82518,82528]" dest="member_expression [83356,83366]"/>
  <match src="(: ( [38611,38612]" dest="(: ( [38611,38612]"/>
  <match src="identifier: _otherPoolWeight [75512,75528]" dest="identifier: _otherPoolWeight [75028,75044]"/>
  <match src="identifier: success [17004,17011]" dest="identifier: success [17004,17011]"/>
  <match src="[: [ [46620,46621]" dest="[: [ [46862,46863]"/>
  <match src="comment: // Return data is optional [23440,23466]" dest="comment: // Return data is optional [23440,23466]"/>
  <match src="call_expression [51471,51513]" dest="call_expression [51473,51515]"/>
  <match src="expression_statement [67306,67317]" dest="expression_statement [67553,67564]"/>
  <match src="identifier: owner [25759,25764]" dest="identifier: owner [25759,25764]"/>
  <match src="identifier: lastPoolIndex [87726,87739]" dest="identifier: lastPoolIndex [88887,88900]"/>
  <match src="number_literal: 4 [31963,31964]" dest="number_literal: 4 [31963,31964]"/>
  <match src="member_expression [73272,73288]" dest="member_expression [73037,73053]"/>
  <match src="uint256: uint256 [61600,61607]" dest="uint256: uint256 [61602,61609]"/>
  <match src="member_expression [106427,106488]" dest="member_expression [106351,106412]"/>
  <match src="type_name [104528,104535]" dest="type_name [104452,104459]"/>
  <match src="identifier: beforeCalculateIndex [104309,104329]" dest="identifier: beforeCalculateIndex [104233,104253]"/>
  <match src="call_expression [83487,83567]" dest="call_expression [84356,84432]"/>
  <match src="(: ( [85951,85952]" dest="(: ( [87250,87251]"/>
  <match src="block_statement [83179,83920]" dest="block_statement [84260,84444]"/>
  <match src="identifier: add [46524,46527]" dest="identifier: add [46766,46769]"/>
  <match src="uint256: uint256 [71680,71687]" dest="uint256: uint256 [71391,71398]"/>
  <match src="): ) [77011,77012]" dest="): ) [76527,76528]"/>
  <match src="external: external [42756,42764]" dest="external: external [42756,42764]"/>
  <match src="uint256: uint256 [43257,43264]" dest="uint256: uint256 [43257,43264]"/>
  <match src=".: . [97644,97645]" dest=".: . [96409,96410]"/>
  <match src="type_name [40646,40653]" dest="type_name [40646,40653]"/>
  <match src="uint256: uint256 [5955,5962]" dest="uint256: uint256 [5955,5962]"/>
  <match src="type_cast_expression [31389,31400]" dest="type_cast_expression [31389,31400]"/>
  <match src="augmented_assignment_expression [32143,32149]" dest="augmented_assignment_expression [32143,32149]"/>
  <match src="): ) [39297,39298]" dest="): ) [39297,39298]"/>
  <match src="address: address [62773,62780]" dest="address: address [62775,62782]"/>
  <match src="expression_statement [70385,70411]" dest="expression_statement [70096,70122]"/>
  <match src="parameter [90743,90760]" dest="parameter [91768,91785]"/>
  <match src="identifier: currentPoolCountInRank [87511,87533]" dest="identifier: currentPoolCountInRank [88672,88694]"/>
  <match src="address: address [55928,55935]" dest="address: address [55930,55937]"/>
  <match src="solidity: solidity [4478,4486]" dest="solidity: solidity [4478,4486]"/>
  <match src="=: = [99043,99044]" dest="=: = [99224,99225]"/>
  <match src="identifier: result [37209,37215]" dest="identifier: result [37209,37215]"/>
  <match src="block_statement [60951,61001]" dest="block_statement [60953,61003]"/>
  <match src="{: { [25277,25278]" dest="{: { [25277,25278]"/>
  <match src="identifier: poolInfo [71083,71091]" dest="identifier: poolInfo [70794,70802]"/>
  <match src="external: external [59753,59761]" dest="external: external [59755,59763]"/>
  <match src="struct_member [63987,64014]" dest="struct_member [63989,64016]"/>
  <match src="==: == [85517,85519]" dest="==: == [86817,86819]"/>
  <match src="primitive_type [82540,82547]" dest="primitive_type [83378,83385]"/>
  <match src="bytes: bytes [17841,17846]" dest="bytes: bytes [17841,17846]"/>
  <match src="call_argument [79228,79236]" dest="call_argument [79383,79391]"/>
  <match src="identifier: h [27470,27471]" dest="identifier: h [27470,27471]"/>
  <match src="function: function [896,904]" dest="function: function [896,904]"/>
  <match src="primitive_type [72117,72124]" dest="primitive_type [71751,71758]"/>
  <match src="if: if [28773,28775]" dest="if: if [28773,28775]"/>
  <match src="expression_statement [73551,73595]" dest="expression_statement [73316,73360]"/>
  <match src="return: return [8920,8926]" dest="return: return [8920,8926]"/>
  <match src="}: } [79645,79646]" dest="}: } [80008,80009]"/>
  <match src="primitive_type [40676,40680]" dest="primitive_type [40676,40680]"/>
  <match src="identifier: _amount [81749,81756]" dest="identifier: _amount [82564,82571]"/>
  <match src="identifier: _amount [80766,80773]" dest="identifier: _amount [81453,81460]"/>
  <match src="primitive_type [102539,102546]" dest="primitive_type [102463,102470]"/>
  <match src="for: for [41195,41198]" dest="for: for [41195,41198]"/>
  <match src="call_argument [93053,93062]" dest="call_argument [92701,92710]"/>
  <match src="}: } [62886,62887]" dest="}: } [62888,62889]"/>
  <match src="identifier: amount [90594,90600]" dest="identifier: amount [91619,91625]"/>
  <match src="identifier: SafeMath [43030,43038]" dest="identifier: SafeMath [43030,43038]"/>
  <match src="type_name [17790,17796]" dest="type_name [17790,17796]"/>
  <match src="event_definition [25315,25399]" dest="event_definition [25315,25399]"/>
  <match src="function_definition [68872,68991]" dest="function_definition [68583,68702]"/>
  <match src="identifier: poolInfo [69519,69527]" dest="identifier: poolInfo [69230,69238]"/>
  <match src=",: , [88836,88837]" dest=",: , [89684,89685]"/>
  <match src="{: { [67229,67230]" dest="{: { [67476,67477]"/>
  <match src="(: ( [54951,54952]" dest="(: ( [54953,54954]"/>
  <match src="external: external [44654,44662]" dest="external: external [44656,44664]"/>
  <match src="type_name [40741,40745]" dest="type_name [40741,40745]"/>
  <match src="yul_function_call [13018,13038]" dest="yul_function_call [13018,13038]"/>
  <match src="parameter [27258,27267]" dest="parameter [27258,27267]"/>
  <match src="call_expression [36506,36567]" dest="call_expression [36506,36567]"/>
  <match src="(: ( [98056,98057]" dest="(: ( [96821,96822]"/>
  <match src="identifier: _becomeImplementation [109052,109073]" dest="identifier: _becomeImplementation [108976,108997]"/>
  <match src="identifier: errorMessage [16716,16728]" dest="identifier: errorMessage [16716,16728]"/>
  <match src="type_name [7696,7703]" dest="type_name [7696,7703]"/>
  <match src="pure: pure [33452,33456]" dest="pure: pure [33452,33456]"/>
  <match src="identifier: isFirstTokenEth [105404,105419]" dest="identifier: isFirstTokenEth [105328,105343]"/>
  <match src="identifier: i [88804,88805]" dest="identifier: i [89652,89653]"/>
  <match src="{: { [70646,70647]" dest="{: { [70357,70358]"/>
  <match src="(: ( [72749,72750]" dest="(: ( [72802,72803]"/>
  <match src="=: = [93092,93093]" dest="=: = [92740,92741]"/>
  <match src=",: , [63025,63026]" dest=",: , [63027,63028]"/>
  <match src=",: , [103049,103050]" dest=",: , [102973,102974]"/>
  <match src="): ) [34652,34653]" dest="): ) [34652,34653]"/>
  <match src="visibility [43100,43106]" dest="visibility [43100,43106]"/>
  <match src="==: == [99893,99895]" dest="==: == [98085,98087]"/>
  <match src="array_access [60445,60465]" dest="array_access [60447,60467]"/>
  <match src="}: } [61720,61721]" dest="}: } [61722,61723]"/>
  <match src="binary_expression [6949,6954]" dest="binary_expression [6949,6954]"/>
  <match src=",: , [17769,17770]" dest=",: , [17769,17770]"/>
  <match src="number_literal: 1 [29772,29773]" dest="number_literal: 1 [29772,29773]"/>
  <match src="struct_member [32594,32605]" dest="struct_member [32594,32605]"/>
  <match src="identifier: Withdraw [66583,66591]" dest="identifier: Withdraw [66836,66844]"/>
  <match src="variable_declaration [34827,34845]" dest="variable_declaration [34827,34845]"/>
  <match src=",: , [36535,36536]" dest=",: , [36535,36536]"/>
  <match src="identifier: _lockAmount [90997,91008]" dest="identifier: _lockAmount [92022,92033]"/>
  <match src="external: external [79852,79860]" dest="external: external [80437,80445]"/>
  <match src="emit_statement [26869,26913]" dest="emit_statement [26869,26913]"/>
  <match src=",: , [27315,27316]" dest=",: , [27315,27316]"/>
  <match src="{: { [25951,25952]" dest="{: { [25951,25952]"/>
  <match src="parameter [6548,6552]" dest="parameter [6548,6552]"/>
  <match src="{: { [102641,102642]" dest="{: { [102565,102566]"/>
  <match src="number_literal: 2263 [68632,68636]" dest="number_literal: 2263 [68507,68511]"/>
  <match src="returns: returns [77396,77403]" dest="returns: returns [76836,76843]"/>
  <match src="identifier: totalReward [104266,104277]" dest="identifier: totalReward [104190,104201]"/>
  <match src="address: address [64888,64895]" dest="address: address [64896,64903]"/>
  <match src="primitive_type [67047,67054]" dest="primitive_type [67300,67307]"/>
  <match src="array_access [108523,108534]" dest="array_access [108447,108458]"/>
  <match src="): ) [38942,38943]" dest="): ) [38942,38943]"/>
  <match src="}: } [42608,42609]" dest="}: } [42608,42609]"/>
  <match src="identifier: nCheckpoints [60702,60714]" dest="identifier: nCheckpoints [60704,60716]"/>
  <match src=".: . [56642,56643]" dest=".: . [56644,56645]"/>
  <match src="string [80044,80079]" dest="string [80629,80664]"/>
  <match src="}: } [44429,44430]" dest="}: } [44431,44432]"/>
  <match src="member_expression [105638,105650]" dest="member_expression [105562,105574]"/>
  <match src="identifier: _initialBlock [103904,103917]" dest="identifier: _initialBlock [103828,103841]"/>
  <match src="call_expression [44185,44197]" dest="call_expression [44187,44199]"/>
  <match src="binary_expression [107106,107140]" dest="binary_expression [107030,107064]"/>
  <match src="function: function [50857,50865]" dest="function: function [50859,50867]"/>
  <match src="identifier: _originWeight [98481,98494]" dest="identifier: _originWeight [97246,97259]"/>
  <match src=".: . [87181,87182]" dest=".: . [88340,88341]"/>
  <match src="if: if [77119,77121]" dest="if: if [77904,77906]"/>
  <match src="]: ] [60377,60378]" dest="]: ] [60379,60380]"/>
  <match src="identifier: targetTokenPosition [70204,70223]" dest="identifier: targetTokenPosition [69915,69934]"/>
  <match src=",: , [77368,77369]" dest=",: , [76808,76809]"/>
  <match src="&quot;: &quot; [55138,55139]" dest="&quot;: &quot; [55140,55141]"/>
  <match src=",: , [17479,17480]" dest=",: , [17479,17480]"/>
  <match src="assignment_expression [94189,94211]" dest="assignment_expression [93835,93857]"/>
  <match src="call_argument [81953,81960]" dest="call_argument [82785,82792]"/>
  <match src="}: } [99399,99400]" dest="}: } [97499,97500]"/>
  <match src="{: { [24355,24356]" dest="{: { [24355,24356]"/>
  <match src="(: ( [87788,87789]" dest="(: ( [88949,88950]"/>
  <match src="&lt;&lt;=: &lt;&lt;= [29543,29546]" dest="&lt;&lt;=: &lt;&lt;= [29543,29546]"/>
  <match src="identifier: accumulativeDividend [93524,93544]" dest="identifier: accumulativeDividend [93172,93192]"/>
  <match src="binary_expression [74309,74333]" dest="binary_expression [74128,74152]"/>
  <match src="identifier: lastRewardBlock [78052,78067]" dest="identifier: lastRewardBlock [77182,77197]"/>
  <match src="identifier: checkpoints [60445,60456]" dest="identifier: checkpoints [60447,60458]"/>
  <match src="call_argument [83106,83120]" dest="call_argument [83885,83899]"/>
  <match src="identifier: _lpTokenSwap [70997,71009]" dest="identifier: _lpTokenSwap [70708,70720]"/>
  <match src=",: , [54048,54049]" dest=",: , [54050,54051]"/>
  <match src="(: ( [36153,36154]" dest="(: ( [36153,36154]"/>
  <match src="call_expression [84323,84364]" dest="call_expression [84852,84899]"/>
  <match src="call_expression [104296,104330]" dest="call_expression [104220,104254]"/>
  <match src="binary_expression [34669,34698]" dest="binary_expression [34669,34698]"/>
  <match src="function: function [20761,20769]" dest="function: function [20761,20769]"/>
  <match src="{: { [97340,97341]" dest="{: { [96105,96106]"/>
  <match src="identifier: number [77300,77306]" dest="identifier: number [76740,76746]"/>
  <match src="virtual: virtual [49786,49793]" dest="virtual: virtual [49788,49795]"/>
  <match src="virtual: virtual [91064,91071]" dest="virtual: virtual [92089,92096]"/>
  <match src="type_name [16668,16673]" dest="type_name [16668,16673]"/>
  <match src="): ) [43973,43974]" dest="): ) [43973,43974]"/>
  <match src="call_argument [76765,76781]" dest="call_argument [76281,76297]"/>
  <match src="pure: pure [30233,30237]" dest="pure: pure [30233,30237]"/>
  <match src="return: return [5705,5711]" dest="return: return [5705,5711]"/>
  <match src="virtual: virtual [54844,54851]" dest="virtual: virtual [54846,54853]"/>
  <match src="if_statement [30446,30533]" dest="if_statement [30446,30533]"/>
  <match src="identifier: amount1Out [40746,40756]" dest="identifier: amount1Out [40746,40756]"/>
  <match src="(: ( [104735,104736]" dest="(: ( [104659,104660]"/>
  <match src="if_statement [104645,104723]" dest="if_statement [104569,104647]"/>
  <match src=".: . [86868,86869]" dest=".: . [88025,88026]"/>
  <match src="unary_expression [36532,36534]" dest="unary_expression [36532,36534]"/>
  <match src="*=: *= [27729,27731]" dest="*=: *= [27729,27731]"/>
  <match src="): ) [14068,14069]" dest="): ) [14068,14069]"/>
  <match src="type_name [33205,33212]" dest="type_name [33205,33212]"/>
  <match src="): ) [37437,37438]" dest="): ) [37437,37438]"/>
  <match src="type_name [21927,21934]" dest="type_name [21927,21934]"/>
  <match src="user_defined_type [35950,35959]" dest="user_defined_type [35950,35959]"/>
  <match src="=: = [60672,60673]" dest="=: = [60674,60675]"/>
  <match src="identifier: value [16695,16700]" dest="identifier: value [16695,16700]"/>
  <match src="]: ] [61894,61895]" dest="]: ] [61896,61897]"/>
  <match src=".: . [80996,80997]" dest=".: . [81683,81684]"/>
  <match src="(: ( [38774,38775]" dest="(: ( [38774,38775]"/>
  <match src="parameter [96083,96098]" dest="parameter [95393,95408]"/>
  <match src="identifier: senderRelationshipInfo [98676,98698]" dest="identifier: senderRelationshipInfo [98886,98908]"/>
  <match src="): ) [35614,35615]" dest="): ) [35614,35615]"/>
  <match src="=: = [67575,67576]" dest="=: = [67822,67823]"/>
  <match src="binary_expression [5367,5372]" dest="binary_expression [5367,5372]"/>
  <match src="pure: pure [37968,37972]" dest="pure: pure [37968,37972]"/>
  <match src="primitive_type [42018,42025]" dest="primitive_type [42018,42025]"/>
  <match src="parameter [39590,39599]" dest="parameter [39590,39599]"/>
  <match src="}: } [32156,32157]" dest="}: } [32156,32157]"/>
  <match src="(: ( [95695,95696]" dest="(: ( [94843,94844]"/>
  <match src="identifier: inviteeWeight [81617,81630]" dest="identifier: inviteeWeight [100244,100257]"/>
  <match src="identifier: termStartIndex [104169,104183]" dest="identifier: termStartIndex [104093,104107]"/>
  <match src="identifier: Transfer [38603,38611]" dest="identifier: Transfer [38603,38611]"/>
  <match src="visibility [8124,8132]" dest="visibility [8124,8132]"/>
  <match src="}: } [63428,63429]" dest="}: } [63430,63431]"/>
  <match src="): ) [70364,70365]" dest="): ) [70075,70076]"/>
  <match src=",: , [22118,22119]" dest=",: , [22118,22119]"/>
  <match src="[: [ [73624,73625]" dest="[: [ [73389,73390]"/>
  <match src="]: ] [89757,89758]" dest="]: ] [90999,91000]"/>
  <match src="expression_statement [83997,84013]" dest="expression_statement [84526,84542]"/>
  <match src="memory: memory [105315,105321]" dest="memory: memory [105239,105245]"/>
  <match src="library: library [30036,30043]" dest="library: library [30036,30043]"/>
  <match src="address: address [61400,61407]" dest="address: address [61402,61409]"/>
  <match src="identifier: sender [52585,52591]" dest="identifier: sender [52587,52593]"/>
  <match src="{: { [99621,99622]" dest="{: { [97711,97712]"/>
  <match src="function_body [57236,57499]" dest="function_body [57238,57501]"/>
  <match src="binary_expression [31606,31624]" dest="binary_expression [31606,31624]"/>
  <match src="=: = [27663,27664]" dest="=: = [27663,27664]"/>
  <match src="=: = [67310,67311]" dest="=: = [67557,67558]"/>
  <match src="call_expression [104117,104137]" dest="call_expression [104041,104061]"/>
  <match src="assignment_expression [45936,45966]" dest="assignment_expression [45938,45968]"/>
  <match src="virtual: virtual [94308,94315]" dest="virtual: virtual [93954,93961]"/>
  <match src="assignment_expression [67821,67843]" dest="assignment_expression [68073,68095]"/>
  <match src="uint256: uint256 [86000,86007]" dest="uint256: uint256 [100130,100137]"/>
  <match src="number_literal: 0 [105164,105165]" dest="number_literal: 0 [105088,105089]"/>
  <match src="return: return [73224,73230]" dest="return: return [72989,72995]"/>
  <match src="): ) [78652,78653]" dest="): ) [78232,78233]"/>
  <match src="member_expression [89383,89395]" dest="member_expression [77716,77745]"/>
  <match src="{: { [31626,31627]" dest="{: { [31626,31627]"/>
  <match src=".: . [14282,14283]" dest=".: . [14282,14283]"/>
  <match src="type_name [105301,105314]" dest="type_name [105225,105238]"/>
  <match src="): ) [36914,36915]" dest="): ) [36914,36915]"/>
  <match src="uint256: uint256 [64660,64667]" dest="uint256: uint256 [64664,64671]"/>
  <match src="identifier: price0Cumulative [108011,108027]" dest="identifier: price0Cumulative [107935,107951]"/>
  <match src="identifier: _isWithdrawn [94443,94455]" dest="identifier: _isWithdrawn [94089,94101]"/>
  <match src="primitive_type [60766,60773]" dest="primitive_type [60768,60775]"/>
  <match src="call_argument [107145,107176]" dest="call_argument [107069,107100]"/>
  <match src="{: { [21951,21952]" dest="{: { [21951,21952]"/>
  <match src=",: , [54202,54203]" dest=",: , [54204,54205]"/>
  <match src="function_body [102420,102776]" dest="function_body [102279,102700]"/>
  <match src="(: ( [23338,23339]" dest="(: ( [23338,23339]"/>
  <match src="]: ] [61468,61469]" dest="]: ] [61470,61471]"/>
  <match src="type_name [3839,3846]" dest="type_name [3839,3846]"/>
  <match src="identifier: numCheckpoints [62581,62595]" dest="identifier: numCheckpoints [62583,62597]"/>
  <match src="type_name [93201,93210]" dest="type_name [92849,92858]"/>
  <match src="visibility [6525,6533]" dest="visibility [6525,6533]"/>
  <match src="(: ( [80808,80809]" dest="(: ( [81495,81496]"/>
  <match src=".: . [67433,67434]" dest=".: . [67680,67681]"/>
  <match src="identifier: getInvitation [42782,42795]" dest="identifier: getInvitation [42782,42795]"/>
  <match src="if: if [104733,104735]" dest="if: if [104657,104659]"/>
  <match src="&quot;: &quot; [58781,58782]" dest="&quot;: &quot; [58783,58784]"/>
  <match src="identifier: originWeight [84432,84444]" dest="identifier: originWeight [84967,84979]"/>
  <match src="): ) [60749,60750]" dest="): ) [60751,60752]"/>
  <match src="binary_expression [61361,61371]" dest="binary_expression [61363,61373]"/>
  <match src="view: view [25774,25778]" dest="view: view [25774,25778]"/>
  <match src="identifier: FixedPoint [97592,97602]" dest="identifier: FixedPoint [96357,96367]"/>
  <match src="identifier: RESOLUTION [37065,37075]" dest="identifier: RESOLUTION [37065,37075]"/>
  <match src="call_expression [87210,87240]" dest="call_expression [88371,88401]"/>
  <match src="block_statement [29420,29477]" dest="block_statement [29420,29477]"/>
  <match src="type_name [96364,96372]" dest="type_name [99934,99942]"/>
  <match src="user_defined_type [99941,99949]" dest="user_defined_type [98646,98654]"/>
  <match src="array_access [61541,61558]" dest="array_access [61543,61560]"/>
  <match src="identifier: x [31306,31307]" dest="identifier: x [31306,31307]"/>
  <match src="function: function [75846,75854]" dest="function: function [75362,75370]"/>
  <match src="identifier: block [89899,89904]" dest="identifier: block [91146,91151]"/>
  <match src="identifier: _pairInfo [107715,107724]" dest="identifier: _pairInfo [107639,107648]"/>
  <match src="identifier: getOracleWeight [85936,85951]" dest="identifier: calculateOracleWeight [87229,87250]"/>
  <match src="function: function [33845,33853]" dest="function: function [33845,33853]"/>
  <match src="return_statement [25816,25830]" dest="return_statement [25816,25830]"/>
  <match src="call_struct_argument [71139,71160]" dest="call_struct_argument [70850,70871]"/>
  <match src="): ) [28783,28784]" dest="): ) [28783,28784]"/>
  <match src="primitive_type [21637,21644]" dest="primitive_type [21637,21644]"/>
  <match src="call_expression [37105,37169]" dest="call_expression [37105,37169]"/>
  <match src="uint: uint [41637,41641]" dest="uint: uint [41637,41641]"/>
  <match src="=: = [28969,28970]" dest="=: = [28969,28970]"/>
  <match src="if_statement [60354,60501]" dest="if_statement [60356,60503]"/>
  <match src="augmented_assignment_expression [42508,42590]" dest="augmented_assignment_expression [42508,42590]"/>
  <match src="binary_expression [62294,62387]" dest="binary_expression [62296,62389]"/>
  <match src="identifier: _accumulativeDividend [93015,93036]" dest="identifier: _accumulativeDividend [92663,92684]"/>
  <match src="expression_statement [59783,59806]" dest="expression_statement [59785,59808]"/>
  <match src="(: ( [45253,45254]" dest="(: ( [45255,45256]"/>
  <match src="(: ( [83088,83089]" dest="(: ( [83867,83868]"/>
  <match src="binary_expression [77484,77515]" dest="binary_expression [76924,76955]"/>
  <match src="identifier: pool [80260,80264]" dest="identifier: pool [80880,80884]"/>
  <match src="binary_expression [74027,74047]" dest="binary_expression [73757,73777]"/>
  <match src="}: } [62477,62478]" dest="}: } [62479,62480]"/>
  <match src="number_literal: 0 [6601,6602]" dest="number_literal: 0 [6601,6602]"/>
  <match src="primitive_type [92675,92682]" dest="primitive_type [92323,92330]"/>
  <match src="identifier: msgSender [25651,25660]" dest="identifier: msgSender [25651,25660]"/>
  <match src="identifier: poolRankIndex [72125,72138]" dest="identifier: poolRankIndex [71759,71772]"/>
  <match src="identifier: lower_other [34981,34992]" dest="identifier: lower_other [34981,34992]"/>
  <match src="): ) [56653,56654]" dest="): ) [56655,56656]"/>
  <match src="function: function [51904,51912]" dest="function: function [51906,51914]"/>
  <match src="[: [ [85392,85393]" dest="[: [ [86692,86693]"/>
  <match src="-=: -= [28152,28154]" dest="-=: -= [28152,28154]"/>
  <match src="uint: uint [39173,39177]" dest="uint: uint [39173,39177]"/>
  <match src="(: ( [89692,89693]" dest="(: ( [90934,90935]"/>
  <match src=".: . [103850,103851]" dest=".: . [103774,103775]"/>
  <match src="identifier: description [72968,72979]" dest="identifier: description [72650,72661]"/>
  <match src="library: library [5083,5090]" dest="library: library [5083,5090]"/>
  <match src="address: address [53312,53319]" dest="address: address [53314,53321]"/>
  <match src="identifier: pool [89591,89595]" dest="identifier: pool [90833,90837]"/>
  <match src="identifier: newVotes [62557,62565]" dest="identifier: newVotes [62559,62567]"/>
  <match src="identifier: returndata [19215,19225]" dest="identifier: returndata [19215,19225]"/>
  <match src="&quot;: &quot; [15298,15299]" dest="&quot;: &quot; [15298,15299]"/>
  <match src="visibility [75536,75544]" dest="visibility [75052,75060]"/>
  <match src="&quot;: &quot; [56404,56405]" dest="&quot;: &quot; [56406,56407]"/>
  <match src="(: ( [25975,25976]" dest="(: ( [25975,25976]"/>
  <match src="override_specifier [51969,51977]" dest="override_specifier [51971,51979]"/>
  <match src=".: . [83343,83344]" dest=".: . [84328,84329]"/>
  <match src="assignment_expression [26522,26541]" dest="assignment_expression [26522,26541]"/>
  <match src="uint256: uint256 [101298,101305]" dest="uint256: uint256 [101768,101775]"/>
  <match src="expression_statement [56515,56605]" dest="expression_statement [56517,56607]"/>
  <match src="variable_declaration_tuple [105972,106035]" dest="variable_declaration_tuple [105896,105959]"/>
  <match src="(: ( [90810,90811]" dest="(: ( [91835,91836]"/>
  <match src="identifier: numerator [36930,36939]" dest="identifier: numerator [36930,36939]"/>
  <match src="): ) [22234,22235]" dest="): ) [22234,22235]"/>
  <match src="call_argument [76226,76230]" dest="call_argument [75742,75746]"/>
  <match src="number_literal: 0 [44280,44281]" dest="number_literal: 0 [44282,44283]"/>
  <match src="member_expression [84875,84901]" dest="member_expression [86006,86032]"/>
  <match src="address: address [48965,48972]" dest="address: address [48967,48974]"/>
  <match src="(: ( [10962,10963]" dest="(: ( [10962,10963]"/>
  <match src="): ) [39135,39136]" dest="): ) [39135,39136]"/>
  <match src="return_type_definition [2065,2082]" dest="return_type_definition [2065,2082]"/>
  <match src="primitive_type [104510,104517]" dest="primitive_type [104434,104441]"/>
  <match src="type_name [79827,79834]" dest="type_name [80412,80419]"/>
  <match src="): ) [35829,35830]" dest="): ) [35829,35830]"/>
  <match src="function: function [37922,37930]" dest="function: function [37922,37930]"/>
  <match src="visibility [3475,3483]" dest="visibility [3475,3483]"/>
  <match src="&quot;: &quot; [82619,82620]" dest="&quot;: &quot; [83457,83458]"/>
  <match src="{: { [77517,77518]" dest="{: { [76957,76958]"/>
  <match src="): ) [83723,83724]" dest="): ) [85459,85460]"/>
  <match src="any_source_type [41199,41200]" dest="any_source_type [41199,41200]"/>
  <match src="=&gt;: =&gt; [64657,64659]" dest="=&gt;: =&gt; [64661,64663]"/>
  <match src="string: string [18795,18801]" dest="string: string [18795,18801]"/>
  <match src="comment: // Shh -- currently unused [109166,109192]" dest="comment: // Shh -- currently unused [109090,109116]"/>
  <match src="uint256: uint256 [48940,48947]" dest="uint256: uint256 [48942,48949]"/>
  <match src="identifier: sender [39824,39830]" dest="identifier: sender [39824,39830]"/>
  <match src="}: } [84657,84658]" dest="}: } [85788,85789]"/>
  <match src=".: . [38089,38090]" dest=".: . [38089,38090]"/>
  <match src="identifier: poolCount [88606,88615]" dest="identifier: poolCount [89454,89463]"/>
  <match src="new_expression [88700,88713]" dest="new_expression [89548,89561]"/>
  <match src="identifier: shardPoolDividendWeight [75735,75758]" dest="identifier: shardPoolDividendWeight [75251,75274]"/>
  <match src="number_literal: 1 [77636,77637]" dest="number_literal: 1 [77076,77077]"/>
  <match src="(: ( [95219,95220]" dest="(: ( [94367,94368]"/>
  <match src="address: address [96070,96077]" dest="address: address [95380,95387]"/>
  <match src="return: return [50938,50944]" dest="return: return [50940,50946]"/>
  <match src=".: . [100915,100916]" dest=".: . [100978,100979]"/>
  <match src="binary_expression [31715,31733]" dest="binary_expression [31715,31733]"/>
  <match src="if: if [5363,5365]" dest="if: if [5363,5365]"/>
  <match src="variable_declaration [7288,7297]" dest="variable_declaration [7288,7297]"/>
  <match src="assignment_expression [29660,29680]" dest="assignment_expression [29660,29680]"/>
  <match src="number_literal: 0x1 [32134,32137]" dest="number_literal: 0x1 [32134,32137]"/>
  <match src=",: , [14267,14268]" dest=",: , [14267,14268]"/>
  <match src="identifier: push [71092,71096]" dest="identifier: push [70803,70807]"/>
  <match src="primitive_type [27442,27449]" dest="primitive_type [27442,27449]"/>
  <match src="view: view [39478,39482]" dest="view: view [39478,39482]"/>
  <match src="{: { [105823,105824]" dest="{: { [105747,105748]"/>
  <match src="[: [ [93504,93505]" dest="[: [ [93152,93153]"/>
  <match src="type_name [36438,36445]" dest="type_name [36438,36445]"/>
  <match src="member_expression [108201,108232]" dest="member_expression [108125,108156]"/>
  <match src="identifier: _devDividend [47084,47096]" dest="identifier: _devDividend [46471,46483]"/>
  <match src="variable_declaration [89099,89120]" dest="variable_declaration [89947,89968]"/>
  <match src="}: } [29213,29214]" dest="}: } [29213,29214]"/>
  <match src="assignment_expression [67888,67914]" dest="assignment_expression [68140,68166]"/>
  <match src="{: { [107202,107203]" dest="{: { [107126,107127]"/>
  <match src="number_literal: 1 [103768,103769]" dest="number_literal: 1 [103692,103693]"/>
  <match src="variable_declaration [101298,101322]" dest="variable_declaration [101768,101793]"/>
  <match src="identifier: undistributeDividend [73895,73915]" dest="identifier: _undistributeDividend [73624,73645]"/>
  <match src="override_specifier [94325,94333]" dest="override_specifier [93971,93979]"/>
  <match src="call_expression [103458,103492]" dest="call_expression [103382,103416]"/>
  <match src="string [17894,17932]" dest="string [17894,17932]"/>
  <match src="identifier: OwnershipTransferred [25321,25341]" dest="identifier: OwnershipTransferred [25321,25341]"/>
  <match src="(: ( [99873,99874]" dest="(: ( [98065,98066]"/>
  <match src="number_literal: 0 [34697,34698]" dest="number_literal: 0 [34697,34698]"/>
  <match src="comment: /**      * @dev See {IERC20-balanceOf}.      */ [50973,51022]" dest="comment: /**      * @dev See {IERC20-balanceOf}.      */ [50975,51024]"/>
  <match src=".: . [107133,107134]" dest=".: . [107057,107058]"/>
  <match src="]: ] [47340,47341]" dest="]: ] [47342,47343]"/>
  <match src="address: address [59950,59957]" dest="address: address [59952,59959]"/>
  <match src="event_paramater [39841,39855]" dest="event_paramater [39841,39855]"/>
  <match src="block_statement [67400,67452]" dest="block_statement [67647,67699]"/>
  <match src="type_cast_expression [96153,96166]" dest="type_cast_expression [95463,95476]"/>
  <match src="uint256: uint256 [27269,27276]" dest="uint256: uint256 [27269,27276]"/>
  <match src="state_mutability [5626,5630]" dest="state_mutability [5626,5630]"/>
  <match src="function_body [108397,108612]" dest="function_body [108321,108536]"/>
  <match src="tuple_expression [6593,6603]" dest="tuple_expression [6593,6603]"/>
  <match src="function_definition [40512,40558]" dest="function_definition [40512,40558]"/>
  <match src="(: ( [6215,6216]" dest="(: ( [6215,6216]"/>
  <match src="identifier: functionStaticCall [17454,17472]" dest="identifier: functionStaticCall [17454,17472]"/>
  <match src="extcodesize: extcodesize [13018,13029]" dest="extcodesize: extcodesize [13018,13029]"/>
  <match src="assignment_expression [95045,95078]" dest="assignment_expression [82583,82618]"/>
  <match src="call_argument [89546,89557]" dest="call_argument [90788,90799]"/>
  <match src="identifier: sqrt [38090,38094]" dest="identifier: sqrt [38090,38094]"/>
  <match src="identifier: price0Cumulative [41642,41658]" dest="identifier: price0Cumulative [41642,41658]"/>
  <match src="type_name [69429,69442]" dest="type_name [69140,69153]"/>
  <match src=".: . [46737,46738]" dest=".: . [46979,46980]"/>
  <match src="identifier: _pairInfo [108166,108175]" dest="identifier: _pairInfo [108090,108099]"/>
  <match src="identifier: lpTokenAmount [63684,63697]" dest="identifier: lpTokenAmount [63686,63699]"/>
  <match src="return_statement [8920,8933]" dest="return_statement [8920,8933]"/>
  <match src="identifier: decimals [50710,50718]" dest="identifier: decimals [50712,50720]"/>
  <match src="call_argument [61961,61967]" dest="call_argument [61963,61969]"/>
  <match src="): ) [27328,27329]" dest="): ) [27328,27329]"/>
  <match src="(: ( [99108,99109]" dest="(: ( [99276,99277]"/>
  <match src="type_name [63100,63106]" dest="type_name [63102,63108]"/>
  <match src="identifier: _admin [45826,45832]" dest="identifier: _admin [45828,45834]"/>
  <match src="call_expression [106235,106275]" dest="call_expression [106159,106199]"/>
  <match src="identifier: lpTokenSwap [84095,84106]" dest="identifier: lpTokenSwap [84624,84635]"/>
  <match src="identifier: r [28991,28992]" dest="identifier: r [28991,28992]"/>
  <match src="identifier: inviteeWeight [82974,82987]" dest="identifier: inviteeWeight [83753,83766]"/>
  <match src="call_argument [79196,79226]" dest="call_argument [79351,79381]"/>
  <match src="visibility [64910,64916]" dest="visibility [64918,64926]"/>
  <match src="call_argument [20709,20732]" dest="call_argument [20709,20732]"/>
  <match src="): ) [55074,55075]" dest="): ) [55076,55077]"/>
  <match src="binary_expression [82587,82597]" dest="binary_expression [83425,83435]"/>
  <match src="}: } [99653,99654]" dest="}: } [97743,97744]"/>
  <match src="identifier: x [32130,32131]" dest="identifier: x [32130,32131]"/>
  <match src="identifier: token [20679,20684]" dest="identifier: token [20679,20684]"/>
  <match src="identifier: pool [80204,80208]" dest="identifier: pool [80824,80828]"/>
  <match src="primitive_type [83194,83201]" dest="primitive_type [84011,84018]"/>
  <match src="=: = [35242,35243]" dest="=: = [35242,35243]"/>
  <match src="function_body [96109,96322]" dest="function_body [95419,95632]"/>
  <match src="=: = [36453,36454]" dest="=: = [36453,36454]"/>
  <match src="type_cast_expression [37809,37832]" dest="type_cast_expression [37809,37832]"/>
  <match src="ternary_expression [61868,61916]" dest="ternary_expression [61870,61918]"/>
  <match src="(: ( [57854,57855]" dest="(: ( [57856,57857]"/>
  <match src="(: ( [35650,35651]" dest="(: ( [35650,35651]"/>
  <match src="&lt;=: &lt;= [37120,37122]" dest="&lt;=: &lt;= [37120,37122]"/>
  <match src=",: , [57473,57474]" dest=",: , [57475,57476]"/>
  <match src="identifier: this [82723,82727]" dest="identifier: this [83561,83565]"/>
  <match src="identifier: lastDividendHeight [69584,69602]" dest="identifier: lastDividendHeight [69295,69313]"/>
  <match src="call_expression [55817,55841]" dest="call_expression [55819,55843]"/>
  <match src="&lt;=: &lt;= [35443,35445]" dest="&lt;=: &lt;= [35443,35445]"/>
  <match src="block_statement [96262,96315]" dest="block_statement [95572,95625]"/>
  <match src="binary_expression [29665,29674]" dest="binary_expression [29665,29674]"/>
  <match src="binary_expression [27757,27766]" dest="binary_expression [27757,27766]"/>
  <match src="identifier: _amount [95568,95575]" dest="identifier: _amount [94716,94723]"/>
  <match src="function: function [51368,51376]" dest="function: function [51370,51378]"/>
  <match src="primitive_type [35818,35825]" dest="primitive_type [35818,35825]"/>
  <match src="function: function [90696,90704]" dest="function: function [91721,91729]"/>
  <match src="identifier: beforeCalculateIndex [103986,104006]" dest="identifier: beforeCalculateIndex [103910,103930]"/>
  <match src="augmented_assignment_expression [27852,27866]" dest="augmented_assignment_expression [27852,27866]"/>
  <match src="primitive_type [66170,66177]" dest="primitive_type [66188,66195]"/>
  <match src="function_definition [38910,38973]" dest="function_definition [38910,38973]"/>
  <match src="(: ( [31243,31244]" dest="(: ( [31243,31244]"/>
  <match src="identifier: _pid [85061,85065]" dest="identifier: _pid [86361,86365]"/>
  <match src="uint256: uint256 [73134,73141]" dest="uint256: uint256 [72899,72906]"/>
  <match src="]: ] [99477,99478]" dest="]: ] [97567,97568]"/>
  <match src="identifier: number [86407,86413]" dest="identifier: number [87695,87701]"/>
  <match src=".: . [107824,107825]" dest=".: . [107748,107749]"/>
  <match src="identifier: poolCount [95533,95542]" dest="identifier: poolCount [94681,94690]"/>
  <match src="identifier: INVITOR_WEIGHT [101435,101449]" dest="identifier: INVITOR_WEIGHT [82355,82369]"/>
  <match src="identifier: functionCallWithValue [16630,16651]" dest="identifier: functionCallWithValue [16630,16651]"/>
  <match src="type_name [103182,103189]" dest="type_name [103106,103113]"/>
  <match src="number_literal: 0 [61915,61916]" dest="number_literal: 0 [61917,61918]"/>
  <match src="call_expression [42405,42444]" dest="call_expression [42405,42444]"/>
  <match src="expression_statement [82579,82622]" dest="expression_statement [83417,83460]"/>
  <match src="identifier: h [27360,27361]" dest="identifier: h [27360,27361]"/>
  <match src="visibility [42813,42821]" dest="visibility [42813,42821]"/>
  <match src="identifier: price1Cumulative [107286,107302]" dest="identifier: price1Cumulative [107210,107226]"/>
  <match src="uint256: uint256 [66635,66642]" dest="uint256: uint256 [66888,66895]"/>
  <match src="): ) [83790,83791]" dest="): ) [85522,85523]"/>
  <match src="identifier: _pending [46558,46566]" dest="identifier: _pending [46800,46808]"/>
  <match src="variable_declaration [77424,77451]" dest="variable_declaration [76864,76891]"/>
  <match src="return: return [36578,36584]" dest="return: return [36578,36584]"/>
  <match src="primitive_type [20827,20834]" dest="primitive_type [20827,20834]"/>
  <match src="expression_statement [75587,75697]" dest="expression_statement [75103,75213]"/>
  <match src="{: { [49603,49604]" dest="{: { [49605,49606]"/>
  <match src="identifier: _x [34861,34863]" dest="identifier: _x [34861,34863]"/>
  <match src="): ) [44196,44197]" dest="): ) [44198,44199]"/>
  <match src="=: = [106559,106560]" dest="=: = [106483,106484]"/>
  <match src="call_argument [17473,17479]" dest="call_argument [17473,17479]"/>
  <match src="expression_statement [36026,36087]" dest="expression_statement [36026,36087]"/>
  <match src="||: || [100789,100791]" dest="||: || [100774,100776]"/>
  <match src="identifier: y [27314,27315]" dest="identifier: y [27314,27315]"/>
  <match src=",: , [85748,85749]" dest=",: , [87048,87049]"/>
  <match src="call_argument [82992,83004]" dest="call_argument [83771,83783]"/>
  <match src="memory: memory [19282,19288]" dest="memory: memory [19282,19288]"/>
  <match src="function: function [5248,5256]" dest="function: function [5248,5256]"/>
  <match src="identifier: SHD [96139,96142]" dest="identifier: SHD [95449,95452]"/>
  <match src="primitive_type [88421,88428]" dest="primitive_type [89269,89276]"/>
  <match src="parameter [31244,31253]" dest="parameter [31244,31253]"/>
  <match src=":: : [71508,71509]" dest=":: : [71219,71220]"/>
  <match src="number_literal: 112 [32655,32658]" dest="number_literal: 112 [32655,32658]"/>
  <match src="return: return [60278,60284]" dest="return: return [60280,60286]"/>
  <match src="=: = [70958,70959]" dest="=: = [70669,70670]"/>
  <match src="identifier: _amount [81426,81433]" dest="identifier: _amount [82115,82122]"/>
  <match src="variable_declaration [62231,62250]" dest="variable_declaration [62233,62252]"/>
  <match src="assignment_expression [81982,82039]" dest="assignment_expression [82814,82877]"/>
  <match src="pragma: pragma [58668,58674]" dest="pragma: pragma [58670,58676]"/>
  <match src="identifier: _SHDPerBlock [76046,76058]" dest="identifier: _SHDPerBlock [75562,75574]"/>
  <match src="variable_declaration [95525,95542]" dest="variable_declaration [94673,94690]"/>
  <match src=".: . [104007,104008]" dest=".: . [103931,103932]"/>
  <match src="call_expression [46729,46795]" dest="call_expression [46971,47037]"/>
  <match src="identifier: Address [20548,20555]" dest="identifier: Address [20548,20555]"/>
  <match src="return_type_definition [106979,107023]" dest="return_type_definition [106903,106947]"/>
  <match src="identifier: totalReward [103937,103948]" dest="identifier: totalReward [103861,103872]"/>
  <match src="identifier: reserve0 [106176,106184]" dest="identifier: reserve0 [106100,106108]"/>
  <match src="identifier: usersTotalWeight [101717,101733]" dest="identifier: usersTotalWeight [102139,102155]"/>
  <match src="call_expression [82003,82039]" dest="call_expression [82835,82877]"/>
  <match src="identifier: self [37654,37658]" dest="identifier: self [37654,37658]"/>
  <match src="if: if [42128,42130]" dest="if: if [42128,42130]"/>
  <match src="identifier: _toBlock [77378,77386]" dest="identifier: _toBlock [76818,76826]"/>
  <match src=",: , [18114,18115]" dest=",: , [18114,18115]"/>
  <match src="parameter [24450,24462]" dest="parameter [24450,24462]"/>
  <match src="identifier: require [36026,36033]" dest="identifier: require [36026,36033]"/>
  <match src="binary_expression [38236,38253]" dest="binary_expression [38236,38253]"/>
  <match src="type_name [38654,38658]" dest="type_name [38654,38658]"/>
  <match src="storage: storage [86792,86799]" dest="storage: storage [87947,87954]"/>
  <match src="call_argument [101540,101556]" dest="call_argument [101275,101293]"/>
  <match src="identifier: startIndex [93794,93804]" dest="identifier: startIndex [93440,93450]"/>
  <match src="binary_expression [100590,100609]" dest="binary_expression [100165,100185]"/>
  <match src="member_expression [107128,107140]" dest="member_expression [107052,107064]"/>
  <match src="primitive_type [63723,63730]" dest="primitive_type [63725,63732]"/>
  <match src="parameter [30247,30254]" dest="parameter [30247,30254]"/>
  <match src="identifier: add [80554,80557]" dest="identifier: add [81239,81242]"/>
  <match src="call_argument [108011,108079]" dest="call_argument [107935,108003]"/>
  <match src="uint256: uint256 [66712,66719]" dest="uint256: uint256 [66965,66972]"/>
  <match src="identifier: startIndex [93642,93652]" dest="identifier: startIndex [93290,93300]"/>
  <match src="(: ( [78599,78600]" dest="(: ( [78179,78180]"/>
  <match src="]: ] [99334,99335]" dest="]: ] [99490,99491]"/>
  <match src="expression_statement [31572,31581]" dest="expression_statement [31572,31581]"/>
  <match src="visibility [39400,39408]" dest="visibility [39400,39408]"/>
  <match src="(: ( [80024,80025]" dest="(: ( [80609,80610]"/>
  <match src="variable_declaration [105001,105033]" dest="variable_declaration [104925,104957]"/>
  <match src="(: ( [40609,40610]" dest="(: ( [40609,40610]"/>
  <match src="string_literal [82599,82620]" dest="string_literal [83437,83458]"/>
  <match src="number_literal: 64 [30519,30521]" dest="number_literal: 64 [30519,30521]"/>
  <match src="identifier: amount [56559,56565]" dest="identifier: amount [56561,56567]"/>
  <match src="type_name [79035,79043]" dest="type_name [78824,78832]"/>
  <match src="identifier: deposit [79760,79767]" dest="identifier: deposit [80345,80352]"/>
  <match src="primitive_type [94716,94723]" dest="primitive_type [85069,85076]"/>
  <match src="type_name [33858,33867]" dest="type_name [33858,33867]"/>
  <match src="variable_declaration [78285,78306]" dest="variable_declaration [77418,77439]"/>
  <match src="uint256: uint256 [59053,59060]" dest="uint256: uint256 [59055,59062]"/>
  <match src="augmented_assignment_expression [31997,32004]" dest="augmented_assignment_expression [31997,32004]"/>
  <match src="parameter [21287,21300]" dest="parameter [21287,21300]"/>
  <match src="true [70471,70475]" dest="true [70182,70186]"/>
  <match src="parameter [3442,3457]" dest="parameter [3442,3457]"/>
  <match src="{: { [102420,102421]" dest="{: { [102279,102280]"/>
  <match src="primitive_type [43787,43794]" dest="primitive_type [43787,43794]"/>
  <match src="identifier: contractFeeRateDenominator [45422,45448]" dest="identifier: contractFeeRateDenominator [45424,45450]"/>
  <match src="identifier: _price [106339,106345]" dest="identifier: _price [106263,106269]"/>
  <match src="address: address [40909,40916]" dest="address: address [40909,40916]"/>
  <match src="identifier: _pid [71811,71815]" dest="identifier: _pid [71522,71526]"/>
  <match src="type_name [108496,108504]" dest="type_name [108420,108428]"/>
  <match src="address: address [86740,86747]" dest="address: address [80081,80088]"/>
  <match src="comment: // can be lossy [36718,36733]" dest="comment: // can be lossy [36718,36733]"/>
  <match src="identifier: WETHToken [43183,43192]" dest="identifier: WETHToken [43183,43192]"/>
  <match src="&gt;&gt;=: &gt;&gt;= [31999,32002]" dest="&gt;&gt;=: &gt;&gt;= [31999,32002]"/>
  <match src="comment: // Last block number that SHARDs distribution occurs. [65121,65174]" dest="comment: // Last block number that SHARDs distribution occurs. [65131,65184]"/>
  <match src="variable_declaration [107281,107302]" dest="variable_declaration [107205,107226]"/>
  <match src=",: , [88963,88964]" dest=",: , [89811,89812]"/>
  <match src="call_argument [34307,34314]" dest="call_argument [34307,34314]"/>
  <match src="expression_statement [62845,62877]" dest="expression_statement [62847,62879]"/>
  <match src="function_definition [40030,40088]" dest="function_definition [40030,40088]"/>
  <match src="interface: interface [38484,38493]" dest="interface: interface [38484,38493]"/>
  <match src="]: ] [79069,79070]" dest="]: ] [78858,78859]"/>
  <match src=",: , [27312,27313]" dest=",: , [27312,27313]"/>
  <match src="identifier: endBlock [80902,80910]" dest="identifier: endBlock [81589,81597]"/>
  <match src="number_literal: 0 [88786,88787]" dest="number_literal: 0 [89634,89635]"/>
  <match src="member_expression [84904,84930]" dest="member_expression [86035,86061]"/>
  <match src="if_statement [99870,99931]" dest="if_statement [98062,98123]"/>
  <match src="primitive_type [49020,49027]" dest="primitive_type [49022,49029]"/>
  <match src="]: ] [53446,53447]" dest="]: ] [53448,53449]"/>
  <match src="visibility [35974,35982]" dest="visibility [35974,35982]"/>
  <match src="number_literal: 0 [69715,69716]" dest="number_literal: 0 [69426,69427]"/>
  <match src="identifier: SHD [67306,67309]" dest="identifier: SHD [67553,67556]"/>
  <match src="(: ( [20786,20787]" dest="(: ( [20786,20787]"/>
  <match src="yul_identifier [19774,19789]" dest="yul_identifier [19774,19789]"/>
  <match src="): ) [83177,83178]" dest="): ) [84259,84260]"/>
  <match src="function: function [98379,98387]" dest="function: function [97144,97152]"/>
  <match src="call_expression [82579,82621]" dest="call_expression [83417,83459]"/>
  <match src="uint: uint [39566,39570]" dest="uint: uint [39566,39570]"/>
  <match src="user_defined_type [20787,20793]" dest="user_defined_type [20787,20793]"/>
  <match src="(: ( [35171,35172]" dest="(: ( [35171,35172]"/>
  <match src="using_directive [63114,63137]" dest="using_directive [63116,63139]"/>
  <match src="constant: constant [65264,65272]" dest="constant: constant [65274,65282]"/>
  <match src="uint: uint [40724,40728]" dest="uint: uint [40724,40728]"/>
  <match src="number_literal: 0 [85591,85592]" dest="number_literal: 0 [86891,86892]"/>
  <match src="type_name [97592,97612]" dest="type_name [96357,96377]"/>
  <match src="call_expression [104169,104194]" dest="call_expression [104093,104118]"/>
  <match src="): ) [27528,27529]" dest="): ) [27528,27529]"/>
  <match src="]: ] [57433,57434]" dest="]: ] [57435,57436]"/>
  <match src="call_argument [30275,30280]" dest="call_argument [30275,30280]"/>
  <match src="external: external [75123,75131]" dest="external: external [67458,67466]"/>
  <match src="address: address [38634,38641]" dest="address: address [38634,38641]"/>
  <match src="*: * [27813,27814]" dest="*: * [27813,27814]"/>
  <match src="expression_statement [68940,68953]" dest="expression_statement [68651,68664]"/>
  <match src="binary_expression [29758,29767]" dest="binary_expression [29758,29767]"/>
  <match src="(: ( [37422,37423]" dest="(: ( [37422,37423]"/>
  <match src="call_argument [16884,16890]" dest="call_argument [16884,16890]"/>
  <match src="identifier: isCalculateInvitation [99669,99690]" dest="identifier: isCalculateInvitation [97759,97780]"/>
  <match src="expression_statement [80888,80911]" dest="expression_statement [81575,81598]"/>
  <match src="if_statement [31381,31483]" dest="if_statement [31381,31483]"/>
  <match src="visibility [49133,49140]" dest="visibility [49135,49142]"/>
  <match src="member_expression [46891,46903]" dest="member_expression [47133,47145]"/>
  <match src="external: external [45898,45906]" dest="external: external [45900,45908]"/>
  <match src="identifier: renounceOwnership [26410,26427]" dest="identifier: renounceOwnership [26410,26427]"/>
  <match src="uint256: uint256 [27482,27489]" dest="uint256: uint256 [27482,27489]"/>
  <match src="{: { [105209,105210]" dest="{: { [105133,105134]"/>
  <match src="true [6622,6626]" dest="true [6622,6626]"/>
  <match src="identifier: nftShard [69368,69376]" dest="identifier: nftShard [69079,69087]"/>
  <match src="binary_expression [5670,5675]" dest="binary_expression [5670,5675]"/>
  <match src="parameter [53312,53327]" dest="parameter [53314,53329]"/>
  <match src="identifier: wantToken [69886,69895]" dest="identifier: wantToken [69597,69606]"/>
  <match src="(: ( [90245,90246]" dest="(: ( [91207,91208]"/>
  <match src="call_argument [20882,20887]" dest="call_argument [20882,20887]"/>
  <match src="*: * [65408,65409]" dest="*: * [65418,65419]"/>
  <match src=",: , [57355,57356]" dest=",: , [57357,57358]"/>
  <match src="identifier: _amount [80283,80290]" dest="identifier: _amount [80903,80910]"/>
  <match src="solidity_version: 0.6.0 [23725,23730]" dest="solidity_version: 0.6.0 [23725,23730]"/>
  <match src="parameter [45186,45213]" dest="parameter [45188,45215]"/>
  <match src="call_expression [74908,74949]" dest="call_expression [74779,74821]"/>
  <match src="): ) [34733,34734]" dest="): ) [34733,34734]"/>
  <match src=":: : [105419,105420]" dest=":: : [105343,105344]"/>
  <match src="&quot;: &quot; [44296,44297]" dest="&quot;: &quot; [44298,44299]"/>
  <match src="): ) [22141,22142]" dest="): ) [22141,22142]"/>
  <match src="member_expression [80389,80406]" dest="member_expression [81009,81026]"/>
  <match src="identifier: _swapAddress [93781,93793]" dest="identifier: _swapAddress [93427,93439]"/>
  <match src="): ) [40408,40409]" dest="): ) [40408,40409]"/>
  <match src="private: private [22943,22950]" dest="private: private [22943,22950]"/>
  <match src="=: = [42081,42082]" dest="=: = [42081,42082]"/>
  <match src="=&gt;: =&gt; [49048,49050]" dest="=&gt;: =&gt; [49050,49052]"/>
  <match src="identifier: liquidity [40615,40624]" dest="identifier: liquidity [40615,40624]"/>
  <match src=".: . [46566,46567]" dest=".: . [46808,46809]"/>
  <match src="primitive_type [60183,60190]" dest="primitive_type [60185,60192]"/>
  <match src="variable_declaration [36233,36246]" dest="variable_declaration [36233,36246]"/>
  <match src="call_argument [105349,105661]" dest="call_argument [105273,105585]"/>
  <match src="returns: returns [39414,39421]" dest="returns: returns [39414,39421]"/>
  <match src="number_literal: 1 [103855,103856]" dest="number_literal: 1 [103779,103780]"/>
  <match src="call_argument [98023,98058]" dest="call_argument [96788,96823]"/>
  <match src="parameter [11740,11766]" dest="parameter [11740,11766]"/>
  <match src="}: } [94039,94040]" dest="}: } [93685,93686]"/>
  <match src="parameter [11718,11727]" dest="parameter [11718,11727]"/>
  <match src="number_literal: 2 [104135,104136]" dest="number_literal: 2 [104059,104060]"/>
  <match src="(: ( [44100,44101]" dest="(: ( [44102,44103]"/>
  <match src="identifier: length [76167,76173]" dest="identifier: length [75683,75689]"/>
  <match src="identifier: _lpTokenSwap [70266,70278]" dest="identifier: _lpTokenSwap [69977,69989]"/>
  <match src="call_expression [95882,95910]" dest="call_expression [95139,95177]"/>
  <match src="]: ] [60902,60903]" dest="]: ] [60904,60905]"/>
  <match src="(: ( [20881,20882]" dest="(: ( [20881,20882]"/>
  <match src="identifier: pool [82916,82920]" dest="identifier: pool [99810,99814]"/>
  <match src="primitive_type [43092,43099]" dest="primitive_type [43092,43099]"/>
  <match src="identifier: sub [90984,90987]" dest="identifier: sub [92009,92012]"/>
  <match src=".: . [79576,79577]" dest=".: . [79736,79737]"/>
  <match src="type_cast_expression [55681,55691]" dest="type_cast_expression [55683,55693]"/>
  <match src="identifier: b [9549,9550]" dest="identifier: b [9549,9550]"/>
  <match src="=: = [104167,104168]" dest="=: = [104091,104092]"/>
  <match src="identifier: price0Cumulative [108128,108144]" dest="identifier: price0Cumulative [108052,108068]"/>
  <match src="binary_expression [29634,29643]" dest="binary_expression [29634,29643]"/>
  <match src="parameter [21270,21285]" dest="parameter [21270,21285]"/>
  <match src="identifier: toNum [61896,61901]" dest="identifier: toNum [61898,61903]"/>
  <match src="): ) [29705,29706]" dest="): ) [29705,29706]"/>
  <match src="identifier: value [22229,22234]" dest="identifier: value [22229,22234]"/>
  <match src="address: address [69751,69758]" dest="address: address [69462,69469]"/>
  <match src="using_directive [20509,20536]" dest="using_directive [20509,20536]"/>
  <match src="): ) [21747,21748]" dest="): ) [21747,21748]"/>
  <match src="type_name [10050,10057]" dest="type_name [10050,10057]"/>
  <match src="&quot;: &quot; [16355,16356]" dest="&quot;: &quot; [16355,16356]"/>
  <match src="**: ** [34370,34372]" dest="**: ** [34370,34372]"/>
  <match src="function_definition [84511,85091]" dest="function_definition [85642,86391]"/>
  <match src="+=: += [30418,30420]" dest="+=: += [30418,30420]"/>
  <match src="yul_identifier [19761,19771]" dest="yul_identifier [19761,19771]"/>
  <match src="primitive_type [27541,27548]" dest="primitive_type [27541,27548]"/>
  <match src="number_literal: 2363 [68822,68826]" dest="number_literal: 2363 [68557,68561]"/>
  <match src="identifier: _feeRateNumerator [45311,45328]" dest="identifier: _feeRateNumerator [45313,45330]"/>
  <match src="block_statement [36122,36180]" dest="block_statement [36122,36180]"/>
  <match src="(: ( [89654,89655]" dest="(: ( [90896,90897]"/>
  <match src="parameter [59467,59478]" dest="parameter [59469,59480]"/>
  <match src="binary_expression [62294,62310]" dest="binary_expression [62296,62312]"/>
  <match src="identifier: _reserveMintWeight [75097,75115]" dest="identifier: _undistributeDividend [73529,73550]"/>
  <match src="uint256: uint256 [92675,92682]" dest="uint256: uint256 [92323,92330]"/>
  <match src="expression_statement [69346,69419]" dest="expression_statement [69057,69130]"/>
  <match src="identifier: addInviteeWeight [100995,101011]" dest="identifier: invitorModifiedWeight [101010,101031]"/>
  <match src="bool: bool [3908,3912]" dest="bool: bool [3908,3912]"/>
  <match src="array_access [82503,82529]" dest="array_access [83341,83367]"/>
  <match src="storage: storage [86961,86968]" dest="storage: storage [88118,88125]"/>
  <match src="type_name [36776,36783]" dest="type_name [36776,36783]"/>
  <match src="true [86931,86935]" dest="true [88088,88092]"/>
  <match src="address: address [4128,4135]" dest="address: address [4128,4135]"/>
  <match src="bool: bool [968,972]" dest="bool: bool [968,972]"/>
  <match src="): ) [17434,17435]" dest="): ) [17434,17435]"/>
  <match src="comment: // divide a UQ112x112 by a UQ112x112, returning a UQ112x112 [35847,35906]" dest="comment: // divide a UQ112x112 by a UQ112x112, returning a UQ112x112 [35847,35906]"/>
  <match src="call_expression [70227,70321]" dest="call_expression [69938,70032]"/>
  <match src="): ) [42754,42755]" dest="): ) [42754,42755]"/>
  <match src="(: ( [72282,72283]" dest="(: ( [72160,72161]"/>
  <match src="identifier: _lockTime [81070,81079]" dest="identifier: _lockTime [81757,81766]"/>
  <match src="uint256: uint256 [77562,77569]" dest="uint256: uint256 [77002,77009]"/>
  <match src="expression_statement [62581,62621]" dest="expression_statement [62583,62623]"/>
  <match src="public: public [59077,59083]" dest="public: public [59079,59085]"/>
  <match src="type_name [53329,53336]" dest="type_name [53331,53338]"/>
  <match src="identifier: invitorRelationshipInfo [98969,98992]" dest="identifier: invitorRelationshipInfo [99154,99177]"/>
  <match src="type_name [93251,93260]" dest="type_name [92899,92908]"/>
  <match src="): ) [36494,36495]" dest="): ) [36494,36495]"/>
  <match src="primitive_type [95220,95227]" dest="primitive_type [94368,94375]"/>
  <match src="internal: internal [108380,108388]" dest="internal: internal [108304,108312]"/>
  <match src="identifier: i [93328,93329]" dest="identifier: i [92976,92977]"/>
  <match src="primitive_type [73965,73972]" dest="primitive_type [73695,73702]"/>
  <match src="identifier: a [11029,11030]" dest="identifier: a [11029,11030]"/>
  <match src="block_statement [103655,103718]" dest="block_statement [103579,103642]"/>
  <match src="&gt;: &gt; [87804,87805]" dest="&gt;: &gt; [88965,88966]"/>
  <match src="?: ? [34330,34331]" dest="?: ? [34330,34331]"/>
  <match src="member_expression [36477,36484]" dest="member_expression [36477,36484]"/>
  <match src="member_expression [101176,101201]" dest="member_expression [101145,101170]"/>
  <match src="binary_expression [107106,107201]" dest="binary_expression [107030,107125]"/>
  <match src="uint256: uint256 [100441,100448]" dest="uint256: uint256 [99784,99791]"/>
  <match src="type_name [99521,99529]" dest="type_name [97611,97619]"/>
  <match src="=: = [85382,85383]" dest="=: = [86682,86683]"/>
  <match src="uint224: uint224 [35818,35825]" dest="uint224: uint224 [35818,35825]"/>
  <match src="identifier: result [37431,37437]" dest="identifier: result [37431,37437]"/>
  <match src="primitive_type [16186,16191]" dest="primitive_type [16186,16191]"/>
  <match src="): ) [68951,68952]" dest="): ) [68662,68663]"/>
  <match src="struct_member [64444,64463]" dest="struct_member [64446,64465]"/>
  <match src="return_type_definition [7259,7276]" dest="return_type_definition [7259,7276]"/>
  <match src=",: , [86447,86448]" dest=",: , [87735,87736]"/>
  <match src="type_name [95582,95591]" dest="type_name [94730,94739]"/>
  <match src="identifier: r [29660,29661]" dest="identifier: r [29660,29661]"/>
  <match src=":: : [34335,34336]" dest=":: : [34335,34336]"/>
  <match src="[: [ [65664,65665]" dest="[: [ [65674,65675]"/>
  <match src=",: , [67271,67272]" dest=",: , [67518,67519]"/>
  <match src="identifier: _owner [26522,26528]" dest="identifier: _owner [26522,26528]"/>
  <match src="): ) [8852,8853]" dest="): ) [8852,8853]"/>
  <match src="identifier: lastDividendHeight [71381,71399]" dest="identifier: lastDividendHeight [71092,71110]"/>
  <match src="identifier: _modifiedWeight [95846,95861]" dest="identifier: _modifiedWeight [95118,95133]"/>
  <match src="(: ( [45508,45509]" dest="(: ( [45510,45511]"/>
  <match src="return: return [52857,52863]" dest="return: return [52859,52865]"/>
  <match src="number_literal: 1 [108445,108446]" dest="number_literal: 1 [108369,108370]"/>
  <match src="member_expression [84160,84178]" dest="member_expression [84689,84707]"/>
  <match src="function_definition [62710,62884]" dest="function_definition [62712,62886]"/>
  <match src="identifier: lpTokenTotalSupply [98138,98156]" dest="identifier: lpTokenTotalSupply [96903,96921]"/>
  <match src="{: { [32467,32468]" dest="{: { [32467,32468]"/>
  <match src="assignment_expression [106210,106298]" dest="assignment_expression [106134,106222]"/>
  <match src="(: ( [22028,22029]" dest="(: ( [22028,22029]"/>
  <match src="): ) [76509,76510]" dest="): ) [76025,76026]"/>
  <match src="call_argument [37358,37390]" dest="call_argument [37358,37390]"/>
  <match src="(: ( [36398,36399]" dest="(: ( [36398,36399]"/>
  <match src="type_name [59642,59649]" dest="type_name [59644,59651]"/>
  <match src="type_name [48940,48947]" dest="type_name [48942,48949]"/>
  <match src=".: . [97220,97221]" dest=".: . [95985,95986]"/>
  <match src="}: } [78089,78090]" dest="}: } [77219,77220]"/>
  <match src="(: ( [87399,87400]" dest="(: ( [88560,88561]"/>
  <match src="parameter [67076,67101]" dest="parameter [67329,67354]"/>
  <match src="internal: internal [33892,33900]" dest="internal: internal [33892,33900]"/>
  <match src="member_expression [52756,52793]" dest="member_expression [52758,52795]"/>
  <match src=",: , [57184,57185]" dest=",: , [57186,57187]"/>
  <match src="call_argument [26492,26498]" dest="call_argument [26492,26498]"/>
  <match src="=: = [83952,83953]" dest="=: = [84476,84477]"/>
  <match src="identifier: TokenPairInfo [105335,105348]" dest="identifier: TokenPairInfo [105259,105272]"/>
  <match src="view: view [51071,51075]" dest="view: view [51073,51077]"/>
  <match src="identifier: _pool [97733,97738]" dest="identifier: _pool [96498,96503]"/>
  <match src="identifier: _x [36263,36265]" dest="identifier: _x [36263,36265]"/>
  <match src="member_expression [80260,80282]" dest="member_expression [80880,80902]"/>
  <match src="assignment_expression [86222,86260]" dest="assignment_expression [87510,87548]"/>
  <match src="identifier: sqrt [38300,38304]" dest="identifier: sqrt [38300,38304]"/>
  <match src="function_body [44876,45118]" dest="function_body [44878,45120]"/>
  <match src="external: external [75910,75918]" dest="external: external [75426,75434]"/>
  <match src="=: = [76206,76207]" dest="=: = [75722,75723]"/>
  <match src="return: return [61168,61174]" dest="return: return [61170,61176]"/>
  <match src="(: ( [74801,74802]" dest="(: ( [74501,74502]"/>
  <match src="identifier: returndata [19713,19723]" dest="identifier: returndata [19713,19723]"/>
  <match src="primitive_type [6514,6521]" dest="primitive_type [6514,6521]"/>
  <match src="primitive_type [66159,66166]" dest="primitive_type [66177,66184]"/>
  <match src="): ) [86902,86903]" dest="): ) [88059,88060]"/>
  <match src="identifier: token0 [40160,40166]" dest="identifier: token0 [40160,40166]"/>
  <match src="&quot;: &quot; [85750,85751]" dest="&quot;: &quot; [87050,87051]"/>
  <match src="call_expression [98023,98046]" dest="call_expression [96788,96811]"/>
  <match src="): ) [34698,34699]" dest="): ) [34698,34699]"/>
  <match src="==: == [28176,28178]" dest="==: == [28176,28178]"/>
  <match src="{: { [51704,51705]" dest="{: { [51706,51707]"/>
  <match src="variable_declaration_statement [82540,82569]" dest="variable_declaration_statement [83378,83407]"/>
  <match src="(: ( [37013,37014]" dest="(: ( [37013,37014]"/>
  <match src="block_statement [62484,62632]" dest="block_statement [62486,62634]"/>
  <match src="(: ( [33023,33024]" dest="(: ( [33023,33024]"/>
  <match src=".: . [82816,82817]" dest=".: . [83654,83655]"/>
  <match src="block_statement [99898,99931]" dest="block_statement [98090,98123]"/>
  <match src="solidity_pragma_token [47562,47585]" dest="solidity_pragma_token [47564,47587]"/>
  <match src="identifier: amount0 [39669,39676]" dest="identifier: amount0 [39669,39676]"/>
  <match src="identifier: this [21645,21649]" dest="identifier: this [21645,21649]"/>
  <match src="identifier: accumulativeDividend [74976,74996]" dest="identifier: accumulativeDividend [74848,74868]"/>
  <match src="identifier: _fromBlock [103840,103850]" dest="identifier: _fromBlock [103764,103774]"/>
  <match src="identifier: _userDividendWeight [44230,44249]" dest="identifier: _userDividendWeight [44232,44251]"/>
  <match src="identifier: _invitor [94374,94382]" dest="identifier: _invitor [94020,94028]"/>
  <match src="{: { [15686,15687]" dest="{: { [15686,15687]"/>
  <match src="*: * [63135,63136]" dest="*: * [63137,63138]"/>
  <match src=".: . [103981,103982]" dest=".: . [103905,103906]"/>
  <match src="identifier: initialPriceCumulative [106607,106629]" dest="identifier: initialPriceCumulative [106531,106553]"/>
  <match src="=: = [108576,108577]" dest="=: = [108500,108501]"/>
  <match src="type_name [97144,97151]" dest="type_name [95909,95916]"/>
  <match src="augmented_assignment_expression [27802,27816]" dest="augmented_assignment_expression [27802,27816]"/>
  <match src="number_literal: 64 [30497,30499]" dest="number_literal: 64 [30497,30499]"/>
  <match src="call_argument [80827,80848]" dest="call_argument [81514,81535]"/>
  <match src="=: = [33954,33955]" dest="=: = [33954,33955]"/>
  <match src="expression_statement [46476,46533]" dest="expression_statement [46718,46775]"/>
  <match src=",: , [68636,68637]" dest=",: , [68511,68512]"/>
  <match src="identifier: require [10983,10990]" dest="identifier: require [10983,10990]"/>
  <match src="if_statement [31602,31701]" dest="if_statement [31602,31701]"/>
  <match src="identifier: b [10909,10910]" dest="identifier: b [10909,10910]"/>
  <match src="(: ( [18471,18472]" dest="(: ( [18471,18472]"/>
  <match src="member_expression [83074,83088]" dest="member_expression [83853,83867]"/>
  <match src="(: ( [73894,73895]" dest="(: ( [73623,73624]"/>
  <match src="(: ( [88776,88777]" dest="(: ( [89624,89625]"/>
  <match src="primitive_type [73742,73749]" dest="primitive_type [73507,73514]"/>
  <match src="internal: internal [22236,22244]" dest="internal: internal [22236,22244]"/>
  <match src="binary_expression [26793,26815]" dest="binary_expression [26793,26815]"/>
  <match src="identifier: to [38650,38652]" dest="identifier: to [38650,38652]"/>
  <match src="identifier: r [31750,31751]" dest="identifier: r [31750,31751]"/>
  <match src="call_argument [69853,69862]" dest="call_argument [69564,69573]"/>
  <match src="identifier: poolInfo [74260,74268]" dest="identifier: poolInfo [74047,74055]"/>
  <match src="if_statement [46930,47160]" dest="if_statement [46317,46547]"/>
  <match src="expression_statement [20659,20746]" dest="expression_statement [20659,20746]"/>
  <match src="identifier: updateSHARDPoolAccumulativeDividend [76257,76292]" dest="identifier: updateSHARDPoolAccumulativeDividend [75773,75808]"/>
  <match src="identifier: value [16306,16311]" dest="identifier: value [16306,16311]"/>
  <match src="=: = [46833,46834]" dest="=: = [47075,47076]"/>
  <match src="identifier: WETHToken [67565,67574]" dest="identifier: WETHToken [67812,67821]"/>
  <match src="variable_declaration_statement [42017,42118]" dest="variable_declaration_statement [42017,42118]"/>
  <match src="call_expression [86182,86211]" dest="call_expression [87470,87499]"/>
  <match src="identifier: a [6628,6629]" dest="identifier: a [6628,6629]"/>
  <match src="): ) [12686,12687]" dest="): ) [12686,12687]"/>
  <match src="function: function [40710,40718]" dest="function: function [40710,40718]"/>
  <match src="comment: // the target address contains contract code and also asserts for success in the low-level call. [23197,23293]" dest="comment: // the target address contains contract code and also asserts for success in the low-level call. [23197,23293]"/>
  <match src="binary_expression [35244,35277]" dest="binary_expression [35244,35277]"/>
  <match src="identifier: endBlock [80796,80804]" dest="identifier: endBlock [81483,81491]"/>
  <match src="identifier: lastDividendHeight [78454,78472]" dest="identifier: lastDividendHeight [78034,78052]"/>
  <match src="}: } [70425,70426]" dest="}: } [70136,70137]"/>
  <match src="state_variable_declaration [66388,66431]" dest="state_variable_declaration [66408,66451]"/>
  <match src="comment: // File: @openzeppelin/contracts/utils/Address.sol [11877,11927]" dest="comment: // File: @openzeppelin/contracts/utils/Address.sol [11877,11927]"/>
  <match src="): ) [86363,86364]" dest="): ) [87651,87652]"/>
  <match src="pragma: pragma [30008,30014]" dest="pragma: pragma [30008,30014]"/>
  <match src="{: { [72956,72957]" dest="{: { [72638,72639]"/>
  <match src="identifier: updatePoolDividend [82754,82772]" dest="identifier: updatePoolDividend [83592,83610]"/>
  <match src="number_literal: 0 [54973,54974]" dest="number_literal: 0 [54975,54976]"/>
  <match src=",: , [96928,96929]" dest=",: , [95693,95694]"/>
  <match src="identifier: senderRelationshipInfo [98544,98566]" dest="identifier: senderRelationshipInfo [97309,97331]"/>
  <match src="state_variable_declaration [65553,65606]" dest="state_variable_declaration [65563,65616]"/>
  <match src="memory: memory [24456,24462]" dest="memory: memory [24456,24462]"/>
  <match src="virtual: virtual [58613,58620]" dest="virtual: virtual [58615,58622]"/>
  <match src="primitive_type [95633,95640]" dest="primitive_type [94781,94788]"/>
  <match src="): ) [8154,8155]" dest="): ) [8154,8155]"/>
  <match src="&gt;: &gt; [36043,36044]" dest="&gt;: &gt; [36043,36044]"/>
  <match src="comment: // 80% shard =&gt; SHD - ETH pool [66352,66382]" dest="comment: // 80% shard =&gt; SHD - ETH pool [66372,66402]"/>
  <match src="call_argument [16292,16298]" dest="call_argument [16292,16298]"/>
  <match src="type_name [43168,43175]" dest="type_name [43168,43175]"/>
  <match src="(: ( [93732,93733]" dest="(: ( [93386,93387]"/>
  <match src="type_name [43470,43477]" dest="type_name [43470,43477]"/>
  <match src="(: ( [97897,97898]" dest="(: ( [96662,96663]"/>
  <match src="): ) [36534,36535]" dest="): ) [36534,36535]"/>
  <match src="expression_statement [29374,29382]" dest="expression_statement [29374,29382]"/>
  <match src="identifier: _pid [89278,89282]" dest="identifier: _pid [90203,90207]"/>
  <match src="block_statement [100844,101702]" dest="block_statement [100830,102029]"/>
  <match src="identifier: unDividendShard [74908,74923]" dest="identifier: unDividendShard [74779,74794]"/>
  <match src="virtual: virtual [86541,86548]" dest="virtual: virtual [87829,87836]"/>
  <match src="(: ( [84469,84470]" dest="(: ( [85004,85005]"/>
  <match src="visibility [38752,38760]" dest="visibility [38752,38760]"/>
  <match src="&quot;: &quot; [80133,80134]" dest="&quot;: &quot; [80718,80719]"/>
  <match src="external: external [3475,3483]" dest="external: external [3475,3483]"/>
  <match src="identifier: usersTotalWeight [100472,100488]" dest="identifier: usersTotalWeight [78518,78534]"/>
  <match src="member_expression [33717,33724]" dest="member_expression [33717,33724]"/>
  <match src="event: event [392,397]" dest="event: event [392,397]"/>
  <match src="call_argument [79620,79637]" dest="call_argument [79703,79720]"/>
  <match src="string_literal [21681,21737]" dest="string_literal [21681,21737]"/>
  <match src="identifier: account [55609,55616]" dest="identifier: account [55611,55618]"/>
  <match src="=: = [17038,17039]" dest="=: = [17038,17039]"/>
  <match src="parameter [10050,10059]" dest="parameter [10050,10059]"/>
  <match src="{: { [96202,96203]" dest="{: { [95512,95513]"/>
  <match src="identifier: returndata [23415,23425]" dest="identifier: returndata [23415,23425]"/>
  <match src="): ) [88892,88893]" dest="): ) [89740,89741]"/>
  <match src="{: { [31517,31518]" dest="{: { [31517,31518]"/>
  <match src="}: } [31875,31876]" dest="}: } [31875,31876]"/>
  <match src="identifier: _feeRateNumerator [45394,45411]" dest="identifier: _feeRateNumerator [45396,45413]"/>
  <match src=".: . [72351,72352]" dest=".: . [72106,72107]"/>
  <match src="identifier: senderInfo [80025,80035]" dest="identifier: senderInfo [80610,80620]"/>
  <match src="identifier: user [99538,99542]" dest="identifier: user [97628,97632]"/>
  <match src="): ) [59074,59075]" dest="): ) [59076,59077]"/>
  <match src="number_literal: 2309 [68708,68712]" dest="number_literal: 2309 [68527,68531]"/>
  <match src=".: . [84059,84060]" dest=".: . [84588,84589]"/>
  <match src="(: ( [18006,18007]" dest="(: ( [18006,18007]"/>
  <match src="): ) [37216,37217]" dest="): ) [37216,37217]"/>
  <match src="(: ( [62858,62859]" dest="(: ( [62860,62861]"/>
  <match src="&quot;: &quot; [85477,85478]" dest="&quot;: &quot; [86777,86778]"/>
  <match src="(: ( [109335,109336]" dest="(: ( [109259,109260]"/>
  <match src="if_statement [79081,79129]" dest="if_statement [79244,79292]"/>
  <match src="expression_statement [8226,8283]" dest="expression_statement [8226,8283]"/>
  <match src="identifier: token0 [104693,104699]" dest="identifier: token0 [104617,104623]"/>
  <match src="}: } [103067,103068]" dest="}: } [102991,102992]"/>
  <match src="(: ( [35748,35749]" dest="(: ( [35748,35749]"/>
  <match src="member_expression [87210,87226]" dest="member_expression [88371,88387]"/>
  <match src="type_name [6548,6552]" dest="type_name [6548,6552]"/>
  <match src=".: . [61625,61626]" dest=".: . [61627,61628]"/>
  <match src="identifier: d [27736,27737]" dest="identifier: d [27736,27737]"/>
  <match src="block_statement [107741,107939]" dest="block_statement [107665,107863]"/>
  <match src="{: { [59504,59505]" dest="{: { [59506,59507]"/>
  <match src="identifier: SafeERC20 [20492,20501]" dest="identifier: SafeERC20 [20492,20501]"/>
  <match src="identifier: account [60887,60894]" dest="identifier: account [60889,60896]"/>
  <match src="identifier: userInfo [100890,100898]" dest="identifier: userInfo [100952,100960]"/>
  <match src=",: , [58775,58776]" dest=",: , [58777,58778]"/>
  <match src="state_mutability [17827,17831]" dest="state_mutability [17827,17831]"/>
  <match src="call_argument [104012,104025]" dest="call_argument [103936,103949]"/>
  <match src="--: -- [87970,87972]" dest="--: -- [89131,89133]"/>
  <match src="struct_member [63581,63610]" dest="struct_member [63583,63612]"/>
  <match src="event: event [39698,39703]" dest="event: event [39698,39703]"/>
  <match src="]: ] [94405,94406]" dest="]: ] [94051,94052]"/>
  <match src="type_name [39492,39496]" dest="type_name [39492,39496]"/>
  <match src="yul_evm_builtin [19746,19752]" dest="yul_evm_builtin [19746,19752]"/>
  <match src="identifier: r1 [29933,29935]" dest="identifier: r1 [29933,29935]"/>
  <match src="identifier: self [33501,33505]" dest="identifier: self [33501,33505]"/>
  <match src="function_body [90825,91017]" dest="function_body [91850,92042]"/>
  <match src="): ) [5675,5676]" dest="): ) [5675,5676]"/>
  <match src="memory: memory [92821,92827]" dest="memory: memory [92469,92475]"/>
  <match src="identifier: lower_other [35266,35277]" dest="identifier: lower_other [35266,35277]"/>
  <match src="call_expression [72609,72628]" dest="call_expression [72301,72320]"/>
  <match src="uint256: uint256 [99709,99716]" dest="uint256: uint256 [97901,97908]"/>
  <match src="variable_declaration [60183,60203]" dest="variable_declaration [60185,60205]"/>
  <match src="identifier: i [103635,103636]" dest="identifier: i [103559,103560]"/>
  <match src="visibility [78266,78273]" dest="visibility [77399,77406]"/>
  <match src=".: . [107888,107889]" dest=".: . [107812,107813]"/>
  <match src="): ) [46428,46429]" dest="): ) [46670,46671]"/>
  <match src="identifier: success [19193,19200]" dest="identifier: success [19193,19200]"/>
  <match src="): ) [102954,102955]" dest="): ) [102878,102879]"/>
  <match src="identifier: pool [84251,84255]" dest="identifier: pool [84780,84784]"/>
  <match src="virtual: virtual [1587,1594]" dest="virtual: virtual [1587,1594]"/>
  <match src="(: ( [50917,50918]" dest="(: ( [50919,50920]"/>
  <match src="=: = [37265,37266]" dest="=: = [37265,37266]"/>
  <match src="call_argument [70593,70613]" dest="call_argument [70304,70324]"/>
  <match src="call_argument [96153,96166]" dest="call_argument [95463,95476]"/>
  <match src="primitive_type [41683,41689]" dest="primitive_type [41683,41689]"/>
  <match src="array_access [55108,55125]" dest="array_access [55110,55127]"/>
  <match src="function_definition [42712,42765]" dest="function_definition [42712,42765]"/>
  <match src="identifier: invitorRelationshipInfo [99208,99231]" dest="identifier: invitorRelationshipInfo [99368,99391]"/>
  <match src="type_name [74169,74176]" dest="type_name [73900,73907]"/>
  <match src="comment: /// @notice Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef). [59355,59447]" dest="comment: /// @notice Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef). [59357,59449]"/>
  <match src="call_argument [55238,55244]" dest="call_argument [55240,55246]"/>
  <match src="primitive_type [94250,94257]" dest="primitive_type [93896,93903]"/>
  <match src="parameter [87282,87296]" dest="parameter [88443,88457]"/>
  <match src="(: ( [80583,80584]" dest="(: ( [81268,81269]"/>
  <match src="primitive_type [64025,64029]" dest="primitive_type [64027,64031]"/>
  <match src="call_expression [79173,79237]" dest="call_expression [79336,79392]"/>
  <match src="call_argument [26500,26510]" dest="call_argument [26500,26510]"/>
  <match src="pure: pure [6534,6538]" dest="pure: pure [6534,6538]"/>
  <match src=",: , [56698,56699]" dest=",: , [56700,56701]"/>
  <match src="parameter [41594,41606]" dest="parameter [41594,41606]"/>
  <match src="parameter [18760,18774]" dest="parameter [18760,18774]"/>
  <match src="mapping: mapping [66151,66158]" dest="mapping: mapping [66169,66176]"/>
  <match src="identifier: IERC20 [84083,84089]" dest="identifier: IERC20 [84612,84618]"/>
  <match src=".: . [80278,80279]" dest=".: . [80898,80899]"/>
  <match src="identifier: add [61957,61960]" dest="identifier: add [61959,61962]"/>
  <match src="external: external [45215,45223]" dest="external: external [45217,45225]"/>
  <match src="]: ] [56532,56533]" dest="]: ] [56534,56535]"/>
  <match src="number_literal: 64 [31537,31539]" dest="number_literal: 64 [31537,31539]"/>
  <match src="function_definition [94048,94219]" dest="function_definition [93694,93865]"/>
  <match src="(: ( [78706,78707]" dest="(: ( [78286,78287]"/>
  <match src="): ) [39207,39208]" dest="): ) [39207,39208]"/>
  <match src="{: { [86139,86140]" dest="{: { [87427,87428]"/>
  <match src="): ) [7275,7276]" dest="): ) [7275,7276]"/>
  <match src="block_statement [30892,30947]" dest="block_statement [30892,30947]"/>
  <match src="&quot;: &quot; [79924,79925]" dest="&quot;: &quot; [80509,80510]"/>
  <match src="array_access [73399,73419]" dest="array_access [73164,73184]"/>
  <match src="type_name [105788,105808]" dest="type_name [105712,105732]"/>
  <match src="uint256: uint256 [59480,59487]" dest="uint256: uint256 [59482,59489]"/>
  <match src="return_type_definition [60027,60044]" dest="return_type_definition [60029,60046]"/>
  <match src="(: ( [84413,84414]" dest="(: ( [84948,84949]"/>
  <match src="primitive_type [80506,80513]" dest="primitive_type [81191,81198]"/>
  <match src="comment: // deposit limit [43640,43656]" dest="comment: // deposit limit [43640,43656]"/>
  <match src="primitive_type [41660,41664]" dest="primitive_type [41660,41664]"/>
  <match src="identifier: uq112x112 [33420,33429]" dest="identifier: uq112x112 [33420,33429]"/>
  <match src="identifier: r [27802,27803]" dest="identifier: r [27802,27803]"/>
  <match src="call_argument [21652,21659]" dest="call_argument [21652,21659]"/>
  <match src="): ) [42443,42444]" dest="): ) [42443,42444]"/>
  <match src="returns: returns [105779,105786]" dest="returns: returns [105703,105710]"/>
  <match src="binary_expression [77123,77150]" dest="binary_expression [77908,77935]"/>
  <match src="identifier: require [57326,57333]" dest="identifier: require [57328,57335]"/>
  <match src="call_expression [45243,45255]" dest="call_expression [45245,45257]"/>
  <match src="function_definition [40378,40439]" dest="function_definition [40378,40439]"/>
  <match src="(: ( [34451,34452]" dest="(: ( [34451,34452]"/>
  <match src="call_argument [55928,55938]" dest="call_argument [55930,55940]"/>
  <match src="primitive_type [41637,41641]" dest="primitive_type [41637,41641]"/>
  <match src="return_type_definition [40424,40438]" dest="return_type_definition [40424,40438]"/>
  <match src="uint256: uint256 [33285,33292]" dest="uint256: uint256 [33285,33292]"/>
  <match src="function: function [40151,40159]" dest="function: function [40151,40159]"/>
  <match src="identifier: price0CumulativeLast [40387,40407]" dest="identifier: price0CumulativeLast [40387,40407]"/>
  <match src="identifier: lastInvitee [99167,99178]" dest="identifier: lastInvitee [99331,99342]"/>
  <match src="identifier: _pid [89132,89136]" dest="identifier: _pid [89980,89984]"/>
  <match src="array_access [86271,86305]" dest="array_access [87559,87593]"/>
  <match src="user_defined_type [43010,43017]" dest="user_defined_type [43010,43017]"/>
  <match src="call_argument [56495,56501]" dest="call_argument [56497,56503]"/>
  <match src="{: { [85293,85294]" dest="{: { [86593,86594]"/>
  <match src="parameter [59737,59751]" dest="parameter [59739,59753]"/>
  <match src="identifier: _balances [55852,55861]" dest="identifier: _balances [55854,55863]"/>
  <match src="type_name [5640,5644]" dest="type_name [5640,5644]"/>
  <match src="virtual: virtual [87307,87314]" dest="virtual: virtual [88468,88475]"/>
  <match src="address: address [25373,25380]" dest="address: address [25373,25380]"/>
  <match src="]: ] [102476,102477]" dest="]: ] [102335,102336]"/>
  <match src="number_literal: 1 [61904,61905]" dest="number_literal: 1 [61906,61907]"/>
  <match src="=: = [104611,104612]" dest="=: = [104535,104536]"/>
  <match src=",: , [55616,55617]" dest=",: , [55618,55619]"/>
  <match src="identifier: target [17473,17479]" dest="identifier: target [17473,17479]"/>
  <match src="uint256: uint256 [64332,64339]" dest="uint256: uint256 [64334,64341]"/>
  <match src="comment: /**  * @title SafeERC20  * @dev Wrappers around ERC20 operations that throw on failure (when the token  * contract returns false). Tokens that return no value (and instead revert or  * throw on failure) are also supported, non-reverting calls are assumed to be  * successful.  * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,  * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.  */ [20017,20482]" dest="comment: /**  * @title SafeERC20  * @dev Wrappers around ERC20 operations that throw on failure (when the token  * contract returns false). Tokens that return no value (and instead revert or  * throw on failure) are also supported, non-reverting calls are assumed to be  * successful.  * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,  * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.  */ [20017,20482]"/>
  <match src="identifier: _pid [95129,95133]" dest="identifier: _pid [85292,85296]"/>
  <match src="if_statement [60558,60646]" dest="if_statement [60560,60648]"/>
  <match src="pure: pure [7254,7258]" dest="pure: pure [7254,7258]"/>
  <match src="constant: constant [32680,32688]" dest="constant: constant [32680,32688]"/>
  <match src="call_expression [107794,107845]" dest="call_expression [107718,107769]"/>
  <match src=",: , [56493,56494]" dest=",: , [56495,56496]"/>
  <match src="address: address [52593,52600]" dest="address: address [52595,52602]"/>
  <match src="(: ( [59522,59523]" dest="(: ( [59524,59525]"/>
  <match src="): ) [81097,81098]" dest="): ) [81784,81785]"/>
  <match src="call_argument [59683,59693]" dest="call_argument [59685,59695]"/>
  <match src="function_definition [106910,108311]" dest="function_definition [106834,108235]"/>
  <match src="number_literal: 0 [103313,103314]" dest="number_literal: 0 [103237,103238]"/>
  <match src=":: : [105471,105472]" dest=":: : [105395,105396]"/>
  <match src="comment: /**  * @dev Implementation of the {IERC20} interface.  *  * This implementation is agnostic to the way tokens are created. This means  * that a supply mechanism has to be added in a derived contract using {_mint}.  * For a generic mechanism see {ERC20PresetMinterPauser}.  *  * TIP: For a detailed writeup see our guide  * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How  * to implement supply mechanisms].  *  * We have followed general OpenZeppelin guidelines: functions revert instead  * of returning `false` on failure. This behavior is nonetheless conventional  * and does not conflict with the expectations of ERC20 applications.  *  * Additionally, an {Approval} event is emitted on calls to {transferFrom}.  * This allows applications to reconstruct the allowance for all accounts just  * by listening to said events. Other implementations of the EIP may not emit  * these events, as it isn't required by the specification.  *  * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}  * functions have been added to mitigate the well-known issues around setting  * allowances. See {IERC20-approve}.  */ [47693,48878]" dest="comment: /**  * @dev Implementation of the {IERC20} interface.  *  * This implementation is agnostic to the way tokens are created. This means  * that a supply mechanism has to be added in a derived contract using {_mint}.  * For a generic mechanism see {ERC20PresetMinterPauser}.  *  * TIP: For a detailed writeup see our guide  * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How  * to implement supply mechanisms].  *  * We have followed general OpenZeppelin guidelines: functions revert instead  * of returning `false` on failure. This behavior is nonetheless conventional  * and does not conflict with the expectations of ERC20 applications.  *  * Additionally, an {Approval} event is emitted on calls to {transferFrom}.  * This allows applications to reconstruct the allowance for all accounts just  * by listening to said events. Other implementations of the EIP may not emit  * these events, as it isn't required by the specification.  *  * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}  * functions have been added to mitigate the well-known issues around setting  * allowances. See {IERC20-approve}.  */ [47695,48880]"/>
  <match src="identifier: _pool [97409,97414]" dest="identifier: _pool [96174,96179]"/>
  <match src="call_expression [106632,106692]" dest="call_expression [106556,106616]"/>
  <match src="function: function [45486,45494]" dest="function: function [45488,45496]"/>
  <match src="internal: internal [101830,101838]" dest="internal: internal [66197,66205]"/>
  <match src="{: { [47262,47263]" dest="{: { [47264,47265]"/>
  <match src="identifier: isCalculateInvitation [102619,102640]" dest="identifier: isCalculateInvitation [102543,102564]"/>
  <match src="call_argument [46904,46907]" dest="call_argument [47146,47149]"/>
  <match src="unary_expression [38034,38036]" dest="unary_expression [38034,38036]"/>
  <match src="comment: /**      * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.      *      * _Available since v3.4._      */ [6650,6802]" dest="comment: /**      * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.      *      * _Available since v3.4._      */ [6650,6802]"/>
  <match src="comment: /**      * @dev Returns the remaining number of tokens that `spender` will be      * allowed to spend on behalf of `owner` through {transferFrom}. This is      * zero by default.      *      * This value changes when {approve} or {transferFrom} are called.      */ [2397,2667]" dest="comment: /**      * @dev Returns the remaining number of tokens that `spender` will be      * allowed to spend on behalf of `owner` through {transferFrom}. This is      * zero by default.      *      * This value changes when {approve} or {transferFrom} are called.      */ [2397,2667]"/>
  <match src="uint: uint [107281,107285]" dest="uint: uint [107205,107209]"/>
  <match src="view: view [39039,39043]" dest="view: view [39039,39043]"/>
  <match src="type_name [40580,40587]" dest="type_name [40580,40587]"/>
  <match src="visibility [66179,66185]" dest="visibility [66487,66493]"/>
  <match src="variable_declaration_tuple [19008,19047]" dest="variable_declaration_tuple [19008,19047]"/>
  <match src="(: ( [30635,30636]" dest="(: ( [30635,30636]"/>
  <match src="}: } [27406,27407]" dest="}: } [27406,27407]"/>
  <match src="function_body [94472,94687]" dest="function_body [94118,94333]"/>
  <match src="visibility [2724,2732]" dest="visibility [2724,2732]"/>
  <match src="solidity_version_comparison_operator [41030,41033]" dest="solidity_version_comparison_operator [41030,41033]"/>
  <match src="&quot;: &quot; [22372,22373]" dest="&quot;: &quot; [22372,22373]"/>
  <match src="{: { [64411,64412]" dest="{: { [64413,64414]"/>
  <match src=".: . [20892,20893]" dest=".: . [20892,20893]"/>
  <match src="identifier: block [62253,62258]" dest="identifier: block [62255,62260]"/>
  <match src="expression_statement [44705,44752]" dest="expression_statement [44707,44754]"/>
  <match src="number_literal: 112 [38345,38348]" dest="number_literal: 112 [38345,38348]"/>
  <match src="member_expression [108426,108444]" dest="member_expression [108350,108368]"/>
  <match src=".: . [41807,41808]" dest=".: . [41807,41808]"/>
  <match src="parameter [9420,9429]" dest="parameter [9420,9429]"/>
  <match src="identifier: tryAdd [5257,5263]" dest="identifier: tryAdd [5257,5263]"/>
  <match src=",: , [88885,88886]" dest=",: , [89733,89734]"/>
  <match src="(: ( [18884,18885]" dest="(: ( [18884,18885]"/>
  <match src="identifier: pool [78449,78453]" dest="identifier: pool [78029,78033]"/>
  <match src="(: ( [22404,22405]" dest="(: ( [22404,22405]"/>
  <match src="number_literal: 0 [46303,46304]" dest="number_literal: 0 [46305,46306]"/>
  <match src="identifier: sub [10046,10049]" dest="identifier: sub [10046,10049]"/>
  <match src="identifier: acceptInvitation [42721,42737]" dest="identifier: acceptInvitation [42721,42737]"/>
  <match src="identifier: RESOLUTION [35604,35614]" dest="identifier: RESOLUTION [35604,35614]"/>
  <match src="identifier: inviteeWeight [101216,101229]" dest="identifier: inviteeWeight [101185,101198]"/>
  <match src="identifier: a [6271,6272]" dest="identifier: a [6271,6272]"/>
  <match src="): ) [36975,36976]" dest="): ) [36975,36976]"/>
  <match src="parameter [59950,59965]" dest="parameter [59952,59967]"/>
  <match src="address: address [26500,26507]" dest="address: address [26500,26507]"/>
  <match src="-=: -= [32060,32062]" dest="-=: -= [32060,32062]"/>
  <match src="=: = [65110,65111]" dest="=: = [65120,65121]"/>
  <match src="): ) [79850,79851]" dest="): ) [80435,80436]"/>
  <match src="string_literal [7332,7361]" dest="string_literal [7332,7361]"/>
  <match src="primitive_type [79139,79146]" dest="primitive_type [79302,79309]"/>
  <match src="function_definition [78953,79646]" dest="function_definition [78742,80009]"/>
  <match src="(: ( [8101,8102]" dest="(: ( [8101,8102]"/>
  <match src="binary_expression [61347,61357]" dest="binary_expression [61349,61359]"/>
  <match src="=: = [46389,46390]" dest="=: = [46631,46632]"/>
  <match src="primitive_type [63581,63588]" dest="primitive_type [63583,63590]"/>
  <match src="[: [ [93641,93642]" dest="[: [ [93289,93290]"/>
  <match src="assignment_expression [56615,56654]" dest="assignment_expression [56617,56656]"/>
  <match src="member_expression [105577,105597]" dest="member_expression [105501,105521]"/>
  <match src="): ) [89666,89667]" dest="): ) [90908,90909]"/>
  <match src="]: ] [102469,102470]" dest="]: ] [102328,102329]"/>
  <match src="variable_declaration [89050,89071]" dest="variable_declaration [89898,89919]"/>
  <match src="visibility [2051,2059]" dest="visibility [2051,2059]"/>
  <match src="function: function [20576,20584]" dest="function: function [20576,20584]"/>
  <match src="identifier: amount [56495,56501]" dest="identifier: amount [56497,56503]"/>
  <match src="memory: memory [18425,18431]" dest="memory: memory [18425,18431]"/>
  <match src="number_literal: 16 [29292,29294]" dest="number_literal: 16 [29292,29294]"/>
  <match src="address: address [39084,39091]" dest="address: address [39084,39091]"/>
  <match src="event_paramater [4391,4404]" dest="event_paramater [4391,4404]"/>
  <match src="if: if [84837,84839]" dest="if: if [85968,85970]"/>
  <match src="member_expression [107106,107120]" dest="member_expression [107030,107044]"/>
  <match src="identifier: returndata [19450,19460]" dest="identifier: returndata [19450,19460]"/>
  <match src="identifier: _potential [90571,90581]" dest="identifier: _potential [91596,91606]"/>
  <match src="(: ( [59841,59842]" dest="(: ( [59843,59844]"/>
  <match src="call_argument [21681,21737]" dest="call_argument [21681,21737]"/>
  <match src="number_literal: 0 [61580,61581]" dest="number_literal: 0 [61582,61583]"/>
  <match src="parameter [45509,45528]" dest="parameter [45511,45530]"/>
  <match src="parameter [51405,51419]" dest="parameter [51407,51421]"/>
  <match src="identifier: PERMIT_TYPEHASH [39382,39397]" dest="identifier: PERMIT_TYPEHASH [39382,39397]"/>
  <match src="expression_statement [73605,73631]" dest="expression_statement [73370,73396]"/>
  <match src="primitive_type [64422,64429]" dest="primitive_type [64424,64431]"/>
  <match src="parameter [41637,41658]" dest="parameter [41637,41658]"/>
  <match src="function_definition [94227,94687]" dest="function_definition [93873,94333]"/>
  <match src=",: , [5690,5691]" dest=",: , [5690,5691]"/>
  <match src="call_expression [71083,71554]" dest="call_expression [70794,71265]"/>
  <match src="array_access [83528,83566]" dest="array_access [84393,84431]"/>
  <match src="number_literal: 0 [72194,72195]" dest="number_literal: 0 [71860,71861]"/>
  <match src=".: . [83322,83323]" dest=".: . [84307,84308]"/>
  <match src="function_definition [40263,40372]" dest="function_definition [40263,40372]"/>
  <match src="=: = [66049,66050]" dest="=: = [66063,66064]"/>
  <match src="call_argument [19132,19144]" dest="call_argument [19132,19144]"/>
  <match src="type_name [27931,27938]" dest="type_name [27931,27938]"/>
  <match src="call_expression [83074,83122]" dest="call_expression [83853,83901]"/>
  <match src="identifier: maxRankNumber [65096,65109]" dest="identifier: maxRankNumber [65106,65119]"/>
  <match src="primitive_type [12671,12678]" dest="primitive_type [12671,12678]"/>
  <match src="}: } [62061,62062]" dest="}: } [62063,62064]"/>
  <match src="expression_statement [67678,67709]" dest="expression_statement [67892,67923]"/>
  <match src="(: ( [23414,23415]" dest="(: ( [23414,23415]"/>
  <match src="constructor: constructor [25506,25517]" dest="constructor: constructor [25506,25517]"/>
  <match src="expression_statement [86271,86306]" dest="expression_statement [87559,87594]"/>
  <match src=".: . [34299,34300]" dest=".: . [34299,34300]"/>
  <match src="identifier: r [27790,27791]" dest="identifier: r [27790,27791]"/>
  <match src="=: = [72535,72536]" dest="=: = [72227,72228]"/>
  <match src="comment: /// @notice A record of votes checkpoints for each account, by index [58952,59020]" dest="comment: /// @notice A record of votes checkpoints for each account, by index [58954,59022]"/>
  <match src="): ) [31515,31516]" dest="): ) [31515,31516]"/>
  <match src="identifier: rankPoolIndexMap [84781,84797]" dest="identifier: rankPoolIndexMap [85912,85928]"/>
  <match src="parameter [3493,3497]" dest="parameter [3493,3497]"/>
  <match src="internal: internal [18823,18831]" dest="internal: internal [18823,18831]"/>
  <match src="member_expression [82812,82829]" dest="member_expression [83650,83667]"/>
  <match src="binary_expression [90039,90048]" dest="binary_expression [90288,90349]"/>
  <match src="return_type_definition [18832,18854]" dest="return_type_definition [18832,18854]"/>
  <match src="{: { [69335,69336]" dest="{: { [69046,69047]"/>
  <match src="(: ( [41410,41411]" dest="(: ( [41410,41411]"/>
  <match src="): ) [105085,105086]" dest="): ) [105009,105010]"/>
  <match src=".: . [84027,84028]" dest=".: . [84556,84557]"/>
  <match src="member_expression [97409,97432]" dest="member_expression [96174,96197]"/>
  <match src="parenthesized_expression [60791,60806]" dest="parenthesized_expression [60793,60808]"/>
  <match src=".: . [68060,68061]" dest=".: . [68047,68048]"/>
  <match src="expression_statement [31641,31649]" dest="expression_statement [31641,31649]"/>
  <match src=",: , [89538,89539]" dest=",: , [90780,90781]"/>
  <match src="type_name [89099,89107]" dest="type_name [89947,89955]"/>
  <match src="identifier: div [80823,80826]" dest="identifier: div [81510,81513]"/>
  <match src="): ) [52024,52025]" dest="): ) [52026,52027]"/>
  <match src="else: else [81331,81335]" dest="else: else [82020,82024]"/>
  <match src="identifier: PoolInfo [78285,78293]" dest="identifier: PoolInfo [77418,77426]"/>
  <match src="visibility [48985,48992]" dest="visibility [48987,48994]"/>
  <match src="(: ( [28752,28753]" dest="(: ( [28752,28753]"/>
  <match src="type_name [2707,2714]" dest="type_name [2707,2714]"/>
  <match src="+=: += [30973,30975]" dest="+=: += [30973,30975]"/>
  <match src="identifier: c [7380,7381]" dest="identifier: c [7380,7381]"/>
  <match src="identifier: tokenToEthSwap [97923,97937]" dest="identifier: tokenToEthSwap [96688,96702]"/>
  <match src="uint256: uint256 [46256,46263]" dest="uint256: uint256 [46258,46265]"/>
  <match src="block_statement [60611,60646]" dest="block_statement [60613,60648]"/>
  <match src="solidity: solidity [19983,19991]" dest="solidity: solidity [19983,19991]"/>
  <match src="identifier: amount [52707,52713]" dest="identifier: amount [52709,52715]"/>
  <match src="return_type_definition [2738,2755]" dest="return_type_definition [2738,2755]"/>
  <match src="=: = [67950,67951]" dest="=: = [68202,68203]"/>
  <match src="return: return [36946,36952]" dest="return: return [36946,36952]"/>
  <match src="address: address [38554,38561]" dest="address: address [38554,38561]"/>
  <match src="): ) [77637,77638]" dest="): ) [77077,77078]"/>
  <match src="}: } [51542,51543]" dest="}: } [51544,51545]"/>
  <match src="identifier: _toBlock [78250,78258]" dest="identifier: _toBlock [77383,77391]"/>
  <match src="{: { [29155,29156]" dest="{: { [29155,29156]"/>
  <match src="identifier: transferFrom [3826,3838]" dest="identifier: transferFrom [3826,3838]"/>
  <match src="}: } [95921,95922]" dest="}: } [95231,95232]"/>
  <match src="identifier: tokenToEthSwap [107407,107421]" dest="identifier: tokenToEthSwap [107331,107345]"/>
  <match src="identifier: s [39609,39610]" dest="identifier: s [39609,39610]"/>
  <match src="indexed: indexed [39648,39655]" dest="indexed: indexed [39648,39655]"/>
  <match src="call_argument [82640,82668]" dest="call_argument [83478,83506]"/>
  <match src="if: if [8167,8169]" dest="if: if [8167,8169]"/>
  <match src="type_name [8811,8818]" dest="type_name [8811,8818]"/>
  <match src="(: ( [53311,53312]" dest="(: ( [53313,53314]"/>
  <match src="uint256: uint256 [83194,83201]" dest="uint256: uint256 [84011,84018]"/>
  <match src="solidity_version: 0.8.0 [20001,20006]" dest="solidity_version: 0.8.0 [20001,20006]"/>
  <match src="primitive_type [100201,100208]" dest="primitive_type [80132,80139]"/>
  <match src="variable_declaration_statement [35079,35129]" dest="variable_declaration_statement [35079,35129]"/>
  <match src="primitive_type [59256,59263]" dest="primitive_type [59258,59265]"/>
  <match src="}: } [21856,21857]" dest="}: } [21856,21857]"/>
  <match src="}: } [72762,72763]" dest="}: } [72815,72816]"/>
  <match src="assignment_expression [81391,81445]" dest="assignment_expression [82080,82134]"/>
  <match src="=: = [31365,31366]" dest="=: = [31365,31366]"/>
  <match src="identifier: to [40588,40590]" dest="identifier: to [40588,40590]"/>
  <match src="type_name [64025,64029]" dest="type_name [64027,64031]"/>
  <match src="=: = [70469,70470]" dest="=: = [70180,70181]"/>
  <match src="identifier: mul [106675,106678]" dest="identifier: mul [106599,106602]"/>
  <match src="return: return [5374,5380]" dest="return: return [5374,5380]"/>
  <match src="event_paramater [66927,66946]" dest="event_paramater [67180,67199]"/>
  <match src="visibility [18401,18409]" dest="visibility [18401,18409]"/>
  <match src="primitive_type [46155,46159]" dest="primitive_type [46157,46161]"/>
  <match src=".: . [19056,19057]" dest=".: . [19056,19057]"/>
  <match src="(: ( [99839,99840]" dest="(: ( [98031,98032]"/>
  <match src="external: external [2365,2373]" dest="external: external [2365,2373]"/>
  <match src="uint: uint [38967,38971]" dest="uint: uint [38967,38971]"/>
  <match src="expression_statement [69584,69621]" dest="expression_statement [69295,69332]"/>
  <match src=".: . [86059,86060]" dest=".: . [87351,87352]"/>
  <match src="uint256: uint256 [28719,28726]" dest="uint256: uint256 [28719,28726]"/>
  <match src="}: } [75837,75838]" dest="}: } [75353,75354]"/>
  <match src="call_expression [10983,11011]" dest="call_expression [10983,11011]"/>
  <match src="&gt;: &gt; [103918,103919]" dest="&gt;: &gt; [103842,103843]"/>
  <match src="identifier: upper [35087,35092]" dest="identifier: upper [35087,35092]"/>
  <match src="primitive_type [93201,93208]" dest="primitive_type [92849,92856]"/>
  <match src="pure: pure [36806,36810]" dest="pure: pure [36806,36810]"/>
  <match src="identifier: nCheckpoints [62345,62357]" dest="identifier: nCheckpoints [62347,62359]"/>
  <match src="event_paramater [59287,59310]" dest="event_paramater [59289,59312]"/>
  <match src="identifier: nftShard [65839,65847]" dest="identifier: nftShard [65849,65857]"/>
  <match src="type_name [66230,66237]" dest="type_name [66250,66257]"/>
  <match src="parameter [104898,104922]" dest="parameter [104822,104846]"/>
  <match src="parameter [5264,5273]" dest="parameter [5264,5273]"/>
  <match src="identifier: resetInvitationRelationship [98388,98415]" dest="identifier: resetInvitationRelationship [97153,97180]"/>
  <match src="identifier: blockNumber [60598,60609]" dest="identifier: blockNumber [60600,60611]"/>
  <match src="(: ( [1402,1403]" dest="(: ( [1402,1403]"/>
  <match src="identifier: getReserves [42104,42115]" dest="identifier: getReserves [42104,42115]"/>
  <match src="variable_declaration [60766,60780]" dest="variable_declaration [60768,60782]"/>
  <match src="function_body [27280,27407]" dest="function_body [27280,27407]"/>
  <match src="primitive_type [67112,67119]" dest="primitive_type [67365,67372]"/>
  <match src="struct_member [63519,63539]" dest="struct_member [63521,63541]"/>
  <match src="address: address [82715,82722]" dest="address: address [83553,83560]"/>
  <match src="primitive_type [95340,95347]" dest="primitive_type [94488,94495]"/>
  <match src=",: , [89201,89202]" dest=",: , [90126,90127]"/>
  <match src="(: ( [46433,46434]" dest="(: ( [46675,46676]"/>
  <match src="identifier: rankPoolIndex [85670,85683]" dest="identifier: rankPoolIndex [86970,86983]"/>
  <match src="pragma: pragma [19976,19982]" dest="pragma: pragma [19976,19982]"/>
  <match src="{: { [18433,18434]" dest="{: { [18433,18434]"/>
  <match src="}: } [89678,89679]" dest="}: } [90920,90921]"/>
  <match src="variable_declaration [76184,76205]" dest="variable_declaration [75700,75721]"/>
  <match src="member_expression [34785,34792]" dest="member_expression [34785,34792]"/>
  <match src="binary_expression [60466,60482]" dest="binary_expression [60468,60484]"/>
  <match src="binary_expression [83708,83723]" dest="binary_expression [85444,85459]"/>
  <match src="binary_expression [27861,27866]" dest="binary_expression [27861,27866]"/>
  <match src="state_mutability [34622,34626]" dest="state_mutability [34622,34626]"/>
  <match src="if_statement [46597,46920]" dest="if_statement [46839,47162]"/>
  <match src="identifier: fee [46297,46300]" dest="identifier: fee [46299,46302]"/>
  <match src="&lt;=: &lt;= [7760,7762]" dest="&lt;=: &lt;= [7760,7762]"/>
  <match src="(: ( [107849,107850]" dest="(: ( [107773,107774]"/>
  <match src="(: ( [30274,30275]" dest="(: ( [30274,30275]"/>
  <match src="member_expression [94613,94631]" dest="member_expression [94259,94277]"/>
  <match src="primitive_type [79801,79808]" dest="primitive_type [80386,80393]"/>
  <match src="if: if [73891,73893]" dest="if: if [73620,73622]"/>
  <match src="visibility [59753,59761]" dest="visibility [59755,59763]"/>
  <match src="primitive_type [16748,16753]" dest="primitive_type [16748,16753]"/>
  <match src="call_argument [28067,28068]" dest="call_argument [28067,28068]"/>
  <match src="type_name [106009,106015]" dest="type_name [105933,105939]"/>
  <match src="if_statement [87567,87638]" dest="if_statement [88728,88799]"/>
  <match src="expression_statement [70451,70476]" dest="expression_statement [70162,70187]"/>
  <match src="(: ( [15283,15284]" dest="(: ( [15283,15284]"/>
  <match src="new: new [93146,93149]" dest="new: new [92794,92797]"/>
  <match src="member_expression [102511,102528]" dest="member_expression [102435,102452]"/>
  <match src="(: ( [67551,67552]" dest="(: ( [67798,67799]"/>
  <match src="if_statement [108458,108605]" dest="if_statement [108382,108529]"/>
  <match src="variable_declaration_statement [107434,107501]" dest="variable_declaration_statement [107358,107425]"/>
  <match src="]: ] [95901,95902]" dest="]: ] [95168,95169]"/>
  <match src="bool: bool [5949,5953]" dest="bool: bool [5949,5953]"/>
  <match src="call_argument [56696,56697]" dest="call_argument [56698,56699]"/>
  <match src="call_argument [73289,73290]" dest="call_argument [73054,73055]"/>
  <match src="identifier: Approval [38522,38530]" dest="identifier: Approval [38522,38530]"/>
  <match src="comment: // * 2^-112 [35027,35038]" dest="comment: // * 2^-112 [35027,35038]"/>
  <match src="&lt;: &lt; [34367,34368]" dest="&lt;: &lt; [34367,34368]"/>
  <match src="call_expression [82754,82778]" dest="call_expression [83592,83616]"/>
  <match src="function: function [96043,96051]" dest="function: function [95353,95361]"/>
  <match src=",: , [68256,68257]" dest=",: , [68349,68350]"/>
  <match src="array_access [100341,100355]" dest="array_access [71904,71918]"/>
  <match src="}: } [83919,83920]" dest="}: } [84443,84444]"/>
  <match src="struct_member [64131,64161]" dest="struct_member [64133,64163]"/>
  <match src="identifier: x [33032,33033]" dest="identifier: x [33032,33033]"/>
  <match src="primitive_type [25541,25548]" dest="primitive_type [25541,25548]"/>
  <match src="identifier: _pid [72750,72754]" dest="identifier: _pid [72803,72807]"/>
  <match src="binary_expression [84615,84624]" dest="binary_expression [85746,85755]"/>
  <match src="uint256: uint256 [28958,28965]" dest="uint256: uint256 [28958,28965]"/>
  <match src="return_type_definition [24329,24354]" dest="return_type_definition [24329,24354]"/>
  <match src="): ) [38902,38903]" dest="): ) [38902,38903]"/>
  <match src="uint256: uint256 [96120,96127]" dest="uint256: uint256 [95430,95437]"/>
  <match src="=: = [35585,35586]" dest="=: = [35585,35586]"/>
  <match src="+=: += [30772,30774]" dest="+=: += [30772,30774]"/>
  <match src="identifier: require [87021,87028]" dest="identifier: require [88178,88185]"/>
  <match src="): ) [60805,60806]" dest="): ) [60807,60808]"/>
  <match src="binary_expression [28125,28131]" dest="binary_expression [28125,28131]"/>
  <match src="array_access [88838,88851]" dest="array_access [89686,89699]"/>
  <match src="): ) [36412,36413]" dest="): ) [36412,36413]"/>
  <match src="address: address [43957,43964]" dest="address: address [43957,43964]"/>
  <match src="(: ( [83241,83242]" dest="(: ( [90420,90421]"/>
  <match src="identifier: uq112x112 [33858,33867]" dest="identifier: uq112x112 [33858,33867]"/>
  <match src="(: ( [41874,41875]" dest="(: ( [41874,41875]"/>
  <match src="(: ( [54135,54136]" dest="(: ( [54137,54138]"/>
  <match src="identifier: sub [61626,61629]" dest="identifier: sub [61628,61631]"/>
  <match src="): ) [55788,55789]" dest="): ) [55790,55791]"/>
  <match src="(: ( [31305,31306]" dest="(: ( [31305,31306]"/>
  <match src="(: ( [98213,98214]" dest="(: ( [96978,96979]"/>
  <match src="emit_statement [85007,85067]" dest="emit_statement [86307,86367]"/>
  <match src="binary_expression [72082,72090]" dest="binary_expression [71635,71643]"/>
  <match src=",: , [59276,59277]" dest=",: , [59278,59279]"/>
  <match src="*=: *= [27854,27856]" dest="*=: *= [27854,27856]"/>
  <match src="]: ] [108533,108534]" dest="]: ] [108457,108458]"/>
  <match src="identifier: _toBlock [79112,79120]" dest="identifier: _toBlock [79275,79283]"/>
  <match src="+: + [29760,29761]" dest="+: + [29760,29761]"/>
  <match src="=: = [78411,78412]" dest="=: = [77999,78000]"/>
  <match src="if_statement [90875,90931]" dest="if_statement [91900,91956]"/>
  <match src="assignment_expression [67519,67554]" dest="assignment_expression [67766,67801]"/>
  <match src="primitive_type [3855,3862]" dest="primitive_type [3855,3862]"/>
  <match src="(: ( [25646,25647]" dest="(: ( [25646,25647]"/>
  <match src="assignment_expression [69555,69569]" dest="assignment_expression [69266,69280]"/>
  <match src="identifier: usersTotalWeight [93596,93612]" dest="identifier: usersTotalWeight [93244,93260]"/>
  <match src="identifier: success [18107,18114]" dest="identifier: success [18107,18114]"/>
  <match src="=: = [82810,82811]" dest="=: = [83648,83649]"/>
  <match src="uint256: uint256 [64649,64656]" dest="uint256: uint256 [64653,64660]"/>
  <match src="type_name [2747,2754]" dest="type_name [2747,2754]"/>
  <match src="expression_statement [72928,72996]" dest="expression_statement [72610,72678]"/>
  <match src="return_type_definition [35988,36014]" dest="return_type_definition [35988,36014]"/>
  <match src="identifier: accumulativeDividend [83217,83237]" dest="identifier: accumulativeDividend [90396,90416]"/>
  <match src="parameter [94730,94743]" dest="parameter [97214,97227]"/>
  <match src="returns: returns [91072,91079]" dest="returns: returns [92097,92104]"/>
  <match src=",: , [61290,61291]" dest=",: , [61292,61293]"/>
  <match src="): ) [47104,47105]" dest="): ) [46491,46492]"/>
  <match src="returns: returns [40667,40674]" dest="returns: returns [40667,40674]"/>
  <match src="state_mutability [38953,38957]" dest="state_mutability [38953,38957]"/>
  <match src="identifier: _pending [89372,89380]" dest="identifier: accumulativeSHDPerWeight [77689,77713]"/>
  <match src="{: { [45557,45558]" dest="{: { [45559,45560]"/>
  <match src="type_name [85239,85246]" dest="type_name [86539,86546]"/>
  <match src="{: { [58886,58887]" dest="{: { [58888,58889]"/>
  <match src="function_body [71905,72763]" dest="function_body [71616,72816]"/>
  <match src=".: . [82319,82320]" dest=".: . [83157,83158]"/>
  <match src=",: , [103180,103181]" dest=",: , [103104,103105]"/>
  <match src="parameter [57186,57201]" dest="parameter [57188,57203]"/>
  <match src="identifier: l [28130,28131]" dest="identifier: l [28130,28131]"/>
  <match src="=: = [23329,23330]" dest="=: = [23329,23330]"/>
  <match src="primitive_type [35148,35155]" dest="primitive_type [35148,35155]"/>
  <match src="[: [ [85582,85583]" dest="[: [ [86882,86883]"/>
  <match src=".: . [81554,81555]" dest=".: . [82247,82248]"/>
  <match src="binary_expression [32030,32041]" dest="binary_expression [32030,32041]"/>
  <match src="): ) [106194,106195]" dest="): ) [106118,106119]"/>
  <match src="=: = [45950,45951]" dest="=: = [45952,45953]"/>
  <match src="visibility [43375,43381]" dest="visibility [43375,43381]"/>
  <match src="public: public [43375,43381]" dest="public: public [43375,43381]"/>
  <match src="): ) [23575,23576]" dest="): ) [23575,23576]"/>
  <match src="uint256: uint256 [87718,87725]" dest="uint256: uint256 [88879,88886]"/>
  <match src=",: , [14334,14335]" dest=",: , [14334,14335]"/>
  <match src="type_name [66592,66599]" dest="type_name [66845,66852]"/>
  <match src="): ) [30222,30223]" dest="): ) [30222,30223]"/>
  <match src="contract_body [48914,58627]" dest="contract_body [48916,58629]"/>
  <match src="identifier: _SHD [67032,67036]" dest="identifier: _SHD [67285,67289]"/>
  <match src="call_argument [83885,83892]" dest="call_argument [98449,98456]"/>
  <match src="]: ] [80339,80340]" dest="]: ] [80959,80960]"/>
  <match src="assignment_expression [69584,69620]" dest="assignment_expression [69295,69331]"/>
  <match src=".: . [81902,81903]" dest=".: . [82734,82735]"/>
  <match src="string_literal [55138,55178]" dest="string_literal [55140,55180]"/>
  <match src="): ) [81375,81376]" dest="): ) [82064,82065]"/>
  <match src="=: = [98967,98968]" dest="=: = [99152,99153]"/>
  <match src="}: } [45973,45974]" dest="}: } [45975,45976]"/>
  <match src="identifier: _pid [83514,83518]" dest="identifier: _pid [84370,84374]"/>
  <match src="identifier: functionStaticCall [17345,17363]" dest="identifier: functionStaticCall [17345,17363]"/>
  <match src="identifier: _beforeTokenTransfer [55028,55048]" dest="identifier: _beforeTokenTransfer [55030,55050]"/>
  <match src="returns: returns [49794,49801]" dest="returns: returns [49796,49803]"/>
  <match src="array_access [60875,60903]" dest="array_access [60877,60905]"/>
  <match src="identifier: spender [54174,54181]" dest="identifier: spender [54176,54183]"/>
  <match src="assignment_expression [68963,68983]" dest="assignment_expression [68674,68694]"/>
  <match src="solidity_version: 0.4.0 [27031,27036]" dest="solidity_version: 0.4.0 [27031,27036]"/>
  <match src="identifier: nCheckpoints [62432,62444]" dest="identifier: nCheckpoints [62434,62446]"/>
  <match src="]: ] [67807,67808]" dest="]: ] [68021,68022]"/>
  <match src="primitive_type [56688,56695]" dest="primitive_type [56690,56697]"/>
  <match src="): ) [2363,2364]" dest="): ) [2363,2364]"/>
  <match src="[: [ [59790,59791]" dest="[: [ [59792,59793]"/>
  <match src="]: ] [74285,74286]" dest="]: ] [74066,74067]"/>
  <match src="boolean_literal [109289,109294]" dest="boolean_literal [109213,109218]"/>
  <match src=",: , [4389,4390]" dest=",: , [4389,4390]"/>
  <match src="call_expression [53390,53473]" dest="call_expression [53392,53475]"/>
  <match src="call_argument [19111,19118]" dest="call_argument [19111,19118]"/>
  <match src="identifier: encodeWithSelector [20893,20911]" dest="identifier: encodeWithSelector [20893,20911]"/>
  <match src="identifier: d [27761,27762]" dest="identifier: d [27761,27762]"/>
  <match src="=: = [92978,92979]" dest="=: = [92626,92627]"/>
  <match src="identifier: r [29094,29095]" dest="identifier: r [29094,29095]"/>
  <match src="identifier: sub [99836,99839]" dest="identifier: sub [98028,98031]"/>
  <match src="for: for [95764,95767]" dest="for: for [94912,94915]"/>
  <match src="visibility [64510,64516]" dest="visibility [64512,64518]"/>
  <match src="type_name [27224,27231]" dest="type_name [27224,27231]"/>
  <match src="expression_statement [94602,94632]" dest="expression_statement [94248,94278]"/>
  <match src="primitive_type [64660,64667]" dest="primitive_type [64664,64671]"/>
  <match src="variable_declaration_statement [28983,28997]" dest="variable_declaration_statement [28983,28997]"/>
  <match src="member_expression [87536,87556]" dest="member_expression [88697,88717]"/>
  <match src="): ) [72627,72628]" dest="): ) [72319,72320]"/>
  <match src="member_expression [22412,22434]" dest="member_expression [22412,22434]"/>
  <match src="call_argument [27314,27315]" dest="call_argument [27314,27315]"/>
  <match src="identifier: _decimals [57900,57909]" dest="identifier: _decimals [57902,57911]"/>
  <match src="): ) [87458,87459]" dest="): ) [88619,88620]"/>
  <match src="call_argument [67248,67271]" dest="call_argument [67495,67518]"/>
  <match src="identifier: r [29929,29930]" dest="identifier: r [29929,29930]"/>
  <match src="identifier: b [11033,11034]" dest="identifier: b [11033,11034]"/>
  <match src="is: is [48895,48897]" dest="is: is [48897,48899]"/>
  <match src=".: . [62258,62259]" dest=".: . [62260,62261]"/>
  <match src="solidity_version: 0.8.0 [23732,23737]" dest="solidity_version: 0.8.0 [23732,23737]"/>
  <match src="&quot;: &quot; [17487,17488]" dest="&quot;: &quot; [17487,17488]"/>
  <match src="member_expression [108461,108476]" dest="member_expression [108385,108400]"/>
  <match src="): ) [61704,61705]" dest="): ) [61706,61707]"/>
  <match src="(: ( [8872,8873]" dest="(: ( [8872,8873]"/>
  <match src="parameter [94438,94455]" dest="parameter [94084,94101]"/>
  <match src="identifier: startBlock [43485,43495]" dest="identifier: startBlock [43485,43495]"/>
  <match src="type_name [100987,100994]" dest="type_name [101002,101009]"/>
  <match src="call_argument [76390,76413]" dest="call_argument [75906,75929]"/>
  <match src="type_name [69878,69885]" dest="type_name [69589,69596]"/>
  <match src="function_definition [31215,32157]" dest="function_definition [31215,32157]"/>
  <match src="{: { [97263,97264]" dest="{: { [96028,96029]"/>
  <match src="uint256: uint256 [46120,46127]" dest="uint256: uint256 [46122,46129]"/>
  <match src="variable_declaration [70666,70693]" dest="variable_declaration [70377,70404]"/>
  <match src=".: . [106078,106079]" dest=".: . [106002,106003]"/>
  <match src="-: - [27734,27735]" dest="-: - [27734,27735]"/>
  <match src="): ) [88675,88676]" dest="): ) [89523,89524]"/>
  <match src="if_statement [83016,83134]" dest="if_statement [83795,83913]"/>
  <match src="primitive_type [34922,34929]" dest="primitive_type [34922,34929]"/>
  <match src="primitive_type [33104,33111]" dest="primitive_type [33104,33111]"/>
  <match src="expression_statement [31298,31351]" dest="expression_statement [31298,31351]"/>
  <match src="(: ( [17754,17755]" dest="(: ( [17754,17755]"/>
  <match src="): ) [27497,27498]" dest="): ) [27497,27498]"/>
  <match src="primitive_type [69751,69758]" dest="primitive_type [69462,69469]"/>
  <match src="identifier: initialInvitor [67742,67756]" dest="identifier: initialInvitor [67956,67970]"/>
  <match src="{: { [80944,80945]" dest="{: { [81631,81632]"/>
  <match src="=: = [29631,29632]" dest="=: = [29631,29632]"/>
  <match src="): ) [42447,42448]" dest="): ) [42447,42448]"/>
  <match src="comment: // credit for this implementation goes to [28556,28597]" dest="comment: // credit for this implementation goes to [28556,28597]"/>
  <match src="expression_statement [84160,84212]" dest="expression_statement [84689,84741]"/>
  <match src="for: for [20556,20559]" dest="for: for [20556,20559]"/>
  <match src="): ) [18853,18854]" dest="): ) [18853,18854]"/>
  <match src="(: ( [57352,57353]" dest="(: ( [57354,57355]"/>
  <match src="==: == [73916,73918]" dest="==: == [73646,73648]"/>
  <match src="(: ( [33914,33915]" dest="(: ( [33914,33915]"/>
  <match src="): ) [41879,41880]" dest="): ) [41879,41880]"/>
  <match src="if_statement [29570,29619]" dest="if_statement [29570,29619]"/>
  <match src="primitive_type [98473,98480]" dest="primitive_type [97238,97245]"/>
  <match src="override: override [94325,94333]" dest="override: override [93971,93979]"/>
  <match src="identifier: IUniswapV2Pair [42083,42097]" dest="identifier: IUniswapV2Pair [42083,42097]"/>
  <match src="emit: emit [82303,82307]" dest="emit: emit [83141,83145]"/>
  <match src="uint256: uint256 [87503,87510]" dest="uint256: uint256 [88664,88671]"/>
  <match src="call_argument [88887,88892]" dest="call_argument [89735,89740]"/>
  <match src="number_literal: 0 [60285,60286]" dest="number_literal: 0 [60287,60288]"/>
  <match src="if: if [75961,75963]" dest="if: if [75477,75479]"/>
  <match src="identifier: spender [53320,53327]" dest="identifier: spender [53322,53329]"/>
  <match src="parameter [71680,71693]" dest="parameter [71391,71404]"/>
  <match src="visibility [2365,2373]" dest="visibility [2365,2373]"/>
  <match src="identifier: user [82969,82973]" dest="identifier: user [83748,83752]"/>
  <match src="identifier: amount1In [39871,39880]" dest="identifier: amount1In [39871,39880]"/>
  <match src="): ) [49059,49060]" dest="): ) [49061,49062]"/>
  <match src="==: == [104655,104657]" dest="==: == [104579,104581]"/>
  <match src="identifier: h [28133,28134]" dest="identifier: h [28133,28134]"/>
  <match src="identifier: EvilPoolInfo [73356,73368]" dest="identifier: EvilPoolInfo [73121,73133]"/>
  <match src="type_name [1918,1925]" dest="type_name [1918,1925]"/>
  <match src="string [37136,37168]" dest="string [37136,37168]"/>
  <match src="new: new [88700,88703]" dest="new: new [89548,89551]"/>
  <match src="if: if [102611,102613]" dest="if: if [102535,102537]"/>
  <match src="[: [ [83548,83549]" dest="[: [ [84413,84414]"/>
  <match src="identifier: sub [22319,22322]" dest="identifier: sub [22319,22322]"/>
  <match src="bytes: bytes [22924,22929]" dest="bytes: bytes [22924,22929]"/>
  <match src="identifier: account [61187,61194]" dest="identifier: account [61189,61196]"/>
  <match src="uint112: uint112 [34848,34855]" dest="uint112: uint112 [34848,34855]"/>
  <match src="member_expression [72331,72355]" dest="member_expression [72086,72110]"/>
  <match src="member_expression [108011,108031]" dest="member_expression [107935,107955]"/>
  <match src="identifier: spender [53413,53420]" dest="identifier: spender [53415,53422]"/>
  <match src="primitive_type [44830,44837]" dest="primitive_type [44832,44839]"/>
  <match src="function_body [75553,75838]" dest="function_body [75069,75354]"/>
  <match src="call_argument [16781,16811]" dest="call_argument [16781,16811]"/>
  <match src="primitive_type [27653,27660]" dest="primitive_type [27653,27660]"/>
  <match src="number_literal: 16 [31796,31798]" dest="number_literal: 16 [31796,31798]"/>
  <match src="): ) [109625,109626]" dest="): ) [109549,109550]"/>
  <match src="(: ( [83018,83019]" dest="(: ( [83797,83798]"/>
  <match src="): ) [62693,62694]" dest="): ) [62695,62696]"/>
  <match src="(: ( [40407,40408]" dest="(: ( [40407,40408]"/>
  <match src="type_name [34227,34233]" dest="type_name [34227,34233]"/>
  <match src="(: ( [104134,104135]" dest="(: ( [104058,104059]"/>
  <match src=".: . [80579,80580]" dest=".: . [81264,81265]"/>
  <match src="state_mutability [25774,25778]" dest="state_mutability [25774,25778]"/>
  <match src="identifier: _endBlock [95717,95726]" dest="identifier: _endBlock [94865,94874]"/>
  <match src="number_literal: 0 [25647,25648]" dest="number_literal: 0 [25647,25648]"/>
  <match src="type_name [61488,61495]" dest="type_name [61490,61497]"/>
  <match src="identifier: require [79880,79887]" dest="identifier: require [80465,80472]"/>
  <match src="{: { [74875,74876]" dest="{: { [74746,74747]"/>
  <match src="identifier: require [10143,10150]" dest="identifier: require [10143,10150]"/>
  <match src=".: . [62362,62363]" dest=".: . [62364,62365]"/>
  <match src="visibility [42756,42764]" dest="visibility [42756,42764]"/>
  <match src="): ) [108078,108079]" dest="): ) [108002,108003]"/>
  <match src="identifier: account [60370,60377]" dest="identifier: account [60372,60379]"/>
  <match src="type_name [11729,11736]" dest="type_name [11729,11736]"/>
  <match src="(: ( [105597,105598]" dest="(: ( [105521,105522]"/>
  <match src="type_alias [43030,43038]" dest="type_alias [43030,43038]"/>
  <match src=",: , [68370,68371]" dest=",: , [68379,68380]"/>
  <match src="(: ( [38288,38289]" dest="(: ( [38288,38289]"/>
  <match src="return: return [78100,78106]" dest="return: return [77230,77236]"/>
  <match src="comment: /**      * @dev Sets {decimals} to a value other than the default one of 18.      *      * WARNING: This function should only be called from the constructor. Most      * applications that interact with token contracts will not expect      * {decimals} to ever change, and may work incorrectly if it does.      */ [57507,57825]" dest="comment: /**      * @dev Sets {decimals} to a value other than the default one of 18.      *      * WARNING: This function should only be called from the constructor. Most      * applications that interact with token contracts will not expect      * {decimals} to ever change, and may work incorrectly if it does.      */ [57509,57827]"/>
  <match src="pragma_directive [41015,41039]" dest="pragma_directive [41015,41039]"/>
  <match src="type_name [93932,93939]" dest="type_name [93578,93585]"/>
  <match src="=: = [32694,32695]" dest="=: = [32694,32695]"/>
  <match src="): ) [33473,33474]" dest="): ) [33473,33474]"/>
  <match src="parameter [40690,40702]" dest="parameter [40690,40702]"/>
  <match src="binary_expression [73895,73920]" dest="binary_expression [73624,73650]"/>
  <match src=".: . [74690,74691]" dest=".: . [74442,74443]"/>
  <match src="view: view [102925,102929]" dest="view: view [102849,102853]"/>
  <match src="call_expression [78426,78653]" dest="call_expression [78014,78233]"/>
  <match src="member_expression [79600,79619]" dest="member_expression [79683,79702]"/>
  <match src="}: } [42908,42909]" dest="}: } [42908,42909]"/>
  <match src="expression_statement [57326,57395]" dest="expression_statement [57328,57397]"/>
  <match src="assignment_expression [104042,104086]" dest="assignment_expression [103966,104010]"/>
  <match src="primitive_type [17380,17385]" dest="primitive_type [17380,17385]"/>
  <match src="function: function [5579,5587]" dest="function: function [5579,5587]"/>
  <match src="identifier: fee [47101,47104]" dest="identifier: fee [46488,46491]"/>
  <match src="identifier: require [82579,82586]" dest="identifier: require [83417,83424]"/>
  <match src="): ) [44693,44694]" dest="): ) [44695,44696]"/>
  <match src="identifier: pow2 [27633,27637]" dest="identifier: pow2 [27633,27637]"/>
  <match src="): ) [29583,29584]" dest="): ) [29583,29584]"/>
  <match src="parameter [42738,42754]" dest="parameter [42738,42754]"/>
  <match src="&amp;: &amp; [31932,31933]" dest="&amp;: &amp; [31932,31933]"/>
  <match src="binary_expression [77002,77011]" dest="binary_expression [76518,76527]"/>
  <match src="(: ( [55768,55769]" dest="(: ( [55770,55771]"/>
  <match src="variable_declaration_statement [89951,90026]" dest="variable_declaration_statement [91170,91340]"/>
  <match src="identifier: poolReward [90326,90336]" dest="identifier: toBeDividend [91379,91391]"/>
  <match src="type_name [39943,39950]" dest="type_name [39943,39950]"/>
  <match src="identifier: RESOLUTION [36270,36280]" dest="identifier: RESOLUTION [36270,36280]"/>
  <match src="identifier: price1CumulativeLast [40454,40474]" dest="identifier: price1CumulativeLast [40454,40474]"/>
  <match src="identifier: WETHToken [67248,67257]" dest="identifier: WETHToken [67495,67504]"/>
  <match src="identifier: i [95780,95781]" dest="identifier: i [94928,94929]"/>
  <match src="identifier: invitation [94506,94516]" dest="identifier: invitation [94152,94162]"/>
  <match src="identifier: msg [83873,83876]" dest="identifier: msg [85594,85597]"/>
  <match src="{: { [31287,31288]" dest="{: { [31287,31288]"/>
  <match src="identifier: lastDividendHeight [108557,108575]" dest="identifier: lastDividendHeight [108481,108499]"/>
  <match src="call_expression [102973,103060]" dest="call_expression [102897,102984]"/>
  <match src="[: [ [61808,61809]" dest="[: [ [61810,61811]"/>
  <match src="(: ( [106367,106368]" dest="(: ( [106291,106292]"/>
  <match src="type_cast_expression [21637,21650]" dest="type_cast_expression [21637,21650]"/>
  <match src="parameter [76959,76971]" dest="parameter [76475,76487]"/>
  <match src="(: ( [66452,66453]" dest="(: ( [66705,66706]"/>
  <match src="variable_declaration [5335,5344]" dest="variable_declaration [5335,5344]"/>
  <match src="number_literal: 1966 [68366,68370]" dest="number_literal: 1966 [68375,68379]"/>
  <match src="identifier: r [29766,29767]" dest="identifier: r [29766,29767]"/>
  <match src="expression_statement [85409,85480]" dest="expression_statement [86709,86780]"/>
  <match src="number_literal: 2 [38252,38253]" dest="number_literal: 2 [38252,38253]"/>
  <match src="assignment_expression [83290,83356]" dest="assignment_expression [84275,84341]"/>
  <match src="function_definition [40207,40257]" dest="function_definition [40207,40257]"/>
  <match src="(: ( [104011,104012]" dest="(: ( [103935,103936]"/>
  <match src="uint256: uint256 [46202,46209]" dest="uint256: uint256 [46204,46211]"/>
  <match src="identifier: poolReward [89831,89841]" dest="identifier: poolReward [91073,91083]"/>
  <match src="yul_path [13030,13037]" dest="yul_path [13030,13037]"/>
  <match src="&lt;&lt;: &lt;&lt; [33296,33298]" dest="&lt;&lt;: &lt;&lt; [33296,33298]"/>
  <match src="primitive_type [35573,35580]" dest="primitive_type [35573,35580]"/>
  <match src="int256: int256 [34227,34233]" dest="int256: int256 [34227,34233]"/>
  <match src="expression_statement [30665,30674]" dest="expression_statement [30665,30674]"/>
  <match src="call_argument [36258,36265]" dest="call_argument [36258,36265]"/>
  <match src="yul_variable_declaration [19684,19724]" dest="yul_variable_declaration [19684,19724]"/>
  <match src="if: if [69516,69518]" dest="if: if [69227,69229]"/>
  <match src="update_expression [95795,95799]" dest="update_expression [94943,94947]"/>
  <match src="block_statement [84288,84376]" dest="block_statement [84817,84911]"/>
  <match src="): ) [23436,23437]" dest="): ) [23436,23437]"/>
  <match src="type_name [10890,10897]" dest="type_name [10890,10897]"/>
  <match src=".: . [83876,83877]" dest=".: . [85597,85598]"/>
  <match src="identifier: balanceOf [2024,2033]" dest="identifier: balanceOf [2024,2033]"/>
  <match src="): ) [30317,30318]" dest="): ) [30317,30318]"/>
  <match src="identifier: implementation [109642,109656]" dest="identifier: implementation [109566,109580]"/>
  <match src="indexed: indexed [38539,38546]" dest="indexed: indexed [38539,38546]"/>
  <match src="state_variable_declaration [64501,64521]" dest="state_variable_declaration [64503,64523]"/>
  <match src="type_name [66463,66470]" dest="type_name [66716,66723]"/>
  <match src="source_file [0,109691]" dest="source_file [0,109615]"/>
  <match src="primitive_type [65180,65187]" dest="primitive_type [65190,65197]"/>
  <match src="visibility [52628,52634]" dest="visibility [52630,52636]"/>
  <match src="primitive_type [93320,93327]" dest="primitive_type [92968,92975]"/>
  <match src="*: * [35184,35185]" dest="*: * [35184,35185]"/>
  <match src="}: } [101701,101702]" dest="}: } [102028,102029]"/>
  <match src="identifier: user [82812,82816]" dest="identifier: user [83650,83654]"/>
  <match src="{: { [79024,79025]" dest="{: { [78813,78814]"/>
  <match src="number_literal: 1 [38035,38036]" dest="number_literal: 1 [38035,38036]"/>
  <match src="identifier: Swap [39793,39797]" dest="identifier: Swap [39793,39797]"/>
  <match src="): ) [72195,72196]" dest="): ) [71861,71862]"/>
  <match src="array_access [78309,78323]" dest="array_access [77442,77456]"/>
  <match src="identifier: IUniswapV2Pair [106038,106052]" dest="identifier: IUniswapV2Pair [105962,105976]"/>
  <match src="=: = [74997,74998]" dest="=: = [74869,74870]"/>
  <match src="number_literal: 2 [32063,32064]" dest="number_literal: 2 [32063,32064]"/>
  <match src="event_definition [392,495]" dest="event_definition [392,495]"/>
  <match src="}: } [36618,36619]" dest="}: } [36618,36619]"/>
  <match src="binary_expression [107455,107500]" dest="binary_expression [107379,107424]"/>
  <match src="): ) [19312,19313]" dest="): ) [19312,19313]"/>
  <match src="identifier: _amount [95357,95364]" dest="identifier: _amount [94505,94512]"/>
  <match src="pragma: pragma [47555,47561]" dest="pragma: pragma [47557,47563]"/>
  <match src="=: = [70020,70021]" dest="=: = [69731,69732]"/>
  <match src="expression_statement [44682,44695]" dest="expression_statement [44684,44697]"/>
  <match src="identifier: a [7693,7694]" dest="identifier: a [7693,7694]"/>
  <match src=",: , [84140,84141]" dest=",: , [84669,84670]"/>
  <match src="call_argument [89899,89911]" dest="call_argument [91146,91158]"/>
  <match src="call_argument [101252,101268]" dest="call_argument [101203,101221]"/>
  <match src="primitive_type [103182,103189]" dest="primitive_type [103106,103113]"/>
  <match src="pragma_directive [47652,47683]" dest="pragma_directive [47654,47685]"/>
  <match src="call_expression [103686,103706]" dest="call_expression [103610,103630]"/>
  <match src="member_expression [71578,71593]" dest="member_expression [71289,71304]"/>
  <match src="function_definition [42773,42900]" dest="function_definition [42773,42900]"/>
  <match src="call_argument [102994,103012]" dest="call_argument [102918,102936]"/>
  <match src="binary_expression [23415,23436]" dest="binary_expression [23415,23436]"/>
  <match src="[: [ [94404,94405]" dest="[: [ [94050,94051]"/>
  <match src="assignment_expression [90326,90375]" dest="assignment_expression [91379,91448]"/>
  <match src="variable_declaration [73356,73396]" dest="variable_declaration [73121,73161]"/>
  <match src="): ) [56501,56502]" dest="): ) [56503,56504]"/>
  <match src="number_literal: 104994 [65486,65492]" dest="number_literal: 104994 [65496,65502]"/>
  <match src="uint256: uint256 [61431,61438]" dest="uint256: uint256 [61433,61440]"/>
  <match src="(: ( [68892,68893]" dest="(: ( [68603,68604]"/>
  <match src="number_literal: 2346 [68784,68788]" dest="number_literal: 2346 [68547,68551]"/>
  <match src="ternary_expression [61527,61581]" dest="ternary_expression [61529,61583]"/>
  <match src="string [60124,60159]" dest="string [60126,60161]"/>
  <match src="type_cast_expression [97890,97938]" dest="type_cast_expression [96655,96703]"/>
  <match src="internal: internal [11768,11776]" dest="internal: internal [11768,11776]"/>
  <match src="type_alias [20548,20555]" dest="type_alias [20548,20555]"/>
  <match src="parameter [40192,40199]" dest="parameter [40192,40199]"/>
  <match src="identifier: UserInfo [96364,96372]" dest="identifier: UserInfo [99934,99942]"/>
  <match src="type_name [77660,77667]" dest="type_name [77467,77474]"/>
  <match src="identifier: b [7304,7305]" dest="identifier: b [7304,7305]"/>
  <match src="if: if [86085,86087]" dest="if: if [87377,87379]"/>
  <match src="uint256: uint256 [27521,27528]" dest="uint256: uint256 [27521,27528]"/>
  <match src="expression_statement [82705,82744]" dest="expression_statement [83543,83582]"/>
  <match src="expression_statement [99990,100060]" dest="expression_statement [98695,98765]"/>
  <match src="identifier: _isFirstTokenEth [105036,105052]" dest="identifier: _isFirstTokenEth [104960,104976]"/>
  <match src="call_expression [59515,59582]" dest="call_expression [59517,59584]"/>
  <match src="identifier: owner [39530,39535]" dest="identifier: owner [39530,39535]"/>
  <match src="uint256: uint256 [96455,96462]" dest="uint256: uint256 [80202,80209]"/>
  <match src="&gt;: &gt; [100808,100809]" dest="&gt;: &gt; [100794,100795]"/>
  <match src="pragma_directive [1665,1696]" dest="pragma_directive [1665,1696]"/>
  <match src="number_literal: 0 [105598,105599]" dest="number_literal: 0 [105522,105523]"/>
  <match src="&gt;=:  &gt;= [23722,23725]" dest="&gt;=:  &gt;= [23722,23725]"/>
  <match src="identifier: startBlock [67537,67547]" dest="identifier: startBlock [67784,67794]"/>
  <match src="[: [ [94151,94152]" dest="[: [ [93797,93798]"/>
  <match src="parameter [51386,51403]" dest="parameter [51388,51405]"/>
  <match src=".: . [84230,84231]" dest=".: . [84759,84760]"/>
  <match src="&lt;=: &lt;= [38023,38025]" dest="&lt;=: &lt;= [38023,38025]"/>
  <match src="public: public [51421,51427]" dest="public: public [51423,51429]"/>
  <match src="if_statement [29316,29393]" dest="if_statement [29316,29393]"/>
  <match src="binary_expression [6578,6584]" dest="binary_expression [6578,6584]"/>
  <match src="binary_expression [29757,29773]" dest="binary_expression [29757,29773]"/>
  <match src="): ) [26029,26030]" dest="): ) [26029,26030]"/>
  <match src="identifier: to [20734,20736]" dest="identifier: to [20734,20736]"/>
  <match src="(: ( [33681,33682]" dest="(: ( [33681,33682]"/>
  <match src="identifier: l [28040,28041]" dest="identifier: l [28040,28041]"/>
  <match src="=: = [102562,102563]" dest="=: = [102486,102487]"/>
  <match src="identifier: updatePoolAccumulativeDividend [78140,78170]" dest="identifier: updatePoolAccumulativeDividend [77273,77303]"/>
  <match src="else: else [96257,96261]" dest="else: else [95567,95571]"/>
  <match src="visibility [55634,55642]" dest="visibility [55636,55644]"/>
  <match src="type_name [16748,16753]" dest="type_name [16748,16753]"/>
  <match src="pure: pure [28739,28743]" dest="pure: pure [28739,28743]"/>
  <match src="identifier: spender [39545,39552]" dest="identifier: spender [39545,39552]"/>
  <match src="identifier: mulDiv [36464,36470]" dest="identifier: mulDiv [36464,36470]"/>
  <match src="}: } [9557,9558]" dest="}: } [9557,9558]"/>
  <match src="identifier: r [30603,30604]" dest="identifier: r [30603,30604]"/>
  <match src="uint256: uint256 [82540,82547]" dest="uint256: uint256 [83378,83385]"/>
  <match src="&amp;: &amp; [31499,31500]" dest="&amp;: &amp; [31499,31500]"/>
  <match src="uint112: uint112 [34995,35002]" dest="uint112: uint112 [34995,35002]"/>
  <match src="(: ( [415,416]" dest="(: ( [415,416]"/>
  <match src="primitive_type [34445,34451]" dest="primitive_type [34445,34451]"/>
  <match src="parameter [44613,44625]" dest="parameter [44615,44627]"/>
  <match src="identifier: _pid [44621,44625]" dest="identifier: _pid [44623,44627]"/>
  <match src="identifier: inviteeToSubWeight [99840,99858]" dest="identifier: inviteeToSubWeight [98032,98050]"/>
  <match src="return_statement [35801,35832]" dest="return_statement [35801,35832]"/>
  <match src="boolean_literal [54263,54267]" dest="boolean_literal [54265,54269]"/>
  <match src="member_expression [106659,106678]" dest="member_expression [106583,106602]"/>
  <match src="identifier: i [95900,95901]" dest="identifier: i [95167,95168]"/>
  <match src="primitive_type [71803,71810]" dest="primitive_type [71514,71521]"/>
  <match src="string [57357,57393]" dest="string [57359,57395]"/>
  <match src=",: , [52754,52755]" dest=",: , [52756,52757]"/>
  <match src="binary_expression [69354,69376]" dest="binary_expression [69065,69087]"/>
  <match src="{: { [22245,22246]" dest="{: { [22245,22246]"/>
  <match src="identifier: RESOLUTION [33299,33309]" dest="identifier: RESOLUTION [33299,33309]"/>
  <match src="return_type_definition [6860,6883]" dest="return_type_definition [6860,6883]"/>
  <match src="): ) [47407,47408]" dest="): ) [47409,47410]"/>
  <match src="{: { [30892,30893]" dest="{: { [30892,30893]"/>
  <match src="state_mutability [31264,31268]" dest="state_mutability [31264,31268]"/>
  <match src="member_expression [107815,107844]" dest="member_expression [107739,107768]"/>
  <match src="identifier: token1 [104604,104610]" dest="identifier: token1 [104528,104534]"/>
  <match src=",: , [57482,57483]" dest=",: , [57484,57485]"/>
  <match src="number_literal: 1 [35455,35456]" dest="number_literal: 1 [35455,35456]"/>
  <match src=".: . [105265,105266]" dest=".: . [105189,105190]"/>
  <match src="identifier: spender [54041,54048]" dest="identifier: spender [54043,54050]"/>
  <match src="identifier: lastRewardBlock [69605,69620]" dest="identifier: lastRewardBlock [69316,69331]"/>
  <match src="function: function [24285,24293]" dest="function: function [24285,24293]"/>
  <match src="call_argument [26508,26509]" dest="call_argument [26508,26509]"/>
  <match src="string_literal [8880,8908]" dest="string_literal [8880,8908]"/>
  <match src="member_expression [80981,81000]" dest="member_expression [81668,81687]"/>
  <match src="(: ( [76008,76009]" dest="(: ( [75524,75525]"/>
  <match src="type_cast_expression [35324,35344]" dest="type_cast_expression [35324,35344]"/>
  <match src="(: ( [20911,20912]" dest="(: ( [20911,20912]"/>
  <match src="primitive_type [61935,61942]" dest="primitive_type [61937,61944]"/>
  <match src="binary_expression [29727,29736]" dest="binary_expression [29727,29736]"/>
  <match src="identifier: user [62114,62118]" dest="identifier: user [62116,62120]"/>
  <match src="for: for [63062,63065]" dest="for: for [63064,63067]"/>
  <match src="primitive_type [63368,63375]" dest="primitive_type [63370,63377]"/>
  <match src="identifier: newOwner [26932,26940]" dest="identifier: newOwner [26932,26940]"/>
  <match src="primitive_type [32852,32859]" dest="primitive_type [32852,32859]"/>
  <match src="(: ( [46932,46933]" dest="(: ( [46319,46320]"/>
  <match src="string_literal [54893,54932]" dest="string_literal [54895,54934]"/>
  <match src="): ) [37075,37076]" dest="): ) [37075,37076]"/>
  <match src="identifier: require [104821,104828]" dest="identifier: require [104745,104752]"/>
  <match src="): ) [60421,60422]" dest="): ) [60423,60424]"/>
  <match src="uint256: uint256 [5904,5911]" dest="uint256: uint256 [5904,5911]"/>
  <match src="primitive_type [40004,40011]" dest="primitive_type [40004,40011]"/>
  <match src="&gt;&gt;: &gt;&gt; [29645,29647]" dest="&gt;&gt;: &gt;&gt; [29645,29647]"/>
  <match src="identifier: checkAdmin [68940,68950]" dest="identifier: checkAdmin [68651,68661]"/>
  <match src="call_argument [22016,22023]" dest="call_argument [22016,22023]"/>
  <match src="variable_declaration_statement [74064,74150]" dest="variable_declaration_statement [73794,73881]"/>
  <match src="(: ( [38897,38898]" dest="(: ( [38897,38898]"/>
  <match src="=: = [105856,105857]" dest="=: = [105780,105781]"/>
  <match src="parameter [40433,40437]" dest="parameter [40433,40437]"/>
  <match src=",: , [54975,54976]" dest=",: , [54977,54978]"/>
  <match src="): ) [9526,9527]" dest="): ) [9526,9527]"/>
  <match src="bytes: bytes [19202,19207]" dest="bytes: bytes [19202,19207]"/>
  <match src="member_expression [87132,87148]" dest="member_expression [88289,88305]"/>
  <match src="}: } [14404,14405]" dest="}: } [14404,14405]"/>
  <match src="array_access [86222,86253]" dest="array_access [87510,87541]"/>
  <match src="identifier: block [80541,80546]" dest="identifier: block [81226,81231]"/>
  <match src="function: function [73713,73721]" dest="function: function [73478,73486]"/>
  <match src="variable_declaration_statement [87648,87708]" dest="variable_declaration_statement [88809,88869]"/>
  <match src="): ) [27391,27392]" dest="): ) [27391,27392]"/>
  <match src="): ) [27233,27234]" dest="): ) [27233,27234]"/>
  <match src="function_definition [66993,68082]" dest="function_definition [67246,68575]"/>
  <match src="(: ( [23556,23557]" dest="(: ( [23556,23557]"/>
  <match src="identifier: oldVotes [62675,62683]" dest="identifier: oldVotes [62677,62685]"/>
  <match src="state_mutability [7254,7258]" dest="state_mutability [7254,7258]"/>
  <match src="address: address [104519,104526]" dest="address: address [104443,104450]"/>
  <match src="[: [ [60886,60887]" dest="[: [ [60888,60889]"/>
  <match src="if: if [87567,87569]" dest="if: if [88728,88730]"/>
  <match src=",: , [68275,68276]" dest=",: , [68354,68355]"/>
  <match src="expression_statement [30850,30857]" dest="expression_statement [30850,30857]"/>
  <match src="contract: contract [1071,1079]" dest="contract: contract [1071,1079]"/>
  <match src="number_literal: 0 [56696,56697]" dest="number_literal: 0 [56698,56699]"/>
  <match src="(: ( [15725,15726]" dest="(: ( [15725,15726]"/>
  <match src="identifier: userWeight [83074,83084]" dest="identifier: userWeight [83853,83863]"/>
  <match src="variable_declaration [42233,42251]" dest="variable_declaration [42233,42251]"/>
  <match src="): ) [90024,90025]" dest="): ) [91338,91339]"/>
  <match src="call_expression [98206,98279]" dest="call_expression [96971,97044]"/>
  <match src="comment: // solhint-disable-next-line avoid-low-level-calls [17946,17996]" dest="comment: // solhint-disable-next-line avoid-low-level-calls [17946,17996]"/>
  <match src="): ) [35182,35183]" dest="): ) [35182,35183]"/>
  <match src="identifier: newBalance [59329,59339]" dest="identifier: newBalance [59331,59341]"/>
  <match src="call_expression [93146,93170]" dest="call_expression [92794,92818]"/>
  <match src="type_name [58562,58569]" dest="type_name [58564,58571]"/>
  <match src="{: { [22951,22952]" dest="{: { [22951,22952]"/>
  <match src="&lt;=: &lt;= [93346,93348]" dest="&lt;=: &lt;= [92994,92996]"/>
  <match src="): ) [109154,109155]" dest="): ) [109078,109079]"/>
  <match src="type_name [7234,7241]" dest="type_name [7234,7241]"/>
  <match src="comment: /**      * @dev Emitted when the allowance of a `spender` for an `owner` is set by      * a call to {approve}. `value` is the new allowance.      */ [4171,4322]" dest="comment: /**      * @dev Emitted when the allowance of a `spender` for an `owner` is set by      * a call to {approve}. `value` is the new allowance.      */ [4171,4322]"/>
  <match src="identifier: poolReward [79147,79157]" dest="identifier: poolReward [79310,79320]"/>
  <match src="member_expression [55817,55833]" dest="member_expression [55819,55835]"/>
  <match src="parameter [40741,40756]" dest="parameter [40741,40756]"/>
  <match src="call_expression [31298,31350]" dest="call_expression [31298,31350]"/>
  <match src="&lt;:  &lt; [11958,11960]" dest="&lt;:  &lt; [11958,11960]"/>
  <match src="expression_statement [45672,45713]" dest="expression_statement [45674,45715]"/>
  <match src="uint256: uint256 [74169,74176]" dest="uint256: uint256 [73900,73907]"/>
  <match src="if_statement [61737,62044]" dest="if_statement [61739,62046]"/>
  <match src="comment: // s.t. (x &amp; 2**lsb) != 0 and (x &amp; (2**(lsb) - 1)) == 0) [31076,31132]" dest="comment: // s.t. (x &amp; 2**lsb) != 0 and (x &amp; (2**(lsb) - 1)) == 0) [31076,31132]"/>
  <match src="assignment_expression [46547,46575]" dest="assignment_expression [46789,46817]"/>
  <match src="constant: constant [65750,65758]" dest="constant: constant [65760,65768]"/>
  <match src="): ) [75908,75909]" dest="): ) [75424,75425]"/>
  <match src=".: . [89996,89997]" dest=".: . [91281,91282]"/>
  <match src="=: = [101974,101975]" dest="=: = [99885,99886]"/>
  <match src="=: = [97048,97049]" dest="=: = [95813,95814]"/>
  <match src="primitive_type [75089,75096]" dest="primitive_type [73521,73528]"/>
  <match src=",: , [17011,17012]" dest=",: , [17011,17012]"/>
  <match src="}: } [104397,104398]" dest="}: } [104321,104322]"/>
  <match src="call_argument [84090,84106]" dest="call_argument [84619,84635]"/>
  <match src="(: ( [33204,33205]" dest="(: ( [33204,33205]"/>
  <match src="identifier: errorMessage [10926,10938]" dest="identifier: errorMessage [10926,10938]"/>
  <match src="assignment_expression [45367,45411]" dest="assignment_expression [45369,45413]"/>
  <match src="true: true [59546,59550]" dest="true: true [59548,59552]"/>
  <match src="}: } [108310,108311]" dest="}: } [108234,108235]"/>
  <match src="identifier: nftPoolId [63499,63508]" dest="identifier: nftPoolId [63501,63510]"/>
  <match src="uint256: uint256 [46019,46026]" dest="uint256: uint256 [46021,46028]"/>
  <match src="call_expression [15271,15331]" dest="call_expression [15271,15331]"/>
  <match src="identifier: from [39245,39249]" dest="identifier: from [39245,39249]"/>
  <match src="returns: returns [95317,95324]" dest="returns: returns [94465,94472]"/>
  <match src="primitive_type [39161,39168]" dest="primitive_type [39161,39168]"/>
  <match src="return_statement [77167,77174]" dest="return_statement [77952,77959]"/>
  <match src="address: address [23331,23338]" dest="address: address [23331,23338]"/>
  <match src="(: ( [83504,83505]" dest="(: ( [84369,84370]"/>
  <match src=",: , [93737,93738]" dest=",: , [93391,93392]"/>
  <match src="(: ( [77225,77226]" dest="(: ( [76665,76666]"/>
  <match src="call_argument [56400,56401]" dest="call_argument [56402,56403]"/>
  <match src="string [47463,47483]" dest="string [47465,47485]"/>
  <match src="function: function [58532,58540]" dest="function: function [58534,58542]"/>
  <match src="public: public [43841,43847]" dest="public: public [43841,43847]"/>
  <match src="identifier: spender [22212,22219]" dest="identifier: spender [22212,22219]"/>
  <match src="identifier: wantTokenReserve [97500,97516]" dest="identifier: wantTokenReserve [96265,96281]"/>
  <match src="address: address [40646,40653]" dest="address: address [40646,40653]"/>
  <match src="call_argument [45330,45345]" dest="call_argument [45332,45347]"/>
  <match src="else: else [31552,31556]" dest="else: else [31552,31556]"/>
  <match src="type_name [104436,104450]" dest="type_name [104360,104374]"/>
  <match src="variable_declaration_statement [61831,61917]" dest="variable_declaration_statement [61833,61919]"/>
  <match src="pragma_directive [58668,58691]" dest="pragma_directive [58670,58693]"/>
  <match src="type_name [73252,73259]" dest="type_name [73017,73024]"/>
  <match src=",: , [36774,36775]" dest=",: , [36774,36775]"/>
  <match src="variable_declaration [12919,12931]" dest="variable_declaration [12919,12931]"/>
  <match src="public: public [26430,26436]" dest="public: public [26430,26436]"/>
  <match src="int256: int256 [34433,34439]" dest="int256: int256 [34433,34439]"/>
  <match src="type_name [63581,63588]" dest="type_name [63583,63590]"/>
  <match src="identifier: to [61892,61894]" dest="identifier: to [61894,61896]"/>
  <match src="identifier: shdPool [108513,108520]" dest="identifier: shdPool [108437,108444]"/>
  <match src="visibility [39469,39477]" dest="visibility [39469,39477]"/>
  <match src="array_access [60562,60585]" dest="array_access [60564,60587]"/>
  <match src="[: [ [95875,95876]" dest="[: [ [95201,95202]"/>
  <match src="=: = [79057,79058]" dest="=: = [78846,78847]"/>
  <match src="event: event [66657,66662]" dest="event: event [66910,66915]"/>
  <match src="(: ( [47275,47276]" dest="(: ( [47277,47278]"/>
  <match src="number_literal: 10 [65112,65114]" dest="number_literal: 10 [65122,65124]"/>
  <match src=",: , [103025,103026]" dest=",: , [102949,102950]"/>
  <match src="(: ( [31277,31278]" dest="(: ( [31277,31278]"/>
  <match src="): ) [42116,42117]" dest="): ) [42116,42117]"/>
  <match src="identifier: currentPoolCountInRank [87581,87603]" dest="identifier: currentPoolCountInRank [88742,88764]"/>
  <match src="call_argument [103540,103545]" dest="call_argument [103464,103469]"/>
  <match src="]: ] [88850,88851]" dest="]: ] [89698,89699]"/>
  <match src="identifier: require [85490,85497]" dest="identifier: require [86790,86797]"/>
  <match src="struct_member [64313,64357]" dest="struct_member [64315,64359]"/>
  <match src="=: = [90551,90552]" dest="=: = [91576,91577]"/>
  <match src="&gt;=:  &gt;= [27028,27031]" dest="&gt;=:  &gt;= [27028,27031]"/>
  <match src="): ) [97338,97339]" dest="): ) [96103,96104]"/>
  <match src="identifier: target [15196,15202]" dest="identifier: target [15196,15202]"/>
  <match src="string [69401,69417]" dest="string [69112,69128]"/>
  <match src="primitive_type [88559,88566]" dest="primitive_type [89407,89414]"/>
  <match src="member_expression [42405,42424]" dest="member_expression [42405,42424]"/>
  <match src="(: ( [16780,16781]" dest="(: ( [16780,16781]"/>
  <match src="/: / [8236,8237]" dest="/: / [8236,8237]"/>
  <match src="{: { [67458,67459]" dest="{: { [67705,67706]"/>
  <match src="primitive_type [39678,39682]" dest="primitive_type [39678,39682]"/>
  <match src="identifier: amount [66532,66538]" dest="identifier: amount [66785,66791]"/>
  <match src="identifier: accumulativeDividend [74691,74711]" dest="identifier: accumulativeDividend [74443,74463]"/>
  <match src="call_argument [28105,28106]" dest="call_argument [28105,28106]"/>
  <match src="type_name [2692,2699]" dest="type_name [2692,2699]"/>
  <match src="expression_statement [74971,75001]" dest="expression_statement [74843,74924]"/>
  <match src="identifier: _x [34790,34792]" dest="identifier: _x [34790,34792]"/>
  <match src="number_literal: 0 [5692,5693]" dest="number_literal: 0 [5692,5693]"/>
  <match src="visibility [20842,20850]" dest="visibility [20842,20850]"/>
  <match src="call_argument [90583,90587]" dest="call_argument [91608,91612]"/>
  <match src="call_argument [55834,55840]" dest="call_argument [55836,55842]"/>
  <match src="(: ( [29664,29665]" dest="(: ( [29664,29665]"/>
  <match src="primitive_type [63268,63275]" dest="primitive_type [63270,63277]"/>
  <match src="call_argument [18874,18892]" dest="call_argument [18874,18892]"/>
  <match src="): ) [30811,30812]" dest="): ) [30811,30812]"/>
  <match src="identifier: _pid [44726,44730]" dest="identifier: _pid [44728,44732]"/>
  <match src="comment: // First check most recent balance [60310,60344]" dest="comment: // First check most recent balance [60312,60346]"/>
  <match src="identifier: recentlyRewardBlock [77432,77451]" dest="identifier: recentlyRewardBlock [76872,76891]"/>
  <match src="identifier: div [46766,46769]" dest="identifier: div [47008,47011]"/>
  <match src="(: ( [104692,104693]" dest="(: ( [104616,104617]"/>
  <match src="library: library [12041,12048]" dest="library: library [12041,12048]"/>
  <match src="call_argument [107794,107862]" dest="call_argument [107718,107786]"/>
  <match src="expression_statement [29435,29444]" dest="expression_statement [29435,29444]"/>
  <match src="parameter [73082,73094]" dest="parameter [72847,72859]"/>
  <match src="primitive_type [97449,97456]" dest="primitive_type [96214,96221]"/>
  <match src="number_literal: 0x10 [30807,30811]" dest="number_literal: 0x10 [30807,30811]"/>
  <match src="[: [ [46701,46702]" dest="[: [ [46943,46944]"/>
  <match src="primitive_type [98449,98456]" dest="primitive_type [98853,98860]"/>
  <match src="function_body [87315,87991]" dest="function_body [88476,89152]"/>
  <match src="=: = [102509,102510]" dest="=: = [102433,102434]"/>
  <match src="): ) [36013,36014]" dest="): ) [36013,36014]"/>
  <match src="if_statement [32026,32116]" dest="if_statement [32026,32116]"/>
  <match src="identifier: updatePoolAccumulativeDividend [76716,76746]" dest="identifier: updatePoolAccumulativeDividend [76232,76262]"/>
  <match src="member_expression [90354,90374]" dest="member_expression [91427,91447]"/>
  <match src="comment: // SHDToken with Governance. [58705,58733]" dest="comment: // SHDToken with Governance. [58707,58735]"/>
  <match src="primitive_type [10050,10057]" dest="primitive_type [10050,10057]"/>
  <match src="(: ( [94351,94352]" dest="(: ( [93997,93998]"/>
  <match src="augmented_assignment_expression [31681,31689]" dest="augmented_assignment_expression [31681,31689]"/>
  <match src="(: ( [47100,47101]" dest="(: ( [46487,46488]"/>
  <match src="identifier: startBlock [45637,45647]" dest="identifier: startBlock [45639,45649]"/>
  <match src="identifier: _callOptionalReturn [20659,20678]" dest="identifier: _callOptionalReturn [20659,20678]"/>
  <match src="address: address [54800,54807]" dest="address: address [54802,54809]"/>
  <match src="): ) [105822,105823]" dest="): ) [105746,105747]"/>
  <match src="binary_expression [60736,60749]" dest="binary_expression [60738,60751]"/>
  <match src="binary_expression [28215,28220]" dest="binary_expression [28215,28220]"/>
  <match src="variable_declaration [103620,103629]" dest="variable_declaration [103544,103553]"/>
  <match src="primitive_type [97890,97897]" dest="primitive_type [96655,96662]"/>
  <match src="=: = [84179,84180]" dest="=: = [84708,84709]"/>
  <match src="return_statement [89647,89668]" dest="return_statement [90889,90910]"/>
  <match src="identifier: _user [89480,89485]" dest="identifier: _user [90722,90727]"/>
  <match src="uint256: uint256 [66524,66531]" dest="uint256: uint256 [66777,66784]"/>
  <match src="member_expression [100643,100662]" dest="member_expression [100219,100238]"/>
  <match src="): ) [46460,46461]" dest="): ) [46702,46703]"/>
  <match src="identifier: _devDividendWeight [44258,44276]" dest="identifier: _devDividendWeight [44260,44278]"/>
  <match src="primitive_type [94730,94737]" dest="primitive_type [97214,97221]"/>
  <match src="uint256: uint256 [98945,98952]" dest="uint256: uint256 [99130,99137]"/>
  <match src="!=: != [57342,57344]" dest="!=: != [57344,57346]"/>
  <match src="type_name [63676,63683]" dest="type_name [63678,63685]"/>
  <match src="): ) [19471,19472]" dest="): ) [19471,19472]"/>
  <match src="state_variable_declaration [66016,66053]" dest="state_variable_declaration [66028,66067]"/>
  <match src="identifier: _feeRateNumerator [44811,44828]" dest="identifier: _feeRateNumerator [44813,44830]"/>
  <match src="(: ( [22909,22910]" dest="(: ( [22909,22910]"/>
  <match src="return_statement [15697,15757]" dest="return_statement [15697,15757]"/>
  <match src="uint256: uint256 [46134,46141]" dest="uint256: uint256 [46136,46143]"/>
  <match src="primitive_type [27291,27298]" dest="primitive_type [27291,27298]"/>
  <match src="}: } [102736,102737]" dest="}: } [102660,102661]"/>
  <match src="): ) [90524,90525]" dest="): ) [91549,91550]"/>
  <match src="=: = [45449,45450]" dest="=: = [45451,45452]"/>
  <match src="(: ( [17363,17364]" dest="(: ( [17363,17364]"/>
  <match src="return: return [90941,90947]" dest="return: return [91966,91972]"/>
  <match src="block_statement [104251,104362]" dest="block_statement [104175,104286]"/>
  <match src="=: = [61504,61505]" dest="=: = [61506,61507]"/>
  <match src="comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP.  */ [1700,1772]" dest="comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP.  */ [1700,1772]"/>
  <match src="binary_expression [38015,38037]" dest="binary_expression [38015,38037]"/>
  <match src="function_definition [57153,57499]" dest="function_definition [57155,57501]"/>
  <match src="type_name [27258,27265]" dest="type_name [27258,27265]"/>
  <match src="primitive_type [103106,103110]" dest="primitive_type [103030,103034]"/>
  <match src="variable_declaration [105991,106007]" dest="variable_declaration [105915,105931]"/>
  <match src="type_name [93932,93941]" dest="type_name [93578,93587]"/>
  <match src="identifier: blockTimestamp [41717,41731]" dest="identifier: blockTimestamp [41717,41731]"/>
  <match src="call_argument [87700,87706]" dest="call_argument [88861,88867]"/>
  <match src="identifier: _endBlock [95488,95497]" dest="identifier: _endBlock [94636,94645]"/>
  <match src=".: . [83237,83238]" dest=".: . [90416,90417]"/>
  <match src="binary_expression [96182,96200]" dest="binary_expression [95492,95510]"/>
  <match src="expression_statement [41768,41831]" dest="expression_statement [41768,41831]"/>
  <match src="comment: // produced blocks per day [65217,65243]" dest="comment: // produced blocks per day [65227,65253]"/>
  <match src=",: , [105227,105228]" dest=",: , [105151,105152]"/>
  <match src="if_statement [31926,32016]" dest="if_statement [31926,32016]"/>
  <match src="function_body [36838,37458]" dest="function_body [36838,37458]"/>
  <match src="number_literal: 20 [43298,43300]" dest="number_literal: 20 [43298,43300]"/>
  <match src="identifier: mul [46400,46403]" dest="identifier: mul [46642,46645]"/>
  <match src="identifier: Deposit [82308,82315]" dest="identifier: Deposit [83146,83153]"/>
  <match src="type_name [35950,35959]" dest="type_name [35950,35959]"/>
  <match src="call_expression [84181,84211]" dest="call_expression [84710,84740]"/>
  <match src="}: } [73241,73242]" dest="}: } [73006,73007]"/>
  <match src="call_struct_argument [71305,71328]" dest="call_struct_argument [71016,71039]"/>
  <match src="parameter [7696,7705]" dest="parameter [7696,7705]"/>
  <match src="type_name [2383,2387]" dest="type_name [2383,2387]"/>
  <match src="call_argument [96235,96243]" dest="call_argument [95545,95553]"/>
  <match src="identifier: uq144x112 [32573,32582]" dest="identifier: uq144x112 [32573,32582]"/>
  <match src="call_expression [45795,45807]" dest="call_expression [45797,45809]"/>
  <match src="{: { [29503,29504]" dest="{: { [29503,29504]"/>
  <match src="internal: internal [8124,8132]" dest="internal: internal [8124,8132]"/>
  <match src="&gt;: &gt; [87364,87365]" dest="&gt;: &gt; [88525,88526]"/>
  <match src="(: ( [84089,84090]" dest="(: ( [84618,84619]"/>
  <match src="identifier: newOwner [26793,26801]" dest="identifier: newOwner [26793,26801]"/>
  <match src="external: external [73096,73104]" dest="external: external [72861,72869]"/>
  <match src=",: , [81047,81048]" dest=",: , [81734,81735]"/>
  <match src="binary_expression [44932,44972]" dest="binary_expression [44934,44974]"/>
  <match src="}: } [7388,7389]" dest="}: } [7388,7389]"/>
  <match src="&quot;: &quot; [44310,44311]" dest="&quot;: &quot; [44312,44313]"/>
  <match src="identifier: self [34011,34015]" dest="identifier: self [34011,34015]"/>
  <match src="number_literal: 2189 [68537,68541]" dest="number_literal: 2189 [68451,68455]"/>
  <match src="(: ( [60921,60922]" dest="(: ( [60923,60924]"/>
  <match src="identifier: isFirstTokenShard [70385,70402]" dest="identifier: isFirstTokenShard [70096,70113]"/>
  <match src="string_literal [56404,56439]" dest="string_literal [56406,56441]"/>
  <match src="identifier: isCalculateInvitation [63400,63421]" dest="identifier: isCalculateInvitation [63402,63423]"/>
  <match src="return: return [104774,104780]" dest="return: return [104698,104704]"/>
  <match src="return_statement [18444,18529]" dest="return_statement [18444,18529]"/>
  <match src="type_name [18841,18846]" dest="type_name [18841,18846]"/>
  <match src="&gt;=:  &gt;= [47570,47573]" dest="&gt;=:  &gt;= [47572,47575]"/>
  <match src="(: ( [79195,79196]" dest="(: ( [79350,79351]"/>
  <match src="external: external [40286,40294]" dest="external: external [40286,40294]"/>
  <match src="call_argument [36595,36610]" dest="call_argument [36595,36610]"/>
  <match src="primitive_type [103222,103229]" dest="primitive_type [103146,103153]"/>
  <match src="override_specifier [51084,51092]" dest="override_specifier [51086,51094]"/>
  <match src="): ) [69716,69717]" dest="): ) [69427,69428]"/>
  <match src="identifier: require [18866,18873]" dest="identifier: require [18866,18873]"/>
  <match src="primitive_type [38305,38312]" dest="primitive_type [38305,38312]"/>
  <match src="*: * [42577,42578]" dest="*: * [42577,42578]"/>
  <match src="member_expression [84251,84268]" dest="member_expression [84780,84797]"/>
  <match src="primitive_type [109074,109079]" dest="primitive_type [108998,109003]"/>
  <match src="primitive_type [17422,17427]" dest="primitive_type [17422,17427]"/>
  <match src="identifier: IUniswapV2Pair [69242,69256]" dest="identifier: IUniswapV2Pair [68953,68967]"/>
  <match src="call_argument [55949,55955]" dest="call_argument [55951,55957]"/>
  <match src="identifier: add [74798,74801]" dest="identifier: add [74498,74501]"/>
  <match src="uint: uint [39841,39845]" dest="uint: uint [39841,39845]"/>
  <match src="): ) [90549,90550]" dest="): ) [91574,91575]"/>
  <match src="binary_expression [29731,29736]" dest="binary_expression [29731,29736]"/>
  <match src="): ) [93948,93949]" dest="): ) [93594,93595]"/>
  <match src="): ) [61756,61757]" dest="): ) [61758,61759]"/>
  <match src="augmented_assignment_expression [30929,30935]" dest="augmented_assignment_expression [30929,30935]"/>
  <match src="returns: returns [5300,5307]" dest="returns: returns [5300,5307]"/>
  <match src="variable_declaration_statement [80302,80353]" dest="variable_declaration_statement [80922,80973]"/>
  <match src="parameter [17841,17853]" dest="parameter [17841,17853]"/>
  <match src="member_expression [19450,19467]" dest="member_expression [19450,19467]"/>
  <match src="expression_statement [97703,97759]" dest="expression_statement [96468,96524]"/>
  <match src="string [14131,14162]" dest="string [14131,14162]"/>
  <match src=",: , [80773,80774]" dest=",: , [81460,81461]"/>
  <match src="primitive_type [60036,60043]" dest="primitive_type [60038,60045]"/>
  <match src="number_literal: 0 [89701,89702]" dest="number_literal: 0 [90943,90944]"/>
  <match src="uint256: uint256 [65249,65256]" dest="uint256: uint256 [65259,65266]"/>
  <match src="variable_declaration_statement [98521,98611]" dest="variable_declaration_statement [97286,97376]"/>
  <match src=".: . [102515,102516]" dest=".: . [102439,102440]"/>
  <match src=".: . [37658,37659]" dest=".: . [37658,37659]"/>
  <match src="comment: /**      * @dev See {IERC20-allowance}.      */ [51551,51600]" dest="comment: /**      * @dev See {IERC20-allowance}.      */ [51553,51602]"/>
  <match src="block_statement [31447,31483]" dest="block_statement [31447,31483]"/>
  <match src="parenthesized_expression [29919,29936]" dest="parenthesized_expression [29919,29936]"/>
  <match src="): ) [107862,107863]" dest="): ) [107786,107787]"/>
  <match src="identifier: x [31790,31791]" dest="identifier: x [31790,31791]"/>
  <match src="struct_member [63620,63645]" dest="struct_member [63622,63647]"/>
  <match src="parenthesized_expression [33986,34003]" dest="parenthesized_expression [33986,34003]"/>
  <match src="=: = [67840,67841]" dest="=: = [68092,68093]"/>
  <match src="type_name [35220,35227]" dest="type_name [35220,35227]"/>
  <match src="variable_declaration_statement [103728,103799]" dest="variable_declaration_statement [103652,103723]"/>
  <match src="member_expression [47012,47033]" dest="member_expression [46399,46420]"/>
  <match src="&lt;&lt;=: &lt;&lt;= [29460,29463]" dest="&lt;&lt;=: &lt;&lt;= [29460,29463]"/>
  <match src="(: ( [59598,59599]" dest="(: ( [59600,59601]"/>
  <match src="): ) [98660,98661]" dest="): ) [97425,97426]"/>
  <match src="type_name [61257,61264]" dest="type_name [61259,61266]"/>
  <match src=".: . [37828,37829]" dest=".: . [37828,37829]"/>
  <match src="(: ( [35996,35997]" dest="(: ( [35996,35997]"/>
  <match src="identifier: RESOLUTION [32642,32652]" dest="identifier: RESOLUTION [32642,32652]"/>
  <match src="variable_declaration_statement [38145,38209]" dest="variable_declaration_statement [38145,38209]"/>
  <match src=",: , [68389,68390]" dest=",: , [68384,68385]"/>
  <match src="expression_statement [46547,46576]" dest="expression_statement [46789,46818]"/>
  <match src="(: ( [45750,45751]" dest="(: ( [45752,45753]"/>
  <match src="type_name [72244,72251]" dest="type_name [71933,71940]"/>
  <match src=",: , [18774,18775]" dest=",: , [18774,18775]"/>
  <match src="]: ] [51146,51147]" dest="]: ] [51148,51149]"/>
  <match src="returns: returns [40300,40307]" dest="returns: returns [40300,40307]"/>
  <match src="call_argument [106442,106466]" dest="call_argument [106366,106390]"/>
  <match src="identifier: _originWeight [95045,95058]" dest="identifier: newOriginWeight [82603,82618]"/>
  <match src="number_literal: 32 [30586,30588]" dest="number_literal: 32 [30586,30588]"/>
  <match src="call_expression [107794,107862]" dest="call_expression [107718,107786]"/>
  <match src="expression_statement [72074,72107]" dest="expression_statement [71627,71660]"/>
  <match src="number_literal: 255 [34372,34375]" dest="number_literal: 255 [34372,34375]"/>
  <match src="}: } [68081,68082]" dest="}: } [68574,68575]"/>
  <match src="{: { [30377,30378]" dest="{: { [30377,30378]"/>
  <match src="augmented_assignment_expression [29435,29443]" dest="augmented_assignment_expression [29435,29443]"/>
  <match src="if: if [104645,104647]" dest="if: if [104569,104571]"/>
  <match src="call_argument [76800,76815]" dest="call_argument [76316,76331]"/>
  <match src="library: library [27172,27179]" dest="library: library [27172,27179]"/>
  <match src=",: , [42561,42562]" dest=",: , [42561,42562]"/>
  <match src="primitive_type [6548,6552]" dest="primitive_type [6548,6552]"/>
  <match src="identifier: pow2 [27549,27553]" dest="identifier: pow2 [27549,27553]"/>
  <match src="member_expression [47084,47100]" dest="member_expression [46471,46487]"/>
  <match src="primitive_type [6875,6882]" dest="primitive_type [6875,6882]"/>
  <match src="type_name [89020,89027]" dest="type_name [89868,89875]"/>
  <match src="uint256: uint256 [66230,66237]" dest="uint256: uint256 [66250,66257]"/>
  <match src="string_literal [23365,23399]" dest="string_literal [23365,23399]"/>
  <match src="primitive_type [64131,64138]" dest="primitive_type [64133,64140]"/>
  <match src="type_name [66681,66688]" dest="type_name [66934,66941]"/>
  <match src="{: { [93950,93951]" dest="{: { [93596,93597]"/>
  <match src="(: ( [38304,38305]" dest="(: ( [38304,38305]"/>
  <match src="parenthesized_expression [29664,29675]" dest="parenthesized_expression [29664,29675]"/>
  <match src="}: } [53502,53503]" dest="}: } [53504,53505]"/>
  <match src="comment: /**      * @dev Hook that is called before any transfer of tokens. This includes      * minting and burning.      *      * Calling conditions:      *      * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens      * will be to transferred to `to`.      * - when `from` is zero, `amount` tokens will be minted for `to`.      * - when `to` is zero, `amount` of ``from``'s tokens will be burned.      * - `from` and `to` are never both zero.      *      * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].      */ [57937,58526]" dest="comment: /**      * @dev Hook that is called before any transfer of tokens. This includes      * minting and burning.      *      * Calling conditions:      *      * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens      * will be to transferred to `to`.      * - when `from` is zero, `amount` tokens will be minted for `to`.      * - when `to` is zero, `amount` of ``from``'s tokens will be burned.      * - `from` and `to` are never both zero.      *      * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].      */ [57939,58528]"/>
  <match src="}: } [30706,30707]" dest="}: } [30706,30707]"/>
  <match src=",: , [28220,28221]" dest=",: , [28220,28221]"/>
  <match src="identifier: amount [54827,54833]" dest="identifier: amount [54829,54835]"/>
  <match src="): ) [98045,98046]" dest="): ) [96810,96811]"/>
  <match src="function_body [59772,59813]" dest="function_body [59774,59815]"/>
  <match src="user_defined_type [64899,64907]" dest="user_defined_type [64907,64915]"/>
  <match src="}: } [71767,71768]" dest="}: } [71478,71479]"/>
  <match src=",: , [71419,71420]" dest=",: , [71130,71131]"/>
  <match src="member_expression [38289,38304]" dest="member_expression [38289,38304]"/>
  <match src="(: ( [103854,103855]" dest="(: ( [103778,103779]"/>
  <match src="[: [ [93208,93209]" dest="[: [ [92856,92857]"/>
  <match src="identifier: _pending [88520,88528]" dest="identifier: _pending [89368,89376]"/>
  <match src="binary_expression [38167,38208]" dest="binary_expression [38167,38208]"/>
  <match src="function_body [12717,13073]" dest="function_body [12717,13073]"/>
  <match src="function_definition [39307,39367]" dest="function_definition [39307,39367]"/>
  <match src="call_argument [93733,93737]" dest="call_argument [93387,93391]"/>
  <match src="): ) [51512,51513]" dest="): ) [51514,51515]"/>
  <match src="parenthesized_expression [100792,100842]" dest="parenthesized_expression [100777,100828]"/>
  <match src="identifier: pid [66825,66828]" dest="identifier: pid [67078,67081]"/>
  <match src="parameter [79827,79844]" dest="parameter [80412,80429]"/>
  <match src="bytes: bytes [18776,18781]" dest="bytes: bytes [18776,18781]"/>
  <match src="(: ( [70777,70778]" dest="(: ( [70488,70489]"/>
  <match src="{: { [68929,68930]" dest="{: { [68640,68641]"/>
  <match src="identifier: numerator [37283,37292]" dest="identifier: numerator [37283,37292]"/>
  <match src="primitive_type [93282,93289]" dest="primitive_type [92930,92937]"/>
  <match src="bytes: bytes [109074,109079]" dest="bytes: bytes [108998,109003]"/>
  <match src="]: ] [99571,99572]" dest="]: ] [97661,97662]"/>
  <match src="function: function [108319,108327]" dest="function: function [108243,108251]"/>
  <match src=",: , [66961,66962]" dest=",: , [67214,67215]"/>
  <match src="=: = [41732,41733]" dest="=: = [41732,41733]"/>
  <match src="-: - [74330,74331]" dest="-: - [74149,74150]"/>
  <match src="uint256: uint256 [27653,27660]" dest="uint256: uint256 [27653,27660]"/>
  <match src="primitive_type [28011,28018]" dest="primitive_type [28011,28018]"/>
  <match src="(: ( [97248,97249]" dest="(: ( [96013,96014]"/>
  <match src="member_expression [74714,74801]" dest="member_expression [74466,74501]"/>
  <match src="(: ( [27384,27385]" dest="(: ( [27384,27385]"/>
  <match src="): ) [97261,97262]" dest="): ) [96026,96027]"/>
  <match src="identifier: tokenToEthPairInfo [97645,97663]" dest="identifier: tokenToEthPairInfo [96410,96428]"/>
  <match src="&quot;: &quot; [67293,67294]" dest="&quot;: &quot; [67540,67541]"/>
  <match src="&gt;: &gt; [45588,45589]" dest="&gt;: &gt; [45590,45591]"/>
  <match src="member_expression [79465,79488]" dest="member_expression [79620,79643]"/>
  <match src="string [18486,18527]" dest="string [18486,18527]"/>
  <match src="(: ( [100662,100663]" dest="(: ( [100238,100239]"/>
  <match src="uint256: uint256 [27258,27265]" dest="uint256: uint256 [27258,27265]"/>
  <match src="identifier: user [84055,84059]" dest="identifier: user [84584,84588]"/>
  <match src="expression_statement [81835,81972]" dest="expression_statement [82667,82804]"/>
  <match src="block_statement [61094,61147]" dest="block_statement [61096,61149]"/>
  <match src="primitive_type [96397,96404]" dest="primitive_type [85101,85108]"/>
  <match src="returns: returns [33049,33056]" dest="returns: returns [33049,33056]"/>
  <match src="return_statement [5677,5695]" dest="return_statement [5677,5695]"/>
  <match src="uint256: uint256 [85781,85788]" dest="uint256: uint256 [87081,87088]"/>
  <match src="identifier: WETHToken [70749,70758]" dest="identifier: WETHToken [70460,70469]"/>
  <match src="primitive_type [73082,73089]" dest="primitive_type [72847,72854]"/>
  <match src="): ) [69539,69540]" dest="): ) [69250,69251]"/>
  <match src="number_literal: 0 [72089,72090]" dest="number_literal: 0 [71642,71643]"/>
  <match src="): ) [90048,90049]" dest="): ) [90349,90350]"/>
  <match src="visibility [10100,10108]" dest="visibility [10100,10108]"/>
  <match src="member_expression [98206,98332]" dest="member_expression [96971,97097]"/>
  <match src=",: , [69749,69750]" dest=",: , [69460,69461]"/>
  <match src=",: , [20799,20800]" dest=",: , [20799,20800]"/>
  <match src="visibility [40410,40418]" dest="visibility [40410,40418]"/>
  <match src="=&gt;: =&gt; [59061,59063]" dest="=&gt;: =&gt; [59063,59065]"/>
  <match src="}: } [47494,47495]" dest="}: } [47496,47497]"/>
  <match src="return_statement [6935,6956]" dest="return_statement [6935,6956]"/>
  <match src="type_name [21896,21902]" dest="type_name [21896,21902]"/>
  <match src="identifier: account [60221,60228]" dest="identifier: account [60223,60230]"/>
  <match src="[: [ [80340,80341]" dest="[: [ [80960,80961]"/>
  <match src="true: true [5713,5717]" dest="true: true [5713,5717]"/>
  <match src="function: function [24399,24407]" dest="function: function [24399,24407]"/>
  <match src="parameter [95220,95242]" dest="parameter [94368,94390]"/>
  <match src="identifier: decode [33413,33419]" dest="identifier: decode [33413,33419]"/>
  <match src="call_expression [16873,16891]" dest="call_expression [16873,16891]"/>
  <match src="binary_expression [5719,5724]" dest="binary_expression [5719,5724]"/>
  <match src="identifier: accumulativeDividend [83323,83343]" dest="identifier: accumulativeDividend [84308,84328]"/>
  <match src="identifier: SHARDBal [96128,96136]" dest="identifier: SHARDBal [95438,95446]"/>
  <match src="primitive_type [19227,19233]" dest="primitive_type [19227,19233]"/>
  <match src="function: function [40030,40038]" dest="function: function [40030,40038]"/>
  <match src="identifier: developerDAOFund [83761,83777]" dest="identifier: developerDAOFund [85493,85509]"/>
  <match src="parenthesized_expression [38343,38370]" dest="parenthesized_expression [38343,38370]"/>
  <match src="type_name [57186,57193]" dest="type_name [57188,57195]"/>
  <match src="identifier: b [8931,8932]" dest="identifier: b [8931,8932]"/>
  <match src=".: . [86406,86407]" dest=".: . [87694,87695]"/>
  <match src="identifier: yearPeriod [103639,103649]" dest="identifier: yearPeriod [103563,103573]"/>
  <match src="]: ] [99978,99979]" dest="]: ] [98683,98684]"/>
  <match src="{: { [103922,103923]" dest="{: { [103846,103847]"/>
  <match src="identifier: _term [103540,103545]" dest="identifier: _term [103464,103469]"/>
  <match src="type_name [63620,63627]" dest="type_name [63622,63629]"/>
  <match src="function: function [41322,41330]" dest="function: function [41322,41330]"/>
  <match src="function_definition [104870,105698]" dest="function_definition [104794,105622]"/>
  <match src="state_variable_declaration [65734,65774]" dest="state_variable_declaration [65744,65784]"/>
  <match src=".: . [106670,106671]" dest=".: . [106594,106595]"/>
  <match src="=: = [73797,73798]" dest="=: = [73593,73594]"/>
  <match src="inheritance_specifier [58785,58792]" dest="inheritance_specifier [58787,58794]"/>
  <match src="=: = [62531,62532]" dest="=: = [62533,62534]"/>
  <match src="(: ( [34259,34260]" dest="(: ( [34259,34260]"/>
  <match src=",: , [62762,62763]" dest=",: , [62764,62765]"/>
  <match src="): ) [84859,84860]" dest="): ) [85990,85991]"/>
  <match src=".: . [20723,20724]" dest=".: . [20723,20724]"/>
  <match src="if_statement [73186,73242]" dest="if_statement [72951,73007]"/>
  <match src="return_statement [6208,6225]" dest="return_statement [6208,6225]"/>
  <match src=".: . [101215,101216]" dest=".: . [101184,101185]"/>
  <match src="comment: // File: contracts/SHDToken.sol [58631,58662]" dest="comment: // File: contracts/SHDToken.sol [58633,58664]"/>
  <match src="identifier: token [21903,21908]" dest="identifier: token [21903,21908]"/>
  <match src="': ' [37136,37137]" dest="': ' [37136,37137]"/>
  <match src=",: , [28278,28279]" dest=",: , [28278,28279]"/>
  <match src="call_expression [54148,54244]" dest="call_expression [54150,54246]"/>
  <match src="parameter [2707,2722]" dest="parameter [2707,2722]"/>
  <match src="struct_declaration [58868,58946]" dest="struct_declaration [58870,58948]"/>
  <match src="library_declaration [27172,28296]" dest="library_declaration [27172,28296]"/>
  <match src=".: . [81256,81257]" dest=".: . [81945,81946]"/>
  <match src="identifier: _x [38020,38022]" dest="identifier: _x [38020,38022]"/>
  <match src="number_literal: 16 [31755,31757]" dest="number_literal: 16 [31755,31757]"/>
  <match src="call_expression [105054,105086]" dest="call_expression [104978,105010]"/>
  <match src="expression_statement [87824,87878]" dest="expression_statement [88985,89039]"/>
  <match src="type_name [10963,10970]" dest="type_name [10963,10970]"/>
  <match src="function_definition [76074,76880]" dest="function_definition [75590,76396]"/>
  <match src="primitive_type [46289,46296]" dest="primitive_type [46291,46298]"/>
  <match src="/: / [29795,29796]" dest="/: / [29795,29796]"/>
  <match src="identifier: getModifiedRewardToken [78426,78448]" dest="identifier: getRewardToken [78014,78028]"/>
  <match src="memory: memory [93942,93948]" dest="memory: memory [93588,93594]"/>
  <match src="type_name [84540,84548]" dest="type_name [85671,85679]"/>
  <match src="member_expression [82640,82653]" dest="member_expression [83478,83491]"/>
  <match src="for_statement [93315,93863]" dest="for_statement [92963,93509]"/>
  <match src="return_statement [27877,27890]" dest="return_statement [27877,27890]"/>
  <match src="identifier: _miner [59850,59856]" dest="identifier: _miner [59852,59858]"/>
  <match src="): ) [36166,36167]" dest="): ) [36166,36167]"/>
  <match src="function_body [50757,50792]" dest="function_body [50759,50794]"/>
  <match src="(: ( [12670,12671]" dest="(: ( [12670,12671]"/>
  <match src="): ) [40057,40058]" dest="): ) [40057,40058]"/>
  <match src="identifier: encodeWithSelector [22077,22095]" dest="identifier: encodeWithSelector [22077,22095]"/>
  <match src="struct_member [63877,63900]" dest="struct_member [63879,63902]"/>
  <match src="number_literal: 0 [89174,89175]" dest="number_literal: 0 [90099,90100]"/>
  <match src="if_statement [6196,6225]" dest="if_statement [6196,6225]"/>
  <match src="{: { [1119,1120]" dest="{: { [1119,1120]"/>
  <match src="identifier: _toBlock [78365,78373]" dest="identifier: _toBlock [77877,77885]"/>
  <match src="string [30282,30317]" dest="string [30282,30317]"/>
  <match src="type_name [10912,10918]" dest="type_name [10912,10918]"/>
  <match src="array_access [73551,73571]" dest="array_access [73316,73336]"/>
  <match src="identifier: blockTimestampLast [64102,64120]" dest="identifier: blockTimestampLast [64104,64122]"/>
  <match src="assignment_expression [81118,81303]" dest="assignment_expression [81805,81992]"/>
  <match src="comment: // File: contracts/ShardingDAOMiningDelegate.sol [108619,108667]" dest="comment: // File: contracts/ShardingDAOMiningDelegate.sol [108543,108591]"/>
  <match src=".: . [93660,93661]" dest=".: . [93308,93309]"/>
  <match src="variable_declaration [73134,73154]" dest="variable_declaration [72899,72919]"/>
  <match src=".: . [80035,80036]" dest=".: . [80620,80621]"/>
  <match src="identifier: b [7704,7705]" dest="identifier: b [7704,7705]"/>
  <match src="member_expression [85032,85056]" dest="member_expression [86332,86356]"/>
  <match src=",: , [44972,44973]" dest=",: , [44974,44975]"/>
  <match src="address: address [67112,67119]" dest="address: address [67365,67372]"/>
  <match src="identifier: b [5614,5615]" dest="identifier: b [5614,5615]"/>
  <match src="returns: returns [9456,9463]" dest="returns: returns [9456,9463]"/>
  <match src="=: = [108521,108522]" dest="=: = [108445,108446]"/>
  <match src="identifier: _allowances [53422,53433]" dest="identifier: _allowances [53424,53435]"/>
  <match src="}: } [32495,32496]" dest="}: } [32495,32496]"/>
  <match src="comment: /**      * @dev Returns the integer division of two unsigned integers, reverting on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [8317,8781]" dest="comment: /**      * @dev Returns the integer division of two unsigned integers, reverting on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [8317,8781]"/>
  <match src=".: . [60396,60397]" dest=".: . [60398,60399]"/>
  <match src="): ) [47483,47484]" dest="): ) [47485,47486]"/>
  <match src="false: false [6287,6292]" dest="false: false [6287,6292]"/>
  <match src="type_name [38839,38844]" dest="type_name [38839,38844]"/>
  <match src="identifier: returndata [19336,19346]" dest="identifier: returndata [19336,19346]"/>
  <match src="primitive_type [31828,31833]" dest="primitive_type [31828,31833]"/>
  <match src="tuple_expression [6314,6323]" dest="tuple_expression [6314,6323]"/>
  <match src="uint256: uint256 [63620,63627]" dest="uint256: uint256 [63622,63629]"/>
  <match src="call_argument [42405,42447]" dest="call_argument [42405,42447]"/>
  <match src="array_access [55088,55105]" dest="array_access [55090,55107]"/>
  <match src="expression_statement [95045,95079]" dest="expression_statement [82583,82619]"/>
  <match src="): ) [57870,57871]" dest="): ) [57872,57873]"/>
  <match src="): ) [21848,21849]" dest="): ) [21848,21849]"/>
  <match src="type_name [49011,49060]" dest="type_name [49013,49062]"/>
  <match src="contract_declaration [1062,1598]" dest="contract_declaration [1062,1598]"/>
  <match src="identifier: xx [29350,29352]" dest="identifier: xx [29350,29352]"/>
  <match src="]: ] [88538,88539]" dest="]: ] [89386,89387]"/>
  <match src="(: ( [44215,44216]" dest="(: ( [44217,44218]"/>
  <match src="identifier: amount [3467,3473]" dest="identifier: amount [3467,3473]"/>
  <match src="identifier: isUsed [68061,68067]" dest="identifier: isUsed [68048,68054]"/>
  <match src=",: , [39906,39907]" dest=",: , [39906,39907]"/>
  <match src="function: function [59453,59461]" dest="function: function [59455,59463]"/>
  <match src="): ) [93270,93271]" dest="): ) [92918,92919]"/>
  <match src="identifier: data [15620,15624]" dest="identifier: data [15620,15624]"/>
  <match src="expression_statement [31790,31799]" dest="expression_statement [31790,31799]"/>
  <match src="member_expression [106038,106090]" dest="member_expression [105962,106014]"/>
  <match src="return_statement [34417,34455]" dest="return_statement [34417,34455]"/>
  <match src="variable_declaration [76660,76669]" dest="variable_declaration [76176,76185]"/>
  <match src="type_name [72373,72380]" dest="type_name [72048,72055]"/>
  <match src="pure: pure [33901,33905]" dest="pure: pure [33901,33905]"/>
  <match src=",: , [38577,38578]" dest=",: , [38577,38578]"/>
  <match src="{: { [89039,89040]" dest="{: { [89887,89888]"/>
  <match src="variable_declaration [78811,78834]" dest="variable_declaration [77527,77550]"/>
  <match src="): ) [6561,6562]" dest="): ) [6561,6562]"/>
  <match src="): ) [76617,76618]" dest="): ) [76133,76134]"/>
  <match src="primitive_type [75892,75896]" dest="primitive_type [75408,75412]"/>
  <match src="uint256: uint256 [88656,88663]" dest="uint256: uint256 [89504,89511]"/>
  <match src="=: = [5345,5346]" dest="=: = [5345,5346]"/>
  <match src="=: = [84902,84903]" dest="=: = [86033,86034]"/>
  <match src="primitive_type [38612,38619]" dest="primitive_type [38612,38619]"/>
  <match src="call_argument [41411,41436]" dest="call_argument [41411,41436]"/>
  <match src="variable_declaration_statement [6235,6253]" dest="variable_declaration_statement [6235,6253]"/>
  <match src="): ) [78936,78937]" dest="): ) [78444,78445]"/>
  <match src="identifier: depositTimeWeight [90948,90965]" dest="identifier: depositTimeWeight [91973,91990]"/>
  <match src="type_name [89951,89958]" dest="type_name [91170,91177]"/>
  <match src="(: ( [41352,41353]" dest="(: ( [41352,41353]"/>
  <match src=".: . [61906,61907]" dest=".: . [61908,61909]"/>
  <match src="member_expression [101576,101594]" dest="member_expression [101313,101331]"/>
  <match src="): ) [90854,90855]" dest="): ) [91879,91880]"/>
  <match src="assignment_expression [67306,67316]" dest="assignment_expression [67553,67563]"/>
  <match src="comment: // this block is equivalent to r = uint256(1) &lt;&lt; (BitMath.mostSignificantBit(x) / 2); [28804,28889]" dest="comment: // this block is equivalent to r = uint256(1) &lt;&lt; (BitMath.mostSignificantBit(x) / 2); [28804,28889]"/>
  <match src="string [80133,80152]" dest="string [80718,80737]"/>
  <match src=".: . [107810,107811]" dest=".: . [107734,107735]"/>
  <match src="array_access [61794,61812]" dest="array_access [61796,61814]"/>
  <match src="if: if [32026,32028]" dest="if: if [32026,32028]"/>
  <match src="internal: internal [24307,24315]" dest="internal: internal [24307,24315]"/>
  <match src=".: . [82987,82988]" dest=".: . [83766,83767]"/>
  <match src=",: , [81938,81939]" dest=",: , [82770,82771]"/>
  <match src="identifier: mulDiv [34300,34306]" dest="identifier: mulDiv [34300,34306]"/>
  <match src="comment: // File: @openzeppelin/contracts/GSN/Context.sol [47499,47547]" dest="comment: // File: @openzeppelin/contracts/GSN/Context.sol [47501,47549]"/>
  <match src="member_expression [106348,106367]" dest="member_expression [106272,106291]"/>
  <match src="identifier: _marketingFundDividend [46476,46498]" dest="identifier: _marketingFundDividend [46718,46740]"/>
  <match src="type_name [44627,44634]" dest="type_name [44629,44636]"/>
  <match src="solidity_version: 0.6.0 [19994,19999]" dest="solidity_version: 0.6.0 [19994,19999]"/>
  <match src="=: = [74712,74713]" dest="=: = [74464,74465]"/>
  <match src="identifier: blockTimestampLast [42271,42289]" dest="identifier: blockTimestampLast [42271,42289]"/>
  <match src="function_definition [76931,77325]" dest="function_definition [76447,76765]"/>
  <match src="function_body [44671,44759]" dest="function_body [44673,44761]"/>
  <match src="): ) [108079,108080]" dest="): ) [108003,108004]"/>
  <match src="identifier: sub [67548,67551]" dest="identifier: sub [67795,67798]"/>
  <match src="call_argument [82019,82023]" dest="call_argument [82857,82861]"/>
  <match src="identifier: _pid [89540,89544]" dest="identifier: _pid [90782,90786]"/>
  <match src="call_argument [16789,16793]" dest="call_argument [16789,16793]"/>
  <match src="): ) [83252,83253]" dest="): ) [90425,90426]"/>
  <match src="identifier: DelegationStorage [1101,1118]" dest="identifier: DelegationStorage [1101,1118]"/>
  <match src="call_argument [90465,90483]" dest="call_argument [91504,91522]"/>
  <match src="event_paramater [66963,66983]" dest="event_paramater [67216,67236]"/>
  <match src="identifier: ERC20 [58756,58761]" dest="identifier: ERC20 [58758,58763]"/>
  <match src="if_statement [61388,61721]" dest="if_statement [61390,61723]"/>
  <match src="type_name [39891,39895]" dest="type_name [39891,39895]"/>
  <match src="call_expression [21985,22035]" dest="call_expression [21985,22035]"/>
  <match src="=: = [66006,66007]" dest="=: = [66018,66019]"/>
  <match src="comment: // black list [64372,64385]" dest="comment: // black list [64374,64387]"/>
  <match src="primitive_type [15607,15612]" dest="primitive_type [15607,15612]"/>
  <match src="): ) [105661,105662]" dest="): ) [105585,105586]"/>
  <match src="uint256: uint256 [82889,82896]" dest="uint256: uint256 [99992,99999]"/>
  <match src="): ) [107422,107423]" dest="): ) [107346,107347]"/>
  <match src="call_expression [59593,59612]" dest="call_expression [59595,59614]"/>
  <match src="function_body [54105,54275]" dest="function_body [54107,54277]"/>
  <match src="=: = [78835,78836]" dest="=: = [77551,77552]"/>
  <match src="}: } [106501,106502]" dest="}: } [106425,106426]"/>
  <match src="type_name [67178,67185]" dest="type_name [67431,67438]"/>
  <match src="identifier: amountfeeRateDenominator [46770,46794]" dest="identifier: amountfeeRateDenominator [47012,47036]"/>
  <match src=".: . [99598,99599]" dest=".: . [97688,97689]"/>
  <match src="}: } [58626,58627]" dest="}: } [58628,58629]"/>
  <match src="binary_expression [79888,79899]" dest="binary_expression [80473,80484]"/>
  <match src="function_body [8156,8309]" dest="function_body [8156,8309]"/>
  <match src="state_variable_declaration [32852,32921]" dest="state_variable_declaration [32852,32921]"/>
  <match src="identifier: initialPriceCumulative [106210,106232]" dest="identifier: initialPriceCumulative [106134,106156]"/>
  <match src="type_name [30247,30252]" dest="type_name [30247,30252]"/>
  <match src="comment: // The SHD TOKEN! [64478,64495]" dest="comment: // The SHD TOKEN! [64480,64497]"/>
  <match src="expression_statement [31750,31758]" dest="expression_statement [31750,31758]"/>
  <match src="parameter [49552,49571]" dest="parameter [49554,49573]"/>
  <match src="primitive_type [46256,46263]" dest="primitive_type [46258,46265]"/>
  <match src="uint256: uint256 [43367,43374]" dest="uint256: uint256 [43367,43374]"/>
  <match src="(: ( [96905,96906]" dest="(: ( [95670,95671]"/>
  <match src="identifier: _initialBlock [104012,104025]" dest="identifier: _initialBlock [103936,103949]"/>
  <match src="identifier: getTargetTokenInSwap [70227,70247]" dest="identifier: getTargetTokenInSwap [69938,69958]"/>
  <match src="expression_statement [78766,78801]" dest="expression_statement [78346,78381]"/>
  <match src="library_declaration [28530,29947]" dest="library_declaration [28530,29947]"/>
  <match src="user_defined_type [33915,33924]" dest="user_defined_type [33915,33924]"/>
  <match src="call_argument [89342,89360]" dest="call_argument [90568,90586]"/>
  <match src="(: ( [100764,100765]" dest="(: ( [100749,100750]"/>
  <match src=",: , [18380,18381]" dest=",: , [18380,18381]"/>
  <match src="number_literal: 0x10000000000000000000000000000 [32696,32727]" dest="number_literal: 0x10000000000000000000000000000 [32696,32727]"/>
  <match src="primitive_type [51938,51945]" dest="primitive_type [51940,51947]"/>
  <match src="parenthesized_expression [19855,19869]" dest="parenthesized_expression [19855,19869]"/>
  <match src="bytes: bytes [16238,16243]" dest="bytes: bytes [16238,16243]"/>
  <match src="return_statement [15264,15332]" dest="return_statement [15264,15332]"/>
  <match src="bool: bool [6548,6552]" dest="bool: bool [6548,6552]"/>
  <match src="&gt;: &gt; [10993,10994]" dest="&gt;: &gt; [10993,10994]"/>
  <match src="primitive_type [48940,48947]" dest="primitive_type [48942,48949]"/>
  <match src="call_argument [90997,91008]" dest="call_argument [92022,92033]"/>
  <match src="): ) [83985,83986]" dest="): ) [84514,84515]"/>
  <match src="[: [ [62425,62426]" dest="[: [ [62427,62428]"/>
  <match src="address: address [40758,40765]" dest="address: address [40758,40765]"/>
  <match src="identifier: _pids [95545,95550]" dest="identifier: _pids [94693,94698]"/>
  <match src="identifier: _pid [82445,82449]" dest="identifier: _pid [83283,83287]"/>
  <match src="==: == [84620,84622]" dest="==: == [85751,85753]"/>
  <match src="return: return [33087,33093]" dest="return: return [33087,33093]"/>
  <match src="number_literal: 0 [83604,83605]" dest="number_literal: 0 [85352,85353]"/>
  <match src="variable_declaration [61600,61615]" dest="variable_declaration [61602,61617]"/>
  <match src="using: using [20509,20514]" dest="using: using [20509,20514]"/>
  <match src="assignment_expression [95568,95602]" dest="assignment_expression [94716,94750]"/>
  <match src="&quot;: &quot; [80044,80045]" dest="&quot;: &quot; [80629,80630]"/>
  <match src="string_literal [35459,35494]" dest="string_literal [35459,35494]"/>
  <match src="comment: /**      * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but      * with `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [16373,16615]" dest="comment: /**      * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but      * with `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [16373,16615]"/>
  <match src="uint256: uint256 [44029,44036]" dest="uint256: uint256 [44031,44038]"/>
  <match src="identifier: _pid [46702,46706]" dest="identifier: _pid [46944,46948]"/>
  <match src="identifier: _developerDAOFund [67084,67101]" dest="identifier: _developerDAOFund [67337,67354]"/>
  <match src="member_expression [82916,82937]" dest="member_expression [99810,99831]"/>
  <match src="override: override [52643,52651]" dest="override: override [52645,52653]"/>
  <match src="uint256: uint256 [10123,10130]" dest="uint256: uint256 [10123,10130]"/>
  <match src="&lt;=: &lt;= [37342,37344]" dest="&lt;=: &lt;= [37342,37344]"/>
  <match src="call_argument [103490,103491]" dest="call_argument [103414,103415]"/>
  <match src="identifier: lpTokenAmount [85422,85435]" dest="identifier: lpTokenAmount [86722,86735]"/>
  <match src="uint: uint [40082,40086]" dest="uint: uint [40082,40086]"/>
  <match src="function_definition [38979,39059]" dest="function_definition [38979,39059]"/>
  <match src="memory: memory [34576,34582]" dest="memory: memory [34576,34582]"/>
  <match src="variable_declaration_statement [77424,77470]" dest="variable_declaration_statement [76864,76910]"/>
  <match src="identifier: allowance [51615,51624]" dest="identifier: allowance [51617,51626]"/>
  <match src="expression_statement [62499,62567]" dest="expression_statement [62501,62569]"/>
  <match src="uint256: uint256 [7234,7241]" dest="uint256: uint256 [7234,7241]"/>
  <match src="}: } [108604,108605]" dest="}: } [108528,108529]"/>
  <match src="state_mutability [38699,38703]" dest="state_mutability [38699,38703]"/>
  <match src="primitive_type [54881,54888]" dest="primitive_type [54883,54890]"/>
  <match src="function: function [88369,88377]" dest="function: function [89217,89225]"/>
  <match src="comment: /**      * @dev Throws if called by any account other than the owner.      */ [25845,25924]" dest="comment: /**      * @dev Throws if called by any account other than the owner.      */ [25845,25924]"/>
  <match src="=: = [97517,97518]" dest="=: = [96282,96283]"/>
  <match src="modifier_definition [25930,26050]" dest="modifier_definition [25930,26050]"/>
  <match src="): ) [17072,17073]" dest="): ) [17072,17073]"/>
  <match src="}: } [31915,31916]" dest="}: } [31915,31916]"/>
  <match src="call_argument [52688,52694]" dest="call_argument [52690,52696]"/>
  <match src="address: address [66463,66470]" dest="address: address [66716,66723]"/>
  <match src="returns: returns [38830,38837]" dest="returns: returns [38830,38837]"/>
  <match src="): ) [82693,82694]" dest="): ) [83531,83532]"/>
  <match src="type_name [107258,107262]" dest="type_name [107182,107186]"/>
  <match src="': ' [37711,37712]" dest="': ' [37711,37712]"/>
  <match src="||: || [34682,34684]" dest="||: || [34682,34684]"/>
  <match src="uint112: uint112 [105973,105980]" dest="uint112: uint112 [105897,105904]"/>
  <match src="(: ( [58827,58828]" dest="(: ( [58829,58830]"/>
  <match src="identifier: allowance [38988,38997]" dest="identifier: allowance [38988,38997]"/>
  <match src="string [37358,37390]" dest="string [37358,37390]"/>
  <match src="return_type_definition [40667,40703]" dest="return_type_definition [40667,40703]"/>
  <match src="identifier: token1 [104789,104795]" dest="identifier: token1 [104713,104719]"/>
  <match src="member_expression [79371,79398]" dest="member_expression [79526,79553]"/>
  <match src="string: string [10912,10918]" dest="string: string [10912,10918]"/>
  <match src=",: , [82668,82669]" dest=",: , [83506,83507]"/>
  <match src="type_name [95244,95251]" dest="type_name [94392,94399]"/>
  <match src="comment: // solhint-disable-next-line no-inline-assembly [19587,19634]" dest="comment: // solhint-disable-next-line no-inline-assembly [19587,19634]"/>
  <match src="visibility [64970,64977]" dest="visibility [64980,64987]"/>
  <match src="): ) [38036,38037]" dest="): ) [38036,38037]"/>
  <match src="}: } [30621,30622]" dest="}: } [30621,30622]"/>
  <match src="]: ] [93158,93159]" dest="]: ] [92806,92807]"/>
  <match src="identifier: lower [35156,35161]" dest="identifier: lower [35156,35161]"/>
  <match src="(: ( [92953,92954]" dest="(: ( [92601,92602]"/>
  <match src="return_statement [41397,41438]" dest="return_statement [41397,41438]"/>
  <match src="type_name [66016,66023]" dest="type_name [66028,66035]"/>
  <match src="identifier: add [102688,102691]" dest="identifier: add [102612,102615]"/>
  <match src="identifier: sub [108441,108444]" dest="identifier: sub [108365,108368]"/>
  <match src="expression_statement [30971,30978]" dest="expression_statement [30971,30978]"/>
  <match src=".: . [106521,106522]" dest=".: . [106445,106446]"/>
  <match src="binary_expression [65486,65501]" dest="binary_expression [65496,65511]"/>
  <match src="identifier: getOracleWeight [84323,84338]" dest="identifier: calculateOracleWeight [84852,84873]"/>
  <match src="): ) [53377,53378]" dest="): ) [53379,53380]"/>
  <match src="struct_declaration [32566,32612]" dest="struct_declaration [32566,32612]"/>
  <match src="uint256: uint256 [27951,27958]" dest="uint256: uint256 [27951,27958]"/>
  <match src="): ) [57314,57315]" dest="): ) [57316,57317]"/>
  <match src="identifier: b [8121,8122]" dest="identifier: b [8121,8122]"/>
  <match src="=: = [78690,78691]" dest="=: = [78270,78271]"/>
  <match src="call_expression [72943,72994]" dest="call_expression [72625,72676]"/>
  <match src="memory: memory [17847,17853]" dest="memory: memory [17847,17853]"/>
  <match src="call_argument [79371,79423]" dest="call_argument [79526,79578]"/>
  <match src="type_name [62750,62757]" dest="type_name [62752,62759]"/>
  <match src="): ) [51492,51493]" dest="): ) [51494,51495]"/>
  <match src="identifier: mul [80580,80583]" dest="identifier: mul [81265,81268]"/>
  <match src="visibility [34237,34245]" dest="visibility [34237,34245]"/>
  <match src="visibility [5286,5294]" dest="visibility [5286,5294]"/>
  <match src="member_expression [84746,84764]" dest="member_expression [85877,85895]"/>
  <match src="call_expression [34357,34406]" dest="call_expression [34357,34406]"/>
  <match src="primitive_type [54784,54791]" dest="primitive_type [54786,54793]"/>
  <match src="solidity_version_comparison_operator [47667,47670]" dest="solidity_version_comparison_operator [47669,47672]"/>
  <match src="visibility [41355,41363]" dest="visibility [41355,41363]"/>
  <match src="identifier: errorMessage [11826,11838]" dest="identifier: errorMessage [11826,11838]"/>
  <match src="): ) [37215,37216]" dest="): ) [37215,37216]"/>
  <match src="identifier: user [99664,99668]" dest="identifier: user [97754,97758]"/>
  <match src="function: function [66993,67001]" dest="function: function [67246,67254]"/>
  <match src="function: function [3817,3825]" dest="function: function [3817,3825]"/>
  <match src="function_definition [6487,6642]" dest="function_definition [6487,6642]"/>
  <match src="expression_statement [29691,29712]" dest="expression_statement [29691,29712]"/>
  <match src="identifier: _admin [45759,45765]" dest="identifier: _admin [45761,45767]"/>
  <match src="identifier: div [104131,104134]" dest="identifier: div [104055,104058]"/>
  <match src="-: - [27624,27625]" dest="-: - [27624,27625]"/>
  <match src="state_mutability [88988,88992]" dest="state_mutability [89836,89840]"/>
  <match src="(: ( [54783,54784]" dest="(: ( [54785,54786]"/>
  <match src="comment: // license is CC-BY-4.0 [27147,27170]" dest="comment: // license is CC-BY-4.0 [27147,27170]"/>
  <match src="primitive_type [98206,98213]" dest="primitive_type [96971,96978]"/>
  <match src="parameter [19188,19200]" dest="parameter [19188,19200]"/>
  <match src="variable_declaration_statement [98945,99009]" dest="variable_declaration_statement [99130,99194]"/>
  <match src="type_name [37982,37991]" dest="type_name [37982,37991]"/>
  <match src="&quot;: &quot; [87045,87046]" dest="&quot;: &quot; [88202,88203]"/>
  <match src="primitive_type [88031,88038]" dest="primitive_type [80104,80111]"/>
  <match src="function_body [97010,98371]" dest="function_body [95775,97136]"/>
  <match src="identifier: y [34234,34235]" dest="identifier: y [34234,34235]"/>
  <match src="(: ( [37653,37654]" dest="(: ( [37653,37654]"/>
  <match src="string_literal [58777,58782]" dest="string_literal [58779,58784]"/>
  <match src="identifier: fullMul [27205,27212]" dest="identifier: fullMul [27205,27212]"/>
  <match src="): ) [82358,82359]" dest="): ) [83196,83197]"/>
  <match src="primitive_type [52661,52665]" dest="primitive_type [52663,52667]"/>
  <match src="number_literal: 1929 [68347,68351]" dest="number_literal: 1929 [68370,68374]"/>
  <match src="identifier: checkAdmin [109143,109153]" dest="identifier: checkAdmin [109067,109077]"/>
  <match src="comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      *      * - Addition cannot overflow.      */ [6971,7204]" dest="comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      *      * - Addition cannot overflow.      */ [6971,7204]"/>
  <match src="uint224: uint224 [35095,35102]" dest="uint224: uint224 [35095,35102]"/>
  <match src="identifier: poolCount [93108,93117]" dest="identifier: poolCount [92756,92765]"/>
  <match src="identifier: spender [52027,52034]" dest="identifier: spender [52029,52036]"/>
  <match src="uint256: uint256 [77424,77431]" dest="uint256: uint256 [76864,76871]"/>
  <match src="array_access [61449,61469]" dest="array_access [61451,61471]"/>
  <match src="(: ( [59949,59950]" dest="(: ( [59951,59952]"/>
  <match src=".: . [107117,107118]" dest=".: . [107041,107042]"/>
  <match src="): ) [105890,105891]" dest="): ) [105814,105815]"/>
  <match src="=: = [97467,97468]" dest="=: = [96232,96233]"/>
  <match src="uint256: uint256 [63368,63375]" dest="uint256: uint256 [63370,63377]"/>
  <match src="identifier: price1Cumulative [42508,42524]" dest="identifier: price1Cumulative [42508,42524]"/>
  <match src="assembly_statement [12999,13040]" dest="assembly_statement [12999,13040]"/>
  <match src="&gt;: &gt; [108477,108478]" dest="&gt;: &gt; [108401,108402]"/>
  <match src="identifier: abi [21786,21789]" dest="identifier: abi [21786,21789]"/>
  <match src="call_argument [98302,98309]" dest="call_argument [97067,97074]"/>
  <match src="identifier: lastEvilInBlackList [73377,73396]" dest="identifier: lastEvilInBlackList [73142,73161]"/>
  <match src="state_mutability [51664,51668]" dest="state_mutability [51666,51670]"/>
  <match src="member_expression [62294,62372]" dest="member_expression [62296,62374]"/>
  <match src="block_statement [87809,87984]" dest="block_statement [88970,89145]"/>
  <match src="assignment_expression [93015,93063]" dest="assignment_expression [92663,92711]"/>
  <match src="identifier: div [90350,90353]" dest="identifier: div [91423,91426]"/>
  <match src=",: , [92713,92714]" dest=",: , [92361,92362]"/>
  <match src="call_argument [46528,46531]" dest="call_argument [46770,46773]"/>
  <match src="identifier: poolCount [95743,95752]" dest="identifier: poolCount [94891,94900]"/>
  <match src="identifier: isFirstTokenShard [70451,70468]" dest="identifier: isFirstTokenShard [70162,70179]"/>
  <match src="&gt;&gt;=: &gt;&gt;= [30582,30585]" dest="&gt;&gt;=: &gt;&gt;= [30582,30585]"/>
  <match src="state_mutability [91059,91063]" dest="state_mutability [92084,92088]"/>
  <match src="primitive_type [83410,83417]" dest="primitive_type [85190,85197]"/>
  <match src=",: , [95242,95243]" dest=",: , [94390,94391]"/>
  <match src="(: ( [33103,33104]" dest="(: ( [33103,33104]"/>
  <match src="(: ( [70339,70340]" dest="(: ( [70050,70051]"/>
  <match src="type_name [94139,94153]" dest="type_name [93785,93799]"/>
  <match src="boolean_literal [98713,98717]" dest="boolean_literal [98923,98927]"/>
  <match src=".: . [34789,34790]" dest=".: . [34789,34790]"/>
  <match src="comment: // File: @openzeppelin/contracts/token/ERC20/IERC20.sol [1602,1657]" dest="comment: // File: @openzeppelin/contracts/token/ERC20/IERC20.sol [1602,1657]"/>
  <match src="call_argument [86860,86875]" dest="call_argument [88017,88032]"/>
  <match src="binary_expression [62604,62620]" dest="binary_expression [62606,62622]"/>
  <match src="(: ( [86200,86201]" dest="(: ( [87488,87489]"/>
  <match src="call_argument [37014,37016]" dest="call_argument [37014,37016]"/>
  <match src="type_cast_expression [35095,35114]" dest="type_cast_expression [35095,35114]"/>
  <match src="expression_statement [73493,73541]" dest="expression_statement [73258,73306]"/>
  <match src="assignment_expression [99208,99267]" dest="assignment_expression [99368,99427]"/>
  <match src="primitive_type [39566,39570]" dest="primitive_type [39566,39570]"/>
  <match src="identifier: tryMul [5897,5903]" dest="identifier: tryMul [5897,5903]"/>
  <match src="binary_expression [30636,30648]" dest="binary_expression [30636,30648]"/>
  <match src="=: = [107453,107454]" dest="=: = [107377,107378]"/>
  <match src="identifier: userWeight [83242,83252]" dest="identifier: userWeight [84048,84058]"/>
  <match src="(: ( [48964,48965]" dest="(: ( [48966,48967]"/>
  <match src="identifier: value [38584,38589]" dest="identifier: value [38584,38589]"/>
  <match src="array_access [59523,59542]" dest="array_access [59525,59544]"/>
  <match src="call_argument [81435,81444]" dest="call_argument [82124,82133]"/>
  <match src="*=: *= [27704,27706]" dest="*=: *= [27704,27706]"/>
  <match src="number_literal: 0 [61876,61877]" dest="number_literal: 0 [61878,61879]"/>
  <match src="): ) [38664,38665]" dest="): ) [38664,38665]"/>
  <match src="identifier: recipient [54952,54961]" dest="identifier: recipient [54954,54963]"/>
  <match src="member_expression [90436,90502]" dest="member_expression [91487,91527]"/>
  <match src=".: . [33505,33506]" dest=".: . [33505,33506]"/>
  <match src="&amp;&amp;: &amp;&amp; [80113,80115]" dest="&amp;&amp;: &amp;&amp; [80698,80700]"/>
  <match src="(: ( [35436,35437]" dest="(: ( [35436,35437]"/>
  <match src="(: ( [104647,104648]" dest="(: ( [104571,104572]"/>
  <match src="function: function [78131,78139]" dest="function: function [77264,77272]"/>
  <match src="member_expression [80809,80821]" dest="member_expression [81496,81508]"/>
  <match src="member_expression [68046,68067]" dest="member_expression [68033,68054]"/>
  <match src="(: ( [38712,38713]" dest="(: ( [38712,38713]"/>
  <match src="override: override [51084,51092]" dest="override: override [51086,51094]"/>
  <match src="(: ( [90000,90001]" dest="(: ( [91285,91286]"/>
  <match src="(: ( [36257,36258]" dest="(: ( [36257,36258]"/>
  <match src="): ) [106131,106132]" dest="): ) [106055,106056]"/>
  <match src="(: ( [108859,108860]" dest="(: ( [108783,108784]"/>
  <match src="identifier: DelegateInterface [108742,108759]" dest="identifier: DelegateInterface [108666,108683]"/>
  <match src="(: ( [8233,8234]" dest="(: ( [8233,8234]"/>
  <match src="type_name [95733,95740]" dest="type_name [94881,94888]"/>
  <match src="member_expression [76293,76305]" dest="member_expression [75809,75821]"/>
  <match src="type_name [95525,95532]" dest="type_name [94673,94680]"/>
  <match src="): ) [38118,38119]" dest="): ) [38118,38119]"/>
  <match src="state_mutability [28739,28743]" dest="state_mutability [28739,28743]"/>
  <match src="identifier: require [8226,8233]" dest="identifier: require [8226,8233]"/>
  <match src="assignment_expression [46476,46532]" dest="assignment_expression [46718,46774]"/>
  <match src="array_access [73157,73175]" dest="array_access [72922,72940]"/>
  <match src="]: ] [52774,52775]" dest="]: ] [52776,52777]"/>
  <match src="event: event [25315,25320]" dest="event: event [25315,25320]"/>
  <match src="function_definition [45728,45840]" dest="function_definition [45730,45842]"/>
  <match src="(: ( [104218,104219]" dest="(: ( [104142,104143]"/>
  <match src="type_name [82840,82848]" dest="type_name [83678,83686]"/>
  <match src="uint224: uint224 [36399,36406]" dest="uint224: uint224 [36399,36406]"/>
  <match src="identifier: pending [83885,83892]" dest="identifier: pending [98449,98456]"/>
  <match src="parameter [28011,28018]" dest="parameter [28011,28018]"/>
  <match src="identifier: Ownable [25258,25265]" dest="identifier: Ownable [25258,25265]"/>
  <match src="): ) [104633,104634]" dest="): ) [104557,104558]"/>
  <match src="parameter [15672,15684]" dest="parameter [15672,15684]"/>
  <match src="address: address [51921,51928]" dest="address: address [51923,51930]"/>
  <match src="function_definition [54765,55304]" dest="function_definition [54767,55306]"/>
  <match src="{: { [108869,108870]" dest="{: { [108793,108794]"/>
  <match src="binary_expression [103635,103649]" dest="binary_expression [103559,103573]"/>
  <match src="return_type_definition [19268,19289]" dest="return_type_definition [19268,19289]"/>
  <match src="identifier: originWeight [84028,84040]" dest="identifier: originWeight [84557,84569]"/>
  <match src="(: ( [80098,80099]" dest="(: ( [80683,80684]"/>
  <match src="number_literal: 0xffffffffffffffffffffffffffff [32890,32920]" dest="number_literal: 0xffffffffffffffffffffffffffff [32890,32920]"/>
  <match src="): ) [69702,69703]" dest="): ) [69413,69414]"/>
  <match src="primitive_type [62794,62801]" dest="primitive_type [62796,62803]"/>
  <match src="visibility [43265,43271]" dest="visibility [43265,43271]"/>
  <match src="identifier: i [74184,74185]" dest="identifier: i [73915,73916]"/>
  <match src="expression_statement [74680,74824]" dest="expression_statement [74432,74515]"/>
  <match src="function_body [27530,27897]" dest="function_body [27530,27897]"/>
  <match src="return: return [105673,105679]" dest="return: return [105597,105603]"/>
  <match src="): ) [100841,100842]" dest="): ) [100827,100828]"/>
  <match src="call_argument [53413,53420]" dest="call_argument [53415,53422]"/>
  <match src="call_argument [52696,52705]" dest="call_argument [52698,52707]"/>
  <match src="): ) [94265,94266]" dest="): ) [93911,93912]"/>
  <match src="member_expression [60358,60406]" dest="member_expression [60360,60408]"/>
  <match src="array_access [74260,74286]" dest="array_access [74047,74067]"/>
  <match src="(: ( [40135,40136]" dest="(: ( [40135,40136]"/>
  <match src="(: ( [5948,5949]" dest="(: ( [5948,5949]"/>
  <match src="function_definition [44074,44430]" dest="function_definition [44076,44432]"/>
  <match src="parameter [38998,39011]" dest="parameter [38998,39011]"/>
  <match src="(: ( [24337,24338]" dest="(: ( [24337,24338]"/>
  <match src="type_name [93201,93208]" dest="type_name [92849,92856]"/>
  <match src="parameter [38713,38726]" dest="parameter [38713,38726]"/>
  <match src="uint256: uint256 [60183,60190]" dest="uint256: uint256 [60185,60192]"/>
  <match src="call_argument [35252,35262]" dest="call_argument [35252,35262]"/>
  <match src=".: . [89595,89596]" dest=".: . [90837,90838]"/>
  <match src="type_name [38713,38719]" dest="type_name [38713,38719]"/>
  <match src="parameter [40248,40255]" dest="parameter [40248,40255]"/>
  <match src="&lt;: &lt; [34426,34427]" dest="&lt;: &lt; [34426,34427]"/>
  <match src="expression_statement [36849,36916]" dest="expression_statement [36849,36916]"/>
  <match src="identifier: add [79616,79619]" dest="identifier: add [79699,79702]"/>
  <match src="&gt;: &gt; [77881,77882]" dest="&gt;: &gt; [77116,77117]"/>
  <match src=".: . [84473,84474]" dest=".: . [85008,85009]"/>
  <match src="identifier: pid [73479,73482]" dest="identifier: pid [73244,73247]"/>
  <match src="[: [ [55861,55862]" dest="[: [ [55863,55864]"/>
  <match src="(: ( [82269,82270]" dest="(: ( [83107,83108]"/>
  <match src="identifier: amount [55782,55788]" dest="identifier: amount [55784,55790]"/>
  <match src="else: else [84283,84287]" dest="else: else [84812,84816]"/>
  <match src="identifier: upper_other [34908,34919]" dest="identifier: upper_other [34908,34919]"/>
  <match src="identifier: mint [59462,59466]" dest="identifier: mint [59464,59468]"/>
  <match src="if_statement [87396,87432]" dest="if_statement [88557,88593]"/>
  <match src="return: return [60626,60632]" dest="return: return [60628,60634]"/>
  <match src="identifier: pid [64430,64433]" dest="identifier: pid [64432,64435]"/>
  <match src="identifier: EvilPoolInfo [66113,66125]" dest="identifier: EvilPoolInfo [66129,66141]"/>
  <match src="identifier: priceCumulativeLast [106713,106732]" dest="identifier: priceCumulativeLast [106637,106656]"/>
  <match src="identifier: massUpdatePools [72212,72227]" dest="identifier: massUpdatePools [72016,72031]"/>
  <match src="(: ( [51385,51386]" dest="(: ( [51387,51388]"/>
  <match src="expression_statement [54863,54934]" dest="expression_statement [54865,54936]"/>
  <match src="emit: emit [26466,26470]" dest="emit: emit [26466,26470]"/>
  <match src="call_argument [54871,54891]" dest="call_argument [54873,54893]"/>
  <match src="): ) [77150,77151]" dest="): ) [77935,77936]"/>
  <match src="view: view [95286,95290]" dest="view: view [94434,94438]"/>
  <match src="binary_expression [75609,75630]" dest="binary_expression [75125,75146]"/>
  <match src="identifier: _price [106664,106670]" dest="identifier: _price [106588,106594]"/>
  <match src=",: , [9498,9499]" dest=",: , [9498,9499]"/>
  <match src="identifier: _pending [46880,46888]" dest="identifier: _pending [47122,47130]"/>
  <match src="call_argument [42435,42443]" dest="call_argument [42435,42443]"/>
  <match src="type_name [40820,40827]" dest="type_name [40820,40827]"/>
  <match src="type_name [66303,66310]" dest="type_name [66323,66330]"/>
  <match src="binary_expression [31497,31515]" dest="binary_expression [31497,31515]"/>
  <match src="variable_declaration_statement [73252,73292]" dest="variable_declaration_statement [73017,73057]"/>
  <match src="primitive_type [19188,19192]" dest="primitive_type [19188,19192]"/>
  <match src="{: { [50030,50031]" dest="{: { [50032,50033]"/>
  <match src="-: - [31726,31727]" dest="-: - [31726,31727]"/>
  <match src=",: , [107279,107280]" dest=",: , [107203,107204]"/>
  <match src="visibility [40658,40666]" dest="visibility [40658,40666]"/>
  <match src="(: ( [70734,70735]" dest="(: ( [70445,70446]"/>
  <match src="(: ( [57271,57272]" dest="(: ( [57273,57274]"/>
  <match src="indexed: indexed [4136,4143]" dest="indexed: indexed [4136,4143]"/>
  <match src="parameter [37617,37633]" dest="parameter [37617,37633]"/>
  <match src="parameter [44467,44492]" dest="parameter [44469,44494]"/>
  <match src="}: } [77551,77552]" dest="}: } [76991,76992]"/>
  <match src="variable_declaration [80302,80323]" dest="variable_declaration [80922,80943]"/>
  <match src="(: ( [56695,56696]" dest="(: ( [56697,56698]"/>
  <match src="mapping: mapping [59026,59033]" dest="mapping: mapping [59028,59035]"/>
  <match src=".: . [83558,83559]" dest=".: . [84423,84424]"/>
  <match src="&gt;=: &gt;= [30452,30454]" dest="&gt;=: &gt;= [30452,30454]"/>
  <match src="call_argument [106659,106691]" dest="call_argument [106583,106615]"/>
  <match src="call_expression [105577,105600]" dest="call_expression [105501,105524]"/>
  <match src="identifier: to [39169,39171]" dest="identifier: to [39169,39171]"/>
  <match src="uint256: uint256 [43662,43669]" dest="uint256: uint256 [43662,43669]"/>
  <match src="function_definition [9407,9558]" dest="function_definition [9407,9558]"/>
  <match src="==: == [34677,34679]" dest="==: == [34677,34679]"/>
  <match src="type_cast_expression [27317,27328]" dest="type_cast_expression [27317,27328]"/>
  <match src="visibility [66128,66134]" dest="visibility [66661,66667]"/>
  <match src="for: for [63131,63134]" dest="for: for [63133,63136]"/>
  <match src="member_expression [87210,87237]" dest="member_expression [88371,88398]"/>
  <match src="return_statement [36578,36612]" dest="return_statement [36578,36612]"/>
  <match src="&lt;&lt;: &lt;&lt; [38112,38114]" dest="&lt;&lt;: &lt;&lt; [38112,38114]"/>
  <match src="state_variable_declaration [65180,65211]" dest="state_variable_declaration [65190,65221]"/>
  <match src="uint8: uint8 [31828,31833]" dest="uint8: uint8 [31828,31833]"/>
  <match src="identifier: IERC20 [22910,22916]" dest="identifier: IERC20 [22910,22916]"/>
  <match src="function: function [17727,17735]" dest="function: function [17727,17735]"/>
  <match src="address: address [45751,45758]" dest="address: address [45753,45760]"/>
  <match src="call_expression [83954,83986]" dest="call_expression [84478,84515]"/>
  <match src="type_name [64094,64100]" dest="type_name [64096,64102]"/>
  <match src="primitive_type [7696,7703]" dest="primitive_type [7696,7703]"/>
  <match src="parameter [15204,15221]" dest="parameter [15204,15221]"/>
  <match src="primitive_type [66880,66887]" dest="primitive_type [67133,67140]"/>
  <match src="primitive_type [103728,103735]" dest="primitive_type [103652,103659]"/>
  <match src="identifier: require [33968,33975]" dest="identifier: require [33968,33975]"/>
  <match src="number_literal: 0 [46629,46630]" dest="number_literal: 0 [46871,46872]"/>
  <match src="view: view [39344,39348]" dest="view: view [39344,39348]"/>
  <match src="=: = [70161,70162]" dest="=: = [69872,69873]"/>
  <match src="expression_statement [93181,93222]" dest="expression_statement [92829,92870]"/>
  <match src="visibility [92591,92599]" dest="visibility [92239,92247]"/>
  <match src="augmented_assignment_expression [38219,38253]" dest="augmented_assignment_expression [38219,38253]"/>
  <match src="identifier: usersTotalWeight [90508,90524]" dest="identifier: usersTotalWeight [91533,91549]"/>
  <match src="=: = [84009,84010]" dest="=: = [84538,84539]"/>
  <match src="virtual: virtual [73105,73112]" dest="virtual: virtual [72870,72877]"/>
  <match src="identifier: poolCountInRank [76800,76815]" dest="identifier: poolCountInRank [76316,76331]"/>
  <match src="(: ( [82991,82992]" dest="(: ( [83770,83771]"/>
  <match src="(: ( [100792,100793]" dest="(: ( [100777,100778]"/>
  <match src=".: . [73284,73285]" dest=".: . [73049,73050]"/>
  <match src="if_statement [31493,31592]" dest="if_statement [31493,31592]"/>
  <match src="parameter [38967,38971]" dest="parameter [38967,38971]"/>
  <match src="type_name [44009,44037]" dest="type_name [44011,44039]"/>
  <match src="identifier: isFirstTokenShard [63882,63899]" dest="identifier: isFirstTokenShard [63884,63901]"/>
  <match src="type_name [27521,27528]" dest="type_name [27521,27528]"/>
  <match src="[: [ [92682,92683]" dest="[: [ [92330,92331]"/>
  <match src="identifier: pending [83348,83355]" dest="identifier: pending [84333,84340]"/>
  <match src="storage: storage [85369,85376]" dest="storage: storage [86669,86676]"/>
  <match src="indexed: indexed [39816,39823]" dest="indexed: indexed [39816,39823]"/>
  <match src="member_expression [93519,93544]" dest="member_expression [93167,93192]"/>
  <match src="user_defined_type [35927,35936]" dest="user_defined_type [35927,35936]"/>
  <match src="call_expression [76372,76511]" dest="call_expression [75888,76027]"/>
  <match src="=: = [47129,47130]" dest="=: = [46516,46517]"/>
  <match src="type_name [39084,39091]" dest="type_name [39084,39091]"/>
  <match src="expression_statement [89497,89577]" dest="expression_statement [90739,90819]"/>
  <match src="returns: returns [10954,10961]" dest="returns: returns [10954,10961]"/>
  <match src=".: . [100035,100036]" dest=".: . [98740,98741]"/>
  <match src="return_statement [6614,6635]" dest="return_statement [6614,6635]"/>
  <match src="identifier: invitees [99082,99090]" dest="identifier: invitees [99250,99258]"/>
  <match src="variable_declaration_statement [18006,18072]" dest="variable_declaration_statement [18006,18072]"/>
  <match src="number_literal: 1238 [68176,68180]" dest="number_literal: 1238 [68325,68329]"/>
  <match src="): ) [76546,76547]" dest="): ) [76062,76063]"/>
  <match src="identifier: sub [73285,73288]" dest="identifier: sub [73050,73053]"/>
  <match src="user_defined_type [99420,99428]" dest="user_defined_type [97510,97518]"/>
  <match src=",: , [37666,37667]" dest=",: , [37666,37667]"/>
  <match src="identifier: _lpTokenSwap [104613,104625]" dest="identifier: _lpTokenSwap [104537,104549]"/>
  <match src="variable_declaration [6235,6244]" dest="variable_declaration [6235,6244]"/>
  <match src="variable_declaration [108496,108520]" dest="variable_declaration [108420,108444]"/>
  <match src="uint: uint [39733,39737]" dest="uint: uint [39733,39737]"/>
  <match src="variable_declaration_statement [105001,105121]" dest="variable_declaration_statement [104925,105045]"/>
  <match src="==: == [34008,34010]" dest="==: == [34008,34010]"/>
  <match src="public: public [109102,109108]" dest="public: public [109026,109032]"/>
  <match src="=: = [29662,29663]" dest="=: = [29662,29663]"/>
  <match src="library_declaration [32362,38383]" dest="library_declaration [32362,38383]"/>
  <match src="(: ( [33716,33717]" dest="(: ( [33716,33717]"/>
  <match src="identifier: UserInfo [102431,102439]" dest="identifier: UserInfo [102290,102298]"/>
  <match src="identifier: _amount [79809,79816]" dest="identifier: _amount [80394,80401]"/>
  <match src="user_defined_type [64761,64775]" dest="user_defined_type [64767,64781]"/>
  <match src="(: ( [103472,103473]" dest="(: ( [103396,103397]"/>
  <match src=",: , [15296,15297]" dest=",: , [15296,15297]"/>
  <match src=".: . [91116,91117]" dest=".: . [92141,92142]"/>
  <match src="(: ( [39202,39203]" dest="(: ( [39202,39203]"/>
  <match src="event_paramater [4343,4364]" dest="event_paramater [4343,4364]"/>
  <match src="identifier: amountFeeRateNumerator [45011,45033]" dest="identifier: amountFeeRateNumerator [45013,45035]"/>
  <match src="virtual: virtual [51428,51435]" dest="virtual: virtual [51430,51437]"/>
  <match src="call_argument [77920,77928]" dest="call_argument [77155,77166]"/>
  <match src="identifier: target [18472,18478]" dest="identifier: target [18472,18478]"/>
  <match src="expression_statement [26923,26941]" dest="expression_statement [26923,26941]"/>
  <match src="(: ( [83584,83585]" dest="(: ( [85332,85333]"/>
  <match src="for: for [20524,20527]" dest="for: for [20524,20527]"/>
  <match src="identifier: getDepositWeight [90705,90721]" dest="identifier: getDepositWeight [91730,91746]"/>
  <match src="uint256: uint256 [45509,45516]" dest="uint256: uint256 [45511,45518]"/>
  <match src="&lt;=: &lt;= [80126,80128]" dest="&lt;=: &lt;= [80711,80713]"/>
  <match src="{: { [41386,41387]" dest="{: { [41386,41387]"/>
  <match src="[: [ [52775,52776]" dest="[: [ [52777,52778]"/>
  <match src="{: { [108397,108398]" dest="{: { [108321,108322]"/>
  <match src="internal: internal [25521,25529]" dest="internal: internal [25521,25529]"/>
  <match src="call_argument [18116,18126]" dest="call_argument [18116,18126]"/>
  <match src="): ) [31728,31729]" dest="): ) [31728,31729]"/>
  <match src="number_literal: 8 [31863,31864]" dest="number_literal: 8 [31863,31864]"/>
  <match src="(: ( [102360,102361]" dest="(: ( [102219,102220]"/>
  <match src="): ) [101673,101674]" dest="): ) [101412,101413]"/>
  <match src="&quot;: &quot; [44974,44975]" dest="&quot;: &quot; [44976,44977]"/>
  <match src="bool: bool [64286,64290]" dest="bool: bool [64288,64292]"/>
  <match src="identifier: blackList [73574,73583]" dest="identifier: blackList [73339,73348]"/>
  <match src="identifier: block [77294,77299]" dest="identifier: block [76734,76739]"/>
  <match src=",: , [20732,20733]" dest=",: , [20732,20733]"/>
  <match src="array_access [79059,79070]" dest="array_access [78848,78859]"/>
  <match src=",: , [75655,75656]" dest=",: , [75171,75172]"/>
  <match src=".: . [82661,82662]" dest=".: . [83499,83500]"/>
  <match src="state_variable_declaration [66059,66088]" dest="state_variable_declaration [66073,66104]"/>
  <match src="}: } [81456,81457]" dest="}: } [82145,82146]"/>
  <match src="number_literal: 1 [99109,99110]" dest="number_literal: 1 [99277,99278]"/>
  <match src="identifier: a [10058,10059]" dest="identifier: a [10058,10059]"/>
  <match src="call_argument [78921,78936]" dest="call_argument [78429,78444]"/>
  <match src="identifier: lower [60666,60671]" dest="identifier: lower [60668,60673]"/>
  <match src="(: ( [55669,55670]" dest="(: ( [55671,55672]"/>
  <match src="identifier: _potential [90423,90433]" dest="identifier: _potential [91474,91484]"/>
  <match src="(: ( [15240,15241]" dest="(: ( [15240,15241]"/>
  <match src="identifier: FixedPoint [107035,107045]" dest="identifier: FixedPoint [106959,106969]"/>
  <match src="(: ( [89277,89278]" dest="(: ( [90202,90203]"/>
  <match src="true [100968,100972]" dest="true [101126,101130]"/>
  <match src="-: - [61128,61129]" dest="-: - [61130,61131]"/>
  <match src="): ) [4404,4405]" dest="): ) [4404,4405]"/>
  <match src="comment: // 20% shard =&gt; SHD - ETH pool [66267,66297]" dest="comment: // 20% shard =&gt; SHD - ETH pool [66287,66317]"/>
  <match src="call_argument [83658,83674]" dest="call_argument [85402,85418]"/>
  <match src="expression_statement [99282,99336]" dest="expression_statement [99438,99492]"/>
  <match src="primitive_type [43706,43713]" dest="primitive_type [43706,43713]"/>
  <match src="(: ( [30334,30335]" dest="(: ( [30334,30335]"/>
  <match src="number_literal: 0x100000000 [29234,29245]" dest="number_literal: 0x100000000 [29234,29245]"/>
  <match src="function_definition [33008,33137]" dest="function_definition [33008,33137]"/>
  <match src="user_defined_type [63946,63960]" dest="user_defined_type [63948,63962]"/>
  <match src="(: ( [25948,25949]" dest="(: ( [25948,25949]"/>
  <match src="variable_declaration_statement [105972,106093]" dest="variable_declaration_statement [105896,106017]"/>
  <match src="expression_statement [46385,46462]" dest="expression_statement [46627,46704]"/>
  <match src="struct_member [63834,63867]" dest="struct_member [63836,63869]"/>
  <match src="string [58777,58782]" dest="string [58779,58784]"/>
  <match src="(: ( [43936,43937]" dest="(: ( [43936,43937]"/>
  <match src="primitive_type [21962,21969]" dest="primitive_type [21962,21969]"/>
  <match src="unary_expression [86271,86294]" dest="unary_expression [87559,87582]"/>
  <match src=".: . [89871,89872]" dest=".: . [91118,91119]"/>
  <match src="primitive_type [53373,53377]" dest="primitive_type [53375,53379]"/>
  <match src=",: , [39552,39553]" dest=",: , [39552,39553]"/>
  <match src="identifier: pool [82019,82023]" dest="identifier: pool [82857,82861]"/>
  <match src="identifier: isContractSender [89559,89575]" dest="identifier: isContractSender [90801,90817]"/>
  <match src="]: ] [55232,55233]" dest="]: ] [55234,55235]"/>
  <match src="{: { [54852,54853]" dest="{: { [54854,54855]"/>
  <match src="member_expression [100014,100035]" dest="member_expression [98719,98740]"/>
  <match src="uint256: uint256 [72244,72251]" dest="uint256: uint256 [71933,71940]"/>
  <match src="(: ( [6577,6578]" dest="(: ( [6577,6578]"/>
  <match src="[: [ [85510,85511]" dest="[: [ [86810,86811]"/>
  <match src="): ) [97233,97234]" dest="): ) [95998,95999]"/>
  <match src="(: ( [71679,71680]" dest="(: ( [71390,71391]"/>
  <match src="identifier: center [61121,61127]" dest="identifier: center [61123,61129]"/>
  <match src="return_statement [60626,60635]" dest="return_statement [60628,60637]"/>
  <match src="identifier: tokenToEthInfo [69450,69464]" dest="identifier: tokenToEthInfo [69161,69175]"/>
  <match src="internal: internal [7707,7715]" dest="internal: internal [7707,7715]"/>
  <match src="visibility [43529,43535]" dest="visibility [43529,43535]"/>
  <match src="): ) [38371,38372]" dest="): ) [38371,38372]"/>
  <match src="call_argument [73692,73696]" dest="call_argument [73457,73461]"/>
  <match src="expression_statement [47434,47485]" dest="expression_statement [47436,47487]"/>
  <match src=",: , [35948,35949]" dest=",: , [35948,35949]"/>
  <match src="call_argument [11826,11838]" dest="call_argument [11826,11838]"/>
  <match src="(: ( [61246,61247]" dest="(: ( [61248,61249]"/>
  <match src=".: . [108062,108063]" dest=".: . [107986,107987]"/>
  <match src="if_statement [47273,47372]" dest="if_statement [47275,47374]"/>
  <match src="type_name [66549,66556]" dest="type_name [66802,66809]"/>
  <match src="contract: contract [62984,62992]" dest="contract: contract [62986,62994]"/>
  <match src="primitive_type [24338,24353]" dest="primitive_type [24338,24353]"/>
  <match src="return_type_definition [5300,5323]" dest="return_type_definition [5300,5323]"/>
  <match src="}: } [54274,54275]" dest="}: } [54276,54277]"/>
  <match src="expression_statement [70151,70170]" dest="expression_statement [69862,69881]"/>
  <match src="parameter [16687,16700]" dest="parameter [16687,16700]"/>
  <match src="call_expression [99350,99388]" dest="call_expression [99502,99540]"/>
  <match src="call_argument [81899,81909]" dest="call_argument [82731,82741]"/>
  <match src="): ) [80868,80869]" dest="): ) [81555,81556]"/>
  <match src="function_body [33076,33137]" dest="function_body [33076,33137]"/>
  <match src="identifier: _pid [85511,85515]" dest="identifier: _pid [86811,86815]"/>
  <match src="): ) [84106,84107]" dest="): ) [84635,84636]"/>
  <match src="identifier: add [103764,103767]" dest="identifier: add [103688,103691]"/>
  <match src="identifier: spender [21652,21659]" dest="identifier: spender [21652,21659]"/>
  <match src="internal: internal [105770,105778]" dest="internal: internal [105694,105702]"/>
  <match src="): ) [70627,70628]" dest="): ) [70338,70339]"/>
  <match src="identifier: invitation [94613,94623]" dest="identifier: invitation [94259,94269]"/>
  <match src="primitive_type [39293,39297]" dest="primitive_type [39293,39297]"/>
  <match src="identifier: isUsed [80036,80042]" dest="identifier: isUsed [80621,80627]"/>
  <match src="=: = [82914,82915]" dest="=: = [100017,100018]"/>
  <match src="string: string [49552,49558]" dest="string: string [49554,49560]"/>
  <match src="}: } [31809,31810]" dest="}: } [31809,31810]"/>
  <match src="expression_statement [32058,32065]" dest="expression_statement [32058,32065]"/>
  <match src="]: ] [82877,82878]" dest="]: ] [83715,83716]"/>
  <match src="type_name [39454,39461]" dest="type_name [39454,39461]"/>
  <match src="binary_expression [85498,85521]" dest="binary_expression [86798,86821]"/>
  <match src="number_literal: 1 [31835,31836]" dest="number_literal: 1 [31835,31836]"/>
  <match src="virtual: virtual [88477,88484]" dest="virtual: virtual [89325,89332]"/>
  <match src="uint256: uint256 [51695,51702]" dest="uint256: uint256 [51697,51704]"/>
  <match src="variable_declaration [69475,69501]" dest="variable_declaration [69186,69212]"/>
  <match src="identifier: balance [16795,16802]" dest="identifier: balance [16795,16802]"/>
  <match src="binary_expression [27682,27691]" dest="binary_expression [27682,27691]"/>
  <match src="number_literal: 500 [90988,90991]" dest="number_literal: 500 [92013,92016]"/>
  <match src="variable_declaration [82889,82913]" dest="variable_declaration [99992,100016]"/>
  <match src="if: if [6196,6198]" dest="if: if [6196,6198]"/>
  <match src="virtual: virtual [1429,1436]" dest="virtual: virtual [1429,1436]"/>
  <match src="uint256: uint256 [35573,35580]" dest="uint256: uint256 [35573,35580]"/>
  <match src="-: - [27367,27368]" dest="-: - [27367,27368]"/>
  <match src="identifier: farmMintShard [76604,76617]" dest="identifier: farmMintShard [76120,76133]"/>
  <match src="string: string [16702,16708]" dest="string: string [16702,16708]"/>
  <match src="identifier: _feeRateDenominator [44838,44857]" dest="identifier: _feeRateDenominator [44840,44859]"/>
  <match src="state_mutability [10109,10113]" dest="state_mutability [10109,10113]"/>
  <match src="call_argument [44974,44989]" dest="call_argument [44976,44991]"/>
  <match src="(: ( [42131,42132]" dest="(: ( [42131,42132]"/>
  <match src="external: external [2724,2732]" dest="external: external [2724,2732]"/>
  <match src="): ) [33255,33256]" dest="): ) [33255,33256]"/>
  <match src="type_name [67076,67083]" dest="type_name [67329,67336]"/>
  <match src="identifier: blackList [73641,73650]" dest="identifier: blackList [73406,73415]"/>
  <match src="true: true [68070,68074]" dest="true: true [68056,68060]"/>
  <match src="identifier: poolInfo [99965,99973]" dest="identifier: poolInfo [98670,98678]"/>
  <match src="=: = [93989,93990]" dest="=: = [93635,93636]"/>
  <match src="identifier: value [16806,16811]" dest="identifier: value [16806,16811]"/>
  <match src=",: , [81208,81209]" dest=",: , [81897,81898]"/>
  <match src="variable_declaration [96120,96136]" dest="variable_declaration [95430,95446]"/>
  <match src="memory: memory [33430,33436]" dest="memory: memory [33430,33436]"/>
  <match src="identifier: spender [54139,54146]" dest="identifier: spender [54141,54148]"/>
  <match src="!: ! [71028,71029]" dest="!: ! [70739,70740]"/>
  <match src="identifier: _allowances [57407,57418]" dest="identifier: _allowances [57409,57420]"/>
  <match src="{: { [80670,80671]" dest="{: { [81357,81358]"/>
  <match src="-=: -= [31860,31862]" dest="-=: -= [31860,31862]"/>
  <match src="call_expression [75938,75950]" dest="call_expression [75454,75466]"/>
  <match src="call_expression [98206,98310]" dest="call_expression [96971,97075]"/>
  <match src="type_name [94139,94151]" dest="type_name [93785,93797]"/>
  <match src="identifier: calculatePendingSHARD [88929,88950]" dest="identifier: calculatePendingSHARD [89777,89798]"/>
  <match src="binary_expression [27857,27866]" dest="binary_expression [27857,27866]"/>
  <match src="identifier: h [28215,28216]" dest="identifier: h [28215,28216]"/>
  <match src="comment: // subtraction overflow is desired [42185,42219]" dest="comment: // subtraction overflow is desired [42185,42219]"/>
  <match src="!=: != [61352,61354]" dest="!=: != [61354,61356]"/>
  <match src="identifier: account [56381,56388]" dest="identifier: account [56383,56390]"/>
  <match src="internal: internal [57872,57880]" dest="internal: internal [57874,57882]"/>
  <match src="expression_statement [16773,16855]" dest="expression_statement [16773,16855]"/>
  <match src=".: . [83934,83935]" dest=".: . [84458,84459]"/>
  <match src="): ) [55902,55903]" dest="): ) [55904,55905]"/>
  <match src="identifier: a [10190,10191]" dest="identifier: a [10190,10191]"/>
  <match src="memory: memory [92862,92868]" dest="memory: memory [92510,92516]"/>
  <match src="identifier: _amount [96182,96189]" dest="identifier: _amount [95492,95499]"/>
  <match src="function: function [50701,50709]" dest="function: function [50703,50711]"/>
  <match src="primitive_type [77424,77431]" dest="primitive_type [76864,76871]"/>
  <match src="): ) [98253,98254]" dest="): ) [97018,97019]"/>
  <match src="call_argument [83348,83355]" dest="call_argument [84333,84340]"/>
  <match src="assignment_expression [55852,55903]" dest="assignment_expression [55854,55905]"/>
  <match src="&amp;: &amp; [32032,32033]" dest="&amp;: &amp; [32032,32033]"/>
  <match src="function_definition [22881,23642]" dest="function_definition [22881,23642]"/>
  <match src="identifier: _beforeTokenTransfer [56453,56473]" dest="identifier: _beforeTokenTransfer [56455,56475]"/>
  <match src="return: return [6907,6913]" dest="return: return [6907,6913]"/>
  <match src="call_argument [22310,22317]" dest="call_argument [22310,22317]"/>
  <match src="identifier: to [39959,39961]" dest="identifier: to [39959,39961]"/>
  <match src="call_expression [54160,54172]" dest="call_expression [54162,54174]"/>
  <match src="identifier: amount [66643,66649]" dest="identifier: amount [66896,66902]"/>
  <match src="parameter [60036,60043]" dest="parameter [60038,60045]"/>
  <match src="[: [ [73018,73019]" dest="[: [ [72700,72701]"/>
  <match src="view: view [50887,50891]" dest="view: view [50889,50893]"/>
  <match src="string_literal [56567,56603]" dest="string_literal [56569,56605]"/>
  <match src="-: - [27784,27785]" dest="-: - [27784,27785]"/>
  <match src="!=: != [105204,105206]" dest="!=: != [105128,105130]"/>
  <match src="function_definition [26401,26549]" dest="function_definition [26401,26549]"/>
  <match src="function_body [33257,33318]" dest="function_body [33257,33318]"/>
  <match src="{: { [63935,63936]" dest="{: { [63937,63938]"/>
  <match src="parameter [33858,33879]" dest="parameter [33858,33879]"/>
  <match src="member_expression [79995,80005]" dest="member_expression [80580,80590]"/>
  <match src="{: { [83606,83607]" dest="{: { [85354,85355]"/>
  <match src=".: . [99382,99383]" dest=".: . [99534,99535]"/>
  <match src="type_name [65180,65187]" dest="type_name [65190,65197]"/>
  <match src="if_statement [99590,99654]" dest="if_statement [97680,97744]"/>
  <match src="call_argument [23365,23399]" dest="call_argument [23365,23399]"/>
  <match src="}: } [97393,97394]" dest="}: } [96158,96159]"/>
  <match src="&gt;: &gt; [31730,31731]" dest="&gt;: &gt; [31730,31731]"/>
  <match src="identifier: becomeImplementationData [1008,1032]" dest="identifier: becomeImplementationData [1008,1032]"/>
  <match src="number_literal: 2250 [68613,68617]" dest="number_literal: 2250 [68471,68475]"/>
  <match src="boolean_literal [59546,59550]" dest="boolean_literal [59548,59552]"/>
  <match src="type_name [103141,103148]" dest="type_name [103065,103072]"/>
  <match src="call_expression [28269,28285]" dest="call_expression [28269,28285]"/>
  <match src="(: ( [105736,105737]" dest="(: ( [105660,105661]"/>
  <match src="internal: internal [27988,27996]" dest="internal: internal [27988,27996]"/>
  <match src="): ) [51109,51110]" dest="): ) [51111,51112]"/>
  <match src="number_literal: 0 [84858,84859]" dest="number_literal: 0 [85989,85990]"/>
  <match src="call_expression [86033,86074]" dest="call_expression [87319,87366]"/>
  <match src="type_name [42881,42885]" dest="type_name [42881,42885]"/>
  <match src="function: function [68872,68880]" dest="function: function [68583,68591]"/>
  <match src="number_literal: 0 [67913,67914]" dest="number_literal: 0 [68165,68166]"/>
  <match src="(: ( [38749,38750]" dest="(: ( [38749,38750]"/>
  <match src="binary_expression [61121,61131]" dest="binary_expression [61123,61133]"/>
  <match src="): ) [54974,54975]" dest="): ) [54976,54977]"/>
  <match src="primitive_type [5606,5613]" dest="primitive_type [5606,5613]"/>
  <match src="=: = [103751,103752]" dest="=: = [103675,103676]"/>
  <match src="binary_expression [54871,54891]" dest="binary_expression [54873,54893]"/>
  <match src="ternary_expression [29920,29935]" dest="ternary_expression [29920,29935]"/>
  <match src="): ) [53472,53473]" dest="): ) [53474,53475]"/>
  <match src="identifier: _isFirstTokenEth [104929,104945]" dest="identifier: _isFirstTokenEth [104853,104869]"/>
  <match src="modifier_invocation [73113,73122]" dest="modifier_invocation [72878,72887]"/>
  <match src="pure: pure [34622,34626]" dest="pure: pure [34622,34626]"/>
  <match src="member_expression [47131,47143]" dest="member_expression [46518,46530]"/>
  <match src=".: . [84094,84095]" dest=".: . [84623,84624]"/>
  <match src="uint256: uint256 [94716,94723]" dest="uint256: uint256 [85069,85076]"/>
  <match src="): ) [45806,45807]" dest="): ) [45808,45809]"/>
  <match src="number_literal: 2031 [68404,68408]" dest="number_literal: 2031 [68416,68420]"/>
  <match src="identifier: admin [47442,47447]" dest="identifier: admin [47444,47449]"/>
  <match src="identifier: mul [104331,104334]" dest="identifier: mul [104255,104258]"/>
  <match src="comment: // so the cast does not overflow [35684,35716]" dest="comment: // so the cast does not overflow [35684,35716]"/>
  <match src="): ) [6295,6296]" dest="): ) [6295,6296]"/>
  <match src="(: ( [42017,42018]" dest="(: ( [42017,42018]"/>
  <match src="number_literal: 0 [31940,31941]" dest="number_literal: 0 [31940,31941]"/>
  <match src="identifier: number [89905,89911]" dest="identifier: number [91152,91158]"/>
  <match src="=: = [82000,82001]" dest="=: = [82832,82833]"/>
  <match src="(: ( [90038,90039]" dest="(: ( [90287,90288]"/>
  <match src="identifier: y [33889,33890]" dest="identifier: y [33889,33890]"/>
  <match src="type_name [24338,24353]" dest="type_name [24338,24353]"/>
  <match src=",: , [26815,26816]" dest=",: , [26815,26816]"/>
  <match src="(: ( [2691,2692]" dest="(: ( [2691,2692]"/>
  <match src="}: } [97581,97582]" dest="}: } [96346,96347]"/>
  <match src="{: { [38039,38040]" dest="{: { [38039,38040]"/>
  <match src="(: ( [66670,66671]" dest="(: ( [66923,66924]"/>
  <match src="): ) [26911,26912]" dest="): ) [26911,26912]"/>
  <match src="primitive_type [42881,42885]" dest="primitive_type [42881,42885]"/>
  <match src="call_expression [106038,106092]" dest="call_expression [105962,106016]"/>
  <match src="identifier: ShardingDAOMining [108761,108778]" dest="identifier: ShardingDAOMining [108685,108702]"/>
  <match src="pragma: pragma [4471,4477]" dest="pragma: pragma [4471,4477]"/>
  <match src="&amp;: &amp; [31608,31609]" dest="&amp;: &amp; [31608,31609]"/>
  <match src="): ) [31619,31620]" dest="): ) [31619,31620]"/>
  <match src="returns: returns [41628,41635]" dest="returns: returns [41628,41635]"/>
  <match src="primitive_type [995,1000]" dest="primitive_type [995,1000]"/>
  <match src="function_definition [109043,109357]" dest="function_definition [108967,109281]"/>
  <match src="assignment_expression [72503,72550]" dest="assignment_expression [72195,72242]"/>
  <match src="identifier: _potential [88547,88557]" dest="identifier: _potential [89395,89405]"/>
  <match src="call_argument [26895,26901]" dest="call_argument [26895,26901]"/>
  <match src="uint256: uint256 [44613,44620]" dest="uint256: uint256 [44615,44622]"/>
  <match src="): ) [104006,104007]" dest="): ) [103930,103931]"/>
  <match src="(: ( [76746,76747]" dest="(: ( [76262,76263]"/>
  <match src="): ) [38364,38365]" dest="): ) [38364,38365]"/>
  <match src="(: ( [44692,44693]" dest="(: ( [44694,44695]"/>
  <match src="=: = [41858,41859]" dest="=: = [41858,41859]"/>
  <match src="identifier: massUpdatePools [76083,76098]" dest="identifier: massUpdatePools [75599,75614]"/>
  <match src="variable_declaration [74230,74257]" dest="variable_declaration [74017,74044]"/>
  <match src="identifier: length [74006,74012]" dest="identifier: length [73736,73742]"/>
  <match src="call_argument [34732,34733]" dest="call_argument [34732,34733]"/>
  <match src="(: ( [104968,104969]" dest="(: ( [104892,104893]"/>
  <match src="{: { [79869,79870]" dest="{: { [80454,80455]"/>
  <match src="assignment_expression [95152,95177]" dest="assignment_expression [82629,82656]"/>
  <match src="identifier: pool [99990,99994]" dest="identifier: pool [98695,98699]"/>
  <match src="expression_statement [38219,38254]" dest="expression_statement [38219,38254]"/>
  <match src="): ) [69316,69317]" dest="): ) [69027,69028]"/>
  <match src="primitive_type [95244,95251]" dest="primitive_type [94392,94399]"/>
  <match src="memory: memory [17428,17434]" dest="memory: memory [17428,17434]"/>
  <match src="uint256: uint256 [80463,80470]" dest="uint256: uint256 [81148,81155]"/>
  <match src="identifier: endBlock [84060,84068]" dest="identifier: endBlock [84589,84597]"/>
  <match src=",: , [78193,78194]" dest=",: , [77326,77327]"/>
  <match src="}: } [49687,49688]" dest="}: } [49689,49690]"/>
  <match src="primitive_type [96455,96462]" dest="primitive_type [80202,80209]"/>
  <match src="binary_expression [46634,46662]" dest="binary_expression [46876,46904]"/>
  <match src="(: ( [84683,84684]" dest="(: ( [85814,85815]"/>
  <match src="&quot;: &quot; [23365,23366]" dest="&quot;: &quot; [23365,23366]"/>
  <match src="parameter [88559,88579]" dest="parameter [89407,89427]"/>
  <match src="identifier: startIndex [93440,93450]" dest="identifier: startIndex [93088,93098]"/>
  <match src="call_argument [54889,54890]" dest="call_argument [54891,54892]"/>
  <match src="view: view [41623,41627]" dest="view: view [41623,41627]"/>
  <match src="assignment_expression [90536,90619]" dest="assignment_expression [91561,91644]"/>
  <match src="function: function [53285,53293]" dest="function: function [53287,53295]"/>
  <match src="visibility [76101,76107]" dest="visibility [75617,75623]"/>
  <match src="): ) [83120,83121]" dest="): ) [83899,83900]"/>
  <match src="primitive_type [88777,88781]" dest="primitive_type [89625,89629]"/>
  <match src="uint256: uint256 [78181,78188]" dest="uint256: uint256 [77314,77321]"/>
  <match src="): ) [107325,107326]" dest="): ) [107249,107250]"/>
  <match src="identifier: timeElapsed [42579,42590]" dest="identifier: timeElapsed [42579,42590]"/>
  <match src="function: function [44584,44592]" dest="function: function [44586,44594]"/>
  <match src="member_expression [41411,41426]" dest="member_expression [41411,41426]"/>
  <match src="array_access [62294,62362]" dest="array_access [62296,62364]"/>
  <match src="==: == [82136,82138]" dest="==: == [82974,82976]"/>
  <match src="(: ( [17421,17422]" dest="(: ( [17421,17422]"/>
  <match src="variable_declaration_statement [79139,79238]" dest="variable_declaration_statement [79302,79393]"/>
  <match src="++: ++ [74207,74209]" dest="++: ++ [73938,73940]"/>
  <match src=",: , [92758,92759]" dest=",: , [92406,92407]"/>
  <match src="{: { [20851,20852]" dest="{: { [20851,20852]"/>
  <match src="member_expression [22073,22095]" dest="member_expression [22073,22095]"/>
  <match src="(: ( [71621,71622]" dest="(: ( [71332,71333]"/>
  <match src="identifier: inviteeIndexMap [99151,99166]" dest="identifier: inviteeIndexMap [99315,99330]"/>
  <match src="return: return [99636,99642]" dest="return: return [97726,97732]"/>
  <match src="call_argument [20686,20744]" dest="call_argument [20686,20744]"/>
  <match src="identifier: d [27686,27687]" dest="identifier: d [27686,27687]"/>
  <match src="!=: != [75626,75628]" dest="!=: != [75142,75144]"/>
  <match src="comment: // user's sum weight [63646,63666]" dest="comment: // user's sum weight [63648,63668]"/>
  <match src="{: { [98661,98662]" dest="{: { [97426,97427]"/>
  <match src="call_argument [55138,55178]" dest="call_argument [55140,55180]"/>
  <match src="): ) [106274,106275]" dest="): ) [106198,106199]"/>
  <match src="call_expression [77027,77076]" dest="call_expression [76543,76592]"/>
  <match src="uint256: uint256 [43787,43794]" dest="uint256: uint256 [43787,43794]"/>
  <match src="type_cast_expression [54965,54975]" dest="type_cast_expression [54967,54977]"/>
  <match src="state_mutability [104956,104960]" dest="state_mutability [104880,104884]"/>
  <match src="}: } [107938,107939]" dest="}: } [107862,107863]"/>
  <match src="member_expression [59683,59693]" dest="member_expression [59685,59695]"/>
  <match src=",: , [28106,28107]" dest=",: , [28106,28107]"/>
  <match src="type_name [3855,3862]" dest="type_name [3855,3862]"/>
  <match src="identifier: _pid [94724,94728]" dest="identifier: _pid [85077,85081]"/>
  <match src="type_name [82479,82487]" dest="type_name [83317,83325]"/>
  <match src=",: , [46132,46133]" dest=",: , [46134,46135]"/>
  <match src="returns: returns [38704,38711]" dest="returns: returns [38704,38711]"/>
  <match src="number_literal: 0 [34680,34681]" dest="number_literal: 0 [34680,34681]"/>
  <match src="variable_declaration_tuple [28031,28053]" dest="variable_declaration_tuple [28031,28053]"/>
  <match src="variable_declaration_statement [80417,80453]" dest="variable_declaration_statement [81037,81070]"/>
  <match src="): ) [69717,69718]" dest="): ) [69428,69429]"/>
  <match src="identifier: poolCount [95696,95705]" dest="identifier: poolCount [94844,94853]"/>
  <match src="expression_statement [99127,99194]" dest="expression_statement [99291,99358]"/>
  <match src="binary_expression [9545,9550]" dest="binary_expression [9545,9550]"/>
  <match src=".: . [89550,89551]" dest=".: . [90792,90793]"/>
  <match src="identifier: shardPoolDividendWeight [66318,66341]" dest="identifier: shardPoolDividendWeight [66338,66361]"/>
  <match src="identifier: _endBlock [95152,95161]" dest="identifier: newEndBlock [82645,82656]"/>
  <match src="function_definition [41551,42609]" dest="function_definition [41551,42609]"/>
  <match src="expression_statement [53390,53474]" dest="expression_statement [53392,53476]"/>
  <match src=".: . [84701,84702]" dest=".: . [85832,85833]"/>
  <match src="primitive_type [19009,19013]" dest="primitive_type [19009,19013]"/>
  <match src="(: ( [34784,34785]" dest="(: ( [34784,34785]"/>
  <match src="call_argument [42098,42102]" dest="call_argument [42098,42102]"/>
  <match src="identifier: totalReward [104280,104291]" dest="identifier: totalReward [104204,104215]"/>
  <match src="emit_statement [57454,57492]" dest="emit_statement [57456,57494]"/>
  <match src="variable_declaration_statement [92905,92957]" dest="variable_declaration_statement [92553,92605]"/>
  <match src="identifier: _validRankPoolCount [78707,78726]" dest="identifier: _validRankPoolCount [78287,78306]"/>
  <match src="call_expression [7750,7799]" dest="call_expression [7750,7799]"/>
  <match src="type_name [69213,69220]" dest="type_name [68924,68931]"/>
  <match src="identifier: mul [46985,46988]" dest="identifier: mul [46372,46375]"/>
  <match src="parameter [3874,3888]" dest="parameter [3874,3888]"/>
  <match src="identifier: upper_self [34764,34774]" dest="identifier: upper_self [34764,34774]"/>
  <match src="identifier: _pid [86256,86260]" dest="identifier: _pid [87544,87548]"/>
  <match src="binary_expression [13057,13065]" dest="binary_expression [13057,13065]"/>
  <match src="returns: returns [18832,18839]" dest="returns: returns [18832,18839]"/>
  <match src="identifier: to [40654,40656]" dest="identifier: to [40654,40656]"/>
  <match src="member_expression [82656,82668]" dest="member_expression [83494,83506]"/>
  <match src="parameter [34589,34611]" dest="parameter [34589,34611]"/>
  <match src="identifier: totalSupply [1881,1892]" dest="identifier: totalSupply [1881,1892]"/>
  <match src=",: , [82728,82729]" dest=",: , [83566,83567]"/>
  <match src="type_name [43043,43050]" dest="type_name [43043,43050]"/>
  <match src="]: ] [60581,60582]" dest="]: ] [60583,60584]"/>
  <match src="identifier: uq112x112 [107776,107785]" dest="identifier: uq112x112 [107700,107709]"/>
  <match src="uint256: uint256 [61301,61308]" dest="uint256: uint256 [61303,61310]"/>
  <match src="(: ( [44017,44018]" dest="(: ( [44019,44020]"/>
  <match src="member_expression [106053,106077]" dest="member_expression [105977,106001]"/>
  <match src="{: { [70085,70086]" dest="{: { [69796,69797]"/>
  <match src="&gt;&gt;: &gt;&gt; [33725,33727]" dest="&gt;&gt;: &gt;&gt; [33725,33727]"/>
  <match src="{: { [70870,70871]" dest="{: { [70581,70582]"/>
  <match src="comment: // File: @uniswap/lib/contracts/libraries/BitMath.sol [29951,30004]" dest="comment: // File: @uniswap/lib/contracts/libraries/BitMath.sol [29951,30004]"/>
  <match src="-=: -= [31423,31425]" dest="-=: -= [31423,31425]"/>
  <match src="address: address [41594,41601]" dest="address: address [41594,41601]"/>
  <match src="&gt;&gt;=: &gt;&gt;= [30909,30912]" dest="&gt;&gt;=: &gt;&gt;= [30909,30912]"/>
  <match src="[: [ [54173,54174]" dest="[: [ [54175,54176]"/>
  <match src="identifier: _lockTime [80116,80125]" dest="identifier: _lockTime [80701,80710]"/>
  <match src="identifier: experimental [78,90]" dest="identifier: experimental [78,90]"/>
  <match src="storage: storage [73784,73791]" dest="storage: storage [73580,73587]"/>
  <match src="): ) [104136,104137]" dest="): ) [104060,104061]"/>
  <match src="visibility [25292,25299]" dest="visibility [25292,25299]"/>
  <match src=",: , [21784,21785]" dest=",: , [21784,21785]"/>
  <match src="type_name [27269,27276]" dest="type_name [27269,27276]"/>
  <match src="call_argument [28102,28103]" dest="call_argument [28102,28103]"/>
  <match src="primitive_type [2349,2356]" dest="primitive_type [2349,2356]"/>
  <match src="returns: returns [102403,102410]" dest="returns: returns [102262,102269]"/>
  <match src="member_expression [101637,101656]" dest="member_expression [101374,101393]"/>
  <match src="type_name [60036,60043]" dest="type_name [60038,60045]"/>
  <match src="augmented_assignment_expression [32058,32064]" dest="augmented_assignment_expression [32058,32064]"/>
  <match src="type_name [58576,58583]" dest="type_name [58578,58585]"/>
  <match src="assignment_expression [80888,80910]" dest="assignment_expression [81575,81597]"/>
  <match src="variable_declaration_statement [101955,101993]" dest="variable_declaration_statement [99859,99924]"/>
  <match src="identifier: _pending [46891,46899]" dest="identifier: _pending [47133,47141]"/>
  <match src="identifier: amount [3882,3888]" dest="identifier: amount [3882,3888]"/>
  <match src="block_statement [80629,81330]" dest="block_statement [81316,82019]"/>
  <match src="address: address [39761,39768]" dest="address: address [39761,39768]"/>
  <match src="binary_expression [36249,36292]" dest="binary_expression [36249,36292]"/>
  <match src="assignment_expression [44333,44373]" dest="assignment_expression [44335,44375]"/>
  <match src="type_name [12919,12926]" dest="type_name [12919,12926]"/>
  <match src="string_literal [23578,23622]" dest="string_literal [23578,23622]"/>
  <match src="visibility [15223,15231]" dest="visibility [15223,15231]"/>
  <match src="): ) [16728,16729]" dest="): ) [16728,16729]"/>
  <match src="=: = [93330,93331]" dest="=: = [92978,92979]"/>
  <match src="emit: emit [56665,56669]" dest="emit: emit [56667,56671]"/>
  <match src="pragma: pragma [1665,1671]" dest="pragma: pragma [1665,1671]"/>
  <match src="binary_expression [69954,69978]" dest="binary_expression [69665,69689]"/>
  <match src="solidity: solidity [53,61]" dest="solidity: solidity [53,61]"/>
  <match src="&quot;: &quot; [58777,58778]" dest="&quot;: &quot; [58779,58780]"/>
  <match src="function_definition [61224,62062]" dest="function_definition [61226,62064]"/>
  <match src="&amp;&amp;: &amp;&amp; [61358,61360]" dest="&amp;&amp;: &amp;&amp; [61360,61362]"/>
  <match src="identifier: account [55883,55890]" dest="identifier: account [55885,55892]"/>
  <match src="uint256: uint256 [6503,6510]" dest="uint256: uint256 [6503,6510]"/>
  <match src="identifier: mul [98029,98032]" dest="identifier: mul [96794,96797]"/>
  <match src=",: , [45184,45185]" dest=",: , [45186,45187]"/>
  <match src="identifier: rankPoolIndex [87892,87905]" dest="identifier: rankPoolIndex [89053,89066]"/>
  <match src="augmented_assignment_expression [29194,29202]" dest="augmented_assignment_expression [29194,29202]"/>
  <match src="type_name [69242,69256]" dest="type_name [68953,68967]"/>
  <match src="number_literal: 2 [98277,98278]" dest="number_literal: 2 [97042,97043]"/>
  <match src="expression_statement [67519,67555]" dest="expression_statement [67766,67802]"/>
  <match src="member_expression [99350,99382]" dest="member_expression [99502,99534]"/>
  <match src="primitive_type [20815,20822]" dest="primitive_type [20815,20822]"/>
  <match src="function_definition [59821,59919]" dest="function_definition [59823,59921]"/>
  <match src="block_statement [89177,89217]" dest="block_statement [90102,90142]"/>
  <match src="primitive_type [69213,69220]" dest="primitive_type [68924,68931]"/>
  <match src="&gt;: &gt; [72192,72193]" dest="&gt;: &gt; [71858,71859]"/>
  <match src="=: = [95775,95776]" dest="=: = [94923,94924]"/>
  <match src="}: } [45719,45720]" dest="}: } [45721,45722]"/>
  <match src="identifier: _startBlock [45650,45661]" dest="identifier: _startBlock [45652,45663]"/>
  <match src="memory: memory [33068,33074]" dest="memory: memory [33068,33074]"/>
  <match src="call_expression [83318,83356]" dest="call_expression [84303,84341]"/>
  <match src="{: { [20502,20503]" dest="{: { [20502,20503]"/>
  <match src="identifier: _count [87417,87423]" dest="identifier: _count [88578,88584]"/>
  <match src="[: [ [89473,89474]" dest="[: [ [90715,90716]"/>
  <match src="parameter [33881,33890]" dest="parameter [33881,33890]"/>
  <match src="): ) [40223,40224]" dest="): ) [40223,40224]"/>
  <match src="identifier: toNew [61943,61948]" dest="identifier: toNew [61945,61950]"/>
  <match src="call_argument [105598,105599]" dest="call_argument [105522,105523]"/>
  <match src="identifier: data [16681,16685]" dest="identifier: data [16681,16685]"/>
  <match src="identifier: sub [72279,72282]" dest="identifier: sub [72157,72160]"/>
  <match src="[: [ [80219,80220]" dest="[: [ [80839,80840]"/>
  <match src="modifier_invocation [26445,26454]" dest="modifier_invocation [26445,26454]"/>
  <match src="call_argument [34930,34952]" dest="call_argument [34930,34952]"/>
  <match src="!=: != [89698,89700]" dest="!=: != [90940,90942]"/>
  <match src="state_mutability [38884,38888]" dest="state_mutability [38884,38888]"/>
  <match src="primitive_type [64286,64290]" dest="primitive_type [64288,64292]"/>
  <match src="visibility [102918,102924]" dest="visibility [102842,102848]"/>
  <match src="number_literal: 1 [62447,62448]" dest="number_literal: 1 [62449,62450]"/>
  <match src="call_argument [34365,34375]" dest="call_argument [34365,34375]"/>
  <match src="expression_statement [108166,108191]" dest="expression_statement [108090,108115]"/>
  <match src="): ) [40284,40285]" dest="): ) [40284,40285]"/>
  <match src="visibility [17399,17407]" dest="visibility [17399,17407]"/>
  <match src="call_argument [62544,62555]" dest="call_argument [62546,62557]"/>
  <match src="{: { [72197,72198]" dest="{: { [71863,71864]"/>
  <match src="): ) [72105,72106]" dest="): ) [71658,71659]"/>
  <match src="call_argument [16313,16356]" dest="call_argument [16313,16356]"/>
  <match src="uint256: uint256 [58588,58595]" dest="uint256: uint256 [58590,58597]"/>
  <match src="primitive_type [80363,80370]" dest="primitive_type [80983,80990]"/>
  <match src="identifier: msg [24616,24619]" dest="identifier: msg [24616,24619]"/>
  <match src="return_statement [99636,99643]" dest="return_statement [97726,97733]"/>
  <match src="function_definition [82419,84503]" dest="function_definition [83257,85038]"/>
  <match src="returns: returns [16229,16236]" dest="returns: returns [16229,16236]"/>
  <match src="internal: internal [9442,9450]" dest="internal: internal [9442,9450]"/>
  <match src="identifier: _balances [51129,51138]" dest="identifier: _balances [51131,51140]"/>
  <match src="expression_statement [35726,35789]" dest="expression_statement [35726,35789]"/>
  <match src="string [21681,21737]" dest="string [21681,21737]"/>
  <match src="function_definition [73059,73705]" dest="function_definition [72824,73470]"/>
  <match src="call_argument [103855,103856]" dest="call_argument [103779,103780]"/>
  <match src="identifier: require [30267,30274]" dest="identifier: require [30267,30274]"/>
  <match src="primitive_type [4366,4373]" dest="primitive_type [4366,4373]"/>
  <match src="call_argument [97825,97849]" dest="call_argument [96590,96614]"/>
  <match src="assignment_expression [46970,47054]" dest="assignment_expression [46357,46441]"/>
  <match src="comment: // multiply a UQ112x112 by a UQ112x112, returning a UQ112x112 [34470,34531]" dest="comment: // multiply a UQ112x112 by a UQ112x112, returning a UQ112x112 [34470,34531]"/>
  <match src="type_name [86000,86007]" dest="type_name [100130,100137]"/>
  <match src="type_name [46120,46127]" dest="type_name [46122,46129]"/>
  <match src="type_name [24450,24455]" dest="type_name [24450,24455]"/>
  <match src="array_access [55873,55891]" dest="array_access [55875,55893]"/>
  <match src="function_body [45557,45720]" dest="function_body [45559,45722]"/>
  <match src="(: ( [43956,43957]" dest="(: ( [43956,43957]"/>
  <match src="return_statement [102966,103061]" dest="return_statement [102890,102985]"/>
  <match src="function_body [92894,93870]" dest="function_body [92542,93516]"/>
  <match src="number_literal: 0 [73206,73207]" dest="number_literal: 0 [72971,72972]"/>
  <match src="primitive_type [34433,34439]" dest="primitive_type [34433,34439]"/>
  <match src="parameter [77370,77386]" dest="parameter [76810,76826]"/>
  <match src="identifier: errorMessage [17130,17142]" dest="identifier: errorMessage [17130,17142]"/>
  <match src="return_type_definition [40127,40144]" dest="return_type_definition [40127,40144]"/>
  <match src="identifier: _msgSender [54160,54170]" dest="identifier: _msgSender [54162,54172]"/>
  <match src="comment: // invitee's supply 10% deposit weight to its invitor [43308,43361]" dest="comment: // invitee's supply 10% deposit weight to its invitor [43308,43361]"/>
  <match src="if: if [76526,76528]" dest="if: if [76042,76044]"/>
  <match src="comment: // constructor execution. [12882,12907]" dest="comment: // constructor execution. [12882,12907]"/>
  <match src="&gt;=: &gt;= [77504,77506]" dest="&gt;=: &gt;= [76944,76946]"/>
  <match src="): ) [79637,79638]" dest="): ) [79720,79721]"/>
  <match src="call_argument [81749,81756]" dest="call_argument [82564,82571]"/>
  <match src="visibility [43478,43484]" dest="visibility [43478,43484]"/>
  <match src="variable_declaration [35300,35321]" dest="variable_declaration [35300,35321]"/>
  <match src="': ' [34046,34047]" dest="': ' [34046,34047]"/>
  <match src="identifier: msg [59683,59686]" dest="identifier: msg [59685,59688]"/>
  <match src="block_statement [70870,70929]" dest="block_statement [70581,70640]"/>
  <match src="visibility [31255,31263]" dest="visibility [31255,31263]"/>
  <match src="primitive_type [102488,102495]" dest="primitive_type [102412,102419]"/>
  <match src="+=: += [30605,30607]" dest="+=: += [30605,30607]"/>
  <match src="primitive_type [57203,57210]" dest="primitive_type [57205,57212]"/>
  <match src="identifier: priceTokenCumulativeLast [105009,105033]" dest="identifier: priceTokenCumulativeLast [104933,104957]"/>
  <match src="==: == [69365,69367]" dest="==: == [69076,69078]"/>
  <match src="identifier: marketingFund [67678,67691]" dest="identifier: marketingFund [67892,67905]"/>
  <match src="public: public [58845,58851]" dest="public: public [58847,58853]"/>
  <match src="type_name [71817,71823]" dest="type_name [71528,71534]"/>
  <match src="): ) [35670,35671]" dest="): ) [35670,35671]"/>
  <match src="uint256: uint256 [1918,1925]" dest="uint256: uint256 [1918,1925]"/>
  <match src="type_name [69735,69742]" dest="type_name [69446,69453]"/>
  <match src="call_argument [15743,15755]" dest="call_argument [15743,15755]"/>
  <match src="primitive_type [67076,67083]" dest="primitive_type [67329,67336]"/>
  <match src="): ) [49772,49773]" dest="): ) [49774,49775]"/>
  <match src="[: [ [100349,100350]" dest="[: [ [71912,71913]"/>
  <match src="binary_expression [29700,29705]" dest="binary_expression [29700,29705]"/>
  <match src="primitive_type [14255,14259]" dest="primitive_type [14255,14259]"/>
  <match src="comment: /**      * @dev Returns the address of the current owner.      */ [25677,25744]" dest="comment: /**      * @dev Returns the address of the current owner.      */ [25677,25744]"/>
  <match src="): ) [37712,37713]" dest="): ) [37712,37713]"/>
  <match src="&quot;: &quot; [59580,59581]" dest="&quot;: &quot; [59582,59583]"/>
  <match src="(: ( [98415,98416]" dest="(: ( [97180,97181]"/>
  <match src="%: % [9547,9548]" dest="%: % [9547,9548]"/>
  <match src="mapping: mapping [58820,58827]" dest="mapping: mapping [58822,58829]"/>
  <match src="parameter [38898,38902]" dest="parameter [38898,38902]"/>
  <match src="string_literal [14305,14307]" dest="string_literal [14305,14307]"/>
  <match src="primitive_type [35095,35102]" dest="primitive_type [35095,35102]"/>
  <match src="primitive_type [74064,74071]" dest="primitive_type [73794,73801]"/>
  <match src="comment: // solhint-disable-next-line no-inline-assembly [12942,12989]" dest="comment: // solhint-disable-next-line no-inline-assembly [12942,12989]"/>
  <match src="identifier: _fromBlock [103244,103254]" dest="identifier: _fromBlock [103168,103178]"/>
  <match src="parameter [28719,28728]" dest="parameter [28719,28728]"/>
  <match src="primitive_type [84121,84128]" dest="primitive_type [84650,84657]"/>
  <match src="false: false [6594,6599]" dest="false: false [6594,6599]"/>
  <match src="primitive_type [14027,14042]" dest="primitive_type [14027,14042]"/>
  <match src="variable_declaration [85903,85933]" dest="variable_declaration [97799,97828]"/>
  <match src="visibility [108380,108388]" dest="visibility [108304,108312]"/>
  <match src="identifier: _poolIndexInRank [86236,86252]" dest="identifier: _poolIndexInRank [87524,87540]"/>
  <match src="call_argument [55289,55295]" dest="call_argument [55291,55297]"/>
  <match src="identifier: _blockNumber [88567,88579]" dest="identifier: _blockNumber [89415,89427]"/>
  <match src="if: if [99870,99872]" dest="if: if [98062,98064]"/>
  <match src="visibility [79852,79860]" dest="visibility [80437,80445]"/>
  <match src="(: ( [40551,40552]" dest="(: ( [40551,40552]"/>
  <match src="address: address [59172,59179]" dest="address: address [59174,59181]"/>
  <match src="binary_expression [30547,30563]" dest="binary_expression [30547,30563]"/>
  <match src="identifier: data [109202,109206]" dest="identifier: data [109126,109130]"/>
  <match src="primitive_type [99023,99030]" dest="primitive_type [99204,99211]"/>
  <match src=",: , [68522,68523]" dest=",: , [68450,68451]"/>
  <match src="binary_expression [35437,35457]" dest="binary_expression [35437,35457]"/>
  <match src="call_argument [36213,36215]" dest="call_argument [36213,36215]"/>
  <match src=",: , [104526,104527]" dest=",: , [104450,104451]"/>
  <match src="uint256: uint256 [103809,103816]" dest="uint256: uint256 [103733,103740]"/>
  <match src="identifier: pool [79196,79200]" dest="identifier: pool [79351,79355]"/>
  <match src="identifier: blockNumber [62239,62250]" dest="identifier: blockNumber [62241,62252]"/>
  <match src="identifier: _pid [77002,77006]" dest="identifier: _pid [76518,76522]"/>
  <match src="): ) [27986,27987]" dest="): ) [27986,27987]"/>
  <match src="function_body [46059,46067]" dest="function_body [46061,46069]"/>
  <match src="{: { [61412,61413]" dest="{: { [61414,61415]"/>
  <match src="true: true [59801,59805]" dest="true: true [59803,59807]"/>
  <match src="if: if [6574,6576]" dest="if: if [6574,6576]"/>
  <match src="}: } [23634,23635]" dest="}: } [23634,23635]"/>
  <match src="uint256: uint256 [85637,85644]" dest="uint256: uint256 [86937,86944]"/>
  <match src="identifier: poolCount [92994,93003]" dest="identifier: poolCount [92642,92651]"/>
  <match src="returns: returns [37608,37615]" dest="returns: returns [37608,37615]"/>
  <match src="binary_expression [30882,30890]" dest="binary_expression [30882,30890]"/>
  <match src="type_cast_expression [31501,31511]" dest="type_cast_expression [31501,31511]"/>
  <match src="call_argument [10998,11010]" dest="call_argument [10998,11010]"/>
  <match src="call_argument [37431,37437]" dest="call_argument [37431,37437]"/>
  <match src="call_argument [42425,42433]" dest="call_argument [42425,42433]"/>
  <match src="uint256: uint256 [8800,8807]" dest="uint256: uint256 [8800,8807]"/>
  <match src=",: , [70200,70201]" dest=",: , [69911,69912]"/>
  <match src="(: ( [46403,46404]" dest="(: ( [46645,46646]"/>
  <match src="primitive_type [89020,89027]" dest="primitive_type [89868,89875]"/>
  <match src="]: ] [88405,88406]" dest="]: ] [89253,89254]"/>
  <match src="function_definition [49968,50063]" dest="function_definition [49970,50065]"/>
  <match src="expression_statement [37646,37714]" dest="expression_statement [37646,37714]"/>
  <match src="string_literal [9500,9526]" dest="string_literal [9500,9526]"/>
  <match src="=: = [73320,73321]" dest="=: = [73085,73086]"/>
  <match src="call_argument [81925,81938]" dest="call_argument [82757,82770]"/>
  <match src="identifier: pool [100334,100338]" dest="identifier: pool [71897,71901]"/>
  <match src="variable_declaration_statement [97021,97111]" dest="variable_declaration_statement [95786,95876]"/>
  <match src="call_expression [36026,36086]" dest="call_expression [36026,36086]"/>
  <match src="if_statement [83821,83909]" dest="if_statement [85545,85627]"/>
  <match src="binary_expression [42254,42289]" dest="binary_expression [42254,42289]"/>
  <match src=".: . [93812,93813]" dest=".: . [93458,93459]"/>
  <match src="return: return [28262,28268]" dest="return: return [28262,28268]"/>
  <match src=",: , [46118,46119]" dest=",: , [46120,46121]"/>
  <match src="assignment_expression [70451,70475]" dest="assignment_expression [70162,70186]"/>
  <match src="]: ] [93587,93588]" dest="]: ] [93235,93236]"/>
  <match src="identifier: blockPeriod [103444,103455]" dest="identifier: blockPeriod [103368,103379]"/>
  <match src="solidity: solidity [32231,32239]" dest="solidity: solidity [32231,32239]"/>
  <match src="expression_statement [67327,67358]" dest="expression_statement [67574,67605]"/>
  <match src="function_body [71721,71768]" dest="function_body [71432,71479]"/>
  <match src="primitive_type [37034,37041]" dest="primitive_type [37034,37041]"/>
  <match src="uint256: uint256 [88559,88566]" dest="uint256: uint256 [89407,89414]"/>
  <match src="(: ( [34668,34669]" dest="(: ( [34668,34669]"/>
  <match src="primitive_type [66809,66816]" dest="primitive_type [67062,67069]"/>
  <match src="identifier: priceCumulativeLast [64064,64083]" dest="identifier: priceCumulativeLast [64066,64085]"/>
  <match src="identifier: a [10156,10157]" dest="identifier: a [10156,10157]"/>
  <match src="identifier: decode [23550,23556]" dest="identifier: decode [23550,23556]"/>
  <match src="address: address [67794,67801]" dest="address: address [68008,68015]"/>
  <match src="binary_expression [56381,56402]" dest="binary_expression [56383,56404]"/>
  <match src="primitive_type [96070,96077]" dest="primitive_type [95380,95387]"/>
  <match src="identifier: user [90589,90593]" dest="identifier: user [91614,91618]"/>
  <match src="parameter [67112,67134]" dest="parameter [67365,67387]"/>
  <match src="identifier: _price [107016,107022]" dest="identifier: _price [106940,106946]"/>
  <match src="parameter [12711,12715]" dest="parameter [12711,12715]"/>
  <match src="(: ( [71199,71200]" dest="(: ( [70910,70911]"/>
  <match src="solidity_version_comparison_operator [47570,47573]" dest="solidity_version_comparison_operator [47572,47575]"/>
  <match src="-: - [42269,42270]" dest="-: - [42269,42270]"/>
  <match src="number_literal: 1 [71598,71599]" dest="number_literal: 1 [71309,71310]"/>
  <match src="identifier: userDividendWeight [43536,43554]" dest="identifier: userDividendWeight [43536,43554]"/>
  <match src="identifier: unDividendShard [84966,84981]" dest="identifier: unDividendShard [86266,86281]"/>
  <match src="comment: // taken from https://medium.com/coinmonks/math-in-solidity-part-3-percents-and-proportions-4db014e080b1 [27041,27145]" dest="comment: // taken from https://medium.com/coinmonks/math-in-solidity-part-3-percents-and-proportions-4db014e080b1 [27041,27145]"/>
  <match src="call_expression [44208,44322]" dest="call_expression [44210,44324]"/>
  <match src="parameter [2383,2387]" dest="parameter [2383,2387]"/>
  <match src="identifier: challengerOracleWeight [86008,86030]" dest="identifier: senderRevenue [100138,100151]"/>
  <match src="parameter [2747,2754]" dest="parameter [2747,2754]"/>
  <match src=",: , [36475,36476]" dest=",: , [36475,36476]"/>
  <match src="identifier: targetPool [85964,85974]" dest="identifier: targetPool [87263,87273]"/>
  <match src="identifier: require [72074,72081]" dest="identifier: require [71627,71634]"/>
  <match src="]: ] [54172,54173]" dest="]: ] [54174,54175]"/>
  <match src="(: ( [106936,106937]" dest="(: ( [106860,106861]"/>
  <match src="): ) [28760,28761]" dest="): ) [28760,28761]"/>
  <match src=",: , [68218,68219]" dest=",: , [68339,68340]"/>
  <match src="type_name [76127,76134]" dest="type_name [75643,75650]"/>
  <match src="true [47356,47360]" dest="true [47358,47362]"/>
  <match src="primitive_type [88503,88510]" dest="primitive_type [89351,89358]"/>
  <match src="visibility [45767,45775]" dest="visibility [45769,45777]"/>
  <match src="variable_declaration [98732,98778]" dest="variable_declaration [98938,98984]"/>
  <match src="return_type_definition [15232,15254]" dest="return_type_definition [15232,15254]"/>
  <match src="call_argument [78628,78651]" dest="call_argument [78208,78231]"/>
  <match src="call_expression [106427,106490]" dest="call_expression [106351,106414]"/>
  <match src="identifier: _toBlock [77640,77648]" dest="identifier: _toBlock [77080,77088]"/>
  <match src="identifier: rankPoolIndex [72609,72622]" dest="identifier: rankPoolIndex [72301,72314]"/>
  <match src="if_statement [30798,30868]" dest="if_statement [30798,30868]"/>
  <match src=":=: := [13015,13017]" dest=":=: := [13015,13017]"/>
  <match src="parameter [56312,56327]" dest="parameter [56314,56329]"/>
  <match src="identifier: x [28064,28065]" dest="identifier: x [28064,28065]"/>
  <match src="if_statement [84612,84658]" dest="if_statement [85743,85789]"/>
  <match src="call_argument [80133,80152]" dest="call_argument [80718,80737]"/>
  <match src="pragma_directive [11935,11966]" dest="pragma_directive [11935,11966]"/>
  <match src="identifier: poolRankIndex [72178,72191]" dest="identifier: poolRankIndex [71844,71857]"/>
  <match src="contract_declaration [48880,58627]" dest="contract_declaration [48882,58629]"/>
  <match src="): ) [52844,52845]" dest="): ) [52846,52847]"/>
  <match src="identifier: length [84820,84826]" dest="identifier: length [85951,85957]"/>
  <match src="identifier: pool [84226,84230]" dest="identifier: pool [84755,84759]"/>
  <match src="type_name [39733,39737]" dest="type_name [39733,39737]"/>
  <match src="identifier: require [37646,37653]" dest="identifier: require [37646,37653]"/>
  <match src="if_statement [29007,29114]" dest="if_statement [29007,29114]"/>
  <match src="(: ( [86859,86860]" dest="(: ( [88016,88017]"/>
  <match src="identifier: divuq [35921,35926]" dest="identifier: divuq [35921,35926]"/>
  <match src="): ) [29829,29830]" dest="): ) [29829,29830]"/>
  <match src="call_argument [52742,52754]" dest="call_argument [52744,52756]"/>
  <match src="call_expression [90966,90982]" dest="call_expression [91991,92007]"/>
  <match src="): ) [81302,81303]" dest="): ) [81991,81992]"/>
  <match src="visibility [6846,6854]" dest="visibility [6846,6854]"/>
  <match src="identifier: y [34006,34007]" dest="identifier: y [34006,34007]"/>
  <match src="return_type_definition [42827,42899]" dest="return_type_definition [42827,42899]"/>
  <match src=".: . [99150,99151]" dest=".: . [99314,99315]"/>
  <match src="binary_expression [55670,55691]" dest="binary_expression [55672,55693]"/>
  <match src="(: ( [28010,28011]" dest="(: ( [28010,28011]"/>
  <match src="assignment_expression [59783,59805]" dest="assignment_expression [59785,59807]"/>
  <match src="call_argument [37809,37832]" dest="call_argument [37809,37832]"/>
  <match src="return: return [87425,87431]" dest="return: return [88586,88592]"/>
  <match src="number_literal: 2 [29547,29548]" dest="number_literal: 2 [29547,29548]"/>
  <match src="call_expression [87673,87707]" dest="call_expression [88834,88868]"/>
  <match src="primitive_type [5275,5282]" dest="primitive_type [5275,5282]"/>
  <match src="identifier: newImplementation [470,487]" dest="identifier: newImplementation [470,487]"/>
  <match src="string_literal [36874,36914]" dest="string_literal [36874,36914]"/>
  <match src="expression_statement [41841,41904]" dest="expression_statement [41841,41904]"/>
  <match src="]: ] [72593,72594]" dest="]: ] [72285,72286]"/>
  <match src="uint256: uint256 [66159,66166]" dest="uint256: uint256 [66177,66184]"/>
  <match src="function_definition [8787,8940]" dest="function_definition [8787,8940]"/>
  <match src="number_literal: 32 [41434,41436]" dest="number_literal: 32 [41434,41436]"/>
  <match src="assignment_expression [76356,76511]" dest="assignment_expression [75872,76027]"/>
  <match src="&amp;&amp;: &amp;&amp; [46631,46633]" dest="&amp;&amp;: &amp;&amp; [46873,46875]"/>
  <match src="primitive_type [93932,93939]" dest="primitive_type [93578,93585]"/>
  <match src="}: } [1597,1598]" dest="}: } [1597,1598]"/>
  <match src="variable_declaration_statement [36233,36293]" dest="variable_declaration_statement [36233,36293]"/>
  <match src=",: , [67134,67135]" dest=",: , [67387,67388]"/>
  <match src="binary_expression [33501,33522]" dest="binary_expression [33501,33522]"/>
  <match src="type_name [102361,102368]" dest="type_name [102220,102227]"/>
  <match src="expression_statement [106339,106388]" dest="expression_statement [106263,106312]"/>
  <match src="call_argument [88714,88723]" dest="call_argument [89562,89571]"/>
  <match src="): ) [103229,103230]" dest="): ) [103153,103154]"/>
  <match src="call_argument [75609,75655]" dest="call_argument [75125,75171]"/>
  <match src="address: address [61280,61287]" dest="address: address [61282,61289]"/>
  <match src=".: . [82735,82736]" dest=".: . [83573,83574]"/>
  <match src="}: } [104861,104862]" dest="}: } [104785,104786]"/>
  <match src="&quot;: &quot; [82692,82693]" dest="&quot;: &quot; [83530,83531]"/>
  <match src=",: , [55947,55948]" dest=",: , [55949,55950]"/>
  <match src="identifier: userInfo [64917,64925]" dest="identifier: userInfo [64927,64935]"/>
  <match src="indexed: indexed [59264,59271]" dest="indexed: indexed [59266,59273]"/>
  <match src="comment: // resolution: 1 / 2**112 [32535,32560]" dest="comment: // resolution: 1 / 2**112 [32535,32560]"/>
  <match src="(: ( [37200,37201]" dest="(: ( [37200,37201]"/>
  <match src="identifier: rankPoolIndex [72331,72344]" dest="identifier: rankPoolIndex [72086,72099]"/>
  <match src="state_variable_declaration [59164,59214]" dest="state_variable_declaration [59166,59216]"/>
  <match src="return_statement [11850,11863]" dest="return_statement [11850,11863]"/>
  <match src="[: [ [99973,99974]" dest="[: [ [98678,98679]"/>
  <match src="true [52864,52868]" dest="true [52866,52870]"/>
  <match src="expression_statement [30491,30500]" dest="expression_statement [30491,30500]"/>
  <match src="expression_statement [22385,22483]" dest="expression_statement [22385,22483]"/>
  <match src="member_expression [97733,97757]" dest="member_expression [96498,96522]"/>
  <match src="identifier: _startBlock [45517,45528]" dest="identifier: _startBlock [45519,45530]"/>
  <match src="call_argument [101435,101449]" dest="call_argument [82355,82369]"/>
  <match src="identifier: blockTimestampLast [106578,106596]" dest="identifier: blockTimestampLast [106502,106520]"/>
  <match src="[: [ [51733,51734]" dest="[: [ [51735,51736]"/>
  <match src="[: [ [55097,55098]" dest="[: [ [55099,55100]"/>
  <match src="number_literal: 16 [30693,30695]" dest="number_literal: 16 [30693,30695]"/>
  <match src="struct_member [64094,64121]" dest="struct_member [64096,64123]"/>
  <match src=",: , [40688,40689]" dest=",: , [40688,40689]"/>
  <match src=".: . [106998,106999]" dest=".: . [106922,106923]"/>
  <match src="primitive_type [43367,43374]" dest="primitive_type [43367,43374]"/>
  <match src="state_variable_declaration [49182,49206]" dest="state_variable_declaration [49184,49208]"/>
  <match src="parameter [61301,61315]" dest="parameter [61303,61317]"/>
  <match src="]: ] [90982,90983]" dest="]: ] [92007,92008]"/>
  <match src="+=: += [30690,30692]" dest="+=: += [30690,30692]"/>
  <match src="(: ( [18106,18107]" dest="(: ( [18106,18107]"/>
  <match src="==: == [82229,82231]" dest="==: == [83067,83069]"/>
  <match src="=: = [107909,107910]" dest="=: = [107833,107834]"/>
  <match src="(: ( [55269,55270]" dest="(: ( [55271,55272]"/>
  <match src="bool: bool [89429,89433]" dest="bool: bool [90671,90675]"/>
  <match src="type_name [107304,107310]" dest="type_name [107228,107234]"/>
  <match src="identifier: owner [39462,39467]" dest="identifier: owner [39462,39467]"/>
  <match src="): ) [97432,97433]" dest="): ) [96197,96198]"/>
  <match src=".: . [102704,102705]" dest=".: . [102628,102629]"/>
  <match src="): ) [1038,1039]" dest="): ) [1038,1039]"/>
  <match src="uint256: uint256 [103436,103443]" dest="uint256: uint256 [103360,103367]"/>
  <match src="identifier: _totalSupply [50945,50957]" dest="identifier: _totalSupply [50947,50959]"/>
  <match src="{: { [29420,29421]" dest="{: { [29420,29421]"/>
  <match src="primitive_type [65340,65347]" dest="primitive_type [65350,65357]"/>
  <match src="{: { [67400,67401]" dest="{: { [67647,67648]"/>
  <match src="identifier: fraction [36748,36756]" dest="identifier: fraction [36748,36756]"/>
  <match src="call_argument [7324,7330]" dest="call_argument [7324,7330]"/>
  <match src="identifier: _validRankPoolCount [78212,78231]" dest="identifier: _validRankPoolCount [77345,77364]"/>
  <match src="): ) [99620,99621]" dest="): ) [97710,97711]"/>
  <match src="call_expression [80260,80291]" dest="call_expression [80880,80911]"/>
  <match src="constant: constant [65568,65576]" dest="constant: constant [65578,65586]"/>
  <match src="number_literal: 0 [76339,76340]" dest="number_literal: 0 [75855,75856]"/>
  <match src="identifier: to [62865,62867]" dest="identifier: to [62867,62869]"/>
  <match src="primitive_type [39013,39020]" dest="primitive_type [39013,39020]"/>
  <match src="binary_expression [27761,27766]" dest="binary_expression [27761,27766]"/>
  <match src="function: function [30185,30193]" dest="function: function [30185,30193]"/>
  <match src="variable_declaration_statement [67719,67809]" dest="variable_declaration_statement [67933,68023]"/>
  <match src="variable_declaration_statement [85843,85893]" dest="variable_declaration_statement [87143,87193]"/>
  <match src="uint256: uint256 [77660,77667]" dest="uint256: uint256 [77467,77474]"/>
  <match src="assignment_expression [99782,99859]" dest="assignment_expression [97974,98051]"/>
  <match src="array_access [88825,88836]" dest="array_access [89673,89684]"/>
  <match src="member_expression [98023,98032]" dest="member_expression [96788,96797]"/>
  <match src="call_argument [71028,71046]" dest="call_argument [70739,70757]"/>
  <match src="bytes: bytes [19023,19028]" dest="bytes: bytes [19023,19028]"/>
  <match src="uint256: uint256 [21962,21969]" dest="uint256: uint256 [21962,21969]"/>
  <match src="number_literal: 0xf [31934,31937]" dest="number_literal: 0xf [31934,31937]"/>
  <match src="identifier: self [34856,34860]" dest="identifier: self [34856,34860]"/>
  <match src="identifier: d [27811,27812]" dest="identifier: d [27811,27812]"/>
  <match src="identifier: amount [82548,82554]" dest="identifier: amount [83386,83392]"/>
  <match src="identifier: uq144x112 [33239,33248]" dest="identifier: uq144x112 [33239,33248]"/>
  <match src="=: = [49676,49677]" dest="=: = [49678,49679]"/>
  <match src="identifier: PoolInfo [99941,99949]" dest="identifier: PoolInfo [98646,98654]"/>
  <match src="number_literal: 0 [83722,83723]" dest="number_literal: 0 [85458,85459]"/>
  <match src="[: [ [99090,99091]" dest="[: [ [99258,99259]"/>
  <match src="number_literal: 0 [84071,84072]" dest="number_literal: 0 [84600,84601]"/>
  <match src="]: ] [100903,100904]" dest="]: ] [100966,100967]"/>
  <match src="function: function [62710,62718]" dest="function: function [62712,62720]"/>
  <match src="=: = [76370,76371]" dest="=: = [75886,75887]"/>
  <match src="}: } [78944,78945]" dest="}: } [78733,78734]"/>
  <match src="&lt;=: &lt;= [107178,107180]" dest="&lt;=: &lt;= [107102,107104]"/>
  <match src="array_access [77123,77145]" dest="array_access [77908,77930]"/>
  <match src="identifier: _accumulativeDividend [93483,93504]" dest="identifier: _accumulativeDividend [93131,93152]"/>
  <match src="-: - [27759,27760]" dest="-: - [27759,27760]"/>
  <match src="calldata: calldata [71824,71832]" dest="calldata: calldata [71535,71543]"/>
  <match src="identifier: uq112x112 [34204,34213]" dest="identifier: uq112x112 [34204,34213]"/>
  <match src="parameter [16186,16203]" dest="parameter [16186,16203]"/>
  <match src="true: true [6315,6319]" dest="true: true [6315,6319]"/>
  <match src="call_argument [35818,35830]" dest="call_argument [35818,35830]"/>
  <match src="): ) [67203,67204]" dest="): ) [67456,67457]"/>
  <match src="type_name [6869,6873]" dest="type_name [6869,6873]"/>
  <match src="binary_expression [82113,82222]" dest="binary_expression [82951,83060]"/>
  <match src=",: , [4364,4365]" dest=",: , [4364,4365]"/>
  <match src="public: public [43265,43271]" dest="public: public [43265,43271]"/>
  <match src="expression_statement [70943,71062]" dest="expression_statement [70654,70773]"/>
  <match src="identifier: to [20947,20949]" dest="identifier: to [20947,20949]"/>
  <match src="update_expression [76696,76699]" dest="update_expression [76212,76215]"/>
  <match src="type_name [95379,95386]" dest="type_name [94527,94534]"/>
  <match src="pure: pure [27997,28001]" dest="pure: pure [27997,28001]"/>
  <match src="): ) [61371,61372]" dest="): ) [61373,61374]"/>
  <match src="{: { [76341,76342]" dest="{: { [75857,75858]"/>
  <match src="=: = [99254,99255]" dest="=: = [99414,99415]"/>
  <match src="identifier: timestamp [41417,41426]" dest="identifier: timestamp [41417,41426]"/>
  <match src="visibility [59192,59198]" dest="visibility [59194,59200]"/>
  <match src="array_access [87824,87877]" dest="array_access [88985,89038]"/>
  <match src=",: , [85030,85031]" dest=",: , [86330,86331]"/>
  <match src="(: ( [30881,30882]" dest="(: ( [30881,30882]"/>
  <match src="): ) [89289,89290]" dest="): ) [90214,90215]"/>
  <match src="identifier: _user [102383,102388]" dest="identifier: _user [102242,102247]"/>
  <match src="function_definition [50701,50792]" dest="function_definition [50703,50794]"/>
  <match src="identifier: _pid [84615,84619]" dest="identifier: _pid [85746,85750]"/>
  <match src="): ) [36265,36266]" dest="): ) [36265,36266]"/>
  <match src="number_literal: 2000 [68385,68389]" dest="number_literal: 2000 [68380,68384]"/>
  <match src="block_statement [74875,74961]" dest="block_statement [74746,74833]"/>
  <match src="variable_declaration_statement [89923,89941]" dest="variable_declaration_statement [90226,90275]"/>
  <match src="visibility [21942,21950]" dest="visibility [21942,21950]"/>
  <match src=",: , [40768,40769]" dest=",: , [40768,40769]"/>
  <match src="call_argument [31834,31836]" dest="call_argument [31834,31836]"/>
  <match src="else: else [31877,31881]" dest="else: else [31877,31881]"/>
  <match src="type_name [82789,82796]" dest="type_name [83627,83634]"/>
  <match src="identifier: Replace [85012,85019]" dest="identifier: Replace [86312,86319]"/>
  <match src="expression_statement [99208,99268]" dest="expression_statement [99368,99428]"/>
  <match src="call_argument [78533,78556]" dest="call_argument [78113,78136]"/>
  <match src="]: ] [95741,95742]" dest="]: ] [94889,94890]"/>
  <match src="number_literal: 0x10000 [30641,30648]" dest="number_literal: 0x10000 [30641,30648]"/>
  <match src="call_expression [70522,70628]" dest="call_expression [70233,70339]"/>
  <match src="parameter [67047,67065]" dest="parameter [67300,67318]"/>
  <match src="binary_expression [29896,29901]" dest="binary_expression [29896,29901]"/>
  <match src="parameter [34636,34652]" dest="parameter [34636,34652]"/>
  <match src="{: { [36122,36123]" dest="{: { [36122,36123]"/>
  <match src="number_literal: 4 [29464,29465]" dest="number_literal: 4 [29464,29465]"/>
  <match src="member_expression [94657,94679]" dest="member_expression [94303,94325]"/>
  <match src="expression_statement [95815,95911]" dest="expression_statement [95118,95178]"/>
  <match src="identifier: x [29669,29670]" dest="identifier: x [29669,29670]"/>
  <match src="augmented_assignment_expression [30392,30401]" dest="augmented_assignment_expression [30392,30401]"/>
  <match src="primitive_type [10901,10908]" dest="primitive_type [10901,10908]"/>
  <match src="member_expression [82969,82987]" dest="member_expression [83748,83766]"/>
  <match src="identifier: invitor [98839,98846]" dest="identifier: invitor [99032,99039]"/>
  <match src="{: { [5964,5965]" dest="{: { [5964,5965]"/>
  <match src="uint256: uint256 [6875,6882]" dest="uint256: uint256 [6875,6882]"/>
  <match src="binary_expression [47276,47299]" dest="binary_expression [47278,47301]"/>
  <match src="expression_statement [45243,45256]" dest="expression_statement [45245,45258]"/>
  <match src="uint256: uint256 [45186,45193]" dest="uint256: uint256 [45188,45195]"/>
  <match src=",: , [66612,66613]" dest=",: , [66865,66866]"/>
  <match src="{: { [28020,28021]" dest="{: { [28020,28021]"/>
  <match src="=: = [86339,86340]" dest="=: = [87627,87628]"/>
  <match src="]: ] [55209,55210]" dest="]: ] [55211,55212]"/>
  <match src="uint256: uint256 [96397,96404]" dest="uint256: uint256 [85101,85108]"/>
  <match src="return_type_definition [27249,27279]" dest="return_type_definition [27249,27279]"/>
  <match src="event_paramater [66712,66737]" dest="event_paramater [66965,66990]"/>
  <match src=",: , [59693,59694]" dest=",: , [59695,59696]"/>
  <match src=",: , [9429,9430]" dest=",: , [9429,9430]"/>
  <match src="visibility [40918,40926]" dest="visibility [40918,40926]"/>
  <match src="member_expression [38173,38199]" dest="member_expression [38173,38199]"/>
  <match src="identifier: _newStartBlock [46027,46041]" dest="identifier: _newStartBlock [46029,46043]"/>
  <match src="identifier: i [93344,93345]" dest="identifier: i [92992,92993]"/>
  <match src="expression_statement [97278,97308]" dest="expression_statement [96043,96073]"/>
  <match src="): ) [6633,6634]" dest="): ) [6633,6634]"/>
  <match src="(: ( [24449,24450]" dest="(: ( [24449,24450]"/>
  <match src="type_name [101871,101875]" dest="type_name [85118,85122]"/>
  <match src="primitive_type [43957,43964]" dest="primitive_type [43957,43964]"/>
  <match src="member_expression [99208,99240]" dest="member_expression [99368,99400]"/>
  <match src="binary_expression [70340,70364]" dest="binary_expression [70051,70075]"/>
  <match src="call_argument [38071,38120]" dest="call_argument [38071,38120]"/>
  <match src="returns: returns [41369,41376]" dest="returns: returns [41369,41376]"/>
  <match src="visibility [40113,40121]" dest="visibility [40113,40121]"/>
  <match src="array_access [80211,80225]" dest="array_access [80831,80845]"/>
  <match src="comment: // eth value [63745,63757]" dest="comment: // eth value [63747,63759]"/>
  <match src="): ) [36609,36610]" dest="): ) [36609,36610]"/>
  <match src="primitive_type [51640,51647]" dest="primitive_type [51642,51649]"/>
  <match src="primitive_type [32665,32672]" dest="primitive_type [32665,32672]"/>
  <match src="{: { [45232,45233]" dest="{: { [45234,45235]"/>
  <match src="type_name [18366,18373]" dest="type_name [18366,18373]"/>
  <match src="uint256: uint256 [103402,103409]" dest="uint256: uint256 [103326,103333]"/>
  <match src="returns: returns [53364,53371]" dest="returns: returns [53366,53373]"/>
  <match src="{: { [78274,78275]" dest="{: { [77407,77408]"/>
  <match src="uint256: uint256 [98015,98022]" dest="uint256: uint256 [96780,96787]"/>
  <match src="string_literal [18486,18527]" dest="string_literal [18486,18527]"/>
  <match src="return_type_definition [53364,53378]" dest="return_type_definition [53366,53380]"/>
  <match src="view: view [1904,1908]" dest="view: view [1904,1908]"/>
  <match src="solidity_version: 0.5.0 [41033,41038]" dest="solidity_version: 0.5.0 [41033,41038]"/>
  <match src="return_type_definition [15663,15685]" dest="return_type_definition [15663,15685]"/>
  <match src="parameter [106988,107022]" dest="parameter [106912,106946]"/>
  <match src="identifier: mm [28090,28092]" dest="identifier: mm [28090,28092]"/>
  <match src="using_directive [41178,41201]" dest="using_directive [41178,41201]"/>
  <match src="uint256: uint256 [27442,27449]" dest="uint256: uint256 [27442,27449]"/>
  <match src="binary_expression [9493,9498]" dest="binary_expression [9493,9498]"/>
  <match src="external: external [38816,38824]" dest="external: external [38816,38824]"/>
  <match src="true: true [47356,47360]" dest="true: true [47358,47362]"/>
  <match src="identifier: xx [29011,29013]" dest="identifier: xx [29011,29013]"/>
  <match src="variable_declaration [78392,78410]" dest="variable_declaration [77980,77998]"/>
  <match src="type_name [40136,40143]" dest="type_name [40136,40143]"/>
  <match src="private: private [27499,27506]" dest="private: private [27499,27506]"/>
  <match src="uint256: uint256 [66016,66023]" dest="uint256: uint256 [66028,66035]"/>
  <match src="visibility [32860,32867]" dest="visibility [32860,32867]"/>
  <match src="type_cast_expression [61400,61410]" dest="type_cast_expression [61402,61412]"/>
  <match src="!=: != [55678,55680]" dest="!=: != [55680,55682]"/>
  <match src="comment: // How much LP token the user has provided. [63215,63258]" dest="comment: // How much LP token the user has provided. [63217,63260]"/>
  <match src="identifier: totalReward [103951,103962]" dest="identifier: totalReward [103875,103886]"/>
  <match src="&quot;: &quot; [104852,104853]" dest="&quot;: &quot; [104776,104777]"/>
  <match src=".: . [34311,34312]" dest=".: . [34311,34312]"/>
  <match src="state_mutability [88463,88467]" dest="state_mutability [89311,89315]"/>
  <match src="comment: // * 2^0 [34809,34817]" dest="comment: // * 2^0 [34809,34817]"/>
  <match src="identifier: _marketingFundDividend [46210,46232]" dest="identifier: _marketingFundDividend [46212,46234]"/>
  <match src=".: . [84819,84820]" dest=".: . [85950,85951]"/>
  <match src="): ) [42168,42169]" dest="): ) [42168,42169]"/>
  <match src=".: . [101535,101536]" dest=".: . [101270,101271]"/>
  <match src="block_statement [30813,30868]" dest="block_statement [30813,30868]"/>
  <match src="call_argument [107815,107844]" dest="call_argument [107739,107768]"/>
  <match src="call_argument [69715,69716]" dest="call_argument [69426,69427]"/>
  <match src="(: ( [102993,102994]" dest="(: ( [102917,102918]"/>
  <match src="type_name [64959,64969]" dest="type_name [64969,64979]"/>
  <match src="modifier_invocation [45547,45556]" dest="modifier_invocation [45549,45558]"/>
  <match src="identifier: farmMintShard [76192,76205]" dest="identifier: farmMintShard [75708,75721]"/>
  <match src="=: = [90919,90920]" dest="=: = [91944,91945]"/>
  <match src="{: { [1791,1792]" dest="{: { [1791,1792]"/>
  <match src="primitive_type [8113,8120]" dest="primitive_type [8113,8120]"/>
  <match src="expression_statement [101712,101752]" dest="expression_statement [102134,102174]"/>
  <match src="uint256: uint256 [65340,65347]" dest="uint256: uint256 [65350,65357]"/>
  <match src="identifier: token [20709,20714]" dest="identifier: token [20709,20714]"/>
  <match src="): ) [83605,83606]" dest="): ) [85353,85354]"/>
  <match src="}: } [76633,76634]" dest="}: } [76149,76150]"/>
  <match src="identifier: shardReserve [97130,97142]" dest="identifier: shardReserve [95895,95907]"/>
  <match src="type_name [51405,51412]" dest="type_name [51407,51414]"/>
  <match src="primitive_type [106009,106015]" dest="primitive_type [105933,105939]"/>
  <match src="struct_member [63946,63976]" dest="struct_member [63948,63978]"/>
  <match src="user_defined_type [33239,33248]" dest="user_defined_type [33239,33248]"/>
  <match src="identifier: amountfeeRateDenominator [45064,45088]" dest="identifier: amountfeeRateDenominator [45066,45090]"/>
  <match src="identifier: user [95164,95168]" dest="identifier: user [82629,82633]"/>
  <match src="identifier: _x [33722,33724]" dest="identifier: _x [33722,33724]"/>
  <match src="augmented_assignment_expression [27573,27582]" dest="augmented_assignment_expression [27573,27582]"/>
  <match src="number_literal: 0 [28782,28783]" dest="number_literal: 0 [28782,28783]"/>
  <match src="{: { [83724,83725]" dest="{: { [85460,85461]"/>
  <match src="=: = [7298,7299]" dest="=: = [7298,7299]"/>
  <match src="array_access [89123,89144]" dest="array_access [89971,89992]"/>
  <match src="identifier: isContractSender [90602,90618]" dest="identifier: isContractSender [91627,91643]"/>
  <match src="identifier: rankIndex [66728,66737]" dest="identifier: rankIndex [66981,66990]"/>
  <match src="(: ( [16169,16170]" dest="(: ( [16169,16170]"/>
  <match src="identifier: user [66608,66612]" dest="identifier: user [66861,66865]"/>
  <match src="state_mutability [5935,5939]" dest="state_mutability [5935,5939]"/>
  <match src="if: if [47273,47275]" dest="if: if [47275,47277]"/>
  <match src="expression_statement [51471,51514]" dest="expression_statement [51473,51516]"/>
  <match src="identifier: _pid [81506,81510]" dest="identifier: _pid [97853,97857]"/>
  <match src="&gt;&gt;=: &gt;&gt;= [31574,31577]" dest="&gt;&gt;=: &gt;&gt;= [31574,31577]"/>
  <match src="expression_statement [106147,106196]" dest="expression_statement [106071,106120]"/>
  <match src="uint256: uint256 [66549,66556]" dest="uint256: uint256 [66802,66809]"/>
  <match src="identifier: self [36194,36198]" dest="identifier: self [36194,36198]"/>
  <match src=".: . [42103,42104]" dest=".: . [42103,42104]"/>
  <match src="identifier: i [95795,95796]" dest="identifier: i [94943,94944]"/>
  <match src="}: } [101758,101759]" dest="}: } [102180,102181]"/>
  <match src="): ) [38037,38038]" dest="): ) [38037,38038]"/>
  <match src="identifier: denominator [36784,36795]" dest="identifier: denominator [36784,36795]"/>
  <match src="number_literal: 0 [103424,103425]" dest="number_literal: 0 [103348,103349]"/>
  <match src="uint112: uint112 [34973,34980]" dest="uint112: uint112 [34973,34980]"/>
  <match src="binary_expression [61741,61757]" dest="binary_expression [61743,61759]"/>
  <match src="if_statement [76317,76645]" dest="if_statement [75833,76161]"/>
  <match src="uint256: uint256 [76959,76966]" dest="uint256: uint256 [76475,76482]"/>
  <match src="variable_declaration_statement [73302,73346]" dest="variable_declaration_statement [73067,73111]"/>
  <match src="identifier: msg [47342,47345]" dest="identifier: msg [47344,47347]"/>
  <match src="primitive_type [44130,44137]" dest="primitive_type [44132,44139]"/>
  <match src="identifier: other [35003,35008]" dest="identifier: other [35003,35008]"/>
  <match src="variable_declaration [99023,99042]" dest="variable_declaration [99204,99223]"/>
  <match src="type_name [1403,1408]" dest="type_name [1403,1408]"/>
  <match src="parameter [104528,104535]" dest="parameter [104452,104459]"/>
  <match src="expression_statement [31363,31371]" dest="expression_statement [31363,31371]"/>
  <match src="identifier: Transfer [55261,55269]" dest="identifier: Transfer [55263,55271]"/>
  <match src="binary_expression [60379,60395]" dest="binary_expression [60381,60397]"/>
  <match src="binary_expression [29574,29583]" dest="binary_expression [29574,29583]"/>
  <match src="event_paramater [39943,39961]" dest="event_paramater [39943,39961]"/>
  <match src="parameter [88503,88528]" dest="parameter [89351,89376]"/>
  <match src="call_argument [31306,31311]" dest="call_argument [31306,31311]"/>
  <match src="identifier: fromBlock [58905,58914]" dest="identifier: fromBlock [58907,58916]"/>
  <match src="public: public [1040,1046]" dest="public: public [1040,1046]"/>
  <match src=",: , [15624,15625]" dest=",: , [15624,15625]"/>
  <match src="(: ( [49019,49020]" dest="(: ( [49021,49022]"/>
  <match src="expression_statement [14090,14164]" dest="expression_statement [14090,14164]"/>
  <match src="function_definition [17727,18149]" dest="function_definition [17727,18149]"/>
  <match src="uint256: uint256 [88397,88404]" dest="uint256: uint256 [89245,89252]"/>
  <match src="uint112: uint112 [40309,40316]" dest="uint112: uint112 [40309,40316]"/>
  <match src="}: } [102775,102776]" dest="}: } [102699,102700]"/>
  <match src="assignment_expression [105224,105279]" dest="assignment_expression [105148,105203]"/>
  <match src="function_body [59666,59711]" dest="function_body [59668,59713]"/>
  <match src="identifier: r [27815,27816]" dest="identifier: r [27815,27816]"/>
  <match src=",: , [86465,86466]" dest=",: , [87753,87754]"/>
  <match src="returns: returns [3484,3491]" dest="returns: returns [3484,3491]"/>
  <match src="identifier: add [76600,76603]" dest="identifier: add [76116,76119]"/>
  <match src="variable_declaration_statement [100441,100489]" dest="variable_declaration_statement [99784,99849]"/>
  <match src="unary_expression [72565,72588]" dest="unary_expression [72257,72280]"/>
  <match src="type_name [60658,60665]" dest="type_name [60660,60667]"/>
  <match src="call_argument [55769,55770]" dest="call_argument [55771,55772]"/>
  <match src="identifier: pool [92387,92391]" dest="identifier: pool [87299,87303]"/>
  <match src="identifier: fromBlock [62363,62372]" dest="identifier: fromBlock [62365,62374]"/>
  <match src="address: address [104596,104603]" dest="address: address [104520,104527]"/>
  <match src="identifier: transfer [39152,39160]" dest="identifier: transfer [39152,39160]"/>
  <match src="identifier: uq112x112 [37799,37808]" dest="identifier: uq112x112 [37799,37808]"/>
  <match src="number_literal: 0 [31840,31841]" dest="number_literal: 0 [31840,31841]"/>
  <match src="uint256: uint256 [5264,5271]" dest="uint256: uint256 [5264,5271]"/>
  <match src="member_expression [42533,42575]" dest="member_expression [42533,42575]"/>
  <match src="(: ( [7757,7758]" dest="(: ( [7757,7758]"/>
  <match src="primitive_type [8811,8818]" dest="primitive_type [8811,8818]"/>
  <match src="': ' [28222,28223]" dest="': ' [28222,28223]"/>
  <match src="): ) [45528,45529]" dest="): ) [45530,45531]"/>
  <match src="]: ] [62515,62516]" dest="]: ] [62517,62518]"/>
  <match src="type_name [99941,99949]" dest="type_name [98646,98654]"/>
  <match src="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * reverting when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [8948,9401]" dest="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * reverting when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [8948,9401]"/>
  <match src=",: , [31311,31312]" dest=",: , [31311,31312]"/>
  <match src=":: : [105575,105576]" dest=":: : [105499,105500]"/>
  <match src="override_specifier [50900,50908]" dest="override_specifier [50902,50910]"/>
  <match src="user_defined_type [1101,1118]" dest="user_defined_type [1101,1118]"/>
  <match src="if: if [30878,30880]" dest="if: if [30878,30880]"/>
  <match src="external: external [40410,40418]" dest="external: external [40410,40418]"/>
  <match src=".: . [22448,22449]" dest=".: . [22448,22449]"/>
  <match src="primitive_type [55761,55768]" dest="primitive_type [55763,55770]"/>
  <match src="indexed: indexed [38562,38569]" dest="indexed: indexed [38562,38569]"/>
  <match src="event_definition [38597,38666]" dest="event_definition [38597,38666]"/>
  <match src="indexed: indexed [66622,66629]" dest="indexed: indexed [66875,66882]"/>
  <match src="number_literal: 8 [67842,67843]" dest="number_literal: 8 [68094,68095]"/>
  <match src="type_name [59950,59957]" dest="type_name [59952,59959]"/>
  <match src="assembly_statement [19652,19809]" dest="assembly_statement [19652,19809]"/>
  <match src="parameter [96982,97003]" dest="parameter [95747,95768]"/>
  <match src="primitive_type [88656,88663]" dest="primitive_type [89504,89511]"/>
  <match src="binary_expression [27686,27691]" dest="binary_expression [27686,27691]"/>
  <match src="[: [ [82511,82512]" dest="[: [ [83349,83350]"/>
  <match src="call_expression [22046,22143]" dest="call_expression [22046,22143]"/>
  <match src="returns: returns [51093,51100]" dest="returns: returns [51095,51102]"/>
  <match src="identifier: _msgSender [24294,24304]" dest="identifier: _msgSender [24294,24304]"/>
  <match src=",: , [89663,89664]" dest=",: , [90905,90906]"/>
  <match src="call_argument [103027,103037]" dest="call_argument [102951,102961]"/>
  <match src="{: { [77012,77013]" dest="{: { [76528,76529]"/>
  <match src="assignment_expression [41717,41757]" dest="assignment_expression [41717,41757]"/>
  <match src="assignment_expression [62499,62566]" dest="assignment_expression [62501,62568]"/>
  <match src="(: ( [105864,105865]" dest="(: ( [105788,105789]"/>
  <match src="call_argument [47463,47483]" dest="call_argument [47465,47485]"/>
  <match src="variable_declaration_statement [8198,8216]" dest="variable_declaration_statement [8198,8216]"/>
  <match src="): ) [82727,82728]" dest="): ) [83565,83566]"/>
  <match src="variable_declaration_statement [93282,93305]" dest="variable_declaration_statement [92930,92953]"/>
  <match src=".: . [47096,47097]" dest=".: . [46483,46484]"/>
  <match src="expression_statement [10143,10173]" dest="expression_statement [10143,10173]"/>
  <match src="number_literal: 8 [30754,30755]" dest="number_literal: 8 [30754,30755]"/>
  <match src="identifier: _pool [97288,97293]" dest="identifier: _pool [96053,96058]"/>
  <match src="function_definition [92516,93870]" dest="function_definition [92164,93516]"/>
  <match src="pragma_directive [108673,108696]" dest="pragma_directive [108597,108620]"/>
  <match src="type_cast_expression [34995,35025]" dest="type_cast_expression [34995,35025]"/>
  <match src="number_literal: 10 [43408,43410]" dest="number_literal: 10 [43408,43410]"/>
  <match src=".: . [90367,90368]" dest=".: . [91440,91441]"/>
  <match src="type_name [46256,46263]" dest="type_name [46258,46265]"/>
  <match src="): ) [67806,67807]" dest="): ) [68020,68021]"/>
  <match src="comment: // File: @openzeppelin/contracts/access/Ownable.sol [24639,24690]" dest="comment: // File: @openzeppelin/contracts/access/Ownable.sol [24639,24690]"/>
  <match src="call_expression [38079,38119]" dest="call_expression [38079,38119]"/>
  <match src="primitive_type [63316,63323]" dest="primitive_type [63318,63325]"/>
  <match src="(: ( [52023,52024]" dest="(: ( [52025,52026]"/>
  <match src="identifier: Transfer [4097,4105]" dest="identifier: Transfer [4097,4105]"/>
  <match src="identifier: a [5674,5675]" dest="identifier: a [5674,5675]"/>
  <match src="private: private [49133,49140]" dest="private: private [49135,49142]"/>
  <match src="function: function [12651,12659]" dest="function: function [12651,12659]"/>
  <match src="number_literal: 0 [89665,89666]" dest="number_literal: 0 [90907,90908]"/>
  <match src="member_expression [34856,34863]" dest="member_expression [34856,34863]"/>
  <match src="variable_declaration [28983,28992]" dest="variable_declaration [28983,28992]"/>
  <match src="parameter [7268,7275]" dest="parameter [7268,7275]"/>
  <match src="identifier: blackList [66135,66144]" dest="identifier: blackList [66153,66162]"/>
  <match src="]: ] [93652,93653]" dest="]: ] [93300,93301]"/>
  <match src="variable_declaration_statement [25541,25574]" dest="variable_declaration_statement [25541,25574]"/>
  <match src="identifier: pop [87906,87909]" dest="identifier: pop [89067,89070]"/>
  <match src="': ' [36048,36049]" dest="': ' [36048,36049]"/>
  <match src="call_argument [58777,58782]" dest="call_argument [58779,58784]"/>
  <match src="string [36337,36366]" dest="string [36337,36366]"/>
  <match src="(: ( [60068,60069]" dest="(: ( [60070,60071]"/>
  <match src="address: address [55681,55688]" dest="address: address [55683,55690]"/>
  <match src="address: address [96153,96160]" dest="address: address [95463,95470]"/>
  <match src="member_expression [103967,103985]" dest="member_expression [103891,103909]"/>
  <match src="call_expression [37267,37312]" dest="call_expression [37267,37312]"/>
  <match src="assignment_expression [97546,97570]" dest="assignment_expression [96311,96335]"/>
  <match src="primitive_type [7223,7230]" dest="primitive_type [7223,7230]"/>
  <match src="identifier: OwnershipTransferred [26874,26894]" dest="identifier: OwnershipTransferred [26874,26894]"/>
  <match src="identifier: a [9545,9546]" dest="identifier: a [9545,9546]"/>
  <match src="return: return [104686,104692]" dest="return: return [104610,104616]"/>
  <match src="identifier: h [27393,27394]" dest="identifier: h [27393,27394]"/>
  <match src="binary_expression [69354,69383]" dest="binary_expression [69065,69094]"/>
  <match src="}: } [99930,99931]" dest="}: } [98122,98123]"/>
  <match src="identifier: add [104080,104083]" dest="identifier: add [104004,104007]"/>
  <match src="identifier: b [5923,5924]" dest="identifier: b [5923,5924]"/>
  <match src=",: , [75890,75891]" dest=",: , [75406,75407]"/>
  <match src="identifier: _pid [47247,47251]" dest="identifier: _pid [47249,47253]"/>
  <match src="function_definition [39143,39209]" dest="function_definition [39143,39209]"/>
  <match src="call_argument [86437,86447]" dest="call_argument [87725,87735]"/>
  <match src="pragma: pragma [27013,27019]" dest="pragma: pragma [27013,27019]"/>
  <match src="primitive_type [18776,18781]" dest="primitive_type [18776,18781]"/>
  <match src="if_statement [69516,69632]" dest="if_statement [69227,69343]"/>
  <match src="call_argument [26539,26540]" dest="call_argument [26539,26540]"/>
  <match src="{: { [104536,104537]" dest="{: { [104460,104461]"/>
  <match src="=: = [55871,55872]" dest="=: = [55873,55874]"/>
  <match src="identifier: _toBlock [103257,103265]" dest="identifier: _toBlock [103181,103189]"/>
  <match src="number_literal: 0 [107123,107124]" dest="number_literal: 0 [107047,107048]"/>
  <match src="call_argument [15298,15330]" dest="call_argument [15298,15330]"/>
  <match src="*: * [27788,27789]" dest="*: * [27788,27789]"/>
  <match src="): ) [52665,52666]" dest="): ) [52667,52668]"/>
  <match src="variable_declaration_statement [78811,78863]" dest="variable_declaration_statement [77527,77579]"/>
  <match src="uint256: uint256 [66059,66066]" dest="uint256: uint256 [66073,66080]"/>
  <match src="member_expression [106802,106814]" dest="member_expression [106726,106738]"/>
  <match src="member_expression [82316,82326]" dest="member_expression [83154,83164]"/>
  <match src="identifier: Transfer [56670,56678]" dest="identifier: Transfer [56672,56680]"/>
  <match src="type_name [8102,8109]" dest="type_name [8102,8109]"/>
  <match src="event: event [4328,4333]" dest="event: event [4328,4333]"/>
  <match src="primitive_type [34227,34233]" dest="primitive_type [34227,34233]"/>
  <match src="]: ] [92819,92820]" dest="]: ] [92467,92468]"/>
  <match src="&quot;: &quot; [23621,23622]" dest="&quot;: &quot; [23621,23622]"/>
  <match src=",: , [16298,16299]" dest=",: , [16298,16299]"/>
  <match src="!=: != [61744,61746]" dest="!=: != [61746,61748]"/>
  <match src="}: } [26947,26948]" dest="}: } [26947,26948]"/>
  <match src="expression_statement [80689,80870]" dest="expression_statement [81376,81557]"/>
  <match src="): ) [83674,83675]" dest="): ) [85418,85419]"/>
  <match src="identifier: r [29458,29459]" dest="identifier: r [29458,29459]"/>
  <match src="}: } [6330,6331]" dest="}: } [6330,6331]"/>
  <match src="identifier: _pid [99473,99477]" dest="identifier: _pid [97563,97567]"/>
  <match src="identifier: _toIndex [92576,92584]" dest="identifier: _toIndex [92224,92232]"/>
  <match src="call_argument [80283,80290]" dest="call_argument [80903,80910]"/>
  <match src="state_variable_declaration [217,247]" dest="state_variable_declaration [217,247]"/>
  <match src="): ) [88978,88979]" dest="): ) [89826,89827]"/>
  <match src="(: ( [21895,21896]" dest="(: ( [21895,21896]"/>
  <match src="): ) [108446,108447]" dest="): ) [108370,108371]"/>
  <match src="identifier: success [19111,19118]" dest="identifier: success [19111,19118]"/>
  <match src="binary_expression [60791,60810]" dest="binary_expression [60793,60812]"/>
  <match src="address: address [81891,81898]" dest="address: address [82723,82730]"/>
  <match src="): ) [97757,97758]" dest="): ) [96522,96523]"/>
  <match src="variable_declaration [107304,107325]" dest="variable_declaration [107228,107249]"/>
  <match src="number_literal: 0 [75654,75655]" dest="number_literal: 0 [75170,75171]"/>
  <match src="call_argument [96806,96813]" dest="call_argument [85298,85305]"/>
  <match src="uint256: uint256 [2349,2356]" dest="uint256: uint256 [2349,2356]"/>
  <match src="identifier: upper [35595,35600]" dest="identifier: upper [35595,35600]"/>
  <match src="identifier: r [31284,31285]" dest="identifier: r [31284,31285]"/>
  <match src="(: ( [98223,98224]" dest="(: ( [96988,96989]"/>
  <match src="address: address [66681,66688]" dest="address: address [66934,66941]"/>
  <match src="&quot;: &quot; [18526,18527]" dest="&quot;: &quot; [18526,18527]"/>
  <match src="unary_expression [31508,31510]" dest="unary_expression [31508,31510]"/>
  <match src="type_name [51695,51702]" dest="type_name [51697,51704]"/>
  <match src="type_name [72117,72124]" dest="type_name [71751,71758]"/>
  <match src="parameter [54819,54833]" dest="parameter [54821,54835]"/>
  <match src="}: } [31659,31660]" dest="}: } [31659,31660]"/>
  <match src="identifier: updateTokenOracle [106919,106936]" dest="identifier: updateTokenOracle [106843,106860]"/>
  <match src="false [59906,59911]" dest="false [59908,59913]"/>
  <match src="}: } [30867,30868]" dest="}: } [30867,30868]"/>
  <match src="(: ( [36513,36514]" dest="(: ( [36513,36514]"/>
  <match src="primitive_type [103118,103125]" dest="primitive_type [103042,103049]"/>
  <match src="{: { [97434,97435]" dest="{: { [96199,96200]"/>
  <match src="number_literal: 0 [32140,32141]" dest="number_literal: 0 [32140,32141]"/>
  <match src="identifier: r [29704,29705]" dest="identifier: r [29704,29705]"/>
  <match src="}: } [62631,62632]" dest="}: } [62633,62634]"/>
  <match src=",: , [8878,8879]" dest=",: , [8878,8879]"/>
  <match src="parameter [58588,58602]" dest="parameter [58590,58604]"/>
  <match src="visibility [71695,71703]" dest="visibility [71406,71414]"/>
  <match src="add: add [19753,19756]" dest="add: add [19753,19756]"/>
  <match src="identifier: div [102705,102708]" dest="identifier: div [102629,102632]"/>
  <match src="identifier: getRewardToken [102865,102879]" dest="identifier: getRewardToken [102789,102803]"/>
  <match src="inheritance_specifier [48907,48913]" dest="inheritance_specifier [48909,48915]"/>
  <match src="(: ( [28718,28719]" dest="(: ( [28718,28719]"/>
  <match src="identifier: size [13057,13061]" dest="identifier: size [13057,13061]"/>
  <match src="parameter [40309,40325]" dest="parameter [40309,40325]"/>
  <match src="identifier: length [90368,90374]" dest="identifier: length [91441,91447]"/>
  <match src="if: if [62276,62278]" dest="if: if [62278,62280]"/>
  <match src="identifier: result [36514,36520]" dest="identifier: result [36514,36520]"/>
  <match src="parameter [20827,20840]" dest="parameter [20827,20840]"/>
  <match src="number_literal: 255 [38167,38170]" dest="number_literal: 255 [38167,38170]"/>
  <match src="modifier_invocation [71890,71899]" dest="modifier_invocation [71601,71610]"/>
  <match src="parameter [55618,55632]" dest="parameter [55620,55634]"/>
  <match src="binary_expression [44230,44281]" dest="binary_expression [44232,44283]"/>
  <match src="&quot;: &quot; [18486,18487]" dest="&quot;: &quot; [18486,18487]"/>
  <match src="let: let [19684,19687]" dest="let: let [19684,19687]"/>
  <match src="array_access [82113,82135]" dest="array_access [82951,82973]"/>
  <match src="comment: // solhint-disable-next-line avoid-low-level-calls, avoid-call-value [14176,14244]" dest="comment: // solhint-disable-next-line avoid-low-level-calls, avoid-call-value [14176,14244]"/>
  <match src="ternary_expression [34424,34454]" dest="ternary_expression [34424,34454]"/>
  <match src="identifier: x [30665,30666]" dest="identifier: x [30665,30666]"/>
  <match src="comment: // Seven iterations should be enough [29837,29873]" dest="comment: // Seven iterations should be enough [29837,29873]"/>
  <match src="type_name [46289,46296]" dest="type_name [46291,46298]"/>
  <match src="member_expression [84420,84430]" dest="member_expression [84955,84965]"/>
  <match src="&quot;: &quot; [17894,17895]" dest="&quot;: &quot; [17894,17895]"/>
  <match src="call_argument [59604,59611]" dest="call_argument [59606,59613]"/>
  <match src="): ) [90483,90484]" dest="): ) [91522,91523]"/>
  <match src="assignment_expression [44384,44422]" dest="assignment_expression [44386,44424]"/>
  <match src="function_body [46278,47202]" dest="function_body [46280,47204]"/>
  <match src="number_literal: 2 [30913,30914]" dest="number_literal: 2 [30913,30914]"/>
  <match src="[: [ [88510,88511]" dest="[: [ [89358,89359]"/>
  <match src="for: for [93315,93318]" dest="for: for [92963,92966]"/>
  <match src="call_argument [71120,71542]" dest="call_argument [70831,71253]"/>
  <match src="expression_statement [70823,70849]" dest="expression_statement [70534,70560]"/>
  <match src="comment: // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522 [6115,6186]" dest="comment: // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522 [6115,6186]"/>
  <match src="block_statement [19473,19824]" dest="block_statement [19473,19824]"/>
  <match src="comment: // relationship info about invitation [64699,64736]" dest="comment: // relationship info about invitation [64705,64742]"/>
  <match src="primitive_type [77811,77818]" dest="primitive_type [78932,78939]"/>
  <match src="external: external [39185,39193]" dest="external: external [39185,39193]"/>
  <match src="identifier: tokenToEthPairInfo [97739,97757]" dest="identifier: tokenToEthPairInfo [96504,96522]"/>
  <match src="return: return [33486,33492]" dest="return: return [33486,33492]"/>
  <match src="): ) [76009,76010]" dest="): ) [75525,75526]"/>
  <match src="variable_declaration [8198,8207]" dest="variable_declaration [8198,8207]"/>
  <match src="solidity_pragma_token [32231,32247]" dest="solidity_pragma_token [32231,32247]"/>
  <match src="=: = [106233,106234]" dest="=: = [106157,106158]"/>
  <match src="identifier: _x [36118,36120]" dest="identifier: _x [36118,36120]"/>
  <match src="array_access [80326,80352]" dest="array_access [80946,80972]"/>
  <match src="primitive_type [5646,5653]" dest="primitive_type [5646,5653]"/>
  <match src="uint224: uint224 [36524,36531]" dest="uint224: uint224 [36524,36531]"/>
  <match src="(: ( [77351,77352]" dest="(: ( [76791,76792]"/>
  <match src="primitive_type [34279,34286]" dest="primitive_type [34279,34286]"/>
  <match src="identifier: setTokenAmountLimit [44593,44612]" dest="identifier: setTokenAmountLimit [44595,44614]"/>
  <match src="is: is [43007,43009]" dest="is: is [43007,43009]"/>
  <match src="call_argument [57272,57273]" dest="call_argument [57274,57275]"/>
  <match src="identifier: pool [81842,81846]" dest="identifier: pool [82674,82678]"/>
  <match src="if: if [30957,30959]" dest="if: if [30957,30959]"/>
  <match src="): ) [85769,85770]" dest="): ) [87069,87070]"/>
  <match src="parameter [69280,69310]" dest="parameter [68991,69021]"/>
  <match src="identifier: poolInfo [78309,78317]" dest="identifier: poolInfo [77442,77450]"/>
  <match src="return_type_definition [95317,95508]" dest="return_type_definition [94465,94656]"/>
  <match src="type_name [85903,85910]" dest="type_name [97799,97806]"/>
  <match src="call_argument [25647,25648]" dest="call_argument [25647,25648]"/>
  <match src="solidity_version_comparison_operator [30023,30026]" dest="solidity_version_comparison_operator [30023,30026]"/>
  <match src=".: . [100819,100820]" dest=".: . [100805,100806]"/>
  <match src="(: ( [41828,41829]" dest="(: ( [41828,41829]"/>
  <match src="&gt;&gt;=: &gt;&gt;= [30493,30496]" dest="&gt;&gt;=: &gt;&gt;= [30493,30496]"/>
  <match src="identifier: amount [63207,63213]" dest="identifier: amount [63209,63215]"/>
  <match src="): ) [1420,1421]" dest="): ) [1420,1421]"/>
  <match src="=: = [108287,108288]" dest="=: = [108211,108212]"/>
  <match src="call_expression [46729,46765]" dest="call_expression [46971,47007]"/>
  <match src="}: } [96314,96315]" dest="}: } [95624,95625]"/>
  <match src="identifier: require [23538,23545]" dest="identifier: require [23538,23545]"/>
  <match src="identifier: price [106522,106527]" dest="identifier: price [106446,106451]"/>
  <match src="uint256: uint256 [90743,90750]" dest="uint256: uint256 [91768,91775]"/>
  <match src="binary_expression [82640,82668]" dest="binary_expression [83478,83506]"/>
  <match src="bool: bool [39293,39297]" dest="bool: bool [39293,39297]"/>
  <match src="tuple_expression [6286,6296]" dest="tuple_expression [6286,6296]"/>
  <match src="identifier: sub [87234,87237]" dest="identifier: sub [88395,88398]"/>
  <match src="identifier: pool [93396,93400]" dest="identifier: pool [93044,93048]"/>
  <match src="call_expression [46976,47007]" dest="call_expression [46363,46394]"/>
  <match src="primitive_type [38929,38936]" dest="primitive_type [38929,38936]"/>
  <match src="parameter [39161,39171]" dest="parameter [39161,39171]"/>
  <match src="block_statement [46370,46587]" dest="block_statement [46612,46829]"/>
  <match src="(: ( [107396,107397]" dest="(: ( [107320,107321]"/>
  <match src="function_body [104990,105698]" dest="function_body [104914,105622]"/>
  <match src="identifier: _pending [89010,89018]" dest="identifier: _pending [89858,89866]"/>
  <match src="for_statement [88773,88905]" dest="for_statement [89621,89753]"/>
  <match src="block_statement [80944,81319]" dest="block_statement [81631,82008]"/>
  <match src="(: ( [52786,52787]" dest="(: ( [52788,52789]"/>
  <match src="identifier: _price [107973,107979]" dest="identifier: _price [107897,107903]"/>
  <match src="=: = [80705,80706]" dest="=: = [81392,81393]"/>
  <match src="identifier: poolCount [88666,88675]" dest="identifier: poolCount [89514,89523]"/>
  <match src="if_statement [80606,81457]" dest="if_statement [81291,82146]"/>
  <match src="primitive_type [5595,5602]" dest="primitive_type [5595,5602]"/>
  <match src="else: else [70641,70645]" dest="else: else [70352,70356]"/>
  <match src="pragma_directive [46,69]" dest="pragma_directive [46,69]"/>
  <match src="identifier: h [28051,28052]" dest="identifier: h [28051,28052]"/>
  <match src="uint256: uint256 [6514,6521]" dest="uint256: uint256 [6514,6521]"/>
  <match src="variable_declaration_statement [34973,35026]" dest="variable_declaration_statement [34973,35026]"/>
  <match src="): ) [22317,22318]" dest="): ) [22317,22318]"/>
  <match src="identifier: poolCount [88793,88802]" dest="identifier: poolCount [89641,89650]"/>
  <match src="identifier: sparePoolCount [87956,87970]" dest="identifier: sparePoolCount [89117,89131]"/>
  <match src=".: . [83294,83295]" dest=".: . [84279,84280]"/>
  <match src="identifier: account [12679,12686]" dest="identifier: account [12679,12686]"/>
  <match src="): ) [51062,51063]" dest="): ) [51064,51065]"/>
  <match src="member_expression [87673,87699]" dest="member_expression [88834,88860]"/>
  <match src="if: if [97322,97324]" dest="if: if [96087,96089]"/>
  <match src="identifier: getTargetTokenInSwap [104415,104435]" dest="identifier: getTargetTokenInSwap [104339,104359]"/>
  <match src="member_expression [107397,107421]" dest="member_expression [107321,107345]"/>
  <match src="): ) [1925,1926]" dest="): ) [1925,1926]"/>
  <match src="if_statement [101572,101690]" dest="if_statement [101309,102017]"/>
  <match src="member_expression [81835,81876]" dest="member_expression [82667,82708]"/>
  <match src="identifier: _toBlock [103283,103291]" dest="identifier: _toBlock [103207,103215]"/>
  <match src="function: function [109467,109475]" dest="function: function [109391,109399]"/>
  <match src="call_argument [70297,70306]" dest="call_argument [70008,70017]"/>
  <match src=",: , [62683,62684]" dest=",: , [62685,62686]"/>
  <match src="(: ( [42737,42738]" dest="(: ( [42737,42738]"/>
  <match src="}: } [19895,19896]" dest="}: } [19895,19896]"/>
  <match src="=: = [55106,55107]" dest="=: = [55108,55109]"/>
  <match src="call_argument [69354,69399]" dest="call_argument [69065,69110]"/>
  <match src="type_name [63877,63881]" dest="type_name [63879,63883]"/>
  <match src="identifier: currentRankCount [74188,74204]" dest="identifier: currentRankCount [73919,73935]"/>
  <match src="comment: /**      * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * IMPORTANT: Beware that changing an allowance with this method brings the risk      * that someone may use both the old and the new allowance by unfortunate      * transaction ordering. One possible solution to mitigate this race      * condition is to first reduce the spender's allowance to 0 and set the      * desired value afterwards:      * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      *      * Emits an {Approval} event.      */ [2764,3419]" dest="comment: /**      * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * IMPORTANT: Beware that changing an allowance with this method brings the risk      * that someone may use both the old and the new allowance by unfortunate      * transaction ordering. One possible solution to mitigate this race      * condition is to first reduce the spender's allowance to 0 and set the      * desired value afterwards:      * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      *      * Emits an {Approval} event.      */ [2764,3419]"/>
  <match src="): ) [67270,67271]" dest="): ) [67517,67518]"/>
  <match src="state_variable_declaration [64959,64987]" dest="state_variable_declaration [64969,64997]"/>
  <match src=",: , [92566,92567]" dest=",: , [92214,92215]"/>
  <match src="(: ( [71597,71598]" dest="(: ( [71308,71309]"/>
  <match src="augmented_assignment_expression [32097,32104]" dest="augmented_assignment_expression [32097,32104]"/>
  <match src="function_definition [39506,39621]" dest="function_definition [39506,39621]"/>
  <match src="primitive_type [37006,37013]" dest="primitive_type [37006,37013]"/>
  <match src="memory: memory [19234,19240]" dest="memory: memory [19234,19240]"/>
  <match src="expression_statement [30907,30915]" dest="expression_statement [30907,30915]"/>
  <match src="=&gt;: =&gt; [44026,44028]" dest="=&gt;: =&gt; [44028,44030]"/>
  <match src="identifier: _transfer [51471,51480]" dest="identifier: _transfer [51473,51482]"/>
  <match src="{: { [75978,75979]" dest="{: { [75494,75495]"/>
  <match src="parameter [38775,38788]" dest="parameter [38775,38788]"/>
  <match src="parameter [8800,8809]" dest="parameter [8800,8809]"/>
  <match src="parameter [39084,39099]" dest="parameter [39084,39099]"/>
  <match src="type_name [20787,20793]" dest="type_name [20787,20793]"/>
  <match src="primitive_type [10061,10068]" dest="primitive_type [10061,10068]"/>
  <match src="): ) [52042,52043]" dest="): ) [52044,52045]"/>
  <match src="identifier: amount [61630,61636]" dest="identifier: amount [61632,61638]"/>
  <match src="primitive_type [49040,49047]" dest="primitive_type [49042,49049]"/>
  <match src="event_paramater [4128,4146]" dest="event_paramater [4128,4146]"/>
  <match src="identifier: poolInfo [79059,79067]" dest="identifier: poolInfo [78848,78856]"/>
  <match src="memory: memory [37581,37587]" dest="memory: memory [37581,37587]"/>
  <match src="binary_expression [87571,87603]" dest="binary_expression [88732,88764]"/>
  <match src="=&gt;: =&gt; [59042,59044]" dest="=&gt;: =&gt; [59044,59046]"/>
  <match src="call_expression [103967,104007]" dest="call_expression [103891,103931]"/>
  <match src="call_expression [20686,20744]" dest="call_expression [20686,20744]"/>
  <match src="event_definition [4091,4163]" dest="event_definition [4091,4163]"/>
  <match src=",: , [77918,77919]" dest=",: , [77153,77154]"/>
  <match src="(: ( [77868,77869]" dest="(: ( [77103,77104]"/>
  <match src="member_expression [104613,104632]" dest="member_expression [104537,104556]"/>
  <match src="if: if [28121,28123]" dest="if: if [28121,28123]"/>
  <match src="identifier: sender [52768,52774]" dest="identifier: sender [52770,52776]"/>
  <match src="identifier: isContract [18874,18884]" dest="identifier: isContract [18874,18884]"/>
  <match src="identifier: currentPoolCountInRank [85709,85731]" dest="identifier: currentPoolCountInRank [87009,87031]"/>
  <match src="-: - [37353,37354]" dest="-: - [37353,37354]"/>
  <match src="(: ( [28173,28174]" dest="(: ( [28173,28174]"/>
  <match src="uint256: uint256 [32744,32751]" dest="uint256: uint256 [32744,32751]"/>
  <match src="if_statement [97245,97394]" dest="if_statement [96010,96159]"/>
  <match src="==: == [69974,69976]" dest="==: == [69685,69687]"/>
  <match src="identifier: require [85409,85416]" dest="identifier: require [86709,86716]"/>
  <match src="address: address [26805,26812]" dest="address: address [26805,26812]"/>
  <match src="returns: returns [12702,12709]" dest="returns: returns [12702,12709]"/>
  <match src="binary_expression [34369,34375]" dest="binary_expression [34369,34375]"/>
  <match src="type_name [25342,25349]" dest="type_name [25342,25349]"/>
  <match src="array_access [99464,99478]" dest="array_access [97554,97568]"/>
  <match src="type_name [78285,78293]" dest="type_name [77418,77426]"/>
  <match src="identifier: updatePoolDividend [76940,76958]" dest="identifier: updatePoolDividend [76456,76474]"/>
  <match src="array_access [74269,74285]" dest="array_access [73982,73998]"/>
  <match src="identifier: _totalSupply [56615,56627]" dest="identifier: _totalSupply [56617,56629]"/>
  <match src="binary_expression [103874,103921]" dest="binary_expression [103798,103845]"/>
  <match src="identifier: lastPidInRank [72381,72394]" dest="identifier: lastPidInRank [72056,72069]"/>
  <match src="expression_statement [44185,44198]" dest="expression_statement [44187,44200]"/>
  <match src="identifier: minters [58852,58859]" dest="identifier: minters [58854,58861]"/>
  <match src="false [99693,99698]" dest="false [97783,97788]"/>
  <match src="state_variable_declaration [65457,65502]" dest="state_variable_declaration [65467,65512]"/>
  <match src="identifier: lastDividendHeight [69483,69501]" dest="identifier: lastDividendHeight [69194,69212]"/>
  <match src="uint256: uint256 [10890,10897]" dest="uint256: uint256 [10890,10897]"/>
  <match src="call_expression [101637,101674]" dest="call_expression [101374,101413]"/>
  <match src="binary_expression [29011,29052]" dest="binary_expression [29011,29052]"/>
  <match src="address: address [52577,52584]" dest="address: address [52579,52586]"/>
  <match src="(: ( [80726,80727]" dest="(: ( [81413,81414]"/>
  <match src="identifier: x [28727,28728]" dest="identifier: x [28727,28728]"/>
  <match src="identifier: _oracleWeight [98190,98203]" dest="identifier: _oracleWeight [96955,96968]"/>
  <match src="binary_expression [31306,31311]" dest="binary_expression [31306,31311]"/>
  <match src="type_name [18419,18424]" dest="type_name [18419,18424]"/>
  <match src="): ) [77075,77076]" dest="): ) [76591,76592]"/>
  <match src="call_expression [78426,78490]" dest="call_expression [78014,78070]"/>
  <match src="number_literal: 0 [61408,61409]" dest="number_literal: 0 [61410,61411]"/>
  <match src="&gt;=: &gt;= [44952,44954]" dest="&gt;=: &gt;= [44954,44956]"/>
  <match src="identifier: account [51139,51146]" dest="identifier: account [51141,51148]"/>
  <match src="primitive_type [39601,39608]" dest="primitive_type [39601,39608]"/>
  <match src="(: ( [46769,46770]" dest="(: ( [47011,47012]"/>
  <match src="): ) [106691,106692]" dest="): ) [106615,106616]"/>
  <match src="binary_expression [30335,30375]" dest="binary_expression [30335,30375]"/>
  <match src="expression_statement [79572,79639]" dest="expression_statement [79665,79722]"/>
  <match src="type_name [63066,63073]" dest="type_name [63068,63075]"/>
  <match src="identifier: wantToken [97561,97570]" dest="identifier: wantToken [96326,96335]"/>
  <match src="if: if [31820,31822]" dest="if: if [31820,31822]"/>
  <match src=".: . [34860,34861]" dest=".: . [34860,34861]"/>
  <match src="(: ( [42404,42405]" dest="(: ( [42404,42405]"/>
  <match src="{: { [95800,95801]" dest="{: { [94948,94949]"/>
  <match src="call_expression [17874,17892]" dest="call_expression [17874,17892]"/>
  <match src="identifier: getTargetTokenInSwap [69815,69835]" dest="identifier: getTargetTokenInSwap [69526,69546]"/>
  <match src="identifier: owner [38937,38942]" dest="identifier: owner [38937,38942]"/>
  <match src="]: ] [66126,66127]" dest="]: ] [66142,66143]"/>
  <match src="parenthesized_expression [29695,29706]" dest="parenthesized_expression [29695,29706]"/>
  <match src="uint256: uint256 [98862,98869]" dest="uint256: uint256 [99051,99058]"/>
  <match src="type_name [92675,92684]" dest="type_name [92323,92332]"/>
  <match src=",: , [39564,39565]" dest=",: , [39564,39565]"/>
  <match src="call_argument [21842,21847]" dest="call_argument [21842,21847]"/>
  <match src="(: ( [12710,12711]" dest="(: ( [12710,12711]"/>
  <match src="call_argument [37294,37298]" dest="call_argument [37294,37298]"/>
  <match src="returns: returns [24329,24336]" dest="returns: returns [24329,24336]"/>
  <match src="expression_statement [16865,16926]" dest="expression_statement [16865,16926]"/>
  <match src="identifier: pid [66510,66513]" dest="identifier: pid [66763,66766]"/>
  <match src="primitive_type [40345,40351]" dest="primitive_type [40345,40351]"/>
  <match src="address: address [57186,57193]" dest="address: address [57188,57195]"/>
  <match src="identifier: safeSHARDTransfer [83625,83642]" dest="identifier: safeSHARDTransfer [85369,85386]"/>
  <match src="identifier: _user [95252,95257]" dest="identifier: _user [94400,94405]"/>
  <match src="=: = [73270,73271]" dest="=: = [73035,73036]"/>
  <match src="expression_statement [30770,30777]" dest="expression_statement [30770,30777]"/>
  <match src="expression_statement [8865,8910]" dest="expression_statement [8865,8910]"/>
  <match src=",: , [2705,2706]" dest=",: , [2705,2706]"/>
  <match src="variable_declaration_statement [105301,105663]" dest="variable_declaration_statement [105225,105587]"/>
  <match src="identifier: uq112x112 [97603,97612]" dest="identifier: uq112x112 [96368,96377]"/>
  <match src="string_literal [80133,80152]" dest="string_literal [80718,80737]"/>
  <match src="member_expression [98676,98710]" dest="member_expression [98886,98920]"/>
  <match src=",: , [105989,105990]" dest=",: , [105913,105914]"/>
  <match src="call_expression [85409,85479]" dest="call_expression [86709,86779]"/>
  <match src="): ) [88808,88809]" dest="): ) [89656,89657]"/>
  <match src="primitive_type [40758,40765]" dest="primitive_type [40758,40765]"/>
  <match src="identifier: pool [93733,93737]" dest="identifier: pool [93387,93391]"/>
  <match src=".: . [82521,82522]" dest=".: . [83359,83360]"/>
  <match src="comment: // get how much token will be mined from _toBlock to _toBlock. [102788,102850]" dest="comment: // get how much token will be mined from _toBlock to _toBlock. [102712,102774]"/>
  <match src="identifier: fromBlock [60397,60406]" dest="identifier: fromBlock [60399,60408]"/>
  <match src="address: address [39640,39647]" dest="address: address [39640,39647]"/>
  <match src="type_name [32478,32485]" dest="type_name [32478,32485]"/>
  <match src="virtual: virtual [57881,57888]" dest="virtual: virtual [57883,57890]"/>
  <match src="uint256: uint256 [49089,49096]" dest="uint256: uint256 [49091,49098]"/>
  <match src="&amp;&amp;: &amp;&amp; [89703,89705]" dest="&amp;&amp;: &amp;&amp; [90945,90947]"/>
  <match src="user_defined_type [294,311]" dest="user_defined_type [294,311]"/>
  <match src="type_name [78666,78673]" dest="type_name [78246,78253]"/>
  <match src="primitive_type [59172,59179]" dest="primitive_type [59174,59181]"/>
  <match src="call_expression [18451,18528]" dest="call_expression [18451,18528]"/>
  <match src="call_argument [37136,37168]" dest="call_argument [37136,37168]"/>
  <match src="assignment_expression [75735,75777]" dest="assignment_expression [75251,75293]"/>
  <match src="primitive_type [27951,27958]" dest="primitive_type [27951,27958]"/>
  <match src="identifier: amount [99886,99892]" dest="identifier: amount [98078,98084]"/>
  <match src="if: if [46930,46932]" dest="if: if [46317,46319]"/>
  <match src="pragma: pragma [62937,62943]" dest="pragma: pragma [62939,62945]"/>
  <match src="call_expression [78449,78479]" dest="call_expression [78029,78059]"/>
  <match src="number_literal: 1 [29648,29649]" dest="number_literal: 1 [29648,29649]"/>
  <match src=",: , [68731,68732]" dest=",: , [68536,68537]"/>
  <match src="primitive_type [18760,18767]" dest="primitive_type [18760,18767]"/>
  <match src="return_type_definition [33230,33256]" dest="return_type_definition [33230,33256]"/>
  <match src="uint256: uint256 [76660,76667]" dest="uint256: uint256 [76176,76183]"/>
  <match src="variable_declaration [87503,87533]" dest="variable_declaration [88664,88694]"/>
  <match src="member_expression [99479,99509]" dest="member_expression [97569,97599]"/>
  <match src="pragma: pragma [11935,11941]" dest="pragma: pragma [11935,11941]"/>
  <match src=":: : [14294,14295]" dest=":: : [14294,14295]"/>
  <match src="primitive_type [43043,43050]" dest="primitive_type [43043,43050]"/>
  <match src="(: ( [102879,102880]" dest="(: ( [102803,102804]"/>
  <match src="if_statement [70336,70491]" dest="if_statement [70047,70202]"/>
  <match src="visibility [105770,105778]" dest="visibility [105694,105702]"/>
  <match src="(: ( [59682,59683]" dest="(: ( [59684,59685]"/>
  <match src="identifier: blackListMap [82210,82222]" dest="identifier: blackListMap [83048,83060]"/>
  <match src="function_definition [18336,18536]" dest="function_definition [18336,18536]"/>
  <match src="identifier: number [80815,80821]" dest="identifier: number [81502,81508]"/>
  <match src="returns: returns [2065,2072]" dest="returns: returns [2065,2072]"/>
  <match src=",: , [37134,37135]" dest=",: , [37134,37135]"/>
  <match src="identifier: _setImplementation [905,923]" dest="identifier: _setImplementation [905,923]"/>
  <match src="expression_statement [92359,92405]" dest="expression_statement [87299,87367]"/>
  <match src="(: ( [33284,33285]" dest="(: ( [33284,33285]"/>
  <match src="virtual: virtual [26437,26444]" dest="virtual: virtual [26437,26444]"/>
  <match src="string [79901,79925]" dest="string [80486,80510]"/>
  <match src="identifier: _pairInfo [108096,108105]" dest="identifier: _pairInfo [108020,108029]"/>
  <match src="identifier: checkAdmin [44887,44897]" dest="identifier: checkAdmin [44889,44899]"/>
  <match src="call_argument [80099,80131]" dest="call_argument [80684,80716]"/>
  <match src="{: { [12057,12058]" dest="{: { [12057,12058]"/>
  <match src="using: using [43024,43029]" dest="using: using [43024,43029]"/>
  <match src="(: ( [27324,27325]" dest="(: ( [27324,27325]"/>
  <match src="identifier: _nftPoolId [71150,71160]" dest="identifier: _nftPoolId [70861,70871]"/>
  <match src="{: { [77413,77414]" dest="{: { [76853,76854]"/>
  <match src="identifier: _pid [84414,84418]" dest="identifier: _pid [84949,84953]"/>
  <match src=",: , [51493,51494]" dest=",: , [51495,51496]"/>
  <match src="if_statement [83582,83691]" dest="if_statement [85330,85431]"/>
  <match src="visibility [7707,7715]" dest="visibility [7707,7715]"/>
  <match src="public: public [66238,66244]" dest="public: public [66258,66264]"/>
  <match src="parameter [22221,22234]" dest="parameter [22221,22234]"/>
  <match src=",: , [5644,5645]" dest=",: , [5644,5645]"/>
  <match src="): ) [105278,105279]" dest="): ) [105202,105203]"/>
  <match src="identifier: PoolInfo [73775,73783]" dest="identifier: PoolInfo [73571,73579]"/>
  <match src="return_statement [6279,6297]" dest="return_statement [6279,6297]"/>
  <match src="identifier: self [33717,33721]" dest="identifier: self [33717,33721]"/>
  <match src="identifier: mintSHARD [76208,76217]" dest="identifier: mintSHARD [75724,75733]"/>
  <match src="parameter [92568,92584]" dest="parameter [92216,92232]"/>
  <match src="primitive_type [39084,39091]" dest="primitive_type [39084,39091]"/>
  <match src="identifier: amount [51413,51419]" dest="identifier: amount [51415,51421]"/>
  <match src="{: { [6884,6885]" dest="{: { [6884,6885]"/>
  <match src="visibility [66396,66402]" dest="visibility [66416,66422]"/>
  <match src="memory: memory [16674,16680]" dest="memory: memory [16674,16680]"/>
  <match src="string [45330,45345]" dest="string [45332,45347]"/>
  <match src="boolean_literal [6315,6319]" dest="boolean_literal [6315,6319]"/>
  <match src="): ) [37831,37832]" dest="): ) [37831,37832]"/>
  <match src=",: , [15738,15739]" dest=",: , [15738,15739]"/>
  <match src="): ) [84249,84250]" dest="): ) [84778,84779]"/>
  <match src="primitive_type [35220,35227]" dest="primitive_type [35220,35227]"/>
  <match src="): ) [47251,47252]" dest="): ) [47253,47254]"/>
  <match src="identifier: to [20823,20825]" dest="identifier: to [20823,20825]"/>
  <match src="(: ( [103243,103244]" dest="(: ( [103167,103168]"/>
  <match src="identifier: number [106808,106814]" dest="identifier: number [106732,106738]"/>
  <match src="memory: memory [94407,94413]" dest="memory: memory [94053,94059]"/>
  <match src="variable_declaration [100859,100887]" dest="variable_declaration [100921,100949]"/>
  <match src="bool: bool [19188,19192]" dest="bool: bool [19188,19192]"/>
  <match src="&quot;: &quot; [56602,56603]" dest="&quot;: &quot; [56604,56605]"/>
  <match src="--: -- [87939,87941]" dest="--: -- [89100,89102]"/>
  <match src="type_name [54099,54103]" dest="type_name [54101,54105]"/>
  <match src="function: function [42773,42781]" dest="function: function [42773,42781]"/>
  <match src="inheritance_specifier [25269,25276]" dest="inheritance_specifier [25269,25276]"/>
  <match src="=: = [21983,21984]" dest="=: = [21983,21984]"/>
  <match src=",: , [14052,14053]" dest=",: , [14052,14053]"/>
  <match src=".: . [36289,36290]" dest=".: . [36289,36290]"/>
  <match src="): ) [72284,72285]" dest="): ) [72162,72163]"/>
  <match src="identifier: poolInfo [93403,93411]" dest="identifier: poolInfo [93051,93059]"/>
  <match src="if: if [97245,97247]" dest="if: if [96010,96012]"/>
  <match src="primitive_type [64321,64328]" dest="primitive_type [64323,64330]"/>
  <match src="primitive_type [78242,78249]" dest="primitive_type [77375,77382]"/>
  <match src="): ) [88434,88435]" dest="): ) [89282,89283]"/>
  <match src="identifier: sender [86674,86680]" dest="identifier: sender [88315,88321]"/>
  <match src="identifier: _pid [84482,84486]" dest="identifier: _pid [85017,85021]"/>
  <match src="identifier: getOracleWeight [93717,93732]" dest="identifier: calculateOracleWeight [93365,93386]"/>
  <match src="function: function [40445,40453]" dest="function: function [40445,40453]"/>
  <match src="contract_body [38509,40930]" dest="contract_body [38509,40930]"/>
  <match src="parameter [45874,45896]" dest="parameter [45876,45898]"/>
  <match src="identifier: INVITOR_WEIGHT [102709,102723]" dest="identifier: INVITOR_WEIGHT [102633,102647]"/>
  <match src="block_statement [69540,69632]" dest="block_statement [69251,69343]"/>
  <match src="): ) [7798,7799]" dest="): ) [7798,7799]"/>
  <match src="uint: uint [39891,39895]" dest="uint: uint [39891,39895]"/>
  <match src="external: external [39113,39121]" dest="external: external [39113,39121]"/>
  <match src="returns: returns [104501,104508]" dest="returns: returns [104425,104432]"/>
  <match src="identifier: user [84023,84027]" dest="identifier: user [84552,84556]"/>
  <match src="?: ? [29927,29928]" dest="?: ? [29927,29928]"/>
  <match src="uint224: uint224 [36154,36161]" dest="uint224: uint224 [36154,36161]"/>
  <match src="yul_path [19713,19723]" dest="yul_path [19713,19723]"/>
  <match src="comment: // a library for handling binary fixed point numbers (https://en.wikipedia.org/wiki/Q_(number_format)) [32258,32360]" dest="comment: // a library for handling binary fixed point numbers (https://en.wikipedia.org/wiki/Q_(number_format)) [32258,32360]"/>
  <match src=".: . [74127,74128]" dest=".: . [73858,73859]"/>
  <match src="{: { [104671,104672]" dest="{: { [104595,104596]"/>
  <match src=".: . [83253,83254]" dest=".: . [90426,90427]"/>
  <match src="identifier: x [31462,31463]" dest="identifier: x [31462,31463]"/>
  <match src="uint256: uint256 [100236,100243]" dest="uint256: uint256 [66576,66583]"/>
  <match src="parenthesized_expression [21620,21666]" dest="parenthesized_expression [21620,21666]"/>
  <match src="identifier: usersRelationshipInfo [94519,94540]" dest="identifier: usersRelationshipInfo [94165,94186]"/>
  <match src="identifier: _balances [56515,56524]" dest="identifier: _balances [56517,56526]"/>
  <match src="call_argument [90980,90981]" dest="call_argument [92005,92006]"/>
  <match src="): ) [35972,35973]" dest="): ) [35972,35973]"/>
  <match src="primitive_type [44467,44474]" dest="primitive_type [44469,44476]"/>
  <match src="(: ( [31496,31497]" dest="(: ( [31496,31497]"/>
  <match src="(: ( [75869,75870]" dest="(: ( [75385,75386]"/>
  <match src="): ) [98114,98115]" dest="): ) [96879,96880]"/>
  <match src="): ) [8177,8178]" dest="): ) [8177,8178]"/>
  <match src="identifier: lastIndex [73310,73319]" dest="identifier: lastIndex [73075,73084]"/>
  <match src="{: { [33691,33692]" dest="{: { [33691,33692]"/>
  <match src="&gt;&gt;: &gt;&gt; [29707,29709]" dest="&gt;&gt;: &gt;&gt; [29707,29709]"/>
  <match src="array_access [90948,90983]" dest="array_access [91973,92008]"/>
  <match src="identifier: blockTimestampLast [108268,108286]" dest="identifier: blockTimestampLast [108192,108210]"/>
  <match src="=: = [44549,44550]" dest="=: = [44551,44552]"/>
  <match src="assignment_expression [49614,49627]" dest="assignment_expression [49616,49629]"/>
  <match src="=: = [45089,45090]" dest="=: = [45091,45092]"/>
  <match src=".: . [84728,84729]" dest=".: . [85859,85860]"/>
  <match src=",: , [59965,59966]" dest=",: , [59967,59968]"/>
  <match src="storage: storage [84549,84556]" dest="storage: storage [85680,85687]"/>
  <match src="): ) [38338,38339]" dest="): ) [38338,38339]"/>
  <match src=",: , [83777,83778]" dest=",: , [85509,85510]"/>
  <match src="primitive_type [86740,86747]" dest="primitive_type [80081,80088]"/>
  <match src="identifier: invitor [87210,87217]" dest="identifier: invitor [88371,88378]"/>
  <match src="identifier: amountfeeRateDenominator [67925,67949]" dest="identifier: amountfeeRateDenominator [68177,68201]"/>
  <match src="uint112: uint112 [97449,97456]" dest="uint112: uint112 [96214,96221]"/>
  <match src="number_literal: 0x100 [29413,29418]" dest="number_literal: 0x100 [29413,29418]"/>
  <match src="call_argument [106053,106077]" dest="call_argument [105977,106001]"/>
  <match src="identifier: setShardPoolDividendWeight [75432,75458]" dest="identifier: setShardPoolDividendWeight [74948,74974]"/>
  <match src="visibility [58845,58851]" dest="visibility [58847,58853]"/>
  <match src="primitive_type [61831,61838]" dest="primitive_type [61833,61840]"/>
  <match src="identifier: UniswapV2OracleLibrary [107342,107364]" dest="identifier: UniswapV2OracleLibrary [107266,107288]"/>
  <match src="=: = [88616,88617]" dest="=: = [89464,89465]"/>
  <match src="call_argument [55693,55726]" dest="call_argument [55695,55728]"/>
  <match src="identifier: mul [90242,90245]" dest="identifier: mul [91204,91207]"/>
  <match src="array_access [61175,61195]" dest="array_access [61177,61197]"/>
  <match src="internal: internal [58604,58612]" dest="internal: internal [58606,58614]"/>
  <match src="]: ] [98609,98610]" dest="]: ] [97374,97375]"/>
  <match src="}: } [32075,32076]" dest="}: } [32075,32076]"/>
  <match src="modifier_invocation [44511,44520]" dest="modifier_invocation [44513,44522]"/>
  <match src="function_definition [35912,36619]" dest="function_definition [35912,36619]"/>
  <match src="primitive_type [42796,42803]" dest="primitive_type [42796,42803]"/>
  <match src="): ) [98058,98059]" dest="): ) [96823,96824]"/>
  <match src="member_expression [90210,90245]" dest="member_expression [91193,91207]"/>
  <match src="call_argument [80025,80042]" dest="call_argument [80610,80627]"/>
  <match src="identifier: votes [60484,60489]" dest="identifier: votes [60486,60491]"/>
  <match src="(: ( [26730,26731]" dest="(: ( [26730,26731]"/>
  <match src="variable_declaration [71916,71940]" dest="variable_declaration [71808,71825]"/>
  <match src="expression_statement [75707,75725]" dest="expression_statement [75223,75241]"/>
  <match src="parenthesized_expression [36249,36281]" dest="parenthesized_expression [36249,36281]"/>
  <match src="mload: mload [19707,19712]" dest="mload: mload [19707,19712]"/>
  <match src="identifier: self [36258,36262]" dest="identifier: self [36258,36262]"/>
  <match src="string [26817,26857]" dest="string [26817,26857]"/>
  <match src="if: if [84612,84614]" dest="if: if [85743,85745]"/>
  <match src="(: ( [61960,61961]" dest="(: ( [61962,61963]"/>
  <match src="{: { [33257,33258]" dest="{: { [33257,33258]"/>
  <match src="type_name [43968,43972]" dest="type_name [43968,43972]"/>
  <match src="identifier: usersTotalWeight [100019,100035]" dest="identifier: usersTotalWeight [98724,98740]"/>
  <match src="expression_statement [46810,46866]" dest="expression_statement [47052,47108]"/>
  <match src="primitive_type [67261,67268]" dest="primitive_type [67508,67515]"/>
  <match src="uint32: uint32 [105858,105864]" dest="uint32: uint32 [105782,105788]"/>
  <match src=".: . [76238,76239]" dest=".: . [75754,75755]"/>
  <match src="call_argument [90503,90524]" dest="call_argument [91528,91549]"/>
  <match src="number_literal: 0 [85315,85316]" dest="number_literal: 0 [86615,86616]"/>
  <match src="variable_declaration_statement [80236,80292]" dest="variable_declaration_statement [80856,80912]"/>
  <match src="): ) [39057,39058]" dest="): ) [39057,39058]"/>
  <match src="primitive_type [2074,2081]" dest="primitive_type [2074,2081]"/>
  <match src="(: ( [22189,22190]" dest="(: ( [22189,22190]"/>
  <match src="]: ] [56553,56554]" dest="]: ] [56555,56556]"/>
  <match src="emit: emit [72730,72734]" dest="emit: emit [72783,72787]"/>
  <match src="identifier: x [32030,32031]" dest="identifier: x [32030,32031]"/>
  <match src="block_statement [85594,85627]" dest="block_statement [86894,86927]"/>
  <match src="call_argument [106186,106194]" dest="call_argument [106110,106118]"/>
  <match src="parameter [86722,86738]" dest="parameter [87802,87818]"/>
  <match src="type_name [36233,36240]" dest="type_name [36233,36240]"/>
  <match src="type_cast_expression [35818,35830]" dest="type_cast_expression [35818,35830]"/>
  <match src=",: , [71213,71214]" dest=",: , [70924,70925]"/>
  <match src="new_expression [95578,95591]" dest="new_expression [94726,94739]"/>
  <match src="identifier: newVotes [62685,62693]" dest="identifier: newVotes [62687,62695]"/>
  <match src="identifier: r [31958,31959]" dest="identifier: r [31958,31959]"/>
  <match src="expression_statement [83743,83792]" dest="expression_statement [85475,85524]"/>
  <match src="uint256: uint256 [46102,46109]" dest="uint256: uint256 [46104,46111]"/>
  <match src="): ) [22013,22014]" dest="): ) [22013,22014]"/>
  <match src="identifier: push [87149,87153]" dest="identifier: push [88306,88310]"/>
  <match src="call_argument [97898,97937]" dest="call_argument [96663,96702]"/>
  <match src="(: ( [82722,82723]" dest="(: ( [83560,83561]"/>
  <match src="): ) [91048,91049]" dest="): ) [92073,92074]"/>
  <match src="identifier: IERC20 [81835,81841]" dest="identifier: IERC20 [82667,82673]"/>
  <match src="identifier: user [95061,95065]" dest="identifier: user [82583,82587]"/>
  <match src="identifier: d [28283,28284]" dest="identifier: d [28283,28284]"/>
  <match src="identifier: FixedPoint [41184,41194]" dest="identifier: FixedPoint [41184,41194]"/>
  <match src="call_expression [18866,18935]" dest="call_expression [18866,18935]"/>
  <match src="?: ? [105052,105053]" dest="?: ? [104976,104977]"/>
  <match src="block_statement [77152,77185]" dest="block_statement [77937,77970]"/>
  <match src="identifier: denominator [37079,37090]" dest="identifier: denominator [37079,37090]"/>
  <match src="variable_declaration [27291,27301]" dest="variable_declaration [27291,27301]"/>
  <match src="member_expression [101204,101233]" dest="member_expression [101173,101202]"/>
  <match src="variable_declaration [61778,61791]" dest="variable_declaration [61780,61793]"/>
  <match src=".: . [104625,104626]" dest=".: . [104549,104550]"/>
  <match src="identifier: nCheckpoints [62517,62529]" dest="identifier: nCheckpoints [62519,62531]"/>
  <match src="': ' [36565,36566]" dest="': ' [36565,36566]"/>
  <match src="expression_statement [86182,86212]" dest="expression_statement [87470,87500]"/>
  <match src="array_access [85566,85588]" dest="array_access [86866,86888]"/>
  <match src="(: ( [42795,42796]" dest="(: ( [42795,42796]"/>
  <match src="call_argument [82334,82341]" dest="call_argument [83172,83179]"/>
  <match src="memory: memory [15678,15684]" dest="memory: memory [15678,15684]"/>
  <match src="): ) [70320,70321]" dest="): ) [70031,70032]"/>
  <match src="): ) [55770,55771]" dest="): ) [55772,55773]"/>
  <match src="(: ( [83872,83873]" dest="(: ( [85593,85594]"/>
  <match src="if_statement [29124,29214]" dest="if_statement [29124,29214]"/>
  <match src="comment: // File: @openzeppelin/contracts/token/ERC20/SafeERC20.sol [19910,19968]" dest="comment: // File: @openzeppelin/contracts/token/ERC20/SafeERC20.sol [19910,19968]"/>
  <match src="address: address [14027,14034]" dest="address: address [14027,14034]"/>
  <match src="(: ( [87028,87029]" dest="(: ( [88185,88186]"/>
  <match src="(: ( [36819,36820]" dest="(: ( [36819,36820]"/>
  <match src="call_argument [36337,36366]" dest="call_argument [36337,36366]"/>
  <match src="call_argument [8234,8244]" dest="call_argument [8234,8244]"/>
  <match src=",: , [42851,42852]" dest=",: , [42851,42852]"/>
  <match src="variable_declaration_statement [79510,79562]" dest="variable_declaration_statement [78870,78922]"/>
  <match src="): ) [99110,99111]" dest="): ) [99278,99279]"/>
  <match src="(: ( [76225,76226]" dest="(: ( [75741,75742]"/>
  <match src=",: , [16184,16185]" dest=",: , [16184,16185]"/>
  <match src="]: ] [94152,94153]" dest="]: ] [93798,93799]"/>
  <match src="variable_declaration_statement [79937,80007]" dest="variable_declaration_statement [80522,80592]"/>
  <match src="=: = [95162,95163]" dest="=: = [82643,82644]"/>
  <match src="block_statement [77012,77109]" dest="block_statement [76528,76625]"/>
  <match src="type_cast_expression [56392,56402]" dest="type_cast_expression [56394,56404]"/>
  <match src="): ) [22142,22143]" dest="): ) [22142,22143]"/>
  <match src="=: = [94200,94201]" dest="=: = [93846,93847]"/>
  <match src="binary_expression [62432,62448]" dest="binary_expression [62434,62450]"/>
  <match src="number_literal: 0 [67269,67270]" dest="number_literal: 0 [67516,67517]"/>
  <match src="if_statement [36097,36180]" dest="if_statement [36097,36180]"/>
  <match src="member_expression [73641,73654]" dest="member_expression [73406,73419]"/>
  <match src="call_argument [82343,82358]" dest="call_argument [83181,83196]"/>
  <match src="view: view [40122,40126]" dest="view: view [40122,40126]"/>
  <match src="comment: /**      * @dev Replacement for Solidity's `transfer`: sends `amount` wei to      * `recipient`, forwarding all available gas and reverting on errors.      *      * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost      * of certain opcodes, possibly making contracts go over the 2300 gas limit      * imposed by `transfer`, making them unable to receive funds via      * `transfer`. {sendValue} removes this limitation.      *      * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].      *      * IMPORTANT: because control is transferred to `recipient`, care must be      * taken to not create reentrancy vulnerabilities. Consider using      * {ReentrancyGuard} or the      * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].      */ [13081,14002]" dest="comment: /**      * @dev Replacement for Solidity's `transfer`: sends `amount` wei to      * `recipient`, forwarding all available gas and reverting on errors.      *      * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost      * of certain opcodes, possibly making contracts go over the 2300 gas limit      * imposed by `transfer`, making them unable to receive funds via      * `transfer`. {sendValue} removes this limitation.      *      * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].      *      * IMPORTANT: because control is transferred to `recipient`, care must be      * taken to not create reentrancy vulnerabilities. Consider using      * {ReentrancyGuard} or the      * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].      */ [13081,14002]"/>
  <match src="string_literal [75670,75685]" dest="string_literal [75186,75201]"/>
  <match src="primitive_type [49182,49187]" dest="primitive_type [49184,49189]"/>
  <match src="identifier: DelegatorInterface [272,290]" dest="identifier: DelegatorInterface [272,290]"/>
  <match src=",: , [36046,36047]" dest=",: , [36046,36047]"/>
  <match src="): ) [35024,35025]" dest="): ) [35024,35025]"/>
  <match src="block_statement [105209,105291]" dest="block_statement [105133,105215]"/>
  <match src="(: ( [51920,51921]" dest="(: ( [51922,51923]"/>
  <match src="): ) [26747,26748]" dest="): ) [26747,26748]"/>
  <match src="(: ( [90892,90893]" dest="(: ( [91917,91918]"/>
  <match src="[: [ [89752,89753]" dest="[: [ [90994,90995]"/>
  <match src=".: . [93523,93524]" dest=".: . [93171,93172]"/>
  <match src="number_literal: 1 [90980,90981]" dest="number_literal: 1 [92005,92006]"/>
  <match src="identifier: cp [60922,60924]" dest="identifier: cp [60924,60926]"/>
  <match src="if: if [69675,69677]" dest="if: if [69386,69388]"/>
  <match src="primitive_type [54965,54972]" dest="primitive_type [54967,54974]"/>
  <match src="}: } [19902,19903]" dest="}: } [19902,19903]"/>
  <match src="uint256: uint256 [54819,54826]" dest="uint256: uint256 [54821,54828]"/>
  <match src="assignment_expression [95013,95034]" dest="assignment_expression [81108,81137]"/>
  <match src="identifier: maxRankNumber [85735,85748]" dest="identifier: maxRankNumber [87035,87048]"/>
  <match src="expression_statement [27677,27692]" dest="expression_statement [27677,27692]"/>
  <match src="variable_declaration_statement [72244,72286]" dest="variable_declaration_statement [71933,72002]"/>
  <match src="member_expression [84345,84363]" dest="member_expression [84880,84898]"/>
  <match src="call_expression [106348,106387]" dest="call_expression [106272,106311]"/>
  <match src="identifier: returndata [17026,17036]" dest="identifier: returndata [17026,17036]"/>
  <match src="(: ( [50749,50750]" dest="(: ( [50751,50752]"/>
  <match src="type_name [90811,90818]" dest="type_name [91836,91843]"/>
  <match src="library_declaration [30036,32160]" dest="library_declaration [30036,32160]"/>
  <match src="function_definition [59927,61216]" dest="function_definition [59929,61218]"/>
  <match src="public: public [43569,43575]" dest="public: public [43569,43575]"/>
  <match src="identifier: priceCumulativeLast [107825,107844]" dest="identifier: priceCumulativeLast [107749,107768]"/>
  <match src="augmented_assignment_expression [29458,29465]" dest="augmented_assignment_expression [29458,29465]"/>
  <match src="(: ( [38280,38281]" dest="(: ( [38280,38281]"/>
  <match src="&quot;: &quot; [59552,59553]" dest="&quot;: &quot; [59554,59555]"/>
  <match src="identifier: totalSupply [38861,38872]" dest="identifier: totalSupply [38861,38872]"/>
  <match src="identifier: onlyOwner [71890,71899]" dest="identifier: onlyOwner [71601,71610]"/>
  <match src="': ' [34020,34021]" dest="': ' [34020,34021]"/>
  <match src="assignment_expression [56515,56604]" dest="assignment_expression [56517,56606]"/>
  <match src="function_body [47262,47379]" dest="function_body [47264,47381]"/>
  <match src="bool: bool [39203,39207]" dest="bool: bool [39203,39207]"/>
  <match src="(: ( [46741,46742]" dest="(: ( [46983,46984]"/>
  <match src="primitive_type [75504,75511]" dest="primitive_type [75020,75027]"/>
  <match src="call_argument [20734,20736]" dest="call_argument [20734,20736]"/>
  <match src="variable_declaration [99521,99542]" dest="variable_declaration [97611,97632]"/>
  <match src="}: } [18148,18149]" dest="}: } [18148,18149]"/>
  <match src="&quot;: &quot; [15329,15330]" dest="&quot;: &quot; [15329,15330]"/>
  <match src="identifier: getReserves [105266,105277]" dest="identifier: getReserves [105190,105201]"/>
  <match src="identifier: number [76299,76305]" dest="identifier: number [75815,75821]"/>
  <match src="member_expression [87210,87233]" dest="member_expression [88371,88394]"/>
  <match src="(: ( [42532,42533]" dest="(: ( [42532,42533]"/>
  <match src="call_argument [82670,82693]" dest="call_argument [83508,83531]"/>
  <match src="type_name [66614,66621]" dest="type_name [66867,66874]"/>
  <match src="function_body [14079,14405]" dest="function_body [14079,14405]"/>
  <match src="number_literal: 128 [31468,31471]" dest="number_literal: 128 [31468,31471]"/>
  <match src="expression_statement [90326,90376]" dest="expression_statement [91379,91449]"/>
  <match src="if: if [78334,78336]" dest="if: if [77846,77848]"/>
  <match src="variable_declaration_statement [89227,89291]" dest="variable_declaration_statement [90152,90216]"/>
  <match src="==: == [21661,21663]" dest="==: == [21661,21663]"/>
  <match src="identifier: _msgSender [52776,52786]" dest="identifier: _msgSender [52778,52788]"/>
  <match src="expression_statement [30603,30611]" dest="expression_statement [30603,30611]"/>
  <match src="function: function [39373,39381]" dest="function: function [39373,39381]"/>
  <match src="{: { [30476,30477]" dest="{: { [30476,30477]"/>
  <match src="primitive_type [38839,38844]" dest="primitive_type [38839,38844]"/>
  <match src="(: ( [53372,53373]" dest="(: ( [53374,53375]"/>
  <match src="type_name [63834,63847]" dest="type_name [63836,63849]"/>
  <match src="variable_declaration [103436,103455]" dest="variable_declaration [103360,103379]"/>
  <match src="expression_statement [75993,76011]" dest="expression_statement [75509,75527]"/>
  <match src="struct_expression [17040,17067]" dest="struct_expression [17040,17067]"/>
  <match src="visibility [82451,82459]" dest="visibility [83289,83297]"/>
  <match src="type_name [49051,49058]" dest="type_name [49053,49060]"/>
  <match src="&quot;: &quot; [16893,16894]" dest="&quot;: &quot; [16893,16894]"/>
  <match src="call_expression [36585,36611]" dest="call_expression [36585,36611]"/>
  <match src="): ) [73207,73208]" dest="): ) [72972,72973]"/>
  <match src="primitive_type [42528,42532]" dest="primitive_type [42528,42532]"/>
  <match src="variable_declaration [27541,27553]" dest="variable_declaration [27541,27553]"/>
  <match src="}: } [31482,31483]" dest="}: } [31482,31483]"/>
  <match src="call_argument [55940,55947]" dest="call_argument [55942,55949]"/>
  <match src="primitive_type [58925,58932]" dest="primitive_type [58927,58934]"/>
  <match src="(: ( [84203,84204]" dest="(: ( [84732,84733]"/>
  <match src="(: ( [49983,49984]" dest="(: ( [49985,49986]"/>
  <match src="user_defined_type [69429,69442]" dest="user_defined_type [69140,69153]"/>
  <match src="binary_expression [97890,97972]" dest="binary_expression [96655,96737]"/>
  <match src="(: ( [30246,30247]" dest="(: ( [30246,30247]"/>
  <match src="yul_identifier [13030,13037]" dest="yul_identifier [13030,13037]"/>
  <match src="primitive_type [40741,40745]" dest="primitive_type [40741,40745]"/>
  <match src="}: } [108870,108871]" dest="}: } [108794,108795]"/>
  <match src="}: } [44758,44759]" dest="}: } [44760,44761]"/>
  <match src="address: address [59842,59849]" dest="address: address [59844,59851]"/>
  <match src="type_name [54033,54040]" dest="type_name [54035,54042]"/>
  <match src="assignment_expression [93129,93170]" dest="assignment_expression [92777,92818]"/>
  <match src="binary_expression [38344,38369]" dest="binary_expression [38344,38369]"/>
  <match src="solidity_version_comparison_operator [47578,47580]" dest="solidity_version_comparison_operator [47580,47582]"/>
  <match src="||: || [21617,21619]" dest="||: || [21617,21619]"/>
  <match src="new: new [93039,93042]" dest="new: new [92687,92690]"/>
  <match src=",: , [5604,5605]" dest=",: , [5604,5605]"/>
  <match src="uint256: uint256 [62794,62801]" dest="uint256: uint256 [62796,62803]"/>
  <match src="type_cast_expression [37345,37356]" dest="type_cast_expression [37345,37356]"/>
  <match src="call_expression [104613,104634]" dest="call_expression [104537,104558]"/>
  <match src="expression_statement [93429,93469]" dest="expression_statement [93077,93117]"/>
  <match src="visibility [47409,47417]" dest="visibility [47411,47419]"/>
  <match src="identifier: poolTotalWeight [101502,101517]" dest="identifier: poolTotalWeight [101237,101252]"/>
  <match src="identifier: checkAdmin [45795,45805]" dest="identifier: checkAdmin [45797,45807]"/>
  <match src=",: , [40343,40344]" dest=",: , [40343,40344]"/>
  <match src="event: event [39629,39634]" dest="event: event [39629,39634]"/>
  <match src="primitive_type [18841,18846]" dest="primitive_type [18841,18846]"/>
  <match src="pure: pure [33225,33229]" dest="pure: pure [33225,33229]"/>
  <match src="call_expression [62533,62566]" dest="call_expression [62535,62568]"/>
  <match src="[: [ [56545,56546]" dest="[: [ [56547,56548]"/>
  <match src="function_body [25530,25669]" dest="function_body [25530,25669]"/>
  <match src="): ) [99387,99388]" dest="): ) [99539,99540]"/>
  <match src="identifier: h [28280,28281]" dest="identifier: h [28280,28281]"/>
  <match src="parameter [61280,61290]" dest="parameter [61282,61292]"/>
  <match src="function_body [51704,51757]" dest="function_body [51706,51759]"/>
  <match src="identifier: Ownable [43010,43017]" dest="identifier: Ownable [43010,43017]"/>
  <match src=",: , [87043,87044]" dest=",: , [88200,88201]"/>
  <match src="expression_statement [70889,70914]" dest="expression_statement [70600,70625]"/>
  <match src="identifier: _pid [84765,84769]" dest="identifier: _pid [85896,85900]"/>
  <match src="parameter [18795,18821]" dest="parameter [18795,18821]"/>
  <match src="expression_statement [55662,55728]" dest="expression_statement [55664,55730]"/>
  <match src="): ) [67553,67554]" dest="): ) [67800,67801]"/>
  <match src="binary_expression [59523,59550]" dest="binary_expression [59525,59552]"/>
  <match src="if_statement [36989,37451]" dest="if_statement [36989,37451]"/>
  <match src="solidity_version: 0.6.0 [4489,4494]" dest="solidity_version: 0.6.0 [4489,4494]"/>
  <match src="number_literal: 1 [37354,37355]" dest="number_literal: 1 [37354,37355]"/>
  <match src="identifier: lastPriceUpdateHeight [105615,105636]" dest="identifier: lastPriceUpdateHeight [105539,105560]"/>
  <match src="member_expression [23415,23432]" dest="member_expression [23415,23432]"/>
  <match src="identifier: i [95824,95825]" dest="identifier: i [95036,95037]"/>
  <match src="function_body [89039,90627]" dest="function_body [89887,91652]"/>
  <match src="): ) [29333,29334]" dest="): ) [29333,29334]"/>
  <match src="variable_declaration [73302,73319]" dest="variable_declaration [73067,73084]"/>
  <match src="call_expression [103840,103857]" dest="call_expression [103764,103781]"/>
  <match src="identifier: _totalSupply [56630,56642]" dest="identifier: _totalSupply [56632,56644]"/>
  <match src="=: = [68159,68160]" dest="=: = [68322,68323]"/>
  <match src="call_expression [82632,82694]" dest="call_expression [83470,83532]"/>
  <match src="}: } [50062,50063]" dest="}: } [50064,50065]"/>
  <match src="variable_declaration [61431,61446]" dest="variable_declaration [61433,61448]"/>
  <match src="identifier: _pairInfo [107397,107406]" dest="identifier: _pairInfo [107321,107330]"/>
  <match src="parameter [95340,95364]" dest="parameter [94488,94512]"/>
  <match src="user_defined_type [96906,96914]" dest="user_defined_type [95671,95679]"/>
  <match src="=: = [94570,94571]" dest="=: = [94216,94217]"/>
  <match src="variable_declaration_statement [97121,97235]" dest="variable_declaration_statement [95886,96000]"/>
  <match src="parameter [36776,36795]" dest="parameter [36776,36795]"/>
  <match src="identifier: returndata_size [19774,19789]" dest="identifier: returndata_size [19774,19789]"/>
  <match src="binary_expression [6267,6277]" dest="binary_expression [6267,6277]"/>
  <match src="identifier: lpTokenAmount [84165,84178]" dest="identifier: lpTokenAmount [84694,84707]"/>
  <match src="call_argument [77259,77279]" dest="call_argument [76699,76719]"/>
  <match src="&quot;: &quot; [8280,8281]" dest="&quot;: &quot; [8280,8281]"/>
  <match src="identifier: from [61673,61677]" dest="identifier: from [61675,61679]"/>
  <match src="comment: // addition overflow is desired [42304,42335]" dest="comment: // addition overflow is desired [42304,42335]"/>
  <match src="block_statement [19830,19885]" dest="block_statement [19830,19885]"/>
  <match src="user_defined_type [36820,36829]" dest="user_defined_type [36820,36829]"/>
  <match src="identifier: description [64451,64462]" dest="identifier: description [64453,64464]"/>
  <match src="[: [ [92859,92860]" dest="[: [ [92507,92508]"/>
  <match src="}: } [85090,85091]" dest="}: } [86390,86391]"/>
  <match src="identifier: to [20620,20622]" dest="identifier: to [20620,20622]"/>
  <match src="call_argument [55130,55136]" dest="call_argument [55132,55138]"/>
  <match src="expression_statement [86569,86634]" dest="expression_statement [87857,87922]"/>
  <match src="type_name [59321,59328]" dest="type_name [59323,59330]"/>
  <match src="visibility [65742,65749]" dest="visibility [65752,65759]"/>
  <match src="(: ( [66926,66927]" dest="(: ( [67179,67180]"/>
  <match src="member_expression [36112,36120]" dest="member_expression [36112,36120]"/>
  <match src="tuple_expression [5712,5725]" dest="tuple_expression [5712,5725]"/>
  <match src="expression_statement [84966,84986]" dest="expression_statement [86266,86286]"/>
  <match src="function: function [7210,7218]" dest="function: function [7210,7218]"/>
  <match src="type_name [20815,20822]" dest="type_name [20815,20822]"/>
  <match src="&quot;: &quot; [58774,58775]" dest="&quot;: &quot; [58776,58777]"/>
  <match src="): ) [81098,81099]" dest="): ) [81785,81786]"/>
  <match src="call_argument [84142,84148]" dest="call_argument [84671,84677]"/>
  <match src="uint256: uint256 [104528,104535]" dest="uint256: uint256 [104452,104459]"/>
  <match src="assignment_expression [108408,108447]" dest="assignment_expression [108332,108371]"/>
  <match src="uint256: uint256 [22256,22263]" dest="uint256: uint256 [22256,22263]"/>
  <match src="variable_declaration [60852,60872]" dest="variable_declaration [60854,60874]"/>
  <match src="visibility [59858,59866]" dest="visibility [59860,59868]"/>
  <match src="expression_statement [29518,29527]" dest="expression_statement [29518,29527]"/>
  <match src="primitive_type [51454,51458]" dest="primitive_type [51456,51460]"/>
  <match src="type_name [32620,32625]" dest="type_name [32620,32625]"/>
  <match src="++: ++ [95797,95799]" dest="++: ++ [94945,94947]"/>
  <match src=".: . [104291,104292]" dest=".: . [104215,104216]"/>
  <match src="binary_expression [6267,6272]" dest="binary_expression [6267,6272]"/>
  <match src="): ) [20743,20744]" dest="): ) [20743,20744]"/>
  <match src="identifier: success [18012,18019]" dest="identifier: success [18012,18019]"/>
  <match src="{: { [7277,7278]" dest="{: { [7277,7278]"/>
  <match src="parameter [39013,39028]" dest="parameter [39013,39028]"/>
  <match src="++: ++ [76697,76699]" dest="++: ++ [76213,76215]"/>
  <match src="string_literal [60124,60159]" dest="string_literal [60126,60161]"/>
  <match src="}: } [73704,73705]" dest="}: } [73469,73470]"/>
  <match src="identifier: Babylonian [38289,38299]" dest="identifier: Babylonian [38289,38299]"/>
  <match src=".: . [79288,79289]" dest=".: . [79443,79444]"/>
  <match src="): ) [54171,54172]" dest="): ) [54173,54174]"/>
  <match src="address: address [39943,39950]" dest="address: address [39943,39950]"/>
  <match src="(: ( [36594,36595]" dest="(: ( [36594,36595]"/>
  <match src="identifier: safeDecreaseAllowance [22168,22189]" dest="identifier: safeDecreaseAllowance [22168,22189]"/>
  <match src="identifier: decimals_ [57912,57921]" dest="identifier: decimals_ [57914,57923]"/>
  <match src="binary_expression [105179,105208]" dest="binary_expression [105103,105132]"/>
  <match src="interface: interface [1774,1783]" dest="interface: interface [1774,1783]"/>
  <match src="visibility [11768,11776]" dest="visibility [11768,11776]"/>
  <match src="type_name [78392,78399]" dest="type_name [77980,77987]"/>
  <match src="=: = [55211,55212]" dest="=: = [55213,55214]"/>
  <match src="(: ( [76098,76099]" dest="(: ( [75614,75615]"/>
  <match src="primitive_type [58588,58595]" dest="primitive_type [58590,58597]"/>
  <match src="{: { [31882,31883]" dest="{: { [31882,31883]"/>
  <match src="comment: // however that code costs significantly more gas [28899,28948]" dest="comment: // however that code costs significantly more gas [28899,28948]"/>
  <match src="identifier: number [67434,67440]" dest="identifier: number [67681,67687]"/>
  <match src="binary_expression [29669,29674]" dest="binary_expression [29669,29674]"/>
  <match src="identifier: div [74128,74131]" dest="identifier: div [73859,73862]"/>
  <match src="parameter [50918,50925]" dest="parameter [50920,50927]"/>
  <match src=".: . [54182,54183]" dest=".: . [54184,54185]"/>
  <match src="function: function [69190,69198]" dest="function: function [68901,68909]"/>
  <match src="identifier: number [82736,82742]" dest="identifier: number [83574,83580]"/>
  <match src="call_expression [68940,68952]" dest="call_expression [68651,68663]"/>
  <match src="identifier: spender [51929,51936]" dest="identifier: spender [51931,51938]"/>
  <match src="function_definition [47387,47492]" dest="function_definition [47389,47494]"/>
  <match src="): ) [104945,104946]" dest="): ) [104869,104870]"/>
  <match src=",: , [19225,19226]" dest=",: , [19225,19226]"/>
  <match src="variable_declaration_statement [70661,70760]" dest="variable_declaration_statement [70372,70471]"/>
  <match src="): ) [17853,17854]" dest="): ) [17853,17854]"/>
  <match src="assignment_expression [29691,29711]" dest="assignment_expression [29691,29711]"/>
  <match src="type_name [17841,17846]" dest="type_name [17841,17846]"/>
  <match src="identifier: block [84723,84728]" dest="identifier: block [85854,85859]"/>
  <match src="return_statement [51715,51750]" dest="return_statement [51717,51752]"/>
  <match src="=: = [67426,67427]" dest="=: = [67673,67674]"/>
  <match src="memory: memory [18027,18033]" dest="memory: memory [18027,18033]"/>
  <match src="virtual: virtual [93915,93922]" dest="virtual: virtual [93561,93568]"/>
  <match src="identifier: require [7316,7323]" dest="identifier: require [7316,7323]"/>
  <match src="call_expression [55108,55179]" dest="call_expression [55110,55181]"/>
  <match src="identifier: pool [86375,86379]" dest="identifier: pool [87663,87667]"/>
  <match src="virtual: virtual [25779,25786]" dest="virtual: virtual [25779,25786]"/>
  <match src="identifier: totalSupply [50866,50877]" dest="identifier: totalSupply [50868,50879]"/>
  <match src="member_expression [84904,84934]" dest="member_expression [86035,86065]"/>
  <match src="array_access [62414,62431]" dest="array_access [62416,62433]"/>
  <match src="visibility [65348,65354]" dest="visibility [65358,65364]"/>
  <match src="/: / [29898,29899]" dest="/: / [29898,29899]"/>
  <match src=".: . [83152,83153]" dest=".: . [72351,72352]"/>
  <match src=".: . [38204,38205]" dest=".: . [38204,38205]"/>
  <match src="block_statement [31406,31441]" dest="block_statement [31406,31441]"/>
  <match src="user_defined_type [89050,89058]" dest="user_defined_type [89898,89906]"/>
  <match src="member_expression [99664,99690]" dest="member_expression [97754,97780]"/>
  <match src="assignment_expression [104152,104194]" dest="assignment_expression [104076,104118]"/>
  <match src="identifier: otherPoolDividendWeight [66403,66426]" dest="identifier: otherPoolDividendWeight [66423,66446]"/>
  <match src="comment: /**      * @dev Moves tokens `amount` from `sender` to `recipient`.      *      * This is internal function is equivalent to {transfer}, and can be used to      * e.g. implement automatic token fees, slashing mechanisms, etc.      *      * Emits a {Transfer} event.      *      * Requirements:      *      * - `sender` cannot be the zero address.      * - `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      */ [54283,54759]" dest="comment: /**      * @dev Moves tokens `amount` from `sender` to `recipient`.      *      * This is internal function is equivalent to {transfer}, and can be used to      * e.g. implement automatic token fees, slashing mechanisms, etc.      *      * Emits a {Transfer} event.      *      * Requirements:      *      * - `sender` cannot be the zero address.      * - `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      */ [54285,54761]"/>
  <match src="bool: bool [75892,75896]" dest="bool: bool [75408,75412]"/>
  <match src=".: . [89720,89721]" dest=".: . [90962,90963]"/>
  <match src="identifier: _amount [96938,96945]" dest="identifier: _amount [95703,95710]"/>
  <match src="assignment_expression [104266,104350]" dest="assignment_expression [104190,104274]"/>
  <match src="visibility [44158,44166]" dest="visibility [44160,44168]"/>
  <match src="block_statement [47300,47372]" dest="block_statement [47302,47374]"/>
  <match src="boolean_literal [6287,6292]" dest="boolean_literal [6287,6292]"/>
  <match src="identifier: _wethToken [67055,67065]" dest="identifier: _wethToken [67308,67318]"/>
  <match src="=: = [105254,105255]" dest="=: = [105178,105179]"/>
  <match src="=: = [34289,34290]" dest="=: = [34289,34290]"/>
  <match src="identifier: safeShiftBits [38351,38364]" dest="identifier: safeShiftBits [38351,38364]"/>
  <match src="if: if [97636,97638]" dest="if: if [96401,96403]"/>
  <match src="uint256: uint256 [8811,8818]" dest="uint256: uint256 [8811,8818]"/>
  <match src="call_argument [55689,55690]" dest="call_argument [55691,55692]"/>
  <match src="assignment_expression [47170,47194]" dest="assignment_expression [47172,47196]"/>
  <match src=".: . [38180,38181]" dest=".: . [38180,38181]"/>
  <match src=".: . [21822,21823]" dest=".: . [21822,21823]"/>
  <match src="member_expression [99594,99620]" dest="member_expression [97684,97710]"/>
  <match src="solidity_version: 0.4.0 [28380,28385]" dest="solidity_version: 0.4.0 [28380,28385]"/>
  <match src="identifier: token [22405,22410]" dest="identifier: token [22405,22410]"/>
  <match src="identifier: RESOLUTION [33512,33522]" dest="identifier: RESOLUTION [33512,33522]"/>
  <match src="&quot;: &quot; [45604,45605]" dest="&quot;: &quot; [45606,45607]"/>
  <match src="identifier: _pool [97955,97960]" dest="identifier: _pool [96720,96725]"/>
  <match src="(: ( [59736,59737]" dest="(: ( [59738,59739]"/>
  <match src="function: function [104870,104878]" dest="function: function [104794,104802]"/>
  <match src="view: view [94099,94103]" dest="view: view [93745,93749]"/>
  <match src=".: . [80445,80446]" dest=".: . [82534,82535]"/>
  <match src="identifier: Checkpoint [59064,59074]" dest="identifier: Checkpoint [59066,59076]"/>
  <match src="call_expression [107765,107864]" dest="call_expression [107689,107788]"/>
  <match src="): ) [90907,90908]" dest="): ) [91932,91933]"/>
  <match src="function_definition [69190,71644]" dest="function_definition [68901,71355]"/>
  <match src="member_expression [20912,20930]" dest="member_expression [20912,20930]"/>
  <match src="true [70022,70026]" dest="true [69733,69737]"/>
  <match src="uint256: uint256 [44627,44634]" dest="uint256: uint256 [44629,44636]"/>
  <match src="&quot;: &quot; [14161,14162]" dest="&quot;: &quot; [14161,14162]"/>
  <match src="function_definition [38674,38728]" dest="function_definition [38674,38728]"/>
  <match src="storage: storage [96915,96922]" dest="storage: storage [95680,95687]"/>
  <match src="(: ( [57467,57468]" dest="(: ( [57469,57470]"/>
  <match src="binary_expression [25970,25993]" dest="binary_expression [25970,25993]"/>
  <match src="expression_statement [68141,68857]" dest="expression_statement [68304,68568]"/>
  <match src=".: . [80344,80345]" dest=".: . [80964,80965]"/>
  <match src="(: ( [34855,34856]" dest="(: ( [34855,34856]"/>
  <match src="primitive_type [15591,15598]" dest="primitive_type [15591,15598]"/>
  <match src=":: : [105636,105637]" dest=":: : [105560,105561]"/>
  <match src=",: , [58574,58575]" dest=",: , [58576,58577]"/>
  <match src="expression_statement [30514,30522]" dest="expression_statement [30514,30522]"/>
  <match src="]: ] [89136,89137]" dest="]: ] [89984,89985]"/>
  <match src="{: { [71120,71121]" dest="{: { [70831,70832]"/>
  <match src="uint32: uint32 [42054,42060]" dest="uint32: uint32 [42054,42060]"/>
  <match src=",: , [92841,92842]" dest=",: , [92489,92490]"/>
  <match src="call_expression [21621,21660]" dest="call_expression [21621,21660]"/>
  <match src="}: } [70184,70185]" dest="}: } [69895,69896]"/>
  <match src="type_name [84573,84580]" dest="type_name [85704,85711]"/>
  <match src="identifier: totalReward [104379,104390]" dest="identifier: totalReward [104303,104314]"/>
  <match src="type_name [83371,83378]" dest="type_name [85155,85162]"/>
  <match src="type_name [95220,95229]" dest="type_name [94368,94377]"/>
  <match src="variable_declaration_statement [35148,35198]" dest="variable_declaration_statement [35148,35198]"/>
  <match src="}: } [33317,33318]" dest="}: } [33317,33318]"/>
  <match src="=: = [99736,99737]" dest="=: = [97928,97929]"/>
  <match src="identifier: _pending [88641,88649]" dest="identifier: _pending [89489,89497]"/>
  <match src="user_defined_type [34636,34645]" dest="user_defined_type [34636,34645]"/>
  <match src="address: address [2034,2041]" dest="address: address [2034,2041]"/>
  <match src="block_statement [98661,99400]" dest="block_statement [97426,97500]"/>
  <match src="member_expression [71083,71096]" dest="member_expression [70794,70807]"/>
  <match src="parameter [103162,103180]" dest="parameter [103086,103104]"/>
  <match src="variable_declaration [16999,17011]" dest="variable_declaration [16999,17011]"/>
  <match src="call_argument [55761,55771]" dest="call_argument [55763,55773]"/>
  <match src="array_access [51129,51147]" dest="array_access [51131,51149]"/>
  <match src="address: address [104510,104517]" dest="address: address [104434,104441]"/>
  <match src="): ) [109294,109295]" dest="): ) [109218,109219]"/>
  <match src="parameter [19227,19253]" dest="parameter [19227,19253]"/>
  <match src="+: + [29698,29699]" dest="+: + [29698,29699]"/>
  <match src="member_expression [74908,74927]" dest="member_expression [74779,74798]"/>
  <match src="identifier: checkpoints [61880,61891]" dest="identifier: checkpoints [61882,61893]"/>
  <match src="parameter [75892,75908]" dest="parameter [75408,75424]"/>
  <match src=".: . [82920,82921]" dest=".: . [99814,99815]"/>
  <match src="comment: // square root of a UQ112x112 [37849,37878]" dest="comment: // square root of a UQ112x112 [37849,37878]"/>
  <match src="}: } [50964,50965]" dest="}: } [50966,50967]"/>
  <match src="else: else [31442,31446]" dest="else: else [31442,31446]"/>
  <match src="identifier: _userAmount [46666,46677]" dest="identifier: _userAmount [46908,46919]"/>
  <match src="(: ( [38838,38839]" dest="(: ( [38838,38839]"/>
  <match src="identifier: _pid [100350,100354]" dest="identifier: _pid [71913,71917]"/>
  <match src="return_statement [11022,11035]" dest="return_statement [11022,11035]"/>
  <match src="member_expression [103840,103854]" dest="member_expression [103764,103778]"/>
  <match src="primitive_type [3459,3466]" dest="primitive_type [3459,3466]"/>
  <match src="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],      * but performing a delegate call.      *      * _Available since v3.4._      */ [18544,18724]" dest="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],      * but performing a delegate call.      *      * _Available since v3.4._      */ [18544,18724]"/>
  <match src="function_body [52667,52876]" dest="function_body [52669,52878]"/>
  <match src="uint224: uint224 [35148,35155]" dest="uint224: uint224 [35148,35155]"/>
  <match src="type_name [60183,60190]" dest="type_name [60185,60192]"/>
  <match src=",: , [104699,104700]" dest=",: , [104623,104624]"/>
  <match src="primitive_type [61301,61308]" dest="primitive_type [61303,61310]"/>
  <match src="event: event [66913,66918]" dest="event: event [67166,67171]"/>
  <match src="expression_statement [95780,95794]" dest="expression_statement [94928,94942]"/>
  <match src="(: ( [75458,75459]" dest="(: ( [74974,74975]"/>
  <match src="(: ( [16747,16748]" dest="(: ( [16747,16748]"/>
  <match src="primitive_type [1918,1925]" dest="primitive_type [1918,1925]"/>
  <match src="(: ( [96181,96182]" dest="(: ( [95491,95492]"/>
  <match src=":: : [71456,71457]" dest=":: : [71167,71168]"/>
  <match src="call_argument [104836,104853]" dest="call_argument [104760,104777]"/>
  <match src="identifier: lower [60800,60805]" dest="identifier: lower [60802,60807]"/>
  <match src="(: ( [34635,34636]" dest="(: ( [34635,34636]"/>
  <match src="augmented_assignment_expression [27702,27716]" dest="augmented_assignment_expression [27702,27716]"/>
  <match src="binary_expression [103244,103291]" dest="binary_expression [103168,103215]"/>
  <match src="]: ] [72533,72534]" dest="]: ] [72225,72226]"/>
  <match src="address: address [39808,39815]" dest="address: address [39808,39815]"/>
  <match src="member_expression [73322,73338]" dest="member_expression [73087,73103]"/>
  <match src=".: . [16794,16795]" dest=".: . [16794,16795]"/>
  <match src="]: ] [55890,55891]" dest="]: ] [55892,55893]"/>
  <match src="{: { [31666,31667]" dest="{: { [31666,31667]"/>
  <match src="expression_statement [86852,86904]" dest="expression_statement [88009,88061]"/>
  <match src=",: , [21650,21651]" dest=",: , [21650,21651]"/>
  <match src="[: [ [79067,79068]" dest="[: [ [78856,78857]"/>
  <match src=",: , [70278,70279]" dest=",: , [69989,69990]"/>
  <match src="}: } [30435,30436]" dest="}: } [30435,30436]"/>
  <match src="): ) [105252,105253]" dest="): ) [105176,105177]"/>
  <match src="call_argument [41875,41879]" dest="call_argument [41875,41879]"/>
  <match src="primitive_type [93098,93105]" dest="primitive_type [92746,92753]"/>
  <match src="internal: internal [62816,62824]" dest="internal: internal [62818,62826]"/>
  <match src="): ) [6844,6845]" dest="): ) [6844,6845]"/>
  <match src="identifier: reserve1 [106368,106376]" dest="identifier: reserve1 [106292,106300]"/>
  <match src="=: = [57910,57911]" dest="=: = [57912,57913]"/>
  <match src="boolean_literal [109620,109625]" dest="boolean_literal [109544,109549]"/>
  <match src="%: % [6951,6952]" dest="%: % [6951,6952]"/>
  <match src="visibility [16220,16228]" dest="visibility [16220,16228]"/>
  <match src="function_definition [16621,17151]" dest="function_definition [16621,17151]"/>
  <match src="public: public [65465,65471]" dest="public: public [65475,65481]"/>
  <match src="call_argument [76293,76305]" dest="call_argument [75809,75821]"/>
  <match src="assignment_expression [69999,70026]" dest="assignment_expression [69710,69737]"/>
  <match src="expression_statement [84251,84273]" dest="expression_statement [84780,84802]"/>
  <match src="public: public [66179,66185]" dest="public: public [66487,66493]"/>
  <match src="contract_body [32381,38383]" dest="contract_body [32381,38383]"/>
  <match src="identifier: block [60097,60102]" dest="identifier: block [60099,60104]"/>
  <match src="primitive_type [52612,52619]" dest="primitive_type [52614,52621]"/>
  <match src="parameter [53373,53377]" dest="parameter [53375,53379]"/>
  <match src="update_expression [87926,87941]" dest="update_expression [89087,89102]"/>
  <match src="(: ( [28063,28064]" dest="(: ( [28063,28064]"/>
  <match src="): ) [104025,104026]" dest="): ) [103949,103950]"/>
  <match src="*: * [35264,35265]" dest="*: * [35264,35265]"/>
  <match src="if: if [89155,89157]" dest="if: if [90080,90082]"/>
  <match src="string_literal [85441,85478]" dest="string_literal [86741,86778]"/>
  <match src="identifier: r [31421,31422]" dest="identifier: r [31421,31422]"/>
  <match src="call_argument [55049,55055]" dest="call_argument [55051,55057]"/>
  <match src="assignment_expression [70823,70848]" dest="assignment_expression [70534,70559]"/>
  <match src="comment: /**      * @dev Moves `amount` tokens from the caller's account to `recipient`.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [2091,2306]" dest="comment: /**      * @dev Moves `amount` tokens from the caller's account to `recipient`.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [2091,2306]"/>
  <match src="): ) [87706,87707]" dest="): ) [88867,88868]"/>
  <match src=".: . [97922,97923]" dest=".: . [96687,96688]"/>
  <match src="state_mutability [41364,41368]" dest="state_mutability [41364,41368]"/>
  <match src="call_argument [109336,109337]" dest="call_argument [109260,109261]"/>
  <match src="primitive_type [32478,32485]" dest="primitive_type [32478,32485]"/>
  <match src="[: [ [57425,57426]" dest="[: [ [57427,57428]"/>
  <match src=",: , [66633,66634]" dest=",: , [66886,66887]"/>
  <match src="external: external [38690,38698]" dest="external: external [38690,38698]"/>
  <match src="pure: pure [5935,5939]" dest="pure: pure [5935,5939]"/>
  <match src="assignment_expression [71732,71760]" dest="assignment_expression [71443,71471]"/>
  <match src="parameter [8845,8852]" dest="parameter [8845,8852]"/>
  <match src="for: for [103615,103618]" dest="for: for [103539,103542]"/>
  <match src="identifier: token0 [104555,104561]" dest="identifier: token0 [104479,104485]"/>
  <match src="visibility [18823,18831]" dest="visibility [18823,18831]"/>
  <match src="primitive_type [40500,40504]" dest="primitive_type [40500,40504]"/>
  <match src="identifier: IUniswapV2Pair [104436,104450]" dest="identifier: IUniswapV2Pair [104360,104374]"/>
  <match src="identifier: endBlock [80487,80495]" dest="identifier: endBlock [81172,81180]"/>
  <match src="expression_statement [56615,56655]" dest="expression_statement [56617,56657]"/>
  <match src="function_definition [896,1055]" dest="function_definition [896,1055]"/>
  <match src="primitive_type [16652,16659]" dest="primitive_type [16652,16659]"/>
  <match src="=: = [104063,104064]" dest="=: = [103987,103988]"/>
  <match src="assignment_expression [108201,108247]" dest="assignment_expression [108125,108171]"/>
  <match src="): ) [80867,80868]" dest="): ) [81554,81555]"/>
  <match src="user_defined_type [69280,69294]" dest="user_defined_type [68991,69005]"/>
  <match src="comment: // after each term, mine half SHD token [65508,65547]" dest="comment: // after each term, mine half SHD token [65518,65557]"/>
  <match src="comment: // File: @uniswap/lib/contracts/libraries/FullMath.sol [26955,27009]" dest="comment: // File: @uniswap/lib/contracts/libraries/FullMath.sol [26955,27009]"/>
  <match src="solidity_pragma_token [58675,58690]" dest="solidity_pragma_token [58677,58692]"/>
  <match src="binary_expression [89707,89752]" dest="binary_expression [90949,90994]"/>
  <match src="identifier: _pid [99974,99978]" dest="identifier: _pid [98679,98683]"/>
  <match src="identifier: other [35967,35972]" dest="identifier: other [35967,35972]"/>
  <match src="identifier: add [53457,53460]" dest="identifier: add [53459,53462]"/>
  <match src="{: { [48914,48915]" dest="{: { [48916,48917]"/>
  <match src="block_statement [81336,81457]" dest="block_statement [82025,82146]"/>
  <match src="number_literal: 0 [69504,69505]" dest="number_literal: 0 [69215,69216]"/>
  <match src="binary_expression [31824,31841]" dest="binary_expression [31824,31841]"/>
  <match src="call_argument [62557,62565]" dest="call_argument [62559,62567]"/>
  <match src="uint256: uint256 [10050,10057]" dest="uint256: uint256 [10050,10057]"/>
  <match src="{: { [85317,85318]" dest="{: { [86617,86618]"/>
  <match src="primitive_type [78666,78673]" dest="primitive_type [78246,78253]"/>
  <match src="return_type_definition [102403,102420]" dest="return_type_definition [102262,102279]"/>
  <match src=".: . [81986,81987]" dest=".: . [82818,82819]"/>
  <match src="user_defined_type [35997,36006]" dest="user_defined_type [35997,36006]"/>
  <match src=",: , [52800,52801]" dest=",: , [52802,52803]"/>
  <match src="[: [ [77139,77140]" dest="[: [ [77924,77925]"/>
  <match src="primitive_type [65457,65464]" dest="primitive_type [65467,65474]"/>
  <match src="): ) [22373,22374]" dest="): ) [22373,22374]"/>
  <match src="state_mutability [24428,24432]" dest="state_mutability [24428,24432]"/>
  <match src="identifier: developerDAOFund [43615,43631]" dest="identifier: developerDAOFund [43615,43631]"/>
  <match src="): ) [42102,42103]" dest="): ) [42102,42103]"/>
  <match src="type_name [49552,49558]" dest="type_name [49554,49560]"/>
  <match src="memory: memory [37627,37633]" dest="memory: memory [37627,37633]"/>
  <match src="array_access [87174,87207]" dest="array_access [88333,88368]"/>
  <match src="parameter [15241,15253]" dest="parameter [15241,15253]"/>
  <match src="if: if [30331,30333]" dest="if: if [30331,30333]"/>
  <match src="uint: uint [38898,38902]" dest="uint: uint [38898,38902]"/>
  <match src="member_expression [95023,95034]" dest="member_expression [81126,81137]"/>
  <match src="primitive_type [56329,56336]" dest="primitive_type [56331,56338]"/>
  <match src="identifier: _tokenAmountLimit [44734,44751]" dest="identifier: _tokenAmountLimit [44736,44753]"/>
  <match src="call_expression [98015,98157]" dest="call_expression [96780,96922]"/>
  <match src="(: ( [90721,90722]" dest="(: ( [91746,91747]"/>
  <match src="return_statement [33268,33311]" dest="return_statement [33268,33311]"/>
  <match src="state_mutability [5295,5299]" dest="state_mutability [5295,5299]"/>
  <match src="user_defined_type [105301,105314]" dest="user_defined_type [105225,105238]"/>
  <match src="identifier: returndata [19120,19130]" dest="identifier: returndata [19120,19130]"/>
  <match src="call_expression [99810,99859]" dest="call_expression [98002,98051]"/>
  <match src="identifier: invitee [87095,87102]" dest="identifier: invitee [88252,88259]"/>
  <match src="identifier: _fromBlock [103039,103049]" dest="identifier: _fromBlock [102963,102973]"/>
  <match src="identifier: accumulativeDividend [78878,78898]" dest="identifier: accumulativeDividend [78461,78481]"/>
  <match src="assignment_expression [99127,99193]" dest="assignment_expression [99291,99357]"/>
  <match src="emit: emit [86424,86428]" dest="emit: emit [87712,87716]"/>
  <match src="address: address [55601,55608]" dest="address: address [55603,55610]"/>
  <match src="function_body [59877,59919]" dest="function_body [59879,59921]"/>
  <match src="comment: // benefit is lost if 'b' is also tested. [6064,6105]" dest="comment: // benefit is lost if 'b' is also tested. [6064,6105]"/>
  <match src="(: ( [18759,18760]" dest="(: ( [18759,18760]"/>
  <match src="): ) [45625,45626]" dest="): ) [45627,45628]"/>
  <match src="{: { [51460,51461]" dest="{: { [51462,51463]"/>
  <match src="memory: memory [17386,17392]" dest="memory: memory [17386,17392]"/>
  <match src="identifier: _pid [73019,73023]" dest="identifier: _pid [72701,72705]"/>
  <match src="&gt;&gt;=: &gt;&gt;= [29438,29441]" dest="&gt;&gt;=: &gt;&gt;= [29438,29441]"/>
  <match src="uint256: uint256 [76184,76191]" dest="uint256: uint256 [75700,75707]"/>
  <match src="public: public [225,231]" dest="public: public [225,231]"/>
  <match src="(: ( [98251,98252]" dest="(: ( [97016,97017]"/>
  <match src="identifier: user [62669,62673]" dest="identifier: user [62671,62675]"/>
  <match src="}: } [106901,106902]" dest="}: } [106825,106826]"/>
  <match src="call_expression [25962,26030]" dest="call_expression [25962,26030]"/>
  <match src="external: external [40059,40067]" dest="external: external [40059,40067]"/>
  <match src="(: ( [76217,76218]" dest="(: ( [75733,75734]"/>
  <match src="function: function [106910,106918]" dest="function: function [106834,106842]"/>
  <match src="call_argument [8880,8908]" dest="call_argument [8880,8908]"/>
  <match src="primitive_type [100236,100243]" dest="primitive_type [66576,66583]"/>
  <match src="=&gt;: =&gt; [64896,64898]" dest="=&gt;: =&gt; [64904,64906]"/>
  <match src="type_name [35927,35936]" dest="type_name [35927,35936]"/>
  <match src="address: address [43168,43175]" dest="address: address [43168,43175]"/>
  <match src="): ) [19144,19145]" dest="): ) [19144,19145]"/>
  <match src="identifier: shardPoolDividendWeight [76458,76481]" dest="identifier: shardPoolDividendWeight [75974,75997]"/>
  <match src="comment: // to mint token cross chain [65941,65969]" dest="comment: // to mint token cross chain [65951,65979]"/>
  <match src="type_name [45159,45166]" dest="type_name [45161,45168]"/>
  <match src="uint: uint [88777,88781]" dest="uint: uint [89625,89629]"/>
  <match src="identifier: produceBlocksPerDay [65388,65407]" dest="identifier: produceBlocksPerDay [65398,65417]"/>
  <match src="uint256: uint256 [95340,95347]" dest="uint256: uint256 [94488,94495]"/>
  <match src="call_expression [28095,28110]" dest="call_expression [28095,28110]"/>
  <match src="type_name [94730,94737]" dest="type_name [97214,97221]"/>
  <match src="binary_expression [85566,85592]" dest="binary_expression [86866,86892]"/>
  <match src="=: = [79534,79535]" dest="=: = [78894,78895]"/>
  <match src="type_name [60686,60693]" dest="type_name [60688,60695]"/>
  <match src="binary_expression [21621,21665]" dest="binary_expression [21621,21665]"/>
  <match src="function_body [79024,79646]" dest="function_body [78813,80009]"/>
  <match src="else: else [32077,32081]" dest="else: else [32077,32081]"/>
  <match src="type_name [98945,98952]" dest="type_name [99130,99137]"/>
  <match src="primitive_type [27224,27231]" dest="primitive_type [27224,27231]"/>
  <match src="identifier: MAX_MONTH [90893,90902]" dest="identifier: MAX_MONTH [91918,91927]"/>
  <match src="(: ( [5308,5309]" dest="(: ( [5308,5309]"/>
  <match src="(: ( [40247,40248]" dest="(: ( [40247,40248]"/>
  <match src="variable_declaration_statement [78666,78728]" dest="variable_declaration_statement [78246,78308]"/>
  <match src="expression_statement [69555,69570]" dest="expression_statement [69266,69281]"/>
  <match src="identifier: nCheckpoints [62137,62149]" dest="identifier: nCheckpoints [62139,62151]"/>
  <match src="call_expression [83625,83675]" dest="call_expression [85369,85419]"/>
  <match src="type_name [19276,19281]" dest="type_name [19276,19281]"/>
  <match src="else: else [19825,19829]" dest="else: else [19825,19829]"/>
  <match src="external: external [39275,39283]" dest="external: external [39275,39283]"/>
  <match src="[: [ [55199,55200]" dest="[: [ [55201,55202]"/>
  <match src="{: { [73209,73210]" dest="{: { [72974,72975]"/>
  <match src="identifier: developerDAOFund [67631,67647]" dest="identifier: developerDAOFund [67845,67861]"/>
  <match src="call_expression [83212,83275]" dest="call_expression [90391,90453]"/>
  <match src="string [85441,85478]" dest="string [86741,86778]"/>
  <match src="identifier: existedDividend [78819,78834]" dest="identifier: existedDividend [77535,77550]"/>
  <match src="function_definition [105706,106902]" dest="function_definition [105630,106826]"/>
  <match src="): ) [73344,73345]" dest="): ) [73109,73110]"/>
  <match src="returns: returns [42827,42834]" dest="returns: returns [42827,42834]"/>
  <match src="identifier: lpTokenAmount [82055,82068]" dest="identifier: lpTokenAmount [82893,82906]"/>
  <match src="): ) [5962,5963]" dest="): ) [5962,5963]"/>
  <match src="uint256: uint256 [7223,7230]" dest="uint256: uint256 [7223,7230]"/>
  <match src="function_body [6884,6963]" dest="function_body [6884,6963]"/>
  <match src="memory: memory [95389,95395]" dest="memory: memory [94537,94543]"/>
  <match src="-: - [27859,27860]" dest="-: - [27859,27860]"/>
  <match src="call_argument [35332,35343]" dest="call_argument [35332,35343]"/>
  <match src="return: return [19329,19335]" dest="return: return [19329,19335]"/>
  <match src="identifier: amount [51506,51512]" dest="identifier: amount [51508,51514]"/>
  <match src=".: . [72278,72279]" dest=".: . [72156,72157]"/>
  <match src="identifier: amount [80446,80452]" dest="identifier: amount [82535,82541]"/>
  <match src="virtual: virtual [76980,76987]" dest="virtual: virtual [76496,76503]"/>
  <match src="comment: // lossy [37537,37545]" dest="comment: // lossy [37537,37545]"/>
  <match src="event_paramater [39761,39779]" dest="event_paramater [39761,39779]"/>
  <match src="function: function [52555,52563]" dest="function: function [52557,52565]"/>
  <match src="uint: uint [41660,41664]" dest="uint: uint [41660,41664]"/>
  <match src="state_mutability [24316,24320]" dest="state_mutability [24316,24320]"/>
  <match src="function_definition [15569,15764]" dest="function_definition [15569,15764]"/>
  <match src="): ) [19046,19047]" dest="): ) [19046,19047]"/>
  <match src="event: event [66577,66582]" dest="event: event [66830,66835]"/>
  <match src="): ) [33033,33034]" dest="): ) [33033,33034]"/>
  <match src="identifier: i [76675,76676]" dest="identifier: i [76191,76192]"/>
  <match src="call_argument [76604,76617]" dest="call_argument [76120,76133]"/>
  <match src="(: ( [76603,76604]" dest="(: ( [76119,76120]"/>
  <match src="member_expression [73855,73880]" dest="member_expression [71976,72001]"/>
  <match src=",: , [62006,62007]" dest=",: , [62008,62009]"/>
  <match src="identifier: getPoolLength [91034,91047]" dest="identifier: getPoolLength [92059,92072]"/>
  <match src="primitive_type [106659,106663]" dest="primitive_type [106583,106587]"/>
  <match src="block_statement [60751,61158]" dest="block_statement [60753,61160]"/>
  <match src="if: if [29007,29009]" dest="if: if [29007,29009]"/>
  <match src="type_name [12711,12715]" dest="type_name [12711,12715]"/>
  <match src="): ) [36334,36335]" dest="): ) [36334,36335]"/>
  <match src="member_expression [80707,80726]" dest="member_expression [81394,81413]"/>
  <match src="(: ( [76485,76486]" dest="(: ( [76001,76002]"/>
  <match src="identifier: farmMint [77668,77676]" dest="identifier: accumulativeSHDPerWeight [77475,77499]"/>
  <match src="&gt;: &gt; [83832,83833]" dest="&gt;: &gt; [84256,84257]"/>
  <match src="member_expression [17040,17051]" dest="member_expression [17040,17051]"/>
  <match src="(: ( [88502,88503]" dest="(: ( [89350,89351]"/>
  <match src="binary_expression [67248,67271]" dest="binary_expression [67495,67518]"/>
  <match src="identifier: _pid [98434,98438]" dest="identifier: _pid [97199,97203]"/>
  <match src="identifier: pool [83930,83934]" dest="identifier: pool [84454,84458]"/>
  <match src="type_name [40309,40316]" dest="type_name [40309,40316]"/>
  <match src="}: } [77108,77109]" dest="}: } [76624,76625]"/>
  <match src="&lt;=: &lt;= [36202,36204]" dest="&lt;=: &lt;= [36202,36204]"/>
  <match src="solidity_version: 0.8.0 [4496,4501]" dest="solidity_version: 0.8.0 [4496,4501]"/>
  <match src="user_defined_type [63027,63039]" dest="user_defined_type [63029,63041]"/>
  <match src="returns: returns [92618,92625]" dest="returns: returns [92266,92273]"/>
  <match src="+: + [35648,35649]" dest="+: + [35648,35649]"/>
  <match src="): ) [41902,41903]" dest="): ) [41902,41903]"/>
  <match src="return_statement [60438,60490]" dest="return_statement [60440,60492]"/>
  <match src="): ) [71635,71636]" dest="): ) [71346,71347]"/>
  <match src="state_variable_declaration [43059,43080]" dest="state_variable_declaration [43059,43080]"/>
  <match src="struct: struct [64391,64397]" dest="struct: struct [64393,64399]"/>
  <match src="member_expression [82113,82177]" dest="member_expression [82951,83015]"/>
  <match src="primitive_type [105991,105998]" dest="primitive_type [105915,105922]"/>
  <match src="returns: returns [88993,89000]" dest="returns: returns [89841,89848]"/>
  <match src="): ) [83892,83893]" dest="): ) [85614,85615]"/>
  <match src="(: ( [56646,56647]" dest="(: ( [56648,56649]"/>
  <match src="number_literal: 0 [36943,36944]" dest="number_literal: 0 [36943,36944]"/>
  <match src="number_literal: 1 [86362,86363]" dest="number_literal: 1 [87650,87651]"/>
  <match src="&gt;: &gt; [60596,60597]" dest="&gt;: &gt; [60598,60599]"/>
  <match src="uint256: uint256 [73430,73437]" dest="uint256: uint256 [73195,73202]"/>
  <match src="member_expression [79278,79370]" dest="member_expression [79433,79525]"/>
  <match src="call_expression [93197,93221]" dest="call_expression [92845,92869]"/>
  <match src=",: , [88528,88529]" dest=",: , [89376,89377]"/>
  <match src="call_argument [54977,55014]" dest="call_argument [54979,55016]"/>
  <match src="call_argument [61688,61695]" dest="call_argument [61690,61697]"/>
  <match src="[: [ [95841,95842]" dest="[: [ [95080,95081]"/>
  <match src="call_expression [103753,103798]" dest="call_expression [103677,103722]"/>
  <match src="binary_expression [29819,29835]" dest="binary_expression [29819,29835]"/>
  <match src="identifier: _pid [81371,81375]" dest="identifier: _pid [82060,82064]"/>
  <match src="identifier: _pids [88414,88419]" dest="identifier: _pids [89262,89267]"/>
  <match src="(: ( [77001,77002]" dest="(: ( [76517,76518]"/>
  <match src="state_mutability [102398,102402]" dest="state_mutability [102257,102261]"/>
  <match src="(: ( [76389,76390]" dest="(: ( [75905,75906]"/>
  <match src="call_expression [72212,72229]" dest="call_expression [72016,72033]"/>
  <match src="identifier: decode144 [98047,98056]" dest="identifier: decode144 [96812,96821]"/>
  <match src="return_statement [104686,104712]" dest="return_statement [104610,104636]"/>
  <match src="expression_statement [70199,70322]" dest="expression_statement [69910,70033]"/>
  <match src="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but performing a static call.      *      * _Available since v3.3._      */ [17159,17330]" dest="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but performing a static call.      *      * _Available since v3.3._      */ [17159,17330]"/>
  <match src="&gt;&gt;=: &gt;&gt;= [29072,29075]" dest="&gt;&gt;=: &gt;&gt;= [29072,29075]"/>
  <match src="function: function [105706,105714]" dest="function: function [105630,105638]"/>
  <match src="identifier: success [19305,19312]" dest="identifier: success [19305,19312]"/>
  <match src="memory: memory [60863,60869]" dest="memory: memory [60865,60871]"/>
  <match src="array_access [85498,85516]" dest="array_access [86798,86816]"/>
  <match src="identifier: uq112x112 [33058,33067]" dest="identifier: uq112x112 [33058,33067]"/>
  <match src="function_definition [17336,17535]" dest="function_definition [17336,17535]"/>
  <match src="identifier: functionDelegateCall [18451,18471]" dest="identifier: functionDelegateCall [18451,18471]"/>
  <match src="assignment_expression [106607,106692]" dest="assignment_expression [106531,106616]"/>
  <match src="state_variable_declaration [65657,65693]" dest="state_variable_declaration [65667,65703]"/>
  <match src="): ) [104758,104759]" dest="): ) [104682,104683]"/>
  <match src="binary_expression [27732,27741]" dest="binary_expression [27732,27741]"/>
  <match src="number_literal: 0x100000000 [30552,30563]" dest="number_literal: 0x100000000 [30552,30563]"/>
  <match src="): ) [8820,8821]" dest="): ) [8820,8821]"/>
  <match src="string_literal [44974,44989]" dest="string_literal [44976,44991]"/>
  <match src="=: = [29817,29818]" dest="=: = [29817,29818]"/>
  <match src="function: function [49968,49976]" dest="function: function [49970,49978]"/>
  <match src="block_statement [60263,60298]" dest="block_statement [60265,60300]"/>
  <match src="identifier: _nftPoolId [93429,93439]" dest="identifier: _nftPoolId [93077,93087]"/>
  <match src="virtual: virtual [71873,71880]" dest="virtual: virtual [71584,71591]"/>
  <match src="type_name [94716,94723]" dest="type_name [85069,85076]"/>
  <match src="uint256: uint256 [98426,98433]" dest="uint256: uint256 [97191,97198]"/>
  <match src="variable_declaration [69910,69935]" dest="variable_declaration [69621,69646]"/>
  <match src="if_statement [84837,84997]" dest="if_statement [85968,86297]"/>
  <match src="function_definition [33845,34086]" dest="function_definition [33845,34086]"/>
  <match src="expression_statement [32143,32150]" dest="expression_statement [32143,32150]"/>
  <match src="}: } [95928,95929]" dest="}: } [95238,95239]"/>
  <match src="memory: memory [15247,15253]" dest="memory: memory [15247,15253]"/>
  <match src="primitive_type [34316,34323]" dest="primitive_type [34316,34323]"/>
  <match src="comment: /**      * @notice Called by the delegator on a delegate to initialize it for duty      * @param data The encoded bytes data for any initialization      */ [108879,109037]" dest="comment: /**      * @notice Called by the delegator on a delegate to initialize it for duty      * @param data The encoded bytes data for any initialization      */ [108803,108961]"/>
  <match src="binary_expression [36857,36872]" dest="binary_expression [36857,36872]"/>
  <match src="identifier: add [55892,55895]" dest="identifier: add [55894,55897]"/>
  <match src="call_expression [90948,91009]" dest="call_expression [91973,92034]"/>
  <match src="(: ( [36314,36315]" dest="(: ( [36314,36315]"/>
  <match src="solidity: solidity [23714,23722]" dest="solidity: solidity [23714,23722]"/>
  <match src="modifier_invocation [71712,71721]" dest="modifier_invocation [71423,71432]"/>
  <match src="): ) [105768,105769]" dest="): ) [105692,105693]"/>
  <match src="identifier: blackList [73027,73036]" dest="identifier: blackList [72709,72718]"/>
  <match src="identifier: _totalSupply [55802,55814]" dest="identifier: _totalSupply [55804,55816]"/>
  <match src="call_argument [37654,37666]" dest="call_argument [37654,37666]"/>
  <match src="identifier: newOriginWeight [80689,80704]" dest="identifier: newOriginWeight [81376,81391]"/>
  <match src="identifier: _lockTime [90840,90849]" dest="identifier: _lockTime [91865,91874]"/>
  <match src="parameter [90722,90741]" dest="parameter [91747,91766]"/>
  <match src="=: = [71753,71754]" dest="=: = [71464,71465]"/>
  <match src="identifier: _pids [95894,95899]" dest="identifier: _pids [95161,95166]"/>
  <match src="primitive_type [3908,3912]" dest="primitive_type [3908,3912]"/>
  <match src="(: ( [82586,82587]" dest="(: ( [83424,83425]"/>
  <match src="identifier: _to [59475,59478]" dest="identifier: _to [59477,59480]"/>
  <match src="identifier: a [8110,8111]" dest="identifier: a [8110,8111]"/>
  <match src="call_expression [105088,105120]" dest="call_expression [105012,105044]"/>
  <match src="): ) [97109,97110]" dest="): ) [95874,95875]"/>
  <match src="(: ( [35002,35003]" dest="(: ( [35002,35003]"/>
  <match src="identifier: blockTimestamp [105841,105855]" dest="identifier: blockTimestamp [105765,105779]"/>
  <match src="): ) [14162,14163]" dest="): ) [14162,14163]"/>
  <match src=".: . [106712,106713]" dest=".: . [106636,106637]"/>
  <match src="*: * [35115,35116]" dest="*: * [35115,35116]"/>
  <match src="internal: internal [21942,21950]" dest="internal: internal [21942,21950]"/>
  <match src="identifier: rankPoolIndex [87848,87861]" dest="identifier: rankPoolIndex [89009,89022]"/>
  <match src="number_literal: 1 [87238,87239]" dest="number_literal: 1 [88399,88400]"/>
  <match src="parameter [103118,103139]" dest="parameter [103042,103063]"/>
  <match src="identifier: lastPriceUpdateHeight [106778,106799]" dest="identifier: lastPriceUpdateHeight [106702,106723]"/>
  <match src="primitive_type [16999,17003]" dest="primitive_type [16999,17003]"/>
  <match src="): ) [11838,11839]" dest="): ) [11838,11839]"/>
  <match src="(: ( [37051,37052]" dest="(: ( [37051,37052]"/>
  <match src="if: if [60240,60242]" dest="if: if [60242,60244]"/>
  <match src="assignment_expression [93483,93544]" dest="assignment_expression [93131,93192]"/>
  <match src="uint256: uint256 [36776,36783]" dest="uint256: uint256 [36776,36783]"/>
  <match src=".: . [79469,79470]" dest=".: . [79624,79625]"/>
  <match src="function_definition [71652,71768]" dest="function_definition [71363,71479]"/>
  <match src="identifier: Checkpoint [58875,58885]" dest="identifier: Checkpoint [58877,58887]"/>
  <match src="identifier: blockTimestamp [41690,41704]" dest="identifier: blockTimestamp [41690,41704]"/>
  <match src="): ) [39183,39184]" dest="): ) [39183,39184]"/>
  <match src="identifier: fromBlock [61014,61023]" dest="identifier: fromBlock [61016,61025]"/>
  <match src="address: address [64209,64216]" dest="address: address [64211,64218]"/>
  <match src="identifier: invitor [87103,87110]" dest="identifier: invitor [88260,88267]"/>
  <match src="external: external [92591,92599]" dest="external: external [92239,92247]"/>
  <match src="override: override [50900,50908]" dest="override: override [50902,50910]"/>
  <match src="identifier: IUniswapV2Pair [69280,69294]" dest="identifier: IUniswapV2Pair [68991,69005]"/>
  <match src="uint112: uint112 [34777,34784]" dest="uint112: uint112 [34777,34784]"/>
  <match src=".: . [85974,85975]" dest=".: . [87273,87274]"/>
  <match src="primitive_type [97122,97129]" dest="primitive_type [95887,95894]"/>
  <match src="call_argument [56567,56603]" dest="call_argument [56569,56605]"/>
  <match src="identifier: FixedPoint [105788,105798]" dest="identifier: FixedPoint [105712,105722]"/>
  <match src="function: function [45728,45736]" dest="function: function [45730,45738]"/>
  <match src="identifier: spender [57475,57482]" dest="identifier: spender [57477,57484]"/>
  <match src="identifier: pool [84181,84185]" dest="identifier: pool [84710,84714]"/>
  <match src="): ) [107421,107422]" dest="): ) [107345,107346]"/>
  <match src=".: . [97096,97097]" dest=".: . [95861,95862]"/>
  <match src="assignment_expression [78052,78078]" dest="assignment_expression [77182,77208]"/>
  <match src="primitive_type [5335,5342]" dest="primitive_type [5335,5342]"/>
  <match src="identifier: r [31641,31642]" dest="identifier: r [31641,31642]"/>
  <match src="tuple_expression [104692,104711]" dest="tuple_expression [104616,104635]"/>
  <match src="identifier: from [62758,62762]" dest="identifier: from [62760,62764]"/>
  <match src="identifier: spender [57194,57201]" dest="identifier: spender [57196,57203]"/>
  <match src=",: , [66538,66539]" dest=",: , [66791,66792]"/>
  <match src="number_literal: 2276 [68651,68655]" dest="number_literal: 2276 [68512,68516]"/>
  <match src="parameter [41660,41681]" dest="parameter [41660,41681]"/>
  <match src="visibility [40477,40485]" dest="visibility [40477,40485]"/>
  <match src="block_statement [83606,83691]" dest="block_statement [85354,85431]"/>
  <match src="=: = [82555,82556]" dest="=: = [83393,83394]"/>
  <match src=",: , [68313,68314]" dest=",: , [68364,68365]"/>
  <match src="(: ( [79767,79768]" dest="(: ( [80352,80353]"/>
  <match src="yul_evm_builtin [19753,19756]" dest="yul_evm_builtin [19753,19756]"/>
  <match src="array_access [54148,54173]" dest="array_access [54150,54175]"/>
  <match src="}: } [33530,33531]" dest="}: } [33530,33531]"/>
  <match src="{: { [60423,60424]" dest="{: { [60425,60426]"/>
  <match src="false: false [109620,109625]" dest="false: false [109544,109549]"/>
  <match src="comment: // The easiest way to bubble the revert reason is using memory via assembly [19492,19567]" dest="comment: // The easiest way to bubble the revert reason is using memory via assembly [19492,19567]"/>
  <match src="primitive_type [39492,39496]" dest="primitive_type [39492,39496]"/>
  <match src="): ) [40143,40144]" dest="): ) [40143,40144]"/>
  <match src="comment: // last dividend block height [63795,63824]" dest="comment: // last dividend block height [63797,63826]"/>
  <match src="address: address [102375,102382]" dest="address: address [102234,102241]"/>
  <match src="block_statement [93364,93863]" dest="block_statement [93012,93509]"/>
  <match src="call_argument [92954,92955]" dest="call_argument [92602,92603]"/>
  <match src="identifier: c [5367,5368]" dest="identifier: c [5367,5368]"/>
  <match src="return_statement [89192,89206]" dest="return_statement [90117,90131]"/>
  <match src=",: , [41681,41682]" dest=",: , [41681,41682]"/>
  <match src="identifier: votes [61907,61912]" dest="identifier: votes [61909,61914]"/>
  <match src="uint256: uint256 [79801,79808]" dest="uint256: uint256 [80386,80393]"/>
  <match src="/: / [29671,29672]" dest="/: / [29671,29672]"/>
  <match src="type_name [63519,63526]" dest="type_name [63521,63528]"/>
  <match src="identifier: balance [14112,14119]" dest="identifier: balance [14112,14119]"/>
  <match src="identifier: a [11726,11727]" dest="identifier: a [11726,11727]"/>
  <match src="return_type_definition [17832,17854]" dest="return_type_definition [17832,17854]"/>
  <match src=".: . [36105,36106]" dest=".: . [36105,36106]"/>
  <match src="call_expression [55662,55727]" dest="call_expression [55664,55729]"/>
  <match src="member_expression [22279,22294]" dest="member_expression [22279,22294]"/>
  <match src="uint256: uint256 [28043,28050]" dest="uint256: uint256 [28043,28050]"/>
  <match src="]: ] [82528,82529]" dest="]: ] [83366,83367]"/>
  <match src="if: if [46315,46317]" dest="if: if [46557,46559]"/>
  <match src="variable_declaration [77811,77826]" dest="variable_declaration [78932,78964]"/>
  <match src="false [104829,104834]" dest="false [104753,104758]"/>
  <match src=",: , [18892,18893]" dest=",: , [18892,18893]"/>
  <match src="}: } [38382,38383]" dest="}: } [38382,38383]"/>
  <match src="identifier: _beforeTokenTransfer [55740,55760]" dest="identifier: _beforeTokenTransfer [55742,55762]"/>
  <match src="[: [ [60895,60896]" dest="[: [ [60897,60898]"/>
  <match src="type_name [95733,95742]" dest="type_name [94881,94890]"/>
  <match src="identifier: d [28108,28109]" dest="identifier: d [28108,28109]"/>
  <match src="type_name [11718,11725]" dest="type_name [11718,11725]"/>
  <match src="expression_statement [59677,59704]" dest="expression_statement [59679,59706]"/>
  <match src="identifier: value [38659,38664]" dest="identifier: value [38659,38664]"/>
  <match src="]: ] [64968,64969]" dest="]: ] [64978,64979]"/>
  <match src="number_literal: 1 [60481,60482]" dest="number_literal: 1 [60483,60484]"/>
  <match src="boolean_literal [70405,70410]" dest="boolean_literal [70116,70121]"/>
  <match src="{: { [17051,17052]" dest="{: { [17051,17052]"/>
  <match src="variable_declaration_tuple [18006,18045]" dest="variable_declaration_tuple [18006,18045]"/>
  <match src="expression_statement [55190,55246]" dest="expression_statement [55192,55248]"/>
  <match src="identifier: _pairInfo [106053,106062]" dest="identifier: _pairInfo [105977,105986]"/>
  <match src="member_expression [41787,41828]" dest="member_expression [41787,41828]"/>
  <match src="identifier: l [27266,27267]" dest="identifier: l [27266,27267]"/>
  <match src="visibility [34613,34621]" dest="visibility [34613,34621]"/>
  <match src="string_literal [57357,57393]" dest="string_literal [57359,57395]"/>
  <match src="member_expression [96139,96152]" dest="member_expression [95449,95462]"/>
  <match src="identifier: calculateOracleWeight [96884,96905]" dest="identifier: calculateOracleWeight [95649,95670]"/>
  <match src="}: } [74960,74961]" dest="}: } [74832,74833]"/>
  <match src="comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [4506,5081]" dest="comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [4506,5081]"/>
  <match src="true [59546,59550]" dest="true [59548,59552]"/>
  <match src="member_expression [80441,80452]" dest="member_expression [82530,82541]"/>
  <match src="member_expression [84083,84120]" dest="member_expression [84612,84649]"/>
  <match src="call_argument [28064,28065]" dest="call_argument [28064,28065]"/>
  <match src="}: } [71643,71644]" dest="}: } [71354,71355]"/>
  <match src=".: . [106115,106116]" dest=".: . [106039,106040]"/>
  <match src="uint256: uint256 [27541,27548]" dest="uint256: uint256 [27541,27548]"/>
  <match src="pragma: pragma [28362,28368]" dest="pragma: pragma [28362,28368]"/>
  <match src="identifier: decode144 [98242,98251]" dest="identifier: decode144 [97007,97016]"/>
  <match src="call_expression [72265,72285]" dest="call_expression [72143,72163]"/>
  <match src="identifier: r [27852,27853]" dest="identifier: r [27852,27853]"/>
  <match src="type_name [462,469]" dest="type_name [462,469]"/>
  <match src="identifier: isContract [16873,16883]" dest="identifier: isContract [16873,16883]"/>
  <match src="call_expression [52013,52025]" dest="call_expression [52015,52027]"/>
  <match src="returns: returns [35988,35995]" dest="returns: returns [35988,35995]"/>
  <match src="call_argument [95592,95601]" dest="call_argument [94740,94749]"/>
  <match src=",: , [89797,89798]" dest=",: , [91039,91040]"/>
  <match src="): ) [31253,31254]" dest="): ) [31253,31254]"/>
  <match src="boolean_literal [47356,47360]" dest="boolean_literal [47358,47362]"/>
  <match src="identifier: reciprocal [37560,37570]" dest="identifier: reciprocal [37560,37570]"/>
  <match src="}: } [109687,109688]" dest="}: } [109611,109612]"/>
  <match src="visibility [41614,41622]" dest="visibility [41614,41622]"/>
  <match src="(: ( [85497,85498]" dest="(: ( [86797,86798]"/>
  <match src="function: function [47387,47395]" dest="function: function [47389,47397]"/>
  <match src="(: ( [99592,99593]" dest="(: ( [97682,97683]"/>
  <match src="comment: // File: @uniswap/v2-periphery/contracts/libraries/UniswapV2OracleLibrary.sol [40934,41011]" dest="comment: // File: @uniswap/v2-periphery/contracts/libraries/UniswapV2OracleLibrary.sol [40934,41011]"/>
  <match src="): ) [39111,39112]" dest="): ) [39111,39112]"/>
  <match src="type_name [51102,51109]" dest="type_name [51104,51111]"/>
  <match src="identifier: EvilPoolInfo [94139,94151]" dest="identifier: EvilPoolInfo [93785,93797]"/>
  <match src="user_defined_type [102431,102439]" dest="user_defined_type [102290,102298]"/>
  <match src="identifier: pool [84345,84349]" dest="identifier: pool [84880,84884]"/>
  <match src="variable_declaration [105931,105961]" dest="variable_declaration [105855,105885]"/>
  <match src="identifier: reserve0 [42026,42034]" dest="identifier: reserve0 [42026,42034]"/>
  <match src="}: } [69631,69632]" dest="}: } [69342,69343]"/>
  <match src="identifier: _pid [89753,89757]" dest="identifier: _pid [90995,90999]"/>
  <match src="augmented_assignment_expression [29518,29526]" dest="augmented_assignment_expression [29518,29526]"/>
  <match src="primitive_type [35446,35453]" dest="primitive_type [35446,35453]"/>
  <match src="identifier: rankIdList [94022,94032]" dest="identifier: rankIdList [93668,93678]"/>
  <match src="{: { [34654,34655]" dest="{: { [34654,34655]"/>
  <match src="identifier: other [36284,36289]" dest="identifier: other [36284,36289]"/>
  <match src="visibility [76973,76979]" dest="visibility [76489,76495]"/>
  <match src="=: = [43406,43407]" dest="=: = [43406,43407]"/>
  <match src="address: address [42796,42803]" dest="address: address [42796,42803]"/>
  <match src="call_argument [81426,81433]" dest="call_argument [82115,82122]"/>
  <match src="visibility [65983,65989]" dest="visibility [65993,66001]"/>
  <match src="call_expression [81231,81283]" dest="call_expression [81920,81972]"/>
  <match src="user_defined_type [94139,94151]" dest="user_defined_type [93785,93797]"/>
  <match src="type_name [93379,93387]" dest="type_name [93027,93035]"/>
  <match src="identifier: isFirstTokenEth [107725,107740]" dest="identifier: isFirstTokenEth [107649,107664]"/>
  <match src="parameter [9431,9440]" dest="parameter [9431,9440]"/>
  <match src="function_body [51460,51543]" dest="function_body [51462,51545]"/>
  <match src="true [5713,5717]" dest="true [5713,5717]"/>
  <match src="(: ( [24304,24305]" dest="(: ( [24304,24305]"/>
  <match src="member_expression [20709,20732]" dest="member_expression [20709,20732]"/>
  <match src="number_literal: 1 [29679,29680]" dest="number_literal: 1 [29679,29680]"/>
  <match src="variable_declaration_tuple [97121,97171]" dest="variable_declaration_tuple [95886,95936]"/>
  <match src="(: ( [69734,69735]" dest="(: ( [69445,69446]"/>
  <match src="visibility [43975,43981]" dest="visibility [43975,43983]"/>
  <match src="return: return [11022,11028]" dest="return: return [11022,11028]"/>
  <match src="identifier: result [37335,37341]" dest="identifier: result [37335,37341]"/>
  <match src="identifier: encodeWithSelector [21790,21808]" dest="identifier: encodeWithSelector [21790,21808]"/>
  <match src="function_definition [90696,91017]" dest="function_definition [91721,92042]"/>
  <match src="function_definition [1872,1927]" dest="function_definition [1872,1927]"/>
  <match src="primitive_type [39358,39365]" dest="primitive_type [39358,39365]"/>
  <match src="type_name [34566,34575]" dest="type_name [34566,34575]"/>
  <match src="tuple_expression [5684,5694]" dest="tuple_expression [5684,5694]"/>
  <match src="type_name [39251,39258]" dest="type_name [39251,39258]"/>
  <match src="function: function [77333,77341]" dest="function: function [76773,76781]"/>
  <match src="expression_statement [87174,87241]" dest="expression_statement [88333,88402]"/>
  <match src="string [25995,26029]" dest="string [25995,26029]"/>
  <match src="uint224: uint224 [35300,35307]" dest="uint224: uint224 [35300,35307]"/>
  <match src="]: ] [64562,64563]" dest="]: ] [64564,64565]"/>
  <match src="identifier: _otherPoolWeight [75634,75650]" dest="identifier: _otherPoolWeight [75150,75166]"/>
  <match src="identifier: r [30514,30515]" dest="identifier: r [30514,30515]"/>
  <match src="identifier: _invitor [86577,86585]" dest="identifier: _invitor [87865,87873]"/>
  <match src="&quot;: &quot; [54204,54205]" dest="&quot;: &quot; [54206,54207]"/>
  <match src="call_argument [34785,34806]" dest="call_argument [34785,34806]"/>
  <match src="identifier: user [62596,62600]" dest="identifier: user [62598,62602]"/>
  <match src="call_argument [103986,104006]" dest="call_argument [103910,103930]"/>
  <match src="identifier: blockNumber [60938,60949]" dest="identifier: blockNumber [60940,60951]"/>
  <match src="): ) [81909,81910]" dest="): ) [82741,82742]"/>
  <match src="': ' [36874,36875]" dest="': ' [36874,36875]"/>
  <match src="identifier: div [107846,107849]" dest="identifier: div [107770,107773]"/>
  <match src=".: . [105798,105799]" dest=".: . [105722,105723]"/>
  <match src="variable_declaration [103809,103837]" dest="variable_declaration [103733,103761]"/>
  <match src="primitive_type [56483,56490]" dest="primitive_type [56485,56492]"/>
  <match src="call_argument [42533,42575]" dest="call_argument [42533,42575]"/>
  <match src="memory: memory [16192,16198]" dest="memory: memory [16192,16198]"/>
  <match src="{: { [19364,19365]" dest="{: { [19364,19365]"/>
  <match src="{: { [91090,91091]" dest="{: { [92115,92116]"/>
  <match src="function: function [39307,39315]" dest="function: function [39307,39315]"/>
  <match src="returns: returns [7259,7266]" dest="returns: returns [7259,7266]"/>
  <match src="uint256: uint256 [92637,92644]" dest="uint256: uint256 [92285,92292]"/>
  <match src="(: ( [38102,38103]" dest="(: ( [38102,38103]"/>
  <match src="user_defined_type [105788,105808]" dest="user_defined_type [105712,105732]"/>
  <match src="false [5685,5690]" dest="false [5685,5690]"/>
  <match src="return_type_definition [3484,3498]" dest="return_type_definition [3484,3498]"/>
  <match src="identifier: _pairInfo [108258,108267]" dest="identifier: _pairInfo [108182,108191]"/>
  <match src="function: function [11705,11713]" dest="function: function [11705,11713]"/>
  <match src="type_name [7268,7275]" dest="type_name [7268,7275]"/>
  <match src="call_argument [71200,71212]" dest="call_argument [70911,70923]"/>
  <match src="call_argument [38305,38338]" dest="call_argument [38305,38338]"/>
  <match src="identifier: _pid [72158,72162]" dest="identifier: _pid [71792,71796]"/>
  <match src="&lt;:  &lt; [47578,47580]" dest="&lt;:  &lt; [47580,47582]"/>
  <match src="primitive_type [35244,35251]" dest="primitive_type [35244,35251]"/>
  <match src="type_cast_expression [33285,33295]" dest="type_cast_expression [33285,33295]"/>
  <match src="primitive_type [36776,36783]" dest="primitive_type [36776,36783]"/>
  <match src="primitive_type [39841,39845]" dest="primitive_type [39841,39845]"/>
  <match src="comment: // overflow is desired, casting never truncates [107534,107581]" dest="comment: // overflow is desired, casting never truncates [107458,107505]"/>
  <match src="type_name [105931,105938]" dest="type_name [105855,105862]"/>
  <match src="(: ( [17884,17885]" dest="(: ( [17884,17885]"/>
  <match src="identifier: _callOptionalReturn [22890,22909]" dest="identifier: _callOptionalReturn [22890,22909]"/>
  <match src="primitive_type [61280,61287]" dest="primitive_type [61282,61289]"/>
  <match src="primitive_type [76184,76191]" dest="primitive_type [75700,75707]"/>
  <match src="identifier: _nftPoolId [92654,92664]" dest="identifier: _nftPoolId [92302,92312]"/>
  <match src="binary_expression [93344,93357]" dest="binary_expression [92992,93005]"/>
  <match src="&gt;&gt;: &gt;&gt; [29831,29833]" dest="&gt;&gt;: &gt;&gt; [29831,29833]"/>
  <match src="binary_expression [10991,10996]" dest="binary_expression [10991,10996]"/>
  <match src="identifier: tokenToEthInfo [71458,71472]" dest="identifier: tokenToEthInfo [71169,71183]"/>
  <match src="private: private [48985,48992]" dest="private: private [48987,48994]"/>
  <match src="type_name [95471,95480]" dest="type_name [94619,94628]"/>
  <match src="identifier: IUniswapV2Pair [97063,97077]" dest="identifier: IUniswapV2Pair [95828,95842]"/>
  <match src="visibility [20639,20647]" dest="visibility [20639,20647]"/>
  <match src="(: ( [78920,78921]" dest="(: ( [78428,78429]"/>
  <match src="identifier: sender [83877,83883]" dest="identifier: sender [85598,85604]"/>
  <match src="identifier: i [76668,76669]" dest="identifier: i [76184,76185]"/>
  <match src="type_name [100269,100276]" dest="type_name [66543,66550]"/>
  <match src=",: , [10157,10158]" dest=",: , [10157,10158]"/>
  <match src="expression_statement [46880,46909]" dest="expression_statement [47122,47151]"/>
  <match src="==: == [97939,97941]" dest="==: == [96704,96706]"/>
  <match src="string_literal [25995,26029]" dest="string_literal [25995,26029]"/>
  <match src="binary_expression [29789,29798]" dest="binary_expression [29789,29798]"/>
  <match src="identifier: setMarketingFund [45857,45873]" dest="identifier: setMarketingFund [45859,45875]"/>
  <match src="type_name [55618,55625]" dest="type_name [55620,55627]"/>
  <match src="call_argument [67802,67806]" dest="call_argument [68016,68020]"/>
  <match src="member_expression [77294,77306]" dest="member_expression [76734,76746]"/>
  <match src="identifier: pool [100014,100018]" dest="identifier: pool [98719,98723]"/>
  <match src="variable_declaration_statement [89823,89913]" dest="variable_declaration_statement [91065,91160]"/>
  <match src="]: ] [88511,88512]" dest="]: ] [89359,89360]"/>
  <match src="member_expression [86341,86361]" dest="member_expression [87629,87649]"/>
  <match src="}: } [52072,52073]" dest="}: } [52074,52075]"/>
  <match src=".: . [47292,47293]" dest=".: . [47294,47295]"/>
  <match src="(: ( [56399,56400]" dest="(: ( [56401,56402]"/>
  <match src="type_name [75870,75877]" dest="type_name [75386,75393]"/>
  <match src="comment: // computes square roots using the babylonian method [28390,28442]" dest="comment: // computes square roots using the babylonian method [28390,28442]"/>
  <match src="primitive_type [104465,104472]" dest="primitive_type [104389,104396]"/>
  <match src="identifier: TokenPairInfo [105737,105750]" dest="identifier: TokenPairInfo [105661,105674]"/>
  <match src="variable_declaration [69735,69749]" dest="variable_declaration [69446,69460]"/>
  <match src="function: function [51028,51036]" dest="function: function [51030,51038]"/>
  <match src="identifier: existedDividend [78901,78916]" dest="identifier: existedDividend [78409,78424]"/>
  <match src="parameter [88397,88419]" dest="parameter [89245,89267]"/>
  <match src="call_argument [90354,90374]" dest="call_argument [91427,91447]"/>
  <match src="call_argument [28280,28281]" dest="call_argument [28280,28281]"/>
  <match src="array_access [52756,52775]" dest="array_access [52758,52777]"/>
  <match src="identifier: lpTokenSwap [97961,97972]" dest="identifier: lpTokenSwap [96726,96737]"/>
  <match src="identifier: upper_other [35332,35343]" dest="identifier: upper_other [35332,35343]"/>
  <match src=",: , [20825,20826]" dest=",: , [20825,20826]"/>
  <match src=",: , [19118,19119]" dest=",: , [19118,19119]"/>
  <match src="identifier: block [80809,80814]" dest="identifier: block [81496,81501]"/>
  <match src="assignment_expression [103670,103706]" dest="assignment_expression [103594,103630]"/>
  <match src="identifier: _x [38205,38207]" dest="identifier: _x [38205,38207]"/>
  <match src="=: = [93245,93246]" dest="=: = [92893,92894]"/>
  <match src="identifier: _SHDPerBlock [75878,75890]" dest="identifier: _SHDPerBlock [75394,75406]"/>
  <match src="type_name [95340,95349]" dest="type_name [94488,94497]"/>
  <match src="identifier: spender [22120,22127]" dest="identifier: spender [22120,22127]"/>
  <match src="type_name [9465,9472]" dest="type_name [9465,9472]"/>
  <match src="=: = [87208,87209]" dest="=: = [88369,88370]"/>
  <match src="number_literal: 0 [56491,56492]" dest="number_literal: 0 [56493,56494]"/>
  <match src="identifier: x [30392,30393]" dest="identifier: x [30392,30393]"/>
  <match src="expression_statement [93781,93825]" dest="expression_statement [93427,93471]"/>
  <match src="variable_declaration [19023,19046]" dest="variable_declaration [19023,19046]"/>
  <match src="): ) [6905,6906]" dest="): ) [6905,6906]"/>
  <match src="): ) [87384,87385]" dest="): ) [88545,88546]"/>
  <match src="identifier: sender [84133,84139]" dest="identifier: sender [84662,84668]"/>
  <match src="address: address [38998,39005]" dest="address: address [38998,39005]"/>
  <match src=".: . [96280,96281]" dest=".: . [95590,95591]"/>
  <match src="=: = [27362,27363]" dest="=: = [27362,27363]"/>
  <match src="contract_body [24278,24635]" dest="contract_body [24278,24635]"/>
  <match src="primitive_type [28983,28990]" dest="primitive_type [28983,28990]"/>
  <match src="identifier: d [28193,28194]" dest="identifier: d [28193,28194]"/>
  <match src="identifier: IUniswapV2Pair [41860,41874]" dest="identifier: IUniswapV2Pair [41860,41874]"/>
  <match src="(: ( [31396,31397]" dest="(: ( [31396,31397]"/>
  <match src="string_literal [36337,36366]" dest="string_literal [36337,36366]"/>
  <match src="uint256: uint256 [66170,66177]" dest="uint256: uint256 [66188,66195]"/>
  <match src="(: ( [89497,89498]" dest="(: ( [90739,90740]"/>
  <match src="state_variable_declaration [65340,65413]" dest="state_variable_declaration [65350,65423]"/>
  <match src="true: true [6943,6947]" dest="true: true [6943,6947]"/>
  <match src="event_paramater [66614,66633]" dest="event_paramater [66867,66886]"/>
  <match src="type_name [88397,88406]" dest="type_name [89245,89254]"/>
  <match src="(: ( [106175,106176]" dest="(: ( [106099,106100]"/>
  <match src="view: view [60013,60017]" dest="view: view [60015,60019]"/>
  <match src="primitive_type [2707,2714]" dest="primitive_type [2707,2714]"/>
  <match src=".: . [73859,73860]" dest=".: . [71980,71981]"/>
  <match src="identifier: getReserves [97221,97232]" dest="identifier: getReserves [95986,95997]"/>
  <match src="variable_declaration [22256,22276]" dest="variable_declaration [22256,22276]"/>
  <match src="state_mutability [39344,39348]" dest="state_mutability [39344,39348]"/>
  <match src="identifier: price0CumulativeLast [105098,105118]" dest="identifier: price0CumulativeLast [105022,105042]"/>
  <match src="identifier: lower [60744,60749]" dest="identifier: lower [60746,60751]"/>
  <match src="identifier: existedDividend [79600,79615]" dest="identifier: existedDividend [79683,79698]"/>
  <match src="identifier: functionCall [23346,23358]" dest="identifier: functionCall [23346,23358]"/>
  <match src="call_argument [77294,77306]" dest="call_argument [76734,76746]"/>
  <match src="identifier: FixedPoint [42533,42543]" dest="identifier: FixedPoint [42533,42543]"/>
  <match src="): ) [14396,14397]" dest="): ) [14396,14397]"/>
  <match src="number_literal: 1 [60717,60718]" dest="number_literal: 1 [60719,60720]"/>
  <match src="pragma: pragma [71,77]" dest="pragma: pragma [71,77]"/>
  <match src="type_name [51938,51945]" dest="type_name [51940,51947]"/>
  <match src="assignment_expression [68046,68074]" dest="assignment_expression [68033,68060]"/>
  <match src="identifier: a [8238,8239]" dest="identifier: a [8238,8239]"/>
  <match src="): ) [46177,46178]" dest="): ) [46179,46180]"/>
  <match src="): ) [84950,84951]" dest="): ) [86081,86082]"/>
  <match src="type_name [105834,105840]" dest="type_name [105758,105764]"/>
  <match src="return_type_definition [18410,18432]" dest="return_type_definition [18410,18432]"/>
  <match src="(: ( [103785,103786]" dest="(: ( [103709,103710]"/>
  <match src="parameter [27521,27528]" dest="parameter [27521,27528]"/>
  <match src="type_name [32744,32751]" dest="type_name [32744,32751]"/>
  <match src="identifier: FixedPoint [36953,36963]" dest="identifier: FixedPoint [36953,36963]"/>
  <match src="{: { [97010,97011]" dest="{: { [95775,95776]"/>
  <match src="type_name [38775,38781]" dest="type_name [38775,38781]"/>
  <match src="identifier: decode144 [33626,33635]" dest="identifier: decode144 [33626,33635]"/>
  <match src="return_type_definition [94343,94466]" dest="return_type_definition [93989,94112]"/>
  <match src="identifier: userInfo [102456,102464]" dest="identifier: userInfo [102315,102323]"/>
  <match src="member_expression [104296,104308]" dest="member_expression [104220,104232]"/>
  <match src="identifier: _pid [99567,99571]" dest="identifier: _pid [97657,97661]"/>
  <match src="-: - [60392,60393]" dest="-: - [60394,60395]"/>
  <match src="state_variable_declaration [49153,49176]" dest="state_variable_declaration [49155,49178]"/>
  <match src="primitive_type [39263,39267]" dest="primitive_type [39263,39267]"/>
  <match src="{: { [30565,30566]" dest="{: { [30565,30566]"/>
  <match src="identifier: priceCumulativeLast [108042,108061]" dest="identifier: priceCumulativeLast [107966,107985]"/>
  <match src="identifier: reserve [77819,77826]" dest="identifier: accumulativeSHDPerWeight [78940,78964]"/>
  <match src="&quot;: &quot; [52802,52803]" dest="&quot;: &quot; [52804,52805]"/>
  <match src="identifier: token1 [40216,40222]" dest="identifier: token1 [40216,40222]"/>
  <match src="primitive_type [92637,92644]" dest="primitive_type [92285,92292]"/>
  <match src="variable_declaration [107258,107279]" dest="variable_declaration [107182,107203]"/>
  <match src=",: , [55287,55288]" dest=",: , [55289,55290]"/>
  <match src="&gt;: &gt; [82594,82595]" dest="&gt;: &gt; [83432,83433]"/>
  <match src="if: if [77865,77867]" dest="if: if [77100,77102]"/>
  <match src="visibility [15654,15662]" dest="visibility [15654,15662]"/>
  <match src="function_body [51111,51155]" dest="function_body [51113,51157]"/>
  <match src="uint8: uint8 [30247,30252]" dest="uint8: uint8 [30247,30252]"/>
  <match src="return_type_definition [40183,40200]" dest="return_type_definition [40183,40200]"/>
  <match src="comment: // Safe SHD transfer function, just in case if rounding error causes pool to not have enough SHARDs. [95937,96037]" dest="comment: // Safe SHD transfer function, just in case if rounding error causes pool to not have enough SHARDs. [95247,95347]"/>
  <match src="internal: internal [6846,6854]" dest="internal: internal [6846,6854]"/>
  <match src="identifier: poolCount [95592,95601]" dest="identifier: poolCount [94740,94749]"/>
  <match src="*=: *= [27804,27806]" dest="*=: *= [27804,27806]"/>
  <match src="identifier: poolCount [93160,93169]" dest="identifier: poolCount [92808,92817]"/>
  <match src="expression_statement [75938,75951]" dest="expression_statement [75454,75467]"/>
  <match src="identifier: amount [52794,52800]" dest="identifier: amount [52796,52802]"/>
  <match src="type_name [40433,40437]" dest="type_name [40433,40437]"/>
  <match src="override_specifier [52643,52651]" dest="override_specifier [52645,52653]"/>
  <match src="return_type_definition [93923,93949]" dest="return_type_definition [93569,93595]"/>
  <match src="identifier: sender [59687,59693]" dest="identifier: sender [59689,59695]"/>
  <match src="): ) [45711,45712]" dest="): ) [45713,45714]"/>
  <match src="primitive_type [4343,4350]" dest="primitive_type [4343,4350]"/>
  <match src="call_argument [81612,81630]" dest="call_argument [100239,100257]"/>
  <match src="identifier: amount [62802,62808]" dest="identifier: amount [62804,62810]"/>
  <match src="view: view [47418,47422]" dest="view: view [47420,47424]"/>
  <match src="identifier: onlyOwner [71712,71721]" dest="identifier: onlyOwner [71423,71432]"/>
  <match src="number_literal: 1 [78477,78478]" dest="number_literal: 1 [78057,78058]"/>
  <match src="contract_body [43017,47495]" dest="contract_body [43017,47497]"/>
  <match src="=: = [92923,92924]" dest="=: = [92571,92572]"/>
  <match src="call_argument [93739,93765]" dest="call_argument [93393,93411]"/>
  <match src="memory: memory [107009,107015]" dest="memory: memory [106933,106939]"/>
  <match src="return_statement [37792,37834]" dest="return_statement [37792,37834]"/>
  <match src="=: = [93195,93196]" dest="=: = [92843,92844]"/>
  <match src="view: view [40538,40542]" dest="view: view [40538,40542]"/>
  <match src="): ) [93899,93900]" dest="): ) [93545,93546]"/>
  <match src="type_name [64554,64561]" dest="type_name [64556,64563]"/>
  <match src="uint256: uint256 [95686,95693]" dest="uint256: uint256 [94834,94841]"/>
  <match src="): ) [68910,68911]" dest="): ) [68621,68622]"/>
  <match src="(: ( [38078,38079]" dest="(: ( [38078,38079]"/>
  <match src=",: , [38552,38553]" dest=",: , [38552,38553]"/>
  <match src="binary_expression [33717,33738]" dest="binary_expression [33717,33738]"/>
  <match src="augmented_assignment_expression [27827,27841]" dest="augmented_assignment_expression [27827,27841]"/>
  <match src="call_argument [97078,97095]" dest="call_argument [95843,95860]"/>
  <match src="(: ( [23545,23546]" dest="(: ( [23545,23546]"/>
  <match src="identifier: _balances [55873,55882]" dest="identifier: _balances [55875,55884]"/>
  <match src="assignment_expression [82050,82084]" dest="assignment_expression [82888,82922]"/>
  <match src="[: [ [85881,85882]" dest="[: [ [87181,87182]"/>
  <match src="type_name [40345,40351]" dest="type_name [40345,40351]"/>
  <match src="parameter [79778,79790]" dest="parameter [80363,80375]"/>
  <match src="==: == [60935,60937]" dest="==: == [60937,60939]"/>
  <match src="identifier: length [91117,91123]" dest="identifier: length [92142,92148]"/>
  <match src=".: . [96142,96143]" dest=".: . [95452,95453]"/>
  <match src="primitive_type [54033,54040]" dest="primitive_type [54035,54042]"/>
  <match src="augmented_assignment_expression [27593,27602]" dest="augmented_assignment_expression [27593,27602]"/>
  <match src="{: { [106132,106133]" dest="{: { [106056,106057]"/>
  <match src=".: . [46984,46985]" dest=".: . [46371,46372]"/>
  <match src="string [75670,75685]" dest="string [75186,75201]"/>
  <match src="identifier: newOriginWeight [81118,81133]" dest="identifier: newOriginWeight [81805,81820]"/>
  <match src="if_statement [97404,97582]" dest="if_statement [96169,96347]"/>
  <match src="identifier: this [22009,22013]" dest="identifier: this [22009,22013]"/>
  <match src="identifier: originWeight [83089,83101]" dest="identifier: originWeight [83868,83880]"/>
  <match src="augmented_assignment_expression [31572,31580]" dest="augmented_assignment_expression [31572,31580]"/>
  <match src="if: if [60918,60920]" dest="if: if [60920,60922]"/>
  <match src="event_paramater [66809,66828]" dest="event_paramater [67062,67081]"/>
  <match src="call_argument [103039,103049]" dest="call_argument [102963,102973]"/>
  <match src="identifier: require [86569,86576]" dest="identifier: require [87857,87864]"/>
  <match src="=: = [67872,67873]" dest="=: = [68124,68125]"/>
  <match src="=: = [97172,97173]" dest="=: = [95937,95938]"/>
  <match src="identifier: IUniswapV2Pair [63946,63960]" dest="identifier: IUniswapV2Pair [63948,63962]"/>
  <match src=",: , [82326,82327]" dest=",: , [83164,83165]"/>
  <match src="primitive_type [88397,88404]" dest="primitive_type [89245,89252]"/>
  <match src="identifier: invitorInfo [101576,101587]" dest="identifier: invitorInfo [101313,101324]"/>
  <match src="function_definition [45982,46067]" dest="function_definition [45984,46069]"/>
  <match src="identifier: usersTotalWeight [89401,89417]" dest="identifier: usersTotalWeight [77751,77767]"/>
  <match src="comment: // multiply a UQ112x112 by an int and decode, returning an int [34094,34156]" dest="comment: // multiply a UQ112x112 by an int and decode, returning an int [34094,34156]"/>
  <match src="call_argument [15726,15732]" dest="call_argument [15726,15732]"/>
  <match src="(: ( [37208,37209]" dest="(: ( [37208,37209]"/>
  <match src="identifier: token0 [104781,104787]" dest="identifier: token0 [104705,104711]"/>
  <match src="external: external [39400,39408]" dest="external: external [39400,39408]"/>
  <match src="primitive_type [45159,45166]" dest="primitive_type [45161,45168]"/>
  <match src="=: = [45648,45649]" dest="=: = [45650,45651]"/>
  <match src="comment: // returns the 0 indexed position of the most significant bit of the input x [30059,30135]" dest="comment: // returns the 0 indexed position of the most significant bit of the input x [30059,30135]"/>
  <match src="call_expression [54944,55015]" dest="call_expression [54946,55017]"/>
  <match src="function: function [47210,47218]" dest="function: function [47212,47220]"/>
  <match src="!=: != [26802,26804]" dest="!=: != [26802,26804]"/>
  <match src="expression_statement [55088,55180]" dest="expression_statement [55090,55182]"/>
  <match src="parameter [39566,39579]" dest="parameter [39566,39579]"/>
  <match src="}: } [34745,34746]" dest="}: } [34745,34746]"/>
  <match src="address: address [2330,2337]" dest="address: address [2330,2337]"/>
  <match src="block_statement [84625,84658]" dest="block_statement [85756,85789]"/>
  <match src="call_argument [83505,83512]" dest="call_argument [84376,84383]"/>
  <match src="identifier: _toBlock [104296,104304]" dest="identifier: _toBlock [104220,104228]"/>
  <match src="): ) [52713,52714]" dest="): ) [52715,52716]"/>
  <match src="storage: storage [73369,73376]" dest="storage: storage [73134,73141]"/>
  <match src="parameter [85239,85251]" dest="parameter [86539,86551]"/>
  <match src="identifier: approve [3434,3441]" dest="identifier: approve [3434,3441]"/>
  <match src="override_specifier [62825,62833]" dest="override_specifier [62827,62835]"/>
  <match src="identifier: b [9439,9440]" dest="identifier: b [9439,9440]"/>
  <match src="uint256: uint256 [59287,59294]" dest="uint256: uint256 [59289,59296]"/>
  <match src="call_struct_argument [71491,71527]" dest="call_struct_argument [71202,71238]"/>
  <match src="identifier: value [21842,21847]" dest="identifier: value [21842,21847]"/>
  <match src="identifier: resetInvitationRelationship [84386,84413]" dest="identifier: resetInvitationRelationship [84921,84948]"/>
  <match src="pure: pure [103208,103212]" dest="pure: pure [103132,103136]"/>
  <match src="=: = [77582,77583]" dest="=: = [77022,77023]"/>
  <match src="call_expression [84083,84149]" dest="call_expression [84612,84678]"/>
  <match src=".: . [99081,99082]" dest=".: . [99249,99250]"/>
  <match src="member_expression [74971,74996]" dest="member_expression [74843,74868]"/>
  <match src="identifier: x [29824,29825]" dest="identifier: x [29824,29825]"/>
  <match src="primitive_type [61747,61754]" dest="primitive_type [61749,61756]"/>
  <match src="call_argument [53399,53411]" dest="call_argument [53401,53413]"/>
  <match src="address: address [3839,3846]" dest="address: address [3839,3846]"/>
  <match src="boolean_literal [53491,53495]" dest="boolean_literal [53493,53497]"/>
  <match src="identifier: newOriginWeight [80963,80978]" dest="identifier: newOriginWeight [81650,81665]"/>
  <match src="identifier: _toBlock [79007,79015]" dest="identifier: _toBlock [78796,78804]"/>
  <match src=",: , [72090,72091]" dest=",: , [71643,71644]"/>
  <match src="primitive_type [73824,73831]" dest="primitive_type [71808,71815]"/>
  <match src="identifier: r [31858,31859]" dest="identifier: r [31858,31859]"/>
  <match src="): ) [19288,19289]" dest="): ) [19288,19289]"/>
  <match src="call_expression [54863,54933]" dest="call_expression [54865,54935]"/>
  <match src="array_access [89453,89486]" dest="array_access [90695,90728]"/>
  <match src="variable_declaration_statement [60686,60719]" dest="variable_declaration_statement [60688,60721]"/>
  <match src="visibility [46043,46051]" dest="visibility [46045,46053]"/>
  <match src="): ) [55295,55296]" dest="): ) [55297,55298]"/>
  <match src="identifier: length [108470,108476]" dest="identifier: length [108394,108400]"/>
  <match src="parameter [75469,75493]" dest="parameter [74985,75009]"/>
  <match src="identifier: PoolInfo [71111,71119]" dest="identifier: PoolInfo [70822,70830]"/>
  <match src="uint256: uint256 [66614,66621]" dest="uint256: uint256 [66867,66874]"/>
  <match src="(: ( [37808,37809]" dest="(: ( [37808,37809]"/>
  <match src="(: ( [104295,104296]" dest="(: ( [104219,104220]"/>
  <match src="identifier: rankPoolIndexMap [77123,77139]" dest="identifier: rankPoolIndexMap [77908,77924]"/>
  <match src="identifier: target [17372,17378]" dest="identifier: target [17372,17378]"/>
  <match src="function_definition [38796,38846]" dest="function_definition [38796,38846]"/>
  <match src="identifier: _rankIndex [72252,72262]" dest="identifier: accumulativeDividendBeforeUpdate [71941,71973]"/>
  <match src="function_body [85293,86480]" dest="function_body [86593,87768]"/>
  <match src="call_argument [35454,35456]" dest="call_argument [35454,35456]"/>
  <match src="primitive_type [89823,89830]" dest="primitive_type [91065,91072]"/>
  <match src="variable_declaration [107035,107074]" dest="variable_declaration [106959,106998]"/>
  <match src="return_type_definition [28744,28761]" dest="return_type_definition [28744,28761]"/>
  <match src=".: . [98907,98908]" dest=".: . [99096,99097]"/>
  <match src="type_name [28011,28018]" dest="type_name [28011,28018]"/>
  <match src="contract_declaration [108704,109691]" dest="contract_declaration [108628,109615]"/>
  <match src=",: , [85439,85440]" dest=",: , [86739,86740]"/>
  <match src="(: ( [62095,62096]" dest="(: ( [62097,62098]"/>
  <match src=".: . [62449,62450]" dest=".: . [62451,62452]"/>
  <match src="visibility [38875,38883]" dest="visibility [38875,38883]"/>
  <match src=",: , [2347,2348]" dest=",: , [2347,2348]"/>
  <match src="virtual: virtual [26756,26763]" dest="virtual: virtual [26756,26763]"/>
  <match src="view: view [2733,2737]" dest="view: view [2733,2737]"/>
  <match src="parameter [21910,21925]" dest="parameter [21910,21925]"/>
  <match src="call_argument [89559,89575]" dest="call_argument [90801,90817]"/>
  <match src="string [54977,55014]" dest="string [54979,55016]"/>
  <match src="identifier: r [30688,30689]" dest="identifier: r [30688,30689]"/>
  <match src="user_defined_type [104436,104450]" dest="user_defined_type [104360,104374]"/>
  <match src="comment: // encode a uint112 as a UQ112x112 [32968,33002]" dest="comment: // encode a uint112 as a UQ112x112 [32968,33002]"/>
  <match src="): ) [103654,103655]" dest="): ) [103578,103579]"/>
  <match src="identifier: _lpTokenSwap [69257,69269]" dest="identifier: _lpTokenSwap [68968,68980]"/>
  <match src="type_name [87648,87655]" dest="type_name [88809,88816]"/>
  <match src="new_expression [93094,93107]" dest="new_expression [92742,92755]"/>
  <match src="if: if [84222,84224]" dest="if: if [84751,84753]"/>
  <match src="binary_expression [61896,61905]" dest="binary_expression [61898,61907]"/>
  <match src="parameter [39522,39535]" dest="parameter [39522,39535]"/>
  <match src="return_statement [52054,52066]" dest="return_statement [52056,52068]"/>
  <match src="call_argument [83975,83985]" dest="call_argument [84504,84514]"/>
  <match src="identifier: fullDiv [27424,27431]" dest="identifier: fullDiv [27424,27431]"/>
  <match src="binary_expression [27623,27641]" dest="binary_expression [27623,27641]"/>
  <match src="call_argument [61755,61756]" dest="call_argument [61757,61758]"/>
  <match src="variable_declaration_statement [73775,73814]" dest="variable_declaration_statement [73571,73610]"/>
  <match src="expression_statement [45795,45808]" dest="expression_statement [45797,45810]"/>
  <match src="if: if [61007,61009]" dest="if: if [61009,61011]"/>
  <match src="[: [ [62431,62432]" dest="[: [ [62433,62434]"/>
  <match src="identifier: tryDiv [6496,6502]" dest="identifier: tryDiv [6496,6502]"/>
  <match src="=: = [69796,69797]" dest="=: = [69507,69508]"/>
  <match src="identifier: pool [101712,101716]" dest="identifier: pool [102134,102138]"/>
  <match src="augmented_assignment_expression [27677,27691]" dest="augmented_assignment_expression [27677,27691]"/>
  <match src="{: { [86558,86559]" dest="{: { [87846,87847]"/>
  <match src=".: . [81242,81243]" dest=".: . [81931,81932]"/>
  <match src="type_name [104924,104928]" dest="type_name [104848,104852]"/>
  <match src=".: . [84199,84200]" dest=".: . [84728,84729]"/>
  <match src="address: address [43092,43099]" dest="address: address [43092,43099]"/>
  <match src="variable_declaration [61831,61844]" dest="variable_declaration [61833,61846]"/>
  <match src="identifier: blockPeriod [103524,103535]" dest="identifier: blockPeriod [103448,103459]"/>
  <match src="parameter [52612,52626]" dest="parameter [52614,52628]"/>
  <match src="return: return [51524,51530]" dest="return: return [51526,51532]"/>
  <match src="binary_expression [99874,99897]" dest="binary_expression [98066,98089]"/>
  <match src="array_access [73799,73813]" dest="array_access [73595,73609]"/>
  <match src="call_argument [23359,23363]" dest="call_argument [23359,23363]"/>
  <match src="call_argument [104135,104136]" dest="call_argument [104059,104060]"/>
  <match src="]: ] [93259,93260]" dest="]: ] [92907,92908]"/>
  <match src="visibility [39030,39038]" dest="visibility [39030,39038]"/>
  <match src="member_expression [34307,34314]" dest="member_expression [34307,34314]"/>
  <match src="primitive_type [70666,70673]" dest="primitive_type [70377,70384]"/>
  <match src="identifier: nftPoolId [71139,71148]" dest="identifier: nftPoolId [70850,70859]"/>
  <match src="(: ( [90502,90503]" dest="(: ( [91527,91528]"/>
  <match src="type_name [109074,109079]" dest="type_name [108998,109003]"/>
  <match src="): ) [1893,1894]" dest="): ) [1893,1894]"/>
  <match src="return: return [19086,19092]" dest="return: return [19086,19092]"/>
  <match src="): ) [22023,22024]" dest="): ) [22023,22024]"/>
  <match src="identifier: mul [78529,78532]" dest="identifier: mul [78109,78112]"/>
  <match src="variable_declaration [105973,105989]" dest="variable_declaration [105897,105913]"/>
  <match src="identifier: amount [84204,84210]" dest="identifier: amount [84733,84739]"/>
  <match src="identifier: r [27690,27691]" dest="identifier: r [27690,27691]"/>
  <match src="identifier: r [27888,27889]" dest="identifier: r [27888,27889]"/>
  <match src="function: function [31215,31223]" dest="function: function [31215,31223]"/>
  <match src=".: . [85421,85422]" dest=".: . [86721,86722]"/>
  <match src="visibility [61323,61331]" dest="visibility [61325,61333]"/>
  <match src="call_expression [85490,85551]" dest="call_expression [86790,86851]"/>
  <match src="variable_declaration [85637,85667]" dest="variable_declaration [86937,86967]"/>
  <match src="variable_declaration [97144,97168]" dest="variable_declaration [95909,95933]"/>
  <match src="type_name [21256,21262]" dest="type_name [21256,21262]"/>
  <match src="parameter [67023,67036]" dest="parameter [67276,67289]"/>
  <match src=".: . [24376,24377]" dest=".: . [24376,24377]"/>
  <match src="number_literal: 120 [65931,65934]" dest="number_literal: 120 [65941,65944]"/>
  <match src="uint256: uint256 [88503,88510]" dest="uint256: uint256 [89351,89358]"/>
  <match src="member_expression [107794,107849]" dest="member_expression [107718,107773]"/>
  <match src="(: ( [103539,103540]" dest="(: ( [103463,103464]"/>
  <match src="identifier: token [22197,22202]" dest="identifier: token [22197,22202]"/>
  <match src="): ) [59581,59582]" dest="): ) [59583,59584]"/>
  <match src="call_expression [86852,86903]" dest="call_expression [88009,88060]"/>
  <match src="parameter [7685,7694]" dest="parameter [7685,7694]"/>
  <match src="bool: bool [69910,69914]" dest="bool: bool [69621,69625]"/>
  <match src="member_expression [85670,85690]" dest="member_expression [86970,86990]"/>
  <match src="identifier: _callOptionalReturn [22385,22404]" dest="identifier: _callOptionalReturn [22385,22404]"/>
  <match src="function_body [10972,11042]" dest="function_body [10972,11042]"/>
  <match src="state_mutability [40068,40072]" dest="state_mutability [40068,40072]"/>
  <match src="type_name [86722,86729]" dest="type_name [87802,87809]"/>
  <match src="function_body [7739,7830]" dest="function_body [7739,7830]"/>
  <match src="number_literal: 32 [29269,29271]" dest="number_literal: 32 [29269,29271]"/>
  <match src="identifier: result [36446,36452]" dest="identifier: result [36446,36452]"/>
  <match src="): ) [34952,34953]" dest="): ) [34952,34953]"/>
  <match src="variable_declaration_tuple [69734,69795]" dest="variable_declaration_tuple [69445,69506]"/>
  <match src=",: , [70747,70748]" dest=",: , [70458,70459]"/>
  <match src="identifier: r [27827,27828]" dest="identifier: r [27827,27828]"/>
  <match src="(: ( [71577,71578]" dest="(: ( [71288,71289]"/>
  <match src="): ) [34806,34807]" dest="): ) [34806,34807]"/>
  <match src="if_statement [76999,77109]" dest="if_statement [76515,76625]"/>
  <match src="address: address [98449,98456]" dest="address: address [98853,98860]"/>
  <match src="call_argument [14106,14110]" dest="call_argument [14106,14110]"/>
  <match src="comment: // cross chain [58800,58814]" dest="comment: // cross chain [58802,58816]"/>
  <match src="(: ( [59052,59053]" dest="(: ( [59054,59055]"/>
  <match src="identifier: devDividendWeight [46933,46950]" dest="identifier: devDividendWeight [46320,46337]"/>
  <match src="external: external [40113,40121]" dest="external: external [40113,40121]"/>
  <match src="{: { [6563,6564]" dest="{: { [6563,6564]"/>
  <match src="(: ( [39453,39454]" dest="(: ( [39453,39454]"/>
  <match src="identifier: sub [90976,90979]" dest="identifier: sub [92001,92004]"/>
  <match src="): ) [106034,106035]" dest="): ) [105958,105959]"/>
  <match src="parameter [96397,96412]" dest="parameter [85101,85116]"/>
  <match src="type_name [39581,39586]" dest="type_name [39581,39586]"/>
  <match src="parameter [40552,40556]" dest="parameter [40552,40556]"/>
  <match src="(: ( [37616,37617]" dest="(: ( [37616,37617]"/>
  <match src="(: ( [29227,29228]" dest="(: ( [29227,29228]"/>
  <match src="primitive_type [34848,34855]" dest="primitive_type [34848,34855]"/>
  <match src=".: . [37736,37737]" dest=".: . [37736,37737]"/>
  <match src="contract: contract [263,271]" dest="contract: contract [263,271]"/>
  <match src="): ) [5693,5694]" dest="): ) [5693,5694]"/>
  <match src="function_body [53379,53503]" dest="function_body [53381,53505]"/>
  <match src="type_name [15591,15598]" dest="type_name [15591,15598]"/>
  <match src=",: , [103160,103161]" dest=",: , [103084,103085]"/>
  <match src="array_access [94519,94549]" dest="array_access [94165,94195]"/>
  <match src="{: { [63480,63481]" dest="{: { [63482,63483]"/>
  <match src="parameter [28753,28760]" dest="parameter [28753,28760]"/>
  <match src="parameter [40758,40768]" dest="parameter [40758,40768]"/>
  <match src="block_statement [85317,85350]" dest="block_statement [86617,86650]"/>
  <match src="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * reverting with custom message when dividing by zero.      *      * CAUTION: This function is deprecated because it requires allocating memory for the error      * message unnecessarily. For custom revert reasons use {tryMod}.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [11050,11699]" dest="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * reverting with custom message when dividing by zero.      *      * CAUTION: This function is deprecated because it requires allocating memory for the error      * message unnecessarily. For custom revert reasons use {tryMod}.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [11050,11699]"/>
  <match src="primitive_type [39053,39057]" dest="primitive_type [39053,39057]"/>
  <match src="call_argument [22120,22127]" dest="call_argument [22120,22127]"/>
  <match src="function: function [76074,76082]" dest="function: function [75590,75598]"/>
  <match src="[: [ [90965,90966]" dest="[: [ [91990,91991]"/>
  <match src="block_statement [101600,101690]" dest="block_statement [101337,102017]"/>
  <match src="identifier: from [20941,20945]" dest="identifier: from [20941,20945]"/>
  <match src=",: , [69765,69766]" dest=",: , [69476,69477]"/>
  <match src="identifier: _lpTokenSwap [104451,104463]" dest="identifier: _lpTokenSwap [104375,104387]"/>
  <match src="identifier: b [10194,10195]" dest="identifier: b [10194,10195]"/>
  <match src="identifier: sum [35826,35829]" dest="identifier: sum [35826,35829]"/>
  <match src="string_literal [22330,22373]" dest="string_literal [22330,22373]"/>
  <match src="(: ( [29819,29820]" dest="(: ( [29819,29820]"/>
  <match src="call_expression [59677,59703]" dest="call_expression [59679,59705]"/>
  <match src="function_definition [5579,5733]" dest="function_definition [5579,5733]"/>
  <match src=",: , [82274,82275]" dest=",: , [83112,83113]"/>
  <match src="return: return [99913,99919]" dest="return: return [98105,98111]"/>
  <match src="type_name [21962,21969]" dest="type_name [21962,21969]"/>
  <match src="identifier: _address [77910,77918]" dest="identifier: _address [77145,77153]"/>
  <match src="number_literal: 0 [97260,97261]" dest="number_literal: 0 [96025,96026]"/>
  <match src="number_literal: 0x100000000000000000000000000000000000000000000000000000000 [32776,32835]" dest="number_literal: 0x100000000000000000000000000000000000000000000000000000000 [32776,32835]"/>
  <match src=",: , [33879,33880]" dest=",: , [33879,33880]"/>
  <match src="binary_expression [7300,7305]" dest="binary_expression [7300,7305]"/>
  <match src="=: = [88698,88699]" dest="=: = [89546,89547]"/>
  <match src="&quot;: &quot; [54242,54243]" dest="&quot;: &quot; [54244,54245]"/>
  <match src="identifier: _pid [82130,82134]" dest="identifier: _pid [82968,82972]"/>
  <match src="contract_body [12057,19906]" dest="contract_body [12057,19906]"/>
  <match src="identifier: c [6267,6268]" dest="identifier: c [6267,6268]"/>
  <match src="block_statement [46708,46920]" dest="block_statement [46950,47162]"/>
  <match src="type_name [8147,8154]" dest="type_name [8147,8154]"/>
  <match src="internal: internal [46043,46051]" dest="internal: internal [46045,46053]"/>
  <match src="member_expression [81550,81567]" dest="member_expression [82243,82260]"/>
  <match src="variable_declaration_statement [60183,60230]" dest="variable_declaration_statement [60185,60232]"/>
  <match src="constructor: constructor [108848,108859]" dest="constructor: constructor [108772,108783]"/>
  <match src="is: is [25266,25268]" dest="is: is [25266,25268]"/>
  <match src="): ) [66768,66769]" dest="): ) [67021,67022]"/>
  <match src="expression_statement [57247,57316]" dest="expression_statement [57249,57318]"/>
  <match src="identifier: r [39598,39599]" dest="identifier: r [39598,39599]"/>
  <match src="variable_declaration_statement [86946,87011]" dest="variable_declaration_statement [88103,88168]"/>
  <match src="identifier: from [61347,61351]" dest="identifier: from [61349,61353]"/>
  <match src="return_type_definition [17413,17435]" dest="return_type_definition [17413,17435]"/>
  <match src="memory: memory [95434,95440]" dest="memory: memory [94582,94588]"/>
  <match src="type_name [51047,51054]" dest="type_name [51049,51056]"/>
  <match src="(: ( [46018,46019]" dest="(: ( [46020,46021]"/>
  <match src="=: = [34775,34776]" dest="=: = [34775,34776]"/>
  <match src="identifier: mulmod [27304,27310]" dest="identifier: mulmod [27304,27310]"/>
  <match src="type_name [39986,39993]" dest="type_name [39986,39993]"/>
  <match src="assignment_expression [84303,84364]" dest="assignment_expression [84832,84899]"/>
  <match src="parameter [39492,39496]" dest="parameter [39492,39496]"/>
  <match src="=: = [29894,29895]" dest="=: = [29894,29895]"/>
  <match src="identifier: SHD [96277,96280]" dest="identifier: SHD [95587,95590]"/>
  <match src=",: , [19021,19022]" dest=",: , [19021,19022]"/>
  <match src="uint32: uint32 [105834,105840]" dest="uint32: uint32 [105758,105764]"/>
  <match src="visibility [54075,54081]" dest="visibility [54077,54083]"/>
  <match src="expression_statement [29600,29608]" dest="expression_statement [29600,29608]"/>
  <match src="public: public [43714,43720]" dest="public: public [43714,43720]"/>
  <match src="is: is [291,293]" dest="is: is [291,293]"/>
  <match src="): ) [95752,95753]" dest="): ) [94900,94901]"/>
  <match src="identifier: blackListMap [73006,73018]" dest="identifier: blackListMap [72688,72700]"/>
  <match src="[: [ [100423,100424]" dest="[: [ [99765,99766]"/>
  <match src="solidity_version:  0.6.12 [61,68]" dest="solidity_version:  0.6.12 [61,68]"/>
  <match src="identifier: returndata [19761,19771]" dest="identifier: returndata [19761,19771]"/>
  <match src="type_cast_expression [105858,105891]" dest="type_cast_expression [105782,105815]"/>
  <match src="parameter [67178,67197]" dest="parameter [67431,67450]"/>
  <match src="==: == [62373,62375]" dest="==: == [62375,62377]"/>
  <match src="false: false [99693,99698]" dest="false: false [97783,97788]"/>
  <match src="function_body [16252,16365]" dest="function_body [16252,16365]"/>
  <match src="call_expression [46891,46908]" dest="call_expression [47133,47150]"/>
  <match src="member_expression [85020,85030]" dest="member_expression [86320,86330]"/>
  <match src="return: return [41397,41403]" dest="return: return [41397,41403]"/>
  <match src="identifier: poolInRank [74680,74690]" dest="identifier: poolInRank [74432,74442]"/>
  <match src="call_argument [7758,7764]" dest="call_argument [7758,7764]"/>
  <match src="type_name [33466,33473]" dest="type_name [33466,33473]"/>
  <match src="call_expression [34291,34346]" dest="call_expression [34291,34346]"/>
  <match src="}: } [47371,47372]" dest="}: } [47373,47374]"/>
  <match src="expression_statement [45422,45471]" dest="expression_statement [45424,45473]"/>
  <match src="identifier: previousOwner [25358,25371]" dest="identifier: previousOwner [25358,25371]"/>
  <match src="identifier: token1 [70057,70063]" dest="identifier: token1 [69768,69774]"/>
  <match src="&quot;: &quot; [85441,85442]" dest="&quot;: &quot; [86741,86742]"/>
  <match src="identifier: sub [85053,85056]" dest="identifier: sub [86353,86356]"/>
  <match src="state_variable_declaration [66230,66261]" dest="state_variable_declaration [66250,66281]"/>
  <match src="identifier: _toBlock [103190,103198]" dest="identifier: _toBlock [103114,103122]"/>
  <match src="identifier: SafeMath [20515,20523]" dest="identifier: SafeMath [20515,20523]"/>
  <match src=".: . [59534,59535]" dest=".: . [59536,59537]"/>
  <match src="expression_statement [106512,106537]" dest="expression_statement [106436,106461]"/>
  <match src="call_expression [37327,37391]" dest="call_expression [37327,37391]"/>
  <match src="uint256: uint256 [93201,93208]" dest="uint256: uint256 [92849,92856]"/>
  <match src="storage: storage [80196,80203]" dest="storage: storage [80816,80823]"/>
  <match src="}: } [62883,62884]" dest="}: } [62885,62886]"/>
  <match src=",: , [45328,45329]" dest=",: , [45330,45331]"/>
  <match src="call_argument [95643,95652]" dest="call_argument [94791,94800]"/>
  <match src="user_defined_type [80302,80310]" dest="user_defined_type [80922,80930]"/>
  <match src="uint256: uint256 [60686,60693]" dest="uint256: uint256 [60688,60695]"/>
  <match src="(: ( [77062,77063]" dest="(: ( [76578,76579]"/>
  <match src="): ) [41384,41385]" dest="): ) [41384,41385]"/>
  <match src="function: function [62070,62078]" dest="function: function [62072,62080]"/>
  <match src="call_argument [77612,77638]" dest="call_argument [77052,77078]"/>
  <match src="identifier: msgSender [25549,25558]" dest="identifier: msgSender [25549,25558]"/>
  <match src="parameter [94250,94265]" dest="parameter [93896,93911]"/>
  <match src="uint256: uint256 [63723,63730]" dest="uint256: uint256 [63725,63732]"/>
  <match src="assignment_expression [70943,71061]" dest="assignment_expression [70654,70772]"/>
  <match src=".: . [98046,98047]" dest=".: . [96811,96812]"/>
  <match src="identifier: transferFrom [52564,52576]" dest="identifier: transferFrom [52566,52578]"/>
  <match src="call_expression [106235,106298]" dest="call_expression [106159,106222]"/>
  <match src="binary_expression [29664,29680]" dest="binary_expression [29664,29680]"/>
  <match src="member_expression [21621,21636]" dest="member_expression [21621,21636]"/>
  <match src="contract_body [41171,42612]" dest="contract_body [41171,42612]"/>
  <match src="visibility [51421,51427]" dest="visibility [51423,51429]"/>
  <match src="identifier: MAX_MONTH [90921,90930]" dest="identifier: MAX_MONTH [91946,91955]"/>
  <match src="member_expression [73459,73482]" dest="member_expression [73224,73247]"/>
  <match src="call_argument [101657,101673]" dest="call_argument [101394,101412]"/>
  <match src="function_body [49603,49688]" dest="function_body [49605,49690]"/>
  <match src="(: ( [75574,75575]" dest="(: ( [75090,75091]"/>
  <match src="identifier: _name [49614,49619]" dest="identifier: _name [49616,49621]"/>
  <match src="identifier: blockNumber [59975,59986]" dest="identifier: blockNumber [59977,59988]"/>
  <match src="type_name [7288,7295]" dest="type_name [7288,7295]"/>
  <match src="pragma: pragma [32224,32230]" dest="pragma: pragma [32224,32230]"/>
  <match src="identifier: PoolInfo [108496,108504]" dest="identifier: PoolInfo [108420,108428]"/>
  <match src="): ) [75695,75696]" dest="): ) [75211,75212]"/>
  <match src="number_literal: 1495 [68214,68218]" dest="number_literal: 1495 [68335,68339]"/>
  <match src="}: } [105697,105698]" dest="}: } [105621,105622]"/>
  <match src="user_defined_type [34204,34213]" dest="user_defined_type [34204,34213]"/>
  <match src="identifier: _pid [82512,82516]" dest="identifier: _pid [83350,83354]"/>
  <match src="): ) [85592,85593]" dest="): ) [86892,86893]"/>
  <match src="type_name [39358,39365]" dest="type_name [39358,39365]"/>
  <match src="identifier: invitee [86861,86868]" dest="identifier: invitee [88018,88025]"/>
  <match src="call_argument [89396,89417]" dest="call_argument [77746,77767]"/>
  <match src="identifier: owner [57179,57184]" dest="identifier: owner [57181,57186]"/>
  <match src="view: view [40234,40238]" dest="view: view [40234,40238]"/>
  <match src="tuple_expression [104780,104799]" dest="tuple_expression [104704,104723]"/>
  <match src="=: = [102453,102454]" dest="=: = [102312,102313]"/>
  <match src="parameter [51987,51991]" dest="parameter [51989,51993]"/>
  <match src="&gt;: &gt; [36869,36870]" dest="&gt;: &gt; [36869,36870]"/>
  <match src="member_expression [77063,77075]" dest="member_expression [76579,76591]"/>
  <match src="type_name [18007,18011]" dest="type_name [18007,18011]"/>
  <match src="primitive_type [8102,8109]" dest="primitive_type [8102,8109]"/>
  <match src="uint256: uint256 [3874,3881]" dest="uint256: uint256 [3874,3881]"/>
  <match src="): ) [2722,2723]" dest="): ) [2722,2723]"/>
  <match src="comment: /**      * @dev Transfers ownership of the contract to a new account (`newOwner`).      * Can only be called by the current owner.      */ [26557,26698]" dest="comment: /**      * @dev Transfers ownership of the contract to a new account (`newOwner`).      * Can only be called by the current owner.      */ [26557,26698]"/>
  <match src="virtual: virtual [53356,53363]" dest="virtual: virtual [53358,53365]"/>
  <match src=".: . [55891,55892]" dest=".: . [55893,55894]"/>
  <match src="parenthesized_expression [27623,27630]" dest="parenthesized_expression [27623,27630]"/>
  <match src="identifier: number [76239,76245]" dest="identifier: number [75755,75761]"/>
  <match src="identifier: _SHD [67312,67316]" dest="identifier: _SHD [67559,67563]"/>
  <match src="identifier: block [107128,107133]" dest="identifier: block [107052,107057]"/>
  <match src="block_statement [73922,73955]" dest="block_statement [73652,73685]"/>
  <match src="): ) [38688,38689]" dest="): ) [38688,38689]"/>
  <match src="): ) [61757,61758]" dest="): ) [61759,61760]"/>
  <match src="expression_statement [30929,30936]" dest="expression_statement [30929,30936]"/>
  <match src="identifier: isWithdrawn [98649,98660]" dest="identifier: isWithdrawn [97414,97425]"/>
  <match src="if_statement [82095,82293]" dest="if_statement [82933,83131]"/>
  <match src="return_type_definition [91072,91089]" dest="return_type_definition [92097,92114]"/>
  <match src="new_expression [93146,93159]" dest="new_expression [92794,92807]"/>
  <match src="call_argument [57353,57354]" dest="call_argument [57355,57356]"/>
  <match src="identifier: recentlyRewardBlock [77484,77503]" dest="identifier: recentlyRewardBlock [76924,76943]"/>
  <match src="member_expression [24616,24624]" dest="member_expression [24616,24624]"/>
  <match src="number_literal: 0 [84984,84985]" dest="number_literal: 0 [86284,86285]"/>
  <match src="number_literal: 0 [46661,46662]" dest="number_literal: 0 [46903,46904]"/>
  <match src=".: . [100658,100659]" dest=".: . [100234,100235]"/>
  <match src="call_argument [74802,74822]" dest="call_argument [74502,74513]"/>
  <match src="call_expression [100643,100678]" dest="call_expression [100219,100258]"/>
  <match src="binary_expression [89159,89175]" dest="binary_expression [90084,90100]"/>
  <match src="call_expression [83212,83253]" dest="call_expression [90391,90426]"/>
  <match src="(: ( [11717,11718]" dest="(: ( [11717,11718]"/>
  <match src="identifier: _pid [72589,72593]" dest="identifier: _pid [72281,72285]"/>
  <match src="expression_statement [29170,29180]" dest="expression_statement [29170,29180]"/>
  <match src="identifier: amount [84002,84008]" dest="identifier: amount [84531,84537]"/>
  <match src=".: . [77068,77069]" dest=".: . [76584,76585]"/>
  <match src="assignment_expression [95717,95753]" dest="assignment_expression [94865,94901]"/>
  <match src="identifier: a [6949,6950]" dest="identifier: a [6949,6950]"/>
  <match src="call_argument [77240,77244]" dest="call_argument [76680,76684]"/>
  <match src="identifier: lastPriceUpdateHeight [107155,107176]" dest="identifier: lastPriceUpdateHeight [107079,107100]"/>
  <match src="&amp;: &amp; [27558,27559]" dest="&amp;: &amp; [27558,27559]"/>
  <match src="identifier: _originWeight [95828,95841]" dest="identifier: _originWeight [95067,95080]"/>
  <match src="(: ( [89866,89867]" dest="(: ( [91113,91114]"/>
  <match src="): ) [76230,76231]" dest="): ) [75746,75747]"/>
  <match src="call_argument [37283,37292]" dest="call_argument [37283,37292]"/>
  <match src="identifier: originWeight [95066,95078]" dest="identifier: originWeight [82588,82600]"/>
  <match src="array_access [95816,95826]" dest="array_access [95028,95038]"/>
  <match src="external: external [45530,45538]" dest="external: external [45532,45540]"/>
  <match src="primitive_type [73430,73437]" dest="primitive_type [73195,73202]"/>
  <match src="block_statement [97263,97394]" dest="block_statement [96028,96159]"/>
  <match src="): ) [45355,45356]" dest="): ) [45357,45358]"/>
  <match src="(: ( [87356,87357]" dest="(: ( [88517,88518]"/>
  <match src="identifier: amount [55834,55840]" dest="identifier: amount [55836,55842]"/>
  <match src="type_name [95686,95693]" dest="type_name [94834,94841]"/>
  <match src="block_statement [62399,62478]" dest="block_statement [62401,62480]"/>
  <match src="): ) [78489,78490]" dest="): ) [78069,78070]"/>
  <match src="call_argument [18107,18114]" dest="call_argument [18107,18114]"/>
  <match src="]: ] [60894,60895]" dest="]: ] [60896,60897]"/>
  <match src="(: ( [36470,36471]" dest="(: ( [36470,36471]"/>
  <match src="user_defined_type [108496,108504]" dest="user_defined_type [108420,108428]"/>
  <match src="=: = [78790,78791]" dest="=: = [78370,78371]"/>
  <match src="type_name [4366,4373]" dest="type_name [4366,4373]"/>
  <match src="): ) [75575,75576]" dest="): ) [75091,75092]"/>
  <match src="): ) [8281,8282]" dest="): ) [8281,8282]"/>
  <match src="): ) [17142,17143]" dest="): ) [17142,17143]"/>
  <match src="member_expression [36101,36108]" dest="member_expression [36101,36108]"/>
  <match src="variable_declaration_statement [61778,61813]" dest="variable_declaration_statement [61780,61815]"/>
  <match src="&gt;: &gt; [31938,31939]" dest="&gt;: &gt; [31938,31939]"/>
  <match src="identifier: rankPoolIndexMap [82113,82129]" dest="identifier: rankPoolIndexMap [82951,82967]"/>
  <match src="call_argument [36162,36166]" dest="call_argument [36162,36166]"/>
  <match src="array_access [56515,56533]" dest="array_access [56517,56535]"/>
  <match src="identifier: c [5416,5417]" dest="identifier: c [5416,5417]"/>
  <match src="{: { [105349,105350]" dest="{: { [105273,105274]"/>
  <match src="member_expression [90503,90524]" dest="member_expression [91528,91549]"/>
  <match src="identifier: getDepositWeight [81156,81172]" dest="identifier: getDepositWeight [81843,81859]"/>
  <match src="assignment_expression [94560,94591]" dest="assignment_expression [94206,94237]"/>
  <match src="call_argument [22009,22013]" dest="call_argument [22009,22013]"/>
  <match src="identifier: invitorInfo [100876,100887]" dest="identifier: invitorInfo [100938,100949]"/>
  <match src="call_argument [82270,82274]" dest="call_argument [83108,83112]"/>
  <match src="internal: internal [5926,5934]" dest="internal: internal [5926,5934]"/>
  <match src="expression_statement [61058,61073]" dest="expression_statement [61060,61075]"/>
  <match src="}: } [62054,62055]" dest="}: } [62056,62057]"/>
  <match src="identifier: xx [29170,29172]" dest="identifier: xx [29170,29172]"/>
  <match src=",: , [21831,21832]" dest=",: , [21831,21832]"/>
  <match src="variable_declaration_statement [105834,105892]" dest="variable_declaration_statement [105758,105816]"/>
  <match src="identifier: _developerDAOFund [44475,44492]" dest="identifier: _developerDAOFund [44477,44494]"/>
  <match src="private: private [19255,19262]" dest="private: private [19255,19262]"/>
  <match src="primitive_type [38579,38583]" dest="primitive_type [38579,38583]"/>
  <match src=".: . [34690,34691]" dest=".: . [34690,34691]"/>
  <match src="identifier: uq112x112 [105799,105808]" dest="identifier: uq112x112 [105723,105732]"/>
  <match src="]: ] [77144,77145]" dest="]: ] [77929,77930]"/>
  <match src="new: new [93094,93097]" dest="new: new [92742,92745]"/>
  <match src="assignment_expression [27340,27349]" dest="assignment_expression [27340,27349]"/>
  <match src="-: - [107470,107471]" dest="-: - [107394,107395]"/>
  <match src=".: . [23549,23550]" dest=".: . [23549,23550]"/>
  <match src="(: ( [69686,69687]" dest="(: ( [69397,69398]"/>
  <match src=",: , [39830,39831]" dest=",: , [39830,39831]"/>
  <match src="comment: // ceil, avoiding overflow [60812,60838]" dest="comment: // ceil, avoiding overflow [60814,60840]"/>
  <match src=",: , [62013,62014]" dest=",: , [62015,62016]"/>
  <match src="array_access [59783,59798]" dest="array_access [59785,59800]"/>
  <match src="&gt;: &gt; [83602,83603]" dest="&gt;: &gt; [85350,85351]"/>
  <match src="call_expression [76716,76861]" dest="call_expression [76232,76377]"/>
  <match src="primitive_type [5904,5911]" dest="primitive_type [5904,5911]"/>
  <match src="(: ( [40474,40475]" dest="(: ( [40474,40475]"/>
  <match src="address: address [56688,56695]" dest="address: address [56690,56697]"/>
  <match src="call_argument [84765,84769]" dest="call_argument [85896,85900]"/>
  <match src="=: = [46974,46975]" dest="=: = [46361,46362]"/>
  <match src="uint: uint [39492,39496]" dest="uint: uint [39492,39496]"/>
  <match src="identifier: Context [24270,24277]" dest="identifier: Context [24270,24277]"/>
  <match src="[: [ [72519,72520]" dest="[: [ [72211,72212]"/>
  <match src="identifier: SafeMath [5091,5099]" dest="identifier: SafeMath [5091,5099]"/>
  <match src="(: ( [104334,104335]" dest="(: ( [104258,104259]"/>
  <match src="returns: returns [33230,33237]" dest="returns: returns [33230,33237]"/>
  <match src="augmented_assignment_expression [27613,27642]" dest="augmented_assignment_expression [27613,27642]"/>
  <match src="type_name [61831,61838]" dest="type_name [61833,61840]"/>
  <match src="type_name [43662,43669]" dest="type_name [43662,43669]"/>
  <match src="}: } [63906,63907]" dest="}: } [63908,63909]"/>
  <match src="call_expression [105335,105662]" dest="call_expression [105259,105586]"/>
  <match src="[: [ [73583,73584]" dest="[: [ [73348,73349]"/>
  <match src="): ) [34345,34346]" dest="): ) [34345,34346]"/>
  <match src="=: = [106154,106155]" dest="=: = [106078,106079]"/>
  <match src="comment: // max lock time in stage two [65699,65728]" dest="comment: // max lock time in stage two [65709,65738]"/>
  <match src="}: } [17150,17151]" dest="}: } [17150,17151]"/>
  <match src="(: ( [33465,33466]" dest="(: ( [33465,33466]"/>
  <match src="identifier: oracleWeight [63731,63743]" dest="identifier: oracleWeight [63733,63745]"/>
  <match src="number_literal: 0 [36871,36872]" dest="number_literal: 0 [36871,36872]"/>
  <match src="(: ( [33975,33976]" dest="(: ( [33975,33976]"/>
  <match src="external: external [88445,88453]" dest="external: external [89293,89301]"/>
  <match src="expression_statement [73006,73044]" dest="expression_statement [72688,72726]"/>
  <match src="=: = [84721,84722]" dest="=: = [85852,85853]"/>
  <match src="=: = [69603,69604]" dest="=: = [69314,69315]"/>
  <match src="solidity: solidity [42961,42969]" dest="solidity: solidity [42961,42969]"/>
  <match src="): ) [108378,108379]" dest="): ) [108302,108303]"/>
  <match src="solidity_version: 0.8.0 [47677,47682]" dest="solidity_version: 0.8.0 [47679,47684]"/>
  <match src="uint256: uint256 [88031,88038]" dest="uint256: uint256 [80104,80111]"/>
  <match src="address: address [18760,18767]" dest="address: address [18760,18767]"/>
  <match src="identifier: length [23426,23432]" dest="identifier: length [23426,23432]"/>
  <match src="(: ( [18065,18066]" dest="(: ( [18065,18066]"/>
  <match src="block_statement [19314,19358]" dest="block_statement [19314,19358]"/>
  <match src="member_expression [103753,103774]" dest="member_expression [103677,103698]"/>
  <match src="&lt;&lt;: &lt;&lt; [36267,36269]" dest="&lt;&lt;: &lt;&lt; [36267,36269]"/>
  <match src="(: ( [90839,90840]" dest="(: ( [91864,91865]"/>
  <match src="(: ( [4342,4343]" dest="(: ( [4342,4343]"/>
  <match src="returns: returns [38958,38965]" dest="returns: returns [38958,38965]"/>
  <match src="emit_statement [55256,55297]" dest="emit_statement [55258,55299]"/>
  <match src="variable_declaration_statement [105931,105962]" dest="variable_declaration_statement [105855,105886]"/>
  <match src="identifier: addToRank [82260,82269]" dest="identifier: addToRank [83098,83107]"/>
  <match src=":: : [105530,105531]" dest=":: : [105454,105455]"/>
  <match src="identifier: startIndex [93703,93713]" dest="identifier: startIndex [93351,93361]"/>
  <match src="type_name [32594,32601]" dest="type_name [32594,32601]"/>
  <match src="}: } [72639,72640]" dest="}: } [72599,72600]"/>
  <match src="}: } [6962,6963]" dest="}: } [6962,6963]"/>
  <match src="array_access [47315,47353]" dest="array_access [47317,47355]"/>
  <match src="&gt;: &gt; [103255,103256]" dest="&gt;: &gt; [103179,103180]"/>
  <match src="==: == [36940,36942]" dest="==: == [36940,36942]"/>
  <match src="&gt;: &gt; [61368,61369]" dest="&gt;: &gt; [61370,61371]"/>
  <match src="]: ] [84802,84803]" dest="]: ] [85933,85934]"/>
  <match src="call_expression [80727,80868]" dest="call_expression [81414,81555]"/>
  <match src="primitive_type [79827,79834]" dest="primitive_type [80412,80419]"/>
  <match src="variable_declaration [93320,93329]" dest="variable_declaration [92968,92977]"/>
  <match src="identifier: account [56474,56481]" dest="identifier: account [56476,56483]"/>
  <match src="primitive_type [39866,39870]" dest="primitive_type [39866,39870]"/>
  <match src=",: , [98462,98463]" dest=",: , [97227,97228]"/>
  <match src="identifier: lastRewardBlock [108408,108423]" dest="identifier: lastRewardBlock [108332,108347]"/>
  <match src="virtual: virtual [44503,44510]" dest="virtual: virtual [44505,44512]"/>
  <match src="primitive_type [39581,39586]" dest="primitive_type [39581,39586]"/>
  <match src="primitive_type [66230,66237]" dest="primitive_type [66250,66257]"/>
  <match src="identifier: _beforeTokenTransfer [58541,58561]" dest="identifier: _beforeTokenTransfer [58543,58563]"/>
  <match src="visibility [65089,65095]" dest="visibility [65099,65105]"/>
  <match src="pragma_directive [71,104]" dest="pragma_directive [71,104]"/>
  <match src="string [34020,34047]" dest="string [34020,34047]"/>
  <match src="identifier: maxRankNumber [87470,87483]" dest="identifier: maxRankNumber [88631,88644]"/>
  <match src="binary_expression [75609,75655]" dest="binary_expression [75125,75171]"/>
  <match src="identifier: div [89392,89395]" dest="identifier: div [77742,77745]"/>
  <match src="solidity: solidity [108680,108688]" dest="solidity: solidity [108604,108612]"/>
  <match src="constructor_definition [49539,49688]" dest="constructor_definition [49541,49690]"/>
  <match src="view: view [50728,50732]" dest="view: view [50730,50734]"/>
  <match src="mapping: mapping [43948,43955]" dest="mapping: mapping [43948,43955]"/>
  <match src="call_argument [21637,21650]" dest="call_argument [21637,21650]"/>
  <match src="): ) [61037,61038]" dest="): ) [61039,61040]"/>
  <match src="identifier: b [6632,6633]" dest="identifier: b [6632,6633]"/>
  <match src="(: ( [107793,107794]" dest="(: ( [107717,107718]"/>
  <match src="uint256: uint256 [96083,96090]" dest="uint256: uint256 [95393,95400]"/>
  <match src="&gt;: &gt; [61874,61875]" dest="&gt;: &gt; [61876,61877]"/>
  <match src="uint112: uint112 [105991,105998]" dest="uint112: uint112 [105915,105922]"/>
  <match src="{: { [19314,19315]" dest="{: { [19314,19315]"/>
  <match src="): ) [51419,51420]" dest="): ) [51421,51422]"/>
  <match src="type_name [25373,25380]" dest="type_name [25373,25380]"/>
  <match src="type_name [3493,3497]" dest="type_name [3493,3497]"/>
  <match src="variable_declaration_statement [73134,73176]" dest="variable_declaration_statement [72899,72941]"/>
  <match src="function_body [69335,71644]" dest="function_body [69046,71355]"/>
  <match src="visibility [43795,43801]" dest="visibility [43795,43801]"/>
  <match src="call_argument [16893,16924]" dest="call_argument [16893,16924]"/>
  <match src="variable_declaration_tuple [70661,70694]" dest="variable_declaration_tuple [70372,70405]"/>
  <match src="primitive_type [33881,33888]" dest="primitive_type [33881,33888]"/>
  <match src="return: return [37406,37412]" dest="return: return [37406,37412]"/>
  <match src="): ) [84210,84211]" dest="): ) [84739,84740]"/>
  <match src="primitive_type [109659,109666]" dest="primitive_type [109583,109590]"/>
  <match src=",: , [44281,44282]" dest=",: , [44283,44284]"/>
  <match src="type_name [36820,36829]" dest="type_name [36820,36829]"/>
  <match src="member_expression [22435,22457]" dest="member_expression [22435,22457]"/>
  <match src="augmented_assignment_expression [31958,31964]" dest="augmented_assignment_expression [31958,31964]"/>
  <match src="): ) [3912,3913]" dest="): ) [3912,3913]"/>
  <match src="[: [ [94540,94541]" dest="[: [ [94186,94187]"/>
  <match src="uint: uint [103106,103110]" dest="uint: uint [103030,103034]"/>
  <match src=",: , [40756,40757]" dest=",: , [40756,40757]"/>
  <match src="-=: -= [31643,31645]" dest="-=: -= [31643,31645]"/>
  <match src="external: external [40225,40233]" dest="external: external [40225,40233]"/>
  <match src="==: == [87414,87416]" dest="==: == [88575,88577]"/>
  <match src="[: [ [62338,62339]" dest="[: [ [62340,62341]"/>
  <match src="state_variable_declaration [58820,58860]" dest="state_variable_declaration [58822,58862]"/>
  <match src="return_statement [19086,19146]" dest="return_statement [19086,19146]"/>
  <match src="number_literal: 0 [71247,71248]" dest="number_literal: 0 [70958,70959]"/>
  <match src="expression_statement [7316,7363]" dest="expression_statement [7316,7363]"/>
  <match src="internal: internal [55634,55642]" dest="internal: internal [55636,55644]"/>
  <match src=",: , [28041,28042]" dest=",: , [28041,28042]"/>
  <match src="{: { [30256,30257]" dest="{: { [30256,30257]"/>
  <match src="user_defined_type [100366,100380]" dest="user_defined_type [99708,99722]"/>
  <match src="new_expression [95682,95695]" dest="new_expression [94830,94843]"/>
  <match src="if: if [80644,80646]" dest="if: if [81331,81333]"/>
  <match src="binary_expression [34324,34329]" dest="binary_expression [34324,34329]"/>
  <match src="(: ( [37981,37982]" dest="(: ( [37981,37982]"/>
  <match src="visibility [40832,40840]" dest="visibility [40832,40840]"/>
  <match src="): ) [27278,27279]" dest="): ) [27278,27279]"/>
  <match src="event_paramater [59256,59276]" dest="event_paramater [59258,59278]"/>
  <match src="variable_declaration [79250,79275]" dest="variable_declaration [79405,79430]"/>
  <match src="parameter [73742,73754]" dest="parameter [73507,73519]"/>
  <match src=".: . [89904,89905]" dest=".: . [91151,91152]"/>
  <match src="(: ( [39521,39522]" dest="(: ( [39521,39522]"/>
  <match src="variable_declaration [35573,35584]" dest="variable_declaration [35573,35584]"/>
  <match src="false: false [70127,70132]" dest="false: false [69838,69843]"/>
  <match src="call_argument [88666,88675]" dest="call_argument [89514,89523]"/>
  <match src="identifier: pool [82270,82274]" dest="identifier: pool [83108,83112]"/>
  <match src="=: = [28054,28055]" dest="=: = [28054,28055]"/>
  <match src="*: * [65493,65494]" dest="*: * [65503,65504]"/>
  <match src="}: } [70078,70079]" dest="}: } [69789,69790]"/>
  <match src=",: , [104517,104518]" dest=",: , [104441,104442]"/>
  <match src="identifier: invitorRelationshipInfo [99058,99081]" dest="identifier: invitorRelationshipInfo [99226,99249]"/>
  <match src="[: [ [61463,61464]" dest="[: [ [61465,61466]"/>
  <match src="primitive_type [33493,33500]" dest="primitive_type [33493,33500]"/>
  <match src="parameter [27462,27471]" dest="parameter [27462,27471]"/>
  <match src="identifier: checkAdmin [45243,45253]" dest="identifier: checkAdmin [45245,45255]"/>
  <match src=",: , [89897,89898]" dest=",: , [91144,91145]"/>
  <match src="identifier: checkpoints [62327,62338]" dest="identifier: checkpoints [62329,62340]"/>
  <match src="function: function [1372,1380]" dest="function: function [1372,1380]"/>
  <match src="number_literal: 1 [104084,104085]" dest="number_literal: 1 [104008,104009]"/>
  <match src="call_argument [35749,35751]" dest="call_argument [35749,35751]"/>
  <match src="parameter [21256,21268]" dest="parameter [21256,21268]"/>
  <match src="primitive_type [61778,61785]" dest="primitive_type [61780,61787]"/>
  <match src="parameter [77405,77412]" dest="parameter [76845,76852]"/>
  <match src="call_argument [33501,33522]" dest="call_argument [33501,33522]"/>
  <match src="call_expression [35726,35788]" dest="call_expression [35726,35788]"/>
  <match src="[: [ [52767,52768]" dest="[: [ [52769,52770]"/>
  <match src="solidity_version_comparison_operator [23722,23725]" dest="solidity_version_comparison_operator [23722,23725]"/>
  <match src="block_statement [31666,31701]" dest="block_statement [31666,31701]"/>
  <match src="virtual: virtual [56354,56361]" dest="virtual: virtual [56356,56363]"/>
  <match src="external: external [40477,40485]" dest="external: external [40477,40485]"/>
  <match src="identifier: recentlyRewardBlock [77612,77631]" dest="identifier: recentlyRewardBlock [77052,77071]"/>
  <match src="delete: delete [99282,99288]" dest="delete: delete [99438,99444]"/>
  <match src="uint256: uint256 [11791,11798]" dest="uint256: uint256 [11791,11798]"/>
  <match src="identifier: _verifyCallResult [19170,19187]" dest="identifier: _verifyCallResult [19170,19187]"/>
  <match src="): ) [55690,55691]" dest="): ) [55692,55693]"/>
  <match src="visibility [40791,40799]" dest="visibility [40791,40799]"/>
  <match src="binary_expression [6200,6206]" dest="binary_expression [6200,6206]"/>
  <match src="call_expression [17454,17527]" dest="call_expression [17454,17527]"/>
  <match src="function_body [95514,95929]" dest="function_body [94662,95239]"/>
  <match src="call_argument [14131,14162]" dest="call_argument [14131,14162]"/>
  <match src="identifier: SHD [96217,96220]" dest="identifier: SHD [95527,95530]"/>
  <match src="number_literal: 1 [92954,92955]" dest="number_literal: 1 [92602,92603]"/>
  <match src="primitive_type [63395,63399]" dest="primitive_type [63397,63401]"/>
  <match src="struct_expression [14273,14304]" dest="struct_expression [14273,14304]"/>
  <match src="type_name [87282,87289]" dest="type_name [88443,88450]"/>
  <match src=",: , [52694,52695]" dest=",: , [52696,52697]"/>
  <match src="call_expression [74714,74823]" dest="call_expression [74466,74514]"/>
  <match src="primitive_type [64444,64450]" dest="primitive_type [64446,64452]"/>
  <match src="comment: // construction, since the code is only stored at the end of the [12808,12872]" dest="comment: // construction, since the code is only stored at the end of the [12808,12872]"/>
  <match src="primitive_type [20528,20535]" dest="primitive_type [20528,20535]"/>
  <match src="(: ( [85019,85020]" dest="(: ( [86319,86320]"/>
  <match src="uint224: uint224 [36324,36331]" dest="uint224: uint224 [36324,36331]"/>
  <match src="uint: uint [40741,40745]" dest="uint: uint [40741,40745]"/>
  <match src="call_expression [33968,34048]" dest="call_expression [33968,34048]"/>
  <match src=".: . [24619,24620]" dest=".: . [24619,24620]"/>
  <match src="(: ( [21778,21779]" dest="(: ( [21778,21779]"/>
  <match src="struct: struct [63464,63470]" dest="struct: struct [63466,63472]"/>
  <match src="call_argument [36332,36334]" dest="call_argument [36332,36334]"/>
  <match src="parameter [22910,22922]" dest="parameter [22910,22922]"/>
  <match src="identifier: x [29762,29763]" dest="identifier: x [29762,29763]"/>
  <match src="identifier: _modifiedWeight [95441,95456]" dest="identifier: _modifiedWeight [94589,94604]"/>
  <match src="struct_member [64209,64225]" dest="struct_member [64211,64227]"/>
  <match src="=: = [68068,68069]" dest="=: = [68055,68056]"/>
  <match src="address: address [22204,22211]" dest="address: address [22204,22211]"/>
  <match src="identifier: pendingSHARDByPids [88378,88396]" dest="identifier: pendingSHARDByPids [89226,89244]"/>
  <match src="event_definition [66439,66571]" dest="event_definition [66692,66824]"/>
  <match src="primitive_type [62160,62167]" dest="primitive_type [62162,62169]"/>
  <match src="call_expression [103753,103770]" dest="call_expression [103677,103694]"/>
  <match src="call_argument [106368,106376]" dest="call_argument [106292,106300]"/>
  <match src="&lt;:  &lt; [24721,24723]" dest="&lt;:  &lt; [24721,24723]"/>
  <match src="): ) [83566,83567]" dest="): ) [84431,84432]"/>
  <match src="{: { [80629,80630]" dest="{: { [81316,81317]"/>
  <match src="identifier: x [27311,27312]" dest="identifier: x [27311,27312]"/>
  <match src="=: = [88650,88651]" dest="=: = [89498,89499]"/>
  <match src="identifier: onlyOwner [59867,59876]" dest="identifier: onlyOwner [59869,59878]"/>
  <match src="event_definition [39698,39781]" dest="event_definition [39698,39781]"/>
  <match src="): ) [1578,1579]" dest="): ) [1578,1579]"/>
  <match src="call_argument [86055,86073]" dest="call_argument [87347,87365]"/>
  <match src="identifier: x [33112,33113]" dest="identifier: x [33112,33113]"/>
  <match src="assignment_expression [45064,45110]" dest="assignment_expression [45066,45112]"/>
  <match src="parenthesized_expression [37051,37076]" dest="parenthesized_expression [37051,37076]"/>
  <match src="if_statement [30543,30622]" dest="if_statement [30543,30622]"/>
  <match src="identifier: IUniswapV2Pair [38494,38508]" dest="identifier: IUniswapV2Pair [38494,38508]"/>
  <match src="external: external [94276,94284]" dest="external: external [93922,93930]"/>
  <match src="override_specifier [51677,51685]" dest="override_specifier [51679,51687]"/>
  <match src="}: } [31975,31976]" dest="}: } [31975,31976]"/>
  <match src="type_name [105131,105137]" dest="type_name [105055,105061]"/>
  <match src="return: return [28785,28791]" dest="return: return [28785,28791]"/>
  <match src="): ) [35456,35457]" dest="): ) [35456,35457]"/>
  <match src="variable_declaration_statement [36438,36496]" dest="variable_declaration_statement [36438,36496]"/>
  <match src="&lt;:  &lt; [4494,4496]" dest="&lt;:  &lt; [4494,4496]"/>
  <match src="identifier: unDividendShard [76584,76599]" dest="identifier: unDividendShard [76100,76115]"/>
  <match src="type_name [34279,34286]" dest="type_name [34279,34286]"/>
  <match src="&quot;: &quot; [8907,8908]" dest="&quot;: &quot; [8907,8908]"/>
  <match src="&gt;: &gt; [28128,28129]" dest="&gt;: &gt; [28128,28129]"/>
  <match src=",: , [34314,34315]" dest=",: , [34314,34315]"/>
  <match src="): ) [76305,76306]" dest="): ) [75821,75822]"/>
  <match src="): ) [96166,96167]" dest="): ) [95476,95477]"/>
  <match src="parameter [1403,1420]" dest="parameter [1403,1420]"/>
  <match src="external: external [38875,38883]" dest="external: external [38875,38883]"/>
  <match src="array_access [73605,73630]" dest="array_access [73370,73395]"/>
  <match src="if: if [79081,79083]" dest="if: if [79244,79246]"/>
  <match src="string [55693,55726]" dest="string [55695,55728]"/>
  <match src="=: = [89971,89972]" dest="=: = [91191,91192]"/>
  <match src="type_cast_expression [36595,36610]" dest="type_cast_expression [36595,36610]"/>
  <match src="variable_declaration [28958,28968]" dest="variable_declaration [28958,28968]"/>
  <match src="user_defined_type [106988,107008]" dest="user_defined_type [106912,106932]"/>
  <match src="identifier: _poolIndexInRank [85815,85831]" dest="identifier: _poolIndexInRank [87115,87131]"/>
  <match src="identifier: _burn [56306,56311]" dest="identifier: _burn [56308,56313]"/>
  <match src="identifier: poolCount [93053,93062]" dest="identifier: poolCount [92701,92710]"/>
  <match src="primitive_type [27931,27938]" dest="primitive_type [27931,27938]"/>
  <match src="[: [ [60456,60457]" dest="[: [ [60458,60459]"/>
  <match src="identifier: shdPool [108549,108556]" dest="identifier: shdPool [108473,108480]"/>
  <match src="identifier: rankPoolIndex [89707,89720]" dest="identifier: rankPoolIndex [90949,90962]"/>
  <match src="primitive_type [16702,16708]" dest="primitive_type [16702,16708]"/>
  <match src="update_expression [87956,87972]" dest="update_expression [89117,89133]"/>
  <match src="function_definition [19161,19903]" dest="function_definition [19161,19903]"/>
  <match src="): ) [55840,55841]" dest="): ) [55842,55843]"/>
  <match src="identifier: value [21295,21300]" dest="identifier: value [21295,21300]"/>
  <match src="{: { [15255,15256]" dest="{: { [15255,15256]"/>
  <match src="binary_expression [69354,69399]" dest="binary_expression [69065,69110]"/>
  <match src="parameter [995,1032]" dest="parameter [995,1032]"/>
  <match src="identifier: blockNumber [62544,62555]" dest="identifier: blockNumber [62546,62557]"/>
  <match src="external: external [39469,39477]" dest="external: external [39469,39477]"/>
  <match src="address: address [57345,57352]" dest="address: address [57347,57354]"/>
  <match src="uint256: uint256 [95471,95478]" dest="uint256: uint256 [94619,94626]"/>
  <match src="address: address [59467,59474]" dest="address: address [59469,59476]"/>
  <match src="parameter [98473,98494]" dest="parameter [97238,97259]"/>
  <match src="call_argument [31726,31728]" dest="call_argument [31726,31728]"/>
  <match src="external: external [39612,39620]" dest="external: external [39612,39620]"/>
  <match src="function_definition [5888,6331]" dest="function_definition [5888,6331]"/>
  <match src=",: , [15741,15742]" dest=",: , [15741,15742]"/>
  <match src="parameter [37571,37592]" dest="parameter [37571,37592]"/>
  <match src="identifier: totalReward [77869,77880]" dest="identifier: totalReward [77104,77115]"/>
  <match src="identifier: xx [29435,29437]" dest="identifier: xx [29435,29437]"/>
  <match src="primitive_type [65553,65560]" dest="primitive_type [65563,65570]"/>
  <match src="function: function [39067,39075]" dest="function: function [39067,39075]"/>
  <match src="type_name [42054,42060]" dest="type_name [42054,42060]"/>
  <match src="(: ( [59466,59467]" dest="(: ( [59468,59469]"/>
  <match src="type_name [80302,80310]" dest="type_name [80922,80930]"/>
  <match src="member_expression [81612,81630]" dest="member_expression [100239,100257]"/>
  <match src="assignment_expression [74890,74949]" dest="assignment_expression [74761,74821]"/>
  <match src="): ) [89630,89631]" dest="): ) [90872,90873]"/>
  <match src="(: ( [83147,83148]" dest="(: ( [84247,84248]"/>
  <match src="number_literal: 4 [30855,30856]" dest="number_literal: 4 [30855,30856]"/>
  <match src="binary_expression [8927,8932]" dest="binary_expression [8927,8932]"/>
  <match src="state_mutability [7716,7720]" dest="state_mutability [7716,7720]"/>
  <match src="identifier: user [80319,80323]" dest="identifier: user [80939,80943]"/>
  <match src="expression_statement [87470,87493]" dest="expression_statement [88631,88654]"/>
  <match src="primitive_type [50015,50021]" dest="primitive_type [50017,50023]"/>
  <match src="member_expression [94572,94591]" dest="member_expression [94218,94237]"/>
  <match src="}: } [45839,45840]" dest="}: } [45841,45842]"/>
  <match src="): ) [55014,55015]" dest="): ) [55016,55017]"/>
  <match src="assignment_expression [87174,87240]" dest="assignment_expression [88333,88401]"/>
  <match src="uint256: uint256 [89923,89930]" dest="uint256: uint256 [90226,90233]"/>
  <match src="visibility [65465,65471]" dest="visibility [65475,65481]"/>
  <match src="parameter [3855,3872]" dest="parameter [3855,3872]"/>
  <match src="{: { [34268,34269]" dest="{: { [34268,34269]"/>
  <match src="return_statement [77091,77098]" dest="return_statement [76607,76614]"/>
  <match src="internal: internal [14070,14078]" dest="internal: internal [14070,14078]"/>
  <match src="type_name [16205,16212]" dest="type_name [16205,16212]"/>
  <match src="bool: bool [3493,3497]" dest="bool: bool [3493,3497]"/>
  <match src="visibility [33659,33667]" dest="visibility [33659,33667]"/>
  <match src=".: . [90975,90976]" dest=".: . [92000,92001]"/>
  <match src="array_access [98794,98847]" dest="array_access [98987,99040]"/>
  <match src="{: { [107741,107742]" dest="{: { [107665,107666]"/>
  <match src="identifier: abi [20686,20689]" dest="identifier: abi [20686,20689]"/>
  <match src="identifier: i [76696,76697]" dest="identifier: i [76212,76213]"/>
  <match src="binary_expression [61868,61877]" dest="binary_expression [61870,61879]"/>
  <match src="type_name [103436,103443]" dest="type_name [103360,103367]"/>
  <match src="boolean_literal [70022,70026]" dest="boolean_literal [69733,69737]"/>
  <match src=".: . [89391,89392]" dest=".: . [77741,77742]"/>
  <match src="state_mutability [27507,27511]" dest="state_mutability [27507,27511]"/>
  <match src="identifier: amount [55238,55244]" dest="identifier: amount [55240,55246]"/>
  <match src="): ) [5615,5616]" dest="): ) [5615,5616]"/>
  <match src="member_expression [83954,83974]" dest="member_expression [84478,84503]"/>
  <match src="type_name [43706,43713]" dest="type_name [43706,43713]"/>
  <match src="primitive_type [42054,42060]" dest="primitive_type [42054,42060]"/>
  <match src="type_name [88530,88539]" dest="type_name [89378,89387]"/>
  <match src="address: address [22001,22008]" dest="address: address [22001,22008]"/>
  <match src="identifier: _pairInfo [106442,106451]" dest="identifier: _pairInfo [106366,106375]"/>
  <match src="identifier: token [23339,23344]" dest="identifier: token [23339,23344]"/>
  <match src="identifier: _user [95135,95140]" dest="identifier: _user [97482,97487]"/>
  <match src="(: ( [52660,52661]" dest="(: ( [52662,52663]"/>
  <match src="function_body [21951,22151]" dest="function_body [21951,22151]"/>
  <match src="&amp;&amp;: &amp;&amp; [103901,103903]" dest="&amp;&amp;: &amp;&amp; [103825,103827]"/>
  <match src="(: ( [103489,103490]" dest="(: ( [103413,103414]"/>
  <match src="parameter [51047,51062]" dest="parameter [51049,51064]"/>
  <match src="address: address [39522,39529]" dest="address: address [39522,39529]"/>
  <match src="virtual: virtual [69327,69334]" dest="virtual: virtual [69038,69045]"/>
  <match src="identifier: _maxRankNumber [67343,67357]" dest="identifier: _maxRankNumber [67590,67604]"/>
  <match src="delete: delete [73605,73611]" dest="delete: delete [73370,73376]"/>
  <match src="identifier: safeTransfer [20585,20597]" dest="identifier: safeTransfer [20585,20597]"/>
  <match src="call_argument [38200,38207]" dest="call_argument [38200,38207]"/>
  <match src="if_statement [84222,84376]" dest="if_statement [84751,84911]"/>
  <match src="uint256: uint256 [44018,44025]" dest="uint256: uint256 [44020,44027]"/>
  <match src="parameter [103141,103160]" dest="parameter [103065,103084]"/>
  <match src="function_body [76988,77325]" dest="function_body [76504,76765]"/>
  <match src="type_name [19202,19207]" dest="type_name [19202,19207]"/>
  <match src="(: ( [7323,7324]" dest="(: ( [7323,7324]"/>
  <match src="public: public [50721,50727]" dest="public: public [50723,50729]"/>
  <match src="{: { [83046,83047]" dest="{: { [83825,83826]"/>
  <match src="{: { [43017,43018]" dest="{: { [43017,43018]"/>
  <match src="(: ( [69353,69354]" dest="(: ( [69064,69065]"/>
  <match src=".: . [76166,76167]" dest=".: . [75682,75683]"/>
  <match src="call_argument [81842,81858]" dest="call_argument [82674,82690]"/>
  <match src=",: , [39579,39580]" dest=",: , [39579,39580]"/>
  <match src="internal: internal [31255,31263]" dest="internal: internal [31255,31263]"/>
  <match src="identifier: increaseAllowance [53294,53311]" dest="identifier: increaseAllowance [53296,53313]"/>
  <match src=".: . [38019,38020]" dest=".: . [38019,38020]"/>
  <match src="primitive_type [42036,42043]" dest="primitive_type [42036,42043]"/>
  <match src="identifier: calculateDividend [90553,90570]" dest="identifier: calculateDividend [91578,91595]"/>
  <match src="identifier: _swapAddress [93232,93244]" dest="identifier: _swapAddress [92880,92892]"/>
  <match src="returns: returns [106979,106986]" dest="returns: returns [106903,106910]"/>
  <match src="primitive_type [50750,50755]" dest="primitive_type [50752,50757]"/>
  <match src="identifier: functionCall [15271,15283]" dest="identifier: functionCall [15271,15283]"/>
  <match src="if: if [98621,98623]" dest="if: if [97386,97388]"/>
  <match src="function_definition [8089,8309]" dest="function_definition [8089,8309]"/>
  <match src="address: address [4343,4350]" dest="address: address [4343,4350]"/>
  <match src="comment: // * 2^0 [35130,35138]" dest="comment: // * 2^0 [35130,35138]"/>
  <match src="identifier: newEndBlock [80647,80658]" dest="identifier: newEndBlock [81334,81345]"/>
  <match src="member_expression [81982,81999]" dest="member_expression [82814,82831]"/>
  <match src="primitive_type [65249,65256]" dest="primitive_type [65259,65266]"/>
  <match src="function_body [36015,36619]" dest="function_body [36015,36619]"/>
  <match src="number_literal: 9500000 [65598,65605]" dest="number_literal: 9500000 [65608,65615]"/>
  <match src="call_expression [88700,88724]" dest="call_expression [89548,89572]"/>
  <match src="primitive_type [73252,73259]" dest="primitive_type [73017,73024]"/>
  <match src=",: , [23363,23364]" dest=",: , [23363,23364]"/>
  <match src="=: = [85668,85669]" dest="=: = [86968,86969]"/>
  <match src="call_expression [79278,79424]" dest="call_expression [79433,79579]"/>
  <match src="call_argument [86049,86053]" dest="call_argument [87341,87345]"/>
  <match src="): ) [25949,25950]" dest="): ) [25949,25950]"/>
  <match src="identifier: userDividendWeight [44333,44351]" dest="identifier: userDividendWeight [44335,44353]"/>
  <match src="member_expression [83873,83883]" dest="member_expression [85594,85604]"/>
  <match src="parameter [31278,31285]" dest="parameter [31278,31285]"/>
  <match src="): ) [12715,12716]" dest="): ) [12715,12716]"/>
  <match src="): ) [104348,104349]" dest="): ) [104272,104273]"/>
  <match src="type_name [103402,103409]" dest="type_name [103326,103333]"/>
  <match src="function: function [25750,25758]" dest="function: function [25750,25758]"/>
  <match src="(: ( [62279,62280]" dest="(: ( [62281,62282]"/>
  <match src="{: { [45925,45926]" dest="{: { [45927,45928]"/>
  <match src="binary_expression [61011,61037]" dest="binary_expression [61013,61039]"/>
  <match src="bool: bool [51454,51458]" dest="bool: bool [51456,51460]"/>
  <match src="emit_statement [86424,86473]" dest="emit_statement [87712,87761]"/>
  <match src="=: = [26930,26931]" dest="=: = [26930,26931]"/>
  <match src="type_name [39554,39558]" dest="type_name [39554,39558]"/>
  <match src="assignment_expression [88687,88724]" dest="assignment_expression [89535,89572]"/>
  <match src="primitive_type [426,433]" dest="primitive_type [426,433]"/>
  <match src="identifier: _usersTotalWeight [92741,92758]" dest="identifier: _usersTotalWeight [92389,92406]"/>
  <match src="}: } [52875,52876]" dest="}: } [52877,52878]"/>
  <match src="identifier: _toBlock [79491,79499]" dest="identifier: _toBlock [79646,79654]"/>
  <match src="storage: storage [94498,94505]" dest="storage: storage [94144,94151]"/>
  <match src=",: , [54146,54147]" dest=",: , [54148,54149]"/>
  <match src="call_expression [16773,16854]" dest="call_expression [16773,16854]"/>
  <match src="identifier: Deposit [66445,66452]" dest="identifier: Deposit [66698,66705]"/>
  <match src="binary_expression [90879,90907]" dest="binary_expression [91904,91932]"/>
  <match src="identifier: mul [98273,98276]" dest="identifier: mul [97038,97041]"/>
  <match src="): ) [16760,16761]" dest="): ) [16760,16761]"/>
  <match src="identifier: _pid [78189,78193]" dest="identifier: _pid [77322,77326]"/>
  <match src="identifier: sub [83344,83347]" dest="identifier: sub [84329,84332]"/>
  <match src="uint256: uint256 [73742,73749]" dest="uint256: uint256 [73507,73514]"/>
  <match src="call_struct_argument [105364,105389]" dest="call_struct_argument [105288,105313]"/>
  <match src=".: . [78623,78624]" dest=".: . [78203,78204]"/>
  <match src="address: address [66963,66970]" dest="address: address [67216,67223]"/>
  <match src="}: } [33136,33137]" dest="}: } [33136,33137]"/>
  <match src="(: ( [98137,98138]" dest="(: ( [96902,96903]"/>
  <match src="if_statement [107712,108156]" dest="if_statement [107636,108080]"/>
  <match src="uint256: uint256 [7288,7295]" dest="uint256: uint256 [7288,7295]"/>
  <match src=",: , [20939,20940]" dest=",: , [20939,20940]"/>
  <match src="(: ( [59245,59246]" dest="(: ( [59247,59248]"/>
  <match src="identifier: DelegationStorage [117,134]" dest="identifier: DelegationStorage [117,134]"/>
  <match src="&gt;=: &gt;= [29410,29412]" dest="&gt;=: &gt;= [29410,29412]"/>
  <match src="type_name [27462,27469]" dest="type_name [27462,27469]"/>
  <match src="(: ( [83642,83643]" dest="(: ( [85386,85387]"/>
  <match src="function_definition [24399,24632]" dest="function_definition [24399,24632]"/>
  <match src="call_argument [72092,72105]" dest="call_argument [71645,71658]"/>
  <match src="): ) [18431,18432]" dest="): ) [18431,18432]"/>
  <match src="identifier: UserInfo [100859,100867]" dest="identifier: UserInfo [100921,100929]"/>
  <match src="call_expression [41787,41807]" dest="call_expression [41787,41807]"/>
  <match src="identifier: pool [82050,82054]" dest="identifier: pool [82888,82892]"/>
  <match src="number_literal: 0 [66051,66052]" dest="number_literal: 0 [66065,66066]"/>
  <match src="identifier: length [19461,19467]" dest="identifier: length [19461,19467]"/>
  <match src="member_expression [102692,102708]" dest="member_expression [102616,102632]"/>
  <match src="number_literal: 2059 [68423,68427]" dest="number_literal: 2059 [68421,68425]"/>
  <match src="&gt;=:  &gt;= [30023,30026]" dest="&gt;=:  &gt;= [30023,30026]"/>
  <match src="block_statement [97340,97383]" dest="block_statement [96105,96148]"/>
  <match src="]: ] [93413,93414]" dest="]: ] [93061,93062]"/>
  <match src="identifier: _invitees [94414,94423]" dest="identifier: _invitees [94060,94069]"/>
  <match src="&quot;: &quot; [69416,69417]" dest="&quot;: &quot; [69127,69128]"/>
  <match src="primitive_type [65657,65664]" dest="primitive_type [65667,65674]"/>
  <match src="comment: /**      * @dev Returns the substraction of two unsigned integers, with an overflow flag.      *      * _Available since v3.4._      */ [5434,5573]" dest="comment: /**      * @dev Returns the substraction of two unsigned integers, with an overflow flag.      *      * _Available since v3.4._      */ [5434,5573]"/>
  <match src="call_argument [61679,61686]" dest="call_argument [61681,61688]"/>
  <match src="type_cast_expression [67261,67271]" dest="type_cast_expression [67508,67518]"/>
  <match src="parameter [16238,16250]" dest="parameter [16238,16250]"/>
  <match src="member_expression [104169,104187]" dest="member_expression [104093,104111]"/>
  <match src="expression_statement [52725,52847]" dest="expression_statement [52727,52849]"/>
  <match src="[: [ [60582,60583]" dest="[: [ [60584,60585]"/>
  <match src="identifier: to [61288,61290]" dest="identifier: to [61290,61292]"/>
  <match src="): ) [54932,54933]" dest="): ) [54934,54935]"/>
  <match src="function_definition [100075,101759]" dest="function_definition [99556,102181]"/>
  <match src="uint224: uint224 [36595,36602]" dest="uint224: uint224 [36595,36602]"/>
  <match src=",: , [4126,4127]" dest=",: , [4126,4127]"/>
  <match src="identifier: value [20632,20637]" dest="identifier: value [20632,20637]"/>
  <match src="call_argument [18480,18484]" dest="call_argument [18480,18484]"/>
  <match src="expression_statement [88641,88677]" dest="expression_statement [89489,89525]"/>
  <match src="array_access [89707,89758]" dest="array_access [90949,91000]"/>
  <match src="expression_statement [86914,86936]" dest="expression_statement [88071,88093]"/>
  <match src="(: ( [21644,21645]" dest="(: ( [21644,21645]"/>
  <match src="unary_expression [99593,99620]" dest="unary_expression [97683,97710]"/>
  <match src="expression_statement [84668,84686]" dest="expression_statement [85799,85817]"/>
  <match src="expression_statement [31958,31965]" dest="expression_statement [31958,31965]"/>
  <match src="identifier: _feeRateDenominator [45451,45470]" dest="identifier: _feeRateDenominator [45453,45472]"/>
  <match src="identifier: massUpdatePools [75707,75722]" dest="identifier: massUpdatePools [75223,75238]"/>
  <match src="contract_declaration [42985,47495]" dest="contract_declaration [42985,47497]"/>
  <match src="identifier: value [20835,20840]" dest="identifier: value [20835,20840]"/>
  <match src="primitive_type [45186,45193]" dest="primitive_type [45188,45195]"/>
  <match src="event_paramater [66635,66649]" dest="event_paramater [66888,66902]"/>
  <match src="number_literal: 0 [108479,108480]" dest="number_literal: 0 [108403,108404]"/>
  <match src="array_access [62581,62601]" dest="array_access [62583,62603]"/>
  <match src="parameter [16205,16218]" dest="parameter [16205,16218]"/>
  <match src="identifier: require [26785,26792]" dest="identifier: require [26785,26792]"/>
  <match src="identifier: poolReward [90436,90446]" dest="identifier: toBeDividend [91487,91499]"/>
  <match src="expression_statement [59888,59912]" dest="expression_statement [59890,59914]"/>
  <match src="(: ( [36929,36930]" dest="(: ( [36929,36930]"/>
  <match src="{: { [27530,27531]" dest="{: { [27530,27531]"/>
  <match src="parameter [92811,92841]" dest="parameter [92459,92489]"/>
  <match src="): ) [40111,40112]" dest="): ) [40111,40112]"/>
  <match src="address: address [4366,4373]" dest="address: address [4366,4373]"/>
  <match src="': ' [35786,35787]" dest="': ' [35786,35787]"/>
  <match src="function_definition [37922,38380]" dest="function_definition [37922,38380]"/>
  <match src="(: ( [61629,61630]" dest="(: ( [61631,61632]"/>
  <match src="identifier: r [30253,30254]" dest="identifier: r [30253,30254]"/>
  <match src="type_name [59183,59190]" dest="type_name [59185,59192]"/>
  <match src="&gt;: &gt; [62307,62308]" dest="&gt;: &gt; [62309,62310]"/>
  <match src="(: ( [79619,79620]" dest="(: ( [79702,79703]"/>
  <match src="identifier: delegatecall [19057,19069]" dest="identifier: delegatecall [19057,19069]"/>
  <match src="primitive_type [95525,95532]" dest="primitive_type [94673,94680]"/>
  <match src="identifier: selector [20931,20939]" dest="identifier: selector [20931,20939]"/>
  <match src="call_argument [86877,86902]" dest="call_argument [88034,88059]"/>
  <match src="): ) [85251,85252]" dest="): ) [86551,86552]"/>
  <match src="number_literal: 0 [73919,73920]" dest="number_literal: 0 [73649,73650]"/>
  <match src="(: ( [81841,81842]" dest="(: ( [82673,82674]"/>
  <match src="function: function [40806,40814]" dest="function: function [40806,40814]"/>
  <match src="block_statement [97434,97582]" dest="block_statement [96199,96347]"/>
  <match src="identifier: x [31930,31931]" dest="identifier: x [31930,31931]"/>
  <match src="uint256: uint256 [27224,27231]" dest="uint256: uint256 [27224,27231]"/>
  <match src="block_statement [82245,82293]" dest="block_statement [83083,83131]"/>
  <match src="comment: // lossy between 0/1 and 40 bits [37884,37916]" dest="comment: // lossy between 0/1 and 40 bits [37884,37916]"/>
  <match src="identifier: poolReward [78692,78702]" dest="identifier: poolReward [78272,78282]"/>
  <match src="call_argument [23569,23575]" dest="call_argument [23569,23575]"/>
  <match src="}: } [45117,45118]" dest="}: } [45119,45120]"/>
  <match src="}: } [47491,47492]" dest="}: } [47493,47494]"/>
  <match src="}: } [81318,81319]" dest="}: } [82007,82008]"/>
  <match src="=: = [95059,95060]" dest="=: = [82601,82602]"/>
  <match src="return: return [38054,38060]" dest="return: return [38054,38060]"/>
  <match src="return_type_definition [50909,50926]" dest="return_type_definition [50911,50928]"/>
  <match src="internal: internal [106970,106978]" dest="internal: internal [106894,106902]"/>
  <match src="): ) [84148,84149]" dest="): ) [84677,84678]"/>
  <match src="=: = [34993,34994]" dest="=: = [34993,34994]"/>
  <match src=",: , [83526,83527]" dest=",: , [84391,84392]"/>
  <match src="number_literal: 8 [31903,31904]" dest="number_literal: 8 [31903,31904]"/>
  <match src="primitive_type [107786,107793]" dest="primitive_type [107710,107717]"/>
  <match src="identifier: setDeveloperDAOFund [44447,44466]" dest="identifier: setDeveloperDAOFund [44449,44468]"/>
  <match src="identifier: to [40828,40830]" dest="identifier: to [40828,40830]"/>
  <match src="identifier: shardReserve [97546,97558]" dest="identifier: shardReserve [96311,96323]"/>
  <match src="identifier: _lpTokenAmount [93129,93143]" dest="identifier: _lpTokenAmount [92777,92791]"/>
  <match src="number_literal: 32 [105888,105890]" dest="number_literal: 32 [105812,105814]"/>
  <match src="): ) [15652,15653]" dest="): ) [15652,15653]"/>
  <match src=",: , [28065,28066]" dest=",: , [28065,28066]"/>
  <match src="return_statement [7810,7823]" dest="return_statement [7810,7823]"/>
  <match src=",: , [77244,77245]" dest=",: , [76684,76685]"/>
  <match src="primitive_type [38531,38538]" dest="primitive_type [38531,38538]"/>
  <match src="}: } [70490,70491]" dest="}: } [70201,70202]"/>
  <match src="identifier: INVITEE_WEIGHT [99756,99770]" dest="identifier: INVITEE_WEIGHT [97948,97962]"/>
  <match src="): ) [80290,80291]" dest="): ) [80910,80911]"/>
  <match src="type_name [89923,89930]" dest="type_name [90226,90233]"/>
  <match src="=: = [49620,49621]" dest="=: = [49622,49623]"/>
  <match src="uint224: uint224 [37809,37816]" dest="uint224: uint224 [37809,37816]"/>
  <match src=".: . [103962,103963]" dest=".: . [103886,103887]"/>
  <match src="primitive_type [43833,43840]" dest="primitive_type [43833,43840]"/>
  <match src="}: } [7829,7830]" dest="}: } [7829,7830]"/>
  <match src="memory: memory [15633,15639]" dest="memory: memory [15633,15639]"/>
  <match src=".: . [102585,102586]" dest=".: . [102509,102510]"/>
  <match src="): ) [41704,41705]" dest="): ) [41704,41705]"/>
  <match src=".: . [85683,85684]" dest=".: . [86983,86984]"/>
  <match src="identifier: require [14319,14326]" dest="identifier: require [14319,14326]"/>
  <match src="virtual: virtual [68921,68928]" dest="virtual: virtual [68632,68639]"/>
  <match src="call_expression [87326,87338]" dest="call_expression [88487,88499]"/>
  <match src="parameter [33636,33657]" dest="parameter [33636,33657]"/>
  <match src="++: ++ [88806,88808]" dest="++: ++ [89654,89656]"/>
  <match src="variable_declaration [93379,93400]" dest="variable_declaration [93027,93048]"/>
  <match src="if_statement [75961,76022]" dest="if_statement [75477,75538]"/>
  <match src=".: . [97207,97208]" dest=".: . [95972,95973]"/>
  <match src="call_argument [37300,37311]" dest="call_argument [37300,37311]"/>
  <match src="): ) [29153,29154]" dest="): ) [29153,29154]"/>
  <match src="): ) [6277,6278]" dest="): ) [6277,6278]"/>
  <match src="member_expression [20686,20708]" dest="member_expression [20686,20708]"/>
  <match src="call_argument [104084,104085]" dest="call_argument [104008,104009]"/>
  <match src="(: ( [80826,80827]" dest="(: ( [81513,81514]"/>
  <match src="string: string [71817,71823]" dest="string: string [71528,71534]"/>
  <match src="): ) [92955,92956]" dest="): ) [92603,92604]"/>
  <match src="expression_statement [101619,101675]" dest="expression_statement [101356,101414]"/>
  <match src="variable_declaration [28043,28052]" dest="variable_declaration [28043,28052]"/>
  <match src="primitive_type [63491,63498]" dest="primitive_type [63493,63500]"/>
  <match src="): ) [78373,78374]" dest="): ) [77885,77886]"/>
  <match src="==: == [59543,59545]" dest="==: == [59545,59547]"/>
  <match src="false: false [70405,70410]" dest="false: false [70116,70121]"/>
  <match src="identifier: _pid [102369,102373]" dest="identifier: _pid [102228,102232]"/>
  <match src="(: ( [28276,28277]" dest="(: ( [28276,28277]"/>
  <match src="': ' [28249,28250]" dest="': ' [28249,28250]"/>
  <match src="parameter [56329,56343]" dest="parameter [56331,56345]"/>
  <match src="(: ( [103774,103775]" dest="(: ( [103698,103699]"/>
  <match src="block_statement [74049,74869]" dest="block_statement [73779,74740]"/>
  <match src="identifier: _owner [25584,25590]" dest="identifier: _owner [25584,25590]"/>
  <match src="identifier: r [29629,29630]" dest="identifier: r [29629,29630]"/>
  <match src="variable_declaration [86777,86807]" dest="variable_declaration [87932,87962]"/>
  <match src="identifier: poolTotalWeight [101619,101634]" dest="identifier: poolTotalWeight [101356,101371]"/>
  <match src="uint224: uint224 [35741,35748]" dest="uint224: uint224 [35741,35748]"/>
  <match src="identifier: uq112x112 [34589,34598]" dest="identifier: uq112x112 [34589,34598]"/>
  <match src="{: { [55651,55652]" dest="{: { [55653,55654]"/>
  <match src="public: public [64510,64516]" dest="public: public [64512,64518]"/>
  <match src="identifier: currentRankCount [74313,74329]" dest="identifier: currentRankCount [74132,74148]"/>
  <match src="string [8880,8908]" dest="string [8880,8908]"/>
  <match src="uint256: uint256 [27971,27978]" dest="uint256: uint256 [27971,27978]"/>
  <match src="=: = [99449,99450]" dest="=: = [97539,97540]"/>
  <match src="uint256: uint256 [16687,16694]" dest="uint256: uint256 [16687,16694]"/>
  <match src="augmented_assignment_expression [27777,27791]" dest="augmented_assignment_expression [27777,27791]"/>
  <match src="primitive_type [57855,57860]" dest="primitive_type [57857,57862]"/>
  <match src="call_expression [80558,80594]" dest="call_expression [81243,81279]"/>
  <match src="address: address [55761,55768]" dest="address: address [55763,55770]"/>
  <match src="identifier: _x [37829,37831]" dest="identifier: _x [37829,37831]"/>
  <match src="{: { [30650,30651]" dest="{: { [30650,30651]"/>
  <match src="identifier: TokenPairInfo [63922,63935]" dest="identifier: TokenPairInfo [63924,63937]"/>
  <match src="internal: internal [30224,30232]" dest="internal: internal [30224,30232]"/>
  <match src="call_argument [103786,103797]" dest="call_argument [103710,103721]"/>
  <match src="expression_statement [83855,83894]" dest="expression_statement [85576,85616]"/>
  <match src="type_name [105737,105750]" dest="type_name [105661,105674]"/>
  <match src="type_name [4106,4113]" dest="type_name [4106,4113]"/>
  <match src="): ) [107863,107864]" dest="): ) [107787,107788]"/>
  <match src="type_name [102900,102907]" dest="type_name [102824,102831]"/>
  <match src="identifier: _pending [46976,46984]" dest="identifier: _pending [46363,46371]"/>
  <match src=",: , [39588,39589]" dest=",: , [39588,39589]"/>
  <match src="returns: returns [60027,60034]" dest="returns: returns [60029,60036]"/>
  <match src="if_statement [28170,28195]" dest="if_statement [28170,28195]"/>
  <match src="identifier: _count [87571,87577]" dest="identifier: _count [88732,88738]"/>
  <match src="(: ( [2033,2034]" dest="(: ( [2033,2034]"/>
  <match src="): ) [3473,3474]" dest="): ) [3473,3474]"/>
  <match src="identifier: this [14106,14110]" dest="identifier: this [14106,14110]"/>
  <match src="uint256: uint256 [2074,2081]" dest="uint256: uint256 [2074,2081]"/>
  <match src="identifier: pop [73651,73654]" dest="identifier: pop [73416,73419]"/>
  <match src="(: ( [3441,3442]" dest="(: ( [3441,3442]"/>
  <match src="==: == [100605,100607]" dest="==: == [100181,100183]"/>
  <match src="address: address [44467,44474]" dest="address: address [44469,44476]"/>
  <match src="type_name [7730,7737]" dest="type_name [7730,7737]"/>
  <match src="string_literal [85750,85769]" dest="string_literal [87050,87069]"/>
  <match src="call_argument [80809,80821]" dest="call_argument [81496,81508]"/>
  <match src="call_expression [53422,53472]" dest="call_expression [53424,53474]"/>
  <match src="type_name [95424,95431]" dest="type_name [94572,94579]"/>
  <match src="pragma_directive [23707,23738]" dest="pragma_directive [23707,23738]"/>
  <match src="primitive_type [31244,31251]" dest="primitive_type [31244,31251]"/>
  <match src=".: . [102687,102688]" dest=".: . [102611,102612]"/>
  <match src=".: . [77904,77905]" dest=".: . [77139,77140]"/>
  <match src=",: , [66737,66738]" dest=",: , [66990,66991]"/>
  <match src="(: ( [84529,84530]" dest="(: ( [85660,85661]"/>
  <match src="return: return [102966,102972]" dest="return: return [102890,102896]"/>
  <match src="call_expression [80796,80822]" dest="call_expression [81483,81509]"/>
  <match src="identifier: poolReward [79278,79288]" dest="identifier: poolReward [79433,79443]"/>
  <match src="identifier: onlyOwner [59762,59771]" dest="identifier: onlyOwner [59764,59773]"/>
  <match src="identifier: require [11811,11818]" dest="identifier: require [11811,11818]"/>
  <match src="identifier: amount1 [40695,40702]" dest="identifier: amount1 [40695,40702]"/>
  <match src="primitive_type [98426,98433]" dest="primitive_type [97191,97198]"/>
  <match src="}: } [100689,100690]" dest="}: } [100446,100447]"/>
  <match src="uint256: uint256 [4148,4155]" dest="uint256: uint256 [4148,4155]"/>
  <match src="binary_expression [7817,7822]" dest="binary_expression [7817,7822]"/>
  <match src="new_expression [93247,93260]" dest="new_expression [92895,92908]"/>
  <match src="[: [ [92776,92777]" dest="[: [ [92424,92425]"/>
  <match src="call_argument [56474,56481]" dest="call_argument [56476,56483]"/>
  <match src=",: , [26901,26902]" dest=",: , [26901,26902]"/>
  <match src="identifier: _user [88973,88978]" dest="identifier: _user [89821,89826]"/>
  <match src="identifier: _pairSwap [105088,105097]" dest="identifier: _pairSwap [105012,105021]"/>
  <match src="]: ] [95479,95480]" dest="]: ] [94627,94628]"/>
  <match src="): ) [93062,93063]" dest="): ) [92710,92711]"/>
  <match src="parameter [92675,92713]" dest="parameter [92323,92361]"/>
  <match src="visibility [57219,57227]" dest="visibility [57221,57229]"/>
  <match src="primitive_type [40082,40086]" dest="primitive_type [40082,40086]"/>
  <match src="identifier: sender [55049,55055]" dest="identifier: sender [55051,55057]"/>
  <match src="): ) [19074,19075]" dest="): ) [19074,19075]"/>
  <match src="=: = [70225,70226]" dest="=: = [69936,69937]"/>
  <match src="&gt;: &gt; [31401,31402]" dest="&gt;: &gt; [31401,31402]"/>
  <match src="identifier: blockTimestampLast [105512,105530]" dest="identifier: blockTimestampLast [105436,105454]"/>
  <match src="string [23578,23622]" dest="string [23578,23622]"/>
  <match src="primitive_type [38095,38102]" dest="primitive_type [38095,38102]"/>
  <match src="binary_expression [85307,85316]" dest="binary_expression [86607,86616]"/>
  <match src="number_literal: 2 [105883,105884]" dest="number_literal: 2 [105807,105808]"/>
  <match src="(: ( [35733,35734]" dest="(: ( [35733,35734]"/>
  <match src="call_argument [44932,44972]" dest="call_argument [44934,44974]"/>
  <match src="identifier: onlyOwner [45547,45556]" dest="identifier: onlyOwner [45549,45558]"/>
  <match src="&quot;: &quot; [85523,85524]" dest="&quot;: &quot; [86823,86824]"/>
  <match src="binary_expression [46600,46662]" dest="binary_expression [46842,46904]"/>
  <match src="): ) [38788,38789]" dest="): ) [38788,38789]"/>
  <match src="call_expression [85701,85770]" dest="call_expression [87001,87070]"/>
  <match src="comment: // counterfactual [42349,42366]" dest="comment: // counterfactual [42349,42366]"/>
  <match src="(: ( [81932,81933]" dest="(: ( [82764,82765]"/>
  <match src="[: [ [53433,53434]" dest="[: [ [53435,53436]"/>
  <match src="type_name [63946,63960]" dest="type_name [63948,63962]"/>
  <match src="identifier: _pid [83549,83553]" dest="identifier: _pid [84414,84418]"/>
  <match src="identifier: msg [84129,84132]" dest="identifier: msg [84658,84661]"/>
  <match src="uint256: uint256 [89823,89830]" dest="uint256: uint256 [91065,91072]"/>
  <match src="identifier: _x [36290,36292]" dest="identifier: _x [36290,36292]"/>
  <match src="function_body [26455,26549]" dest="function_body [26455,26549]"/>
  <match src="user_defined_type [64501,64509]" dest="user_defined_type [64503,64511]"/>
  <match src="user_defined_type [73356,73368]" dest="user_defined_type [73121,73133]"/>
  <match src="array_access [61880,61895]" dest="array_access [61882,61897]"/>
  <match src="type_name [105902,105908]" dest="type_name [105826,105832]"/>
  <match src="identifier: FixedPoint [63120,63130]" dest="identifier: FixedPoint [63122,63132]"/>
  <match src="number_literal: 0 [55936,55937]" dest="number_literal: 0 [55938,55939]"/>
  <match src="&quot;: &quot; [26028,26029]" dest="&quot;: &quot; [26028,26029]"/>
  <match src="}: } [58945,58946]" dest="}: } [58947,58948]"/>
  <match src="binary_expression [29920,29926]" dest="binary_expression [29920,29926]"/>
  <match src="identifier: newOriginWeight [82343,82358]" dest="identifier: newOriginWeight [83181,83196]"/>
  <match src="binary_expression [103904,103921]" dest="binary_expression [103828,103845]"/>
  <match src="identifier: blackList [72928,72937]" dest="identifier: blackList [72610,72619]"/>
  <match src="identifier: length [87227,87233]" dest="identifier: length [88388,88394]"/>
  <match src="uint256: uint256 [27317,27324]" dest="uint256: uint256 [27317,27324]"/>
  <match src="function: function [40378,40386]" dest="function: function [40378,40386]"/>
  <match src="variable_declaration [82540,82554]" dest="variable_declaration [83378,83392]"/>
  <match src="type_name [79139,79146]" dest="type_name [79302,79309]"/>
  <match src="(: ( [78476,78477]" dest="(: ( [78056,78057]"/>
  <match src="primitive_type [79250,79257]" dest="primitive_type [79405,79412]"/>
  <match src="parameter [95471,95497]" dest="parameter [94619,94645]"/>
  <match src="identifier: pool [79465,79469]" dest="identifier: pool [79620,79624]"/>
  <match src=",: , [106376,106377]" dest=",: , [106300,106301]"/>
  <match src="identifier: require [44910,44917]" dest="identifier: require [44912,44919]"/>
  <match src=".: . [98241,98242]" dest=".: . [97006,97007]"/>
  <match src="): ) [55726,55727]" dest="): ) [55728,55729]"/>
  <match src="identifier: TokenPairInfo [69429,69442]" dest="identifier: TokenPairInfo [69140,69153]"/>
  <match src="&amp;&amp;: &amp;&amp; [107125,107127]" dest="&amp;&amp;: &amp;&amp; [107049,107051]"/>
  <match src="event_paramater [25373,25397]" dest="event_paramater [25373,25397]"/>
  <match src="variable_declaration_statement [99023,99113]" dest="variable_declaration_statement [99204,99281]"/>
  <match src="[: [ [88833,88834]" dest="[: [ [89681,89682]"/>
  <match src="call_argument [14098,14129]" dest="call_argument [14098,14129]"/>
  <match src="expression_statement [47069,47106]" dest="expression_statement [46456,46493]"/>
  <match src="internal: internal [104487,104495]" dest="internal: internal [104411,104419]"/>
  <match src="=: = [86977,86978]" dest="=: = [88134,88135]"/>
  <match src="identifier: _oracleWeight [93689,93702]" dest="identifier: _oracleWeight [93337,93350]"/>
  <match src="type_name [88503,88510]" dest="type_name [89351,89358]"/>
  <match src="call_argument [46404,46428]" dest="call_argument [46646,46670]"/>
  <match src=".: . [101587,101588]" dest=".: . [101324,101325]"/>
  <match src="call_expression [52004,52043]" dest="call_expression [52006,52045]"/>
  <match src="type_name [92905,92912]" dest="type_name [92553,92560]"/>
  <match src="identifier: FullMath [34291,34299]" dest="identifier: FullMath [34291,34299]"/>
  <match src="bytes: bytes [18841,18846]" dest="bytes: bytes [18841,18846]"/>
  <match src="primitive_type [2383,2387]" dest="primitive_type [2383,2387]"/>
  <match src="call_argument [79901,79925]" dest="call_argument [80486,80510]"/>
  <match src="call_argument [93160,93169]" dest="call_argument [92808,92817]"/>
  <match src="uint8: uint8 [32620,32625]" dest="uint8: uint8 [32620,32625]"/>
  <match src="view: view [88463,88467]" dest="view: view [89311,89315]"/>
  <match src="member_expression [37654,37661]" dest="member_expression [37654,37661]"/>
  <match src="identifier: termStartIndex [103886,103900]" dest="identifier: termStartIndex [103810,103824]"/>
  <match src="type_name [426,433]" dest="type_name [426,433]"/>
  <match src="): ) [46574,46575]" dest="): ) [46816,46817]"/>
  <match src="member_expression [38103,38110]" dest="member_expression [38103,38110]"/>
  <match src="}: } [5425,5426]" dest="}: } [5425,5426]"/>
  <match src="type_name [96906,96914]" dest="type_name [95671,95679]"/>
  <match src=",: , [16891,16892]" dest=",: , [16891,16892]"/>
  <match src="identifier: _poolIndexInRank [85221,85237]" dest="identifier: _poolIndexInRank [86521,86537]"/>
  <match src="function_definition [7672,7830]" dest="function_definition [7672,7830]"/>
  <match src="primitive_type [22204,22211]" dest="primitive_type [22204,22211]"/>
  <match src="contract_declaration [58735,62887]" dest="contract_declaration [58737,62889]"/>
  <match src="identifier: recipient [51495,51504]" dest="identifier: recipient [51497,51506]"/>
  <match src="call_argument [17481,17485]" dest="call_argument [17481,17485]"/>
  <match src="call_argument [35459,35494]" dest="call_argument [35459,35494]"/>
  <match src="member_expression [108096,108125]" dest="member_expression [108020,108049]"/>
  <match src="unary_expression [73605,73624]" dest="unary_expression [73370,73389]"/>
  <match src="primitive_type [53312,53319]" dest="primitive_type [53314,53321]"/>
  <match src="event_paramater [39808,39830]" dest="event_paramater [39808,39830]"/>
  <match src="identifier: amount [56337,56343]" dest="identifier: amount [56339,56345]"/>
  <match src="function: function [86488,86496]" dest="function: function [87776,87784]"/>
  <match src="type_name [80417,80424]" dest="type_name [101538,101545]"/>
  <match src="identifier: mul [98103,98106]" dest="identifier: mul [96868,96871]"/>
  <match src="state_variable_declaration [32744,32836]" dest="state_variable_declaration [32744,32836]"/>
  <match src="(: ( [61391,61392]" dest="(: ( [61393,61394]"/>
  <match src="]: ] [51748,51749]" dest="]: ] [51750,51751]"/>
  <match src="(: ( [31384,31385]" dest="(: ( [31384,31385]"/>
  <match src="visibility [53349,53355]" dest="visibility [53351,53357]"/>
  <match src="parameter [33024,33033]" dest="parameter [33024,33033]"/>
  <match src="call_argument [18885,18891]" dest="call_argument [18885,18891]"/>
  <match src="identifier: BitMath [30044,30051]" dest="identifier: BitMath [30044,30051]"/>
  <match src="call_argument [23557,23567]" dest="call_argument [23557,23567]"/>
  <match src="array_access [76765,76781]" dest="array_access [76281,76297]"/>
  <match src="return_statement [54256,54268]" dest="return_statement [54258,54270]"/>
  <match src="call_expression [81835,81971]" dest="call_expression [82667,82803]"/>
  <match src="primitive_type [89429,89433]" dest="primitive_type [90671,90675]"/>
  <match src="): ) [37780,37781]" dest="): ) [37780,37781]"/>
  <match src="): ) [93117,93118]" dest="): ) [92765,92766]"/>
  <match src="uint256: uint256 [20624,20631]" dest="uint256: uint256 [20624,20631]"/>
  <match src="contract_body [63040,108615]" dest="contract_body [63042,108539]"/>
  <match src="type_name [76184,76191]" dest="type_name [75700,75707]"/>
  <match src="uint256: uint256 [5335,5342]" dest="uint256: uint256 [5335,5342]"/>
  <match src="): ) [40830,40831]" dest="): ) [40830,40831]"/>
  <match src="(: ( [108002,108003]" dest="(: ( [107926,107927]"/>
  <match src="type_name [7223,7230]" dest="type_name [7223,7230]"/>
  <match src="call_argument [26903,26911]" dest="call_argument [26903,26911]"/>
  <match src="): ) [13037,13038]" dest="): ) [13037,13038]"/>
  <match src="): ) [16250,16251]" dest="): ) [16250,16251]"/>
  <match src="block_statement [31843,31876]" dest="block_statement [31843,31876]"/>
  <match src="call_argument [17109,17116]" dest="call_argument [17109,17116]"/>
  <match src="state_variable_declaration [44009,44066]" dest="state_variable_declaration [44011,44068]"/>
  <match src="contract_body [312,1058]" dest="contract_body [312,1058]"/>
  <match src="user_defined_type [98732,98746]" dest="user_defined_type [98938,98952]"/>
  <match src="identifier: b [6843,6844]" dest="identifier: b [6843,6844]"/>
  <match src="&lt;: &lt; [88791,88792]" dest="&lt;: &lt; [89639,89640]"/>
  <match src="identifier: _fromIndex [92938,92948]" dest="identifier: _fromIndex [92586,92596]"/>
  <match src="emit: emit [84456,84460]" dest="emit: emit [84991,84995]"/>
  <match src="identifier: sub [73339,73342]" dest="identifier: sub [73104,73107]"/>
  <match src="event_paramater [38554,38577]" dest="event_paramater [38554,38577]"/>
  <match src="user_defined_type [79035,79043]" dest="user_defined_type [78824,78832]"/>
  <match src="identifier: produceBlocksPerDay [65273,65292]" dest="identifier: produceBlocksPerDay [65283,65302]"/>
  <match src=".: . [89890,89891]" dest=".: . [91137,91138]"/>
  <match src="block_statement [103922,104206]" dest="block_statement [103846,104130]"/>
  <match src="call_argument [16813,16853]" dest="call_argument [16813,16853]"/>
  <match src="binary_expression [32034,32041]" dest="binary_expression [32034,32041]"/>
  <match src="uint256: uint256 [93043,93050]" dest="uint256: uint256 [92691,92698]"/>
  <match src="identifier: abi [23546,23549]" dest="identifier: abi [23546,23549]"/>
  <match src="update_expression [74206,74209]" dest="update_expression [73937,73940]"/>
  <match src=",: , [16304,16305]" dest=",: , [16304,16305]"/>
  <match src="identifier: r [29753,29754]" dest="identifier: r [29753,29754]"/>
  <match src="expression_statement [73641,73657]" dest="expression_statement [73406,73422]"/>
  <match src="[: [ [99328,99329]" dest="[: [ [99484,99485]"/>
  <match src="state_mutability [38825,38829]" dest="state_mutability [38825,38829]"/>
  <match src="storage: storage [89059,89066]" dest="storage: storage [89907,89914]"/>
  <match src="(: ( [106987,106988]" dest="(: ( [106911,106912]"/>
  <match src=",: , [6833,6834]" dest=",: , [6833,6834]"/>
  <match src="&gt;: &gt; [19468,19469]" dest="&gt;: &gt; [19468,19469]"/>
  <match src="call_argument [87357,87367]" dest="call_argument [88518,88528]"/>
  <match src="member_expression [98969,99008]" dest="member_expression [99154,99193]"/>
  <match src="identifier: implementation_ [942,957]" dest="identifier: implementation_ [942,957]"/>
  <match src="identifier: _writeCheckpoint [61656,61672]" dest="identifier: _writeCheckpoint [61658,61674]"/>
  <match src="identifier: calculateDividend [83487,83504]" dest="identifier: dividendBonus [84356,84369]"/>
  <match src="string_literal [79901,79925]" dest="string_literal [80486,80510]"/>
  <match src="block_statement [98175,98364]" dest="block_statement [96940,97129]"/>
  <match src="user_defined_type [100317,100325]" dest="user_defined_type [71880,71888]"/>
  <match src="variable_declaration_statement [102488,102529]" dest="variable_declaration_statement [102412,102453]"/>
  <match src="public: public [53349,53355]" dest="public: public [53351,53357]"/>
  <match src="visibility [14070,14078]" dest="visibility [14070,14078]"/>
  <match src="primitive_type [38998,39005]" dest="primitive_type [38998,39005]"/>
  <match src="type_name [64641,64668]" dest="type_name [64645,64672]"/>
  <match src=".: . [38317,38318]" dest=".: . [38317,38318]"/>
  <match src="if: if [76999,77001]" dest="if: if [76515,76517]"/>
  <match src="call_argument [89540,89544]" dest="call_argument [90782,90786]"/>
  <match src="call_expression [16270,16357]" dest="call_expression [16270,16357]"/>
  <match src="): ) [10098,10099]" dest="): ) [10098,10099]"/>
  <match src="number_literal: 64 [31578,31580]" dest="number_literal: 64 [31578,31580]"/>
  <match src="parameter [8147,8154]" dest="parameter [8147,8154]"/>
  <match src="indexed: indexed [4374,4381]" dest="indexed: indexed [4374,4381]"/>
  <match src="member_expression [62253,62265]" dest="member_expression [62255,62267]"/>
  <match src="=: = [87484,87485]" dest="=: = [88645,88646]"/>
  <match src="array_access [85801,85832]" dest="array_access [87101,87132]"/>
  <match src="): ) [100842,100843]" dest="): ) [100828,100829]"/>
  <match src="identifier: isCalculateInvitation [83024,83045]" dest="identifier: isCalculateInvitation [83803,83824]"/>
  <match src="&quot;: &quot; [16813,16814]" dest="&quot;: &quot; [16813,16814]"/>
  <match src="type_name [103118,103125]" dest="type_name [103042,103049]"/>
  <match src="expression_statement [37327,37392]" dest="expression_statement [37327,37392]"/>
  <match src="uint256: uint256 [100987,100994]" dest="uint256: uint256 [101002,101009]"/>
  <match src="): ) [28052,28053]" dest="): ) [28052,28053]"/>
  <match src="memory: memory [1409,1415]" dest="memory: memory [1409,1415]"/>
  <match src="uint256: uint256 [66494,66501]" dest="uint256: uint256 [66747,66754]"/>
  <match src="): ) [72357,72358]" dest="): ) [72112,72113]"/>
  <match src="): ) [66649,66650]" dest="): ) [66902,66903]"/>
  <match src="identifier: votes [60980,60985]" dest="identifier: votes [60982,60987]"/>
  <match src="(: ( [103703,103704]" dest="(: ( [103627,103628]"/>
  <match src="tuple_expression [89199,89205]" dest="tuple_expression [90124,90130]"/>
  <match src="primitive_type [59967,59974]" dest="primitive_type [59969,59976]"/>
  <match src="primitive_type [55618,55625]" dest="primitive_type [55620,55627]"/>
  <match src="solidity_version_comparison_operator [11950,11953]" dest="solidity_version_comparison_operator [11950,11953]"/>
  <match src="*: * [27838,27839]" dest="*: * [27838,27839]"/>
  <match src="address: address [40820,40827]" dest="address: address [40820,40827]"/>
  <match src="(: ( [54098,54099]" dest="(: ( [54100,54101]"/>
  <match src="block_statement [83836,83909]" dest="block_statement [85561,85627]"/>
  <match src="): ) [6882,6883]" dest="): ) [6882,6883]"/>
  <match src="): ) [69862,69863]" dest="): ) [69573,69574]"/>
  <match src="]: ] [55124,55125]" dest="]: ] [55126,55127]"/>
  <match src="identifier: rankPoolIndex [87536,87549]" dest="identifier: rankPoolIndex [88697,88710]"/>
  <match src="assignment_expression [101502,101557]" dest="assignment_expression [101237,101294]"/>
  <match src="identifier: token [22917,22922]" dest="identifier: token [22917,22922]"/>
  <match src="member_expression [46501,46527]" dest="member_expression [46743,46769]"/>
  <match src="comment: // lock amount [63699,63713]" dest="comment: // lock amount [63701,63715]"/>
  <match src="identifier: targetPool [85952,85962]" dest="identifier: targetPool [87251,87261]"/>
  <match src="{: { [135,136]" dest="{: { [135,136]"/>
  <match src="view: view [12697,12701]" dest="view: view [12697,12701]"/>
  <match src=",: , [68503,68504]" dest=",: , [68445,68446]"/>
  <match src="primitive_type [24450,24455]" dest="primitive_type [24450,24455]"/>
  <match src="call_argument [20941,20945]" dest="call_argument [20941,20945]"/>
  <match src="function_body [22245,22490]" dest="function_body [22245,22490]"/>
  <match src="string_literal [82670,82693]" dest="string_literal [83508,83531]"/>
  <match src="parenthesized_expression [35650,35671]" dest="parenthesized_expression [35650,35671]"/>
  <match src="identifier: _mint [59593,59598]" dest="identifier: _mint [59595,59600]"/>
  <match src="(: ( [57170,57171]" dest="(: ( [57172,57173]"/>
  <match src="{: { [46278,46279]" dest="{: { [46280,46281]"/>
  <match src="assignment_expression [79572,79638]" dest="assignment_expression [79665,79721]"/>
  <match src="call_argument [95743,95752]" dest="call_argument [94891,94900]"/>
  <match src="number_literal: 0 [21664,21665]" dest="number_literal: 0 [21664,21665]"/>
  <match src="): ) [33689,33690]" dest="): ) [33689,33690]"/>
  <match src="uint: uint [38579,38583]" dest="uint: uint [38579,38583]"/>
  <match src="member_expression [46729,46741]" dest="member_expression [46971,46983]"/>
  <match src="identifier: target [18374,18380]" dest="identifier: target [18374,18380]"/>
  <match src=".: . [47139,47140]" dest=".: . [46526,46527]"/>
  <match src=",: , [20949,20950]" dest=",: , [20949,20950]"/>
  <match src="*: * [27886,27887]" dest="*: * [27886,27887]"/>
  <match src="call_expression [57326,57394]" dest="call_expression [57328,57396]"/>
  <match src="*=: *= [27829,27831]" dest="*=: *= [27829,27831]"/>
  <match src=",: , [20945,20946]" dest=",: , [20945,20946]"/>
  <match src="type_name [73742,73749]" dest="type_name [73507,73514]"/>
  <match src="[: [ [62595,62596]" dest="[: [ [62597,62598]"/>
  <match src="visibility [49188,49195]" dest="visibility [49190,49197]"/>
  <match src="expression_statement [47170,47195]" dest="expression_statement [47172,47197]"/>
  <match src="identifier: senderRelationshipInfo [99479,99501]" dest="identifier: senderRelationshipInfo [97569,97591]"/>
  <match src="return_type_definition [36811,36837]" dest="return_type_definition [36811,36837]"/>
  <match src="]: ] [86252,86253]" dest="]: ] [87540,87541]"/>
  <match src="internal: internal [10100,10108]" dest="internal: internal [10100,10108]"/>
  <match src="identifier: _amount [59604,59611]" dest="identifier: _amount [59606,59613]"/>
  <match src="identifier: block [82656,82661]" dest="identifier: block [83494,83499]"/>
  <match src="identifier: IUniswapV2Pair [106235,106249]" dest="identifier: IUniswapV2Pair [106159,106173]"/>
  <match src="identifier: b [11819,11820]" dest="identifier: b [11819,11820]"/>
  <match src="virtual: virtual [50733,50740]" dest="virtual: virtual [50735,50742]"/>
  <match src="identifier: _startBlock [103473,103484]" dest="identifier: _startBlock [103397,103408]"/>
  <match src=",: , [22922,22923]" dest=",: , [22922,22923]"/>
  <match src="(: ( [108444,108445]" dest="(: ( [108368,108369]"/>
  <match src="identifier: price1CumulativeLast [105064,105084]" dest="identifier: price1CumulativeLast [104988,105008]"/>
  <match src="expression_statement [94642,94680]" dest="expression_statement [94288,94326]"/>
  <match src=",: , [105437,105438]" dest=",: , [105361,105362]"/>
  <match src="variable_declaration_statement [33944,33958]" dest="variable_declaration_statement [33944,33958]"/>
  <match src="type_name [85360,85368]" dest="type_name [86660,86668]"/>
  <match src="number_literal: 128 [29076,29079]" dest="number_literal: 128 [29076,29079]"/>
  <match src="primitive_type [8198,8205]" dest="primitive_type [8198,8205]"/>
  <match src="identifier: _pid [90583,90587]" dest="identifier: _pid [91608,91612]"/>
  <match src="type_name [38929,38936]" dest="type_name [38929,38936]"/>
  <match src="identifier: muluq [34560,34565]" dest="identifier: muluq [34560,34565]"/>
  <match src="identifier: user [80389,80393]" dest="identifier: user [81009,81013]"/>
  <match src="type_name [38612,38619]" dest="type_name [38612,38619]"/>
  <match src="assignment_expression [84875,84951]" dest="assignment_expression [86006,86082]"/>
  <match src="identifier: account [56679,56686]" dest="identifier: account [56681,56688]"/>
  <match src="member_expression [78766,78789]" dest="member_expression [78346,78369]"/>
  <match src="struct_member [32478,32489]" dest="struct_member [32478,32489]"/>
  <match src="parameter [34204,34225]" dest="parameter [34204,34225]"/>
  <match src="': ' [36365,36366]" dest="': ' [36365,36366]"/>
  <match src="[: [ [73408,73409]" dest="[: [ [73173,73174]"/>
  <match src="mapping: mapping [49031,49038]" dest="mapping: mapping [49033,49040]"/>
  <match src="primitive_type [42400,42404]" dest="primitive_type [42400,42404]"/>
  <match src="(: ( [101539,101540]" dest="(: ( [101274,101275]"/>
  <match src="assembly: assembly [19652,19660]" dest="assembly: assembly [19652,19660]"/>
  <match src="[: [ [95693,95694]" dest="[: [ [94841,94842]"/>
  <match src="primitive_type [66712,66719]" dest="primitive_type [66965,66972]"/>
  <match src="{: { [82245,82246]" dest="{: { [83083,83084]"/>
  <match src="}: } [32159,32160]" dest="}: } [32159,32160]"/>
  <match src="member_expression [81899,81909]" dest="member_expression [82731,82741]"/>
  <match src="if_statement [36926,36977]" dest="if_statement [36926,36977]"/>
  <match src="uint8: uint8 [50750,50755]" dest="uint8: uint8 [50752,50757]"/>
  <match src="&quot;: &quot; [87383,87384]" dest="&quot;: &quot; [88544,88545]"/>
  <match src="identifier: _lockTime [90879,90888]" dest="identifier: _lockTime [91904,91913]"/>
  <match src="type_cast_expression [82715,82728]" dest="type_cast_expression [83553,83566]"/>
  <match src="uint128: uint128 [31389,31396]" dest="uint128: uint128 [31389,31396]"/>
  <match src="pragma: pragma [23707,23713]" dest="pragma: pragma [23707,23713]"/>
  <match src="uint144: uint144 [33709,33716]" dest="uint144: uint144 [33709,33716]"/>
  <match src="expression_statement [29660,29681]" dest="expression_statement [29660,29681]"/>
  <match src="type_name [5275,5282]" dest="type_name [5275,5282]"/>
  <match src="identifier: _poolIndexInRank [86341,86357]" dest="identifier: _poolIndexInRank [87629,87645]"/>
  <match src="parameter [40082,40086]" dest="parameter [40082,40086]"/>
  <match src="(: ( [55688,55689]" dest="(: ( [55690,55691]"/>
  <match src="uint256: uint256 [101955,101962]" dest="uint256: uint256 [99859,99866]"/>
  <match src="identifier: returndata [18116,18126]" dest="identifier: returndata [18116,18126]"/>
  <match src="number_literal: 2 [32103,32104]" dest="number_literal: 2 [32103,32104]"/>
  <match src="(: ( [108355,108356]" dest="(: ( [108279,108280]"/>
  <match src="returns: returns [50909,50916]" dest="returns: returns [50911,50918]"/>
  <match src="type_name [50750,50755]" dest="type_name [50752,50757]"/>
  <match src="identifier: div [108063,108066]" dest="identifier: div [107987,107990]"/>
  <match src="identifier: add [47030,47033]" dest="identifier: add [46417,46420]"/>
  <match src=".: . [36963,36964]" dest=".: . [36963,36964]"/>
  <match src=",: , [98438,98439]" dest=",: , [97203,97204]"/>
  <match src="expression_statement [104101,104138]" dest="expression_statement [104025,104062]"/>
  <match src="{: { [5100,5101]" dest="{: { [5100,5101]"/>
  <match src="member_expression [81136,81155]" dest="member_expression [81823,81842]"/>
  <match src="variable_declaration [69751,69765]" dest="variable_declaration [69462,69476]"/>
  <match src="}: } [19905,19906]" dest="}: } [19905,19906]"/>
  <match src="): ) [58782,58783]" dest="): ) [58784,58785]"/>
  <match src="assignment_expression [88641,88676]" dest="assignment_expression [89489,89524]"/>
  <match src="): ) [54073,54074]" dest="): ) [54075,54076]"/>
  <match src="=&gt;: =&gt; [43965,43967]" dest="=&gt;: =&gt; [43965,43967]"/>
  <match src="identifier: symbol [49977,49983]" dest="identifier: symbol [49979,49985]"/>
  <match src="indexed: indexed [66720,66727]" dest="indexed: indexed [66973,66980]"/>
  <match src="call_argument [38281,38371]" dest="call_argument [38281,38371]"/>
  <match src="expression_statement [95717,95754]" dest="expression_statement [94865,94902]"/>
  <match src="): ) [86210,86211]" dest="): ) [87498,87499]"/>
  <match src="user_defined_type [58785,58792]" dest="user_defined_type [58787,58794]"/>
  <match src="identifier: _shardPoolWeight [75477,75493]" dest="identifier: _shardPoolWeight [74993,75009]"/>
  <match src="assignment_expression [86316,86364]" dest="assignment_expression [87604,87652]"/>
  <match src="': ' [36913,36914]" dest="': ' [36913,36914]"/>
  <match src="function: function [71776,71784]" dest="function: function [71487,71495]"/>
  <match src=".: . [102576,102577]" dest=".: . [102500,102501]"/>
  <match src="primitive_type [17841,17846]" dest="primitive_type [17841,17846]"/>
  <match src="==: == [70360,70362]" dest="==: == [70071,70073]"/>
  <match src="identifier: tokenToEthSwap [63961,63975]" dest="identifier: tokenToEthSwap [63963,63977]"/>
  <match src="identifier: isWithdrawn [94668,94679]" dest="identifier: isWithdrawn [94314,94325]"/>
  <match src="identifier: _x [36040,36042]" dest="identifier: _x [36040,36042]"/>
  <match src="type_name [43948,43973]" dest="type_name [43948,43973]"/>
  <match src="visibility [65188,65194]" dest="visibility [65198,65204]"/>
  <match src="override_specifier [86549,86557]" dest="override_specifier [87837,87845]"/>
  <match src="type_name [34756,34763]" dest="type_name [34756,34763]"/>
  <match src="): ) [6206,6207]" dest="): ) [6206,6207]"/>
  <match src="identifier: mm [27299,27301]" dest="identifier: mm [27299,27301]"/>
  <match src="identifier: i [88883,88884]" dest="identifier: i [89731,89732]"/>
  <match src="identifier: uq112x112 [33094,33103]" dest="identifier: uq112x112 [33094,33103]"/>
  <match src="type_name [46202,46209]" dest="type_name [46204,46211]"/>
  <match src="): ) [94465,94466]" dest="): ) [94111,94112]"/>
  <match src="identifier: amountFeeRateNumerator [67888,67910]" dest="identifier: amountFeeRateNumerator [68140,68162]"/>
  <match src="}: } [88904,88905]" dest="}: } [89752,89753]"/>
  <match src="identifier: _originWeight [99738,99751]" dest="identifier: _originWeight [97930,97943]"/>
  <match src="state_variable_declaration [66151,66199]" dest="state_variable_declaration [66169,66219]"/>
  <match src="if: if [83821,83823]" dest="if: if [85545,85547]"/>
  <match src="(: ( [40819,40820]" dest="(: ( [40819,40820]"/>
  <match src="expression_statement [84023,84045]" dest="expression_statement [84552,84574]"/>
  <match src="(: ( [20678,20679]" dest="(: ( [20678,20679]"/>
  <match src="member_expression [99810,99835]" dest="member_expression [98002,98027]"/>
  <match src="uint256: uint256 [5315,5322]" dest="uint256: uint256 [5315,5322]"/>
  <match src="variable_declaration [80363,80386]" dest="variable_declaration [80983,81006]"/>
  <match src="member_expression [102581,102599]" dest="member_expression [102505,102523]"/>
  <match src="parameter [6503,6512]" dest="parameter [6503,6512]"/>
  <match src="number_literal: 2152 [68499,68503]" dest="number_literal: 2152 [68441,68445]"/>
  <match src="primitive_type [33205,33212]" dest="primitive_type [33205,33212]"/>
  <match src="type_name [2034,2041]" dest="type_name [2034,2041]"/>
  <match src="pure: pure [7716,7720]" dest="pure: pure [7716,7720]"/>
  <match src="assignment_expression [62414,62466]" dest="assignment_expression [62416,62468]"/>
  <match src="internal: internal [16730,16738]" dest="internal: internal [16730,16738]"/>
  <match src="unary_expression [27325,27327]" dest="unary_expression [27325,27327]"/>
  <match src="identifier: length [73037,73043]" dest="identifier: length [72719,72725]"/>
  <match src="): ) [18891,18892]" dest="): ) [18891,18892]"/>
  <match src="uint256: uint256 [66303,66310]" dest="uint256: uint256 [66323,66330]"/>
  <match src="(: ( [96160,96161]" dest="(: ( [95470,95471]"/>
  <match src="call_expression [81409,81445]" dest="call_expression [82098,82134]"/>
  <match src="type_name [103728,103735]" dest="type_name [103652,103659]"/>
  <match src="&gt;: &gt; [84856,84857]" dest="&gt;: &gt; [85987,85988]"/>
  <match src="memory: memory [15613,15619]" dest="memory: memory [15613,15619]"/>
  <match src="expression_statement [84083,84150]" dest="expression_statement [84612,84679]"/>
  <match src="visibility [43608,43614]" dest="visibility [43608,43614]"/>
  <match src="=: = [103949,103950]" dest="=: = [103873,103874]"/>
  <match src="): ) [18527,18528]" dest="): ) [18527,18528]"/>
  <match src="type_name [73824,73831]" dest="type_name [71808,71815]"/>
  <match src="identifier: y [28067,28068]" dest="identifier: y [28067,28068]"/>
  <match src="call_expression [45266,45356]" dest="call_expression [45268,45358]"/>
  <match src="uint32: uint32 [40345,40351]" dest="uint32: uint32 [40345,40351]"/>
  <match src="(: ( [78627,78628]" dest="(: ( [78207,78208]"/>
  <match src="call_argument [83089,83121]" dest="call_argument [83868,83900]"/>
  <match src="uint256: uint256 [65081,65088]" dest="uint256: uint256 [65091,65098]"/>
  <match src="type_name [64554,64563]" dest="type_name [64556,64565]"/>
  <match src="function_body [41706,42609]" dest="function_body [41706,42609]"/>
  <match src="]: ] [92732,92733]" dest="]: ] [92380,92381]"/>
  <match src="return: return [37184,37190]" dest="return: return [37184,37190]"/>
  <match src=",: , [39662,39663]" dest=",: , [39662,39663]"/>
  <match src=".: . [85023,85024]" dest=".: . [86323,86324]"/>
  <match src="call_argument [100040,100058]" dest="call_argument [98745,98763]"/>
  <match src="member_expression [104117,104134]" dest="member_expression [104041,104058]"/>
  <match src="function: function [45126,45134]" dest="function: function [45128,45136]"/>
  <match src="variable_declaration_statement [103402,103426]" dest="variable_declaration_statement [103326,103350]"/>
  <match src="identifier: price1Cumulative [41665,41681]" dest="identifier: price1Cumulative [41665,41681]"/>
  <match src="': ' [37668,37669]" dest="': ' [37668,37669]"/>
  <match src="expression_statement [89372,89419]" dest="expression_statement [77689,77769]"/>
  <match src="identifier: termStartIndex [104152,104166]" dest="identifier: termStartIndex [104076,104090]"/>
  <match src="return_statement [51524,51536]" dest="return_statement [51526,51538]"/>
  <match src="primitive_type [82437,82444]" dest="primitive_type [83275,83282]"/>
  <match src=",: , [6319,6320]" dest=",: , [6319,6320]"/>
  <match src="identifier: invitee [86914,86921]" dest="identifier: invitee [88071,88078]"/>
  <match src="function_body [15255,15339]" dest="function_body [15255,15339]"/>
  <match src="call_struct_argument [71347,71362]" dest="call_struct_argument [71058,71073]"/>
  <match src="type_name [95633,95640]" dest="type_name [94781,94788]"/>
  <match src="): ) [103921,103922]" dest="): ) [103845,103846]"/>
  <match src="identifier: div [98134,98137]" dest="identifier: div [96899,96902]"/>
  <match src="type_name [104465,104472]" dest="type_name [104389,104396]"/>
  <match src="comment: // * 2^0 [34955,34963]" dest="comment: // * 2^0 [34955,34963]"/>
  <match src="expression_statement [56373,56441]" dest="expression_statement [56375,56443]"/>
  <match src=".: . [87764,87765]" dest=".: . [88925,88926]"/>
  <match src="(: ( [44802,44803]" dest="(: ( [44804,44805]"/>
  <match src="returns: returns [37973,37980]" dest="returns: returns [37973,37980]"/>
  <match src="augmented_assignment_expression [31897,31904]" dest="augmented_assignment_expression [31897,31904]"/>
  <match src="identifier: sub [46567,46570]" dest="identifier: sub [46809,46812]"/>
  <match src="number_literal: 2 [27732,27733]" dest="number_literal: 2 [27732,27733]"/>
  <match src="identifier: poolCountInRank [76320,76335]" dest="identifier: poolCountInRank [75836,75851]"/>
  <match src="identifier: require [8865,8872]" dest="identifier: require [8865,8872]"/>
  <match src="member_expression [80482,80495]" dest="member_expression [81167,81180]"/>
  <match src="type_name [90722,90729]" dest="type_name [91747,91754]"/>
  <match src="): ) [64339,64340]" dest="): ) [64341,64342]"/>
  <match src="call_argument [81156,81302]" dest="call_argument [81843,81991]"/>
  <match src="call_argument [59599,59602]" dest="call_argument [59601,59604]"/>
  <match src="/: / [38366,38367]" dest="/: / [38366,38367]"/>
  <match src="false [109620,109625]" dest="false [109544,109549]"/>
  <match src="=: = [93452,93453]" dest="=: = [93100,93101]"/>
  <match src="identifier: _toBlock [104219,104227]" dest="identifier: _toBlock [104143,104151]"/>
  <match src="visibility [21302,21310]" dest="visibility [21302,21310]"/>
  <match src="expression_statement [81351,81377]" dest="expression_statement [82040,82066]"/>
  <match src="identifier: Replace [66663,66670]" dest="identifier: Replace [66916,66923]"/>
  <match src="user_defined_type [100859,100867]" dest="user_defined_type [100921,100929]"/>
  <match src="identifier: spender [22459,22466]" dest="identifier: spender [22459,22466]"/>
  <match src="identifier: from [61265,61269]" dest="identifier: from [61267,61271]"/>
  <match src="virtual: virtual [71704,71711]" dest="virtual: virtual [71415,71422]"/>
  <match src="parameter [75089,75115]" dest="parameter [73521,73550]"/>
  <match src="(: ( [77909,77910]" dest="(: ( [77144,77145]"/>
  <match src="identifier: length [71587,71593]" dest="identifier: length [71298,71304]"/>
  <match src="member_expression [100815,100841]" dest="member_expression [100801,100827]"/>
  <match src="&gt;: &gt; [80624,80625]" dest="&gt;: &gt; [81311,81312]"/>
  <match src="identifier: invitee [86800,86807]" dest="identifier: invitee [87955,87962]"/>
  <match src="): ) [71693,71694]" dest="): ) [71404,71405]"/>
  <match src="identifier: r [30971,30972]" dest="identifier: r [30971,30972]"/>
  <match src=",: , [5953,5954]" dest=",: , [5953,5954]"/>
  <match src="state_variable_declaration [49126,49147]" dest="state_variable_declaration [49128,49149]"/>
  <match src="=: = [8208,8209]" dest="=: = [8208,8209]"/>
  <match src="identifier: _msgSender [52742,52752]" dest="identifier: _msgSender [52744,52754]"/>
  <match src="identifier: FullMath [37267,37275]" dest="identifier: FullMath [37267,37275]"/>
  <match src="call_argument [37746,37780]" dest="call_argument [37746,37780]"/>
  <match src="internal: internal [57219,57227]" dest="internal: internal [57221,57229]"/>
  <match src="{: { [70366,70367]" dest="{: { [70077,70078]"/>
  <match src="[: [ [99566,99567]" dest="[: [ [97656,97657]"/>
  <match src="identifier: initialPriceCumulative [106632,106654]" dest="identifier: initialPriceCumulative [106556,106578]"/>
  <match src="uint256: uint256 [78204,78211]" dest="uint256: uint256 [77337,77344]"/>
  <match src="identifier: Q112 [37294,37298]" dest="identifier: Q112 [37294,37298]"/>
  <match src=",: , [62020,62021]" dest=",: , [62022,62023]"/>
  <match src="identifier: DOMAIN_SEPARATOR [39316,39332]" dest="identifier: DOMAIN_SEPARATOR [39316,39332]"/>
  <match src="identifier: d [27490,27491]" dest="identifier: d [27490,27491]"/>
  <match src="call_expression [77195,77317]" dest="call_expression [76635,76757]"/>
  <match src="{: { [88586,88587]" dest="{: { [89434,89435]"/>
  <match src="comment: // decimal of UQ*x112 (lower 112 bits) [32922,32960]" dest="comment: // decimal of UQ*x112 (lower 112 bits) [32922,32960]"/>
  <match src="state_mutability [60013,60017]" dest="state_mutability [60015,60019]"/>
  <match src="type_name [59026,59076]" dest="type_name [59028,59078]"/>
  <match src="false [70843,70848]" dest="false [70554,70559]"/>
  <match src="&amp;&amp;: &amp;&amp; [46336,46338]" dest="&amp;&amp;: &amp;&amp; [46578,46580]"/>
  <match src="expression_statement [87956,87973]" dest="expression_statement [89117,89134]"/>
  <match src="identifier: _pids [88618,88623]" dest="identifier: _pids [89466,89471]"/>
  <match src=".: . [79998,79999]" dest=".: . [80583,80584]"/>
  <match src="): ) [40789,40790]" dest="): ) [40789,40790]"/>
  <match src="external: external [40918,40926]" dest="external: external [40918,40926]"/>
  <match src=",: , [105497,105498]" dest=",: , [105421,105422]"/>
  <match src="): ) [41436,41437]" dest="): ) [41436,41437]"/>
  <match src="binary_expression [62345,62361]" dest="binary_expression [62347,62363]"/>
  <match src="{: { [44521,44522]" dest="{: { [44523,44524]"/>
  <match src="{: { [59772,59773]" dest="{: { [59774,59775]"/>
  <match src="(: ( [10122,10123]" dest="(: ( [10122,10123]"/>
  <match src="&quot;: &quot; [7360,7361]" dest="&quot;: &quot; [7360,7361]"/>
  <match src="address: address [40248,40255]" dest="address: address [40248,40255]"/>
  <match src="primitive_type [28032,28039]" dest="primitive_type [28032,28039]"/>
  <match src="identifier: x [29896,29897]" dest="identifier: x [29896,29897]"/>
  <match src="variable_declaration_statement [7288,7306]" dest="variable_declaration_statement [7288,7306]"/>
  <match src="call_argument [55896,55902]" dest="call_argument [55898,55904]"/>
  <match src="uint256: uint256 [102880,102887]" dest="uint256: uint256 [102804,102811]"/>
  <match src="identifier: kLast [40521,40526]" dest="identifier: kLast [40521,40526]"/>
  <match src="): ) [5372,5373]" dest="): ) [5372,5373]"/>
  <match src="string_literal [45330,45345]" dest="string_literal [45332,45347]"/>
  <match src="uint256: uint256 [43706,43713]" dest="uint256: uint256 [43706,43713]"/>
  <match src="member_expression [14098,14119]" dest="member_expression [14098,14119]"/>
  <match src="number_literal: 0 [84271,84272]" dest="number_literal: 0 [84800,84801]"/>
  <match src="identifier: oracleWeight [81987,81999]" dest="identifier: oracleWeight [82819,82831]"/>
  <match src="type_name [64286,64290]" dest="type_name [64288,64292]"/>
  <match src=",: , [55938,55939]" dest=",: , [55940,55941]"/>
  <match src="identifier: b [8243,8244]" dest="identifier: b [8243,8244]"/>
  <match src="pure: pure [40068,40072]" dest="pure: pure [40068,40072]"/>
  <match src="{: { [61332,61333]" dest="{: { [61334,61335]"/>
  <match src="): ) [45254,45255]" dest="): ) [45256,45257]"/>
  <match src="&quot;: &quot; [55693,55694]" dest="&quot;: &quot; [55695,55696]"/>
  <match src="type_name [39173,39177]" dest="type_name [39173,39177]"/>
  <match src="indexed: indexed [38620,38627]" dest="indexed: indexed [38620,38627]"/>
  <match src="/: / [36282,36283]" dest="/: / [36282,36283]"/>
  <match src="&gt;: &gt; [31512,31513]" dest="&gt;: &gt; [31512,31513]"/>
  <match src="comment: /**      * @dev Atomically increases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [52884,53279]" dest="comment: /**      * @dev Atomically increases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [52886,53281]"/>
  <match src="(: ( [31507,31508]" dest="(: ( [31507,31508]"/>
  <match src="identifier: massUpdatePools [75993,76008]" dest="identifier: massUpdatePools [75509,75524]"/>
  <match src="identifier: _pid [73692,73696]" dest="identifier: _pid [73457,73461]"/>
  <match src="==: == [33978,33980]" dest="==: == [33978,33980]"/>
  <match src="string [16813,16853]" dest="string [16813,16853]"/>
  <match src="identifier: _symbol [49638,49645]" dest="identifier: _symbol [49640,49647]"/>
  <match src=".: . [90593,90594]" dest=".: . [91618,91619]"/>
  <match src="identifier: DelegateInterface [1080,1097]" dest="identifier: DelegateInterface [1080,1097]"/>
  <match src="return_statement [33486,33524]" dest="return_statement [33486,33524]"/>
  <match src=".: . [38299,38300]" dest=".: . [38299,38300]"/>
  <match src="]: ] [60584,60585]" dest="]: ] [60586,60587]"/>
  <match src="(: ( [104897,104898]" dest="(: ( [104821,104822]"/>
  <match src="]: ] [95590,95591]" dest="]: ] [94738,94739]"/>
  <match src="uint8: uint8 [39581,39586]" dest="uint8: uint8 [39581,39586]"/>
  <match src="identifier: blockTimestampLast [97664,97682]" dest="identifier: blockTimestampLast [96429,96447]"/>
  <match src="string: string [49573,49579]" dest="string: string [49575,49581]"/>
  <match src="primitive_type [22924,22929]" dest="primitive_type [22924,22929]"/>
  <match src=".: . [76453,76454]" dest=".: . [75969,75970]"/>
  <match src="array_access [99127,99179]" dest="array_access [99291,99343]"/>
  <match src=":: : [29931,29932]" dest=":: : [29931,29932]"/>
  <match src="type_name [68893,68900]" dest="type_name [68604,68611]"/>
  <match src="internal: internal [5617,5625]" dest="internal: internal [5617,5625]"/>
  <match src="pure: pure [10949,10953]" dest="pure: pure [10949,10953]"/>
  <match src="type_name [92852,92861]" dest="type_name [92500,92509]"/>
  <match src="uint256: uint256 [98206,98213]" dest="uint256: uint256 [96971,96978]"/>
  <match src="call_expression [21759,21849]" dest="call_expression [21759,21849]"/>
  <match src="parameter [2349,2363]" dest="parameter [2349,2363]"/>
  <match src="view: view [24316,24320]" dest="view: view [24316,24320]"/>
  <match src="&quot;: &quot; [75684,75685]" dest="&quot;: &quot; [75200,75201]"/>
  <match src="primitive_type [92548,92555]" dest="primitive_type [92196,92203]"/>
  <match src="): ) [39779,39780]" dest="): ) [39779,39780]"/>
  <match src="return: return [36382,36388]" dest="return: return [36382,36388]"/>
  <match src="type_name [95768,95772]" dest="type_name [94916,94920]"/>
  <match src="binary_expression [10151,10157]" dest="binary_expression [10151,10157]"/>
  <match src="call_expression [107342,107423]" dest="call_expression [107266,107347]"/>
  <match src="address: address [92852,92859]" dest="address: address [92500,92507]"/>
  <match src="++: ++ [93360,93362]" dest="++: ++ [93008,93010]"/>
  <match src="number_literal: 1e13 [65496,65500]" dest="number_literal: 1e13 [65506,65510]"/>
  <match src=".: . [107992,107993]" dest=".: . [107916,107917]"/>
  <match src="function_body [67229,68082]" dest="function_body [67476,68575]"/>
  <match src="boolean_literal [99693,99698]" dest="boolean_literal [97783,97788]"/>
  <match src="identifier: require [45266,45273]" dest="identifier: require [45268,45275]"/>
  <match src="identifier: _oracleWeight [96990,97003]" dest="identifier: _oracleWeight [95755,95768]"/>
  <match src="): ) [76340,76341]" dest="): ) [75856,75857]"/>
  <match src="function_body [25951,26050]" dest="function_body [25951,26050]"/>
  <match src="call_expression [81351,81376]" dest="call_expression [82040,82065]"/>
  <match src="identifier: rankPoolIndex [77259,77272]" dest="identifier: rankPoolIndex [76699,76712]"/>
  <match src="(: ( [37334,37335]" dest="(: ( [37334,37335]"/>
  <match src="identifier: require [37327,37334]" dest="identifier: require [37327,37334]"/>
  <match src="(: ( [84120,84121]" dest="(: ( [84649,84650]"/>
  <match src="call_expression [76257,76306]" dest="call_expression [75773,75822]"/>
  <match src="identifier: _burn [59677,59682]" dest="identifier: _burn [59679,59684]"/>
  <match src="&amp;&amp;: &amp;&amp; [82194,82196]" dest="&amp;&amp;: &amp;&amp; [83032,83034]"/>
  <match src=".: . [74975,74976]" dest=".: . [74847,74848]"/>
  <match src="identifier: poolIndex [73260,73269]" dest="identifier: poolIndex [73025,73034]"/>
  <match src="}: } [23644,23645]" dest="}: } [23644,23645]"/>
  <match src="parameter [52593,52610]" dest="parameter [52595,52612]"/>
  <match src="=: = [94611,94612]" dest="=: = [94257,94258]"/>
  <match src="number_literal: 2337 [68765,68769]" dest="number_literal: 2337 [68542,68546]"/>
  <match src="struct_member [63268,63289]" dest="struct_member [63270,63291]"/>
  <match src=",: , [52025,52026]" dest=",: , [52027,52028]"/>
  <match src="type_name [46134,46141]" dest="type_name [46136,46143]"/>
  <match src="): ) [26509,26510]" dest="): ) [26509,26510]"/>
  <match src="binary_expression [41411,41436]" dest="binary_expression [41411,41436]"/>
  <match src="member_expression [104065,104083]" dest="member_expression [103989,104007]"/>
  <match src="identifier: getInvitation [94236,94249]" dest="identifier: getInvitation [93882,93895]"/>
  <match src="call_argument [62865,62867]" dest="call_argument [62867,62869]"/>
  <match src="identifier: _isWithdrawn [94642,94654]" dest="identifier: _isWithdrawn [94288,94300]"/>
  <match src="call_expression [75707,75724]" dest="call_expression [75223,75240]"/>
  <match src="identifier: tokenToEthInfo [70943,70957]" dest="identifier: tokenToEthInfo [70654,70668]"/>
  <match src="uint256: uint256 [77811,77818]" dest="uint256: uint256 [78932,78939]"/>
  <match src="=: = [70520,70521]" dest="=: = [70231,70232]"/>
  <match src="string_literal [52802,52844]" dest="string_literal [52804,52846]"/>
  <match src="call_argument [37423,37438]" dest="call_argument [37423,37438]"/>
  <match src="returns: returns [19268,19275]" dest="returns: returns [19268,19275]"/>
  <match src="identifier: _pid [89474,89478]" dest="identifier: _pid [90716,90720]"/>
  <match src="for: for [74164,74167]" dest="for: for [73895,73898]"/>
  <match src="identifier: startBlock [67415,67425]" dest="identifier: startBlock [67662,67672]"/>
  <match src="visibility [17818,17826]" dest="visibility [17818,17826]"/>
  <match src="number_literal: 0 [83834,83835]" dest="number_literal: 0 [84258,84259]"/>
  <match src="comment: // contract sender fee rate [43754,43781]" dest="comment: // contract sender fee rate [43754,43781]"/>
  <match src="if_statement [85304,85350]" dest="if_statement [86604,86650]"/>
  <match src="): ) [56697,56698]" dest="): ) [56699,56700]"/>
  <match src="primitive_type [60686,60693]" dest="primitive_type [60688,60695]"/>
  <match src=",: , [5414,5415]" dest=",: , [5414,5415]"/>
  <match src="): ) [40702,40703]" dest="): ) [40702,40703]"/>
  <match src="identifier: i [74283,74284]" dest="identifier: i [73996,73997]"/>
  <match src="(: ( [67247,67248]" dest="(: ( [67494,67495]"/>
  <match src="function_definition [77333,78123]" dest="function_definition [76773,77256]"/>
  <match src="type_name [103503,103510]" dest="type_name [103427,103434]"/>
  <match src="identifier: sync [40856,40860]" dest="identifier: sync [40856,40860]"/>
  <match src="identifier: otherPoolDividendWeight [89973,89996]" dest="identifier: div [91282,91285]"/>
  <match src="function_body [34654,35839]" dest="function_body [34654,35839]"/>
  <match src="(: ( [71802,71803]" dest="(: ( [71513,71514]"/>
  <match src="): ) [98083,98084]" dest="): ) [96848,96849]"/>
  <match src="identifier: sender [83559,83565]" dest="identifier: sender [84424,84430]"/>
  <match src="call_expression [83089,83121]" dest="call_expression [83868,83900]"/>
  <match src="ternary_expression [105036,105120]" dest="ternary_expression [104960,105044]"/>
  <match src="): ) [53471,53472]" dest="): ) [53473,53474]"/>
  <match src="variable_declaration [67719,67756]" dest="variable_declaration [67933,67970]"/>
  <match src="function_body [41386,41445]" dest="function_body [41386,41445]"/>
  <match src="): ) [30969,30970]" dest="): ) [30969,30970]"/>
  <match src="call_expression [90948,90992]" dest="call_expression [91973,92017]"/>
  <match src="binary_expression [33986,34007]" dest="binary_expression [33986,34007]"/>
  <match src="(: ( [38687,38688]" dest="(: ( [38687,38688]"/>
  <match src="primitive_type [25373,25380]" dest="primitive_type [25373,25380]"/>
  <match src="number_literal: 1 [29834,29835]" dest="number_literal: 1 [29834,29835]"/>
  <match src="if: if [36989,36991]" dest="if: if [36989,36991]"/>
  <match src=",: , [68769,68770]" dest=",: , [68546,68547]"/>
  <match src="uint256: uint256 [65457,65464]" dest="uint256: uint256 [65467,65474]"/>
  <match src="]: ] [89143,89144]" dest="]: ] [89991,89992]"/>
  <match src="identifier: add [100659,100662]" dest="identifier: add [100235,100238]"/>
  <match src="visibility [101830,101838]" dest="visibility [66197,66205]"/>
  <match src="constructor: constructor [49539,49550]" dest="constructor: constructor [49541,49552]"/>
  <match src="]: ] [65665,65666]" dest="]: ] [65675,65676]"/>
  <match src="identifier: lastDividendHeight [86380,86398]" dest="identifier: lastDividendHeight [87668,87686]"/>
  <match src="string_literal [35754,35787]" dest="string_literal [35754,35787]"/>
  <match src="identifier: newOriginWeight [80707,80722]" dest="identifier: newOriginWeight [81394,81409]"/>
  <match src="bool: bool [14255,14259]" dest="bool: bool [14255,14259]"/>
  <match src="identifier: amount [55130,55136]" dest="identifier: amount [55132,55138]"/>
  <match src="identifier: _amount [81040,81047]" dest="identifier: _amount [81727,81734]"/>
  <match src="[: [ [55882,55883]" dest="[: [ [55884,55885]"/>
  <match src="parameter [5309,5313]" dest="parameter [5309,5313]"/>
  <match src="assignment_expression [95664,95706]" dest="assignment_expression [94812,94854]"/>
  <match src=".: . [99668,99669]" dest=".: . [97758,97759]"/>
  <match src="number_literal: 2 [103704,103705]" dest="number_literal: 2 [103628,103629]"/>
  <match src="&gt;=: &gt;= [30804,30806]" dest="&gt;=: &gt;= [30804,30806]"/>
  <match src=",: , [105389,105390]" dest=",: , [105313,105314]"/>
  <match src="binary_expression [31610,31624]" dest="binary_expression [31610,31624]"/>
  <match src="(: ( [76528,76529]" dest="(: ( [76044,76045]"/>
  <match src="]: ] [73418,73419]" dest="]: ] [73183,73184]"/>
  <match src=",: , [66513,66514]" dest=",: , [66766,66767]"/>
  <match src="&quot;: &quot; [80078,80079]" dest="&quot;: &quot; [80663,80664]"/>
  <match src=".: . [84909,84910]" dest=".: . [86040,86041]"/>
  <match src=".: . [99104,99105]" dest=".: . [99272,99273]"/>
  <match src="identifier: lpTokenAmount [71232,71245]" dest="identifier: lpTokenAmount [70943,70956]"/>
  <match src="): ) [83274,83275]" dest="): ) [90452,90453]"/>
  <match src="(: ( [34203,34204]" dest="(: ( [34203,34204]"/>
  <match src="-: - [34332,34333]" dest="-: - [34332,34333]"/>
  <match src="}: } [70928,70929]" dest="}: } [70639,70640]"/>
  <match src="}: } [24390,24391]" dest="}: } [24390,24391]"/>
  <match src="identifier: fraction [106359,106367]" dest="identifier: fraction [106283,106291]"/>
  <match src="state_mutability [40486,40490]" dest="state_mutability [40486,40490]"/>
  <match src="identifier: _toBlock [78481,78489]" dest="identifier: _toBlock [78061,78069]"/>
  <match src="event_paramater [40004,40020]" dest="event_paramater [40004,40020]"/>
  <match src="identifier: InvitationInfo [86777,86791]" dest="identifier: InvitationInfo [87932,87946]"/>
  <match src="function_body [73764,75008]" dest="function_body [73560,74931]"/>
  <match src="identifier: shardMintWeight [65990,66005]" dest="identifier: shardMintWeight [66002,66017]"/>
  <match src="identifier: currentRankCount [73973,73989]" dest="identifier: currentRankCount [73703,73719]"/>
  <match src="!=: != [37662,37664]" dest="!=: != [37662,37664]"/>
  <match src="user_defined_type [89099,89107]" dest="user_defined_type [89947,89955]"/>
  <match src="library: library [41140,41147]" dest="library: library [41140,41147]"/>
  <match src="identifier: user [89159,89163]" dest="identifier: user [90084,90088]"/>
  <match src="primitive_type [38713,38719]" dest="primitive_type [38713,38719]"/>
  <match src="): ) [36944,36945]" dest="): ) [36944,36945]"/>
  <match src="(: ( [7684,7685]" dest="(: ( [7684,7685]"/>
  <match src="identifier: IUniswapV2Pair [106427,106441]" dest="identifier: IUniswapV2Pair [106351,106365]"/>
  <match src="assignment_expression [92967,93004]" dest="assignment_expression [92615,92652]"/>
  <match src="type_cast_expression [109659,109669]" dest="type_cast_expression [109583,109593]"/>
  <match src="identifier: lastPidInBlackList [73506,73524]" dest="identifier: lastPidInBlackList [73271,73289]"/>
  <match src="identifier: getUserInfo [95882,95893]" dest="identifier: getUserModifiedWeight [95139,95160]"/>
  <match src="type_name [59164,59191]" dest="type_name [59166,59193]"/>
  <match src="expression_statement [78873,78938]" dest="expression_statement [78391,78446]"/>
  <match src="binary_expression [27711,27716]" dest="binary_expression [27711,27716]"/>
  <match src="parameter [7223,7232]" dest="parameter [7223,7232]"/>
  <match src="&amp;&amp;: &amp;&amp; [82141,82143]" dest="&amp;&amp;: &amp;&amp; [82979,82981]"/>
  <match src=",: , [68199,68200]" dest=",: , [68334,68335]"/>
  <match src="identifier: errorMessage [18128,18140]" dest="identifier: errorMessage [18128,18140]"/>
  <match src="identifier: uq112x112 [38271,38280]" dest="identifier: uq112x112 [38271,38280]"/>
  <match src="identifier: poolInRank [74247,74257]" dest="identifier: poolInRank [74034,74044]"/>
  <match src="else: else [70865,70869]" dest="else: else [70576,70580]"/>
  <match src="interface_declaration [1774,4409]" dest="interface_declaration [1774,4409]"/>
  <match src="public: public [49774,49780]" dest="public: public [49776,49782]"/>
  <match src="string_literal [14131,14162]" dest="string_literal [14131,14162]"/>
  <match src="(: ( [10990,10991]" dest="(: ( [10990,10991]"/>
  <match src="identifier: fromNum [61679,61686]" dest="identifier: fromNum [61681,61688]"/>
  <match src="number_literal: 1 [104797,104798]" dest="number_literal: 1 [104721,104722]"/>
  <match src="identifier: _startBlock [103269,103280]" dest="identifier: _startBlock [103193,103204]"/>
  <match src="): ) [35751,35752]" dest="): ) [35751,35752]"/>
  <match src=",: , [6920,6921]" dest=",: , [6920,6921]"/>
  <match src="(: ( [37731,37732]" dest="(: ( [37731,37732]"/>
  <match src=",: , [22466,22467]" dest=",: , [22466,22467]"/>
  <match src="=: = [80526,80527]" dest="=: = [81211,81212]"/>
  <match src="binary_expression [27344,27349]" dest="binary_expression [27344,27349]"/>
  <match src="binary_expression [103269,103291]" dest="binary_expression [103193,103215]"/>
  <match src="call_struct_argument [72957,72966]" dest="call_struct_argument [72639,72648]"/>
  <match src="number_literal: 8 [29442,29443]" dest="number_literal: 8 [29442,29443]"/>
  <match src="comment: // produced blocks per month [65306,65334]" dest="comment: // produced blocks per month [65316,65344]"/>
  <match src="primitive_type [107281,107285]" dest="primitive_type [107205,107209]"/>
  <match src="state_variable_declaration [49089,49118]" dest="state_variable_declaration [49091,49120]"/>
  <match src="primitive_type [9420,9427]" dest="primitive_type [9420,9427]"/>
  <match src="return_statement [87425,87432]" dest="return_statement [88586,88593]"/>
  <match src="uint256: uint256 [92984,92991]" dest="uint256: uint256 [92632,92639]"/>
  <match src="type_name [51386,51393]" dest="type_name [51388,51395]"/>
  <match src="}: } [55963,55964]" dest="}: } [55965,55966]"/>
  <match src="visibility [87298,87306]" dest="visibility [88459,88467]"/>
  <match src="call_expression [36849,36915]" dest="call_expression [36849,36915]"/>
  <match src="visibility [91050,91058]" dest="visibility [92075,92083]"/>
  <match src="identifier: value [22029,22034]" dest="identifier: value [22029,22034]"/>
  <match src="struct_member [63316,63338]" dest="struct_member [63318,63340]"/>
  <match src="string: string [17790,17796]" dest="string: string [17790,17796]"/>
  <match src="type_cast_expression [76218,76231]" dest="type_cast_expression [75734,75747]"/>
  <match src="identifier: price1Cumulative [107794,107810]" dest="identifier: price1Cumulative [107718,107734]"/>
  <match src="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],      * but performing a static call.      *      * _Available since v3.3._      */ [17543,17721]" dest="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],      * but performing a static call.      *      * _Available since v3.3._      */ [17543,17721]"/>
  <match src="binary_expression [32134,32141]" dest="binary_expression [32134,32141]"/>
  <match src="identifier: add [47097,47100]" dest="identifier: add [46484,46487]"/>
  <match src="uint256: uint256 [87648,87655]" dest="uint256: uint256 [88809,88816]"/>
  <match src="member_expression [86375,86398]" dest="member_expression [87663,87686]"/>
  <match src="number_literal: 1842 [68309,68313]" dest="number_literal: 1842 [68360,68364]"/>
  <match src="identifier: y [27959,27960]" dest="identifier: y [27959,27960]"/>
  <match src="virtual: virtual [92605,92612]" dest="virtual: virtual [92253,92260]"/>
  <match src="boolean_literal [70843,70848]" dest="boolean_literal [70554,70559]"/>
  <match src="identifier: getModifiedRewardToken [79173,79195]" dest="identifier: getRewardToken [79336,79350]"/>
  <match src="primitive_type [62773,62780]" dest="primitive_type [62775,62782]"/>
  <match src="): ) [38370,38371]" dest="): ) [38370,38371]"/>
  <match src="identifier: poolInfo [80211,80219]" dest="identifier: poolInfo [80831,80839]"/>
  <match src="state_mutability [42822,42826]" dest="state_mutability [42822,42826]"/>
  <match src="identifier: getOracleWeight [86033,86048]" dest="identifier: calculateOracleWeight [87319,87340]"/>
  <match src="identifier: _allowances [52756,52767]" dest="identifier: _allowances [52758,52769]"/>
  <match src="[: [ [88882,88883]" dest="[: [ [89730,89731]"/>
  <match src="identifier: from [4122,4126]" dest="identifier: from [4122,4126]"/>
  <match src="identifier: i [95862,95863]" dest="identifier: i [95134,95135]"/>
  <match src="identifier: yearPeriod [103511,103521]" dest="identifier: yearPeriod [103435,103445]"/>
  <match src="(: ( [26538,26539]" dest="(: ( [26538,26539]"/>
  <match src="expression_statement [29541,29549]" dest="expression_statement [29541,29549]"/>
  <match src="variable_declaration_statement [98862,98931]" dest="variable_declaration_statement [99051,99120]"/>
  <match src="&gt;=:  &gt;= [47667,47670]" dest="&gt;=:  &gt;= [47669,47672]"/>
  <match src="identifier: isFirstTokenEthToken [69915,69935]" dest="identifier: isFirstTokenEthToken [69626,69646]"/>
  <match src="emit: emit [57454,57458]" dest="emit: emit [57456,57460]"/>
  <match src="identifier: initialPriceCumulative [106735,106757]" dest="identifier: initialPriceCumulative [106659,106681]"/>
  <match src="type_name [42738,42745]" dest="type_name [42738,42745]"/>
  <match src="=: = [80387,80388]" dest="=: = [81007,81008]"/>
  <match src="identifier: x [31681,31682]" dest="identifier: x [31681,31682]"/>
  <match src="): ) [87603,87604]" dest="): ) [88764,88765]"/>
  <match src="identifier: blockTimestamp [42154,42168]" dest="identifier: blockTimestamp [42154,42168]"/>
  <match src="}: } [31550,31551]" dest="}: } [31550,31551]"/>
  <match src="uint256: uint256 [8102,8109]" dest="uint256: uint256 [8102,8109]"/>
  <match src="identifier: pool [83148,83152]" dest="identifier: pool [72347,72351]"/>
  <match src=",: , [5387,5388]" dest=",: , [5387,5388]"/>
  <match src="=: = [70055,70056]" dest="=: = [69766,69767]"/>
  <match src="member_expression [99289,99328]" dest="member_expression [99445,99484]"/>
  <match src="}: } [62043,62044]" dest="}: } [62045,62046]"/>
  <match src="type_alias [63086,63095]" dest="type_alias [63088,63097]"/>
  <match src="variable_declaration [77562,77581]" dest="variable_declaration [77002,77021]"/>
  <match src="&quot;: &quot; [16852,16853]" dest="&quot;: &quot; [16852,16853]"/>
  <match src="identifier: spender [22016,22023]" dest="identifier: spender [22016,22023]"/>
  <match src="): ) [40437,40438]" dest="): ) [40437,40438]"/>
  <match src="call_expression [85032,85059]" dest="call_expression [86332,86359]"/>
  <match src="binary_expression [14098,14129]" dest="binary_expression [14098,14129]"/>
  <match src="{: { [109132,109133]" dest="{: { [109056,109057]"/>
  <match src="(: ( [40499,40500]" dest="(: ( [40499,40500]"/>
  <match src="identifier: _pool [97078,97083]" dest="identifier: _pool [95843,95848]"/>
  <match src="expression_statement [23538,23624]" dest="expression_statement [23538,23624]"/>
  <match src="==: == [89759,89761]" dest="==: == [91001,91003]"/>
  <match src="variable_declaration [28082,28092]" dest="variable_declaration [28082,28092]"/>
  <match src="primitive_type [93043,93050]" dest="primitive_type [92691,92698]"/>
  <match src="&gt;=: &gt;= [29131,29133]" dest="&gt;=: &gt;= [29131,29133]"/>
  <match src="identifier: _pid [46621,46625]" dest="identifier: _pid [46863,46867]"/>
  <match src="||: || [89733,89735]" dest="||: || [90975,90977]"/>
  <match src="type_cast_expression [23331,23345]" dest="type_cast_expression [23331,23345]"/>
  <match src="/: / [29733,29734]" dest="/: / [29733,29734]"/>
  <match src="type_cast_expression [42528,42576]" dest="type_cast_expression [42528,42576]"/>
  <match src="function_body [47423,47492]" dest="function_body [47425,47494]"/>
  <match src="block_statement [31557,31592]" dest="block_statement [31557,31592]"/>
  <match src="binary_expression [27385,27391]" dest="binary_expression [27385,27391]"/>
  <match src=",: , [40907,40908]" dest=",: , [40907,40908]"/>
  <match src="): ) [24417,24418]" dest="): ) [24417,24418]"/>
  <match src="assignment_expression [67473,67497]" dest="assignment_expression [67720,67744]"/>
  <match src="function_body [102955,103068]" dest="function_body [102879,102992]"/>
  <match src="(: ( [51453,51454]" dest="(: ( [51455,51456]"/>
  <match src="function: function [26704,26712]" dest="function: function [26704,26712]"/>
  <match src="type_name [69751,69758]" dest="type_name [69462,69469]"/>
  <match src="storage: storage [100381,100388]" dest="storage: storage [99723,99730]"/>
  <match src="identifier: r [27677,27678]" dest="identifier: r [27677,27678]"/>
  <match src="function_definition [55586,55964]" dest="function_definition [55588,55966]"/>
  <match src="if_statement [89689,89813]" dest="if_statement [90931,91055]"/>
  <match src="number_literal: 2 [27782,27783]" dest="number_literal: 2 [27782,27783]"/>
  <match src="*: * [6249,6250]" dest="*: * [6249,6250]"/>
  <match src="identifier: tokenToEthSwap [105364,105378]" dest="identifier: tokenToEthSwap [105288,105302]"/>
  <match src="identifier: inviteeWeight [99794,99807]" dest="identifier: inviteeWeight [97986,97999]"/>
  <match src="identifier: div [99752,99755]" dest="identifier: div [97944,97947]"/>
  <match src="identifier: target [16178,16184]" dest="identifier: target [16178,16184]"/>
  <match src="parameter [2692,2705]" dest="parameter [2692,2705]"/>
  <match src="type_name [28032,28039]" dest="type_name [28032,28039]"/>
  <match src="&gt;&gt;=: &gt;&gt;= [31792,31795]" dest="&gt;&gt;=: &gt;&gt;= [31792,31795]"/>
  <match src="]: ] [95877,95878]" dest="]: ] [95203,95204]"/>
  <match src="type_name [88656,88663]" dest="type_name [89504,89511]"/>
  <match src="identifier: require [35429,35436]" dest="identifier: require [35429,35436]"/>
  <match src="identifier: self [37953,37957]" dest="identifier: self [37953,37957]"/>
  <match src="array_access [98884,98930]" dest="array_access [99073,99119]"/>
  <match src="return_type_definition [11782,11799]" dest="return_type_definition [11782,11799]"/>
  <match src="member_expression [89973,90000]" dest="member_expression [91193,91285]"/>
  <match src="primitive_type [43059,43066]" dest="primitive_type [43059,43066]"/>
  <match src="[: [ [76778,76779]" dest="[: [ [76294,76295]"/>
  <match src="comment: // solhint-disable-next-line avoid-low-level-calls [18948,18998]" dest="comment: // solhint-disable-next-line avoid-low-level-calls [18948,18998]"/>
  <match src="state_mutability [49993,49997]" dest="state_mutability [49995,49999]"/>
  <match src="function_definition [1547,1595]" dest="function_definition [1547,1595]"/>
  <match src="visibility [43670,43676]" dest="visibility [43670,43676]"/>
  <match src="/: / [11031,11032]" dest="/: / [11031,11032]"/>
  <match src="identifier: lower [35651,35656]" dest="identifier: lower [35651,35656]"/>
  <match src="type_name [95471,95478]" dest="type_name [94619,94626]"/>
  <match src="): ) [40861,40862]" dest="): ) [40861,40862]"/>
  <match src="parameter [62160,62176]" dest="parameter [62162,62178]"/>
  <match src="(: ( [5381,5382]" dest="(: ( [5381,5382]"/>
  <match src="call_argument [80727,80868]" dest="call_argument [81414,81555]"/>
  <match src="member_expression [33501,33508]" dest="member_expression [33501,33508]"/>
  <match src="update_expression [103651,103654]" dest="update_expression [103575,103578]"/>
  <match src="call_argument [104188,104193]" dest="call_argument [104112,104117]"/>
  <match src="identifier: _x [42573,42575]" dest="identifier: _x [42573,42575]"/>
  <match src="function: function [33186,33194]" dest="function: function [33186,33194]"/>
  <match src="mapping: mapping [64861,64868]" dest="mapping: mapping [64869,64876]"/>
  <match src="identifier: amount [51946,51952]" dest="identifier: amount [51948,51954]"/>
  <match src="false: false [104829,104834]" dest="false: false [104753,104758]"/>
  <match src="(: ( [40283,40284]" dest="(: ( [40283,40284]"/>
  <match src="return: return [17447,17453]" dest="return: return [17447,17453]"/>
  <match src="identifier: r [32143,32144]" dest="identifier: r [32143,32144]"/>
  <match src="parameter [77352,77368]" dest="parameter [76792,76808]"/>
  <match src="call_argument [107850,107861]" dest="call_argument [107774,107785]"/>
  <match src="): ) [52626,52627]" dest="): ) [52628,52629]"/>
  <match src="): ) [106386,106387]" dest="): ) [106310,106311]"/>
  <match src="&gt;&gt;=: &gt;&gt;= [31683,31686]" dest="&gt;&gt;=: &gt;&gt;= [31683,31686]"/>
  <match src="internal: internal [33035,33043]" dest="internal: internal [33035,33043]"/>
  <match src="member_expression [79536,79561]" dest="member_expression [78896,78921]"/>
  <match src="type_cast_expression [34316,34339]" dest="type_cast_expression [34316,34339]"/>
  <match src="if_statement [19446,19885]" dest="if_statement [19446,19885]"/>
  <match src="if_statement [103241,103315]" dest="if_statement [103165,103239]"/>
  <match src="primitive_type [38898,38902]" dest="primitive_type [38898,38902]"/>
  <match src="visibility [75910,75918]" dest="visibility [75426,75434]"/>
  <match src="block_statement [99621,99654]" dest="block_statement [97711,97744]"/>
  <match src="identifier: _toBlock [78070,78078]" dest="identifier: _toBlock [77200,77208]"/>
  <match src="call_argument [27325,27327]" dest="call_argument [27325,27327]"/>
  <match src="]: ] [46706,46707]" dest="]: ] [46948,46949]"/>
  <match src="type_name [10901,10908]" dest="type_name [10901,10908]"/>
  <match src="identifier: tokenToEthSwap [106063,106077]" dest="identifier: tokenToEthSwap [105987,106001]"/>
  <match src="call_expression [45672,45712]" dest="call_expression [45674,45714]"/>
  <match src="number_literal: 0 [69568,69569]" dest="number_literal: 0 [69279,69280]"/>
  <match src="number_literal: 0 [93303,93304]" dest="number_literal: 0 [92951,92952]"/>
  <match src="identifier: recipient [2338,2347]" dest="identifier: recipient [2338,2347]"/>
  <match src=",: , [95409,95410]" dest=",: , [94557,94558]"/>
  <match src="identifier: length [85046,85052]" dest="identifier: length [86346,86352]"/>
  <match src="identifier: _pool [97825,97830]" dest="identifier: _pool [96590,96595]"/>
  <match src="binary_expression [29788,29804]" dest="binary_expression [29788,29804]"/>
  <match src="assignment_expression [95613,95653]" dest="assignment_expression [94761,94801]"/>
  <match src="unary_expression [31834,31836]" dest="unary_expression [31834,31836]"/>
  <match src="visibility [39612,39620]" dest="visibility [39612,39620]"/>
  <match src="primitive_type [98015,98022]" dest="primitive_type [96780,96787]"/>
  <match src="storage: storage [74239,74246]" dest="storage: storage [74026,74033]"/>
  <match src="visibility [25767,25773]" dest="visibility [25767,25773]"/>
  <match src="uint256: uint256 [89951,89958]" dest="uint256: uint256 [91170,91177]"/>
  <match src="): ) [36085,36086]" dest="): ) [36085,36086]"/>
  <match src="returns: returns [15663,15670]" dest="returns: returns [15663,15670]"/>
  <match src="if_statement [60240,60298]" dest="if_statement [60242,60300]"/>
  <match src="primitive_type [92811,92818]" dest="primitive_type [92459,92466]"/>
  <match src="number_literal: 1732 [68271,68275]" dest="number_literal: 1732 [68350,68354]"/>
  <match src="(: ( [78170,78171]" dest="(: ( [77303,77304]"/>
  <match src="visibility [32673,32679]" dest="visibility [32673,32679]"/>
  <match src="identifier: fullMul [28056,28063]" dest="identifier: fullMul [28056,28063]"/>
  <match src="): ) [64907,64908]" dest="): ) [64915,64916]"/>
  <match src="comment: // lossy [34537,34545]" dest="comment: // lossy [34537,34545]"/>
  <match src="solidity_version_comparison_operator [4486,4489]" dest="solidity_version_comparison_operator [4486,4489]"/>
  <match src="function: function [40263,40271]" dest="function: function [40263,40271]"/>
  <match src="assignment_expression [47069,47105]" dest="assignment_expression [46456,46492]"/>
  <match src="identifier: _startBlock [67186,67197]" dest="identifier: _startBlock [67439,67450]"/>
  <match src="expression_statement [82050,82085]" dest="expression_statement [82888,82923]"/>
  <match src="{: { [89766,89767]" dest="{: { [91008,91009]"/>
  <match src="string_literal [86601,86632]" dest="string_literal [87889,87920]"/>
  <match src="identifier: spender [38570,38577]" dest="identifier: spender [38570,38577]"/>
  <match src="): ) [108860,108861]" dest="): ) [108784,108785]"/>
  <match src="function_definition [2312,2389]" dest="function_definition [2312,2389]"/>
  <match src="assignment_expression [100939,100972]" dest="assignment_expression [101097,101130]"/>
  <match src="type_cast_expression [41404,41437]" dest="type_cast_expression [41404,41437]"/>
  <match src="call_expression [8226,8282]" dest="call_expression [8226,8282]"/>
  <match src="): ) [27629,27630]" dest="): ) [27629,27630]"/>
  <match src="number_literal: 8 [29380,29381]" dest="number_literal: 8 [29380,29381]"/>
  <match src="member_expression [60977,60985]" dest="member_expression [60979,60987]"/>
  <match src="identifier: l [27340,27341]" dest="identifier: l [27340,27341]"/>
  <match src=".: . [86357,86358]" dest=".: . [87645,87646]"/>
  <match src="{: { [104759,104760]" dest="{: { [104683,104684]"/>
  <match src="number_literal: 0 [105207,105208]" dest="number_literal: 0 [105131,105132]"/>
  <match src="identifier: oldImplementation [434,451]" dest="identifier: oldImplementation [434,451]"/>
  <match src="&gt;: &gt; [90904,90905]" dest="&gt;: &gt; [91929,91930]"/>
  <match src="call_argument [99756,99770]" dest="call_argument [97948,97962]"/>
  <match src="return_statement [106881,106895]" dest="return_statement [106805,106819]"/>
  <match src="identifier: marketingFund [83643,83656]" dest="identifier: marketingFund [85387,85400]"/>
  <match src="augmented_assignment_expression [27727,27741]" dest="augmented_assignment_expression [27727,27741]"/>
  <match src="(: ( [44897,44898]" dest="(: ( [44899,44900]"/>
  <match src="primitive_type [5915,5922]" dest="primitive_type [5915,5922]"/>
  <match src="member_expression [82969,82991]" dest="member_expression [83748,83770]"/>
  <match src="string [54893,54932]" dest="string [54895,54934]"/>
  <match src="identifier: INVITOR_WEIGHT [83106,83120]" dest="identifier: INVITOR_WEIGHT [83885,83899]"/>
  <match src="type_name [4128,4135]" dest="type_name [4128,4135]"/>
  <match src="string_literal [86877,86902]" dest="string_literal [88034,88059]"/>
  <match src="type_name [80363,80370]" dest="type_name [80983,80990]"/>
  <match src="expression_statement [31997,32005]" dest="expression_statement [31997,32005]"/>
  <match src="function_body [109132,109357]" dest="function_body [109056,109281]"/>
  <match src="!=: != [57261,57263]" dest="!=: != [57263,57265]"/>
  <match src=".: . [76839,76840]" dest=".: . [76355,76356]"/>
  <match src="event_paramater [39986,40002]" dest="event_paramater [39986,40002]"/>
  <match src="identifier: number [45596,45602]" dest="identifier: number [45598,45604]"/>
  <match src="call_expression [56453,56502]" dest="call_expression [56455,56504]"/>
  <match src="=: = [67535,67536]" dest="=: = [67782,67783]"/>
  <match src="memory: memory [38720,38726]" dest="memory: memory [38720,38726]"/>
  <match src="string_literal [17487,17526]" dest="string_literal [17487,17526]"/>
  <match src="user_defined_type [37617,37626]" dest="user_defined_type [37617,37626]"/>
  <match src="primitive_type [59737,59744]" dest="primitive_type [59739,59746]"/>
  <match src="identifier: msg [24373,24376]" dest="identifier: msg [24373,24376]"/>
  <match src="identifier: invitorInfo [99874,99885]" dest="identifier: invitorInfo [98066,98077]"/>
  <match src="function: function [34551,34559]" dest="function: function [34551,34559]"/>
  <match src="variable_declaration [88777,88783]" dest="variable_declaration [89625,89631]"/>
  <match src="(: ( [82772,82773]" dest="(: ( [83610,83611]"/>
  <match src="{: { [107024,107025]" dest="{: { [106948,106949]"/>
  <match src="=: = [46499,46500]" dest="=: = [46741,46742]"/>
  <match src="primitive_type [4391,4398]" dest="primitive_type [4391,4398]"/>
  <match src="struct_member [58897,58915]" dest="struct_member [58899,58917]"/>
  <match src="array_access [95828,95844]" dest="array_access [95067,95083]"/>
  <match src="identifier: _initialBlock [103670,103683]" dest="identifier: _initialBlock [103594,103607]"/>
  <match src="binary_expression [90840,90854]" dest="binary_expression [91865,91879]"/>
  <match src="comment: // The block number when SHARD mining starts. [43419,43464]" dest="comment: // The block number when SHARD mining starts. [43419,43464]"/>
  <match src="parameter [40676,40688]" dest="parameter [40676,40688]"/>
  <match src="identifier: nCheckpoints [60191,60203]" dest="identifier: nCheckpoints [60193,60205]"/>
  <match src="number_literal: 2 [66344,66345]" dest="number_literal: 2 [66364,66365]"/>
  <match src="comment: // solhint-disable-next-line max-line-length [21542,21586]" dest="comment: // solhint-disable-next-line max-line-length [21542,21586]"/>
  <match src="&quot;: &quot; [72104,72105]" dest="&quot;: &quot; [71657,71658]"/>
  <match src="): ) [99770,99771]" dest="): ) [97962,97963]"/>
  <match src="identifier: msg [69380,69383]" dest="identifier: msg [69091,69094]"/>
  <match src="identifier: token [21809,21814]" dest="identifier: token [21809,21814]"/>
  <match src="(: ( [35102,35103]" dest="(: ( [35102,35103]"/>
  <match src="primitive_type [3442,3449]" dest="primitive_type [3442,3449]"/>
  <match src="): ) [19868,19869]" dest="): ) [19868,19869]"/>
  <match src="=: = [89254,89255]" dest="=: = [90179,90180]"/>
  <match src="variable_declaration [61935,61948]" dest="variable_declaration [61937,61950]"/>
  <match src="parameter [51625,51638]" dest="parameter [51627,51640]"/>
  <match src="&gt;: &gt; [103340,103341]" dest="&gt;: &gt; [103264,103265]"/>
  <match src=",: , [104787,104788]" dest=",: , [104711,104712]"/>
  <match src="return_type_definition [3899,3913]" dest="return_type_definition [3899,3913]"/>
  <match src="primitive_type [31719,31725]" dest="primitive_type [31719,31725]"/>
  <match src="return_type_definition [33049,33075]" dest="return_type_definition [33049,33075]"/>
  <match src="view: view [104956,104960]" dest="view: view [104880,104884]"/>
  <match src="function_definition [2673,2756]" dest="function_definition [2673,2756]"/>
  <match src="{: { [97784,97785]" dest="{: { [96549,96550]"/>
  <match src="identifier: marketingFund [45936,45949]" dest="identifier: marketingFund [45938,45951]"/>
  <match src="state_mutability [41623,41627]" dest="state_mutability [41623,41627]"/>
  <match src="{: { [30052,30053]" dest="{: { [30052,30053]"/>
  <match src="identifier: _pid [47336,47340]" dest="identifier: _pid [47338,47342]"/>
  <match src="member_expression [86055,86073]" dest="member_expression [87347,87365]"/>
  <match src="virtual: virtual [95300,95307]" dest="virtual: virtual [94448,94455]"/>
  <match src="call_expression [21596,21748]" dest="call_expression [21596,21748]"/>
  <match src="primitive_type [29883,29890]" dest="primitive_type [29883,29890]"/>
  <match src="parameter [94366,94382]" dest="parameter [94012,94028]"/>
  <match src="solidity_pragma_token [62944,62959]" dest="solidity_pragma_token [62946,62961]"/>
  <match src="expression_statement [84303,84365]" dest="expression_statement [84832,84900]"/>
  <match src="member_expression [38079,38094]" dest="member_expression [38079,38094]"/>
  <match src="-=: -= [38233,38235]" dest="-=: -= [38233,38235]"/>
  <match src="visibility [40529,40537]" dest="visibility [40529,40537]"/>
  <match src="address: address [56312,56319]" dest="address: address [56314,56321]"/>
  <match src="identifier: require [28207,28214]" dest="identifier: require [28207,28214]"/>
  <match src="visibility [88445,88453]" dest="visibility [89293,89301]"/>
  <match src="identifier: _amount [96405,96412]" dest="identifier: _amount [85109,85116]"/>
  <match src="(: ( [2382,2383]" dest="(: ( [2382,2383]"/>
  <match src="returns: returns [10114,10121]" dest="returns: returns [10114,10121]"/>
  <match src="if_statement [31711,31810]" dest="if_statement [31711,31810]"/>
  <match src="expression_statement [72609,72629]" dest="expression_statement [72301,72321]"/>
  <match src="=: = [60873,60874]" dest="=: = [60875,60876]"/>
  <match src="parameter [9465,9472]" dest="parameter [9465,9472]"/>
  <match src="expression_statement [87892,87912]" dest="expression_statement [89053,89073]"/>
  <match src="string [56567,56603]" dest="string [56569,56605]"/>
  <match src="function_definition [11705,11870]" dest="function_definition [11705,11870]"/>
  <match src="true: true [70909,70913]" dest="true: true [70620,70624]"/>
  <match src="==: == [21611,21613]" dest="==: == [21611,21613]"/>
  <match src="identifier: uq112x112 [105588,105597]" dest="identifier: uq112x112 [105512,105521]"/>
  <match src="(: ( [46101,46102]" dest="(: ( [46103,46104]"/>
  <match src="event_paramater [4148,4161]" dest="event_paramater [4148,4161]"/>
  <match src="expression_statement [99350,99389]" dest="expression_statement [99502,99541]"/>
  <match src="identifier: lpTokenSwap [93813,93824]" dest="identifier: lpTokenSwap [93459,93470]"/>
  <match src="': ' [36537,36538]" dest="': ' [36537,36538]"/>
  <match src="function_body [33475,33531]" dest="function_body [33475,33531]"/>
  <match src="uint256: uint256 [36438,36445]" dest="uint256: uint256 [36438,36445]"/>
  <match src="identifier: transferFrom [20918,20930]" dest="identifier: transferFrom [20918,20930]"/>
  <match src="identifier: a [6511,6512]" dest="identifier: a [6511,6512]"/>
  <match src="identifier: sender [82320,82326]" dest="identifier: sender [83158,83164]"/>
  <match src="identifier: _term [103111,103116]" dest="identifier: _term [103035,103040]"/>
  <match src="identifier: div [78703,78706]" dest="identifier: div [78283,78286]"/>
  <match src="=: = [73155,73156]" dest="=: = [72920,72921]"/>
  <match src="=: = [34846,34847]" dest="=: = [34846,34847]"/>
  <match src="number_literal: 0x100 [30726,30731]" dest="number_literal: 0x100 [30726,30731]"/>
  <match src="if: if [5666,5668]" dest="if: if [5666,5668]"/>
  <match src="primitive_type [3874,3881]" dest="primitive_type [3874,3881]"/>
  <match src="uint256: uint256 [82948,82955]" dest="uint256: uint256 [83727,83734]"/>
  <match src="): ) [11798,11799]" dest="): ) [11798,11799]"/>
  <match src="library: library [32362,32369]" dest="library: library [32362,32369]"/>
  <match src="[: [ [73169,73170]" dest="[: [ [72934,72935]"/>
  <match src="identifier: toOld [61839,61844]" dest="identifier: toOld [61841,61846]"/>
  <match src=".: . [82561,82562]" dest=".: . [83399,83400]"/>
  <match src="identifier: poolCount [93261,93270]" dest="identifier: poolCount [92909,92918]"/>
  <match src="uint256: uint256 [79827,79834]" dest="uint256: uint256 [80412,80419]"/>
  <match src="type_name [45186,45193]" dest="type_name [45188,45195]"/>
  <match src="call_argument [38313,38320]" dest="call_argument [38313,38320]"/>
  <match src="(: ( [101575,101576]" dest="(: ( [101312,101313]"/>
  <match src="call_argument [51506,51512]" dest="call_argument [51508,51514]"/>
  <match src="=&gt;: =&gt; [66167,66169]" dest="=&gt;: =&gt; [66185,66187]"/>
  <match src="(: ( [107105,107106]" dest="(: ( [107029,107030]"/>
  <match src=".: . [107406,107407]" dest=".: . [107330,107331]"/>
  <match src="identifier: UserInfo [63179,63187]" dest="identifier: UserInfo [63181,63189]"/>
  <match src="&gt;: &gt; [23433,23434]" dest="&gt;: &gt; [23433,23434]"/>
  <match src="public: public [65348,65354]" dest="public: public [65358,65364]"/>
  <match src="block_statement [37019,37229]" dest="block_statement [37019,37229]"/>
  <match src="assignment_expression [101176,101283]" dest="assignment_expression [101145,101222]"/>
  <match src="): ) [98351,98352]" dest="): ) [97116,97117]"/>
  <match src="identifier: newOriginWeight [80981,80996]" dest="identifier: newOriginWeight [81668,81683]"/>
  <match src="=: = [95576,95577]" dest="=: = [94724,94725]"/>
  <match src="function_definition [91025,91131]" dest="function_definition [92050,92156]"/>
  <match src="(: ( [73741,73742]" dest="(: ( [73506,73507]"/>
  <match src=",: , [104795,104796]" dest=",: , [104719,104720]"/>
  <match src="address: address [12671,12678]" dest="address: address [12671,12678]"/>
  <match src="number_literal: 8 [30775,30776]" dest="number_literal: 8 [30775,30776]"/>
  <match src="uint256: uint256 [65734,65741]" dest="uint256: uint256 [65744,65751]"/>
  <match src="=: = [80209,80210]" dest="=: = [80829,80830]"/>
  <match src="pure: pure [34246,34250]" dest="pure: pure [34246,34250]"/>
  <match src="function_body [79869,82367]" dest="function_body [80454,83205]"/>
  <match src="=: = [107763,107764]" dest="=: = [107687,107688]"/>
  <match src="(: ( [80646,80647]" dest="(: ( [81333,81334]"/>
  <match src="uint256: uint256 [27291,27298]" dest="uint256: uint256 [27291,27298]"/>
  <match src="assignment_expression [80689,80869]" dest="assignment_expression [81376,81556]"/>
  <match src="primitive_type [22256,22263]" dest="primitive_type [22256,22263]"/>
  <match src="memory: memory [17797,17803]" dest="memory: memory [17797,17803]"/>
  <match src="&quot;: &quot; [17931,17932]" dest="&quot;: &quot; [17931,17932]"/>
  <match src="function_definition [21865,22151]" dest="function_definition [21865,22151]"/>
  <match src="assignment_expression [78766,78800]" dest="assignment_expression [78346,78380]"/>
  <match src="primitive_type [18021,18026]" dest="primitive_type [18021,18026]"/>
  <match src="type_name [63199,63206]" dest="type_name [63201,63208]"/>
  <match src=",: , [21268,21269]" dest=",: , [21268,21269]"/>
  <match src="variable_declaration_statement [69429,69465]" dest="variable_declaration_statement [69140,69176]"/>
  <match src="primitive_type [39808,39815]" dest="primitive_type [39808,39815]"/>
  <match src="): ) [77515,77516]" dest="): ) [76955,76956]"/>
  <match src="identifier: IUniswapV2Pair [97187,97201]" dest="identifier: IUniswapV2Pair [95952,95966]"/>
  <match src="=: = [32653,32654]" dest="=: = [32653,32654]"/>
  <match src="&lt;: &lt; [82654,82655]" dest="&lt;: &lt; [83492,83493]"/>
  <match src="variable_declaration [89951,89970]" dest="variable_declaration [91170,91190]"/>
  <match src="(: ( [25991,25992]" dest="(: ( [25991,25992]"/>
  <match src="identifier: oracleWeight [84308,84320]" dest="identifier: oracleWeight [84837,84849]"/>
  <match src="call_expression [106038,106078]" dest="call_expression [105962,106002]"/>
  <match src="identifier: _pairSwap [105256,105265]" dest="identifier: _pairSwap [105180,105189]"/>
  <match src="): ) [84624,84625]" dest="): ) [85755,85756]"/>
  <match src="identifier: sender [69358,69364]" dest="identifier: sender [69069,69075]"/>
  <match src="uint112: uint112 [34900,34907]" dest="uint112: uint112 [34900,34907]"/>
  <match src="parameter [20815,20825]" dest="parameter [20815,20825]"/>
  <match src=".: . [73036,73037]" dest=".: . [72718,72719]"/>
  <match src="(: ( [7267,7268]" dest="(: ( [7267,7268]"/>
  <match src="identifier: _pid [73090,73094]" dest="identifier: _pid [72855,72859]"/>
  <match src="array_access [99558,99572]" dest="array_access [97648,97662]"/>
  <match src="member_expression [60922,60934]" dest="member_expression [60924,60936]"/>
  <match src="): ) [24353,24354]" dest="): ) [24353,24354]"/>
  <match src="(: ( [95642,95643]" dest="(: ( [94790,94791]"/>
  <match src="state_mutability [40122,40126]" dest="state_mutability [40122,40126]"/>
  <match src="primitive_type [12711,12715]" dest="primitive_type [12711,12715]"/>
  <match src="identifier: targetTokenPosition [70778,70797]" dest="identifier: targetTokenPosition [70489,70508]"/>
  <match src="{: { [8854,8855]" dest="{: { [8854,8855]"/>
  <match src="identifier: amount [52620,52626]" dest="identifier: amount [52622,52628]"/>
  <match src="array_access [60206,60229]" dest="array_access [60208,60231]"/>
  <match src="primitive_type [61257,61264]" dest="primitive_type [61259,61266]"/>
  <match src="type_cast_expression [22001,22014]" dest="type_cast_expression [22001,22014]"/>
  <match src="': ' [34377,34378]" dest="': ' [34377,34378]"/>
  <match src="internal: internal [17399,17407]" dest="internal: internal [17399,17407]"/>
  <match src="identifier: _user [98457,98462]" dest="identifier: _user [98861,98866]"/>
  <match src="return_statement [33702,33740]" dest="return_statement [33702,33740]"/>
  <match src="primitive_type [27482,27489]" dest="primitive_type [27482,27489]"/>
  <match src="state_variable_declaration [43367,43411]" dest="state_variable_declaration [43367,43411]"/>
  <match src="if: if [90875,90877]" dest="if: if [91900,91902]"/>
  <match src="identifier: _x [35009,35011]" dest="identifier: _x [35009,35011]"/>
  <match src="identifier: _pid [77140,77144]" dest="identifier: _pid [77925,77929]"/>
  <match src="identifier: _isContractSender [46160,46177]" dest="identifier: _isContractSender [46162,46179]"/>
  <match src="identifier: uppers_lowero [35228,35241]" dest="identifier: uppers_lowero [35228,35241]"/>
  <match src="(: ( [67801,67802]" dest="(: ( [68015,68016]"/>
  <match src="type_name [78811,78818]" dest="type_name [77527,77534]"/>
  <match src="[: [ [60220,60221]" dest="[: [ [60222,60223]"/>
  <match src="call_argument [89867,89897]" dest="call_argument [91114,91144]"/>
  <match src="]: ] [73593,73594]" dest="]: ] [73358,73359]"/>
  <match src="identifier: a [5719,5720]" dest="identifier: a [5719,5720]"/>
  <match src="assignment_expression [45422,45470]" dest="assignment_expression [45424,45472]"/>
  <match src="number_literal: 2355 [68803,68807]" dest="number_literal: 2355 [68552,68556]"/>
  <match src="identifier: checkpoints [62499,62510]" dest="identifier: checkpoints [62501,62512]"/>
  <match src="returns: returns [28744,28751]" dest="returns: returns [28744,28751]"/>
  <match src="call_expression [38271,38372]" dest="call_expression [38271,38372]"/>
  <match src="=: = [67911,67912]" dest="=: = [68163,68164]"/>
  <match src="identifier: reserveMintWeight [66031,66048]" dest="identifier: reserveMintWeight [66045,66062]"/>
  <match src="call_argument [72283,72284]" dest="call_argument [72161,72162]"/>
  <match src="member_expression [105865,105880]" dest="member_expression [105789,105804]"/>
  <match src="call_argument [17487,17526]" dest="call_argument [17487,17526]"/>
  <match src="identifier: _marketingFund [67694,67708]" dest="identifier: _marketingFund [67908,67922]"/>
  <match src="user_defined_type [63987,64007]" dest="user_defined_type [63989,64009]"/>
  <match src="inline_array_expression [68161,68856]" dest="inline_array_expression [68324,68567]"/>
  <match src="returns: returns [40424,40431]" dest="returns: returns [40424,40431]"/>
  <match src="storage: storage [105751,105758]" dest="storage: storage [105675,105682]"/>
  <match src="expression_statement [102656,102726]" dest="expression_statement [102580,102650]"/>
  <match src="call_argument [81891,81910]" dest="call_argument [82723,82742]"/>
  <match src="identifier: _toBlock [77507,77515]" dest="identifier: _toBlock [76947,76955]"/>
  <match src="expression_statement [93015,93064]" dest="expression_statement [92663,92712]"/>
  <match src="primitive_type [28719,28726]" dest="primitive_type [28719,28726]"/>
  <match src="(: ( [106678,106679]" dest="(: ( [106602,106603]"/>
  <match src="member_expression [69354,69364]" dest="member_expression [69065,69075]"/>
  <match src="identifier: _initialBlock [104101,104114]" dest="identifier: _initialBlock [104025,104038]"/>
  <match src="}: } [98370,98371]" dest="}: } [97135,97136]"/>
  <match src="type_name [108356,108363]" dest="type_name [108280,108287]"/>
  <match src="state_mutability [102925,102929]" dest="state_mutability [102849,102853]"/>
  <match src="return_statement [73937,73944]" dest="return_statement [73667,73674]"/>
  <match src="): ) [15330,15331]" dest="): ) [15330,15331]"/>
  <match src="parameter [10912,10938]" dest="parameter [10912,10938]"/>
  <match src="identifier: updateAfterModifyStartBlock [45672,45699]" dest="identifier: updateAfterModifyStartBlock [45674,45701]"/>
  <match src="function_definition [14008,14405]" dest="function_definition [14008,14405]"/>
  <match src="}: } [38379,38380]" dest="}: } [38379,38380]"/>
  <match src="identifier: rankPoolIndexMap [72503,72519]" dest="identifier: rankPoolIndexMap [72195,72211]"/>
  <match src=".: . [81859,81860]" dest=".: . [82691,82692]"/>
  <match src="block_statement [104671,104723]" dest="block_statement [104595,104647]"/>
  <match src="=: = [73990,73991]" dest="=: = [73720,73721]"/>
  <match src="(: ( [42097,42098]" dest="(: ( [42097,42098]"/>
  <match src="(: ( [36602,36603]" dest="(: ( [36602,36603]"/>
  <match src="identifier: totalSupply [97097,97108]" dest="identifier: totalSupply [95862,95873]"/>
  <match src=".: . [98838,98839]" dest=".: . [99031,99032]"/>
  <match src="binary_expression [80647,80669]" dest="binary_expression [81334,81356]"/>
  <match src="identifier: sender [24377,24383]" dest="identifier: sender [24377,24383]"/>
  <match src=",: , [984,985]" dest=",: , [984,985]"/>
  <match src="type_name [25541,25548]" dest="type_name [25541,25548]"/>
  <match src="false [5382,5387]" dest="false [5382,5387]"/>
  <match src="identifier: _msgSender [52013,52023]" dest="identifier: _msgSender [52015,52025]"/>
  <match src="parameter [85213,85237]" dest="parameter [86513,86537]"/>
  <match src="call_argument [42563,42571]" dest="call_argument [42563,42571]"/>
  <match src="]: ] [99509,99510]" dest="]: ] [97599,97600]"/>
  <match src="=: = [67341,67342]" dest="=: = [67588,67589]"/>
  <match src="identifier: mul [33854,33857]" dest="identifier: mul [33854,33857]"/>
  <match src="}: } [98168,98169]" dest="}: } [96933,96934]"/>
  <match src="identifier: msg [84420,84423]" dest="identifier: msg [84955,84958]"/>
  <match src="): ) [39967,39968]" dest="): ) [39967,39968]"/>
  <match src="expression_statement [77901,77930]" dest="expression_statement [77136,77168]"/>
  <match src="identifier: _marketingFund [67120,67134]" dest="identifier: _marketingFund [67373,67387]"/>
  <match src="number_literal: 2 [30934,30935]" dest="number_literal: 2 [30934,30935]"/>
  <match src="[: [ [87197,87198]" dest="[: [ [88356,88357]"/>
  <match src="member_expression [103458,103472]" dest="member_expression [103382,103396]"/>
  <match src="type_name [39423,39430]" dest="type_name [39423,39430]"/>
  <match src="!: ! [98625,98626]" dest="!: ! [97390,97391]"/>
  <match src="identifier: invitees [87218,87226]" dest="identifier: invitees [88379,88387]"/>
  <match src="expression_statement [84386,84446]" dest="expression_statement [84921,84981]"/>
  <match src="number_literal: 0 [28792,28793]" dest="number_literal: 0 [28792,28793]"/>
  <match src="identifier: nameLength [101963,101973]" dest="identifier: senderTotalWeight [99867,99884]"/>
  <match src="}: } [59619,59620]" dest="}: } [59621,59622]"/>
  <match src="uint256: uint256 [5646,5653]" dest="uint256: uint256 [5646,5653]"/>
  <match src="view: view [40178,40182]" dest="view: view [40178,40182]"/>
  <match src="public: public [76973,76979]" dest="public: public [76489,76495]"/>
  <match src="uint256: uint256 [44803,44810]" dest="uint256: uint256 [44805,44812]"/>
  <match src="user_defined_type [59064,59074]" dest="user_defined_type [59066,59076]"/>
  <match src="if: if [31926,31928]" dest="if: if [31926,31928]"/>
  <match src="identifier: self [33875,33879]" dest="identifier: self [33875,33879]"/>
  <match src="primitive_type [41594,41601]" dest="primitive_type [41594,41601]"/>
  <match src="identifier: add [55234,55237]" dest="identifier: add [55236,55239]"/>
  <match src="identifier: oldVotes [62168,62176]" dest="identifier: oldVotes [62170,62178]"/>
  <match src="}: } [89812,89813]" dest="}: } [91054,91055]"/>
  <match src="parameter [91081,91088]" dest="parameter [92106,92113]"/>
  <match src="type_name [98473,98480]" dest="type_name [97238,97245]"/>
  <match src="primitive_type [10072,10078]" dest="primitive_type [10072,10078]"/>
  <match src="): ) [31285,31286]" dest="): ) [31285,31286]"/>
  <match src="=&gt;: =&gt; [64758,64760]" dest="=&gt;: =&gt; [64764,64766]"/>
  <match src="member_expression [97898,97922]" dest="member_expression [96663,96687]"/>
  <match src="if: if [36097,36099]" dest="if: if [36097,36099]"/>
  <match src="variable_declaration [72300,72328]" dest="variable_declaration [74086,74105]"/>
  <match src="function_definition [88920,90627]" dest="function_definition [89768,91652]"/>
  <match src="member_expression [106768,106799]" dest="member_expression [106692,106723]"/>
  <match src="call_expression [14090,14163]" dest="call_expression [14090,14163]"/>
  <match src="identifier: z [34365,34366]" dest="identifier: z [34365,34366]"/>
  <match src="type_name [52593,52600]" dest="type_name [52595,52602]"/>
  <match src="number_literal: 0 [33981,33982]" dest="number_literal: 0 [33981,33982]"/>
  <match src="(: ( [105787,105788]" dest="(: ( [105711,105712]"/>
  <match src="(: ( [54186,54187]" dest="(: ( [54188,54189]"/>
  <match src="type_name [73430,73437]" dest="type_name [73195,73202]"/>
  <match src=",: , [3872,3873]" dest=",: , [3872,3873]"/>
  <match src="binary_expression [60358,60421]" dest="binary_expression [60360,60423]"/>
  <match src="}: } [26049,26050]" dest="}: } [26049,26050]"/>
  <match src="uint256: uint256 [73824,73831]" dest="uint256: uint256 [71808,71815]"/>
  <match src="boolean_literal [59801,59805]" dest="boolean_literal [59803,59807]"/>
  <match src="member_expression [83089,83105]" dest="member_expression [83868,83884]"/>
  <match src="): ) [19771,19772]" dest="): ) [19771,19772]"/>
  <match src="number_literal: 1 [89895,89896]" dest="number_literal: 1 [91142,91143]"/>
  <match src="address: address [62750,62757]" dest="address: address [62752,62759]"/>
  <match src="primitive_type [40770,40775]" dest="primitive_type [40770,40775]"/>
  <match src="expression_statement [30688,30696]" dest="expression_statement [30688,30696]"/>
  <match src="identifier: originWeight [82797,82809]" dest="identifier: originWeight [83635,83647]"/>
  <match src="type_name [35573,35580]" dest="type_name [35573,35580]"/>
  <match src="identifier: require [37105,37112]" dest="identifier: require [37105,37112]"/>
  <match src="user_defined_type [82840,82848]" dest="user_defined_type [83678,83686]"/>
  <match src="function_definition [40806,40841]" dest="function_definition [40806,40841]"/>
  <match src=".: . [42572,42573]" dest=".: . [42572,42573]"/>
  <match src="(: ( [102946,102947]" dest="(: ( [102870,102871]"/>
  <match src="identifier: _swapAddress [92869,92881]" dest="identifier: _swapAddress [92517,92529]"/>
  <match src="identifier: termStartIndex [103967,103981]" dest="identifier: termStartIndex [103891,103905]"/>
  <match src="&lt;&lt;=: &lt;&lt;= [29602,29605]" dest="&lt;&lt;=: &lt;&lt;= [29602,29605]"/>
  <match src=",: , [75493,75494]" dest=",: , [75009,75010]"/>
  <match src="type_name [64209,64216]" dest="type_name [64211,64218]"/>
  <match src="binary_expression [82113,82193]" dest="binary_expression [82951,83031]"/>
  <match src="string [44974,44989]" dest="string [44976,44991]"/>
  <match src="call_argument [34076,34077]" dest="call_argument [34076,34077]"/>
  <match src="identifier: _allowances [54148,54159]" dest="identifier: _allowances [54150,54161]"/>
  <match src="call_argument [37732,37744]" dest="call_argument [37732,37744]"/>
  <match src="binary_expression [8234,8239]" dest="binary_expression [8234,8239]"/>
  <match src="identifier: _feeRateNumerator [45167,45184]" dest="identifier: _feeRateNumerator [45169,45186]"/>
  <match src="member_expression [85032,85052]" dest="member_expression [86332,86352]"/>
  <match src="using: using [63080,63085]" dest="using: using [63082,63087]"/>
  <match src="(: ( [99386,99387]" dest="(: ( [99538,99539]"/>
  <match src="uint256: uint256 [51102,51109]" dest="uint256: uint256 [51104,51111]"/>
  <match src="returns: returns [51445,51452]" dest="returns: returns [51447,51454]"/>
  <match src="=: = [46556,46557]" dest="=: = [46798,46799]"/>
  <match src="primitive_type [5640,5644]" dest="primitive_type [5640,5644]"/>
  <match src="variable_declaration [37034,37048]" dest="variable_declaration [37034,37048]"/>
  <match src="type_name [49031,49059]" dest="type_name [49033,49061]"/>
  <match src="identifier: pool [78873,78877]" dest="identifier: pool [78456,78460]"/>
  <match src="&lt;:  &lt; [1688,1690]" dest="&lt;:  &lt; [1688,1690]"/>
  <match src="[: [ [100898,100899]" dest="[: [ [100960,100961]"/>
  <match src="identifier: token [20605,20610]" dest="identifier: token [20605,20610]"/>
  <match src="comment: // This method relies on extcodesize, which returns 0 for contracts in [12728,12798]" dest="comment: // This method relies on extcodesize, which returns 0 for contracts in [12728,12798]"/>
  <match src="): ) [107022,107023]" dest="): ) [106946,106947]"/>
  <match src="internal: internal [10940,10948]" dest="internal: internal [10940,10948]"/>
  <match src="call_argument [35103,35113]" dest="call_argument [35103,35113]"/>
  <match src="uint: uint [40690,40694]" dest="uint: uint [40690,40694]"/>
  <match src="): ) [89896,89897]" dest="): ) [91143,91144]"/>
  <match src="expression_statement [31421,31430]" dest="expression_statement [31421,31430]"/>
  <match src="identifier: _x [42445,42447]" dest="identifier: _x [42445,42447]"/>
  <match src="contract_body [30052,32160]" dest="contract_body [30052,32160]"/>
  <match src="function: function [55586,55594]" dest="function: function [55588,55596]"/>
  <match src="identifier: pid [66630,66633]" dest="identifier: pid [66883,66886]"/>
  <match src="identifier: add [79220,79223]" dest="identifier: add [79375,79378]"/>
  <match src="binary_expression [41429,41436]" dest="binary_expression [41429,41436]"/>
  <match src="=: = [106528,106529]" dest="=: = [106452,106453]"/>
  <match src="memory: memory [33868,33874]" dest="memory: memory [33868,33874]"/>
  <match src="identifier: _verifyCallResult [17091,17108]" dest="identifier: _verifyCallResult [17091,17108]"/>
  <match src="{: { [44671,44672]" dest="{: { [44673,44674]"/>
  <match src="assignment_expression [84696,84735]" dest="assignment_expression [85827,85866]"/>
  <match src="expression_statement [67888,67915]" dest="expression_statement [68140,68167]"/>
  <match src="parameter [96906,96928]" dest="parameter [95671,95693]"/>
  <match src="): ) [54833,54834]" dest="): ) [54835,54836]"/>
  <match src="parameter [33420,33441]" dest="parameter [33420,33441]"/>
  <match src="identifier: h [28174,28175]" dest="identifier: h [28174,28175]"/>
  <match src="expression_statement [26522,26542]" dest="expression_statement [26522,26542]"/>
  <match src="identifier: to [58584,58586]" dest="identifier: to [58586,58588]"/>
  <match src=",: , [19130,19131]" dest=",: , [19130,19131]"/>
  <match src="identifier: _amount [59488,59495]" dest="identifier: _amount [59490,59497]"/>
  <match src="identifier: PoolInfo [74230,74238]" dest="identifier: PoolInfo [74017,74025]"/>
  <match src="external: external [38944,38952]" dest="external: external [38944,38952]"/>
  <match src="variable_declaration [18007,18019]" dest="variable_declaration [18007,18019]"/>
  <match src="address: address [59034,59041]" dest="address: address [59036,59043]"/>
  <match src="expression_statement [29262,29272]" dest="expression_statement [29262,29272]"/>
  <match src="identifier: a [7817,7818]" dest="identifier: a [7817,7818]"/>
  <match src="assignment_expression [90909,90930]" dest="assignment_expression [91934,91955]"/>
  <match src="': ' [31313,31314]" dest="': ' [31313,31314]"/>
  <match src="identifier: rankPoolIndexMap [89736,89752]" dest="identifier: rankPoolIndexMap [90978,90994]"/>
  <match src="): ) [25572,25573]" dest="): ) [25572,25573]"/>
  <match src="uint112: uint112 [34827,34834]" dest="uint112: uint112 [34827,34834]"/>
  <match src="identifier: FixedPoint [107765,107775]" dest="identifier: FixedPoint [107689,107699]"/>
  <match src="type_name [88530,88537]" dest="type_name [89378,89385]"/>
  <match src="public: public [44038,44044]" dest="public: public [44040,44046]"/>
  <match src=".: . [90983,90984]" dest=".: . [92008,92009]"/>
  <match src="=: = [45034,45035]" dest="=: = [45036,45037]"/>
  <match src="(: ( [39357,39358]" dest="(: ( [39357,39358]"/>
  <match src="if_statement [77119,77185]" dest="if_statement [77904,77970]"/>
  <match src="true [54263,54267]" dest="true [54265,54269]"/>
  <match src="call_argument [31617,31619]" dest="call_argument [31617,31619]"/>
  <match src="block_statement [60423,60501]" dest="block_statement [60425,60503]"/>
  <match src="identifier: TokenPairInfo [106937,106950]" dest="identifier: TokenPairInfo [106861,106874]"/>
  <match src="identifier: generateOrcaleInfo [70960,70978]" dest="identifier: generateOrcaleInfo [70671,70689]"/>
  <match src="(: ( [33986,33987]" dest="(: ( [33986,33987]"/>
  <match src=",: , [58586,58587]" dest=",: , [58588,58589]"/>
  <match src="false [6594,6599]" dest="false [6594,6599]"/>
  <match src="variable_declaration_statement [80187,80226]" dest="variable_declaration_statement [80807,80846]"/>
  <match src="identifier: x [30580,30581]" dest="identifier: x [30580,30581]"/>
  <match src="member_expression [98214,98251]" dest="member_expression [96979,97016]"/>
  <match src="identifier: _toIndex [92925,92933]" dest="identifier: _toIndex [92573,92581]"/>
  <match src="comment: //_poolIndexInRank is the index in rank [85099,85138]" dest="comment: //_poolIndexInRank is the index in rank [86399,86438]"/>
  <match src="): ) [107176,107177]" dest="): ) [107100,107101]"/>
  <match src="array_access [47315,47341]" dest="array_access [47317,47343]"/>
  <match src="identifier: nCheckpoints [62604,62616]" dest="identifier: nCheckpoints [62606,62618]"/>
  <match src="function_body [50927,50965]" dest="function_body [50929,50967]"/>
  <match src="identifier: getRankList [93887,93898]" dest="identifier: getRankList [93533,93544]"/>
  <match src="number_literal: 0 [77539,77540]" dest="number_literal: 0 [76979,76980]"/>
  <match src="type_name [48956,48984]" dest="type_name [48958,48986]"/>
  <match src="variable_declaration_statement [60658,60676]" dest="variable_declaration_statement [60660,60678]"/>
  <match src="call_argument [79224,79225]" dest="call_argument [79379,79380]"/>
  <match src="call_expression [109143,109155]" dest="call_expression [109067,109079]"/>
  <match src="parameter [40820,40830]" dest="parameter [40820,40830]"/>
  <match src="identifier: pool [82857,82861]" dest="identifier: pool [83695,83699]"/>
  <match src="[: [ [64242,64243]" dest="[: [ [64244,64245]"/>
  <match src="string_literal [15298,15330]" dest="string_literal [15298,15330]"/>
  <match src="identifier: abi [20889,20892]" dest="identifier: abi [20889,20892]"/>
  <match src="(: ( [16872,16873]" dest="(: ( [16872,16873]"/>
  <match src="{: { [49818,49819]" dest="{: { [49820,49821]"/>
  <match src="type_name [39293,39297]" dest="type_name [39293,39297]"/>
  <match src="number_literal: 1665 [68252,68256]" dest="number_literal: 1665 [68345,68349]"/>
  <match src="user_defined_type [78285,78293]" dest="user_defined_type [77418,77426]"/>
  <match src="identifier: _pid [85307,85311]" dest="identifier: _pid [86607,86611]"/>
  <match src="revert: revert [19849,19855]" dest="revert: revert [19849,19855]"/>
  <match src="type_name [43561,43568]" dest="type_name [43561,43568]"/>
  <match src="user_defined_type [86946,86960]" dest="user_defined_type [88103,88117]"/>
  <match src=".: . [82644,82645]" dest=".: . [83482,83483]"/>
  <match src="identifier: VotesBalanceChanged [62649,62668]" dest="identifier: VotesBalanceChanged [62651,62670]"/>
  <match src="call_argument [70749,70758]" dest="call_argument [70460,70469]"/>
  <match src="contract_body [1791,4409]" dest="contract_body [1791,4409]"/>
  <match src="user_defined_type [22910,22916]" dest="user_defined_type [22910,22916]"/>
  <match src="identifier: _startBlock [103380,103391]" dest="identifier: _startBlock [103304,103315]"/>
  <match src="(: ( [76659,76660]" dest="(: ( [76175,76176]"/>
  <match src="user_defined_type [66113,66125]" dest="user_defined_type [66129,66141]"/>
  <match src="if: if [90298,90300]" dest="if: if [91352,91354]"/>
  <match src="): ) [80594,80595]" dest="): ) [81279,81280]"/>
  <match src="identifier: add [74924,74927]" dest="identifier: add [74795,74798]"/>
  <match src=",: , [22202,22203]" dest=",: , [22202,22203]"/>
  <match src="identifier: _marketingFundDividend [46834,46856]" dest="identifier: _marketingFundDividend [47076,47098]"/>
  <match src=",: , [62149,62150]" dest=",: , [62151,62152]"/>
  <match src="identifier: number [62259,62265]" dest="identifier: number [62261,62267]"/>
  <match src="): ) [47299,47300]" dest="): ) [47301,47302]"/>
  <match src="identifier: lastInvitee [99256,99267]" dest="identifier: lastInvitee [99416,99427]"/>
  <match src="member_expression [98206,98276]" dest="member_expression [96971,97041]"/>
  <match src="function_body [50030,50063]" dest="function_body [50032,50065]"/>
  <match src="false [70127,70132]" dest="false [69838,69843]"/>
  <match src="=: = [33989,33990]" dest="=: = [33989,33990]"/>
  <match src="primitive_type [26500,26507]" dest="primitive_type [26500,26507]"/>
  <match src="expression_statement [68046,68075]" dest="expression_statement [68033,68061]"/>
  <match src="identifier: isUsed [64269,64275]" dest="identifier: isUsed [64271,64277]"/>
  <match src="): ) [37168,37169]" dest="): ) [37168,37169]"/>
  <match src="identifier: returndata [19036,19046]" dest="identifier: returndata [19036,19046]"/>
  <match src="call_expression [89973,90025]" dest="call_expression [91193,91339]"/>
  <match src="binary_expression [61347,61371]" dest="binary_expression [61349,61373]"/>
  <match src="identifier: rankPoolIndex [74269,74282]" dest="identifier: rankPoolIndex [73982,73995]"/>
  <match src="=: = [83210,83211]" dest="=: = [84027,84028]"/>
  <match src="type_cast_expression [36250,36266]" dest="type_cast_expression [36250,36266]"/>
  <match src="type_name [60852,60862]" dest="type_name [60854,60864]"/>
  <match src="primitive_type [36524,36531]" dest="primitive_type [36524,36531]"/>
  <match src="visibility [109102,109108]" dest="visibility [109026,109032]"/>
  <match src="binary_expression [82113,82140]" dest="binary_expression [82951,82978]"/>
  <match src="-=: -= [31960,31962]" dest="-=: -= [31960,31962]"/>
  <match src="string_literal [34020,34047]" dest="string_literal [34020,34047]"/>
  <match src="if: if [28170,28172]" dest="if: if [28170,28172]"/>
  <match src="visibility [73756,73763]" dest="visibility [73552,73559]"/>
  <match src="function: function [16621,16629]" dest="function: function [16621,16629]"/>
  <match src="identifier: token [21621,21626]" dest="identifier: token [21621,21626]"/>
  <match src="{: { [26455,26456]" dest="{: { [26455,26456]"/>
  <match src="bool: bool [54099,54103]" dest="bool: bool [54101,54105]"/>
  <match src="parameter [34260,34266]" dest="parameter [34260,34266]"/>
  <match src="': ' [31348,31349]" dest="': ' [31348,31349]"/>
  <match src=",: , [7330,7331]" dest=",: , [7330,7331]"/>
  <match src="call_argument [86362,86363]" dest="call_argument [87650,87651]"/>
  <match src="identifier: accumulativeDividend [73860,73880]" dest="identifier: accumulativeDividend [71981,72001]"/>
  <match src="uint256: uint256 [28983,28990]" dest="uint256: uint256 [28983,28990]"/>
  <match src="expression_statement [45637,45662]" dest="expression_statement [45639,45664]"/>
  <match src="return_statement [29912,29937]" dest="return_statement [29912,29937]"/>
  <match src="{: { [93364,93365]" dest="{: { [93012,93013]"/>
  <match src="number_literal: 0 [75629,75630]" dest="number_literal: 0 [75145,75146]"/>
  <match src="variable_declaration [35079,35092]" dest="variable_declaration [35079,35092]"/>
  <match src="function_body [9474,9558]" dest="function_body [9474,9558]"/>
  <match src="expression_statement [93839,93852]" dest="expression_statement [93485,93498]"/>
  <match src="type_name [89429,89433]" dest="type_name [90671,90675]"/>
  <match src=".: . [41880,41881]" dest=".: . [41880,41881]"/>
  <match src="(: ( [59641,59642]" dest="(: ( [59643,59644]"/>
  <match src="binary_expression [105865,105890]" dest="binary_expression [105789,105814]"/>
  <match src="): ) [5653,5654]" dest="): ) [5653,5654]"/>
  <match src="primitive_type [57186,57193]" dest="primitive_type [57188,57195]"/>
  <match src="visibility [30224,30232]" dest="visibility [30224,30232]"/>
  <match src="if: if [97872,97874]" dest="if: if [96637,96639]"/>
  <match src="assignment_expression [55802,55841]" dest="assignment_expression [55804,55843]"/>
  <match src="returns: returns [39194,39201]" dest="returns: returns [39194,39201]"/>
  <match src="==: == [25978,25980]" dest="==: == [25978,25980]"/>
  <match src="expression_statement [96277,96304]" dest="expression_statement [95587,95614]"/>
  <match src="primitive_type [76127,76134]" dest="primitive_type [75643,75650]"/>
  <match src="identifier: c [5343,5344]" dest="identifier: c [5343,5344]"/>
  <match src="=: = [19048,19049]" dest="=: = [19048,19049]"/>
  <match src="identifier: name [49767,49771]" dest="identifier: name [49769,49773]"/>
  <match src="): ) [102599,102600]" dest="): ) [102523,102524]"/>
  <match src="expression_statement [93627,93675]" dest="expression_statement [93275,93323]"/>
  <match src="primitive_type [79510,79517]" dest="primitive_type [78870,78877]"/>
  <match src="&lt;&lt;: &lt;&lt; [35601,35603]" dest="&lt;&lt;: &lt;&lt; [35601,35603]"/>
  <match src="block_statement [29585,29619]" dest="block_statement [29585,29619]"/>
  <match src="memory: memory [95230,95236]" dest="memory: memory [94378,94384]"/>
  <match src="identifier: errorMessage [15640,15652]" dest="identifier: errorMessage [15640,15652]"/>
  <match src="identifier: amountFeeRateNumerator [46742,46764]" dest="identifier: amountFeeRateNumerator [46984,47006]"/>
  <match src="function: function [27905,27913]" dest="function: function [27905,27913]"/>
  <match src="[: [ [61552,61553]" dest="[: [ [61554,61555]"/>
  <match src="): ) [90981,90982]" dest="): ) [92006,92007]"/>
  <match src="identifier: shardPoolDividendWeight [90001,90024]" dest="identifier: shardPoolDividendWeight [91208,91231]"/>
  <match src="&quot;: &quot; [14131,14132]" dest="&quot;: &quot; [14131,14132]"/>
  <match src="identifier: _price [106530,106536]" dest="identifier: _price [106454,106460]"/>
  <match src="identifier: description [71833,71844]" dest="identifier: description [71544,71555]"/>
  <match src="comment: // if _lpTokenSwap contains tokenA instead of eth, then _tokenToEthSwap should consist of token A and eth [69079,69184]" dest="comment: // if _lpTokenSwap contains tokenA instead of eth, then _tokenToEthSwap should consist of token A and eth [68790,68895]"/>
  <match src="call_argument [72956,72993]" dest="call_argument [72638,72675]"/>
  <match src="variable_declaration [80463,80479]" dest="variable_declaration [81148,81164]"/>
  <match src="(: ( [64648,64649]" dest="(: ( [64652,64653]"/>
  <match src="if_statement [30957,30978]" dest="if_statement [30957,30978]"/>
  <match src="}: } [26548,26549]" dest="}: } [26548,26549]"/>
  <match src="identifier: y [34324,34325]" dest="identifier: y [34324,34325]"/>
  <match src="variable_declaration [60686,60699]" dest="variable_declaration [60688,60701]"/>
  <match src="return: return [34417,34423]" dest="return: return [34417,34423]"/>
  <match src="primitive_type [65734,65741]" dest="primitive_type [65744,65751]"/>
  <match src=",: , [17378,17379]" dest=",: , [17378,17379]"/>
  <match src="member_expression [56536,56558]" dest="member_expression [56538,56560]"/>
  <match src="primitive_type [42233,42239]" dest="primitive_type [42233,42239]"/>
  <match src="&gt;: &gt; [30277,30278]" dest="&gt;: &gt; [30277,30278]"/>
  <match src="type_name [34204,34213]" dest="type_name [34204,34213]"/>
  <match src="function: function [34190,34198]" dest="function: function [34190,34198]"/>
  <match src="(: ( [51101,51102]" dest="(: ( [51103,51104]"/>
  <match src="memory: memory [35937,35943]" dest="memory: memory [35937,35943]"/>
  <match src="{: { [85594,85595]" dest="{: { [86894,86895]"/>
  <match src="primitive_type [32594,32601]" dest="primitive_type [32594,32601]"/>
  <match src="number_literal: 0 [34328,34329]" dest="number_literal: 0 [34328,34329]"/>
  <match src="identifier: require [16865,16872]" dest="identifier: require [16865,16872]"/>
  <match src="return: return [53484,53490]" dest="return: return [53486,53492]"/>
  <match src="assignment_expression [75788,75830]" dest="assignment_expression [75304,75346]"/>
  <match src="): ) [79236,79237]" dest="): ) [79391,79392]"/>
  <match src="identifier: invitor [64217,64224]" dest="identifier: invitor [64219,64226]"/>
  <match src="call_expression [44887,44899]" dest="call_expression [44889,44901]"/>
  <match src="): ) [79120,79121]" dest="): ) [79283,79284]"/>
  <match src="(: ( [16998,16999]" dest="(: ( [16998,16999]"/>
  <match src="identifier: amount [55896,55902]" dest="identifier: amount [55898,55904]"/>
  <match src="number_literal: 1 [27398,27399]" dest="number_literal: 1 [27398,27399]"/>
  <match src="parameter [41378,41384]" dest="parameter [41378,41384]"/>
  <match src="): ) [95652,95653]" dest="): ) [94800,94801]"/>
  <match src="function_definition [39438,39498]" dest="function_definition [39438,39498]"/>
  <match src="call_argument [53461,53471]" dest="call_argument [53463,53473]"/>
  <match src="primitive_type [66963,66970]" dest="primitive_type [67216,67223]"/>
  <match src="call_argument [33112,33113]" dest="call_argument [33112,33113]"/>
  <match src="variable_declaration [80236,80257]" dest="variable_declaration [80856,80877]"/>
  <match src="function_body [17436,17535]" dest="function_body [17436,17535]"/>
  <match src="(: ( [104435,104436]" dest="(: ( [104359,104360]"/>
  <match src="primitive_type [44101,44108]" dest="primitive_type [44103,44110]"/>
  <match src="identifier: cachedPrice [107063,107074]" dest="identifier: cachedPrice [106987,106998]"/>
  <match src="identifier: _x [34674,34676]" dest="identifier: _x [34674,34676]"/>
  <match src="return_statement [87620,87627]" dest="return_statement [88781,88788]"/>
  <match src="block_statement [97984,98169]" dest="block_statement [96749,96934]"/>
  <match src="(: ( [16883,16884]" dest="(: ( [16883,16884]"/>
  <match src="visibility [104947,104955]" dest="visibility [104871,104879]"/>
  <match src="identifier: InvitationInfo [64761,64775]" dest="identifier: InvitationInfo [64767,64781]"/>
  <match src="primitive_type [64235,64242]" dest="primitive_type [64237,64244]"/>
  <match src="member_expression [98015,98137]" dest="member_expression [96780,96902]"/>
  <match src="call_expression [10143,10172]" dest="call_expression [10143,10172]"/>
  <match src="call_expression [78426,78557]" dest="call_expression [78014,78137]"/>
  <match src="primitive_type [4106,4113]" dest="primitive_type [4106,4113]"/>
  <match src="primitive_type [38071,38078]" dest="primitive_type [38071,38078]"/>
  <match src="user_defined_type [37936,37945]" dest="user_defined_type [37936,37945]"/>
  <match src="(: ( [14304,14305]" dest="(: ( [14304,14305]"/>
  <match src="address: address [39537,39544]" dest="address: address [39537,39544]"/>
  <match src="unary_expression [97408,97432]" dest="unary_expression [96173,96197]"/>
  <match src="identifier: InvitationInfo [98732,98746]" dest="identifier: InvitationInfo [98938,98952]"/>
  <match src=",: , [82341,82342]" dest=",: , [83179,83180]"/>
  <match src="): ) [21659,21660]" dest="): ) [21659,21660]"/>
  <match src="uint32: uint32 [107434,107440]" dest="uint32: uint32 [107358,107364]"/>
  <match src="identifier: symbol_ [49648,49655]" dest="identifier: symbol_ [49650,49657]"/>
  <match src="call_expression [84668,84685]" dest="call_expression [85799,85816]"/>
  <match src="identifier: _lpTokenSwap [70735,70747]" dest="identifier: _lpTokenSwap [70446,70458]"/>
  <match src="identifier: errorMessage [10159,10171]" dest="identifier: errorMessage [10159,10171]"/>
  <match src="visibility [86532,86540]" dest="visibility [87820,87828]"/>
  <match src="(: ( [93319,93320]" dest="(: ( [92967,92968]"/>
  <match src="identifier: data [16300,16304]" dest="identifier: data [16300,16304]"/>
  <match src="=: = [108126,108127]" dest="=: = [108050,108051]"/>
  <match src="identifier: spender [39092,39099]" dest="identifier: spender [39092,39099]"/>
  <match src="memory: memory [19029,19035]" dest="memory: memory [19029,19035]"/>
  <match src="identifier: lastRewardBlock [65195,65210]" dest="identifier: lastRewardBlock [65205,65220]"/>
  <match src="identifier: require [47434,47441]" dest="identifier: require [47436,47443]"/>
  <match src="binary_expression [89591,89630]" dest="binary_expression [90833,90872]"/>
  <match src="parameter [88421,88434]" dest="parameter [89269,89282]"/>
  <match src="assignment_expression [88824,88893]" dest="assignment_expression [89672,89741]"/>
  <match src="): ) [62209,62210]" dest="): ) [62211,62212]"/>
  <match src="[: [ [82872,82873]" dest="[: [ [83710,83711]"/>
  <match src="identifier: calculateDividend [46084,46101]" dest="identifier: calculateDividend [46086,46103]"/>
  <match src="): ) [41806,41807]" dest="): ) [41806,41807]"/>
  <match src="{: { [19473,19474]" dest="{: { [19473,19474]"/>
  <match src="=: = [6245,6246]" dest="=: = [6245,6246]"/>
  <match src="type_name [64899,64907]" dest="type_name [64907,64915]"/>
  <match src=".: . [90507,90508]" dest=".: . [91532,91533]"/>
  <match src="identifier: implementation [232,246]" dest="identifier: implementation [232,246]"/>
  <match src="(: ( [86088,86089]" dest="(: ( [87380,87381]"/>
  <match src="call_argument [21786,21848]" dest="call_argument [21786,21848]"/>
  <match src="identifier: poolReward [78400,78410]" dest="identifier: poolReward [77988,77998]"/>
  <match src="expression_statement [55740,55790]" dest="expression_statement [55742,55792]"/>
  <match src="type_name [39808,39815]" dest="type_name [39808,39815]"/>
  <match src="type_name [86777,86791]" dest="type_name [87932,87946]"/>
  <match src="]: ] [93051,93052]" dest="]: ] [92699,92700]"/>
  <match src="identifier: AddPool [66919,66926]" dest="identifier: AddPool [67172,67179]"/>
  <match src="expression_statement [10983,11012]" dest="expression_statement [10983,11012]"/>
  <match src="type_name [39841,39845]" dest="type_name [39841,39845]"/>
  <match src=".: . [34935,34936]" dest=".: . [34935,34936]"/>
  <match src="==: == [97257,97259]" dest="==: == [96022,96024]"/>
  <match src="visibility [64564,64570]" dest="visibility [64566,64574]"/>
  <match src="state_variable_declaration [43833,43875]" dest="state_variable_declaration [43833,43875]"/>
  <match src="if_statement [69675,71073]" dest="if_statement [69386,70784]"/>
  <match src="primitive_type [27971,27978]" dest="primitive_type [27971,27978]"/>
  <match src="uint: uint [39678,39682]" dest="uint: uint [39678,39682]"/>
  <match src="expression_statement [106402,106491]" dest="expression_statement [106326,106415]"/>
  <match src="member_expression [80796,80808]" dest="member_expression [81483,81495]"/>
  <match src="(: ( [55760,55761]" dest="(: ( [55762,55763]"/>
  <match src="expression_statement [76566,76619]" dest="expression_statement [76082,76135]"/>
  <match src="call_argument [7766,7798]" dest="call_argument [7766,7798]"/>
  <match src="variable_declaration [86946,86976]" dest="variable_declaration [88103,88133]"/>
  <match src="uint256: uint256 [79139,79146]" dest="uint256: uint256 [79302,79309]"/>
  <match src="identifier: onlyOwner [67220,67229]" dest="identifier: onlyOwner [67467,67476]"/>
  <match src="internal: internal [37594,37602]" dest="internal: internal [37594,37602]"/>
  <match src="comment: /**      * @dev Returns the multiplication of two unsigned integers, with an overflow flag.      *      * _Available since v3.4._      */ [5741,5882]" dest="comment: /**      * @dev Returns the multiplication of two unsigned integers, with an overflow flag.      *      * _Available since v3.4._      */ [5741,5882]"/>
  <match src="visibility [39113,39121]" dest="visibility [39113,39121]"/>
  <match src="returns: returns [40239,40246]" dest="returns: returns [40239,40246]"/>
  <match src="}: } [56714,56715]" dest="}: } [56716,56717]"/>
  <match src="expression_statement [33968,34049]" dest="expression_statement [33968,34049]"/>
  <match src="primitive_type [68893,68900]" dest="primitive_type [68604,68611]"/>
  <match src="bytes: bytes [15241,15246]" dest="bytes: bytes [15241,15246]"/>
  <match src="&amp;&amp;: &amp;&amp; [75631,75633]" dest="&amp;&amp;: &amp;&amp; [75147,75149]"/>
  <match src="{: { [62484,62485]" dest="{: { [62486,62487]"/>
  <match src="augmented_assignment_expression [27752,27766]" dest="augmented_assignment_expression [27752,27766]"/>
  <match src="identifier: pid [72957,72960]" dest="identifier: pid [72639,72642]"/>
  <match src="return_statement [77532,77541]" dest="return_statement [76972,76981]"/>
  <match src="): ) [6923,6924]" dest="): ) [6923,6924]"/>
  <match src=".: . [22076,22077]" dest=".: . [22076,22077]"/>
  <match src="call_expression [77597,77649]" dest="call_expression [77037,77089]"/>
  <match src="]: ] [88835,88836]" dest="]: ] [89683,89684]"/>
  <match src="external: external [68912,68920]" dest="external: external [68623,68631]"/>
  <match src="}: } [28295,28296]" dest="}: } [28295,28296]"/>
  <match src="assignment_expression [70045,70063]" dest="assignment_expression [69756,69774]"/>
  <match src="external: external [95268,95276]" dest="external: external [94416,94424]"/>
  <match src="call_argument [38034,38036]" dest="call_argument [38034,38036]"/>
  <match src="&lt;=: &lt;= [10153,10155]" dest="&lt;=: &lt;= [10153,10155]"/>
  <match src="(: ( [70247,70248]" dest="(: ( [69958,69959]"/>
  <match src="+: + [35632,35633]" dest="+: + [35632,35633]"/>
  <match src="function: function [21235,21243]" dest="function: function [21235,21243]"/>
  <match src="call_argument [103768,103769]" dest="call_argument [103692,103693]"/>
  <match src="variable_declaration_statement [76660,76674]" dest="variable_declaration_statement [76176,76190]"/>
  <match src="assignment_expression [84966,84985]" dest="assignment_expression [86266,86285]"/>
  <match src="string [56404,56439]" dest="string [56406,56441]"/>
  <match src="visibility [59077,59083]" dest="visibility [59079,59085]"/>
  <match src="array_access [89123,89137]" dest="array_access [89971,89985]"/>
  <match src="address: address [64750,64757]" dest="address: address [64756,64763]"/>
  <match src="if: if [30798,30800]" dest="if: if [30798,30800]"/>
  <match src="): ) [34441,34442]" dest="): ) [34441,34442]"/>
  <match src="[: [ [59895,59896]" dest="[: [ [59897,59898]"/>
  <match src="call_argument [99109,99110]" dest="call_argument [99277,99278]"/>
  <match src="primitive_type [59034,59041]" dest="primitive_type [59036,59043]"/>
  <match src="member_expression [103524,103539]" dest="member_expression [103448,103463]"/>
  <match src="array_access [95846,95864]" dest="array_access [95118,95136]"/>
  <match src="uint256: uint256 [82437,82444]" dest="uint256: uint256 [83275,83282]"/>
  <match src="expression_statement [78052,78079]" dest="expression_statement [77182,77209]"/>
  <match src="solidity_version_comparison_operator [24713,24716]" dest="solidity_version_comparison_operator [24713,24716]"/>
  <match src="override_specifier [51436,51444]" dest="override_specifier [51438,51446]"/>
  <match src="uint256: uint256 [7685,7692]" dest="uint256: uint256 [7685,7692]"/>
  <match src="number_literal: 1790 [68290,68294]" dest="number_literal: 1790 [68355,68359]"/>
  <match src="visibility [22943,22950]" dest="visibility [22943,22950]"/>
  <match src="return_type_definition [40543,40557]" dest="return_type_definition [40543,40557]"/>
  <match src="&quot;: &quot; [8246,8247]" dest="&quot;: &quot; [8246,8247]"/>
  <match src="primitive_type [40327,40334]" dest="primitive_type [40327,40334]"/>
  <match src="primitive_type [40724,40728]" dest="primitive_type [40724,40728]"/>
  <match src="struct: struct [32566,32572]" dest="struct: struct [32566,32572]"/>
  <match src=",: , [44828,44829]" dest=",: , [44830,44831]"/>
  <match src="type_name [20612,20619]" dest="type_name [20612,20619]"/>
  <match src="comment: /**      * @dev Returns the division of two unsigned integers, with a division by zero flag.      *      * _Available since v3.4._      */ [6339,6481]" dest="comment: /**      * @dev Returns the division of two unsigned integers, with a division by zero flag.      *      * _Available since v3.4._      */ [6339,6481]"/>
  <match src="identifier: tokenToEthInfo [70505,70519]" dest="identifier: tokenToEthInfo [70216,70230]"/>
  <match src="identifier: require [67240,67247]" dest="identifier: require [67487,67494]"/>
  <match src="): ) [83355,83356]" dest="): ) [84340,84341]"/>
  <match src="): ) [36610,36611]" dest="): ) [36610,36611]"/>
  <match src="member_expression [86861,86875]" dest="member_expression [88018,88032]"/>
  <match src="(: ( [10150,10151]" dest="(: ( [10150,10151]"/>
  <match src="inheritance_specifier [43010,43017]" dest="inheritance_specifier [43010,43017]"/>
  <match src="array_access [102456,102477]" dest="array_access [102315,102336]"/>
  <match src="variable_declaration [82789,82809]" dest="variable_declaration [83627,83647]"/>
  <match src="{: { [106324,106325]" dest="{: { [106248,106249]"/>
  <match src="assignment_expression [89372,89418]" dest="assignment_expression [77689,77768]"/>
  <match src="=: = [104562,104563]" dest="=: = [104486,104487]"/>
  <match src="primitive_type [36233,36240]" dest="primitive_type [36233,36240]"/>
  <match src="comment: // counterfactual [42477,42494]" dest="comment: // counterfactual [42477,42494]"/>
  <match src="call_expression [82260,82281]" dest="call_expression [83098,83119]"/>
  <match src="]: ] [53455,53456]" dest="]: ] [53457,53458]"/>
  <match src="): ) [90310,90311]" dest="): ) [91363,91364]"/>
  <match src="=: = [106036,106037]" dest="=: = [105960,105961]"/>
  <match src="comment: // returns a UQ112x112 which represents the ratio of the numerator to the denominator [36627,36712]" dest="comment: // returns a UQ112x112 which represents the ratio of the numerator to the denominator [36627,36712]"/>
  <match src="member_expression [93808,93824]" dest="member_expression [93454,93470]"/>
  <match src="(: ( [6502,6503]" dest="(: ( [6502,6503]"/>
  <match src="for_statement [74164,74858]" dest="for_statement [73895,74729]"/>
  <match src="): ) [104349,104350]" dest="): ) [104273,104274]"/>
  <match src="type_name [65824,65831]" dest="type_name [65834,65841]"/>
  <match src="type_name [27213,27220]" dest="type_name [27213,27220]"/>
  <match src="return_type_definition [27512,27529]" dest="return_type_definition [27512,27529]"/>
  <match src="new_expression [95729,95742]" dest="new_expression [94877,94890]"/>
  <match src="): ) [100677,100678]" dest="): ) [100257,100258]"/>
  <match src="identifier: x [31606,31607]" dest="identifier: x [31606,31607]"/>
  <match src="assignment_expression [67415,67440]" dest="assignment_expression [67662,67687]"/>
  <match src="member_expression [74714,74771]" dest="member_expression [74466,74497]"/>
  <match src="binary_expression [89693,89702]" dest="binary_expression [90935,90944]"/>
  <match src="identifier: lastRewardBlock [77454,77469]" dest="identifier: lastRewardBlock [76894,76909]"/>
  <match src="uint256: uint256 [59183,59190]" dest="uint256: uint256 [59185,59192]"/>
  <match src="): ) [97003,97004]" dest="): ) [95768,95769]"/>
  <match src="binary_expression [35587,35631]" dest="binary_expression [35587,35631]"/>
  <match src="identifier: inviteeWeight [102586,102599]" dest="identifier: inviteeWeight [102510,102523]"/>
  <match src="call_argument [57357,57393]" dest="call_argument [57359,57395]"/>
  <match src="type_name [2330,2337]" dest="type_name [2330,2337]"/>
  <match src="variable_declaration_statement [99521,99580]" dest="variable_declaration_statement [97611,97670]"/>
  <match src="): ) [35787,35788]" dest="): ) [35787,35788]"/>
  <match src="parenthesized_expression [29757,29768]" dest="parenthesized_expression [29757,29768]"/>
  <match src="[: [ [95899,95900]" dest="[: [ [95166,95167]"/>
  <match src="memory: memory [49559,49565]" dest="memory: memory [49561,49567]"/>
  <match src="identifier: this [81933,81937]" dest="identifier: this [82765,82769]"/>
  <match src="if_statement [107103,107247]" dest="if_statement [107027,107171]"/>
  <match src="type_name [34260,34266]" dest="type_name [34260,34266]"/>
  <match src="}: } [46919,46920]" dest="}: } [47161,47162]"/>
  <match src="boolean_literal [59906,59911]" dest="boolean_literal [59908,59913]"/>
  <match src="binary_expression [37051,37090]" dest="binary_expression [37051,37090]"/>
  <match src="return_type_definition [77396,77413]" dest="return_type_definition [76836,76853]"/>
  <match src="): ) [16793,16794]" dest="): ) [16793,16794]"/>
  <match src="identifier: sub [107811,107814]" dest="identifier: sub [107735,107738]"/>
  <match src="primitive_type [89951,89958]" dest="primitive_type [91170,91177]"/>
  <match src="array_access [85873,85892]" dest="array_access [87173,87192]"/>
  <match src="member_expression [78426,78599]" dest="member_expression [78014,78179]"/>
  <match src="identifier: isFirstTokenShard [70889,70906]" dest="identifier: isFirstTokenShard [70600,70617]"/>
  <match src="): ) [44321,44322]" dest="): ) [44323,44324]"/>
  <match src="comment: // invitees' weight [63339,63358]" dest="comment: // invitees' weight [63341,63360]"/>
  <match src="type_name [39601,39608]" dest="type_name [39601,39608]"/>
  <match src="struct_member [64235,64254]" dest="struct_member [64237,64256]"/>
  <match src="): ) [56706,56707]" dest="): ) [56708,56709]"/>
  <match src="call_expression [52678,52714]" dest="call_expression [52680,52716]"/>
  <match src=",: , [68674,68675]" dest=",: , [68521,68522]"/>
  <match src="}: } [57498,57499]" dest="}: } [57500,57501]"/>
  <match src="identifier: endBlock [80471,80479]" dest="identifier: endBlock [81156,81164]"/>
  <match src=",: , [68655,68656]" dest=",: , [68516,68517]"/>
  <match src="primitive_type [40909,40916]" dest="primitive_type [40909,40916]"/>
  <match src="number_literal: 0 [32040,32041]" dest="number_literal: 0 [32040,32041]"/>
  <match src="address: address [14098,14105]" dest="address: address [14098,14105]"/>
  <match src="identifier: admin [45818,45823]" dest="identifier: admin [45820,45825]"/>
  <match src="function: function [88920,88928]" dest="function: function [89768,89776]"/>
  <match src="identifier: newEndBlock [81231,81242]" dest="identifier: newEndBlock [81920,81931]"/>
  <match src="string [15298,15330]" dest="string [15298,15330]"/>
  <match src="call_expression [103951,104027]" dest="call_expression [103875,103951]"/>
  <match src="contract_body [108779,109691]" dest="contract_body [108703,109615]"/>
  <match src="identifier: farmMint [78107,78115]" dest="identifier: totalReward [77237,77248]"/>
  <match src="parameter [40909,40916]" dest="parameter [40909,40916]"/>
  <match src="): ) [34405,34406]" dest="): ) [34405,34406]"/>
  <match src="identifier: _fromBlock [103458,103468]" dest="identifier: _fromBlock [103382,103392]"/>
  <match src="call_argument [22066,22071]" dest="call_argument [22066,22071]"/>
  <match src="call_argument [75670,75685]" dest="call_argument [75186,75201]"/>
  <match src="]: ] [92645,92646]" dest="]: ] [92293,92294]"/>
  <match src="): ) [46277,46278]" dest="): ) [46279,46280]"/>
  <match src="call_expression [76458,76510]" dest="call_expression [75974,76026]"/>
  <match src="): ) [21615,21616]" dest="): ) [21615,21616]"/>
  <match src="member_expression [24373,24383]" dest="member_expression [24373,24383]"/>
  <match src="identifier: poolCount [95784,95793]" dest="identifier: poolCount [94932,94941]"/>
  <match src="expression_statement [82754,82779]" dest="expression_statement [83592,83617]"/>
  <match src="type_name [22256,22263]" dest="type_name [22256,22263]"/>
  <match src="expression_statement [27573,27583]" dest="expression_statement [27573,27583]"/>
  <match src="identifier: user [89116,89120]" dest="identifier: user [89964,89968]"/>
  <match src="block_statement [80670,80926]" dest="block_statement [81357,81613]"/>
  <match src="identifier: success [19014,19021]" dest="identifier: success [19014,19021]"/>
  <match src="(: ( [49039,49040]" dest="(: ( [49041,49042]"/>
  <match src="visibility [106970,106978]" dest="visibility [106894,106902]"/>
  <match src="uint256: uint256 [105001,105008]" dest="uint256: uint256 [104925,104932]"/>
  <match src="function: function [22159,22167]" dest="function: function [22159,22167]"/>
  <match src="string [87369,87384]" dest="string [88530,88545]"/>
  <match src="[: [ [66125,66126]" dest="[: [ [66141,66142]"/>
  <match src="): ) [55955,55956]" dest="): ) [55957,55958]"/>
  <match src="call_argument [78481,78489]" dest="call_argument [78061,78069]"/>
  <match src="function: function [8787,8795]" dest="function: function [8787,8795]"/>
  <match src="): ) [107740,107741]" dest="): ) [107664,107665]"/>
  <match src="return_type_definition [88993,89039]" dest="return_type_definition [89841,89887]"/>
  <match src="}: } [11869,11870]" dest="}: } [11869,11870]"/>
  <match src="identifier: y [34333,34334]" dest="identifier: y [34333,34334]"/>
  <match src="function_body [51993,52073]" dest="function_body [51995,52075]"/>
  <match src="parameter [92769,92800]" dest="parameter [92417,92448]"/>
  <match src="member_expression [60562,60595]" dest="member_expression [60564,60597]"/>
  <match src="return_type_definition [25787,25804]" dest="return_type_definition [25787,25804]"/>
  <match src="solidity_version:  0.6.12 [42670,42677]" dest="solidity_version:  0.6.12 [42670,42677]"/>
  <match src="{: { [62399,62400]" dest="{: { [62401,62402]"/>
  <match src="type_name [42036,42043]" dest="type_name [42036,42043]"/>
  <match src="identifier: mul [79289,79292]" dest="identifier: mul [79444,79447]"/>
  <match src=",: , [71009,71010]" dest=",: , [70720,70721]"/>
  <match src="uint256: uint256 [27931,27938]" dest="uint256: uint256 [27931,27938]"/>
  <match src=".: . [37275,37276]" dest=".: . [37275,37276]"/>
  <match src="address: address [88421,88428]" dest="address: address [89269,89276]"/>
  <match src="identifier: success [101876,101883]" dest="identifier: _isContract [85123,85134]"/>
  <match src="identifier: block [76233,76238]" dest="identifier: block [75749,75754]"/>
  <match src=".: . [98028,98029]" dest=".: . [96793,96794]"/>
  <match src="}: } [86171,86172]" dest="}: } [87459,87460]"/>
  <match src="identifier: pool [85417,85421]" dest="identifier: pool [86717,86721]"/>
  <match src=".: . [89400,89401]" dest=".: . [77750,77751]"/>
  <match src="type_name [25796,25803]" dest="type_name [25796,25803]"/>
  <match src="identifier: amount1Out [39922,39932]" dest="identifier: amount1Out [39922,39932]"/>
  <match src="): ) [38120,38121]" dest="): ) [38120,38121]"/>
  <match src="function_body [82468,84503]" dest="function_body [83306,85038]"/>
  <match src="(: ( [76292,76293]" dest="(: ( [75808,75809]"/>
  <match src="if_statement [72174,72640]" dest="if_statement [71840,72600]"/>
  <match src="identifier: FixedPoint [106348,106358]" dest="identifier: FixedPoint [106272,106282]"/>
  <match src="identifier: value [16213,16218]" dest="identifier: value [16213,16218]"/>
  <match src="member_expression [102673,102691]" dest="member_expression [102597,102615]"/>
  <match src="): ) [90255,90256]" dest="): ) [91231,91232]"/>
  <match src="': ' [37389,37390]" dest="': ' [37389,37390]"/>
  <match src="view: view [102398,102402]" dest="view: view [102257,102261]"/>
  <match src="variable_declaration [106009,106034]" dest="variable_declaration [105933,105958]"/>
  <match src="primitive_type [57171,57178]" dest="primitive_type [57173,57180]"/>
  <match src="primitive_type [103141,103148]" dest="primitive_type [103065,103072]"/>
  <match src="type_name [35300,35307]" dest="type_name [35300,35307]"/>
  <match src="user_defined_type [33636,33645]" dest="user_defined_type [33636,33645]"/>
  <match src="identifier: priceTokenCumulativeLast [105179,105203]" dest="identifier: priceTokenCumulativeLast [105103,105127]"/>
  <match src="variable_declaration [94483,94516]" dest="variable_declaration [94129,94162]"/>
  <match src=",: , [102898,102899]" dest=",: , [102822,102823]"/>
  <match src="user_defined_type [67719,67733]" dest="user_defined_type [67933,67947]"/>
  <match src="comment: // File: @uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol [38387,38452]" dest="comment: // File: @uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol [38387,38452]"/>
  <match src="else: else [31977,31981]" dest="else: else [31977,31981]"/>
  <match src="identifier: value [20951,20956]" dest="identifier: value [20951,20956]"/>
  <match src="memory: memory [107056,107062]" dest="memory: memory [106980,106986]"/>
  <match src="identifier: user [59272,59276]" dest="identifier: user [59274,59278]"/>
  <match src="function_definition [7210,7389]" dest="function_definition [7210,7389]"/>
  <match src="identifier: b [6251,6252]" dest="identifier: b [6251,6252]"/>
  <match src="{: { [98510,98511]" dest="{: { [97275,97276]"/>
  <match src="identifier: checkpoints [61175,61186]" dest="identifier: checkpoints [61177,61188]"/>
  <match src="primitive_type [102361,102368]" dest="primitive_type [102220,102227]"/>
  <match src="{: { [46370,46371]" dest="{: { [46612,46613]"/>
  <match src="): ) [84444,84445]" dest="): ) [84979,84980]"/>
  <match src="solidity_version: 0.6.0 [1683,1688]" dest="solidity_version: 0.6.0 [1683,1688]"/>
  <match src="unary_expression [98625,98660]" dest="unary_expression [97390,97425]"/>
  <match src="assignment_expression [106703,106757]" dest="assignment_expression [106627,106681]"/>
  <match src="): ) [76971,76972]" dest="): ) [76487,76488]"/>
  <match src="function: function [76931,76939]" dest="function: function [76447,76455]"/>
  <match src="comment: // oracle token price update term [65854,65887]" dest="comment: // oracle token price update term [65864,65897]"/>
  <match src="identifier: xx [29518,29520]" dest="identifier: xx [29518,29520]"/>
  <match src="(: ( [92993,92994]" dest="(: ( [92641,92642]"/>
  <match src="identifier: accumulativeDividend [78842,78862]" dest="identifier: accumulativeDividend [77558,77578]"/>
  <match src="uint256: uint256 [95379,95386]" dest="uint256: uint256 [94527,94534]"/>
  <match src="external: external [86532,86540]" dest="external: external [87820,87828]"/>
  <match src="}: } [19357,19358]" dest="}: } [19357,19358]"/>
  <match src="(: ( [88950,88951]" dest="(: ( [89798,89799]"/>
  <match src="): ) [62565,62566]" dest="): ) [62567,62568]"/>
  <match src="call_expression [47434,47484]" dest="call_expression [47436,47486]"/>
  <match src="string [57276,57314]" dest="string [57278,57316]"/>
  <match src="=: = [69566,69567]" dest="=: = [69277,69278]"/>
  <match src="type_name [88503,88512]" dest="type_name [89351,89360]"/>
  <match src="=: = [85799,85800]" dest="=: = [87099,87100]"/>
  <match src="returns: returns [33673,33680]" dest="returns: returns [33673,33680]"/>
  <match src="type_name [56312,56319]" dest="type_name [56314,56321]"/>
  <match src="primitive_type [85239,85246]" dest="primitive_type [86539,86546]"/>
  <match src="binary_expression [80116,80131]" dest="binary_expression [80701,80716]"/>
  <match src=",: , [18126,18127]" dest=",: , [18126,18127]"/>
  <match src="call_argument [70735,70747]" dest="call_argument [70446,70458]"/>
  <match src="function_definition [38734,38790]" dest="function_definition [38734,38790]"/>
  <match src="return_type_definition [92618,92888]" dest="return_type_definition [92266,92536]"/>
  <match src="primitive_type [66016,66023]" dest="primitive_type [66028,66035]"/>
  <match src="number_literal: 0 [79068,79069]" dest="number_literal: 0 [78857,78858]"/>
  <match src="function_body [56362,56715]" dest="function_body [56364,56717]"/>
  <match src="parameter [46102,46118]" dest="parameter [46104,46120]"/>
  <match src="type_name [48976,48983]" dest="type_name [48978,48985]"/>
  <match src="number_literal: 0 [70801,70802]" dest="number_literal: 0 [70512,70513]"/>
  <match src=",: , [40002,40003]" dest=",: , [40002,40003]"/>
  <match src="): ) [79423,79424]" dest="): ) [79578,79579]"/>
  <match src="type_name [67145,67152]" dest="type_name [67398,67405]"/>
  <match src="): ) [69794,69795]" dest="): ) [69505,69506]"/>
  <match src="function_body [100306,101759]" dest="function_body [99647,102181]"/>
  <match src="(: ( [33857,33858]" dest="(: ( [33857,33858]"/>
  <match src="expression_statement [28133,28140]" dest="expression_statement [28133,28140]"/>
  <match src="identifier: IInvitation [42692,42703]" dest="identifier: IInvitation [42692,42703]"/>
  <match src=",: , [78479,78480]" dest=",: , [78059,78060]"/>
  <match src="string [23365,23399]" dest="string [23365,23399]"/>
  <match src=",: , [86599,86600]" dest=",: , [87887,87888]"/>
  <match src="primitive_type [21927,21934]" dest="primitive_type [21927,21934]"/>
  <match src="if_statement [96178,96315]" dest="if_statement [95488,95625]"/>
  <match src="variable_declaration [35148,35161]" dest="variable_declaration [35148,35161]"/>
  <match src="comment: /**      * @dev See {IERC20-transfer}.      *      * Requirements:      *      * - `recipient` cannot be the zero address.      * - the caller must have a balance of at least `amount`.      */ [51163,51362]" dest="comment: /**      * @dev See {IERC20-transfer}.      *      * Requirements:      *      * - `recipient` cannot be the zero address.      * - the caller must have a balance of at least `amount`.      */ [51165,51364]"/>
  <match src="primitive_type [65893,65900]" dest="primitive_type [65903,65910]"/>
  <match src="identifier: PoolInfo [93379,93387]" dest="identifier: PoolInfo [93027,93035]"/>
  <match src="=: = [29693,29694]" dest="=: = [29693,29694]"/>
  <match src="block_statement [96202,96256]" dest="block_statement [95512,95566]"/>
  <match src="primitive_type [49573,49579]" dest="primitive_type [49575,49581]"/>
  <match src="visibility [66311,66317]" dest="visibility [66331,66337]"/>
  <match src="call_argument [80766,80773]" dest="call_argument [81453,81460]"/>
  <match src="identifier: getDepositWeight [81409,81425]" dest="identifier: getDepositWeight [82098,82114]"/>
  <match src="): ) [37957,37958]" dest="): ) [37957,37958]"/>
  <match src="uint256: uint256 [72373,72380]" dest="uint256: uint256 [72048,72055]"/>
  <match src="primitive_type [51921,51928]" dest="primitive_type [51923,51930]"/>
  <match src="&gt;&gt;=: &gt;&gt;= [30750,30753]" dest="&gt;&gt;=: &gt;&gt;= [30750,30753]"/>
  <match src="): ) [39496,39497]" dest="): ) [39496,39497]"/>
  <match src="internal: internal [21302,21310]" dest="internal: internal [21302,21310]"/>
  <match src="=: = [73025,73026]" dest="=: = [72707,72708]"/>
  <match src="(: ( [102580,102581]" dest="(: ( [102504,102505]"/>
  <match src="call_argument [18066,18070]" dest="call_argument [18066,18070]"/>
  <match src="call_expression [97063,97110]" dest="call_expression [95828,95875]"/>
  <match src="comment: //initial weight [63290,63306]" dest="comment: //initial weight [63292,63308]"/>
  <match src="virtual: virtual [45539,45546]" dest="virtual: virtual [45541,45548]"/>
  <match src="event_paramater [426,451]" dest="event_paramater [426,451]"/>
  <match src="identifier: checkAdmin [87326,87336]" dest="identifier: checkAdmin [88487,88497]"/>
  <match src="comment: // partial products [35050,35069]" dest="comment: // partial products [35050,35069]"/>
  <match src="member_expression [103686,103703]" dest="member_expression [103610,103627]"/>
  <match src="return_type_definition [41369,41385]" dest="return_type_definition [41369,41385]"/>
  <match src="array_access [89074,89088]" dest="array_access [89922,89936]"/>
  <match src="primitive_type [58839,58843]" dest="primitive_type [58841,58845]"/>
  <match src="!=: != [69704,69706]" dest="!=: != [69415,69417]"/>
  <match src="parenthesized_expression [29726,29737]" dest="parenthesized_expression [29726,29737]"/>
  <match src="parenthesized_expression [21604,21616]" dest="parenthesized_expression [21604,21616]"/>
  <match src="bool: bool [5640,5644]" dest="bool: bool [5640,5644]"/>
  <match src="primitive_type [40610,40614]" dest="primitive_type [40610,40614]"/>
  <match src="call_argument [83514,83518]" dest="call_argument [84370,84374]"/>
  <match src="): ) [22034,22035]" dest="): ) [22034,22035]"/>
  <match src="primitive_type [105931,105938]" dest="primitive_type [105855,105862]"/>
  <match src="primitive_type [66059,66066]" dest="primitive_type [66073,66080]"/>
  <match src="identifier: previousBalance [59295,59310]" dest="identifier: previousBalance [59297,59312]"/>
  <match src="call_expression [106156,106195]" dest="call_expression [106080,106119]"/>
  <match src="): ) [71634,71635]" dest="): ) [71345,71346]"/>
  <match src="if_statement [6895,6925]" dest="if_statement [6895,6925]"/>
  <match src="(: ( [109537,109538]" dest="(: ( [109461,109462]"/>
  <match src="call_expression [46501,46532]" dest="call_expression [46743,46774]"/>
  <match src="event: event [66778,66783]" dest="event: event [67031,67036]"/>
  <match src="call_argument [30282,30317]" dest="call_argument [30282,30317]"/>
  <match src="identifier: require [55662,55669]" dest="identifier: require [55664,55671]"/>
  <match src="number_literal: 0 [26539,26540]" dest="number_literal: 0 [26539,26540]"/>
  <match src="solidity_version: 0.6.2 [11953,11958]" dest="solidity_version: 0.6.2 [11953,11958]"/>
  <match src="identifier: _pid [46128,46132]" dest="identifier: _pid [46130,46134]"/>
  <match src="=: = [76044,76045]" dest="=: = [75560,75561]"/>
  <match src="uint: uint [40610,40614]" dest="uint: uint [40610,40614]"/>
  <match src="number_literal: 0 [89731,89732]" dest="number_literal: 0 [90973,90974]"/>
  <match src="identifier: r [29820,29821]" dest="identifier: r [29820,29821]"/>
  <match src="identifier: maxRankNumber [67327,67340]" dest="identifier: maxRankNumber [67574,67587]"/>
  <match src="{: { [16762,16763]" dest="{: { [16762,16763]"/>
  <match src="identifier: isFirstTokenShard [71510,71527]" dest="identifier: isFirstTokenShard [71221,71238]"/>
  <match src="call_argument [89895,89896]" dest="call_argument [91142,91143]"/>
  <match src="): ) [58843,58844]" dest="): ) [58845,58846]"/>
  <match src="parameter [51640,51655]" dest="parameter [51642,51657]"/>
  <match src=",: , [61695,61696]" dest=",: , [61697,61698]"/>
  <match src="type_name [88559,88566]" dest="type_name [89407,89414]"/>
  <match src="parameter [103106,103116]" dest="parameter [103030,103040]"/>
  <match src="block_statement [34700,34746]" dest="block_statement [34700,34746]"/>
  <match src="member_expression [74107,74131]" dest="member_expression [73837,73862]"/>
  <match src="identifier: balanceOf [38919,38928]" dest="identifier: balanceOf [38919,38928]"/>
  <match src="identifier: numerator [89931,89940]" dest="identifier: accumulativSHDPerWeight [90234,90257]"/>
  <match src="identifier: sub [87696,87699]" dest="identifier: sub [88857,88860]"/>
  <match src=",: , [10070,10071]" dest=",: , [10070,10071]"/>
  <match src="call_expression [79880,79926]" dest="call_expression [80465,80511]"/>
  <match src="if: if [83016,83018]" dest="if: if [83795,83797]"/>
  <match src="identifier: uq112x112 [34722,34731]" dest="identifier: uq112x112 [34722,34731]"/>
  <match src="primitive_type [100441,100448]" dest="primitive_type [99784,99791]"/>
  <match src="call_expression [36455,36495]" dest="call_expression [36455,36495]"/>
  <match src="): ) [8908,8909]" dest="): ) [8908,8909]"/>
  <match src=",: , [28281,28282]" dest=",: , [28281,28282]"/>
  <match src="=: = [103378,103379]" dest="=: = [103302,103303]"/>
  <match src="]: ] [51739,51740]" dest="]: ] [51741,51742]"/>
  <match src="event_paramater [66681,66701]" dest="event_paramater [66934,66954]"/>
  <match src="state_mutability [37603,37607]" dest="state_mutability [37603,37607]"/>
  <match src=",: , [22410,22411]" dest=",: , [22410,22411]"/>
  <match src="identifier: owner [39006,39011]" dest="identifier: owner [39006,39011]"/>
  <match src="(: ( [36193,36194]" dest="(: ( [36193,36194]"/>
  <match src="): ) [10171,10172]" dest="): ) [10171,10172]"/>
  <match src="): ) [66177,66178]" dest="): ) [66195,66196]"/>
  <match src="function_definition [39215,39299]" dest="function_definition [39215,39299]"/>
  <match src="identifier: spender [51648,51655]" dest="identifier: spender [51650,51657]"/>
  <match src="type_name [33239,33248]" dest="type_name [33239,33248]"/>
  <match src="call_expression [104280,104350]" dest="call_expression [104204,104274]"/>
  <match src="number_literal: 0 [99896,99897]" dest="number_literal: 0 [98088,98089]"/>
  <match src="member_expression [36486,36494]" dest="member_expression [36486,36494]"/>
  <match src=".: . [104130,104131]" dest=".: . [104054,104055]"/>
  <match src="identifier: targetIndex [98870,98881]" dest="identifier: targetIndex [99059,99070]"/>
  <match src="uint256: uint256 [80363,80370]" dest="uint256: uint256 [80983,80990]"/>
  <match src="variable_declaration [82948,82966]" dest="variable_declaration [83727,83745]"/>
  <match src="virtual: virtual [54082,54089]" dest="virtual: virtual [54084,54091]"/>
  <match src="}: } [47159,47160]" dest="}: } [46546,46547]"/>
  <match src="(: ( [104780,104781]" dest="(: ( [104704,104705]"/>
  <match src=":: : [71148,71149]" dest=":: : [70859,70860]"/>
  <match src="parameter [40136,40143]" dest="parameter [40136,40143]"/>
  <match src="identifier: this [16789,16793]" dest="identifier: this [16789,16793]"/>
  <match src=",: , [51638,51639]" dest=",: , [51640,51641]"/>
  <match src="emit: emit [85007,85011]" dest="emit: emit [86307,86311]"/>
  <match src="identifier: poolInfo [71578,71586]" dest="identifier: poolInfo [71289,71297]"/>
  <match src="}: } [11041,11042]" dest="}: } [11041,11042]"/>
  <match src="assignment_expression [27360,27370]" dest="assignment_expression [27360,27370]"/>
  <match src="binary_expression [97326,97338]" dest="binary_expression [96091,96103]"/>
  <match src="): ) [96165,96166]" dest="): ) [95475,95476]"/>
  <match src="parameter [51454,51458]" dest="parameter [51456,51460]"/>
  <match src="call_argument [109667,109668]" dest="call_argument [109591,109592]"/>
  <match src="call_expression [95578,95602]" dest="call_expression [94726,94750]"/>
  <match src="variable_declaration [80187,80208]" dest="variable_declaration [80807,80828]"/>
  <match src="{: { [51993,51994]" dest="{: { [51995,51996]"/>
  <match src="): ) [106077,106078]" dest="): ) [106001,106002]"/>
  <match src="identifier: account [56546,56553]" dest="identifier: account [56548,56555]"/>
  <match src="if: if [100761,100763]" dest="if: if [100746,100748]"/>
  <match src="call_argument [77910,77918]" dest="call_argument [77145,77153]"/>
  <match src="function_definition [102330,102776]" dest="function_definition [102189,102700]"/>
  <match src="): ) [47006,47007]" dest="): ) [46393,46394]"/>
  <match src="address: address [25796,25803]" dest="address: address [25796,25803]"/>
  <match src="visibility [44654,44662]" dest="visibility [44656,44664]"/>
  <match src=".: . [89163,89164]" dest=".: . [90088,90089]"/>
  <match src="comment: // take the reciprocal of a UQ112x112 [37466,37503]" dest="comment: // take the reciprocal of a UQ112x112 [37466,37503]"/>
  <match src="function: function [39143,39151]" dest="function: function [39143,39151]"/>
  <match src="[: [ [93702,93703]" dest="[: [ [93350,93351]"/>
  <match src="): ) [76099,76100]" dest="): ) [75615,75616]"/>
  <match src="identifier: center [60896,60902]" dest="identifier: center [60898,60904]"/>
  <match src="}: } [61146,61147]" dest="}: } [61148,61149]"/>
  <match src="(: ( [106052,106053]" dest="(: ( [105976,105977]"/>
  <match src="}: } [77324,77325]" dest="}: } [76764,76765]"/>
  <match src="private: private [94754,94761]" dest="private: private [85136,85143]"/>
  <match src="if_statement [6263,6297]" dest="if_statement [6263,6297]"/>
  <match src="address: address [94366,94373]" dest="address: address [94012,94019]"/>
  <match src="address: address [94730,94737]" dest="address: address [97214,97221]"/>
  <match src="member_expression [71578,71597]" dest="member_expression [71289,71308]"/>
  <match src="member_expression [97078,97095]" dest="member_expression [95843,95860]"/>
  <match src="bool: bool [6869,6873]" dest="bool: bool [6869,6873]"/>
  <match src="binary_expression [87357,87367]" dest="binary_expression [88518,88528]"/>
  <match src="(: ( [56473,56474]" dest="(: ( [56475,56476]"/>
  <match src="}: } [37450,37451]" dest="}: } [37450,37451]"/>
  <match src="call_expression [100014,100059]" dest="call_expression [98719,98764]"/>
  <match src="number_literal: 0 [60260,60261]" dest="number_literal: 0 [60262,60263]"/>
  <match src="(: ( [28031,28032]" dest="(: ( [28031,28032]"/>
  <match src="indexed: indexed [25350,25357]" dest="indexed: indexed [25350,25357]"/>
  <match src="parameter [39101,39111]" dest="parameter [39101,39111]"/>
  <match src="expression_statement [94189,94212]" dest="expression_statement [93835,93858]"/>
  <match src="member_expression [83019,83045]" dest="member_expression [83798,83824]"/>
  <match src=".: . [79615,79616]" dest=".: . [79698,79699]"/>
  <match src="comment: // cumulative price is in (uq112x112 price * seconds) units so we simply wrap it after division by time elapsed [107591,107702]" dest="comment: // cumulative price is in (uq112x112 price * seconds) units so we simply wrap it after division by time elapsed [107515,107626]"/>
  <match src="call_argument [87769,87770]" dest="call_argument [88930,88931]"/>
  <match src="member_expression [73992,74012]" dest="member_expression [73722,73742]"/>
  <match src=".: . [87102,87103]" dest=".: . [88259,88260]"/>
  <match src="identifier: block [45590,45595]" dest="identifier: block [45592,45597]"/>
  <match src="number_literal: 0 [60583,60584]" dest="number_literal: 0 [60585,60586]"/>
  <match src="(: ( [87281,87282]" dest="(: ( [88442,88443]"/>
  <match src="identifier: PoolInfo [85843,85851]" dest="identifier: PoolInfo [87143,87151]"/>
  <match src="): ) [15253,15254]" dest="): ) [15253,15254]"/>
  <match src="(: ( [39491,39492]" dest="(: ( [39491,39492]"/>
  <match src="binary_expression [85709,85748]" dest="binary_expression [87009,87048]"/>
  <match src="primitive_type [33024,33031]" dest="primitive_type [33024,33031]"/>
  <match src="type_name [55601,55608]" dest="type_name [55603,55610]"/>
  <match src=".: . [106166,106167]" dest=".: . [106090,106091]"/>
  <match src="variable_declaration [100366,100399]" dest="variable_declaration [99708,99741]"/>
  <match src="augmented_assignment_expression [31462,31471]" dest="augmented_assignment_expression [31462,31471]"/>
  <match src="type_name [59256,59263]" dest="type_name [59258,59265]"/>
  <match src="call_argument [15740,15741]" dest="call_argument [15740,15741]"/>
  <match src="): ) [26857,26858]" dest="): ) [26857,26858]"/>
  <match src="identifier: size [13010,13014]" dest="identifier: size [13010,13014]"/>
  <match src="call_argument [15284,15290]" dest="call_argument [15284,15290]"/>
  <match src=".: . [80804,80805]" dest=".: . [81491,81492]"/>
  <match src="}: } [24631,24632]" dest="}: } [24631,24632]"/>
  <match src="call_argument [20889,20957]" dest="call_argument [20889,20957]"/>
  <match src="primitive_type [39709,39716]" dest="primitive_type [39709,39716]"/>
  <match src="identifier: from [61392,61396]" dest="identifier: from [61394,61398]"/>
  <match src="solidity: solidity [1672,1680]" dest="solidity: solidity [1672,1680]"/>
  <match src="pure: pure [35983,35987]" dest="pure: pure [35983,35987]"/>
  <match src="public: public [32626,32632]" dest="public: public [32626,32632]"/>
  <match src="call_argument [54893,54932]" dest="call_argument [54895,54934]"/>
  <match src="identifier: number [67392,67398]" dest="identifier: number [67639,67645]"/>
  <match src="block_statement [89766,89813]" dest="block_statement [91008,91055]"/>
  <match src="identifier: _startBlock [103786,103797]" dest="identifier: _startBlock [103710,103721]"/>
  <match src="primitive_type [92724,92731]" dest="primitive_type [92372,92379]"/>
  <match src="memory: memory [105809,105815]" dest="memory: memory [105733,105739]"/>
  <match src="=: = [80258,80259]" dest="=: = [80878,80879]"/>
  <match src="): ) [96302,96303]" dest="): ) [95612,95613]"/>
  <match src="number_literal: 0 [31623,31624]" dest="number_literal: 0 [31623,31624]"/>
  <match src="=: = [93401,93402]" dest="=: = [93049,93050]"/>
  <match src="): ) [10938,10939]" dest="): ) [10938,10939]"/>
  <match src="): ) [59611,59612]" dest="): ) [59613,59614]"/>
  <match src="(: ( [36756,36757]" dest="(: ( [36756,36757]"/>
  <match src=".: . [42543,42544]" dest=".: . [42543,42544]"/>
  <match src="call_expression [22385,22482]" dest="call_expression [22385,22482]"/>
  <match src="call_expression [99091,99111]" dest="call_expression [99259,99279]"/>
  <match src="identifier: _pool [97639,97644]" dest="identifier: _pool [96404,96409]"/>
  <match src="identifier: spender [21918,21925]" dest="identifier: spender [21918,21925]"/>
  <match src="visibility [39185,39193]" dest="visibility [39185,39193]"/>
  <match src="variable_declaration_statement [12919,12932]" dest="variable_declaration_statement [12919,12932]"/>
  <match src="=: = [61616,61617]" dest="=: = [61618,61619]"/>
  <match src="number_literal: 1 [36333,36334]" dest="number_literal: 1 [36333,36334]"/>
  <match src="number_literal: 0 [90309,90310]" dest="number_literal: 0 [91362,91363]"/>
  <match src="): ) [26814,26815]" dest="): ) [26814,26815]"/>
  <match src="parameter [84573,84585]" dest="parameter [85704,85716]"/>
  <match src="call_expression [93717,93766]" dest="call_expression [93365,93412]"/>
  <match src="': ' [37779,37780]" dest="': ' [37779,37780]"/>
  <match src="=: = [67757,67758]" dest="=: = [67971,67972]"/>
  <match src="identifier: require [57247,57254]" dest="identifier: require [57249,57256]"/>
  <match src="primitive_type [30213,30220]" dest="primitive_type [30213,30220]"/>
  <match src="call_expression [82705,82743]" dest="call_expression [83543,83581]"/>
  <match src="=: = [61949,61950]" dest="=: = [61951,61952]"/>
  <match src="identifier: SHDToken [67023,67031]" dest="identifier: SHDToken [67276,67284]"/>
  <match src="while_statement [60729,61158]" dest="while_statement [60731,61160]"/>
  <match src="primitive_type [14098,14105]" dest="primitive_type [14098,14105]"/>
  <match src="number_literal: 2085 [68442,68446]" dest="number_literal: 2085 [68426,68430]"/>
  <match src="assignment_expression [93429,93468]" dest="assignment_expression [93077,93116]"/>
  <match src="binary_expression [37817,37831]" dest="binary_expression [37817,37831]"/>
  <match src="identifier: x [28777,28778]" dest="identifier: x [28777,28778]"/>
  <match src="assignment_expression [87470,87492]" dest="assignment_expression [88631,88653]"/>
  <match src="): ) [107201,107202]" dest="): ) [107125,107126]"/>
  <match src="): ) [42571,42572]" dest="): ) [42571,42572]"/>
  <match src="type_cast_expression [84121,84140]" dest="type_cast_expression [84650,84669]"/>
  <match src="=: = [109326,109327]" dest="=: = [109250,109251]"/>
  <match src="storage: storage [79952,79959]" dest="storage: storage [80537,80544]"/>
  <match src="type_cast_expression [38095,38111]" dest="type_cast_expression [38095,38111]"/>
  <match src="function_body [15686,15764]" dest="function_body [15686,15764]"/>
  <match src="true: true [70471,70475]" dest="true: true [70182,70186]"/>
  <match src="bytes32: bytes32 [39601,39608]" dest="bytes32: bytes32 [39601,39608]"/>
  <match src="function_body [20648,20753]" dest="function_body [20648,20753]"/>
  <match src="variable_declaration [93961,93988]" dest="variable_declaration [93607,93634]"/>
  <match src="identifier: _count [87290,87296]" dest="identifier: _count [88451,88457]"/>
  <match src="primitive_type [4128,4135]" dest="primitive_type [4128,4135]"/>
  <match src=",: , [102373,102374]" dest=",: , [102232,102233]"/>
  <match src="assignment_expression [89497,89576]" dest="assignment_expression [90739,90818]"/>
  <match src="new_expression [93039,93052]" dest="new_expression [92687,92700]"/>
  <match src="external: external [71855,71863]" dest="external: external [71566,71574]"/>
  <match src="call_expression [101520,101557]" dest="call_expression [101255,101294]"/>
  <match src="return: return [16263,16269]" dest="return: return [16263,16269]"/>
  <match src="{: { [90311,90312]" dest="{: { [91364,91365]"/>
  <match src="number_literal: 1 [85057,85058]" dest="number_literal: 1 [86357,86358]"/>
  <match src="number_literal: 1 [31509,31510]" dest="number_literal: 1 [31509,31510]"/>
  <match src="identifier: pid [66896,66899]" dest="identifier: pid [67149,67152]"/>
  <match src=",: , [105600,105601]" dest=",: , [105524,105525]"/>
  <match src="call_argument [103473,103484]" dest="call_argument [103397,103408]"/>
  <match src="call_expression [89383,89418]" dest="call_expression [77716,77768]"/>
  <match src=".: . [60585,60586]" dest=".: . [60587,60588]"/>
  <match src="[: [ [86831,86832]" dest="[: [ [87986,87987]"/>
  <match src="identifier: blockTimestampLast [106835,106853]" dest="identifier: blockTimestampLast [106759,106777]"/>
  <match src="identifier: add [69199,69202]" dest="identifier: add [68910,68913]"/>
  <match src="primitive_type [94366,94373]" dest="primitive_type [94012,94019]"/>
  <match src="(: ( [35594,35595]" dest="(: ( [35594,35595]"/>
  <match src="primitive_type [77352,77359]" dest="primitive_type [76792,76799]"/>
  <match src="contract: contract [48880,48888]" dest="contract: contract [48882,48890]"/>
  <match src="=: = [47354,47355]" dest="=: = [47356,47357]"/>
  <match src="(: ( [75722,75723]" dest="(: ( [75238,75239]"/>
  <match src="identifier: invitorInfo [99810,99821]" dest="identifier: invitorInfo [98002,98013]"/>
  <match src="identifier: reserve0 [40317,40325]" dest="identifier: reserve0 [40317,40325]"/>
  <match src="(: ( [28124,28125]" dest="(: ( [28124,28125]"/>
  <match src="identifier: InvitationInfo [98521,98535]" dest="identifier: InvitationInfo [97286,97300]"/>
  <match src="identifier: _targetToken [104746,104758]" dest="identifier: _targetToken [104670,104682]"/>
  <match src="state_mutability [40234,40238]" dest="state_mutability [40234,40238]"/>
  <match src="!=: != [75651,75653]" dest="!=: != [75167,75169]"/>
  <match src="): ) [81858,81859]" dest="): ) [82690,82691]"/>
  <match src="}: } [249,250]" dest="}: } [249,250]"/>
  <match src="contract: contract [42985,42993]" dest="contract: contract [42985,42993]"/>
  <match src="identifier: sub [54183,54186]" dest="identifier: sub [54185,54188]"/>
  <match src="return: return [60438,60444]" dest="return: return [60440,60446]"/>
  <match src="&lt;: &lt; [29922,29923]" dest="&lt;: &lt; [29922,29923]"/>
  <match src="struct_member [63676,63698]" dest="struct_member [63678,63700]"/>
  <match src="binary_expression [104219,104250]" dest="binary_expression [104143,104174]"/>
  <match src="variable_declaration_statement [93320,93343]" dest="variable_declaration_statement [92968,92991]"/>
  <match src="private: private [64970,64977]" dest="private: private [64980,64987]"/>
  <match src="&lt;=: &lt;= [36321,36323]" dest="&lt;=: &lt;= [36321,36323]"/>
  <match src="comment: // range: [0, 2**112 - 1] [32388,32413]" dest="comment: // range: [0, 2**112 - 1] [32388,32413]"/>
  <match src="parameter [89002,89018]" dest="parameter [89850,89866]"/>
  <match src="number_literal: 2328 [68746,68750]" dest="number_literal: 2328 [68537,68541]"/>
  <match src="&gt;: &gt; [96190,96191]" dest="&gt;: &gt; [95500,95501]"/>
  <match src="): ) [40916,40917]" dest="): ) [40916,40917]"/>
  <match src="}: } [61215,61216]" dest="}: } [61217,61218]"/>
  <match src="): ) [67294,67295]" dest="): ) [67541,67542]"/>
  <match src="visibility [27499,27506]" dest="visibility [27499,27506]"/>
  <match src="uint256: uint256 [98473,98480]" dest="uint256: uint256 [97238,97245]"/>
  <match src="identifier: sender [86441,86447]" dest="identifier: sender [87729,87735]"/>
  <match src="if_statement [5666,5695]" dest="if_statement [5666,5695]"/>
  <match src="identifier: l [27369,27370]" dest="identifier: l [27369,27370]"/>
  <match src="identifier: _allowances [49069,49080]" dest="identifier: _allowances [49071,49082]"/>
  <match src="type_name [28958,28965]" dest="type_name [28958,28965]"/>
  <match src="identifier: existedDividend [79518,79533]" dest="identifier: existedDividend [78878,78893]"/>
  <match src="member_expression [36034,36042]" dest="member_expression [36034,36042]"/>
  <match src="}: } [32015,32016]" dest="}: } [32015,32016]"/>
  <match src="boolean_literal [70471,70475]" dest="boolean_literal [70182,70186]"/>
  <match src="inheritance_specifier [108742,108759]" dest="inheritance_specifier [108666,108683]"/>
  <match src="function: function [91025,91033]" dest="function: function [92050,92058]"/>
  <match src="identifier: result [37042,37048]" dest="identifier: result [37042,37048]"/>
  <match src="identifier: _term [103775,103780]" dest="identifier: _term [103699,103704]"/>
  <match src="identifier: spender [2715,2722]" dest="identifier: spender [2715,2722]"/>
  <match src="number_literal: 0 [97337,97338]" dest="number_literal: 0 [96102,96103]"/>
  <match src="): ) [37438,37439]" dest="): ) [37438,37439]"/>
  <match src="variable_declaration [38145,38164]" dest="variable_declaration [38145,38164]"/>
  <match src=",: , [21840,21841]" dest=",: , [21840,21841]"/>
  <match src="comment: /**      * @dev Returns the amount of tokens owned by `account`.      */ [1935,2009]" dest="comment: /**      * @dev Returns the amount of tokens owned by `account`.      */ [1935,2009]"/>
  <match src="]: ] [86840,86841]" dest="]: ] [87997,87998]"/>
  <match src="primitive_type [2747,2754]" dest="primitive_type [2747,2754]"/>
  <match src="public: public [50880,50886]" dest="public: public [50882,50888]"/>
  <match src="=: = [18046,18047]" dest="=: = [18046,18047]"/>
  <match src="uint256: uint256 [59642,59649]" dest="uint256: uint256 [59644,59651]"/>
  <match src="): ) [98500,98501]" dest="): ) [97265,97266]"/>
  <match src="): ) [105599,105600]" dest="): ) [105523,105524]"/>
  <match src=".: . [94667,94668]" dest=".: . [94313,94314]"/>
  <match src="}: } [29943,29944]" dest="}: } [29943,29944]"/>
  <match src="): ) [59190,59191]" dest="): ) [59192,59193]"/>
  <match src="=: = [104115,104116]" dest="=: = [104039,104040]"/>
  <match src="new: new [92980,92983]" dest="new: new [92628,92631]"/>
  <match src="comment: // Next check implicit zero balance [60513,60548]" dest="comment: // Next check implicit zero balance [60515,60550]"/>
  <match src="identifier: sub [103982,103985]" dest="identifier: sub [103906,103909]"/>
  <match src="primitive_type [63519,63526]" dest="primitive_type [63521,63528]"/>
  <match src="(: ( [33238,33239]" dest="(: ( [33238,33239]"/>
  <match src="(: ( [87699,87700]" dest="(: ( [88860,88861]"/>
  <match src="identifier: x [33293,33294]" dest="identifier: x [33293,33294]"/>
  <match src="visibility [66238,66244]" dest="visibility [66258,66264]"/>
  <match src="): ) [103059,103060]" dest="): ) [102983,102984]"/>
  <match src="if_statement [29224,29306]" dest="if_statement [29224,29306]"/>
  <match src="member_expression [72609,72626]" dest="member_expression [72301,72318]"/>
  <match src="return_statement [10183,10196]" dest="return_statement [10183,10196]"/>
  <match src="function_definition [28705,29944]" dest="function_definition [28705,29944]"/>
  <match src="identifier: _user [89138,89143]" dest="identifier: _user [89986,89991]"/>
  <match src="uint256: uint256 [80417,80424]" dest="uint256: uint256 [101538,101545]"/>
  <match src="identifier: developerDAOFund [44532,44548]" dest="identifier: developerDAOFund [44534,44550]"/>
  <match src="identifier: UserInfo [80302,80310]" dest="identifier: UserInfo [80922,80930]"/>
  <match src="): ) [55178,55179]" dest="): ) [55180,55181]"/>
  <match src="&lt;&lt;: &lt;&lt; [38340,38342]" dest="&lt;&lt;: &lt;&lt; [38340,38342]"/>
  <match src="primitive_type [21910,21917]" dest="primitive_type [21910,21917]"/>
  <match src="primitive_type [75469,75476]" dest="primitive_type [74985,74992]"/>
  <match src="member_expression [97063,97108]" dest="member_expression [95828,95873]"/>
  <match src="address: address [62106,62113]" dest="address: address [62108,62115]"/>
  <match src="number_literal: 0 [26508,26509]" dest="number_literal: 0 [26508,26509]"/>
  <match src=".: . [61571,61572]" dest=".: . [61573,61574]"/>
  <match src="identifier: startBlock [67473,67483]" dest="identifier: startBlock [67720,67730]"/>
  <match src="]: ] [89485,89486]" dest="]: ] [90727,90728]"/>
  <match src="type_cast_expression [22295,22308]" dest="type_cast_expression [22295,22308]"/>
  <match src=".: . [99835,99836]" dest=".: . [98027,98028]"/>
  <match src="): ) [35830,35831]" dest="): ) [35830,35831]"/>
  <match src="number_literal: 1 [30976,30977]" dest="number_literal: 1 [30976,30977]"/>
  <match src="call_argument [84414,84418]" dest="call_argument [84949,84953]"/>
  <match src=".: . [83084,83085]" dest=".: . [83863,83864]"/>
  <match src="member_expression [54148,54186]" dest="member_expression [54150,54188]"/>
  <match src="identifier: value [4399,4404]" dest="identifier: value [4399,4404]"/>
  <match src="parameter [6824,6833]" dest="parameter [6824,6833]"/>
  <match src="): ) [25519,25520]" dest="): ) [25519,25520]"/>
  <match src="=: = [98013,98014]" dest="=: = [96778,96779]"/>
  <match src="variable_declaration_statement [99941,99980]" dest="variable_declaration_statement [98646,98685]"/>
  <match src="identifier: _balances [55108,55117]" dest="identifier: _balances [55110,55119]"/>
  <match src="primitive_type [37201,37208]" dest="primitive_type [37201,37208]"/>
  <match src="(: ( [6286,6287]" dest="(: ( [6286,6287]"/>
  <match src="primitive_type [51987,51991]" dest="primitive_type [51989,51993]"/>
  <match src="uint256: uint256 [75469,75476]" dest="uint256: uint256 [74985,74992]"/>
  <match src="virtual: virtual [45907,45914]" dest="virtual: virtual [45909,45916]"/>
  <match src="&lt;: &lt; [82178,82179]" dest="&lt;: &lt; [83016,83017]"/>
  <match src="type_cast_expression [31610,31620]" dest="type_cast_expression [31610,31620]"/>
  <match src="number_literal: 0 [15740,15741]" dest="number_literal: 0 [15740,15741]"/>
  <match src="parameter [51938,51952]" dest="parameter [51940,51954]"/>
  <match src="parameter [33205,33214]" dest="parameter [33205,33214]"/>
  <match src="block_statement [31882,31916]" dest="block_statement [31882,31916]"/>
  <match src="block_statement [97784,97862]" dest="block_statement [96549,96627]"/>
  <match src="): ) [89763,89764]" dest="): ) [91005,91006]"/>
  <match src="}: } [103717,103718]" dest="}: } [103641,103642]"/>
  <match src="string: string [38713,38719]" dest="string: string [38713,38719]"/>
  <match src="identifier: to [61355,61357]" dest="identifier: to [61357,61359]"/>
  <match src="&lt;=: &lt;= [35738,35740]" dest="&lt;=: &lt;= [35738,35740]"/>
  <match src="): ) [31733,31734]" dest="): ) [31733,31734]"/>
  <match src=",: , [80131,80132]" dest=",: , [80716,80717]"/>
  <match src="): ) [46764,46765]" dest="): ) [47006,47007]"/>
  <match src="identifier: fee [46904,46907]" dest="identifier: fee [47146,47149]"/>
  <match src="identifier: otherPoolReward [78921,78936]" dest="identifier: otherPoolReward [78429,78444]"/>
  <match src="): ) [84363,84364]" dest="): ) [84898,84899]"/>
  <match src="(: ( [21255,21256]" dest="(: ( [21255,21256]"/>
  <match src="identifier: SHARDBal [96192,96200]" dest="identifier: SHARDBal [95502,95510]"/>
  <match src="identifier: data [15217,15221]" dest="identifier: data [15217,15221]"/>
  <match src="identifier: block [86401,86406]" dest="identifier: block [87689,87694]"/>
  <match src=",: , [34225,34226]" dest=",: , [34225,34226]"/>
  <match src="call_expression [30267,30318]" dest="call_expression [30267,30318]"/>
  <match src="}: } [46586,46587]" dest="}: } [46828,46829]"/>
  <match src="=: = [77452,77453]" dest="=: = [76892,76893]"/>
  <match src="comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [5975,6054]" dest="comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [5975,6054]"/>
  <match src="call_argument [85032,85059]" dest="call_argument [86332,86359]"/>
  <match src="type_name [38634,38641]" dest="type_name [38634,38641]"/>
  <match src="identifier: ActivityBase [42994,43006]" dest="identifier: ActivityBase [42994,43006]"/>
  <match src="indexed: indexed [4114,4121]" dest="indexed: indexed [4114,4121]"/>
  <match src="inheritance_specifier [294,311]" dest="inheritance_specifier [294,311]"/>
  <match src="identifier: amount1 [39683,39690]" dest="identifier: amount1 [39683,39690]"/>
  <match src="call_struct_argument [72968,72992]" dest="call_struct_argument [72650,72674]"/>
  <match src="call_expression [56536,56604]" dest="call_expression [56538,56606]"/>
  <match src="emit_statement [72730,72756]" dest="emit_statement [72783,72809]"/>
  <match src="identifier: _owner [25300,25306]" dest="identifier: _owner [25300,25306]"/>
  <match src="(: ( [74927,74928]" dest="(: ( [74798,74799]"/>
  <match src="variable_declaration_statement [73356,73420]" dest="variable_declaration_statement [73121,73185]"/>
  <match src="(: ( [109666,109667]" dest="(: ( [109590,109591]"/>
  <match src="variable_declaration [17013,17036]" dest="variable_declaration [17013,17036]"/>
  <match src="==: == [6202,6204]" dest="==: == [6202,6204]"/>
  <match src="identifier: price [98214,98219]" dest="identifier: price [96979,96984]"/>
  <match src="int256: int256 [34260,34266]" dest="int256: int256 [34260,34266]"/>
  <match src="*: * [41199,41200]" dest="*: * [41199,41200]"/>
  <match src="state_mutability [12697,12701]" dest="state_mutability [12697,12701]"/>
  <match src="{: { [101600,101601]" dest="{: { [101337,101338]"/>
  <match src="): ) [46864,46865]" dest="): ) [47106,47107]"/>
  <match src="primitive_type [10912,10918]" dest="primitive_type [10912,10918]"/>
  <match src="primitive_type [39423,39430]" dest="primitive_type [39423,39430]"/>
  <match src="type_name [95686,95695]" dest="type_name [94834,94843]"/>
  <match src="type_name [64501,64509]" dest="type_name [64503,64511]"/>
  <match src="parameter [54099,54103]" dest="parameter [54101,54105]"/>
  <match src="expression_statement [25962,26031]" dest="expression_statement [25962,26031]"/>
  <match src="identifier: unDividendShard [76566,76581]" dest="identifier: unDividendShard [76082,76097]"/>
  <match src="address: address [462,469]" dest="address: address [462,469]"/>
  <match src="]: ] [80351,80352]" dest="]: ] [80971,80972]"/>
  <match src="identifier: pending [83505,83512]" dest="identifier: pending [84376,84383]"/>
  <match src="identifier: invitation [94572,94582]" dest="identifier: invitation [94218,94228]"/>
  <match src="): ) [21940,21941]" dest="): ) [21940,21941]"/>
  <match src="identifier: functionCallWithValue [15704,15725]" dest="identifier: functionCallWithValue [15704,15725]"/>
  <match src="user_defined_type [22190,22196]" dest="user_defined_type [22190,22196]"/>
  <match src="): ) [30731,30732]" dest="): ) [30731,30732]"/>
  <match src="type_name [76660,76667]" dest="type_name [76176,76183]"/>
  <match src="function_definition [33617,33747]" dest="function_definition [33617,33747]"/>
  <match src="function: function [17336,17344]" dest="function: function [17336,17344]"/>
  <match src="return_type_definition [38830,38845]" dest="return_type_definition [38830,38845]"/>
  <match src="binary_expression [60244,60261]" dest="binary_expression [60246,60263]"/>
  <match src="call_expression [88855,88893]" dest="call_expression [89703,89741]"/>
  <match src="]: ] [93940,93941]" dest="]: ] [93586,93587]"/>
  <match src="type_name [9420,9427]" dest="type_name [9420,9427]"/>
  <match src="assignment_expression [83997,84012]" dest="assignment_expression [84526,84541]"/>
  <match src="): ) [18044,18045]" dest="): ) [18044,18045]"/>
  <match src="call_expression [18874,18892]" dest="call_expression [18874,18892]"/>
  <match src="primitive_type [43968,43972]" dest="primitive_type [43968,43972]"/>
  <match src=",: , [85962,85963]" dest=",: , [87261,87262]"/>
  <match src="(: ( [42552,42553]" dest="(: ( [42552,42553]"/>
  <match src="(: ( [29919,29920]" dest="(: ( [29919,29920]"/>
  <match src="number_literal: 0 [36974,36975]" dest="number_literal: 0 [36974,36975]"/>
  <match src="(: ( [53409,53410]" dest="(: ( [53411,53412]"/>
  <match src="): ) [56603,56604]" dest="): ) [56605,56606]"/>
  <match src="identifier: sender [39725,39731]" dest="identifier: sender [39725,39731]"/>
  <match src="): ) [75949,75950]" dest="): ) [75465,75466]"/>
  <match src="): ) [25976,25977]" dest="): ) [25976,25977]"/>
  <match src="primitive_type [75054,75061]" dest="primitive_type [80059,80066]"/>
  <match src="primitive_type [103503,103510]" dest="primitive_type [103427,103434]"/>
  <match src="primitive_type [41378,41384]" dest="primitive_type [41378,41384]"/>
  <match src="type_name [101955,101962]" dest="type_name [99859,99866]"/>
  <match src="identifier: _pid [90301,90305]" dest="identifier: _pid [91355,91359]"/>
  <match src="[: [ [61891,61892]" dest="[: [ [61893,61894]"/>
  <match src="identifier: updateTokenPriceTerm [65908,65928]" dest="identifier: updateTokenPriceTerm [65918,65938]"/>
  <match src="(: ( [15590,15591]" dest="(: ( [15590,15591]"/>
  <match src="mapping: mapping [44009,44016]" dest="mapping: mapping [44011,44018]"/>
  <match src="primitive_type [103436,103443]" dest="primitive_type [103360,103367]"/>
  <match src="identifier: _marketingFund [45882,45896]" dest="identifier: _marketingFund [45884,45898]"/>
  <match src="(: ( [46599,46600]" dest="(: ( [46841,46842]"/>
  <match src="(: ( [32029,32030]" dest="(: ( [32029,32030]"/>
  <match src="identifier: msg [81899,81902]" dest="identifier: msg [82731,82734]"/>
  <match src="(: ( [80743,80744]" dest="(: ( [81430,81431]"/>
  <match src="identifier: xx [29262,29264]" dest="identifier: xx [29262,29264]"/>
  <match src="type_cast_expression [25639,25649]" dest="type_cast_expression [25639,25649]"/>
  <match src="visibility [46179,46187]" dest="visibility [46181,46189]"/>
  <match src="primitive_type [97144,97151]" dest="primitive_type [95909,95916]"/>
  <match src="): ) [80079,80080]" dest="): ) [80664,80665]"/>
  <match src="(: ( [105118,105119]" dest="(: ( [105042,105043]"/>
  <match src="if_statement [109616,109681]" dest="if_statement [109540,109605]"/>
  <match src="uint224: uint224 [37345,37352]" dest="uint224: uint224 [37345,37352]"/>
  <match src="&gt;=:  &gt;= [19991,19994]" dest="&gt;=:  &gt;= [19991,19994]"/>
  <match src="member_expression [21809,21831]" dest="member_expression [21809,21831]"/>
  <match src="parameter [6869,6873]" dest="parameter [6869,6873]"/>
  <match src="(: ( [38343,38344]" dest="(: ( [38343,38344]"/>
  <match src="visibility [66024,66030]" dest="visibility [66036,66044]"/>
  <match src="storage: storage [106951,106958]" dest="storage: storage [106875,106882]"/>
  <match src="}: } [29392,29393]" dest="}: } [29392,29393]"/>
  <match src="identifier: timeElapsed [106679,106690]" dest="identifier: timeElapsed [106603,106614]"/>
  <match src="if_statement [23411,23635]" dest="if_statement [23411,23635]"/>
  <match src="(: ( [40645,40646]" dest="(: ( [40645,40646]"/>
  <match src="=: = [73397,73398]" dest="=: = [73162,73163]"/>
  <match src="returns: returns [90802,90809]" dest="returns: returns [91827,91834]"/>
  <match src="{: { [96262,96263]" dest="{: { [95572,95573]"/>
  <match src="[: [ [98815,98816]" dest="[: [ [99008,99009]"/>
  <match src="contract_body [5100,11873]" dest="contract_body [5100,11873]"/>
  <match src="state_mutability [8831,8835]" dest="state_mutability [8831,8835]"/>
  <match src="solidity: solidity [11942,11950]" dest="solidity: solidity [11942,11950]"/>
  <match src="(: ( [89529,89530]" dest="(: ( [90771,90772]"/>
  <match src="type_alias [20515,20523]" dest="type_alias [20515,20523]"/>
  <match src="pragma: pragma [24698,24704]" dest="pragma: pragma [24698,24704]"/>
  <match src="identifier: b [7758,7759]" dest="identifier: b [7758,7759]"/>
  <match src="identifier: div [83102,83105]" dest="identifier: div [83881,83884]"/>
  <match src="call_expression [80091,80153]" dest="call_expression [80676,80738]"/>
  <match src="call_expression [41860,41903]" dest="call_expression [41860,41903]"/>
  <match src="string_literal [30282,30317]" dest="string_literal [30282,30317]"/>
  <match src="returns: returns [104961,104968]" dest="returns: returns [104885,104892]"/>
  <match src="comment: // i.e. the bit at the index is set and the mask of all lower bits is 0 [31138,31209]" dest="comment: // i.e. the bit at the index is set and the mask of all lower bits is 0 [31138,31209]"/>
  <match src="identifier: getPriorVotes [59936,59949]" dest="identifier: getPriorVotes [59938,59951]"/>
  <match src="assignment_expression [57407,57443]" dest="assignment_expression [57409,57445]"/>
  <match src="{: { [16252,16253]" dest="{: { [16252,16253]"/>
  <match src="public: public [66128,66134]" dest="public: public [66661,66667]"/>
  <match src="identifier: z [34287,34288]" dest="identifier: z [34287,34288]"/>
  <match src="variable_declaration [34900,34919]" dest="variable_declaration [34900,34919]"/>
  <match src="(: ( [46317,46318]" dest="(: ( [46559,46560]"/>
  <match src="identifier: mul [90993,90996]" dest="identifier: mul [92018,92021]"/>
  <match src="uint256: uint256 [103728,103735]" dest="uint256: uint256 [103652,103659]"/>
  <match src="identifier: _oracleWeight [92828,92841]" dest="identifier: _oracleWeight [92476,92489]"/>
  <match src="uint256: uint256 [75870,75877]" dest="uint256: uint256 [75386,75393]"/>
  <match src="number_literal: 1 [61569,61570]" dest="number_literal: 1 [61571,61572]"/>
  <match src="]: ] [92992,92993]" dest="]: ] [92640,92641]"/>
  <match src="number_literal: 2319 [68727,68731]" dest="number_literal: 2319 [68532,68536]"/>
  <match src="=: = [78068,78069]" dest="=: = [77198,77199]"/>
  <match src="identifier: SHD [77901,77904]" dest="identifier: SHD [77136,77139]"/>
  <match src="contract_declaration [108,250]" dest="contract_declaration [108,250]"/>
  <match src="): ) [103705,103706]" dest="): ) [103629,103630]"/>
  <match src="expression_statement [59515,59583]" dest="expression_statement [59517,59585]"/>
  <match src="uint: uint [106659,106663]" dest="uint: uint [106583,106587]"/>
  <match src="type_name [66059,66066]" dest="type_name [66073,66080]"/>
  <match src="type_name [51454,51458]" dest="type_name [51456,51460]"/>
  <match src="return_statement [105673,105691]" dest="return_statement [105597,105615]"/>
  <match src="string_literal [37136,37168]" dest="string_literal [37136,37168]"/>
  <match src="return_type_definition [50741,50756]" dest="return_type_definition [50743,50758]"/>
  <match src="call_expression [69346,69418]" dest="call_expression [69057,69129]"/>
  <match src="identifier: description [72981,72992]" dest="identifier: description [72663,72674]"/>
  <match src="expression_statement [61656,61706]" dest="expression_statement [61658,61708]"/>
  <match src="identifier: user [100815,100819]" dest="identifier: user [100801,100805]"/>
  <match src="(: ( [76457,76458]" dest="(: ( [75973,75974]"/>
  <match src="type_name [59480,59487]" dest="type_name [59482,59489]"/>
  <match src="(: ( [29757,29758]" dest="(: ( [29757,29758]"/>
  <match src="identifier: amount0In [39846,39855]" dest="identifier: amount0In [39846,39855]"/>
  <match src="return_statement [104372,104391]" dest="return_statement [104296,104315]"/>
  <match src=",: , [103116,103117]" dest=",: , [103040,103041]"/>
  <match src="identifier: r [29789,29790]" dest="identifier: r [29789,29790]"/>
  <match src="identifier: _msgSender [51481,51491]" dest="identifier: _msgSender [51483,51493]"/>
  <match src="(: ( [36212,36213]" dest="(: ( [36212,36213]"/>
  <match src="=: = [107980,107981]" dest="=: = [107904,107905]"/>
  <match src="parameter [17790,17816]" dest="parameter [17790,17816]"/>
  <match src="(: ( [59033,59034]" dest="(: ( [59035,59036]"/>
  <match src="identifier: _feeRateDenominator [45194,45213]" dest="identifier: _feeRateDenominator [45196,45215]"/>
  <match src="identifier: rankPoolIndex [90354,90367]" dest="identifier: rankPoolIndex [91427,91440]"/>
  <match src="if: if [74023,74025]" dest="if: if [73753,73755]"/>
  <match src="identifier: _potential [88687,88697]" dest="identifier: _potential [89535,89545]"/>
  <match src="{: { [25805,25806]" dest="{: { [25805,25806]"/>
  <match src="identifier: from [20809,20813]" dest="identifier: from [20809,20813]"/>
  <match src="(: ( [106296,106297]" dest="(: ( [106220,106221]"/>
  <match src="comment: // produce 5760 blocks per day, 2102400 blocks per year. [103549,103605]" dest="comment: // produce 5760 blocks per day, 2102400 blocks per year. [103473,103529]"/>
  <match src="=: = [70907,70908]" dest="=: = [70618,70619]"/>
  <match src="variable_declaration [69642,69664]" dest="variable_declaration [69353,69375]"/>
  <match src="}: } [77184,77185]" dest="}: } [77969,77970]"/>
  <match src="expression_statement [99664,99699]" dest="expression_statement [97754,97789]"/>
  <match src="): ) [85550,85551]" dest="): ) [86850,86851]"/>
  <match src="if_statement [80644,81319]" dest="if_statement [81331,82008]"/>
  <match src="array_access [82113,82228]" dest="array_access [82951,83066]"/>
  <match src="call_argument [71598,71599]" dest="call_argument [71309,71310]"/>
  <match src="(: ( [56380,56381]" dest="(: ( [56382,56383]"/>
  <match src="]: ] [78322,78323]" dest="]: ] [77455,77456]"/>
  <match src="function_definition [109467,109688]" dest="function_definition [109391,109612]"/>
  <match src="emit_statement [73667,73698]" dest="emit_statement [73432,73463]"/>
  <match src="call_argument [22096,22118]" dest="call_argument [22096,22118]"/>
  <match src="return_type_definition [5940,5963]" dest="return_type_definition [5940,5963]"/>
  <match src="): ) [90760,90761]" dest="): ) [91785,91786]"/>
  <match src="variable_declaration [99420,99448]" dest="variable_declaration [97510,97538]"/>
  <match src="pragma: pragma [38456,38462]" dest="pragma: pragma [38456,38462]"/>
  <match src="return: return [94015,94021]" dest="return: return [93661,93667]"/>
  <match src="primitive_type [86000,86007]" dest="primitive_type [100130,100137]"/>
  <match src="{: { [50927,50928]" dest="{: { [50929,50930]"/>
  <match src=",: , [11727,11728]" dest=",: , [11727,11728]"/>
  <match src="mapping: mapping [64742,64749]" dest="mapping: mapping [64748,64755]"/>
  <match src="identifier: generateOrcaleInfo [104879,104897]" dest="identifier: generateOrcaleInfo [104803,104821]"/>
  <match src="return_type_definition [8836,8853]" dest="return_type_definition [8836,8853]"/>
  <match src="]: ] [89087,89088]" dest="]: ] [89935,89936]"/>
  <match src="identifier: UserInfo [89099,89107]" dest="identifier: UserInfo [89947,89955]"/>
  <match src="(: ( [37816,37817]" dest="(: ( [37816,37817]"/>
  <match src="string_literal [69401,69417]" dest="string_literal [69112,69128]"/>
  <match src="): ) [97095,97096]" dest="): ) [95860,95861]"/>
  <match src=",: , [22328,22329]" dest=",: , [22328,22329]"/>
  <match src="type_cast_expression [16781,16794]" dest="type_cast_expression [16781,16794]"/>
  <match src="&amp;: &amp; [31717,31718]" dest="&amp;: &amp; [31717,31718]"/>
  <match src="uint224: uint224 [107786,107793]" dest="uint224: uint224 [107710,107717]"/>
  <match src="type_name [28043,28050]" dest="type_name [28043,28050]"/>
  <match src="[: [ [59530,59531]" dest="[: [ [59532,59533]"/>
  <match src="): ) [96243,96244]" dest="): ) [95553,95554]"/>
  <match src="primitive_type [76218,76225]" dest="primitive_type [75734,75741]"/>
  <match src="call_argument [36874,36914]" dest="call_argument [36874,36914]"/>
  <match src="call_expression [22279,22318]" dest="call_expression [22279,22318]"/>
  <match src="!=: != [61397,61399]" dest="!=: != [61399,61401]"/>
  <match src="(: ( [70199,70200]" dest="(: ( [69910,69911]"/>
  <match src="view: view [94294,94298]" dest="view: view [93940,93944]"/>
  <match src="expression_statement [75788,75831]" dest="expression_statement [75304,75347]"/>
  <match src="type_name [88031,88038]" dest="type_name [80104,80111]"/>
  <match src="primitive_type [15626,15632]" dest="primitive_type [15626,15632]"/>
  <match src="): ) [54136,54137]" dest="): ) [54138,54139]"/>
  <match src="unary_expression [86860,86875]" dest="unary_expression [88017,88032]"/>
  <match src="): ) [2754,2755]" dest="): ) [2754,2755]"/>
  <match src="identifier: farmMintShard [76529,76542]" dest="identifier: farmMintShard [76045,76058]"/>
  <match src="member_expression [53422,53460]" dest="member_expression [53424,53462]"/>
  <match src="identifier: v [39587,39588]" dest="identifier: v [39587,39588]"/>
  <match src="identifier: poolInfo [108523,108531]" dest="identifier: poolInfo [108447,108455]"/>
  <match src="block_statement [69719,70640]" dest="block_statement [69430,70351]"/>
  <match src="(: ( [65495,65496]" dest="(: ( [65505,65506]"/>
  <match src=".: . [95027,95028]" dest=".: . [81130,81131]"/>
  <match src="): ) [103491,103492]" dest="): ) [103415,103416]"/>
  <match src="function_definition [33404,33531]" dest="function_definition [33404,33531]"/>
  <match src="identifier: name [38683,38687]" dest="identifier: name [38683,38687]"/>
  <match src="identifier: x [30335,30336]" dest="identifier: x [30335,30336]"/>
  <match src="array_access [57407,57425]" dest="array_access [57409,57427]"/>
  <match src="uint256: uint256 [51405,51412]" dest="uint256: uint256 [51407,51414]"/>
  <match src="number_literal: 0 [101597,101598]" dest="number_literal: 0 [101334,101335]"/>
  <match src="uint256: uint256 [77405,77412]" dest="uint256: uint256 [76845,76852]"/>
  <match src="): ) [45896,45897]" dest="): ) [45898,45899]"/>
  <match src="identifier: price1Cumulative [41841,41857]" dest="identifier: price1Cumulative [41841,41857]"/>
  <match src="type_name [94366,94373]" dest="type_name [94012,94019]"/>
  <match src="}: } [59812,59813]" dest="}: } [59814,59815]"/>
  <match src="public: public [49986,49992]" dest="public: public [49988,49994]"/>
  <match src="identifier: otherPoolDividendWeight [76390,76413]" dest="identifier: otherPoolDividendWeight [75906,75929]"/>
  <match src="): ) [5390,5391]" dest="): ) [5390,5391]"/>
  <match src="number_literal: 0 [6583,6584]" dest="number_literal: 0 [6583,6584]"/>
  <match src="uint256: uint256 [95525,95532]" dest="uint256: uint256 [94673,94680]"/>
  <match src=",: , [20610,20611]" dest=",: , [20610,20611]"/>
  <match src="(: ( [41801,41802]" dest="(: ( [41801,41802]"/>
  <match src=",: , [6220,6221]" dest=",: , [6220,6221]"/>
  <match src="}: } [104810,104811]" dest="}: } [104734,104735]"/>
  <match src="type_name [57171,57178]" dest="type_name [57173,57180]"/>
  <match src="identifier: isFirstTokenEth [64030,64045]" dest="identifier: isFirstTokenEth [64032,64047]"/>
  <match src="]: ] [73629,73630]" dest="]: ] [73394,73395]"/>
  <match src="variable_declaration [85360,85381]" dest="variable_declaration [86660,86681]"/>
  <match src="return_type_definition [33673,33690]" dest="return_type_definition [33673,33690]"/>
  <match src="block_statement [109627,109681]" dest="block_statement [109551,109605]"/>
  <match src="member_expression [99782,99807]" dest="member_expression [97974,97999]"/>
  <match src="visibility [28730,28738]" dest="visibility [28730,28738]"/>
  <match src="primitive_type [99709,99716]" dest="primitive_type [97901,97908]"/>
  <match src="assignment_expression [84055,84072]" dest="assignment_expression [84584,84601]"/>
  <match src="internal: internal [61323,61331]" dest="internal: internal [61325,61333]"/>
  <match src="identifier: usersRelationshipInfo [64784,64805]" dest="identifier: usersRelationshipInfo [64792,64813]"/>
  <match src="parameter [19202,19225]" dest="parameter [19202,19225]"/>
  <match src="call_argument [36048,36085]" dest="call_argument [36048,36085]"/>
  <match src="): ) [108480,108481]" dest="): ) [108404,108405]"/>
  <match src="assignment_expression [74680,74823]" dest="assignment_expression [74432,74514]"/>
  <match src="call_argument [56491,56492]" dest="call_argument [56493,56494]"/>
  <match src="identifier: tokenToEthPairInfo [97904,97922]" dest="identifier: tokenToEthPairInfo [96669,96687]"/>
  <match src="expression_statement [82260,82282]" dest="expression_statement [83098,83120]"/>
  <match src="private: private [32860,32867]" dest="private: private [32860,32867]"/>
  <match src=".: . [104183,104184]" dest=".: . [104107,104108]"/>
  <match src="type_name [40724,40728]" dest="type_name [40724,40728]"/>
  <match src="pragma_directive [42954,42977]" dest="pragma_directive [42954,42977]"/>
  <match src="expression_statement [46723,46796]" dest="expression_statement [46965,47038]"/>
  <match src="identifier: a [5272,5273]" dest="identifier: a [5272,5273]"/>
  <match src="solidity_version: 0.4.0 [32242,32247]" dest="solidity_version: 0.4.0 [32242,32247]"/>
  <match src="&gt;&gt;=: &gt;&gt;= [29521,29524]" dest="&gt;&gt;=: &gt;&gt;= [29521,29524]"/>
  <match src="type_alias [41184,41194]" dest="type_alias [41184,41194]"/>
  <match src="binary_expression [21605,21615]" dest="binary_expression [21605,21615]"/>
  <match src="[: [ [92818,92819]" dest="[: [ [92466,92467]"/>
  <match src="(: ( [17472,17473]" dest="(: ( [17472,17473]"/>
  <match src=".: . [97738,97739]" dest=".: . [96503,96504]"/>
  <match src="memory: memory [16709,16715]" dest="memory: memory [16709,16715]"/>
  <match src="type_name [5595,5602]" dest="type_name [5595,5602]"/>
  <match src="string [44296,44311]" dest="string [44298,44313]"/>
  <match src=".: . [84132,84133]" dest=".: . [84661,84662]"/>
  <match src="variable_declaration_statement [80463,80496]" dest="variable_declaration_statement [81148,81181]"/>
  <match src=".: . [107364,107365]" dest=".: . [107288,107289]"/>
  <match src="]: ] [100923,100924]" dest="]: ] [100986,100987]"/>
  <match src="block_statement [29247,29306]" dest="block_statement [29247,29306]"/>
  <match src="inheritance_specifier [58756,58783]" dest="inheritance_specifier [58758,58785]"/>
  <match src="=: = [80480,80481]" dest="=: = [81165,81166]"/>
  <match src="identifier: b [8873,8874]" dest="identifier: b [8873,8874]"/>
  <match src="): ) [34876,34877]" dest="): ) [34876,34877]"/>
  <match src="): ) [15755,15756]" dest="): ) [15755,15756]"/>
  <match src="array_access [102456,102470]" dest="array_access [102315,102329]"/>
  <match src="parameter [2330,2347]" dest="parameter [2330,2347]"/>
  <match src="call_argument [37209,37215]" dest="call_argument [37209,37215]"/>
  <match src="uint8: uint8 [38839,38844]" dest="uint8: uint8 [38839,38844]"/>
  <match src="expression_statement [69999,70027]" dest="expression_statement [69710,69738]"/>
  <match src="): ) [37592,37593]" dest="): ) [37592,37593]"/>
  <match src="primitive_type [49552,49558]" dest="primitive_type [49554,49560]"/>
  <match src="expression_statement [95613,95654]" dest="expression_statement [94761,94802]"/>
  <match src="number_literal: 2370 [68841,68845]" dest="number_literal: 2370 [68562,68566]"/>
  <match src="}: } [68990,68991]" dest="}: } [68701,68702]"/>
  <match src="identifier: poolInfo [85873,85881]" dest="identifier: poolInfo [87173,87181]"/>
  <match src="call_expression [81231,81256]" dest="call_expression [81920,81945]"/>
  <match src="parameter [3839,3853]" dest="parameter [3839,3853]"/>
  <match src="&gt;=: &gt;= [16803,16805]" dest="&gt;=: &gt;= [16803,16805]"/>
  <match src="function_body [20851,20966]" dest="function_body [20851,20966]"/>
  <match src="address: address [69707,69714]" dest="address: address [69418,69425]"/>
  <match src="(: ( [86361,86362]" dest="(: ( [87649,87650]"/>
  <match src="(: ( [103966,103967]" dest="(: ( [103890,103891]"/>
  <match src=",: , [76781,76782]" dest=",: , [76297,76298]"/>
  <match src="internal: internal [33659,33667]" dest="internal: internal [33659,33667]"/>
  <match src="primitive_type [23331,23338]" dest="primitive_type [23331,23338]"/>
  <match src="identifier: user [100939,100943]" dest="identifier: user [101097,101101]"/>
  <match src="{: { [34700,34701]" dest="{: { [34700,34701]"/>
  <match src="identifier: targetPid [86295,86304]" dest="identifier: targetPid [87583,87592]"/>
  <match src="expression_statement [85490,85552]" dest="expression_statement [86790,86852]"/>
  <match src="(: ( [98032,98033]" dest="(: ( [96797,96798]"/>
  <match src="function_definition [40566,40626]" dest="function_definition [40566,40626]"/>
  <match src="identifier: tokenToEthSwap [106260,106274]" dest="identifier: tokenToEthSwap [106184,106198]"/>
  <match src="identifier: price [97799,97804]" dest="identifier: price [96564,96569]"/>
  <match src="comment: // Withdraw LP tokens from MasterChef. [82375,82413]" dest="comment: // Withdraw LP tokens from MasterChef. [83213,83251]"/>
  <match src="identifier: reserve0 [42435,42443]" dest="identifier: reserve0 [42435,42443]"/>
  <match src="{: { [74211,74212]" dest="{: { [73942,73943]"/>
  <match src="parameter [30213,30222]" dest="parameter [30213,30222]"/>
  <match src="member_expression [84226,84244]" dest="member_expression [84755,84773]"/>
  <match src="type_name [49153,49159]" dest="type_name [49155,49161]"/>
  <match src="=: = [106733,106734]" dest="=: = [106657,106658]"/>
  <match src="virtual: virtual [51669,51676]" dest="virtual: virtual [51671,51678]"/>
  <match src="(: ( [103767,103768]" dest="(: ( [103691,103692]"/>
  <match src="primitive_type [19023,19028]" dest="primitive_type [19023,19028]"/>
  <match src="call_argument [25639,25649]" dest="call_argument [25639,25649]"/>
  <match src="mapping: mapping [64313,64320]" dest="mapping: mapping [64315,64322]"/>
  <match src="(: ( [40308,40309]" dest="(: ( [40308,40309]"/>
  <match src="call_expression [55740,55789]" dest="call_expression [55742,55791]"/>
  <match src="parameter [39053,39057]" dest="parameter [39053,39057]"/>
  <match src=",: , [52740,52741]" dest=",: , [52742,52743]"/>
  <match src="identifier: _withUpdate [75965,75976]" dest="identifier: _withUpdate [75481,75492]"/>
  <match src="expression_statement [59593,59613]" dest="expression_statement [59595,59615]"/>
  <match src="(: ( [96289,96290]" dest="(: ( [95599,95600]"/>
  <match src="identifier: lower [61058,61063]" dest="identifier: lower [61060,61065]"/>
  <match src="memory: memory [36007,36013]" dest="memory: memory [36007,36013]"/>
  <match src="view: view [40295,40299]" dest="view: view [40295,40299]"/>
  <match src=".: . [72344,72345]" dest=".: . [72099,72100]"/>
  <match src="view: view [38884,38888]" dest="view: view [38884,38888]"/>
  <match src="state_mutability [46188,46192]" dest="state_mutability [46190,46194]"/>
  <match src="identifier: nCheckpoints [60466,60478]" dest="identifier: nCheckpoints [60468,60480]"/>
  <match src="string [86877,86902]" dest="string [88034,88059]"/>
  <match src="(: ( [16291,16292]" dest="(: ( [16291,16292]"/>
  <match src="if: if [19301,19303]" dest="if: if [19301,19303]"/>
  <match src="string [37668,37712]" dest="string [37668,37712]"/>
  <match src="function: function [15569,15577]" dest="function: function [15569,15577]"/>
  <match src="variable_declaration [99941,99962]" dest="variable_declaration [98646,98667]"/>
  <match src="identifier: uq112x112 [32457,32466]" dest="identifier: uq112x112 [32457,32466]"/>
  <match src="(: ( [33500,33501]" dest="(: ( [33500,33501]"/>
  <match src="identifier: lpTokenAmount [85975,85988]" dest="identifier: lpTokenAmount [87274,87287]"/>
  <match src=",: , [20813,20814]" dest=",: , [20813,20814]"/>
  <match src="uint256: uint256 [12919,12926]" dest="uint256: uint256 [12919,12926]"/>
  <match src="=: = [74088,74089]" dest="=: = [73818,73819]"/>
  <match src="member_expression [97288,97307]" dest="member_expression [96053,96072]"/>
  <match src="type_cast_expression [57264,57274]" dest="type_cast_expression [57266,57276]"/>
  <match src="]: ] [61570,61571]" dest="]: ] [61572,61573]"/>
  <match src="(: ( [25518,25519]" dest="(: ( [25518,25519]"/>
  <match src="type_name [15607,15612]" dest="type_name [15607,15612]"/>
  <match src="number_literal: 0 [46953,46954]" dest="number_literal: 0 [46340,46341]"/>
  <match src=",: , [56327,56328]" dest=",: , [56329,56330]"/>
  <match src="parameter [40327,40343]" dest="parameter [40327,40343]"/>
  <match src="expression_statement [68005,68036]" dest="expression_statement [68257,68288]"/>
  <match src="identifier: r [29642,29643]" dest="identifier: r [29642,29643]"/>
  <match src=",: , [40739,40740]" dest=",: , [40739,40740]"/>
  <match src="type_name [89002,89009]" dest="type_name [89850,89857]"/>
  <match src="(: ( [86576,86577]" dest="(: ( [87864,87865]"/>
  <match src="type_name [38531,38538]" dest="type_name [38531,38538]"/>
  <match src="external: external [40592,40600]" dest="external: external [40592,40600]"/>
  <match src="call_argument [28222,28250]" dest="call_argument [28222,28250]"/>
  <match src="member_expression [98816,98846]" dest="member_expression [99009,99039]"/>
  <match src="{: { [59666,59667]" dest="{: { [59668,59669]"/>
  <match src="return: return [6614,6620]" dest="return: return [6614,6620]"/>
  <match src="&gt;: &gt; [31838,31839]" dest="&gt;: &gt; [31838,31839]"/>
  <match src="=: = [109657,109658]" dest="=: = [109581,109582]"/>
  <match src="{: { [9474,9475]" dest="{: { [9474,9475]"/>
  <match src="{: { [29054,29055]" dest="{: { [29054,29055]"/>
  <match src="member_expression [83290,83315]" dest="member_expression [84275,84300]"/>
  <match src="primitive_type [7685,7692]" dest="primitive_type [7685,7692]"/>
  <match src="primitive_type [6235,6242]" dest="primitive_type [6235,6242]"/>
  <match src="type_name [43928,43974]" dest="type_name [43928,43974]"/>
  <match src="(: ( [60357,60358]" dest="(: ( [60359,60360]"/>
  <match src="pure: pure [31264,31268]" dest="pure: pure [31264,31268]"/>
  <match src="number_literal: 0x8 [29580,29583]" dest="number_literal: 0x8 [29580,29583]"/>
  <match src="(: ( [13029,13030]" dest="(: ( [13029,13030]"/>
  <match src="type_name [38579,38583]" dest="type_name [38579,38583]"/>
  <match src="=: = [44402,44403]" dest="=: = [44404,44405]"/>
  <match src="identifier: targetIndex [99241,99252]" dest="identifier: targetIndex [99401,99412]"/>
  <match src="primitive_type [51102,51109]" dest="primitive_type [51104,51111]"/>
  <match src="uint256: uint256 [11729,11736]" dest="uint256: uint256 [11729,11736]"/>
  <match src="member_expression [97187,97232]" dest="member_expression [95952,95997]"/>
  <match src="function_body [93950,94040]" dest="function_body [93596,93686]"/>
  <match src="pure: pure [19263,19267]" dest="pure: pure [19263,19267]"/>
  <match src="visibility [33035,33043]" dest="visibility [33035,33043]"/>
  <match src="block_statement [32082,32116]" dest="block_statement [32082,32116]"/>
  <match src="parameter [44101,44128]" dest="parameter [44103,44130]"/>
  <match src="memory: memory [42863,42869]" dest="memory: memory [42863,42869]"/>
  <match src="struct_member [63491,63509]" dest="struct_member [63493,63511]"/>
  <match src="if_statement [104733,104811]" dest="if_statement [104657,104735]"/>
  <match src="call_expression [18048,18071]" dest="call_expression [18048,18071]"/>
  <match src="{: { [60050,60051]" dest="{: { [60052,60053]"/>
  <match src=",: , [92664,92665]" dest=",: , [92312,92313]"/>
  <match src="{: { [98175,98176]" dest="{: { [96940,96941]"/>
  <match src="assignment_expression [88735,88762]" dest="assignment_expression [89583,89610]"/>
  <match src="(: ( [81017,81018]" dest="(: ( [81704,81705]"/>
  <match src="(: ( [38530,38531]" dest="(: ( [38530,38531]"/>
  <match src="assignment_expression [29629,29649]" dest="assignment_expression [29629,29649]"/>
  <match src="state_mutability [9451,9455]" dest="state_mutability [9451,9455]"/>
  <match src="identifier: PoolInfo [82840,82848]" dest="identifier: PoolInfo [83678,83686]"/>
  <match src="call_argument [15292,15296]" dest="call_argument [15292,15296]"/>
  <match src="): ) [80669,80670]" dest="): ) [81356,81357]"/>
  <match src="tuple_expression [88824,88852]" dest="tuple_expression [89672,89700]"/>
  <match src=",: , [38632,38633]" dest=",: , [38632,38633]"/>
  <match src="}: } [104205,104206]" dest="}: } [104129,104130]"/>
  <match src="number_literal: 2 [27757,27758]" dest="number_literal: 2 [27757,27758]"/>
  <match src="identifier: _toBlock [78792,78800]" dest="identifier: _toBlock [78372,78380]"/>
  <match src="binary_expression [44258,44281]" dest="binary_expression [44260,44283]"/>
  <match src="external: external [75536,75544]" dest="external: external [75052,75060]"/>
  <match src=",: , [42879,42880]" dest=",: , [42879,42880]"/>
  <match src="}: } [36425,36426]" dest="}: } [36425,36426]"/>
  <match src="(: ( [97732,97733]" dest="(: ( [96497,96498]"/>
  <match src="}: } [29946,29947]" dest="}: } [29946,29947]"/>
  <match src="identifier: _amount [98302,98309]" dest="identifier: _amount [97067,97074]"/>
  <match src="==: == [36109,36111]" dest="==: == [36109,36111]"/>
  <match src=",: , [10899,10900]" dest=",: , [10899,10900]"/>
  <match src="solidity_pragma_token [4478,4501]" dest="solidity_pragma_token [4478,4501]"/>
  <match src="parameter [22924,22941]" dest="parameter [22924,22941]"/>
  <match src="identifier: pool [85377,85381]" dest="identifier: pool [86677,86681]"/>
  <match src="uint256: uint256 [32594,32601]" dest="uint256: uint256 [32594,32601]"/>
  <match src="/: / [29702,29703]" dest="/: / [29702,29703]"/>
  <match src="type_name [103162,103169]" dest="type_name [103086,103093]"/>
  <match src="visibility [33892,33900]" dest="visibility [33892,33900]"/>
  <match src="{: { [37235,37236]" dest="{: { [37235,37236]"/>
  <match src="call_argument [80796,80849]" dest="call_argument [81483,81536]"/>
  <match src="binary_expression [87789,87807]" dest="binary_expression [88950,88968]"/>
  <match src="identifier: _pid [82276,82280]" dest="identifier: _pid [83114,83118]"/>
  <match src="function_definition [3817,3914]" dest="function_definition [3817,3914]"/>
  <match src="address: address [94397,94404]" dest="address: address [94043,94050]"/>
  <match src="type_name [95340,95347]" dest="type_name [94488,94495]"/>
  <match src="function_body [38000,38380]" dest="function_body [38000,38380]"/>
  <match src="number_literal: 64 [29177,29179]" dest="number_literal: 64 [29177,29179]"/>
  <match src="identifier: x [30882,30883]" dest="identifier: x [30882,30883]"/>
  <match src="(: ( [21636,21637]" dest="(: ( [21636,21637]"/>
  <match src="primitive_type [58576,58583]" dest="primitive_type [58578,58585]"/>
  <match src="uint256: uint256 [27213,27220]" dest="uint256: uint256 [27213,27220]"/>
  <match src="external: external [40832,40840]" dest="external: external [40832,40840]"/>
  <match src="number_literal: 5 [68034,68035]" dest="number_literal: 5 [68286,68287]"/>
  <match src="&quot;: &quot; [69401,69402]" dest="&quot;: &quot; [69112,69113]"/>
  <match src="identifier: length [95551,95557]" dest="identifier: length [94699,94705]"/>
  <match src="call_expression [97807,97850]" dest="call_expression [96572,96615]"/>
  <match src="identifier: x [30907,30908]" dest="identifier: x [30907,30908]"/>
  <match src="type_name [87718,87725]" dest="type_name [88879,88886]"/>
  <match src="augmented_assignment_expression [30665,30673]" dest="augmented_assignment_expression [30665,30673]"/>
  <match src="member_expression [100905,100923]" dest="member_expression [100968,100986]"/>
  <match src="&gt;: &gt; [85589,85590]" dest="&gt;: &gt; [86889,86890]"/>
  <match src="state_variable_declaration [43561,43594]" dest="state_variable_declaration [43561,43594]"/>
  <match src="&quot;: &quot; [67273,67274]" dest="&quot;: &quot; [67520,67521]"/>
  <match src="&quot;: &quot; [52843,52844]" dest="&quot;: &quot; [52845,52846]"/>
  <match src=",: , [68826,68827]" dest=",: , [68561,68562]"/>
  <match src="&lt;&lt;=: &lt;&lt;= [29096,29099]" dest="&lt;&lt;=: &lt;&lt;= [29096,29099]"/>
  <match src="**: ** [41431,41433]" dest="**: ** [41431,41433]"/>
  <match src="function_body [28020,28293]" dest="function_body [28020,28293]"/>
  <match src="=: = [67692,67693]" dest="=: = [67906,67907]"/>
  <match src="assignment_expression [44705,44751]" dest="assignment_expression [44707,44753]"/>
  <match src="(: ( [19855,19856]" dest="(: ( [19855,19856]"/>
  <match src="identifier: sub [80805,80808]" dest="identifier: sub [81492,81495]"/>
  <match src="primitive_type [44627,44634]" dest="primitive_type [44629,44636]"/>
  <match src="number_literal: 0 [46368,46369]" dest="number_literal: 0 [46610,46611]"/>
  <match src="bytes32: bytes32 [39590,39597]" dest="bytes32: bytes32 [39590,39597]"/>
  <match src="member_expression [99350,99386]" dest="member_expression [99502,99538]"/>
  <match src="member_expression [34669,34693]" dest="member_expression [34669,34693]"/>
  <match src="expression_statement [29629,29650]" dest="expression_statement [29629,29650]"/>
  <match src="): ) [7737,7738]" dest="): ) [7737,7738]"/>
  <match src="member_expression [79196,79223]" dest="member_expression [79351,79378]"/>
  <match src="identifier: _invitor [87113,87121]" dest="identifier: _invitor [88270,88278]"/>
  <match src="parameter [53329,53347]" dest="parameter [53331,53349]"/>
  <match src="yul_identifier [19713,19723]" dest="yul_identifier [19713,19723]"/>
  <match src="function_definition [54006,54275]" dest="function_definition [54008,54277]"/>
  <match src="number_literal: 2298 [68689,68693]" dest="number_literal: 2298 [68522,68526]"/>
  <match src="identifier: amount0 [40681,40688]" dest="identifier: amount0 [40681,40688]"/>
  <match src="identifier: _devDividend [46242,46254]" dest="identifier: _devDividend [46244,46256]"/>
  <match src="identifier: LOWER_MASK [34866,34876]" dest="identifier: LOWER_MASK [34866,34876]"/>
  <match src="primitive_type [95686,95693]" dest="primitive_type [94834,94841]"/>
  <match src="uint256: uint256 [65657,65664]" dest="uint256: uint256 [65667,65674]"/>
  <match src="member_expression [98023,98056]" dest="member_expression [96788,96821]"/>
  <match src="identifier: _pid [85247,85251]" dest="identifier: _pid [86547,86551]"/>
  <match src="identifier: isFirstTokenShard [69647,69664]" dest="identifier: isFirstTokenShard [69358,69375]"/>
  <match src="(: ( [31725,31726]" dest="(: ( [31725,31726]"/>
  <match src=".: . [61202,61203]" dest=".: . [61204,61205]"/>
  <match src="==: == [47448,47450]" dest="==: == [47450,47452]"/>
  <match src="type_name [104898,104912]" dest="type_name [104822,104836]"/>
  <match src="bytes: bytes [40770,40775]" dest="bytes: bytes [40770,40775]"/>
  <match src="identifier: currentRankLastIndex [72308,72328]" dest="identifier: addDividend [74094,74105]"/>
  <match src="member_expression [84723,84735]" dest="member_expression [85854,85866]"/>
  <match src="identifier: accumulativeDividend [84881,84901]" dest="identifier: accumulativeDividend [86012,86032]"/>
  <match src="call_argument [34440,34441]" dest="call_argument [34440,34441]"/>
  <match src="if: if [31493,31495]" dest="if: if [31493,31495]"/>
  <match src="]: ] [85397,85398]" dest="]: ] [86697,86698]"/>
  <match src="memory: memory [11747,11753]" dest="memory: memory [11747,11753]"/>
  <match src="augmented_assignment_expression [29262,29271]" dest="augmented_assignment_expression [29262,29271]"/>
  <match src="}: } [58623,58624]" dest="}: } [58625,58626]"/>
  <match src="primitive_type [98862,98869]" dest="primitive_type [99051,99058]"/>
  <match src="if: if [90036,90038]" dest="if: if [90285,90287]"/>
  <match src="parameter [36820,36836]" dest="parameter [36820,36836]"/>
  <match src="identifier: value [39268,39273]" dest="identifier: value [39268,39273]"/>
  <match src="type_name [995,1000]" dest="type_name [995,1000]"/>
  <match src="visibility [44038,44044]" dest="visibility [44040,44046]"/>
  <match src="function_body [62220,62702]" dest="function_body [62222,62704]"/>
  <match src=".: . [96220,96221]" dest=".: . [95530,95531]"/>
  <match src="uint256: uint256 [66809,66816]" dest="uint256: uint256 [67062,67069]"/>
  <match src="}: } [42601,42602]" dest="}: } [42601,42602]"/>
  <match src="number_literal: 0 [62309,62310]" dest="number_literal: 0 [62311,62312]"/>
  <match src="parameter [968,984]" dest="parameter [968,984]"/>
  <match src="binary_expression [29638,29643]" dest="binary_expression [29638,29643]"/>
  <match src="call_argument [46434,46460]" dest="call_argument [46676,46702]"/>
  <match src="identifier: invitor [99502,99509]" dest="identifier: invitor [97592,97599]"/>
  <match src="{: { [41171,41172]" dest="{: { [41171,41172]"/>
  <match src="string_literal [55693,55726]" dest="string_literal [55695,55728]"/>
  <match src="variable_declaration [69429,69464]" dest="variable_declaration [69140,69175]"/>
  <match src="number_literal: 1 [72283,72284]" dest="number_literal: 1 [72161,72162]"/>
  <match src="identifier: NewImplementation [398,415]" dest="identifier: NewImplementation [398,415]"/>
  <match src="==: == [77007,77009]" dest="==: == [76523,76525]"/>
  <match src="*: * [27863,27864]" dest="*: * [27863,27864]"/>
  <match src="(: ( [5594,5595]" dest="(: ( [5594,5595]"/>
  <match src="return_type_definition [102938,102955]" dest="return_type_definition [102862,102879]"/>
  <match src="return: return [5677,5683]" dest="return: return [5677,5683]"/>
  <match src="identifier: add [80997,81000]" dest="identifier: add [81684,81687]"/>
  <match src="string_literal [80044,80079]" dest="string_literal [80629,80664]"/>
  <match src="true: true [86931,86935]" dest="true: true [88088,88092]"/>
  <match src="array_access [95866,95878]" dest="array_access [95192,95204]"/>
  <match src="call_argument [22412,22481]" dest="call_argument [22412,22481]"/>
  <match src="identifier: getTargetTokenInSwap [70714,70734]" dest="identifier: getTargetTokenInSwap [70425,70445]"/>
  <match src="): ) [94171,94172]" dest="): ) [93817,93818]"/>
  <match src="binary_expression [45288,45328]" dest="binary_expression [45290,45330]"/>
  <match src="type_name [8198,8205]" dest="type_name [8198,8205]"/>
  <match src="identifier: reserve0 [39994,40002]" dest="identifier: reserve0 [39994,40002]"/>
  <match src="}: } [19152,19153]" dest="}: } [19152,19153]"/>
  <match src="type_name [19227,19233]" dest="type_name [19227,19233]"/>
  <match src="call_argument [82723,82727]" dest="call_argument [83561,83565]"/>
  <match src="visibility [96480,96487]" dest="visibility [97267,97274]"/>
  <match src="binary_expression [27782,27791]" dest="binary_expression [27782,27791]"/>
  <match src="assignment_expression [101712,101751]" dest="assignment_expression [102134,102173]"/>
  <match src="=: = [25591,25592]" dest="=: = [25591,25592]"/>
  <match src="binary_expression [5347,5352]" dest="binary_expression [5347,5352]"/>
  <match src="expression_statement [7750,7800]" dest="expression_statement [7750,7800]"/>
  <match src="function_definition [25750,25837]" dest="function_definition [25750,25837]"/>
  <match src="identifier: weight [66557,66563]" dest="identifier: weight [66810,66816]"/>
  <match src="identifier: msg [47276,47279]" dest="identifier: msg [47278,47281]"/>
  <match src="return: return [89192,89198]" dest="return: return [90117,90123]"/>
  <match src="expression_statement [106703,106758]" dest="expression_statement [106627,106682]"/>
  <match src="identifier: poolCount [95643,95652]" dest="identifier: poolCount [94791,94800]"/>
  <match src=".: . [73338,73339]" dest=".: . [73103,73104]"/>
  <match src="): ) [2387,2388]" dest="): ) [2387,2388]"/>
  <match src="string_literal [47463,47483]" dest="string_literal [47465,47485]"/>
  <match src=",: , [55066,55067]" dest=",: , [55068,55069]"/>
  <match src="): ) [57393,57394]" dest="): ) [57395,57396]"/>
  <match src="public: public [65561,65567]" dest="public: public [65571,65577]"/>
  <match src="comment: /**      * @dev Returns the amount of tokens in existence.      */ [1798,1866]" dest="comment: /**      * @dev Returns the amount of tokens in existence.      */ [1798,1866]"/>
  <match src="type_cast_expression [57345,57355]" dest="type_cast_expression [57347,57357]"/>
  <match src="expression_statement [95152,95178]" dest="expression_statement [82629,82657]"/>
  <match src="member_expression [84055,84068]" dest="member_expression [84584,84597]"/>
  <match src="identifier: targetPoolOracleWeight [85911,85933]" dest="identifier: invitorModifiedWeight [97807,97828]"/>
  <match src="uint112: uint112 [97122,97129]" dest="uint112: uint112 [95887,95894]"/>
  <match src="identifier: _pairSwap [105380,105389]" dest="identifier: _pairSwap [105304,105313]"/>
  <match src="identifier: self [38015,38019]" dest="identifier: self [38015,38019]"/>
  <match src="comment: // Shh -- we don't ever want this hook to be marked pure [109219,109275]" dest="comment: // Shh -- we don't ever want this hook to be marked pure [109143,109199]"/>
  <match src="external: external [1895,1903]" dest="external: external [1895,1903]"/>
  <match src="string [85750,85769]" dest="string [87050,87069]"/>
  <match src="type_name [98732,98746]" dest="type_name [98938,98952]"/>
  <match src="identifier: _otherPoolWeight [75814,75830]" dest="identifier: _otherPoolWeight [75330,75346]"/>
  <match src="member_expression [108011,108066]" dest="member_expression [107935,107990]"/>
  <match src="inheritance_specifier [1101,1118]" dest="inheritance_specifier [1101,1118]"/>
  <match src="update_expression [88804,88808]" dest="update_expression [89652,89656]"/>
  <match src="memory: memory [37992,37998]" dest="memory: memory [37992,37998]"/>
  <match src="primitive_type [46202,46209]" dest="primitive_type [46204,46211]"/>
  <match src=",: , [20887,20888]" dest=",: , [20887,20888]"/>
  <match src="(: ( [39708,39709]" dest="(: ( [39708,39709]"/>
  <match src="expression_statement [83625,83676]" dest="expression_statement [85369,85420]"/>
  <match src="storage: storage [93388,93395]" dest="storage: storage [93036,93043]"/>
  <match src="event_definition [39787,39969]" dest="event_definition [39787,39969]"/>
  <match src="=: = [90434,90435]" dest="=: = [91485,91486]"/>
  <match src="identifier: lastRewardBlock [67519,67534]" dest="identifier: lastRewardBlock [67766,67781]"/>
  <match src="returns: returns [103213,103220]" dest="returns: returns [103137,103144]"/>
  <match src="(: ( [6621,6622]" dest="(: ( [6621,6622]"/>
  <match src="=: = [95543,95544]" dest="=: = [94691,94692]"/>
  <match src="call_expression [104065,104086]" dest="call_expression [103989,104010]"/>
  <match src="identifier: addedValue [53461,53471]" dest="identifier: addedValue [53463,53473]"/>
  <match src="identifier: currentBlockTimestamp [41331,41352]" dest="identifier: currentBlockTimestamp [41331,41352]"/>
  <match src="member_expression [84023,84040]" dest="member_expression [84552,84569]"/>
  <match src="user_defined_type [33058,33067]" dest="user_defined_type [33058,33067]"/>
  <match src="assignment_expression [67631,67667]" dest="assignment_expression [67845,67881]"/>
  <match src="identifier: _blackList [94161,94171]" dest="identifier: _blackList [93807,93817]"/>
  <match src="{: { [84601,84602]" dest="{: { [85732,85733]"/>
  <match src="comment: /**      * @dev Returns the number of decimals used to get its user representation.      * For example, if `decimals` equals `2`, a balance of `505` tokens should      * be displayed to a user as `5,05` (`505 / 10 ** 2`).      *      * Tokens usually opt for a value of 18, imitating the relationship between      * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is      * called.      *      * NOTE: This information is only used for _display_ purposes: it in      * no way affects any of the arithmetic of the contract, including      * {IERC20-balanceOf} and {IERC20-transfer}.      */ [50071,50695]" dest="comment: /**      * @dev Returns the number of decimals used to get its user representation.      * For example, if `decimals` equals `2`, a balance of `505` tokens should      * be displayed to a user as `5,05` (`505 / 10 ** 2`).      *      * Tokens usually opt for a value of 18, imitating the relationship between      * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is      * called.      *      * NOTE: This information is only used for _display_ purposes: it in      * no way affects any of the arithmetic of the contract, including      * {IERC20-balanceOf} and {IERC20-transfer}.      */ [50073,50697]"/>
  <match src="visibility [51064,51070]" dest="visibility [51066,51072]"/>
  <match src="): ) [84684,84685]" dest="): ) [85815,85816]"/>
  <match src="identifier: self [38103,38107]" dest="identifier: self [38103,38107]"/>
  <match src="uint256: uint256 [55618,55625]" dest="uint256: uint256 [55620,55627]"/>
  <match src="identifier: price [97620,97625]" dest="identifier: price [96385,96390]"/>
  <match src="identifier: nftPoolId [93459,93468]" dest="identifier: nftPoolId [93107,93116]"/>
  <match src="): ) [71542,71543]" dest="): ) [71253,71254]"/>
  <match src="&quot;: &quot; [54977,54978]" dest="&quot;: &quot; [54979,54980]"/>
  <match src=".: . [97830,97831]" dest=".: . [96595,96596]"/>
  <match src="identifier: fullDiv [28269,28276]" dest="identifier: fullDiv [28269,28276]"/>
  <match src="identifier: sender [39656,39662]" dest="identifier: sender [39656,39662]"/>
  <match src=",: , [4146,4147]" dest=",: , [4146,4147]"/>
  <match src="uint256: uint256 [43833,43840]" dest="uint256: uint256 [43833,43840]"/>
  <match src="call_argument [27317,27328]" dest="call_argument [27317,27328]"/>
  <match src="call_argument [79888,79899]" dest="call_argument [80473,80484]"/>
  <match src="string_literal [16313,16356]" dest="string_literal [16313,16356]"/>
  <match src="variable_declaration_statement [103809,103858]" dest="variable_declaration_statement [103733,103782]"/>
  <match src="function: function [2015,2023]" dest="function: function [2015,2023]"/>
  <match src="(: ( [36856,36857]" dest="(: ( [36856,36857]"/>
  <match src="): ) [38873,38874]" dest="): ) [38873,38874]"/>
  <match src="[: [ [93439,93440]" dest="[: [ [93087,93088]"/>
  <match src="variable_declaration [33944,33953]" dest="variable_declaration [33944,33953]"/>
  <match src="): ) [40086,40087]" dest="): ) [40086,40087]"/>
  <match src="binary_expression [100793,100811]" dest="binary_expression [100778,100797]"/>
  <match src="(: ( [90300,90301]" dest="(: ( [91354,91355]"/>
  <match src="uint256: uint256 [4391,4398]" dest="uint256: uint256 [4391,4398]"/>
  <match src="uint32: uint32 [41378,41384]" dest="uint32: uint32 [41378,41384]"/>
  <match src="=: = [65386,65387]" dest="=: = [65396,65397]"/>
  <match src="primitive_type [59321,59328]" dest="primitive_type [59323,59330]"/>
  <match src="augmented_assignment_expression [28133,28139]" dest="augmented_assignment_expression [28133,28139]"/>
  <match src="primitive_type [49153,49159]" dest="primitive_type [49155,49161]"/>
  <match src="emit_statement [84456,84496]" dest="emit_statement [84991,85031]"/>
  <match src="{: { [42170,42171]" dest="{: { [42170,42171]"/>
  <match src="(: ( [41901,41902]" dest="(: ( [41901,41902]"/>
  <match src="if: if [77480,77482]" dest="if: if [76920,76922]"/>
  <match src="uint256: uint256 [63491,63498]" dest="uint256: uint256 [63493,63500]"/>
  <match src="{: { [46955,46956]" dest="{: { [46342,46343]"/>
  <match src="identifier: SHDPerBlock [65472,65483]" dest="identifier: SHDPerBlock [65482,65493]"/>
  <match src="(: ( [3838,3839]" dest="(: ( [3838,3839]"/>
  <match src=".: . [22284,22285]" dest=".: . [22284,22285]"/>
  <match src="-: - [60479,60480]" dest="-: - [60481,60482]"/>
  <match src="identifier: x [30491,30492]" dest="identifier: x [30491,30492]"/>
  <match src="parameter [39601,39610]" dest="parameter [39601,39610]"/>
  <match src="=: = [65596,65597]" dest="=: = [65606,65607]"/>
  <match src="): ) [87239,87240]" dest="): ) [88400,88401]"/>
  <match src=".: . [87226,87227]" dest=".: . [88387,88388]"/>
  <match src="augmented_assignment_expression [31532,31539]" dest="augmented_assignment_expression [31532,31539]"/>
  <match src="&quot;: &quot; [57313,57314]" dest="&quot;: &quot; [57315,57316]"/>
  <match src="member_expression [36258,36265]" dest="member_expression [36258,36265]"/>
  <match src="identifier: i [95842,95843]" dest="identifier: i [95081,95082]"/>
  <match src="uint256: uint256 [9420,9427]" dest="uint256: uint256 [9420,9427]"/>
  <match src="type_name [17771,17776]" dest="type_name [17771,17776]"/>
  <match src="identifier: poolTokenAmountLimit [44705,44725]" dest="identifier: poolTokenAmountLimit [44707,44727]"/>
  <match src="(: ( [59171,59172]" dest="(: ( [59173,59174]"/>
  <match src="identifier: maxRankNumber [82180,82193]" dest="identifier: maxRankNumber [83018,83031]"/>
  <match src=":: : [61913,61914]" dest=":: : [61915,61916]"/>
  <match src="primitive_type [39943,39950]" dest="primitive_type [39943,39950]"/>
  <match src="type_name [39161,39168]" dest="type_name [39161,39168]"/>
  <match src="event: event [66439,66444]" dest="event: event [66692,66697]"/>
  <match src="primitive_type [41404,41410]" dest="primitive_type [41404,41410]"/>
  <match src="bytes32: bytes32 [39423,39430]" dest="bytes32: bytes32 [39423,39430]"/>
  <match src="number_literal: 0 [67952,67953]" dest="number_literal: 0 [68204,68205]"/>
  <match src="): ) [73920,73921]" dest="): ) [73650,73651]"/>
  <match src="call_argument [103704,103705]" dest="call_argument [103628,103629]"/>
  <match src="*: * [27346,27347]" dest="*: * [27346,27347]"/>
  <match src="solidity_pragma_token [24705,24728]" dest="solidity_pragma_token [24705,24728]"/>
  <match src="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [7397,7666]" dest="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [7397,7666]"/>
  <match src="identifier: deadline [39571,39579]" dest="identifier: deadline [39571,39579]"/>
  <match src="type_name [15626,15632]" dest="type_name [15626,15632]"/>
  <match src="primitive_type [11718,11725]" dest="primitive_type [11718,11725]"/>
  <match src="identifier: _invitees [42870,42879]" dest="identifier: _invitees [42870,42879]"/>
  <match src="identifier: lpTokenAmount [93661,93674]" dest="identifier: lpTokenAmount [93309,93322]"/>
  <match src="public: public [108862,108868]" dest="public: public [108786,108792]"/>
  <match src="modifier_invocation [67220,67229]" dest="modifier_invocation [67467,67476]"/>
  <match src="identifier: fromNew [61697,61704]" dest="identifier: fromNew [61699,61706]"/>
  <match src="variable_declaration_statement [19008,19076]" dest="variable_declaration_statement [19008,19076]"/>
  <match src="address: address [57264,57271]" dest="address: address [57266,57273]"/>
  <match src="identifier: require [14090,14097]" dest="identifier: require [14090,14097]"/>
  <match src="primitive_type [77562,77569]" dest="primitive_type [77002,77009]"/>
  <match src="identifier: AddPool [71570,71577]" dest="identifier: AddPool [71281,71288]"/>
  <match src="{: { [94472,94473]" dest="{: { [94118,94119]"/>
  <match src="struct: struct [64176,64182]" dest="struct: struct [64178,64184]"/>
  <match src="variable_declaration_tuple [107257,107326]" dest="variable_declaration_tuple [107181,107250]"/>
  <match src="visibility [65257,65263]" dest="visibility [65267,65273]"/>
  <match src="variable_declaration [93282,93300]" dest="variable_declaration [92930,92948]"/>
  <match src="if_statement [30632,30707]" dest="if_statement [30632,30707]"/>
  <match src="identifier: rankPoolIndexMap [85566,85582]" dest="identifier: rankPoolIndexMap [86866,86882]"/>
  <match src="(: ( [88713,88714]" dest="(: ( [89561,89562]"/>
  <match src="type_name [6875,6882]" dest="type_name [6875,6882]"/>
  <match src="primitive_type [968,972]" dest="primitive_type [968,972]"/>
  <match src="number_literal: 0 [77010,77011]" dest="number_literal: 0 [76526,76527]"/>
  <match src="type_name [43059,43066]" dest="type_name [43059,43066]"/>
  <match src="call_argument [31508,31510]" dest="call_argument [31508,31510]"/>
  <match src="(: ( [8146,8147]" dest="(: ( [8146,8147]"/>
  <match src="identifier: price [105570,105575]" dest="identifier: price [105494,105499]"/>
  <match src="modifier_invocation [59762,59771]" dest="modifier_invocation [59764,59773]"/>
  <match src="): ) [89204,89205]" dest="): ) [90129,90130]"/>
  <match src="call_expression [95682,95706]" dest="call_expression [94830,94854]"/>
  <match src="}: } [67508,67509]" dest="}: } [67755,67756]"/>
  <match src="identifier: token [21263,21268]" dest="identifier: token [21263,21268]"/>
  <match src="public: public [43100,43106]" dest="public: public [43100,43106]"/>
  <match src="identifier: mm [27385,27387]" dest="identifier: mm [27385,27387]"/>
  <match src="identifier: SHDPerBlock [76032,76043]" dest="identifier: SHDPerBlock [75548,75559]"/>
  <match src="uint256: uint256 [43470,43477]" dest="uint256: uint256 [43470,43477]"/>
  <match src="%: % [38250,38251]" dest="%: % [38250,38251]"/>
  <match src="=&gt;: =&gt; [49028,49030]" dest="=&gt;: =&gt; [49030,49032]"/>
  <match src="uint256: uint256 [102947,102954]" dest="uint256: uint256 [102871,102878]"/>
  <match src="identifier: massUpdatePools [84668,84683]" dest="identifier: massUpdatePools [85799,85814]"/>
  <match src=",: , [20622,20623]" dest=",: , [20622,20623]"/>
  <match src="parameter [5595,5604]" dest="parameter [5595,5604]"/>
  <match src="}: } [75007,75008]" dest="}: } [74930,74931]"/>
  <match src="type_name [94874,94881]" dest="type_name [73961,73968]"/>
  <match src="): ) [81301,81302]" dest="): ) [81990,81991]"/>
  <match src="assignment_expression [61058,61072]" dest="assignment_expression [61060,61074]"/>
  <match src="address: address [38531,38538]" dest="address: address [38531,38538]"/>
  <match src="(: ( [85306,85307]" dest="(: ( [86606,86607]"/>
  <match src="]: ] [62430,62431]" dest="]: ] [62432,62433]"/>
  <match src=".: . [61956,61957]" dest=".: . [61958,61959]"/>
  <match src="number_literal: 0 [55689,55690]" dest="number_literal: 0 [55691,55692]"/>
  <match src="identifier: sender [59535,59541]" dest="identifier: sender [59537,59543]"/>
  <match src="primitive_type [40192,40199]" dest="primitive_type [40192,40199]"/>
  <match src="assignment_expression [107973,108081]" dest="assignment_expression [107897,108005]"/>
  <match src="uint256: uint256 [61831,61838]" dest="uint256: uint256 [61833,61840]"/>
  <match src="interface_declaration [42682,42909]" dest="interface_declaration [42682,42909]"/>
  <match src="identifier: rankPoolIndex [85801,85814]" dest="identifier: rankPoolIndex [87101,87114]"/>
  <match src="primitive_type [90811,90818]" dest="primitive_type [91836,91843]"/>
  <match src="identifier: usersTotalWeight [82921,82937]" dest="identifier: usersTotalWeight [99815,99831]"/>
  <match src="identifier: lpTokenSwap [97084,97095]" dest="identifier: lpTokenSwap [95849,95860]"/>
  <match src="type_name [94438,94442]" dest="type_name [94084,94088]"/>
  <match src="mapping: mapping [48956,48963]" dest="mapping: mapping [48958,48965]"/>
  <match src="uint256: uint256 [6835,6842]" dest="uint256: uint256 [6835,6842]"/>
  <match src="[: [ [51740,51741]" dest="[: [ [51742,51743]"/>
  <match src="function_definition [96043,96322]" dest="function_definition [95353,95632]"/>
  <match src="member_expression [103458,103489]" dest="member_expression [103382,103413]"/>
  <match src="augmented_assignment_expression [29286,29294]" dest="augmented_assignment_expression [29286,29294]"/>
  <match src="{: { [31406,31407]" dest="{: { [31406,31407]"/>
  <match src="view: view [91059,91063]" dest="view: view [92084,92088]"/>
  <match src="address: address [40580,40587]" dest="address: address [40580,40587]"/>
  <match src="call_expression [20862,20958]" dest="call_expression [20862,20958]"/>
  <match src="number_literal: 0 [8186,8187]" dest="number_literal: 0 [8186,8187]"/>
  <match src="block_statement [69980,70079]" dest="block_statement [69691,69790]"/>
  <match src="identifier: SHARDBal [96235,96243]" dest="identifier: SHARDBal [95545,95553]"/>
  <match src="identifier: i [88849,88850]" dest="identifier: i [89697,89698]"/>
  <match src="{: { [20648,20649]" dest="{: { [20648,20649]"/>
  <match src="identifier: sender [47346,47352]" dest="identifier: sender [47348,47354]"/>
  <match src="[: [ [87861,87862]" dest="[: [ [89022,89023]"/>
  <match src="variable_declaration [61488,61503]" dest="variable_declaration [61490,61505]"/>
  <match src="return_type_definition [103213,103230]" dest="return_type_definition [103137,103154]"/>
  <match src="binary_expression [29695,29711]" dest="binary_expression [29695,29711]"/>
  <match src="primitive_type [10123,10130]" dest="primitive_type [10123,10130]"/>
  <match src="(: ( [105348,105349]" dest="(: ( [105272,105273]"/>
  <match src="identifier: data [18480,18484]" dest="identifier: data [18480,18484]"/>
  <match src="): ) [56439,56440]" dest="): ) [56441,56442]"/>
  <match src="function_body [25805,25837]" dest="function_body [25805,25837]"/>
  <match src="type_name [61778,61785]" dest="type_name [61780,61787]"/>
  <match src="parameter [54800,54817]" dest="parameter [54802,54819]"/>
  <match src="identifier: poolCountInRank [76135,76150]" dest="identifier: poolCountInRank [75651,75666]"/>
  <match src="identifier: _pid [73750,73754]" dest="identifier: _pid [73515,73519]"/>
  <match src="expression_statement [98676,98718]" dest="expression_statement [98886,98928]"/>
  <match src="): ) [46041,46042]" dest="): ) [46043,46044]"/>
  <match src="identifier: add [103963,103966]" dest="identifier: add [103887,103890]"/>
  <match src="number_literal: 2 [67874,67875]" dest="number_literal: 2 [68126,68127]"/>
  <match src="type_name [76959,76966]" dest="type_name [76475,76482]"/>
  <match src="{: { [92894,92895]" dest="{: { [92542,92543]"/>
  <match src="uint256: uint256 [69475,69482]" dest="uint256: uint256 [69186,69193]"/>
  <match src="pragma: pragma [46,52]" dest="pragma: pragma [46,52]"/>
  <match src=",: , [62176,62177]" dest=",: , [62178,62179]"/>
  <match src="identifier: h [27277,27278]" dest="identifier: h [27277,27278]"/>
  <match src="primitive_type [85781,85788]" dest="primitive_type [87081,87088]"/>
  <match src="&gt;: &gt; [31621,31622]" dest="&gt;: &gt; [31621,31622]"/>
  <match src="): ) [17891,17892]" dest="): ) [17891,17892]"/>
  <match src="binary_expression [11029,11034]" dest="binary_expression [11029,11034]"/>
  <match src="visibility [79017,79024]" dest="visibility [78806,78813]"/>
  <match src="address: address [39454,39461]" dest="address: address [39454,39461]"/>
  <match src="number_literal: 32 [31646,31648]" dest="number_literal: 32 [31646,31648]"/>
  <match src="&gt;&gt;: &gt;&gt; [29800,29802]" dest="&gt;&gt;: &gt;&gt; [29800,29802]"/>
  <match src="call_argument [84470,84480]" dest="call_argument [85005,85015]"/>
  <match src="address: address [56483,56490]" dest="address: address [56485,56492]"/>
  <match src="identifier: account [2042,2049]" dest="identifier: account [2042,2049]"/>
  <match src="call_expression [46391,46429]" dest="call_expression [46633,46671]"/>
  <match src="identifier: upper [60792,60797]" dest="identifier: upper [60794,60799]"/>
  <match src="(: ( [1917,1918]" dest="(: ( [1917,1918]"/>
  <match src="uint256: uint256 [38305,38312]" dest="uint256: uint256 [38305,38312]"/>
  <match src=",: , [86875,86876]" dest=",: , [88032,88033]"/>
  <match src="number_literal: 0 [28179,28180]" dest="number_literal: 0 [28179,28180]"/>
  <match src="array_access [73006,73024]" dest="array_access [72688,72706]"/>
  <match src="string_literal [36537,36566]" dest="string_literal [36537,36566]"/>
  <match src="identifier: amount [14123,14129]" dest="identifier: amount [14123,14129]"/>
  <match src="expression_statement [18866,18936]" dest="expression_statement [18866,18936]"/>
  <match src="identifier: token0 [104577,104583]" dest="identifier: token0 [104501,104507]"/>
  <match src="function: function [44767,44775]" dest="function: function [44769,44777]"/>
  <match src="member_expression [22435,22448]" dest="member_expression [22435,22448]"/>
  <match src="): ) [17816,17817]" dest="): ) [17816,17817]"/>
  <match src="function: function [92516,92524]" dest="function: function [92164,92172]"/>
  <match src="identifier: owner [51734,51739]" dest="identifier: owner [51736,51741]"/>
  <match src="(: ( [18873,18874]" dest="(: ( [18873,18874]"/>
  <match src="constant: constant [65355,65363]" dest="constant: constant [65365,65373]"/>
  <match src="assignment_expression [67565,67587]" dest="assignment_expression [67812,67834]"/>
  <match src="type_cast_expression [109328,109338]" dest="type_cast_expression [109252,109262]"/>
  <match src="private: private [65742,65749]" dest="private: private [65752,65759]"/>
  <match src="identifier: r [27715,27716]" dest="identifier: r [27715,27716]"/>
  <match src="type_name [77562,77569]" dest="type_name [77002,77009]"/>
  <match src="address: address [16652,16659]" dest="address: address [16652,16659]"/>
  <match src="user_defined_type [84540,84548]" dest="user_defined_type [85671,85679]"/>
  <match src="identifier: data [109087,109091]" dest="identifier: data [109011,109015]"/>
  <match src="unary_expression [99282,99328]" dest="unary_expression [99438,99484]"/>
  <match src="identifier: account [51055,51062]" dest="identifier: account [51057,51064]"/>
  <match src="expression_statement [107879,107928]" dest="expression_statement [107803,107852]"/>
  <match src="&gt;&gt;=: &gt;&gt;= [30830,30833]" dest="&gt;&gt;=: &gt;&gt;= [30830,30833]"/>
  <match src=".: . [87905,87906]" dest=".: . [89066,89067]"/>
  <match src="identifier: reserve1 [106186,106194]" dest="identifier: reserve1 [106110,106118]"/>
  <match src="expression_statement [57407,57444]" dest="expression_statement [57409,57446]"/>
  <match src="(: ( [5712,5713]" dest="(: ( [5712,5713]"/>
  <match src="): ) [37133,37134]" dest="): ) [37133,37134]"/>
  <match src="returns: returns [38766,38773]" dest="returns: returns [38766,38773]"/>
  <match src="{: { [100844,100845]" dest="{: { [100830,100831]"/>
  <match src="identifier: target [17763,17769]" dest="identifier: target [17763,17769]"/>
  <match src="identifier: getDepositWeight [81001,81017]" dest="identifier: getDepositWeight [81688,81704]"/>
  <match src="identifier: value [17053,17058]" dest="identifier: value [17053,17058]"/>
  <match src="(: ( [18365,18366]" dest="(: ( [18365,18366]"/>
  <match src="address: address [54881,54888]" dest="address: address [54883,54890]"/>
  <match src="type_name [16170,16177]" dest="type_name [16170,16177]"/>
  <match src="type_name [28753,28760]" dest="type_name [28753,28760]"/>
  <match src="&quot;: &quot; [85768,85769]" dest="&quot;: &quot; [87068,87069]"/>
  <match src="identifier: _pid [84798,84802]" dest="identifier: _pid [85929,85933]"/>
  <match src="function_definition [87256,87991]" dest="function_definition [88417,89152]"/>
  <match src=",: , [68712,68713]" dest=",: , [68531,68532]"/>
  <match src=".: . [83216,83217]" dest=".: . [90395,90396]"/>
  <match src="(: ( [81155,81156]" dest="(: ( [81842,81843]"/>
  <match src="state_mutability [49781,49785]" dest="state_mutability [49783,49787]"/>
  <match src="uint256: uint256 [92811,92818]" dest="uint256: uint256 [92459,92466]"/>
  <match src="variable_declaration_statement [61431,61470]" dest="variable_declaration_statement [61433,61472]"/>
  <match src="binary_expression [38095,38118]" dest="binary_expression [38095,38118]"/>
  <match src="return_type_definition [90802,90819]" dest="return_type_definition [91827,91844]"/>
  <match src="identifier: r [29727,29728]" dest="identifier: r [29727,29728]"/>
  <match src="returns: returns [54090,54097]" dest="returns: returns [54092,54099]"/>
  <match src="&lt;=: &lt;= [36521,36523]" dest="&lt;=: &lt;= [36521,36523]"/>
  <match src="type_name [88951,88958]" dest="type_name [89799,89806]"/>
  <match src="type_cast_expression [98015,98059]" dest="type_cast_expression [96780,96824]"/>
  <match src="member_expression [98015,98081]" dest="member_expression [96780,96846]"/>
  <match src="identifier: invitorRelationshipInfo [99289,99312]" dest="identifier: invitorRelationshipInfo [99445,99468]"/>
  <match src=",: , [85521,85522]" dest=",: , [86821,86822]"/>
  <match src="primitive_type [6554,6561]" dest="primitive_type [6554,6561]"/>
  <match src="identifier: _pid [78318,78322]" dest="identifier: _pid [77451,77455]"/>
  <match src="(: ( [6547,6548]" dest="(: ( [6547,6548]"/>
  <match src="parameter [50750,50755]" dest="parameter [50752,50757]"/>
  <match src="identifier: decimals [38805,38813]" dest="identifier: decimals [38805,38813]"/>
  <match src="for: for [76655,76658]" dest="for: for [76171,76174]"/>
  <match src="expression_statement [29815,29836]" dest="expression_statement [29815,29836]"/>
  <match src="uint256: uint256 [95733,95740]" dest="uint256: uint256 [94881,94888]"/>
  <match src="member_expression [78873,78898]" dest="member_expression [78456,78481]"/>
  <match src="primitive_type [59950,59957]" dest="primitive_type [59952,59959]"/>
  <match src="return_type_definition [39044,39058]" dest="return_type_definition [39044,39058]"/>
  <match src="identifier: x [31572,31573]" dest="identifier: x [31572,31573]"/>
  <match src="): ) [57354,57355]" dest="): ) [57356,57357]"/>
  <match src="comment: /**      * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement      * on the return value: the return value is optional (but if data is returned, it must not be false).      * @param token The token targeted by the call.      * @param data The call data (encoded using abi.encode or one of its variants).      */ [22498,22875]" dest="comment: /**      * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement      * on the return value: the return value is optional (but if data is returned, it must not be false).      * @param token The token targeted by the call.      * @param data The call data (encoded using abi.encode or one of its variants).      */ [22498,22875]"/>
  <match src="member_expression [42533,42552]" dest="member_expression [42533,42552]"/>
  <match src="visibility [43176,43182]" dest="visibility [43176,43182]"/>
  <match src="return: return [50768,50774]" dest="return: return [50770,50776]"/>
  <match src="call_expression [14319,14397]" dest="call_expression [14319,14397]"/>
  <match src="}: } [31768,31769]" dest="}: } [31768,31769]"/>
  <match src="expression_statement [26785,26859]" dest="expression_statement [26785,26859]"/>
  <match src="): ) [49594,49595]" dest="): ) [49596,49597]"/>
  <match src="expression_statement [31858,31865]" dest="expression_statement [31858,31865]"/>
  <match src="tuple_expression [6942,6955]" dest="tuple_expression [6942,6955]"/>
  <match src="parameter [52661,52665]" dest="parameter [52663,52667]"/>
  <match src="type_cast_expression [34848,34877]" dest="type_cast_expression [34848,34877]"/>
  <match src="public: public [54075,54081]" dest="public: public [54077,54083]"/>
  <match src="binary_expression [46933,46954]" dest="binary_expression [46320,46341]"/>
  <match src="&quot;: &quot; [26817,26818]" dest="&quot;: &quot; [26817,26818]"/>
  <match src="identifier: votes [61203,61208]" dest="identifier: votes [61205,61210]"/>
  <match src="type_name [5915,5922]" dest="type_name [5915,5922]"/>
  <match src="primitive_type [55681,55688]" dest="primitive_type [55683,55690]"/>
  <match src="type_name [45751,45758]" dest="type_name [45753,45760]"/>
  <match src="variable_declaration_statement [27653,27667]" dest="variable_declaration_statement [27653,27667]"/>
  <match src="uint256: uint256 [31244,31251]" dest="uint256: uint256 [31244,31251]"/>
  <match src="type_name [39263,39267]" dest="type_name [39263,39267]"/>
  <match src="call_argument [38079,38119]" dest="call_argument [38079,38119]"/>
  <match src="{: { [14287,14288]" dest="{: { [14287,14288]"/>
  <match src="binary_expression [29633,29649]" dest="binary_expression [29633,29649]"/>
  <match src="identifier: usersRelationshipInfo [98582,98603]" dest="identifier: usersRelationshipInfo [97347,97368]"/>
  <match src="!=: != [86586,86588]" dest="!=: != [87874,87876]"/>
  <match src="type_name [40327,40334]" dest="type_name [40327,40334]"/>
  <match src=".: . [23425,23426]" dest=".: . [23425,23426]"/>
  <match src="{: { [109627,109628]" dest="{: { [109551,109552]"/>
  <match src=",: , [81433,81434]" dest=",: , [82122,82123]"/>
  <match src="(: ( [109619,109620]" dest="(: ( [109543,109544]"/>
  <match src="identifier: require [82632,82639]" dest="identifier: require [83470,83477]"/>
  <match src="emit: emit [26869,26873]" dest="emit: emit [26869,26873]"/>
  <match src="event_paramater [4366,4389]" dest="event_paramater [4366,4389]"/>
  <match src="if: if [38011,38013]" dest="if: if [38011,38013]"/>
  <match src="(: ( [52687,52688]" dest="(: ( [52689,52690]"/>
  <match src="primitive_type [107258,107262]" dest="primitive_type [107182,107186]"/>
  <match src="call_argument [81040,81047]" dest="call_argument [81727,81734]"/>
  <match src="): ) [7705,7706]" dest="): ) [7705,7706]"/>
  <match src="uint256: uint256 [60036,60043]" dest="uint256: uint256 [60038,60045]"/>
  <match src="member_expression [89867,89890]" dest="member_expression [91114,91137]"/>
  <match src="): ) [14269,14270]" dest="): ) [14269,14270]"/>
  <match src="call_expression [86341,86364]" dest="call_expression [87629,87652]"/>
  <match src="identifier: uppero_lowers [35308,35321]" dest="identifier: uppero_lowers [35308,35321]"/>
  <match src="primitive_type [96930,96937]" dest="primitive_type [95695,95702]"/>
  <match src="identifier: div [90499,90502]" dest="identifier: div [91524,91527]"/>
  <match src="call_expression [23546,23576]" dest="call_expression [23546,23576]"/>
  <match src="function_body [7277,7389]" dest="function_body [7277,7389]"/>
  <match src="block_statement [31735,31769]" dest="block_statement [31735,31769]"/>
  <match src="}: } [18535,18536]" dest="}: } [18535,18536]"/>
  <match src="string: string [11740,11746]" dest="string: string [11740,11746]"/>
  <match src="bool: bool [39131,39135]" dest="bool: bool [39131,39135]"/>
  <match src="): ) [105119,105120]" dest="): ) [105043,105044]"/>
  <match src="identifier: initialize [40889,40899]" dest="identifier: initialize [40889,40899]"/>
  <match src="identifier: _userDividend [47170,47183]" dest="identifier: _userDividend [47172,47185]"/>
  <match src="user_defined_type [25269,25276]" dest="user_defined_type [25269,25276]"/>
  <match src="user_defined_type [93379,93387]" dest="user_defined_type [93027,93035]"/>
  <match src="view: view [2060,2064]" dest="view: view [2060,2064]"/>
  <match src="identifier: l [27593,27594]" dest="identifier: l [27593,27594]"/>
  <match src="): ) [9472,9473]" dest="): ) [9472,9473]"/>
  <match src="call_argument [22129,22141]" dest="call_argument [22129,22141]"/>
  <match src="number_literal: 1 [90906,90907]" dest="number_literal: 1 [91931,91932]"/>
  <match src="identifier: unDividendShard [84935,84950]" dest="identifier: unDividendShard [86066,86081]"/>
  <match src="uint256: uint256 [73965,73972]" dest="uint256: uint256 [73695,73702]"/>
  <match src="address: address [43600,43607]" dest="address: address [43600,43607]"/>
  <match src="parameter [58562,58574]" dest="parameter [58564,58576]"/>
  <match src="override: override [51436,51444]" dest="override: override [51438,51446]"/>
  <match src="visibility [65901,65907]" dest="visibility [65911,65917]"/>
  <match src="type_cast_expression [31719,31729]" dest="type_cast_expression [31719,31729]"/>
  <match src="=: = [86808,86809]" dest="=: = [87963,87964]"/>
  <match src="solidity_version_comparison_operator [28377,28380]" dest="solidity_version_comparison_operator [28377,28380]"/>
  <match src="(: ( [83760,83761]" dest="(: ( [85492,85493]"/>
  <match src="string [54204,54243]" dest="string [54206,54245]"/>
  <match src="identifier: originWeight [63276,63288]" dest="identifier: originWeight [63278,63290]"/>
  <match src="identifier: safeShiftBits [38325,38338]" dest="identifier: safeShiftBits [38325,38338]"/>
  <match src="identifier: FixedPoint [107982,107992]" dest="identifier: FixedPoint [107906,107916]"/>
  <match src="variable_declaration [74169,74178]" dest="variable_declaration [73900,73909]"/>
  <match src="parameter [7730,7737]" dest="parameter [7730,7737]"/>
  <match src="type_name [63268,63275]" dest="type_name [63270,63277]"/>
  <match src="variable_declaration [76127,76150]" dest="variable_declaration [75643,75666]"/>
  <match src="if_statement [61007,61147]" dest="if_statement [61009,61149]"/>
  <match src="parameter [11729,11738]" dest="parameter [11729,11738]"/>
  <match src=".: . [55233,55234]" dest=".: . [55235,55236]"/>
  <match src="identifier: add [81152,81155]" dest="identifier: add [81839,81842]"/>
  <match src="variable_declaration [82479,82500]" dest="variable_declaration [83317,83338]"/>
  <match src=".: . [69357,69358]" dest=".: . [69068,69069]"/>
  <match src="pure: pure [38761,38765]" dest="pure: pure [38761,38765]"/>
  <match src="function_body [62834,62884]" dest="function_body [62836,62886]"/>
  <match src="call_expression [44910,45000]" dest="call_expression [44912,45002]"/>
  <match src="event_definition [66778,66836]" dest="event_definition [67031,67089]"/>
  <match src="state_variable_declaration [65249,65300]" dest="state_variable_declaration [65259,65310]"/>
  <match src="inheritance_specifier [108761,108778]" dest="inheritance_specifier [108685,108702]"/>
  <match src="identifier: Sync [39981,39985]" dest="identifier: Sync [39981,39985]"/>
  <match src="||: || [33983,33985]" dest="||: || [33983,33985]"/>
  <match src="): ) [28180,28181]" dest="): ) [28180,28181]"/>
  <match src="identifier: farmMintShard [76372,76385]" dest="identifier: farmMintShard [75888,75901]"/>
  <match src="identifier: _marketingFund [45952,45966]" dest="identifier: _marketingFund [45954,45968]"/>
  <match src="(: ( [102613,102614]" dest="(: ( [102537,102538]"/>
  <match src="external: external [44158,44166]" dest="external: external [44160,44168]"/>
  <match src="type_cast_expression [81891,81910]" dest="type_cast_expression [82723,82742]"/>
  <match src="): ) [18070,18071]" dest="): ) [18070,18071]"/>
  <match src="): ) [62814,62815]" dest="): ) [62816,62817]"/>
  <match src="identifier: inviteeIndexMap [99313,99328]" dest="identifier: inviteeIndexMap [99469,99484]"/>
  <match src="identifier: wantToken [97457,97466]" dest="identifier: wantToken [96222,96231]"/>
  <match src="event_paramater [39733,39745]" dest="event_paramater [39733,39745]"/>
  <match src="type_cast_expression [26531,26541]" dest="type_cast_expression [26531,26541]"/>
  <match src="parameter [10901,10910]" dest="parameter [10901,10910]"/>
  <match src="primitive_type [17771,17776]" dest="primitive_type [17771,17776]"/>
  <match src=",: , [17892,17893]" dest=",: , [17892,17893]"/>
  <match src="visibility [94081,94089]" dest="visibility [93727,93735]"/>
  <match src="primitive_type [108003,108010]" dest="primitive_type [107927,107934]"/>
  <match src="address: address [67261,67268]" dest="address: address [67508,67515]"/>
  <match src="&quot;: &quot; [80151,80152]" dest="&quot;: &quot; [80736,80737]"/>
  <match src="]: ] [73570,73571]" dest="]: ] [73335,73336]"/>
  <match src="call_argument [84204,84210]" dest="call_argument [84733,84739]"/>
  <match src="memory: memory [33249,33255]" dest="memory: memory [33249,33255]"/>
  <match src="event_paramater [39709,39731]" dest="event_paramater [39709,39731]"/>
  <match src="identifier: lpTokenAmount [84350,84363]" dest="identifier: lpTokenAmount [84885,84898]"/>
  <match src="member_expression [61175,61208]" dest="member_expression [61177,61210]"/>
  <match src="assignment_expression [103367,103391]" dest="assignment_expression [103291,103315]"/>
  <match src="identifier: blockTimestampLast [42061,42079]" dest="identifier: blockTimestampLast [42061,42079]"/>
  <match src="return: return [24366,24372]" dest="return: return [24366,24372]"/>
  <match src="]: ] [85891,85892]" dest="]: ] [87191,87192]"/>
  <match src=".: . [106654,106655]" dest=".: . [106578,106579]"/>
  <match src="if_statement [38011,38133]" dest="if_statement [38011,38133]"/>
  <match src="uint256: uint256 [43937,43944]" dest="uint256: uint256 [43937,43944]"/>
  <match src="return: return [33702,33708]" dest="return: return [33702,33708]"/>
  <match src="member_expression [46558,46570]" dest="member_expression [46800,46812]"/>
  <match src="assignment_expression [45637,45661]" dest="assignment_expression [45639,45663]"/>
  <match src="call_expression [61656,61705]" dest="call_expression [61658,61707]"/>
  <match src="): ) [59856,59857]" dest="): ) [59858,59859]"/>
  <match src="(: ( [88824,88825]" dest="(: ( [89672,89673]"/>
  <match src="variable_declaration [72373,72394]" dest="variable_declaration [72048,72069]"/>
  <match src="identifier: userInfo [89123,89131]" dest="identifier: userInfo [89971,89979]"/>
  <match src="parenthesized_expression [65495,65501]" dest="parenthesized_expression [65505,65511]"/>
  <match src="assignment_expression [67327,67357]" dest="assignment_expression [67574,67604]"/>
  <match src=".: . [87217,87218]" dest=".: . [88378,88379]"/>
  <match src="{: { [69980,69981]" dest="{: { [69691,69692]"/>
  <match src="identifier: _fromIndex [92556,92566]" dest="identifier: _fromIndex [92204,92214]"/>
  <match src="binary_expression [103244,103265]" dest="binary_expression [103168,103189]"/>
  <match src="call_expression [52725,52846]" dest="call_expression [52727,52848]"/>
  <match src="uint256: uint256 [83410,83417]" dest="uint256: uint256 [85190,85197]"/>
  <match src="identifier: _symbol [49168,49175]" dest="identifier: _symbol [49170,49177]"/>
  <match src="comment: // add pool automatically in nft shard [65780,65818]" dest="comment: // add pool automatically in nft shard [65790,65828]"/>
  <match src="internal: internal [62211,62219]" dest="internal: internal [62213,62221]"/>
  <match src="(: ( [50718,50719]" dest="(: ( [50720,50721]"/>
  <match src="primitive_type [77370,77377]" dest="primitive_type [76810,76817]"/>
  <match src="): ) [36216,36217]" dest="): ) [36216,36217]"/>
  <match src="): ) [94070,94071]" dest="): ) [93716,93717]"/>
  <match src="member_expression [80796,80826]" dest="member_expression [81483,81513]"/>
  <match src="/: / [37077,37078]" dest="/: / [37077,37078]"/>
  <match src="member_expression [93656,93674]" dest="member_expression [93304,93322]"/>
  <match src="!: ! [86860,86861]" dest="!: ! [88017,88018]"/>
  <match src="string_literal [37358,37390]" dest="string_literal [37358,37390]"/>
  <match src="call_argument [21604,21666]" dest="call_argument [21604,21666]"/>
  <match src="=: = [105162,105163]" dest="=: = [105086,105087]"/>
  <match src="call_argument [90589,90600]" dest="call_argument [91614,91625]"/>
  <match src="identifier: x [28971,28972]" dest="identifier: x [28971,28972]"/>
  <match src="(: ( [8170,8171]" dest="(: ( [8170,8171]"/>
  <match src="member_expression [36194,36201]" dest="member_expression [36194,36201]"/>
  <match src="visibility [9442,9450]" dest="visibility [9442,9450]"/>
  <match src="}: } [71541,71542]" dest="}: } [71252,71253]"/>
  <match src="number_literal: 0x3 [32034,32037]" dest="number_literal: 0x3 [32034,32037]"/>
  <match src="(: ( [89706,89707]" dest="(: ( [90948,90949]"/>
  <match src="identifier: _amount [95816,95823]" dest="identifier: _amount [95028,95035]"/>
  <match src="!=: != [54878,54880]" dest="!=: != [54880,54882]"/>
  <match src="identifier: lastPoolIndex [87926,87939]" dest="identifier: lastPoolIndex [89087,89100]"/>
  <match src="primitive_type [67178,67185]" dest="primitive_type [67431,67438]"/>
  <match src="user_defined_type [107035,107055]" dest="user_defined_type [106959,106979]"/>
  <match src="type_name [39053,39057]" dest="type_name [39053,39057]"/>
  <match src="identifier: pool [73792,73796]" dest="identifier: pool [73588,73592]"/>
  <match src="identifier: x [30547,30548]" dest="identifier: x [30547,30548]"/>
  <match src="primitive_type [79778,79785]" dest="primitive_type [80363,80370]"/>
  <match src="visibility [98502,98509]" dest="visibility [98868,98875]"/>
  <match src="identifier: targetPid [86201,86210]" dest="identifier: targetPid [87489,87498]"/>
  <match src="call_expression [85936,85989]" dest="call_expression [87229,87288]"/>
  <match src="identifier: add [92950,92953]" dest="identifier: add [92598,92601]"/>
  <match src="primitive_type [93961,93968]" dest="primitive_type [93607,93614]"/>
  <match src="]: ] [82227,82228]" dest="]: ] [83065,83066]"/>
  <match src="public: public [65901,65907]" dest="public: public [65911,65917]"/>
  <match src="call_argument [26793,26815]" dest="call_argument [26793,26815]"/>
  <match src="primitive_type [87648,87655]" dest="primitive_type [88809,88816]"/>
  <match src="call_argument [60124,60159]" dest="call_argument [60126,60161]"/>
  <match src="internal: internal [54835,54843]" dest="internal: internal [54837,54845]"/>
  <match src=",: , [89498,89499]" dest=",: , [90740,90741]"/>
  <match src="==: == [28779,28781]" dest="==: == [28779,28781]"/>
  <match src="external: external [59858,59866]" dest="external: external [59860,59868]"/>
  <match src="identifier: poolRankIndex [72537,72550]" dest="identifier: poolRankIndex [72229,72242]"/>
  <match src="identifier: _user [94738,94743]" dest="identifier: _user [97222,97227]"/>
  <match src="address: address [77352,77359]" dest="address: address [76792,76799]"/>
  <match src="function: function [40880,40888]" dest="function: function [40880,40888]"/>
  <match src="identifier: add [46857,46860]" dest="identifier: add [47099,47102]"/>
  <match src="identifier: otherPoolReward [78674,78689]" dest="identifier: otherPoolReward [78254,78269]"/>
  <match src="uint256: uint256 [92769,92776]" dest="uint256: uint256 [92417,92424]"/>
  <match src="type_name [59737,59744]" dest="type_name [59739,59746]"/>
  <match src="number_literal: 0 [95777,95778]" dest="number_literal: 0 [94925,94926]"/>
  <match src="+=: += [30852,30854]" dest="+=: += [30852,30854]"/>
  <match src="array_access [82864,82878]" dest="array_access [83702,83716]"/>
  <match src="assignment_expression [79465,79499]" dest="assignment_expression [79620,79654]"/>
  <match src="comment: // Info of each pool. [63437,63458]" dest="comment: // Info of each pool. [63439,63460]"/>
  <match src="assignment_expression [49638,49655]" dest="assignment_expression [49640,49657]"/>
  <match src="primitive_type [31389,31396]" dest="primitive_type [31389,31396]"/>
  <match src="visibility [96956,96963]" dest="visibility [95721,95728]"/>
  <match src="(: ( [37112,37113]" dest="(: ( [37112,37113]"/>
  <match src="member_expression [106156,106175]" dest="member_expression [106080,106099]"/>
  <match src="(: ( [6898,6899]" dest="(: ( [6898,6899]"/>
  <match src="identifier: _devDividendWeight [44404,44422]" dest="identifier: _devDividendWeight [44406,44424]"/>
  <match src=",: , [95902,95903]" dest=",: , [95169,95170]"/>
  <match src="identifier: pair [41802,41806]" dest="identifier: pair [41802,41806]"/>
  <match src="}: } [46066,46067]" dest="}: } [46068,46069]"/>
  <match src="identifier: b [6276,6277]" dest="identifier: b [6276,6277]"/>
  <match src="[: [ [47335,47336]" dest="[: [ [47337,47338]"/>
  <match src="call_argument [71602,71612]" dest="call_argument [71313,71323]"/>
  <match src="state_mutability [104496,104500]" dest="state_mutability [104420,104424]"/>
  <match src="pure: pure [38699,38703]" dest="pure: pure [38699,38703]"/>
  <match src="array_access [53422,53447]" dest="array_access [53424,53449]"/>
  <match src="identifier: pool [78338,78342]" dest="identifier: pool [77850,77854]"/>
  <match src="call_expression [77612,77638]" dest="call_expression [77052,77078]"/>
  <match src="state_mutability [6855,6859]" dest="state_mutability [6855,6859]"/>
  <match src="state_mutability [51071,51075]" dest="state_mutability [51073,51077]"/>
  <match src="identifier: account [55862,55869]" dest="identifier: account [55864,55871]"/>
  <match src="=: = [101635,101636]" dest="=: = [101372,101373]"/>
  <match src="primitive_type [38775,38781]" dest="primitive_type [38775,38781]"/>
  <match src="identifier: safeShiftBits [38151,38164]" dest="identifier: safeShiftBits [38151,38164]"/>
  <match src="identifier: isUserContractSender [89453,89473]" dest="identifier: isUserContractSender [90695,90715]"/>
  <match src="parameter [20598,20610]" dest="parameter [20598,20610]"/>
  <match src="member_expression [89591,89614]" dest="member_expression [90833,90856]"/>
  <match src="expression_statement [45818,45833]" dest="expression_statement [45820,45835]"/>
  <match src="identifier: tokenToEthPairInfo [97831,97849]" dest="identifier: tokenToEthPairInfo [96596,96614]"/>
  <match src="type_cast_expression [36524,36535]" dest="type_cast_expression [36524,36535]"/>
  <match src="type_name [77405,77412]" dest="type_name [76845,76852]"/>
  <match src="): ) [78478,78479]" dest="): ) [78058,78059]"/>
  <match src="returns: returns [27512,27519]" dest="returns: returns [27512,27519]"/>
  <match src=".: . [102618,102619]" dest=".: . [102542,102543]"/>
  <match src="binary_expression [86089,86137]" dest="binary_expression [87381,87425]"/>
  <match src="array_access [61175,61202]" dest="array_access [61177,61204]"/>
  <match src="solidity_pragma_token [28369,28385]" dest="solidity_pragma_token [28369,28385]"/>
  <match src="member_expression [102614,102640]" dest="member_expression [102538,102564]"/>
  <match src="memory: memory [69443,69449]" dest="memory: memory [69154,69160]"/>
  <match src="type_cast_expression [81925,81938]" dest="type_cast_expression [82757,82770]"/>
  <match src="call_argument [108067,108078]" dest="call_argument [107991,108002]"/>
  <match src="binary_expression [36315,36335]" dest="binary_expression [36315,36335]"/>
  <match src="): ) [5322,5323]" dest="): ) [5322,5323]"/>
  <match src="identifier: lpTokenAmount [80265,80278]" dest="identifier: lpTokenAmount [80885,80898]"/>
  <match src="uint: uint [39263,39267]" dest="uint: uint [39263,39267]"/>
  <match src="identifier: shardReserve [98033,98045]" dest="identifier: shardReserve [96798,96810]"/>
  <match src="uint224: uint224 [35324,35331]" dest="uint224: uint224 [35324,35331]"/>
  <match src="member_expression [106632,106658]" dest="member_expression [106556,106582]"/>
  <match src="uint256: uint256 [44830,44837]" dest="uint256: uint256 [44832,44839]"/>
  <match src="member_expression [21985,22028]" dest="member_expression [21985,22028]"/>
  <match src="call_argument [84935,84950]" dest="call_argument [86066,86081]"/>
  <match src="identifier: FixedPoint [42405,42415]" dest="identifier: FixedPoint [42405,42415]"/>
  <match src="type_name [80463,80470]" dest="type_name [81148,81155]"/>
  <match src=".: . [36039,36040]" dest=".: . [36039,36040]"/>
  <match src="(: ( [73081,73082]" dest="(: ( [72846,72847]"/>
  <match src="member_expression [103753,103785]" dest="member_expression [103677,103709]"/>
  <match src="(: ( [8844,8845]" dest="(: ( [8844,8845]"/>
  <match src="function: function [16139,16147]" dest="function: function [16139,16147]"/>
  <match src="call_argument [82316,82326]" dest="call_argument [83154,83164]"/>
  <match src="parameter [15188,15202]" dest="parameter [15188,15202]"/>
  <match src="): ) [40556,40557]" dest="): ) [40556,40557]"/>
  <match src="[: [ [85814,85815]" dest="[: [ [87114,87115]"/>
  <match src="identifier: Q112 [32689,32693]" dest="identifier: Q112 [32689,32693]"/>
  <match src="comment: // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that [23080,23187]" dest="comment: // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that [23080,23187]"/>
  <match src="(: ( [19712,19713]" dest="(: ( [19712,19713]"/>
  <match src="primitive_type [78811,78818]" dest="primitive_type [77527,77534]"/>
  <match src="identifier: usersTotalWeight [71267,71283]" dest="identifier: usersTotalWeight [70978,70994]"/>
  <match src="binary_expression [108461,108480]" dest="binary_expression [108385,108404]"/>
  <match src="address: address [15188,15195]" dest="address: address [15188,15195]"/>
  <match src="): ) [26428,26429]" dest="): ) [26428,26429]"/>
  <match src="block_statement [61759,62044]" dest="block_statement [61761,62046]"/>
  <match src="]: ] [92683,92684]" dest="]: ] [92331,92332]"/>
  <match src="number_literal: 1 [87769,87770]" dest="number_literal: 1 [88930,88931]"/>
  <match src="uint256: uint256 [21927,21934]" dest="uint256: uint256 [21927,21934]"/>
  <match src="bool: bool [104924,104928]" dest="bool: bool [104848,104852]"/>
  <match src="identifier: poolPosition [73528,73540]" dest="identifier: poolPosition [73293,73305]"/>
  <match src="(: ( [37282,37283]" dest="(: ( [37282,37283]"/>
  <match src="identifier: FixedPoint [105577,105587]" dest="identifier: FixedPoint [105501,105511]"/>
  <match src="block_statement [72197,72640]" dest="block_statement [71863,72600]"/>
  <match src="call_argument [86601,86632]" dest="call_argument [87889,87920]"/>
  <match src="array_access [95894,95902]" dest="array_access [95161,95169]"/>
  <match src="}: } [8308,8309]" dest="}: } [8308,8309]"/>
  <match src="(: ( [27212,27213]" dest="(: ( [27212,27213]"/>
  <match src="identifier: amount [84142,84148]" dest="identifier: amount [84671,84677]"/>
  <match src="bytes: bytes [18419,18424]" dest="bytes: bytes [18419,18424]"/>
  <match src="call_argument [56559,56565]" dest="call_argument [56561,56567]"/>
  <match src="identifier: data [18066,18070]" dest="identifier: data [18066,18070]"/>
  <match src=",: , [44128,44129]" dest=",: , [44130,44131]"/>
  <match src="(: ( [62003,62004]" dest="(: ( [62005,62006]"/>
  <match src="call_expression [76208,76246]" dest="call_expression [75724,75762]"/>
  <match src="&lt;&lt;: &lt;&lt; [38322,38324]" dest="&lt;&lt;: &lt;&lt; [38322,38324]"/>
  <match src="(: ( [89001,89002]" dest="(: ( [89849,89850]"/>
  <match src=".: . [19460,19461]" dest=".: . [19460,19461]"/>
  <match src="identifier: to [39777,39779]" dest="identifier: to [39777,39779]"/>
  <match src="call_argument [98224,98240]" dest="call_argument [96989,97005]"/>
  <match src="&gt;=: &gt;= [30638,30640]" dest="&gt;=: &gt;= [30638,30640]"/>
  <match src="expression_statement [30416,30425]" dest="expression_statement [30416,30425]"/>
  <match src="array_access [93559,93588]" dest="array_access [93207,93236]"/>
  <match src=",: , [72966,72967]" dest=",: , [72648,72649]"/>
  <match src=".: . [100776,100777]" dest=".: . [100761,100762]"/>
  <match src="type_name [92724,92733]" dest="type_name [92372,92381]"/>
  <match src="identifier: sub [56643,56646]" dest="identifier: sub [56645,56648]"/>
  <match src="): ) [102724,102725]" dest="): ) [102648,102649]"/>
  <match src="emit: emit [71565,71569]" dest="emit: emit [71276,71280]"/>
  <match src="parameter [27224,27233]" dest="parameter [27224,27233]"/>
  <match src="): ) [103484,103485]" dest="): ) [103408,103409]"/>
  <match src="identifier: price1CumulativeLast [106276,106296]" dest="identifier: price1CumulativeLast [106200,106220]"/>
  <match src="(: ( [91047,91048]" dest="(: ( [92072,92073]"/>
  <match src="primitive_type [67145,67152]" dest="primitive_type [67398,67405]"/>
  <match src="boolean_literal [100968,100972]" dest="boolean_literal [101126,101130]"/>
  <match src="identifier: selector [22449,22457]" dest="identifier: selector [22449,22457]"/>
  <match src="type_name [18021,18026]" dest="type_name [18021,18026]"/>
  <match src="member_expression [90948,90987]" dest="member_expression [91973,92012]"/>
  <match src=".: . [108267,108268]" dest=".: . [108191,108192]"/>
  <match src="assembly: assembly [12999,13007]" dest="assembly: assembly [12999,13007]"/>
  <match src="variable_declaration [60658,60671]" dest="variable_declaration [60660,60673]"/>
  <match src="(: ( [94138,94139]" dest="(: ( [93784,93785]"/>
  <match src="): ) [38844,38845]" dest="): ) [38844,38845]"/>
  <match src="type_name [103222,103229]" dest="type_name [103146,103153]"/>
  <match src="member_expression [90966,90979]" dest="member_expression [91991,92004]"/>
  <match src="identifier: block [77063,77068]" dest="identifier: block [76579,76584]"/>
  <match src="identifier: reserve0 [105981,105989]" dest="identifier: reserve0 [105905,105913]"/>
  <match src="{: { [7739,7740]" dest="{: { [7739,7740]"/>
  <match src=".: . [46399,46400]" dest=".: . [46641,46642]"/>
  <match src=".: . [80814,80815]" dest=".: . [81501,81502]"/>
  <match src="(: ( [100039,100040]" dest="(: ( [98744,98745]"/>
  <match src="(: ( [72081,72082]" dest="(: ( [71634,71635]"/>
  <match src="array_access [72141,72163]" dest="array_access [71775,71797]"/>
  <match src="parameter [62106,62118]" dest="parameter [62108,62120]"/>
  <match src="comment: /**      * @dev Deprecated. This function has issues similar to the ones found in      * {IERC20-approve}, and its usage is discouraged.      *      * Whenever possible, use {safeIncreaseAllowance} and      * {safeDecreaseAllowance} instead.      */ [20974,21229]" dest="comment: /**      * @dev Deprecated. This function has issues similar to the ones found in      * {IERC20-approve}, and its usage is discouraged.      *      * Whenever possible, use {safeIncreaseAllowance} and      * {safeDecreaseAllowance} instead.      */ [20974,21229]"/>
  <match src="parameter [44130,44156]" dest="parameter [44132,44158]"/>
  <match src="primitive_type [43561,43568]" dest="primitive_type [43561,43568]"/>
  <match src="-: - [10192,10193]" dest="-: - [10192,10193]"/>
  <match src="binary_expression [37052,37075]" dest="binary_expression [37052,37075]"/>
  <match src="): ) [62027,62028]" dest="): ) [62029,62030]"/>
  <match src="parameter [34227,34235]" dest="parameter [34227,34235]"/>
  <match src="): ) [101282,101283]" dest="): ) [101221,101222]"/>
  <match src="): ) [44999,45000]" dest="): ) [45001,45002]"/>
  <match src="comment: // library with helper methods for oracles that are concerned with computing average prices [41047,41138]" dest="comment: // library with helper methods for oracles that are concerned with computing average prices [41047,41138]"/>
  <match src="): ) [36280,36281]" dest="): ) [36280,36281]"/>
  <match src="primitive_type [38281,38288]" dest="primitive_type [38281,38288]"/>
  <match src="visibility [40169,40177]" dest="visibility [40169,40177]"/>
  <match src="identifier: originWeight [102564,102576]" dest="identifier: originWeight [102488,102500]"/>
  <match src="identifier: getUserModifiedWeight [89256,89277]" dest="identifier: getUserModifiedWeight [90181,90202]"/>
  <match src="type_cast_expression [33104,33114]" dest="type_cast_expression [33104,33114]"/>
  <match src="identifier: x [30748,30749]" dest="identifier: x [30748,30749]"/>
  <match src=".: . [107775,107776]" dest=".: . [107699,107700]"/>
  <match src="type_name [38967,38971]" dest="type_name [38967,38971]"/>
  <match src="primitive_type [3493,3497]" dest="primitive_type [3493,3497]"/>
  <match src=",: , [27471,27472]" dest=",: , [27471,27472]"/>
  <match src=".: . [84423,84424]" dest=".: . [84958,84959]"/>
  <match src="event_definition [39975,40022]" dest="event_definition [39975,40022]"/>
  <match src="type_name [40610,40614]" dest="type_name [40610,40614]"/>
  <match src="member_expression [89867,89894]" dest="member_expression [91114,91141]"/>
  <match src="identifier: blockNumber [60410,60421]" dest="identifier: blockNumber [60412,60423]"/>
  <match src="parameter [69242,69269]" dest="parameter [68953,68980]"/>
  <match src="=: = [88784,88785]" dest="=: = [89632,89633]"/>
  <match src="function_body [91090,91131]" dest="function_body [92115,92156]"/>
  <match src="member_expression [88618,88630]" dest="member_expression [89466,89478]"/>
  <match src="pure: pure [8133,8137]" dest="pure: pure [8133,8137]"/>
  <match src="assignment_expression [108096,108144]" dest="assignment_expression [108020,108068]"/>
  <match src="identifier: poolTokenAmountLimit [46681,46701]" dest="identifier: poolTokenAmountLimit [46923,46943]"/>
  <match src="binary_expression [79085,79120]" dest="binary_expression [79248,79283]"/>
  <match src="parameter [27442,27451]" dest="parameter [27442,27451]"/>
  <match src="uint224: uint224 [37123,37130]" dest="uint224: uint224 [37123,37130]"/>
  <match src="comment: // so the bit shift does not overflow [35382,35419]" dest="comment: // so the bit shift does not overflow [35382,35419]"/>
  <match src="user_defined_type [108742,108759]" dest="user_defined_type [108666,108683]"/>
  <match src="call_expression [87742,87771]" dest="call_expression [88903,88932]"/>
  <match src="primitive_type [48976,48983]" dest="primitive_type [48978,48985]"/>
  <match src="primitive_type [18366,18373]" dest="primitive_type [18366,18373]"/>
  <match src="primitive_type [30247,30252]" dest="primitive_type [30247,30252]"/>
  <match src="state_variable_declaration [65975,66010]" dest="state_variable_declaration [65985,66022]"/>
  <match src="event_definition [66913,66985]" dest="event_definition [67166,67238]"/>
  <match src="&gt;&gt;: &gt;&gt; [35657,35659]" dest="&gt;&gt;: &gt;&gt; [35657,35659]"/>
  <match src="expression_statement [83061,83123]" dest="expression_statement [83840,83902]"/>
  <match src="while: while [87782,87787]" dest="while: while [88943,88948]"/>
  <match src="true [68070,68074]" dest="true [68056,68060]"/>
  <match src="call_argument [21779,21784]" dest="call_argument [21779,21784]"/>
  <match src="identifier: fromBlock [60586,60595]" dest="identifier: fromBlock [60588,60597]"/>
  <match src=",: , [62118,62119]" dest=",: , [62120,62121]"/>
  <match src="member_expression [97898,97937]" dest="member_expression [96663,96702]"/>
  <match src="user_defined_type [33858,33867]" dest="user_defined_type [33858,33867]"/>
  <match src="identifier: numCheckpoints [60206,60220]" dest="identifier: numCheckpoints [60208,60222]"/>
  <match src="=: = [27302,27303]" dest="=: = [27302,27303]"/>
  <match src="]: ] [92777,92778]" dest="]: ] [92425,92426]"/>
  <match src=",: , [61677,61678]" dest=",: , [61679,61680]"/>
  <match src="call_argument [82599,82620]" dest="call_argument [83437,83458]"/>
  <match src="variable_declaration_statement [28031,28070]" dest="variable_declaration_statement [28031,28070]"/>
  <match src="identifier: shardPoolDividend [79258,79275]" dest="identifier: shardPoolDividend [79413,79430]"/>
  <match src="variable_declaration [97122,97142]" dest="variable_declaration [95887,95907]"/>
  <match src="member_expression [106664,106673]" dest="member_expression [106588,106597]"/>
  <match src="parameter [16652,16666]" dest="parameter [16652,16666]"/>
  <match src="identifier: pool [84160,84164]" dest="identifier: pool [84689,84693]"/>
  <match src="if_statement [90036,90187]" dest="if_statement [90285,90465]"/>
  <match src="call_argument [86577,86599]" dest="call_argument [87865,87887]"/>
  <match src="identifier: checkpoints [60875,60886]" dest="identifier: checkpoints [60877,60888]"/>
  <match src="type_name [43367,43374]" dest="type_name [43367,43374]"/>
  <match src="): ) [36413,36414]" dest="): ) [36413,36414]"/>
  <match src=",: , [59602,59603]" dest=",: , [59604,59605]"/>
  <match src="return_statement [28182,28195]" dest="return_statement [28182,28195]"/>
  <match src="user_defined_type [21256,21262]" dest="user_defined_type [21256,21262]"/>
  <match src="{: { [36218,36219]" dest="{: { [36218,36219]"/>
  <match src=".: . [20714,20715]" dest=".: . [20714,20715]"/>
  <match src="emit: emit [55256,55260]" dest="emit: emit [55258,55262]"/>
  <match src="identifier: r [29634,29635]" dest="identifier: r [29634,29635]"/>
  <match src="member_expression [107982,108002]" dest="member_expression [107906,107926]"/>
  <match src="expression_statement [104042,104087]" dest="expression_statement [103966,104011]"/>
  <match src="]: ] [74284,74285]" dest="]: ] [73997,73998]"/>
  <match src="(: ( [93898,93899]" dest="(: ( [93544,93545]"/>
  <match src="identifier: _usersTotalWeight [93074,93091]" dest="identifier: _usersTotalWeight [92722,92739]"/>
  <match src="]: ] [98929,98930]" dest="]: ] [99118,99119]"/>
  <match src="parameter [40770,40789]" dest="parameter [40770,40789]"/>
  <match src="call_argument [22029,22034]" dest="call_argument [22029,22034]"/>
  <match src="call_expression [53399,53411]" dest="call_expression [53401,53413]"/>
  <match src="member_expression [83148,83173]" dest="member_expression [72347,72372]"/>
  <match src="): ) [38589,38590]" dest="): ) [38589,38590]"/>
  <match src="): ) [40590,40591]" dest="): ) [40590,40591]"/>
  <match src="call_expression [90339,90375]" dest="call_expression [91394,91448]"/>
  <match src="if_statement [28121,28140]" dest="if_statement [28121,28140]"/>
  <match src="call_argument [37201,37216]" dest="call_argument [37201,37216]"/>
  <match src="uint256: uint256 [43521,43528]" dest="uint256: uint256 [43521,43528]"/>
  <match src=",: , [52705,52706]" dest=",: , [52707,52708]"/>
  <match src=",: , [39249,39250]" dest=",: , [39249,39250]"/>
  <match src="expression_statement [72565,72595]" dest="expression_statement [72257,72287]"/>
  <match src="view: view [49993,49997]" dest="view: view [49995,49999]"/>
  <match src="identifier: isUserContractSender [83528,83548]" dest="identifier: isUserContractSender [84393,84413]"/>
  <match src="expression_statement [17866,17934]" dest="expression_statement [17866,17934]"/>
  <match src="event_paramater [66463,66483]" dest="event_paramater [66716,66736]"/>
  <match src=".: . [36463,36464]" dest=".: . [36463,36464]"/>
  <match src="variable_declaration [89823,89841]" dest="variable_declaration [91065,91083]"/>
  <match src="public: public [66396,66402]" dest="public: public [66416,66422]"/>
  <match src="member_expression [79278,79292]" dest="member_expression [79433,79447]"/>
  <match src="&gt;&gt;=: &gt;&gt;= [29353,29356]" dest="&gt;&gt;=: &gt;&gt;= [29353,29356]"/>
  <match src="constant: constant [32633,32641]" dest="constant: constant [32633,32641]"/>
  <match src=".: . [101652,101653]" dest=".: . [101389,101390]"/>
  <match src="address: address [76218,76225]" dest="address: address [75734,75741]"/>
  <match src="unary_expression [37014,37016]" dest="unary_expression [37014,37016]"/>
  <match src="}: } [28292,28293]" dest="}: } [28292,28293]"/>
  <match src="function_body [58621,58624]" dest="function_body [58623,58626]"/>
  <match src="primitive_type [95379,95386]" dest="primitive_type [94527,94534]"/>
  <match src="identifier: b [10069,10070]" dest="identifier: b [10069,10070]"/>
  <match src="identifier: _pending [46729,46737]" dest="identifier: _pending [46971,46979]"/>
  <match src="identifier: returndata [23557,23567]" dest="identifier: returndata [23557,23567]"/>
  <match src="(: ( [40526,40527]" dest="(: ( [40526,40527]"/>
  <match src="expression_statement [95664,95707]" dest="expression_statement [94812,94855]"/>
  <match src="function: function [75423,75431]" dest="function: function [74939,74947]"/>
  <match src="type_name [77424,77431]" dest="type_name [76864,76871]"/>
  <match src="type_name [16652,16659]" dest="type_name [16652,16659]"/>
  <match src="return: return [60970,60976]" dest="return: return [60972,60978]"/>
  <match src="identifier: pool [84339,84343]" dest="identifier: pool [84874,84878]"/>
  <match src="returns: returns [51978,51985]" dest="returns: returns [51980,51987]"/>
  <match src="emit_statement [55914,55957]" dest="emit_statement [55916,55959]"/>
  <match src="parameter [3459,3473]" dest="parameter [3459,3473]"/>
  <match src="uint256: uint256 [57203,57210]" dest="uint256: uint256 [57205,57212]"/>
  <match src="identifier: Context [25269,25276]" dest="identifier: Context [25269,25276]"/>
  <match src="): ) [80821,80822]" dest="): ) [81508,81509]"/>
  <match src="primitive_type [98945,98952]" dest="primitive_type [99130,99137]"/>
  <match src=",: , [94382,94383]" dest=",: , [94028,94029]"/>
  <match src="type_name [8845,8852]" dest="type_name [8845,8852]"/>
  <match src="primitive_type [1403,1408]" dest="primitive_type [1403,1408]"/>
  <match src="function: function [36739,36747]" dest="function: function [36739,36747]"/>
  <match src="[: [ [95478,95479]" dest="[: [ [94626,94627]"/>
  <match src="primitive_type [62750,62757]" dest="primitive_type [62752,62759]"/>
  <match src="function_body [33691,33747]" dest="function_body [33691,33747]"/>
  <match src=".: . [67547,67548]" dest=".: . [67794,67795]"/>
  <match src="event_paramater [38612,38632]" dest="event_paramater [38612,38632]"/>
  <match src="returns: returns [40543,40550]" dest="returns: returns [40543,40550]"/>
  <match src="storage: storage [99530,99537]" dest="storage: storage [97620,97627]"/>
  <match src="function: function [18730,18738]" dest="function: function [18730,18738]"/>
  <match src="=: = [61845,61846]" dest="=: = [61847,61848]"/>
  <match src="call_argument [84345,84363]" dest="call_argument [84880,84898]"/>
  <match src="type_name [66880,66887]" dest="type_name [67133,67140]"/>
  <match src="(: ( [107144,107145]" dest="(: ( [107068,107069]"/>
  <match src="identifier: data [16199,16203]" dest="identifier: data [16199,16203]"/>
  <match src="[: [ [88663,88664]" dest="[: [ [89511,89512]"/>
  <match src="identifier: _pairSwap [105054,105063]" dest="identifier: _pairSwap [104978,104987]"/>
  <match src="=: = [25559,25560]" dest="=: = [25559,25560]"/>
  <match src="): ) [102640,102641]" dest="): ) [102564,102565]"/>
  <match src="type_name [73302,73309]" dest="type_name [73067,73074]"/>
  <match src="): ) [44652,44653]" dest="): ) [44654,44655]"/>
  <match src="): ) [37355,37356]" dest="): ) [37355,37356]"/>
  <match src="primitive_type [108356,108363]" dest="primitive_type [108280,108287]"/>
  <match src="call_argument [83873,83883]" dest="call_argument [85594,85604]"/>
  <match src="(: ( [93931,93932]" dest="(: ( [93577,93578]"/>
  <match src="identifier: rankPoolIndex [86222,86235]" dest="identifier: rankPoolIndex [87510,87523]"/>
  <match src="(: ( [34439,34440]" dest="(: ( [34439,34440]"/>
  <match src="member_expression [100467,100488]" dest="member_expression [78513,78534]"/>
  <match src=",: , [21925,21926]" dest=",: , [21925,21926]"/>
  <match src="yul_function_call [19746,19790]" dest="yul_function_call [19746,19790]"/>
  <match src="identifier: isFirstTokenShard [97415,97432]" dest="identifier: isFirstTokenShard [96180,96197]"/>
  <match src="identifier: number [88756,88762]" dest="identifier: number [89604,89610]"/>
  <match src="expression_statement [36506,36568]" dest="expression_statement [36506,36568]"/>
  <match src=".: . [98648,98649]" dest=".: . [97413,97414]"/>
  <match src="if: if [70336,70338]" dest="if: if [70047,70049]"/>
  <match src="number_literal: 16 [29357,29359]" dest="number_literal: 16 [29357,29359]"/>
  <match src="return_statement [6586,6604]" dest="return_statement [6586,6604]"/>
  <match src="call_expression [92980,93004]" dest="call_expression [92628,92652]"/>
  <match src="parameter [33239,33255]" dest="parameter [33239,33255]"/>
  <match src="event_definition [39629,39692]" dest="event_definition [39629,39692]"/>
  <match src="expression_statement [88824,88894]" dest="expression_statement [89672,89742]"/>
  <match src="(: ( [33419,33420]" dest="(: ( [33419,33420]"/>
  <match src="(: ( [95591,95592]" dest="(: ( [94739,94740]"/>
  <match src="identifier: lpTokenAmount [86060,86073]" dest="identifier: lpTokenAmount [87352,87365]"/>
  <match src=",: , [23576,23577]" dest=",: , [23576,23577]"/>
  <match src="=: = [26529,26530]" dest="=: = [26529,26530]"/>
  <match src="identifier: _invitees [94560,94569]" dest="identifier: _invitees [94206,94215]"/>
  <match src=".: . [79394,79395]" dest=".: . [79549,79550]"/>
  <match src=".: . [78453,78454]" dest=".: . [78033,78034]"/>
  <match src="binary_expression [60783,60810]" dest="binary_expression [60785,60812]"/>
  <match src="primitive_type [95768,95772]" dest="primitive_type [94916,94920]"/>
  <match src="+: + [29791,29792]" dest="+: + [29791,29792]"/>
  <match src="=: = [100641,100642]" dest="=: = [100217,100218]"/>
  <match src="]: ] [85831,85832]" dest="]: ] [87131,87132]"/>
  <match src="user_defined_type [33420,33429]" dest="user_defined_type [33420,33429]"/>
  <match src="if: if [104216,104218]" dest="if: if [104140,104142]"/>
  <match src="[: [ [98923,98924]" dest="[: [ [99112,99113]"/>
  <match src="user_defined_type [60852,60862]" dest="user_defined_type [60854,60864]"/>
  <match src="identifier: modifiedWeight [102673,102687]" dest="identifier: modifiedWeight [102597,102611]"/>
  <match src="&gt;: &gt; [46951,46952]" dest="&gt;: &gt; [46338,46339]"/>
  <match src="bytes: bytes [1403,1408]" dest="bytes: bytes [1403,1408]"/>
  <match src="&gt;: &gt; [60742,60743]" dest="&gt;: &gt; [60744,60745]"/>
  <match src="expression_statement [61987,62029]" dest="expression_statement [61989,62031]"/>
  <match src="while: while [103868,103873]" dest="while: while [103792,103797]"/>
  <match src="identifier: user [62339,62343]" dest="identifier: user [62341,62345]"/>
  <match src="call_argument [108032,108061]" dest="call_argument [107956,107985]"/>
  <match src="binary_expression [16781,16811]" dest="binary_expression [16781,16811]"/>
  <match src="): ) [28018,28019]" dest="): ) [28018,28019]"/>
  <match src="identifier: INVITOR_WEIGHT [43391,43405]" dest="identifier: INVITOR_WEIGHT [43391,43405]"/>
  <match src="{: { [64198,64199]" dest="{: { [64200,64201]"/>
  <match src="string_literal [37668,37712]" dest="string_literal [37668,37712]"/>
  <match src="variable_declaration_statement [22256,22375]" dest="variable_declaration_statement [22256,22375]"/>
  <match src="type_name [64422,64429]" dest="type_name [64424,64431]"/>
  <match src="): ) [38119,38120]" dest="): ) [38119,38120]"/>
  <match src="expression_statement [71083,71555]" dest="expression_statement [70794,71266]"/>
  <match src="&quot;: &quot; [14336,14337]" dest="&quot;: &quot; [14336,14337]"/>
  <match src="identifier: block [76293,76298]" dest="identifier: block [75809,75814]"/>
  <match src="type_name [95220,95227]" dest="type_name [94368,94375]"/>
  <match src="identifier: newOriginWeight [80371,80386]" dest="identifier: newOriginWeight [80991,81006]"/>
  <match src="visibility [27235,27243]" dest="visibility [27235,27243]"/>
  <match src="if: if [67368,67370]" dest="if: if [67615,67617]"/>
  <match src="call_argument [82025,82038]" dest="call_argument [82863,82876]"/>
  <match src="(: ( [56678,56679]" dest="(: ( [56680,56681]"/>
  <match src="): ) [104710,104711]" dest="): ) [104634,104635]"/>
  <match src=",: , [17116,17117]" dest=",: , [17116,17117]"/>
  <match src="member_expression [79572,79597]" dest="member_expression [79732,79757]"/>
  <match src="=: = [42252,42253]" dest="=: = [42252,42253]"/>
  <match src="type_name [100236,100243]" dest="type_name [66576,66583]"/>
  <match src="if: if [6263,6265]" dest="if: if [6263,6265]"/>
  <match src="identifier: r [29600,29601]" dest="identifier: r [29600,29601]"/>
  <match src="identifier: sender [52688,52694]" dest="identifier: sender [52690,52696]"/>
  <match src="]: ] [82516,82517]" dest="]: ] [83354,83355]"/>
  <match src="identifier: _sender [42804,42811]" dest="identifier: _sender [42804,42811]"/>
  <match src="identifier: amountfeeRateDenominator [46634,46658]" dest="identifier: amountfeeRateDenominator [46876,46900]"/>
  <match src=",: , [20736,20737]" dest=",: , [20736,20737]"/>
  <match src="state_mutability [33668,33672]" dest="state_mutability [33668,33672]"/>
  <match src="function: function [40094,40102]" dest="function: function [40094,40102]"/>
  <match src="primitive_type [87282,87289]" dest="primitive_type [88443,88450]"/>
  <match src="(: ( [29788,29789]" dest="(: ( [29788,29789]"/>
  <match src="visibility [75123,75131]" dest="visibility [67458,67466]"/>
  <match src="): ) [34235,34236]" dest="): ) [34235,34236]"/>
  <match src="variable_declaration_statement [23305,23401]" dest="variable_declaration_statement [23305,23401]"/>
  <match src="identifier: _invitor [42843,42851]" dest="identifier: _invitor [42843,42851]"/>
  <match src="(: ( [52793,52794]" dest="(: ( [52795,52796]"/>
  <match src="': ' [35493,35494]" dest="': ' [35493,35494]"/>
  <match src="identifier: b [6522,6523]" dest="identifier: b [6522,6523]"/>
  <match src=".: . [86379,86380]" dest=".: . [87667,87668]"/>
  <match src="assignment_expression [86375,86413]" dest="assignment_expression [87663,87701]"/>
  <match src="for: for [43039,43042]" dest="for: for [43039,43042]"/>
  <match src="binary_expression [11857,11862]" dest="binary_expression [11857,11862]"/>
  <match src="identifier: _name [49836,49841]" dest="identifier: _name [49838,49843]"/>
  <match src=".: . [76599,76600]" dest=".: . [76115,76116]"/>
  <match src="return: return [10183,10189]" dest="return: return [10183,10189]"/>
  <match src="identifier: pool [100467,100471]" dest="identifier: pool [78513,78517]"/>
  <match src="): ) [86137,86138]" dest="): ) [87425,87426]"/>
  <match src=".: . [18054,18055]" dest=".: . [18054,18055]"/>
  <match src=".: . [108105,108106]" dest=".: . [108029,108030]"/>
  <match src="return_statement [24366,24384]" dest="return_statement [24366,24384]"/>
  <match src="call_argument [102581,102599]" dest="call_argument [102505,102523]"/>
  <match src="(: ( [38033,38034]" dest="(: ( [38033,38034]"/>
  <match src="virtual: virtual [24433,24440]" dest="virtual: virtual [24433,24440]"/>
  <match src="-: - [37131,37132]" dest="-: - [37131,37132]"/>
  <match src="primitive_type [27317,27324]" dest="primitive_type [27317,27324]"/>
  <match src="type_name [40552,40556]" dest="type_name [40552,40556]"/>
  <match src="primitive_type [93251,93258]" dest="primitive_type [92899,92906]"/>
  <match src="call_argument [36857,36872]" dest="call_argument [36857,36872]"/>
  <match src="assignment_expression [94642,94679]" dest="assignment_expression [94288,94325]"/>
  <match src="function_body [18855,19153]" dest="function_body [18855,19153]"/>
  <match src="identifier: toOld [62015,62020]" dest="identifier: toOld [62017,62022]"/>
  <match src="identifier: price [98023,98028]" dest="identifier: price [96788,96793]"/>
  <match src="function_definition [47210,47379]" dest="function_definition [47212,47381]"/>
  <match src="block_statement [87605,87638]" dest="block_statement [88766,88799]"/>
  <match src="expression_statement [52678,52715]" dest="expression_statement [52680,52717]"/>
  <match src="binary_expression [87400,87423]" dest="binary_expression [88561,88584]"/>
  <match src="binary_expression [76320,76340]" dest="binary_expression [75836,75856]"/>
  <match src="primitive_type [26531,26538]" dest="primitive_type [26531,26538]"/>
  <match src="): ) [75723,75724]" dest="): ) [75239,75240]"/>
  <match src="parameter [37982,37998]" dest="parameter [37982,37998]"/>
  <match src="&lt;: &lt; [60095,60096]" dest="&lt;: &lt; [60097,60098]"/>
  <match src="(: ( [108010,108011]" dest="(: ( [107934,107935]"/>
  <match src="expression_statement [45266,45357]" dest="expression_statement [45268,45359]"/>
  <match src="number_literal: 0 [97686,97687]" dest="number_literal: 0 [96451,96452]"/>
  <match src="user_defined_type [48898,48905]" dest="user_defined_type [48900,48907]"/>
  <match src="binary_expression [33976,34018]" dest="binary_expression [33976,34018]"/>
  <match src="public: public [43608,43614]" dest="public: public [43608,43614]"/>
  <match src="member_expression [59531,59541]" dest="member_expression [59533,59543]"/>
  <match src="call_expression [53434,53446]" dest="call_expression [53436,53448]"/>
  <match src="if: if [34665,34667]" dest="if: if [34665,34667]"/>
  <match src="type_name [16687,16694]" dest="type_name [16687,16694]"/>
  <match src="external: external [44494,44502]" dest="external: external [44496,44504]"/>
  <match src="call_argument [103014,103025]" dest="call_argument [102938,102949]"/>
  <match src="assignment_expression [68005,68035]" dest="assignment_expression [68257,68287]"/>
  <match src=",: , [88557,88558]" dest=",: , [89405,89406]"/>
  <match src="(: ( [25341,25342]" dest="(: ( [25341,25342]"/>
  <match src="): ) [57273,57274]" dest="): ) [57275,57276]"/>
  <match src="identifier: value [14289,14294]" dest="identifier: value [14289,14294]"/>
  <match src=",: , [103139,103140]" dest=",: , [103063,103064]"/>
  <match src="private: private [84593,84600]" dest="private: private [85724,85731]"/>
  <match src="(: ( [39639,39640]" dest="(: ( [39639,39640]"/>
  <match src="uint256: uint256 [59967,59974]" dest="uint256: uint256 [59969,59976]"/>
  <match src="internal: internal [56345,56353]" dest="internal: internal [56347,56355]"/>
  <match src="identifier: originWeight [81555,81567]" dest="identifier: originWeight [82248,82260]"/>
  <match src="comment: // Total allocation poitns. Must be the sum of all allocation points in all pools. [64993,65075]" dest="comment: // Total allocation poitns. Must be the sum of all allocation points in all pools. [65003,65085]"/>
  <match src="expression_statement [54116,54246]" dest="expression_statement [54118,54248]"/>
  <match src="number_literal: 0 [84248,84249]" dest="number_literal: 0 [84777,84778]"/>
  <match src="call_argument [87045,87083]" dest="call_argument [88202,88240]"/>
  <match src="visibility [1422,1428]" dest="visibility [1422,1428]"/>
  <match src="uint112: uint112 [42036,42043]" dest="uint112: uint112 [42036,42043]"/>
  <match src="uint256: uint256 [6554,6561]" dest="uint256: uint256 [6554,6561]"/>
  <match src="): ) [66834,66835]" dest="): ) [67087,67088]"/>
  <match src="number_literal: 0 [23435,23436]" dest="number_literal: 0 [23435,23436]"/>
  <match src="identifier: _owner [26895,26901]" dest="identifier: _owner [26895,26901]"/>
  <match src="expression_statement [97500,97532]" dest="expression_statement [96265,96297]"/>
  <match src="comment: // this cannot exceed 256 bits, all values are 224 bits [35508,35563]" dest="comment: // this cannot exceed 256 bits, all values are 224 bits [35508,35563]"/>
  <match src="override: override [109118,109126]" dest="override: override [109042,109050]"/>
  <match src="external: external [40791,40799]" dest="external: external [40791,40799]"/>
  <match src="identifier: msg [86670,86673]" dest="identifier: msg [88311,88314]"/>
  <match src="type_name [57203,57210]" dest="type_name [57205,57212]"/>
  <match src="member_expression [55108,55129]" dest="member_expression [55110,55131]"/>
  <match src="call_expression [78692,78727]" dest="call_expression [78272,78307]"/>
  <match src="primitive_type [12919,12926]" dest="primitive_type [12919,12926]"/>
  <match src="binary_expression [38289,38370]" dest="binary_expression [38289,38370]"/>
  <match src="]: ] [73174,73175]" dest="]: ] [72939,72940]"/>
  <match src="call_argument [69687,69702]" dest="call_argument [69398,69413]"/>
  <match src=":: : [71190,71191]" dest=":: : [70901,70902]"/>
  <match src="identifier: newVotes [62458,62466]" dest="identifier: newVotes [62460,62468]"/>
  <match src="unary_expression [71028,71046]" dest="unary_expression [70739,70757]"/>
  <match src="identifier: devDividendWeight [44384,44401]" dest="identifier: devDividendWeight [44386,44403]"/>
  <match src=",: , [27451,27452]" dest=",: , [27451,27452]"/>
  <match src="variable_declaration [98521,98566]" dest="variable_declaration [97286,97331]"/>
  <match src="call_expression [7316,7362]" dest="call_expression [7316,7362]"/>
  <match src="call_expression [8865,8909]" dest="call_expression [8865,8909]"/>
  <match src="identifier: sender [54792,54798]" dest="identifier: sender [54794,54800]"/>
  <match src="number_literal: 30 [65410,65412]" dest="number_literal: 30 [65420,65422]"/>
  <match src="returns: returns [3899,3906]" dest="returns: returns [3899,3906]"/>
  <match src="function: function [40632,40640]" dest="function: function [40632,40640]"/>
  <match src="&gt;: &gt; [85436,85437]" dest="&gt;: &gt; [86736,86737]"/>
  <match src=".: . [99793,99794]" dest=".: . [97985,97986]"/>
  <match src="identifier: self [38313,38317]" dest="identifier: self [38313,38317]"/>
  <match src="(: ( [47011,47012]" dest="(: ( [46398,46399]"/>
  <match src="comment: /**      * @dev See {IERC20-approve}.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [51765,51898]" dest="comment: /**      * @dev See {IERC20-approve}.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [51767,51900]"/>
  <match src="number_literal: 128 [30398,30401]" dest="number_literal: 128 [30398,30401]"/>
  <match src="variable_declaration_statement [107257,107424]" dest="variable_declaration_statement [107181,107348]"/>
  <match src="(: ( [105224,105225]" dest="(: ( [105148,105149]"/>
  <match src="identifier: ERC20 [48889,48894]" dest="identifier: ERC20 [48891,48896]"/>
  <match src="expression_statement [30828,30836]" dest="expression_statement [30828,30836]"/>
  <match src="identifier: _startBlock [45700,45711]" dest="identifier: _startBlock [45702,45713]"/>
  <match src="binary_expression [31934,31941]" dest="binary_expression [31934,31941]"/>
  <match src="uint256: uint256 [5915,5922]" dest="uint256: uint256 [5915,5922]"/>
  <match src=",: , [10910,10911]" dest=",: , [10910,10911]"/>
  <match src="identifier: maxRankNumber [87400,87413]" dest="identifier: maxRankNumber [88561,88574]"/>
  <match src="uint224: uint224 [37201,37208]" dest="uint224: uint224 [37201,37208]"/>
  <match src="&lt;: &lt; [5369,5370]" dest="&lt;: &lt; [5369,5370]"/>
  <match src="else: else [61002,61006]" dest="else: else [61004,61008]"/>
  <match src="(: ( [92626,92627]" dest="(: ( [92274,92275]"/>
  <match src="identifier: newPid [66756,66762]" dest="identifier: newPid [67009,67015]"/>
  <match src="identifier: _msgSender [25561,25571]" dest="identifier: _msgSender [25561,25571]"/>
  <match src="visibility [59497,59503]" dest="visibility [59499,59505]"/>
  <match src="variable_declaration_statement [103436,103493]" dest="variable_declaration_statement [103360,103417]"/>
  <match src="function_definition [3425,3499]" dest="function_definition [3425,3499]"/>
  <match src="[: [ [83554,83555]" dest="[: [ [84419,84420]"/>
  <match src="internal: internal [35974,35982]" dest="internal: internal [35974,35982]"/>
  <match src="function: function [38979,38987]" dest="function: function [38979,38987]"/>
  <match src="call_argument [45288,45328]" dest="call_argument [45290,45330]"/>
  <match src="if_statement [74023,74961]" dest="if_statement [73753,74833]"/>
  <match src="(: ( [38312,38313]" dest="(: ( [38312,38313]"/>
  <match src="array_access [60358,60396]" dest="array_access [60360,60398]"/>
  <match src="assignment_expression [104101,104137]" dest="assignment_expression [104025,104061]"/>
  <match src=".: . [86592,86593]" dest=".: . [87880,87881]"/>
  <match src="(: ( [97875,97876]" dest="(: ( [96640,96641]"/>
  <match src="address: address [21270,21277]" dest="address: address [21270,21277]"/>
  <match src="expression_statement [79880,79927]" dest="expression_statement [80465,80512]"/>
  <match src="primitive_type [37250,37257]" dest="primitive_type [37250,37257]"/>
  <match src="primitive_type [109328,109335]" dest="primitive_type [109252,109259]"/>
  <match src="(: ( [94069,94070]" dest="(: ( [93715,93716]"/>
  <match src="call_expression [89512,89576]" dest="call_expression [90754,90818]"/>
  <match src="variable_declaration [92905,92922]" dest="variable_declaration [92553,92570]"/>
  <match src="): ) [103291,103292]" dest="): ) [103215,103216]"/>
  <match src="visibility [38944,38952]" dest="visibility [38944,38952]"/>
  <match src="): ) [76510,76511]" dest="): ) [76026,76027]"/>
  <match src="primitive_type [69910,69914]" dest="primitive_type [69621,69625]"/>
  <match src="identifier: reserve1 [40335,40343]" dest="identifier: reserve1 [40335,40343]"/>
  <match src="primitive_type [43168,43175]" dest="primitive_type [43168,43175]"/>
  <match src="function_body [10132,10203]" dest="function_body [10132,10203]"/>
  <match src="type_name [61301,61308]" dest="type_name [61303,61310]"/>
  <match src=".: . [42444,42445]" dest=".: . [42444,42445]"/>
  <match src="}: } [64363,64364]" dest="}: } [64365,64366]"/>
  <match src="call_struct_argument [71381,71419]" dest="call_struct_argument [71092,71130]"/>
  <match src="[: [ [55117,55118]" dest="[: [ [55119,55120]"/>
  <match src="primitive_type [18795,18801]" dest="primitive_type [18795,18801]"/>
  <match src="(: ( [18840,18841]" dest="(: ( [18840,18841]"/>
  <match src="function: function [41551,41559]" dest="function: function [41551,41559]"/>
  <match src="parameter [57855,57870]" dest="parameter [57857,57872]"/>
  <match src="identifier: errorMessage [19132,19144]" dest="identifier: errorMessage [19132,19144]"/>
  <match src="type_name [93961,93968]" dest="type_name [93607,93614]"/>
  <match src="call_expression [83855,83893]" dest="call_expression [85576,85615]"/>
  <match src="[: [ [95431,95432]" dest="[: [ [94579,94580]"/>
  <match src="type_name [39590,39597]" dest="type_name [39590,39597]"/>
  <match src="identifier: _pending [47186,47194]" dest="identifier: _pending [47188,47196]"/>
  <match src="): ) [37832,37833]" dest="): ) [37832,37833]"/>
  <match src="call_expression [25981,25993]" dest="call_expression [25981,25993]"/>
  <match src="(: ( [16237,16238]" dest="(: ( [16237,16238]"/>
  <match src="call_argument [104335,104348]" dest="call_argument [104259,104272]"/>
  <match src="primitive_type [69707,69714]" dest="primitive_type [69418,69425]"/>
  <match src=",: , [96233,96234]" dest=",: , [95543,95544]"/>
  <match src=",: , [39880,39881]" dest=",: , [39880,39881]"/>
  <match src="primitive_type [102947,102954]" dest="primitive_type [102871,102878]"/>
  <match src="expression_statement [86644,86682]" dest="expression_statement [88289,88323]"/>
  <match src="identifier: isFirstTokenEthToken [70104,70124]" dest="identifier: isFirstTokenEthToken [69815,69835]"/>
  <match src="=: = [103522,103523]" dest="=: = [103446,103447]"/>
  <match src="binary_expression [97639,97687]" dest="binary_expression [96404,96452]"/>
  <match src="private: private [100299,100306]" dest="private: private [99640,99647]"/>
  <match src="parameter [19276,19288]" dest="parameter [19276,19288]"/>
  <match src="type_name [88421,88428]" dest="type_name [89269,89276]"/>
  <match src="{: { [56362,56363]" dest="{: { [56364,56365]"/>
  <match src="): ) [20637,20638]" dest="): ) [20637,20638]"/>
  <match src="if_statement [8167,8188]" dest="if_statement [8167,8188]"/>
  <match src="call_argument [85952,85962]" dest="call_argument [87251,87261]"/>
  <match src="call_argument [37353,37355]" dest="call_argument [37353,37355]"/>
  <match src="): ) [29736,29737]" dest="): ) [29736,29737]"/>
  <match src="call_argument [98214,98253]" dest="call_argument [96979,97018]"/>
  <match src="identifier: lpTokenAmount [82071,82084]" dest="identifier: lpTokenAmount [82909,82922]"/>
  <match src="identifier: lastPoolIndex [87862,87875]" dest="identifier: lastPoolIndex [89023,89036]"/>
  <match src="identifier: originWeight [102516,102528]" dest="identifier: originWeight [102440,102452]"/>
  <match src="contract_declaration [62984,108615]" dest="contract_declaration [62986,108539]"/>
  <match src="(: ( [49802,49803]" dest="(: ( [49804,49805]"/>
  <match src="(: ( [82639,82640]" dest="(: ( [83477,83478]"/>
  <match src="{: { [83836,83837]" dest="{: { [85561,85562]"/>
  <match src="(: ( [58561,58562]" dest="(: ( [58563,58564]"/>
  <match src="[: [ [93258,93259]" dest="[: [ [92906,92907]"/>
  <match src="parameter [18382,18399]" dest="parameter [18382,18399]"/>
  <match src="call_argument [33285,33309]" dest="call_argument [33285,33309]"/>
  <match src="(: ( [93052,93053]" dest="(: ( [92700,92701]"/>
  <match src="call_argument [74928,74948]" dest="call_argument [74799,74820]"/>
  <match src="type_name [60766,60773]" dest="type_name [60768,60775]"/>
  <match src="type_name [61431,61438]" dest="type_name [61433,61440]"/>
  <match src="identifier: x [30828,30829]" dest="identifier: x [30828,30829]"/>
  <match src="uint256: uint256 [7730,7737]" dest="uint256: uint256 [7730,7737]"/>
  <match src="type_name [39237,39244]" dest="type_name [39237,39244]"/>
  <match src="else: else [67453,67457]" dest="else: else [67700,67704]"/>
  <match src="type_name [85781,85788]" dest="type_name [87081,87088]"/>
  <match src="(: ( [95767,95768]" dest="(: ( [94915,94916]"/>
  <match src=",: , [46254,46255]" dest=",: , [46256,46257]"/>
  <match src="): ) [23622,23623]" dest="): ) [23622,23623]"/>
  <match src="): ) [59702,59703]" dest="): ) [59704,59705]"/>
  <match src="binary_expression [29407,29418]" dest="binary_expression [29407,29418]"/>
  <match src="assignment_expression [107756,107864]" dest="assignment_expression [107680,107788]"/>
  <match src="}: } [60500,60501]" dest="}: } [60502,60503]"/>
  <match src="type_name [16238,16243]" dest="type_name [16238,16243]"/>
  <match src="identifier: data [18789,18793]" dest="identifier: data [18789,18793]"/>
  <match src="identifier: _pids [88877,88882]" dest="identifier: _pids [89725,89730]"/>
  <match src="variable_declaration [102539,102561]" dest="variable_declaration [102463,102485]"/>
  <match src="{: { [24278,24279]" dest="{: { [24278,24279]"/>
  <match src="uint: uint [39101,39105]" dest="uint: uint [39101,39105]"/>
  <match src="primitive_type [35587,35594]" dest="primitive_type [35587,35594]"/>
  <match src="identifier: accumulativeDividend [71305,71325]" dest="identifier: accumulativeDividend [71016,71036]"/>
  <match src="*: * [27738,27739]" dest="*: * [27738,27739]"/>
  <match src="): ) [46707,46708]" dest="): ) [46949,46950]"/>
  <match src="uint256: uint256 [5606,5613]" dest="uint256: uint256 [5606,5613]"/>
  <match src="identifier: this [24475,24479]" dest="identifier: this [24475,24479]"/>
  <match src=",: , [79816,79817]" dest=",: , [80401,80402]"/>
  <match src="}: } [61087,61088]" dest="}: } [61089,61090]"/>
  <match src="): ) [77884,77885]" dest="): ) [77119,77120]"/>
  <match src="call_expression [28207,28251]" dest="call_expression [28207,28251]"/>
  <match src="number_literal: 0 [34732,34733]" dest="number_literal: 0 [34732,34733]"/>
  <match src="identifier: sub [84200,84203]" dest="identifier: sub [84729,84732]"/>
  <match src="(: ( [103619,103620]" dest="(: ( [103543,103544]"/>
  <match src="variable_declaration [103728,103750]" dest="variable_declaration [103652,103674]"/>
  <match src="}: } [35838,35839]" dest="}: } [35838,35839]"/>
  <match src="*: * [27688,27689]" dest="*: * [27688,27689]"/>
  <match src="&gt;: &gt; [80109,80110]" dest="&gt;: &gt; [80694,80695]"/>
  <match src="identifier: calculateDividend [89512,89529]" dest="identifier: calculateDividend [90754,90771]"/>
  <match src="identifier: l [28150,28151]" dest="identifier: l [28150,28151]"/>
  <match src="binary_expression [7758,7764]" dest="binary_expression [7758,7764]"/>
  <match src="variable_declaration [73252,73269]" dest="variable_declaration [73017,73034]"/>
  <match src="struct_member [64264,64276]" dest="struct_member [64266,64278]"/>
  <match src="primitive_type [18382,18387]" dest="primitive_type [18382,18387]"/>
  <match src="(: ( [55895,55896]" dest="(: ( [55897,55898]"/>
  <match src=",: , [71160,71161]" dest=",: , [70871,70872]"/>
  <match src="internal: internal [96100,96108]" dest="internal: internal [95410,95418]"/>
  <match src="parameter [94716,94728]" dest="parameter [85069,85081]"/>
  <match src="state_mutability [47418,47422]" dest="state_mutability [47420,47424]"/>
  <match src="variable_declaration [74064,74087]" dest="variable_declaration [73794,73817]"/>
  <match src="call_argument [72943,72994]" dest="call_argument [72625,72676]"/>
  <match src="identifier: blackListMap [73157,73169]" dest="identifier: blackListMap [72922,72934]"/>
  <match src="solidity_pragma_token [1672,1695]" dest="solidity_pragma_token [1672,1695]"/>
  <match src="(: ( [20708,20709]" dest="(: ( [20708,20709]"/>
  <match src="number_literal: 64 [29100,29102]" dest="number_literal: 64 [29100,29102]"/>
  <match src="{: { [70432,70433]" dest="{: { [70143,70144]"/>
  <match src="function_definition [40847,40872]" dest="function_definition [40847,40872]"/>
  <match src="type_name [88777,88781]" dest="type_name [89625,89629]"/>
  <match src="comment: // decode a UQ112x112 into a uint112 by truncating after the radix point [33326,33398]" dest="comment: // decode a UQ112x112 into a uint112 by truncating after the radix point [33326,33398]"/>
  <match src="identifier: uq112x112 [34566,34575]" dest="identifier: uq112x112 [34566,34575]"/>
  <match src="virtual: virtual [1047,1054]" dest="virtual: virtual [1047,1054]"/>
  <match src="=: = [99691,99692]" dest="=: = [97781,97782]"/>
  <match src="(: ( [37570,37571]" dest="(: ( [37570,37571]"/>
  <match src="expression_statement [108096,108145]" dest="expression_statement [108020,108069]"/>
  <match src=".: . [106259,106260]" dest=".: . [106183,106184]"/>
  <match src="identifier: _count [87700,87706]" dest="identifier: _count [88861,88867]"/>
  <match src="false [6287,6292]" dest="false [6287,6292]"/>
  <match src="): ) [71212,71213]" dest="): ) [70923,70924]"/>
  <match src="): ) [20744,20745]" dest="): ) [20744,20745]"/>
  <match src=",: , [70662,70663]" dest=",: , [70373,70374]"/>
  <match src="{: { [63188,63189]" dest="{: { [63190,63191]"/>
  <match src="{: { [57889,57890]" dest="{: { [57891,57892]"/>
  <match src="primitive_type [25284,25291]" dest="primitive_type [25284,25291]"/>
  <match src="uint256: uint256 [63199,63206]" dest="uint256: uint256 [63201,63208]"/>
  <match src="identifier: PoolInfo [96906,96914]" dest="identifier: PoolInfo [95671,95679]"/>
  <match src="(: ( [2329,2330]" dest="(: ( [2329,2330]"/>
  <match src="boolean_literal [5685,5690]" dest="boolean_literal [5685,5690]"/>
  <match src="): ) [40527,40528]" dest="): ) [40527,40528]"/>
  <match src="expression_statement [93344,93358]" dest="expression_statement [92992,93006]"/>
  <match src="member_expression [103753,103767]" dest="member_expression [103677,103691]"/>
  <match src="{: { [75553,75554]" dest="{: { [75069,75070]"/>
  <match src="identifier: div [46430,46433]" dest="identifier: div [46672,46675]"/>
  <match src="): ) [104584,104585]" dest="): ) [104508,104509]"/>
  <match src="internal: internal [33216,33224]" dest="internal: internal [33216,33224]"/>
  <match src="): ) [83835,83836]" dest="): ) [85560,85561]"/>
  <match src="expression_statement [88687,88725]" dest="expression_statement [89535,89573]"/>
  <match src="visibility [103200,103207]" dest="visibility [103124,103131]"/>
  <match src=".: . [98133,98134]" dest=".: . [96898,96899]"/>
  <match src="number_literal: 0 [61370,61371]" dest="number_literal: 0 [61372,61373]"/>
  <match src="uint256: uint256 [100269,100276]" dest="uint256: uint256 [66543,66550]"/>
  <match src="return_statement [99913,99920]" dest="return_statement [98105,98112]"/>
  <match src="expression_statement [26041,26043]" dest="expression_statement [26041,26043]"/>
  <match src="&quot;: &quot; [56567,56568]" dest="&quot;: &quot; [56569,56570]"/>
  <match src="parameter [71817,71844]" dest="parameter [71528,71555]"/>
  <match src="=: = [79971,79972]" dest="=: = [80556,80557]"/>
  <match src="binary_expression [36101,36120]" dest="binary_expression [36101,36120]"/>
  <match src="state_mutability [27244,27248]" dest="state_mutability [27244,27248]"/>
  <match src="&quot;: &quot; [22330,22331]" dest="&quot;: &quot; [22330,22331]"/>
  <match src="identifier: _price [106147,106153]" dest="identifier: _price [106071,106077]"/>
  <match src="function_definition [2015,2083]" dest="function_definition [2015,2083]"/>
  <match src="identifier: calculateRewardToken [103085,103105]" dest="identifier: calculateRewardToken [103009,103029]"/>
  <match src="call_argument [102709,102723]" dest="call_argument [102633,102647]"/>
  <match src="binary_expression [29820,29829]" dest="binary_expression [29820,29829]"/>
  <match src="function_definition [16139,16365]" dest="function_definition [16139,16365]"/>
  <match src="{: { [84288,84289]" dest="{: { [84817,84818]"/>
  <match src="type_name [93320,93327]" dest="type_name [92968,92975]"/>
  <match src="event: event [38516,38521]" dest="event: event [38516,38521]"/>
  <match src="identifier: nCheckpoints [62294,62306]" dest="identifier: nCheckpoints [62296,62308]"/>
  <match src="identifier: uq112x112 [107046,107055]" dest="identifier: uq112x112 [106970,106979]"/>
  <match src="number_literal: 0 [108532,108533]" dest="number_literal: 0 [108456,108457]"/>
  <match src="external: external [39030,39038]" dest="external: external [39030,39038]"/>
  <match src="call_expression [108011,108079]" dest="call_expression [107935,108003]"/>
  <match src="parameter [40724,40739]" dest="parameter [40724,40739]"/>
  <match src="visibility [40059,40067]" dest="visibility [40059,40067]"/>
  <match src="type_name [6235,6242]" dest="type_name [6235,6242]"/>
  <match src="identifier: uq112x112 [36389,36398]" dest="identifier: uq112x112 [36389,36398]"/>
  <match src="number_literal: 0 [5389,5390]" dest="number_literal: 0 [5389,5390]"/>
  <match src="false: false [5382,5387]" dest="false: false [5382,5387]"/>
  <match src="(: ( [9492,9493]" dest="(: ( [9492,9493]"/>
  <match src="identifier: add [101653,101656]" dest="identifier: add [101390,101393]"/>
  <match src="identifier: x [27939,27940]" dest="identifier: x [27939,27940]"/>
  <match src="bytes: bytes [16668,16673]" dest="bytes: bytes [16668,16673]"/>
  <match src="=: = [62456,62457]" dest="=: = [62458,62459]"/>
  <match src="call_argument [85417,85439]" dest="call_argument [86717,86739]"/>
  <match src="identifier: poolCount [88714,88723]" dest="identifier: poolCount [89562,89571]"/>
  <match src="identifier: priceCumulativeLast [108106,108125]" dest="identifier: priceCumulativeLast [108030,108049]"/>
  <match src="assignment_expression [84781,84826]" dest="assignment_expression [85912,85957]"/>
  <match src="identifier: endBlock [80661,80669]" dest="identifier: endBlock [81348,81356]"/>
  <match src="uint224: uint224 [35244,35251]" dest="uint224: uint224 [35244,35251]"/>
  <match src="function_body [22951,23642]" dest="function_body [22951,23642]"/>
  <match src="identifier: safeTransferFrom [20770,20786]" dest="identifier: safeTransferFrom [20770,20786]"/>
  <match src="identifier: _pid [89693,89697]" dest="identifier: _pid [90935,90939]"/>
  <match src="identifier: treasruyDividend [83379,83395]" dest="identifier: treasruyDividend [85163,85179]"/>
  <match src=".: . [80822,80823]" dest=".: . [81509,81510]"/>
  <match src="(: ( [70540,70541]" dest="(: ( [70251,70252]"/>
  <match src="[: [ [61186,61187]" dest="[: [ [61188,61189]"/>
  <match src="identifier: c [8300,8301]" dest="identifier: c [8300,8301]"/>
  <match src="parameter [40580,40590]" dest="parameter [40580,40590]"/>
  <match src="assignment_expression [67925,67953]" dest="assignment_expression [68177,68205]"/>
  <match src="identifier: blockTimestamp [106856,106870]" dest="identifier: blockTimestamp [106780,106794]"/>
  <match src="identifier: user [83019,83023]" dest="identifier: user [83798,83802]"/>
  <match src="{: { [104990,104991]" dest="{: { [104914,104915]"/>
  <match src="if: if [109616,109618]" dest="if: if [109540,109542]"/>
  <match src="): ) [77648,77649]" dest="): ) [77088,77089]"/>
  <match src=".: . [107045,107046]" dest=".: . [106969,106970]"/>
  <match src="}: } [105660,105661]" dest="}: } [105584,105585]"/>
  <match src="identifier: _x [33506,33508]" dest="identifier: _x [33506,33508]"/>
  <match src="identifier: x [28102,28103]" dest="identifier: x [28102,28103]"/>
  <match src="type_name [80506,80513]" dest="type_name [81191,81198]"/>
  <match src="return_statement [90856,90865]" dest="return_statement [91881,91890]"/>
  <match src="number_literal: 0 [97366,97367]" dest="number_literal: 0 [96131,96132]"/>
  <match src="function: function [40207,40215]" dest="function: function [40207,40215]"/>
  <match src="}: } [73954,73955]" dest="}: } [73684,73685]"/>
  <match src="identifier: _to [96290,96293]" dest="identifier: _to [95600,95603]"/>
  <match src="event: event [39787,39792]" dest="event: event [39787,39792]"/>
  <match src="): ) [73655,73656]" dest="): ) [73420,73421]"/>
  <match src="event_paramater [66524,66538]" dest="event_paramater [66777,66791]"/>
  <match src="address: address [69679,69686]" dest="address: address [69390,69397]"/>
  <match src="identifier: origin [47293,47299]" dest="identifier: origin [47295,47301]"/>
  <match src="call_argument [55936,55937]" dest="call_argument [55938,55939]"/>
  <match src="assignment_expression [41841,41903]" dest="assignment_expression [41841,41903]"/>
  <match src="identifier: safeIncreaseAllowance [21874,21895]" dest="identifier: safeIncreaseAllowance [21874,21895]"/>
  <match src="identifier: allowance [21991,22000]" dest="identifier: allowance [21991,22000]"/>
  <match src="(: ( [30212,30213]" dest="(: ( [30212,30213]"/>
  <match src="type_name [25284,25291]" dest="type_name [25284,25291]"/>
  <match src="uint256: uint256 [63066,63073]" dest="uint256: uint256 [63068,63075]"/>
  <match src="call_argument [16306,16311]" dest="call_argument [16306,16311]"/>
  <match src="string_literal [16893,16924]" dest="string_literal [16893,16924]"/>
  <match src="identifier: b [11861,11862]" dest="identifier: b [11861,11862]"/>
  <match src="&quot;: &quot; [45624,45625]" dest="&quot;: &quot; [45626,45627]"/>
  <match src="visibility [1895,1903]" dest="visibility [1895,1903]"/>
  <match src=",: , [18793,18794]" dest=",: , [18793,18794]"/>
  <match src="string_literal [34377,34405]" dest="string_literal [34377,34405]"/>
  <match src="binary_expression [31719,31733]" dest="binary_expression [31719,31733]"/>
  <match src="identifier: fraction [42416,42424]" dest="identifier: fraction [42416,42424]"/>
  <match src="): ) [103198,103199]" dest="): ) [103122,103123]"/>
  <match src="}: } [29559,29560]" dest="}: } [29559,29560]"/>
  <match src="=: = [76582,76583]" dest="=: = [76098,76099]"/>
  <match src="call_argument [36537,36566]" dest="call_argument [36537,36566]"/>
  <match src="call_argument [107786,107863]" dest="call_argument [107710,107787]"/>
  <match src="block_statement [31775,31810]" dest="block_statement [31775,31810]"/>
  <match src="identifier: lastDividendHeight [63775,63793]" dest="identifier: lastDividendHeight [63777,63795]"/>
  <match src="user_defined_type [96364,96372]" dest="user_defined_type [99934,99942]"/>
  <match src="identifier: getModifiedRewardToken [89844,89866]" dest="identifier: getRewardToken [91099,91113]"/>
  <match src="identifier: produceBlocksPerMonth [80827,80848]" dest="identifier: produceBlocksPerMonth [81514,81535]"/>
  <match src="call_argument [53422,53472]" dest="call_argument [53424,53474]"/>
  <match src="return_statement [28262,28286]" dest="return_statement [28262,28286]"/>
  <match src="array_access [51722,51740]" dest="array_access [51724,51742]"/>
  <match src="variable_declaration_statement [83194,83276]" dest="variable_declaration_statement [84011,84070]"/>
  <match src="): ) [95257,95258]" dest="): ) [94405,94406]"/>
  <match src=",: , [68579,68580]" dest=",: , [68465,68466]"/>
  <match src="identifier: contractFeeRateNumerator [43802,43826]" dest="identifier: contractFeeRateNumerator [43802,43826]"/>
  <match src="primitive_type [36399,36406]" dest="primitive_type [36399,36406]"/>
  <match src="call_argument [56679,56686]" dest="call_argument [56681,56688]"/>
  <match src="]: ] [72162,72163]" dest="]: ] [71796,71797]"/>
  <match src="identifier: user [62426,62430]" dest="identifier: user [62428,62432]"/>
  <match src="(: ( [42834,42835]" dest="(: ( [42834,42835]"/>
  <match src="primitive_type [48965,48972]" dest="primitive_type [48967,48974]"/>
  <match src="identifier: shardPoolDividendWeight [79371,79394]" dest="identifier: shardPoolDividendWeight [79526,79549]"/>
  <match src="identifier: tokenBlockTimestampLast [105532,105555]" dest="identifier: tokenBlockTimestampLast [105456,105479]"/>
  <match src="public: public [59192,59198]" dest="public: public [59194,59200]"/>
  <match src=",: , [8244,8245]" dest=",: , [8244,8245]"/>
  <match src="call_expression [22279,22374]" dest="call_expression [22279,22374]"/>
  <match src="call_expression [35429,35495]" dest="call_expression [35429,35495]"/>
  <match src="comment: // solhint-disable-next-line avoid-low-level-calls [16938,16988]" dest="comment: // solhint-disable-next-line avoid-low-level-calls [16938,16988]"/>
  <match src="==: == [77146,77148]" dest="==: == [77931,77933]"/>
  <match src="[: [ [99478,99479]" dest="[: [ [97568,97569]"/>
  <match src="uint256: uint256 [6235,6242]" dest="uint256: uint256 [6235,6242]"/>
  <match src=",: , [39535,39536]" dest=",: , [39535,39536]"/>
  <match src="binary_expression [36930,36944]" dest="binary_expression [36930,36944]"/>
  <match src="identifier: rankPoolIndex [84806,84819]" dest="identifier: rankPoolIndex [85937,85950]"/>
  <match src="call_argument [17130,17142]" dest="call_argument [17130,17142]"/>
  <match src="identifier: rankIdList [93978,93988]" dest="identifier: rankIdList [93624,93634]"/>
  <match src="identifier: lower_self [35347,35357]" dest="identifier: lower_self [35347,35357]"/>
  <match src="return_type_definition [7721,7738]" dest="return_type_definition [7721,7738]"/>
  <match src="}: } [109349,109350]" dest="}: } [109273,109274]"/>
  <match src="member_expression [86589,86599]" dest="member_expression [87877,87887]"/>
  <match src="identifier: this [67802,67806]" dest="identifier: this [68016,68020]"/>
  <match src="state_mutability [2733,2737]" dest="state_mutability [2733,2737]"/>
  <match src="return_statement [85609,85616]" dest="return_statement [86909,86916]"/>
  <match src="type_name [92568,92575]" dest="type_name [92216,92223]"/>
  <match src="primitive_type [39251,39258]" dest="primitive_type [39251,39258]"/>
  <match src="binary_expression [100765,100842]" dest="binary_expression [100750,100828]"/>
  <match src="identifier: _initialBlock [104335,104348]" dest="identifier: _initialBlock [104259,104272]"/>
  <match src="): ) [72754,72755]" dest="): ) [72807,72808]"/>
  <match src="identifier: poolInfo [108461,108469]" dest="identifier: poolInfo [108385,108393]"/>
  <match src="-: - [27325,27326]" dest="-: - [27325,27326]"/>
  <match src="(: ( [55927,55928]" dest="(: ( [55929,55930]"/>
  <match src="identifier: upper [60783,60788]" dest="identifier: upper [60785,60790]"/>
  <match src=".: . [21990,21991]" dest=".: . [21990,21991]"/>
  <match src=".: . [99885,99886]" dest=".: . [98077,98078]"/>
  <match src="&gt;: &gt; [32038,32039]" dest="&gt;: &gt; [32038,32039]"/>
  <match src="memory: memory [16244,16250]" dest="memory: memory [16244,16250]"/>
  <match src="call_expression [72928,72995]" dest="call_expression [72610,72677]"/>
  <match src="string_literal [85523,85550]" dest="string_literal [86823,86850]"/>
  <match src="parameter [102375,102388]" dest="parameter [102234,102247]"/>
  <match src="type_name [29883,29890]" dest="type_name [29883,29890]"/>
  <match src="||: || [103266,103268]" dest="||: || [103190,103192]"/>
  <match src="call_argument [33976,34018]" dest="call_argument [33976,34018]"/>
  <match src="): ) [103856,103857]" dest="): ) [103780,103781]"/>
  <match src="=: = [96137,96138]" dest="=: = [95447,95448]"/>
  <match src="address: address [42835,42842]" dest="address: address [42835,42842]"/>
  <match src="memory: memory [95481,95487]" dest="memory: memory [94629,94635]"/>
  <match src="state_variable_declaration [65081,65115]" dest="state_variable_declaration [65091,65125]"/>
  <match src="function: function [6487,6495]" dest="function: function [6487,6495]"/>
  <match src="identifier: _pool [84696,84701]" dest="identifier: _pool [85827,85832]"/>
  <match src="identifier: _startBlock [67486,67497]" dest="identifier: _startBlock [67733,67744]"/>
  <match src=".: . [71586,71587]" dest=".: . [71297,71298]"/>
  <match src="yul_assignment [13010,13038]" dest="yul_assignment [13010,13038]"/>
  <match src="': ' [30282,30283]" dest="': ' [30282,30283]"/>
  <match src="solidity_version: 0.6.0 [47670,47675]" dest="solidity_version: 0.6.0 [47672,47677]"/>
  <match src="{: { [10972,10973]" dest="{: { [10972,10973]"/>
  <match src="}: } [107246,107247]" dest="}: } [107170,107171]"/>
  <match src="identifier: r [29828,29829]" dest="identifier: r [29828,29829]"/>
  <match src="call_expression [87349,87385]" dest="call_expression [88510,88546]"/>
  <match src="{: { [53379,53380]" dest="{: { [53381,53382]"/>
  <match src="member_expression [99874,99892]" dest="member_expression [98066,98084]"/>
  <match src="call_argument [52013,52025]" dest="call_argument [52015,52027]"/>
  <match src=".: . [105643,105644]" dest=".: . [105567,105568]"/>
  <match src="type_name [34827,34834]" dest="type_name [34827,34834]"/>
  <match src="member_expression [101520,101539]" dest="member_expression [101255,101274]"/>
  <match src="uint256: uint256 [64131,64138]" dest="uint256: uint256 [64133,64140]"/>
  <match src="(: ( [46903,46904]" dest="(: ( [47145,47146]"/>
  <match src="primitive_type [61600,61607]" dest="primitive_type [61602,61609]"/>
  <match src="uint256: uint256 [82789,82796]" dest="uint256: uint256 [83627,83634]"/>
  <match src="uint256: uint256 [100201,100208]" dest="uint256: uint256 [80132,80139]"/>
  <match src="(: ( [104083,104084]" dest="(: ( [104007,104008]"/>
  <match src="=: = [98882,98883]" dest="=: = [99071,99072]"/>
  <match src="uint256: uint256 [95220,95227]" dest="uint256: uint256 [94368,94375]"/>
  <match src="): ) [53410,53411]" dest="): ) [53412,53413]"/>
  <match src="identifier: spender [21833,21840]" dest="identifier: spender [21833,21840]"/>
  <match src="call_expression [76584,76618]" dest="call_expression [76100,76134]"/>
  <match src="identifier: pool [93591,93595]" dest="identifier: pool [93239,93243]"/>
  <match src="type_name [27442,27449]" dest="type_name [27442,27449]"/>
  <match src="(: ( [46988,46989]" dest="(: ( [46375,46376]"/>
  <match src="function_body [75927,76066]" dest="function_body [75443,75582]"/>
  <match src="}: } [31700,31701]" dest="}: } [31700,31701]"/>
  <match src="identifier: UserInfo [99521,99529]" dest="identifier: UserInfo [97611,97619]"/>
  <match src="binary_expression [8234,8244]" dest="binary_expression [8234,8244]"/>
  <match src="memory: memory [34214,34220]" dest="memory: memory [34214,34220]"/>
  <match src="return: return [97359,97365]" dest="return: return [96124,96130]"/>
  <match src="bool: bool [101871,101875]" dest="bool: bool [85118,85122]"/>
  <match src="call_argument [72714,72718]" dest="call_argument [72756,72760]"/>
  <match src="identifier: success [17109,17116]" dest="identifier: success [17109,17116]"/>
  <match src="function_body [108869,108871]" dest="function_body [108793,108795]"/>
  <match src="function_body [5964,6331]" dest="function_body [5964,6331]"/>
  <match src="identifier: uq112x112 [37617,37626]" dest="identifier: uq112x112 [37617,37626]"/>
  <match src="address: address [25639,25646]" dest="address: address [25639,25646]"/>
  <match src="variable_declaration_statement [89099,89145]" dest="variable_declaration_statement [89947,89993]"/>
  <match src="emit_statement [26466,26512]" dest="emit_statement [26466,26512]"/>
  <match src="string [36048,36085]" dest="string [36048,36085]"/>
  <match src="identifier: _pid [86467,86471]" dest="identifier: _pid [87755,87759]"/>
  <match src="identifier: inviteeIndexMap [98908,98923]" dest="identifier: inviteeIndexMap [99097,99112]"/>
  <match src="augmented_assignment_expression [29600,29607]" dest="augmented_assignment_expression [29600,29607]"/>
  <match src="(: ( [93260,93261]" dest="(: ( [92908,92909]"/>
  <match src="comment: // File: @openzeppelin/contracts/token/ERC20/ERC20.sol [47590,47644]" dest="comment: // File: @openzeppelin/contracts/token/ERC20/ERC20.sol [47592,47646]"/>
  <match src="call_expression [89867,89897]" dest="call_expression [91114,91144]"/>
  <match src="primitive_type [7268,7275]" dest="primitive_type [7268,7275]"/>
  <match src="expression_statement [47315,47361]" dest="expression_statement [47317,47363]"/>
  <match src="identifier: self [35944,35948]" dest="identifier: self [35944,35948]"/>
  <match src="override: override [51969,51977]" dest="override: override [51971,51979]"/>
  <match src="uint32: uint32 [64094,64100]" dest="uint32: uint32 [64096,64102]"/>
  <match src="number_literal: 8 [66429,66430]" dest="number_literal: 8 [66449,66450]"/>
  <match src="function: function [57831,57839]" dest="function: function [57833,57841]"/>
  <match src=".: . [46899,46900]" dest=".: . [47141,47142]"/>
  <match src="variable_declaration [98862,98881]" dest="variable_declaration [99051,99070]"/>
  <match src="function_body [103230,104398]" dest="function_body [103154,104322]"/>
  <match src="(: ( [98081,98082]" dest="(: ( [96846,96847]"/>
  <match src="(: ( [34565,34566]" dest="(: ( [34565,34566]"/>
  <match src="identifier: add [104292,104295]" dest="identifier: add [104216,104219]"/>
  <match src="): ) [3497,3498]" dest="): ) [3497,3498]"/>
  <match src="number_literal: 2 [98082,98083]" dest="number_literal: 2 [96847,96848]"/>
  <match src="}: } [60297,60298]" dest="}: } [60299,60300]"/>
  <match src="&gt;=: &gt;= [7326,7328]" dest="&gt;=: &gt;= [7326,7328]"/>
  <match src="parameter [102412,102419]" dest="parameter [102271,102278]"/>
  <match src="identifier: _lpTokenSwap [104564,104576]" dest="identifier: _lpTokenSwap [104488,104500]"/>
  <match src="type_name [22221,22228]" dest="type_name [22221,22228]"/>
  <match src=",: , [15202,15203]" dest=",: , [15202,15203]"/>
  <match src="call_expression [51481,51493]" dest="call_expression [51483,51495]"/>
  <match src="identifier: nftShard [68963,68971]" dest="identifier: nftShard [68674,68682]"/>
  <match src="call_argument [85498,85521]" dest="call_argument [86798,86821]"/>
  <match src="identifier: checkAdmin [75938,75948]" dest="identifier: checkAdmin [75454,75464]"/>
  <match src="(: ( [64320,64321]" dest="(: ( [64322,64323]"/>
  <match src="expression_statement [82632,82695]" dest="expression_statement [83470,83533]"/>
  <match src="number_literal: 32 [30608,30610]" dest="number_literal: 32 [30608,30610]"/>
  <match src="visibility [225,231]" dest="visibility [225,231]"/>
  <match src=".: . [92391,92392]" dest=".: . [87303,87304]"/>
  <match src="-: - [61567,61568]" dest="-: - [61569,61570]"/>
  <match src=",: , [21285,21286]" dest=",: , [21285,21286]"/>
  <match src="return: return [106881,106887]" dest="return: return [106805,106811]"/>
  <match src="binary_expression [86577,86599]" dest="binary_expression [87865,87887]"/>
  <match src="expression_statement [49614,49628]" dest="expression_statement [49616,49630]"/>
  <match src="(: ( [104308,104309]" dest="(: ( [104232,104233]"/>
  <match src="=: = [34920,34921]" dest="=: = [34920,34921]"/>
  <match src="assignment_expression [47120,47148]" dest="assignment_expression [46507,46535]"/>
  <match src="=: = [44352,44353]" dest="=: = [44354,44355]"/>
  <match src="call_argument [17118,17128]" dest="call_argument [17118,17128]"/>
  <match src="identifier: xx [29407,29409]" dest="identifier: xx [29407,29409]"/>
  <match src="type_name [23305,23310]" dest="type_name [23305,23310]"/>
  <match src="delete: delete [87824,87830]" dest="delete: delete [88985,88991]"/>
  <match src="event_paramater [39640,39662]" dest="event_paramater [39640,39662]"/>
  <match src="(: ( [44612,44613]" dest="(: ( [44614,44615]"/>
  <match src="virtual: virtual [45776,45783]" dest="virtual: virtual [45778,45785]"/>
  <match src="): ) [78264,78265]" dest="): ) [77397,77398]"/>
  <match src="identifier: token [22096,22101]" dest="identifier: token [22096,22101]"/>
  <match src="{: { [77152,77153]" dest="{: { [77937,77938]"/>
  <match src="[: [ [42860,42861]" dest="[: [ [42860,42861]"/>
  <match src="identifier: _x [36106,36108]" dest="identifier: _x [36106,36108]"/>
  <match src="type_name [19188,19192]" dest="type_name [19188,19192]"/>
  <match src=",: , [68180,68181]" dest=",: , [68329,68330]"/>
  <match src="]: ] [85587,85588]" dest="]: ] [86887,86888]"/>
  <match src="call_argument [21809,21831]" dest="call_argument [21809,21831]"/>
  <match src="expression_statement [80963,81100]" dest="expression_statement [81650,81787]"/>
  <match src="memory: memory [15210,15216]" dest="memory: memory [15210,15216]"/>
  <match src="identifier: _x [106671,106673]" dest="identifier: _x [106595,106597]"/>
  <match src="event_definition [38516,38591]" dest="event_definition [38516,38591]"/>
  <match src="type_name [96982,96989]" dest="type_name [95747,95754]"/>
  <match src="identifier: checkAdmin [47396,47406]" dest="identifier: checkAdmin [47398,47408]"/>
  <match src="primitive_type [37423,37430]" dest="primitive_type [37423,37430]"/>
  <match src="type_cast_expression [42400,42448]" dest="type_cast_expression [42400,42448]"/>
  <match src="identifier: functionCallWithValue [16148,16169]" dest="identifier: functionCallWithValue [16148,16169]"/>
  <match src="parameter [16170,16184]" dest="parameter [16170,16184]"/>
  <match src="identifier: sub [55126,55129]" dest="identifier: sub [55128,55131]"/>
  <match src="true [6315,6319]" dest="true [6315,6319]"/>
  <match src=",: , [68750,68751]" dest=",: , [68541,68542]"/>
  <match src="contract: contract [108,116]" dest="contract: contract [108,116]"/>
  <match src="identifier: _lockTime [90751,90760]" dest="identifier: _lockTime [91776,91785]"/>
  <match src="}: } [30946,30947]" dest="}: } [30946,30947]"/>
  <match src="uint256: uint256 [89227,89234]" dest="uint256: uint256 [90152,90159]"/>
  <match src="type_cast_expression [37123,37134]" dest="type_cast_expression [37123,37134]"/>
  <match src="uint256: uint256 [66880,66887]" dest="uint256: uint256 [67133,67140]"/>
  <match src="uint256: uint256 [62129,62136]" dest="uint256: uint256 [62131,62138]"/>
  <match src="): ) [14110,14111]" dest="): ) [14110,14111]"/>
  <match src=",: , [69231,69232]" dest=",: , [68942,68943]"/>
  <match src="return_type_definition [54090,54104]" dest="return_type_definition [54092,54106]"/>
  <match src="pure: pure [39409,39413]" dest="pure: pure [39409,39413]"/>
  <match src="(: ( [21620,21621]" dest="(: ( [21620,21621]"/>
  <match src="expression_statement [84746,84771]" dest="expression_statement [85877,85902]"/>
  <match src="call_argument [22295,22308]" dest="call_argument [22295,22308]"/>
  <match src="returns: returns [88494,88501]" dest="returns: returns [89342,89349]"/>
  <match src="binary_expression [21604,21666]" dest="binary_expression [21604,21666]"/>
  <match src="identifier: price0Cumulative [107263,107279]" dest="identifier: price0Cumulative [107187,107203]"/>
  <match src="address: address [49040,49047]" dest="address: address [49042,49049]"/>
  <match src="}: } [86479,86480]" dest="}: } [87767,87768]"/>
  <match src="int256: int256 [34445,34451]" dest="int256: int256 [34445,34451]"/>
  <match src="member_expression [55873,55895]" dest="member_expression [55875,55897]"/>
  <match src="]: ] [46625,46626]" dest="]: ] [46867,46868]"/>
  <match src="): ) [35494,35495]" dest="): ) [35494,35495]"/>
  <match src="member_expression [108258,108286]" dest="member_expression [108182,108210]"/>
  <match src="type_name [39640,39647]" dest="type_name [39640,39647]"/>
  <match src="type_cast_expression [61747,61757]" dest="type_cast_expression [61749,61759]"/>
  <match src="call_argument [34020,34047]" dest="call_argument [34020,34047]"/>
  <match src="primitive_type [54800,54807]" dest="primitive_type [54802,54809]"/>
  <match src="): ) [84139,84140]" dest="): ) [84668,84669]"/>
  <match src="call_expression [41860,41880]" dest="call_expression [41860,41880]"/>
  <match src="identifier: amount [61309,61315]" dest="identifier: amount [61311,61317]"/>
  <match src="number_literal: 0 [82596,82597]" dest="number_literal: 0 [83434,83435]"/>
  <match src="emit: emit [25613,25617]" dest="emit: emit [25613,25617]"/>
  <match src="{: { [62220,62221]" dest="{: { [62222,62223]"/>
  <match src="parameter [10123,10130]" dest="parameter [10123,10130]"/>
  <match src=",: , [83883,83884]" dest=",: , [85604,85605]"/>
  <match src="number_literal: 0 [37665,37666]" dest="number_literal: 0 [37665,37666]"/>
  <match src=",: , [15290,15291]" dest=",: , [15290,15291]"/>
  <match src="if_statement [76526,76634]" dest="if_statement [76042,76150]"/>
  <match src="uint256: uint256 [36250,36257]" dest="uint256: uint256 [36250,36257]"/>
  <match src="uint256: uint256 [62160,62167]" dest="uint256: uint256 [62162,62169]"/>
  <match src="member_expression [107715,107740]" dest="member_expression [107639,107664]"/>
  <match src="identifier: MINT_DECREASE_TERM [102994,103012]" dest="identifier: MINT_DECREASE_TERM [102918,102936]"/>
  <match src="variable_declaration [18021,18044]" dest="variable_declaration [18021,18044]"/>
  <match src="call_expression [19050,19075]" dest="call_expression [19050,19075]"/>
  <match src="if_statement [83705,83807]" dest="if_statement [85441,85535]"/>
  <match src="event_paramater [39664,39676]" dest="event_paramater [39664,39676]"/>
  <match src="identifier: d [27786,27787]" dest="identifier: d [27786,27787]"/>
  <match src="(: ( [29010,29011]" dest="(: ( [29010,29011]"/>
  <match src="): ) [49816,49817]" dest="): ) [49818,49819]"/>
  <match src="uint256: uint256 [92568,92575]" dest="uint256: uint256 [92216,92223]"/>
  <match src="&gt;: &gt; [46366,46367]" dest="&gt;: &gt; [46608,46609]"/>
  <match src="type_name [46102,46109]" dest="type_name [46104,46111]"/>
  <match src="primitive_type [78204,78211]" dest="primitive_type [77337,77344]"/>
  <match src="function: function [44074,44082]" dest="function: function [44076,44084]"/>
  <match src="): ) [5417,5418]" dest="): ) [5417,5418]"/>
  <match src="): ) [38110,38111]" dest="): ) [38110,38111]"/>
  <match src="type_name [27971,27978]" dest="type_name [27971,27978]"/>
  <match src="identifier: produceBlocksPerMonth [81261,81282]" dest="identifier: produceBlocksPerMonth [81950,81971]"/>
  <match src="address: address [26731,26738]" dest="address: address [26731,26738]"/>
  <match src="call_expression [18089,18141]" dest="call_expression [18089,18141]"/>
  <match src="identifier: inviteesCount [99091,99104]" dest="identifier: inviteesCount [99259,99272]"/>
  <match src="parameter [33682,33689]" dest="parameter [33682,33689]"/>
  <match src="new: new [95578,95581]" dest="new: new [94726,94729]"/>
  <match src="bool: bool [46155,46159]" dest="bool: bool [46157,46161]"/>
  <match src="event_paramater [25342,25371]" dest="event_paramater [25342,25371]"/>
  <match src="): ) [104026,104027]" dest="): ) [103950,103951]"/>
  <match src="returns: returns [38889,38896]" dest="returns: returns [38889,38896]"/>
  <match src="binary_expression [46600,46701]" dest="binary_expression [46842,46943]"/>
  <match src="identifier: b [5351,5352]" dest="identifier: b [5351,5352]"/>
  <match src="struct_member [64422,64434]" dest="struct_member [64424,64436]"/>
  <match src="primitive_type [64869,64876]" dest="primitive_type [64877,64884]"/>
  <match src="type_name [61935,61942]" dest="type_name [61937,61944]"/>
  <match src="visibility [64777,64783]" dest="visibility [64783,64791]"/>
  <match src="expression_statement [72503,72551]" dest="expression_statement [72195,72243]"/>
  <match src="identifier: _price [106888,106894]" dest="identifier: _price [106812,106818]"/>
  <match src="parameter [10072,10098]" dest="parameter [10072,10098]"/>
  <match src="identifier: lastIndex [73584,73593]" dest="identifier: lastIndex [73349,73358]"/>
  <match src="string [86601,86632]" dest="string [87889,87920]"/>
  <match src="number_literal: 1 [61130,61131]" dest="number_literal: 1 [61132,61133]"/>
  <match src="{: { [71905,71906]" dest="{: { [71616,71617]"/>
  <match src="address: address [40136,40143]" dest="address: address [40136,40143]"/>
  <match src="call_expression [75564,75576]" dest="call_expression [75080,75092]"/>
  <match src="identifier: _x [37737,37739]" dest="identifier: _x [37737,37739]"/>
  <match src="(: ( [55048,55049]" dest="(: ( [55050,55051]"/>
  <match src="number_literal: 1 [73343,73344]" dest="number_literal: 1 [73108,73109]"/>
  <match src="primitive_type [66549,66556]" dest="primitive_type [66802,66809]"/>
  <match src="uint256: uint256 [103503,103510]" dest="uint256: uint256 [103427,103434]"/>
  <match src="identifier: msg [79995,79998]" dest="identifier: msg [80580,80583]"/>
  <match src="external: external [44859,44867]" dest="external: external [44861,44869]"/>
  <match src="identifier: b [6899,6900]" dest="identifier: b [6899,6900]"/>
  <match src="identifier: isFirstTokenEthToken [69999,70019]" dest="identifier: isFirstTokenEthToken [69710,69730]"/>
  <match src="event_paramater [66549,66563]" dest="event_paramater [66802,66816]"/>
  <match src="identifier: _price [108184,108190]" dest="identifier: _price [108108,108114]"/>
  <match src="array_access [67772,67808]" dest="array_access [67986,68022]"/>
  <match src="parameter [5955,5962]" dest="parameter [5955,5962]"/>
  <match src="number_literal: 0 [85520,85521]" dest="number_literal: 0 [86820,86821]"/>
  <match src="unary_expression [27624,27629]" dest="unary_expression [27624,27629]"/>
  <match src="binary_expression [11819,11824]" dest="binary_expression [11819,11824]"/>
  <match src="return_statement [78375,78382]" dest="return_statement [77887,77894]"/>
  <match src="for_statement [103615,103718]" dest="for_statement [103539,103642]"/>
  <match src=".: . [106062,106063]" dest=".: . [105986,105987]"/>
  <match src="true: true [6622,6626]" dest="true: true [6622,6626]"/>
  <match src="): ) [66569,66570]" dest="): ) [66822,66823]"/>
  <match src=",: , [42433,42434]" dest=",: , [42433,42434]"/>
  <match src="primitive_type [104924,104928]" dest="primitive_type [104848,104852]"/>
  <match src="identifier: toNum [61786,61791]" dest="identifier: toNum [61788,61793]"/>
  <match src="function_definition [93878,94040]" dest="function_definition [93524,93686]"/>
  <match src="number_literal: 0 [6922,6923]" dest="number_literal: 0 [6922,6923]"/>
  <match src="augmented_assignment_expression [42380,42462]" dest="augmented_assignment_expression [42380,42462]"/>
  <match src="identifier: cp [61011,61013]" dest="identifier: cp [61013,61015]"/>
  <match src="identifier: lpTokenAmount [84186,84199]" dest="identifier: lpTokenAmount [84715,84728]"/>
  <match src="identifier: pool [93454,93458]" dest="identifier: pool [93102,93106]"/>
  <match src=",: , [51936,51937]" dest=",: , [51938,51939]"/>
  <match src="identifier: sender [80345,80351]" dest="identifier: sender [80965,80971]"/>
  <match src="type_name [92811,92818]" dest="type_name [92459,92466]"/>
  <match src="number_literal: 0 [76545,76546]" dest="number_literal: 0 [76061,76062]"/>
  <match src="number_literal: 1 [35750,35751]" dest="number_literal: 1 [35750,35751]"/>
  <match src="identifier: blackListMap [73612,73624]" dest="identifier: blackListMap [73377,73389]"/>
  <match src="array_access [93483,93516]" dest="array_access [93131,93164]"/>
  <match src="identifier: checkpoints [60358,60369]" dest="identifier: checkpoints [60360,60371]"/>
  <match src="identifier: r [27740,27741]" dest="identifier: r [27740,27741]"/>
  <match src="primitive_type [76959,76966]" dest="primitive_type [76475,76482]"/>
  <match src="identifier: _pairInfo [106825,106834]" dest="identifier: _pairInfo [106749,106758]"/>
  <match src="&lt;: &lt; [34326,34327]" dest="&lt;: &lt; [34326,34327]"/>
  <match src=".: . [21789,21790]" dest=".: . [21789,21790]"/>
  <match src="!=: != [54962,54964]" dest="!=: != [54964,54966]"/>
  <match src="identifier: _tokenToEthSwap [69687,69702]" dest="identifier: _tokenToEthSwap [69398,69413]"/>
  <match src="[: [ [93105,93106]" dest="[: [ [92753,92754]"/>
  <match src="call_expression [61987,62028]" dest="call_expression [61989,62030]"/>
  <match src="identifier: _oracleWeight [97999,98012]" dest="identifier: _oracleWeight [96764,96777]"/>
  <match src="identifier: _feeRateNumerator [45036,45053]" dest="identifier: _feeRateNumerator [45038,45055]"/>
  <match src="comment: // File: @uniswap/lib/contracts/libraries/FixedPoint.sol [32164,32220]" dest="comment: // File: @uniswap/lib/contracts/libraries/FixedPoint.sol [32164,32220]"/>
  <match src="expression_statement [49638,49656]" dest="expression_statement [49640,49658]"/>
  <match src="(: ( [14254,14255]" dest="(: ( [14254,14255]"/>
  <match src="uint256: uint256 [34279,34286]" dest="uint256: uint256 [34279,34286]"/>
  <match src="array_access [93781,93805]" dest="array_access [93427,93451]"/>
  <match src="primitive_type [105902,105908]" dest="primitive_type [105826,105832]"/>
  <match src="&quot;: &quot; [104836,104837]" dest="&quot;: &quot; [104760,104761]"/>
  <match src="type_name [33944,33951]" dest="type_name [33944,33951]"/>
  <match src="primitive_type [40820,40827]" dest="primitive_type [40820,40827]"/>
  <match src="identifier: pool [79536,79540]" dest="identifier: pool [78896,78900]"/>
  <match src="call_expression [55028,55075]" dest="call_expression [55030,55077]"/>
  <match src="identifier: l [28189,28190]" dest="identifier: l [28189,28190]"/>
  <match src="binary_expression [95780,95793]" dest="binary_expression [94928,94941]"/>
  <match src="(: ( [33292,33293]" dest="(: ( [33292,33293]"/>
  <match src=",: , [42052,42053]" dest=",: , [42052,42053]"/>
  <match src="variable_declaration [77660,77676]" dest="variable_declaration [77467,77499]"/>
  <match src="): ) [89575,89576]" dest="): ) [90817,90818]"/>
  <match src="(: ( [90979,90980]" dest="(: ( [92004,92005]"/>
  <match src="=: = [107327,107328]" dest="=: = [107251,107252]"/>
  <match src="primitive_type [8800,8807]" dest="primitive_type [8800,8807]"/>
  <match src=".: . [103468,103469]" dest=".: . [103392,103393]"/>
  <match src="variable_declaration_statement [97592,97626]" dest="variable_declaration_statement [96357,96391]"/>
  <match src="(: ( [27622,27623]" dest="(: ( [27622,27623]"/>
  <match src="identifier: x [30961,30962]" dest="identifier: x [30961,30962]"/>
  <match src="identifier: number [105644,105650]" dest="identifier: number [105568,105574]"/>
  <match src="&gt;&gt;=: &gt;&gt;= [32099,32102]" dest="&gt;&gt;=: &gt;&gt;= [32099,32102]"/>
  <match src="comment: /**      * @dev See {IERC20-totalSupply}.      */ [50800,50851]" dest="comment: /**      * @dev See {IERC20-totalSupply}.      */ [50802,50853]"/>
  <match src="pragma_value:  ABIEncoderV2 [90,103]" dest="pragma_value:  ABIEncoderV2 [90,103]"/>
  <match src="): ) [70758,70759]" dest="): ) [70469,70470]"/>
  <match src="==: == [104743,104745]" dest="==: == [104667,104669]"/>
  <match src="primitive_type [35300,35307]" dest="primitive_type [35300,35307]"/>
  <match src="array_access [60445,60483]" dest="array_access [60447,60485]"/>
  <match src="==: == [73203,73205]" dest="==: == [72968,72970]"/>
  <match src="(: ( [49771,49772]" dest="(: ( [49773,49774]"/>
  <match src="array_access [80326,80340]" dest="array_access [80946,80960]"/>
  <match src="): ) [85058,85059]" dest="): ) [86358,86359]"/>
  <match src="uint256: uint256 [76127,76134]" dest="uint256: uint256 [75643,75650]"/>
  <match src="identifier: _lpTokenSwap [71200,71212]" dest="identifier: _lpTokenSwap [70911,70923]"/>
  <match src="=: = [59799,59800]" dest="=: = [59801,59802]"/>
  <match src="(: ( [2073,2074]" dest="(: ( [2073,2074]"/>
  <match src=",: , [25649,25650]" dest=",: , [25649,25650]"/>
  <match src="variable_declaration_statement [96120,96168]" dest="variable_declaration_statement [95430,95478]"/>
  <match src="primitive_type [66614,66621]" dest="primitive_type [66867,66874]"/>
  <match src="): ) [76860,76861]" dest="): ) [76376,76377]"/>
  <match src="type_name [73356,73368]" dest="type_name [73121,73133]"/>
  <match src="identifier: b [5670,5671]" dest="identifier: b [5670,5671]"/>
  <match src="function_definition [24285,24391]" dest="function_definition [24285,24391]"/>
  <match src="type_name [50015,50021]" dest="type_name [50017,50023]"/>
  <match src="comment: // https://github.com/abdk-consulting/abdk-libraries-solidity/blob/master/ABDKMath64x64.sol#L687 [28603,28699]" dest="comment: // https://github.com/abdk-consulting/abdk-libraries-solidity/blob/master/ABDKMath64x64.sol#L687 [28603,28699]"/>
  <match src="=: = [61792,61793]" dest="=: = [61794,61795]"/>
  <match src="if: if [89689,89691]" dest="if: if [90931,90933]"/>
  <match src="=: = [55815,55816]" dest="=: = [55817,55818]"/>
  <match src="array_access [72565,72594]" dest="array_access [72257,72286]"/>
  <match src="type_name [20560,20567]" dest="type_name [20560,20567]"/>
  <match src="public: public [65832,65838]" dest="public: public [65842,65848]"/>
  <match src="): ) [29052,29053]" dest="): ) [29052,29053]"/>
  <match src="member_expression [14273,14287]" dest="member_expression [14273,14287]"/>
  <match src="call_argument [72082,72090]" dest="call_argument [71635,71643]"/>
  <match src="identifier: sub [99105,99108]" dest="identifier: sub [99273,99276]"/>
  <match src="comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      *      * - Multiplication cannot overflow.      */ [7838,8083]" dest="comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      *      * - Multiplication cannot overflow.      */ [7838,8083]"/>
  <match src="primitive_type [34260,34266]" dest="primitive_type [34260,34266]"/>
  <match src="identifier: termStartIndex [103736,103750]" dest="identifier: termStartIndex [103660,103674]"/>
  <match src="member_expression [101204,101229]" dest="member_expression [101173,101198]"/>
  <match src="identifier: to [4144,4146]" dest="identifier: to [4144,4146]"/>
  <match src="function_body [84601,85091]" dest="function_body [85732,86391]"/>
  <match src="return_type_definition [28002,28019]" dest="return_type_definition [28002,28019]"/>
  <match src="identifier: sender [55098,55104]" dest="identifier: sender [55100,55106]"/>
  <match src="return_type_definition [2374,2388]" dest="return_type_definition [2374,2388]"/>
  <match src="expression_statement [93559,93613]" dest="expression_statement [93207,93261]"/>
  <match src="call_argument [78707,78726]" dest="call_argument [78287,78306]"/>
  <match src="identifier: _amount [97326,97333]" dest="identifier: _amount [96091,96098]"/>
  <match src=".: . [74797,74798]" dest=".: . [74497,74498]"/>
  <match src="return_statement [49829,49842]" dest="return_statement [49831,49844]"/>
  <match src="visibility [24419,24427]" dest="visibility [24419,24427]"/>
  <match src="/: / [37822,37823]" dest="/: / [37822,37823]"/>
  <match src="}: } [1057,1058]" dest="}: } [1057,1058]"/>
  <match src="storage: storage [89108,89115]" dest="storage: storage [89956,89963]"/>
  <match src="call_argument [95135,95140]" dest="call_argument [97482,97487]"/>
  <match src="type_cast_expression [35741,35752]" dest="type_cast_expression [35741,35752]"/>
  <match src="identifier: pending [83202,83209]" dest="identifier: pending [84019,84026]"/>
  <match src=".: . [71091,71092]" dest=".: . [70802,70803]"/>
  <match src="return_type_definition [1909,1926]" dest="return_type_definition [1909,1926]"/>
  <match src="uint256: uint256 [38095,38102]" dest="uint256: uint256 [38095,38102]"/>
  <match src="return_statement [60278,60287]" dest="return_statement [60280,60289]"/>
  <match src="}: } [4408,4409]" dest="}: } [4408,4409]"/>
  <match src="[: [ [84797,84798]" dest="[: [ [85928,85929]"/>
  <match src="identifier: numerator [36993,37002]" dest="identifier: numerator [36993,37002]"/>
  <match src="if: if [105176,105178]" dest="if: if [105100,105102]"/>
  <match src="identifier: _term [71688,71693]" dest="identifier: _term [71399,71404]"/>
  <match src="contract: contract [25249,25257]" dest="contract: contract [25249,25257]"/>
  <match src=",: , [16203,16204]" dest=",: , [16203,16204]"/>
  <match src="identifier: uq112x112 [37982,37991]" dest="identifier: uq112x112 [37982,37991]"/>
  <match src="identifier: pop [99383,99386]" dest="identifier: pop [99535,99538]"/>
  <match src="binary_expression [46600,46630]" dest="binary_expression [46842,46872]"/>
  <match src="(: ( [60035,60036]" dest="(: ( [60037,60038]"/>
  <match src="call_expression [69815,69863]" dest="call_expression [69526,69574]"/>
  <match src="uint256: uint256 [78666,78673]" dest="uint256: uint256 [78246,78253]"/>
  <match src="call_expression [86644,86681]" dest="call_expression [88289,88322]"/>
  <match src="address: address [42853,42860]" dest="address: address [42853,42860]"/>
  <match src="visibility [90771,90778]" dest="visibility [91796,91803]"/>
  <match src="type_name [102880,102887]" dest="type_name [102804,102811]"/>
  <match src="visibility [50880,50886]" dest="visibility [50882,50888]"/>
  <match src="uint112: uint112 [39986,39993]" dest="uint112: uint112 [39986,39993]"/>
  <match src="returns: returns [39349,39356]" dest="returns: returns [39349,39356]"/>
  <match src="call_argument [103967,104026]" dest="call_argument [103891,103950]"/>
  <match src="parameter [44803,44828]" dest="parameter [44805,44830]"/>
  <match src="]: ] [61194,61195]" dest="]: ] [61196,61197]"/>
  <match src="identifier: _to [59599,59602]" dest="identifier: _to [59601,59604]"/>
  <match src="identifier: _x [34312,34314]" dest="identifier: _x [34312,34314]"/>
  <match src="address: address [21910,21917]" dest="address: address [21910,21917]"/>
  <match src="): ) [41829,41830]" dest="): ) [41829,41830]"/>
  <match src="identifier: recipient [14043,14052]" dest="identifier: recipient [14043,14052]"/>
  <match src="(: ( [5409,5410]" dest="(: ( [5409,5410]"/>
  <match src="call_argument [35734,35752]" dest="call_argument [35734,35752]"/>
  <match src="return: return [87620,87626]" dest="return: return [88781,88787]"/>
  <match src="identifier: call [14283,14287]" dest="identifier: call [14283,14287]"/>
  <match src="event_definition [66577,66651]" dest="event_definition [66830,66904]"/>
  <match src="visibility [33216,33224]" dest="visibility [33216,33224]"/>
  <match src="-: - [60715,60716]" dest="-: - [60717,60718]"/>
  <match src="expression_statement [29350,29360]" dest="expression_statement [29350,29360]"/>
  <match src="assignment_expression [108258,108303]" dest="assignment_expression [108182,108227]"/>
  <match src="identifier: user [66479,66483]" dest="identifier: user [66732,66736]"/>
  <match src="parameter [102900,102916]" dest="parameter [102824,102840]"/>
  <match src="): ) [96098,96099]" dest="): ) [95408,95409]"/>
  <match src="(: ( [104509,104510]" dest="(: ( [104433,104434]"/>
  <match src="): ) [79925,79926]" dest="): ) [80510,80511]"/>
  <match src="type_name [58839,58843]" dest="type_name [58841,58845]"/>
  <match src="(: ( [96981,96982]" dest="(: ( [95746,95747]"/>
  <match src="identifier: _approve [52725,52733]" dest="identifier: _approve [52727,52735]"/>
  <match src="{: { [19830,19831]" dest="{: { [19830,19831]"/>
  <match src="identifier: startBlock [103027,103037]" dest="identifier: startBlock [102951,102961]"/>
  <match src="}: } [61157,61158]" dest="}: } [61159,61160]"/>
  <match src="identifier: rankPoolIndex [85032,85045]" dest="identifier: rankPoolIndex [86332,86345]"/>
  <match src="identifier: newEndBlock [80888,80899]" dest="identifier: newEndBlock [81575,81586]"/>
  <match src="block_statement [67458,67509]" dest="block_statement [67705,67756]"/>
  <match src="identifier: _amount [79888,79895]" dest="identifier: _amount [80473,80480]"/>
  <match src="call_argument [57276,57314]" dest="call_argument [57278,57316]"/>
  <match src="identifier: y [34337,34338]" dest="identifier: y [34337,34338]"/>
  <match src="call_argument [25970,25993]" dest="call_argument [25970,25993]"/>
  <match src="): ) [22307,22308]" dest="): ) [22307,22308]"/>
  <match src="expression_statement [76257,76307]" dest="expression_statement [75773,75823]"/>
  <match src="(: ( [26792,26793]" dest="(: ( [26792,26793]"/>
  <match src="public: public [59659,59665]" dest="public: public [59661,59667]"/>
  <match src="): ) [59657,59658]" dest="): ) [59659,59660]"/>
  <match src="identifier: a [6832,6833]" dest="identifier: a [6832,6833]"/>
  <match src="identifier: _shardPoolWeight [75609,75625]" dest="identifier: _shardPoolWeight [75125,75141]"/>
  <match src="]: ] [73524,73525]" dest="]: ] [73289,73290]"/>
  <match src="function: function [38852,38860]" dest="function: function [38852,38860]"/>
  <match src="identifier: timeElapsed [105909,105920]" dest="identifier: timeElapsed [105833,105844]"/>
  <match src="string [18894,18934]" dest="string [18894,18934]"/>
  <match src="array_access [86979,87010]" dest="array_access [88136,88167]"/>
  <match src="identifier: this [76226,76230]" dest="identifier: this [75742,75746]"/>
  <match src="identifier: _pairInfo [106959,106968]" dest="identifier: _pairInfo [106883,106892]"/>
  <match src="identifier: lastPidInRank [72520,72533]" dest="identifier: lastPidInRank [72212,72225]"/>
  <match src="[: [ [93576,93577]" dest="[: [ [93224,93225]"/>
  <match src="identifier: uq112x112 [106999,107008]" dest="identifier: uq112x112 [106923,106932]"/>
  <match src="call_expression [17091,17143]" dest="call_expression [17091,17143]"/>
  <match src="): ) [39610,39611]" dest="): ) [39610,39611]"/>
  <match src="identifier: length [89721,89727]" dest="identifier: length [90963,90969]"/>
  <match src=":: : [71245,71246]" dest=":: : [70956,70957]"/>
  <match src="identifier: xx [29574,29576]" dest="identifier: xx [29574,29576]"/>
  <match src="(: ( [22294,22295]" dest="(: ( [22294,22295]"/>
  <match src="call_expression [44682,44694]" dest="call_expression [44684,44696]"/>
  <match src="identifier: token [22066,22071]" dest="identifier: token [22066,22071]"/>
  <match src=".: . [81616,81617]" dest=".: . [100243,100244]"/>
  <match src="identifier: length [73332,73338]" dest="identifier: length [73097,73103]"/>
  <match src="member_expression [46729,46769]" dest="member_expression [46971,47011]"/>
  <match src="identifier: spender [51741,51748]" dest="identifier: spender [51743,51750]"/>
  <match src="call_argument [106679,106690]" dest="call_argument [106603,106614]"/>
  <match src="parameter [39554,39564]" dest="parameter [39554,39564]"/>
  <match src="parameter [104465,104485]" dest="parameter [104389,104409]"/>
  <match src="}: } [86688,86689]" dest="}: } [88408,88409]"/>
  <match src="return_statement [78100,78116]" dest="return_statement [77230,77249]"/>
  <match src="if: if [85562,85564]" dest="if: if [86862,86864]"/>
  <match src="): ) [98278,98279]" dest="): ) [97043,97044]"/>
  <match src="(: ( [26507,26508]" dest="(: ( [26507,26508]"/>
  <match src="): ) [97170,97171]" dest="): ) [95935,95936]"/>
  <match src="identifier: amount [55068,55074]" dest="identifier: amount [55070,55076]"/>
  <match src="-: - [36532,36533]" dest="-: - [36532,36533]"/>
  <match src="identifier: r [30850,30851]" dest="identifier: r [30850,30851]"/>
  <match src=",: , [54137,54138]" dest=",: , [54139,54140]"/>
  <match src="function_body [8854,8940]" dest="function_body [8854,8940]"/>
  <match src="identifier: usersRelationshipInfo [86810,86831]" dest="identifier: usersRelationshipInfo [87965,87986]"/>
  <match src="[: [ [95589,95590]" dest="[: [ [94737,94738]"/>
  <match src="external: external [87298,87306]" dest="external: external [88459,88467]"/>
  <match src="call_argument [83528,83566]" dest="call_argument [84393,84431]"/>
  <match src="call_argument [55773,55780]" dest="call_argument [55775,55782]"/>
  <match src="type_cast_expression [56483,56493]" dest="type_cast_expression [56485,56495]"/>
  <match src="identifier: endBlock [82645,82653]" dest="identifier: endBlock [83483,83491]"/>
  <match src="parameter [104969,104989]" dest="parameter [104893,104913]"/>
  <match src="member_expression [56630,56646]" dest="member_expression [56632,56648]"/>
  <match src="identifier: contractFeeRateDenominator [68005,68031]" dest="identifier: contractFeeRateDenominator [68257,68283]"/>
  <match src="expression_statement [31462,31472]" dest="expression_statement [31462,31472]"/>
  <match src="identifier: r [29696,29697]" dest="identifier: r [29696,29697]"/>
  <match src="identifier: token0 [70163,70169]" dest="identifier: token0 [69874,69880]"/>
  <match src="identifier: farmMintShard [76356,76369]" dest="identifier: farmMintShard [75872,75885]"/>
  <match src="variable_declaration [73965,73989]" dest="variable_declaration [73695,73719]"/>
  <match src="if_statement [30878,30947]" dest="if_statement [30878,30947]"/>
  <match src="binary_expression [34365,34375]" dest="binary_expression [34365,34375]"/>
  <match src="type_name [93251,93258]" dest="type_name [92899,92906]"/>
  <match src="{: { [99898,99899]" dest="{: { [98090,98091]"/>
  <match src="false [6915,6920]" dest="false [6915,6920]"/>
  <match src="string [28222,28250]" dest="string [28222,28250]"/>
  <match src="identifier: uq112x112 [37191,37200]" dest="identifier: uq112x112 [37191,37200]"/>
  <match src="]: ] [62361,62362]" dest="]: ] [62363,62364]"/>
  <match src="private: private [49097,49104]" dest="private: private [49099,49106]"/>
  <match src="identifier: _feeRateDenominator [44932,44951]" dest="identifier: _feeRateDenominator [44934,44953]"/>
  <match src="-: - [60798,60799]" dest="-: - [60800,60801]"/>
  <match src="memory: memory [10079,10085]" dest="memory: memory [10079,10085]"/>
  <match src="{: { [32583,32584]" dest="{: { [32583,32584]"/>
  <match src="call_expression [81156,81302]" dest="call_expression [81843,81991]"/>
  <match src="expression_statement [34357,34407]" dest="expression_statement [34357,34407]"/>
  <match src="assignment_expression [99664,99698]" dest="assignment_expression [97754,97788]"/>
  <match src="identifier: lpTokenAmount [82025,82038]" dest="identifier: lpTokenAmount [82863,82876]"/>
  <match src="identifier: Mint [39635,39639]" dest="identifier: Mint [39635,39639]"/>
  <match src="type_name [5646,5653]" dest="type_name [5646,5653]"/>
  <match src="yul_path [19761,19771]" dest="yul_path [19761,19771]"/>
  <match src="): ) [59495,59496]" dest="): ) [59497,59498]"/>
  <match src="true: true [52061,52065]" dest="true: true [52063,52067]"/>
  <match src="parameter [1918,1925]" dest="parameter [1918,1925]"/>
  <match src=",: , [103012,103013]" dest=",: , [102936,102937]"/>
  <match src=",: , [56565,56566]" dest=",: , [56567,56568]"/>
  <match src="(: ( [77611,77612]" dest="(: ( [77051,77052]"/>
  <match src="&gt;&gt;: &gt;&gt; [29738,29740]" dest="&gt;&gt;: &gt;&gt; [29738,29740]"/>
  <match src="=: = [108424,108425]" dest="=: = [108348,108349]"/>
  <match src=".: . [36117,36118]" dest=".: . [36117,36118]"/>
  <match src="expression_statement [55802,55842]" dest="expression_statement [55804,55844]"/>
  <match src=",: , [104922,104923]" dest=",: , [104846,104847]"/>
  <match src="indexed: indexed [66888,66895]" dest="indexed: indexed [67141,67148]"/>
  <match src="identifier: msg [85020,85023]" dest="identifier: msg [86320,86323]"/>
  <match src="type_name [2349,2356]" dest="type_name [2349,2356]"/>
  <match src="): ) [19723,19724]" dest="): ) [19723,19724]"/>
  <match src="assignment_expression [93781,93824]" dest="assignment_expression [93427,93470]"/>
  <match src="uint256: uint256 [65180,65187]" dest="uint256: uint256 [65190,65197]"/>
  <match src=",: , [68427,68428]" dest=",: , [68425,68426]"/>
  <match src="): ) [33113,33114]" dest="): ) [33113,33114]"/>
  <match src="): ) [50878,50879]" dest="): ) [50880,50881]"/>
  <match src="primitive_type [45874,45881]" dest="primitive_type [45876,45883]"/>
  <match src="call_argument [36154,36167]" dest="call_argument [36154,36167]"/>
  <match src=",: , [68617,68618]" dest=",: , [68475,68476]"/>
  <match src="string [16893,16924]" dest="string [16893,16924]"/>
  <match src=",: , [61686,61687]" dest=",: , [61688,61689]"/>
  <match src="string_literal [59552,59581]" dest="string_literal [59554,59583]"/>
  <match src="(: ( [38344,38345]" dest="(: ( [38344,38345]"/>
  <match src="function_definition [96875,98371]" dest="function_definition [95640,97136]"/>
  <match src="binary_expression [36993,37017]" dest="binary_expression [36993,37017]"/>
  <match src="override: override [62825,62833]" dest="override: override [62827,62835]"/>
  <match src="string_literal [54977,55014]" dest="string_literal [54979,55016]"/>
  <match src="type_name [92852,92859]" dest="type_name [92500,92507]"/>
  <match src="*: * [27620,27621]" dest="*: * [27620,27621]"/>
  <match src="primitive_type [59287,59294]" dest="primitive_type [59289,59296]"/>
  <match src="number_literal: 0 [69977,69978]" dest="number_literal: 0 [69688,69689]"/>
  <match src="library: library [20484,20491]" dest="library: library [20484,20491]"/>
  <match src="type_name [67023,67031]" dest="type_name [67276,67284]"/>
  <match src="(: ( [6823,6824]" dest="(: ( [6823,6824]"/>
  <match src="expression_statement [27340,27350]" dest="expression_statement [27340,27350]"/>
  <match src="type_cast_expression [38026,38037]" dest="type_cast_expression [38026,38037]"/>
  <match src="parameter [25796,25803]" dest="parameter [25796,25803]"/>
  <match src="virtual: virtual [85280,85287]" dest="virtual: virtual [86580,86587]"/>
  <match src="call_expression [36953,36976]" dest="call_expression [36953,36976]"/>
  <match src="): ) [100297,100298]" dest="): ) [99638,99639]"/>
  <match src="{: { [19290,19291]" dest="{: { [19290,19291]"/>
  <match src="): ) [19789,19790]" dest="): ) [19789,19790]"/>
  <match src=".: . [87036,87037]" dest=".: . [88193,88194]"/>
  <match src="address: address [3855,3862]" dest="address: address [3855,3862]"/>
  <match src="identifier: data [17481,17485]" dest="identifier: data [17481,17485]"/>
  <match src="identifier: FixedPoint [106156,106166]" dest="identifier: FixedPoint [106080,106090]"/>
  <match src="=: = [99963,99964]" dest="=: = [98668,98669]"/>
  <match src="): ) [83004,83005]" dest="): ) [83783,83784]"/>
  <match src="uint256: uint256 [8198,8205]" dest="uint256: uint256 [8198,8205]"/>
  <match src="identifier: SafeMath [63053,63061]" dest="identifier: SafeMath [63055,63063]"/>
  <match src="external: external [42813,42821]" dest="external: external [42813,42821]"/>
  <match src="virtual: virtual [51961,51968]" dest="virtual: virtual [51963,51970]"/>
  <match src="(: ( [85056,85057]" dest="(: ( [86356,86357]"/>
  <match src="function: function [82419,82427]" dest="function: function [83257,83265]"/>
  <match src="primitive_type [34777,34784]" dest="primitive_type [34777,34784]"/>
  <match src=".: . [84307,84308]" dest=".: . [84836,84837]"/>
  <match src="{: { [31843,31844]" dest="{: { [31843,31844]"/>
  <match src="identifier: require [80091,80098]" dest="identifier: require [80676,80683]"/>
  <match src="function_definition [45486,45720]" dest="function_definition [45488,45722]"/>
  <match src="binary_expression [35324,35357]" dest="binary_expression [35324,35357]"/>
  <match src="): ) [97219,97220]" dest="): ) [95984,95985]"/>
  <match src="parameter [42881,42898]" dest="parameter [42881,42898]"/>
  <match src="(: ( [41636,41637]" dest="(: ( [41636,41637]"/>
  <match src="type_name [92811,92820]" dest="type_name [92459,92468]"/>
  <match src="): ) [105208,105209]" dest="): ) [105132,105133]"/>
  <match src="type_name [78181,78188]" dest="type_name [77314,77321]"/>
  <match src="(: ( [108066,108067]" dest="(: ( [107990,107991]"/>
  <match src="comment: // 'safeIncreaseAllowance' and 'safeDecreaseAllowance' [21478,21532]" dest="comment: // 'safeIncreaseAllowance' and 'safeDecreaseAllowance' [21478,21532]"/>
  <match src="member_expression [76372,76389]" dest="member_expression [75888,75905]"/>
  <match src="identifier: invitorRelationshipInfo [98755,98778]" dest="identifier: invitorRelationshipInfo [98961,98984]"/>
  <match src="function_body [68929,68991]" dest="function_body [68640,68702]"/>
  <match src="type_name [103809,103816]" dest="type_name [103733,103740]"/>
  <match src="function: function [10877,10885]" dest="function: function [10877,10885]"/>
  <match src="]: ] [99578,99579]" dest="]: ] [97668,97669]"/>
  <match src="(: ( [72227,72228]" dest="(: ( [72031,72032]"/>
  <match src="if: if [108458,108460]" dest="if: if [108382,108384]"/>
  <match src="primitive_type [93150,93157]" dest="primitive_type [92798,92805]"/>
  <match src="primitive_type [100166,100173]" dest="primitive_type [80167,80174]"/>
  <match src="function_definition [37551,37841]" dest="function_definition [37551,37841]"/>
  <match src="uint256: uint256 [97021,97028]" dest="uint256: uint256 [95786,95793]"/>
  <match src="call_argument [55782,55788]" dest="call_argument [55784,55790]"/>
  <match src="primitive_type [462,469]" dest="primitive_type [462,469]"/>
  <match src="): ) [17526,17527]" dest="): ) [17526,17527]"/>
  <match src="identifier: _writeCheckpoint [62079,62095]" dest="identifier: _writeCheckpoint [62081,62097]"/>
  <match src="type_name [40770,40775]" dest="type_name [40770,40775]"/>
  <match src="primitive_type [10890,10897]" dest="primitive_type [10890,10897]"/>
  <match src="return_type_definition [10954,10971]" dest="return_type_definition [10954,10971]"/>
  <match src="identifier: lastIndex [73409,73418]" dest="identifier: lastIndex [73174,73183]"/>
  <match src="function: function [78953,78961]" dest="function: function [78742,78750]"/>
  <match src="pure: pure [27244,27248]" dest="pure: pure [27244,27248]"/>
  <match src="(: ( [54888,54889]" dest="(: ( [54890,54891]"/>
  <match src="number_literal: 1 [72356,72357]" dest="number_literal: 1 [72111,72112]"/>
  <match src="): ) [23574,23575]" dest="): ) [23574,23575]"/>
  <match src="function_definition [26704,26948]" dest="function_definition [26704,26948]"/>
  <match src="call_expression [89844,89912]" dest="call_expression [91099,91159]"/>
  <match src="block_statement [30476,30533]" dest="block_statement [30476,30533]"/>
  <match src="expression_statement [106607,106693]" dest="expression_statement [106531,106617]"/>
  <match src="parameter [5949,5953]" dest="parameter [5949,5953]"/>
  <match src="}: } [38132,38133]" dest="}: } [38132,38133]"/>
  <match src="+: + [5349,5350]" dest="+: + [5349,5350]"/>
  <match src="): ) [3888,3889]" dest="): ) [3888,3889]"/>
  <match src="[: [ [95640,95641]" dest="[: [ [94788,94789]"/>
  <match src="identifier: abi [22412,22415]" dest="identifier: abi [22412,22415]"/>
  <match src="expression_statement [96217,96245]" dest="expression_statement [95527,95555]"/>
  <match src="type_alias [63120,63130]" dest="type_alias [63122,63132]"/>
  <match src="identifier: usersRelationshipInfo [86979,87000]" dest="identifier: usersRelationshipInfo [88136,88157]"/>
  <match src="(: ( [18418,18419]" dest="(: ( [18418,18419]"/>
  <match src="identifier: SHDPerBlock [103014,103025]" dest="identifier: SHDPerBlock [102938,102949]"/>
  <match src="identifier: poolInfo [64978,64986]" dest="identifier: poolInfo [64988,64996]"/>
  <match src="(: ( [74131,74132]" dest="(: ( [73862,73863]"/>
  <match src="primitive_type [16238,16243]" dest="primitive_type [16238,16243]"/>
  <match src="(: ( [31616,31617]" dest="(: ( [31616,31617]"/>
  <match src="identifier: poolTokenAmountLimit [46600,46620]" dest="identifier: poolTokenAmountLimit [46842,46862]"/>
  <match src="identifier: recipient [51394,51403]" dest="identifier: recipient [51396,51405]"/>
  <match src="primitive_type [85903,85910]" dest="primitive_type [97799,97806]"/>
  <match src=".: . [78916,78917]" dest=".: . [78424,78425]"/>
  <match src="&gt;=:  &gt;= [4486,4489]" dest="&gt;=:  &gt;= [4486,4489]"/>
  <match src="primitive_type [101871,101875]" dest="primitive_type [85118,85122]"/>
  <match src=".: . [98077,98078]" dest=".: . [96842,96843]"/>
  <match src="&gt;=: &gt;= [29231,29233]" dest="&gt;=: &gt;= [29231,29233]"/>
  <match src="comment: // token as the unit of measurement [43127,43162]" dest="comment: // token as the unit of measurement [43127,43162]"/>
  <match src="primitive_type [2034,2041]" dest="primitive_type [2034,2041]"/>
  <match src="identifier: _pid [79786,79790]" dest="identifier: _pid [80371,80375]"/>
  <match src="primitive_type [37345,37352]" dest="primitive_type [37345,37352]"/>
  <match src="comment: // produces the cumulative price using counterfactuals to save gas and avoid a call to sync. [41453,41545]" dest="comment: // produces the cumulative price using counterfactuals to save gas and avoid a call to sync. [41453,41545]"/>
  <match src="binary_expression [82113,82233]" dest="binary_expression [82951,83071]"/>
  <match src="): ) [89175,89176]" dest="): ) [90100,90101]"/>
  <match src="address: address [17364,17371]" dest="address: address [17364,17371]"/>
  <match src="state_variable_declaration [66113,66145]" dest="state_variable_declaration [66129,66163]"/>
  <match src="call_expression [76372,76414]" dest="call_expression [75888,75930]"/>
  <match src="): ) [33294,33295]" dest="): ) [33294,33295]"/>
  <match src="call_argument [22405,22410]" dest="call_argument [22405,22410]"/>
  <match src="identifier: usersTotalWeight [99995,100011]" dest="identifier: usersTotalWeight [98700,98716]"/>
  <match src="identifier: rankPoolIndexMap [72572,72588]" dest="identifier: rankPoolIndexMap [72264,72280]"/>
  <match src="uint256: uint256 [65553,65560]" dest="uint256: uint256 [65563,65570]"/>
  <match src=",: , [5273,5274]" dest=",: , [5273,5274]"/>
  <match src="parameter [44830,44857]" dest="parameter [44832,44859]"/>
  <match src="binary_expression [42528,42590]" dest="binary_expression [42528,42590]"/>
  <match src="private: private [77388,77395]" dest="private: private [76828,76835]"/>
  <match src="identifier: x [31497,31498]" dest="identifier: x [31497,31498]"/>
  <match src="assignment_expression [46810,46865]" dest="assignment_expression [47052,47107]"/>
  <match src="): ) [24462,24463]" dest="): ) [24462,24463]"/>
  <match src="identifier: div [8796,8799]" dest="identifier: div [8796,8799]"/>
  <match src="identifier: require [31298,31305]" dest="identifier: require [31298,31305]"/>
  <match src="member_expression [93454,93468]" dest="member_expression [93102,93116]"/>
  <match src="member_expression [90879,90892]" dest="member_expression [91904,91917]"/>
  <match src="): ) [104989,104990]" dest="): ) [104913,104914]"/>
  <match src="identifier: startIndex [93290,93300]" dest="identifier: startIndex [92938,92948]"/>
  <match src="uint112: uint112 [33024,33031]" dest="uint112: uint112 [33024,33031]"/>
  <match src="uint256: uint256 [33944,33951]" dest="uint256: uint256 [33944,33951]"/>
  <match src="visibility [12688,12696]" dest="visibility [12688,12696]"/>
  <match src="identifier: _to [96230,96233]" dest="identifier: _to [95540,95543]"/>
  <match src="identifier: b [5283,5284]" dest="identifier: b [5283,5284]"/>
  <match src="uint256: uint256 [102488,102495]" dest="uint256: uint256 [102412,102419]"/>
  <match src=".: . [106807,106808]" dest=".: . [106731,106732]"/>
  <match src="(: ( [6199,6200]" dest="(: ( [6199,6200]"/>
  <match src="comment: // if time has elapsed since the last update on the pair, mock the accumulated price values [41916,42007]" dest="comment: // if time has elapsed since the last update on the pair, mock the accumulated price values [41916,42007]"/>
  <match src="&lt;=: &lt;= [37003,37005]" dest="&lt;=: &lt;= [37003,37005]"/>
  <match src="{: { [109516,109517]" dest="{: { [109440,109441]"/>
  <match src="identifier: transfer [20715,20723]" dest="identifier: transfer [20715,20723]"/>
  <match src="constant: constant [32760,32768]" dest="constant: constant [32760,32768]"/>
  <match src="identifier: addedValue [53337,53347]" dest="identifier: addedValue [53339,53349]"/>
  <match src="): ) [106968,106969]" dest="): ) [106892,106893]"/>
  <match src="state_mutability [39409,39413]" dest="state_mutability [39409,39413]"/>
  <match src="): ) [78556,78557]" dest="): ) [78136,78137]"/>
  <match src="identifier: totalReward [103410,103421]" dest="identifier: totalReward [103334,103345]"/>
  <match src="primitive_type [52593,52600]" dest="primitive_type [52595,52602]"/>
  <match src="(: ( [109153,109154]" dest="(: ( [109077,109078]"/>
  <match src=",: , [89499,89500]" dest=",: , [90741,90742]"/>
  <match src="call_expression [93039,93063]" dest="call_expression [92687,92711]"/>
  <match src=".: . [59686,59687]" dest=".: . [59688,59689]"/>
  <match src="{: { [52667,52668]" dest="{: { [52669,52670]"/>
  <match src="(: ( [22065,22066]" dest="(: ( [22065,22066]"/>
  <match src="identifier: poolInRank [74714,74724]" dest="identifier: poolInRank [74466,74476]"/>
  <match src="identifier: call [17047,17051]" dest="identifier: call [17047,17051]"/>
  <match src="binary_expression [33104,33128]" dest="binary_expression [33104,33128]"/>
  <match src="type_name [103620,103627]" dest="type_name [103544,103551]"/>
  <match src="identifier: tokenBInfo [105322,105332]" dest="identifier: tokenBInfo [105246,105256]"/>
  <match src="expression_statement [37724,37782]" dest="expression_statement [37724,37782]"/>
  <match src="member_expression [106442,106466]" dest="member_expression [106366,106390]"/>
  <match src="): ) [74822,74823]" dest="): ) [74513,74514]"/>
  <match src="member_expression [104296,104334]" dest="member_expression [104220,104258]"/>
  <match src="uint: uint [40552,40556]" dest="uint: uint [40552,40556]"/>
  <match src="string_literal [67273,67294]" dest="string_literal [67520,67541]"/>
  <match src="address: address [39709,39716]" dest="address: address [39709,39716]"/>
  <match src="expression_statement [90536,90620]" dest="expression_statement [91561,91645]"/>
  <match src="(: ( [19069,19070]" dest="(: ( [19069,19070]"/>
  <match src="boolean_literal [6622,6626]" dest="boolean_literal [6622,6626]"/>
  <match src="function: function [22881,22889]" dest="function: function [22881,22889]"/>
  <match src="identifier: _pairInfo [107472,107481]" dest="identifier: _pairInfo [107396,107405]"/>
  <match src="variable_declaration_tuple [14254,14270]" dest="variable_declaration_tuple [14254,14270]"/>
  <match src="primitive_type [58562,58569]" dest="primitive_type [58564,58571]"/>
  <match src="type_name [4148,4155]" dest="type_name [4148,4155]"/>
  <match src="else: else [97780,97784]" dest="else: else [96545,96549]"/>
  <match src="number_literal: 2236 [68594,68598]" dest="number_literal: 2236 [68466,68470]"/>
  <match src="]: ] [93713,93714]" dest="]: ] [93361,93362]"/>
  <match src=",: , [84418,84419]" dest=",: , [84953,84954]"/>
  <match src="storage: storage [100326,100333]" dest="storage: storage [71889,71896]"/>
  <match src="function: function [94227,94235]" dest="function: function [93873,93881]"/>
  <match src="&gt;: &gt; [46659,46660]" dest="&gt;: &gt; [46901,46902]"/>
  <match src="function: function [1547,1555]" dest="function: function [1547,1555]"/>
  <match src="function_body [24464,24632]" dest="function_body [24464,24632]"/>
  <match src="expression_statement [105224,105280]" dest="expression_statement [105148,105204]"/>
  <match src="identifier: votes [58933,58938]" dest="identifier: votes [58935,58940]"/>
  <match src="identifier: add [82988,82991]" dest="identifier: add [83767,83770]"/>
  <match src="&quot;: &quot; [18894,18895]" dest="&quot;: &quot; [18894,18895]"/>
  <match src="): ) [104250,104251]" dest="): ) [104174,104175]"/>
  <match src="identifier: priceCumulativeLast [105452,105471]" dest="identifier: priceCumulativeLast [105376,105395]"/>
  <match src="identifier: i [95773,95774]" dest="identifier: i [94921,94922]"/>
  <match src="call_expression [17866,17933]" dest="call_expression [17866,17933]"/>
  <match src="identifier: isFirstTokenShard [71029,71046]" dest="identifier: isFirstTokenShard [70740,70757]"/>
  <match src="identifier: _pool [84875,84880]" dest="identifier: _pool [86006,86011]"/>
  <match src="): ) [36167,36168]" dest="): ) [36167,36168]"/>
  <match src=",: , [451,452]" dest=",: , [451,452]"/>
  <match src="==: == [6580,6582]" dest="==: == [6580,6582]"/>
  <match src="returns: returns [40073,40080]" dest="returns: returns [40073,40080]"/>
  <match src="struct: struct [63915,63921]" dest="struct: struct [63917,63923]"/>
  <match src=".: . [90460,90461]" dest=".: . [91499,91500]"/>
  <match src="array_access [73493,73525]" dest="array_access [73258,73290]"/>
  <match src="identifier: msg [84470,84473]" dest="identifier: msg [85005,85008]"/>
  <match src="(: ( [40723,40724]" dest="(: ( [40723,40724]"/>
  <match src="block_statement [95800,95922]" dest="block_statement [94948,95232]"/>
  <match src="-: - [34432,34433]" dest="-: - [34432,34433]"/>
  <match src="identifier: _userDividendWeight [44109,44128]" dest="identifier: _userDividendWeight [44111,44130]"/>
  <match src="): ) [64908,64909]" dest="): ) [64916,64917]"/>
  <match src="primitive_type [95582,95589]" dest="primitive_type [94730,94737]"/>
  <match src="]: ] [99178,99179]" dest="]: ] [99342,99343]"/>
  <match src="call_expression [98206,98352]" dest="call_expression [96971,97117]"/>
  <match src="{: { [29585,29586]" dest="{: { [29585,29586]"/>
  <match src="if: if [19446,19448]" dest="if: if [19446,19448]"/>
  <match src="identifier: i [88789,88790]" dest="identifier: i [89637,89638]"/>
  <match src="=: = [45392,45393]" dest="=: = [45394,45395]"/>
  <match src="primitive_type [85637,85644]" dest="primitive_type [86937,86944]"/>
  <match src="else: else [31661,31665]" dest="else: else [31661,31665]"/>
  <match src="variable_declaration_statement [99420,99511]" dest="variable_declaration_statement [97510,97601]"/>
  <match src="=: = [60781,60782]" dest="=: = [60783,60784]"/>
  <match src="unary_expression [31617,31619]" dest="unary_expression [31617,31619]"/>
  <match src="parameter [106937,106968]" dest="parameter [106861,106892]"/>
  <match src=",: , [49571,49572]" dest=",: , [49573,49574]"/>
  <match src="==: == [69535,69537]" dest="==: == [69246,69248]"/>
  <match src="identifier: withdraw [82428,82436]" dest="identifier: withdraw [83266,83274]"/>
  <match src="&quot;: &quot; [57392,57393]" dest="&quot;: &quot; [57394,57395]"/>
  <match src=".: . [79089,79090]" dest=".: . [79252,79253]"/>
  <match src="/: / [6269,6270]" dest="/: / [6269,6270]"/>
  <match src="identifier: _amount [59650,59657]" dest="identifier: _amount [59652,59659]"/>
  <match src="revert: revert [19746,19752]" dest="revert: revert [19746,19752]"/>
  <match src="identifier: sender [55118,55124]" dest="identifier: sender [55120,55126]"/>
  <match src="call_argument [90001,90024]" dest="call_argument [91208,91231]"/>
  <match src="call_expression [95629,95653]" dest="call_expression [94777,94801]"/>
  <match src="identifier: transferFrom [39224,39236]" dest="identifier: transferFrom [39224,39236]"/>
  <match src="(: ( [108031,108032]" dest="(: ( [107955,107956]"/>
  <match src="identifier: usersTotalWeight [83935,83951]" dest="identifier: usersTotalWeight [84459,84475]"/>
  <match src="): ) [17036,17037]" dest="): ) [17036,17037]"/>
  <match src="call_argument [20679,20684]" dest="call_argument [20679,20684]"/>
  <match src="identifier: c [8234,8235]" dest="identifier: c [8234,8235]"/>
  <match src="visibility [38816,38824]" dest="visibility [38816,38824]"/>
  <match src="variable_declaration [97021,97047]" dest="variable_declaration [95786,95812]"/>
  <match src="struct_member [63199,63214]" dest="struct_member [63201,63216]"/>
  <match src="returns: returns [17832,17839]" dest="returns: returns [17832,17839]"/>
  <match src=",: , [79899,79900]" dest=",: , [80484,80485]"/>
  <match src="identifier: initializeTokenOracle [97711,97732]" dest="identifier: initializeTokenOracle [96476,96497]"/>
  <match src="}: } [13072,13073]" dest="}: } [13072,13073]"/>
  <match src="string_literal [54204,54243]" dest="string_literal [54206,54245]"/>
  <match src="identifier: _newStartBlock [108426,108440]" dest="identifier: _newStartBlock [108350,108364]"/>
  <match src="expression_statement [83444,83568]" dest="expression_statement [84356,84433]"/>
  <match src="identifier: h [27618,27619]" dest="identifier: h [27618,27619]"/>
  <match src="(: ( [39397,39398]" dest="(: ( [39397,39398]"/>
  <match src="}: } [98363,98364]" dest="}: } [97128,97129]"/>
  <match src="member_expression [89546,89557]" dest="member_expression [90788,90799]"/>
  <match src="binary_expression [36194,36216]" dest="binary_expression [36194,36216]"/>
  <match src="primitive_type [19276,19281]" dest="primitive_type [19276,19281]"/>
  <match src="identifier: _nftPoolId [71602,71612]" dest="identifier: _nftPoolId [71313,71323]"/>
  <match src="+=: += [42397,42399]" dest="+=: += [42397,42399]"/>
  <match src="type_name [14027,14042]" dest="type_name [14027,14042]"/>
  <match src="identifier: targetTokenPosition [69775,69794]" dest="identifier: targetTokenPosition [69486,69505]"/>
  <match src="primitive_type [39761,39768]" dest="primitive_type [39761,39768]"/>
  <match src=",: , [35457,35458]" dest=",: , [35457,35458]"/>
  <match src="): ) [52753,52754]" dest="): ) [52755,52756]"/>
  <match src="(: ( [106105,106106]" dest="(: ( [106029,106030]"/>
  <match src="type_name [40082,40086]" dest="type_name [40082,40086]"/>
  <match src="member_expression [86914,86928]" dest="member_expression [88071,88085]"/>
  <match src="call_expression [78600,78652]" dest="call_expression [78180,78232]"/>
  <match src="return_type_definition [37973,37999]" dest="return_type_definition [37973,37999]"/>
  <match src="type_name [51987,51991]" dest="type_name [51989,51993]"/>
  <match src="identifier: d [28219,28220]" dest="identifier: d [28219,28220]"/>
  <match src="call_expression [55213,55245]" dest="call_expression [55215,55247]"/>
  <match src="member_expression [97639,97682]" dest="member_expression [96404,96447]"/>
  <match src="primitive_type [27213,27220]" dest="primitive_type [27213,27220]"/>
  <match src="private: private [98502,98509]" dest="private: private [98868,98875]"/>
  <match src="+: + [27638,27639]" dest="+: + [27638,27639]"/>
  <match src="identifier: _transfer [54774,54783]" dest="identifier: _transfer [54776,54785]"/>
  <match src="parameter [8102,8111]" dest="parameter [8102,8111]"/>
  <match src="&lt;:  &lt; [47675,47677]" dest="&lt;:  &lt; [47677,47679]"/>
  <match src="{: { [87809,87810]" dest="{: { [88970,88971]"/>
  <match src="unary_expression [100765,100788]" dest="unary_expression [100750,100773]"/>
  <match src="function_definition [38852,38904]" dest="function_definition [38852,38904]"/>
  <match src="identifier: _lockAmount [90730,90741]" dest="identifier: _lockAmount [91755,91766]"/>
  <match src="member_expression [67537,67551]" dest="member_expression [67784,67798]"/>
  <match src="identifier: upper [61113,61118]" dest="identifier: upper [61115,61120]"/>
  <match src="emit_statement [56665,56708]" dest="emit_statement [56667,56710]"/>
  <match src="(: ( [100589,100590]" dest="(: ( [100164,100165]"/>
  <match src="call_argument [27311,27312]" dest="call_argument [27311,27312]"/>
  <match src="uint256: uint256 [20528,20535]" dest="uint256: uint256 [20528,20535]"/>
  <match src="variable_declaration [34279,34288]" dest="variable_declaration [34279,34288]"/>
  <match src="]: ] [93515,93516]" dest="]: ] [93163,93164]"/>
  <match src="primitive_type [16668,16673]" dest="primitive_type [16668,16673]"/>
  <match src="): ) [57490,57491]" dest="): ) [57492,57493]"/>
  <match src="identifier: x [30275,30276]" dest="identifier: x [30275,30276]"/>
  <match src="): ) [109538,109539]" dest="): ) [109462,109463]"/>
  <match src="array_access [98582,98610]" dest="array_access [97347,97375]"/>
  <match src="primitive_type [27462,27469]" dest="primitive_type [27462,27469]"/>
  <match src="address: address [38929,38936]" dest="address: address [38929,38936]"/>
  <match src="variable_declaration_statement [61935,61969]" dest="variable_declaration_statement [61937,61971]"/>
  <match src="comment: // reverts on overflow [33817,33839]" dest="comment: // reverts on overflow [33817,33839]"/>
  <match src="if: if [36190,36192]" dest="if: if [36190,36192]"/>
  <match src="comment: //_pid is the index in poolInfo [85144,85175]" dest="comment: //_pid is the index in poolInfo [86444,86475]"/>
  <match src="call_expression [87892,87911]" dest="call_expression [89053,89072]"/>
  <match src="return_statement [8293,8302]" dest="return_statement [8293,8302]"/>
  <match src="parameter [102361,102373]" dest="parameter [102220,102232]"/>
  <match src="{: { [96109,96110]" dest="{: { [95419,95420]"/>
  <match src="address: address [97890,97897]" dest="address: address [96655,96662]"/>
  <match src="variable_declaration [72244,72262]" dest="variable_declaration [71933,71973]"/>
  <match src="}: } [85626,85627]" dest="}: } [86926,86927]"/>
  <match src="(: ( [40899,40900]" dest="(: ( [40899,40900]"/>
  <match src="variable_declaration [105131,105161]" dest="variable_declaration [105055,105085]"/>
  <match src=".: . [92933,92934]" dest=".: . [92581,92582]"/>
  <match src="function: function [71652,71660]" dest="function: function [71363,71371]"/>
  <match src="identifier: fromOld [61618,61625]" dest="identifier: fromOld [61620,61627]"/>
  <match src="if: if [6895,6897]" dest="if: if [6895,6897]"/>
  <match src="{: { [13008,13009]" dest="{: { [13008,13009]"/>
  <match src=".: . [99312,99313]" dest=".: . [99468,99469]"/>
  <match src="}: } [59710,59711]" dest="}: } [59712,59713]"/>
  <match src="call_expression [23331,23400]" dest="call_expression [23331,23400]"/>
  <match src="variable_declaration_statement [87718,87772]" dest="variable_declaration_statement [88879,88933]"/>
  <match src="string [45604,45625]" dest="string [45606,45627]"/>
  <match src="assignment_expression [87095,87121]" dest="assignment_expression [88252,88278]"/>
  <match src="state_variable_declaration [49011,49081]" dest="state_variable_declaration [49013,49083]"/>
  <match src="member_expression [83212,83257]" dest="member_expression [90391,90430]"/>
  <match src="identifier: i [74206,74207]" dest="identifier: i [73937,73938]"/>
  <match src="identifier: shardPoolDividendWeight [79293,79316]" dest="identifier: shardPoolDividendWeight [79448,79471]"/>
  <match src="call_argument [55057,55066]" dest="call_argument [55059,55068]"/>
  <match src="block_statement [70085,70185]" dest="block_statement [69796,69896]"/>
  <match src="(: ( [61672,61673]" dest="(: ( [61674,61675]"/>
  <match src="member_expression [78692,78706]" dest="member_expression [78272,78286]"/>
  <match src="assignment_expression [80963,81099]" dest="assignment_expression [81650,81786]"/>
  <match src="identifier: _oracleWeight [93181,93194]" dest="identifier: _oracleWeight [92829,92842]"/>
  <match src="address: address [104465,104472]" dest="address: address [104389,104396]"/>
  <match src="block_statement [31626,31660]" dest="block_statement [31626,31660]"/>
  <match src=".: . [106358,106359]" dest=".: . [106282,106283]"/>
  <match src="identifier: treasruyDividend [83585,83601]" dest="identifier: treasruyDividend [85333,85349]"/>
  <match src="pure: pure [9451,9455]" dest="pure: pure [9451,9455]"/>
  <match src="internal: internal [15654,15662]" dest="internal: internal [15654,15662]"/>
  <match src="identifier: owner [2700,2705]" dest="identifier: owner [2700,2705]"/>
  <match src="state_mutability [33225,33229]" dest="state_mutability [33225,33229]"/>
  <match src="constructor_definition [25506,25669]" dest="constructor_definition [25506,25669]"/>
  <match src="=: = [103684,103685]" dest="=: = [103608,103609]"/>
  <match src="): ) [89038,89039]" dest="): ) [89886,89887]"/>
  <match src=":: : [71359,71360]" dest=":: : [71070,71071]"/>
  <match src="type_name [37936,37945]" dest="type_name [37936,37945]"/>
  <match src="binary_expression [65388,65412]" dest="binary_expression [65398,65422]"/>
  <match src="visibility [32626,32632]" dest="visibility [32626,32632]"/>
  <match src="type_name [44101,44108]" dest="type_name [44103,44110]"/>
  <match src="array_access [60562,60582]" dest="array_access [60564,60584]"/>
  <match src="&quot;: &quot; [44988,44989]" dest="&quot;: &quot; [44990,44991]"/>
  <match src="number_literal: 1 [36533,36534]" dest="number_literal: 1 [36533,36534]"/>
  <match src="}: } [36179,36180]" dest="}: } [36179,36180]"/>
  <match src="call_expression [41734,41757]" dest="call_expression [41734,41757]"/>
  <match src="call_argument [33293,33294]" dest="call_argument [33293,33294]"/>
  <match src="uint256: uint256 [59321,59328]" dest="uint256: uint256 [59323,59330]"/>
  <match src="(: ( [95325,95326]" dest="(: ( [94473,94474]"/>
  <match src="(: ( [67268,67269]" dest="(: ( [67515,67516]"/>
  <match src="(: ( [34929,34930]" dest="(: ( [34929,34930]"/>
  <match src="identifier: _pool [84557,84562]" dest="identifier: _pool [85688,85693]"/>
  <match src="=: = [87671,87672]" dest="=: = [88832,88833]"/>
  <match src="=: = [82069,82070]" dest="=: = [82907,82908]"/>
  <match src=".: . [47007,47008]" dest=".: . [46394,46395]"/>
  <match src="internal: internal [47253,47261]" dest="internal: internal [47255,47263]"/>
  <match src="call_argument [78449,78479]" dest="call_argument [78029,78059]"/>
  <match src="identifier: self [34221,34225]" dest="identifier: self [34221,34225]"/>
  <match src="member_expression [76153,76173]" dest="member_expression [75669,75689]"/>
  <match src="identifier: pool [83212,83216]" dest="identifier: pool [90391,90395]"/>
  <match src="member_expression [97639,97663]" dest="member_expression [96404,96428]"/>
  <match src="state_mutability [39039,39043]" dest="state_mutability [39039,39043]"/>
  <match src="type_name [62794,62801]" dest="type_name [62796,62803]"/>
  <match src="mapping: mapping [49011,49018]" dest="mapping: mapping [49013,49020]"/>
  <match src="private: private [96480,96487]" dest="private: private [97267,97274]"/>
  <match src="identifier: nCheckpoints [60379,60391]" dest="identifier: nCheckpoints [60381,60393]"/>
  <match src="call_argument [20951,20956]" dest="call_argument [20951,20956]"/>
  <match src="-: - [62445,62446]" dest="-: - [62447,62448]"/>
  <match src="(: ( [44466,44467]" dest="(: ( [44468,44469]"/>
  <match src="call_argument [59695,59702]" dest="call_argument [59697,59704]"/>
  <match src="tuple_expression [6914,6924]" dest="tuple_expression [6914,6924]"/>
  <match src="=: = [80324,80325]" dest="=: = [80944,80945]"/>
  <match src="/: / [60807,60808]" dest="/: / [60809,60810]"/>
  <match src="returns: returns [36811,36818]" dest="returns: returns [36811,36818]"/>
  <match src="/=: /= [27595,27597]" dest="/=: /= [27595,27597]"/>
  <match src="(: ( [87457,87458]" dest="(: ( [88618,88619]"/>
  <match src="state_variable_declaration [43168,43193]" dest="state_variable_declaration [43168,43193]"/>
  <match src="identifier: _setupDecimals [57840,57854]" dest="identifier: _setupDecimals [57842,57856]"/>
  <match src="type_name [54800,54807]" dest="type_name [54802,54809]"/>
  <match src="string [58762,58775]" dest="string [58764,58777]"/>
  <match src=",: , [104834,104835]" dest=",: , [104758,104759]"/>
  <match src=",: , [38652,38653]" dest=",: , [38652,38653]"/>
  <match src="interface: interface [42682,42691]" dest="interface: interface [42682,42691]"/>
  <match src="): ) [78726,78727]" dest="): ) [78306,78307]"/>
  <match src="expression_statement [103635,103650]" dest="expression_statement [103559,103574]"/>
  <match src="(: ( [16651,16652]" dest="(: ( [16651,16652]"/>
  <match src="uint256: uint256 [84573,84580]" dest="uint256: uint256 [85704,85711]"/>
  <match src="+=: += [30516,30518]" dest="+=: += [30516,30518]"/>
  <match src="type_name [59287,59294]" dest="type_name [59289,59296]"/>
  <match src="if: if [32126,32128]" dest="if: if [32126,32128]"/>
  <match src="if_statement [46315,46587]" dest="if_statement [46557,46829]"/>
  <match src="type_name [38998,39005]" dest="type_name [38998,39005]"/>
  <match src="return_statement [8179,8188]" dest="return_statement [8179,8188]"/>
  <match src="primitive_type [28043,28050]" dest="primitive_type [28043,28050]"/>
  <match src="if_statement [98621,99400]" dest="if_statement [97386,97500]"/>
  <match src="identifier: unDividendShard [66245,66260]" dest="identifier: unDividendShard [66265,66280]"/>
  <match src="parameter [88965,88978]" dest="parameter [89813,89826]"/>
  <match src="number_literal: 2108 [68461,68465]" dest="number_literal: 2108 [68431,68435]"/>
  <match src="assignment_expression [33987,34002]" dest="assignment_expression [33987,34002]"/>
  <match src="[: [ [82129,82130]" dest="[: [ [82967,82968]"/>
  <match src="modifier_invocation [45915,45924]" dest="modifier_invocation [45917,45926]"/>
  <match src="identifier: newOriginWeight [81136,81151]" dest="identifier: newOriginWeight [81823,81838]"/>
  <match src="comment: // File: @openzeppelin/contracts/utils/Context.sol [23649,23699]" dest="comment: // File: @openzeppelin/contracts/utils/Context.sol [23649,23699]"/>
  <match src="parameter [46155,46177]" dest="parameter [46157,46179]"/>
  <match src="identifier: modifiedWeight [102547,102561]" dest="identifier: modifiedWeight [102471,102485]"/>
  <match src="call_argument [74132,74148]" dest="call_argument [73863,73879]"/>
  <match src=".: . [84880,84881]" dest=".: . [86011,86012]"/>
  <match src="identifier: devDividend [83418,83429]" dest="identifier: devDividend [85198,85209]"/>
  <match src="return_type_definition [96973,97004]" dest="return_type_definition [95738,95769]"/>
  <match src="return_type_definition [39284,39298]" dest="return_type_definition [39284,39298]"/>
  <match src="solidity_version:  0.6.12 [62952,62959]" dest="solidity_version:  0.6.12 [62954,62961]"/>
  <match src="call_argument [33104,33128]" dest="call_argument [33104,33128]"/>
  <match src="public: public [43529,43535]" dest="public: public [43529,43535]"/>
  <match src="member_expression [60445,60489]" dest="member_expression [60447,60491]"/>
  <match src="primitive_type [5955,5962]" dest="primitive_type [5955,5962]"/>
  <match src="binary_expression [33976,33982]" dest="binary_expression [33976,33982]"/>
  <match src=",: , [11738,11739]" dest=",: , [11738,11739]"/>
  <match src="]: ] [87206,87207]" dest="]: ] [88367,88368]"/>
  <match src="identifier: rankPoolIndexMap [86278,86294]" dest="identifier: rankPoolIndexMap [87566,87582]"/>
  <match src="(: ( [61754,61755]" dest="(: ( [61756,61757]"/>
  <match src="[: [ [95227,95228]" dest="[: [ [94375,94376]"/>
  <match src="): ) [36836,36837]" dest="): ) [36836,36837]"/>
  <match src=".: . [22024,22025]" dest=".: . [22024,22025]"/>
  <match src="identifier: z [33952,33953]" dest="identifier: z [33952,33953]"/>
  <match src="identifier: rankPoolIndex [76765,76778]" dest="identifier: rankPoolIndex [76281,76294]"/>
  <match src="assignment_expression [26923,26940]" dest="assignment_expression [26923,26940]"/>
  <match src="primitive_type [43662,43669]" dest="primitive_type [43662,43669]"/>
  <match src="visibility [33443,33451]" dest="visibility [33443,33451]"/>
  <match src="identifier: _amount [97278,97285]" dest="identifier: _amount [96043,96050]"/>
  <match src="identifier: _user [99573,99578]" dest="identifier: _user [97663,97668]"/>
  <match src="type_name [17364,17371]" dest="type_name [17364,17371]"/>
  <match src=".: . [69383,69384]" dest=".: . [69094,69095]"/>
  <match src="emit: emit [55914,55918]" dest="emit: emit [55916,55920]"/>
  <match src="=: = [99808,99809]" dest="=: = [98000,98001]"/>
  <match src="call_expression [47084,47105]" dest="call_expression [46471,46492]"/>
  <match src="identifier: require [17866,17873]" dest="identifier: require [17866,17873]"/>
  <match src="parameter [59967,59986]" dest="parameter [59969,59988]"/>
  <match src="user_defined_type [64959,64967]" dest="user_defined_type [64969,64977]"/>
  <match src="identifier: account [13030,13037]" dest="identifier: account [13030,13037]"/>
  <match src="=: = [84804,84805]" dest="=: = [85935,85936]"/>
  <match src="array_access [99464,99510]" dest="array_access [97554,97600]"/>
  <match src="{: { [8156,8157]" dest="{: { [8156,8157]"/>
  <match src="expression_statement [44532,44569]" dest="expression_statement [44534,44571]"/>
  <match src="(: ( [72955,72956]" dest="(: ( [72637,72638]"/>
  <match src="parameter [94139,94171]" dest="parameter [93785,93817]"/>
  <match src="return: return [6586,6592]" dest="return: return [6586,6592]"/>
  <match src=",: , [83518,83519]" dest=",: , [84383,84384]"/>
  <match src="/: / [27631,27632]" dest="/: / [27631,27632]"/>
  <match src="]: ] [86337,86338]" dest="]: ] [87625,87626]"/>
  <match src="identifier: pool [84303,84307]" dest="identifier: pool [84832,84836]"/>
  <match src="string [34377,34405]" dest="string [34377,34405]"/>
  <match src=",: , [6626,6627]" dest=",: , [6626,6627]"/>
  <match src="return: return [89781,89787]" dest="return: return [91023,91029]"/>
  <match src="(: ( [32129,32130]" dest="(: ( [32129,32130]"/>
  <match src="solidity_pragma_token [23714,23737]" dest="solidity_pragma_token [23714,23737]"/>
  <match src="call_argument [35595,35614]" dest="call_argument [35595,35614]"/>
  <match src="call_argument [80044,80079]" dest="call_argument [80629,80664]"/>
  <match src="visibility [39275,39283]" dest="visibility [39275,39283]"/>
  <match src="primitive_type [95733,95740]" dest="primitive_type [94881,94888]"/>
  <match src="(: ( [89199,89200]" dest="(: ( [90124,90125]"/>
  <match src=",: , [6947,6948]" dest=",: , [6947,6948]"/>
  <match src="): ) [83045,83046]" dest="): ) [83824,83825]"/>
  <match src="pragma: pragma [42954,42960]" dest="pragma: pragma [42954,42960]"/>
  <match src="call_argument [45700,45711]" dest="call_argument [45702,45713]"/>
  <match src="identifier: from [58570,58574]" dest="identifier: from [58572,58576]"/>
  <match src="return: return [33268,33274]" dest="return: return [33268,33274]"/>
  <match src="call_expression [61951,61968]" dest="call_expression [61953,61970]"/>
  <match src="call_argument [83258,83274]" dest="call_argument [90431,90452]"/>
  <match src="state_variable_declaration [65824,65848]" dest="state_variable_declaration [65834,65858]"/>
  <match src="boolean_literal [68070,68074]" dest="boolean_literal [68056,68060]"/>
  <match src="primitive_type [96982,96989]" dest="primitive_type [95747,95754]"/>
  <match src="identifier: div [103700,103703]" dest="identifier: div [103624,103627]"/>
  <match src="primitive_type [21287,21294]" dest="primitive_type [21287,21294]"/>
  <match src="call_argument [37131,37133]" dest="call_argument [37131,37133]"/>
  <match src="call_argument [36532,36534]" dest="call_argument [36532,36534]"/>
  <match src="solidity_version:  0.6.12 [42969,42976]" dest="solidity_version:  0.6.12 [42969,42976]"/>
  <match src="identifier: uq112x112 [37413,37422]" dest="identifier: uq112x112 [37413,37422]"/>
  <match src="identifier: INVITOR_WEIGHT [101368,101382]" dest="identifier: INVITOR_WEIGHT [82313,82327]"/>
  <match src="}: } [60645,60646]" dest="}: } [60647,60648]"/>
  <match src="(: ( [97232,97233]" dest="(: ( [95997,95998]"/>
  <match src="identifier: price [97703,97708]" dest="identifier: price [96468,96473]"/>
  <match src="): ) [31624,31625]" dest="): ) [31624,31625]"/>
  <match src="type_name [39747,39751]" dest="type_name [39747,39751]"/>
  <match src="primitive_type [96083,96090]" dest="primitive_type [95393,95400]"/>
  <match src="identifier: shardPoolDividend [79620,79637]" dest="identifier: shardPoolDividend [79703,79720]"/>
  <match src="(: ( [87768,87769]" dest="(: ( [88929,88930]"/>
  <match src="identifier: existedAmount [80425,80438]" dest="identifier: invitorRevenue [101546,101560]"/>
  <match src="call_argument [85709,85748]" dest="call_argument [87009,87048]"/>
  <match src="storage: storage [85852,85859]" dest="storage: storage [87152,87159]"/>
  <match src=".: . [105097,105098]" dest=".: . [105021,105022]"/>
  <match src="(: ( [89788,89789]" dest="(: ( [91030,91031]"/>
  <match src="number_literal: 1 [29606,29607]" dest="number_literal: 1 [29606,29607]"/>
  <match src="call_argument [23578,23622]" dest="call_argument [23578,23622]"/>
  <match src="identifier: isFirstTokenEthToken [70593,70613]" dest="identifier: isFirstTokenEthToken [70304,70324]"/>
  <match src="): ) [61410,61411]" dest="): ) [61412,61413]"/>
  <match src="identifier: sender [84474,84480]" dest="identifier: sender [85009,85015]"/>
  <match src="identifier: number [84729,84735]" dest="identifier: number [85860,85866]"/>
  <match src="return: return [7810,7816]" dest="return: return [7810,7816]"/>
  <match src="parameter [55601,55616]" dest="parameter [55603,55618]"/>
  <match src="): ) [77412,77413]" dest="): ) [76852,76853]"/>
  <match src="}: } [100066,100067]" dest="}: } [98771,98772]"/>
  <match src="type_name [6554,6561]" dest="type_name [6554,6561]"/>
  <match src="number_literal: 0 [79898,79899]" dest="number_literal: 0 [80483,80484]"/>
  <match src=",: , [44625,44626]" dest=",: , [44627,44628]"/>
  <match src="library: library [28530,28537]" dest="library: library [28530,28537]"/>
  <match src="contract_declaration [24252,24635]" dest="contract_declaration [24252,24635]"/>
  <match src="type_name [92675,92682]" dest="type_name [92323,92330]"/>
  <match src="memory: memory [36830,36836]" dest="memory: memory [36830,36836]"/>
  <match src="binary_expression [60083,60109]" dest="binary_expression [60085,60111]"/>
  <match src="}: } [29618,29619]" dest="}: } [29618,29619]"/>
  <match src="uint256: uint256 [78392,78399]" dest="uint256: uint256 [77980,77987]"/>
  <match src="identifier: value [17060,17065]" dest="identifier: value [17060,17065]"/>
  <match src="returns: returns [39122,39129]" dest="returns: returns [39122,39129]"/>
  <match src="{: { [24464,24465]" dest="{: { [24464,24465]"/>
  <match src="type_cast_expression [37423,37438]" dest="type_cast_expression [37423,37438]"/>
  <match src="primitive_type [51625,51632]" dest="primitive_type [51627,51634]"/>
  <match src="(: ( [107257,107258]" dest="(: ( [107181,107182]"/>
  <match src="identifier: checkpoints [61541,61552]" dest="identifier: checkpoints [61543,61554]"/>
  <match src="): ) [33931,33932]" dest="): ) [33931,33932]"/>
  <match src="comment: /**      * @notice Emitted when implementation is changed      */ [319,386]" dest="comment: /**      * @notice Emitted when implementation is changed      */ [319,386]"/>
  <match src="pure: pure [33668,33672]" dest="pure: pure [33668,33672]"/>
  <match src="assignment_expression [44532,44568]" dest="assignment_expression [44534,44570]"/>
  <match src="member_expression [106106,106131]" dest="member_expression [106030,106055]"/>
  <match src="if_statement [30331,30436]" dest="if_statement [30331,30436]"/>
  <match src="address: address [71614,71621]" dest="address: address [71325,71332]"/>
  <match src="binary_expression [83585,83605]" dest="binary_expression [85333,85353]"/>
  <match src="variable_declaration_statement [85360,85399]" dest="variable_declaration_statement [86660,86699]"/>
  <match src="==: == [70798,70800]" dest="==: == [70509,70511]"/>
  <match src="if_statement [104216,104362]" dest="if_statement [104140,104286]"/>
  <match src="parameter [101871,101883]" dest="parameter [85118,85134]"/>
  <match src="contract_body [25277,26951]" dest="contract_body [25277,26951]"/>
  <match src="type_name [64761,64775]" dest="type_name [64767,64781]"/>
  <match src="identifier: pool [79052,79056]" dest="identifier: pool [78841,78845]"/>
  <match src="expression_statement [99782,99860]" dest="expression_statement [97974,98052]"/>
  <match src="identifier: rankPoolIndex [64571,64584]" dest="identifier: rankPoolIndex [64575,64588]"/>
  <match src="]: ] [95432,95433]" dest="]: ] [94580,94581]"/>
  <match src="(: ( [29127,29128]" dest="(: ( [29127,29128]"/>
  <match src="identifier: judgeContractSender [47219,47238]" dest="identifier: judgeContractSender [47221,47240]"/>
  <match src=",: , [37292,37293]" dest=",: , [37292,37293]"/>
  <match src="function: function [59628,59636]" dest="function: function [59630,59638]"/>
  <match src="parameter [51921,51936]" dest="parameter [51923,51938]"/>
  <match src="==: == [69391,69393]" dest="==: == [69102,69104]"/>
  <match src="new: new [93197,93200]" dest="new: new [92845,92848]"/>
  <match src="(: ( [5263,5264]" dest="(: ( [5263,5264]"/>
  <match src=",: , [48905,48906]" dest=",: , [48907,48908]"/>
  <match src="parameter [51102,51109]" dest="parameter [51104,51111]"/>
  <match src="!=: != [44277,44279]" dest="!=: != [44279,44281]"/>
  <match src="variable_declaration [83371,83395]" dest="variable_declaration [85155,85179]"/>
  <match src="): ) [15221,15222]" dest="): ) [15221,15222]"/>
  <match src="identifier: lpTokenTotalSupply [97029,97047]" dest="identifier: lpTokenTotalSupply [95794,95812]"/>
  <match src="else: else [70427,70431]" dest="else: else [70138,70142]"/>
  <match src="solidity_version: 0.6.0 [24716,24721]" dest="solidity_version: 0.6.0 [24716,24721]"/>
  <match src=".: . [20917,20918]" dest=".: . [20917,20918]"/>
  <match src="identifier: data [15292,15296]" dest="identifier: data [15292,15296]"/>
  <match src="identifier: xx [29069,29071]" dest="identifier: xx [29069,29071]"/>
  <match src="return_type_definition [38958,38972]" dest="return_type_definition [38958,38972]"/>
  <match src="identifier: poolIndex [73561,73570]" dest="identifier: poolIndex [73326,73335]"/>
  <match src="identifier: devDividendWeight [67854,67871]" dest="identifier: devDividendWeight [68106,68123]"/>
  <match src="): ) [80152,80153]" dest="): ) [80737,80738]"/>
  <match src="parameter [15607,15624]" dest="parameter [15607,15624]"/>
  <match src="identifier: _pid [76967,76971]" dest="identifier: _pid [76483,76487]"/>
  <match src="call_argument [54148,54244]" dest="call_argument [54150,54246]"/>
  <match src="=: = [101734,101735]" dest="=: = [102156,102157]"/>
  <match src="type_name [73775,73783]" dest="type_name [73571,73579]"/>
  <match src="call_argument [106176,106184]" dest="call_argument [106100,106108]"/>
  <match src="number_literal: 0 [85438,85439]" dest="number_literal: 0 [86738,86739]"/>
  <match src="identifier: _initialBlock [103126,103139]" dest="identifier: _initialBlock [103050,103063]"/>
  <match src="type_name [28719,28726]" dest="type_name [28719,28726]"/>
  <match src="parameter [39203,39207]" dest="parameter [39203,39207]"/>
  <match src="=&gt;: =&gt; [64877,64879]" dest="=&gt;: =&gt; [64885,64887]"/>
  <match src="type_name [43092,43099]" dest="type_name [43092,43099]"/>
  <match src="parameter [109074,109091]" dest="parameter [108998,109015]"/>
  <match src="call_expression [98015,98084]" dest="call_expression [96780,96849]"/>
  <match src="parameter [57203,57217]" dest="parameter [57205,57219]"/>
  <match src="identifier: oracleWeight [84256,84268]" dest="identifier: oracleWeight [84785,84797]"/>
  <match src="struct: struct [58868,58874]" dest="struct: struct [58870,58876]"/>
  <match src="=: = [106425,106426]" dest="=: = [106349,106350]"/>
  <match src="expression_statement [76716,76862]" dest="expression_statement [76232,76378]"/>
  <match src="identifier: _pairInfo [106768,106777]" dest="identifier: _pairInfo [106692,106701]"/>
  <match src="mapping: mapping [64880,64887]" dest="mapping: mapping [64888,64895]"/>
  <match src="expression_statement [29753,29774]" dest="expression_statement [29753,29774]"/>
  <match src="type_name [96397,96404]" dest="type_name [85101,85108]"/>
  <match src=".: . [20930,20931]" dest=".: . [20930,20931]"/>
  <match src="type_cast_expression [106659,106674]" dest="type_cast_expression [106583,106598]"/>
  <match src="identifier: rankPoolIndexMap [86316,86332]" dest="identifier: rankPoolIndexMap [87604,87620]"/>
  <match src="uint256: uint256 [90811,90818]" dest="uint256: uint256 [91836,91843]"/>
  <match src="primitive_type [39537,39544]" dest="primitive_type [39537,39544]"/>
  <match src="string [85523,85550]" dest="string [86823,86850]"/>
  <match src="): ) [85988,85989]" dest="): ) [87287,87288]"/>
  <match src="user_defined_type [21896,21902]" dest="user_defined_type [21896,21902]"/>
  <match src="type_name [21287,21294]" dest="type_name [21287,21294]"/>
  <match src="type_name [5949,5953]" dest="type_name [5949,5953]"/>
  <match src="uint256: uint256 [64056,64063]" dest="uint256: uint256 [64058,64065]"/>
  <match src="identifier: usersTotalWeight [63628,63644]" dest="identifier: usersTotalWeight [63630,63646]"/>
  <match src="uint256: uint256 [28753,28760]" dest="uint256: uint256 [28753,28760]"/>
  <match src="member_expression [89396,89417]" dest="member_expression [77746,77767]"/>
  <match src="unary_expression [31397,31399]" dest="unary_expression [31397,31399]"/>
  <match src="]: ] [100354,100355]" dest="]: ] [71917,71918]"/>
  <match src=",: , [16666,16667]" dest=",: , [16666,16667]"/>
  <match src=".: . [78702,78703]" dest=".: . [78282,78283]"/>
  <match src=".: . [56554,56555]" dest=".: . [56556,56557]"/>
  <match src="): ) [6322,6323]" dest="): ) [6322,6323]"/>
  <match src="uint256: uint256 [32665,32672]" dest="uint256: uint256 [32665,32672]"/>
  <match src="function_definition [30185,30985]" dest="function_definition [30185,30985]"/>
  <match src="call_expression [75993,76010]" dest="call_expression [75509,75526]"/>
  <match src="number_literal: 2 [38368,38369]" dest="number_literal: 2 [38368,38369]"/>
  <match src="identifier: acceptInvitation [86497,86513]" dest="identifier: acceptInvitation [87785,87801]"/>
  <match src="identifier: lastPriceUpdateHeight [64139,64160]" dest="identifier: lastPriceUpdateHeight [64141,64162]"/>
  <match src="address: address [17755,17762]" dest="address: address [17755,17762]"/>
  <match src="): ) [104535,104536]" dest="): ) [104459,104460]"/>
  <match src="}: } [24634,24635]" dest="}: } [24634,24635]"/>
  <match src=",: , [15732,15733]" dest=",: , [15732,15733]"/>
  <match src="if: if [70774,70776]" dest="if: if [70485,70487]"/>
  <match src="primitive_type [104547,104554]" dest="primitive_type [104471,104478]"/>
  <match src="identifier: produceBlocksPerMonth [65364,65385]" dest="identifier: produceBlocksPerMonth [65374,65395]"/>
  <match src="primitive_type [66927,66934]" dest="primitive_type [67180,67187]"/>
  <match src=",: , [68294,68295]" dest=",: , [68359,68360]"/>
  <match src="type_name [20528,20535]" dest="type_name [20528,20535]"/>
  <match src="identifier: isFirstTokenShard [70823,70840]" dest="identifier: isFirstTokenShard [70534,70551]"/>
  <match src="identifier: contractFeeRateNumerator [67966,67990]" dest="identifier: contractFeeRateNumerator [68218,68242]"/>
  <match src="member_expression [80260,80278]" dest="member_expression [80880,80898]"/>
  <match src="call_expression [19093,19145]" dest="call_expression [19093,19145]"/>
  <match src="identifier: wantToken [70045,70054]" dest="identifier: wantToken [69756,69765]"/>
  <match src="type_cast_expression [35164,35183]" dest="type_cast_expression [35164,35183]"/>
  <match src="=: = [103456,103457]" dest="=: = [103380,103381]"/>
  <match src="variable_declaration_statement [73430,73483]" dest="variable_declaration_statement [73195,73248]"/>
  <match src="(: ( [86436,86437]" dest="(: ( [87724,87725]"/>
  <match src="call_argument [10991,10996]" dest="call_argument [10991,10996]"/>
  <match src="member_expression [46391,46433]" dest="member_expression [46633,46675]"/>
  <match src="block_statement [77517,77552]" dest="block_statement [76957,76992]"/>
  <match src="}: } [30984,30985]" dest="}: } [30984,30985]"/>
  <match src="): ) [25648,25649]" dest="): ) [25648,25649]"/>
  <match src="modifier_invocation [59867,59876]" dest="modifier_invocation [59869,59878]"/>
  <match src="(: ( [103221,103222]" dest="(: ( [103145,103146]"/>
  <match src="identifier: _pending [47120,47128]" dest="identifier: _pending [46507,46515]"/>
  <match src="any_pragma_token [78,103]" dest="any_pragma_token [78,103]"/>
  <match src="call_expression [106659,106691]" dest="call_expression [106583,106615]"/>
  <match src="parameter [104519,104526]" dest="parameter [104443,104450]"/>
  <match src="number_literal: 4 [30834,30835]" dest="number_literal: 4 [30834,30835]"/>
  <match src="pragma_directive [38456,38480]" dest="pragma_directive [38456,38480]"/>
  <match src="identifier: _targetToken [104658,104670]" dest="identifier: _targetToken [104582,104594]"/>
  <match src="identifier: target [16884,16890]" dest="identifier: target [16884,16890]"/>
  <match src="new_expression [92980,92993]" dest="new_expression [92628,92641]"/>
  <match src="identifier: uq112x112 [36964,36973]" dest="identifier: uq112x112 [36964,36973]"/>
  <match src="identifier: modifiedWeight [102656,102670]" dest="identifier: modifiedWeight [102580,102594]"/>
  <match src="primitive_type [78392,78399]" dest="primitive_type [77980,77987]"/>
  <match src="]: ] [57424,57425]" dest="]: ] [57426,57427]"/>
  <match src="binary_expression [80610,80627]" dest="binary_expression [81295,81314]"/>
  <match src=",: , [25371,25372]" dest=",: , [25371,25372]"/>
  <match src="}: } [13039,13040]" dest="}: } [13039,13040]"/>
  <match src="member_expression [107794,107814]" dest="member_expression [107718,107738]"/>
  <match src="[: [ [99472,99473]" dest="[: [ [97562,97563]"/>
  <match src="identifier: i [93412,93413]" dest="identifier: i [93060,93061]"/>
  <match src=",: , [67065,67066]" dest=",: , [67318,67319]"/>
  <match src="binary_expression [34669,34690]" dest="binary_expression [34669,34690]"/>
  <match src="(: ( [17840,17841]" dest="(: ( [17840,17841]"/>
  <match src="else: else [80940,80944]" dest="else: else [81627,81631]"/>
  <match src="): ) [31404,31405]" dest="): ) [31404,31405]"/>
  <match src="identifier: b [11737,11738]" dest="identifier: b [11737,11738]"/>
  <match src="call_argument [95696,95705]" dest="call_argument [94844,94853]"/>
  <match src="=: = [28093,28094]" dest="=: = [28093,28094]"/>
  <match src="[: [ [51138,51139]" dest="[: [ [51140,51141]"/>
  <match src="identifier: require [69346,69353]" dest="identifier: require [69057,69064]"/>
  <match src="comment: /**      * @notice Called by the delegator on a delegate to forfeit its responsibility      */ [1445,1541]" dest="comment: /**      * @notice Called by the delegator on a delegate to forfeit its responsibility      */ [1445,1541]"/>
  <match src="member_expression [80558,80583]" dest="member_expression [81243,81268]"/>
  <match src="call_expression [57247,57315]" dest="call_expression [57249,57317]"/>
  <match src="expression_statement [62414,62467]" dest="expression_statement [62416,62469]"/>
  <match src="member_expression [22096,22109]" dest="member_expression [22096,22109]"/>
  <match src="identifier: i [88782,88783]" dest="identifier: i [89630,89631]"/>
  <match src=".: . [82054,82055]" dest=".: . [82892,82893]"/>
  <match src="primitive_type [43470,43477]" dest="primitive_type [43470,43477]"/>
  <match src="state_variable_declaration [64742,64806]" dest="state_variable_declaration [64748,64814]"/>
  <match src="(: ( [68950,68951]" dest="(: ( [68661,68662]"/>
  <match src="solidity_pragma_token [42662,42677]" dest="solidity_pragma_token [42662,42677]"/>
  <match src="visibility [95268,95276]" dest="visibility [94416,94424]"/>
  <match src="identifier: mul [104008,104011]" dest="identifier: mul [103932,103935]"/>
  <match src="=: = [32888,32889]" dest="=: = [32888,32889]"/>
  <match src="identifier: sender [81903,81909]" dest="identifier: sender [82735,82741]"/>
  <match src="call_argument [84129,84139]" dest="call_argument [84658,84668]"/>
  <match src="primitive_type [82715,82722]" dest="primitive_type [83553,83560]"/>
  <match src="identifier: uppers_lowero [35618,35631]" dest="identifier: uppers_lowero [35618,35631]"/>
  <match src="}: } [29113,29114]" dest="}: } [29113,29114]"/>
  <match src="identifier: _count [87486,87492]" dest="identifier: _count [88647,88653]"/>
  <match src="call_argument [36514,36535]" dest="call_argument [36514,36535]"/>
  <match src="function_body [37635,37841]" dest="function_body [37635,37841]"/>
  <match src="): ) [8122,8123]" dest="): ) [8122,8123]"/>
  <match src="call_argument [9500,9526]" dest="call_argument [9500,9526]"/>
  <match src="call_argument [84420,84430]" dest="call_argument [84955,84965]"/>
  <match src=",: , [39932,39933]" dest=",: , [39932,39933]"/>
  <match src="uint: uint [42528,42532]" dest="uint: uint [42528,42532]"/>
  <match src="identifier: require [86852,86859]" dest="identifier: require [88009,88016]"/>
  <match src="{: { [29247,29248]" dest="{: { [29247,29248]"/>
  <match src="comment: // Info of each pool. [64932,64953]" dest="comment: // Info of each pool. [64942,64963]"/>
  <match src="call_argument [95904,95909]" dest="call_argument [95171,95176]"/>
  <match src="function: function [1872,1880]" dest="function: function [1872,1880]"/>
  <match src="identifier: mulDiv [27914,27920]" dest="identifier: mulDiv [27914,27920]"/>
  <match src="return_type_definition [8138,8155]" dest="return_type_definition [8138,8155]"/>
  <match src="): ) [87807,87808]" dest="): ) [88968,88969]"/>
  <match src="array_access [93429,93451]" dest="array_access [93077,93099]"/>
  <match src="expression_statement [76356,76512]" dest="expression_statement [75872,76028]"/>
  <match src="identifier: _pending [89530,89538]" dest="identifier: _pending [90772,90780]"/>
  <match src="identifier: encodeWithSelector [22416,22434]" dest="identifier: encodeWithSelector [22416,22434]"/>
  <match src="[: [ [64561,64562]" dest="[: [ [64563,64564]"/>
  <match src="): ) [2081,2082]" dest="): ) [2081,2082]"/>
  <match src="type_name [104519,104526]" dest="type_name [104443,104450]"/>
  <match src="type_name [64880,64908]" dest="type_name [64888,64916]"/>
  <match src="parameter [67145,67167]" dest="parameter [67398,67420]"/>
  <match src="member_expression [36284,36292]" dest="member_expression [36284,36292]"/>
  <match src="identifier: _pairInfo [105759,105768]" dest="identifier: _pairInfo [105683,105692]"/>
  <match src="virtual: virtual [75545,75552]" dest="virtual: virtual [75061,75068]"/>
  <match src="variable_declaration_statement [34279,34347]" dest="variable_declaration_statement [34279,34347]"/>
  <match src="returns: returns [34627,34634]" dest="returns: returns [34627,34634]"/>
  <match src="call_argument [62004,62006]" dest="call_argument [62006,62008]"/>
  <match src="identifier: r [29374,29375]" dest="identifier: r [29374,29375]"/>
  <match src="identifier: initialInvitor [68046,68060]" dest="identifier: initialInvitor [68033,68047]"/>
  <match src="(: ( [88876,88877]" dest="(: ( [89724,89725]"/>
  <match src="user_defined_type [97592,97612]" dest="user_defined_type [96357,96377]"/>
  <match src="variable_declaration_statement [82840,82879]" dest="variable_declaration_statement [83678,83717]"/>
  <match src="(: ( [79370,79371]" dest="(: ( [79525,79526]"/>
  <match src="false: false [59906,59911]" dest="false: false [59908,59913]"/>
  <match src="&gt;=: &gt;= [29014,29016]" dest="&gt;=: &gt;= [29014,29016]"/>
  <match src="(: ( [85708,85709]" dest="(: ( [87008,87009]"/>
  <match src="call_argument [47442,47461]" dest="call_argument [47444,47463]"/>
  <match src="(: ( [90878,90879]" dest="(: ( [91903,91904]"/>
  <match src="call_expression [42083,42103]" dest="call_expression [42083,42103]"/>
  <match src="&lt;: &lt; [61024,61025]" dest="&lt;: &lt; [61026,61027]"/>
  <match src="pragma: pragma [47652,47658]" dest="pragma: pragma [47654,47660]"/>
  <match src="comment: // deposit LP tokens to MasterChef for SHD allocation. [79654,79708]" dest="comment: // deposit LP tokens to MasterChef for SHD allocation. [80239,80293]"/>
  <match src="call_expression [25970,25977]" dest="call_expression [25970,25977]"/>
  <match src="true: true [98713,98717]" dest="true: true [98923,98927]"/>
  <match src="identifier: invitorInfo [101176,101187]" dest="identifier: invitorInfo [101145,101156]"/>
  <match src="memory: memory [93971,93977]" dest="memory: memory [93617,93623]"/>
  <match src="binary_expression [37335,37356]" dest="binary_expression [37335,37356]"/>
  <match src="primitive_type [9465,9472]" dest="primitive_type [9465,9472]"/>
  <match src=".: . [107140,107141]" dest=".: . [107064,107065]"/>
  <match src="function_body [55651,55964]" dest="function_body [55653,55966]"/>
  <match src="member_expression [21985,22000]" dest="member_expression [21985,22000]"/>
  <match src=",: , [62555,62556]" dest=",: , [62557,62558]"/>
  <match src="assignment_expression [102656,102725]" dest="assignment_expression [102580,102649]"/>
  <match src="type_name [63491,63498]" dest="type_name [63493,63500]"/>
  <match src="identifier: _resignImplementation [109476,109497]" dest="identifier: _resignImplementation [109400,109421]"/>
  <match src="parameter [88530,88557]" dest="parameter [89378,89405]"/>
  <match src="delete: delete [86271,86277]" dest="delete: delete [87559,87565]"/>
  <match src="identifier: checkAdmin [44185,44195]" dest="identifier: checkAdmin [44187,44197]"/>
  <match src="identifier: OwnershipTransferred [25618,25638]" dest="identifier: OwnershipTransferred [25618,25638]"/>
  <match src="identifier: PoolInfo [64959,64967]" dest="identifier: PoolInfo [64969,64977]"/>
  <match src="comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [23742,24250]" dest="comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [23742,24250]"/>
  <match src="bytes: bytes [17013,17018]" dest="bytes: bytes [17013,17018]"/>
  <match src="array_access [60875,60895]" dest="array_access [60877,60897]"/>
  <match src="member_expression [108032,108061]" dest="member_expression [107956,107985]"/>
  <match src="{: { [90825,90826]" dest="{: { [91850,91851]"/>
  <match src="identifier: fee [47144,47147]" dest="identifier: fee [46531,46534]"/>
  <match src="struct_field_assignment [17053,17065]" dest="struct_field_assignment [17053,17065]"/>
  <match src="type_name [59045,59075]" dest="type_name [59047,59077]"/>
  <match src="block_statement [107958,108156]" dest="block_statement [107882,108080]"/>
  <match src=",: , [27960,27961]" dest=",: , [27960,27961]"/>
  <match src="number_literal: 0 [80626,80627]" dest="number_literal: 0 [81313,81314]"/>
  <match src="identifier: x [27221,27222]" dest="identifier: x [27221,27222]"/>
  <match src="primitive_type [60658,60665]" dest="primitive_type [60660,60667]"/>
  <match src="bytes: bytes [15672,15677]" dest="bytes: bytes [15672,15677]"/>
  <match src="identifier: x [31997,31998]" dest="identifier: x [31997,31998]"/>
  <match src=",: , [68465,68466]" dest=",: , [68435,68436]"/>
  <match src="identifier: _x [32602,32604]" dest="identifier: _x [32602,32604]"/>
  <match src="identifier: inviteeIndexMap [64341,64356]" dest="identifier: inviteeIndexMap [64343,64358]"/>
  <match src=".: . [80546,80547]" dest=".: . [81231,81232]"/>
  <match src="identifier: size [12927,12931]" dest="identifier: size [12927,12931]"/>
  <match src="(: ( [41755,41756]" dest="(: ( [41755,41756]"/>
  <match src="]: ] [93450,93451]" dest="]: ] [93098,93099]"/>
  <match src=".: . [108469,108470]" dest=".: . [108393,108394]"/>
  <match src="identifier: _callOptionalReturn [22046,22065]" dest="identifier: _callOptionalReturn [22046,22065]"/>
  <match src="mapping: mapping [59164,59171]" dest="mapping: mapping [59166,59173]"/>
  <match src=".: . [76385,76386]" dest=".: . [75901,75902]"/>
  <match src=",: , [67167,67168]" dest=",: , [67420,67421]"/>
  <match src="identifier: spender [57334,57341]" dest="identifier: spender [57336,57343]"/>
  <match src="(: ( [58761,58762]" dest="(: ( [58763,58764]"/>
  <match src="==: == [34694,34696]" dest="==: == [34694,34696]"/>
  <match src="identifier: blockTimestamp [107311,107325]" dest="identifier: blockTimestamp [107235,107249]"/>
  <match src="call_argument [18128,18140]" dest="call_argument [18128,18140]"/>
  <match src="number_literal: 0 [70363,70364]" dest="number_literal: 0 [70074,70075]"/>
  <match src="identifier: msg [82518,82521]" dest="identifier: msg [83356,83359]"/>
  <match src="call_expression [67240,67295]" dest="call_expression [67487,67542]"/>
  <match src="block_statement [31982,32016]" dest="block_statement [31982,32016]"/>
  <match src="override_specifier [108389,108397]" dest="override_specifier [108313,108321]"/>
  <match src="&amp;: &amp; [34864,34865]" dest="&amp;: &amp; [34864,34865]"/>
  <match src="return_statement [51122,51148]" dest="return_statement [51124,51150]"/>
  <match src="identifier: transfer [2321,2329]" dest="identifier: transfer [2321,2329]"/>
  <match src=".: . [22109,22110]" dest=".: . [22109,22110]"/>
  <match src="function_definition [39373,39432]" dest="function_definition [39373,39432]"/>
  <match src="if: if [60354,60356]" dest="if: if [60356,60358]"/>
  <match src="expression_statement [67854,67876]" dest="expression_statement [68106,68128]"/>
  <match src="call_expression [37724,37781]" dest="call_expression [37724,37781]"/>
  <match src="==: == [97683,97685]" dest="==: == [96448,96450]"/>
  <match src="(: ( [31714,31715]" dest="(: ( [31714,31715]"/>
  <match src="identifier: self [34785,34789]" dest="identifier: self [34785,34789]"/>
  <match src="(: ( [55600,55601]" dest="(: ( [55602,55603]"/>
  <match src="(: ( [39797,39798]" dest="(: ( [39797,39798]"/>
  <match src="expression_statement [77195,77318]" dest="expression_statement [76635,76758]"/>
  <match src="array_access [99282,99335]" dest="array_access [99438,99491]"/>
  <match src="return: return [28182,28188]" dest="return: return [28182,28188]"/>
  <match src="identifier: to [62004,62006]" dest="identifier: to [62006,62008]"/>
  <match src="payable: payable [24346,24353]" dest="payable: payable [24346,24353]"/>
  <match src="array_access [93689,93714]" dest="array_access [93337,93362]"/>
  <match src="type_name [27951,27958]" dest="type_name [27951,27958]"/>
  <match src="primitive_type [43521,43528]" dest="primitive_type [43521,43528]"/>
  <match src="type_name [16702,16708]" dest="type_name [16702,16708]"/>
  <match src="identifier: c [7296,7297]" dest="identifier: c [7296,7297]"/>
  <match src="call_argument [17894,17932]" dest="call_argument [17894,17932]"/>
  <match src="call_argument [22323,22328]" dest="call_argument [22323,22328]"/>
  <match src="binary_expression [76675,76694]" dest="binary_expression [76191,76210]"/>
  <match src="): ) [73094,73095]" dest="): ) [72859,72860]"/>
  <match src="state_mutability [33452,33456]" dest="state_mutability [33452,33456]"/>
  <match src=".: . [104576,104577]" dest=".: . [104500,104501]"/>
  <match src="identifier: _approve [54116,54124]" dest="identifier: _approve [54118,54126]"/>
  <match src="memory: memory [35960,35966]" dest="memory: memory [35960,35966]"/>
  <match src="): ) [33309,33310]" dest="): ) [33309,33310]"/>
  <match src="}: } [34085,34086]" dest="}: } [34085,34086]"/>
  <match src="identifier: isFirstTokenEth [106116,106131]" dest="identifier: isFirstTokenEth [106040,106055]"/>
  <match src="=: = [106800,106801]" dest="=: = [106724,106725]"/>
  <match src="parameter [45159,45184]" dest="parameter [45161,45186]"/>
  <match src="call_expression [97063,97096]" dest="call_expression [95828,95861]"/>
  <match src="identifier: data [24620,24624]" dest="identifier: data [24620,24624]"/>
  <match src="identifier: owner [4359,4364]" dest="identifier: owner [4359,4364]"/>
  <match src="call_argument [7332,7361]" dest="call_argument [7332,7361]"/>
  <match src="primitive_type [33682,33689]" dest="primitive_type [33682,33689]"/>
  <match src="identifier: pool [78766,78770]" dest="identifier: pool [78346,78350]"/>
  <match src="call_argument [56404,56439]" dest="call_argument [56406,56441]"/>
  <match src="&lt;: &lt; [80659,80660]" dest="&lt;: &lt; [81346,81347]"/>
  <match src="type_name [66113,66125]" dest="type_name [66129,66141]"/>
  <match src="identifier: Ownable [58785,58792]" dest="identifier: Ownable [58787,58794]"/>
  <match src="): ) [493,494]" dest="): ) [493,494]"/>
  <match src="identifier: _pending [46547,46555]" dest="identifier: _pending [46789,46797]"/>
  <match src="(: ( [105084,105085]" dest="(: ( [105008,105009]"/>
  <match src="}: } [90386,90387]" dest="}: } [91459,91460]"/>
  <match src="identifier: fraction [42544,42552]" dest="identifier: fraction [42544,42552]"/>
  <match src="identifier: z [33987,33988]" dest="identifier: z [33987,33988]"/>
  <match src="block_statement [106324,106502]" dest="block_statement [106248,106426]"/>
  <match src="identifier: yearPeriod [103753,103763]" dest="identifier: yearPeriod [103677,103687]"/>
  <match src="pragma: pragma [41015,41021]" dest="pragma: pragma [41015,41021]"/>
  <match src="uint256: uint256 [95633,95640]" dest="uint256: uint256 [94781,94788]"/>
  <match src="uint256: uint256 [2747,2754]" dest="uint256: uint256 [2747,2754]"/>
  <match src="indexed: indexed [66600,66607]" dest="indexed: indexed [66853,66860]"/>
  <match src="primitive_type [45751,45758]" dest="primitive_type [45753,45760]"/>
  <match src="primitive_type [38967,38971]" dest="primitive_type [38967,38971]"/>
  <match src="solidity_pragma_token [27020,27036]" dest="solidity_pragma_token [27020,27036]"/>
  <match src="identifier: _voteTransfer [61233,61246]" dest="identifier: _voteTransfer [61235,61248]"/>
  <match src="identifier: _pending [88825,88833]" dest="identifier: _pending [89673,89681]"/>
  <match src="identifier: targetPool [85860,85870]" dest="identifier: targetPool [87160,87170]"/>
  <match src="call_argument [62859,62863]" dest="call_argument [62861,62865]"/>
  <match src="primitive_type [80236,80243]" dest="primitive_type [80856,80863]"/>
  <match src="identifier: toOld [61951,61956]" dest="identifier: toOld [61953,61958]"/>
  <match src=":=: := [19704,19706]" dest=":=: := [19704,19706]"/>
  <match src=".: . [88623,88624]" dest=".: . [89471,89472]"/>
  <match src="assignment_expression [46880,46908]" dest="assignment_expression [47122,47150]"/>
  <match src="number_literal: 0 [33956,33957]" dest="number_literal: 0 [33956,33957]"/>
  <match src="=: = [84321,84322]" dest="=: = [84850,84851]"/>
  <match src="primitive_type [51047,51054]" dest="primitive_type [51049,51056]"/>
  <match src="uint256: uint256 [95582,95589]" dest="uint256: uint256 [94730,94737]"/>
  <match src="(: ( [11818,11819]" dest="(: ( [11818,11819]"/>
  <match src="(: ( [19449,19450]" dest="(: ( [19449,19450]"/>
  <match src="function: function [93878,93886]" dest="function: function [93524,93532]"/>
  <match src="binary_expression [27623,27637]" dest="binary_expression [27623,27637]"/>
  <match src="member_expression [99738,99755]" dest="member_expression [97930,97947]"/>
  <match src="type_name [33682,33689]" dest="type_name [33682,33689]"/>
  <match src="identifier: poolInfo [85384,85392]" dest="identifier: poolInfo [86684,86692]"/>
  <match src="): ) [39398,39399]" dest="): ) [39398,39399]"/>
  <match src="call_struct_argument [71232,71248]" dest="call_struct_argument [70943,70959]"/>
  <match src="comment: // solhint-disable-next-line max-line-length [23480,23524]" dest="comment: // solhint-disable-next-line max-line-length [23480,23524]"/>
  <match src="=: = [95627,95628]" dest="=: = [94775,94776]"/>
  <match src="identifier: senderInfo [79960,79970]" dest="identifier: senderInfo [80545,80555]"/>
  <match src="expression_statement [104821,104855]" dest="expression_statement [104745,104779]"/>
  <match src="identifier: _accumulativeDividend [92692,92713]" dest="identifier: _accumulativeDividend [92340,92361]"/>
  <match src="identifier: amount [56700,56706]" dest="identifier: amount [56702,56708]"/>
  <match src="pragma_directive [47555,47586]" dest="pragma_directive [47557,47588]"/>
  <match src="(: ( [99755,99756]" dest="(: ( [97947,97948]"/>
  <match src="inheritance_specifier [63014,63025]" dest="inheritance_specifier [63016,63027]"/>
  <match src="mapping: mapping [64641,64648]" dest="mapping: mapping [64645,64652]"/>
  <match src="}: } [27896,27897]" dest="}: } [27896,27897]"/>
  <match src=".: . [84185,84186]" dest=".: . [84714,84715]"/>
  <match src="uint256: uint256 [28082,28089]" dest="uint256: uint256 [28082,28089]"/>
  <match src="==: == [76336,76338]" dest="==: == [75852,75854]"/>
  <match src="type_name [5904,5911]" dest="type_name [5904,5911]"/>
  <match src=".: . [107481,107482]" dest=".: . [107405,107406]"/>
  <match src="return_statement [90941,91010]" dest="return_statement [91966,92035]"/>
  <match src="address: address [3442,3449]" dest="address: address [3442,3449]"/>
  <match src="&gt;=: &gt;= [30549,30551]" dest="&gt;=: &gt;= [30549,30551]"/>
  <match src="identifier: _pid [88959,88963]" dest="identifier: _pid [89807,89811]"/>
  <match src="): ) [87296,87297]" dest="): ) [88457,88458]"/>
  <match src="function: function [96875,96883]" dest="function: function [95640,95648]"/>
  <match src="variable_declaration_statement [37250,37313]" dest="variable_declaration_statement [37250,37313]"/>
  <match src="address: address [54965,54972]" dest="address: address [54967,54974]"/>
  <match src="primitive_type [17790,17796]" dest="primitive_type [17790,17796]"/>
  <match src="parameter [93932,93948]" dest="parameter [93578,93594]"/>
  <match src="member_expression [72928,72942]" dest="member_expression [72610,72624]"/>
  <match src="(: ( [2746,2747]" dest="(: ( [2746,2747]"/>
  <match src="identifier: isWithdrawn [64291,64302]" dest="identifier: isWithdrawn [64293,64304]"/>
  <match src="primitive_type [64649,64656]" dest="primitive_type [64653,64660]"/>
  <match src=",: , [20684,20685]" dest=",: , [20684,20685]"/>
  <match src="type_name [69642,69646]" dest="type_name [69353,69357]"/>
  <match src="[: [ [62516,62517]" dest="[: [ [62518,62519]"/>
  <match src="identifier: r [29900,29901]" dest="identifier: r [29900,29901]"/>
  <match src="identifier: checkAdmin [109527,109537]" dest="identifier: checkAdmin [109451,109461]"/>
  <match src="primitive_type [88951,88958]" dest="primitive_type [89799,89806]"/>
  <match src="): ) [46531,46532]" dest="): ) [46773,46774]"/>
  <match src=",: , [45602,45603]" dest=",: , [45604,45605]"/>
  <match src="): ) [35343,35344]" dest="): ) [35343,35344]"/>
  <match src="augmented_assignment_expression [28150,28157]" dest="augmented_assignment_expression [28150,28157]"/>
  <match src="(: ( [39332,39333]" dest="(: ( [39332,39333]"/>
  <match src="{: { [32043,32044]" dest="{: { [32043,32044]"/>
  <match src="view: view [93910,93914]" dest="view: view [93556,93560]"/>
  <match src="true: true [52864,52868]" dest="true: true [52866,52870]"/>
  <match src="call_argument [22303,22307]" dest="call_argument [22303,22307]"/>
  <match src="): ) [95705,95706]" dest="): ) [94853,94854]"/>
  <match src=",: , [55780,55781]" dest=",: , [55782,55783]"/>
  <match src="identifier: mint [77905,77909]" dest="identifier: mint [77140,77144]"/>
  <match src="): ) [102723,102724]" dest="): ) [102647,102648]"/>
  <match src="number_literal: 0 [87366,87367]" dest="number_literal: 0 [88527,88528]"/>
  <match src=".: . [103781,103782]" dest=".: . [103705,103706]"/>
  <match src="+: + [35616,35617]" dest="+: + [35616,35617]"/>
  <match src="=: = [105333,105334]" dest="=: = [105257,105258]"/>
  <match src="&quot;: &quot; [87369,87370]" dest="&quot;: &quot; [88530,88531]"/>
  <match src="&quot;: &quot; [56438,56439]" dest="&quot;: &quot; [56440,56441]"/>
  <match src="(: ( [54870,54871]" dest="(: ( [54872,54873]"/>
  <match src="call_expression [70960,71061]" dest="call_expression [70671,70772]"/>
  <match src="function_definition [40632,40704]" dest="function_definition [40632,40704]"/>
  <match src="block_statement [73209,73242]" dest="block_statement [72974,73007]"/>
  <match src="]: ] [95641,95642]" dest="]: ] [94789,94790]"/>
  <match src="memory: memory [88407,88413]" dest="memory: memory [89255,89261]"/>
  <match src="return: return [78375,78381]" dest="return: return [77887,77893]"/>
  <match src="identifier: accumulativeDividend [83153,83173]" dest="identifier: accumulativeDividend [72352,72372]"/>
  <match src=",: , [62863,62864]" dest=",: , [62865,62866]"/>
  <match src="number_literal: 0 [103920,103921]" dest="number_literal: 0 [103844,103845]"/>
  <match src="if_statement [30717,30788]" dest="if_statement [30717,30788]"/>
  <match src=",: , [80042,80043]" dest=",: , [80627,80628]"/>
  <match src="struct_declaration [63172,63429]" dest="struct_declaration [63174,63431]"/>
  <match src="): ) [61967,61968]" dest="): ) [61969,61970]"/>
  <match src="parameter [20787,20799]" dest="parameter [20787,20799]"/>
  <match src="}: } [59918,59919]" dest="}: } [59920,59921]"/>
  <match src="user_defined_type [108761,108778]" dest="user_defined_type [108685,108702]"/>
  <match src="uint256: uint256 [63767,63774]" dest="uint256: uint256 [63769,63776]"/>
  <match src="function_definition [104406,104862]" dest="function_definition [104330,104786]"/>
  <match src="(: ( [7729,7730]" dest="(: ( [7729,7730]"/>
  <match src="identifier: SHD [64517,64520]" dest="identifier: SHD [64519,64522]"/>
  <match src="parameter [54784,54798]" dest="parameter [54786,54800]"/>
  <match src="}: } [25668,25669]" dest="}: } [25668,25669]"/>
  <match src="identifier: encode [33017,33023]" dest="identifier: encode [33017,33023]"/>
  <match src="parameter [54033,54048]" dest="parameter [54035,54050]"/>
  <match src="(: ( [101233,101234]" dest="(: ( [101202,101203]"/>
  <match src="?: ? [34430,34431]" dest="?: ? [34430,34431]"/>
  <match src="number_literal: 2287 [68670,68674]" dest="number_literal: 2287 [68517,68521]"/>
  <match src="=: = [100339,100340]" dest="=: = [71902,71903]"/>
  <match src="primitive_type [43937,43944]" dest="primitive_type [43937,43944]"/>
  <match src="call_argument [54973,54974]" dest="call_argument [54975,54976]"/>
  <match src="call_argument [74593,74608]" dest="call_argument [74278,74293]"/>
  <match src="call_expression [92925,92956]" dest="call_expression [92573,92604]"/>
  <match src="identifier: blockNumber [62376,62387]" dest="identifier: blockNumber [62378,62389]"/>
  <match src="comment: // multiply a UQ112x112 by a uint, returning a UQ144x112 [33755,33811]" dest="comment: // multiply a UQ112x112 by a uint, returning a UQ144x112 [33755,33811]"/>
  <match src="primitive_type [15204,15209]" dest="primitive_type [15204,15209]"/>
  <match src="memory: memory [33646,33652]" dest="memory: memory [33646,33652]"/>
  <match src="return_statement [28785,28794]" dest="return_statement [28785,28794]"/>
  <match src="visibility [1580,1586]" dest="visibility [1580,1586]"/>
  <match src="primitive_type [43600,43607]" dest="primitive_type [43600,43607]"/>
  <match src=",: , [53411,53412]" dest=",: , [53413,53414]"/>
  <match src=",: , [97168,97169]" dest=",: , [95933,95934]"/>
  <match src=".: . [107154,107155]" dest=".: . [107078,107079]"/>
  <match src="user_defined_type [86777,86791]" dest="user_defined_type [87932,87946]"/>
  <match src="(: ( [29726,29727]" dest="(: ( [29726,29727]"/>
  <match src="return: return [79122,79128]" dest="return: return [79285,79291]"/>
  <match src="identifier: onlyOwner [26764,26773]" dest="identifier: onlyOwner [26764,26773]"/>
  <match src="=: = [93806,93807]" dest="=: = [93452,93453]"/>
  <match src="type_name [65975,65982]" dest="type_name [65985,65992]"/>
  <match src="): ) [22941,22942]" dest="): ) [22941,22942]"/>
  <match src="call_argument [98033,98045]" dest="call_argument [96798,96810]"/>
  <match src="augmented_assignment_expression [30580,30588]" dest="augmented_assignment_expression [30580,30588]"/>
  <match src="expression_statement [97999,98158]" dest="expression_statement [96764,96923]"/>
  <match src="private: private [103200,103207]" dest="private: private [103124,103131]"/>
  <match src="identifier: l [27390,27391]" dest="identifier: l [27390,27391]"/>
  <match src="identifier: y [27232,27233]" dest="identifier: y [27232,27233]"/>
  <match src=".: . [103763,103764]" dest=".: . [103687,103688]"/>
  <match src="type_name [39013,39020]" dest="type_name [39013,39020]"/>
  <match src="(: ( [81000,81001]" dest="(: ( [81687,81688]"/>
  <match src="tuple_expression [5381,5391]" dest="tuple_expression [5381,5391]"/>
  <match src="identifier: sender [3847,3853]" dest="identifier: sender [3847,3853]"/>
  <match src="member_expression [98884,98923]" dest="member_expression [99073,99112]"/>
  <match src="+=: += [42525,42527]" dest="+=: += [42525,42527]"/>
  <match src="uint256: uint256 [93098,93105]" dest="uint256: uint256 [92746,92753]"/>
  <match src="type_cast_expression [31828,31837]" dest="type_cast_expression [31828,31837]"/>
  <match src="mapping: mapping [59045,59052]" dest="mapping: mapping [59047,59054]"/>
  <match src="(: ( [40191,40192]" dest="(: ( [40191,40192]"/>
  <match src="identifier: _voteTransfer [62845,62858]" dest="identifier: _voteTransfer [62847,62860]"/>
  <match src="identifier: reserve1 [42044,42052]" dest="identifier: reserve1 [42044,42052]"/>
  <match src="identifier: updatePoolAccumulativeDividend [77195,77225]" dest="identifier: updatePoolAccumulativeDividend [76635,76665]"/>
  <match src="expression_statement [93074,93119]" dest="expression_statement [92722,92767]"/>
  <match src="function: function [2312,2320]" dest="function: function [2312,2320]"/>
  <match src="identifier: c [6243,6244]" dest="identifier: c [6243,6244]"/>
  <match src="call_expression [109527,109539]" dest="call_expression [109451,109463]"/>
  <match src="identifier: block [41411,41416]" dest="identifier: block [41411,41416]"/>
  <match src="identifier: x [32097,32098]" dest="identifier: x [32097,32098]"/>
  <match src="visibility [44494,44502]" dest="visibility [44496,44504]"/>
  <match src="identifier: massUpdatePools [87442,87457]" dest="identifier: massUpdatePools [88603,88618]"/>
  <match src="address: address [59256,59263]" dest="address: address [59258,59265]"/>
  <match src="identifier: UserInfo [82479,82487]" dest="identifier: UserInfo [83317,83325]"/>
  <match src="type_name [101298,101305]" dest="type_name [101768,101775]"/>
  <match src="): ) [27641,27642]" dest="): ) [27641,27642]"/>
  <match src="type_name [65657,65666]" dest="type_name [65667,65676]"/>
  <match src=",: , [62673,62674]" dest=",: , [62675,62676]"/>
  <match src="visibility [22236,22244]" dest="visibility [22236,22244]"/>
  <match src="(: ( [93107,93108]" dest="(: ( [92755,92756]"/>
  <match src="type_name [62187,62194]" dest="type_name [62189,62196]"/>
  <match src=",: , [77279,77280]" dest=",: , [76719,76720]"/>
  <match src="payable: payable [14035,14042]" dest="payable: payable [14035,14042]"/>
  <match src="&gt;: &gt; [104228,104229]" dest="&gt;: &gt; [104152,104153]"/>
  <match src="call_expression [79278,79317]" dest="call_expression [79433,79472]"/>
  <match src="identifier: token0 [104648,104654]" dest="identifier: token0 [104572,104578]"/>
  <match src=",: , [39099,39100]" dest=",: , [39099,39100]"/>
  <match src="member_expression [38200,38207]" dest="member_expression [38200,38207]"/>
  <match src="identifier: _pairInfo [106106,106115]" dest="identifier: _pairInfo [106030,106039]"/>
  <match src="=: = [100966,100967]" dest="=: = [101124,101125]"/>
  <match src="identifier: FixedPoint [32370,32380]" dest="identifier: FixedPoint [32370,32380]"/>
  <match src="identifier: _x [36492,36494]" dest="identifier: _x [36492,36494]"/>
  <match src="public: public [66311,66317]" dest="public: public [66331,66337]"/>
  <match src="uint256: uint256 [87282,87289]" dest="uint256: uint256 [88443,88450]"/>
  <match src="&quot;: &quot; [9500,9501]" dest="&quot;: &quot; [9500,9501]"/>
  <match src="type_cast_expression [36324,36335]" dest="type_cast_expression [36324,36335]"/>
  <match src="number_literal: 1 [79224,79225]" dest="number_literal: 1 [79379,79380]"/>
  <match src="identifier: uq112x112 [35808,35817]" dest="identifier: uq112x112 [35808,35817]"/>
  <match src="binary_expression [42132,42168]" dest="binary_expression [42132,42168]"/>
  <match src="primitive_type [15241,15246]" dest="primitive_type [15241,15246]"/>
  <match src="new_expression [95629,95642]" dest="new_expression [94777,94790]"/>
  <match src="uint256: uint256 [10901,10908]" dest="uint256: uint256 [10901,10908]"/>
  <match src="identifier: amount [89551,89557]" dest="identifier: amount [90793,90799]"/>
  <match src="=: = [97286,97287]" dest="=: = [96051,96052]"/>
  <match src="primitive_type [35741,35748]" dest="primitive_type [35741,35748]"/>
  <match src="): ) [2049,2050]" dest="): ) [2049,2050]"/>
  <match src="type_name [102375,102382]" dest="type_name [102234,102241]"/>
  <match src="event: event [4091,4096]" dest="event: event [4091,4096]"/>
  <match src="is: is [1098,1100]" dest="is: is [1098,1100]"/>
  <match src="identifier: RemoveFromBlacklist [73672,73691]" dest="identifier: RemoveFromBlacklist [73437,73456]"/>
  <match src="identifier: target [16292,16298]" dest="identifier: target [16292,16298]"/>
  <match src="variable_declaration_statement [79250,79425]" dest="variable_declaration_statement [79405,79580]"/>
  <match src="parameter [92852,92881]" dest="parameter [92500,92529]"/>
  <match src="call_expression [98214,98253]" dest="call_expression [96979,97018]"/>
  <match src="virtual: virtual [94113,94120]" dest="virtual: virtual [93759,93766]"/>
  <match src="identifier: result [37113,37119]" dest="identifier: result [37113,37119]"/>
  <match src="call_argument [35172,35182]" dest="call_argument [35172,35182]"/>
  <match src="expression_statement [29069,29080]" dest="expression_statement [29069,29080]"/>
  <match src="=: = [95021,95022]" dest="=: = [81124,81125]"/>
  <match src="=: = [101518,101519]" dest="=: = [101253,101254]"/>
  <match src="): ) [106297,106298]" dest="): ) [106221,106222]"/>
  <match src="uint112: uint112 [34756,34763]" dest="uint112: uint112 [34756,34763]"/>
  <match src="): ) [79316,79317]" dest="): ) [79471,79472]"/>
  <match src="(: ( [21808,21809]" dest="(: ( [21808,21809]"/>
  <match src="expression_statement [28150,28158]" dest="expression_statement [28150,28158]"/>
  <match src="expression_statement [85701,85771]" dest="expression_statement [87001,87071]"/>
  <match src="address: address [61747,61754]" dest="address: address [61749,61756]"/>
  <match src="type_name [62773,62780]" dest="type_name [62775,62782]"/>
  <match src="call_argument [83643,83656]" dest="call_argument [85387,85400]"/>
  <match src="type_name [42853,42862]" dest="type_name [42853,42862]"/>
  <match src="unary_expression [87824,87847]" dest="unary_expression [88985,89008]"/>
  <match src="): ) [106690,106691]" dest="): ) [106614,106615]"/>
  <match src="): ) [6954,6955]" dest="): ) [6954,6955]"/>
  <match src="): ) [44156,44157]" dest="): ) [44158,44159]"/>
  <match src="visibility [45898,45906]" dest="visibility [45900,45908]"/>
  <match src="=: = [94517,94518]" dest="=: = [94163,94164]"/>
  <match src="): ) [16853,16854]" dest="): ) [16853,16854]"/>
  <match src="identifier: sub [107141,107144]" dest="identifier: sub [107065,107068]"/>
  <match src="identifier: success [14260,14267]" dest="identifier: success [14260,14267]"/>
  <match src="address: address [104547,104554]" dest="address: address [104471,104478]"/>
  <match src="): ) [39430,39431]" dest="): ) [39430,39431]"/>
  <match src="variable_declaration_statement [85903,85990]" dest="variable_declaration_statement [97799,97891]"/>
  <match src="-: - [27684,27685]" dest="-: - [27684,27685]"/>
  <match src="primitive_type [7730,7737]" dest="primitive_type [7730,7737]"/>
  <match src="primitive_type [85213,85220]" dest="primitive_type [86513,86520]"/>
  <match src="identifier: amount [14296,14302]" dest="identifier: amount [14296,14302]"/>
  <match src="(: ( [25795,25796]" dest="(: ( [25795,25796]"/>
  <match src="member_expression [84470,84480]" dest="member_expression [85005,85015]"/>
  <match src=".: . [41416,41417]" dest=".: . [41416,41417]"/>
  <match src="if: if [76317,76319]" dest="if: if [75833,75835]"/>
  <match src="type_name [88704,88713]" dest="type_name [89552,89561]"/>
  <match src="type_name [21270,21277]" dest="type_name [21270,21277]"/>
  <match src="call_argument [19070,19074]" dest="call_argument [19070,19074]"/>
  <match src="if: if [29224,29226]" dest="if: if [29224,29226]"/>
  <match src="visibility [69318,69326]" dest="visibility [69029,69037]"/>
  <match src="identifier: InvitationInfo [67719,67733]" dest="identifier: InvitationInfo [67933,67947]"/>
  <match src="string [72092,72105]" dest="string [71645,71658]"/>
  <match src="uint256: uint256 [3459,3466]" dest="uint256: uint256 [3459,3466]"/>
  <match src="function_definition [20761,20966]" dest="function_definition [20761,20966]"/>
  <match src="solidity_version: 0.8.0 [11960,11965]" dest="solidity_version: 0.8.0 [11960,11965]"/>
  <match src="uint256: uint256 [93320,93327]" dest="uint256: uint256 [92968,92975]"/>
  <match src="user_defined_type [73775,73783]" dest="user_defined_type [73571,73579]"/>
  <match src="return: return [77532,77538]" dest="return: return [76972,76978]"/>
  <match src="(: ( [100108,100109]" dest="(: ( [99589,99590]"/>
  <match src="variable_declaration [85843,85870]" dest="variable_declaration [87143,87170]"/>
  <match src="number_literal: 0 [19470,19471]" dest="number_literal: 0 [19470,19471]"/>
  <match src=",: , [35752,35753]" dest=",: , [35752,35753]"/>
  <match src="identifier: require [59515,59522]" dest="identifier: require [59517,59524]"/>
  <match src="call_expression [107982,108081]" dest="call_expression [107906,108005]"/>
  <match src="&gt;=: &gt;= [29577,29579]" dest="&gt;=: &gt;= [29577,29579]"/>
  <match src="type_name [43787,43794]" dest="type_name [43787,43794]"/>
  <match src="state_variable_declaration [43787,43827]" dest="state_variable_declaration [43787,43827]"/>
  <match src="visibility [49774,49780]" dest="visibility [49776,49782]"/>
  <match src="number_literal: 0 [90047,90048]" dest="number_literal: 0 [90348,90349]"/>
  <match src="{: { [58793,58794]" dest="{: { [58795,58796]"/>
  <match src="identifier: b [5723,5724]" dest="identifier: b [5723,5724]"/>
  <match src="primitive_type [32744,32751]" dest="primitive_type [32744,32751]"/>
  <match src="bool: bool [16999,17003]" dest="bool: bool [16999,17003]"/>
  <match src="member_expression [98214,98223]" dest="member_expression [96979,96988]"/>
  <match src="variable_declaration_statement [74169,74183]" dest="variable_declaration_statement [73900,73914]"/>
  <match src="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * CAUTION: This function is deprecated because it requires allocating memory for the error      * message unnecessarily. For custom revert reasons use {trySub}.      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [9566,10031]" dest="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * CAUTION: This function is deprecated because it requires allocating memory for the error      * message unnecessarily. For custom revert reasons use {trySub}.      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [9566,10031]"/>
  <match src="identifier: r [27702,27703]" dest="identifier: r [27702,27703]"/>
  <match src=",: , [76231,76232]" dest=",: , [75747,75748]"/>
  <match src="assignment_expression [93232,93271]" dest="assignment_expression [92880,92919]"/>
  <match src="+: + [7302,7303]" dest="+: + [7302,7303]"/>
  <match src="(: ( [78337,78338]" dest="(: ( [77849,77850]"/>
  <match src="binary_expression [35595,35614]" dest="binary_expression [35595,35614]"/>
  <match src="uint256: uint256 [72117,72124]" dest="uint256: uint256 [71751,71758]"/>
  <match src="block_statement [109296,109350]" dest="block_statement [109220,109274]"/>
  <match src="): ) [39690,39691]" dest="): ) [39690,39691]"/>
  <match src="): ) [19253,19254]" dest="): ) [19253,19254]"/>
  <match src="': ' [30316,30317]" dest="': ' [30316,30317]"/>
  <match src="&quot;: &quot; [47482,47483]" dest="&quot;: &quot; [47484,47485]"/>
  <match src="function: function [26401,26409]" dest="function: function [26401,26409]"/>
  <match src="parameter [38839,38844]" dest="parameter [38839,38844]"/>
  <match src="[: [ [73505,73506]" dest="[: [ [73270,73271]"/>
  <match src="}: } [101689,101690]" dest="}: } [102016,102017]"/>
  <match src="function_definition [78131,78945]" dest="function_definition [77264,78734]"/>
  <match src="identifier: poolTotalWeight [101520,101535]" dest="identifier: poolTotalWeight [101255,101270]"/>
  <match src="': ' [36337,36338]" dest="': ' [36337,36338]"/>
  <match src="identifier: userInfo [99558,99566]" dest="identifier: userInfo [97648,97656]"/>
  <match src="binary_expression [38345,38364]" dest="binary_expression [38345,38364]"/>
  <match src="identifier: data [19070,19074]" dest="identifier: data [19070,19074]"/>
  <match src="): ) [34453,34454]" dest="): ) [34453,34454]"/>
  <match src="solidity_version_comparison_operator [1680,1683]" dest="solidity_version_comparison_operator [1680,1683]"/>
  <match src="): ) [11010,11011]" dest="): ) [11010,11011]"/>
  <match src="new_expression [93197,93210]" dest="new_expression [92845,92858]"/>
  <match src="(: ( [33111,33112]" dest="(: ( [33111,33112]"/>
  <match src="return: return [8179,8185]" dest="return: return [8179,8185]"/>
  <match src="primitive_type [66635,66642]" dest="primitive_type [66888,66895]"/>
  <match src="=: = [100465,100466]" dest="=: = [99808,99809]"/>
  <match src="identifier: userDividendWeight [47034,47052]" dest="identifier: userDividendWeight [46421,46439]"/>
  <match src="member_expression [106703,106732]" dest="member_expression [106627,106656]"/>
  <match src="binary_expression [83824,83835]" dest="binary_expression [84248,84259]"/>
  <match src="expression_statement [108408,108448]" dest="expression_statement [108332,108372]"/>
  <match src="expression_statement [95013,95035]" dest="expression_statement [81108,81138]"/>
  <match src="identifier: userModifiedWeight [89235,89253]" dest="identifier: userModifiedWeight [90160,90178]"/>
  <match src="comment: // File: @uniswap/lib/contracts/libraries/Babylonian.sol [28300,28356]" dest="comment: // File: @uniswap/lib/contracts/libraries/Babylonian.sol [28300,28356]"/>
  <match src="identifier: length [82171,82177]" dest="identifier: length [83009,83015]"/>
  <match src="type_alias [63053,63061]" dest="type_alias [63055,63063]"/>
  <match src="identifier: startIndex [93839,93849]" dest="identifier: startIndex [93485,93495]"/>
  <match src="]: ] [61811,61812]" dest="]: ] [61813,61814]"/>
  <match src="member_expression [107145,107176]" dest="member_expression [107069,107100]"/>
  <match src="identifier: sender [82522,82528]" dest="identifier: sender [83360,83366]"/>
  <match src="identifier: pool [78837,78841]" dest="identifier: pool [77553,77557]"/>
  <match src="identifier: currentCumulativePrices [41560,41583]" dest="identifier: currentCumulativePrices [41560,41583]"/>
  <match src="if: if [31711,31713]" dest="if: if [31711,31713]"/>
  <match src="type_name [19023,19028]" dest="type_name [19023,19028]"/>
  <match src="return_type_definition [16739,16761]" dest="return_type_definition [16739,16761]"/>
  <match src="pure: pure [5626,5630]" dest="pure: pure [5626,5630]"/>
  <match src="identifier: self [33653,33657]" dest="identifier: self [33653,33657]"/>
  <match src="primitive_type [61488,61495]" dest="primitive_type [61490,61497]"/>
  <match src=".: . [87148,87149]" dest=".: . [88305,88306]"/>
  <match src="if: if [103241,103243]" dest="if: if [103165,103167]"/>
  <match src="call_argument [56483,56493]" dest="call_argument [56485,56495]"/>
  <match src="if: if [106103,106105]" dest="if: if [106027,106029]"/>
  <match src=",: , [5313,5314]" dest=",: , [5313,5314]"/>
  <match src="internal: internal [41355,41363]" dest="internal: internal [41355,41363]"/>
  <match src="call_argument [84339,84343]" dest="call_argument [84874,84878]"/>
  <match src="binary_expression [88789,88802]" dest="binary_expression [89637,89650]"/>
  <match src="expression_statement [27727,27742]" dest="expression_statement [27727,27742]"/>
  <match src="=: = [98711,98712]" dest="=: = [98921,98922]"/>
  <match src="expression_statement [42508,42591]" dest="expression_statement [42508,42591]"/>
  <match src="}: } [64167,64168]" dest="}: } [64169,64170]"/>
  <match src="call_expression [46834,46865]" dest="call_expression [47076,47107]"/>
  <match src="=: = [104278,104279]" dest="=: = [104202,104203]"/>
  <match src="assignment_expression [97278,97307]" dest="assignment_expression [96043,96072]"/>
  <match src="): ) [21649,21650]" dest="): ) [21649,21650]"/>
  <match src="identifier: value [39106,39111]" dest="identifier: value [39106,39111]"/>
  <match src="=: = [65769,65770]" dest="=: = [65779,65780]"/>
  <match src="string_literal [58762,58775]" dest="string_literal [58764,58777]"/>
  <match src="function_definition [10877,11042]" dest="function_definition [10877,11042]"/>
  <match src="uint256: uint256 [74064,74071]" dest="uint256: uint256 [73794,73801]"/>
  <match src=",: , [34018,34019]" dest=",: , [34018,34019]"/>
  <match src="string_literal [57276,57314]" dest="string_literal [57278,57316]"/>
  <match src="comment: /**      * @dev See {IERC20-transferFrom}.      *      * Emits an {Approval} event indicating the updated allowance. This is not      * required by the EIP. See the note at the beginning of {ERC20}.      *      * Requirements:      *      * - `sender` and `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      * - the caller must have allowance for ``sender``'s tokens of at least      * `amount`.      */ [52081,52549]" dest="comment: /**      * @dev See {IERC20-transferFrom}.      *      * Emits an {Approval} event indicating the updated allowance. This is not      * required by the EIP. See the note at the beginning of {ERC20}.      *      * Requirements:      *      * - `sender` and `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      * - the caller must have allowance for ``sender``'s tokens of at least      * `amount`.      */ [52083,52551]"/>
  <match src="number_literal: 0 [90863,90864]" dest="number_literal: 0 [91888,91889]"/>
  <match src="event_paramater [66948,66961]" dest="event_paramater [67201,67214]"/>
  <match src="identifier: RESOLUTION [34942,34952]" dest="identifier: RESOLUTION [34942,34952]"/>
  <match src="(: ( [104632,104633]" dest="(: ( [104556,104557]"/>
  <match src="state_variable_declaration [64861,64926]" dest="state_variable_declaration [64869,64936]"/>
  <match src="identifier: calculatePendingSHARD [88855,88876]" dest="identifier: calculatePendingSHARD [89703,89724]"/>
  <match src="member_expression [90436,90464]" dest="member_expression [91487,91503]"/>
  <match src="number_literal: 1 [29803,29804]" dest="number_literal: 1 [29803,29804]"/>
  <match src="identifier: lpTokenSwap [97208,97219]" dest="identifier: lpTokenSwap [95973,95984]"/>
  <match src="identifier: devDividendWeight [43576,43593]" dest="identifier: devDividendWeight [43576,43593]"/>
  <match src="function_body [5324,5426]" dest="function_body [5324,5426]"/>
  <match src="type_name [82540,82547]" dest="type_name [83378,83385]"/>
  <match src="member_expression [34011,34018]" dest="member_expression [34011,34018]"/>
  <match src="(: ( [106441,106442]" dest="(: ( [106365,106366]"/>
  <match src="number_literal: 1 [31727,31728]" dest="number_literal: 1 [31727,31728]"/>
  <match src="type_name [65657,65664]" dest="type_name [65667,65674]"/>
  <match src="): ) [29798,29799]" dest="): ) [29798,29799]"/>
  <match src="primitive_type [63620,63627]" dest="primitive_type [63622,63629]"/>
  <match src="member_expression [97955,97972]" dest="member_expression [96720,96737]"/>
  <match src="=: = [37049,37050]" dest="=: = [37049,37050]"/>
  <match src="parameter [18776,18793]" dest="parameter [18776,18793]"/>
  <match src="primitive_type [73134,73141]" dest="primitive_type [72899,72906]"/>
  <match src="identifier: senderInfo [100905,100915]" dest="identifier: senderInfo [100968,100978]"/>
  <match src="internal: internal [37959,37967]" dest="internal: internal [37959,37967]"/>
  <match src="identifier: this [96161,96165]" dest="identifier: this [95471,95475]"/>
  <match src="yul_path [19774,19789]" dest="yul_path [19774,19789]"/>
  <match src="uint256: uint256 [80506,80513]" dest="uint256: uint256 [81191,81198]"/>
  <match src="external: external [40658,40666]" dest="external: external [40658,40666]"/>
  <match src="(: ( [71096,71097]" dest="(: ( [70807,70808]"/>
  <match src="identifier: _pool [97202,97207]" dest="identifier: _pool [95967,95972]"/>
  <match src="function_body [19290,19903]" dest="function_body [19290,19903]"/>
  <match src="-: - [36213,36214]" dest="-: - [36213,36214]"/>
  <match src="primitive_type [39917,39921]" dest="primitive_type [39917,39921]"/>
  <match src="type_name [96120,96127]" dest="type_name [95430,95437]"/>
  <match src="visibility [36797,36805]" dest="visibility [36797,36805]"/>
  <match src="if: if [109285,109287]" dest="if: if [109209,109211]"/>
  <match src="parameter [69213,69231]" dest="parameter [68924,68942]"/>
  <match src="block_statement [106132,106310]" dest="block_statement [106056,106234]"/>
  <match src="type_name [63723,63730]" dest="type_name [63725,63732]"/>
  <match src="member_expression [42405,42447]" dest="member_expression [42405,42447]"/>
  <match src="tuple_expression [89497,89509]" dest="tuple_expression [90739,90751]"/>
  <match src="identifier: require [75587,75594]" dest="identifier: require [75103,75110]"/>
  <match src="binary_expression [76529,76546]" dest="binary_expression [76045,76062]"/>
  <match src="): ) [38750,38751]" dest="): ) [38750,38751]"/>
  <match src="member_expression [83555,83565]" dest="member_expression [84420,84430]"/>
  <match src="]: ] [80224,80225]" dest="]: ] [80844,80845]"/>
  <match src="(: ( [81172,81173]" dest="(: ( [81859,81860]"/>
  <match src="uint112: uint112 [33466,33473]" dest="uint112: uint112 [33466,33473]"/>
  <match src="new: new [95629,95632]" dest="new: new [94777,94780]"/>
  <match src="): ) [82777,82778]" dest="): ) [83615,83616]"/>
  <match src="call_argument [54125,54137]" dest="call_argument [54127,54139]"/>
  <match src="type_name [5606,5613]" dest="type_name [5606,5613]"/>
  <match src="type_name [64332,64339]" dest="type_name [64334,64341]"/>
  <match src="}: } [104361,104362]" dest="}: } [104285,104286]"/>
  <match src="variable_declaration_statement [103620,103634]" dest="variable_declaration_statement [103544,103558]"/>
  <match src="identifier: reserve1 [40012,40020]" dest="identifier: reserve1 [40012,40020]"/>
  <match src="binary_expression [30802,30811]" dest="binary_expression [30802,30811]"/>
  <match src="primitive_type [88704,88711]" dest="primitive_type [89552,89559]"/>
  <match src="*=: *= [27779,27781]" dest="*=: *= [27779,27781]"/>
  <match src="identifier: isUsed [87037,87043]" dest="identifier: isUsed [88194,88200]"/>
  <match src="identifier: originWeight [102496,102508]" dest="identifier: originWeight [102420,102432]"/>
  <match src="identifier: require [44208,44215]" dest="identifier: require [44210,44217]"/>
  <match src="identifier: account [56320,56327]" dest="identifier: account [56322,56329]"/>
  <match src="identifier: allowResign [973,984]" dest="identifier: allowResign [973,984]"/>
  <match src="identifier: poolRankIndex [72265,72278]" dest="identifier: poolRankIndex [72143,72156]"/>
  <match src="if: if [29124,29126]" dest="if: if [29124,29126]"/>
  <match src="number_literal: 0x10000000000000000 [29134,29153]" dest="number_literal: 0x10000000000000000 [29134,29153]"/>
  <match src="call_expression [9485,9527]" dest="call_expression [9485,9527]"/>
  <match src="identifier: contractFeeRateNumerator [46404,46428]" dest="identifier: contractFeeRateNumerator [46646,46670]"/>
  <match src="): ) [62875,62876]" dest="): ) [62877,62878]"/>
  <match src="uint256: uint256 [63316,63323]" dest="uint256: uint256 [63318,63325]"/>
  <match src="identifier: y [33976,33977]" dest="identifier: y [33976,33977]"/>
  <match src="type_name [59467,59474]" dest="type_name [59469,59476]"/>
  <match src="identifier: denominator [89959,89970]" dest="identifier: toBeDividend [91178,91190]"/>
  <match src="else: else [98170,98174]" dest="else: else [96935,96939]"/>
  <match src="identifier: lastDividendHeight [78343,78361]" dest="identifier: lastDividendHeight [77855,77873]"/>
  <match src="identifier: y [28105,28106]" dest="identifier: y [28105,28106]"/>
  <match src="type_name [85637,85644]" dest="type_name [86937,86944]"/>
  <match src="pure: pure [10109,10113]" dest="pure: pure [10109,10113]"/>
  <match src="): ) [98240,98241]" dest="): ) [97005,97006]"/>
  <match src="address: address [39161,39168]" dest="address: address [39161,39168]"/>
  <match src="bytes: bytes [18382,18387]" dest="bytes: bytes [18382,18387]"/>
  <match src="primitive_type [59642,59649]" dest="primitive_type [59644,59651]"/>
  <match src="call_argument [38103,38110]" dest="call_argument [38103,38110]"/>
  <match src="identifier: _modifiedWeight [95664,95679]" dest="identifier: _modifiedWeight [94812,94827]"/>
  <match src="event_paramater [39891,39906]" dest="event_paramater [39891,39906]"/>
  <match src="parameter [47239,47251]" dest="parameter [47241,47253]"/>
  <match src="&gt;&gt;: &gt;&gt; [29769,29771]" dest="&gt;&gt;: &gt;&gt; [29769,29771]"/>
  <match src="member_expression [103967,104011]" dest="member_expression [103891,103935]"/>
  <match src="if_statement [28773,28794]" dest="if_statement [28773,28794]"/>
  <match src="string [31313,31349]" dest="string [31313,31349]"/>
  <match src="identifier: currentRankCount [74132,74148]" dest="identifier: currentRankCount [73863,73879]"/>
  <match src="parameter [45751,45765]" dest="parameter [45753,45767]"/>
  <match src="return_type_definition [12702,12716]" dest="return_type_definition [12702,12716]"/>
  <match src="]: ] [55104,55105]" dest="]: ] [55106,55107]"/>
  <match src="type_name [96083,96090]" dest="type_name [95393,95400]"/>
  <match src="=: = [103630,103631]" dest="=: = [103554,103555]"/>
  <match src="uint256: uint256 [7268,7275]" dest="uint256: uint256 [7268,7275]"/>
  <match src="&gt;: &gt; [103281,103282]" dest="&gt;: &gt; [103205,103206]"/>
  <match src="): ) [36566,36567]" dest="): ) [36566,36567]"/>
  <match src="type_name [63395,63399]" dest="type_name [63397,63401]"/>
  <match src="identifier: d [27979,27980]" dest="identifier: d [27979,27980]"/>
  <match src="identifier: sender [52734,52740]" dest="identifier: sender [52736,52742]"/>
  <match src="{: { [76547,76548]" dest="{: { [76063,76064]"/>
  <match src="state_variable_declaration [43521,43555]" dest="state_variable_declaration [43521,43555]"/>
  <match src="uint144: uint144 [33682,33689]" dest="uint144: uint144 [33682,33689]"/>
  <match src="variable_declaration [34973,34992]" dest="variable_declaration [34973,34992]"/>
  <match src="{: { [5324,5325]" dest="{: { [5324,5325]"/>
  <match src="identifier: approve [39076,39083]" dest="identifier: approve [39076,39083]"/>
  <match src="assignment_expression [45818,45832]" dest="assignment_expression [45820,45834]"/>
  <match src="type_name [83194,83201]" dest="type_name [84011,84018]"/>
  <match src="assignment_expression [100625,100678]" dest="assignment_expression [100201,100258]"/>
  <match src="&quot;: &quot; [57357,57358]" dest="&quot;: &quot; [57359,57360]"/>
  <match src="visibility [44859,44867]" dest="visibility [44861,44869]"/>
  <match src="identifier: startIndex [93505,93515]" dest="identifier: startIndex [93153,93163]"/>
  <match src="if_statement [67368,67509]" dest="if_statement [67615,67756]"/>
  <match src="call_expression [42533,42572]" dest="call_expression [42533,42572]"/>
  <match src="identifier: r [27727,27728]" dest="identifier: r [27727,27728]"/>
  <match src="(: ( [40110,40111]" dest="(: ( [40110,40111]"/>
  <match src="identifier: user [82557,82561]" dest="identifier: user [83395,83399]"/>
  <match src="return_statement [13050,13066]" dest="return_statement [13050,13066]"/>
  <match src="&quot;: &quot; [16313,16314]" dest="&quot;: &quot; [16313,16314]"/>
  <match src="): ) [40624,40625]" dest="): ) [40624,40625]"/>
  <match src="augmented_assignment_expression [30828,30835]" dest="augmented_assignment_expression [30828,30835]"/>
  <match src="identifier: oracleWeight [71347,71359]" dest="identifier: oracleWeight [71058,71070]"/>
  <match src="function: function [38674,38682]" dest="function: function [38674,38682]"/>
  <match src="identifier: sendValue [14017,14026]" dest="identifier: sendValue [14017,14026]"/>
  <match src="parameter [71803,71815]" dest="parameter [71514,71526]"/>
  <match src="uint224: uint224 [35079,35086]" dest="uint224: uint224 [35079,35086]"/>
  <match src="assignment_expression [98676,98717]" dest="assignment_expression [98886,98927]"/>
  <match src="parameter [20801,20813]" dest="parameter [20801,20813]"/>
  <match src="member_expression [92387,92404]" dest="member_expression [87299,87316]"/>
  <match src="): ) [87337,87338]" dest="): ) [88498,88499]"/>
  <match src="member_expression [34669,34676]" dest="member_expression [34669,34676]"/>
  <match src="block_statement [97688,97770]" dest="block_statement [96453,96535]"/>
  <match src="{: { [87315,87316]" dest="{: { [88476,88477]"/>
  <match src="type_name [22204,22211]" dest="type_name [22204,22211]"/>
  <match src="primitive_type [25639,25646]" dest="primitive_type [25639,25646]"/>
  <match src="type_name [43833,43840]" dest="type_name [43833,43840]"/>
  <match src="{: { [32082,32083]" dest="{: { [32082,32083]"/>
  <match src="identifier: decimals_ [57861,57870]" dest="identifier: decimals_ [57863,57872]"/>
  <match src="type_name [64861,64909]" dest="type_name [64869,64917]"/>
  <match src="&amp;&amp;: &amp;&amp; [100812,100814]" dest="&amp;&amp;: &amp;&amp; [100798,100800]"/>
  <match src="identifier: _pid [80335,80339]" dest="identifier: _pid [80955,80959]"/>
  <match src="call_argument [81371,81375]" dest="call_argument [82060,82064]"/>
  <match src="call_expression [79196,79226]" dest="call_expression [79351,79381]"/>
  <match src="member_expression [47342,47352]" dest="member_expression [47344,47354]"/>
  <match src="state_mutability [11777,11781]" dest="state_mutability [11777,11781]"/>
  <match src="return_type_definition [94130,94172]" dest="return_type_definition [93776,93818]"/>
  <match src="): ) [71844,71845]" dest="): ) [71555,71556]"/>
  <match src="uint256: uint256 [28032,28039]" dest="uint256: uint256 [28032,28039]"/>
  <match src="call_expression [37191,37217]" dest="call_expression [37191,37217]"/>
  <match src="yul_evm_builtin [19707,19712]" dest="yul_evm_builtin [19707,19712]"/>
  <match src="type_name [78204,78211]" dest="type_name [77337,77344]"/>
  <match src="): ) [51458,51459]" dest="): ) [51460,51461]"/>
  <match src="return: return [9538,9544]" dest="return: return [9538,9544]"/>
  <match src="{: { [88809,88810]" dest="{: { [89657,89658]"/>
  <match src="{: { [61373,61374]" dest="{: { [61375,61376]"/>
  <match src=".: . [80722,80723]" dest=".: . [81409,81410]"/>
  <match src="block_statement [30565,30622]" dest="block_statement [30565,30622]"/>
  <match src="identifier: add [103782,103785]" dest="identifier: add [103706,103709]"/>
  <match src="block_statement [76341,76645]" dest="block_statement [75857,76161]"/>
  <match src="type_name [10072,10078]" dest="type_name [10072,10078]"/>
  <match src="{: { [47423,47424]" dest="{: { [47425,47426]"/>
  <match src="identifier: sum [35581,35584]" dest="identifier: sum [35581,35584]"/>
  <match src="assignment_expression [70385,70410]" dest="assignment_expression [70096,70121]"/>
  <match src="parameter [62794,62808]" dest="parameter [62796,62810]"/>
  <match src="identifier: endBlock [63376,63384]" dest="identifier: endBlock [63378,63386]"/>
  <match src="visibility [43569,43575]" dest="visibility [43569,43575]"/>
  <match src="uint224: uint224 [35220,35227]" dest="uint224: uint224 [35220,35227]"/>
  <match src="identifier: tokenAddress [66971,66983]" dest="identifier: tokenAddress [67224,67236]"/>
  <match src="(: ( [88396,88397]" dest="(: ( [89244,89245]"/>
  <match src="comment: /// @notice The number of checkpoints for each account [59104,59158]" dest="comment: /// @notice The number of checkpoints for each account [59106,59160]"/>
  <match src="primitive_type [64264,64268]" dest="primitive_type [64266,64270]"/>
  <match src="function: function [18336,18344]" dest="function: function [18336,18344]"/>
  <match src=":: : [71283,71284]" dest=":: : [70994,70995]"/>
  <match src="identifier: require [34357,34364]" dest="identifier: require [34357,34364]"/>
  <match src="comment: /**      * @dev Returns the symbol of the token, usually a shorter version of the      * name.      */ [49857,49962]" dest="comment: /**      * @dev Returns the symbol of the token, usually a shorter version of the      * name.      */ [49859,49964]"/>
  <match src="if: if [36926,36928]" dest="if: if [36926,36928]"/>
  <match src="identifier: pool [83318,83322]" dest="identifier: pool [84303,84307]"/>
  <match src="(: ( [82436,82437]" dest="(: ( [83274,83275]"/>
  <match src="): ) [44898,44899]" dest="): ) [44900,44901]"/>
  <match src="identifier: uq144x112 [33915,33924]" dest="identifier: uq144x112 [33915,33924]"/>
  <match src="string [104836,104853]" dest="string [104760,104777]"/>
  <match src="type_name [46155,46159]" dest="type_name [46157,46161]"/>
  <match src="state_variable_declaration [43470,43496]" dest="state_variable_declaration [43470,43496]"/>
  <match src="primitive_type [34900,34907]" dest="primitive_type [34900,34907]"/>
  <match src="member_expression [46834,46860]" dest="member_expression [47076,47102]"/>
  <match src=",: , [36872,36873]" dest=",: , [36872,36873]"/>
  <match src="): ) [31941,31942]" dest="): ) [31941,31942]"/>
  <match src="solidity_version: 0.8.0 [47580,47585]" dest="solidity_version: 0.8.0 [47582,47587]"/>
  <match src="identifier: tokenToEthPairInfo [63848,63866]" dest="identifier: tokenToEthPairInfo [63850,63868]"/>
  <match src="comment: // returns the 0 indexed position of the least significant bit of the input x [30993,31070]" dest="comment: // returns the 0 indexed position of the least significant bit of the input x [30993,31070]"/>
  <match src="identifier: invitees [99374,99382]" dest="identifier: invitees [99526,99534]"/>
  <match src="uint256: uint256 [85239,85246]" dest="uint256: uint256 [86539,86546]"/>
  <match src="expression_statement [81982,82040]" dest="expression_statement [82814,82878]"/>
  <match src="comment: // s.t. x &gt;= 2**msb and x &lt; 2**(msb+1) [30141,30179]" dest="comment: // s.t. x &gt;= 2**msb and x &lt; 2**(msb+1) [30141,30179]"/>
  <match src="type_cast_expression [67794,67807]" dest="type_cast_expression [68008,68021]"/>
  <match src="): ) [80627,80628]" dest="): ) [81314,81315]"/>
  <match src="primitive_type [102880,102887]" dest="primitive_type [102804,102811]"/>
  <match src="identifier: _originWeight [95396,95409]" dest="identifier: _originWeight [94544,94557]"/>
  <match src="solidity: solidity [24705,24713]" dest="solidity: solidity [24705,24713]"/>
  <match src="type_name [75892,75896]" dest="type_name [75408,75412]"/>
  <match src="identifier: nonces [39447,39453]" dest="identifier: nonces [39447,39453]"/>
  <match src="identifier: pow2 [27578,27582]" dest="identifier: pow2 [27578,27582]"/>
  <match src="identifier: burn [40641,40645]" dest="identifier: burn [40641,40645]"/>
  <match src="external: external [39335,39343]" dest="external: external [39335,39343]"/>
  <match src="type_name [70666,70673]" dest="type_name [70377,70384]"/>
  <match src="[: [ [55222,55223]" dest="[: [ [55224,55225]"/>
  <match src="address: address [67076,67083]" dest="address: address [67329,67336]"/>
  <match src=".: . [55829,55830]" dest=".: . [55831,55832]"/>
  <match src="type_name [90743,90750]" dest="type_name [91768,91775]"/>
  <match src="&gt;=: &gt;= [29494,29496]" dest="&gt;=: &gt;= [29494,29496]"/>
  <match src="&amp;&amp;: &amp;&amp; [44255,44257]" dest="&amp;&amp;: &amp;&amp; [44257,44259]"/>
  <match src="identifier: block [108235,108240]" dest="identifier: block [108159,108164]"/>
  <match src="address: address [42738,42745]" dest="address: address [42738,42745]"/>
  <match src="identifier: userModifiedWeight [89342,89360]" dest="identifier: userModifiedWeight [90568,90586]"/>
  <match src="uint: uint [40676,40680]" dest="uint: uint [40676,40680]"/>
  <match src="binary_expression [29726,29742]" dest="binary_expression [29726,29742]"/>
  <match src="member_expression [61618,61629]" dest="member_expression [61620,61631]"/>
  <match src="(: ( [69953,69954]" dest="(: ( [69664,69665]"/>
  <match src="!=: != [37740,37742]" dest="!=: != [37740,37742]"/>
  <match src="call_expression [80541,80595]" dest="call_expression [81226,81280]"/>
  <match src="uint256: uint256 [6824,6831]" dest="uint256: uint256 [6824,6831]"/>
  <match src="expression_statement [80017,80081]" dest="expression_statement [80602,80666]"/>
  <match src="public: public [1422,1428]" dest="public: public [1422,1428]"/>
  <match src="function_definition [103076,104398]" dest="function_definition [103000,104322]"/>
  <match src="=: = [108233,108234]" dest="=: = [108157,108158]"/>
  <match src="): ) [36795,36796]" dest="): ) [36795,36796]"/>
  <match src="type_name [43521,43528]" dest="type_name [43521,43528]"/>
  <match src="expression_statement [41717,41758]" dest="expression_statement [41717,41758]"/>
  <match src=".: . [97903,97904]" dest=".: . [96668,96669]"/>
  <match src="type_name [58820,58844]" dest="type_name [58822,58846]"/>
  <match src="identifier: PoolInfo [100317,100325]" dest="identifier: PoolInfo [71880,71888]"/>
  <match src="return: return [103306,103312]" dest="return: return [103230,103236]"/>
  <match src="number_literal: 32 [31687,31689]" dest="number_literal: 32 [31687,31689]"/>
  <match src=".: . [107086,107087]" dest=".: . [107010,107011]"/>
  <match src="if: if [23411,23413]" dest="if: if [23411,23413]"/>
  <match src="identifier: fromNew [61608,61615]" dest="identifier: fromNew [61610,61617]"/>
  <match src="number_literal: 0 [6205,6206]" dest="number_literal: 0 [6205,6206]"/>
  <match src=".: . [106834,106835]" dest=".: . [106758,106759]"/>
  <match src="=: = [108182,108183]" dest="=: = [108106,108107]"/>
  <match src="): ) [29418,29419]" dest="): ) [29418,29419]"/>
  <match src="}: } [19823,19824]" dest="}: } [19823,19824]"/>
  <match src="identifier: spender [57426,57433]" dest="identifier: spender [57428,57435]"/>
  <match src="primitive_type [96153,96160]" dest="primitive_type [95463,95470]"/>
  <match src="variable_declaration_statement [78392,78654]" dest="variable_declaration_statement [77980,78234]"/>
  <match src="public: public [43176,43182]" dest="public: public [43176,43182]"/>
  <match src=".: . [46856,46857]" dest=".: . [47098,47099]"/>
  <match src="return_type_definition [40073,40087]" dest="return_type_definition [40073,40087]"/>
  <match src="{: { [69540,69541]" dest="{: { [69251,69252]"/>
  <match src=":: : [71399,71400]" dest=":: : [71110,71111]"/>
  <match src="identifier: data [1416,1420]" dest="identifier: data [1416,1420]"/>
  <match src="tuple_expression [89788,89801]" dest="tuple_expression [91030,91043]"/>
  <match src="primitive_type [72300,72307]" dest="primitive_type [74086,74093]"/>
  <match src="type_name [88965,88972]" dest="type_name [89813,89820]"/>
  <match src="address: address [20560,20567]" dest="address: address [20560,20567]"/>
  <match src="member_expression [98969,99001]" dest="member_expression [99154,99186]"/>
  <match src="call_expression [46391,46461]" dest="call_expression [46633,46703]"/>
  <match src="bytes32: bytes32 [39358,39365]" dest="bytes32: bytes32 [39358,39365]"/>
  <match src="return: return [7373,7379]" dest="return: return [7373,7379]"/>
  <match src="*: * [42449,42450]" dest="*: * [42449,42450]"/>
  <match src="call_argument [36399,36413]" dest="call_argument [36399,36413]"/>
  <match src="}: } [32611,32612]" dest="}: } [32611,32612]"/>
  <match src="(: ( [34323,34324]" dest="(: ( [34323,34324]"/>
  <match src="return_type_definition [46193,46278]" dest="return_type_definition [46195,46280]"/>
  <match src="identifier: target [18768,18774]" dest="identifier: target [18768,18774]"/>
  <match src="uint256: uint256 [103141,103148]" dest="uint256: uint256 [103065,103072]"/>
  <match src="number_literal: 1 [62619,62620]" dest="number_literal: 1 [62621,62622]"/>
  <match src="emit_statement [25613,25662]" dest="emit_statement [25613,25662]"/>
  <match src="identifier: lpTokenAmount [84231,84244]" dest="identifier: lpTokenAmount [84760,84773]"/>
  <match src="call_argument [35754,35787]" dest="call_argument [35754,35787]"/>
  <match src="call_argument [57484,57490]" dest="call_argument [57486,57492]"/>
  <match src="member_expression [107765,107785]" dest="member_expression [107689,107709]"/>
  <match src="return_type_definition [88494,88580]" dest="return_type_definition [89342,89428]"/>
  <match src="parameter [39423,39430]" dest="parameter [39423,39430]"/>
  <match src="uint256: uint256 [88951,88958]" dest="uint256: uint256 [89799,89806]"/>
  <match src="comment: /** @dev Creates `amount` tokens and assigns them to `account`, increasing      * the total supply.      *      * Emits a {Transfer} event with `from` set to the zero address.      *      * Requirements:      *      * - `to` cannot be the zero address.      */ [55312,55580]" dest="comment: /** @dev Creates `amount` tokens and assigns them to `account`, increasing      * the total supply.      *      * Emits a {Transfer} event with `from` set to the zero address.      *      * Requirements:      *      * - `to` cannot be the zero address.      */ [55314,55582]"/>
  <match src="bytes: bytes [23305,23310]" dest="bytes: bytes [23305,23310]"/>
  <match src="{: { [31735,31736]" dest="{: { [31735,31736]"/>
  <match src="view: view [24428,24432]" dest="view: view [24428,24432]"/>
  <match src="&gt;=: &gt;= [103883,103885]" dest="&gt;=: &gt;= [103807,103809]"/>
  <match src="call_expression [77901,77929]" dest="call_expression [77136,77167]"/>
  <match src="type_name [44830,44837]" dest="type_name [44832,44839]"/>
  <match src="/: / [34004,34005]" dest="/: / [34004,34005]"/>
  <match src="primitive_type [34973,34980]" dest="primitive_type [34973,34980]"/>
  <match src="): ) [70693,70694]" dest="): ) [70404,70405]"/>
  <match src="else: else [61089,61093]" dest="else: else [61091,61095]"/>
  <match src="function_body [76116,76880]" dest="function_body [75632,76396]"/>
  <match src="parameter [35997,36013]" dest="parameter [35997,36013]"/>
  <match src="primitive_type [76660,76667]" dest="primitive_type [76176,76183]"/>
  <match src="visibility [84593,84600]" dest="visibility [85724,85731]"/>
  <match src="identifier: _pids [95237,95242]" dest="identifier: _pids [94385,94390]"/>
  <match src="bool: bool [23570,23574]" dest="bool: bool [23570,23574]"/>
  <match src="identifier: OwnershipTransferred [26471,26491]" dest="identifier: OwnershipTransferred [26471,26491]"/>
  <match src="expression_statement [84875,84952]" dest="expression_statement [86006,86083]"/>
  <match src="member_expression [22096,22118]" dest="member_expression [22096,22118]"/>
  <match src="identifier: transfer [96221,96229]" dest="identifier: transfer [95531,95539]"/>
  <match src="): ) [45213,45214]" dest="): ) [45215,45216]"/>
  <match src="function_definition [15166,15339]" dest="function_definition [15166,15339]"/>
  <match src="=: = [47082,47083]" dest="=: = [46469,46470]"/>
  <match src="uint256: uint256 [103182,103189]" dest="uint256: uint256 [103106,103113]"/>
  <match src="parameter [82437,82449]" dest="parameter [83275,83287]"/>
  <match src="identifier: recipient [55223,55232]" dest="identifier: recipient [55225,55234]"/>
  <match src="identifier: _tokenAmountLimit [44635,44652]" dest="identifier: _tokenAmountLimit [44637,44654]"/>
  <match src="identifier: invitorRelationshipInfo [99350,99373]" dest="identifier: invitorRelationshipInfo [99502,99525]"/>
  <match src="identifier: poolPosition [73142,73154]" dest="identifier: poolPosition [72907,72919]"/>
  <match src="type_name [46019,46026]" dest="type_name [46021,46028]"/>
  <match src="(: ( [7222,7223]" dest="(: ( [7222,7223]"/>
  <match src="&gt;: &gt; [72087,72088]" dest="&gt;: &gt; [71640,71641]"/>
  <match src="&gt;=:  &gt;= [38471,38474]" dest="&gt;=:  &gt;= [38471,38474]"/>
  <match src="identifier: pool [73855,73859]" dest="identifier: pool [71976,71980]"/>
  <match src="parameter [104436,104463]" dest="parameter [104360,104387]"/>
  <match src="): ) [57217,57218]" dest="): ) [57219,57220]"/>
  <match src="=&gt;: =&gt; [48973,48975]" dest="=&gt;: =&gt; [48975,48977]"/>
  <match src="identifier: to [61741,61743]" dest="identifier: to [61743,61745]"/>
  <match src="state_variable_declaration [64554,64585]" dest="state_variable_declaration [64556,64589]"/>
  <match src="identifier: _x [34691,34693]" dest="identifier: _x [34691,34693]"/>
  <match src="if_statement [5363,5392]" dest="if_statement [5363,5392]"/>
  <match src="identifier: price [108176,108181]" dest="identifier: price [108100,108105]"/>
  <match src="type_name [49182,49187]" dest="type_name [49184,49189]"/>
  <match src="primitive_type [52577,52584]" dest="primitive_type [52579,52586]"/>
  <match src="memory: memory [49580,49586]" dest="memory: memory [49582,49588]"/>
  <match src="string_literal [44296,44311]" dest="string_literal [44298,44313]"/>
  <match src="identifier: _owner [25823,25829]" dest="identifier: _owner [25823,25829]"/>
  <match src="array_access [46600,46707]" dest="array_access [46842,46949]"/>
  <match src="number_literal: 0 [74046,74047]" dest="number_literal: 0 [73776,73777]"/>
  <match src="identifier: pool [93656,93660]" dest="identifier: pool [93304,93308]"/>
  <match src="&quot;: &quot; [72092,72093]" dest="&quot;: &quot; [71645,71646]"/>
  <match src="]: ] [76780,76781]" dest="]: ] [76296,76297]"/>
  <match src="(: ( [34075,34076]" dest="(: ( [34075,34076]"/>
  <match src="(: ( [64749,64750]" dest="(: ( [64755,64756]"/>
  <match src="binary_expression [35734,35752]" dest="binary_expression [35734,35752]"/>
  <match src="-: - [60789,60790]" dest="-: - [60791,60792]"/>
  <match src="identifier: mul [98220,98223]" dest="identifier: mul [96985,96988]"/>
  <match src="identifier: marketingFund [43107,43120]" dest="identifier: marketingFund [43107,43120]"/>
  <match src="identifier: sub [92934,92937]" dest="identifier: sub [92582,92585]"/>
  <match src="pragma_directive [42655,42678]" dest="pragma_directive [42655,42678]"/>
  <match src="call_expression [37646,37713]" dest="call_expression [37646,37713]"/>
  <match src="return: return [77091,77097]" dest="return: return [76607,76613]"/>
  <match src=",: , [68237,68238]" dest=",: , [68344,68345]"/>
  <match src="bytes: bytes [17771,17776]" dest="bytes: bytes [17771,17776]"/>
  <match src="=: = [100400,100401]" dest="=: = [99742,99743]"/>
  <match src="): ) [33657,33658]" dest="): ) [33657,33658]"/>
  <match src="return_type_definition [41628,41705]" dest="return_type_definition [41628,41705]"/>
  <match src="binary_expression [42400,42462]" dest="binary_expression [42400,42462]"/>
  <match src="return: return [90856,90862]" dest="return: return [91881,91887]"/>
  <match src="}: } [72992,72993]" dest="}: } [72674,72675]"/>
  <match src="call_argument [76834,76846]" dest="call_argument [76350,76362]"/>
  <match src="identifier: c [7324,7325]" dest="identifier: c [7324,7325]"/>
  <match src=".: . [87139,87140]" dest=".: . [88296,88297]"/>
  <match src="parameter [17380,17397]" dest="parameter [17380,17397]"/>
  <match src=",: , [54798,54799]" dest=",: , [54800,54801]"/>
  <match src="): ) [97982,97983]" dest="): ) [96747,96748]"/>
  <match src="': ' [37167,37168]" dest="': ' [37167,37168]"/>
  <match src="identifier: _shardPoolWeight [75761,75777]" dest="identifier: _shardPoolWeight [75277,75293]"/>
  <match src="assignment_expression [45011,45053]" dest="assignment_expression [45013,45055]"/>
  <match src="type_name [41660,41664]" dest="type_name [41660,41664]"/>
  <match src="identifier: InvitationInfo [100366,100380]" dest="identifier: InvitationInfo [99708,99722]"/>
  <match src="variable_declaration [42054,42079]" dest="variable_declaration [42054,42079]"/>
  <match src="new: new [95682,95685]" dest="new: new [94830,94833]"/>
  <match src="variable_declaration_statement [80363,80407]" dest="variable_declaration_statement [80983,81027]"/>
  <match src="expression_statement [27393,27400]" dest="expression_statement [27393,27400]"/>
  <match src="return: return [15264,15270]" dest="return: return [15264,15270]"/>
  <match src="identifier: to [40766,40768]" dest="identifier: to [40766,40768]"/>
  <match src="type_name [92724,92731]" dest="type_name [92372,92379]"/>
  <match src="identifier: user [81550,81554]" dest="identifier: user [82243,82247]"/>
  <match src=".: . [90498,90499]" dest=".: . [91523,91524]"/>
  <match src="): ) [25992,25993]" dest="): ) [25992,25993]"/>
  <match src="[: [ [95347,95348]" dest="[: [ [94495,94496]"/>
  <match src="identifier: uq144x112 [34066,34075]" dest="identifier: uq144x112 [34066,34075]"/>
  <match src="(: ( [52733,52734]" dest="(: ( [52735,52736]"/>
  <match src="variable_declaration [19009,19021]" dest="variable_declaration [19009,19021]"/>
  <match src=",: , [79790,79791]" dest=",: , [80375,80376]"/>
  <match src="(: ( [86659,86660]" dest="(: ( [88310,88311]"/>
  <match src="type_cast_expression [38071,38120]" dest="type_cast_expression [38071,38120]"/>
  <match src="identifier: devDividendWeight [46989,47006]" dest="identifier: devDividendWeight [46376,46393]"/>
  <match src="&gt;&gt;=: &gt;&gt;= [29265,29268]" dest="&gt;&gt;=: &gt;&gt;= [29265,29268]"/>
  <match src="identifier: onlyOwner [45915,45924]" dest="identifier: onlyOwner [45917,45926]"/>
  <match src="if: if [100587,100589]" dest="if: if [100162,100164]"/>
  <match src="call_expression [90436,90525]" dest="call_expression [91487,91550]"/>
  <match src="public: public [65257,65263]" dest="public: public [65267,65273]"/>
  <match src="[: [ [102464,102465]" dest="[: [ [102323,102324]"/>
  <match src="function: function [79751,79759]" dest="function: function [80336,80344]"/>
  <match src="event_definition [66657,66770]" dest="event_definition [66910,67023]"/>
  <match src="address: address [16170,16177]" dest="address: address [16170,16177]"/>
  <match src="binary_expression [38305,38338]" dest="binary_expression [38305,38338]"/>
  <match src="call_expression [99738,99771]" dest="call_expression [97930,97963]"/>
  <match src=",: , [58783,58784]" dest=",: , [58785,58786]"/>
  <match src="if_statement [19301,19896]" dest="if_statement [19301,19896]"/>
  <match src=".: . [80553,80554]" dest=".: . [81238,81239]"/>
  <match src="identifier: getRewardToken [77597,77611]" dest="identifier: getRewardToken [77037,77051]"/>
  <match src="type_name [65893,65900]" dest="type_name [65903,65910]"/>
  <match src="identifier: RESOLUTION [35660,35670]" dest="identifier: RESOLUTION [35660,35670]"/>
  <match src="comment: // Look for revert reason and bubble it up if present [19379,19432]" dest="comment: // Look for revert reason and bubble it up if present [19379,19432]"/>
  <match src=",: , [39745,39746]" dest=",: , [39745,39746]"/>
  <match src="member_expression [84090,84106]" dest="member_expression [84619,84635]"/>
  <match src=".: . [36481,36482]" dest=".: . [36481,36482]"/>
  <match src="binary_expression [107106,107124]" dest="binary_expression [107030,107048]"/>
  <match src=",: , [28103,28104]" dest=",: , [28103,28104]"/>
  <match src="return_statement [6907,6925]" dest="return_statement [6907,6925]"/>
  <match src="identifier: uq112x112 [35927,35936]" dest="identifier: uq112x112 [35927,35936]"/>
  <match src="type_name [62160,62167]" dest="type_name [62162,62169]"/>
  <match src="event_paramater [4106,4126]" dest="event_paramater [4106,4126]"/>
  <match src="type_name [69280,69294]" dest="type_name [68991,69005]"/>
  <match src="identifier: originWeight [102692,102704]" dest="identifier: originWeight [102616,102628]"/>
  <match src="augmented_assignment_expression [29541,29548]" dest="augmented_assignment_expression [29541,29548]"/>
  <match src="(: ( [76958,76959]" dest="(: ( [76474,76475]"/>
  <match src="type_name [22910,22916]" dest="type_name [22910,22916]"/>
  <match src="&quot;: &quot; [17525,17526]" dest="&quot;: &quot; [17525,17526]"/>
  <match src="): ) [34611,34612]" dest="): ) [34611,34612]"/>
  <match src="call_argument [34856,34876]" dest="call_argument [34856,34876]"/>
  <match src="identifier: amount [62869,62875]" dest="identifier: amount [62871,62877]"/>
  <match src="=: = [97559,97560]" dest="=: = [96324,96325]"/>
  <match src="function: function [109043,109051]" dest="function: function [108967,108975]"/>
  <match src="): ) [81282,81283]" dest="): ) [81971,81972]"/>
  <match src="identifier: _pid [73625,73629]" dest="identifier: _pid [73390,73394]"/>
  <match src="primitive_type [62106,62113]" dest="primitive_type [62108,62115]"/>
  <match src="(: ( [69202,69203]" dest="(: ( [68913,68914]"/>
  <match src="address: address [68893,68900]" dest="address: address [68604,68611]"/>
  <match src="call_argument [86467,86471]" dest="call_argument [87755,87759]"/>
  <match src="): ) [26510,26511]" dest="): ) [26510,26511]"/>
  <match src="type_cast_expression [71192,71213]" dest="type_cast_expression [70903,70924]"/>
  <match src="assignment_expression [29815,29835]" dest="assignment_expression [29815,29835]"/>
  <match src="=: = [27342,27343]" dest="=: = [27342,27343]"/>
  <match src="number_literal: 0x100000000000000000000000000000000 [30340,30375]" dest="number_literal: 0x100000000000000000000000000000000 [30340,30375]"/>
  <match src="&gt;=:  &gt;= [28377,28380]" dest="&gt;=:  &gt;= [28377,28380]"/>
  <match src="primitive_type [44029,44036]" dest="primitive_type [44031,44038]"/>
  <match src="return: return [27877,27883]" dest="return: return [27877,27883]"/>
  <match src="if: if [90836,90838]" dest="if: if [91861,91863]"/>
  <match src="(: ( [31605,31606]" dest="(: ( [31605,31606]"/>
  <match src="address: address [99023,99030]" dest="address: address [99204,99211]"/>
  <match src="memory: memory [88513,88519]" dest="memory: memory [89361,89367]"/>
  <match src="primitive_type [59480,59487]" dest="primitive_type [59482,59489]"/>
  <match src="identifier: sub [71594,71597]" dest="identifier: sub [71305,71308]"/>
  <match src="view: view [104496,104500]" dest="view: view [104420,104424]"/>
  <match src="primitive_type [40900,40907]" dest="primitive_type [40900,40907]"/>
  <match src="(: ( [9464,9465]" dest="(: ( [9464,9465]"/>
  <match src="binary_expression [84226,84249]" dest="binary_expression [84755,84778]"/>
  <match src="constant: constant [43382,43390]" dest="constant: constant [43382,43390]"/>
  <match src="call_argument [71614,71635]" dest="call_argument [71325,71346]"/>
  <match src="identifier: div [83254,83257]" dest="identifier: div [90427,90430]"/>
  <match src="comment: //calculate the weight and end block when users deposit [90635,90690]" dest="comment: //calculate the weight and end block when users deposit [91660,91715]"/>
  <match src="': ' [37746,37747]" dest="': ' [37746,37747]"/>
  <match src="type_name [78242,78249]" dest="type_name [77375,77382]"/>
  <match src="&gt;&gt;=: &gt;&gt;= [31464,31467]" dest="&gt;&gt;=: &gt;&gt;= [31464,31467]"/>
  <match src="(: ( [51491,51492]" dest="(: ( [51493,51494]"/>
  <match src="(: ( [5903,5904]" dest="(: ( [5903,5904]"/>
  <match src="identifier: tokenBInfo [105680,105690]" dest="identifier: tokenBInfo [105604,105614]"/>
  <match src="for_statement [95764,95922]" dest="for_statement [94912,95232]"/>
  <match src="identifier: mm [27364,27366]" dest="identifier: mm [27364,27366]"/>
  <match src="identifier: _beforeTokenTransfer [62719,62739]" dest="identifier: _beforeTokenTransfer [62721,62741]"/>
  <match src="identifier: i [93359,93360]" dest="identifier: i [93007,93008]"/>
  <match src="call_expression [61618,61637]" dest="call_expression [61620,61639]"/>
  <match src="assignment_expression [59888,59911]" dest="assignment_expression [59890,59913]"/>
  <match src="identifier: wantTokenReserve [98224,98240]" dest="identifier: wantTokenReserve [96989,97005]"/>
  <match src="array_access [99208,99253]" dest="array_access [99368,99413]"/>
  <match src="return_type_definition [37608,37634]" dest="return_type_definition [37608,37634]"/>
  <match src="return: return [49829,49835]" dest="return: return [49831,49837]"/>
  <match src="primitive_type [16170,16177]" dest="primitive_type [16170,16177]"/>
  <match src=",: , [16311,16312]" dest=",: , [16311,16312]"/>
  <match src=",: , [68541,68542]" dest=",: , [68455,68456]"/>
  <match src="call_argument [69836,69851]" dest="call_argument [69547,69562]"/>
  <match src="primitive_type [88598,88605]" dest="primitive_type [89446,89453]"/>
  <match src="address: address [109328,109335]" dest="address: address [109252,109259]"/>
  <match src="number_literal: 2131 [68480,68484]" dest="number_literal: 2131 [68436,68440]"/>
  <match src="): ) [84769,84770]" dest="): ) [85900,85901]"/>
  <match src="return: return [36137,36143]" dest="return: return [36137,36143]"/>
  <match src="bytes: bytes [18021,18026]" dest="bytes: bytes [18021,18026]"/>
  <match src="type_name [41378,41384]" dest="type_name [41378,41384]"/>
  <match src="call_argument [61697,61704]" dest="call_argument [61699,61706]"/>
  <match src="variable_declaration_statement [85781,85833]" dest="variable_declaration_statement [87081,87133]"/>
  <match src="variable_declaration [103503,103521]" dest="variable_declaration [103427,103445]"/>
  <match src="primitive_type [91081,91088]" dest="primitive_type [92106,92113]"/>
  <match src="array_access [55190,55210]" dest="array_access [55192,55212]"/>
  <match src=".: . [84164,84165]" dest=".: . [84693,84694]"/>
  <match src="): ) [37017,37018]" dest="): ) [37017,37018]"/>
  <match src="assignment_expression [55088,55179]" dest="assignment_expression [55090,55181]"/>
  <match src="(: ( [38070,38071]" dest="(: ( [38070,38071]"/>
  <match src=".: . [85045,85046]" dest=".: . [86345,86346]"/>
  <match src="number_literal: 0 [77149,77150]" dest="number_literal: 0 [77934,77935]"/>
  <match src="type_name [93098,93107]" dest="type_name [92746,92755]"/>
  <match src="parameter [46202,46232]" dest="parameter [46204,46234]"/>
  <match src="(: ( [66158,66159]" dest="(: ( [66176,66177]"/>
  <match src="=: = [81134,81135]" dest="=: = [81821,81822]"/>
  <match src="call_argument [92994,93003]" dest="call_argument [92642,92651]"/>
  <match src="number_literal: 1888 [68328,68332]" dest="number_literal: 1888 [68365,68369]"/>
  <match src="binary_expression [36250,36280]" dest="binary_expression [36250,36280]"/>
  <match src="uint256: uint256 [30213,30220]" dest="uint256: uint256 [30213,30220]"/>
  <match src=",: , [83512,83513]" dest=",: , [84374,84375]"/>
  <match src=",: , [5913,5914]" dest=",: , [5913,5914]"/>
  <match src="binary_expression [61392,61410]" dest="binary_expression [61394,61412]"/>
  <match src="expression_statement [67925,67954]" dest="expression_statement [68177,68206]"/>
  <match src="internal: internal [12688,12696]" dest="internal: internal [12688,12696]"/>
  <match src="(: ( [77404,77405]" dest="(: ( [76844,76845]"/>
  <match src="call_argument [23546,23576]" dest="call_argument [23546,23576]"/>
  <match src="returns: returns [102938,102945]" dest="returns: returns [102862,102869]"/>
  <match src="call_argument [82587,82597]" dest="call_argument [83425,83435]"/>
  <match src="parameter [21896,21908]" dest="parameter [21896,21908]"/>
  <match src="function_definition [41322,41445]" dest="function_definition [41322,41445]"/>
  <match src="=: = [72139,72140]" dest="=: = [71773,71774]"/>
  <match src="return_type_definition [33906,33932]" dest="return_type_definition [33906,33932]"/>
  <match src="function_definition [58532,58624]" dest="function_definition [58534,58626]"/>
  <match src="expression_statement [84696,84736]" dest="expression_statement [85827,85867]"/>
  <match src="identifier: require [37724,37731]" dest="identifier: require [37724,37731]"/>
  <match src="variable_declaration_statement [28082,28111]" dest="variable_declaration_statement [28082,28111]"/>
  <match src="primitive_type [105834,105840]" dest="primitive_type [105758,105764]"/>
  <match src="}: } [87983,87984]" dest="}: } [89144,89145]"/>
  <match src="parameter [105737,105768]" dest="parameter [105661,105692]"/>
  <match src="block_statement [42170,42602]" dest="block_statement [42170,42602]"/>
  <match src="boolean_literal [6216,6220]" dest="boolean_literal [6216,6220]"/>
  <match src="call_expression [102692,102724]" dest="call_expression [102616,102648]"/>
  <match src="identifier: addInvitorWeight [101306,101322]" dest="identifier: invitorRewardDebt [101776,101793]"/>
  <match src="&lt;: &lt; [103637,103638]" dest="&lt;: &lt; [103561,103562]"/>
  <match src="identifier: tryMod [6817,6823]" dest="identifier: tryMod [6817,6823]"/>
  <match src="assignment_expression [76032,76058]" dest="assignment_expression [75548,75574]"/>
  <match src="call_argument [51495,51504]" dest="call_argument [51497,51506]"/>
  <match src="call_expression [80796,80849]" dest="call_expression [81483,81536]"/>
  <match src=".: . [83970,83971]" dest=".: . [84499,84500]"/>
  <match src="internal: internal [17818,17826]" dest="internal: internal [17818,17826]"/>
  <match src="expression_statement [30267,30319]" dest="expression_statement [30267,30319]"/>
  <match src="variable_declaration_statement [28958,28973]" dest="variable_declaration_statement [28958,28973]"/>
  <match src="identifier: _developerDAOFund [44551,44568]" dest="identifier: _developerDAOFund [44553,44570]"/>
  <match src="identifier: onlyOwner [25939,25948]" dest="identifier: onlyOwner [25939,25948]"/>
  <match src="=: = [99180,99181]" dest="=: = [99344,99345]"/>
  <match src="call_argument [81195,81208]" dest="call_argument [81882,81897]"/>
  <match src="uint256: uint256 [90722,90729]" dest="uint256: uint256 [91747,91754]"/>
  <match src=",: , [71600,71601]" dest=",: , [71311,71312]"/>
  <match src="identifier: PoolInfo [84540,84548]" dest="identifier: PoolInfo [85671,85679]"/>
  <match src="primitive_type [51386,51393]" dest="primitive_type [51388,51395]"/>
  <match src="primitive_type [39237,39244]" dest="primitive_type [39237,39244]"/>
  <match src=",: , [66483,66484]" dest=",: , [66736,66737]"/>
  <match src="virtual: virtual [52635,52642]" dest="virtual: virtual [52637,52644]"/>
  <match src="parenthesized_expression [89706,89764]" dest="parenthesized_expression [90948,91006]"/>
  <match src="identifier: blockTimestamp [107455,107469]" dest="identifier: blockTimestamp [107379,107393]"/>
  <match src="(: ( [22322,22323]" dest="(: ( [22322,22323]"/>
  <match src="identifier: errorMessage [15743,15755]" dest="identifier: errorMessage [15743,15755]"/>
  <match src="identifier: functionStaticCall [17736,17754]" dest="identifier: functionStaticCall [17736,17754]"/>
  <match src="identifier: amount [84488,84494]" dest="identifier: amount [85023,85029]"/>
  <match src="): ) [7361,7362]" dest="): ) [7361,7362]"/>
  <match src="}: } [5732,5733]" dest="}: } [5732,5733]"/>
  <match src="variable_declaration_statement [82789,82830]" dest="variable_declaration_statement [83627,83668]"/>
  <match src="return_statement [53484,53496]" dest="return_statement [53486,53498]"/>
  <match src="assignment_expression [92359,92404]" dest="assignment_expression [87299,87366]"/>
  <match src="): ) [42898,42899]" dest="): ) [42898,42899]"/>
  <match src="number_literal: 0 [56400,56401]" dest="number_literal: 0 [56402,56403]"/>
  <match src="identifier: treasruyDividend [83658,83674]" dest="identifier: treasruyDividend [85402,85418]"/>
  <match src="identifier: MAX_MONTH [65759,65768]" dest="identifier: MAX_MONTH [65769,65778]"/>
  <match src="identifier: self [36477,36481]" dest="identifier: self [36477,36481]"/>
  <match src="function: function [37551,37559]" dest="function: function [37551,37559]"/>
  <match src="*=: *= [27679,27681]" dest="*=: *= [27679,27681]"/>
  <match src="type_name [79937,79951]" dest="type_name [80522,80536]"/>
  <match src="expression_statement [107756,107865]" dest="expression_statement [107680,107789]"/>
  <match src="call_argument [85523,85550]" dest="call_argument [86823,86850]"/>
  <match src="visibility [51657,51663]" dest="visibility [51659,51665]"/>
  <match src="parameter [90811,90818]" dest="parameter [91836,91843]"/>
  <match src="returns: returns [40601,40608]" dest="returns: returns [40601,40608]"/>
  <match src="yul_function_call [19707,19724]" dest="yul_function_call [19707,19724]"/>
  <match src="identifier: rankPoolIndex [84746,84759]" dest="identifier: rankPoolIndex [85877,85890]"/>
  <match src="number_literal: 0 [71361,71362]" dest="number_literal: 0 [71072,71073]"/>
  <match src="if_statement [36190,36426]" dest="if_statement [36190,36426]"/>
  <match src="): ) [61636,61637]" dest="): ) [61638,61639]"/>
  <match src="(: ( [47143,47144]" dest="(: ( [46530,46531]"/>
  <match src="=: = [103838,103839]" dest="=: = [103762,103763]"/>
  <match src="identifier: invitorInfo [101204,101215]" dest="identifier: invitorInfo [101173,101184]"/>
  <match src="uint256: uint256 [93932,93939]" dest="uint256: uint256 [93578,93585]"/>
  <match src="contract_body [27189,28296]" dest="contract_body [27189,28296]"/>
  <match src="uint256: uint256 [79510,79517]" dest="uint256: uint256 [78870,78877]"/>
  <match src="identifier: token1 [104626,104632]" dest="identifier: token1 [104550,104556]"/>
  <match src="user_defined_type [74230,74238]" dest="user_defined_type [74017,74025]"/>
  <match src="identifier: value [20738,20743]" dest="identifier: value [20738,20743]"/>
  <match src="identifier: sender [47455,47461]" dest="identifier: sender [47457,47463]"/>
  <match src="visibility [19255,19262]" dest="visibility [19255,19262]"/>
  <match src="{: { [25530,25531]" dest="{: { [25530,25531]"/>
  <match src="identifier: r [29784,29785]" dest="identifier: r [29784,29785]"/>
  <match src="): ) [44492,44493]" dest="): ) [44494,44495]"/>
  <match src="function_body [30256,30985]" dest="function_body [30256,30985]"/>
  <match src="): ) [9440,9441]" dest="): ) [9440,9441]"/>
  <match src="return_type_definition [105779,105823]" dest="return_type_definition [105703,105747]"/>
  <match src="boolean_literal [5713,5717]" dest="boolean_literal [5713,5717]"/>
  <match src="type_name [39522,39529]" dest="type_name [39522,39529]"/>
  <match src="boolean_literal [5382,5387]" dest="boolean_literal [5382,5387]"/>
  <match src="type_cast_expression [34433,34442]" dest="type_cast_expression [34433,34442]"/>
  <match src="{: { [36838,36839]" dest="{: { [36838,36839]"/>
  <match src="expression_statement [42380,42463]" dest="expression_statement [42380,42463]"/>
  <match src="uint256: uint256 [96930,96937]" dest="uint256: uint256 [95695,95702]"/>
  <match src="function_definition [71776,72763]" dest="function_definition [71487,72816]"/>
  <match src="{: { [108779,108780]" dest="{: { [108703,108704]"/>
  <match src="variable_declaration_statement [88777,88788]" dest="variable_declaration_statement [89625,89636]"/>
  <match src=",: , [84480,84481]" dest=",: , [85015,85016]"/>
  <match src="library_declaration [5083,11873]" dest="library_declaration [5083,11873]"/>
  <match src="expression_statement [80091,80154]" dest="expression_statement [80676,80739]"/>
  <match src="identifier: require [25962,25969]" dest="identifier: require [25962,25969]"/>
  <match src="type_name [9431,9438]" dest="type_name [9431,9438]"/>
  <match src="type_name [93961,93970]" dest="type_name [93607,93616]"/>
  <match src=".: . [103699,103700]" dest=".: . [103623,103624]"/>
  <match src="identifier: _toBlock [102908,102916]" dest="identifier: _toBlock [102832,102840]"/>
  <match src="member_expression [84696,84720]" dest="member_expression [85827,85851]"/>
  <match src=".: . [100018,100019]" dest=".: . [98723,98724]"/>
  <match src="): ) [86632,86633]" dest="): ) [87920,87921]"/>
  <match src="member_expression [85964,85988]" dest="member_expression [87263,87287]"/>
  <match src="type_name [53312,53319]" dest="type_name [53314,53321]"/>
  <match src="(: ( [53460,53461]" dest="(: ( [53462,53463]"/>
  <match src="}: } [64469,64470]" dest="}: } [64471,64472]"/>
  <match src="call_argument [97202,97219]" dest="call_argument [95967,95984]"/>
  <match src="}: } [109680,109681]" dest="}: } [109604,109605]"/>
  <match src="identifier: target [15284,15290]" dest="identifier: target [15284,15290]"/>
  <match src="type_name [77370,77377]" dest="type_name [76810,76817]"/>
  <match src="array_access [57407,57434]" dest="array_access [57409,57436]"/>
  <match src="identifier: invitees [64245,64253]" dest="identifier: invitees [64247,64255]"/>
  <match src="identifier: account [55670,55677]" dest="identifier: account [55672,55679]"/>
  <match src="): ) [85065,85066]" dest="): ) [86365,86366]"/>
  <match src="call_argument [96295,96302]" dest="call_argument [95605,95612]"/>
  <match src="pragma_directive [24698,24729]" dest="pragma_directive [24698,24729]"/>
  <match src="identifier: pool [79085,79089]" dest="identifier: pool [79248,79252]"/>
  <match src="binary_expression [34930,34952]" dest="binary_expression [34930,34952]"/>
  <match src=",: , [96293,96294]" dest=",: , [95603,95604]"/>
  <match src="identifier: beforeCalculateIndex [103817,103837]" dest="identifier: beforeCalculateIndex [103741,103761]"/>
  <match src="return: return [51122,51128]" dest="return: return [51124,51130]"/>
  <match src="assignment_expression [106768,106814]" dest="assignment_expression [106692,106738]"/>
  <match src="call_expression [70714,70759]" dest="call_expression [70425,70470]"/>
  <match src="[: [ [88404,88405]" dest="[: [ [89252,89253]"/>
  <match src="identifier: y [27348,27349]" dest="identifier: y [27348,27349]"/>
  <match src="comment: /**      * @notice Called by the delegator on a delegate to forfeit its responsibility      */ [109365,109461]" dest="comment: /**      * @notice Called by the delegator on a delegate to forfeit its responsibility      */ [109289,109385]"/>
  <match src="identifier: xx [29320,29322]" dest="identifier: xx [29320,29322]"/>
  <match src="identifier: blockTimestamp [42254,42268]" dest="identifier: blockTimestamp [42254,42268]"/>
  <match src="expression_statement [104152,104195]" dest="expression_statement [104076,104119]"/>
  <match src="identifier: Approval [57459,57467]" dest="identifier: Approval [57461,57469]"/>
  <match src="): ) [21847,21848]" dest="): ) [21847,21848]"/>
  <match src="primitive_type [56312,56319]" dest="primitive_type [56314,56321]"/>
  <match src="variable_declaration_statement [72117,72164]" dest="variable_declaration_statement [71751,71798]"/>
  <match src="internal: internal [41614,41622]" dest="internal: internal [41614,41622]"/>
  <match src="=: = [29724,29725]" dest="=: = [29724,29725]"/>
  <match src="}: } [11872,11873]" dest="}: } [11872,11873]"/>
  <match src="primitive_type [107389,107396]" dest="primitive_type [107313,107320]"/>
  <match src="type_name [41637,41641]" dest="type_name [41637,41641]"/>
  <match src="identifier: to [61809,61811]" dest="identifier: to [61811,61813]"/>
  <match src="identifier: pool [93519,93523]" dest="identifier: pool [93167,93171]"/>
  <match src="identifier: x [29700,29701]" dest="identifier: x [29700,29701]"/>
  <match src="member_expression [99091,99108]" dest="member_expression [99259,99276]"/>
  <match src="primitive_type [49051,49058]" dest="primitive_type [49053,49060]"/>
  <match src=",: , [88419,88420]" dest=",: , [89267,89268]"/>
  <match src="if: if [61343,61345]" dest="if: if [61345,61347]"/>
  <match src="binary_expression [6899,6905]" dest="binary_expression [6899,6905]"/>
  <match src="{: { [36015,36016]" dest="{: { [36015,36016]"/>
  <match src="}: } [17534,17535]" dest="}: } [17534,17535]"/>
  <match src=".: . [105870,105871]" dest=".: . [105794,105795]"/>
  <match src="call_argument [47034,47052]" dest="call_argument [46421,46439]"/>
  <match src="identifier: _startBlock [103149,103160]" dest="identifier: _startBlock [103073,103084]"/>
  <match src="solidity_version: 0.6.0 [47573,47578]" dest="solidity_version: 0.6.0 [47575,47580]"/>
  <match src="-=: -= [27395,27397]" dest="-=: -= [27395,27397]"/>
  <match src="if_statement [103325,103392]" dest="if_statement [103249,103316]"/>
  <match src="type_name [100366,100380]" dest="type_name [99708,99722]"/>
  <match src="event_paramater [38634,38652]" dest="event_paramater [38634,38652]"/>
  <match src="string_literal [87045,87083]" dest="string_literal [88202,88240]"/>
  <match src="expression_statement [84055,84073]" dest="expression_statement [84584,84602]"/>
  <match src="function: function [40847,40855]" dest="function: function [40847,40855]"/>
  <match src="identifier: spender [21278,21285]" dest="identifier: spender [21278,21285]"/>
  <match src="type_name [4391,4398]" dest="type_name [4391,4398]"/>
  <match src="member_expression [107077,107092]" dest="member_expression [107001,107016]"/>
  <match src="identifier: invitor [87132,87139]" dest="identifier: invitor [88289,88296]"/>
  <match src="{: { [107958,107959]" dest="{: { [107882,107883]"/>
  <match src="(: ( [75964,75965]" dest="(: ( [75480,75481]"/>
  <match src="identifier: div [47008,47011]" dest="identifier: div [46395,46398]"/>
  <match src="(: ( [66869,66870]" dest="(: ( [67122,67123]"/>
  <match src="identifier: MINT_DECREASE_TERM [65577,65595]" dest="identifier: MINT_DECREASE_TERM [65587,65605]"/>
  <match src="primitive_type [37809,37816]" dest="primitive_type [37809,37816]"/>
  <match src="address: address [15591,15598]" dest="address: address [15591,15598]"/>
  <match src="call_expression [28056,28069]" dest="call_expression [28056,28069]"/>
  <match src="&lt;&lt;: &lt;&lt; [33115,33117]" dest="&lt;&lt;: &lt;&lt; [33115,33117]"/>
  <match src="call_expression [25561,25573]" dest="call_expression [25561,25573]"/>
  <match src="member_expression [38015,38022]" dest="member_expression [38015,38022]"/>
  <match src="expression_statement [106768,106815]" dest="expression_statement [106692,106739]"/>
  <match src="identifier: lastDividendHeight [79090,79108]" dest="identifier: lastDividendHeight [79253,79271]"/>
  <match src="member_expression [98206,98301]" dest="member_expression [96971,97066]"/>
  <match src="address: address [45874,45881]" dest="address: address [45876,45883]"/>
  <match src="[: [ [73807,73808]" dest="[: [ [73603,73604]"/>
  <match src="parameter [27971,27980]" dest="parameter [27971,27980]"/>
  <match src="number_literal: 0 [26813,26814]" dest="number_literal: 0 [26813,26814]"/>
  <match src="(: ( [72626,72627]" dest="(: ( [72318,72319]"/>
  <match src=",: , [39171,39172]" dest=",: , [39171,39172]"/>
  <match src="returns: returns [27249,27256]" dest="returns: returns [27249,27256]"/>
  <match src="identifier: mul [103771,103774]" dest="identifier: mul [103695,103698]"/>
  <match src="number_literal: 1 [27640,27641]" dest="number_literal: 1 [27640,27641]"/>
  <match src="(: ( [34306,34307]" dest="(: ( [34306,34307]"/>
  <match src=",: , [8111,8112]" dest=",: , [8111,8112]"/>
  <match src="assignment_expression [73493,73540]" dest="assignment_expression [73258,73305]"/>
  <match src="&gt;=: &gt;= [30337,30339]" dest="&gt;=: &gt;= [30337,30339]"/>
  <match src="identifier: allowance [22285,22294]" dest="identifier: allowance [22285,22294]"/>
  <match src="primitive_type [84573,84580]" dest="primitive_type [85704,85711]"/>
  <match src="): ) [44036,44037]" dest="): ) [44038,44039]"/>
  <match src="&quot;: &quot; [85549,85550]" dest="&quot;: &quot; [86849,86850]"/>
  <match src="call_argument [22468,22480]" dest="call_argument [22468,22480]"/>
  <match src="primitive_type [57264,57271]" dest="primitive_type [57266,57273]"/>
  <match src="identifier: to [62781,62783]" dest="identifier: to [62783,62785]"/>
  <match src=",: , [108759,108760]" dest=",: , [108683,108684]"/>
  <match src="identifier: admin [69394,69399]" dest="identifier: admin [69105,69110]"/>
  <match src="(: ( [39130,39131]" dest="(: ( [39130,39131]"/>
  <match src=".: . [98328,98329]" dest=".: . [97093,97094]"/>
  <match src="storage: storage [79044,79051]" dest="storage: storage [78833,78840]"/>
  <match src="bytes: bytes [17422,17427]" dest="bytes: bytes [17422,17427]"/>
  <match src="(: ( [51624,51625]" dest="(: ( [51626,51627]"/>
  <match src="&gt;=: &gt;= [14120,14122]" dest="&gt;=: &gt;= [14120,14122]"/>
  <match src="[: [ [61558,61559]" dest="[: [ [61560,61561]"/>
  <match src="identifier: updateAfterModifyStartBlock [108328,108355]" dest="identifier: updateAfterModifyStartBlock [108252,108279]"/>
  <match src="]: ] [93106,93107]" dest="]: ] [92754,92755]"/>
  <match src="&quot;: &quot; [47463,47464]" dest="&quot;: &quot; [47465,47466]"/>
  <match src="uint256: uint256 [89020,89027]" dest="uint256: uint256 [89868,89875]"/>
  <match src="primitive_type [56392,56399]" dest="primitive_type [56394,56401]"/>
  <match src="uint256: uint256 [10061,10068]" dest="uint256: uint256 [10061,10068]"/>
  <match src="primitive_type [9431,9438]" dest="primitive_type [9431,9438]"/>
  <match src="call_expression [36389,36414]" dest="call_expression [36389,36414]"/>
  <match src="visibility [59997,60003]" dest="visibility [59999,60005]"/>
  <match src="unary_expression [35749,35751]" dest="unary_expression [35749,35751]"/>
  <match src="type_name [100441,100448]" dest="type_name [99784,99791]"/>
  <match src=",: , [92800,92801]" dest=",: , [92448,92449]"/>
  <match src="=: = [97805,97806]" dest="=: = [96570,96571]"/>
  <match src="if_statement [29403,29477]" dest="if_statement [29403,29477]"/>
  <match src="identifier: unDividendShard [84840,84855]" dest="identifier: unDividendShard [85971,85986]"/>
  <match src="=: = [35093,35094]" dest="=: = [35093,35094]"/>
  <match src="binary_expression [28189,28194]" dest="binary_expression [28189,28194]"/>
  <match src="type_name [67719,67733]" dest="type_name [67933,67947]"/>
  <match src="parameter [62187,62203]" dest="parameter [62189,62205]"/>
  <match src="identifier: _fromBlock [103170,103180]" dest="identifier: _fromBlock [103094,103104]"/>
  <match src="type_name [30213,30220]" dest="type_name [30213,30220]"/>
  <match src="variable_declaration [69767,69794]" dest="variable_declaration [69478,69505]"/>
  <match src="variable_declaration_statement [95768,95779]" dest="variable_declaration_statement [94916,94927]"/>
  <match src="solidity_pragma_token [38463,38479]" dest="solidity_pragma_token [38463,38479]"/>
  <match src="user_defined_type [48907,48913]" dest="user_defined_type [48909,48915]"/>
  <match src="identifier: a [6200,6201]" dest="identifier: a [6200,6201]"/>
  <match src="tuple_expression [105224,105253]" dest="tuple_expression [105148,105177]"/>
  <match src="[: [ [68161,68162]" dest="[: [ [68324,68325]"/>
  <match src="expression_statement [36307,36368]" dest="expression_statement [36307,36368]"/>
  <match src="uint256: uint256 [36757,36764]" dest="uint256: uint256 [36757,36764]"/>
  <match src="identifier: user [80441,80445]" dest="identifier: user [82530,82534]"/>
  <match src="function_definition [45126,45478]" dest="function_definition [45128,45480]"/>
  <match src=".: . [72937,72938]" dest=".: . [72619,72620]"/>
  <match src="identifier: isDescriptionLeagal [71921,71940]" dest="identifier: addReward [71816,71825]"/>
  <match src="': ' [37358,37359]" dest="': ' [37358,37359]"/>
  <match src="identifier: other [34685,34690]" dest="identifier: other [34685,34690]"/>
  <match src="parameter [27482,27491]" dest="parameter [27482,27491]"/>
  <match src="type_cast_expression [55761,55771]" dest="type_cast_expression [55763,55773]"/>
  <match src="identifier: d [27836,27837]" dest="identifier: d [27836,27837]"/>
  <match src="comment: // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691 [24481,24599]" dest="comment: // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691 [24481,24599]"/>
  <match src="identifier: TokenPairInfo [105301,105314]" dest="identifier: TokenPairInfo [105225,105238]"/>
  <match src="{: { [31982,31983]" dest="{: { [31982,31983]"/>
  <match src="number_literal: 0 [103632,103633]" dest="number_literal: 0 [103556,103557]"/>
  <match src=".: . [93595,93596]" dest=".: . [93243,93244]"/>
  <match src="binary_expression [28174,28180]" dest="binary_expression [28174,28180]"/>
  <match src="identifier: data [17784,17788]" dest="identifier: data [17784,17788]"/>
  <match src="comment: // Info of each user that stakes LP tokens. [64812,64855]" dest="comment: // Info of each user that stakes LP tokens. [64820,64863]"/>
  <match src="identifier: success [14327,14334]" dest="identifier: success [14327,14334]"/>
  <match src="identifier: lastEvilInBlackList [73459,73478]" dest="identifier: lastEvilInBlackList [73224,73243]"/>
  <match src="**: ** [105885,105887]" dest="**: ** [105809,105811]"/>
  <match src="): ) [109498,109499]" dest="): ) [109422,109423]"/>
  <match src="function_definition [40094,40145]" dest="function_definition [40094,40145]"/>
  <match src="if: if [83582,83584]" dest="if: if [85330,85332]"/>
  <match src="type_name [44029,44036]" dest="type_name [44031,44038]"/>
  <match src="[: [ [89082,89083]" dest="[: [ [89930,89931]"/>
  <match src="binary_expression [35164,35197]" dest="binary_expression [35164,35197]"/>
  <match src="expression_statement [32097,32105]" dest="expression_statement [32097,32105]"/>
  <match src="assignment_expression [29722,29742]" dest="assignment_expression [29722,29742]"/>
  <match src="state_mutability [40419,40423]" dest="state_mutability [40419,40423]"/>
  <match src="identifier: minters [59888,59895]" dest="identifier: minters [59890,59897]"/>
  <match src="call_expression [104296,104349]" dest="call_expression [104220,104273]"/>
  <match src="uint256: uint256 [75504,75511]" dest="uint256: uint256 [75020,75027]"/>
  <match src="assignment_expression [83061,83122]" dest="assignment_expression [83840,83901]"/>
  <match src="state_variable_declaration [43600,43632]" dest="state_variable_declaration [43600,43632]"/>
  <match src="visibility [65832,65838]" dest="visibility [65842,65848]"/>
  <match src="solidity_version_comparison_operator [32239,32242]" dest="solidity_version_comparison_operator [32239,32242]"/>
  <match src="): ) [60949,60950]" dest="): ) [60951,60952]"/>
  <match src="call_expression [33275,33310]" dest="call_expression [33275,33310]"/>
  <match src="type_cast_expression [37006,37017]" dest="type_cast_expression [37006,37017]"/>
  <match src="+=: += [30931,30933]" dest="+=: += [30931,30933]"/>
  <match src="): ) [37998,37999]" dest="): ) [37998,37999]"/>
  <match src="(: ( [60735,60736]" dest="(: ( [60737,60738]"/>
  <match src="augmented_assignment_expression [29350,29359]" dest="augmented_assignment_expression [29350,29359]"/>
  <match src="if: if [85304,85306]" dest="if: if [86604,86606]"/>
  <match src="type_name [102412,102419]" dest="type_name [102271,102278]"/>
  <match src="): ) [98156,98157]" dest="): ) [96921,96922]"/>
  <match src="assignment_expression [106402,106490]" dest="assignment_expression [106326,106414]"/>
  <match src="identifier: PoolInfo [89050,89058]" dest="identifier: PoolInfo [89898,89906]"/>
  <match src="identifier: d [27861,27862]" dest="identifier: d [27861,27862]"/>
  <match src="member_expression [33991,33998]" dest="member_expression [33991,33998]"/>
  <match src="true [53491,53495]" dest="true [53493,53497]"/>
  <match src="primitive_type [27269,27276]" dest="primitive_type [27269,27276]"/>
  <match src="assignment_expression [109311,109338]" dest="assignment_expression [109235,109262]"/>
  <match src="string: string [49153,49159]" dest="string: string [49155,49161]"/>
  <match src="parameter [46019,46041]" dest="parameter [46021,46043]"/>
  <match src="any_source_type [63135,63136]" dest="any_source_type [63137,63138]"/>
  <match src="identifier: length [88624,88630]" dest="identifier: length [89472,89478]"/>
  <match src="if: if [97404,97406]" dest="if: if [96169,96171]"/>
  <match src="primitive_type [87503,87510]" dest="primitive_type [88664,88671]"/>
  <match src="parameter [27951,27960]" dest="parameter [27951,27960]"/>
  <match src="boolean_literal [70127,70132]" dest="boolean_literal [69838,69843]"/>
  <match src="identifier: devDividend [83708,83719]" dest="identifier: devDividend [85444,85455]"/>
  <match src="): ) [104329,104330]" dest="): ) [104253,104254]"/>
  <match src="variable_declaration [82840,82861]" dest="variable_declaration [83678,83699]"/>
  <match src="member_expression [92925,92937]" dest="member_expression [92573,92585]"/>
  <match src="return_statement [36137,36169]" dest="return_statement [36137,36169]"/>
  <match src="expression_statement [27777,27792]" dest="expression_statement [27777,27792]"/>
  <match src="(: ( [41377,41378]" dest="(: ( [41377,41378]"/>
  <match src="visibility [24307,24315]" dest="visibility [24307,24315]"/>
  <match src="if: if [96178,96180]" dest="if: if [95488,95490]"/>
  <match src="{: { [45784,45785]" dest="{: { [45786,45787]"/>
  <match src="primitive_type [39664,39668]" dest="primitive_type [39664,39668]"/>
  <match src="identifier: usersRelationshipInfo [79973,79994]" dest="identifier: usersRelationshipInfo [80558,80579]"/>
  <match src="identifier: IERC20 [22190,22196]" dest="identifier: IERC20 [22190,22196]"/>
  <match src="&gt;=: &gt;= [79109,79111]" dest="&gt;=: &gt;= [79272,79274]"/>
  <match src="identifier: l [27884,27885]" dest="identifier: l [27884,27885]"/>
  <match src="uint256: uint256 [33881,33888]" dest="uint256: uint256 [33881,33888]"/>
  <match src="identifier: div [103536,103539]" dest="identifier: div [103460,103463]"/>
  <match src="=: = [67484,67485]" dest="=: = [67731,67732]"/>
  <match src="primitive_type [63199,63206]" dest="primitive_type [63201,63208]"/>
  <match src="array_access [72503,72534]" dest="array_access [72195,72226]"/>
  <match src="(: ( [30546,30547]" dest="(: ( [30546,30547]"/>
  <match src="if: if [46597,46599]" dest="if: if [46839,46841]"/>
  <match src="identifier: data [23359,23363]" dest="identifier: data [23359,23363]"/>
  <match src="external: external [85262,85270]" dest="external: external [86562,86570]"/>
  <match src="): ) [44857,44858]" dest="): ) [44859,44860]"/>
  <match src="primitive_type [39891,39895]" dest="primitive_type [39891,39895]"/>
  <match src="expression_statement [87442,87460]" dest="expression_statement [88603,88621]"/>
  <match src="returns: returns [40127,40134]" dest="returns: returns [40127,40134]"/>
  <match src="]: ] [99111,99112]" dest="]: ] [99279,99280]"/>
  <match src="variable_declaration [103402,103421]" dest="variable_declaration [103326,103345]"/>
  <match src="=: = [38165,38166]" dest="=: = [38165,38166]"/>
  <match src="true [6216,6220]" dest="true [6216,6220]"/>
  <match src="string_literal [18894,18934]" dest="string_literal [18894,18934]"/>
  <match src="state_mutability [1904,1908]" dest="state_mutability [1904,1908]"/>
  <match src="function: function [27196,27204]" dest="function: function [27196,27204]"/>
  <match src="primitive_type [86722,86729]" dest="primitive_type [87802,87809]"/>
  <match src="visibility [51954,51960]" dest="visibility [51956,51962]"/>
  <match src="expression_statement [67473,67498]" dest="expression_statement [67720,67745]"/>
  <match src="expression_statement [109527,109540]" dest="expression_statement [109451,109464]"/>
  <match src="identifier: number [89624,89630]" dest="identifier: number [90866,90872]"/>
  <match src="state_variable_declaration [32620,32659]" dest="state_variable_declaration [32620,32659]"/>
  <match src="}: } [15338,15339]" dest="}: } [15338,15339]"/>
  <match src=".: . [86440,86441]" dest=".: . [87728,87729]"/>
  <match src="(: ( [70661,70662]" dest="(: ( [70372,70373]"/>
  <match src="parameter [57171,57184]" dest="parameter [57173,57186]"/>
  <match src="(: ( [82714,82715]" dest="(: ( [83552,83553]"/>
  <match src="user_defined_type [85360,85368]" dest="user_defined_type [86660,86668]"/>
  <match src="expression_statement [20862,20959]" dest="expression_statement [20862,20959]"/>
  <match src="parameter [78999,79015]" dest="parameter [78788,78804]"/>
  <match src="expression_statement [46970,47055]" dest="expression_statement [46357,46442]"/>
  <match src="member_expression [77259,77279]" dest="member_expression [76699,76719]"/>
  <match src="identifier: uq112x112 [37936,37945]" dest="identifier: uq112x112 [37936,37945]"/>
  <match src="function: function [59821,59829]" dest="function: function [59823,59831]"/>
  <match src="uint256: uint256 [32852,32859]" dest="uint256: uint256 [32852,32859]"/>
  <match src="true: true [51531,51535]" dest="true: true [51533,51537]"/>
  <match src="variable_declaration [34756,34774]" dest="variable_declaration [34756,34774]"/>
  <match src="): ) [28109,28110]" dest="): ) [28109,28110]"/>
  <match src="number_literal: 0x10000000000000000 [30455,30474]" dest="number_literal: 0x10000000000000000 [30455,30474]"/>
  <match src="identifier: numCheckpoints [61449,61463]" dest="identifier: numCheckpoints [61451,61465]"/>
  <match src="type_name [104547,104554]" dest="type_name [104471,104478]"/>
  <match src="struct_member [63368,63385]" dest="struct_member [63370,63387]"/>
  <match src="): ) [38320,38321]" dest="): ) [38320,38321]"/>
  <match src="-: - [7819,7820]" dest="-: - [7819,7820]"/>
  <match src="assignment_expression [67678,67708]" dest="assignment_expression [67892,67922]"/>
  <match src="string_literal [87369,87384]" dest="string_literal [88530,88545]"/>
  <match src="identifier: r [29758,29759]" dest="identifier: r [29758,29759]"/>
  <match src="identifier: _sender [94258,94265]" dest="identifier: _sender [93904,93911]"/>
  <match src="primitive_type [35079,35086]" dest="primitive_type [35079,35086]"/>
  <match src="identifier: price0Cumulative [42380,42396]" dest="identifier: price0Cumulative [42380,42396]"/>
  <match src="identifier: recipient [55278,55287]" dest="identifier: recipient [55280,55289]"/>
  <match src=",: , [5717,5718]" dest=",: , [5717,5718]"/>
  <match src="(: ( [77122,77123]" dest="(: ( [77907,77908]"/>
  <match src="return_type_definition [6539,6562]" dest="return_type_definition [6539,6562]"/>
  <match src="identifier: updateTokenPriceTerm [107181,107201]" dest="identifier: updateTokenPriceTerm [107105,107125]"/>
  <match src="identifier: reserve1 [42425,42433]" dest="identifier: reserve1 [42425,42433]"/>
  <match src="=: = [89381,89382]" dest="=: = [77714,77715]"/>
  <match src=",: , [51504,51505]" dest=",: , [51506,51507]"/>
  <match src="call_argument [72356,72357]" dest="call_argument [72111,72112]"/>
  <match src="(: ( [36249,36250]" dest="(: ( [36249,36250]"/>
  <match src="call_expression [98023,98058]" dest="call_expression [96788,96823]"/>
  <match src="identifier: add [80723,80726]" dest="identifier: add [81410,81413]"/>
  <match src="identifier: rankPoolIndex [76153,76166]" dest="identifier: rankPoolIndex [75669,75682]"/>
  <match src="indexed: indexed [39769,39776]" dest="indexed: indexed [39769,39776]"/>
  <match src="internal: internal [18401,18409]" dest="internal: internal [18401,18409]"/>
  <match src="if_statement [100587,100690]" dest="if_statement [100162,100584]"/>
  <match src="address: address [39013,39020]" dest="address: address [39013,39020]"/>
  <match src="return: return [5402,5408]" dest="return: return [5402,5408]"/>
  <match src="identifier: poolTotalWeight [100449,100464]" dest="identifier: poolTotalWeight [99792,99807]"/>
  <match src="identifier: add [103486,103489]" dest="identifier: add [103410,103413]"/>
  <match src="call_argument [10151,10157]" dest="call_argument [10151,10157]"/>
  <match src="parameter [49803,49816]" dest="parameter [49805,49818]"/>
  <match src="primitive_type [31501,31507]" dest="primitive_type [31501,31507]"/>
  <match src="=: = [87111,87112]" dest="=: = [88268,88269]"/>
  <match src="type_name [33915,33924]" dest="type_name [33915,33924]"/>
  <match src="function: function [57153,57161]" dest="function: function [57155,57163]"/>
  <match src="identifier: isContractSender [89434,89450]" dest="identifier: isContractSender [90676,90692]"/>
  <match src="identifier: _msgSender [54125,54135]" dest="identifier: _msgSender [54127,54137]"/>
  <match src="type_name [15241,15246]" dest="type_name [15241,15246]"/>
  <match src="comment: // https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method [28444,28528]" dest="comment: // https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method [28444,28528]"/>
  <match src="identifier: spender [53448,53455]" dest="identifier: spender [53450,53457]"/>
  <match src=",: , [94423,94424]" dest=",: , [94069,94070]"/>
  <match src="array_access [54148,54182]" dest="array_access [54150,54184]"/>
  <match src="]: ] [42861,42862]" dest="]: ] [42861,42862]"/>
  <match src="type_name [74064,74071]" dest="type_name [73794,73801]"/>
  <match src=".: . [98102,98103]" dest=".: . [96867,96868]"/>
  <match src="state_variable_declaration [43257,43301]" dest="state_variable_declaration [43257,43301]"/>
  <match src="member_expression [87892,87909]" dest="member_expression [89053,89070]"/>
  <match src="]: ] [95825,95826]" dest="]: ] [95037,95038]"/>
  <match src="[: [ [86332,86333]" dest="[: [ [87620,87621]"/>
  <match src="(: ( [107814,107815]" dest="(: ( [107738,107739]"/>
  <match src="call_argument [51481,51493]" dest="call_argument [51483,51495]"/>
  <match src="}: } [31440,31441]" dest="}: } [31440,31441]"/>
  <match src="primitive_type [51405,51412]" dest="primitive_type [51407,51414]"/>
  <match src="call_argument [106250,106274]" dest="call_argument [106174,106198]"/>
  <match src="): ) [95909,95910]" dest="): ) [95176,95177]"/>
  <match src="using: using [63047,63052]" dest="using: using [63049,63054]"/>
  <match src="return_type_definition [9456,9473]" dest="return_type_definition [9456,9473]"/>
  <match src="): ) [103769,103770]" dest="): ) [103693,103694]"/>
  <match src="member_expression [22279,22322]" dest="member_expression [22279,22322]"/>
  <match src="expression_statement [14319,14398]" dest="expression_statement [14319,14398]"/>
  <match src="type_name [94250,94257]" dest="type_name [93896,93903]"/>
  <match src="function: function [40512,40520]" dest="function: function [40512,40520]"/>
  <match src="call_expression [38289,38339]" dest="call_expression [38289,38339]"/>
  <match src="identifier: add [78917,78920]" dest="identifier: add [78425,78428]"/>
  <match src="primitive_type [69475,69482]" dest="primitive_type [69186,69193]"/>
  <match src="function: function [38734,38742]" dest="function: function [38734,38742]"/>
  <match src="array_access [86810,86841]" dest="array_access [87965,87998]"/>
  <match src="member_expression [84129,84139]" dest="member_expression [84658,84668]"/>
  <match src="if_statement [77865,78090]" dest="if_statement [77100,77220]"/>
  <match src="call_argument [78477,78478]" dest="call_argument [78057,78058]"/>
  <match src="solidity_pragma_token [11942,11965]" dest="solidity_pragma_token [11942,11965]"/>
  <match src="function_definition [95193,95929]" dest="function_definition [94341,95239]"/>
  <match src="call_argument [37817,37831]" dest="call_argument [37817,37831]"/>
  <match src="): ) [55244,55245]" dest="): ) [55246,55247]"/>
  <match src="(: ( [49551,49552]" dest="(: ( [49553,49554]"/>
  <match src="&quot;: &quot; [60158,60159]" dest="&quot;: &quot; [60160,60161]"/>
  <match src="call_expression [38061,38121]" dest="call_expression [38061,38121]"/>
  <match src="type_name [69767,69774]" dest="type_name [69478,69485]"/>
  <match src="-: - [27834,27835]" dest="-: - [27834,27835]"/>
  <match src="struct_declaration [63915,64168]" dest="struct_declaration [63917,64170]"/>
  <match src="block_statement [46955,47160]" dest="block_statement [46342,46547]"/>
  <match src="identifier: block [82730,82735]" dest="identifier: block [83568,83573]"/>
  <match src="return_statement [50768,50785]" dest="return_statement [50770,50787]"/>
  <match src="{: { [17855,17856]" dest="{: { [17855,17856]"/>
  <match src="number_literal: 0 [10995,10996]" dest="number_literal: 0 [10995,10996]"/>
  <match src="library_declaration [12041,19906]" dest="library_declaration [12041,19906]"/>
  <match src=",: , [84343,84344]" dest=",: , [84878,84879]"/>
  <match src="primitive_type [6824,6831]" dest="primitive_type [6824,6831]"/>
  <match src="type_name [16999,17003]" dest="type_name [16999,17003]"/>
  <match src="identifier: _miner [59896,59902]" dest="identifier: _miner [59898,59904]"/>
  <match src="type_name [49089,49096]" dest="type_name [49091,49098]"/>
  <match src="call_argument [52734,52740]" dest="call_argument [52736,52742]"/>
  <match src="expression_statement [106210,106299]" dest="expression_statement [106134,106223]"/>
  <match src="parameter [6835,6844]" dest="parameter [6835,6844]"/>
  <match src="(: ( [28101,28102]" dest="(: ( [28101,28102]"/>
  <match src="return_type_definition [51445,51459]" dest="return_type_definition [51447,51461]"/>
  <match src="state_mutability [93910,93914]" dest="state_mutability [93556,93560]"/>
  <match src="identifier: token [22279,22284]" dest="identifier: token [22279,22284]"/>
  <match src="member_expression [106825,106853]" dest="member_expression [106749,106777]"/>
  <match src="]: ] [85515,85516]" dest="]: ] [86815,86816]"/>
  <match src="identifier: depositTimeWeight [65675,65692]" dest="identifier: depositTimeWeight [65685,65702]"/>
  <match src="state_mutability [50728,50732]" dest="state_mutability [50730,50734]"/>
  <match src="identifier: _price [105816,105822]" dest="identifier: _price [105740,105746]"/>
  <match src="call_argument [37335,37356]" dest="call_argument [37335,37356]"/>
  <match src="(: ( [30449,30450]" dest="(: ( [30449,30450]"/>
  <match src="number_literal: 0 [89799,89800]" dest="number_literal: 0 [91041,91042]"/>
  <match src="(: ( [35251,35252]" dest="(: ( [35251,35252]"/>
  <match src="type_cast_expression [38281,38371]" dest="type_cast_expression [38281,38371]"/>
  <match src="): ) [32041,32042]" dest="): ) [32041,32042]"/>
  <match src="function: function [10037,10045]" dest="function: function [10037,10045]"/>
  <match src="=: = [79276,79277]" dest="=: = [79431,79432]"/>
  <match src="type_name [54784,54791]" dest="type_name [54786,54793]"/>
  <match src="call_argument [47012,47053]" dest="call_argument [46399,46440]"/>
  <match src="member_expression [80541,80557]" dest="member_expression [81226,81242]"/>
  <match src="identifier: length [69528,69534]" dest="identifier: length [69239,69245]"/>
  <match src="[: [ [79994,79995]" dest="[: [ [80579,80580]"/>
  <match src="type_name [102947,102954]" dest="type_name [102871,102878]"/>
  <match src="expression_statement [30392,30402]" dest="expression_statement [30392,30402]"/>
  <match src="variable_declaration [83194,83209]" dest="variable_declaration [84011,84026]"/>
  <match src="primitive_type [36205,36212]" dest="primitive_type [36205,36212]"/>
  <match src="block_statement [61039,61088]" dest="block_statement [61041,61090]"/>
  <match src="event_paramater [59321,59339]" dest="event_paramater [59323,59341]"/>
  <match src="call_expression [20659,20745]" dest="call_expression [20659,20745]"/>
  <match src="(: ( [106090,106091]" dest="(: ( [106014,106015]"/>
  <match src="(: ( [74168,74169]" dest="(: ( [73899,73900]"/>
  <match src="assignment_expression [108549,108593]" dest="assignment_expression [108473,108517]"/>
  <match src=",: , [3457,3458]" dest=",: , [3457,3458]"/>
  <match src="augmented_assignment_expression [30971,30977]" dest="augmented_assignment_expression [30971,30977]"/>
  <match src="}: } [44575,44576]" dest="}: } [44577,44578]"/>
  <match src="return_type_definition [16229,16251]" dest="return_type_definition [16229,16251]"/>
  <match src="call_expression [16865,16925]" dest="call_expression [16865,16925]"/>
  <match src="{: { [70804,70805]" dest="{: { [70515,70516]"/>
  <match src="type_name [93282,93289]" dest="type_name [92930,92937]"/>
  <match src="identifier: onlyOwner [73113,73122]" dest="identifier: onlyOwner [72878,72887]"/>
  <match src="identifier: _pid [73170,73174]" dest="identifier: _pid [72935,72939]"/>
  <match src="address: address [51640,51647]" dest="address: address [51642,51649]"/>
  <match src=".: . [21814,21815]" dest=".: . [21814,21815]"/>
  <match src="call_argument [84121,84140]" dest="call_argument [84650,84669]"/>
  <match src="block_statement [29155,29214]" dest="block_statement [29155,29214]"/>
  <match src="(: ( [80609,80610]" dest="(: ( [81294,81295]"/>
  <match src="identifier: sub [104305,104308]" dest="identifier: sub [104229,104232]"/>
  <match src="identifier: UserInfo [99420,99428]" dest="identifier: UserInfo [97510,97518]"/>
  <match src="member_expression [83212,83241]" dest="member_expression [90391,90420]"/>
  <match src="primitive_type [103620,103627]" dest="primitive_type [103544,103551]"/>
  <match src="call_expression [78901,78937]" dest="call_expression [78409,78445]"/>
  <match src="call_expression [54125,54137]" dest="call_expression [54127,54139]"/>
  <match src=",: , [95364,95365]" dest=",: , [94512,94513]"/>
  <match src="member_expression [80341,80351]" dest="member_expression [80961,80971]"/>
  <match src="comment: // * 2^-112 [34879,34890]" dest="comment: // * 2^-112 [34879,34890]"/>
  <match src="binary_expression [89693,89764]" dest="binary_expression [90935,91006]"/>
  <match src="(: ( [36531,36532]" dest="(: ( [36531,36532]"/>
  <match src="event: event [39975,39980]" dest="event: event [39975,39980]"/>
  <match src="assignment_expression [49666,49680]" dest="assignment_expression [49668,49682]"/>
  <match src="identifier: endBlock [95169,95177]" dest="identifier: endBlock [82634,82642]"/>
  <match src="&quot;: &quot; [86631,86632]" dest="&quot;: &quot; [87919,87920]"/>
  <match src="(: ( [69518,69519]" dest="(: ( [69229,69230]"/>
  <match src="(: ( [4105,4106]" dest="(: ( [4105,4106]"/>
  <match src="&quot;: &quot; [86601,86602]" dest="&quot;: &quot; [87889,87890]"/>
  <match src="address: address [20801,20808]" dest="address: address [20801,20808]"/>
  <match src="parameter [46134,46153]" dest="parameter [46136,46155]"/>
  <match src="identifier: push [72938,72942]" dest="identifier: push [72620,72624]"/>
  <match src="member_expression [20889,20911]" dest="member_expression [20889,20911]"/>
  <match src="variable_declaration [100441,100464]" dest="variable_declaration [99784,99807]"/>
  <match src="+: + [62617,62618]" dest="+: + [62619,62620]"/>
  <match src=",: , [71362,71363]" dest=",: , [71073,71074]"/>
  <match src="uint256: uint256 [64422,64429]" dest="uint256: uint256 [64424,64431]"/>
  <match src="variable_declaration_statement [102431,102478]" dest="variable_declaration_statement [102290,102337]"/>
  <match src="expression_statement [9485,9528]" dest="expression_statement [9485,9528]"/>
  <match src="}: } [16364,16365]" dest="}: } [16364,16365]"/>
  <match src="internal: internal [27235,27243]" dest="internal: internal [27235,27243]"/>
  <match src="type_name [91081,91088]" dest="type_name [92106,92113]"/>
  <match src="parameter [5915,5924]" dest="parameter [5915,5924]"/>
  <match src="identifier: minters [59783,59790]" dest="identifier: minters [59785,59792]"/>
  <match src="type_cast_expression [35244,35263]" dest="type_cast_expression [35244,35263]"/>
  <match src="binary_expression [27786,27791]" dest="binary_expression [27786,27791]"/>
  <match src="identifier: errorMessage [10086,10098]" dest="identifier: errorMessage [10086,10098]"/>
  <match src="(: ( [15671,15672]" dest="(: ( [15671,15672]"/>
  <match src="parameter [84540,84562]" dest="parameter [85671,85693]"/>
  <match src="type_name [40690,40694]" dest="type_name [40690,40694]"/>
  <match src="else: else [19359,19363]" dest="else: else [19359,19363]"/>
  <match src="identifier: add [104184,104187]" dest="identifier: add [104108,104111]"/>
  <match src="): ) [69417,69418]" dest="): ) [69128,69129]"/>
  <match src="memory: memory [92734,92740]" dest="memory: memory [92382,92388]"/>
  <match src="identifier: userModifiedWeight [90465,90483]" dest="identifier: userModifiedWeight [91504,91522]"/>
  <match src=".: . [84107,84108]" dest=".: . [84636,84637]"/>
  <match src="primitive_type [89923,89930]" dest="primitive_type [90226,90233]"/>
  <match src="identifier: _pairInfo [108032,108041]" dest="identifier: _pairInfo [107956,107965]"/>
  <match src="(: ( [109073,109074]" dest="(: ( [108997,108998]"/>
  <match src="=: = [93037,93038]" dest="=: = [92685,92686]"/>
  <match src="primitive_type [39590,39597]" dest="primitive_type [39590,39597]"/>
  <match src="variable_declaration_statement [86777,86842]" dest="variable_declaration_statement [87932,87999]"/>
  <match src="true: true [6216,6220]" dest="true: true [6216,6220]"/>
  <match src=".: . [36491,36492]" dest=".: . [36491,36492]"/>
  <match src="identifier: target [15726,15732]" dest="identifier: target [15726,15732]"/>
  <match src="if: if [61737,61739]" dest="if: if [61739,61741]"/>
  <match src="member_expression [69354,69390]" dest="member_expression [69065,69101]"/>
  <match src="): ) [46907,46908]" dest="): ) [47149,47150]"/>
  <match src="{: { [84860,84861]" dest="{: { [85991,85992]"/>
  <match src="type_name [66113,66127]" dest="type_name [66129,66143]"/>
  <match src="identifier: fee [46385,46388]" dest="identifier: fee [46627,46630]"/>
  <match src="event_paramater [38654,38664]" dest="event_paramater [38654,38664]"/>
  <match src="=: = [49646,49647]" dest="=: = [49648,49649]"/>
  <match src="identifier: approve [22441,22448]" dest="identifier: approve [22441,22448]"/>
  <match src="parameter [98426,98438]" dest="parameter [97191,97203]"/>
  <match src="identifier: tokenToEthPairInfo [71438,71456]" dest="identifier: tokenToEthPairInfo [71149,71167]"/>
  <match src=",: , [56686,56687]" dest=",: , [56688,56689]"/>
  <match src="member_expression [61951,61960]" dest="member_expression [61953,61962]"/>
  <match src="type_name [10061,10068]" dest="type_name [10061,10068]"/>
  <match src="}: } [88911,88912]" dest="}: } [89759,89760]"/>
  <match src="primitive_type [40646,40653]" dest="primitive_type [40646,40653]"/>
  <match src="-: - [106576,106577]" dest="-: - [106500,106501]"/>
  <match src="identifier: add [102577,102580]" dest="identifier: add [102501,102504]"/>
  <match src="identifier: from [62859,62863]" dest="identifier: from [62861,62865]"/>
  <match src="uint256: uint256 [93961,93968]" dest="uint256: uint256 [93607,93614]"/>
  <match src="&quot;: &quot; [14395,14396]" dest="&quot;: &quot; [14395,14396]"/>
  <match src="call_expression [11811,11839]" dest="call_expression [11811,11839]"/>
  <match src="if: if [31602,31604]" dest="if: if [31602,31604]"/>
  <match src="primitive_type [63767,63774]" dest="primitive_type [63769,63776]"/>
  <match src="member_expression [95164,95177]" dest="member_expression [82629,82642]"/>
  <match src="else: else [107954,107958]" dest="else: else [107878,107882]"/>
  <match src="identifier: mint [40575,40579]" dest="identifier: mint [40575,40579]"/>
  <match src="(: ( [79887,79888]" dest="(: ( [80472,80473]"/>
  <match src="function_body [88586,88912]" dest="function_body [89434,89760]"/>
  <match src="parameter [51695,51702]" dest="parameter [51697,51704]"/>
  <match src="variable_declaration_statement [83371,83396]" dest="variable_declaration_statement [85155,85180]"/>
  <match src="number_literal: 1 [66008,66009]" dest="number_literal: 1 [66020,66021]"/>
  <match src="{: { [38000,38001]" dest="{: { [38000,38001]"/>
  <match src="): ) [4161,4162]" dest="): ) [4161,4162]"/>
  <match src="function: function [39438,39446]" dest="function: function [39438,39446]"/>
  <match src="number_literal: 0 [34428,34429]" dest="number_literal: 0 [34428,34429]"/>
  <match src="function_body [21311,21857]" dest="function_body [21311,21857]"/>
  <match src="call_argument [87238,87239]" dest="call_argument [88399,88400]"/>
  <match src="(: ( [23569,23570]" dest="(: ( [23569,23570]"/>
  <match src="uint: uint [39554,39558]" dest="uint: uint [39554,39558]"/>
  <match src="variable_declaration_statement [102539,102601]" dest="variable_declaration_statement [102463,102525]"/>
  <match src="parameter [20624,20637]" dest="parameter [20624,20637]"/>
  <match src="string: string [50015,50021]" dest="string: string [50017,50023]"/>
  <match src="function_definition [44438,44576]" dest="function_definition [44440,44578]"/>
  <match src="parameter [2074,2081]" dest="parameter [2074,2081]"/>
  <match src="return_type_definition [40601,40625]" dest="return_type_definition [40601,40625]"/>
  <match src="): ) [75534,75535]" dest="): ) [75050,75051]"/>
  <match src="comment: // File: @openzeppelin/contracts/math/SafeMath.sol [4413,4463]" dest="comment: // File: @openzeppelin/contracts/math/SafeMath.sol [4413,4463]"/>
  <match src="uint256: uint256 [103162,103169]" dest="uint256: uint256 [103086,103093]"/>
  <match src="identifier: target [18048,18054]" dest="identifier: target [18048,18054]"/>
  <match src="type_name [40004,40011]" dest="type_name [40004,40011]"/>
  <match src="call_argument [85750,85769]" dest="call_argument [87050,87069]"/>
  <match src=",: , [55136,55137]" dest=",: , [55138,55139]"/>
  <match src="if_statement [42128,42602]" dest="if_statement [42128,42602]"/>
  <match src="primitive_type [97021,97028]" dest="primitive_type [95786,95793]"/>
  <match src="identifier: block [105638,105643]" dest="identifier: block [105562,105567]"/>
  <match src="external: external [40863,40871]" dest="external: external [40863,40871]"/>
  <match src="false [109289,109294]" dest="false [109213,109218]"/>
  <match src=".: . [90349,90350]" dest=".: . [91422,91423]"/>
  <match src="parameter [92637,92664]" dest="parameter [92285,92312]"/>
  <match src="variable_declaration_statement [108496,108535]" dest="variable_declaration_statement [108420,108459]"/>
  <match src="type_name [20598,20604]" dest="type_name [20598,20604]"/>
  <match src="type_name [42233,42239]" dest="type_name [42233,42239]"/>
  <match src="private: private [73756,73763]" dest="private: private [73552,73559]"/>
  <match src="identifier: inviteeToSubWeight [99717,99735]" dest="identifier: inviteeToSubWeight [97909,97927]"/>
  <match src="call_argument [14336,14396]" dest="call_argument [14336,14396]"/>
  <match src="variable_declaration_statement [88598,88631]" dest="variable_declaration_statement [89446,89479]"/>
  <match src="identifier: sender [69384,69390]" dest="identifier: sender [69095,69101]"/>
  <match src="uint: uint [39664,39668]" dest="uint: uint [39664,39668]"/>
  <match src="): ) [103352,103353]" dest="): ) [103276,103277]"/>
  <match src="internal: internal [8822,8830]" dest="internal: internal [8822,8830]"/>
  <match src="identifier: wantTokenReserve [97469,97485]" dest="identifier: wantTokenReserve [96234,96250]"/>
  <match src="identifier: modifiedWeight [102754,102768]" dest="identifier: modifiedWeight [102678,102692]"/>
  <match src="=: = [79489,79490]" dest="=: = [79644,79645]"/>
  <match src="user_defined_type [98521,98535]" dest="user_defined_type [97286,97300]"/>
  <match src="primitive_type [59467,59474]" dest="primitive_type [59469,59476]"/>
  <match src="(: ( [40432,40433]" dest="(: ( [40432,40433]"/>
  <match src="uint256: uint256 [21287,21294]" dest="uint256: uint256 [21287,21294]"/>
  <match src="call_expression [87442,87459]" dest="call_expression [88603,88620]"/>
  <match src="type_name [71680,71687]" dest="type_name [71391,71398]"/>
  <match src="identifier: newEndBlock [80514,80525]" dest="identifier: newEndBlock [81199,81210]"/>
  <match src="call_expression [37413,37439]" dest="call_expression [37413,37439]"/>
  <match src="identifier: _x [38318,38320]" dest="identifier: _x [38318,38320]"/>
  <match src="type_name [34636,34645]" dest="type_name [34636,34645]"/>
  <match src="primitive_type [69679,69686]" dest="primitive_type [69390,69397]"/>
  <match src="function_definition [34551,35839]" dest="function_definition [34551,35839]"/>
  <match src="(: ( [67012,67013]" dest="(: ( [67265,67266]"/>
  <match src="identifier: self [37732,37736]" dest="identifier: self [37732,37736]"/>
  <match src="number_literal: 0 [71327,71328]" dest="number_literal: 0 [71038,71039]"/>
  <match src="(: ( [39985,39986]" dest="(: ( [39985,39986]"/>
  <match src="type_name [72300,72307]" dest="type_name [74086,74093]"/>
  <match src=",: , [6292,6293]" dest=",: , [6292,6293]"/>
  <match src="for: for [63096,63099]" dest="for: for [63098,63101]"/>
  <match src="call_expression [90436,90484]" dest="call_expression [91487,91523]"/>
  <match src="memory: memory [92779,92785]" dest="memory: memory [92427,92433]"/>
  <match src="}: } [30787,30788]" dest="}: } [30787,30788]"/>
  <match src=".: . [36262,36263]" dest=".: . [36262,36263]"/>
  <match src="call_argument [88877,88885]" dest="call_argument [89725,89733]"/>
  <match src="call_argument [76233,76245]" dest="call_argument [75749,75761]"/>
  <match src="[: [ [47341,47342]" dest="[: [ [47343,47344]"/>
  <match src="parameter [27931,27940]" dest="parameter [27931,27940]"/>
  <match src="type_name [64313,64340]" dest="type_name [64315,64342]"/>
  <match src="parameter [42796,42811]" dest="parameter [42796,42811]"/>
  <match src="identifier: sub [72352,72355]" dest="identifier: sub [72107,72110]"/>
  <match src="function_body [5655,5733]" dest="function_body [5655,5733]"/>
  <match src="call_expression [83743,83791]" dest="call_expression [85475,85523]"/>
  <match src="[: [ [92731,92732]" dest="[: [ [92379,92380]"/>
  <match src="identifier: _balances [55088,55097]" dest="identifier: _balances [55090,55099]"/>
  <match src="override: override [86549,86557]" dest="override: override [87837,87845]"/>
  <match src=",: , [68788,68789]" dest=",: , [68551,68552]"/>
  <match src="identifier: burn [59637,59641]" dest="identifier: burn [59639,59643]"/>
  <match src="block_statement [31943,31976]" dest="block_statement [31943,31976]"/>
  <match src="type_name [66635,66642]" dest="type_name [66888,66895]"/>
  <match src="}: } [74868,74869]" dest="}: } [74739,74740]"/>
  <match src="comment: /**      * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.      *      * This internal function is equivalent to `approve`, and can be used to      * e.g. set automatic allowances for certain subsystems, etc.      *      * Emits an {Approval} event.      *      * Requirements:      *      * - `owner` cannot be the zero address.      * - `spender` cannot be the zero address.      */ [56723,57147]" dest="comment: /**      * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.      *      * This internal function is equivalent to `approve`, and can be used to      * e.g. set automatic allowances for certain subsystems, etc.      *      * Emits an {Approval} event.      *      * Requirements:      *      * - `owner` cannot be the zero address.      * - `spender` cannot be the zero address.      */ [56725,57149]"/>
  <match src="}: } [90626,90627]" dest="}: } [91651,91652]"/>
  <match src="number_literal: 2 [34369,34370]" dest="number_literal: 2 [34369,34370]"/>
  <match src="solidity_version_comparison_operator [19999,20001]" dest="solidity_version_comparison_operator [19999,20001]"/>
  <match src="(: ( [60243,60244]" dest="(: ( [60245,60246]"/>
  <match src="block_statement [30377,30436]" dest="block_statement [30377,30436]"/>
  <match src="number_literal: 1 [32148,32149]" dest="number_literal: 1 [32148,32149]"/>
  <match src="call_argument [36034,36046]" dest="call_argument [36034,36046]"/>
  <match src="(: ( [26812,26813]" dest="(: ( [26812,26813]"/>
  <match src="uint: uint [40500,40504]" dest="uint: uint [40500,40504]"/>
  <match src="type_name [28983,28990]" dest="type_name [28983,28990]"/>
  <match src="variable_declaration [29883,29893]" dest="variable_declaration [29883,29893]"/>
  <match src="uint256: uint256 [62231,62238]" dest="uint256: uint256 [62233,62240]"/>
  <match src="uint256: uint256 [46289,46296]" dest="uint256: uint256 [46291,46298]"/>
  <match src="member_expression [36953,36973]" dest="member_expression [36953,36973]"/>
  <match src="false [70405,70410]" dest="false [70116,70121]"/>
  <match src="identifier: _pid [82773,82777]" dest="identifier: _pid [83611,83615]"/>
  <match src="(: ( [89158,89159]" dest="(: ( [90083,90084]"/>
  <match src="new: new [88652,88655]" dest="new: new [89500,89503]"/>
  <match src="comment: /**      * @dev Performs a Solidity function call using a low level `call`. A      * plain`call` is an unsafe replacement for a function call: use this      * function instead.      *      * If `target` reverts with a revert reason, it is bubbled up by this      * function (like regular Solidity function calls).      *      * Returns the raw returned data. To convert to the expected return value,      * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].      *      * Requirements:      *      * - `target` must be a contract.      * - calling `target` with `data` must not revert.      *      * _Available since v3.1._      */ [14413,15160]" dest="comment: /**      * @dev Performs a Solidity function call using a low level `call`. A      * plain`call` is an unsafe replacement for a function call: use this      * function instead.      *      * If `target` reverts with a revert reason, it is bubbled up by this      * function (like regular Solidity function calls).      *      * Returns the raw returned data. To convert to the expected return value,      * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].      *      * Requirements:      *      * - `target` must be a contract.      * - calling `target` with `data` must not revert.      *      * _Available since v3.1._      */ [14413,15160]"/>
  <match src="): ) [31510,31511]" dest="): ) [31510,31511]"/>
  <match src="string [7766,7798]" dest="string [7766,7798]"/>
  <match src="member_expression [96277,96289]" dest="member_expression [95587,95599]"/>
  <match src="identifier: blockTimestampLast [40352,40370]" dest="identifier: blockTimestampLast [40352,40370]"/>
  <match src="function_body [44174,44430]" dest="function_body [44176,44432]"/>
  <match src="(: ( [87570,87571]" dest="(: ( [88731,88732]"/>
  <match src="expression_statement [29458,29466]" dest="expression_statement [29458,29466]"/>
  <match src="number_literal: 0 [9497,9498]" dest="number_literal: 0 [9497,9498]"/>
  <match src="call_argument [22001,22014]" dest="call_argument [22001,22014]"/>
  <match src="return_type_definition [24441,24463]" dest="return_type_definition [24441,24463]"/>
  <match src="function_definition [56297,56715]" dest="function_definition [56299,56717]"/>
  <match src="assignment_expression [107879,107927]" dest="assignment_expression [107803,107851]"/>
</matches>
<actions>
  <insert-node tree="state_variable_declaration [66459,66503]" parent="contract_body [63042,108539]" at="57"/>
  <insert-node tree="struct_declaration [66509,66599]" parent="contract_body [63042,108539]" at="58"/>
  <insert-node tree="state_variable_declaration [66605,66684]" parent="contract_body [63042,108539]" at="59"/>
  <insert-node tree="struct_declaration [80017,80231]" parent="contract_body [63042,108539]" at="83"/>
  <insert-node tree="function_definition [85046,85634]" parent="contract_body [63042,108539]" at="89"/>
  <insert-node tree="function_definition [98780,99548]" parent="contract_body [63042,108539]" at="111"/>
  <move-tree tree="if_statement [46930,47160]" parent="function_body [46280,47204]" at="2"/>
  <insert-tree tree="visibility [66144,66152]" parent="state_variable_declaration [66129,66163]" at="1"/>
  <move-tree tree="visibility [101830,101838]" parent="state_variable_declaration [66169,66219]" at="1"/>
  <insert-tree tree="type_name [66459,66486]" parent="state_variable_declaration [66459,66503]" at="0"/>
  <move-tree tree="visibility [66179,66185]" parent="state_variable_declaration [66459,66503]" at="1"/>
  <insert-node tree="identifier: poolAccs [66494,66502]" parent="state_variable_declaration [66459,66503]" at="2"/>
  <insert-node tree="struct: struct [66509,66515]" parent="struct_declaration [66509,66599]" at="0"/>
  <insert-node tree="identifier: UserRevenueInfo [66516,66531]" parent="struct_declaration [66509,66599]" at="1"/>
  <insert-node tree="{: { [66532,66533]" parent="struct_declaration [66509,66599]" at="2"/>
  <insert-node tree="struct_member [66543,66566]" parent="struct_declaration [66509,66599]" at="3"/>
  <insert-node tree="struct_member [66576,66592]" parent="struct_declaration [66509,66599]" at="4"/>
  <insert-node tree="}: } [66598,66599]" parent="struct_declaration [66509,66599]" at="5"/>
  <insert-tree tree="type_name [66605,66660]" parent="state_variable_declaration [66605,66684]" at="0"/>
  <move-tree tree="visibility [66128,66134]" parent="state_variable_declaration [66605,66684]" at="1"/>
  <insert-node tree="identifier: userRevenueInfo [66668,66683]" parent="state_variable_declaration [66605,66684]" at="2"/>
  <move-tree tree="visibility [75123,75131]" parent="function_definition [67246,68575]" at="15"/>
  <move-tree tree="expression_statement [68046,68075]" parent="function_body [67476,68575]" at="11"/>
  <move-tree tree="variable_declaration_statement [71916,71974]" parent="function_body [71616,72816]" at="4"/>
  <insert-node tree=",: , [73519,73520]" parent="function_definition [73478,74931]" at="4"/>
  <move-tree tree="parameter [75089,75115]" parent="function_definition [73478,74931]" at="5"/>
  <move-tree tree="variable_declaration_statement [78811,78863]" parent="function_body [77407,78734]" at="2"/>
  <move-tree tree="variable_declaration_statement [79510,79562]" parent="function_body [78813,80009]" at="2"/>
  <insert-node tree="struct: struct [80017,80023]" parent="struct_declaration [80017,80231]" at="0"/>
  <insert-node tree="identifier: InvitationRelationParam [80024,80047]" parent="struct_declaration [80017,80231]" at="1"/>
  <insert-node tree="{: { [80048,80049]" parent="struct_declaration [80017,80231]" at="2"/>
  <insert-node tree="struct_member [80059,80071]" parent="struct_declaration [80017,80231]" at="3"/>
  <insert-node tree="struct_member [80081,80094]" parent="struct_declaration [80017,80231]" at="4"/>
  <insert-node tree="struct_member [80104,80122]" parent="struct_declaration [80017,80231]" at="5"/>
  <insert-node tree="struct_member [80132,80157]" parent="struct_declaration [80017,80231]" at="6"/>
  <insert-node tree="struct_member [80167,80192]" parent="struct_declaration [80017,80231]" at="7"/>
  <insert-node tree="struct_member [80202,80224]" parent="struct_declaration [80017,80231]" at="8"/>
  <insert-node tree="}: } [80230,80231]" parent="struct_declaration [80017,80231]" at="9"/>
  <insert-node tree="function: function [85046,85054]" parent="function_definition [85046,85634]" at="0"/>
  <insert-node tree="identifier: dividendBonus [85055,85068]" parent="function_definition [85046,85634]" at="1"/>
  <insert-node tree="(: ( [85068,85069]" parent="function_definition [85046,85634]" at="2"/>
  <move-tree tree="parameter [94716,94728]" parent="function_definition [85046,85634]" at="3"/>
  <insert-node tree=",: , [85081,85082]" parent="function_definition [85046,85634]" at="4"/>
  <insert-tree tree="parameter [85083,85099]" parent="function_definition [85046,85634]" at="5"/>
  <insert-node tree=",: , [85099,85100]" parent="function_definition [85046,85634]" at="6"/>
  <move-tree tree="parameter [96397,96412]" parent="function_definition [85046,85634]" at="7"/>
  <insert-node tree=",: , [85116,85117]" parent="function_definition [85046,85634]" at="8"/>
  <move-tree tree="parameter [101871,101883]" parent="function_definition [85046,85634]" at="9"/>
  <insert-node tree="): ) [85134,85135]" parent="function_definition [85046,85634]" at="10"/>
  <move-tree tree="visibility [94754,94761]" parent="function_definition [85046,85634]" at="11"/>
  <insert-node tree="function_body [85144,85634]" parent="function_definition [85046,85634]" at="12"/>
  <move-tree tree="parameter [86722,86738]" parent="function_definition [87776,88409]" at="3"/>
  <move-tree tree="variable_declaration_statement [89923,89941]" parent="function_body [89887,91652]" at="5"/>
  <move-tree tree="if_statement [90036,90187]" parent="function_body [89887,91652]" at="6"/>
  <move-tree tree="parameter [94730,94743]" parent="function_definition [97144,98772]" at="5"/>
  <move-tree tree="visibility [96480,96487]" parent="function_definition [97144,98772]" at="10"/>
  <insert-node tree="function: function [98780,98788]" parent="function_definition [98780,99548]" at="0"/>
  <insert-node tree="identifier: cancleInvitation [98789,98805]" parent="function_definition [98780,99548]" at="1"/>
  <insert-node tree="(: ( [98805,98806]" parent="function_definition [98780,99548]" at="2"/>
  <insert-tree tree="parameter [98806,98851]" parent="function_definition [98780,99548]" at="3"/>
  <insert-node tree=",: , [98851,98852]" parent="function_definition [98780,99548]" at="4"/>
  <move-tree tree="parameter [98449,98462]" parent="function_definition [98780,99548]" at="5"/>
  <insert-node tree="): ) [98866,98867]" parent="function_definition [98780,99548]" at="6"/>
  <move-tree tree="visibility [98502,98509]" parent="function_definition [98780,99548]" at="7"/>
  <insert-node tree="function_body [98875,99548]" parent="function_definition [98780,99548]" at="8"/>
  <insert-tree tree="parameter [99600,99632]" parent="function_definition [99556,102181]" at="3"/>
  <insert-node tree="internal: internal [43975,43983]" parent="visibility [43975,43983]" at="0"/>
  <insert-node tree="internal: internal [64566,64574]" parent="visibility [64566,64574]" at="0"/>
  <insert-node tree="internal: internal [64673,64681]" parent="visibility [64673,64681]" at="0"/>
  <insert-node tree="internal: internal [64783,64791]" parent="visibility [64783,64791]" at="0"/>
  <insert-node tree="internal: internal [64918,64926]" parent="visibility [64918,64926]" at="0"/>
  <insert-node tree="internal: internal [65993,66001]" parent="visibility [65993,66001]" at="0"/>
  <insert-node tree="internal: internal [66036,66044]" parent="visibility [66036,66044]" at="0"/>
  <insert-node tree="internal: internal [66081,66089]" parent="visibility [66081,66089]" at="0"/>
  <move-tree tree="type_name [100269,100276]" parent="struct_member [66543,66566]" at="0"/>
  <insert-node tree="identifier: userRewardDebt [66551,66565]" parent="struct_member [66543,66566]" at="1"/>
  <move-tree tree="type_name [100236,100243]" parent="struct_member [66576,66592]" at="0"/>
  <insert-node tree="identifier: revenue [66584,66591]" parent="struct_member [66576,66592]" at="1"/>
  <move-tree tree="expression_statement [68141,68857]" parent="function_body [67476,68575]" at="18"/>
  <insert-tree tree="expression_statement [71670,71741]" parent="function_body [71616,72816]" at="2"/>
  <move-tree tree="expression_statement [72928,72996]" parent="function_body [71616,72816]" at="7"/>
  <move-tree tree="expression_statement [73006,73044]" parent="function_body [71616,72816]" at="8"/>
  <insert-node tree="expression_statement [72736,72773]" parent="function_body [71616,72816]" at="8"/>
  <update-node tree="identifier: _reserveMintWeight [75097,75115]" label="_undistributeDividend"/>
  <insert-node tree="variable_declaration_statement [77467,77517]" parent="function_body [77407,78734]" at="2"/>
  <insert-node tree="if_statement [77589,77836]" parent="function_body [77407,78734]" at="4"/>
  <move-tree tree="if_statement [77119,77185]" parent="function_body [77407,78734]" at="6"/>
  <insert-node tree="expression_statement [78456,78500]" parent="function_body [77407,78734]" at="11"/>
  <insert-node tree="if_statement [78510,78675]" parent="function_body [77407,78734]" at="12"/>
  <insert-tree tree="expression_statement [78685,78727]" parent="function_body [77407,78734]" at="13"/>
  <move-tree tree="variable_declaration_statement [77811,77855]" parent="function_body [78813,80009]" at="3"/>
  <insert-tree tree="if_statement [78990,79234]" parent="function_body [78813,80009]" at="4"/>
  <insert-node tree="expression_statement [79732,79776]" parent="function_body [78813,80009]" at="10"/>
  <insert-tree tree="if_statement [79786,79953]" parent="function_body [78813,80009]" at="11"/>
  <insert-tree tree="expression_statement [79963,80002]" parent="function_body [78813,80009]" at="12"/>
  <move-tree tree="type_name [75054,75061]" parent="struct_member [80059,80071]" at="0"/>
  <insert-node tree="identifier: pid [80067,80070]" parent="struct_member [80059,80071]" at="1"/>
  <move-tree tree="type_name [86740,86747]" parent="struct_member [80081,80094]" at="0"/>
  <insert-node tree="identifier: user [80089,80093]" parent="struct_member [80081,80094]" at="1"/>
  <move-tree tree="type_name [88031,88038]" parent="struct_member [80104,80122]" at="0"/>
  <insert-node tree="identifier: addWeight [80112,80121]" parent="struct_member [80104,80122]" at="1"/>
  <move-tree tree="type_name [100201,100208]" parent="struct_member [80132,80157]" at="0"/>
  <insert-node tree="identifier: addInvitorWeight [80140,80156]" parent="struct_member [80132,80157]" at="1"/>
  <move-tree tree="type_name [100166,100173]" parent="struct_member [80167,80192]" at="0"/>
  <insert-node tree="identifier: addInviteeWeight [80175,80191]" parent="struct_member [80167,80192]" at="1"/>
  <move-tree tree="type_name [96455,96462]" parent="struct_member [80202,80224]" at="0"/>
  <insert-node tree="identifier: existedAmount [80210,80223]" parent="struct_member [80202,80224]" at="1"/>
  <insert-tree tree="expression_statement [80772,80797]" parent="function_body [80454,83205]" at="6"/>
  <insert-node tree="comment: // Relieves stack pressure [81072,81098]" parent="function_body [80454,83205]" at="12"/>
  <move-tree tree="expression_statement [95013,95035]" parent="function_body [80454,83205]" at="13"/>
  <insert-tree tree="expression_statement [82156,82169]" parent="function_body [80454,83205]" at="17"/>
  <insert-tree tree="expression_statement [82179,82199]" parent="function_body [80454,83205]" at="18"/>
  <insert-node tree="expression_statement [82209,82262]" parent="function_body [80454,83205]" at="19"/>
  <insert-node tree="expression_statement [82272,82372]" parent="function_body [80454,83205]" at="20"/>
  <insert-node tree="expression_statement [82382,82482]" parent="function_body [80454,83205]" at="21"/>
  <insert-tree tree="expression_statement [82492,82520]" parent="function_body [80454,83205]" at="22"/>
  <insert-node tree="expression_statement [82530,82573]" parent="function_body [80454,83205]" at="23"/>
  <move-tree tree="expression_statement [95045,95079]" parent="function_body [80454,83205]" at="24"/>
  <move-tree tree="expression_statement [95152,95178]" parent="function_body [80454,83205]" at="25"/>
  <insert-tree tree="variable_declaration_statement [83923,84001]" parent="function_body [83306,85038]" at="11"/>
  <move-tree tree="variable_declaration_statement [83194,83276]" parent="function_body [83306,85038]" at="13"/>
  <insert-tree tree="expression_statement [84080,84136]" parent="function_body [83306,85038]" at="13"/>
  <insert-tree tree="expression_statement [84146,84195]" parent="function_body [83306,85038]" at="14"/>
  <insert-tree tree="expression_statement [84205,84235]" parent="function_body [83306,85038]" at="15"/>
  <update-node tree="identifier: success [101876,101883]" label="_isContract"/>
  <insert-node tree="{: { [85144,85145]" parent="function_body [85144,85634]" at="0"/>
  <move-tree tree="variable_declaration_statement [83371,83396]" parent="function_body [85144,85634]" at="1"/>
  <move-tree tree="variable_declaration_statement [83410,83430]" parent="function_body [85144,85634]" at="2"/>
  <insert-node tree="expression_statement [85220,85320]" parent="function_body [85144,85634]" at="3"/>
  <move-tree tree="if_statement [83582,83691]" parent="function_body [85144,85634]" at="4"/>
  <move-tree tree="if_statement [83705,83807]" parent="function_body [85144,85634]" at="5"/>
  <move-tree tree="if_statement [83821,83909]" parent="function_body [85144,85634]" at="6"/>
  <insert-node tree="}: } [85633,85634]" parent="function_body [85144,85634]" at="7"/>
  <insert-node tree="expression_statement [87203,87289]" parent="function_body [86593,87768]" at="10"/>
  <move-tree tree="expression_statement [92359,92405]" parent="function_body [86593,87768]" at="11"/>
  <move-tree tree="variable_declaration_statement [86777,86842]" parent="function_body [87846,88409]" at="2"/>
  <move-tree tree="expression_statement [86852,86904]" parent="function_body [87846,88409]" at="3"/>
  <move-tree tree="expression_statement [86914,86936]" parent="function_body [87846,88409]" at="4"/>
  <move-tree tree="variable_declaration_statement [86946,87011]" parent="function_body [87846,88409]" at="5"/>
  <move-tree tree="expression_statement [87021,87085]" parent="function_body [87846,88409]" at="6"/>
  <move-tree tree="expression_statement [87095,87122]" parent="function_body [87846,88409]" at="7"/>
  <move-tree tree="expression_statement [87174,87241]" parent="function_body [87846,88409]" at="9"/>
  <insert-tree tree="variable_declaration_statement [90003,90070]" parent="function_body [89887,91652]" at="3"/>
  <insert-tree tree="expression_statement [90475,90506]" parent="function_body [89887,91652]" at="8"/>
  <insert-node tree="expression_statement [90516,90599]" parent="function_body [89887,91652]" at="9"/>
  <insert-tree tree="expression_statement [90609,90661]" parent="function_body [89887,91652]" at="10"/>
  <move-tree tree="variable_declaration_statement [85903,85990]" parent="function_body [97275,98772]" at="7"/>
  <insert-tree tree="variable_declaration_statement [98133,98232]" parent="function_body [97275,98772]" at="11"/>
  <insert-tree tree="variable_declaration_statement [98242,98302]" parent="function_body [97275,98772]" at="12"/>
  <insert-tree tree="expression_statement [98312,98379]" parent="function_body [97275,98772]" at="13"/>
  <insert-node tree="expression_statement [98389,98458]" parent="function_body [97275,98772]" at="14"/>
  <insert-tree tree="expression_statement [98468,98538]" parent="function_body [97275,98772]" at="15"/>
  <insert-tree tree="expression_statement [98548,98636]" parent="function_body [97275,98772]" at="16"/>
  <insert-node tree="{: { [98875,98876]" parent="function_body [98875,99548]" at="0"/>
  <move-tree tree="expression_statement [98676,98718]" parent="function_body [98875,99548]" at="1"/>
  <move-tree tree="variable_declaration_statement [98732,98848]" parent="function_body [98875,99548]" at="2"/>
  <move-tree tree="variable_declaration_statement [98862,98931]" parent="function_body [98875,99548]" at="3"/>
  <move-tree tree="variable_declaration_statement [98945,99009]" parent="function_body [98875,99548]" at="4"/>
  <move-tree tree="variable_declaration_statement [99023,99113]" parent="function_body [98875,99548]" at="5"/>
  <move-tree tree="expression_statement [99127,99194]" parent="function_body [98875,99548]" at="6"/>
  <move-tree tree="expression_statement [99208,99268]" parent="function_body [98875,99548]" at="7"/>
  <move-tree tree="expression_statement [99282,99336]" parent="function_body [98875,99548]" at="8"/>
  <move-tree tree="expression_statement [99350,99389]" parent="function_body [98875,99548]" at="9"/>
  <insert-node tree="}: } [99547,99548]" parent="function_body [98875,99548]" at="10"/>
  <insert-tree tree="variable_declaration_statement [99658,99698]" parent="function_body [99647,102181]" at="1"/>
  <move-tree tree="variable_declaration_statement [101955,101993]" parent="function_body [99647,102181]" at="5"/>
  <insert-node tree="variable_declaration_statement [99934,99982]" parent="function_body [99647,102181]" at="5"/>
  <move-tree tree="variable_declaration_statement [82889,82938]" parent="function_body [99647,102181]" at="7"/>
  <insert-tree tree="variable_declaration_statement [100045,100120]" parent="function_body [99647,102181]" at="7"/>
  <move-tree tree="variable_declaration_statement [86000,86075]" parent="function_body [99647,102181]" at="9"/>
  <insert-tree tree="expression_statement [100594,100667]" parent="function_body [99647,102181]" at="10"/>
  <insert-tree tree="expression_statement [100677,100732]" parent="function_body [99647,102181]" at="11"/>
  <insert-tree tree="expression_statement [102039,102124]" parent="function_body [99647,102181]" at="13"/>
  <insert-tree tree="if_statement [102347,102402]" parent="function_body [102279,102700]" at="2"/>
  <insert-node tree="number_literal: 0 [71828,71829]" parent="variable_declaration_statement [71808,71830]" at="2"/>
  <move-tree tree="expression_statement [72212,72230]" parent="block_statement [71863,72600]" at="2"/>
  <insert-node tree="call_expression [72736,72772]" parent="expression_statement [72736,72773]" at="0"/>
  <update-node tree="identifier: farmMint [78107,78115]" label="totalReward"/>
  <move-tree tree="variable_declaration [77660,77676]" parent="variable_declaration_statement [77467,77517]" at="0"/>
  <insert-node tree="=: = [77500,77501]" parent="variable_declaration_statement [77467,77517]" at="1"/>
  <insert-tree tree="array_access [77502,77516]" parent="variable_declaration_statement [77467,77517]" at="2"/>
  <insert-node tree="if: if [77589,77591]" parent="if_statement [77589,77836]" at="0"/>
  <insert-node tree="(: ( [77591,77592]" parent="if_statement [77589,77836]" at="1"/>
  <insert-tree tree="binary_expression [77592,77673]" parent="if_statement [77589,77836]" at="2"/>
  <insert-node tree="): ) [77673,77674]" parent="if_statement [77589,77836]" at="3"/>
  <insert-node tree="block_statement [77674,77836]" parent="if_statement [77589,77836]" at="4"/>
  <insert-node tree="assignment_expression [78456,78499]" parent="expression_statement [78456,78500]" at="0"/>
  <insert-node tree="if: if [78510,78512]" parent="if_statement [78510,78675]" at="0"/>
  <insert-node tree="(: ( [78512,78513]" parent="if_statement [78510,78675]" at="1"/>
  <insert-node tree="binary_expression [78513,78538]" parent="if_statement [78510,78675]" at="2"/>
  <insert-node tree="): ) [78538,78539]" parent="if_statement [78510,78675]" at="3"/>
  <insert-tree tree="block_statement [78539,78675]" parent="if_statement [78510,78675]" at="4"/>
  <insert-tree tree="array_access [78967,78978]" parent="variable_declaration_statement [78932,78979]" at="2"/>
  <insert-node tree="assignment_expression [79732,79775]" parent="expression_statement [79732,79776]" at="0"/>
  <insert-tree tree="variable_declaration [81037,81069]" parent="variable_declaration_statement [81037,81070]" at="0"/>
  <insert-node tree="assignment_expression [82209,82261]" parent="expression_statement [82209,82262]" at="0"/>
  <insert-node tree="assignment_expression [82272,82371]" parent="expression_statement [82272,82372]" at="0"/>
  <insert-node tree="assignment_expression [82382,82481]" parent="expression_statement [82382,82482]" at="0"/>
  <insert-node tree="assignment_expression [82530,82572]" parent="expression_statement [82530,82573]" at="0"/>
  <move-tree tree="=: = [95059,95060]" parent="assignment_expression [82583,82618]" at="2"/>
  <move-tree tree="identifier: _originWeight [95045,95058]" parent="assignment_expression [82583,82618]" at="2"/>
  <move-tree tree="=: = [95162,95163]" parent="assignment_expression [82629,82656]" at="2"/>
  <move-tree tree="identifier: _endBlock [95152,95161]" parent="assignment_expression [82629,82656]" at="2"/>
  <insert-node tree="call_expression [84029,84069]" parent="variable_declaration_statement [84011,84070]" at="2"/>
  <move-tree tree="binary_expression [83824,83835]" parent="if_statement [84245,84444]" at="2"/>
  <insert-node tree="assignment_expression [85220,85319]" parent="expression_statement [85220,85320]" at="0"/>
  <insert-tree tree="binary_expression [85548,85560]" parent="if_statement [85545,85627]" at="2"/>
  <insert-node tree="assignment_expression [87203,87288]" parent="expression_statement [87203,87289]" at="0"/>
  <move-tree tree="=: = [92385,92386]" parent="assignment_expression [87299,87366]" at="2"/>
  <insert-node tree="=: = [90258,90259]" parent="variable_declaration_statement [90226,90275]" at="1"/>
  <insert-tree tree="array_access [90260,90274]" parent="variable_declaration_statement [90226,90275]" at="2"/>
  <insert-node tree="block_statement [90350,90465]" parent="if_statement [90285,90465]" at="4"/>
  <insert-node tree="assignment_expression [90516,90598]" parent="expression_statement [90516,90599]" at="0"/>
  <insert-node tree="call_expression [97831,97890]" parent="variable_declaration_statement [97799,97891]" at="2"/>
  <insert-node tree="assignment_expression [98389,98457]" parent="expression_statement [98389,98458]" at="0"/>
  <insert-node tree="call_expression [99810,99848]" parent="variable_declaration_statement [99784,99849]" at="2"/>
  <insert-tree tree="call_expression [99887,99923]" parent="variable_declaration_statement [99859,99924]" at="2"/>
  <insert-node tree="variable_declaration [99934,99955]" parent="variable_declaration_statement [99934,99982]" at="0"/>
  <insert-node tree="=: = [99956,99957]" parent="variable_declaration_statement [99934,99982]" at="1"/>
  <insert-tree tree="array_access [99958,99981]" parent="variable_declaration_statement [99934,99982]" at="2"/>
  <insert-tree tree="array_access [100019,100034]" parent="variable_declaration_statement [99992,100035]" at="2"/>
  <insert-node tree="else: else [100447,100451]" parent="if_statement [100162,100584]" at="5"/>
  <insert-tree tree="block_statement [100451,100584]" parent="if_statement [100162,100584]" at="6"/>
  <move-tree tree="type_name [73824,73831]" parent="variable_declaration [71808,71825]" at="0"/>
  <update-node tree="identifier: isDescriptionLeagal [71921,71940]" label="addReward"/>
  <move-tree tree="variable_declaration_statement [100317,100356]" parent="block_statement [71863,72600]" at="1"/>
  <insert-node tree="expression_statement [72129,72181]" parent="block_statement [71863,72600]" at="5"/>
  <insert-node tree="expression_statement [72335,72411]" parent="block_statement [71863,72600]" at="9"/>
  <insert-tree tree="if_statement [72425,72589]" parent="block_statement [71863,72600]" at="10"/>
  <insert-node tree="identifier: dealEvilPoolDiviend [72736,72755]" parent="call_expression [72736,72772]" at="0"/>
  <insert-node tree="(: ( [72755,72756]" parent="call_expression [72736,72772]" at="1"/>
  <move-tree tree="call_argument [72714,72718]" parent="call_expression [72736,72772]" at="2"/>
  <insert-node tree=",: , [72760,72761]" parent="call_expression [72736,72772]" at="3"/>
  <insert-tree tree="call_argument [72762,72771]" parent="call_expression [72736,72772]" at="4"/>
  <insert-node tree="): ) [72771,72772]" parent="call_expression [72736,72772]" at="5"/>
  <update-node tree="identifier: undistributeDividend [73895,73915]" label="_undistributeDividend"/>
  <insert-tree tree="call_expression [74871,74923]" parent="assignment_expression [74843,74923]" at="2"/>
  <update-node tree="identifier: farmMint [77668,77676]" label="accumulativeSHDPerWeight"/>
  <insert-node tree="{: { [77674,77675]" parent="block_statement [77674,77836]" at="0"/>
  <move-tree tree="expression_statement [89372,89419]" parent="block_statement [77674,77836]" at="1"/>
  <insert-tree tree="expression_statement [77783,77825]" parent="block_statement [77674,77836]" at="2"/>
  <insert-node tree="}: } [77835,77836]" parent="block_statement [77674,77836]" at="3"/>
  <insert-node tree="identifier: existedDividend [78391,78406]" parent="assignment_expression [78391,78445]" at="0"/>
  <move-tree tree="member_expression [78873,78898]" parent="assignment_expression [78456,78499]" at="0"/>
  <insert-node tree="=: = [78482,78483]" parent="assignment_expression [78456,78499]" at="1"/>
  <insert-node tree="identifier: existedDividend [78484,78499]" parent="assignment_expression [78456,78499]" at="2"/>
  <move-tree tree="member_expression [100467,100488]" parent="binary_expression [78513,78538]" at="0"/>
  <insert-node tree="&gt;: &gt; [78535,78536]" parent="binary_expression [78513,78538]" at="1"/>
  <insert-node tree="number_literal: 0 [78537,78538]" parent="binary_expression [78513,78538]" at="2"/>
  <update-node tree="identifier: reserve [77819,77826]" label="accumulativeSHDPerWeight"/>
  <update-node tree="identifier: getModifiedRewardToken [79173,79195]" label="getRewardToken"/>
  <insert-node tree="identifier: existedDividend [79665,79680]" parent="assignment_expression [79665,79721]" at="0"/>
  <move-tree tree="member_expression [79572,79597]" parent="assignment_expression [79732,79775]" at="0"/>
  <insert-node tree="=: = [79758,79759]" parent="assignment_expression [79732,79775]" at="1"/>
  <insert-node tree="identifier: existedDividend [79760,79775]" parent="assignment_expression [79732,79775]" at="2"/>
  <insert-tree tree="member_expression [81108,81123]" parent="assignment_expression [81108,81137]" at="0"/>
  <insert-tree tree="member_expression [81295,81310]" parent="binary_expression [81295,81314]" at="0"/>
  <insert-tree tree="member_expression [82209,82220]" parent="assignment_expression [82209,82261]" at="0"/>
  <insert-node tree="=: = [82221,82222]" parent="assignment_expression [82209,82261]" at="1"/>
  <insert-node tree="call_expression [82223,82261]" parent="assignment_expression [82209,82261]" at="2"/>
  <insert-tree tree="member_expression [82272,82290]" parent="assignment_expression [82272,82371]" at="0"/>
  <insert-node tree="=: = [82291,82292]" parent="assignment_expression [82272,82371]" at="1"/>
  <insert-node tree="call_expression [82293,82371]" parent="assignment_expression [82272,82371]" at="2"/>
  <insert-tree tree="member_expression [82382,82400]" parent="assignment_expression [82382,82481]" at="0"/>
  <insert-node tree="=: = [82401,82402]" parent="assignment_expression [82382,82481]" at="1"/>
  <insert-node tree="call_expression [82403,82481]" parent="assignment_expression [82382,82481]" at="2"/>
  <move-tree tree="member_expression [80441,80452]" parent="assignment_expression [82530,82572]" at="0"/>
  <insert-node tree="=: = [82542,82543]" parent="assignment_expression [82530,82572]" at="1"/>
  <insert-node tree="call_expression [82544,82572]" parent="assignment_expression [82530,82572]" at="2"/>
  <update-node tree="identifier: _originWeight [95045,95058]" label="newOriginWeight"/>
  <update-node tree="identifier: _endBlock [95152,95161]" label="newEndBlock"/>
  <insert-node tree="member_expression [84029,84063]" parent="call_expression [84029,84069]" at="0"/>
  <insert-node tree="(: ( [84063,84064]" parent="call_expression [84029,84069]" at="1"/>
  <insert-tree tree="call_argument [84064,84068]" parent="call_expression [84029,84069]" at="2"/>
  <insert-node tree="): ) [84068,84069]" parent="call_expression [84029,84069]" at="3"/>
  <insert-tree tree="tuple_expression [85220,85261]" parent="assignment_expression [85220,85319]" at="0"/>
  <insert-node tree="=: = [85262,85263]" parent="assignment_expression [85220,85319]" at="1"/>
  <insert-node tree="call_expression [85264,85319]" parent="assignment_expression [85220,85319]" at="2"/>
  <insert-tree tree="if_statement [86097,86252]" parent="block_statement [85991,86297]" at="2"/>
  <insert-tree tree="member_expression [87203,87226]" parent="assignment_expression [87203,87288]" at="0"/>
  <insert-node tree="=: = [87227,87228]" parent="assignment_expression [87203,87288]" at="1"/>
  <move-tree tree="call_expression [85936,85989]" parent="assignment_expression [87203,87288]" at="2"/>
  <move-tree tree="call_expression [86033,86074]" parent="assignment_expression [87299,87366]" at="3"/>
  <insert-tree tree="member_expression [87381,87398]" parent="binary_expression [87381,87425]" at="0"/>
  <insert-tree tree="member_expression [87402,87425]" parent="binary_expression [87381,87425]" at="2"/>
  <insert-tree tree="member_expression [87987,87997]" parent="array_access [87965,87998]" at="2"/>
  <move-tree tree="member_expression [87132,87153]" parent="call_expression [88289,88322]" at="0"/>
  <update-node tree="identifier: numerator [89931,89940]" label="accumulativSHDPerWeight"/>
  <insert-tree tree="member_expression [90288,90345]" parent="binary_expression [90288,90349]" at="0"/>
  <insert-node tree="&gt;: &gt; [90346,90347]" parent="binary_expression [90288,90349]" at="1"/>
  <insert-node tree="{: { [90350,90351]" parent="block_statement [90350,90465]" at="0"/>
  <insert-node tree="expression_statement [90365,90454]" parent="block_statement [90350,90465]" at="1"/>
  <insert-node tree="}: } [90464,90465]" parent="block_statement [90350,90465]" at="2"/>
  <insert-node tree="identifier: _pending [90516,90524]" parent="assignment_expression [90516,90598]" at="0"/>
  <insert-node tree="=: = [90525,90526]" parent="assignment_expression [90516,90598]" at="1"/>
  <insert-node tree="call_expression [90527,90598]" parent="assignment_expression [90516,90598]" at="2"/>
  <update-node tree="identifier: getModifiedRewardToken [89844,89866]" label="getRewardToken"/>
  <update-node tree="identifier: denominator [89959,89970]" label="toBeDividend"/>
  <move-tree tree="identifier: otherPoolDividendWeight [89973,89996]" parent="member_expression [91193,91285]" at="1"/>
  <insert-tree tree="call_argument [91286,91338]" parent="call_expression [91193,91339]" at="2"/>
  <insert-node tree="&gt;: &gt; [91360,91361]" parent="binary_expression [91355,91363]" at="1"/>
  <insert-tree tree="variable_declaration_statement [94964,95014]" parent="block_statement [94948,95232]" at="1"/>
  <insert-node tree="expression_statement [95028,95053]" parent="block_statement [94948,95232]" at="2"/>
  <insert-node tree="expression_statement [95067,95104]" parent="block_statement [94948,95232]" at="3"/>
  <insert-node tree="expression_statement [95192,95221]" parent="block_statement [94948,95232]" at="5"/>
  <insert-node tree="expression_statement [97441,97489]" parent="block_statement [97426,97500]" at="1"/>
  <update-node tree="identifier: targetPoolOracleWeight [85911,85933]" label="invitorModifiedWeight"/>
  <insert-node tree="identifier: getUserModifiedWeight [97831,97852]" parent="call_expression [97831,97890]" at="0"/>
  <insert-node tree="(: ( [97852,97853]" parent="call_expression [97831,97890]" at="1"/>
  <move-tree tree="call_argument [81506,81510]" parent="call_expression [97831,97890]" at="2"/>
  <insert-node tree=",: , [97857,97858]" parent="call_expression [97831,97890]" at="3"/>
  <insert-tree tree="call_argument [97859,97889]" parent="call_expression [97831,97890]" at="4"/>
  <insert-node tree="): ) [97889,97890]" parent="call_expression [97831,97890]" at="5"/>
  <insert-tree tree="member_expression [98389,98415]" parent="assignment_expression [98389,98457]" at="0"/>
  <insert-node tree="=: = [98416,98417]" parent="assignment_expression [98389,98457]" at="1"/>
  <insert-node tree="call_expression [98418,98457]" parent="assignment_expression [98389,98457]" at="2"/>
  <insert-tree tree="member_expression [99766,99772]" parent="array_access [99744,99773]" at="2"/>
  <insert-node tree="member_expression [99810,99835]" parent="call_expression [99810,99848]" at="0"/>
  <insert-node tree="(: ( [99835,99836]" parent="call_expression [99810,99848]" at="1"/>
  <insert-tree tree="call_argument [99836,99847]" parent="call_expression [99810,99848]" at="2"/>
  <insert-node tree="): ) [99847,99848]" parent="call_expression [99810,99848]" at="3"/>
  <update-node tree="identifier: nameLength [101963,101973]" label="senderTotalWeight"/>
  <move-tree tree="type_name [96364,96372]" parent="variable_declaration [99934,99955]" at="0"/>
  <insert-node tree="storage: storage [99943,99950]" parent="variable_declaration [99934,99955]" at="1"/>
  <insert-node tree="identifier: user [99951,99955]" parent="variable_declaration [99934,99955]" at="2"/>
  <update-node tree="identifier: usersTotalWeight [82897,82913]" label="poolSHDPerWeight"/>
  <update-node tree="identifier: challengerOracleWeight [86008,86030]" label="senderRevenue"/>
  <insert-tree tree="member_expression [100165,100180]" parent="binary_expression [100165,100185]" at="0"/>
  <insert-tree tree="if_statement [100273,100436]" parent="block_statement [100186,100447]" at="2"/>
  <insert-tree tree="expression_statement [100845,100907]" parent="block_statement [100830,102029]" at="1"/>
  <insert-node tree="variable_declaration_statement [101002,101083]" parent="block_statement [100830,102029]" at="3"/>
  <move-tree tree="member_expression [73855,73880]" parent="variable_declaration_statement [71933,72002]" at="2"/>
  <move-tree tree="variable_declaration [72373,72394]" parent="variable_declaration_statement [72048,72115]" at="0"/>
  <insert-node tree="array_access [72072,72114]" parent="variable_declaration_statement [72048,72115]" at="2"/>
  <insert-node tree="assignment_expression [72129,72180]" parent="expression_statement [72129,72181]" at="0"/>
  <insert-node tree="assignment_expression [72335,72410]" parent="expression_statement [72335,72411]" at="0"/>
  <insert-tree tree="member_expression [82223,82242]" parent="call_expression [82223,82261]" at="0"/>
  <insert-node tree="(: ( [82242,82243]" parent="call_expression [82223,82261]" at="1"/>
  <move-tree tree="call_argument [81550,81567]" parent="call_expression [82223,82261]" at="2"/>
  <insert-node tree="): ) [82260,82261]" parent="call_expression [82223,82261]" at="3"/>
  <insert-node tree="member_expression [82293,82332]" parent="call_expression [82293,82371]" at="0"/>
  <insert-node tree="(: ( [82332,82333]" parent="call_expression [82293,82371]" at="1"/>
  <insert-node tree="call_argument [82333,82370]" parent="call_expression [82293,82371]" at="2"/>
  <insert-node tree="): ) [82370,82371]" parent="call_expression [82293,82371]" at="3"/>
  <insert-node tree="member_expression [82403,82442]" parent="call_expression [82403,82481]" at="0"/>
  <insert-node tree="(: ( [82442,82443]" parent="call_expression [82403,82481]" at="1"/>
  <insert-node tree="call_argument [82443,82480]" parent="call_expression [82403,82481]" at="2"/>
  <insert-node tree="): ) [82480,82481]" parent="call_expression [82403,82481]" at="3"/>
  <insert-tree tree="member_expression [82544,82563]" parent="call_expression [82544,82572]" at="0"/>
  <insert-node tree="(: ( [82563,82564]" parent="call_expression [82544,82572]" at="1"/>
  <move-tree tree="call_argument [81749,81756]" parent="call_expression [82544,82572]" at="2"/>
  <insert-node tree="): ) [82571,82572]" parent="call_expression [82544,82572]" at="3"/>
  <update-node tree="identifier: getOracleWeight [82003,82018]" label="calculateOracleWeight"/>
  <insert-node tree="call_expression [84029,84059]" parent="member_expression [84029,84063]" at="0"/>
  <insert-node tree=".: . [84059,84060]" parent="member_expression [84029,84063]" at="1"/>
  <insert-node tree="identifier: div [84060,84063]" parent="member_expression [84029,84063]" at="2"/>
  <move-tree tree="call_expression [83487,83567]" parent="expression_statement [84356,84433]" at="0"/>
  <move-tree tree=",: , [83512,83513]" parent="call_expression [84356,84432]" at="4"/>
  <move-tree tree="call_argument [83505,83512]" parent="call_expression [84356,84432]" at="4"/>
  <insert-node tree="identifier: calculateDividend [85264,85281]" parent="call_expression [85264,85319]" at="0"/>
  <insert-node tree="(: ( [85281,85282]" parent="call_expression [85264,85319]" at="1"/>
  <insert-tree tree="call_argument [85282,85290]" parent="call_expression [85264,85319]" at="2"/>
  <insert-node tree=",: , [85290,85291]" parent="call_expression [85264,85319]" at="3"/>
  <move-tree tree="call_argument [95129,95133]" parent="call_expression [85264,85319]" at="4"/>
  <insert-node tree=",: , [85296,85297]" parent="call_expression [85264,85319]" at="5"/>
  <move-tree tree="call_argument [96806,96813]" parent="call_expression [85264,85319]" at="6"/>
  <insert-node tree=",: , [85305,85306]" parent="call_expression [85264,85319]" at="7"/>
  <insert-tree tree="call_argument [85307,85318]" parent="call_expression [85264,85319]" at="8"/>
  <insert-node tree="): ) [85318,85319]" parent="call_expression [85264,85319]" at="9"/>
  <update-node tree="identifier: getOracleWeight [85936,85951]" label="calculateOracleWeight"/>
  <update-node tree="identifier: getOracleWeight [86033,86048]" label="calculateOracleWeight"/>
  <insert-tree tree="member_expression [88357,88367]" parent="array_access [88333,88368]" at="2"/>
  <insert-node tree="assignment_expression [90365,90453]" parent="expression_statement [90365,90454]" at="0"/>
  <insert-tree tree="member_expression [90527,90539]" parent="call_expression [90527,90598]" at="0"/>
  <insert-node tree="(: ( [90539,90540]" parent="call_expression [90527,90598]" at="1"/>
  <insert-node tree="call_argument [90540,90597]" parent="call_expression [90527,90598]" at="2"/>
  <insert-node tree="): ) [90597,90598]" parent="call_expression [90527,90598]" at="3"/>
  <move-tree tree="call_expression [90210,90256]" parent="member_expression [91193,91285]" at="0"/>
  <update-node tree="identifier: otherPoolDividendWeight [89973,89996]" label="div"/>
  <insert-node tree="assignment_expression [95028,95052]" parent="expression_statement [95028,95053]" at="0"/>
  <insert-node tree="assignment_expression [95067,95103]" parent="expression_statement [95067,95104]" at="0"/>
  <insert-node tree="assignment_expression [95192,95220]" parent="expression_statement [95192,95221]" at="0"/>
  <insert-node tree="call_expression [97441,97488]" parent="expression_statement [97441,97489]" at="0"/>
  <insert-tree tree="member_expression [98418,98448]" parent="call_expression [98418,98457]" at="0"/>
  <insert-node tree="(: ( [98448,98449]" parent="call_expression [98418,98457]" at="1"/>
  <move-tree tree="call_argument [83885,83892]" parent="call_expression [98418,98457]" at="2"/>
  <insert-node tree="): ) [98456,98457]" parent="call_expression [98418,98457]" at="3"/>
  <move-tree tree="member_expression [82916,82937]" parent="member_expression [99810,99835]" at="0"/>
  <insert-node tree=".: . [99831,99832]" parent="member_expression [99810,99835]" at="1"/>
  <insert-node tree="identifier: add [99832,99835]" parent="member_expression [99810,99835]" at="2"/>
  <move-tree tree="variable_declaration [100987,101011]" parent="variable_declaration_statement [101002,101083]" at="0"/>
  <insert-node tree="=: = [101032,101033]" parent="variable_declaration_statement [101002,101083]" at="1"/>
  <insert-tree tree="call_expression [101034,101082]" parent="variable_declaration_statement [101002,101083]" at="2"/>
  <update-node tree="identifier: _rankIndex [72252,72262]" label="accumulativeDividendBeforeUpdate"/>
  <insert-node tree="identifier: rankPoolIndex [72072,72085]" parent="array_access [72072,72114]" at="0"/>
  <insert-node tree="[: [ [72085,72086]" parent="array_access [72072,72114]" at="1"/>
  <move-tree tree="call_expression [72331,72358]" parent="array_access [72072,72114]" at="2"/>
  <insert-node tree="]: ] [72113,72114]" parent="array_access [72072,72114]" at="3"/>
  <insert-node tree="array_access [72129,72164]" parent="assignment_expression [72129,72180]" at="0"/>
  <insert-node tree="=: = [72165,72166]" parent="assignment_expression [72129,72180]" at="1"/>
  <insert-node tree="identifier: lastPidInRank [72167,72180]" parent="assignment_expression [72129,72180]" at="2"/>
  <insert-node tree="identifier: addReward [72335,72344]" parent="assignment_expression [72335,72410]" at="0"/>
  <insert-node tree="=: = [72345,72346]" parent="assignment_expression [72335,72410]" at="1"/>
  <insert-node tree="call_expression [72347,72410]" parent="assignment_expression [72335,72410]" at="2"/>
  <insert-node tree="variable_declaration_statement [73961,73999]" parent="block_statement [73942,74729]" at="1"/>
  <insert-node tree="variable_declaration_statement [74086,74106]" parent="block_statement [73942,74729]" at="3"/>
  <insert-node tree="if_statement [74124,74414]" parent="block_statement [73942,74729]" at="4"/>
  <move-tree tree="expression_statement [74680,74824]" parent="block_statement [73942,74729]" at="5"/>
  <insert-tree tree="if_statement [74533,74714]" parent="block_statement [73942,74729]" at="6"/>
  <update-node tree="identifier: _pending [89372,89380]" label="accumulativeSHDPerWeight"/>
  <insert-node tree="call_expression [82293,82328]" parent="member_expression [82293,82332]" at="0"/>
  <insert-node tree=".: . [82328,82329]" parent="member_expression [82293,82332]" at="1"/>
  <insert-node tree="identifier: sub [82329,82332]" parent="member_expression [82293,82332]" at="2"/>
  <insert-node tree="call_expression [82333,82370]" parent="call_argument [82333,82370]" at="0"/>
  <insert-node tree="call_expression [82403,82438]" parent="member_expression [82403,82442]" at="0"/>
  <insert-node tree=".: . [82438,82439]" parent="member_expression [82403,82442]" at="1"/>
  <insert-node tree="identifier: sub [82439,82442]" parent="member_expression [82403,82442]" at="2"/>
  <insert-node tree="call_expression [82443,82480]" parent="call_argument [82443,82480]" at="0"/>
  <insert-tree tree="member_expression [84029,84047]" parent="call_expression [84029,84059]" at="0"/>
  <insert-node tree="(: ( [84047,84048]" parent="call_expression [84029,84059]" at="1"/>
  <move-tree tree="call_argument [83242,83252]" parent="call_expression [84029,84059]" at="2"/>
  <insert-node tree="): ) [84058,84059]" parent="call_expression [84029,84059]" at="3"/>
  <update-node tree="identifier: calculateDividend [83487,83504]" label="dividendBonus"/>
  <insert-tree tree="member_expression [84478,84499]" parent="member_expression [84478,84503]" at="0"/>
  <insert-tree tree="call_argument [85606,85614]" parent="call_expression [85576,85615]" at="4"/>
  <insert-node tree="identifier: accumulativSHDPerWeight [90365,90388]" parent="assignment_expression [90365,90453]" at="0"/>
  <insert-node tree="=: = [90389,90390]" parent="assignment_expression [90365,90453]" at="1"/>
  <move-tree tree="call_expression [83212,83275]" parent="assignment_expression [90365,90453]" at="2"/>
  <insert-node tree="call_expression [90540,90597]" parent="call_argument [90540,90597]" at="0"/>
  <move-tree tree="call_argument [90001,90024]" parent="call_expression [91193,91232]" at="2"/>
  <update-node tree="identifier: poolReward [90326,90336]" label="toBeDividend"/>
  <move-tree tree="array_access [95816,95826]" parent="assignment_expression [95028,95052]" at="0"/>
  <insert-node tree="=: = [95039,95040]" parent="assignment_expression [95028,95052]" at="1"/>
  <insert-tree tree="member_expression [95041,95052]" parent="assignment_expression [95028,95052]" at="2"/>
  <move-tree tree="array_access [95828,95844]" parent="assignment_expression [95067,95103]" at="0"/>
  <insert-node tree="=: = [95084,95085]" parent="assignment_expression [95067,95103]" at="1"/>
  <insert-tree tree="member_expression [95086,95103]" parent="assignment_expression [95067,95103]" at="2"/>
  <move-tree tree="array_access [95846,95864]" parent="assignment_expression [95118,95177]" at="0"/>
  <move-tree tree="array_access [95866,95878]" parent="assignment_expression [95192,95220]" at="0"/>
  <insert-node tree="=: = [95205,95206]" parent="assignment_expression [95192,95220]" at="1"/>
  <insert-tree tree="member_expression [95207,95220]" parent="assignment_expression [95192,95220]" at="2"/>
  <insert-node tree="identifier: cancleInvitation [97441,97457]" parent="call_expression [97441,97488]" at="0"/>
  <insert-node tree="(: ( [97457,97458]" parent="call_expression [97441,97488]" at="1"/>
  <insert-tree tree="call_argument [97458,97480]" parent="call_expression [97441,97488]" at="2"/>
  <insert-node tree=",: , [97480,97481]" parent="call_expression [97441,97488]" at="3"/>
  <move-tree tree="call_argument [95135,95140]" parent="call_expression [97441,97488]" at="4"/>
  <insert-node tree="): ) [97487,97488]" parent="call_expression [97441,97488]" at="5"/>
  <update-node tree="identifier: addInviteeWeight [100995,101011]" label="invitorModifiedWeight"/>
  <insert-tree tree="variable_declaration_statement [101432,101520]" parent="block_statement [101337,102017]" at="2"/>
  <insert-node tree="variable_declaration_statement [101538,101656]" parent="block_statement [101337,102017]" at="3"/>
  <insert-tree tree="expression_statement [101674,101750]" parent="block_statement [101337,102017]" at="4"/>
  <insert-node tree="variable_declaration_statement [101768,101842]" parent="block_statement [101337,102017]" at="5"/>
  <insert-tree tree="expression_statement [101860,101930]" parent="block_statement [101337,102017]" at="6"/>
  <insert-tree tree="expression_statement [101948,102002]" parent="block_statement [101337,102017]" at="7"/>
  <insert-node tree="identifier: rankPoolIndex [72129,72142]" parent="array_access [72129,72164]" at="0"/>
  <insert-node tree="[: [ [72142,72143]" parent="array_access [72129,72164]" at="1"/>
  <move-tree tree="call_expression [72265,72285]" parent="array_access [72129,72164]" at="2"/>
  <insert-node tree="]: ] [72163,72164]" parent="array_access [72129,72164]" at="3"/>
  <insert-node tree="member_expression [72347,72376]" parent="call_expression [72347,72410]" at="0"/>
  <insert-node tree="(: ( [72376,72377]" parent="call_expression [72347,72410]" at="1"/>
  <insert-tree tree="call_argument [72377,72409]" parent="call_expression [72347,72410]" at="2"/>
  <insert-node tree="): ) [72409,72410]" parent="call_expression [72347,72410]" at="3"/>
  <update-node tree="identifier: undistributeDividend [74107,74127]" label="_undistributeDividend"/>
  <insert-node tree="variable_declaration [73961,73979]" parent="variable_declaration_statement [73961,73999]" at="0"/>
  <insert-node tree="=: = [73980,73981]" parent="variable_declaration_statement [73961,73999]" at="1"/>
  <move-tree tree="array_access [74269,74285]" parent="variable_declaration_statement [73961,73999]" at="2"/>
  <move-tree tree="variable_declaration [72300,72328]" parent="variable_declaration_statement [74086,74106]" at="0"/>
  <insert-node tree="if: if [74124,74126]" parent="if_statement [74124,74414]" at="0"/>
  <insert-node tree="(: ( [74127,74128]" parent="if_statement [74124,74414]" at="1"/>
  <move-tree tree="binary_expression [74309,74333]" parent="if_statement [74124,74414]" at="2"/>
  <insert-node tree="): ) [74152,74153]" parent="if_statement [74124,74414]" at="3"/>
  <insert-node tree="block_statement [74153,74314]" parent="if_statement [74124,74414]" at="4"/>
  <insert-node tree="else: else [74332,74336]" parent="if_statement [74124,74414]" at="5"/>
  <insert-tree tree="block_statement [74336,74414]" parent="if_statement [74124,74414]" at="6"/>
  <update-node tree="identifier: farmMint [77920,77928]" label="totalReward"/>
  <insert-tree tree="member_expression [82293,82312]" parent="call_expression [82293,82328]" at="0"/>
  <insert-node tree="(: ( [82312,82313]" parent="call_expression [82293,82328]" at="1"/>
  <move-tree tree="call_argument [101368,101382]" parent="call_expression [82293,82328]" at="2"/>
  <insert-node tree="): ) [82327,82328]" parent="call_expression [82293,82328]" at="3"/>
  <insert-tree tree="member_expression [82333,82354]" parent="call_expression [82333,82370]" at="0"/>
  <insert-node tree="(: ( [82354,82355]" parent="call_expression [82333,82370]" at="1"/>
  <move-tree tree="call_argument [101435,101449]" parent="call_expression [82333,82370]" at="2"/>
  <insert-node tree="): ) [82369,82370]" parent="call_expression [82333,82370]" at="3"/>
  <insert-tree tree="member_expression [82403,82422]" parent="call_expression [82403,82438]" at="0"/>
  <insert-node tree="(: ( [82422,82423]" parent="call_expression [82403,82438]" at="1"/>
  <move-tree tree="call_argument [101056,101070]" parent="call_expression [82403,82438]" at="2"/>
  <insert-node tree="): ) [82437,82438]" parent="call_expression [82403,82438]" at="3"/>
  <insert-tree tree="member_expression [82443,82464]" parent="call_expression [82443,82480]" at="0"/>
  <insert-node tree="(: ( [82464,82465]" parent="call_expression [82443,82480]" at="1"/>
  <move-tree tree="call_argument [101123,101137]" parent="call_expression [82443,82480]" at="2"/>
  <insert-node tree="): ) [82479,82480]" parent="call_expression [82443,82480]" at="3"/>
  <update-node tree="identifier: getOracleWeight [84323,84338]" label="calculateOracleWeight"/>
  <insert-node tree="member_expression [90540,90591]" parent="call_expression [90540,90597]" at="0"/>
  <insert-node tree="(: ( [90591,90592]" parent="call_expression [90540,90597]" at="1"/>
  <insert-tree tree="call_argument [90592,90596]" parent="call_expression [90540,90597]" at="2"/>
  <insert-node tree="): ) [90596,90597]" parent="call_expression [90540,90597]" at="3"/>
  <update-node tree="identifier: getOracleWeight [93717,93732]" label="calculateOracleWeight"/>
  <update-node tree="identifier: getUserInfo [95882,95893]" label="getUserModifiedWeight"/>
  <move-tree tree="call_argument [81612,81630]" parent="call_expression [100219,100258]" at="2"/>
  <insert-tree tree="member_expression [100778,100793]" parent="binary_expression [100778,100797]" at="0"/>
  <insert-tree tree="member_expression [100961,100966]" parent="array_access [100952,100967]" at="2"/>
  <move-tree tree="variable_declaration [80417,80438]" parent="variable_declaration_statement [101538,101656]" at="0"/>
  <insert-node tree="=: = [101561,101562]" parent="variable_declaration_statement [101538,101656]" at="1"/>
  <insert-tree tree="call_expression [101563,101655]" parent="variable_declaration_statement [101538,101656]" at="2"/>
  <move-tree tree="variable_declaration [101298,101322]" parent="variable_declaration_statement [101768,101842]" at="0"/>
  <insert-node tree="=: = [101794,101795]" parent="variable_declaration_statement [101768,101842]" at="1"/>
  <insert-tree tree="call_expression [101796,101841]" parent="variable_declaration_statement [101768,101842]" at="2"/>
  <move-tree tree="member_expression [83148,83173]" parent="member_expression [72347,72376]" at="0"/>
  <insert-node tree=".: . [72372,72373]" parent="member_expression [72347,72376]" at="1"/>
  <insert-node tree="identifier: sub [72373,72376]" parent="member_expression [72347,72376]" at="2"/>
  <move-tree tree="type_name [94874,94881]" parent="variable_declaration [73961,73979]" at="0"/>
  <insert-node tree="identifier: currentPid [73969,73979]" parent="variable_declaration [73961,73979]" at="1"/>
  <insert-node tree="identifier: currentPid [74056,74066]" parent="array_access [74047,74067]" at="2"/>
  <update-node tree="identifier: currentRankLastIndex [72308,72328]" label="addDividend"/>
  <insert-node tree="{: { [74153,74154]" parent="block_statement [74153,74314]" at="0"/>
  <insert-tree tree="expression_statement [74176,74206]" parent="block_statement [74153,74314]" at="1"/>
  <insert-node tree="expression_statement [74228,74295]" parent="block_statement [74153,74314]" at="2"/>
  <insert-node tree="}: } [74313,74314]" parent="block_statement [74153,74314]" at="3"/>
  <update-node tree="identifier: undistributeDividend [74928,74948]" label="_undistributeDividend"/>
  <insert-tree tree="call_expression [77716,77741]" parent="member_expression [77716,77745]" at="0"/>
  <update-node tree="identifier: getModifiedRewardToken [78426,78448]" label="getRewardToken"/>
  <insert-tree tree="member_expression [90431,90452]" parent="call_argument [90431,90452]" at="0"/>
  <insert-node tree="call_expression [90540,90587]" parent="member_expression [90540,90591]" at="0"/>
  <insert-node tree=".: . [90587,90588]" parent="member_expression [90540,90591]" at="1"/>
  <insert-node tree="identifier: div [90588,90591]" parent="member_expression [90540,90591]" at="2"/>
  <insert-tree tree="call_expression [91394,91422]" parent="member_expression [91394,91426]" at="0"/>
  <update-node tree="identifier: poolReward [90436,90446]" label="toBeDividend"/>
  <insert-tree tree="member_expression [93393,93411]" parent="call_argument [93393,93411]" at="0"/>
  <insert-tree tree="member_expression [101203,101221]" parent="call_argument [101203,101221]" at="0"/>
  <insert-tree tree="member_expression [101275,101293]" parent="call_argument [101275,101293]" at="0"/>
  <update-node tree="identifier: existedAmount [80425,80438]" label="invitorRevenue"/>
  <update-node tree="identifier: addInvitorWeight [101306,101322]" label="invitorRewardDebt"/>
  <insert-node tree="assignment_expression [74228,74294]" parent="expression_statement [74228,74295]" at="0"/>
  <insert-tree tree="call_argument [90421,90425]" parent="call_expression [90391,90426]" at="2"/>
  <insert-tree tree="member_expression [90540,90567]" parent="call_expression [90540,90587]" at="0"/>
  <insert-node tree="(: ( [90567,90568]" parent="call_expression [90540,90587]" at="1"/>
  <move-tree tree="call_argument [89342,89360]" parent="call_expression [90540,90587]" at="2"/>
  <insert-node tree="): ) [90586,90587]" parent="call_expression [90540,90587]" at="3"/>
  <insert-node tree="identifier: _undistributeDividend [74228,74249]" parent="assignment_expression [74228,74294]" at="0"/>
  <insert-node tree="=: = [74250,74251]" parent="assignment_expression [74228,74294]" at="1"/>
  <insert-node tree="call_expression [74252,74294]" parent="assignment_expression [74228,74294]" at="2"/>
  <update-node tree="identifier: undistributeDividend [74802,74822]" label="addDividend"/>
  <insert-tree tree="member_expression [101394,101412]" parent="call_argument [101394,101412]" at="0"/>
  <insert-tree tree="member_expression [74252,74277]" parent="call_expression [74252,74294]" at="0"/>
  <insert-node tree="(: ( [74277,74278]" parent="call_expression [74252,74294]" at="1"/>
  <move-tree tree="call_argument [74593,74608]" parent="call_expression [74252,74294]" at="2"/>
  <insert-node tree="): ) [74293,74294]" parent="call_expression [74252,74294]" at="3"/>
  <insert-tree tree="member_expression [81882,81897]" parent="call_argument [81882,81897]" at="0"/>
  <delete-node tree="public: public [43975,43981]"/>
  <delete-node tree="public: public [64564,64570]"/>
  <delete-node tree="public: public [64669,64675]"/>
  <delete-node tree="public: public [64777,64783]"/>
  <delete-node tree="public: public [64910,64916]"/>
  <delete-node tree="public: public [65983,65989]"/>
  <delete-node tree="public: public [66024,66030]"/>
  <delete-node tree="public: public [66067,66073]"/>
  <delete-tree tree="visibility [67205,67211]"/>
  <delete-node tree="virtual: virtual [67212,67219]"/>
  <delete-tree tree="expression_statement [67598,67621]"/>
  <delete-node tree="function: function [68090,68098]"/>
  <delete-node tree="identifier: initializeTimeWeight [68099,68119]"/>
  <delete-node tree="(: ( [68119,68120]"/>
  <delete-node tree="): ) [68120,68121]"/>
  <delete-tree tree="visibility [68122,68129]"/>
  <delete-node tree="{: { [68130,68131]"/>
  <delete-node tree="}: } [68863,68864]"/>
  <delete-node tree="function_body [68130,68864]"/>
  <delete-node tree="function_definition [68090,68864]"/>
  <delete-tree tree="expression_statement [71984,72064]"/>
  <delete-tree tree="type_name [71916,71920]"/>
  <delete-tree tree="call_expression [71943,71973]"/>
  <delete-node tree="=: = [72395,72396]"/>
  <delete-tree tree="array_access [72397,72432]"/>
  <delete-node tree="variable_declaration_statement [72373,72433]"/>
  <delete-tree tree="expression_statement [72447,72489]"/>
  <delete-tree tree="expression_statement [72650,72684]"/>
  <delete-node tree="identifier: dealEvilPoolDiviend [72694,72713]"/>
  <delete-node tree="(: ( [72713,72714]"/>
  <delete-node tree="): ) [72718,72719]"/>
  <delete-node tree="call_expression [72694,72719]"/>
  <delete-node tree="expression_statement [72694,72720]"/>
  <delete-node tree="function: function [72771,72779]"/>
  <delete-node tree="identifier: addInBlackList [72780,72794]"/>
  <delete-node tree="(: ( [72794,72795]"/>
  <delete-tree tree="parameter [72795,72807]"/>
  <delete-node tree=",: , [72807,72808]"/>
  <delete-tree tree="parameter [72809,72836]"/>
  <delete-node tree="): ) [72836,72837]"/>
  <delete-tree tree="visibility [72838,72845]"/>
  <delete-node tree="{: { [72846,72847]"/>
  <delete-tree tree="if_statement [72857,72918]"/>
  <delete-node tree="}: } [73050,73051]"/>
  <delete-node tree="function_body [72846,73051]"/>
  <delete-node tree="function_definition [72771,73051]"/>
  <delete-node tree="identifier: undistributeDividend [73832,73852]"/>
  <delete-node tree="variable_declaration [73824,73852]"/>
  <delete-node tree="=: = [73853,73854]"/>
  <delete-node tree="variable_declaration_statement [73824,73881]"/>
  <delete-node tree="if: if [74305,74307]"/>
  <delete-node tree="(: ( [74308,74309]"/>
  <delete-node tree="): ) [74333,74334]"/>
  <delete-node tree="{: { [74335,74336]"/>
  <delete-tree tree="expression_statement [74358,74497]"/>
  <delete-node tree="identifier: undistributeDividend [74519,74539]"/>
  <delete-node tree="=: = [74540,74541]"/>
  <delete-tree tree="member_expression [74542,74566]"/>
  <delete-node tree="(: ( [74566,74567]"/>
  <delete-node tree="): ) [74630,74631]"/>
  <delete-node tree="call_expression [74542,74631]"/>
  <delete-node tree="assignment_expression [74519,74631]"/>
  <delete-node tree="expression_statement [74519,74632]"/>
  <delete-node tree="}: } [74650,74651]"/>
  <delete-node tree="block_statement [74335,74651]"/>
  <delete-node tree="else: else [74652,74656]"/>
  <delete-node tree="{: { [74657,74658]"/>
  <delete-node tree="}: } [74842,74843]"/>
  <delete-node tree="block_statement [74657,74843]"/>
  <delete-node tree="if_statement [74305,74843]"/>
  <delete-node tree="number_literal: 0 [74999,75000]"/>
  <delete-node tree="function: function [75016,75024]"/>
  <delete-node tree="identifier: setMintCoefficient [75025,75043]"/>
  <delete-node tree="(: ( [75043,75044]"/>
  <delete-node tree="identifier: _shardMintWeight [75062,75078]"/>
  <delete-node tree="parameter [75054,75078]"/>
  <delete-node tree=",: , [75078,75079]"/>
  <delete-node tree="): ) [75121,75122]"/>
  <delete-node tree="virtual: virtual [75132,75139]"/>
  <delete-tree tree="function_body [75140,75415]"/>
  <delete-node tree="function_definition [75016,75415]"/>
  <delete-node tree="=: = [77677,77678]"/>
  <delete-tree tree="call_expression [77692,77800]"/>
  <delete-node tree="variable_declaration_statement [77660,77801]"/>
  <delete-tree tree="if_statement [77944,78038]"/>
  <delete-node tree="identifier: _pending [89383,89391]"/>
  <delete-tree tree="call_expression [77829,77854]"/>
  <delete-node tree="=: = [80439,80440]"/>
  <delete-node tree="identifier: _amount [95013,95020]"/>
  <delete-node tree="identifier: existedAmount [80610,80623]"/>
  <delete-node tree="identifier: existedAmount [81195,81208]"/>
  <delete-node tree="identifier: modifyWeightByInvitation [81467,81491]"/>
  <delete-node tree="(: ( [81491,81492]"/>
  <delete-node tree=",: , [81510,81511]"/>
  <delete-tree tree="call_argument [81525,81535]"/>
  <delete-node tree=",: , [81535,81536]"/>
  <delete-node tree=",: , [81567,81568]"/>
  <delete-tree tree="call_argument [81582,81597]"/>
  <delete-node tree=",: , [81597,81598]"/>
  <delete-node tree=",: , [81630,81631]"/>
  <delete-tree tree="call_argument [81645,81658]"/>
  <delete-node tree="): ) [81668,81669]"/>
  <delete-node tree="call_expression [81467,81669]"/>
  <delete-node tree="expression_statement [81467,81670]"/>
  <delete-node tree="identifier: updateUserInfo [81683,81697]"/>
  <delete-node tree="(: ( [81697,81698]"/>
  <delete-tree tree="call_argument [81712,81716]"/>
  <delete-node tree=",: , [81716,81717]"/>
  <delete-tree tree="member_expression [81731,81748]"/>
  <delete-node tree="(: ( [81748,81749]"/>
  <delete-node tree="): ) [81756,81757]"/>
  <delete-node tree="call_expression [81731,81757]"/>
  <delete-node tree="call_argument [81731,81757]"/>
  <delete-node tree=",: , [81757,81758]"/>
  <delete-tree tree="call_argument [81772,81787]"/>
  <delete-node tree=",: , [81787,81788]"/>
  <delete-tree tree="call_argument [81802,81813]"/>
  <delete-node tree="): ) [81823,81824]"/>
  <delete-node tree="call_expression [81683,81824]"/>
  <delete-node tree="expression_statement [81683,81825]"/>
  <delete-node tree="&gt;: &gt; [83174,83175]"/>
  <delete-node tree="number_literal: 0 [83176,83177]"/>
  <delete-node tree="binary_expression [83148,83177]"/>
  <delete-tree tree="tuple_expression [83444,83484]"/>
  <delete-node tree="=: = [83485,83486]"/>
  <delete-node tree="assignment_expression [83444,83567]"/>
  <delete-node tree="identifier: usersTotalWeight [83954,83970]"/>
  <delete-tree tree="array_access [92359,92384]"/>
  <delete-node tree="identifier: challengerOracleWeight [86089,86111]"/>
  <delete-node tree="identifier: targetPoolOracleWeight [86115,86137]"/>
  <delete-tree tree="parameter [86514,86530]"/>
  <delete-node tree="identifier: _invitee [86832,86840]"/>
  <delete-node tree="identifier: buildInvitation [86644,86659]"/>
  <delete-tree tree="call_argument [86660,86668]"/>
  <delete-node tree=",: , [86668,86669]"/>
  <delete-node tree="identifier: _invitee [87198,87206]"/>
  <delete-node tree="function: function [86697,86705]"/>
  <delete-node tree="identifier: buildInvitation [86706,86721]"/>
  <delete-node tree="(: ( [86721,86722]"/>
  <delete-node tree=",: , [86738,86739]"/>
  <delete-node tree="identifier: _invitee [86748,86756]"/>
  <delete-node tree="parameter [86740,86756]"/>
  <delete-node tree="): ) [86756,86757]"/>
  <delete-tree tree="visibility [86758,86765]"/>
  <delete-node tree="{: { [86766,86767]"/>
  <delete-node tree="(: ( [87153,87154]"/>
  <delete-tree tree="call_argument [87154,87162]"/>
  <delete-node tree="): ) [87162,87163]"/>
  <delete-node tree="call_expression [87132,87163]"/>
  <delete-node tree="expression_statement [87132,87164]"/>
  <delete-node tree="}: } [87247,87248]"/>
  <delete-node tree="function_body [86766,87248]"/>
  <delete-node tree="function_definition [86697,87248]"/>
  <delete-node tree="function: function [87999,88007]"/>
  <delete-node tree="identifier: getModifiedRewardToken [88008,88030]"/>
  <delete-node tree="(: ( [88030,88031]"/>
  <delete-node tree="identifier: _fromBlock [88039,88049]"/>
  <delete-node tree="parameter [88031,88049]"/>
  <delete-node tree=",: , [88049,88050]"/>
  <delete-tree tree="parameter [88051,88067]"/>
  <delete-node tree="): ) [88067,88068]"/>
  <delete-tree tree="visibility [88078,88085]"/>
  <delete-tree tree="state_mutability [88095,88099]"/>
  <delete-tree tree="return_type_definition [88109,88126]"/>
  <delete-tree tree="function_body [88132,88304]"/>
  <delete-node tree="function_definition [87999,88304]"/>
  <delete-node tree="identifier: _pid [90039,90043]"/>
  <delete-node tree="==: == [90044,90046]"/>
  <delete-node tree="identifier: usersTotalWeight [83258,83274]"/>
  <delete-tree tree="block_statement [90049,90111]"/>
  <delete-node tree="else: else [90121,90125]"/>
  <delete-tree tree="block_statement [90125,90187]"/>
  <delete-node tree="identifier: _pending [89301,89309]"/>
  <delete-node tree="=: = [89310,89311]"/>
  <delete-tree tree="member_expression [89312,89341]"/>
  <delete-node tree="(: ( [89341,89342]"/>
  <delete-node tree="): ) [89360,89361]"/>
  <delete-node tree="call_expression [89312,89361]"/>
  <delete-node tree="assignment_expression [89301,89361]"/>
  <delete-node tree="expression_statement [89301,89362]"/>
  <delete-tree tree="call_argument [90246,90255]"/>
  <delete-node tree="identifier: add [89997,90000]"/>
  <delete-node tree="identifier: poolReward [90197,90207]"/>
  <delete-node tree="=: = [90208,90209]"/>
  <delete-node tree=".: . [90270,90271]"/>
  <delete-node tree="identifier: div [90271,90274]"/>
  <delete-node tree="member_expression [90210,90274]"/>
  <delete-node tree="(: ( [90274,90275]"/>
  <delete-tree tree="call_argument [90275,90286]"/>
  <delete-node tree="): ) [90286,90287]"/>
  <delete-node tree="call_expression [90210,90287]"/>
  <delete-node tree="assignment_expression [90197,90287]"/>
  <delete-node tree="expression_statement [90197,90288]"/>
  <delete-node tree="!=: != [90306,90308]"/>
  <delete-node tree="identifier: poolReward [90339,90349]"/>
  <delete-node tree="function: function [91139,91147]"/>
  <delete-node tree="identifier: getPagePoolInfo [91148,91163]"/>
  <delete-node tree="(: ( [91163,91164]"/>
  <delete-tree tree="parameter [91164,91182]"/>
  <delete-node tree=",: , [91182,91183]"/>
  <delete-tree tree="parameter [91184,91200]"/>
  <delete-node tree="): ) [91200,91201]"/>
  <delete-tree tree="visibility [91211,91219]"/>
  <delete-tree tree="state_mutability [91229,91233]"/>
  <delete-node tree="virtual: virtual [91243,91250]"/>
  <delete-tree tree="return_type_definition [91260,91558]"/>
  <delete-node tree="{: { [91564,91565]"/>
  <delete-tree tree="variable_declaration_statement [91575,91627]"/>
  <delete-tree tree="expression_statement [91637,91675]"/>
  <delete-tree tree="expression_statement [91685,91734]"/>
  <delete-tree tree="expression_statement [91744,91789]"/>
  <delete-tree tree="expression_statement [91799,91841]"/>
  <delete-tree tree="expression_statement [91851,91892]"/>
  <delete-tree tree="expression_statement [91902,91942]"/>
  <delete-tree tree="variable_declaration_statement [91952,91975]"/>
  <delete-node tree="for: for [91985,91988]"/>
  <delete-node tree="(: ( [91989,91990]"/>
  <delete-tree tree="variable_declaration_statement [91990,92013]"/>
  <delete-tree tree="expression_statement [92014,92028]"/>
  <delete-tree tree="update_expression [92029,92032]"/>
  <delete-node tree="): ) [92032,92033]"/>
  <delete-node tree="{: { [92034,92035]"/>
  <delete-tree tree="variable_declaration_statement [92049,92085]"/>
  <delete-tree tree="expression_statement [92099,92139]"/>
  <delete-tree tree="expression_statement [92153,92215]"/>
  <delete-tree tree="expression_statement [92229,92283]"/>
  <delete-tree tree="expression_statement [92297,92345]"/>
  <delete-tree tree="expression_statement [92419,92463]"/>
  <delete-tree tree="expression_statement [92477,92490]"/>
  <delete-node tree="}: } [92500,92501]"/>
  <delete-node tree="block_statement [92034,92501]"/>
  <delete-node tree="for_statement [91985,92501]"/>
  <delete-node tree="}: } [92507,92508]"/>
  <delete-node tree="function_body [91564,92508]"/>
  <delete-node tree="function_definition [91139,92508]"/>
  <delete-tree tree="array_access [93739,93765]"/>
  <delete-node tree="function: function [94695,94703]"/>
  <delete-node tree="identifier: getUserInfo [94704,94715]"/>
  <delete-node tree="(: ( [94715,94716]"/>
  <delete-node tree=",: , [94728,94729]"/>
  <delete-node tree="): ) [94743,94744]"/>
  <delete-tree tree="state_mutability [94771,94775]"/>
  <delete-node tree="returns: returns [94785,94792]"/>
  <delete-node tree="(: ( [94793,94794]"/>
  <delete-tree tree="parameter [94808,94823]"/>
  <delete-node tree=",: , [94823,94824]"/>
  <delete-tree tree="parameter [94838,94859]"/>
  <delete-node tree=",: , [94859,94860]"/>
  <delete-node tree="identifier: _modifiedWeight [94882,94897]"/>
  <delete-node tree="parameter [94874,94897]"/>
  <delete-node tree=",: , [94897,94898]"/>
  <delete-tree tree="parameter [94912,94929]"/>
  <delete-node tree="): ) [94939,94940]"/>
  <delete-node tree="return_type_definition [94785,94940]"/>
  <delete-node tree="{: { [94946,94947]"/>
  <delete-tree tree="variable_declaration_statement [94957,95003]"/>
  <delete-node tree="identifier: _modifiedWeight [95089,95104]"/>
  <delete-node tree="=: = [95105,95106]"/>
  <delete-node tree="identifier: getUserModifiedWeight [95107,95128]"/>
  <delete-node tree="(: ( [95128,95129]"/>
  <delete-node tree=",: , [95133,95134]"/>
  <delete-node tree="): ) [95140,95141]"/>
  <delete-node tree="call_expression [95107,95141]"/>
  <delete-node tree="assignment_expression [95089,95141]"/>
  <delete-node tree="expression_statement [95089,95142]"/>
  <delete-node tree="}: } [95184,95185]"/>
  <delete-node tree="function_body [94946,95185]"/>
  <delete-node tree="function_definition [94695,95185]"/>
  <delete-node tree="(: ( [95815,95816]"/>
  <delete-node tree=",: , [95826,95827]"/>
  <delete-node tree=",: , [95844,95845]"/>
  <delete-node tree=",: , [95864,95865]"/>
  <delete-node tree="): ) [95878,95879]"/>
  <delete-node tree="tuple_expression [95815,95879]"/>
  <delete-node tree="function: function [96330,96338]"/>
  <delete-node tree="identifier: updateUserInfo [96339,96353]"/>
  <delete-node tree="(: ( [96353,96354]"/>
  <delete-node tree="storage: storage [96373,96380]"/>
  <delete-node tree="identifier: _user [96381,96386]"/>
  <delete-node tree="parameter [96364,96386]"/>
  <delete-node tree=",: , [96386,96387]"/>
  <delete-node tree=",: , [96412,96413]"/>
  <delete-tree tree="parameter [96423,96444]"/>
  <delete-node tree=",: , [96444,96445]"/>
  <delete-node tree="identifier: _endBlock [96463,96472]"/>
  <delete-node tree="parameter [96455,96472]"/>
  <delete-node tree="): ) [96478,96479]"/>
  <delete-tree tree="function_body [96488,96611]"/>
  <delete-node tree="function_definition [96330,96611]"/>
  <delete-node tree="function: function [96619,96627]"/>
  <delete-node tree="identifier: getOracleWeight [96628,96643]"/>
  <delete-node tree="(: ( [96643,96644]"/>
  <delete-tree tree="parameter [96654,96676]"/>
  <delete-node tree=",: , [96676,96677]"/>
  <delete-tree tree="parameter [96687,96702]"/>
  <delete-node tree="): ) [96708,96709]"/>
  <delete-tree tree="visibility [96710,96717]"/>
  <delete-tree tree="return_type_definition [96718,96749]"/>
  <delete-node tree="{: { [96750,96751]"/>
  <delete-node tree="identifier: _oracleWeight [96761,96774]"/>
  <delete-node tree="=: = [96775,96776]"/>
  <delete-node tree="identifier: calculateOracleWeight [96777,96798]"/>
  <delete-node tree="(: ( [96798,96799]"/>
  <delete-tree tree="call_argument [96799,96804]"/>
  <delete-node tree=",: , [96804,96805]"/>
  <delete-node tree="): ) [96813,96814]"/>
  <delete-node tree="call_expression [96777,96814]"/>
  <delete-node tree="assignment_expression [96761,96814]"/>
  <delete-node tree="expression_statement [96761,96815]"/>
  <delete-tree tree="expression_statement [96825,96860]"/>
  <delete-node tree="}: } [96866,96867]"/>
  <delete-node tree="function_body [96750,96867]"/>
  <delete-node tree="function_definition [96619,96867]"/>
  <delete-tree tree="parameter [100119,100131]"/>
  <delete-node tree=",: , [100131,100132]"/>
  <delete-tree tree="parameter [100142,100155]"/>
  <delete-node tree=",: , [100155,100156]"/>
  <delete-node tree="identifier: _oldOriginWeight [100174,100190]"/>
  <delete-node tree="parameter [100166,100190]"/>
  <delete-node tree=",: , [100190,100191]"/>
  <delete-node tree="identifier: _newOriginWeight [100209,100225]"/>
  <delete-node tree="parameter [100201,100225]"/>
  <delete-node tree=",: , [100225,100226]"/>
  <delete-node tree="identifier: _inviteeWeight [100244,100258]"/>
  <delete-node tree="parameter [100236,100258]"/>
  <delete-node tree=",: , [100258,100259]"/>
  <delete-node tree="identifier: _existedAmount [100277,100291]"/>
  <delete-node tree="parameter [100269,100291]"/>
  <delete-node tree="identifier: _user [100424,100429]"/>
  <delete-tree tree="member_expression [101976,101992]"/>
  <delete-node tree="=: = [86031,86032]"/>
  <delete-tree tree="expression_statement [100499,100577]"/>
  <delete-node tree="identifier: _existedAmount [100590,100604]"/>
  <delete-tree tree="call_argument [100663,100677]"/>
  <delete-tree tree="variable_declaration_statement [100705,100751]"/>
  <delete-node tree="identifier: _existedAmount [100793,100807]"/>
  <delete-node tree="identifier: _pid [100899,100903]"/>
  <delete-node tree="=: = [101012,101013]"/>
  <delete-tree tree="member_expression [101035,101055]"/>
  <delete-node tree="(: ( [101055,101056]"/>
  <delete-node tree="): ) [101070,101071]"/>
  <delete-node tree="call_expression [101035,101071]"/>
  <delete-node tree=".: . [101071,101072]"/>
  <delete-node tree="identifier: sub [101072,101075]"/>
  <delete-node tree="member_expression [101035,101075]"/>
  <delete-node tree="(: ( [101075,101076]"/>
  <delete-tree tree="member_expression [101102,101122]"/>
  <delete-node tree="(: ( [101122,101123]"/>
  <delete-node tree="): ) [101137,101138]"/>
  <delete-node tree="call_expression [101102,101138]"/>
  <delete-node tree="call_argument [101102,101138]"/>
  <delete-node tree="): ) [101160,101161]"/>
  <delete-node tree="call_expression [101035,101161]"/>
  <delete-node tree="variable_declaration_statement [100987,101162]"/>
  <delete-node tree="identifier: addInviteeWeight [101252,101268]"/>
  <delete-node tree="=: = [101323,101324]"/>
  <delete-tree tree="member_expression [101347,101367]"/>
  <delete-node tree="(: ( [101367,101368]"/>
  <delete-node tree="): ) [101382,101383]"/>
  <delete-node tree="call_expression [101347,101383]"/>
  <delete-node tree=".: . [101383,101384]"/>
  <delete-node tree="identifier: sub [101384,101387]"/>
  <delete-node tree="member_expression [101347,101387]"/>
  <delete-node tree="(: ( [101387,101388]"/>
  <delete-tree tree="member_expression [101414,101434]"/>
  <delete-node tree="(: ( [101434,101435]"/>
  <delete-node tree="): ) [101449,101450]"/>
  <delete-node tree="call_expression [101414,101450]"/>
  <delete-node tree="call_argument [101414,101450]"/>
  <delete-node tree="): ) [101472,101473]"/>
  <delete-node tree="call_expression [101347,101473]"/>
  <delete-node tree="variable_declaration_statement [101298,101474]"/>
  <delete-node tree="identifier: addInvitorWeight [101540,101556]"/>
  <delete-node tree="identifier: addInviteeWeight [101657,101673]"/>
  <delete-node tree="function: function [101767,101775]"/>
  <delete-node tree="identifier: verifyDescription [101776,101793]"/>
  <delete-node tree="(: ( [101793,101794]"/>
  <delete-tree tree="parameter [101794,101819]"/>
  <delete-node tree="): ) [101819,101820]"/>
  <delete-tree tree="state_mutability [101848,101852]"/>
  <delete-node tree="returns: returns [101862,101869]"/>
  <delete-node tree="(: ( [101870,101871]"/>
  <delete-node tree="): ) [101883,101884]"/>
  <delete-node tree="return_type_definition [101862,101884]"/>
  <delete-node tree="{: { [101890,101891]"/>
  <delete-tree tree="variable_declaration_statement [101901,101945]"/>
  <delete-tree tree="expression_statement [102003,102044]"/>
  <delete-tree tree="expression_statement [102054,102069]"/>
  <delete-tree tree="variable_declaration_statement [102079,102087]"/>
  <delete-tree tree="for_statement [102097,102315]"/>
  <delete-node tree="}: } [102321,102322]"/>
  <delete-node tree="function_body [101890,102322]"/>
  <delete-node tree="function_definition [101767,102322]"/>
</actions>
