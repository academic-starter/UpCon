<?xml version="1.0" ?>
<matches>
  <match src=".: . [104172,104173]" dest=".: . [41990,41991]"/>
  <match src="call_argument [29110,29136]" dest="call_argument [44782,44808]"/>
  <match src="number_literal: 0 [86471,86472]" dest="number_literal: 0 [73778,73779]"/>
  <match src="identifier: stringify [33646,33655]" dest="identifier: stringify [49318,49327]"/>
  <match src=",: , [32155,32156]" dest=",: , [47827,47828]"/>
  <match src=",: , [102614,102615]" dest=",: , [40432,40433]"/>
  <match src="for_statement [8534,8615]" dest="for_statement [8633,8714]"/>
  <match src="function_body [99672,99752]" dest="function_body [37490,37570]"/>
  <match src="): ) [23888,23889]" dest="): ) [55325,55326]"/>
  <match src="variable_declaration [72977,72996]" dest="variable_declaration [71825,71840]"/>
  <match src="primitive_type [48208,48215]" dest="primitive_type [56085,56092]"/>
  <match src="return_type_definition [1901,1918]" dest="return_type_definition [1955,1972]"/>
  <match src="primitive_type [43464,43471]" dest="primitive_type [12718,12725]"/>
  <match src="pragma: pragma [0,6]" dest="pragma: pragma [54,60]"/>
  <match src="(: ( [10366,10367]" dest="(: ( [10465,10466]"/>
  <match src="[: [ [37307,37308]" dest="[: [ [52979,52980]"/>
  <match src="variable_declaration [97773,97785]" dest="variable_declaration [35559,35571]"/>
  <match src="identifier: _state [88746,88752]" dest="identifier: _state [28875,28881]"/>
  <match src="parameter [99076,99080]" dest="parameter [36894,36898]"/>
  <match src="identifier: BOOTSTRAPPING_PERIOD [42889,42909]" dest="identifier: BOOTSTRAPPING_PERIOD [12143,12163]"/>
  <match src="&quot;: &quot; [64270,64271]" dest="&quot;: &quot; [60201,60202]"/>
  <match src="identifier: msg [80906,80909]" dest="identifier: msg [70975,70978]"/>
  <match src="call_expression [65649,65662]" dest="call_expression [67147,67160]"/>
  <match src="function_definition [95637,95776]" dest="function_definition [33423,33562]"/>
  <match src="state_mutability [97315,97319]" dest="state_mutability [35101,35105]"/>
  <match src="(: ( [82486,82487]" dest="(: ( [71392,71393]"/>
  <match src="member_expression [94366,94381]" dest="member_expression [32152,32167]"/>
  <match src="function: function [62564,62572]" dest="function: function [26433,26441]"/>
  <match src="type_name [88330,88337]" dest="type_name [28459,28466]"/>
  <match src=".: . [103623,103624]" dest=".: . [41441,41442]"/>
  <match src="identifier: recipient [13038,13047]" dest="identifier: recipient [22714,22723]"/>
  <match src="(: ( [82567,82568]" dest="(: ( [71921,71922]"/>
  <match src="call_expression [3291,3330]" dest="call_expression [3345,3384]"/>
  <match src="uint: uint [54560,54564]" dest="uint: uint [21554,21558]"/>
  <match src="primitive_type [93969,93976]" dest="primitive_type [31755,31762]"/>
  <match src="): ) [29177,29178]" dest="): ) [44849,44850]"/>
  <match src="member_expression [102121,102135]" dest="member_expression [39939,39953]"/>
  <match src="call_argument [9466,9476]" dest="call_argument [9565,9575]"/>
  <match src="identifier: Require [106442,106449]" dest="identifier: Require [68371,68378]"/>
  <match src="uint256: uint256 [43988,43995]" dest="uint256: uint256 [13242,13249]"/>
  <match src="): ) [9207,9208]" dest="): ) [9306,9307]"/>
  <match src="event_paramater [15066,15089]" dest="event_paramater [24742,24765]"/>
  <match src="}: } [8614,8615]" dest="}: } [8713,8714]"/>
  <match src="identifier: account [101911,101918]" dest="identifier: account [39729,39736]"/>
  <match src="identifier: b [8558,8559]" dest="identifier: b [8657,8658]"/>
  <match src="parameter [101837,101851]" dest="parameter [39655,39669]"/>
  <match src="member_expression [81069,81079]" dest="member_expression [70642,70652]"/>
  <match src=",: , [30298,30299]" dest=",: , [45970,45971]"/>
  <match src="==: == [8418,8420]" dest="==: == [8517,8519]"/>
  <match src="{: { [97627,97628]" dest="{: { [35413,35414]"/>
  <match src="}: } [90639,90640]" dest="}: } [75711,75712]"/>
  <match src=".: . [46492,46493]" dest=".: . [15746,15747]"/>
  <match src="(: ( [93627,93628]" dest="(: ( [31413,31414]"/>
  <match src="): ) [29192,29193]" dest="): ) [44864,44865]"/>
  <match src="identifier: that [49239,49243]" dest="identifier: that [78002,78006]"/>
  <match src="string_literal [21868,21903]" dest="string_literal [63801,63838]"/>
  <match src="visibility [4705,4713]" dest="visibility [4759,4767]"/>
  <match src="memory: memory [46498,46504]" dest="memory: memory [15752,15758]"/>
  <match src="call_argument [102103,102109]" dest="call_argument [39921,39927]"/>
  <match src="for_statement [34320,34907]" dest="for_statement [49992,50579]"/>
  <match src="identifier: amount [101005,101011]" dest="identifier: amount [38823,38829]"/>
  <match src="visibility [101185,101193]" dest="visibility [39003,39011]"/>
  <match src="]: ] [102705,102706]" dest="]: ] [40523,40524]"/>
  <match src="): ) [6740,6741]" dest="): ) [6839,6840]"/>
  <match src="call_argument [99972,99978]" dest="call_argument [37790,37796]"/>
  <match src="bytes: bytes [37165,37170]" dest="bytes: bytes [52837,52842]"/>
  <match src="visibility [43472,43479]" dest="visibility [12726,12733]"/>
  <match src="memory: memory [9765,9771]" dest="memory: memory [9864,9870]"/>
  <match src="member_expression [105024,105047]" dest="member_expression [42842,42865]"/>
  <match src="enum_declaration [87849,87921]" dest="enum_declaration [27978,28050]"/>
  <match src="return: return [97075,97081]" dest="return: return [34861,34867]"/>
  <match src="state_variable_declaration [44238,44286]" dest="state_variable_declaration [13492,13540]"/>
  <match src="primitive_type [69894,69901]" dest="primitive_type [65197,65204]"/>
  <match src="(: ( [30950,30951]" dest="(: ( [46622,46623]"/>
  <match src="number_literal: 1 [42818,42819]" dest="number_literal: 1 [12072,12073]"/>
  <match src="type_name [14159,14166]" dest="type_name [23835,23842]"/>
  <match src="identifier: SafeMath [74653,74661]" dest="identifier: SafeMath [76980,76988]"/>
  <match src="identifier: s [53617,53618]" dest="identifier: s [20611,20612]"/>
  <match src="function_body [100076,100168]" dest="function_body [37894,37986]"/>
  <match src="type_name [31101,31105]" dest="type_name [46773,46777]"/>
  <match src="): ) [1478,1479]" dest="): ) [1532,1533]"/>
  <match src="parameter [93108,93115]" dest="parameter [30894,30901]"/>
  <match src="primitive_type [82088,82095]" dest="primitive_type [71727,71734]"/>
  <match src="): ) [65661,65662]" dest="): ) [67159,67160]"/>
  <match src="return_statement [93452,93485]" dest="return_statement [31238,31271]"/>
  <match src="comment: // benefit is lost if 'b' is also tested. [2434,2475]" dest="comment: // benefit is lost if 'b' is also tested. [2488,2529]"/>
  <match src="type_name [10768,10775]" dest="type_name [10867,10874]"/>
  <match src="type_name [88547,88580]" dest="type_name [28676,28709]"/>
  <match src=",: , [84873,84874]" dest=",: , [79342,79343]"/>
  <match src="for: for [8534,8537]" dest="for: for [8633,8636]"/>
  <match src="call_expression [77095,77102]" dest="call_expression [61065,61072]"/>
  <match src="type_name [106137,106144]" dest="type_name [68066,68073]"/>
  <match src="identifier: implementation [106791,106805]" dest="identifier: implementation [68720,68734]"/>
  <match src="binary_expression [36718,36724]" dest="binary_expression [52390,52396]"/>
  <match src="identifier: balance [101332,101339]" dest="identifier: balance [39150,39157]"/>
  <match src="]: ] [87718,87719]" dest="]: ] [27847,27848]"/>
  <match src="parameter [99878,99892]" dest="parameter [37696,37710]"/>
  <match src="identifier: vote [103968,103972]" dest="identifier: vote [41786,41790]"/>
  <match src="{: { [10373,10374]" dest="{: { [10472,10473]"/>
  <match src="primitive_type [37165,37170]" dest="primitive_type [52837,52842]"/>
  <match src="identifier: amount [104831,104837]" dest="identifier: amount [42649,42655]"/>
  <match src="identifier: amount [104519,104525]" dest="identifier: amount [42337,42343]"/>
  <match src=".: . [81363,81364]" dest=".: . [80582,80583]"/>
  <match src="comment: // populate the result with &quot;0x&quot; [36226,36258]" dest="comment: // populate the result with &quot;0x&quot; [51898,51930]"/>
  <match src="identifier: oracle [92869,92875]" dest="identifier: oracle [30655,30661]"/>
  <match src="(: ( [7172,7173]" dest="(: ( [7271,7272]"/>
  <match src="): ) [67583,67584]" dest="): ) [62132,62133]"/>
  <match src="parameter [75125,75139]" dest="parameter [55024,55038]"/>
  <match src="identifier: reason [31152,31158]" dest="identifier: reason [46824,46830]"/>
  <match src="type_name [36204,36209]" dest="type_name [51876,51881]"/>
  <match src="(: ( [7624,7625]" dest="(: ( [7723,7724]"/>
  <match src="function_definition [92495,92595]" dest="function_definition [30281,30381]"/>
  <match src="user_defined_type [10311,10315]" dest="user_defined_type [10410,10414]"/>
  <match src=".: . [103544,103545]" dest=".: . [41362,41363]"/>
  <match src="comment: // 1.54 USDC (targeting 4.5% inflation) [43000,43039]" dest="comment: // 1.54 USDC (targeting 4.5% inflation) [12254,12293]"/>
  <match src="visibility [44578,44586]" dest="visibility [13832,13840]"/>
  <match src="identifier: lessUsdc [80497,80505]" dest="identifier: start [77178,77183]"/>
  <match src="(: ( [104223,104224]" dest="(: ( [42041,42042]"/>
  <match src="parameter [71999,72006]" dest="parameter [61950,61957]"/>
  <match src="visibility [54485,54493]" dest="visibility [21479,21487]"/>
  <match src="identifier: Account [94477,94484]" dest="identifier: Account [32263,32270]"/>
  <match src="type_name [52642,52649]" dest="type_name [19636,19643]"/>
  <match src="primitive_type [51354,51361]" dest="primitive_type [59224,59231]"/>
  <match src="(: ( [54064,54065]" dest="(: ( [21058,21059]"/>
  <match src="{: { [95588,95589]" dest="{: { [33374,33375]"/>
  <match src="identifier: amount [20782,20788]" dest="identifier: amount [54921,54927]"/>
  <match src="primitive_type [52906,52910]" dest="primitive_type [19900,19904]"/>
  <match src="identifier: to [53267,53269]" dest="identifier: to [20261,20263]"/>
  <match src="}: } [31757,31758]" dest="}: } [47429,47430]"/>
  <match src="parameter [919,928]" dest="parameter [973,982]"/>
  <match src="identifier: length [35243,35249]" dest="identifier: length [50915,50921]"/>
  <match src="string_literal [90933,90994]" dest="string_literal [76005,76066]"/>
  <match src=".: . [94390,94391]" dest=".: . [32176,32177]"/>
  <match src="identifier: Mint [53643,53647]" dest="identifier: Mint [20637,20641]"/>
  <match src="function: function [9726,9734]" dest="function: function [9825,9833]"/>
  <match src="pure: pure [1395,1399]" dest="pure: pure [1449,1453]"/>
  <match src="identifier: D256 [45579,45583]" dest="identifier: D256 [14833,14837]"/>
  <match src="call_expression [48987,49096]" dest="call_expression [55392,55470]"/>
  <match src="identifier: balanceOf [72146,72155]" dest="identifier: balanceOf [58254,58263]"/>
  <match src="address: address [51838,51845]" dest="address: address [60717,60724]"/>
  <match src="address: address [98889,98896]" dest="address: address [36707,36714]"/>
  <match src="uint256: uint256 [95701,95708]" dest="uint256: uint256 [33487,33494]"/>
  <match src="identifier: _state [97504,97510]" dest="identifier: _state [35290,35296]"/>
  <match src="function_definition [97558,97693]" dest="function_definition [35344,35479]"/>
  <match src=".: . [46639,46640]" dest=".: . [15893,15894]"/>
  <match src="type_name [53301,53305]" dest="type_name [20295,20299]"/>
  <match src="(: ( [37987,37988]" dest="(: ( [53659,53660]"/>
  <match src="identifier: State [98575,98580]" dest="identifier: State [36393,36398]"/>
  <match src="): ) [103023,103024]" dest="): ) [40841,40842]"/>
  <match src="identifier: i [34333,34334]" dest="identifier: i [50005,50006]"/>
  <match src="identifier: BASE [7863,7867]" dest="identifier: BASE [7962,7966]"/>
  <match src="variable_declaration_statement [66439,66477]" dest="variable_declaration_statement [62406,62430]"/>
  <match src="identifier: State [107536,107541]" dest="identifier: State [81654,81659]"/>
  <match src="parameter [92320,92325]" dest="parameter [30106,30111]"/>
  <match src="): ) [90542,90543]" dest="): ) [75614,75615]"/>
  <match src="identifier: EpochStrategy [43360,43373]" dest="identifier: EpochStrategy [12614,12627]"/>
  <match src="call_expression [82904,82918]" dest="call_expression [71655,71669]"/>
  <match src="identifier: coupons [88415,88422]" dest="identifier: coupons [28544,28551]"/>
  <match src="member_expression [100407,100421]" dest="member_expression [38225,38239]"/>
  <match src="identifier: owner [102674,102679]" dest="identifier: owner [40492,40497]"/>
  <match src="function: function [97134,97142]" dest="function: function [34920,34928]"/>
  <match src="}: } [99986,99987]" dest="}: } [37804,37805]"/>
  <match src="view: view [95687,95691]" dest="view: view [33473,33477]"/>
  <match src="return_statement [46958,46983]" dest="return_statement [16212,16237]"/>
  <match src="identifier: coupons [102071,102078]" dest="identifier: coupons [39889,39896]"/>
  <match src=",: , [33697,33698]" dest=",: , [49369,49370]"/>
  <match src=".: . [10514,10515]" dest=".: . [10613,10614]"/>
  <match src="call_argument [20822,20831]" dest="call_argument [64155,64164]"/>
  <match src=".: . [81746,81747]" dest=".: . [70926,70927]"/>
  <match src="type_name [1848,1855]" dest="type_name [1902,1909]"/>
  <match src="parameter [46938,46945]" dest="parameter [16192,16199]"/>
  <match src="return_type_definition [36008,36030]" dest="return_type_definition [51680,51702]"/>
  <match src="returns: returns [93823,93830]" dest="returns: returns [31609,31616]"/>
  <match src="primitive_type [67596,67603]" dest="primitive_type [58605,58612]"/>
  <match src="call_expression [82543,82586]" dest="call_expression [71897,71940]"/>
  <match src="constant: constant [28640,28648]" dest="constant: constant [44312,44320]"/>
  <match src="identifier: amount [99886,99892]" dest="identifier: amount [37704,37710]"/>
  <match src="call_argument [9970,9974]" dest="call_argument [10069,10073]"/>
  <match src="identifier: that [28784,28788]" dest="identifier: that [44456,44460]"/>
  <match src="type_name [87953,87960]" dest="type_name [28082,28089]"/>
  <match src="visibility [13424,13432]" dest="visibility [23100,23108]"/>
  <match src="function_body [100924,101088]" dest="function_body [38742,38906]"/>
  <match src="string [106734,106755]" dest="string [68663,68684]"/>
  <match src="==: == [10521,10523]" dest="==: == [10620,10622]"/>
  <match src="=: = [105296,105297]" dest="=: = [43114,43115]"/>
  <match src="returns: returns [8955,8962]" dest="returns: returns [9054,9061]"/>
  <match src="identifier: current [87602,87609]" dest="identifier: current [27731,27738]"/>
  <match src="identifier: Approval [22855,22863]" dest="identifier: CouponApproval [63401,63415]"/>
  <match src="call_expression [82470,82498]" dest="call_expression [71383,71404]"/>
  <match src="): ) [62579,62580]" dest="): ) [26448,26449]"/>
  <match src="call_argument [8828,8835]" dest="call_argument [8927,8934]"/>
  <match src="address: address [54144,54151]" dest="address: address [21138,21145]"/>
  <match src="type_name [79811,79818]" dest="type_name [69537,69544]"/>
  <match src="identifier: staged [101230,101236]" dest="identifier: staged [39048,39054]"/>
  <match src="}: } [103888,103889]" dest="}: } [41706,41707]"/>
  <match src="]: ] [101550,101551]" dest="]: ] [39368,39369]"/>
  <match src="type_name [52539,52546]" dest="type_name [19533,19540]"/>
  <match src="type_name [44322,44329]" dest="type_name [13576,13583]"/>
  <match src=".: . [104359,104360]" dest=".: . [42177,42178]"/>
  <match src="[: [ [96196,96197]" dest="[: [ [33982,33983]"/>
  <match src="identifier: _state [96664,96670]" dest="identifier: _state [34450,34456]"/>
  <match src=".: . [80869,80870]" dest=".: . [71270,71271]"/>
  <match src="private: private [44246,44253]" dest="private: private [13500,13507]"/>
  <match src="internal: internal [101465,101473]" dest="internal: internal [39283,39291]"/>
  <match src="memory: memory [104718,104724]" dest="memory: memory [42536,42542]"/>
  <match src="expression_statement [35765,35810]" dest="expression_statement [51437,51482]"/>
  <match src="member_expression [100649,100685]" dest="member_expression [38467,38503]"/>
  <match src="(: ( [67575,67576]" dest="(: ( [62124,62125]"/>
  <match src="member_expression [101023,101044]" dest="member_expression [38841,38862]"/>
  <match src="primitive_type [31885,31892]" dest="primitive_type [47557,47564]"/>
  <match src="new: new [36200,36203]" dest="new: new [51872,51875]"/>
  <match src="identifier: self [9014,9018]" dest="identifier: self [9113,9117]"/>
  <match src="uint256: uint256 [2280,2287]" dest="uint256: uint256 [2334,2341]"/>
  <match src="uint256: uint256 [45065,45072]" dest="uint256: uint256 [14319,14326]"/>
  <match src="bytes32: bytes32 [53366,53373]" dest="bytes32: bytes32 [20360,20367]"/>
  <match src=",: , [5341,5342]" dest=",: , [5395,5396]"/>
  <match src="identifier: errorMessage [1946,1958]" dest="identifier: errorMessage [2000,2012]"/>
  <match src="identifier: mod [5328,5331]" dest="identifier: mod [5382,5385]"/>
  <match src="type_name [102583,102590]" dest="type_name [40401,40408]"/>
  <match src="identifier: reject [104782,104788]" dest="identifier: reject [42600,42606]"/>
  <match src="parameter [97055,97062]" dest="parameter [34841,34848]"/>
  <match src="return_type_definition [45297,45326]" dest="return_type_definition [14551,14580]"/>
  <match src="primitive_type [36280,36284]" dest="primitive_type [51952,51956]"/>
  <match src="member_expression [96017,96061]" dest="member_expression [33803,33847]"/>
  <match src="identifier: length [35290,35296]" dest="identifier: length [50962,50968]"/>
  <match src="visibility [77037,77045]" dest="visibility [60781,60789]"/>
  <match src="&quot;: &quot; [35142,35143]" dest="&quot;: &quot; [50814,50815]"/>
  <match src=",: , [5352,5353]" dest=",: , [5406,5407]"/>
  <match src="identifier: incrementBalanceOfStaged [80683,80707]" dest="identifier: incrementBalanceOfStaged [70298,70322]"/>
  <match src="primitive_type [29871,29878]" dest="primitive_type [45543,45550]"/>
  <match src="primitive_type [81408,81415]" dest="primitive_type [70690,70697]"/>
  <match src="type_name [67596,67603]" dest="type_name [58605,58612]"/>
  <match src="returns: returns [54308,54315]" dest="returns: returns [21302,21309]"/>
  <match src="type_cast_expression [43097,43148]" dest="type_cast_expression [12351,12402]"/>
  <match src="parameter [14193,14197]" dest="parameter [23869,23873]"/>
  <match src="call_argument [31640,31648]" dest="call_argument [47312,47320]"/>
  <match src="comment: // 66% [43821,43827]" dest="comment: // 66% [13075,13081]"/>
  <match src="emit: emit [81349,81353]" dest="emit: emit [80567,80571]"/>
  <match src="address: address [88226,88233]" dest="address: address [28355,28362]"/>
  <match src="identifier: one [65657,65660]" dest="identifier: one [67155,67158]"/>
  <match src="parameter [33211,33225]" dest="parameter [48883,48897]"/>
  <match src="identifier: b [7714,7715]" dest="identifier: b [7813,7814]"/>
  <match src="number_literal: 4 [37852,37853]" dest="number_literal: 4 [53524,53525]"/>
  <match src="=: = [101045,101046]" dest="=: = [38863,38864]"/>
  <match src="primitive_type [93794,93801]" dest="primitive_type [31580,31587]"/>
  <match src="number_literal: 0 [35272,35273]" dest="number_literal: 0 [50944,50945]"/>
  <match src="(: ( [101570,101571]" dest="(: ( [39388,39389]"/>
  <match src="visibility [7527,7535]" dest="visibility [7626,7634]"/>
  <match src=":: : [6705,6706]" dest=":: : [6804,6805]"/>
  <match src="primitive_type [64511,64518]" dest="primitive_type [65271,65278]"/>
  <match src="identifier: msg [83746,83749]" dest="identifier: msg [62597,62600]"/>
  <match src="parameter [20431,20445]" dest="parameter [63535,63549]"/>
  <match src="identifier: updateAllowanceCoupons [102369,102391]" dest="identifier: updateAllowanceCoupons [40187,40209]"/>
  <match src="uint256: uint256 [51489,51496]" dest="uint256: uint256 [63982,63989]"/>
  <match src="): ) [54797,54798]" dest="): ) [21791,21792]"/>
  <match src="identifier: encodePacked [28988,29000]" dest="identifier: encodePacked [44660,44672]"/>
  <match src="): ) [93439,93440]" dest="): ) [31225,31226]"/>
  <match src="function: function [44552,44560]" dest="function: function [13806,13814]"/>
  <match src=".: . [104553,104554]" dest=".: . [42371,42372]"/>
  <match src="parameter [9742,9758]" dest="parameter [9841,9857]"/>
  <match src="identifier: Fluid [106505,106510]" dest="identifier: Fluid [68434,68439]"/>
  <match src="primitive_type [100882,100889]" dest="primitive_type [38700,38707]"/>
  <match src="assignment_expression [103003,103048]" dest="assignment_expression [40821,40866]"/>
  <match src="call_struct_argument [7155,7184]" dest="call_struct_argument [7254,7283]"/>
  <match src="member_expression [95008,95020]" dest="member_expression [32794,32806]"/>
  <match src="(: ( [14538,14539]" dest="(: ( [24214,24215]"/>
  <match src="}: } [96503,96504]" dest="}: } [34289,34290]"/>
  <match src="struct_member [43410,43424]" dest="struct_member [12664,12678]"/>
  <match src="identifier: getDAOExitLockupEpochs [102319,102341]" dest="identifier: getDAOExitLockupEpochs [40137,40159]"/>
  <match src="primitive_type [99641,99647]" dest="primitive_type [37459,37465]"/>
  <match src="function_body [97762,97879]" dest="function_body [35548,35665]"/>
  <match src="member_expression [46671,46683]" dest="member_expression [15925,15937]"/>
  <match src="member_expression [9466,9476]" dest="member_expression [9565,9575]"/>
  <match src="}: } [97410,97411]" dest="}: } [35196,35197]"/>
  <match src="variable_declaration [35235,35249]" dest="variable_declaration [50907,50921]"/>
  <match src="bytes32: bytes32 [29287,29294]" dest="bytes32: bytes32 [44959,44966]"/>
  <match src="state_mutability [3250,3254]" dest="state_mutability [3304,3308]"/>
  <match src="identifier: msg [80585,80588]" dest="identifier: msg [77468,77471]"/>
  <match src="primitive_type [29828,29832]" dest="primitive_type [45500,45504]"/>
  <match src="identifier: sender [53664,53670]" dest="identifier: sender [20658,20664]"/>
  <match src=".: . [66356,66357]" dest=".: . [19050,19051]"/>
  <match src="private: private [66930,66937]" dest="private: private [66877,66884]"/>
  <match src="call_argument [8804,8838]" dest="call_argument [8903,8937]"/>
  <match src="parameter [99023,99040]" dest="parameter [36841,36858]"/>
  <match src="member_expression [101895,101910]" dest="member_expression [39713,39728]"/>
  <match src="(: ( [103436,103437]" dest="(: ( [41254,41255]"/>
  <match src="identifier: getPartial [9670,9680]" dest="identifier: getPartial [9769,9779]"/>
  <match src="(: ( [105215,105216]" dest="(: ( [43033,43034]"/>
  <match src="string [84888,84896]" dest="string [79357,79368]"/>
  <match src="}: } [35890,35891]" dest="}: } [51562,51563]"/>
  <match src="primitive_type [103361,103368]" dest="primitive_type [41179,41186]"/>
  <match src="emit: emit [90600,90604]" dest="emit: emit [75672,75676]"/>
  <match src="identifier: factory [54111,54118]" dest="identifier: factory [21105,21112]"/>
  <match src="=: = [100647,100648]" dest="=: = [38465,38466]"/>
  <match src="parameter [35959,35972]" dest="parameter [51631,51644]"/>
  <match src="primitive_type [103746,103753]" dest="primitive_type [41564,41571]"/>
  <match src="(: ( [90578,90579]" dest="(: ( [75650,75651]"/>
  <match src="member_expression [78498,78508]" dest="member_expression [81978,81988]"/>
  <match src="event_paramater [52562,52585]" dest="event_paramater [19556,19579]"/>
  <match src="function_body [103145,103281]" dest="function_body [40963,41099]"/>
  <match src=",: , [52585,52586]" dest=",: , [19579,19580]"/>
  <match src=",: , [31133,31134]" dest=",: , [46805,46806]"/>
  <match src="}: } [72199,72200]" dest="}: } [58412,58413]"/>
  <match src="identifier: Account [106213,106220]" dest="identifier: Account [68142,68149]"/>
  <match src="type_name [953,960]" dest="type_name [1007,1014]"/>
  <match src="primitive_type [5405,5412]" dest="primitive_type [5459,5466]"/>
  <match src="identifier: getBootstrappingPrice [45259,45280]" dest="identifier: getBootstrappingPrice [14513,14534]"/>
  <match src="identifier: COMMA [32314,32319]" dest="identifier: COMMA [47986,47991]"/>
  <match src="return_type_definition [9611,9632]" dest="return_type_definition [9710,9731]"/>
  <match src="function: function [96995,97003]" dest="function: function [34781,34789]"/>
  <match src="identifier: that [48995,48999]" dest="identifier: that [62153,62157]"/>
  <match src="comment: /*     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [61875,62528]" dest="comment: /*     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [26622,27275]"/>
  <match src="expression_statement [106821,106823]" dest="expression_statement [68750,68752]"/>
  <match src="uint256: uint256 [64611,64618]" dest="uint256: uint256 [81775,81782]"/>
  <match src="member_expression [97082,97099]" dest="member_expression [34868,34885]"/>
  <match src="struct_member [88226,88239]" dest="struct_member [28355,28368]"/>
  <match src="member_expression [81194,81204]" dest="member_expression [70503,70513]"/>
  <match src="(: ( [106682,106683]" dest="(: ( [68611,68612]"/>
  <match src="comment: // remove the last decimal digit [35826,35858]" dest="comment: // remove the last decimal digit [51498,51530]"/>
  <match src="string_literal [20497,20536]" dest="string_literal [63601,63648]"/>
  <match src="identifier: account [51243,51250]" dest="identifier: account [54835,54842]"/>
  <match src="comment: // get the final string length [35167,35197]" dest="comment: // get the final string length [50839,50869]"/>
  <match src="): ) [83847,83848]" dest="): ) [62559,62560]"/>
  <match src="member_expression [104959,104974]" dest="member_expression [42777,42792]"/>
  <match src="type_name [96298,96305]" dest="type_name [34084,34091]"/>
  <match src="): ) [16648,16649]" dest="): ) [17292,17293]"/>
  <match src="identifier: epoch [103819,103824]" dest="identifier: epoch [41637,41642]"/>
  <match src="primitive_type [43761,43768]" dest="primitive_type [13015,13022]"/>
  <match src="function_definition [50085,50122]" dest="function_definition [25524,25561]"/>
  <match src="identifier: epoch [102916,102921]" dest="identifier: epoch [40734,40739]"/>
  <match src="(: ( [66946,66947]" dest="(: ( [66893,66894]"/>
  <match src="struct_member [43385,43400]" dest="struct_member [12639,12654]"/>
  <match src="identifier: blockTimestamp [95539,95553]" dest="identifier: blockTimestamp [33325,33339]"/>
  <match src="identifier: sub [100682,100685]" dest="identifier: sub [38500,38503]"/>
  <match src="assembly_statement [34752,34847]" dest="assembly_statement [50424,50519]"/>
  <match src="type_name [88649,88684]" dest="type_name [28778,28813]"/>
  <match src="identifier: abi [29456,29459]" dest="identifier: abi [45128,45131]"/>
  <match src="call_expression [8037,8071]" dest="call_expression [8136,8170]"/>
  <match src="array_access [100328,100352]" dest="array_access [38146,38170]"/>
  <match src="identifier: Decimal [67335,67342]" dest="identifier: Decimal [80796,80803]"/>
  <match src="): ) [73279,73280]" dest="): ) [80843,80844]"/>
  <match src="type_name [92112,92118]" dest="type_name [29898,29904]"/>
  <match src="identifier: supply [100751,100757]" dest="identifier: supply [38569,38575]"/>
  <match src="identifier: BASE [7430,7434]" dest="identifier: BASE [7529,7533]"/>
  <match src="function_definition [104862,105187]" dest="function_definition [42680,43005]"/>
  <match src="(: ( [20474,20475]" dest="(: ( [63578,63579]"/>
  <match src="function_definition [100212,100503]" dest="function_definition [38030,38321]"/>
  <match src="variable_declaration_statement [37036,37063]" dest="variable_declaration_statement [52708,52735]"/>
  <match src="]: ] [104171,104172]" dest="]: ] [41989,41990]"/>
  <match src="call_argument [102934,102935]" dest="call_argument [40752,40753]"/>
  <match src="type_name [44455,44462]" dest="type_name [13709,13716]"/>
  <match src="&quot;: &quot; [56987,56988]" dest="&quot;: &quot; [77593,77594]"/>
  <match src=",: , [51836,51837]" dest=",: , [60627,60628]"/>
  <match src="internal: internal [46763,46771]" dest="internal: internal [16017,16025]"/>
  <match src="yul_path [34799,34805]" dest="yul_path [50471,50477]"/>
  <match src="comment: /**      * Governance      */ [103663,103694]" dest="comment: /**      * Governance      */ [41481,41512]"/>
  <match src="variable_declaration_statement [36470,36484]" dest="variable_declaration_statement [52142,52156]"/>
  <match src="]: ] [104036,104037]" dest="]: ] [41854,41855]"/>
  <match src="string [84352,84382]" dest="string [58371,58394]"/>
  <match src="if_statement [8412,8465]" dest="if_statement [8511,8564]"/>
  <match src="revert: revert [31286,31292]" dest="revert: revert [46958,46964]"/>
  <match src="string [49066,49085]" dest="string [55425,55469]"/>
  <match src="identifier: b [11168,11169]" dest="identifier: b [11267,11268]"/>
  <match src="identifier: account [93939,93946]" dest="identifier: account [31725,31732]"/>
  <match src="): ) [30959,30960]" dest="): ) [46631,46632]"/>
  <match src="identifier: D256 [6968,6972]" dest="identifier: D256 [7067,7071]"/>
  <match src="type_name [98774,98781]" dest="type_name [36592,36599]"/>
  <match src="): ) [96607,96608]" dest="): ) [34393,34394]"/>
  <match src="]: ] [92470,92471]" dest="]: ] [30256,30257]"/>
  <match src="binary_expression [10510,10525]" dest="binary_expression [10609,10624]"/>
  <match src="]: ] [36672,36673]" dest="]: ] [52344,52345]"/>
  <match src="parameter [29848,29860]" dest="parameter [45520,45532]"/>
  <match src=",: , [14572,14573]" dest=",: , [24248,24249]"/>
  <match src="uint256: uint256 [36059,36066]" dest="uint256: uint256 [51731,51738]"/>
  <match src="): ) [54378,54379]" dest="): ) [21372,21373]"/>
  <match src="type_name [54908,54915]" dest="type_name [21902,21909]"/>
  <match src="visibility [930,938]" dest="visibility [984,992]"/>
  <match src="identifier: onlyFrozen [80855,80865]" dest="identifier: onlyFrozenOrFluid [71249,71266]"/>
  <match src="(: ( [98646,98647]" dest="(: ( [36464,36465]"/>
  <match src="memory: memory [8006,8012]" dest="memory: memory [8105,8111]"/>
  <match src="assignment_expression [99222,99279]" dest="assignment_expression [37040,37097]"/>
  <match src="state_variable_declaration [44389,44442]" dest="state_variable_declaration [13643,13696]"/>
  <match src="identifier: reject [88036,88042]" dest="identifier: reject [28165,28171]"/>
  <match src=":: : [81692,81693]" dest=":: : [70887,70888]"/>
  <match src="parameter [102222,102237]" dest="parameter [40040,40055]"/>
  <match src="primitive_type [96917,96924]" dest="primitive_type [34703,34710]"/>
  <match src="function: function [1824,1832]" dest="function: function [1878,1886]"/>
  <match src="(: ( [7630,7631]" dest="(: ( [7729,7730]"/>
  <match src="view: view [71985,71989]" dest="view: view [61936,61940]"/>
  <match src="identifier: require [26824,26831]" dest="identifier: decrementRejectFor [78395,78413]"/>
  <match src="call_argument [103565,103591]" dest="call_argument [41383,41409]"/>
  <match src="function: function [45403,45411]" dest="function: function [14657,14665]"/>
  <match src=",: , [3901,3902]" dest=",: , [3955,3956]"/>
  <match src="expression_statement [20632,20724]" dest="expression_statement [62145,62265]"/>
  <match src="(: ( [71775,71776]" dest="(: ( [65780,65781]"/>
  <match src="(: ( [35528,35529]" dest="(: ( [51200,51201]"/>
  <match src="type_name [62629,62641]" dest="type_name [26498,26510]"/>
  <match src=".: . [97088,97089]" dest=".: . [34874,34875]"/>
  <match src="type_name [80407,80414]" dest="type_name [77291,77298]"/>
  <match src="): ) [10226,10227]" dest="): ) [10325,10326]"/>
  <match src=".: . [102160,102161]" dest=".: . [39978,39979]"/>
  <match src="array_access [97645,97673]" dest="array_access [35431,35459]"/>
  <match src="type_name [10486,10490]" dest="type_name [10585,10589]"/>
  <match src="call_expression [93678,93700]" dest="call_expression [31464,31486]"/>
  <match src="return_statement [7141,7188]" dest="return_statement [7240,7287]"/>
  <match src="expression_statement [35504,35514]" dest="expression_statement [51176,51186]"/>
  <match src="visibility [34056,34063]" dest="visibility [49728,49735]"/>
  <match src="view: view [54130,54134]" dest="view: view [21124,21128]"/>
  <match src="identifier: Account [94679,94686]" dest="identifier: Account [32465,32472]"/>
  <match src="return: return [2000,2006]" dest="return: return [2054,2060]"/>
  <match src="identifier: lessPhantom [82790,82801]" dest="identifier: candidate [78881,78890]"/>
  <match src="primitive_type [38185,38189]" dest="primitive_type [53857,53861]"/>
  <match src="event_paramater [53686,53698]" dest="event_paramater [20680,20692]"/>
  <match src="parameter [33168,33177]" dest="parameter [48840,48849]"/>
  <match src=".: . [102168,102169]" dest=".: . [39986,39987]"/>
  <match src="struct_member [88384,88397]" dest="struct_member [28513,28526]"/>
  <match src="call_argument [76427,76433]" dest="call_argument [63894,63900]"/>
  <match src="(: ( [30083,30084]" dest="(: ( [45755,45756]"/>
  <match src="}: } [96068,96069]" dest="}: } [33854,33855]"/>
  <match src="identifier: payloadA [30951,30959]" dest="identifier: payloadA [46623,46631]"/>
  <match src=".: . [100742,100743]" dest=".: . [38560,38561]"/>
  <match src="parameter [95954,95967]" dest="parameter [33740,33753]"/>
  <match src="function: function [52987,52995]" dest="function: function [19981,19989]"/>
  <match src="identifier: _mint [21138,21143]" dest="identifier: decreaseDebt [55911,55923]"/>
  <match src="address: address [52937,52944]" dest="address: address [19931,19938]"/>
  <match src="state_variable_declaration [106024,106069]" dest="state_variable_declaration [67953,67998]"/>
  <match src="parameter [9130,9150]" dest="parameter [9229,9249]"/>
  <match src="&quot;: &quot; [68229,68230]" dest="&quot;: &quot; [79558,79559]"/>
  <match src="{: { [64185,64186]" dest="{: { [64934,64935]"/>
  <match src="(: ( [104675,104676]" dest="(: ( [42493,42494]"/>
  <match src="call_argument [32099,32123]" dest="call_argument [47771,47795]"/>
  <match src="variable_declaration [37165,37184]" dest="variable_declaration [52837,52856]"/>
  <match src="}: } [106832,106833]" dest="}: } [68761,68762]"/>
  <match src="uint256: uint256 [36560,36567]" dest="uint256: uint256 [52232,52239]"/>
  <match src="type_name [50146,50153]" dest="type_name [25585,25592]"/>
  <match src=".: . [99228,99229]" dest=".: . [37046,37047]"/>
  <match src="}: } [94091,94092]" dest="}: } [31877,31878]"/>
  <match src="primitive_type [97440,97447]" dest="primitive_type [35226,35233]"/>
  <match src="call_argument [90579,90585]" dest="call_argument [75651,75657]"/>
  <match src="identifier: account [101543,101550]" dest="identifier: account [39361,39368]"/>
  <match src="call_expression [7424,7435]" dest="call_expression [7523,7534]"/>
  <match src="&quot;: &quot; [90528,90529]" dest="&quot;: &quot; [75600,75601]"/>
  <match src="function: function [6603,6611]" dest="function: function [6702,6710]"/>
  <match src="identifier: accounts [101246,101254]" dest="identifier: accounts [39064,39072]"/>
  <match src="function: function [97271,97279]" dest="function: function [35057,35065]"/>
  <match src="call_argument [32201,32207]" dest="call_argument [47873,47879]"/>
  <match src="(: ( [16640,16641]" dest="(: ( [17284,17285]"/>
  <match src="returns: returns [97046,97053]" dest="returns: returns [34832,34839]"/>
  <match src="state_mutability [10841,10845]" dest="state_mutability [10940,10944]"/>
  <match src="{: { [9638,9639]" dest="{: { [9737,9738]"/>
  <match src="uint256: uint256 [99325,99332]" dest="uint256: uint256 [37143,37150]"/>
  <match src="return_type_definition [46929,46946]" dest="return_type_definition [16183,16200]"/>
  <match src="): ) [78597,78598]" dest="): ) [59294,59295]"/>
  <match src=".: . [97532,97533]" dest=".: . [35318,35319]"/>
  <match src="address: address [97153,97160]" dest="address: address [34939,34946]"/>
  <match src="user_defined_type [64177,64184]" dest="user_defined_type [64922,64933]"/>
  <match src="): ) [94121,94122]" dest="): ) [31907,31908]"/>
  <match src="identifier: incrementTotalRedeemable [99853,99877]" dest="identifier: incrementTotalRedeemable [37671,37695]"/>
  <match src=",: , [9974,9975]" dest=",: , [10073,10074]"/>
  <match src=".: . [81465,81466]" dest=".: . [70767,70768]"/>
  <match src="parameter [11057,11064]" dest="parameter [11156,11163]"/>
  <match src="identifier: c [981,982]" dest="identifier: c [1035,1036]"/>
  <match src="}: } [8078,8079]" dest="}: } [8177,8178]"/>
  <match src="function: function [66907,66915]" dest="function: function [66150,66158]"/>
  <match src=".: . [101037,101038]" dest=".: . [38855,38856]"/>
  <match src=",: , [65097,65098]" dest=",: , [62350,62351]"/>
  <match src="): ) [100913,100914]" dest="): ) [38731,38732]"/>
  <match src="identifier: dollar [108254,108260]" dest="identifier: dollar [55573,55579]"/>
  <match src="struct_member [88330,88345]" dest="struct_member [28459,28474]"/>
  <match src="identifier: COLON [33528,33533]" dest="identifier: COLON [49200,49205]"/>
  <match src="parameter [10560,10576]" dest="parameter [10659,10675]"/>
  <match src="identifier: value [9251,9256]" dest="identifier: value [9350,9355]"/>
  <match src="type_name [5343,5350]" dest="type_name [5397,5404]"/>
  <match src="number_literal: 12e18 [44371,44376]" dest="number_literal: 12e18 [13625,13630]"/>
  <match src="identifier: tokenB [78692,78698]" dest="identifier: candidate [79039,79048]"/>
  <match src="member_expression [80618,80638]" dest="member_expression [70232,70253]"/>
  <match src="internal: internal [10199,10207]" dest="internal: internal [10298,10306]"/>
  <match src="uint256: uint256 [44238,44245]" dest="uint256: uint256 [13492,13499]"/>
  <match src="modifier_invocation [80855,80877]" dest="modifier_invocation [71249,71278]"/>
  <match src="identifier: input [34205,34210]" dest="identifier: input [49877,49882]"/>
  <match src="(: ( [95173,95174]" dest="(: ( [32959,32960]"/>
  <match src="state_variable_declaration [43512,43562]" dest="state_variable_declaration [12766,12816]"/>
  <match src="(: ( [9308,9309]" dest="(: ( [9407,9408]"/>
  <match src="string_literal [2673,2708]" dest="string_literal [2727,2762]"/>
  <match src="bool: bool [50255,50259]" dest="bool: bool [25694,25698]"/>
  <match src="inheritance_specifier [98575,98580]" dest="inheritance_specifier [36393,36398]"/>
  <match src="{: { [44876,44877]" dest="{: { [14130,14131]"/>
  <match src="uint256: uint256 [43643,43650]" dest="uint256: uint256 [12897,12904]"/>
  <match src="(: ( [46785,46786]" dest="(: ( [16039,16040]"/>
  <match src="number_literal: 0 [2600,2601]" dest="number_literal: 0 [2654,2655]"/>
  <match src="member_expression [95362,95396]" dest="member_expression [33148,33182]"/>
  <match src="returns: returns [96772,96779]" dest="returns: returns [34558,34565]"/>
  <match src="primitive_type [80550,80557]" dest="primitive_type [70166,70173]"/>
  <match src="modifier_invocation [80574,80596]" dest="modifier_invocation [77449,77479]"/>
  <match src="member_expression [92447,92479]" dest="member_expression [30233,30265]"/>
  <match src="=: = [99244,99245]" dest="=: = [37062,37063]"/>
  <match src="member_expression [93572,93594]" dest="member_expression [31358,31380]"/>
  <match src="identifier: sender [82782,82788]" dest="identifier: sender [78873,78879]"/>
  <match src="false [99100,99105]" dest="false [36918,36923]"/>
  <match src="function: function [99156,99164]" dest="function: function [36974,36982]"/>
  <match src="uint256: uint256 [36470,36477]" dest="uint256: uint256 [52142,52149]"/>
  <match src="primitive_type [93322,93329]" dest="primitive_type [31108,31115]"/>
  <match src="identifier: b [9976,9977]" dest="identifier: b [10075,10076]"/>
  <match src="=: = [43885,43886]" dest="=: = [13139,13140]"/>
  <match src="{: { [46506,46507]" dest="{: { [15760,15761]"/>
  <match src="identifier: Require [84818,84825]" dest="identifier: Require [79277,79284]"/>
  <match src="type_name [104492,104499]" dest="type_name [42310,42317]"/>
  <match src="): ) [32862,32863]" dest="): ) [48534,48535]"/>
  <match src="primitive_type [5343,5350]" dest="primitive_type [5397,5404]"/>
  <match src="uint256: uint256 [96781,96788]" dest="uint256: uint256 [34567,34574]"/>
  <match src="uint256: uint256 [16465,16472]" dest="uint256: uint256 [60257,60264]"/>
  <match src="expression_statement [100935,101013]" dest="expression_statement [38753,38831]"/>
  <match src="member_expression [94578,94599]" dest="member_expression [32364,32385]"/>
  <match src="return: return [65641,65647]" dest="return: return [67140,67146]"/>
  <match src="view: view [93955,93959]" dest="view: view [31741,31745]"/>
  <match src="string: string [29427,29433]" dest="string: string [45099,45105]"/>
  <match src="identifier: BASE [6430,6434]" dest="identifier: BASE [6529,6533]"/>
  <match src="=: = [1980,1981]" dest="=: = [2034,2035]"/>
  <match src="call_argument [10107,10111]" dest="call_argument [10206,10210]"/>
  <match src="memory: memory [10450,10456]" dest="memory: memory [10549,10555]"/>
  <match src="identifier: ORACLE_POOL_RATIO [46965,46982]" dest="identifier: ORACLE_POOL_RATIO [16219,16236]"/>
  <match src="event_paramater [80163,80186]" dest="event_paramater [69678,69701]"/>
  <match src=".: . [101491,101492]" dest=".: . [39309,39310]"/>
  <match src="member_expression [95606,95621]" dest="member_expression [33392,33407]"/>
  <match src="type_name [1375,1382]" dest="type_name [1429,1436]"/>
  <match src="}: } [6718,6719]" dest="}: } [6817,6818]"/>
  <match src="parameter [9620,9631]" dest="parameter [9719,9730]"/>
  <match src="primitive_type [3264,3271]" dest="primitive_type [3318,3325]"/>
  <match src=",: , [81927,81928]" dest=",: , [71079,71080]"/>
  <match src="uint256: uint256 [81486,81493]" dest="uint256: uint256 [79192,79199]"/>
  <match src="identifier: mint [78579,78583]" dest="identifier: mint [59268,59272]"/>
  <match src="type_name [52847,52852]" dest="type_name [19841,19846]"/>
  <match src="assignment_expression [100935,101012]" dest="assignment_expression [38753,38830]"/>
  <match src="(: ( [36290,36291]" dest="(: ( [51962,51963]"/>
  <match src="identifier: candidate [104162,104171]" dest="identifier: candidate [41980,41989]"/>
  <match src=".: . [94146,94147]" dest=".: . [31932,31933]"/>
  <match src="(: ( [103916,103917]" dest="(: ( [41734,41735]"/>
  <match src="identifier: ASCII_LOWER_EX [37324,37338]" dest="identifier: ASCII_LOWER_EX [52996,53010]"/>
  <match src="uint256: uint256 [88028,88035]" dest="uint256: uint256 [28157,28164]"/>
  <match src="): ) [72169,72170]" dest="): ) [58277,58278]"/>
  <match src="identifier: that [84231,84235]" dest="identifier: that [58226,58230]"/>
  <match src="type_name [78668,78675]" dest="type_name [77400,77407]"/>
  <match src="call_argument [23918,23925]" dest="call_argument [55365,55372]"/>
  <match src="call_expression [106791,106807]" dest="call_expression [68720,68736]"/>
  <match src="identifier: sender [82202,82208]" dest="identifier: sender [71370,71376]"/>
  <match src="call_expression [84250,84257]" dest="call_expression [58950,58958]"/>
  <match src="identifier: amount [100145,100151]" dest="identifier: amount [37963,37969]"/>
  <match src="identifier: balance [87316,87323]" dest="identifier: balance [27445,27452]"/>
  <match src="parameter [31101,31110]" dest="parameter [46773,46782]"/>
  <match src="identifier: createCandidate [103711,103726]" dest="identifier: createCandidate [41529,41544]"/>
  <match src="member_expression [97082,97118]" dest="member_expression [34868,34904]"/>
  <match src="event_paramater [51790,51812]" dest="event_paramater [60587,60607]"/>
  <match src="(: ( [45305,45306]" dest="(: ( [14559,14560]"/>
  <match src="state_variable_declaration [64511,64535]" dest="state_variable_declaration [65271,65299]"/>
  <match src="returns: returns [92103,92110]" dest="returns: returns [29889,29896]"/>
  <match src="primitive_type [88384,88391]" dest="primitive_type [28513,28520]"/>
  <match src="parameter [102424,102438]" dest="parameter [40242,40256]"/>
  <match src="binary_expression [94630,94656]" dest="binary_expression [32416,32442]"/>
  <match src="member_expression [103994,104011]" dest="member_expression [41812,41829]"/>
  <match src="identifier: balanceOf [12724,12733]" dest="identifier: balanceOf [22400,22409]"/>
  <match src="memory: memory [1866,1872]" dest="memory: memory [1920,1926]"/>
  <match src="type_cast_expression [37313,37340]" dest="type_cast_expression [52985,53012]"/>
  <match src="parameter [8137,8146]" dest="parameter [8236,8245]"/>
  <match src="identifier: DEBT_RATIO_CAP [44263,44277]" dest="identifier: DEBT_RATIO_CAP [13517,13531]"/>
  <match src="identifier: that [83178,83182]" dest="identifier: that [79898,79902]"/>
  <match src="=: = [100113,100114]" dest="=: = [37931,37932]"/>
  <match src="bool: bool [96429,96433]" dest="bool: bool [34215,34219]"/>
  <match src="parameter [75948,75962]" dest="parameter [59076,59090]"/>
  <match src="{: { [87942,87943]" dest="{: { [28071,28072]"/>
  <match src="member_expression [101205,101220]" dest="member_expression [39023,39038]"/>
  <match src="binary_expression [36860,36866]" dest="binary_expression [52532,52538]"/>
  <match src="return_statement [8439,8454]" dest="return_statement [8538,8553]"/>
  <match src="identifier: msg [83903,83906]" dest="identifier: msg [79788,79791]"/>
  <match src="internal: internal [8931,8939]" dest="internal: internal [9030,9038]"/>
  <match src="bytes32: bytes32 [32652,32659]" dest="bytes32: bytes32 [48324,48331]"/>
  <match src="variable_declaration_statement [37457,37471]" dest="variable_declaration_statement [53129,53143]"/>
  <match src=",: , [53572,53573]" dest=",: , [20566,20567]"/>
  <match src="identifier: D256 [7277,7281]" dest="identifier: D256 [7376,7380]"/>
  <match src="function_definition [103702,103889]" dest="function_definition [41520,41707]"/>
  <match src=",: , [83104,83105]" dest=",: , [58541,58542]"/>
  <match src=".: . [100757,100758]" dest=".: . [38575,38576]"/>
  <match src="): ) [8838,8839]" dest="): ) [8937,8938]"/>
  <match src="(: ( [15042,15043]" dest="(: ( [24718,24719]"/>
  <match src="user_defined_type [88668,88683]" dest="user_defined_type [28797,28812]"/>
  <match src="identifier: IUniswapV2Pair [52502,52516]" dest="identifier: IUniswapV2Pair [19496,19510]"/>
  <match src="identifier: lockedUntil [104984,104995]" dest="identifier: lockedUntil [42802,42813]"/>
  <match src="returns: returns [92890,92897]" dest="returns: returns [30676,30683]"/>
  <match src="): ) [97170,97171]" dest="): ) [34956,34957]"/>
  <match src="uint256: uint256 [44183,44190]" dest="uint256: uint256 [13437,13444]"/>
  <match src="): ) [94023,94024]" dest="): ) [31809,31810]"/>
  <match src="visibility [71755,71761]" dest="visibility [65765,65771]"/>
  <match src="uint256: uint256 [102600,102607]" dest="uint256: uint256 [40418,40425]"/>
  <match src=",: , [7180,7181]" dest=",: , [7279,7280]"/>
  <match src="library: library [28271,28278]" dest="library: library [43943,43950]"/>
  <match src="returns: returns [46006,46013]" dest="returns: returns [15260,15267]"/>
  <match src="return: return [46664,46670]" dest="return: return [15918,15924]"/>
  <match src="identifier: newPhantom [81870,81880]" dest="identifier: balance [72058,72065]"/>
  <match src="identifier: COMMA [28560,28565]" dest="identifier: COMMA [44232,44237]"/>
  <match src="string_literal [49193,49207]" dest="string_literal [55183,55225]"/>
  <match src="*: * [36578,36579]" dest="*: * [52250,52251]"/>
  <match src="type_name [34325,34332]" dest="type_name [49997,50004]"/>
  <match src="expression_statement [100712,100778]" dest="expression_statement [38530,38596]"/>
  <match src="function: function [50128,50136]" dest="function: function [25567,25575]"/>
  <match src="address: address [80221,80228]" dest="address: address [77326,77333]"/>
  <match src="primitive_type [53245,53252]" dest="primitive_type [20239,20246]"/>
  <match src="memory: memory [65496,65502]" dest="memory: memory [18764,18770]"/>
  <match src="parameter [54441,54445]" dest="parameter [21435,21439]"/>
  <match src="identifier: D256 [10184,10188]" dest="identifier: D256 [10283,10287]"/>
  <match src="function_body [93331,93376]" dest="function_body [31117,31162]"/>
  <match src="return_type_definition [96147,96164]" dest="return_type_definition [33933,33950]"/>
  <match src="primitive_type [35014,35021]" dest="primitive_type [50686,50693]"/>
  <match src="identifier: incrementEpoch [102849,102863]" dest="identifier: incrementEpoch [40667,40681]"/>
  <match src=".: . [100718,100719]" dest=".: . [38536,38537]"/>
  <match src="call_argument [106478,106485]" dest="call_argument [68407,68414]"/>
  <match src="{: { [52517,52518]" dest="{: { [19511,19512]"/>
  <match src="inheritance_specifier [107543,107553]" dest="inheritance_specifier [76943,76953]"/>
  <match src="identifier: char [36676,36680]" dest="identifier: char [52348,52352]"/>
  <match src="identifier: FILE [106049,106053]" dest="identifier: FILE [67978,67982]"/>
  <match src=".: . [96203,96204]" dest=".: . [33989,33990]"/>
  <match src="function_definition [101096,101374]" dest="function_definition [38914,39192]"/>
  <match src="type_name [3903,3909]" dest="type_name [3957,3963]"/>
  <match src="call_struct_argument [9448,9492]" dest="call_struct_argument [9547,9591]"/>
  <match src=",: , [32981,32982]" dest=",: , [48653,48654]"/>
  <match src="primitive_type [34325,34332]" dest="primitive_type [49997,50004]"/>
  <match src="solidity: solidity [7,15]" dest="solidity: solidity [61,69]"/>
  <match src=":: : [9453,9454]" dest=":: : [9552,9553]"/>
  <match src="type_name [66439,66446]" dest="type_name [62406,62413]"/>
  <match src="(: ( [32433,32434]" dest="(: ( [48105,48106]"/>
  <match src="return_type_definition [8955,8976]" dest="return_type_definition [9054,9075]"/>
  <match src="identifier: msg [81360,81363]" dest="identifier: msg [80579,80582]"/>
  <match src="identifier: unfreeze [81453,81461]" dest="identifier: unfreeze [70755,70763]"/>
  <match src="expression_statement [35549,35555]" dest="expression_statement [51221,51227]"/>
  <match src="identifier: EPOCH_PERIOD [43593,43605]" dest="identifier: EPOCH_PERIOD [12847,12859]"/>
  <match src="(: ( [53005,53006]" dest="(: ( [19999,20000]"/>
  <match src="uint: uint [53741,53745]" dest="uint: uint [20735,20739]"/>
  <match src="emit_statement [100790,100833]" dest="emit_statement [38608,38651]"/>
  <match src="private: private [66332,66339]" dest="private: private [19112,19119]"/>
  <match src="identifier: encodePacked [31344,31356]" dest="identifier: encodePacked [47016,47028]"/>
  <match src=",: , [80916,80917]" dest=",: , [70985,70986]"/>
  <match src="internal: internal [9163,9171]" dest="internal: internal [9262,9270]"/>
  <match src="identifier: amount1 [53760,53767]" dest="identifier: amount1 [20754,20761]"/>
  <match src="call_argument [84268,84281]" dest="call_argument [58964,58977]"/>
  <match src="identifier: reason [102103,102109]" dest="identifier: reason [39921,39927]"/>
  <match src="return_type_definition [46623,46652]" dest="return_type_definition [15877,15906]"/>
  <match src="primitive_type [80246,80253]" dest="primitive_type [60742,60749]"/>
  <match src="identifier: account [101501,101508]" dest="identifier: account [39319,39326]"/>
  <match src="identifier: _state [101485,101491]" dest="identifier: _state [39303,39309]"/>
  <match src="primitive_type [94439,94446]" dest="primitive_type [32225,32232]"/>
  <match src="call_expression [7857,7868]" dest="call_expression [7956,7967]"/>
  <match src="primitive_type [100556,100563]" dest="primitive_type [38374,38381]"/>
  <match src="uint256: uint256 [48495,48502]" dest="uint256: uint256 [17212,17219]"/>
  <match src="}: } [30484,30485]" dest="}: } [46156,46157]"/>
  <match src="identifier: Global [88468,88474]" dest="identifier: Global [28597,28603]"/>
  <match src="visibility [93301,93307]" dest="visibility [31087,31093]"/>
  <match src="address: address [53245,53252]" dest="address: address [20239,20246]"/>
  <match src="identifier: totalPhantom [71963,71975]" dest="identifier: couponPremium [61899,61912]"/>
  <match src=".: . [99724,99725]" dest=".: . [37542,37543]"/>
  <match src="primitive_type [29923,29930]" dest="primitive_type [45595,45602]"/>
  <match src="function: function [104060,104068]" dest="function: function [41878,41886]"/>
  <match src=".: . [102664,102665]" dest=".: . [40482,40483]"/>
  <match src="type_name [53849,53853]" dest="type_name [20843,20847]"/>
  <match src="identifier: a [1845,1846]" dest="identifier: a [1899,1900]"/>
  <match src="bool: bool [10073,10077]" dest="bool: bool [10172,10176]"/>
  <match src=".: . [101660,101661]" dest=".: . [39478,39479]"/>
  <match src="member_expression [100969,101004]" dest="member_expression [38787,38822]"/>
  <match src="(: ( [6656,6657]" dest="(: ( [6755,6756]"/>
  <match src=".: . [100413,100414]" dest=".: . [38231,38232]"/>
  <match src="function: function [95784,95792]" dest="function: function [33570,33578]"/>
  <match src="type_name [51814,51821]" dest="type_name [60609,60616]"/>
  <match src="=: = [36480,36481]" dest="=: = [52152,52153]"/>
  <match src=".: . [97651,97652]" dest=".: . [35437,35438]"/>
  <match src="uint256: uint256 [43697,43704]" dest="uint256: uint256 [12951,12958]"/>
  <match src="view: view [12760,12764]" dest="view: view [22436,22440]"/>
  <match src="call_expression [45610,45650]" dest="call_expression [14864,14904]"/>
  <match src="identifier: epoch [96270,96275]" dest="identifier: epoch [34056,34061]"/>
  <match src="identifier: dollar [93678,93684]" dest="identifier: dollar [31464,31470]"/>
  <match src="type_name [97748,97755]" dest="type_name [35534,35541]"/>
  <match src="=: = [66413,66414]" dest="=: = [65369,65370]"/>
  <match src="return_type_definition [97184,97201]" dest="return_type_definition [34970,34987]"/>
  <match src="(: ( [9680,9681]" dest="(: ( [9779,9780]"/>
  <match src="assignment_expression [102658,102790]" dest="assignment_expression [40476,40608]"/>
  <match src="}: } [94170,94171]" dest="}: } [31956,31957]"/>
  <match src="primitive_type [95811,95818]" dest="primitive_type [33597,33604]"/>
  <match src="identifier: D256 [8677,8681]" dest="identifier: D256 [8776,8780]"/>
  <match src="function: function [45517,45525]" dest="function: function [14771,14779]"/>
  <match src="identifier: msg [81153,81156]" dest="identifier: msg [71769,71772]"/>
  <match src="uint256: uint256 [87399,87406]" dest="uint256: uint256 [27528,27535]"/>
  <match src=":: : [94701,94702]" dest=":: : [32487,32488]"/>
  <match src="function_definition [46435,46569]" dest="function_definition [15689,15823]"/>
  <match src="parameter [74877,74891]" dest="parameter [55311,55325]"/>
  <match src="): ) [4735,4736]" dest="): ) [4789,4790]"/>
  <match src="parameter [7726,7746]" dest="parameter [7825,7845]"/>
  <match src="call_argument [100433,100439]" dest="call_argument [38251,38257]"/>
  <match src=",: , [7868,7869]" dest=",: , [7967,7968]"/>
  <match src="type_name [99641,99647]" dest="type_name [37459,37465]"/>
  <match src="uint256: uint256 [99625,99632]" dest="uint256: uint256 [37443,37450]"/>
  <match src="expression_statement [21917,22007]" dest="expression_statement [62922,63026]"/>
  <match src="member_expression [92926,92948]" dest="member_expression [30712,30734]"/>
  <match src="identifier: add [102930,102933]" dest="identifier: add [40748,40751]"/>
  <match src="primitive_type [97289,97296]" dest="primitive_type [35075,35082]"/>
  <match src="identifier: epoch [94630,94635]" dest="identifier: epoch [32416,32421]"/>
  <match src="return_statement [92919,92949]" dest="return_statement [30705,30735]"/>
  <match src="call_argument [99737,99743]" dest="call_argument [37555,37561]"/>
  <match src="parameter [7057,7066]" dest="parameter [7156,7165]"/>
  <match src="identifier: implementation [90116,90130]" dest="identifier: implementation [75188,75202]"/>
  <match src="identifier: incrementBalanceOfPhantom [81832,81857]" dest="identifier: decrementBalanceOf [72027,72045]"/>
  <match src="call_expression [44862,44991]" dest="call_expression [14116,14245]"/>
  <match src="uint: uint [53899,53903]" dest="uint: uint [20893,20897]"/>
  <match src="member_expression [96183,96220]" dest="member_expression [33969,34006]"/>
  <match src="): ) [44576,44577]" dest="): ) [13830,13831]"/>
  <match src="=: = [104390,104391]" dest="=: = [42208,42209]"/>
  <match src=":: : [11180,11181]" dest=":: : [11279,11280]"/>
  <match src="member_expression [83041,83053]" dest="member_expression [58478,58490]"/>
  <match src="identifier: transferFrom [80626,80638]" dest="identifier: transferFrom [70241,70253]"/>
  <match src="parameter [53589,53596]" dest="parameter [20583,20590]"/>
  <match src="parameter [8328,8337]" dest="parameter [8427,8436]"/>
  <match src="call_expression [94127,94145]" dest="call_expression [31913,31931]"/>
  <match src="{: { [35275,35276]" dest="{: { [50947,50948]"/>
  <match src="identifier: balance [103545,103552]" dest="identifier: balance [41363,41370]"/>
  <match src="{: { [5414,5415]" dest="{: { [5468,5469]"/>
  <match src="identifier: value [8515,8520]" dest="identifier: value [8614,8619]"/>
  <match src="**: ** [6439,6441]" dest="**: ** [6538,6540]"/>
  <match src="expression_statement [51517,51690]" dest="expression_statement [64010,64104]"/>
  <match src="&quot;: &quot; [4790,4791]" dest="&quot;: &quot; [4844,4845]"/>
  <match src="): ) [93193,93194]" dest="): ) [30979,30980]"/>
  <match src="identifier: impl [97756,97760]" dest="identifier: impl [35542,35546]"/>
  <match src="identifier: sender [81364,81370]" dest="identifier: sender [80583,80589]"/>
  <match src="identifier: result [36191,36197]" dest="identifier: result [51863,51869]"/>
  <match src="contract: contract [87498,87506]" dest="contract: contract [27627,27635]"/>
  <match src="member_expression [33434,33450]" dest="member_expression [49106,49122]"/>
  <match src="identifier: D256 [7828,7832]" dest="identifier: D256 [7927,7931]"/>
  <match src="return: return [95867,95873]" dest="return: return [33653,33659]"/>
  <match src="identifier: initialized [88099,88110]" dest="identifier: initialized [28228,28239]"/>
  <match src="string_literal [22672,22710]" dest="string_literal [62881,62910]"/>
  <match src="user_defined_type [9079,9083]" dest="user_defined_type [9178,9182]"/>
  <match src="function_body [95710,95776]" dest="function_body [33496,33562]"/>
  <match src="event: event [80339,80344]" dest="event: event [69724,69729]"/>
  <match src="call_expression [8496,8523]" dest="call_expression [8595,8622]"/>
  <match src="function: function [45007,45015]" dest="function: function [14261,14269]"/>
  <match src="identifier: spender [102591,102598]" dest="identifier: spender [40409,40416]"/>
  <match src="constant: constant [28350,28358]" dest="constant: constant [44022,44030]"/>
  <match src="}: } [93271,93272]" dest="}: } [31057,31058]"/>
  <match src="state_mutability [56133,56137]" dest="state_mutability [17524,17528]"/>
  <match src="return_statement [9434,9496]" dest="return_statement [9533,9595]"/>
  <match src="primitive_type [53271,53275]" dest="primitive_type [20265,20269]"/>
  <match src="array_access [101589,101609]" dest="array_access [39407,39427]"/>
  <match src="bool: bool [32584,32588]" dest="bool: bool [48256,48260]"/>
  <match src="visibility [6747,6755]" dest="visibility [6846,6854]"/>
  <match src="function_definition [29220,29796]" dest="function_definition [44892,45468]"/>
  <match src="uint: uint [54508,54512]" dest="uint: uint [21502,21506]"/>
  <match src=".: . [96471,96472]" dest=".: . [34257,34258]"/>
  <match src="call_expression [101047,101080]" dest="call_expression [38865,38898]"/>
  <match src="uint256: uint256 [6413,6420]" dest="uint256: uint256 [6512,6519]"/>
  <match src=",: , [83474,83475]" dest=",: , [61339,61340]"/>
  <match src="visibility [45548,45556]" dest="visibility [14802,14810]"/>
  <match src="&quot;: &quot; [26149,26150]" dest="&quot;: &quot; [78612,78613]"/>
  <match src="private: private [16511,16518]" dest="private: private [61235,61242]"/>
  <match src="visibility [53283,53291]" dest="visibility [20277,20285]"/>
  <match src="identifier: COLON [31434,31439]" dest="identifier: COLON [47106,47111]"/>
  <match src="visibility [68046,68054]" dest="visibility [62822,62830]"/>
  <match src=",: , [29523,29524]" dest=",: , [45195,45196]"/>
  <match src="function: function [101382,101390]" dest="function: function [39200,39208]"/>
  <match src="block_statement [65593,65682]" dest="block_statement [67125,67172]"/>
  <match src="number_literal: 10 [6437,6439]" dest="number_literal: 10 [6536,6538]"/>
  <match src="=: = [37561,37562]" dest="=: = [53233,53234]"/>
  <match src="=: = [64261,64262]" dest="=: = [60192,60193]"/>
  <match src="(: ( [95953,95954]" dest="(: ( [33739,33740]"/>
  <match src="constant: constant [44338,44346]" dest="constant: constant [13592,13600]"/>
  <match src="bytes32: bytes32 [80041,80048]" dest="bytes32: bytes32 [69553,69560]"/>
  <match src="identifier: value [8044,8049]" dest="identifier: value [8143,8148]"/>
  <match src=".: . [100975,100976]" dest=".: . [38793,38794]"/>
  <match src="uint256: uint256 [64511,64518]" dest="uint256: uint256 [65271,65278]"/>
  <match src="identifier: chainId [39656,39663]" dest="identifier: totalSupply [17190,17201]"/>
  <match src="identifier: incrementTotalBonded [99165,99185]" dest="identifier: incrementTotalBonded [36983,37003]"/>
  <match src="memory: memory [7364,7370]" dest="memory: memory [7463,7469]"/>
  <match src="call_argument [26115,26150]" dest="call_argument [78583,78613]"/>
  <match src="identifier: reason [90579,90585]" dest="identifier: reason [75651,75657]"/>
  <match src="private: private [44191,44198]" dest="private: private [13445,13452]"/>
  <match src="call_argument [84545,84549]" dest="call_argument [80120,80124]"/>
  <match src="state_mutability [93531,93535]" dest="state_mutability [31317,31321]"/>
  <match src="&gt;: &gt; [10265,10266]" dest="&gt;: &gt; [10364,10365]"/>
  <match src="{: { [96646,96647]" dest="{: { [34432,34433]"/>
  <match src="public: public [50115,50121]" dest="public: public [25554,25560]"/>
  <match src="): ) [96788,96789]" dest="): ) [34574,34575]"/>
  <match src="member_expression [10628,10638]" dest="member_expression [10727,10737]"/>
  <match src="primitive_type [35400,35405]" dest="primitive_type [51072,51077]"/>
  <match src="(: ( [33017,33018]" dest="(: ( [48689,48690]"/>
  <match src="uint256: uint256 [14159,14166]" dest="uint256: uint256 [23835,23842]"/>
  <match src="contract_body [28287,38236]" dest="contract_body [43959,53908]"/>
  <match src="}: } [97549,97550]" dest="}: } [35335,35336]"/>
  <match src="&quot;: &quot; [83145,83146]" dest="&quot;: &quot; [58580,58581]"/>
  <match src="type_name [35072,35077]" dest="type_name [50744,50749]"/>
  <match src="call_argument [80960,80970]" dest="call_argument [70557,70567]"/>
  <match src="string_literal [84564,84576]" dest="string_literal [71979,72015]"/>
  <match src="primitive_type [100572,100578]" dest="primitive_type [38390,38396]"/>
  <match src="call_argument [33613,33619]" dest="call_argument [49285,49291]"/>
  <match src="&quot;: &quot; [20535,20536]" dest="&quot;: &quot; [63647,63648]"/>
  <match src="is: is [16309,16311]" dest="is: is [60098,60100]"/>
  <match src="binary_expression [11086,11104]" dest="binary_expression [11185,11203]"/>
  <match src="(: ( [1408,1409]" dest="(: ( [1462,1463]"/>
  <match src="visibility [62613,62619]" dest="visibility [26482,26488]"/>
  <match src="): ) [97725,97726]" dest="): ) [35511,35512]"/>
  <match src="uint256: uint256 [2625,2632]" dest="uint256: uint256 [2679,2686]"/>
  <match src="identifier: value [9701,9706]" dest="identifier: value [9800,9805]"/>
  <match src="user_defined_type [10035,10039]" dest="user_defined_type [10134,10138]"/>
  <match src="call_argument [21845,21866]" dest="call_argument [63786,63791]"/>
  <match src="function: function [93384,93392]" dest="function: function [31170,31178]"/>
  <match src="): ) [93809,93810]" dest="): ) [31595,31596]"/>
  <match src="primitive_type [88355,88362]" dest="primitive_type [28484,28491]"/>
  <match src="memory: memory [34172,34178]" dest="memory: memory [49844,49850]"/>
  <match src="member_expression [8828,8835]" dest="member_expression [8927,8934]"/>
  <match src="): ) [31218,31219]" dest="): ) [46890,46891]"/>
  <match src="comment: // each byte takes two characters [36513,36546]" dest="comment: // each byte takes two characters [52185,52218]"/>
  <match src="parameter [28799,28808]" dest="parameter [44471,44480]"/>
  <match src="identifier: unfreeze [102213,102221]" dest="identifier: unfreeze [40031,40039]"/>
  <match src="parameter [14555,14572]" dest="parameter [24231,24248]"/>
  <match src=",: , [33225,33226]" dest=",: , [48897,48898]"/>
  <match src="visibility [9372,9380]" dest="visibility [9471,9479]"/>
  <match src="parameter [53500,53504]" dest="parameter [20494,20498]"/>
  <match src="call_argument [78448,78460]" dest="call_argument [62547,62559]"/>
  <match src="variable_declaration_statement [66979,67129]" dest="variable_declaration_statement [66390,66479]"/>
  <match src="identifier: epoch [103017,103022]" dest="identifier: epoch [40835,40840]"/>
  <match src="=: = [103644,103645]" dest="=: = [41462,41463]"/>
  <match src="identifier: setImplementation [90386,90403]" dest="identifier: setImplementation [75458,75475]"/>
  <match src="(: ( [92223,92224]" dest="(: ( [30009,30010]"/>
  <match src="function: function [80813,80821]" dest="function: function [70401,70409]"/>
  <match src="identifier: amount [99194,99200]" dest="identifier: amount [37012,37018]"/>
  <match src="identifier: account [96581,96588]" dest="identifier: account [34367,34374]"/>
  <match src="==: == [94308,94310]" dest="==: == [32094,32096]"/>
  <match src="identifier: D256 [9346,9350]" dest="identifier: D256 [9445,9449]"/>
  <match src="identifier: amount [100433,100439]" dest="identifier: amount [38251,38257]"/>
  <match src=".: . [103025,103026]" dest=".: . [40843,40844]"/>
  <match src="): ) [54512,54513]" dest="): ) [21506,21507]"/>
  <match src="struct_member [88201,88216]" dest="struct_member [28330,28345]"/>
  <match src="&quot;: &quot; [81970,81971]" dest="&quot;: &quot; [71125,71126]"/>
  <match src="[: [ [36661,36662]" dest="[: [ [52333,52334]"/>
  <match src="): ) [80752,80753]" dest="): ) [56044,56045]"/>
  <match src="primitive_type [37988,37992]" dest="primitive_type [53660,53664]"/>
  <match src=",: , [94220,94221]" dest=",: , [32006,32007]"/>
  <match src="call_argument [23927,23933]" dest="call_argument [55374,55380]"/>
  <match src="parameter [5332,5341]" dest="parameter [5386,5395]"/>
  <match src="(: ( [3263,3264]" dest="(: ( [3317,3318]"/>
  <match src="call_argument [83250,83279]" dest="call_argument [79973,79988]"/>
  <match src="function_definition [12572,12627]" dest="function_definition [22248,22303]"/>
  <match src="(: ( [92898,92899]" dest="(: ( [30684,30685]"/>
  <match src="primitive_type [100045,100051]" dest="primitive_type [37863,37869]"/>
  <match src=".: . [95014,95015]" dest=".: . [32800,32801]"/>
  <match src="function: function [45666,45674]" dest="function: function [14920,14928]"/>
  <match src="member_expression [34188,34204]" dest="member_expression [49860,49876]"/>
  <match src="): ) [101683,101684]" dest="): ) [39501,39502]"/>
  <match src="function_body [102449,102525]" dest="function_body [40267,40343]"/>
  <match src="visibility [104733,104741]" dest="visibility [42551,42559]"/>
  <match src="internal: internal [45164,45172]" dest="internal: internal [14418,14426]"/>
  <match src="identifier: dollar [81176,81182]" dest="identifier: dollar [70485,70491]"/>
  <match src="(: ( [99271,99272]" dest="(: ( [37089,37090]"/>
  <match src="function_body [93010,93056]" dest="function_body [30796,30842]"/>
  <match src="): ) [46805,46806]" dest="): ) [16059,16060]"/>
  <match src="{: { [98946,98947]" dest="{: { [36764,36765]"/>
  <match src="call_argument [75863,75869]" dest="call_argument [63376,63382]"/>
  <match src="identifier: onlyFrozen [81142,81152]" dest="identifier: onlyFrozenOrFluid [71751,71768]"/>
  <match src="type_name [53598,53605]" dest="type_name [20592,20599]"/>
  <match src="identifier: balance [99921,99928]" dest="identifier: balance [37739,37746]"/>
  <match src="string_literal [68229,68238]" dest="string_literal [79558,79576]"/>
  <match src="identifier: sub [102091,102094]" dest="identifier: sub [39909,39912]"/>
  <match src=":: : [8508,8509]" dest=":: : [8607,8608]"/>
  <match src="primitive_type [33211,33218]" dest="primitive_type [48883,48890]"/>
  <match src=",: , [104709,104710]" dest=",: , [42527,42528]"/>
  <match src="type_name [92320,92325]" dest="type_name [30106,30111]"/>
  <match src=".: . [80625,80626]" dest=".: . [70240,70241]"/>
  <match src="[: [ [102737,102738]" dest="[: [ [40555,40556]"/>
  <match src="identifier: _state [101720,101726]" dest="identifier: _state [39538,39544]"/>
  <match src="primitive_type [4694,4701]" dest="primitive_type [4748,4755]"/>
  <match src="function: function [46435,46443]" dest="function: function [15689,15697]"/>
  <match src="parameter [99042,99056]" dest="parameter [36860,36874]"/>
  <match src="function_definition [96723,96850]" dest="function_definition [34509,34636]"/>
  <match src="returns: returns [85904,85911]" dest="returns: returns [73211,73218]"/>
  <match src="(: ( [14805,14806]" dest="(: ( [24481,24482]"/>
  <match src="call_argument [30855,30881]" dest="call_argument [46527,46553]"/>
  <match src="(: ( [2569,2570]" dest="(: ( [2623,2624]"/>
  <match src="): ) [104731,104732]" dest="): ) [42549,42550]"/>
  <match src="call_argument [43105,43147]" dest="call_argument [12359,12401]"/>
  <match src="address: address [103917,103924]" dest="address: address [41735,41742]"/>
  <match src="visibility [23133,23141]" dest="visibility [69938,69946]"/>
  <match src="uint8: uint8 [53589,53594]" dest="uint8: uint8 [20583,20588]"/>
  <match src="identifier: bonded [99398,99404]" dest="identifier: bonded [37216,37222]"/>
  <match src="contract_body [89591,91131]" dest="contract_body [74663,76203]"/>
  <match src="identifier: Require [49231,49238]" dest="identifier: Require [77994,78001]"/>
  <match src="identifier: _state [97645,97651]" dest="identifier: _state [35431,35437]"/>
  <match src="indexed: indexed [53725,53732]" dest="indexed: indexed [20719,20726]"/>
  <match src="call_argument [23265,23303]" dest="call_argument [70040,70061]"/>
  <match src="(: ( [8065,8066]" dest="(: ( [8164,8165]"/>
  <match src=",: , [98687,98688]" dest=",: , [36505,36506]"/>
  <match src="{: { [98833,98834]" dest="{: { [36651,36652]"/>
  <match src="primitive_type [31912,31919]" dest="primitive_type [47584,47591]"/>
  <match src="type_name [16354,16361]" dest="type_name [60146,60153]"/>
  <match src="variable_declaration [973,982]" dest="variable_declaration [1027,1036]"/>
  <match src="private: private [84204,84211]" dest="private: private [58199,58206]"/>
  <match src="identifier: LPAREN [30246,30252]" dest="identifier: LPAREN [45918,45924]"/>
  <match src="&quot;: &quot; [92262,92263]" dest="&quot;: &quot; [30048,30049]"/>
  <match src="[: [ [101645,101646]" dest="[: [ [39463,39464]"/>
  <match src="state_mutability [94967,94971]" dest="state_mutability [32753,32757]"/>
  <match src="state_mutability [96767,96771]" dest="state_mutability [34553,34557]"/>
  <match src="return_type_definition [53052,53066]" dest="return_type_definition [20046,20060]"/>
  <match src="call_expression [95362,95378]" dest="call_expression [33148,33164]"/>
  <match src="primitive_type [88226,88233]" dest="primitive_type [28355,28362]"/>
  <match src="parameter [9798,9802]" dest="parameter [9897,9901]"/>
  <match src="member_expression [83804,83814]" dest="member_expression [62535,62545]"/>
  <match src="identifier: Require [68150,68157]" dest="identifier: Require [79392,79399]"/>
  <match src="return: return [45477,45483]" dest="return: return [14731,14737]"/>
  <match src="pure: pure [46118,46122]" dest="pure: pure [15372,15376]"/>
  <match src="identifier: newLock [105161,105168]" dest="identifier: newLock [42979,42986]"/>
  <match src="): ) [93085,93086]" dest="): ) [30871,30872]"/>
  <match src=".: . [93578,93579]" dest=".: . [31364,31365]"/>
  <match src="return_statement [96446,96497]" dest="return_statement [34232,34283]"/>
  <match src="parameter [48495,48511]" dest="parameter [17212,17229]"/>
  <match src="comment: /* solium-disable-next-line security/no-modify-for-iter-var */ [34421,34483]" dest="comment: /* solium-disable-next-line security/no-modify-for-iter-var */ [50093,50155]"/>
  <match src="function_definition [5319,5485]" dest="function_definition [5373,5539]"/>
  <match src="visibility [96135,96141]" dest="visibility [33921,33927]"/>
  <match src="returns: returns [67567,67574]" dest="returns: returns [62116,62123]"/>
  <match src="identifier: stringifyTruncated [29499,29517]" dest="identifier: stringifyTruncated [45171,45189]"/>
  <match src="): ) [35116,35117]" dest="): ) [50788,50789]"/>
  <match src="member_expression [99246,99271]" dest="member_expression [37064,37089]"/>
  <match src="): ) [2576,2577]" dest="): ) [2630,2631]"/>
  <match src="call_argument [30325,30330]" dest="call_argument [45997,46002]"/>
  <match src="type_name [28842,28849]" dest="type_name [44514,44521]"/>
  <match src="identifier: candidates [97511,97521]" dest="identifier: candidates [35297,35307]"/>
  <match src="call_expression [30772,30796]" dest="call_expression [46444,46468]"/>
  <match src="]: ] [104574,104575]" dest="]: ] [42392,42393]"/>
  <match src="address: address [53092,53099]" dest="address: address [20086,20093]"/>
  <match src="primitive_type [54618,54622]" dest="primitive_type [21612,21616]"/>
  <match src="pure: pure [54076,54080]" dest="pure: pure [21070,21074]"/>
  <match src="view: view [54546,54550]" dest="view: view [21540,21544]"/>
  <match src="member_expression [102658,102673]" dest="member_expression [40476,40491]"/>
  <match src="type_name [14828,14835]" dest="type_name [24504,24511]"/>
  <match src="function_definition [92603,92713]" dest="function_definition [30389,30499]"/>
  <match src="call_argument [58695,58720]" dest="call_argument [82751,82766]"/>
  <match src="(: ( [4682,4683]" dest="(: ( [4736,4737]"/>
  <match src="identifier: balance [100122,100129]" dest="identifier: balance [37940,37947]"/>
  <match src="return: return [103485,103491]" dest="return: return [41303,41309]"/>
  <match src="primitive_type [36560,36567]" dest="primitive_type [52232,52239]"/>
  <match src="identifier: account [73271,73278]" dest="identifier: account [80820,80827]"/>
  <match src="(: ( [97152,97153]" dest="(: ( [34938,34939]"/>
  <match src="): ) [22886,22887]" dest="): ) [63443,63444]"/>
  <match src="}: } [98863,98864]" dest="}: } [36681,36682]"/>
  <match src="parameter [47043,47050]" dest="parameter [16297,16304]"/>
  <match src="call_argument [31676,31682]" dest="call_argument [47348,47354]"/>
  <match src="): ) [96495,96496]" dest="): ) [34281,34282]"/>
  <match src="visibility [46609,46617]" dest="visibility [15863,15871]"/>
  <match src="identifier: self [8890,8894]" dest="identifier: self [8989,8993]"/>
  <match src="return_type_definition [93099,93116]" dest="return_type_definition [30885,30902]"/>
  <match src="*: * [2639,2640]" dest="*: * [2693,2694]"/>
  <match src="function_definition [7656,7888]" dest="function_definition [7755,7987]"/>
  <match src="identifier: epoch [94230,94235]" dest="identifier: epoch [32016,32021]"/>
  <match src="+: + [38102,38103]" dest="+: + [53774,53775]"/>
  <match src="identifier: Permission [105993,106003]" dest="identifier: Permission [67922,67932]"/>
  <match src="comment: // return ASCII digit (0-9) [38010,38037]" dest="comment: // return ASCII digit (0-9) [53682,53709]"/>
  <match src="identifier: j [35872,35873]" dest="identifier: j [51544,51545]"/>
  <match src="identifier: success [90563,90570]" dest="identifier: success [75635,75642]"/>
  <match src="return: return [7821,7827]" dest="return: return [7920,7926]"/>
  <match src="identifier: that [68158,68162]" dest="identifier: that [79400,79404]"/>
  <match src="update_expression [35290,35298]" dest="update_expression [50962,50970]"/>
  <match src="(: ( [95553,95554]" dest="(: ( [33339,33340]"/>
  <match src="internal: internal [45434,45442]" dest="internal: internal [14688,14696]"/>
  <match src="): ) [84392,84393]" dest="): ) [58404,58405]"/>
  <match src="primitive_type [93432,93439]" dest="primitive_type [31218,31225]"/>
  <match src="number_literal: 0 [94054,94055]" dest="number_literal: 0 [31840,31841]"/>
  <match src="user_defined_type [10184,10188]" dest="user_defined_type [10283,10287]"/>
  <match src="function: function [46577,46585]" dest="function: function [15831,15839]"/>
  <match src="(: ( [7668,7669]" dest="(: ( [7767,7768]"/>
  <match src="identifier: staged [101038,101044]" dest="identifier: staged [38856,38862]"/>
  <match src="primitive_type [87545,87552]" dest="primitive_type [27674,27681]"/>
  <match src="type_name [99023,99030]" dest="type_name [36841,36848]"/>
  <match src="type_cast_expression [35780,35808]" dest="type_cast_expression [51452,51480]"/>
  <match src="}: } [86482,86483]" dest="}: } [73789,73790]"/>
  <match src="identifier: candidate [103735,103744]" dest="identifier: candidate [41553,41562]"/>
  <match src="function_definition [94179,94413]" dest="function_definition [31965,32199]"/>
  <match src="parameter [54828,54838]" dest="parameter [21822,21832]"/>
  <match src="uint256: uint256 [43568,43575]" dest="uint256: uint256 [12822,12829]"/>
  <match src="): ) [45702,45703]" dest="): ) [14956,14957]"/>
  <match src="): ) [97032,97033]" dest="): ) [34818,34819]"/>
  <match src="return_statement [46152,46182]" dest="return_statement [15406,15436]"/>
  <match src="variable_declaration [35376,35393]" dest="variable_declaration [51048,51065]"/>
  <match src="): ) [95224,95225]" dest="): ) [33010,33011]"/>
  <match src="parameter [83984,83997]" dest="parameter [79851,79868]"/>
  <match src="comment: // '&gt;' [28664,28670]" dest="comment: // '&gt;' [44336,44342]"/>
  <match src=".: . [93700,93701]" dest=".: . [31486,31487]"/>
  <match src="string_literal [21228,21261]" dest="string_literal [55987,56017]"/>
  <match src="identifier: FOUR_BIT_MASK [37672,37685]" dest="identifier: FOUR_BIT_MASK [53344,53357]"/>
  <match src="): ) [44681,44682]" dest="): ) [13935,13936]"/>
  <match src="identifier: compareTo [10955,10964]" dest="identifier: compareTo [11054,11063]"/>
  <match src="visibility [2302,2310]" dest="visibility [2356,2364]"/>
  <match src=".: . [9700,9701]" dest=".: . [9799,9800]"/>
  <match src="}: } [103055,103056]" dest="}: } [40873,40874]"/>
  <match src="identifier: periodFor [96867,96876]" dest="identifier: periodFor [34653,34662]"/>
  <match src="return_type_definition [71767,71784]" dest="return_type_definition [65772,65789]"/>
  <match src="private: private [43520,43527]" dest="private: private [12774,12781]"/>
  <match src="return_type_definition [16632,16649]" dest="return_type_definition [17276,17293]"/>
  <match src="): ) [29607,29608]" dest="): ) [45279,45280]"/>
  <match src="}: } [37897,37898]" dest="}: } [53569,53570]"/>
  <match src="identifier: getGovernancePeriod [45412,45431]" dest="identifier: getGovernancePeriod [14666,14685]"/>
  <match src="primitive_type [45065,45072]" dest="primitive_type [14319,14326]"/>
  <match src="parameter [31144,31158]" dest="parameter [46816,46830]"/>
  <match src="primitive_type [52620,52627]" dest="primitive_type [19614,19621]"/>
  <match src="expression_statement [100383,100441]" dest="expression_statement [38201,38259]"/>
  <match src="address: address [90100,90107]" dest="address: address [75172,75179]"/>
  <match src="returns: returns [47034,47041]" dest="returns: returns [16288,16295]"/>
  <match src="external: external [68046,68054]" dest="external: external [62822,62830]"/>
  <match src="identifier: POOL_EXIT_LOCKUP_EPOCHS [46282,46305]" dest="identifier: POOL_EXIT_LOCKUP_EPOCHS [15536,15559]"/>
  <match src="comment: // than to check the size of the code at that address. [86048,86102]" dest="comment: // than to check the size of the code at that address. [73355,73409]"/>
  <match src="primitive_type [96393,96400]" dest="primitive_type [34179,34186]"/>
  <match src="return_type_definition [8754,8775]" dest="return_type_definition [8853,8874]"/>
  <match src=".: . [82571,82572]" dest=".: . [71925,71926]"/>
  <match src="function_definition [71732,71832]" dest="function_definition [65739,65825]"/>
  <match src="uint: uint [53925,53929]" dest="uint: uint [20919,20923]"/>
  <match src="[: [ [101517,101518]" dest="[: [ [39335,39336]"/>
  <match src="bool: bool [53139,53143]" dest="bool: bool [20133,20137]"/>
  <match src="): ) [100065,100066]" dest="): ) [37883,37884]"/>
  <match src="(: ( [45989,45990]" dest="(: ( [15243,15244]"/>
  <match src="event_paramater [98689,98702]" dest="event_paramater [36507,36520]"/>
  <match src="visibility [94456,94462]" dest="visibility [32242,32248]"/>
  <match src=".: . [99397,99398]" dest=".: . [37215,37216]"/>
  <match src="primitive_type [908,915]" dest="primitive_type [962,969]"/>
  <match src="call_argument [30067,30432]" dest="call_argument [45739,46104]"/>
  <match src="identifier: candidate [103800,103809]" dest="identifier: candidate [41618,41627]"/>
  <match src="primitive_type [90100,90107]" dest="primitive_type [75172,75179]"/>
  <match src="member_expression [103782,103799]" dest="member_expression [41600,41617]"/>
  <match src="return: return [45207,45213]" dest="return: return [14461,14467]"/>
  <match src="address: address [80449,80456]" dest="address: address [77218,77225]"/>
  <match src="string: string [90572,90578]" dest="string: string [75644,75650]"/>
  <match src="}: } [45508,45509]" dest="}: } [14762,14763]"/>
  <match src="type_name [919,926]" dest="type_name [973,980]"/>
  <match src="function_body [6798,6845]" dest="function_body [6897,6944]"/>
  <match src="struct: struct [88438,88444]" dest="struct: struct [28567,28573]"/>
  <match src="): ) [46560,46561]" dest="): ) [15814,15815]"/>
  <match src="identifier: to [54596,54598]" dest="identifier: to [21590,21592]"/>
  <match src="while_statement [35260,35332]" dest="while_statement [50932,51004]"/>
  <match src="identifier: greaterThan [9868,9879]" dest="identifier: greaterThan [9967,9978]"/>
  <match src="visibility [6899,6907]" dest="visibility [6998,7006]"/>
  <match src="user_defined_type [8001,8005]" dest="user_defined_type [8100,8104]"/>
  <match src="identifier: _state [100383,100389]" dest="identifier: _state [38201,38207]"/>
  <match src="}: } [9717,9718]" dest="}: } [9816,9817]"/>
  <match src="primitive_type [1364,1371]" dest="primitive_type [1418,1425]"/>
  <match src="uint256: uint256 [42782,42789]" dest="uint256: uint256 [12036,12043]"/>
  <match src="function_definition [45517,45658]" dest="function_definition [14771,14912]"/>
  <match src="comment: /**      * @dev Emitted when the allowance of a `spender` for an `owner` is set by      * a call to {approve}. `value` is the new allowance.      */ [14871,15022]" dest="comment: /**      * @dev Emitted when the allowance of a `spender` for an `owner` is set by      * a call to {approve}. `value` is the new allowance.      */ [24547,24698]"/>
  <match src="{: { [87757,87758]" dest="{: { [27886,27887]"/>
  <match src="parameter [8301,8317]" dest="parameter [8400,8416]"/>
  <match src="parameter [45892,45899]" dest="parameter [15146,15153]"/>
  <match src="(: ( [78572,78573]" dest="(: ( [59265,59266]"/>
  <match src="function: function [52682,52690]" dest="function: function [19676,19684]"/>
  <match src=",: , [84337,84338]" dest=",: , [58356,58357]"/>
  <match src="identifier: BASE [9693,9697]" dest="identifier: BASE [9792,9796]"/>
  <match src="internal: internal [105235,105243]" dest="internal: internal [43053,43061]"/>
  <match src="returns: returns [50246,50253]" dest="returns: returns [25685,25692]"/>
  <match src="identifier: reason [32635,32641]" dest="identifier: reason [48307,48313]"/>
  <match src="comment: // r.length = length; [34807,34828]" dest="comment: // r.length = length; [50479,50500]"/>
  <match src="pure: pure [45173,45177]" dest="pure: pure [14427,14431]"/>
  <match src="): ) [101995,101996]" dest="): ) [39813,39814]"/>
  <match src="primitive_type [98906,98913]" dest="primitive_type [36724,36731]"/>
  <match src="parameter [104089,104106]" dest="parameter [41907,41924]"/>
  <match src=",: , [52640,52641]" dest=",: , [19634,19635]"/>
  <match src="identifier: _state [102146,102152]" dest="identifier: _state [39964,39970]"/>
  <match src="return: return [95355,95361]" dest="return: return [33141,33147]"/>
  <match src=",: , [3299,3300]" dest=",: , [3353,3354]"/>
  <match src="return: return [71796,71802]" dest="return: return [65799,65805]"/>
  <match src="member_expression [81251,81261]" dest="member_expression [71441,71451]"/>
  <match src="type_name [95272,95295]" dest="type_name [33058,33081]"/>
  <match src=".: . [103261,103262]" dest=".: . [41079,41080]"/>
  <match src="address: address [98647,98654]" dest="address: address [36465,36472]"/>
  <match src=".: . [81197,81198]" dest=".: . [70506,70507]"/>
  <match src="user_defined_type [7679,7683]" dest="user_defined_type [7778,7782]"/>
  <match src="{: { [29976,29977]" dest="{: { [45648,45649]"/>
  <match src="primitive_type [76510,76517]" dest="primitive_type [58884,58891]"/>
  <match src="call_argument [100479,100486]" dest="call_argument [38297,38304]"/>
  <match src="type_name [87569,87576]" dest="type_name [27698,27705]"/>
  <match src="call_argument [81936,81971]" dest="call_argument [71088,71126]"/>
  <match src="identifier: IERC20 [16321,16327]" dest="identifier: Curve [60114,60119]"/>
  <match src="return_type_definition [4719,4736]" dest="return_type_definition [4773,4790]"/>
  <match src="state_mutability [54303,54307]" dest="state_mutability [21297,21301]"/>
  <match src="&quot;: &quot; [65130,65131]" dest="&quot;: &quot; [62381,62382]"/>
  <match src="identifier: _state [100712,100718]" dest="identifier: _state [38530,38536]"/>
  <match src="(: ( [26094,26095]" dest="(: ( [78563,78564]"/>
  <match src="primitive_type [36059,36066]" dest="primitive_type [51731,51738]"/>
  <match src="}: } [95035,95036]" dest="}: } [32821,32822]"/>
  <match src="comment: /**      * Returns whether the target address is a contract      * @dev This function will return false if invoked during the constructor of a contract,      * as the code is not actually created until after the constructor finishes.      * @param account address of the account to check      * @return whether the target address is a contract      */ [85490,85847]" dest="comment: /**      * Returns whether the target address is a contract      * @dev This function will return false if invoked during the constructor of a contract,      * as the code is not actually created until after the constructor finishes.      * @param account address of the account to check      * @return whether the target address is a contract      */ [72797,73154]"/>
  <match src="type_name [96262,96269]" dest="type_name [34048,34055]"/>
  <match src="(: ( [51453,51454]" dest="(: ( [63917,63918]"/>
  <match src="): ) [81421,81422]" dest="): ) [70703,70704]"/>
  <match src="&quot;: &quot; [49084,49085]" dest="&quot;: &quot; [55468,55469]"/>
  <match src="{: { [7601,7602]" dest="{: { [7700,7701]"/>
  <match src="returns: returns [52897,52904]" dest="returns: returns [19891,19898]"/>
  <match src="private: private [24061,24068]" dest="private: private [59240,59247]"/>
  <match src="identifier: Transfer [14797,14805]" dest="identifier: Transfer [24473,24481]"/>
  <match src=",: , [83814,83815]" dest=",: , [62545,62546]"/>
  <match src="internal: internal [101185,101193]" dest="internal: internal [39003,39011]"/>
  <match src="returns: returns [45883,45890]" dest="returns: returns [15137,15144]"/>
  <match src="emit: emit [22850,22854]" dest="emit: emit [63396,63400]"/>
  <match src="{: { [95344,95345]" dest="{: { [33130,33131]"/>
  <match src="(: ( [53529,53530]" dest="(: ( [20523,20524]"/>
  <match src="string_literal [80073,80079]" dest="string_literal [69585,69594]"/>
  <match src="(: ( [53138,53139]" dest="(: ( [20132,20133]"/>
  <match src=".: . [32799,32800]" dest=".: . [48471,48472]"/>
  <match src="): ) [6668,6669]" dest="): ) [6767,6768]"/>
  <match src="uint: uint [53755,53759]" dest="uint: uint [20749,20753]"/>
  <match src="event: event [53637,53642]" dest="event: event [20631,20636]"/>
  <match src="(: ( [9523,9524]" dest="(: ( [9622,9623]"/>
  <match src="member_expression [96944,96979]" dest="member_expression [34730,34765]"/>
  <match src="call_argument [78108,78116]" dest="call_argument [57928,57950]"/>
  <match src="call_expression [90874,90931]" dest="call_expression [75946,76003]"/>
  <match src="type_name [104937,104944]" dest="type_name [42755,42762]"/>
  <match src="!=: != [34608,34610]" dest="!=: != [50280,50282]"/>
  <match src="identifier: account [100547,100554]" dest="identifier: account [38365,38372]"/>
  <match src="{: { [94493,94494]" dest="{: { [32279,32280]"/>
  <match src="return: return [93342,93348]" dest="return: return [31128,31134]"/>
  <match src="&quot;: &quot; [21902,21903]" dest="&quot;: &quot; [63837,63838]"/>
  <match src=".: . [95474,95475]" dest=".: . [33260,33261]"/>
  <match src="primitive_type [919,926]" dest="primitive_type [973,980]"/>
  <match src="revert: revert [29402,29408]" dest="revert: revert [45074,45080]"/>
  <match src="binary_expression [37563,37568]" dest="binary_expression [53235,53240]"/>
  <match src="member_expression [101632,101676]" dest="member_expression [39450,39494]"/>
  <match src="return_statement [7821,7881]" dest="return_statement [7920,7980]"/>
  <match src="[: [ [94860,94861]" dest="[: [ [32646,32647]"/>
  <match src="identifier: stringify [30941,30950]" dest="identifier: stringify [46613,46622]"/>
  <match src="type_name [45457,45464]" dest="type_name [14711,14718]"/>
  <match src="): ) [11064,11065]" dest="): ) [11163,11164]"/>
  <match src="return_statement [46035,46060]" dest="return_statement [15289,15314]"/>
  <match src="=: = [100326,100327]" dest="=: = [38144,38145]"/>
  <match src="return_statement [46664,46714]" dest="return_statement [15918,15968]"/>
  <match src="call_argument [30729,31016]" dest="call_argument [46401,46688]"/>
  <match src="): ) [7752,7753]" dest="): ) [7851,7852]"/>
  <match src="call_argument [29518,29522]" dest="call_argument [45190,45194]"/>
  <match src="call_argument [9976,9977]" dest="call_argument [10075,10076]"/>
  <match src="(: ( [1836,1837]" dest="(: ( [1890,1891]"/>
  <match src="(: ( [1439,1440]" dest="(: ( [1493,1494]"/>
  <match src="identifier: sub [1436,1439]" dest="identifier: sub [1490,1493]"/>
  <match src="external: external [53038,53046]" dest="external: external [20032,20040]"/>
  <match src="function_definition [92075,92177]" dest="function_definition [29861,29963]"/>
  <match src="identifier: epochs [103163,103169]" dest="identifier: epochs [40981,40987]"/>
  <match src="visibility [50239,50245]" dest="visibility [25678,25684]"/>
  <match src="call_argument [81081,81086]" dest="call_argument [70654,70659]"/>
  <match src="identifier: D256 [67315,67319]" dest="identifier: D256 [66935,66939]"/>
  <match src="variable_declaration_tuple [90435,90470]" dest="variable_declaration_tuple [75507,75542]"/>
  <match src="=: = [102048,102049]" dest="=: = [39866,39867]"/>
  <match src="identifier: LPAREN [32975,32981]" dest="identifier: LPAREN [48647,48653]"/>
  <match src="yul_evm_builtin [91079,91085]" dest="yul_evm_builtin [76151,76157]"/>
  <match src="type_name [10367,10371]" dest="type_name [10466,10470]"/>
  <match src="primitive_type [52783,52789]" dest="primitive_type [19777,19783]"/>
  <match src="return_type_definition [3945,3962]" dest="return_type_definition [3999,4016]"/>
  <match src="type_cast_expression [36059,36073]" dest="type_cast_expression [51731,51745]"/>
  <match src="{: { [97827,97828]" dest="{: { [35613,35614]"/>
  <match src=",: , [1373,1374]" dest=",: , [1427,1428]"/>
  <match src="call_expression [99246,99279]" dest="call_expression [37064,37097]"/>
  <match src=".: . [94514,94515]" dest=".: . [32300,32301]"/>
  <match src="type_name [13447,13454]" dest="type_name [23123,23130]"/>
  <match src="type_cast_expression [51489,51500]" dest="type_cast_expression [63982,63993]"/>
  <match src="): ) [32286,32287]" dest="): ) [47958,47959]"/>
  <match src="returns: returns [9789,9796]" dest="returns: returns [9888,9895]"/>
  <match src="identifier: dollarAmount [78448,78460]" dest="identifier: dollarAmount [62547,62559]"/>
  <match src="uint8: uint8 [35780,35785]" dest="uint8: uint8 [51452,51457]"/>
  <match src="identifier: this [78592,78596]" dest="identifier: this [59281,59285]"/>
  <match src="variable_declaration [65782,65805]" dest="variable_declaration [66326,66343]"/>
  <match src="function_body [23897,23942]" dest="function_body [55336,55505]"/>
  <match src="(: ( [35003,35004]" dest="(: ( [50675,50676]"/>
  <match src="parameter [101853,101873]" dest="parameter [39671,39691]"/>
  <match src="member_expression [83746,83756]" dest="member_expression [62597,62607]"/>
  <match src="address: address [74860,74867]" dest="address: address [55294,55301]"/>
  <match src="): ) [10929,10930]" dest="): ) [11028,11029]"/>
  <match src="uint256: uint256 [92420,92427]" dest="uint256: uint256 [30206,30213]"/>
  <match src="{: { [87640,87641]" dest="{: { [27769,27770]"/>
  <match src="(: ( [106454,106455]" dest="(: ( [68383,68384]"/>
  <match src="): ) [32442,32443]" dest="): ) [48114,48115]"/>
  <match src="call_argument [30129,30133]" dest="call_argument [45801,45805]"/>
  <match src="state_mutability [97179,97183]" dest="state_mutability [34965,34969]"/>
  <match src="call_expression [36818,36841]" dest="call_expression [52490,52513]"/>
  <match src="function_body [32705,33136]" dest="function_body [48377,48808]"/>
  <match src="call_argument [7870,7876]" dest="call_argument [7969,7975]"/>
  <match src="identifier: _state [101937,101943]" dest="identifier: _state [39755,39761]"/>
  <match src="identifier: D256 [45353,45357]" dest="identifier: D256 [14607,14611]"/>
  <match src="type_name [14142,14149]" dest="type_name [23818,23825]"/>
  <match src="primitive_type [96109,96116]" dest="primitive_type [33895,33902]"/>
  <match src="primitive_type [19670,19677]" dest="primitive_type [17436,17443]"/>
  <match src="function: function [9859,9867]" dest="function: function [9958,9966]"/>
  <match src="member_expression [28984,29000]" dest="member_expression [44656,44672]"/>
  <match src="function_body [102875,102944]" dest="function_body [40693,40762]"/>
  <match src="identifier: GOVERNANCE_QUORUM [45631,45648]" dest="identifier: GOVERNANCE_QUORUM [14885,14902]"/>
  <match src="{: { [8566,8567]" dest="{: { [8665,8666]"/>
  <match src="parameter [103116,103134]" dest="parameter [40934,40952]"/>
  <match src="state_mutability [92781,92785]" dest="state_mutability [30567,30571]"/>
  <match src="struct_declaration [88149,88246]" dest="struct_declaration [28278,28375]"/>
  <match src="identifier: abi [32796,32799]" dest="identifier: abi [48468,48471]"/>
  <match src=",: , [13405,13406]" dest=",: , [23081,23082]"/>
  <match src="&quot;: &quot; [106565,106566]" dest="&quot;: &quot; [68494,68495]"/>
  <match src=".: . [9685,9686]" dest=".: . [9784,9785]"/>
  <match src="function_definition [44648,44763]" dest="function_definition [13902,14017]"/>
  <match src="state_variable_declaration [28388,28430]" dest="state_variable_declaration [44060,44102]"/>
  <match src="function: function [95637,95645]" dest="function: function [33423,33431]"/>
  <match src="return: return [1060,1066]" dest="return: return [1114,1120]"/>
  <match src="(: ( [29817,29818]" dest="(: ( [45489,45490]"/>
  <match src="type_name [88072,88076]" dest="type_name [28201,28205]"/>
  <match src=",: , [48339,48340]" dest=",: , [55104,55105]"/>
  <match src="string: string [99341,99347]" dest="string: string [37159,37165]"/>
  <match src="string_literal [106056,106068]" dest="string_literal [67985,67997]"/>
  <match src="memory: memory [9903,9909]" dest="memory: memory [10002,10008]"/>
  <match src="(: ( [100538,100539]" dest="(: ( [38356,38357]"/>
  <match src="identifier: candidate [96962,96971]" dest="identifier: candidate [34748,34757]"/>
  <match src="function: function [7896,7904]" dest="function: function [7995,8003]"/>
  <match src="member_expression [102121,102143]" dest="member_expression [39939,39961]"/>
  <match src="-: - [37652,37653]" dest="-: - [53324,53325]"/>
  <match src="call_argument [30791,30795]" dest="call_argument [46463,46467]"/>
  <match src="function_definition [7455,7648]" dest="function_definition [7554,7747]"/>
  <match src="bool: bool [9936,9940]" dest="bool: bool [10035,10039]"/>
  <match src="uint256: uint256 [973,980]" dest="uint256: uint256 [1027,1034]"/>
  <match src="identifier: outstandingCoupons [103398,103416]" dest="identifier: outstandingCoupons [41216,41234]"/>
  <match src=".: . [94717,94718]" dest=".: . [32503,32504]"/>
  <match src="memory: memory [99348,99354]" dest="memory: memory [37166,37172]"/>
  <match src="identifier: amount [99972,99978]" dest="identifier: amount [37790,37796]"/>
  <match src="): ) [90364,90365]" dest="): ) [75436,75437]"/>
  <match src="return: return [7388,7394]" dest="return: return [7487,7493]"/>
  <match src="type_name [70131,70138]" dest="type_name [65240,65247]"/>
  <match src="identifier: self [8510,8514]" dest="identifier: self [8609,8613]"/>
  <match src="state_mutability [94244,94248]" dest="state_mutability [32030,32034]"/>
  <match src="member_expression [104753,104788]" dest="member_expression [42571,42606]"/>
  <match src="function_definition [95929,96069]" dest="function_definition [33715,33855]"/>
  <match src="identifier: deadline [48503,48511]" dest="identifier: totalDebt [17220,17229]"/>
  <match src="binary_expression [2661,2671]" dest="binary_expression [2715,2725]"/>
  <match src="function_definition [54520,54566]" dest="function_definition [21514,21560]"/>
  <match src="): ) [13422,13423]" dest="): ) [23098,23099]"/>
  <match src=".: . [34191,34192]" dest=".: . [49863,49864]"/>
  <match src="expression_statement [104547,104633]" dest="expression_statement [42365,42451]"/>
  <match src="uint256: uint256 [15091,15098]" dest="uint256: uint256 [24767,24774]"/>
  <match src="public: public [93948,93954]" dest="public: public [31734,31740]"/>
  <match src="pure: pure [9177,9181]" dest="pure: pure [9276,9280]"/>
  <match src=".: . [101734,101735]" dest=".: . [39552,39553]"/>
  <match src="(: ( [46536,46537]" dest="(: ( [15790,15791]"/>
  <match src="=: = [44498,44499]" dest="=: = [13752,13753]"/>
  <match src="identifier: must [31795,31799]" dest="identifier: must [47467,47471]"/>
  <match src="user_defined_type [10975,10979]" dest="user_defined_type [11074,11078]"/>
  <match src="parameter [32652,32668]" dest="parameter [48324,48340]"/>
  <match src="--: -- [35706,35708]" dest="--: -- [51378,51380]"/>
  <match src="=: = [36716,36717]" dest="=: = [52388,52389]"/>
  <match src="parameter [81408,81421]" dest="parameter [70690,70703]"/>
  <match src="!: ! [33358,33359]" dest="!: ! [49030,49031]"/>
  <match src="variable_declaration [35529,35538]" dest="variable_declaration [51201,51210]"/>
  <match src="identifier: startFor [96732,96740]" dest="identifier: startFor [34518,34526]"/>
  <match src="identifier: supply [100422,100428]" dest="identifier: supply [38240,38246]"/>
  <match src="block_statement [31271,31751]" dest="block_statement [46943,47423]"/>
  <match src="primitive_type [36017,36022]" dest="primitive_type [51689,51694]"/>
  <match src="member_expression [96325,96338]" dest="member_expression [34111,34124]"/>
  <match src="visibility [97727,97733]" dest="visibility [35513,35519]"/>
  <match src="parameter [106137,106152]" dest="parameter [68066,68081]"/>
  <match src="user_defined_type [96630,96644]" dest="user_defined_type [34416,34430]"/>
  <match src="state_variable_declaration [28342,28375]" dest="state_variable_declaration [44014,44047]"/>
  <match src="&gt;&gt;: &gt;&gt; [37707,37709]" dest="&gt;&gt;: &gt;&gt; [53379,53381]"/>
  <match src="primitive_type [29264,29271]" dest="primitive_type [44936,44943]"/>
  <match src="call_argument [30823,30828]" dest="call_argument [46495,46500]"/>
  <match src="identifier: Account [94578,94585]" dest="identifier: Account [32364,32371]"/>
  <match src="identifier: IMPLEMENTATION_SLOT [97788,97807]" dest="identifier: IMPLEMENTATION_SLOT [35574,35593]"/>
  <match src="(: ( [46014,46015]" dest="(: ( [15268,15269]"/>
  <match src="bytes32: bytes32 [30537,30544]" dest="bytes32: bytes32 [46209,46216]"/>
  <match src="identifier: self [8689,8693]" dest="identifier: self [8788,8792]"/>
  <match src="pure: pure [8364,8368]" dest="pure: pure [8463,8467]"/>
  <match src="type_name [53061,53065]" dest="type_name [20055,20059]"/>
  <match src="member_expression [96017,96054]" dest="member_expression [33803,33840]"/>
  <match src="}: } [20847,20848]" dest="}: } [64187,64188]"/>
  <match src="(: ( [8666,8667]" dest="(: ( [8765,8766]"/>
  <match src="assignment_expression [99683,99744]" dest="assignment_expression [37501,37562]"/>
  <match src="uint256: uint256 [42864,42871]" dest="uint256: uint256 [12118,12125]"/>
  <match src="uint256: uint256 [70184,70191]" dest="uint256: uint256 [65095,65102]"/>
  <match src="identifier: _state [102722,102728]" dest="identifier: _state [40540,40546]"/>
  <match src="): ) [82866,82867]" dest="): ) [55496,55497]"/>
  <match src="(: ( [21844,21845]" dest="(: ( [63777,63778]"/>
  <match src="return_statement [8030,8072]" dest="return_statement [8129,8171]"/>
  <match src="pure: pure [10059,10063]" dest="pure: pure [10158,10162]"/>
  <match src="identifier: amount [101155,101161]" dest="identifier: amount [38973,38979]"/>
  <match src=",: , [44944,44945]" dest=",: , [14198,14199]"/>
  <match src="identifier: newClaimable [82637,82649]" dest="identifier: reward [82644,82650]"/>
  <match src="type_name [88668,88683]" dest="type_name [28797,28812]"/>
  <match src="address: address [54200,54207]" dest="address: address [21194,21201]"/>
  <match src="constant: constant [28551,28559]" dest="constant: constant [44223,44231]"/>
  <match src="uint256: uint256 [95579,95586]" dest="uint256: uint256 [33365,33372]"/>
  <match src="call_argument [29635,29641]" dest="call_argument [45307,45313]"/>
  <match src="function: function [33992,34000]" dest="function: function [49664,49672]"/>
  <match src="call_argument [105048,105068]" dest="call_argument [42866,42886]"/>
  <match src="identifier: account [106201,106208]" dest="identifier: account [68130,68137]"/>
  <match src="identifier: self [10628,10632]" dest="identifier: self [10727,10731]"/>
  <match src="identifier: delegatecall [90491,90503]" dest="identifier: delegatecall [75563,75575]"/>
  <match src=".: . [84257,84258]" dest=".: . [58958,58959]"/>
  <match src="type_name [34166,34171]" dest="type_name [49838,49843]"/>
  <match src="member_expression [102050,102094]" dest="member_expression [39868,39912]"/>
  <match src="function_definition [46075,46189]" dest="function_definition [15329,15443]"/>
  <match src="memory: memory [8969,8975]" dest="memory: memory [9068,9074]"/>
  <match src="}: } [92176,92177]" dest="}: } [29962,29963]"/>
  <match src="==: == [94051,94053]" dest="==: == [31837,31839]"/>
  <match src=".: . [9250,9251]" dest=".: . [9349,9350]"/>
  <match src="call_argument [90528,90542]" dest="call_argument [75600,75614]"/>
  <match src="identifier: sender [80643,80649]" dest="identifier: sender [70258,70264]"/>
  <match src="visibility [99202,99210]" dest="visibility [37020,37028]"/>
  <match src="comment: // ============ Constants ============ [6367,6405]" dest="comment: // ============ Constants ============ [6466,6504]"/>
  <match src="call_argument [20833,20839]" dest="call_argument [64173,64179]"/>
  <match src="visibility [13065,13073]" dest="visibility [22741,22749]"/>
  <match src="expression_statement [5425,5455]" dest="expression_statement [5479,5509]"/>
  <match src="type_name [37006,37011]" dest="type_name [52678,52683]"/>
  <match src="call_expression [101720,101754]" dest="call_expression [39538,39572]"/>
  <match src="function: function [102360,102368]" dest="function: function [40178,40186]"/>
  <match src="visibility [45164,45172]" dest="visibility [14418,14426]"/>
  <match src="expression_statement [80889,80925]" dest="expression_statement [70956,70996]"/>
  <match src="address: address [51790,51797]" dest="address: address [60587,60594]"/>
  <match src="expression_statement [36655,36700]" dest="expression_statement [52327,52372]"/>
  <match src="memory: memory [45319,45325]" dest="memory: memory [14573,14579]"/>
  <match src="type_name [93545,93552]" dest="type_name [31331,31338]"/>
  <match src="primitive_type [50223,50230]" dest="primitive_type [25662,25669]"/>
  <match src="{: { [37999,38000]" dest="{: { [53671,53672]"/>
  <match src="): ) [9494,9495]" dest="): ) [9593,9594]"/>
  <match src="identifier: value [9686,9691]" dest="identifier: value [9785,9790]"/>
  <match src="uint256: uint256 [103326,103333]" dest="uint256: uint256 [41144,41151]"/>
  <match src="type_name [100899,100906]" dest="type_name [38717,38724]"/>
  <match src="identifier: msg [82625,82628]" dest="identifier: msg [82632,82635]"/>
  <match src="{: { [102248,102249]" dest="{: { [40066,40067]"/>
  <match src="call_expression [81176,81184]" dest="call_expression [70485,70493]"/>
  <match src="return_type_definition [9927,9941]" dest="return_type_definition [10026,10040]"/>
  <match src="event: event [52524,52529]" dest="event: event [19518,19523]"/>
  <match src="uint256: uint256 [28448,28455]" dest="uint256: uint256 [44120,44127]"/>
  <match src="primitive_type [104898,104905]" dest="primitive_type [42716,42723]"/>
  <match src="(: ( [94150,94151]" dest="(: ( [31936,31937]"/>
  <match src=".: . [33437,33438]" dest=".: . [49109,49110]"/>
  <match src="event_paramater [52662,52672]" dest="event_paramater [19656,19666]"/>
  <match src="number_literal: 1 [55978,55979]" dest="number_literal: 1 [79262,79263]"/>
  <match src=",: , [32948,32949]" dest=",: , [48620,48621]"/>
  <match src="type_name [28589,28595]" dest="type_name [44261,44267]"/>
  <match src="call_expression [29582,29608]" dest="call_expression [45254,45280]"/>
  <match src=".: . [97110,97111]" dest=".: . [34896,34897]"/>
  <match src="call_expression [106165,106300]" dest="call_expression [68094,68229]"/>
  <match src="function: function [45250,45258]" dest="function: function [14504,14512]"/>
  <match src="binary_expression [22730,22751]" dest="binary_expression [63251,63272]"/>
  <match src="identifier: value [9239,9244]" dest="identifier: value [9338,9343]"/>
  <match src="identifier: coupons [103245,103252]" dest="identifier: coupons [41063,41070]"/>
  <match src="parameter [97581,97598]" dest="parameter [35367,35384]"/>
  <match src="identifier: getUsdcAddress [44561,44575]" dest="identifier: getUsdcAddress [13815,13829]"/>
  <match src="): ) [7183,7184]" dest="): ) [7282,7283]"/>
  <match src="call_argument [33692,33697]" dest="call_argument [49364,49369]"/>
  <match src="type_name [28544,28550]" dest="type_name [44216,44222]"/>
  <match src="identifier: name [52691,52695]" dest="identifier: name [19685,19689]"/>
  <match src="): ) [85888,85889]" dest="): ) [73195,73196]"/>
  <match src="[: [ [103854,103855]" dest="[: [ [41672,41673]"/>
  <match src="view: view [97315,97319]" dest="view: view [35101,35105]"/>
  <match src=".: . [73687,73688]" dest=".: . [80060,80061]"/>
  <match src="identifier: self [9546,9550]" dest="identifier: self [9645,9649]"/>
  <match src="comment: // 10% [44443,44449]" dest="comment: // 10% [13697,13703]"/>
  <match src="{: { [46807,46808]" dest="{: { [16061,16062]"/>
  <match src="(: ( [93521,93522]" dest="(: ( [31307,31308]"/>
  <match src="call_expression [83651,83689]" dest="call_expression [71843,71867]"/>
  <match src="identifier: SUPPLY_CHANGE_DIVISOR [44347,44368]" dest="identifier: SUPPLY_CHANGE_DIVISOR [13601,13622]"/>
  <match src="]: ] [100672,100673]" dest="]: ] [38490,38491]"/>
  <match src=".: . [95748,95749]" dest=".: . [33534,33535]"/>
  <match src="call_argument [31466,31492]" dest="call_argument [47138,47164]"/>
  <match src=",: , [101851,101852]" dest=",: , [39669,39670]"/>
  <match src="comment: // ' &lt;' [28622,28629]" dest="comment: // ' &lt;' [44294,44301]"/>
  <match src="assignment_expression [100614,100701]" dest="assignment_expression [38432,38519]"/>
  <match src="(: ( [102172,102173]" dest="(: ( [39990,39991]"/>
  <match src="comment: /*     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [63477,64130]" dest="comment: /*     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [35710,36363]"/>
  <match src="primitive_type [52721,52727]" dest="primitive_type [19715,19721]"/>
  <match src="memory: memory [9201,9207]" dest="memory: memory [9300,9306]"/>
  <match src="(: ( [103100,103101]" dest="(: ( [40918,40919]"/>
  <match src="identifier: spender [53553,53560]" dest="identifier: spender [20547,20554]"/>
  <match src="uint256: uint256 [10601,10608]" dest="uint256: uint256 [10700,10707]"/>
  <match src="): ) [12625,12626]" dest="): ) [22301,22302]"/>
  <match src="(: ( [33157,33158]" dest="(: ( [48829,48830]"/>
  <match src="(: ( [99624,99625]" dest="(: ( [37442,37443]"/>
  <match src="identifier: i [35537,35538]" dest="identifier: i [51209,51210]"/>
  <match src="): ) [96433,96434]" dest="): ) [34219,34220]"/>
  <match src="[: [ [105137,105138]" dest="[: [ [42955,42956]"/>
  <match src="call_argument [9478,9485]" dest="call_argument [9577,9584]"/>
  <match src="identifier: account [100665,100672]" dest="identifier: account [38483,38490]"/>
  <match src="type_name [37457,37464]" dest="type_name [53129,53136]"/>
  <match src="identifier: a [6885,6886]" dest="identifier: a [6984,6985]"/>
  <match src="(: ( [50205,50206]" dest="(: ( [25644,25645]"/>
  <match src="type_name [80102,80109]" dest="type_name [69617,69624]"/>
  <match src="type_name [67221,67228]" dest="type_name [62440,62447]"/>
  <match src="call_argument [30193,30219]" dest="call_argument [45865,45891]"/>
  <match src="identifier: add [77103,77106]" dest="identifier: add [61073,61076]"/>
  <match src="variable_declaration_statement [67307,67404]" dest="variable_declaration_statement [66926,66987]"/>
  <match src="(: ( [101676,101677]" dest="(: ( [39494,39495]"/>
  <match src="}: } [46876,46877]" dest="}: } [16130,16131]"/>
  <match src="identifier: div [9520,9523]" dest="identifier: div [9619,9622]"/>
  <match src="identifier: IERC20 [12484,12490]" dest="identifier: IERC20 [22160,22166]"/>
  <match src="parameter [100257,100271]" dest="parameter [38075,38089]"/>
  <match src="number_literal: 0x2c20 [28568,28574]" dest="number_literal: 0x2c20 [44240,44246]"/>
  <match src="type_name [6780,6784]" dest="type_name [6879,6883]"/>
  <match src="primitive_type [96573,96580]" dest="primitive_type [34359,34366]"/>
  <match src="member_expression [102146,102172]" dest="member_expression [39964,39990]"/>
  <match src="{: { [80878,80879]" dest="{: { [70474,70475]"/>
  <match src="identifier: candidates [105262,105272]" dest="identifier: candidates [43080,43090]"/>
  <match src="type_name [12618,12625]" dest="type_name [22294,22301]"/>
  <match src="string_literal [64263,64271]" dest="string_literal [60194,60202]"/>
  <match src="member_expression [101325,101339]" dest="member_expression [39143,39157]"/>
  <match src="type_name [51354,51361]" dest="type_name [59224,59231]"/>
  <match src="array_access [101895,101934]" dest="array_access [39713,39752]"/>
  <match src="identifier: _state [99246,99252]" dest="identifier: _state [37064,37070]"/>
  <match src="member_expression [99705,99719]" dest="member_expression [37523,37537]"/>
  <match src="function: function [96239,96247]" dest="function: function [34025,34033]"/>
  <match src="}: } [62712,62713]" dest="}: } [26581,26582]"/>
  <match src="parameter [96429,96433]" dest="parameter [34215,34219]"/>
  <match src="call_argument [106525,106529]" dest="call_argument [68454,68458]"/>
  <match src=".: . [100993,100994]" dest=".: . [38811,38812]"/>
  <match src="{: { [104133,104134]" dest="{: { [41951,41952]"/>
  <match src="primitive_type [33188,33195]" dest="primitive_type [48860,48867]"/>
  <match src="primitive_type [97480,97484]" dest="primitive_type [35266,35270]"/>
  <match src="{: { [92548,92549]" dest="{: { [30334,30335]"/>
  <match src="{: { [47052,47053]" dest="{: { [16306,16307]"/>
  <match src="library_declaration [28271,38236]" dest="library_declaration [43943,53908]"/>
  <match src="primitive_type [50163,50170]" dest="primitive_type [25602,25609]"/>
  <match src="member_expression [101239,101274]" dest="member_expression [39057,39092]"/>
  <match src="type_name [80188,80195]" dest="type_name [69703,69710]"/>
  <match src="contract_declaration [79745,84932]" dest="contract_declaration [69471,72178]"/>
  <match src="visibility [82988,82996]" dest="visibility [71742,71750]"/>
  <match src="}: } [87818,87819]" dest="}: } [27947,27948]"/>
  <match src="identifier: amount [50171,50177]" dest="identifier: amount [25610,25616]"/>
  <match src="primitive_type [76763,76770]" dest="primitive_type [58443,58450]"/>
  <match src="comment: // TODO Check this again before the Serenity release, because all addresses will be [86228,86311]" dest="comment: // TODO Check this again before the Serenity release, because all addresses will be [73535,73618]"/>
  <match src="type_name [50163,50170]" dest="type_name [25602,25609]"/>
  <match src="}: } [105179,105180]" dest="}: } [42997,42998]"/>
  <match src="): ) [82055,82056]" dest="): ) [72166,72167]"/>
  <match src="identifier: stringify [32268,32277]" dest="identifier: stringify [47940,47949]"/>
  <match src="modifier: modifier [106607,106615]" dest="modifier: modifier [68536,68544]"/>
  <match src="identifier: candidate [104500,104509]" dest="identifier: candidate [42318,42327]"/>
  <match src="visibility [96609,96615]" dest="visibility [34395,34401]"/>
  <match src="call_argument [84888,84896]" dest="call_argument [79357,79368]"/>
  <match src="(: ( [30044,30045]" dest="(: ( [45716,45717]"/>
  <match src="): ) [8422,8423]" dest="): ) [8521,8522]"/>
  <match src="function_body [104926,105187]" dest="function_body [42744,43005]"/>
  <match src="identifier: epochs [88632,88638]" dest="identifier: epochs [28761,28767]"/>
  <match src="{: { [99082,99083]" dest="{: { [36900,36901]"/>
  <match src="return_type_definition [94809,94826]" dest="return_type_definition [32595,32612]"/>
  <match src="identifier: msg [83804,83807]" dest="identifier: msg [62535,62538]"/>
  <match src="number_literal: 10 [35318,35320]" dest="number_literal: 10 [50990,50992]"/>
  <match src="parameter [23708,23722]" dest="parameter [17240,17254]"/>
  <match src="identifier: b [8828,8829]" dest="identifier: b [8927,8928]"/>
  <match src="=: = [4090,4091]" dest="=: = [4144,4145]"/>
  <match src="array_access [102460,102482]" dest="array_access [40278,40300]"/>
  <match src="bytes32: bytes32 [28842,28849]" dest="bytes32: bytes32 [44514,44521]"/>
  <match src="number_literal: 2 [37567,37568]" dest="number_literal: 2 [53239,53240]"/>
  <match src="&gt;&gt;: &gt;&gt; [37849,37851]" dest="&gt;&gt;: &gt;&gt; [53521,53523]"/>
  <match src="member_expression [9681,9691]" dest="member_expression [9780,9790]"/>
  <match src=".: . [95405,95406]" dest=".: . [33191,33192]"/>
  <match src="comment: /*     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [47093,47746]" dest="comment: /*     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [16383,17036]"/>
  <match src="(: ( [97580,97581]" dest="(: ( [35366,35367]"/>
  <match src=",: , [49159,49160]" dest=",: , [70006,70007]"/>
  <match src="call_argument [31434,31439]" dest="call_argument [47106,47111]"/>
  <match src="identifier: self [10107,10111]" dest="identifier: self [10206,10210]"/>
  <match src="}: } [104853,104854]" dest="}: } [42671,42672]"/>
  <match src="(: ( [94281,94282]" dest="(: ( [32067,32068]"/>
  <match src="call_argument [90913,90930]" dest="call_argument [75985,76002]"/>
  <match src="return_statement [94571,94600]" dest="return_statement [32357,32386]"/>
  <match src="call_argument [84717,84721]" dest="call_argument [79134,79138]"/>
  <match src="identifier: onlyFrozenOrLocked [106395,106413]" dest="identifier: onlyFrozenOrLocked [68324,68342]"/>
  <match src="primitive_type [46938,46945]" dest="primitive_type [16192,16199]"/>
  <match src="identifier: balance [99690,99697]" dest="identifier: balance [37508,37515]"/>
  <match src="function_body [22632,22895]" dest="function_body [63232,63452]"/>
  <match src="identifier: BASE [6988,6992]" dest="identifier: BASE [7087,7091]"/>
  <match src="primitive_type [9936,9940]" dest="primitive_type [10035,10039]"/>
  <match src="comment: /* solium-disable-next-line security/no-inline-assembly */ [34676,34734]" dest="comment: /* solium-disable-next-line security/no-inline-assembly */ [50348,50406]"/>
  <match src="call_argument [57318,57343]" dest="call_argument [78110,78117]"/>
  <match src="identifier: payloadA [33244,33252]" dest="identifier: payloadA [48916,48924]"/>
  <match src="pure: pure [35998,36002]" dest="pure: pure [51670,51674]"/>
  <match src="): ) [84317,84318]" dest="): ) [58336,58337]"/>
  <match src="call_argument [45779,45813]" dest="call_argument [15033,15067]"/>
  <match src="internal: internal [75964,75972]" dest="internal: internal [65323,65331]"/>
  <match src="(: ( [83705,83706]" dest="(: ( [71883,71884]"/>
  <match src="primitive_type [53769,53776]" dest="primitive_type [20763,20770]"/>
  <match src="): ) [78053,78054]" dest="): ) [56147,56148]"/>
  <match src="identifier: balanceOf [84258,84267]" dest="identifier: mint [58959,58963]"/>
  <match src="pure: pure [7340,7344]" dest="pure: pure [7439,7443]"/>
  <match src="): ) [52672,52673]" dest="): ) [19666,19667]"/>
  <match src="identifier: value [10633,10638]" dest="identifier: value [10732,10737]"/>
  <match src="external: external [54666,54674]" dest="external: external [21660,21668]"/>
  <match src="identifier: reason [100059,100065]" dest="identifier: reason [37877,37883]"/>
  <match src="identifier: epoch [103170,103175]" dest="identifier: epoch [40988,40993]"/>
  <match src="): ) [94454,94455]" dest="): ) [32240,32241]"/>
  <match src="primitive_type [53006,53013]" dest="primitive_type [20000,20007]"/>
  <match src="identifier: redeemable [99957,99967]" dest="identifier: redeemable [37775,37785]"/>
  <match src="=: = [28566,28567]" dest="=: = [44238,44239]"/>
  <match src="bool: bool [33168,33172]" dest="bool: bool [48840,48844]"/>
  <match src="function: function [12572,12580]" dest="function: function [22248,22256]"/>
  <match src="return_statement [93671,93718]" dest="return_statement [31457,31504]"/>
  <match src="state_mutability [53486,53490]" dest="state_mutability [20480,20484]"/>
  <match src="(: ( [37323,37324]" dest="(: ( [52995,52996]"/>
  <match src="bytes2: bytes2 [28499,28505]" dest="bytes2: bytes2 [44171,44177]"/>
  <match src="member_expression [104791,104808]" dest="member_expression [42609,42626]"/>
  <match src="call_argument [20674,20680]" dest="call_argument [59022,59028]"/>
  <match src="member_expression [93678,93698]" dest="member_expression [31464,31484]"/>
  <match src="identifier: account [50154,50161]" dest="identifier: account [25593,25600]"/>
  <match src="}: } [33135,33136]" dest="}: } [48807,48808]"/>
  <match src="returns: returns [52966,52973]" dest="returns: returns [19960,19967]"/>
  <match src="): ) [54632,54633]" dest="): ) [21626,21627]"/>
  <match src="string_literal [26856,26906]" dest="string_literal [78433,78462]"/>
  <match src="state_variable_declaration [43833,43889]" dest="state_variable_declaration [13087,13143]"/>
  <match src="state_mutability [52707,52711]" dest="state_mutability [19701,19705]"/>
  <match src="(: ( [54683,54684]" dest="(: ( [21677,21678]"/>
  <match src=".: . [78501,78502]" dest=".: . [81981,81982]"/>
  <match src="if: if [34594,34596]" dest="if: if [50266,50268]"/>
  <match src="call_expression [84250,84318]" dest="call_expression [58245,58337]"/>
  <match src="identifier: account [80237,80244]" dest="identifier: account [77342,77349]"/>
  <match src="return: return [92815,92821]" dest="return: return [30601,30607]"/>
  <match src="call_argument [22730,22751]" dest="call_argument [63251,63272]"/>
  <match src="=: = [2635,2636]" dest="=: = [2689,2690]"/>
  <match src="type_name [8001,8005]" dest="type_name [8100,8104]"/>
  <match src="returns: returns [95838,95845]" dest="returns: returns [33624,33631]"/>
  <match src="(: ( [33450,33451]" dest="(: ( [49122,49123]"/>
  <match src="visibility [103762,103770]" dest="visibility [41580,41588]"/>
  <match src="identifier: provider [93035,93043]" dest="identifier: provider [30821,30829]"/>
  <match src="primitive_type [43512,43519]" dest="primitive_type [12766,12773]"/>
  <match src="identifier: amount [102173,102179]" dest="identifier: amount [39991,39997]"/>
  <match src="identifier: b [1443,1444]" dest="identifier: b [1497,1498]"/>
  <match src="(: ( [45161,45162]" dest="(: ( [14415,14416]"/>
  <match src="array_access [36797,36815]" dest="array_access [52469,52487]"/>
  <match src="function_definition [95784,95921]" dest="function_definition [33570,33707]"/>
  <match src=".: . [7425,7426]" dest=".: . [7524,7525]"/>
  <match src="(: ( [10642,10643]" dest="(: ( [10741,10742]"/>
  <match src="member_expression [106165,106177]" dest="member_expression [68094,68106]"/>
  <match src="memory: memory [7684,7690]" dest="memory: memory [7783,7789]"/>
  <match src="identifier: coupons [87362,87369]" dest="identifier: coupons [27491,27498]"/>
  <match src="): ) [92876,92877]" dest="): ) [30662,30663]"/>
  <match src="parameter [97015,97032]" dest="parameter [34801,34818]"/>
  <match src="indexed: indexed [98655,98662]" dest="indexed: indexed [36473,36480]"/>
  <match src="uint256: uint256 [100556,100563]" dest="uint256: uint256 [38374,38381]"/>
  <match src="update_expression [34497,34500]" dest="update_expression [50169,50172]"/>
  <match src="type_name [95701,95708]" dest="type_name [33487,33494]"/>
  <match src="event_paramater [53816,53838]" dest="event_paramater [20810,20832]"/>
  <match src="variable_declaration_statement [34166,34212]" dest="variable_declaration_statement [49838,49884]"/>
  <match src="return_type_definition [96420,96434]" dest="return_type_definition [34206,34220]"/>
  <match src="expression_statement [106165,106301]" dest="expression_statement [68094,68230]"/>
  <match src="): ) [100476,100477]" dest="): ) [38294,38295]"/>
  <match src="type_name [52975,52979]" dest="type_name [19969,19973]"/>
  <match src="primitive_type [7706,7713]" dest="primitive_type [7805,7812]"/>
  <match src="primitive_type [80831,80838]" dest="primitive_type [70419,70426]"/>
  <match src="struct_member [87651,87671]" dest="struct_member [27780,27800]"/>
  <match src="return_type_definition [12609,12626]" dest="return_type_definition [22285,22302]"/>
  <match src="uint256: uint256 [35235,35242]" dest="uint256: uint256 [50907,50914]"/>
  <match src="address: address [53816,53823]" dest="address: address [20810,20817]"/>
  <match src="identifier: D256 [6657,6661]" dest="identifier: D256 [6756,6760]"/>
  <match src="function_body [94827,94901]" dest="function_body [32613,32687]"/>
  <match src="modifier_invocation [107596,107607]" dest="modifier_invocation [81908,81919]"/>
  <match src="&gt;: &gt; [34343,34344]" dest="&gt;: &gt; [50015,50016]"/>
  <match src="member_expression [103837,103854]" dest="member_expression [41655,41672]"/>
  <match src=",: , [53543,53544]" dest=",: , [20537,20538]"/>
  <match src="identifier: Require [82220,82227]" dest="identifier: Require [80177,80184]"/>
  <match src="type_name [31169,31176]" dest="type_name [46841,46848]"/>
  <match src="comment: // populate the least-significant character [36598,36641]" dest="comment: // populate the least-significant character [52270,52313]"/>
  <match src="call_argument [83694,83707]" dest="call_argument [71872,71885]"/>
  <match src="type_name [7304,7311]" dest="type_name [7403,7410]"/>
  <match src="(: ( [106413,106414]" dest="(: ( [68342,68343]"/>
  <match src="identifier: amount [74983,74989]" dest="identifier: amount [55630,55636]"/>
  <match src="expression_statement [99683,99745]" dest="expression_statement [37501,37563]"/>
  <match src="primitive_type [102424,102431]" dest="primitive_type [40242,40249]"/>
  <match src="member_expression [104183,104200]" dest="member_expression [42001,42018]"/>
  <match src="primitive_type [51852,51856]" dest="primitive_type [60629,60636]"/>
  <match src="type_name [908,915]" dest="type_name [962,969]"/>
  <match src="parameter [54749,54764]" dest="parameter [21743,21758]"/>
  <match src="identifier: lockedUntil [87472,87483]" dest="identifier: lockedUntil [27601,27612]"/>
  <match src="): ) [4703,4704]" dest="): ) [4757,4758]"/>
  <match src="[: [ [104808,104809]" dest="[: [ [42626,42627]"/>
  <match src="public: public [93524,93530]" dest="public: public [31310,31316]"/>
  <match src="parameter [8763,8774]" dest="parameter [8862,8873]"/>
  <match src="(: ( [45456,45457]" dest="(: ( [14710,14711]"/>
  <match src="visibility [95313,95320]" dest="visibility [33099,33106]"/>
  <match src="primitive_type [28499,28505]" dest="primitive_type [44171,44177]"/>
  <match src="primitive_type [34166,34171]" dest="primitive_type [49838,49843]"/>
  <match src="(: ( [9969,9970]" dest="(: ( [10068,10069]"/>
  <match src="parameter [22607,22621]" dest="parameter [63207,63221]"/>
  <match src="assignment_expression [103603,103647]" dest="assignment_expression [41421,41465]"/>
  <match src="uint256: uint256 [64541,64548]" dest="uint256: uint256 [81790,81797]"/>
  <match src="call_argument [104441,104447]" dest="call_argument [42259,42265]"/>
  <match src="}: } [1486,1487]" dest="}: } [1540,1541]"/>
  <match src="function_definition [37906,38233]" dest="function_definition [53578,53905]"/>
  <match src="{: { [87194,87195]" dest="{: { [27323,27324]"/>
  <match src="return_type_definition [72238,72252]" dest="return_type_definition [80667,80681]"/>
  <match src="identifier: file [29518,29522]" dest="identifier: file [45190,45194]"/>
  <match src="(: ( [13391,13392]" dest="(: ( [23067,23068]"/>
  <match src="primitive_type [88407,88414]" dest="primitive_type [28536,28543]"/>
  <match src="array_access [102658,102706]" dest="array_access [40476,40524]"/>
  <match src="call_argument [20493,20494]" dest="call_argument [63597,63598]"/>
  <match src=".: . [93865,93866]" dest=".: . [31651,31652]"/>
  <match src="visibility [96408,96414]" dest="visibility [34194,34200]"/>
  <match src="event_paramater [14828,14846]" dest="event_paramater [24504,24522]"/>
  <match src="string: string [33405,33411]" dest="string: string [49077,49083]"/>
  <match src="(: ( [54507,54508]" dest="(: ( [21501,21502]"/>
  <match src="uint256: uint256 [87681,87688]" dest="uint256: uint256 [27810,27817]"/>
  <match src="): ) [81014,81015]" dest="): ) [70614,70615]"/>
  <match src="identifier: approve [14134,14141]" dest="identifier: approve [23810,23817]"/>
  <match src="(: ( [53499,53500]" dest="(: ( [20493,20494]"/>
  <match src="parameter [1375,1384]" dest="parameter [1429,1438]"/>
  <match src="identifier: _state [94845,94851]" dest="identifier: _state [32631,32637]"/>
  <match src="function_body [96926,96987]" dest="function_body [34712,34773]"/>
  <match src="return: return [46395,46401]" dest="return: return [15649,15655]"/>
  <match src=".: . [99564,99565]" dest=".: . [37382,37383]"/>
  <match src="identifier: msg [80708,80711]" dest="identifier: msg [70323,70326]"/>
  <match src="{: { [8042,8043]" dest="{: { [8141,8142]"/>
  <match src=",: , [9697,9698]" dest=",: , [9796,9797]"/>
  <match src="call_argument [18335,18341]" dest="call_argument [59331,59337]"/>
  <match src="identifier: ASCII_RELATIVE_ZERO [28405,28424]" dest="identifier: ASCII_RELATIVE_ZERO [44077,44096]"/>
  <match src="state_mutability [45443,45447]" dest="state_mutability [14697,14701]"/>
  <match src="modifier: modifier [106110,106118]" dest="modifier: modifier [68039,68047]"/>
  <match src="return_type_definition [7103,7124]" dest="return_type_definition [7202,7223]"/>
  <match src="): ) [8343,8344]" dest="): ) [8442,8443]"/>
  <match src="primitive_type [94222,94229]" dest="primitive_type [32008,32015]"/>
  <match src="(: ( [43104,43105]" dest="(: ( [12358,12359]"/>
  <match src="identifier: getOracleReserveMinimum [44657,44680]" dest="identifier: getOracleReserveMinimum [13911,13934]"/>
  <match src="function: function [13373,13381]" dest="function: function [23049,23057]"/>
  <match src="binary_expression [36485,36491]" dest="binary_expression [52157,52163]"/>
  <match src="identifier: b [7857,7858]" dest="identifier: b [7956,7957]"/>
  <match src="return_type_definition [92103,92126]" dest="return_type_definition [29889,29912]"/>
  <match src="contract_body [106015,106833]" dest="contract_body [67944,68762]"/>
  <match src="): ) [47050,47051]" dest="): ) [16304,16305]"/>
  <match src="call_argument [82920,82925]" dest="call_argument [71671,71676]"/>
  <match src="identifier: current [95137,95144]" dest="identifier: current [32923,32930]"/>
  <match src="call_expression [22722,22790]" dest="call_expression [63243,63319]"/>
  <match src="event_paramater [53925,53940]" dest="event_paramater [20919,20934]"/>
  <match src="(: ( [100466,100467]" dest="(: ( [38284,38285]"/>
  <match src="function_body [66968,67526]" dest="function_body [66205,66574]"/>
  <match src="identifier: CHAIN_ID [47070,47078]" dest="identifier: CHAIN_ID [16324,16332]"/>
  <match src="identifier: COLON [29550,29555]" dest="identifier: COLON [45222,45227]"/>
  <match src="(: ( [1363,1364]" dest="(: ( [1417,1418]"/>
  <match src="address: address [20485,20492]" dest="address: address [63589,63596]"/>
  <match src="number_literal: 0 [34611,34612]" dest="number_literal: 0 [50283,50284]"/>
  <match src="identifier: amount [100365,100371]" dest="identifier: amount [38183,38189]"/>
  <match src="number_literal: 1 [8551,8552]" dest="number_literal: 1 [8650,8651]"/>
  <match src="identifier: must [31265,31269]" dest="identifier: must [46937,46941]"/>
  <match src="identifier: c [2729,2730]" dest="identifier: c [2783,2784]"/>
  <match src="(: ( [52538,52539]" dest="(: ( [19532,19533]"/>
  <match src="primitive_type [46255,46262]" dest="primitive_type [15509,15516]"/>
  <match src="(: ( [92676,92677]" dest="(: ( [30462,30463]"/>
  <match src="number_literal: 18 [6441,6443]" dest="number_literal: 18 [6540,6542]"/>
  <match src="member_expression [82904,82915]" dest="member_expression [71655,71666]"/>
  <match src="(: ( [83079,83080]" dest="(: ( [58516,58517]"/>
  <match src="comment: /*     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [77158,77811]" dest="comment: /*     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [68804,69457]"/>
  <match src="primitive_type [16465,16472]" dest="primitive_type [60257,60264]"/>
  <match src="): ) [80725,80726]" dest="): ) [70340,70341]"/>
  <match src="if: if [103434,103436]" dest="if: if [41252,41254]"/>
  <match src="comment: /*     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [42075,42728]" dest="comment: /*     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [11333,11986]"/>
  <match src="identifier: D256 [8477,8481]" dest="identifier: D256 [8576,8580]"/>
  <match src="identifier: amount1 [54703,54710]" dest="identifier: amount1 [21697,21704]"/>
  <match src="member_expression [103513,103527]" dest="member_expression [41331,41345]"/>
  <match src="type_name [53545,53552]" dest="type_name [20539,20546]"/>
  <match src="(: ( [73254,73255]" dest="(: ( [80809,80810]"/>
  <match src="identifier: candidate [97023,97032]" dest="identifier: candidate [34809,34818]"/>
  <match src="{: { [1418,1419]" dest="{: { [1472,1473]"/>
  <match src="): ) [2332,2333]" dest="): ) [2386,2387]"/>
  <match src="identifier: add [84300,84303]" dest="identifier: add [58315,58318]"/>
  <match src="identifier: accounts [100300,100308]" dest="identifier: accounts [38118,38126]"/>
  <match src="[: [ [102673,102674]" dest="[: [ [40491,40492]"/>
  <match src="address: address [22590,22597]" dest="address: address [63190,63197]"/>
  <match src=",: , [53670,53671]" dest=",: , [20664,20665]"/>
  <match src="type_name [43385,43392]" dest="type_name [12639,12646]"/>
  <match src="identifier: value [52592,52597]" dest="identifier: value [19586,19591]"/>
  <match src="unary_expression [29380,29385]" dest="unary_expression [45052,45057]"/>
  <match src="update_expression [36493,36496]" dest="update_expression [52165,52168]"/>
  <match src="user_defined_type [8677,8681]" dest="user_defined_type [8776,8780]"/>
  <match src="[: [ [104161,104162]" dest="[: [ [41979,41980]"/>
  <match src="identifier: getPartial [7162,7172]" dest="identifier: getPartial [7261,7271]"/>
  <match src="event: event [52605,52610]" dest="event: event [19599,19604]"/>
  <match src="uint256: uint256 [104295,104302]" dest="uint256: uint256 [42113,42120]"/>
  <match src="identifier: amount0Out [54737,54747]" dest="identifier: amount0Out [21731,21741]"/>
  <match src="call_expression [100115,100160]" dest="call_expression [37933,37978]"/>
  <match src="assembly_statement [91055,91121]" dest="assembly_statement [76127,76193]"/>
  <match src="event_paramater [53994,54010]" dest="event_paramater [20988,21004]"/>
  <match src="pure: pure [8744,8748]" dest="pure: pure [8843,8847]"/>
  <match src="function_definition [30493,31069]" dest="function_definition [46165,46741]"/>
  <match src="function: function [100848,100856]" dest="function: function [38666,38674]"/>
  <match src="(: ( [52880,52881]" dest="(: ( [19874,19875]"/>
  <match src="(: ( [54230,54231]" dest="(: ( [21224,21225]"/>
  <match src="type_name [91888,91900]" dest="type_name [29674,29686]"/>
  <match src="type_name [104881,104888]" dest="type_name [42699,42706]"/>
  <match src="return_type_definition [45562,45591]" dest="return_type_definition [14816,14845]"/>
  <match src="number_literal: 66 [37197,37199]" dest="number_literal: 66 [52869,52871]"/>
  <match src="identifier: a [1372,1373]" dest="identifier: a [1426,1427]"/>
  <match src="call_argument [81270,81308]" dest="call_argument [80139,80153]"/>
  <match src="event_paramater [53769,53787]" dest="event_paramater [20763,20781]"/>
  <match src="identifier: a [4759,4760]" dest="identifier: a [4813,4814]"/>
  <match src="): ) [12781,12782]" dest="): ) [22457,22458]"/>
  <match src="(: ( [36066,36067]" dest="(: ( [51738,51739]"/>
  <match src="returns: returns [9611,9618]" dest="returns: returns [9710,9717]"/>
  <match src="identifier: stringifyTruncated [32099,32117]" dest="identifier: stringifyTruncated [47771,47789]"/>
  <match src="identifier: decrementRejectFor [104657,104675]" dest="identifier: decrementRejectFor [42475,42493]"/>
  <match src="(: ( [10016,10017]" dest="(: ( [10115,10116]"/>
  <match src="): ) [100776,100777]" dest="): ) [38594,38595]"/>
  <match src="pure: pure [9601,9605]" dest="pure: pure [9700,9704]"/>
  <match src="constant: constant [43940,43948]" dest="constant: constant [13194,13202]"/>
  <match src="event_paramater [53717,53739]" dest="event_paramater [20711,20733]"/>
  <match src="{: { [29365,29366]" dest="{: { [45037,45038]"/>
  <match src="uint112: uint112 [54335,54342]" dest="uint112: uint112 [21329,21336]"/>
  <match src="identifier: dollar [88184,88190]" dest="identifier: dollar [28313,28319]"/>
  <match src="identifier: allowance [13382,13391]" dest="identifier: allowance [23058,23067]"/>
  <match src="unary_expression [106668,106700]" dest="unary_expression [68597,68629]"/>
  <match src="comment: // addresses are &quot;0x&quot; followed by 20 bytes of data which take up 2 characters each [36086,36168]" dest="comment: // addresses are &quot;0x&quot; followed by 20 bytes of data which take up 2 characters each [51758,51840]"/>
  <match src="return_type_definition [93642,93659]" dest="return_type_definition [31428,31445]"/>
  <match src="identifier: _state [101589,101595]" dest="identifier: _state [39407,39413]"/>
  <match src="comment: // take last decimal digit [35725,35751]" dest="comment: // take last decimal digit [51397,51423]"/>
  <match src="(: ( [9879,9880]" dest="(: ( [9978,9979]"/>
  <match src="=: = [42910,42911]" dest="=: = [12164,12165]"/>
  <match src="identifier: D256 [64218,64222]" dest="identifier: D256 [65000,65004]"/>
  <match src="function_body [46506,46569]" dest="function_body [15760,15823]"/>
  <match src=",: , [33619,33620]" dest=",: , [49291,49292]"/>
  <match src="number_literal: 0xf [28709,28712]" dest="number_literal: 0xf [44381,44384]"/>
  <match src="{: { [10079,10080]" dest="{: { [10178,10179]"/>
  <match src="): ) [7867,7868]" dest="): ) [7966,7967]"/>
  <match src="): ) [106429,106430]" dest="): ) [68358,68359]"/>
  <match src="call_expression [94109,94122]" dest="call_expression [31895,31908]"/>
  <match src=",: , [48323,48324]" dest=",: , [55089,55090]"/>
  <match src="parameter [78668,78682]" dest="parameter [77400,77417]"/>
  <match src="yul_evm_builtin [34784,34790]" dest="yul_evm_builtin [50456,50462]"/>
  <match src="}: } [46711,46712]" dest="}: } [15965,15966]"/>
  <match src="call_expression [102309,102343]" dest="call_expression [40127,40161]"/>
  <match src=":: : [44965,44966]" dest=":: : [14219,14220]"/>
  <match src="uint: uint [53500,53504]" dest="uint: uint [20494,20498]"/>
  <match src=".: . [102035,102036]" dest=".: . [39853,39854]"/>
  <match src="parameter [93832,93839]" dest="parameter [31618,31625]"/>
  <match src="parameter [5405,5412]" dest="parameter [5459,5466]"/>
  <match src="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      * - Subtraction cannot overflow.      *      * _Available since v2.4.0._      */ [1495,1818]" dest="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      * - Subtraction cannot overflow.      *      * _Available since v2.4.0._      */ [1549,1872]"/>
  <match src="): ) [10867,10868]" dest="): ) [10966,10967]"/>
  <match src="address: address [105216,105223]" dest="address: address [43034,43041]"/>
  <match src=".: . [102013,102014]" dest=".: . [39831,39832]"/>
  <match src=".: . [94710,94711]" dest=".: . [32496,32497]"/>
  <match src="}: } [94900,94901]" dest="}: } [32686,32687]"/>
  <match src="uint256: uint256 [12774,12781]" dest="uint256: uint256 [22450,22457]"/>
  <match src="identifier: amount [14582,14588]" dest="identifier: amount [24258,24264]"/>
  <match src="member_expression [81917,81927]" dest="member_expression [71069,71079]"/>
  <match src=".: . [94867,94868]" dest=".: . [32653,32654]"/>
  <match src="): ) [54416,54417]" dest="): ) [21410,21411]"/>
  <match src="call_expression [34957,34969]" dest="call_expression [50629,50641]"/>
  <match src="identifier: statusOf [106192,106200]" dest="identifier: statusOf [68121,68129]"/>
  <match src="identifier: price1Cumulative [67014,67030]" dest="identifier: lessDebt [66422,66430]"/>
  <match src="=: = [99940,99941]" dest="=: = [37758,37759]"/>
  <match src="}: } [92851,92852]" dest="}: } [30637,30638]"/>
  <match src=",: , [80316,80317]" dest=",: , [69872,69873]"/>
  <match src="identifier: reason [104441,104447]" dest="identifier: reason [42259,42265]"/>
  <match src="): ) [104915,104916]" dest="): ) [42733,42734]"/>
  <match src="(: ( [8382,8383]" dest="(: ( [8481,8482]"/>
  <match src="uint256: uint256 [88384,88391]" dest="uint256: uint256 [28513,28520]"/>
  <match src="identifier: reason [30568,30574]" dest="identifier: reason [46240,46246]"/>
  <match src="&amp;: &amp; [36825,36826]" dest="&amp;: &amp; [52497,52498]"/>
  <match src="state_variable_declaration [28448,28486]" dest="state_variable_declaration [44120,44158]"/>
  <match src="(: ( [29472,29473]" dest="(: ( [45144,45145]"/>
  <match src="call_argument [31485,31491]" dest="call_argument [47157,47163]"/>
  <match src="comment: // for each byte (starting from the lowest byte), populate the result with two characters [37353,37442]" dest="comment: // for each byte (starting from the lowest byte), populate the result with two characters [53025,53114]"/>
  <match src="parameter [93322,93329]" dest="parameter [31108,31115]"/>
  <match src="identifier: must [30522,30526]" dest="identifier: must [46194,46198]"/>
  <match src="primitive_type [101822,101829]" dest="primitive_type [39640,39647]"/>
  <match src="primitive_type [93651,93658]" dest="primitive_type [31437,31444]"/>
  <match src="}: } [96230,96231]" dest="}: } [34016,34017]"/>
  <match src=".: . [84654,84655]" dest=".: . [79077,79078]"/>
  <match src="/: / [2663,2664]" dest="/: / [2717,2718]"/>
  <match src="call_argument [32235,32241]" dest="call_argument [47907,47913]"/>
  <match src="identifier: outstanding [101618,101629]" dest="identifier: outstanding [39436,39447]"/>
  <match src="return: return [92138,92144]" dest="return: return [29924,29930]"/>
  <match src="(: ( [93684,93685]" dest="(: ( [31470,31471]"/>
  <match src="identifier: Storage [88134,88141]" dest="identifier: Storage [28263,28270]"/>
  <match src="call_argument [7601,7639]" dest="call_argument [7700,7738]"/>
  <match src="function_definition [8654,8847]" dest="function_definition [8753,8946]"/>
  <match src="identifier: epochTimeWithStrategy [95250,95271]" dest="identifier: epochTimeWithStrategy [33036,33057]"/>
  <match src="internal: internal [7079,7087]" dest="internal: internal [7178,7186]"/>
  <match src="identifier: epochs [96332,96338]" dest="identifier: epochs [34118,34124]"/>
  <match src="return: return [11151,11157]" dest="return: return [11250,11256]"/>
  <match src="(: ( [94300,94301]" dest="(: ( [32086,32087]"/>
  <match src=",: , [53863,53864]" dest=",: , [20857,20858]"/>
  <match src="identifier: that [49117,49121]" dest="identifier: that [69966,69970]"/>
  <match src="identifier: b [1986,1987]" dest="identifier: b [2040,2041]"/>
  <match src="identifier: account [100630,100637]" dest="identifier: account [38448,38455]"/>
  <match src="view: view [52892,52896]" dest="view: view [19886,19890]"/>
  <match src=",: , [53596,53597]" dest=",: , [20590,20591]"/>
  <match src="member_expression [99942,99967]" dest="member_expression [37760,37785]"/>
  <match src="identifier: reason [104839,104845]" dest="identifier: reason [42657,42663]"/>
  <match src=".: . [45617,45618]" dest=".: . [14871,14872]"/>
  <match src="call_argument [75253,75259]" dest="call_argument [17828,17834]"/>
  <match src="identifier: current [95217,95224]" dest="identifier: current [33003,33010]"/>
  <match src=".: . [100360,100361]" dest=".: . [38178,38179]"/>
  <match src="primitive_type [94981,94988]" dest="primitive_type [32767,32774]"/>
  <match src="member_expression [81858,81868]" dest="member_expression [72046,72056]"/>
  <match src=".: . [9837,9838]" dest=".: . [9936,9937]"/>
  <match src="(: ( [101350,101351]" dest="(: ( [39168,39169]"/>
  <match src="type_name [7057,7064]" dest="type_name [7156,7163]"/>
  <match src=",: , [100486,100487]" dest=",: , [38304,38305]"/>
  <match src="(: ( [82865,82866]" dest="(: ( [55495,55496]"/>
  <match src="parameter [103917,103932]" dest="parameter [41735,41750]"/>
  <match src="function_body [95588,95629]" dest="function_body [33374,33415]"/>
  <match src="bytes32: bytes32 [106024,106031]" dest="bytes32: bytes32 [67953,67960]"/>
  <match src=",: , [9758,9759]" dest=",: , [9857,9858]"/>
  <match src="type_name [6877,6884]" dest="type_name [6976,6983]"/>
  <match src="identifier: result [37884,37890]" dest="identifier: result [53556,53562]"/>
  <match src="}: } [7194,7195]" dest="}: } [7293,7294]"/>
  <match src="type_name [80246,80253]" dest="type_name [60742,60749]"/>
  <match src="constant: constant [6421,6429]" dest="constant: constant [6520,6528]"/>
  <match src="): ) [81764,81765]" dest="): ) [70944,70945]"/>
  <match src="internal: internal [44578,44586]" dest="internal: internal [13832,13840]"/>
  <match src="array_access [37784,37802]" dest="array_access [53456,53474]"/>
  <match src="identifier: mul [81681,81684]" dest="identifier: mul [70846,70849]"/>
  <match src="identifier: sender [80870,80876]" dest="identifier: sender [71271,71277]"/>
  <match src="parameter [29871,29885]" dest="parameter [45543,45557]"/>
  <match src="type_name [67006,67013]" dest="type_name [66414,66421]"/>
  <match src="event_paramater [80474,80487]" dest="event_paramater [60652,60665]"/>
  <match src="): ) [31738,31739]" dest="): ) [47410,47411]"/>
  <match src="function: function [80533,80541]" dest="function: function [70149,70157]"/>
  <match src="primitive_type [104881,104888]" dest="primitive_type [42699,42706]"/>
  <match src="): ) [82040,82041]" dest="): ) [72142,72143]"/>
  <match src="constant: constant [28506,28514]" dest="constant: constant [44178,44186]"/>
  <match src="identifier: Deposit [80771,80778]" dest="identifier: Deposit [70359,70366]"/>
  <match src=".: . [102728,102729]" dest=".: . [40546,40547]"/>
  <match src="identifier: account [96699,96706]" dest="identifier: account [34485,34492]"/>
  <match src="identifier: price [66407,66412]" dest="identifier: price [65363,65368]"/>
  <match src="identifier: token1 [51830,51836]" dest="identifier: to [60625,60627]"/>
  <match src="if: if [11082,11084]" dest="if: if [11181,11183]"/>
  <match src="identifier: FILE [83231,83235]" dest="identifier: FILE [79954,79958]"/>
  <match src="call_argument [102173,102179]" dest="call_argument [39991,39997]"/>
  <match src="primitive_type [50146,50153]" dest="primitive_type [25585,25592]"/>
  <match src="identifier: couponAllowances [87408,87424]" dest="identifier: couponAllowances [27537,27553]"/>
  <match src="identifier: block [95606,95611]" dest="identifier: block [33392,33397]"/>
  <match src="(: ( [81684,81685]" dest="(: ( [70849,70850]"/>
  <match src="array_access [104547,104575]" dest="array_access [42365,42393]"/>
  <match src="function_body [106630,106830]" dest="function_body [68559,68759]"/>
  <match src="identifier: sender [80712,80718]" dest="identifier: sender [70327,70333]"/>
  <match src="comment: /* solium-disable-next-line security/no-modify-for-iter-var */ [35629,35691]" dest="comment: /* solium-disable-next-line security/no-modify-for-iter-var */ [51301,51363]"/>
  <match src="): ) [28913,28914]" dest="): ) [44585,44586]"/>
  <match src="binary_expression [1938,1944]" dest="binary_expression [1992,1998]"/>
  <match src="!=: != [5435,5437]" dest="!=: != [5489,5491]"/>
  <match src=".: . [102152,102153]" dest=".: . [39970,39971]"/>
  <match src="&quot;: &quot; [83432,83433]" dest="&quot;: &quot; [72097,72098]"/>
  <match src="memory: memory [8197,8203]" dest="memory: memory [8296,8302]"/>
  <match src="byte: byte [28635,28639]" dest="byte: byte [44307,44311]"/>
  <match src="): ) [9491,9492]" dest="): ) [9590,9591]"/>
  <match src="visibility [80049,80056]" dest="visibility [69561,69568]"/>
  <match src="type_name [65782,65789]" dest="type_name [66326,66333]"/>
  <match src="internal: internal [75427,75435]" dest="internal: internal [55764,55772]"/>
  <match src="return_statement [44726,44756]" dest="return_statement [13980,14010]"/>
  <match src="): ) [48378,48379]" dest="): ) [55112,55113]"/>
  <match src="function_definition [33144,33930]" dest="function_definition [48816,49602]"/>
  <match src="): ) [44608,44609]" dest="): ) [13862,13863]"/>
  <match src="parameter [13392,13405]" dest="parameter [23068,23081]"/>
  <match src="using_directive [64192,64223]" dest="using_directive [64974,65005]"/>
  <match src="identifier: payloadA [32278,32286]" dest="identifier: payloadA [47950,47958]"/>
  <match src="(: ( [82045,82046]" dest="(: ( [72147,72148]"/>
  <match src="contract: contract [98555,98563]" dest="contract: contract [36373,36381]"/>
  <match src="binary_expression [34598,34612]" dest="binary_expression [50270,50284]"/>
  <match src="expression_statement [37255,37291]" dest="expression_statement [52927,52963]"/>
  <match src="(: ( [32117,32118]" dest="(: ( [47789,47790]"/>
  <match src="}: } [3337,3338]" dest="}: } [3391,3392]"/>
  <match src="call_expression [1930,1959]" dest="call_expression [1984,2013]"/>
  <match src="identifier: epoch [96031,96036]" dest="identifier: epoch [33817,33822]"/>
  <match src="expression_statement [101023,101081]" dest="expression_statement [38841,38899]"/>
  <match src="=: = [101323,101324]" dest="=: = [39141,39142]"/>
  <match src="comment: /**      * @dev Moves `amount` tokens from the caller's account to `recipient`.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [12791,13006]" dest="comment: /**      * @dev Moves `amount` tokens from the caller's account to `recipient`.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [22467,22682]"/>
  <match src="variable_declaration [66387,66412]" dest="variable_declaration [65343,65368]"/>
  <match src="primitive_type [96156,96163]" dest="primitive_type [33942,33949]"/>
  <match src="solidity_pragma_token [7,23]" dest="solidity_pragma_token [61,77]"/>
  <match src="parenthesized_expression [33386,33911]" dest="parenthesized_expression [49058,49583]"/>
  <match src="return_statement [9953,9984]" dest="return_statement [10052,10083]"/>
  <match src="identifier: balanceOf [94127,94136]" dest="identifier: balanceOf [31913,31922]"/>
  <match src="identifier: State [88445,88450]" dest="identifier: State [28574,28579]"/>
  <match src=",: , [20680,20681]" dest=",: , [62188,62189]"/>
  <match src="identifier: b [10262,10263]" dest="identifier: b [10361,10362]"/>
  <match src="function: function [44771,44779]" dest="function: function [14025,14033]"/>
  <match src="call_expression [78472,78527]" dest="call_expression [81964,81996]"/>
  <match src="identifier: account [51168,51175]" dest="identifier: account [54776,54783]"/>
  <match src="type_name [93322,93329]" dest="type_name [31108,31115]"/>
  <match src="return_type_definition [95077,95094]" dest="return_type_definition [32863,32880]"/>
  <match src="identifier: account [103925,103932]" dest="identifier: account [41743,41750]"/>
  <match src="member_expression [94508,94544]" dest="member_expression [32294,32330]"/>
  <match src="[: [ [100664,100665]" dest="[: [ [38482,38483]"/>
  <match src="identifier: balanceOfStaged [93778,93793]" dest="identifier: balanceOfStaged [31564,31579]"/>
  <match src="byte: byte [36280,36284]" dest="byte: byte [51952,51956]"/>
  <match src="parameter [54684,54696]" dest="parameter [21678,21690]"/>
  <match src="call_argument [101073,101079]" dest="call_argument [38891,38897]"/>
  <match src="member_expression [106469,106510]" dest="member_expression [68398,68439]"/>
  <match src="(: ( [54255,54256]" dest="(: ( [21249,21250]"/>
  <match src="internal: internal [47020,47028]" dest="internal: internal [16274,16282]"/>
  <match src="primitive_type [33290,33297]" dest="primitive_type [48962,48969]"/>
  <match src="}: } [92270,92271]" dest="}: } [30056,30057]"/>
  <match src="(: ( [80751,80752]" dest="(: ( [56043,56044]"/>
  <match src="): ) [93522,93523]" dest="): ) [31308,31309]"/>
  <match src="user_defined_type [98575,98580]" dest="user_defined_type [36393,36398]"/>
  <match src="member_expression [102909,102929]" dest="member_expression [40727,40747]"/>
  <match src="}: } [45121,45122]" dest="}: } [14375,14376]"/>
  <match src="uint256: uint256 [87953,87960]" dest="uint256: uint256 [28082,28089]"/>
  <match src="returns: returns [46929,46936]" dest="returns: returns [16183,16190]"/>
  <match src="identifier: start [95406,95411]" dest="identifier: start [33192,33197]"/>
  <match src="(: ( [95578,95579]" dest="(: ( [33364,33365]"/>
  <match src="state_mutability [46241,46245]" dest="state_mutability [15495,15499]"/>
  <match src="(: ( [46484,46485]" dest="(: ( [15738,15739]"/>
  <match src="(: ( [7600,7601]" dest="(: ( [7699,7700]"/>
  <match src="identifier: amount [100488,100494]" dest="identifier: amount [38306,38312]"/>
  <match src="member_expression [10892,10917]" dest="member_expression [10991,11016]"/>
  <match src="parameter [95665,95678]" dest="parameter [33451,33464]"/>
  <match src="view: view [95976,95980]" dest="view: view [33762,33766]"/>
  <match src="}: } [101373,101374]" dest="}: } [39191,39192]"/>
  <match src="call_argument [101989,101995]" dest="call_argument [39807,39813]"/>
  <match src="function: function [99844,99852]" dest="function: function [37662,37670]"/>
  <match src="event: event [26578,26583]" dest="event: event [60467,60472]"/>
  <match src="]: ] [96344,96345]" dest="]: ] [34130,34131]"/>
  <match src="identifier: char [37915,37919]" dest="identifier: char [53587,53591]"/>
  <match src="state_mutability [93308,93312]" dest="state_mutability [31094,31098]"/>
  <match src="pure: pure [46924,46928]" dest="pure: pure [16178,16182]"/>
  <match src="address: address [72156,72163]" dest="address: address [58264,58271]"/>
  <match src="parameter [33236,33252]" dest="parameter [48908,48924]"/>
  <match src=".: . [8514,8515]" dest=".: . [8613,8614]"/>
  <match src="primitive_type [97015,97022]" dest="primitive_type [34801,34808]"/>
  <match src="primitive_type [5332,5339]" dest="primitive_type [5386,5393]"/>
  <match src="string_literal [82705,82740]" dest="string_literal [80496,80510]"/>
  <match src="assignment_expression [99383,99448]" dest="assignment_expression [37201,37266]"/>
  <match src="visibility [92518,92524]" dest="visibility [30304,30310]"/>
  <match src="identifier: transfer [13021,13029]" dest="identifier: transfer [22697,22705]"/>
  <match src="number_literal: 1 [34654,34655]" dest="number_literal: 1 [50326,50327]"/>
  <match src="function_definition [10541,10656]" dest="function_definition [10640,10755]"/>
  <match src="address: address [80352,80359]" dest="address: address [69735,69742]"/>
  <match src="{: { [34761,34762]" dest="{: { [50433,50434]"/>
  <match src="internal: internal [6899,6907]" dest="internal: internal [6998,7006]"/>
  <match src="address: address [100539,100546]" dest="address: address [38357,38364]"/>
  <match src="if_statement [105080,105180]" dest="if_statement [42898,42998]"/>
  <match src="function_body [9423,9503]" dest="function_body [9522,9602]"/>
  <match src="function: function [10713,10721]" dest="function: function [10812,10820]"/>
  <match src="member_expression [103219,103232]" dest="member_expression [41037,41050]"/>
  <match src="(: ( [88607,88608]" dest="(: ( [28736,28737]"/>
  <match src="member_expression [103603,103643]" dest="member_expression [41421,41461]"/>
  <match src="identifier: value [6529,6534]" dest="identifier: value [6628,6633]"/>
  <match src="binary_expression [37472,37478]" dest="binary_expression [53144,53150]"/>
  <match src="call_expression [81778,81821]" dest="call_expression [71548,71618]"/>
  <match src="call_argument [81815,81820]" dest="call_argument [71579,71584]"/>
  <match src="identifier: sender [99015,99021]" dest="identifier: sender [36833,36839]"/>
  <match src="returns: returns [46777,46784]" dest="returns: returns [16031,16038]"/>
  <match src="call_expression [81892,81972]" dest="call_expression [71044,71127]"/>
  <match src="identifier: epoch [96117,96122]" dest="identifier: epoch [33903,33908]"/>
  <match src="uint256: uint256 [3230,3237]" dest="uint256: uint256 [3284,3291]"/>
  <match src="uint256: uint256 [80392,80399]" dest="uint256: uint256 [69775,69782]"/>
  <match src=",: , [32863,32864]" dest=",: , [48535,48536]"/>
  <match src="block_statement [30660,31062]" dest="block_statement [46332,46734]"/>
  <match src="state_mutability [92663,92667]" dest="state_mutability [30449,30453]"/>
  <match src="call_argument [56951,56988]" dest="call_argument [77577,77594]"/>
  <match src="identifier: msg [83348,83351]" dest="identifier: msg [77528,77531]"/>
  <match src="identifier: Epoch [87507,87512]" dest="identifier: Epoch [27636,27641]"/>
  <match src="state_mutability [92098,92102]" dest="state_mutability [29884,29888]"/>
  <match src="return_statement [6961,6997]" dest="return_statement [7060,7096]"/>
  <match src="(: ( [103046,103047]" dest="(: ( [40864,40865]"/>
  <match src="}: } [23315,23316]" dest="}: } [64190,64191]"/>
  <match src="return: return [94838,94844]" dest="return: return [32624,32630]"/>
  <match src="identifier: candidates [104360,104370]" dest="identifier: candidates [42178,42188]"/>
  <match src="member_expression [104585,104620]" dest="member_expression [42403,42438]"/>
  <match src="identifier: State [87751,87756]" dest="identifier: State [27880,27885]"/>
  <match src="]: ] [37263,37264]" dest="]: ] [52935,52936]"/>
  <match src="function_definition [9726,9851]" dest="function_definition [9825,9950]"/>
  <match src=".: . [102915,102916]" dest=".: . [40733,40734]"/>
  <match src="returns: returns [34079,34086]" dest="returns: returns [49751,49758]"/>
  <match src="identifier: file [33496,33500]" dest="identifier: file [49168,49172]"/>
  <match src="(: ( [95664,95665]" dest="(: ( [33450,33451]"/>
  <match src="address: address [102222,102229]" dest="address: address [40040,40047]"/>
  <match src="view: view [96415,96419]" dest="view: view [34201,34205]"/>
  <match src="): ) [83080,83081]" dest="): ) [58517,58518]"/>
  <match src="(: ( [103564,103565]" dest="(: ( [41382,41383]"/>
  <match src="identifier: getSupplyChangeLimit [46586,46606]" dest="identifier: getSupplyChangeLimit [15840,15860]"/>
  <match src="external: external [53343,53351]" dest="external: external [20337,20345]"/>
  <match src=".: . [94592,94593]" dest=".: . [32378,32379]"/>
  <match src="identifier: spender [22598,22605]" dest="identifier: spender [63198,63205]"/>
  <match src="parameter [104676,104693]" dest="parameter [42494,42511]"/>
  <match src="): ) [31723,31724]" dest="): ) [47395,47396]"/>
  <match src="call_argument [106715,106719]" dest="call_argument [68644,68648]"/>
  <match src="identifier: offset [43393,43399]" dest="identifier: offset [12647,12653]"/>
  <match src="{: { [65593,65594]" dest="{: { [67125,67126]"/>
  <match src="{: { [102992,102993]" dest="{: { [40810,40811]"/>
  <match src="return: return [92559,92565]" dest="return: return [30345,30351]"/>
  <match src="visibility [94960,94966]" dest="visibility [32746,32752]"/>
  <match src="address: address [12734,12741]" dest="address: address [22410,22417]"/>
  <match src="(: ( [94507,94508]" dest="(: ( [32293,32294]"/>
  <match src="array_access [96325,96345]" dest="array_access [34111,34131]"/>
  <match src="parameter [29287,29301]" dest="parameter [44959,44973]"/>
  <match src="parenthesized_expression [31292,31739]" dest="parenthesized_expression [46964,47411]"/>
  <match src="identifier: candidate [104684,104693]" dest="identifier: candidate [42502,42511]"/>
  <match src="primitive_type [50099,50106]" dest="primitive_type [25538,25545]"/>
  <match src="primitive_type [53951,53958]" dest="primitive_type [20945,20952]"/>
  <match src="function_definition [93172,93272]" dest="function_definition [30958,31058]"/>
  <match src="contract: contract [79745,79753]" dest="contract: contract [69471,69479]"/>
  <match src="): ) [102636,102637]" dest="): ) [40454,40455]"/>
  <match src="}: } [4212,4213]" dest="}: } [4266,4267]"/>
  <match src=",: , [32616,32617]" dest=",: , [48288,48289]"/>
  <match src="type_name [8137,8144]" dest="type_name [8236,8243]"/>
  <match src="member_expression [81153,81163]" dest="member_expression [71769,71779]"/>
  <match src="call_argument [21961,21967]" dest="call_argument [62960,62971]"/>
  <match src="function_definition [52742,52798]" dest="function_definition [19736,19792]"/>
  <match src="{: { [28915,28916]" dest="{: { [44587,44588]"/>
  <match src=".: . [100352,100353]" dest=".: . [38170,38171]"/>
  <match src="emit_statement [82012,82057]" dest="emit_statement [72112,72168]"/>
  <match src="function_body [106431,106599]" dest="function_body [68360,68528]"/>
  <match src=".: . [65656,65657]" dest=".: . [67154,67155]"/>
  <match src="uint256: uint256 [104695,104702]" dest="uint256: uint256 [42513,42520]"/>
  <match src="identifier: accounts [104966,104974]" dest="identifier: accounts [42784,42792]"/>
  <match src="identifier: errorMessage [4056,4068]" dest="identifier: errorMessage [4110,4122]"/>
  <match src="type_name [44822,44835]" dest="type_name [14076,14089]"/>
  <match src="identifier: price0Cumulative [66988,67004]" dest="identifier: newRedeemable [66399,66412]"/>
  <match src="state_mutability [44587,44591]" dest="state_mutability [13841,13845]"/>
  <match src="user_defined_type [44822,44835]" dest="user_defined_type [14076,14089]"/>
  <match src="array_access [102460,102508]" dest="array_access [40278,40326]"/>
  <match src="type_alias [74653,74661]" dest="type_alias [76980,76988]"/>
  <match src="function_definition [6727,6845]" dest="function_definition [6826,6944]"/>
  <match src="identifier: LPAREN [28605,28611]" dest="identifier: LPAREN [44277,44283]"/>
  <match src="string [80073,80079]" dest="string [69585,69594]"/>
  <match src="=: = [104957,104958]" dest="=: = [42775,42776]"/>
  <match src="identifier: Vote [103963,103967]" dest="identifier: Vote [41781,41785]"/>
  <match src=",: , [62648,62649]" dest=",: , [26517,26518]"/>
  <match src="function_definition [14125,14199]" dest="function_definition [23801,23875]"/>
  <match src=":: : [7407,7408]" dest=":: : [7506,7507]"/>
  <match src="expression_statement [90555,90588]" dest="expression_statement [75627,75660]"/>
  <match src="comment: /**      * @dev Moves `amount` tokens from `sender` to `recipient` using the      * allowance mechanism. `amount` is then deducted from the caller's      * allowance.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [14207,14511]" dest="comment: /**      * @dev Moves `amount` tokens from `sender` to `recipient` using the      * allowance mechanism. `amount` is then deducted from the caller's      * allowance.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [23883,24187]"/>
  <match src="primitive_type [23708,23715]" dest="primitive_type [17240,17247]"/>
  <match src="identifier: _state [92566,92572]" dest="identifier: _state [30352,30358]"/>
  <match src="view: view [93308,93312]" dest="view: view [31094,31098]"/>
  <match src="identifier: account [101255,101262]" dest="identifier: account [39073,39080]"/>
  <match src=".: . [104781,104782]" dest=".: . [42599,42600]"/>
  <match src="uint112: uint112 [53994,54001]" dest="uint112: uint112 [20988,20995]"/>
  <match src="identifier: add [99268,99271]" dest="identifier: add [37086,37089]"/>
  <match src="): ) [72251,72252]" dest="): ) [80680,80681]"/>
  <match src="struct: struct [88149,88155]" dest="struct: struct [28278,28284]"/>
  <match src="primitive_type [87435,87442]" dest="primitive_type [27564,27571]"/>
  <match src="identifier: Storage [88732,88739]" dest="identifier: Storage [28861,28868]"/>
  <match src="): ) [9039,9040]" dest="): ) [9138,9139]"/>
  <match src="type_name [47043,47050]" dest="type_name [16297,16304]"/>
  <match src="uint: uint [54090,54094]" dest="uint: uint [21084,21088]"/>
  <match src="): ) [82404,82405]" dest="): ) [78178,78179]"/>
  <match src="assignment_expression [36268,36303]" dest="assignment_expression [51940,51975]"/>
  <match src="}: } [6541,6542]" dest="}: } [6640,6641]"/>
  <match src="identifier: payloadC [33812,33820]" dest="identifier: payloadC [49484,49492]"/>
  <match src="address: address [104881,104888]" dest="address: address [42699,42706]"/>
  <match src="type_name [80127,80134]" dest="type_name [69642,69649]"/>
  <match src="member_expression [102297,102308]" dest="member_expression [40115,40126]"/>
  <match src="bytes: bytes [36017,36022]" dest="bytes: bytes [51689,51694]"/>
  <match src="identifier: value [8806,8811]" dest="identifier: value [8905,8910]"/>
  <match src=",: , [33501,33502]" dest=",: , [49173,49174]"/>
  <match src="function: function [54520,54528]" dest="function: function [21514,21522]"/>
  <match src="]: ] [102743,102744]" dest="]: ] [40561,40562]"/>
  <match src="uint256: uint256 [3264,3271]" dest="uint256: uint256 [3318,3325]"/>
  <match src="member_expression [72137,72174]" dest="member_expression [58245,58299]"/>
  <match src="identifier: D256 [46640,46644]" dest="identifier: D256 [15894,15898]"/>
  <match src="(: ( [10600,10601]" dest="(: ( [10699,10700]"/>
  <match src="): ) [100822,100823]" dest="): ) [38640,38641]"/>
  <match src="call_expression [100969,101012]" dest="call_expression [38787,38830]"/>
  <match src="call_argument [106734,106755]" dest="call_argument [68663,68684]"/>
  <match src="(: ( [33578,33579]" dest="(: ( [49250,49251]"/>
  <match src="{: { [8804,8805]" dest="{: { [8903,8904]"/>
  <match src="parameter [53462,53475]" dest="parameter [20456,20469]"/>
  <match src=",: , [31874,31875]" dest=",: , [47546,47547]"/>
  <match src=".: . [99267,99268]" dest=".: . [37085,37086]"/>
  <match src="member_expression [101589,101629]" dest="member_expression [39407,39447]"/>
  <match src="visibility [50179,50185]" dest="visibility [25618,25624]"/>
  <match src="state_mutability [12760,12764]" dest="state_mutability [22436,22440]"/>
  <match src=".: . [99719,99720]" dest=".: . [37537,37538]"/>
  <match src="type_name [88355,88362]" dest="type_name [28484,28491]"/>
  <match src="): ) [106485,106486]" dest="): ) [68414,68415]"/>
  <match src=",: , [91090,91091]" dest=",: , [76162,76163]"/>
  <match src="(: ( [80778,80779]" dest="(: ( [70366,70367]"/>
  <match src="assembly: assembly [34752,34760]" dest="assembly: assembly [50424,50432]"/>
  <match src="call_argument [83746,83756]" dest="call_argument [62597,62607]"/>
  <match src="(: ( [37667,37668]" dest="(: ( [53339,53340]"/>
  <match src="): ) [33585,33586]" dest="): ) [49257,49258]"/>
  <match src="type_name [44601,44608]" dest="type_name [13855,13862]"/>
  <match src=",: , [83387,83388]" dest=",: , [77562,77563]"/>
  <match src="identifier: GOVERNANCE_PERIOD [43668,43685]" dest="identifier: GOVERNANCE_PERIOD [12922,12939]"/>
  <match src="identifier: sender [51464,51470]" dest="identifier: sender [63959,63965]"/>
  <match src="expression_statement [37843,37854]" dest="expression_statement [53515,53526]"/>
  <match src="call_expression [99942,99979]" dest="call_expression [37760,37797]"/>
  <match src="function_definition [52987,53067]" dest="function_definition [19981,20061]"/>
  <match src="&amp;: &amp; [37812,37813]" dest="&amp;: &amp; [53484,53485]"/>
  <match src="identifier: sub [95393,95396]" dest="identifier: sub [33179,33182]"/>
  <match src="(: ( [11085,11086]" dest="(: ( [11184,11185]"/>
  <match src="returns: returns [92215,92222]" dest="returns: returns [30001,30008]"/>
  <match src="contract: contract [87823,87831]" dest="contract: contract [27952,27960]"/>
  <match src="state_mutability [94804,94808]" dest="state_mutability [32590,32594]"/>
  <match src="identifier: upgradeTo [90329,90338]" dest="identifier: upgradeTo [75401,75410]"/>
  <match src="state_mutability [12604,12608]" dest="state_mutability [22280,22284]"/>
  <match src="return_statement [1060,1069]" dest="return_statement [1114,1123]"/>
  <match src="(: ( [54653,54654]" dest="(: ( [21647,21648]"/>
  <match src="primitive_type [28842,28849]" dest="primitive_type [44514,44521]"/>
  <match src="binary_expression [36662,36672]" dest="binary_expression [52334,52344]"/>
  <match src="call_argument [55978,55979]" dest="call_argument [79262,79263]"/>
  <match src=".: . [49238,49239]" dest=".: . [78001,78002]"/>
  <match src="identifier: State [87266,87271]" dest="identifier: State [27395,27400]"/>
  <match src="returns: returns [1901,1908]" dest="returns: returns [1955,1962]"/>
  <match src="): ) [45194,45195]" dest="): ) [14448,14449]"/>
  <match src="identifier: Constants [81645,81654]" dest="identifier: Constants [70850,70859]"/>
  <match src="uint256: uint256 [35207,35214]" dest="uint256: uint256 [50879,50886]"/>
  <match src="array_access [96664,96692]" dest="array_access [34450,34478]"/>
  <match src="identifier: self [7691,7695]" dest="identifier: self [7790,7794]"/>
  <match src="call_expression [84286,84299]" dest="call_expression [58300,58313]"/>
  <match src="call_expression [84250,84282]" dest="call_expression [58950,58986]"/>
  <match src="call_argument [20782,20788]" dest="call_argument [54921,54927]"/>
  <match src="identifier: _state [101325,101331]" dest="identifier: _state [39143,39149]"/>
  <match src="identifier: ORACLE_RESERVE_MINIMUM [44733,44755]" dest="identifier: ORACLE_RESERVE_MINIMUM [13987,14009]"/>
  <match src="): ) [52822,52823]" dest="): ) [19816,19817]"/>
  <match src="identifier: Coupons [87793,87800]" dest="identifier: Coupons [27922,27929]"/>
  <match src="identifier: b [9699,9700]" dest="identifier: b [9798,9799]"/>
  <match src="call_argument [81206,81211]" dest="call_argument [70515,70520]"/>
  <match src="type_alias [79798,79806]" dest="type_alias [69524,69532]"/>
  <match src="type_name [90436,90440]" dest="type_name [75508,75512]"/>
  <match src="string: string [52783,52789]" dest="string: string [19777,19783]"/>
  <match src="bool: bool [28799,28803]" dest="bool: bool [44471,44475]"/>
  <match src="visibility [30614,30622]" dest="visibility [46286,46294]"/>
  <match src="primitive_type [31833,31840]" dest="primitive_type [47505,47512]"/>
  <match src="identifier: Provide [80441,80448]" dest="identifier: Proposal [77101,77109]"/>
  <match src="uint: uint [53874,53878]" dest="uint: uint [20868,20872]"/>
  <match src="identifier: FOUR_BIT_MASK [37814,37827]" dest="identifier: FOUR_BIT_MASK [53486,53499]"/>
  <match src="primitive_type [105216,105223]" dest="primitive_type [43034,43041]"/>
  <match src="type_name [14608,14612]" dest="type_name [24284,24288]"/>
  <match src="(: ( [95846,95847]" dest="(: ( [33632,33633]"/>
  <match src="struct_member [87681,87700]" dest="struct_member [27810,27829]"/>
  <match src="type_name [10311,10315]" dest="type_name [10410,10414]"/>
  <match src="identifier: from [53253,53257]" dest="identifier: from [20247,20251]"/>
  <match src="primitive_type [54256,54263]" dest="primitive_type [21250,21257]"/>
  <match src=".: . [7614,7615]" dest=".: . [7713,7714]"/>
  <match src="call_argument [101677,101683]" dest="call_argument [39495,39501]"/>
  <match src="type_name [42782,42789]" dest="type_name [12036,12043]"/>
  <match src=".: . [58700,58701]" dest=".: . [82756,82757]"/>
  <match src="identifier: Burn [53712,53716]" dest="identifier: Burn [20706,20710]"/>
  <match src="}: } [10532,10533]" dest="}: } [10631,10632]"/>
  <match src="call_expression [97356,97403]" dest="call_expression [35142,35189]"/>
  <match src="identifier: Withdraw [80154,80162]" dest="identifier: Withdraw [69669,69677]"/>
  <match src="): ) [80796,80797]" dest="): ) [70384,70385]"/>
  <match src=",: , [14157,14158]" dest=",: , [23833,23834]"/>
  <match src="&gt;: &gt; [11166,11167]" dest="&gt;: &gt; [11265,11266]"/>
  <match src="user_defined_type [66387,66399]" dest="user_defined_type [65343,65355]"/>
  <match src="]: ] [102481,102482]" dest="]: ] [40299,40300]"/>
  <match src="identifier: _state [99407,99413]" dest="identifier: _state [37225,37231]"/>
  <match src="parameter [103326,103339]" dest="parameter [41144,41157]"/>
  <match src="visibility [94237,94243]" dest="visibility [32023,32029]"/>
  <match src="{: { [9005,9006]" dest="{: { [9104,9105]"/>
  <match src="function: function [98872,98880]" dest="function: function [36690,36698]"/>
  <match src="visibility [48577,48585]" dest="visibility [62107,62115]"/>
  <match src="call_expression [33434,33877]" dest="call_expression [49106,49549]"/>
  <match src="array_access [104183,104211]" dest="array_access [42001,42029]"/>
  <match src="visibility [10050,10058]" dest="visibility [10149,10157]"/>
  <match src="identifier: account [102230,102237]" dest="identifier: account [40048,40055]"/>
  <match src="type_name [88600,88631]" dest="type_name [28729,28760]"/>
  <match src="primitive_type [93832,93839]" dest="primitive_type [31618,31625]"/>
  <match src="emit: emit [20800,20804]" dest="emit: emit [64127,64131]"/>
  <match src="byte: byte [37267,37271]" dest="byte: byte [52939,52943]"/>
  <match src="emit_statement [81349,81379]" dest="emit_statement [80567,80602]"/>
  <match src="identifier: msg [81803,81806]" dest="identifier: msg [71567,71570]"/>
  <match src=".: . [100299,100300]" dest=".: . [38117,38118]"/>
  <match src="call_argument [106201,106208]" dest="call_argument [68130,68137]"/>
  <match src="primitive_type [95665,95672]" dest="primitive_type [33451,33458]"/>
  <match src="call_expression [101527,101578]" dest="call_expression [39345,39396]"/>
  <match src="member_expression [80960,80970]" dest="member_expression [70557,70567]"/>
  <match src="public: public [107608,107614]" dest="public: public [81920,81926]"/>
  <match src="identifier: amount [100686,100692]" dest="identifier: amount [38504,38510]"/>
  <match src="(: ( [44600,44601]" dest="(: ( [13854,13855]"/>
  <match src="): ) [82917,82918]" dest="): ) [71668,71669]"/>
  <match src="!=: != [106210,106212]" dest="!=: != [68139,68141]"/>
  <match src="!: ! [32720,32721]" dest="!: ! [48392,48393]"/>
  <match src="&quot;: &quot; [26856,26857]" dest="&quot;: &quot; [78433,78434]"/>
  <match src="call_expression [82470,82509]" dest="call_expression [71340,71405]"/>
  <match src="member_expression [101695,101709]" dest="member_expression [39513,39527]"/>
  <match src="revert: revert [28930,28936]" dest="revert: revert [44602,44608]"/>
  <match src=".: . [103527,103528]" dest=".: . [41345,41346]"/>
  <match src="type_name [99186,99193]" dest="type_name [37004,37011]"/>
  <match src="(: ( [98773,98774]" dest="(: ( [36591,36592]"/>
  <match src="}: } [48386,48387]" dest="}: } [55260,55261]"/>
  <match src="function_definition [71954,72056]" dest="function_definition [61890,62052]"/>
  <match src="returns: returns [66938,66945]" dest="returns: returns [66885,66892]"/>
  <match src="type_name [95811,95818]" dest="type_name [33597,33604]"/>
  <match src="}: } [44989,44990]" dest="}: } [14243,14244]"/>
  <match src="): ) [54119,54120]" dest="): ) [21113,21114]"/>
  <match src="primitive_type [31311,31317]" dest="primitive_type [46983,46989]"/>
  <match src="identifier: must [32589,32593]" dest="identifier: must [48261,48265]"/>
  <match src="call_argument [82803,82839]" dest="call_argument [79705,79719]"/>
  <match src="identifier: reason [7870,7876]" dest="identifier: reason [7969,7975]"/>
  <match src="{: { [80607,80608]" dest="{: { [70221,70222]"/>
  <match src="identifier: i [36478,36479]" dest="identifier: i [52150,52151]"/>
  <match src="): ) [101079,101080]" dest="): ) [38897,38898]"/>
  <match src=".: . [83675,83676]" dest=".: . [71848,71849]"/>
  <match src="identifier: input [38051,38056]" dest="identifier: input [53723,53728]"/>
  <match src="binary_expression [94508,94554]" dest="binary_expression [32294,32340]"/>
  <match src="type_name [28342,28349]" dest="type_name [44014,44021]"/>
  <match src="return: return [92250,92256]" dest="return: return [30036,30042]"/>
  <match src="string: string [100045,100051]" dest="string: string [37863,37869]"/>
  <match src="(: ( [33386,33387]" dest="(: ( [49058,49059]"/>
  <match src="expression_statement [77057,77144]" dest="expression_statement [61120,61174]"/>
  <match src="call_expression [80618,80625]" dest="call_expression [70232,70240]"/>
  <match src="]: ] [101228,101229]" dest="]: ] [39046,39047]"/>
  <match src="function_definition [90140,90169]" dest="function_definition [75212,75241]"/>
  <match src=".: . [99542,99543]" dest=".: . [37360,37361]"/>
  <match src="string_literal [19816,19855]" dest="string_literal [71500,71536]"/>
  <match src="(: ( [37317,37318]" dest="(: ( [52989,52990]"/>
  <match src="return: return [97349,97355]" dest="return: return [35135,35141]"/>
  <match src="number_literal: 66e16 [43814,43819]" dest="number_literal: 66e16 [13068,13073]"/>
  <match src="modifier_invocation [80597,80606]" dest="modifier_invocation [70190,70220]"/>
  <match src="[: [ [101910,101911]" dest="[: [ [39728,39729]"/>
  <match src="internal: internal [103974,103982]" dest="internal: internal [41792,41800]"/>
  <match src="expression_statement [104353,104449]" dest="expression_statement [42171,42267]"/>
  <match src="binary_expression [49136,49159]" dest="binary_expression [69985,70006]"/>
  <match src="assignment_expression [102007,102110]" dest="assignment_expression [39825,39928]"/>
  <match src="type_name [36047,36054]" dest="type_name [51719,51726]"/>
  <match src="identifier: b [10196,10197]" dest="identifier: b [10295,10296]"/>
  <match src="member_expression [103219,103252]" dest="member_expression [41037,41070]"/>
  <match src="call_expression [33560,33586]" dest="call_expression [49232,49258]"/>
  <match src="call_argument [82568,82578]" dest="call_argument [71922,71932]"/>
  <match src="identifier: D256 [10017,10021]" dest="identifier: D256 [10116,10120]"/>
  <match src="visibility [44463,44470]" dest="visibility [13717,13724]"/>
  <match src="identifier: that [29813,29817]" dest="identifier: that [45485,45489]"/>
  <match src="identifier: owner [94861,94866]" dest="identifier: owner [32647,32652]"/>
  <match src=",: , [106700,106701]" dest=",: , [68629,68630]"/>
  <match src="identifier: amount0 [53677,53684]" dest="identifier: amount0 [20671,20678]"/>
  <match src="uint256: uint256 [93989,93996]" dest="uint256: uint256 [31775,31782]"/>
  <match src="type_name [85930,85937]" dest="type_name [73237,73244]"/>
  <match src="=: = [44133,44134]" dest="=: = [13387,13388]"/>
  <match src=",: , [51812,51813]" dest=",: , [60607,60608]"/>
  <match src="(: ( [36937,36938]" dest="(: ( [52609,52610]"/>
  <match src="[: [ [94398,94399]" dest="[: [ [32184,32185]"/>
  <match src="primitive_type [96877,96884]" dest="primitive_type [34663,34670]"/>
  <match src="visibility [98922,98930]" dest="visibility [36740,36748]"/>
  <match src="visibility [9163,9171]" dest="visibility [9262,9270]"/>
  <match src="(: ( [93714,93715]" dest="(: ( [31500,31501]"/>
  <match src="(: ( [93793,93794]" dest="(: ( [31579,31580]"/>
  <match src="identifier: div [3291,3294]" dest="identifier: div [3345,3348]"/>
  <match src="address: address [93794,93801]" dest="address: address [31580,31587]"/>
  <match src="assignment_expression [101589,101684]" dest="assignment_expression [39407,39502]"/>
  <match src="{: { [9423,9424]" dest="{: { [9522,9523]"/>
  <match src="uint: uint [53672,53676]" dest="uint: uint [20666,20670]"/>
  <match src="identifier: amount0In [53854,53863]" dest="identifier: amount0In [20848,20857]"/>
  <match src="member_expression [9836,9843]" dest="member_expression [9935,9942]"/>
  <match src="(: ( [54143,54144]" dest="(: ( [21137,21138]"/>
  <match src="{: { [62557,62558]" dest="{: { [26426,26427]"/>
  <match src="function_body [93978,94171]" dest="function_body [31764,31957]"/>
  <match src="comment: /**      * @dev Sets the implementation address of the proxy.      * @param newImplementation Address of the new implementation.      */ [90648,90787]" dest="comment: /**      * @dev Sets the implementation address of the proxy.      * @param newImplementation Address of the new implementation.      */ [75720,75859]"/>
  <match src="array_access [101205,101229]" dest="array_access [39023,39047]"/>
  <match src=",: , [52660,52661]" dest=",: , [19654,19655]"/>
  <match src="call_argument [25855,25888]" dest="call_argument [77757,77786]"/>
  <match src="state_mutability [7982,7986]" dest="state_mutability [8081,8085]"/>
  <match src="identifier: that [106450,106454]" dest="identifier: that [68379,68383]"/>
  <match src="return_type_definition [67567,67584]" dest="return_type_definition [62116,62133]"/>
  <match src="identifier: value [82050,82055]" dest="identifier: value [72161,72166]"/>
  <match src="identifier: stringify [32346,32355]" dest="identifier: stringify [48018,48027]"/>
  <match src="comment: /*     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [73924,74577]" dest="comment: /*     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [67252,67905]"/>
  <match src="variable_declaration_statement [34633,34656]" dest="variable_declaration_statement [50305,50328]"/>
  <match src="is: is [79759,79761]" dest="is: is [69488,69490]"/>
  <match src="identifier: account [106478,106485]" dest="identifier: account [68407,68414]"/>
  <match src="uint256: uint256 [69816,69823]" dest="uint256: uint256 [65034,65041]"/>
  <match src="address: address [97289,97296]" dest="address: address [35075,35082]"/>
  <match src=".: . [99413,99414]" dest=".: . [37231,37232]"/>
  <match src="state_mutability [6913,6917]" dest="state_mutability [7012,7016]"/>
  <match src="identifier: balance [100674,100681]" dest="identifier: balance [38492,38499]"/>
  <match src="call_argument [7176,7180]" dest="call_argument [7275,7279]"/>
  <match src="if_statement [38047,38128]" dest="if_statement [53719,53800]"/>
  <match src="identifier: owner [94773,94778]" dest="identifier: owner [32559,32564]"/>
  <match src="call_expression [9670,9707]" dest="call_expression [9769,9806]"/>
  <match src="visibility [104527,104535]" dest="visibility [42345,42353]"/>
  <match src="): ) [31934,31935]" dest="): ) [47606,47607]"/>
  <match src="string [84564,84576]" dest="string [71979,72015]"/>
  <match src="identifier: z [36718,36719]" dest="identifier: z [52390,52391]"/>
  <match src="primitive_type [7726,7732]" dest="primitive_type [7825,7831]"/>
  <match src="identifier: balance [99712,99719]" dest="identifier: balance [37530,37537]"/>
  <match src="type_name [54200,54207]" dest="type_name [21194,21201]"/>
  <match src="call_expression [95362,95447]" dest="call_expression [33148,33233]"/>
  <match src="=&gt;: =&gt; [88069,88071]" dest="=&gt;: =&gt; [28198,28200]"/>
  <match src="function: function [96723,96731]" dest="function: function [34509,34517]"/>
  <match src="member_expression [104585,104602]" dest="member_expression [42403,42420]"/>
  <match src="primitive_type [953,960]" dest="primitive_type [1007,1014]"/>
  <match src="(: ( [6987,6988]" dest="(: ( [7086,7087]"/>
  <match src="uint256: uint256 [69841,69848]" dest="uint256: uint256 [65182,65189]"/>
  <match src="identifier: current [102922,102929]" dest="identifier: current [40740,40747]"/>
  <match src="state_mutability [3940,3944]" dest="state_mutability [3994,3998]"/>
  <match src="): ) [88683,88684]" dest="): ) [28812,28813]"/>
  <match src="call_argument [32434,32442]" dest="call_argument [48106,48114]"/>
  <match src="{: { [44844,44845]" dest="{: { [14098,14099]"/>
  <match src="return_type_definition [97471,97485]" dest="return_type_definition [35257,35271]"/>
  <match src="identifier: totalRewardedWithPhantom [81494,81518]" dest="identifier: endsAfter [79200,79209]"/>
  <match src="{: { [97202,97203]" dest="{: { [34988,34989]"/>
  <match src="expression_statement [83863,83878]" dest="expression_statement [58835,58850]"/>
  <match src="event_definition [80435,80525]" dest="event_definition [77095,77201]"/>
  <match src="uint256: uint256 [70131,70138]" dest="uint256: uint256 [65240,65247]"/>
  <match src="address: address [97748,97755]" dest="address: address [35534,35541]"/>
  <match src="[: [ [102020,102021]" dest="[: [ [39838,39839]"/>
  <match src="(: ( [12617,12618]" dest="(: ( [22293,22294]"/>
  <match src="identifier: lessThanOrEqualTo [10293,10310]" dest="identifier: lessThanOrEqualTo [10392,10409]"/>
  <match src=".: . [11169,11170]" dest=".: . [11268,11269]"/>
  <match src="variable_declaration_statement [36047,36074]" dest="variable_declaration_statement [51719,51746]"/>
  <match src="member_expression [82487,82497]" dest="member_expression [71393,71403]"/>
  <match src="(: ( [52974,52975]" dest="(: ( [19968,19969]"/>
  <match src="=: = [103196,103197]" dest="=: = [41014,41015]"/>
  <match src="address: address [53717,53724]" dest="address: address [20711,20718]"/>
  <match src="type_name [54588,54595]" dest="type_name [21582,21589]"/>
  <match src="identifier: shift [36568,36573]" dest="identifier: shift [52240,52245]"/>
  <match src="returns: returns [7551,7558]" dest="returns: returns [7650,7657]"/>
  <match src="): ) [10114,10115]" dest="): ) [10213,10214]"/>
  <match src="type_name [90100,90107]" dest="type_name [75172,75179]"/>
  <match src="(: ( [7026,7027]" dest="(: ( [7125,7126]"/>
  <match src="identifier: i [34497,34498]" dest="identifier: i [50169,50170]"/>
  <match src="uint256: uint256 [104511,104518]" dest="uint256: uint256 [42329,42336]"/>
  <match src="visibility [44246,44253]" dest="visibility [13500,13507]"/>
  <match src="}: } [82063,82064]" dest="}: } [71200,71201]"/>
  <match src="pure: pure [939,943]" dest="pure: pure [993,997]"/>
  <match src="): ) [14588,14589]" dest="): ) [24264,24265]"/>
  <match src="assignment_expression [37301,37340]" dest="assignment_expression [52973,53012]"/>
  <match src=".: . [88624,88625]" dest=".: . [28753,28754]"/>
  <match src="identifier: D256 [9319,9323]" dest="identifier: D256 [9418,9422]"/>
  <match src="identifier: _state [96808,96814]" dest="identifier: _state [34594,34600]"/>
  <match src="uint256: uint256 [67576,67583]" dest="uint256: uint256 [62125,62132]"/>
  <match src=",: , [28808,28809]" dest=",: , [44480,44481]"/>
  <match src="array_access [96664,96707]" dest="array_access [34450,34493]"/>
  <match src="call_expression [103538,103592]" dest="call_expression [41356,41410]"/>
  <match src="address: address [14555,14562]" dest="address: address [24231,24238]"/>
  <match src="call_expression [108254,108262]" dest="call_expression [55573,55581]"/>
  <match src=".: . [99811,99812]" dest=".: . [37629,37630]"/>
  <match src="call_expression [102146,102188]" dest="call_expression [39964,40006]"/>
  <match src="type_cast_expression [36280,36303]" dest="type_cast_expression [51952,51975]"/>
  <match src="call_argument [7857,7868]" dest="call_argument [7956,7967]"/>
  <match src="uint256: uint256 [46375,46382]" dest="uint256: uint256 [15629,15636]"/>
  <match src=",: , [82266,82267]" dest=",: , [80307,80308]"/>
  <match src="binary_expression [73652,73678]" dest="binary_expression [80039,80060]"/>
  <match src="identifier: a [7045,7046]" dest="identifier: a [7144,7145]"/>
  <match src="identifier: b [8336,8337]" dest="identifier: b [8435,8436]"/>
  <match src="primitive_type [44706,44713]" dest="primitive_type [13960,13967]"/>
  <match src="type_name [54441,54445]" dest="type_name [21435,21439]"/>
  <match src="}: } [35921,35922]" dest="}: } [51593,51594]"/>
  <match src="=: = [100405,100406]" dest="=: = [38223,38224]"/>
  <match src="identifier: D256 [8704,8708]" dest="identifier: D256 [8803,8807]"/>
  <match src="type_name [99341,99347]" dest="type_name [37159,37165]"/>
  <match src="identifier: Unbond [82885,82891]" dest="identifier: Unbond [71636,71642]"/>
  <match src="primitive_type [35529,35536]" dest="primitive_type [51201,51208]"/>
  <match src="(: ( [102933,102934]" dest="(: ( [40751,40752]"/>
  <match src="state_mutability [45292,45296]" dest="state_mutability [14546,14550]"/>
  <match src=".: . [99421,99422]" dest=".: . [37239,37240]"/>
  <match src="type_cast_expression [48365,48378]" dest="type_cast_expression [55091,55104]"/>
  <match src="uint256: uint256 [87651,87658]" dest="uint256: uint256 [27780,27787]"/>
  <match src="array_access [35765,35772]" dest="array_access [51437,51444]"/>
  <match src="visibility [92654,92662]" dest="visibility [30440,30448]"/>
  <match src="(: ( [97054,97055]" dest="(: ( [34840,34841]"/>
  <match src="function_definition [52804,52854]" dest="function_definition [19798,19848]"/>
  <match src="type_name [93651,93658]" dest="type_name [31437,31444]"/>
  <match src="address: address [104276,104283]" dest="address: address [42094,42101]"/>
  <match src="return: return [46152,46158]" dest="return: return [15406,15412]"/>
  <match src="primitive_type [12774,12781]" dest="primitive_type [22450,22457]"/>
  <match src="(: ( [51159,51160]" dest="(: ( [54767,54768]"/>
  <match src="type_name [87793,87800]" dest="type_name [27922,27929]"/>
  <match src="state_variable_declaration [88732,88753]" dest="state_variable_declaration [28861,28882]"/>
  <match src="identifier: r [53606,53607]" dest="identifier: r [20600,20601]"/>
  <match src="type_name [53092,53099]" dest="type_name [20086,20093]"/>
  <match src="variable_declaration [82156,82179]" dest="variable_declaration [70788,70803]"/>
  <match src="identifier: _state [102259,102265]" dest="identifier: _state [40077,40083]"/>
  <match src="identifier: balanceCheck [84189,84201]" dest="identifier: mintToDAO [58874,58883]"/>
  <match src="identifier: compareTo [10246,10255]" dest="identifier: compareTo [10345,10354]"/>
  <match src="call_expression [103219,103273]" dest="call_expression [41037,41091]"/>
  <match src="]: ] [96036,96037]" dest="]: ] [33822,33823]"/>
  <match src="binary_expression [106192,106227]" dest="binary_expression [68121,68156]"/>
  <match src="private: private [43258,43265]" dest="private: private [12512,12519]"/>
  <match src="(: ( [78497,78498]" dest="(: ( [81977,81978]"/>
  <match src="[: [ [34604,34605]" dest="[: [ [50276,50277]"/>
  <match src="primitive_type [100467,100474]" dest="primitive_type [38285,38292]"/>
  <match src="identifier: _state [93572,93578]" dest="identifier: _state [31358,31364]"/>
  <match src="user_defined_type [88072,88076]" dest="user_defined_type [28201,28205]"/>
  <match src="identifier: decrementBalanceOfStaged [80935,80959]" dest="identifier: decrementBalanceOfStaged [70532,70556]"/>
  <match src="event_paramater [80303,80316]" dest="event_paramater [69859,69872]"/>
  <match src="state_variable_declaration [42945,42999]" dest="state_variable_declaration [12199,12253]"/>
  <match src="state_mutability [33333,33337]" dest="state_mutability [49005,49009]"/>
  <match src="identifier: Require [106165,106172]" dest="identifier: Require [68094,68101]"/>
  <match src=",: , [21226,21227]" dest=",: , [55985,55986]"/>
  <match src="uint256: uint256 [43250,43257]" dest="uint256: uint256 [12504,12511]"/>
  <match src="address: address [102407,102414]" dest="address: address [40225,40232]"/>
  <match src="(: ( [104275,104276]" dest="(: ( [42093,42094]"/>
  <match src="primitive_type [88305,88312]" dest="primitive_type [28434,28441]"/>
  <match src="identifier: period [43442,43448]" dest="identifier: period [12696,12702]"/>
  <match src="): ) [99506,99507]" dest="): ) [37324,37325]"/>
  <match src="user_defined_type [7277,7281]" dest="user_defined_type [7376,7380]"/>
  <match src="internal: internal [46915,46923]" dest="internal: internal [16169,16177]"/>
  <match src="): ) [96644,96645]" dest="): ) [34430,34431]"/>
  <match src="comment: // 12 [44378,44383]" dest="comment: // 12 [13632,13637]"/>
  <match src="identifier: _state [99942,99948]" dest="identifier: _state [37760,37766]"/>
  <match src="array_access [102007,102027]" dest="array_access [39825,39845]"/>
  <match src=",: , [102101,102102]" dest=",: , [39919,39920]"/>
  <match src="]: ] [103175,103176]" dest="]: ] [40993,40994]"/>
  <match src="parameter [101449,101463]" dest="parameter [39267,39281]"/>
  <match src=",: , [68214,68215]" dest=",: , [79543,79544]"/>
  <match src="view: view [72233,72237]" dest="view: view [80662,80666]"/>
  <match src="uint256: uint256 [1848,1855]" dest="uint256: uint256 [1902,1909]"/>
  <match src="user_defined_type [8905,8909]" dest="user_defined_type [9004,9008]"/>
  <match src="(: ( [53060,53061]" dest="(: ( [20054,20055]"/>
  <match src="parameter [10311,10327]" dest="parameter [10410,10426]"/>
  <match src="member_expression [97220,97255]" dest="member_expression [35006,35041]"/>
  <match src=".: . [66394,66395]" dest=".: . [65350,65351]"/>
  <match src="type_name [91008,91015]" dest="type_name [76080,76087]"/>
  <match src="call_argument [72175,72191]" dest="call_argument [58300,58313]"/>
  <match src="type_name [10743,10750]" dest="type_name [10842,10849]"/>
  <match src="return: return [46958,46964]" dest="return: return [16212,16218]"/>
  <match src="function_body [94990,95036]" dest="function_body [32776,32822]"/>
  <match src="indexed: indexed [52547,52554]" dest="indexed: indexed [19541,19548]"/>
  <match src="public: public [71978,71984]" dest="public: public [61929,61935]"/>
  <match src="{: { [72008,72009]" dest="{: { [61959,61960]"/>
  <match src="public: public [94797,94803]" dest="public: public [32583,32589]"/>
  <match src="type_name [9742,9746]" dest="type_name [9841,9845]"/>
  <match src="uint256: uint256 [1970,1977]" dest="uint256: uint256 [2024,2031]"/>
  <match src="member_expression [93349,93363]" dest="member_expression [31135,31149]"/>
  <match src="array_access [94630,94665]" dest="array_access [32416,32451]"/>
  <match src="expression_statement [83778,83849]" dest="expression_statement [62519,62561]"/>
  <match src="primitive_type [31101,31105]" dest="primitive_type [46773,46777]"/>
  <match src="[: [ [104564,104565]" dest="[: [ [42382,42383]"/>
  <match src="expression_statement [103003,103049]" dest="expression_statement [40821,40867]"/>
  <match src="(: ( [77019,77020]" dest="(: ( [60778,60779]"/>
  <match src="identifier: balanceOfPhantom [82470,82486]" dest="identifier: balanceOf [71383,71392]"/>
  <match src="pure: pure [31955,31959]" dest="pure: pure [47627,47631]"/>
  <match src="): ) [81335,81336]" dest="): ) [59364,59365]"/>
  <match src="return_statement [9815,9844]" dest="return_statement [9914,9943]"/>
  <match src="uint: uint [54441,54445]" dest="uint: uint [21435,21439]"/>
  <match src="function_definition [54215,54265]" dest="function_definition [21209,21259]"/>
  <match src=".: . [81920,81921]" dest=".: . [71072,71073]"/>
  <match src="address: address [102392,102399]" dest="address: address [40210,40217]"/>
  <match src="block_statement [32727,33129]" dest="block_statement [48399,48801]"/>
  <match src="member_expression [106641,106653]" dest="member_expression [68570,68582]"/>
  <match src="primitive_type [99341,99347]" dest="primitive_type [37159,37165]"/>
  <match src="(: ( [51496,51497]" dest="(: ( [63989,63990]"/>
  <match src="(: ( [31292,31293]" dest="(: ( [46964,46965]"/>
  <match src="identifier: balanceCheck [81028,81040]" dest="identifier: balanceCheck [55872,55884]"/>
  <match src="identifier: account [101221,101228]" dest="identifier: account [39039,39046]"/>
  <match src="struct_member [88094,88111]" dest="struct_member [28223,28240]"/>
  <match src="&gt;&gt;: &gt;&gt; [36720,36722]" dest="&gt;&gt;: &gt;&gt; [52392,52394]"/>
  <match src="identifier: must [31981,31985]" dest="identifier: must [47653,47657]"/>
  <match src=".: . [105261,105262]" dest=".: . [43079,43080]"/>
  <match src="comment: // 6 epochs [43890,43901]" dest="comment: // 6 epochs [13144,13155]"/>
  <match src="(: ( [20395,20396]" dest="(: ( [63484,63485]"/>
  <match src="parameter [39648,39663]" dest="parameter [17182,17201]"/>
  <match src="member_expression [8510,8520]" dest="member_expression [8609,8619]"/>
  <match src="identifier: accounts [102665,102673]" dest="identifier: accounts [40483,40491]"/>
  <match src="identifier: from [14822,14826]" dest="identifier: from [24498,24502]"/>
  <match src="state_mutability [13433,13437]" dest="state_mutability [23109,23113]"/>
  <match src="(: ( [84201,84202]" dest="(: ( [58883,58884]"/>
  <match src="[: [ [96030,96031]" dest="[: [ [33816,33817]"/>
  <match src="identifier: Vote [87854,87858]" dest="identifier: Vote [27983,27987]"/>
  <match src="return: return [9649,9655]" dest="return: return [9748,9754]"/>
  <match src="function_body [65510,65689]" dest="function_body [66915,67204]"/>
  <match src=",: , [33177,33178]" dest=",: , [48849,48850]"/>
  <match src="new: new [34957,34960]" dest="new: new [50629,50632]"/>
  <match src="{: { [100076,100077]" dest="{: { [37894,37895]"/>
  <match src="}: } [88117,88118]" dest="}: } [28246,28247]"/>
  <match src="type_cast_expression [37272,37289]" dest="type_cast_expression [52944,52961]"/>
  <match src="call_argument [9487,9491]" dest="call_argument [9586,9590]"/>
  <match src="visibility [99785,99793]" dest="visibility [37603,37611]"/>
  <match src="identifier: FILE [106249,106253]" dest="identifier: FILE [68178,68182]"/>
  <match src="): ) [9365,9366]" dest="): ) [9464,9465]"/>
  <match src="type_name [100539,100546]" dest="type_name [38357,38364]"/>
  <match src="returns: returns [92786,92793]" dest="returns: returns [30572,30579]"/>
  <match src="identifier: input [35967,35972]" dest="identifier: input [51639,51644]"/>
  <match src="uint256: uint256 [95954,95961]" dest="uint256: uint256 [33740,33747]"/>
  <match src="call_argument [82637,82649]" dest="call_argument [82644,82650]"/>
  <match src="call_expression [83721,83767]" dest="call_expression [62571,62629]"/>
  <match src="function_body [96307,96360]" dest="function_body [34093,34146]"/>
  <match src="modifier: modifier [106386,106394]" dest="modifier: modifier [68315,68323]"/>
  <match src="identifier: bonded [87776,87782]" dest="identifier: bonded [27905,27911]"/>
  <match src="event_definition [80148,80203]" dest="event_definition [69663,69718]"/>
  <match src="return_statement [94359,94406]" dest="return_statement [32145,32192]"/>
  <match src="call_argument [30403,30409]" dest="call_argument [46075,46081]"/>
  <match src="is: is [50068,50070]" dest="is: is [25507,25509]"/>
  <match src="identifier: dollarAmount [78005,78017]" dest="identifier: dollarAmount [62093,62105]"/>
  <match src="event_paramater [53741,53753]" dest="event_paramater [20735,20747]"/>
  <match src="identifier: D256 [65491,65495]" dest="identifier: D256 [18759,18763]"/>
  <match src="identifier: that [83049,83053]" dest="identifier: that [58486,58490]"/>
  <match src="identifier: _state [99914,99920]" dest="identifier: _state [37732,37738]"/>
  <match src="): ) [92325,92326]" dest="): ) [30111,30112]"/>
  <match src="string_literal [82300,82329]" dest="string_literal [80341,80367]"/>
  <match src="function_body [7578,7648]" dest="function_body [7677,7747]"/>
  <match src="=: = [36816,36817]" dest="=: = [52488,52489]"/>
  <match src="=: = [102509,102510]" dest="=: = [40327,40328]"/>
  <match src="address: address [97440,97447]" dest="address: address [35226,35233]"/>
  <match src="call_expression [21938,22006]" dest="call_expression [62922,63025]"/>
  <match src="view: view [93094,93098]" dest="view: view [30880,30884]"/>
  <match src="parameter [52783,52796]" dest="parameter [19777,19790]"/>
  <match src="yul_function_call [97850,97861]" dest="yul_function_call [35636,35647]"/>
  <match src="string [83119,83146]" dest="string [58556,58581]"/>
  <match src="function_definition [96995,97126]" dest="function_definition [34781,34912]"/>
  <match src="primitive_type [104711,104717]" dest="primitive_type [42529,42535]"/>
  <match src="call_argument [80779,80789]" dest="call_argument [70367,70377]"/>
  <match src="assignment_expression [8581,8603]" dest="assignment_expression [8680,8702]"/>
  <match src="state_mutability [92987,92991]" dest="state_mutability [30773,30777]"/>
  <match src="identifier: value [6975,6980]" dest="identifier: value [7074,7079]"/>
  <match src="(: ( [52846,52847]" dest="(: ( [19840,19841]"/>
  <match src=".: . [97673,97674]" dest=".: . [35459,35460]"/>
  <match src="identifier: dollar [107938,107944]" dest="identifier: dollar [54821,54827]"/>
  <match src="user_defined_type [45727,45739]" dest="user_defined_type [14981,14993]"/>
  <match src="identifier: accounts [94515,94523]" dest="identifier: accounts [32301,32309]"/>
  <match src="(: ( [32200,32201]" dest="(: ( [47872,47873]"/>
  <match src="identifier: coupons [101735,101742]" dest="identifier: coupons [39553,39560]"/>
  <match src="address: address [90820,90827]" dest="address: address [75892,75899]"/>
  <match src="member_expression [81803,81813]" dest="member_expression [71567,71577]"/>
  <match src="function_definition [45666,45822]" dest="function_definition [14920,15076]"/>
  <match src="identifier: value [11160,11165]" dest="identifier: value [11259,11264]"/>
  <match src="type_name [13049,13056]" dest="type_name [22725,22732]"/>
  <match src=",: , [16319,16320]" dest=",: , [60112,60113]"/>
  <match src=".: . [9030,9031]" dest=".: . [9129,9130]"/>
  <match src=".: . [93686,93687]" dest=".: . [31472,31473]"/>
  <match src="{: { [94057,94058]" dest="{: { [31843,31844]"/>
  <match src="function_definition [54814,54849]" dest="function_definition [21808,21843]"/>
  <match src="identifier: LibEIP712 [48290,48299]" dest="identifier: transferFrom [55069,55081]"/>
  <match src="function_definition [53223,53307]" dest="function_definition [20217,20301]"/>
  <match src="member_expression [102259,102294]" dest="member_expression [40077,40112]"/>
  <match src="primitive_type [53545,53552]" dest="primitive_type [20539,20546]"/>
  <match src="call_expression [81453,81473]" dest="call_expression [70755,70775]"/>
  <match src="(: ( [53716,53717]" dest="(: ( [20710,20711]"/>
  <match src=",: , [31492,31493]" dest=",: , [47164,47165]"/>
  <match src="{: { [7400,7401]" dest="{: { [7499,7500]"/>
  <match src="[: [ [103016,103017]" dest="[: [ [40834,40835]"/>
  <match src="call_argument [106469,106510]" dest="call_argument [68398,68439]"/>
  <match src="string: string [31311,31317]" dest="string: string [46983,46989]"/>
  <match src="array_access [103156,103176]" dest="array_access [40974,40994]"/>
  <match src="identifier: newClaimable [82927,82939]" dest="identifier: staged [71678,71684]"/>
  <match src="primitive_type [100539,100546]" dest="primitive_type [38357,38364]"/>
  <match src="type_name [100029,100036]" dest="type_name [37847,37854]"/>
  <match src="identifier: coupons [94391,94398]" dest="identifier: coupons [32177,32184]"/>
  <match src="}: } [87490,87491]" dest="}: } [27619,27620]"/>
  <match src="call_expression [102297,102344]" dest="call_expression [40115,40162]"/>
  <match src="returns: returns [9187,9194]" dest="returns: returns [9286,9293]"/>
  <match src="}: } [99112,99113]" dest="}: } [36930,36931]"/>
  <match src=",: , [31847,31848]" dest=",: , [47519,47520]"/>
  <match src="type_name [50099,50106]" dest="type_name [25538,25545]"/>
  <match src="identifier: i [37472,37473]" dest="identifier: i [53144,53145]"/>
  <match src="identifier: D256 [8799,8803]" dest="identifier: D256 [8898,8902]"/>
  <match src="(: ( [65660,65661]" dest="(: ( [67158,67159]"/>
  <match src="call_expression [36676,36699]" dest="call_expression [52348,52371]"/>
  <match src="parameter [31790,31799]" dest="parameter [47462,47471]"/>
  <match src="(: ( [44875,44876]" dest="(: ( [14129,14130]"/>
  <match src="state_mutability [96142,96146]" dest="state_mutability [33928,33932]"/>
  <match src="call_expression [23908,23934]" dest="call_expression [55347,55381]"/>
  <match src="assignment_expression [99914,99979]" dest="assignment_expression [37732,37797]"/>
  <match src="comment: // 12 epochs fluid [44139,44157]" dest="comment: // 12 epochs fluid [13393,13411]"/>
  <match src="call_expression [73351,73376]" dest="call_expression [61526,61540]"/>
  <match src="string [92145,92169]" dest="string [29931,29955]"/>
  <match src="}: } [95920,95921]" dest="}: } [33706,33707]"/>
  <match src=",: , [10111,10112]" dest=",: , [10210,10211]"/>
  <match src="visibility [85890,85898]" dest="visibility [73197,73205]"/>
  <match src="member_expression [45610,45622]" dest="member_expression [14864,14876]"/>
  <match src="(: ( [81334,81335]" dest="(: ( [59363,59364]"/>
  <match src=",: , [7695,7696]" dest=",: , [7794,7795]"/>
  <match src="{: { [103470,103471]" dest="{: { [41288,41289]"/>
  <match src="=: = [82180,82181]" dest="=: = [71338,71339]"/>
  <match src=",: , [100823,100824]" dest=",: , [38641,38642]"/>
  <match src="struct_declaration [43353,43456]" dest="struct_declaration [12607,12710]"/>
  <match src="]: ] [100351,100352]" dest="]: ] [38169,38170]"/>
  <match src="type_name [53899,53903]" dest="type_name [20893,20897]"/>
  <match src="identifier: account [23918,23925]" dest="identifier: account [55365,55372]"/>
  <match src="(: ( [96428,96429]" dest="(: ( [34214,34215]"/>
  <match src="call_expression [72137,72145]" dest="call_expression [58245,58253]"/>
  <match src="{: { [106431,106432]" dest="{: { [68360,68361]"/>
  <match src="identifier: D256 [46532,46536]" dest="identifier: D256 [15786,15790]"/>
  <match src=",: , [30881,30882]" dest=",: , [46553,46554]"/>
  <match src="member_expression [105122,105137]" dest="member_expression [42940,42955]"/>
  <match src="}: } [2015,2016]" dest="}: } [2069,2070]"/>
  <match src="==: == [81602,81604]" dest="==: == [70820,70822]"/>
  <match src="/=: /= [35874,35876]" dest="/=: /= [51546,51548]"/>
  <match src="parameter [101805,101820]" dest="parameter [39623,39638]"/>
  <match src="): ) [32674,32675]" dest="): ) [48346,48347]"/>
  <match src="primitive_type [38085,38089]" dest="primitive_type [53757,53761]"/>
  <match src="): ) [46607,46608]" dest="): ) [15861,15862]"/>
  <match src="unary_expression [30653,30658]" dest="unary_expression [46325,46330]"/>
  <match src="variable_declaration_statement [81567,81766]" dest="variable_declaration_statement [70788,70946]"/>
  <match src="(: ( [33811,33812]" dest="(: ( [49483,49484]"/>
  <match src="(: ( [10255,10256]" dest="(: ( [10354,10355]"/>
  <match src=".: . [104150,104151]" dest=".: . [41968,41969]"/>
  <match src="member_expression [101047,101068]" dest="member_expression [38865,38886]"/>
  <match src="identifier: that [83311,83315]" dest="identifier: that [77499,77503]"/>
  <match src="call_expression [83694,83707]" dest="call_expression [71872,71885]"/>
  <match src=",: , [33279,33280]" dest=",: , [48951,48952]"/>
  <match src="(: ( [54559,54560]" dest="(: ( [21553,21554]"/>
  <match src="}: } [34846,34847]" dest="}: } [50518,50519]"/>
  <match src="identifier: _state [102658,102664]" dest="identifier: _state [40476,40482]"/>
  <match src="call_expression [28984,29159]" dest="call_expression [44656,44831]"/>
  <match src=".: . [80963,80964]" dest=".: . [70560,70561]"/>
  <match src="): ) [8012,8013]" dest="): ) [8111,8112]"/>
  <match src="visibility [14590,14598]" dest="visibility [24266,24274]"/>
  <match src="function_body [101884,102196]" dest="function_body [39702,40014]"/>
  <match src="user_defined_type [87793,87800]" dest="user_defined_type [27922,27929]"/>
  <match src=".: . [105146,105147]" dest=".: . [42964,42965]"/>
  <match src="private: private [16399,16406]" dest="private: private [66624,66631]"/>
  <match src=".: . [103810,103811]" dest=".: . [41628,41629]"/>
  <match src=",: , [31439,31440]" dest=",: , [47111,47112]"/>
  <match src="): ) [92125,92126]" dest="): ) [29911,29912]"/>
  <match src="): ) [65537,65538]" dest="): ) [67123,67124]"/>
  <match src="variable_declaration [83458,83474]" dest="variable_declaration [61317,61339]"/>
  <match src="primitive_type [93216,93223]" dest="primitive_type [31002,31009]"/>
  <match src="identifier: Status [106221,106227]" dest="identifier: Status [68150,68156]"/>
  <match src="identifier: reason [102630,102636]" dest="identifier: reason [40448,40454]"/>
  <match src="augmented_assignment_expression [35313,35320]" dest="augmented_assignment_expression [50985,50992]"/>
  <match src="type_name [80352,80359]" dest="type_name [69735,69742]"/>
  <match src="(: ( [31356,31357]" dest="(: ( [47028,47029]"/>
  <match src="member_expression [104392,104432]" dest="member_expression [42210,42250]"/>
  <match src="uint256: uint256 [73173,73180]" dest="uint256: uint256 [65971,65978]"/>
  <match src="type_name [88462,88474]" dest="type_name [28591,28603]"/>
  <match src="call_argument [19816,19855]" dest="call_argument [71500,71536]"/>
  <match src="type_cast_expression [28955,29178]" dest="type_cast_expression [44627,44850]"/>
  <match src="block_statement [103470,103503]" dest="block_statement [41288,41321]"/>
  <match src="identifier: FILE [82281,82285]" dest="identifier: FILE [80322,80326]"/>
  <match src="address: address [20412,20419]" dest="address: address [63501,63508]"/>
  <match src="function_body [93117,93164]" dest="function_body [30903,30950]"/>
  <match src="{: { [35091,35092]" dest="{: { [50763,50764]"/>
  <match src="(: ( [29128,29129]" dest="(: ( [44800,44801]"/>
  <match src="type_name [92224,92230]" dest="type_name [30010,30016]"/>
  <match src="public: public [97600,97606]" dest="public: public [35386,35392]"/>
  <match src="call_argument [106268,106289]" dest="call_argument [68197,68218]"/>
  <match src="address: address [14828,14835]" dest="address: address [24504,24511]"/>
  <match src="): ) [102935,102936]" dest="): ) [40753,40754]"/>
  <match src="identifier: stringifyTruncated [31383,31401]" dest="identifier: stringifyTruncated [47055,47073]"/>
  <match src="variable_declaration [8477,8493]" dest="variable_declaration [8576,8592]"/>
  <match src="primitive_type [20396,20403]" dest="primitive_type [63485,63492]"/>
  <match src="function: function [21129,21137]" dest="function: function [55902,55910]"/>
  <match src="pure: pure [35053,35057]" dest="pure: pure [50725,50729]"/>
  <match src="call_expression [95147,95175]" dest="call_expression [32933,32961]"/>
  <match src="call_expression [49109,49218]" dest="call_expression [69958,70072]"/>
  <match src="pure: pure [10841,10845]" dest="pure: pure [10940,10944]"/>
  <match src=".: . [103252,103253]" dest=".: . [41070,41071]"/>
  <match src="string [22753,22789]" dest="string [63274,63318]"/>
  <match src="return_type_definition [85904,85918]" dest="return_type_definition [73211,73225]"/>
  <match src="identifier: msg [82487,82490]" dest="identifier: msg [71393,71396]"/>
  <match src="identifier: candidate [96885,96894]" dest="identifier: candidate [34671,34680]"/>
  <match src="function_definition [13012,13089]" dest="function_definition [22688,22765]"/>
  <match src="identifier: supply [100398,100404]" dest="identifier: supply [38216,38222]"/>
  <match src="event_definition [52524,52599]" dest="event_definition [19518,19593]"/>
  <match src="parameter [34030,34043]" dest="parameter [49702,49715]"/>
  <match src="identifier: D256 [8001,8005]" dest="identifier: D256 [8100,8104]"/>
  <match src="expression_statement [8581,8604]" dest="expression_statement [8680,8703]"/>
  <match src="(: ( [96494,96495]" dest="(: ( [34280,34281]"/>
  <match src="primitive_type [47043,47050]" dest="primitive_type [16297,16304]"/>
  <match src="(: ( [82502,82503]" dest="(: ( [71382,71383]"/>
  <match src="call_argument [31383,31407]" dest="call_argument [47055,47079]"/>
  <match src="}: } [94730,94731]" dest="}: } [32516,32517]"/>
  <match src="(: ( [53168,53169]" dest="(: ( [20162,20163]"/>
  <match src="primitive_type [1910,1917]" dest="primitive_type [1964,1971]"/>
  <match src="call_expression [26087,26151]" dest="call_expression [78544,78614]"/>
  <match src="member_expression [99246,99267]" dest="member_expression [37064,37085]"/>
  <match src="internal: internal [39712,39720]" dest="internal: internal [17262,17270]"/>
  <match src="): ) [99447,99448]" dest="): ) [37265,37266]"/>
  <match src="event_definition [14791,14863]" dest="event_definition [24467,24539]"/>
  <match src="}: } [104238,104239]" dest="}: } [42056,42057]"/>
  <match src="return_type_definition [45718,45747]" dest="return_type_definition [14972,15001]"/>
  <match src="uint256: uint256 [46132,46139]" dest="uint256: uint256 [15386,15393]"/>
  <match src="parameter [13083,13087]" dest="parameter [22759,22763]"/>
  <match src="return_statement [10621,10649]" dest="return_statement [10720,10748]"/>
  <match src="contract: contract [64158,64166]" dest="contract: contract [64900,64908]"/>
  <match src="comment: // https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method [55044,55128]" dest="comment: // File: contracts/dao/Setters.sol [35672,35706]"/>
  <match src="): ) [5412,5413]" dest="): ) [5466,5467]"/>
  <match src="(: ( [10732,10733]" dest="(: ( [10831,10832]"/>
  <match src="member_expression [100087,100101]" dest="member_expression [37905,37919]"/>
  <match src="uint256: uint256 [10796,10803]" dest="uint256: uint256 [10895,10902]"/>
  <match src="(: ( [95062,95063]" dest="(: ( [32848,32849]"/>
  <match src=".: . [96023,96024]" dest=".: . [33809,33810]"/>
  <match src="internal: internal [20447,20455]" dest="internal: internal [54801,54809]"/>
  <match src="identifier: b [8917,8918]" dest="identifier: b [9016,9017]"/>
  <match src="return: return [10384,10390]" dest="return: return [10483,10489]"/>
  <match src="identifier: Epoch [88619,88624]" dest="identifier: Epoch [28748,28753]"/>
  <match src="variable_declaration [36047,36056]" dest="variable_declaration [51719,51728]"/>
  <match src="identifier: reason [102181,102187]" dest="identifier: reason [39999,40005]"/>
  <match src="identifier: file [29272,29276]" dest="identifier: file [44944,44948]"/>
  <match src="unary_expression [31980,31985]" dest="unary_expression [47652,47657]"/>
  <match src="call_argument [106192,106234]" dest="call_argument [68121,68163]"/>
  <match src="identifier: _state [100614,100620]" dest="identifier: _state [38432,38438]"/>
  <match src="call_argument [81929,81934]" dest="call_argument [71081,71086]"/>
  <match src="identifier: abi [32056,32059]" dest="identifier: abi [47728,47731]"/>
  <match src="primitive_type [36047,36054]" dest="primitive_type [51719,51726]"/>
  <match src="type_name [33236,33243]" dest="type_name [48908,48915]"/>
  <match src="comment: /**      * @dev Returns the remaining number of tokens that `spender` will be      * allowed to spend on behalf of `owner` through {transferFrom}. This is      * zero by default.      *      * This value changes when {approve} or {transferFrom} are called.      */ [13097,13367]" dest="comment: /**      * @dev Returns the remaining number of tokens that `spender` will be      * allowed to spend on behalf of `owner` through {transferFrom}. This is      * zero by default.      *      * This value changes when {approve} or {transferFrom} are called.      */ [22773,23043]"/>
  <match src="=: = [102295,102296]" dest="=: = [40113,40114]"/>
  <match src="identifier: epoch [103267,103272]" dest="identifier: epoch [41085,41090]"/>
  <match src="(: ( [92794,92795]" dest="(: ( [30580,30581]"/>
  <match src="identifier: State [89585,89590]" dest="identifier: State [74657,74662]"/>
  <match src="type_name [20412,20419]" dest="type_name [63501,63508]"/>
  <match src="public: public [94960,94966]" dest="public: public [32746,32752]"/>
  <match src="private: private [106032,106039]" dest="private: private [67961,67968]"/>
  <match src="primitive_type [14828,14835]" dest="primitive_type [24504,24511]"/>
  <match src="member_expression [84457,84469]" dest="member_expression [80012,80024]"/>
  <match src=".: . [104189,104190]" dest=".: . [42007,42008]"/>
  <match src="return_type_definition [45448,45465]" dest="return_type_definition [14702,14719]"/>
  <match src="type_name [14555,14562]" dest="type_name [24231,24238]"/>
  <match src="identifier: coupons [101510,101517]" dest="identifier: coupons [39328,39335]"/>
  <match src=".: . [48994,48995]" dest=".: . [62152,62153]"/>
  <match src="primitive_type [10796,10803]" dest="primitive_type [10895,10902]"/>
  <match src="variable_declaration_statement [73324,73377]" dest="variable_declaration_statement [61503,61541]"/>
  <match src=".: . [82490,82491]" dest=".: . [71396,71397]"/>
  <match src="inheritance_specifier [16321,16327]" dest="inheritance_specifier [60114,60119]"/>
  <match src=",: , [30914,30915]" dest=",: , [46586,46587]"/>
  <match src="identifier: DEBT_RATIO_CAP [46545,46559]" dest="identifier: DEBT_RATIO_CAP [15799,15813]"/>
  <match src="parameter [37006,37018]" dest="parameter [52678,52690]"/>
  <match src="identifier: b [2641,2642]" dest="identifier: b [2695,2696]"/>
  <match src="return_type_definition [78028,78054]" dest="return_type_definition [56113,56148]"/>
  <match src=".: . [94372,94373]" dest=".: . [32158,32159]"/>
  <match src="identifier: sender [82629,82635]" dest="identifier: sender [82636,82642]"/>
  <match src="call_expression [83330,83359]" dest="call_expression [77518,77539]"/>
  <match src="identifier: Status [94586,94592]" dest="identifier: Status [32372,32378]"/>
  <match src="(: ( [34790,34791]" dest="(: ( [50462,50463]"/>
  <match src="call_argument [36210,36212]" dest="call_argument [51882,51884]"/>
  <match src="return_type_definition [54432,54446]" dest="return_type_definition [21426,21440]"/>
  <match src="return_statement [1429,1480]" dest="return_statement [1483,1534]"/>
  <match src="function: function [71954,71962]" dest="function: function [61890,61898]"/>
  <match src="(: ( [32573,32574]" dest="(: ( [48245,48246]"/>
  <match src="return_type_definition [95981,95998]" dest="return_type_definition [33767,33784]"/>
  <match src="): ) [93839,93840]" dest="): ) [31625,31626]"/>
  <match src="return_type_definition [54609,54633]" dest="return_type_definition [21603,21627]"/>
  <match src="boolean_literal [105298,105302]" dest="boolean_literal [43116,43120]"/>
  <match src="bytes32: bytes32 [32627,32634]" dest="bytes32: bytes32 [48299,48306]"/>
  <match src="=: = [983,984]" dest="=: = [1037,1038]"/>
  <match src="): ) [82339,82340]" dest="): ) [80377,80378]"/>
  <match src="bytes: bytes [37006,37011]" dest="bytes: bytes [52678,52683]"/>
  <match src="member_expression [78558,78583]" dest="member_expression [59259,59272]"/>
  <match src="member_expression [99407,99428]" dest="member_expression [37225,37246]"/>
  <match src="function_definition [96551,96715]" dest="function_definition [34337,34501]"/>
  <match src="): ) [8564,8565]" dest="): ) [8663,8664]"/>
  <match src="): ) [29050,29051]" dest="): ) [44722,44723]"/>
  <match src="expression_statement [36485,36492]" dest="expression_statement [52157,52164]"/>
  <match src="parameter [50223,50237]" dest="parameter [25662,25676]"/>
  <match src="return_type_definition [50246,50260]" dest="return_type_definition [25685,25699]"/>
  <match src="function: function [6853,6861]" dest="function: function [6952,6960]"/>
  <match src="primitive_type [83476,83483]" dest="primitive_type [66432,66439]"/>
  <match src="identifier: epoch [101518,101523]" dest="identifier: epoch [39336,39341]"/>
  <match src=".: . [96814,96815]" dest=".: . [34600,34601]"/>
  <match src="pure: pure [3250,3254]" dest="pure: pure [3304,3308]"/>
  <match src="call_argument [83348,83358]" dest="call_argument [77528,77538]"/>
  <match src="(: ( [84315,84316]" dest="(: ( [58334,58335]"/>
  <match src="uint256: uint256 [80507,80514]" dest="uint256: uint256 [77185,77192]"/>
  <match src="comment: /*     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [49386,50039]" dest="comment: /*     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [24829,25482]"/>
  <match src="parameter [9405,9416]" dest="parameter [9504,9515]"/>
  <match src="return_type_definition [46777,46806]" dest="return_type_definition [16031,16060]"/>
  <match src="type_name [105006,105013]" dest="type_name [42824,42831]"/>
  <match src="identifier: self [7931,7935]" dest="identifier: self [8030,8034]"/>
  <match src="): ) [101873,101874]" dest="): ) [39691,39692]"/>
  <match src="return_type_definition [98931,98945]" dest="return_type_definition [36749,36763]"/>
  <match src=".: . [82135,82136]" dest=".: . [71804,71805]"/>
  <match src="): ) [94553,94554]" dest="): ) [32339,32340]"/>
  <match src="(: ( [46254,46255]" dest="(: ( [15508,15509]"/>
  <match src="identifier: balance [100390,100397]" dest="identifier: balance [38208,38215]"/>
  <match src="member_expression [96664,96698]" dest="member_expression [34450,34484]"/>
  <match src="comment: /**      * @dev Storage slot with the address of the current implementation.      * This is the keccak-256 hash of &quot;eip1967.proxy.implementation&quot; subtracted by 1, and is      * validated in the constructor.      */ [89598,89816]" dest="comment: /**      * @dev Storage slot with the address of the current implementation.      * This is the keccak-256 hash of &quot;eip1967.proxy.implementation&quot; subtracted by 1, and is      * validated in the constructor.      */ [74670,74888]"/>
  <match src="uint256: uint256 [4694,4701]" dest="uint256: uint256 [4748,4755]"/>
  <match src="identifier: a [10987,10988]" dest="identifier: a [11086,11087]"/>
  <match src="identifier: candidate [97367,97376]" dest="identifier: candidate [35153,35162]"/>
  <match src="state_variable_declaration [43761,43820]" dest="state_variable_declaration [13015,13074]"/>
  <match src="return_statement [72019,72049]" dest="return_statement [61970,62045]"/>
  <match src="primitive_type [88330,88337]" dest="primitive_type [28459,28466]"/>
  <match src="primitive_type [103727,103734]" dest="primitive_type [41545,41552]"/>
  <match src="primitive_type [44322,44329]" dest="primitive_type [13576,13583]"/>
  <match src="return_statement [96801,96843]" dest="return_statement [34587,34629]"/>
  <match src="array_access [101632,101652]" dest="array_access [39450,39470]"/>
  <match src="state_mutability [97466,97470]" dest="state_mutability [35252,35256]"/>
  <match src="}: } [8846,8847]" dest="}: } [8945,8946]"/>
  <match src="uint256: uint256 [101147,101154]" dest="uint256: uint256 [38965,38972]"/>
  <match src="): ) [99278,99279]" dest="): ) [37096,37097]"/>
  <match src="string [81270,81308]" dest="string [80139,80153]"/>
  <match src="comment: // for more details about how this works. [86177,86218]" dest="comment: // for more details about how this works. [73484,73525]"/>
  <match src="identifier: msg [82198,82201]" dest="identifier: msg [71366,71369]"/>
  <match src="visibility [53038,53046]" dest="visibility [20032,20040]"/>
  <match src="member_expression [95728,95741]" dest="member_expression [33514,33527]"/>
  <match src="user_defined_type [98582,98589]" dest="user_defined_type [36400,36407]"/>
  <match src="expression_statement [37642,37687]" dest="expression_statement [53314,53359]"/>
  <match src="modifier_definition [106110,106322]" dest="modifier_definition [68039,68251]"/>
  <match src="return: return [8792,8798]" dest="return: return [8891,8897]"/>
  <match src=",: , [101145,101146]" dest=",: , [38963,38964]"/>
  <match src="identifier: Decimal [45610,45617]" dest="identifier: Decimal [14864,14871]"/>
  <match src="primitive_type [20431,20438]" dest="primitive_type [63535,63542]"/>
  <match src="identifier: Unbond [80345,80351]" dest="identifier: Bond [69730,69734]"/>
  <match src="call_argument [7833,7879]" dest="call_argument [7932,7978]"/>
  <match src=".: . [88677,88678]" dest=".: . [28806,28807]"/>
  <match src="identifier: a [3889,3890]" dest="identifier: a [3943,3944]"/>
  <match src="type_name [54618,54622]" dest="type_name [21612,21616]"/>
  <match src="identifier: _state [93459,93465]" dest="identifier: _state [31245,31251]"/>
  <match src="}: } [7647,7648]" dest="}: } [7746,7747]"/>
  <match src="visibility [54067,54075]" dest="visibility [21061,21069]"/>
  <match src="identifier: D256 [9232,9236]" dest="identifier: D256 [9331,9335]"/>
  <match src="function_body [103771,103889]" dest="function_body [41589,41707]"/>
  <match src="identifier: spender [102698,102705]" dest="identifier: spender [40516,40523]"/>
  <match src="variable_declaration [93989,94008]" dest="variable_declaration [31775,31794]"/>
  <match src="false [98964,98969]" dest="false [36782,36787]"/>
  <match src="return: return [95001,95007]" dest="return: return [32787,32793]"/>
  <match src="type_name [96124,96131]" dest="type_name [33910,33917]"/>
  <match src="expression_statement [106641,106767]" dest="expression_statement [68570,68696]"/>
  <match src="(: ( [44705,44706]" dest="(: ( [13959,13960]"/>
  <match src="identifier: SafeMath [16341,16349]" dest="identifier: SafeMath [60133,60141]"/>
  <match src="call_expression [102722,102790]" dest="call_expression [40540,40608]"/>
  <match src="identifier: b [9261,9262]" dest="identifier: b [9360,9361]"/>
  <match src="visibility [7968,7976]" dest="visibility [8067,8075]"/>
  <match src="type_name [78684,78691]" dest="type_name [79031,79038]"/>
  <match src="identifier: addedValue [18965,18975]" dest="identifier: totalDebt [17474,17483]"/>
  <match src="function_definition [32560,33136]" dest="function_definition [48232,48808]"/>
  <match src="returns: returns [78028,78035]" dest="returns: returns [56113,56120]"/>
  <match src="identifier: amount [74885,74891]" dest="identifier: amount [55319,55325]"/>
  <match src="internal: internal [100067,100075]" dest="internal: internal [37885,37893]"/>
  <match src="(: ( [10559,10560]" dest="(: ( [10658,10659]"/>
  <match src="type_name [98669,98676]" dest="type_name [36487,36494]"/>
  <match src="identifier: stringify [31552,31561]" dest="identifier: stringify [47224,47233]"/>
  <match src="identifier: epoch [101928,101933]" dest="identifier: epoch [39746,39751]"/>
  <match src="type_cast_expression [78584,78597]" dest="type_cast_expression [59273,59286]"/>
  <match src="(: ( [82021,82022]" dest="(: ( [72123,72124]"/>
  <match src="bytes2: bytes2 [28544,28550]" dest="bytes2: bytes2 [44216,44222]"/>
  <match src="(: ( [7358,7359]" dest="(: ( [7457,7458]"/>
  <match src="identifier: period [87985,87991]" dest="identifier: period [28114,28120]"/>
  <match src="parameter [13030,13047]" dest="parameter [22706,22723]"/>
  <match src="uint256: uint256 [1837,1844]" dest="uint256: uint256 [1891,1898]"/>
  <match src=".: . [103009,103010]" dest=".: . [40827,40828]"/>
  <match src="): ) [100271,100272]" dest="): ) [38089,38090]"/>
  <match src="array_access [92447,92471]" dest="array_access [30233,30257]"/>
  <match src="[: [ [36274,36275]" dest="[: [ [51946,51947]"/>
  <match src="identifier: _state [99383,99389]" dest="identifier: _state [37201,37207]"/>
  <match src="): ) [95481,95482]" dest="): ) [33267,33268]"/>
  <match src="(: ( [45064,45065]" dest="(: ( [14318,14319]"/>
  <match src="parameter [53562,53572]" dest="parameter [20556,20566]"/>
  <match src="{: { [11071,11072]" dest="{: { [11170,11171]"/>
  <match src="(: ( [104432,104433]" dest="(: ( [42250,42251]"/>
  <match src="uint256: uint256 [96298,96305]" dest="uint256: uint256 [34084,34091]"/>
  <match src="identifier: totalSupply [52869,52880]" dest="identifier: totalSupply [19863,19874]"/>
  <match src="call_argument [9029,9036]" dest="call_argument [9128,9135]"/>
  <match src="primitive_type [80102,80109]" dest="primitive_type [69617,69624]"/>
  <match src="call_argument [36285,36302]" dest="call_argument [51957,51974]"/>
  <match src="address: address [14142,14149]" dest="address: address [23818,23825]"/>
  <match src="identifier: add [904,907]" dest="identifier: add [958,961]"/>
  <match src="identifier: Upgraded [90091,90099]" dest="identifier: Upgraded [75163,75171]"/>
  <match src="primitive_type [54012,54019]" dest="primitive_type [21006,21013]"/>
  <match src="member_expression [99222,99243]" dest="member_expression [37040,37061]"/>
  <match src="true: true [105298,105302]" dest="true: true [43116,43120]"/>
  <match src="identifier: to [98685,98687]" dest="identifier: to [36503,36505]"/>
  <match src="state_mutability [46118,46122]" dest="state_mutability [15372,15376]"/>
  <match src="block_statement [34614,34896]" dest="block_statement [50286,50568]"/>
  <match src=",: , [8693,8694]" dest=",: , [8792,8793]"/>
  <match src="comment: // ============ Self Functions ============ [7203,7246]" dest="comment: // ============ Self Functions ============ [7302,7345]"/>
  <match src="{: { [94990,94991]" dest="{: { [32776,32777]"/>
  <match src="): ) [45432,45433]" dest="): ) [14686,14687]"/>
  <match src="): ) [20536,20537]" dest="): ) [63648,63649]"/>
  <match src="parameter [10073,10077]" dest="parameter [10172,10176]"/>
  <match src="identifier: oracle [92942,92948]" dest="identifier: oracle [30728,30734]"/>
  <match src="): ) [54664,54665]" dest="): ) [21658,21659]"/>
  <match src="function: function [51146,51154]" dest="function: function [54745,54753]"/>
  <match src="state_mutability [92525,92529]" dest="state_mutability [30311,30315]"/>
  <match src="type_name [92382,92389]" dest="type_name [30168,30175]"/>
  <match src="primitive_type [10073,10077]" dest="primitive_type [10172,10176]"/>
  <match src="): ) [94235,94236]" dest="): ) [32021,32022]"/>
  <match src="): ) [9416,9417]" dest="): ) [9515,9516]"/>
  <match src="identifier: coupons [101710,101717]" dest="identifier: coupons [39528,39535]"/>
  <match src="call_expression [101632,101684]" dest="call_expression [39450,39502]"/>
  <match src="=: = [6435,6436]" dest="=: = [6534,6535]"/>
  <match src="function: function [8855,8863]" dest="function: function [8954,8962]"/>
  <match src="function_body [95344,95490]" dest="function_body [33130,33276]"/>
  <match src="type_name [94222,94229]" dest="type_name [32008,32015]"/>
  <match src="): ) [96758,96759]" dest="): ) [34544,34545]"/>
  <match src="visibility [92203,92209]" dest="visibility [29989,29995]"/>
  <match src="}: } [31068,31069]" dest="}: } [46740,46741]"/>
  <match src="return_type_definition [44697,44714]" dest="return_type_definition [13951,13968]"/>
  <match src="uint: uint [53109,53113]" dest="uint: uint [20103,20107]"/>
  <match src="type_name [53994,54001]" dest="type_name [20988,20995]"/>
  <match src=".: . [100421,100422]" dest=".: . [38239,38240]"/>
  <match src="identifier: amount0Out [53904,53914]" dest="identifier: amount0Out [20898,20908]"/>
  <match src=",: , [83913,83914]" dest=",: , [79798,79799]"/>
  <match src="): ) [94055,94056]" dest="): ) [31841,31842]"/>
  <match src="identifier: this [72164,72168]" dest="identifier: this [58272,58276]"/>
  <match src="(: ( [71998,71999]" dest="(: ( [61949,61950]"/>
  <match src="type_name [54144,54151]" dest="type_name [21138,21145]"/>
  <match src="return_type_definition [7783,7804]" dest="return_type_definition [7882,7903]"/>
  <match src="identifier: expiring [87720,87728]" dest="identifier: expiring [27849,27857]"/>
  <match src="function_definition [895,1076]" dest="function_definition [949,1130]"/>
  <match src="parameter [104511,104525]" dest="parameter [42329,42343]"/>
  <match src="visibility [50115,50121]" dest="visibility [25554,25560]"/>
  <match src="address: address [88555,88562]" dest="address: address [28684,28691]"/>
  <match src="emit: emit [80766,80770]" dest="emit: emit [70354,70358]"/>
  <match src="parameter [104295,104309]" dest="parameter [42113,42127]"/>
  <match src="identifier: a [4092,4093]" dest="identifier: a [4146,4147]"/>
  <match src=",: , [53767,53768]" dest=",: , [20761,20762]"/>
  <match src="state_mutability [95321,95325]" dest="state_mutability [33107,33111]"/>
  <match src="}: } [38127,38128]" dest="}: } [53799,53800]"/>
  <match src="return_type_definition [92530,92547]" dest="return_type_definition [30316,30333]"/>
  <match src="}: } [6835,6836]" dest="}: } [6934,6935]"/>
  <match src="call_expression [94109,94163]" dest="call_expression [31895,31949]"/>
  <match src="primitive_type [67576,67583]" dest="primitive_type [62125,62132]"/>
  <match src="user_defined_type [10999,11003]" dest="user_defined_type [11098,11102]"/>
  <match src="identifier: start [87961,87966]" dest="identifier: start [28090,28095]"/>
  <match src="state_mutability [54186,54190]" dest="state_mutability [21180,21184]"/>
  <match src="event: event [53706,53711]" dest="event: event [20700,20705]"/>
  <match src="call_expression [82034,82048]" dest="call_expression [72136,72150]"/>
  <match src="identifier: balanceOfCoupons [94188,94204]" dest="identifier: balanceOfCoupons [31974,31990]"/>
  <match src="bytes: bytes [34166,34171]" dest="bytes: bytes [49838,49843]"/>
  <match src="yul_path [91086,91090]" dest="yul_path [76158,76162]"/>
  <match src="identifier: Provider [88156,88164]" dest="identifier: Provider [28285,28293]"/>
  <match src="identifier: sub [9257,9260]" dest="identifier: sub [9356,9359]"/>
  <match src="): ) [94144,94145]" dest="): ) [31930,31931]"/>
  <match src="identifier: add [100361,100364]" dest="identifier: add [38179,38182]"/>
  <match src="type_name [102424,102431]" dest="type_name [40242,40249]"/>
  <match src="identifier: add [95462,95465]" dest="identifier: add [33248,33251]"/>
  <match src="(: ( [23917,23918]" dest="(: ( [55364,55365]"/>
  <match src="memory: memory [35382,35388]" dest="memory: memory [51054,51060]"/>
  <match src="state_mutability [9386,9390]" dest="state_mutability [9485,9489]"/>
  <match src="member_expression [80866,80876]" dest="member_expression [71267,71277]"/>
  <match src="]: ] [104021,104022]" dest="]: ] [41839,41840]"/>
  <match src="memory: memory [8883,8889]" dest="memory: memory [8982,8988]"/>
  <match src="primitive_type [14608,14612]" dest="primitive_type [24284,24288]"/>
  <match src="identifier: epoch [101830,101835]" dest="identifier: epoch [39648,39653]"/>
  <match src="call_argument [33477,33501]" dest="call_argument [49149,49173]"/>
  <match src="function: function [95241,95249]" dest="function: function [33027,33035]"/>
  <match src="): ) [81183,81184]" dest="): ) [70492,70493]"/>
  <match src="call_argument [51636,51642]" dest="call_argument [64056,64062]"/>
  <match src="&quot;: &quot; [82838,82839]" dest="&quot;: &quot; [79718,79719]"/>
  <match src="identifier: c [4204,4205]" dest="identifier: c [4258,4259]"/>
  <match src="): ) [10371,10372]" dest="): ) [10470,10471]"/>
  <match src="return_type_definition [44592,44609]" dest="return_type_definition [13846,13863]"/>
  <match src="identifier: balance [93356,93363]" dest="identifier: balance [31142,31149]"/>
  <match src="primitive_type [92420,92427]" dest="primitive_type [30206,30213]"/>
  <match src="(: ( [88656,88657]" dest="(: ( [28785,28786]"/>
  <match src="call_argument [95217,95224]" dest="call_argument [33003,33010]"/>
  <match src="}: } [102943,102944]" dest="}: } [40761,40762]"/>
  <match src="call_argument [103417,103422]" dest="call_argument [41235,41240]"/>
  <match src=".: . [8246,8247]" dest=".: . [8345,8346]"/>
  <match src="identifier: Require [84457,84464]" dest="identifier: Require [80012,80019]"/>
  <match src="): ) [102237,102238]" dest="): ) [40055,40056]"/>
  <match src="address: address [94439,94446]" dest="address: address [32225,32232]"/>
  <match src="parameter [46015,46022]" dest="parameter [15269,15276]"/>
  <match src="}: } [84400,84401]" dest="}: } [59047,59048]"/>
  <match src="view: view [93637,93641]" dest="view: view [31423,31427]"/>
  <match src="identifier: reason [31841,31847]" dest="identifier: reason [47513,47519]"/>
  <match src="type_name [77997,78004]" dest="type_name [62085,62092]"/>
  <match src="view: view [93418,93422]" dest="view: view [31204,31208]"/>
  <match src="(: ( [14607,14608]" dest="(: ( [24283,24284]"/>
  <match src="identifier: account [80465,80472]" dest="identifier: account [77234,77241]"/>
  <match src="identifier: rejectFor [97382,97391]" dest="identifier: rejectFor [35168,35177]"/>
  <match src="identifier: strategy [95303,95311]" dest="identifier: strategy [33089,33097]"/>
  <match src="(: ( [26595,26596]" dest="(: ( [60489,60490]"/>
  <match src="identifier: EpochStrategy [44822,44835]" dest="identifier: EpochStrategy [14076,14089]"/>
  <match src="visibility [54418,54426]" dest="visibility [21412,21420]"/>
  <match src=".: . [95734,95735]" dest=".: . [33520,33521]"/>
  <match src="identifier: Account [88566,88573]" dest="identifier: Account [28695,28702]"/>
  <match src="memory: memory [7733,7739]" dest="memory: memory [7832,7838]"/>
  <match src="(: ( [99006,99007]" dest="(: ( [36824,36825]"/>
  <match src=".: . [30070,30071]" dest=".: . [45742,45743]"/>
  <match src="external: external [82988,82996]" dest="external: external [71742,71750]"/>
  <match src="}: } [98976,98977]" dest="}: } [36794,36795]"/>
  <match src="call_argument [82580,82585]" dest="call_argument [71934,71939]"/>
  <match src=".: . [8823,8824]" dest=".: . [8922,8923]"/>
  <match src="returns: returns [3255,3262]" dest="returns: returns [3309,3316]"/>
  <match src="number_literal: 1e6 [43300,43303]" dest="number_literal: 1e6 [12554,12557]"/>
  <match src=",: , [23872,23873]" dest=",: , [55309,55310]"/>
  <match src="(: ( [49243,49244]" dest="(: ( [55629,55630]"/>
  <match src="): ) [106576,106577]" dest="): ) [68505,68506]"/>
  <match src="public: public [96277,96283]" dest="public: public [34063,34069]"/>
  <match src="identifier: D256 [10311,10315]" dest="identifier: D256 [10410,10414]"/>
  <match src="call_argument [30951,30959]" dest="call_argument [46623,46631]"/>
  <match src="identifier: COMMA [30325,30330]" dest="identifier: COMMA [45997,46002]"/>
  <match src="type_cast_expression [36326,36353]" dest="type_cast_expression [51998,52025]"/>
  <match src=",: , [29885,29886]" dest=",: , [45557,45558]"/>
  <match src="uint256: uint256 [7304,7311]" dest="uint256: uint256 [7403,7410]"/>
  <match src="uint256: uint256 [50223,50230]" dest="uint256: uint256 [25662,25669]"/>
  <match src="event_paramater [53874,53888]" dest="event_paramater [20868,20882]"/>
  <match src="user_defined_type [8383,8387]" dest="user_defined_type [8482,8486]"/>
  <match src="(: ( [105083,105084]" dest="(: ( [42901,42902]"/>
  <match src="identifier: _state [92822,92828]" dest="identifier: _state [30608,30614]"/>
  <match src="event_paramater [80377,80390]" dest="event_paramater [69760,69773]"/>
  <match src="variable_declaration_statement [35376,35414]" dest="variable_declaration_statement [51048,51086]"/>
  <match src="identifier: getPartial [10722,10732]" dest="identifier: getPartial [10821,10831]"/>
  <match src="function_body [93441,93492]" dest="function_body [31227,31278]"/>
  <match src="member_expression [101047,101072]" dest="member_expression [38865,38890]"/>
  <match src="): ) [10197,10198]" dest="): ) [10296,10297]"/>
  <match src="member_expression [104392,104428]" dest="member_expression [42210,42246]"/>
  <match src="identifier: start [43418,43423]" dest="identifier: start [12672,12677]"/>
  <match src="returns: returns [10213,10220]" dest="returns: returns [10312,10319]"/>
  <match src="event_paramater [80102,80125]" dest="event_paramater [69617,69640]"/>
  <match src=".: . [82041,82042]" dest=".: . [72143,72144]"/>
  <match src="type_name [6521,6528]" dest="type_name [6620,6627]"/>
  <match src=".: . [99956,99957]" dest=".: . [37774,37775]"/>
  <match src="): ) [101365,101366]" dest="): ) [39183,39184]"/>
  <match src="assignment_expression [102121,102188]" dest="assignment_expression [39939,40006]"/>
  <match src="primitive_type [87953,87960]" dest="primitive_type [28082,28089]"/>
  <match src="): ) [100592,100593]" dest="): ) [38410,38411]"/>
  <match src="uint: uint [52906,52910]" dest="uint: uint [19900,19904]"/>
  <match src="identifier: value [80918,80923]" dest="identifier: value [71027,71032]"/>
  <match src="private: private [43163,43170]" dest="private: private [12417,12424]"/>
  <match src="type_name [54749,54753]" dest="type_name [21743,21747]"/>
  <match src="identifier: candidate [104565,104574]" dest="identifier: candidate [42383,42392]"/>
  <match src="identifier: equals [9735,9741]" dest="identifier: equals [9834,9840]"/>
  <match src="parameter [104898,104915]" dest="parameter [42716,42733]"/>
  <match src="identifier: self [7490,7494]" dest="identifier: self [7589,7593]"/>
  <match src="return: return [96010,96016]" dest="return: return [33796,33802]"/>
  <match src="primitive_type [50206,50213]" dest="primitive_type [25645,25652]"/>
  <match src="type_name [66387,66399]" dest="type_name [65343,65355]"/>
  <match src="{: { [28893,28894]" dest="{: { [44565,44566]"/>
  <match src="function: function [92363,92371]" dest="function: function [30149,30157]"/>
  <match src="(: ( [3294,3295]" dest="(: ( [3348,3349]"/>
  <match src="call_expression [82904,82911]" dest="call_expression [71655,71662]"/>
  <match src=",: , [83235,83236]" dest=",: , [79958,79959]"/>
  <match src="(: ( [52821,52822]" dest="(: ( [19815,19816]"/>
  <match src="): ) [102864,102865]" dest="): ) [40682,40683]"/>
  <match src="primitive_type [45187,45194]" dest="primitive_type [14441,14448]"/>
  <match src="identifier: value [98697,98702]" dest="identifier: value [36515,36520]"/>
  <match src="view: view [93202,93206]" dest="view: view [30988,30992]"/>
  <match src="member_expression [102259,102274]" dest="member_expression [40077,40092]"/>
  <match src="returns: returns [95077,95084]" dest="returns: returns [32863,32870]"/>
  <match src="expression_statement [81028,81043]" dest="expression_statement [55872,55887]"/>
  <match src="member_expression [101937,101980]" dest="member_expression [39755,39798]"/>
  <match src="identifier: amount [102432,102438]" dest="identifier: amount [40250,40256]"/>
  <match src="identifier: epochs [96024,96030]" dest="identifier: epochs [33810,33816]"/>
  <match src="variable_declaration [67032,67053]" dest="variable_declaration [66432,66449]"/>
  <match src="(: ( [51242,51243]" dest="(: ( [54834,54835]"/>
  <match src="): ) [28862,28863]" dest="): ) [44534,44535]"/>
  <match src="emit_statement [90600,90633]" dest="emit_statement [75672,75705]"/>
  <match src="identifier: i [36485,36486]" dest="identifier: i [52157,52158]"/>
  <match src="identifier: mint [54583,54587]" dest="identifier: mint [21577,21581]"/>
  <match src="identifier: decrementTotalRedeemable [100004,100028]" dest="identifier: decrementTotalRedeemable [37822,37846]"/>
  <match src="return_type_definition [6771,6792]" dest="return_type_definition [6870,6891]"/>
  <match src="identifier: sender [14547,14553]" dest="identifier: sender [24223,24229]"/>
  <match src="call_expression [49231,49327]" dest="call_expression [55605,55683]"/>
  <match src="emit: emit [82012,82016]" dest="emit: emit [72112,72116]"/>
  <match src="string_literal [65112,65131]" dest="string_literal [62365,62382]"/>
  <match src="private: private [16475,16482]" dest="private: private [65882,65889]"/>
  <match src="memory: memory [8388,8394]" dest="memory: memory [8487,8493]"/>
  <match src="return_type_definition [92411,92428]" dest="return_type_definition [30197,30214]"/>
  <match src="returns: returns [12609,12616]" dest="returns: returns [22285,22292]"/>
  <match src="primitive_type [99492,99499]" dest="primitive_type [37310,37317]"/>
  <match src="call_expression [82182,82209]" dest="call_expression [71350,71377]"/>
  <match src="if: if [35102,35104]" dest="if: if [50774,50776]"/>
  <match src="primitive_type [69869,69876]" dest="primitive_type [65057,65064]"/>
  <match src="parameter [10222,10226]" dest="parameter [10321,10325]"/>
  <match src="uint256: uint256 [103746,103753]" dest="uint256: uint256 [41564,41571]"/>
  <match src="{: { [46537,46538]" dest="{: { [15791,15792]"/>
  <match src="event_paramater [98669,98687]" dest="event_paramater [36487,36505]"/>
  <match src="user_defined_type [9405,9409]" dest="user_defined_type [9504,9508]"/>
  <match src="{: { [3963,3964]" dest="{: { [4017,4018]"/>
  <match src="inheritance_specifier [79762,79773]" dest="inheritance_specifier [69491,69498]"/>
  <match src=".: . [9262,9263]" dest=".: . [9361,9362]"/>
  <match src="primitive_type [94818,94825]" dest="primitive_type [32604,32611]"/>
  <match src="]: ] [101523,101524]" dest="]: ] [39341,39342]"/>
  <match src="}: } [46867,46868]" dest="}: } [16121,16122]"/>
  <match src="-: - [36807,36808]" dest="-: - [52479,52480]"/>
  <match src="(: ( [104491,104492]" dest="(: ( [42309,42310]"/>
  <match src="returns: returns [96908,96915]" dest="returns: returns [34694,34701]"/>
  <match src="call_argument [82394,82404]" dest="call_argument [78168,78178]"/>
  <match src="indexed: indexed [53777,53784]" dest="indexed: indexed [20771,20778]"/>
  <match src="variable_declaration_statement [67221,67297]" dest="variable_declaration_statement [62440,62509]"/>
  <match src="{: { [35118,35119]" dest="{: { [50790,50791]"/>
  <match src="return_statement [4197,4206]" dest="return_statement [4251,4260]"/>
  <match src="): ) [37992,37993]" dest="): ) [53664,53665]"/>
  <match src="identifier: amount [102775,102781]" dest="identifier: amount [40593,40599]"/>
  <match src="return_statement [2000,2009]" dest="return_statement [2054,2063]"/>
  <match src="assignment_expression [101023,101080]" dest="assignment_expression [38841,38898]"/>
  <match src="==: == [103464,103466]" dest="==: == [41282,41284]"/>
  <match src="): ) [20494,20495]" dest="): ) [63598,63599]"/>
  <match src="call_argument [51544,51550]" dest="call_argument [64036,64042]"/>
  <match src="identifier: _state [100328,100334]" dest="identifier: _state [38146,38152]"/>
  <match src="identifier: amount0 [53746,53753]" dest="identifier: amount0 [20740,20747]"/>
  <match src="member_expression [95874,95902]" dest="member_expression [33660,33688]"/>
  <match src="identifier: FILE [49047,49051]" dest="identifier: FILE [62203,62207]"/>
  <match src="view: view [94967,94971]" dest="view: view [32753,32757]"/>
  <match src="): ) [93976,93977]" dest="): ) [31762,31763]"/>
  <match src="state_mutability [10587,10591]" dest="state_mutability [10686,10690]"/>
  <match src="identifier: balance [99390,99397]" dest="identifier: balance [37208,37215]"/>
  <match src="identifier: i [96221,96222]" dest="identifier: i [34007,34008]"/>
  <match src="(: ( [28961,28962]" dest="(: ( [44633,44634]"/>
  <match src="number_literal: 720 [44228,44231]" dest="number_literal: 720 [13482,13485]"/>
  <match src="type_name [104089,104096]" dest="type_name [41907,41914]"/>
  <match src="type_name [90339,90346]" dest="type_name [75411,75418]"/>
  <match src="struct_member [87768,87783]" dest="struct_member [27897,27912]"/>
  <match src="identifier: withdraw [80822,80830]" dest="identifier: withdraw [70410,70418]"/>
  <match src="byte: byte [37988,37992]" dest="byte: byte [53660,53664]"/>
  <match src="yul_evm_builtin [97850,97855]" dest="yul_evm_builtin [35636,35641]"/>
  <match src="parameter [100882,100897]" dest="parameter [38700,38715]"/>
  <match src="public: public [92091,92097]" dest="public: public [29877,29883]"/>
  <match src="private: private [44330,44337]" dest="private: private [13584,13591]"/>
  <match src="!: ! [29380,29381]" dest="!: ! [45052,45053]"/>
  <match src="uint256: uint256 [47043,47050]" dest="uint256: uint256 [16297,16304]"/>
  <match src="member_expression [7424,7429]" dest="member_expression [7523,7528]"/>
  <match src=".: . [103244,103245]" dest=".: . [41062,41063]"/>
  <match src="external: external [82103,82111]" dest="external: external [71240,71248]"/>
  <match src="primitive_type [87977,87984]" dest="primitive_type [28106,28113]"/>
  <match src="identifier: amount [21169,21175]" dest="identifier: amount [55932,55938]"/>
  <match src="function_definition [104247,104456]" dest="function_definition [42065,42274]"/>
  <match src="event_definition [80339,80429]" dest="event_definition [69724,69815]"/>
  <match src="identifier: mul [7905,7908]" dest="identifier: mul [8004,8007]"/>
  <match src="+: + [38202,38203]" dest="+: + [53874,53875]"/>
  <match src="call_argument [94151,94162]" dest="call_argument [31937,31948]"/>
  <match src=":: : [6828,6829]" dest=":: : [6927,6928]"/>
  <match src="bytes32: bytes32 [53609,53616]" dest="bytes32: bytes32 [20603,20610]"/>
  <match src="}: } [33922,33923]" dest="}: } [49594,49595]"/>
  <match src="(: ( [7399,7400]" dest="(: ( [7498,7499]"/>
  <match src="call_argument [21969,22005]" dest="call_argument [62987,63024]"/>
  <match src="uint256: uint256 [16641,16648]" dest="uint256: uint256 [17285,17292]"/>
  <match src="identifier: COLON [29078,29083]" dest="identifier: COLON [44750,44755]"/>
  <match src="identifier: _state [96325,96331]" dest="identifier: _state [34111,34117]"/>
  <match src="&quot;: &quot; [106268,106269]" dest="&quot;: &quot; [68197,68198]"/>
  <match src="parameter [8704,8717]" dest="parameter [8803,8816]"/>
  <match src="return_statement [11151,11184]" dest="return_statement [11250,11283]"/>
  <match src="call_argument [83231,83235]" dest="call_argument [79954,79958]"/>
  <match src="function_definition [105195,105310]" dest="function_definition [43013,43128]"/>
  <match src="(: ( [96876,96877]" dest="(: ( [34662,34663]"/>
  <match src="): ) [54151,54152]" dest="): ) [21145,21146]"/>
  <match src="uint256: uint256 [16503,16510]" dest="uint256: uint256 [81862,81869]"/>
  <match src="type_name [15066,15073]" dest="type_name [24742,24749]"/>
  <match src="identifier: staged [93258,93264]" dest="identifier: staged [31044,31050]"/>
  <match src="event_paramater [51852,51856]" dest="event_paramater [60629,60650]"/>
  <match src="identifier: coupons [87801,87808]" dest="identifier: coupons [27930,27937]"/>
  <match src="identifier: recipient [20822,20831]" dest="identifier: recipient [64155,64164]"/>
  <match src="primitive_type [78208,78215]" dest="primitive_type [82416,82423]"/>
  <match src="bytes32: bytes32 [31144,31151]" dest="bytes32: bytes32 [46816,46823]"/>
  <match src="call_expression [95195,95225]" dest="call_expression [32981,33011]"/>
  <match src="call_expression [106192,106209]" dest="call_expression [68121,68138]"/>
  <match src="address: address [78584,78591]" dest="address: address [59273,59280]"/>
  <match src="primitive_type [30585,30592]" dest="primitive_type [46257,46264]"/>
  <match src="comment: // reverse-for-loops with unsigned integer [34365,34407]" dest="comment: // reverse-for-loops with unsigned integer [50037,50079]"/>
  <match src="identifier: account [93802,93809]" dest="identifier: account [31588,31595]"/>
  <match src="primitive_type [37930,37937]" dest="primitive_type [53602,53609]"/>
  <match src="type_name [93001,93008]" dest="type_name [30787,30794]"/>
  <match src="function_definition [90320,90640]" dest="function_definition [75392,75712]"/>
  <match src="): ) [103468,103469]" dest="): ) [41286,41287]"/>
  <match src="visibility [54177,54185]" dest="visibility [21171,21179]"/>
  <match src="number_literal: 1 [11128,11129]" dest="number_literal: 1 [11227,11228]"/>
  <match src="primitive_type [51814,51821]" dest="primitive_type [60609,60616]"/>
  <match src="(: ( [35405,35406]" dest="(: ( [51077,51078]"/>
  <match src="uint256: uint256 [80377,80384]" dest="uint256: uint256 [69760,69767]"/>
  <match src="private: private [10828,10835]" dest="private: private [10927,10934]"/>
  <match src="parameter [3903,3929]" dest="parameter [3957,3983]"/>
  <match src="enum_value: Frozen [87205,87211]" dest="enum_value: Frozen [27334,27340]"/>
  <match src="identifier: allowance [51454,51463]" dest="identifier: allowanceCoupons [63942,63958]"/>
  <match src="primitive_type [81118,81125]" dest="primitive_type [71225,71232]"/>
  <match src="): ) [31491,31492]" dest="): ) [47163,47164]"/>
  <match src=",: , [15064,15065]" dest=",: , [24740,24741]"/>
  <match src="variable_declaration [90436,90448]" dest="variable_declaration [75508,75520]"/>
  <match src="type_name [64278,64285]" dest="type_name [77110,77117]"/>
  <match src="}: } [45952,45953]" dest="}: } [15206,15207]"/>
  <match src="uint256: uint256 [28676,28683]" dest="uint256: uint256 [44348,44355]"/>
  <match src="=: = [37311,37312]" dest="=: = [52983,52984]"/>
  <match src="uint256: uint256 [43155,43162]" dest="uint256: uint256 [12409,12416]"/>
  <match src="identifier: decrementTotalBonded [99304,99324]" dest="identifier: decrementTotalBonded [37122,37142]"/>
  <match src="type_name [26647,26654]" dest="type_name [60369,60376]"/>
  <match src="visibility [84129,84137]" dest="visibility [77440,77448]"/>
  <match src="address: address [53259,53266]" dest="address: address [20253,20260]"/>
  <match src="number_literal: 0 [10524,10525]" dest="number_literal: 0 [10623,10624]"/>
  <match src="address: address [54917,54924]" dest="address: address [21911,21918]"/>
  <match src="): ) [93115,93116]" dest="): ) [30901,30902]"/>
  <match src="internal: internal [45869,45877]" dest="internal: internal [15123,15131]"/>
  <match src="parameter [54353,54378]" dest="parameter [21347,21372]"/>
  <match src="identifier: Oracle [64167,64173]" dest="identifier: Regulator [64909,64918]"/>
  <match src="member_expression [8813,8827]" dest="member_expression [8912,8926]"/>
  <match src=".: . [99556,99557]" dest=".: . [37374,37375]"/>
  <match src="identifier: _state [105122,105128]" dest="identifier: _state [42940,42946]"/>
  <match src="=: = [101237,101238]" dest="=: = [39055,39056]"/>
  <match src="): ) [82101,82102]" dest="): ) [71238,71239]"/>
  <match src="visibility [92091,92097]" dest="visibility [29877,29883]"/>
  <match src="(: ( [83053,83054]" dest="(: ( [58490,58491]"/>
  <match src="comment: /**      * ERC20 Interface      */ [92031,92067]" dest="comment: /**      * ERC20 Interface      */ [29817,29853]"/>
  <match src="function_definition [96858,96987]" dest="function_definition [34644,34773]"/>
  <match src="{: { [95856,95857]" dest="{: { [33642,33643]"/>
  <match src="member_expression [92822,92837]" dest="member_expression [30608,30623]"/>
  <match src="(: ( [90613,90614]" dest="(: ( [75685,75686]"/>
  <match src="&quot;: &quot; [20617,20618]" dest="&quot;: &quot; [63737,63738]"/>
  <match src="primitive_type [80352,80359]" dest="primitive_type [69735,69742]"/>
  <match src="): ) [20445,20446]" dest="): ) [63549,63550]"/>
  <match src="(: ( [30288,30289]" dest="(: ( [45960,45961]"/>
  <match src="member_expression [101632,101672]" dest="member_expression [39450,39490]"/>
  <match src="(: ( [73270,73271]" dest="(: ( [80819,80820]"/>
  <match src="): ) [35084,35085]" dest="): ) [50756,50757]"/>
  <match src="identifier: must [33173,33177]" dest="identifier: must [48845,48849]"/>
  <match src="parenthesized_expression [35799,35807]" dest="parenthesized_expression [51471,51479]"/>
  <match src=".: . [102898,102899]" dest=".: . [40716,40717]"/>
  <match src="primitive_type [96429,96433]" dest="primitive_type [34215,34219]"/>
  <match src="identifier: self [10029,10033]" dest="identifier: self [10128,10132]"/>
  <match src="identifier: amount [76219,76225]" dest="identifier: amount [61921,61927]"/>
  <match src="comment: // Solidity only automatically asserts when dividing by 0 [3974,4031]" dest="comment: // Solidity only automatically asserts when dividing by 0 [4028,4085]"/>
  <match src="number_literal: 0 [11182,11183]" dest="number_literal: 0 [11281,11282]"/>
  <match src="visibility [54600,54608]" dest="visibility [21594,21602]"/>
  <match src=".: . [105043,105044]" dest=".: . [42861,42862]"/>
  <match src="address: address [54256,54263]" dest="address: address [21250,21257]"/>
  <match src="): ) [81377,81378]" dest="): ) [80600,80601]"/>
  <match src="uint256: uint256 [98906,98913]" dest="uint256: uint256 [36724,36731]"/>
  <match src="identifier: candidates [104798,104808]" dest="identifier: candidates [42616,42626]"/>
  <match src="parameter [97621,97625]" dest="parameter [35407,35411]"/>
  <match src="type_name [96590,96597]" dest="type_name [34376,34383]"/>
  <match src="uint256: uint256 [69869,69876]" dest="uint256: uint256 [65057,65064]"/>
  <match src="returns: returns [37979,37986]" dest="returns: returns [53651,53658]"/>
  <match src="user_defined_type [10329,10333]" dest="user_defined_type [10428,10432]"/>
  <match src="type_name [3219,3226]" dest="type_name [3273,3280]"/>
  <match src="variable_declaration [1970,1979]" dest="variable_declaration [2024,2033]"/>
  <match src="(: ( [35785,35786]" dest="(: ( [51457,51458]"/>
  <match src="function_definition [92860,92956]" dest="function_definition [30646,30742]"/>
  <match src="expression_statement [21837,21905]" dest="expression_statement [63752,63840]"/>
  <match src="(: ( [97620,97621]" dest="(: ( [35406,35407]"/>
  <match src="(: ( [82777,82778]" dest="(: ( [78868,78869]"/>
  <match src="comment: // Can modify account state [106077,106104]" dest="comment: // Can modify account state [68006,68033]"/>
  <match src="user_defined_type [107543,107553]" dest="user_defined_type [76943,76953]"/>
  <match src="identifier: candidates [96815,96825]" dest="identifier: candidates [34601,34611]"/>
  <match src="): ) [7435,7436]" dest="): ) [7534,7535]"/>
  <match src="parameter [99007,99021]" dest="parameter [36825,36839]"/>
  <match src="(: ( [78583,78584]" dest="(: ( [59272,59273]"/>
  <match src="visibility [99058,99066]" dest="visibility [36876,36884]"/>
  <match src="expression_statement [36856,36867]" dest="expression_statement [52528,52539]"/>
  <match src="return_type_definition [71990,72007]" dest="return_type_definition [61941,61958]"/>
  <match src=".: . [80782,80783]" dest=".: . [70370,70371]"/>
  <match src="}: } [22894,22895]" dest="}: } [63451,63452]"/>
  <match src="identifier: epochs [101596,101602]" dest="identifier: epochs [39414,39420]"/>
  <match src="(: ( [66426,66427]" dest="(: ( [65384,65385]"/>
  <match src="using_directive [91837,91864]" dest="using_directive [29623,29650]"/>
  <match src="identifier: _state [100935,100941]" dest="identifier: _state [38753,38759]"/>
  <match src="&gt;: &gt; [86469,86470]" dest="&gt;: &gt; [73776,73777]"/>
  <match src=".: . [99260,99261]" dest=".: . [37078,37079]"/>
  <match src="identifier: self [10178,10182]" dest="identifier: self [10277,10281]"/>
  <match src="parameter [10601,10608]" dest="parameter [10700,10707]"/>
  <match src="state_variable_declaration [43568,43613]" dest="state_variable_declaration [12822,12867]"/>
  <match src="(: ( [54089,54090]" dest="(: ( [21083,21084]"/>
  <match src="user_defined_type [64210,64222]" dest="user_defined_type [64992,65004]"/>
  <match src="): ) [95446,95447]" dest="): ) [33232,33233]"/>
  <match src="user_defined_type [91888,91900]" dest="user_defined_type [29674,29686]"/>
  <match src="[: [ [104409,104410]" dest="[: [ [42227,42228]"/>
  <match src="private: private [42790,42797]" dest="private: private [12044,12051]"/>
  <match src="string_literal [82803,82839]" dest="string_literal [79705,79719]"/>
  <match src="assignment_expression [36797,36841]" dest="assignment_expression [52469,52513]"/>
  <match src="primitive_type [4080,4087]" dest="primitive_type [4134,4141]"/>
  <match src="primitive_type [18957,18964]" dest="primitive_type [17466,17473]"/>
  <match src="identifier: decrementTotalDebt [99606,99624]" dest="identifier: decrementTotalDebt [37424,37442]"/>
  <match src="struct_declaration [88254,88430]" dest="struct_declaration [28383,28559]"/>
  <match src="}: } [97878,97879]" dest="}: } [35664,35665]"/>
  <match src="type_name [101434,101441]" dest="type_name [39252,39259]"/>
  <match src="parameter [44822,44842]" dest="parameter [14076,14096]"/>
  <match src="expression_statement [83041,83158]" dest="expression_statement [58478,58593]"/>
  <match src="primitive_type [13030,13037]" dest="primitive_type [22706,22713]"/>
  <match src="): ) [37289,37290]" dest="): ) [52961,52962]"/>
  <match src="function: function [54159,54167]" dest="function: function [21153,21161]"/>
  <match src=":: : [8049,8050]" dest=":: : [8148,8149]"/>
  <match src="{: { [66968,66969]" dest="{: { [66205,66206]"/>
  <match src="member_expression [103994,104028]" dest="member_expression [41812,41846]"/>
  <match src="): ) [8258,8259]" dest="): ) [8357,8358]"/>
  <match src="call_expression [73255,73279]" dest="call_expression [80810,80828]"/>
  <match src="}: } [96986,96987]" dest="}: } [34772,34773]"/>
  <match src="returns: returns [72238,72245]" dest="returns: returns [80667,80674]"/>
  <match src="variable_declaration [83528,83560]" dest="variable_declaration [61449,61472]"/>
  <match src="primitive_type [31858,31865]" dest="primitive_type [47530,47537]"/>
  <match src="): ) [97336,97337]" dest="): ) [35122,35123]"/>
  <match src="type_name [81567,81574]" dest="type_name [78141,78148]"/>
  <match src="{: { [102875,102876]" dest="{: { [40693,40694]"/>
  <match src="public: public [96135,96141]" dest="public: public [33921,33927]"/>
  <match src="identifier: account [100344,100351]" dest="identifier: account [38162,38169]"/>
  <match src="identifier: periodFor [105048,105057]" dest="identifier: periodFor [42866,42875]"/>
  <match src="(: ( [103022,103023]" dest="(: ( [40840,40841]"/>
  <match src="string_literal [4765,4791]" dest="string_literal [4819,4845]"/>
  <match src="comment: // ============ Private Functions ============ [33938,33984]" dest="comment: // ============ Private Functions ============ [49610,49656]"/>
  <match src="(: ( [90159,90160]" dest="(: ( [75231,75232]"/>
  <match src="type_name [28676,28683]" dest="type_name [44348,44355]"/>
  <match src="return: return [8993,8999]" dest="return: return [9092,9098]"/>
  <match src="identifier: a [2288,2289]" dest="identifier: a [2342,2343]"/>
  <match src="pure: pure [45878,45882]" dest="pure: pure [15132,15136]"/>
  <match src="primitive_type [37313,37317]" dest="primitive_type [52985,52989]"/>
  <match src="{: { [92127,92128]" dest="{: { [29913,29914]"/>
  <match src="contract_declaration [64158,68274]" dest="contract_declaration [64900,67207]"/>
  <match src="string_literal [106268,106289]" dest="string_literal [68197,68218]"/>
  <match src="returns: returns [35063,35070]" dest="returns: returns [50735,50742]"/>
  <match src="visibility [44330,44337]" dest="visibility [13584,13591]"/>
  <match src="member_expression [58695,58710]" dest="member_expression [82751,82766]"/>
  <match src="identifier: i [8554,8555]" dest="identifier: i [8653,8654]"/>
  <match src="variable_declaration [67221,67244]" dest="variable_declaration [62440,62460]"/>
  <match src="type_name [88732,88745]" dest="type_name [28861,28874]"/>
  <match src="member_expression [95466,95481]" dest="member_expression [33252,33267]"/>
  <match src="using: using [98597,98602]" dest="using: using [36415,36420]"/>
  <match src=".: . [66954,66955]" dest=".: . [66901,66902]"/>
  <match src="parameter [3230,3239]" dest="parameter [3284,3293]"/>
  <match src=",: , [84854,84855]" dest=",: , [79323,79324]"/>
  <match src="visibility [44683,44691]" dest="visibility [13937,13945]"/>
  <match src="returns: returns [36008,36015]" dest="returns: returns [51680,51687]"/>
  <match src="address: address [76194,76201]" dest="address: address [80637,80644]"/>
  <match src=",: , [104896,104897]" dest=",: , [42714,42715]"/>
  <match src="{: { [4737,4738]" dest="{: { [4791,4792]"/>
  <match src="type_name [96393,96400]" dest="type_name [34179,34186]"/>
  <match src="]: ] [103024,103025]" dest="]: ] [40842,40843]"/>
  <match src="identifier: _ [106313,106314]" dest="identifier: _ [68242,68243]"/>
  <match src="identifier: ORACLE_RESERVE_MINIMUM [43180,43202]" dest="identifier: ORACLE_RESERVE_MINIMUM [12434,12456]"/>
  <match src="number_literal: 48 [28372,28374]" dest="number_literal: 48 [44044,44046]"/>
  <match src="parameter [96781,96788]" dest="parameter [34567,34574]"/>
  <match src="array_access [100935,100959]" dest="array_access [38753,38777]"/>
  <match src="}: } [92955,92956]" dest="}: } [30741,30742]"/>
  <match src="): ) [53406,53407]" dest="): ) [20400,20401]"/>
  <match src="type_name [80041,80048]" dest="type_name [69553,69560]"/>
  <match src="if: if [65521,65523]" dest="if: if [67113,67115]"/>
  <match src="member_expression [94641,94656]" dest="member_expression [32427,32442]"/>
  <match src="identifier: add [104220,104223]" dest="identifier: add [42038,42041]"/>
  <match src="identifier: getPoolExitLockupEpochs [77117,77140]" dest="identifier: getCouponExpiration [61087,61106]"/>
  <match src="comment: // ============ Structs ============ [6452,6488]" dest="comment: // ============ Structs ============ [6551,6587]"/>
  <match src="parameter [1837,1846]" dest="parameter [1891,1900]"/>
  <match src="call_argument [20497,20536]" dest="call_argument [63601,63648]"/>
  <match src="{: { [23897,23898]" dest="{: { [55336,55337]"/>
  <match src="{: { [89591,89592]" dest="{: { [74663,74664]"/>
  <match src="string: string [30038,30044]" dest="string: string [45710,45716]"/>
  <match src="(: ( [96572,96573]" dest="(: ( [34358,34359]"/>
  <match src="call_expression [102050,102110]" dest="call_expression [39868,39928]"/>
  <match src="type_name [1364,1371]" dest="type_name [1418,1425]"/>
  <match src="parameter [51354,51368]" dest="parameter [59224,59238]"/>
  <match src=".: . [6983,6984]" dest=".: . [7082,7083]"/>
  <match src="&quot;: &quot; [20682,20683]" dest="&quot;: &quot; [62222,62223]"/>
  <match src="parameter [36948,36961]" dest="parameter [52620,52633]"/>
  <match src="primitive_type [15091,15098]" dest="primitive_type [24767,24774]"/>
  <match src="): ) [10576,10577]" dest="): ) [10675,10676]"/>
  <match src="visibility [100915,100923]" dest="visibility [38733,38741]"/>
  <match src="): ) [81163,81164]" dest="): ) [71779,71780]"/>
  <match src="identifier: c [1978,1979]" dest="identifier: c [2032,2033]"/>
  <match src="): ) [13454,13455]" dest="): ) [23130,23131]"/>
  <match src=".: . [103225,103226]" dest=".: . [41043,41044]"/>
  <match src="string: string [5354,5360]" dest="string: string [5408,5414]"/>
  <match src="visibility [94797,94803]" dest="visibility [32583,32589]"/>
  <match src="parameter [32604,32616]" dest="parameter [48276,48288]"/>
  <match src="user_defined_type [79762,79773]" dest="user_defined_type [69491,69498]"/>
  <match src="}: } [82947,82948]" dest="}: } [71692,71693]"/>
  <match src=",: , [100151,100152]" dest=",: , [37969,37970]"/>
  <match src="identifier: totalBondedAt [96248,96261]" dest="identifier: totalBondedAt [34034,34047]"/>
  <match src="call_argument [80918,80923]" dest="call_argument [71027,71032]"/>
  <match src="identifier: abi [30729,30732]" dest="identifier: abi [46401,46404]"/>
  <match src="uint256: uint256 [67221,67228]" dest="uint256: uint256 [62440,62447]"/>
  <match src="function: function [30493,30501]" dest="function: function [46165,46173]"/>
  <match src="parameter [33188,33200]" dest="parameter [48860,48872]"/>
  <match src="return_type_definition [13438,13455]" dest="return_type_definition [23114,23131]"/>
  <match src="return_type_definition [97320,97337]" dest="return_type_definition [35106,35123]"/>
  <match src="comment: // populate the most-significant character [37728,37770]" dest="comment: // populate the most-significant character [53400,53442]"/>
  <match src="parameter [93216,93223]" dest="parameter [31002,31009]"/>
  <match src=".: . [92941,92942]" dest=".: . [30727,30728]"/>
  <match src="(: ( [45186,45187]" dest="(: ( [14440,14441]"/>
  <match src="uint256: uint256 [50163,50170]" dest="uint256: uint256 [25602,25609]"/>
  <match src=",: , [30252,30253]" dest=",: , [45924,45925]"/>
  <match src="primitive_type [96124,96131]" dest="primitive_type [33910,33917]"/>
  <match src="function_definition [84180,84401]" dest="function_definition [58865,59048]"/>
  <match src="type_name [4080,4087]" dest="type_name [4134,4141]"/>
  <match src="identifier: decimals [52813,52821]" dest="identifier: decimals [19807,19815]"/>
  <match src="block_statement [33365,33923]" dest="block_statement [49037,49595]"/>
  <match src="false: false [99100,99105]" dest="false: false [36918,36923]"/>
  <match src="variable_declaration_statement [36178,36214]" dest="variable_declaration_statement [51850,51886]"/>
  <match src="}: } [77150,77151]" dest="}: } [61180,61181]"/>
  <match src=".: . [101211,101212]" dest=".: . [39029,39030]"/>
  <match src="(: ( [53993,53994]" dest="(: ( [20987,20988]"/>
  <match src="function_body [29365,29796]" dest="function_body [45037,45468]"/>
  <match src="): ) [32725,32726]" dest="): ) [48397,48398]"/>
  <match src="primitive_type [92382,92389]" dest="primitive_type [30168,30175]"/>
  <match src="number_literal: 0 [10267,10268]" dest="number_literal: 0 [10366,10367]"/>
  <match src="identifier: COLON [30161,30166]" dest="identifier: COLON [45833,45838]"/>
  <match src="identifier: Status [94485,94491]" dest="identifier: Status [32271,32277]"/>
  <match src="parameter [99492,99506]" dest="parameter [37310,37324]"/>
  <match src="yul_identifier [34791,34797]" dest="yul_identifier [50463,50469]"/>
  <match src="identifier: sub [7621,7624]" dest="identifier: sub [7720,7723]"/>
  <match src="(: ( [54587,54588]" dest="(: ( [21581,21582]"/>
  <match src="identifier: ASCII_ZERO [36291,36301]" dest="identifier: ASCII_ZERO [51963,51973]"/>
  <match src="(: ( [95334,95335]" dest="(: ( [33120,33121]"/>
  <match src="parameter [96877,96894]" dest="parameter [34663,34680]"/>
  <match src="expression_statement [65019,65142]" dest="expression_statement [62277,62394]"/>
  <match src="(: ( [13029,13030]" dest="(: ( [22705,22706]"/>
  <match src="call_argument [21369,21375]" dest="call_argument [58979,58985]"/>
  <match src="primitive_type [69920,69927]" dest="primitive_type [65072,65079]"/>
  <match src="identifier: file [29856,29860]" dest="identifier: file [45528,45532]"/>
  <match src="state_mutability [54494,54498]" dest="state_mutability [21488,21492]"/>
  <match src="bytes32: bytes32 [30560,30567]" dest="bytes32: bytes32 [46232,46239]"/>
  <match src="parameter [102568,102581]" dest="parameter [40386,40399]"/>
  <match src="]: ] [94664,94665]" dest="]: ] [32450,32451]"/>
  <match src="function_body [4737,4800]" dest="function_body [4791,4854]"/>
  <match src="call_expression [95362,95482]" dest="call_expression [33148,33268]"/>
  <match src="comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [11200,11708]" dest="comment: // File: @openzeppelin/contracts/math/SafeMath.sol [0,50]"/>
  <match src="(: ( [30681,30682]" dest="(: ( [46353,46354]"/>
  <match src="address: address [100240,100247]" dest="address: address [38058,38065]"/>
  <match src="function_body [1919,2016]" dest="function_body [1973,2070]"/>
  <match src="type_name [1859,1865]" dest="type_name [1913,1919]"/>
  <match src="identifier: expiringCoupons [95938,95953]" dest="identifier: expiringCoupons [33724,33739]"/>
  <match src="primitive_type [95847,95854]" dest="primitive_type [33633,33640]"/>
  <match src="return: return [37877,37883]" dest="return: return [53549,53555]"/>
  <match src="member_expression [7610,7624]" dest="member_expression [7709,7723]"/>
  <match src="member_expression [104547,104582]" dest="member_expression [42365,42400]"/>
  <match src="returns: returns [54499,54506]" dest="returns: returns [21493,21500]"/>
  <match src=".: . [95115,95116]" dest=".: . [32901,32902]"/>
  <match src="{: { [45358,45359]" dest="{: { [14612,14613]"/>
  <match src="parameter [908,917]" dest="parameter [962,971]"/>
  <match src="parameter [66947,66966]" dest="parameter [66894,66913]"/>
  <match src="(: ( [6972,6973]" dest="(: ( [7071,7072]"/>
  <match src="(: ( [52695,52696]" dest="(: ( [19689,19690]"/>
  <match src=".: . [82895,82896]" dest=".: . [71646,71647]"/>
  <match src="internal: internal [7527,7535]" dest="internal: internal [7626,7634]"/>
  <match src="state_mutability [10472,10476]" dest="state_mutability [10571,10575]"/>
  <match src="identifier: msg [78498,78501]" dest="identifier: msg [81978,81981]"/>
  <match src="type_name [53755,53759]" dest="type_name [20749,20753]"/>
  <match src="): ) [10461,10462]" dest="): ) [10560,10561]"/>
  <match src="identifier: transfer [98765,98773]" dest="identifier: transfer [36583,36591]"/>
  <match src="event_definition [26578,26621]" dest="event_definition [60467,60560]"/>
  <match src="state_mutability [45557,45561]" dest="state_mutability [14811,14815]"/>
  <match src="return_type_definition [46366,46383]" dest="return_type_definition [15620,15637]"/>
  <match src="(: ( [99324,99325]" dest="(: ( [37142,37143]"/>
  <match src="identifier: Upgradeable [107555,107566]" dest="identifier: Upgradeable [76955,76966]"/>
  <match src="identifier: _state [104585,104591]" dest="identifier: _state [42403,42409]"/>
  <match src="uint256: uint256 [80318,80325]" dest="uint256: uint256 [69874,69881]"/>
  <match src="primitive_type [54732,54736]" dest="primitive_type [21726,21730]"/>
  <match src="function_definition [102360,102525]" dest="function_definition [40178,40343]"/>
  <match src="primitive_type [53589,53594]" dest="primitive_type [20583,20588]"/>
  <match src="primitive_type [15043,15050]" dest="primitive_type [24719,24726]"/>
  <match src="identifier: D256 [7560,7564]" dest="identifier: D256 [7659,7663]"/>
  <match src="identifier: totalBonded [81751,81762]" dest="identifier: totalBonded [70931,70942]"/>
  <match src="comment: /*     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [62717,63370]" dest="comment: /*     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [28927,29580]"/>
  <match src="(: ( [10072,10073]" dest="(: ( [10171,10172]"/>
  <match src="{: { [95095,95096]" dest="{: { [32881,32882]"/>
  <match src="(: ( [82232,82233]" dest="(: ( [80189,80190]"/>
  <match src="event_paramater [80507,80523]" dest="event_paramater [77185,77199]"/>
  <match src="primitive_type [75108,75115]" dest="primitive_type [55007,55014]"/>
  <match src="identifier: value [9480,9485]" dest="identifier: value [9579,9584]"/>
  <match src="): ) [92978,92979]" dest="): ) [30764,30765]"/>
  <match src="return: return [11121,11127]" dest="return: return [11220,11226]"/>
  <match src="): ) [99056,99057]" dest="): ) [36874,36875]"/>
  <match src="): ) [82910,82911]" dest="): ) [71661,71662]"/>
  <match src="number_literal: 1 [82916,82917]" dest="number_literal: 1 [71667,71668]"/>
  <match src="): ) [98807,98808]" dest="): ) [36625,36626]"/>
  <match src="state_mutability [44692,44696]" dest="state_mutability [13946,13950]"/>
  <match src="call_argument [97367,97376]" dest="call_argument [35153,35162]"/>
  <match src="type_name [80474,80481]" dest="type_name [60652,60659]"/>
  <match src="): ) [77035,77036]" dest="): ) [60779,60780]"/>
  <match src=".: . [83177,83178]" dest=".: . [79897,79898]"/>
  <match src="identifier: totalBonded [72985,72996]" dest="identifier: balance [71833,71840]"/>
  <match src="): ) [6836,6837]" dest="): ) [6935,6936]"/>
  <match src="member_expression [100293,100325]" dest="member_expression [38111,38143]"/>
  <match src="identifier: recordedVote [96560,96572]" dest="identifier: recordedVote [34346,34358]"/>
  <match src="array_access [94845,94893]" dest="array_access [32631,32679]"/>
  <match src="uint: uint [53574,53578]" dest="uint: uint [20568,20572]"/>
  <match src="visibility [100594,100602]" dest="visibility [38412,38420]"/>
  <match src="call_argument [100821,100822]" dest="call_argument [38639,38640]"/>
  <match src="identifier: slot [91086,91090]" dest="identifier: slot [76158,76162]"/>
  <match src="comment: /**      * Epoch      */ [102806,102832]" dest="comment: /**      * Epoch      */ [40624,40650]"/>
  <match src="): ) [9036,9037]" dest="): ) [9135,9136]"/>
  <match src="=: = [67245,67246]" dest="=: = [62461,62462]"/>
  <match src="(: ( [72174,72175]" dest="(: ( [58299,58300]"/>
  <match src="): ) [81998,81999]" dest="): ) [55709,55710]"/>
  <match src=",: , [29912,29913]" dest=",: , [45584,45585]"/>
  <match src="[: [ [104602,104603]" dest="[: [ [42420,42421]"/>
  <match src="string_literal [83402,83433]" dest="string_literal [72067,72098]"/>
  <match src="member_expression [95362,95465]" dest="member_expression [33148,33251]"/>
  <match src="identifier: asUint256 [10550,10559]" dest="identifier: asUint256 [10649,10658]"/>
  <match src="type_name [44389,44396]" dest="type_name [13643,13650]"/>
  <match src=",: , [20410,20411]" dest=",: , [63499,63500]"/>
  <match src="(: ( [6697,6698]" dest="(: ( [6796,6797]"/>
  <match src="call_argument [94301,94306]" dest="call_argument [32087,32092]"/>
  <match src="identifier: candidate [105058,105067]" dest="identifier: candidate [42876,42885]"/>
  <match src="{: { [99672,99673]" dest="{: { [37490,37491]"/>
  <match src="identifier: self [9681,9685]" dest="identifier: self [9780,9784]"/>
  <match src="address: address [98774,98781]" dest="address: address [36592,36599]"/>
  <match src="function_definition [54888,54935]" dest="function_definition [21882,21929]"/>
  <match src="call_argument [5441,5453]" dest="call_argument [5495,5507]"/>
  <match src="type_name [54256,54263]" dest="type_name [21250,21257]"/>
  <match src="call_expression [107938,107946]" dest="call_expression [54821,54829]"/>
  <match src="uint256: uint256 [103361,103368]" dest="uint256: uint256 [41179,41186]"/>
  <match src="): ) [83443,83444]" dest="): ) [77604,77605]"/>
  <match src="state_variable_declaration [43155,43209]" dest="state_variable_declaration [12409,12463]"/>
  <match src="string_literal [51644,51687]" dest="string_literal [64064,64102]"/>
  <match src="expression_statement [78472,78528]" dest="expression_statement [81964,81997]"/>
  <match src="primitive_type [80377,80384]" dest="primitive_type [69760,69767]"/>
  <match src="call_argument [76134,76140]" dest="call_argument [17773,17779]"/>
  <match src="type_name [28799,28803]" dest="type_name [44471,44475]"/>
  <match src="return_type_definition [99067,99081]" dest="return_type_definition [36885,36899]"/>
  <match src="function_definition [92185,92271]" dest="function_definition [29971,30057]"/>
  <match src="assignment_expression [99805,99828]" dest="assignment_expression [37623,37646]"/>
  <match src="): ) [101289,101290]" dest="): ) [39107,39108]"/>
  <match src="uint256: uint256 [43833,43840]" dest="uint256: uint256 [13087,13094]"/>
  <match src="primitive_type [80303,80310]" dest="primitive_type [69859,69866]"/>
  <match src=".: . [95439,95440]" dest=".: . [33225,33226]"/>
  <match src="]: ] [96202,96203]" dest="]: ] [33988,33989]"/>
  <match src="byte: byte [37313,37317]" dest="byte: byte [52985,52989]"/>
  <match src="identifier: reserve1 [54343,54351]" dest="identifier: reserve1 [21337,21345]"/>
  <match src="call_argument [33734,33742]" dest="call_argument [49406,49414]"/>
  <match src="parameter [53181,53191]" dest="parameter [20175,20185]"/>
  <match src=",: , [9119,9120]" dest=",: , [9218,9219]"/>
  <match src="event: event [51772,51777]" dest="event: event [60566,60571]"/>
  <match src="primitive_type [16503,16510]" dest="primitive_type [81862,81869]"/>
  <match src="]: ] [105145,105146]" dest="]: ] [42963,42964]"/>
  <match src="identifier: msg [82394,82397]" dest="identifier: msg [78168,78171]"/>
  <match src="identifier: sub [8864,8867]" dest="identifier: sub [8963,8966]"/>
  <match src="(: ( [9004,9005]" dest="(: ( [9103,9104]"/>
  <match src="(: ( [102221,102222]" dest="(: ( [40039,40040]"/>
  <match src="return_statement [92697,92706]" dest="return_statement [30483,30492]"/>
  <match src="return_statement [9225,9281]" dest="return_statement [9324,9380]"/>
  <match src="): ) [101577,101578]" dest="): ) [39395,39396]"/>
  <match src="public: public [96408,96414]" dest="public: public [34194,34200]"/>
  <match src="function_definition [80813,81095]" dest="function_definition [70401,70668]"/>
  <match src="identifier: candidate [104906,104915]" dest="identifier: candidate [42724,42733]"/>
  <match src="memory: memory [6937,6943]" dest="memory: memory [7036,7042]"/>
  <match src="identifier: temp [8489,8493]" dest="identifier: temp [8588,8592]"/>
  <match src="public: public [95680,95686]" dest="public: public [33466,33472]"/>
  <match src="identifier: amount [51432,51438]" dest="identifier: amount [55106,55112]"/>
  <match src="event_definition [53637,53700]" dest="event_definition [20631,20694]"/>
  <match src="identifier: D256 [6816,6820]" dest="identifier: D256 [6915,6919]"/>
  <match src="identifier: coupons [93587,93594]" dest="identifier: coupons [31373,31380]"/>
  <match src="identifier: epochs [96190,96196]" dest="identifier: epochs [33976,33982]"/>
  <match src="}: } [87250,87251]" dest="}: } [27379,27380]"/>
  <match src="identifier: bond [81403,81407]" dest="identifier: bond [70685,70689]"/>
  <match src="parameter [8192,8203]" dest="parameter [8291,8302]"/>
  <match src="primitive_type [97055,97062]" dest="primitive_type [34841,34848]"/>
  <match src="(: ( [84659,84660]" dest="(: ( [79082,79083]"/>
  <match src=":: : [7840,7841]" dest=":: : [7939,7940]"/>
  <match src="identifier: amount [76771,76777]" dest="identifier: amount [58451,58457]"/>
  <match src="parameter [101163,101183]" dest="parameter [38981,39001]"/>
  <match src="(: ( [102567,102568]" dest="(: ( [40385,40386]"/>
  <match src="primitive_type [54828,54835]" dest="primitive_type [21822,21829]"/>
  <match src="uint256: uint256 [66439,66446]" dest="uint256: uint256 [62406,62413]"/>
  <match src="function: function [94179,94187]" dest="function: function [31965,31973]"/>
  <match src="type_name [53245,53252]" dest="type_name [20239,20246]"/>
  <match src=",: , [83368,83369]" dest=",: , [77543,77544]"/>
  <match src="): ) [67053,67054]" dest="): ) [66449,66450]"/>
  <match src="visibility [45869,45877]" dest="visibility [15123,15131]"/>
  <match src="pure: pure [10353,10357]" dest="pure: pure [10452,10456]"/>
  <match src="visibility [89830,89837]" dest="visibility [74902,74909]"/>
  <match src="identifier: getOraclePoolRatio [46894,46912]" dest="identifier: getOraclePoolRatio [16148,16166]"/>
  <match src="(: ( [98888,98889]" dest="(: ( [36706,36707]"/>
  <match src="string [65112,65131]" dest="string [62365,62382]"/>
  <match src="function_definition [46885,46990]" dest="function_definition [16139,16244]"/>
  <match src="parameter [35014,35027]" dest="parameter [50686,50699]"/>
  <match src="external: external [53121,53129]" dest="external: external [20115,20123]"/>
  <match src="type_name [43568,43575]" dest="type_name [12822,12829]"/>
  <match src="identifier: staged [101264,101270]" dest="identifier: staged [39082,39088]"/>
  <match src="&quot;: &quot; [83119,83120]" dest="&quot;: &quot; [58556,58557]"/>
  <match src="identifier: votesFor [97280,97288]" dest="identifier: votesFor [35066,35074]"/>
  <match src="): ) [84906,84907]" dest="): ) [79378,79379]"/>
  <match src="struct: struct [87520,87526]" dest="struct: struct [27649,27655]"/>
  <match src="comment: /**      * Getters      */ [44518,44546]" dest="comment: /**      * Getters      */ [13772,13800]"/>
  <match src="call_expression [80935,81015]" dest="call_expression [70532,70615]"/>
  <match src="call_argument [1443,1444]" dest="call_argument [1497,1498]"/>
  <match src=".: . [82628,82629]" dest=".: . [82635,82636]"/>
  <match src="identifier: stringify [31630,31639]" dest="identifier: stringify [47302,47311]"/>
  <match src="view: view [54242,54246]" dest="view: view [21236,21240]"/>
  <match src="visibility [82103,82111]" dest="visibility [71240,71248]"/>
  <match src="(: ( [80658,80659]" dest="(: ( [70273,70274]"/>
  <match src="identifier: div [8253,8256]" dest="identifier: div [8352,8355]"/>
  <match src="function_body [99903,99987]" dest="function_body [37721,37805]"/>
  <match src=".: . [104965,104966]" dest=".: . [42783,42784]"/>
  <match src=".: . [95611,95612]" dest=".: . [33397,33398]"/>
  <match src="(: ( [97439,97440]" dest="(: ( [35225,35226]"/>
  <match src=".: . [10913,10914]" dest=".: . [11012,11013]"/>
  <match src="identifier: account [104889,104896]" dest="identifier: account [42707,42714]"/>
  <match src="{: { [97338,97339]" dest="{: { [35124,35125]"/>
  <match src="function_definition [45007,45122]" dest="function_definition [14261,14376]"/>
  <match src="uint256: uint256 [78208,78215]" dest="uint256: uint256 [82416,82423]"/>
  <match src="): ) [103760,103761]" dest="): ) [41578,41579]"/>
  <match src=",: , [30166,30167]" dest=",: , [45838,45839]"/>
  <match src="): ) [6791,6792]" dest="): ) [6890,6891]"/>
  <match src="assignment_expression [102460,102517]" dest="assignment_expression [40278,40335]"/>
  <match src="identifier: z [36055,36056]" dest="identifier: z [51727,51728]"/>
  <match src="call_expression [93678,93686]" dest="call_expression [31464,31472]"/>
  <match src="type_name [46255,46262]" dest="type_name [15509,15516]"/>
  <match src="identifier: value [82096,82101]" dest="identifier: value [71735,71740]"/>
  <match src="identifier: bstr [35765,35769]" dest="identifier: bstr [51437,51441]"/>
  <match src="-: - [36665,36666]" dest="-: - [52337,52338]"/>
  <match src="): ) [94988,94989]" dest="): ) [32774,32775]"/>
  <match src="identifier: initialize [54897,54907]" dest="identifier: initialize [21891,21901]"/>
  <match src=",: , [101281,101282]" dest=",: , [39099,39100]"/>
  <match src="return_statement [94329,94338]" dest="return_statement [32115,32124]"/>
  <match src=",: , [106719,106720]" dest=",: , [68648,68649]"/>
  <match src="identifier: totalSupply [94011,94022]" dest="identifier: totalSupply [31797,31808]"/>
  <match src="parameter [13049,13063]" dest="parameter [22725,22739]"/>
  <match src="struct_member [88407,88423]" dest="struct_member [28536,28552]"/>
  <match src="return_statement [94072,94081]" dest="return_statement [31858,31867]"/>
  <match src="]: ] [34606,34607]" dest="]: ] [50278,50279]"/>
  <match src="indexed: indexed [80171,80178]" dest="indexed: indexed [69686,69693]"/>
  <match src="identifier: input [36956,36961]" dest="identifier: input [52628,52633]"/>
  <match src="(: ( [92515,92516]" dest="(: ( [30301,30302]"/>
  <match src="identifier: to [53785,53787]" dest="identifier: to [20779,20781]"/>
  <match src="event_paramater [14806,14826]" dest="event_paramater [24482,24502]"/>
  <match src="visibility [31941,31949]" dest="visibility [47613,47621]"/>
  <match src=".: . [96345,96346]" dest=".: . [34131,34132]"/>
  <match src="address: address [43097,43104]" dest="address: address [12351,12358]"/>
  <match src="identifier: payloadA [30593,30601]" dest="identifier: payloadA [46265,46273]"/>
  <match src="return_type_definition [95692,95709]" dest="return_type_definition [33478,33495]"/>
  <match src="uint256: uint256 [88280,88287]" dest="uint256: uint256 [28409,28416]"/>
  <match src=",: , [54333,54334]" dest=",: , [21327,21328]"/>
  <match src="indexed: indexed [51798,51805]" dest="indexed: indexed [60595,60602]"/>
  <match src="type_name [50223,50230]" dest="type_name [25662,25669]"/>
  <match src="expression_statement [23908,23935]" dest="expression_statement [55347,55382]"/>
  <match src="): ) [33101,33102]" dest="): ) [48773,48774]"/>
  <match src="identifier: amount [99050,99056]" dest="identifier: amount [36868,36874]"/>
  <match src="number_literal: 0 [37262,37263]" dest="number_literal: 0 [52934,52935]"/>
  <match src="primitive_type [48495,48502]" dest="primitive_type [17212,17219]"/>
  <match src="call_argument [83068,83085]" dest="call_argument [58505,58522]"/>
  <match src="identifier: totalRewardedWithPhantom [83536,83560]" dest="identifier: totalRedeemable [61457,61472]"/>
  <match src="uint256: uint256 [42945,42952]" dest="uint256: uint256 [12199,12206]"/>
  <match src=".: . [81861,81862]" dest=".: . [72049,72050]"/>
  <match src="{: { [22632,22633]" dest="{: { [63232,63233]"/>
  <match src="parameter [52721,52734]" dest="parameter [19715,19728]"/>
  <match src="): ) [97200,97201]" dest="): ) [34986,34987]"/>
  <match src="}: } [29211,29212]" dest="}: } [44883,44884]"/>
  <match src="): ) [30297,30298]" dest="): ) [45969,45970]"/>
  <match src="call_argument [32346,32365]" dest="call_argument [48018,48037]"/>
  <match src="): ) [36072,36073]" dest="): ) [51744,51745]"/>
  <match src="type_name [34633,34640]" dest="type_name [50305,50312]"/>
  <match src="state_variable_declaration [80041,80080]" dest="state_variable_declaration [69553,69595]"/>
  <match src="function: function [93906,93914]" dest="function: function [31692,31700]"/>
  <match src="return_statement [34950,34970]" dest="return_statement [50622,50642]"/>
  <match src="identifier: totalSupply [103035,103046]" dest="identifier: totalSupply [40853,40864]"/>
  <match src="call_argument [80651,80664]" dest="call_argument [70266,70279]"/>
  <match src="number_literal: 1 [36321,36322]" dest="number_literal: 1 [51993,51994]"/>
  <match src="call_argument [21422,21428]" dest="call_argument [63437,63443]"/>
  <match src="uint256: uint256 [43512,43519]" dest="uint256: uint256 [12766,12773]"/>
  <match src="primitive_type [30560,30567]" dest="primitive_type [46232,46239]"/>
  <match src="): ) [93552,93553]" dest="): ) [31338,31339]"/>
  <match src="member_expression [100614,100629]" dest="member_expression [38432,38447]"/>
  <match src=",: , [81813,81814]" dest=",: , [71577,71578]"/>
  <match src="call_argument [9446,9494]" dest="call_argument [9545,9593]"/>
  <match src="call_expression [106779,106808]" dest="call_expression [68708,68737]"/>
  <match src=",: , [9335,9336]" dest=",: , [9434,9435]"/>
  <match src="}: } [50263,50264]" dest="}: } [25702,25703]"/>
  <match src="type_name [87768,87775]" dest="type_name [27897,27904]"/>
  <match src="function_definition [100848,101088]" dest="function_definition [38666,38906]"/>
  <match src="variable_declaration [67006,67030]" dest="variable_declaration [66414,66430]"/>
  <match src="public: public [62613,62619]" dest="public: public [26482,26488]"/>
  <match src="binary_expression [36804,36814]" dest="binary_expression [52476,52486]"/>
  <match src="member_expression [94109,94150]" dest="member_expression [31895,31936]"/>
  <match src="primitive_type [98940,98944]" dest="primitive_type [36758,36762]"/>
  <match src="visibility [52952,52960]" dest="visibility [19946,19954]"/>
  <match src="uint256: uint256 [51177,51184]" dest="uint256: uint256 [54785,54792]"/>
  <match src="state_mutability [41266,41270]" dest="state_mutability [19120,19124]"/>
  <match src="(: ( [51635,51636]" dest="(: ( [64035,64036]"/>
  <match src="call_argument [4759,4760]" dest="call_argument [4813,4814]"/>
  <match src="call_argument [30772,30796]" dest="call_argument [46444,46468]"/>
  <match src="identifier: SafeMath [6338,6346]" dest="identifier: SafeMath [6437,6445]"/>
  <match src="identifier: RPAREN [31676,31682]" dest="identifier: RPAREN [47348,47354]"/>
  <match src="[: [ [97237,97238]" dest="[: [ [35023,35024]"/>
  <match src="): ) [52597,52598]" dest="): ) [19591,19592]"/>
  <match src="parameter [76763,76777]" dest="parameter [58443,58457]"/>
  <match src=".: . [84230,84231]" dest=".: . [58225,58226]"/>
  <match src="call_argument [104433,104439]" dest="call_argument [42251,42257]"/>
  <match src="function: function [45130,45138]" dest="function: function [14384,14392]"/>
  <match src="state_variable_declaration [44455,44503]" dest="state_variable_declaration [13709,13757]"/>
  <match src="identifier: Constants [96462,96471]" dest="identifier: Constants [34248,34257]"/>
  <match src="member_expression [9478,9485]" dest="member_expression [9577,9584]"/>
  <match src="identifier: self [9970,9974]" dest="identifier: self [10069,10073]"/>
  <match src="=: = [99825,99826]" dest="=: = [37643,37644]"/>
  <match src="function_definition [101382,101762]" dest="function_definition [39200,39580]"/>
  <match src="identifier: totalSupply [94151,94162]" dest="identifier: totalSupply [31937,31948]"/>
  <match src="return: return [94102,94108]" dest="return: return [31888,31894]"/>
  <match src="identifier: value [7603,7608]" dest="identifier: value [7702,7707]"/>
  <match src="identifier: FOUR_BIT_MASK [36827,36840]" dest="identifier: FOUR_BIT_MASK [52499,52512]"/>
  <match src="uint256: uint256 [46938,46945]" dest="uint256: uint256 [16192,16199]"/>
  <match src="return_statement [93128,93157]" dest="return_statement [30914,30943]"/>
  <match src=",: , [52560,52561]" dest=",: , [19554,19555]"/>
  <match src="return: return [96937,96943]" dest="return: return [34723,34729]"/>
  <match src="call_struct_argument [46685,46711]" dest="call_struct_argument [15939,15965]"/>
  <match src="number_literal: 154e16 [42992,42998]" dest="number_literal: 154e16 [12246,12252]"/>
  <match src="identifier: balance [100743,100750]" dest="identifier: balance [38561,38568]"/>
  <match src="): ) [107966,107967]" dest="): ) [66975,66976]"/>
  <match src="call_argument [100813,100823]" dest="call_argument [38631,38641]"/>
  <match src="type_name [7946,7953]" dest="type_name [8045,8052]"/>
  <match src="primitive_type [102616,102622]" dest="primitive_type [40434,40440]"/>
  <match src="returns: returns [93960,93967]" dest="returns: returns [31746,31753]"/>
  <match src="external: external [53193,53201]" dest="external: external [20187,20195]"/>
  <match src=",: , [14553,14554]" dest=",: , [24229,24230]"/>
  <match src="type_name [95665,95672]" dest="type_name [33451,33458]"/>
  <match src="type_name [95847,95854]" dest="type_name [33633,33640]"/>
  <match src="call_argument [81263,81268]" dest="call_argument [71972,71977]"/>
  <match src="state_mutability [93955,93959]" dest="state_mutability [31741,31745]"/>
  <match src="function_body [45074,45122]" dest="function_body [14328,14376]"/>
  <match src="identifier: zero [6612,6616]" dest="identifier: zero [6711,6715]"/>
  <match src="variable_declaration [82448,82467]" dest="variable_declaration [82487,82500]"/>
  <match src="identifier: amount [75956,75962]" dest="identifier: amount [59084,59090]"/>
  <match src="address: address [100813,100820]" dest="address: address [38631,38638]"/>
  <match src="type_name [43924,43931]" dest="type_name [13178,13185]"/>
  <match src="memory: memory [52728,52734]" dest="memory: memory [19722,19728]"/>
  <match src="identifier: value [7847,7852]" dest="identifier: value [7946,7951]"/>
  <match src="identifier: result [36797,36803]" dest="identifier: result [52469,52475]"/>
  <match src="visibility [8350,8358]" dest="visibility [8449,8457]"/>
  <match src=".: . [82498,82499]" dest=".: . [71378,71379]"/>
  <match src=",: , [54351,54352]" dest=",: , [21345,21346]"/>
  <match src="identifier: amount [99633,99639]" dest="identifier: amount [37451,37457]"/>
  <match src="parameter [92112,92125]" dest="parameter [29898,29911]"/>
  <match src="visibility [16399,16406]" dest="visibility [66624,66631]"/>
  <match src="type_name [88053,88077]" dest="type_name [28182,28206]"/>
  <match src="call_argument [75585,75591]" dest="call_argument [55587,55593]"/>
  <match src="constant: constant [80057,80065]" dest="constant: constant [69569,69577]"/>
  <match src="state_variable_declaration [28635,28663]" dest="state_variable_declaration [44307,44335]"/>
  <match src="number_literal: 12 [44135,44137]" dest="number_literal: 12 [13389,13391]"/>
  <match src="identifier: epoch [88475,88480]" dest="identifier: epoch [28604,28609]"/>
  <match src="identifier: length [35406,35412]" dest="identifier: length [51078,51084]"/>
  <match src="pure: pure [7773,7777]" dest="pure: pure [7872,7876]"/>
  <match src="primitive_type [33405,33411]" dest="primitive_type [49077,49083]"/>
  <match src="address: address [103934,103941]" dest="address: address [41752,41759]"/>
  <match src="comment: /**  * @dev Optional functions from the ERC20 standard.  */ [23951,24012]" dest="comment: // File: sushiswap/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol [19414,19482]"/>
  <match src="address: address [53169,53176]" dest="address: address [20163,20170]"/>
  <match src=",: , [32208,32209]" dest=",: , [47880,47881]"/>
  <match src="identifier: a [2665,2666]" dest="identifier: a [2719,2720]"/>
  <match src="uint256: uint256 [67596,67603]" dest="uint256: uint256 [58605,58612]"/>
  <match src="call_expression [104183,104231]" dest="call_expression [42001,42049]"/>
  <match src="call_expression [8242,8259]" dest="call_expression [8341,8358]"/>
  <match src="struct_member [87569,87584]" dest="struct_member [27698,27713]"/>
  <match src="call_expression [30855,30881]" dest="call_expression [46527,46553]"/>
  <match src="internal: internal [8350,8358]" dest="internal: internal [8449,8457]"/>
  <match src="): ) [82939,82940]" dest="): ) [71684,71685]"/>
  <match src="returns: returns [10064,10071]" dest="returns: returns [10163,10170]"/>
  <match src="type_name [87594,87601]" dest="type_name [27723,27730]"/>
  <match src="private: private [64286,64293]" dest="private: private [65279,65286]"/>
  <match src="member_expression [67335,67348]" dest="member_expression [80796,80809]"/>
  <match src="member_expression [106213,106227]" dest="member_expression [68142,68156]"/>
  <match src="return: return [95188,95194]" dest="return: return [32974,32980]"/>
  <match src="(: ( [62700,62701]" dest="(: ( [26569,26570]"/>
  <match src="primitive_type [52539,52546]" dest="primitive_type [19533,19540]"/>
  <match src="type_name [52662,52666]" dest="type_name [19656,19660]"/>
  <match src="view: view [53352,53356]" dest="view: view [20346,20350]"/>
  <match src="identifier: getGovernanceQuorum [45526,45545]" dest="identifier: getGovernanceQuorum [14780,14799]"/>
  <match src="visibility [46462,46470]" dest="visibility [15716,15724]"/>
  <match src="): ) [31049,31050]" dest="): ) [46721,46722]"/>
  <match src="identifier: candidates [97652,97662]" dest="identifier: candidates [35438,35448]"/>
  <match src="==: == [10116,10118]" dest="==: == [10215,10217]"/>
  <match src="external: external [54067,54075]" dest="external: external [21061,21069]"/>
  <match src="binary_expression [83068,83085]" dest="binary_expression [58505,58522]"/>
  <match src="member_expression [103538,103552]" dest="member_expression [41356,41370]"/>
  <match src="bool: bool [98940,98944]" dest="bool: bool [36758,36762]"/>
  <match src="identifier: amount [104224,104230]" dest="identifier: amount [42042,42048]"/>
  <match src="type_name [3881,3888]" dest="type_name [3935,3942]"/>
  <match src=",: , [100255,100256]" dest=",: , [38073,38074]"/>
  <match src="primitive_type [54588,54595]" dest="primitive_type [21582,21589]"/>
  <match src="identifier: amount [104116,104122]" dest="identifier: amount [41934,41940]"/>
  <match src="type_name [35376,35381]" dest="type_name [51048,51053]"/>
  <match src="identifier: dollar [92765,92771]" dest="identifier: dollar [30551,30557]"/>
  <match src="identifier: GOVERNANCE_SUPER_MAJORITY [43786,43811]" dest="identifier: GOVERNANCE_SUPER_MAJORITY [13040,13065]"/>
  <match src="{: { [87859,87860]" dest="{: { [27988,27989]"/>
  <match src=".: . [11098,11099]" dest=".: . [11197,11198]"/>
  <match src=".: . [93257,93258]" dest=".: . [31043,31044]"/>
  <match src="&quot;: &quot; [81013,81014]" dest="&quot;: &quot; [70613,70614]"/>
  <match src="identifier: sub [7464,7467]" dest="identifier: sub [7563,7566]"/>
  <match src="return_type_definition [92992,93009]" dest="return_type_definition [30778,30795]"/>
  <match src=".: . [8829,8830]" dest=".: . [8928,8929]"/>
  <match src=",: , [22878,22879]" dest=",: , [63435,63436]"/>
  <match src="parameter [100045,100065]" dest="parameter [37863,37883]"/>
  <match src="(: ( [108260,108261]" dest="(: ( [55579,55580]"/>
  <match src="identifier: initialized [105204,105215]" dest="identifier: initialized [43022,43033]"/>
  <match src="identifier: Claim [80215,80220]" dest="identifier: Commit [77319,77325]"/>
  <match src="type_name [29828,29832]" dest="type_name [45500,45504]"/>
  <match src="parameter [3219,3228]" dest="parameter [3273,3282]"/>
  <match src="identifier: amount [50231,50237]" dest="identifier: amount [25670,25676]"/>
  <match src="call_argument [7631,7635]" dest="call_argument [7730,7734]"/>
  <match src="(: ( [8827,8828]" dest="(: ( [8926,8927]"/>
  <match src="identifier: _state [93243,93249]" dest="identifier: _state [31029,31035]"/>
  <match src="return_type_definition [93960,93977]" dest="return_type_definition [31746,31763]"/>
  <match src="function_definition [4670,4800]" dest="function_definition [4724,4854]"/>
  <match src="type_name [95990,95997]" dest="type_name [33776,33783]"/>
  <match src="}: } [44998,44999]" dest="}: } [14252,14253]"/>
  <match src="{: { [20456,20457]" dest="{: { [63560,63561]"/>
  <match src="state_mutability [37969,37973]" dest="state_mutability [53641,53645]"/>
  <match src="type_name [37191,37196]" dest="type_name [52863,52868]"/>
  <match src="identifier: sender [81073,81079]" dest="identifier: sender [70646,70652]"/>
  <match src="?: ? [94677,94678]" dest="?: ? [32463,32464]"/>
  <match src="state_mutability [46618,46622]" dest="state_mutability [15872,15876]"/>
  <match src="(: ( [7862,7863]" dest="(: ( [7961,7962]"/>
  <match src="uint256: uint256 [80831,80838]" dest="uint256: uint256 [70419,70426]"/>
  <match src=".: . [93141,93142]" dest=".: . [30927,30928]"/>
  <match src="&gt;: &gt; [83082,83083]" dest="&gt;: &gt; [58519,58520]"/>
  <match src="identifier: payloadC [31920,31928]" dest="identifier: payloadC [47592,47600]"/>
  <match src="parameter [92420,92427]" dest="parameter [30206,30213]"/>
  <match src="]: ] [37801,37802]" dest="]: ] [53473,53474]"/>
  <match src="public: public [92299,92305]" dest="public: public [30085,30091]"/>
  <match src=":: : [9244,9245]" dest=":: : [9343,9344]"/>
  <match src="visibility [93195,93201]" dest="visibility [30981,30987]"/>
  <match src="if: if [94504,94506]" dest="if: if [32290,32292]"/>
  <match src="): ) [53305,53306]" dest="): ) [20299,20300]"/>
  <match src="identifier: amount [101457,101463]" dest="identifier: amount [39275,39281]"/>
  <match src="function_definition [85853,86480]" dest="function_definition [73160,73787]"/>
  <match src="memory: memory [10980,10986]" dest="memory: memory [11079,11085]"/>
  <match src="internal: internal [99663,99671]" dest="internal: internal [37481,37489]"/>
  <match src="]: ] [102679,102680]" dest="]: ] [40497,40498]"/>
  <match src="(: ( [92977,92978]" dest="(: ( [30763,30764]"/>
  <match src="identifier: Decimal [65483,65490]" dest="identifier: Decimal [18751,18758]"/>
  <match src="identifier: reason [29879,29885]" dest="identifier: reason [45551,45557]"/>
  <match src="member_expression [100712,100733]" dest="member_expression [38530,38551]"/>
  <match src="view: view [97734,97738]" dest="view: view [35520,35524]"/>
  <match src="): ) [33820,33821]" dest="): ) [49492,49493]"/>
  <match src="public: public [96896,96902]" dest="public: public [34682,34688]"/>
  <match src="type_cast_expression [38085,38116]" dest="type_cast_expression [53757,53788]"/>
  <match src="using_directive [16335,16362]" dest="using_directive [60127,60154]"/>
  <match src="user_defined_type [6932,6936]" dest="user_defined_type [7031,7035]"/>
  <match src="pure: pure [53417,53421]" dest="pure: pure [20411,20415]"/>
  <match src="identifier: FILE [49288,49292]" dest="identifier: FILE [78091,78095]"/>
  <match src=".: . [102027,102028]" dest=".: . [39845,39846]"/>
  <match src="type_name [7919,7923]" dest="type_name [8018,8022]"/>
  <match src="array_access [104753,104781]" dest="array_access [42571,42599]"/>
  <match src="expression_statement [1001,1048]" dest="expression_statement [1055,1102]"/>
  <match src=",: , [10757,10758]" dest=",: , [10856,10857]"/>
  <match src="function_definition [54574,54634]" dest="function_definition [21568,21628]"/>
  <match src="visibility [53408,53416]" dest="visibility [20402,20410]"/>
  <match src="internal: internal [7759,7767]" dest="internal: internal [7858,7866]"/>
  <match src="identifier: sub [101271,101274]" dest="identifier: sub [39089,39092]"/>
  <match src="state_mutability [6761,6765]" dest="state_mutability [6860,6864]"/>
  <match src="public: public [93630,93636]" dest="public: public [31416,31422]"/>
  <match src="type_name [52562,52569]" dest="type_name [19556,19563]"/>
  <match src="}: } [87735,87736]" dest="}: } [27864,27865]"/>
  <match src="member_expression [93243,93264]" dest="member_expression [31029,31050]"/>
  <match src="identifier: sender [82690,82696]" dest="identifier: sender [78922,78928]"/>
  <match src="uint256: uint256 [10768,10775]" dest="uint256: uint256 [10867,10874]"/>
  <match src="identifier: Deposit [80094,80101]" dest="identifier: Deposit [69609,69616]"/>
  <match src=",: , [98904,98905]" dest=",: , [36722,36723]"/>
  <match src=",: , [99439,99440]" dest=",: , [37257,37258]"/>
  <match src="identifier: candidates [103789,103799]" dest="identifier: candidates [41607,41617]"/>
  <match src="address: address [53021,53028]" dest="address: address [20015,20022]"/>
  <match src="identifier: IOracle [64177,64184]" dest="identifier: Comptroller [64922,64933]"/>
  <match src=",: , [53587,53588]" dest=",: , [20581,20582]"/>
  <match src="primitive_type [6413,6420]" dest="primitive_type [6512,6519]"/>
  <match src="identifier: spender [102415,102422]" dest="identifier: spender [40233,40240]"/>
  <match src=",: , [80375,80376]" dest=",: , [69758,69759]"/>
  <match src="member_expression [103513,103535]" dest="member_expression [41331,41353]"/>
  <match src="=: = [37661,37662]" dest="=: = [53333,53334]"/>
  <match src="identifier: denominator [10804,10815]" dest="identifier: denominator [10903,10914]"/>
  <match src="(: ( [4048,4049]" dest="(: ( [4102,4103]"/>
  <match src="): ) [53119,53120]" dest="): ) [20113,20114]"/>
  <match src="state_mutability [93637,93641]" dest="state_mutability [31423,31427]"/>
  <match src="(: ( [96155,96156]" dest="(: ( [33941,33942]"/>
  <match src="function: function [10136,10144]" dest="function: function [10235,10243]"/>
  <match src="constant: constant [42961,42969]" dest="constant: constant [12215,12223]"/>
  <match src="member_expression [48290,48316]" dest="member_expression [55060,55081]"/>
  <match src="primitive_type [54335,54342]" dest="primitive_type [21329,21336]"/>
  <match src="variable_declaration_statement [95106,95176]" dest="variable_declaration_statement [32892,32962]"/>
  <match src="identifier: ASCII_ZERO [37278,37288]" dest="identifier: ASCII_ZERO [52950,52960]"/>
  <match src="identifier: z [37847,37848]" dest="identifier: z [53519,53520]"/>
  <match src="function_body [97338,97411]" dest="function_body [35124,35197]"/>
  <match src="struct_member [88280,88295]" dest="struct_member [28409,28424]"/>
  <match src="member_expression [46825,46837]" dest="member_expression [16079,16091]"/>
  <match src="call_argument [49066,49085]" dest="call_argument [55425,55469]"/>
  <match src="user_defined_type [8110,8114]" dest="user_defined_type [8209,8213]"/>
  <match src="function_definition [10429,10533]" dest="function_definition [10528,10632]"/>
  <match src="return: return [46818,46824]" dest="return: return [16072,16078]"/>
  <match src="identifier: amount [23716,23722]" dest="identifier: amount [17248,17254]"/>
  <match src="expression_statement [90386,90423]" dest="expression_statement [75458,75495]"/>
  <match src="for_statement [35524,35891]" dest="for_statement [51196,51563]"/>
  <match src="&quot;: &quot; [21868,21869]" dest="&quot;: &quot; [63801,63802]"/>
  <match src="parameter [75411,75425]" dest="parameter [55748,55762]"/>
  <match src="type_name [52620,52627]" dest="type_name [19614,19621]"/>
  <match src="number_literal: 1 [37308,37309]" dest="number_literal: 1 [52980,52981]"/>
  <match src=".: . [103184,103185]" dest=".: . [41002,41003]"/>
  <match src="identifier: account [75116,75123]" dest="identifier: account [55015,55022]"/>
  <match src=".: . [104420,104421]" dest=".: . [42238,42239]"/>
  <match src="(: ( [94257,94258]" dest="(: ( [32043,32044]"/>
  <match src="primitive_type [14193,14197]" dest="primitive_type [23869,23873]"/>
  <match src="): ) [30658,30659]" dest="): ) [46330,46331]"/>
  <match src=",: , [102581,102582]" dest=",: , [40399,40400]"/>
  <match src="(: ( [20673,20674]" dest="(: ( [62157,62158]"/>
  <match src="member_expression [101589,101602]" dest="member_expression [39407,39420]"/>
  <match src="(: ( [90527,90528]" dest="(: ( [75599,75600]"/>
  <match src="internal: internal [103341,103349]" dest="internal: internal [41159,41167]"/>
  <match src=".: . [100941,100942]" dest=".: . [38759,38760]"/>
  <match src="): ) [72191,72192]" dest="): ) [58313,58314]"/>
  <match src="): ) [95824,95825]" dest="): ) [33610,33611]"/>
  <match src="visibility [75964,75972]" dest="visibility [65323,65331]"/>
  <match src="type_name [14539,14546]" dest="type_name [24215,24222]"/>
  <match src="identifier: value [8818,8823]" dest="identifier: value [8917,8922]"/>
  <match src="function: function [96077,96085]" dest="function: function [33863,33871]"/>
  <match src="identifier: D256 [45735,45739]" dest="identifier: D256 [14989,14993]"/>
  <match src="function_body [72008,72056]" dest="function_body [61959,62052]"/>
  <match src="call_expression [81322,81336]" dest="call_expression [59351,59365]"/>
  <match src="identifier: D256 [46493,46497]" dest="identifier: D256 [15747,15751]"/>
  <match src="expression_statement [103513,103593]" dest="expression_statement [41331,41411]"/>
  <match src="uint256: uint256 [101434,101441]" dest="uint256: uint256 [39252,39259]"/>
  <match src="address: address [54908,54915]" dest="address: address [21902,21909]"/>
  <match src="address: address [53951,53958]" dest="address: address [20945,20952]"/>
  <match src="indexed: indexed [80360,80367]" dest="indexed: indexed [69743,69750]"/>
  <match src="assignment_expression [105122,105168]" dest="assignment_expression [42940,42986]"/>
  <match src="uint256: uint256 [95847,95854]" dest="uint256: uint256 [33633,33640]"/>
  <match src="primitive_type [53849,53853]" dest="primitive_type [20843,20847]"/>
  <match src="identifier: incrementBalanceOfClaimable [82597,82624]" dest="identifier: mintToAccount [82618,82631]"/>
  <match src="parameter [96741,96758]" dest="parameter [34527,34544]"/>
  <match src="call_argument [90614,90631]" dest="call_argument [75686,75703]"/>
  <match src="): ) [32207,32208]" dest="): ) [47879,47880]"/>
  <match src="): ) [52734,52735]" dest="): ) [19728,19729]"/>
  <match src="function_body [8210,8270]" dest="function_body [8309,8369]"/>
  <match src="state_mutability [45051,45055]" dest="state_mutability [14305,14309]"/>
  <match src="type_name [9534,9538]" dest="type_name [9633,9637]"/>
  <match src="address: address [44601,44608]" dest="address: address [13855,13862]"/>
  <match src="internal: internal [10578,10586]" dest="internal: internal [10677,10685]"/>
  <match src="(: ( [44821,44822]" dest="(: ( [14075,14076]"/>
  <match src="primitive_type [96781,96788]" dest="primitive_type [34567,34574]"/>
  <match src="external: external [54418,54426]" dest="external: external [21412,21420]"/>
  <match src="): ) [9802,9803]" dest="): ) [9901,9902]"/>
  <match src="state_mutability [52892,52896]" dest="state_mutability [19886,19890]"/>
  <match src="member_expression [102460,102475]" dest="member_expression [40278,40293]"/>
  <match src="identifier: approve [88010,88017]" dest="identifier: approve [28139,28146]"/>
  <match src="return: return [10239,10245]" dest="return: return [10338,10344]"/>
  <match src="function: function [96551,96559]" dest="function: function [34337,34345]"/>
  <match src="identifier: candidate [96682,96691]" dest="identifier: candidate [34468,34477]"/>
  <match src="identifier: amount1In [53879,53888]" dest="identifier: amount1In [20873,20882]"/>
  <match src="identifier: newLock [105014,105021]" dest="identifier: newLock [42832,42839]"/>
  <match src="binary_expression [37649,37659]" dest="binary_expression [53321,53331]"/>
  <match src="uint256: uint256 [83528,83535]" dest="uint256: uint256 [61449,61456]"/>
  <match src="parameter [65483,65502]" dest="parameter [18751,18780]"/>
  <match src="private: private [35985,35992]" dest="private: private [51657,51664]"/>
  <match src="member_expression [80639,80649]" dest="member_expression [70254,70264]"/>
  <match src="(: ( [103726,103727]" dest="(: ( [41544,41545]"/>
  <match src="): ) [46262,46263]" dest="): ) [15516,15517]"/>
  <match src="type_name [46632,46644]" dest="type_name [15886,15898]"/>
  <match src="): ) [80671,80672]" dest="): ) [70286,70287]"/>
  <match src="comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [63,638]" dest="comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [117,692]"/>
  <match src="(: ( [5404,5405]" dest="(: ( [5458,5459]"/>
  <match src="member_expression [81176,81193]" dest="member_expression [70485,70502]"/>
  <match src=",: , [9550,9551]" dest=",: , [9649,9650]"/>
  <match src="): ) [95311,95312]" dest="): ) [33097,33098]"/>
  <match src="visibility [5382,5390]" dest="visibility [5436,5444]"/>
  <match src="primitive_type [73173,73180]" dest="primitive_type [65971,65978]"/>
  <match src="revert: revert [32002,32008]" dest="revert: revert [47674,47680]"/>
  <match src="external: external [99058,99066]" dest="external: external [36876,36884]"/>
  <match src="state_mutability [93818,93822]" dest="state_mutability [31604,31608]"/>
  <match src="return_statement [44855,44992]" dest="return_statement [14109,14246]"/>
  <match src="): ) [93685,93686]" dest="): ) [31471,31472]"/>
  <match src="call_argument [82132,82142]" dest="call_argument [71801,71811]"/>
  <match src="mapping: mapping [87380,87387]" dest="mapping: mapping [27509,27516]"/>
  <match src="identifier: abi [31340,31343]" dest="identifier: abi [47012,47015]"/>
  <match src="parameter [6657,6668]" dest="parameter [6756,6767]"/>
  <match src="&quot;: &quot; [22788,22789]" dest="&quot;: &quot; [63317,63318]"/>
  <match src="member_expression [101937,101969]" dest="member_expression [39755,39787]"/>
  <match src="call_argument [83402,83433]" dest="call_argument [72067,72098]"/>
  <match src="string [4765,4791]" dest="string [4819,4845]"/>
  <match src="{: { [42758,42759]" dest="{: { [12012,12013]"/>
  <match src="type_name [87681,87688]" dest="type_name [27810,27817]"/>
  <match src="pure: pure [36987,36991]" dest="pure: pure [52659,52663]"/>
  <match src="member_expression [80779,80789]" dest="member_expression [70367,70377]"/>
  <match src="return_statement [45603,45651]" dest="return_statement [14857,14905]"/>
  <match src=",: , [29253,29254]" dest=",: , [44925,44926]"/>
  <match src="{: { [38063,38064]" dest="{: { [53735,53736]"/>
  <match src=",: , [32443,32444]" dest=",: , [48115,48116]"/>
  <match src="}: } [93724,93725]" dest="}: } [31510,31511]"/>
  <match src="function_definition [1351,1487]" dest="function_definition [1405,1541]"/>
  <match src="identifier: value [80839,80844]" dest="identifier: value [70427,70432]"/>
  <match src="): ) [52881,52882]" dest="): ) [19875,19876]"/>
  <match src="address: address [87388,87395]" dest="address: address [27517,27524]"/>
  <match src="primitive_type [48365,48372]" dest="primitive_type [55091,55098]"/>
  <match src="if: if [29987,29989]" dest="if: if [45659,45661]"/>
  <match src="function_definition [93384,93492]" dest="function_definition [31170,31278]"/>
  <match src="state_mutability [28883,28887]" dest="state_mutability [44555,44559]"/>
  <match src="uint256: uint256 [953,960]" dest="uint256: uint256 [1007,1014]"/>
  <match src="member_expression [31340,31356]" dest="member_expression [47012,47028]"/>
  <match src="call_expression [81645,81680]" dest="call_expression [70850,70885]"/>
  <match src="assignment_expression [104144,104231]" dest="assignment_expression [41962,42049]"/>
  <match src="uint256: uint256 [43464,43471]" dest="uint256: uint256 [12718,12725]"/>
  <match src="number_literal: 10 [35804,35806]" dest="number_literal: 10 [51476,51478]"/>
  <match src="parameter [29896,29912]" dest="parameter [45568,45584]"/>
  <match src="primitive_type [104311,104317]" dest="primitive_type [42129,42135]"/>
  <match src="call_expression [78558,78578]" dest="call_expression [59259,59267]"/>
  <match src="variable_declaration [36178,36197]" dest="variable_declaration [51850,51869]"/>
  <match src="primitive_type [7946,7953]" dest="primitive_type [8045,8052]"/>
  <match src="visibility [37956,37963]" dest="visibility [53628,53635]"/>
  <match src="{: { [87175,87176]" dest="{: { [27304,27305]"/>
  <match src="identifier: IUniswapV2Pair [78558,78572]" dest="identifier: dollar [59259,59265]"/>
  <match src="call_argument [7153,7186]" dest="call_argument [7252,7285]"/>
  <match src="type_name [51177,51184]" dest="type_name [54785,54792]"/>
  <match src="return: return [46035,46041]" dest="return: return [15289,15295]"/>
  <match src="parameter [19670,19693]" dest="parameter [17436,17455]"/>
  <match src="): ) [7520,7521]" dest="): ) [7619,7620]"/>
  <match src="type_name [9130,9136]" dest="type_name [9229,9235]"/>
  <match src="call_expression [81985,81999]" dest="call_expression [55696,55710]"/>
  <match src="variable_declaration [104937,104956]" dest="variable_declaration [42755,42774]"/>
  <match src="parameter [75108,75123]" dest="parameter [55007,55022]"/>
  <match src="function: function [103064,103072]" dest="function: function [40882,40890]"/>
  <match src="=: = [28425,28426]" dest="=: = [44097,44098]"/>
  <match src="type_name [8763,8767]" dest="type_name [8862,8866]"/>
  <match src="(: ( [1008,1009]" dest="(: ( [1062,1063]"/>
  <match src="function_body [9638,9718]" dest="function_body [9737,9817]"/>
  <match src="type_cast_expression [37318,37339]" dest="type_cast_expression [52990,53011]"/>
  <match src="call_argument [37318,37339]" dest="call_argument [52990,53011]"/>
  <match src="primitive_type [70106,70113]" dest="primitive_type [65159,65166]"/>
  <match src="function_body [962,1076]" dest="function_body [1016,1130]"/>
  <match src=".: . [101331,101332]" dest=".: . [39149,39150]"/>
  <match src="[: [ [87717,87718]" dest="[: [ [27846,27847]"/>
  <match src="external: external [92654,92662]" dest="external: external [30440,30448]"/>
  <match src="parameter [52847,52852]" dest="parameter [19841,19846]"/>
  <match src="call_struct_argument [45624,45648]" dest="call_struct_argument [14878,14902]"/>
  <match src="call_argument [36291,36301]" dest="call_argument [51963,51973]"/>
  <match src="member_expression [104392,104409]" dest="member_expression [42210,42227]"/>
  <match src="comment: /**      * Epoch      */ [94909,94935]" dest="comment: /**      * Epoch      */ [32695,32721]"/>
  <match src="address: address [50146,50153]" dest="address: address [25585,25592]"/>
  <match src="internal: internal [102638,102646]" dest="internal: internal [40456,40464]"/>
  <match src="event_paramater [14848,14861]" dest="event_paramater [24524,24537]"/>
  <match src="type_cast_expression [20485,20495]" dest="type_cast_expression [63589,63599]"/>
  <match src="type_name [94818,94825]" dest="type_name [32604,32611]"/>
  <match src="uint256: uint256 [19670,19677]" dest="uint256: uint256 [17436,17443]"/>
  <match src="comment: /**  * @title Decimal  * @author dYdX  *  * Library that defines a fixed-point number with 18 decimal places.  */ [6189,6307]" dest="comment: /**  * @title Decimal  * @author dYdX  *  * Library that defines a fixed-point number with 18 decimal places.  */ [6288,6406]"/>
  <match src="state_mutability [8945,8949]" dest="state_mutability [9044,9048]"/>
  <match src="parameter [104492,104509]" dest="parameter [42310,42327]"/>
  <match src="(: ( [93107,93108]" dest="(: ( [30893,30894]"/>
  <match src="identifier: Candidate [103953,103962]" dest="identifier: Candidate [41771,41780]"/>
  <match src="struct_member [87953,87967]" dest="struct_member [28082,28096]"/>
  <match src="identifier: msg [81251,81254]" dest="identifier: msg [71441,71444]"/>
  <match src="identifier: z [37044,37045]" dest="identifier: z [52716,52717]"/>
  <match src="function: function [102204,102212]" dest="function: function [40022,40030]"/>
  <match src="function_definition [95241,95490]" dest="function_definition [33027,33276]"/>
  <match src="identifier: i [37480,37481]" dest="identifier: i [53152,53153]"/>
  <match src="number_literal: 0 [100475,100476]" dest="number_literal: 0 [38293,38294]"/>
  <match src="identifier: staged [87291,87297]" dest="identifier: staged [27420,27426]"/>
  <match src="member_expression [10892,10902]" dest="member_expression [10991,11001]"/>
  <match src="}: } [99588,99589]" dest="}: } [37406,37407]"/>
  <match src="{: { [77046,77047]" dest="{: { [60790,60791]"/>
  <match src="identifier: Balance [88491,88498]" dest="identifier: Balance [28620,28627]"/>
  <match src="parameter [52937,52950]" dest="parameter [19931,19944]"/>
  <match src=".: . [90901,90902]" dest=".: . [75973,75974]"/>
  <match src="function: function [44648,44656]" dest="function: function [13902,13910]"/>
  <match src="}: } [9287,9288]" dest="}: } [9386,9387]"/>
  <match src="identifier: bonded [99237,99243]" dest="identifier: bonded [37055,37061]"/>
  <match src="identifier: b [8257,8258]" dest="identifier: b [8356,8357]"/>
  <match src="constant: constant [44004,44012]" dest="constant: constant [13258,13266]"/>
  <match src="contract_declaration [62540,62713]" dest="contract_declaration [26409,26582]"/>
  <match src="): ) [81690,81691]" dest="): ) [70885,70886]"/>
  <match src="type_name [8192,8196]" dest="type_name [8291,8295]"/>
  <match src="identifier: FILE [84333,84337]" dest="identifier: FILE [58352,58356]"/>
  <match src="if_statement [31260,31751]" dest="if_statement [46932,47423]"/>
  <match src=".: . [97226,97227]" dest=".: . [35012,35013]"/>
  <match src="expression_statement [102007,102111]" dest="expression_statement [39825,39929]"/>
  <match src="): ) [52796,52797]" dest="): ) [19790,19791]"/>
  <match src="identifier: balance [99535,99542]" dest="identifier: balance [37353,37360]"/>
  <match src="type_name [82088,82095]" dest="type_name [71727,71734]"/>
  <match src="identifier: epochs [103010,103016]" dest="identifier: epochs [40828,40834]"/>
  <match src="identifier: temp [8581,8585]" dest="identifier: temp [8680,8684]"/>
  <match src="function_body [9942,9991]" dest="function_body [10041,10090]"/>
  <match src="address: address [64381,64388]" dest="address: address [77351,77358]"/>
  <match src="): ) [90585,90586]" dest="): ) [75657,75658]"/>
  <match src="type_name [92539,92546]" dest="type_name [30325,30332]"/>
  <match src="bytes32: bytes32 [33236,33243]" dest="bytes32: bytes32 [48908,48915]"/>
  <match src="primitive_type [29848,29855]" dest="primitive_type [45520,45527]"/>
  <match src=",: , [31649,31650]" dest=",: , [47321,47322]"/>
  <match src="binary_expression [8416,8422]" dest="binary_expression [8515,8521]"/>
  <match src="identifier: candidates [97089,97099]" dest="identifier: candidates [34875,34885]"/>
  <match src="identifier: sub [99725,99728]" dest="identifier: sub [37543,37546]"/>
  <match src="): ) [9279,9280]" dest="): ) [9378,9379]"/>
  <match src="expression_statement [90866,90996]" dest="expression_statement [75938,76068]"/>
  <match src="state_mutability [95565,95569]" dest="state_mutability [33351,33355]"/>
  <match src="): ) [50237,50238]" dest="): ) [25676,25677]"/>
  <match src=".: . [104575,104576]" dest=".: . [42393,42394]"/>
  <match src="expression_statement [4041,4070]" dest="expression_statement [4095,4124]"/>
  <match src="call_expression [81832,81881]" dest="call_expression [72027,72099]"/>
  <match src="primitive_type [32027,32033]" dest="primitive_type [47699,47705]"/>
  <match src="(: ( [32072,32073]" dest="(: ( [47744,47745]"/>
  <match src="member_expression [101485,101500]" dest="member_expression [39303,39318]"/>
  <match src="}: } [91127,91128]" dest="}: } [76199,76200]"/>
  <match src="}: } [43455,43456]" dest="}: } [12709,12710]"/>
  <match src="primitive_type [44601,44608]" dest="primitive_type [13855,13862]"/>
  <match src="type_name [93108,93115]" dest="type_name [30894,30901]"/>
  <match src="identifier: self [9331,9335]" dest="identifier: self [9430,9434]"/>
  <match src="identifier: z [36860,36861]" dest="identifier: z [52532,52533]"/>
  <match src="type_cast_expression [38190,38224]" dest="type_cast_expression [53862,53896]"/>
  <match src="return_statement [96657,96708]" dest="return_statement [34443,34494]"/>
  <match src="using: using [16335,16340]" dest="using: using [60127,60132]"/>
  <match src="type_name [97621,97625]" dest="type_name [35407,35411]"/>
  <match src="=: = [43686,43687]" dest="=: = [12940,12941]"/>
  <match src="type_cast_expression [32027,32518]" dest="type_cast_expression [47699,48190]"/>
  <match src="identifier: totalSupply [93687,93698]" dest="identifier: totalSupply [31473,31484]"/>
  <match src="): ) [53698,53699]" dest="): ) [20692,20693]"/>
  <match src="call_argument [20581,20618]" dest="call_argument [63693,63738]"/>
  <match src="(: ( [26831,26832]" dest="(: ( [78413,78414]"/>
  <match src="identifier: Require [83303,83310]" dest="identifier: Require [77491,77498]"/>
  <match src="}: } [9850,9851]" dest="}: } [9949,9950]"/>
  <match src=",: , [50221,50222]" dest=",: , [25660,25661]"/>
  <match src="number_literal: 0 [35115,35116]" dest="number_literal: 0 [50787,50788]"/>
  <match src="[: [ [95887,95888]" dest="[: [ [33673,33674]"/>
  <match src="identifier: totalRewarded [72073,72086]" dest="identifier: balanceCheck [58184,58196]"/>
  <match src="yul_assignment [97842,97861]" dest="yul_assignment [35628,35647]"/>
  <match src="}: } [106829,106830]" dest="}: } [68758,68759]"/>
  <match src="identifier: _state [104791,104797]" dest="identifier: _state [42609,42615]"/>
  <match src="): ) [10647,10648]" dest="): ) [10746,10747]"/>
  <match src="uint256: uint256 [69920,69927]" dest="uint256: uint256 [65072,65079]"/>
  <match src="identifier: coupons [96204,96211]" dest="identifier: coupons [33990,33997]"/>
  <match src="]: ] [96706,96707]" dest="]: ] [34492,34493]"/>
  <match src="event_paramater [52642,52660]" dest="event_paramater [19636,19654]"/>
  <match src="returns: returns [53292,53299]" dest="returns: returns [20286,20293]"/>
  <match src="primitive_type [81567,81574]" dest="primitive_type [78141,78148]"/>
  <match src="visibility [46763,46771]" dest="visibility [16017,16025]"/>
  <match src="function: function [9511,9519]" dest="function: function [9610,9618]"/>
  <match src="}: } [36910,36911]" dest="}: } [52582,52583]"/>
  <match src="number_literal: 0 [92704,92705]" dest="number_literal: 0 [30490,30491]"/>
  <match src="string [3301,3329]" dest="string [3355,3383]"/>
  <match src="call_argument [8598,8602]" dest="call_argument [8697,8701]"/>
  <match src="identifier: b [5476,5477]" dest="identifier: b [5530,5531]"/>
  <match src="identifier: account [101953,101960]" dest="identifier: account [39771,39778]"/>
  <match src="identifier: candidates [104554,104564]" dest="identifier: candidates [42372,42382]"/>
  <match src="identifier: IMPLEMENTATION_SLOT [91934,91953]" dest="identifier: IMPLEMENTATION_SLOT [29720,29739]"/>
  <match src="type_name [44183,44190]" dest="type_name [13437,13444]"/>
  <match src="call_argument [48365,48378]" dest="call_argument [55091,55104]"/>
  <match src="parameter [9346,9359]" dest="parameter [9445,9458]"/>
  <match src="visibility [1386,1394]" dest="visibility [1440,1448]"/>
  <match src="): ) [54263,54264]" dest="): ) [21257,21258]"/>
  <match src=",: , [67030,67031]" dest=",: , [66430,66431]"/>
  <match src="): ) [33500,33501]" dest="): ) [49172,49173]"/>
  <match src="function: function [94739,94747]" dest="function: function [32525,32533]"/>
  <match src="view: view [96767,96771]" dest="view: view [34553,34557]"/>
  <match src=",: , [32319,32320]" dest=",: , [47991,47992]"/>
  <match src="{: { [32705,32706]" dest="{: { [48377,48378]"/>
  <match src="inheritance_specifier [89585,89590]" dest="inheritance_specifier [74657,74662]"/>
  <match src="array_access [103994,104037]" dest="array_access [41812,41855]"/>
  <match src="type_name [48208,48215]" dest="type_name [56085,56092]"/>
  <match src="identifier: must [29249,29253]" dest="identifier: must [44921,44925]"/>
  <match src="identifier: sender [12063,12069]" dest="identifier: sender [63922,63928]"/>
  <match src="identifier: result [37784,37790]" dest="identifier: result [53456,53462]"/>
  <match src="call_argument [32922,32948]" dest="call_argument [48594,48620]"/>
  <match src=".: . [99920,99921]" dest=".: . [37738,37739]"/>
  <match src="return_type_definition [35063,35085]" dest="return_type_definition [50735,50757]"/>
  <match src="comment: /* Regulator */ [44301,44316]" dest="comment: /* Regulator */ [13555,13570]"/>
  <match src="identifier: b [8416,8417]" dest="identifier: b [8515,8516]"/>
  <match src="primitive_type [94780,94787]" dest="primitive_type [32566,32573]"/>
  <match src="identifier: amount [17691,17697]" dest="identifier: amount [59288,59294]"/>
  <match src="{: { [45623,45624]" dest="{: { [14877,14878]"/>
  <match src="identifier: char [36818,36822]" dest="identifier: char [52490,52494]"/>
  <match src="primitive_type [53994,54001]" dest="primitive_type [20988,20995]"/>
  <match src="number_literal: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc [89869,89935]" dest="number_literal: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc [74941,75007]"/>
  <match src="state_mutability [95833,95837]" dest="state_mutability [33619,33623]"/>
  <match src="(: ( [92296,92297]" dest="(: ( [30082,30083]"/>
  <match src=".: . [92932,92933]" dest=".: . [30718,30719]"/>
  <match src="is: is [64174,64176]" dest="is: is [64919,64921]"/>
  <match src="identifier: add [101001,101004]" dest="identifier: add [38819,38822]"/>
  <match src="memory: memory [9410,9416]" dest="memory: memory [9509,9515]"/>
  <match src="uint256: uint256 [39648,39655]" dest="uint256: uint256 [17182,17189]"/>
  <match src="identifier: reason [104725,104731]" dest="identifier: reason [42543,42549]"/>
  <match src="}: } [45241,45242]" dest="}: } [14495,14496]"/>
  <match src="event_paramater [53755,53767]" dest="event_paramater [20749,20761]"/>
  <match src="identifier: expiration [87689,87699]" dest="identifier: expiration [27818,27828]"/>
  <match src="function_definition [99844,99987]" dest="function_definition [37662,37805]"/>
  <match src="function_definition [6603,6719]" dest="function_definition [6702,6818]"/>
  <match src="(: ( [90873,90874]" dest="(: ( [75945,75946]"/>
  <match src=":: : [9012,9013]" dest=":: : [9111,9112]"/>
  <match src="primitive_type [51838,51845]" dest="primitive_type [60717,60724]"/>
  <match src="parameter [78684,78698]" dest="parameter [79031,79048]"/>
  <match src="identifier: amount [20674,20680]" dest="identifier: amount [59022,59028]"/>
  <match src="member_expression [93859,93874]" dest="member_expression [31645,31660]"/>
  <match src="return: return [10621,10627]" dest="return: return [10720,10726]"/>
  <match src="new: new [35396,35399]" dest="new: new [51068,51071]"/>
  <match src="call_argument [20682,20722]" dest="call_argument [62222,62253]"/>
  <match src="identifier: value [8235,8240]" dest="identifier: value [8334,8339]"/>
  <match src="primitive_type [87464,87471]" dest="primitive_type [27593,27600]"/>
  <match src="visibility [102866,102874]" dest="visibility [40684,40692]"/>
  <match src="return: return [92338,92344]" dest="return: return [30124,30130]"/>
  <match src="identifier: D256 [9534,9538]" dest="identifier: D256 [9633,9637]"/>
  <match src="binary_expression [35106,35116]" dest="binary_expression [50778,50788]"/>
  <match src="function: function [99760,99768]" dest="function: function [37578,37586]"/>
  <match src="type_name [53686,53690]" dest="type_name [20680,20684]"/>
  <match src="binary_expression [37810,37827]" dest="binary_expression [53482,53499]"/>
  <match src="primitive_type [104276,104283]" dest="primitive_type [42094,42101]"/>
  <match src="return_statement [92338,92348]" dest="return_statement [30124,30134]"/>
  <match src="bool: bool [62650,62654]" dest="bool: bool [26519,26523]"/>
  <match src="number_literal: 0 [36275,36276]" dest="number_literal: 0 [51947,51948]"/>
  <match src="identifier: amount [75329,75335]" dest="identifier: amount [55417,55423]"/>
  <match src="binary_expression [36576,36581]" dest="binary_expression [52248,52253]"/>
  <match src="user_defined_type [7112,7116]" dest="user_defined_type [7211,7215]"/>
  <match src="function_definition [93610,93725]" dest="function_definition [31396,31511]"/>
  <match src="address: address [54654,54661]" dest="address: address [21648,21655]"/>
  <match src="parameter [20396,20410]" dest="parameter [63485,63499]"/>
  <match src="binary_expression [20475,20495]" dest="binary_expression [63579,63599]"/>
  <match src="identifier: D256 [8037,8041]" dest="identifier: D256 [8136,8140]"/>
  <match src="): ) [94825,94826]" dest="): ) [32611,32612]"/>
  <match src="(: ( [50254,50255]" dest="(: ( [25693,25694]"/>
  <match src="member_expression [94366,94398]" dest="member_expression [32152,32184]"/>
  <match src="member_expression [96808,96842]" dest="member_expression [34594,34628]"/>
  <match src="return_statement [4748,4793]" dest="return_statement [4802,4847]"/>
  <match src="): ) [36698,36699]" dest="): ) [52370,52371]"/>
  <match src="identifier: ratio [67343,67348]" dest="identifier: ratio [80804,80809]"/>
  <match src="user_defined_type [46485,46497]" dest="user_defined_type [15739,15751]"/>
  <match src="identifier: recipient [20420,20429]" dest="identifier: recipient [63509,63518]"/>
  <match src="(: ( [99573,99574]" dest="(: ( [37391,37392]"/>
  <match src="uint256: uint256 [919,926]" dest="uint256: uint256 [973,980]"/>
  <match src="(: ( [2324,2325]" dest="(: ( [2378,2379]"/>
  <match src="member_expression [7409,7419]" dest="member_expression [7508,7518]"/>
  <match src="expression_statement [99528,99582]" dest="expression_statement [37346,37400]"/>
  <match src="uint256: uint256 [50099,50106]" dest="uint256: uint256 [25538,25545]"/>
  <match src="identifier: amount [21961,21967]" dest="identifier: couponEpoch [62960,62971]"/>
  <match src="expression_statement [103156,103209]" dest="expression_statement [40974,41027]"/>
  <match src="identifier: amount [76134,76140]" dest="identifier: amount [17773,17779]"/>
  <match src="identifier: startFor [105024,105032]" dest="identifier: startFor [42842,42850]"/>
  <match src="(: ( [65524,65525]" dest="(: ( [67116,67117]"/>
  <match src=",: , [81370,81371]" dest=",: , [80589,80590]"/>
  <match src=",: , [81204,81205]" dest=",: , [70513,70514]"/>
  <match src="identifier: period [103866,103872]" dest="identifier: period [41684,41690]"/>
  <match src="returns: returns [6771,6778]" dest="returns: returns [6870,6877]"/>
  <match src="identifier: COLON [32150,32155]" dest="identifier: COLON [47822,47827]"/>
  <match src="]: ] [103864,103865]" dest="]: ] [41682,41683]"/>
  <match src="=: = [95145,95146]" dest="=: = [32931,32932]"/>
  <match src="identifier: start [87553,87558]" dest="identifier: start [27682,27687]"/>
  <match src="call_argument [33018,33026]" dest="call_argument [48690,48698]"/>
  <match src="expression_statement [2653,2710]" dest="expression_statement [2707,2764]"/>
  <match src="pure: pure [5391,5395]" dest="pure: pure [5445,5449]"/>
  <match src="call_argument [30987,30993]" dest="call_argument [46659,46665]"/>
  <match src="!: ! [31264,31265]" dest="!: ! [46936,46937]"/>
  <match src="[: [ [104370,104371]" dest="[: [ [42188,42189]"/>
  <match src="expression_statement [106442,106578]" dest="expression_statement [68371,68507]"/>
  <match src="primitive_type [101130,101137]" dest="primitive_type [38948,38955]"/>
  <match src="): ) [92546,92547]" dest="): ) [30332,30333]"/>
  <match src="member_expression [6982,6987]" dest="member_expression [7081,7086]"/>
  <match src="variable_declaration [90450,90469]" dest="variable_declaration [75522,75541]"/>
  <match src="}: } [45385,45386]" dest="}: } [14639,14640]"/>
  <match src=".: . [9256,9257]" dest=".: . [9355,9356]"/>
  <match src="call_argument [81069,81079]" dest="call_argument [70642,70652]"/>
  <match src="identifier: must [33359,33363]" dest="identifier: must [49031,49035]"/>
  <match src=",: , [82918,82919]" dest=",: , [71669,71670]"/>
  <match src="&gt;: &gt; [97539,97540]" dest="&gt;: &gt; [35325,35326]"/>
  <match src="call_expression [90504,90543]" dest="call_expression [75576,75615]"/>
  <match src="}: } [46426,46427]" dest="}: } [15680,15681]"/>
  <match src="identifier: sub [7853,7856]" dest="identifier: sub [7952,7955]"/>
  <match src="struct_member [88053,88084]" dest="struct_member [28182,28213]"/>
  <match src="type_name [85913,85917]" dest="type_name [73220,73224]"/>
  <match src="primitive_type [35207,35214]" dest="primitive_type [50879,50886]"/>
  <match src="identifier: require [5425,5432]" dest="identifier: require [5479,5486]"/>
  <match src="primitive_type [54200,54207]" dest="primitive_type [21194,21201]"/>
  <match src="state_mutability [52769,52773]" dest="state_mutability [19763,19767]"/>
  <match src="(: ( [81802,81803]" dest="(: ( [71566,71567]"/>
  <match src="member_expression [83008,83018]" dest="member_expression [70732,70742]"/>
  <match src="expression_statement [103219,103274]" dest="expression_statement [41037,41092]"/>
  <match src="return_type_definition [92311,92326]" dest="return_type_definition [30097,30112]"/>
  <match src="identifier: payloadB [29931,29939]" dest="identifier: payloadB [45603,45611]"/>
  <match src="returns: returns [99067,99074]" dest="returns: returns [36885,36892]"/>
  <match src="member_expression [99407,99421]" dest="member_expression [37225,37239]"/>
  <match src="visibility [10578,10586]" dest="visibility [10677,10685]"/>
  <match src=",: , [49273,49274]" dest=",: , [55636,55637]"/>
  <match src="struct_member [87710,87729]" dest="struct_member [27839,27858]"/>
  <match src="library: library [85447,85454]" dest="library: library [72754,72761]"/>
  <match src="=: = [28521,28522]" dest="=: = [44193,44194]"/>
  <match src="array_access [101485,101509]" dest="array_access [39303,39327]"/>
  <match src="expression_statement [84223,84394]" dest="expression_statement [58218,58406]"/>
  <match src="(: ( [82131,82132]" dest="(: ( [71800,71801]"/>
  <match src="false [65664,65669]" dest="false [80739,80744]"/>
  <match src="type_name [105216,105223]" dest="type_name [43034,43041]"/>
  <match src="contract_declaration [16294,23316]" dest="contract_declaration [60082,64191]"/>
  <match src="}: } [8269,8270]" dest="}: } [8368,8369]"/>
  <match src="primitive_type [54766,54773]" dest="primitive_type [21760,21767]"/>
  <match src="call_struct_argument [9007,9037]" dest="call_struct_argument [9106,9136]"/>
  <match src="uint256: uint256 [95990,95997]" dest="uint256: uint256 [33776,33783]"/>
  <match src="comment: // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522 [2485,2556]" dest="comment: // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522 [2539,2610]"/>
  <match src="inheritance_specifier [107555,107566]" dest="inheritance_specifier [76955,76966]"/>
  <match src="member_expression [73652,73698]" dest="member_expression [80039,80064]"/>
  <match src="call_argument [5433,5439]" dest="call_argument [5487,5493]"/>
  <match src="identifier: reason [104325,104331]" dest="identifier: reason [42143,42149]"/>
  <match src="identifier: _state [104353,104359]" dest="identifier: _state [42171,42177]"/>
  <match src="identifier: sub [102169,102172]" dest="identifier: sub [39987,39990]"/>
  <match src="call_expression [20467,20537]" dest="call_expression [63571,63649]"/>
  <match src="number_literal: 1 [82046,82047]" dest="number_literal: 1 [72148,72149]"/>
  <match src="(: ( [94438,94439]" dest="(: ( [32224,32225]"/>
  <match src="visibility [29341,29349]" dest="visibility [45013,45021]"/>
  <match src="state_mutability [92406,92410]" dest="state_mutability [30192,30196]"/>
  <match src="type_name [94780,94787]" dest="type_name [32566,32573]"/>
  <match src="{: { [71785,71786]" dest="{: { [65790,65791]"/>
  <match src="(: ( [84267,84268]" dest="(: ( [58963,58964]"/>
  <match src="type_name [104676,104683]" dest="type_name [42494,42501]"/>
  <match src="contract_body [42758,47089]" dest="contract_body [12012,16343]"/>
  <match src="}: } [96359,96360]" dest="}: } [34145,34146]"/>
  <match src="identifier: a [2570,2571]" dest="identifier: a [2624,2625]"/>
  <match src="internal: internal [45042,45050]" dest="internal: internal [14296,14304]"/>
  <match src="bytes: bytes [34088,34093]" dest="bytes: bytes [49760,49765]"/>
  <match src="new: new [37187,37190]" dest="new: new [52859,52862]"/>
  <match src="string: string [104311,104317]" dest="string: string [42129,42135]"/>
  <match src=":: : [7160,7161]" dest=":: : [7259,7260]"/>
  <match src=".: . [104819,104820]" dest=".: . [42637,42638]"/>
  <match src="): ) [4068,4069]" dest="): ) [4122,4123]"/>
  <match src="returns: returns [45718,45725]" dest="returns: returns [14972,14979]"/>
  <match src="identifier: _state [102460,102466]" dest="identifier: _state [40278,40284]"/>
  <match src="function: function [53223,53231]" dest="function: function [20217,20225]"/>
  <match src="primitive_type [16354,16361]" dest="primitive_type [60146,60153]"/>
  <match src="number_literal: 20 [36489,36491]" dest="number_literal: 20 [52161,52163]"/>
  <match src="identifier: Transfer [98638,98646]" dest="identifier: Transfer [36456,36464]"/>
  <match src="type_name [80392,80399]" dest="type_name [69775,69782]"/>
  <match src="pure: pure [9784,9788]" dest="pure: pure [9883,9887]"/>
  <match src="expression_statement [105122,105169]" dest="expression_statement [42940,42987]"/>
  <match src="return: return [86457,86463]" dest="return: return [73764,73770]"/>
  <match src="parameter [14574,14588]" dest="parameter [24250,24264]"/>
  <match src="uint256: uint256 [34633,34640]" dest="uint256: uint256 [50305,50312]"/>
  <match src="&lt;: &lt; [38057,38058]" dest="&lt;: &lt; [53729,53730]"/>
  <match src="uint256: uint256 [36047,36054]" dest="uint256: uint256 [51719,51726]"/>
  <match src="identifier: b [9029,9030]" dest="identifier: b [9128,9129]"/>
  <match src="(: ( [95700,95701]" dest="(: ( [33486,33487]"/>
  <match src="parameter [12774,12781]" dest="parameter [22450,22457]"/>
  <match src="address: address [26647,26654]" dest="address: address [60369,60376]"/>
  <match src="string: string [1859,1865]" dest="string: string [1913,1919]"/>
  <match src="call_argument [38090,38115]" dest="call_argument [53762,53787]"/>
  <match src="internal: internal [100273,100281]" dest="internal: internal [38091,38099]"/>
  <match src="parameter [93969,93976]" dest="parameter [31755,31762]"/>
  <match src="visibility [96277,96283]" dest="visibility [34063,34069]"/>
  <match src="primitive_type [82448,82455]" dest="primitive_type [82487,82494]"/>
  <match src="internal: internal [77037,77045]" dest="internal: internal [60781,60789]"/>
  <match src="): ) [12593,12594]" dest="): ) [22269,22270]"/>
  <match src="identifier: approveFor [97356,97366]" dest="identifier: approveFor [35142,35152]"/>
  <match src="uint256: uint256 [35014,35021]" dest="uint256: uint256 [50686,50693]"/>
  <match src="function_body [98946,98977]" dest="function_body [36764,36795]"/>
  <match src="pure: pure [37969,37973]" dest="pure: pure [53641,53645]"/>
  <match src="}: } [7878,7879]" dest="}: } [7977,7978]"/>
  <match src="function: function [62662,62670]" dest="function: function [26531,26539]"/>
  <match src="): ) [97625,97626]" dest="): ) [35411,35412]"/>
  <match src="(: ( [103266,103267]" dest="(: ( [41084,41085]"/>
  <match src="type_name [90450,90455]" dest="type_name [75522,75527]"/>
  <match src="(: ( [52757,52758]" dest="(: ( [19751,19752]"/>
  <match src="identifier: lessThan [10008,10016]" dest="identifier: lessThan [10107,10115]"/>
  <match src=":=: := [97847,97849]" dest=":=: := [35633,35635]"/>
  <match src="call_argument [31402,31406]" dest="call_argument [47074,47078]"/>
  <match src="): ) [92652,92653]" dest="): ) [30438,30439]"/>
  <match src="type_name [93216,93223]" dest="type_name [31002,31009]"/>
  <match src="identifier: mul [83676,83679]" dest="identifier: mul [71849,71852]"/>
  <match src=",: , [30960,30961]" dest=",: , [46632,46633]"/>
  <match src="binary_expression [35786,35807]" dest="binary_expression [51458,51479]"/>
  <match src="identifier: coupons [96038,96045]" dest="identifier: coupons [33824,33831]"/>
  <match src="identifier: Fluid [94718,94723]" dest="identifier: Fluid [32504,32509]"/>
  <match src="identifier: reason [99441,99447]" dest="identifier: reason [37259,37265]"/>
  <match src="&gt;: &gt; [94545,94546]" dest="&gt;: &gt; [32331,32332]"/>
  <match src="identifier: balanceCheck [83863,83875]" dest="identifier: balanceCheck [58835,58847]"/>
  <match src="(: ( [7429,7430]" dest="(: ( [7528,7529]"/>
  <match src="ternary_expression [94630,94717]" dest="ternary_expression [32416,32503]"/>
  <match src="returns: returns [94972,94979]" dest="returns: returns [32758,32765]"/>
  <match src="type_name [89822,89829]" dest="type_name [74894,74901]"/>
  <match src="member_expression [46524,46536]" dest="member_expression [15778,15790]"/>
  <match src="[: [ [103799,103800]" dest="[: [ [41617,41618]"/>
  <match src="primitive_type [85913,85917]" dest="primitive_type [73220,73224]"/>
  <match src="member_expression [30729,30745]" dest="member_expression [46401,46417]"/>
  <match src="public: public [92980,92986]" dest="public: public [30766,30772]"/>
  <match src="private: private [36974,36981]" dest="private: private [52646,52653]"/>
  <match src=",: , [32641,32642]" dest=",: , [48313,48314]"/>
  <match src=",: , [100570,100571]" dest=",: , [38388,38389]"/>
  <match src="returns: returns [92311,92318]" dest="returns: returns [30097,30104]"/>
  <match src="event_paramater [80392,80405]" dest="event_paramater [69775,69788]"/>
  <match src="uint256: uint256 [75659,75666]" dest="uint256: uint256 [55537,55544]"/>
  <match src="call_argument [104224,104230]" dest="call_argument [42042,42048]"/>
  <match src="identifier: coupons [101962,101969]" dest="identifier: coupons [39780,39787]"/>
  <match src="mapping: mapping [87334,87341]" dest="mapping: mapping [27463,27470]"/>
  <match src=",: , [106529,106530]" dest=",: , [68458,68459]"/>
  <match src="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      */ [4221,4664]" dest="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      */ [4275,4718]"/>
  <match src="type_name [53021,53028]" dest="type_name [20015,20022]"/>
  <match src="comment: /*     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [97886,98539]" dest="comment: /*     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [80968,81621]"/>
  <match src="binary_expression [37847,37853]" dest="binary_expression [53519,53525]"/>
  <match src="(: ( [45545,45546]" dest="(: ( [14799,14800]"/>
  <match src="comment: /*     Copyright 2019 ZeroEx Intl.      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [38240,38848]" dest="comment: // File: contracts/oracle/IOracle.sol [25707,25744]"/>
  <match src="block_statement [29387,29789]" dest="block_statement [45059,45461]"/>
  <match src="}: } [8260,8261]" dest="}: } [8359,8360]"/>
  <match src="function_definition [31766,32552]" dest="function_definition [47438,48224]"/>
  <match src="enum_value: APPROVE [87890,87897]" dest="enum_value: APPROVE [28019,28026]"/>
  <match src="(: ( [29045,29046]" dest="(: ( [44717,44718]"/>
  <match src="(: ( [36680,36681]" dest="(: ( [52352,52353]"/>
  <match src="{: { [88165,88166]" dest="{: { [28294,28295]"/>
  <match src="member_expression [82198,82208]" dest="member_expression [71366,71376]"/>
  <match src="function_definition [77002,77151]" dest="function_definition [60765,61181]"/>
  <match src="identifier: stringify [29668,29677]" dest="identifier: stringify [45340,45349]"/>
  <match src="): ) [88579,88580]" dest="): ) [28708,28709]"/>
  <match src="identifier: value [80196,80201]" dest="identifier: value [69711,69716]"/>
  <match src="for: for [35524,35527]" dest="for: for [51196,51199]"/>
  <match src="type_name [90820,90827]" dest="type_name [75892,75899]"/>
  <match src="bytes32: bytes32 [53598,53605]" dest="bytes32: bytes32 [20592,20599]"/>
  <match src="primitive_type [64611,64618]" dest="primitive_type [81775,81782]"/>
  <match src="member_expression [11158,11165]" dest="member_expression [11257,11264]"/>
  <match src="=: = [101718,101719]" dest="=: = [39536,39537]"/>
  <match src=".: . [8061,8062]" dest=".: . [8160,8161]"/>
  <match src=".: . [95426,95427]" dest=".: . [33212,33213]"/>
  <match src="identifier: offset [95475,95481]" dest="identifier: offset [33261,33267]"/>
  <match src="function_definition [98985,99113]" dest="function_definition [36803,36931]"/>
  <match src="uint256: uint256 [35529,35536]" dest="uint256: uint256 [51201,51208]"/>
  <match src="primitive_type [30537,30544]" dest="primitive_type [46209,46216]"/>
  <match src="=: = [105159,105160]" dest="=: = [42977,42978]"/>
  <match src="(: ( [46683,46684]" dest="(: ( [15937,15938]"/>
  <match src="contract: contract [105984,105992]" dest="contract: contract [67913,67921]"/>
  <match src="call_argument [33054,33060]" dest="call_argument [48726,48732]"/>
  <match src="}: } [33128,33129]" dest="}: } [48800,48801]"/>
  <match src="identifier: div [83690,83693]" dest="identifier: div [71868,71871]"/>
  <match src="call_argument [65046,65078]" dest="call_argument [62304,62331]"/>
  <match src="): ) [106299,106300]" dest="): ) [68228,68229]"/>
  <match src="number_literal: 168 [42912,42915]" dest="number_literal: 168 [12166,12169]"/>
  <match src="call_argument [8257,8258]" dest="call_argument [8356,8357]"/>
  <match src="&quot;: &quot; [84352,84353]" dest="&quot;: &quot; [58371,58372]"/>
  <match src="identifier: b [9836,9837]" dest="identifier: b [9935,9936]"/>
  <match src="primitive_type [54353,54359]" dest="primitive_type [21347,21353]"/>
  <match src="return: return [8439,8445]" dest="return: return [8538,8544]"/>
  <match src="identifier: candidate [104603,104612]" dest="identifier: candidate [42421,42430]"/>
  <match src="function_definition [102204,102352]" dest="function_definition [40022,40170]"/>
  <match src="parameter [104276,104293]" dest="parameter [42094,42111]"/>
  <match src="identifier: priceCumulative [67229,67244]" dest="identifier: couponAmount [62448,62460]"/>
  <match src="primitive_type [92622,92629]" dest="primitive_type [30408,30415]"/>
  <match src="call_argument [90572,90586]" dest="call_argument [75644,75658]"/>
  <match src="{: { [104742,104743]" dest="{: { [42560,42561]"/>
  <match src="string [82705,82740]" dest="string [80496,80510]"/>
  <match src="uint256: uint256 [94222,94229]" dest="uint256: uint256 [32008,32015]"/>
  <match src="primitive_type [93989,93996]" dest="primitive_type [31775,31782]"/>
  <match src="identifier: stringify [30279,30288]" dest="identifier: stringify [45951,45960]"/>
  <match src="state_mutability [96616,96620]" dest="state_mutability [34402,34406]"/>
  <match src="indexed: indexed [90108,90115]" dest="indexed: indexed [75180,75187]"/>
  <match src="function_definition [53075,53145]" dest="function_definition [20069,20139]"/>
  <match src="): ) [95377,95378]" dest="): ) [33163,33164]"/>
  <match src="member_expression [96017,96030]" dest="member_expression [33803,33816]"/>
  <match src="call_argument [9681,9691]" dest="call_argument [9780,9790]"/>
  <match src="identifier: value [80720,80725]" dest="identifier: value [70335,70340]"/>
  <match src="comment: // 1,000 USDC [43210,43223]" dest="comment: // 1,000 USDC [12464,12477]"/>
  <match src="identifier: amount [21307,21313]" dest="identifier: amount [59164,59170]"/>
  <match src="): ) [97376,97377]" dest="): ) [35162,35163]"/>
  <match src="(: ( [1909,1910]" dest="(: ( [1963,1964]"/>
  <match src="function_body [8781,8847]" dest="function_body [8880,8946]"/>
  <match src="function_body [10492,10533]" dest="function_body [10591,10632]"/>
  <match src="parameter [54508,54512]" dest="parameter [21502,21506]"/>
  <match src="function: function [96858,96866]" dest="function: function [34644,34652]"/>
  <match src="]: ] [96971,96972]" dest="]: ] [34757,34758]"/>
  <match src="visibility [8159,8167]" dest="visibility [8258,8266]"/>
  <match src="event_paramater [26647,26670]" dest="event_paramater [60369,60392]"/>
  <match src="identifier: amount [99500,99506]" dest="identifier: amount [37318,37324]"/>
  <match src="identifier: z [37668,37669]" dest="identifier: z [53340,53341]"/>
  <match src="parameter [101417,101432]" dest="parameter [39235,39250]"/>
  <match src="return_type_definition [45056,45073]" dest="return_type_definition [14310,14327]"/>
  <match src="uint256: uint256 [23708,23715]" dest="uint256: uint256 [17240,17247]"/>
  <match src="): ) [33082,33083]" dest="): ) [48754,48755]"/>
  <match src="type_name [80507,80514]" dest="type_name [77185,77192]"/>
  <match src="(: ( [83182,83183]" dest="(: ( [79902,79903]"/>
  <match src="member_expression [100115,100129]" dest="member_expression [37933,37947]"/>
  <match src="uint256: uint256 [14848,14855]" dest="uint256: uint256 [24524,24531]"/>
  <match src="expression_statement [49231,49328]" dest="expression_statement [55605,55684]"/>
  <match src="identifier: value [9471,9476]" dest="identifier: value [9570,9575]"/>
  <match src="): ) [6892,6893]" dest="): ) [6991,6992]"/>
  <match src="uint256: uint256 [100899,100906]" dest="uint256: uint256 [38717,38724]"/>
  <match src="(: ( [90912,90913]" dest="(: ( [75984,75985]"/>
  <match src="{: { [34350,34351]" dest="{: { [50022,50023]"/>
  <match src="function: function [104862,104870]" dest="function: function [42680,42688]"/>
  <match src="(: ( [8591,8592]" dest="(: ( [8690,8691]"/>
  <match src="}: } [87920,87921]" dest="}: } [28049,28050]"/>
  <match src="identifier: FILE [80066,80070]" dest="identifier: FILE [69578,69582]"/>
  <match src="parameter [92677,92684]" dest="parameter [30463,30470]"/>
  <match src="{: { [37485,37486]" dest="{: { [53157,53158]"/>
  <match src="member_expression [101695,101717]" dest="member_expression [39513,39535]"/>
  <match src="call_expression [99705,99744]" dest="call_expression [37523,37562]"/>
  <match src="internal: internal [21177,21185]" dest="internal: internal [55940,55948]"/>
  <match src="assignment_expression [35765,35809]" dest="assignment_expression [51437,51481]"/>
  <match src="binary_expression [9822,9843]" dest="binary_expression [9921,9942]"/>
  <match src="type_name [96917,96924]" dest="type_name [34703,34710]"/>
  <match src="member_expression [83651,83693]" dest="member_expression [71843,71871]"/>
  <match src="identifier: PairCreated [51778,51789]" dest="identifier: CouponTransfer [60572,60586]"/>
  <match src="enum_declaration [87182,87251]" dest="enum_declaration [27311,27380]"/>
  <match src="{: { [34107,34108]" dest="{: { [49779,49780]"/>
  <match src="identifier: _state [104753,104759]" dest="identifier: _state [42571,42577]"/>
  <match src="mapping: mapping [88547,88554]" dest="mapping: mapping [28676,28683]"/>
  <match src="call_argument [80708,80718]" dest="call_argument [70323,70333]"/>
  <match src="member_expression [100736,100757]" dest="member_expression [38554,38575]"/>
  <match src="comment: // assert(a == b * c + a % b); // There is no case in which this doesn't hold [4108,4185]" dest="comment: // assert(a == b * c + a % b); // There is no case in which this doesn't hold [4162,4239]"/>
  <match src="function_body [46024,46067]" dest="function_body [15278,15321]"/>
  <match src="uint256: uint256 [103101,103108]" dest="uint256: uint256 [40919,40926]"/>
  <match src="]: ] [94531,94532]" dest="]: ] [32317,32318]"/>
  <match src="): ) [83706,83707]" dest="): ) [71884,71885]"/>
  <match src="type_name [53462,53469]" dest="type_name [20456,20463]"/>
  <match src="): ) [92397,92398]" dest="): ) [30183,30184]"/>
  <match src="[: [ [93874,93875]" dest="[: [ [31660,31661]"/>
  <match src="comment: // XXX Currently there is no better way to check if there is a contract in an address [85953,86038]" dest="comment: // XXX Currently there is no better way to check if there is a contract in an address [73260,73345]"/>
  <match src="identifier: encodePacked [30733,30745]" dest="identifier: encodePacked [46405,46417]"/>
  <match src="pure: pure [29355,29359]" dest="pure: pure [45027,45031]"/>
  <match src="identifier: amount [99574,99580]" dest="identifier: amount [37392,37398]"/>
  <match src="parameter [31169,31185]" dest="parameter [46841,46857]"/>
  <match src="expression_statement [1930,1960]" dest="expression_statement [1984,2014]"/>
  <match src="(: ( [48316,48317]" dest="(: ( [55081,55082]"/>
  <match src="(: ( [78591,78592]" dest="(: ( [59280,59281]"/>
  <match src="{: { [93978,93979]" dest="{: { [31764,31765]"/>
  <match src="memory: memory [10040,10046]" dest="memory: memory [10139,10145]"/>
  <match src="uint: uint [54618,54622]" dest="uint: uint [21612,21616]"/>
  <match src="identifier: _state [92926,92932]" dest="identifier: _state [30712,30718]"/>
  <match src="public: public [97459,97465]" dest="public: public [35245,35251]"/>
  <match src="identifier: sender [81198,81204]" dest="identifier: sender [70507,70513]"/>
  <match src="identifier: decrementBalanceOfPhantom [82752,82777]" dest="identifier: recordVote [78858,78868]"/>
  <match src="{: { [6510,6511]" dest="{: { [6609,6610]"/>
  <match src="(: ( [82039,82040]" dest="(: ( [72141,72142]"/>
  <match src="call_argument [82487,82497]" dest="call_argument [71393,71403]"/>
  <match src="identifier: account [92390,92397]" dest="identifier: account [30176,30183]"/>
  <match src=".: . [96836,96837]" dest=".: . [34622,34623]"/>
  <match src="pragma_value:  ABIEncoderV2 [45,58]" dest="pragma_value:  ABIEncoderV2 [99,112]"/>
  <match src="(: ( [103325,103326]" dest="(: ( [41143,41144]"/>
  <match src=".: . [91895,91896]" dest=".: . [29681,29682]"/>
  <match src="external: external [13424,13432]" dest="external: external [23100,23108]"/>
  <match src="parameter [103727,103744]" dest="parameter [41545,41562]"/>
  <match src="primitive_type [54908,54915]" dest="primitive_type [21902,21909]"/>
  <match src="(: ( [100144,100145]" dest="(: ( [37962,37963]"/>
  <match src="function_body [85919,86480]" dest="function_body [73226,73787]"/>
  <match src="identifier: _state [102121,102127]" dest="identifier: _state [39939,39945]"/>
  <match src="uint: uint [54698,54702]" dest="uint: uint [21692,21696]"/>
  <match src="call_expression [83068,83081]" dest="call_expression [58505,58518]"/>
  <match src="}: } [97125,97126]" dest="}: } [34911,34912]"/>
  <match src="type_name [43761,43768]" dest="type_name [13015,13022]"/>
  <match src="array_access [101527,101551]" dest="array_access [39345,39369]"/>
  <match src="view: view [12604,12608]" dest="view: view [22280,22284]"/>
  <match src="identifier: a [11086,11087]" dest="identifier: a [11185,11186]"/>
  <match src="primitive_type [43065,43072]" dest="primitive_type [12319,12326]"/>
  <match src="identifier: INITIAL_STAKE_MULTIPLE [45092,45114]" dest="identifier: INITIAL_STAKE_MULTIPLE [14346,14368]"/>
  <match src="identifier: i [8561,8562]" dest="identifier: i [8660,8661]"/>
  <match src="): ) [29158,29159]" dest="): ) [44830,44831]"/>
  <match src="return_statement [95599,95622]" dest="return_statement [33385,33408]"/>
  <match src="type_name [7112,7116]" dest="type_name [7211,7215]"/>
  <match src="identifier: RPAREN [33848,33854]" dest="identifier: RPAREN [49520,49526]"/>
  <match src="visibility [63441,63449]" dest="visibility [63551,63559]"/>
  <match src="member_expression [100736,100761]" dest="member_expression [38554,38579]"/>
  <match src="type_name [32652,32659]" dest="type_name [48324,48331]"/>
  <match src="member_expression [7857,7862]" dest="member_expression [7956,7961]"/>
  <match src="): ) [93628,93629]" dest="): ) [31414,31415]"/>
  <match src="primitive_type [70159,70166]" dest="primitive_type [69790,69797]"/>
  <match src="call_expression [82853,82867]" dest="call_expression [55483,55497]"/>
  <match src="(: ( [36469,36470]" dest="(: ( [52141,52142]"/>
  <match src="call_expression [31340,31705]" dest="call_expression [47012,47377]"/>
  <match src="expression_statement [36268,36304]" dest="expression_statement [51940,51976]"/>
  <match src="comment: /* Epoch */ [43336,43347]" dest="comment: /* Epoch */ [12590,12601]"/>
  <match src="primitive_type [97153,97160]" dest="primitive_type [34939,34946]"/>
  <match src="parameter [53366,53373]" dest="parameter [20360,20367]"/>
  <match src="identifier: amount [75419,75425]" dest="identifier: amount [55756,55762]"/>
  <match src="&quot;: &quot; [92145,92146]" dest="&quot;: &quot; [29931,29932]"/>
  <match src="identifier: balanceOfRewardedWithPhantom [73181,73209]" dest="identifier: newDebt [65979,65986]"/>
  <match src="(: ( [29408,29409]" dest="(: ( [45080,45081]"/>
  <match src="call_argument [33579,33585]" dest="call_argument [49251,49257]"/>
  <match src="=: = [37845,37846]" dest="=: = [53517,53518]"/>
  <match src="identifier: DAO_EXIT_LOCKUP_EPOCHS [44013,44035]" dest="identifier: DAO_EXIT_LOCKUP_EPOCHS [13267,13289]"/>
  <match src="parameter [3264,3271]" dest="parameter [3318,3325]"/>
  <match src="primitive_type [52937,52944]" dest="primitive_type [19931,19938]"/>
  <match src="member_expression [82394,82404]" dest="member_expression [78168,78178]"/>
  <match src="return_type_definition [94468,94492]" dest="return_type_definition [32254,32278]"/>
  <match src="address: address [97581,97588]" dest="address: address [35367,35374]"/>
  <match src="function: function [13012,13020]" dest="function: function [22688,22696]"/>
  <match src=",: , [30219,30220]" dest=",: , [45891,45892]"/>
  <match src="array_access [103003,103025]" dest="array_access [40821,40843]"/>
  <match src="identifier: PoolSetters [79762,79773]" dest="identifier: Setters [69491,69498]"/>
  <match src="(: ( [85912,85913]" dest="(: ( [73219,73220]"/>
  <match src="{: { [100924,100925]" dest="{: { [38742,38743]"/>
  <match src="call_argument [7430,7434]" dest="call_argument [7529,7533]"/>
  <match src="external: external [54537,54545]" dest="external: external [21531,21539]"/>
  <match src="return: return [6686,6692]" dest="return: return [6785,6791]"/>
  <match src=".: . [94122,94123]" dest=".: . [31908,31909]"/>
  <match src="visibility [54926,54934]" dest="visibility [21920,21928]"/>
  <match src="event_paramater [80449,80472]" dest="event_paramater [77218,77241]"/>
  <match src="function_body [94493,94731]" dest="function_body [32279,32517]"/>
  <match src="identifier: value [46538,46543]" dest="identifier: value [15792,15797]"/>
  <match src="return: return [6961,6967]" dest="return: return [7060,7066]"/>
  <match src="call_argument [7182,7183]" dest="call_argument [7281,7282]"/>
  <match src="using_directive [71148,71175]" dest="using_directive [54656,54683]"/>
  <match src="memory: memory [7924,7930]" dest="memory: memory [8023,8029]"/>
  <match src="bytes32: bytes32 [36948,36955]" dest="bytes32: bytes32 [52620,52627]"/>
  <match src="string [22672,22710]" dest="string [62881,62910]"/>
  <match src="struct_member [87435,87454]" dest="struct_member [27564,27583]"/>
  <match src="identifier: stringifyTruncated [30193,30211]" dest="identifier: stringifyTruncated [45865,45883]"/>
  <match src="call_expression [93705,93716]" dest="call_expression [31491,31502]"/>
  <match src="(: ( [29600,29601]" dest="(: ( [45272,45273]"/>
  <match src="{: { [12491,12492]" dest="{: { [22167,22168]"/>
  <match src="): ) [102187,102188]" dest="): ) [40005,40006]"/>
  <match src=",: , [30526,30527]" dest=",: , [46198,46199]"/>
  <match src="identifier: _state [99222,99228]" dest="identifier: _state [37040,37046]"/>
  <match src="identifier: reserve0 [54002,54010]" dest="identifier: reserve0 [20996,21004]"/>
  <match src="memory: memory [10334,10340]" dest="memory: memory [10433,10439]"/>
  <match src="): ) [7319,7320]" dest="): ) [7418,7419]"/>
  <match src="return_statement [10090,10121]" dest="return_statement [10189,10220]"/>
  <match src="identifier: a [3295,3296]" dest="identifier: a [3349,3350]"/>
  <match src="identifier: D256 [9898,9902]" dest="identifier: D256 [9997,10001]"/>
  <match src="call_argument [72164,72168]" dest="call_argument [58272,58276]"/>
  <match src="visibility [95969,95975]" dest="visibility [33755,33761]"/>
  <match src="identifier: payloadC [32434,32442]" dest="identifier: payloadC [48106,48114]"/>
  <match src="user_defined_type [6780,6784]" dest="user_defined_type [6879,6883]"/>
  <match src="identifier: D256 [7359,7363]" dest="identifier: D256 [7458,7462]"/>
  <match src="pure: pure [46241,46245]" dest="pure: pure [15495,15499]"/>
  <match src="=: = [104181,104182]" dest="=: = [41999,42000]"/>
  <match src="function: function [14517,14525]" dest="function: function [24193,24201]"/>
  <match src="=: = [97786,97787]" dest="=: = [35572,35573]"/>
  <match src="parameter [54654,54664]" dest="parameter [21648,21658]"/>
  <match src="identifier: self [7842,7846]" dest="identifier: self [7941,7945]"/>
  <match src="call_argument [99574,99580]" dest="call_argument [37392,37398]"/>
  <match src="=: = [99703,99704]" dest="=: = [37521,37522]"/>
  <match src="member_expression [99805,99819]" dest="member_expression [37623,37637]"/>
  <match src="(: ( [952,953]" dest="(: ( [1006,1007]"/>
  <match src="[: [ [102274,102275]" dest="[: [ [40092,40093]"/>
  <match src="(: ( [34019,34020]" dest="(: ( [49691,49692]"/>
  <match src="identifier: amount [99729,99735]" dest="identifier: amount [37547,37553]"/>
  <match src="uint256: uint256 [78037,78044]" dest="uint256: uint256 [56122,56129]"/>
  <match src="number_literal: 0x3e [28658,28662]" dest="number_literal: 0x3e [44330,44334]"/>
  <match src="identifier: encodePacked [32060,32072]" dest="identifier: encodePacked [47732,47744]"/>
  <match src="parameter [98827,98831]" dest="parameter [36645,36649]"/>
  <match src="function_definition [93906,94171]" dest="function_definition [31692,31957]"/>
  <match src="primitive_type [30517,30521]" dest="primitive_type [46189,46193]"/>
  <match src=".: . [65026,65027]" dest=".: . [62284,62285]"/>
  <match src="uint256: uint256 [20431,20438]" dest="uint256: uint256 [63535,63542]"/>
  <match src="number_literal: 0 [94079,94080]" dest="number_literal: 0 [31865,31866]"/>
  <match src=".: . [93586,93587]" dest=".: . [31372,31373]"/>
  <match src="identifier: balance [100094,100101]" dest="identifier: balance [37912,37919]"/>
  <match src=".: . [106497,106498]" dest=".: . [68426,68427]"/>
  <match src="type_name [45727,45739]" dest="type_name [14981,14993]"/>
  <match src="identifier: Require [65019,65026]" dest="identifier: Require [62277,62284]"/>
  <match src="parameter [90339,90364]" dest="parameter [75411,75436]"/>
  <match src="identifier: target [10892,10898]" dest="identifier: target [10991,10997]"/>
  <match src="parameter [101130,101145]" dest="parameter [38948,38963]"/>
  <match src="yul_identifier [91086,91090]" dest="yul_identifier [76158,76162]"/>
  <match src="): ) [46022,46023]" dest="): ) [15276,15277]"/>
  <match src="call_expression [33724,33743]" dest="call_expression [49396,49415]"/>
  <match src="member_expression [97645,97685]" dest="member_expression [35431,35471]"/>
  <match src="type_name [53816,53823]" dest="type_name [20810,20817]"/>
  <match src="member_expression [84223,84235]" dest="member_expression [58218,58230]"/>
  <match src="): ) [21261,21262]" dest="): ) [56017,56018]"/>
  <match src="identifier: coupons [102161,102168]" dest="identifier: coupons [39979,39986]"/>
  <match src="primitive_type [10367,10371]" dest="primitive_type [10466,10470]"/>
  <match src="identifier: epoch [73652,73657]" dest="identifier: epoch [80053,80058]"/>
  <match src="identifier: getEpochStrategy [95157,95173]" dest="identifier: getEpochStrategy [32943,32959]"/>
  <match src="primitive_type [54560,54564]" dest="primitive_type [21554,21558]"/>
  <match src="return_type_definition [94972,94989]" dest="return_type_definition [32758,32775]"/>
  <match src="identifier: _state [101695,101701]" dest="identifier: _state [39513,39519]"/>
  <match src="primitive_type [102407,102414]" dest="primitive_type [40225,40232]"/>
  <match src="(: ( [102980,102981]" dest="(: ( [40798,40799]"/>
  <match src="uint256: uint256 [93216,93223]" dest="uint256: uint256 [31002,31009]"/>
  <match src="call_argument [32839,32863]" dest="call_argument [48511,48535]"/>
  <match src="member_expression [99407,99432]" dest="member_expression [37225,37250]"/>
  <match src="=: = [89867,89868]" dest="=: = [74939,74940]"/>
  <match src="identifier: payloadB [31640,31648]" dest="identifier: payloadB [47312,47320]"/>
  <match src="identifier: candidate [104410,104419]" dest="identifier: candidate [42228,42237]"/>
  <match src="type_name [83476,83483]" dest="type_name [66432,66439]"/>
  <match src=",: , [83756,83757]" dest=",: , [62607,62608]"/>
  <match src="comment: // populate the string starting with the least-significant character [35426,35494]" dest="comment: // populate the string starting with the least-significant character [51098,51166]"/>
  <match src="type_name [8110,8114]" dest="type_name [8209,8213]"/>
  <match src="type_name [76510,76517]" dest="type_name [58884,58891]"/>
  <match src="event_paramater [80352,80375]" dest="event_paramater [69735,69758]"/>
  <match src="bytes32: bytes32 [34030,34037]" dest="bytes32: bytes32 [49702,49709]"/>
  <match src="number_literal: 32 [34337,34339]" dest="number_literal: 32 [50009,50011]"/>
  <match src="{: { [93660,93661]" dest="{: { [31446,31447]"/>
  <match src="variable_declaration [34325,34334]" dest="variable_declaration [49997,50006]"/>
  <match src="identifier: balance [101702,101709]" dest="identifier: balance [39520,39527]"/>
  <match src="parenthesized_expression [32748,33117]" dest="parenthesized_expression [48420,48789]"/>
  <match src="parameter [53021,53036]" dest="parameter [20015,20030]"/>
  <match src="variable_declaration [67596,67615]" dest="variable_declaration [58605,58623]"/>
  <match src="call_expression [31466,31492]" dest="call_expression [47138,47164]"/>
  <match src=".: . [103631,103632]" dest=".: . [41449,41450]"/>
  <match src="return: return [4748,4754]" dest="return: return [4802,4808]"/>
  <match src="comment: // ============ Static Functions ============ [6550,6595]" dest="comment: // ============ Static Functions ============ [6649,6694]"/>
  <match src="returns: returns [92668,92675]" dest="returns: returns [30454,30461]"/>
  <match src="identifier: D256 [62637,62641]" dest="identifier: D256 [26506,26510]"/>
  <match src="identifier: Locked [106228,106234]" dest="identifier: Locked [68157,68163]"/>
  <match src="]: ] [101933,101934]" dest="]: ] [39751,39752]"/>
  <match src="uint256: uint256 [99492,99499]" dest="uint256: uint256 [37310,37317]"/>
  <match src="member_expression [102007,102047]" dest="member_expression [39825,39865]"/>
  <match src="): ) [3961,3962]" dest="): ) [4015,4016]"/>
  <match src="&quot;: &quot; [80078,80079]" dest="&quot;: &quot; [69593,69594]"/>
  <match src="member_expression [107959,107973]" dest="member_expression [66968,66984]"/>
  <match src="identifier: onlyFrozenOrFluid [106119,106136]" dest="identifier: onlyFrozenOrFluid [68048,68065]"/>
  <match src="identifier: j [35800,35801]" dest="identifier: j [51472,51473]"/>
  <match src=",: , [33775,33776]" dest=",: , [49447,49448]"/>
  <match src="identifier: Decimal [45571,45578]" dest="identifier: Decimal [14825,14832]"/>
  <match src="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      * - Subtraction cannot overflow.      */ [1084,1345]" dest="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      * - Subtraction cannot overflow.      */ [1138,1399]"/>
  <match src="identifier: to [54774,54776]" dest="identifier: to [21768,21770]"/>
  <match src="type_name [78037,78044]" dest="type_name [56122,56129]"/>
  <match src="=: = [101935,101936]" dest="=: = [39753,39754]"/>
  <match src="): ) [36967,36968]" dest="): ) [52639,52640]"/>
  <match src="pure: pure [7982,7986]" dest="pure: pure [8081,8085]"/>
  <match src="bytes: bytes [90450,90455]" dest="bytes: bytes [75522,75527]"/>
  <match src="): ) [97760,97761]" dest="): ) [35546,35547]"/>
  <match src="member_expression [93135,93156]" dest="member_expression [30921,30942]"/>
  <match src="user_defined_type [67307,67319]" dest="user_defined_type [66927,66939]"/>
  <match src="contract_body [64185,68274]" dest="contract_body [64934,67207]"/>
  <match src="call_argument [30212,30218]" dest="call_argument [45884,45890]"/>
  <match src="function_body [2334,2738]" dest="function_body [2388,2792]"/>
  <match src="number_literal: 6 [43887,43888]" dest="number_literal: 6 [13141,13142]"/>
  <match src="array_access [101895,101919]" dest="array_access [39713,39737]"/>
  <match src="type_name [10017,10021]" dest="type_name [10116,10120]"/>
  <match src="parameter [4728,4735]" dest="parameter [4782,4789]"/>
  <match src="call_argument [26856,26906]" dest="call_argument [78433,78462]"/>
  <match src="type_name [11057,11064]" dest="type_name [11156,11163]"/>
  <match src="state_mutability [96903,96907]" dest="state_mutability [34689,34693]"/>
  <match src=".: . [8817,8818]" dest=".: . [8916,8917]"/>
  <match src="identifier: getEpochStrategy [44780,44796]" dest="identifier: getEpochStrategy [14034,14050]"/>
  <match src="type_name [87353,87360]" dest="type_name [27482,27489]"/>
  <match src="return_statement [65641,65671]" dest="return_statement [67140,67161]"/>
  <match src="parenthesized_expression [29408,29777]" dest="parenthesized_expression [45080,45449]"/>
  <match src="primitive_type [10486,10490]" dest="primitive_type [10585,10589]"/>
  <match src="parameter [6780,6791]" dest="parameter [6879,6890]"/>
  <match src="parameter [82088,82101]" dest="parameter [71727,71740]"/>
  <match src="user_defined_type [7359,7363]" dest="user_defined_type [7458,7462]"/>
  <match src="address: address [52642,52649]" dest="address: address [19636,19643]"/>
  <match src="identifier: b [10047,10048]" dest="identifier: b [10146,10147]"/>
  <match src="function_body [77046,77151]" dest="function_body [60790,61181]"/>
  <match src="number_literal: 0x3a20 [28523,28529]" dest="number_literal: 0x3a20 [44195,44201]"/>
  <match src="{: { [9237,9238]" dest="{: { [9336,9337]"/>
  <match src="internal: internal [45548,45556]" dest="internal: internal [14802,14810]"/>
  <match src=".: . [101652,101653]" dest=".: . [39470,39471]"/>
  <match src="&lt;: &lt; [36487,36488]" dest="&lt;: &lt; [52159,52160]"/>
  <match src="primitive_type [28544,28550]" dest="primitive_type [44216,44222]"/>
  <match src="type_name [69920,69927]" dest="type_name [65072,65079]"/>
  <match src="variable_declaration [34166,34185]" dest="variable_declaration [49838,49857]"/>
  <match src="(: ( [62675,62676]" dest="(: ( [26544,26545]"/>
  <match src="type_name [30585,30592]" dest="type_name [46257,46264]"/>
  <match src="identifier: decrementBalanceOf [100520,100538]" dest="identifier: decrementBalanceOf [38338,38356]"/>
  <match src="call_argument [10113,10114]" dest="call_argument [10212,10213]"/>
  <match src="call_expression [8228,8262]" dest="call_expression [8327,8361]"/>
  <match src="address: address [78684,78691]" dest="address: address [79031,79038]"/>
  <match src="type_name [46485,46497]" dest="type_name [15739,15751]"/>
  <match src="}: } [67525,67526]" dest="}: } [66573,66574]"/>
  <match src="visibility [52760,52768]" dest="visibility [19754,19762]"/>
  <match src="user_defined_type [9880,9884]" dest="user_defined_type [9979,9983]"/>
  <match src="state_variable_declaration [43065,43149]" dest="state_variable_declaration [12319,12403]"/>
  <match src="): ) [14197,14198]" dest="): ) [23873,23874]"/>
  <match src="returns: returns [94809,94816]" dest="returns: returns [32595,32602]"/>
  <match src="identifier: balance [101727,101734]" dest="identifier: balance [39545,39552]"/>
  <match src=".: . [101245,101246]" dest=".: . [39063,39064]"/>
  <match src="=: = [37265,37266]" dest="=: = [52937,52938]"/>
  <match src="uint256: uint256 [1364,1371]" dest="uint256: uint256 [1418,1425]"/>
  <match src="function_definition [62594,62656]" dest="function_definition [26463,26525]"/>
  <match src="primitive_type [51177,51184]" dest="primitive_type [54785,54792]"/>
  <match src="parameter [31810,31822]" dest="parameter [47482,47494]"/>
  <match src="member_expression [101527,101542]" dest="member_expression [39345,39360]"/>
  <match src="view: view [96903,96907]" dest="view: view [34689,34693]"/>
  <match src="library_declaration [42740,47089]" dest="library_declaration [11994,16343]"/>
  <match src="uint256: uint256 [29896,29903]" dest="uint256: uint256 [45568,45575]"/>
  <match src="primitive_type [99186,99193]" dest="primitive_type [37004,37011]"/>
  <match src="call_argument [104625,104631]" dest="call_argument [42443,42449]"/>
  <match src="visibility [99663,99671]" dest="visibility [37481,37489]"/>
  <match src="call_expression [82123,82143]" dest="call_expression [71792,71812]"/>
  <match src="(: ( [90403,90404]" dest="(: ( [75475,75476]"/>
  <match src="): ) [84202,84203]" dest="): ) [58898,58899]"/>
  <match src="return_type_definition [10213,10227]" dest="return_type_definition [10312,10326]"/>
  <match src="): ) [94795,94796]" dest="): ) [32581,32582]"/>
  <match src="(: ( [3953,3954]" dest="(: ( [4007,4008]"/>
  <match src="uint256: uint256 [12618,12625]" dest="uint256: uint256 [22294,22301]"/>
  <match src="(: ( [12773,12774]" dest="(: ( [22449,22450]"/>
  <match src="function: function [84180,84188]" dest="function: function [58865,58873]"/>
  <match src="call_expression [9455,9492]" dest="call_expression [9554,9591]"/>
  <match src=".: . [92471,92472]" dest=".: . [30257,30258]"/>
  <match src="): ) [93715,93716]" dest="): ) [31501,31502]"/>
  <match src="type_name [82156,82163]" dest="type_name [70788,70795]"/>
  <match src="function_definition [8087,8270]" dest="function_definition [8186,8369]"/>
  <match src="call_expression [94011,94024]" dest="call_expression [31797,31810]"/>
  <match src=".: . [81806,81807]" dest=".: . [71570,71571]"/>
  <match src="user_defined_type [8878,8882]" dest="user_defined_type [8977,8981]"/>
  <match src="identifier: coupons [103624,103631]" dest="identifier: coupons [41442,41449]"/>
  <match src="identifier: epoch [96339,96344]" dest="identifier: epoch [34125,34130]"/>
  <match src="parameter [53092,53107]" dest="parameter [20086,20101]"/>
  <match src="identifier: epoch [82034,82039]" dest="identifier: epoch [72136,72141]"/>
  <match src="identifier: Bond [80273,80277]" dest="identifier: Unbond [69827,69833]"/>
  <match src="identifier: reason [101283,101289]" dest="identifier: reason [39101,39107]"/>
  <match src="function: function [52918,52926]" dest="function: function [19912,19920]"/>
  <match src="(: ( [94957,94958]" dest="(: ( [32743,32744]"/>
  <match src="visibility [95065,95071]" dest="visibility [32851,32857]"/>
  <match src="identifier: _state [100969,100975]" dest="identifier: _state [38787,38793]"/>
  <match src="type_name [31833,31840]" dest="type_name [47505,47512]"/>
  <match src=",: , [82578,82579]" dest=",: , [71932,71933]"/>
  <match src="constant: constant [42798,42806]" dest="constant: constant [12052,12060]"/>
  <match src="parameter [96298,96305]" dest="parameter [34084,34091]"/>
  <match src="type_name [78046,78053]" dest="type_name [56131,56138]"/>
  <match src="}: } [103280,103281]" dest="}: } [41098,41099]"/>
  <match src="binary_expression [5433,5439]" dest="binary_expression [5487,5493]"/>
  <match src="identifier: D256 [10035,10039]" dest="identifier: D256 [10134,10138]"/>
  <match src="(: ( [54868,54869]" dest="(: ( [21862,21863]"/>
  <match src="primitive_type [80449,80456]" dest="primitive_type [77218,77225]"/>
  <match src="identifier: mod [4679,4682]" dest="identifier: mod [4733,4736]"/>
  <match src="identifier: encodePacked [29460,29472]" dest="identifier: encodePacked [45132,45144]"/>
  <match src="variable_declaration_statement [35529,35548]" dest="variable_declaration_statement [51201,51220]"/>
  <match src="primitive_type [81486,81493]" dest="primitive_type [79192,79199]"/>
  <match src="constant: constant [43081,43089]" dest="constant: constant [12335,12343]"/>
  <match src="return_statement [47063,47079]" dest="return_statement [16317,16333]"/>
  <match src="identifier: D256 [7792,7796]" dest="identifier: D256 [7891,7895]"/>
  <match src="): ) [90586,90587]" dest="): ) [75658,75659]"/>
  <match src="function_definition [9296,9503]" dest="function_definition [9395,9602]"/>
  <match src=".: . [90507,90508]" dest=".: . [75579,75580]"/>
  <match src="identifier: D256 [10560,10564]" dest="identifier: D256 [10659,10663]"/>
  <match src="primitive_type [32767,32773]" dest="primitive_type [48439,48445]"/>
  <match src="identifier: COLON [30823,30828]" dest="identifier: COLON [46495,46500]"/>
  <match src="function_definition [94943,95036]" dest="function_definition [32729,32822]"/>
  <match src="parenthesized_expression [32008,32533]" dest="parenthesized_expression [47680,48205]"/>
  <match src="): ) [36302,36303]" dest="): ) [51974,51975]"/>
  <match src="): ) [106152,106153]" dest="): ) [68081,68082]"/>
  <match src="identifier: epoch [95819,95824]" dest="identifier: epoch [33605,33610]"/>
  <match src="type_name [67576,67583]" dest="type_name [62125,62132]"/>
  <match src="(: ( [13082,13083]" dest="(: ( [22758,22759]"/>
  <match src="function: function [101770,101778]" dest="function: function [39588,39596]"/>
  <match src=".: . [100726,100727]" dest=".: . [38544,38545]"/>
  <match src="identifier: account [104975,104982]" dest="identifier: account [42793,42800]"/>
  <match src="member_expression [101301,101315]" dest="member_expression [39119,39133]"/>
  <match src="visibility [101465,101473]" dest="visibility [39283,39291]"/>
  <match src="function: function [46729,46737]" dest="function: function [15983,15991]"/>
  <match src="return_statement [8627,8639]" dest="return_statement [8726,8738]"/>
  <match src=",: , [9691,9692]" dest=",: , [9790,9791]"/>
  <match src=",: , [100692,100693]" dest=",: , [38510,38511]"/>
  <match src="type_name [80163,80170]" dest="type_name [69678,69685]"/>
  <match src="identifier: candidates [103844,103854]" dest="identifier: candidates [41662,41672]"/>
  <match src="state_mutability [9784,9788]" dest="state_mutability [9883,9887]"/>
  <match src="type_name [3230,3237]" dest="type_name [3284,3291]"/>
  <match src="identifier: accounts [101944,101952]" dest="identifier: accounts [39762,39770]"/>
  <match src="parameter [7304,7313]" dest="parameter [7403,7412]"/>
  <match src="call_argument [83100,83104]" dest="call_argument [58537,58541]"/>
  <match src="return_statement [34867,34881]" dest="return_statement [50539,50553]"/>
  <match src="primitive_type [97329,97336]" dest="primitive_type [35115,35122]"/>
  <match src="primitive_type [37036,37043]" dest="primitive_type [52708,52715]"/>
  <match src="parameter [8001,8012]" dest="parameter [8100,8111]"/>
  <match src="identifier: IDollar [50060,50067]" dest="identifier: IDollar [25499,25506]"/>
  <match src="visibility [45283,45291]" dest="visibility [14537,14545]"/>
  <match src="): ) [9709,9710]" dest="): ) [9808,9809]"/>
  <match src="string [106544,106566]" dest="string [68473,68495]"/>
  <match src="member_expression [97504,97521]" dest="member_expression [35290,35307]"/>
  <match src="member_expression [93028,93048]" dest="member_expression [30814,30834]"/>
  <match src="): ) [84281,84282]" dest="): ) [58985,58986]"/>
  <match src="identifier: Coupons [87632,87639]" dest="identifier: Coupons [27761,27768]"/>
  <match src="call_expression [32268,32287]" dest="call_expression [47940,47959]"/>
  <match src="identifier: coupons [95749,95756]" dest="identifier: coupons [33535,33542]"/>
  <match src="identifier: z [37810,37811]" dest="identifier: z [53482,53483]"/>
  <match src="function: function [54386,54394]" dest="function: function [21380,21388]"/>
  <match src="}: } [5487,5488]" dest="}: } [5541,5542]"/>
  <match src="): ) [84280,84281]" dest="): ) [58976,58977]"/>
  <match src="return: return [7141,7147]" dest="return: return [7240,7246]"/>
  <match src="call_expression [94282,94307]" dest="call_expression [32068,32093]"/>
  <match src=".: . [67314,67315]" dest=".: . [66934,66935]"/>
  <match src="identifier: stringifyTruncated [30772,30790]" dest="identifier: stringifyTruncated [46444,46462]"/>
  <match src="identifier: statusOf [94430,94438]" dest="identifier: statusOf [32216,32224]"/>
  <match src="[: [ [100629,100630]" dest="[: [ [38447,38448]"/>
  <match src="{: { [103350,103351]" dest="{: { [41168,41169]"/>
  <match src="constant: constant [43659,43667]" dest="constant: constant [12913,12921]"/>
  <match src="parameter [52906,52910]" dest="parameter [19900,19904]"/>
  <match src="): ) [21175,21176]" dest="): ) [55938,55939]"/>
  <match src="visibility [36974,36981]" dest="visibility [52646,52653]"/>
  <match src="uint256: uint256 [93545,93552]" dest="uint256: uint256 [31331,31338]"/>
  <match src="return_type_definition [45178,45195]" dest="return_type_definition [14432,14449]"/>
  <match src=",: , [101161,101162]" dest=",: , [38979,38980]"/>
  <match src="&quot;: &quot; [19854,19855]" dest="&quot;: &quot; [71535,71536]"/>
  <match src="contract: contract [16294,16302]" dest="contract: contract [60082,60090]"/>
  <match src="return_statement [10384,10414]" dest="return_statement [10483,10513]"/>
  <match src="uint256: uint256 [6877,6884]" dest="uint256: uint256 [6976,6983]"/>
  <match src="bool: bool [88094,88098]" dest="bool: bool [28223,28227]"/>
  <match src="(: ( [87387,87388]" dest="(: ( [27516,27517]"/>
  <match src="): ) [38061,38062]" dest="): ) [53733,53734]"/>
  <match src="(: ( [30652,30653]" dest="(: ( [46324,46325]"/>
  <match src="comment: // put the input bytes into the result [34118,34156]" dest="comment: // put the input bytes into the result [49790,49828]"/>
  <match src=".: . [46793,46794]" dest=".: . [16047,16048]"/>
  <match src="comment: // bytes32 are &quot;0x&quot; followed by 32 bytes of data which take up 2 characters each [37075,37155]" dest="comment: // bytes32 are &quot;0x&quot; followed by 32 bytes of data which take up 2 characters each [52747,52827]"/>
  <match src="}: } [4799,4800]" dest="}: } [4853,4854]"/>
  <match src="type_name [88517,88525]" dest="type_name [28646,28654]"/>
  <match src="identifier: COUPON_EXPIRATION [44208,44225]" dest="identifier: COUPON_EXPIRATION [13462,13479]"/>
  <match src="function_body [93841,93898]" dest="function_body [31627,31684]"/>
  <match src="identifier: staged [93884,93890]" dest="identifier: staged [31670,31676]"/>
  <match src="primitive_type [7057,7064]" dest="primitive_type [7156,7163]"/>
  <match src="+: + [987,988]" dest="+: + [1041,1042]"/>
  <match src="{: { [1919,1920]" dest="{: { [1973,1974]"/>
  <match src="): ) [36029,36030]" dest="): ) [51701,51702]"/>
  <match src="function_definition [96368,96504]" dest="function_definition [34154,34290]"/>
  <match src="member_expression [9246,9256]" dest="member_expression [9345,9355]"/>
  <match src="primitive_type [52975,52979]" dest="primitive_type [19969,19973]"/>
  <match src="type_name [53259,53266]" dest="type_name [20253,20260]"/>
  <match src="identifier: abi [28984,28987]" dest="identifier: abi [44656,44659]"/>
  <match src="public: public [90162,90168]" dest="public: public [75234,75240]"/>
  <match src="{: { [46384,46385]" dest="{: { [15638,15639]"/>
  <match src="parameter [31833,31847]" dest="parameter [47505,47519]"/>
  <match src="function: function [99295,99303]" dest="function: function [37113,37121]"/>
  <match src="]: ] [37309,37310]" dest="]: ] [52981,52982]"/>
  <match src="primitive_type [95954,95961]" dest="primitive_type [33740,33747]"/>
  <match src="identifier: candidates [88685,88695]" dest="identifier: candidates [28814,28824]"/>
  <match src="{: { [31249,31250]" dest="{: { [46921,46922]"/>
  <match src="for: for [91852,91855]" dest="for: for [29638,29641]"/>
  <match src="for: for [91884,91887]" dest="for: for [29670,29673]"/>
  <match src="call_argument [29550,29555]" dest="call_argument [45222,45227]"/>
  <match src="user_defined_type [7919,7923]" dest="user_defined_type [8018,8022]"/>
  <match src="identifier: account [102275,102282]" dest="identifier: account [40093,40100]"/>
  <match src="returns: returns [46123,46130]" dest="returns: returns [15377,15384]"/>
  <match src="identifier: c [4088,4089]" dest="identifier: c [4142,4143]"/>
  <match src="return_type_definition [97739,97761]" dest="return_type_definition [35525,35547]"/>
  <match src="internal: internal [46109,46117]" dest="internal: internal [15363,15371]"/>
  <match src="(: ( [4727,4728]" dest="(: ( [4781,4782]"/>
  <match src="identifier: abi [30067,30070]" dest="identifier: abi [45739,45742]"/>
  <match src="call_expression [8588,8603]" dest="call_expression [8687,8702]"/>
  <match src="assignment_expression [100383,100440]" dest="assignment_expression [38201,38258]"/>
  <match src="memory: memory [101170,101176]" dest="memory: memory [38988,38994]"/>
  <match src="identifier: getChainId [47007,47017]" dest="identifier: getChainId [16261,16271]"/>
  <match src="comment: /*     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [91135,91788]" dest="comment: /*     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [76244,76897]"/>
  <match src="call_expression [94109,94146]" dest="call_expression [31895,31932]"/>
  <match src="uint256: uint256 [45457,45464]" dest="uint256: uint256 [14711,14718]"/>
  <match src="call_argument [80639,80649]" dest="call_argument [70254,70264]"/>
  <match src="return_statement [45912,45946]" dest="return_statement [15166,15200]"/>
  <match src=".: . [99711,99712]" dest=".: . [37529,37530]"/>
  <match src=".: . [93034,93035]" dest=".: . [30820,30821]"/>
  <match src="identifier: couponAllowances [94868,94884]" dest="identifier: couponAllowances [32654,32670]"/>
  <match src="]: ] [100958,100959]" dest="]: ] [38776,38777]"/>
  <match src="identifier: token0 [54168,54174]" dest="identifier: token0 [21162,21168]"/>
  <match src="identifier: Require [84647,84654]" dest="identifier: Require [79070,79077]"/>
  <match src="): ) [30795,30796]" dest="): ) [46467,46468]"/>
  <match src="state_variable_declaration [42782,42820]" dest="state_variable_declaration [12036,12074]"/>
  <match src="external: external [54294,54302]" dest="external: external [21288,21296]"/>
  <match src="comment: // all bytes are zero [34919,34940]" dest="comment: // all bytes are zero [50591,50612]"/>
  <match src="state_mutability [4714,4718]" dest="state_mutability [4768,4772]"/>
  <match src="string_literal [26115,26150]" dest="string_literal [78583,78613]"/>
  <match src="external: external [84129,84137]" dest="external: external [77440,77448]"/>
  <match src="primitive_type [9798,9802]" dest="primitive_type [9897,9901]"/>
  <match src="identifier: stringifyTruncated [33560,33578]" dest="identifier: stringifyTruncated [49232,49250]"/>
  <match src="function_body [7377,7447]" dest="function_body [7476,7546]"/>
  <match src="identifier: spender [14150,14157]" dest="identifier: spender [23826,23833]"/>
  <match src=",: , [80301,80302]" dest=",: , [69857,69858]"/>
  <match src="call_expression [32839,32863]" dest="call_expression [48511,48535]"/>
  <match src="identifier: outstandingCoupons [95646,95664]" dest="identifier: outstandingCoupons [33432,33450]"/>
  <match src="block_statement [8566,8615]" dest="block_statement [8665,8714]"/>
  <match src=".: . [96045,96046]" dest=".: . [33831,33832]"/>
  <match src="function_body [95856,95921]" dest="function_body [33642,33707]"/>
  <match src="uint256: uint256 [93969,93976]" dest="uint256: uint256 [31755,31762]"/>
  <match src="contract_body [85483,86483]" dest="contract_body [72790,73790]"/>
  <match src="array_access [37642,37660]" dest="array_access [53314,53332]"/>
  <match src="memory: memory [9747,9753]" dest="memory: memory [9846,9852]"/>
  <match src="identifier: amount [101845,101851]" dest="identifier: amount [39663,39669]"/>
  <match src="function_definition [7896,8079]" dest="function_definition [7995,8178]"/>
  <match src="block_statement [51502,51701]" dest="block_statement [63995,64115]"/>
  <match src="(: ( [6820,6821]" dest="(: ( [6919,6920]"/>
  <match src=",: , [1846,1847]" dest=",: , [1900,1901]"/>
  <match src="(: ( [32033,32034]" dest="(: ( [47705,47706]"/>
  <match src="returns: returns [97739,97746]" dest="returns: returns [35525,35532]"/>
  <match src="): ) [8602,8603]" dest="): ) [8701,8702]"/>
  <match src="parameter [96262,96275]" dest="parameter [34048,34061]"/>
  <match src="type_name [53500,53504]" dest="type_name [20494,20498]"/>
  <match src="identifier: amount [99333,99339]" dest="identifier: amount [37151,37157]"/>
  <match src="identifier: b [2670,2671]" dest="identifier: b [2724,2725]"/>
  <match src="identifier: must [29992,29996]" dest="identifier: must [45664,45668]"/>
  <match src="): ) [45899,45900]" dest="): ) [15153,15154]"/>
  <match src="identifier: outstanding [103632,103643]" dest="identifier: outstanding [41450,41461]"/>
  <match src=",: , [53269,53270]" dest=",: , [20263,20264]"/>
  <match src="parameter [7037,7046]" dest="parameter [7136,7145]"/>
  <match src="&quot;: &quot; [20721,20722]" dest="&quot;: &quot; [62252,62253]"/>
  <match src="returns: returns [52774,52781]" dest="returns: returns [19768,19775]"/>
  <match src="expression_statement [103782,103827]" dest="expression_statement [41600,41645]"/>
  <match src="parameter [94205,94220]" dest="parameter [31991,32006]"/>
  <match src="call_expression [81751,81764]" dest="call_expression [70931,70944]"/>
  <match src="user_defined_type [107555,107566]" dest="user_defined_type [76955,76966]"/>
  <match src=".: . [93465,93466]" dest=".: . [31251,31252]"/>
  <match src="primitive_type [88028,88035]" dest="primitive_type [28157,28164]"/>
  <match src="identifier: epoch [101970,101975]" dest="identifier: epoch [39788,39793]"/>
  <match src="bytes32: bytes32 [91909,91916]" dest="bytes32: bytes32 [29695,29702]"/>
  <match src="): ) [73011,73012]" dest="): ) [58294,58295]"/>
  <match src="assignment_expression [36856,36866]" dest="assignment_expression [52528,52538]"/>
  <match src="user_defined_type [62629,62641]" dest="user_defined_type [26498,26510]"/>
  <match src="return_type_definition [11048,11065]" dest="return_type_definition [11147,11164]"/>
  <match src="memory: memory [9885,9891]" dest="memory: memory [9984,9990]"/>
  <match src="block_statement [35118,35155]" dest="block_statement [50790,50827]"/>
  <match src="bool: bool [99076,99080]" dest="bool: bool [36894,36898]"/>
  <match src="parameter [93931,93946]" dest="parameter [31717,31732]"/>
  <match src="type_name [35235,35242]" dest="type_name [50907,50914]"/>
  <match src="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts with custom message when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      *      * _Available since v2.4.0._      */ [4808,5313]" dest="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts with custom message when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      *      * _Available since v2.4.0._      */ [4862,5367]"/>
  <match src="constant: constant [44100,44108]" dest="constant: constant [13354,13362]"/>
  <match src="variable_declaration_tuple [83457,83493]" dest="variable_declaration_tuple [61316,61377]"/>
  <match src="identifier: supply [100727,100733]" dest="identifier: supply [38545,38551]"/>
  <match src="function_body [47052,47086]" dest="function_body [16306,16340]"/>
  <match src="member_expression [102050,102063]" dest="member_expression [39868,39881]"/>
  <match src=".: . [103788,103789]" dest=".: . [41606,41607]"/>
  <match src="identifier: amount [101571,101577]" dest="identifier: amount [39389,39395]"/>
  <match src="primitive_type [53366,53373]" dest="primitive_type [20360,20367]"/>
  <match src="(: ( [92419,92420]" dest="(: ( [30205,30206]"/>
  <match src="identifier: value [82698,82703]" dest="identifier: candidate [78930,78939]"/>
  <match src="call_argument [1446,1478]" dest="call_argument [1500,1532]"/>
  <match src="identifier: _state [103782,103788]" dest="identifier: _state [41600,41606]"/>
  <match src="identifier: self [10572,10576]" dest="identifier: self [10671,10675]"/>
  <match src="function_definition [51146,51289]" dest="function_definition [54745,54974]"/>
  <match src="identifier: push [103262,103266]" dest="identifier: push [41080,41084]"/>
  <match src="call_expression [103398,103423]" dest="call_expression [41216,41241]"/>
  <match src="call_expression [84818,84907]" dest="call_expression [79277,79379]"/>
  <match src="function_body [29976,30485]" dest="function_body [45648,46157]"/>
  <match src="identifier: totalSupply [93997,94008]" dest="identifier: totalSupply [31783,31794]"/>
  <match src="primitive_type [102583,102590]" dest="primitive_type [40401,40408]"/>
  <match src="member_expression [32056,32072]" dest="member_expression [47728,47744]"/>
  <match src="array_access [101239,101263]" dest="array_access [39057,39081]"/>
  <match src="=: = [44369,44370]" dest="=: = [13623,13624]"/>
  <match src="memory: memory [10316,10322]" dest="memory: memory [10415,10421]"/>
  <match src="&quot;: &quot; [57342,57343]" dest="&quot;: &quot; [78116,78117]"/>
  <match src="inheritance_specifier [16312,16319]" dest="inheritance_specifier [60101,60112]"/>
  <match src="identifier: pool [88234,88238]" dest="identifier: pool [28363,28367]"/>
  <match src="string_literal [35140,35143]" dest="string_literal [50812,50815]"/>
  <match src="new_expression [37187,37196]" dest="new_expression [52859,52868]"/>
  <match src="identifier: balance [100318,100325]" dest="identifier: balance [38136,38143]"/>
  <match src="[: [ [102475,102476]" dest="[: [ [40293,40294]"/>
  <match src="identifier: bstr [35910,35914]" dest="identifier: bstr [51582,51586]"/>
  <match src="}: } [104455,104456]" dest="}: } [42273,42274]"/>
  <match src="contract_declaration [89561,91131]" dest="contract_declaration [74633,76203]"/>
  <match src="): ) [102109,102110]" dest="): ) [39927,39928]"/>
  <match src="call_argument [36331,36352]" dest="call_argument [52003,52024]"/>
  <match src="type_name [87651,87658]" dest="type_name [27780,27787]"/>
  <match src="identifier: result [37642,37648]" dest="identifier: result [53314,53320]"/>
  <match src="identifier: stringifyTruncated [32182,32200]" dest="identifier: stringifyTruncated [47854,47872]"/>
  <match src="using: using [91837,91842]" dest="using: using [29623,29628]"/>
  <match src="return_statement [98844,98857]" dest="return_statement [36662,36675]"/>
  <match src="}: } [93897,93898]" dest="}: } [31683,31684]"/>
  <match src="type_name [36017,36022]" dest="type_name [51689,51694]"/>
  <match src="primitive_type [14555,14562]" dest="primitive_type [24231,24238]"/>
  <match src="function_definition [50128,50186]" dest="function_definition [25567,25625]"/>
  <match src="returns: returns [95692,95699]" dest="returns: returns [33478,33485]"/>
  <match src="identifier: RPAREN [32470,32476]" dest="identifier: RPAREN [48142,48148]"/>
  <match src="pure: pure [4714,4718]" dest="pure: pure [4768,4772]"/>
  <match src="identifier: amount1Out [53930,53940]" dest="identifier: amount1Out [20924,20934]"/>
  <match src="return_type_definition [34079,34101]" dest="return_type_definition [49751,49773]"/>
  <match src="function: function [7012,7020]" dest="function: function [7111,7119]"/>
  <match src="view: view [54303,54307]" dest="view: view [21297,21301]"/>
  <match src="identifier: swap [54727,54731]" dest="identifier: swap [21721,21725]"/>
  <match src="state_variable_declaration [91909,92023]" dest="state_variable_declaration [29695,29809]"/>
  <match src="member_expression [101301,101322]" dest="member_expression [39119,39140]"/>
  <match src=".: . [106227,106228]" dest=".: . [68156,68157]"/>
  <match src="uint256: uint256 [87594,87601]" dest="uint256: uint256 [27723,27730]"/>
  <match src="function_definition [65440,65689]" dest="function_definition [66852,67204]"/>
  <match src="identifier: balanceOf [52927,52936]" dest="identifier: balanceOf [19921,19930]"/>
  <match src="public: public [97308,97314]" dest="public: public [35094,35100]"/>
  <match src="(: ( [94635,94636]" dest="(: ( [32421,32422]"/>
  <match src="identifier: input [38196,38201]" dest="identifier: input [53868,53873]"/>
  <match src="type_cast_expression [38185,38225]" dest="type_cast_expression [53857,53897]"/>
  <match src="variable_declaration_statement [1970,1988]" dest="variable_declaration_statement [2024,2042]"/>
  <match src="type_cast_expression [29427,29762]" dest="type_cast_expression [45099,45434]"/>
  <match src="primitive_type [94258,94265]" dest="primitive_type [32044,32051]"/>
  <match src="}: } [103502,103503]" dest="}: } [41320,41321]"/>
  <match src="type_name [96630,96644]" dest="type_name [34416,34430]"/>
  <match src="identifier: incrementBalanceOfStaged [82543,82567]" dest="identifier: incrementBalanceOfStaged [71897,71921]"/>
  <match src="uint256: uint256 [83620,83627]" dest="uint256: uint256 [61039,61046]"/>
  <match src="type_name [9561,9565]" dest="type_name [9660,9664]"/>
  <match src="function_definition [46998,47086]" dest="function_definition [16252,16340]"/>
  <match src="identifier: priceCumulative [65790,65805]" dest="identifier: newSupply [66334,66343]"/>
  <match src="call_expression [82220,82340]" dest="call_expression [80177,80378]"/>
  <match src="{: { [93117,93118]" dest="{: { [30903,30904]"/>
  <match src="identifier: LPAREN [29635,29641]" dest="identifier: LPAREN [45307,45313]"/>
  <match src="): ) [52696,52697]" dest="): ) [19690,19691]"/>
  <match src="parameter [29312,29328]" dest="parameter [44984,45000]"/>
  <match src="call_expression [100328,100372]" dest="call_expression [38146,38190]"/>
  <match src="identifier: recipient [98782,98791]" dest="identifier: recipient [36600,36609]"/>
  <match src="return_statement [93852,93891]" dest="return_statement [31638,31677]"/>
  <match src=".: . [84299,84300]" dest=".: . [58314,58315]"/>
  <match src="call_expression [32099,32123]" dest="call_expression [47771,47795]"/>
  <match src="type_name [1970,1977]" dest="type_name [2024,2031]"/>
  <match src="call_argument [34967,34968]" dest="call_argument [50639,50640]"/>
  <match src="}: } [11140,11141]" dest="}: } [11239,11240]"/>
  <match src="]: ] [104982,104983]" dest="]: ] [42800,42801]"/>
  <match src="identifier: ERC20 [16303,16308]" dest="identifier: Market [60091,60097]"/>
  <match src="visibility [92399,92405]" dest="visibility [30185,30191]"/>
  <match src="[: [ [102697,102698]" dest="[: [ [40515,40516]"/>
  <match src="member_expression [10628,10642]" dest="member_expression [10727,10741]"/>
  <match src="function_body [106154,106322]" dest="function_body [68083,68251]"/>
  <match src="comment: /**      * @dev Upgrades the proxy to a new implementation.      * @param newImplementation Address of the new implementation.      */ [90177,90314]" dest="comment: /**      * @dev Upgrades the proxy to a new implementation.      * @param newImplementation Address of the new implementation.      */ [75249,75386]"/>
  <match src="type_name [3954,3961]" dest="type_name [4008,4015]"/>
  <match src="visibility [32681,32689]" dest="visibility [48353,48361]"/>
  <match src="user_defined_type [95272,95295]" dest="user_defined_type [33058,33081]"/>
  <match src="): ) [100371,100372]" dest="): ) [38189,38190]"/>
  <match src="identifier: reason [101989,101995]" dest="identifier: reason [39807,39813]"/>
  <match src="): ) [66928,66929]" dest="): ) [66195,66196]"/>
  <match src="call_argument [32858,32862]" dest="call_argument [48530,48534]"/>
  <match src="function_body [44715,44763]" dest="function_body [13969,14017]"/>
  <match src="member_expression [99383,99404]" dest="member_expression [37201,37222]"/>
  <match src="{: { [97064,97065]" dest="{: { [34850,34851]"/>
  <match src="primitive_type [2280,2287]" dest="primitive_type [2334,2341]"/>
  <match src="(: ( [9741,9742]" dest="(: ( [9840,9841]"/>
  <match src="call_expression [32346,32365]" dest="call_expression [48018,48037]"/>
  <match src="call_argument [32314,32319]" dest="call_argument [47986,47991]"/>
  <match src="if_statement [94278,94349]" dest="if_statement [32064,32135]"/>
  <match src="call_expression [30357,30376]" dest="call_expression [46029,46048]"/>
  <match src="using: using [6332,6337]" dest="using: using [6431,6436]"/>
  <match src="parameter [51177,51191]" dest="parameter [54785,54799]"/>
  <match src="binary_expression [35267,35273]" dest="binary_expression [50939,50945]"/>
  <match src="identifier: value [45624,45629]" dest="identifier: value [14878,14883]"/>
  <match src="number_literal: 0 [20577,20578]" dest="number_literal: 0 [63689,63690]"/>
  <match src="type_name [80377,80384]" dest="type_name [69760,69767]"/>
  <match src="type_name [36948,36955]" dest="type_name [52620,52627]"/>
  <match src="return: return [8221,8227]" dest="return: return [8320,8326]"/>
  <match src="identifier: RPAREN [30403,30409]" dest="identifier: RPAREN [46075,46081]"/>
  <match src="state_mutability [32695,32699]" dest="state_mutability [48367,48371]"/>
  <match src="primitive_type [99076,99080]" dest="primitive_type [36894,36898]"/>
  <match src="returns: returns [53357,53364]" dest="returns: returns [20351,20358]"/>
  <match src="returns: returns [95570,95577]" dest="returns: returns [33356,33363]"/>
  <match src="parameter [62629,62648]" dest="parameter [26498,26517]"/>
  <match src="}: } [94610,94611]" dest="}: } [32396,32397]"/>
  <match src="identifier: isInitialized [106669,106682]" dest="identifier: isInitialized [68598,68611]"/>
  <match src="): ) [98920,98921]" dest="): ) [36738,36739]"/>
  <match src="uint256: uint256 [99186,99193]" dest="uint256: uint256 [37004,37011]"/>
  <match src="primitive_type [95335,95342]" dest="primitive_type [33121,33128]"/>
  <match src="type_name [96741,96748]" dest="type_name [34527,34534]"/>
  <match src="call_expression [83651,83708]" dest="call_expression [71843,71886]"/>
  <match src="identifier: add [7263,7266]" dest="identifier: add [7362,7365]"/>
  <match src="type_name [10560,10564]" dest="type_name [10659,10663]"/>
  <match src="array_access [104353,104381]" dest="array_access [42171,42199]"/>
  <match src="public: public [71755,71761]" dest="public: public [65765,65771]"/>
  <match src="if: if [2566,2568]" dest="if: if [2620,2622]"/>
  <match src="parameter [36017,36029]" dest="parameter [51689,51701]"/>
  <match src="identifier: value [9838,9843]" dest="identifier: value [9937,9942]"/>
  <match src="visibility [95556,95564]" dest="visibility [33342,33350]"/>
  <match src="indexed: indexed [14814,14821]" dest="indexed: indexed [24490,24497]"/>
  <match src="identifier: LPAREN [30908,30914]" dest="identifier: LPAREN [46580,46586]"/>
  <match src="address: address [98669,98676]" dest="address: address [36487,36494]"/>
  <match src="identifier: amount [99433,99439]" dest="identifier: amount [37251,37257]"/>
  <match src="user_defined_type [88619,88630]" dest="user_defined_type [28748,28759]"/>
  <match src="identifier: stringifyTruncated [30110,30128]" dest="identifier: stringifyTruncated [45782,45800]"/>
  <match src="type_name [81118,81125]" dest="type_name [71225,71232]"/>
  <match src="type_name [6932,6936]" dest="type_name [7031,7035]"/>
  <match src="uint256: uint256 [33290,33297]" dest="uint256: uint256 [48962,48969]"/>
  <match src="number_literal: 64 [37791,37793]" dest="number_literal: 64 [53463,53465]"/>
  <match src="identifier: sub [7665,7668]" dest="identifier: sub [7764,7767]"/>
  <match src="identifier: BOOTSTRAPPING_PERIOD [45214,45234]" dest="identifier: BOOTSTRAPPING_PERIOD [14468,14488]"/>
  <match src="type_name [18957,18964]" dest="type_name [17466,17473]"/>
  <match src=",: , [80244,80245]" dest=",: , [77349,77350]"/>
  <match src="call_argument [29582,29608]" dest="call_argument [45254,45280]"/>
  <match src="return_statement [99093,99106]" dest="return_statement [36911,36924]"/>
  <match src="member_expression [101720,101734]" dest="member_expression [39538,39552]"/>
  <match src="call_argument [106668,106700]" dest="call_argument [68597,68629]"/>
  <match src=".: . [67342,67343]" dest=".: . [80803,80804]"/>
  <match src="(: ( [10106,10107]" dest="(: ( [10205,10206]"/>
  <match src="): ) [22789,22790]" dest="): ) [63318,63319]"/>
  <match src="parameter [54917,54924]" dest="parameter [21911,21918]"/>
  <match src=".: . [30732,30733]" dest=".: . [46404,46405]"/>
  <match src="&quot;: &quot; [56951,56952]" dest="&quot;: &quot; [77577,77578]"/>
  <match src="primitive_type [3230,3237]" dest="primitive_type [3284,3291]"/>
  <match src="struct_member [88462,88481]" dest="struct_member [28591,28610]"/>
  <match src="comment: /**  * @title Roles  * @dev Library for managing addresses assigned to a Role.  */ [25510,25595]" dest="comment: // File: @openzeppelin/contracts/token/ERC20/IERC20.sol [21936,21991]"/>
  <match src="&quot;: &quot; [57318,57319]" dest="&quot;: &quot; [78110,78111]"/>
  <match src=",: , [29608,29609]" dest=",: , [45280,45281]"/>
  <match src="call_expression [10892,10930]" dest="call_expression [10991,11029]"/>
  <match src="}: } [54937,54938]" dest="}: } [21931,21932]"/>
  <match src="(: ( [38050,38051]" dest="(: ( [53722,53723]"/>
  <match src="identifier: numerator [10776,10785]" dest="identifier: numerator [10875,10884]"/>
  <match src="binary_expression [35800,35806]" dest="binary_expression [51472,51478]"/>
  <match src="string_literal [1017,1046]" dest="string_literal [1071,1100]"/>
  <match src="unary_expression [51497,51499]" dest="unary_expression [63990,63992]"/>
  <match src="revert_statement [28930,29194]" dest="revert_statement [44602,44866]"/>
  <match src="): ) [80331,80332]" dest="): ) [69912,69913]"/>
  <match src="call_argument [99441,99447]" dest="call_argument [37259,37265]"/>
  <match src="member_expression [99683,99702]" dest="member_expression [37501,37520]"/>
  <match src="function: function [7254,7262]" dest="function: function [7353,7361]"/>
  <match src="return_type_definition [93823,93840]" dest="return_type_definition [31609,31626]"/>
  <match src="type_name [44084,44091]" dest="type_name [13338,13345]"/>
  <match src="identifier: from [6862,6866]" dest="identifier: from [6961,6965]"/>
  <match src="call_argument [80585,80595]" dest="call_argument [77468,77478]"/>
  <match src="primitive_type [77997,78004]" dest="primitive_type [62085,62092]"/>
  <match src="(: ( [37271,37272]" dest="(: ( [52943,52944]"/>
  <match src="primitive_type [10601,10608]" dest="primitive_type [10700,10707]"/>
  <match src=",: , [87211,87212]" dest=",: , [27340,27341]"/>
  <match src="comment: /*     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [106837,107490]" dest="comment: // File: contracts/dao/Permission.sol [67211,67248]"/>
  <match src="identifier: amount [98801,98807]" dest="identifier: amount [36619,36625]"/>
  <match src="member_expression [7625,7630]" dest="member_expression [7724,7729]"/>
  <match src="uint256: uint256 [101449,101456]" dest="uint256: uint256 [39267,39274]"/>
  <match src="primitive_type [35780,35785]" dest="primitive_type [51452,51457]"/>
  <match src="identifier: mul [82499,82502]" dest="identifier: div [71379,71382]"/>
  <match src=".: . [100317,100318]" dest=".: . [38135,38136]"/>
  <match src="visibility [6624,6632]" dest="visibility [6723,6731]"/>
  <match src="call_expression [45345,45387]" dest="call_expression [14599,14641]"/>
  <match src="): ) [45281,45282]" dest="): ) [14535,14536]"/>
  <match src="call_argument [20814,20820]" dest="call_argument [64147,64153]"/>
  <match src="type_name [13407,13414]" dest="type_name [23083,23090]"/>
  <match src="return_statement [46517,46562]" dest="return_statement [15771,15816]"/>
  <match src="): ) [37685,37686]" dest="): ) [53357,53358]"/>
  <match src="indexed: indexed [15074,15081]" dest="indexed: indexed [24750,24757]"/>
  <match src="primitive_type [103326,103333]" dest="primitive_type [41144,41151]"/>
  <match src="expression_statement [100614,100702]" dest="expression_statement [38432,38520]"/>
  <match src="bool: bool [53211,53215]" dest="bool: bool [20205,20209]"/>
  <match src=",: , [10327,10328]" dest=",: , [10426,10427]"/>
  <match src="view: view [54427,54431]" dest="view: view [21421,21425]"/>
  <match src="function: function [29220,29228]" dest="function: function [44892,44900]"/>
  <match src="identifier: numerator [10903,10912]" dest="identifier: numerator [11002,11011]"/>
  <match src="identifier: amount [100907,100913]" dest="identifier: amount [38725,38731]"/>
  <match src="expression_statement [35705,35709]" dest="expression_statement [51377,51381]"/>
  <match src="parameter [96573,96588]" dest="parameter [34359,34374]"/>
  <match src="call_argument [49288,49292]" dest="call_argument [78091,78095]"/>
  <match src="array_access [101485,101524]" dest="array_access [39303,39342]"/>
  <match src="string_literal [84352,84382]" dest="string_literal [58371,58394]"/>
  <match src="identifier: fluidUntil [87443,87453]" dest="identifier: fluidUntil [27572,27582]"/>
  <match src="identifier: ASCII_ZERO [28359,28369]" dest="identifier: ASCII_ZERO [44031,44041]"/>
  <match src="call_expression [33802,33821]" dest="call_expression [49474,49493]"/>
  <match src="primitive_type [28799,28803]" dest="primitive_type [44471,44475]"/>
  <match src="identifier: sender [83808,83814]" dest="identifier: sender [62539,62545]"/>
  <match src="function_body [44844,44999]" dest="function_body [14098,14253]"/>
  <match src="string_literal [21969,22005]" dest="string_literal [62987,63024]"/>
  <match src="identifier: amount [104625,104631]" dest="identifier: amount [42443,42449]"/>
  <match src="identifier: b [10113,10114]" dest="identifier: b [10212,10213]"/>
  <match src="): ) [105042,105043]" dest="): ) [42860,42861]"/>
  <match src="view: view [97179,97183]" dest="view: view [34965,34969]"/>
  <match src="function_definition [6853,7004]" dest="function_definition [6952,7103]"/>
  <match src="function_definition [7254,7447]" dest="function_definition [7353,7546]"/>
  <match src="primitive_type [89822,89829]" dest="primitive_type [74894,74901]"/>
  <match src="return_statement [95188,95226]" dest="return_statement [32974,33012]"/>
  <match src="user_defined_type [88566,88579]" dest="user_defined_type [28695,28708]"/>
  <match src="uint256: uint256 [101822,101829]" dest="uint256: uint256 [39640,39647]"/>
  <match src="}: } [97881,97882]" dest="}: } [35667,35668]"/>
  <match src="identifier: Decimal [46632,46639]" dest="identifier: Decimal [15886,15893]"/>
  <match src="address: address [96573,96580]" dest="address: address [34359,34366]"/>
  <match src="type_name [1409,1416]" dest="type_name [1463,1470]"/>
  <match src="primitive_type [44389,44396]" dest="primitive_type [13643,13650]"/>
  <match src="return_type_definition [54135,54152]" dest="return_type_definition [21129,21146]"/>
  <match src="primitive_type [98669,98676]" dest="primitive_type [36487,36494]"/>
  <match src="member_expression [101239,101254]" dest="member_expression [39057,39072]"/>
  <match src="event_paramater [90100,90130]" dest="event_paramater [75172,75202]"/>
  <match src="number_literal: 0 [35553,35554]" dest="number_literal: 0 [51225,51226]"/>
  <match src=".: . [100121,100122]" dest=".: . [37939,37940]"/>
  <match src="returns: returns [54135,54142]" dest="returns: returns [21129,21136]"/>
  <match src="function_body [45901,45953]" dest="function_body [15155,15207]"/>
  <match src="identifier: stringify [33802,33811]" dest="identifier: stringify [49474,49483]"/>
  <match src=",: , [20820,20821]" dest=",: , [64153,64154]"/>
  <match src="identifier: shift [37654,37659]" dest="identifier: shift [53326,53331]"/>
  <match src="primitive_type [99023,99030]" dest="primitive_type [36841,36848]"/>
  <match src="): ) [53036,53037]" dest="): ) [20030,20031]"/>
  <match src="internal: internal [30614,30622]" dest="internal: internal [46286,46294]"/>
  <match src="&quot;: &quot; [20581,20582]" dest="&quot;: &quot; [63693,63694]"/>
  <match src="identifier: burn [50094,50098]" dest="identifier: burn [25533,25537]"/>
  <match src=".: . [97248,97249]" dest=".: . [35034,35035]"/>
  <match src="(: ( [31979,31980]" dest="(: ( [47651,47652]"/>
  <match src="identifier: debt [99720,99724]" dest="identifier: debt [37538,37542]"/>
  <match src="visibility [9775,9783]" dest="visibility [9874,9882]"/>
  <match src="external: external [80846,80854]" dest="external: external [70434,70442]"/>
  <match src="string_literal [49307,49316]" dest="string_literal [55638,55682]"/>
  <match src="type_name [10975,10979]" dest="type_name [11074,11078]"/>
  <match src="primitive_type [43833,43840]" dest="primitive_type [13087,13094]"/>
  <match src="return: return [44621,44627]" dest="return: return [13875,13881]"/>
  <match src="identifier: b [4762,4763]" dest="identifier: b [4816,4817]"/>
  <match src="primitive_type [103917,103924]" dest="primitive_type [41735,41742]"/>
  <match src="(: ( [80448,80449]" dest="(: ( [77109,77110]"/>
  <match src="[: [ [103616,103617]" dest="[: [ [41434,41435]"/>
  <match src="]: ] [104780,104781]" dest="]: ] [42598,42599]"/>
  <match src="return_type_definition [46006,46023]" dest="return_type_definition [15260,15277]"/>
  <match src="uint: uint [53686,53690]" dest="uint: uint [20680,20684]"/>
  <match src="block_statement [11106,11141]" dest="block_statement [11205,11240]"/>
  <match src=".: . [95281,95282]" dest=".: . [33067,33068]"/>
  <match src="): ) [5380,5381]" dest="): ) [5434,5435]"/>
  <match src="return_statement [2593,2602]" dest="return_statement [2647,2656]"/>
  <match src="identifier: value [15099,15104]" dest="identifier: value [24775,24780]"/>
  <match src="function_body [3273,3338]" dest="function_body [3327,3392]"/>
  <match src="memory: memory [92119,92125]" dest="memory: memory [29905,29911]"/>
  <match src="returns: returns [10592,10599]" dest="returns: returns [10691,10698]"/>
  <match src="number_literal: 30e16 [44280,44285]" dest="number_literal: 30e16 [13534,13539]"/>
  <match src="(: ( [38189,38190]" dest="(: ( [53861,53862]"/>
  <match src="enum: enum [87182,87186]" dest="enum: enum [27311,27315]"/>
  <match src="call_argument [81194,81204]" dest="call_argument [70503,70513]"/>
  <match src="binary_expression [2661,2666]" dest="binary_expression [2715,2720]"/>
  <match src="identifier: value [46685,46690]" dest="identifier: value [15939,15944]"/>
  <match src="}: } [86479,86480]" dest="}: } [73786,73787]"/>
  <match src="identifier: D256 [6505,6509]" dest="identifier: D256 [6604,6608]"/>
  <match src="(: ( [7423,7424]" dest="(: ( [7522,7523]"/>
  <match src="visibility [101875,101883]" dest="visibility [39693,39701]"/>
  <match src="returns: returns [97471,97478]" dest="returns: returns [35257,35264]"/>
  <match src="call_argument [65093,65097]" dest="call_argument [62346,62350]"/>
  <match src="visibility [104333,104341]" dest="visibility [42151,42159]"/>
  <match src="{: { [46141,46142]" dest="{: { [15395,15396]"/>
  <match src="function: function [34985,34993]" dest="function: function [50657,50665]"/>
  <match src="visibility [43841,43848]" dest="visibility [13095,13102]"/>
  <match src="function_body [92804,92852]" dest="function_body [30590,30638]"/>
  <match src="string_literal [1446,1478]" dest="string_literal [1500,1532]"/>
  <match src="identifier: _state [96944,96950]" dest="identifier: _state [34730,34736]"/>
  <match src="identifier: require [20467,20474]" dest="identifier: require [63571,63578]"/>
  <match src="call_argument [49174,49178]" dest="call_argument [70021,70025]"/>
  <match src="identifier: LPAREN [32235,32241]" dest="identifier: LPAREN [47907,47913]"/>
  <match src="identifier: account [100985,100992]" dest="identifier: account [38803,38810]"/>
  <match src="identifier: value [8056,8061]" dest="identifier: value [8155,8160]"/>
  <match src="identifier: b [3298,3299]" dest="identifier: b [3352,3353]"/>
  <match src="call_argument [32975,32981]" dest="call_argument [48647,48653]"/>
  <match src="for: for [36465,36468]" dest="for: for [52137,52140]"/>
  <match src="member_expression [82132,82142]" dest="member_expression [71801,71811]"/>
  <match src="primitive_type [51160,51167]" dest="primitive_type [54768,54775]"/>
  <match src="): ) [53787,53788]" dest="): ) [20781,20782]"/>
  <match src="array_access [101527,101566]" dest="array_access [39345,39384]"/>
  <match src=".: . [96692,96693]" dest=".: . [34478,34479]"/>
  <match src="identifier: account [100951,100958]" dest="identifier: account [38769,38776]"/>
  <match src="identifier: PERMIT_TYPEHASH [53390,53405]" dest="identifier: PERMIT_TYPEHASH [20384,20399]"/>
  <match src="uint256: uint256 [87283,87290]" dest="uint256: uint256 [27412,27419]"/>
  <match src="function_body [10228,10276]" dest="function_body [10327,10375]"/>
  <match src="return_statement [92559,92588]" dest="return_statement [30345,30374]"/>
  <match src="call_expression [81176,81212]" dest="call_expression [70485,70521]"/>
  <match src="}: } [94412,94413]" dest="}: } [32198,32199]"/>
  <match src="event_paramater [54012,54028]" dest="event_paramater [21006,21022]"/>
  <match src="function_definition [1824,2016]" dest="function_definition [1878,2070]"/>
  <match src="(: ( [45866,45867]" dest="(: ( [15120,15121]"/>
  <match src="(: ( [54440,54441]" dest="(: ( [21434,21435]"/>
  <match src="call_argument [30367,30375]" dest="call_argument [46039,46047]"/>
  <match src="library_declaration [640,5488]" dest="library_declaration [694,5542]"/>
  <match src="(: ( [53340,53341]" dest="(: ( [20334,20335]"/>
  <match src="array_access [103837,103865]" dest="array_access [41655,41683]"/>
  <match src="): ) [53475,53476]" dest="): ) [20469,20470]"/>
  <match src="): ) [38223,38224]" dest="): ) [53895,53896]"/>
  <match src="++: ++ [36494,36496]" dest="++: ++ [52166,52168]"/>
  <match src="call_argument [79915,79925]" dest="call_argument [62948,62958]"/>
  <match src="call_argument [68177,68195]" dest="call_argument [79419,79524]"/>
  <match src="(: ( [94204,94205]" dest="(: ( [31990,31991]"/>
  <match src="identifier: Account [87167,87174]" dest="identifier: Account [27296,27303]"/>
  <match src="primitive_type [37272,37277]" dest="primitive_type [52944,52949]"/>
  <match src="memory: memory [8910,8916]" dest="memory: memory [9009,9015]"/>
  <match src=",: , [4760,4761]" dest=",: , [4814,4815]"/>
  <match src="identifier: setup [107968,107973]" dest="identifier: capture [66977,66984]"/>
  <match src="contract_body [50078,50264]" dest="contract_body [25517,25703]"/>
  <match src="): ) [106806,106807]" dest="): ) [68735,68736]"/>
  <match src="expression_statement [35872,35880]" dest="expression_statement [51544,51552]"/>
  <match src="function_definition [8855,9048]" dest="function_definition [8954,9147]"/>
  <match src="identifier: sub [9065,9068]" dest="identifier: sub [9164,9167]"/>
  <match src="&quot;: &quot; [82328,82329]" dest="&quot;: &quot; [80366,80367]"/>
  <match src="): ) [7123,7124]" dest="): ) [7222,7223]"/>
  <match src="uint256: uint256 [87768,87775]" dest="uint256: uint256 [27897,27904]"/>
  <match src="identifier: encodePacked [30071,30083]" dest="identifier: encodePacked [45743,45755]"/>
  <match src="function: function [95530,95538]" dest="function: function [33316,33324]"/>
  <match src="type_name [101837,101844]" dest="type_name [39655,39662]"/>
  <match src="function: function [9296,9304]" dest="function: function [9395,9403]"/>
  <match src="!=: != [106487,106489]" dest="!=: != [68416,68418]"/>
  <match src=".: . [90490,90491]" dest=".: . [75562,75563]"/>
  <match src="): ) [54869,54870]" dest="): ) [21863,21864]"/>
  <match src="block_statement [36498,36878]" dest="block_statement [52170,52550]"/>
  <match src="memory: memory [67320,67326]" dest="memory: memory [66940,66946]"/>
  <match src="number_literal: 0 [94336,94337]" dest="number_literal: 0 [32122,32123]"/>
  <match src="state_mutability [53352,53356]" dest="state_mutability [20346,20350]"/>
  <match src="type_name [45187,45194]" dest="type_name [14441,14448]"/>
  <match src=".: . [93363,93364]" dest=".: . [31149,31150]"/>
  <match src="identifier: msg [80866,80869]" dest="identifier: msg [71267,71270]"/>
  <match src="bool: bool [10222,10226]" dest="bool: bool [10321,10325]"/>
  <match src="=: = [104038,104039]" dest="=: = [41856,41857]"/>
  <match src="identifier: amount [104433,104439]" dest="identifier: amount [42251,42257]"/>
  <match src="identifier: mint [50201,50205]" dest="identifier: mint [25640,25644]"/>
  <match src="uint256: uint256 [80188,80195]" dest="uint256: uint256 [69703,69710]"/>
  <match src="type_name [104511,104518]" dest="type_name [42329,42336]"/>
  <match src="identifier: Decimal [46671,46678]" dest="identifier: Decimal [15925,15932]"/>
  <match src="type_name [51160,51167]" dest="type_name [54768,54775]"/>
  <match src="identifier: a [5472,5473]" dest="identifier: a [5526,5527]"/>
  <match src="primitive_type [73092,73099]" dest="primitive_type [71323,71330]"/>
  <match src="memory: memory [66362,66368]" dest="memory: memory [19056,19062]"/>
  <match src="parameter [2280,2289]" dest="parameter [2334,2343]"/>
  <match src="identifier: amount [18335,18341]" dest="identifier: amount [59331,59337]"/>
  <match src=":: : [44897,44898]" dest=":: : [14151,14152]"/>
  <match src="return_type_definition [54308,54379]" dest="return_type_definition [21302,21373]"/>
  <match src="identifier: univ2 [80618,80623]" dest="identifier: dollar [70232,70238]"/>
  <match src="member_expression [101023,101037]" dest="member_expression [38841,38855]"/>
  <match src="number_literal: 87 [28427,28429]" dest="number_literal: 87 [44099,44101]"/>
  <match src="return: return [34950,34956]" dest="return: return [50622,50628]"/>
  <match src="(: ( [92538,92539]" dest="(: ( [30324,30325]"/>
  <match src="type_name [97480,97484]" dest="type_name [35266,35270]"/>
  <match src="using_directive [98597,98624]" dest="using_directive [36415,36442]"/>
  <match src="return_statement [35133,35144]" dest="return_statement [50805,50816]"/>
  <match src="call_argument [93705,93716]" dest="call_argument [31491,31502]"/>
  <match src="call_argument [4765,4791]" dest="call_argument [4819,4845]"/>
  <match src="{: { [6950,6951]" dest="{: { [7049,7050]"/>
  <match src="): ) [32498,32499]" dest="): ) [48170,48171]"/>
  <match src="indexed: indexed [53656,53663]" dest="indexed: indexed [20650,20657]"/>
  <match src="variable_declaration_statement [83620,83709]" dest="variable_declaration_statement [71825,71887]"/>
  <match src="}: } [7446,7447]" dest="}: } [7545,7546]"/>
  <match src="): ) [84316,84317]" dest="): ) [58335,58336]"/>
  <match src="internal: internal [99894,99902]" dest="internal: internal [37712,37720]"/>
  <match src="call_expression [4755,4792]" dest="call_expression [4809,4846]"/>
  <match src="call_argument [80972,80977]" dest="call_argument [70569,70574]"/>
  <match src="&quot;: &quot; [82803,82804]" dest="&quot;: &quot; [79705,79706]"/>
  <match src="type_name [53562,53566]" dest="type_name [20556,20560]"/>
  <match src="identifier: _state [101527,101533]" dest="identifier: _state [39345,39351]"/>
  <match src="(: ( [37005,37006]" dest="(: ( [52677,52678]"/>
  <match src="parameter [95847,95854]" dest="parameter [33633,33640]"/>
  <match src=",: , [99040,99041]" dest=",: , [36858,36859]"/>
  <match src="string: string [104711,104717]" dest="string: string [42529,42535]"/>
  <match src=".: . [7413,7414]" dest=".: . [7512,7513]"/>
  <match src="comment: /* Bonding */ [43231,43244]" dest="comment: /* Bonding */ [12485,12498]"/>
  <match src="(: ( [44680,44681]" dest="(: ( [13934,13935]"/>
  <match src="type_name [106414,106421]" dest="type_name [68343,68350]"/>
  <match src="bool: bool [66564,66568]" dest="bool: bool [66954,66958]"/>
  <match src="visibility [67559,67566]" dest="visibility [58459,58466]"/>
  <match src="): ) [81600,81601]" dest="): ) [70818,70819]"/>
  <match src="type_name [51790,51797]" dest="type_name [60587,60594]"/>
  <match src="]: ] [97247,97248]" dest="]: ] [35033,35034]"/>
  <match src="identifier: current [95021,95028]" dest="identifier: current [32807,32814]"/>
  <match src="identifier: getGovernanceEmergencyDelay [45839,45866]" dest="identifier: getGovernanceEmergencyDelay [15093,15120]"/>
  <match src="): ) [97598,97599]" dest="): ) [35384,35385]"/>
  <match src="parameter [46786,46805]" dest="parameter [16040,16059]"/>
  <match src="return_type_definition [10592,10609]" dest="return_type_definition [10691,10708]"/>
  <match src="(: ( [37055,37056]" dest="(: ( [52727,52728]"/>
  <match src="&quot;: &quot; [81270,81271]" dest="&quot;: &quot; [80139,80140]"/>
  <match src="call_expression [6982,6993]" dest="call_expression [7081,7092]"/>
  <match src="identifier: value [80326,80331]" dest="identifier: value [69882,69887]"/>
  <match src="identifier: epochs [101639,101645]" dest="identifier: epochs [39457,39463]"/>
  <match src="): ) [10077,10078]" dest="): ) [10176,10177]"/>
  <match src="returns: returns [11048,11055]" dest="returns: returns [11147,11154]"/>
  <match src="primitive_type [83984,83991]" dest="primitive_type [79851,79858]"/>
  <match src="returns: returns [92992,92999]" dest="returns: returns [30778,30785]"/>
  <match src="expression_statement [37472,37479]" dest="expression_statement [53144,53151]"/>
  <match src="user_defined_type [16321,16327]" dest="user_defined_type [60114,60119]"/>
  <match src="identifier: stringifyTruncated [32839,32857]" dest="identifier: stringifyTruncated [48511,48529]"/>
  <match src="identifier: balance [92472,92479]" dest="identifier: balance [30258,30265]"/>
  <match src=",: , [29051,29052]" dest=",: , [44723,44724]"/>
  <match src="member_expression [72137,72155]" dest="member_expression [58245,58263]"/>
  <match src="identifier: totalBonded [83694,83705]" dest="identifier: totalBonded [71872,71883]"/>
  <match src="function: function [90140,90148]" dest="function: function [75212,75220]"/>
  <match src="identifier: initialize [90149,90159]" dest="identifier: initialize [75221,75231]"/>
  <match src="identifier: payloadA [32660,32668]" dest="identifier: payloadA [48332,48340]"/>
  <match src="parameter [1364,1373]" dest="parameter [1418,1427]"/>
  <match src="number_literal: 42 [36210,36212]" dest="number_literal: 42 [51882,51884]"/>
  <match src="(: ( [101980,101981]" dest="(: ( [39798,39799]"/>
  <match src="indexed: indexed [14836,14843]" dest="indexed: indexed [24512,24519]"/>
  <match src="): ) [8975,8976]" dest="): ) [9074,9075]"/>
  <match src="member_expression [103603,103631]" dest="member_expression [41421,41449]"/>
  <match src="internal: internal [9372,9380]" dest="internal: internal [9471,9479]"/>
  <match src="&quot;: &quot; [81307,81308]" dest="&quot;: &quot; [80152,80153]"/>
  <match src="identifier: j [35504,35505]" dest="identifier: j [51176,51177]"/>
  <match src="internal: internal [104527,104535]" dest="internal: internal [42345,42353]"/>
  <match src=".: . [80642,80643]" dest=".: . [70257,70258]"/>
  <match src="member_expression [99550,99573]" dest="member_expression [37368,37391]"/>
  <match src="[: [ [103169,103170]" dest="[: [ [40987,40988]"/>
  <match src="identifier: _state [100293,100299]" dest="identifier: _state [38111,38117]"/>
  <match src="function_body [93554,93602]" dest="function_body [31340,31388]"/>
  <match src="identifier: value [6823,6828]" dest="identifier: value [6922,6927]"/>
  <match src="uint256: uint256 [23874,23881]" dest="uint256: uint256 [17494,17501]"/>
  <match src="return: return [96801,96807]" dest="return: return [34587,34593]"/>
  <match src="(: ( [54482,54483]" dest="(: ( [21476,21477]"/>
  <match src="event: event [80435,80440]" dest="event: event [77095,77100]"/>
  <match src="return_type_definition [7350,7371]" dest="return_type_definition [7449,7470]"/>
  <match src="primitive_type [13083,13087]" dest="primitive_type [22759,22763]"/>
  <match src="if: if [51450,51452]" dest="if: if [63914,63916]"/>
  <match src="if_statement [32716,33129]" dest="if_statement [48388,48801]"/>
  <match src="private: private [80049,80056]" dest="private: private [69561,69568]"/>
  <match src="address: address [83984,83991]" dest="address: address [79851,79858]"/>
  <match src="address: address [94780,94787]" dest="address: address [32566,32573]"/>
  <match src="identifier: value [45359,45364]" dest="identifier: value [14613,14618]"/>
  <match src="(: ( [83457,83458]" dest="(: ( [61316,61317]"/>
  <match src="uint256: uint256 [93432,93439]" dest="uint256: uint256 [31218,31225]"/>
  <match src=".: . [101919,101920]" dest=".: . [39737,39738]"/>
  <match src="variable_declaration_statement [8477,8524]" dest="variable_declaration_statement [8576,8623]"/>
  <match src="identifier: D256 [9561,9565]" dest="identifier: D256 [9660,9664]"/>
  <match src="expression_statement [99805,99829]" dest="expression_statement [37623,37647]"/>
  <match src="member_expression [103538,103564]" dest="member_expression [41356,41382]"/>
  <match src=".: . [9024,9025]" dest=".: . [9123,9124]"/>
  <match src="return_type_definition [92786,92803]" dest="return_type_definition [30572,30589]"/>
  <match src="primitive_type [105006,105013]" dest="primitive_type [42824,42831]"/>
  <match src="): ) [37288,37289]" dest="): ) [52960,52961]"/>
  <match src="type_name [9798,9802]" dest="type_name [9897,9901]"/>
  <match src="identifier: require [20548,20555]" dest="identifier: require [63660,63667]"/>
  <match src=",: , [101987,101988]" dest=",: , [39805,39806]"/>
  <match src="member_expression [100328,100360]" dest="member_expression [38146,38178]"/>
  <match src="identifier: spender [13415,13422]" dest="identifier: spender [23091,23098]"/>
  <match src="memory: memory [10171,10177]" dest="memory: memory [10270,10276]"/>
  <match src="parameter [953,960]" dest="parameter [1007,1014]"/>
  <match src="): ) [29761,29762]" dest="): ) [45433,45434]"/>
  <match src=",: , [3228,3229]" dest=",: , [3282,3283]"/>
  <match src="type_name [72977,72984]" dest="type_name [71825,71832]"/>
  <match src="type_name [97055,97062]" dest="type_name [34841,34848]"/>
  <match src="number_literal: 0 [2575,2576]" dest="number_literal: 0 [2629,2630]"/>
  <match src="call_expression [9960,9978]" dest="call_expression [10059,10077]"/>
  <match src="expression_statement [81892,81973]" dest="expression_statement [71044,71128]"/>
  <match src="identifier: Decimal [6317,6324]" dest="identifier: Decimal [6416,6423]"/>
  <match src="}: } [88705,88706]" dest="}: } [28834,28835]"/>
  <match src="uint256: uint256 [69894,69901]" dest="uint256: uint256 [65197,65204]"/>
  <match src="primitive_type [26647,26654]" dest="primitive_type [60369,60376]"/>
  <match src="variable_declaration_statement [973,991]" dest="variable_declaration_statement [1027,1045]"/>
  <match src="type_name [80221,80228]" dest="type_name [77326,77333]"/>
  <match src="(: ( [94126,94127]" dest="(: ( [31912,31913]"/>
  <match src="identifier: Upgradeable [89570,89581]" dest="identifier: Upgradeable [74642,74653]"/>
  <match src="indexed: indexed [98677,98684]" dest="indexed: indexed [36495,36502]"/>
  <match src="bool: bool [98827,98831]" dest="bool: bool [36645,36649]"/>
  <match src="internal: internal [103762,103770]" dest="internal: internal [41580,41588]"/>
  <match src="member_expression [82625,82635]" dest="member_expression [82632,82642]"/>
  <match src="identifier: _state [103538,103544]" dest="identifier: _state [41356,41362]"/>
  <match src="type_name [22607,22614]" dest="type_name [63207,63214]"/>
  <match src="number_literal: 0 [37469,37470]" dest="number_literal: 0 [53141,53142]"/>
  <match src="call_argument [99272,99278]" dest="call_argument [37090,37096]"/>
  <match src="identifier: amount [104303,104309]" dest="identifier: amount [42121,42127]"/>
  <match src="call_expression [46524,46561]" dest="call_expression [15778,15815]"/>
  <match src="type_name [53366,53373]" dest="type_name [20360,20367]"/>
  <match src="emit: emit [82880,82884]" dest="emit: emit [71631,71635]"/>
  <match src="call_expression [106469,106486]" dest="call_expression [68398,68415]"/>
  <match src="type_name [97289,97296]" dest="type_name [35075,35082]"/>
  <match src="call_argument [81153,81163]" dest="call_argument [71769,71779]"/>
  <match src="]: ] [97531,97532]" dest="]: ] [35317,35318]"/>
  <match src=":: : [45629,45630]" dest=":: : [14883,14884]"/>
  <match src=",: , [80718,80719]" dest=",: , [70333,70334]"/>
  <match src="state_variable_declaration [28589,28621]" dest="state_variable_declaration [44261,44293]"/>
  <match src="state_mutability [92210,92214]" dest="state_mutability [29996,30000]"/>
  <match src="identifier: b [7312,7313]" dest="identifier: b [7411,7412]"/>
  <match src="comment: // find the last non-zero byte in order to determine the length [34517,34580]" dest="comment: // find the last non-zero byte in order to determine the length [50189,50252]"/>
  <match src=".: . [7852,7853]" dest=".: . [7951,7952]"/>
  <match src="call_argument [31519,31525]" dest="call_argument [47191,47197]"/>
  <match src="identifier: D256 [8301,8305]" dest="identifier: D256 [8400,8404]"/>
  <match src="type_name [88566,88579]" dest="type_name [28695,28708]"/>
  <match src="event: event [80148,80153]" dest="event: event [69663,69668]"/>
  <match src="comment: /*     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [69016,69669]" dest="comment: /*     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [59417,60070]"/>
  <match src="call_struct_argument [9239,9277]" dest="call_struct_argument [9338,9376]"/>
  <match src="string: string [9130,9136]" dest="string: string [9229,9235]"/>
  <match src="(: ( [22729,22730]" dest="(: ( [63250,63251]"/>
  <match src="parameter [6932,6943]" dest="parameter [7031,7042]"/>
  <match src="(: ( [49121,49122]" dest="(: ( [69970,69971]"/>
  <match src="): ) [46230,46231]" dest="): ) [15484,15485]"/>
  <match src=".: . [101061,101062]" dest=".: . [38879,38880]"/>
  <match src="comment: // 60$ [43976,43982]" dest="comment: // 60$ [13230,13236]"/>
  <match src="primitive_type [53741,53745]" dest="primitive_type [20735,20739]"/>
  <match src="identifier: amount [102095,102101]" dest="identifier: amount [39913,39919]"/>
  <match src="identifier: transferFrom [53232,53244]" dest="identifier: transferFrom [20226,20238]"/>
  <match src="(: ( [102341,102342]" dest="(: ( [40159,40160]"/>
  <match src="identifier: sender [51544,51550]" dest="identifier: sender [64036,64042]"/>
  <match src="identifier: symbol [92194,92200]" dest="identifier: symbol [29980,29986]"/>
  <match src="expression_statement [48264,48380]" dest="expression_statement [55060,55114]"/>
  <match src="return_type_definition [13074,13088]" dest="return_type_definition [22750,22764]"/>
  <match src="identifier: account [86437,86444]" dest="identifier: account [73744,73751]"/>
  <match src="type_name [101417,101424]" dest="type_name [39235,39242]"/>
  <match src="comment: /*     Copyright 2019 dYdX Trading Inc.     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [5492,6183]" dest="comment: /*     Copyright 2019 dYdX Trading Inc.     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [5589,6280]"/>
  <match src="return_type_definition [9396,9417]" dest="return_type_definition [9495,9516]"/>
  <match src="member_expression [92566,92587]" dest="member_expression [30352,30373]"/>
  <match src="member_expression [90473,90503]" dest="member_expression [75545,75575]"/>
  <match src="return_statement [97075,97119]" dest="return_statement [34861,34905]"/>
  <match src="contract_declaration [91804,97882]" dest="contract_declaration [29590,35668]"/>
  <match src="private: private [42953,42960]" dest="private: private [12207,12214]"/>
  <match src="function_definition [54718,54808]" dest="function_definition [21712,21802]"/>
  <match src="(: ( [9236,9237]" dest="(: ( [9335,9336]"/>
  <match src="address: address [88657,88664]" dest="address: address [28786,28793]"/>
  <match src="state_mutability [7340,7344]" dest="state_mutability [7439,7443]"/>
  <match src="identifier: D256 [7395,7399]" dest="identifier: D256 [7494,7498]"/>
  <match src="{: { [104536,104537]" dest="{: { [42354,42355]"/>
  <match src="): ) [78526,78527]" dest="): ) [81995,81996]"/>
  <match src="parameter [100556,100570]" dest="parameter [38374,38388]"/>
  <match src="type_name [43434,43441]" dest="type_name [12688,12695]"/>
  <match src="parameter [1848,1857]" dest="parameter [1902,1911]"/>
  <match src="parameter [103746,103760]" dest="parameter [41564,41578]"/>
  <match src="call_expression [30279,30298]" dest="call_expression [45951,45970]"/>
  <match src="): ) [97402,97403]" dest="): ) [35188,35189]"/>
  <match src="uint256: uint256 [13447,13454]" dest="uint256: uint256 [23123,23130]"/>
  <match src="&quot;: &quot; [83402,83403]" dest="&quot;: &quot; [72067,72068]"/>
  <match src=",: , [31571,31572]" dest=",: , [47243,47244]"/>
  <match src="identifier: candidate [96826,96835]" dest="identifier: candidate [34612,34621]"/>
  <match src="variable_declaration [66980,67004]" dest="variable_declaration [66391,66412]"/>
  <match src="user_defined_type [7792,7796]" dest="user_defined_type [7891,7895]"/>
  <match src="number_literal: 0 [99827,99828]" dest="number_literal: 0 [37645,37646]"/>
  <match src=".: . [84464,84465]" dest=".: . [80019,80020]"/>
  <match src="parameter [78037,78044]" dest="parameter [56122,56129]"/>
  <match src="identifier: self [8051,8055]" dest="identifier: self [8150,8154]"/>
  <match src="): ) [96894,96895]" dest="): ) [34680,34681]"/>
  <match src="member_expression [83903,83913]" dest="member_expression [79788,79798]"/>
  <match src="function: function [93500,93508]" dest="function: function [31286,31294]"/>
  <match src="struct_member [87283,87298]" dest="struct_member [27412,27427]"/>
  <match src="): ) [103825,103826]" dest="): ) [41643,41644]"/>
  <match src=".: . [103609,103610]" dest=".: . [41427,41428]"/>
  <match src="type_name [82353,82360]" dest="type_name [82558,82565]"/>
  <match src="identifier: amount [21422,21428]" dest="identifier: amount [63437,63443]"/>
  <match src="{: { [87272,87273]" dest="{: { [27401,27402]"/>
  <match src="type_name [31810,31817]" dest="type_name [47482,47489]"/>
  <match src="indexed: indexed [51822,51829]" dest="indexed: indexed [60617,60624]"/>
  <match src="}: } [105309,105310]" dest="}: } [43127,43128]"/>
  <match src="(: ( [90099,90100]" dest="(: ( [75171,75172]"/>
  <match src="return_statement [94623,94724]" dest="return_statement [32409,32510]"/>
  <match src="!: ! [28908,28909]" dest="!: ! [44580,44581]"/>
  <match src="identifier: must [32721,32725]" dest="identifier: must [48393,48397]"/>
  <match src="): ) [92237,92238]" dest="): ) [30023,30024]"/>
  <match src="string [2673,2708]" dest="string [2727,2762]"/>
  <match src="external: external [54600,54608]" dest="external: external [21594,21602]"/>
  <match src="state_mutability [95072,95076]" dest="state_mutability [32858,32862]"/>
  <match src="parameter [80831,80844]" dest="parameter [70419,70432]"/>
  <match src="returns: returns [62620,62627]" dest="returns: returns [26489,26496]"/>
  <match src="identifier: result [34179,34185]" dest="identifier: result [49851,49857]"/>
  <match src="]: ] [94866,94867]" dest="]: ] [32652,32653]"/>
  <match src="(: ( [44575,44576]" dest="(: ( [13829,13830]"/>
  <match src="expression_statement [104144,104232]" dest="expression_statement [41962,42050]"/>
  <match src="return: return [94329,94335]" dest="return: return [32115,32121]"/>
  <match src="): ) [93716,93717]" dest="): ) [31502,31503]"/>
  <match src="type_name [43065,43072]" dest="type_name [12319,12326]"/>
  <match src="call_expression [65019,65141]" dest="call_expression [62277,62393]"/>
  <match src="(: ( [97855,97856]" dest="(: ( [35641,35642]"/>
  <match src="number_literal: 10 [38059,38061]" dest="number_literal: 10 [53731,53733]"/>
  <match src="member_expression [9029,9036]" dest="member_expression [9128,9135]"/>
  <match src=".: . [94693,94694]" dest=".: . [32479,32480]"/>
  <match src="return_statement [3284,3331]" dest="return_statement [3338,3385]"/>
  <match src=",: , [34797,34798]" dest=",: , [50469,50470]"/>
  <match src="(: ( [52619,52620]" dest="(: ( [19613,19614]"/>
  <match src="): ) [33742,33743]" dest="): ) [49414,49415]"/>
  <match src="): ) [80140,80141]" dest="): ) [69655,69656]"/>
  <match src="internal: internal [99785,99793]" dest="internal: internal [37603,37611]"/>
  <match src="identifier: candidate [96598,96607]" dest="identifier: candidate [34384,34393]"/>
  <match src="comment: // 'x' [28487,28493]" dest="comment: // 'x' [44159,44165]"/>
  <match src="}: } [8464,8465]" dest="}: } [8563,8564]"/>
  <match src=".: . [77102,77103]" dest=".: . [61072,61073]"/>
  <match src="call_expression [6693,6711]" dest="call_expression [6792,6810]"/>
  <match src="state_mutability [34069,34073]" dest="state_mutability [49741,49745]"/>
  <match src="uint256: uint256 [92677,92684]" dest="uint256: uint256 [30463,30470]"/>
  <match src="uint256: uint256 [1910,1917]" dest="uint256: uint256 [1964,1971]"/>
  <match src="type_name [29923,29930]" dest="type_name [45595,45602]"/>
  <match src="type_name [9319,9323]" dest="type_name [9418,9422]"/>
  <match src="(: ( [100881,100882]" dest="(: ( [38699,38700]"/>
  <match src="call_expression [103819,103826]" dest="call_expression [41637,41644]"/>
  <match src="type_name [52906,52910]" dest="type_name [19900,19904]"/>
  <match src="{: { [105107,105108]" dest="{: { [42925,42926]"/>
  <match src="parameter [106414,106429]" dest="parameter [68343,68358]"/>
  <match src="parameter [14159,14173]" dest="parameter [23835,23849]"/>
  <match src="}: } [88755,88756]" dest="}: } [28884,28885]"/>
  <match src="function: function [71732,71740]" dest="function: function [65739,65747]"/>
  <match src="identifier: amount [101073,101079]" dest="identifier: amount [38891,38897]"/>
  <match src="address: address [101417,101424]" dest="address: address [39235,39242]"/>
  <match src="user_defined_type [8964,8968]" dest="user_defined_type [9063,9067]"/>
  <match src="identifier: totalNet [93619,93627]" dest="identifier: totalNet [31405,31413]"/>
  <match src="identifier: Require [106641,106648]" dest="identifier: Require [68570,68577]"/>
  <match src="(: ( [53647,53648]" dest="(: ( [20641,20642]"/>
  <match src="identifier: _state [102050,102056]" dest="identifier: _state [39868,39874]"/>
  <match src=",: , [2289,2290]" dest=",: , [2343,2344]"/>
  <match src="call_expression [8813,8836]" dest="call_expression [8912,8935]"/>
  <match src="memory: memory [7797,7803]" dest="memory: memory [7896,7902]"/>
  <match src="function_body [96435,96504]" dest="function_body [34221,34290]"/>
  <match src="call_argument [97392,97401]" dest="call_argument [35178,35187]"/>
  <match src="identifier: period [87577,87583]" dest="identifier: period [27706,27712]"/>
  <match src="identifier: _state [100115,100121]" dest="identifier: _state [37933,37939]"/>
  <match src="function_body [94267,94413]" dest="function_body [32053,32199]"/>
  <match src="member_expression [100969,100984]" dest="member_expression [38787,38802]"/>
  <match src="variable_declaration_tuple [66979,67054]" dest="variable_declaration_tuple [66390,66450]"/>
  <match src="(: ( [31779,31780]" dest="(: ( [47451,47452]"/>
  <match src="identifier: account [100248,100255]" dest="identifier: account [38066,38073]"/>
  <match src="}: } [10420,10421]" dest="}: } [10519,10520]"/>
  <match src="function: function [98985,98993]" dest="function: function [36803,36811]"/>
  <match src="call_argument [84333,84337]" dest="call_argument [58352,58356]"/>
  <match src="type_name [100882,100889]" dest="type_name [38700,38707]"/>
  <match src="(: ( [94552,94553]" dest="(: ( [32338,32339]"/>
  <match src="expression_statement [102886,102937]" dest="expression_statement [40704,40755]"/>
  <match src="external: external [14175,14183]" dest="external: external [23851,23859]"/>
  <match src="return_statement [92138,92170]" dest="return_statement [29924,29956]"/>
  <match src="if: if [33354,33356]" dest="if: if [49026,49028]"/>
  <match src="bytes32: bytes32 [53431,53438]" dest="bytes32: bytes32 [20425,20432]"/>
  <match src="function_definition [54855,54880]" dest="function_definition [21849,21874]"/>
  <match src=".: . [81680,81681]" dest=".: . [70845,70846]"/>
  <match src="): ) [81472,81473]" dest="): ) [70774,70775]"/>
  <match src="binary_expression [35549,35554]" dest="binary_expression [51221,51226]"/>
  <match src="internal: internal [8159,8167]" dest="internal: internal [8258,8266]"/>
  <match src="}: } [91130,91131]" dest="}: } [76202,76203]"/>
  <match src="=: = [67055,67056]" dest="=: = [66451,66452]"/>
  <match src="identifier: LPAREN [31519,31525]" dest="identifier: LPAREN [47191,47197]"/>
  <match src="address: address [94765,94772]" dest="address: address [32551,32558]"/>
  <match src="): ) [33363,33364]" dest="): ) [49035,49036]"/>
  <match src="identifier: result [36268,36274]" dest="identifier: result [51940,51946]"/>
  <match src="identifier: stringify [34994,35003]" dest="identifier: stringify [50666,50675]"/>
  <match src="call_argument [9005,9039]" dest="call_argument [9104,9138]"/>
  <match src="primitive_type [43097,43104]" dest="primitive_type [12351,12358]"/>
  <match src="returns: returns [54609,54616]" dest="returns: returns [21603,21610]"/>
  <match src="(: ( [92111,92112]" dest="(: ( [29897,29898]"/>
  <match src="returns: returns [92411,92418]" dest="returns: returns [30197,30204]"/>
  <match src="identifier: Constants [95106,95115]" dest="identifier: Constants [32892,32901]"/>
  <match src=",: , [101820,101821]" dest=",: , [39638,39639]"/>
  <match src="): ) [54535,54536]" dest="): ) [21529,21530]"/>
  <match src="identifier: accounts [94648,94656]" dest="identifier: accounts [32434,32442]"/>
  <match src="return_statement [98957,98970]" dest="return_statement [36775,36788]"/>
  <match src="]: ] [37659,37660]" dest="]: ] [53331,53332]"/>
  <match src="primitive_type [101417,101424]" dest="primitive_type [39235,39242]"/>
  <match src="identifier: self [8598,8602]" dest="identifier: self [8697,8701]"/>
  <match src="identifier: unfreeze [77011,77019]" dest="identifier: step [60774,60778]"/>
  <match src="identifier: stringifyTruncated [34001,34019]" dest="identifier: stringifyTruncated [49673,49691]"/>
  <match src="): ) [10048,10049]" dest="): ) [10147,10148]"/>
  <match src="identifier: account [85881,85888]" dest="identifier: account [73188,73195]"/>
  <match src="primitive_type [35775,35779]" dest="primitive_type [51447,51451]"/>
  <match src="enum_value: Fluid [87222,87227]" dest="enum_value: Fluid [27351,27356]"/>
  <match src="{: { [94556,94557]" dest="{: { [32342,32343]"/>
  <match src=",: , [31110,31111]" dest=",: , [46782,46783]"/>
  <match src="identifier: totalDebt [93289,93298]" dest="identifier: totalDebt [31075,31084]"/>
  <match src="identifier: ADVANCE_INCENTIVE [43949,43966]" dest="identifier: ADVANCE_INCENTIVE [13203,13220]"/>
  <match src="string [57318,57343]" dest="string [78110,78117]"/>
  <match src="): ) [36301,36302]" dest="): ) [51973,51974]"/>
  <match src="type_name [9760,9764]" dest="type_name [9859,9863]"/>
  <match src=".: . [93149,93150]" dest=".: . [30935,30936]"/>
  <match src="primitive_type [88002,88009]" dest="primitive_type [28131,28138]"/>
  <match src="function_body [8019,8079]" dest="function_body [8118,8178]"/>
  <match src="call_argument [8592,8596]" dest="call_argument [8691,8695]"/>
  <match src="expression_statement [82543,82587]" dest="expression_statement [71897,71941]"/>
  <match src="type_name [75948,75955]" dest="type_name [59076,59083]"/>
  <match src=".: . [101672,101673]" dest=".: . [39490,39491]"/>
  <match src="uint256: uint256 [3954,3961]" dest="uint256: uint256 [4008,4015]"/>
  <match src="identifier: epoch [95673,95678]" dest="identifier: epoch [33459,33464]"/>
  <match src="identifier: sender [81466,81472]" dest="identifier: sender [70768,70774]"/>
  <match src="type_name [103934,103941]" dest="type_name [41752,41759]"/>
  <match src="uint256: uint256 [44389,44396]" dest="uint256: uint256 [13643,13650]"/>
  <match src="identifier: recipient [99031,99040]" dest="identifier: recipient [36849,36858]"/>
  <match src="identifier: burn [54649,54653]" dest="identifier: burn [21643,21647]"/>
  <match src="primitive_type [80318,80325]" dest="primitive_type [69874,69881]"/>
  <match src="identifier: epoch [94547,94552]" dest="identifier: epoch [32333,32338]"/>
  <match src="contract_declaration [87498,87819]" dest="contract_declaration [27627,27948]"/>
  <match src="parameter [96124,96133]" dest="parameter [33910,33919]"/>
  <match src="external: external [12595,12603]" dest="external: external [22271,22279]"/>
  <match src="pure: pure [45557,45561]" dest="pure: pure [14811,14815]"/>
  <match src="type_name [104295,104302]" dest="type_name [42113,42120]"/>
  <match src="visibility [28869,28877]" dest="visibility [44541,44549]"/>
  <match src="function_definition [102533,102798]" dest="function_definition [40351,40616]"/>
  <match src="parameter [94439,94454]" dest="parameter [32225,32240]"/>
  <match src="identifier: input [34038,34043]" dest="identifier: input [49710,49715]"/>
  <match src="identifier: spender [94788,94795]" dest="identifier: spender [32574,32581]"/>
  <match src="call_argument [106544,106566]" dest="call_argument [68473,68495]"/>
  <match src="array_access [97082,97110]" dest="array_access [34868,34896]"/>
  <match src="): ) [45040,45041]" dest="): ) [14294,14295]"/>
  <match src="(: ( [77140,77141]" dest="(: ( [61106,61107]"/>
  <match src="identifier: value [80482,80487]" dest="identifier: value [60660,60665]"/>
  <match src="(: ( [36822,36823]" dest="(: ( [52494,52495]"/>
  <match src="identifier: shift [37555,37560]" dest="identifier: shift [53227,53232]"/>
  <match src="is: is [91821,91823]" dest="is: is [29607,29609]"/>
  <match src="=: = [99405,99406]" dest="=: = [37223,37224]"/>
  <match src="member_expression [102146,102168]" dest="member_expression [39964,39986]"/>
  <match src="): ) [46350,46351]" dest="): ) [15604,15605]"/>
  <match src="(: ( [102308,102309]" dest="(: ( [40126,40127]"/>
  <match src="struct_member [88355,88374]" dest="struct_member [28484,28503]"/>
  <match src=".: . [106504,106505]" dest=".: . [68433,68434]"/>
  <match src="(: ( [99971,99972]" dest="(: ( [37789,37790]"/>
  <match src="state_mutability [45173,45177]" dest="state_mutability [14427,14431]"/>
  <match src="(: ( [46106,46107]" dest="(: ( [15360,15361]"/>
  <match src="identifier: implementation [97710,97724]" dest="identifier: implementation [35496,35510]"/>
  <match src="primitive_type [53431,53438]" dest="primitive_type [20425,20432]"/>
  <match src="expression_statement [36714,36725]" dest="expression_statement [52386,52397]"/>
  <match src="(: ( [94022,94023]" dest="(: ( [31808,31809]"/>
  <match src="(: ( [53244,53245]" dest="(: ( [20238,20239]"/>
  <match src=",: , [82788,82789]" dest=",: , [78879,78880]"/>
  <match src="): ) [82649,82650]" dest="): ) [82650,82651]"/>
  <match src="pure: pure [30628,30632]" dest="pure: pure [46300,46304]"/>
  <match src="identifier: COLON [28515,28520]" dest="identifier: COLON [44187,44192]"/>
  <match src="primitive_type [53609,53616]" dest="primitive_type [20603,20610]"/>
  <match src="function_body [51226,51289]" dest="function_body [54810,54974]"/>
  <match src="identifier: D256 [7919,7923]" dest="identifier: D256 [8018,8022]"/>
  <match src="internal: internal [101875,101883]" dest="internal: internal [39693,39701]"/>
  <match src="type_alias [6338,6346]" dest="type_alias [6437,6445]"/>
  <match src="struct_declaration [87520,87617]" dest="struct_declaration [27649,27746]"/>
  <match src="type_name [8878,8882]" dest="type_name [8977,8981]"/>
  <match src="identifier: period [96973,96979]" dest="identifier: period [34759,34765]"/>
  <match src="primitive_type [37547,37554]" dest="primitive_type [53219,53226]"/>
  <match src="(: ( [3218,3219]" dest="(: ( [3272,3273]"/>
  <match src=".: . [101726,101727]" dest=".: . [39544,39545]"/>
  <match src="primitive_type [104492,104499]" dest="primitive_type [42310,42317]"/>
  <match src="primitive_type [13049,13056]" dest="primitive_type [22725,22732]"/>
  <match src="block_statement [105107,105180]" dest="block_statement [42925,42998]"/>
  <match src="identifier: D256 [91896,91900]" dest="identifier: D256 [29682,29686]"/>
  <match src="uint256: uint256 [11057,11064]" dest="uint256: uint256 [11156,11163]"/>
  <match src="function_definition [23839,23942]" dest="function_definition [55269,55505]"/>
  <match src="}: } [86446,86447]" dest="}: } [73753,73754]"/>
  <match src="primitive_type [7304,7311]" dest="primitive_type [7403,7410]"/>
  <match src="(: ( [77100,77101]" dest="(: ( [61070,61071]"/>
  <match src="array_access [101937,101976]" dest="array_access [39755,39794]"/>
  <match src="(: ( [93298,93299]" dest="(: ( [31084,31085]"/>
  <match src="=&gt;: =&gt; [88563,88565]" dest="=&gt;: =&gt; [28692,28694]"/>
  <match src="identifier: D256 [10975,10979]" dest="identifier: D256 [11074,11078]"/>
  <match src="primitive_type [30700,30706]" dest="primitive_type [46372,46378]"/>
  <match src="parameter [96393,96406]" dest="parameter [34179,34192]"/>
  <match src="(: ( [106653,106654]" dest="(: ( [68582,68583]"/>
  <match src="primitive_type [42782,42789]" dest="primitive_type [12036,12043]"/>
  <match src="identifier: FILE [84869,84873]" dest="identifier: FILE [79338,79342]"/>
  <match src="event_paramater [52539,52560]" dest="event_paramater [19533,19554]"/>
  <match src="call_expression [30067,30432]" dest="call_expression [45739,46104]"/>
  <match src="yul_function_call [34784,34806]" dest="yul_function_call [50456,50478]"/>
  <match src="identifier: a [5340,5341]" dest="identifier: a [5394,5395]"/>
  <match src="member_expression [101047,101061]" dest="member_expression [38865,38879]"/>
  <match src=",: , [98580,98581]" dest=",: , [36398,36399]"/>
  <match src="member_expression [94845,94884]" dest="member_expression [32631,32670]"/>
  <match src="parameter [54766,54776]" dest="parameter [21760,21770]"/>
  <match src="function: function [10429,10437]" dest="function: function [10528,10536]"/>
  <match src="memory: memory [11004,11010]" dest="memory: memory [11103,11109]"/>
  <match src="primitive_type [94205,94212]" dest="primitive_type [31991,31998]"/>
  <match src="struct_member [88002,88018]" dest="struct_member [28131,28147]"/>
  <match src="expression_statement [81985,82000]" dest="expression_statement [55696,55711]"/>
  <match src="primitive_type [102568,102575]" dest="primitive_type [40386,40393]"/>
  <match src="identifier: j [35313,35314]" dest="identifier: j [50985,50986]"/>
  <match src="(: ( [30506,30507]" dest="(: ( [46178,46179]"/>
  <match src="function_definition [3206,3338]" dest="function_definition [3260,3392]"/>
  <match src="function_definition [50192,50261]" dest="function_definition [25631,25700]"/>
  <match src="identifier: c [2633,2634]" dest="identifier: c [2687,2688]"/>
  <match src="{: { [45327,45328]" dest="{: { [14581,14582]"/>
  <match src="[: [ [100984,100985]" dest="[: [ [38802,38803]"/>
  <match src="member_expression [96017,96045]" dest="member_expression [33803,33831]"/>
  <match src="function: function [92860,92868]" dest="function: function [30646,30654]"/>
  <match src="return_type_definition [53292,53306]" dest="return_type_definition [20286,20300]"/>
  <match src=".: . [106172,106173]" dest=".: . [68101,68102]"/>
  <match src="function_definition [10946,11191]" dest="function_definition [11045,11290]"/>
  <match src="type_name [103326,103333]" dest="type_name [41144,41151]"/>
  <match src="): ) [46712,46713]" dest="): ) [15966,15967]"/>
  <match src="identifier: payloadB [31893,31901]" dest="identifier: payloadB [47565,47573]"/>
  <match src="interface_declaration [52492,54938]" dest="interface_declaration [19486,21932]"/>
  <match src="(: ( [85872,85873]" dest="(: ( [73179,73180]"/>
  <match src="type_name [87380,87407]" dest="type_name [27509,27536]"/>
  <match src="type_cast_expression [20569,20579]" dest="type_cast_expression [63681,63691]"/>
  <match src="call_argument [101283,101289]" dest="call_argument [39101,39107]"/>
  <match src="call_expression [7162,7184]" dest="call_expression [7261,7283]"/>
  <match src="type_name [36560,36567]" dest="type_name [52232,52239]"/>
  <match src="return_type_definition [47034,47051]" dest="return_type_definition [16288,16305]"/>
  <match src="): ) [73375,73376]" dest="): ) [61539,61540]"/>
  <match src="): ) [8522,8523]" dest="): ) [8621,8622]"/>
  <match src=".: . [100681,100682]" dest=".: . [38499,38500]"/>
  <match src=",: , [102781,102782]" dest=",: , [40599,40600]"/>
  <match src="primitive_type [104511,104518]" dest="primitive_type [42329,42336]"/>
  <match src="identifier: sender [83352,83358]" dest="identifier: sender [77532,77538]"/>
  <match src="type_name [29244,29248]" dest="type_name [44916,44920]"/>
  <match src="(: ( [46606,46607]" dest="(: ( [15860,15861]"/>
  <match src="{: { [92429,92430]" dest="{: { [30215,30216]"/>
  <match src="number_literal: 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 [43105,43147]" dest="number_literal: 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 [12359,12401]"/>
  <match src="parameter [62701,62708]" dest="parameter [26570,26577]"/>
  <match src="type_name [96781,96788]" dest="type_name [34567,34574]"/>
  <match src="uint256: uint256 [44084,44091]" dest="uint256: uint256 [13338,13345]"/>
  <match src="call_expression [10391,10409]" dest="call_expression [10490,10508]"/>
  <match src="type_name [98647,98654]" dest="type_name [36465,36472]"/>
  <match src="identifier: spender [102762,102769]" dest="identifier: spender [40580,40587]"/>
  <match src="function_body [6950,7004]" dest="function_body [7049,7103]"/>
  <match src="=: = [36057,36058]" dest="=: = [51729,51730]"/>
  <match src="): ) [46761,46762]" dest="): ) [16015,16016]"/>
  <match src="primitive_type [45457,45464]" dest="primitive_type [14711,14718]"/>
  <match src="&quot;: &quot; [84895,84896]" dest="&quot;: &quot; [79367,79368]"/>
  <match src="return_statement [37877,37891]" dest="return_statement [53549,53563]"/>
  <match src="yul_path [86437,86444]" dest="yul_path [73744,73751]"/>
  <match src="return: return [10885,10891]" dest="return: return [10984,10990]"/>
  <match src="call_expression [97356,97377]" dest="call_expression [35142,35163]"/>
  <match src=",: , [1944,1945]" dest=",: , [1998,1999]"/>
  <match src="parameter [93432,93439]" dest="parameter [31218,31225]"/>
  <match src="(: ( [100761,100762]" dest="(: ( [38579,38580]"/>
  <match src="primitive_type [103116,103123]" dest="primitive_type [40934,40941]"/>
  <match src="identifier: epochs [102014,102020]" dest="identifier: epochs [39832,39838]"/>
  <match src="pure: pure [10587,10591]" dest="pure: pure [10686,10690]"/>
  <match src="identifier: account [50214,50221]" dest="identifier: account [25653,25660]"/>
  <match src=".: . [83351,83352]" dest=".: . [77531,77532]"/>
  <match src="): ) [37949,37950]" dest="): ) [53621,53622]"/>
  <match src="type_name [80489,80496]" dest="type_name [77162,77169]"/>
  <match src="constant: constant [43266,43274]" dest="constant: constant [12520,12528]"/>
  <match src="state_mutability [31239,31243]" dest="state_mutability [46911,46915]"/>
  <match src="(: ( [9660,9661]" dest="(: ( [9759,9760]"/>
  <match src="uint256: uint256 [7037,7044]" dest="uint256: uint256 [7136,7143]"/>
  <match src="call_expression [51237,51259]" dest="call_expression [54821,54851]"/>
  <match src="visibility [45434,45442]" dest="visibility [14688,14696]"/>
  <match src="{: { [7578,7579]" dest="{: { [7677,7678]"/>
  <match src="member_expression [96325,96352]" dest="member_expression [34111,34138]"/>
  <match src="if: if [28904,28906]" dest="if: if [44576,44578]"/>
  <match src="memory: memory [95130,95136]" dest="memory: memory [32916,32922]"/>
  <match src="): ) [21903,21904]" dest="): ) [63838,63839]"/>
  <match src="library_declaration [6309,11194]" dest="library_declaration [6408,11293]"/>
  <match src="{: { [8781,8782]" dest="{: { [8880,8881]"/>
  <match src="call_struct_argument [45359,45385]" dest="call_struct_argument [14613,14639]"/>
  <match src="state_mutability [7541,7545]" dest="state_mutability [7640,7644]"/>
  <match src="parameter [102407,102422]" dest="parameter [40225,40240]"/>
  <match src="identifier: value [11170,11175]" dest="identifier: value [11269,11274]"/>
  <match src="struct_member [87308,87324]" dest="struct_member [27437,27453]"/>
  <match src="state_mutability [7773,7777]" dest="state_mutability [7872,7876]"/>
  <match src="identifier: getPartial [9455,9465]" dest="identifier: getPartial [9554,9564]"/>
  <match src="identifier: balanceOfBonded [82182,82197]" dest="identifier: balanceOfBonded [71350,71365]"/>
  <match src="call_expression [81588,81601]" dest="call_expression [70806,70819]"/>
  <match src="call_expression [9656,9710]" dest="call_expression [9755,9809]"/>
  <match src="function: function [90320,90328]" dest="function: function [75392,75400]"/>
  <match src="(: ( [99877,99878]" dest="(: ( [37695,37696]"/>
  <match src=",: , [50161,50162]" dest=",: , [25600,25601]"/>
  <match src="identifier: accounts [94852,94860]" dest="identifier: accounts [32638,32646]"/>
  <match src="primitive_type [88094,88098]" dest="primitive_type [28223,28227]"/>
  <match src="identifier: Bond [82017,82021]" dest="identifier: Unbond [72117,72123]"/>
  <match src="(: ( [83745,83746]" dest="(: ( [62596,62597]"/>
  <match src="(: ( [31484,31485]" dest="(: ( [47156,47157]"/>
  <match src="{: { [91064,91065]" dest="{: { [76136,76137]"/>
  <match src="parameter [51160,51175]" dest="parameter [54768,54783]"/>
  <match src=".: . [100750,100751]" dest=".: . [38568,38569]"/>
  <match src="comment: /* Market */ [44165,44177]" dest="comment: /* Market */ [13419,13431]"/>
  <match src="type_cast_expression [30700,31035]" dest="type_cast_expression [46372,46707]"/>
  <match src="state_variable_declaration [6413,6444]" dest="state_variable_declaration [6512,6543]"/>
  <match src="primitive_type [98774,98781]" dest="primitive_type [36592,36599]"/>
  <match src="identifier: strategy [95397,95405]" dest="identifier: strategy [33183,33191]"/>
  <match src="function_body [72119,72200]" dest="function_body [58207,58413]"/>
  <match src="number_literal: 4 [37710,37711]" dest="number_literal: 4 [53382,53383]"/>
  <match src="return_type_definition [5396,5413]" dest="return_type_definition [5450,5467]"/>
  <match src="call_expression [8799,8839]" dest="call_expression [8898,8938]"/>
  <match src="yul_evm_builtin [86425,86436]" dest="yul_evm_builtin [73732,73743]"/>
  <match src="identifier: totalSupply [92504,92515]" dest="identifier: totalSupply [30290,30301]"/>
  <match src="primitive_type [43410,43417]" dest="primitive_type [12664,12671]"/>
  <match src="visibility [104917,104925]" dest="visibility [42735,42743]"/>
  <match src="variable_declaration_statement [2625,2643]" dest="variable_declaration_statement [2679,2697]"/>
  <match src="identifier: D256 [45774,45778]" dest="identifier: D256 [15028,15032]"/>
  <match src="array_access [101937,101961]" dest="array_access [39755,39779]"/>
  <match src="type_name [88226,88233]" dest="type_name [28355,28362]"/>
  <match src="call_argument [90563,90570]" dest="call_argument [75635,75642]"/>
  <match src=".: . [82781,82782]" dest=".: . [78872,78873]"/>
  <match src="contract_body [657,5488]" dest="contract_body [711,5542]"/>
  <match src="type_name [34961,34966]" dest="type_name [50633,50638]"/>
  <match src="(: ( [93408,93409]" dest="(: ( [31194,31195]"/>
  <match src=",: , [106234,106235]" dest=",: , [68163,68164]"/>
  <match src="parameter [94981,94988]" dest="parameter [32767,32774]"/>
  <match src="state_variable_declaration [89822,89936]" dest="state_variable_declaration [74894,75008]"/>
  <match src="): ) [78115,78116]" dest="): ) [57935,57936]"/>
  <match src="}: } [10127,10128]" dest="}: } [10226,10227]"/>
  <match src="type_name [66564,66568]" dest="type_name [66954,66958]"/>
  <match src="identifier: amount [23257,23263]" dest="identifier: amount [17353,17359]"/>
  <match src="identifier: b [7424,7425]" dest="identifier: b [7523,7524]"/>
  <match src=".: . [105283,105284]" dest=".: . [43101,43102]"/>
  <match src="variable_declaration [95106,95144]" dest="variable_declaration [32892,32930]"/>
  <match src="uint256: uint256 [95811,95818]" dest="uint256: uint256 [33597,33604]"/>
  <match src="{: { [82112,82113]" dest="{: { [71279,71280]"/>
  <match src="type_name [101853,101859]" dest="type_name [39671,39677]"/>
  <match src="function_definition [53514,53629]" dest="function_definition [20508,20623]"/>
  <match src="return: return [93236,93242]" dest="return: return [31022,31028]"/>
  <match src="public: public [93411,93417]" dest="public: public [31197,31203]"/>
  <match src="member_expression [103219,103261]" dest="member_expression [41037,41079]"/>
  <match src="primitive_type [92112,92118]" dest="primitive_type [29898,29904]"/>
  <match src=".: . [77116,77117]" dest=".: . [61086,61087]"/>
  <match src="identifier: blockTimestamp [95362,95376]" dest="identifier: blockTimestamp [33148,33162]"/>
  <match src="(: ( [8290,8291]" dest="(: ( [8389,8390]"/>
  <match src="function_body [36036,36911]" dest="function_body [51708,52583]"/>
  <match src="function_body [9804,9851]" dest="function_body [9903,9950]"/>
  <match src=".: . [11087,11088]" dest=".: . [11186,11187]"/>
  <match src="function_body [102248,102352]" dest="function_body [40066,40170]"/>
  <match src="call_argument [30279,30298]" dest="call_argument [45951,45970]"/>
  <match src="uint256: uint256 [43434,43441]" dest="uint256: uint256 [12688,12695]"/>
  <match src="type_name [74666,74673]" dest="type_name [76993,77000]"/>
  <match src="type_name [102392,102399]" dest="type_name [40210,40217]"/>
  <match src="primitive_type [106414,106421]" dest="primitive_type [68343,68350]"/>
  <match src="member_expression [104183,104219]" dest="member_expression [42001,42037]"/>
  <match src="type_name [95579,95586]" dest="type_name [33365,33372]"/>
  <match src="): ) [7635,7636]" dest="): ) [7734,7735]"/>
  <match src=".: . [104428,104429]" dest=".: . [42246,42247]"/>
  <match src="internal: internal [99363,99371]" dest="internal: internal [37181,37189]"/>
  <match src="type_name [52937,52944]" dest="type_name [19931,19938]"/>
  <match src="type_name [104311,104317]" dest="type_name [42129,42135]"/>
  <match src="event_definition [53795,53977]" dest="event_definition [20789,20971]"/>
  <match src="identifier: amount [104703,104709]" dest="identifier: amount [42521,42527]"/>
  <match src="}: } [93601,93602]" dest="}: } [31387,31388]"/>
  <match src="private: private [43932,43939]" dest="private: private [13186,13193]"/>
  <match src="type_name [53609,53616]" dest="type_name [20603,20610]"/>
  <match src="call_argument [51243,51250]" dest="call_argument [54835,54842]"/>
  <match src="call_argument [46838,46868]" dest="call_argument [16092,16122]"/>
  <match src="parameter [53301,53305]" dest="parameter [20295,20299]"/>
  <match src="bytes: bytes [35400,35405]" dest="bytes: bytes [51072,51077]"/>
  <match src="binary_expression [37668,37685]" dest="binary_expression [53340,53357]"/>
  <match src="}: } [32551,32552]" dest="}: } [48223,48224]"/>
  <match src="identifier: Decimal [67307,67314]" dest="identifier: Decimal [66927,66934]"/>
  <match src=".: . [49116,49117]" dest=".: . [69965,69966]"/>
  <match src="identifier: period [44959,44965]" dest="identifier: period [14213,14219]"/>
  <match src="bool: bool [10367,10371]" dest="bool: bool [10466,10470]"/>
  <match src="return_type_definition [36997,37019]" dest="return_type_definition [52669,52691]"/>
  <match src="state_mutability [46361,46365]" dest="state_mutability [15615,15619]"/>
  <match src=".: . [92828,92829]" dest=".: . [30614,30615]"/>
  <match src="&quot;: &quot; [90993,90994]" dest="&quot;: &quot; [76065,76066]"/>
  <match src="call_argument [21307,21313]" dest="call_argument [59164,59170]"/>
  <match src="pure: pure [28883,28887]" dest="pure: pure [44555,44559]"/>
  <match src="type_name [37547,37554]" dest="type_name [53219,53226]"/>
  <match src="using_directive [6332,6359]" dest="using_directive [6431,6458]"/>
  <match src="return_type_definition [9187,9208]" dest="return_type_definition [9286,9307]"/>
  <match src="}: } [99286,99287]" dest="}: } [37104,37105]"/>
  <match src="member_expression [83170,83182]" dest="member_expression [79890,79902]"/>
  <match src="uint256: uint256 [44322,44329]" dest="uint256: uint256 [13576,13583]"/>
  <match src="): ) [34049,34050]" dest="): ) [49721,49722]"/>
  <match src="identifier: account [94137,94144]" dest="identifier: account [31923,31930]"/>
  <match src=":: : [46844,46845]" dest=":: : [16098,16099]"/>
  <match src="}: } [99751,99752]" dest="}: } [37569,37570]"/>
  <match src="identifier: balance [101308,101315]" dest="identifier: balance [39126,39133]"/>
  <match src="identifier: sender [78502,78508]" dest="identifier: sender [81982,81988]"/>
  <match src="private: private [48096,48103]" dest="private: private [58900,58907]"/>
  <match src="identifier: Transfer [20805,20813]" dest="identifier: CouponTransfer [64132,64146]"/>
  <match src="return_type_definition [8374,8395]" dest="return_type_definition [8473,8494]"/>
  <match src="identifier: _state [101023,101029]" dest="identifier: _state [38841,38847]"/>
  <match src="member_expression [93135,93149]" dest="member_expression [30921,30935]"/>
  <match src=".: . [101901,101902]" dest=".: . [39719,39720]"/>
  <match src="pure: pure [41266,41270]" dest="pure: pure [19120,19124]"/>
  <match src="identifier: _state [93028,93034]" dest="identifier: _state [30814,30820]"/>
  <match src="call_expression [81028,81042]" dest="call_expression [55872,55886]"/>
  <match src="identifier: balanceOfRewarded [83330,83347]" dest="identifier: balanceOf [77518,77527]"/>
  <match src=",: , [30134,30135]" dest=",: , [45806,45807]"/>
  <match src=".: . [104000,104001]" dest=".: . [41818,41819]"/>
  <match src="bool: bool [31101,31105]" dest="bool: bool [46773,46777]"/>
  <match src="type_name [43833,43840]" dest="type_name [13087,13094]"/>
  <match src="parameter [31196,31212]" dest="parameter [46868,46884]"/>
  <match src="identifier: _state [96017,96023]" dest="identifier: _state [33803,33809]"/>
  <match src="binary_expression [81588,81606]" dest="binary_expression [70806,70824]"/>
  <match src=",: , [87227,87228]" dest=",: , [27356,27357]"/>
  <match src="primitive_type [29287,29294]" dest="primitive_type [44959,44966]"/>
  <match src="): ) [83707,83708]" dest="): ) [71885,71886]"/>
  <match src="call_argument [34205,34210]" dest="call_argument [49877,49882]"/>
  <match src="{: { [91830,91831]" dest="{: { [29616,29617]"/>
  <match src="type_name [87710,87719]" dest="type_name [27839,27848]"/>
  <match src="returns: returns [16632,16639]" dest="returns: returns [17276,17283]"/>
  <match src="function: function [99995,100003]" dest="function: function [37813,37821]"/>
  <match src="primitive_type [79811,79818]" dest="primitive_type [69537,69544]"/>
  <match src="uint256: uint256 [70106,70113]" dest="uint256: uint256 [65159,65166]"/>
  <match src="): ) [72087,72088]" dest="): ) [58197,58198]"/>
  <match src="type_name [10860,10867]" dest="type_name [10959,10966]"/>
  <match src="function_definition [96239,96360]" dest="function_definition [34025,34146]"/>
  <match src="): ) [80201,80202]" dest="): ) [69716,69717]"/>
  <match src="number_literal: 0 [6707,6708]" dest="number_literal: 0 [6806,6807]"/>
  <match src="): ) [9977,9978]" dest="): ) [10076,10077]"/>
  <match src="function_body [8982,9048]" dest="function_body [9081,9147]"/>
  <match src="state_variable_declaration [28499,28530]" dest="state_variable_declaration [44171,44202]"/>
  <match src="[: [ [103232,103233]" dest="[: [ [41050,41051]"/>
  <match src="call_argument [45623,45649]" dest="call_argument [14877,14903]"/>
  <match src="return: return [8030,8036]" dest="return: return [8129,8135]"/>
  <match src="member_expression [102722,102737]" dest="member_expression [40540,40555]"/>
  <match src="type_name [102616,102622]" dest="type_name [40434,40440]"/>
  <match src="assignment_expression [37642,37686]" dest="assignment_expression [53314,53358]"/>
  <match src="visibility [42872,42879]" dest="visibility [12126,12133]"/>
  <match src=".: . [46832,46833]" dest=".: . [16086,16087]"/>
  <match src="=: = [35217,35218]" dest="=: = [50889,50890]"/>
  <match src="binary_expression [4049,4054]" dest="binary_expression [4103,4108]"/>
  <match src="primitive_type [101805,101812]" dest="primitive_type [39623,39630]"/>
  <match src="(: ( [80707,80708]" dest="(: ( [70322,70323]"/>
  <match src=",: , [53107,53108]" dest=",: , [20101,20102]"/>
  <match src="type_name [31790,31794]" dest="type_name [47462,47466]"/>
  <match src="expression_statement [26087,26152]" dest="expression_statement [78544,78615]"/>
  <match src="identifier: epoch [95742,95747]" dest="identifier: epoch [33528,33533]"/>
  <match src="type_name [54335,54342]" dest="type_name [21329,21336]"/>
  <match src="identifier: value [53567,53572]" dest="identifier: value [20561,20566]"/>
  <match src="{: { [94827,94828]" dest="{: { [32613,32614]"/>
  <match src="identifier: reason [29601,29607]" dest="identifier: reason [45273,45279]"/>
  <match src="call_argument [33802,33821]" dest="call_argument [49474,49493]"/>
  <match src="identifier: mul [9305,9308]" dest="identifier: mul [9404,9407]"/>
  <match src="member_expression [96183,96196]" dest="member_expression [33969,33982]"/>
  <match src="): ) [37199,37200]" dest="): ) [52871,52872]"/>
  <match src="type_name [53271,53275]" dest="type_name [20265,20269]"/>
  <match src="parameter [94780,94795]" dest="parameter [32566,32581]"/>
  <match src="identifier: D256 [66395,66399]" dest="identifier: D256 [65351,65355]"/>
  <match src="address: address [54828,54835]" dest="address: address [21822,21829]"/>
  <match src="&quot;: &quot; [22753,22754]" dest="&quot;: &quot; [63274,63275]"/>
  <match src="call_expression [83041,83157]" dest="call_expression [58478,58592]"/>
  <match src="identifier: redeemable [88363,88373]" dest="identifier: redeemable [28492,28502]"/>
  <match src="identifier: Status [94687,94693]" dest="identifier: Status [32473,32479]"/>
  <match src="primitive_type [87710,87717]" dest="primitive_type [27839,27846]"/>
  <match src="uint256: uint256 [81118,81125]" dest="uint256: uint256 [71225,71232]"/>
  <match src="}: } [5484,5485]" dest="}: } [5538,5539]"/>
  <match src="{: { [48253,48254]" dest="{: { [55049,55050]"/>
  <match src="identifier: D256 [8110,8114]" dest="identifier: D256 [8209,8213]"/>
  <match src="inheritance_specifier [98582,98589]" dest="inheritance_specifier [36400,36407]"/>
  <match src="call_argument [8451,8452]" dest="call_argument [8550,8551]"/>
  <match src="identifier: Account [94703,94710]" dest="identifier: Account [32489,32496]"/>
  <match src="(: ( [53091,53092]" dest="(: ( [20085,20086]"/>
  <match src="): ) [31015,31016]" dest="): ) [46687,46688]"/>
  <match src="state_mutability [29355,29359]" dest="state_mutability [45027,45031]"/>
  <match src=",: , [30330,30331]" dest=",: , [46002,46003]"/>
  <match src="=: = [37046,37047]" dest="=: = [52718,52719]"/>
  <match src="function_body [45748,45822]" dest="function_body [15002,15076]"/>
  <match src="type_name [8477,8481]" dest="type_name [8576,8580]"/>
  <match src="comment: /**      * Global      */ [92721,92748]" dest="comment: /**      * Global      */ [30507,30534]"/>
  <match src="uint256: uint256 [46255,46262]" dest="uint256: uint256 [15509,15516]"/>
  <match src="visibility [100273,100281]" dest="visibility [38091,38099]"/>
  <match src="identifier: couponAllowances [102483,102499]" dest="identifier: couponAllowances [40301,40317]"/>
  <match src="primitive_type [35072,35077]" dest="primitive_type [50744,50749]"/>
  <match src=".: . [94532,94533]" dest=".: . [32318,32319]"/>
  <match src="identifier: sender [53733,53739]" dest="identifier: sender [20727,20733]"/>
  <match src="yul_assignment [86417,86445]" dest="yul_assignment [73724,73752]"/>
  <match src="): ) [45649,45650]" dest="): ) [14903,14904]"/>
  <match src="uint256: uint256 [80407,80414]" dest="uint256: uint256 [77291,77298]"/>
  <match src="bytes32: bytes32 [33188,33195]" dest="bytes32: bytes32 [48860,48867]"/>
  <match src="internal: internal [46462,46470]" dest="internal: internal [15716,15724]"/>
  <match src=".: . [92580,92581]" dest=".: . [30366,30367]"/>
  <match src="(: ( [10917,10918]" dest="(: ( [11016,11017]"/>
  <match src="): ) [32364,32365]" dest="): ) [48036,48037]"/>
  <match src="function_definition [2267,2738]" dest="function_definition [2321,2792]"/>
  <match src="call_struct_argument [44926,44944]" dest="call_struct_argument [14180,14198]"/>
  <match src="primitive_type [53139,53143]" dest="primitive_type [20133,20137]"/>
  <match src="call_argument [84869,84873]" dest="call_argument [79338,79342]"/>
  <match src="): ) [90631,90632]" dest="): ) [75703,75704]"/>
  <match src="internal: internal [90366,90374]" dest="internal: internal [75438,75446]"/>
  <match src="false: false [98964,98969]" dest="false: false [36782,36787]"/>
  <match src="identifier: getSupplyChangeDivisor [46738,46760]" dest="identifier: getSupplyChangeDivisor [15992,16014]"/>
  <match src="function_body [97064,97126]" dest="function_body [34850,34912]"/>
  <match src="}: } [45394,45395]" dest="}: } [14648,14649]"/>
  <match src="comment: // 30% [44287,44293]" dest="comment: // 30% [13541,13547]"/>
  <match src="call_argument [29678,29686]" dest="call_argument [45350,45358]"/>
  <match src="identifier: balanceCheck [82853,82865]" dest="identifier: balanceCheck [55483,55495]"/>
  <match src="): ) [33026,33027]" dest="): ) [48698,48699]"/>
  <match src="identifier: FILE [84717,84721]" dest="identifier: FILE [79134,79138]"/>
  <match src="return: return [9953,9959]" dest="return: return [10052,10058]"/>
  <match src="{: { [93841,93842]" dest="{: { [31627,31628]"/>
  <match src="expression_statement [99222,99280]" dest="expression_statement [37040,37098]"/>
  <match src="type_name [53169,53176]" dest="type_name [20163,20170]"/>
  <match src="{: { [29998,29999]" dest="{: { [45670,45671]"/>
  <match src="): ) [32532,32533]" dest="): ) [48204,48205]"/>
  <match src="state_mutability [10353,10357]" dest="state_mutability [10452,10456]"/>
  <match src="visibility [53193,53201]" dest="visibility [20187,20195]"/>
  <match src="memory: memory [66960,66966]" dest="memory: memory [66907,66913]"/>
  <match src="external: external [52824,52832]" dest="external: external [19818,19826]"/>
  <match src="type_name [97440,97447]" dest="type_name [35226,35233]"/>
  <match src="identifier: CHAIN_ID [42807,42815]" dest="identifier: CHAIN_ID [12061,12069]"/>
  <match src="expression_statement [48987,49097]" dest="expression_statement [55392,55471]"/>
  <match src="uint256: uint256 [44455,44462]" dest="uint256: uint256 [13709,13716]"/>
  <match src="uint256: uint256 [87353,87360]" dest="uint256: uint256 [27482,27489]"/>
  <match src="type_name [76194,76201]" dest="type_name [80637,80644]"/>
  <match src="state_mutability [95687,95691]" dest="state_mutability [33473,33477]"/>
  <match src="if: if [8412,8414]" dest="if: if [8511,8513]"/>
  <match src="}: } [88245,88246]" dest="}: } [28374,28375]"/>
  <match src="uint256: uint256 [1409,1416]" dest="uint256: uint256 [1463,1470]"/>
  <match src="}: } [95232,95233]" dest="}: } [33018,33019]"/>
  <match src="parameter [97748,97760]" dest="parameter [35534,35546]"/>
  <match src="type_name [87435,87442]" dest="type_name [27564,27571]"/>
  <match src="}: } [11190,11191]" dest="}: } [11289,11290]"/>
  <match src="}: } [100167,100168]" dest="}: } [37985,37986]"/>
  <match src="visibility [46109,46117]" dest="visibility [15363,15371]"/>
  <match src="type_name [29871,29878]" dest="type_name [45543,45550]"/>
  <match src="type_name [3264,3271]" dest="type_name [3318,3325]"/>
  <match src="&quot;: &quot; [1446,1447]" dest="&quot;: &quot; [1500,1501]"/>
  <match src="function: function [50192,50200]" dest="function: function [25631,25639]"/>
  <match src="uint256: uint256 [70159,70166]" dest="uint256: uint256 [69790,69797]"/>
  <match src="internal: internal [74893,74901]" dest="internal: internal [55327,55335]"/>
  <match src="identifier: stringifyTruncated [31466,31484]" dest="identifier: stringifyTruncated [47138,47156]"/>
  <match src="identifier: reason [99355,99361]" dest="identifier: reason [37173,37179]"/>
  <match src="member_expression [101720,101742]" dest="member_expression [39538,39560]"/>
  <match src="identifier: Global [87527,87533]" dest="identifier: Global [27656,27662]"/>
  <match src=",: , [81934,81935]" dest=",: , [71086,71087]"/>
  <match src="returns: returns [9396,9403]" dest="returns: returns [9495,9502]"/>
  <match src=",: , [33252,33253]" dest=",: , [48924,48925]"/>
  <match src="function_definition [53315,53375]" dest="function_definition [20309,20369]"/>
  <match src="primitive_type [54654,54661]" dest="primitive_type [21648,21655]"/>
  <match src="): ) [99743,99744]" dest="): ) [37561,37562]"/>
  <match src="parameter [100240,100255]" dest="parameter [38058,38073]"/>
  <match src="identifier: z [36856,36857]" dest="identifier: z [52528,52529]"/>
  <match src="identifier: div [95427,95430]" dest="identifier: div [33213,33216]"/>
  <match src="identifier: rejectFor [97143,97152]" dest="identifier: rejectFor [34929,34938]"/>
  <match src="identifier: BOOTSTRAPPING_PRICE [45366,45385]" dest="identifier: BOOTSTRAPPING_PRICE [14620,14639]"/>
  <match src="user_defined_type [9106,9110]" dest="user_defined_type [9205,9209]"/>
  <match src="string [23265,23303]" dest="string [70040,70061]"/>
  <match src="parameter [10860,10867]" dest="parameter [10959,10966]"/>
  <match src="struct: struct [43353,43359]" dest="struct: struct [12607,12613]"/>
  <match src="member_expression [94679,94693]" dest="member_expression [32465,32479]"/>
  <match src="primitive_type [92539,92546]" dest="primitive_type [30325,30332]"/>
  <match src="comment: /* Oracle */ [43047,43059]" dest="comment: /* Oracle */ [12301,12313]"/>
  <match src="member_expression [100293,100308]" dest="member_expression [38111,38126]"/>
  <match src="primitive_type [64541,64548]" dest="primitive_type [81790,81797]"/>
  <match src="string_literal [23265,23303]" dest="string_literal [70040,70061]"/>
  <match src="(: ( [81857,81858]" dest="(: ( [72045,72046]"/>
  <match src="(: ( [93930,93931]" dest="(: ( [31716,31717]"/>
  <match src="call_argument [37278,37288]" dest="call_argument [52950,52960]"/>
  <match src="visibility [107722,107730]" dest="visibility [82318,82326]"/>
  <match src="identifier: bonded [103026,103032]" dest="identifier: bonded [40844,40850]"/>
  <match src="return: return [45085,45091]" dest="return: return [14339,14345]"/>
  <match src="if_statement [11082,11141]" dest="if_statement [11181,11240]"/>
  <match src="): ) [29385,29386]" dest="): ) [45057,45058]"/>
  <match src="identifier: balance [93142,93149]" dest="identifier: balance [30928,30935]"/>
  <match src="): ) [94958,94959]" dest="): ) [32744,32745]"/>
  <match src="member_expression [92447,92462]" dest="member_expression [30233,30248]"/>
  <match src="primitive_type [88608,88615]" dest="primitive_type [28737,28744]"/>
  <match src="(: ( [83693,83694]" dest="(: ( [71871,71872]"/>
  <match src="identifier: ADVANCE_INCENTIVE [46042,46059]" dest="identifier: ADVANCE_INCENTIVE [15296,15313]"/>
  <match src="(: ( [93000,93001]" dest="(: ( [30786,30787]"/>
  <match src="visibility [8931,8939]" dest="visibility [9030,9038]"/>
  <match src="memory: memory [52790,52796]" dest="memory: memory [19784,19790]"/>
  <match src="function: function [54215,54223]" dest="function: function [21209,21217]"/>
  <match src="sload: sload [97850,97855]" dest="sload: sload [35636,35641]"/>
  <match src="identifier: epochTimeWithStrategy [95195,95216]" dest="identifier: epochTimeWithStrategy [32981,33002]"/>
  <match src="number_literal: 0x203c [28614,28620]" dest="number_literal: 0x203c [44286,44292]"/>
  <match src="(: ( [91085,91086]" dest="(: ( [76157,76158]"/>
  <match src="identifier: getDAOExitLockupEpochs [46084,46106]" dest="identifier: getDAOExitLockupEpochs [15338,15360]"/>
  <match src="(: ( [8538,8539]" dest="(: ( [8637,8638]"/>
  <match src="identifier: updatePrice [66415,66426]" dest="identifier: oracleCapture [65371,65384]"/>
  <match src="call_expression [30193,30219]" dest="call_expression [45865,45891]"/>
  <match src="uint256: uint256 [88305,88312]" dest="uint256: uint256 [28434,28441]"/>
  <match src="primitive_type [52847,52852]" dest="primitive_type [19841,19846]"/>
  <match src="primitive_type [22590,22597]" dest="primitive_type [63190,63197]"/>
  <match src="identifier: blockTimestamp [67039,67053]" dest="identifier: newBonded [66440,66449]"/>
  <match src="primitive_type [33168,33172]" dest="primitive_type [48840,48844]"/>
  <match src="returns: returns [54551,54558]" dest="returns: returns [21545,21552]"/>
  <match src="primitive_type [1409,1416]" dest="primitive_type [1463,1470]"/>
  <match src="): ) [37339,37340]" dest="): ) [53011,53012]"/>
  <match src="primitive_type [88555,88562]" dest="primitive_type [28684,28691]"/>
  <match src=",: , [53607,53608]" dest=",: , [20601,20602]"/>
  <match src="parameter [76194,76209]" dest="parameter [80637,80652]"/>
  <match src="}: } [65688,65689]" dest="}: } [67203,67204]"/>
  <match src=",: , [32287,32288]" dest=",: , [47959,47960]"/>
  <match src="): ) [6710,6711]" dest="): ) [6809,6810]"/>
  <match src="(: ( [72246,72247]" dest="(: ( [80675,80676]"/>
  <match src="call_argument [6821,6836]" dest="call_argument [6920,6935]"/>
  <match src="comment: // Overridable for testing [95498,95524]" dest="comment: // Overridable for testing [33284,33310]"/>
  <match src="primitive_type [87388,87395]" dest="primitive_type [27517,27524]"/>
  <match src="type_name [19670,19677]" dest="type_name [17436,17443]"/>
  <match src="primitive_type [42945,42952]" dest="primitive_type [12199,12206]"/>
  <match src="identifier: accounts [102467,102475]" dest="identifier: accounts [40285,40293]"/>
  <match src="identifier: reason [90463,90469]" dest="identifier: reason [75535,75541]"/>
  <match src=".: . [7626,7627]" dest=".: . [7725,7726]"/>
  <match src="identifier: add [100429,100432]" dest="identifier: add [38247,38250]"/>
  <match src="(: ( [45891,45892]" dest="(: ( [15145,15146]"/>
  <match src="call_argument [78592,78596]" dest="call_argument [59281,59285]"/>
  <match src="identifier: amount [50107,50113]" dest="identifier: amount [25546,25552]"/>
  <match src="identifier: capture [62603,62610]" dest="identifier: capture [26472,26479]"/>
  <match src="identifier: owner [52555,52560]" dest="identifier: owner [19549,19554]"/>
  <match src="(: ( [54534,54535]" dest="(: ( [21528,21529]"/>
  <match src="mapping: mapping [88649,88656]" dest="mapping: mapping [28778,28785]"/>
  <match src=".: . [99534,99535]" dest=".: . [37352,37353]"/>
  <match src="user_defined_type [92899,92906]" dest="user_defined_type [30685,30692]"/>
  <match src="{: { [7153,7154]" dest="{: { [7252,7253]"/>
  <match src="external: external [54121,54129]" dest="external: external [21115,21123]"/>
  <match src="parameter [2291,2300]" dest="parameter [2345,2354]"/>
  <match src="function: function [96368,96376]" dest="function: function [34154,34162]"/>
  <match src="call_argument [10643,10647]" dest="call_argument [10742,10746]"/>
  <match src=",: , [4054,4055]" dest=",: , [4108,4109]"/>
  <match src="address: address [100467,100474]" dest="address: address [38285,38292]"/>
  <match src=".: . [101551,101552]" dest=".: . [39369,39370]"/>
  <match src="state_mutability [1896,1900]" dest="state_mutability [1950,1954]"/>
  <match src="member_expression [102007,102035]" dest="member_expression [39825,39853]"/>
  <match src="return: return [97497,97503]" dest="return: return [35283,35289]"/>
  <match src="parameter [98774,98791]" dest="parameter [36592,36609]"/>
  <match src="revert_statement [30013,30467]" dest="revert_statement [45685,46139]"/>
  <match src=",: , [32593,32594]" dest=",: , [48265,48266]"/>
  <match src="primitive_type [32584,32588]" dest="primitive_type [48256,48260]"/>
  <match src="identifier: COMMA [33692,33697]" dest="identifier: COMMA [49364,49369]"/>
  <match src="member_expression [100736,100750]" dest="member_expression [38554,38568]"/>
  <match src="): ) [44797,44798]" dest="): ) [14051,14052]"/>
  <match src="): ) [92772,92773]" dest="): ) [30558,30559]"/>
  <match src="function_definition [31077,31758]" dest="function_definition [46749,47430]"/>
  <match src="number_literal: 2 [9982,9983]" dest="number_literal: 2 [10081,10082]"/>
  <match src="type_name [12774,12781]" dest="type_name [22450,22457]"/>
  <match src="visibility [75697,75705]" dest="visibility [55553,55561]"/>
  <match src="call_argument [80720,80725]" dest="call_argument [70335,70340]"/>
  <match src="comment: /*     Copyright 2018-2019 zOS Global Limited     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [88760,89457]" dest="comment: /*     Copyright 2018-2019 zOS Global Limited     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [73836,74533]"/>
  <match src="member_expression [102722,102761]" dest="member_expression [40540,40579]"/>
  <match src="private: private [43841,43848]" dest="private: private [13095,13102]"/>
  <match src="using: using [74647,74652]" dest="using: using [76974,76979]"/>
  <match src="state_mutability [8173,8177]" dest="state_mutability [8272,8276]"/>
  <match src=",: , [80405,80406]" dest=",: , [69788,69789]"/>
  <match src="address: address [80651,80658]" dest="address: address [70266,70273]"/>
  <match src="emit_statement [83890,83942]" dest="emit_statement [79776,79811]"/>
  <match src="{: { [45748,45749]" dest="{: { [15002,15003]"/>
  <match src="}: } [92712,92713]" dest="}: } [30498,30499]"/>
  <match src="identifier: value [81929,81934]" dest="identifier: value [71081,71086]"/>
  <match src="{: { [101194,101195]" dest="{: { [39012,39013]"/>
  <match src="{: { [45901,45902]" dest="{: { [15155,15156]"/>
  <match src="(: ( [9465,9466]" dest="(: ( [9564,9565]"/>
  <match src="(: ( [90435,90436]" dest="(: ( [75507,75508]"/>
  <match src=".: . [72145,72146]" dest=".: . [58253,58254]"/>
  <match src="identifier: expiration [103185,103195]" dest="identifier: expiration [41003,41013]"/>
  <match src="type_name [94439,94446]" dest="type_name [32225,32232]"/>
  <match src="type_name [1837,1844]" dest="type_name [1891,1898]"/>
  <match src="event_paramater [52587,52597]" dest="event_paramater [19581,19591]"/>
  <match src="): ) [30607,30608]" dest="): ) [46279,46280]"/>
  <match src="type_name [35207,35214]" dest="type_name [50879,50886]"/>
  <match src="identifier: Getters [91813,91820]" dest="identifier: Getters [29599,29606]"/>
  <match src="memory: memory [37171,37177]" dest="memory: memory [52843,52849]"/>
  <match src="type_name [10796,10803]" dest="type_name [10895,10902]"/>
  <match src="identifier: FILE [64256,64260]" dest="identifier: FILE [60187,60191]"/>
  <match src="return: return [94072,94078]" dest="return: return [31858,31864]"/>
  <match src="parameter [100029,100043]" dest="parameter [37847,37861]"/>
  <match src="): ) [102789,102790]" dest="): ) [40607,40608]"/>
  <match src="identifier: sub [1360,1363]" dest="identifier: sub [1414,1417]"/>
  <match src="identifier: Require [83041,83048]" dest="identifier: Require [58478,58485]"/>
  <match src="type_name [101163,101169]" dest="type_name [38981,38987]"/>
  <match src="string [35140,35143]" dest="string [50812,50815]"/>
  <match src="{: { [8210,8211]" dest="{: { [8309,8310]"/>
  <match src="returns: returns [10477,10484]" dest="returns: returns [10576,10583]"/>
  <match src="(: ( [72163,72164]" dest="(: ( [58271,58272]"/>
  <match src="}: } [93375,93376]" dest="}: } [31161,31162]"/>
  <match src="type_name [88305,88312]" dest="type_name [28434,28441]"/>
  <match src=",: , [51175,51176]" dest=",: , [54783,54784]"/>
  <match src="&quot;: &quot; [92168,92169]" dest="&quot;: &quot; [29954,29955]"/>
  <match src="identifier: bonded [88313,88319]" dest="identifier: bonded [28442,28448]"/>
  <match src="parameter [94477,94491]" dest="parameter [32263,32277]"/>
  <match src="identifier: ASCII_ZERO [35786,35796]" dest="identifier: ASCII_ZERO [51458,51468]"/>
  <match src="type_name [7505,7512]" dest="type_name [7604,7611]"/>
  <match src="parameter [50206,50221]" dest="parameter [25645,25660]"/>
  <match src="identifier: debt [99565,99569]" dest="identifier: debt [37383,37387]"/>
  <match src="member_expression [101895,101927]" dest="member_expression [39713,39745]"/>
  <match src=",: , [87879,87880]" dest=",: , [28008,28009]"/>
  <match src="revert_statement [30675,31051]" dest="revert_statement [46347,46723]"/>
  <match src="[: [ [100950,100951]" dest="[: [ [38768,38769]"/>
  <match src="call_argument [49193,49207]" dest="call_argument [55183,55225]"/>
  <match src="memory: memory [9324,9330]" dest="memory: memory [9423,9429]"/>
  <match src="address: address [80163,80170]" dest="address: address [69678,69685]"/>
  <match src="function: function [1351,1359]" dest="function: function [1405,1413]"/>
  <match src="parameter [14608,14612]" dest="parameter [24284,24288]"/>
  <match src="parameter [1910,1917]" dest="parameter [1964,1971]"/>
  <match src="variable_declaration [37036,37045]" dest="variable_declaration [52708,52717]"/>
  <match src="(: ( [106790,106791]" dest="(: ( [68719,68720]"/>
  <match src=",: , [7293,7294]" dest=",: , [7392,7393]"/>
  <match src="identifier: supply [92581,92587]" dest="identifier: supply [30367,30373]"/>
  <match src="parameter [10445,10461]" dest="parameter [10544,10560]"/>
  <match src="identifier: div [8096,8099]" dest="identifier: div [8195,8198]"/>
  <match src="internal: internal [104124,104132]" dest="internal: internal [41942,41950]"/>
  <match src="}: } [10275,10276]" dest="}: } [10374,10375]"/>
  <match src="identifier: _state [101632,101638]" dest="identifier: _state [39450,39456]"/>
  <match src="struct_declaration [87625,87736]" dest="struct_declaration [27754,27865]"/>
  <match src="string_literal [3301,3329]" dest="string_literal [3355,3383]"/>
  <match src="return_type_definition [96908,96925]" dest="return_type_definition [34694,34711]"/>
  <match src="identifier: value [45780,45785]" dest="identifier: value [15034,15039]"/>
  <match src="string [106056,106068]" dest="string [67985,67997]"/>
  <match src="state_variable_declaration [43250,43304]" dest="state_variable_declaration [12504,12558]"/>
  <match src="identifier: spender [53100,53107]" dest="identifier: spender [20094,20101]"/>
  <match src="identifier: balanceCheck [81322,81334]" dest="identifier: balanceCheck [59351,59363]"/>
  <match src="identifier: getBootstrappingPeriod [45139,45161]" dest="identifier: getBootstrappingPeriod [14393,14415]"/>
  <match src="for: for [37452,37455]" dest="for: for [53124,53127]"/>
  <match src="type_name [64611,64618]" dest="type_name [81775,81782]"/>
  <match src="type_name [94205,94212]" dest="type_name [31991,31998]"/>
  <match src="parameter [8677,8693]" dest="parameter [8776,8792]"/>
  <match src="): ) [53215,53216]" dest="): ) [20209,20210]"/>
  <match src="comment: /**      * @dev Returns the amount of tokens owned by `account`.      */ [12635,12709]" dest="comment: /**      * @dev Returns the amount of tokens owned by `account`.      */ [22311,22385]"/>
  <match src="memory: memory [44836,44842]" dest="memory: memory [14090,14096]"/>
  <match src="constant: constant [28596,28604]" dest="constant: constant [44268,44276]"/>
  <match src="call_expression [51600,51688]" dest="call_expression [64010,64103]"/>
  <match src="visibility [54537,54545]" dest="visibility [21531,21539]"/>
  <match src="uint256: uint256 [37930,37937]" dest="uint256: uint256 [53602,53609]"/>
  <match src="{: { [10492,10493]" dest="{: { [10591,10592]"/>
  <match src="identifier: provider [92829,92837]" dest="identifier: provider [30615,30623]"/>
  <match src="uint256: uint256 [13049,13056]" dest="uint256: uint256 [22725,22732]"/>
  <match src="private: private [43705,43712]" dest="private: private [12959,12966]"/>
  <match src=",: , [78508,78509]" dest=",: , [81988,81989]"/>
  <match src="state_variable_declaration [28544,28575]" dest="state_variable_declaration [44216,44247]"/>
  <match src=".: . [100397,100398]" dest=".: . [38215,38216]"/>
  <match src="{: { [10610,10611]" dest="{: { [10709,10710]"/>
  <match src=",: , [99021,99022]" dest=",: , [36839,36840]"/>
  <match src="primitive_type [85930,85937]" dest="primitive_type [73237,73244]"/>
  <match src="call_argument [7400,7438]" dest="call_argument [7499,7537]"/>
  <match src=".: . [105128,105129]" dest=".: . [42946,42947]"/>
  <match src="): ) [43147,43148]" dest="): ) [12401,12402]"/>
  <match src="identifier: accounts [101212,101220]" dest="identifier: accounts [39030,39038]"/>
  <match src="comment: /* Chain */ [42765,42776]" dest="comment: /* Chain */ [12019,12030]"/>
  <match src="): ) [29996,29997]" dest="): ) [45668,45669]"/>
  <match src="identifier: b [927,928]" dest="identifier: b [981,982]"/>
  <match src="identifier: errorMessage [3917,3929]" dest="identifier: errorMessage [3971,3983]"/>
  <match src="comment: // populate the most-significant character [36741,36783]" dest="comment: // populate the most-significant character [52413,52455]"/>
  <match src="address: address [102568,102575]" dest="address: address [40386,40393]"/>
  <match src="expression_statement [106313,106315]" dest="expression_statement [68242,68244]"/>
  <match src="bool: bool [10486,10490]" dest="bool: bool [10585,10589]"/>
  <match src="]: ] [102507,102508]" dest="]: ] [40325,40326]"/>
  <match src="visibility [102239,102247]" dest="visibility [40057,40065]"/>
  <match src="(: ( [67348,67349]" dest="(: ( [66984,66985]"/>
  <match src="identifier: decrementBalanceOfBonded [82661,82685]" dest="identifier: placeLock [78908,78917]"/>
  <match src="primitive_type [39648,39655]" dest="primitive_type [17182,17189]"/>
  <match src="call_expression [8446,8453]" dest="call_expression [8545,8552]"/>
  <match src="return_statement [11121,11130]" dest="return_statement [11220,11229]"/>
  <match src="member_expression [95728,95756]" dest="member_expression [33514,33542]"/>
  <match src="public: public [92878,92884]" dest="public: public [30664,30670]"/>
  <match src="): ) [90543,90544]" dest="): ) [75615,75616]"/>
  <match src="visibility [9913,9921]" dest="visibility [10012,10020]"/>
  <match src="identifier: i [34650,34651]" dest="identifier: i [50322,50323]"/>
  <match src="state_mutability [1395,1399]" dest="state_mutability [1449,1453]"/>
  <match src=".: . [95461,95462]" dest=".: . [33247,33248]"/>
  <match src="=: = [34648,34649]" dest="=: = [50320,50321]"/>
  <match src="identifier: msg [80779,80782]" dest="identifier: msg [70367,70370]"/>
  <match src="identifier: Require [83170,83177]" dest="identifier: Require [79890,79897]"/>
  <match src="assembly: assembly [97818,97826]" dest="assembly: assembly [35604,35612]"/>
  <match src="parameter [46485,46504]" dest="parameter [15739,15758]"/>
  <match src="identifier: msg [12059,12062]" dest="identifier: msg [63918,63921]"/>
  <match src=".: . [103552,103553]" dest=".: . [41370,41371]"/>
  <match src=".: . [102078,102079]" dest=".: . [39896,39897]"/>
  <match src="uint256: uint256 [74877,74884]" dest="uint256: uint256 [55311,55318]"/>
  <match src=",: , [8126,8127]" dest=",: , [8225,8226]"/>
  <match src="parameter [7679,7695]" dest="parameter [7778,7794]"/>
  <match src="returns: returns [92530,92537]" dest="returns: returns [30316,30323]"/>
  <match src="constant: constant [44254,44262]" dest="constant: constant [13508,13516]"/>
  <match src="internal: internal [31225,31233]" dest="internal: internal [46897,46905]"/>
  <match src="(: ( [53461,53462]" dest="(: ( [20455,20456]"/>
  <match src="call_argument [82916,82917]" dest="call_argument [71667,71668]"/>
  <match src="pure: pure [2311,2315]" dest="pure: pure [2365,2369]"/>
  <match src="identifier: Locked [94593,94599]" dest="identifier: Locked [32379,32385]"/>
  <match src="member_expression [97504,97538]" dest="member_expression [35290,35324]"/>
  <match src="]: ] [94389,94390]" dest="]: ] [32175,32176]"/>
  <match src="contract: contract [62540,62548]" dest="contract: contract [26409,26417]"/>
  <match src="memory: memory [8682,8688]" dest="memory: memory [8781,8787]"/>
  <match src="member_expression [82778,82788]" dest="member_expression [78869,78879]"/>
  <match src="call_argument [100153,100159]" dest="call_argument [37971,37977]"/>
  <match src="{: { [101474,101475]" dest="{: { [39292,39293]"/>
  <match src="(: ( [93968,93969]" dest="(: ( [31754,31755]"/>
  <match src="update_expression [8561,8564]" dest="update_expression [8660,8663]"/>
  <match src="}: } [1075,1076]" dest="}: } [1129,1130]"/>
  <match src="array_access [94845,94867]" dest="array_access [32631,32653]"/>
  <match src="return_type_definition [52774,52797]" dest="return_type_definition [19768,19791]"/>
  <match src="external: external [53477,53485]" dest="external: external [20471,20479]"/>
  <match src="): ) [53191,53192]" dest="): ) [20185,20186]"/>
  <match src="identifier: a [7173,7174]" dest="identifier: a [7272,7273]"/>
  <match src="parameter [97289,97306]" dest="parameter [35075,35092]"/>
  <match src="type_name [100257,100264]" dest="type_name [38075,38082]"/>
  <match src="view: view [54186,54190]" dest="view: view [21180,21184]"/>
  <match src="type_name [80449,80456]" dest="type_name [77218,77225]"/>
  <match src="primitive_type [72977,72984]" dest="primitive_type [71825,71832]"/>
  <match src="call_expression [104585,104632]" dest="call_expression [42403,42450]"/>
  <match src="): ) [81763,81764]" dest="): ) [70943,70944]"/>
  <match src="function_definition [9859,9991]" dest="function_definition [9958,10090]"/>
  <match src=",: , [106253,106254]" dest=",: , [68182,68183]"/>
  <match src="identifier: must [29833,29837]" dest="identifier: must [45505,45509]"/>
  <match src="): ) [31570,31571]" dest="): ) [47242,47243]"/>
  <match src="address: address [92622,92629]" dest="address: address [30408,30415]"/>
  <match src="primitive_type [31169,31176]" dest="primitive_type [46841,46848]"/>
  <match src="{: { [51226,51227]" dest="{: { [54810,54811]"/>
  <match src="type_name [88280,88287]" dest="type_name [28409,28416]"/>
  <match src="member_expression [102460,102499]" dest="member_expression [40278,40317]"/>
  <match src="returns: returns [93642,93649]" dest="returns: returns [31428,31435]"/>
  <match src="identifier: balance [100414,100421]" dest="identifier: balance [38232,38239]"/>
  <match src="user_defined_type [88732,88745]" dest="user_defined_type [28861,28874]"/>
  <match src="assignment_expression [35504,35513]" dest="assignment_expression [51176,51185]"/>
  <match src="constant: constant [42880,42888]" dest="constant: constant [12134,12142]"/>
  <match src="address: address [97015,97022]" dest="address: address [34801,34808]"/>
  <match src="call_expression [29499,29523]" dest="call_expression [45171,45195]"/>
  <match src="primitive_type [87768,87775]" dest="primitive_type [27897,27904]"/>
  <match src="{: { [86415,86416]" dest="{: { [73722,73723]"/>
  <match src="(: ( [45726,45727]" dest="(: ( [14980,14981]"/>
  <match src="if: if [30649,30651]" dest="if: if [46321,46323]"/>
  <match src="returns: returns [93207,93214]" dest="returns: returns [30993,31000]"/>
  <match src="): ) [107945,107946]" dest="): ) [54828,54829]"/>
  <match src="primitive_type [99878,99885]" dest="primitive_type [37696,37703]"/>
  <match src="}: } [100839,100840]" dest="}: } [38657,38658]"/>
  <match src=".: . [94665,94666]" dest=".: . [32451,32452]"/>
  <match src="primitive_type [52587,52591]" dest="primitive_type [19581,19585]"/>
  <match src="identifier: input [37056,37061]" dest="identifier: input [52728,52733]"/>
  <match src="&quot;: &quot; [106734,106735]" dest="&quot;: &quot; [68663,68664]"/>
  <match src="new_expression [36200,36209]" dest="new_expression [51872,51881]"/>
  <match src="type_name [50255,50259]" dest="type_name [25694,25698]"/>
  <match src="expression_statement [100293,100373]" dest="expression_statement [38111,38191]"/>
  <match src="return: return [72019,72025]" dest="return: return [61970,61976]"/>
  <match src=".: . [103176,103177]" dest=".: . [40994,40995]"/>
  <match src="function_definition [99464,99589]" dest="function_definition [37282,37407]"/>
  <match src="comment: // 168 epochs / 7 days [42917,42939]" dest="comment: // 168 epochs / 7 days [12171,12193]"/>
  <match src="uint256: uint256 [29312,29319]" dest="uint256: uint256 [44984,44991]"/>
  <match src="variable_declaration_statement [103361,103424]" dest="variable_declaration_statement [41179,41242]"/>
  <match src="(: ( [98939,98940]" dest="(: ( [36757,36758]"/>
  <match src="return_type_definition [52838,52853]" dest="return_type_definition [19832,19847]"/>
  <match src="identifier: value [7155,7160]" dest="identifier: value [7254,7259]"/>
  <match src="identifier: sub [100758,100761]" dest="identifier: sub [38576,38579]"/>
  <match src="parameter [54588,54598]" dest="parameter [21582,21592]"/>
  <match src="return_statement [97638,97686]" dest="return_statement [35424,35472]"/>
  <match src="bytes32: bytes32 [91008,91015]" dest="bytes32: bytes32 [76080,76087]"/>
  <match src="parameter [66349,66368]" dest="parameter [19043,19068]"/>
  <match src="): ) [33664,33665]" dest="): ) [49336,49337]"/>
  <match src="{: { [98590,98591]" dest="{: { [36408,36409]"/>
  <match src="return_type_definition [52897,52911]" dest="return_type_definition [19891,19905]"/>
  <match src="type_name [33290,33297]" dest="type_name [48962,48969]"/>
  <match src="assignment_expression [37255,37290]" dest="assignment_expression [52927,52962]"/>
  <match src="): ) [83688,83689]" dest="): ) [71866,71867]"/>
  <match src="parameter [45306,45325]" dest="parameter [14560,14579]"/>
  <match src="number_literal: 65 [37649,37651]" dest="number_literal: 65 [53321,53323]"/>
  <match src="identifier: amount [75517,75523]" dest="identifier: amount [55175,55181]"/>
  <match src="identifier: sub [93701,93704]" dest="identifier: sub [31487,31490]"/>
  <match src="struct: struct [88254,88260]" dest="struct: struct [28383,28389]"/>
  <match src="): ) [81308,81309]" dest="): ) [71459,71460]"/>
  <match src="identifier: bonded [99422,99428]" dest="identifier: bonded [37240,37246]"/>
  <match src="primitive_type [99042,99049]" dest="primitive_type [36860,36867]"/>
  <match src="identifier: reason [99737,99743]" dest="identifier: reason [37555,37561]"/>
  <match src="uint256: uint256 [37547,37554]" dest="uint256: uint256 [53219,53226]"/>
  <match src="identifier: b [11097,11098]" dest="identifier: b [11196,11197]"/>
  <match src="binary_expression [106469,106504]" dest="binary_expression [68398,68433]"/>
  <match src="unary_expression [33358,33363]" dest="unary_expression [49030,49035]"/>
  <match src="parameter [102600,102614]" dest="parameter [40418,40432]"/>
  <match src="string [26115,26150]" dest="string [78583,78613]"/>
  <match src="address: address [93001,93008]" dest="address: address [30787,30794]"/>
  <match src="identifier: b [9573,9574]" dest="identifier: b [9672,9673]"/>
  <match src="augmented_assignment_expression [35872,35879]" dest="augmented_assignment_expression [51544,51551]"/>
  <match src="): ) [1885,1886]" dest="): ) [1939,1940]"/>
  <match src="(: ( [31561,31562]" dest="(: ( [47233,47234]"/>
  <match src="primitive_type [62701,62708]" dest="primitive_type [26570,26577]"/>
  <match src="(: ( [84235,84236]" dest="(: ( [58230,58231]"/>
  <match src="call_expression [72137,72192]" dest="call_expression [58245,58314]"/>
  <match src="return_type_definition [46246,46263]" dest="return_type_definition [15500,15517]"/>
  <match src="(: ( [33357,33358]" dest="(: ( [49029,49030]"/>
  <match src="): ) [77141,77142]" dest="): ) [61107,61108]"/>
  <match src="parameter [32627,32641]" dest="parameter [48299,48313]"/>
  <match src="function: function [102840,102848]" dest="function: function [40658,40666]"/>
  <match src="{: { [51502,51503]" dest="{: { [63995,63996]"/>
  <match src="}: } [29788,29789]" dest="}: } [45460,45461]"/>
  <match src="call_expression [6816,6837]" dest="call_expression [6915,6936]"/>
  <match src="): ) [106765,106766]" dest="): ) [68694,68695]"/>
  <match src="return_type_definition [3255,3272]" dest="return_type_definition [3309,3326]"/>
  <match src="if_statement [29376,29789]" dest="if_statement [45048,45461]"/>
  <match src="identifier: D256 [9196,9200]" dest="identifier: D256 [9295,9299]"/>
  <match src="&lt;=: &lt;= [1940,1942]" dest="&lt;=: &lt;= [1994,1996]"/>
  <match src="(: ( [72086,72087]" dest="(: ( [58196,58197]"/>
  <match src="identifier: value [7835,7840]" dest="identifier: value [7934,7939]"/>
  <match src="uint256: uint256 [93651,93658]" dest="uint256: uint256 [31437,31444]"/>
  <match src="{: { [99372,99373]" dest="{: { [37190,37191]"/>
  <match src="call_argument [90504,90543]" dest="call_argument [75576,75615]"/>
  <match src="return_type_definition [54191,54208]" dest="return_type_definition [21185,21202]"/>
  <match src=".: . [94585,94586]" dest=".: . [32371,32372]"/>
  <match src="=: = [43203,43204]" dest="=: = [12457,12458]"/>
  <match src="identifier: Decimal [45345,45352]" dest="identifier: Decimal [14599,14606]"/>
  <match src="): ) [92802,92803]" dest="): ) [30588,30589]"/>
  <match src="identifier: account [12742,12749]" dest="identifier: account [22418,22425]"/>
  <match src=",: , [4763,4764]" dest=",: , [4817,4818]"/>
  <match src="identifier: account [100309,100316]" dest="identifier: account [38127,38134]"/>
  <match src="function_definition [46197,46313]" dest="function_definition [15451,15567]"/>
  <match src=",: , [20579,20580]" dest=",: , [63691,63692]"/>
  <match src="(: ( [81997,81998]" dest="(: ( [55708,55709]"/>
  <match src="type_name [96573,96580]" dest="type_name [34359,34366]"/>
  <match src="function_definition [93769,93898]" dest="function_definition [31555,31684]"/>
  <match src="): ) [95093,95094]" dest="): ) [32879,32880]"/>
  <match src="{: { [28287,28288]" dest="{: { [43959,43960]"/>
  <match src=",: , [9896,9897]" dest=",: , [9995,9996]"/>
  <match src="): ) [94636,94637]" dest="): ) [32422,32423]"/>
  <match src="]: ] [101262,101263]" dest="]: ] [39080,39081]"/>
  <match src="comment: // Can participate in balance-dependant activities [106330,106380]" dest="comment: // Can participate in balance-dependant activities [68259,68309]"/>
  <match src="): ) [45072,45073]" dest="): ) [14326,14327]"/>
  <match src="variable_declaration_statement [34325,34340]" dest="variable_declaration_statement [49997,50012]"/>
  <match src="identifier: accounts [102266,102274]" dest="identifier: accounts [40084,40092]"/>
  <match src="member_expression [7842,7856]" dest="member_expression [7941,7955]"/>
  <match src="type_name [83984,83991]" dest="type_name [79851,79858]"/>
  <match src="identifier: msg [80639,80642]" dest="identifier: msg [70254,70257]"/>
  <match src="primitive_type [35376,35381]" dest="primitive_type [51048,51053]"/>
  <match src="type_name [83458,83465]" dest="type_name [61317,61324]"/>
  <match src="primitive_type [54144,54151]" dest="primitive_type [21138,21145]"/>
  <match src="expression_statement [101895,101997]" dest="expression_statement [39713,39815]"/>
  <match src="call_argument [83383,83387]" dest="call_argument [77558,77562]"/>
  <match src="(: ( [32277,32278]" dest="(: ( [47949,47950]"/>
  <match src="=: = [34186,34187]" dest="=: = [49858,49859]"/>
  <match src=",: , [98791,98792]" dest=",: , [36609,36610]"/>
  <match src="function: function [100511,100519]" dest="function: function [38329,38337]"/>
  <match src="identifier: shift [37796,37801]" dest="identifier: shift [53468,53473]"/>
  <match src="function_body [11071,11191]" dest="function_body [11170,11290]"/>
  <match src="call_argument [30289,30297]" dest="call_argument [45961,45969]"/>
  <match src="call_expression [31383,31407]" dest="call_expression [47055,47079]"/>
  <match src="call_argument [82698,82703]" dest="call_argument [78930,78939]"/>
  <match src="identifier: self [10401,10405]" dest="identifier: self [10500,10504]"/>
  <match src="visibility [95826,95832]" dest="visibility [33612,33618]"/>
  <match src="primitive_type [96262,96269]" dest="primitive_type [34048,34055]"/>
  <match src="primitive_type [73324,73331]" dest="primitive_type [61503,61510]"/>
  <match src=",: , [28831,28832]" dest=",: , [44503,44504]"/>
  <match src=".: . [97377,97378]" dest=".: . [35163,35164]"/>
  <match src="array_access [102722,102744]" dest="array_access [40540,40562]"/>
  <match src="string_literal [18430,18472]" dest="string_literal [71586,71617]"/>
  <match src="==: == [11094,11096]" dest="==: == [11193,11195]"/>
  <match src="call_expression [20652,20723]" dest="call_expression [62145,62264]"/>
  <match src="): ) [99080,99081]" dest="): ) [36898,36899]"/>
  <match src="}: } [96849,96850]" dest="}: } [34635,34636]"/>
  <match src="identifier: to [52658,52660]" dest="identifier: to [19652,19654]"/>
  <match src="visibility [46915,46923]" dest="visibility [16169,16177]"/>
  <match src="function: function [46197,46205]" dest="function: function [15451,15459]"/>
  <match src="visibility [66930,66937]" dest="visibility [66877,66884]"/>
  <match src="identifier: SUPPLY_CHANGE_DIVISOR [46846,46867]" dest="identifier: SUPPLY_CHANGE_DIVISOR [16100,16121]"/>
  <match src="{: { [7810,7811]" dest="{: { [7909,7910]"/>
  <match src="type_name [64409,64416]" dest="type_name [77243,77250]"/>
  <match src="parameter [45187,45194]" dest="parameter [14441,14448]"/>
  <match src="identifier: spender [49356,49363]" dest="identifier: spender [63367,63374]"/>
  <match src="event_paramater [51814,51836]" dest="event_paramater [60609,60627]"/>
  <match src="type_cast_expression [31311,31724]" dest="type_cast_expression [46983,47396]"/>
  <match src="constant: constant [91925,91933]" dest="constant: constant [29711,29719]"/>
  <match src="): ) [78596,78597]" dest="): ) [59285,59286]"/>
  <match src="(: ( [30128,30129]" dest="(: ( [45800,45801]"/>
  <match src=",: , [10785,10786]" dest=",: , [10884,10885]"/>
  <match src="member_expression [101325,101346]" dest="member_expression [39143,39164]"/>
  <match src="type_name [46938,46945]" dest="type_name [16192,16199]"/>
  <match src="primitive_type [88061,88068]" dest="primitive_type [28190,28197]"/>
  <match src="identifier: permit [53523,53529]" dest="identifier: permit [20517,20523]"/>
  <match src="(: ( [9619,9620]" dest="(: ( [9718,9719]"/>
  <match src="external: external [12751,12759]" dest="external: external [22427,22435]"/>
  <match src="(: ( [54731,54732]" dest="(: ( [21725,21726]"/>
  <match src=",: , [54010,54011]" dest=",: , [21004,21005]"/>
  <match src="identifier: candidate [104771,104780]" dest="identifier: candidate [42589,42598]"/>
  <match src="function: function [97558,97566]" dest="function: function [35344,35352]"/>
  <match src=".: . [7846,7847]" dest=".: . [7945,7946]"/>
  <match src="using_directive [74647,74674]" dest="using_directive [76974,77001]"/>
  <match src="parameter [53211,53215]" dest="parameter [20205,20209]"/>
  <match src="string_literal [80979,81014]" dest="string_literal [70576,70614]"/>
  <match src="function_definition [101770,102196]" dest="function_definition [39588,40014]"/>
  <match src="identifier: b [4096,4097]" dest="identifier: b [4150,4151]"/>
  <match src="primitive_type [4728,4735]" dest="primitive_type [4782,4789]"/>
  <match src="(: ( [8867,8868]" dest="(: ( [8966,8967]"/>
  <match src="function_definition [104648,104854]" dest="function_definition [42466,42672]"/>
  <match src="state_variable_declaration [43924,43975]" dest="state_variable_declaration [13178,13229]"/>
  <match src="user_defined_type [10445,10449]" dest="user_defined_type [10544,10548]"/>
  <match src="returns: returns [54432,54439]" dest="returns: returns [21426,21433]"/>
  <match src="variable_declaration [66564,66574]" dest="variable_declaration [66954,66964]"/>
  <match src="string_literal [81270,81308]" dest="string_literal [80139,80153]"/>
  <match src="call_argument [82503,82508]" dest="call_argument [71383,71404]"/>
  <match src="binary_expression [94282,94312]" dest="binary_expression [32068,32098]"/>
  <match src="(: ( [12733,12734]" dest="(: ( [22409,22410]"/>
  <match src="identifier: RPAREN [28649,28655]" dest="identifier: RPAREN [44321,44327]"/>
  <match src="call_argument [45358,45386]" dest="call_argument [14612,14640]"/>
  <match src="): ) [81971,81972]" dest="): ) [71126,71127]"/>
  <match src="(: ( [100474,100475]" dest="(: ( [38292,38293]"/>
  <match src="): ) [3271,3272]" dest="): ) [3325,3326]"/>
  <match src="): ) [54175,54176]" dest="): ) [21169,21170]"/>
  <match src="visibility [66332,66339]" dest="visibility [19112,19119]"/>
  <match src="call_expression [30729,31016]" dest="call_expression [46401,46688]"/>
  <match src="internal: internal [75163,75171]" dest="internal: internal [55040,55048]"/>
  <match src="call_argument [17691,17697]" dest="call_argument [59288,59294]"/>
  <match src="(: ( [84830,84831]" dest="(: ( [79289,79290]"/>
  <match src="): ) [97062,97063]" dest="): ) [34848,34849]"/>
  <match src=",: , [100768,100769]" dest=",: , [38586,38587]"/>
  <match src="event_paramater [80407,80427]" dest="event_paramater [77291,77305]"/>
  <match src="pragma_directive [0,24]" dest="pragma_directive [54,78]"/>
  <match src="type_name [74860,74867]" dest="type_name [55294,55301]"/>
  <match src="type_name [37988,37992]" dest="type_name [53660,53664]"/>
  <match src="): ) [99783,99784]" dest="): ) [37601,37602]"/>
  <match src="function: function [46075,46083]" dest="function: function [15329,15337]"/>
  <match src="function_definition [99760,99836]" dest="function_definition [37578,37654]"/>
  <match src="=: = [101630,101631]" dest="=: = [39448,39449]"/>
  <match src="variable_declaration [8539,8548]" dest="variable_declaration [8638,8647]"/>
  <match src="(: ( [21143,21144]" dest="(: ( [55923,55924]"/>
  <match src="parameter [29923,29939]" dest="parameter [45595,45611]"/>
  <match src=",: , [14826,14827]" dest=",: , [24502,24503]"/>
  <match src=".: . [45773,45774]" dest=".: . [15027,15028]"/>
  <match src="identifier: setImplementation [90802,90819]" dest="identifier: setImplementation [75874,75891]"/>
  <match src="visibility [43163,43170]" dest="visibility [12417,12424]"/>
  <match src="}: } [32544,32545]" dest="}: } [48216,48217]"/>
  <match src="primitive_type [62650,62654]" dest="primitive_type [26519,26523]"/>
  <match src="): ) [104525,104526]" dest="): ) [42343,42344]"/>
  <match src="identifier: amount0 [54689,54696]" dest="identifier: amount0 [21683,21690]"/>
  <match src="call_expression [67335,67403]" dest="call_expression [66968,66986]"/>
  <match src="visibility [11025,11032]" dest="visibility [11124,11131]"/>
  <match src="identifier: State [87936,87941]" dest="identifier: State [28065,28070]"/>
  <match src="state_mutability [72096,72100]" dest="state_mutability [66632,66636]"/>
  <match src=".: . [101617,101618]" dest=".: . [39435,39436]"/>
  <match src="identifier: spender [15082,15089]" dest="identifier: spender [24758,24765]"/>
  <match src="]: ] [101651,101652]" dest="]: ] [39469,39470]"/>
  <match src=",: , [102422,102423]" dest=",: , [40240,40241]"/>
  <match src="identifier: balanceOfPhantom [73351,73367]" dest="identifier: totalCoupons [61526,61538]"/>
  <match src="): ) [93223,93224]" dest="): ) [31009,31010]"/>
  <match src="pure: pure [7541,7545]" dest="pure: pure [7640,7644]"/>
  <match src="call_expression [104791,104846]" dest="call_expression [42609,42664]"/>
  <match src="parameter [50255,50259]" dest="parameter [25694,25698]"/>
  <match src="(: ( [99185,99186]" dest="(: ( [37003,37004]"/>
  <match src="return_type_definition [53357,53374]" dest="return_type_definition [20351,20368]"/>
  <match src="primitive_type [34030,34037]" dest="primitive_type [49702,49709]"/>
  <match src="assignment_expression [102259,102344]" dest="assignment_expression [40077,40162]"/>
  <match src="member_expression [102722,102774]" dest="member_expression [40540,40592]"/>
  <match src="call_argument [18422,18428]" dest="call_argument [17365,17371]"/>
  <match src="type_name [75125,75132]" dest="type_name [55024,55031]"/>
  <match src=",: , [53179,53180]" dest=",: , [20173,20174]"/>
  <match src="parameter [7478,7494]" dest="parameter [7577,7593]"/>
  <match src="(: ( [36209,36210]" dest="(: ( [51881,51882]"/>
  <match src=",: , [29301,29302]" dest=",: , [44973,44974]"/>
  <match src="): ) [30133,30134]" dest="): ) [45805,45806]"/>
  <match src="identifier: length [35541,35547]" dest="identifier: length [51213,51219]"/>
  <match src="user_defined_type [9534,9538]" dest="user_defined_type [9633,9637]"/>
  <match src="struct_member [87334,87370]" dest="struct_member [27463,27499]"/>
  <match src="identifier: add [101567,101570]" dest="identifier: add [39385,39388]"/>
  <match src=",: , [29860,29861]" dest=",: , [45532,45533]"/>
  <match src="): ) [30431,30432]" dest="): ) [46103,46104]"/>
  <match src="type_name [43410,43417]" dest="type_name [12664,12671]"/>
  <match src="parameter [92224,92237]" dest="parameter [30010,30023]"/>
  <match src="uint256: uint256 [81567,81574]" dest="uint256: uint256 [78141,78148]"/>
  <match src="address: address [31858,31865]" dest="address: address [47530,47537]"/>
  <match src="type_cast_expression [37267,37290]" dest="type_cast_expression [52939,52962]"/>
  <match src="memory: memory [9539,9545]" dest="memory: memory [9638,9644]"/>
  <match src="identifier: slot [97856,97860]" dest="identifier: slot [35642,35646]"/>
  <match src="identifier: experimental [33,45]" dest="identifier: experimental [87,99]"/>
  <match src="identifier: D256 [8383,8387]" dest="identifier: D256 [8482,8486]"/>
  <match src="}: } [87815,87816]" dest="}: } [27944,27945]"/>
  <match src="type_name [10329,10333]" dest="type_name [10428,10432]"/>
  <match src="address: address [52620,52627]" dest="address: address [19614,19621]"/>
  <match src="(: ( [82891,82892]" dest="(: ( [71642,71643]"/>
  <match src="identifier: epoch [102297,102302]" dest="identifier: epoch [40115,40120]"/>
  <match src="array_access [96808,96836]" dest="array_access [34594,34622]"/>
  <match src="(: ( [38095,38096]" dest="(: ( [53767,53768]"/>
  <match src="=: = [44278,44279]" dest="=: = [13532,13533]"/>
  <match src="identifier: b [3900,3901]" dest="identifier: b [3954,3955]"/>
  <match src="identifier: D256 [6780,6784]" dest="identifier: D256 [6879,6883]"/>
  <match src="[: [ [104011,104012]" dest="[: [ [41829,41830]"/>
  <match src="]: ] [101918,101919]" dest="]: ] [39736,39737]"/>
  <match src="primitive_type [52642,52649]" dest="primitive_type [19636,19643]"/>
  <match src="state_mutability [97734,97738]" dest="state_mutability [35520,35524]"/>
  <match src="}: } [104051,104052]" dest="}: } [41869,41870]"/>
  <match src="(: ( [45431,45432]" dest="(: ( [14685,14686]"/>
  <match src="identifier: to [53967,53969]" dest="identifier: to [20961,20963]"/>
  <match src="type_name [94765,94772]" dest="type_name [32551,32558]"/>
  <match src="primitive_type [80392,80399]" dest="primitive_type [69775,69782]"/>
  <match src="primitive_type [80188,80195]" dest="primitive_type [69703,69710]"/>
  <match src="pure: pure [10208,10212]" dest="pure: pure [10307,10311]"/>
  <match src="(: ( [29379,29380]" dest="(: ( [45051,45052]"/>
  <match src="): ) [3929,3930]" dest="): ) [3983,3984]"/>
  <match src="identifier: D256 [8496,8500]" dest="identifier: D256 [8595,8599]"/>
  <match src="uint256: uint256 [3219,3226]" dest="uint256: uint256 [3273,3280]"/>
  <match src="expression_statement [81778,81822]" dest="expression_statement [71548,71619]"/>
  <match src="identifier: incrementBalanceOfPhantom [83778,83803]" dest="identifier: burnFromAccount [62519,62534]"/>
  <match src="(: ( [95271,95272]" dest="(: ( [33057,33058]"/>
  <match src="identifier: value [10515,10520]" dest="identifier: value [10614,10619]"/>
  <match src="return_statement [8993,9041]" dest="return_statement [9092,9140]"/>
  <match src="block_statement [37485,37865]" dest="block_statement [53157,53537]"/>
  <match src="identifier: errorMessage [5441,5453]" dest="identifier: errorMessage [5495,5507]"/>
  <match src="=: = [42816,42817]" dest="=: = [12070,12071]"/>
  <match src=",: , [51470,51471]" dest=",: , [63965,63966]"/>
  <match src="number_literal: 36 [44038,44040]" dest="number_literal: 36 [13292,13294]"/>
  <match src="identifier: newLock [105084,105091]" dest="identifier: newLock [42902,42909]"/>
  <match src="uint256: uint256 [88608,88615]" dest="uint256: uint256 [28737,28744]"/>
  <match src="primitive_type [69816,69823]" dest="primitive_type [65034,65041]"/>
  <match src="call_expression [100736,100777]" dest="call_expression [38554,38595]"/>
  <match src="contract_declaration [105984,106833]" dest="contract_declaration [67913,68762]"/>
  <match src="identifier: value [80791,80796]" dest="identifier: value [70379,70384]"/>
  <match src="): ) [48377,48378]" dest="): ) [55103,55104]"/>
  <match src="}: } [31061,31062]" dest="}: } [46733,46734]"/>
  <match src="uint256: uint256 [33263,33270]" dest="uint256: uint256 [48935,48942]"/>
  <match src="primitive_type [54090,54094]" dest="primitive_type [21084,21088]"/>
  <match src="uint256: uint256 [88002,88009]" dest="uint256: uint256 [28131,28138]"/>
  <match src="visibility [75163,75171]" dest="visibility [55040,55048]"/>
  <match src="variable_declaration [78208,78226]" dest="variable_declaration [82416,82433]"/>
  <match src="type_name [81486,81493]" dest="type_name [79192,79199]"/>
  <match src="uint256: uint256 [95335,95342]" dest="uint256: uint256 [33121,33128]"/>
  <match src=",: , [101357,101358]" dest=",: , [39175,39176]"/>
  <match src="member_expression [100649,100681]" dest="member_expression [38467,38499]"/>
  <match src="member_expression [90874,90912]" dest="member_expression [75946,75984]"/>
  <match src="emit: emit [100453,100457]" dest="emit: emit [38271,38275]"/>
  <match src="): ) [95586,95587]" dest="): ) [33372,33373]"/>
  <match src=":=: := [86422,86424]" dest=":=: := [73729,73731]"/>
  <match src="}: } [51288,51289]" dest="}: } [54973,54974]"/>
  <match src="identifier: payloadA [33656,33664]" dest="identifier: payloadA [49328,49336]"/>
  <match src="type_name [46375,46382]" dest="type_name [15629,15636]"/>
  <match src="string [83250,83279]" dest="string [79973,79988]"/>
  <match src="?: ? [81643,81644]" dest="?: ? [70825,70826]"/>
  <match src=",: , [29687,29688]" dest=",: , [45359,45360]"/>
  <match src="parameter [7792,7803]" dest="parameter [7891,7902]"/>
  <match src="): ) [92684,92685]" dest="): ) [30470,30471]"/>
  <match src="return_statement [97213,97256]" dest="return_statement [34999,35042]"/>
  <match src="comment: // See https://ethereum.stackexchange.com/a/14016/36603 [86112,86167]" dest="comment: // See https://ethereum.stackexchange.com/a/14016/36603 [73419,73474]"/>
  <match src="call_expression [94547,94554]" dest="call_expression [32333,32340]"/>
  <match src="(: ( [102391,102392]" dest="(: ( [40209,40210]"/>
  <match src="visibility [21177,21185]" dest="visibility [55940,55948]"/>
  <match src=".: . [104022,104023]" dest=".: . [41840,41841]"/>
  <match src="expression_statement [84818,84908]" dest="expression_statement [79277,79380]"/>
  <match src="inheritance_specifier [50071,50077]" dest="inheritance_specifier [25510,25516]"/>
  <match src="{: { [93441,93442]" dest="{: { [31227,31228]"/>
  <match src="=: = [28656,28657]" dest="=: = [44328,44329]"/>
  <match src=".: . [95756,95757]" dest=".: . [33542,33543]"/>
  <match src="type_name [53951,53958]" dest="type_name [20945,20952]"/>
  <match src="type_name [64511,64518]" dest="type_name [65271,65278]"/>
  <match src="return_type_definition [92668,92685]" dest="return_type_definition [30454,30471]"/>
  <match src="): ) [32947,32948]" dest="): ) [48619,48620]"/>
  <match src="identifier: b [5351,5352]" dest="identifier: b [5405,5406]"/>
  <match src="type_name [16641,16648]" dest="type_name [17285,17292]"/>
  <match src="memory: memory [37012,37018]" dest="memory: memory [52684,52690]"/>
  <match src="struct_member [88517,88535]" dest="struct_member [28646,28664]"/>
  <match src="visibility [12751,12759]" dest="visibility [22427,22435]"/>
  <match src="return_statement [46395,46420]" dest="return_statement [15649,15674]"/>
  <match src="type_name [97773,97780]" dest="type_name [35559,35566]"/>
  <match src="state_mutability [6638,6642]" dest="state_mutability [6737,6741]"/>
  <match src="=: = [36674,36675]" dest="=: = [52346,52347]"/>
  <match src="parameter [45065,45072]" dest="parameter [14319,14326]"/>
  <match src="indexed: indexed [80286,80293]" dest="indexed: indexed [69842,69849]"/>
  <match src="function_body [105244,105310]" dest="function_body [43062,43128]"/>
  <match src="primitive_type [8137,8144]" dest="primitive_type [8236,8243]"/>
  <match src="string_literal [83250,83279]" dest="string_literal [79973,79988]"/>
  <match src="): ) [103339,103340]" dest="): ) [41157,41158]"/>
  <match src="uint256: uint256 [98793,98800]" dest="uint256: uint256 [36611,36618]"/>
  <match src="(: ( [10485,10486]" dest="(: ( [10584,10585]"/>
  <match src="number_literal: 0 [103467,103468]" dest="number_literal: 0 [41285,41286]"/>
  <match src="): ) [104845,104846]" dest="): ) [42663,42664]"/>
  <match src="unary_expression [32720,32725]" dest="unary_expression [48392,48397]"/>
  <match src="variable_declaration [91008,91020]" dest="variable_declaration [76080,76092]"/>
  <match src="call_argument [38196,38223]" dest="call_argument [53868,53895]"/>
  <match src="comment: /**      * Governance      */ [96512,96543]" dest="comment: /**      * Governance      */ [34298,34329]"/>
  <match src="identifier: epoch [101646,101651]" dest="identifier: epoch [39464,39469]"/>
  <match src="assignment_expression [37701,37711]" dest="assignment_expression [53373,53383]"/>
  <match src="identifier: dollarAmount [78330,78342]" dest="identifier: dollarAmount [62494,62506]"/>
  <match src="uint256: uint256 [80550,80557]" dest="uint256: uint256 [70166,70173]"/>
  <match src="identifier: currentLock [104945,104956]" dest="identifier: currentLock [42763,42774]"/>
  <match src="state_mutability [52833,52837]" dest="state_mutability [19827,19831]"/>
  <match src="): ) [96924,96925]" dest="): ) [34710,34711]"/>
  <match src="return_type_definition [52966,52980]" dest="return_type_definition [19960,19974]"/>
  <match src="state_mutability [96284,96288]" dest="state_mutability [34070,34074]"/>
  <match src="=: = [103536,103537]" dest="=: = [41354,41355]"/>
  <match src="uint256: uint256 [66980,66987]" dest="uint256: uint256 [66391,66398]"/>
  <match src="call_argument [100694,100700]" dest="call_argument [38512,38518]"/>
  <match src="function_definition [54038,54096]" dest="function_definition [21032,21090]"/>
  <match src="identifier: reason [31485,31491]" dest="identifier: reason [47157,47163]"/>
  <match src="identifier: value [81206,81211]" dest="identifier: value [70515,70520]"/>
  <match src="internal: internal [9587,9595]" dest="internal: internal [9686,9694]"/>
  <match src="identifier: reserve0 [54325,54333]" dest="identifier: reserve0 [21319,21327]"/>
  <match src="&gt;&gt;: &gt;&gt; [36862,36864]" dest="&gt;&gt;: &gt;&gt; [52534,52536]"/>
  <match src=".: . [100389,100390]" dest=".: . [38207,38208]"/>
  <match src="): ) [100439,100440]" dest="): ) [38257,38258]"/>
  <match src=",: , [26854,26855]" dest=",: , [78423,78424]"/>
  <match src="): ) [45813,45814]" dest="): ) [15067,15068]"/>
  <match src="contract_declaration [87158,87494]" dest="contract_declaration [27287,27623]"/>
  <match src="call_argument [9237,9279]" dest="call_argument [9336,9378]"/>
  <match src="]: ] [104818,104819]" dest="]: ] [42636,42637]"/>
  <match src=",: , [22588,22589]" dest=",: , [63205,63206]"/>
  <match src="state_mutability [45878,45882]" dest="state_mutability [15132,15136]"/>
  <match src="external: external [52698,52706]" dest="external: external [19692,19700]"/>
  <match src="function_definition [54102,54153]" dest="function_definition [21096,21147]"/>
  <match src="): ) [82508,82509]" dest="): ) [71404,71405]"/>
  <match src="type_name [96877,96884]" dest="type_name [34663,34670]"/>
  <match src="returns: returns [44592,44599]" dest="returns: returns [13846,13853]"/>
  <match src="identifier: setup [62573,62578]" dest="identifier: setup [26442,26447]"/>
  <match src="pure: pure [45713,45717]" dest="pure: pure [14967,14971]"/>
  <match src="address: address [92382,92389]" dest="address: address [30168,30175]"/>
  <match src="primitive_type [43155,43162]" dest="primitive_type [12409,12416]"/>
  <match src="(: ( [97366,97367]" dest="(: ( [35152,35153]"/>
  <match src="call_expression [90473,90544]" dest="call_expression [75545,75616]"/>
  <match src="visibility [64286,64293]" dest="visibility [65279,65286]"/>
  <match src="function_body [99211,99287]" dest="function_body [37029,37105]"/>
  <match src="returns: returns [96147,96154]" dest="returns: returns [33933,33940]"/>
  <match src="{: { [97486,97487]" dest="{: { [35272,35273]"/>
  <match src="type_name [73324,73331]" dest="type_name [61503,61510]"/>
  <match src="identifier: MinterAdded [26584,26595]" dest="identifier: CouponRedemption [60473,60489]"/>
  <match src="call_argument [75051,75057]" dest="call_argument [55803,55809]"/>
  <match src="visibility [97459,97465]" dest="visibility [35245,35251]"/>
  <match src="primitive_type [28589,28595]" dest="primitive_type [44261,44267]"/>
  <match src="address: address [64278,64285]" dest="address: address [77110,77117]"/>
  <match src="): ) [38115,38116]" dest="): ) [53787,53788]"/>
  <match src="state_mutability [94463,94467]" dest="state_mutability [32249,32253]"/>
  <match src=".: . [64217,64218]" dest=".: . [64999,65000]"/>
  <match src="type_name [80318,80325]" dest="type_name [69874,69881]"/>
  <match src="primitive_type [43643,43650]" dest="primitive_type [12897,12904]"/>
  <match src="user_defined_type [7560,7564]" dest="user_defined_type [7659,7663]"/>
  <match src="=: = [81586,81587]" dest="=: = [70804,70805]"/>
  <match src="identifier: sender [82136,82142]" dest="identifier: sender [71805,71811]"/>
  <match src="identifier: couponAllowances [102745,102761]" dest="identifier: couponAllowances [40563,40579]"/>
  <match src="identifier: IMPLEMENTATION_SLOT [89847,89866]" dest="identifier: IMPLEMENTATION_SLOT [74919,74938]"/>
  <match src="indexed: indexed [15051,15058]" dest="indexed: indexed [24727,24734]"/>
  <match src="call_argument [83680,83688]" dest="call_argument [71853,71866]"/>
  <match src="{: { [93331,93332]" dest="{: { [31117,31118]"/>
  <match src="): ) [84298,84299]" dest="): ) [58312,58313]"/>
  <match src="return_statement [45338,45388]" dest="return_statement [14592,14642]"/>
  <match src="primitive_type [38090,38095]" dest="primitive_type [53762,53767]"/>
  <match src="string [51644,51687]" dest="string [64064,64102]"/>
  <match src="primitive_type [29244,29248]" dest="primitive_type [44916,44920]"/>
  <match src="(: ( [7791,7792]" dest="(: ( [7890,7891]"/>
  <match src="returns: returns [53130,53137]" dest="returns: returns [20124,20131]"/>
  <match src="identifier: mod [4755,4758]" dest="identifier: mod [4809,4812]"/>
  <match src="): ) [83289,83290]" dest="): ) [79998,79999]"/>
  <match src="expression_statement [21197,21263]" dest="expression_statement [55960,56019]"/>
  <match src="}: } [46568,46569]" dest="}: } [15822,15823]"/>
  <match src="=: = [103873,103874]" dest="=: = [41691,41692]"/>
  <match src="function: function [92279,92287]" dest="function: function [30065,30073]"/>
  <match src="return_type_definition [96772,96789]" dest="return_type_definition [34558,34575]"/>
  <match src="}: } [72055,72056]" dest="}: } [62051,62052]"/>
  <match src="parameter [53530,53543]" dest="parameter [20524,20537]"/>
  <match src="array_access [37255,37264]" dest="array_access [52927,52936]"/>
  <match src="call_argument [82300,82329]" dest="call_argument [80341,80367]"/>
  <match src="call_argument [102181,102187]" dest="call_argument [39999,40005]"/>
  <match src="returns: returns [93099,93106]" dest="returns: returns [30885,30892]"/>
  <match src="string_literal [84736,84745]" dest="string_literal [79153,79168]"/>
  <match src="internal: internal [95556,95564]" dest="internal: internal [33342,33350]"/>
  <match src=",: , [101432,101433]" dest=",: , [39250,39251]"/>
  <match src="function_definition [45830,45953]" dest="function_definition [15084,15207]"/>
  <match src="=: = [80071,80072]" dest="=: = [69583,69584]"/>
  <match src="type_name [75108,75115]" dest="type_name [55007,55014]"/>
  <match src="call_expression [9000,9040]" dest="call_expression [9099,9139]"/>
  <match src="type_name [43464,43471]" dest="type_name [12718,12725]"/>
  <match src=",: , [99639,99640]" dest=",: , [37457,37458]"/>
  <match src="uint256: uint256 [48208,48215]" dest="uint256: uint256 [56085,56092]"/>
  <match src="identifier: _state [104392,104398]" dest="identifier: _state [42210,42216]"/>
  <match src="(: ( [8191,8192]" dest="(: ( [8290,8291]"/>
  <match src=".: . [81184,81185]" dest=".: . [70493,70494]"/>
  <match src="(: ( [30790,30791]" dest="(: ( [46462,46463]"/>
  <match src="inheritance_specifier [107811,107821]" dest="inheritance_specifier [69500,69510]"/>
  <match src="state_mutability [8744,8748]" dest="state_mutability [8843,8847]"/>
  <match src="parameter [54618,54632]" dest="parameter [21612,21626]"/>
  <match src="if_statement [94035,94092]" dest="if_statement [31821,31878]"/>
  <match src="returns: returns [94249,94256]" dest="returns: returns [32035,32042]"/>
  <match src="state_mutability [96415,96419]" dest="state_mutability [34201,34205]"/>
  <match src="}: } [29204,29205]" dest="}: } [44876,44877]"/>
  <match src="state_mutability [45713,45717]" dest="state_mutability [14967,14971]"/>
  <match src="yul_path [97856,97860]" dest="yul_path [35642,35646]"/>
  <match src=",: , [96122,96123]" dest=",: , [33908,33909]"/>
  <match src="{: { [29387,29388]" dest="{: { [45059,45060]"/>
  <match src="function: function [10284,10292]" dest="function: function [10383,10391]"/>
  <match src="): ) [92089,92090]" dest="): ) [29875,29876]"/>
  <match src="function_body [103983,104052]" dest="function_body [41801,41870]"/>
  <match src=".: . [81072,81073]" dest=".: . [70645,70646]"/>
  <match src="identifier: transfer [81185,81193]" dest="identifier: transfer [70494,70502]"/>
  <match src=".: . [104211,104212]" dest=".: . [42029,42030]"/>
  <match src="(: ( [98826,98827]" dest="(: ( [36644,36645]"/>
  <match src="(: ( [92875,92876]" dest="(: ( [30661,30662]"/>
  <match src="member_expression [48987,48999]" dest="member_expression [62145,62157]"/>
  <match src=".: . [99569,99570]" dest=".: . [37387,37388]"/>
  <match src="): ) [15104,15105]" dest="): ) [24780,24781]"/>
  <match src="assignment_expression [36714,36724]" dest="assignment_expression [52386,52396]"/>
  <match src=".: . [96037,96038]" dest=".: . [33823,33824]"/>
  <match src="internal: internal [31941,31949]" dest="internal: internal [47613,47621]"/>
  <match src="type_name [51852,51856]" dest="type_name [60629,60636]"/>
  <match src="(: ( [10444,10445]" dest="(: ( [10543,10544]"/>
  <match src="): ) [104122,104123]" dest="): ) [41940,41941]"/>
  <match src="[: [ [36320,36321]" dest="[: [ [51992,51993]"/>
  <match src="user_defined_type [16312,16319]" dest="user_defined_type [60101,60112]"/>
  <match src="function: function [101096,101104]" dest="function: function [38914,38922]"/>
  <match src="}: } [105312,105313]" dest="}: } [43130,43131]"/>
  <match src="parameter [29828,29837]" dest="parameter [45500,45509]"/>
  <match src="): ) [93658,93659]" dest="): ) [31444,31445]"/>
  <match src="parameter [98940,98944]" dest="parameter [36758,36762]"/>
  <match src="identifier: reserve1 [54020,54028]" dest="identifier: reserve1 [21014,21022]"/>
  <match src="): ) [83940,83941]" dest="): ) [79809,79810]"/>
  <match src="function_definition [45250,45395]" dest="function_definition [14504,14649]"/>
  <match src="revert_statement [31286,31740]" dest="revert_statement [46958,47412]"/>
  <match src="memory: memory [62642,62648]" dest="memory: memory [26511,26517]"/>
  <match src="{: { [88142,88143]" dest="{: { [28271,28272]"/>
  <match src="uint256: uint256 [16354,16361]" dest="uint256: uint256 [60146,60153]"/>
  <match src="identifier: owner [15059,15064]" dest="identifier: owner [24735,24740]"/>
  <match src="assignment_expression [101895,101996]" dest="assignment_expression [39713,39814]"/>
  <match src="variable_declaration [2625,2634]" dest="variable_declaration [2679,2688]"/>
  <match src=",: , [80472,80473]" dest=",: , [77135,77136]"/>
  <match src="): ) [20839,20840]" dest="): ) [64179,64180]"/>
  <match src="primitive_type [66564,66568]" dest="primitive_type [66954,66958]"/>
  <match src="primitive_type [33236,33243]" dest="primitive_type [48908,48915]"/>
  <match src="uint256: uint256 [76510,76517]" dest="uint256: uint256 [58884,58891]"/>
  <match src="identifier: account [26612,26619]" dest="identifier: account [60506,60513]"/>
  <match src="return: return [44726,44732]" dest="return: return [13980,13986]"/>
  <match src="function_body [5414,5485]" dest="function_body [5468,5539]"/>
  <match src="visibility [43651,43658]" dest="visibility [12905,12912]"/>
  <match src="memory: memory [101860,101866]" dest="memory: memory [39678,39684]"/>
  <match src="identifier: _state [102886,102892]" dest="identifier: _state [40704,40710]"/>
  <match src="function_definition [97419,97550]" dest="function_definition [35205,35336]"/>
  <match src="primitive_type [53717,53724]" dest="primitive_type [20711,20718]"/>
  <match src="call_expression [99550,99581]" dest="call_expression [37368,37399]"/>
  <match src="(: ( [35948,35949]" dest="(: ( [51620,51621]"/>
  <match src="identifier: to [54662,54664]" dest="identifier: to [21656,21658]"/>
  <match src=",: , [30376,30377]" dest=",: , [46048,46049]"/>
  <match src="function_body [82112,82948]" dest="function_body [71279,71693]"/>
  <match src=",: , [33533,33534]" dest=",: , [49205,49206]"/>
  <match src="): ) [36352,36353]" dest="): ) [52024,52025]"/>
  <match src="member_expression [99550,99569]" dest="member_expression [37368,37387]"/>
  <match src="call_argument [101005,101011]" dest="call_argument [38823,38829]"/>
  <match src="]: ] [104210,104211]" dest="]: ] [42028,42029]"/>
  <match src="uint256: uint256 [87710,87717]" dest="uint256: uint256 [27839,27846]"/>
  <match src="parameter [103101,103114]" dest="parameter [40919,40932]"/>
  <match src="returns: returns [53422,53429]" dest="returns: returns [20416,20423]"/>
  <match src="function_definition [93280,93376]" dest="function_definition [31066,31162]"/>
  <match src="uint256: uint256 [82088,82095]" dest="uint256: uint256 [71727,71734]"/>
  <match src="event_paramater [26596,26619]" dest="event_paramater [60490,60513]"/>
  <match src="member_expression [102007,102020]" dest="member_expression [39825,39838]"/>
  <match src="return: return [92697,92703]" dest="return: return [30483,30489]"/>
  <match src="identifier: candidate [104284,104293]" dest="identifier: candidate [42102,42111]"/>
  <match src="visibility [97172,97178]" dest="visibility [34958,34964]"/>
  <match src=",: , [67004,67005]" dest=",: , [66412,66413]"/>
  <match src="call_argument [82927,82939]" dest="call_argument [71678,71684]"/>
  <match src="function_definition [92964,93056]" dest="function_definition [30750,30842]"/>
  <match src="constant: constant [106040,106048]" dest="constant: constant [67969,67977]"/>
  <match src="(: ( [8041,8042]" dest="(: ( [8140,8141]"/>
  <match src="identifier: Sync [53989,53993]" dest="identifier: Sync [20983,20987]"/>
  <match src="solidity_version: 0.5.17 [17,23]" dest="solidity_version: 0.5.17 [71,77]"/>
  <match src=",: , [51642,51643]" dest=",: , [64042,64043]"/>
  <match src="{: { [11106,11107]" dest="{: { [11205,11206]"/>
  <match src="primitive_type [12618,12625]" dest="primitive_type [22294,22301]"/>
  <match src="identifier: msg [81194,81197]" dest="identifier: msg [70503,70506]"/>
  <match src=",: , [8596,8597]" dest=",: , [8695,8696]"/>
  <match src="): ) [46868,46869]" dest="): ) [16122,16123]"/>
  <match src="call_argument [6973,6995]" dest="call_argument [7072,7094]"/>
  <match src="call_argument [94127,94145]" dest="call_argument [31913,31931]"/>
  <match src="(: ( [83315,83316]" dest="(: ( [77503,77504]"/>
  <match src="parameter [45457,45464]" dest="parameter [14711,14718]"/>
  <match src="member_expression [102886,102906]" dest="member_expression [40704,40724]"/>
  <match src="function_body [100282,100503]" dest="function_body [38100,38321]"/>
  <match src="identifier: account [101813,101820]" dest="identifier: account [39631,39638]"/>
  <match src="(: ( [97381,97382]" dest="(: ( [35167,35168]"/>
  <match src=".: . [82397,82398]" dest=".: . [78171,78172]"/>
  <match src="memory: memory [10565,10571]" dest="memory: memory [10664,10670]"/>
  <match src="]: ] [96222,96223]" dest="]: ] [34008,34009]"/>
  <match src="primitive_type [66980,66987]" dest="primitive_type [66391,66398]"/>
  <match src="(: ( [99491,99492]" dest="(: ( [37309,37310]"/>
  <match src="): ) [7072,7073]" dest="): ) [7171,7172]"/>
  <match src="member_expression [9699,9706]" dest="member_expression [9798,9805]"/>
  <match src="): ) [23933,23934]" dest="): ) [55380,55381]"/>
  <match src="): ) [90930,90931]" dest="): ) [76002,76003]"/>
  <match src="return: return [2722,2728]" dest="return: return [2776,2782]"/>
  <match src="any_pragma_token [33,58]" dest="any_pragma_token [87,112]"/>
  <match src="type_name [14806,14813]" dest="type_name [24482,24489]"/>
  <match src="): ) [53618,53619]" dest="): ) [20612,20613]"/>
  <match src="internal: internal [5382,5390]" dest="internal: internal [5436,5444]"/>
  <match src="parameter [54256,54263]" dest="parameter [21250,21257]"/>
  <match src="function: function [90793,90801]" dest="function: function [75865,75873]"/>
  <match src="parameter [101434,101447]" dest="parameter [39252,39265]"/>
  <match src="identifier: FILE [49174,49178]" dest="identifier: FILE [70021,70025]"/>
  <match src="(: ( [81599,81600]" dest="(: ( [70817,70818]"/>
  <match src="(: ( [8762,8763]" dest="(: ( [8861,8862]"/>
  <match src="): ) [104331,104332]" dest="): ) [42149,42150]"/>
  <match src="identifier: reason [101867,101873]" dest="identifier: reason [39685,39691]"/>
  <match src="}: } [95628,95629]" dest="}: } [33414,33415]"/>
  <match src="primitive_type [6521,6528]" dest="primitive_type [6620,6627]"/>
  <match src="update_expression [35705,35708]" dest="update_expression [51377,51380]"/>
  <match src="(: ( [93321,93322]" dest="(: ( [31107,31108]"/>
  <match src="primitive_type [93545,93552]" dest="primitive_type [31331,31338]"/>
  <match src="primitive_type [33263,33270]" dest="primitive_type [48935,48942]"/>
  <match src="pure: pure [52833,52837]" dest="pure: pure [19827,19831]"/>
  <match src="if_statement [28904,29205]" dest="if_statement [44576,44877]"/>
  <match src="): ) [108261,108262]" dest="): ) [55580,55581]"/>
  <match src="identifier: accounts [93866,93874]" dest="identifier: accounts [31652,31660]"/>
  <match src="parameter [98889,98904]" dest="parameter [36707,36722]"/>
  <match src=".: . [102265,102266]" dest=".: . [40083,40084]"/>
  <match src="number_literal: 36 [43688,43690]" dest="number_literal: 36 [12942,12944]"/>
  <match src="address: address [48365,48372]" dest="address: address [55091,55098]"/>
  <match src="parameter [1859,1885]" dest="parameter [1913,1939]"/>
  <match src="primitive_type [1970,1977]" dest="primitive_type [2024,2031]"/>
  <match src="parameter [76211,76225]" dest="parameter [61913,61927]"/>
  <match src="identifier: allowance [52996,53005]" dest="identifier: allowance [19990,19999]"/>
  <match src="): ) [95967,95968]" dest="): ) [33753,33754]"/>
  <match src="binary_expression [2570,2576]" dest="binary_expression [2624,2630]"/>
  <match src=".: . [9470,9471]" dest=".: . [9569,9570]"/>
  <match src="identifier: sub [103561,103564]" dest="identifier: sub [41379,41382]"/>
  <match src="user_defined_type [107811,107821]" dest="user_defined_type [69500,69510]"/>
  <match src="(: ( [36336,36337]" dest="(: ( [52008,52009]"/>
  <match src="visibility [103136,103144]" dest="visibility [40954,40962]"/>
  <match src="assignment_expression [104753,104846]" dest="assignment_expression [42571,42664]"/>
  <match src="identifier: getBootstrappingPeriod [96472,96494]" dest="identifier: getBootstrappingPeriod [34258,34280]"/>
  <match src="(: ( [73010,73011]" dest="(: ( [58293,58294]"/>
  <match src="function: function [10541,10549]" dest="function: function [10640,10648]"/>
  <match src="&quot;: &quot; [26115,26116]" dest="&quot;: &quot; [78583,78584]"/>
  <match src="): ) [31034,31035]" dest="): ) [46706,46707]"/>
  <match src="variable_declaration [37547,37560]" dest="variable_declaration [53219,53232]"/>
  <match src=".: . [101229,101230]" dest=".: . [39047,39048]"/>
  <match src="event: event [80209,80214]" dest="event: event [77313,77318]"/>
  <match src="call_argument [80866,80876]" dest="call_argument [71267,71277]"/>
  <match src="block_statement [35275,35332]" dest="block_statement [50947,51004]"/>
  <match src="identifier: amount [101981,101987]" dest="identifier: amount [39799,39805]"/>
  <match src=",: , [7494,7495]" dest=",: , [7593,7594]"/>
  <match src="member_expression [103003,103032]" dest="member_expression [40821,40850]"/>
  <match src="primitive_type [83458,83465]" dest="primitive_type [61317,61324]"/>
  <match src="identifier: amount [98914,98920]" dest="identifier: amount [36732,36738]"/>
  <match src="call_expression [103035,103048]" dest="call_expression [40853,40866]"/>
  <match src="comment: // ': ' [28531,28538]" dest="comment: // ': ' [44203,44210]"/>
  <match src="(: ( [82915,82916]" dest="(: ( [71666,71667]"/>
  <match src="identifier: balance [93466,93473]" dest="identifier: balance [31252,31259]"/>
  <match src="type_name [53589,53594]" dest="type_name [20583,20588]"/>
  <match src="[: [ [94656,94657]" dest="[: [ [32442,32443]"/>
  <match src="): ) [34968,34969]" dest="): ) [50640,50641]"/>
  <match src="type_name [52721,52727]" dest="type_name [19715,19721]"/>
  <match src="identifier: State [88719,88724]" dest="identifier: State [28848,28853]"/>
  <match src="return_statement [38078,38117]" dest="return_statement [53750,53789]"/>
  <match src="identifier: sender [80783,80789]" dest="identifier: sender [70371,70377]"/>
  <match src="identifier: account [92463,92470]" dest="identifier: account [30249,30256]"/>
  <match src="): ) [4791,4792]" dest="): ) [4845,4846]"/>
  <match src="(: ( [81182,81183]" dest="(: ( [70491,70492]"/>
  <match src="return_type_definition [93207,93224]" dest="return_type_definition [30993,31010]"/>
  <match src="identifier: value [46839,46844]" dest="identifier: value [16093,16098]"/>
  <match src="external: external [54233,54241]" dest="external: external [21227,21235]"/>
  <match src=".: . [88573,88574]" dest=".: . [28702,28703]"/>
  <match src="type_name [54317,54324]" dest="type_name [21311,21318]"/>
  <match src="(: ( [9797,9798]" dest="(: ( [9896,9897]"/>
  <match src="): ) [1917,1918]" dest="): ) [1971,1972]"/>
  <match src="type_name [9880,9884]" dest="type_name [9979,9983]"/>
  <match src="parameter [102583,102598]" dest="parameter [40401,40416]"/>
  <match src="contract_body [87513,87819]" dest="contract_body [27642,27948]"/>
  <match src="]: ] [94892,94893]" dest="]: ] [32678,32679]"/>
  <match src="internal: internal [44683,44691]" dest="internal: internal [13937,13945]"/>
  <match src="call_expression [81223,81309]" dest="call_expression [71416,71460]"/>
  <match src="function_body [102647,102798]" dest="function_body [40465,40616]"/>
  <match src="function_definition [92279,92355]" dest="function_definition [30065,30141]"/>
  <match src="return_statement [97349,97404]" dest="return_statement [35135,35190]"/>
  <match src="binary_expression [5472,5477]" dest="binary_expression [5526,5531]"/>
  <match src="identifier: isContract [90902,90912]" dest="identifier: isContract [75974,75984]"/>
  <match src="function: function [104648,104656]" dest="function: function [42466,42474]"/>
  <match src="type_name [54917,54924]" dest="type_name [21911,21918]"/>
  <match src="(: ( [100028,100029]" dest="(: ( [37846,37847]"/>
  <match src="identifier: _state [93135,93141]" dest="identifier: _state [30921,30927]"/>
  <match src="[: [ [96961,96962]" dest="[: [ [34747,34748]"/>
  <match src="number_literal: 1 [102934,102935]" dest="number_literal: 1 [40752,40753]"/>
  <match src=".: . [95894,95895]" dest=".: . [33680,33681]"/>
  <match src="(: ( [62610,62611]" dest="(: ( [26479,26480]"/>
  <match src="identifier: SafeMath [648,656]" dest="identifier: SafeMath [702,710]"/>
  <match src="identifier: pair [62671,62675]" dest="identifier: pair [26540,26544]"/>
  <match src="member_expression [82686,82696]" dest="member_expression [78918,78928]"/>
  <match src="primitive_type [93001,93008]" dest="primitive_type [30787,30794]"/>
  <match src="(: ( [78036,78037]" dest="(: ( [56121,56122]"/>
  <match src=",: , [8317,8318]" dest=",: , [8416,8417]"/>
  <match src="primitive_type [85873,85880]" dest="primitive_type [73180,73187]"/>
  <match src="function_definition [103289,103655]" dest="function_definition [41107,41473]"/>
  <match src="identifier: _state [104144,104150]" dest="identifier: _state [41962,41968]"/>
  <match src="&quot;: &quot; [90933,90934]" dest="&quot;: &quot; [76005,76006]"/>
  <match src="primitive_type [10743,10750]" dest="primitive_type [10842,10849]"/>
  <match src="address: address [20396,20403]" dest="address: address [63485,63492]"/>
  <match src="identifier: isContract [85862,85872]" dest="identifier: isContract [73169,73179]"/>
  <match src="}: } [9708,9709]" dest="}: } [9807,9808]"/>
  <match src="[: [ [36803,36804]" dest="[: [ [52475,52476]"/>
  <match src="member_expression [99683,99697]" dest="member_expression [37501,37515]"/>
  <match src="call_struct_argument [8044,8068]" dest="call_struct_argument [8143,8167]"/>
  <match src="identifier: totalSupply [12581,12592]" dest="identifier: totalSupply [22257,22268]"/>
  <match src="): ) [72006,72007]" dest="): ) [61957,61958]"/>
  <match src="): ) [7571,7572]" dest="): ) [7670,7671]"/>
  <match src="(: ( [46937,46938]" dest="(: ( [16191,16192]"/>
  <match src="internal: internal [85890,85898]" dest="internal: internal [73197,73205]"/>
  <match src="identifier: amount [75667,75673]" dest="identifier: amount [55545,55551]"/>
  <match src="type_name [97015,97022]" dest="type_name [34801,34808]"/>
  <match src="member_expression [82220,82232]" dest="member_expression [80177,80189]"/>
  <match src=",: , [82925,82926]" dest=",: , [71676,71677]"/>
  <match src="array_access [102050,102070]" dest="array_access [39868,39888]"/>
  <match src="}: } [46188,46189]" dest="}: } [15442,15443]"/>
  <match src="}: } [7003,7004]" dest="}: } [7102,7103]"/>
  <match src="identifier: outstanding [102079,102090]" dest="identifier: outstanding [39897,39908]"/>
  <match src="{: { [6675,6676]" dest="{: { [6774,6775]"/>
  <match src="function_definition [66907,67526]" dest="function_definition [66150,66574]"/>
  <match src="primitive_type [91856,91863]" dest="primitive_type [29642,29649]"/>
  <match src="for_statement [36465,36878]" dest="for_statement [52137,52550]"/>
  <match src="identifier: add [8663,8666]" dest="identifier: add [8762,8765]"/>
  <match src="public: public [95826,95832]" dest="public: public [33612,33618]"/>
  <match src="internal: internal [44799,44807]" dest="internal: internal [14053,14061]"/>
  <match src="}: } [88702,88703]" dest="}: } [28831,28832]"/>
  <match src="function_body [9214,9288]" dest="function_body [9313,9387]"/>
  <match src="function_body [10610,10656]" dest="function_body [10709,10755]"/>
  <match src="comment: /**      * Account      */ [100176,100204]" dest="comment: /**      * Account      */ [37994,38022]"/>
  <match src="): ) [99580,99581]" dest="): ) [37398,37399]"/>
  <match src="visibility [102638,102646]" dest="visibility [40456,40464]"/>
  <match src="identifier: period [103754,103760]" dest="identifier: period [41572,41578]"/>
  <match src="=: = [43812,43813]" dest="=: = [13066,13067]"/>
  <match src=".: . [94647,94648]" dest=".: . [32433,32434]"/>
  <match src="comment: /*     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [70438,71091]" dest="comment: /*     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [64235,64888]"/>
  <match src="parameter [8878,8894]" dest="parameter [8977,8993]"/>
  <match src="identifier: incrementBalanceOf [100221,100239]" dest="identifier: incrementBalanceOf [38039,38057]"/>
  <match src="identifier: Approval [52530,52538]" dest="identifier: Approval [19524,19532]"/>
  <match src="memory: memory [9566,9572]" dest="memory: memory [9665,9671]"/>
  <match src="(: ( [53405,53406]" dest="(: ( [20399,20400]"/>
  <match src="function_definition [81394,82064]" dest="function_definition [70676,71201]"/>
  <match src="internal: internal [104733,104741]" dest="internal: internal [42551,42559]"/>
  <match src="string [82300,82329]" dest="string [80341,80367]"/>
  <match src="function_definition [98872,98977]" dest="function_definition [36690,36795]"/>
  <match src="type_name [16503,16510]" dest="type_name [81862,81869]"/>
  <match src="memory: memory [66400,66406]" dest="memory: memory [65356,65362]"/>
  <match src="internal: internal [67839,67847]" dest="internal: internal [57867,57875]"/>
  <match src=",: , [100811,100812]" dest=",: , [38629,38630]"/>
  <match src="identifier: outstanding [102036,102047]" dest="identifier: outstanding [39854,39865]"/>
  <match src="identifier: spender [102500,102507]" dest="identifier: spender [40318,40325]"/>
  <match src="view: view [94244,94248]" dest="view: view [32030,32034]"/>
  <match src=",: , [80186,80187]" dest=",: , [69701,69702]"/>
  <match src="): ) [29135,29136]" dest="): ) [44807,44808]"/>
  <match src="): ) [37018,37019]" dest="): ) [52690,52691]"/>
  <match src="}: } [7437,7438]" dest="}: } [7536,7537]"/>
  <match src="identifier: div [3877,3880]" dest="identifier: div [3931,3934]"/>
  <match src="member_expression [45345,45357]" dest="member_expression [14599,14611]"/>
  <match src="visibility [75427,75435]" dest="visibility [55764,55772]"/>
  <match src="call_argument [106683,106699]" dest="call_argument [68612,68628]"/>
  <match src="return_statement [97497,97543]" dest="return_statement [35283,35329]"/>
  <match src="parameter [53006,53019]" dest="parameter [20000,20013]"/>
  <match src="call_argument [80979,81014]" dest="call_argument [70576,70614]"/>
  <match src="(: ( [46631,46632]" dest="(: ( [15885,15886]"/>
  <match src="type_name [37165,37170]" dest="type_name [52837,52842]"/>
  <match src=".: . [102680,102681]" dest=".: . [40498,40499]"/>
  <match src="type_name [4694,4701]" dest="type_name [4748,4755]"/>
  <match src=",: , [80664,80665]" dest=",: , [70279,70280]"/>
  <match src="internal: internal [7326,7334]" dest="internal: internal [7425,7433]"/>
  <match src="=: = [99548,99549]" dest="=: = [37366,37367]"/>
  <match src="visibility [42953,42960]" dest="visibility [12207,12214]"/>
  <match src="identifier: balance [99253,99260]" dest="identifier: balance [37071,37078]"/>
  <match src=",: , [31799,31800]" dest=",: , [47471,47472]"/>
  <match src="uint256: uint256 [99878,99885]" dest="uint256: uint256 [37696,37703]"/>
  <match src="function_body [95999,96069]" dest="function_body [33785,33855]"/>
  <match src="uint256: uint256 [98616,98623]" dest="uint256: uint256 [36434,36441]"/>
  <match src="constant: constant [43713,43721]" dest="constant: constant [12967,12975]"/>
  <match src="bytes32: bytes32 [64231,64238]" dest="bytes32: bytes32 [60162,60169]"/>
  <match src="identifier: value [9663,9668]" dest="identifier: value [9762,9767]"/>
  <match src="identifier: _state [93859,93865]" dest="identifier: _state [31645,31651]"/>
  <match src="function_body [10079,10128]" dest="function_body [10178,10227]"/>
  <match src="primitive_type [102600,102607]" dest="primitive_type [40418,40425]"/>
  <match src="type_name [37036,37043]" dest="type_name [52708,52715]"/>
  <match src="{: { [9942,9943]" dest="{: { [10041,10042]"/>
  <match src="identifier: FILE [83100,83104]" dest="identifier: FILE [58537,58541]"/>
  <match src="visibility [95680,95686]" dest="visibility [33466,33472]"/>
  <match src="byte: byte [36326,36330]" dest="byte: byte [51998,52002]"/>
  <match src=",: , [21866,21867]" dest=",: , [63784,63785]"/>
  <match src="(: ( [84275,84276]" dest="(: ( [58971,58972]"/>
  <match src="): ) [101753,101754]" dest="): ) [39571,39572]"/>
  <match src="call_expression [29668,29687]" dest="call_expression [45340,45359]"/>
  <match src="call_argument [29668,29687]" dest="call_argument [45340,45359]"/>
  <match src="identifier: epoch [103417,103422]" dest="identifier: epoch [41235,41240]"/>
  <match src="return: return [9434,9440]" dest="return: return [9533,9539]"/>
  <match src="identifier: epoch [101442,101447]" dest="identifier: epoch [39260,39265]"/>
  <match src="call_argument [21228,21261]" dest="call_argument [55987,56017]"/>
  <match src=".: . [83011,83012]" dest=".: . [70735,70736]"/>
  <match src="expression_statement [80618,80673]" dest="expression_statement [70232,70288]"/>
  <match src="indexed: indexed [26655,26662]" dest="indexed: indexed [60377,60384]"/>
  <match src="function_definition [53446,53506]" dest="function_definition [20440,20500]"/>
  <match src="identifier: _state [103603,103609]" dest="identifier: _state [41421,41427]"/>
  <match src="return_type_definition [53422,53439]" dest="return_type_definition [20416,20433]"/>
  <match src="): ) [53504,53505]" dest="): ) [20498,20499]"/>
  <match src="return_statement [94102,94164]" dest="return_statement [31888,31950]"/>
  <match src="identifier: require [90866,90873]" dest="identifier: require [75938,75945]"/>
  <match src=",: , [1444,1445]" dest=",: , [1498,1499]"/>
  <match src="internal: internal [46609,46617]" dest="internal: internal [15863,15871]"/>
  <match src="): ) [33910,33911]" dest="): ) [49582,49583]"/>
  <match src="struct_member [88547,88590]" dest="struct_member [28676,28719]"/>
  <match src="returns: returns [97184,97191]" dest="returns: returns [34970,34977]"/>
  <match src="(: ( [80905,80906]" dest="(: ( [70974,70975]"/>
  <match src="]: ] [101565,101566]" dest="]: ] [39383,39384]"/>
  <match src="identifier: IOracle [88201,88208]" dest="identifier: IOracle [28330,28337]"/>
  <match src="number_literal: 0 [5438,5439]" dest="number_literal: 0 [5492,5493]"/>
  <match src="primitive_type [22741,22748]" dest="primitive_type [63262,63269]"/>
  <match src="type_name [88028,88035]" dest="type_name [28157,28164]"/>
  <match src="&quot;: &quot; [51644,51645]" dest="&quot;: &quot; [64064,64065]"/>
  <match src="member_expression [94679,94700]" dest="member_expression [32465,32486]"/>
  <match src="uint256: uint256 [87977,87984]" dest="uint256: uint256 [28106,28113]"/>
  <match src="(: ( [97479,97480]" dest="(: ( [35265,35266]"/>
  <match src="&quot;: &quot; [22709,22710]" dest="&quot;: &quot; [62909,62910]"/>
  <match src="contract_body [91830,97882]" dest="contract_body [29616,35668]"/>
  <match src="type_name [88094,88098]" dest="type_name [28223,28227]"/>
  <match src="member_expression [7842,7852]" dest="member_expression [7941,7951]"/>
  <match src="identifier: decrementBalanceOfClaimable [81223,81250]" dest="identifier: incrementBalanceOfStaged [71416,71440]"/>
  <match src="(: ( [94120,94121]" dest="(: ( [31906,31907]"/>
  <match src="visibility [44191,44198]" dest="visibility [13445,13452]"/>
  <match src="identifier: Epoch [88462,88467]" dest="identifier: Epoch [28591,28596]"/>
  <match src="(: ( [81916,81917]" dest="(: ( [71068,71069]"/>
  <match src="visibility [10828,10835]" dest="visibility [10927,10934]"/>
  <match src="type_name [92899,92906]" dest="type_name [30685,30692]"/>
  <match src="(: ( [86436,86437]" dest="(: ( [73743,73744]"/>
  <match src="identifier: getAdvanceIncentive [45970,45989]" dest="identifier: getAdvanceIncentive [15224,15243]"/>
  <match src="struct_declaration [88438,88703]" dest="struct_declaration [28567,28832]"/>
  <match src="function: function [93769,93777]" dest="function: function [31555,31563]"/>
  <match src="address: address [52539,52546]" dest="address: address [19533,19540]"/>
  <match src="parameter [95335,95342]" dest="parameter [33121,33128]"/>
  <match src="identifier: SUPPLY_CHANGE_LIMIT [46692,46711]" dest="identifier: SUPPLY_CHANGE_LIMIT [15946,15965]"/>
  <match src=",: , [103744,103745]" dest=",: , [41562,41563]"/>
  <match src="(: ( [100432,100433]" dest="(: ( [38250,38251]"/>
  <match src="event_definition [53706,53789]" dest="event_definition [20700,20783]"/>
  <match src="(: ( [11056,11057]" dest="(: ( [11155,11156]"/>
  <match src="return_statement [95001,95029]" dest="return_statement [32787,32815]"/>
  <match src="identifier: reason [33579,33585]" dest="identifier: reason [49251,49257]"/>
  <match src="uint256: uint256 [95665,95672]" dest="uint256: uint256 [33451,33458]"/>
  <match src=".: . [96950,96951]" dest=".: . [34736,34737]"/>
  <match src="function_body [71785,71832]" dest="function_body [65790,65825]"/>
  <match src="return_type_definition [44813,44843]" dest="return_type_definition [14067,14097]"/>
  <match src="parameter [102392,102405]" dest="parameter [40210,40223]"/>
  <match src="): ) [53065,53066]" dest="): ) [20059,20060]"/>
  <match src="using: using [64192,64197]" dest="using: using [64974,64979]"/>
  <match src="call_expression [96462,96496]" dest="call_expression [34248,34282]"/>
  <match src="identifier: getCouponExpiration [46330,46349]" dest="identifier: getCouponExpiration [15584,15603]"/>
  <match src="(: ( [94764,94765]" dest="(: ( [32550,32551]"/>
  <match src="(: ( [104624,104625]" dest="(: ( [42442,42443]"/>
  <match src="uint256: uint256 [4080,4087]" dest="uint256: uint256 [4134,4141]"/>
  <match src="contract: contract [50051,50059]" dest="contract: contract [25490,25498]"/>
  <match src="return_type_definition [97046,97063]" dest="return_type_definition [34832,34849]"/>
  <match src="identifier: account [106422,106429]" dest="identifier: account [68351,68358]"/>
  <match src="identifier: target [10751,10757]" dest="identifier: target [10850,10856]"/>
  <match src="]: ] [36814,36815]" dest="]: ] [52486,52487]"/>
  <match src="comment: // 33% [43749,43755]" dest="comment: // 33% [13003,13009]"/>
  <match src="(: ( [66474,66475]" dest="(: ( [62427,62428]"/>
  <match src="internal: internal [930,938]" dest="internal: internal [984,992]"/>
  <match src="false: false [65664,65669]" dest="false: false [80739,80744]"/>
  <match src="member_expression [84647,84659]" dest="member_expression [79070,79082]"/>
  <match src="}: } [93491,93492]" dest="}: } [31277,31278]"/>
  <match src="primitive_type [87399,87406]" dest="primitive_type [27528,27535]"/>
  <match src="bool: bool [72247,72251]" dest="bool: bool [80676,80680]"/>
  <match src="call_argument [81372,81377]" dest="call_argument [71187,71192]"/>
  <match src="identifier: j [35215,35216]" dest="identifier: j [50887,50888]"/>
  <match src="returns: returns [62692,62699]" dest="returns: returns [26561,26568]"/>
  <match src="function_body [37999,38233]" dest="function_body [53671,53905]"/>
  <match src="identifier: input [38096,38101]" dest="identifier: input [53768,53773]"/>
  <match src="function_definition [95044,95233]" dest="function_definition [32830,33019]"/>
  <match src="pure: pure [7093,7097]" dest="pure: pure [7192,7196]"/>
  <match src="user_defined_type [107536,107541]" dest="user_defined_type [81654,81659]"/>
  <match src=",: , [49032,49033]" dest=",: , [55423,55424]"/>
  <match src="identifier: D256 [8964,8968]" dest="identifier: D256 [9063,9067]"/>
  <match src="identifier: MINIMUM_LIQUIDITY [54047,54064]" dest="identifier: MINIMUM_LIQUIDITY [21041,21058]"/>
  <match src="identifier: coupons [101610,101617]" dest="identifier: coupons [39428,39435]"/>
  <match src="type_name [46015,46022]" dest="type_name [15269,15276]"/>
  <match src="function_definition [10713,10938]" dest="function_definition [10812,11037]"/>
  <match src="(: ( [34597,34598]" dest="(: ( [50269,50270]"/>
  <match src="primitive_type [28342,28349]" dest="primitive_type [44014,44021]"/>
  <match src="identifier: account [80294,80301]" dest="identifier: account [69850,69857]"/>
  <match src="member_expression [100115,100140]" dest="member_expression [37933,37958]"/>
  <match src=".: . [62636,62637]" dest=".: . [26505,26506]"/>
  <match src="): ) [65140,65141]" dest="): ) [62392,62393]"/>
  <match src="member_expression [93459,93473]" dest="member_expression [31245,31259]"/>
  <match src="returns: returns [46366,46373]" dest="returns: returns [15620,15627]"/>
  <match src="call_argument [78498,78508]" dest="call_argument [81978,81988]"/>
  <match src="event_paramater [53849,53863]" dest="event_paramater [20843,20857]"/>
  <match src="identifier: transferFrom [14526,14538]" dest="identifier: transferFrom [24202,24214]"/>
  <match src="bool: bool [14608,14612]" dest="bool: bool [24284,24288]"/>
  <match src="identifier: account [26663,26670]" dest="identifier: account [60385,60392]"/>
  <match src="yul_path [86417,86421]" dest="yul_path [73724,73728]"/>
  <match src="type_name [100045,100051]" dest="type_name [37863,37869]"/>
  <match src="): ) [12749,12750]" dest="): ) [22425,22426]"/>
  <match src="return_statement [46818,46870]" dest="return_statement [16072,16124]"/>
  <match src="call_argument [51432,51438]" dest="call_argument [55106,55112]"/>
  <match src="address: address [94205,94212]" dest="address: address [31991,31998]"/>
  <match src="visibility [16511,16518]" dest="visibility [61235,61242]"/>
  <match src="member_expression [104547,104564]" dest="member_expression [42365,42382]"/>
  <match src="variable_declaration [85930,85942]" dest="variable_declaration [73237,73249]"/>
  <match src="(: ( [52720,52721]" dest="(: ( [19714,19715]"/>
  <match src="uint: uint [53849,53853]" dest="uint: uint [20843,20847]"/>
  <match src="function: function [8654,8662]" dest="function: function [8753,8761]"/>
  <match src="function: function [54718,54726]" dest="function: function [21712,21720]"/>
  <match src="type_name [48495,48502]" dest="type_name [17212,17219]"/>
  <match src="type_name [21161,21168]" dest="type_name [55924,55931]"/>
  <match src="call_struct_argument [9663,9707]" dest="call_struct_argument [9762,9806]"/>
  <match src="comment: // ============ Core Methods ============ [10664,10705]" dest="comment: // ============ Core Methods ============ [10763,10804]"/>
  <match src=".: . [104381,104382]" dest=".: . [42199,42200]"/>
  <match src="}: } [97692,97693]" dest="}: } [35478,35479]"/>
  <match src="function_definition [94421,94731]" dest="function_definition [32207,32517]"/>
  <match src="member_expression [106192,106234]" dest="member_expression [68121,68163]"/>
  <match src="): ) [36212,36213]" dest="): ) [51884,51885]"/>
  <match src="identifier: size [85938,85942]" dest="identifier: size [73245,73249]"/>
  <match src="function: function [7656,7664]" dest="function: function [7755,7763]"/>
  <match src="pure: pure [8173,8177]" dest="pure: pure [8272,8276]"/>
  <match src="return_type_definition [95838,95855]" dest="return_type_definition [33624,33641]"/>
  <match src="identifier: supply [88288,88294]" dest="identifier: supply [28417,28423]"/>
  <match src="uint256: uint256 [79811,79818]" dest="uint256: uint256 [69537,69544]"/>
  <match src=",: , [7046,7047]" dest=",: , [7145,7146]"/>
  <match src="{: { [92804,92805]" dest="{: { [30590,30591]"/>
  <match src="identifier: value [6700,6705]" dest="identifier: value [6799,6804]"/>
  <match src="identifier: b [7513,7514]" dest="identifier: b [7612,7613]"/>
  <match src="visibility [9587,9595]" dest="visibility [9686,9694]"/>
  <match src=".: . [82689,82690]" dest=".: . [78921,78922]"/>
  <match src="[: [ [92462,92463]" dest="[: [ [30248,30249]"/>
  <match src="returns: returns [54081,54088]" dest="returns: returns [21075,21082]"/>
  <match src="type_name [10073,10077]" dest="type_name [10172,10176]"/>
  <match src=".: . [99697,99698]" dest=".: . [37515,37516]"/>
  <match src="using: using [79792,79797]" dest="using: using [69518,69523]"/>
  <match src="call_struct_argument [8503,8520]" dest="call_struct_argument [8602,8619]"/>
  <match src="primitive_type [102222,102229]" dest="primitive_type [40040,40047]"/>
  <match src="(: ( [8099,8100]" dest="(: ( [8198,8199]"/>
  <match src="parameter [44706,44713]" dest="parameter [13960,13967]"/>
  <match src="{: { [33343,33344]" dest="{: { [49015,49016]"/>
  <match src="parameter [94222,94235]" dest="parameter [32008,32021]"/>
  <match src="expression_statement [82123,82144]" dest="expression_statement [71792,71813]"/>
  <match src="call_argument [6988,6992]" dest="call_argument [7087,7091]"/>
  <match src="function_definition [12715,12783]" dest="function_definition [22391,22459]"/>
  <match src="call_expression [77095,77143]" dest="call_expression [61065,61109]"/>
  <match src="(: ( [96297,96298]" dest="(: ( [34083,34084]"/>
  <match src="internal: internal [46352,46360]" dest="internal: internal [15606,15614]"/>
  <match src=".: . [101566,101567]" dest=".: . [39384,39385]"/>
  <match src="parameter [103934,103951]" dest="parameter [41752,41769]"/>
  <match src="(: ( [32008,32009]" dest="(: ( [47680,47681]"/>
  <match src="uint256: uint256 [91856,91863]" dest="uint256: uint256 [29642,29649]"/>
  <match src="&quot;: &quot; [1045,1046]" dest="&quot;: &quot; [1099,1100]"/>
  <match src="member_expression [104144,104161]" dest="member_expression [41962,41979]"/>
  <match src="visibility [39712,39720]" dest="visibility [17262,17270]"/>
  <match src="{: { [99794,99795]" dest="{: { [37612,37613]"/>
  <match src="type_name [103917,103924]" dest="type_name [41735,41742]"/>
  <match src="(: ( [29000,29001]" dest="(: ( [44672,44673]"/>
  <match src="member_expression [8813,8823]" dest="member_expression [8912,8922]"/>
  <match src="visibility [52883,52891]" dest="visibility [19877,19885]"/>
  <match src="returns: returns [53491,53498]" dest="returns: returns [20485,20492]"/>
  <match src="expression_statement [68150,68250]" dest="expression_statement [79392,79588]"/>
  <match src="type_name [87334,87361]" dest="type_name [27463,27490]"/>
  <match src=",: , [9268,9269]" dest=",: , [9367,9368]"/>
  <match src="type_name [53181,53185]" dest="type_name [20175,20179]"/>
  <match src="}: } [99455,99456]" dest="}: } [37273,37274]"/>
  <match src="member_expression [99550,99564]" dest="member_expression [37368,37382]"/>
  <match src="): ) [44990,44991]" dest="): ) [14244,14245]"/>
  <match src="identifier: _state [99683,99689]" dest="identifier: _state [37501,37507]"/>
  <match src="type_name [10445,10449]" dest="type_name [10544,10548]"/>
  <match src="type_name [76211,76218]" dest="type_name [61913,61920]"/>
  <match src="return_type_definition [7551,7572]" dest="return_type_definition [7650,7671]"/>
  <match src="identifier: totalStaged [71741,71752]" dest="identifier: getOraclePrice [65748,65762]"/>
  <match src="uint256: uint256 [71999,72006]" dest="uint256: uint256 [61950,61957]"/>
  <match src="member_expression [65649,65660]" dest="member_expression [67147,67158]"/>
  <match src="primitive_type [31121,31128]" dest="primitive_type [46793,46800]"/>
  <match src="inheritance_specifier [107536,107541]" dest="inheritance_specifier [81654,81659]"/>
  <match src="identifier: BASE [7631,7635]" dest="identifier: BASE [7730,7734]"/>
  <match src="(: ( [54617,54618]" dest="(: ( [21611,21612]"/>
  <match src="identifier: Constants [102309,102318]" dest="identifier: Constants [40127,40136]"/>
  <match src="view: view [92406,92410]" dest="view: view [30192,30196]"/>
  <match src="binary_expression [94039,94055]" dest="binary_expression [31825,31841]"/>
  <match src="{: { [103145,103146]" dest="{: { [40963,40964]"/>
  <match src="function: function [104247,104255]" dest="function: function [42065,42073]"/>
  <match src="call_expression [90386,90422]" dest="call_expression [75458,75494]"/>
  <match src="binary_expression [38096,38114]" dest="binary_expression [53768,53786]"/>
  <match src="): ) [31648,31649]" dest="): ) [47320,47321]"/>
  <match src="identifier: self [9246,9250]" dest="identifier: self [9345,9349]"/>
  <match src="call_argument [82050,82055]" dest="call_argument [72161,72166]"/>
  <match src="}: } [102797,102798]" dest="}: } [40615,40616]"/>
  <match src="identifier: FILE [106715,106719]" dest="identifier: FILE [68644,68648]"/>
  <match src="[: [ [101500,101501]" dest="[: [ [39318,39319]"/>
  <match src="type_name [96156,96163]" dest="type_name [33942,33949]"/>
  <match src="identifier: dollar [72137,72143]" dest="identifier: dollar [58245,58251]"/>
  <match src=",: , [15089,15090]" dest=",: , [24765,24766]"/>
  <match src="type_name [20431,20438]" dest="type_name [63535,63542]"/>
  <match src="parameter [9196,9207]" dest="parameter [9295,9306]"/>
  <match src="primitive_type [92320,92325]" dest="primitive_type [30106,30111]"/>
  <match src="(: ( [95085,95086]" dest="(: ( [32871,32872]"/>
  <match src="{: { [50078,50079]" dest="{: { [25517,25518]"/>
  <match src="return: return [93671,93677]" dest="return: return [31457,31463]"/>
  <match src="identifier: epoch [103334,103339]" dest="identifier: epoch [41152,41157]"/>
  <match src="identifier: totalSupply [94039,94050]" dest="identifier: totalSupply [31825,31836]"/>
  <match src="): ) [62676,62677]" dest="): ) [26545,26546]"/>
  <match src="expression_statement [34341,34347]" dest="expression_statement [50013,50019]"/>
  <match src="array_access [36268,36277]" dest="array_access [51940,51949]"/>
  <match src="parameter [37930,37943]" dest="parameter [53602,53615]"/>
  <match src="%: % [35802,35803]" dest="%: % [51474,51475]"/>
  <match src="identifier: _state [103003,103009]" dest="identifier: _state [40821,40827]"/>
  <match src="return_type_definition [97612,97626]" dest="return_type_definition [35398,35412]"/>
  <match src="}: } [97871,97872]" dest="}: } [35657,35658]"/>
  <match src="{: { [37025,37026]" dest="{: { [52697,52698]"/>
  <match src="type_name [35014,35021]" dest="type_name [50686,50693]"/>
  <match src="primitive_type [37048,37055]" dest="primitive_type [52720,52727]"/>
  <match src="identifier: isInitialized [97567,97580]" dest="identifier: isInitialized [35353,35366]"/>
  <match src="identifier: msg [83008,83011]" dest="identifier: msg [70732,70735]"/>
  <match src="returns: returns [8754,8761]" dest="returns: returns [8853,8860]"/>
  <match src=".: . [83310,83311]" dest=".: . [77498,77499]"/>
  <match src="function_body [20456,20848]" dest="function_body [63560,64188]"/>
  <match src="uint256: uint256 [37457,37464]" dest="uint256: uint256 [53129,53136]"/>
  <match src=".: . [96639,96640]" dest=".: . [34425,34426]"/>
  <match src="): ) [20578,20579]" dest="): ) [63690,63691]"/>
  <match src="+: + [34652,34653]" dest="+: + [50324,50325]"/>
  <match src="=: = [104789,104790]" dest="=: = [42607,42608]"/>
  <match src="visibility [54294,54302]" dest="visibility [21288,21296]"/>
  <match src="(: ( [35779,35780]" dest="(: ( [51451,51452]"/>
  <match src="}: } [94348,94349]" dest="}: } [32134,32135]"/>
  <match src="primitive_type [54684,54688]" dest="primitive_type [21678,21682]"/>
  <match src="variable_declaration_statement [35207,35225]" dest="variable_declaration_statement [50879,50897]"/>
  <match src="identifier: oracle [88209,88215]" dest="identifier: oracle [28338,28344]"/>
  <match src=".: . [93043,93044]" dest=".: . [30829,30830]"/>
  <match src="internal: internal [104917,104925]" dest="internal: internal [42735,42743]"/>
  <match src="identifier: DAO_EXIT_LOCKUP_EPOCHS [46159,46181]" dest="identifier: DAO_EXIT_LOCKUP_EPOCHS [15413,15435]"/>
  <match src="type_name [88176,88183]" dest="type_name [28305,28312]"/>
  <match src="call_argument [82904,82918]" dest="call_argument [71655,71669]"/>
  <match src="primitive_type [95990,95997]" dest="primitive_type [33776,33783]"/>
  <match src="visibility [74893,74901]" dest="visibility [55327,55335]"/>
  <match src=",: , [20831,20832]" dest=",: , [64164,64165]"/>
  <match src="pure: pure [6913,6917]" dest="pure: pure [7012,7016]"/>
  <match src="variable_declaration_statement [4080,4098]" dest="variable_declaration_statement [4134,4152]"/>
  <match src="function: function [82072,82080]" dest="function: function [71209,71217]"/>
  <match src="call_argument [7424,7435]" dest="call_argument [7523,7534]"/>
  <match src="return: return [98844,98850]" dest="return: return [36662,36668]"/>
  <match src="function_body [92239,92271]" dest="function_body [30025,30057]"/>
  <match src="uint256: uint256 [88330,88337]" dest="uint256: uint256 [28459,28466]"/>
  <match src="view: view [72096,72100]" dest="view: view [66632,66636]"/>
  <match src=",: , [81261,81262]" dest=",: , [71451,71452]"/>
  <match src="(: ( [2660,2661]" dest="(: ( [2714,2715]"/>
  <match src="type_name [103101,103108]" dest="type_name [40919,40926]"/>
  <match src="return: return [44855,44861]" dest="return: return [14109,14115]"/>
  <match src="primitive_type [75948,75955]" dest="primitive_type [59076,59083]"/>
  <match src="identifier: _transfer [20386,20395]" dest="identifier: transferCoupons [63469,63484]"/>
  <match src=",: , [82032,82033]" dest=",: , [72134,72135]"/>
  <match src="primitive_type [104295,104302]" dest="primitive_type [42113,42120]"/>
  <match src="struct_declaration [87744,87816]" dest="struct_declaration [27873,27945]"/>
  <match src="uint256: uint256 [73092,73099]" dest="uint256: uint256 [71323,71330]"/>
  <match src="memory: memory [7117,7123]" dest="memory: memory [7216,7222]"/>
  <match src="identifier: GOVERNANCE_EMERGENCY_DELAY [43858,43884]" dest="identifier: GOVERNANCE_EMERGENCY_DELAY [13112,13138]"/>
  <match src="primitive_type [36470,36477]" dest="primitive_type [52142,52149]"/>
  <match src="identifier: coupons [101653,101660]" dest="identifier: coupons [39471,39478]"/>
  <match src="parameter [93794,93809]" dest="parameter [31580,31595]"/>
  <match src="expression_statement [8554,8560]" dest="expression_statement [8653,8659]"/>
  <match src="): ) [67402,67403]" dest="): ) [66985,66986]"/>
  <match src="identifier: epoch [95962,95967]" dest="identifier: epoch [33748,33753]"/>
  <match src="(: ( [33655,33656]" dest="(: ( [49327,49328]"/>
  <match src="(: ( [90338,90339]" dest="(: ( [75410,75411]"/>
  <match src="]: ] [101508,101509]" dest="]: ] [39326,39327]"/>
  <match src="function: function [99464,99472]" dest="function: function [37282,37290]"/>
  <match src="=: = [35394,35395]" dest="=: = [51066,51067]"/>
  <match src="identifier: value [9448,9453]" dest="identifier: value [9547,9552]"/>
  <match src=".: . [48299,48300]" dest=".: . [55068,55069]"/>
  <match src="internal: internal [23133,23141]" dest="internal: internal [69938,69946]"/>
  <match src="identifier: candidate [104201,104210]" dest="identifier: candidate [42019,42028]"/>
  <match src="type_alias [64198,64205]" dest="type_alias [64980,64987]"/>
  <match src="): ) [46382,46383]" dest="): ) [15636,15637]"/>
  <match src="call_argument [100488,100494]" dest="call_argument [38306,38312]"/>
  <match src="identifier: fluidUntil [73688,73698]" dest="identifier: add [80061,80064]"/>
  <match src="(: ( [101416,101417]" dest="(: ( [39234,39235]"/>
  <match src="primitive_type [52562,52569]" dest="primitive_type [19556,19563]"/>
  <match src="uint256: uint256 [3881,3888]" dest="uint256: uint256 [3935,3942]"/>
  <match src="address: address [13407,13414]" dest="address: address [23083,23090]"/>
  <match src="public: public [93811,93817]" dest="public: public [31597,31603]"/>
  <match src="variable_declaration [4080,4089]" dest="variable_declaration [4134,4143]"/>
  <match src="identifier: pow [8287,8290]" dest="identifier: pow [8386,8389]"/>
  <match src="call_expression [10097,10115]" dest="call_expression [10196,10214]"/>
  <match src="(: ( [4758,4759]" dest="(: ( [4812,4813]"/>
  <match src="type_name [8539,8546]" dest="type_name [8638,8645]"/>
  <match src="state_variable_declaration [44084,44138]" dest="state_variable_declaration [13338,13392]"/>
  <match src="=: = [28370,28371]" dest="=: = [44042,44043]"/>
  <match src="identifier: value [8503,8508]" dest="identifier: value [8602,8607]"/>
  <match src="uint256: uint256 [37036,37043]" dest="uint256: uint256 [52708,52715]"/>
  <match src=".: . [106648,106649]" dest=".: . [68577,68578]"/>
  <match src="}: } [8069,8070]" dest="}: } [8168,8169]"/>
  <match src="type_name [53648,53655]" dest="type_name [20642,20649]"/>
  <match src="call_argument [74983,74989]" dest="call_argument [55630,55636]"/>
  <match src="string [49193,49207]" dest="string [55183,55225]"/>
  <match src="identifier: totalBonded [81588,81599]" dest="identifier: totalBonded [70806,70817]"/>
  <match src="bool: bool [30517,30521]" dest="bool: bool [46189,46193]"/>
  <match src="call_struct_argument [46839,46867]" dest="call_struct_argument [16093,16121]"/>
  <match src="identifier: add [101743,101746]" dest="identifier: add [39561,39564]"/>
  <match src="struct_declaration [87929,88118]" dest="struct_declaration [28058,28247]"/>
  <match src="member_expression [8051,8065]" dest="member_expression [8150,8164]"/>
  <match src="identifier: newImplementation [91092,91109]" dest="identifier: newImplementation [76164,76181]"/>
  <match src="primitive_type [53259,53266]" dest="primitive_type [20253,20260]"/>
  <match src="function_body [103350,103655]" dest="function_body [41168,41473]"/>
  <match src="variable_declaration_statement [83457,83516]" dest="variable_declaration_statement [61316,61390]"/>
  <match src="type_name [9936,9940]" dest="type_name [10035,10039]"/>
  <match src="(: ( [95465,95466]" dest="(: ( [33251,33252]"/>
  <match src="&quot;: &quot; [84888,84889]" dest="&quot;: &quot; [79357,79358]"/>
  <match src="parameter [53598,53607]" dest="parameter [20592,20601]"/>
  <match src="parameter [94258,94265]" dest="parameter [32044,32051]"/>
  <match src="[: [ [96681,96682]" dest="[: [ [34467,34468]"/>
  <match src="): ) [45867,45868]" dest="): ) [15121,15122]"/>
  <match src="}: } [93055,93056]" dest="}: } [30841,30842]"/>
  <match src="call_expression [82376,82405]" dest="call_expression [78158,78179]"/>
  <match src="for: for [6347,6350]" dest="for: for [6446,6449]"/>
  <match src="(: ( [8500,8501]" dest="(: ( [8599,8600]"/>
  <match src="identifier: burnFrom [50137,50145]" dest="identifier: burnFrom [25576,25584]"/>
  <match src="revert_statement [29402,29778]" dest="revert_statement [45074,45450]"/>
  <match src="identifier: BASE [6830,6834]" dest="identifier: BASE [6929,6933]"/>
  <match src="view: view [92987,92991]" dest="view: view [30773,30777]"/>
  <match src="variable_declaration_statement [91008,91043]" dest="variable_declaration_statement [76080,76115]"/>
  <match src="(: ( [36330,36331]" dest="(: ( [52002,52003]"/>
  <match src="call_expression [106669,106700]" dest="call_expression [68598,68629]"/>
  <match src="identifier: value [80558,80563]" dest="identifier: value [70174,70179]"/>
  <match src="contract_body [16328,23316]" dest="contract_body [60120,64191]"/>
  <match src="uint256: uint256 [22607,22614]" dest="uint256: uint256 [63207,63214]"/>
  <match src="parameter [44601,44608]" dest="parameter [13855,13862]"/>
  <match src=",: , [104439,104440]" dest=",: , [42257,42258]"/>
  <match src="==: == [9979,9981]" dest="==: == [10078,10080]"/>
  <match src="expression_statement [37784,37829]" dest="expression_statement [53456,53501]"/>
  <match src=".: . [99819,99820]" dest=".: . [37637,37638]"/>
  <match src=".: . [102318,102319]" dest=".: . [40136,40137]"/>
  <match src="function_body [45592,45658]" dest="function_body [14846,14912]"/>
  <match src="primitive_type [84268,84275]" dest="primitive_type [58964,58971]"/>
  <match src="new_expression [35396,35405]" dest="new_expression [51068,51077]"/>
  <match src="struct_member [6521,6535]" dest="struct_member [6620,6634]"/>
  <match src="uint256: uint256 [7946,7953]" dest="uint256: uint256 [8045,8052]"/>
  <match src="(: ( [45778,45779]" dest="(: ( [15032,15033]"/>
  <match src="call_expression [7610,7637]" dest="call_expression [7709,7736]"/>
  <match src="identifier: account [27128,27135]" dest="identifier: account [55082,55089]"/>
  <match src="memory: memory [36023,36029]" dest="memory: memory [51695,51701]"/>
  <match src="primitive_type [52662,52666]" dest="primitive_type [19656,19660]"/>
  <match src="function_definition [29804,30485]" dest="function_definition [45476,46157]"/>
  <match src="identifier: i [34605,34606]" dest="identifier: i [50277,50278]"/>
  <match src="identifier: mul [6984,6987]" dest="identifier: mul [7083,7086]"/>
  <match src="constant: constant [43584,43592]" dest="constant: constant [12838,12846]"/>
  <match src="identifier: D256 [10166,10170]" dest="identifier: D256 [10265,10269]"/>
  <match src="binary_expression [1982,1987]" dest="binary_expression [2036,2041]"/>
  <match src=",: , [10182,10183]" dest=",: , [10281,10282]"/>
  <match src="{: { [90375,90376]" dest="{: { [75447,75448]"/>
  <match src="identifier: b [8145,8146]" dest="identifier: b [8244,8245]"/>
  <match src="parameter [7560,7571]" dest="parameter [7659,7670]"/>
  <match src="{: { [8019,8020]" dest="{: { [8118,8119]"/>
  <match src="call_argument [35406,35412]" dest="call_argument [51078,51084]"/>
  <match src="parameter [16641,16648]" dest="parameter [17285,17292]"/>
  <match src="identifier: b [5433,5434]" dest="identifier: b [5487,5488]"/>
  <match src="(: ( [66927,66928]" dest="(: ( [66169,66170]"/>
  <match src="view: view [92781,92785]" dest="view: view [30567,30571]"/>
  <match src=".: . [46531,46532]" dest=".: . [15785,15786]"/>
  <match src="state_mutability [54546,54550]" dest="state_mutability [21540,21544]"/>
  <match src="identifier: SafeMath [98603,98611]" dest="identifier: SafeMath [36421,36429]"/>
  <match src="call_expression [10892,10913]" dest="call_expression [10991,11012]"/>
  <match src="type_name [83620,83627]" dest="type_name [61039,61046]"/>
  <match src="identifier: a [2637,2638]" dest="identifier: a [2691,2692]"/>
  <match src="identifier: lessUsdc [83466,83474]" dest="identifier: lessRedeemable [61325,61339]"/>
  <match src="identifier: candidate [97100,97109]" dest="identifier: candidate [34886,34895]"/>
  <match src=",: , [30549,30550]" dest=",: , [46221,46222]"/>
  <match src="): ) [7879,7880]" dest="): ) [7978,7979]"/>
  <match src="call_expression [100649,100701]" dest="call_expression [38467,38519]"/>
  <match src="}: } [81094,81095]" dest="}: } [70667,70668]"/>
  <match src=".: . [10898,10899]" dest=".: . [10997,10998]"/>
  <match src="primitive_type [20569,20576]" dest="primitive_type [63681,63688]"/>
  <match src=".: . [102929,102930]" dest=".: . [40747,40748]"/>
  <match src="): ) [77101,77102]" dest="): ) [61071,61072]"/>
  <match src="identifier: balanceOfRewarded [82376,82393]" dest="identifier: balanceOf [78158,78167]"/>
  <match src="bytes32: bytes32 [31810,31817]" dest="bytes32: bytes32 [47482,47489]"/>
  <match src="identifier: D256 [9079,9083]" dest="identifier: D256 [9178,9182]"/>
  <match src="member_expression [100969,101000]" dest="member_expression [38787,38818]"/>
  <match src="expression_statement [37301,37341]" dest="expression_statement [52973,53013]"/>
  <match src="constant: constant [44471,44479]" dest="constant: constant [13725,13733]"/>
  <match src=",: , [49178,49179]" dest=",: , [70025,70026]"/>
  <match src="=: = [66459,66460]" dest="=: = [62420,62421]"/>
  <match src="expression_statement [81453,81474]" dest="expression_statement [70755,70776]"/>
  <match src="function_definition [54453,54514]" dest="function_definition [21447,21508]"/>
  <match src="contract: contract [88710,88718]" dest="contract: contract [28839,28847]"/>
  <match src="identifier: account [104029,104036]" dest="identifier: account [41847,41854]"/>
  <match src=".: . [99948,99949]" dest=".: . [37766,37767]"/>
  <match src="external: external [107722,107730]" dest="external: external [82318,82326]"/>
  <match src="identifier: _ [106821,106822]" dest="identifier: _ [68750,68751]"/>
  <match src="[: [ [97099,97100]" dest="[: [ [34885,34886]"/>
  <match src="binary_expression [10246,10268]" dest="binary_expression [10345,10367]"/>
  <match src="identifier: self [9466,9470]" dest="identifier: self [9565,9569]"/>
  <match src="primitive_type [44183,44190]" dest="primitive_type [13437,13444]"/>
  <match src="function_body [99794,99836]" dest="function_body [37612,37654]"/>
  <match src="member_expression [103156,103169]" dest="member_expression [40974,40987]"/>
  <match src=",: , [917,918]" dest=",: , [971,972]"/>
  <match src="{: { [36498,36499]" dest="{: { [52170,52171]"/>
  <match src="call_struct_argument [6700,6708]" dest="call_struct_argument [6799,6807]"/>
  <match src="parameter [7112,7123]" dest="parameter [7211,7222]"/>
  <match src="identifier: file [32612,32616]" dest="identifier: file [48284,48288]"/>
  <match src="identifier: reason [100586,100592]" dest="identifier: reason [38404,38410]"/>
  <match src="(: ( [30019,30020]" dest="(: ( [45691,45692]"/>
  <match src="primitive_type [103934,103941]" dest="primitive_type [41752,41759]"/>
  <match src="(: ( [45570,45571]" dest="(: ( [14824,14825]"/>
  <match src="call_argument [82625,82635]" dest="call_argument [82632,82642]"/>
  <match src="function: function [3206,3214]" dest="function: function [3260,3268]"/>
  <match src="identifier: SUPPLY_CHANGE_LIMIT [44414,44433]" dest="identifier: SUPPLY_CHANGE_LIMIT [13668,13687]"/>
  <match src="identifier: candidates [104190,104200]" dest="identifier: candidates [42008,42018]"/>
  <match src="{: { [106015,106016]" dest="{: { [67944,67945]"/>
  <match src="comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [2345,2424]" dest="comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [2399,2478]"/>
  <match src="identifier: Approval [15034,15042]" dest="identifier: Approval [24710,24718]"/>
  <match src="identifier: sender [20475,20481]" dest="identifier: sender [63579,63585]"/>
  <match src="primitive_type [65782,65789]" dest="primitive_type [66326,66333]"/>
  <match src="identifier: Require [84223,84230]" dest="identifier: Require [58218,58225]"/>
  <match src="parameter [93545,93552]" dest="parameter [31331,31338]"/>
  <match src="}: } [95489,95490]" dest="}: } [33275,33276]"/>
  <match src="++: ++ [35296,35298]" dest="++: ++ [50968,50970]"/>
  <match src="user_defined_type [8477,8481]" dest="user_defined_type [8576,8580]"/>
  <match src="public: public [97172,97178]" dest="public: public [34958,34964]"/>
  <match src="&quot;: &quot; [65112,65113]" dest="&quot;: &quot; [62365,62366]"/>
  <match src="): ) [100700,100701]" dest="): ) [38518,38519]"/>
  <match src="identifier: incrementApproveFor [104069,104088]" dest="identifier: incrementApproveFor [41887,41906]"/>
  <match src="): ) [92516,92517]" dest="): ) [30302,30303]"/>
  <match src="identifier: tokenA [78676,78682]" dest="identifier: candidate [77408,77417]"/>
  <match src="identifier: initialized [106779,106790]" dest="identifier: initialized [68708,68719]"/>
  <match src="identifier: price [67327,67332]" dest="identifier: price [66947,66952]"/>
  <match src="}: } [21436,21437]" dest="}: } [56052,56053]"/>
  <match src="call_argument [99729,99735]" dest="call_argument [37547,37553]"/>
  <match src="^:  ^ [15,17]" dest="^:  ^ [69,71]"/>
  <match src=".: . [8252,8253]" dest=".: . [8351,8352]"/>
  <match src="uint256: uint256 [7706,7713]" dest="uint256: uint256 [7805,7812]"/>
  <match src="): ) [10408,10409]" dest="): ) [10507,10508]"/>
  <match src="): ) [34210,34211]" dest="): ) [49882,49883]"/>
  <match src="]: ] [101975,101976]" dest="]: ] [39793,39794]"/>
  <match src="call_argument [77107,77142]" dest="call_argument [61077,61108]"/>
  <match src=".: . [107967,107968]" dest=".: . [66976,66977]"/>
  <match src="): ) [92297,92298]" dest="): ) [30083,30084]"/>
  <match src="member_expression [106442,106454]" dest="member_expression [68371,68383]"/>
  <match src="identifier: EPOCH_START [43537,43548]" dest="identifier: EPOCH_START [12791,12802]"/>
  <match src="state_mutability [46471,46475]" dest="state_mutability [15725,15729]"/>
  <match src="memory: memory [9084,9090]" dest="memory: memory [9183,9189]"/>
  <match src="identifier: GOVERNANCE_EMERGENCY_DELAY [45919,45945]" dest="identifier: GOVERNANCE_EMERGENCY_DELAY [15173,15199]"/>
  <match src="return_type_definition [7992,8013]" dest="return_type_definition [8091,8112]"/>
  <match src="call_argument [29129,29135]" dest="call_argument [44801,44807]"/>
  <match src="state_mutability [93202,93206]" dest="state_mutability [30988,30992]"/>
  <match src="): ) [54094,54095]" dest="): ) [21088,21089]"/>
  <match src="function_definition [46577,46721]" dest="function_definition [15831,15975]"/>
  <match src="function_body [84212,84401]" dest="function_body [58908,59048]"/>
  <match src="binary_expression [10097,10120]" dest="binary_expression [10196,10219]"/>
  <match src="(: ( [80101,80102]" dest="(: ( [69616,69617]"/>
  <match src="}: } [8521,8522]" dest="}: } [8620,8621]"/>
  <match src="function: function [104464,104472]" dest="function: function [42282,42290]"/>
  <match src="identifier: candidate [97522,97531]" dest="identifier: candidate [35308,35317]"/>
  <match src="(: ( [2279,2280]" dest="(: ( [2333,2334]"/>
  <match src="return_statement [45759,45815]" dest="return_statement [15013,15069]"/>
  <match src="parameter [78046,78053]" dest="parameter [56131,56138]"/>
  <match src="identifier: _state [103219,103225]" dest="identifier: _state [41037,41043]"/>
  <match src="(: ( [104880,104881]" dest="(: ( [42698,42699]"/>
  <match src="(: ( [81152,81153]" dest="(: ( [71768,71769]"/>
  <match src="update_expression [37480,37483]" dest="update_expression [53152,53155]"/>
  <match src="return: return [99093,99099]" dest="return: return [36911,36917]"/>
  <match src="struct: struct [87259,87265]" dest="struct: struct [27388,27394]"/>
  <match src="primitive_type [37006,37011]" dest="primitive_type [52678,52683]"/>
  <match src="identifier: expiration [103198,103208]" dest="identifier: expiration [41016,41026]"/>
  <match src="): ) [45546,45547]" dest="): ) [14800,14801]"/>
  <match src=",: , [32365,32366]" dest=",: , [48037,48038]"/>
  <match src="state_mutability [10059,10063]" dest="state_mutability [10158,10162]"/>
  <match src="inheritance_specifier [106007,106014]" dest="inheritance_specifier [67936,67943]"/>
  <match src="visibility [35985,35992]" dest="visibility [51657,51664]"/>
  <match src="): ) [6617,6618]" dest="): ) [6716,6717]"/>
  <match src="call_argument [81803,81813]" dest="call_argument [71567,71577]"/>
  <match src="uint256: uint256 [4728,4735]" dest="uint256: uint256 [4782,4789]"/>
  <match src="(: ( [93650,93651]" dest="(: ( [31436,31437]"/>
  <match src="expression_statement [82220,82341]" dest="expression_statement [80177,80379]"/>
  <match src="function_definition [45961,46067]" dest="function_definition [15215,15321]"/>
  <match src="identifier: reason [30874,30880]" dest="identifier: reason [46546,46552]"/>
  <match src="{: { [3273,3274]" dest="{: { [3327,3328]"/>
  <match src="{: { [7377,7378]" dest="{: { [7476,7477]"/>
  <match src="]: ] [104419,104420]" dest="]: ] [42237,42238]"/>
  <match src="primitive_type [53530,53537]" dest="primitive_type [20524,20531]"/>
  <match src=".: . [83048,83049]" dest=".: . [58485,58486]"/>
  <match src=".: . [104398,104399]" dest=".: . [42216,42217]"/>
  <match src="type_name [70184,70191]" dest="type_name [65095,65102]"/>
  <match src="identifier: owner [52945,52950]" dest="identifier: owner [19939,19944]"/>
  <match src="return_type_definition [95326,95343]" dest="return_type_definition [33112,33129]"/>
  <match src="primitive_type [101837,101844]" dest="primitive_type [39655,39662]"/>
  <match src="event: event [15028,15033]" dest="event: event [24704,24709]"/>
  <match src="parameter [97480,97484]" dest="parameter [35266,35270]"/>
  <match src="{: { [45779,45780]" dest="{: { [15033,15034]"/>
  <match src="revert: revert [33380,33386]" dest="revert: revert [49052,49058]"/>
  <match src="parameter [14539,14553]" dest="parameter [24215,24229]"/>
  <match src="public: public [62581,62587]" dest="public: public [26450,26456]"/>
  <match src="return_type_definition [54247,54264]" dest="return_type_definition [21241,21258]"/>
  <match src=".: . [7620,7621]" dest=".: . [7719,7720]"/>
  <match src="identifier: candidate [104371,104380]" dest="identifier: candidate [42189,42198]"/>
  <match src="identifier: amount [20439,20445]" dest="identifier: amount [63543,63549]"/>
  <match src="call_argument [37056,37061]" dest="call_argument [52728,52733]"/>
  <match src="(: ( [45039,45040]" dest="(: ( [14293,14294]"/>
  <match src="type_name [69841,69848]" dest="type_name [65182,65189]"/>
  <match src="variable_declaration [34633,34647]" dest="variable_declaration [50305,50319]"/>
  <match src="identifier: self [8313,8317]" dest="identifier: self [8412,8416]"/>
  <match src="identifier: totalCoupons [93509,93521]" dest="identifier: totalCoupons [31295,31307]"/>
  <match src="visibility [99894,99902]" dest="visibility [37712,37720]"/>
  <match src="return: return [93565,93571]" dest="return: return [31351,31357]"/>
  <match src="-: - [1984,1985]" dest="-: - [2038,2039]"/>
  <match src="identifier: newPhantomFromBonded [83628,83648]" dest="identifier: expirationEpoch [61047,61062]"/>
  <match src="state_mutability [10208,10212]" dest="state_mutability [10307,10311]"/>
  <match src="identifier: input [35022,35027]" dest="identifier: input [50694,50699]"/>
  <match src="pragma: pragma [26,32]" dest="pragma: pragma [80,86]"/>
  <match src="member_expression [101937,101952]" dest="member_expression [39755,39770]"/>
  <match src="expression_statement [101695,101755]" dest="expression_statement [39513,39573]"/>
  <match src="): ) [35808,35809]" dest="): ) [51480,51481]"/>
  <match src="primitive_type [22607,22614]" dest="primitive_type [63207,63214]"/>
  <match src="]: ] [103243,103244]" dest="]: ] [41061,41062]"/>
  <match src="function_body [92908,92956]" dest="function_body [30694,30742]"/>
  <match src="identifier: payloadA [29678,29686]" dest="identifier: payloadA [45350,45358]"/>
  <match src="primitive_type [12734,12741]" dest="primitive_type [22410,22417]"/>
  <match src=".: . [29459,29460]" dest=".: . [45131,45132]"/>
  <match src="identifier: file [31818,31822]" dest="identifier: file [47490,47494]"/>
  <match src=".: . [101701,101702]" dest=".: . [39519,39520]"/>
  <match src="member_expression [104183,104223]" dest="member_expression [42001,42041]"/>
  <match src="call_argument [83008,83018]" dest="call_argument [70732,70742]"/>
  <match src="(: ( [102863,102864]" dest="(: ( [40681,40682]"/>
  <match src="parameter [12618,12625]" dest="parameter [22294,22301]"/>
  <match src="function: function [93172,93180]" dest="function: function [30958,30966]"/>
  <match src="identifier: currentLock [105094,105105]" dest="identifier: currentLock [42912,42923]"/>
  <match src="function: function [895,903]" dest="function: function [949,957]"/>
  <match src="comment: // ', ' [28576,28583]" dest="comment: // ', ' [44248,44255]"/>
  <match src="primitive_type [90436,90440]" dest="primitive_type [75508,75512]"/>
  <match src="false [98851,98856]" dest="false [36669,36674]"/>
  <match src="&quot;: &quot; [84736,84737]" dest="&quot;: &quot; [79153,79154]"/>
  <match src="member_expression [102146,102160]" dest="member_expression [39964,39978]"/>
  <match src="state_mutability [46772,46776]" dest="state_mutability [16026,16030]"/>
  <match src="type_name [22590,22597]" dest="type_name [63190,63197]"/>
  <match src="user_defined_type [65483,65495]" dest="user_defined_type [18751,18763]"/>
  <match src=",: , [87897,87898]" dest=",: , [28026,28027]"/>
  <match src=".: . [102135,102136]" dest=".: . [39953,39954]"/>
  <match src="&lt;=: &lt;= [96459,96461]" dest="&lt;=: &lt;= [34245,34247]"/>
  <match src="bytes: bytes [54778,54783]" dest="bytes: bytes [21772,21777]"/>
  <match src=":: : [45364,45365]" dest=":: : [14618,14619]"/>
  <match src="bytes: bytes [36204,36209]" dest="bytes: bytes [51876,51881]"/>
  <match src="identifier: reason [9144,9150]" dest="identifier: reason [9243,9249]"/>
  <match src="public: public [93195,93201]" dest="public: public [30981,30987]"/>
  <match src="call_argument [101275,101281]" dest="call_argument [39093,39099]"/>
  <match src="using_directive [91870,91901]" dest="using_directive [29656,29687]"/>
  <match src="identifier: b [7625,7626]" dest="identifier: b [7724,7725]"/>
  <match src="): ) [35806,35807]" dest="): ) [51478,51479]"/>
  <match src="{: { [96307,96308]" dest="{: { [34093,34094]"/>
  <match src="): ) [103047,103048]" dest="): ) [40865,40866]"/>
  <match src="uint256: uint256 [7505,7512]" dest="uint256: uint256 [7604,7611]"/>
  <match src="public: public [93087,93093]" dest="public: public [30873,30879]"/>
  <match src="identifier: skim [54823,54827]" dest="identifier: skim [21817,21821]"/>
  <match src="primitive_type [98827,98831]" dest="primitive_type [36645,36649]"/>
  <match src="identifier: Decimal [64198,64205]" dest="identifier: Decimal [64980,64987]"/>
  <match src="(: ( [81762,81763]" dest="(: ( [70942,70943]"/>
  <match src="call_expression [32796,33083]" dest="call_expression [48468,48755]"/>
  <match src="identifier: Candidate [88668,88677]" dest="identifier: Candidate [28797,28806]"/>
  <match src="if_statement [2566,2613]" dest="if_statement [2620,2667]"/>
  <match src="): ) [95411,95412]" dest="): ) [33197,33198]"/>
  <match src="call_argument [100686,100692]" dest="call_argument [38504,38510]"/>
  <match src="identifier: newClaimable [82361,82373]" dest="identifier: reward [82566,82572]"/>
  <match src="address: address [104492,104499]" dest="address: address [42310,42317]"/>
  <match src="): ) [35556,35557]" dest="): ) [51228,51229]"/>
  <match src=",: , [80390,80391]" dest=",: , [69773,69774]"/>
  <match src="parameter [101147,101161]" dest="parameter [38965,38979]"/>
  <match src="binary_expression [103437,103468]" dest="binary_expression [41255,41286]"/>
  <match src="identifier: candidate [105273,105282]" dest="identifier: candidate [43091,43100]"/>
  <match src="call_argument [37197,37199]" dest="call_argument [52869,52871]"/>
  <match src="public: public [95065,95071]" dest="public: public [32851,32857]"/>
  <match src="address: address [51160,51167]" dest="address: address [54768,54775]"/>
  <match src="(: ( [8450,8451]" dest="(: ( [8549,8550]"/>
  <match src="type_name [93969,93976]" dest="type_name [31755,31762]"/>
  <match src="number_literal: 2 [36580,36581]" dest="number_literal: 2 [52252,52253]"/>
  <match src="memory: memory [99648,99654]" dest="memory: memory [37466,37472]"/>
  <match src="]: ] [36276,36277]" dest="]: ] [51948,51949]"/>
  <match src=",: , [84318,84319]" dest=",: , [58337,58338]"/>
  <match src="call_argument [99433,99439]" dest="call_argument [37251,37257]"/>
  <match src="identifier: amount [75863,75869]" dest="identifier: amount [63376,63382]"/>
  <match src="variable_declaration_statement [35235,35250]" dest="variable_declaration_statement [50907,50922]"/>
  <match src="parameter [30517,30526]" dest="parameter [46189,46198]"/>
  <match src="): ) [928,929]" dest="): ) [982,983]"/>
  <match src="identifier: stringify [36928,36937]" dest="identifier: stringify [52600,52609]"/>
  <match src="string: string [92112,92118]" dest="string: string [29898,29904]"/>
  <match src="type_name [103746,103753]" dest="type_name [41564,41571]"/>
  <match src="=: = [43298,43299]" dest="=: = [12552,12553]"/>
  <match src=":: : [44931,44932]" dest=":: : [14185,14186]"/>
  <match src="variable_declaration_statement [97773,97808]" dest="variable_declaration_statement [35559,35594]"/>
  <match src="]: ] [100992,100993]" dest="]: ] [38810,38811]"/>
  <match src="): ) [95342,95343]" dest="): ) [33128,33129]"/>
  <match src="return_type_definition [62692,62709]" dest="return_type_definition [26561,26578]"/>
  <match src="external: external [54840,54848]" dest="external: external [21834,21842]"/>
  <match src="): ) [51687,51688]" dest="): ) [64102,64103]"/>
  <match src="primitive_type [72247,72251]" dest="primitive_type [80676,80680]"/>
  <match src="array_access [36314,36323]" dest="array_access [51986,51995]"/>
  <match src="member_expression [84250,84267]" dest="member_expression [58950,58963]"/>
  <match src="(: ( [12592,12593]" dest="(: ( [22268,22269]"/>
  <match src="view: view [92663,92667]" dest="view: view [30449,30453]"/>
  <match src="member_expression [81645,81678]" dest="member_expression [70850,70883]"/>
  <match src="pure: pure [32695,32699]" dest="pure: pure [48367,48371]"/>
  <match src="private: private [43996,44003]" dest="private: private [13250,13257]"/>
  <match src="type_cast_expression [36285,36302]" dest="type_cast_expression [51957,51974]"/>
  <match src="false: false [98851,98856]" dest="false: false [36669,36674]"/>
  <match src="}: } [102195,102196]" dest="}: } [40013,40014]"/>
  <match src="call_expression [6968,6996]" dest="call_expression [7067,7095]"/>
  <match src="primitive_type [94765,94772]" dest="primitive_type [32551,32558]"/>
  <match src="variable_declaration [35207,35216]" dest="variable_declaration [50879,50888]"/>
  <match src="pure: pure [39726,39730]" dest="pure: pure [17271,17275]"/>
  <match src="address: address [96741,96748]" dest="address: address [34527,34534]"/>
  <match src="visibility [26691,26698]" dest="visibility [59092,59099]"/>
  <match src="type_name [97329,97336]" dest="type_name [35115,35122]"/>
  <match src="variable_declaration_statement [37547,37569]" dest="variable_declaration_statement [53219,53241]"/>
  <match src="primitive_type [98647,98654]" dest="primitive_type [36465,36472]"/>
  <match src="(: ( [81250,81251]" dest="(: ( [71440,71441]"/>
  <match src="string [82803,82839]" dest="string [79705,79719]"/>
  <match src="return_type_definition [54551,54565]" dest="return_type_definition [21545,21559]"/>
  <match src="=: = [82374,82375]" dest="=: = [78156,78157]"/>
  <match src="variable_declaration_statement [36560,36582]" dest="variable_declaration_statement [52232,52254]"/>
  <match src="(: ( [53805,53806]" dest="(: ( [20799,20800]"/>
  <match src="uint256: uint256 [80127,80134]" dest="uint256: uint256 [69642,69649]"/>
  <match src="): ) [9706,9707]" dest="): ) [9805,9806]"/>
  <match src=".: . [103843,103844]" dest=".: . [41661,41662]"/>
  <match src="(: ( [31639,31640]" dest="(: ( [47311,47312]"/>
  <match src="): ) [22750,22751]" dest="): ) [63271,63272]"/>
  <match src="if: if [32716,32718]" dest="if: if [48388,48390]"/>
  <match src="&quot;: &quot; [83278,83279]" dest="&quot;: &quot; [79987,79988]"/>
  <match src="uint256: uint256 [76211,76218]" dest="uint256: uint256 [61913,61920]"/>
  <match src="uint256: uint256 [71776,71783]" dest="uint256: uint256 [65781,65788]"/>
  <match src="memory: memory [100052,100058]" dest="memory: memory [37870,37876]"/>
  <match src="member_expression [103003,103016]" dest="member_expression [40821,40834]"/>
  <match src="): ) [6995,6996]" dest="): ) [7094,7095]"/>
  <match src="identifier: from [98663,98667]" dest="identifier: from [36481,36485]"/>
  <match src="(: ( [9935,9936]" dest="(: ( [10034,10035]"/>
  <match src="parameter [54560,54564]" dest="parameter [21554,21558]"/>
  <match src="uint256: uint256 [14574,14581]" dest="uint256: uint256 [24250,24257]"/>
  <match src="event_definition [80209,80261]" dest="event_definition [77313,77378]"/>
  <match src="identifier: Constants [95272,95281]" dest="identifier: Constants [33058,33067]"/>
  <match src="parameter [46132,46139]" dest="parameter [15386,15393]"/>
  <match src="expression_statement [103837,103882]" dest="expression_statement [41655,41700]"/>
  <match src="type_name [29896,29903]" dest="type_name [45568,45575]"/>
  <match src="identifier: payloadA [30289,30297]" dest="identifier: payloadA [45961,45969]"/>
  <match src="variable_declaration [37457,37466]" dest="variable_declaration [53129,53138]"/>
  <match src="(: ( [106697,106698]" dest="(: ( [68626,68627]"/>
  <match src="primitive_type [1375,1382]" dest="primitive_type [1429,1436]"/>
  <match src="primitive_type [78584,78591]" dest="primitive_type [59273,59280]"/>
  <match src="primitive_type [37457,37464]" dest="primitive_type [53129,53136]"/>
  <match src="type_name [74877,74884]" dest="type_name [55311,55318]"/>
  <match src=",: , [81868,81869]" dest=",: , [72056,72057]"/>
  <match src="identifier: reason [32941,32947]" dest="identifier: reason [48613,48619]"/>
  <match src="bytes: bytes [36178,36183]" dest="bytes: bytes [51850,51855]"/>
  <match src="identifier: _state [101301,101307]" dest="identifier: _state [39119,39125]"/>
  <match src="&lt;: &lt; [8556,8557]" dest="&lt;: &lt; [8655,8656]"/>
  <match src="return: return [93452,93458]" dest="return: return [31238,31244]"/>
  <match src="pure: pure [45443,45447]" dest="pure: pure [14697,14701]"/>
  <match src="=: = [28707,28708]" dest="=: = [44379,44380]"/>
  <match src="identifier: _state [100649,100655]" dest="identifier: _state [38467,38473]"/>
  <match src="primitive_type [28955,28961]" dest="primitive_type [44627,44633]"/>
  <match src="identifier: to [14844,14846]" dest="identifier: to [24520,24522]"/>
  <match src="identifier: result [36314,36320]" dest="identifier: result [51986,51992]"/>
  <match src="private: private [26691,26698]" dest="private: private [59092,59099]"/>
  <match src="identifier: D256 [45314,45318]" dest="identifier: D256 [14568,14572]"/>
  <match src="identifier: payloadA [31866,31874]" dest="identifier: payloadA [47538,47546]"/>
  <match src="identifier: EpochStrategy [95116,95129]" dest="identifier: EpochStrategy [32902,32915]"/>
  <match src="view: view [53486,53490]" dest="view: view [20480,20484]"/>
  <match src="identifier: must [31106,31110]" dest="identifier: must [46778,46782]"/>
  <match src="identifier: candidate [97297,97306]" dest="identifier: candidate [35083,35092]"/>
  <match src=".: . [82201,82202]" dest=".: . [71369,71370]"/>
  <match src="address: address [15066,15073]" dest="address: address [24742,24749]"/>
  <match src="function_body [31249,31758]" dest="function_body [46921,47430]"/>
  <match src="identifier: self [9754,9758]" dest="identifier: self [9853,9857]"/>
  <match src="type_name [94258,94265]" dest="type_name [32044,32051]"/>
  <match src=",: , [10033,10034]" dest=",: , [10132,10133]"/>
  <match src="primitive_type [29312,29319]" dest="primitive_type [44984,44991]"/>
  <match src="primitive_type [35959,35966]" dest="primitive_type [51631,51638]"/>
  <match src="primitive_type [74860,74867]" dest="primitive_type [55294,55301]"/>
  <match src="type_name [10184,10188]" dest="type_name [10283,10287]"/>
  <match src="returns: returns [45297,45304]" dest="returns: returns [14551,14558]"/>
  <match src="type_name [6657,6661]" dest="type_name [6756,6760]"/>
  <match src="identifier: epochs [102057,102063]" dest="identifier: epochs [39875,39881]"/>
  <match src="identifier: a [916,917]" dest="identifier: a [970,971]"/>
  <match src="if: if [31260,31262]" dest="if: if [46932,46934]"/>
  <match src="member_expression [102309,102341]" dest="member_expression [40127,40159]"/>
  <match src="{: { [93225,93226]" dest="{: { [31011,31012]"/>
  <match src="identifier: sender [20814,20820]" dest="identifier: sender [64147,64153]"/>
  <match src="expression_statement [102121,102189]" dest="expression_statement [39939,40007]"/>
  <match src="array_access [100649,100673]" dest="array_access [38467,38491]"/>
  <match src="): ) [53373,53374]" dest="): ) [20367,20368]"/>
  <match src="{: { [46838,46839]" dest="{: { [16092,16093]"/>
  <match src=".: . [72170,72171]" dest=".: . [58295,58296]"/>
  <match src="(: ( [82393,82394]" dest="(: ( [78167,78168]"/>
  <match src="identifier: coupons [102028,102035]" dest="identifier: coupons [39846,39853]"/>
  <match src="member_expression [103156,103195]" dest="member_expression [40974,41013]"/>
  <match src="return: return [92919,92925]" dest="return: return [30705,30711]"/>
  <match src="return_statement [103485,103492]" dest="return_statement [41303,41310]"/>
  <match src="type_name [64231,64238]" dest="type_name [60162,60169]"/>
  <match src="call_argument [29714,29720]" dest="call_argument [45386,45392]"/>
  <match src="if_statement [33354,33923]" dest="if_statement [49026,49595]"/>
  <match src="type_name [91856,91863]" dest="type_name [29642,29649]"/>
  <match src=".: . [88739,88740]" dest=".: . [28868,28869]"/>
  <match src="return: return [7589,7595]" dest="return: return [7688,7694]"/>
  <match src="address: address [99007,99014]" dest="address: address [36825,36832]"/>
  <match src="call_expression [94630,94637]" dest="call_expression [32416,32423]"/>
  <match src="function_definition [36919,37898]" dest="function_definition [52591,53570]"/>
  <match src="identifier: epochs [103610,103616]" dest="identifier: epochs [41428,41434]"/>
  <match src="parenthesized_expression [30681,31050]" dest="parenthesized_expression [46353,46722]"/>
  <match src="comment: // SPDX-License-Identifier: GPL-3.0-or-later [55489,55533]" dest="comment: // File: contracts/external/Require.sol [43135,43174]"/>
  <match src="function: function [46998,47006]" dest="function: function [16252,16260]"/>
  <match src="binary_expression [105084,105105]" dest="binary_expression [42902,42923]"/>
  <match src=".: . [45352,45353]" dest=".: . [14606,14607]"/>
  <match src="pragma_directive [26,59]" dest="pragma_directive [80,113]"/>
  <match src="): ) [90845,90846]" dest="): ) [75917,75918]"/>
  <match src="identifier: msg [82686,82689]" dest="identifier: msg [78918,78921]"/>
  <match src="library: library [42740,42747]" dest="library: library [11994,12001]"/>
  <match src="parameter [92899,92906]" dest="parameter [30685,30692]"/>
  <match src="-: - [37794,37795]" dest="-: - [53466,53467]"/>
  <match src=",: , [82801,82802]" dest=",: , [78890,78891]"/>
  <match src="?: ? [11176,11177]" dest="?: ? [11275,11276]"/>
  <match src="member_expression [93028,93043]" dest="member_expression [30814,30829]"/>
  <match src="library: library [6309,6316]" dest="library: library [6408,6415]"/>
  <match src="primitive_type [10860,10867]" dest="primitive_type [10959,10966]"/>
  <match src="visibility [90366,90374]" dest="visibility [75438,75446]"/>
  <match src="visibility [43932,43939]" dest="visibility [13186,13193]"/>
  <match src="=: = [28612,28613]" dest="=: = [44284,44285]"/>
  <match src="primitive_type [973,980]" dest="primitive_type [1027,1034]"/>
  <match src=",: , [104837,104838]" dest=",: , [42655,42656]"/>
  <match src="primitive_type [2625,2632]" dest="primitive_type [2679,2686]"/>
  <match src=".: . [45578,45579]" dest=".: . [14832,14833]"/>
  <match src="emit_statement [20800,20841]" dest="emit_statement [64127,64181]"/>
  <match src="identifier: candidate [104097,104106]" dest="identifier: candidate [41915,41924]"/>
  <match src="if_statement [31976,32545]" dest="if_statement [47648,48217]"/>
  <match src="identifier: b [9478,9479]" dest="identifier: b [9577,9578]"/>
  <match src="primitive_type [97193,97200]" dest="primitive_type [34979,34986]"/>
  <match src="user_defined_type [45571,45583]" dest="user_defined_type [14825,14837]"/>
  <match src="return_statement [46275,46306]" dest="return_statement [15529,15560]"/>
  <match src="visibility [62581,62587]" dest="visibility [26450,26456]"/>
  <match src="type_name [99325,99332]" dest="type_name [37143,37150]"/>
  <match src="type_name [87464,87471]" dest="type_name [27593,27600]"/>
  <match src="parameter [53245,53257]" dest="parameter [20239,20251]"/>
  <match src="): ) [5453,5454]" dest="): ) [5507,5508]"/>
  <match src="uint256: uint256 [87342,87349]" dest="uint256: uint256 [27471,27478]"/>
  <match src="array_access [103994,104022]" dest="array_access [41812,41840]"/>
  <match src="): ) [99978,99979]" dest="): ) [37796,37797]"/>
  <match src="identifier: epochTime [95053,95062]" dest="identifier: epochTime [32839,32848]"/>
  <match src="primitive_type [80221,80228]" dest="primitive_type [77326,77333]"/>
  <match src="call_argument [31562,31570]" dest="call_argument [47234,47242]"/>
  <match src="type_name [14848,14855]" dest="type_name [24524,24531]"/>
  <match src="call_expression [32424,32443]" dest="call_expression [48096,48115]"/>
  <match src="call_argument [90874,90931]" dest="call_argument [75946,76003]"/>
  <match src="(: ( [95216,95217]" dest="(: ( [33002,33003]"/>
  <match src="yul_function_call [86425,86445]" dest="yul_function_call [73732,73752]"/>
  <match src="yul_identifier [34799,34805]" dest="yul_identifier [50471,50477]"/>
  <match src="function: function [53381,53389]" dest="function: function [20375,20383]"/>
  <match src="{: { [962,963]" dest="{: { [1016,1017]"/>
  <match src="external: external [98809,98817]" dest="external: external [36627,36635]"/>
  <match src="identifier: amount [76427,76433]" dest="identifier: amount [63894,63900]"/>
  <match src="): ) [8835,8836]" dest="): ) [8934,8935]"/>
  <match src="=: = [44036,44037]" dest="=: = [13290,13291]"/>
  <match src="parameter [53545,53560]" dest="parameter [20539,20554]"/>
  <match src="returns: returns [13074,13081]" dest="returns: returns [22750,22757]"/>
  <match src="): ) [10342,10343]" dest="): ) [10441,10442]"/>
  <match src="address: address [93931,93938]" dest="address: address [31717,31724]"/>
  <match src="return: return [1429,1435]" dest="return: return [1483,1489]"/>
  <match src="enum_value: Locked [87238,87244]" dest="enum_value: Locked [27367,27373]"/>
  <match src="binary_expression [34341,34346]" dest="binary_expression [50013,50018]"/>
  <match src="(: ( [99782,99783]" dest="(: ( [37600,37601]"/>
  <match src="call_argument [7625,7636]" dest="call_argument [7724,7735]"/>
  <match src="(: ( [83679,83680]" dest="(: ( [71852,71853]"/>
  <match src="function: function [9056,9064]" dest="function: function [9155,9163]"/>
  <match src="byte: byte [38185,38189]" dest="byte: byte [53857,53861]"/>
  <match src="type_name [43512,43519]" dest="type_name [12766,12773]"/>
  <match src="call_argument [83915,83920]" dest="call_argument [79800,79809]"/>
  <match src="): ) [22005,22006]" dest="): ) [63024,63025]"/>
  <match src="variable_declaration_statement [37165,37201]" dest="variable_declaration_statement [52837,52873]"/>
  <match src=".: . [104219,104220]" dest=".: . [42037,42038]"/>
  <match src="identifier: z [36714,36715]" dest="identifier: z [52386,52387]"/>
  <match src="(: ( [96108,96109]" dest="(: ( [33894,33895]"/>
  <match src="comment: // ============ Constants ============ [28296,28334]" dest="comment: // ============ Constants ============ [43968,44006]"/>
  <match src="): ) [100159,100160]" dest="): ) [37977,37978]"/>
  <match src="{: { [97762,97763]" dest="{: { [35548,35549]"/>
  <match src="identifier: coupons [103177,103184]" dest="identifier: coupons [40995,41002]"/>
  <match src="): ) [29742,29743]" dest="): ) [45414,45415]"/>
  <match src="identifier: compareTo [10097,10106]" dest="identifier: compareTo [10196,10205]"/>
  <match src="(: ( [84255,84256]" dest="(: ( [58956,58957]"/>
  <match src="function_definition [54271,54380]" dest="function_definition [21265,21374]"/>
  <match src=".: . [95020,95021]" dest=".: . [32806,32807]"/>
  <match src="}: } [91120,91121]" dest="}: } [76192,76193]"/>
  <match src="): ) [35412,35413]" dest="): ) [51084,51085]"/>
  <match src="}: } [9493,9494]" dest="}: } [9592,9593]"/>
  <match src="{: { [88269,88270]" dest="{: { [28398,28399]"/>
  <match src="parameter [98793,98807]" dest="parameter [36611,36625]"/>
  <match src="identifier: b [989,990]" dest="identifier: b [1043,1044]"/>
  <match src="member_expression [29456,29472]" dest="member_expression [45128,45144]"/>
  <match src="): ) [36351,36352]" dest="): ) [52023,52024]"/>
  <match src="byte: byte [38085,38089]" dest="byte: byte [53757,53761]"/>
  <match src=".: . [101638,101639]" dest=".: . [39456,39457]"/>
  <match src="(: ( [7559,7560]" dest="(: ( [7658,7659]"/>
  <match src="type_name [29264,29271]" dest="type_name [44936,44943]"/>
  <match src="primitive_type [75659,75666]" dest="primitive_type [55537,55544]"/>
  <match src="state_mutability [93418,93422]" dest="state_mutability [31204,31208]"/>
  <match src="block_statement [31987,32545]" dest="block_statement [47659,48217]"/>
  <match src="variable_declaration [73092,73124]" dest="variable_declaration [71323,71337]"/>
  <match src="[: [ [101220,101221]" dest="[: [ [39038,39039]"/>
  <match src="identifier: strategy [95466,95474]" dest="identifier: strategy [33252,33260]"/>
  <match src="}: } [23941,23942]" dest="}: } [55504,55505]"/>
  <match src="number_literal: 1e9 [43205,43208]" dest="number_literal: 1e9 [12459,12462]"/>
  <match src="(: ( [45280,45281]" dest="(: ( [14534,14535]"/>
  <match src="parameter [33263,33279]" dest="parameter [48935,48951]"/>
  <match src="type_name [98906,98913]" dest="type_name [36724,36731]"/>
  <match src="}: } [31750,31751]" dest="}: } [47422,47423]"/>
  <match src="user_defined_type [9196,9200]" dest="user_defined_type [9295,9299]"/>
  <match src="uint256: uint256 [96393,96400]" dest="uint256: uint256 [34179,34186]"/>
  <match src="): ) [14173,14174]" dest="): ) [23849,23850]"/>
  <match src=".: . [99236,99237]" dest=".: . [37054,37055]"/>
  <match src="function: function [54814,54822]" dest="function: function [21808,21816]"/>
  <match src="memory: memory [9111,9117]" dest="memory: memory [9210,9216]"/>
  <match src="(: ( [97391,97392]" dest="(: ( [35177,35178]"/>
  <match src="parameter [10768,10785]" dest="parameter [10867,10884]"/>
  <match src="): ) [92201,92202]" dest="): ) [29987,29988]"/>
  <match src="function_definition [44552,44640]" dest="function_definition [13806,13894]"/>
  <match src="emit: emit [81055,81059]" dest="emit: emit [70628,70632]"/>
  <match src="struct_member [87594,87610]" dest="struct_member [27723,27739]"/>
  <match src="uint256: uint256 [5405,5412]" dest="uint256: uint256 [5459,5466]"/>
  <match src="state_mutability [44808,44812]" dest="state_mutability [14062,14066]"/>
  <match src="expression_statement [101589,101685]" dest="expression_statement [39407,39503]"/>
  <match src="event_paramater [80221,80244]" dest="event_paramater [77326,77349]"/>
  <match src="address: address [96877,96884]" dest="address: address [34663,34670]"/>
  <match src="type_name [66947,66959]" dest="type_name [66894,66906]"/>
  <match src="): ) [7803,7804]" dest="): ) [7902,7903]"/>
  <match src="identifier: accounts [100976,100984]" dest="identifier: accounts [38794,38802]"/>
  <match src="primitive_type [95701,95708]" dest="primitive_type [33487,33494]"/>
  <match src="return_type_definition [8183,8204]" dest="return_type_definition [8282,8303]"/>
  <match src="identifier: _state [99705,99711]" dest="identifier: _state [37523,37529]"/>
  <match src="[: [ [37261,37262]" dest="[: [ [52933,52934]"/>
  <match src=",: , [103951,103952]" dest=",: , [41769,41770]"/>
  <match src="function: function [53446,53454]" dest="function: function [20440,20448]"/>
  <match src="type_name [54353,54359]" dest="type_name [21347,21353]"/>
  <match src="identifier: stringifyTruncated [29027,29045]" dest="identifier: stringifyTruncated [44699,44717]"/>
  <match src=".: . [68157,68158]" dest=".: . [79399,79400]"/>
  <match src="): ) [34805,34806]" dest="): ) [50477,50478]"/>
  <match src="function_body [35091,35922]" dest="function_body [50763,51594]"/>
  <match src="(: ( [53430,53431]" dest="(: ( [20424,20425]"/>
  <match src="(: ( [97328,97329]" dest="(: ( [35114,35115]"/>
  <match src="(: ( [102774,102775]" dest="(: ( [40592,40593]"/>
  <match src=".: . [104759,104760]" dest=".: . [42577,42578]"/>
  <match src="member_expression [96183,96211]" dest="member_expression [33969,33997]"/>
  <match src="identifier: _approve [22566,22574]" dest="identifier: approveCoupons [63175,63189]"/>
  <match src="returns: returns [7350,7357]" dest="returns: returns [7449,7456]"/>
  <match src="function_body [101194,101374]" dest="function_body [39012,39192]"/>
  <match src="call_argument [10401,10405]" dest="call_argument [10500,10504]"/>
  <match src="=: = [102144,102145]" dest="=: = [39962,39963]"/>
  <match src="pure: pure [6638,6642]" dest="pure: pure [6737,6741]"/>
  <match src="member_expression [103603,103616]" dest="member_expression [41421,41434]"/>
  <match src="emit: emit [100790,100794]" dest="emit: emit [38608,38612]"/>
  <match src="function: function [99597,99605]" dest="function: function [37415,37423]"/>
  <match src="identifier: totalBonded [93073,93084]" dest="identifier: totalBonded [30859,30870]"/>
  <match src="call_expression [104392,104448]" dest="call_expression [42210,42266]"/>
  <match src="parameter [46255,46262]" dest="parameter [15509,15516]"/>
  <match src="parameter [45727,45746]" dest="parameter [14981,15000]"/>
  <match src="primitive_type [53899,53903]" dest="primitive_type [20893,20897]"/>
  <match src="): ) [54564,54565]" dest="): ) [21558,21559]"/>
  <match src="identifier: sender [82896,82902]" dest="identifier: sender [71647,71653]"/>
  <match src="pure: pure [44692,44696]" dest="pure: pure [13946,13950]"/>
  <match src=".: . [100655,100656]" dest=".: . [38473,38474]"/>
  <match src="identifier: epoch [95888,95893]" dest="identifier: epoch [33674,33679]"/>
  <match src="identifier: file [31402,31406]" dest="identifier: file [47074,47078]"/>
  <match src="): ) [72144,72145]" dest="): ) [58252,58253]"/>
  <match src="mapping: mapping [88053,88060]" dest="mapping: mapping [28182,28189]"/>
  <match src="state_variable_declaration [43988,44041]" dest="state_variable_declaration [13242,13295]"/>
  <match src="call_expression [20548,20619]" dest="call_expression [63660,63739]"/>
  <match src="state_mutability [52961,52965]" dest="state_mutability [19955,19959]"/>
  <match src="primitive_type [80507,80514]" dest="primitive_type [77185,77192]"/>
  <match src="identifier: getPoolExitLockupEpochs [46206,46229]" dest="identifier: getPoolExitLockupEpochs [15460,15483]"/>
  <match src="expression_statement [34497,34501]" dest="expression_statement [50169,50173]"/>
  <match src="identifier: D256 [6693,6697]" dest="identifier: D256 [6792,6796]"/>
  <match src="type_name [88407,88414]" dest="type_name [28536,28543]"/>
  <match src="identifier: amount [101677,101683]" dest="identifier: amount [39495,39501]"/>
  <match src="primitive_type [92637,92644]" dest="primitive_type [30423,30430]"/>
  <match src="call_argument [75329,75335]" dest="call_argument [55417,55423]"/>
  <match src="identifier: amount [20833,20839]" dest="identifier: amount [64173,64179]"/>
  <match src="identifier: fluidUntil [94666,94676]" dest="identifier: fluidUntil [32452,32462]"/>
  <match src="function: function [7455,7463]" dest="function: function [7554,7562]"/>
  <match src="{: { [2334,2335]" dest="{: { [2388,2389]"/>
  <match src="variable_declaration_statement [66387,66429]" dest="variable_declaration_statement [65343,65387]"/>
  <match src="identifier: b [7065,7066]" dest="identifier: b [7164,7165]"/>
  <match src="identifier: _state [100407,100413]" dest="identifier: _state [38225,38231]"/>
  <match src="): ) [93409,93410]" dest="): ) [31195,31196]"/>
  <match src="comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts with custom message on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      *      * _Available since v2.4.0._      */ [3346,3862]" dest="comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts with custom message on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      *      * _Available since v2.4.0._      */ [3400,3916]"/>
  <match src="function: function [53075,53083]" dest="function: function [20069,20077]"/>
  <match src="=&gt;: =&gt; [87350,87352]" dest="=&gt;: =&gt; [27479,27481]"/>
  <match src="visibility [45042,45050]" dest="visibility [14296,14304]"/>
  <match src="returns: returns [44697,44704]" dest="returns: returns [13951,13958]"/>
  <match src="): ) [94162,94163]" dest="): ) [31948,31949]"/>
  <match src="user_defined_type [88201,88208]" dest="user_defined_type [28330,28337]"/>
  <match src="comment: // populate the result with &quot;0x&quot; [37213,37245]" dest="comment: // populate the result with &quot;0x&quot; [52885,52917]"/>
  <match src="string: string [52721,52727]" dest="string: string [19715,19721]"/>
  <match src="type_name [43155,43162]" dest="type_name [12409,12416]"/>
  <match src="uint8: uint8 [37272,37277]" dest="uint8: uint8 [52944,52949]"/>
  <match src="type_name [102222,102229]" dest="type_name [40040,40047]"/>
  <match src="array_access [96183,96203]" dest="array_access [33969,33989]"/>
  <match src="visibility [45704,45712]" dest="visibility [14958,14966]"/>
  <match src="): ) [101183,101184]" dest="): ) [39001,39002]"/>
  <match src="return: return [92440,92446]" dest="return: return [30226,30232]"/>
  <match src="expression_statement [35313,35321]" dest="expression_statement [50985,50993]"/>
  <match src="type_name [101130,101137]" dest="type_name [38948,38955]"/>
  <match src="): ) [9631,9632]" dest="): ) [9730,9731]"/>
  <match src="primitive_type [96298,96305]" dest="primitive_type [34084,34091]"/>
  <match src="identifier: sender [82572,82578]" dest="identifier: sender [71926,71932]"/>
  <match src="string [20682,20722]" dest="string [62222,62253]"/>
  <match src="type_name [43697,43704]" dest="type_name [12951,12958]"/>
  <match src="return_statement [6686,6712]" dest="return_statement [6785,6811]"/>
  <match src="identifier: account [76202,76209]" dest="identifier: account [80645,80652]"/>
  <match src="(: ( [101804,101805]" dest="(: ( [39622,39623]"/>
  <match src="return: return [93128,93134]" dest="return: return [30914,30920]"/>
  <match src="): ) [80259,80260]" dest="): ) [77376,77377]"/>
  <match src="primitive_type [29427,29433]" dest="primitive_type [45099,45105]"/>
  <match src="external: external [53408,53416]" dest="external: external [20402,20410]"/>
  <match src="identifier: candidates [97227,97237]" dest="identifier: candidates [35013,35023]"/>
  <match src="visibility [100067,100075]" dest="visibility [37885,37893]"/>
  <match src="call_argument [37272,37289]" dest="call_argument [52944,52961]"/>
  <match src="internal: internal [103136,103144]" dest="internal: internal [40954,40962]"/>
  <match src="type_name [9106,9110]" dest="type_name [9205,9209]"/>
  <match src="uint256: uint256 [97055,97062]" dest="uint256: uint256 [34841,34848]"/>
  <match src="call_expression [5425,5454]" dest="call_expression [5479,5508]"/>
  <match src="identifier: value [80972,80977]" dest="identifier: value [70569,70574]"/>
  <match src="string [20581,20618]" dest="string [63693,63738]"/>
  <match src="pure: pure [46618,46622]" dest="pure: pure [15872,15876]"/>
  <match src="returns: returns [7783,7790]" dest="returns: returns [7882,7889]"/>
  <match src=",: , [10260,10261]" dest=",: , [10359,10360]"/>
  <match src="): ) [88630,88631]" dest="): ) [28759,28760]"/>
  <match src=",: , [53838,53839]" dest=",: , [20832,20833]"/>
  <match src="function_definition [92363,92487]" dest="function_definition [30149,30273]"/>
  <match src="call_argument [68229,68238]" dest="call_argument [79558,79576]"/>
  <match src="primitive_type [3903,3909]" dest="primitive_type [3957,3963]"/>
  <match src="uint256: uint256 [1375,1382]" dest="uint256: uint256 [1429,1436]"/>
  <match src="): ) [54924,54925]" dest="): ) [21918,21919]"/>
  <match src="(: ( [73657,73658]" dest="(: ( [80058,80059]"/>
  <match src="internal: internal [102440,102448]" dest="internal: internal [40258,40266]"/>
  <match src="{: { [106154,106155]" dest="{: { [68083,68084]"/>
  <match src="function_body [46947,46990]" dest="function_body [16201,16244]"/>
  <match src="string: string [101163,101169]" dest="string: string [38981,38987]"/>
  <match src="identifier: _state [96183,96189]" dest="identifier: _state [33969,33975]"/>
  <match src="member_expression [100115,100144]" dest="member_expression [37933,37962]"/>
  <match src="identifier: sub [100141,100144]" dest="identifier: sub [37959,37962]"/>
  <match src=".: . [101595,101596]" dest=".: . [39413,39414]"/>
  <match src="returns: returns [97612,97619]" dest="returns: returns [35398,35405]"/>
  <match src="member_expression [100383,100397]" dest="member_expression [38201,38215]"/>
  <match src="&quot;: &quot; [84564,84565]" dest="&quot;: &quot; [71979,71980]"/>
  <match src="): ) [51484,51485]" dest="): ) [63977,63978]"/>
  <match src=".: . [82025,82026]" dest=".: . [72127,72128]"/>
  <match src="{: { [88451,88452]" dest="{: { [28580,28581]"/>
  <match src="(: ( [31263,31264]" dest="(: ( [46935,46936]"/>
  <match src="call_argument [104839,104845]" dest="call_argument [42657,42663]"/>
  <match src=",: , [80789,80790]" dest=",: , [70377,70378]"/>
  <match src="parameter [37988,37992]" dest="parameter [53660,53664]"/>
  <match src="}: } [45821,45822]" dest="}: } [15075,15076]"/>
  <match src="parameter [7946,7955]" dest="parameter [8045,8054]"/>
  <match src="uint256: uint256 [98689,98696]" dest="uint256: uint256 [36507,36514]"/>
  <match src="identifier: _state [93349,93355]" dest="identifier: _state [31135,31141]"/>
  <match src="identifier: account [106145,106152]" dest="identifier: account [68074,68081]"/>
  <match src="function_body [21186,21437]" dest="function_body [55949,56053]"/>
  <match src="member_expression [77095,77106]" dest="member_expression [61065,61076]"/>
  <match src="call_struct_argument [8806,8836]" dest="call_struct_argument [8905,8935]"/>
  <match src="function: function [46321,46329]" dest="function: function [15575,15583]"/>
  <match src="&quot;: &quot; [25887,25888]" dest="&quot;: &quot; [77785,77786]"/>
  <match src="parameter [97440,97457]" dest="parameter [35226,35243]"/>
  <match src="call_expression [8051,8068]" dest="call_expression [8150,8167]"/>
  <match src="type_name [9079,9083]" dest="type_name [9178,9182]"/>
  <match src="identifier: stringify [33008,33017]" dest="identifier: stringify [48680,48689]"/>
  <match src="public: public [96760,96766]" dest="public: public [34546,34552]"/>
  <match src="parameter [77997,78017]" dest="parameter [62085,62105]"/>
  <match src="address: address [31169,31176]" dest="address: address [46841,46848]"/>
  <match src="function_body [92548,92595]" dest="function_body [30334,30381]"/>
  <match src="identifier: that [29229,29233]" dest="identifier: that [44901,44905]"/>
  <match src=",: , [100477,100478]" dest=",: , [38295,38296]"/>
  <match src="public: public [97034,97040]" dest="public: public [34820,34826]"/>
  <match src="primitive_type [13407,13414]" dest="primitive_type [23083,23090]"/>
  <match src="identifier: incrementBalanceOfCoupons [101391,101416]" dest="identifier: incrementBalanceOfCoupons [39209,39234]"/>
  <match src="visibility [96896,96902]" dest="visibility [34682,34688]"/>
  <match src="(: ( [54291,54292]" dest="(: ( [21285,21286]"/>
  <match src="address: address [80278,80285]" dest="address: address [69834,69841]"/>
  <match src="for_statement [37452,37865]" dest="for_statement [53124,53537]"/>
  <match src=".: . [96670,96671]" dest=".: . [34456,34457]"/>
  <match src="(: ( [52905,52906]" dest="(: ( [19899,19900]"/>
  <match src="number_literal: 33e16 [43742,43747]" dest="number_literal: 33e16 [12996,13001]"/>
  <match src="unary_expression [29991,29996]" dest="unary_expression [45663,45668]"/>
  <match src=",: , [22869,22870]" dest=",: , [63426,63427]"/>
  <match src="): ) [46504,46505]" dest="): ) [15758,15759]"/>
  <match src="modifier_invocation [81432,81441]" dest="modifier_invocation [70714,70743]"/>
  <match src="identifier: accounts [88581,88589]" dest="identifier: accounts [28710,28718]"/>
  <match src="]: ] [93882,93883]" dest="]: ] [31668,31669]"/>
  <match src="function_definition [103064,103281]" dest="function_definition [40882,41099]"/>
  <match src="member_expression [80708,80718]" dest="member_expression [70323,70333]"/>
  <match src="identifier: epoch [96401,96406]" dest="identifier: epoch [34187,34192]"/>
  <match src="identifier: incrementTotalDebt [99473,99491]" dest="identifier: incrementTotalDebt [37291,37309]"/>
  <match src="identifier: initialized [97674,97685]" dest="identifier: initialized [35460,35471]"/>
  <match src="comment: /*     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [79070,79723]" dest="comment: // File: contracts/dao/Comptroller.sol [53912,53950]"/>
  <match src="identifier: D256 [9000,9004]" dest="identifier: D256 [9099,9103]"/>
  <match src="expression_statement [99914,99980]" dest="expression_statement [37732,37798]"/>
  <match src=",: , [31158,31159]" dest=",: , [46830,46831]"/>
  <match src="=: = [43740,43741]" dest="=: = [12994,12995]"/>
  <match src="member_expression [102050,102078]" dest="member_expression [39868,39896]"/>
  <match src="identifier: accounts [101902,101910]" dest="identifier: accounts [39720,39728]"/>
  <match src="identifier: amount [102608,102614]" dest="identifier: amount [40426,40432]"/>
  <match src="identifier: Swap [53801,53805]" dest="identifier: Swap [20795,20799]"/>
  <match src="identifier: file [30545,30549]" dest="identifier: file [46217,46221]"/>
  <match src="call_expression [7409,7436]" dest="call_expression [7508,7535]"/>
  <match src="function: function [3868,3876]" dest="function: function [3922,3930]"/>
  <match src="type_name [54090,54094]" dest="type_name [21084,21088]"/>
  <match src="primitive_type [66439,66446]" dest="primitive_type [62406,62413]"/>
  <match src="): ) [83358,83359]" dest="): ) [77538,77539]"/>
  <match src="visibility [97034,97040]" dest="visibility [34820,34826]"/>
  <match src="&quot;: &quot; [19816,19817]" dest="&quot;: &quot; [71500,71501]"/>
  <match src="identifier: epoch [94952,94957]" dest="identifier: epoch [32738,32743]"/>
  <match src="visibility [84204,84211]" dest="visibility [58199,58206]"/>
  <match src="call_argument [101359,101365]" dest="call_argument [39177,39183]"/>
  <match src="member_expression [101205,101236]" dest="member_expression [39023,39054]"/>
  <match src="identifier: D256 [46833,46837]" dest="identifier: D256 [16087,16091]"/>
  <match src=".: . [101339,101340]" dest=".: . [39157,39158]"/>
  <match src="type_name [7359,7363]" dest="type_name [7458,7462]"/>
  <match src="(: ( [92381,92382]" dest="(: ( [30167,30168]"/>
  <match src="identifier: _state [101895,101901]" dest="identifier: _state [39713,39719]"/>
  <match src="(: ( [28936,28937]" dest="(: ( [44608,44609]"/>
  <match src="): ) [98702,98703]" dest="): ) [36520,36521]"/>
  <match src="function_body [90375,90640]" dest="function_body [75447,75712]"/>
  <match src=".: . [100101,100102]" dest=".: . [37919,37920]"/>
  <match src="uint256: uint256 [87545,87552]" dest="uint256: uint256 [27674,27681]"/>
  <match src="identifier: msg [82022,82025]" dest="identifier: msg [72124,72127]"/>
  <match src="parameter [76510,76524]" dest="parameter [58884,58898]"/>
  <match src="call_argument [38190,38224]" dest="call_argument [53862,53896]"/>
  <match src=",: , [53560,53561]" dest=",: , [20554,20555]"/>
  <match src="new_expression [34957,34966]" dest="new_expression [50629,50638]"/>
  <match src="identifier: D256 [7112,7116]" dest="identifier: D256 [7211,7215]"/>
  <match src="primitive_type [90820,90827]" dest="primitive_type [75892,75899]"/>
  <match src="identifier: candidates [104760,104770]" dest="identifier: candidates [42578,42588]"/>
  <match src="{: { [100282,100283]" dest="{: { [38100,38101]"/>
  <match src="function_definition [52860,52912]" dest="function_definition [19854,19906]"/>
  <match src="call_argument [81462,81472]" dest="call_argument [70764,70774]"/>
  <match src="}: } [2737,2738]" dest="}: } [2791,2792]"/>
  <match src="]: ] [102282,102283]" dest="]: ] [40100,40101]"/>
  <match src="member_expression [104353,104370]" dest="member_expression [42171,42188]"/>
  <match src="identifier: Decimal [91888,91895]" dest="identifier: Decimal [29674,29681]"/>
  <match src="identifier: State [88574,88579]" dest="identifier: State [28703,28708]"/>
  <match src="revert_statement [33380,33912]" dest="revert_statement [49052,49584]"/>
  <match src="): ) [51191,51192]" dest="): ) [54799,54800]"/>
  <match src="function: function [92603,92611]" dest="function: function [30389,30397]"/>
  <match src="private: private [42872,42879]" dest="private: private [12126,12133]"/>
  <match src="enum: enum [87849,87853]" dest="enum: enum [27978,27982]"/>
  <match src="function: function [92756,92764]" dest="function: function [30542,30550]"/>
  <match src="returns: returns [46623,46630]" dest="returns: returns [15877,15884]"/>
  <match src="identifier: input [35219,35224]" dest="identifier: input [50891,50896]"/>
  <match src="identifier: Decimal [66387,66394]" dest="identifier: Decimal [65343,65350]"/>
  <match src="private: private [43651,43658]" dest="private: private [12905,12912]"/>
  <match src="primitive_type [104695,104702]" dest="primitive_type [42513,42520]"/>
  <match src="identifier: outstandingCouponsForEpoch [103369,103395]" dest="identifier: outstandingCouponsForEpoch [41187,41213]"/>
  <match src="identifier: State [91824,91829]" dest="identifier: State [29610,29615]"/>
  <match src="visibility [54121,54129]" dest="visibility [21115,21123]"/>
  <match src="member_expression [99914,99939]" dest="member_expression [37732,37757]"/>
  <match src="(: ( [96740,96741]" dest="(: ( [34526,34527]"/>
  <match src="(: ( [6739,6740]" dest="(: ( [6838,6839]"/>
  <match src="member_expression [45766,45778]" dest="member_expression [15020,15032]"/>
  <match src="(: ( [84303,84304]" dest="(: ( [58318,58319]"/>
  <match src="type_name [54654,54661]" dest="type_name [21648,21655]"/>
  <match src=",: , [20429,20430]" dest=",: , [63518,63519]"/>
  <match src="address: address [52562,52569]" dest="address: address [19556,19563]"/>
  <match src="primitive_type [87569,87576]" dest="primitive_type [27698,27705]"/>
  <match src="event_paramater [80127,80140]" dest="event_paramater [69642,69655]"/>
  <match src="call_expression [83863,83877]" dest="call_expression [58835,58849]"/>
  <match src="primitive_type [78668,78675]" dest="primitive_type [77400,77407]"/>
  <match src="primitive_type [100240,100247]" dest="primitive_type [38058,38065]"/>
  <match src="public: public [50239,50245]" dest="public: public [25678,25684]"/>
  <match src="identifier: value [14856,14861]" dest="identifier: value [24532,24537]"/>
  <match src="visibility [31225,31233]" dest="visibility [46897,46905]"/>
  <match src="function: function [33144,33152]" dest="function: function [48816,48824]"/>
  <match src="function_body [46384,46427]" dest="function_body [15638,15681]"/>
  <match src="comment: // populate the least-significant character [37585,37628]" dest="comment: // populate the least-significant character [53257,53300]"/>
  <match src="identifier: value [7615,7620]" dest="identifier: value [7714,7719]"/>
  <match src="user_defined_type [9742,9746]" dest="user_defined_type [9841,9845]"/>
  <match src="external: external [54799,54807]" dest="external: external [21793,21801]"/>
  <match src="&quot;: &quot; [106754,106755]" dest="&quot;: &quot; [68683,68684]"/>
  <match src="uint: uint [53271,53275]" dest="uint: uint [20265,20269]"/>
  <match src="number_literal: 0 [34967,34968]" dest="number_literal: 0 [50639,50640]"/>
  <match src="parameter [53259,53269]" dest="parameter [20253,20263]"/>
  <match src="=: = [36858,36859]" dest="=: = [52530,52531]"/>
  <match src="[: [ [101559,101560]" dest="[: [ [39377,39378]"/>
  <match src="): ) [51258,51259]" dest="): ) [54850,54851]"/>
  <match src="type_alias [71154,71162]" dest="type_alias [54662,54670]"/>
  <match src="return: return [97638,97644]" dest="return: return [35424,35430]"/>
  <match src="event_paramater [53951,53969]" dest="event_paramater [20945,20963]"/>
  <match src="): ) [50259,50260]" dest="): ) [25698,25699]"/>
  <match src="returns: returns [54191,54198]" dest="returns: returns [21185,21192]"/>
  <match src="identifier: Require [28279,28286]" dest="identifier: Require [43951,43958]"/>
  <match src="identifier: owner [102476,102481]" dest="identifier: owner [40294,40299]"/>
  <match src="parameter [97153,97170]" dest="parameter [34939,34956]"/>
  <match src="parameter [52975,52979]" dest="parameter [19969,19973]"/>
  <match src="type_name [69816,69823]" dest="type_name [65034,65041]"/>
  <match src="binary_expression [51454,51500]" dest="binary_expression [63942,63993]"/>
  <match src="identifier: newClaimable [80415,80427]" dest="identifier: bonded [77299,77305]"/>
  <match src="member_expression [68150,68162]" dest="member_expression [79392,79404]"/>
  <match src="parameter [92795,92802]" dest="parameter [30581,30588]"/>
  <match src="external: external [80565,80573]" dest="external: external [70181,70189]"/>
  <match src="identifier: EPOCH_PERIOD [44967,44979]" dest="identifier: EPOCH_PERIOD [14221,14233]"/>
  <match src="state_mutability [97041,97045]" dest="state_mutability [34827,34831]"/>
  <match src="constant: constant [43171,43179]" dest="constant: constant [12425,12433]"/>
  <match src="identifier: balance [99949,99956]" dest="identifier: balance [37767,37774]"/>
  <match src="parameter [72247,72251]" dest="parameter [80676,80680]"/>
  <match src="identifier: that [31086,31090]" dest="identifier: that [46758,46762]"/>
  <match src="string [49307,49316]" dest="string [55638,55682]"/>
  <match src="call_argument [51252,51258]" dest="call_argument [54844,54850]"/>
  <match src="call_struct_argument [6975,6993]" dest="call_struct_argument [7074,7092]"/>
  <match src="block_statement [8424,8465]" dest="block_statement [8523,8564]"/>
  <match src="memory: memory [100579,100585]" dest="memory: memory [38397,38403]"/>
  <match src="{: { [72119,72120]" dest="{: { [58207,58208]"/>
  <match src="member_expression [101485,101517]" dest="member_expression [39303,39335]"/>
  <match src="identifier: accounts [102729,102737]" dest="identifier: accounts [40547,40555]"/>
  <match src="returns: returns [14599,14606]" dest="returns: returns [24275,24282]"/>
  <match src="call_expression [9246,9277]" dest="call_expression [9345,9376]"/>
  <match src="string [92257,92263]" dest="string [30043,30049]"/>
  <match src="identifier: accounts [94373,94381]" dest="identifier: accounts [32159,32167]"/>
  <match src="bytes32: bytes32 [29871,29878]" dest="bytes32: bytes32 [45543,45550]"/>
  <match src="call_struct_argument [7835,7877]" dest="call_struct_argument [7934,7976]"/>
  <match src="identifier: amount [102511,102517]" dest="identifier: amount [40329,40335]"/>
  <match src=",: , [80977,80978]" dest=",: , [70574,70575]"/>
  <match src="uint: uint [52975,52979]" dest="uint: uint [19969,19973]"/>
  <match src="identifier: FILE [84545,84549]" dest="identifier: FILE [80120,80124]"/>
  <match src="function_definition [97134,97263]" dest="function_definition [34920,35049]"/>
  <match src="member_expression [100383,100404]" dest="member_expression [38201,38222]"/>
  <match src="variable_declaration [105006,105021]" dest="variable_declaration [42824,42839]"/>
  <match src="type_name [35529,35536]" dest="type_name [51201,51208]"/>
  <match src="parameter [104108,104122]" dest="parameter [41926,41940]"/>
  <match src="identifier: D256 [10329,10333]" dest="identifier: D256 [10428,10432]"/>
  <match src="call_expression [106641,106766]" dest="call_expression [68570,68695]"/>
  <match src="member_expression [103219,103266]" dest="member_expression [41037,41084]"/>
  <match src="identifier: Decimal [64210,64217]" dest="identifier: Decimal [64992,64999]"/>
  <match src="&quot;: &quot; [84381,84382]" dest="&quot;: &quot; [58393,58394]"/>
  <match src="function_body [92127,92177]" dest="function_body [29913,29963]"/>
  <match src="identifier: Decimal [46524,46531]" dest="identifier: Decimal [15778,15785]"/>
  <match src="type_name [32604,32611]" dest="type_name [48276,48283]"/>
  <match src="call_argument [104831,104837]" dest="call_argument [42649,42655]"/>
  <match src="primitive_type [64231,64238]" dest="primitive_type [60162,60169]"/>
  <match src="member_expression [100935,100950]" dest="member_expression [38753,38768]"/>
  <match src="type_alias [98603,98611]" dest="type_alias [36421,36429]"/>
  <match src="type_name [5405,5412]" dest="type_name [5459,5466]"/>
  <match src="(: ( [78114,78115]" dest="(: ( [57934,57935]"/>
  <match src=".: . [100129,100130]" dest=".: . [37947,37948]"/>
  <match src="identifier: redeemable [100130,100140]" dest="identifier: redeemable [37948,37958]"/>
  <match src="identifier: i [8547,8548]" dest="identifier: i [8646,8647]"/>
  <match src="identifier: outstandingCouponsForEpoch [103437,103463]" dest="identifier: outstandingCouponsForEpoch [41255,41281]"/>
  <match src="yul_path [91092,91109]" dest="yul_path [76164,76181]"/>
  <match src="(: ( [6931,6932]" dest="(: ( [7030,7031]"/>
  <match src="): ) [65457,65458]" dest="): ) [66875,66876]"/>
  <match src="type_name [7560,7564]" dest="type_name [7659,7663]"/>
  <match src="parenthesized_expression [28936,29193]" dest="parenthesized_expression [44608,44865]"/>
  <match src="pure: pure [44587,44591]" dest="pure: pure [13841,13845]"/>
  <match src=".: . [102070,102071]" dest=".: . [39888,39889]"/>
  <match src="(: ( [53210,53211]" dest="(: ( [20204,20205]"/>
  <match src="primitive_type [36178,36183]" dest="primitive_type [51850,51855]"/>
  <match src="pure: pure [52769,52773]" dest="pure: pure [19763,19767]"/>
  <match src="external: external [52760,52768]" dest="external: external [19754,19762]"/>
  <match src="uint: uint [54732,54736]" dest="uint: uint [21726,21730]"/>
  <match src="uint256: uint256 [105006,105013]" dest="uint256: uint256 [42824,42831]"/>
  <match src="address: address [85873,85880]" dest="address: address [73180,73187]"/>
  <match src="primitive_type [98889,98896]" dest="primitive_type [36707,36714]"/>
  <match src="array_access [103603,103623]" dest="array_access [41421,41441]"/>
  <match src=".: . [80909,80910]" dest=".: . [70978,70979]"/>
  <match src="parameter [94818,94825]" dest="parameter [32604,32611]"/>
  <match src="address: address [14806,14813]" dest="address: address [24482,24489]"/>
  <match src="identifier: sender [81862,81868]" dest="identifier: sender [72050,72056]"/>
  <match src="call_expression [7625,7636]" dest="call_expression [7724,7735]"/>
  <match src="struct_member [88176,88191]" dest="struct_member [28305,28320]"/>
  <match src="number_literal: 0 [34345,34346]" dest="number_literal: 0 [50017,50018]"/>
  <match src="visibility [93524,93530]" dest="visibility [31310,31316]"/>
  <match src="): ) [102342,102343]" dest="): ) [40160,40161]"/>
  <match src="function_body [46264,46313]" dest="function_body [15518,15567]"/>
  <match src="): ) [9940,9941]" dest="): ) [10039,10040]"/>
  <match src="): ) [54445,54446]" dest="): ) [21439,21440]"/>
  <match src="call_argument [23762,23768]" dest="call_argument [55138,55144]"/>
  <match src="call_argument [4049,4054]" dest="call_argument [4103,4108]"/>
  <match src="number_literal: 40 [44500,44502]" dest="number_literal: 40 [13754,13756]"/>
  <match src="(: ( [47042,47043]" dest="(: ( [16296,16297]"/>
  <match src="event_definition [53983,54030]" dest="event_definition [20977,21024]"/>
  <match src="parameter [9534,9550]" dest="parameter [9633,9649]"/>
  <match src="(: ( [29517,29518]" dest="(: ( [45189,45190]"/>
  <match src="[: [ [101952,101953]" dest="[: [ [39770,39771]"/>
  <match src=",: , [90570,90571]" dest=",: , [75642,75643]"/>
  <match src="view: view [95072,95076]" dest="view: view [32858,32862]"/>
  <match src="call_argument [36823,36840]" dest="call_argument [52495,52512]"/>
  <match src="member_expression [94508,94523]" dest="member_expression [32294,32309]"/>
  <match src="returns: returns [6923,6930]" dest="returns: returns [7022,7029]"/>
  <match src="identifier: b [7182,7183]" dest="identifier: b [7281,7282]"/>
  <match src=",: , [31407,31408]" dest=",: , [47079,47080]"/>
  <match src="{: { [9804,9805]" dest="{: { [9903,9904]"/>
  <match src="(: ( [82197,82198]" dest="(: ( [71365,71366]"/>
  <match src="identifier: msg [81069,81072]" dest="identifier: msg [70642,70645]"/>
  <match src="assignment_expression [105255,105302]" dest="assignment_expression [43073,43120]"/>
  <match src="): ) [54292,54293]" dest="): ) [21286,21287]"/>
  <match src="type_name [54508,54512]" dest="type_name [21502,21506]"/>
  <match src="identifier: Require [48987,48994]" dest="identifier: Require [62145,62152]"/>
  <match src="unary_expression [28908,28913]" dest="unary_expression [44580,44585]"/>
  <match src="view: view [95321,95325]" dest="view: view [33107,33111]"/>
  <match src="): ) [7876,7877]" dest="): ) [7975,7976]"/>
  <match src="pure: pure [34069,34073]" dest="pure: pure [49741,49745]"/>
  <match src="identifier: _state [101047,101053]" dest="identifier: _state [38865,38871]"/>
  <match src="call_argument [81751,81764]" dest="call_argument [70931,70944]"/>
  <match src="identifier: totalRewardedWithPhantom [73100,73124]" dest="identifier: staged [71331,71337]"/>
  <match src="(: ( [10165,10166]" dest="(: ( [10264,10265]"/>
  <match src="number_literal: 0 [22749,22750]" dest="number_literal: 0 [63270,63271]"/>
  <match src="using_directive [79792,79819]" dest="using_directive [69518,69545]"/>
  <match src=",: , [84702,84703]" dest=",: , [79119,79120]"/>
  <match src="comment: // library with helper methods for oracles that are concerned with computing average prices [58331,58422]" dest="comment: /**  * @title Require  * @author dYdX  *  * Stringifies parameters to pretty-print revert messages. Costs more gas than regular require()  */ [43795,43941]"/>
  <match src="type_name [4728,4735]" dest="type_name [4782,4789]"/>
  <match src="(: ( [96780,96781]" dest="(: ( [34566,34567]"/>
  <match src="uint256: uint256 [80246,80253]" dest="uint256: uint256 [60742,60749]"/>
  <match src="primitive_type [90450,90455]" dest="primitive_type [75522,75527]"/>
  <match src="identifier: amount [51252,51258]" dest="identifier: amount [54844,54850]"/>
  <match src="function: function [52742,52750]" dest="function: function [19736,19744]"/>
  <match src=".: . [99928,99929]" dest=".: . [37746,37747]"/>
  <match src="member_expression [100328,100343]" dest="member_expression [38146,38161]"/>
  <match src="uint256: uint256 [88355,88362]" dest="uint256: uint256 [28484,28491]"/>
  <match src="event_paramater [80188,80201]" dest="event_paramater [69703,69716]"/>
  <match src="identifier: b [1938,1939]" dest="identifier: b [1992,1993]"/>
  <match src="visibility [98809,98817]" dest="visibility [36627,36635]"/>
  <match src="comment: /**      * Global      */ [99121,99148]" dest="comment: /**      * Global      */ [36939,36966]"/>
  <match src="type_name [13083,13087]" dest="type_name [22759,22763]"/>
  <match src="{: { [9661,9662]" dest="{: { [9760,9761]"/>
  <match src="identifier: redeemable [100102,100112]" dest="identifier: redeemable [37920,37930]"/>
  <match src="struct_member [87464,87484]" dest="struct_member [27593,27613]"/>
  <match src="identifier: encodePacked [32800,32812]" dest="identifier: encodePacked [48472,48484]"/>
  <match src="uint256: uint256 [85930,85937]" dest="uint256: uint256 [73237,73244]"/>
  <match src="visibility [47020,47028]" dest="visibility [16274,16282]"/>
  <match src="function: function [92964,92972]" dest="function: function [30750,30758]"/>
  <match src="): ) [45990,45991]" dest="): ) [15244,15245]"/>
  <match src="type_name [34088,34093]" dest="type_name [49760,49765]"/>
  <match src="type_name [42945,42952]" dest="type_name [12199,12206]"/>
  <match src="return: return [10090,10096]" dest="return: return [10189,10195]"/>
  <match src="string_literal [92257,92263]" dest="string_literal [30043,30049]"/>
  <match src="number_literal: 41 [36662,36664]" dest="number_literal: 41 [52334,52336]"/>
  <match src="assignment_expression [103513,103592]" dest="assignment_expression [41331,41410]"/>
  <match src="): ) [1416,1417]" dest="): ) [1470,1471]"/>
  <match src="}: } [45648,45649]" dest="}: } [14902,14903]"/>
  <match src=".: . [101068,101069]" dest=".: . [38886,38887]"/>
  <match src="comment: // for each byte (starting from the lowest byte), populate the result with two characters [36366,36455]" dest="comment: // for each byte (starting from the lowest byte), populate the result with two characters [52038,52127]"/>
  <match src="call_expression [7395,7439]" dest="call_expression [7494,7538]"/>
  <match src="yul_identifier [86437,86444]" dest="yul_identifier [73744,73751]"/>
  <match src="identifier: spender [52578,52585]" dest="identifier: spender [19572,19579]"/>
  <match src=".: . [101943,101944]" dest=".: . [39761,39762]"/>
  <match src="&quot;: &quot; [82300,82301]" dest="&quot;: &quot; [80341,80342]"/>
  <match src="identifier: period [95440,95446]" dest="identifier: period [33226,33232]"/>
  <match src="member_expression [102050,102090]" dest="member_expression [39868,39908]"/>
  <match src="function: function [92075,92083]" dest="function: function [29861,29869]"/>
  <match src="&gt;=: &gt;= [94638,94640]" dest="&gt;=: &gt;= [32424,32426]"/>
  <match src="identifier: recipient [20556,20565]" dest="identifier: recipient [63668,63677]"/>
  <match src="function_body [7810,7888]" dest="function_body [7909,7987]"/>
  <match src="identifier: candidates [104151,104161]" dest="identifier: candidates [41969,41979]"/>
  <match src="parameter [20412,20429]" dest="parameter [63501,63518]"/>
  <match src="type_name [88002,88009]" dest="type_name [28131,28138]"/>
  <match src="identifier: amount [76518,76524]" dest="identifier: amount [58892,58898]"/>
  <match src="(: ( [80638,80639]" dest="(: ( [70253,70254]"/>
  <match src="=: = [36198,36199]" dest="=: = [51870,51871]"/>
  <match src="uint256: uint256 [97193,97200]" dest="uint256: uint256 [34979,34986]"/>
  <match src=".: . [103560,103561]" dest=".: . [41378,41379]"/>
  <match src="identifier: redeemable [93474,93484]" dest="identifier: redeemable [31260,31270]"/>
  <match src="event_definition [80267,80333]" dest="event_definition [69821,69914]"/>
  <match src=".: . [99967,99968]" dest=".: . [37785,37786]"/>
  <match src="uint256: uint256 [72977,72984]" dest="uint256: uint256 [71825,71832]"/>
  <match src="identifier: balance [101030,101037]" dest="identifier: balance [38848,38855]"/>
  <match src="state_mutability [54427,54431]" dest="state_mutability [21421,21425]"/>
  <match src="call_expression [83170,83290]" dest="call_expression [79890,79999]"/>
  <match src="identifier: value [8247,8252]" dest="identifier: value [8346,8351]"/>
  <match src="primitive_type [34633,34640]" dest="primitive_type [50305,50312]"/>
  <match src="(: ( [907,908]" dest="(: ( [961,962]"/>
  <match src="identifier: require [22722,22729]" dest="identifier: require [63243,63250]"/>
  <match src="parameter [99186,99200]" dest="parameter [37004,37018]"/>
  <match src="(: ( [46374,46375]" dest="(: ( [15628,15629]"/>
  <match src="call_expression [33477,33501]" dest="call_expression [49149,49173]"/>
  <match src="{: { [101884,101885]" dest="{: { [39702,39703]"/>
  <match src="&quot;: &quot; [64263,64264]" dest="&quot;: &quot; [60194,60195]"/>
  <match src="string [21228,21261]" dest="string [55987,56017]"/>
  <match src="(: ( [82087,82088]" dest="(: ( [71224,71225]"/>
  <match src="primitive_type [104937,104944]" dest="primitive_type [42755,42762]"/>
  <match src="type_name [53211,53215]" dest="type_name [20205,20209]"/>
  <match src="primitive_type [51489,51496]" dest="primitive_type [63982,63989]"/>
  <match src="identifier: file [33196,33200]" dest="identifier: file [48868,48872]"/>
  <match src="identifier: Provider [88517,88525]" dest="identifier: Provider [28646,28654]"/>
  <match src="identifier: shift [36809,36814]" dest="identifier: shift [52481,52486]"/>
  <match src="state_mutability [54130,54134]" dest="state_mutability [21124,21128]"/>
  <match src=",: , [99339,99340]" dest=",: , [37157,37158]"/>
  <match src="call_argument [82046,82047]" dest="call_argument [72148,72149]"/>
  <match src="{: { [34614,34615]" dest="{: { [50286,50287]"/>
  <match src="state_mutability [54076,54080]" dest="state_mutability [21070,21074]"/>
  <match src="identifier: mul [7426,7429]" dest="identifier: mul [7525,7528]"/>
  <match src="identifier: mul [2276,2279]" dest="identifier: mul [2330,2333]"/>
  <match src="identifier: account [101425,101432]" dest="identifier: account [39243,39250]"/>
  <match src="boolean_literal [98964,98969]" dest="boolean_literal [36782,36787]"/>
  <match src="function: function [105195,105203]" dest="function: function [43013,43021]"/>
  <match src="function_definition [9511,9718]" dest="function_definition [9610,9817]"/>
  <match src="identifier: statusOf [106469,106477]" dest="identifier: statusOf [68398,68406]"/>
  <match src="identifier: b [9772,9773]" dest="identifier: b [9871,9872]"/>
  <match src="event_paramater [80278,80301]" dest="event_paramater [69834,69857]"/>
  <match src="identifier: D256 [10999,11003]" dest="identifier: D256 [11098,11102]"/>
  <match src=".: . [93355,93356]" dest=".: . [31141,31142]"/>
  <match src="): ) [104230,104231]" dest="): ) [42048,42049]"/>
  <match src="visibility [96760,96766]" dest="visibility [34546,34552]"/>
  <match src="[: [ [102063,102064]" dest="[: [ [39881,39882]"/>
  <match src="visibility [65725,65732]" dest="visibility [66197,66204]"/>
  <match src="event_definition [80088,80142]" dest="event_definition [69603,69657]"/>
  <match src="member_expression [9014,9024]" dest="member_expression [9113,9123]"/>
  <match src="function: function [98756,98764]" dest="function: function [36574,36582]"/>
  <match src="): ) [7186,7187]" dest="): ) [7285,7286]"/>
  <match src="function: function [62594,62602]" dest="function: function [26463,26471]"/>
  <match src="emit: emit [83890,83894]" dest="emit: emit [79776,79780]"/>
  <match src="{: { [92327,92328]" dest="{: { [30113,30114]"/>
  <match src="number_literal: 10e16 [44436,44441]" dest="number_literal: 10e16 [13690,13695]"/>
  <match src="): ) [31985,31986]" dest="): ) [47657,47658]"/>
  <match src="{: { [92908,92909]" dest="{: { [30694,30695]"/>
  <match src="identifier: USDC [43090,43094]" dest="identifier: USDC [12344,12348]"/>
  <match src="identifier: value [53114,53119]" dest="identifier: value [20108,20113]"/>
  <match src="member_expression [97220,97237]" dest="member_expression [35006,35023]"/>
  <match src="visibility [53343,53351]" dest="visibility [20337,20345]"/>
  <match src="number_literal: 2 [10412,10413]" dest="number_literal: 2 [10511,10512]"/>
  <match src="identifier: Decimal [45727,45734]" dest="identifier: Decimal [14981,14988]"/>
  <match src="primitive_type [2291,2298]" dest="primitive_type [2345,2352]"/>
  <match src="private: private [34056,34063]" dest="private: private [49728,49735]"/>
  <match src="uint256: uint256 [87435,87442]" dest="uint256: uint256 [27564,27571]"/>
  <match src="string: string [32767,32773]" dest="string: string [48439,48445]"/>
  <match src="uint256: uint256 [7057,7064]" dest="uint256: uint256 [7156,7163]"/>
  <match src="call_argument [82686,82696]" dest="call_argument [78918,78928]"/>
  <match src="external: external [63441,63449]" dest="external: external [63551,63559]"/>
  <match src="(: ( [95396,95397]" dest="(: ( [33182,33183]"/>
  <match src="type_name [80550,80557]" dest="type_name [70166,70173]"/>
  <match src="(: ( [30706,30707]" dest="(: ( [46378,46379]"/>
  <match src="view: view [94804,94808]" dest="view: view [32590,32594]"/>
  <match src="expression_statement [83721,83768]" dest="expression_statement [62571,62630]"/>
  <match src="call_argument [33560,33586]" dest="call_argument [49232,49258]"/>
  <match src="): ) [62611,62612]" dest="): ) [26480,26481]"/>
  <match src="identifier: onlyFrozen [80574,80584]" dest="identifier: onlyFrozenOrLocked [77449,77467]"/>
  <match src="(: ( [80549,80550]" dest="(: ( [70165,70166]"/>
  <match src=".: . [102744,102745]" dest=".: . [40562,40563]"/>
  <match src="type_name [43250,43257]" dest="type_name [12504,12511]"/>
  <match src="returns: returns [7992,7999]" dest="returns: returns [8091,8098]"/>
  <match src="uint256: uint256 [93108,93115]" dest="uint256: uint256 [30894,30901]"/>
  <match src="string [21868,21903]" dest="string [63801,63838]"/>
  <match src="(: ( [95430,95431]" dest="(: ( [33216,33217]"/>
  <match src="function_body [1418,1487]" dest="function_body [1472,1541]"/>
  <match src="]: ] [104380,104381]" dest="]: ] [42198,42199]"/>
  <match src="}: } [34906,34907]" dest="}: } [50578,50579]"/>
  <match src="call_argument [3295,3296]" dest="call_argument [3349,3350]"/>
  <match src="identifier: subtractedValue [19678,19693]" dest="identifier: totalSupply [17444,17455]"/>
  <match src="type_name [9346,9350]" dest="type_name [9445,9449]"/>
  <match src="(: ( [102094,102095]" dest="(: ( [39912,39913]"/>
  <match src="&quot;: &quot; [25855,25856]" dest="&quot;: &quot; [77757,77758]"/>
  <match src="identifier: initialized [105284,105295]" dest="identifier: initialized [43102,43113]"/>
  <match src="): ) [85917,85918]" dest="): ) [73224,73225]"/>
  <match src="}: } [15108,15109]" dest="}: } [24784,24785]"/>
  <match src="primitive_type [36204,36209]" dest="primitive_type [51876,51881]"/>
  <match src="function_definition [90793,91128]" dest="function_definition [75865,76200]"/>
  <match src="function_definition [54386,54447]" dest="function_definition [21380,21441]"/>
  <match src=",: , [31822,31823]" dest=",: , [47494,47495]"/>
  <match src="call_argument [32356,32364]" dest="call_argument [48028,48036]"/>
  <match src="member_expression [95728,95768]" dest="member_expression [33514,33554]"/>
  <match src="): ) [8067,8068]" dest="): ) [8166,8167]"/>
  <match src="call_argument [102775,102781]" dest="call_argument [40593,40599]"/>
  <match src="(: ( [96629,96630]" dest="(: ( [34415,34416]"/>
  <match src="(: ( [28907,28908]" dest="(: ( [44579,44580]"/>
  <match src="identifier: a [4691,4692]" dest="identifier: a [4745,4746]"/>
  <match src="call_argument [49136,49159]" dest="call_argument [69985,70006]"/>
  <match src="call_argument [81870,81880]" dest="call_argument [72058,72065]"/>
  <match src="parameter [99325,99339]" dest="parameter [37143,37157]"/>
  <match src="parameter [53139,53143]" dest="parameter [20133,20137]"/>
  <match src="visibility [20447,20455]" dest="visibility [54801,54809]"/>
  <match src="(: ( [29990,29991]" dest="(: ( [45662,45663]"/>
  <match src="&amp;: &amp; [37670,37671]" dest="&amp;: &amp; [53342,53343]"/>
  <match src="type_name [10222,10226]" dest="type_name [10321,10325]"/>
  <match src="=: = [35506,35507]" dest="=: = [51178,51179]"/>
  <match src="identifier: staged [101062,101068]" dest="identifier: staged [38880,38886]"/>
  <match src="): ) [46913,46914]" dest="): ) [16167,16168]"/>
  <match src="{: { [104926,104927]" dest="{: { [42744,42745]"/>
  <match src="identifier: Pool [79754,79758]" dest="identifier: Bonding [69480,69487]"/>
  <match src="(: ( [48999,49000]" dest="(: ( [55416,55417]"/>
  <match src="memory: memory [10189,10195]" dest="memory: memory [10288,10294]"/>
  <match src="identifier: balance [99812,99819]" dest="identifier: balance [37630,37637]"/>
  <match src="{: { [8982,8983]" dest="{: { [9081,9082]"/>
  <match src="indexed: indexed [53824,53831]" dest="indexed: indexed [20818,20825]"/>
  <match src="call_expression [72137,72170]" dest="call_expression [58245,58278]"/>
  <match src="identifier: j [35267,35268]" dest="identifier: j [50939,50940]"/>
  <match src="return: return [45603,45609]" dest="return: return [14857,14863]"/>
  <match src="}: } [51700,51701]" dest="}: } [64114,64115]"/>
  <match src="/=: /= [35315,35317]" dest="/=: /= [50987,50989]"/>
  <match src="parameter [94765,94778]" dest="parameter [32551,32564]"/>
  <match src="): ) [80523,80524]" dest="): ) [77199,77200]"/>
  <match src="=: = [43549,43550]" dest="=: = [12803,12804]"/>
  <match src="call_expression [84304,84317]" dest="call_expression [58319,58336]"/>
  <match src="state_mutability [97607,97611]" dest="state_mutability [35393,35397]"/>
  <match src="view: view [92306,92310]" dest="view: view [30092,30096]"/>
  <match src=",: , [29837,29838]" dest=",: , [45509,45510]"/>
  <match src="): ) [102438,102439]" dest="): ) [40256,40257]"/>
  <match src="): ) [33116,33117]" dest="): ) [48788,48789]"/>
  <match src="returns: returns [71767,71774]" dest="returns: returns [65772,65779]"/>
  <match src="public: public [93301,93307]" dest="public: public [31087,31093]"/>
  <match src="call_argument [18430,18472]" dest="call_argument [71586,71617]"/>
  <match src="type_name [29848,29855]" dest="type_name [45520,45527]"/>
  <match src="call_argument [101747,101753]" dest="call_argument [39565,39571]"/>
  <match src="primitive_type [53925,53929]" dest="primitive_type [20919,20923]"/>
  <match src="primitive_type [100899,100906]" dest="primitive_type [38717,38724]"/>
  <match src="(: ( [10902,10903]" dest="(: ( [11001,11002]"/>
  <match src="primitive_type [75411,75418]" dest="primitive_type [55748,55755]"/>
  <match src="call_argument [9693,9697]" dest="call_argument [9792,9796]"/>
  <match src="uint256: uint256 [88407,88414]" dest="uint256: uint256 [28536,28543]"/>
  <match src="memory: memory [92231,92237]" dest="memory: memory [30017,30023]"/>
  <match src="(: ( [94476,94477]" dest="(: ( [32262,32263]"/>
  <match src="identifier: value [81263,81268]" dest="identifier: value [71972,71977]"/>
  <match src="call_argument [21868,21903]" dest="call_argument [63801,63838]"/>
  <match src="): ) [97306,97307]" dest="): ) [35092,35093]"/>
  <match src="primitive_type [44084,44091]" dest="primitive_type [13338,13345]"/>
  <match src="): ) [2708,2709]" dest="): ) [2762,2763]"/>
  <match src="&quot;: &quot; [22672,22673]" dest="&quot;: &quot; [62881,62882]"/>
  <match src="true [105298,105302]" dest="true [43116,43120]"/>
  <match src="yul_identifier [91092,91109]" dest="yul_identifier [76164,76181]"/>
  <match src="comment: /**  * @dev Implementation of the {IERC20} interface.  *  * This implementation is agnostic to the way tokens are created. This means  * that a supply mechanism has to be added in a derived contract using {_mint}.  * For a generic mechanism see {ERC20Mintable}.  *  * TIP: For a detailed writeup see our guide  * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How  * to implement supply mechanisms].  *  * We have followed general OpenZeppelin guidelines: functions revert instead  * of returning `false` on failure. This behavior is nonetheless conventional  * and does not conflict with the expectations of ERC20 applications.  *  * Additionally, an {Approval} event is emitted on calls to {transferFrom}.  * This allows applications to reconstruct the allowance for all accounts just  * by listening to said events. Other implementations of the EIP may not emit  * these events, as it isn't required by the specification.  *  * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}  * functions have been added to mitigate the well-known issues around setting  * allowances. See {IERC20-approve}.  */ [15117,16292]" dest="comment: // File: contracts/Constants.sol [11297,11329]"/>
  <match src="array_access [102722,102770]" dest="array_access [40540,40588]"/>
  <match src="type_cast_expression [90572,90586]" dest="type_cast_expression [75644,75658]"/>
  <match src="call_expression [34188,34211]" dest="call_expression [49860,49883]"/>
  <match src="call_struct_argument [8235,8259]" dest="call_struct_argument [8334,8358]"/>
  <match src="identifier: value [82920,82925]" dest="identifier: value [71671,71676]"/>
  <match src="type_name [93794,93801]" dest="type_name [31580,31587]"/>
  <match src="): ) [93329,93330]" dest="): ) [31115,31116]"/>
  <match src="(: ( [33733,33734]" dest="(: ( [49405,49406]"/>
  <match src="call_expression [106683,106699]" dest="call_expression [68612,68628]"/>
  <match src="primitive_type [99325,99332]" dest="primitive_type [37143,37150]"/>
  <match src="): ) [8394,8395]" dest="): ) [8493,8494]"/>
  <match src="returns: returns [10851,10858]" dest="returns: returns [10950,10957]"/>
  <match src="type_name [88384,88391]" dest="type_name [28513,28520]"/>
  <match src="=: = [43967,43968]" dest="=: = [13221,13222]"/>
  <match src="identifier: Withdraw [81060,81068]" dest="identifier: Withdraw [70633,70641]"/>
  <match src="): ) [1958,1959]" dest="): ) [2012,2013]"/>
  <match src="=: = [35539,35540]" dest="=: = [51211,51212]"/>
  <match src="member_expression [100407,100432]" dest="member_expression [38225,38250]"/>
  <match src="type_name [93432,93439]" dest="type_name [31218,31225]"/>
  <match src="[: [ [96220,96221]" dest="[: [ [34006,34007]"/>
  <match src="identifier: account [80118,80125]" dest="identifier: account [69633,69640]"/>
  <match src="&quot;: &quot; [80979,80980]" dest="&quot;: &quot; [70576,70577]"/>
  <match src="(: ( [45357,45358]" dest="(: ( [14611,14612]"/>
  <match src="identifier: div [10914,10917]" dest="identifier: div [11013,11016]"/>
  <match src=",: , [90448,90449]" dest=",: , [75520,75521]"/>
  <match src="uint256: uint256 [28388,28395]" dest="uint256: uint256 [44060,44067]"/>
  <match src="member_expression [8242,8252]" dest="member_expression [8341,8351]"/>
  <match src="): ) [99361,99362]" dest="): ) [37179,37180]"/>
  <match src="identifier: i [96132,96133]" dest="identifier: i [33918,33919]"/>
  <match src="): ) [9911,9912]" dest="): ) [10010,10011]"/>
  <match src="identifier: account [93875,93882]" dest="identifier: account [31661,31668]"/>
  <match src="member_expression [80906,80916]" dest="member_expression [70975,70985]"/>
  <match src="): ) [37483,37484]" dest="): ) [53155,53156]"/>
  <match src=".: . [102127,102128]" dest=".: . [39945,39946]"/>
  <match src="parameter [95811,95824]" dest="parameter [33597,33610]"/>
  <match src="identifier: sender [81255,81261]" dest="identifier: sender [71445,71451]"/>
  <match src="identifier: outstandingCouponsForEpoch [103565,103591]" dest="identifier: outstandingCouponsForEpoch [41383,41409]"/>
  <match src="for: for [98612,98615]" dest="for: for [36430,36433]"/>
  <match src="primitive_type [98616,98623]" dest="primitive_type [36434,36441]"/>
  <match src="identifier: epoch [96197,96202]" dest="identifier: epoch [33983,33988]"/>
  <match src="primitive_type [53301,53305]" dest="primitive_type [20295,20299]"/>
  <match src="uint256: uint256 [74666,74673]" dest="uint256: uint256 [76993,77000]"/>
  <match src="return: return [97213,97219]" dest="return: return [34999,35005]"/>
  <match src="parameter [3954,3961]" dest="parameter [4008,4015]"/>
  <match src="uint256: uint256 [37048,37055]" dest="uint256: uint256 [52720,52727]"/>
  <match src="primitive_type [101449,101456]" dest="primitive_type [39267,39274]"/>
  <match src="identifier: expiring [103253,103261]" dest="identifier: expiring [41071,41079]"/>
  <match src="state_mutability [46924,46928]" dest="state_mutability [16178,16182]"/>
  <match src="type_name [10601,10608]" dest="type_name [10700,10707]"/>
  <match src="memory: memory [45584,45590]" dest="memory: memory [14838,14844]"/>
  <match src="visibility [46232,46240]" dest="visibility [15486,15494]"/>
  <match src="struct_member [88305,88320]" dest="struct_member [28434,28449]"/>
  <match src="member_expression [95397,95411]" dest="member_expression [33183,33197]"/>
  <match src="): ) [95678,95679]" dest="): ) [33464,33465]"/>
  <match src="primitive_type [20485,20492]" dest="primitive_type [63589,63596]"/>
  <match src="contract_body [88725,88756]" dest="contract_body [28854,28885]"/>
  <match src="(: ( [100364,100365]" dest="(: ( [38182,38183]"/>
  <match src="parameter [13447,13454]" dest="parameter [23123,23130]"/>
  <match src="array_access [104791,104819]" dest="array_access [42609,42637]"/>
  <match src="internal: internal [10050,10058]" dest="internal: internal [10149,10157]"/>
  <match src="parameter [71776,71783]" dest="parameter [65781,65788]"/>
  <match src="): ) [67127,67128]" dest="): ) [66477,66478]"/>
  <match src="uint256: uint256 [75948,75955]" dest="uint256: uint256 [59076,59083]"/>
  <match src="comment: /*     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [68278,68931]" dest="comment: /*     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [53954,54607]"/>
  <match src="returns: returns [7103,7110]" dest="returns: returns [7202,7209]"/>
  <match src="return_statement [93565,93595]" dest="return_statement [31351,31381]"/>
  <match src="primitive_type [76211,76218]" dest="primitive_type [61913,61920]"/>
  <match src="(: ( [104088,104089]" dest="(: ( [41906,41907]"/>
  <match src="call_expression [33008,33027]" dest="call_expression [48680,48699]"/>
  <match src="identifier: votes [96693,96698]" dest="identifier: votes [34479,34484]"/>
  <match src="identifier: length [34799,34805]" dest="identifier: length [50471,50477]"/>
  <match src="type_name [7706,7713]" dest="type_name [7805,7812]"/>
  <match src="return_type_definition [46476,46505]" dest="return_type_definition [15730,15759]"/>
  <match src="(: ( [81068,81069]" dest="(: ( [70641,70642]"/>
  <match src="member_expression [102909,102933]" dest="member_expression [40727,40751]"/>
  <match src="return_statement [9649,9711]" dest="return_statement [9748,9810]"/>
  <match src="call_expression [32182,32208]" dest="call_expression [47854,47880]"/>
  <match src="[: [ [104200,104201]" dest="[: [ [42018,42019]"/>
  <match src="member_expression [97645,97662]" dest="member_expression [35431,35448]"/>
  <match src=".: . [95902,95903]" dest=".: . [33688,33689]"/>
  <match src="expression_statement [102460,102518]" dest="expression_statement [40278,40336]"/>
  <match src="visibility [12595,12603]" dest="visibility [22271,22279]"/>
  <match src="visibility [93411,93417]" dest="visibility [31197,31203]"/>
  <match src="=: = [103396,103397]" dest="=: = [41214,41215]"/>
  <match src="visibility [99508,99516]" dest="visibility [37326,37334]"/>
  <match src="visibility [103341,103349]" dest="visibility [41159,41167]"/>
  <match src="primitive_type [77872,77879]" dest="primitive_type [60694,60701]"/>
  <match src="member_expression [102886,102898]" dest="member_expression [40704,40716]"/>
  <match src="function: function [54574,54582]" dest="function: function [21568,21576]"/>
  <match src=",: , [54915,54916]" dest=",: , [21909,21910]"/>
  <match src="[: [ [37790,37791]" dest="[: [ [53462,53463]"/>
  <match src=".: . [82911,82912]" dest=".: . [71662,71663]"/>
  <match src="): ) [11018,11019]" dest="): ) [11117,11118]"/>
  <match src="function_definition [8278,8646]" dest="function_definition [8377,8745]"/>
  <match src="identifier: b [1383,1384]" dest="identifier: b [1437,1438]"/>
  <match src="return_statement [45085,45115]" dest="return_statement [14339,14369]"/>
  <match src="function_definition [35930,36911]" dest="function_definition [51602,52583]"/>
  <match src="): ) [103272,103273]" dest="): ) [41090,41091]"/>
  <match src="primitive_type [70131,70138]" dest="primitive_type [65240,65247]"/>
  <match src="identifier: c [1067,1068]" dest="identifier: c [1121,1122]"/>
  <match src="string_literal [57318,57343]" dest="string_literal [78110,78117]"/>
  <match src="visibility [7326,7334]" dest="visibility [7425,7433]"/>
  <match src="call_argument [4056,4068]" dest="call_argument [4110,4122]"/>
  <match src="(: ( [99728,99729]" dest="(: ( [37546,37547]"/>
  <match src="member_expression [100328,100364]" dest="member_expression [38146,38182]"/>
  <match src="uint256: uint256 [51354,51361]" dest="uint256: uint256 [59224,59231]"/>
  <match src="parameter [28819,28831]" dest="parameter [44491,44503]"/>
  <match src="type_name [45065,45072]" dest="type_name [14319,14326]"/>
  <match src="string_literal [83119,83146]" dest="string_literal [58556,58581]"/>
  <match src=",: , [81079,81080]" dest=",: , [70652,70653]"/>
  <match src="identifier: sub [104827,104830]" dest="identifier: sub [42645,42648]"/>
  <match src="string_literal [106544,106566]" dest="string_literal [68473,68495]"/>
  <match src="identifier: balanceOfBonded [93915,93930]" dest="identifier: balanceOfBonded [31701,31716]"/>
  <match src="member_expression [104753,104770]" dest="member_expression [42571,42588]"/>
  <match src="return_type_definition [14599,14613]" dest="return_type_definition [24275,24289]"/>
  <match src="identifier: payloadB [33734,33742]" dest="identifier: payloadB [49406,49414]"/>
  <match src="): ) [30880,30881]" dest="): ) [46552,46553]"/>
  <match src="identifier: D256 [45618,45622]" dest="identifier: D256 [14872,14876]"/>
  <match src="type_name [4683,4690]" dest="type_name [4737,4744]"/>
  <match src="function: function [52804,52812]" dest="function: function [19798,19806]"/>
  <match src="identifier: _state [99528,99534]" dest="identifier: _state [37346,37352]"/>
  <match src="identifier: approve [104421,104428]" dest="identifier: approve [42239,42246]"/>
  <match src="identifier: candidate [105033,105042]" dest="identifier: candidate [42851,42860]"/>
  <match src="member_expression [99805,99824]" dest="member_expression [37623,37642]"/>
  <match src="type_name [71167,71174]" dest="type_name [54675,54682]"/>
  <match src="identifier: COMMA [31598,31603]" dest="identifier: COMMA [47270,47275]"/>
  <match src="type_name [8704,8708]" dest="type_name [8803,8807]"/>
  <match src="visibility [43258,43265]" dest="visibility [12512,12519]"/>
  <match src="variable_declaration [66439,66458]" dest="variable_declaration [62406,62419]"/>
  <match src="}: } [45812,45813]" dest="}: } [15066,15067]"/>
  <match src="identifier: reason [100153,100159]" dest="identifier: reason [37971,37977]"/>
  <match src="view: view [97466,97470]" dest="view: view [35252,35256]"/>
  <match src="uint256: uint256 [31885,31892]" dest="uint256: uint256 [47557,47564]"/>
  <match src="visibility [93087,93093]" dest="visibility [30873,30879]"/>
  <match src="primitive_type [46375,46382]" dest="primitive_type [15629,15636]"/>
  <match src=",: , [80649,80650]" dest=",: , [70264,70265]"/>
  <match src=",: , [82696,82697]" dest=",: , [78928,78929]"/>
  <match src="function_definition [46729,46877]" dest="function_definition [15983,16131]"/>
  <match src="return_type_definition [52712,52735]" dest="return_type_definition [19706,19729]"/>
  <match src="identifier: epoch [103109,103114]" dest="identifier: epoch [40927,40932]"/>
  <match src="uint256: uint256 [87569,87576]" dest="uint256: uint256 [27698,27705]"/>
  <match src="primitive_type [26596,26603]" dest="primitive_type [60490,60497]"/>
  <match src="uint256: uint256 [73324,73331]" dest="uint256: uint256 [61503,61510]"/>
  <match src="(: ( [101746,101747]" dest="(: ( [39564,39565]"/>
  <match src="primitive_type [90572,90578]" dest="primitive_type [75644,75650]"/>
  <match src="type_name [95335,95342]" dest="type_name [33121,33128]"/>
  <match src="function: function [54855,54863]" dest="function: function [21849,21857]"/>
  <match src="uint256: uint256 [43410,43417]" dest="uint256: uint256 [12664,12671]"/>
  <match src="identifier: add [102305,102308]" dest="identifier: add [40123,40126]"/>
  <match src="identifier: balance [93579,93586]" dest="identifier: balance [31365,31372]"/>
  <match src="contract: contract [91804,91812]" dest="contract: contract [29590,29598]"/>
  <match src="member_expression [65019,65031]" dest="member_expression [62277,62289]"/>
  <match src="identifier: result [37178,37184]" dest="identifier: result [52850,52856]"/>
  <match src="): ) [14612,14613]" dest="): ) [24288,24289]"/>
  <match src="parameter [9936,9940]" dest="parameter [10035,10039]"/>
  <match src="(: ( [20576,20577]" dest="(: ( [63688,63689]"/>
  <match src="identifier: sender [51413,51419]" dest="identifier: sender [63778,63784]"/>
  <match src="assignment_expression [37843,37853]" dest="assignment_expression [53515,53525]"/>
  <match src="): ) [102343,102344]" dest="): ) [40161,40162]"/>
  <match src="): ) [96133,96134]" dest="): ) [33919,33920]"/>
  <match src=",: , [33586,33587]" dest=",: , [49258,49259]"/>
  <match src="memory: memory [7565,7571]" dest="memory: memory [7664,7670]"/>
  <match src="identifier: strategy [95431,95439]" dest="identifier: strategy [33217,33225]"/>
  <match src="(: ( [62628,62629]" dest="(: ( [26497,26498]"/>
  <match src="contract_body [88142,88706]" dest="contract_body [28271,28835]"/>
  <match src="uint256: uint256 [92539,92546]" dest="uint256: uint256 [30325,30332]"/>
  <match src="): ) [8152,8153]" dest="): ) [8251,8252]"/>
  <match src="string [21969,22005]" dest="string [62987,63024]"/>
  <match src="address: address [53648,53655]" dest="address: address [20642,20649]"/>
  <match src="): ) [7639,7640]" dest="): ) [7738,7739]"/>
  <match src="identifier: notPaused [81432,81441]" dest="identifier: onlyFrozenOrFluid [70714,70731]"/>
  <match src="visibility [53121,53129]" dest="visibility [20115,20123]"/>
  <match src="call_expression [84223,84393]" dest="call_expression [58218,58405]"/>
  <match src="primitive_type [99007,99014]" dest="primitive_type [36825,36832]"/>
  <match src="memory: memory [9625,9631]" dest="memory: memory [9724,9730]"/>
  <match src=".: . [104591,104592]" dest=".: . [42409,42410]"/>
  <match src=",: , [13047,13048]" dest=",: , [22723,22724]"/>
  <match src="): ) [104631,104632]" dest="): ) [42449,42450]"/>
  <match src="binary_expression [86464,86472]" dest="binary_expression [73771,73779]"/>
  <match src="identifier: b [9118,9119]" dest="identifier: b [9217,9218]"/>
  <match src="(: ( [103824,103825]" dest="(: ( [41642,41643]"/>
  <match src="}: } [92594,92595]" dest="}: } [30380,30381]"/>
  <match src="identifier: FILE [106525,106529]" dest="identifier: FILE [68454,68458]"/>
  <match src="call_argument [32392,32397]" dest="call_argument [48064,48069]"/>
  <match src="address: address [53530,53537]" dest="address: address [20524,20531]"/>
  <match src="identifier: msg [82778,82781]" dest="identifier: msg [78869,78872]"/>
  <match src="}: } [93163,93164]" dest="}: } [30949,30950]"/>
  <match src="(: ( [72155,72156]" dest="(: ( [58263,58264]"/>
  <match src="identifier: totalBonded [72999,73010]" dest="identifier: totalBonded [58282,58293]"/>
  <match src="{: { [102647,102648]" dest="{: { [40465,40466]"/>
  <match src="function_definition [102952,103056]" dest="function_definition [40770,40874]"/>
  <match src="parameter [90820,90845]" dest="parameter [75892,75917]"/>
  <match src="contract: contract [87158,87166]" dest="contract: contract [27287,27295]"/>
  <match src=".: . [103519,103520]" dest=".: . [41337,41338]"/>
  <match src="member_expression [7610,7620]" dest="member_expression [7709,7719]"/>
  <match src="address: address [101805,101812]" dest="address: address [39623,39630]"/>
  <match src="function: function [12715,12723]" dest="function: function [22391,22399]"/>
  <match src="primitive_type [53686,53690]" dest="primitive_type [20680,20684]"/>
  <match src="internal: internal [102239,102247]" dest="internal: internal [40057,40065]"/>
  <match src="function_definition [62564,62588]" dest="function_definition [26433,26457]"/>
  <match src="internal: internal [45704,45712]" dest="internal: internal [14958,14966]"/>
  <match src="internal: internal [6624,6632]" dest="internal: internal [6723,6731]"/>
  <match src="state_mutability [9922,9926]" dest="state_mutability [10021,10025]"/>
  <match src="member_expression [94703,94717]" dest="member_expression [32489,32503]"/>
  <match src="visibility [97600,97606]" dest="visibility [35386,35392]"/>
  <match src="primitive_type [8328,8335]" dest="primitive_type [8427,8434]"/>
  <match src="return_type_definition [1400,1417]" dest="return_type_definition [1454,1471]"/>
  <match src="(: ( [35105,35106]" dest="(: ( [50777,50778]"/>
  <match src="call_argument [81917,81927]" dest="call_argument [71069,71079]"/>
  <match src="identifier: getInitialStakeMultiple [45016,45039]" dest="identifier: getInitialStakeMultiple [14270,14293]"/>
  <match src="type_name [101805,101812]" dest="type_name [39623,39630]"/>
  <match src="parameter [30560,30574]" dest="parameter [46232,46246]"/>
  <match src="[: [ [104770,104771]" dest="[: [ [42588,42589]"/>
  <match src=".: . [8055,8056]" dest=".: . [8154,8155]"/>
  <match src="call_argument [31340,31705]" dest="call_argument [47012,47377]"/>
  <match src="identifier: require [90555,90562]" dest="identifier: require [75627,75634]"/>
  <match src="string [20497,20536]" dest="string [63601,63648]"/>
  <match src="internal: internal [32681,32689]" dest="internal: internal [48353,48361]"/>
  <match src=",: , [78044,78045]" dest=",: , [56129,56130]"/>
  <match src=".: . [96054,96055]" dest=".: . [33840,33841]"/>
  <match src="member_expression [103156,103184]" dest="member_expression [40974,41002]"/>
  <match src="call_argument [29601,29607]" dest="call_argument [45273,45279]"/>
  <match src="parameter [22590,22605]" dest="parameter [63190,63205]"/>
  <match src="}: } [88120,88121]" dest="}: } [28249,28250]"/>
  <match src="visibility [93811,93817]" dest="visibility [31597,31603]"/>
  <match src="identifier: div [10639,10642]" dest="identifier: div [10738,10741]"/>
  <match src="identifier: isNominated [97428,97439]" dest="identifier: isNominated [35214,35225]"/>
  <match src="type_name [32584,32588]" dest="type_name [48256,48260]"/>
  <match src="memory: memory [8115,8121]" dest="memory: memory [8214,8220]"/>
  <match src="state_mutability [93094,93098]" dest="state_mutability [30880,30884]"/>
  <match src=".: . [99389,99390]" dest=".: . [37207,37208]"/>
  <match src="visibility [52824,52832]" dest="visibility [19818,19826]"/>
  <match src="user_defined_type [45306,45318]" dest="user_defined_type [14560,14572]"/>
  <match src=".: . [46678,46679]" dest=".: . [15932,15933]"/>
  <match src="{: { [10228,10229]" dest="{: { [10327,10328]"/>
  <match src="}: } [106321,106322]" dest="}: } [68250,68251]"/>
  <match src="state_mutability [31955,31959]" dest="state_mutability [47627,47631]"/>
  <match src=".: . [104613,104614]" dest=".: . [42431,42432]"/>
  <match src="primitive_type [96590,96597]" dest="primitive_type [34376,34383]"/>
  <match src="uint256: uint256 [96124,96131]" dest="uint256: uint256 [33910,33917]"/>
  <match src="): ) [35978,35979]" dest="): ) [51650,51651]"/>
  <match src="identifier: Decimal [91876,91883]" dest="identifier: Decimal [29662,29669]"/>
  <match src="identifier: payloadA [31177,31185]" dest="identifier: payloadA [46849,46857]"/>
  <match src=",: , [44911,44912]" dest=",: , [14165,14166]"/>
  <match src="identifier: sub [72171,72174]" dest="identifier: add [58296,58299]"/>
  <match src="library_declaration [85447,86483]" dest="library_declaration [72754,73790]"/>
  <match src="{: { [79785,79786]" dest="{: { [69511,69512]"/>
  <match src="(: ( [7152,7153]" dest="(: ( [7251,7252]"/>
  <match src="view: view [54494,54498]" dest="view: view [21488,21492]"/>
  <match src="}: } [92486,92487]" dest="}: } [30272,30273]"/>
  <match src="&quot;: &quot; [22004,22005]" dest="&quot;: &quot; [63023,63024]"/>
  <match src="identifier: stringifyTruncated [29110,29128]" dest="identifier: stringifyTruncated [44782,44800]"/>
  <match src="parameter [4683,4692]" dest="parameter [4737,4746]"/>
  <match src="type_name [88201,88208]" dest="type_name [28330,28337]"/>
  <match src="parameter [18957,18975]" dest="parameter [17466,17483]"/>
  <match src="visibility [43576,43583]" dest="visibility [12830,12837]"/>
  <match src="member_expression [104585,104624]" dest="member_expression [42403,42442]"/>
  <match src="): ) [102981,102982]" dest="): ) [40799,40800]"/>
  <match src="user_defined_type [89585,89590]" dest="user_defined_type [74657,74662]"/>
  <match src="function_body [3963,4213]" dest="function_body [4017,4267]"/>
  <match src="type_name [73092,73099]" dest="type_name [71323,71330]"/>
  <match src="}: } [47085,47086]" dest="}: } [16339,16340]"/>
  <match src="function_definition [52682,52736]" dest="function_definition [19676,19730]"/>
  <match src="identifier: mul [94123,94126]" dest="identifier: mul [31909,31912]"/>
  <match src="function: function [45961,45969]" dest="function: function [15215,15223]"/>
  <match src="call_argument [8501,8522]" dest="call_argument [8600,8621]"/>
  <match src="): ) [80844,80845]" dest="): ) [70432,70433]"/>
  <match src="if_statement [34594,34896]" dest="if_statement [50266,50568]"/>
  <match src="string: string [101853,101859]" dest="string: string [39671,39677]"/>
  <match src="return: return [93852,93858]" dest="return: return [31638,31644]"/>
  <match src="): ) [51500,51501]" dest="): ) [63993,63994]"/>
  <match src="uint256: uint256 [6521,6528]" dest="uint256: uint256 [6620,6627]"/>
  <match src="modifier_invocation [81142,81164]" dest="modifier_invocation [71751,71780]"/>
  <match src=".: . [45734,45735]" dest=".: . [14988,14989]"/>
  <match src="call_argument [10262,10263]" dest="call_argument [10361,10362]"/>
  <match src="function: function [93064,93072]" dest="function: function [30850,30858]"/>
  <match src="identifier: D256 [10445,10449]" dest="identifier: D256 [10544,10548]"/>
  <match src="constant: constant [44405,44413]" dest="constant: constant [13659,13667]"/>
  <match src="primitive_type [31196,31203]" dest="primitive_type [46868,46875]"/>
  <match src="return: return [34867,34873]" dest="return: return [50539,50545]"/>
  <match src=":: : [45785,45786]" dest=":: : [15039,15040]"/>
  <match src=",: , [32397,32398]" dest=",: , [48069,48070]"/>
  <match src="primitive_type [3219,3226]" dest="primitive_type [3273,3280]"/>
  <match src="library: library [640,647]" dest="library: library [694,701]"/>
  <match src="identifier: stringify [35939,35948]" dest="identifier: stringify [51611,51620]"/>
  <match src=".: . [100620,100621]" dest=".: . [38438,38439]"/>
  <match src="interface_declaration [12474,15109]" dest="interface_declaration [22150,24785]"/>
  <match src="): ) [101463,101464]" dest="): ) [39281,39282]"/>
  <match src="primitive_type [43250,43257]" dest="primitive_type [12504,12511]"/>
  <match src="type_name [87308,87315]" dest="type_name [27437,27444]"/>
  <match src=".: . [9018,9019]" dest=".: . [9117,9118]"/>
  <match src="member_expression [49231,49243]" dest="member_expression [77994,78006]"/>
  <match src="identifier: b [2299,2300]" dest="identifier: b [2353,2354]"/>
  <match src="type_name [1910,1917]" dest="type_name [1964,1971]"/>
  <match src="source_file [0,108406]" dest="source_file [0,82780]"/>
  <match src="&quot;: &quot; [26905,26906]" dest="&quot;: &quot; [78461,78462]"/>
  <match src="): ) [52950,52951]" dest="): ) [19944,19945]"/>
  <match src="comment: // Mainnet [42821,42831]" dest="comment: // Mainnet [12075,12085]"/>
  <match src="(: ( [94980,94981]" dest="(: ( [32766,32767]"/>
  <match src="variable_declaration_statement [93989,94025]" dest="variable_declaration_statement [31775,31811]"/>
  <match src="call_expression [46671,46713]" dest="call_expression [15925,15967]"/>
  <match src="): ) [80427,80428]" dest="): ) [69813,69814]"/>
  <match src="call_argument [9270,9276]" dest="call_argument [9369,9375]"/>
  <match src="(: ( [34324,34325]" dest="(: ( [49996,49997]"/>
  <match src="function: function [102952,102960]" dest="function: function [40770,40778]"/>
  <match src="primitive_type [43924,43931]" dest="primitive_type [13178,13185]"/>
  <match src="primitive_type [38190,38195]" dest="primitive_type [53862,53867]"/>
  <match src="call_expression [80618,80672]" dest="call_expression [70232,70287]"/>
  <match src=".: . [45313,45314]" dest=".: . [14567,14568]"/>
  <match src="(: ( [88554,88555]" dest="(: ( [28683,28684]"/>
  <match src="identifier: Candidate [96630,96639]" dest="identifier: Candidate [34416,34425]"/>
  <match src="primitive_type [71167,71174]" dest="primitive_type [54675,54682]"/>
  <match src="identifier: Status [106498,106504]" dest="identifier: Status [68427,68433]"/>
  <match src="parameter [10743,10757]" dest="parameter [10842,10856]"/>
  <match src="): ) [36496,36497]" dest="): ) [52168,52169]"/>
  <match src="external: external [54177,54185]" dest="external: external [21171,21179]"/>
  <match src="): ) [32517,32518]" dest="): ) [48189,48190]"/>
  <match src="parameter [7277,7293]" dest="parameter [7376,7392]"/>
  <match src="parameter [100539,100554]" dest="parameter [38357,38372]"/>
  <match src="visibility [92774,92780]" dest="visibility [30560,30566]"/>
  <match src="call_argument [105058,105067]" dest="call_argument [42876,42885]"/>
  <match src="type_name [54012,54019]" dest="type_name [21006,21013]"/>
  <match src="return_statement [96176,96224]" dest="return_statement [33962,34010]"/>
  <match src="{: { [92239,92240]" dest="{: { [30025,30026]"/>
  <match src="internal: internal [28869,28877]" dest="internal: internal [44541,44549]"/>
  <match src="primitive_type [92677,92684]" dest="primitive_type [30463,30470]"/>
  <match src="type_name [93931,93938]" dest="type_name [31717,31724]"/>
  <match src="private: private [37956,37963]" dest="private: private [53628,53635]"/>
  <match src="sstore: sstore [91079,91085]" dest="sstore: sstore [76151,76157]"/>
  <match src="identifier: msg [82892,82895]" dest="identifier: msg [71643,71646]"/>
  <match src="bytes: bytes [35072,35077]" dest="bytes: bytes [50744,50749]"/>
  <match src="view: view [97041,97045]" dest="view: view [34827,34831]"/>
  <match src="uint256: uint256 [16390,16397]" dest="uint256: uint256 [60234,60241]"/>
  <match src="parameter [102616,102636]" dest="parameter [40434,40454]"/>
  <match src="(: ( [80830,80831]" dest="(: ( [70418,70419]"/>
  <match src="array_access [102658,102680]" dest="array_access [40476,40498]"/>
  <match src="identifier: outstanding [101661,101672]" dest="identifier: outstanding [39479,39490]"/>
  <match src=",: , [83085,83086]" dest=",: , [58522,58523]"/>
  <match src="address: address [20569,20576]" dest="address: address [63681,63688]"/>
  <match src="contract_declaration [98555,105313]" dest="contract_declaration [36373,43131]"/>
  <match src=".: . [101742,101743]" dest=".: . [39560,39561]"/>
  <match src="(: ( [29433,29434]" dest="(: ( [45105,45106]"/>
  <match src="}: } [36877,36878]" dest="}: } [52549,52550]"/>
  <match src="return_type_definition [12765,12782]" dest="return_type_definition [22441,22458]"/>
  <match src="(: ( [46131,46132]" dest="(: ( [15385,15386]"/>
  <match src=",: , [98667,98668]" dest=",: , [36485,36486]"/>
  <match src="type_cast_expression [38090,38115]" dest="type_cast_expression [53762,53787]"/>
  <match src="call_argument [84276,84280]" dest="call_argument [58972,58976]"/>
  <match src="[: [ [101602,101603]" dest="[: [ [39420,39421]"/>
  <match src="identifier: totalStaged [84286,84297]" dest="identifier: totalStaged [58300,58311]"/>
  <match src="&quot;: &quot; [84744,84745]" dest="&quot;: &quot; [79167,79168]"/>
  <match src="identifier: amount [75051,75057]" dest="identifier: amount [55803,55809]"/>
  <match src="event_paramater [53899,53914]" dest="event_paramater [20893,20908]"/>
  <match src="function_definition [104464,104640]" dest="function_definition [42282,42458]"/>
  <match src="call_argument [94137,94144]" dest="call_argument [31923,31930]"/>
  <match src="return: return [45338,45344]" dest="return: return [14592,14598]"/>
  <match src="expression_statement [101205,101291]" dest="expression_statement [39023,39109]"/>
  <match src="): ) [93008,93009]" dest="): ) [30794,30795]"/>
  <match src="}: } [102351,102352]" dest="}: } [40169,40170]"/>
  <match src="(: ( [101274,101275]" dest="(: ( [39092,39093]"/>
  <match src="primitive_type [32627,32634]" dest="primitive_type [48299,48306]"/>
  <match src="=: = [83494,83495]" dest="=: = [61378,61379]"/>
  <match src="uint256: uint256 [75411,75418]" dest="uint256: uint256 [55748,55755]"/>
  <match src="identifier: self [10510,10514]" dest="identifier: self [10609,10613]"/>
  <match src="expression_statement [82597,82651]" dest="expression_statement [82618,82652]"/>
  <match src="type_name [52783,52789]" dest="type_name [19777,19783]"/>
  <match src="identifier: self [8242,8246]" dest="identifier: self [8341,8345]"/>
  <match src="(: ( [35071,35072]" dest="(: ( [50743,50744]"/>
  <match src="function_definition [45130,45242]" dest="function_definition [14384,14496]"/>
  <match src="array_access [94366,94405]" dest="array_access [32152,32191]"/>
  <match src="uint256: uint256 [10743,10750]" dest="uint256: uint256 [10842,10849]"/>
  <match src="return_statement [38178,38226]" dest="return_statement [53850,53898]"/>
  <match src="identifier: epoch [94399,94404]" dest="identifier: epoch [32185,32190]"/>
  <match src="function: function [31077,31085]" dest="function: function [46749,46757]"/>
  <match src="function_body [90855,91128]" dest="function_body [75927,76200]"/>
  <match src=":: : [46543,46544]" dest=":: : [15797,15798]"/>
  <match src="identifier: _state [102007,102013]" dest="identifier: _state [39825,39831]"/>
  <match src="identifier: owner [53470,53475]" dest="identifier: owner [20464,20469]"/>
  <match src="parameter [8383,8394]" dest="parameter [8482,8493]"/>
  <match src="call_argument [31598,31603]" dest="call_argument [47270,47275]"/>
  <match src="parameter [7706,7715]" dest="parameter [7805,7814]"/>
  <match src="): ) [8774,8775]" dest="): ) [8873,8874]"/>
  <match src="array_access [105122,105146]" dest="array_access [42940,42964]"/>
  <match src="identifier: GOVERNANCE_QUORUM [43722,43739]" dest="identifier: GOVERNANCE_QUORUM [12976,12993]"/>
  <match src="primitive_type [20412,20419]" dest="primitive_type [63501,63508]"/>
  <match src="returns: returns [96420,96427]" dest="returns: returns [34206,34213]"/>
  <match src="type_name [67307,67319]" dest="type_name [66927,66939]"/>
  <match src="return: return [98957,98963]" dest="return: return [36775,36781]"/>
  <match src="identifier: newImplementation [90913,90930]" dest="identifier: newImplementation [75985,76002]"/>
  <match src="address: address [62701,62708]" dest="address: address [26570,26577]"/>
  <match src="identifier: incrementBalanceOfStaged [100857,100881]" dest="identifier: incrementBalanceOfStaged [38675,38699]"/>
  <match src="-: - [51497,51498]" dest="-: - [63990,63991]"/>
  <match src="type_name [28388,28395]" dest="type_name [44060,44067]"/>
  <match src="=: = [36278,36279]" dest="=: = [51950,51951]"/>
  <match src="parameter [95086,95093]" dest="parameter [32872,32879]"/>
  <match src="identifier: balance [100719,100726]" dest="identifier: balance [38537,38544]"/>
  <match src="calldata: calldata [54784,54792]" dest="calldata: calldata [21778,21786]"/>
  <match src="): ) [26150,26151]" dest="): ) [78613,78614]"/>
  <match src="&quot;: &quot; [2673,2674]" dest="&quot;: &quot; [2727,2728]"/>
  <match src="call_argument [102309,102343]" dest="call_argument [40127,40161]"/>
  <match src="identifier: Setters [106007,106014]" dest="identifier: Setters [67936,67943]"/>
  <match src="primitive_type [5354,5360]" dest="primitive_type [5408,5414]"/>
  <match src="identifier: lastReserve [66447,66458]" dest="identifier: epoch [62414,62419]"/>
  <match src="function_definition [33992,34977]" dest="function_definition [49664,50649]"/>
  <match src="internal: internal [45283,45291]" dest="internal: internal [14537,14545]"/>
  <match src="call_argument [33008,33027]" dest="call_argument [48680,48699]"/>
  <match src="identifier: candidate [97392,97401]" dest="identifier: candidate [35178,35187]"/>
  <match src="call_expression [66415,66428]" dest="call_expression [65371,65386]"/>
  <match src="(: ( [32719,32720]" dest="(: ( [48391,48392]"/>
  <match src=",: , [80125,80126]" dest=",: , [69640,69641]"/>
  <match src="variable_declaration_statement [8539,8553]" dest="variable_declaration_statement [8638,8652]"/>
  <match src="return: return [35133,35139]" dest="return: return [50805,50811]"/>
  <match src="): ) [960,961]" dest="): ) [1014,1015]"/>
  <match src="): ) [95854,95855]" dest="): ) [33640,33641]"/>
  <match src="): ) [90421,90422]" dest="): ) [75493,75494]"/>
  <match src="call_expression [101325,101366]" dest="call_expression [39143,39184]"/>
  <match src="bool: bool [97480,97484]" dest="bool: bool [35266,35270]"/>
  <match src="identifier: staged [101316,101322]" dest="identifier: staged [39134,39140]"/>
  <match src="user_defined_type [95106,95129]" dest="user_defined_type [32892,32915]"/>
  <match src="primitive_type [53574,53578]" dest="primitive_type [20568,20572]"/>
  <match src="modifier_definition [106386,106599]" dest="modifier_definition [68315,68528]"/>
  <match src="uint256: uint256 [100257,100264]" dest="uint256: uint256 [38075,38082]"/>
  <match src="uint256: uint256 [31196,31203]" dest="uint256: uint256 [46868,46875]"/>
  <match src="state_mutability [939,943]" dest="state_mutability [993,997]"/>
  <match src="user_defined_type [9319,9323]" dest="user_defined_type [9418,9422]"/>
  <match src="primitive_type [53598,53605]" dest="primitive_type [20592,20599]"/>
  <match src="identifier: D256 [66357,66361]" dest="identifier: D256 [19051,19055]"/>
  <match src="{: { [6821,6822]" dest="{: { [6920,6921]"/>
  <match src="string: string [3903,3909]" dest="string: string [3957,3963]"/>
  <match src="/: / [4094,4095]" dest="/: / [4148,4149]"/>
  <match src="identifier: add [7420,7423]" dest="identifier: add [7519,7522]"/>
  <match src="type_name [97581,97588]" dest="type_name [35367,35374]"/>
  <match src="mstore: mstore [34784,34790]" dest="mstore: mstore [50456,50462]"/>
  <match src="parameter [6877,6886]" dest="parameter [6976,6985]"/>
  <match src="function_definition [99295,99456]" dest="function_definition [37113,37274]"/>
  <match src="call_expression [81645,81691]" dest="call_expression [70840,70886]"/>
  <match src="identifier: timestamp [95612,95621]" dest="identifier: timestamp [33398,33407]"/>
  <match src="expression_statement [83303,83445]" dest="expression_statement [77491,77606]"/>
  <match src="call_argument [82198,82208]" dest="call_argument [71366,71376]"/>
  <match src="comment: // 100 SSD -&gt; 100M SSDS [43305,43328]" dest="comment: // 100 SSD -&gt; 100M SSDS [12559,12582]"/>
  <match src="contract_declaration [87823,88121]" dest="contract_declaration [27952,28250]"/>
  <match src="): ) [54598,54599]" dest="): ) [21592,21593]"/>
  <match src="pure: pure [55187,55191]" dest="pure: pure [18790,18794]"/>
  <match src="identifier: result [34598,34604]" dest="identifier: result [50270,50276]"/>
  <match src=",: , [103114,103115]" dest=",: , [40932,40933]"/>
  <match src="identifier: account [94657,94664]" dest="identifier: account [32443,32450]"/>
  <match src="identifier: expiration [103233,103243]" dest="identifier: expiration [41051,41061]"/>
  <match src="memory: memory [90456,90462]" dest="memory: memory [75528,75534]"/>
  <match src="): ) [51499,51500]" dest="): ) [63992,63993]"/>
  <match src="uint256: uint256 [75125,75132]" dest="uint256: uint256 [55024,55031]"/>
  <match src="type_name [69894,69901]" dest="type_name [65197,65204]"/>
  <match src="function_body [30638,31069]" dest="function_body [46310,46741]"/>
  <match src="array_access [96017,96037]" dest="array_access [33803,33823]"/>
  <match src="call_expression [30110,30134]" dest="call_expression [45782,45806]"/>
  <match src="primitive_type [28635,28639]" dest="primitive_type [44307,44311]"/>
  <match src="parameter [96156,96163]" dest="parameter [33942,33949]"/>
  <match src="call_argument [36337,36351]" dest="call_argument [52009,52023]"/>
  <match src="primitive_type [3881,3888]" dest="primitive_type [3935,3942]"/>
  <match src="array_access [95728,95748]" dest="array_access [33514,33534]"/>
  <match src="expression_statement [82661,82742]" dest="expression_statement [78908,78941]"/>
  <match src="function_body [37025,37898]" dest="function_body [52697,53570]"/>
  <match src="type_name [54560,54564]" dest="type_name [21554,21558]"/>
  <match src="identifier: mint [51155,51159]" dest="identifier: mintToAccount [54754,54767]"/>
  <match src="uint256: uint256 [101837,101844]" dest="uint256: uint256 [39655,39662]"/>
  <match src="parameter [53061,53065]" dest="parameter [20055,20059]"/>
  <match src="identifier: sender [81157,81163]" dest="identifier: sender [71773,71779]"/>
  <match src="): ) [46460,46461]" dest="): ) [15714,15715]"/>
  <match src="): ) [106208,106209]" dest="): ) [68137,68138]"/>
  <match src="call_argument [84564,84576]" dest="call_argument [71979,72015]"/>
  <match src="&quot;: &quot; [84575,84576]" dest="&quot;: &quot; [72014,72015]"/>
  <match src="): ) [81820,81821]" dest="): ) [71617,71618]"/>
  <match src="public: public [96609,96615]" dest="public: public [34395,34401]"/>
  <match src="(: ( [97014,97015]" dest="(: ( [34800,34801]"/>
  <match src="type_name [96109,96116]" dest="type_name [33895,33902]"/>
  <match src="address: address [54766,54773]" dest="address: address [21760,21767]"/>
  <match src=".: . [100428,100429]" dest=".: . [38246,38247]"/>
  <match src="string [84736,84745]" dest="string [79153,79168]"/>
  <match src="identifier: candidate [97161,97170]" dest="identifier: candidate [34947,34956]"/>
  <match src="function_body [10874,10938]" dest="function_body [10973,11037]"/>
  <match src="identifier: account [74868,74875]" dest="identifier: account [55302,55309]"/>
  <match src="uint256: uint256 [5332,5339]" dest="uint256: uint256 [5386,5393]"/>
  <match src="call_expression [73212,73280]" dest="call_expression [80796,80844]"/>
  <match src="view: view [62687,62691]" dest="view: view [26556,26560]"/>
  <match src="identifier: a [1014,1015]" dest="identifier: a [1068,1069]"/>
  <match src="identifier: FILE [68210,68214]" dest="identifier: FILE [79539,79543]"/>
  <match src="identifier: updatePrice [66916,66927]" dest="identifier: growSupply [66159,66169]"/>
  <match src="returns: returns [45448,45455]" dest="returns: returns [14702,14709]"/>
  <match src="&quot;: &quot; [20497,20498]" dest="&quot;: &quot; [63601,63602]"/>
  <match src="return_statement [8792,8840]" dest="return_statement [8891,8939]"/>
  <match src="parameter [3892,3901]" dest="parameter [3946,3955]"/>
  <match src="type_cast_expression [32767,33102]" dest="type_cast_expression [48439,48774]"/>
  <match src="return_type_definition [45883,45900]" dest="return_type_definition [15137,15154]"/>
  <match src="function_body [104342,104456]" dest="function_body [42160,42274]"/>
  <match src="address: address [104089,104096]" dest="address: address [41907,41914]"/>
  <match src=",: , [53684,53685]" dest=",: , [20678,20679]"/>
  <match src="=: = [91954,91955]" dest="=: = [29740,29741]"/>
  <match src="bytes: bytes [37191,37196]" dest="bytes: bytes [52863,52868]"/>
  <match src="identifier: _state [103513,103519]" dest="identifier: _state [41331,41337]"/>
  <match src="visibility [93630,93636]" dest="visibility [31416,31422]"/>
  <match src="primitive_type [45892,45899]" dest="primitive_type [15146,15153]"/>
  <match src="primitive_type [78684,78691]" dest="primitive_type [79031,79038]"/>
  <match src="identifier: start [103811,103816]" dest="identifier: start [41629,41634]"/>
  <match src="event: event [53795,53800]" dest="event: event [20789,20794]"/>
  <match src="): ) [10263,10264]" dest="): ) [10362,10363]"/>
  <match src="identifier: coupons [102136,102143]" dest="identifier: coupons [39954,39961]"/>
  <match src="primitive_type [43697,43704]" dest="primitive_type [12951,12958]"/>
  <match src=".: . [102090,102091]" dest=".: . [39908,39909]"/>
  <match src="visibility [54871,54879]" dest="visibility [21865,21873]"/>
  <match src="): ) [30375,30376]" dest="): ) [46047,46048]"/>
  <match src="{: { [32727,32728]" dest="{: { [48399,48400]"/>
  <match src="): ) [82208,82209]" dest="): ) [71376,71377]"/>
  <match src="): ) [52910,52911]" dest="): ) [19904,19905]"/>
  <match src="(: ( [100685,100686]" dest="(: ( [38503,38504]"/>
  <match src="parameter [3881,3890]" dest="parameter [3935,3944]"/>
  <match src="identifier: reason [101177,101183]" dest="identifier: reason [38995,39001]"/>
  <match src="primitive_type [82353,82360]" dest="primitive_type [82558,82565]"/>
  <match src="member_expression [94845,94860]" dest="member_expression [32631,32646]"/>
  <match src="constant: constant [43528,43536]" dest="constant: constant [12782,12790]"/>
  <match src="identifier: unfreeze [82123,82131]" dest="identifier: unfreeze [71792,71800]"/>
  <match src="identifier: _state [97220,97226]" dest="identifier: _state [35006,35012]"/>
  <match src="}: } [11193,11194]" dest="}: } [11292,11293]"/>
  <match src="expression_statement [80935,81016]" dest="expression_statement [70532,70616]"/>
  <match src="return_statement [45207,45235]" dest="return_statement [14461,14489]"/>
  <match src="identifier: votes [88078,88083]" dest="identifier: votes [28207,28212]"/>
  <match src="pure: pure [29966,29970]" dest="pure: pure [45638,45642]"/>
  <match src="]: ] [97109,97110]" dest="]: ] [34895,34896]"/>
  <match src="(: ( [20555,20556]" dest="(: ( [63667,63668]"/>
  <match src="function_definition [10136,10276]" dest="function_definition [10235,10375]"/>
  <match src="member_expression [99705,99728]" dest="member_expression [37523,37546]"/>
  <match src="for: for [34320,34323]" dest="for: for [49992,49995]"/>
  <match src="identifier: i [35549,35550]" dest="identifier: i [51221,51222]"/>
  <match src="parameter [96630,96644]" dest="parameter [34416,34430]"/>
  <match src="(: ( [101129,101130]" dest="(: ( [38947,38948]"/>
  <match src="function_definition [97701,97879]" dest="function_definition [35487,35665]"/>
  <match src="type_name [53769,53776]" dest="type_name [20763,20770]"/>
  <match src="member_expression [100649,100664]" dest="member_expression [38467,38482]"/>
  <match src="primitive_type [74877,74884]" dest="primitive_type [55311,55318]"/>
  <match src="): ) [9773,9774]" dest="): ) [9872,9873]"/>
  <match src="identifier: Vote [96640,96644]" dest="identifier: Vote [34426,34430]"/>
  <match src="primitive_type [4683,4690]" dest="primitive_type [4737,4744]"/>
  <match src="function: function [23839,23847]" dest="function: function [55269,55277]"/>
  <match src="identifier: Decimal [62629,62636]" dest="identifier: Decimal [26498,26505]"/>
  <match src=".: . [102892,102893]" dest=".: . [40710,40711]"/>
  <match src="number_literal: 0 [4053,4054]" dest="number_literal: 0 [4107,4108]"/>
  <match src="call_argument [30941,30960]" dest="call_argument [46613,46632]"/>
  <match src="(: ( [94136,94137]" dest="(: ( [31922,31923]"/>
  <match src="visibility [44397,44404]" dest="visibility [13651,13658]"/>
  <match src="identifier: i [35705,35706]" dest="identifier: i [51377,51378]"/>
  <match src="number_literal: 120 [28482,28485]" dest="number_literal: 120 [44154,44157]"/>
  <match src="user_defined_type [88176,88183]" dest="user_defined_type [28305,28312]"/>
  <match src="{: { [99211,99212]" dest="{: { [37029,37030]"/>
  <match src="function_definition [99156,99287]" dest="function_definition [36974,37105]"/>
  <match src="identifier: totalRedeemable [93393,93408]" dest="identifier: totalRedeemable [31179,31194]"/>
  <match src="=: = [44434,44435]" dest="=: = [13688,13689]"/>
  <match src="internal: internal [102866,102874]" dest="internal: internal [40684,40692]"/>
  <match src="identifier: _state [101239,101245]" dest="identifier: _state [39057,39063]"/>
  <match src="identifier: RPAREN [30987,30993]" dest="identifier: RPAREN [46659,46665]"/>
  <match src="function: function [6727,6735]" dest="function: function [6826,6834]"/>
  <match src="): ) [45386,45387]" dest="): ) [14640,14641]"/>
  <match src="struct_member [87380,87425]" dest="struct_member [27509,27554]"/>
  <match src="call_argument [73255,73279]" dest="call_argument [80810,80828]"/>
  <match src="number_literal: 4 [36865,36866]" dest="number_literal: 4 [52537,52538]"/>
  <match src=",: , [103932,103933]" dest=",: , [41750,41751]"/>
  <match src="member_expression [101239,101270]" dest="member_expression [39057,39088]"/>
  <match src="uint256: uint256 [96109,96116]" dest="uint256: uint256 [33895,33902]"/>
  <match src="type_name [7726,7732]" dest="type_name [7825,7831]"/>
  <match src="=: = [104583,104584]" dest="=: = [42401,42402]"/>
  <match src="(: ( [101072,101073]" dest="(: ( [38890,38891]"/>
  <match src="type_name [10999,11003]" dest="type_name [11098,11102]"/>
  <match src="): ) [80923,80924]" dest="): ) [70994,70995]"/>
  <match src="uint: uint [53562,53566]" dest="uint: uint [20556,20560]"/>
  <match src="identifier: decrementApproveFor [104256,104275]" dest="identifier: decrementApproveFor [42074,42093]"/>
  <match src="return: return [38178,38184]" dest="return: return [53850,53856]"/>
  <match src="binary_expression [36823,36840]" dest="binary_expression [52495,52512]"/>
  <match src="}: } [100502,100503]" dest="}: } [38320,38321]"/>
  <match src="assignment_expression [100712,100777]" dest="assignment_expression [38530,38595]"/>
  <match src="call_argument [72156,72169]" dest="call_argument [58264,58277]"/>
  <match src="type_name [99492,99499]" dest="type_name [37310,37317]"/>
  <match src="identifier: that [106649,106653]" dest="identifier: that [68578,68582]"/>
  <match src="{: { [96926,96927]" dest="{: { [34712,34713]"/>
  <match src="call_expression [9232,9280]" dest="call_expression [9331,9379]"/>
  <match src="(: ( [81193,81194]" dest="(: ( [70502,70503]"/>
  <match src="visibility [43520,43527]" dest="visibility [12774,12781]"/>
  <match src="parameter [54335,54351]" dest="parameter [21329,21345]"/>
  <match src="]: ] [97672,97673]" dest="]: ] [35458,35459]"/>
  <match src="struct_member [43434,43449]" dest="struct_member [12688,12703]"/>
  <match src="identifier: allowanceCoupons [94748,94764]" dest="identifier: allowanceCoupons [32534,32550]"/>
  <match src="identifier: capture [65449,65456]" dest="identifier: oracleCapture [66861,66874]"/>
  <match src="{: { [45466,45467]" dest="{: { [14720,14721]"/>
  <match src="type_name [70106,70113]" dest="type_name [65159,65166]"/>
  <match src="call_argument [29046,29050]" dest="call_argument [44718,44722]"/>
  <match src="identifier: abi [33434,33437]" dest="identifier: abi [49106,49109]"/>
  <match src="{: { [87842,87843]" dest="{: { [27971,27972]"/>
  <match src=".: . [9826,9827]" dest=".: . [9925,9926]"/>
  <match src="type_name [66980,66987]" dest="type_name [66391,66398]"/>
  <match src="parameter [8110,8126]" dest="parameter [8209,8225]"/>
  <match src="(: ( [5432,5433]" dest="(: ( [5486,5487]"/>
  <match src="call_expression [80739,80753]" dest="call_expression [56031,56045]"/>
  <match src="function_body [102992,103056]" dest="function_body [40810,40874]"/>
  <match src="parameter [74860,74875]" dest="parameter [55294,55309]"/>
  <match src="array_access [34598,34607]" dest="array_access [50270,50279]"/>
  <match src="identifier: FOUR_BIT_MASK [28693,28706]" dest="identifier: FOUR_BIT_MASK [44365,44378]"/>
  <match src=",: , [82902,82903]" dest=",: , [71653,71654]"/>
  <match src="identifier: i [36576,36577]" dest="identifier: i [52248,52249]"/>
  <match src="identifier: compareTo [10391,10400]" dest="identifier: compareTo [10490,10499]"/>
  <match src="call_argument [32941,32947]" dest="call_argument [48613,48619]"/>
  <match src=":: : [7608,7609]" dest=":: : [7707,7708]"/>
  <match src="=: = [103033,103034]" dest="=: = [40851,40852]"/>
  <match src="variable_declaration [83620,83648]" dest="variable_declaration [61039,61062]"/>
  <match src=",: , [82285,82286]" dest=",: , [80326,80327]"/>
  <match src="identifier: coupons [101920,101927]" dest="identifier: coupons [39738,39745]"/>
  <match src="&quot;: &quot; [1017,1018]" dest="&quot;: &quot; [1071,1072]"/>
  <match src="identifier: value [81126,81131]" dest="identifier: value [71233,71238]"/>
  <match src="boolean_literal [65664,65669]" dest="boolean_literal [80739,80744]"/>
  <match src="): ) [78577,78578]" dest="): ) [59266,59267]"/>
  <match src="visibility [92878,92884]" dest="visibility [30664,30670]"/>
  <match src="}: } [44762,44763]" dest="}: } [14016,14017]"/>
  <match src="primitive_type [87283,87290]" dest="primitive_type [27412,27419]"/>
  <match src="member_expression [83651,83679]" dest="member_expression [71843,71852]"/>
  <match src="for: for [71163,71166]" dest="for: for [54671,54674]"/>
  <match src="}: } [8645,8646]" dest="}: } [8744,8745]"/>
  <match src="parameter [9760,9773]" dest="parameter [9859,9872]"/>
  <match src="binary_expression [65046,65078]" dest="binary_expression [62304,62331]"/>
  <match src="function: function [45830,45838]" dest="function: function [15084,15092]"/>
  <match src="external: external [67947,67955]" dest="external: external [63223,63231]"/>
  <match src="identifier: i [37563,37564]" dest="identifier: i [53235,53236]"/>
  <match src="return: return [4197,4203]" dest="return: return [4251,4257]"/>
  <match src="using: using [71148,71153]" dest="using: using [54656,54661]"/>
  <match src="call_argument [84250,84318]" dest="call_argument [58245,58337]"/>
  <match src="identifier: ASCII_LOWER_EX [28465,28479]" dest="identifier: ASCII_LOWER_EX [44137,44151]"/>
  <match src=".: . [92572,92573]" dest=".: . [30358,30359]"/>
  <match src="{: { [87513,87514]" dest="{: { [27642,27643]"/>
  <match src="return_type_definition [96621,96645]" dest="return_type_definition [34407,34431]"/>
  <match src="function_body [99517,99589]" dest="function_body [37335,37407]"/>
  <match src="array_access [103219,103244]" dest="array_access [41037,41062]"/>
  <match src="identifier: IOracle [62549,62556]" dest="identifier: IOracle [26418,26425]"/>
  <match src="call_expression [78108,78116]" dest="call_expression [57928,57936]"/>
  <match src="primitive_type [87308,87315]" dest="primitive_type [27437,27444]"/>
  <match src="function_body [28893,29212]" dest="function_body [44565,44884]"/>
  <match src="identifier: mul [10899,10902]" dest="identifier: mul [10998,11001]"/>
  <match src="=&gt;: =&gt; [87396,87398]" dest="=&gt;: =&gt; [27525,27527]"/>
  <match src="return_type_definition [14184,14198]" dest="return_type_definition [23860,23874]"/>
  <match src="return: return [9815,9821]" dest="return: return [9914,9920]"/>
  <match src="type_name [99007,99014]" dest="type_name [36825,36832]"/>
  <match src="user_defined_type [9561,9565]" dest="user_defined_type [9660,9664]"/>
  <match src="identifier: mul [8062,8065]" dest="identifier: mul [8161,8164]"/>
  <match src="(: ( [54415,54416]" dest="(: ( [21409,21410]"/>
  <match src="identifier: updateReserve [66461,66474]" dest="identifier: epoch [62422,62427]"/>
  <match src="type_name [104108,104115]" dest="type_name [41926,41933]"/>
  <match src="array_access [105255,105283]" dest="array_access [43073,43101]"/>
  <match src="{: { [95999,96000]" dest="{: { [33785,33786]"/>
  <match src="call_argument [67113,67127]" dest="call_argument [66468,66477]"/>
  <match src="identifier: amount [75585,75591]" dest="identifier: amount [55587,55593]"/>
  <match src="!=: != [51486,51488]" dest="!=: != [63979,63981]"/>
  <match src="identifier: incrementBalanceOfBonded [83721,83745]" dest="identifier: incrementBalanceOfCoupons [62571,62596]"/>
  <match src="call_argument [33496,33500]" dest="call_argument [49168,49172]"/>
  <match src="return: return [2593,2599]" dest="return: return [2647,2653]"/>
  <match src="): ) [52979,52980]" dest="): ) [19973,19974]"/>
  <match src="identifier: value [80666,80671]" dest="identifier: value [70281,70286]"/>
  <match src="identifier: newImplementation [90347,90364]" dest="identifier: newImplementation [75419,75436]"/>
  <match src="pure: pure [46471,46475]" dest="pure: pure [15725,15729]"/>
  <match src="type_name [53109,53113]" dest="type_name [20103,20107]"/>
  <match src="contract_body [6325,11194]" dest="contract_body [6424,11293]"/>
  <match src="returns: returns [9927,9934]" dest="returns: returns [10026,10033]"/>
  <match src="pure: pure [52707,52711]" dest="pure: pure [19701,19705]"/>
  <match src="return: return [96657,96663]" dest="return: return [34443,34449]"/>
  <match src="identifier: FILE [65093,65097]" dest="identifier: FILE [62346,62350]"/>
  <match src="identifier: SafeMath [79798,79806]" dest="identifier: SafeMath [69524,69532]"/>
  <match src="(: ( [100239,100240]" dest="(: ( [38057,38058]"/>
  <match src="&quot;: &quot; [3328,3329]" dest="&quot;: &quot; [3382,3383]"/>
  <match src="call_expression [80889,80924]" dest="call_expression [70956,70995]"/>
  <match src="identifier: GOVERNANCE_SUPER_MAJORITY [45787,45812]" dest="identifier: GOVERNANCE_SUPER_MAJORITY [15041,15066]"/>
  <match src="identifier: amount [101747,101753]" dest="identifier: amount [39565,39571]"/>
  <match src="member_expression [99942,99971]" dest="member_expression [37760,37789]"/>
  <match src="(: ( [10310,10311]" dest="(: ( [10409,10410]"/>
  <match src=",: , [51850,51851]" dest=",: , [60650,60651]"/>
  <match src="call_struct_argument [7402,7436]" dest="call_struct_argument [7501,7535]"/>
  <match src="emit_statement [80766,80798]" dest="emit_statement [70354,70386]"/>
  <match src="primitive_type [16641,16648]" dest="primitive_type [17285,17292]"/>
  <match src=".: . [28987,28988]" dest=".: . [44659,44660]"/>
  <match src="call_expression [9014,9037]" dest="call_expression [9113,9136]"/>
  <match src="contract_body [62557,62713]" dest="contract_body [26426,26582]"/>
  <match src="&quot;: &quot; [3301,3302]" dest="&quot;: &quot; [3355,3356]"/>
  <match src="comment: /**      * ERC20 Interface      */ [98712,98748]" dest="comment: /**      * ERC20 Interface      */ [36530,36566]"/>
  <match src="identifier: OpenZeppelinUpgradesAddress [85455,85482]" dest="identifier: OpenZeppelinUpgradesAddress [72762,72789]"/>
  <match src="primitive_type [44455,44462]" dest="primitive_type [13709,13716]"/>
  <match src="parameter [62650,62654]" dest="parameter [26519,26523]"/>
  <match src="bytes: bytes [35376,35381]" dest="bytes: bytes [51048,51053]"/>
  <match src="identifier: _state [94366,94372]" dest="identifier: _state [32152,32158]"/>
  <match src="uint256: uint256 [82156,82163]" dest="uint256: uint256 [70788,70795]"/>
  <match src="identifier: b [1856,1857]" dest="identifier: b [1910,1911]"/>
  <match src="bool: bool [29828,29832]" dest="bool: bool [45500,45504]"/>
  <match src="uint256: uint256 [45187,45194]" dest="uint256: uint256 [14441,14448]"/>
  <match src="(: ( [54827,54828]" dest="(: ( [21821,21822]"/>
  <match src="call_expression [81588,81765]" dest="call_expression [70806,70945]"/>
  <match src="): ) [83492,83493]" dest="): ) [61376,61377]"/>
  <match src="&quot;: &quot; [82739,82740]" dest="&quot;: &quot; [80509,80510]"/>
  <match src="expression_statement [20467,20538]" dest="expression_statement [63571,63650]"/>
  <match src="): ) [37338,37339]" dest="): ) [53010,53011]"/>
  <match src="}: } [8837,8838]" dest="}: } [8936,8937]"/>
  <match src="parameter [85913,85917]" dest="parameter [73220,73224]"/>
  <match src="}: } [87616,87617]" dest="}: } [27745,27746]"/>
  <match src="expression_statement [99383,99449]" dest="expression_statement [37201,37267]"/>
  <match src="identifier: Candidate [87832,87841]" dest="identifier: Candidate [27961,27970]"/>
  <match src="identifier: expiration [95903,95913]" dest="identifier: expiration [33689,33699]"/>
  <match src="string [1017,1046]" dest="string [1071,1100]"/>
  <match src="identifier: add [82912,82915]" dest="identifier: add [71663,71666]"/>
  <match src="type_name [31196,31203]" dest="type_name [46868,46875]"/>
  <match src="(: ( [106177,106178]" dest="(: ( [68106,68107]"/>
  <match src="!=: != [20566,20568]" dest="!=: != [63678,63680]"/>
  <match src="&quot;: &quot; [49315,49316]" dest="&quot;: &quot; [55681,55682]"/>
  <match src="identifier: amount [23762,23768]" dest="identifier: amount [55138,55144]"/>
  <match src="]: ] [102026,102027]" dest="]: ] [39844,39845]"/>
  <match src="uint: uint [52587,52591]" dest="uint: uint [19581,19585]"/>
  <match src="type_name [91909,91916]" dest="type_name [29695,29702]"/>
  <match src="(: ( [92621,92622]" dest="(: ( [30407,30408]"/>
  <match src="yul_function_call [91079,91110]" dest="yul_function_call [76151,76182]"/>
  <match src="identifier: this [48373,48377]" dest="identifier: this [55099,55103]"/>
  <match src="call_argument [29456,29743]" dest="call_argument [45128,45415]"/>
  <match src="identifier: account [80368,80375]" dest="identifier: account [69751,69758]"/>
  <match src="type_name [5354,5360]" dest="type_name [5408,5414]"/>
  <match src="for: for [16350,16353]" dest="for: for [60142,60145]"/>
  <match src="state_mutability [62687,62691]" dest="state_mutability [26556,26560]"/>
  <match src="): ) [97457,97458]" dest="): ) [35243,35244]"/>
  <match src="function_body [100603,100840]" dest="function_body [38421,38658]"/>
  <match src="=: = [83649,83650]" dest="=: = [71841,71842]"/>
  <match src="): ) [54483,54484]" dest="): ) [21477,21478]"/>
  <match src="number_literal: 2 [11178,11179]" dest="number_literal: 2 [11277,11278]"/>
  <match src="uint256: uint256 [4683,4690]" dest="uint256: uint256 [4737,4744]"/>
  <match src="identifier: approve [104173,104180]" dest="identifier: approve [41991,41998]"/>
  <match src="member_expression [77107,77140]" dest="member_expression [61077,61106]"/>
  <match src="call_expression [21837,21904]" dest="call_expression [63752,63839]"/>
  <match src="comment: /**  * Based off of, and designed to interface with, openzeppelin/upgrades package  */ [89471,89559]" dest="comment: /**  * Based off of, and designed to interface with, openzeppelin/upgrades package  */ [74543,74631]"/>
  <match src="string: string [30700,30706]" dest="string: string [46372,46378]"/>
  <match src="function_body [31965,32552]" dest="function_body [47637,48224]"/>
  <match src="visibility [10344,10352]" dest="visibility [10443,10451]"/>
  <match src="identifier: Transfer [52611,52619]" dest="identifier: Transfer [19605,19613]"/>
  <match src="visibility [99363,99371]" dest="visibility [37181,37189]"/>
  <match src="identifier: balance [93250,93257]" dest="identifier: balance [31036,31043]"/>
  <match src="&quot;: &quot; [90541,90542]" dest="&quot;: &quot; [75613,75614]"/>
  <match src="identifier: transfer [53160,53168]" dest="identifier: transfer [20154,20162]"/>
  <match src="member_expression [102658,102697]" dest="member_expression [40476,40515]"/>
  <match src="identifier: ASCII_ZERO [38104,38114]" dest="identifier: ASCII_ZERO [53776,53786]"/>
  <match src="&quot;: &quot; [83250,83251]" dest="&quot;: &quot; [79973,79974]"/>
  <match src="return_statement [36890,36904]" dest="return_statement [52562,52576]"/>
  <match src="}: } [97262,97263]" dest="}: } [35048,35049]"/>
  <match src="address: address [30585,30592]" dest="address: address [46257,46264]"/>
  <match src="visibility [104124,104132]" dest="visibility [41942,41950]"/>
  <match src="return_statement [95355,95483]" dest="return_statement [33141,33269]"/>
  <match src="): ) [46139,46140]" dest="): ) [15393,15394]"/>
  <match src="call_struct_argument [6823,6834]" dest="call_struct_argument [6922,6933]"/>
  <match src="call_expression [7828,7880]" dest="call_expression [7927,7979]"/>
  <match src="string_literal [92145,92169]" dest="string_literal [29931,29955]"/>
  <match src=".: . [106449,106450]" dest=".: . [68378,68379]"/>
  <match src="function_body [92429,92487]" dest="function_body [30215,30273]"/>
  <match src="function: function [94943,94951]" dest="function: function [32729,32737]"/>
  <match src="(: ( [81359,81360]" dest="(: ( [80578,80579]"/>
  <match src="): ) [45325,45326]" dest="): ) [14579,14580]"/>
  <match src="identifier: sub [101347,101350]" dest="identifier: sub [39165,39168]"/>
  <match src="identifier: decrementBalanceOfStaged [81892,81916]" dest="identifier: decrementBalanceOfStaged [71044,71068]"/>
  <match src="identifier: epoch [95015,95020]" dest="identifier: epoch [32801,32806]"/>
  <match src="parameter [10184,10197]" dest="parameter [10283,10296]"/>
  <match src="identifier: spender [22871,22878]" dest="identifier: spender [63428,63435]"/>
  <match src="member_expression [79915,79925]" dest="member_expression [62948,62958]"/>
  <match src="primitive_type [10222,10226]" dest="primitive_type [10321,10325]"/>
  <match src="member_expression [99246,99260]" dest="member_expression [37064,37078]"/>
  <match src="call_argument [30874,30880]" dest="call_argument [46546,46552]"/>
  <match src="{: { [45592,45593]" dest="{: { [14846,14847]"/>
  <match src="parameter [92622,92635]" dest="parameter [30408,30421]"/>
  <match src="identifier: char [37805,37809]" dest="identifier: char [53477,53481]"/>
  <match src="event: event [90085,90090]" dest="event: event [75157,75162]"/>
  <match src="identifier: self [10256,10260]" dest="identifier: self [10355,10359]"/>
  <match src="returns: returns [93313,93320]" dest="returns: returns [31099,31106]"/>
  <match src="}: } [9990,9991]" dest="}: } [10089,10090]"/>
  <match src="string_literal [20682,20722]" dest="string_literal [62222,62253]"/>
  <match src="call_argument [81858,81868]" dest="call_argument [72046,72056]"/>
  <match src="identifier: z [36681,36682]" dest="identifier: z [52353,52354]"/>
  <match src="primitive_type [67006,67013]" dest="primitive_type [66414,66421]"/>
  <match src="expression_statement [82853,82868]" dest="expression_statement [55483,55498]"/>
  <match src="): ) [44842,44843]" dest="): ) [14096,14097]"/>
  <match src=".: . [100334,100335]" dest=".: . [38152,38153]"/>
  <match src="type_name [53530,53537]" dest="type_name [20524,20531]"/>
  <match src="primitive_type [8539,8546]" dest="primitive_type [8638,8645]"/>
  <match src="enum_value: REJECT [87908,87914]" dest="enum_value: REJECT [28037,28043]"/>
  <match src="identifier: value [80135,80140]" dest="identifier: value [69650,69655]"/>
  <match src="memory: memory [7282,7288]" dest="memory: memory [7381,7387]"/>
  <match src=".: . [10638,10639]" dest=".: . [10737,10738]"/>
  <match src="): ) [35273,35274]" dest="): ) [50945,50946]"/>
  <match src="returns: returns [8183,8190]" dest="returns: returns [8282,8289]"/>
  <match src="function: function [97701,97709]" dest="function: function [35487,35495]"/>
  <match src="{: { [65510,65511]" dest="{: { [66915,66916]"/>
  <match src="identifier: b [8716,8717]" dest="identifier: b [8815,8816]"/>
  <match src="internal: internal [29341,29349]" dest="internal: internal [45013,45021]"/>
  <match src="identifier: temp [8634,8638]" dest="identifier: temp [8733,8737]"/>
  <match src="identifier: lessPhantom [82456,82467]" dest="identifier: price [82495,82500]"/>
  <match src="identifier: EPOCH_OFFSET [43489,43501]" dest="identifier: EPOCH_OFFSET [12743,12755]"/>
  <match src="visibility [64239,64246]" dest="visibility [60170,60177]"/>
  <match src="uint112: uint112 [54012,54019]" dest="uint112: uint112 [21006,21013]"/>
  <match src="call_argument [83758,83766]" dest="call_argument [62609,62614]"/>
  <match src="identifier: IERC20 [50071,50077]" dest="identifier: IERC20 [25510,25516]"/>
  <match src="member_expression [100935,100966]" dest="member_expression [38753,38784]"/>
  <match src="identifier: payloadB [30367,30375]" dest="identifier: payloadB [46039,46047]"/>
  <match src="identifier: amount [100265,100271]" dest="identifier: amount [38083,38089]"/>
  <match src=".: . [93249,93250]" dest=".: . [31035,31036]"/>
  <match src="call_argument [9661,9709]" dest="call_argument [9760,9808]"/>
  <match src="return: return [45759,45765]" dest="return: return [15013,15019]"/>
  <match src="user_defined_type [10017,10021]" dest="user_defined_type [10116,10120]"/>
  <match src="identifier: reason [99655,99661]" dest="identifier: reason [37473,37479]"/>
  <match src="call_argument [46684,46712]" dest="call_argument [15938,15966]"/>
  <match src="}: } [65681,65682]" dest="}: } [67171,67172]"/>
  <match src="state_mutability [54242,54246]" dest="state_mutability [21236,21240]"/>
  <match src="call_expression [107959,107967]" dest="call_expression [66968,66976]"/>
  <match src="=: = [8494,8495]" dest="=: = [8593,8594]"/>
  <match src="identifier: self [8813,8817]" dest="identifier: self [8912,8916]"/>
  <match src="identifier: i [35770,35771]" dest="identifier: i [51442,51443]"/>
  <match src="visibility [53477,53485]" dest="visibility [20471,20479]"/>
  <match src="type_name [64541,64548]" dest="type_name [81790,81797]"/>
  <match src="event: event [53983,53988]" dest="event: event [20977,20982]"/>
  <match src="call_argument [32150,32155]" dest="call_argument [47822,47827]"/>
  <match src="call_argument [83804,83814]" dest="call_argument [62535,62545]"/>
  <match src="): ) [80876,80877]" dest="): ) [71277,71278]"/>
  <match src="identifier: balance [102153,102160]" dest="identifier: balance [39971,39978]"/>
  <match src="function_definition [22557,22895]" dest="function_definition [63166,63452]"/>
  <match src="call_expression [32922,32948]" dest="call_expression [48594,48620]"/>
  <match src="member_expression [96944,96961]" dest="member_expression [34730,34747]"/>
  <match src="visibility [107608,107614]" dest="visibility [81920,81926]"/>
  <match src="identifier: POOL_EXIT_LOCKUP_EPOCHS [44109,44132]" dest="identifier: POOL_EXIT_LOCKUP_EPOCHS [13363,13386]"/>
  <match src="identifier: add [99968,99971]" dest="identifier: add [37786,37789]"/>
  <match src="call_argument [100145,100151]" dest="call_argument [37963,37969]"/>
  <match src="): ) [29945,29946]" dest="): ) [45617,45618]"/>
  <match src="number_literal: 0 [36482,36483]" dest="number_literal: 0 [52154,52155]"/>
  <match src="parameter [100572,100592]" dest="parameter [38390,38410]"/>
  <match src="type_name [15043,15050]" dest="type_name [24719,24726]"/>
  <match src="visibility [92299,92305]" dest="visibility [30085,30091]"/>
  <match src="expression_statement [51237,51260]" dest="expression_statement [54821,54852]"/>
  <match src="uint256: uint256 [94258,94265]" dest="uint256: uint256 [32044,32051]"/>
  <match src="view: view [85899,85903]" dest="view: view [73206,73210]"/>
  <match src="function: function [100212,100220]" dest="function: function [38030,38038]"/>
  <match src="function_body [6675,6719]" dest="function_body [6774,6818]"/>
  <match src="identifier: amount [21369,21375]" dest="identifier: amount [58979,58985]"/>
  <match src=".: . [102056,102057]" dest=".: . [39874,39875]"/>
  <match src=".: . [99428,99429]" dest=".: . [37246,37247]"/>
  <match src="{: { [85483,85484]" dest="{: { [72790,72791]"/>
  <match src="memory: memory [10022,10028]" dest="memory: memory [10121,10127]"/>
  <match src="{: { [96790,96791]" dest="{: { [34576,34577]"/>
  <match src="return: return [6809,6815]" dest="return: return [6908,6914]"/>
  <match src="identifier: totalDebt [93705,93714]" dest="identifier: totalDebt [31491,31500]"/>
  <match src="function_body [97486,97550]" dest="function_body [35272,35336]"/>
  <match src="return: return [45912,45918]" dest="return: return [15166,15172]"/>
  <match src="&quot;: &quot; [81936,81937]" dest="&quot;: &quot; [71088,71089]"/>
  <match src=".: . [102921,102922]" dest=".: . [40739,40740]"/>
  <match src=",: , [53257,53258]" dest=",: , [20251,20252]"/>
  <match src=".: . [101315,101316]" dest=".: . [39133,39134]"/>
  <match src="pure: pure [3940,3944]" dest="pure: pure [3994,3998]"/>
  <match src="identifier: accounts [100656,100664]" dest="identifier: accounts [38474,38482]"/>
  <match src="identifier: from [52636,52640]" dest="identifier: from [19630,19634]"/>
  <match src=".: . [96189,96190]" dest=".: . [33975,33976]"/>
  <match src="primitive_type [99625,99632]" dest="primitive_type [37443,37450]"/>
  <match src="string: string [100572,100578]" dest="string: string [38390,38396]"/>
  <match src=",: , [29276,29277]" dest=",: , [44948,44949]"/>
  <match src="return_statement [7589,7641]" dest="return_statement [7688,7740]"/>
  <match src="call_expression [10628,10648]" dest="call_expression [10727,10747]"/>
  <match src="call_argument [8066,8067]" dest="call_argument [8165,8166]"/>
  <match src="yul_identifier [97856,97860]" dest="yul_identifier [35642,35646]"/>
  <match src="expression_statement [20548,20620]" dest="expression_statement [63660,63740]"/>
  <match src="identifier: mul [7859,7862]" dest="identifier: mul [7958,7961]"/>
  <match src=".: . [101609,101610]" dest=".: . [39427,39428]"/>
  <match src=",: , [23925,23926]" dest=",: , [55372,55373]"/>
  <match src="identifier: balance [99229,99236]" dest="identifier: balance [37047,37054]"/>
  <match src="identifier: price0CumulativeLast [54395,54415]" dest="identifier: price0CumulativeLast [21389,21409]"/>
  <match src="assignment_expression [37784,37828]" dest="assignment_expression [53456,53500]"/>
  <match src="primitive_type [28448,28455]" dest="primitive_type [44120,44127]"/>
  <match src="identifier: _state [94508,94514]" dest="identifier: _state [32294,32300]"/>
  <match src="type_name [5332,5339]" dest="type_name [5386,5393]"/>
  <match src="): ) [7434,7435]" dest="): ) [7533,7534]"/>
  <match src="parameter [99625,99639]" dest="parameter [37443,37457]"/>
  <match src="return_statement [86457,86473]" dest="return_statement [73764,73780]"/>
  <match src="&quot;: &quot; [82705,82706]" dest="&quot;: &quot; [80496,80497]"/>
  <match src="string: string [32027,32033]" dest="string: string [47699,47705]"/>
  <match src=",: , [8894,8895]" dest=",: , [8993,8994]"/>
  <match src="identifier: require [21837,21844]" dest="identifier: decrementBalanceOfCoupons [63752,63777]"/>
  <match src="state_variable_declaration [44183,44232]" dest="state_variable_declaration [13437,13486]"/>
  <match src="uint256: uint256 [34325,34332]" dest="uint256: uint256 [49997,50004]"/>
  <match src="event_definition [51772,51858]" dest="event_definition [60566,60667]"/>
  <match src="identifier: reason [29295,29301]" dest="identifier: reason [44967,44973]"/>
  <match src="function_definition [92756,92852]" dest="function_definition [30542,30638]"/>
  <match src="parameter [10486,10490]" dest="parameter [10585,10589]"/>
  <match src="view: view [95833,95837]" dest="view: view [33619,33623]"/>
  <match src=".: . [101270,101271]" dest=".: . [39088,39089]"/>
  <match src=",: , [90931,90932]" dest=",: , [76003,76004]"/>
  <match src="identifier: D256 [46794,46798]" dest="identifier: D256 [16048,16052]"/>
  <match src="type_name [102407,102414]" dest="type_name [40225,40232]"/>
  <match src="return_type_definition [37979,37993]" dest="return_type_definition [53651,53665]"/>
  <match src="}: } [35331,35332]" dest="}: } [51003,51004]"/>
  <match src="parameter [9898,9911]" dest="parameter [9997,10010]"/>
  <match src="type_name [30517,30521]" dest="type_name [46189,46193]"/>
  <match src="{: { [6325,6326]" dest="{: { [6424,6425]"/>
  <match src="identifier: amount [23927,23933]" dest="identifier: amount [55374,55380]"/>
  <match src="identifier: reject [104576,104582]" dest="identifier: reject [42394,42400]"/>
  <match src="identifier: recipient [51421,51430]" dest="identifier: recipient [63876,63885]"/>
  <match src="(: ( [30211,30212]" dest="(: ( [45883,45884]"/>
  <match src="): ) [51856,51857]" dest="): ) [60665,60666]"/>
  <match src="byte: byte [35775,35779]" dest="byte: byte [51447,51451]"/>
  <match src="assignment_expression [100087,100160]" dest="assignment_expression [37905,37978]"/>
  <match src="{: { [94314,94315]" dest="{: { [32100,32101]"/>
  <match src="event_definition [90085,90132]" dest="event_definition [75157,75204]"/>
  <match src="identifier: account [100479,100486]" dest="identifier: account [38297,38304]"/>
  <match src="call_argument [2673,2708]" dest="call_argument [2727,2762]"/>
  <match src="identifier: value [7402,7407]" dest="identifier: value [7501,7506]"/>
  <match src="return_statement [10503,10526]" dest="return_statement [10602,10625]"/>
  <match src="uint256: uint256 [83476,83483]" dest="uint256: uint256 [66432,66439]"/>
  <match src="member_expression [32796,32812]" dest="member_expression [48468,48484]"/>
  <match src="call_argument [82892,82902]" dest="call_argument [71643,71653]"/>
  <match src="yul_path [34791,34797]" dest="yul_path [50463,50469]"/>
  <match src="type_name [95106,95129]" dest="type_name [32892,32915]"/>
  <match src="type_name [2325,2332]" dest="type_name [2379,2386]"/>
  <match src="identifier: _ [106590,106591]" dest="identifier: _ [68519,68520]"/>
  <match src="): ) [80663,80664]" dest="): ) [70278,70279]"/>
  <match src="visibility [1887,1895]" dest="visibility [1941,1949]"/>
  <match src="identifier: require [26087,26094]" dest="identifier: decrementApproveFor [78544,78563]"/>
  <match src="return: return [38078,38084]" dest="return: return [53750,53756]"/>
  <match src=",: , [94778,94779]" dest=",: , [32564,32565]"/>
  <match src="identifier: candidates [104001,104011]" dest="identifier: candidates [41819,41829]"/>
  <match src="visibility [91917,91924]" dest="visibility [29703,29710]"/>
  <match src="): ) [96275,96276]" dest="): ) [34061,34062]"/>
  <match src="): ) [20618,20619]" dest="): ) [63738,63739]"/>
  <match src="(: ( [29233,29234]" dest="(: ( [44905,44906]"/>
  <match src="identifier: vote [104040,104044]" dest="identifier: vote [41858,41862]"/>
  <match src="type_name [78208,78215]" dest="type_name [82416,82423]"/>
  <match src="parameter [53431,53438]" dest="parameter [20425,20432]"/>
  <match src="identifier: reject [104614,104620]" dest="identifier: reject [42432,42438]"/>
  <match src="array_access [95874,95894]" dest="array_access [33660,33680]"/>
  <match src=",: , [104509,104510]" dest=",: , [42327,42328]"/>
  <match src="visibility [53620,53628]" dest="visibility [20614,20622]"/>
  <match src="(: ( [54199,54200]" dest="(: ( [21193,21194]"/>
  <match src="): ) [46107,46108]" dest="): ) [15361,15362]"/>
  <match src="(: ( [81678,81679]" dest="(: ( [70883,70884]"/>
  <match src="=: = [42990,42991]" dest="=: = [12244,12245]"/>
  <match src="&quot;: &quot; [23302,23303]" dest="&quot;: &quot; [70060,70061]"/>
  <match src="): ) [80563,80564]" dest="): ) [70179,70180]"/>
  <match src="identifier: balanceCheck [81985,81997]" dest="identifier: balanceCheck [55696,55708]"/>
  <match src="type_name [87977,87984]" dest="type_name [28106,28113]"/>
  <match src="call_expression [102297,102304]" dest="call_expression [40115,40122]"/>
  <match src="(: ( [97192,97193]" dest="(: ( [34978,34979]"/>
  <match src="user_defined_type [6657,6661]" dest="user_defined_type [6756,6760]"/>
  <match src="identifier: _state [104183,104189]" dest="identifier: _state [42001,42007]"/>
  <match src="identifier: that [32569,32573]" dest="identifier: that [48241,48245]"/>
  <match src="type_name [98889,98896]" dest="type_name [36707,36714]"/>
  <match src="primitive_type [95579,95586]" dest="primitive_type [33365,33372]"/>
  <match src="primitive_type [43988,43995]" dest="primitive_type [13242,13249]"/>
  <match src="[: [ [97662,97663]" dest="[: [ [35448,35449]"/>
  <match src="identifier: candidate [97589,97598]" dest="identifier: candidate [35375,35384]"/>
  <match src="visibility [3241,3249]" dest="visibility [3295,3303]"/>
  <match src="identifier: that [84655,84659]" dest="identifier: that [79078,79082]"/>
  <match src="private: private [91917,91924]" dest="private: private [29703,29710]"/>
  <match src="type_name [95954,95961]" dest="type_name [33740,33747]"/>
  <match src="function: function [29804,29812]" dest="function: function [45476,45484]"/>
  <match src="type_name [2280,2287]" dest="type_name [2334,2341]"/>
  <match src="primitive_type [101434,101441]" dest="primitive_type [39252,39259]"/>
  <match src="function_definition [72064,72200]" dest="function_definition [58175,58413]"/>
  <match src="returns: returns [6648,6655]" dest="returns: returns [6747,6754]"/>
  <match src="}: } [71831,71832]" dest="}: } [65824,65825]"/>
  <match src="constant: constant [64247,64255]" dest="constant: constant [60178,60186]"/>
  <match src="array_access [104392,104420]" dest="array_access [42210,42238]"/>
  <match src="identifier: IOracle [92899,92906]" dest="identifier: IOracle [30685,30692]"/>
  <match src="parameter [14142,14157]" dest="parameter [23818,23833]"/>
  <match src="call_argument [84845,84854]" dest="call_argument [79304,79323]"/>
  <match src="(: ( [9028,9029]" dest="(: ( [9127,9128]"/>
  <match src="primitive_type [103101,103108]" dest="primitive_type [40919,40926]"/>
  <match src="primitive_type [6351,6358]" dest="primitive_type [6450,6457]"/>
  <match src="bool: bool [31790,31794]" dest="bool: bool [47462,47466]"/>
  <match src="type_cast_expression [35775,35809]" dest="type_cast_expression [51447,51481]"/>
  <match src="function_body [10373,10421]" dest="function_body [10472,10520]"/>
  <match src="primitive_type [54441,54445]" dest="primitive_type [21435,21439]"/>
  <match src="): ) [83876,83877]" dest="): ) [58848,58849]"/>
  <match src="call_expression [29456,29743]" dest="call_expression [45128,45415]"/>
  <match src="if_statement [94504,94611]" dest="if_statement [32290,32397]"/>
  <match src=",: , [84721,84722]" dest=",: , [79138,79139]"/>
  <match src="identifier: sub [102771,102774]" dest="identifier: sub [40589,40592]"/>
  <match src="(: ( [46459,46460]" dest="(: ( [15713,15714]"/>
  <match src="comment: // a library for handling binary fixed point numbers (https://en.wikipedia.org/wiki/Q_(number_format)) [55539,55641]" dest="comment: /*     Copyright 2019 dYdX Trading Inc.      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [43178,43791]"/>
  <match src="event_paramater [53648,53670]" dest="event_paramater [20642,20664]"/>
  <match src="comment: /* Bootstrapping */ [42839,42858]" dest="comment: /* Bootstrapping */ [12093,12112]"/>
  <match src="primitive_type [46132,46139]" dest="primitive_type [15386,15393]"/>
  <match src=".: . [83689,83690]" dest=".: . [71867,71868]"/>
  <match src="&lt;: &lt; [10410,10411]" dest="&lt;: &lt; [10509,10510]"/>
  <match src=".: . [100093,100094]" dest=".: . [37911,37912]"/>
  <match src="identifier: reason [101359,101365]" dest="identifier: reason [39177,39183]"/>
  <match src="external: external [81133,81141]" dest="external: external [79870,79878]"/>
  <match src="array_access [37301,37310]" dest="array_access [52973,52982]"/>
  <match src="comment: /*     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [86487,87140]" dest="comment: // File: contracts/dao/Market.sol [59380,59413]"/>
  <match src="visibility [71978,71984]" dest="visibility [61929,61935]"/>
  <match src="internal: internal [8730,8738]" dest="internal: internal [8829,8837]"/>
  <match src="view: view [93531,93535]" dest="view: view [31317,31321]"/>
  <match src="view: view [96142,96146]" dest="view: view [33928,33932]"/>
  <match src="}: } [104639,104640]" dest="}: } [42457,42458]"/>
  <match src="function_definition [102840,102944]" dest="function_definition [40658,40762]"/>
  <match src="if: if [105080,105082]" dest="if: if [42898,42900]"/>
  <match src="(: ( [28788,28789]" dest="(: ( [44460,44461]"/>
  <match src="memory: memory [104318,104324]" dest="memory: memory [42136,42142]"/>
  <match src="identifier: must [28804,28808]" dest="identifier: must [44476,44480]"/>
  <match src="bool: bool [29244,29248]" dest="bool: bool [44916,44920]"/>
  <match src="call_expression [82034,82041]" dest="call_expression [72136,72143]"/>
  <match src="call_expression [78558,78598]" dest="call_expression [59259,59295]"/>
  <match src="call_argument [82705,82740]" dest="call_argument [80496,80510]"/>
  <match src="uint256: uint256 [100029,100036]" dest="uint256: uint256 [37847,37854]"/>
  <match src="uint256: uint256 [45892,45899]" dest="uint256: uint256 [15146,15153]"/>
  <match src="call_argument [51421,51430]" dest="call_argument [63876,63885]"/>
  <match src="type_name [85873,85880]" dest="type_name [73180,73187]"/>
  <match src="function_body [104133,104239]" dest="function_body [41951,42057]"/>
  <match src="identifier: amount [75787,75793]" dest="identifier: amount [62037,62043]"/>
  <match src="is: is [89582,89584]" dest="is: is [74654,74656]"/>
  <match src=",: , [68195,68196]" dest=",: , [79524,79525]"/>
  <match src=",: , [54696,54697]" dest=",: , [21690,21691]"/>
  <match src="string [80979,81014]" dest="string [70576,70614]"/>
  <match src="ternary_expression [11158,11183]" dest="ternary_expression [11257,11282]"/>
  <match src="(: ( [31090,31091]" dest="(: ( [46762,46763]"/>
  <match src="identifier: fluidUntil [102284,102294]" dest="identifier: fluidUntil [40102,40112]"/>
  <match src="type_name [92677,92684]" dest="type_name [30463,30470]"/>
  <match src="(: ( [30745,30746]" dest="(: ( [46417,46418]"/>
  <match src="view: view [52961,52965]" dest="view: view [19955,19959]"/>
  <match src="identifier: FILE [83383,83387]" dest="identifier: FILE [77558,77562]"/>
  <match src="if: if [38047,38049]" dest="if: if [53719,53721]"/>
  <match src="identifier: that [30502,30506]" dest="identifier: that [46174,46178]"/>
  <match src="state_mutability [9177,9181]" dest="state_mutability [9276,9280]"/>
  <match src="[: [ [101927,101928]" dest="[: [ [39745,39746]"/>
  <match src="identifier: from [8446,8450]" dest="identifier: from [8545,8549]"/>
  <match src="identifier: ASCII_LOWER_EX [36337,36351]" dest="identifier: ASCII_LOWER_EX [52009,52023]"/>
  <match src="emit_statement [82880,82941]" dest="emit_statement [71631,71686]"/>
  <match src="): ) [26619,26620]" dest="): ) [60558,60559]"/>
  <match src="member_expression [82892,82902]" dest="member_expression [71643,71653]"/>
  <match src="]: ] [35771,35772]" dest="]: ] [51443,51444]"/>
  <match src="comment: /* Governance */ [43621,43637]" dest="comment: /* Governance */ [12875,12891]"/>
  <match src="function_definition [80533,80805]" dest="function_definition [70149,70393]"/>
  <match src="function: function [54888,54896]" dest="function: function [21882,21890]"/>
  <match src="parameter [9561,9574]" dest="parameter [9660,9673]"/>
  <match src="visibility [29952,29960]" dest="visibility [45624,45632]"/>
  <match src=",: , [31185,31186]" dest=",: , [46857,46858]"/>
  <match src="identifier: decrementBalanceOfStaged [101105,101129]" dest="identifier: decrementBalanceOfStaged [38923,38947]"/>
  <match src="array_access [100969,100993]" dest="array_access [38787,38811]"/>
  <match src="): ) [71753,71754]" dest="): ) [65763,65764]"/>
  <match src=",: , [33743,33744]" dest=",: , [49415,49416]"/>
  <match src="function_body [45196,45242]" dest="function_body [14450,14496]"/>
  <match src="identifier: amount1 [53691,53698]" dest="identifier: amount1 [20685,20692]"/>
  <match src=".: . [101709,101710]" dest=".: . [39527,39528]"/>
  <match src="identifier: value [9019,9024]" dest="identifier: value [9118,9123]"/>
  <match src="address: address [53006,53013]" dest="address: address [20000,20007]"/>
  <match src="(: ( [22863,22864]" dest="(: ( [63415,63416]"/>
  <match src="pure: pure [31239,31243]" dest="pure: pure [46911,46915]"/>
  <match src="(: ( [8803,8804]" dest="(: ( [8902,8903]"/>
  <match src="function_body [99082,99113]" dest="function_body [36900,36931]"/>
  <match src="address: address [75108,75115]" dest="address: address [55007,55014]"/>
  <match src="identifier: staged [88338,88344]" dest="identifier: staged [28467,28473]"/>
  <match src=",: , [53019,53020]" dest=",: , [20013,20014]"/>
  <match src="identifier: payloadB [32356,32364]" dest="identifier: payloadB [48028,48036]"/>
  <match src="call_expression [9441,9495]" dest="call_expression [9540,9594]"/>
  <match src="call_argument [9699,9706]" dest="call_argument [9798,9805]"/>
  <match src="{: { [657,658]" dest="{: { [711,712]"/>
  <match src="emit_statement [100453,100496]" dest="emit_statement [38271,38314]"/>
  <match src="parameter [29244,29253]" dest="parameter [44916,44925]"/>
  <match src="}: } [6709,6710]" dest="}: } [6808,6809]"/>
  <match src="function: function [103897,103905]" dest="function: function [41715,41723]"/>
  <match src="visibility [97308,97314]" dest="visibility [35094,35100]"/>
  <match src="type_name [83528,83535]" dest="type_name [61449,61456]"/>
  <match src="identifier: liquidity [54623,54632]" dest="identifier: liquidity [21617,21626]"/>
  <match src="call_argument [83903,83913]" dest="call_argument [79788,79798]"/>
  <match src="identifier: spender [92645,92652]" dest="identifier: spender [30431,30438]"/>
  <match src="returns: returns [93536,93543]" dest="returns: returns [31322,31329]"/>
  <match src="call_argument [49356,49363]" dest="call_argument [63367,63374]"/>
  <match src="number_literal: 3600 [43608,43612]" dest="number_literal: 3600 [12862,12866]"/>
  <match src="visibility [92980,92986]" dest="visibility [30766,30772]"/>
  <match src="type_name [101822,101829]" dest="type_name [39640,39647]"/>
  <match src="): ) [103591,103592]" dest="): ) [41409,41410]"/>
  <match src="identifier: balance [92573,92580]" dest="identifier: balance [30359,30366]"/>
  <match src="identifier: amount [101351,101357]" dest="identifier: amount [39169,39175]"/>
  <match src="private: private [43769,43776]" dest="private: private [13023,13030]"/>
  <match src="primitive_type [53672,53676]" dest="primitive_type [20666,20670]"/>
  <match src="identifier: success [90441,90448]" dest="identifier: success [75513,75520]"/>
  <match src="call_argument [102095,102101]" dest="call_argument [39913,39919]"/>
  <match src="identifier: shift [36667,36672]" dest="identifier: shift [52339,52344]"/>
  <match src="primitive_type [100813,100820]" dest="primitive_type [38631,38638]"/>
  <match src="function: function [103702,103710]" dest="function: function [41520,41528]"/>
  <match src="identifier: _state [104547,104553]" dest="identifier: _state [42365,42371]"/>
  <match src="call_argument [32470,32476]" dest="call_argument [48142,48148]"/>
  <match src=".: . [83749,83750]" dest=".: . [62600,62601]"/>
  <match src="identifier: candidate [103855,103864]" dest="identifier: candidate [41673,41682]"/>
  <match src="view: view [97607,97611]" dest="view: view [35393,35397]"/>
  <match src="identifier: coupons [95895,95902]" dest="identifier: coupons [33681,33688]"/>
  <match src="identifier: to [53177,53179]" dest="identifier: to [20171,20173]"/>
  <match src="identifier: reason [100770,100776]" dest="identifier: reason [38588,38594]"/>
  <match src="): ) [62708,62709]" dest="): ) [26577,26578]"/>
  <match src="call_expression [82597,82650]" dest="call_expression [82618,82651]"/>
  <match src="binary_expression [20556,20579]" dest="binary_expression [63668,63691]"/>
  <match src="=: = [37185,37186]" dest="=: = [52857,52858]"/>
  <match src="view: view [92098,92102]" dest="view: view [29884,29888]"/>
  <match src="[: [ [95741,95742]" dest="[: [ [33527,33528]"/>
  <match src="external: external [62678,62686]" dest="external: external [26547,26555]"/>
  <match src=",: , [100897,100898]" dest=",: , [38715,38716]"/>
  <match src="{: { [103983,103984]" dest="{: { [41801,41802]"/>
  <match src=".: . [81254,81255]" dest=".: . [71444,71445]"/>
  <match src="call_expression [84647,84756]" dest="call_expression [79070,79179]"/>
  <match src="user_defined_type [88491,88498]" dest="user_defined_type [28620,28627]"/>
  <match src="visibility [77880,77887]" dest="visibility [80654,80661]"/>
  <match src="(: ( [7908,7909]" dest="(: ( [8007,8008]"/>
  <match src="parameter [92637,92652]" dest="parameter [30423,30438]"/>
  <match src="type_name [44238,44245]" dest="type_name [13492,13499]"/>
  <match src="comment: // return ASCII letter (a-f) [38140,38168]" dest="comment: // return ASCII letter (a-f) [53812,53840]"/>
  <match src="boolean_literal [98851,98856]" dest="boolean_literal [36669,36674]"/>
  <match src="extcodesize: extcodesize [86425,86436]" dest="extcodesize: extcodesize [73732,73743]"/>
  <match src="binary_expression [2637,2642]" dest="binary_expression [2691,2696]"/>
  <match src="identifier: add [101069,101072]" dest="identifier: add [38887,38890]"/>
  <match src="): ) [81679,81680]" dest="): ) [70884,70885]"/>
  <match src="identifier: value [9263,9268]" dest="identifier: value [9362,9367]"/>
  <match src="): ) [87406,87407]" dest="): ) [27535,27536]"/>
  <match src="}: } [9047,9048]" dest="}: } [9146,9147]"/>
  <match src="}: } [47088,47089]" dest="}: } [16342,16343]"/>
  <match src="variable_declaration [81567,81585]" dest="variable_declaration [78141,78155]"/>
  <match src="(: ( [54316,54317]" dest="(: ( [21310,21311]"/>
  <match src="identifier: accounts [105129,105137]" dest="identifier: accounts [42947,42955]"/>
  <match src="identifier: value [83915,83920]" dest="identifier: candidate [79800,79809]"/>
  <match src="uint256: uint256 [8137,8144]" dest="uint256: uint256 [8236,8243]"/>
  <match src="string_literal [81936,81971]" dest="string_literal [71088,71126]"/>
  <match src="call_argument [32056,32499]" dest="call_argument [47728,48171]"/>
  <match src="identifier: token0 [51806,51812]" dest="identifier: from [60603,60607]"/>
  <match src="identifier: outstanding [87659,87670]" dest="identifier: outstanding [27788,27799]"/>
  <match src="identifier: add [8824,8827]" dest="identifier: add [8923,8926]"/>
  <match src="member_expression [104959,104995]" dest="member_expression [42777,42813]"/>
  <match src="identifier: accounts [101492,101500]" dest="identifier: accounts [39310,39318]"/>
  <match src="[: [ [35769,35770]" dest="[: [ [51441,51442]"/>
  <match src="member_expression [94109,94126]" dest="member_expression [31895,31912]"/>
  <match src="parameter [10329,10342]" dest="parameter [10428,10441]"/>
  <match src="external: external [48577,48585]" dest="external: external [62107,62115]"/>
  <match src="identifier: sender [83907,83913]" dest="identifier: sender [79792,79798]"/>
  <match src="function_definition [53151,53217]" dest="function_definition [20145,20211]"/>
  <match src="state_mutability [8364,8368]" dest="state_mutability [8463,8467]"/>
  <match src="identifier: that [82228,82232]" dest="identifier: that [80185,80189]"/>
  <match src="): ) [88076,88077]" dest="): ) [28205,28206]"/>
  <match src="type_name [2291,2298]" dest="type_name [2345,2352]"/>
  <match src="primitive_type [87353,87360]" dest="primitive_type [27482,27489]"/>
  <match src="parameter [9079,9095]" dest="parameter [9178,9194]"/>
  <match src="comment: // '0' [28376,28382]" dest="comment: // '0' [44048,44054]"/>
  <match src="private: private [43576,43583]" dest="private: private [12830,12837]"/>
  <match src="visibility [62678,62686]" dest="visibility [26547,26555]"/>
  <match src="(: ( [30873,30874]" dest="(: ( [46545,46546]"/>
  <match src="): ) [71976,71977]" dest="): ) [61927,61928]"/>
  <match src="identifier: deposit [80542,80549]" dest="identifier: deposit [70158,70165]"/>
  <match src="primitive_type [101853,101859]" dest="primitive_type [39671,39677]"/>
  <match src="return_type_definition [53130,53144]" dest="return_type_definition [20124,20138]"/>
  <match src="identifier: Decimal [66947,66954]" dest="identifier: Decimal [66894,66901]"/>
  <match src="{: { [31987,31988]" dest="{: { [47659,47660]"/>
  <match src="function: function [54038,54046]" dest="function: function [21032,21040]"/>
  <match src="type_name [12734,12741]" dest="type_name [22410,22417]"/>
  <match src="identifier: provider [88526,88534]" dest="identifier: provider [28655,28663]"/>
  <match src="identifier: Constants [77107,77116]" dest="identifier: Constants [61077,61086]"/>
  <match src="identifier: _state [102909,102915]" dest="identifier: _state [40727,40733]"/>
  <match src="function: function [52860,52868]" dest="function: function [19854,19862]"/>
  <match src="type_name [54698,54702]" dest="type_name [21692,21696]"/>
  <match src="state_variable_declaration [64231,64272]" dest="state_variable_declaration [60162,60203]"/>
  <match src="call_argument [95466,95481]" dest="call_argument [33252,33267]"/>
  <match src="binary_expression [36681,36698]" dest="binary_expression [52353,52370]"/>
  <match src="{: { [31965,31966]" dest="{: { [47637,47638]"/>
  <match src="call_argument [30357,30376]" dest="call_argument [46029,46048]"/>
  <match src=".: . [7858,7859]" dest=".: . [7957,7958]"/>
  <match src="identifier: self [9091,9095]" dest="identifier: self [9190,9194]"/>
  <match src="function: function [54453,54461]" dest="function: function [21447,21455]"/>
  <match src="primitive_type [1859,1865]" dest="primitive_type [1913,1919]"/>
  <match src="user_defined_type [9620,9624]" dest="user_defined_type [9719,9723]"/>
  <match src=",: , [101835,101836]" dest=",: , [39653,39654]"/>
  <match src="): ) [31269,31270]" dest="): ) [46941,46942]"/>
  <match src="=: = [73349,73350]" dest="=: = [61524,61525]"/>
  <match src="parameter [23874,23888]" dest="parameter [17494,17508]"/>
  <match src="bytes32: bytes32 [28819,28826]" dest="bytes32: bytes32 [44491,44498]"/>
  <match src="function_body [99372,99456]" dest="function_body [37190,37274]"/>
  <match src="identifier: value [53276,53281]" dest="identifier: value [20270,20275]"/>
  <match src="{: { [88725,88726]" dest="{: { [28854,28855]"/>
  <match src="identifier: candidate [96749,96758]" dest="identifier: candidate [34535,34544]"/>
  <match src="state_mutability [9601,9605]" dest="state_mutability [9700,9704]"/>
  <match src="): ) [99661,99662]" dest="): ) [37479,37480]"/>
  <match src="call_argument [101571,101577]" dest="call_argument [39389,39395]"/>
  <match src="call_argument [49307,49316]" dest="call_argument [55638,55682]"/>
  <match src=",: , [82635,82636]" dest=",: , [82642,82643]"/>
  <match src=",: , [100554,100555]" dest=",: , [38372,38373]"/>
  <match src="(: ( [53300,53301]" dest="(: ( [20294,20295]"/>
  <match src="function_definition [20377,20848]" dest="function_definition [63460,64188]"/>
  <match src="identifier: EPOCH_START [44933,44944]" dest="identifier: EPOCH_START [14187,14198]"/>
  <match src="identifier: self [10457,10461]" dest="identifier: self [10556,10560]"/>
  <match src=":: : [9668,9669]" dest=":: : [9767,9768]"/>
  <match src="): ) [96163,96164]" dest="): ) [33949,33950]"/>
  <match src="identifier: reason [7740,7746]" dest="identifier: reason [7839,7845]"/>
  <match src="function: function [81394,81402]" dest="function: function [70676,70684]"/>
  <match src="identifier: getReserves [54280,54291]" dest="identifier: getReserves [21274,21285]"/>
  <match src="bool: bool [97621,97625]" dest="bool: bool [35407,35411]"/>
  <match src=":: : [8811,8812]" dest=":: : [8910,8911]"/>
  <match src="{: { [9214,9215]" dest="{: { [9313,9314]"/>
  <match src="return_type_definition [93536,93553]" dest="return_type_definition [31322,31339]"/>
  <match src="{: { [46024,46025]" dest="{: { [15278,15279]"/>
  <match src="call_struct_argument [46538,46559]" dest="call_struct_argument [15792,15813]"/>
  <match src="return_type_definition [53491,53505]" dest="return_type_definition [20485,20499]"/>
  <match src="identifier: sender [80964,80970]" dest="identifier: sender [70561,70567]"/>
  <match src="]: ] [104612,104613]" dest="]: ] [42430,42431]"/>
  <match src="(: ( [32812,32813]" dest="(: ( [48484,48485]"/>
  <match src="primitive_type [14159,14166]" dest="primitive_type [23835,23842]"/>
  <match src="visibility [43769,43776]" dest="visibility [13023,13030]"/>
  <match src="state_mutability [47029,47033]" dest="state_mutability [16283,16287]"/>
  <match src="): ) [45590,45591]" dest="): ) [14844,14845]"/>
  <match src="identifier: owner [53538,53543]" dest="identifier: owner [20532,20537]"/>
  <match src="parameter [9319,9335]" dest="parameter [9418,9434]"/>
  <match src="): ) [80624,80625]" dest="): ) [70239,70240]"/>
  <match src="primitive_type [34961,34966]" dest="primitive_type [50633,50638]"/>
  <match src="(: ( [66979,66980]" dest="(: ( [66390,66391]"/>
  <match src="type_name [53717,53724]" dest="type_name [20711,20718]"/>
  <match src="call_argument [68210,68214]" dest="call_argument [79539,79543]"/>
  <match src="identifier: EpochStrategy [44862,44875]" dest="identifier: EpochStrategy [14116,14129]"/>
  <match src="call_expression [66461,66476]" dest="call_expression [62422,62429]"/>
  <match src="address: address [101130,101137]" dest="address: address [38948,38955]"/>
  <match src="(: ( [97724,97725]" dest="(: ( [35510,35511]"/>
  <match src="identifier: Decimal [46825,46832]" dest="identifier: Decimal [16079,16086]"/>
  <match src="identifier: initializer [107596,107607]" dest="identifier: initializer [81908,81919]"/>
  <match src="type_name [31144,31151]" dest="type_name [46816,46823]"/>
  <match src="): ) [8723,8724]" dest="): ) [8822,8823]"/>
  <match src=",: , [79773,79774]" dest=",: , [69498,69499]"/>
  <match src="identifier: value [11099,11104]" dest="identifier: value [11198,11203]"/>
  <match src="primitive_type [67221,67228]" dest="primitive_type [62440,62447]"/>
  <match src="uint256: uint256 [103116,103123]" dest="uint256: uint256 [40934,40941]"/>
  <match src="): ) [86444,86445]" dest="): ) [73751,73752]"/>
  <match src="identifier: Account [106490,106497]" dest="identifier: Account [68419,68426]"/>
  <match src="(: ( [44796,44797]" dest="(: ( [14050,14051]"/>
  <match src="primitive_type [83620,83627]" dest="primitive_type [61039,61046]"/>
  <match src="identifier: spender [22730,22737]" dest="identifier: spender [63251,63258]"/>
  <match src="(: ( [32857,32858]" dest="(: ( [48529,48530]"/>
  <match src="{: { [45074,45075]" dest="{: { [14328,14329]"/>
  <match src="string [1446,1478]" dest="string [1500,1532]"/>
  <match src="constant: constant [28396,28404]" dest="constant: constant [44068,44076]"/>
  <match src="parameter [31885,31901]" dest="parameter [47557,47573]"/>
  <match src="variable_declaration [73324,73348]" dest="variable_declaration [61503,61523]"/>
  <match src="identifier: nonces [53455,53461]" dest="identifier: nonces [20449,20455]"/>
  <match src="identifier: a [1440,1441]" dest="identifier: a [1494,1495]"/>
  <match src="primitive_type [14574,14581]" dest="primitive_type [24250,24257]"/>
  <match src="visibility [52698,52706]" dest="visibility [19692,19700]"/>
  <match src="private: private [65725,65732]" dest="private: private [66197,66204]"/>
  <match src="{: { [92686,92687]" dest="{: { [30472,30473]"/>
  <match src="return_type_definition [53202,53216]" dest="return_type_definition [20196,20210]"/>
  <match src="): ) [37061,37062]" dest="): ) [52733,52734]"/>
  <match src="type_name [81408,81415]" dest="type_name [70690,70697]"/>
  <match src="uint8: uint8 [36331,36336]" dest="uint8: uint8 [52003,52008]"/>
  <match src="identifier: initializeCouponsExpiration [103073,103100]" dest="identifier: initializeCouponsExpiration [40891,40918]"/>
  <match src="number_literal: 32 [37476,37478]" dest="number_literal: 32 [53148,53150]"/>
  <match src="[: [ [101969,101970]" dest="[: [ [39787,39788]"/>
  <match src="comment: // ============ Library Functions ============ [28721,28767]" dest="comment: // ============ Library Functions ============ [44393,44439]"/>
  <match src="identifier: self [7409,7413]" dest="identifier: self [7508,7512]"/>
  <match src="identifier: snapshotTotalBonded [102961,102980]" dest="identifier: snapshotTotalBonded [40779,40798]"/>
  <match src="type_name [29287,29294]" dest="type_name [44959,44966]"/>
  <match src="parameter [85873,85888]" dest="parameter [73180,73195]"/>
  <match src="function_definition [21129,21437]" dest="function_definition [55902,56053]"/>
  <match src="primitive_type [32604,32611]" dest="primitive_type [48276,48283]"/>
  <match src="contract: contract [89561,89569]" dest="contract: contract [74633,74641]"/>
  <match src="identifier: epoch [77095,77100]" dest="identifier: epoch [61065,61070]"/>
  <match src="memory: memory [8768,8774]" dest="memory: memory [8867,8873]"/>
  <match src="type_name [73173,73180]" dest="type_name [65971,65978]"/>
  <match src="expression_statement [49109,49219]" dest="expression_statement [69958,70073]"/>
  <match src="call_argument [20475,20495]" dest="call_argument [63579,63599]"/>
  <match src="indexed: indexed [80110,80117]" dest="indexed: indexed [69625,69632]"/>
  <match src="identifier: self [7610,7614]" dest="identifier: self [7709,7713]"/>
  <match src=",: , [102598,102599]" dest=",: , [40416,40417]"/>
  <match src="comment: /* Pool */ [44068,44078]" dest="comment: /* Pool */ [13322,13332]"/>
  <match src="address: address [99023,99030]" dest="address: address [36841,36848]"/>
  <match src="(: ( [71975,71976]" dest="(: ( [61912,61913]"/>
  <match src="type_name [88619,88630]" dest="type_name [28748,28759]"/>
  <match src="string [83402,83433]" dest="string [72067,72098]"/>
  <match src="function_definition [54159,54209]" dest="function_definition [21153,21203]"/>
  <match src="identifier: balanceOfBonded [82164,82179]" dest="identifier: balance [70796,70803]"/>
  <match src="(: ( [96392,96393]" dest="(: ( [34178,34179]"/>
  <match src="return: return [46517,46523]" dest="return: return [15771,15777]"/>
  <match src="primitive_type [50255,50259]" dest="primitive_type [25694,25698]"/>
  <match src="call_argument [44876,44990]" dest="call_argument [14130,14244]"/>
  <match src="(: ( [9195,9196]" dest="(: ( [9294,9295]"/>
  <match src="type_name [43643,43650]" dest="type_name [12897,12904]"/>
  <match src="): ) [53438,53439]" dest="): ) [20432,20433]"/>
  <match src="=: = [67333,67334]" dest="=: = [66966,66967]"/>
  <match src="call_argument [100762,100768]" dest="call_argument [38580,38586]"/>
  <match src="identifier: decrementAllowanceCoupons [102542,102567]" dest="identifier: decrementAllowanceCoupons [40360,40385]"/>
  <match src="call_argument [36681,36698]" dest="call_argument [52353,52370]"/>
  <match src="member_expression [11097,11104]" dest="member_expression [11196,11203]"/>
  <match src="member_expression [101632,101645]" dest="member_expression [39450,39463]"/>
  <match src="identifier: temp [8592,8596]" dest="identifier: temp [8691,8695]"/>
  <match src="identifier: bonded [99261,99267]" dest="identifier: bonded [37079,37085]"/>
  <match src="{: { [81442,81443]" dest="{: { [70744,70745]"/>
  <match src="++: ++ [37481,37483]" dest="++: ++ [53153,53155]"/>
  <match src="identifier: lockedUntil [94533,94544]" dest="identifier: lockedUntil [32319,32330]"/>
  <match src="visibility [7079,7087]" dest="visibility [7178,7186]"/>
  <match src="}: } [7185,7186]" dest="}: } [7284,7285]"/>
  <match src=".: . [101263,101264]" dest=".: . [39081,39082]"/>
  <match src="identifier: couponAllowances [102681,102697]" dest="identifier: couponAllowances [40499,40515]"/>
  <match src="): ) [72168,72169]" dest="): ) [58276,58277]"/>
  <match src="uint256: uint256 [31912,31919]" dest="uint256: uint256 [47584,47591]"/>
  <match src="type_name [9620,9624]" dest="type_name [9719,9723]"/>
  <match src="identifier: payloadA [31562,31570]" dest="identifier: payloadA [47234,47242]"/>
  <match src="parameter [95701,95708]" dest="parameter [33487,33494]"/>
  <match src="): ) [90130,90131]" dest="): ) [75202,75203]"/>
  <match src="}: } [88429,88430]" dest="}: } [28558,28559]"/>
  <match src="primitive_type [80651,80658]" dest="primitive_type [70266,70273]"/>
  <match src="}: } [106598,106599]" dest="}: } [68527,68528]"/>
  <match src="primitive_type [97773,97780]" dest="primitive_type [35559,35566]"/>
  <match src="): ) [2300,2301]" dest="): ) [2354,2355]"/>
  <match src="function: function [54271,54279]" dest="function: function [21265,21273]"/>
  <match src="state_mutability [30628,30632]" dest="state_mutability [46300,46304]"/>
  <match src="): ) [106698,106699]" dest="): ) [68627,68628]"/>
  <match src="identifier: a [1982,1983]" dest="identifier: a [2036,2037]"/>
  <match src="function_body [93225,93272]" dest="function_body [31011,31058]"/>
  <match src="): ) [84755,84756]" dest="): ) [79178,79179]"/>
  <match src="identifier: size [86417,86421]" dest="identifier: size [73724,73728]"/>
  <match src="private: private [43073,43080]" dest="private: private [12327,12334]"/>
  <match src=",: , [26113,26114]" dest=",: , [78573,78574]"/>
  <match src="): ) [93699,93700]" dest="): ) [31485,31486]"/>
  <match src="}: } [46720,46721]" dest="}: } [15974,15975]"/>
  <match src="(: ( [93084,93085]" dest="(: ( [30870,30871]"/>
  <match src="call_argument [82281,82285]" dest="call_argument [80322,80326]"/>
  <match src=".: . [12062,12063]" dest=".: . [63921,63922]"/>
  <match src="identifier: sub [9025,9028]" dest="identifier: sub [9124,9127]"/>
  <match src="state_mutability [71985,71989]" dest="state_mutability [61936,61940]"/>
  <match src="identifier: result [37301,37307]" dest="identifier: result [52973,52979]"/>
  <match src="}: } [44639,44640]" dest="}: } [13893,13894]"/>
  <match src="parameter [31912,31928]" dest="parameter [47584,47600]"/>
  <match src="expression_statement [101301,101367]" dest="expression_statement [39119,39185]"/>
  <match src=".: . [94686,94687]" dest=".: . [32472,32473]"/>
  <match src="function_definition [44771,44999]" dest="function_definition [14025,14253]"/>
  <match src="{: { [99903,99904]" dest="{: { [37721,37722]"/>
  <match src="type_name [30560,30567]" dest="type_name [46232,46239]"/>
  <match src="identifier: Status [94711,94717]" dest="identifier: Status [32497,32503]"/>
  <match src="=: = [100734,100735]" dest="=: = [38552,38553]"/>
  <match src="indexed: indexed [52570,52577]" dest="indexed: indexed [19564,19571]"/>
  <match src="return_type_definition [93423,93440]" dest="return_type_definition [31209,31226]"/>
  <match src="if: if [94278,94280]" dest="if: if [32064,32066]"/>
  <match src="call_argument [10918,10929]" dest="call_argument [11017,11028]"/>
  <match src="function_definition [98756,98864]" dest="function_definition [36574,36682]"/>
  <match src=",: , [10988,10989]" dest=",: , [11087,11088]"/>
  <match src="type_name [53431,53438]" dest="type_name [20425,20432]"/>
  <match src="}: } [87493,87494]" dest="}: } [27622,27623]"/>
  <match src="member_expression [93459,93484]" dest="member_expression [31245,31270]"/>
  <match src="memory: memory [45740,45746]" dest="memory: memory [14994,15000]"/>
  <match src="identifier: coupons [103553,103560]" dest="identifier: coupons [41371,41378]"/>
  <match src="=: = [28480,28481]" dest="=: = [44152,44153]"/>
  <match src=",: , [30828,30829]" dest=",: , [46500,46501]"/>
  <match src="private: private [11025,11032]" dest="private: private [11124,11131]"/>
  <match src="string [68229,68238]" dest="string [79558,79576]"/>
  <match src="identifier: owner [102738,102743]" dest="identifier: owner [40556,40561]"/>
  <match src="return_statement [71796,71825]" dest="return_statement [65799,65818]"/>
  <match src="type_name [71999,72006]" dest="type_name [61950,61957]"/>
  <match src="uint256: uint256 [67006,67013]" dest="uint256: uint256 [66414,66421]"/>
  <match src="identifier: value [11088,11093]" dest="identifier: value [11187,11192]"/>
  <match src="identifier: result [34791,34797]" dest="identifier: result [50463,50469]"/>
  <match src="function_body [98833,98864]" dest="function_body [36651,36682]"/>
  <match src="identifier: epochs [95735,95741]" dest="identifier: epochs [33521,33527]"/>
  <match src="): ) [22621,22622]" dest="): ) [63221,63222]"/>
  <match src="identifier: _index [64528,64534]" dest="identifier: oraclePrice [65287,65298]"/>
  <match src="(: ( [80277,80278]" dest="(: ( [69833,69834]"/>
  <match src="!: ! [106668,106669]" dest="!: ! [68597,68598]"/>
  <match src="(: ( [92200,92201]" dest="(: ( [29986,29987]"/>
  <match src="uint256: uint256 [94981,94988]" dest="uint256: uint256 [32767,32774]"/>
  <match src="primitive_type [54917,54924]" dest="primitive_type [21911,21918]"/>
  <match src="call_argument [37324,37338]" dest="call_argument [52996,53010]"/>
  <match src="identifier: notPaused [80597,80606]" dest="identifier: onlyFrozenOrLocked [70190,70208]"/>
  <match src="view: view [92525,92529]" dest="view: view [30311,30315]"/>
  <match src="call_argument [27128,27135]" dest="call_argument [55082,55089]"/>
  <match src=",: , [29641,29642]" dest=",: , [45313,45314]"/>
  <match src="returns: returns [97320,97327]" dest="returns: returns [35106,35113]"/>
  <match src="parameter [100899,100913]" dest="parameter [38717,38731]"/>
  <match src="private: private [89830,89837]" dest="private: private [74902,74909]"/>
  <match src="primitive_type [1848,1855]" dest="primitive_type [1902,1909]"/>
  <match src="identifier: that [33153,33157]" dest="identifier: that [48825,48829]"/>
  <match src="mapping: mapping [88600,88607]" dest="mapping: mapping [28729,28736]"/>
  <match src="number_literal: 0 [81605,81606]" dest="number_literal: 0 [70823,70824]"/>
  <match src=",: , [22751,22752]" dest=",: , [63272,63273]"/>
  <match src="identifier: encodeWithSignature [90508,90527]" dest="identifier: encodeWithSignature [75580,75599]"/>
  <match src="primitive_type [74666,74673]" dest="primitive_type [76993,77000]"/>
  <match src="[: [ [94523,94524]" dest="[: [ [32309,32310]"/>
  <match src="identifier: epoch [103617,103622]" dest="identifier: epoch [41435,41440]"/>
  <match src="): ) [8924,8925]" dest="): ) [9023,9024]"/>
  <match src="address: address [53769,53776]" dest="address: address [20763,20770]"/>
  <match src="uint256: uint256 [46015,46022]" dest="uint256: uint256 [15269,15276]"/>
  <match src="): ) [95997,95998]" dest="): ) [33783,33784]"/>
  <match src="): ) [13087,13088]" dest="): ) [22763,22764]"/>
  <match src="call_argument [10256,10260]" dest="call_argument [10355,10359]"/>
  <match src="identifier: file [29046,29050]" dest="identifier: file [44718,44722]"/>
  <match src="variable_declaration_statement [90435,90545]" dest="variable_declaration_statement [75507,75617]"/>
  <match src="internal: internal [9775,9783]" dest="internal: internal [9874,9882]"/>
  <match src="identifier: amount [99272,99278]" dest="identifier: amount [37090,37096]"/>
  <match src=",: , [82048,82049]" dest=",: , [72150,72151]"/>
  <match src="call_argument [51497,51499]" dest="call_argument [63990,63992]"/>
  <match src="function: function [95044,95052]" dest="function: function [32830,32838]"/>
  <match src="parameter [46632,46651]" dest="parameter [15886,15905]"/>
  <match src="primitive_type [53109,53113]" dest="primitive_type [20103,20107]"/>
  <match src="(: ( [80584,80585]" dest="(: ( [77467,77468]"/>
  <match src="returns: returns [44813,44820]" dest="returns: returns [14067,14074]"/>
  <match src="(: ( [65456,65457]" dest="(: ( [66874,66875]"/>
  <match src="uint256: uint256 [80474,80481]" dest="uint256: uint256 [60652,60659]"/>
  <match src="state_mutability [7093,7097]" dest="state_mutability [7192,7196]"/>
  <match src="=: = [37803,37804]" dest="=: = [53475,53476]"/>
  <match src="user_defined_type [88462,88474]" dest="user_defined_type [28591,28603]"/>
  <match src="visibility [33319,33327]" dest="visibility [48991,48999]"/>
  <match src="call_expression [106442,106577]" dest="call_expression [68371,68506]"/>
  <match src="): ) [100831,100832]" dest="): ) [38649,38650]"/>
  <match src="struct_member [88600,88639]" dest="struct_member [28729,28768]"/>
  <match src="identifier: i [37465,37466]" dest="identifier: i [53137,53138]"/>
  <match src="): ) [87360,87361]" dest="): ) [27489,27490]"/>
  <match src=",: , [65078,65079]" dest=",: , [62331,62332]"/>
  <match src="member_expression [100614,100646]" dest="member_expression [38432,38464]"/>
  <match src="identifier: slot [91016,91020]" dest="identifier: slot [76088,76092]"/>
  <match src="call_argument [4762,4763]" dest="call_argument [4816,4817]"/>
  <match src="uint8: uint8 [38190,38195]" dest="uint8: uint8 [53862,53867]"/>
  <match src="return_statement [2722,2731]" dest="return_statement [2776,2785]"/>
  <match src="identifier: abi [34188,34191]" dest="identifier: abi [49860,49863]"/>
  <match src="identifier: approve [98881,98888]" dest="identifier: approve [36699,36706]"/>
  <match src="identifier: _state [97082,97088]" dest="identifier: _state [34868,34874]"/>
  <match src="function: function [53315,53323]" dest="function: function [20309,20317]"/>
  <match src="type_name [30537,30544]" dest="type_name [46209,46216]"/>
  <match src="(: ( [1937,1938]" dest="(: ( [1991,1992]"/>
  <match src="pure: pure [6761,6765]" dest="pure: pure [6860,6864]"/>
  <match src="call_expression [4041,4069]" dest="call_expression [4095,4123]"/>
  <match src="type_name [70159,70166]" dest="type_name [69790,69797]"/>
  <match src="): ) [90160,90161]" dest="): ) [75232,75233]"/>
  <match src="visibility [90847,90854]" dest="visibility [75919,75926]"/>
  <match src=".: . [95392,95393]" dest=".: . [33178,33179]"/>
  <match src="(: ( [30366,30367]" dest="(: ( [46038,46039]"/>
  <match src="pure: pure [9386,9390]" dest="pure: pure [9485,9489]"/>
  <match src="call_expression [105024,105043]" dest="call_expression [42842,42861]"/>
  <match src="function: function [97419,97427]" dest="function: function [35205,35213]"/>
  <match src="member_expression [80585,80595]" dest="member_expression [77468,77478]"/>
  <match src="identifier: debt [99543,99547]" dest="identifier: debt [37361,37365]"/>
  <match src="): ) [54231,54232]" dest="): ) [21225,21226]"/>
  <match src="call_argument [73271,73278]" dest="call_argument [80820,80827]"/>
  <match src="is: is [98572,98574]" dest="is: is [36390,36392]"/>
  <match src="): ) [45746,45747]" dest="): ) [15000,15001]"/>
  <match src="parameter [99641,99661]" dest="parameter [37459,37479]"/>
  <match src="identifier: _state [103837,103843]" dest="identifier: _state [41655,41661]"/>
  <match src="identifier: value [81372,81377]" dest="identifier: value [71187,71192]"/>
  <match src="identifier: Decimal [45306,45313]" dest="identifier: Decimal [14560,14567]"/>
  <match src="(: ( [73367,73368]" dest="(: ( [61538,61539]"/>
  <match src="number_literal: 60e18 [43969,43974]" dest="number_literal: 60e18 [13223,13228]"/>
  <match src="identifier: balance [100353,100360]" dest="identifier: balance [38171,38178]"/>
  <match src="user_defined_type [94477,94491]" dest="user_defined_type [32263,32277]"/>
  <match src="identifier: stringify [32424,32433]" dest="identifier: stringify [48096,48105]"/>
  <match src="event_paramater [52620,52640]" dest="event_paramater [19614,19634]"/>
  <match src="identifier: Require [49109,49116]" dest="identifier: Require [69958,69965]"/>
  <match src="(: ( [34204,34205]" dest="(: ( [49876,49877]"/>
  <match src="identifier: accounts [92454,92462]" dest="identifier: accounts [30240,30248]"/>
  <match src="private: private [67559,67566]" dest="private: private [58459,58466]"/>
  <match src="member_expression [9822,9832]" dest="member_expression [9921,9931]"/>
  <match src="revert_statement [32742,33118]" dest="revert_statement [48414,48790]"/>
  <match src="uint256: uint256 [87464,87471]" dest="uint256: uint256 [27593,27600]"/>
  <match src="function_body [80607,80805]" dest="function_body [70221,70393]"/>
  <match src="identifier: D256 [8878,8882]" dest="identifier: D256 [8977,8981]"/>
  <match src="identifier: epochs [95881,95887]" dest="identifier: epochs [33667,33673]"/>
  <match src="identifier: b [4049,4050]" dest="identifier: b [4103,4104]"/>
  <match src=".: . [101509,101510]" dest=".: . [39327,39328]"/>
  <match src="identifier: decimals [92288,92296]" dest="identifier: decimals [30074,30082]"/>
  <match src="identifier: newImplementation [90404,90421]" dest="identifier: newImplementation [75476,75493]"/>
  <match src="(: ( [3880,3881]" dest="(: ( [3934,3935]"/>
  <match src="): ) [13063,13064]" dest="): ) [22739,22740]"/>
  <match src="identifier: result [37255,37261]" dest="identifier: result [52927,52933]"/>
  <match src="boolean_literal [99100,99105]" dest="boolean_literal [36918,36923]"/>
  <match src="): ) [36840,36841]" dest="): ) [52512,52513]"/>
  <match src="primitive_type [72156,72163]" dest="primitive_type [58264,58271]"/>
  <match src=".: . [97510,97511]" dest=".: . [35296,35297]"/>
  <match src="function_body [46141,46189]" dest="function_body [15395,15443]"/>
  <match src="visibility [10463,10471]" dest="visibility [10562,10570]"/>
  <match src="variable_declaration_statement [82353,82438]" dest="variable_declaration_statement [78141,78180]"/>
  <match src="): ) [53341,53342]" dest="): ) [20335,20336]"/>
  <match src="identifier: bonded [93150,93156]" dest="identifier: bonded [30936,30942]"/>
  <match src="member_expression [7409,7423]" dest="member_expression [7508,7522]"/>
  <match src="identifier: newImplementation [90828,90845]" dest="identifier: newImplementation [75900,75917]"/>
  <match src="identifier: value [81416,81421]" dest="identifier: value [70698,70703]"/>
  <match src="): ) [68248,68249]" dest="): ) [79586,79587]"/>
  <match src="==: == [9833,9835]" dest="==: == [9932,9934]"/>
  <match src="identifier: candidates [104592,104602]" dest="identifier: candidates [42410,42420]"/>
  <match src="identifier: payloadB [33271,33279]" dest="identifier: payloadB [48943,48951]"/>
  <match src="member_expression [95874,95887]" dest="member_expression [33660,33673]"/>
  <match src="if_statement [29987,30478]" dest="if_statement [45659,46150]"/>
  <match src="constant: constant [43849,43857]" dest="constant: constant [13103,13111]"/>
  <match src="return_type_definition [46123,46140]" dest="return_type_definition [15377,15394]"/>
  <match src="identifier: incrementBalanceOfBonded [81778,81802]" dest="identifier: decrementBalanceOf [71548,71566]"/>
  <match src="type_name [99625,99632]" dest="type_name [37443,37450]"/>
  <match src="&quot;: &quot; [4765,4766]" dest="&quot;: &quot; [4819,4820]"/>
  <match src="parameter [12734,12749]" dest="parameter [22410,22425]"/>
  <match src="call_expression [100407,100440]" dest="call_expression [38225,38258]"/>
  <match src="visibility [105235,105243]" dest="visibility [43053,43061]"/>
  <match src="): ) [94312,94313]" dest="): ) [32098,32099]"/>
  <match src="binary_expression [8554,8559]" dest="binary_expression [8653,8658]"/>
  <match src="(: ( [51789,51790]" dest="(: ( [60586,60587]"/>
  <match src="(: ( [38089,38090]" dest="(: ( [53761,53762]"/>
  <match src="member_expression [97356,97381]" dest="member_expression [35142,35167]"/>
  <match src="member_expression [103538,103560]" dest="member_expression [41356,41378]"/>
  <match src="comment: // 'a' - 10 [28431,28442]" dest="comment: // 'a' - 10 [44103,44114]"/>
  <match src="event_definition [15028,15106]" dest="event_definition [24704,24782]"/>
  <match src="call_argument [32424,32443]" dest="call_argument [48096,48115]"/>
  <match src="identifier: z [37705,37706]" dest="identifier: z [53377,53378]"/>
  <match src="type_cast_expression [80651,80664]" dest="type_cast_expression [70266,70279]"/>
  <match src="(: ( [100803,100804]" dest="(: ( [38621,38622]"/>
  <match src="[: [ [104028,104029]" dest="[: [ [41846,41847]"/>
  <match src="member_expression [95008,95028]" dest="member_expression [32794,32814]"/>
  <match src="uint256: uint256 [81408,81415]" dest="uint256: uint256 [70690,70697]"/>
  <match src="function_definition [93064,93164]" dest="function_definition [30850,30950]"/>
  <match src="!: ! [30653,30654]" dest="!: ! [46325,46326]"/>
  <match src="type_name [53741,53745]" dest="type_name [20735,20739]"/>
  <match src="function_body [34107,34977]" dest="function_body [49779,50649]"/>
  <match src="type_name [9898,9902]" dest="type_name [9997,10001]"/>
  <match src="function_definition [34985,35922]" dest="function_definition [50657,51594]"/>
  <match src="uint256: uint256 [94818,94825]" dest="uint256: uint256 [32604,32611]"/>
  <match src="=: = [36324,36325]" dest="=: = [51996,51997]"/>
  <match src="expression_statement [37701,37712]" dest="expression_statement [53373,53384]"/>
  <match src="string: string [102616,102622]" dest="string: string [40434,40440]"/>
  <match src="visibility [54233,54241]" dest="visibility [21227,21235]"/>
  <match src="identifier: coupons [101552,101559]" dest="identifier: coupons [39370,39377]"/>
  <match src="identifier: amount1Out [54754,54764]" dest="identifier: amount1Out [21748,21758]"/>
  <match src=":: : [6980,6981]" dest=":: : [7079,7080]"/>
  <match src="&quot;: &quot; [106288,106289]" dest="&quot;: &quot; [68217,68218]"/>
  <match src="}: } [46312,46313]" dest="}: } [15566,15567]"/>
  <match src="}: } [7887,7888]" dest="}: } [7986,7987]"/>
  <match src="call_argument [81360,81370]" dest="call_argument [80579,80589]"/>
  <match src="call_argument [29027,29051]" dest="call_argument [44699,44723]"/>
  <match src="identifier: msg [79915,79918]" dest="identifier: msg [62948,62951]"/>
  <match src="internal: internal [78019,78027]" dest="internal: internal [56104,56112]"/>
  <match src="member_expression [81462,81472]" dest="member_expression [70764,70774]"/>
  <match src="call_argument [23257,23263]" dest="call_argument [17353,17359]"/>
  <match src="identifier: b [10407,10408]" dest="identifier: b [10506,10507]"/>
  <match src="identifier: file [30129,30133]" dest="identifier: file [45801,45805]"/>
  <match src=".: . [104983,104984]" dest=".: . [42801,42802]"/>
  <match src="returns: returns [54247,54254]" dest="returns: returns [21241,21248]"/>
  <match src="member_expression [94578,94592]" dest="member_expression [32364,32378]"/>
  <match src=".: . [81654,81655]" dest=".: . [70859,70860]"/>
  <match src="): ) [103422,103423]" dest="): ) [41240,41241]"/>
  <match src="identifier: c [1009,1010]" dest="identifier: c [1063,1064]"/>
  <match src="identifier: getInitialStakeMultiple [81655,81678]" dest="identifier: getInitialStakeMultiple [70860,70883]"/>
  <match src="): ) [8261,8262]" dest="): ) [8360,8361]"/>
  <match src="visibility [24116,24123]" dest="visibility [18782,18789]"/>
  <match src="visibility [24088,24095]" dest="visibility [17516,17523]"/>
  <match src="(: ( [80959,80960]" dest="(: ( [70556,70557]"/>
  <match src="state_mutability [35998,36002]" dest="state_mutability [51670,51674]"/>
  <match src="(: ( [106136,106137]" dest="(: ( [68065,68066]"/>
  <match src="function: function [32560,32568]" dest="function: function [48232,48240]"/>
  <match src="type_name [33211,33218]" dest="type_name [48883,48890]"/>
  <match src="identifier: _state [103156,103162]" dest="identifier: _state [40974,40980]"/>
  <match src=",: , [2671,2672]" dest=",: , [2725,2726]"/>
  <match src="struct_member [87545,87559]" dest="struct_member [27674,27688]"/>
  <match src="identifier: reason [29129,29135]" dest="identifier: reason [44801,44807]"/>
  <match src="identifier: stringifyTruncated [30855,30873]" dest="identifier: stringifyTruncated [46527,46545]"/>
  <match src="identifier: amount [51185,51191]" dest="identifier: amount [54793,54799]"/>
  <match src="(: ( [33495,33496]" dest="(: ( [49167,49168]"/>
  <match src="identifier: accounts [101534,101542]" dest="identifier: accounts [39352,39360]"/>
  <match src="{: { [103771,103772]" dest="{: { [41589,41590]"/>
  <match src="function: function [36919,36927]" dest="function: function [52591,52599]"/>
  <match src="memory: memory [34094,34100]" dest="memory: memory [49766,49772]"/>
  <match src="solidity_version_comparison_operator [15,17]" dest="solidity_version_comparison_operator [69,71]"/>
  <match src="state_mutability [53047,53051]" dest="state_mutability [20041,20045]"/>
  <match src=":: : [8240,8241]" dest=":: : [8339,8340]"/>
  <match src="expression_statement [102259,102345]" dest="expression_statement [40077,40163]"/>
  <match src="comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      */ [2746,3200]" dest="comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      */ [2800,3254]"/>
  <match src="(: ( [80220,80221]" dest="(: ( [77325,77326]"/>
  <match src="(: ( [7266,7267]" dest="(: ( [7365,7366]"/>
  <match src="memory: memory [8482,8488]" dest="memory: memory [8581,8587]"/>
  <match src=".: . [93473,93474]" dest=".: . [31259,31260]"/>
  <match src="identifier: _state [101205,101211]" dest="identifier: _state [39023,39029]"/>
  <match src="number_literal: 0 [8421,8422]" dest="number_literal: 0 [8520,8521]"/>
  <match src="type_name [104711,104717]" dest="type_name [42529,42535]"/>
  <match src="call_expression [103017,103024]" dest="call_expression [40835,40842]"/>
  <match src="identifier: add [82042,82045]" dest="identifier: add [72144,72147]"/>
  <match src="identifier: expiring [96046,96054]" dest="identifier: expiring [33832,33840]"/>
  <match src="uint8: uint8 [37318,37323]" dest="uint8: uint8 [52990,52995]"/>
  <match src="parameter [50163,50177]" dest="parameter [25602,25616]"/>
  <match src="): ) [31406,31407]" dest="): ) [47078,47079]"/>
  <match src="): ) [54710,54711]" dest="): ) [21704,21705]"/>
  <match src="identifier: length [34641,34647]" dest="identifier: length [50313,50319]"/>
  <match src="): ) [6992,6993]" dest="): ) [7091,7092]"/>
  <match src="type_name [96429,96433]" dest="type_name [34215,34219]"/>
  <match src="address: address [103727,103734]" dest="address: address [41545,41552]"/>
  <match src="primitive_type [14142,14149]" dest="primitive_type [23818,23825]"/>
  <match src="identifier: State [88625,88630]" dest="identifier: State [28754,28759]"/>
  <match src="): ) [94265,94266]" dest="): ) [32051,32052]"/>
  <match src="call_argument [8233,8261]" dest="call_argument [8332,8360]"/>
  <match src="member_expression [99222,99236]" dest="member_expression [37040,37054]"/>
  <match src="): ) [8070,8071]" dest="): ) [8169,8170]"/>
  <match src="identifier: balance [102128,102135]" dest="identifier: balance [39946,39953]"/>
  <match src="visibility [44799,44807]" dest="visibility [14053,14061]"/>
  <match src="call_expression [7596,7640]" dest="call_expression [7695,7739]"/>
  <match src="function: function [35930,35938]" dest="function: function [51602,51610]"/>
  <match src="(: ( [106627,106628]" dest="(: ( [68556,68557]"/>
  <match src="return: return [47063,47069]" dest="return: return [16317,16323]"/>
  <match src="identifier: totalBonded [83068,83079]" dest="identifier: totalBonded [58505,58516]"/>
  <match src="identifier: blockTimestampLast [54360,54378]" dest="identifier: blockTimestampLast [21354,21372]"/>
  <match src="uint256: uint256 [80303,80310]" dest="uint256: uint256 [69859,69866]"/>
  <match src=".: . [99252,99253]" dest=".: . [37070,37071]"/>
  <match src="identifier: staged [100960,100966]" dest="identifier: staged [38778,38784]"/>
  <match src="identifier: D256 [7478,7482]" dest="identifier: D256 [7577,7581]"/>
  <match src="type_name [973,980]" dest="type_name [1027,1034]"/>
  <match src="(: ( [105032,105033]" dest="(: ( [42850,42851]"/>
  <match src="function_definition [104060,104239]" dest="function_definition [41878,42057]"/>
  <match src="identifier: sub [101977,101980]" dest="identifier: sub [39795,39798]"/>
  <match src="member_expression [11168,11175]" dest="member_expression [11267,11274]"/>
  <match src="identifier: getDebtRatioCap [46444,46459]" dest="identifier: getDebtRatioCap [15698,15713]"/>
  <match src="(: ( [71752,71753]" dest="(: ( [65762,65763]"/>
  <match src="identifier: BASE [9487,9491]" dest="identifier: BASE [9586,9590]"/>
  <match src="uint32: uint32 [54353,54359]" dest="uint32: uint32 [21347,21353]"/>
  <match src="): ) [30450,30451]" dest="): ) [46122,46123]"/>
  <match src="identifier: amount [18422,18428]" dest="identifier: amount [17365,17371]"/>
  <match src="identifier: Constants [95147,95156]" dest="identifier: Constants [32933,32942]"/>
  <match src=",: , [10405,10406]" dest=",: , [10504,10505]"/>
  <match src="return_statement [93236,93265]" dest="return_statement [31022,31051]"/>
  <match src="call_expression [36200,36213]" dest="call_expression [51872,51885]"/>
  <match src="identifier: Decimal [66349,66356]" dest="identifier: Decimal [19043,19050]"/>
  <match src="): ) [105068,105069]" dest="): ) [42886,42887]"/>
  <match src="(: ( [101004,101005]" dest="(: ( [38822,38823]"/>
  <match src="): ) [1046,1047]" dest="): ) [1100,1101]"/>
  <match src=".: . [11159,11160]" dest=".: . [11258,11259]"/>
  <match src="identifier: Frozen [94694,94700]" dest="identifier: Frozen [32480,32486]"/>
  <match src="member_expression [95874,95913]" dest="member_expression [33660,33699]"/>
  <match src="identifier: candidate [97448,97457]" dest="identifier: candidate [35234,35243]"/>
  <match src="type_name [92637,92644]" dest="type_name [30423,30430]"/>
  <match src="call_argument [100475,100476]" dest="call_argument [38293,38294]"/>
  <match src="identifier: amount [100762,100768]" dest="identifier: amount [38580,38586]"/>
  <match src="&quot;: &quot; [49206,49207]" dest="&quot;: &quot; [55224,55225]"/>
  <match src="comment: /*     Copyright 2019 dYdX Trading Inc.      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [27506,28119]" dest="comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP. Does not include  * the optional functions; to access them see {ERC20Detailed}.  */ [21995,22148]"/>
  <match src="function_body [33343,33930]" dest="function_body [49015,49602]"/>
  <match src="call_expression [7148,7187]" dest="call_expression [7247,7286]"/>
  <match src="parameter [10035,10048]" dest="parameter [10134,10147]"/>
  <match src="identifier: must [30654,30658]" dest="identifier: must [46326,46330]"/>
  <match src="function_body [48253,48387]" dest="function_body [55049,55261]"/>
  <match src="identifier: recordVote [103906,103916]" dest="identifier: recordVote [41724,41734]"/>
  <match src="}: } [99835,99836]" dest="}: } [37653,37654]"/>
  <match src="type_name [75411,75418]" dest="type_name [55748,55755]"/>
  <match src="): ) [82839,82840]" dest="): ) [78896,78897]"/>
  <match src=",: , [9095,9096]" dest=",: , [9194,9195]"/>
  <match src="user_defined_type [46632,46644]" dest="user_defined_type [15886,15898]"/>
  <match src="identifier: self [9892,9896]" dest="identifier: self [9991,9995]"/>
  <match src="string_literal [22753,22789]" dest="string_literal [63274,63318]"/>
  <match src="identifier: incrementRejectFor [104473,104491]" dest="identifier: incrementRejectFor [42291,42309]"/>
  <match src="indexed: indexed [80457,80464]" dest="indexed: indexed [77226,77233]"/>
  <match src="parameter [8905,8918]" dest="parameter [9004,9017]"/>
  <match src="member_expression [95431,95446]" dest="member_expression [33217,33232]"/>
  <match src="): ) [95063,95064]" dest="): ) [32849,32850]"/>
  <match src="(: ( [82624,82625]" dest="(: ( [82631,82632]"/>
  <match src="call_argument [33656,33664]" dest="call_argument [49328,49336]"/>
  <match src="identifier: decrementBalanceOfCoupons [101779,101804]" dest="identifier: decrementBalanceOfCoupons [39597,39622]"/>
  <match src="identifier: epoch [94301,94306]" dest="identifier: epoch [32087,32092]"/>
  <match src="(: ( [88060,88061]" dest="(: ( [28189,28190]"/>
  <match src="parameter [53109,53119]" dest="parameter [20103,20113]"/>
  <match src="call_argument [84352,84382]" dest="call_argument [58371,58394]"/>
  <match src="pure: pure [46361,46365]" dest="pure: pure [15615,15619]"/>
  <match src="parameter [9106,9119]" dest="parameter [9205,9218]"/>
  <match src="assignment_expression [101695,101754]" dest="assignment_expression [39513,39572]"/>
  <match src="block_statement [34350,34907]" dest="block_statement [50022,50579]"/>
  <match src="number_literal: 0 [43504,43505]" dest="number_literal: 0 [12758,12759]"/>
  <match src="}: } [101761,101762]" dest="}: } [39579,39580]"/>
  <match src="private: private [77880,77887]" dest="private: private [80654,80661]"/>
  <match src="(: ( [8963,8964]" dest="(: ( [9062,9063]"/>
  <match src="primitive_type [75125,75132]" dest="primitive_type [55024,55031]"/>
  <match src="(: ( [37809,37810]" dest="(: ( [53481,53482]"/>
  <match src="parameter [29264,29276]" dest="parameter [44936,44948]"/>
  <match src="variable_declaration_statement [85930,85943]" dest="variable_declaration_statement [73237,73250]"/>
  <match src="(: ( [46229,46230]" dest="(: ( [15483,15484]"/>
  <match src="): ) [46651,46652]" dest="): ) [15905,15906]"/>
  <match src="identifier: stringifyTruncated [33477,33495]" dest="identifier: stringifyTruncated [49149,49167]"/>
  <match src="{: { [8501,8502]" dest="{: { [8600,8601]"/>
  <match src="identifier: bootstrappingAt [96377,96392]" dest="identifier: bootstrappingAt [34163,34178]"/>
  <match src="using: using [91870,91875]" dest="using: using [29656,29661]"/>
  <match src="identifier: D256 [9405,9409]" dest="identifier: D256 [9504,9508]"/>
  <match src="return: return [9225,9231]" dest="return: return [9324,9330]"/>
  <match src=".: . [103162,103163]" dest=".: . [40980,40981]"/>
  <match src="call_argument [32890,32895]" dest="call_argument [48562,48567]"/>
  <match src="identifier: FOUR_BIT_MASK [36685,36698]" dest="identifier: FOUR_BIT_MASK [52357,52370]"/>
  <match src="primitive_type [9130,9136]" dest="primitive_type [9229,9235]"/>
  <match src="&quot;: &quot; [49193,49194]" dest="&quot;: &quot; [55183,55184]"/>
  <match src="internal: internal [75697,75705]" dest="internal: internal [55553,55561]"/>
  <match src="call_argument [83197,83216]" dest="call_argument [79917,79939]"/>
  <match src="type_name [8905,8909]" dest="type_name [9004,9008]"/>
  <match src="call_expression [105024,105069]" dest="call_expression [42842,42887]"/>
  <match src="identifier: candidates [96671,96681]" dest="identifier: candidates [34457,34467]"/>
  <match src="struct_member [88028,88043]" dest="struct_member [28157,28172]"/>
  <match src="comment: // 36 epochs fluid [44042,44060]" dest="comment: // 36 epochs fluid [13296,13314]"/>
  <match src="struct_member [87793,87809]" dest="struct_member [27922,27938]"/>
  <match src="{: { [16328,16329]" dest="{: { [60120,60121]"/>
  <match src="returns: returns [96621,96628]" dest="returns: returns [34407,34414]"/>
  <match src="external: external [98922,98930]" dest="external: external [36740,36748]"/>
  <match src="type_name [53874,53878]" dest="type_name [20868,20872]"/>
  <match src="identifier: stringify [33724,33733]" dest="identifier: stringify [49396,49405]"/>
  <match src=".: . [99689,99690]" dest=".: . [37507,37508]"/>
  <match src="identifier: account [101138,101145]" dest="identifier: account [38956,38963]"/>
  <match src="identifier: value [80254,80259]" dest="identifier: value [60750,60755]"/>
  <match src=".: . [81156,81157]" dest=".: . [71772,71773]"/>
  <match src=".: . [101961,101962]" dest=".: . [39779,39780]"/>
  <match src="identifier: sub [1833,1836]" dest="identifier: sub [1887,1890]"/>
  <match src="return: return [46275,46281]" dest="return: return [15529,15535]"/>
  <match src="{: { [31271,31272]" dest="{: { [46943,46944]"/>
  <match src="type_name [23874,23881]" dest="type_name [17494,17501]"/>
  <match src="state_variable_declaration [42864,42916]" dest="state_variable_declaration [12118,12170]"/>
  <match src="): ) [95708,95709]" dest="): ) [33494,33495]"/>
  <match src="expression_statement [35290,35299]" dest="expression_statement [50962,50971]"/>
  <match src="(: ( [90503,90504]" dest="(: ( [75575,75576]"/>
  <match src="number_literal: 0 [83084,83085]" dest="number_literal: 0 [58521,58522]"/>
  <match src="return: return [94359,94365]" dest="return: return [32145,32151]"/>
  <match src="state_mutability [95976,95980]" dest="state_mutability [33762,33766]"/>
  <match src="identifier: payloadB [31204,31212]" dest="identifier: payloadB [46876,46884]"/>
  <match src="state_variable_declaration [44322,44377]" dest="state_variable_declaration [13576,13631]"/>
  <match src="call_argument [32278,32286]" dest="call_argument [47950,47958]"/>
  <match src="(: ( [95989,95990]" dest="(: ( [33775,33776]"/>
  <match src="identifier: initializer [106616,106627]" dest="identifier: initializer [68545,68556]"/>
  <match src="string_literal [90528,90542]" dest="string_literal [75600,75614]"/>
  <match src="(: ( [81461,81462]" dest="(: ( [70763,70764]"/>
  <match src="bool: bool [90436,90440]" dest="bool: bool [75508,75512]"/>
  <match src="uint: uint [54749,54753]" dest="uint: uint [21743,21747]"/>
  <match src="call_argument [51644,51687]" dest="call_argument [64064,64102]"/>
  <match src="expression_statement [81832,81882]" dest="expression_statement [72027,72100]"/>
  <match src="pure: pure [45292,45296]" dest="pure: pure [14546,14550]"/>
  <match src="type_name [28499,28505]" dest="type_name [44171,44177]"/>
  <match src="identifier: D256 [8905,8909]" dest="identifier: D256 [9004,9008]"/>
  <match src=",: , [53940,53941]" dest=",: , [20934,20935]"/>
  <match src="parameter [5354,5380]" dest="parameter [5408,5434]"/>
  <match src="address: address [77872,77879]" dest="address: address [60694,60701]"/>
  <match src="): ) [77142,77143]" dest="): ) [61108,61109]"/>
  <match src="member_expression [100407,100428]" dest="member_expression [38225,38246]"/>
  <match src="=: = [94009,94010]" dest="=: = [31795,31796]"/>
  <match src="call_argument [31630,31649]" dest="call_argument [47302,47321]"/>
  <match src="comment: // contracts then. [86321,86339]" dest="comment: // contracts then. [73628,73646]"/>
  <match src="array_access [96944,96972]" dest="array_access [34730,34758]"/>
  <match src="expression_statement [84647,84757]" dest="expression_statement [79070,79180]"/>
  <match src="(: ( [7111,7112]" dest="(: ( [7210,7211]"/>
  <match src="(: ( [100820,100821]" dest="(: ( [38638,38639]"/>
  <match src="call_argument [97382,97402]" dest="call_argument [35168,35188]"/>
  <match src="type_name [7792,7796]" dest="type_name [7891,7895]"/>
  <match src="call_argument [37668,37685]" dest="call_argument [53340,53357]"/>
  <match src="call_expression [32056,32499]" dest="call_expression [47728,48171]"/>
  <match src="array_access [97220,97248]" dest="array_access [35006,35034]"/>
  <match src="identifier: accounts [100942,100950]" dest="identifier: accounts [38760,38768]"/>
  <match src="(: ( [106805,106806]" dest="(: ( [68734,68735]"/>
  <match src="type_name [92795,92802]" dest="type_name [30581,30588]"/>
  <match src="block_statement [2578,2613]" dest="block_statement [2632,2667]"/>
  <match src="call_argument [20556,20579]" dest="call_argument [63668,63691]"/>
  <match src="call_argument [90404,90421]" dest="call_argument [75476,75493]"/>
  <match src="identifier: owner [102400,102405]" dest="identifier: owner [40218,40223]"/>
  <match src="function: function [54640,54648]" dest="function: function [21634,21642]"/>
  <match src="type_name [15091,15098]" dest="type_name [24767,24774]"/>
  <match src="&quot;: &quot; [21969,21970]" dest="&quot;: &quot; [62987,62988]"/>
  <match src="identifier: payloadC [33298,33306]" dest="identifier: payloadC [48970,48978]"/>
  <match src="parameter [103953,103972]" dest="parameter [41771,41790]"/>
  <match src="identifier: approve [104212,104219]" dest="identifier: approve [42030,42037]"/>
  <match src="): ) [103134,103135]" dest="): ) [40952,40953]"/>
  <match src="]: ] [100637,100638]" dest="]: ] [38455,38456]"/>
  <match src="primitive_type [14539,14546]" dest="primitive_type [24215,24222]"/>
  <match src="visibility [44092,44099]" dest="visibility [13346,13353]"/>
  <match src="identifier: Balance [88261,88268]" dest="identifier: Balance [28390,28397]"/>
  <match src="if: if [31976,31978]" dest="if: if [47648,47650]"/>
  <match src="public: public [94237,94243]" dest="public: public [32023,32029]"/>
  <match src="(: ( [46912,46913]" dest="(: ( [16166,16167]"/>
  <match src="function: function [8087,8095]" dest="function: function [8186,8194]"/>
  <match src="address: address [13030,13037]" dest="address: address [22706,22713]"/>
  <match src="type_name [36470,36477]" dest="type_name [52142,52149]"/>
  <match src="type_name [100572,100578]" dest="type_name [38390,38396]"/>
  <match src="identifier: div [81747,81750]" dest="identifier: div [70927,70930]"/>
  <match src="call_struct_argument [44891,44911]" dest="call_struct_argument [14145,14165]"/>
  <match src=".: . [9479,9480]" dest=".: . [9578,9579]"/>
  <match src="): ) [8452,8453]" dest="): ) [8551,8552]"/>
  <match src="user_defined_type [9760,9764]" dest="user_defined_type [9859,9863]"/>
  <match src="array_access [104585,104613]" dest="array_access [42403,42431]"/>
  <match src=",: , [31603,31604]" dest=",: , [47275,47276]"/>
  <match src="{: { [46684,46685]" dest="{: { [15938,15939]"/>
  <match src="member_expression [99528,99547]" dest="member_expression [37346,37365]"/>
  <match src="call_argument [22871,22878]" dest="call_argument [63428,63435]"/>
  <match src=",: , [80505,80506]" dest=",: , [77183,77184]"/>
  <match src="(: ( [9445,9446]" dest="(: ( [9544,9545]"/>
  <match src="): ) [54028,54029]" dest="): ) [21022,21023]"/>
  <match src="call_argument [10903,10912]" dest="call_argument [11002,11011]"/>
  <match src="identifier: candidate [97238,97247]" dest="identifier: candidate [35024,35033]"/>
  <match src="): ) [44713,44714]" dest="): ) [13967,13968]"/>
  <match src="(: ( [92771,92772]" dest="(: ( [30557,30558]"/>
  <match src="!: ! [31980,31981]" dest="!: ! [47652,47653]"/>
  <match src="(: ( [107965,107966]" dest="(: ( [66974,66975]"/>
  <match src="[: [ [104974,104975]" dest="[: [ [42792,42793]"/>
  <match src="identifier: candidate [105224,105233]" dest="identifier: candidate [43042,43051]"/>
  <match src="call_expression [1001,1047]" dest="call_expression [1055,1101]"/>
  <match src="returns: returns [53052,53059]" dest="returns: returns [20046,20053]"/>
  <match src="identifier: self [7289,7293]" dest="identifier: self [7388,7392]"/>
  <match src="function_body [81442,82064]" dest="function_body [70744,71201]"/>
  <match src="call_argument [2661,2671]" dest="call_argument [2715,2725]"/>
  <match src="struct: struct [6498,6504]" dest="struct: struct [6597,6603]"/>
  <match src="event_paramater [51838,51850]" dest="event_paramater [60717,60740]"/>
  <match src="call_argument [82778,82788]" dest="call_argument [78869,78879]"/>
  <match src="primitive_type [37267,37271]" dest="primitive_type [52939,52943]"/>
  <match src="internal: internal [1887,1895]" dest="internal: internal [1941,1949]"/>
  <match src="function_definition [96077,96231]" dest="function_definition [33863,34017]"/>
  <match src="uint256: uint256 [5343,5350]" dest="uint256: uint256 [5397,5404]"/>
  <match src="type_name [8964,8968]" dest="type_name [9063,9067]"/>
  <match src="type_name [9196,9200]" dest="type_name [9295,9299]"/>
  <match src="): ) [104447,104448]" dest="): ) [42265,42266]"/>
  <match src="identifier: add [99570,99573]" dest="identifier: add [37388,37391]"/>
  <match src="visibility [84014,84022]" dest="visibility [79050,79058]"/>
  <match src="): ) [81880,81881]" dest="): ) [72098,72099]"/>
  <match src="call_argument [81251,81261]" dest="call_argument [71441,71451]"/>
  <match src="identifier: value [9827,9832]" dest="identifier: value [9926,9931]"/>
  <match src="variable_declaration_statement [73173,73312]" dest="variable_declaration_statement [80768,80845]"/>
  <match src="while: while [35260,35265]" dest="while: while [50932,50937]"/>
  <match src="}: } [103654,103655]" dest="}: } [41472,41473]"/>
  <match src="call_argument [1017,1046]" dest="call_argument [1071,1100]"/>
  <match src="primitive_type [80163,80170]" dest="primitive_type [69678,69685]"/>
  <match src="type_name [87399,87406]" dest="type_name [27528,27535]"/>
  <match src=".: . [82227,82228]" dest=".: . [80184,80185]"/>
  <match src="identifier: IMPLEMENTATION_SLOT [91023,91042]" dest="identifier: IMPLEMENTATION_SLOT [76095,76114]"/>
  <match src="function: function [53514,53522]" dest="function: function [20508,20516]"/>
  <match src="member_expression [9246,9260]" dest="member_expression [9345,9359]"/>
  <match src="member_expression [99705,99724]" dest="member_expression [37523,37542]"/>
  <match src="returns: returns [1400,1407]" dest="returns: returns [1454,1461]"/>
  <match src="): ) [34612,34613]" dest="): ) [50284,50285]"/>
  <match src="identifier: Claim [81354,81359]" dest="identifier: Commit [80572,80578]"/>
  <match src="member_expression [81645,81684]" dest="member_expression [70840,70849]"/>
  <match src="binary_expression [37791,37801]" dest="binary_expression [53463,53473]"/>
  <match src="user_defined_type [9898,9902]" dest="user_defined_type [9997,10001]"/>
  <match src="contract: contract [88125,88133]" dest="contract: contract [28254,28262]"/>
  <match src="user_defined_type [91824,91829]" dest="user_defined_type [29610,29615]"/>
  <match src="=: = [44226,44227]" dest="=: = [13480,13481]"/>
  <match src="indexed: indexed [26604,26611]" dest="indexed: indexed [60498,60505]"/>
  <match src="identifier: value [81815,81820]" dest="identifier: value [71579,71584]"/>
  <match src="memory: memory [95296,95302]" dest="memory: memory [33082,33088]"/>
  <match src="returns: returns [53202,53209]" dest="returns: returns [20196,20203]"/>
  <match src="uint256: uint256 [83458,83465]" dest="uint256: uint256 [61317,61324]"/>
  <match src="view: view [96616,96620]" dest="view: view [34402,34406]"/>
  <match src="emit_statement [22850,22888]" dest="emit_statement [63396,63445]"/>
  <match src="): ) [32122,32123]" dest="): ) [47794,47795]"/>
  <match src="number_literal: 1 [8451,8452]" dest="number_literal: 1 [8550,8551]"/>
  <match src=".: . [92837,92838]" dest=".: . [30623,30624]"/>
  <match src="identifier: reason [30212,30218]" dest="identifier: reason [45884,45890]"/>
  <match src="): ) [31704,31705]" dest="): ) [47376,47377]"/>
  <match src="}: } [34976,34977]" dest="}: } [50648,50649]"/>
  <match src="string_literal [56951,56988]" dest="string_literal [77577,77594]"/>
  <match src="identifier: candidates [96951,96961]" dest="identifier: candidates [34737,34747]"/>
  <match src="returns: returns [95981,95988]" dest="returns: returns [33767,33774]"/>
  <match src="function: function [92495,92503]" dest="function: function [30281,30289]"/>
  <match src="type_name [8383,8387]" dest="type_name [8482,8486]"/>
  <match src="state_mutability [11038,11042]" dest="state_mutability [11137,11141]"/>
  <match src="identifier: owner [13400,13405]" dest="identifier: owner [23076,23081]"/>
  <match src="user_defined_type [103953,103967]" dest="user_defined_type [41771,41785]"/>
  <match src="]: ] [94404,94405]" dest="]: ] [32190,32191]"/>
  <match src="uint256: uint256 [76763,76770]" dest="uint256: uint256 [58443,58450]"/>
  <match src="function_definition [99995,100168]" dest="function_definition [37813,37986]"/>
  <match src="identifier: pool [92973,92977]" dest="identifier: pool [30759,30763]"/>
  <match src="internal: internal [3241,3249]" dest="internal: internal [3295,3303]"/>
  <match src="identifier: INITIAL_STAKE_MULTIPLE [43275,43297]" dest="identifier: INITIAL_STAKE_MULTIPLE [12529,12551]"/>
  <match src="): ) [66966,66967]" dest="): ) [66913,66914]"/>
  <match src="): ) [49095,49096]" dest="): ) [55469,55470]"/>
  <match src="visibility [67839,67847]" dest="visibility [57867,57875]"/>
  <match src="assignment_expression [103156,103208]" dest="assignment_expression [40974,41026]"/>
  <match src="[: [ [101542,101543]" dest="[: [ [39360,39361]"/>
  <match src=",: , [9476,9477]" dest=",: , [9575,9576]"/>
  <match src=".: . [95156,95157]" dest=".: . [32942,32943]"/>
  <match src="return_type_definition [54081,54095]" dest="return_type_definition [21075,21089]"/>
  <match src="identifier: _state [95874,95880]" dest="identifier: _state [33660,33666]"/>
  <match src="(: ( [50098,50099]" dest="(: ( [25537,25538]"/>
  <match src="user_defined_type [9346,9350]" dest="user_defined_type [9445,9449]"/>
  <match src="identifier: debt [99820,99824]" dest="identifier: debt [37638,37642]"/>
  <match src="revert: revert [30675,30681]" dest="revert: revert [46347,46353]"/>
  <match src="member_expression [8051,8061]" dest="member_expression [8150,8160]"/>
  <match src="return: return [95599,95605]" dest="return: return [33385,33391]"/>
  <match src="private: private [24116,24123]" dest="private: private [18782,18789]"/>
  <match src="assembly_statement [86406,86447]" dest="assembly_statement [73713,73754]"/>
  <match src=",: , [32895,32896]" dest=",: , [48567,48568]"/>
  <match src="memory: memory [8709,8715]" dest="memory: memory [8808,8814]"/>
  <match src="identifier: expiringCouponsAtIndex [96086,96108]" dest="identifier: expiringCouponsAtIndex [33872,33894]"/>
  <match src="identifier: coupons [103528,103535]" dest="identifier: coupons [41346,41353]"/>
  <match src="primitive_type [31790,31794]" dest="primitive_type [47462,47466]"/>
  <match src="): ) [10912,10913]" dest="): ) [11011,11012]"/>
  <match src=",: , [31525,31526]" dest=",: , [47197,47198]"/>
  <match src="(: ( [45701,45702]" dest="(: ( [14955,14956]"/>
  <match src="): ) [82497,82498]" dest="): ) [71403,71404]"/>
  <match src="memory: memory [46645,46651]" dest="memory: memory [15899,15905]"/>
  <match src="call_argument [95431,95446]" dest="call_argument [33217,33232]"/>
  <match src="call_argument [9261,9268]" dest="call_argument [9360,9367]"/>
  <match src="type_name [28635,28639]" dest="type_name [44307,44311]"/>
  <match src="identifier: ratio [7021,7026]" dest="identifier: ratio [7120,7125]"/>
  <match src="call_argument [78584,78597]" dest="call_argument [59273,59286]"/>
  <match src="state_variable_declaration [43464,43506]" dest="state_variable_declaration [12718,12760]"/>
  <match src="identifier: totalRewardedWithPhantom [83651,83675]" dest="identifier: value [71843,71848]"/>
  <match src="type_name [54828,54835]" dest="type_name [21822,21829]"/>
  <match src="call_argument [101981,101987]" dest="call_argument [39799,39805]"/>
  <match src="): ) [45162,45163]" dest="): ) [14416,14417]"/>
  <match src="}: } [29795,29796]" dest="}: } [45467,45468]"/>
  <match src="{: { [96435,96436]" dest="{: { [34221,34222]"/>
  <match src="function: function [10946,10954]" dest="function: function [11045,11053]"/>
  <match src="==: == [2667,2669]" dest="==: == [2721,2723]"/>
  <match src="return_type_definition [6923,6944]" dest="return_type_definition [7022,7043]"/>
  <match src="identifier: stringifyTruncated [29582,29600]" dest="identifier: stringifyTruncated [45254,45272]"/>
  <match src="&quot;: &quot; [92257,92258]" dest="&quot;: &quot; [30043,30044]"/>
  <match src="internal: internal [104333,104341]" dest="internal: internal [42151,42159]"/>
  <match src="primitive_type [104089,104096]" dest="primitive_type [41907,41914]"/>
  <match src=".: . [102304,102305]" dest=".: . [40122,40123]"/>
  <match src="user_defined_type [92795,92802]" dest="user_defined_type [30581,30588]"/>
  <match src="identifier: symbol [52751,52757]" dest="identifier: symbol [19745,19751]"/>
  <match src="=&gt;: =&gt; [88616,88618]" dest="=&gt;: =&gt; [28745,28747]"/>
  <match src="call_argument [78330,78342]" dest="call_argument [62494,62506]"/>
  <match src="internal: internal [2302,2310]" dest="internal: internal [2356,2364]"/>
  <match src="{: { [30660,30661]" dest="{: { [46332,46333]"/>
  <match src="primitive_type [80041,80048]" dest="primitive_type [69553,69560]"/>
  <match src="address: address [106414,106421]" dest="address: address [68343,68350]"/>
  <match src="=: = [100967,100968]" dest="=: = [38785,38786]"/>
  <match src="identifier: sender [83012,83018]" dest="identifier: sender [70736,70742]"/>
  <match src="call_argument [100804,100811]" dest="call_argument [38622,38629]"/>
  <match src="(: ( [47017,47018]" dest="(: ( [16271,16272]"/>
  <match src="identifier: candidate [103942,103951]" dest="identifier: candidate [41760,41769]"/>
  <match src="identifier: value [82580,82585]" dest="identifier: value [71934,71939]"/>
  <match src="(: ( [95376,95377]" dest="(: ( [33162,33163]"/>
  <match src="number_literal: 1 [51498,51499]" dest="number_literal: 1 [63991,63992]"/>
  <match src="call_argument [17195,17201]" dest="call_argument [55979,55985]"/>
  <match src="returns: returns [96289,96296]" dest="returns: returns [34075,34082]"/>
  <match src="parameter [50146,50161]" dest="parameter [25585,25600]"/>
  <match src="public: public [95969,95975]" dest="public: public [33755,33761]"/>
  <match src="public: public [50179,50185]" dest="public: public [25618,25624]"/>
  <match src="binary_expression [9960,9983]" dest="binary_expression [10059,10082]"/>
  <match src="primitive_type [53211,53215]" dest="primitive_type [20205,20209]"/>
  <match src="identifier: that [84465,84469]" dest="identifier: that [80020,80024]"/>
  <match src=".: . [101053,101054]" dest=".: . [38871,38872]"/>
  <match src="address: address [53462,53469]" dest="address: address [20456,20463]"/>
  <match src="member_expression [84250,84303]" dest="member_expression [58245,58318]"/>
  <match src="identifier: SafeMath [71154,71162]" dest="identifier: SafeMath [54662,54670]"/>
  <match src="function_definition [28775,29212]" dest="function_definition [44447,44884]"/>
  <match src="call_argument [80659,80663]" dest="call_argument [70274,70278]"/>
  <match src="identifier: add [104621,104624]" dest="identifier: add [42439,42442]"/>
  <match src="{: { [45196,45197]" dest="{: { [14450,14451]"/>
  <match src="state_variable_declaration [43643,43691]" dest="state_variable_declaration [12897,12945]"/>
  <match src="): ) [90994,90995]" dest="): ) [76066,76067]"/>
  <match src="type_cast_expression [22741,22751]" dest="type_cast_expression [63262,63272]"/>
  <match src="): ) [102303,102304]" dest="): ) [40121,40122]"/>
  <match src="]: ] [103809,103810]" dest="]: ] [41627,41628]"/>
  <match src="identifier: eliminateOutstandingCoupons [103298,103325]" dest="identifier: eliminateOutstandingCoupons [41116,41143]"/>
  <match src="]: ] [101960,101961]" dest="]: ] [39778,39779]"/>
  <match src="call_argument [80906,80916]" dest="call_argument [70975,70985]"/>
  <match src="member_expression [10510,10520]" dest="member_expression [10609,10619]"/>
  <match src="type_name [64210,64222]" dest="type_name [64992,65004]"/>
  <match src="): ) [54065,54066]" dest="): ) [21059,21060]"/>
  <match src="member_expression [93243,93257]" dest="member_expression [31029,31043]"/>
  <match src="(: ( [6779,6780]" dest="(: ( [6878,6879]"/>
  <match src="binary_expression [6437,6443]" dest="binary_expression [6536,6542]"/>
  <match src="modifier_definition [106607,106830]" dest="modifier_definition [68536,68759]"/>
  <match src="!=: != [35269,35271]" dest="!=: != [50941,50943]"/>
  <match src="return_statement [10239,10269]" dest="return_statement [10338,10368]"/>
  <match src="identifier: amount [13057,13063]" dest="identifier: amount [22733,22739]"/>
  <match src=",: , [102405,102406]" dest=",: , [40223,40224]"/>
  <match src="call_argument [30246,30252]" dest="call_argument [45918,45924]"/>
  <match src="assignment_expression [36314,36353]" dest="assignment_expression [51986,52025]"/>
  <match src="call_struct_argument [7603,7637]" dest="call_struct_argument [7702,7736]"/>
  <match src="identifier: self [8122,8126]" dest="identifier: self [8221,8225]"/>
  <match src="identifier: self [9822,9826]" dest="identifier: self [9921,9925]"/>
  <match src="indexed: indexed [52628,52635]" dest="indexed: indexed [19622,19629]"/>
  <match src="return_statement [95867,95914]" dest="return_statement [33653,33700]"/>
  <match src="(: ( [62578,62579]" dest="(: ( [26447,26448]"/>
  <match src="type_name [54766,54773]" dest="type_name [21760,21767]"/>
  <match src="string [64263,64271]" dest="string [60194,60202]"/>
  <match src="{: { [36036,36037]" dest="{: { [51708,51709]"/>
  <match src="parameter [98906,98920]" dest="parameter [36724,36738]"/>
  <match src="&quot;: &quot; [35140,35141]" dest="&quot;: &quot; [50812,50813]"/>
  <match src="parameter [10975,10988]" dest="parameter [11074,11087]"/>
  <match src="call_argument [48373,48377]" dest="call_argument [55099,55103]"/>
  <match src="primitive_type [87342,87349]" dest="primitive_type [27471,27478]"/>
  <match src="is: is [106004,106006]" dest="is: is [67933,67935]"/>
  <match src=",: , [30796,30797]" dest=",: , [46468,46469]"/>
  <match src="struct_member [87977,87992]" dest="struct_member [28106,28121]"/>
  <match src="identifier: file [28827,28831]" dest="identifier: file [44499,44503]"/>
  <match src="call_expression [90866,90995]" dest="call_expression [75938,76067]"/>
  <match src="returns: returns [46246,46253]" dest="returns: returns [15500,15507]"/>
  <match src="(: ( [81750,81751]" dest="(: ( [70930,70931]"/>
  <match src="memory: memory [35078,35084]" dest="memory: memory [50750,50756]"/>
  <match src="member_expression [84818,84830]" dest="member_expression [79277,79289]"/>
  <match src="comment: // computes square roots using the babylonian method [54990,55042]" dest="comment: // File: contracts/dao/Getters.sol [28889,28923]"/>
  <match src="identifier: IDollar [92795,92802]" dest="identifier: IDollar [30581,30588]"/>
  <match src="identifier: msg [82132,82135]" dest="identifier: msg [71801,71804]"/>
  <match src="visibility [81423,81431]" dest="visibility [70705,70713]"/>
  <match src="}: } [9502,9503]" dest="}: } [9601,9602]"/>
  <match src="type_name [98793,98800]" dest="type_name [36611,36618]"/>
  <match src="primitive_type [106137,106144]" dest="primitive_type [68066,68073]"/>
  <match src="identifier: amount [51362,51368]" dest="identifier: amount [59232,59238]"/>
  <match src="!: ! [29991,29992]" dest="!: ! [45663,45664]"/>
  <match src="type_cast_expression [37048,37062]" dest="type_cast_expression [52720,52734]"/>
  <match src="comment: // determine the length of the input by finding the location of the last non-zero byte [34224,34310]" dest="comment: // determine the length of the input by finding the location of the last non-zero byte [49896,49982]"/>
  <match src="identifier: D256 [66955,66959]" dest="identifier: D256 [66902,66906]"/>
  <match src="identifier: Context [16312,16319]" dest="identifier: Comptroller [60101,60112]"/>
  <match src="call_argument [106791,106807]" dest="call_argument [68720,68736]"/>
  <match src="(: ( [93704,93705]" dest="(: ( [31490,31491]"/>
  <match src="string_literal [25855,25888]" dest="string_literal [77757,77786]"/>
  <match src="(: ( [33411,33412]" dest="(: ( [49083,49084]"/>
  <match src="identifier: value [9031,9036]" dest="identifier: value [9130,9135]"/>
  <match src="inheritance_specifier [91824,91829]" dest="inheritance_specifier [29610,29615]"/>
  <match src="member_expression [81588,81750]" dest="member_expression [70806,70930]"/>
  <match src="member_expression [102909,102921]" dest="member_expression [40727,40739]"/>
  <match src="function: function [46885,46893]" dest="function: function [16139,16147]"/>
  <match src="member_expression [8242,8256]" dest="member_expression [8341,8355]"/>
  <match src=".: . [103865,103866]" dest=".: . [41683,41684]"/>
  <match src="address: address [64409,64416]" dest="address: address [77243,77250]"/>
  <match src="identifier: size [86464,86468]" dest="identifier: size [73771,73775]"/>
  <match src="): ) [90469,90470]" dest="): ) [75541,75542]"/>
  <match src=",: , [53739,53740]" dest=",: , [20733,20734]"/>
  <match src="return_statement [45477,45502]" dest="return_statement [14731,14756]"/>
  <match src="): ) [47018,47019]" dest="): ) [16272,16273]"/>
  <match src="(: ( [80162,80163]" dest="(: ( [69677,69678]"/>
  <match src="returns: returns [13438,13445]" dest="returns: returns [23114,23121]"/>
  <match src="visibility [78019,78027]" dest="visibility [56104,56112]"/>
  <match src="member_expression [94630,94676]" dest="member_expression [32416,32462]"/>
  <match src="type_name [99042,99049]" dest="type_name [36860,36867]"/>
  <match src="(: ( [99075,99076]" dest="(: ( [36893,36894]"/>
  <match src="address: address [104676,104683]" dest="address: address [42494,42501]"/>
  <match src="}: } [6994,6995]" dest="}: } [7093,7094]"/>
  <match src="}: } [10655,10656]" dest="}: } [10754,10755]"/>
  <match src="internal: internal [7968,7976]" dest="internal: internal [8067,8075]"/>
  <match src="function: function [53151,53159]" dest="function: function [20145,20153]"/>
  <match src="identifier: result [34874,34880]" dest="identifier: result [50546,50552]"/>
  <match src="parameter [104311,104331]" dest="parameter [42129,42149]"/>
  <match src=",: , [104693,104694]" dest=",: , [42511,42512]"/>
  <match src="parameter [54090,54094]" dest="parameter [21084,21088]"/>
  <match src="primitive_type [10768,10775]" dest="primitive_type [10867,10874]"/>
  <match src="call_argument [1440,1441]" dest="call_argument [1494,1495]"/>
  <match src="type_name [16465,16472]" dest="type_name [60257,60264]"/>
  <match src="returns: returns [98931,98938]" dest="returns: returns [36749,36756]"/>
  <match src="identifier: a [985,986]" dest="identifier: a [1039,1040]"/>
  <match src="{: { [44715,44716]" dest="{: { [13969,13970]"/>
  <match src="comment: /**      * @dev Emitted when `value` tokens are moved from one account (`from`) to      * another (`to`).      *      * Note that `value` may be zero.      */ [14622,14785]" dest="comment: /**      * @dev Emitted when `value` tokens are moved from one account (`from`) to      * another (`to`).      *      * Note that `value` may be zero.      */ [24298,24461]"/>
  <match src="memory: memory [46799,46805]" dest="memory: memory [16053,16059]"/>
  <match src="identifier: accounts [100335,100343]" dest="identifier: accounts [38153,38161]"/>
  <match src="return_statement [44621,44633]" dest="return_statement [13875,13887]"/>
  <match src="(: ( [54907,54908]" dest="(: ( [21901,21902]"/>
  <match src="(: ( [23856,23857]" dest="(: ( [55293,55294]"/>
  <match src="state_mutability [46001,46005]" dest="state_mutability [15255,15259]"/>
  <match src="call_argument [83119,83146]" dest="call_argument [58556,58581]"/>
  <match src="bytes32: bytes32 [31121,31128]" dest="bytes32: bytes32 [46793,46800]"/>
  <match src="returns: returns [45056,45063]" dest="returns: returns [14310,14317]"/>
  <match src="): ) [82047,82048]" dest="): ) [72149,72150]"/>
  <match src="identifier: Permission [107543,107553]" dest="identifier: Permission [76943,76953]"/>
  <match src="state_mutability [55187,55191]" dest="state_mutability [18790,18794]"/>
  <match src="): ) [9156,9157]" dest="): ) [9255,9256]"/>
  <match src="uint256: uint256 [99042,99049]" dest="uint256: uint256 [36860,36867]"/>
  <match src="internal: internal [100594,100602]" dest="internal: internal [38412,38420]"/>
  <match src="identifier: input [35106,35111]" dest="identifier: input [50778,50783]"/>
  <match src="unary_expression [31264,31269]" dest="unary_expression [46936,46941]"/>
  <match src="identifier: _state [95728,95734]" dest="identifier: _state [33514,33520]"/>
  <match src="array_access [97504,97532]" dest="array_access [35290,35318]"/>
  <match src="bytes32: bytes32 [97773,97780]" dest="bytes32: bytes32 [35559,35566]"/>
  <match src="number_literal: 0 [10119,10120]" dest="number_literal: 0 [10218,10219]"/>
  <match src="call_argument [49047,49051]" dest="call_argument [62203,62207]"/>
  <match src="address: address [50206,50213]" dest="address: address [25645,25652]"/>
  <match src="assignment_expression [101205,101290]" dest="assignment_expression [39023,39108]"/>
  <match src="identifier: Vote [88072,88076]" dest="identifier: Vote [28201,28205]"/>
  <match src="internal: internal [29952,29960]" dest="internal: internal [45624,45632]"/>
  <match src="primitive_type [7505,7512]" dest="primitive_type [7604,7611]"/>
  <match src="variable_declaration_statement [104937,104996]" dest="variable_declaration_statement [42755,42814]"/>
  <match src="&quot;: &quot; [80073,80074]" dest="&quot;: &quot; [69585,69586]"/>
  <match src="identifier: D256 [46679,46683]" dest="identifier: D256 [15933,15937]"/>
  <match src="primitive_type [91909,91916]" dest="primitive_type [29695,29702]"/>
  <match src="): ) [62654,62655]" dest="): ) [26523,26524]"/>
  <match src="uint256: uint256 [82448,82455]" dest="uint256: uint256 [82487,82494]"/>
  <match src=".: . [102482,102483]" dest=".: . [40300,40301]"/>
  <match src="=: = [106054,106055]" dest="=: = [67983,67984]"/>
  <match src=".: . [83807,83808]" dest=".: . [62538,62539]"/>
  <match src="parameter [96917,96924]" dest="parameter [34703,34710]"/>
  <match src="array_access [93859,93883]" dest="array_access [31645,31669]"/>
  <match src="function_body [97627,97693]" dest="function_body [35413,35479]"/>
  <match src="number_literal: 0 [100821,100822]" dest="number_literal: 0 [38639,38640]"/>
  <match src="primitive_type [53021,53028]" dest="primitive_type [20015,20022]"/>
  <match src=",: , [30574,30575]" dest=",: , [46246,46247]"/>
  <match src="identifier: transferFrom [98994,99006]" dest="identifier: transferFrom [36812,36824]"/>
  <match src="internal: internal [99202,99210]" dest="internal: internal [37020,37028]"/>
  <match src="block_statement [29998,30478]" dest="block_statement [45670,46150]"/>
  <match src="primitive_type [96741,96748]" dest="primitive_type [34527,34534]"/>
  <match src="identifier: data [54793,54797]" dest="identifier: data [21787,21791]"/>
  <match src="parameter [104711,104731]" dest="parameter [42529,42549]"/>
  <match src="identifier: b [7954,7955]" dest="identifier: b [8053,8054]"/>
  <match src="return_type_definition [944,961]" dest="return_type_definition [998,1015]"/>
  <match src="struct_declaration [87259,87491]" dest="struct_declaration [27388,27620]"/>
  <match src=",: , [53888,53889]" dest=",: , [20882,20883]"/>
  <match src="string [81936,81971]" dest="string [71088,71126]"/>
  <match src="): ) [91109,91110]" dest="): ) [76181,76182]"/>
  <match src="bytes: bytes [34961,34966]" dest="bytes: bytes [50633,50638]"/>
  <match src="(: ( [94038,94039]" dest="(: ( [31824,31825]"/>
  <match src="member_expression [30067,30083]" dest="member_expression [45739,45755]"/>
  <match src="contract_body [87842,88121]" dest="contract_body [27971,28250]"/>
  <match src="inheritance_specifier [64177,64184]" dest="inheritance_specifier [64922,64933]"/>
  <match src="member_expression [96664,96681]" dest="member_expression [34450,34467]"/>
  <match src="call_argument [100467,100477]" dest="call_argument [38285,38295]"/>
  <match src="uint256: uint256 [2291,2298]" dest="uint256: uint256 [2345,2352]"/>
  <match src="=: = [43502,43503]" dest="=: = [12756,12757]"/>
  <match src="): ) [49326,49327]" dest="): ) [55682,55683]"/>
  <match src=".: . [96972,96973]" dest=".: . [34758,34759]"/>
  <match src="type_name [53672,53676]" dest="type_name [20666,20670]"/>
  <match src="call_argument [51472,51484]" dest="call_argument [63967,63977]"/>
  <match src="identifier: outstanding [95757,95768]" dest="identifier: outstanding [33543,33554]"/>
  <match src="type_name [62650,62654]" dest="type_name [26519,26523]"/>
  <match src="identifier: input [36067,36072]" dest="identifier: input [51739,51744]"/>
  <match src="identifier: epoch [101603,101608]" dest="identifier: epoch [39421,39426]"/>
  <match src="uint256: uint256 [43761,43768]" dest="uint256: uint256 [13015,13022]"/>
  <match src="): ) [94145,94146]" dest="): ) [31931,31932]"/>
  <match src="identifier: one [6736,6739]" dest="identifier: one [6835,6838]"/>
  <match src="[: [ [100343,100344]" dest="[: [ [38161,38162]"/>
  <match src="identifier: approve [97111,97118]" dest="identifier: approve [34897,34904]"/>
  <match src="identifier: payloadA [33018,33026]" dest="identifier: payloadA [48690,48698]"/>
  <match src="identifier: reject [104820,104826]" dest="identifier: reject [42638,42644]"/>
  <match src="comment: /**      * @dev Returns the amount of tokens in existence.      */ [12498,12566]" dest="comment: /**      * @dev Returns the amount of tokens in existence.      */ [22174,22242]"/>
  <match src="call_argument [30908,30914]" dest="call_argument [46580,46586]"/>
  <match src="visibility [43996,44003]" dest="visibility [13250,13257]"/>
  <match src="parameter [54317,54333]" dest="parameter [21311,21327]"/>
  <match src="enum_value: UNDECIDED [87870,87879]" dest="enum_value: UNDECIDED [27999,28008]"/>
  <match src="identifier: file [31129,31133]" dest="identifier: file [46801,46805]"/>
  <match src="primitive_type [31810,31817]" dest="primitive_type [47482,47489]"/>
  <match src="parameter [75659,75673]" dest="parameter [55537,55551]"/>
  <match src="}: } [68273,68274]" dest="}: } [67206,67207]"/>
  <match src="address: address [84268,84275]" dest="address: address [58964,58971]"/>
  <match src="string [26856,26906]" dest="string [78433,78462]"/>
  <match src="{: { [84212,84213]" dest="{: { [58908,58909]"/>
  <match src="identifier: newImplementation [90473,90490]" dest="identifier: newImplementation [75545,75562]"/>
  <match src="identifier: must [28909,28913]" dest="identifier: must [44581,44585]"/>
  <match src="assembly: assembly [86406,86414]" dest="assembly: assembly [73713,73721]"/>
  <match src="): ) [73658,73659]" dest="): ) [80059,80060]"/>
  <match src="pure: pure [8945,8949]" dest="pure: pure [9044,9048]"/>
  <match src="call_expression [101239,101290]" dest="call_expression [39057,39108]"/>
  <match src="identifier: amount [75133,75139]" dest="identifier: amount [55032,55038]"/>
  <match src="public: public [92203,92209]" dest="public: public [29989,29995]"/>
  <match src="call_expression [46825,46869]" dest="call_expression [16079,16123]"/>
  <match src="(: ( [92088,92089]" dest="(: ( [29874,29875]"/>
  <match src="&quot;: &quot; [106056,106057]" dest="&quot;: &quot; [67985,67986]"/>
  <match src="(: ( [21960,21961]" dest="(: ( [62947,62948]"/>
  <match src="call_expression [105048,105068]" dest="call_expression [42866,42886]"/>
  <match src="identifier: outstandingCoupons [94282,94300]" dest="identifier: outstandingCoupons [32068,32086]"/>
  <match src="identifier: start [44926,44931]" dest="identifier: start [14180,14185]"/>
  <match src="type_name [87710,87717]" dest="type_name [27839,27846]"/>
  <match src="type_name [20396,20403]" dest="type_name [63485,63492]"/>
  <match src="internal: internal [102983,102991]" dest="internal: internal [40801,40809]"/>
  <match src="function_definition [7012,7195]" dest="function_definition [7111,7294]"/>
  <match src="): ) [80595,80596]" dest="): ) [77478,77479]"/>
  <match src="(: ( [102302,102303]" dest="(: ( [40120,40121]"/>
  <match src="parameter [96109,96122]" dest="parameter [33895,33908]"/>
  <match src="): ) [52852,52853]" dest="): ) [19846,19847]"/>
  <match src="internal: internal [9913,9921]" dest="internal: internal [10012,10020]"/>
  <match src="public: public [92774,92780]" dest="public: public [30560,30566]"/>
  <match src="parameter [95990,95997]" dest="parameter [33776,33783]"/>
  <match src="view: view [95565,95569]" dest="view: view [33351,33355]"/>
  <match src="{: { [85919,85920]" dest="{: { [73226,73227]"/>
  <match src="call_expression [26824,26907]" dest="call_expression [78395,78463]"/>
  <match src="[: [ [100308,100309]" dest="[: [ [38126,38127]"/>
  <match src="identifier: amount [51636,51642]" dest="identifier: amount [64056,64062]"/>
  <match src="): ) [98944,98945]" dest="): ) [36762,36763]"/>
  <match src="external: external [52883,52891]" dest="external: external [19877,19885]"/>
  <match src="call_argument [31552,31571]" dest="call_argument [47224,47243]"/>
  <match src=",: , [33200,33201]" dest=",: , [48872,48873]"/>
  <match src="expression_statement [102658,102791]" dest="expression_statement [40476,40609]"/>
  <match src="(: ( [92319,92320]" dest="(: ( [30105,30106]"/>
  <match src="identifier: amount [23882,23888]" dest="identifier: amount [17502,17508]"/>
  <match src="identifier: approveFor [97004,97014]" dest="identifier: approveFor [34790,34800]"/>
  <match src="expression_statement [80683,80727]" dest="expression_statement [70298,70342]"/>
  <match src="expression_statement [106590,106592]" dest="expression_statement [68519,68521]"/>
  <match src="member_expression [93349,93368]" dest="member_expression [31135,31154]"/>
  <match src="identifier: this [84276,84280]" dest="identifier: this [58972,58976]"/>
  <match src="private: private [35040,35047]" dest="private: private [50712,50719]"/>
  <match src="indexed: indexed [52650,52657]" dest="indexed: indexed [19644,19651]"/>
  <match src="external: external [53283,53291]" dest="external: external [20277,20285]"/>
  <match src="event_paramater [15043,15064]" dest="event_paramater [24719,24740]"/>
  <match src=",: , [20495,20496]" dest=",: , [63599,63600]"/>
  <match src="function_body [104742,104854]" dest="function_body [42560,42672]"/>
  <match src="type_name [44706,44713]" dest="type_name [13960,13967]"/>
  <match src=".: . [80588,80589]" dest=".: . [77471,77472]"/>
  <match src="type_name [31858,31865]" dest="type_name [47530,47537]"/>
  <match src="contract_declaration [88710,88756]" dest="contract_declaration [28839,28885]"/>
  <match src="function: function [93280,93288]" dest="function: function [31066,31074]"/>
  <match src="primitive_type [28819,28826]" dest="primitive_type [44491,44498]"/>
  <match src="type_name [88491,88498]" dest="type_name [28620,28627]"/>
  <match src="): ) [7961,7962]" dest="): ) [8060,8061]"/>
  <match src="call_expression [29110,29136]" dest="call_expression [44782,44808]"/>
  <match src="binary_expression [38196,38223]" dest="binary_expression [53868,53895]"/>
  <match src="{: { [44610,44611]" dest="{: { [13864,13865]"/>
  <match src=":: : [46690,46691]" dest=":: : [15944,15945]"/>
  <match src="return_type_definition [62620,62655]" dest="return_type_definition [26489,26524]"/>
  <match src="call_argument [100770,100776]" dest="call_argument [38588,38594]"/>
  <match src="member_expression [106490,106504]" dest="member_expression [68419,68433]"/>
  <match src="type_name [87283,87290]" dest="type_name [27412,27419]"/>
  <match src="%: % [5474,5475]" dest="%: % [5528,5529]"/>
  <match src="call_argument [32182,32208]" dest="call_argument [47854,47880]"/>
  <match src="function: function [85853,85861]" dest="function: function [73160,73168]"/>
  <match src="identifier: State [88740,88745]" dest="identifier: State [28869,28874]"/>
  <match src="): ) [97401,97402]" dest="): ) [35187,35188]"/>
  <match src="identifier: amount [14167,14173]" dest="identifier: amount [23843,23849]"/>
  <match src=".: . [94851,94852]" dest=".: . [32637,32638]"/>
  <match src="identifier: pool [93044,93048]" dest="identifier: pool [30830,30834]"/>
  <match src=",: , [1857,1858]" dest=",: , [1911,1912]"/>
  <match src="call_argument [33812,33820]" dest="call_argument [49484,49492]"/>
  <match src="pure: pure [46772,46776]" dest="pure: pure [16026,16030]"/>
  <match src="internal: internal [6747,6755]" dest="internal: internal [6846,6854]"/>
  <match src="{: { [87534,87535]" dest="{: { [27663,27664]"/>
  <match src="}: } [84931,84932]" dest="}: } [72177,72178]"/>
  <match src="constant: constant [28684,28692]" dest="constant: constant [44356,44364]"/>
  <match src="type_name [80831,80838]" dest="type_name [70419,70426]"/>
  <match src="{: { [33365,33366]" dest="{: { [49037,49038]"/>
  <match src="uint: uint [52662,52666]" dest="uint: uint [19656,19660]"/>
  <match src="return_type_definition [66938,66967]" dest="return_type_definition [66885,66914]"/>
  <match src="identifier: usdcAmount [78216,78226]" dest="identifier: incentive [82424,82433]"/>
  <match src="identifier: D256 [8192,8196]" dest="identifier: D256 [8291,8295]"/>
  <match src=",: , [32123,32124]" dest=",: , [47795,47796]"/>
  <match src="comment: /**      * @dev Emitted when the implementation is upgraded.      * @param implementation Address of the new implementation.      */ [89944,90079]" dest="comment: /**      * @dev Emitted when the implementation is upgraded.      * @param implementation Address of the new implementation.      */ [75016,75151]"/>
  <match src="primitive_type [43568,43575]" dest="primitive_type [12822,12829]"/>
  <match src="struct_declaration [6498,6542]" dest="struct_declaration [6597,6641]"/>
  <match src="comment: // solhint-disable-next-line no-inline-assembly [86349,86396]" dest="comment: // solhint-disable-next-line no-inline-assembly [73656,73703]"/>
  <match src=",: , [83216,83217]" dest=",: , [79939,79940]"/>
  <match src="): ) [29522,29523]" dest="): ) [45194,45195]"/>
  <match src="returns: returns [36997,37004]" dest="returns: returns [52669,52676]"/>
  <match src="member_expression [100087,100112]" dest="member_expression [37905,37930]"/>
  <match src="block_statement [38063,38128]" dest="block_statement [53735,53800]"/>
  <match src="identifier: reason [100694,100700]" dest="identifier: reason [38512,38518]"/>
  <match src="identifier: msg [80960,80963]" dest="identifier: msg [70557,70560]"/>
  <match src="(: ( [99432,99433]" dest="(: ( [37250,37251]"/>
  <match src="expression_statement [81322,81337]" dest="expression_statement [59351,59366]"/>
  <match src="primitive_type [28676,28683]" dest="primitive_type [44348,44355]"/>
  <match src="uint256: uint256 [93832,93839]" dest="uint256: uint256 [31618,31625]"/>
  <match src="identifier: D256 [8763,8767]" dest="identifier: D256 [8862,8866]"/>
  <match src="): ) [100494,100495]" dest="): ) [38312,38313]"/>
  <match src="(: ( [46837,46838]" dest="(: ( [16091,16092]"/>
  <match src="(: ( [35799,35800]" dest="(: ( [51471,51472]"/>
  <match src="type_name [10166,10170]" dest="type_name [10265,10269]"/>
  <match src="primitive_type [91008,91015]" dest="primitive_type [76080,76087]"/>
  <match src="visibility [14175,14183]" dest="visibility [23851,23859]"/>
  <match src="return_statement [96010,96062]" dest="return_statement [33796,33848]"/>
  <match src="private: private [95313,95320]" dest="private: private [33099,33106]"/>
  <match src="identifier: result [36655,36661]" dest="identifier: result [52327,52333]"/>
  <match src="expression_statement [81223,81310]" dest="expression_statement [71416,71461]"/>
  <match src="private: private [24088,24095]" dest="private: private [17516,17523]"/>
  <match src="): ) [14861,14862]" dest="): ) [24537,24538]"/>
  <match src="=: = [43095,43096]" dest="=: = [12349,12350]"/>
  <match src="identifier: D256 [7148,7152]" dest="identifier: D256 [7247,7251]"/>
  <match src="): ) [106628,106629]" dest="): ) [68557,68558]"/>
  <match src="): ) [20722,20723]" dest="): ) [62263,62264]"/>
  <match src="if_statement [103434,103503]" dest="if_statement [41252,41321]"/>
  <match src="internal: internal [1386,1394]" dest="internal: internal [1440,1448]"/>
  <match src="primitive_type [46015,46022]" dest="primitive_type [15269,15276]"/>
  <match src="variable_declaration [81486,81518]" dest="variable_declaration [79192,79209]"/>
  <match src="(: ( [82685,82686]" dest="(: ( [78917,78918]"/>
  <match src="identifier: Decimal [45766,45773]" dest="identifier: Decimal [15020,15027]"/>
  <match src="(: ( [31317,31318]" dest="(: ( [46989,46990]"/>
  <match src="primitive_type [87681,87688]" dest="primitive_type [27810,27817]"/>
  <match src="identifier: balance [99414,99421]" dest="identifier: balance [37232,37239]"/>
  <match src="(: ( [51463,51464]" dest="(: ( [63958,63959]"/>
  <match src="{: { [95710,95711]" dest="{: { [33496,33497]"/>
  <match src="uint8: uint8 [52847,52852]" dest="uint8: uint8 [19841,19846]"/>
  <match src="address: address [43065,43072]" dest="address: address [12319,12326]"/>
  <match src="identifier: debt [93364,93368]" dest="identifier: debt [31150,31154]"/>
  <match src="type_name [80278,80285]" dest="type_name [69834,69841]"/>
  <match src="call_argument [7863,7867]" dest="call_argument [7962,7966]"/>
  <match src="identifier: allowance [92612,92621]" dest="identifier: allowance [30398,30407]"/>
  <match src="(: ( [22574,22575]" dest="(: ( [63189,63190]"/>
  <match src="type_name [104695,104702]" dest="type_name [42513,42520]"/>
  <match src="type_name [82448,82455]" dest="type_name [82487,82494]"/>
  <match src="call_argument [3301,3329]" dest="call_argument [3355,3383]"/>
  <match src="identifier: expiring [96212,96220]" dest="identifier: expiring [33998,34006]"/>
  <match src="identifier: account [80179,80186]" dest="identifier: account [69694,69701]"/>
  <match src="expression_statement [106779,106809]" dest="expression_statement [68708,68738]"/>
  <match src="return_statement [8221,8263]" dest="return_statement [8320,8362]"/>
  <match src="identifier: length [96055,96061]" dest="identifier: length [33841,33847]"/>
  <match src="event: event [14791,14796]" dest="event: event [24467,24472]"/>
  <match src="call_argument [84674,84702]" dest="call_argument [79097,79119]"/>
  <match src="type_name [7478,7482]" dest="type_name [7577,7581]"/>
  <match src="identifier: staged [101340,101346]" dest="identifier: staged [39158,39164]"/>
  <match src="identifier: _state [105255,105261]" dest="identifier: _state [43073,43079]"/>
  <match src="identifier: candidate [104809,104818]" dest="identifier: candidate [42627,42636]"/>
  <match src="identifier: start [96837,96842]" dest="identifier: start [34623,34628]"/>
  <match src="): ) [33312,33313]" dest="): ) [48984,48985]"/>
  <match src="type_name [54732,54736]" dest="type_name [21726,21730]"/>
  <match src="visibility [103974,103982]" dest="visibility [41792,41800]"/>
  <match src="): ) [105105,105106]" dest="): ) [42923,42924]"/>
  <match src="parameter [8964,8975]" dest="parameter [9063,9074]"/>
  <match src="revert_statement [32002,32534]" dest="revert_statement [47674,48206]"/>
  <match src="type_name [101147,101154]" dest="type_name [38965,38972]"/>
  <match src="call_argument [51464,51470]" dest="call_argument [63959,63965]"/>
  <match src="identifier: payloadA [29904,29912]" dest="identifier: payloadA [45576,45584]"/>
  <match src="parameter [54778,54797]" dest="parameter [21772,21791]"/>
  <match src="parameter [50099,50113]" dest="parameter [25538,25552]"/>
  <match src="member_expression [105255,105272]" dest="member_expression [43073,43090]"/>
  <match src="parameter [54908,54915]" dest="parameter [21902,21909]"/>
  <match src="primitive_type [21161,21168]" dest="primitive_type [55924,55931]"/>
  <match src="call_expression [83303,83444]" dest="call_expression [77491,77605]"/>
  <match src="primitive_type [30038,30044]" dest="primitive_type [45710,45716]"/>
  <match src="call_argument [95397,95411]" dest="call_argument [33183,33197]"/>
  <match src="identifier: Permission [107811,107821]" dest="identifier: Permission [69500,69510]"/>
  <match src="array_access [100293,100317]" dest="array_access [38111,38135]"/>
  <match src="member_expression [99914,99928]" dest="member_expression [37732,37746]"/>
  <match src=".: . [101307,101308]" dest=".: . [39125,39126]"/>
  <match src="call_expression [82752,82840]" dest="call_expression [78858,78897]"/>
  <match src="identifier: encodePacked [33438,33450]" dest="identifier: encodePacked [49110,49122]"/>
  <match src="identifier: newPhantom [81575,81585]" dest="identifier: bonded [78149,78155]"/>
  <match src="): ) [93299,93300]" dest="): ) [31085,31086]"/>
  <match src="identifier: start [97533,97538]" dest="identifier: start [35319,35324]"/>
  <match src="&quot;: &quot; [18430,18431]" dest="&quot;: &quot; [71586,71587]"/>
  <match src="{: { [93010,93011]" dest="{: { [30796,30797]"/>
  <match src="function: function [54102,54110]" dest="function: function [21096,21104]"/>
  <match src="internal: internal [4705,4713]" dest="internal: internal [4759,4767]"/>
  <match src="call_expression [48290,48379]" dest="call_expression [55060,55113]"/>
  <match src="call_argument [33434,33877]" dest="call_argument [49106,49549]"/>
  <match src="uint256: uint256 [78046,78053]" dest="uint256: uint256 [56131,56138]"/>
  <match src="return_type_definition [10358,10372]" dest="return_type_definition [10457,10471]"/>
  <match src="return: return [96176,96182]" dest="return: return [33962,33968]"/>
  <match src="pure: pure [10472,10476]" dest="pure: pure [10571,10575]"/>
  <match src="identifier: owner [92630,92635]" dest="identifier: owner [30416,30421]"/>
  <match src=".: . [100140,100141]" dest=".: . [37958,37959]"/>
  <match src="identifier: sender [53832,53838]" dest="identifier: sender [20826,20832]"/>
  <match src="number_literal: 18 [92345,92347]" dest="number_literal: 18 [30131,30133]"/>
  <match src="user_defined_type [66947,66959]" dest="user_defined_type [66894,66906]"/>
  <match src="variable_declaration [36470,36479]" dest="variable_declaration [52142,52151]"/>
  <match src="identifier: add [105044,105047]" dest="identifier: add [42862,42865]"/>
  <match src="uint256: uint256 [95086,95093]" dest="uint256: uint256 [32872,32879]"/>
  <match src="parameter [1409,1416]" dest="parameter [1463,1470]"/>
  <match src="): ) [83766,83767]" dest="): ) [62628,62629]"/>
  <match src="call_expression [31630,31649]" dest="call_expression [47302,47321]"/>
  <match src="identifier: msg [81858,81861]" dest="identifier: msg [72046,72049]"/>
  <match src="call_argument [33848,33854]" dest="call_argument [49520,49526]"/>
  <match src="(: ( [65031,65032]" dest="(: ( [62289,62290]"/>
  <match src="identifier: value [52667,52672]" dest="identifier: value [19661,19666]"/>
  <match src="type_name [33168,33172]" dest="type_name [48840,48844]"/>
  <match src="): ) [97484,97485]" dest="): ) [35270,35271]"/>
  <match src="call_expression [101937,101996]" dest="call_expression [39755,39814]"/>
  <match src="return_statement [7388,7440]" dest="return_statement [7487,7539]"/>
  <match src="{: { [102449,102450]" dest="{: { [40267,40268]"/>
  <match src="identifier: value [9007,9012]" dest="identifier: value [9106,9111]"/>
  <match src="expression_statement [104753,104847]" dest="expression_statement [42571,42665]"/>
  <match src=",: , [106510,106511]" dest=",: , [68439,68440]"/>
  <match src="identifier: that [31775,31779]" dest="identifier: that [47447,47451]"/>
  <match src="internal: internal [10463,10471]" dest="internal: internal [10562,10570]"/>
  <match src="type_name [98827,98831]" dest="type_name [36645,36649]"/>
  <match src="call_expression [77107,77142]" dest="call_expression [61077,61108]"/>
  <match src="function: function [5319,5327]" dest="function: function [5373,5381]"/>
  <match src="visibility [3931,3939]" dest="visibility [3985,3993]"/>
  <match src="function_definition [3868,4213]" dest="function_definition [3922,4267]"/>
  <match src="): ) [10490,10491]" dest="): ) [10589,10590]"/>
  <match src="(: ( [95810,95811]" dest="(: ( [33596,33597]"/>
  <match src="parameter [34088,34100]" dest="parameter [49760,49772]"/>
  <match src="type_name [9405,9409]" dest="type_name [9504,9508]"/>
  <match src="identifier: burnFrom [23848,23856]" dest="identifier: redeemToAccount [55278,55293]"/>
  <match src="function_body [46807,46877]" dest="function_body [16061,16131]"/>
  <match src="parameter [33290,33306]" dest="parameter [48962,48978]"/>
  <match src="identifier: totalStaged [93181,93192]" dest="identifier: totalStaged [30967,30978]"/>
  <match src=".: . [79918,79919]" dest=".: . [62951,62952]"/>
  <match src="bytes32: bytes32 [29264,29271]" dest="bytes32: bytes32 [44936,44943]"/>
  <match src="member_expression [104144,104180]" dest="member_expression [41962,41998]"/>
  <match src="expression_statement [105255,105303]" dest="expression_statement [43073,43121]"/>
  <match src="function: function [9999,10007]" dest="function: function [10098,10106]"/>
  <match src="user_defined_type [8763,8767]" dest="user_defined_type [8862,8866]"/>
  <match src="]: ] [101608,101609]" dest="]: ] [39426,39427]"/>
  <match src="&quot;: &quot; [49307,49308]" dest="&quot;: &quot; [55638,55639]"/>
  <match src="primitive_type [97621,97625]" dest="primitive_type [35407,35411]"/>
  <match src="public: public [97727,97733]" dest="public: public [35513,35519]"/>
  <match src="user_defined_type [106007,106014]" dest="user_defined_type [67936,67943]"/>
  <match src="expression_statement [82752,82841]" dest="expression_statement [78858,78898]"/>
  <match src="uint256: uint256 [43924,43931]" dest="uint256: uint256 [13178,13185]"/>
  <match src="identifier: that [65027,65031]" dest="identifier: that [62285,62289]"/>
  <match src=",: , [51250,51251]" dest=",: , [54842,54843]"/>
  <match src="string: string [7726,7732]" dest="string: string [7825,7831]"/>
  <match src="returns: returns [12765,12772]" dest="returns: returns [22441,22448]"/>
  <match src="number_literal: 10 [35877,35879]" dest="number_literal: 10 [51549,51551]"/>
  <match src="member_expression [105122,105158]" dest="member_expression [42940,42976]"/>
  <match src="identifier: amount [17195,17201]" dest="identifier: amount [55979,55985]"/>
  <match src="call_argument [75787,75793]" dest="call_argument [62037,62043]"/>
  <match src="primitive_type [37191,37196]" dest="primitive_type [52863,52868]"/>
  <match src="identifier: balance [100639,100646]" dest="identifier: balance [38457,38464]"/>
  <match src="(: ( [10400,10401]" dest="(: ( [10499,10500]"/>
  <match src="identifier: account [94447,94454]" dest="identifier: account [32233,32240]"/>
  <match src="identifier: denominator [10918,10929]" dest="identifier: denominator [11017,11028]"/>
  <match src="type_name [98940,98944]" dest="type_name [36758,36762]"/>
  <match src="type_name [80303,80310]" dest="type_name [69859,69866]"/>
  <match src=",: , [54776,54777]" dest=",: , [21770,21771]"/>
  <match src="primitive_type [15066,15073]" dest="primitive_type [24742,24749]"/>
  <match src="&quot;: &quot; [49066,49067]" dest="&quot;: &quot; [55425,55426]"/>
  <match src="function: function [102533,102541]" dest="function: function [40351,40359]"/>
  <match src="parameter [97193,97200]" dest="parameter [34979,34986]"/>
  <match src="yul_path [97842,97846]" dest="yul_path [35628,35632]"/>
  <match src="identifier: c [2661,2662]" dest="identifier: c [2715,2716]"/>
  <match src="identifier: dollar [92838,92844]" dest="identifier: dollar [30624,30630]"/>
  <match src="user_defined_type [10166,10170]" dest="user_defined_type [10265,10269]"/>
  <match src="call_argument [1009,1015]" dest="call_argument [1063,1069]"/>
  <match src="identifier: sync [54864,54868]" dest="identifier: sync [21858,21862]"/>
  <match src="identifier: account [100804,100811]" dest="identifier: account [38622,38629]"/>
  <match src="primitive_type [102392,102399]" dest="primitive_type [40210,40217]"/>
  <match src="[: [ [102499,102500]" dest="[: [ [40317,40318]"/>
  <match src="}: } [96714,96715]" dest="}: } [34500,34501]"/>
  <match src="}: } [34895,34896]" dest="}: } [50567,50568]"/>
  <match src="(: ( [53365,53366]" dest="(: ( [20359,20360]"/>
  <match src="uint256: uint256 [18957,18964]" dest="uint256: uint256 [17466,17473]"/>
  <match src="): ) [29776,29777]" dest="): ) [45448,45449]"/>
  <match src="function_definition [103897,104052]" dest="function_definition [41715,41870]"/>
  <match src="identifier: sender [79919,79925]" dest="identifier: sender [62952,62958]"/>
  <match src="call_argument [22672,22710]" dest="call_argument [62881,62910]"/>
  <match src="call_argument [83330,83368]" dest="call_argument [77518,77543]"/>
  <match src="=: = [34335,34336]" dest="=: = [50007,50008]"/>
  <match src="function_definition [13373,13456]" dest="function_definition [23049,23132]"/>
  <match src="call_expression [73652,73659]" dest="call_expression [80053,80060]"/>
  <match src="call_argument [30110,30134]" dest="call_argument [45782,45806]"/>
  <match src="identifier: staged [100994,101000]" dest="identifier: staged [38812,38818]"/>
  <match src="type_name [99878,99885]" dest="type_name [37696,37703]"/>
  <match src="revert: revert [32742,32748]" dest="revert: revert [48414,48420]"/>
  <match src="): ) [93946,93947]" dest="): ) [31732,31733]"/>
  <match src="number_literal: 40 [36804,36806]" dest="number_literal: 40 [52476,52478]"/>
  <match src="identifier: univ2 [84250,84255]" dest="identifier: dollar [58950,58956]"/>
  <match src="user_defined_type [8704,8708]" dest="user_defined_type [8803,8807]"/>
  <match src="expression_statement [101485,101579]" dest="expression_statement [39303,39397]"/>
  <match src="type_name [31912,31919]" dest="type_name [47584,47591]"/>
  <match src="identifier: newUniv2 [83758,83766]" dest="identifier: epoch [62609,62614]"/>
  <match src="call_argument [33724,33743]" dest="call_argument [49396,49415]"/>
  <match src="call_argument [20577,20578]" dest="call_argument [63689,63690]"/>
  <match src="number_literal: 4 [36723,36724]" dest="number_literal: 4 [52395,52396]"/>
  <match src="identifier: b [9910,9911]" dest="identifier: b [10009,10010]"/>
  <match src="&gt;: &gt; [4051,4052]" dest="&gt;: &gt; [4105,4106]"/>
  <match src="type_cast_expression [84268,84281]" dest="type_cast_expression [58964,58977]"/>
  <match src="call_argument [82790,82801]" dest="call_argument [78881,78890]"/>
  <match src="identifier: require [1930,1937]" dest="identifier: require [1984,1991]"/>
  <match src="identifier: file [30791,30795]" dest="identifier: file [46463,46467]"/>
  <match src="assignment_expression [104547,104632]" dest="assignment_expression [42365,42450]"/>
  <match src="bytes32: bytes32 [31833,31840]" dest="bytes32: bytes32 [47505,47512]"/>
  <match src="type_name [103116,103123]" dest="type_name [40934,40941]"/>
  <match src="variable_declaration_statement [82156,82210]" dest="variable_declaration_statement [71323,71406]"/>
  <match src="(: ( [81040,81041]" dest="(: ( [55884,55885]"/>
  <match src="identifier: spender [98897,98904]" dest="identifier: spender [36715,36722]"/>
  <match src="function_body [45327,45395]" dest="function_body [14581,14649]"/>
  <match src="view: view [96284,96288]" dest="view: view [34070,34074]"/>
  <match src="function_body [96646,96715]" dest="function_body [34432,34501]"/>
  <match src="call_argument [82022,82032]" dest="call_argument [72124,72134]"/>
  <match src="identifier: EPOCH_OFFSET [44899,44911]" dest="identifier: EPOCH_OFFSET [14153,14165]"/>
  <match src="member_expression [83303,83315]" dest="member_expression [77491,77503]"/>
  <match src="call_argument [33770,33775]" dest="call_argument [49442,49447]"/>
  <match src="identifier: D256 [7679,7683]" dest="identifier: D256 [7778,7782]"/>
  <match src="member_expression [82470,82502]" dest="member_expression [71340,71382]"/>
  <match src="type_name [43988,43995]" dest="type_name [13242,13249]"/>
  <match src=".: . [102770,102771]" dest=".: . [40588,40589]"/>
  <match src="identifier: z [37843,37844]" dest="identifier: z [53515,53516]"/>
  <match src="type_name [53574,53578]" dest="type_name [20568,20572]"/>
  <match src="assignment_expression [103994,104044]" dest="assignment_expression [41812,41862]"/>
  <match src="expression_statement [103603,103648]" dest="expression_statement [41421,41466]"/>
  <match src="function_definition [62662,62710]" dest="function_definition [26531,26579]"/>
  <match src="type_name [7679,7683]" dest="type_name [7778,7782]"/>
  <match src="array_access [36655,36673]" dest="array_access [52327,52345]"/>
  <match src="(: ( [32748,32749]" dest="(: ( [48420,48421]"/>
  <match src="identifier: mul [7627,7630]" dest="identifier: mul [7726,7729]"/>
  <match src="call_argument [29499,29523]" dest="call_argument [45171,45195]"/>
  <match src="call_argument [100825,100831]" dest="call_argument [38643,38649]"/>
  <match src="identifier: balanceOf [92372,92381]" dest="identifier: balanceOf [30158,30167]"/>
  <match src="bool: bool [85913,85917]" dest="bool: bool [73220,73224]"/>
  <match src="): ) [6943,6944]" dest="): ) [7042,7043]"/>
  <match src="}: } [9038,9039]" dest="}: } [9137,9138]"/>
  <match src="[: [ [102761,102762]" dest="[: [ [40579,40580]"/>
  <match src="primitive_type [53169,53176]" dest="primitive_type [20163,20170]"/>
  <match src="call_expression [99407,99448]" dest="call_expression [37225,37266]"/>
  <match src="(: ( [90562,90563]" dest="(: ( [75634,75635]"/>
  <match src="}: } [7638,7639]" dest="}: } [7737,7738]"/>
  <match src="type_name [103727,103734]" dest="type_name [41545,41552]"/>
  <match src="function_body [45466,45509]" dest="function_body [14720,14763]"/>
  <match src="identifier: newImplementation [90614,90631]" dest="identifier: newImplementation [75686,75703]"/>
  <match src="member_expression [100712,100726]" dest="member_expression [38530,38544]"/>
  <match src="[: [ [97521,97522]" dest="[: [ [35307,35308]"/>
  <match src="returns: returns [98818,98825]" dest="returns: returns [36636,36643]"/>
  <match src="primitive_type [97748,97755]" dest="primitive_type [35534,35541]"/>
  <match src="identifier: Upgraded [90605,90613]" dest="identifier: Upgraded [75677,75685]"/>
  <match src="function: function [22557,22565]" dest="function: function [63166,63174]"/>
  <match src="primitive_type [98689,98696]" dest="primitive_type [36507,36514]"/>
  <match src="uint: uint [54684,54688]" dest="uint: uint [21678,21682]"/>
  <match src="number_literal: 0 [94311,94312]" dest="number_literal: 0 [32097,32098]"/>
  <match src="state_mutability [35053,35057]" dest="state_mutability [50725,50729]"/>
  <match src="identifier: sender [82398,82404]" dest="identifier: sender [78172,78178]"/>
  <match src=",: , [80970,80971]" dest=",: , [70567,70568]"/>
  <match src="): ) [92906,92907]" dest="): ) [30692,30693]"/>
  <match src="uint256: uint256 [71167,71174]" dest="uint256: uint256 [54675,54682]"/>
  <match src="function: function [2267,2275]" dest="function: function [2321,2329]"/>
  <match src="comment: // SPDX-License-Identifier: GPL-3.0-or-later [54942,54986]" dest="comment: // File: contracts/dao/State.sol [26586,26618]"/>
  <match src="): ) [53975,53976]" dest="): ) [20969,20970]"/>
  <match src="call_argument [23168,23174]" dest="call_argument [63793,63799]"/>
  <match src="identifier: must [29381,29385]" dest="identifier: must [45053,45057]"/>
  <match src="memory: memory [36184,36190]" dest="memory: memory [51856,51862]"/>
  <match src="binary_expression [83330,83368]" dest="binary_expression [77518,77543]"/>
  <match src="): ) [30465,30466]" dest="): ) [46137,46138]"/>
  <match src="primitive_type [32652,32659]" dest="primitive_type [48324,48331]"/>
  <match src=",: , [33027,33028]" dest=",: , [48699,48700]"/>
  <match src="primitive_type [69841,69848]" dest="primitive_type [65182,65189]"/>
  <match src="user_defined_type [8301,8305]" dest="user_defined_type [8400,8404]"/>
  <match src="expression_statement [100087,100161]" dest="expression_statement [37905,37979]"/>
  <match src="[: [ [96698,96699]" dest="[: [ [34484,34485]"/>
  <match src="call_argument [75517,75523]" dest="call_argument [55175,55181]"/>
  <match src="view: view [92210,92214]" dest="view: view [29996,30000]"/>
  <match src="function_body [80878,81095]" dest="function_body [70474,70668]"/>
  <match src="call_expression [10246,10264]" dest="call_expression [10345,10363]"/>
  <match src="member_expression [103782,103816]" dest="member_expression [41600,41634]"/>
  <match src="(: ( [32940,32941]" dest="(: ( [48612,48613]"/>
  <match src="(: ( [83875,83876]" dest="(: ( [58847,58848]"/>
  <match src="==: == [35112,35114]" dest="==: == [50784,50786]"/>
  <match src="parameter [99341,99361]" dest="parameter [37159,37179]"/>
  <match src="primitive_type [97581,97588]" dest="primitive_type [35367,35374]"/>
  <match src="): ) [7370,7371]" dest="): ) [7469,7470]"/>
  <match src="return_type_definition [10064,10078]" dest="return_type_definition [10163,10177]"/>
  <match src="memory: memory [8306,8312]" dest="memory: memory [8405,8411]"/>
  <match src="}: } [95775,95776]" dest="}: } [33561,33562]"/>
  <match src="(: ( [13446,13447]" dest="(: ( [23122,23123]"/>
  <match src=".: . [80711,80712]" dest=".: . [70326,70327]"/>
  <match src="(: ( [20813,20814]" dest="(: ( [64146,64147]"/>
  <match src="): ) [1384,1385]" dest="): ) [1438,1439]"/>
  <match src="if_statement [51450,51701]" dest="if_statement [63914,64115]"/>
  <match src="identifier: D256 [9742,9746]" dest="identifier: D256 [9841,9845]"/>
  <match src="binary_expression [10391,10413]" dest="binary_expression [10490,10512]"/>
  <match src="identifier: D256 [9656,9660]" dest="identifier: D256 [9755,9759]"/>
  <match src="primitive_type [78046,78053]" dest="primitive_type [56131,56138]"/>
  <match src="identifier: bonded [96346,96352]" dest="identifier: bonded [34132,34138]"/>
  <match src="primitive_type [43385,43392]" dest="primitive_type [12639,12646]"/>
  <match src="yul_identifier [86417,86421]" dest="yul_identifier [73724,73728]"/>
  <match src="identifier: provider [92933,92941]" dest="identifier: provider [30719,30727]"/>
  <match src="primitive_type [70184,70191]" dest="primitive_type [65095,65102]"/>
  <match src="--: -- [34498,34500]" dest="--: -- [50170,50172]"/>
  <match src="identifier: reason [32201,32207]" dest="identifier: reason [47873,47879]"/>
  <match src=".: . [101346,101347]" dest=".: . [39164,39165]"/>
  <match src="call_argument [32118,32122]" dest="call_argument [47790,47794]"/>
  <match src="): ) [33876,33877]" dest="): ) [49548,49549]"/>
  <match src="private: private [44397,44404]" dest="private: private [13651,13658]"/>
  <match src="): ) [50113,50114]" dest="): ) [25552,25553]"/>
  <match src=".: . [102283,102284]" dest=".: . [40101,40102]"/>
  <match src="binary_expression [4092,4097]" dest="binary_expression [4146,4151]"/>
  <match src="comment: // allocate the string [35344,35366]" dest="comment: // allocate the string [51016,51038]"/>
  <match src="&quot;: &quot; [1477,1478]" dest="&quot;: &quot; [1531,1532]"/>
  <match src="identifier: D256 [8228,8232]" dest="identifier: D256 [8327,8331]"/>
  <match src="return_type_definition [9789,9803]" dest="return_type_definition [9888,9902]"/>
  <match src="struct: struct [87929,87935]" dest="struct: struct [28058,28064]"/>
  <match src="struct_member [88649,88696]" dest="struct_member [28778,28825]"/>
  <match src="&quot;: &quot; [2707,2708]" dest="&quot;: &quot; [2761,2762]"/>
  <match src="parameter [97329,97336]" dest="parameter [35115,35122]"/>
  <match src="(: ( [8256,8257]" dest="(: ( [8355,8356]"/>
  <match src="primitive_type [78037,78044]" dest="primitive_type [56122,56129]"/>
  <match src="call_expression [45766,45814]" dest="call_expression [15020,15068]"/>
  <match src="ternary_expression [81622,81695]" dest="ternary_expression [70806,70926]"/>
  <match src="return_statement [10885,10931]" dest="return_statement [10984,11030]"/>
  <match src="address: address [100882,100889]" dest="address: address [38700,38707]"/>
  <match src="return_statement [92250,92264]" dest="return_statement [30036,30050]"/>
  <match src="): ) [83156,83157]" dest="): ) [58591,58592]"/>
  <match src="visibility [35040,35047]" dest="visibility [50712,50719]"/>
  <match src="identifier: Provide [83895,83902]" dest="identifier: Commit [79781,79787]"/>
  <match src="call_argument [81685,81690]" dest="call_argument [70850,70885]"/>
  <match src="return_type_definition [96289,96306]" dest="return_type_definition [34075,34092]"/>
  <match src="identifier: Getters [98582,98589]" dest="identifier: Getters [36400,36407]"/>
  <match src="): ) [84256,84257]" dest="): ) [58957,58958]"/>
  <match src="member_expression [93859,93890]" dest="member_expression [31645,31676]"/>
  <match src="identifier: BASE [10643,10647]" dest="identifier: BASE [10742,10746]"/>
  <match src="call_expression [37805,37828]" dest="call_expression [53477,53500]"/>
  <match src="[: [ [101254,101255]" dest="[: [ [39072,39073]"/>
  <match src=",: , [53753,53754]" dest=",: , [20747,20748]"/>
  <match src="primitive_type [54778,54783]" dest="primitive_type [21772,21777]"/>
  <match src="identifier: amount [100825,100831]" dest="identifier: amount [38643,38649]"/>
  <match src="parameter [10796,10815]" dest="parameter [10895,10914]"/>
  <match src="uint256: uint256 [97329,97336]" dest="uint256: uint256 [35115,35122]"/>
  <match src="): ) [34100,34101]" dest="): ) [49772,49773]"/>
  <match src="function_definition [93500,93602]" dest="function_definition [31286,31388]"/>
  <match src="returns: returns [46476,46483]" dest="returns: returns [15730,15737]"/>
  <match src="visibility [10199,10207]" dest="visibility [10298,10306]"/>
  <match src="=: = [102907,102908]" dest="=: = [40725,40726]"/>
  <match src="pure: pure [33333,33337]" dest="pure: pure [49005,49009]"/>
  <match src="function_definition [45403,45509]" dest="function_definition [14657,14763]"/>
  <match src="returns: returns [52712,52719]" dest="returns: returns [19706,19713]"/>
  <match src="): ) [7636,7637]" dest="): ) [7735,7736]"/>
  <match src="member_expression [93678,93704]" dest="member_expression [31464,31490]"/>
  <match src="[: [ [94884,94885]" dest="[: [ [32670,32671]"/>
  <match src="comment: /**      * Account      */ [93733,93761]" dest="comment: /**      * Account      */ [31519,31547]"/>
  <match src="user_defined_type [8192,8196]" dest="user_defined_type [8291,8295]"/>
  <match src="call_argument [10407,10408]" dest="call_argument [10506,10507]"/>
  <match src="uint8: uint8 [92320,92325]" dest="uint8: uint8 [30106,30111]"/>
  <match src="primitive_type [53500,53504]" dest="primitive_type [20494,20498]"/>
  <match src="return: return [10503,10509]" dest="return: return [10602,10608]"/>
  <match src="identifier: errorMessage [1873,1885]" dest="identifier: errorMessage [1927,1939]"/>
  <match src="call_argument [32268,32287]" dest="call_argument [47940,47959]"/>
  <match src="function: function [20377,20385]" dest="function: function [63460,63468]"/>
  <match src="parameter [35072,35084]" dest="parameter [50744,50756]"/>
  <match src="identifier: epoch [102064,102069]" dest="identifier: epoch [39882,39887]"/>
  <match src="revert: revert [30013,30019]" dest="revert: revert [45685,45691]"/>
  <match src="function: function [77002,77010]" dest="function: function [60765,60773]"/>
  <match src="(: ( [107944,107945]" dest="(: ( [54827,54828]"/>
  <match src="=: = [37703,37704]" dest="=: = [53375,53376]"/>
  <match src="type_name [72247,72251]" dest="type_name [80676,80680]"/>
  <match src="identifier: _state [99550,99556]" dest="identifier: _state [37368,37374]"/>
  <match src="call_expression [31552,31571]" dest="call_expression [47224,47243]"/>
  <match src="[: [ [96338,96339]" dest="[: [ [34124,34125]"/>
  <match src="(: ( [14192,14193]" dest="(: ( [23868,23869]"/>
  <match src="): ) [101011,101012]" dest="): ) [38829,38830]"/>
  <match src="function: function [72064,72072]" dest="function: function [58175,58183]"/>
  <match src="pure: pure [1896,1900]" dest="pure: pure [1950,1954]"/>
  <match src="pure: pure [46001,46005]" dest="pure: pure [15255,15259]"/>
  <match src="type_name [53925,53929]" dest="type_name [20919,20923]"/>
  <match src="identifier: require [2653,2660]" dest="identifier: require [2707,2714]"/>
  <match src="identifier: D256 [9441,9445]" dest="identifier: D256 [9540,9544]"/>
  <match src="member_expression [99383,99397]" dest="member_expression [37201,37215]"/>
  <match src="binary_expression [34650,34655]" dest="binary_expression [50322,50327]"/>
  <match src="visibility [7759,7767]" dest="visibility [7858,7866]"/>
  <match src="+: + [35797,35798]" dest="+: + [51469,51470]"/>
  <match src="identifier: epoch [82904,82909]" dest="identifier: epoch [71655,71660]"/>
  <match src="]: ] [95893,95894]" dest="]: ] [33679,33680]"/>
  <match src=",: , [29555,29556]" dest=",: , [45227,45228]"/>
  <match src="call_expression [37187,37200]" dest="call_expression [52859,52872]"/>
  <match src="function: function [8278,8286]" dest="function: function [8377,8385]"/>
  <match src="visibility [81133,81141]" dest="visibility [79870,79878]"/>
  <match src="state_mutability [92885,92889]" dest="state_mutability [30671,30675]"/>
  <match src="type_name [62701,62708]" dest="type_name [26570,26577]"/>
  <match src="type_name [103361,103368]" dest="type_name [41179,41186]"/>
  <match src="identifier: amount [75253,75259]" dest="identifier: amount [17828,17834]"/>
  <match src="{: { [104342,104343]" dest="{: { [42160,42161]"/>
  <match src="{: { [8233,8234]" dest="{: { [8332,8333]"/>
  <match src="(: ( [105047,105048]" dest="(: ( [42865,42866]"/>
  <match src="parameter [10999,11012]" dest="parameter [11098,11111]"/>
  <match src="type_name [102600,102607]" dest="type_name [40418,40425]"/>
  <match src="function_body [101474,101762]" dest="function_body [39292,39580]"/>
  <match src="primitive_type [53462,53469]" dest="primitive_type [20456,20463]"/>
  <match src="identifier: char [37663,37667]" dest="identifier: char [53335,53339]"/>
  <match src="uint256: uint256 [3892,3899]" dest="uint256: uint256 [3946,3953]"/>
  <match src="pure: pure [44808,44812]" dest="pure: pure [14062,14066]"/>
  <match src="memory: memory [5361,5367]" dest="memory: memory [5415,5421]"/>
  <match src="contract_body [12491,15109]" dest="contract_body [22167,24785]"/>
  <match src="comment: // each byte takes two characters [37500,37533]" dest="comment: // each byte takes two characters [53172,53205]"/>
  <match src="return_type_definition [54499,54513]" dest="return_type_definition [21493,21507]"/>
  <match src=",: , [32241,32242]" dest=",: , [47913,47914]"/>
  <match src="type_name [95086,95093]" dest="type_name [32872,32879]"/>
  <match src="address: address [13392,13399]" dest="address: address [23068,23075]"/>
  <match src="type_name [75659,75666]" dest="type_name [55537,55544]"/>
  <match src="identifier: D256 [9760,9764]" dest="identifier: D256 [9859,9863]"/>
  <match src="visibility [93948,93954]" dest="visibility [31734,31740]"/>
  <match src="assignment_expression [100293,100372]" dest="assignment_expression [38111,38190]"/>
  <match src="identifier: z [37701,37702]" dest="identifier: z [53373,53374]"/>
  <match src=",: , [54764,54765]" dest=",: , [21758,21759]"/>
  <match src="type_name [28448,28455]" dest="type_name [44120,44127]"/>
  <match src="&quot;: &quot; [51686,51687]" dest="&quot;: &quot; [64101,64102]"/>
  <match src="}: } [38235,38236]" dest="}: } [53907,53908]"/>
  <match src="): ) [82142,82143]" dest="): ) [71811,71812]"/>
  <match src="call_expression [35396,35413]" dest="call_expression [51068,51085]"/>
  <match src="identifier: name [92084,92088]" dest="identifier: name [29870,29874]"/>
  <match src="function_definition [9999,10128]" dest="function_definition [10098,10227]"/>
  <match src="type_name [42864,42871]" dest="type_name [12118,12125]"/>
  <match src="event: event [98632,98637]" dest="event: event [36450,36455]"/>
  <match src="memory: memory [6662,6668]" dest="memory: memory [6761,6767]"/>
  <match src=".: . [92453,92454]" dest=".: . [30239,30240]"/>
  <match src="identifier: that [84826,84830]" dest="identifier: that [79285,79289]"/>
  <match src="primitive_type [43434,43441]" dest="primitive_type [12688,12695]"/>
  <match src="type_cast_expression [100813,100823]" dest="type_cast_expression [38631,38641]"/>
  <match src="state_mutability [36987,36991]" dest="state_mutability [52659,52663]"/>
  <match src="function_definition [100511,100840]" dest="function_definition [38329,38658]"/>
  <match src="returns: returns [14184,14191]" dest="returns: returns [23860,23867]"/>
  <match src="type_name [33263,33270]" dest="type_name [48935,48942]"/>
  <match src=",: , [80487,80488]" dest=",: , [77160,77161]"/>
  <match src="identifier: Status [87187,87193]" dest="identifier: Status [27316,27322]"/>
  <match src="): ) [35033,35034]" dest="): ) [50705,50706]"/>
  <match src="identifier: amount [100564,100570]" dest="identifier: amount [38382,38388]"/>
  <match src="expression_statement [80739,80754]" dest="expression_statement [56031,56046]"/>
  <match src="uint8: uint8 [36285,36290]" dest="uint8: uint8 [51957,51962]"/>
  <match src="{: { [6973,6974]" dest="{: { [7072,7073]"/>
  <match src="member_expression [105255,105295]" dest="member_expression [43073,43113]"/>
  <match src="(: ( [96916,96917]" dest="(: ( [34702,34703]"/>
  <match src="event_paramater [53672,53684]" dest="event_paramater [20666,20678]"/>
  <match src="(: ( [35266,35267]" dest="(: ( [50938,50939]"/>
  <match src="parameter [80550,80563]" dest="parameter [70166,70179]"/>
  <match src="primitive_type [6877,6884]" dest="primitive_type [6976,6983]"/>
  <match src="parameter [10367,10371]" dest="parameter [10466,10470]"/>
  <match src="call_argument [103267,103272]" dest="call_argument [41085,41090]"/>
  <match src="(: ( [45622,45623]" dest="(: ( [14876,14877]"/>
  <match src="): ) [71783,71784]" dest="): ) [65788,65789]"/>
  <match src="visibility [80565,80573]" dest="visibility [70181,70189]"/>
  <match src="visibility [106032,106039]" dest="visibility [67961,67968]"/>
  <match src="internal: internal [99508,99516]" dest="internal: internal [37326,37334]"/>
  <match src="user_defined_type [50071,50077]" dest="user_defined_type [25510,25516]"/>
  <match src="type_name [33188,33195]" dest="type_name [48860,48867]"/>
  <match src="identifier: LPAREN [33613,33619]" dest="identifier: LPAREN [49285,49291]"/>
  <match src="): ) [103972,103973]" dest="): ) [41790,41791]"/>
  <match src="visibility [45992,46000]" dest="visibility [15246,15254]"/>
  <match src=",: , [29083,29084]" dest=",: , [44755,44756]"/>
  <match src="(: ( [36284,36285]" dest="(: ( [51956,51957]"/>
  <match src="identifier: epochs [103226,103232]" dest="identifier: epochs [41044,41050]"/>
  <match src="identifier: couponsExpiration [95793,95810]" dest="identifier: couponsExpiration [33579,33596]"/>
  <match src="(: ( [80865,80866]" dest="(: ( [71266,71267]"/>
  <match src="return_statement [6809,6838]" dest="return_statement [6908,6937]"/>
  <match src="state_mutability [72233,72237]" dest="state_mutability [80662,80666]"/>
  <match src="identifier: amount [22615,22621]" dest="identifier: amount [63215,63221]"/>
  <match src="type_name [104276,104283]" dest="type_name [42094,42101]"/>
  <match src="returns: returns [2316,2323]" dest="returns: returns [2370,2377]"/>
  <match src="event: event [80267,80272]" dest="event: event [69821,69826]"/>
  <match src="array_access [104959,104983]" dest="array_access [42777,42801]"/>
  <match src="return: return [5465,5471]" dest="return: return [5519,5525]"/>
  <match src="comment: /*     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [50268,50921]" dest="comment: /*     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [25748,26401]"/>
  <match src="(: ( [14141,14142]" dest="(: ( [23817,23818]"/>
  <match src="for: for [74662,74665]" dest="for: for [76989,76992]"/>
  <match src="primitive_type [101163,101169]" dest="primitive_type [38981,38987]"/>
  <match src="comment: /**      * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * IMPORTANT: Beware that changing an allowance with this method brings the risk      * that someone may use both the old and the new allowance by unfortunate      * transaction ordering. One possible solution to mitigate this race      * condition is to first reduce the spender's allowance to 0 and set the      * desired value afterwards:      * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      *      * Emits an {Approval} event.      */ [13464,14119]" dest="comment: /**      * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * IMPORTANT: Beware that changing an allowance with this method brings the risk      * that someone may use both the old and the new allowance by unfortunate      * transaction ordering. One possible solution to mitigate this race      * condition is to first reduce the spender's allowance to 0 and set the      * desired value afterwards:      * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      *      * Emits an {Approval} event.      */ [23140,23795]"/>
  <match src="identifier: start [80311,80316]" dest="identifier: start [69867,69872]"/>
  <match src="(: ( [83347,83348]" dest="(: ( [77527,77528]"/>
  <match src="}: } [10937,10938]" dest="}: } [11036,11037]"/>
  <match src="primitive_type [54698,54702]" dest="primitive_type [21692,21696]"/>
  <match src="constant: constant [89838,89846]" dest="constant: constant [74910,74918]"/>
  <match src="function_body [46653,46721]" dest="function_body [15907,15975]"/>
  <match src="call_argument [3298,3299]" dest="call_argument [3352,3353]"/>
  <match src="identifier: IDollar [88176,88183]" dest="identifier: IDollar [28305,28312]"/>
  <match src="identifier: isZero [10438,10444]" dest="identifier: isZero [10537,10543]"/>
  <match src="[: [ [96825,96826]" dest="[: [ [34611,34612]"/>
  <match src="}: } [105186,105187]" dest="}: } [43004,43005]"/>
  <match src="external: external [84014,84022]" dest="external: external [79050,79058]"/>
  <match src="}: } [37864,37865]" dest="}: } [53536,53537]"/>
  <match src="parameter [5343,5352]" dest="parameter [5397,5406]"/>
  <match src="expression_statement [103994,104045]" dest="expression_statement [41812,41863]"/>
  <match src="parameter [95272,95311]" dest="parameter [33058,33097]"/>
  <match src=".: . [78578,78579]" dest=".: . [59267,59268]"/>
  <match src="type_name [94477,94491]" dest="type_name [32263,32277]"/>
  <match src="view: view [53047,53051]" dest="view: view [20041,20045]"/>
  <match src="variable_declaration [82353,82373]" dest="variable_declaration [82558,82572]"/>
  <match src="event_paramater [80246,80259]" dest="event_paramater [60742,60755]"/>
  <match src="call_argument [84304,84317]" dest="call_argument [58319,58336]"/>
  <match src="binary_expression [37705,37711]" dest="binary_expression [53377,53383]"/>
  <match src=",: , [104309,104310]" dest=",: , [42127,42128]"/>
  <match src="member_expression [103837,103872]" dest="member_expression [41655,41690]"/>
  <match src="primitive_type [35235,35242]" dest="primitive_type [50907,50914]"/>
  <match src="]: ] [102769,102770]" dest="]: ] [40587,40588]"/>
  <match src="=: = [101525,101526]" dest="=: = [39343,39344]"/>
  <match src="call_expression [7842,7877]" dest="call_expression [7941,7976]"/>
  <match src="type_cast_expression [30038,30451]" dest="type_cast_expression [45710,46123]"/>
  <match src="function_body [95095,95233]" dest="function_body [32881,33019]"/>
  <match src="call_expression [37663,37686]" dest="call_expression [53335,53358]"/>
  <match src="primitive_type [93931,93938]" dest="primitive_type [31717,31724]"/>
  <match src="event_definition [98632,98704]" dest="event_definition [36450,36522]"/>
  <match src="return_type_definition [98818,98832]" dest="return_type_definition [36636,36650]"/>
  <match src="identifier: v [53595,53596]" dest="identifier: v [20589,20590]"/>
  <match src="identifier: file [32118,32122]" dest="identifier: file [47790,47794]"/>
  <match src="function_definition [14517,14614]" dest="function_definition [24193,24290]"/>
  <match src="): ) [49217,49218]" dest="): ) [70071,70072]"/>
  <match src="return: return [96446,96452]" dest="return: return [34232,34238]"/>
  <match src="comment: // reverse-for-loops with unsigned integer [35573,35615]" dest="comment: // reverse-for-loops with unsigned integer [51245,51287]"/>
  <match src=",: , [99735,99736]" dest=",: , [37553,37554]"/>
  <match src="): ) [105067,105068]" dest="): ) [42885,42886]"/>
  <match src=",: , [101447,101448]" dest=",: , [39265,39266]"/>
  <match src="assignment_expression [102886,102936]" dest="assignment_expression [40704,40754]"/>
  <match src="=: = [8586,8587]" dest="=: = [8685,8686]"/>
  <match src="(: ( [37919,37920]" dest="(: ( [53591,53592]"/>
  <match src="parameter [92539,92546]" dest="parameter [30325,30332]"/>
  <match src="identifier: reason [9270,9276]" dest="identifier: reason [9369,9375]"/>
  <match src="(: ( [96261,96262]" dest="(: ( [34047,34048]"/>
  <match src=".: . [65490,65491]" dest=".: . [18758,18759]"/>
  <match src="(: ( [9260,9261]" dest="(: ( [9359,9360]"/>
  <match src="primitive_type [36948,36955]" dest="primitive_type [52620,52627]"/>
  <match src="uint256: uint256 [96156,96163]" dest="uint256: uint256 [33942,33949]"/>
  <match src="): ) [38224,38225]" dest="): ) [53896,53897]"/>
  <match src="&quot;: &quot; [21260,21261]" dest="&quot;: &quot; [56016,56017]"/>
  <match src="event_definition [52605,52674]" dest="event_definition [19599,19668]"/>
  <match src="expression_statement [36797,36842]" dest="expression_statement [52469,52514]"/>
  <match src="(: ( [72143,72144]" dest="(: ( [58251,58252]"/>
  <match src="primitive_type [88280,88287]" dest="primitive_type [28409,28416]"/>
  <match src="visibility [43705,43712]" dest="visibility [12959,12966]"/>
  <match src="return: return [35903,35909]" dest="return: return [51575,51581]"/>
  <match src="identifier: price1CumulativeLast [54462,54482]" dest="identifier: price1CumulativeLast [21456,21476]"/>
  <match src="call_argument [1946,1958]" dest="call_argument [2000,2012]"/>
  <match src="primitive_type [53061,53065]" dest="primitive_type [20055,20059]"/>
  <match src="type_name [102568,102575]" dest="type_name [40386,40393]"/>
  <match src="&gt;=: &gt;= [1011,1013]" dest="&gt;=: &gt;= [1065,1067]"/>
  <match src="internal: internal [10344,10352]" dest="internal: internal [10443,10451]"/>
  <match src="parameter [9880,9896]" dest="parameter [9979,9995]"/>
  <match src="identifier: msg [81917,81920]" dest="identifier: msg [71069,71072]"/>
  <match src="): ) [35807,35808]" dest="): ) [51479,51480]"/>
  <match src="call_expression [80683,80726]" dest="call_expression [70298,70341]"/>
  <match src="(: ( [31401,31402]" dest="(: ( [47073,47074]"/>
  <match src="): ) [106807,106808]" dest="): ) [68736,68737]"/>
  <match src="identifier: COUPON_EXPIRATION [46402,46419]" dest="identifier: COUPON_EXPIRATION [15656,15673]"/>
  <match src="primitive_type [14806,14813]" dest="primitive_type [24482,24489]"/>
  <match src="type_name [31885,31892]" dest="type_name [47557,47564]"/>
  <match src="identifier: candidate [97663,97672]" dest="identifier: candidate [35449,35458]"/>
  <match src="state_mutability [92306,92310]" dest="state_mutability [30092,30096]"/>
  <match src="uint256: uint256 [102424,102431]" dest="uint256: uint256 [40242,40249]"/>
  <match src="call_argument [37810,37827]" dest="call_argument [53482,53499]"/>
  <match src="parameter [105216,105233]" dest="parameter [43034,43051]"/>
  <match src="(: ( [106200,106201]" dest="(: ( [68129,68130]"/>
  <match src="function: function [65440,65448]" dest="function: function [66852,66860]"/>
  <match src="function_body [96790,96850]" dest="function_body [34576,34636]"/>
  <match src="&quot;: &quot; [106067,106068]" dest="&quot;: &quot; [67996,67997]"/>
  <match src="identifier: balance [101054,101061]" dest="identifier: balance [38872,38879]"/>
  <match src="identifier: stringify [30357,30366]" dest="identifier: stringify [46029,46038]"/>
  <match src="(: ( [37196,37197]" dest="(: ( [52868,52869]"/>
  <match src="primitive_type [53181,53185]" dest="primitive_type [20175,20179]"/>
  <match src=".: . [101000,101001]" dest=".: . [38818,38819]"/>
  <match src="address: address [92637,92644]" dest="address: address [30423,30430]"/>
  <match src="function_definition [9056,9288]" dest="function_definition [9155,9387]"/>
  <match src="primitive_type [53562,53566]" dest="primitive_type [20556,20560]"/>
  <match src="external: external [13065,13073]" dest="external: external [22741,22749]"/>
  <match src=".: . [94484,94485]" dest=".: . [32270,32271]"/>
  <match src="identifier: EpochStrategy [95282,95295]" dest="identifier: EpochStrategy [33068,33081]"/>
  <match src="): ) [97860,97861]" dest="): ) [35646,35647]"/>
  <match src="}: } [2612,2613]" dest="}: } [2666,2667]"/>
  <match src="{: { [9446,9447]" dest="{: { [9545,9546]"/>
  <match src="type_name [29312,29319]" dest="type_name [44984,44991]"/>
  <match src="{: { [8424,8425]" dest="{: { [8523,8524]"/>
  <match src="member_expression [49109,49121]" dest="member_expression [69958,69970]"/>
  <match src="function_definition [99597,99752]" dest="function_definition [37415,37570]"/>
  <match src="comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      * - Multiplication cannot overflow.      */ [2024,2261]" dest="comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      * - Multiplication cannot overflow.      */ [2078,2315]"/>
  <match src="address: address [90339,90346]" dest="address: address [75411,75418]"/>
  <match src="function_definition [10284,10421]" dest="function_definition [10383,10520]"/>
  <match src="identifier: _state [94641,94647]" dest="identifier: _state [32427,32433]"/>
  <match src="{: { [96165,96166]" dest="{: { [33951,33952]"/>
  <match src="): ) [3239,3240]" dest="): ) [3293,3294]"/>
  <match src="uint256: uint256 [80489,80496]" dest="uint256: uint256 [77162,77169]"/>
  <match src="array_access [94366,94390]" dest="array_access [32152,32176]"/>
  <match src="(: ( [6866,6867]" dest="(: ( [6965,6966]"/>
  <match src="type_name [94981,94988]" dest="type_name [32767,32774]"/>
  <match src="type_name [7277,7281]" dest="type_name [7376,7380]"/>
  <match src="call_expression [93678,93717]" dest="call_expression [31464,31503]"/>
  <match src="type_name [23708,23715]" dest="type_name [17240,17247]"/>
  <match src="): ) [50177,50178]" dest="): ) [25616,25617]"/>
  <match src="contract_body [98590,105313]" dest="contract_body [36408,43131]"/>
  <match src="visibility [102440,102448]" dest="visibility [40258,40266]"/>
  <match src="member_expression [99528,99542]" dest="member_expression [37346,37360]"/>
  <match src="identifier: b [3238,3239]" dest="identifier: b [3292,3293]"/>
  <match src="identifier: _state [99805,99811]" dest="identifier: _state [37623,37629]"/>
  <match src="indexed: indexed [53959,53966]" dest="indexed: indexed [20953,20960]"/>
  <match src="struct: struct [87744,87750]" dest="struct: struct [27873,27879]"/>
  <match src="(: ( [7467,7468]" dest="(: ( [7566,7567]"/>
  <match src="identifier: spender [53029,53036]" dest="identifier: spender [20023,20030]"/>
  <match src="return: return [96318,96324]" dest="return: return [34104,34110]"/>
  <match src="{: { [7130,7131]" dest="{: { [7229,7230]"/>
  <match src="string: string [28955,28961]" dest="string: string [44627,44633]"/>
  <match src="return_type_definition [95570,95587]" dest="return_type_definition [33356,33373]"/>
  <match src="primitive_type [80127,80134]" dest="primitive_type [69642,69649]"/>
  <match src="(: ( [80351,80352]" dest="(: ( [69734,69735]"/>
  <match src="return_statement [96937,96980]" dest="return_statement [34723,34766]"/>
  <match src="pure: pure [45051,45055]" dest="pure: pure [14305,14309]"/>
  <match src="primitive_type [36285,36290]" dest="primitive_type [51957,51962]"/>
  <match src="*: * [37565,37566]" dest="*: * [53237,53238]"/>
  <match src="primitive_type [104676,104683]" dest="primitive_type [42494,42501]"/>
  <match src="type_name [106024,106031]" dest="type_name [67953,67960]"/>
  <match src="parameter [7359,7370]" dest="parameter [7458,7469]"/>
  <match src="identifier: _state [92447,92453]" dest="identifier: _state [30233,30239]"/>
  <match src="identifier: account [94213,94220]" dest="identifier: account [31999,32006]"/>
  <match src="return: return [94571,94577]" dest="return: return [32357,32363]"/>
  <match src="(: ( [7856,7857]" dest="(: ( [7955,7956]"/>
  <match src="user_defined_type [66349,66361]" dest="user_defined_type [19043,19055]"/>
  <match src="variable_declaration [36560,36573]" dest="variable_declaration [52232,52245]"/>
  <match src=",: , [53914,53915]" dest=",: , [20908,20909]"/>
  <match src=".: . [100638,100639]" dest=".: . [38456,38457]"/>
  <match src="=: = [35773,35774]" dest="=: = [51445,51446]"/>
  <match src="type_name [26596,26603]" dest="type_name [60490,60497]"/>
  <match src="identifier: reason [102783,102789]" dest="identifier: reason [40601,40607]"/>
  <match src="identifier: require [1001,1008]" dest="identifier: require [1055,1062]"/>
  <match src=".: . [103962,103963]" dest=".: . [41780,41781]"/>
  <match src="return_type_definition [92890,92907]" dest="return_type_definition [30676,30693]"/>
  <match src="private: private [90847,90854]" dest="private: private [75919,75926]"/>
  <match src="pure: pure [56133,56137]" dest="pure: pure [17524,17528]"/>
  <match src="identifier: sender [81921,81927]" dest="identifier: sender [71073,71079]"/>
  <match src="identifier: candidate [104012,104021]" dest="identifier: candidate [41830,41839]"/>
  <match src="member_expression [104791,104826]" dest="member_expression [42609,42644]"/>
  <match src="call_argument [1938,1944]" dest="call_argument [1992,1998]"/>
  <match src="call_argument [90933,90994]" dest="call_argument [76005,76066]"/>
  <match src="event_paramater [15091,15104]" dest="event_paramater [24767,24780]"/>
  <match src="identifier: RPAREN [29714,29720]" dest="identifier: RPAREN [45386,45392]"/>
  <match src="type_cast_expression [100467,100477]" dest="type_cast_expression [38285,38295]"/>
  <match src="]: ] [100316,100317]" dest="]: ] [38134,38135]"/>
  <match src="identifier: c [2007,2008]" dest="identifier: c [2061,2062]"/>
  <match src="call_expression [33646,33665]" dest="call_expression [49318,49337]"/>
  <match src="identifier: placeLock [104871,104880]" dest="identifier: placeLock [42689,42698]"/>
  <match src="type_name [54684,54688]" dest="type_name [21678,21682]"/>
  <match src="address: address [106137,106144]" dest="address: address [68066,68073]"/>
  <match src="type_name [53006,53013]" dest="type_name [20000,20007]"/>
  <match src="type_name [31121,31128]" dest="type_name [46793,46800]"/>
  <match src="type_name [93832,93839]" dest="type_name [31618,31625]"/>
  <match src="): ) [52758,52759]" dest="): ) [19752,19753]"/>
  <match src="identifier: stringifyTruncated [32922,32940]" dest="identifier: stringifyTruncated [48594,48612]"/>
  <match src="&amp;: &amp; [36683,36684]" dest="&amp;: &amp; [52355,52356]"/>
  <match src="uint256: uint256 [28342,28349]" dest="uint256: uint256 [44014,44021]"/>
  <match src="assignment_expression [103837,103881]" dest="assignment_expression [41655,41699]"/>
  <match src=",: , [1015,1016]" dest=",: , [1069,1070]"/>
  <match src="type_name [7037,7044]" dest="type_name [7136,7143]"/>
  <match src="identifier: require [21197,21204]" dest="identifier: decrementTotalDebt [55960,55978]"/>
  <match src="member_expression [104791,104830]" dest="member_expression [42609,42648]"/>
  <match src="visibility [46352,46360]" dest="visibility [15606,15614]"/>
  <match src="primitive_type [14848,14855]" dest="primitive_type [24524,24531]"/>
  <match src="(: ( [32355,32356]" dest="(: ( [48027,48028]"/>
  <match src="event_paramater [98647,98667]" dest="event_paramater [36465,36485]"/>
  <match src="visibility [43073,43080]" dest="visibility [12327,12334]"/>
  <match src="bool: bool [53301,53305]" dest="bool: bool [20295,20299]"/>
  <match src="}: } [35154,35155]" dest="}: } [50826,50827]"/>
  <match src="return_type_definition [54675,54711]" dest="return_type_definition [21669,21705]"/>
  <match src="member_expression [82022,82032]" dest="member_expression [72124,72134]"/>
  <match src="function_body [92686,92713]" dest="function_body [30472,30499]"/>
  <match src="parameter [53609,53618]" dest="parameter [20603,20612]"/>
  <match src="struct: struct [87625,87631]" dest="struct: struct [27754,27760]"/>
  <match src="primitive_type [1837,1844]" dest="primitive_type [1891,1898]"/>
  <match src="(: ( [105057,105058]" dest="(: ( [42875,42876]"/>
  <match src="}: } [102524,102525]" dest="}: } [40342,40343]"/>
  <match src="binary_expression [1009,1015]" dest="binary_expression [1063,1069]"/>
  <match src="returns: returns [95326,95333]" dest="returns: returns [33112,33119]"/>
  <match src="): ) [95554,95555]" dest="): ) [33340,33341]"/>
  <match src="state_variable_declaration [28676,28713]" dest="state_variable_declaration [44348,44385]"/>
  <match src=".: . [101029,101030]" dest=".: . [38847,38848]"/>
  <match src="identifier: b [11011,11012]" dest="identifier: b [11110,11111]"/>
  <match src="binary_expression [97504,97542]" dest="binary_expression [35290,35328]"/>
  <match src="primitive_type [3892,3899]" dest="primitive_type [3946,3953]"/>
  <match src="if: if [94035,94037]" dest="if: if [31821,31823]"/>
  <match src="binary_expression [96453,96496]" dest="binary_expression [34239,34282]"/>
  <match src="primitive_type [83528,83535]" dest="primitive_type [61449,61456]"/>
  <match src="address: address [35959,35966]" dest="address: address [51631,51638]"/>
  <match src="identifier: unbond [82081,82087]" dest="identifier: unbond [71218,71224]"/>
  <match src="(: ( [80623,80624]" dest="(: ( [70238,70239]"/>
  <match src="returns: returns [8374,8381]" dest="returns: returns [8473,8480]"/>
  <match src="identifier: COMMA [33770,33775]" dest="identifier: COMMA [49442,49447]"/>
  <match src="): ) [45464,45465]" dest="): ) [14718,14719]"/>
  <match src="type_name [45892,45899]" dest="type_name [15146,15153]"/>
  <match src="view: view [92885,92889]" dest="view: view [30671,30675]"/>
  <match src="): ) [94306,94307]" dest="): ) [32092,32093]"/>
  <match src="identifier: abi [90504,90507]" dest="identifier: abi [75576,75579]"/>
  <match src="primitive_type [13392,13399]" dest="primitive_type [23068,23075]"/>
  <match src="type_name [8301,8305]" dest="type_name [8400,8404]"/>
  <match src=",: , [104293,104294]" dest=",: , [42111,42112]"/>
  <match src="(: ( [93192,93193]" dest="(: ( [30978,30979]"/>
  <match src="identifier: compareTo [9960,9969]" dest="identifier: compareTo [10059,10068]"/>
  <match src="number_literal: 0 [97541,97542]" dest="number_literal: 0 [35327,35328]"/>
  <match src="identifier: _state [103994,104000]" dest="identifier: _state [41812,41818]"/>
  <match src="]: ] [96835,96836]" dest="]: ] [34621,34622]"/>
  <match src="return: return [8627,8633]" dest="return: return [8726,8732]"/>
  <match src="bool: bool [13083,13087]" dest="bool: bool [22759,22763]"/>
  <match src="primitive_type [76194,76201]" dest="primitive_type [80637,80644]"/>
  <match src="call_argument [7173,7174]" dest="call_argument [7272,7273]"/>
  <match src="identifier: sender [80910,80916]" dest="identifier: sender [70979,70985]"/>
  <match src="{: { [8401,8402]" dest="{: { [8500,8501]"/>
  <match src="visibility [102983,102991]" dest="visibility [40801,40809]"/>
  <match src="constant: constant [43777,43785]" dest="constant: constant [13031,13039]"/>
  <match src="identifier: div [3215,3218]" dest="identifier: div [3269,3272]"/>
  <match src="): ) [46945,46946]" dest="): ) [16199,16200]"/>
  <match src="member_expression [93572,93586]" dest="member_expression [31358,31372]"/>
  <match src="bytes32: bytes32 [33211,33218]" dest="bytes32: bytes32 [48883,48890]"/>
  <match src="block_statement [35558,35891]" dest="block_statement [51230,51563]"/>
  <match src="(: ( [50145,50146]" dest="(: ( [25584,25585]"/>
  <match src="parameter [13407,13422]" dest="parameter [23083,23098]"/>
  <match src=".: . [102466,102467]" dest=".: . [40284,40285]"/>
  <match src="primitive_type [53648,53655]" dest="primitive_type [20642,20649]"/>
  <match src="identifier: bstr [35389,35393]" dest="identifier: bstr [51061,51065]"/>
  <match src="uint256: uint256 [2325,2332]" dest="uint256: uint256 [2379,2386]"/>
  <match src="(: ( [87341,87342]" dest="(: ( [27470,27471]"/>
  <match src="{: { [99517,99518]" dest="{: { [37335,37336]"/>
  <match src="call_argument [106249,106253]" dest="call_argument [68178,68182]"/>
  <match src="type_name [53139,53143]" dest="type_name [20133,20137]"/>
  <match src="external: external [53620,53628]" dest="external: external [20614,20622]"/>
  <match src="expression_statement [81176,81213]" dest="expression_statement [70485,70522]"/>
  <match src="return_type_definition [92215,92238]" dest="return_type_definition [30001,30024]"/>
  <match src="member_expression [104353,104389]" dest="member_expression [42171,42207]"/>
  <match src="parameter [92382,92397]" dest="parameter [30168,30183]"/>
  <match src="(: ( [9404,9405]" dest="(: ( [9503,9504]"/>
  <match src="call_expression [51454,51485]" dest="call_expression [63942,63978]"/>
  <match src="): ) [26906,26907]" dest="): ) [78462,78463]"/>
  <match src="&gt;: &gt; [105092,105093]" dest="&gt;: &gt; [42910,42911]"/>
  <match src="uint256: uint256 [96262,96269]" dest="uint256: uint256 [34048,34055]"/>
  <match src="identifier: D256 [6932,6936]" dest="identifier: D256 [7031,7035]"/>
  <match src="pure: pure [47029,47033]" dest="pure: pure [16283,16287]"/>
  <match src="primitive_type [104108,104115]" dest="primitive_type [41926,41933]"/>
  <match src="memory: memory [7483,7489]" dest="memory: memory [7582,7588]"/>
  <match src="contract_body [52517,54938]" dest="contract_body [19511,21932]"/>
  <match src="call_argument [82034,82048]" dest="call_argument [72136,72150]"/>
  <match src="call_argument [101351,101357]" dest="call_argument [39169,39175]"/>
  <match src="visibility [54666,54674]" dest="visibility [21660,21668]"/>
  <match src="type_name [6413,6420]" dest="type_name [6512,6519]"/>
  <match src="address: address [26596,26603]" dest="address: address [60490,60497]"/>
  <match src="type_name [37930,37937]" dest="type_name [53602,53609]"/>
  <match src="member_expression [11086,11093]" dest="member_expression [11185,11192]"/>
  <match src="primitive_type [23874,23881]" dest="primitive_type [17494,17501]"/>
  <match src="identifier: lockedUntil [105147,105158]" dest="identifier: lockedUntil [42965,42976]"/>
  <match src="uint256: uint256 [8328,8335]" dest="uint256: uint256 [8427,8434]"/>
  <match src="call_expression [30941,30960]" dest="call_expression [46613,46632]"/>
  <match src="string_literal [20581,20618]" dest="string_literal [63693,63738]"/>
  <match src="type_name [28819,28826]" dest="type_name [44491,44498]"/>
  <match src="address: address [53545,53552]" dest="address: address [20539,20546]"/>
  <match src="): ) [38114,38115]" dest="): ) [53786,53787]"/>
  <match src="member_expression [90504,90527]" dest="member_expression [75576,75599]"/>
  <match src="visibility [42790,42797]" dest="visibility [12044,12051]"/>
  <match src="identifier: ORACLE_POOL_RATIO [44480,44497]" dest="identifier: ORACLE_POOL_RATIO [13734,13751]"/>
  <match src="state_mutability [29966,29970]" dest="state_mutability [45638,45642]"/>
  <match src="call_argument [22749,22750]" dest="call_argument [63270,63271]"/>
  <match src="}: } [38232,38233]" dest="}: } [53904,53905]"/>
  <match src="call_argument [105033,105042]" dest="call_argument [42851,42860]"/>
  <match src="uint256: uint256 [104108,104115]" dest="uint256: uint256 [41926,41933]"/>
  <match src="member_expression [92822,92844]" dest="member_expression [30608,30630]"/>
  <match src="(: ( [22748,22749]" dest="(: ( [63269,63270]"/>
  <match src="identifier: i [36493,36494]" dest="identifier: i [52165,52166]"/>
  <match src="): ) [94554,94555]" dest="): ) [32340,32341]"/>
  <match src="parameter [30537,30549]" dest="parameter [46209,46221]"/>
  <match src=".: . [104620,104621]" dest=".: . [42438,42439]"/>
  <match src="function_definition [46321,46427]" dest="function_definition [15575,15681]"/>
  <match src="bytes32: bytes32 [32604,32611]" dest="bytes32: bytes32 [48276,48283]"/>
  <match src="): ) [99892,99893]" dest="): ) [37710,37711]"/>
  <match src="): ) [54207,54208]" dest="): ) [21201,21202]"/>
  <match src="): ) [92427,92428]" dest="): ) [30213,30214]"/>
  <match src="call_expression [95362,95412]" dest="call_expression [33148,33198]"/>
  <match src="(: ( [29677,29678]" dest="(: ( [45349,45350]"/>
  <match src="return_type_definition [2316,2333]" dest="return_type_definition [2370,2387]"/>
  <match src="primitive_type [100029,100036]" dest="primitive_type [37847,37854]"/>
  <match src="member_expression [95362,95430]" dest="member_expression [33148,33216]"/>
  <match src="call_expression [72999,73012]" dest="call_expression [58282,58295]"/>
  <match src="binary_expression [11158,11175]" dest="binary_expression [11257,11274]"/>
  <match src="}: } [6844,6845]" dest="}: } [6943,6944]"/>
  <match src="primitive_type [80278,80285]" dest="primitive_type [69834,69841]"/>
  <match src="visibility [24061,24068]" dest="visibility [59240,59247]"/>
  <match src="): ) [105233,105234]" dest="): ) [43051,43052]"/>
  <match src="primitive_type [71776,71783]" dest="primitive_type [65781,65788]"/>
  <match src="identifier: approve [104382,104389]" dest="identifier: approve [42200,42207]"/>
  <match src="identifier: add [97378,97381]" dest="identifier: add [35164,35167]"/>
  <match src=",: , [54747,54748]" dest=",: , [21741,21742]"/>
  <match src="identifier: period [103875,103881]" dest="identifier: period [41693,41699]"/>
  <match src="(: ( [83902,83903]" dest="(: ( [79787,79788]"/>
  <match src="identifier: sender [20404,20410]" dest="identifier: sender [63493,63499]"/>
  <match src="identifier: sub [104429,104432]" dest="identifier: sub [42247,42250]"/>
  <match src="call_argument [30161,30166]" dest="call_argument [45833,45838]"/>
  <match src="identifier: sub [99429,99432]" dest="identifier: sub [37247,37250]"/>
  <match src="uint256: uint256 [65782,65789]" dest="uint256: uint256 [66326,66333]"/>
  <match src="if_statement [30649,31062]" dest="if_statement [46321,46734]"/>
  <match src="identifier: account [94524,94531]" dest="identifier: account [32310,32317]"/>
  <match src="identifier: owner [102576,102581]" dest="identifier: owner [40394,40399]"/>
  <match src="): ) [10608,10609]" dest="): ) [10707,10708]"/>
  <match src="identifier: epoch [96453,96458]" dest="identifier: epoch [34239,34244]"/>
  <match src="=: = [102707,102708]" dest="=: = [40525,40526]"/>
  <match src="parameter [93001,93008]" dest="parameter [30787,30794]"/>
  <match src="identifier: b [8066,8067]" dest="identifier: b [8165,8166]"/>
  <match src="type_name [32627,32634]" dest="type_name [48299,48306]"/>
  <match src="view: view [13433,13437]" dest="view: view [23109,23113]"/>
  <match src="(: ( [8232,8233]" dest="(: ( [8331,8332]"/>
  <match src="identifier: value [8830,8835]" dest="identifier: value [8929,8934]"/>
  <match src="uint256: uint256 [96917,96924]" dest="uint256: uint256 [34703,34710]"/>
  <match src="call_argument [33528,33533]" dest="call_argument [49200,49205]"/>
  <match src="bool: bool [9798,9802]" dest="bool: bool [9897,9901]"/>
  <match src="identifier: newUniv2 [80515,80523]" dest="identifier: period [77193,77199]"/>
  <match src="visibility [54840,54848]" dest="visibility [21834,21842]"/>
  <match src="returns: returns [54675,54682]" dest="returns: returns [21669,21676]"/>
  <match src="type_name [36178,36183]" dest="type_name [51850,51855]"/>
  <match src="member_expression [101589,101617]" dest="member_expression [39407,39435]"/>
  <match src="if_statement [35102,35155]" dest="if_statement [50774,50827]"/>
  <match src="): ) [3329,3330]" dest="): ) [3383,3384]"/>
  <match src="&quot;: &quot; [23265,23266]" dest="&quot;: &quot; [70040,70041]"/>
  <match src="parameter [10017,10033]" dest="parameter [10116,10132]"/>
  <match src="if: if [29376,29378]" dest="if: if [45048,45050]"/>
  <match src="primitive_type [34088,34093]" dest="primitive_type [49760,49765]"/>
  <match src=".: . [7419,7420]" dest=".: . [7518,7519]"/>
  <match src="(: ( [8000,8001]" dest="(: ( [8099,8100]"/>
  <match src="type_alias [91876,91883]" dest="type_alias [29662,29669]"/>
  <match src="function: function [103289,103297]" dest="function: function [41107,41115]"/>
  <match src="uint256: uint256 [908,915]" dest="uint256: uint256 [962,969]"/>
  <match src="type_name [46786,46798]" dest="type_name [16040,16052]"/>
  <match src="string: string [92224,92230]" dest="string: string [30010,30016]"/>
  <match src="function_definition [82072,82948]" dest="function_definition [71209,71693]"/>
  <match src="identifier: a [1943,1944]" dest="identifier: a [1997,1998]"/>
  <match src="address: address [80102,80109]" dest="address: address [69617,69624]"/>
  <match src="struct_member [88491,88507]" dest="struct_member [28620,28636]"/>
  <match src="identifier: token1 [54224,54230]" dest="identifier: token1 [21218,21224]"/>
  <match src="{: { [90855,90856]" dest="{: { [75927,75928]"/>
  <match src="&quot;: &quot; [68237,68238]" dest="&quot;: &quot; [79575,79576]"/>
  <match src=",: , [1441,1442]" dest=",: , [1495,1496]"/>
  <match src="bytes2: bytes2 [28589,28595]" dest="bytes2: bytes2 [44261,44267]"/>
  <match src="(: ( [93431,93432]" dest="(: ( [31217,31218]"/>
  <match src="comment: // 40% [44504,44510]" dest="comment: // 40% [13758,13764]"/>
  <match src="parameter [53169,53179]" dest="parameter [20163,20173]"/>
  <match src="[: [ [94381,94382]" dest="[: [ [32167,32168]"/>
  <match src="(: ( [36016,36017]" dest="(: ( [51688,51689]"/>
  <match src="=: = [36574,36575]" dest="=: = [52246,52247]"/>
  <match src="(: ( [106477,106478]" dest="(: ( [68406,68407]"/>
  <match src="parameter [31121,31133]" dest="parameter [46793,46805]"/>
  <match src="identifier: D256 [9620,9624]" dest="identifier: D256 [9719,9723]"/>
  <match src="=: = [37467,37468]" dest="=: = [53139,53140]"/>
  <match src="internal: internal [33319,33327]" dest="internal: internal [48991,48999]"/>
  <match src="event_paramater [80489,80505]" dest="event_paramater [77162,77183]"/>
  <match src="function: function [31766,31774]" dest="function: function [47438,47446]"/>
  <match src="function_body [104536,104640]" dest="function_body [42354,42458]"/>
  <match src="identifier: candidates [104399,104409]" dest="identifier: candidates [42217,42227]"/>
  <match src="primitive_type [64381,64388]" dest="primitive_type [77351,77358]"/>
  <match src=",: , [96588,96589]" dest=",: , [34374,34375]"/>
  <match src="primitive_type [53874,53878]" dest="primitive_type [20868,20872]"/>
  <match src="address: address [104898,104905]" dest="address: address [42716,42723]"/>
  <match src="identifier: msg [81462,81465]" dest="identifier: msg [70764,70767]"/>
  <match src="expression_statement [26824,26908]" dest="expression_statement [78395,78464]"/>
  <match src="type_name [98616,98623]" dest="type_name [36434,36441]"/>
  <match src="function: function [50085,50093]" dest="function: function [25524,25532]"/>
  <match src="primitive_type [53092,53099]" dest="primitive_type [20086,20093]"/>
  <match src=",: , [92635,92636]" dest=",: , [30421,30422]"/>
  <match src="user_defined_type [46786,46798]" dest="user_defined_type [16040,16052]"/>
  <match src="identifier: SafeMath [91843,91851]" dest="identifier: SafeMath [29629,29637]"/>
  <match src="type_name [10035,10039]" dest="type_name [10134,10138]"/>
  <match src="string [90933,90994]" dest="string [76005,76066]"/>
  <match src="variable_declaration [73173,73209]" dest="variable_declaration [65971,65986]"/>
  <match src="identifier: balance [99557,99564]" dest="identifier: balance [37375,37382]"/>
  <match src="identifier: sender [80589,80595]" dest="identifier: sender [77472,77478]"/>
  <match src="public: public [94456,94462]" dest="public: public [32242,32248]"/>
  <match src="address: address [88061,88068]" dest="address: address [28190,28197]"/>
  <match src="string_literal [49066,49085]" dest="string_literal [55425,55469]"/>
  <match src="return_type_definition [10851,10868]" dest="return_type_definition [10950,10967]"/>
  <match src="string [106268,106289]" dest="string [68197,68218]"/>
  <match src=",: , [5439,5440]" dest=",: , [5493,5494]"/>
  <match src="call_argument [84736,84745]" dest="call_argument [79153,79168]"/>
  <match src="{: { [106630,106631]" dest="{: { [68559,68560]"/>
  <match src="identifier: balance [88499,88506]" dest="identifier: balance [28628,28635]"/>
  <match src="call_argument [35780,35808]" dest="call_argument [51452,51480]"/>
  <match src="uint256: uint256 [44706,44713]" dest="uint256: uint256 [13960,13967]"/>
  <match src="(: ( [68162,68163]" dest="(: ( [79404,79405]"/>
  <match src="identifier: encodePacked [34192,34204]" dest="identifier: encodePacked [49864,49876]"/>
  <match src="(: ( [38195,38196]" dest="(: ( [53867,53868]"/>
  <match src="assignment_expression [36655,36699]" dest="assignment_expression [52327,52371]"/>
  <match src="return_statement [92440,92480]" dest="return_statement [30226,30266]"/>
  <match src="): ) [33895,33896]" dest="): ) [49567,49568]"/>
  <match src="member_expression [101527,101570]" dest="member_expression [39345,39388]"/>
  <match src="identifier: current [102899,102906]" dest="identifier: current [40717,40724]"/>
  <match src="return_type_definition [93313,93330]" dest="return_type_definition [31099,31116]"/>
  <match src="binary_expression [985,990]" dest="binary_expression [1039,1044]"/>
  <match src="(: ( [46760,46761]" dest="(: ( [16014,16015]"/>
  <match src="(: ( [83803,83804]" dest="(: ( [62534,62535]"/>
  <match src="call_expression [83778,83848]" dest="call_expression [62519,62560]"/>
  <match src="type_name [34030,34037]" dest="type_name [49702,49709]"/>
  <match src=".: . [88467,88468]" dest=".: . [28596,28597]"/>
  <match src=",: , [102179,102180]" dest=",: , [39997,39998]"/>
  <match src="uint256: uint256 [82353,82360]" dest="uint256: uint256 [82558,82565]"/>
  <match src="identifier: Decimal [65649,65656]" dest="identifier: Decimal [67147,67154]"/>
  <match src="primitive_type [31144,31151]" dest="primitive_type [46816,46823]"/>
  <match src="return: return [36890,36896]" dest="return: return [52562,52568]"/>
  <match src="returns: returns [4719,4726]" dest="returns: returns [4773,4780]"/>
  <match src="return_statement [96318,96353]" dest="return_statement [34104,34139]"/>
  <match src="(: ( [10221,10222]" dest="(: ( [10320,10321]"/>
  <match src="parameter [101822,101835]" dest="parameter [39640,39653]"/>
  <match src="returns: returns [3945,3952]" dest="returns: returns [3999,4006]"/>
  <match src="uint8: uint8 [38090,38095]" dest="uint8: uint8 [53762,53767]"/>
  <match src="type_name [51838,51845]" dest="type_name [60717,60724]"/>
  <match src="primitive_type [13447,13454]" dest="primitive_type [23123,23130]"/>
  <match src="identifier: epoch [102021,102026]" dest="identifier: epoch [39839,39844]"/>
  <match src=",: , [4692,4693]" dest=",: , [4746,4747]"/>
  <match src="internal: internal [100915,100923]" dest="internal: internal [38733,38741]"/>
  <match src="call_expression [67066,67128]" dest="call_expression [66453,66478]"/>
  <match src="): ) [11104,11105]" dest="): ) [11203,11204]"/>
  <match src="primitive_type [29896,29903]" dest="primitive_type [45568,45575]"/>
  <match src="(: ( [93544,93545]" dest="(: ( [31330,31331]"/>
  <match src="bytes32: bytes32 [89822,89829]" dest="bytes32: bytes32 [74894,74901]"/>
  <match src="): ) [73278,73279]" dest="): ) [80827,80828]"/>
  <match src="uint256: uint256 [104937,104944]" dest="uint256: uint256 [42755,42762]"/>
  <match src="number_literal: 0 [20493,20494]" dest="number_literal: 0 [63597,63598]"/>
  <match src=".: . [32059,32060]" dest=".: . [47731,47732]"/>
  <match src="user_defined_type [10560,10564]" dest="user_defined_type [10659,10663]"/>
  <match src="assignment_expression [99528,99581]" dest="assignment_expression [37346,37399]"/>
  <match src="parameter [95579,95586]" dest="parameter [33365,33372]"/>
  <match src="type_name [13392,13399]" dest="type_name [23068,23075]"/>
  <match src="type_name [76763,76770]" dest="type_name [58443,58450]"/>
  <match src="identifier: b [9358,9359]" dest="identifier: b [9457,9458]"/>
  <match src="if_statement [65521,65682]" dest="if_statement [67113,67172]"/>
  <match src="array_access [104144,104172]" dest="array_access [41962,41990]"/>
  <match src="member_expression [101325,101350]" dest="member_expression [39143,39168]"/>
  <match src="function_body [93660,93725]" dest="function_body [31446,31511]"/>
  <match src="parameter [104881,104896]" dest="parameter [42699,42714]"/>
  <match src="address: address [14539,14546]" dest="address: address [24215,24222]"/>
  <match src="block_statement [28915,29205]" dest="block_statement [44587,44877]"/>
  <match src="call_expression [1436,1479]" dest="call_expression [1490,1533]"/>
  <match src="identifier: block [58695,58700]" dest="identifier: block [82751,82756]"/>
  <match src="type_name [46132,46139]" dest="type_name [15386,15393]"/>
  <match src=".: . [101976,101977]" dest=".: . [39794,39795]"/>
  <match src="visibility [16475,16482]" dest="visibility [65882,65889]"/>
  <match src="=: = [105022,105023]" dest="=: = [42840,42841]"/>
  <match src="address: address [96590,96597]" dest="address: address [34376,34383]"/>
  <match src="comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP. Does not include  * the optional functions; to access them see {ERC20Detailed}.  */ [12319,12472]" dest="comment: // File: contracts/external/Decimal.sol [5546,5585]"/>
  <match src="identifier: balance [103520,103527]" dest="identifier: balance [41338,41345]"/>
  <match src="primitive_type [64278,64285]" dest="primitive_type [77110,77117]"/>
  <match src="return_statement [93342,93369]" dest="return_statement [31128,31155]"/>
  <match src="function: function [37906,37914]" dest="function: function [53578,53586]"/>
  <match src="{: { [35558,35559]" dest="{: { [51230,51231]"/>
  <match src="type_name [52587,52591]" dest="type_name [19581,19585]"/>
  <match src=".: . [104797,104798]" dest=".: . [42615,42616]"/>
  <match src="contract_body [79785,84932]" dest="contract_body [69511,72178]"/>
  <match src="(: ( [54118,54119]" dest="(: ( [21112,21113]"/>
  <match src="primitive_type [54508,54512]" dest="primitive_type [21502,21506]"/>
  <match src="identifier: value [81081,81086]" dest="identifier: value [70654,70659]"/>
  <match src="!=: != [22738,22740]" dest="!=: != [63259,63261]"/>
  <match src="): ) [81211,81212]" dest="): ) [70520,70521]"/>
  <match src="type_name [77872,77879]" dest="type_name [60694,60701]"/>
  <match src="number_literal: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc [91956,92022]" dest="number_literal: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc [29742,29808]"/>
  <match src="identifier: lastReserve [67604,67615]" dest="identifier: poolAmount [58613,58623]"/>
  <match src="number_literal: 0 [103646,103647]" dest="number_literal: 0 [41464,41465]"/>
  <match src="identifier: _state [104959,104965]" dest="identifier: _state [42777,42783]"/>
  <match src="parameter [31858,31874]" dest="parameter [47530,47546]"/>
  <match src="member_expression [92566,92580]" dest="member_expression [30352,30366]"/>
  <match src="call_expression [2653,2709]" dest="call_expression [2707,2763]"/>
  <match src="uint256: uint256 [43385,43392]" dest="uint256: uint256 [12639,12646]"/>
  <match src="function_definition [54640,54712]" dest="function_definition [21634,21706]"/>
  <match src="identifier: b [4702,4703]" dest="identifier: b [4756,4757]"/>
  <match src="): ) [9580,9581]" dest="): ) [9679,9680]"/>
  <match src="identifier: div [94147,94150]" dest="identifier: div [31933,31936]"/>
  <match src="primitive_type [82156,82163]" dest="primitive_type [70788,70795]"/>
  <match src="type_name [3892,3899]" dest="type_name [3946,3953]"/>
  <match src="&quot;: &quot; [21228,21229]" dest="&quot;: &quot; [55987,55988]"/>
  <match src="call_argument [82247,82266]" dest="call_argument [80204,80307]"/>
  <match src="parameter [96590,96607]" dest="parameter [34376,34393]"/>
  <match src="}: } [80804,80805]" dest="}: } [70392,70393]"/>
  <match src="type_name [39648,39655]" dest="type_name [17182,17189]"/>
  <match src="identifier: epoch [101560,101565]" dest="identifier: epoch [39378,39383]"/>
  <match src="array_access [100614,100638]" dest="array_access [38432,38456]"/>
  <match src="type_name [92420,92427]" dest="type_name [30206,30213]"/>
  <match src="primitive_type [71999,72006]" dest="primitive_type [61950,61957]"/>
  <match src="type_name [6351,6358]" dest="type_name [6450,6457]"/>
  <match src="primitive_type [28388,28395]" dest="primitive_type [44060,44067]"/>
  <match src="internal: internal [46232,46240]" dest="internal: internal [15486,15494]"/>
  <match src="type_name [14574,14581]" dest="type_name [24250,24257]"/>
  <match src="parameter [104695,104709]" dest="parameter [42513,42527]"/>
  <match src="uint: uint [53181,53185]" dest="uint: uint [20175,20179]"/>
  <match src="primitive_type [100257,100264]" dest="primitive_type [38075,38082]"/>
  <match src="identifier: votes [104023,104028]" dest="identifier: votes [41841,41846]"/>
  <match src="{: { [94267,94268]" dest="{: { [32053,32054]"/>
  <match src="{: { [46264,46265]" dest="{: { [15518,15519]"/>
  <match src="function_definition [94739,94901]" dest="function_definition [32525,32687]"/>
  <match src="member_expression [9014,9028]" dest="member_expression [9113,9127]"/>
  <match src="): ) [66475,66476]" dest="): ) [62428,62429]"/>
  <match src="{: { [21186,21187]" dest="{: { [55949,55950]"/>
  <match src="}: } [30477,30478]" dest="}: } [46149,46150]"/>
  <match src="primitive_type [11057,11064]" dest="primitive_type [11156,11163]"/>
  <match src="identifier: value [80400,80405]" dest="identifier: value [69783,69788]"/>
  <match src="function_body [44610,44640]" dest="function_body [13864,13894]"/>
  <match src="}: } [46559,46560]" dest="}: } [15813,15814]"/>
  <match src="call_struct_argument [44959,44979]" dest="call_struct_argument [14213,14233]"/>
  <match src="(: ( [97288,97289]" dest="(: ( [35074,35075]"/>
  <match src="}: } [46066,46067]" dest="}: } [15320,15321]"/>
  <match src="]: ] [103622,103623]" dest="]: ] [41440,41441]"/>
  <match src=".: . [106220,106221]" dest=".: . [68149,68150]"/>
  <match src="primitive_type [16390,16397]" dest="primitive_type [60234,60241]"/>
  <match src="call_expression [82661,82741]" dest="call_expression [78908,78940]"/>
  <match src="binary_expression [38051,38061]" dest="binary_expression [53723,53733]"/>
  <match src="assignment_expression [101485,101578]" dest="assignment_expression [39303,39396]"/>
  <match src="): ) [66427,66428]" dest="): ) [65385,65386]"/>
  <match src="(: ( [7832,7833]" dest="(: ( [7931,7932]"/>
  <match src="member_expression [12059,12069]" dest="member_expression [63918,63928]"/>
  <match src="parameter [81118,81131]" dest="parameter [71225,71238]"/>
  <match src="{: { [30638,30639]" dest="{: { [46310,46311]"/>
  <match src="primitive_type [54317,54324]" dest="primitive_type [21311,21318]"/>
  <match src="array_access [94508,94532]" dest="array_access [32294,32318]"/>
  <match src="type_cast_expression [33405,33896]" dest="type_cast_expression [49077,49568]"/>
  <match src="[: [ [105272,105273]" dest="[: [ [43090,43091]"/>
  <match src="{: { [2578,2579]" dest="{: { [2632,2633]"/>
  <match src="address: address [78668,78675]" dest="address: address [77400,77407]"/>
  <match src="comment: /**  * @dev Extension of {ERC20} that allows token holders to destroy both their own  * tokens and those that they have an allowance for, in a way that can be  * recognized off-chain (via event analysis).  */ [23324,23536]" dest="comment: // File: contracts/dao/Curve.sol [16347,16379]"/>
  <match src="memory: memory [102623,102629]" dest="memory: memory [40441,40447]"/>
  <match src="external: external [54926,54934]" dest="external: external [21920,21928]"/>
  <match src="{: { [6698,6699]" dest="{: { [6797,6798]"/>
  <match src="assembly: assembly [91055,91063]" dest="assembly: assembly [76127,76135]"/>
  <match src="return: return [3284,3290]" dest="return: return [3338,3344]"/>
  <match src="(: ( [54174,54175]" dest="(: ( [21168,21169]"/>
  <match src="parameter [28842,28856]" dest="parameter [44514,44528]"/>
  <match src="primitive_type [88657,88664]" dest="primitive_type [28786,28793]"/>
  <match src="identifier: State [88678,88683]" dest="identifier: State [28807,28812]"/>
  <match src="): ) [82585,82586]" dest="): ) [71939,71940]"/>
  <match src="identifier: Constants [42748,42757]" dest="identifier: Constants [12002,12011]"/>
  <match src="address: address [22741,22748]" dest="address: address [63262,63269]"/>
  <match src="(: ( [34087,34088]" dest="(: ( [49759,49760]"/>
  <match src=".: . [96331,96332]" dest=".: . [34117,34118]"/>
  <match src="identifier: owner [53014,53019]" dest="identifier: owner [20008,20013]"/>
  <match src="string [25855,25888]" dest="string [77757,77786]"/>
  <match src="identifier: oracle [107959,107965]" dest="identifier: oracle [66968,66974]"/>
  <match src="comment: /**  * @title Require  * @author dYdX  *  * Stringifies parameters to pretty-print revert messages. Costs more gas than regular require()  */ [28123,28269]" dest="comment: // File: contracts/token/IDollar.sol [24789,24825]"/>
  <match src="}: } [33929,33930]" dest="}: } [49601,49602]"/>
  <match src="state_mutability [53417,53421]" dest="state_mutability [20411,20415]"/>
  <match src="primitive_type [7037,7044]" dest="primitive_type [7136,7143]"/>
  <match src="): ) [94491,94492]" dest="): ) [32277,32278]"/>
  <match src="return_statement [35903,35915]" dest="return_statement [51575,51587]"/>
  <match src="): ) [29686,29687]" dest="): ) [45358,45359]"/>
  <match src="yul_identifier [97842,97846]" dest="yul_identifier [35628,35632]"/>
  <match src="comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      * - Addition cannot overflow.      */ [664,889]" dest="comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      * - Addition cannot overflow.      */ [718,943]"/>
  <match src="(: ( [94817,94818]" dest="(: ( [32603,32604]"/>
  <match src="external: external [52952,52960]" dest="external: external [19946,19954]"/>
  <match src="parameter [93651,93658]" dest="parameter [31437,31444]"/>
  <match src="call_argument [46537,46560]" dest="call_argument [15791,15814]"/>
  <match src="identifier: self [10323,10327]" dest="identifier: self [10422,10426]"/>
  <match src="identifier: redeemable [99929,99939]" dest="identifier: redeemable [37747,37757]"/>
  <match src="string [56951,56988]" dest="string [77577,77594]"/>
  <match src="primitive_type [80407,80414]" dest="primitive_type [77291,77298]"/>
  <match src="): ) [81041,81042]" dest="): ) [55885,55886]"/>
  <match src="call_argument [33646,33665]" dest="call_argument [49318,49337]"/>
  <match src="=: = [91021,91022]" dest="=: = [76093,76094]"/>
  <match src="(: ( [52782,52783]" dest="(: ( [19776,19777]"/>
  <match src="primitive_type [53816,53823]" dest="primitive_type [20810,20817]"/>
  <match src="emit_statement [81055,81088]" dest="emit_statement [70628,70661]"/>
  <match src="public: public [92518,92524]" dest="public: public [30304,30310]"/>
  <match src="identifier: input [35508,35513]" dest="identifier: input [51180,51185]"/>
  <match src="contract_body [87175,87494]" dest="contract_body [27304,27623]"/>
  <match src="identifier: Transfer [100795,100803]" dest="identifier: Transfer [38613,38621]"/>
  <match src="call_argument [36067,36072]" dest="call_argument [51739,51744]"/>
  <match src="identifier: BOOTSTRAPPING_PRICE [42970,42989]" dest="identifier: BOOTSTRAPPING_PRICE [12224,12243]"/>
  <match src="member_expression [101632,101660]" dest="member_expression [39450,39478]"/>
  <match src=".: . [93883,93884]" dest=".: . [31669,31670]"/>
  <match src="member_expression [96462,96494]" dest="member_expression [34248,34280]"/>
  <match src="identifier: errorMessage [5368,5380]" dest="identifier: errorMessage [5422,5434]"/>
  <match src="private: private [44092,44099]" dest="private: private [13346,13353]"/>
  <match src=",: , [31901,31902]" dest=",: , [47573,47574]"/>
  <match src="return: return [93021,93027]" dest="return: return [30807,30813]"/>
  <match src="function_definition [97271,97411]" dest="function_definition [35057,35197]"/>
  <match src="return: return [95721,95727]" dest="return: return [33507,33513]"/>
  <match src="(: ( [10964,10965]" dest="(: ( [11063,11064]"/>
  <match src="(: ( [37277,37278]" dest="(: ( [52949,52950]"/>
  <match src="identifier: Decimal [46786,46793]" dest="identifier: Decimal [16040,16047]"/>
  <match src="call_argument [29078,29083]" dest="call_argument [44750,44755]"/>
  <match src="primitive_type [53755,53759]" dest="primitive_type [20749,20753]"/>
  <match src="function_definition [95530,95629]" dest="function_definition [33316,33415]"/>
  <match src="type_name [54778,54783]" dest="type_name [21772,21777]"/>
  <match src="assignment_expression [104353,104448]" dest="assignment_expression [42171,42266]"/>
  <match src="(: ( [82909,82910]" dest="(: ( [71660,71661]"/>
  <match src="primitive_type [93108,93115]" dest="primitive_type [30894,30901]"/>
  <match src="identifier: approve [53084,53091]" dest="identifier: approve [20078,20085]"/>
  <match src="identifier: balanceCheck [80739,80751]" dest="identifier: balanceCheck [56031,56043]"/>
  <match src="]: ] [95747,95748]" dest="]: ] [33533,33534]"/>
  <match src="bytes32: bytes32 [29848,29855]" dest="bytes32: bytes32 [45520,45527]"/>
  <match src="identifier: sender [83750,83756]" dest="identifier: sender [62601,62607]"/>
  <match src="variable_declaration [67307,67332]" dest="variable_declaration [66927,66952]"/>
  <match src="identifier: _state [100087,100093]" dest="identifier: _state [37905,37911]"/>
  <match src="identifier: value [7414,7419]" dest="identifier: value [7513,7518]"/>
  <match src="(: ( [84297,84298]" dest="(: ( [58311,58312]"/>
  <match src="identifier: greaterThanOrEqualTo [10145,10165]" dest="identifier: greaterThanOrEqualTo [10244,10264]"/>
  <match src="returns: returns [94468,94475]" dest="returns: returns [32254,32261]"/>
  <match src="=&gt;: =&gt; [88665,88667]" dest="=&gt;: =&gt; [28794,28796]"/>
  <match src="]: ] [96691,96692]" dest="]: ] [34477,34478]"/>
  <match src="!=: != [20482,20484]" dest="!=: != [63586,63588]"/>
  <match src="function_body [92327,92355]" dest="function_body [30113,30141]"/>
  <match src="(: ( [5331,5332]" dest="(: ( [5385,5386]"/>
  <match src="identifier: account [94382,94389]" dest="identifier: account [32168,32175]"/>
  <match src="string_literal [106734,106755]" dest="string_literal [68663,68684]"/>
  <match src="memory: memory [9137,9143]" dest="memory: memory [9236,9242]"/>
  <match src="identifier: a [6982,6983]" dest="identifier: a [7081,7082]"/>
  <match src="pure: pure [11038,11042]" dest="pure: pure [11137,11141]"/>
  <match src="(: ( [104830,104831]" dest="(: ( [42648,42649]"/>
  <match src="parameter [54698,54710]" dest="parameter [21692,21704]"/>
  <match src="parameter [10166,10182]" dest="parameter [10265,10281]"/>
  <match src="return_statement [92815,92845]" dest="return_statement [30601,30631]"/>
  <match src="primitive_type [51790,51797]" dest="primitive_type [60587,60594]"/>
  <match src="identifier: _state [95008,95014]" dest="identifier: _state [32794,32800]"/>
  <match src="): ) [10821,10822]" dest="): ) [10920,10921]"/>
  <match src="string [90528,90542]" dest="string [75600,75614]"/>
  <match src="identifier: msg [82568,82571]" dest="identifier: msg [71922,71925]"/>
  <match src="type_name [97193,97200]" dest="type_name [34979,34986]"/>
  <match src="parameter [54200,54207]" dest="parameter [21194,21201]"/>
  <match src="(: ( [77106,77107]" dest="(: ( [61076,61077]"/>
  <match src="identifier: COMMA [32392,32397]" dest="identifier: COMMA [48064,48069]"/>
  <match src="type_name [69869,69876]" dest="type_name [65057,65064]"/>
  <match src="return_type_definition [6648,6669]" dest="return_type_definition [6747,6768]"/>
  <match src="primitive_type [80474,80481]" dest="primitive_type [60652,60659]"/>
  <match src="state_mutability [39726,39730]" dest="state_mutability [17271,17275]"/>
  <match src="primitive_type [98793,98800]" dest="primitive_type [36611,36618]"/>
  <match src="call_expression [102909,102936]" dest="call_expression [40727,40754]"/>
  <match src="identifier: getGovernanceSuperMajority [45675,45701]" dest="identifier: getGovernanceSuperMajority [14929,14955]"/>
  <match src="identifier: amount [23168,23174]" dest="identifier: amount [63793,63799]"/>
  <match src="identifier: slot [97781,97785]" dest="identifier: slot [35567,35571]"/>
  <match src="identifier: input [37938,37943]" dest="identifier: input [53610,53615]"/>
  <match src="++: ++ [8562,8564]" dest="++: ++ [8661,8663]"/>
  <match src="): ) [96305,96306]" dest="): ) [34091,34092]"/>
  <match src="(: ( [46349,46350]" dest="(: ( [15603,15604]"/>
  <match src="(: ( [93698,93699]" dest="(: ( [31484,31485]"/>
  <match src="identifier: DOMAIN_SEPARATOR [53324,53340]" dest="identifier: DOMAIN_SEPARATOR [20318,20334]"/>
  <match src="call_argument [8042,8070]" dest="call_argument [8141,8169]"/>
  <match src="identifier: add [101673,101676]" dest="identifier: add [39491,39494]"/>
  <match src="identifier: ASCII_RELATIVE_ZERO [38204,38223]" dest="identifier: ASCII_RELATIVE_ZERO [53876,53895]"/>
  <match src="type_name [104898,104905]" dest="type_name [42716,42723]"/>
  <match src="external: external [81423,81431]" dest="external: external [70705,70713]"/>
  <match src="returns: returns [71990,71997]" dest="returns: returns [61941,61948]"/>
  <match src="identifier: totalBonded [94109,94120]" dest="identifier: totalBonded [31895,31906]"/>
  <match src="identifier: D256 [9106,9110]" dest="identifier: D256 [9205,9209]"/>
  <match src="call_argument [100365,100371]" dest="call_argument [38183,38189]"/>
  <match src="]: ] [102069,102070]" dest="]: ] [39887,39888]"/>
  <match src="string: string [99641,99647]" dest="string: string [37459,37465]"/>
  <match src="interface: interface [12474,12483]" dest="interface: interface [22150,22159]"/>
  <match src="): ) [29334,29335]" dest="): ) [45006,45007]"/>
  <match src="function_body [7130,7195]" dest="function_body [7229,7294]"/>
  <match src="visibility [8730,8738]" dest="visibility [8829,8837]"/>
  <match src="type_name [64381,64388]" dest="type_name [77351,77358]"/>
  <match src="(: ( [34966,34967]" dest="(: ( [50638,50639]"/>
  <match src="parameter [53574,53587]" dest="parameter [20568,20581]"/>
  <match src="function_body [8401,8646]" dest="function_body [8500,8745]"/>
  <match src="): ) [99200,99201]" dest="): ) [37018,37019]"/>
  <match src="member_expression [101527,101559]" dest="member_expression [39345,39377]"/>
  <match src="function: function [93610,93618]" dest="function: function [31396,31404]"/>
  <match src="primitive_type [95086,95093]" dest="primitive_type [32872,32879]"/>
  <match src="function: function [4670,4678]" dest="function: function [4724,4732]"/>
  <match src="parenthesized_expression [30019,30466]" dest="parenthesized_expression [45691,46138]"/>
  <match src=",: , [100043,100044]" dest=",: , [37861,37862]"/>
  <match src="identifier: implementation [106683,106697]" dest="identifier: implementation [68612,68626]"/>
  <match src="state_mutability [5391,5395]" dest="state_mutability [5445,5449]"/>
  <match src="member_expression [94630,94723]" dest="member_expression [32416,32509]"/>
  <match src="identifier: deadline [53579,53587]" dest="identifier: deadline [20573,20581]"/>
  <match src="{: { [105244,105245]" dest="{: { [43062,43063]"/>
  <match src="function: function [94421,94429]" dest="function: function [32207,32215]"/>
  <match src="function: function [95929,95937]" dest="function: function [33715,33723]"/>
  <match src="number_literal: 1610596800 [43551,43561]" dest="number_literal: 1610596800 [12805,12815]"/>
  <match src="state_mutability [85899,85903]" dest="state_mutability [73206,73210]"/>
  <match src="primitive_type [44238,44245]" dest="primitive_type [13492,13499]"/>
  <match src="{: { [6798,6799]" dest="{: { [6897,6898]"/>
  <match src=".: . [84825,84826]" dest=".: . [79284,79285]"/>
  <match src="type_name [8328,8335]" dest="type_name [8427,8434]"/>
  <match src="call_struct_argument [45780,45812]" dest="call_struct_argument [15034,15066]"/>
  <match src=".: . [101533,101534]" dest=".: . [39351,39352]"/>
  <match src="identifier: sender [81807,81813]" dest="identifier: sender [71571,71577]"/>
  <match src=",: , [3890,3891]" dest=",: , [3944,3945]"/>
  <match src="]: ] [36322,36323]" dest="]: ] [51994,51995]"/>
  <match src="call_expression [90555,90587]" dest="call_expression [75627,75659]"/>
  <match src="member_expression [83348,83358]" dest="member_expression [77528,77538]"/>
  <match src="block_statement [94057,94092]" dest="block_statement [31843,31878]"/>
  <match src="constant: constant [43480,43488]" dest="constant: constant [12734,12742]"/>
  <match src="function: function [92185,92193]" dest="function: function [29971,29979]"/>
  <match src="call_argument [28984,29159]" dest="call_argument [44656,44831]"/>
  <match src="identifier: that [106173,106177]" dest="identifier: that [68102,68106]"/>
  <match src="primitive_type [37318,37323]" dest="primitive_type [52990,52995]"/>
  <match src="==: == [2572,2574]" dest="==: == [2626,2628]"/>
  <match src="{: { [43374,43375]" dest="{: { [12628,12629]"/>
  <match src="identifier: offset [44891,44897]" dest="identifier: offset [14145,14151]"/>
  <match src="): ) [34348,34349]" dest="): ) [50020,50021]"/>
  <match src="(: ( [6616,6617]" dest="(: ( [6715,6716]"/>
  <match src="visibility [54799,54807]" dest="visibility [21793,21801]"/>
  <match src=".: . [95880,95881]" dest=".: . [33666,33667]"/>
  <match src="call_expression [68150,68249]" dest="call_expression [79392,79587]"/>
  <match src="array_access [103782,103810]" dest="array_access [41600,41628]"/>
  <match src="address: address [54588,54595]" dest="address: address [21582,21589]"/>
  <match src="identifier: sender [82491,82497]" dest="identifier: sender [71397,71403]"/>
  <match src="(: ( [21204,21205]" dest="(: ( [55978,55979]"/>
  <match src="contract_declaration [88125,88706]" dest="contract_declaration [28254,28835]"/>
  <match src="}: } [45657,45658]" dest="}: } [14911,14912]"/>
  <match src="(: ( [97747,97748]" dest="(: ( [35533,35534]"/>
  <match src="identifier: USDC [44628,44632]" dest="identifier: USDC [13882,13886]"/>
  <match src="identifier: GOVERNANCE_PERIOD [45484,45501]" dest="identifier: GOVERNANCE_PERIOD [14738,14755]"/>
  <match src=".: . [100673,100674]" dest=".: . [38491,38492]"/>
  <match src="private: private [44463,44470]" dest="private: private [13717,13724]"/>
  <match src="primitive_type [2325,2332]" dest="primitive_type [2379,2386]"/>
  <match src="identifier: totalBonded [84304,84315]" dest="identifier: totalRedeemable [58319,58334]"/>
  <match src="call_argument [35786,35807]" dest="call_argument [51458,51479]"/>
  <match src="array_access [102259,102283]" dest="array_access [40077,40101]"/>
  <match src="}: } [101087,101088]" dest="}: } [38905,38906]"/>
  <match src="returns: returns [93423,93430]" dest="returns: returns [31209,31216]"/>
  <match src="return_type_definition [10477,10491]" dest="return_type_definition [10576,10590]"/>
  <match src="call_argument [22753,22789]" dest="call_argument [63274,63318]"/>
  <match src="&quot;: &quot; [106544,106545]" dest="&quot;: &quot; [68473,68474]"/>
  <match src="identifier: dollar [78108,78114]" dest="identifier: dollar [57928,57934]"/>
  <match src="(: ( [103416,103417]" dest="(: ( [41234,41235]"/>
  <match src="identifier: require [4041,4048]" dest="identifier: require [4095,4102]"/>
  <match src="primitive_type [36326,36330]" dest="primitive_type [51998,52002]"/>
  <match src="type_name [98689,98696]" dest="type_name [36507,36514]"/>
  <match src="type_name [99076,99080]" dest="type_name [36894,36898]"/>
  <match src="uint256: uint256 [6351,6358]" dest="uint256: uint256 [6450,6457]"/>
  <match src="comment: /**  * Utility library of inline functions on addresses  *  * Source https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-solidity/v2.1.3/contracts/utils/Address.sol  * This contract is copied here and renamed from the original to avoid clashes in the compiled artifacts  * when the user imports a zos-lib contract (that transitively causes this contract to be compiled and added to the  * build/artifacts folder) as well as the vanilla Address implementation from an openzeppelin version.  */ [84938,85445]" dest="comment: /**  * Utility library of inline functions on addresses  *  * Source https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-solidity/v2.1.3/contracts/utils/Address.sol  * This contract is copied here and renamed from the original to avoid clashes in the compiled artifacts  * when the user imports a zos-lib contract (that transitively causes this contract to be compiled and added to the  * build/artifacts folder) as well as the vanilla Address implementation from an openzeppelin version.  */ [72245,72752]"/>
  <match src="): ) [96406,96407]" dest="): ) [34192,34193]"/>
  <match src="indexed: indexed [80229,80236]" dest="indexed: indexed [77334,77341]"/>
  <match src="member_expression [9261,9268]" dest="member_expression [9360,9367]"/>
  <match src="block_statement [94556,94611]" dest="block_statement [32342,32397]"/>
  <match src="identifier: timestamp [58701,58710]" dest="identifier: timestamp [82757,82766]"/>
  <match src="parameter [45571,45590]" dest="parameter [14825,14844]"/>
  <match src="identifier: amount [100037,100043]" dest="identifier: amount [37855,37861]"/>
  <match src="identifier: accounts [100621,100629]" dest="identifier: accounts [38439,38447]"/>
  <match src="{: { [46947,46948]" dest="{: { [16201,16202]"/>
  <match src="uint256: uint256 [93322,93329]" dest="uint256: uint256 [31108,31115]"/>
  <match src="primitive_type [87651,87658]" dest="primitive_type [27780,27787]"/>
  <match src="member_expression [81360,81370]" dest="member_expression [80579,80589]"/>
  <match src=".: . [10632,10633]" dest=".: . [10731,10732]"/>
  <match src="type_name [92622,92629]" dest="type_name [30408,30415]"/>
  <match src="address: address [51814,51821]" dest="address: address [60609,60616]"/>
  <match src="return_statement [95721,95769]" dest="return_statement [33507,33555]"/>
  <match src="): ) [30218,30219]" dest="): ) [45890,45891]"/>
  <match src="identifier: file [32858,32862]" dest="identifier: file [48530,48534]"/>
  <match src="identifier: a [3227,3228]" dest="identifier: a [3281,3282]"/>
  <match src="parameter [7919,7935]" dest="parameter [8018,8034]"/>
  <match src=",: , [9485,9486]" dest=",: , [9584,9585]"/>
  <match src="(: ( [20492,20493]" dest="(: ( [63596,63597]"/>
  <match src=",: , [33665,33666]" dest=",: , [49337,49338]"/>
  <match src="primitive_type [36331,36336]" dest="primitive_type [52003,52008]"/>
  <match src="identifier: debt [99698,99702]" dest="identifier: debt [37516,37520]"/>
  <match src="(: ( [93831,93832]" dest="(: ( [31617,31618]"/>
  <match src="&quot;: &quot; [18471,18472]" dest="&quot;: &quot; [71616,71617]"/>
  <match src="identifier: amount [101275,101281]" dest="identifier: amount [39093,39099]"/>
  <match src="contract_declaration [50051,50264]" dest="contract_declaration [25490,25703]"/>
  <match src="visibility [67947,67955]" dest="visibility [63223,63231]"/>
  <match src="string [18430,18472]" dest="string [71586,71617]"/>
  <match src="interface: interface [52492,52501]" dest="interface: interface [19486,19495]"/>
  <match src=".: . [83906,83907]" dest=".: . [79791,79792]"/>
  <match src="internal: internal [3931,3939]" dest="internal: internal [3985,3993]"/>
  <match src="function: function [14125,14133]" dest="function: function [23801,23809]"/>
  <match src="assignment_expression [103782,103826]" dest="assignment_expression [41600,41644]"/>
  <match src="comment: /*     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [105317,105970]" dest="comment: // File: contracts/dao/Regulator.sol [64195,64231]"/>
  <match src="type_name [45306,45318]" dest="type_name [14560,14572]"/>
  <match src="type_name [45571,45583]" dest="type_name [14825,14837]"/>
  <match src="): ) [53143,53144]" dest="): ) [20137,20138]"/>
  <match src="type_alias [16341,16349]" dest="type_alias [60133,60141]"/>
  <match src="parameter [54732,54747]" dest="parameter [21726,21741]"/>
  <match src="for: for [79807,79810]" dest="for: for [69533,69536]"/>
  <match src="{: { [100603,100604]" dest="{: { [38421,38422]"/>
  <match src="call_argument [51413,51419]" dest="call_argument [63778,63784]"/>
  <match src="): ) [98831,98832]" dest="): ) [36649,36650]"/>
  <match src=",: , [104106,104107]" dest=",: , [41924,41925]"/>
  <match src="uint: uint [53061,53065]" dest="uint: uint [20055,20059]"/>
  <match src="type_name [101449,101456]" dest="type_name [39267,39274]"/>
  <match src=",: , [21967,21968]" dest=",: , [62958,62959]"/>
  <match src="type_name [66349,66361]" dest="type_name [19043,19055]"/>
  <match src="identifier: i [34341,34342]" dest="identifier: i [50013,50014]"/>
  <match src="identifier: payloadA [29320,29328]" dest="identifier: payloadA [44992,45000]"/>
  <match src=".: . [31343,31344]" dest=".: . [47015,47016]"/>
  <match src=".: . [104826,104827]" dest=".: . [42644,42645]"/>
  <match src="external: external [54871,54879]" dest="external: external [21865,21873]"/>
  <match src="uint112: uint112 [54317,54324]" dest="uint112: uint112 [21311,21318]"/>
  <match src="identifier: a [11158,11159]" dest="identifier: a [11257,11258]"/>
  <match src="user_defined_type [88517,88525]" dest="user_defined_type [28646,28654]"/>
  <match src="identifier: token [83992,83997]" dest="identifier: candidate [79859,79868]"/>
  <match src="): ) [106699,106700]" dest="): ) [68628,68629]"/>
  <match src="parameter [21161,21175]" dest="parameter [55924,55938]"/>
  <match src="&gt;: &gt; [35551,35552]" dest="&gt;: &gt; [51223,51224]"/>
  <match src="type_name [100556,100563]" dest="type_name [38374,38381]"/>
  <match src="(: ( [93215,93216]" dest="(: ( [31001,31002]"/>
  <match src="returns: returns [45562,45569]" dest="returns: returns [14816,14823]"/>
  <match src="identifier: D256 [7596,7600]" dest="identifier: D256 [7695,7699]"/>
  <match src="function_definition [52918,52981]" dest="function_definition [19912,19975]"/>
  <match src="call_argument [80791,80796]" dest="call_argument [70379,70384]"/>
  <match src="type_cast_expression [36331,36352]" dest="type_cast_expression [52003,52024]"/>
  <match src="uint256: uint256 [8539,8546]" dest="uint256: uint256 [8638,8645]"/>
  <match src="identifier: value [53186,53191]" dest="identifier: value [20180,20185]"/>
  <match src="parameter [32584,32593]" dest="parameter [48256,48265]"/>
  <match src="expression_statement [36314,36354]" dest="expression_statement [51986,52026]"/>
  <match src="identifier: Setters [98564,98571]" dest="identifier: Setters [36382,36389]"/>
  <match src="identifier: epoch [102893,102898]" dest="identifier: epoch [40711,40716]"/>
  <match src="expression_statement [83170,83291]" dest="expression_statement [79890,80000]"/>
  <match src="call_expression [97382,97402]" dest="call_expression [35168,35188]"/>
  <match src="string_literal [84888,84896]" dest="string_literal [79357,79368]"/>
  <match src="view: view [93818,93822]" dest="view: view [31604,31608]"/>
  <match src="identifier: start [80385,80390]" dest="identifier: start [69768,69773]"/>
  <match src="identifier: balanceOfPhantom [73332,73348]" dest="identifier: totalCoupons [61511,61523]"/>
  <match src="function_body [97202,97263]" dest="function_body [34988,35049]"/>
  <match src="primitive_type [3954,3961]" dest="primitive_type [4008,4015]"/>
  <match src="identifier: expiration [103124,103134]" dest="identifier: expiration [40942,40952]"/>
  <match src="private: private [64239,64246]" dest="private: private [60170,60177]"/>
  <match src="returns: returns [45178,45185]" dest="returns: returns [14432,14439]"/>
  <match src="identifier: to [54836,54838]" dest="identifier: to [21830,21832]"/>
  <match src="event: event [80088,80093]" dest="event: event [69603,69608]"/>
  <match src="visibility [48096,48103]" dest="visibility [58900,58907]"/>
  <match src="primitive_type [87594,87601]" dest="primitive_type [27723,27730]"/>
  <match src="type_name [65483,65495]" dest="type_name [18751,18763]"/>
  <match src="primitive_type [90339,90346]" dest="primitive_type [75411,75418]"/>
  <match src="=: = [73210,73211]" dest="=: = [80794,80795]"/>
  <match src="type_name [103953,103967]" dest="type_name [41771,41785]"/>
  <match src="member_expression [82034,82045]" dest="member_expression [72136,72147]"/>
  <match src="=: = [8549,8550]" dest="=: = [8648,8649]"/>
  <match src="uint256: uint256 [10860,10867]" dest="uint256: uint256 [10959,10966]"/>
  <match src="type_name [13030,13037]" dest="type_name [22706,22713]"/>
  <match src="type_name [2625,2632]" dest="type_name [2679,2686]"/>
  <match src="identifier: mul [8588,8591]" dest="identifier: mul [8687,8690]"/>
  <match src="return_statement [5465,5478]" dest="return_statement [5519,5532]"/>
  <match src=",: , [7715,7716]" dest=",: , [7814,7815]"/>
  <match src="identifier: debt [88392,88396]" dest="identifier: debt [28521,28525]"/>
  <match src="identifier: D256 [9880,9884]" dest="identifier: D256 [9979,9983]"/>
  <match src="user_defined_type [7478,7482]" dest="user_defined_type [7577,7581]"/>
  <match src="visibility [90162,90168]" dest="visibility [75234,75240]"/>
  <match src="(: ( [67112,67113]" dest="(: ( [66467,66468]"/>
  <match src="type_name [14193,14197]" dest="type_name [23869,23873]"/>
  <match src="return: return [94623,94629]" dest="return: return [32409,32415]"/>
  <match src="type_name [8677,8681]" dest="type_name [8776,8780]"/>
  <match src="member_expression [82568,82578]" dest="member_expression [71922,71932]"/>
  <match src="primitive_type [80489,80496]" dest="primitive_type [77162,77169]"/>
  <match src="call_argument [38096,38114]" dest="call_argument [53768,53786]"/>
  <match src="(: ( [90819,90820]" dest="(: ( [75891,75892]"/>
  <match src="identifier: COLON [32890,32895]" dest="identifier: COLON [48562,48567]"/>
  <match src="parameter [53271,53281]" dest="parameter [20265,20275]"/>
  <match src="): ) [8203,8204]" dest="): ) [8302,8303]"/>
  <match src="uint256: uint256 [77997,78004]" dest="uint256: uint256 [62085,62092]"/>
  <match src="): ) [9276,9277]" dest="): ) [9375,9376]"/>
  <match src="identifier: OpenZeppelinUpgradesAddress [90874,90901]" dest="identifier: OpenZeppelinUpgradesAddress [75946,75973]"/>
  <match src="type_name [93989,93996]" dest="type_name [31775,31782]"/>
  <match src="state_variable_declaration [43697,43748]" dest="state_variable_declaration [12951,13002]"/>
  <match src="(: ( [9068,9069]" dest="(: ( [9167,9168]"/>
  <match src="parameter [46375,46382]" dest="parameter [15629,15636]"/>
  <match src="expression_statement [22722,22791]" dest="expression_statement [63243,63320]"/>
  <match src=",: , [7174,7175]" dest=",: , [7273,7274]"/>
  <match src="call_expression [21197,21262]" dest="call_expression [55960,56018]"/>
  <match src="primitive_type [92224,92230]" dest="primitive_type [30010,30016]"/>
  <match src="primitive_type [106024,106031]" dest="primitive_type [67953,67960]"/>
  <match src="identifier: Decimal [46485,46492]" dest="identifier: Decimal [15739,15746]"/>
  <match src=",: , [14846,14847]" dest=",: , [24522,24523]"/>
  <match src="identifier: setDebtToZero [99769,99782]" dest="identifier: setDebtToZero [37587,37600]"/>
  <match src="): ) [95174,95175]" dest="): ) [32960,32961]"/>
  <match src="type_name [16390,16397]" dest="type_name [60234,60241]"/>
  <match src="parameter [7505,7514]" dest="parameter [7604,7613]"/>
  <match src="assembly_statement [97818,97872]" dest="assembly_statement [35604,35658]"/>
  <match src="for: for [64206,64209]" dest="for: for [64988,64991]"/>
  <match src="pure: pure [9922,9926]" dest="pure: pure [10021,10025]"/>
  <match src=".: . [96211,96212]" dest=".: . [33997,33998]"/>
  <match src="external: external [14590,14598]" dest="external: external [24266,24274]"/>
  <match src="memory: memory [6785,6791]" dest="memory: memory [6884,6890]"/>
  <match src="returns: returns [52838,52845]" dest="returns: returns [19832,19839]"/>
  <match src="constant: constant [28456,28464]" dest="constant: constant [44128,44136]"/>
  <match src=",: , [7935,7936]" dest=",: , [8034,8035]"/>
  <match src="identifier: account [105138,105145]" dest="identifier: account [42956,42963]"/>
  <match src="function_definition [53381,53440]" dest="function_definition [20375,20434]"/>
  <match src=",: , [33821,33822]" dest=",: , [49493,49494]"/>
  <match src="comment: /* DAO */ [43909,43918]" dest="comment: /* DAO */ [13163,13172]"/>
  <match src="address: address [15043,15050]" dest="address: address [24719,24726]"/>
  <match src="string [19816,19855]" dest="string [71500,71536]"/>
  <match src="identifier: this [80659,80663]" dest="identifier: this [70274,70278]"/>
  <match src="primitive_type [42864,42871]" dest="primitive_type [12118,12125]"/>
  <match src="identifier: b [10341,10342]" dest="identifier: b [10440,10441]"/>
  <match src="return_type_definition [94249,94266]" dest="return_type_definition [32035,32052]"/>
  <match src="identifier: reason [28850,28856]" dest="identifier: reason [44522,44528]"/>
  <match src="identifier: BASE [7176,7180]" dest="identifier: BASE [7275,7279]"/>
  <match src="(: ( [10859,10860]" dest="(: ( [10958,10959]"/>
  <match src="bool: bool [14193,14197]" dest="bool: bool [23869,23873]"/>
  <match src="=: = [43606,43607]" dest="=: = [12860,12861]"/>
  <match src="call_argument [80666,80671]" dest="call_argument [70281,70286]"/>
  <match src="identifier: balanceOfBonded [73255,73270]" dest="identifier: balanceOf [80810,80819]"/>
  <match src="}: } [92354,92355]" dest="}: } [30140,30141]"/>
  <match src="): ) [81086,81087]" dest="): ) [70659,70660]"/>
  <match src="=: = [103817,103818]" dest="=: = [41635,41636]"/>
  <match src="identifier: _state [100736,100742]" dest="identifier: _state [38554,38560]"/>
  <match src="array_access [96183,96223]" dest="array_access [33969,34009]"/>
  <match src="internal: internal [45992,46000]" dest="internal: internal [15246,15254]"/>
  <match src="public: public [92399,92405]" dest="public: public [30185,30191]"/>
  <match src="identifier: kLast [54529,54534]" dest="identifier: kLast [21523,21528]"/>
  <match src="call_expression [29027,29051]" dest="call_expression [44699,44723]"/>
  <match src="type_name [71776,71783]" dest="type_name [65781,65788]"/>
  <match src="(: ( [8415,8416]" dest="(: ( [8514,8515]"/>
  <match src="primitive_type [101147,101154]" dest="primitive_type [38965,38972]"/>
  <match src="(: ( [48372,48373]" dest="(: ( [55098,55099]"/>
  <match src="identifier: result [36897,36903]" dest="identifier: result [52569,52575]"/>
  <match src="identifier: Transfer [100458,100466]" dest="identifier: Transfer [38276,38284]"/>
  <match src="memory: memory [3910,3916]" dest="memory: memory [3964,3970]"/>
  <match src="view: view [94463,94467]" dest="view: view [32249,32253]"/>
  <match src="parameter [67576,67583]" dest="parameter [62125,62132]"/>
  <match src="&lt;: &lt; [37474,37475]" dest="&lt;: &lt; [53146,53147]"/>
  <match src="call_argument [6698,6710]" dest="call_argument [6797,6809]"/>
  <match src="identifier: sender [82026,82032]" dest="identifier: sender [72128,72134]"/>
  <match src="call_argument [65112,65131]" dest="call_argument [62365,62382]"/>
  <match src="identifier: reason [33219,33225]" dest="identifier: reason [48891,48897]"/>
  <match src="{: { [7833,7834]" dest="{: { [7932,7933]"/>
  <match src="}: } [9278,9279]" dest="}: } [9377,9378]"/>
  <match src="external: external [54485,54493]" dest="external: external [21479,21487]"/>
  <match src="}: } [46989,46990]" dest="}: } [16243,16244]"/>
  <match src="): ) [54838,54839]" dest="): ) [21832,21833]"/>
  <match src="identifier: RPAREN [33054,33060]" dest="identifier: RPAREN [48726,48732]"/>
  <match src="return_statement [94838,94894]" dest="return_statement [32624,32680]"/>
  <match src="call_argument [102783,102789]" dest="call_argument [40601,40607]"/>
  <match src="{: { [93554,93555]" dest="{: { [31340,31341]"/>
  <match src="[: [ [37648,37649]" dest="[: [ [53320,53321]"/>
  <match src="): ) [37827,37828]" dest="): ) [53499,53500]"/>
  <match src="): ) [53281,53282]" dest="): ) [20275,20276]"/>
  <match src=".: . [100959,100960]" dest=".: . [38777,38778]"/>
  <match src="return_statement [93021,93049]" dest="return_statement [30807,30835]"/>
  <match src="): ) [82740,82741]" dest="): ) [78939,78940]"/>
  <match src=",: , [3296,3297]" dest=",: , [3350,3351]"/>
  <match src="type_name [35959,35966]" dest="type_name [51631,51638]"/>
  <match src="type_name [87545,87552]" dest="type_name [27674,27681]"/>
  <match src="returns: returns [944,951]" dest="returns: returns [998,1005]"/>
  <match src="variable_declaration_statement [105006,105070]" dest="variable_declaration_statement [42824,42888]"/>
  <match src="(: ( [52936,52937]" dest="(: ( [19930,19931]"/>
  <match src="primitive_type [64409,64416]" dest="primitive_type [77243,77250]"/>
  <match src="]: ] [105282,105283]" dest="]: ] [43100,43101]"/>
  <match src="member_expression [95147,95173]" dest="member_expression [32933,32959]"/>
  <match src="function_body [96165,96231]" dest="function_body [33951,34017]"/>
  <match src="type_name [100240,100247]" dest="type_name [38058,38065]"/>
  <match src="private: private [43472,43479]" dest="private: private [12726,12733]"/>
  <match src="assignment_expression [101301,101366]" dest="assignment_expression [39119,39184]"/>
  <match src="event_paramater [80318,80331]" dest="event_paramater [69874,69887]"/>
  <match src="(: ( [37456,37457]" dest="(: ( [53128,53129]"/>
  <match src="type_alias [91843,91851]" dest="type_alias [29629,29637]"/>
  <match src="parameter [30585,30601]" dest="parameter [46257,46273]"/>
  <match src="function: function [28775,28783]" dest="function: function [44447,44455]"/>
  <match src="returns: returns [10358,10365]" dest="returns: returns [10457,10464]"/>
  <match src="(: ( [32773,32774]" dest="(: ( [48445,48446]"/>
  <match src="(: ( [81407,81408]" dest="(: ( [70689,70690]"/>
  <match src="type_name [97153,97160]" dest="type_name [34939,34946]"/>
  <match src="identifier: reject [97249,97255]" dest="identifier: reject [35035,35041]"/>
  <match src="call_argument [32796,33083]" dest="call_argument [48468,48755]"/>
  <match src="member_expression [92926,92941]" dest="member_expression [30712,30727]"/>
  <match src="member_expression [101720,101746]" dest="member_expression [39538,39564]"/>
  <match src="parameter [2325,2332]" dest="parameter [2379,2386]"/>
  <match src="type_cast_expression [72156,72169]" dest="type_cast_expression [58264,58277]"/>
  <match src="type_name [35400,35405]" dest="type_name [51072,51077]"/>
  <match src="identifier: account [100890,100897]" dest="identifier: account [38708,38715]"/>
  <match src="variable_declaration [103361,103395]" dest="variable_declaration [41179,41213]"/>
  <match src="uint256: uint256 [87308,87315]" dest="uint256: uint256 [27437,27444]"/>
  <match src="identifier: z [36823,36824]" dest="identifier: z [52495,52496]"/>
  <match src="identifier: recipient [14563,14572]" dest="identifier: recipient [24239,24248]"/>
  <match src="identifier: spender [94885,94892]" dest="identifier: spender [32671,32678]"/>
  <match src="identifier: impl [97842,97846]" dest="identifier: impl [35628,35632]"/>
  <match src="memory: memory [9351,9357]" dest="memory: memory [9450,9456]"/>
  <match src="{: { [10874,10875]" dest="{: { [10973,10974]"/>
  <match src="{: { [46653,46654]" dest="{: { [15907,15908]"/>
  <match src="returns: returns [5396,5403]" dest="returns: returns [5450,5457]"/>
  <match src="parameter [54144,54151]" dest="parameter [21138,21145]"/>
  <match src="uint256: uint256 [29923,29930]" dest="uint256: uint256 [45595,45602]"/>
  <match src="parameter [4694,4703]" dest="parameter [4748,4757]"/>
  <match src="constant: constant [44199,44207]" dest="constant: constant [13453,13461]"/>
  <match src="member_expression [99942,99956]" dest="member_expression [37760,37774]"/>
  <match src="type_name [50206,50213]" dest="type_name [25645,25652]"/>
  <match src="visibility [80846,80854]" dest="visibility [70434,70442]"/>
  <match src="address: address [102583,102590]" dest="address: address [40401,40408]"/>
  <match src="identifier: pair [51846,51850]" dest="identifier: spender [60733,60740]"/>
  <match src="primitive_type [54749,54753]" dest="primitive_type [21743,21747]"/>
  <match src="block_statement [94314,94349]" dest="block_statement [32100,32135]"/>
  <match src="identifier: valid [66569,66574]" dest="identifier: valid [66959,66964]"/>
  <match src="member_expression [96808,96825]" dest="member_expression [34594,34611]"/>
  <match src="=: = [90471,90472]" dest="=: = [75543,75544]"/>
  <match src="state_mutability [2311,2315]" dest="state_mutability [2365,2369]"/>
  <match src="): ) [7438,7439]" dest="): ) [7537,7538]"/>
  <match src="uint256: uint256 [21161,21168]" dest="uint256: uint256 [55924,55931]"/>
</matches>
<actions>
  <move-tree tree="comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [11200,11708]" parent="source_file [0,82780]" at="0"/>
  <move-tree tree="comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP. Does not include  * the optional functions; to access them see {ERC20Detailed}.  */ [12319,12472]" parent="source_file [0,82780]" at="5"/>
  <move-tree tree="comment: /*     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [42075,42728]" parent="source_file [0,82780]" at="12"/>
  <move-tree tree="library_declaration [42740,47089]" parent="source_file [0,82780]" at="13"/>
  <move-tree tree="comment: /*     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [47093,47746]" parent="source_file [0,82780]" at="16"/>
  <move-tree tree="interface_declaration [52492,54938]" parent="source_file [0,82780]" at="19"/>
  <move-tree tree="interface_declaration [12474,15109]" parent="source_file [0,82780]" at="24"/>
  <move-tree tree="comment: /*     Copyright 2019 ZeroEx Intl.      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [38240,38848]" parent="source_file [0,82780]" at="31"/>
  <move-tree tree="contract_declaration [62540,62713]" parent="source_file [0,82780]" at="33"/>
  <move-tree tree="comment: /*     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [61875,62528]" parent="source_file [0,82780]" at="37"/>
  <move-tree tree="contract_declaration [87158,87494]" parent="source_file [0,82780]" at="38"/>
  <move-tree tree="contract_declaration [87498,87819]" parent="source_file [0,82780]" at="39"/>
  <move-tree tree="contract_declaration [87823,88121]" parent="source_file [0,82780]" at="40"/>
  <move-tree tree="contract_declaration [88125,88706]" parent="source_file [0,82780]" at="41"/>
  <move-tree tree="contract_declaration [88710,88756]" parent="source_file [0,82780]" at="42"/>
  <move-tree tree="comment: /*     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [62717,63370]" parent="source_file [0,82780]" at="44"/>
  <move-tree tree="contract_declaration [91804,97882]" parent="source_file [0,82780]" at="45"/>
  <move-tree tree="comment: /*     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [63477,64130]" parent="source_file [0,82780]" at="47"/>
  <move-tree tree="contract_declaration [98555,105313]" parent="source_file [0,82780]" at="48"/>
  <move-tree tree="library_declaration [28271,38236]" parent="source_file [0,82780]" at="53"/>
  <move-tree tree="comment: /*     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [79070,79723]" parent="source_file [0,82780]" at="54"/>
  <move-tree tree="comment: /*     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [86487,87140]" parent="source_file [0,82780]" at="60"/>
  <move-tree tree="contract_declaration [16294,23316]" parent="source_file [0,82780]" at="62"/>
  <move-tree tree="comment: /*     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [105317,105970]" parent="source_file [0,82780]" at="63"/>
  <move-tree tree="contract_declaration [64158,68274]" parent="source_file [0,82780]" at="67"/>
  <move-tree tree="comment: /*     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [106837,107490]" parent="source_file [0,82780]" at="68"/>
  <move-tree tree="contract_declaration [105984,106833]" parent="source_file [0,82780]" at="71"/>
  <update-node tree="comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [11200,11708]" label="// File: @openzeppelin/contracts/math/SafeMath.sol"/>
  <update-node tree="comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP. Does not include  * the optional functions; to access them see {ERC20Detailed}.  */ [12319,12472]" label="// File: contracts/external/Decimal.sol"/>
  <update-node tree="comment: /**  * @dev Implementation of the {IERC20} interface.  *  * This implementation is agnostic to the way tokens are created. This means  * that a supply mechanism has to be added in a derived contract using {_mint}.  * For a generic mechanism see {ERC20Mintable}.  *  * TIP: For a detailed writeup see our guide  * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How  * to implement supply mechanisms].  *  * We have followed general OpenZeppelin guidelines: functions revert instead  * of returning `false` on failure. This behavior is nonetheless conventional  * and does not conflict with the expectations of ERC20 applications.  *  * Additionally, an {Approval} event is emitted on calls to {transferFrom}.  * This allows applications to reconstruct the allowance for all accounts just  * by listening to said events. Other implementations of the EIP may not emit  * these events, as it isn't required by the specification.  *  * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}  * functions have been added to mitigate the well-known issues around setting  * allowances. See {IERC20-approve}.  */ [15117,16292]" label="// File: contracts/Constants.sol"/>
  <update-node tree="comment: /**  * @dev Extension of {ERC20} that allows token holders to destroy both their own  * tokens and those that they have an allowance for, in a way that can be  * recognized off-chain (via event analysis).  */ [23324,23536]" label="// File: contracts/dao/Curve.sol"/>
  <insert-node tree="contract_declaration [17046,19410]" parent="source_file [0,82780]" at="14"/>
  <update-node tree="comment: /**  * @dev Optional functions from the ERC20 standard.  */ [23951,24012]" label="// File: sushiswap/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol"/>
  <update-node tree="comment: /**  * @title Roles  * @dev Library for managing addresses assigned to a Role.  */ [25510,25595]" label="// File: @openzeppelin/contracts/token/ERC20/IERC20.sol"/>
  <update-node tree="comment: /*     Copyright 2019 dYdX Trading Inc.      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [27506,28119]" label="/**  * @dev Interface of the ERC20 standard as defined in the EIP. Does not include  * the optional functions; to access them see {ERC20Detailed}.  */"/>
  <update-node tree="comment: /**  * @title Require  * @author dYdX  *  * Stringifies parameters to pretty-print revert messages. Costs more gas than regular require()  */ [28123,28269]" label="// File: contracts/token/IDollar.sol"/>
  <update-node tree="comment: /*     Copyright 2019 ZeroEx Intl.      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [38240,38848]" label="// File: contracts/oracle/IOracle.sol"/>
  <update-node tree="comment: // SPDX-License-Identifier: GPL-3.0-or-later [54942,54986]" label="// File: contracts/dao/State.sol"/>
  <update-node tree="comment: // computes square roots using the babylonian method [54990,55042]" label="// File: contracts/dao/Getters.sol"/>
  <update-node tree="comment: // https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method [55044,55128]" label="// File: contracts/dao/Setters.sol"/>
  <update-node tree="comment: // SPDX-License-Identifier: GPL-3.0-or-later [55489,55533]" label="// File: contracts/external/Require.sol"/>
  <update-node tree="comment: // a library for handling binary fixed point numbers (https://en.wikipedia.org/wiki/Q_(number_format)) [55539,55641]" label="/*     Copyright 2019 dYdX Trading Inc.      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */"/>
  <update-node tree="comment: // library with helper methods for oracles that are concerned with computing average prices [58331,58422]" label="/**  * @title Require  * @author dYdX  *  * Stringifies parameters to pretty-print revert messages. Costs more gas than regular require()  */"/>
  <update-node tree="comment: /*     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [79070,79723]" label="// File: contracts/dao/Comptroller.sol"/>
  <insert-node tree="contract_declaration [54617,59376]" parent="source_file [0,82780]" at="45"/>
  <update-node tree="comment: /*     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [86487,87140]" label="// File: contracts/dao/Market.sol"/>
  <update-node tree="comment: /*     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [105317,105970]" label="// File: contracts/dao/Regulator.sol"/>
  <update-node tree="comment: /*     Copyright 2021 Sushi Set Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [106837,107490]" label="// File: contracts/dao/Permission.sol"/>
  <insert-node tree="comment: // File: contracts/dao/Bonding.sol [68766,68800]" parent="source_file [0,82780]" at="55"/>
  <insert-node tree="comment: // File: @openzeppelin/upgrades/contracts/utils/Address.sol [72182,72241]" parent="source_file [0,82780]" at="58"/>
  <insert-node tree="comment: // File: contracts/dao/Upgradeable.sol [73794,73832]" parent="source_file [0,82780]" at="61"/>
  <insert-node tree="comment: // File: contracts/dao/Govern.sol [76207,76240]" parent="source_file [0,82780]" at="65"/>
  <insert-node tree="contract_declaration [76915,80919]" parent="source_file [0,82780]" at="67"/>
  <insert-node tree="comment: // File: contracts/dao/Implementation.sol [80923,80964]" parent="source_file [0,82780]" at="68"/>
  <insert-node tree="contract_declaration [81627,82780]" parent="source_file [0,82780]" at="70"/>
  <insert-node tree="contract: contract [17046,17054]" parent="contract_declaration [17046,19410]" at="0"/>
  <insert-node tree="identifier: Curve [17055,17060]" parent="contract_declaration [17046,19410]" at="1"/>
  <insert-node tree="contract_body [17061,19410]" parent="contract_declaration [17046,19410]" at="2"/>
  <insert-node tree="contract: contract [54617,54625]" parent="contract_declaration [54617,59376]" at="0"/>
  <insert-node tree="identifier: Comptroller [54626,54637]" parent="contract_declaration [54617,59376]" at="1"/>
  <insert-node tree="is: is [54638,54640]" parent="contract_declaration [54617,59376]" at="2"/>
  <insert-tree tree="inheritance_specifier [54641,54648]" parent="contract_declaration [54617,59376]" at="3"/>
  <insert-node tree="contract_body [54649,59376]" parent="contract_declaration [54617,59376]" at="4"/>
  <update-node tree="identifier: ERC20 [16303,16308]" label="Market"/>
  <move-tree tree="function_definition [20377,20848]" parent="contract_body [60120,64191]" at="28"/>
  <update-node tree="identifier: Oracle [64167,64173]" label="Regulator"/>
  <move-tree tree="function_definition [65440,65689]" parent="contract_body [64934,67207]" at="18"/>
  <update-node tree="identifier: Pool [79754,79758]" label="Bonding"/>
  <move-tree tree="inheritance_specifier [107811,107821]" parent="contract_declaration [69471,72178]" at="5"/>
  <move-tree tree="event_definition [80267,80333]" parent="contract_body [69511,72178]" at="8"/>
  <insert-node tree="contract: contract [76915,76923]" parent="contract_declaration [76915,80919]" at="0"/>
  <insert-node tree="identifier: Govern [76924,76930]" parent="contract_declaration [76915,80919]" at="1"/>
  <insert-node tree="is: is [76931,76933]" parent="contract_declaration [76915,80919]" at="2"/>
  <insert-tree tree="inheritance_specifier [76934,76941]" parent="contract_declaration [76915,80919]" at="3"/>
  <insert-node tree=",: , [76941,76942]" parent="contract_declaration [76915,80919]" at="4"/>
  <move-tree tree="inheritance_specifier [107543,107553]" parent="contract_declaration [76915,80919]" at="5"/>
  <insert-node tree=",: , [76953,76954]" parent="contract_declaration [76915,80919]" at="6"/>
  <move-tree tree="inheritance_specifier [107555,107566]" parent="contract_declaration [76915,80919]" at="7"/>
  <insert-node tree="contract_body [76967,80919]" parent="contract_declaration [76915,80919]" at="8"/>
  <insert-node tree="contract: contract [81627,81635]" parent="contract_declaration [81627,82780]" at="0"/>
  <insert-node tree="identifier: Implementation [81636,81650]" parent="contract_declaration [81627,82780]" at="1"/>
  <insert-node tree="is: is [81651,81653]" parent="contract_declaration [81627,82780]" at="2"/>
  <move-tree tree="inheritance_specifier [107536,107541]" parent="contract_declaration [81627,82780]" at="3"/>
  <insert-node tree=",: , [81659,81660]" parent="contract_declaration [81627,82780]" at="4"/>
  <insert-tree tree="inheritance_specifier [81661,81668]" parent="contract_declaration [81627,82780]" at="5"/>
  <insert-node tree=",: , [81668,81669]" parent="contract_declaration [81627,82780]" at="6"/>
  <insert-tree tree="inheritance_specifier [81670,81676]" parent="contract_declaration [81627,82780]" at="7"/>
  <insert-node tree=",: , [81676,81677]" parent="contract_declaration [81627,82780]" at="8"/>
  <insert-tree tree="inheritance_specifier [81678,81687]" parent="contract_declaration [81627,82780]" at="9"/>
  <insert-node tree=",: , [81687,81688]" parent="contract_declaration [81627,82780]" at="10"/>
  <insert-tree tree="inheritance_specifier [81689,81695]" parent="contract_declaration [81627,82780]" at="11"/>
  <insert-node tree="contract_body [81696,82780]" parent="contract_declaration [81627,82780]" at="12"/>
  <insert-node tree="{: { [17061,17062]" parent="contract_body [17061,19410]" at="0"/>
  <insert-tree tree="using_directive [17068,17095]" parent="contract_body [17061,19410]" at="1"/>
  <insert-tree tree="using_directive [17101,17132]" parent="contract_body [17061,19410]" at="2"/>
  <insert-node tree="function_definition [17140,17392]" parent="contract_body [17061,19410]" at="3"/>
  <insert-node tree="function_definition [17400,18703]" parent="contract_body [17061,19410]" at="4"/>
  <insert-node tree="comment: // 1/(3(1-R)^2)-1/3 [18711,18730]" parent="contract_body [17061,19410]" at="5"/>
  <insert-node tree="function_definition [18736,18977]" parent="contract_body [17061,19410]" at="6"/>
  <insert-node tree="comment: // 1/(3(1-R)(1-R'))-1/3 [18985,19008]" parent="contract_body [17061,19410]" at="7"/>
  <insert-node tree="function_definition [19014,19407]" parent="contract_body [17061,19410]" at="8"/>
  <insert-node tree="}: } [19409,19410]" parent="contract_body [17061,19410]" at="9"/>
  <insert-node tree="{: { [54649,54650]" parent="contract_body [54649,59376]" at="0"/>
  <move-tree tree="using_directive [71148,71175]" parent="contract_body [54649,59376]" at="1"/>
  <insert-tree tree="state_variable_declaration [54691,54737]" parent="contract_body [54649,59376]" at="2"/>
  <move-tree tree="function_definition [51146,51289]" parent="contract_body [54649,59376]" at="3"/>
  <insert-node tree="function_definition [54982,55261]" parent="contract_body [54649,59376]" at="4"/>
  <move-tree tree="function_definition [23839,23942]" parent="contract_body [54649,59376]" at="5"/>
  <insert-node tree="function_definition [55513,55718]" parent="contract_body [54649,59376]" at="6"/>
  <insert-node tree="function_definition [55726,55894]" parent="contract_body [54649,59376]" at="7"/>
  <move-tree tree="function_definition [21129,21437]" parent="contract_body [54649,59376]" at="8"/>
  <insert-node tree="function_definition [56061,57803]" parent="contract_body [54649,59376]" at="9"/>
  <insert-node tree="function_definition [57811,58167]" parent="contract_body [54649,59376]" at="10"/>
  <move-tree tree="function_definition [72064,72200]" parent="contract_body [54649,59376]" at="11"/>
  <insert-node tree="function_definition [58421,58857]" parent="contract_body [54649,59376]" at="12"/>
  <move-tree tree="function_definition [84180,84401]" parent="contract_body [54649,59376]" at="13"/>
  <insert-node tree="function_definition [59056,59190]" parent="contract_body [54649,59376]" at="14"/>
  <insert-node tree="function_definition [59198,59373]" parent="contract_body [54649,59376]" at="15"/>
  <insert-node tree="}: } [59375,59376]" parent="contract_body [54649,59376]" at="16"/>
  <move-tree tree="state_variable_declaration [64231,64272]" parent="contract_body [60120,64191]" at="2"/>
  <insert-node tree="event_definition [60211,60342]" parent="contract_body [60120,64191]" at="3"/>
  <insert-node tree="event_definition [60348,60461]" parent="contract_body [60120,64191]" at="4"/>
  <move-tree tree="event_definition [26578,26621]" parent="contract_body [60120,64191]" at="5"/>
  <move-tree tree="event_definition [51772,51858]" parent="contract_body [60120,64191]" at="6"/>
  <move-tree tree=",: , [51850,51851]" parent="event_definition [60566,60667]" at="9"/>
  <insert-node tree="event_definition [60673,60757]" parent="contract_body [60120,64191]" at="7"/>
  <move-tree tree="function_definition [77002,77151]" parent="contract_body [60120,64191]" at="8"/>
  <insert-node tree="function_definition [61189,61882]" parent="contract_body [60120,64191]" at="9"/>
  <move-tree tree="function_definition [71954,72056]" parent="contract_body [60120,64191]" at="10"/>
  <insert-node tree="function_definition [62060,62748]" parent="contract_body [60120,64191]" at="11"/>
  <insert-node tree="function_definition [62756,63158]" parent="contract_body [60120,64191]" at="12"/>
  <move-tree tree=",: , [22588,22589]" parent="function_definition [63166,63452]" at="5"/>
  <insert-tree tree="using_directive [64941,64968]" parent="contract_body [64934,67207]" at="1"/>
  <insert-node tree="event_definition [65013,65132]" parent="contract_body [64934,67207]" at="3"/>
  <insert-node tree="event_definition [65138,65214]" parent="contract_body [64934,67207]" at="4"/>
  <insert-node tree="event_definition [65220,65263]" parent="contract_body [64934,67207]" at="5"/>
  <insert-node tree="function_definition [65307,65731]" parent="contract_body [64934,67207]" at="7"/>
  <move-tree tree="function_definition [71732,71832]" parent="contract_body [64934,67207]" at="13"/>
  <insert-node tree="function_definition [65833,66142]" parent="contract_body [64934,67207]" at="9"/>
  <insert-node tree="function_definition [66582,66844]" parent="contract_body [64934,67207]" at="11"/>
  <insert-node tree="function_definition [69922,70141]" parent="contract_body [69511,72178]" at="7"/>
  <insert-node tree="function_definition [71701,72175]" parent="contract_body [69511,72178]" at="12"/>
  <insert-node tree="{: { [76967,76968]" parent="contract_body [76967,80919]" at="0"/>
  <move-tree tree="using_directive [74647,74674]" parent="contract_body [76967,80919]" at="1"/>
  <insert-tree tree="using_directive [77007,77038]" parent="contract_body [76967,80919]" at="2"/>
  <insert-tree tree="state_variable_declaration [77046,77087]" parent="contract_body [76967,80919]" at="3"/>
  <move-tree tree="event_definition [80435,80525]" parent="contract_body [76967,80919]" at="4"/>
  <insert-node tree="event_definition [77207,77307]" parent="contract_body [76967,80919]" at="5"/>
  <move-tree tree="event_definition [80209,80261]" parent="contract_body [76967,80919]" at="6"/>
  <insert-node tree="function_definition [77386,79007]" parent="contract_body [76967,80919]" at="7"/>
  <insert-node tree="function_definition [79015,79818]" parent="contract_body [76967,80919]" at="8"/>
  <insert-node tree="function_definition [79826,80609]" parent="contract_body [76967,80919]" at="9"/>
  <insert-node tree="function_definition [80617,80916]" parent="contract_body [76967,80919]" at="10"/>
  <insert-node tree="}: } [80918,80919]" parent="contract_body [76967,80919]" at="11"/>
  <insert-node tree="{: { [81696,81697]" parent="contract_body [81696,82780]" at="0"/>
  <insert-tree tree="using_directive [81703,81730]" parent="contract_body [81696,82780]" at="1"/>
  <insert-node tree="event_definition [81738,81809]" parent="contract_body [81696,82780]" at="2"/>
  <insert-node tree="event_definition [81815,81878]" parent="contract_body [81696,82780]" at="3"/>
  <insert-node tree="function_definition [81886,82291]" parent="contract_body [81696,82780]" at="4"/>
  <insert-node tree="function_definition [82299,82775]" parent="contract_body [81696,82780]" at="5"/>
  <insert-node tree="}: } [82779,82780]" parent="contract_body [81696,82780]" at="6"/>
  <insert-node tree="function: function [17140,17148]" parent="function_definition [17140,17392]" at="0"/>
  <insert-node tree="identifier: calculateCouponPremium [17149,17171]" parent="function_definition [17140,17392]" at="1"/>
  <insert-node tree="(: ( [17171,17172]" parent="function_definition [17140,17392]" at="2"/>
  <move-tree tree="parameter [39648,39663]" parent="function_definition [17140,17392]" at="3"/>
  <insert-node tree=",: , [17201,17202]" parent="function_definition [17140,17392]" at="4"/>
  <move-tree tree="parameter [48495,48511]" parent="function_definition [17140,17392]" at="5"/>
  <insert-node tree=",: , [17229,17230]" parent="function_definition [17140,17392]" at="6"/>
  <move-tree tree="parameter [23708,23722]" parent="function_definition [17140,17392]" at="7"/>
  <insert-node tree="): ) [17260,17261]" parent="function_definition [17140,17392]" at="8"/>
  <move-tree tree="visibility [39712,39720]" parent="function_definition [17140,17392]" at="9"/>
  <move-tree tree="state_mutability [39726,39730]" parent="function_definition [17140,17392]" at="10"/>
  <move-tree tree="return_type_definition [16632,16649]" parent="function_definition [17140,17392]" at="11"/>
  <insert-node tree="function_body [17294,17392]" parent="function_definition [17140,17392]" at="12"/>
  <insert-node tree="function: function [17400,17408]" parent="function_definition [17400,18703]" at="0"/>
  <insert-node tree="identifier: effectivePremium [17409,17425]" parent="function_definition [17400,18703]" at="1"/>
  <insert-node tree="(: ( [17425,17426]" parent="function_definition [17400,18703]" at="2"/>
  <move-tree tree="parameter [19670,19693]" parent="function_definition [17400,18703]" at="3"/>
  <insert-node tree=",: , [17455,17456]" parent="function_definition [17400,18703]" at="4"/>
  <move-tree tree="parameter [18957,18975]" parent="function_definition [17400,18703]" at="5"/>
  <insert-node tree=",: , [17483,17484]" parent="function_definition [17400,18703]" at="6"/>
  <move-tree tree="parameter [23874,23888]" parent="function_definition [17400,18703]" at="7"/>
  <insert-node tree="): ) [17514,17515]" parent="function_definition [17400,18703]" at="8"/>
  <move-tree tree="visibility [24088,24095]" parent="function_definition [17400,18703]" at="9"/>
  <move-tree tree="state_mutability [56133,56137]" parent="function_definition [17400,18703]" at="10"/>
  <insert-tree tree="return_type_definition [17529,17558]" parent="function_definition [17400,18703]" at="11"/>
  <insert-node tree="function_body [17559,18703]" parent="function_definition [17400,18703]" at="12"/>
  <insert-node tree="function: function [18736,18744]" parent="function_definition [18736,18977]" at="0"/>
  <insert-node tree="identifier: curve [18745,18750]" parent="function_definition [18736,18977]" at="1"/>
  <insert-node tree="(: ( [18750,18751]" parent="function_definition [18736,18977]" at="2"/>
  <move-tree tree="parameter [65483,65502]" parent="function_definition [18736,18977]" at="3"/>
  <insert-node tree="): ) [18780,18781]" parent="function_definition [18736,18977]" at="4"/>
  <move-tree tree="visibility [24116,24123]" parent="function_definition [18736,18977]" at="5"/>
  <move-tree tree="state_mutability [55187,55191]" parent="function_definition [18736,18977]" at="6"/>
  <insert-tree tree="return_type_definition [18795,18824]" parent="function_definition [18736,18977]" at="7"/>
  <insert-tree tree="function_body [18825,18977]" parent="function_definition [18736,18977]" at="8"/>
  <insert-node tree="function: function [19014,19022]" parent="function_definition [19014,19407]" at="0"/>
  <insert-node tree="identifier: curveMean [19023,19032]" parent="function_definition [19014,19407]" at="1"/>
  <insert-node tree="(: ( [19032,19033]" parent="function_definition [19014,19407]" at="2"/>
  <move-tree tree="parameter [66349,66368]" parent="function_definition [19014,19407]" at="3"/>
  <insert-node tree=",: , [19068,19069]" parent="function_definition [19014,19407]" at="4"/>
  <insert-tree tree="parameter [19079,19104]" parent="function_definition [19014,19407]" at="5"/>
  <insert-node tree="): ) [19110,19111]" parent="function_definition [19014,19407]" at="6"/>
  <move-tree tree="visibility [66332,66339]" parent="function_definition [19014,19407]" at="7"/>
  <move-tree tree="state_mutability [41266,41270]" parent="function_definition [19014,19407]" at="8"/>
  <insert-tree tree="return_type_definition [19125,19154]" parent="function_definition [19014,19407]" at="9"/>
  <insert-tree tree="function_body [19155,19407]" parent="function_definition [19014,19407]" at="10"/>
  <update-node tree="identifier: mint [51155,51159]" label="mintToAccount"/>
  <move-tree tree="visibility [20447,20455]" parent="function_definition [54745,54974]" at="7"/>
  <insert-node tree="function: function [54982,54990]" parent="function_definition [54982,55261]" at="0"/>
  <insert-node tree="identifier: burnFromAccount [54991,55006]" parent="function_definition [54982,55261]" at="1"/>
  <insert-node tree="(: ( [55006,55007]" parent="function_definition [54982,55261]" at="2"/>
  <move-tree tree="parameter [75108,75123]" parent="function_definition [54982,55261]" at="3"/>
  <insert-node tree=",: , [55022,55023]" parent="function_definition [54982,55261]" at="4"/>
  <move-tree tree="parameter [75125,75139]" parent="function_definition [54982,55261]" at="5"/>
  <insert-node tree="): ) [55038,55039]" parent="function_definition [54982,55261]" at="6"/>
  <move-tree tree="visibility [75163,75171]" parent="function_definition [54982,55261]" at="7"/>
  <move-tree tree="function_body [48253,48387]" parent="function_definition [54982,55261]" at="8"/>
  <update-node tree="identifier: burnFrom [23848,23856]" label="redeemToAccount"/>
  <move-tree tree="parameter [74860,74875]" parent="function_definition [55269,55505]" at="3"/>
  <move-tree tree="parameter [74877,74891]" parent="function_definition [55269,55505]" at="6"/>
  <move-tree tree="visibility [74893,74901]" parent="function_definition [55269,55505]" at="8"/>
  <insert-node tree="function: function [55513,55521]" parent="function_definition [55513,55718]" at="0"/>
  <insert-node tree="identifier: burnRedeemable [55522,55536]" parent="function_definition [55513,55718]" at="1"/>
  <insert-node tree="(: ( [55536,55537]" parent="function_definition [55513,55718]" at="2"/>
  <move-tree tree="parameter [75659,75673]" parent="function_definition [55513,55718]" at="3"/>
  <insert-node tree="): ) [55551,55552]" parent="function_definition [55513,55718]" at="4"/>
  <move-tree tree="visibility [75697,75705]" parent="function_definition [55513,55718]" at="5"/>
  <insert-node tree="function_body [55562,55718]" parent="function_definition [55513,55718]" at="6"/>
  <insert-node tree="function: function [55726,55734]" parent="function_definition [55726,55894]" at="0"/>
  <insert-node tree="identifier: increaseDebt [55735,55747]" parent="function_definition [55726,55894]" at="1"/>
  <insert-node tree="(: ( [55747,55748]" parent="function_definition [55726,55894]" at="2"/>
  <move-tree tree="parameter [75411,75425]" parent="function_definition [55726,55894]" at="3"/>
  <insert-node tree="): ) [55762,55763]" parent="function_definition [55726,55894]" at="4"/>
  <move-tree tree="visibility [75427,75435]" parent="function_definition [55726,55894]" at="5"/>
  <insert-node tree="function_body [55773,55894]" parent="function_definition [55726,55894]" at="6"/>
  <update-node tree="identifier: _mint [21138,21143]" label="decreaseDebt"/>
  <insert-node tree="function: function [56061,56069]" parent="function_definition [56061,57803]" at="0"/>
  <insert-node tree="identifier: increaseSupply [56070,56084]" parent="function_definition [56061,57803]" at="1"/>
  <insert-node tree="(: ( [56084,56085]" parent="function_definition [56061,57803]" at="2"/>
  <insert-node tree="parameter [56085,56102]" parent="function_definition [56061,57803]" at="3"/>
  <insert-node tree="): ) [56102,56103]" parent="function_definition [56061,57803]" at="4"/>
  <move-tree tree="visibility [78019,78027]" parent="function_definition [56061,57803]" at="5"/>
  <move-tree tree="return_type_definition [78028,78054]" parent="function_definition [56061,57803]" at="6"/>
  <insert-tree tree="function_body [56149,57803]" parent="function_definition [56061,57803]" at="7"/>
  <insert-node tree="function: function [57811,57819]" parent="function_definition [57811,58167]" at="0"/>
  <insert-node tree="identifier: resetDebt [57820,57829]" parent="function_definition [57811,58167]" at="1"/>
  <insert-node tree="(: ( [57829,57830]" parent="function_definition [57811,58167]" at="2"/>
  <insert-tree tree="parameter [57830,57865]" parent="function_definition [57811,58167]" at="3"/>
  <insert-node tree="): ) [57865,57866]" parent="function_definition [57811,58167]" at="4"/>
  <move-tree tree="visibility [67839,67847]" parent="function_definition [57811,58167]" at="5"/>
  <insert-node tree="function_body [57876,58167]" parent="function_definition [57811,58167]" at="6"/>
  <update-node tree="identifier: totalRewarded [72073,72086]" label="balanceCheck"/>
  <move-tree tree="visibility [84204,84211]" parent="function_definition [58175,58413]" at="4"/>
  <insert-node tree="function: function [58421,58429]" parent="function_definition [58421,58857]" at="0"/>
  <insert-node tree="identifier: mintToBonded [58430,58442]" parent="function_definition [58421,58857]" at="1"/>
  <insert-node tree="(: ( [58442,58443]" parent="function_definition [58421,58857]" at="2"/>
  <move-tree tree="parameter [76763,76777]" parent="function_definition [58421,58857]" at="3"/>
  <insert-node tree="): ) [58457,58458]" parent="function_definition [58421,58857]" at="4"/>
  <move-tree tree="visibility [67559,67566]" parent="function_definition [58421,58857]" at="5"/>
  <insert-node tree="function_body [58467,58857]" parent="function_definition [58421,58857]" at="6"/>
  <update-node tree="identifier: balanceCheck [84189,84201]" label="mintToDAO"/>
  <move-tree tree="parameter [76510,76524]" parent="function_definition [58865,59048]" at="3"/>
  <move-tree tree="visibility [48096,48103]" parent="function_definition [58865,59048]" at="5"/>
  <insert-node tree="function: function [59056,59064]" parent="function_definition [59056,59190]" at="0"/>
  <insert-node tree="identifier: mintToPool [59065,59075]" parent="function_definition [59056,59190]" at="1"/>
  <insert-node tree="(: ( [59075,59076]" parent="function_definition [59056,59190]" at="2"/>
  <move-tree tree="parameter [75948,75962]" parent="function_definition [59056,59190]" at="3"/>
  <insert-node tree="): ) [59090,59091]" parent="function_definition [59056,59190]" at="4"/>
  <move-tree tree="visibility [26691,26698]" parent="function_definition [59056,59190]" at="5"/>
  <insert-node tree="function_body [59100,59190]" parent="function_definition [59056,59190]" at="6"/>
  <insert-node tree="function: function [59198,59206]" parent="function_definition [59198,59373]" at="0"/>
  <insert-node tree="identifier: mintToRedeemable [59207,59223]" parent="function_definition [59198,59373]" at="1"/>
  <insert-node tree="(: ( [59223,59224]" parent="function_definition [59198,59373]" at="2"/>
  <move-tree tree="parameter [51354,51368]" parent="function_definition [59198,59373]" at="3"/>
  <insert-node tree="): ) [59238,59239]" parent="function_definition [59198,59373]" at="4"/>
  <move-tree tree="visibility [24061,24068]" parent="function_definition [59198,59373]" at="5"/>
  <insert-node tree="function_body [59248,59373]" parent="function_definition [59198,59373]" at="6"/>
  <update-node tree="identifier: Context [16312,16319]" label="Comptroller"/>
  <update-node tree="identifier: IERC20 [16321,16327]" label="Curve"/>
  <insert-node tree="event: event [60211,60216]" parent="event_definition [60211,60342]" at="0"/>
  <insert-node tree="identifier: CouponExpiration [60217,60233]" parent="event_definition [60211,60342]" at="1"/>
  <insert-node tree="(: ( [60233,60234]" parent="event_definition [60211,60342]" at="2"/>
  <insert-node tree="event_paramater [60234,60255]" parent="event_definition [60211,60342]" at="3"/>
  <insert-node tree=",: , [60255,60256]" parent="event_definition [60211,60342]" at="4"/>
  <insert-node tree="event_paramater [60257,60279]" parent="event_definition [60211,60342]" at="5"/>
  <insert-node tree=",: , [60279,60280]" parent="event_definition [60211,60342]" at="6"/>
  <insert-tree tree="event_paramater [60281,60303]" parent="event_definition [60211,60342]" at="7"/>
  <insert-node tree=",: , [60303,60304]" parent="event_definition [60211,60342]" at="8"/>
  <insert-tree tree="event_paramater [60305,60321]" parent="event_definition [60211,60342]" at="9"/>
  <insert-node tree=",: , [60321,60322]" parent="event_definition [60211,60342]" at="10"/>
  <insert-tree tree="event_paramater [60323,60340]" parent="event_definition [60211,60342]" at="11"/>
  <insert-node tree="): ) [60340,60341]" parent="event_definition [60211,60342]" at="12"/>
  <insert-node tree="event: event [60348,60353]" parent="event_definition [60348,60461]" at="0"/>
  <insert-node tree="identifier: CouponPurchase [60354,60368]" parent="event_definition [60348,60461]" at="1"/>
  <insert-node tree="(: ( [60368,60369]" parent="event_definition [60348,60461]" at="2"/>
  <move-tree tree="event_paramater [26647,26670]" parent="event_definition [60348,60461]" at="3"/>
  <insert-node tree=",: , [60392,60393]" parent="event_definition [60348,60461]" at="4"/>
  <insert-tree tree="event_paramater [60394,60415]" parent="event_definition [60348,60461]" at="5"/>
  <insert-node tree=",: , [60415,60416]" parent="event_definition [60348,60461]" at="6"/>
  <insert-tree tree="event_paramater [60417,60437]" parent="event_definition [60348,60461]" at="7"/>
  <insert-node tree=",: , [60437,60438]" parent="event_definition [60348,60461]" at="8"/>
  <insert-tree tree="event_paramater [60439,60459]" parent="event_definition [60348,60461]" at="9"/>
  <insert-node tree="): ) [60459,60460]" parent="event_definition [60348,60461]" at="10"/>
  <update-node tree="identifier: MinterAdded [26584,26595]" label="CouponRedemption"/>
  <insert-node tree=",: , [60513,60514]" parent="event_definition [60467,60560]" at="4"/>
  <insert-tree tree="event_paramater [60515,60536]" parent="event_definition [60467,60560]" at="5"/>
  <insert-node tree=",: , [60536,60537]" parent="event_definition [60467,60560]" at="6"/>
  <insert-tree tree="event_paramater [60538,60558]" parent="event_definition [60467,60560]" at="7"/>
  <update-node tree="identifier: PairCreated [51778,51789]" label="CouponTransfer"/>
  <move-tree tree="event_paramater [80474,80487]" parent="event_definition [60566,60667]" at="10"/>
  <insert-node tree="event: event [60673,60678]" parent="event_definition [60673,60757]" at="0"/>
  <insert-node tree="identifier: CouponApproval [60679,60693]" parent="event_definition [60673,60757]" at="1"/>
  <insert-node tree="(: ( [60693,60694]" parent="event_definition [60673,60757]" at="2"/>
  <insert-node tree="event_paramater [60694,60715]" parent="event_definition [60673,60757]" at="3"/>
  <insert-node tree=",: , [60715,60716]" parent="event_definition [60673,60757]" at="4"/>
  <move-tree tree="event_paramater [51838,51850]" parent="event_definition [60673,60757]" at="5"/>
  <insert-node tree=",: , [60740,60741]" parent="event_definition [60673,60757]" at="6"/>
  <move-tree tree="event_paramater [80246,80259]" parent="event_definition [60673,60757]" at="7"/>
  <insert-node tree="): ) [60755,60756]" parent="event_definition [60673,60757]" at="8"/>
  <update-node tree="identifier: unfreeze [77011,77019]" label="step"/>
  <insert-node tree="function: function [61189,61197]" parent="function_definition [61189,61882]" at="0"/>
  <insert-node tree="identifier: expireCouponsForEpoch [61198,61219]" parent="function_definition [61189,61882]" at="1"/>
  <insert-node tree="(: ( [61219,61220]" parent="function_definition [61189,61882]" at="2"/>
  <insert-tree tree="parameter [61220,61233]" parent="function_definition [61189,61882]" at="3"/>
  <insert-node tree="): ) [61233,61234]" parent="function_definition [61189,61882]" at="4"/>
  <move-tree tree="visibility [16511,16518]" parent="function_definition [61189,61882]" at="5"/>
  <insert-node tree="function_body [61243,61882]" parent="function_definition [61189,61882]" at="6"/>
  <update-node tree="identifier: totalPhantom [71963,71975]" label="couponPremium"/>
  <move-tree tree="parameter [76211,76225]" parent="function_definition [61890,62052]" at="3"/>
  <insert-node tree="function: function [62060,62068]" parent="function_definition [62060,62748]" at="0"/>
  <insert-node tree="identifier: purchaseCoupons [62069,62084]" parent="function_definition [62060,62748]" at="1"/>
  <insert-node tree="(: ( [62084,62085]" parent="function_definition [62060,62748]" at="2"/>
  <move-tree tree="parameter [77997,78017]" parent="function_definition [62060,62748]" at="3"/>
  <insert-node tree="): ) [62105,62106]" parent="function_definition [62060,62748]" at="4"/>
  <move-tree tree="visibility [48577,48585]" parent="function_definition [62060,62748]" at="5"/>
  <move-tree tree="return_type_definition [67567,67584]" parent="function_definition [62060,62748]" at="6"/>
  <insert-node tree="function_body [62134,62748]" parent="function_definition [62060,62748]" at="7"/>
  <insert-node tree="function: function [62756,62764]" parent="function_definition [62756,63158]" at="0"/>
  <insert-node tree="identifier: redeemCoupons [62765,62778]" parent="function_definition [62756,63158]" at="1"/>
  <insert-node tree="(: ( [62778,62779]" parent="function_definition [62756,63158]" at="2"/>
  <insert-tree tree="parameter [62779,62798]" parent="function_definition [62756,63158]" at="3"/>
  <insert-node tree=",: , [62798,62799]" parent="function_definition [62756,63158]" at="4"/>
  <insert-tree tree="parameter [62800,62820]" parent="function_definition [62756,63158]" at="5"/>
  <insert-node tree="): ) [62820,62821]" parent="function_definition [62756,63158]" at="6"/>
  <move-tree tree="visibility [68046,68054]" parent="function_definition [62756,63158]" at="7"/>
  <insert-node tree="function_body [62831,63158]" parent="function_definition [62756,63158]" at="8"/>
  <update-node tree="identifier: _approve [22566,22574]" label="approveCoupons"/>
  <move-tree tree="visibility [67947,67955]" parent="function_definition [63166,63452]" at="9"/>
  <update-node tree="identifier: _transfer [20386,20395]" label="transferCoupons"/>
  <insert-tree tree="parameter [63520,63533]" parent="function_definition [63460,64188]" at="7"/>
  <insert-node tree=",: , [63533,63534]" parent="function_definition [63460,64188]" at="8"/>
  <move-tree tree="visibility [63441,63449]" parent="function_definition [63460,64188]" at="11"/>
  <update-node tree="identifier: IOracle [64177,64184]" label="Comptroller"/>
  <insert-node tree="event: event [65013,65018]" parent="event_definition [65013,65132]" at="0"/>
  <insert-node tree="identifier: SupplyIncrease [65019,65033]" parent="event_definition [65013,65132]" at="1"/>
  <insert-node tree="(: ( [65033,65034]" parent="event_definition [65013,65132]" at="2"/>
  <insert-node tree="event_paramater [65034,65055]" parent="event_definition [65013,65132]" at="3"/>
  <insert-node tree=",: , [65055,65056]" parent="event_definition [65013,65132]" at="4"/>
  <insert-node tree="event_paramater [65057,65070]" parent="event_definition [65013,65132]" at="5"/>
  <insert-node tree=",: , [65070,65071]" parent="event_definition [65013,65132]" at="6"/>
  <insert-node tree="event_paramater [65072,65093]" parent="event_definition [65013,65132]" at="7"/>
  <insert-node tree=",: , [65093,65094]" parent="event_definition [65013,65132]" at="8"/>
  <insert-node tree="event_paramater [65095,65111]" parent="event_definition [65013,65132]" at="9"/>
  <insert-node tree=",: , [65111,65112]" parent="event_definition [65013,65132]" at="10"/>
  <insert-tree tree="event_paramater [65113,65130]" parent="event_definition [65013,65132]" at="11"/>
  <insert-node tree="): ) [65130,65131]" parent="event_definition [65013,65132]" at="12"/>
  <insert-node tree="event: event [65138,65143]" parent="event_definition [65138,65214]" at="0"/>
  <insert-node tree="identifier: SupplyDecrease [65144,65158]" parent="event_definition [65138,65214]" at="1"/>
  <insert-node tree="(: ( [65158,65159]" parent="event_definition [65138,65214]" at="2"/>
  <insert-node tree="event_paramater [65159,65180]" parent="event_definition [65138,65214]" at="3"/>
  <insert-node tree=",: , [65180,65181]" parent="event_definition [65138,65214]" at="4"/>
  <insert-node tree="event_paramater [65182,65195]" parent="event_definition [65138,65214]" at="5"/>
  <insert-node tree=",: , [65195,65196]" parent="event_definition [65138,65214]" at="6"/>
  <insert-node tree="event_paramater [65197,65212]" parent="event_definition [65138,65214]" at="7"/>
  <insert-node tree="): ) [65212,65213]" parent="event_definition [65138,65214]" at="8"/>
  <insert-node tree="event: event [65220,65225]" parent="event_definition [65220,65263]" at="0"/>
  <insert-node tree="identifier: SupplyNeutral [65226,65239]" parent="event_definition [65220,65263]" at="1"/>
  <insert-node tree="(: ( [65239,65240]" parent="event_definition [65220,65263]" at="2"/>
  <insert-node tree="event_paramater [65240,65261]" parent="event_definition [65220,65263]" at="3"/>
  <insert-node tree="): ) [65261,65262]" parent="event_definition [65220,65263]" at="4"/>
  <move-tree tree="visibility [64286,64293]" parent="state_variable_declaration [65271,65299]" at="1"/>
  <update-node tree="identifier: _index [64528,64534]" label="oraclePrice"/>
  <insert-node tree="function: function [65307,65315]" parent="function_definition [65307,65731]" at="0"/>
  <insert-node tree="identifier: step [65316,65320]" parent="function_definition [65307,65731]" at="1"/>
  <insert-node tree="(: ( [65320,65321]" parent="function_definition [65307,65731]" at="2"/>
  <insert-node tree="): ) [65321,65322]" parent="function_definition [65307,65731]" at="3"/>
  <move-tree tree="visibility [75964,75972]" parent="function_definition [65307,65731]" at="4"/>
  <insert-node tree="function_body [65332,65731]" parent="function_definition [65307,65731]" at="5"/>
  <update-node tree="identifier: totalStaged [71741,71752]" label="getOraclePrice"/>
  <insert-node tree="function: function [65833,65841]" parent="function_definition [65833,66142]" at="0"/>
  <insert-node tree="identifier: shrinkSupply [65842,65854]" parent="function_definition [65833,66142]" at="1"/>
  <insert-node tree="(: ( [65854,65855]" parent="function_definition [65833,66142]" at="2"/>
  <insert-tree tree="parameter [65855,65880]" parent="function_definition [65833,66142]" at="3"/>
  <insert-node tree="): ) [65880,65881]" parent="function_definition [65833,66142]" at="4"/>
  <move-tree tree="visibility [16475,16482]" parent="function_definition [65833,66142]" at="5"/>
  <insert-node tree="function_body [65890,66142]" parent="function_definition [65833,66142]" at="6"/>
  <update-node tree="identifier: updatePrice [66916,66927]" label="growSupply"/>
  <insert-tree tree="parameter [66170,66195]" parent="function_definition [66150,66574]" at="3"/>
  <move-tree tree="visibility [65725,65732]" parent="function_definition [66150,66574]" at="5"/>
  <insert-node tree="function: function [66582,66590]" parent="function_definition [66582,66844]" at="0"/>
  <insert-node tree="identifier: limit [66591,66596]" parent="function_definition [66582,66844]" at="1"/>
  <insert-node tree="(: ( [66596,66597]" parent="function_definition [66582,66844]" at="2"/>
  <insert-tree tree="parameter [66597,66622]" parent="function_definition [66582,66844]" at="3"/>
  <insert-node tree="): ) [66622,66623]" parent="function_definition [66582,66844]" at="4"/>
  <move-tree tree="visibility [16399,16406]" parent="function_definition [66582,66844]" at="5"/>
  <move-tree tree="state_mutability [72096,72100]" parent="function_definition [66582,66844]" at="6"/>
  <insert-tree tree="return_type_definition [66637,66666]" parent="function_definition [66582,66844]" at="7"/>
  <insert-tree tree="function_body [66667,66844]" parent="function_definition [66582,66844]" at="8"/>
  <update-node tree="identifier: capture [65449,65456]" label="oracleCapture"/>
  <move-tree tree="visibility [66930,66937]" parent="function_definition [66852,67204]" at="4"/>
  <move-tree tree="return_type_definition [66938,66967]" parent="function_definition [66852,67204]" at="5"/>
  <update-node tree="identifier: PoolSetters [79762,79773]" label="Setters"/>
  <update-node tree="identifier: Unbond [80345,80351]" label="Bond"/>
  <insert-node tree="event_paramater [69790,69813]" parent="event_definition [69724,69815]" at="9"/>
  <update-node tree="identifier: Bond [80273,80277]" label="Unbond"/>
  <insert-node tree=",: , [69887,69888]" parent="event_definition [69821,69914]" at="8"/>
  <insert-tree tree="event_paramater [69889,69912]" parent="event_definition [69821,69914]" at="9"/>
  <insert-node tree="function: function [69922,69930]" parent="function_definition [69922,70141]" at="0"/>
  <insert-node tree="identifier: step [69931,69935]" parent="function_definition [69922,70141]" at="1"/>
  <insert-node tree="(: ( [69935,69936]" parent="function_definition [69922,70141]" at="2"/>
  <insert-node tree="): ) [69936,69937]" parent="function_definition [69922,70141]" at="3"/>
  <move-tree tree="visibility [23133,23141]" parent="function_definition [69922,70141]" at="4"/>
  <insert-node tree="function_body [69947,70141]" parent="function_definition [69922,70141]" at="5"/>
  <insert-tree tree="modifier_invocation [70443,70473]" parent="function_definition [70401,70668]" at="6"/>
  <move-tree tree="parameter [81118,81131]" parent="function_definition [71209,71693]" at="3"/>
  <move-tree tree="modifier_invocation [80855,80877]" parent="function_definition [71209,71693]" at="7"/>
  <insert-node tree="function: function [71701,71709]" parent="function_definition [71701,72175]" at="0"/>
  <insert-node tree="identifier: unbondUnderlying [71710,71726]" parent="function_definition [71701,72175]" at="1"/>
  <insert-node tree="(: ( [71726,71727]" parent="function_definition [71701,72175]" at="2"/>
  <move-tree tree="parameter [82088,82101]" parent="function_definition [71701,72175]" at="3"/>
  <insert-node tree="): ) [71740,71741]" parent="function_definition [71701,72175]" at="4"/>
  <move-tree tree="visibility [82988,82996]" parent="function_definition [71701,72175]" at="5"/>
  <move-tree tree="modifier_invocation [81142,81164]" parent="function_definition [71701,72175]" at="6"/>
  <insert-node tree="function_body [71781,72175]" parent="function_definition [71701,72175]" at="7"/>
  <update-node tree="identifier: Provide [80441,80448]" label="Proposal"/>
  <insert-node tree="event_paramater [77110,77135]" parent="event_definition [77095,77201]" at="3"/>
  <insert-tree tree="event_paramater [77137,77160]" parent="event_definition [77095,77201]" at="5"/>
  <insert-node tree="event: event [77207,77212]" parent="event_definition [77207,77307]" at="0"/>
  <insert-node tree="identifier: Vote [77213,77217]" parent="event_definition [77207,77307]" at="1"/>
  <insert-node tree="(: ( [77217,77218]" parent="event_definition [77207,77307]" at="2"/>
  <move-tree tree="event_paramater [80449,80472]" parent="event_definition [77207,77307]" at="3"/>
  <insert-node tree=",: , [77241,77242]" parent="event_definition [77207,77307]" at="4"/>
  <insert-node tree="event_paramater [77243,77268]" parent="event_definition [77207,77307]" at="5"/>
  <insert-node tree=",: , [77268,77269]" parent="event_definition [77207,77307]" at="6"/>
  <insert-tree tree="event_paramater [77270,77289]" parent="event_definition [77207,77307]" at="7"/>
  <insert-node tree=",: , [77289,77290]" parent="event_definition [77207,77307]" at="8"/>
  <move-tree tree="event_paramater [80407,80427]" parent="event_definition [77207,77307]" at="9"/>
  <insert-node tree="): ) [77305,77306]" parent="event_definition [77207,77307]" at="10"/>
  <update-node tree="identifier: Claim [80215,80220]" label="Commit"/>
  <insert-node tree="event_paramater [77351,77376]" parent="event_definition [77313,77378]" at="5"/>
  <insert-node tree="function: function [77386,77394]" parent="function_definition [77386,79007]" at="0"/>
  <insert-node tree="identifier: vote [77395,77399]" parent="function_definition [77386,79007]" at="1"/>
  <insert-node tree="(: ( [77399,77400]" parent="function_definition [77386,79007]" at="2"/>
  <move-tree tree="parameter [78668,78682]" parent="function_definition [77386,79007]" at="3"/>
  <insert-node tree=",: , [77417,77418]" parent="function_definition [77386,79007]" at="4"/>
  <insert-tree tree="parameter [77419,77438]" parent="function_definition [77386,79007]" at="5"/>
  <insert-node tree="): ) [77438,77439]" parent="function_definition [77386,79007]" at="6"/>
  <move-tree tree="visibility [84129,84137]" parent="function_definition [77386,79007]" at="7"/>
  <move-tree tree="modifier_invocation [80574,80596]" parent="function_definition [77386,79007]" at="8"/>
  <insert-node tree="function_body [77480,79007]" parent="function_definition [77386,79007]" at="9"/>
  <insert-node tree="function: function [79015,79023]" parent="function_definition [79015,79818]" at="0"/>
  <insert-node tree="identifier: commit [79024,79030]" parent="function_definition [79015,79818]" at="1"/>
  <insert-node tree="(: ( [79030,79031]" parent="function_definition [79015,79818]" at="2"/>
  <move-tree tree="parameter [78684,78698]" parent="function_definition [79015,79818]" at="3"/>
  <insert-node tree="): ) [79048,79049]" parent="function_definition [79015,79818]" at="4"/>
  <move-tree tree="visibility [84014,84022]" parent="function_definition [79015,79818]" at="5"/>
  <insert-node tree="function_body [79059,79818]" parent="function_definition [79015,79818]" at="6"/>
  <insert-node tree="function: function [79826,79834]" parent="function_definition [79826,80609]" at="0"/>
  <insert-node tree="identifier: emergencyCommit [79835,79850]" parent="function_definition [79826,80609]" at="1"/>
  <insert-node tree="(: ( [79850,79851]" parent="function_definition [79826,80609]" at="2"/>
  <move-tree tree="parameter [83984,83997]" parent="function_definition [79826,80609]" at="3"/>
  <insert-node tree="): ) [79868,79869]" parent="function_definition [79826,80609]" at="4"/>
  <move-tree tree="visibility [81133,81141]" parent="function_definition [79826,80609]" at="5"/>
  <insert-node tree="function_body [79879,80609]" parent="function_definition [79826,80609]" at="6"/>
  <insert-node tree="function: function [80617,80625]" parent="function_definition [80617,80916]" at="0"/>
  <insert-node tree="identifier: canPropose [80626,80636]" parent="function_definition [80617,80916]" at="1"/>
  <insert-node tree="(: ( [80636,80637]" parent="function_definition [80617,80916]" at="2"/>
  <move-tree tree="parameter [76194,76209]" parent="function_definition [80617,80916]" at="3"/>
  <insert-node tree="): ) [80652,80653]" parent="function_definition [80617,80916]" at="4"/>
  <move-tree tree="visibility [77880,77887]" parent="function_definition [80617,80916]" at="5"/>
  <move-tree tree="state_mutability [72233,72237]" parent="function_definition [80617,80916]" at="6"/>
  <move-tree tree="return_type_definition [72238,72252]" parent="function_definition [80617,80916]" at="7"/>
  <insert-node tree="function_body [80682,80916]" parent="function_definition [80617,80916]" at="8"/>
  <insert-node tree="event: event [81738,81743]" parent="event_definition [81738,81809]" at="0"/>
  <insert-node tree="identifier: Advance [81744,81751]" parent="event_definition [81738,81809]" at="1"/>
  <insert-node tree="(: ( [81751,81752]" parent="event_definition [81738,81809]" at="2"/>
  <insert-tree tree="event_paramater [81752,81773]" parent="event_definition [81738,81809]" at="3"/>
  <insert-node tree=",: , [81773,81774]" parent="event_definition [81738,81809]" at="4"/>
  <insert-node tree="event_paramater [81775,81788]" parent="event_definition [81738,81809]" at="5"/>
  <insert-node tree=",: , [81788,81789]" parent="event_definition [81738,81809]" at="6"/>
  <insert-node tree="event_paramater [81790,81807]" parent="event_definition [81738,81809]" at="7"/>
  <insert-node tree="): ) [81807,81808]" parent="event_definition [81738,81809]" at="8"/>
  <insert-node tree="event: event [81815,81820]" parent="event_definition [81815,81878]" at="0"/>
  <insert-node tree="identifier: Incentivization [81821,81836]" parent="event_definition [81815,81878]" at="1"/>
  <insert-node tree="(: ( [81836,81837]" parent="event_definition [81815,81878]" at="2"/>
  <insert-tree tree="event_paramater [81837,81860]" parent="event_definition [81815,81878]" at="3"/>
  <insert-node tree=",: , [81860,81861]" parent="event_definition [81815,81878]" at="4"/>
  <insert-node tree="event_paramater [81862,81876]" parent="event_definition [81815,81878]" at="5"/>
  <insert-node tree="): ) [81876,81877]" parent="event_definition [81815,81878]" at="6"/>
  <insert-node tree="function: function [81886,81894]" parent="function_definition [81886,82291]" at="0"/>
  <insert-node tree="identifier: initialize [81895,81905]" parent="function_definition [81886,82291]" at="1"/>
  <insert-node tree="(: ( [81905,81906]" parent="function_definition [81886,82291]" at="2"/>
  <insert-node tree="): ) [81906,81907]" parent="function_definition [81886,82291]" at="3"/>
  <move-tree tree="modifier_invocation [107596,107607]" parent="function_definition [81886,82291]" at="4"/>
  <move-tree tree="visibility [107608,107614]" parent="function_definition [81886,82291]" at="5"/>
  <insert-node tree="function_body [81927,82291]" parent="function_definition [81886,82291]" at="6"/>
  <insert-node tree="function: function [82299,82307]" parent="function_definition [82299,82775]" at="0"/>
  <insert-node tree="identifier: advance [82308,82315]" parent="function_definition [82299,82775]" at="1"/>
  <insert-node tree="(: ( [82315,82316]" parent="function_definition [82299,82775]" at="2"/>
  <insert-node tree="): ) [82316,82317]" parent="function_definition [82299,82775]" at="3"/>
  <move-tree tree="visibility [107722,107730]" parent="function_definition [82299,82775]" at="4"/>
  <insert-node tree="function_body [82327,82775]" parent="function_definition [82299,82775]" at="5"/>
  <update-node tree="identifier: chainId [39656,39663]" label="totalSupply"/>
  <update-node tree="identifier: deadline [48503,48511]" label="totalDebt"/>
  <insert-node tree="{: { [17294,17295]" parent="function_body [17294,17392]" at="0"/>
  <insert-node tree="return_statement [17305,17385]" parent="function_body [17294,17392]" at="1"/>
  <insert-node tree="}: } [17391,17392]" parent="function_body [17294,17392]" at="2"/>
  <update-node tree="identifier: subtractedValue [19678,19693]" label="totalSupply"/>
  <update-node tree="identifier: addedValue [18965,18975]" label="totalDebt"/>
  <insert-node tree="{: { [17559,17560]" parent="function_body [17559,18703]" at="0"/>
  <insert-tree tree="variable_declaration_statement [17570,17640]" parent="function_body [17559,18703]" at="1"/>
  <insert-tree tree="variable_declaration_statement [17650,17720]" parent="function_body [17559,18703]" at="2"/>
  <insert-node tree="variable_declaration_statement [17732,17781]" parent="function_body [17559,18703]" at="3"/>
  <insert-node tree="variable_declaration_statement [17791,17836]" parent="function_body [17559,18703]" at="4"/>
  <insert-tree tree="variable_declaration_statement [17846,17925]" parent="function_body [17559,18703]" at="5"/>
  <insert-tree tree="if_statement [17937,18642]" parent="function_body [17559,18703]" at="6"/>
  <insert-tree tree="return_statement [18654,18696]" parent="function_body [17559,18703]" at="7"/>
  <insert-node tree="}: } [18702,18703]" parent="function_body [17559,18703]" at="8"/>
  <insert-node tree="identifier: debtRatio [18771,18780]" parent="parameter [18751,18780]" at="2"/>
  <insert-node tree="identifier: lower [19063,19068]" parent="parameter [19043,19068]" at="2"/>
  <insert-node tree="if_statement [54862,54940]" parent="function_body [54810,54974]" at="2"/>
  <insert-tree tree="expression_statement [54952,54967]" parent="function_body [54810,54974]" at="3"/>
  <insert-node tree="expression_statement [55124,55146]" parent="function_body [55049,55261]" at="2"/>
  <insert-node tree="expression_statement [55156,55227]" parent="function_body [55049,55261]" at="3"/>
  <insert-tree tree="expression_statement [55239,55254]" parent="function_body [55049,55261]" at="4"/>
  <move-tree tree="expression_statement [48987,49097]" parent="function_body [55336,55505]" at="2"/>
  <move-tree tree="expression_statement [82853,82868]" parent="function_body [55336,55505]" at="3"/>
  <insert-node tree="{: { [55562,55563]" parent="function_body [55562,55718]" at="0"/>
  <insert-node tree="expression_statement [55573,55595]" parent="function_body [55562,55718]" at="1"/>
  <move-tree tree="expression_statement [49231,49328]" parent="function_body [55562,55718]" at="2"/>
  <move-tree tree="expression_statement [81985,82000]" parent="function_body [55562,55718]" at="3"/>
  <insert-node tree="}: } [55717,55718]" parent="function_body [55562,55718]" at="4"/>
  <insert-node tree="{: { [55773,55774]" parent="function_body [55773,55894]" at="0"/>
  <insert-node tree="expression_statement [55784,55811]" parent="function_body [55773,55894]" at="1"/>
  <insert-tree tree="expression_statement [55821,55860]" parent="function_body [55773,55894]" at="2"/>
  <move-tree tree="expression_statement [81028,81043]" parent="function_body [55773,55894]" at="3"/>
  <insert-node tree="}: } [55893,55894]" parent="function_body [55773,55894]" at="4"/>
  <move-tree tree="expression_statement [80739,80754]" parent="function_body [55949,56053]" at="2"/>
  <move-tree tree="type_name [48208,48215]" parent="parameter [56085,56102]" at="0"/>
  <insert-node tree="identifier: newSupply [56093,56102]" parent="parameter [56085,56102]" at="1"/>
  <insert-node tree=",: , [56138,56139]" parent="return_type_definition [56113,56148]" at="5"/>
  <insert-tree tree="parameter [56140,56147]" parent="return_type_definition [56113,56148]" at="6"/>
  <insert-node tree="{: { [57876,57877]" parent="function_body [57876,58167]" at="0"/>
  <insert-node tree="variable_declaration_statement [57887,57964]" parent="function_body [57876,58167]" at="1"/>
  <insert-tree tree="variable_declaration_statement [57974,58008]" parent="function_body [57876,58167]" at="2"/>
  <insert-tree tree="if_statement [58020,58160]" parent="function_body [57876,58167]" at="3"/>
  <insert-node tree="}: } [58166,58167]" parent="function_body [57876,58167]" at="4"/>
  <move-tree tree="expression_statement [84223,84394]" parent="function_body [58207,58413]" at="1"/>
  <insert-node tree="{: { [58467,58468]" parent="function_body [58467,58857]" at="0"/>
  <move-tree tree="expression_statement [83041,83158]" parent="function_body [58467,58857]" at="1"/>
  <insert-node tree="variable_declaration_statement [58605,58678]" parent="function_body [58467,58857]" at="2"/>
  <insert-tree tree="variable_declaration_statement [58688,58757]" parent="function_body [58467,58857]" at="3"/>
  <insert-tree tree="expression_statement [58769,58792]" parent="function_body [58467,58857]" at="4"/>
  <insert-tree tree="expression_statement [58802,58823]" parent="function_body [58467,58857]" at="5"/>
  <move-tree tree="expression_statement [83863,83878]" parent="function_body [58467,58857]" at="6"/>
  <insert-node tree="}: } [58856,58857]" parent="function_body [58467,58857]" at="7"/>
  <insert-node tree="if_statement [58919,59041]" parent="function_body [58908,59048]" at="1"/>
  <insert-node tree="{: { [59100,59101]" parent="function_body [59100,59190]" at="0"/>
  <insert-node tree="if_statement [59111,59183]" parent="function_body [59100,59190]" at="1"/>
  <insert-node tree="}: } [59189,59190]" parent="function_body [59100,59190]" at="2"/>
  <insert-node tree="{: { [59248,59249]" parent="function_body [59248,59373]" at="0"/>
  <insert-node tree="expression_statement [59259,59296]" parent="function_body [59248,59373]" at="1"/>
  <insert-node tree="expression_statement [59306,59339]" parent="function_body [59248,59373]" at="2"/>
  <move-tree tree="expression_statement [81322,81337]" parent="function_body [59248,59373]" at="3"/>
  <insert-node tree="}: } [59372,59373]" parent="function_body [59248,59373]" at="4"/>
  <move-tree tree="type_name [16390,16397]" parent="event_paramater [60234,60255]" at="0"/>
  <insert-node tree="indexed: indexed [60242,60249]" parent="event_paramater [60234,60255]" at="1"/>
  <insert-node tree="identifier: epoch [60250,60255]" parent="event_paramater [60234,60255]" at="2"/>
  <move-tree tree="type_name [16465,16472]" parent="event_paramater [60257,60279]" at="0"/>
  <insert-node tree="identifier: couponsExpired [60265,60279]" parent="event_paramater [60257,60279]" at="1"/>
  <update-node tree="identifier: token0 [51806,51812]" label="from"/>
  <update-node tree="identifier: token1 [51830,51836]" label="to"/>
  <insert-node tree="indexed: indexed [60637,60644]" parent="event_paramater [60629,60650]" at="1"/>
  <insert-node tree="identifier: epoch [60645,60650]" parent="event_paramater [60629,60650]" at="2"/>
  <move-tree tree="type_name [77872,77879]" parent="event_paramater [60694,60715]" at="0"/>
  <insert-node tree="indexed: indexed [60702,60709]" parent="event_paramater [60694,60715]" at="1"/>
  <insert-node tree="identifier: owner [60710,60715]" parent="event_paramater [60694,60715]" at="2"/>
  <insert-node tree="indexed: indexed [60725,60732]" parent="event_paramater [60717,60740]" at="1"/>
  <update-node tree="identifier: pair [51846,51850]" label="spender"/>
  <insert-node tree="comment: // Expire prior coupons [60801,60824]" parent="function_body [60790,61181]" at="1"/>
  <insert-tree tree="for_statement [60834,60973]" parent="function_body [60790,61181]" at="2"/>
  <insert-node tree="comment: // Record expiry for current epoch's coupons [60985,61029]" parent="function_body [60790,61181]" at="3"/>
  <insert-node tree="variable_declaration_statement [61039,61110]" parent="function_body [60790,61181]" at="4"/>
  <insert-node tree="{: { [61243,61244]" parent="function_body [61243,61882]" at="0"/>
  <insert-tree tree="variable_declaration_statement [61254,61306]" parent="function_body [61243,61882]" at="1"/>
  <move-tree tree="variable_declaration_statement [83457,83516]" parent="function_body [61243,61882]" at="2"/>
  <insert-tree tree="expression_statement [61402,61437]" parent="function_body [61243,61882]" at="3"/>
  <insert-node tree="variable_declaration_statement [61449,61493]" parent="function_body [61243,61882]" at="4"/>
  <move-tree tree="variable_declaration_statement [73324,73377]" parent="function_body [61243,61882]" at="5"/>
  <insert-tree tree="if_statement [61551,61780]" parent="function_body [61243,61882]" at="6"/>
  <insert-tree tree="emit_statement [61792,61875]" parent="function_body [61243,61882]" at="7"/>
  <insert-node tree="}: } [61881,61882]" parent="function_body [61243,61882]" at="8"/>
  <insert-node tree="{: { [62134,62135]" parent="function_body [62134,62748]" at="0"/>
  <move-tree tree="expression_statement [20632,20724]" parent="function_body [62134,62748]" at="1"/>
  <move-tree tree="expression_statement [65019,65142]" parent="function_body [62134,62748]" at="2"/>
  <move-tree tree="variable_declaration_statement [66439,66477]" parent="function_body [62134,62748]" at="3"/>
  <move-tree tree="variable_declaration_statement [67221,67297]" parent="function_body [62134,62748]" at="4"/>
  <move-tree tree="expression_statement [83778,83849]" parent="function_body [62134,62748]" at="5"/>
  <move-tree tree="expression_statement [83721,83768]" parent="function_body [62134,62748]" at="6"/>
  <insert-tree tree="emit_statement [62642,62709]" parent="function_body [62134,62748]" at="7"/>
  <insert-tree tree="return_statement [62721,62741]" parent="function_body [62134,62748]" at="8"/>
  <insert-node tree="}: } [62747,62748]" parent="function_body [62134,62748]" at="9"/>
  <insert-node tree="{: { [62831,62832]" parent="function_body [62831,63158]" at="0"/>
  <insert-node tree="expression_statement [62842,62912]" parent="function_body [62831,63158]" at="1"/>
  <move-tree tree="expression_statement [21917,22007]" parent="function_body [62831,63158]" at="2"/>
  <insert-tree tree="expression_statement [63036,63078]" parent="function_body [62831,63158]" at="3"/>
  <insert-tree tree="emit_statement [63090,63151]" parent="function_body [62831,63158]" at="4"/>
  <insert-node tree="}: } [63157,63158]" parent="function_body [62831,63158]" at="5"/>
  <insert-node tree="expression_statement [63332,63384]" parent="function_body [63232,63452]" at="2"/>
  <move-tree tree="expression_statement [21837,21905]" parent="function_body [63560,64188]" at="3"/>
  <insert-node tree="expression_statement [63850,63902]" parent="function_body [63560,64188]" at="4"/>
  <move-tree tree="if_statement [51450,51701]" parent="function_body [63560,64188]" at="5"/>
  <move-tree tree="type_name [69816,69823]" parent="event_paramater [65034,65055]" at="0"/>
  <insert-node tree="indexed: indexed [65042,65049]" parent="event_paramater [65034,65055]" at="1"/>
  <insert-node tree="identifier: epoch [65050,65055]" parent="event_paramater [65034,65055]" at="2"/>
  <move-tree tree="type_name [69869,69876]" parent="event_paramater [65057,65070]" at="0"/>
  <insert-node tree="identifier: price [65065,65070]" parent="event_paramater [65057,65070]" at="1"/>
  <move-tree tree="type_name [69920,69927]" parent="event_paramater [65072,65093]" at="0"/>
  <insert-node tree="identifier: newRedeemable [65080,65093]" parent="event_paramater [65072,65093]" at="1"/>
  <move-tree tree="type_name [70184,70191]" parent="event_paramater [65095,65111]" at="0"/>
  <insert-node tree="identifier: lessDebt [65103,65111]" parent="event_paramater [65095,65111]" at="1"/>
  <move-tree tree="type_name [70106,70113]" parent="event_paramater [65159,65180]" at="0"/>
  <insert-node tree="indexed: indexed [65167,65174]" parent="event_paramater [65159,65180]" at="1"/>
  <insert-node tree="identifier: epoch [65175,65180]" parent="event_paramater [65159,65180]" at="2"/>
  <move-tree tree="type_name [69841,69848]" parent="event_paramater [65182,65195]" at="0"/>
  <insert-node tree="identifier: price [65190,65195]" parent="event_paramater [65182,65195]" at="1"/>
  <move-tree tree="type_name [69894,69901]" parent="event_paramater [65197,65212]" at="0"/>
  <insert-node tree="identifier: newDebt [65205,65212]" parent="event_paramater [65197,65212]" at="1"/>
  <move-tree tree="type_name [70131,70138]" parent="event_paramater [65240,65261]" at="0"/>
  <insert-node tree="indexed: indexed [65248,65255]" parent="event_paramater [65240,65261]" at="1"/>
  <insert-node tree="identifier: epoch [65256,65261]" parent="event_paramater [65240,65261]" at="2"/>
  <insert-node tree="{: { [65332,65333]" parent="function_body [65332,65731]" at="0"/>
  <move-tree tree="variable_declaration_statement [66387,66429]" parent="function_body [65332,65731]" at="1"/>
  <insert-tree tree="expression_statement [65399,65425]" parent="function_body [65332,65731]" at="2"/>
  <insert-tree tree="if_statement [65437,65570]" parent="function_body [65332,65731]" at="3"/>
  <insert-tree tree="if_statement [65582,65684]" parent="function_body [65332,65731]" at="4"/>
  <insert-tree tree="emit_statement [65696,65724]" parent="function_body [65332,65731]" at="5"/>
  <insert-node tree="}: } [65730,65731]" parent="function_body [65332,65731]" at="6"/>
  <insert-node tree="{: { [65890,65891]" parent="function_body [65890,66142]" at="0"/>
  <insert-tree tree="variable_declaration_statement [65901,65961]" parent="function_body [65890,66142]" at="1"/>
  <insert-node tree="variable_declaration_statement [65971,66023]" parent="function_body [65890,66142]" at="2"/>
  <insert-tree tree="expression_statement [66033,66055]" parent="function_body [65890,66142]" at="3"/>
  <insert-tree tree="emit_statement [66067,66118]" parent="function_body [65890,66142]" at="4"/>
  <insert-tree tree="return_statement [66128,66135]" parent="function_body [65890,66142]" at="5"/>
  <insert-node tree="}: } [66141,66142]" parent="function_body [65890,66142]" at="6"/>
  <insert-tree tree="variable_declaration_statement [66216,66316]" parent="function_body [66205,66574]" at="1"/>
  <insert-node tree="variable_declaration_statement [66326,66380]" parent="function_body [66205,66574]" at="2"/>
  <insert-tree tree="emit_statement [66489,66567]" parent="function_body [66205,66574]" at="4"/>
  <move-tree tree="variable_declaration_statement [67307,67404]" parent="function_body [66915,67204]" at="1"/>
  <insert-tree tree="if_statement [66999,67103]" parent="function_body [66915,67204]" at="2"/>
  <insert-tree tree="return_statement [67184,67197]" parent="function_body [66915,67204]" at="4"/>
  <move-tree tree="type_name [70159,70166]" parent="event_paramater [69790,69813]" at="0"/>
  <insert-node tree="identifier: valueUnderlying [69798,69813]" parent="event_paramater [69790,69813]" at="1"/>
  <insert-node tree="{: { [69947,69948]" parent="function_body [69947,70141]" at="0"/>
  <move-tree tree="expression_statement [49109,49219]" parent="function_body [69947,70141]" at="1"/>
  <insert-tree tree="expression_statement [70085,70107]" parent="function_body [69947,70141]" at="2"/>
  <insert-tree tree="expression_statement [70117,70134]" parent="function_body [69947,70141]" at="3"/>
  <insert-node tree="}: } [70140,70141]" parent="function_body [69947,70141]" at="4"/>
  <update-node tree="identifier: notPaused [80597,80606]" label="onlyFrozenOrLocked"/>
  <insert-node tree="(: ( [70208,70209]" parent="modifier_invocation [70190,70220]" at="1"/>
  <insert-tree tree="call_argument [70209,70219]" parent="modifier_invocation [70190,70220]" at="2"/>
  <insert-node tree="): ) [70219,70220]" parent="modifier_invocation [70190,70220]" at="3"/>
  <move-tree tree="expression_statement [81176,81213]" parent="function_body [70474,70668]" at="1"/>
  <update-node tree="identifier: notPaused [81432,81441]" label="onlyFrozenOrFluid"/>
  <insert-node tree="(: ( [70731,70732]" parent="modifier_invocation [70714,70743]" at="1"/>
  <move-tree tree="call_argument [83008,83018]" parent="modifier_invocation [70714,70743]" at="2"/>
  <insert-node tree="): ) [70742,70743]" parent="modifier_invocation [70714,70743]" at="3"/>
  <move-tree tree="expression_statement [80889,80925]" parent="function_body [70744,71201]" at="4"/>
  <insert-node tree="expression_statement [71006,71034]" parent="function_body [70744,71201]" at="4"/>
  <insert-node tree="emit_statement [71140,71194]" parent="function_body [70744,71201]" at="6"/>
  <update-node tree="identifier: onlyFrozen [80855,80865]" label="onlyFrozenOrFluid"/>
  <insert-tree tree="expression_statement [71290,71311]" parent="function_body [71279,71693]" at="1"/>
  <move-tree tree="expression_statement [81223,81310]" parent="function_body [71279,71693]" at="4"/>
  <insert-node tree="expression_statement [71471,71538]" parent="function_body [71279,71693]" at="4"/>
  <move-tree tree="expression_statement [81778,81822]" parent="function_body [71279,71693]" at="6"/>
  <update-node tree="identifier: onlyFrozen [81142,81152]" label="onlyFrozenOrFluid"/>
  <insert-node tree="{: { [71781,71782]" parent="function_body [71781,72175]" at="0"/>
  <move-tree tree="expression_statement [82123,82144]" parent="function_body [71781,72175]" at="1"/>
  <move-tree tree="variable_declaration_statement [83620,83709]" parent="function_body [71781,72175]" at="2"/>
  <move-tree tree="expression_statement [82543,82587]" parent="function_body [71781,72175]" at="3"/>
  <insert-node tree="expression_statement [71951,72017]" parent="function_body [71781,72175]" at="4"/>
  <move-tree tree="expression_statement [81832,81882]" parent="function_body [71781,72175]" at="5"/>
  <move-tree tree="emit_statement [82012,82057]" parent="function_body [71781,72175]" at="6"/>
  <insert-node tree="}: } [72174,72175]" parent="function_body [71781,72175]" at="7"/>
  <move-tree tree="type_name [64278,64285]" parent="event_paramater [77110,77135]" at="0"/>
  <insert-node tree="indexed: indexed [77118,77125]" parent="event_paramater [77110,77135]" at="1"/>
  <insert-node tree="identifier: candidate [77126,77135]" parent="event_paramater [77110,77135]" at="2"/>
  <insert-node tree="indexed: indexed [77170,77177]" parent="event_paramater [77162,77183]" at="1"/>
  <update-node tree="identifier: lessUsdc [80497,80505]" label="start"/>
  <update-node tree="identifier: newUniv2 [80515,80523]" label="period"/>
  <move-tree tree="type_name [64409,64416]" parent="event_paramater [77243,77268]" at="0"/>
  <insert-node tree="indexed: indexed [77251,77258]" parent="event_paramater [77243,77268]" at="1"/>
  <insert-node tree="identifier: candidate [77259,77268]" parent="event_paramater [77243,77268]" at="2"/>
  <update-node tree="identifier: newClaimable [80415,80427]" label="bonded"/>
  <move-tree tree="type_name [64381,64388]" parent="event_paramater [77351,77376]" at="0"/>
  <insert-node tree="indexed: indexed [77359,77366]" parent="event_paramater [77351,77376]" at="1"/>
  <insert-node tree="identifier: candidate [77367,77376]" parent="event_paramater [77351,77376]" at="2"/>
  <update-node tree="identifier: tokenA [78676,78682]" label="candidate"/>
  <update-node tree="identifier: onlyFrozen [80574,80584]" label="onlyFrozenOrLocked"/>
  <insert-node tree="{: { [77480,77481]" parent="function_body [77480,79007]" at="0"/>
  <move-tree tree="expression_statement [83303,83445]" parent="function_body [77480,79007]" at="1"/>
  <insert-node tree="if_statement [77618,77982]" parent="function_body [77480,79007]" at="2"/>
  <insert-node tree="expression_statement [77994,78129]" parent="function_body [77480,79007]" at="3"/>
  <move-tree tree="variable_declaration_statement [82353,82438]" parent="function_body [77480,79007]" at="4"/>
  <insert-tree tree="variable_declaration_statement [78190,78256]" parent="function_body [77480,79007]" at="5"/>
  <insert-tree tree="if_statement [78266,78325]" parent="function_body [77480,79007]" at="6"/>
  <insert-node tree="if_statement [78337,78475]" parent="function_body [77480,79007]" at="7"/>
  <insert-node tree="if_statement [78485,78626]" parent="function_body [77480,79007]" at="8"/>
  <insert-tree tree="if_statement [78636,78735]" parent="function_body [77480,79007]" at="9"/>
  <insert-tree tree="if_statement [78745,78846]" parent="function_body [77480,79007]" at="10"/>
  <move-tree tree="expression_statement [82752,82841]" parent="function_body [77480,79007]" at="11"/>
  <move-tree tree="expression_statement [82661,82742]" parent="function_body [77480,79007]" at="12"/>
  <insert-tree tree="emit_statement [78953,79000]" parent="function_body [77480,79007]" at="13"/>
  <insert-node tree="}: } [79006,79007]" parent="function_body [77480,79007]" at="14"/>
  <update-node tree="identifier: tokenB [78692,78698]" label="candidate"/>
  <insert-node tree="{: { [79059,79060]" parent="function_body [79059,79818]" at="0"/>
  <move-tree tree="expression_statement [84647,84757]" parent="function_body [79059,79818]" at="1"/>
  <insert-node tree="variable_declaration_statement [79192,79265]" parent="function_body [79059,79818]" at="2"/>
  <move-tree tree="expression_statement [84818,84908]" parent="function_body [79059,79818]" at="3"/>
  <move-tree tree="expression_statement [68150,68250]" parent="function_body [79059,79818]" at="4"/>
  <insert-node tree="expression_statement [79600,79731]" parent="function_body [79059,79818]" at="5"/>
  <insert-tree tree="expression_statement [79743,79764]" parent="function_body [79059,79818]" at="6"/>
  <move-tree tree="emit_statement [83890,83942]" parent="function_body [79059,79818]" at="7"/>
  <insert-node tree="}: } [79817,79818]" parent="function_body [79059,79818]" at="8"/>
  <update-node tree="identifier: token [83992,83997]" label="candidate"/>
  <insert-node tree="{: { [79879,79880]" parent="function_body [79879,80609]" at="0"/>
  <move-tree tree="expression_statement [83170,83291]" parent="function_body [79879,80609]" at="1"/>
  <insert-node tree="expression_statement [80012,80165]" parent="function_body [79879,80609]" at="2"/>
  <move-tree tree="expression_statement [82220,82341]" parent="function_body [79879,80609]" at="3"/>
  <insert-node tree="expression_statement [80391,80522]" parent="function_body [79879,80609]" at="4"/>
  <insert-tree tree="expression_statement [80534,80555]" parent="function_body [79879,80609]" at="5"/>
  <move-tree tree="emit_statement [81349,81379]" parent="function_body [79879,80609]" at="6"/>
  <insert-node tree="}: } [80608,80609]" parent="function_body [79879,80609]" at="7"/>
  <insert-node tree="{: { [80682,80683]" parent="function_body [80682,80916]" at="0"/>
  <insert-node tree="if_statement [80693,80756]" parent="function_body [80682,80916]" at="1"/>
  <move-tree tree="variable_declaration_statement [73173,73312]" parent="function_body [80682,80916]" at="2"/>
  <insert-tree tree="return_statement [80855,80903]" parent="function_body [80682,80916]" at="3"/>
  <insert-node tree="comment: // 1% [80904,80909]" parent="function_body [80682,80916]" at="4"/>
  <insert-node tree="}: } [80915,80916]" parent="function_body [80682,80916]" at="5"/>
  <move-tree tree="type_name [64611,64618]" parent="event_paramater [81775,81788]" at="0"/>
  <insert-node tree="identifier: block [81783,81788]" parent="event_paramater [81775,81788]" at="1"/>
  <move-tree tree="type_name [64541,64548]" parent="event_paramater [81790,81807]" at="0"/>
  <insert-node tree="identifier: timestamp [81798,81807]" parent="event_paramater [81790,81807]" at="1"/>
  <move-tree tree="type_name [16503,16510]" parent="event_paramater [81862,81876]" at="0"/>
  <insert-node tree="identifier: amount [81870,81876]" parent="event_paramater [81862,81876]" at="1"/>
  <insert-node tree="{: { [81927,81928]" parent="function_body [81927,82291]" at="0"/>
  <insert-node tree="comment: // committer reward: [81936,81956]" parent="function_body [81927,82291]" at="1"/>
  <move-tree tree="expression_statement [78472,78528]" parent="function_body [81927,82291]" at="2"/>
  <insert-node tree="comment: // 100 SSD to committer [81998,82021]" parent="function_body [81927,82291]" at="3"/>
  <insert-tree tree="expression_statement [82031,82099]" parent="function_body [81927,82291]" at="4"/>
  <insert-node tree="comment: //  4k SSD [82100,82110]" parent="function_body [81927,82291]" at="5"/>
  <insert-tree tree="expression_statement [82118,82186]" parent="function_body [81927,82291]" at="6"/>
  <insert-node tree="comment: //  4k SSD [82187,82197]" parent="function_body [81927,82291]" at="7"/>
  <insert-tree tree="expression_statement [82205,82273]" parent="function_body [81927,82291]" at="8"/>
  <insert-node tree="comment: //  4k SSD [82274,82284]" parent="function_body [81927,82291]" at="9"/>
  <insert-node tree="}: } [82290,82291]" parent="function_body [81927,82291]" at="10"/>
  <insert-node tree="{: { [82327,82328]" parent="function_body [82327,82775]" at="0"/>
  <insert-tree tree="expression_statement [82338,82353]" parent="function_body [82327,82775]" at="1"/>
  <insert-tree tree="expression_statement [82363,82380]" parent="function_body [82327,82775]" at="2"/>
  <insert-tree tree="expression_statement [82390,82404]" parent="function_body [82327,82775]" at="3"/>
  <insert-node tree="variable_declaration_statement [82416,82468]" parent="function_body [82327,82775]" at="4"/>
  <insert-node tree="comment: // 60e18 [82469,82477]" parent="function_body [82327,82775]" at="5"/>
  <insert-node tree="variable_declaration_statement [82487,82530]" parent="function_body [82327,82775]" at="6"/>
  <insert-node tree="comment: // 1.54$ = 154e16 [82531,82548]" parent="function_body [82327,82775]" at="7"/>
  <insert-node tree="variable_declaration_statement [82558,82606]" parent="function_body [82327,82775]" at="8"/>
  <move-tree tree="expression_statement [82597,82651]" parent="function_body [82327,82775]" at="9"/>
  <insert-tree tree="emit_statement [82664,82705]" parent="function_body [82327,82775]" at="10"/>
  <insert-node tree="emit_statement [82715,82768]" parent="function_body [82327,82775]" at="11"/>
  <insert-node tree="}: } [82774,82775]" parent="function_body [82327,82775]" at="12"/>
  <insert-node tree="return: return [17305,17311]" parent="return_statement [17305,17385]" at="0"/>
  <insert-node tree="call_expression [17312,17384]" parent="return_statement [17305,17385]" at="1"/>
  <insert-tree tree="variable_declaration [17732,17754]" parent="variable_declaration_statement [17732,17781]" at="0"/>
  <insert-node tree="=: = [17755,17756]" parent="variable_declaration_statement [17732,17781]" at="1"/>
  <insert-node tree="call_expression [17757,17780]" parent="variable_declaration_statement [17732,17781]" at="2"/>
  <insert-tree tree="variable_declaration [17791,17811]" parent="variable_declaration_statement [17791,17836]" at="0"/>
  <insert-node tree="=: = [17812,17813]" parent="variable_declaration_statement [17791,17836]" at="1"/>
  <insert-node tree="call_expression [17814,17835]" parent="variable_declaration_statement [17791,17836]" at="2"/>
  <insert-node tree="if: if [54862,54864]" parent="if_statement [54862,54940]" at="0"/>
  <insert-node tree="(: ( [54865,54866]" parent="if_statement [54862,54940]" at="1"/>
  <insert-tree tree="unary_expression [54866,54891]" parent="if_statement [54862,54940]" at="2"/>
  <insert-node tree="): ) [54891,54892]" parent="if_statement [54862,54940]" at="3"/>
  <insert-node tree="block_statement [54893,54940]" parent="if_statement [54862,54940]" at="4"/>
  <move-tree tree="call_expression [48290,48379]" parent="expression_statement [55060,55114]" at="0"/>
  <move-tree tree=",: , [48339,48340]" parent="call_expression [55060,55113]" at="8"/>
  <insert-node tree="call_expression [55124,55145]" parent="expression_statement [55124,55146]" at="0"/>
  <insert-node tree="call_expression [55156,55226]" parent="expression_statement [55156,55227]" at="0"/>
  <insert-node tree="call_expression [55573,55594]" parent="expression_statement [55573,55595]" at="0"/>
  <insert-node tree="call_expression [55784,55810]" parent="expression_statement [55784,55811]" at="0"/>
  <insert-tree tree="variable_declaration [57887,57905]" parent="variable_declaration_statement [57887,57964]" at="0"/>
  <insert-node tree="=: = [57906,57907]" parent="variable_declaration_statement [57887,57964]" at="1"/>
  <insert-node tree="call_expression [57908,57963]" parent="variable_declaration_statement [57887,57964]" at="2"/>
  <move-tree tree="variable_declaration [67596,67615]" parent="variable_declaration_statement [58605,58678]" at="0"/>
  <insert-node tree="=: = [58624,58625]" parent="variable_declaration_statement [58605,58678]" at="1"/>
  <insert-tree tree="call_expression [58626,58677]" parent="variable_declaration_statement [58605,58678]" at="2"/>
  <insert-node tree="if: if [58919,58921]" parent="if_statement [58919,59041]" at="0"/>
  <insert-node tree="(: ( [58922,58923]" parent="if_statement [58919,59041]" at="1"/>
  <insert-tree tree="binary_expression [58923,58933]" parent="if_statement [58919,59041]" at="2"/>
  <insert-node tree="): ) [58933,58934]" parent="if_statement [58919,59041]" at="3"/>
  <insert-node tree="block_statement [58935,59041]" parent="if_statement [58919,59041]" at="4"/>
  <insert-node tree="if: if [59111,59113]" parent="if_statement [59111,59183]" at="0"/>
  <insert-node tree="(: ( [59114,59115]" parent="if_statement [59111,59183]" at="1"/>
  <insert-tree tree="binary_expression [59115,59125]" parent="if_statement [59111,59183]" at="2"/>
  <insert-node tree="): ) [59125,59126]" parent="if_statement [59111,59183]" at="3"/>
  <insert-node tree="block_statement [59127,59183]" parent="if_statement [59111,59183]" at="4"/>
  <move-tree tree="call_expression [78558,78598]" parent="expression_statement [59259,59296]" at="0"/>
  <insert-node tree="call_expression [59306,59338]" parent="expression_statement [59306,59339]" at="0"/>
  <move-tree tree="variable_declaration [83620,83648]" parent="variable_declaration_statement [61039,61110]" at="0"/>
  <insert-node tree="=: = [61063,61064]" parent="variable_declaration_statement [61039,61110]" at="1"/>
  <move-tree tree="call_expression [77095,77143]" parent="variable_declaration_statement [61039,61110]" at="2"/>
  <insert-tree tree="call_expression [61120,61173]" parent="expression_statement [61120,61174]" at="0"/>
  <insert-tree tree="tuple_expression [61380,61389]" parent="variable_declaration_statement [61316,61390]" at="2"/>
  <move-tree tree="variable_declaration [83528,83560]" parent="variable_declaration_statement [61449,61493]" at="0"/>
  <insert-node tree="=: = [61473,61474]" parent="variable_declaration_statement [61449,61493]" at="1"/>
  <insert-tree tree="call_expression [61475,61492]" parent="variable_declaration_statement [61449,61493]" at="2"/>
  <insert-node tree="call_expression [61977,62044]" parent="return_statement [61970,62045]" at="1"/>
  <move-tree tree="call_expression [20652,20723]" parent="expression_statement [62145,62265]" at="0"/>
  <insert-node tree="call_expression [62463,62508]" parent="variable_declaration_statement [62440,62509]" at="2"/>
  <insert-node tree="call_expression [62842,62911]" parent="expression_statement [62842,62912]" at="0"/>
  <move-tree tree="call_expression [21938,22006]" parent="expression_statement [62922,63026]" at="0"/>
  <move-tree tree="call_argument [21961,21967]" parent="call_expression [62922,63025]" at="3"/>
  <insert-node tree="call_expression [63332,63383]" parent="expression_statement [63332,63384]" at="0"/>
  <update-node tree="identifier: Approval [22855,22863]" label="CouponApproval"/>
  <insert-tree tree="call_argument [63416,63426]" parent="emit_statement [63396,63445]" at="3"/>
  <move-tree tree="call_argument [21422,21428]" parent="emit_statement [63396,63445]" at="8"/>
  <move-tree tree="call_argument [21845,21866]" parent="call_expression [63752,63839]" at="3"/>
  <insert-node tree="call_expression [63850,63901]" parent="expression_statement [63850,63902]" at="0"/>
  <insert-node tree="binary_expression [63918,63993]" parent="if_statement [63914,64115]" at="2"/>
  <update-node tree="identifier: Transfer [20805,20813]" label="CouponTransfer"/>
  <insert-tree tree="call_argument [64166,64171]" parent="emit_statement [64127,64181]" at="7"/>
  <insert-node tree=",: , [64171,64172]" parent="emit_statement [64127,64181]" at="8"/>
  <insert-node tree="identifier: oraclePrice [65806,65817]" parent="return_statement [65799,65818]" at="1"/>
  <move-tree tree="variable_declaration [73173,73209]" parent="variable_declaration_statement [65971,66023]" at="0"/>
  <insert-node tree="=: = [65987,65988]" parent="variable_declaration_statement [65971,66023]" at="1"/>
  <insert-tree tree="call_expression [65989,66022]" parent="variable_declaration_statement [65971,66023]" at="2"/>
  <move-tree tree="variable_declaration [65782,65805]" parent="variable_declaration_statement [66326,66380]" at="0"/>
  <insert-node tree="=: = [66344,66345]" parent="variable_declaration_statement [66326,66380]" at="1"/>
  <insert-tree tree="call_expression [66346,66379]" parent="variable_declaration_statement [66326,66380]" at="2"/>
  <insert-node tree="variable_declaration_tuple [66926,66965]" parent="variable_declaration_statement [66926,66987]" at="0"/>
  <insert-tree tree="unary_expression [67117,67123]" parent="if_statement [67113,67172]" at="2"/>
  <move-tree tree="variable_declaration [82156,82179]" parent="variable_declaration_statement [70788,70946]" at="0"/>
  <insert-node tree="call_expression [71006,71033]" parent="expression_statement [71006,71034]" at="0"/>
  <insert-node tree="emit: emit [71140,71144]" parent="emit_statement [71140,71194]" at="0"/>
  <insert-node tree="identifier: Bond [71145,71149]" parent="emit_statement [71140,71194]" at="1"/>
  <insert-node tree="(: ( [71149,71150]" parent="emit_statement [71140,71194]" at="2"/>
  <insert-tree tree="call_argument [71150,71160]" parent="emit_statement [71140,71194]" at="3"/>
  <insert-node tree=",: , [71160,71161]" parent="emit_statement [71140,71194]" at="4"/>
  <insert-tree tree="call_argument [71162,71176]" parent="emit_statement [71140,71194]" at="5"/>
  <insert-node tree=",: , [71176,71177]" parent="emit_statement [71140,71194]" at="6"/>
  <insert-tree tree="call_argument [71178,71185]" parent="emit_statement [71140,71194]" at="7"/>
  <insert-node tree=",: , [71185,71186]" parent="emit_statement [71140,71194]" at="8"/>
  <move-tree tree="call_argument [81372,81377]" parent="emit_statement [71140,71194]" at="9"/>
  <insert-node tree="): ) [71192,71193]" parent="emit_statement [71140,71194]" at="10"/>
  <move-tree tree="variable_declaration [73092,73124]" parent="variable_declaration_statement [71323,71406]" at="0"/>
  <move-tree tree="call_expression [82470,82509]" parent="variable_declaration_statement [71323,71406]" at="2"/>
  <insert-node tree="call_expression [71471,71537]" parent="expression_statement [71471,71538]" at="0"/>
  <move-tree tree="variable_declaration [72977,72996]" parent="variable_declaration_statement [71825,71887]" at="0"/>
  <insert-node tree="call_expression [71951,72016]" parent="expression_statement [71951,72017]" at="0"/>
  <update-node tree="identifier: Bond [82017,82021]" label="Unbond"/>
  <insert-tree tree="call_argument [72152,72159]" parent="emit_statement [72112,72168]" at="7"/>
  <insert-node tree=",: , [72159,72160]" parent="emit_statement [72112,72168]" at="8"/>
  <insert-node tree="if: if [77618,77620]" parent="if_statement [77618,77982]" at="0"/>
  <insert-node tree="(: ( [77621,77622]" parent="if_statement [77618,77982]" at="1"/>
  <insert-tree tree="unary_expression [77622,77645]" parent="if_statement [77618,77982]" at="2"/>
  <insert-node tree="): ) [77645,77646]" parent="if_statement [77618,77982]" at="3"/>
  <insert-node tree="block_statement [77647,77982]" parent="if_statement [77618,77982]" at="4"/>
  <insert-node tree="call_expression [77994,78128]" parent="expression_statement [77994,78129]" at="0"/>
  <move-tree tree="variable_declaration [81567,81585]" parent="variable_declaration_statement [78141,78180]" at="0"/>
  <move-tree tree="call_expression [82376,82405]" parent="variable_declaration_statement [78141,78180]" at="3"/>
  <insert-node tree="if: if [78337,78339]" parent="if_statement [78337,78475]" at="0"/>
  <insert-node tree="(: ( [78340,78341]" parent="if_statement [78337,78475]" at="1"/>
  <insert-tree tree="member_expression [78341,78378]" parent="if_statement [78337,78475]" at="2"/>
  <insert-node tree="): ) [78378,78379]" parent="if_statement [78337,78475]" at="3"/>
  <insert-node tree="block_statement [78380,78475]" parent="if_statement [78337,78475]" at="4"/>
  <insert-node tree="if: if [78485,78487]" parent="if_statement [78485,78626]" at="0"/>
  <insert-node tree="(: ( [78488,78489]" parent="if_statement [78485,78626]" at="1"/>
  <insert-tree tree="member_expression [78489,78527]" parent="if_statement [78485,78626]" at="2"/>
  <insert-node tree="): ) [78527,78528]" parent="if_statement [78485,78626]" at="3"/>
  <insert-node tree="block_statement [78529,78626]" parent="if_statement [78485,78626]" at="4"/>
  <move-tree tree="variable_declaration [81486,81518]" parent="variable_declaration_statement [79192,79265]" at="0"/>
  <insert-node tree="=: = [79210,79211]" parent="variable_declaration_statement [79192,79265]" at="1"/>
  <insert-node tree="call_expression [79212,79264]" parent="variable_declaration_statement [79192,79265]" at="2"/>
  <insert-node tree="call_expression [79600,79730]" parent="expression_statement [79600,79731]" at="0"/>
  <update-node tree="identifier: Provide [83895,83902]" label="Commit"/>
  <insert-node tree="call_expression [80012,80164]" parent="expression_statement [80012,80165]" at="0"/>
  <insert-node tree="call_expression [80391,80521]" parent="expression_statement [80391,80522]" at="0"/>
  <update-node tree="identifier: Claim [81354,81359]" label="Commit"/>
  <insert-tree tree="call_argument [80591,80600]" parent="emit_statement [80567,80602]" at="5"/>
  <insert-node tree="if: if [80693,80695]" parent="if_statement [80693,80756]" at="0"/>
  <insert-node tree="(: ( [80696,80697]" parent="if_statement [80693,80756]" at="1"/>
  <insert-tree tree="binary_expression [80697,80715]" parent="if_statement [80693,80756]" at="2"/>
  <insert-node tree="): ) [80715,80716]" parent="if_statement [80693,80756]" at="3"/>
  <insert-node tree="block_statement [80717,80756]" parent="if_statement [80693,80756]" at="4"/>
  <insert-tree tree="variable_declaration [80768,80793]" parent="variable_declaration_statement [80768,80845]" at="0"/>
  <move-tree tree="call_expression [73212,73280]" parent="variable_declaration_statement [80768,80845]" at="2"/>
  <move-tree tree="variable_declaration [78208,78226]" parent="variable_declaration_statement [82416,82468]" at="0"/>
  <insert-node tree="=: = [82434,82435]" parent="variable_declaration_statement [82416,82468]" at="1"/>
  <insert-tree tree="call_expression [82436,82467]" parent="variable_declaration_statement [82416,82468]" at="2"/>
  <move-tree tree="variable_declaration [82448,82467]" parent="variable_declaration_statement [82487,82530]" at="0"/>
  <insert-node tree="=: = [82501,82502]" parent="variable_declaration_statement [82487,82530]" at="1"/>
  <insert-tree tree="call_expression [82503,82529]" parent="variable_declaration_statement [82487,82530]" at="2"/>
  <move-tree tree="variable_declaration [82353,82373]" parent="variable_declaration_statement [82558,82606]" at="0"/>
  <insert-node tree="=: = [82573,82574]" parent="variable_declaration_statement [82558,82606]" at="1"/>
  <insert-tree tree="call_expression [82575,82605]" parent="variable_declaration_statement [82558,82606]" at="2"/>
  <insert-node tree="emit: emit [82715,82719]" parent="emit_statement [82715,82768]" at="0"/>
  <insert-node tree="identifier: Advance [82720,82727]" parent="emit_statement [82715,82768]" at="1"/>
  <insert-node tree="(: ( [82727,82728]" parent="emit_statement [82715,82768]" at="2"/>
  <insert-tree tree="call_argument [82728,82735]" parent="emit_statement [82715,82768]" at="3"/>
  <insert-node tree=",: , [82735,82736]" parent="emit_statement [82715,82768]" at="4"/>
  <insert-tree tree="call_argument [82737,82749]" parent="emit_statement [82715,82768]" at="5"/>
  <insert-node tree=",: , [82749,82750]" parent="emit_statement [82715,82768]" at="6"/>
  <move-tree tree="call_argument [58695,58720]" parent="emit_statement [82715,82768]" at="7"/>
  <insert-node tree="): ) [82766,82767]" parent="emit_statement [82715,82768]" at="8"/>
  <insert-node tree="member_expression [17312,17382]" parent="call_expression [17312,17384]" at="0"/>
  <insert-node tree="(: ( [17382,17383]" parent="call_expression [17312,17384]" at="1"/>
  <insert-node tree="): ) [17383,17384]" parent="call_expression [17312,17384]" at="2"/>
  <insert-tree tree="member_expression [17757,17772]" parent="call_expression [17757,17780]" at="0"/>
  <insert-node tree="(: ( [17772,17773]" parent="call_expression [17757,17780]" at="1"/>
  <move-tree tree="call_argument [76134,76140]" parent="call_expression [17757,17780]" at="2"/>
  <insert-node tree="): ) [17779,17780]" parent="call_expression [17757,17780]" at="3"/>
  <insert-tree tree="member_expression [17814,17827]" parent="call_expression [17814,17835]" at="0"/>
  <insert-node tree="(: ( [17827,17828]" parent="call_expression [17814,17835]" at="1"/>
  <move-tree tree="call_argument [75253,75259]" parent="call_expression [17814,17835]" at="2"/>
  <insert-node tree="): ) [17834,17835]" parent="call_expression [17814,17835]" at="3"/>
  <insert-node tree="member_expression [54821,54834]" parent="call_expression [54821,54851]" at="0"/>
  <insert-node tree="{: { [54893,54894]" parent="block_statement [54893,54940]" at="0"/>
  <insert-node tree="expression_statement [54908,54929]" parent="block_statement [54893,54940]" at="1"/>
  <insert-node tree="}: } [54939,54940]" parent="block_statement [54893,54940]" at="2"/>
  <move-tree tree="identifier: LibEIP712 [48290,48299]" parent="member_expression [55060,55081]" at="1"/>
  <move-tree tree="call_argument [27128,27135]" parent="call_expression [55060,55113]" at="2"/>
  <move-tree tree="call_argument [51432,51438]" parent="call_expression [55060,55113]" at="10"/>
  <insert-tree tree="member_expression [55124,55137]" parent="call_expression [55124,55145]" at="0"/>
  <insert-node tree="(: ( [55137,55138]" parent="call_expression [55124,55145]" at="1"/>
  <move-tree tree="call_argument [23762,23768]" parent="call_expression [55124,55145]" at="2"/>
  <insert-node tree="): ) [55144,55145]" parent="call_expression [55124,55145]" at="3"/>
  <insert-node tree="identifier: decrementTotalDebt [55156,55174]" parent="call_expression [55156,55226]" at="0"/>
  <insert-node tree="(: ( [55174,55175]" parent="call_expression [55156,55226]" at="1"/>
  <move-tree tree="call_argument [75517,75523]" parent="call_expression [55156,55226]" at="2"/>
  <insert-node tree=",: , [55181,55182]" parent="call_expression [55156,55226]" at="3"/>
  <move-tree tree="call_argument [49193,49207]" parent="call_expression [55156,55226]" at="4"/>
  <insert-node tree="): ) [55225,55226]" parent="call_expression [55156,55226]" at="5"/>
  <insert-tree tree="member_expression [55347,55364]" parent="call_expression [55347,55381]" at="0"/>
  <insert-node tree="identifier: decrementTotalRedeemable [55392,55416]" parent="call_expression [55392,55470]" at="0"/>
  <move-tree tree="call_argument [75329,75335]" parent="call_expression [55392,55470]" at="3"/>
  <insert-node tree="member_expression [55573,55586]" parent="call_expression [55573,55594]" at="0"/>
  <insert-node tree="(: ( [55586,55587]" parent="call_expression [55573,55594]" at="1"/>
  <move-tree tree="call_argument [75585,75591]" parent="call_expression [55573,55594]" at="2"/>
  <insert-node tree="): ) [55593,55594]" parent="call_expression [55573,55594]" at="3"/>
  <insert-node tree="identifier: decrementTotalRedeemable [55605,55629]" parent="call_expression [55605,55683]" at="0"/>
  <move-tree tree="call_argument [74983,74989]" parent="call_expression [55605,55683]" at="3"/>
  <insert-node tree="identifier: incrementTotalDebt [55784,55802]" parent="call_expression [55784,55810]" at="0"/>
  <insert-node tree="(: ( [55802,55803]" parent="call_expression [55784,55810]" at="1"/>
  <move-tree tree="call_argument [75051,75057]" parent="call_expression [55784,55810]" at="2"/>
  <insert-node tree="): ) [55809,55810]" parent="call_expression [55784,55810]" at="3"/>
  <update-node tree="identifier: require [21197,21204]" label="decrementTotalDebt"/>
  <move-tree tree="call_argument [17195,17201]" parent="call_expression [55960,56018]" at="2"/>
  <insert-node tree="member_expression [57908,57961]" parent="call_expression [57908,57963]" at="0"/>
  <insert-node tree="(: ( [57961,57962]" parent="call_expression [57908,57963]" at="1"/>
  <insert-node tree="): ) [57962,57963]" parent="call_expression [57908,57963]" at="2"/>
  <update-node tree="identifier: lastReserve [67604,67615]" label="poolAmount"/>
  <insert-node tree="{: { [58935,58936]" parent="block_statement [58935,59041]" at="0"/>
  <insert-node tree="expression_statement [58950,58987]" parent="block_statement [58935,59041]" at="1"/>
  <insert-node tree="expression_statement [59001,59030]" parent="block_statement [58935,59041]" at="2"/>
  <insert-node tree="}: } [59040,59041]" parent="block_statement [58935,59041]" at="3"/>
  <insert-node tree="{: { [59127,59128]" parent="block_statement [59127,59183]" at="0"/>
  <insert-node tree="expression_statement [59142,59172]" parent="block_statement [59127,59183]" at="1"/>
  <insert-node tree="}: } [59182,59183]" parent="block_statement [59127,59183]" at="2"/>
  <insert-node tree=",: , [59286,59287]" parent="call_expression [59259,59295]" at="3"/>
  <move-tree tree="call_argument [17691,17697]" parent="call_expression [59259,59295]" at="4"/>
  <insert-node tree="identifier: incrementTotalRedeemable [59306,59330]" parent="call_expression [59306,59338]" at="0"/>
  <insert-node tree="(: ( [59330,59331]" parent="call_expression [59306,59338]" at="1"/>
  <move-tree tree="call_argument [18335,18341]" parent="call_expression [59306,59338]" at="2"/>
  <insert-node tree="): ) [59337,59338]" parent="call_expression [59306,59338]" at="3"/>
  <insert-node tree="uint256: uint256 [60629,60636]" parent="primitive_type [60629,60636]" at="0"/>
  <update-node tree="identifier: newPhantomFromBonded [83628,83648]" label="expirationEpoch"/>
  <insert-tree tree="variable_declaration [61341,61357]" parent="variable_declaration_tuple [61316,61377]" at="3"/>
  <insert-node tree=",: , [61357,61358]" parent="variable_declaration_tuple [61316,61377]" at="4"/>
  <insert-tree tree="variable_declaration [61359,61376]" parent="variable_declaration_tuple [61316,61377]" at="5"/>
  <update-node tree="identifier: totalRewardedWithPhantom [83536,83560]" label="totalRedeemable"/>
  <update-node tree="identifier: balanceOfPhantom [73332,73348]" label="totalCoupons"/>
  <update-node tree="identifier: balanceOfPhantom [73351,73367]" label="totalCoupons"/>
  <insert-node tree="identifier: calculateCouponPremium [61977,61999]" parent="call_expression [61977,62044]" at="0"/>
  <insert-node tree="(: ( [61999,62000]" parent="call_expression [61977,62044]" at="1"/>
  <insert-tree tree="call_argument [62000,62022]" parent="call_expression [61977,62044]" at="2"/>
  <insert-node tree=",: , [62022,62023]" parent="call_expression [61977,62044]" at="3"/>
  <insert-tree tree="call_argument [62024,62035]" parent="call_expression [61977,62044]" at="4"/>
  <insert-node tree=",: , [62035,62036]" parent="call_expression [61977,62044]" at="5"/>
  <move-tree tree="call_argument [75787,75793]" parent="call_expression [61977,62044]" at="6"/>
  <insert-node tree="): ) [62043,62044]" parent="call_expression [61977,62044]" at="7"/>
  <move-tree tree="member_expression [48987,48999]" parent="call_expression [62145,62264]" at="0"/>
  <insert-tree tree="call_argument [62172,62188]" parent="call_expression [62145,62264]" at="2"/>
  <move-tree tree="call_argument [49047,49051]" parent="call_expression [62145,62264]" at="6"/>
  <insert-node tree=",: , [62207,62208]" parent="call_expression [62145,62264]" at="5"/>
  <update-node tree="identifier: lastReserve [66447,66458]" label="epoch"/>
  <update-node tree="identifier: updateReserve [66461,66474]" label="epoch"/>
  <update-node tree="identifier: priceCumulative [67229,67244]" label="couponAmount"/>
  <insert-tree tree="member_expression [62463,62479]" parent="call_expression [62463,62508]" at="0"/>
  <insert-node tree="(: ( [62479,62480]" parent="call_expression [62463,62508]" at="1"/>
  <insert-node tree="call_argument [62480,62507]" parent="call_expression [62463,62508]" at="2"/>
  <insert-node tree="): ) [62507,62508]" parent="call_expression [62463,62508]" at="3"/>
  <update-node tree="identifier: incrementBalanceOfPhantom [83778,83803]" label="burnFromAccount"/>
  <move-tree tree="call_argument [78448,78460]" parent="call_expression [62519,62560]" at="4"/>
  <update-node tree="identifier: incrementBalanceOfBonded [83721,83745]" label="incrementBalanceOfCoupons"/>
  <insert-node tree=",: , [62614,62615]" parent="call_expression [62571,62629]" at="5"/>
  <insert-tree tree="call_argument [62616,62628]" parent="call_expression [62571,62629]" at="6"/>
  <insert-node tree="identifier: require [62842,62849]" parent="call_expression [62842,62911]" at="0"/>
  <insert-node tree="(: ( [62849,62850]" parent="call_expression [62842,62911]" at="1"/>
  <insert-tree tree="call_argument [62850,62879]" parent="call_expression [62842,62911]" at="2"/>
  <insert-node tree=",: , [62879,62880]" parent="call_expression [62842,62911]" at="3"/>
  <move-tree tree="call_argument [22672,22710]" parent="call_expression [62842,62911]" at="4"/>
  <insert-node tree="): ) [62910,62911]" parent="call_expression [62842,62911]" at="5"/>
  <insert-node tree="identifier: decrementBalanceOfCoupons [62922,62947]" parent="call_expression [62922,63025]" at="0"/>
  <move-tree tree="call_argument [79915,79925]" parent="call_expression [62922,63025]" at="3"/>
  <insert-node tree=",: , [62971,62972]" parent="call_expression [62922,63025]" at="5"/>
  <insert-tree tree="call_argument [62973,62985]" parent="call_expression [62922,63025]" at="6"/>
  <insert-node tree=",: , [62985,62986]" parent="call_expression [62922,63025]" at="7"/>
  <insert-node tree="identifier: updateAllowanceCoupons [63332,63354]" parent="call_expression [63332,63383]" at="0"/>
  <insert-node tree="(: ( [63354,63355]" parent="call_expression [63332,63383]" at="1"/>
  <insert-tree tree="call_argument [63355,63365]" parent="call_expression [63332,63383]" at="2"/>
  <insert-node tree=",: , [63365,63366]" parent="call_expression [63332,63383]" at="3"/>
  <move-tree tree="call_argument [49356,49363]" parent="call_expression [63332,63383]" at="4"/>
  <insert-node tree=",: , [63374,63375]" parent="call_expression [63332,63383]" at="5"/>
  <move-tree tree="call_argument [75863,75869]" parent="call_expression [63332,63383]" at="6"/>
  <insert-node tree="): ) [63382,63383]" parent="call_expression [63332,63383]" at="7"/>
  <update-node tree="identifier: require [21837,21844]" label="decrementBalanceOfCoupons"/>
  <move-tree tree="call_argument [51413,51419]" parent="call_expression [63752,63839]" at="2"/>
  <insert-node tree=",: , [63791,63792]" parent="call_expression [63752,63839]" at="5"/>
  <move-tree tree="call_argument [23168,23174]" parent="call_expression [63752,63839]" at="6"/>
  <insert-node tree=",: , [63799,63800]" parent="call_expression [63752,63839]" at="7"/>
  <insert-node tree="identifier: incrementBalanceOfCoupons [63850,63875]" parent="call_expression [63850,63901]" at="0"/>
  <insert-node tree="(: ( [63875,63876]" parent="call_expression [63850,63901]" at="1"/>
  <move-tree tree="call_argument [51421,51430]" parent="call_expression [63850,63901]" at="2"/>
  <insert-node tree=",: , [63885,63886]" parent="call_expression [63850,63901]" at="3"/>
  <insert-tree tree="call_argument [63887,63892]" parent="call_expression [63850,63901]" at="4"/>
  <insert-node tree=",: , [63892,63893]" parent="call_expression [63850,63901]" at="5"/>
  <move-tree tree="call_argument [76427,76433]" parent="call_expression [63850,63901]" at="6"/>
  <insert-node tree="): ) [63900,63901]" parent="call_expression [63850,63901]" at="7"/>
  <insert-node tree="binary_expression [63918,63938]" parent="binary_expression [63918,63993]" at="0"/>
  <insert-node tree="&amp;&amp;: &amp;&amp; [63939,63941]" parent="binary_expression [63918,63993]" at="1"/>
  <move-tree tree="binary_expression [51454,51500]" parent="binary_expression [63918,63993]" at="2"/>
  <update-node tree="identifier: updatePrice [66415,66426]" label="oracleCapture"/>
  <update-node tree="identifier: balanceOfRewardedWithPhantom [73181,73209]" label="newDebt"/>
  <update-node tree="identifier: priceCumulative [65790,65805]" label="newSupply"/>
  <insert-node tree="identifier: increaseSupply [66453,66467]" parent="call_expression [66453,66478]" at="0"/>
  <insert-node tree="(: ( [66926,66927]" parent="variable_declaration_tuple [66926,66965]" at="0"/>
  <move-tree tree="variable_declaration [67307,67332]" parent="variable_declaration_tuple [66926,66965]" at="1"/>
  <insert-node tree=",: , [66952,66953]" parent="variable_declaration_tuple [66926,66965]" at="2"/>
  <move-tree tree="variable_declaration [66564,66574]" parent="variable_declaration_tuple [66926,66965]" at="3"/>
  <insert-node tree="): ) [66964,66965]" parent="variable_declaration_tuple [66926,66965]" at="4"/>
  <move-tree tree="member_expression [107959,107973]" parent="call_expression [66968,66986]" at="0"/>
  <move-tree tree="call_argument [23265,23303]" parent="call_expression [69958,70072]" at="6"/>
  <update-node tree="identifier: balanceOfBonded [82164,82179]" label="balance"/>
  <insert-node tree="identifier: incrementBalanceOf [70956,70974]" parent="call_expression [70956,70995]" at="0"/>
  <insert-tree tree="call_argument [70987,70994]" parent="call_expression [70956,70995]" at="4"/>
  <insert-node tree="identifier: incrementTotalBonded [71006,71026]" parent="call_expression [71006,71033]" at="0"/>
  <insert-node tree="(: ( [71026,71027]" parent="call_expression [71006,71033]" at="1"/>
  <move-tree tree="call_argument [80918,80923]" parent="call_expression [71006,71033]" at="2"/>
  <insert-node tree="): ) [71032,71033]" parent="call_expression [71006,71033]" at="3"/>
  <update-node tree="identifier: totalRewardedWithPhantom [73100,73124]" label="staged"/>
  <update-node tree="identifier: decrementBalanceOfClaimable [81223,81250]" label="incrementBalanceOfStaged"/>
  <insert-tree tree="call_argument [71453,71459]" parent="call_expression [71416,71460]" at="4"/>
  <insert-node tree="identifier: decrementTotalBonded [71471,71491]" parent="call_expression [71471,71537]" at="0"/>
  <insert-node tree="(: ( [71491,71492]" parent="call_expression [71471,71537]" at="1"/>
  <insert-tree tree="call_argument [71492,71498]" parent="call_expression [71471,71537]" at="2"/>
  <insert-node tree=",: , [71498,71499]" parent="call_expression [71471,71537]" at="3"/>
  <move-tree tree="call_argument [19816,19855]" parent="call_expression [71471,71537]" at="4"/>
  <insert-node tree="): ) [71536,71537]" parent="call_expression [71471,71537]" at="5"/>
  <update-node tree="identifier: incrementBalanceOfBonded [81778,81802]" label="decrementBalanceOf"/>
  <insert-node tree=",: , [71584,71585]" parent="call_expression [71548,71618]" at="5"/>
  <move-tree tree="call_argument [18430,18472]" parent="call_expression [71548,71618]" at="6"/>
  <update-node tree="identifier: newClaimable [82927,82939]" label="staged"/>
  <update-node tree="identifier: totalBonded [72985,72996]" label="balance"/>
  <insert-node tree="identifier: decrementTotalBonded [71951,71971]" parent="call_expression [71951,72016]" at="0"/>
  <insert-node tree="(: ( [71971,71972]" parent="call_expression [71951,72016]" at="1"/>
  <move-tree tree="call_argument [81263,81268]" parent="call_expression [71951,72016]" at="2"/>
  <insert-node tree=",: , [71977,71978]" parent="call_expression [71951,72016]" at="3"/>
  <move-tree tree="call_argument [84564,84576]" parent="call_expression [71951,72016]" at="4"/>
  <insert-node tree="): ) [72015,72016]" parent="call_expression [71951,72016]" at="5"/>
  <update-node tree="identifier: incrementBalanceOfPhantom [81832,81857]" label="decrementBalanceOf"/>
  <insert-node tree=",: , [72065,72066]" parent="call_expression [72027,72099]" at="5"/>
  <move-tree tree="call_argument [83402,83433]" parent="call_expression [72027,72099]" at="6"/>
  <move-tree tree="call_argument [56951,56988]" parent="call_expression [77491,77605]" at="6"/>
  <insert-node tree="{: { [77647,77648]" parent="block_statement [77647,77982]" at="0"/>
  <insert-node tree="expression_statement [77662,77802]" parent="block_statement [77647,77982]" at="1"/>
  <insert-tree tree="expression_statement [77818,77878]" parent="block_statement [77647,77982]" at="2"/>
  <insert-tree tree="emit_statement [77892,77971]" parent="block_statement [77647,77982]" at="3"/>
  <insert-node tree="}: } [77981,77982]" parent="block_statement [77647,77982]" at="4"/>
  <move-tree tree="member_expression [49231,49243]" parent="call_expression [77994,78128]" at="0"/>
  <insert-node tree="(: ( [78006,78007]" parent="call_expression [77994,78128]" at="1"/>
  <insert-tree tree="call_argument [78021,78076]" parent="call_expression [77994,78128]" at="2"/>
  <insert-node tree=",: , [78076,78077]" parent="call_expression [77994,78128]" at="3"/>
  <move-tree tree="call_argument [49288,49292]" parent="call_expression [77994,78128]" at="4"/>
  <insert-node tree=",: , [78095,78096]" parent="call_expression [77994,78128]" at="5"/>
  <move-tree tree="call_argument [57318,57343]" parent="call_expression [77994,78128]" at="6"/>
  <insert-node tree="): ) [78127,78128]" parent="call_expression [77994,78128]" at="7"/>
  <update-node tree="identifier: newPhantom [81575,81585]" label="bonded"/>
  <update-node tree="identifier: balanceOfRewarded [82376,82393]" label="balanceOf"/>
  <insert-node tree="{: { [78380,78381]" parent="block_statement [78380,78475]" at="0"/>
  <move-tree tree="expression_statement [26824,26908]" parent="block_statement [78380,78475]" at="1"/>
  <insert-node tree="}: } [78474,78475]" parent="block_statement [78380,78475]" at="2"/>
  <insert-node tree="{: { [78529,78530]" parent="block_statement [78529,78626]" at="0"/>
  <move-tree tree="expression_statement [26087,26152]" parent="block_statement [78529,78626]" at="1"/>
  <insert-node tree="}: } [78625,78626]" parent="block_statement [78529,78626]" at="2"/>
  <update-node tree="identifier: decrementBalanceOfPhantom [82752,82777]" label="recordVote"/>
  <insert-tree tree="call_argument [78892,78896]" parent="call_expression [78858,78897]" at="6"/>
  <update-node tree="identifier: decrementBalanceOfBonded [82661,82685]" label="placeLock"/>
  <update-node tree="identifier: totalRewardedWithPhantom [81494,81518]" label="endsAfter"/>
  <insert-tree tree="member_expression [79212,79261]" parent="call_expression [79212,79264]" at="0"/>
  <insert-node tree="(: ( [79261,79262]" parent="call_expression [79212,79264]" at="1"/>
  <move-tree tree="call_argument [55978,55979]" parent="call_expression [79212,79264]" at="2"/>
  <insert-node tree="): ) [79263,79264]" parent="call_expression [79212,79264]" at="3"/>
  <insert-tree tree="member_expression [79600,79612]" parent="call_expression [79600,79730]" at="0"/>
  <insert-node tree="(: ( [79612,79613]" parent="call_expression [79600,79730]" at="1"/>
  <insert-tree tree="call_argument [79627,79671]" parent="call_expression [79600,79730]" at="2"/>
  <insert-node tree=",: , [79671,79672]" parent="call_expression [79600,79730]" at="3"/>
  <insert-tree tree="call_argument [79686,79690]" parent="call_expression [79600,79730]" at="4"/>
  <insert-node tree=",: , [79690,79691]" parent="call_expression [79600,79730]" at="5"/>
  <move-tree tree="call_argument [82803,82839]" parent="call_expression [79600,79730]" at="6"/>
  <insert-node tree="): ) [79729,79730]" parent="call_expression [79600,79730]" at="7"/>
  <update-node tree="identifier: value [83915,83920]" label="candidate"/>
  <move-tree tree="member_expression [84457,84469]" parent="call_expression [80012,80164]" at="0"/>
  <insert-node tree="(: ( [80024,80025]" parent="call_expression [80012,80164]" at="1"/>
  <insert-node tree="call_argument [80039,80105]" parent="call_expression [80012,80164]" at="2"/>
  <insert-node tree=",: , [80105,80106]" parent="call_expression [80012,80164]" at="3"/>
  <move-tree tree="call_argument [84545,84549]" parent="call_expression [80012,80164]" at="4"/>
  <insert-node tree=",: , [80124,80125]" parent="call_expression [80012,80164]" at="5"/>
  <move-tree tree="call_argument [81270,81308]" parent="call_expression [80012,80164]" at="6"/>
  <insert-node tree="): ) [80163,80164]" parent="call_expression [80012,80164]" at="7"/>
  <insert-tree tree="member_expression [80391,80403]" parent="call_expression [80391,80521]" at="0"/>
  <insert-node tree="(: ( [80403,80404]" parent="call_expression [80391,80521]" at="1"/>
  <insert-tree tree="call_argument [80418,80462]" parent="call_expression [80391,80521]" at="2"/>
  <insert-node tree=",: , [80462,80463]" parent="call_expression [80391,80521]" at="3"/>
  <insert-tree tree="call_argument [80477,80481]" parent="call_expression [80391,80521]" at="4"/>
  <insert-node tree=",: , [80481,80482]" parent="call_expression [80391,80521]" at="5"/>
  <move-tree tree="call_argument [82705,82740]" parent="call_expression [80391,80521]" at="6"/>
  <insert-node tree="): ) [80520,80521]" parent="call_expression [80391,80521]" at="7"/>
  <insert-node tree="{: { [80717,80718]" parent="block_statement [80717,80756]" at="0"/>
  <insert-node tree="return_statement [80732,80745]" parent="block_statement [80717,80756]" at="1"/>
  <insert-node tree="}: } [80755,80756]" parent="block_statement [80717,80756]" at="2"/>
  <move-tree tree="member_expression [67335,67348]" parent="call_expression [80796,80844]" at="0"/>
  <insert-node tree=",: , [80828,80829]" parent="call_expression [80796,80844]" at="3"/>
  <insert-tree tree="call_argument [80830,80843]" parent="call_expression [80796,80844]" at="4"/>
  <insert-node tree="identifier: mintToAccount [81964,81977]" parent="call_expression [81964,81996]" at="0"/>
  <insert-tree tree="call_argument [81990,81995]" parent="call_expression [81964,81996]" at="4"/>
  <update-node tree="identifier: usdcAmount [78216,78226]" label="incentive"/>
  <update-node tree="identifier: lessPhantom [82456,82467]" label="price"/>
  <update-node tree="identifier: newClaimable [82361,82373]" label="reward"/>
  <update-node tree="identifier: incrementBalanceOfClaimable [82597,82624]" label="mintToAccount"/>
  <move-tree tree="member_expression [58695,58710]" parent="call_argument [82751,82766]" at="0"/>
  <insert-node tree="call_expression [17312,17372]" parent="member_expression [17312,17382]" at="0"/>
  <insert-node tree=".: . [17372,17373]" parent="member_expression [17312,17382]" at="1"/>
  <insert-node tree="identifier: asUint256 [17373,17382]" parent="member_expression [17312,17382]" at="2"/>
  <move-tree tree="call_expression [107938,107946]" parent="member_expression [54821,54834]" at="0"/>
  <insert-node tree=".: . [54829,54830]" parent="member_expression [54821,54834]" at="1"/>
  <insert-node tree="identifier: mint [54830,54834]" parent="member_expression [54821,54834]" at="2"/>
  <insert-node tree="call_expression [54908,54928]" parent="expression_statement [54908,54929]" at="0"/>
  <insert-tree tree="call_expression [55060,55068]" parent="member_expression [55060,55081]" at="0"/>
  <update-node tree="identifier: LibEIP712 [48290,48299]" label="transferFrom"/>
  <move-tree tree="call_expression [108254,108262]" parent="member_expression [55573,55586]" at="0"/>
  <insert-node tree=".: . [55581,55582]" parent="member_expression [55573,55586]" at="1"/>
  <insert-node tree="identifier: burn [55582,55586]" parent="member_expression [55573,55586]" at="2"/>
  <insert-node tree="call_expression [57908,57951]" parent="member_expression [57908,57961]" at="0"/>
  <insert-node tree=".: . [57951,57952]" parent="member_expression [57908,57961]" at="1"/>
  <insert-node tree="identifier: asUint256 [57952,57961]" parent="member_expression [57908,57961]" at="2"/>
  <move-tree tree="call_expression [84250,84282]" parent="expression_statement [58950,58987]" at="0"/>
  <insert-node tree="call_expression [59001,59029]" parent="expression_statement [59001,59030]" at="0"/>
  <insert-node tree="call_expression [59142,59171]" parent="expression_statement [59142,59172]" at="0"/>
  <update-node tree="identifier: lessUsdc [83466,83474]" label="lessRedeemable"/>
  <insert-node tree="call_expression [62480,62507]" parent="call_argument [62480,62507]" at="0"/>
  <update-node tree="identifier: newUniv2 [83758,83766]" label="epoch"/>
  <update-node tree="identifier: amount [21961,21967]" label="couponEpoch"/>
  <insert-node tree="identifier: epoch [63786,63791]" parent="call_argument [63786,63791]" at="0"/>
  <move-tree tree="member_expression [12059,12069]" parent="binary_expression [63918,63938]" at="0"/>
  <insert-node tree="!=: != [63929,63931]" parent="binary_expression [63918,63938]" at="1"/>
  <insert-node tree="identifier: sender [63932,63938]" parent="binary_expression [63918,63938]" at="2"/>
  <move-tree tree="call_expression [51600,51688]" parent="expression_statement [64010,64104]" at="0"/>
  <move-tree tree="call_argument [51636,51642]" parent="call_expression [64010,64103]" at="3"/>
  <update-node tree="identifier: price0Cumulative [66988,67004]" label="newRedeemable"/>
  <update-node tree="identifier: price1Cumulative [67014,67030]" label="lessDebt"/>
  <move-tree tree="type_name [83476,83483]" parent="variable_declaration [66432,66449]" at="0"/>
  <update-node tree="identifier: blockTimestamp [67039,67053]" label="newBonded"/>
  <insert-node tree="identifier: newSupply [66468,66477]" parent="call_argument [66468,66477]" at="0"/>
  <update-node tree="identifier: setup [107968,107973]" label="capture"/>
  <move-tree tree="call_expression [65649,65662]" parent="return_statement [67140,67161]" at="1"/>
  <move-tree tree="ternary_expression [81622,81695]" parent="member_expression [70806,70930]" at="0"/>
  <insert-node tree="call_expression [71340,71378]" parent="member_expression [71340,71382]" at="0"/>
  <update-node tree="identifier: mul [82499,82502]" label="div"/>
  <move-tree tree="call_expression [82470,82498]" parent="call_argument [71383,71404]" at="0"/>
  <update-node tree="identifier: newPhantom [81870,81880]" label="balance"/>
  <insert-node tree="call_expression [77662,77801]" parent="expression_statement [77662,77802]" at="0"/>
  <update-node tree="identifier: lessPhantom [82790,82801]" label="candidate"/>
  <update-node tree="identifier: value [82698,82703]" label="candidate"/>
  <insert-tree tree="call_expression [79097,79119]" parent="call_argument [79097,79119]" at="0"/>
  <insert-tree tree="binary_expression [79304,79323]" parent="call_argument [79304,79323]" at="0"/>
  <insert-tree tree="call_expression [79419,79524]" parent="call_argument [79419,79524]" at="0"/>
  <insert-tree tree="call_expression [79917,79939]" parent="call_argument [79917,79939]" at="0"/>
  <insert-node tree="call_expression [80039,80105]" parent="call_argument [80039,80105]" at="0"/>
  <insert-tree tree="call_expression [80204,80307]" parent="call_argument [80204,80307]" at="0"/>
  <insert-node tree="return: return [80732,80738]" parent="return_statement [80732,80745]" at="0"/>
  <move-tree tree="boolean_literal [65664,65669]" parent="return_statement [80732,80745]" at="1"/>
  <update-node tree="identifier: newClaimable [82637,82649]" label="reward"/>
  <insert-node tree="member_expression [17312,17364]" parent="call_expression [17312,17372]" at="0"/>
  <insert-node tree="(: ( [17364,17365]" parent="call_expression [17312,17372]" at="1"/>
  <move-tree tree="call_argument [18422,18428]" parent="call_expression [17312,17372]" at="2"/>
  <insert-node tree="): ) [17371,17372]" parent="call_expression [17312,17372]" at="3"/>
  <insert-node tree="identifier: increaseDebt [54908,54920]" parent="call_expression [54908,54928]" at="0"/>
  <insert-node tree="(: ( [54920,54921]" parent="call_expression [54908,54928]" at="1"/>
  <move-tree tree="call_argument [20782,20788]" parent="call_expression [54908,54928]" at="2"/>
  <insert-node tree="): ) [54927,54928]" parent="call_expression [54908,54928]" at="3"/>
  <insert-tree tree="member_expression [57908,57927]" parent="call_expression [57908,57951]" at="0"/>
  <insert-node tree="(: ( [57927,57928]" parent="call_expression [57908,57951]" at="1"/>
  <move-tree tree="call_argument [78108,78116]" parent="call_expression [57908,57951]" at="2"/>
  <insert-node tree="): ) [57950,57951]" parent="call_expression [57908,57951]" at="3"/>
  <insert-node tree=",: , [58977,58978]" parent="call_expression [58950,58986]" at="3"/>
  <move-tree tree="call_argument [21369,21375]" parent="call_expression [58950,58986]" at="4"/>
  <insert-node tree="identifier: incrementTotalBonded [59001,59021]" parent="call_expression [59001,59029]" at="0"/>
  <insert-node tree="(: ( [59021,59022]" parent="call_expression [59001,59029]" at="1"/>
  <move-tree tree="call_argument [20674,20680]" parent="call_expression [59001,59029]" at="2"/>
  <insert-node tree="): ) [59028,59029]" parent="call_expression [59001,59029]" at="3"/>
  <insert-tree tree="member_expression [59142,59155]" parent="call_expression [59142,59171]" at="0"/>
  <insert-node tree="(: ( [59155,59156]" parent="call_expression [59142,59171]" at="1"/>
  <insert-tree tree="call_argument [59156,59162]" parent="call_expression [59142,59171]" at="2"/>
  <insert-node tree=",: , [59162,59163]" parent="call_expression [59142,59171]" at="3"/>
  <move-tree tree="call_argument [21307,21313]" parent="call_expression [59142,59171]" at="4"/>
  <insert-node tree="): ) [59170,59171]" parent="call_expression [59142,59171]" at="5"/>
  <update-node tree="identifier: IUniswapV2Pair [78558,78572]" label="dollar"/>
  <insert-tree tree="call_expression [62304,62315]" parent="binary_expression [62304,62331]" at="0"/>
  <insert-node tree="&gt;=: &gt;= [62316,62318]" parent="binary_expression [62304,62331]" at="1"/>
  <insert-node tree="identifier: dollarAmount [62319,62331]" parent="binary_expression [62304,62331]" at="2"/>
  <insert-node tree="identifier: couponPremium [62480,62493]" parent="call_expression [62480,62507]" at="0"/>
  <insert-node tree="(: ( [62493,62494]" parent="call_expression [62480,62507]" at="1"/>
  <move-tree tree="call_argument [78330,78342]" parent="call_expression [62480,62507]" at="2"/>
  <insert-node tree="): ) [62506,62507]" parent="call_expression [62480,62507]" at="3"/>
  <update-node tree="identifier: allowance [51454,51463]" label="allowanceCoupons"/>
  <insert-node tree="identifier: decrementAllowanceCoupons [64010,64035]" parent="call_expression [64010,64103]" at="0"/>
  <move-tree tree="call_argument [51544,51550]" parent="call_expression [64010,64103]" at="3"/>
  <insert-tree tree="call_argument [64044,64054]" parent="call_expression [64010,64103]" at="4"/>
  <insert-node tree=",: , [64054,64055]" parent="call_expression [64010,64103]" at="5"/>
  <insert-node tree=",: , [64062,64063]" parent="call_expression [64010,64103]" at="7"/>
  <insert-tree tree="call_expression [69985,69996]" parent="binary_expression [69985,70006]" at="0"/>
  <insert-node tree="&gt;: &gt; [69997,69998]" parent="binary_expression [69985,70006]" at="1"/>
  <insert-tree tree="call_expression [69999,70006]" parent="binary_expression [69985,70006]" at="2"/>
  <update-node tree="identifier: univ2 [80618,80623]" label="dollar"/>
  <move-tree tree="binary_expression [81588,81606]" parent="ternary_expression [70806,70926]" at="0"/>
  <insert-tree tree="call_expression [70902,70926]" parent="ternary_expression [70806,70926]" at="4"/>
  <insert-tree tree="member_expression [71340,71349]" parent="call_expression [71340,71378]" at="0"/>
  <insert-node tree="(: ( [71349,71350]" parent="call_expression [71340,71378]" at="1"/>
  <insert-node tree="call_argument [71350,71377]" parent="call_expression [71340,71378]" at="2"/>
  <insert-node tree="): ) [71377,71378]" parent="call_expression [71340,71378]" at="3"/>
  <update-node tree="identifier: balanceOfPhantom [82470,82486]" label="balanceOf"/>
  <insert-node tree="&gt;: &gt; [77540,77541]" parent="binary_expression [77518,77543]" at="1"/>
  <insert-node tree="number_literal: 0 [77542,77543]" parent="binary_expression [77518,77543]" at="2"/>
  <insert-tree tree="member_expression [77662,77674]" parent="call_expression [77662,77801]" at="0"/>
  <insert-node tree="(: ( [77674,77675]" parent="call_expression [77662,77801]" at="1"/>
  <insert-tree tree="call_argument [77693,77715]" parent="call_expression [77662,77801]" at="2"/>
  <insert-node tree=",: , [77715,77716]" parent="call_expression [77662,77801]" at="3"/>
  <insert-tree tree="call_argument [77734,77738]" parent="call_expression [77662,77801]" at="4"/>
  <insert-node tree=",: , [77738,77739]" parent="call_expression [77662,77801]" at="5"/>
  <move-tree tree="call_argument [25855,25888]" parent="call_expression [77662,77801]" at="6"/>
  <insert-node tree="): ) [77800,77801]" parent="call_expression [77662,77801]" at="7"/>
  <update-node tree="identifier: require [26824,26831]" label="decrementRejectFor"/>
  <insert-tree tree="call_argument [78414,78423]" parent="call_expression [78395,78463]" at="2"/>
  <insert-tree tree="call_argument [78425,78431]" parent="call_expression [78395,78463]" at="4"/>
  <insert-node tree=",: , [78431,78432]" parent="call_expression [78395,78463]" at="5"/>
  <update-node tree="identifier: require [26087,26094]" label="decrementApproveFor"/>
  <insert-tree tree="call_argument [78564,78573]" parent="call_expression [78544,78614]" at="2"/>
  <insert-tree tree="call_argument [78575,78581]" parent="call_expression [78544,78614]" at="4"/>
  <insert-node tree=",: , [78581,78582]" parent="call_expression [78544,78614]" at="5"/>
  <move-tree tree="member_expression [73652,73698]" parent="call_expression [80039,80105]" at="0"/>
  <insert-node tree="(: ( [80064,80065]" parent="call_expression [80039,80105]" at="1"/>
  <insert-tree tree="call_argument [80065,80104]" parent="call_expression [80039,80105]" at="2"/>
  <insert-node tree="): ) [80104,80105]" parent="call_expression [80039,80105]" at="3"/>
  <update-node tree="identifier: balanceOfBonded [73255,73270]" label="balanceOf"/>
  <insert-node tree="call_expression [17312,17360]" parent="member_expression [17312,17364]" at="0"/>
  <insert-node tree=".: . [17360,17361]" parent="member_expression [17312,17364]" at="1"/>
  <insert-node tree="identifier: mul [17361,17364]" parent="member_expression [17312,17364]" at="2"/>
  <insert-node tree="call_expression [57928,57950]" parent="call_argument [57928,57950]" at="0"/>
  <move-tree tree="call_expression [72137,72192]" parent="member_expression [58245,58318]" at="0"/>
  <update-node tree="identifier: balanceOf [84258,84267]" label="mint"/>
  <update-node tree="identifier: getPoolExitLockupEpochs [77117,77140]" label="getCouponExpiration"/>
  <insert-tree tree="member_expression [63967,63977]" parent="call_argument [63967,63977]" at="0"/>
  <move-tree tree="call_expression [82182,82209]" parent="call_argument [71350,71377]" at="0"/>
  <update-node tree="identifier: totalRewardedWithPhantom [83651,83675]" label="value"/>
  <insert-tree tree="call_expression [71853,71866]" parent="call_argument [71853,71866]" at="0"/>
  <update-node tree="identifier: balanceOfRewarded [83330,83347]" label="balanceOf"/>
  <move-tree tree="binary_expression [73652,73678]" parent="member_expression [80039,80064]" at="0"/>
  <update-node tree="identifier: fluidUntil [73688,73698]" label="add"/>
  <insert-node tree="identifier: effectivePremium [17312,17328]" parent="call_expression [17312,17360]" at="0"/>
  <insert-node tree="(: ( [17328,17329]" parent="call_expression [17312,17360]" at="1"/>
  <insert-tree tree="call_argument [17329,17340]" parent="call_expression [17312,17360]" at="2"/>
  <insert-node tree=",: , [17340,17341]" parent="call_expression [17312,17360]" at="3"/>
  <insert-tree tree="call_argument [17342,17351]" parent="call_expression [17312,17360]" at="4"/>
  <insert-node tree=",: , [17351,17352]" parent="call_expression [17312,17360]" at="5"/>
  <move-tree tree="call_argument [23257,23263]" parent="call_expression [17312,17360]" at="6"/>
  <insert-node tree="): ) [17359,17360]" parent="call_expression [17312,17360]" at="7"/>
  <insert-node tree="member_expression [57928,57948]" parent="call_expression [57928,57950]" at="0"/>
  <insert-node tree="(: ( [57948,57949]" parent="call_expression [57928,57950]" at="1"/>
  <insert-node tree="): ) [57949,57950]" parent="call_expression [57928,57950]" at="2"/>
  <update-node tree="identifier: totalBonded [84304,84315]" label="totalRedeemable"/>
  <update-node tree="identifier: univ2 [84250,84255]" label="dollar"/>
  <insert-node tree="identifier: value [70840,70845]" parent="member_expression [70840,70849]" at="0"/>
  <move-tree tree="call_expression [81645,81680]" parent="call_argument [70850,70885]" at="0"/>
  <insert-tree tree="call_expression [80039,80050]" parent="binary_expression [80039,80060]" at="0"/>
  <insert-node tree="&gt;: &gt; [80051,80052]" parent="binary_expression [80039,80060]" at="1"/>
  <move-tree tree="call_expression [78108,78116]" parent="member_expression [57928,57948]" at="0"/>
  <insert-node tree=".: . [57936,57937]" parent="member_expression [57928,57948]" at="1"/>
  <insert-node tree="identifier: totalSupply [57937,57948]" parent="member_expression [57928,57948]" at="2"/>
  <insert-node tree="binary_expression [58245,58295]" parent="member_expression [58245,58299]" at="0"/>
  <update-node tree="identifier: sub [72171,72174]" label="add"/>
  <move-tree tree="call_expression [84286,84299]" parent="call_argument [58300,58313]" at="0"/>
  <move-tree tree="call_expression [72137,72170]" parent="binary_expression [58245,58295]" at="0"/>
  <insert-node tree="&gt;=: &gt;= [58279,58281]" parent="binary_expression [58245,58295]" at="1"/>
  <move-tree tree="call_expression [72999,73012]" parent="binary_expression [58245,58295]" at="2"/>
  <delete-node tree="contract: contract [11710,11718]"/>
  <delete-node tree="identifier: Context [11719,11726]"/>
  <delete-node tree="{: { [11727,11728]"/>
  <delete-node tree="comment: // Empty internal constructor, to prevent people from mistakenly deploying [11734,11808]"/>
  <delete-node tree="comment: // an instance of this contract, which should be used via inheritance. [11814,11884]"/>
  <delete-tree tree="constructor_definition [11890,11917]"/>
  <delete-node tree="comment: // solhint-disable-previous-line no-empty-blocks [11923,11971]"/>
  <delete-node tree="function: function [11979,11987]"/>
  <delete-node tree="identifier: _msgSender [11988,11998]"/>
  <delete-node tree="(: ( [11998,11999]"/>
  <delete-node tree="): ) [11999,12000]"/>
  <delete-tree tree="visibility [12001,12009]"/>
  <delete-tree tree="state_mutability [12010,12014]"/>
  <delete-tree tree="return_type_definition [12015,12040]"/>
  <delete-node tree="{: { [12041,12042]"/>
  <delete-node tree="return: return [12052,12058]"/>
  <delete-node tree="return_statement [12052,12070]"/>
  <delete-node tree="}: } [12076,12077]"/>
  <delete-node tree="function_body [12041,12077]"/>
  <delete-node tree="function_definition [11979,12077]"/>
  <delete-tree tree="function_definition [12085,12310]"/>
  <delete-node tree="}: } [12312,12313]"/>
  <delete-node tree="contract_body [11727,12313]"/>
  <delete-node tree="contract_declaration [11710,12313]"/>
  <delete-node tree="contract: contract [23538,23546]"/>
  <delete-node tree="identifier: ERC20Burnable [23547,23560]"/>
  <delete-node tree="is: is [23561,23563]"/>
  <delete-tree tree="inheritance_specifier [23564,23571]"/>
  <delete-node tree=",: , [23571,23572]"/>
  <delete-tree tree="inheritance_specifier [23573,23578]"/>
  <delete-node tree="{: { [23579,23580]"/>
  <delete-node tree="comment: /**      * @dev Destroys `amount` tokens from the caller.      *      * See {ERC20-_burn}.      */ [23586,23688]"/>
  <delete-node tree="function: function [23694,23702]"/>
  <delete-node tree="identifier: burn [23703,23707]"/>
  <delete-node tree="(: ( [23707,23708]"/>
  <delete-node tree="): ) [23722,23723]"/>
  <delete-tree tree="visibility [23724,23730]"/>
  <delete-node tree="{: { [23731,23732]"/>
  <delete-node tree="identifier: _burn [23742,23747]"/>
  <delete-node tree="(: ( [23747,23748]"/>
  <delete-tree tree="call_argument [23748,23760]"/>
  <delete-node tree=",: , [23760,23761]"/>
  <delete-node tree="): ) [23768,23769]"/>
  <delete-node tree="call_expression [23742,23769]"/>
  <delete-node tree="expression_statement [23742,23770]"/>
  <delete-node tree="}: } [23776,23777]"/>
  <delete-node tree="function_body [23731,23777]"/>
  <delete-node tree="function_definition [23694,23777]"/>
  <delete-node tree="comment: /**      * @dev See {ERC20-_burnFrom}.      */ [23785,23833]"/>
  <delete-node tree="}: } [23944,23945]"/>
  <delete-node tree="contract_body [23579,23945]"/>
  <delete-node tree="contract_declaration [23538,23945]"/>
  <delete-node tree="contract: contract [24014,24022]"/>
  <delete-node tree="identifier: ERC20Detailed [24023,24036]"/>
  <delete-node tree="is: is [24037,24039]"/>
  <delete-tree tree="inheritance_specifier [24040,24046]"/>
  <delete-node tree="{: { [24047,24048]"/>
  <delete-tree tree="type_name [24054,24060]"/>
  <delete-node tree="identifier: _name [24069,24074]"/>
  <delete-node tree="state_variable_declaration [24054,24075]"/>
  <delete-tree tree="type_name [24081,24087]"/>
  <delete-node tree="identifier: _symbol [24096,24103]"/>
  <delete-node tree="state_variable_declaration [24081,24104]"/>
  <delete-tree tree="type_name [24110,24115]"/>
  <delete-node tree="identifier: _decimals [24124,24133]"/>
  <delete-node tree="state_variable_declaration [24110,24134]"/>
  <delete-node tree="comment: /**      * @dev Sets the values for `name`, `symbol`, and `decimals`. All three of      * these values are immutable: they can only be set once during      * construction.      */ [24142,24325]"/>
  <delete-tree tree="constructor_definition [24331,24498]"/>
  <delete-node tree="comment: /**      * @dev Returns the name of the token.      */ [24506,24562]"/>
  <delete-tree tree="function_definition [24568,24651]"/>
  <delete-node tree="comment: /**      * @dev Returns the symbol of the token, usually a shorter version of the      * name.      */ [24659,24764]"/>
  <delete-tree tree="function_definition [24770,24857]"/>
  <delete-node tree="comment: /**      * @dev Returns the number of decimals used to get its user representation.      * For example, if `decimals` equals `2`, a balance of `505` tokens should      * be displayed to a user as `5,05` (`505 / 10 ** 2`).      *      * Tokens usually opt for a value of 18, imitating the relationship between      * Ether and Wei.      *      * NOTE: This information is only used for _display_ purposes: it in      * no way affects any of the arithmetic of the contract, including      * {IERC20-balanceOf} and {IERC20-transfer}.      */ [24865,25414]"/>
  <delete-tree tree="function_definition [25420,25503]"/>
  <delete-node tree="}: } [25505,25506]"/>
  <delete-node tree="contract_body [24047,25506]"/>
  <delete-node tree="contract_declaration [24014,25506]"/>
  <delete-node tree="library: library [25597,25604]"/>
  <delete-node tree="identifier: Roles [25605,25610]"/>
  <delete-node tree="{: { [25611,25612]"/>
  <delete-tree tree="struct_declaration [25618,25681]"/>
  <delete-node tree="comment: /**      * @dev Give an account access to this role.      */ [25689,25751]"/>
  <delete-node tree="function: function [25757,25765]"/>
  <delete-node tree="identifier: add [25766,25769]"/>
  <delete-node tree="(: ( [25769,25770]"/>
  <delete-tree tree="parameter [25770,25787]"/>
  <delete-node tree=",: , [25787,25788]"/>
  <delete-tree tree="parameter [25789,25804]"/>
  <delete-node tree="): ) [25804,25805]"/>
  <delete-tree tree="visibility [25806,25814]"/>
  <delete-node tree="{: { [25815,25816]"/>
  <delete-node tree="identifier: require [25826,25833]"/>
  <delete-node tree="(: ( [25833,25834]"/>
  <delete-tree tree="call_argument [25834,25853]"/>
  <delete-node tree=",: , [25853,25854]"/>
  <delete-node tree="): ) [25888,25889]"/>
  <delete-node tree="call_expression [25826,25889]"/>
  <delete-node tree="expression_statement [25826,25890]"/>
  <delete-tree tree="expression_statement [25900,25928]"/>
  <delete-node tree="}: } [25934,25935]"/>
  <delete-node tree="function_body [25815,25935]"/>
  <delete-node tree="function_definition [25757,25935]"/>
  <delete-node tree="comment: /**      * @dev Remove an account's access to this role.      */ [25943,26009]"/>
  <delete-node tree="function: function [26015,26023]"/>
  <delete-node tree="identifier: remove [26024,26030]"/>
  <delete-node tree="(: ( [26030,26031]"/>
  <delete-tree tree="parameter [26031,26048]"/>
  <delete-node tree=",: , [26048,26049]"/>
  <delete-tree tree="parameter [26050,26065]"/>
  <delete-node tree="): ) [26065,26066]"/>
  <delete-tree tree="visibility [26067,26075]"/>
  <delete-node tree="{: { [26076,26077]"/>
  <delete-tree tree="expression_statement [26162,26191]"/>
  <delete-node tree="}: } [26197,26198]"/>
  <delete-node tree="function_body [26076,26198]"/>
  <delete-node tree="function_definition [26015,26198]"/>
  <delete-node tree="comment: /**      * @dev Check if an account has this role.      * @return bool      */ [26206,26287]"/>
  <delete-tree tree="function_definition [26293,26496]"/>
  <delete-node tree="}: } [26498,26499]"/>
  <delete-node tree="contract_body [25611,26499]"/>
  <delete-node tree="library_declaration [25597,26499]"/>
  <delete-node tree="contract: contract [26505,26513]"/>
  <delete-node tree="identifier: MinterRole [26514,26524]"/>
  <delete-node tree="is: is [26525,26527]"/>
  <delete-tree tree="inheritance_specifier [26528,26535]"/>
  <delete-node tree="{: { [26536,26537]"/>
  <delete-tree tree="using_directive [26543,26570]"/>
  <delete-node tree="event: event [26627,26632]"/>
  <delete-node tree="identifier: MinterRemoved [26633,26646]"/>
  <delete-node tree="(: ( [26646,26647]"/>
  <delete-node tree="): ) [26670,26671]"/>
  <delete-node tree="event_definition [26627,26672]"/>
  <delete-tree tree="type_name [26680,26690]"/>
  <delete-node tree="identifier: _minters [26699,26707]"/>
  <delete-node tree="state_variable_declaration [26680,26708]"/>
  <delete-tree tree="constructor_definition [26716,26783]"/>
  <delete-node tree="modifier: modifier [26791,26799]"/>
  <delete-node tree="identifier: onlyMinter [26800,26810]"/>
  <delete-node tree="(: ( [26810,26811]"/>
  <delete-node tree="): ) [26811,26812]"/>
  <delete-node tree="{: { [26813,26814]"/>
  <delete-tree tree="expression_statement [26918,26920]"/>
  <delete-node tree="}: } [26926,26927]"/>
  <delete-node tree="function_body [26813,26927]"/>
  <delete-node tree="modifier_definition [26791,26927]"/>
  <delete-tree tree="function_definition [26935,27044]"/>
  <delete-node tree="function: function [27052,27060]"/>
  <delete-node tree="identifier: addMinter [27061,27070]"/>
  <delete-node tree="(: ( [27070,27071]"/>
  <delete-tree tree="parameter [27071,27086]"/>
  <delete-node tree="): ) [27086,27087]"/>
  <delete-tree tree="visibility [27088,27094]"/>
  <delete-tree tree="modifier_invocation [27095,27105]"/>
  <delete-node tree="{: { [27106,27107]"/>
  <delete-node tree="identifier: _addMinter [27117,27127]"/>
  <delete-node tree="(: ( [27127,27128]"/>
  <delete-node tree="): ) [27135,27136]"/>
  <delete-node tree="call_expression [27117,27136]"/>
  <delete-node tree="expression_statement [27117,27137]"/>
  <delete-node tree="}: } [27143,27144]"/>
  <delete-node tree="function_body [27106,27144]"/>
  <delete-node tree="function_definition [27052,27144]"/>
  <delete-tree tree="function_definition [27152,27231]"/>
  <delete-tree tree="function_definition [27239,27361]"/>
  <delete-tree tree="function_definition [27369,27499]"/>
  <delete-node tree="}: } [27501,27502]"/>
  <delete-node tree="contract_body [26536,27502]"/>
  <delete-node tree="contract_declaration [26505,27502]"/>
  <delete-node tree="library: library [38854,38861]"/>
  <delete-node tree="identifier: LibEIP712 [38862,38871]"/>
  <delete-node tree="{: { [38872,38873]"/>
  <delete-node tree="comment: // Hash of the EIP712 Domain Separator Schema [38881,38926]"/>
  <delete-node tree="comment: // keccak256(abi.encodePacked( [38932,38962]"/>
  <delete-node tree="comment: //     &quot;EIP712Domain(&quot;, [38968,38991]"/>
  <delete-node tree="comment: //     &quot;string name,&quot;, [38997,39019]"/>
  <delete-node tree="comment: //     &quot;string version,&quot;, [39025,39050]"/>
  <delete-node tree="comment: //     &quot;uint256 chainId,&quot;, [39056,39082]"/>
  <delete-node tree="comment: //     &quot;address verifyingContract&quot;, [39088,39123]"/>
  <delete-node tree="comment: //     &quot;)&quot; [39129,39139]"/>
  <delete-node tree="comment: // )) [39145,39150]"/>
  <delete-tree tree="state_variable_declaration [39156,39288]"/>
  <delete-node tree="comment: /// @dev Calculates a EIP712 domain separator. [39296,39342]"/>
  <delete-node tree="comment: /// @param name The EIP712 domain name. [39348,39387]"/>
  <delete-node tree="comment: /// @param version The EIP712 domain version. [39393,39438]"/>
  <delete-node tree="comment: /// @param verifyingContract The EIP712 verifying contract. [39444,39503]"/>
  <delete-node tree="comment: /// @return EIP712 domain separator. [39509,39545]"/>
  <delete-node tree="function: function [39551,39559]"/>
  <delete-node tree="identifier: hashEIP712Domain [39560,39576]"/>
  <delete-node tree="(: ( [39576,39577]"/>
  <delete-tree tree="parameter [39587,39605]"/>
  <delete-node tree=",: , [39605,39606]"/>
  <delete-tree tree="parameter [39616,39637]"/>
  <delete-node tree=",: , [39637,39638]"/>
  <delete-node tree=",: , [39663,39664]"/>
  <delete-tree tree="parameter [39674,39699]"/>
  <delete-node tree="): ) [39705,39706]"/>
  <delete-tree tree="return_type_definition [39736,39760]"/>
  <delete-tree tree="function_body [39766,40826]"/>
  <delete-node tree="function_definition [39551,40826]"/>
  <delete-node tree="comment: /// @dev Calculates EIP712 encoding for a hash struct with a given domain hash. [40834,40913]"/>
  <delete-node tree="comment: /// @param eip712DomainHash Hash of the domain domain separator data, computed [40919,40997]"/>
  <delete-node tree="comment: ///                         with getDomainHash(). [41003,41052]"/>
  <delete-node tree="comment: /// @param hashStruct The EIP712 hash struct. [41058,41103]"/>
  <delete-node tree="comment: /// @return EIP712 hash applied to the given EIP712 Domain. [41109,41168]"/>
  <delete-node tree="function: function [41174,41182]"/>
  <delete-node tree="identifier: hashEIP712Message [41183,41200]"/>
  <delete-node tree="(: ( [41200,41201]"/>
  <delete-tree tree="parameter [41201,41225]"/>
  <delete-node tree=",: , [41225,41226]"/>
  <delete-tree tree="parameter [41227,41245]"/>
  <delete-node tree="): ) [41245,41246]"/>
  <delete-tree tree="visibility [41252,41260]"/>
  <delete-tree tree="return_type_definition [41276,41300]"/>
  <delete-tree tree="function_body [41306,42068]"/>
  <delete-node tree="function_definition [41174,42068]"/>
  <delete-node tree="}: } [42070,42071]"/>
  <delete-node tree="contract_body [38872,42071]"/>
  <delete-node tree="library_declaration [38854,42071]"/>
  <delete-node tree="contract: contract [47764,47772]"/>
  <delete-node tree="identifier: Permittable [47773,47784]"/>
  <delete-node tree="is: is [47785,47787]"/>
  <delete-tree tree="inheritance_specifier [47788,47801]"/>
  <delete-node tree=",: , [47801,47802]"/>
  <delete-tree tree="inheritance_specifier [47803,47808]"/>
  <delete-node tree="{: { [47809,47810]"/>
  <delete-tree tree="state_variable_declaration [47816,47854]"/>
  <delete-node tree="comment: // keccak256(&quot;Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)&quot;); [47862,47961]"/>
  <delete-tree tree="state_variable_declaration [47967,48083]"/>
  <delete-tree tree="type_name [48089,48095]"/>
  <delete-node tree="constant: constant [48104,48112]"/>
  <delete-node tree="identifier: EIP712_VERSION [48113,48127]"/>
  <delete-node tree="=: = [48128,48129]"/>
  <delete-tree tree="string_literal [48130,48133]"/>
  <delete-node tree="state_variable_declaration [48089,48134]"/>
  <delete-tree tree="state_variable_declaration [48142,48181]"/>
  <delete-node tree="mapping: mapping [48189,48196]"/>
  <delete-node tree="(: ( [48196,48197]"/>
  <delete-tree tree="primitive_type [48197,48204]"/>
  <delete-node tree="=&gt;: =&gt; [48205,48207]"/>
  <delete-node tree="): ) [48215,48216]"/>
  <delete-node tree="type_name [48189,48216]"/>
  <delete-node tree="identifier: nonces [48217,48223]"/>
  <delete-node tree="state_variable_declaration [48189,48224]"/>
  <delete-node tree="constructor: constructor [48232,48243]"/>
  <delete-node tree="(: ( [48243,48244]"/>
  <delete-node tree="): ) [48244,48245]"/>
  <delete-node tree="public: public [48246,48252]"/>
  <delete-node tree="constructor_definition [48232,48387]"/>
  <delete-node tree="function: function [48395,48403]"/>
  <delete-node tree="identifier: permit [48404,48410]"/>
  <delete-node tree="(: ( [48410,48411]"/>
  <delete-tree tree="parameter [48421,48434]"/>
  <delete-node tree=",: , [48434,48435]"/>
  <delete-tree tree="parameter [48445,48460]"/>
  <delete-node tree=",: , [48460,48461]"/>
  <delete-tree tree="parameter [48471,48484]"/>
  <delete-node tree=",: , [48484,48485]"/>
  <delete-node tree=",: , [48511,48512]"/>
  <delete-tree tree="parameter [48522,48529]"/>
  <delete-node tree=",: , [48529,48530]"/>
  <delete-tree tree="parameter [48540,48549]"/>
  <delete-node tree=",: , [48549,48550]"/>
  <delete-tree tree="parameter [48560,48569]"/>
  <delete-node tree="): ) [48575,48576]"/>
  <delete-node tree="{: { [48586,48587]"/>
  <delete-tree tree="variable_declaration_statement [48597,48918]"/>
  <delete-tree tree="variable_declaration_statement [48930,48977]"/>
  <delete-node tree="identifier: _approve [49340,49348]"/>
  <delete-node tree="(: ( [49348,49349]"/>
  <delete-tree tree="call_argument [49349,49354]"/>
  <delete-node tree=",: , [49354,49355]"/>
  <delete-node tree=",: , [49363,49364]"/>
  <delete-tree tree="call_argument [49365,49370]"/>
  <delete-node tree="): ) [49370,49371]"/>
  <delete-node tree="call_expression [49340,49371]"/>
  <delete-node tree="expression_statement [49340,49372]"/>
  <delete-node tree="}: } [49378,49379]"/>
  <delete-node tree="function_body [48586,49379]"/>
  <delete-node tree="function_definition [48395,49379]"/>
  <delete-node tree="}: } [49381,49382]"/>
  <delete-node tree="contract_body [47809,49382]"/>
  <delete-node tree="contract_declaration [47764,49382]"/>
  <delete-node tree="contract: contract [50943,50951]"/>
  <delete-node tree="identifier: Dollar [50952,50958]"/>
  <delete-node tree="is: is [50959,50961]"/>
  <delete-tree tree="inheritance_specifier [50962,50969]"/>
  <delete-node tree=",: , [50969,50970]"/>
  <delete-tree tree="inheritance_specifier [50971,50981]"/>
  <delete-node tree=",: , [50981,50982]"/>
  <delete-tree tree="inheritance_specifier [50983,50996]"/>
  <delete-node tree=",: , [50996,50997]"/>
  <delete-tree tree="inheritance_specifier [50998,51009]"/>
  <delete-node tree=",: , [51009,51010]"/>
  <delete-tree tree="inheritance_specifier [51011,51024]"/>
  <delete-node tree="{: { [51026,51027]"/>
  <delete-tree tree="constructor_definition [51035,51138]"/>
  <delete-node tree="function: function [51297,51305]"/>
  <delete-node tree="identifier: transferFrom [51306,51318]"/>
  <delete-node tree="(: ( [51318,51319]"/>
  <delete-tree tree="parameter [51319,51333]"/>
  <delete-node tree=",: , [51333,51334]"/>
  <delete-tree tree="parameter [51335,51352]"/>
  <delete-node tree=",: , [51352,51353]"/>
  <delete-node tree="): ) [51368,51369]"/>
  <delete-tree tree="visibility [51370,51376]"/>
  <delete-tree tree="return_type_definition [51377,51391]"/>
  <delete-node tree="{: { [51392,51393]"/>
  <delete-node tree="identifier: _transfer [51403,51412]"/>
  <delete-node tree="(: ( [51412,51413]"/>
  <delete-node tree=",: , [51419,51420]"/>
  <delete-node tree=",: , [51430,51431]"/>
  <delete-node tree="): ) [51438,51439]"/>
  <delete-node tree="call_expression [51403,51439]"/>
  <delete-node tree="expression_statement [51403,51440]"/>
  <delete-tree tree="return_statement [51711,51723]"/>
  <delete-node tree="}: } [51729,51730]"/>
  <delete-node tree="function_body [51392,51730]"/>
  <delete-node tree="function_definition [51297,51730]"/>
  <delete-node tree="}: } [51732,51733]"/>
  <delete-node tree="contract_body [51026,51733]"/>
  <delete-node tree="contract_declaration [50943,51733]"/>
  <delete-node tree="interface: interface [51737,51746]"/>
  <delete-node tree="identifier: IUniswapV2Factory [51747,51764]"/>
  <delete-node tree="{: { [51765,51766]"/>
  <delete-tree tree="function_definition [51866,51915]"/>
  <delete-tree tree="function_definition [51921,51976]"/>
  <delete-tree tree="function_definition [51982,52034]"/>
  <delete-tree tree="function_definition [52042,52128]"/>
  <delete-tree tree="function_definition [52134,52195]"/>
  <delete-tree tree="function_definition [52201,52256]"/>
  <delete-tree tree="function_definition [52264,52348]"/>
  <delete-tree tree="function_definition [52356,52392]"/>
  <delete-tree tree="function_definition [52398,52440]"/>
  <delete-tree tree="function_definition [52446,52485]"/>
  <delete-node tree="}: } [52487,52488]"/>
  <delete-node tree="contract_body [51765,52488]"/>
  <delete-node tree="interface_declaration [51737,52488]"/>
  <delete-node tree="library: library [55130,55137]"/>
  <delete-node tree="identifier: Babylonian [55138,55148]"/>
  <delete-node tree="{: { [55149,55150]"/>
  <delete-node tree="function: function [55156,55164]"/>
  <delete-node tree="identifier: sqrt [55165,55169]"/>
  <delete-node tree="(: ( [55169,55170]"/>
  <delete-tree tree="parameter [55170,55176]"/>
  <delete-node tree="): ) [55176,55177]"/>
  <delete-tree tree="visibility [55178,55186]"/>
  <delete-tree tree="return_type_definition [55192,55208]"/>
  <delete-tree tree="function_body [55209,55482]"/>
  <delete-node tree="function_definition [55156,55482]"/>
  <delete-node tree="}: } [55484,55485]"/>
  <delete-node tree="contract_body [55149,55485]"/>
  <delete-node tree="library_declaration [55130,55485]"/>
  <delete-node tree="library: library [55643,55650]"/>
  <delete-node tree="identifier: FixedPoint [55651,55661]"/>
  <delete-node tree="{: { [55662,55663]"/>
  <delete-node tree="comment: // range: [0, 2**112 - 1] [55669,55694]"/>
  <delete-node tree="comment: // resolution: 1 / 2**112 [55700,55725]"/>
  <delete-tree tree="struct_declaration [55731,55777]"/>
  <delete-node tree="comment: // range: [0, 2**144 - 1] [55785,55810]"/>
  <delete-node tree="comment: // resolution: 1 / 2**112 [55816,55841]"/>
  <delete-tree tree="struct_declaration [55847,55890]"/>
  <delete-tree tree="state_variable_declaration [55898,55938]"/>
  <delete-tree tree="type_name [55944,55948]"/>
  <delete-tree tree="visibility [55949,55956]"/>
  <delete-node tree="constant: constant [55957,55965]"/>
  <delete-node tree="identifier: Q112 [55966,55970]"/>
  <delete-node tree="=: = [55971,55972]"/>
  <delete-tree tree="primitive_type [55973,55977]"/>
  <delete-node tree="(: ( [55977,55978]"/>
  <delete-node tree="): ) [55979,55980]"/>
  <delete-node tree="type_cast_expression [55973,55980]"/>
  <delete-node tree="&lt;&lt;: &lt;&lt; [55981,55983]"/>
  <delete-node tree="identifier: RESOLUTION [55984,55994]"/>
  <delete-node tree="binary_expression [55973,55994]"/>
  <delete-node tree="state_variable_declaration [55944,55995]"/>
  <delete-tree tree="state_variable_declaration [56001,56049]"/>
  <delete-node tree="comment: // encode a uint112 as a UQ112x112 [56057,56091]"/>
  <delete-node tree="function: function [56097,56105]"/>
  <delete-node tree="identifier: encode [56106,56112]"/>
  <delete-node tree="(: ( [56112,56113]"/>
  <delete-tree tree="parameter [56113,56122]"/>
  <delete-node tree="): ) [56122,56123]"/>
  <delete-tree tree="visibility [56124,56132]"/>
  <delete-tree tree="return_type_definition [56138,56164]"/>
  <delete-tree tree="function_body [56165,56226]"/>
  <delete-node tree="function_definition [56097,56226]"/>
  <delete-node tree="comment: // encodes a uint144 as a UQ144x112 [56234,56269]"/>
  <delete-tree tree="function_definition [56275,56407]"/>
  <delete-node tree="comment: // divide a UQ112x112 by a uint112, returning a UQ112x112 [56415,56472]"/>
  <delete-tree tree="function_definition [56478,56676]"/>
  <delete-node tree="comment: // multiply a UQ112x112 by a uint, returning a UQ144x112 [56684,56740]"/>
  <delete-node tree="comment: // reverts on overflow [56746,56768]"/>
  <delete-node tree="function: function [56774,56782]"/>
  <delete-node tree="identifier: mul [56783,56786]"/>
  <delete-node tree="(: ( [56786,56787]"/>
  <delete-tree tree="parameter [56787,56808]"/>
  <delete-node tree=",: , [56808,56809]"/>
  <delete-tree tree="parameter [56810,56816]"/>
  <delete-node tree="): ) [56816,56817]"/>
  <delete-tree tree="visibility [56818,56826]"/>
  <delete-tree tree="state_mutability [56827,56831]"/>
  <delete-tree tree="return_type_definition [56832,56858]"/>
  <delete-node tree="{: { [56859,56860]"/>
  <delete-tree tree="variable_declaration_statement [56870,56877]"/>
  <delete-node tree="identifier: require [56887,56894]"/>
  <delete-node tree="(: ( [56894,56895]"/>
  <delete-tree tree="call_argument [56895,56949]"/>
  <delete-node tree=",: , [56949,56950]"/>
  <delete-node tree="): ) [56988,56989]"/>
  <delete-node tree="call_expression [56887,56989]"/>
  <delete-node tree="expression_statement [56887,56990]"/>
  <delete-tree tree="return_statement [57000,57020]"/>
  <delete-node tree="}: } [57026,57027]"/>
  <delete-node tree="function_body [56859,57027]"/>
  <delete-node tree="function_definition [56774,57027]"/>
  <delete-node tree="comment: // returns a UQ112x112 which represents the ratio of the numerator to the denominator [57035,57120]"/>
  <delete-node tree="comment: // equivalent to encode(numerator).div(denominator) [57126,57177]"/>
  <delete-node tree="function: function [57183,57191]"/>
  <delete-node tree="identifier: fraction [57192,57200]"/>
  <delete-node tree="(: ( [57200,57201]"/>
  <delete-tree tree="parameter [57201,57218]"/>
  <delete-node tree=",: , [57218,57219]"/>
  <delete-tree tree="parameter [57220,57239]"/>
  <delete-node tree="): ) [57239,57240]"/>
  <delete-tree tree="visibility [57241,57249]"/>
  <delete-tree tree="state_mutability [57250,57254]"/>
  <delete-tree tree="return_type_definition [57255,57281]"/>
  <delete-node tree="{: { [57282,57283]"/>
  <delete-node tree="identifier: require [57293,57300]"/>
  <delete-node tree="(: ( [57300,57301]"/>
  <delete-tree tree="call_argument [57301,57316]"/>
  <delete-node tree=",: , [57316,57317]"/>
  <delete-node tree="): ) [57343,57344]"/>
  <delete-node tree="call_expression [57293,57344]"/>
  <delete-node tree="expression_statement [57293,57345]"/>
  <delete-tree tree="return_statement [57355,57422]"/>
  <delete-node tree="}: } [57428,57429]"/>
  <delete-node tree="function_body [57282,57429]"/>
  <delete-node tree="function_definition [57183,57429]"/>
  <delete-node tree="comment: // decode a UQ112x112 into a uint112 by truncating after the radix point [57437,57509]"/>
  <delete-tree tree="function_definition [57515,57642]"/>
  <delete-node tree="comment: // decode a UQ144x112 into a uint144 by truncating after the radix point [57650,57722]"/>
  <delete-tree tree="function_definition [57728,57858]"/>
  <delete-node tree="comment: // take the reciprocal of a UQ112x112 [57866,57903]"/>
  <delete-tree tree="function_definition [57909,58116]"/>
  <delete-node tree="comment: // square root of a UQ112x112 [58124,58153]"/>
  <delete-tree tree="function_definition [58159,58322]"/>
  <delete-node tree="}: } [58324,58325]"/>
  <delete-node tree="contract_body [55662,58325]"/>
  <delete-node tree="library_declaration [55643,58325]"/>
  <delete-node tree="library: library [58424,58431]"/>
  <delete-node tree="identifier: UniswapV2OracleLibrary [58432,58454]"/>
  <delete-node tree="{: { [58455,58456]"/>
  <delete-tree tree="using_directive [58462,58485]"/>
  <delete-node tree="comment: // helper function that returns the current block timestamp within the range of uint32, i.e. [0, 2**32 - 1] [58493,58600]"/>
  <delete-node tree="function: function [58606,58614]"/>
  <delete-node tree="identifier: currentBlockTimestamp [58615,58636]"/>
  <delete-node tree="(: ( [58636,58637]"/>
  <delete-node tree="): ) [58637,58638]"/>
  <delete-tree tree="visibility [58639,58647]"/>
  <delete-tree tree="state_mutability [58648,58652]"/>
  <delete-tree tree="return_type_definition [58653,58669]"/>
  <delete-node tree="{: { [58670,58671]"/>
  <delete-node tree="return: return [58681,58687]"/>
  <delete-tree tree="primitive_type [58688,58694]"/>
  <delete-node tree="(: ( [58694,58695]"/>
  <delete-node tree="): ) [58720,58721]"/>
  <delete-node tree="type_cast_expression [58688,58721]"/>
  <delete-node tree="return_statement [58681,58722]"/>
  <delete-node tree="}: } [58728,58729]"/>
  <delete-node tree="function_body [58670,58729]"/>
  <delete-node tree="function_definition [58606,58729]"/>
  <delete-node tree="comment: // produces the cumulative price using counterfactuals to save gas and avoid a call to sync. [58737,58829]"/>
  <delete-tree tree="function_definition [58835,59892]"/>
  <delete-node tree="}: } [59894,59895]"/>
  <delete-node tree="contract_body [58455,59895]"/>
  <delete-node tree="library_declaration [58424,59895]"/>
  <delete-tree tree="library_declaration [59901,61871]"/>
  <delete-node tree="contract: contract [63378,63386]"/>
  <delete-node tree="identifier: IUSDC [63387,63392]"/>
  <delete-node tree="{: { [63393,63394]"/>
  <delete-node tree="function: function [63400,63408]"/>
  <delete-node tree="identifier: isBlacklisted [63409,63422]"/>
  <delete-node tree="(: ( [63422,63423]"/>
  <delete-tree tree="parameter [63423,63439]"/>
  <delete-node tree="): ) [63439,63440]"/>
  <delete-tree tree="state_mutability [63450,63454]"/>
  <delete-tree tree="return_type_definition [63455,63469]"/>
  <delete-node tree="function_definition [63400,63470]"/>
  <delete-node tree="}: } [63472,63473]"/>
  <delete-node tree="contract_body [63393,63473]"/>
  <delete-node tree="contract_declaration [63378,63473]"/>
  <delete-tree tree="visibility [51193,51199]"/>
  <delete-tree tree="modifier_invocation [51200,51210]"/>
  <delete-tree tree="return_type_definition [51211,51225]"/>
  <delete-node tree="identifier: _mint [51237,51242]"/>
  <delete-tree tree="return_statement [51270,51282]"/>
  <delete-node tree="identifier: hashEIP712Domain [48300,48316]"/>
  <delete-tree tree="call_argument [48317,48323]"/>
  <delete-tree tree="call_argument [48325,48339]"/>
  <delete-tree tree="call_argument [48341,48363]"/>
  <delete-node tree=",: , [48363,48364]"/>
  <delete-node tree="identifier: EIP712_DOMAIN_SEPARATOR [48264,48287]"/>
  <delete-node tree="=: = [48288,48289]"/>
  <delete-node tree="assignment_expression [48264,48379]"/>
  <delete-tree tree="parameter [23857,23872]"/>
  <delete-tree tree="visibility [23890,23896]"/>
  <delete-node tree="identifier: _burnFrom [23908,23917]"/>
  <delete-tree tree="call_argument [49014,49032]"/>
  <delete-node tree=",: , [49051,49052]"/>
  <delete-tree tree="call_argument [49258,49273]"/>
  <delete-node tree=",: , [49292,49293]"/>
  <delete-tree tree="parameter [21144,21159]"/>
  <delete-node tree=",: , [21159,21160]"/>
  <delete-tree tree="call_argument [21205,21226]"/>
  <delete-node tree="identifier: _totalSupply [21275,21287]"/>
  <delete-node tree="=: = [21288,21289]"/>
  <delete-tree tree="member_expression [21290,21306]"/>
  <delete-node tree="(: ( [21306,21307]"/>
  <delete-node tree="): ) [21313,21314]"/>
  <delete-node tree="call_expression [21290,21314]"/>
  <delete-node tree="assignment_expression [21275,21314]"/>
  <delete-node tree="expression_statement [21275,21315]"/>
  <delete-tree tree="array_access [21325,21343]"/>
  <delete-node tree="=: = [21344,21345]"/>
  <delete-tree tree="member_expression [21346,21368]"/>
  <delete-node tree="(: ( [21368,21369]"/>
  <delete-node tree="): ) [21375,21376]"/>
  <delete-node tree="call_expression [21346,21376]"/>
  <delete-node tree="assignment_expression [21325,21376]"/>
  <delete-node tree="expression_statement [21325,21377]"/>
  <delete-node tree="emit: emit [21387,21391]"/>
  <delete-node tree="identifier: Transfer [21392,21400]"/>
  <delete-node tree="(: ( [21400,21401]"/>
  <delete-tree tree="call_argument [21401,21411]"/>
  <delete-node tree=",: , [21411,21412]"/>
  <delete-tree tree="call_argument [21413,21420]"/>
  <delete-node tree=",: , [21420,21421]"/>
  <delete-node tree="): ) [21428,21429]"/>
  <delete-node tree="emit_statement [21387,21430]"/>
  <delete-tree tree="visibility [72089,72095]"/>
  <delete-tree tree="return_type_definition [72101,72118]"/>
  <delete-tree tree="call_expression [72175,72191]"/>
  <delete-node tree="&gt;=: &gt;= [84283,84285]"/>
  <delete-node tree="binary_expression [84250,84299]"/>
  <delete-node tree="return: return [72130,72136]"/>
  <delete-node tree="return_statement [72130,72193]"/>
  <delete-tree tree="call_argument [78573,78577]"/>
  <delete-tree tree="contract_declaration [68939,69012]"/>
  <delete-node tree="uint: uint [51852,51856]"/>
  <delete-tree tree="parameter [77020,77035]"/>
  <delete-tree tree="member_expression [77057,77092]"/>
  <delete-node tree="=: = [77093,77094]"/>
  <delete-node tree="assignment_expression [77057,77143]"/>
  <delete-node tree="identifier: newUniv2 [83484,83492]"/>
  <delete-node tree="variable_declaration [83476,83492]"/>
  <delete-tree tree="call_expression [83496,83515]"/>
  <delete-tree tree="call_argument [73368,73375]"/>
  <delete-tree tree="member_expression [72026,72048]"/>
  <delete-tree tree="member_expression [20652,20673]"/>
  <delete-tree tree="array_access [20632,20649]"/>
  <delete-node tree="=: = [20650,20651]"/>
  <delete-node tree="assignment_expression [20632,20723]"/>
  <delete-tree tree="binary_expression [65046,65057]"/>
  <delete-node tree="||: || [65058,65060]"/>
  <delete-tree tree="binary_expression [65061,65078]"/>
  <delete-tree tree="ternary_expression [67247,67296]"/>
  <delete-tree tree="call_argument [83816,83847]"/>
  <delete-tree tree="member_expression [21938,21960]"/>
  <delete-tree tree="array_access [21917,21935]"/>
  <delete-node tree="=: = [21936,21937]"/>
  <delete-node tree="assignment_expression [21917,22006]"/>
  <delete-node tree="mapping: mapping [16370,16377]"/>
  <delete-node tree="(: ( [16378,16379]"/>
  <delete-tree tree="primitive_type [16379,16386]"/>
  <delete-node tree="=&gt;: =&gt; [16387,16389]"/>
  <delete-node tree="): ) [16397,16398]"/>
  <delete-node tree="type_name [16370,16398]"/>
  <delete-node tree="identifier: _balances [16407,16416]"/>
  <delete-node tree="state_variable_declaration [16370,16417]"/>
  <delete-node tree="mapping: mapping [16425,16432]"/>
  <delete-node tree="(: ( [16433,16434]"/>
  <delete-tree tree="primitive_type [16434,16441]"/>
  <delete-node tree="=&gt;: =&gt; [16442,16444]"/>
  <delete-node tree="mapping: mapping [16445,16452]"/>
  <delete-node tree="(: ( [16453,16454]"/>
  <delete-tree tree="primitive_type [16454,16461]"/>
  <delete-node tree="=&gt;: =&gt; [16462,16464]"/>
  <delete-node tree="): ) [16472,16473]"/>
  <delete-node tree="type_name [16445,16473]"/>
  <delete-node tree="): ) [16473,16474]"/>
  <delete-node tree="type_name [16425,16474]"/>
  <delete-node tree="identifier: _allowances [16483,16494]"/>
  <delete-node tree="state_variable_declaration [16425,16495]"/>
  <delete-node tree="identifier: _totalSupply [16519,16531]"/>
  <delete-node tree="state_variable_declaration [16503,16532]"/>
  <delete-node tree="comment: /**      * @dev See {IERC20-totalSupply}.      */ [16540,16591]"/>
  <delete-node tree="function: function [16597,16605]"/>
  <delete-node tree="identifier: totalSupply [16606,16617]"/>
  <delete-node tree="(: ( [16617,16618]"/>
  <delete-node tree="): ) [16618,16619]"/>
  <delete-tree tree="visibility [16620,16626]"/>
  <delete-tree tree="state_mutability [16627,16631]"/>
  <delete-tree tree="function_body [16650,16688]"/>
  <delete-node tree="function_definition [16597,16688]"/>
  <delete-node tree="comment: /**      * @dev See {IERC20-balanceOf}.      */ [16696,16745]"/>
  <delete-tree tree="function_definition [16751,16861]"/>
  <delete-node tree="comment: /**      * @dev See {IERC20-transfer}.      *      * Requirements:      *      * - `recipient` cannot be the zero address.      * - the caller must have a balance of at least `amount`.      */ [16869,17068]"/>
  <delete-node tree="function: function [17074,17082]"/>
  <delete-node tree="identifier: transfer [17083,17091]"/>
  <delete-node tree="(: ( [17091,17092]"/>
  <delete-tree tree="parameter [17092,17109]"/>
  <delete-node tree=",: , [17109,17110]"/>
  <delete-tree tree="parameter [17111,17125]"/>
  <delete-node tree="): ) [17125,17126]"/>
  <delete-tree tree="visibility [17127,17133]"/>
  <delete-tree tree="return_type_definition [17134,17148]"/>
  <delete-node tree="{: { [17149,17150]"/>
  <delete-node tree="identifier: _transfer [17160,17169]"/>
  <delete-node tree="(: ( [17169,17170]"/>
  <delete-tree tree="call_argument [17170,17182]"/>
  <delete-node tree=",: , [17182,17183]"/>
  <delete-tree tree="call_argument [17184,17193]"/>
  <delete-node tree=",: , [17193,17194]"/>
  <delete-node tree="): ) [17201,17202]"/>
  <delete-node tree="call_expression [17160,17202]"/>
  <delete-node tree="expression_statement [17160,17203]"/>
  <delete-tree tree="return_statement [17213,17225]"/>
  <delete-node tree="}: } [17231,17232]"/>
  <delete-node tree="function_body [17149,17232]"/>
  <delete-node tree="function_definition [17074,17232]"/>
  <delete-node tree="comment: /**      * @dev See {IERC20-allowance}.      */ [17240,17289]"/>
  <delete-tree tree="function_definition [17295,17429]"/>
  <delete-node tree="comment: /**      * @dev See {IERC20-approve}.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [17437,17570]"/>
  <delete-node tree="function: function [17576,17584]"/>
  <delete-node tree="identifier: approve [17585,17592]"/>
  <delete-node tree="(: ( [17592,17593]"/>
  <delete-tree tree="parameter [17593,17608]"/>
  <delete-node tree=",: , [17608,17609]"/>
  <delete-tree tree="parameter [17610,17624]"/>
  <delete-node tree="): ) [17624,17625]"/>
  <delete-tree tree="visibility [17626,17632]"/>
  <delete-tree tree="return_type_definition [17633,17647]"/>
  <delete-node tree="{: { [17648,17649]"/>
  <delete-node tree="identifier: _approve [17659,17667]"/>
  <delete-node tree="(: ( [17667,17668]"/>
  <delete-tree tree="call_argument [17668,17680]"/>
  <delete-node tree=",: , [17680,17681]"/>
  <delete-tree tree="call_argument [17682,17689]"/>
  <delete-node tree=",: , [17689,17690]"/>
  <delete-node tree="): ) [17697,17698]"/>
  <delete-node tree="call_expression [17659,17698]"/>
  <delete-node tree="expression_statement [17659,17699]"/>
  <delete-tree tree="return_statement [17709,17721]"/>
  <delete-node tree="}: } [17727,17728]"/>
  <delete-node tree="function_body [17648,17728]"/>
  <delete-node tree="function_definition [17576,17728]"/>
  <delete-node tree="comment: /**      * @dev See {IERC20-transferFrom}.      *      * Emits an {Approval} event indicating the updated allowance. This is not      * required by the EIP. See the note at the beginning of {ERC20};      *      * Requirements:      * - `sender` and `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      * - the caller must have allowance for `sender`'s tokens of at least      * `amount`.      */ [17736,18194]"/>
  <delete-node tree="function: function [18200,18208]"/>
  <delete-node tree="identifier: transferFrom [18209,18221]"/>
  <delete-node tree="(: ( [18221,18222]"/>
  <delete-tree tree="parameter [18222,18236]"/>
  <delete-node tree=",: , [18236,18237]"/>
  <delete-tree tree="parameter [18238,18255]"/>
  <delete-node tree=",: , [18255,18256]"/>
  <delete-tree tree="parameter [18257,18271]"/>
  <delete-node tree="): ) [18271,18272]"/>
  <delete-tree tree="visibility [18273,18279]"/>
  <delete-tree tree="return_type_definition [18280,18294]"/>
  <delete-node tree="{: { [18295,18296]"/>
  <delete-node tree="identifier: _transfer [18306,18315]"/>
  <delete-node tree="(: ( [18315,18316]"/>
  <delete-tree tree="call_argument [18316,18322]"/>
  <delete-node tree=",: , [18322,18323]"/>
  <delete-tree tree="call_argument [18324,18333]"/>
  <delete-node tree=",: , [18333,18334]"/>
  <delete-node tree="): ) [18341,18342]"/>
  <delete-node tree="call_expression [18306,18342]"/>
  <delete-node tree="expression_statement [18306,18343]"/>
  <delete-node tree="identifier: _approve [18353,18361]"/>
  <delete-node tree="(: ( [18361,18362]"/>
  <delete-tree tree="call_argument [18362,18368]"/>
  <delete-node tree=",: , [18368,18369]"/>
  <delete-tree tree="call_argument [18370,18382]"/>
  <delete-node tree=",: , [18382,18383]"/>
  <delete-tree tree="member_expression [18384,18421]"/>
  <delete-node tree="(: ( [18421,18422]"/>
  <delete-node tree=",: , [18428,18429]"/>
  <delete-node tree="): ) [18472,18473]"/>
  <delete-node tree="call_expression [18384,18473]"/>
  <delete-node tree="call_argument [18384,18473]"/>
  <delete-node tree="): ) [18473,18474]"/>
  <delete-node tree="call_expression [18353,18474]"/>
  <delete-node tree="expression_statement [18353,18475]"/>
  <delete-tree tree="return_statement [18485,18497]"/>
  <delete-node tree="}: } [18503,18504]"/>
  <delete-node tree="function_body [18295,18504]"/>
  <delete-node tree="function_definition [18200,18504]"/>
  <delete-node tree="comment: /**      * @dev Atomically increases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [18512,18907]"/>
  <delete-node tree="function: function [18913,18921]"/>
  <delete-node tree="identifier: increaseAllowance [18922,18939]"/>
  <delete-node tree="(: ( [18939,18940]"/>
  <delete-tree tree="parameter [18940,18955]"/>
  <delete-node tree=",: , [18955,18956]"/>
  <delete-node tree="): ) [18975,18976]"/>
  <delete-tree tree="visibility [18977,18983]"/>
  <delete-tree tree="return_type_definition [18984,18998]"/>
  <delete-tree tree="function_body [18999,19123]"/>
  <delete-node tree="function_definition [18913,19123]"/>
  <delete-node tree="comment: /**      * @dev Atomically decreases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      * - `spender` must have allowance for the caller of at least      * `subtractedValue`.      */ [19131,19620]"/>
  <delete-node tree="function: function [19626,19634]"/>
  <delete-node tree="identifier: decreaseAllowance [19635,19652]"/>
  <delete-node tree="(: ( [19652,19653]"/>
  <delete-tree tree="parameter [19653,19668]"/>
  <delete-node tree=",: , [19668,19669]"/>
  <delete-node tree="): ) [19693,19694]"/>
  <delete-tree tree="visibility [19695,19701]"/>
  <delete-tree tree="return_type_definition [19702,19716]"/>
  <delete-node tree="{: { [19717,19718]"/>
  <delete-node tree="identifier: _approve [19728,19736]"/>
  <delete-node tree="(: ( [19736,19737]"/>
  <delete-tree tree="call_argument [19737,19749]"/>
  <delete-node tree=",: , [19749,19750]"/>
  <delete-tree tree="call_argument [19751,19758]"/>
  <delete-node tree=",: , [19758,19759]"/>
  <delete-tree tree="member_expression [19760,19798]"/>
  <delete-node tree="(: ( [19798,19799]"/>
  <delete-tree tree="call_argument [19799,19814]"/>
  <delete-node tree=",: , [19814,19815]"/>
  <delete-node tree="): ) [19855,19856]"/>
  <delete-node tree="call_expression [19760,19856]"/>
  <delete-node tree="call_argument [19760,19856]"/>
  <delete-node tree="): ) [19856,19857]"/>
  <delete-node tree="call_expression [19728,19857]"/>
  <delete-node tree="expression_statement [19728,19858]"/>
  <delete-tree tree="return_statement [19868,19880]"/>
  <delete-node tree="}: } [19886,19887]"/>
  <delete-node tree="function_body [19717,19887]"/>
  <delete-node tree="function_definition [19626,19887]"/>
  <delete-node tree="comment: /**      * @dev Moves tokens `amount` from `sender` to `recipient`.      *      * This is internal function is equivalent to {transfer}, and can be used to      * e.g. implement automatic token fees, slashing mechanisms, etc.      *      * Emits a {Transfer} event.      *      * Requirements:      *      * - `sender` cannot be the zero address.      * - `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      */ [19895,20371]"/>
  <delete-node tree="comment: /** @dev Creates `amount` tokens and assigns them to `account`, increasing      * the total supply.      *      * Emits a {Transfer} event with `from` set to the zero address.      *      * Requirements      *      * - `to` cannot be the zero address.      */ [20856,21123]"/>
  <delete-node tree="comment: /**      * @dev Destroys `amount` tokens from `account`, reducing the      * total supply.      *      * Emits a {Transfer} event with `to` set to the zero address.      *      * Requirements      *      * - `account` cannot be the zero address.      * - `account` must have at least `amount` tokens.      */ [21445,21763]"/>
  <delete-node tree="function: function [21769,21777]"/>
  <delete-node tree="identifier: _burn [21778,21783]"/>
  <delete-node tree="(: ( [21783,21784]"/>
  <delete-tree tree="parameter [21784,21799]"/>
  <delete-node tree=",: , [21799,21800]"/>
  <delete-tree tree="parameter [21801,21815]"/>
  <delete-node tree="): ) [21815,21816]"/>
  <delete-tree tree="visibility [21817,21825]"/>
  <delete-node tree="{: { [21826,21827]"/>
  <delete-tree tree="expression_statement [22017,22057]"/>
  <delete-tree tree="emit_statement [22067,22110]"/>
  <delete-node tree="}: } [22116,22117]"/>
  <delete-node tree="function_body [21826,22117]"/>
  <delete-node tree="function_definition [21769,22117]"/>
  <delete-node tree="comment: /**      * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.      *      * This is internal function is equivalent to `approve`, and can be used to      * e.g. set automatic allowances for certain subsystems, etc.      *      * Emits an {Approval} event.      *      * Requirements:      *      * - `owner` cannot be the zero address.      * - `spender` cannot be the zero address.      */ [22125,22551]"/>
  <delete-tree tree="parameter [22575,22588]"/>
  <delete-node tree=",: , [22605,22606]"/>
  <delete-tree tree="visibility [22623,22631]"/>
  <delete-node tree="identifier: require [22643,22650]"/>
  <delete-node tree="(: ( [22650,22651]"/>
  <delete-tree tree="call_argument [22651,22670]"/>
  <delete-node tree=",: , [22670,22671]"/>
  <delete-node tree="): ) [22710,22711]"/>
  <delete-node tree="call_expression [22643,22711]"/>
  <delete-node tree="expression_statement [22643,22712]"/>
  <delete-tree tree="expression_statement [22803,22840]"/>
  <delete-tree tree="call_argument [22864,22869]"/>
  <delete-tree tree="call_argument [22880,22886]"/>
  <delete-tree tree="binary_expression [21845,21866]"/>
  <delete-tree tree="call_expression [51472,51484]"/>
  <delete-tree tree="member_expression [51600,51635]"/>
  <delete-node tree="identifier: _approve [51517,51525]"/>
  <delete-node tree="(: ( [51525,51526]"/>
  <delete-node tree=",: , [51550,51551]"/>
  <delete-tree tree="call_argument [51569,51581]"/>
  <delete-node tree=",: , [51581,51582]"/>
  <delete-node tree="call_argument [51600,51688]"/>
  <delete-node tree="): ) [51688,51689]"/>
  <delete-node tree="call_expression [51517,51689]"/>
  <delete-tree tree="array_access [20734,20754]"/>
  <delete-node tree="=: = [20755,20756]"/>
  <delete-tree tree="member_expression [20757,20781]"/>
  <delete-node tree="(: ( [20781,20782]"/>
  <delete-node tree="): ) [20788,20789]"/>
  <delete-node tree="call_expression [20757,20789]"/>
  <delete-node tree="assignment_expression [20734,20789]"/>
  <delete-node tree="expression_statement [20734,20790]"/>
  <delete-node tree="comment: /**      * @dev Destroys `amount` tokens from `account`.`amount` is then deducted      * from the caller's allowance.      *      * See {_burn} and {_approve}.      */ [22903,23075]"/>
  <delete-node tree="function: function [23081,23089]"/>
  <delete-node tree="identifier: _burnFrom [23090,23099]"/>
  <delete-node tree="(: ( [23099,23100]"/>
  <delete-tree tree="parameter [23100,23115]"/>
  <delete-node tree=",: , [23115,23116]"/>
  <delete-tree tree="parameter [23117,23131]"/>
  <delete-node tree="): ) [23131,23132]"/>
  <delete-node tree="{: { [23142,23143]"/>
  <delete-node tree="identifier: _burn [23153,23158]"/>
  <delete-node tree="(: ( [23158,23159]"/>
  <delete-tree tree="call_argument [23159,23166]"/>
  <delete-node tree=",: , [23166,23167]"/>
  <delete-node tree="): ) [23174,23175]"/>
  <delete-node tree="call_expression [23153,23175]"/>
  <delete-node tree="expression_statement [23153,23176]"/>
  <delete-node tree="identifier: _approve [23186,23194]"/>
  <delete-node tree="(: ( [23194,23195]"/>
  <delete-tree tree="call_argument [23195,23202]"/>
  <delete-node tree=",: , [23202,23203]"/>
  <delete-tree tree="call_argument [23204,23216]"/>
  <delete-node tree=",: , [23216,23217]"/>
  <delete-tree tree="member_expression [23218,23256]"/>
  <delete-node tree="(: ( [23256,23257]"/>
  <delete-node tree=",: , [23263,23264]"/>
  <delete-node tree="): ) [23303,23304]"/>
  <delete-node tree="call_expression [23218,23304]"/>
  <delete-node tree="call_argument [23218,23304]"/>
  <delete-node tree="): ) [23304,23305]"/>
  <delete-node tree="call_expression [23186,23305]"/>
  <delete-node tree="expression_statement [23186,23306]"/>
  <delete-node tree="}: } [23312,23313]"/>
  <delete-node tree="function_body [23142,23313]"/>
  <delete-node tree="function_definition [23081,23313]"/>
  <delete-node tree="contract: contract [69687,69695]"/>
  <delete-node tree="identifier: PoolAccount [69696,69707]"/>
  <delete-node tree="{: { [69708,69709]"/>
  <delete-tree tree="enum_declaration [69715,69784]"/>
  <delete-node tree="struct: struct [69792,69798]"/>
  <delete-node tree="identifier: State [69799,69804]"/>
  <delete-node tree="{: { [69805,69806]"/>
  <delete-node tree="identifier: staged [69824,69830]"/>
  <delete-node tree="struct_member [69816,69831]"/>
  <delete-node tree="identifier: claimable [69849,69858]"/>
  <delete-node tree="struct_member [69841,69859]"/>
  <delete-node tree="identifier: bonded [69877,69883]"/>
  <delete-node tree="struct_member [69869,69884]"/>
  <delete-node tree="identifier: phantom [69902,69909]"/>
  <delete-node tree="struct_member [69894,69910]"/>
  <delete-node tree="identifier: fluidUntil [69928,69938]"/>
  <delete-node tree="struct_member [69920,69939]"/>
  <delete-node tree="}: } [69945,69946]"/>
  <delete-node tree="struct_declaration [69792,69946]"/>
  <delete-node tree="}: } [69948,69949]"/>
  <delete-node tree="contract_body [69708,69949]"/>
  <delete-node tree="contract_declaration [69687,69949]"/>
  <delete-node tree="contract: contract [69953,69961]"/>
  <delete-node tree="identifier: PoolStorage [69962,69973]"/>
  <delete-node tree="{: { [69974,69975]"/>
  <delete-tree tree="struct_declaration [69981,70072]"/>
  <delete-node tree="struct: struct [70080,70086]"/>
  <delete-node tree="identifier: Balance [70087,70094]"/>
  <delete-node tree="{: { [70095,70096]"/>
  <delete-node tree="identifier: staged [70114,70120]"/>
  <delete-node tree="struct_member [70106,70121]"/>
  <delete-node tree="identifier: claimable [70139,70148]"/>
  <delete-node tree="struct_member [70131,70149]"/>
  <delete-node tree="identifier: bonded [70167,70173]"/>
  <delete-node tree="struct_member [70159,70174]"/>
  <delete-node tree="identifier: phantom [70192,70199]"/>
  <delete-node tree="struct_member [70184,70200]"/>
  <delete-node tree="}: } [70206,70207]"/>
  <delete-node tree="struct_declaration [70080,70207]"/>
  <delete-tree tree="struct_declaration [70215,70373]"/>
  <delete-node tree="}: } [70375,70376]"/>
  <delete-node tree="contract_body [69974,70376]"/>
  <delete-node tree="contract_declaration [69953,70376]"/>
  <delete-tree tree="contract_declaration [70380,70434]"/>
  <delete-node tree="constant: constant [64294,64302]"/>
  <delete-node tree="identifier: UNISWAP_FACTORY [64303,64318]"/>
  <delete-node tree="=: = [64319,64320]"/>
  <delete-tree tree="type_cast_expression [64321,64372]"/>
  <delete-node tree="state_variable_declaration [64278,64373]"/>
  <delete-tree tree="visibility [64389,64397]"/>
  <delete-node tree="identifier: _dao [64398,64402]"/>
  <delete-node tree="state_variable_declaration [64381,64403]"/>
  <delete-tree tree="visibility [64417,64425]"/>
  <delete-node tree="identifier: _dollar [64426,64433]"/>
  <delete-node tree="state_variable_declaration [64409,64434]"/>
  <delete-tree tree="state_variable_declaration [64442,64469]"/>
  <delete-tree tree="state_variable_declaration [64475,64505]"/>
  <delete-tree tree="visibility [64519,64527]"/>
  <delete-tree tree="state_mutability [71762,71766]"/>
  <delete-tree tree="member_expression [71803,71824]"/>
  <delete-tree tree="visibility [64549,64557]"/>
  <delete-node tree="identifier: _cumulative [64558,64569]"/>
  <delete-node tree="state_variable_declaration [64541,64570]"/>
  <delete-tree tree="state_variable_declaration [64576,64603]"/>
  <delete-tree tree="visibility [64619,64627]"/>
  <delete-node tree="identifier: _reserve [64628,64636]"/>
  <delete-node tree="state_variable_declaration [64611,64637]"/>
  <delete-tree tree="constructor_definition [64645,64744]"/>
  <delete-node tree="function: function [64752,64760]"/>
  <delete-node tree="identifier: setup [64761,64766]"/>
  <delete-node tree="(: ( [64766,64767]"/>
  <delete-node tree="): ) [64767,64768]"/>
  <delete-tree tree="visibility [64769,64775]"/>
  <delete-tree tree="modifier_invocation [64776,64783]"/>
  <delete-node tree="{: { [64784,64785]"/>
  <delete-tree tree="expression_statement [64795,64882]"/>
  <delete-tree tree="variable_declaration_statement [64894,64962]"/>
  <delete-tree tree="expression_statement [64972,65007]"/>
  <delete-node tree="}: } [65148,65149]"/>
  <delete-node tree="function_body [64784,65149]"/>
  <delete-node tree="function_definition [64752,65149]"/>
  <delete-node tree="comment: /**      * Trades/Liquidity: (1) Initializes reserve and blockTimestampLast (can calculate a price)      *                   (2) Has non-zero cumulative prices      *      * Steps: (1) Captures a reference blockTimestampLast      *        (2) First reported value      */ [65157,65434]"/>
  <delete-node tree="function: function [65697,65705]"/>
  <delete-node tree="identifier: initializeOracle [65706,65722]"/>
  <delete-node tree="(: ( [65722,65723]"/>
  <delete-node tree="): ) [65723,65724]"/>
  <delete-node tree="{: { [65733,65734]"/>
  <delete-tree tree="variable_declaration_statement [65744,65772]"/>
  <delete-node tree="=: = [65806,65807]"/>
  <delete-tree tree="ternary_expression [65808,65905]"/>
  <delete-node tree="variable_declaration_statement [65782,65906]"/>
  <delete-tree tree="variable_declaration_statement [65916,66001]"/>
  <delete-tree tree="if_statement [66011,66293]"/>
  <delete-node tree="}: } [66299,66300]"/>
  <delete-node tree="function_body [65733,66300]"/>
  <delete-node tree="function_definition [65697,66300]"/>
  <delete-node tree="function: function [66308,66316]"/>
  <delete-node tree="identifier: updateOracle [66317,66329]"/>
  <delete-node tree="(: ( [66329,66330]"/>
  <delete-node tree="): ) [66330,66331]"/>
  <delete-node tree="returns: returns [66340,66347]"/>
  <delete-node tree="(: ( [66348,66349]"/>
  <delete-node tree=",: , [66368,66369]"/>
  <delete-tree tree="parameter [66370,66374]"/>
  <delete-node tree="): ) [66374,66375]"/>
  <delete-node tree="return_type_definition [66340,66375]"/>
  <delete-node tree="{: { [66376,66377]"/>
  <delete-tree tree="variable_declaration_statement [66487,66552]"/>
  <delete-node tree="=: = [66575,66576]"/>
  <delete-tree tree="boolean_literal [66577,66581]"/>
  <delete-node tree="variable_declaration_statement [66564,66582]"/>
  <delete-tree tree="if_statement [66592,66687]"/>
  <delete-tree tree="if_statement [66697,66789]"/>
  <delete-tree tree="if_statement [66799,66858]"/>
  <delete-tree tree="return_statement [66870,66892]"/>
  <delete-node tree="}: } [66898,66899]"/>
  <delete-node tree="function_body [66376,66899]"/>
  <delete-node tree="function_definition [66308,66899]"/>
  <delete-tree tree="type_name [67032,67038]"/>
  <delete-tree tree="member_expression [67066,67112]"/>
  <delete-tree tree="type_cast_expression [67113,67127]"/>
  <delete-tree tree="variable_declaration_statement [67139,67188]"/>
  <delete-node tree="comment: // overflow is desired [67189,67211]"/>
  <delete-tree tree="expression_statement [67416,67444]"/>
  <delete-tree tree="expression_statement [67454,67484]"/>
  <delete-tree tree="return_statement [67496,67519]"/>
  <delete-tree tree="visibility [65459,65465]"/>
  <delete-tree tree="modifier_invocation [65466,65473]"/>
  <delete-node tree="returns: returns [65474,65481]"/>
  <delete-node tree="(: ( [65482,65483]"/>
  <delete-node tree=",: , [65502,65503]"/>
  <delete-tree tree="parameter [65504,65508]"/>
  <delete-node tree="): ) [65508,65509]"/>
  <delete-node tree="return_type_definition [65474,65509]"/>
  <delete-tree tree="call_argument [67349,67394]"/>
  <delete-node tree=",: , [67394,67395]"/>
  <delete-tree tree="call_argument [67396,67402]"/>
  <delete-node tree="identifier: _initialized [65525,65537]"/>
  <delete-tree tree="block_statement [65539,65587]"/>
  <delete-node tree="else: else [65588,65592]"/>
  <delete-tree tree="expression_statement [65608,65627]"/>
  <delete-node tree="(: ( [65648,65649]"/>
  <delete-node tree=",: , [65662,65663]"/>
  <delete-node tree="): ) [65669,65670]"/>
  <delete-node tree="tuple_expression [65648,65670]"/>
  <delete-node tree="function: function [67534,67542]"/>
  <delete-node tree="identifier: updateReserve [67543,67556]"/>
  <delete-node tree="(: ( [67556,67557]"/>
  <delete-node tree="): ) [67557,67558]"/>
  <delete-node tree="{: { [67585,67586]"/>
  <delete-node tree="=: = [67616,67617]"/>
  <delete-node tree="identifier: _reserve [67618,67626]"/>
  <delete-node tree="variable_declaration_statement [67596,67627]"/>
  <delete-tree tree="variable_declaration_statement [67637,67697]"/>
  <delete-tree tree="expression_statement [67707,67752]"/>
  <delete-node tree="comment: // get counter's reserve [67753,67777]"/>
  <delete-tree tree="return_statement [67789,67808]"/>
  <delete-node tree="}: } [67814,67815]"/>
  <delete-node tree="function_body [67585,67815]"/>
  <delete-node tree="function_definition [67534,67815]"/>
  <delete-node tree="function: function [67823,67831]"/>
  <delete-node tree="identifier: usdc [67832,67836]"/>
  <delete-node tree="(: ( [67836,67837]"/>
  <delete-node tree="): ) [67837,67838]"/>
  <delete-tree tree="state_mutability [67848,67852]"/>
  <delete-tree tree="return_type_definition [67853,67870]"/>
  <delete-tree tree="function_body [67871,67923]"/>
  <delete-node tree="function_definition [67823,67923]"/>
  <delete-node tree="function: function [67931,67939]"/>
  <delete-node tree="identifier: pair [67940,67944]"/>
  <delete-node tree="(: ( [67944,67945]"/>
  <delete-node tree="): ) [67945,67946]"/>
  <delete-tree tree="state_mutability [67956,67960]"/>
  <delete-tree tree="return_type_definition [67961,67978]"/>
  <delete-tree tree="function_body [67979,68019]"/>
  <delete-node tree="function_definition [67931,68019]"/>
  <delete-node tree="function: function [68027,68035]"/>
  <delete-node tree="identifier: reserve [68036,68043]"/>
  <delete-node tree="(: ( [68043,68044]"/>
  <delete-node tree="): ) [68044,68045]"/>
  <delete-tree tree="state_mutability [68055,68059]"/>
  <delete-tree tree="return_type_definition [68060,68077]"/>
  <delete-tree tree="function_body [68078,68112]"/>
  <delete-node tree="function_definition [68027,68112]"/>
  <delete-node tree="modifier: modifier [68120,68128]"/>
  <delete-node tree="identifier: onlyDao [68129,68136]"/>
  <delete-node tree="(: ( [68136,68137]"/>
  <delete-node tree="): ) [68137,68138]"/>
  <delete-node tree="{: { [68139,68140]"/>
  <delete-tree tree="expression_statement [68262,68264]"/>
  <delete-node tree="}: } [68270,68271]"/>
  <delete-node tree="function_body [68139,68271]"/>
  <delete-node tree="modifier_definition [68120,68271]"/>
  <delete-node tree="contract: contract [71107,71115]"/>
  <delete-node tree="identifier: PoolGetters [71116,71127]"/>
  <delete-node tree="is: is [71128,71130]"/>
  <delete-tree tree="inheritance_specifier [71131,71140]"/>
  <delete-node tree="{: { [71141,71142]"/>
  <delete-node tree="comment: /**      * Global      */ [71183,71210]"/>
  <delete-tree tree="function_definition [71218,71316]"/>
  <delete-tree tree="function_definition [71324,71411]"/>
  <delete-tree tree="function_definition [71419,71515]"/>
  <delete-tree tree="function_definition [71523,71616]"/>
  <delete-tree tree="function_definition [71624,71724]"/>
  <delete-tree tree="function_definition [71840,71946]"/>
  <delete-node tree="function: function [72208,72216]"/>
  <delete-node tree="identifier: paused [72217,72223]"/>
  <delete-node tree="(: ( [72223,72224]"/>
  <delete-node tree="): ) [72224,72225]"/>
  <delete-tree tree="visibility [72226,72232]"/>
  <delete-tree tree="function_body [72253,72292]"/>
  <delete-node tree="function_definition [72208,72292]"/>
  <delete-node tree="comment: /**      * Account      */ [72300,72328]"/>
  <delete-tree tree="function_definition [72336,72465]"/>
  <delete-tree tree="function_definition [72473,72608]"/>
  <delete-tree tree="function_definition [72616,72745]"/>
  <delete-tree tree="function_definition [72753,72884]"/>
  <delete-node tree="function: function [72892,72900]"/>
  <delete-node tree="identifier: balanceOfRewarded [72901,72918]"/>
  <delete-node tree="(: ( [72918,72919]"/>
  <delete-tree tree="parameter [72919,72934]"/>
  <delete-node tree="): ) [72934,72935]"/>
  <delete-tree tree="visibility [72936,72942]"/>
  <delete-tree tree="state_mutability [72943,72947]"/>
  <delete-tree tree="return_type_definition [72948,72965]"/>
  <delete-node tree="{: { [72966,72967]"/>
  <delete-node tree="=: = [72997,72998]"/>
  <delete-node tree="variable_declaration_statement [72977,73013]"/>
  <delete-tree tree="if_statement [73023,73080]"/>
  <delete-node tree="=: = [73125,73126]"/>
  <delete-tree tree="call_expression [73127,73162]"/>
  <delete-node tree="variable_declaration_statement [73092,73163]"/>
  <delete-tree tree="if_statement [73387,73524]"/>
  <delete-tree tree="return_statement [73534,73543]"/>
  <delete-node tree="}: } [73549,73550]"/>
  <delete-node tree="function_body [72966,73550]"/>
  <delete-node tree="function_definition [72892,73550]"/>
  <delete-node tree="function: function [73558,73566]"/>
  <delete-node tree="identifier: statusOf [73567,73575]"/>
  <delete-node tree="(: ( [73575,73576]"/>
  <delete-tree tree="parameter [73576,73591]"/>
  <delete-node tree="): ) [73591,73592]"/>
  <delete-tree tree="visibility [73593,73599]"/>
  <delete-tree tree="state_mutability [73600,73604]"/>
  <delete-tree tree="return_type_definition [73605,73633]"/>
  <delete-node tree="{: { [73634,73635]"/>
  <delete-node tree="return: return [73645,73651]"/>
  <delete-node tree="?: ? [73699,73700]"/>
  <delete-tree tree="member_expression [73714,73739]"/>
  <delete-node tree=":: : [73740,73741]"/>
  <delete-tree tree="member_expression [73755,73773]"/>
  <delete-node tree="ternary_expression [73652,73773]"/>
  <delete-node tree=".: . [73773,73774]"/>
  <delete-node tree="identifier: Fluid [73774,73779]"/>
  <delete-node tree="member_expression [73652,73779]"/>
  <delete-node tree="return_statement [73645,73780]"/>
  <delete-node tree="}: } [73786,73787]"/>
  <delete-node tree="function_body [73634,73787]"/>
  <delete-node tree="function_definition [73558,73787]"/>
  <delete-node tree="comment: /**      * Epoch      */ [73795,73821]"/>
  <delete-tree tree="function_definition [73829,73917]"/>
  <delete-node tree="}: } [73919,73920]"/>
  <delete-node tree="contract_body [71141,73920]"/>
  <delete-node tree="contract_declaration [71107,73920]"/>
  <delete-node tree="contract: contract [74593,74601]"/>
  <delete-node tree="identifier: PoolSetters [74602,74613]"/>
  <delete-node tree="is: is [74614,74616]"/>
  <delete-tree tree="inheritance_specifier [74617,74626]"/>
  <delete-node tree=",: , [74626,74627]"/>
  <delete-tree tree="inheritance_specifier [74628,74639]"/>
  <delete-node tree="{: { [74640,74641]"/>
  <delete-node tree="comment: /**      * Global      */ [74682,74709]"/>
  <delete-tree tree="function_definition [74717,74782]"/>
  <delete-node tree="comment: /**      * Account      */ [74790,74818]"/>
  <delete-node tree="function: function [74826,74834]"/>
  <delete-node tree="identifier: incrementBalanceOfBonded [74835,74859]"/>
  <delete-node tree="(: ( [74859,74860]"/>
  <delete-node tree=",: , [74875,74876]"/>
  <delete-node tree="): ) [74891,74892]"/>
  <delete-node tree="{: { [74902,74903]"/>
  <delete-tree tree="member_expression [74913,74944]"/>
  <delete-node tree="=: = [74945,74946]"/>
  <delete-tree tree="member_expression [74947,74982]"/>
  <delete-node tree="(: ( [74982,74983]"/>
  <delete-node tree="): ) [74989,74990]"/>
  <delete-node tree="call_expression [74947,74990]"/>
  <delete-node tree="assignment_expression [74913,74990]"/>
  <delete-node tree="expression_statement [74913,74991]"/>
  <delete-tree tree="member_expression [75001,75022]"/>
  <delete-node tree="=: = [75023,75024]"/>
  <delete-tree tree="member_expression [75025,75050]"/>
  <delete-node tree="(: ( [75050,75051]"/>
  <delete-node tree="): ) [75057,75058]"/>
  <delete-node tree="call_expression [75025,75058]"/>
  <delete-node tree="assignment_expression [75001,75058]"/>
  <delete-node tree="expression_statement [75001,75059]"/>
  <delete-node tree="}: } [75065,75066]"/>
  <delete-node tree="function_body [74902,75066]"/>
  <delete-node tree="function_definition [74826,75066]"/>
  <delete-node tree="function: function [75074,75082]"/>
  <delete-node tree="identifier: decrementBalanceOfBonded [75083,75107]"/>
  <delete-node tree="(: ( [75107,75108]"/>
  <delete-node tree=",: , [75123,75124]"/>
  <delete-node tree=",: , [75139,75140]"/>
  <delete-tree tree="parameter [75141,75161]"/>
  <delete-node tree="): ) [75161,75162]"/>
  <delete-node tree="{: { [75172,75173]"/>
  <delete-tree tree="member_expression [75183,75214]"/>
  <delete-node tree="=: = [75215,75216]"/>
  <delete-tree tree="member_expression [75217,75252]"/>
  <delete-node tree="(: ( [75252,75253]"/>
  <delete-node tree=",: , [75259,75260]"/>
  <delete-tree tree="call_argument [75261,75267]"/>
  <delete-node tree="): ) [75267,75268]"/>
  <delete-node tree="call_expression [75217,75268]"/>
  <delete-node tree="assignment_expression [75183,75268]"/>
  <delete-node tree="expression_statement [75183,75269]"/>
  <delete-tree tree="member_expression [75279,75300]"/>
  <delete-node tree="=: = [75301,75302]"/>
  <delete-tree tree="member_expression [75303,75328]"/>
  <delete-node tree="(: ( [75328,75329]"/>
  <delete-node tree=",: , [75335,75336]"/>
  <delete-tree tree="call_argument [75337,75343]"/>
  <delete-node tree="): ) [75343,75344]"/>
  <delete-node tree="call_expression [75303,75344]"/>
  <delete-node tree="assignment_expression [75279,75344]"/>
  <delete-node tree="expression_statement [75279,75345]"/>
  <delete-node tree="}: } [75351,75352]"/>
  <delete-node tree="function_body [75172,75352]"/>
  <delete-node tree="function_definition [75074,75352]"/>
  <delete-node tree="function: function [75360,75368]"/>
  <delete-node tree="identifier: incrementBalanceOfStaged [75369,75393]"/>
  <delete-node tree="(: ( [75393,75394]"/>
  <delete-tree tree="parameter [75394,75409]"/>
  <delete-node tree=",: , [75409,75410]"/>
  <delete-node tree="): ) [75425,75426]"/>
  <delete-node tree="{: { [75436,75437]"/>
  <delete-tree tree="member_expression [75447,75478]"/>
  <delete-node tree="=: = [75479,75480]"/>
  <delete-tree tree="member_expression [75481,75516]"/>
  <delete-node tree="(: ( [75516,75517]"/>
  <delete-node tree="): ) [75523,75524]"/>
  <delete-node tree="call_expression [75481,75524]"/>
  <delete-node tree="assignment_expression [75447,75524]"/>
  <delete-node tree="expression_statement [75447,75525]"/>
  <delete-tree tree="member_expression [75535,75556]"/>
  <delete-node tree="=: = [75557,75558]"/>
  <delete-tree tree="member_expression [75559,75584]"/>
  <delete-node tree="(: ( [75584,75585]"/>
  <delete-node tree="): ) [75591,75592]"/>
  <delete-node tree="call_expression [75559,75592]"/>
  <delete-node tree="assignment_expression [75535,75592]"/>
  <delete-node tree="expression_statement [75535,75593]"/>
  <delete-node tree="}: } [75599,75600]"/>
  <delete-node tree="function_body [75436,75600]"/>
  <delete-node tree="function_definition [75360,75600]"/>
  <delete-node tree="function: function [75608,75616]"/>
  <delete-node tree="identifier: decrementBalanceOfStaged [75617,75641]"/>
  <delete-node tree="(: ( [75641,75642]"/>
  <delete-tree tree="parameter [75642,75657]"/>
  <delete-node tree=",: , [75657,75658]"/>
  <delete-node tree=",: , [75673,75674]"/>
  <delete-tree tree="parameter [75675,75695]"/>
  <delete-node tree="): ) [75695,75696]"/>
  <delete-node tree="{: { [75706,75707]"/>
  <delete-tree tree="member_expression [75717,75748]"/>
  <delete-node tree="=: = [75749,75750]"/>
  <delete-tree tree="member_expression [75751,75786]"/>
  <delete-node tree="(: ( [75786,75787]"/>
  <delete-node tree=",: , [75793,75794]"/>
  <delete-tree tree="call_argument [75795,75801]"/>
  <delete-node tree="): ) [75801,75802]"/>
  <delete-node tree="call_expression [75751,75802]"/>
  <delete-node tree="assignment_expression [75717,75802]"/>
  <delete-node tree="expression_statement [75717,75803]"/>
  <delete-tree tree="member_expression [75813,75834]"/>
  <delete-node tree="=: = [75835,75836]"/>
  <delete-tree tree="member_expression [75837,75862]"/>
  <delete-node tree="(: ( [75862,75863]"/>
  <delete-node tree=",: , [75869,75870]"/>
  <delete-tree tree="call_argument [75871,75877]"/>
  <delete-node tree="): ) [75877,75878]"/>
  <delete-node tree="call_expression [75837,75878]"/>
  <delete-node tree="assignment_expression [75813,75878]"/>
  <delete-node tree="expression_statement [75813,75879]"/>
  <delete-node tree="}: } [75885,75886]"/>
  <delete-node tree="function_body [75706,75886]"/>
  <delete-node tree="function_definition [75608,75886]"/>
  <delete-node tree="function: function [75894,75902]"/>
  <delete-node tree="identifier: incrementBalanceOfClaimable [75903,75930]"/>
  <delete-node tree="(: ( [75930,75931]"/>
  <delete-tree tree="parameter [75931,75946]"/>
  <delete-node tree=",: , [75946,75947]"/>
  <delete-node tree="): ) [75962,75963]"/>
  <delete-node tree="{: { [75973,75974]"/>
  <delete-tree tree="expression_statement [75984,76068]"/>
  <delete-tree tree="member_expression [76078,76102]"/>
  <delete-node tree="=: = [76103,76104]"/>
  <delete-tree tree="member_expression [76105,76133]"/>
  <delete-node tree="(: ( [76133,76134]"/>
  <delete-node tree="): ) [76140,76141]"/>
  <delete-node tree="call_expression [76105,76141]"/>
  <delete-node tree="assignment_expression [76078,76141]"/>
  <delete-node tree="expression_statement [76078,76142]"/>
  <delete-node tree="}: } [76148,76149]"/>
  <delete-node tree="function_body [75973,76149]"/>
  <delete-node tree="function_definition [75894,76149]"/>
  <delete-node tree="function: function [76157,76165]"/>
  <delete-node tree="identifier: decrementBalanceOfClaimable [76166,76193]"/>
  <delete-node tree="(: ( [76193,76194]"/>
  <delete-node tree=",: , [76209,76210]"/>
  <delete-node tree=",: , [76225,76226]"/>
  <delete-tree tree="parameter [76227,76247]"/>
  <delete-node tree="): ) [76247,76248]"/>
  <delete-tree tree="visibility [76249,76257]"/>
  <delete-node tree="{: { [76258,76259]"/>
  <delete-tree tree="expression_statement [76269,76361]"/>
  <delete-tree tree="member_expression [76371,76395]"/>
  <delete-node tree="=: = [76396,76397]"/>
  <delete-tree tree="member_expression [76398,76426]"/>
  <delete-node tree="(: ( [76426,76427]"/>
  <delete-node tree=",: , [76433,76434]"/>
  <delete-tree tree="call_argument [76435,76441]"/>
  <delete-node tree="): ) [76441,76442]"/>
  <delete-node tree="call_expression [76398,76442]"/>
  <delete-node tree="assignment_expression [76371,76442]"/>
  <delete-node tree="expression_statement [76371,76443]"/>
  <delete-node tree="}: } [76449,76450]"/>
  <delete-node tree="function_body [76258,76450]"/>
  <delete-node tree="function_definition [76157,76450]"/>
  <delete-node tree="function: function [76458,76466]"/>
  <delete-node tree="identifier: incrementBalanceOfPhantom [76467,76492]"/>
  <delete-node tree="(: ( [76492,76493]"/>
  <delete-tree tree="parameter [76493,76508]"/>
  <delete-node tree=",: , [76508,76509]"/>
  <delete-node tree="): ) [76524,76525]"/>
  <delete-tree tree="visibility [76526,76534]"/>
  <delete-tree tree="function_body [76535,76703]"/>
  <delete-node tree="function_definition [76458,76703]"/>
  <delete-node tree="function: function [76711,76719]"/>
  <delete-node tree="identifier: decrementBalanceOfPhantom [76720,76745]"/>
  <delete-node tree="(: ( [76745,76746]"/>
  <delete-tree tree="parameter [76746,76761]"/>
  <delete-node tree=",: , [76761,76762]"/>
  <delete-node tree=",: , [76777,76778]"/>
  <delete-tree tree="parameter [76779,76799]"/>
  <delete-node tree="): ) [76799,76800]"/>
  <delete-tree tree="visibility [76801,76809]"/>
  <delete-tree tree="function_body [76810,76994]"/>
  <delete-node tree="function_definition [76711,76994]"/>
  <delete-node tree="}: } [77153,77154]"/>
  <delete-node tree="contract_body [74640,77154]"/>
  <delete-node tree="contract_declaration [74593,77154]"/>
  <delete-node tree="contract: contract [77831,77839]"/>
  <delete-node tree="identifier: Liquidity [77840,77849]"/>
  <delete-node tree="is: is [77850,77852]"/>
  <delete-tree tree="inheritance_specifier [77853,77864]"/>
  <delete-node tree="{: { [77865,77866]"/>
  <delete-node tree="constant: constant [77888,77896]"/>
  <delete-node tree="identifier: UNISWAP_FACTORY [77897,77912]"/>
  <delete-node tree="=: = [77913,77914]"/>
  <delete-tree tree="type_cast_expression [77915,77966]"/>
  <delete-node tree="state_variable_declaration [77872,77967]"/>
  <delete-node tree="function: function [77975,77983]"/>
  <delete-node tree="identifier: addLiquidity [77984,77996]"/>
  <delete-node tree="(: ( [77996,77997]"/>
  <delete-node tree="): ) [78017,78018]"/>
  <delete-node tree="{: { [78055,78056]"/>
  <delete-tree tree="variable_declaration_tuple [78066,78096]"/>
  <delete-node tree="=: = [78097,78098]"/>
  <delete-node tree="(: ( [78099,78100]"/>
  <delete-tree tree="primitive_type [78100,78107]"/>
  <delete-node tree="(: ( [78107,78108]"/>
  <delete-node tree="): ) [78116,78117]"/>
  <delete-node tree="type_cast_expression [78100,78117]"/>
  <delete-node tree=",: , [78117,78118]"/>
  <delete-tree tree="call_expression [78119,78125]"/>
  <delete-node tree="): ) [78125,78126]"/>
  <delete-node tree="tuple_expression [78099,78126]"/>
  <delete-node tree="variable_declaration_statement [78066,78127]"/>
  <delete-tree tree="variable_declaration_statement [78137,78196]"/>
  <delete-node tree="=: = [78227,78228]"/>
  <delete-tree tree="parenthesized_expression [78229,78261]"/>
  <delete-node tree="?: ? [78262,78263]"/>
  <delete-node tree="identifier: dollarAmount [78278,78290]"/>
  <delete-node tree=":: : [78291,78292]"/>
  <delete-tree tree="member_expression [78307,78329]"/>
  <delete-node tree="(: ( [78329,78330]"/>
  <delete-node tree=",: , [78342,78343]"/>
  <delete-tree tree="call_argument [78344,78352]"/>
  <delete-node tree=",: , [78352,78353]"/>
  <delete-tree tree="call_argument [78354,78362]"/>
  <delete-node tree="): ) [78362,78363]"/>
  <delete-node tree="call_expression [78307,78363]"/>
  <delete-node tree="ternary_expression [78229,78363]"/>
  <delete-node tree="variable_declaration_statement [78208,78364]"/>
  <delete-tree tree="variable_declaration_statement [78376,78408]"/>
  <delete-tree tree="member_expression [78418,78441]"/>
  <delete-node tree="(: ( [78441,78442]"/>
  <delete-tree tree="call_argument [78442,78446]"/>
  <delete-node tree=",: , [78446,78447]"/>
  <delete-node tree="): ) [78460,78461]"/>
  <delete-node tree="call_expression [78418,78461]"/>
  <delete-node tree="expression_statement [78418,78462]"/>
  <delete-node tree="return: return [78538,78544]"/>
  <delete-node tree="(: ( [78545,78546]"/>
  <delete-node tree="identifier: usdcAmount [78546,78556]"/>
  <delete-node tree=",: , [78556,78557]"/>
  <delete-node tree="): ) [78598,78599]"/>
  <delete-node tree="tuple_expression [78545,78599]"/>
  <delete-node tree="return_statement [78538,78600]"/>
  <delete-node tree="}: } [78606,78607]"/>
  <delete-node tree="function_body [78055,78607]"/>
  <delete-node tree="function_definition [77975,78607]"/>
  <delete-node tree="comment: // overridable for testing [78615,78641]"/>
  <delete-node tree="function: function [78647,78655]"/>
  <delete-node tree="identifier: getReserves [78656,78667]"/>
  <delete-node tree="(: ( [78667,78668]"/>
  <delete-node tree=",: , [78682,78683]"/>
  <delete-node tree="): ) [78698,78699]"/>
  <delete-tree tree="visibility [78700,78708]"/>
  <delete-tree tree="state_mutability [78709,78713]"/>
  <delete-tree tree="return_type_definition [78714,78752]"/>
  <delete-tree tree="function_body [78753,79063]"/>
  <delete-node tree="function_definition [78647,79063]"/>
  <delete-node tree="}: } [79065,79066]"/>
  <delete-node tree="contract_body [77865,79066]"/>
  <delete-node tree="contract_declaration [77831,79066]"/>
  <delete-tree tree="inheritance_specifier [79775,79784]"/>
  <delete-node tree="constructor: constructor [79827,79838]"/>
  <delete-node tree="(: ( [79838,79839]"/>
  <delete-tree tree="parameter [79839,79853]"/>
  <delete-node tree=",: , [79853,79854]"/>
  <delete-tree tree="parameter [79855,79868]"/>
  <delete-node tree="): ) [79868,79869]"/>
  <delete-node tree="public: public [79870,79876]"/>
  <delete-node tree="{: { [79877,79878]"/>
  <delete-tree tree="member_expression [79888,79907]"/>
  <delete-node tree="=: = [79908,79909]"/>
  <delete-node tree="identifier: IDAO [79910,79914]"/>
  <delete-node tree="(: ( [79914,79915]"/>
  <delete-node tree="): ) [79925,79926]"/>
  <delete-node tree="call_expression [79910,79926]"/>
  <delete-node tree="assignment_expression [79888,79926]"/>
  <delete-node tree="expression_statement [79888,79927]"/>
  <delete-tree tree="expression_statement [79937,79978]"/>
  <delete-tree tree="expression_statement [79988,80026]"/>
  <delete-node tree="}: } [80032,80033]"/>
  <delete-node tree="function_body [79877,80033]"/>
  <delete-node tree="constructor_definition [79827,80033]"/>
  <delete-node tree="identifier: recovered [49136,49145]"/>
  <delete-node tree="!=: != [49146,49148]"/>
  <delete-tree tree="type_cast_expression [49149,49159]"/>
  <delete-node tree="function: function [81103,81111]"/>
  <delete-node tree="identifier: claim [81112,81117]"/>
  <delete-node tree="(: ( [81117,81118]"/>
  <delete-node tree="): ) [81131,81132]"/>
  <delete-node tree="{: { [81165,81166]"/>
  <delete-node tree="}: } [81385,81386]"/>
  <delete-node tree="function_body [81165,81386]"/>
  <delete-node tree="function_definition [81103,81386]"/>
  <delete-node tree="=: = [81519,81520]"/>
  <delete-tree tree="call_expression [81521,81556]"/>
  <delete-node tree="variable_declaration_statement [81486,81557]"/>
  <delete-tree tree="binary_expression [81622,81642]"/>
  <delete-node tree="identifier: value [81685,81690]"/>
  <delete-node tree="number_literal: 0 [81694,81695]"/>
  <delete-node tree="?: ? [81607,81608]"/>
  <delete-node tree=":: : [81696,81697]"/>
  <delete-tree tree="call_expression [81711,81746]"/>
  <delete-node tree="ternary_expression [81588,81746]"/>
  <delete-tree tree="member_expression [80889,80905]"/>
  <delete-node tree="identifier: value [82503,82508]"/>
  <delete-node tree=",: , [81268,81269]"/>
  <delete-node tree="=: = [82468,82469]"/>
  <delete-node tree=".: . [82509,82510]"/>
  <delete-node tree="identifier: div [82510,82513]"/>
  <delete-node tree="member_expression [82470,82513]"/>
  <delete-node tree="(: ( [82513,82514]"/>
  <delete-tree tree="call_argument [82514,82529]"/>
  <delete-node tree="): ) [82529,82530]"/>
  <delete-node tree="call_expression [82470,82530]"/>
  <delete-node tree="variable_declaration_statement [82448,82531]"/>
  <delete-node tree="identifier: newUniv2 [83680,83688]"/>
  <delete-node tree="function: function [82956,82964]"/>
  <delete-node tree="identifier: provide [82965,82972]"/>
  <delete-node tree="(: ( [82972,82973]"/>
  <delete-tree tree="parameter [82973,82986]"/>
  <delete-node tree="): ) [82986,82987]"/>
  <delete-node tree="identifier: onlyFrozen [82997,83007]"/>
  <delete-node tree="(: ( [83007,83008]"/>
  <delete-node tree="): ) [83018,83019]"/>
  <delete-node tree="modifier_invocation [82997,83019]"/>
  <delete-tree tree="modifier_invocation [83020,83029]"/>
  <delete-node tree="{: { [83030,83031]"/>
  <delete-node tree="=: = [83561,83562]"/>
  <delete-tree tree="call_expression [83563,83609]"/>
  <delete-node tree="variable_declaration_statement [83528,83610]"/>
  <delete-node tree="}: } [83948,83949]"/>
  <delete-node tree="function_body [83030,83949]"/>
  <delete-node tree="function_definition [82956,83949]"/>
  <delete-node tree="function: function [83957,83965]"/>
  <delete-node tree="identifier: emergencyWithdraw [83966,83983]"/>
  <delete-node tree="(: ( [83983,83984]"/>
  <delete-node tree=",: , [83997,83998]"/>
  <delete-tree tree="parameter [83999,84012]"/>
  <delete-node tree="): ) [84012,84013]"/>
  <delete-tree tree="modifier_invocation [84023,84030]"/>
  <delete-tree tree="function_body [84031,84095]"/>
  <delete-node tree="function_definition [83957,84095]"/>
  <delete-node tree="function: function [84103,84111]"/>
  <delete-node tree="identifier: emergencyPause [84112,84126]"/>
  <delete-node tree="(: ( [84126,84127]"/>
  <delete-node tree="): ) [84127,84128]"/>
  <delete-tree tree="modifier_invocation [84138,84145]"/>
  <delete-tree tree="function_body [84146,84172]"/>
  <delete-node tree="function_definition [84103,84172]"/>
  <delete-node tree="modifier: modifier [84409,84417]"/>
  <delete-node tree="identifier: onlyFrozen [84418,84428]"/>
  <delete-node tree="(: ( [84428,84429]"/>
  <delete-tree tree="parameter [84429,84444]"/>
  <delete-node tree="): ) [84444,84445]"/>
  <delete-node tree="{: { [84446,84447]"/>
  <delete-node tree="(: ( [84469,84470]"/>
  <delete-tree tree="call_argument [84484,84530]"/>
  <delete-node tree=",: , [84530,84531]"/>
  <delete-node tree=",: , [84549,84550]"/>
  <delete-node tree="): ) [84586,84587]"/>
  <delete-node tree="call_expression [84457,84587]"/>
  <delete-node tree="expression_statement [84457,84588]"/>
  <delete-tree tree="expression_statement [84600,84602]"/>
  <delete-node tree="}: } [84608,84609]"/>
  <delete-node tree="function_body [84446,84609]"/>
  <delete-node tree="modifier_definition [84409,84609]"/>
  <delete-node tree="modifier: modifier [84617,84625]"/>
  <delete-node tree="identifier: onlyDao [84626,84633]"/>
  <delete-node tree="(: ( [84633,84634]"/>
  <delete-node tree="): ) [84634,84635]"/>
  <delete-node tree="{: { [84636,84637]"/>
  <delete-tree tree="expression_statement [84769,84771]"/>
  <delete-node tree="}: } [84777,84778]"/>
  <delete-node tree="function_body [84636,84778]"/>
  <delete-node tree="modifier_definition [84617,84778]"/>
  <delete-node tree="modifier: modifier [84786,84794]"/>
  <delete-node tree="identifier: notPaused [84795,84804]"/>
  <delete-node tree="(: ( [84804,84805]"/>
  <delete-node tree="): ) [84805,84806]"/>
  <delete-node tree="{: { [84807,84808]"/>
  <delete-tree tree="expression_statement [84920,84922]"/>
  <delete-node tree="}: } [84928,84929]"/>
  <delete-node tree="function_body [84807,84929]"/>
  <delete-node tree="modifier_definition [84786,84929]"/>
  <delete-node tree="&gt;=: &gt;= [83360,83362]"/>
  <delete-node tree="identifier: value [83363,83368]"/>
  <delete-node tree=".: . [82405,82406]"/>
  <delete-node tree="identifier: mul [82406,82409]"/>
  <delete-node tree="member_expression [82376,82409]"/>
  <delete-node tree="(: ( [82409,82410]"/>
  <delete-tree tree="call_argument [82410,82415]"/>
  <delete-node tree="): ) [82415,82416]"/>
  <delete-node tree="call_expression [82376,82416]"/>
  <delete-node tree=".: . [82416,82417]"/>
  <delete-node tree="identifier: div [82417,82420]"/>
  <delete-node tree="member_expression [82376,82420]"/>
  <delete-node tree="(: ( [82420,82421]"/>
  <delete-tree tree="call_argument [82421,82436]"/>
  <delete-node tree="): ) [82436,82437]"/>
  <delete-node tree="call_expression [82376,82437]"/>
  <delete-tree tree="call_argument [26832,26854]"/>
  <delete-tree tree="call_argument [26095,26113]"/>
  <delete-node tree=",: , [82703,82704]"/>
  <delete-tree tree="binary_expression [84674,84702]"/>
  <delete-tree tree="unary_expression [84845,84854]"/>
  <delete-tree tree="binary_expression [68177,68195]"/>
  <delete-node tree=",: , [83920,83921]"/>
  <delete-tree tree="call_argument [83922,83930]"/>
  <delete-node tree=",: , [83930,83931]"/>
  <delete-tree tree="call_argument [83932,83940]"/>
  <delete-tree tree="binary_expression [83197,83216]"/>
  <delete-node tree="&gt;=: &gt;= [73660,73662]"/>
  <delete-tree tree="member_expression [73663,73678]"/>
  <delete-node tree="[: [ [73678,73679]"/>
  <delete-node tree="identifier: account [73679,73686]"/>
  <delete-node tree="]: ] [73686,73687]"/>
  <delete-node tree="array_access [73652,73687]"/>
  <delete-tree tree="binary_expression [82247,82266]"/>
  <delete-tree tree="member_expression [73212,73254]"/>
  <delete-node tree=".: . [73294,73295]"/>
  <delete-node tree="identifier: div [73295,73298]"/>
  <delete-node tree="member_expression [73212,73298]"/>
  <delete-node tree="(: ( [73298,73299]"/>
  <delete-tree tree="call_argument [73299,73310]"/>
  <delete-node tree="): ) [73310,73311]"/>
  <delete-node tree="call_expression [73212,73311]"/>
  <delete-tree tree="member_expression [78472,78497]"/>
  <delete-tree tree="call_argument [78510,78514]"/>
  <delete-node tree=",: , [78514,78515]"/>
  <delete-tree tree="call_argument [78516,78526]"/>
  <delete-node tree="%: % [58711,58712]"/>
  <delete-tree tree="binary_expression [58713,58720]"/>
  <delete-node tree="binary_expression [58695,58720]"/>
  <delete-node tree="contract: contract [107514,107522]"/>
  <delete-node tree="identifier: Deployer1 [107523,107532]"/>
  <delete-node tree="is: is [107533,107535]"/>
  <delete-node tree=",: , [107541,107542]"/>
  <delete-node tree=",: , [107553,107554]"/>
  <delete-node tree="{: { [107567,107568]"/>
  <delete-node tree="function: function [107574,107582]"/>
  <delete-node tree="identifier: initialize [107583,107593]"/>
  <delete-node tree="(: ( [107593,107594]"/>
  <delete-node tree="): ) [107594,107595]"/>
  <delete-tree tree="function_body [107615,107671]"/>
  <delete-node tree="function_definition [107574,107671]"/>
  <delete-node tree="function: function [107679,107687]"/>
  <delete-node tree="identifier: implement [107688,107697]"/>
  <delete-node tree="(: ( [107697,107698]"/>
  <delete-tree tree="parameter [107698,107720]"/>
  <delete-node tree="): ) [107720,107721]"/>
  <delete-tree tree="function_body [107731,107775]"/>
  <delete-node tree="function_definition [107679,107775]"/>
  <delete-node tree="}: } [107777,107778]"/>
  <delete-node tree="contract_body [107567,107778]"/>
  <delete-node tree="contract_declaration [107514,107778]"/>
  <delete-node tree="contract: contract [107782,107790]"/>
  <delete-node tree="identifier: Deployer2 [107791,107800]"/>
  <delete-node tree="is: is [107801,107803]"/>
  <delete-tree tree="inheritance_specifier [107804,107809]"/>
  <delete-node tree=",: , [107809,107810]"/>
  <delete-node tree=",: , [107821,107822]"/>
  <delete-tree tree="inheritance_specifier [107823,107834]"/>
  <delete-node tree="{: { [107835,107836]"/>
  <delete-node tree="function: function [107842,107850]"/>
  <delete-node tree="identifier: initialize [107851,107861]"/>
  <delete-node tree="(: ( [107861,107862]"/>
  <delete-node tree="): ) [107862,107863]"/>
  <delete-tree tree="modifier_invocation [107864,107875]"/>
  <delete-tree tree="visibility [107876,107882]"/>
  <delete-node tree="{: { [107883,107884]"/>
  <delete-tree tree="member_expression [107894,107916]"/>
  <delete-node tree="=: = [107917,107918]"/>
  <delete-tree tree="new_expression [107919,107929]"/>
  <delete-node tree="(: ( [107929,107930]"/>
  <delete-tree tree="primitive_type [107930,107937]"/>
  <delete-node tree="(: ( [107937,107938]"/>
  <delete-node tree="call_argument [107938,107946]"/>
  <delete-node tree="): ) [107946,107947]"/>
  <delete-node tree="type_cast_expression [107930,107947]"/>
  <delete-node tree="call_argument [107930,107947]"/>
  <delete-node tree="): ) [107947,107948]"/>
  <delete-node tree="call_expression [107919,107948]"/>
  <delete-node tree="assignment_expression [107894,107948]"/>
  <delete-node tree="expression_statement [107894,107949]"/>
  <delete-node tree="(: ( [107973,107974]"/>
  <delete-node tree="): ) [107974,107975]"/>
  <delete-node tree="call_expression [107959,107975]"/>
  <delete-node tree="expression_statement [107959,107976]"/>
  <delete-node tree="}: } [107982,107983]"/>
  <delete-node tree="function_body [107883,107983]"/>
  <delete-node tree="function_definition [107842,107983]"/>
  <delete-tree tree="function_definition [107991,108087]"/>
  <delete-node tree="}: } [108089,108090]"/>
  <delete-node tree="contract_body [107835,108090]"/>
  <delete-node tree="contract_declaration [107782,108090]"/>
  <delete-node tree="contract: contract [108094,108102]"/>
  <delete-node tree="identifier: Deployer3 [108103,108112]"/>
  <delete-node tree="is: is [108113,108115]"/>
  <delete-tree tree="inheritance_specifier [108116,108121]"/>
  <delete-node tree=",: , [108121,108122]"/>
  <delete-tree tree="inheritance_specifier [108123,108133]"/>
  <delete-node tree=",: , [108133,108134]"/>
  <delete-tree tree="inheritance_specifier [108135,108146]"/>
  <delete-node tree="{: { [108147,108148]"/>
  <delete-node tree="function: function [108154,108162]"/>
  <delete-node tree="identifier: initialize [108163,108173]"/>
  <delete-node tree="(: ( [108173,108174]"/>
  <delete-node tree="): ) [108174,108175]"/>
  <delete-tree tree="modifier_invocation [108176,108187]"/>
  <delete-tree tree="visibility [108188,108194]"/>
  <delete-node tree="{: { [108195,108196]"/>
  <delete-tree tree="member_expression [108206,108226]"/>
  <delete-node tree="=: = [108227,108228]"/>
  <delete-tree tree="primitive_type [108229,108236]"/>
  <delete-node tree="(: ( [108236,108237]"/>
  <delete-tree tree="new_expression [108237,108245]"/>
  <delete-node tree="(: ( [108245,108246]"/>
  <delete-tree tree="primitive_type [108246,108253]"/>
  <delete-node tree="(: ( [108253,108254]"/>
  <delete-node tree="call_argument [108254,108262]"/>
  <delete-node tree="): ) [108262,108263]"/>
  <delete-node tree="type_cast_expression [108246,108263]"/>
  <delete-node tree="call_argument [108246,108263]"/>
  <delete-node tree=",: , [108263,108264]"/>
  <delete-tree tree="call_argument [108265,108289]"/>
  <delete-node tree="): ) [108289,108290]"/>
  <delete-node tree="call_expression [108237,108290]"/>
  <delete-node tree="call_argument [108237,108290]"/>
  <delete-node tree="): ) [108290,108291]"/>
  <delete-node tree="type_cast_expression [108229,108291]"/>
  <delete-node tree="assignment_expression [108206,108291]"/>
  <delete-node tree="expression_statement [108206,108292]"/>
  <delete-node tree="}: } [108298,108299]"/>
  <delete-node tree="function_body [108195,108299]"/>
  <delete-node tree="function_definition [108154,108299]"/>
  <delete-tree tree="function_definition [108307,108403]"/>
  <delete-node tree="}: } [108405,108406]"/>
  <delete-node tree="contract_body [108147,108406]"/>
  <delete-node tree="contract_declaration [108094,108406]"/>
</actions>
