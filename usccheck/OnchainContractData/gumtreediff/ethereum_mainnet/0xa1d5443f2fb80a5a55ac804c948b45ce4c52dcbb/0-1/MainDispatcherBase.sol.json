{
  "matches": [
    {
      "src": "identifier: nContract [6537,6546]",
      "dest": "identifier: nContract [6537,6546]"
    },
    {
      "src": "identifier: nSubContracts [5963,5976]",
      "dest": "identifier: nSubContracts [5963,5976]"
    },
    {
      "src": "): ) [5980,5981]",
      "dest": "): ) [5980,5981]"
    },
    {
      "src": "primitive_type [7741,7748]",
      "dest": "primitive_type [7741,7748]"
    },
    {
      "src": "call_argument [7206,7236]",
      "dest": "call_argument [7206,7236]"
    },
    {
      "src": "identifier: initSize [9362,9370]",
      "dest": "identifier: initSize [9362,9370]"
    },
    {
      "src": "(: ( [7740,7741]",
      "dest": "(: ( [7740,7741]"
    },
    {
      "src": "identifier: nContract [7949,7958]",
      "dest": "identifier: nContract [7949,7958]"
    },
    {
      "src": "identifier: initDataContractsOffset [6955,6978]",
      "dest": "identifier: initDataContractsOffset [6955,6978]"
    },
    {
      "src": "returndatasize: returndatasize [2122,2136]",
      "dest": "returndatasize: returndatasize [2122,2136]"
    },
    {
      "src": "parenthesized_expression [6536,6551]",
      "dest": "parenthesized_expression [6536,6551]"
    },
    {
      "src": "identifier: externalInitializerAddr [7509,7532]",
      "dest": "identifier: externalInitializerAddr [7509,7532]"
    },
    {
      "src": "expression_statement [6623,6676]",
      "dest": "expression_statement [6623,6676]"
    },
    {
      "src": "primitive_type [9544,9549]",
      "dest": "primitive_type [9544,9549]"
    },
    {
      "src": "\": \" [5666,5667]",
      "dest": "\": \" [5666,5667]"
    },
    {
      "src": "call_expression [8561,8594]",
      "dest": "call_expression [8561,8594]"
    },
    {
      "src": "function: function [5349,5357]",
      "dest": "function: function [5349,5357]"
    },
    {
      "src": "yul_function_call [2042,2058]",
      "dest": "yul_function_call [2042,2058]"
    },
    {
      "src": ",: , [9260,9261]",
      "dest": ",: , [9260,9261]"
    },
    {
      "src": "number_literal: 1 [7761,7762]",
      "dest": "number_literal: 1 [7761,7762]"
    },
    {
      "src": "call_expression [8408,8438]",
      "dest": "call_expression [8408,8438]"
    },
    {
      "src": "receive: receive [1058,1065]",
      "dest": "receive: receive [1058,1065]"
    },
    {
      "src": "): ) [1239,1240]",
      "dest": "): ) [1239,1240]"
    },
    {
      "src": "primitive_type [6586,6593]",
      "dest": "primitive_type [6586,6593]"
    },
    {
      "src": "yul_function_call [1764,1828]",
      "dest": "yul_function_call [1764,1828]"
    },
    {
      "src": "): ) [7141,7142]",
      "dest": "): ) [7141,7142]"
    },
    {
      "src": "(: ( [1101,1102]",
      "dest": "(: ( [1101,1102]"
    },
    {
      "src": "comment: // Contracts are indexed from 1 and 0 is not in use here. [6690,6747]",
      "dest": "comment: // Contracts are indexed from 1 and 0 is not in use here. [6690,6747]"
    },
    {
      "src": "solidity_version_comparison_operator [651,653]",
      "dest": "solidity_version_comparison_operator [651,653]"
    },
    {
      "src": "type_name [5923,5930]",
      "dest": "type_name [5923,5930]"
    },
    {
      "src": "address: address [6472,6479]",
      "dest": "address: address [6472,6479]"
    },
    {
      "src": "expression_statement [6372,6399]",
      "dest": "expression_statement [6372,6399]"
    },
    {
      "src": "variable_declaration_tuple [9745,9784]",
      "dest": "variable_declaration_tuple [9745,9784]"
    },
    {
      "src": "expression_statement [8492,8529]",
      "dest": "expression_statement [8492,8529]"
    },
    {
      "src": "(: ( [7900,7901]",
      "dest": "(: ( [7900,7901]"
    },
    {
      "src": "\": \" [697,698]",
      "dest": "\": \" [697,698]"
    },
    {
      "src": "gas: gas [1777,1780]",
      "dest": "gas: gas [1777,1780]"
    },
    {
      "src": "identifier: totalInitSizes [8697,8711]",
      "dest": "identifier: totalInitSizes [8697,8711]"
    },
    {
      "src": ".: . [1235,1236]",
      "dest": ".: . [1235,1236]"
    },
    {
      "src": "yul_identifier [1784,1802]",
      "dest": "yul_identifier [1784,1802]"
    },
    {
      "src": "type_name [6472,6479]",
      "dest": "type_name [6472,6479]"
    },
    {
      "src": "comment: // NOLINTNEXTLINE: low-level-calls, controlled-delegatecall. [9676,9736]",
      "dest": "comment: // NOLINTNEXTLINE: low-level-calls, controlled-delegatecall. [9676,9736]"
    },
    {
      "src": "(: ( [6072,6073]",
      "dest": "(: ( [6072,6073]"
    },
    {
      "src": "call_argument [6950,7008]",
      "dest": "call_argument [6950,7008]"
    },
    {
      "src": ",: , [7008,7009]",
      "dest": ",: , [7008,7009]"
    },
    {
      "src": "memory: memory [9766,9772]",
      "dest": "memory: memory [9766,9772]"
    },
    {
      "src": "=: = [5788,5789]",
      "dest": "=: = [5788,5789]"
    },
    {
      "src": ",: , [6657,6658]",
      "dest": ",: , [6657,6658]"
    },
    {
      "src": "): ) [2057,2058]",
      "dest": "): ) [2057,2058]"
    },
    {
      "src": "identifier: nContract [6782,6791]",
      "dest": "identifier: nContract [6782,6791]"
    },
    {
      "src": "): ) [7942,7943]",
      "dest": "): ) [7942,7943]"
    },
    {
      "src": "if_statement [7392,7452]",
      "dest": "if_statement [7392,7452]"
    },
    {
      "src": "): ) [1136,1137]",
      "dest": "): ) [1136,1137]"
    },
    {
      "src": "*: * [6555,6556]",
      "dest": "*: * [6555,6556]"
    },
    {
      "src": "binary_expression [7102,7141]",
      "dest": "binary_expression [7102,7141]"
    },
    {
      "src": ".: . [8564,8565]",
      "dest": ".: . [8564,8565]"
    },
    {
      "src": "number_literal: 0 [5790,5791]",
      "dest": "number_literal: 0 [5790,5791]"
    },
    {
      "src": "bool: bool [8298,8302]",
      "dest": "bool: bool [8298,8302]"
    },
    {
      "src": "expression_statement [9245,9282]",
      "dest": "expression_statement [9245,9282]"
    },
    {
      "src": "==: == [9990,9992]",
      "dest": "==: == [9990,9992]"
    },
    {
      "src": "identifier: extInitData [9559,9570]",
      "dest": "identifier: extInitData [9559,9570]"
    },
    {
      "src": "if: if [8788,8790]",
      "dest": "if: if [8788,8790]"
    },
    {
      "src": "call_expression [5614,5668]",
      "dest": "call_expression [5614,5668]"
    },
    {
      "src": "variable_declaration_statement [1188,1241]",
      "dest": "variable_declaration_statement [1188,1241]"
    },
    {
      "src": "identifier: decode [7894,7900]",
      "dest": "identifier: decode [7894,7900]"
    },
    {
      "src": "identifier: initSize [9313,9321]",
      "dest": "identifier: initSize [9313,9321]"
    },
    {
      "src": "identifier: IDispatcherBase [815,830]",
      "dest": "identifier: IDispatcherBase [815,830]"
    },
    {
      "src": "call_argument [7977,7986]",
      "dest": "call_argument [7977,7986]"
    },
    {
      "src": "binary_expression [7396,7419]",
      "dest": "binary_expression [7396,7419]"
    },
    {
      "src": "string [9648,9664]",
      "dest": "string [9648,9664]"
    },
    {
      "src": "(: ( [8297,8298]",
      "dest": "(: ( [8297,8298]"
    },
    {
      "src": "primitive_type [8298,8302]",
      "dest": "primitive_type [8298,8302]"
    },
    {
      "src": "string_literal [9436,9464]",
      "dest": "string_literal [9436,9464]"
    },
    {
      "src": "): ) [6808,6809]",
      "dest": "): ) [6808,6809]"
    },
    {
      "src": "call_argument [5622,5641]",
      "dest": "call_argument [5622,5641]"
    },
    {
      "src": "comment: // Solidity scratch pad at memory position 0. [1523,1568]",
      "dest": "comment: // Solidity scratch pad at memory position 0. [1523,1568]"
    },
    {
      "src": "): ) [1614,1615]",
      "dest": "): ) [1614,1615]"
    },
    {
      "src": "call_argument [8648,8674]",
      "dest": "call_argument [8648,8674]"
    },
    {
      "src": "call_expression [8608,8675]",
      "dest": "call_expression [8608,8675]"
    },
    {
      "src": "call_argument [1232,1239]",
      "dest": "call_argument [1232,1239]"
    },
    {
      "src": "bytes: bytes [9544,9549]",
      "dest": "bytes: bytes [9544,9549]"
    },
    {
      "src": "primitive_type [5923,5930]",
      "dest": "primitive_type [5923,5930]"
    },
    {
      "src": "<=: <= [8723,8725]",
      "dest": "<=: <= [8723,8725]"
    },
    {
      "src": "): ) [6593,6594]",
      "dest": "): ) [6593,6594]"
    },
    {
      "src": "parenthesized_expression [8584,8593]",
      "dest": "parenthesized_expression [8584,8593]"
    },
    {
      "src": "(: ( [1593,1594]",
      "dest": "(: ( [1593,1594]"
    },
    {
      "src": "identifier: nSubContracts [5622,5635]",
      "dest": "identifier: nSubContracts [5622,5635]"
    },
    {
      "src": "variable_declaration [7741,7758]",
      "dest": "variable_declaration [7741,7758]"
    },
    {
      "src": "call_argument [9996,10014]",
      "dest": "call_argument [9996,10014]"
    },
    {
      "src": "}: } [10021,10022]",
      "dest": "}: } [10021,10022]"
    },
    {
      "src": "yul_decimal_number: 0 [1823,1824]",
      "dest": "yul_decimal_number: 0 [1823,1824]"
    },
    {
      "src": "identifier: decode [6930,6936]",
      "dest": "identifier: decode [6930,6936]"
    },
    {
      "src": "call_argument [9860,9884]",
      "dest": "call_argument [9860,9884]"
    },
    {
      "src": "inheritance_specifier [815,830]",
      "dest": "inheritance_specifier [815,830]"
    },
    {
      "src": "comment: // 3(a). Yield to EIC initialization. [7052,7089]",
      "dest": "comment: // 3(a). Yield to EIC initialization. [7052,7089]"
    },
    {
      "src": "*: * [5960,5961]",
      "dest": "*: * [5960,5961]"
    },
    {
      "src": "(: ( [1065,1066]",
      "dest": "(: ( [1065,1066]"
    },
    {
      "src": "call_expression [9964,10015]",
      "dest": "call_expression [9964,10015]"
    },
    {
      "src": "identifier: data [6248,6252]",
      "dest": "identifier: data [6248,6252]"
    },
    {
      "src": "identifier: initSize [8550,8558]",
      "dest": "identifier: initSize [8550,8558]"
    },
    {
      "src": "primitive_type [5765,5772]",
      "dest": "primitive_type [5765,5772]"
    },
    {
      "src": ".: . [6252,6253]",
      "dest": ".: . [6252,6253]"
    },
    {
      "src": "): ) [7547,7548]",
      "dest": "): ) [7547,7548]"
    },
    {
      "src": "identifier: require [6065,6072]",
      "dest": "identifier: require [6065,6072]"
    },
    {
      "src": "comment: /*       This entry point serves only transactions with empty calldata. (i.e. pure value transfer tx).       We don't expect to receive such, thus block them.     */ [888,1053]",
      "dest": "comment: /*       This entry point serves only transactions with empty calldata. (i.e. pure value transfer tx).       We don't expect to receive such, thus block them.     */ [888,1053]"
    },
    {
      "src": "identifier: delegatecall [9015,9027]",
      "dest": "identifier: delegatecall [9015,9027]"
    },
    {
      "src": "\": \" [9663,9664]",
      "dest": "\": \" [9663,9664]"
    },
    {
      "src": "identifier: contractAddress [8339,8354]",
      "dest": "identifier: contractAddress [8339,8354]"
    },
    {
      "src": "\": \" [1294,1295]",
      "dest": "\": \" [1294,1295]"
    },
    {
      "src": "for: for [7736,7739]",
      "dest": "for: for [7736,7739]"
    },
    {
      "src": "identifier: externalInitializerAddr [9610,9633]",
      "dest": "identifier: externalInitializerAddr [9610,9633]"
    },
    {
      "src": "primitive_type [1280,1287]",
      "dest": "primitive_type [1280,1287]"
    },
    {
      "src": "call_argument [1294,1320]",
      "dest": "call_argument [1294,1320]"
    },
    {
      "src": "call_expression [7502,7549]",
      "dest": "call_expression [7502,7549]"
    },
    {
      "src": "call_argument [6526,6567]",
      "dest": "call_argument [6526,6567]"
    },
    {
      "src": "yul_identifier [1940,1946]",
      "dest": "yul_identifier [1940,1946]"
    },
    {
      "src": "): ) [8463,8464]",
      "dest": "): ) [8463,8464]"
    },
    {
      "src": "(: ( [7928,7929]",
      "dest": "(: ( [7928,7929]"
    },
    {
      "src": "import: import [662,668]",
      "dest": "import: import [662,668]"
    },
    {
      "src": "): ) [7803,7804]",
      "dest": "): ) [7803,7804]"
    },
    {
      "src": "): ) [6607,6608]",
      "dest": "): ) [6607,6608]"
    },
    {
      "src": ",: , [9542,9543]",
      "dest": ",: , [9542,9543]"
    },
    {
      "src": "comment: // We support currently 4 bits per contract, i.e. 16, reserving 00 leads to 15. [5526,5605]",
      "dest": "comment: // We support currently 4 bits per contract, i.e. 16, reserving 00 leads to 15. [5526,5605]"
    },
    {
      "src": "type_cast_expression [7129,7141]",
      "dest": "type_cast_expression [7129,7141]"
    },
    {
      "src": "identifier: initializerSize [8439,8454]",
      "dest": "identifier: initializerSize [8439,8454]"
    },
    {
      "src": "binary_expression [7944,7958]",
      "dest": "binary_expression [7944,7958]"
    },
    {
      "src": "primitive_type [8509,8515]",
      "dest": "primitive_type [8509,8515]"
    },
    {
      "src": "external: external [1161,1169]",
      "dest": "external: external [1161,1169]"
    },
    {
      "src": "identifier: initDataContractsOffset [9140,9163]",
      "dest": "identifier: initDataContractsOffset [9140,9163]"
    },
    {
      "src": "(: ( [9067,9068]",
      "dest": "(: ( [9067,9068]"
    },
    {
      "src": "\": \" [1102,1103]",
      "dest": "\": \" [1102,1103]"
    },
    {
      "src": ",: , [1802,1803]",
      "dest": ",: , [1802,1803]"
    },
    {
      "src": "assignment_expression [8975,9231]",
      "dest": "assignment_expression [8975,9231]"
    },
    {
      "src": "variable_declaration [6892,6923]",
      "dest": "variable_declaration [6892,6923]"
    },
    {
      "src": "(: ( [2136,2137]",
      "dest": "(: ( [2136,2137]"
    },
    {
      "src": "call_argument [6659,6674]",
      "dest": "call_argument [6659,6674]"
    },
    {
      "src": "address: address [7536,7543]",
      "dest": "address: address [7536,7543]"
    },
    {
      "src": "): ) [1918,1919]",
      "dest": "): ) [1918,1919]"
    },
    {
      "src": "call_argument [8697,8744]",
      "dest": "call_argument [8697,8744]"
    },
    {
      "src": "expression_statement [9602,9666]",
      "dest": "expression_statement [9602,9666]"
    },
    {
      "src": "call_argument [10003,10013]",
      "dest": "call_argument [10003,10013]"
    },
    {
      "src": "comment: // delegatecall returns 0 on error. [1959,1994]",
      "dest": "comment: // delegatecall returns 0 on error. [1959,1994]"
    },
    {
      "src": "+: + [9188,9189]",
      "dest": "+: + [9188,9189]"
    },
    {
      "src": "member_expression [1232,1239]",
      "dest": "member_expression [1232,1239]"
    },
    {
      "src": "primitive_type [8312,8317]",
      "dest": "primitive_type [8312,8317]"
    },
    {
      "src": "): ) [2138,2139]",
      "dest": "): ) [2138,2139]"
    },
    {
      "src": "parenthesized_expression [7928,7943]",
      "dest": "parenthesized_expression [7928,7943]"
    },
    {
      "src": "}: } [8847,8848]",
      "dest": "}: } [8847,8848]"
    },
    {
      "src": "identifier: initSize [8616,8624]",
      "dest": "identifier: initSize [8616,8624]"
    },
    {
      "src": "): ) [7030,7031]",
      "dest": "): ) [7030,7031]"
    },
    {
      "src": "): ) [8674,8675]",
      "dest": "): ) [8674,8675]"
    },
    {
      "src": "yul_evm_builtin [1902,1916]",
      "dest": "yul_evm_builtin [1902,1916]"
    },
    {
      "src": "comment: // 3(b). Subcontracts initialization. [7278,7315]",
      "dest": "comment: // 3(b). Subcontracts initialization. [7278,7315]"
    },
    {
      "src": "): ) [8437,8438]",
      "dest": "): ) [8437,8438]"
    },
    {
      "src": "binary_expression [7764,7790]",
      "dest": "binary_expression [7764,7790]"
    },
    {
      "src": "address: address [874,881]",
      "dest": "address: address [874,881]"
    },
    {
      "src": "identifier: initDataContractsOffset [9164,9187]",
      "dest": "identifier: initDataContractsOffset [9164,9187]"
    },
    {
      "src": ".: . [9840,9841]",
      "dest": ".: . [9840,9841]"
    },
    {
      "src": "call_argument [9926,9933]",
      "dest": "call_argument [9926,9933]"
    },
    {
      "src": "call_argument [8572,8582]",
      "dest": "call_argument [8572,8582]"
    },
    {
      "src": "return: return [2112,2118]",
      "dest": "return: return [2112,2118]"
    },
    {
      "src": ".: . [6077,6078]",
      "dest": ".: . [6077,6078]"
    },
    {
      "src": "identifier: nContract [6557,6566]",
      "dest": "identifier: nContract [6557,6566]"
    },
    {
      "src": "assembly_statement [1332,2163]",
      "dest": "assembly_statement [1332,2163]"
    },
    {
      "src": "+: + [5977,5978]",
      "dest": "+: + [5977,5978]"
    },
    {
      "src": "(: ( [7508,7509]",
      "dest": "(: ( [7508,7509]"
    },
    {
      "src": "expression_statement [7502,7550]",
      "dest": "expression_statement [7502,7550]"
    },
    {
      "src": "identifier: initDataContractsOffset [5931,5954]",
      "dest": "identifier: initDataContractsOffset [5931,5954]"
    },
    {
      "src": "=: = [7759,7760]",
      "dest": "=: = [7759,7760]"
    },
    {
      "src": "if_statement [7098,7268]",
      "dest": "if_statement [7098,7268]"
    },
    {
      "src": "call_argument [8500,8507]",
      "dest": "call_argument [8500,8507]"
    },
    {
      "src": "expression_statement [7604,7629]",
      "dest": "expression_statement [7604,7629]"
    },
    {
      "src": "(: ( [1819,1820]",
      "dest": "(: ( [1819,1820]"
    },
    {
      "src": "member_expression [9837,9859]",
      "dest": "member_expression [9837,9859]"
    },
    {
      "src": "\": \" [727,728]",
      "dest": "\": \" [727,728]"
    },
    {
      "src": ".: . [8388,8389]",
      "dest": ".: . [8388,8389]"
    },
    {
      "src": "): ) [10013,10014]",
      "dest": "): ) [10013,10014]"
    },
    {
      "src": "identifier: initSize [9190,9198]",
      "dest": "identifier: initSize [9190,9198]"
    },
    {
      "src": "): ) [10014,10015]",
      "dest": "): ) [10014,10015]"
    },
    {
      "src": "-: - [7939,7940]",
      "dest": "-: - [7939,7940]"
    },
    {
      "src": "identifier: contractAddress [8999,9014]",
      "dest": "identifier: contractAddress [8999,9014]"
    },
    {
      "src": "yul_function_call [1807,1821]",
      "dest": "yul_function_call [1807,1821]"
    },
    {
      "src": "yul_decimal_number: 0 [1597,1598]",
      "dest": "yul_decimal_number: 0 [1597,1598]"
    },
    {
      "src": "+: + [8712,8713]",
      "dest": "+: + [8712,8713]"
    },
    {
      "src": "for: for [6344,6347]",
      "dest": "for: for [6344,6347]"
    },
    {
      "src": "solidity_pragma_token [643,659]",
      "dest": "solidity_pragma_token [643,659]"
    },
    {
      "src": "variable_declaration [5471,5492]",
      "dest": "variable_declaration [5471,5492]"
    },
    {
      "src": "type_name [5765,5772]",
      "dest": "type_name [5765,5772]"
    },
    {
      "src": "(: ( [9252,9253]",
      "dest": "(: ( [9252,9253]"
    },
    {
      "src": "!=: != [1277,1279]",
      "dest": "!=: != [1277,1279]"
    },
    {
      "src": ".: . [9633,9634]",
      "dest": ".: . [9633,9634]"
    },
    {
      "src": "(: ( [9027,9028]",
      "dest": "(: ( [9027,9028]"
    },
    {
      "src": ":: : [9163,9164]",
      "dest": ":: : [9163,9164]"
    },
    {
      "src": "call_argument [9253,9260]",
      "dest": "call_argument [9253,9260]"
    },
    {
      "src": "comment: // Call the implementation. [1629,1656]",
      "dest": "comment: // Call the implementation. [1629,1656]"
    },
    {
      "src": "string: string [9262,9268]",
      "dest": "string: string [9262,9268]"
    },
    {
      "src": "variable_declaration_statement [7741,7763]",
      "dest": "variable_declaration_statement [7741,7763]"
    },
    {
      "src": ",: , [8310,8311]",
      "dest": ",: , [8310,8311]"
    },
    {
      "src": "identifier: assert [7502,7508]",
      "dest": "identifier: assert [7502,7508]"
    },
    {
      "src": "): ) [8593,8594]",
      "dest": "): ) [8593,8594]"
    },
    {
      "src": "{: { [2094,2095]",
      "dest": "{: { [2094,2095]"
    },
    {
      "src": "block_statement [8807,8848]",
      "dest": "block_statement [8807,8848]"
    },
    {
      "src": "case: case [2007,2011]",
      "dest": "case: case [2007,2011]"
    },
    {
      "src": "): ) [7236,7237]",
      "dest": "): ) [7236,7237]"
    },
    {
      "src": ",: , [9933,9934]",
      "dest": ",: , [9933,9934]"
    },
    {
      "src": "yul_evm_builtin [2122,2136]",
      "dest": "yul_evm_builtin [2122,2136]"
    },
    {
      "src": "identifier: length [9983,9989]",
      "dest": "identifier: length [9983,9989]"
    },
    {
      "src": "augmented_assignment_expression [9295,9321]",
      "dest": "augmented_assignment_expression [9295,9321]"
    },
    {
      "src": "import_directive [750,773]",
      "dest": "import_directive [750,773]"
    },
    {
      "src": ".: . [9048,9049]",
      "dest": ".: . [9048,9049]"
    },
    {
      "src": "number_literal: 32 [6552,6554]",
      "dest": "number_literal: 32 [6552,6554]"
    },
    {
      "src": "primitive_type [5471,5478]",
      "dest": "primitive_type [5471,5478]"
    },
    {
      "src": "type_cast_expression [8509,8527]",
      "dest": "type_cast_expression [8509,8527]"
    },
    {
      "src": "): ) [9664,9665]",
      "dest": "): ) [9664,9665]"
    },
    {
      "src": "binary_expression [5622,5641]",
      "dest": "binary_expression [5622,5641]"
    },
    {
      "src": "call_argument [9837,9898]",
      "dest": "call_argument [9837,9898]"
    },
    {
      "src": "string_literal [5643,5667]",
      "dest": "string_literal [5643,5667]"
    },
    {
      "src": "yul_evm_builtin [1807,1819]",
      "dest": "yul_evm_builtin [1807,1819]"
    },
    {
      "src": "<=: <= [5636,5638]",
      "dest": "<=: <= [5636,5638]"
    },
    {
      "src": "): ) [1066,1067]",
      "dest": "): ) [1066,1067]"
    },
    {
      "src": "slice_access [7918,7959]",
      "dest": "slice_access [7918,7959]"
    },
    {
      "src": "=: = [6367,6368]",
      "dest": "=: = [6367,6368]"
    },
    {
      "src": "=: = [1215,1216]",
      "dest": "=: = [1215,1216]"
    },
    {
      "src": "): ) [1820,1821]",
      "dest": "): ) [1820,1821]"
    },
    {
      "src": "binary_expression [5957,5981]",
      "dest": "binary_expression [5957,5981]"
    },
    {
      "src": "variable_declaration_statement [7864,8001]",
      "dest": "variable_declaration_statement [7864,8001]"
    },
    {
      "src": "): ) [1613,1614]",
      "dest": "): ) [1613,1614]"
    },
    {
      "src": "if_statement [8788,8848]",
      "dest": "if_statement [8788,8848]"
    },
    {
      "src": "(: ( [8615,8616]",
      "dest": "(: ( [8615,8616]"
    },
    {
      "src": "identifier: nSubContracts [5479,5492]",
      "dest": "identifier: nSubContracts [5479,5492]"
    },
    {
      "src": "variable_declaration [5765,5787]",
      "dest": "variable_declaration [5765,5787]"
    },
    {
      "src": "*: * [6534,6535]",
      "dest": "*: * [6534,6535]"
    },
    {
      "src": "yul_decimal_number: 0 [2012,2013]",
      "dest": "yul_decimal_number: 0 [2012,2013]"
    },
    {
      "src": "memory: memory [8318,8324]",
      "dest": "memory: memory [8318,8324]"
    },
    {
      "src": ":: : [7943,7944]",
      "dest": ":: : [7943,7944]"
    },
    {
      "src": "call_expression [9245,9281]",
      "dest": "call_expression [9245,9281]"
    },
    {
      "src": "function_definition [5349,9472]",
      "dest": "function_definition [5349,9472]"
    },
    {
      "src": "using: using [854,859]",
      "dest": "using: using [854,859]"
    },
    {
      "src": "{: { [7805,7806]",
      "dest": "{: { [7805,7806]"
    },
    {
      "src": "revert: revert [1095,1101]",
      "dest": "revert: revert [1095,1101]"
    },
    {
      "src": "(: ( [8696,8697]",
      "dest": "(: ( [8696,8697]"
    },
    {
      "src": "call_argument [7544,7547]",
      "dest": "call_argument [7544,7547]"
    },
    {
      "src": "comment: // Offset (within data) of sub-contract initializer vector. [5802,5861]",
      "dest": "comment: // Offset (within data) of sub-contract initializer vector. [5802,5861]"
    },
    {
      "src": "identifier: contractAddress [6659,6674]",
      "dest": "identifier: contractAddress [6659,6674]"
    },
    {
      "src": "<=: <= [8625,8627]",
      "dest": "<=: <= [8625,8627]"
    },
    {
      "src": "call_expression [6498,6608]",
      "dest": "call_expression [6498,6608]"
    },
    {
      "src": "(: ( [9823,9824]",
      "dest": "(: ( [9823,9824]"
    },
    {
      "src": "yul_function_call [2032,2059]",
      "dest": "yul_function_call [2032,2059]"
    },
    {
      "src": ">=: >= [6085,6087]",
      "dest": ">=: >= [6085,6087]"
    },
    {
      "src": "identifier: nContract [6400,6409]",
      "dest": "identifier: nContract [6400,6409]"
    },
    {
      "src": "binary_expression [6073,6111]",
      "dest": "binary_expression [6073,6111]"
    },
    {
      "src": "variable_declaration [8312,8335]",
      "dest": "variable_declaration [8312,8335]"
    },
    {
      "src": "primitive_type [9262,9268]",
      "dest": "primitive_type [9262,9268]"
    },
    {
      "src": "returndatasize: returndatasize [1902,1916]",
      "dest": "returndatasize: returndatasize [1902,1916]"
    },
    {
      "src": "binary_expression [7929,7942]",
      "dest": "binary_expression [7929,7942]"
    },
    {
      "src": "type_name [874,881]",
      "dest": "type_name [874,881]"
    },
    {
      "src": "identifier: data [9135,9139]",
      "dest": "identifier: data [9135,9139]"
    },
    {
      "src": "identifier: getSubContract [1217,1231]",
      "dest": "identifier: getSubContract [1217,1231]"
    },
    {
      "src": "identifier: subContractAddress [1784,1802]",
      "dest": "identifier: subContractAddress [1784,1802]"
    },
    {
      "src": "identifier: abi [8561,8564]",
      "dest": "identifier: abi [8561,8564]"
    },
    {
      "src": "number_literal: 0 [9993,9994]",
      "dest": "number_literal: 0 [9993,9994]"
    },
    {
      "src": ":: : [6983,6984]",
      "dest": ":: : [6983,6984]"
    },
    {
      "src": "\": \" [9648,9649]",
      "dest": "\": \" [9648,9649]"
    },
    {
      "src": "identifier: returndata [9972,9982]",
      "dest": "identifier: returndata [9972,9982]"
    },
    {
      "src": "identifier: data [7918,7922]",
      "dest": "identifier: data [7918,7922]"
    },
    {
      "src": "identifier: nContract [7929,7938]",
      "dest": "identifier: nContract [7929,7938]"
    },
    {
      "src": ",: , [7204,7205]",
      "dest": ",: , [7204,7205]"
    },
    {
      "src": ",: , [8646,8647]",
      "dest": ",: , [8646,8647]"
    },
    {
      "src": "(: ( [1895,1896]",
      "dest": "(: ( [1895,1896]"
    },
    {
      "src": "call_expression [5495,5515]",
      "dest": "call_expression [5495,5515]"
    },
    {
      "src": "call_argument [8616,8646]",
      "dest": "call_argument [8616,8646]"
    },
    {
      "src": "uint256: uint256 [7741,7748]",
      "dest": "uint256: uint256 [7741,7748]"
    },
    {
      "src": "identifier: externalInitializerAddr [6900,6923]",
      "dest": "identifier: externalInitializerAddr [6900,6923]"
    },
    {
      "src": "(: ( [1231,1232]",
      "dest": "(: ( [1231,1232]"
    },
    {
      "src": "member_expression [9089,9113]",
      "dest": "member_expression [9089,9113]"
    },
    {
      "src": "(: ( [2056,2057]",
      "dest": "(: ( [2056,2057]"
    },
    {
      "src": "(: ( [6781,6782]",
      "dest": "(: ( [6781,6782]"
    },
    {
      "src": "type_name [7864,7871]",
      "dest": "type_name [7864,7871]"
    },
    {
      "src": "yul_evm_builtin [2042,2056]",
      "dest": "yul_evm_builtin [2042,2056]"
    },
    {
      "src": "string [6113,6141]",
      "dest": "string [6113,6141]"
    },
    {
      "src": "primitive_type [6892,6899]",
      "dest": "primitive_type [6892,6899]"
    },
    {
      "src": "}: } [9471,9472]",
      "dest": "}: } [9471,9472]"
    },
    {
      "src": "for_statement [7736,9381]",
      "dest": "for_statement [7736,9381]"
    },
    {
      "src": "call_argument [9269,9279]",
      "dest": "call_argument [9269,9279]"
    },
    {
      "src": "import_directive [662,689]",
      "dest": "import_directive [662,689]"
    },
    {
      "src": "number_literal: 32 [7944,7946]",
      "dest": "number_literal: 32 [7944,7946]"
    },
    {
      "src": "call_argument [9610,9646]",
      "dest": "call_argument [9610,9646]"
    },
    {
      "src": "comment: // Extract sub-contract address. [6427,6459]",
      "dest": "comment: // Extract sub-contract address. [6427,6459]"
    },
    {
      "src": "identifier: nSubContracts [7777,7790]",
      "dest": "identifier: nSubContracts [7777,7790]"
    },
    {
      "src": "call_argument [9089,9113]",
      "dest": "call_argument [9089,9113]"
    },
    {
      "src": "string_literal [1102,1136]",
      "dest": "string_literal [1102,1136]"
    },
    {
      "src": ".: . [9093,9094]",
      "dest": ".: . [9093,9094]"
    },
    {
      "src": "number_literal: 0x0 [7137,7140]",
      "dest": "number_literal: 0x0 [7137,7140]"
    },
    {
      "src": "binary_expression [6552,6566]",
      "dest": "binary_expression [6552,6566]"
    },
    {
      "src": "identifier: abi [6498,6501]",
      "dest": "identifier: abi [6498,6501]"
    },
    {
      "src": "identifier: nContract [6648,6657]",
      "dest": "identifier: nContract [6648,6657]"
    },
    {
      "src": "identifier: require [1250,1257]",
      "dest": "identifier: require [1250,1257]"
    },
    {
      "src": "variable_declaration_statement [8297,8479]",
      "dest": "variable_declaration_statement [8297,8479]"
    },
    {
      "src": "visibility [1161,1169]",
      "dest": "visibility [1161,1169]"
    },
    {
      "src": ",: , [6567,6568]",
      "dest": ",: , [6567,6568]"
    },
    {
      "src": "): ) [9953,9954]",
      "dest": "): ) [9953,9954]"
    },
    {
      "src": "string [9436,9464]",
      "dest": "string [9436,9464]"
    },
    {
      "src": "call_expression [7890,8000]",
      "dest": "call_expression [7890,8000]"
    },
    {
      "src": "yul_function_call [2112,2139]",
      "dest": "yul_function_call [2112,2139]"
    },
    {
      "src": "): ) [5388,5389]",
      "dest": "): ) [5388,5389]"
    },
    {
      "src": "identifier: nContract [7749,7758]",
      "dest": "identifier: nContract [7749,7758]"
    },
    {
      "src": "<=: <= [6382,6384]",
      "dest": "<=: <= [6382,6384]"
    },
    {
      "src": "external: external [1068,1076]",
      "dest": "external: external [1068,1076]"
    },
    {
      "src": "): ) [9280,9281]",
      "dest": "): ) [9280,9281]"
    },
    {
      "src": "variable_declaration_statement [6349,6371]",
      "dest": "variable_declaration_statement [6349,6371]"
    },
    {
      "src": "returndatacopy: returndatacopy [1881,1895]",
      "dest": "returndatacopy: returndatacopy [1881,1895]"
    },
    {
      "src": "type_cast_expression [7536,7548]",
      "dest": "type_cast_expression [7536,7548]"
    },
    {
      "src": "user_defined_type [832,847]",
      "dest": "user_defined_type [832,847]"
    },
    {
      "src": "comment: // Sum of subcontract initializers. Aggregated for verification near the end. [5679,5756]",
      "dest": "comment: // Sum of subcontract initializers. Aggregated for verification near the end. [5679,5756]"
    },
    {
      "src": "): ) [7999,8000]",
      "dest": "): ) [7999,8000]"
    },
    {
      "src": "identifier: nContract [6357,6366]",
      "dest": "identifier: nContract [6357,6366]"
    },
    {
      "src": "(: ( [1776,1777]",
      "dest": "(: ( [1776,1777]"
    },
    {
      "src": "member_expression [9972,9989]",
      "dest": "member_expression [9972,9989]"
    },
    {
      "src": "expression_statement [8608,8676]",
      "dest": "expression_statement [8608,8676]"
    },
    {
      "src": "variable_declaration_statement [8542,8595]",
      "dest": "variable_declaration_statement [8542,8595]"
    },
    {
      "src": "++: ++ [7801,7803]",
      "dest": "++: ++ [7801,7803]"
    },
    {
      "src": ",: , [9113,9114]",
      "dest": ",: , [9113,9114]"
    },
    {
      "src": "call_argument [9935,9953]",
      "dest": "call_argument [9935,9953]"
    },
    {
      "src": ",: , [1292,1293]",
      "dest": ",: , [1292,1293]"
    },
    {
      "src": "=: = [8997,8998]",
      "dest": "=: = [8997,8998]"
    },
    {
      "src": "(: ( [1612,1613]",
      "dest": "(: ( [1612,1613]"
    },
    {
      "src": "identifier: additionalDataSize [8726,8744]",
      "dest": "identifier: additionalDataSize [8726,8744]"
    },
    {
      "src": "{: { [5425,5426]",
      "dest": "{: { [5425,5426]"
    },
    {
      "src": "=: = [5955,5956]",
      "dest": "=: = [5955,5956]"
    },
    {
      "src": "call_argument [5643,5667]",
      "dest": "call_argument [5643,5667]"
    },
    {
      "src": "update_expression [7792,7803]",
      "dest": "update_expression [7792,7803]"
    },
    {
      "src": ".: . [9810,9811]",
      "dest": ".: . [9810,9811]"
    },
    {
      "src": "[: [ [7922,7923]",
      "dest": "[: [ [7922,7923]"
    },
    {
      "src": "comment: // Call sub-contract initializer. [8862,8895]",
      "dest": "comment: // Call sub-contract initializer. [8862,8895]"
    },
    {
      "src": "\": \" [717,718]",
      "dest": "\": \" [717,718]"
    },
    {
      "src": "call_argument [9045,9217]",
      "dest": "call_argument [9045,9217]"
    },
    {
      "src": "(: ( [6508,6509]",
      "dest": "(: ( [6508,6509]"
    },
    {
      "src": "==: == [7533,7535]",
      "dest": "==: == [7533,7535]"
    },
    {
      "src": "identifier: nContract [7764,7773]",
      "dest": "identifier: nContract [7764,7773]"
    },
    {
      "src": "identifier: selector [9876,9884]",
      "dest": "identifier: selector [9876,9884]"
    },
    {
      "src": ",: , [1900,1901]",
      "dest": ",: , [1900,1901]"
    },
    {
      "src": "]: ] [7958,7959]",
      "dest": "]: ] [7958,7959]"
    },
    {
      "src": ".: . [9875,9876]",
      "dest": ".: . [9875,9876]"
    },
    {
      "src": ",: , [1824,1825]",
      "dest": ",: , [1824,1825]"
    },
    {
      "src": "\": \" [771,772]",
      "dest": "\": \" [771,772]"
    },
    {
      "src": "comment: // III. Loops through the subcontracts, extracts their data and calls their initializer. [7639,7727]",
      "dest": "comment: // III. Loops through the subcontracts, extracts their data and calls their initializer. [7639,7727]"
    },
    {
      "src": "comment: // Size of passed data, excluding sub-contract addresses. [6153,6210]",
      "dest": "comment: // Size of passed data, excluding sub-contract addresses. [6153,6210]"
    },
    {
      "src": "type_name [6892,6899]",
      "dest": "type_name [6892,6899]"
    },
    {
      "src": "}: } [2072,2073]",
      "dest": "}: } [2072,2073]"
    },
    {
      "src": "member_expression [6498,6508]",
      "dest": "member_expression [6498,6508]"
    },
    {
      "src": ",: , [830,831]",
      "dest": ",: , [830,831]"
    },
    {
      "src": "primitive_type [7864,7871]",
      "dest": "primitive_type [7864,7871]"
    },
    {
      "src": "call_argument [8509,8527]",
      "dest": "call_argument [8509,8527]"
    },
    {
      "src": "=: = [6246,6247]",
      "dest": "=: = [6246,6247]"
    },
    {
      "src": "revert: revert [2032,2038]",
      "dest": "revert: revert [2032,2038]"
    },
    {
      "src": "number_literal: 1 [5979,5980]",
      "dest": "number_literal: 1 [5979,5980]"
    },
    {
      "src": "number_literal: 0x0 [7544,7547]",
      "dest": "number_literal: 0x0 [7544,7547]"
    },
    {
      "src": "variable_declaration [6472,6495]",
      "dest": "variable_declaration [6472,6495]"
    },
    {
      "src": ".: . [9104,9105]",
      "dest": ".: . [9104,9105]"
    },
    {
      "src": "fallback: fallback [1150,1158]",
      "dest": "fallback: fallback [1150,1158]"
    },
    {
      "src": "): ) [8805,8806]",
      "dest": "): ) [8805,8806]"
    },
    {
      "src": "comment: // Check if we have an external initializer contract. [6830,6883]",
      "dest": "comment: // Check if we have an external initializer contract. [6830,6883]"
    },
    {
      "src": "bool: bool [9746,9750]",
      "dest": "bool: bool [9746,9750]"
    },
    {
      "src": "yul_switch_statement [1933,2153]",
      "dest": "yul_switch_statement [1933,2153]"
    },
    {
      "src": "member_expression [7890,7900]",
      "dest": "member_expression [7890,7900]"
    },
    {
      "src": "visibility [9580,9587]",
      "dest": "visibility [9580,9587]"
    },
    {
      "src": "binary_expression [6537,6550]",
      "dest": "binary_expression [6537,6550]"
    },
    {
      "src": "call_argument [9262,9280]",
      "dest": "call_argument [9262,9280]"
    },
    {
      "src": "import_directive [720,749]",
      "dest": "import_directive [720,749]"
    },
    {
      "src": "identifier: subContractAddress [1258,1276]",
      "dest": "identifier: subContractAddress [1258,1276]"
    },
    {
      "src": "string: string [9935,9941]",
      "dest": "string: string [9935,9941]"
    },
    {
      "src": "type_name [9511,9518]",
      "dest": "type_name [9511,9518]"
    },
    {
      "src": "uint256: uint256 [6349,6356]",
      "dest": "uint256: uint256 [6349,6356]"
    },
    {
      "src": "\": \" [6113,6114]",
      "dest": "\": \" [6113,6114]"
    },
    {
      "src": "uint256: uint256 [6219,6226]",
      "dest": "uint256: uint256 [6219,6226]"
    },
    {
      "src": "variable_declaration [9746,9758]",
      "dest": "variable_declaration [9746,9758]"
    },
    {
      "src": ",: , [1897,1898]",
      "dest": ",: , [1897,1898]"
    },
    {
      "src": "function: function [9478,9486]",
      "dest": "function: function [9478,9486]"
    },
    {
      "src": "(: ( [8421,8422]",
      "dest": "(: ( [8421,8422]"
    },
    {
      "src": "delegatecall: delegatecall [1764,1776]",
      "dest": "delegatecall: delegatecall [1764,1776]"
    },
    {
      "src": "bytes: bytes [8312,8317]",
      "dest": "bytes: bytes [8312,8317]"
    },
    {
      "src": "parameter [9511,9542]",
      "dest": "parameter [9511,9542]"
    },
    {
      "src": "identifier: this [9860,9864]",
      "dest": "identifier: this [9860,9864]"
    },
    {
      "src": "(: ( [7626,7627]",
      "dest": "(: ( [7626,7627]"
    },
    {
      "src": "using_directive [854,882]",
      "dest": "using_directive [854,882]"
    },
    {
      "src": "(: ( [5621,5622]",
      "dest": "(: ( [5621,5622]"
    },
    {
      "src": "-: - [6979,6980]",
      "dest": "-: - [6979,6980]"
    },
    {
      "src": "type_name [1188,1195]",
      "dest": "type_name [1188,1195]"
    },
    {
      "src": "*: * [7926,7927]",
      "dest": "*: * [7926,7927]"
    },
    {
      "src": "member_expression [9860,9884]",
      "dest": "member_expression [9860,9884]"
    },
    {
      "src": "solidity: solidity [643,651]",
      "dest": "solidity: solidity [643,651]"
    },
    {
      "src": "call_expression [7604,7628]",
      "dest": "call_expression [7604,7628]"
    },
    {
      "src": "comment: // block because it will not return to Solidity code. We overwrite the [1440,1510]",
      "dest": "comment: // block because it will not return to Solidity code. We overwrite the [1440,1510]"
    },
    {
      "src": "type_alias [860,869]",
      "dest": "type_alias [860,869]"
    },
    {
      "src": "calldatasize: calldatasize [1600,1612]",
      "dest": "calldatasize: calldatasize [1600,1612]"
    },
    {
      "src": "return_statement [7251,7258]",
      "dest": "return_statement [7251,7258]"
    },
    {
      "src": "): ) [1159,1160]",
      "dest": "): ) [1159,1160]"
    },
    {
      "src": ",: , [9758,9759]",
      "dest": ",: , [9758,9759]"
    },
    {
      "src": "identifier: additionalDataSize [7396,7414]",
      "dest": "identifier: additionalDataSize [7396,7414]"
    },
    {
      "src": "identifier: contractAddress [7872,7887]",
      "dest": "identifier: contractAddress [7872,7887]"
    },
    {
      "src": "comment: // and not only to the new contract code. (e.g. return 0 if state-intialized else 192). [8114,8201]",
      "dest": "comment: // and not only to the new contract code. (e.g. return 0 if state-intialized else 192). [8114,8201]"
    },
    {
      "src": "visibility [5390,5398]",
      "dest": "visibility [5390,5398]"
    },
    {
      "src": "}: } [10023,10024]",
      "dest": "}: } [10023,10024]"
    },
    {
      "src": "): ) [9897,9898]",
      "dest": "): ) [9897,9898]"
    },
    {
      "src": "}: } [9380,9381]",
      "dest": "}: } [9380,9381]"
    },
    {
      "src": "call_argument [9886,9897]",
      "dest": "call_argument [9886,9897]"
    },
    {
      "src": "call_argument [6793,6808]",
      "dest": "call_argument [6793,6808]"
    },
    {
      "src": "[: [ [6530,6531]",
      "dest": "[: [ [6530,6531]"
    },
    {
      "src": "comment: // II. Gate further initialization. [7560,7595]",
      "dest": "comment: // II. Gate further initialization. [7560,7595]"
    },
    {
      "src": "string [1102,1136]",
      "dest": "string [1102,1136]"
    },
    {
      "src": "type_name [7741,7748]",
      "dest": "type_name [7741,7748]"
    },
    {
      "src": "yul_function_call [1777,1782]",
      "dest": "yul_function_call [1777,1782]"
    },
    {
      "src": "primitive_type [6472,6479]",
      "dest": "primitive_type [6472,6479]"
    },
    {
      "src": "expression_statement [9295,9322]",
      "dest": "expression_statement [9295,9322]"
    },
    {
      "src": ".: . [9014,9015]",
      "dest": ".: . [9014,9015]"
    },
    {
      "src": "{: { [9592,9593]",
      "dest": "{: { [9592,9593]"
    },
    {
      "src": "fallback_receive_definition [1150,2169]",
      "dest": "fallback_receive_definition [1150,2169]"
    },
    {
      "src": "address: address [1280,1287]",
      "dest": "address: address [1280,1287]"
    },
    {
      "src": "switch: switch [1933,1939]",
      "dest": "switch: switch [1933,1939]"
    },
    {
      "src": "continue: continue [8825,8833]",
      "dest": "continue: continue [8825,8833]"
    },
    {
      "src": "+=: += [9310,9312]",
      "dest": "+=: += [9310,9312]"
    },
    {
      "src": "fallback_receive_definition [1058,1144]",
      "dest": "fallback_receive_definition [1058,1144]"
    },
    {
      "src": "variable_declaration_statement [5765,5792]",
      "dest": "variable_declaration_statement [5765,5792]"
    },
    {
      "src": "identifier: getNumSubcontracts [5495,5513]",
      "dest": "identifier: getNumSubcontracts [5495,5513]"
    },
    {
      "src": "identifier: data [6526,6530]",
      "dest": "identifier: data [6526,6530]"
    },
    {
      "src": "expression_statement [8689,8774]",
      "dest": "expression_statement [8689,8774]"
    },
    {
      "src": "primitive_type [1188,1195]",
      "dest": "primitive_type [1188,1195]"
    },
    {
      "src": "type_name [9760,9765]",
      "dest": "type_name [9760,9765]"
    },
    {
      "src": "parenthesized_expression [6585,6594]",
      "dest": "parenthesized_expression [6585,6594]"
    },
    {
      "src": "identifier: nContract [6372,6381]",
      "dest": "identifier: nContract [6372,6381]"
    },
    {
      "src": "calldatasize: calldatasize [1807,1819]",
      "dest": "calldatasize: calldatasize [1807,1819]"
    },
    {
      "src": "parenthesized_expression [7977,7986]",
      "dest": "parenthesized_expression [7977,7986]"
    },
    {
      "src": "variable_declaration [1188,1214]",
      "dest": "variable_declaration [1188,1214]"
    },
    {
      "src": "primitive_type [7536,7543]",
      "dest": "primitive_type [7536,7543]"
    },
    {
      "src": "identifier: success [8303,8310]",
      "dest": "identifier: success [8303,8310]"
    },
    {
      "src": "identifier: require [8492,8499]",
      "dest": "identifier: require [8492,8499]"
    },
    {
      "src": "(: ( [8499,8500]",
      "dest": "(: ( [8499,8500]"
    },
    {
      "src": "]: ] [7235,7236]",
      "dest": "]: ] [7235,7236]"
    },
    {
      "src": "external: external [5390,5398]",
      "dest": "external: external [5390,5398]"
    },
    {
      "src": "): ) [7140,7141]",
      "dest": "): ) [7140,7141]"
    },
    {
      "src": "if: if [7098,7100]",
      "dest": "if: if [7098,7100]"
    },
    {
      "src": ",: , [8983,8984]",
      "dest": ",: , [8983,8984]"
    },
    {
      "src": "call_argument [1288,1291]",
      "dest": "call_argument [1288,1291]"
    },
    {
      "src": "identifier: nSubContracts [6385,6398]",
      "dest": "identifier: nSubContracts [6385,6398]"
    },
    {
      "src": "identifier: initDataContractsOffset [6262,6285]",
      "dest": "identifier: initDataContractsOffset [6262,6285]"
    },
    {
      "src": "): ) [6674,6675]",
      "dest": "): ) [6674,6675]"
    },
    {
      "src": ",: , [1595,1596]",
      "dest": ",: , [1595,1596]"
    },
    {
      "src": ".: . [7893,7894]",
      "dest": ".: . [7893,7894]"
    },
    {
      "src": "binary_expression [8616,8646]",
      "dest": "binary_expression [8616,8646]"
    },
    {
      "src": "call_argument [8422,8437]",
      "dest": "call_argument [8422,8437]"
    },
    {
      "src": "member_expression [6073,6084]",
      "dest": "member_expression [6073,6084]"
    },
    {
      "src": "call_argument [8584,8593]",
      "dest": "call_argument [8584,8593]"
    },
    {
      "src": "identifier: require [8689,8696]",
      "dest": "identifier: require [8689,8696]"
    },
    {
      "src": "revert_statement [1095,1138]",
      "dest": "revert_statement [1095,1138]"
    },
    {
      "src": "): ) [8477,8478]",
      "dest": "): ) [8477,8478]"
    },
    {
      "src": "call_argument [6585,6594]",
      "dest": "call_argument [6585,6594]"
    },
    {
      "src": "call_argument [6648,6657]",
      "dest": "call_argument [6648,6657]"
    },
    {
      "src": "(: ( [8407,8408]",
      "dest": "(: ( [8407,8408]"
    },
    {
      "src": "call_expression [8339,8478]",
      "dest": "call_expression [8339,8478]"
    },
    {
      "src": "identifier: externalInitializerAddr [7181,7204]",
      "dest": "identifier: externalInitializerAddr [7181,7204]"
    },
    {
      "src": "call_argument [6113,6141]",
      "dest": "call_argument [6113,6141]"
    },
    {
      "src": "comment: // NOLINTNEXTLINE: controlled-delegatecall low-level-calls calls-loop. [8214,8284]",
      "dest": "comment: // NOLINTNEXTLINE: controlled-delegatecall low-level-calls calls-loop. [8214,8284]"
    },
    {
      "src": "return: return [7435,7441]",
      "dest": "return: return [7435,7441]"
    },
    {
      "src": "state_mutability [1170,1177]",
      "dest": "state_mutability [1170,1177]"
    },
    {
      "src": "function_body [1085,1144]",
      "dest": "function_body [1085,1144]"
    },
    {
      "src": "comment: // Extract sub-contract address. [7819,7851]",
      "dest": "comment: // Extract sub-contract address. [7819,7851]"
    },
    {
      "src": ",: , [9884,9885]",
      "dest": ",: , [9884,9885]"
    },
    {
      "src": "): ) [9645,9646]",
      "dest": "): ) [9645,9646]"
    },
    {
      "src": "comment: // Just to be on the safe side. [7462,7493]",
      "dest": "comment: // Just to be on the safe side. [7462,7493]"
    },
    {
      "src": "identifier: abi [9837,9840]",
      "dest": "identifier: abi [9837,9840]"
    },
    {
      "src": "): ) [5667,5668]",
      "dest": "): ) [5667,5668]"
    },
    {
      "src": "\": \" [9436,9437]",
      "dest": "\": \" [9436,9437]"
    },
    {
      "src": "\": \" [747,748]",
      "dest": "\": \" [747,748]"
    },
    {
      "src": "(: ( [6536,6537]",
      "dest": "(: ( [6536,6537]"
    },
    {
      "src": "contract: contract [784,792]",
      "dest": "contract: contract [784,792]"
    },
    {
      "src": "identifier: MainDispatcherBase [793,811]",
      "dest": "identifier: MainDispatcherBase [793,811]"
    },
    {
      "src": "): ) [8527,8528]",
      "dest": "): ) [8527,8528]"
    },
    {
      "src": "identifier: initializationSentinel [7604,7626]",
      "dest": "identifier: initializationSentinel [7604,7626]"
    },
    {
      "src": "call_argument [8746,8772]",
      "dest": "call_argument [8746,8772]"
    },
    {
      "src": ",: , [6111,6112]",
      "dest": ",: , [6111,6112]"
    },
    {
      "src": "(: ( [9268,9269]",
      "dest": "(: ( [9268,9269]"
    },
    {
      "src": "string [8746,8772]",
      "dest": "string [8746,8772]"
    },
    {
      "src": "call_expression [9787,9908]",
      "dest": "call_expression [9787,9908]"
    },
    {
      "src": "]: ] [9198,9199]",
      "dest": "]: ] [9198,9199]"
    },
    {
      "src": "bytes: bytes [9760,9765]",
      "dest": "bytes: bytes [9760,9765]"
    },
    {
      "src": "): ) [9464,9465]",
      "dest": "): ) [9464,9465]"
    },
    {
      "src": "identifier: require [5614,5621]",
      "dest": "identifier: require [5614,5621]"
    },
    {
      "src": "call_argument [9648,9664]",
      "dest": "call_argument [9648,9664]"
    },
    {
      "src": "address: address [7978,7985]",
      "dest": "address: address [7978,7985]"
    },
    {
      "src": "import: import [720,726]",
      "dest": "import: import [720,726]"
    },
    {
      "src": "yul_path [1940,1946]",
      "dest": "yul_path [1940,1946]"
    },
    {
      "src": "[: [ [6954,6955]",
      "dest": "[: [ [6954,6955]"
    },
    {
      "src": "): ) [9230,9231]",
      "dest": "): ) [9230,9231]"
    },
    {
      "src": "variable_declaration_statement [6472,6609]",
      "dest": "variable_declaration_statement [6472,6609]"
    },
    {
      "src": "yul_evm_builtin [1777,1780]",
      "dest": "yul_evm_builtin [1777,1780]"
    },
    {
      "src": "number_literal: 0 [8804,8805]",
      "dest": "number_literal: 0 [8804,8805]"
    },
    {
      "src": "function_definition [9478,10022]",
      "dest": "function_definition [9478,10022]"
    },
    {
      "src": "string [669,688]",
      "dest": "string [669,688]"
    },
    {
      "src": "comment: // Init data MUST include addresses for all sub-contracts + EIC. [5992,6056]",
      "dest": "comment: // Init data MUST include addresses for all sub-contracts + EIC. [5992,6056]"
    },
    {
      "src": "identifier: returndata [8572,8582]",
      "dest": "identifier: returndata [8572,8582]"
    },
    {
      "src": "binary_expression [6955,6983]",
      "dest": "binary_expression [6955,6983]"
    },
    {
      "src": "(: ( [9941,9942]",
      "dest": "(: ( [9941,9942]"
    },
    {
      "src": "): ) [2058,2059]",
      "dest": "): ) [2058,2059]"
    },
    {
      "src": "call_argument [9942,9952]",
      "dest": "call_argument [9942,9952]"
    },
    {
      "src": "expression_statement [9390,9466]",
      "dest": "expression_statement [9390,9466]"
    },
    {
      "src": "call_argument [7137,7140]",
      "dest": "call_argument [7137,7140]"
    },
    {
      "src": "yul_decimal_number: 0 [1896,1897]",
      "dest": "yul_decimal_number: 0 [1896,1897]"
    },
    {
      "src": "address: address [6586,6593]",
      "dest": "address: address [6586,6593]"
    },
    {
      "src": "binary_expression [7923,7943]",
      "dest": "binary_expression [7923,7943]"
    },
    {
      "src": "augmented_assignment_expression [9335,9370]",
      "dest": "augmented_assignment_expression [9335,9370]"
    },
    {
      "src": "call_argument [8516,8526]",
      "dest": "call_argument [8516,8526]"
    },
    {
      "src": "string [757,772]",
      "dest": "string [757,772]"
    },
    {
      "src": "update_expression [6400,6411]",
      "dest": "update_expression [6400,6411]"
    },
    {
      "src": ".: . [8454,8455]",
      "dest": ".: . [8454,8455]"
    },
    {
      "src": ",: , [8744,8745]",
      "dest": ",: , [8744,8745]"
    },
    {
      "src": "import_directive [690,719]",
      "dest": "import_directive [690,719]"
    },
    {
      "src": "identifier: additionalDataSize [8628,8646]",
      "dest": "identifier: additionalDataSize [8628,8646]"
    },
    {
      "src": "identifier: encodeWithSelector [8389,8407]",
      "dest": "identifier: encodeWithSelector [8389,8407]"
    },
    {
      "src": "\": \" [8746,8747]",
      "dest": "\": \" [8746,8747]"
    },
    {
      "src": "(: ( [2038,2039]",
      "dest": "(: ( [2038,2039]"
    },
    {
      "src": "yul_evm_builtin [1600,1612]",
      "dest": "yul_evm_builtin [1600,1612]"
    },
    {
      "src": "number_literal: 32 [6531,6533]",
      "dest": "number_literal: 32 [6531,6533]"
    },
    {
      "src": "number_literal: 1 [6369,6370]",
      "dest": "number_literal: 1 [6369,6370]"
    },
    {
      "src": "(: ( [6647,6648]",
      "dest": "(: ( [6647,6648]"
    },
    {
      "src": "): ) [8335,8336]",
      "dest": "): ) [8335,8336]"
    },
    {
      "src": "}: } [2168,2169]",
      "dest": "}: } [2168,2169]"
    },
    {
      "src": "uint256: uint256 [5765,5772]",
      "dest": "uint256: uint256 [5765,5772]"
    },
    {
      "src": "(: ( [8515,8516]",
      "dest": "(: ( [8515,8516]"
    },
    {
      "src": "call_expression [9918,9954]",
      "dest": "call_expression [9918,9954]"
    },
    {
      "src": "(: ( [7136,7137]",
      "dest": "(: ( [7136,7137]"
    },
    {
      "src": "identifier: returndata [8516,8526]",
      "dest": "identifier: returndata [8516,8526]"
    },
    {
      "src": "identifier: delegatecall [8355,8367]",
      "dest": "identifier: delegatecall [8355,8367]"
    },
    {
      "src": "if: if [7392,7394]",
      "dest": "if: if [7392,7394]"
    },
    {
      "src": "{: { [1341,1342]",
      "dest": "{: { [1341,1342]"
    },
    {
      "src": "yul_decimal_number: 0 [1594,1595]",
      "dest": "yul_decimal_number: 0 [1594,1595]"
    },
    {
      "src": "): ) [8526,8527]",
      "dest": "): ) [8526,8527]"
    },
    {
      "src": "call_argument [7509,7548]",
      "dest": "call_argument [7509,7548]"
    },
    {
      "src": "): ) [9783,9784]",
      "dest": "): ) [9783,9784]"
    },
    {
      "src": "private: private [9580,9587]",
      "dest": "private: private [9580,9587]"
    },
    {
      "src": "identifier: result [1754,1760]",
      "dest": "identifier: result [1754,1760]"
    },
    {
      "src": "returndatasize: returndatasize [2042,2056]",
      "dest": "returndatasize: returndatasize [2042,2056]"
    },
    {
      "src": "identifier: data [6950,6954]",
      "dest": "identifier: data [6950,6954]"
    },
    {
      "src": "identifier: sig [1236,1239]",
      "dest": "identifier: sig [1236,1239]"
    },
    {
      "src": "): ) [8592,8593]",
      "dest": "): ) [8592,8593]"
    },
    {
      "src": "identifier: result [1940,1946]",
      "dest": "identifier: result [1940,1946]"
    },
    {
      "src": "call_argument [1258,1292]",
      "dest": "call_argument [1258,1292]"
    },
    {
      "src": "(: ( [1158,1159]",
      "dest": "(: ( [1158,1159]"
    },
    {
      "src": "primitive_type [6219,6226]",
      "dest": "primitive_type [6219,6226]"
    },
    {
      "src": "call_argument [6782,6791]",
      "dest": "call_argument [6782,6791]"
    },
    {
      "src": "(: ( [1916,1917]",
      "dest": "(: ( [1916,1917]"
    },
    {
      "src": "user_defined_type [815,830]",
      "dest": "user_defined_type [815,830]"
    },
    {
      "src": "): ) [9952,9953]",
      "dest": "): ) [9952,9953]"
    },
    {
      "src": "primitive_type [6349,6356]",
      "dest": "primitive_type [6349,6356]"
    },
    {
      "src": "member_expression [8385,8407]",
      "dest": "member_expression [8385,8407]"
    },
    {
      "src": "member_expression [9089,9104]",
      "dest": "member_expression [9089,9104]"
    },
    {
      "src": "visibility [1068,1076]",
      "dest": "visibility [1068,1076]"
    },
    {
      "src": "yul_evm_builtin [1881,1895]",
      "dest": "yul_evm_builtin [1881,1895]"
    },
    {
      "src": "identifier: nContract [7792,7801]",
      "dest": "identifier: nContract [7792,7801]"
    },
    {
      "src": "): ) [1320,1321]",
      "dest": "): ) [1320,1321]"
    },
    {
      "src": "call_expression [9390,9465]",
      "dest": "call_expression [9390,9465]"
    },
    {
      "src": "\": \" [669,670]",
      "dest": "\": \" [669,670]"
    },
    {
      "src": "payable: payable [1170,1177]",
      "dest": "payable: payable [1170,1177]"
    },
    {
      "src": "calldata: calldata [5375,5383]",
      "dest": "calldata: calldata [5375,5383]"
    },
    {
      "src": "[: [ [7210,7211]",
      "dest": "[: [ [7210,7211]"
    },
    {
      "src": "): ) [9279,9280]",
      "dest": "): ) [9279,9280]"
    },
    {
      "src": "assembly: assembly [1332,1340]",
      "dest": "assembly: assembly [1332,1340]"
    },
    {
      "src": "number_literal: 32 [5957,5959]",
      "dest": "number_literal: 32 [5957,5959]"
    },
    {
      "src": "expression_statement [7157,7238]",
      "dest": "expression_statement [7157,7238]"
    },
    {
      "src": "\": \" [757,758]",
      "dest": "\": \" [757,758]"
    },
    {
      "src": "): ) [6411,6412]",
      "dest": "): ) [6411,6412]"
    },
    {
      "src": "identifier: initSize [8792,8800]",
      "dest": "identifier: initSize [8792,8800]"
    },
    {
      "src": "member_expression [6248,6259]",
      "dest": "member_expression [6248,6259]"
    },
    {
      "src": "identifier: decode [8565,8571]",
      "dest": "identifier: decode [8565,8571]"
    },
    {
      "src": "function_body [5425,9472]",
      "dest": "function_body [5425,9472]"
    },
    {
      "src": "identifier: contractAddress [6480,6495]",
      "dest": "identifier: contractAddress [6480,6495]"
    },
    {
      "src": "number_literal: 1 [6549,6550]",
      "dest": "number_literal: 1 [6549,6550]"
    },
    {
      "src": "primitive_type [9511,9518]",
      "dest": "primitive_type [9511,9518]"
    },
    {
      "src": "expression_statement [1250,1322]",
      "dest": "expression_statement [1250,1322]"
    },
    {
      "src": "type_name [6349,6356]",
      "dest": "type_name [6349,6356]"
    },
    {
      "src": ",: , [1598,1599]",
      "dest": ",: , [1598,1599]"
    },
    {
      "src": "yul_identifier [1754,1760]",
      "dest": "yul_identifier [1754,1760]"
    },
    {
      "src": "binary_expression [9972,9994]",
      "dest": "binary_expression [9972,9994]"
    },
    {
      "src": "-: - [6260,6261]",
      "dest": "-: - [6260,6261]"
    },
    {
      "src": "[: [ [9139,9140]",
      "dest": "[: [ [9139,9140]"
    },
    {
      "src": "\": \" [1319,1320]",
      "dest": "\": \" [1319,1320]"
    },
    {
      "src": "comment: // out and outsize are 0 for now, as we don\"t know the out size yet. [1669,1737]",
      "dest": "comment: // out and outsize are 0 for now, as we don\"t know the out size yet. [1669,1737]"
    },
    {
      "src": "yul_function_call [1881,1919]",
      "dest": "yul_function_call [1881,1919]"
    },
    {
      "src": "): ) [5514,5515]",
      "dest": "): ) [5514,5515]"
    },
    {
      "src": "identifier: abi [6926,6929]",
      "dest": "identifier: abi [6926,6929]"
    },
    {
      "src": "state_mutability [1077,1084]",
      "dest": "state_mutability [1077,1084]"
    },
    {
      "src": "variable_declaration_statement [5923,5982]",
      "dest": "variable_declaration_statement [5923,5982]"
    },
    {
      "src": ".: . [9864,9865]",
      "dest": ".: . [9864,9865]"
    },
    {
      "src": "identifier: decode [6502,6508]",
      "dest": "identifier: decode [6502,6508]"
    },
    {
      "src": "}: } [1143,1144]",
      "dest": "}: } [1143,1144]"
    },
    {
      "src": "calldatacopy: calldatacopy [1581,1593]",
      "dest": "calldatacopy: calldatacopy [1581,1593]"
    },
    {
      "src": "address: address [6892,6899]",
      "dest": "address: address [6892,6899]"
    },
    {
      "src": "comment: // The initializerSize is called via delegatecall, so that it can relate to the state, [8015,8101]",
      "dest": "comment: // The initializerSize is called via delegatecall, so that it can relate to the state, [8015,8101]"
    },
    {
      "src": "variable_declaration_statement [9745,9909]",
      "dest": "variable_declaration_statement [9745,9909]"
    },
    {
      "src": "address: address [7129,7136]",
      "dest": "address: address [7129,7136]"
    },
    {
      "src": "uint256: uint256 [8542,8549]",
      "dest": "uint256: uint256 [8542,8549]"
    },
    {
      "src": "{: { [6413,6414]",
      "dest": "{: { [6413,6414]"
    },
    {
      "src": "call_expression [9837,9898]",
      "dest": "call_expression [9837,9898]"
    },
    {
      "src": "expression_statement [6065,6143]",
      "dest": "expression_statement [6065,6143]"
    },
    {
      "src": "continue_statement [8825,8834]",
      "dest": "continue_statement [8825,8834]"
    },
    {
      "src": "call_argument [7918,7959]",
      "dest": "call_argument [7918,7959]"
    },
    {
      "src": "variable_declaration [9760,9783]",
      "dest": "variable_declaration [9760,9783]"
    },
    {
      "src": "expression_statement [9964,10016]",
      "dest": "expression_statement [9964,10016]"
    },
    {
      "src": "(: ( [8571,8572]",
      "dest": "(: ( [8571,8572]"
    },
    {
      "src": "!=: != [7126,7128]",
      "dest": "!=: != [7126,7128]"
    },
    {
      "src": "member_expression [8408,8454]",
      "dest": "member_expression [8408,8454]"
    },
    {
      "src": "yul_evm_builtin [2032,2038]",
      "dest": "yul_evm_builtin [2032,2038]"
    },
    {
      "src": "type_name [9544,9549]",
      "dest": "type_name [9544,9549]"
    },
    {
      "src": "identifier: initialize [5358,5368]",
      "dest": "identifier: initialize [5358,5368]"
    },
    {
      "src": "identifier: initDataContractsOffset [7211,7234]",
      "dest": "identifier: initDataContractsOffset [7211,7234]"
    },
    {
      "src": "identifier: initialize [9094,9104]",
      "dest": "identifier: initialize [9094,9104]"
    },
    {
      "src": "(: ( [9609,9610]",
      "dest": "(: ( [9609,9610]"
    },
    {
      "src": "{: { [1178,1179]",
      "dest": "{: { [1178,1179]"
    },
    {
      "src": "type_name [8542,8549]",
      "dest": "type_name [8542,8549]"
    },
    {
      "src": "call_argument [7181,7204]",
      "dest": "call_argument [7181,7204]"
    },
    {
      "src": "virtual: virtual [5399,5406]",
      "dest": "virtual: virtual [5399,5406]"
    },
    {
      "src": "call_expression [1217,1240]",
      "dest": "call_expression [1217,1240]"
    },
    {
      "src": "}: } [6819,6820]",
      "dest": "}: } [6819,6820]"
    },
    {
      "src": "comment: // I. If no init data passed besides sub-contracts, return. [7324,7383]",
      "dest": "comment: // I. If no init data passed besides sub-contracts, return. [7324,7383]"
    },
    {
      "src": "variable_declaration_statement [6219,6286]",
      "dest": "variable_declaration_statement [6219,6286]"
    },
    {
      "src": "): ) [1291,1292]",
      "dest": "): ) [1291,1292]"
    },
    {
      "src": "variable_declaration [7864,7887]",
      "dest": "variable_declaration [7864,7887]"
    },
    {
      "src": "binary_expression [9164,9198]",
      "dest": "binary_expression [9164,9198]"
    },
    {
      "src": "): ) [6550,6551]",
      "dest": "): ) [6550,6551]"
    },
    {
      "src": "call_expression [8492,8528]",
      "dest": "call_expression [8492,8528]"
    },
    {
      "src": ",: , [9434,9435]",
      "dest": ",: , [9434,9435]"
    },
    {
      "src": ",: , [8507,8508]",
      "dest": ",: , [8507,8508]"
    },
    {
      "src": "member_expression [8999,9027]",
      "dest": "member_expression [8999,9027]"
    },
    {
      "src": "variable_declaration [5923,5954]",
      "dest": "variable_declaration [5923,5954]"
    },
    {
      "src": ",: , [6791,6792]",
      "dest": ",: , [6791,6792]"
    },
    {
      "src": "binary_expression [7509,7548]",
      "dest": "binary_expression [7509,7548]"
    },
    {
      "src": ".: . [9982,9983]",
      "dest": ".: . [9982,9983]"
    },
    {
      "src": "(: ( [8584,8585]",
      "dest": "(: ( [8584,8585]"
    },
    {
      "src": "number_literal: 15 [5639,5641]",
      "dest": "number_literal: 15 [5639,5641]"
    },
    {
      "src": "type_name [8312,8317]",
      "dest": "type_name [8312,8317]"
    },
    {
      "src": "identifier: success [9926,9933]",
      "dest": "identifier: success [9926,9933]"
    },
    {
      "src": "}: } [2162,2163]",
      "dest": "}: } [2162,2163]"
    },
    {
      "src": "yul_function_call [1600,1614]",
      "dest": "yul_function_call [1600,1614]"
    },
    {
      "src": "tuple_expression [8975,8996]",
      "dest": "tuple_expression [8975,8996]"
    },
    {
      "src": "{: { [7143,7144]",
      "dest": "{: { [7143,7144]"
    },
    {
      "src": "(: ( [7977,7978]",
      "dest": "(: ( [7977,7978]"
    },
    {
      "src": "=: = [9785,9786]",
      "dest": "=: = [9785,9786]"
    },
    {
      "src": "inheritance_specifier [832,847]",
      "dest": "inheritance_specifier [832,847]"
    },
    {
      "src": "comment: // Just past the sub-contract+eic addresses. [5870,5914]",
      "dest": "comment: // Just past the sub-contract+eic addresses. [5870,5914]"
    },
    {
      "src": "identifier: subContractAddress [1196,1214]",
      "dest": "identifier: subContractAddress [1196,1214]"
    },
    {
      "src": "primitive_type [8585,8592]",
      "dest": "primitive_type [8585,8592]"
    },
    {
      "src": "call_expression [9045,9217]",
      "dest": "call_expression [9045,9217]"
    },
    {
      "src": "comment: // Extract & update contract addresses. [6296,6335]",
      "dest": "comment: // Extract & update contract addresses. [6296,6335]"
    },
    {
      "src": "binary_expression [8697,8744]",
      "dest": "binary_expression [8697,8744]"
    },
    {
      "src": "identifier: callExternalInitializer [7157,7180]",
      "dest": "identifier: callExternalInitializer [7157,7180]"
    },
    {
      "src": "yul_evm_builtin [1581,1593]",
      "dest": "yul_evm_builtin [1581,1593]"
    },
    {
      "src": "for_statement [6344,6820]",
      "dest": "for_statement [6344,6820]"
    },
    {
      "src": "identifier: notCalledDirectly [5407,5424]",
      "dest": "identifier: notCalledDirectly [5407,5424]"
    },
    {
      "src": "): ) [7627,7628]",
      "dest": "): ) [7627,7628]"
    },
    {
      "src": "}: } [7267,7268]",
      "dest": "}: } [7267,7268]"
    },
    {
      "src": "yul_evm_builtin [2112,2118]",
      "dest": "yul_evm_builtin [2112,2118]"
    },
    {
      "src": "identifier: encodeWithSelector [9841,9859]",
      "dest": "identifier: encodeWithSelector [9841,9859]"
    },
    {
      "src": "expression_statement [9335,9371]",
      "dest": "expression_statement [9335,9371]"
    },
    {
      "src": "member_expression [9860,9875]",
      "dest": "member_expression [9860,9875]"
    },
    {
      "src": "identifier: abi [8385,8388]",
      "dest": "identifier: abi [8385,8388]"
    },
    {
      "src": "identifier: totalInitSizes [9420,9434]",
      "dest": "identifier: totalInitSizes [9420,9434]"
    },
    {
      "src": "yul_decimal_number: 0 [1826,1827]",
      "dest": "yul_decimal_number: 0 [1826,1827]"
    },
    {
      "src": "\": \" [6140,6141]",
      "dest": "\": \" [6140,6141]"
    },
    {
      "src": "variable_declaration_statement [5471,5516]",
      "dest": "variable_declaration_statement [5471,5516]"
    },
    {
      "src": "primitive_type [7129,7136]",
      "dest": "primitive_type [7129,7136]"
    },
    {
      "src": "contract_declaration [775,10024]",
      "dest": "contract_declaration [775,10024]"
    },
    {
      "src": "let: let [1750,1753]",
      "dest": "let: let [1750,1753]"
    },
    {
      "src": "expression_statement [6760,6810]",
      "dest": "expression_statement [6760,6810]"
    },
    {
      "src": "==: == [9417,9419]",
      "dest": "==: == [9417,9419]"
    },
    {
      "src": ":=: := [1761,1763]",
      "dest": ":=: := [1761,1763]"
    },
    {
      "src": "identifier: this [9089,9093]",
      "dest": "identifier: this [9089,9093]"
    },
    {
      "src": "identifier: extInitData [9886,9897]",
      "dest": "identifier: extInitData [9886,9897]"
    },
    {
      "src": "default: default [2086,2093]",
      "dest": "default: default [2086,2093]"
    },
    {
      "src": "identifier: contractAddress [6793,6808]",
      "dest": "identifier: contractAddress [6793,6808]"
    },
    {
      "src": "(: ( [10002,10003]",
      "dest": "(: ( [10002,10003]"
    },
    {
      "src": "+=: += [9359,9361]",
      "dest": "+=: += [9359,9361]"
    },
    {
      "src": "type_name [9746,9750]",
      "dest": "type_name [9746,9750]"
    },
    {
      "src": "yul_decimal_number: 0 [1899,1900]",
      "dest": "yul_decimal_number: 0 [1899,1900]"
    },
    {
      "src": "is: is [812,814]",
      "dest": "is: is [812,814]"
    },
    {
      "src": "\": \" [8648,8649]",
      "dest": "\": \" [8648,8649]"
    },
    {
      "src": "primitive_type [9746,9750]",
      "dest": "primitive_type [9746,9750]"
    },
    {
      "src": "(: ( [1257,1258]",
      "dest": "(: ( [1257,1258]"
    },
    {
      "src": "identifier: require [8608,8615]",
      "dest": "identifier: require [8608,8615]"
    },
    {
      "src": ",: , [1821,1822]",
      "dest": ",: , [1821,1822]"
    },
    {
      "src": "comment: // Copy msg.data. We take full control of memory in this inline assembly [1355,1427]",
      "dest": "comment: // Copy msg.data. We take full control of memory in this inline assembly [1355,1427]"
    },
    {
      "src": ",: , [1805,1806]",
      "dest": ",: , [1805,1806]"
    },
    {
      "src": "string [5643,5667]",
      "dest": "string [5643,5667]"
    },
    {
      "src": ",: , [2120,2121]",
      "dest": ",: , [2120,2121]"
    },
    {
      "src": "(: ( [5368,5369]",
      "dest": "(: ( [5368,5369]"
    },
    {
      "src": "function_body [1178,2169]",
      "dest": "function_body [1178,2169]"
    },
    {
      "src": "solidity_version: 0.6.12 [653,659]",
      "dest": "solidity_version: 0.6.12 [653,659]"
    },
    {
      "src": "binary_expression [9398,9434]",
      "dest": "binary_expression [9398,9434]"
    },
    {
      "src": "type_cast_expression [9996,10014]",
      "dest": "type_cast_expression [9996,10014]"
    },
    {
      "src": "number_literal: 0x0 [1288,1291]",
      "dest": "number_literal: 0x0 [1288,1291]"
    },
    {
      "src": "slice_access [9135,9199]",
      "dest": "slice_access [9135,9199]"
    },
    {
      "src": "identifier: data [7206,7210]",
      "dest": "identifier: data [7206,7210]"
    },
    {
      "src": "(: ( [2118,2119]",
      "dest": "(: ( [2118,2119]"
    },
    {
      "src": "variable_declaration_statement [6892,7042]",
      "dest": "variable_declaration_statement [6892,7042]"
    },
    {
      "src": "identifier: contractAddress [8422,8437]",
      "dest": "identifier: contractAddress [8422,8437]"
    },
    {
      "src": "call_expression [9602,9665]",
      "dest": "call_expression [9602,9665]"
    },
    {
      "src": "comment: /*   Copyright 2019-2022 StarkWare Industries Ltd.    Licensed under the Apache License, Version 2.0 (the \"License\").   You may not use this file except in compliance with the License.   You may obtain a copy of the License at    https://www.starkware.co/open-source-license/    Unless required by applicable law or agreed to in writing,   software distributed under the License is distributed on an \"AS IS\" BASIS,   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   See the License for the specific language governing permissions   and limitations under the License. */ [0,595]",
      "dest": "comment: /*   Copyright 2019-2022 StarkWare Industries Ltd.    Licensed under the Apache License, Version 2.0 (the \"License\").   You may not use this file except in compliance with the License.   You may obtain a copy of the License at    https://www.starkware.co/open-source-license/    Unless required by applicable law or agreed to in writing,   software distributed under the License is distributed on an \"AS IS\" BASIS,   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   See the License for the specific language governing permissions   and limitations under the License. */ [0,595]"
    },
    {
      "src": "call_expression [9610,9646]",
      "dest": "call_expression [9610,9646]"
    },
    {
      "src": "(: ( [8791,8792]",
      "dest": "(: ( [8791,8792]"
    },
    {
      "src": "pragma: pragma [636,642]",
      "dest": "pragma: pragma [636,642]"
    },
    {
      "src": "identifier: length [6253,6259]",
      "dest": "identifier: length [6253,6259]"
    },
    {
      "src": "identifier: externalInitializerAddr [9787,9810]",
      "dest": "identifier: externalInitializerAddr [9787,9810]"
    },
    {
      "src": ",: , [1782,1783]",
      "dest": ",: , [1782,1783]"
    },
    {
      "src": "comment: /*       1. Extract subcontracts.       2. Verify correct sub-contract initializer size.       3. Extract sub-contract initializer data.       4. Call sub-contract initializer.        The init data bytes passed to initialize are structed as following:       I. N slots (uin256 size) addresses of the deployed sub-contracts.       II. An address of an external initialization contract (optional, or ZERO_ADDRESS).       III. (Up to) N bytes sections of the sub-contracts initializers.        If already initialized (i.e. upgrade) we expect the init data to be consistent with this.       and if a different size of init data is expected when upgrading, the initializerSize should       reflect this.        If an external initializer contract is not used, ZERO_ADDRESS is passed in its slot.       If the external initializer contract is used, all the remaining init data is passed to it,       and internal initialization will not occur.        External Initialization Contract       --------------------------------       External Initialization Contract (EIC) is a hook for custom initialization.       Typically in an upgrade flow, the expected initialization contains only the addresses of       the sub-contracts. Normal initialization of the sub-contracts is such that is not needed       in an upgrade, and actually may be very dangerous, as changing of state on a working system       may corrupt it.        In the event that some state initialization is required, the EIC is a hook that allows this.       It may be deployed and called specifically for this purpose.        The address of the EIC must be provided (if at all) when a new implementation is added to       a Proxy contract (as part of the initialization vector).       Hence, it is considered part of the code open to reviewers prior to a time-locked upgrade.        When a custom initialization is performed using an EIC,       the main dispatcher initialize extracts and stores the sub-contracts addresses, and then       yields to the EIC, skipping the rest of its initialization code.         Flow of MainDispatcher initialize       ---------------------------------       1. Extraction and assignment of subcontracts addresses          Main dispatcher expects a valid and consistent set of addresses in the passed data.          It validates that, extracts the addresses from the data, and validates that the addresses          are of the expected type and order. Then those addresses are stored.        2. Extraction of EIC address          The address of the EIC is extracted from the data.          External Initializer Contract is optional. ZERO_ADDRESS indicates it is not used.        3a. EIC is used           Dispatcher calls the EIC initialize function with the remaining data.           Note - In this option 3b is not performed.        3b. EIC is not used           If there is additional initialization data then:           I. Sentitenl function is called to permit subcontracts initialization.           II. Dispatcher loops through the subcontracts and for each one it extracts the               initializing data and passes it to the subcontract's initialize function.      */ [2175,5344]",
      "dest": "comment: /*       1. Extract subcontracts.       2. Verify correct sub-contract initializer size.       3. Extract sub-contract initializer data.       4. Call sub-contract initializer.        The init data bytes passed to initialize are structed as following:       I. N slots (uin256 size) addresses of the deployed sub-contracts.       II. An address of an external initialization contract (optional, or ZERO_ADDRESS).       III. (Up to) N bytes sections of the sub-contracts initializers.        If already initialized (i.e. upgrade) we expect the init data to be consistent with this.       and if a different size of init data is expected when upgrading, the initializerSize should       reflect this.        If an external initializer contract is not used, ZERO_ADDRESS is passed in its slot.       If the external initializer contract is used, all the remaining init data is passed to it,       and internal initialization will not occur.        External Initialization Contract       --------------------------------       External Initialization Contract (EIC) is a hook for custom initialization.       Typically in an upgrade flow, the expected initialization contains only the addresses of       the sub-contracts. Normal initialization of the sub-contracts is such that is not needed       in an upgrade, and actually may be very dangerous, as changing of state on a working system       may corrupt it.        In the event that some state initialization is required, the EIC is a hook that allows this.       It may be deployed and called specifically for this purpose.        The address of the EIC must be provided (if at all) when a new implementation is added to       a Proxy contract (as part of the initialization vector).       Hence, it is considered part of the code open to reviewers prior to a time-locked upgrade.        When a custom initialization is performed using an EIC,       the main dispatcher initialize extracts and stores the sub-contracts addresses, and then       yields to the EIC, skipping the rest of its initialization code.         Flow of MainDispatcher initialize       ---------------------------------       1. Extraction and assignment of subcontracts addresses          Main dispatcher expects a valid and consistent set of addresses in the passed data.          It validates that, extracts the addresses from the data, and validates that the addresses          are of the expected type and order. Then those addresses are stored.        2. Extraction of EIC address          The address of the EIC is extracted from the data.          External Initializer Contract is optional. ZERO_ADDRESS indicates it is not used.        3a. EIC is used           Dispatcher calls the EIC initialize function with the remaining data.           Note - In this option 3b is not performed.        3b. EIC is not used           If there is additional initialization data then:           I. Sentitenl function is called to permit subcontracts initialization.           II. Dispatcher loops through the subcontracts and for each one it extracts the               initializing data and passes it to the subcontract's initialize function.      */ [2175,5344]"
    },
    {
      "src": "yul_block [2094,2153]",
      "dest": "yul_block [2094,2153]"
    },
    {
      "src": "parenthesized_expression [7022,7031]",
      "dest": "parenthesized_expression [7022,7031]"
    },
    {
      "src": "identifier: initialize [9865,9875]",
      "dest": "identifier: initialize [9865,9875]"
    },
    {
      "src": "parameter [9544,9570]",
      "dest": "parameter [9544,9570]"
    },
    {
      "src": "identifier: SubContractor [8408,8421]",
      "dest": "identifier: SubContractor [8408,8421]"
    },
    {
      "src": "(: ( [8975,8976]",
      "dest": "(: ( [8975,8976]"
    },
    {
      "src": "=: = [5493,5494]",
      "dest": "=: = [5493,5494]"
    },
    {
      "src": "identifier: data [6073,6077]",
      "dest": "identifier: data [6073,6077]"
    },
    {
      "src": "identifier: additionalDataSize [6227,6245]",
      "dest": "identifier: additionalDataSize [6227,6245]"
    },
    {
      "src": "=: = [6924,6925]",
      "dest": "=: = [6924,6925]"
    },
    {
      "src": ":: : [7234,7235]",
      "dest": ":: : [7234,7235]"
    },
    {
      "src": "call_argument [9135,9199]",
      "dest": "call_argument [9135,9199]"
    },
    {
      "src": "<=: <= [7774,7776]",
      "dest": "<=: <= [7774,7776]"
    },
    {
      "src": "string [697,718]",
      "dest": "string [697,718]"
    },
    {
      "src": "type_name [5471,5478]",
      "dest": "type_name [5471,5478]"
    },
    {
      "src": "=: = [7888,7889]",
      "dest": "=: = [7888,7889]"
    },
    {
      "src": "identifier: require [9245,9252]",
      "dest": "identifier: require [9245,9252]"
    },
    {
      "src": "identifier: require [9390,9397]",
      "dest": "identifier: require [9390,9397]"
    },
    {
      "src": "call_expression [8689,8773]",
      "dest": "call_expression [8689,8773]"
    },
    {
      "src": "(: ( [5513,5514]",
      "dest": "(: ( [5513,5514]"
    },
    {
      "src": "address: address [1188,1195]",
      "dest": "address: address [1188,1195]"
    },
    {
      "src": "expression_statement [5614,5669]",
      "dest": "expression_statement [5614,5669]"
    },
    {
      "src": "type_name [5369,5374]",
      "dest": "type_name [5369,5374]"
    },
    {
      "src": "\": \" [1135,1136]",
      "dest": "\": \" [1135,1136]"
    },
    {
      "src": "}: } [7451,7452]",
      "dest": "}: } [7451,7452]"
    },
    {
      "src": "number_literal: 0 [7418,7419]",
      "dest": "number_literal: 0 [7418,7419]"
    },
    {
      "src": "variable_declaration_tuple [8297,8336]",
      "dest": "variable_declaration_tuple [8297,8336]"
    },
    {
      "src": "call_argument [6073,6111]",
      "dest": "call_argument [6073,6111]"
    },
    {
      "src": "=: = [6496,6497]",
      "dest": "=: = [6496,6497]"
    },
    {
      "src": "binary_expression [6531,6551]",
      "dest": "binary_expression [6531,6551]"
    },
    {
      "src": "uint256: uint256 [5471,5478]",
      "dest": "uint256: uint256 [5471,5478]"
    },
    {
      "src": ",: , [9646,9647]",
      "dest": ",: , [9646,9647]"
    },
    {
      "src": "identifier: returndata [10003,10013]",
      "dest": "identifier: returndata [10003,10013]"
    },
    {
      "src": "for: for [870,873]",
      "dest": "for: for [870,873]"
    },
    {
      "src": "(: ( [9745,9746]",
      "dest": "(: ( [9745,9746]"
    },
    {
      "src": "identifier: success [8500,8507]",
      "dest": "identifier: success [8500,8507]"
    },
    {
      "src": "member_expression [8339,8367]",
      "dest": "member_expression [8339,8367]"
    },
    {
      "src": "string_literal [6113,6141]",
      "dest": "string_literal [6113,6141]"
    },
    {
      "src": ",: , [2040,2041]",
      "dest": ",: , [2040,2041]"
    },
    {
      "src": "identifier: require [9602,9609]",
      "dest": "identifier: require [9602,9609]"
    },
    {
      "src": "call_expression [6065,6142]",
      "dest": "call_expression [6065,6142]"
    },
    {
      "src": "(: ( [1287,1288]",
      "dest": "(: ( [1287,1288]"
    },
    {
      "src": "primitive_type [7023,7030]",
      "dest": "primitive_type [7023,7030]"
    },
    {
      "src": "payable: payable [1077,1084]",
      "dest": "payable: payable [1077,1084]"
    },
    {
      "src": "parenthesized_expression [1101,1137]",
      "dest": "parenthesized_expression [1101,1137]"
    },
    {
      "src": "abstract: abstract [775,783]",
      "dest": "abstract: abstract [775,783]"
    },
    {
      "src": "identifier: success [9751,9758]",
      "dest": "identifier: success [9751,9758]"
    },
    {
      "src": "comment: // Copy the returned data. [1842,1868]",
      "dest": "comment: // Copy the returned data. [1842,1868]"
    },
    {
      "src": "binary_expression [8792,8805]",
      "dest": "binary_expression [8792,8805]"
    },
    {
      "src": "address: address [9511,9518]",
      "dest": "address: address [9511,9518]"
    },
    {
      "src": "identifier: initDataContractsOffset [9335,9358]",
      "dest": "identifier: initDataContractsOffset [9335,9358]"
    },
    {
      "src": "string [8648,8674]",
      "dest": "string [8648,8674]"
    },
    {
      "src": "(: ( [6936,6937]",
      "dest": "(: ( [6936,6937]"
    },
    {
      "src": ".: . [8354,8355]",
      "dest": ".: . [8354,8355]"
    },
    {
      "src": "primitive_type [9760,9765]",
      "dest": "primitive_type [9760,9765]"
    },
    {
      "src": "uint256: uint256 [5923,5930]",
      "dest": "uint256: uint256 [5923,5930]"
    },
    {
      "src": "slice_access [6526,6567]",
      "dest": "slice_access [6526,6567]"
    },
    {
      "src": "(: ( [9644,9645]",
      "dest": "(: ( [9644,9645]"
    },
    {
      "src": "source_file [0,10025]",
      "dest": "source_file [0,10025]"
    },
    {
      "src": "binary_expression [6372,6398]",
      "dest": "binary_expression [6372,6398]"
    },
    {
      "src": "string_literal [8648,8674]",
      "dest": "string_literal [8648,8674]"
    },
    {
      "src": "call_expression [8999,9231]",
      "dest": "call_expression [8999,9231]"
    },
    {
      "src": "parenthesized_expression [5962,5981]",
      "dest": "parenthesized_expression [5962,5981]"
    },
    {
      "src": "^:  ^ [651,653]",
      "dest": "^:  ^ [651,653]"
    },
    {
      "src": ".: . [8438,8439]",
      "dest": ".: . [8438,8439]"
    },
    {
      "src": "(: ( [7180,7181]",
      "dest": "(: ( [7180,7181]"
    },
    {
      "src": "\": \" [9463,9464]",
      "dest": "\": \" [9463,9464]"
    },
    {
      "src": "-: - [6547,6548]",
      "dest": "-: - [6547,6548]"
    },
    {
      "src": "identifier: encodeWithSelector [9049,9067]",
      "dest": "identifier: encodeWithSelector [9049,9067]"
    },
    {
      "src": ",: , [5641,5642]",
      "dest": ",: , [5641,5642]"
    },
    {
      "src": "): ) [6141,6142]",
      "dest": "): ) [6141,6142]"
    },
    {
      "src": "call_argument [9436,9464]",
      "dest": "call_argument [9436,9464]"
    },
    {
      "src": "{: { [1085,1086]",
      "dest": "{: { [1085,1086]"
    },
    {
      "src": "call_expression [6760,6809]",
      "dest": "call_expression [6760,6809]"
    },
    {
      "src": "]: ] [7007,7008]",
      "dest": "]: ] [7007,7008]"
    },
    {
      "src": "==: == [8801,8803]",
      "dest": "==: == [8801,8803]"
    },
    {
      "src": "identifier: isContract [9634,9644]",
      "dest": "identifier: isContract [9634,9644]"
    },
    {
      "src": "string_literal [1294,1320]",
      "dest": "string_literal [1294,1320]"
    },
    {
      "src": "identifier: selector [8455,8463]",
      "dest": "identifier: selector [8455,8463]"
    },
    {
      "src": "function_body [9592,10022]",
      "dest": "function_body [9592,10022]"
    },
    {
      "src": "binary_expression [8697,8722]",
      "dest": "binary_expression [8697,8722]"
    },
    {
      "src": "comment: // Number of sub-contracts. [5435,5462]",
      "dest": "comment: // Number of sub-contracts. [5435,5462]"
    },
    {
      "src": "call_expression [8385,8464]",
      "dest": "call_expression [8385,8464]"
    },
    {
      "src": "block_statement [7805,9381]",
      "dest": "block_statement [7805,9381]"
    },
    {
      "src": "(: ( [7101,7102]",
      "dest": "(: ( [7101,7102]"
    },
    {
      "src": "==: == [7415,7417]",
      "dest": "==: == [7415,7417]"
    },
    {
      "src": "member_expression [9610,9644]",
      "dest": "member_expression [9610,9644]"
    },
    {
      "src": "call_expression [6926,7041]",
      "dest": "call_expression [6926,7041]"
    },
    {
      "src": "(: ( [1780,1781]",
      "dest": "(: ( [1780,1781]"
    },
    {
      "src": "identifier: returndata [8325,8335]",
      "dest": "identifier: returndata [8325,8335]"
    },
    {
      "src": "call_argument [8385,8464]",
      "dest": "call_argument [8385,8464]"
    },
    {
      "src": "import: import [750,756]",
      "dest": "import: import [750,756]"
    },
    {
      "src": "slice_access [6950,7008]",
      "dest": "slice_access [6950,7008]"
    },
    {
      "src": "identifier: totalInitSizes [9295,9309]",
      "dest": "identifier: totalInitSizes [9295,9309]"
    },
    {
      "src": "identifier: data [5384,5388]",
      "dest": "identifier: data [5384,5388]"
    },
    {
      "src": "return: return [7251,7257]",
      "dest": "return: return [7251,7257]"
    },
    {
      "src": "): ) [9216,9217]",
      "dest": "): ) [9216,9217]"
    },
    {
      "src": ",: , [9994,9995]",
      "dest": ",: , [9994,9995]"
    },
    {
      "src": "call_expression [1250,1321]",
      "dest": "call_expression [1250,1321]"
    },
    {
      "src": "yul_function_call [2122,2138]",
      "dest": "yul_function_call [2122,2138]"
    },
    {
      "src": "primitive_type [9996,10002]",
      "dest": "primitive_type [9996,10002]"
    },
    {
      "src": "parameter [5369,5388]",
      "dest": "parameter [5369,5388]"
    },
    {
      "src": "call_argument [9398,9434]",
      "dest": "call_argument [9398,9434]"
    },
    {
      "src": "identifier: abi [9045,9048]",
      "dest": "identifier: abi [9045,9048]"
    },
    {
      "src": "): ) [1827,1828]",
      "dest": "): ) [1827,1828]"
    },
    {
      "src": "]: ] [6566,6567]",
      "dest": "]: ] [6566,6567]"
    },
    {
      "src": "return_statement [7435,7442]",
      "dest": "return_statement [7435,7442]"
    },
    {
      "src": ".: . [6501,6502]",
      "dest": ".: . [6501,6502]"
    },
    {
      "src": "(: ( [9925,9926]",
      "dest": "(: ( [9925,9926]"
    },
    {
      "src": "address: address [7864,7871]",
      "dest": "address: address [7864,7871]"
    },
    {
      "src": "=: = [8559,8560]",
      "dest": "=: = [8559,8560]"
    },
    {
      "src": "uint256: uint256 [8585,8592]",
      "dest": "uint256: uint256 [8585,8592]"
    },
    {
      "src": "modifier_invocation [5407,5424]",
      "dest": "modifier_invocation [5407,5424]"
    },
    {
      "src": "(: ( [6348,6349]",
      "dest": "(: ( [6348,6349]"
    },
    {
      "src": "(: ( [8367,8368]",
      "dest": "(: ( [8367,8368]"
    },
    {
      "src": "identifier: BlockDirectCall [832,847]",
      "dest": "identifier: BlockDirectCall [832,847]"
    },
    {
      "src": "member_expression [6926,6936]",
      "dest": "member_expression [6926,6936]"
    },
    {
      "src": "identifier: setSubContractAddress [6760,6781]",
      "dest": "identifier: setSubContractAddress [6760,6781]"
    },
    {
      "src": "identifier: initSize [8714,8722]",
      "dest": "identifier: initSize [8714,8722]"
    },
    {
      "src": "identifier: returndata [9269,9279]",
      "dest": "identifier: returndata [9269,9279]"
    },
    {
      "src": "identifier: delegatecall [9811,9823]",
      "dest": "identifier: delegatecall [9811,9823]"
    },
    {
      "src": "identifier: initDataContractsOffset [6088,6111]",
      "dest": "identifier: initDataContractsOffset [6088,6111]"
    },
    {
      "src": "string: string [9996,10002]",
      "dest": "string: string [9996,10002]"
    },
    {
      "src": "): ) [7040,7041]",
      "dest": "): ) [7040,7041]"
    },
    {
      "src": "): ) [8772,8773]",
      "dest": "): ) [8772,8773]"
    },
    {
      "src": "identifier: success [9253,9260]",
      "dest": "identifier: success [9253,9260]"
    },
    {
      "src": "comment: // SPDX-License-Identifier: Apache-2.0. [596,635]",
      "dest": "comment: // SPDX-License-Identifier: Apache-2.0. [596,635]"
    },
    {
      "src": "identifier: returndata [9773,9783]",
      "dest": "identifier: returndata [9773,9783]"
    },
    {
      "src": "*: * [7947,7948]",
      "dest": "*: * [7947,7948]"
    },
    {
      "src": "identifier: success [8976,8983]",
      "dest": "identifier: success [8976,8983]"
    },
    {
      "src": "identifier: externalInitializerAddr [7102,7125]",
      "dest": "identifier: externalInitializerAddr [7102,7125]"
    },
    {
      "src": "type_name [6219,6226]",
      "dest": "type_name [6219,6226]"
    },
    {
      "src": "block_statement [6413,6820]",
      "dest": "block_statement [6413,6820]"
    },
    {
      "src": "type_cast_expression [9262,9280]",
      "dest": "type_cast_expression [9262,9280]"
    },
    {
      "src": "slice_access [7206,7236]",
      "dest": "slice_access [7206,7236]"
    },
    {
      "src": "identifier: Addresses [860,869]",
      "dest": "identifier: Addresses [860,869]"
    },
    {
      "src": "++: ++ [6409,6411]",
      "dest": "++: ++ [6409,6411]"
    },
    {
      "src": "primitive_type [874,881]",
      "dest": "primitive_type [874,881]"
    },
    {
      "src": "member_expression [9787,9823]",
      "dest": "member_expression [9787,9823]"
    },
    {
      "src": "\": \" [687,688]",
      "dest": "\": \" [687,688]"
    },
    {
      "src": "binary_expression [5963,5980]",
      "dest": "binary_expression [5963,5980]"
    },
    {
      "src": "identifier: additionalDataSize [9398,9416]",
      "dest": "identifier: additionalDataSize [9398,9416]"
    },
    {
      "src": "\": \" [8771,8772]",
      "dest": "\": \" [8771,8772]"
    },
    {
      "src": "calldata: calldata [9550,9558]",
      "dest": "calldata: calldata [9550,9558]"
    },
    {
      "src": "call_argument [8408,8463]",
      "dest": "call_argument [8408,8463]"
    },
    {
      "src": "string_literal [9648,9664]",
      "dest": "string_literal [9648,9664]"
    },
    {
      "src": "{: { [2014,2015]",
      "dest": "{: { [2014,2015]"
    },
    {
      "src": "=: = [8337,8338]",
      "dest": "=: = [8337,8338]"
    },
    {
      "src": "string_literal [8746,8772]",
      "dest": "string_literal [8746,8772]"
    },
    {
      "src": "(: ( [9510,9511]",
      "dest": "(: ( [9510,9511]"
    },
    {
      "src": "member_expression [9045,9067]",
      "dest": "member_expression [9045,9067]"
    },
    {
      "src": "member_expression [8408,8463]",
      "dest": "member_expression [8408,8463]"
    },
    {
      "src": "comment: // NOLINTNEXTLINE: controlled-delegatecall calls-loop. [8908,8962]",
      "dest": "comment: // NOLINTNEXTLINE: controlled-delegatecall calls-loop. [8908,8962]"
    },
    {
      "src": "identifier: externalInitializerAddr [9519,9542]",
      "dest": "identifier: externalInitializerAddr [9519,9542]"
    },
    {
      "src": "variable_declaration [6349,6366]",
      "dest": "variable_declaration [6349,6366]"
    },
    {
      "src": "call_argument [9972,9994]",
      "dest": "call_argument [9972,9994]"
    },
    {
      "src": "{: { [848,849]",
      "dest": "{: { [848,849]"
    },
    {
      "src": "call_expression [7157,7237]",
      "dest": "call_expression [7157,7237]"
    },
    {
      "src": "expression_statement [8975,9232]",
      "dest": "expression_statement [8975,9232]"
    },
    {
      "src": "(: ( [7395,7396]",
      "dest": "(: ( [7395,7396]"
    },
    {
      "src": "): ) [7419,7420]",
      "dest": "): ) [7419,7420]"
    },
    {
      "src": "\": \" [8673,8674]",
      "dest": "\": \" [8673,8674]"
    },
    {
      "src": "{: { [7421,7422]",
      "dest": "{: { [7421,7422]"
    },
    {
      "src": "identifier: returndata [8985,8995]",
      "dest": "identifier: returndata [8985,8995]"
    },
    {
      "src": "bytes: bytes [5369,5374]",
      "dest": "bytes: bytes [5369,5374]"
    },
    {
      "src": "identifier: initDataContractsOffset [6984,7007]",
      "dest": "identifier: initDataContractsOffset [6984,7007]"
    },
    {
      "src": "number_literal: 32 [7923,7925]",
      "dest": "number_literal: 32 [7923,7925]"
    },
    {
      "src": "variable_declaration [6219,6245]",
      "dest": "variable_declaration [6219,6245]"
    },
    {
      "src": "): ) [7985,7986]",
      "dest": "): ) [7985,7986]"
    },
    {
      "src": "): ) [7548,7549]",
      "dest": "): ) [7548,7549]"
    },
    {
      "src": ".: . [6929,6930]",
      "dest": ".: . [6929,6930]"
    },
    {
      "src": "string: string [8509,8515]",
      "dest": "string: string [8509,8515]"
    },
    {
      "src": "yul_function_call [1581,1615]",
      "dest": "yul_function_call [1581,1615]"
    },
    {
      "src": "call_expression [6623,6675]",
      "dest": "call_expression [6623,6675]"
    },
    {
      "src": ",: , [7959,7960]",
      "dest": ",: , [7959,7960]"
    },
    {
      "src": "yul_variable_declaration [1750,1828]",
      "dest": "yul_variable_declaration [1750,1828]"
    },
    {
      "src": "type_cast_expression [1280,1292]",
      "dest": "type_cast_expression [1280,1292]"
    },
    {
      "src": "): ) [1917,1918]",
      "dest": "): ) [1917,1918]"
    },
    {
      "src": "block_statement [7421,7452]",
      "dest": "block_statement [7421,7452]"
    },
    {
      "src": "(: ( [6585,6586]",
      "dest": "(: ( [6585,6586]"
    },
    {
      "src": "primitive_type [9935,9941]",
      "dest": "primitive_type [9935,9941]"
    },
    {
      "src": "block_statement [7143,7268]",
      "dest": "block_statement [7143,7268]"
    },
    {
      "src": "member_expression [8561,8571]",
      "dest": "member_expression [8561,8571]"
    },
    {
      "src": "yul_block [2014,2073]",
      "dest": "yul_block [2014,2073]"
    },
    {
      "src": "identifier: callExternalInitializer [9487,9510]",
      "dest": "identifier: callExternalInitializer [9487,9510]"
    },
    {
      "src": "binary_expression [6248,6285]",
      "dest": "binary_expression [6248,6285]"
    },
    {
      "src": "identifier: selector [9105,9113]",
      "dest": "identifier: selector [9105,9113]"
    },
    {
      "src": "): ) [1781,1782]",
      "dest": "): ) [1781,1782]"
    },
    {
      "src": "): ) [9907,9908]",
      "dest": "): ) [9907,9908]"
    },
    {
      "src": "variable_declaration [8542,8558]",
      "dest": "variable_declaration [8542,8558]"
    },
    {
      "src": "binary_expression [1258,1292]",
      "dest": "binary_expression [1258,1292]"
    },
    {
      "src": "yul_decimal_number: 0 [1804,1805]",
      "dest": "yul_decimal_number: 0 [1804,1805]"
    },
    {
      "src": "identifier: totalInitSizes [5773,5787]",
      "dest": "identifier: totalInitSizes [5773,5787]"
    },
    {
      "src": "(: ( [7543,7544]",
      "dest": "(: ( [7543,7544]"
    },
    {
      "src": "): ) [8995,8996]",
      "dest": "): ) [8995,8996]"
    },
    {
      "src": "string [727,748]",
      "dest": "string [727,748]"
    },
    {
      "src": "): ) [2137,2138]",
      "dest": "): ) [2137,2138]"
    },
    {
      "src": "(: ( [5962,5963]",
      "dest": "(: ( [5962,5963]"
    },
    {
      "src": "import: import [690,696]",
      "dest": "import: import [690,696]"
    },
    {
      "src": "identifier: msg [1232,1235]",
      "dest": "identifier: msg [1232,1235]"
    },
    {
      "src": "type_cast_expression [9935,9953]",
      "dest": "type_cast_expression [9935,9953]"
    },
    {
      "src": "(: ( [9397,9398]",
      "dest": "(: ( [9397,9398]"
    },
    {
      "src": "number_literal: 32 [6981,6983]",
      "dest": "number_literal: 32 [6981,6983]"
    },
    {
      "src": "}: } [2152,2153]",
      "dest": "}: } [2152,2153]"
    },
    {
      "src": "primitive_type [8542,8549]",
      "dest": "primitive_type [8542,8549]"
    },
    {
      "src": "identifier: require [9918,9925]",
      "dest": "identifier: require [9918,9925]"
    },
    {
      "src": "identifier: length [6078,6084]",
      "dest": "identifier: length [6078,6084]"
    },
    {
      "src": "(: ( [7022,7023]",
      "dest": "(: ( [7022,7023]"
    },
    {
      "src": "{: { [8807,8808]",
      "dest": "{: { [8807,8808]"
    },
    {
      "src": "string [1294,1320]",
      "dest": "string [1294,1320]"
    },
    {
      "src": "yul_decimal_number: 0 [2039,2040]",
      "dest": "yul_decimal_number: 0 [2039,2040]"
    },
    {
      "src": "contract_body [848,10024]",
      "dest": "contract_body [848,10024]"
    },
    {
      "src": "identifier: validateSubContractIndex [6623,6647]",
      "dest": "identifier: validateSubContractIndex [6623,6647]"
    },
    {
      "src": "yul_evm_builtin [1764,1776]",
      "dest": "yul_evm_builtin [1764,1776]"
    },
    {
      "src": "number_literal: 1 [7941,7942]",
      "dest": "number_literal: 1 [7941,7942]"
    },
    {
      "src": "yul_decimal_number: 0 [2119,2120]",
      "dest": "yul_decimal_number: 0 [2119,2120]"
    },
    {
      "src": "\": \" [5643,5644]",
      "dest": "\": \" [5643,5644]"
    },
    {
      "src": "): ) [9570,9571]",
      "dest": "): ) [9570,9571]"
    },
    {
      "src": "primitive_type [5369,5374]",
      "dest": "primitive_type [5369,5374]"
    },
    {
      "src": "(: ( [9971,9972]",
      "dest": "(: ( [9971,9972]"
    },
    {
      "src": "identifier: returndata [9942,9952]",
      "dest": "identifier: returndata [9942,9952]"
    },
    {
      "src": ":: : [6551,6552]",
      "dest": ":: : [6551,6552]"
    },
    {
      "src": "identifier: abi [7890,7893]",
      "dest": "identifier: abi [7890,7893]"
    },
    {
      "src": "yul_function_call [1902,1918]",
      "dest": "yul_function_call [1902,1918]"
    },
    {
      "src": "type_name [8298,8302]",
      "dest": "type_name [8298,8302]"
    },
    {
      "src": ",: , [8582,8583]",
      "dest": ",: , [8582,8583]"
    },
    {
      "src": "address: address [7023,7030]",
      "dest": "address: address [7023,7030]"
    },
    {
      "src": "call_argument [7022,7031]",
      "dest": "call_argument [7022,7031]"
    },
    {
      "src": "expression_statement [7764,7791]",
      "dest": "expression_statement [7764,7791]"
    },
    {
      "src": "(: ( [9859,9860]",
      "dest": "(: ( [9859,9860]"
    },
    {
      "src": "identifier: require [9964,9971]",
      "dest": "identifier: require [9964,9971]"
    },
    {
      "src": "variable_declaration [8298,8310]",
      "dest": "variable_declaration [8298,8310]"
    },
    {
      "src": "expression_statement [9918,9955]",
      "dest": "expression_statement [9918,9955]"
    },
    {
      "src": "pragma_directive [636,660]",
      "dest": "pragma_directive [636,660]"
    },
    {
      "src": "yul_path [1784,1802]",
      "dest": "yul_path [1784,1802]"
    },
    {
      "src": "primitive_type [7978,7985]",
      "dest": "primitive_type [7978,7985]"
    }
  ],
  "actions": []
}