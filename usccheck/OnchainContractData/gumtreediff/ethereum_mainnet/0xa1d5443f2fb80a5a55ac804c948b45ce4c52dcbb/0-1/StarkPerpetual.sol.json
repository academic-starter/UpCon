{
  "matches": [
    {
      "src": "call_argument [2907,2935]",
      "dest": "call_argument [2907,2935]"
    },
    {
      "src": "type_cast_expression [2907,2930]",
      "dest": "type_cast_expression [2907,2930]"
    },
    {
      "src": "if_statement [2393,2622]",
      "dest": "if_statement [2393,2622]"
    },
    {
      "src": "{: { [783,784]",
      "dest": "{: { [783,784]"
    },
    {
      "src": "binary_expression [2397,2407]",
      "dest": "binary_expression [2397,2407]"
    },
    {
      "src": "state_variable_declaration [789,830]",
      "dest": "state_variable_declaration [789,830]"
    },
    {
      "src": "}: } [2060,2061]",
      "dest": "}: } [2060,2061]"
    },
    {
      "src": "\": \" [2460,2461]",
      "dest": "\": \" [2460,2461]"
    },
    {
      "src": "(: ( [2906,2907]",
      "dest": "(: ( [2906,2907]"
    },
    {
      "src": "binary_expression [2966,3002]",
      "dest": "binary_expression [2966,3002]"
    },
    {
      "src": "string_literal [2249,2280]",
      "dest": "string_literal [2249,2280]"
    },
    {
      "src": "): ) [2098,2099]",
      "dest": "): ) [2098,2099]"
    },
    {
      "src": "return_statement [1969,1986]",
      "dest": "return_statement [1969,1986]"
    },
    {
      "src": "(: ( [2217,2218]",
      "dest": "(: ( [2217,2218]"
    },
    {
      "src": "=: = [1033,1034]",
      "dest": "=: = [1033,1034]"
    },
    {
      "src": "override_specifier [1552,1560]",
      "dest": "override_specifier [1552,1560]"
    },
    {
      "src": "call_expression [2958,3015]",
      "dest": "call_expression [2958,3015]"
    },
    {
      "src": "contract: contract [723,731]",
      "dest": "contract: contract [723,731]"
    },
    {
      "src": "): ) [1754,1755]",
      "dest": "): ) [1754,1755]"
    },
    {
      "src": "return: return [1904,1910]",
      "dest": "return: return [1904,1910]"
    },
    {
      "src": "primitive_type [1148,1155]",
      "dest": "primitive_type [1148,1155]"
    },
    {
      "src": ",: , [3002,3003]",
      "dest": ",: , [3002,3003]"
    },
    {
      "src": "override: override [2682,2690]",
      "dest": "override: override [2682,2690]"
    },
    {
      "src": "solidity_version_comparison_operator [651,653]",
      "dest": "solidity_version_comparison_operator [651,653]"
    },
    {
      "src": "{: { [2313,2314]",
      "dest": "{: { [2313,2314]"
    },
    {
      "src": "override_specifier [1770,1778]",
      "dest": "override_specifier [1770,1778]"
    },
    {
      "src": "variable_declaration [2701,2725]",
      "dest": "variable_declaration [2701,2725]"
    },
    {
      "src": "string [669,689]",
      "dest": "string [669,689]"
    },
    {
      "src": "identifier: index [2397,2402]",
      "dest": "identifier: index [2397,2402]"
    },
    {
      "src": "}: } [2621,2622]",
      "dest": "}: } [2621,2622]"
    },
    {
      "src": "\": \" [698,699]",
      "dest": "\": \" [698,699]"
    },
    {
      "src": "override: override [1770,1778]",
      "dest": "override: override [1770,1778]"
    },
    {
      "src": "if_statement [2002,2061]",
      "dest": "if_statement [2002,2061]"
    },
    {
      "src": "state_mutability [1547,1551]",
      "dest": "state_mutability [1547,1551]"
    },
    {
      "src": "type_name [1788,1795]",
      "dest": "type_name [1788,1795]"
    },
    {
      "src": "else: else [1867,1871]",
      "dest": "else: else [1867,1871]"
    },
    {
      "src": "identifier: require [2958,2965]",
      "dest": "identifier: require [2958,2965]"
    },
    {
      "src": "{: { [2691,2692]",
      "dest": "{: { [2691,2692]"
    },
    {
      "src": "block_statement [2409,2472]",
      "dest": "block_statement [2409,2472]"
    },
    {
      "src": ",: , [764,765]",
      "dest": ",: , [764,765]"
    },
    {
      "src": "(: ( [2665,2666]",
      "dest": "(: ( [2665,2666]"
    },
    {
      "src": "import_directive [691,721]",
      "dest": "import_directive [691,721]"
    },
    {
      "src": "): ) [1953,1954]",
      "dest": "): ) [1953,1954]"
    },
    {
      "src": "return: return [1682,1688]",
      "dest": "return: return [1682,1688]"
    },
    {
      "src": "call_expression [2899,2948]",
      "dest": "call_expression [2899,2948]"
    },
    {
      "src": "): ) [2610,2611]",
      "dest": "): ) [2610,2611]"
    },
    {
      "src": "binary_expression [2301,2311]",
      "dest": "binary_expression [2301,2311]"
    },
    {
      "src": "identifier: globalConfigurationHash [2973,2996]",
      "dest": "identifier: globalConfigurationHash [2973,2996]"
    },
    {
      "src": "else: else [1997,2001]",
      "dest": "else: else [1997,2001]"
    },
    {
      "src": "int256: int256 [2966,2972]",
      "dest": "int256: int256 [2966,2972]"
    },
    {
      "src": "identifier: require [3025,3032]",
      "dest": "identifier: require [3025,3032]"
    },
    {
      "src": "string [2077,2098]",
      "dest": "string [2077,2098]"
    },
    {
      "src": "if: if [2297,2299]",
      "dest": "if: if [2297,2299]"
    },
    {
      "src": "number_literal: 0x10003203010020002002200030330000100020300002001003030000100202 [1177,1241]",
      "dest": "number_literal: 0x10003203010020002002200030330000100020300002001003030000100202 [1177,1241]"
    },
    {
      "src": "==: == [2931,2933]",
      "dest": "==: == [2931,2933]"
    },
    {
      "src": "identifier: index [2301,2306]",
      "dest": "identifier: index [2301,2306]"
    },
    {
      "src": "if: if [2214,2216]",
      "dest": "if: if [2214,2216]"
    },
    {
      "src": "uint256: uint256 [1348,1355]",
      "dest": "uint256: uint256 [1348,1355]"
    },
    {
      "src": "visibility [796,802]",
      "dest": "visibility [796,802]"
    },
    {
      "src": "override_specifier [1645,1653]",
      "dest": "override_specifier [1645,1653]"
    },
    {
      "src": "uint256: uint256 [1663,1670]",
      "dest": "uint256: uint256 [1663,1670]"
    },
    {
      "src": "identifier: systemAssetType [3033,3048]",
      "dest": "identifier: systemAssetType [3033,3048]"
    },
    {
      "src": "identifier: index [2218,2223]",
      "dest": "identifier: index [2218,2223]"
    },
    {
      "src": "returns: returns [1654,1661]",
      "dest": "returns: returns [1654,1661]"
    },
    {
      "src": "function: function [1712,1720]",
      "dest": "function: function [1712,1720]"
    },
    {
      "src": "): ) [1536,1537]",
      "dest": "): ) [1536,1537]"
    },
    {
      "src": "uint256: uint256 [1739,1746]",
      "dest": "uint256: uint256 [1739,1746]"
    },
    {
      "src": "expression_statement [2327,2377]",
      "dest": "expression_statement [2327,2377]"
    },
    {
      "src": "identifier: IDX_MAP_2 [1976,1985]",
      "dest": "identifier: IDX_MAP_2 [1976,1985]"
    },
    {
      "src": "(: ( [2965,2966]",
      "dest": "(: ( [2965,2966]"
    },
    {
      "src": "pure: pure [1547,1551]",
      "dest": "pure: pure [1547,1551]"
    },
    {
      "src": "primitive_type [1663,1670]",
      "dest": "primitive_type [1663,1670]"
    },
    {
      "src": "number_literal: 1 [2227,2228]",
      "dest": "number_literal: 1 [2227,2228]"
    },
    {
      "src": "==: == [1819,1821]",
      "dest": "==: == [1819,1821]"
    },
    {
      "src": "}: } [1930,1931]",
      "dest": "}: } [1930,1931]"
    },
    {
      "src": "parameter [1570,1577]",
      "dest": "parameter [1570,1577]"
    },
    {
      "src": "uint256: uint256 [1247,1254]",
      "dest": "uint256: uint256 [1247,1254]"
    },
    {
      "src": "block_statement [2494,2565]",
      "dest": "block_statement [2494,2565]"
    },
    {
      "src": "primitive_type [789,795]",
      "dest": "primitive_type [789,795]"
    },
    {
      "src": "call_expression [3025,3066]",
      "dest": "call_expression [3025,3066]"
    },
    {
      "src": "number_literal: 1 [1887,1888]",
      "dest": "number_literal: 1 [1887,1888]"
    },
    {
      "src": "string: string [789,795]",
      "dest": "string: string [789,795]"
    },
    {
      "src": "\": \" [2332,2333]",
      "dest": "\": \" [2332,2333]"
    },
    {
      "src": "number_literal: 349548 [1035,1041]",
      "dest": "number_literal: 349548 [1035,1041]"
    },
    {
      "src": "string_literal [2592,2610]",
      "dest": "string_literal [2592,2610]"
    },
    {
      "src": "type_name [1047,1054]",
      "dest": "type_name [1047,1054]"
    },
    {
      "src": "return: return [1839,1845]",
      "dest": "return: return [1839,1845]"
    },
    {
      "src": "string_literal [2513,2554]",
      "dest": "string_literal [2513,2554]"
    },
    {
      "src": "if_statement [2297,2622]",
      "dest": "if_statement [2297,2622]"
    },
    {
      "src": "internal: internal [1631,1639]",
      "dest": "internal: internal [1631,1639]"
    },
    {
      "src": "string [2513,2554]",
      "dest": "string [2513,2554]"
    },
    {
      "src": "\": \" [669,670]",
      "dest": "\": \" [669,670]"
    },
    {
      "src": "state_variable_declaration [1348,1444]",
      "dest": "state_variable_declaration [1348,1444]"
    },
    {
      "src": "type_name [2139,2146]",
      "dest": "type_name [2139,2146]"
    },
    {
      "src": "pure: pure [1640,1644]",
      "dest": "pure: pure [1640,1644]"
    },
    {
      "src": "string [2332,2376]",
      "dest": "string [2332,2376]"
    },
    {
      "src": "inheritance_specifier [766,782]",
      "dest": "inheritance_specifier [766,782]"
    },
    {
      "src": "): ) [2407,2408]",
      "dest": "): ) [2407,2408]"
    },
    {
      "src": "internal: internal [2668,2676]",
      "dest": "internal: internal [2668,2676]"
    },
    {
      "src": "constant: constant [1013,1021]",
      "dest": "constant: constant [1013,1021]"
    },
    {
      "src": "=: = [2511,2512]",
      "dest": "=: = [2511,2512]"
    },
    {
      "src": "pure: pure [2163,2167]",
      "dest": "pure: pure [2163,2167]"
    },
    {
      "src": "type_name [2701,2707]",
      "dest": "type_name [2701,2707]"
    },
    {
      "src": "int256: int256 [2907,2913]",
      "dest": "int256: int256 [2907,2913]"
    },
    {
      "src": "): ) [1629,1630]",
      "dest": "): ) [1629,1630]"
    },
    {
      "src": "override: override [1552,1560]",
      "dest": "override: override [1552,1560]"
    },
    {
      "src": "function_body [1579,1604]",
      "dest": "function_body [1579,1604]"
    },
    {
      "src": "function: function [1610,1618]",
      "dest": "function: function [1610,1618]"
    },
    {
      "src": "(: ( [2591,2592]",
      "dest": "(: ( [2591,2592]"
    },
    {
      "src": "{: { [1672,1673]",
      "dest": "{: { [1672,1673]"
    },
    {
      "src": "primitive_type [1739,1746]",
      "dest": "primitive_type [1739,1746]"
    },
    {
      "src": "\": \" [2728,2729]",
      "dest": "\": \" [2728,2729]"
    },
    {
      "src": "identifier: IDX_MAP_1 [1911,1920]",
      "dest": "identifier: IDX_MAP_1 [1911,1920]"
    },
    {
      "src": "\": \" [2553,2554]",
      "dest": "\": \" [2553,2554]"
    },
    {
      "src": "import: import [662,668]",
      "dest": "import: import [662,668]"
    },
    {
      "src": "visibility [1631,1639]",
      "dest": "visibility [1631,1639]"
    },
    {
      "src": "(: ( [1738,1739]",
      "dest": "(: ( [1738,1739]"
    },
    {
      "src": "return_statement [1839,1856]",
      "dest": "return_statement [1839,1856]"
    },
    {
      "src": "function_body [2204,2628]",
      "dest": "function_body [2204,2628]"
    },
    {
      "src": "uint256: uint256 [1047,1054]",
      "dest": "uint256: uint256 [1047,1054]"
    },
    {
      "src": "): ) [2311,2312]",
      "dest": "): ) [2311,2312]"
    },
    {
      "src": "call_argument [2966,3002]",
      "dest": "call_argument [2966,3002]"
    },
    {
      "src": "{: { [2204,2205]",
      "dest": "{: { [2204,2205]"
    },
    {
      "src": "string_literal [2728,2752]",
      "dest": "string_literal [2728,2752]"
    },
    {
      "src": "state_variable_declaration [1247,1343]",
      "dest": "state_variable_declaration [1247,1343]"
    },
    {
      "src": "type_name [1663,1670]",
      "dest": "type_name [1663,1670]"
    },
    {
      "src": "}: } [3072,3073]",
      "dest": "}: } [3072,3073]"
    },
    {
      "src": "=: = [1274,1275]",
      "dest": "=: = [1274,1275]"
    },
    {
      "src": "identifier: IDX_MAP_1 [1165,1174]",
      "dest": "identifier: IDX_MAP_1 [1165,1174]"
    },
    {
      "src": "uint256: uint256 [1788,1795]",
      "dest": "uint256: uint256 [1788,1795]"
    },
    {
      "src": "call_argument [3055,3065]",
      "dest": "call_argument [3055,3065]"
    },
    {
      "src": "view: view [2677,2681]",
      "dest": "view: view [2677,2681]"
    },
    {
      "src": "revert_statement [2070,2100]",
      "dest": "revert_statement [2070,2100]"
    },
    {
      "src": "): ) [2996,2997]",
      "dest": "): ) [2996,2997]"
    },
    {
      "src": "block_statement [1890,1931]",
      "dest": "block_statement [1890,1931]"
    },
    {
      "src": "==: == [2403,2405]",
      "dest": "==: == [2403,2405]"
    },
    {
      "src": "else: else [1932,1936]",
      "dest": "else: else [1932,1936]"
    },
    {
      "src": "==: == [1949,1951]",
      "dest": "==: == [1949,1951]"
    },
    {
      "src": "}: } [2105,2106]",
      "dest": "}: } [2105,2106]"
    },
    {
      "src": "visibility [1538,1546]",
      "dest": "visibility [1538,1546]"
    },
    {
      "src": "parenthesized_expression [2076,2099]",
      "dest": "parenthesized_expression [2076,2099]"
    },
    {
      "src": "primitive_type [1348,1355]",
      "dest": "primitive_type [1348,1355]"
    },
    {
      "src": "visibility [2154,2162]",
      "dest": "visibility [2154,2162]"
    },
    {
      "src": "function: function [1508,1516]",
      "dest": "function: function [1508,1516]"
    },
    {
      "src": "==: == [3049,3051]",
      "dest": "==: == [3049,3051]"
    },
    {
      "src": "==: == [2488,2490]",
      "dest": "==: == [2488,2490]"
    },
    {
      "src": "}: } [1603,1604]",
      "dest": "}: } [1603,1604]"
    },
    {
      "src": "identifier: section [1876,1883]",
      "dest": "identifier: section [1876,1883]"
    },
    {
      "src": "(: ( [2913,2914]",
      "dest": "(: ( [2913,2914]"
    },
    {
      "src": "uint256: uint256 [1005,1012]",
      "dest": "uint256: uint256 [1005,1012]"
    },
    {
      "src": "block_statement [2313,2387]",
      "dest": "block_statement [2313,2387]"
    },
    {
      "src": "(: ( [3032,3033]",
      "dest": "(: ( [3032,3033]"
    },
    {
      "src": "): ) [2018,2019]",
      "dest": "): ) [2018,2019]"
    },
    {
      "src": "=: = [2426,2427]",
      "dest": "=: = [2426,2427]"
    },
    {
      "src": "number_literal: 0 [2934,2935]",
      "dest": "number_literal: 0 [2934,2935]"
    },
    {
      "src": "state_mutability [1640,1644]",
      "dest": "state_mutability [1640,1644]"
    },
    {
      "src": "if: if [2393,2395]",
      "dest": "if: if [2393,2395]"
    },
    {
      "src": "block_statement [2230,2291]",
      "dest": "block_statement [2230,2291]"
    },
    {
      "src": "identifier: id [2327,2329]",
      "dest": "identifier: id [2327,2329]"
    },
    {
      "src": "string_literal [2077,2098]",
      "dest": "string_literal [2077,2098]"
    },
    {
      "src": "return_statement [1682,1700]",
      "dest": "return_statement [1682,1700]"
    },
    {
      "src": "(: ( [1810,1811]",
      "dest": "(: ( [1810,1811]"
    },
    {
      "src": "constant: constant [803,811]",
      "dest": "constant: constant [803,811]"
    },
    {
      "src": "number_literal: 2 [2310,2311]",
      "dest": "number_literal: 2 [2310,2311]"
    },
    {
      "src": "is: is [747,749]",
      "dest": "is: is [747,749]"
    },
    {
      "src": "comment: // ---------- End of auto-generated code. ---------- [1450,1502]",
      "dest": "comment: // ---------- End of auto-generated code. ---------- [1450,1502]"
    },
    {
      "src": "else: else [2566,2570]",
      "dest": "else: else [2566,2570]"
    },
    {
      "src": "parameter [1663,1670]",
      "dest": "parameter [1663,1670]"
    },
    {
      "src": "block_statement [2571,2622]",
      "dest": "block_statement [2571,2622]"
    },
    {
      "src": "state_mutability [2163,2167]",
      "dest": "state_mutability [2163,2167]"
    },
    {
      "src": "{: { [1797,1798]",
      "dest": "{: { [1797,1798]"
    },
    {
      "src": "number_literal: 3 [2017,2018]",
      "dest": "number_literal: 3 [2017,2018]"
    },
    {
      "src": "function_body [1672,1706]",
      "dest": "function_body [1672,1706]"
    },
    {
      "src": "{: { [2571,2572]",
      "dest": "{: { [2571,2572]"
    },
    {
      "src": "solidity_pragma_token [643,659]",
      "dest": "solidity_pragma_token [643,659]"
    },
    {
      "src": "returns: returns [2177,2184]",
      "dest": "returns: returns [2177,2184]"
    },
    {
      "src": "else: else [2292,2296]",
      "dest": "else: else [2292,2296]"
    },
    {
      "src": "): ) [1823,1824]",
      "dest": "): ) [1823,1824]"
    },
    {
      "src": "(: ( [2481,2482]",
      "dest": "(: ( [2481,2482]"
    },
    {
      "src": "uint256: uint256 [1570,1577]",
      "dest": "uint256: uint256 [1570,1577]"
    },
    {
      "src": "return_type_definition [2177,2203]",
      "dest": "return_type_definition [2177,2203]"
    },
    {
      "src": "identifier: PerpetualStorage [766,782]",
      "dest": "identifier: PerpetualStorage [766,782]"
    },
    {
      "src": "type_name [1739,1746]",
      "dest": "type_name [1739,1746]"
    },
    {
      "src": "identifier: handlerMapSection [1721,1738]",
      "dest": "identifier: handlerMapSection [1721,1738]"
    },
    {
      "src": "call_argument [3004,3014]",
      "dest": "call_argument [3004,3014]"
    },
    {
      "src": "identifier: section [1747,1754]",
      "dest": "identifier: section [1747,1754]"
    },
    {
      "src": "identifier: section [2006,2013]",
      "dest": "identifier: section [2006,2013]"
    },
    {
      "src": "if_statement [1937,2061]",
      "dest": "if_statement [1937,2061]"
    },
    {
      "src": "identifier: IDX_MAP_3 [2041,2050]",
      "dest": "identifier: IDX_MAP_3 [2041,2050]"
    },
    {
      "src": "user_defined_type [750,764]",
      "dest": "user_defined_type [750,764]"
    },
    {
      "src": "(: ( [2005,2006]",
      "dest": "(: ( [2005,2006]"
    },
    {
      "src": "): ) [2929,2930]",
      "dest": "): ) [2929,2930]"
    },
    {
      "src": "binary_expression [3033,3053]",
      "dest": "binary_expression [3033,3053]"
    },
    {
      "src": "parameter [2186,2202]",
      "dest": "parameter [2186,2202]"
    },
    {
      "src": "if: if [1872,1874]",
      "dest": "if: if [1872,1874]"
    },
    {
      "src": "type_name [789,795]",
      "dest": "type_name [789,795]"
    },
    {
      "src": "(: ( [1569,1570]",
      "dest": "(: ( [1569,1570]"
    },
    {
      "src": "==: == [2224,2226]",
      "dest": "==: == [2224,2226]"
    },
    {
      "src": "assignment_expression [2244,2280]",
      "dest": "assignment_expression [2244,2280]"
    },
    {
      "src": "identifier: section [1811,1818]",
      "dest": "identifier: section [1811,1818]"
    },
    {
      "src": "if_statement [1807,2061]",
      "dest": "if_statement [1807,2061]"
    },
    {
      "src": "override: override [1645,1653]",
      "dest": "override: override [1645,1653]"
    },
    {
      "src": "): ) [2228,2229]",
      "dest": "): ) [2228,2229]"
    },
    {
      "src": "function_body [1797,2106]",
      "dest": "function_body [1797,2106]"
    },
    {
      "src": "state_variable_declaration [1047,1143]",
      "dest": "state_variable_declaration [1047,1143]"
    },
    {
      "src": "identifier: id [2244,2246]",
      "dest": "identifier: id [2244,2246]"
    },
    {
      "src": "\": \" [2609,2610]",
      "dest": "\": \" [2609,2610]"
    },
    {
      "src": "function_definition [1508,1604]",
      "dest": "function_definition [1508,1604]"
    },
    {
      "src": "binary_expression [1811,1823]",
      "dest": "binary_expression [1811,1823]"
    },
    {
      "src": "return_statement [2034,2051]",
      "dest": "return_statement [2034,2051]"
    },
    {
      "src": "function_definition [2112,2628]",
      "dest": "function_definition [2112,2628]"
    },
    {
      "src": "string_literal [2332,2376]",
      "dest": "string_literal [2332,2376]"
    },
    {
      "src": "function_definition [1712,2106]",
      "dest": "function_definition [1712,2106]"
    },
    {
      "src": "type_name [1348,1355]",
      "dest": "type_name [1348,1355]"
    },
    {
      "src": "primitive_type [2186,2192]",
      "dest": "primitive_type [2186,2192]"
    },
    {
      "src": "solidity_version: 0.6.12 [653,659]",
      "dest": "solidity_version: 0.6.12 [653,659]"
    },
    {
      "src": "}: } [2290,2291]",
      "dest": "}: } [2290,2291]"
    },
    {
      "src": "number_literal: 4 [1596,1597]",
      "dest": "number_literal: 4 [1596,1597]"
    },
    {
      "src": "identifier: require [2899,2906]",
      "dest": "identifier: require [2899,2906]"
    },
    {
      "src": "if: if [1937,1939]",
      "dest": "if: if [1937,1939]"
    },
    {
      "src": "block_statement [2020,2061]",
      "dest": "block_statement [2020,2061]"
    },
    {
      "src": "\": \" [2097,2098]",
      "dest": "\": \" [2097,2098]"
    },
    {
      "src": ",: , [3053,3054]",
      "dest": ",: , [3053,3054]"
    },
    {
      "src": "\": \" [828,829]",
      "dest": "\": \" [828,829]"
    },
    {
      "src": "state_variable_declaration [1148,1242]",
      "dest": "state_variable_declaration [1148,1242]"
    },
    {
      "src": "comment: /*   Copyright 2019-2022 StarkWare Industries Ltd.    Licensed under the Apache License, Version 2.0 (the \"License\").   You may not use this file except in compliance with the License.   You may obtain a copy of the License at    https://www.starkware.co/open-source-license/    Unless required by applicable law or agreed to in writing,   software distributed under the License is distributed on an \"AS IS\" BASIS,   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   See the License for the specific language governing permissions   and limitations under the License. */ [0,595]",
      "dest": "comment: /*   Copyright 2019-2022 StarkWare Industries Ltd.    Licensed under the Apache License, Version 2.0 (the \"License\").   You may not use this file except in compliance with the License.   You may obtain a copy of the License at    https://www.starkware.co/open-source-license/    Unless required by applicable law or agreed to in writing,   software distributed under the License is distributed on an \"AS IS\" BASIS,   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   See the License for the specific language governing permissions   and limitations under the License. */ [0,595]"
    },
    {
      "src": "pragma: pragma [636,642]",
      "dest": "pragma: pragma [636,642]"
    },
    {
      "src": "\": \" [2513,2514]",
      "dest": "\": \" [2513,2514]"
    },
    {
      "src": "(: ( [1787,1788]",
      "dest": "(: ( [1787,1788]"
    },
    {
      "src": "==: == [2307,2309]",
      "dest": "==: == [2307,2309]"
    },
    {
      "src": "\": \" [2077,2078]",
      "dest": "\": \" [2077,2078]"
    },
    {
      "src": "==: == [2998,3000]",
      "dest": "==: == [2998,3000]"
    },
    {
      "src": "binary_expression [2006,2018]",
      "dest": "binary_expression [2006,2018]"
    },
    {
      "src": "string: string [2701,2707]",
      "dest": "string: string [2701,2707]"
    },
    {
      "src": "string: string [2186,2192]",
      "dest": "string: string [2186,2192]"
    },
    {
      "src": "identifier: section [1941,1948]",
      "dest": "identifier: section [1941,1948]"
    },
    {
      "src": "string [2428,2461]",
      "dest": "string [2428,2461]"
    },
    {
      "src": "): ) [2666,2667]",
      "dest": "): ) [2666,2667]"
    },
    {
      "src": "expression_statement [2423,2462]",
      "dest": "expression_statement [2423,2462]"
    },
    {
      "src": "identifier: id [2423,2425]",
      "dest": "identifier: id [2423,2425]"
    },
    {
      "src": "==: == [1884,1886]",
      "dest": "==: == [1884,1886]"
    },
    {
      "src": "expression_statement [2508,2555]",
      "dest": "expression_statement [2508,2555]"
    },
    {
      "src": "string [698,720]",
      "dest": "string [698,720]"
    },
    {
      "src": "type_name [1005,1012]",
      "dest": "type_name [1005,1012]"
    },
    {
      "src": "(: ( [2185,2186]",
      "dest": "(: ( [2185,2186]"
    },
    {
      "src": "identifier: getNumSubcontracts [1517,1535]",
      "dest": "identifier: getNumSubcontracts [1517,1535]"
    },
    {
      "src": "primitive_type [1788,1795]",
      "dest": "primitive_type [1788,1795]"
    },
    {
      "src": "): ) [2202,2203]",
      "dest": "): ) [2202,2203]"
    },
    {
      "src": "number_literal: 0x1103103010020000102000000400320031030100023000004000300000000000 [1377,1443]",
      "dest": "number_literal: 0x1103103010020000102000000400320031030100023000004000300000000000 [1377,1443]"
    },
    {
      "src": "if_statement [2214,2622]",
      "dest": "if_statement [2214,2622]"
    },
    {
      "src": "identifier: expectedIdByIndex [2121,2138]",
      "dest": "identifier: expectedIdByIndex [2121,2138]"
    },
    {
      "src": "=: = [1175,1176]",
      "dest": "=: = [1175,1176]"
    },
    {
      "src": "{: { [2409,2410]",
      "dest": "{: { [2409,2410]"
    },
    {
      "src": "primitive_type [2701,2707]",
      "dest": "primitive_type [2701,2707]"
    },
    {
      "src": "}: } [1865,1866]",
      "dest": "}: } [1865,1866]"
    },
    {
      "src": "expression_statement [2899,2949]",
      "dest": "expression_statement [2899,2949]"
    },
    {
      "src": "type_name [2186,2192]",
      "dest": "type_name [2186,2192]"
    },
    {
      "src": "memory: memory [2193,2199]",
      "dest": "memory: memory [2193,2199]"
    },
    {
      "src": "state_variable_declaration [1005,1042]",
      "dest": "state_variable_declaration [1005,1042]"
    },
    {
      "src": "else: else [2473,2477]",
      "dest": "else: else [2473,2477]"
    },
    {
      "src": "}: } [3074,3075]",
      "dest": "}: } [3074,3075]"
    },
    {
      "src": "(: ( [1535,1536]",
      "dest": "(: ( [1535,1536]"
    },
    {
      "src": "{: { [1955,1956]",
      "dest": "{: { [1955,1956]"
    },
    {
      "src": "}: } [1995,1996]",
      "dest": "}: } [1995,1996]"
    },
    {
      "src": "expression_statement [3025,3067]",
      "dest": "expression_statement [3025,3067]"
    },
    {
      "src": "return: return [1969,1975]",
      "dest": "return: return [1969,1975]"
    },
    {
      "src": "number_literal: 3 [2406,2407]",
      "dest": "number_literal: 3 [2406,2407]"
    },
    {
      "src": "if_statement [2478,2622]",
      "dest": "if_statement [2478,2622]"
    },
    {
      "src": "return_statement [1589,1598]",
      "dest": "return_statement [1589,1598]"
    },
    {
      "src": "): ) [3065,3066]",
      "dest": "): ) [3065,3066]"
    },
    {
      "src": "constant: constant [1055,1063]",
      "dest": "constant: constant [1055,1063]"
    },
    {
      "src": "type_name [1148,1155]",
      "dest": "type_name [1148,1155]"
    },
    {
      "src": "import_directive [662,690]",
      "dest": "import_directive [662,690]"
    },
    {
      "src": "override_specifier [2682,2690]",
      "dest": "override_specifier [2682,2690]"
    },
    {
      "src": "contract_body [783,3075]",
      "dest": "contract_body [783,3075]"
    },
    {
      "src": "uint256: uint256 [1148,1155]",
      "dest": "uint256: uint256 [1148,1155]"
    },
    {
      "src": "{: { [1825,1826]",
      "dest": "{: { [1825,1826]"
    },
    {
      "src": "identifier: sharedStateHash [2914,2929]",
      "dest": "identifier: sharedStateHash [2914,2929]"
    },
    {
      "src": "identifier: REVERT_MSG [2715,2725]",
      "dest": "identifier: REVERT_MSG [2715,2725]"
    },
    {
      "src": "assignment_expression [2327,2376]",
      "dest": "assignment_expression [2327,2376]"
    },
    {
      "src": "\": \" [2751,2752]",
      "dest": "\": \" [2751,2752]"
    },
    {
      "src": "call_argument [2973,2996]",
      "dest": "call_argument [2973,2996]"
    },
    {
      "src": "source_file [0,3076]",
      "dest": "source_file [0,3076]"
    },
    {
      "src": "}: } [2627,2628]",
      "dest": "}: } [2627,2628]"
    },
    {
      "src": "returns: returns [1561,1568]",
      "dest": "returns: returns [1561,1568]"
    },
    {
      "src": "identifier: IDX_MAP_2 [1264,1273]",
      "dest": "identifier: IDX_MAP_2 [1264,1273]"
    },
    {
      "src": "call_argument [2937,2947]",
      "dest": "call_argument [2937,2947]"
    },
    {
      "src": "\": \" [2375,2376]",
      "dest": "\": \" [2375,2376]"
    },
    {
      "src": "^:  ^ [651,653]",
      "dest": "^:  ^ [651,653]"
    },
    {
      "src": "==: == [2014,2016]",
      "dest": "==: == [2014,2016]"
    },
    {
      "src": "uint256: uint256 [2139,2146]",
      "dest": "uint256: uint256 [2139,2146]"
    },
    {
      "src": "function: function [2634,2642]",
      "dest": "function: function [2634,2642]"
    },
    {
      "src": "primitive_type [2907,2913]",
      "dest": "primitive_type [2907,2913]"
    },
    {
      "src": "primitive_type [1047,1054]",
      "dest": "primitive_type [1047,1054]"
    },
    {
      "src": "{: { [2230,2231]",
      "dest": "{: { [2230,2231]"
    },
    {
      "src": "binary_expression [2482,2492]",
      "dest": "binary_expression [2482,2492]"
    },
    {
      "src": "revert: revert [2585,2591]",
      "dest": "revert: revert [2585,2591]"
    },
    {
      "src": "=: = [1074,1075]",
      "dest": "=: = [1074,1075]"
    },
    {
      "src": "identifier: IDX_MAP_0 [1846,1855]",
      "dest": "identifier: IDX_MAP_0 [1846,1855]"
    },
    {
      "src": "identifier: REVERT_MSG [3004,3014]",
      "dest": "identifier: REVERT_MSG [3004,3014]"
    },
    {
      "src": "identifier: VERSION [812,819]",
      "dest": "identifier: VERSION [812,819]"
    },
    {
      "src": "identifier: magicSalt [1619,1628]",
      "dest": "identifier: magicSalt [1619,1628]"
    },
    {
      "src": "\": \" [2249,2250]",
      "dest": "\": \" [2249,2250]"
    },
    {
      "src": "\": \" [2592,2593]",
      "dest": "\": \" [2592,2593]"
    },
    {
      "src": "state_mutability [1765,1769]",
      "dest": "state_mutability [1765,1769]"
    },
    {
      "src": "override: override [2168,2176]",
      "dest": "override: override [2168,2176]"
    },
    {
      "src": "function_definition [1610,1706]",
      "dest": "function_definition [1610,1706]"
    },
    {
      "src": "}: } [1705,1706]",
      "dest": "}: } [1705,1706]"
    },
    {
      "src": "override_specifier [2168,2176]",
      "dest": "override_specifier [2168,2176]"
    },
    {
      "src": "=: = [2330,2331]",
      "dest": "=: = [2330,2331]"
    },
    {
      "src": "return_type_definition [1779,1796]",
      "dest": "return_type_definition [1779,1796]"
    },
    {
      "src": "expression_statement [2244,2281]",
      "dest": "expression_statement [2244,2281]"
    },
    {
      "src": "identifier: MainDispatcher [750,764]",
      "dest": "identifier: MainDispatcher [750,764]"
    },
    {
      "src": "primitive_type [2139,2146]",
      "dest": "primitive_type [2139,2146]"
    },
    {
      "src": "\": \" [719,720]",
      "dest": "\": \" [719,720]"
    },
    {
      "src": "string [2728,2752]",
      "dest": "string [2728,2752]"
    },
    {
      "src": "return_type_definition [1561,1578]",
      "dest": "return_type_definition [1561,1578]"
    },
    {
      "src": "(: ( [1875,1876]",
      "dest": "(: ( [1875,1876]"
    },
    {
      "src": "number_literal: 0 [1822,1823]",
      "dest": "number_literal: 0 [1822,1823]"
    },
    {
      "src": "return: return [2034,2040]",
      "dest": "return: return [2034,2040]"
    },
    {
      "src": "user_defined_type [766,782]",
      "dest": "user_defined_type [766,782]"
    },
    {
      "src": "function: function [2112,2120]",
      "dest": "function: function [2112,2120]"
    },
    {
      "src": "block_statement [1825,1866]",
      "dest": "block_statement [1825,1866]"
    },
    {
      "src": ",: , [2935,2936]",
      "dest": ",: , [2935,2936]"
    },
    {
      "src": "identifier: index [2482,2487]",
      "dest": "identifier: index [2482,2487]"
    },
    {
      "src": "identifier: REVERT_MSG [3055,3065]",
      "dest": "identifier: REVERT_MSG [3055,3065]"
    },
    {
      "src": "if: if [2002,2004]",
      "dest": "if: if [2002,2004]"
    },
    {
      "src": "=: = [2726,2727]",
      "dest": "=: = [2726,2727]"
    },
    {
      "src": "memory: memory [2708,2714]",
      "dest": "memory: memory [2708,2714]"
    },
    {
      "src": "public: public [796,802]",
      "dest": "public: public [796,802]"
    },
    {
      "src": "internal: internal [2154,2162]",
      "dest": "internal: internal [2154,2162]"
    },
    {
      "src": "assignment_expression [2508,2554]",
      "dest": "assignment_expression [2508,2554]"
    },
    {
      "src": "number_literal: 2 [1952,1953]",
      "dest": "number_literal: 2 [1952,1953]"
    },
    {
      "src": "revert_statement [2585,2612]",
      "dest": "revert_statement [2585,2612]"
    },
    {
      "src": "(: ( [2396,2397]",
      "dest": "(: ( [2396,2397]"
    },
    {
      "src": "=: = [820,821]",
      "dest": "=: = [820,821]"
    },
    {
      "src": "function_body [2691,3073]",
      "dest": "function_body [2691,3073]"
    },
    {
      "src": "primitive_type [1247,1254]",
      "dest": "primitive_type [1247,1254]"
    },
    {
      "src": "): ) [3014,3015]",
      "dest": "): ) [3014,3015]"
    },
    {
      "src": "\": \" [2428,2429]",
      "dest": "\": \" [2428,2429]"
    },
    {
      "src": "number_literal: 0 [3052,3053]",
      "dest": "number_literal: 0 [3052,3053]"
    },
    {
      "src": "{: { [1890,1891]",
      "dest": "{: { [1890,1891]"
    },
    {
      "src": "comment: // SPDX-License-Identifier: Apache-2.0. [596,635]",
      "dest": "comment: // SPDX-License-Identifier: Apache-2.0. [596,635]"
    },
    {
      "src": "binary_expression [2907,2935]",
      "dest": "binary_expression [2907,2935]"
    },
    {
      "src": "contract_declaration [723,3075]",
      "dest": "contract_declaration [723,3075]"
    },
    {
      "src": "primitive_type [1570,1577]",
      "dest": "primitive_type [1570,1577]"
    },
    {
      "src": "string [2592,2610]",
      "dest": "string [2592,2610]"
    },
    {
      "src": "if: if [2478,2480]",
      "dest": "if: if [2478,2480]"
    },
    {
      "src": "{: { [2494,2495]",
      "dest": "{: { [2494,2495]"
    },
    {
      "src": "if_statement [1872,2061]",
      "dest": "if_statement [1872,2061]"
    },
    {
      "src": "): ) [2492,2493]",
      "dest": "): ) [2492,2493]"
    },
    {
      "src": "state_mutability [2677,2681]",
      "dest": "state_mutability [2677,2681]"
    },
    {
      "src": "comment: // ---------- The following code was auto-generated. PLEASE DO NOT EDIT. ---------- [917,1000]",
      "dest": "comment: // ---------- The following code was auto-generated. PLEASE DO NOT EDIT. ---------- [917,1000]"
    },
    {
      "src": "visibility [2668,2676]",
      "dest": "visibility [2668,2676]"
    },
    {
      "src": "primitive_type [1005,1012]",
      "dest": "primitive_type [1005,1012]"
    },
    {
      "src": "internal: internal [1756,1764]",
      "dest": "internal: internal [1756,1764]"
    },
    {
      "src": "\": \" [688,689]",
      "dest": "\": \" [688,689]"
    },
    {
      "src": "else: else [2388,2392]",
      "dest": "else: else [2388,2392]"
    },
    {
      "src": "\": \" [822,823]",
      "dest": "\": \" [822,823]"
    },
    {
      "src": "binary_expression [2218,2228]",
      "dest": "binary_expression [2218,2228]"
    },
    {
      "src": "identifier: IDX_MAP_3 [1365,1374]",
      "dest": "identifier: IDX_MAP_3 [1365,1374]"
    },
    {
      "src": "solidity: solidity [643,651]",
      "dest": "solidity: solidity [643,651]"
    },
    {
      "src": "return_type_definition [1654,1671]",
      "dest": "return_type_definition [1654,1671]"
    },
    {
      "src": "binary_expression [1941,1953]",
      "dest": "binary_expression [1941,1953]"
    },
    {
      "src": "comment: // Salt for a 8 bit unique spread of all relevant selectors. Pre-caclulated. [836,912]",
      "dest": "comment: // Salt for a 8 bit unique spread of all relevant selectors. Pre-caclulated. [836,912]"
    },
    {
      "src": "identifier: MAGIC_SALT [1689,1699]",
      "dest": "identifier: MAGIC_SALT [1689,1699]"
    },
    {
      "src": "constant: constant [1255,1263]",
      "dest": "constant: constant [1255,1263]"
    },
    {
      "src": "parenthesized_expression [2591,2611]",
      "dest": "parenthesized_expression [2591,2611]"
    },
    {
      "src": "string [822,829]",
      "dest": "string [822,829]"
    },
    {
      "src": "identifier: index [2147,2152]",
      "dest": "identifier: index [2147,2152]"
    },
    {
      "src": "call_argument [3033,3053]",
      "dest": "call_argument [3033,3053]"
    },
    {
      "src": "parameter [2139,2152]",
      "dest": "parameter [2139,2152]"
    },
    {
      "src": "comment: // I.e. it can run only when the state is still empty. [2836,2890]",
      "dest": "comment: // I.e. it can run only when the state is still empty. [2836,2890]"
    },
    {
      "src": "constant: constant [1156,1164]",
      "dest": "constant: constant [1156,1164]"
    },
    {
      "src": "pure: pure [1765,1769]",
      "dest": "pure: pure [1765,1769]"
    },
    {
      "src": "number_literal: 4 [2491,2492]",
      "dest": "number_literal: 4 [2491,2492]"
    },
    {
      "src": "variable_declaration_statement [2701,2753]",
      "dest": "variable_declaration_statement [2701,2753]"
    },
    {
      "src": "(: ( [1662,1663]",
      "dest": "(: ( [1662,1663]"
    },
    {
      "src": "type_cast_expression [2966,2997]",
      "dest": "type_cast_expression [2966,2997]"
    },
    {
      "src": "type_name [1247,1254]",
      "dest": "type_name [1247,1254]"
    },
    {
      "src": "{: { [1579,1580]",
      "dest": "{: { [1579,1580]"
    },
    {
      "src": "return_statement [1904,1921]",
      "dest": "return_statement [1904,1921]"
    },
    {
      "src": "parameter [1739,1754]",
      "dest": "parameter [1739,1754]"
    },
    {
      "src": "): ) [1577,1578]",
      "dest": "): ) [1577,1578]"
    },
    {
      "src": "): ) [1888,1889]",
      "dest": "): ) [1888,1889]"
    },
    {
      "src": "expression_statement [2958,3016]",
      "dest": "expression_statement [2958,3016]"
    },
    {
      "src": "identifier: MAGIC_SALT [1022,1032]",
      "dest": "identifier: MAGIC_SALT [1022,1032]"
    },
    {
      "src": "\": \" [2279,2280]",
      "dest": "\": \" [2279,2280]"
    },
    {
      "src": "identifier: id [2200,2202]",
      "dest": "identifier: id [2200,2202]"
    },
    {
      "src": "comment: // This initializer sets state etc. It must not be applied twice. [2762,2827]",
      "dest": "comment: // This initializer sets state etc. It must not be applied twice. [2762,2827]"
    },
    {
      "src": "(: ( [1940,1941]",
      "dest": "(: ( [1940,1941]"
    },
    {
      "src": "identifier: id [2508,2510]",
      "dest": "identifier: id [2508,2510]"
    },
    {
      "src": "returns: returns [1779,1786]",
      "dest": "returns: returns [1779,1786]"
    },
    {
      "src": "type_name [1570,1577]",
      "dest": "type_name [1570,1577]"
    },
    {
      "src": "): ) [1795,1796]",
      "dest": "): ) [1795,1796]"
    },
    {
      "src": "(: ( [2300,2301]",
      "dest": "(: ( [2300,2301]"
    },
    {
      "src": "=: = [1375,1376]",
      "dest": "=: = [1375,1376]"
    },
    {
      "src": "identifier: StarkPerpetual [732,746]",
      "dest": "identifier: StarkPerpetual [732,746]"
    },
    {
      "src": "): ) [2947,2948]",
      "dest": "): ) [2947,2948]"
    },
    {
      "src": "revert: revert [2070,2076]",
      "dest": "revert: revert [2070,2076]"
    },
    {
      "src": "function_definition [2634,3073]",
      "dest": "function_definition [2634,3073]"
    },
    {
      "src": "if: if [1807,1809]",
      "dest": "if: if [1807,1809]"
    },
    {
      "src": "}: } [2386,2387]",
      "dest": "}: } [2386,2387]"
    },
    {
      "src": "constant: constant [1356,1364]",
      "dest": "constant: constant [1356,1364]"
    },
    {
      "src": "import: import [691,697]",
      "dest": "import: import [691,697]"
    },
    {
      "src": "internal: internal [1538,1546]",
      "dest": "internal: internal [1538,1546]"
    },
    {
      "src": "(: ( [2076,2077]",
      "dest": "(: ( [2076,2077]"
    },
    {
      "src": "string_literal [2428,2461]",
      "dest": "string_literal [2428,2461]"
    },
    {
      "src": "): ) [2152,2153]",
      "dest": "): ) [2152,2153]"
    },
    {
      "src": "(: ( [1628,1629]",
      "dest": "(: ( [1628,1629]"
    },
    {
      "src": "block_statement [1955,1996]",
      "dest": "block_statement [1955,1996]"
    },
    {
      "src": "string_literal [822,829]",
      "dest": "string_literal [822,829]"
    },
    {
      "src": "primitive_type [2966,2972]",
      "dest": "primitive_type [2966,2972]"
    },
    {
      "src": "return: return [1589,1595]",
      "dest": "return: return [1589,1595]"
    },
    {
      "src": "visibility [1756,1764]",
      "dest": "visibility [1756,1764]"
    },
    {
      "src": "identifier: initializationSentinel [2643,2665]",
      "dest": "identifier: initializationSentinel [2643,2665]"
    },
    {
      "src": "}: } [2564,2565]",
      "dest": "}: } [2564,2565]"
    },
    {
      "src": "number_literal: 0 [3001,3002]",
      "dest": "number_literal: 0 [3001,3002]"
    },
    {
      "src": "{: { [2020,2021]",
      "dest": "{: { [2020,2021]"
    },
    {
      "src": "=: = [2247,2248]",
      "dest": "=: = [2247,2248]"
    },
    {
      "src": "): ) [1670,1671]",
      "dest": "): ) [1670,1671]"
    },
    {
      "src": "assignment_expression [2423,2461]",
      "dest": "assignment_expression [2423,2461]"
    },
    {
      "src": "(: ( [2138,2139]",
      "dest": "(: ( [2138,2139]"
    },
    {
      "src": "number_literal: 0x2124100000000202022040002000000020022010011100002003000001000000 [1076,1142]",
      "dest": "number_literal: 0x2124100000000202022040002000000020022010011100002003000001000000 [1076,1142]"
    },
    {
      "src": "call_argument [2914,2929]",
      "dest": "call_argument [2914,2929]"
    },
    {
      "src": "identifier: REVERT_MSG [2937,2947]",
      "dest": "identifier: REVERT_MSG [2937,2947]"
    },
    {
      "src": "(: ( [2972,2973]",
      "dest": "(: ( [2972,2973]"
    },
    {
      "src": "binary_expression [1876,1888]",
      "dest": "binary_expression [1876,1888]"
    },
    {
      "src": "}: } [2471,2472]",
      "dest": "}: } [2471,2472]"
    },
    {
      "src": "number_literal: 0x3000002000310000040022000010000000100013430002033100300200000302 [1276,1342]",
      "dest": "number_literal: 0x3000002000310000040022000010000000100013430002033100300200000302 [1276,1342]"
    },
    {
      "src": "identifier: IDX_MAP_0 [1064,1073]",
      "dest": "identifier: IDX_MAP_0 [1064,1073]"
    },
    {
      "src": "string [2249,2280]",
      "dest": "string [2249,2280]"
    },
    {
      "src": "pragma_directive [636,660]",
      "dest": "pragma_directive [636,660]"
    },
    {
      "src": "inheritance_specifier [750,764]",
      "dest": "inheritance_specifier [750,764]"
    },
    {
      "src": "parameter [1788,1795]",
      "dest": "parameter [1788,1795]"
    }
  ],
  "actions": []
}