{
  "matches": [
    {
      "src": "primitive_type [224,231]",
      "dest": "primitive_type [224,231]"
    },
    {
      "src": "}: } [554,555]",
      "dest": "}: } [554,555]"
    },
    {
      "src": ",: , [1361,1362]",
      "dest": ",: , [1361,1362]"
    },
    {
      "src": "visibility [758,766]",
      "dest": "visibility [758,766]"
    },
    {
      "src": "visibility [1179,1187]",
      "dest": "visibility [1179,1187]"
    },
    {
      "src": "parameter [1202,1209]",
      "dest": "parameter [1202,1209]"
    },
    {
      "src": "identifier: _b [574,576]",
      "dest": "identifier: _b [574,576]"
    },
    {
      "src": "parameter [734,744]",
      "dest": "parameter [734,744]"
    },
    {
      "src": "return_statement [616,625]",
      "dest": "return_statement [616,625]"
    },
    {
      "src": ",: , [744,745]",
      "dest": ",: , [744,745]"
    },
    {
      "src": "binary_expression [1254,1261]",
      "dest": "binary_expression [1254,1261]"
    },
    {
      "src": "return_type_definition [1193,1210]",
      "dest": "return_type_definition [1193,1210]"
    },
    {
      "src": "function_definition [211,631]",
      "dest": "function_definition [211,631]"
    },
    {
      "src": "comment: // benefit is lost if 'b' is also tested. [380,421]",
      "dest": "comment: // benefit is lost if 'b' is also tested. [380,421]"
    },
    {
      "src": "identifier: c [623,624]",
      "dest": "identifier: c [623,624]"
    },
    {
      "src": "(: ( [1350,1351]",
      "dest": "(: ( [1350,1351]"
    },
    {
      "src": "uint256: uint256 [746,753]",
      "dest": "uint256: uint256 [746,753]"
    },
    {
      "src": "uint256: uint256 [1155,1162]",
      "dest": "uint256: uint256 [1155,1162]"
    },
    {
      "src": "return: return [1465,1471]",
      "dest": "return: return [1465,1471]"
    },
    {
      "src": "type_name [1202,1209]",
      "dest": "type_name [1202,1209]"
    },
    {
      "src": "==: == [600,602]",
      "dest": "==: == [600,602]"
    },
    {
      "src": "primitive_type [236,243]",
      "dest": "primitive_type [236,243]"
    },
    {
      "src": "-: - [1257,1258]",
      "dest": "-: - [1257,1258]"
    },
    {
      "src": "pragma_directive [0,24]",
      "dest": "pragma_directive [0,24]"
    },
    {
      "src": "binary_expression [1423,1430]",
      "dest": "binary_expression [1423,1430]"
    },
    {
      "src": "/: / [1011,1012]",
      "dest": "/: / [1011,1012]"
    },
    {
      "src": "call_expression [1221,1237]",
      "dest": "call_expression [1221,1237]"
    },
    {
      "src": "assignment_expression [1419,1430]",
      "dest": "assignment_expression [1419,1430]"
    },
    {
      "src": "primitive_type [781,788]",
      "dest": "primitive_type [781,788]"
    },
    {
      "src": "return_statement [1247,1262]",
      "dest": "return_statement [1247,1262]"
    },
    {
      "src": "uint256: uint256 [271,278]",
      "dest": "uint256: uint256 [271,278]"
    },
    {
      "src": "binary_expression [513,520]",
      "dest": "binary_expression [513,520]"
    },
    {
      "src": "type_name [734,741]",
      "dest": "type_name [734,741]"
    },
    {
      "src": "identifier: _a [569,571]",
      "dest": "identifier: _a [569,571]"
    },
    {
      "src": "): ) [788,789]",
      "dest": "): ) [788,789]"
    },
    {
      "src": "): ) [520,521]",
      "dest": "): ) [520,521]"
    },
    {
      "src": "binary_expression [593,599]",
      "dest": "binary_expression [593,599]"
    },
    {
      "src": "return: return [616,622]",
      "dest": "return: return [616,622]"
    },
    {
      "src": "internal: internal [248,256]",
      "dest": "internal: internal [248,256]"
    },
    {
      "src": "identifier: assert [1221,1227]",
      "dest": "identifier: assert [1221,1227]"
    },
    {
      "src": "): ) [1407,1408]",
      "dest": "): ) [1407,1408]"
    },
    {
      "src": "{: { [790,791]",
      "dest": "{: { [790,791]"
    },
    {
      "src": "identifier: c [1472,1473]",
      "dest": "identifier: c [1472,1473]"
    },
    {
      "src": "state_mutability [257,261]",
      "dest": "state_mutability [257,261]"
    },
    {
      "src": "primitive_type [1202,1209]",
      "dest": "primitive_type [1202,1209]"
    },
    {
      "src": "): ) [1177,1178]",
      "dest": "): ) [1177,1178]"
    },
    {
      "src": "block_statement [522,555]",
      "dest": "block_statement [522,555]"
    },
    {
      "src": "): ) [1236,1237]",
      "dest": "): ) [1236,1237]"
    },
    {
      "src": "comment: // assert(_b > 0); // Solidity automatically throws when dividing by 0 [800,870]",
      "dest": "comment: // assert(_b > 0); // Solidity automatically throws when dividing by 0 [800,870]"
    },
    {
      "src": "): ) [605,606]",
      "dest": "): ) [605,606]"
    },
    {
      "src": "expression_statement [565,577]",
      "dest": "expression_statement [565,577]"
    },
    {
      "src": "call_argument [1228,1236]",
      "dest": "call_argument [1228,1236]"
    },
    {
      "src": ",: , [1165,1166]",
      "dest": ",: , [1165,1166]"
    },
    {
      "src": "identifier: _b [1371,1373]",
      "dest": "identifier: _b [1371,1373]"
    },
    {
      "src": "(: ( [223,224]",
      "dest": "(: ( [223,224]"
    },
    {
      "src": "<=: <= [1231,1233]",
      "dest": "<=: <= [1231,1233]"
    },
    {
      "src": "identifier: assert [586,592]",
      "dest": "identifier: assert [586,592]"
    },
    {
      "src": "comment: /**     * @dev Adds two numbers, throws on overflow.     */ [1274,1333]",
      "dest": "comment: /**     * @dev Adds two numbers, throws on overflow.     */ [1274,1333]"
    },
    {
      "src": "return_type_definition [262,281]",
      "dest": "return_type_definition [262,281]"
    },
    {
      "src": "identifier: _a [513,515]",
      "dest": "identifier: _a [513,515]"
    },
    {
      "src": "identifier: _b [1013,1015]",
      "dest": "identifier: _b [1013,1015]"
    },
    {
      "src": "identifier: _a [1359,1361]",
      "dest": "identifier: _a [1359,1361]"
    },
    {
      "src": "solidity_version_comparison_operator [15,17]",
      "dest": "solidity_version_comparison_operator [15,17]"
    },
    {
      "src": "type_name [1398,1405]",
      "dest": "type_name [1398,1405]"
    },
    {
      "src": "primitive_type [746,753]",
      "dest": "primitive_type [746,753]"
    },
    {
      "src": "{: { [522,523]",
      "dest": "{: { [522,523]"
    },
    {
      "src": "type_name [1155,1162]",
      "dest": "type_name [1155,1162]"
    },
    {
      "src": "identifier: _b [1428,1430]",
      "dest": "identifier: _b [1428,1430]"
    },
    {
      "src": "comment: // uint256 c = _a / _b; [879,902]",
      "dest": "comment: // uint256 c = _a / _b; [879,902]"
    },
    {
      "src": "call_argument [1447,1454]",
      "dest": "call_argument [1447,1454]"
    },
    {
      "src": "(: ( [270,271]",
      "dest": "(: ( [270,271]"
    },
    {
      "src": "primitive_type [1167,1174]",
      "dest": "primitive_type [1167,1174]"
    },
    {
      "src": "parameter [1398,1407]",
      "dest": "parameter [1398,1407]"
    },
    {
      "src": "identifier: _b [1228,1230]",
      "dest": "identifier: _b [1228,1230]"
    },
    {
      "src": "function_definition [1142,1268]",
      "dest": "function_definition [1142,1268]"
    },
    {
      "src": "return_type_definition [1389,1408]",
      "dest": "return_type_definition [1389,1408]"
    },
    {
      "src": "pure: pure [767,771]",
      "dest": "pure: pure [767,771]"
    },
    {
      "src": "}: } [630,631]",
      "dest": "}: } [630,631]"
    },
    {
      "src": "identifier: sub [1151,1154]",
      "dest": "identifier: sub [1151,1154]"
    },
    {
      "src": "identifier: _a [1423,1425]",
      "dest": "identifier: _a [1423,1425]"
    },
    {
      "src": "type_name [236,243]",
      "dest": "type_name [236,243]"
    },
    {
      "src": "identifier: _b [603,605]",
      "dest": "identifier: _b [603,605]"
    },
    {
      "src": "comment: /**     * @dev Integer division of two numbers, truncating the quotient.     */ [637,716]",
      "dest": "comment: /**     * @dev Integer division of two numbers, truncating the quotient.     */ [637,716]"
    },
    {
      "src": "solidity: solidity [7,15]",
      "dest": "solidity: solidity [7,15]"
    },
    {
      "src": "type_name [781,788]",
      "dest": "type_name [781,788]"
    },
    {
      "src": "identifier: _a [232,234]",
      "dest": "identifier: _a [232,234]"
    },
    {
      "src": "identifier: _a [1452,1454]",
      "dest": "identifier: _a [1452,1454]"
    },
    {
      "src": "uint256: uint256 [734,741]",
      "dest": "uint256: uint256 [734,741]"
    },
    {
      "src": "type_name [271,278]",
      "dest": "type_name [271,278]"
    },
    {
      "src": "state_mutability [767,771]",
      "dest": "state_mutability [767,771]"
    },
    {
      "src": ",: , [234,235]",
      "dest": ",: , [234,235]"
    },
    {
      "src": "return_statement [1001,1016]",
      "dest": "return_statement [1001,1016]"
    },
    {
      "src": "function_body [1211,1268]",
      "dest": "function_body [1211,1268]"
    },
    {
      "src": "function: function [721,729]",
      "dest": "function: function [721,729]"
    },
    {
      "src": "assignment_expression [565,576]",
      "dest": "assignment_expression [565,576]"
    },
    {
      "src": "type_name [1363,1370]",
      "dest": "type_name [1363,1370]"
    },
    {
      "src": "+: + [1426,1427]",
      "dest": "+: + [1426,1427]"
    },
    {
      "src": "identifier: _a [742,744]",
      "dest": "identifier: _a [742,744]"
    },
    {
      "src": "number_literal: 0 [519,520]",
      "dest": "number_literal: 0 [519,520]"
    },
    {
      "src": "identifier: _b [754,756]",
      "dest": "identifier: _b [754,756]"
    },
    {
      "src": "binary_expression [593,605]",
      "dest": "binary_expression [593,605]"
    },
    {
      "src": "binary_expression [569,576]",
      "dest": "binary_expression [569,576]"
    },
    {
      "src": "(: ( [733,734]",
      "dest": "(: ( [733,734]"
    },
    {
      "src": "(: ( [1397,1398]",
      "dest": "(: ( [1397,1398]"
    },
    {
      "src": "parameter [236,246]",
      "dest": "parameter [236,246]"
    },
    {
      "src": "call_expression [586,606]",
      "dest": "call_expression [586,606]"
    },
    {
      "src": "returns: returns [262,269]",
      "dest": "returns: returns [262,269]"
    },
    {
      "src": "==: == [516,518]",
      "dest": "==: == [516,518]"
    },
    {
      "src": "state_mutability [1384,1388]",
      "dest": "state_mutability [1384,1388]"
    },
    {
      "src": "binary_expression [1447,1454]",
      "dest": "binary_expression [1447,1454]"
    },
    {
      "src": "identifier: c [593,594]",
      "dest": "identifier: c [593,594]"
    },
    {
      "src": "expression_statement [586,607]",
      "dest": "expression_statement [586,607]"
    },
    {
      "src": "(: ( [1201,1202]",
      "dest": "(: ( [1201,1202]"
    },
    {
      "src": "{: { [1409,1410]",
      "dest": "{: { [1409,1410]"
    },
    {
      "src": "uint256: uint256 [781,788]",
      "dest": "uint256: uint256 [781,788]"
    },
    {
      "src": "visibility [1375,1383]",
      "dest": "visibility [1375,1383]"
    },
    {
      "src": "=: = [567,568]",
      "dest": "=: = [567,568]"
    },
    {
      "src": "pragma: pragma [0,6]",
      "dest": "pragma: pragma [0,6]"
    },
    {
      "src": "function_body [282,631]",
      "dest": "function_body [282,631]"
    },
    {
      "src": "{: { [1211,1212]",
      "dest": "{: { [1211,1212]"
    },
    {
      "src": "uint256: uint256 [1363,1370]",
      "dest": "uint256: uint256 [1363,1370]"
    },
    {
      "src": "): ) [756,757]",
      "dest": "): ) [756,757]"
    },
    {
      "src": "visibility [248,256]",
      "dest": "visibility [248,256]"
    },
    {
      "src": "identifier: _a [597,599]",
      "dest": "identifier: _a [597,599]"
    },
    {
      "src": "identifier: _a [1254,1256]",
      "dest": "identifier: _a [1254,1256]"
    },
    {
      "src": "): ) [246,247]",
      "dest": "): ) [246,247]"
    },
    {
      "src": "*: * [572,573]",
      "dest": "*: * [572,573]"
    },
    {
      "src": "uint256: uint256 [236,243]",
      "dest": "uint256: uint256 [236,243]"
    },
    {
      "src": "type_name [1351,1358]",
      "dest": "type_name [1351,1358]"
    },
    {
      "src": "number_literal: 0 [543,544]",
      "dest": "number_literal: 0 [543,544]"
    },
    {
      "src": "comment: /**     * @dev Multiplies two numbers, throws on overflow.     */ [141,206]",
      "dest": "comment: /**     * @dev Multiplies two numbers, throws on overflow.     */ [141,206]"
    },
    {
      "src": "expression_statement [1221,1238]",
      "dest": "expression_statement [1221,1238]"
    },
    {
      "src": "}: } [1021,1022]",
      "dest": "}: } [1021,1022]"
    },
    {
      "src": "function_definition [1338,1480]",
      "dest": "function_definition [1338,1480]"
    },
    {
      "src": "primitive_type [1155,1162]",
      "dest": "primitive_type [1155,1162]"
    },
    {
      "src": "identifier: _a [1163,1165]",
      "dest": "identifier: _a [1163,1165]"
    },
    {
      "src": "{: { [282,283]",
      "dest": "{: { [282,283]"
    },
    {
      "src": "{: { [134,135]",
      "dest": "{: { [134,135]"
    },
    {
      "src": "contract_body [134,1482]",
      "dest": "contract_body [134,1482]"
    },
    {
      "src": "function_definition [721,1022]",
      "dest": "function_definition [721,1022]"
    },
    {
      "src": "identifier: SafeMath [125,133]",
      "dest": "identifier: SafeMath [125,133]"
    },
    {
      "src": "return_statement [536,545]",
      "dest": "return_statement [536,545]"
    },
    {
      "src": "parameter [1351,1361]",
      "dest": "parameter [1351,1361]"
    },
    {
      "src": "pure: pure [1384,1388]",
      "dest": "pure: pure [1384,1388]"
    },
    {
      "src": "}: } [1481,1482]",
      "dest": "}: } [1481,1482]"
    },
    {
      "src": "parameter [224,234]",
      "dest": "parameter [224,234]"
    },
    {
      "src": "library_declaration [117,1482]",
      "dest": "library_declaration [117,1482]"
    },
    {
      "src": "function_body [790,1022]",
      "dest": "function_body [790,1022]"
    },
    {
      "src": "function: function [1142,1150]",
      "dest": "function: function [1142,1150]"
    },
    {
      "src": "if_statement [509,555]",
      "dest": "if_statement [509,555]"
    },
    {
      "src": "identifier: c [565,566]",
      "dest": "identifier: c [565,566]"
    },
    {
      "src": "uint256: uint256 [1202,1209]",
      "dest": "uint256: uint256 [1202,1209]"
    },
    {
      "src": "parameter [1167,1177]",
      "dest": "parameter [1167,1177]"
    },
    {
      "src": "identifier: c [1419,1420]",
      "dest": "identifier: c [1419,1420]"
    },
    {
      "src": "identifier: add [1347,1350]",
      "dest": "identifier: add [1347,1350]"
    },
    {
      "src": "(: ( [780,781]",
      "dest": "(: ( [780,781]"
    },
    {
      "src": "binary_expression [1008,1015]",
      "dest": "binary_expression [1008,1015]"
    },
    {
      "src": "identifier: _b [1259,1261]",
      "dest": "identifier: _b [1259,1261]"
    },
    {
      "src": "return_type_definition [772,789]",
      "dest": "return_type_definition [772,789]"
    },
    {
      "src": "(: ( [592,593]",
      "dest": "(: ( [592,593]"
    },
    {
      "src": "^:  ^ [15,17]",
      "dest": "^:  ^ [15,17]"
    },
    {
      "src": "identifier: mul [220,223]",
      "dest": "identifier: mul [220,223]"
    },
    {
      "src": "parameter [271,280]",
      "dest": "parameter [271,280]"
    },
    {
      "src": "call_argument [593,605]",
      "dest": "call_argument [593,605]"
    },
    {
      "src": "return: return [1247,1253]",
      "dest": "return: return [1247,1253]"
    },
    {
      "src": "identifier: _a [1008,1010]",
      "dest": "identifier: _a [1008,1010]"
    },
    {
      "src": "comment: /**     * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).     */ [1028,1137]",
      "dest": "comment: /**     * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).     */ [1028,1137]"
    },
    {
      "src": ">=: >= [1449,1451]",
      "dest": ">=: >= [1449,1451]"
    },
    {
      "src": "type_name [746,753]",
      "dest": "type_name [746,753]"
    },
    {
      "src": "primitive_type [271,278]",
      "dest": "primitive_type [271,278]"
    },
    {
      "src": "internal: internal [1375,1383]",
      "dest": "internal: internal [1375,1383]"
    },
    {
      "src": "primitive_type [1351,1358]",
      "dest": "primitive_type [1351,1358]"
    },
    {
      "src": "uint256: uint256 [1351,1358]",
      "dest": "uint256: uint256 [1351,1358]"
    },
    {
      "src": "call_expression [1440,1455]",
      "dest": "call_expression [1440,1455]"
    },
    {
      "src": "}: } [1267,1268]",
      "dest": "}: } [1267,1268]"
    },
    {
      "src": "returns: returns [772,779]",
      "dest": "returns: returns [772,779]"
    },
    {
      "src": "primitive_type [1363,1370]",
      "dest": "primitive_type [1363,1370]"
    },
    {
      "src": "library: library [117,124]",
      "dest": "library: library [117,124]"
    },
    {
      "src": "uint256: uint256 [1167,1174]",
      "dest": "uint256: uint256 [1167,1174]"
    },
    {
      "src": "function: function [1338,1346]",
      "dest": "function: function [1338,1346]"
    },
    {
      "src": "comment: // Gas optimization: this is cheaper than asserting 'a' not being zero, but the [292,371]",
      "dest": "comment: // Gas optimization: this is cheaper than asserting 'a' not being zero, but the [292,371]"
    },
    {
      "src": "(: ( [1227,1228]",
      "dest": "(: ( [1227,1228]"
    },
    {
      "src": "): ) [1454,1455]",
      "dest": "): ) [1454,1455]"
    },
    {
      "src": "): ) [1209,1210]",
      "dest": "): ) [1209,1210]"
    },
    {
      "src": "parameter [781,788]",
      "dest": "parameter [781,788]"
    },
    {
      "src": "type_name [224,231]",
      "dest": "type_name [224,231]"
    },
    {
      "src": "function_body [1409,1480]",
      "dest": "function_body [1409,1480]"
    },
    {
      "src": "parameter [1363,1373]",
      "dest": "parameter [1363,1373]"
    },
    {
      "src": "parameter [1155,1165]",
      "dest": "parameter [1155,1165]"
    },
    {
      "src": "pure: pure [257,261]",
      "dest": "pure: pure [257,261]"
    },
    {
      "src": "return: return [536,542]",
      "dest": "return: return [536,542]"
    },
    {
      "src": "identifier: _b [244,246]",
      "dest": "identifier: _b [244,246]"
    },
    {
      "src": "identifier: _a [1234,1236]",
      "dest": "identifier: _a [1234,1236]"
    },
    {
      "src": "identifier: c [1447,1448]",
      "dest": "identifier: c [1447,1448]"
    },
    {
      "src": "/: / [595,596]",
      "dest": "/: / [595,596]"
    },
    {
      "src": "identifier: c [279,280]",
      "dest": "identifier: c [279,280]"
    },
    {
      "src": "identifier: _b [1175,1177]",
      "dest": "identifier: _b [1175,1177]"
    },
    {
      "src": "primitive_type [1398,1405]",
      "dest": "primitive_type [1398,1405]"
    },
    {
      "src": "comment: // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522 [430,500]",
      "dest": "comment: // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522 [430,500]"
    },
    {
      "src": "comment: // assert(_a == _b * c + _a % _b); // There is no case in which this doesn't hold [911,992]",
      "dest": "comment: // assert(_a == _b * c + _a % _b); // There is no case in which this doesn't hold [911,992]"
    },
    {
      "src": "source_file [0,1483]",
      "dest": "source_file [0,1483]"
    },
    {
      "src": "(: ( [512,513]",
      "dest": "(: ( [512,513]"
    },
    {
      "src": "identifier: assert [1440,1446]",
      "dest": "identifier: assert [1440,1446]"
    },
    {
      "src": "(: ( [1154,1155]",
      "dest": "(: ( [1154,1155]"
    },
    {
      "src": "expression_statement [1419,1431]",
      "dest": "expression_statement [1419,1431]"
    },
    {
      "src": "identifier: div [730,733]",
      "dest": "identifier: div [730,733]"
    },
    {
      "src": "primitive_type [734,741]",
      "dest": "primitive_type [734,741]"
    },
    {
      "src": "if: if [509,511]",
      "dest": "if: if [509,511]"
    },
    {
      "src": "returns: returns [1389,1396]",
      "dest": "returns: returns [1389,1396]"
    },
    {
      "src": "parameter [746,756]",
      "dest": "parameter [746,756]"
    },
    {
      "src": "internal: internal [758,766]",
      "dest": "internal: internal [758,766]"
    },
    {
      "src": "returns: returns [1193,1200]",
      "dest": "returns: returns [1193,1200]"
    },
    {
      "src": "uint256: uint256 [1398,1405]",
      "dest": "uint256: uint256 [1398,1405]"
    },
    {
      "src": "): ) [280,281]",
      "dest": "): ) [280,281]"
    },
    {
      "src": "state_mutability [1188,1192]",
      "dest": "state_mutability [1188,1192]"
    },
    {
      "src": "return_statement [1465,1474]",
      "dest": "return_statement [1465,1474]"
    },
    {
      "src": "return: return [1001,1007]",
      "dest": "return: return [1001,1007]"
    },
    {
      "src": "uint256: uint256 [224,231]",
      "dest": "uint256: uint256 [224,231]"
    },
    {
      "src": "): ) [1373,1374]",
      "dest": "): ) [1373,1374]"
    },
    {
      "src": "solidity_version: 0.4.24 [17,23]",
      "dest": "solidity_version: 0.4.24 [17,23]"
    },
    {
      "src": "function: function [211,219]",
      "dest": "function: function [211,219]"
    },
    {
      "src": "expression_statement [1440,1456]",
      "dest": "expression_statement [1440,1456]"
    },
    {
      "src": "binary_expression [1228,1236]",
      "dest": "binary_expression [1228,1236]"
    },
    {
      "src": "solidity_pragma_token [7,23]",
      "dest": "solidity_pragma_token [7,23]"
    },
    {
      "src": "internal: internal [1179,1187]",
      "dest": "internal: internal [1179,1187]"
    },
    {
      "src": "pure: pure [1188,1192]",
      "dest": "pure: pure [1188,1192]"
    },
    {
      "src": "comment: /**  * @title SafeMath  * @dev Math operations with safety checks that throw on error  */ [27,116]",
      "dest": "comment: /**  * @title SafeMath  * @dev Math operations with safety checks that throw on error  */ [27,116]"
    },
    {
      "src": "}: } [1479,1480]",
      "dest": "}: } [1479,1480]"
    },
    {
      "src": "identifier: c [1406,1407]",
      "dest": "identifier: c [1406,1407]"
    },
    {
      "src": "=: = [1421,1422]",
      "dest": "=: = [1421,1422]"
    },
    {
      "src": "type_name [1167,1174]",
      "dest": "type_name [1167,1174]"
    },
    {
      "src": "(: ( [1446,1447]",
      "dest": "(: ( [1446,1447]"
    }
  ],
  "actions": []
}