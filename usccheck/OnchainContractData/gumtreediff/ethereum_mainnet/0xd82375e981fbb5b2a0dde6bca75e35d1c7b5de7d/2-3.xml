<?xml version="1.0" ?>
<matches>
  <match src="parameter [8526,8537]" dest="parameter [9090,9101]"/>
  <match src="call_argument [98552,98566]" dest="call_argument [77202,77216]"/>
  <match src="primitive_type [108734,108741]" dest="primitive_type [37647,37654]"/>
  <match src=":: : [7244,7245]" dest=":: : [7808,7809]"/>
  <match src="identifier: newImplementation [99100,99117]" dest="identifier: newImplementation [77750,77767]"/>
  <match src="parameter [793,802]" dest="parameter [1357,1366]"/>
  <match src="visibility [104631,104637]" dest="visibility [33544,33550]"/>
  <match src="array_access [105501,105529]" dest="array_access [34414,34442]"/>
  <match src="pure: pure [4050,4054]" dest="pure: pure [4614,4618]"/>
  <match src="identifier: mul [90499,90502]" dest="identifier: div [73181,73184]"/>
  <match src="uint256: uint256 [33327,33334]" dest="uint256: uint256 [57945,57952]"/>
  <match src=",: , [3246,3247]" dest=",: , [3810,3811]"/>
  <match src="visibility [55946,55954]" dest="visibility [15059,15067]"/>
  <match src="identifier: b [8065,8066]" dest="identifier: b [8629,8630]"/>
  <match src="state_mutability [104785,104789]" dest="state_mutability [33698,33702]"/>
  <match src=":: : [6826,6827]" dest=":: : [7390,7391]"/>
  <match src="(: ( [103856,103857]" dest="(: ( [32769,32770]"/>
  <match src="identifier: D256 [6590,6594]" dest="identifier: D256 [7154,7158]"/>
  <match src="call_argument [90895,90909]" dest="call_argument [73452,73466]"/>
  <match src="identifier: reason [39375,39381]" dest="identifier: reason [44566,44572]"/>
  <match src="function_definition [1665,2124]" dest="function_definition [2229,2688]"/>
  <match src="(: ( [39055,39056]" dest="(: ( [44246,44247]"/>
  <match src=":: : [54599,54600]" dest=":: : [13712,13713]"/>
  <match src="&quot;: &quot; [21970,21971]" dest="&quot;: &quot; [64295,64296]"/>
  <match src="identifier: amount [29770,29776]" dest="identifier: amount [58463,58469]"/>
  <match src="return_statement [107064,107077]" dest="return_statement [35977,35990]"/>
  <match src="}: } [54626,54627]" dest="}: } [13739,13740]"/>
  <match src="identifier: D256 [6814,6818]" dest="identifier: D256 [7378,7382]"/>
  <match src="parameter [109707,109722]" dest="parameter [38620,38635]"/>
  <match src="type_name [7327,7334]" dest="type_name [7891,7898]"/>
  <match src="]: ] [112662,112663]" dest="]: ] [41575,41576]"/>
  <match src="returns: returns [4055,4062]" dest="returns: returns [4619,4626]"/>
  <match src="variable_declaration [94081,94093]" dest="variable_declaration [74939,74951]"/>
  <match src="external: external [62554,62562]" dest="external: external [19388,19396]"/>
  <match src=",: , [108090,108091]" dest=",: , [37003,37004]"/>
  <match src=".: . [104064,104065]" dest=".: . [32977,32978]"/>
  <match src="comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts with custom message on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      *      * _Available since v2.4.0._      */ [2715,3219]" dest="comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts with custom message on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      *      * _Available since v2.4.0._      */ [3279,3783]"/>
  <match src="{: { [101770,101771]" dest="{: { [30683,30684]"/>
  <match src="identifier: epoch [102456,102461]" dest="identifier: epoch [31369,31374]"/>
  <match src="): ) [96764,96765]" dest="): ) [27982,27983]"/>
  <match src="{: { [105752,105753]" dest="{: { [34665,34666]"/>
  <match src="primitive_type [39326,39330]" dest="primitive_type [44517,44521]"/>
  <match src="): ) [111043,111044]" dest="): ) [39956,39957]"/>
  <match src="{: { [8345,8346]" dest="{: { [8909,8910]"/>
  <match src="): ) [42662,42663]" dest="): ) [47853,47854]"/>
  <match src="parameter [9114,9130]" dest="parameter [9678,9694]"/>
  <match src="): ) [8817,8818]" dest="): ) [9381,9382]"/>
  <match src="comment: /**      * Epoch      */ [110689,110713]" dest="comment: /**      * Epoch      */ [39602,39626]"/>
  <match src="call_argument [113066,113072]" dest="call_argument [41979,41985]"/>
  <match src="call_argument [110661,110667]" dest="call_argument [39574,39580]"/>
  <match src="user_defined_type [10060,10064]" dest="user_defined_type [10624,10628]"/>
  <match src=".: . [7982,7983]" dest=".: . [8546,8547]"/>
  <match src="visibility [3287,3295]" dest="visibility [3851,3859]"/>
  <match src="address: address [60906,60913]" dest="address: address [54372,54379]"/>
  <match src="(: ( [27687,27688]" dest="(: ( [67254,67255]"/>
  <match src="&quot;: &quot; [100144,100145]" dest="&quot;: &quot; [29057,29058]"/>
  <match src="identifier: dollar [101614,101620]" dest="identifier: dollar [30527,30533]"/>
  <match src="identifier: FILE [115304,115308]" dest="identifier: FILE [70248,70252]"/>
  <match src="function_definition [110100,110246]" dest="function_definition [39013,39159]"/>
  <match src="&quot;: &quot; [23785,23786]" dest="&quot;: &quot; [80088,80089]"/>
  <match src="call_expression [41374,41398]" dest="call_expression [46565,46589]"/>
  <match src="parameter [105331,105338]" dest="parameter [34244,34251]"/>
  <match src="type_name [104652,104666]" dest="type_name [33565,33579]"/>
  <match src="member_expression [91322,91332]" dest="member_expression [79065,79075]"/>
  <match src="{: { [7597,7598]" dest="{: { [8161,8162]"/>
  <match src="primitive_type [2603,2610]" dest="primitive_type [3167,3174]"/>
  <match src="is: is [99831,99833]" dest="is: is [28744,28746]"/>
  <match src="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      */ [3568,4001]" dest="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      */ [4132,4565]"/>
  <match src="identifier: Decimal [56585,56592]" dest="identifier: Decimal [15698,15705]"/>
  <match src="user_defined_type [7301,7305]" dest="user_defined_type [7865,7869]"/>
  <match src="contract_declaration [95301,95622]" dest="contract_declaration [26519,26840]"/>
  <match src="call_expression [86635,86675]" dest="call_expression [54492,54525]"/>
  <match src="type_name [46357,46364]" dest="type_name [51548,51555]"/>
  <match src="parameter [102667,102680]" dest="parameter [31580,31593]"/>
  <match src="state_mutability [55175,55179]" dest="state_mutability [14288,14292]"/>
  <match src="user_defined_type [6780,6784]" dest="user_defined_type [7344,7348]"/>
  <match src="call_argument [109478,109484]" dest="call_argument [38391,38397]"/>
  <match src="&quot;: &quot; [2062,2063]" dest="&quot;: &quot; [2626,2627]"/>
  <match src="state_mutability [105464,105468]" dest="state_mutability [34377,34381]"/>
  <match src="function_definition [55135,55274]" dest="function_definition [14248,14387]"/>
  <match src="identifier: account [60914,60921]" dest="identifier: account [54380,54387]"/>
  <match src="visibility [106789,106797]" dest="visibility [35702,35710]"/>
  <match src="(: ( [46138,46139]" dest="(: ( [51329,51330]"/>
  <match src="): ) [101652,101653]" dest="): ) [30565,30566]"/>
  <match src="return_type_definition [56226,56255]" dest="return_type_definition [15339,15368]"/>
  <match src="address: address [58106,58113]" dest="address: address [54566,54573]"/>
  <match src="emit_statement [91847,91898]" dest="emit_statement [80446,80493]"/>
  <match src="identifier: input [47687,47692]" dest="identifier: input [52878,52883]"/>
  <match src="call_argument [42982,42988]" dest="call_argument [48173,48179]"/>
  <match src="binary_expression [9479,9501]" dest="binary_expression [10043,10065]"/>
  <match src="return: return [103912,103918]" dest="return: return [32825,32831]"/>
  <match src="identifier: that [39871,39875]" dest="identifier: that [45062,45066]"/>
  <match src="identifier: SafeMath [5629,5637]" dest="identifier: SafeMath [6193,6201]"/>
  <match src="identifier: b [8255,8256]" dest="identifier: b [8819,8820]"/>
  <match src="internal: internal [6156,6164]" dest="internal: internal [6720,6728]"/>
  <match src="): ) [8693,8694]" dest="): ) [9257,9258]"/>
  <match src="modifier_invocation [89460,89469]" dest="modifier_invocation [72531,72560]"/>
  <match src="contract: contract [95624,95632]" dest="contract: contract [26842,26850]"/>
  <match src="comment: // XXX Currently there is no better way to check if there is a contract in an address [94103,94188]" dest="comment: // XXX Currently there is no better way to check if there is a contract in an address [74961,75046]"/>
  <match src="type_name [6045,6049]" dest="type_name [6609,6613]"/>
  <match src="indexed: indexed [14020,14027]" dest="indexed: indexed [24018,24025]"/>
  <match src="user_defined_type [8999,9003]" dest="user_defined_type [9563,9567]"/>
  <match src="primitive_type [104459,104463]" dest="primitive_type [33372,33376]"/>
  <match src="(: ( [47836,47837]" dest="(: ( [53027,53028]"/>
  <match src="identifier: account [108589,108596]" dest="identifier: account [37502,37509]"/>
  <match src="identifier: b [1697,1698]" dest="identifier: b [2261,2262]"/>
  <match src="(: ( [110660,110661]" dest="(: ( [39573,39574]"/>
  <match src="identifier: candidate [105656,105665]" dest="identifier: candidate [34569,34578]"/>
  <match src="visibility [52744,52751]" dest="visibility [11857,11864]"/>
  <match src="identifier: incrementBalanceOfStaged [88736,88760]" dest="identifier: incrementBalanceOfStaged [73687,73711]"/>
  <match src="&quot;: &quot; [115163,115164]" dest="&quot;: &quot; [70107,70108]"/>
  <match src="?: ? [103050,103051]" dest="?: ? [31963,31964]"/>
  <match src="(: ( [13498,13499]" dest="(: ( [23496,23497]"/>
  <match src="!=: != [61225,61227]" dest="!=: != [65657,65659]"/>
  <match src="identifier: account [101731,101738]" dest="identifier: account [30644,30651]"/>
  <match src="identifier: candidate [105583,105592]" dest="identifier: candidate [34496,34505]"/>
  <match src="{: { [7215,7216]" dest="{: { [7779,7780]"/>
  <match src="return_statement [9053,9084]" dest="return_statement [9617,9648]"/>
  <match src="): ) [90405,90406]" dest="): ) [62765,62766]"/>
  <match src="expression_statement [110766,110842]" dest="expression_statement [39679,39755]"/>
  <match src="pure: pure [63011,63015]" dest="pure: pure [19845,19849]"/>
  <match src="identifier: epoch [103654,103659]" dest="identifier: epoch [32567,32572]"/>
  <match src="member_expression [110045,110059]" dest="member_expression [38958,38972]"/>
  <match src="visibility [59819,59825]" dest="visibility [24793,24799]"/>
  <match src="variable_declaration [31883,31917]" dest="variable_declaration [17137,17166]"/>
  <match src="indexed: indexed [25579,25586]" dest="indexed: indexed [60118,60125]"/>
  <match src="): ) [3317,3318]" dest="): ) [3881,3882]"/>
  <match src="): ) [89083,89084]" dest="): ) [55447,55448]"/>
  <match src="parameter [4724,4731]" dest="parameter [5288,5295]"/>
  <match src="(: ( [56447,56448]" dest="(: ( [15560,15561]"/>
  <match src=".: . [109226,109227]" dest=".: . [38139,38140]"/>
  <match src="): ) [111935,111936]" dest="): ) [40848,40849]"/>
  <match src="): ) [47856,47857]" dest="): ) [53047,53048]"/>
  <match src="address: address [110118,110125]" dest="address: address [39031,39038]"/>
  <match src="identifier: msg [89823,89826]" dest="identifier: msg [73366,73369]"/>
  <match src="[: [ [113395,113396]" dest="[: [ [42308,42309]"/>
  <match src="member_expression [7048,7058]" dest="member_expression [7612,7622]"/>
  <match src="identifier: account [88174,88181]" dest="identifier: account [71193,71200]"/>
  <match src="string_literal [23785,23820]" dest="string_literal [80088,80118]"/>
  <match src=",: , [8863,8864]" dest=",: , [9427,9428]"/>
  <match src="call_argument [41393,41397]" dest="call_argument [46584,46588]"/>
  <match src="parameter [101486,101493]" dest="parameter [30399,30406]"/>
  <match src="primitive_type [98135,98142]" dest="primitive_type [76785,76792]"/>
  <match src="{: { [1972,1973]" dest="{: { [2536,2537]"/>
  <match src=".: . [29957,29958]" dest=".: . [18423,18424]"/>
  <match src="member_expression [104058,104095]" dest="member_expression [32971,33008]"/>
  <match src="-: - [1396,1397]" dest="-: - [1960,1961]"/>
  <match src="uint256: uint256 [45856,45863]" dest="uint256: uint256 [51047,51054]"/>
  <match src="identifier: LPAREN [40922,40928]" dest="identifier: LPAREN [46113,46119]"/>
  <match src="primitive_type [62691,62698]" dest="primitive_type [19525,19532]"/>
  <match src="member_expression [88761,88771]" dest="member_expression [73712,73722]"/>
  <match src="(: ( [89390,89391]" dest="(: ( [81248,81249]"/>
  <match src="assignment_expression [107185,107242]" dest="assignment_expression [36098,36155]"/>
  <match src="if_statement [44950,45001]" dest="if_statement [50141,50192]"/>
  <match src="type_name [63720,63727]" dest="type_name [20554,20561]"/>
  <match src="memory: memory [7923,7929]" dest="memory: memory [8487,8493]"/>
  <match src="!: ! [41259,41260]" dest="!: ! [46450,46451]"/>
  <match src=",: , [9416,9417]" dest=",: , [9980,9981]"/>
  <match src="(: ( [58831,58832]" dest="(: ( [64501,64502]"/>
  <match src="): ) [7881,7882]" dest="): ) [8445,8446]"/>
  <match src="identifier: D256 [8142,8146]" dest="identifier: D256 [8706,8710]"/>
  <match src="primitive_type [88525,88532]" dest="primitive_type [60264,60271]"/>
  <match src="): ) [91672,91673]" dest="): ) [73676,73677]"/>
  <match src="call_argument [115322,115343]" dest="call_argument [70266,70287]"/>
  <match src="expression_statement [92393,92520]" dest="expression_statement [79029,79140]"/>
  <match src="call_argument [30493,30529]" dest="call_argument [65741,65779]"/>
  <match src="call_expression [115376,115392]" dest="call_expression [70320,70336]"/>
  <match src="parameter [108817,108831]" dest="parameter [37730,37744]"/>
  <match src="using: using [82801,82806]" dest="using: using [83092,83097]"/>
  <match src="&quot;: &quot; [92508,92509]" dest="&quot;: &quot; [79128,79129]"/>
  <match src="type_name [16109,16116]" dest="type_name [16861,16868]"/>
  <match src="identifier: Decimal [56435,56442]" dest="identifier: Decimal [15548,15555]"/>
  <match src="variable_declaration_statement [29916,29982]" dest="variable_declaration_statement [17690,17770]"/>
  <match src="identifier: self [9203,9207]" dest="identifier: self [9767,9771]"/>
  <match src="(: ( [98459,98460]" dest="(: ( [77109,77110]"/>
  <match src="call_argument [30485,30491]" dest="call_argument [65733,65739]"/>
  <match src="parameter [55621,55628]" dest="parameter [14734,14741]"/>
  <match src="primitive_type [58158,58165]" dest="primitive_type [80521,80528]"/>
  <match src=",: , [7497,7498]" dest=",: , [8061,8062]"/>
  <match src="function_definition [102837,102928]" dest="function_definition [31750,31841]"/>
  <match src="function: function [4006,4014]" dest="function: function [4570,4578]"/>
  <match src="identifier: i [47327,47328]" dest="identifier: i [52518,52519]"/>
  <match src="member_expression [109838,109853]" dest="member_expression [38751,38766]"/>
  <match src="identifier: c [425,426]" dest="identifier: c [989,990]"/>
  <match src="parameter [46784,46796]" dest="parameter [51975,51987]"/>
  <match src="identifier: z [47461,47462]" dest="identifier: z [52652,52653]"/>
  <match src="(: ( [102540,102541]" dest="(: ( [31453,31454]"/>
  <match src="primitive_type [113321,113328]" dest="primitive_type [42234,42241]"/>
  <match src=",: , [9130,9131]" dest=",: , [9694,9695]"/>
  <match src="): ) [85200,85201]" dest="): ) [60584,60585]"/>
  <match src="primitive_type [86132,86139]" dest="primitive_type [55675,55682]"/>
  <match src="identifier: token1 [61558,61564]" dest="identifier: spender [60255,60262]"/>
  <match src="identifier: D256 [54940,54944]" dest="identifier: D256 [14053,14057]"/>
  <match src="]: ] [109876,109877]" dest="]: ] [38789,38790]"/>
  <match src="view: view [11614,11618]" dest="view: view [21612,21616]"/>
  <match src="(: ( [103455,103456]" dest="(: ( [32368,32369]"/>
  <match src="identifier: b [8391,8392]" dest="identifier: b [8955,8956]"/>
  <match src="parenthesized_expression [39031,39280]" dest="parenthesized_expression [44222,44471]"/>
  <match src="member_expression [108313,108327]" dest="member_expression [37226,37240]"/>
  <match src="): ) [108098,108099]" dest="): ) [37011,37012]"/>
  <match src="call_argument [98430,98447]" dest="call_argument [77080,77097]"/>
  <match src="(: ( [112860,112861]" dest="(: ( [41773,41774]"/>
  <match src="variable_declaration_statement [44503,44526]" dest="variable_declaration_statement [49694,49717]"/>
  <match src="identifier: a [10049,10050]" dest="identifier: a [10613,10614]"/>
  <match src="state_mutability [101472,101476]" dest="state_mutability [30385,30389]"/>
  <match src="internal: internal [107464,107472]" dest="internal: internal [36377,36385]"/>
  <match src="identifier: newImplementation [98374,98391]" dest="identifier: newImplementation [77024,77041]"/>
  <match src="identifier: provider [96611,96619]" dest="identifier: provider [27829,27837]"/>
  <match src="type_name [32730,32742]" dest="type_name [68357,68369]"/>
  <match src="}: } [113921,113922]" dest="}: } [42834,42835]"/>
  <match src="expression_statement [45152,45160]" dest="expression_statement [50343,50351]"/>
  <match src="(: ( [94579,94580]" dest="(: ( [75437,75438]"/>
  <match src="user_defined_type [6893,6897]" dest="user_defined_type [7457,7461]"/>
  <match src="identifier: isNominated [105426,105437]" dest="identifier: isNominated [34339,34350]"/>
  <match src="type_name [113520,113527]" dest="type_name [42433,42440]"/>
  <match src="primitive_type [71967,71971]" dest="primitive_type [25780,25784]"/>
  <match src="state_variable_declaration [53218,53266]" dest="state_variable_declaration [12331,12379]"/>
  <match src="&quot;: &quot; [90332,90333]" dest="&quot;: &quot; [81808,81809]"/>
  <match src="primitive_type [95531,95538]" dest="primitive_type [26749,26756]"/>
  <match src="type_name [21889,21896]" dest="type_name [64883,64890]"/>
  <match src="block_statement [1972,2005]" dest="block_statement [2536,2569]"/>
  <match src=".: . [6844,6845]" dest=".: . [7408,7409]"/>
  <match src="identifier: decrementBalanceOfPhantom [90747,90772]" dest="identifier: placeLock [80403,80412]"/>
  <match src="member_expression [113025,113042]" dest="member_expression [41938,41955]"/>
  <match src="(: ( [90013,90014]" dest="(: ( [55277,55278]"/>
  <match src="function_body [105621,105685]" dest="function_body [34534,34598]"/>
  <match src="call_argument [112220,112246]" dest="call_argument [41133,41159]"/>
  <match src="call_argument [86590,86594]" dest="call_argument [80377,80386]"/>
  <match src="(: ( [867,868]" dest="(: ( [1431,1432]"/>
  <match src="identifier: amount [109187,109193]" dest="identifier: amount [38100,38106]"/>
  <match src="parameter [28131,28138]" dest="parameter [61442,61449]"/>
  <match src="identifier: IDollar [96278,96285]" dest="identifier: IDollar [27496,27503]"/>
  <match src="identifier: Require [115232,115239]" dest="identifier: Require [70176,70183]"/>
  <match src="member_expression [107634,107648]" dest="member_expression [36547,36561]"/>
  <match src="identifier: reason [108092,108098]" dest="identifier: reason [37005,37011]"/>
  <match src="primitive_type [97863,97870]" dest="primitive_type [76513,76520]"/>
  <match src="return_statement [104950,104993]" dest="return_statement [33863,33906]"/>
  <match src="call_argument [40329,40337]" dest="call_argument [45520,45528]"/>
  <match src="): ) [108699,108700]" dest="): ) [37612,37613]"/>
  <match src="memory: memory [111356,111362]" dest="memory: memory [40269,40275]"/>
  <match src="number_literal: 1 [110947,110948]" dest="number_literal: 1 [39860,39861]"/>
  <match src="internal: internal [55711,55719]" dest="internal: internal [14824,14832]"/>
  <match src="identifier: Require [76427,76434]" dest="identifier: Require [80559,80566]"/>
  <match src="variable_declaration_statement [99019,99054]" dest="variable_declaration_statement [77669,77704]"/>
  <match src="string [874,906]" dest="string [1438,1470]"/>
  <match src="string: string [43313,43319]" dest="string: string [48504,48510]"/>
  <match src="identifier: payloadB [41204,41212]" dest="identifier: payloadB [46395,46403]"/>
  <match src="for: for [45355,45358]" dest="for: for [50546,50549]"/>
  <match src="return: return [55098,55104]" dest="return: return [14211,14217]"/>
  <match src="(: ( [103750,103751]" dest="(: ( [32663,32664]"/>
  <match src="identifier: amount1In [63463,63472]" dest="identifier: amount1In [20297,20306]"/>
  <match src="identifier: add [90056,90059]" dest="identifier: add [73930,73933]"/>
  <match src="return_statement [81238,81247]" dest="return_statement [61954,61963]"/>
  <match src="identifier: ASCII_ZERO [47845,47855]" dest="identifier: ASCII_ZERO [53036,53046]"/>
  <match src="type_name [47679,47686]" dest="type_name [52870,52877]"/>
  <match src="state_mutability [56533,56537]" dest="state_mutability [15646,15650]"/>
  <match src="identifier: epoch [109425,109430]" dest="identifier: epoch [38338,38343]"/>
  <match src=",: , [89240,89241]" dest=",: , [72336,72337]"/>
  <match src=",: , [40577,40578]" dest=",: , [45768,45769]"/>
  <match src="yul_evm_builtin [94568,94579]" dest="yul_evm_builtin [75426,75437]"/>
  <match src="identifier: div [30720,30723]" dest="identifier: mul [18831,18834]"/>
  <match src="function: function [109672,109680]" dest="function: function [38585,38593]"/>
  <match src="): ) [4071,4072]" dest="): ) [4635,4636]"/>
  <match src="identifier: value [90064,90069]" dest="identifier: value [73947,73952]"/>
  <match src="identifier: _getTransferValues [33571,33589]" dest="identifier: limit [67576,67581]"/>
  <match src="if_statement [40670,41070]" dest="if_statement [45861,46261]"/>
  <match src="identifier: getAdvanceIncentive [55576,55595]" dest="identifier: getAdvanceIncentive [14689,14708]"/>
  <match src=".: . [103511,103512]" dest=".: . [32424,32425]"/>
  <match src=".: . [44071,44072]" dest=".: . [49262,49263]"/>
  <match src="comment: // 200 epochs [52514,52527]" dest="comment: // 200 epochs [11627,11640]"/>
  <match src="parameter [115016,115031]" dest="parameter [69960,69975]"/>
  <match src="variable_declaration [45077,45091]" dest="variable_declaration [50268,50282]"/>
  <match src="expression_statement [90133,90154]" dest="expression_statement [73094,73115]"/>
  <match src="): ) [41904,41905]" dest="): ) [47095,47096]"/>
  <match src=",: , [59864,59865]" dest=",: , [24838,24839]"/>
  <match src="visibility [109098,109106]" dest="visibility [38011,38019]"/>
  <match src="event_paramater [62270,62280]" dest="event_paramater [19104,19114]"/>
  <match src="identifier: mul [102043,102046]" dest="identifier: mul [30956,30959]"/>
  <match src="): ) [112471,112472]" dest="): ) [41384,41385]"/>
  <match src="identifier: balance [100553,100560]" dest="identifier: balance [29466,29473]"/>
  <match src="call_expression [42142,42168]" dest="call_expression [47333,47359]"/>
  <match src="return_type_definition [55180,55209]" dest="return_type_definition [14293,14322]"/>
  <match src="uint256: uint256 [104423,104430]" dest="uint256: uint256 [33336,33343]"/>
  <match src="): ) [105308,105309]" dest="): ) [34221,34222]"/>
  <match src="address: address [41170,41177]" dest="address: address [46361,46368]"/>
  <match src="returns: returns [100855,100862]" dest="returns: returns [29768,29775]"/>
  <match src="primitive_type [88331,88338]" dest="primitive_type [71391,71398]"/>
  <match src="visibility [75253,75260]" dest="visibility [68550,68557]"/>
  <match src="(: ( [63641,63642]" dest="(: ( [20475,20476]"/>
  <match src="private: private [47703,47710]" dest="private: private [52894,52901]"/>
  <match src="): ) [114765,114766]" dest="): ) [69709,69710]"/>
  <match src=".: . [110778,110779]" dest=".: . [39691,39692]"/>
  <match src="returns: returns [8517,8524]" dest="returns: returns [9081,9088]"/>
  <match src="public: public [102854,102860]" dest="public: public [31767,31773]"/>
  <match src="member_expression [102901,102913]" dest="member_expression [31814,31826]"/>
  <match src="call_expression [89355,89369]" dest="call_expression [58820,58834]"/>
  <match src="type_name [81347,81354]" dest="type_name [71803,71810]"/>
  <match src="event_paramater [88525,88538]" dest="event_paramater [60264,60277]"/>
  <match src="{: { [112,113]" dest="{: { [676,677]"/>
  <match src="): ) [56566,56567]" dest="): ) [15679,15680]"/>
  <match src="call_expression [8376,8407]" dest="call_expression [8940,8971]"/>
  <match src="): ) [105482,105483]" dest="): ) [34395,34396]"/>
  <match src=".: . [111554,111555]" dest=".: . [40467,40468]"/>
  <match src="=: = [38633,38634]" dest="=: = [43824,43825]"/>
  <match src="visibility [15984,15991]" dest="visibility [18325,18332]"/>
  <match src="state_mutability [56221,56225]" dest="state_mutability [15334,15338]"/>
  <match src=".: . [39080,39081]" dest=".: . [44271,44272]"/>
  <match src="primitive_type [39976,39983]" dest="primitive_type [45167,45174]"/>
  <match src="call_expression [108963,108996]" dest="call_expression [37876,37909]"/>
  <match src="identifier: amount [113149,113155]" dest="identifier: amount [42062,42068]"/>
  <match src="(: ( [8107,8108]" dest="(: ( [8671,8672]"/>
  <match src="using_directive [27514,27545]" dest="using_directive [16683,16714]"/>
  <match src="=: = [47463,47464]" dest="=: = [52654,52655]"/>
  <match src="(: ( [91163,91164]" dest="(: ( [81359,81360]"/>
  <match src=",: , [39894,39895]" dest=",: , [45085,45086]"/>
  <match src="function_definition [9229,9367]" dest="function_definition [9793,9931]"/>
  <match src="call_expression [89910,89990]" dest="call_expression [72854,72937]"/>
  <match src="type_name [94065,94069]" dest="type_name [74923,74927]"/>
  <match src="call_argument [90142,90152]" dest="call_argument [73103,73113]"/>
  <match src="function_definition [71978,72026]" dest="function_definition [25791,25839]"/>
  <match src="identifier: Account [115090,115097]" dest="identifier: Account [70034,70041]"/>
  <match src="(: ( [81819,81820]" dest="(: ( [61730,61731]"/>
  <match src=",: , [109722,109723]" dest=",: , [38635,38636]"/>
  <match src="identifier: getDAOExitLockupEpochs [55686,55708]" dest="identifier: getDAOExitLockupEpochs [14799,14821]"/>
  <match src="call_argument [91322,91332]" dest="call_argument [79065,79075]"/>
  <match src="external: external [62486,62494]" dest="external: external [19320,19328]"/>
  <match src="array_access [109950,109970]" dest="array_access [38863,38883]"/>
  <match src="identifier: value [89947,89952]" dest="identifier: value [72891,72896]"/>
  <match src="event_paramater [88371,88384]" dest="event_paramater [71431,71444]"/>
  <match src="comment: /**      * @dev Returns the amount of tokens owned by `account`.      */ [11643,11715]" dest="comment: /**      * @dev Returns the amount of tokens owned by `account`.      */ [21641,21713]"/>
  <match src=".: . [109141,109142]" dest=".: . [38054,38055]"/>
  <match src="parameter [109724,109737]" dest="parameter [38637,38650]"/>
  <match src=".: . [108858,108859]" dest=".: . [37771,37772]"/>
  <match src="uint256: uint256 [88540,88547]" dest="uint256: uint256 [83248,83255]"/>
  <match src=",: , [88523,88524]" dest=",: , [78890,78891]"/>
  <match src=".: . [108343,108344]" dest=".: . [37256,37257]"/>
  <match src="call_expression [101614,101622]" dest="call_expression [30527,30535]"/>
  <match src="call_expression [40395,40414]" dest="call_expression [45586,45605]"/>
  <match src="primitive_type [103145,103152]" dest="primitive_type [32058,32065]"/>
  <match src="primitive_type [63136,63143]" dest="primitive_type [19970,19977]"/>
  <match src="parameter [102349,102364]" dest="parameter [31262,31277]"/>
  <match src="call_expression [66699,66750]" dest="call_expression [73815,73887]"/>
  <match src="): ) [54792,54793]" dest="): ) [13905,13906]"/>
  <match src="call_expression [6079,6100]" dest="call_expression [6643,6664]"/>
  <match src="primitive_type [64479,64486]" dest="primitive_type [21313,21320]"/>
  <match src="byte: byte [47082,47086]" dest="byte: byte [52273,52277]"/>
  <match src="primitive_type [64251,64255]" dest="primitive_type [21085,21089]"/>
  <match src=".: . [107519,107520]" dest=".: . [36432,36433]"/>
  <match src="identifier: reason [8400,8406]" dest="identifier: reason [8964,8970]"/>
  <match src="(: ( [7291,7292]" dest="(: ( [7855,7856]"/>
  <match src="(: ( [101462,101463]" dest="(: ( [30375,30376]"/>
  <match src="identifier: stringifyTruncated [42061,42079]" dest="identifier: stringifyTruncated [47252,47270]"/>
  <match src="if_statement [47789,47868]" dest="if_statement [52980,53059]"/>
  <match src="function_definition [100925,101015]" dest="function_definition [29838,29928]"/>
  <match src="call_expression [46960,46973]" dest="call_expression [52151,52164]"/>
  <match src="call_argument [23025,23031]" dest="call_argument [54995,55001]"/>
  <match src="uint256: uint256 [101894,101901]" dest="uint256: uint256 [30807,30814]"/>
  <match src="): ) [62426,62427]" dest="): ) [19260,19261]"/>
  <match src="primitive_type [96476,96483]" dest="primitive_type [27694,27701]"/>
  <match src="identifier: must [41260,41264]" dest="identifier: must [46451,46455]"/>
  <match src="}: } [7264,7265]" dest="}: } [7828,7829]"/>
  <match src=",: , [62866,62867]" dest=",: , [19700,19701]"/>
  <match src="function: function [13477,13485]" dest="function: function [23475,23483]"/>
  <match src="call_expression [39527,39807]" dest="call_expression [44718,44998]"/>
  <match src="primitive_type [53334,53341]" dest="primitive_type [12447,12454]"/>
  <match src="type_name [27532,27544]" dest="type_name [16701,16713]"/>
  <match src="user_defined_type [72725,72732]" dest="user_defined_type [66563,66574]"/>
  <match src="identifier: EpochStrategy [54487,54500]" dest="identifier: EpochStrategy [13600,13613]"/>
  <match src="identifier: allowance [12369,12378]" dest="identifier: allowance [22367,22376]"/>
  <match src=".: . [113604,113605]" dest=".: . [42517,42518]"/>
  <match src="=: = [113777,113778]" dest="=: = [42690,42691]"/>
  <match src="visibility [63644,63652]" dest="visibility [20478,20486]"/>
  <match src="): ) [59817,59818]" dest="): ) [24791,24792]"/>
  <match src="uint256: uint256 [7507,7514]" dest="uint256: uint256 [8071,8078]"/>
  <match src="identifier: Status [102395,102401]" dest="identifier: Status [31308,31314]"/>
  <match src="internal: internal [112967,112975]" dest="internal: internal [41880,41888]"/>
  <match src="constant: constant [52477,52485]" dest="constant: constant [11590,11598]"/>
  <match src="member_expression [88640,88650]" dest="member_expression [73563,73573]"/>
  <match src="(: ( [8729,8730]" dest="(: ( [9293,9294]"/>
  <match src="visibility [64056,64064]" dest="visibility [20890,20898]"/>
  <match src="identifier: to [64401,64403]" dest="identifier: to [21235,21237]"/>
  <match src="bytes: bytes [44046,44051]" dest="bytes: bytes [49237,49242]"/>
  <match src="primitive_type [38943,38950]" dest="primitive_type [44134,44141]"/>
  <match src="constant: constant [88115,88123]" dest="constant: constant [71131,71139]"/>
  <match src="visibility [110135,110143]" dest="visibility [39048,39056]"/>
  <match src="&quot;: &quot; [30898,30899]" dest="&quot;: &quot; [67341,67342]"/>
  <match src="): ) [101947,101948]" dest="): ) [30860,30861]"/>
  <match src="identifier: spender [110648,110655]" dest="identifier: spender [39561,39568]"/>
  <match src="assignment_expression [109392,109485]" dest="assignment_expression [38305,38398]"/>
  <match src="(: ( [40253,40254]" dest="(: ( [45444,45445]"/>
  <match src="event_paramater [62171,62194]" dest="event_paramater [19005,19028]"/>
  <match src="(: ( [39218,39219]" dest="(: ( [44409,44410]"/>
  <match src="constant: constant [52664,52672]" dest="constant: constant [11777,11785]"/>
  <match src="call_expression [7232,7266]" dest="call_expression [7796,7830]"/>
  <match src="): ) [40812,40813]" dest="): ) [46003,46004]"/>
  <match src="call_expression [6221,6249]" dest="call_expression [6785,6813]"/>
  <match src="visibility [27704,27711]" dest="visibility [58571,58578]"/>
  <match src="): ) [62637,62638]" dest="): ) [19471,19472]"/>
  <match src="parameter [62868,62878]" dest="parameter [19702,19712]"/>
  <match src="}: } [47867,47868]" dest="}: } [53058,53059]"/>
  <match src="member_expression [112482,112517]" dest="member_expression [41395,41430]"/>
  <match src="): ) [111715,111716]" dest="): ) [40628,40629]"/>
  <match src="struct_member [96602,96620]" dest="struct_member [27820,27838]"/>
  <match src="while: while [45101,45106]" dest="while: while [50292,50297]"/>
  <match src="bool: bool [94065,94069]" dest="bool: bool [74923,74927]"/>
  <match src="return_statement [2656,2703]" dest="return_statement [3220,3267]"/>
  <match src="primitive_type [42529,42533]" dest="primitive_type [47720,47724]"/>
  <match src="function_definition [55677,55789]" dest="function_definition [14790,14902]"/>
  <match src=".: . [110199,110200]" dest=".: . [39112,39113]"/>
  <match src="member_expression [109151,109186]" dest="member_expression [38064,38099]"/>
  <match src="event: event [62213,62218]" dest="event: event [19047,19052]"/>
  <match src="indexed: indexed [88226,88233]" dest="indexed: indexed [71245,71252]"/>
  <match src=".: . [109990,109991]" dest=".: . [38903,38904]"/>
  <match src="member_expression [58031,58057]" dest="member_expression [54535,54556]"/>
  <match src="type_name [98366,98373]" dest="type_name [77016,77023]"/>
  <match src="identifier: i [104258,104259]" dest="identifier: i [33171,33172]"/>
  <match src="(: ( [47092,47093]" dest="(: ( [52283,52284]"/>
  <match src="identifier: lessDai [91435,91442]" dest="identifier: lessRedeemable [60832,60846]"/>
  <match src="uint256: uint256 [89436,89443]" dest="uint256: uint256 [72507,72514]"/>
  <match src="uint256: uint256 [105331,105338]" dest="uint256: uint256 [34244,34251]"/>
  <match src="type_name [838,845]" dest="type_name [1402,1409]"/>
  <match src="): ) [55976,55977]" dest="): ) [15089,15090]"/>
  <match src="(: ( [103063,103064]" dest="(: ( [31976,31977]"/>
  <match src="parenthesized_expression [41973,42483]" dest="parenthesized_expression [47164,47674]"/>
  <match src="uint256: uint256 [75895,75902]" dest="uint256: uint256 [73125,73132]"/>
  <match src="(: ( [24246,24247]" dest="(: ( [59921,59922]"/>
  <match src="user_defined_type [56547,56559]" dest="user_defined_type [15660,15672]"/>
  <match src="(: ( [63236,63237]" dest="(: ( [20070,20071]"/>
  <match src="(: ( [39875,39876]" dest="(: ( [45066,45067]"/>
  <match src="identifier: current [110935,110942]" dest="identifier: current [39848,39855]"/>
  <match src="function_definition [106848,106951]" dest="function_definition [35761,35864]"/>
  <match src="parameter [6893,6909]" dest="parameter [7457,7473]"/>
  <match src="function_definition [63958,64019]" dest="function_definition [20792,20853]"/>
  <match src="returns: returns [12070,12077]" dest="returns: returns [22068,22075]"/>
  <match src="): ) [7595,7596]" dest="): ) [8159,8160]"/>
  <match src="state_mutability [8090,8094]" dest="state_mutability [8654,8658]"/>
  <match src="state_mutability [81124,81128]" dest="state_mutability [61631,61635]"/>
  <match src="parenthesized_expression [40701,41059]" dest="parenthesized_expression [45892,46250]"/>
  <match src="{: { [56418,56419]" dest="{: { [15531,15532]"/>
  <match src="call_argument [36020,36021]" dest="call_argument [61808,61809]"/>
  <match src="call_expression [110987,111044]" dest="call_expression [39900,39957]"/>
  <match src="identifier: account [102057,102064]" dest="identifier: account [30970,30977]"/>
  <match src="state_mutability [55327,55331]" dest="state_mutability [14440,14444]"/>
  <match src="identifier: recovered [58845,58854]" dest="identifier: redeemAmount [64515,64527]"/>
  <match src="parameter [62961,62968]" dest="parameter [19795,19802]"/>
  <match src="parameter [1723,1730]" dest="parameter [2287,2294]"/>
  <match src="identifier: DAO_EXIT_LOCKUP_EPOCHS [53587,53609]" dest="identifier: DAO_EXIT_LOCKUP_EPOCHS [12700,12722]"/>
  <match src="identifier: b [9011,9012]" dest="identifier: b [9575,9576]"/>
  <match src="constant: constant [52845,52853]" dest="constant: constant [11958,11966]"/>
  <match src="variable_declaration_statement [75301,75450]" dest="variable_declaration_statement [68050,68139]"/>
  <match src="bytes: bytes [45235,45240]" dest="bytes: bytes [50426,50431]"/>
  <match src="uint256: uint256 [112393,112400]" dest="uint256: uint256 [41306,41313]"/>
  <match src="identifier: incrementBalanceOfBonded [91684,91708]" dest="identifier: redeemToAccount [64629,64644]"/>
  <match src="identifier: slot [99027,99031]" dest="identifier: slot [77677,77681]"/>
  <match src="primitive_type [46269,46276]" dest="primitive_type [51460,51467]"/>
  <match src="uint256: uint256 [27696,27703]" dest="uint256: uint256 [83162,83169]"/>
  <match src="(: ( [7377,7378]" dest="(: ( [7941,7942]"/>
  <match src="function_body [6373,6436]" dest="function_body [6937,7000]"/>
  <match src="(: ( [54500,54501]" dest="(: ( [13613,13614]"/>
  <match src="identifier: dollar [80345,80351]" dest="identifier: dollar [71966,71972]"/>
  <match src="call_expression [108054,108099]" dest="call_expression [36967,37012]"/>
  <match src="identifier: msg [90206,90209]" dest="identifier: msg [73168,73171]"/>
  <match src="parameter [103591,103598]" dest="parameter [32504,32511]"/>
  <match src="memory: memory [9004,9010]" dest="memory: memory [9568,9574]"/>
  <match src="{: { [19813,19814]" dest="{: { [65245,65246]"/>
  <match src="identifier: i [45533,45534]" dest="identifier: i [50724,50725]"/>
  <match src="type_name [101169,101176]" dest="type_name [30082,30089]"/>
  <match src="number_literal: 0 [81245,81246]" dest="number_literal: 0 [61961,61962]"/>
  <match src="(: ( [108609,108610]" dest="(: ( [37522,37523]"/>
  <match src="primitive_type [9817,9824]" dest="primitive_type [10381,10388]"/>
  <match src="identifier: externalAmount [32643,32657]" dest="identifier: debtRatioUpperBound [17236,17255]"/>
  <match src="(: ( [41548,41549]" dest="(: ( [46739,46740]"/>
  <match src="call_expression [75653,75721]" dest="call_expression [68640,68658]"/>
  <match src="return_type_definition [81129,81146]" dest="return_type_definition [61636,61653]"/>
  <match src=".: . [110026,110027]" dest=".: . [38939,38940]"/>
  <match src="primitive_type [45211,45216]" dest="primitive_type [50402,50407]"/>
  <match src="assembly_statement [105806,105858]" dest="assembly_statement [34719,34771]"/>
  <match src="uint256: uint256 [106882,106889]" dest="uint256: uint256 [35795,35802]"/>
  <match src="expression_statement [108026,108100]" dest="expression_statement [36939,37013]"/>
  <match src="identifier: D256 [8865,8869]" dest="identifier: D256 [9429,9433]"/>
  <match src="contract_body [95318,95622]" dest="contract_body [26536,26840]"/>
  <match src="}: } [102517,102518]" dest="}: } [31430,31431]"/>
  <match src="): ) [81820,81821]" dest="): ) [61731,61732]"/>
  <match src="function: function [7279,7287]" dest="function: function [7843,7851]"/>
  <match src="primitive_type [353,360]" dest="primitive_type [917,924]"/>
  <match src="(: ( [12433,12434]" dest="(: ( [22431,22432]"/>
  <match src="variable_declaration_statement [90164,90218]" dest="variable_declaration_statement [62585,62640]"/>
  <match src="call_argument [7957,7991]" dest="call_argument [8521,8555]"/>
  <match src="call_argument [110947,110948]" dest="call_argument [39860,39861]"/>
  <match src="returns: returns [100755,100762]" dest="returns: returns [29668,29675]"/>
  <match src="comment: /*     Copyright 2020 Reflective Dollar Devs, based on the works of the Dynamic Dollar Devs and the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [87136,87811]" dest="comment: /*     Copyright 2020 Reflective Dollar Devs, based on the works of the Dynamic Dollar Devs and the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [70360,71035]"/>
  <match src="(: ( [58113,58114]" dest="(: ( [54573,54574]"/>
  <match src="uint256: uint256 [108481,108488]" dest="uint256: uint256 [37394,37401]"/>
  <match src="identifier: reason [39934,39940]" dest="identifier: reason [45125,45131]"/>
  <match src="}: } [105857,105858]" dest="}: } [34770,34771]"/>
  <match src="member_expression [112193,112207]" dest="member_expression [41106,41120]"/>
  <match src="if: if [112092,112094]" dest="if: if [41005,41007]"/>
  <match src="type_name [62148,62155]" dest="type_name [18982,18989]"/>
  <match src="parameter [62451,62456]" dest="parameter [19285,19290]"/>
  <match src="primitive_type [110471,110478]" dest="primitive_type [39384,39391]"/>
  <match src="call_argument [2050,2060]" dest="call_argument [2614,2624]"/>
  <match src="function_definition [55440,55561]" dest="function_definition [14553,14674]"/>
  <match src="}: } [95864,95865]" dest="}: } [27082,27083]"/>
  <match src="view: view [100204,100208]" dest="view: view [29117,29121]"/>
  <match src="&quot;: &quot; [92772,92773]" dest="&quot;: &quot; [79634,79635]"/>
  <match src="identifier: totalSupply [101623,101634]" dest="identifier: totalSupply [30536,30547]"/>
  <match src="(: ( [98925,98926]" dest="(: ( [77575,77576]"/>
  <match src="return_statement [54718,54748]" dest="return_statement [13831,13861]"/>
  <match src="type_name [113558,113565]" dest="type_name [42471,42478]"/>
  <match src="): ) [47855,47856]" dest="): ) [53046,53047]"/>
  <match src="if: if [44950,44952]" dest="if: if [50141,50143]"/>
  <match src=".: . [110373,110374]" dest=".: . [39286,39287]"/>
  <match src="): ) [21920,21921]" dest="): ) [64914,64915]"/>
  <match src="comment: // 36 epochs fluid [53616,53634]" dest="comment: // 36 epochs fluid [12729,12747]"/>
  <match src="string [30863,30899]" dest="string [67317,67342]"/>
  <match src="identifier: balanceOfBonded [101840,101855]" dest="identifier: balanceOfBonded [30753,30768]"/>
  <match src="string_literal [19191,19230]" dest="string_literal [73300,73336]"/>
  <match src="return_statement [54255,54266]" dest="return_statement [13368,13379]"/>
  <match src="(: ( [106806,106807]" dest="(: ( [35719,35720]"/>
  <match src="parameter [103751,103758]" dest="parameter [32664,32671]"/>
  <match src="array_access [104957,104985]" dest="array_access [33870,33898]"/>
  <match src="identifier: nextEpochStart [103553,103567]" dest="identifier: nextEpochStart [32466,32480]"/>
  <match src="}: } [7635,7636]" dest="}: } [8199,8200]"/>
  <match src="parameter [86141,86148]" dest="parameter [55684,55691]"/>
  <match src="call_expression [91278,91415]" dest="call_expression [80758,80856]"/>
  <match src="function_body [88662,88853]" dest="function_body [83311,83457]"/>
  <match src="(: ( [111985,111986]" dest="(: ( [40898,40899]"/>
  <match src="): ) [90497,90498]" dest="): ) [73205,73206]"/>
  <match src="return: return [103164,103170]" dest="return: return [32077,32083]"/>
  <match src="uint256: uint256 [52736,52743]" dest="uint256: uint256 [11849,11856]"/>
  <match src="{: { [55210,55211]" dest="{: { [14323,14324]"/>
  <match src="identifier: ORACLE_RESERVE_MINIMUM [54362,54384]" dest="identifier: ORACLE_RESERVE_MINIMUM [13475,13497]"/>
  <match src="identifier: COLON [39619,39624]" dest="identifier: COLON [44810,44815]"/>
  <match src="function: function [12008,12016]" dest="function: function [22006,22014]"/>
  <match src="(: ( [44468,44469]" dest="(: ( [49659,49660]"/>
  <match src=",: , [63589,63590]" dest=",: , [20423,20424]"/>
  <match src="identifier: State [96796,96801]" dest="identifier: State [28014,28019]"/>
  <match src="&quot;: &quot; [20566,20567]" dest="&quot;: &quot; [64190,64191]"/>
  <match src="identifier: value [90911,90916]" dest="identifier: value [73468,73473]"/>
  <match src="identifier: value [8161,8166]" dest="identifier: value [8725,8730]"/>
  <match src="): ) [101768,101769]" dest="): ) [30681,30682]"/>
  <match src="type_name [81138,81145]" dest="type_name [61645,61652]"/>
  <match src="): ) [54706,54707]" dest="): ) [13819,13820]"/>
  <match src="}: } [41736,41737]" dest="}: } [46927,46928]"/>
  <match src=".: . [112809,112810]" dest=".: . [41722,41723]"/>
  <match src="): ) [12409,12410]" dest="): ) [22407,22408]"/>
  <match src="(: ( [41348,41349]" dest="(: ( [46539,46540]"/>
  <match src="string_literal [2673,2701]" dest="string_literal [3237,3265]"/>
  <match src="]: ] [100454,100455]" dest="]: ] [29367,29368]"/>
  <match src="type_name [38921,38928]" dest="type_name [44112,44119]"/>
  <match src="string [61379,61422]" dest="string [79285,79314]"/>
  <match src="uint256: uint256 [55853,55860]" dest="uint256: uint256 [14966,14973]"/>
  <match src=".: . [108945,108946]" dest=".: . [37858,37859]"/>
  <match src="call_argument [109882,109888]" dest="call_argument [38795,38801]"/>
  <match src="=: = [52877,52878]" dest="=: = [11990,11991]"/>
  <match src="bytes32: bytes32 [88099,88106]" dest="bytes32: bytes32 [71115,71122]"/>
  <match src="primitive_type [44819,44824]" dest="primitive_type [50010,50015]"/>
  <match src="call_expression [6843,6854]" dest="call_expression [7407,7418]"/>
  <match src="block_statement [44227,44768]" dest="block_statement [49418,49959]"/>
  <match src="identifier: currentLock [113566,113577]" dest="identifier: currentLock [42479,42490]"/>
  <match src="function_definition [107549,107702]" dest="function_definition [36462,36615]"/>
  <match src="external: external [64435,64443]" dest="external: external [21269,21277]"/>
  <match src="array_access [110608,110656]" dest="array_access [39521,39569]"/>
  <match src="(: ( [113455,113456]" dest="(: ( [42368,42369]"/>
  <match src="identifier: withdraw [88868,88876]" dest="identifier: withdraw [72234,72242]"/>
  <match src="identifier: totalBonded [81206,81217]" dest="identifier: timeIntoEpoch [61906,61919]"/>
  <match src="function: function [90083,90091]" dest="function: function [73014,73022]"/>
  <match src="type_name [80558,80565]" dest="type_name [82065,82072]"/>
  <match src=".: . [104240,104241]" dest=".: . [33153,33154]"/>
  <match src="identifier: amount [109068,109074]" dest="identifier: amount [37981,37987]"/>
  <match src="user_defined_type [112595,112609]" dest="user_defined_type [41508,41522]"/>
  <match src="(: ( [41095,41096]" dest="(: ( [46286,46287]"/>
  <match src="member_expression [80345,80382]" dest="member_expression [71966,72003]"/>
  <match src="return_statement [105084,105128]" dest="return_statement [33997,34041]"/>
  <match src="function_definition [107255,107414]" dest="function_definition [36168,36327]"/>
  <match src="&quot;: &quot; [21221,21222]" dest="&quot;: &quot; [65518,65519]"/>
  <match src="call_argument [6241,6245]" dest="call_argument [6805,6809]"/>
  <match src="identifier: periodFor [113668,113677]" dest="identifier: periodFor [42581,42590]"/>
  <match src="identifier: amount [108084,108090]" dest="identifier: amount [36997,37003]"/>
  <match src="string_literal [114877,114898]" dest="string_literal [69821,69842]"/>
  <match src="=: = [54139,54140]" dest="=: = [13252,13253]"/>
  <match src="internal: internal [107323,107331]" dest="internal: internal [36236,36244]"/>
  <match src="identifier: payloadC [41891,41899]" dest="identifier: payloadC [47082,47090]"/>
  <match src=".: . [9598,9599]" dest=".: . [10162,10163]"/>
  <match src="call_argument [92293,92323]" dest="call_argument [57877,57900]"/>
  <match src="]: ] [109140,109141]" dest="]: ] [38053,38054]"/>
  <match src="uint256: uint256 [1324,1331]" dest="uint256: uint256 [1888,1895]"/>
  <match src="uint256: uint256 [29583,29590]" dest="uint256: uint256 [54003,54010]"/>
  <match src="): ) [101738,101739]" dest="): ) [30651,30652]"/>
  <match src="{: { [62127,62128]" dest="{: { [18961,18962]"/>
  <match src="): ) [101042,101043]" dest="): ) [29955,29956]"/>
  <match src="[: [ [104071,104072]" dest="[: [ [32984,32985]"/>
  <match src="returns: returns [101477,101484]" dest="returns: returns [30390,30397]"/>
  <match src="string_literal [58779,58798]" dest="string_literal [55003,55047]"/>
  <match src="address: address [108800,108807]" dest="address: address [37713,37720]"/>
  <match src="identifier: require [98879,98886]" dest="identifier: require [77529,77536]"/>
  <match src="identifier: coupons [95495,95502]" dest="identifier: coupons [26713,26720]"/>
  <match src="struct_member [95918,95934]" dest="struct_member [27136,27152]"/>
  <match src="call_expression [101614,101653]" dest="call_expression [30527,30566]"/>
  <match src=",: , [43522,43523]" dest=",: , [48713,48714]"/>
  <match src="(: ( [9983,9984]" dest="(: ( [10547,10548]"/>
  <match src="identifier: account [108868,108875]" dest="identifier: account [37781,37788]"/>
  <match src="identifier: debt [107649,107653]" dest="identifier: debt [36562,36566]"/>
  <match src="member_expression [90622,90632]" dest="member_expression [72136,72146]"/>
  <match src=".: . [108977,108978]" dest=".: . [37890,37891]"/>
  <match src="contract_body [11505,14054]" dest="contract_body [21503,24052]"/>
  <match src="}: } [41730,41731]" dest="}: } [46921,46922]"/>
  <match src=",: , [106993,106994]" dest=",: , [35906,35907]"/>
  <match src="(: ( [23764,23765]" dest="(: ( [80068,80069]"/>
  <match src="identifier: payloadA [39399,39407]" dest="identifier: payloadA [44590,44598]"/>
  <match src="(: ( [7669,7670]" dest="(: ( [8233,8234]"/>
  <match src="uint256: uint256 [109060,109067]" dest="uint256: uint256 [37973,37980]"/>
  <match src="revert_statement [41280,41721]" dest="revert_statement [46471,46912]"/>
  <match src="using_directive [106585,106612]" dest="using_directive [35498,35525]"/>
  <match src="identifier: INITIAL_COUPON_REDEMPTION_PENALTY [56294,56327]" dest="identifier: INITIAL_COUPON_REDEMPTION_PENALTY [15407,15440]"/>
  <match src="function: function [101441,101449]" dest="function: function [30354,30362]"/>
  <match src="): ) [19892,19893]" dest="): ) [65332,65333]"/>
  <match src="type_name [111781,111788]" dest="type_name [40694,40701]"/>
  <match src="primitive_type [113337,113343]" dest="primitive_type [42250,42256]"/>
  <match src="returns: returns [101752,101759]" dest="returns: returns [30665,30672]"/>
  <match src="address: address [41831,41838]" dest="address: address [47022,47029]"/>
  <match src="identifier: candidate [105167,105176]" dest="identifier: candidate [34080,34089]"/>
  <match src=".: . [104086,104087]" dest=".: . [32999,33000]"/>
  <match src="primitive_type [82820,82827]" dest="primitive_type [83111,83118]"/>
  <match src="return_type_definition [7909,7930]" dest="return_type_definition [8473,8494]"/>
  <match src=".: . [113220,113221]" dest=".: . [42133,42134]"/>
  <match src="call_argument [66724,66749]" dest="call_argument [73855,73886]"/>
  <match src="function_definition [39303,39856]" dest="function_definition [44494,45047]"/>
  <match src="): ) [101493,101494]" dest="): ) [30406,30407]"/>
  <match src="identifier: amount [109652,109658]" dest="identifier: amount [38565,38571]"/>
  <match src="parameter [8847,8863]" dest="parameter [9411,9427]"/>
  <match src="visibility [97871,97878]" dest="visibility [76521,76528]"/>
  <match src="pure: pure [54685,54689]" dest="pure: pure [13798,13802]"/>
  <match src="&quot;: &quot; [19972,19973]" dest="&quot;: &quot; [65420,65421]"/>
  <match src="identifier: token0 [63743,63749]" dest="identifier: token0 [20577,20583]"/>
  <match src="internal: internal [110332,110340]" dest="internal: internal [39245,39253]"/>
  <match src="primitive_type [109342,109349]" dest="primitive_type [38255,38262]"/>
  <match src="(: ( [110283,110284]" dest="(: ( [39196,39197]"/>
  <match src="}: } [103419,103420]" dest="}: } [32332,32333]"/>
  <match src="type_name [46964,46969]" dest="type_name [52155,52160]"/>
  <match src="expression_statement [108313,108371]" dest="expression_statement [37226,37284]"/>
  <match src="inheritance_specifier [106564,106569]" dest="inheritance_specifier [35477,35482]"/>
  <match src="identifier: amount [107158,107164]" dest="identifier: amount [36071,36077]"/>
  <match src=".: . [108040,108041]" dest=".: . [36953,36954]"/>
  <match src="assignment_expression [107857,107922]" dest="assignment_expression [36770,36835]"/>
  <match src="type_name [1689,1696]" dest="type_name [2253,2260]"/>
  <match src="comment: // addresses are &quot;0x&quot; followed by 20 bytes of data which take up 2 characters each [45893,45975]" dest="comment: // addresses are &quot;0x&quot; followed by 20 bytes of data which take up 2 characters each [51084,51166]"/>
  <match src=".: . [104713,104714]" dest=".: . [33626,33627]"/>
  <match src="pure: pure [7360,7364]" dest="pure: pure [7924,7928]"/>
  <match src="member_expression [42019,42035]" dest="member_expression [47210,47226]"/>
  <match src="number_literal: 154e16 [52579,52585]" dest="number_literal: 154e16 [11692,11698]"/>
  <match src="call_argument [60988,60995]" dest="call_argument [54117,54124]"/>
  <match src="}: } [56836,56837]" dest="}: } [15949,15950]"/>
  <match src="member_expression [107366,107387]" dest="member_expression [36279,36300]"/>
  <match src="internal: internal [9292,9300]" dest="internal: internal [9856,9864]"/>
  <match src="uint256: uint256 [6729,6736]" dest="uint256: uint256 [7293,7300]"/>
  <match src="identifier: oracle [100834,100840]" dest="identifier: oracle [29747,29753]"/>
  <match src="identifier: period [112401,112407]" dest="identifier: period [41314,41320]"/>
  <match src=".: . [112456,112457]" dest=".: . [41369,41370]"/>
  <match src="(: ( [91670,91671]" dest="(: ( [73674,73675]"/>
  <match src="member_expression [7048,7062]" dest="member_expression [7612,7626]"/>
  <match src="type_name [100520,100527]" dest="type_name [29433,29440]"/>
  <match src="pure: pure [55839,55843]" dest="pure: pure [14952,14956]"/>
  <match src="if_statement [112092,112159]" dest="if_statement [41005,41072]"/>
  <match src="}: } [41069,41070]" dest="}: } [46260,46261]"/>
  <match src="revert: revert [41280,41286]" dest="revert: revert [46471,46477]"/>
  <match src="identifier: D256 [7837,7841]" dest="identifier: D256 [8401,8405]"/>
  <match src="uint: uint [62779,62783]" dest="uint: uint [19613,19617]"/>
  <match src="primitive_type [64344,64349]" dest="primitive_type [21178,21183]"/>
  <match src="call_expression [116809,116817]" dest="call_expression [55145,55153]"/>
  <match src="primitive_type [63573,63580]" dest="primitive_type [20407,20414]"/>
  <match src="event_paramater [106633,106653]" dest="event_paramater [35546,35566]"/>
  <match src="return_type_definition [9161,9175]" dest="return_type_definition [9725,9739]"/>
  <match src="[: [ [109132,109133]" dest="[: [ [38045,38046]"/>
  <match src=".: . [107348,107349]" dest=".: . [36261,36262]"/>
  <match src="uint256: uint256 [52984,52991]" dest="uint256: uint256 [12097,12104]"/>
  <match src=".: . [96706,96707]" dest=".: . [27924,27925]"/>
  <match src="identifier: temp [7759,7763]" dest="identifier: temp [8323,8327]"/>
  <match src=",: , [869,870]" dest=",: , [1433,1434]"/>
  <match src="variable_declaration [1382,1391]" dest="variable_declaration [1946,1955]"/>
  <match src="identifier: add [109474,109477]" dest="identifier: add [38387,38390]"/>
  <match src="function_definition [62820,62904]" dest="function_definition [19654,19738]"/>
  <match src="): ) [27288,27289]" dest="): ) [55497,55498]"/>
  <match src="function_definition [100268,100342]" dest="function_definition [29181,29255]"/>
  <match src=":=: := [94565,94567]" dest=":=: := [75423,75425]"/>
  <match src="type_name [106773,106780]" dest="type_name [35686,35693]"/>
  <match src="call_argument [88693,88703]" dest="call_argument [72786,72796]"/>
  <match src="identifier: BASE [6849,6853]" dest="identifier: BASE [7413,7417]"/>
  <match src="): ) [89408,89409]" dest="): ) [81270,81271]"/>
  <match src="public: public [100384,100390]" dest="public: public [29297,29303]"/>
  <match src="call_argument [109187,109193]" dest="call_argument [38100,38106]"/>
  <match src="identifier: owner [12387,12392]" dest="identifier: owner [22385,22390]"/>
  <match src="identifier: owner [62615,62620]" dest="identifier: owner [19449,19454]"/>
  <match src="uint256: uint256 [95894,95901]" dest="uint256: uint256 [27112,27119]"/>
  <match src="(: ( [40963,40964]" dest="(: ( [46154,46155]"/>
  <match src="primitive_type [47311,47318]" dest="primitive_type [52502,52509]"/>
  <match src="visibility [111652,111660]" dest="visibility [40565,40573]"/>
  <match src="identifier: candidate [112799,112808]" dest="identifier: candidate [41712,41721]"/>
  <match src="}: } [55788,55789]" dest="}: } [14901,14902]"/>
  <match src=".: . [107662,107663]" dest=".: . [36575,36576]"/>
  <match src="type_name [6305,6312]" dest="type_name [6869,6876]"/>
  <match src="returns: returns [55070,55077]" dest="returns: returns [14183,14190]"/>
  <match src="function: function [106736,106744]" dest="function: function [35649,35657]"/>
  <match src="(: ( [102461,102462]" dest="(: ( [31374,31375]"/>
  <match src="return_statement [47819,47858]" dest="return_statement [53010,53049]"/>
  <match src="parameter [62738,62742]" dest="parameter [19572,19576]"/>
  <match src="{: { [10127,10128]" dest="{: { [10691,10692]"/>
  <match src="address: address [88404,88411]" dest="address: address [71293,71300]"/>
  <match src="uint256: uint256 [55734,55741]" dest="uint256: uint256 [14847,14854]"/>
  <match src="identifier: finalTransferAmount [31154,31173]" dest="identifier: daoAmount [58190,58199]"/>
  <match src="parameter [55734,55741]" dest="parameter [14847,14854]"/>
  <match src="(: ( [108799,108800]" dest="(: ( [37712,37713]"/>
  <match src="returns: returns [86123,86130]" dest="returns: returns [55666,55673]"/>
  <match src="(: ( [102666,102667]" dest="(: ( [31579,31580]"/>
  <match src="call_expression [39077,39248]" dest="call_expression [44268,44439]"/>
  <match src="return: return [101188,101194]" dest="return: return [30101,30107]"/>
  <match src="): ) [27381,27382]" dest="): ) [55575,55576]"/>
  <match src="string [76503,76512]" dest="string [80639,80654]"/>
  <match src="struct_member [95783,95803]" dest="struct_member [27001,27021]"/>
  <match src="parameter [7121,7137]" dest="parameter [7685,7701]"/>
  <match src="): ) [106896,106897]" dest="): ) [35809,35810]"/>
  <match src="type_name [115016,115023]" dest="type_name [69960,69967]"/>
  <match src="identifier: epoch [111930,111935]" dest="identifier: epoch [40843,40848]"/>
  <match src="block_statement [41266,41731]" dest="block_statement [46457,46922]"/>
  <match src="emit_statement [108381,108424]" dest="emit_statement [37294,37337]"/>
  <match src="identifier: stringifyTruncated [42142,42160]" dest="identifier: stringifyTruncated [47333,47351]"/>
  <match src="identifier: self [9126,9130]" dest="identifier: self [9690,9694]"/>
  <match src="identifier: a [801,802]" dest="identifier: a [1365,1366]"/>
  <match src="bytes: bytes [45984,45989]" dest="bytes: bytes [51175,51180]"/>
  <match src="primitive_type [92211,92218]" dest="primitive_type [57772,57779]"/>
  <match src="member_expression [101614,101640]" dest="member_expression [30527,30553]"/>
  <match src=",: , [112927,112928]" dest=",: , [41840,41841]"/>
  <match src="(: ( [90098,90099]" dest="(: ( [73029,73030]"/>
  <match src="member_expression [58703,58715]" dest="member_expression [62777,62789]"/>
  <match src="primitive_type [41831,41838]" dest="primitive_type [47022,47029]"/>
  <match src="(: ( [101145,101146]" dest="(: ( [30058,30059]"/>
  <match src="event_paramater [61518,61540]" dest="event_paramater [60216,60237]"/>
  <match src="identifier: Status [102494,102500]" dest="identifier: Status [31407,31413]"/>
  <match src="return_statement [104678,104729]" dest="return_statement [33591,33642]"/>
  <match src="parameter [43179,43195]" dest="parameter [48370,48386]"/>
  <match src="number_literal: 41 [46456,46458]" dest="number_literal: 41 [51647,51649]"/>
  <match src="identifier: i [7715,7716]" dest="identifier: i [8279,8280]"/>
  <match src="++: ++ [46293,46295]" dest="++: ++ [51484,51486]"/>
  <match src="identifier: amount [22980,22986]" dest="identifier: amount [16825,16831]"/>
  <match src="identifier: reason [109195,109201]" dest="identifier: reason [38108,38114]"/>
  <match src="): ) [104806,104807]" dest="): ) [33719,33720]"/>
  <match src="call_expression [101641,101652]" dest="call_expression [30554,30565]"/>
  <match src="identifier: add [90903,90906]" dest="identifier: add [73460,73463]"/>
  <match src="primitive_type [106655,106662]" dest="primitive_type [35568,35575]"/>
  <match src="call_argument [9070,9074]" dest="call_argument [9634,9638]"/>
  <match src="return_statement [101290,101317]" dest="return_statement [30203,30230]"/>
  <match src="return_type_definition [55725,55742]" dest="return_type_definition [14838,14855]"/>
  <match src="string_literal [34519,34555]" dest="string_literal [63000,63017]"/>
  <match src="type_name [4724,4731]" dest="type_name [5288,5295]"/>
  <match src="}: } [55425,55426]" dest="}: } [14538,14539]"/>
  <match src="(: ( [22045,22046]" dest="(: ( [64961,64962]"/>
  <match src="{: { [4073,4074]" dest="{: { [4637,4638]"/>
  <match src="return_type_definition [62318,62341]" dest="return_type_definition [19152,19175]"/>
  <match src="visibility [101873,101879]" dest="visibility [30786,30792]"/>
  <match src="call_argument [105383,105403]" dest="call_argument [34296,34316]"/>
  <match src="function: function [62347,62355]" dest="function: function [19181,19189]"/>
  <match src="uint256: uint256 [43179,43186]" dest="uint256: uint256 [48370,48377]"/>
  <match src="call_argument [19932,19933]" dest="call_argument [65372,65373]"/>
  <match src="member_expression [113580,113616]" dest="member_expression [42493,42529]"/>
  <match src="identifier: Pool [87821,87825]" dest="identifier: Bonding [71045,71052]"/>
  <match src="type_name [63458,63462]" dest="type_name [20292,20296]"/>
  <match src="array_access [102535,102570]" dest="array_access [31448,31483]"/>
  <match src="type_name [27696,27703]" dest="type_name [83162,83169]"/>
  <match src="memory: memory [109762,109768]" dest="memory: memory [38675,38681]"/>
  <match src=".: . [91325,91326]" dest=".: . [79068,79069]"/>
  <match src="member_expression [104358,104371]" dest="member_expression [33271,33284]"/>
  <match src="member_expression [109625,109647]" dest="member_expression [38538,38560]"/>
  <match src="byte: byte [47037,47041]" dest="byte: byte [52228,52232]"/>
  <match src="expression_statement [90747,90836]" dest="expression_statement [80403,80436]"/>
  <match src="}: } [110093,110094]" dest="}: } [39006,39007]"/>
  <match src=",: , [95352,95353]" dest=",: , [26570,26571]"/>
  <match src="type_name [8217,8221]" dest="type_name [8781,8785]"/>
  <match src="{: { [8543,8544]" dest="{: { [9107,9108]"/>
  <match src="): ) [80376,80377]" dest="): ) [71997,71998]"/>
  <match src="(: ( [36013,36014]" dest="(: ( [18795,18796]"/>
  <match src="identifier: b [9076,9077]" dest="identifier: b [9640,9641]"/>
  <match src="(: ( [61235,61236]" dest="(: ( [65667,65668]"/>
  <match src="call_expression [39650,39676]" dest="call_expression [44841,44867]"/>
  <match src=".: . [109631,109632]" dest=".: . [38544,38545]"/>
  <match src="parameter [41883,41899]" dest="parameter [47074,47090]"/>
  <match src=",: , [1357,1358]" dest=",: , [1921,1922]"/>
  <match src="type_name [8027,8031]" dest="type_name [8591,8595]"/>
  <match src="identifier: getPartial [8778,8788]" dest="identifier: getPartial [9342,9352]"/>
  <match src="parameter [111986,111999]" dest="parameter [40899,40912]"/>
  <match src="uint256: uint256 [16560,16567]" dest="uint256: uint256 [55314,55321]"/>
  <match src="{: { [114767,114768]" dest="{: { [69711,69712]"/>
  <match src="): ) [7265,7266]" dest="): ) [7829,7830]"/>
  <match src="): ) [64083,64084]" dest="): ) [20917,20918]"/>
  <match src="{: { [100316,100317]" dest="{: { [29229,29230]"/>
  <match src="binary_expression [2050,2060]" dest="binary_expression [2614,2624]"/>
  <match src="internal: internal [109373,109381]" dest="internal: internal [38286,38294]"/>
  <match src="primitive_type [62856,62863]" dest="primitive_type [19690,19697]"/>
  <match src="identifier: b [433,434]" dest="identifier: b [997,998]"/>
  <match src="returns: returns [12425,12432]" dest="returns: returns [22423,22430]"/>
  <match src="identifier: a [2027,2028]" dest="identifier: a [2591,2592]"/>
  <match src="identifier: candidate [105299,105308]" dest="identifier: candidate [34212,34221]"/>
  <match src="return_statement [54480,54629]" dest="return_statement [13593,13742]"/>
  <match src="identifier: input [45782,45787]" dest="identifier: input [50973,50978]"/>
  <match src="parameter [64344,64363]" dest="parameter [21178,21197]"/>
  <match src="uint256: uint256 [38457,38464]" dest="uint256: uint256 [43648,43655]"/>
  <match src="type_name [106604,106611]" dest="type_name [35517,35524]"/>
  <match src="identifier: candidates [112993,113003]" dest="identifier: candidates [41906,41916]"/>
  <match src="comment: // Solidity only automatically asserts when dividing by 0 [3329,3386]" dest="comment: // Solidity only automatically asserts when dividing by 0 [3893,3950]"/>
  <match src="primitive_type [75328,75335]" dest="primitive_type [68074,68081]"/>
  <match src="(: ( [27316,27317]" dest="(: ( [55536,55537]"/>
  <match src="identifier: current [110912,110919]" dest="identifier: current [39825,39832]"/>
  <match src=".: . [55234,55235]" dest=".: . [14347,14348]"/>
  <match src="address: address [62607,62614]" dest="address: address [19441,19448]"/>
  <match src="function_definition [103426,103538]" dest="function_definition [32339,32451]"/>
  <match src="primitive_type [24247,24254]" dest="primitive_type [59922,59929]"/>
  <match src="array_access [47025,47034]" dest="array_access [52216,52225]"/>
  <match src="call_struct_argument [55241,55265]" dest="call_struct_argument [14354,14378]"/>
  <match src="function: function [105273,105281]" dest="function: function [34186,34194]"/>
  <match src="parameter [22972,22986]" dest="parameter [16817,16831]"/>
  <match src="identifier: amount [108296,108302]" dest="identifier: amount [37209,37215]"/>
  <match src="function: function [101547,101555]" dest="function: function [30460,30468]"/>
  <match src="uint256: uint256 [103996,104003]" dest="uint256: uint256 [32909,32916]"/>
  <match src="primitive_type [54336,54343]" dest="primitive_type [13449,13456]"/>
  <match src="call_argument [20184,20190]" dest="call_argument [65847,65853]"/>
  <match src="identifier: D256 [7918,7922]" dest="identifier: D256 [8482,8486]"/>
  <match src="call_expression [7966,7989]" dest="call_expression [8530,8553]"/>
  <match src="event_paramater [62228,62248]" dest="event_paramater [19062,19082]"/>
  <match src="member_expression [105357,105382]" dest="member_expression [34270,34295]"/>
  <match src="): ) [98943,98944]" dest="): ) [77593,77594]"/>
  <match src="external: external [62639,62647]" dest="external: external [19473,19481]"/>
  <match src="user_defined_type [116379,116389]" dest="user_defined_type [71065,71075]"/>
  <match src="type_name [7301,7305]" dest="type_name [7865,7869]"/>
  <match src=".: . [107230,107231]" dest=".: . [36143,36144]"/>
  <match src="member_expression [110922,110942]" dest="member_expression [39835,39855]"/>
  <match src="return_type_definition [8517,8538]" dest="return_type_definition [9081,9102]"/>
  <match src="type_name [95486,95493]" dest="type_name [26704,26711]"/>
  <match src="(: ( [113065,113066]" dest="(: ( [41978,41979]"/>
  <match src="): ) [100089,100090]" dest="): ) [29002,29003]"/>
  <match src="]: ] [104077,104078]" dest="]: ] [32990,32991]"/>
  <match src="identifier: z [46507,46508]" dest="identifier: z [51698,51699]"/>
  <match src="call_argument [39619,39624]" dest="call_argument [44810,44815]"/>
  <match src="identifier: incrementTotalRedeemable [107797,107821]" dest="identifier: incrementTotalRedeemable [36710,36734]"/>
  <match src="binary_expression [47603,47609]" dest="binary_expression [52794,52800]"/>
  <match src="identifier: totalBondedAt [104282,104295]" dest="identifier: totalBondedAt [33195,33208]"/>
  <match src="memory: memory [9137,9143]" dest="memory: memory [9701,9707]"/>
  <match src=".: . [111432,111433]" dest=".: . [40345,40346]"/>
  <match src="primitive_type [105291,105298]" dest="primitive_type [34204,34211]"/>
  <match src="type_cast_expression [86661,86674]" dest="type_cast_expression [54511,54524]"/>
  <match src="type_name [41170,41177]" dest="type_name [46361,46368]"/>
  <match src="emit: emit [108711,108715]" dest="emit: emit [37624,37628]"/>
  <match src="member_expression [8940,8947]" dest="member_expression [9504,9511]"/>
  <match src="if: if [41942,41944]" dest="if: if [47133,47135]"/>
  <match src="array_access [47541,47559]" dest="array_access [52732,52750]"/>
  <match src="primitive_type [64265,64269]" dest="primitive_type [21099,21103]"/>
  <match src=",: , [41160,41161]" dest=",: , [46351,46352]"/>
  <match src="): ) [4771,4772]" dest="): ) [5335,5336]"/>
  <match src=".: . [107215,107216]" dest=".: . [36128,36129]"/>
  <match src="identifier: accounts [110615,110623]" dest="identifier: accounts [39528,39536]"/>
  <match src="parameter [64298,64313]" dest="parameter [21132,21147]"/>
  <match src="function_body [110341,110415]" dest="function_body [39254,39328]"/>
  <match src="function_definition [41743,42500]" dest="function_definition [46934,47691]"/>
  <match src="[: [ [109449,109450]" dest="[: [ [38362,38363]"/>
  <match src="identifier: file [42080,42084]" dest="identifier: file [47271,47275]"/>
  <match src="}: } [96830,96831]" dest="}: } [28048,28049]"/>
  <match src="identifier: lockedUntil [113765,113776]" dest="identifier: lockedUntil [42678,42689]"/>
  <match src="type_name [88158,88165]" dest="type_name [71177,71184]"/>
  <match src="[: [ [109853,109854]" dest="[: [ [38766,38767]"/>
  <match src="pure: pure [54918,54922]" dest="pure: pure [14031,14035]"/>
  <match src=",: , [63448,63449]" dest=",: , [20282,20283]"/>
  <match src=",: , [13532,13533]" dest=",: , [23530,23531]"/>
  <match src="return: return [7027,7033]" dest="return: return [7591,7597]"/>
  <match src="{: { [100233,100234]" dest="{: { [29146,29147]"/>
  <match src="identifier: spender [21897,21904]" dest="identifier: spender [64891,64898]"/>
  <match src="(: ( [62387,62388]" dest="(: ( [19221,19222]"/>
  <match src="function_definition [100348,100470]" dest="function_definition [29261,29383]"/>
  <match src="function_definition [105417,105546]" dest="function_definition [34330,34459]"/>
  <match src="identifier: D256 [9418,9422]" dest="identifier: D256 [9982,9986]"/>
  <match src="(: ( [103390,103391]" dest="(: ( [32303,32304]"/>
  <match src="uint256: uint256 [104194,104201]" dest="uint256: uint256 [33107,33114]"/>
  <match src="uint256: uint256 [2603,2610]" dest="uint256: uint256 [3167,3174]"/>
  <match src="array_access [109907,109927]" dest="array_access [38820,38840]"/>
  <match src="parameter [9170,9174]" dest="parameter [9734,9738]"/>
  <match src="(: ( [39003,39004]" dest="(: ( [44194,44195]"/>
  <match src="expression_statement [89355,89370]" dest="expression_statement [58820,58835]"/>
  <match src="string: string [107301,107307]" dest="string: string [36214,36220]"/>
  <match src="identifier: amount0 [63334,63341]" dest="identifier: amount0 [20168,20175]"/>
  <match src="}: } [111614,111615]" dest="}: } [40527,40528]"/>
  <match src="): ) [101871,101872]" dest="): ) [30784,30785]"/>
  <match src="primitive_type [62228,62235]" dest="primitive_type [19062,19069]"/>
  <match src="visibility [107838,107846]" dest="visibility [36751,36759]"/>
  <match src="uint256: uint256 [101377,101384]" dest="uint256: uint256 [30290,30297]"/>
  <match src="): ) [108752,108753]" dest="): ) [37665,37666]"/>
  <match src=".: . [6236,6237]" dest=".: . [6800,6801]"/>
  <match src="returns: returns [9673,9680]" dest="returns: returns [10237,10244]"/>
  <match src="identifier: msg [89190,89193]" dest="identifier: msg [72286,72289]"/>
  <match src="parenthesized_expression [39481,39839]" dest="parenthesized_expression [44672,45030]"/>
  <match src=".: . [89938,89939]" dest=".: . [72882,72883]"/>
  <match src="visibility [90976,90984]" dest="visibility [81328,81336]"/>
  <match src="&quot;: &quot; [21187,21188]" dest="&quot;: &quot; [65482,65483]"/>
  <match src="binary_expression [47238,47244]" dest="binary_expression [52429,52435]"/>
  <match src="(: ( [13112,13113]" dest="(: ( [23110,23111]"/>
  <match src="type_name [89511,89518]" dest="type_name [62649,62656]"/>
  <match src="binary_expression [46284,46290]" dest="binary_expression [51475,51481]"/>
  <match src="private: private [53501,53508]" dest="private: private [12614,12621]"/>
  <match src="expression_statement [91822,91837]" dest="expression_statement [58324,58339]"/>
  <match src="type_name [46812,46819]" dest="type_name [52003,52010]"/>
  <match src="identifier: RPAREN [41660,41666]" dest="identifier: RPAREN [46851,46857]"/>
  <match src="function_body [112976,113088]" dest="function_body [41889,42001]"/>
  <match src="primitive_type [47042,47047]" dest="primitive_type [52233,52238]"/>
  <match src=",: , [41429,41430]" dest=",: , [46620,46621]"/>
  <match src="identifier: externalAmountAfterTax [31953,31975]" dest="identifier: debtRatioEnd [17428,17440]"/>
  <match src="type_name [113122,113129]" dest="type_name [42035,42042]"/>
  <match src=",: , [15799,15800]" dest=",: , [59551,59552]"/>
  <match src="(: ( [112470,112471]" dest="(: ( [41383,41384]"/>
  <match src="call_expression [92598,92783]" dest="call_expression [79515,79645]"/>
  <match src="identifier: expiration [111849,111859]" dest="identifier: expiration [40762,40772]"/>
  <match src="call_expression [85206,85241]" dest="call_expression [60590,60621]"/>
  <match src="member_expression [107483,107497]" dest="member_expression [36396,36410]"/>
  <match src="identifier: account [24760,24767]" dest="identifier: account [54557,54564]"/>
  <match src="view: view [63706,63710]" dest="view: view [20540,20544]"/>
  <match src="): ) [103122,103123]" dest="): ) [32035,32036]"/>
  <match src="return_type_definition [7369,7390]" dest="return_type_definition [7933,7954]"/>
  <match src="): ) [43804,43805]" dest="): ) [48995,48996]"/>
  <match src="identifier: Decimal [34791,34798]" dest="identifier: Decimal [67503,67510]"/>
  <match src="call_expression [2042,2098]" dest="call_expression [2606,2662]"/>
  <match src="state_mutability [55720,55724]" dest="state_mutability [14833,14837]"/>
  <match src="uint: uint [64265,64269]" dest="uint: uint [21099,21103]"/>
  <match src="uint256: uint256 [110316,110323]" dest="uint256: uint256 [39229,39236]"/>
  <match src="identifier: isInitialized [105561,105574]" dest="identifier: isInitialized [34474,34487]"/>
  <match src="(: ( [89707,89708]" dest="(: ( [72662,72663]"/>
  <match src="identifier: LPAREN [38715,38721]" dest="identifier: LPAREN [43906,43912]"/>
  <match src="identifier: value [88533,88538]" dest="identifier: value [60272,60277]"/>
  <match src="view: view [101880,101884]" dest="view: view [30793,30797]"/>
  <match src="type_name [11739,11746]" dest="type_name [21737,21744]"/>
  <match src=".: . [109182,109183]" dest=".: . [38095,38096]"/>
  <match src="uint: uint [62662,62666]" dest="uint: uint [19496,19500]"/>
  <match src="call_expression [58819,58924]" dest="call_expression [64489,64610]"/>
  <match src="expression_statement [109796,109898]" dest="expression_statement [38709,38811]"/>
  <match src="identifier: Transfer [108716,108724]" dest="identifier: Transfer [37629,37637]"/>
  <match src="{: { [100127,100128]" dest="{: { [29040,29041]"/>
  <match src="array_access [104825,104853]" dest="array_access [33738,33766]"/>
  <match src="primitive_type [47831,47836]" dest="primitive_type [53022,53027]"/>
  <match src="): ) [5893,5894]" dest="): ) [6457,6458]"/>
  <match src="call_expression [89258,89344]" dest="call_expression [73217,73261]"/>
  <match src="call_argument [56598,56628]" dest="call_argument [15711,15741]"/>
  <match src="): ) [30718,30719]" dest="): ) [18829,18830]"/>
  <match src="parameter [42529,42538]" dest="parameter [47720,47729]"/>
  <match src="): ) [92241,92242]" dest="): ) [57820,57821]"/>
  <match src="type_name [47311,47318]" dest="type_name [52502,52509]"/>
  <match src="assignment_expression [110766,110841]" dest="assignment_expression [39679,39754]"/>
  <match src="(: ( [100653,100654]" dest="(: ( [29566,29567]"/>
  <match src="): ) [109276,109277]" dest="): ) [38189,38190]"/>
  <match src="identifier: OpenZeppelinUpgradesAddress [98887,98914]" dest="identifier: OpenZeppelinUpgradesAddress [77537,77564]"/>
  <match src="}: } [55433,55434]" dest="}: } [14546,14547]"/>
  <match src="identifier: encodePacked [44072,44084]" dest="identifier: encodePacked [49263,49275]"/>
  <match src="(: ( [56234,56235]" dest="(: ( [15347,15348]"/>
  <match src=".: . [113451,113452]" dest=".: . [42364,42365]"/>
  <match src="): ) [43406,43407]" dest="): ) [48597,48598]"/>
  <match src="identifier: D256 [5964,5968]" dest="identifier: D256 [6528,6532]"/>
  <match src="primitive_type [95486,95493]" dest="primitive_type [26704,26711]"/>
  <match src="string_literal [32120,32156]" dest="string_literal [55209,55253]"/>
  <match src="primitive_type [46128,46132]" dest="primitive_type [51319,51323]"/>
  <match src="pure: pure [384,388]" dest="pure: pure [948,952]"/>
  <match src="=: = [33569,33570]" dest="=: = [67574,67575]"/>
  <match src="primitive_type [75540,75547]" dest="primitive_type [73616,73623]"/>
  <match src="view: view [63999,64003]" dest="view: view [20833,20837]"/>
  <match src="expression_statement [66699,66751]" dest="expression_statement [73815,73888]"/>
  <match src="member_expression [109236,109250]" dest="member_expression [38149,38163]"/>
  <match src="visibility [10084,10091]" dest="visibility [10648,10655]"/>
  <match src="member_expression [109838,109870]" dest="member_expression [38751,38783]"/>
  <match src="): ) [43027,43028]" dest="): ) [48218,48219]"/>
  <match src="type_name [88218,88225]" dest="type_name [71237,71244]"/>
  <match src="parameter [23131,23145]" dest="parameter [17063,17077]"/>
  <match src="number_literal: 1 [47077,47078]" dest="number_literal: 1 [52268,52269]"/>
  <match src="identifier: mul [1674,1677]" dest="identifier: mul [2238,2241]"/>
  <match src="identifier: payloadC [43213,43221]" dest="identifier: payloadC [48404,48412]"/>
  <match src="type_name [82820,82827]" dest="type_name [83111,83118]"/>
  <match src="identifier: period [112520,112526]" dest="identifier: period [41433,41439]"/>
  <match src="array_access [111671,111693]" dest="array_access [40584,40606]"/>
  <match src="function_body [44940,45740]" dest="function_body [50131,50931]"/>
  <match src="identifier: getInitialStakeMultiple [89678,89701]" dest="identifier: getInitialStakeMultiple [72673,72696]"/>
  <match src="inheritance_specifier [114625,114632]" dest="inheritance_specifier [69569,69576]"/>
  <match src="internal: internal [109098,109106]" dest="internal: internal [38011,38019]"/>
  <match src="identifier: asUint256 [9631,9640]" dest="identifier: asUint256 [10195,10204]"/>
  <match src="identifier: approve [112849,112856]" dest="identifier: approve [41762,41769]"/>
  <match src="): ) [58118,58119]" dest="): ) [54578,54579]"/>
  <match src="type_name [74967,74971]" dest="type_name [68626,68630]"/>
  <match src="call_expression [111455,111541]" dest="call_expression [40368,40454]"/>
  <match src="assignment_expression [109600,109659]" dest="assignment_expression [38513,38572]"/>
  <match src="]: ] [109415,109416]" dest="]: ] [38328,38329]"/>
  <match src="struct: struct [95871,95877]" dest="struct: struct [27089,27095]"/>
  <match src="parameter [108497,108517]" dest="parameter [37410,37430]"/>
  <match src="type_name [4019,4026]" dest="type_name [4583,4590]"/>
  <match src="identifier: epoch [104431,104436]" dest="identifier: epoch [33344,33349]"/>
  <match src="state_mutability [72003,72007]" dest="state_mutability [25816,25820]"/>
  <match src="call_expression [86553,86606]" dest="call_expression [80354,80393]"/>
  <match src="function_body [107175,107249]" dest="function_body [36088,36162]"/>
  <match src="identifier: _state [108313,108319]" dest="identifier: _state [37226,37232]"/>
  <match src="function: function [8960,8968]" dest="function: function [9524,9532]"/>
  <match src="public: public [104778,104784]" dest="public: public [33691,33697]"/>
  <match src="call_argument [92752,92773]" dest="call_argument [79628,79635]"/>
  <match src="primitive_type [86229,86233]" dest="primitive_type [61708,61712]"/>
  <match src=".: . [7256,7257]" dest=".: . [7820,7821]"/>
  <match src="number_literal: 0x3a20 [38635,38641]" dest="number_literal: 0x3a20 [43826,43832]"/>
  <match src="function_body [100971,101015]" dest="function_body [29884,29928]"/>
  <match src="false: false [106939,106944]" dest="false: false [35852,35857]"/>
  <match src="external: external [11605,11613]" dest="external: external [21603,21611]"/>
  <match src="identifier: blockTimestamp [75361,75375]" dest="identifier: newBonded [68100,68109]"/>
  <match src="identifier: outstanding [95791,95802]" dest="identifier: outstanding [27009,27020]"/>
  <match src="identifier: Withdraw [88209,88217]" dest="identifier: Withdraw [71228,71236]"/>
  <match src="identifier: amount [29591,29597]" dest="identifier: amount [54011,54017]"/>
  <match src=".: . [112641,112642]" dest=".: . [41554,41555]"/>
  <match src="primitive_type [14037,14044]" dest="primitive_type [24035,24042]"/>
  <match src="identifier: compareTo [9193,9202]" dest="identifier: compareTo [9757,9766]"/>
  <match src="function_body [8345,8417]" dest="function_body [8909,8981]"/>
  <match src="visibility [56052,56060]" dest="visibility [15165,15173]"/>
  <match src="function: function [101125,101133]" dest="function: function [30038,30046]"/>
  <match src="): ) [86654,86655]" dest="): ) [54499,54500]"/>
  <match src="number_literal: 1 [103064,103065]" dest="number_literal: 1 [31977,31978]"/>
  <match src="{: { [9043,9044]" dest="{: { [9607,9608]"/>
  <match src="uint256: uint256 [61228,61235]" dest="uint256: uint256 [65660,65667]"/>
  <match src="primitive_type [45235,45240]" dest="primitive_type [50426,50431]"/>
  <match src="modifier: modifier [114988,114996]" dest="modifier: modifier [69932,69940]"/>
  <match src="visibility [100197,100203]" dest="visibility [29110,29116]"/>
  <match src="}: } [112532,112533]" dest="}: } [41445,41446]"/>
  <match src="call_argument [98595,98609]" dest="call_argument [77245,77259]"/>
  <match src="parameter [7000,7011]" dest="parameter [7564,7575]"/>
  <match src="}: } [81256,81257]" dest="}: } [61972,61973]"/>
  <match src=".: . [110551,110552]" dest=".: . [39464,39465]"/>
  <match src="view: view [101574,101578]" dest="view: view [30487,30491]"/>
  <match src="type_name [7378,7382]" dest="type_name [7942,7946]"/>
  <match src="type_name [13130,13137]" dest="type_name [23128,23135]"/>
  <match src="(: ( [62450,62451]" dest="(: ( [19284,19285]"/>
  <match src="&quot;: &quot; [17841,17842]" dest="&quot;: &quot; [73385,73386]"/>
  <match src="primitive_type [30302,30309]" dest="primitive_type [58697,58704]"/>
  <match src="(: ( [90565,90566]" dest="(: ( [73291,73292]"/>
  <match src="array_access [109434,109473]" dest="array_access [38347,38386]"/>
  <match src="identifier: deposit [88590,88597]" dest="identifier: initialize [83279,83289]"/>
  <match src=".: . [108579,108580]" dest=".: . [37492,37493]"/>
  <match src="{: { [103760,103761]" dest="{: { [32673,32674]"/>
  <match src="type_name [45235,45240]" dest="type_name [50426,50431]"/>
  <match src="identifier: amount0Out [64303,64313]" dest="identifier: amount0Out [21137,21147]"/>
  <match src="return_statement [6214,6250]" dest="return_statement [6778,6814]"/>
  <match src="call_expression [88790,88804]" dest="call_expression [55587,55601]"/>
  <match src="call_argument [46016,46018]" dest="call_argument [51207,51209]"/>
  <match src="event_paramater [13758,13778]" dest="event_paramater [23756,23776]"/>
  <match src="identifier: errorMessage [1287,1299]" dest="identifier: errorMessage [1851,1863]"/>
  <match src="identifier: _state [109838,109844]" dest="identifier: _state [38751,38757]"/>
  <match src=".: . [102752,102753]" dest=".: . [31665,31666]"/>
  <match src="public: public [104910,104916]" dest="public: public [33823,33829]"/>
  <match src="type_name [89591,89598]" dest="type_name [62700,62707]"/>
  <match src="number_literal: 0 [46281,46282]" dest="number_literal: 0 [51472,51473]"/>
  <match src="]: ] [111906,111907]" dest="]: ] [40819,40820]"/>
  <match src="(: ( [56125,56126]" dest="(: ( [15238,15239]"/>
  <match src="return_type_definition [62952,62969]" dest="return_type_definition [19786,19803]"/>
  <match src="identifier: candidates [105232,105242]" dest="identifier: candidates [34145,34155]"/>
  <match src="parameter [60906,60921]" dest="parameter [54372,54387]"/>
  <match src="identifier: amount [106890,106896]" dest="identifier: amount [35803,35809]"/>
  <match src="member_expression [110987,111016]" dest="member_expression [39900,39929]"/>
  <match src="identifier: lessPhantom [90456,90467]" dest="identifier: epoch [63046,63051]"/>
  <match src="visibility [77258,77266]" dest="visibility [83482,83490]"/>
  <match src="member_expression [105501,105518]" dest="member_expression [34414,34431]"/>
  <match src="identifier: _state [100546,100552]" dest="identifier: _state [29459,29465]"/>
  <match src="): ) [104938,104939]" dest="): ) [33851,33852]"/>
  <match src="array_access [113580,113604]" dest="array_access [42493,42517]"/>
  <match src="(: ( [21163,21164]" dest="(: ( [65458,65459]"/>
  <match src="(: ( [115015,115016]" dest="(: ( [69959,69960]"/>
  <match src="call_argument [22548,22586]" dest="call_argument [72062,72100]"/>
  <match src="call_expression [90001,90015]" dest="call_expression [55265,55279]"/>
  <match src="identifier: Decimal [36002,36009]" dest="identifier: Decimal [18784,18791]"/>
  <match src=".: . [111907,111908]" dest=".: . [40820,40821]"/>
  <match src="user_defined_type [9418,9422]" dest="user_defined_type [9982,9986]"/>
  <match src="primitive_type [78369,78376]" dest="primitive_type [66816,66823]"/>
  <match src="return: return [101780,101786]" dest="return: return [30693,30699]"/>
  <match src="function_definition [113484,113803]" dest="function_definition [42397,42716]"/>
  <match src="): ) [43009,43010]" dest="): ) [48200,48201]"/>
  <match src="identifier: div [29971,29974]" dest="identifier: mul [18432,18435]"/>
  <match src="function_body [43989,44834]" dest="function_body [49180,50025]"/>
  <match src=".: . [101105,101106]" dest=".: . [30018,30019]"/>
  <match src="parameter [7837,7853]" dest="parameter [8401,8417]"/>
  <match src="return: return [44730,44736]" dest="return: return [49921,49927]"/>
  <match src="primitive_type [74276,74283]" dest="primitive_type [80675,80682]"/>
  <match src="primitive_type [78091,78098]" dest="primitive_type [66671,66678]"/>
  <match src=",: , [6909,6910]" dest=",: , [7473,7474]"/>
  <match src="identifier: mul [111484,111487]" dest="identifier: mul [40397,40400]"/>
  <match src="parameter [19753,19767]" dest="parameter [65170,65184]"/>
  <match src="function_definition [6113,6256]" dest="function_definition [6677,6820]"/>
  <match src="call_expression [116792,116845]" dest="call_expression [83410,83450]"/>
  <match src="type_name [31816,31823]" dest="type_name [55110,55117]"/>
  <match src="(: ( [63987,63988]" dest="(: ( [20821,20822]"/>
  <match src="identifier: capture [73954,73961]" dest="identifier: oracleCapture [68534,68547]"/>
  <match src="identifier: PoolSetters [87829,87840]" dest="identifier: Setters [71056,71063]"/>
  <match src="{: { [100773,100774]" dest="{: { [29686,29687]"/>
  <match src="call_expression [2663,2702]" dest="call_expression [3227,3266]"/>
  <match src="identifier: amount [108989,108995]" dest="identifier: amount [37902,37908]"/>
  <match src="(: ( [98833,98834]" dest="(: ( [77483,77484]"/>
  <match src="uint256: uint256 [13130,13137]" dest="uint256: uint256 [23128,23135]"/>
  <match src="using: using [99878,99883]" dest="using: using [28791,28796]"/>
  <match src="state_mutability [6338,6342]" dest="state_mutability [6902,6906]"/>
  <match src="return_statement [102894,102922]" dest="return_statement [31807,31835]"/>
  <match src="(: ( [101041,101042]" dest="(: ( [29954,29955]"/>
  <match src="function_definition [106957,107083]" dest="function_definition [35870,35996]"/>
  <match src="identifier: j [45108,45109]" dest="identifier: j [50299,50300]"/>
  <match src="primitive_type [52648,52655]" dest="primitive_type [11761,11768]"/>
  <match src="): ) [103391,103392]" dest="): ) [32304,32305]"/>
  <match src="(: ( [103396,103397]" dest="(: ( [32309,32310]"/>
  <match src="identifier: Decimal [27520,27527]" dest="identifier: Decimal [16689,16696]"/>
  <match src="identifier: _state [110899,110905]" dest="identifier: _state [39812,39818]"/>
  <match src="}: } [96344,96345]" dest="}: } [27562,27563]"/>
  <match src="binary_expression [47933,47960]" dest="binary_expression [53124,53151]"/>
  <match src="number_literal: 0 [112125,112126]" dest="number_literal: 0 [41038,41039]"/>
  <match src="user_defined_type [106564,106569]" dest="user_defined_type [35477,35482]"/>
  <match src="[: [ [46455,46456]" dest="[: [ [51646,51647]"/>
  <match src="identifier: errorMessage [1359,1371]" dest="identifier: errorMessage [1923,1935]"/>
  <match src="identifier: amount [109365,109371]" dest="identifier: amount [38278,38284]"/>
  <match src="): ) [91460,91461]" dest="): ) [60883,60884]"/>
  <match src="identifier: bstr [45729,45733]" dest="identifier: bstr [50920,50924]"/>
  <match src="): ) [88940,88941]" dest="): ) [71884,71885]"/>
  <match src="comment: /*     Copyright 2018-2019 zOS Global Limited     Copyright 2020 Dynamic Dollar Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [96833,97520]" dest="comment: /*     Copyright 2018-2019 zOS Global Limited     Copyright 2020 Dynamic Dollar Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [75483,76170]"/>
  <match src="&quot;: &quot; [88131,88132]" dest="&quot;: &quot; [71147,71148]"/>
  <match src="(: ( [4723,4724]" dest="(: ( [5287,5288]"/>
  <match src="parameter [62509,62513]" dest="parameter [19343,19347]"/>
  <match src="user_defined_type [6590,6594]" dest="user_defined_type [7154,7158]"/>
  <match src="parameter [8675,8688]" dest="parameter [9239,9252]"/>
  <match src="): ) [98493,98494]" dest="): ) [77143,77144]"/>
  <match src="[: [ [110584,110585]" dest="[: [ [39497,39498]"/>
  <match src="call_argument [42312,42320]" dest="call_argument [47503,47511]"/>
  <match src="identifier: to [62266,62268]" dest="identifier: to [19100,19102]"/>
  <match src="call_expression [109434,109485]" dest="call_expression [38347,38398]"/>
  <match src=".: . [30672,30673]" dest=".: . [17790,17791]"/>
  <match src="identifier: transfer [62758,62766]" dest="identifier: transfer [19592,19600]"/>
  <match src="parameter [1251,1260]" dest="parameter [1815,1824]"/>
  <match src="uint256: uint256 [16109,16116]" dest="uint256: uint256 [16861,16868]"/>
  <match src=".: . [111199,111200]" dest=".: . [40112,40113]"/>
  <match src="number_literal: 0 [44825,44826]" dest="number_literal: 0 [50016,50017]"/>
  <match src="(: ( [2636,2637]" dest="(: ( [3200,3201]"/>
  <match src="identifier: epoch [104372,104377]" dest="identifier: epoch [33285,33290]"/>
  <match src=",: , [41634,41635]" dest=",: , [46825,46826]"/>
  <match src="type_name [99915,99922]" dest="type_name [28828,28835]"/>
  <match src="returns: returns [13155,13162]" dest="returns: returns [23153,23160]"/>
  <match src="function_body [27299,27469]" dest="function_body [55508,55608]"/>
  <match src="identifier: that [91036,91040]" dest="identifier: that [57987,57991]"/>
  <match src="primitive_type [62388,62394]" dest="primitive_type [19222,19228]"/>
  <match src="identifier: that [93006,93010]" dest="identifier: that [80875,80879]"/>
  <match src="]: ] [109819,109820]" dest="]: ] [38732,38733]"/>
  <match src="identifier: _transfer [19743,19752]" dest="identifier: transferCoupons [65154,65169]"/>
  <match src="visibility [31832,31840]" dest="visibility [55126,55134]"/>
  <match src="identifier: require [19823,19830]" dest="identifier: require [65255,65262]"/>
  <match src="(: ( [29962,29963]" dest="(: ( [18428,18429]"/>
  <match src="[: [ [45594,45595]" dest="[: [ [50785,50786]"/>
  <match src="type_name [63667,63671]" dest="type_name [20501,20505]"/>
  <match src=".: . [92844,92845]" dest=".: . [81470,81471]"/>
  <match src="=: = [112818,112819]" dest="=: = [41731,41732]"/>
  <match src="memory: memory [100119,100125]" dest="memory: memory [29032,29038]"/>
  <match src="=: = [47325,47326]" dest="=: = [52516,52517]"/>
  <match src="identifier: reason [113074,113080]" dest="identifier: reason [41987,41993]"/>
  <match src="(: ( [112094,112095]" dest="(: ( [41007,41008]"/>
  <match src="unary_expression [41259,41264]" dest="unary_expression [46450,46455]"/>
  <match src="function_definition [8831,8954]" dest="function_definition [9395,9518]"/>
  <match src="user_defined_type [35359,35371]" dest="user_defined_type [57350,57362]"/>
  <match src=",: , [108616,108617]" dest=",: , [37529,37530]"/>
  <match src="variable_declaration_statement [113626,113690]" dest="variable_declaration_statement [42539,42603]"/>
  <match src=":: : [56292,56293]" dest=":: : [15405,15406]"/>
  <match src="=: = [114670,114671]" dest="=: = [69614,69615]"/>
  <match src="return_type_definition [63658,63672]" dest="return_type_definition [20492,20506]"/>
  <match src="identifier: accounts [108859,108867]" dest="identifier: accounts [37772,37780]"/>
  <match src="}: } [14053,14054]" dest="}: } [24051,24052]"/>
  <match src="type_name [6703,6707]" dest="type_name [7267,7271]"/>
  <match src="variable_declaration_statement [44046,44092]" dest="variable_declaration_statement [49237,49283]"/>
  <match src="yul_identifier [99100,99117]" dest="yul_identifier [77750,77767]"/>
  <match src=".: . [110567,110568]" dest=".: . [39480,39481]"/>
  <match src="function_body [102884,102928]" dest="function_body [31797,31841]"/>
  <match src="&lt;: &lt; [7724,7725]" dest="&lt;: &lt; [8288,8289]"/>
  <match src="&quot;: &quot; [92497,92498]" dest="&quot;: &quot; [79112,79113]"/>
  <match src="): ) [110948,110949]" dest="): ) [39861,39862]"/>
  <match src="state_mutability [100391,100395]" dest="state_mutability [29304,29308]"/>
  <match src="=: = [113414,113415]" dest="=: = [42327,42328]"/>
  <match src="parameter [102139,102152]" dest="parameter [31052,31065]"/>
  <match src="identifier: Storage [96238,96245]" dest="identifier: Storage [27456,27463]"/>
  <match src="=: = [99032,99033]" dest="=: = [77682,77683]"/>
  <match src="identifier: reason [109769,109775]" dest="identifier: reason [38682,38688]"/>
  <match src="identifier: externalAmountAfterTax [34296,34318]" dest="identifier: premiumFlatDelta [17968,17984]"/>
  <match src="address: address [11739,11746]" dest="address: address [21737,21744]"/>
  <match src="(: ( [56795,56796]" dest="(: ( [15908,15909]"/>
  <match src=",: , [62777,62778]" dest=",: , [19611,19612]"/>
  <match src="view: view [102861,102865]" dest="view: view [31774,31778]"/>
  <match src="type_name [91427,91434]" dest="type_name [60824,60831]"/>
  <match src="(: ( [62147,62148]" dest="(: ( [18981,18982]"/>
  <match src="identifier: EpochStrategy [54448,54461]" dest="identifier: EpochStrategy [13561,13574]"/>
  <match src="parameter [64156,64166]" dest="parameter [20990,21000]"/>
  <match src="expression_statement [1343,1373]" dest="expression_statement [1907,1937]"/>
  <match src="): ) [112965,112966]" dest="): ) [41878,41879]"/>
  <match src="uint256: uint256 [110488,110495]" dest="uint256: uint256 [39401,39408]"/>
  <match src="type_name [46938,46943]" dest="type_name [52129,52134]"/>
  <match src="type_name [96424,96431]" dest="type_name [27642,27649]"/>
  <match src="identifier: maxPeriod [53019,53028]" dest="identifier: maxPeriod [12132,12141]"/>
  <match src="]: ] [45596,45597]" dest="]: ] [50787,50788]"/>
  <match src=".: . [10211,10212]" dest=".: . [10775,10776]"/>
  <match src=".: . [8598,8599]" dest=".: . [9162,9163]"/>
  <match src="type_name [35415,35422]" dest="type_name [64430,64437]"/>
  <match src="return_type_definition [102967,102984]" dest="return_type_definition [31880,31897]"/>
  <match src="(: ( [1350,1351]" dest="(: ( [1914,1915]"/>
  <match src="binary_expression [3445,3450]" dest="binary_expression [4009,4014]"/>
  <match src="member_expression [109796,109828]" dest="member_expression [38709,38741]"/>
  <match src="member_expression [104491,104523]" dest="member_expression [33404,33436]"/>
  <match src="identifier: c [3441,3442]" dest="identifier: c [4005,4006]"/>
  <match src=".: . [7064,7065]" dest=".: . [7628,7629]"/>
  <match src="): ) [56522,56523]" dest="): ) [15635,15636]"/>
  <match src="identifier: coupons [104079,104086]" dest="identifier: coupons [32992,32999]"/>
  <match src="): ) [45631,45632]" dest="): ) [50822,50823]"/>
  <match src="struct_declaration [95395,95620]" dest="struct_declaration [26613,26838]"/>
  <match src="parameter [80558,80573]" dest="parameter [82065,82080]"/>
  <match src="extcodesize: extcodesize [94568,94579]" dest="extcodesize: extcodesize [75426,75437]"/>
  <match src="type_name [101856,101863]" dest="type_name [30769,30776]"/>
  <match src="&lt;: &lt; [46286,46287]" dest="&lt;: &lt; [51477,51478]"/>
  <match src="function_definition [6681,6865]" dest="function_definition [7245,7429]"/>
  <match src="(: ( [88939,88940]" dest="(: ( [71883,71884]"/>
  <match src="string [98552,98566]" dest="string [77202,77216]"/>
  <match src="identifier: dollar [100734,100740]" dest="identifier: dollar [29647,29653]"/>
  <match src="primitive_type [39950,39957]" dest="primitive_type [45141,45148]"/>
  <match src="bytes32: bytes32 [42548,42555]" dest="bytes32: bytes32 [47739,47746]"/>
  <match src="state_mutability [43245,43249]" dest="state_mutability [48436,48440]"/>
  <match src="expression_statement [86553,86607]" dest="expression_statement [80354,80394]"/>
  <match src=".: . [102552,102553]" dest=".: . [31465,31466]"/>
  <match src="[: [ [95847,95848]" dest="[: [ [27065,27066]"/>
  <match src="return_type_definition [105606,105620]" dest="return_type_definition [34519,34533]"/>
  <match src="call_argument [59063,59068]" dest="call_argument [72838,72843]"/>
  <match src="function: function [104273,104281]" dest="function: function [33186,33194]"/>
  <match src="expression_statement [108635,108701]" dest="expression_statement [37548,37614]"/>
  <match src="}: } [23196,23197]" dest="}: } [55079,55080]"/>
  <match src="identifier: sub [7059,7062]" dest="identifier: sub [7623,7626]"/>
  <match src=",: , [88181,88182]" dest=",: , [71200,71201]"/>
  <match src="external: external [28877,28885]" dest="external: external [63452,63460]"/>
  <match src="using_directive [5623,5650]" dest="using_directive [6187,6214]"/>
  <match src="primitive_type [9456,9460]" dest="primitive_type [10020,10024]"/>
  <match src="call_argument [4751,4757]" dest="call_argument [5315,5321]"/>
  <match src="identifier: epoch [103198,103203]" dest="identifier: epoch [32111,32116]"/>
  <match src="}: } [39296,39297]" dest="}: } [44487,44488]"/>
  <match src="parameter [7301,7317]" dest="parameter [7865,7881]"/>
  <match src="view: view [103577,103581]" dest="view: view [32490,32494]"/>
  <match src="identifier: DEBT_RATIO_CAP [56134,56148]" dest="identifier: DEBT_RATIO_CAP [15247,15261]"/>
  <match src="visibility [41223,41231]" dest="visibility [46414,46422]"/>
  <match src="address: address [61518,61525]" dest="address: address [60216,60223]"/>
  <match src="expression_statement [109212,109278]" dest="expression_statement [38125,38191]"/>
  <match src="primitive_type [2637,2644]" dest="primitive_type [3201,3208]"/>
  <match src="identifier: D256 [74876,74880]" dest="identifier: D256 [67010,67014]"/>
  <match src="identifier: _state [109907,109913]" dest="identifier: _state [38820,38826]"/>
  <match src="member_expression [103052,103063]" dest="member_expression [31965,31976]"/>
  <match src="call_expression [111488,111540]" dest="call_expression [40401,40453]"/>
  <match src="type_name [29618,29625]" dest="type_name [54143,54150]"/>
  <match src="): ) [103900,103901]" dest="): ) [32813,32814]"/>
  <match src="type_name [30665,30677]" dest="type_name [17783,17795]"/>
  <match src="identifier: sender [90399,90405]" dest="identifier: sender [62745,62751]"/>
  <match src="return_statement [104818,104860]" dest="return_statement [33731,33773]"/>
  <match src="): ) [89624,89625]" dest="): ) [72632,72633]"/>
  <match src="internal: internal [55598,55606]" dest="internal: internal [14711,14719]"/>
  <match src="variable_declaration [46269,46278]" dest="variable_declaration [51460,51469]"/>
  <match src="identifier: to [62775,62777]" dest="identifier: to [19609,19611]"/>
  <match src="identifier: candidates [113423,113433]" dest="identifier: candidates [42336,42346]"/>
  <match src="expression_statement [33608,33702]" dest="expression_statement [62777,62895]"/>
  <match src="parameter [8999,9012]" dest="parameter [9563,9576]"/>
  <match src="primitive_type [64130,64134]" dest="primitive_type [20964,20968]"/>
  <match src="primitive_type [12079,12083]" dest="primitive_type [22077,22081]"/>
  <match src="visibility [39418,39426]" dest="visibility [44609,44617]"/>
  <match src="function_definition [112881,113088]" dest="function_definition [41794,42001]"/>
  <match src="}: } [96782,96783]" dest="}: } [28000,28001]"/>
  <match src="identifier: sub [80379,80382]" dest="identifier: sub [72000,72003]"/>
  <match src="call_expression [6390,6429]" dest="call_expression [6954,6993]"/>
  <match src="&quot;: &quot; [22050,22051]" dest="&quot;: &quot; [64966,64967]"/>
  <match src="): ) [43983,43984]" dest="): ) [49174,49175]"/>
  <match src="): ) [89449,89450]" dest="): ) [72520,72521]"/>
  <match src=",: , [63424,63425]" dest=",: , [20258,20259]"/>
  <match src="identifier: expiring [95850,95858]" dest="identifier: expiring [27068,27076]"/>
  <match src="member_expression [98497,98527]" dest="member_expression [77147,77177]"/>
  <match src="primitive_type [13130,13137]" dest="primitive_type [23128,23135]"/>
  <match src="number_literal: 0 [108403,108404]" dest="number_literal: 0 [37316,37317]"/>
  <match src="identifier: supply [108328,108334]" dest="identifier: supply [37241,37247]"/>
  <match src="(: ( [7706,7707]" dest="(: ( [8270,8271]"/>
  <match src="identifier: account [24263,24270]" dest="identifier: account [59938,59945]"/>
  <match src="identifier: i [46373,46374]" dest="identifier: i [51564,51565]"/>
  <match src="bytes32: bytes32 [63200,63207]" dest="bytes32: bytes32 [20034,20041]"/>
  <match src="type_name [59849,59856]" dest="type_name [24823,24830]"/>
  <match src=",: , [66722,66723]" dest=",: , [73844,73845]"/>
  <match src="function_body [115033,115193]" dest="function_body [69977,70137]"/>
  <match src="(: ( [6999,7000]" dest="(: ( [7563,7564]"/>
  <match src="primitive_type [13758,13765]" dest="primitive_type [23756,23763]"/>
  <match src="identifier: payloadB [40405,40413]" dest="identifier: payloadB [45596,45604]"/>
  <match src="uint: uint [86910,86914]" dest="uint: uint [63672,63676]"/>
  <match src="internal: internal [108519,108527]" dest="internal: internal [37432,37440]"/>
  <match src="event_paramater [14037,14050]" dest="event_paramater [24035,24048]"/>
  <match src=",: , [92465,92466]" dest=",: , [79080,79081]"/>
  <match src="): ) [19933,19934]" dest="): ) [65373,65374]"/>
  <match src="type_name [75540,75547]" dest="type_name [73616,73623]"/>
  <match src="for: for [46264,46267]" dest="for: for [51455,51458]"/>
  <match src="(: ( [42160,42161]" dest="(: ( [47351,47352]"/>
  <match src="uint256: uint256 [53493,53500]" dest="uint256: uint256 [12606,12613]"/>
  <match src="member_expression [113580,113595]" dest="member_expression [42493,42508]"/>
  <match src=".: . [108068,108069]" dest=".: . [36981,36982]"/>
  <match src="identifier: approve [62683,62690]" dest="identifier: approve [19517,19524]"/>
  <match src="address: address [110471,110478]" dest="address: address [39384,39391]"/>
  <match src="identifier: a [6415,6416]" dest="identifier: a [6979,6980]"/>
  <match src="identifier: account [81444,81451]" dest="identifier: account [54186,54193]"/>
  <match src="): ) [59939,59940]" dest="): ) [24913,24914]"/>
  <match src="}: } [107928,107929]" dest="}: } [36841,36842]"/>
  <match src="uint256: uint256 [104032,104039]" dest="uint256: uint256 [32945,32952]"/>
  <match src=".: . [109515,109516]" dest=".: . [38428,38429]"/>
  <match src="identifier: amount [60931,60937]" dest="identifier: amount [54397,54403]"/>
  <match src="}: } [42499,42500]" dest="}: } [47690,47691]"/>
  <match src=",: , [109268,109269]" dest=",: , [38181,38182]"/>
  <match src="identifier: div [7288,7291]" dest="identifier: div [7852,7855]"/>
  <match src="): ) [89840,89841]" dest="): ) [73416,73417]"/>
  <match src="identifier: sender [106987,106993]" dest="identifier: sender [35900,35906]"/>
  <match src="}: } [60019,60020]" dest="}: } [24993,24994]"/>
  <match src="uint256: uint256 [22972,22979]" dest="uint256: uint256 [16817,16824]"/>
  <match src="identifier: b [6547,6548]" dest="identifier: b [7111,7112]"/>
  <match src="address: address [13989,13996]" dest="address: address [23987,23994]"/>
  <match src=".: . [8172,8173]" dest=".: . [8736,8737]"/>
  <match src="identifier: Transfer [108386,108394]" dest="identifier: Transfer [37299,37307]"/>
  <match src="internal: internal [9659,9667]" dest="internal: internal [10223,10231]"/>
  <match src="identifier: FILE [92275,92279]" dest="identifier: FILE [57859,57863]"/>
  <match src="member_expression [103505,103531]" dest="member_expression [32418,32444]"/>
  <match src="member_expression [110154,110189]" dest="member_expression [39067,39102]"/>
  <match src="identifier: value [56599,56604]" dest="identifier: value [15712,15717]"/>
  <match src="(: ( [106978,106979]" dest="(: ( [35891,35892]"/>
  <match src="private: private [75859,75866]" dest="private: private [68304,68311]"/>
  <match src="primitive_type [100367,100374]" dest="primitive_type [29280,29287]"/>
  <match src="type_name [107048,107052]" dest="type_name [35961,35965]"/>
  <match src="(: ( [9722,9723]" dest="(: ( [10286,10287]"/>
  <match src="function_definition [62288,62342]" dest="function_definition [19122,19176]"/>
  <match src="identifier: nextEpochStart [103021,103035]" dest="identifier: nextEpochStart [31934,31948]"/>
  <match src="primitive_type [13113,13120]" dest="primitive_type [23111,23118]"/>
  <match src="(: ( [43319,43320]" dest="(: ( [48510,48511]"/>
  <match src=",: , [7763,7764]" dest=",: , [8327,8328]"/>
  <match src="call_argument [101641,101652]" dest="call_argument [30554,30565]"/>
  <match src="member_expression [85206,85239]" dest="member_expression [60590,60619]"/>
  <match src="function_definition [62408,62458]" dest="function_definition [19242,19292]"/>
  <match src="function_definition [88859,89134]" dest="function_definition [72225,72487]"/>
  <match src=".: . [109558,109559]" dest=".: . [38471,38472]"/>
  <match src="true: true [113911,113915]" dest="true: true [42824,42828]"/>
  <match src="member_expression [55227,55239]" dest="member_expression [14340,14352]"/>
  <match src=".: . [108351,108352]" dest=".: . [37264,37265]"/>
  <match src="[: [ [105518,105519]" dest="[: [ [34431,34432]"/>
  <match src="bytes: bytes [45211,45216]" dest="bytes: bytes [50402,50407]"/>
  <match src="member_expression [8585,8595]" dest="member_expression [9149,9159]"/>
  <match src="uint256: uint256 [53655,53662]" dest="uint256: uint256 [12768,12775]"/>
  <match src="address: address [54236,54243]" dest="address: address [13349,13356]"/>
  <match src="binary_expression [46475,46492]" dest="binary_expression [51666,51683]"/>
  <match src="revert: revert [43289,43295]" dest="revert: revert [48480,48486]"/>
  <match src="call_argument [91879,91886]" dest="call_argument [80479,80483]"/>
  <match src="returns: returns [56787,56794]" dest="returns: returns [15900,15907]"/>
  <match src="}: } [6864,6865]" dest="}: } [7428,7429]"/>
  <match src="visibility [107166,107174]" dest="visibility [36079,36087]"/>
  <match src="identifier: i [47231,47232]" dest="identifier: i [52422,52423]"/>
  <match src="returns: returns [13559,13566]" dest="returns: returns [23557,23564]"/>
  <match src="identifier: amount [108685,108691]" dest="identifier: amount [37598,37604]"/>
  <match src="call_expression [103052,103059]" dest="call_expression [31965,31972]"/>
  <match src="identifier: _state [109236,109242]" dest="identifier: _state [38149,38155]"/>
  <match src="returns: returns [6991,6998]" dest="returns: returns [7555,7562]"/>
  <match src="{: { [85146,85147]" dest="{: { [60310,60311]"/>
  <match src="primitive_type [74967,74971]" dest="primitive_type [68626,68630]"/>
  <match src="revert_statement [43289,43806]" dest="revert_statement [48480,48997]"/>
  <match src=".: . [100896,100897]" dest=".: . [29809,29810]"/>
  <match src="emit_statement [98621,98654]" dest="emit_statement [77271,77304]"/>
  <match src="primitive_type [54699,54706]" dest="primitive_type [13812,13819]"/>
  <match src="parameter [100764,100771]" dest="parameter [29677,29684]"/>
  <match src="function_body [101597,101660]" dest="function_body [30510,30573]"/>
  <match src="enum: enum [95324,95328]" dest="enum: enum [26542,26546]"/>
  <match src="address: address [63121,63128]" dest="address: address [19955,19962]"/>
  <match src="call_argument [88951,88961]" dest="call_argument [71899,71909]"/>
  <match src="(: ( [62227,62228]" dest="(: ( [19061,19062]"/>
  <match src="(: ( [111250,111251]" dest="(: ( [40163,40164]"/>
  <match src="assignment_expression [45590,45634]" dest="assignment_expression [50781,50825]"/>
  <match src="primitive_type [39391,39398]" dest="primitive_type [44582,44589]"/>
  <match src="identifier: amount [107022,107028]" dest="identifier: amount [35935,35941]"/>
  <match src="}: } [6098,6099]" dest="}: } [6662,6663]"/>
  <match src="call_expression [76427,76522]" dest="call_expression [80559,80664]"/>
  <match src="variable_declaration_statement [89591,89788]" dest="variable_declaration_statement [72602,72758]"/>
  <match src="return_type_definition [100511,100528]" dest="return_type_definition [29424,29441]"/>
  <match src="memory: memory [4680,4686]" dest="memory: memory [5244,5250]"/>
  <match src="identifier: block [103397,103402]" dest="identifier: block [32310,32315]"/>
  <match src="identifier: State [96816,96821]" dest="identifier: State [28034,28039]"/>
  <match src="}: } [6247,6248]" dest="}: } [6811,6812]"/>
  <match src="function_definition [101698,101825]" dest="function_definition [30611,30738]"/>
  <match src="type_name [101894,101901]" dest="type_name [30807,30814]"/>
  <match src="identifier: length [45241,45247]" dest="identifier: length [50432,50438]"/>
  <match src="event: event [88144,88149]" dest="event: event [71163,71168]"/>
  <match src="primitive_type [104423,104430]" dest="primitive_type [33336,33343]"/>
  <match src="identifier: balanceCheck [90001,90013]" dest="identifier: balanceCheck [55265,55277]"/>
  <match src="identifier: account [88420,88427]" dest="identifier: account [71309,71316]"/>
  <match src="event_definition [88203,88258]" dest="event_definition [71222,71277]"/>
  <match src="}: } [101434,101435]" dest="}: } [30347,30348]"/>
  <match src="): ) [113688,113689]" dest="): ) [42601,42602]"/>
  <match src="identifier: msg [88640,88643]" dest="identifier: msg [73563,73566]"/>
  <match src="contract: contract [87812,87820]" dest="contract: contract [71036,71044]"/>
  <match src="function_body [113548,113803]" dest="function_body [42461,42716]"/>
  <match src=":: : [8154,8155]" dest=":: : [8718,8719]"/>
  <match src="parameter [7327,7336]" dest="parameter [7891,7900]"/>
  <match src="state_mutability [44904,44908]" dest="state_mutability [50095,50099]"/>
  <match src="uint256: uint256 [7327,7334]" dest="uint256: uint256 [7891,7898]"/>
  <match src=".: . [113874,113875]" dest=".: . [42787,42788]"/>
  <match src="identifier: onlyFrozen [89179,89189]" dest="identifier: onlyFrozenOrLocked [72267,72285]"/>
  <match src="(: ( [59802,59803]" dest="(: ( [24776,24777]"/>
  <match src="identifier: one [74157,74160]" dest="identifier: one [68821,68824]"/>
  <match src="binary_expression [92193,92242]" dest="binary_expression [57753,57803]"/>
  <match src="internal: internal [55479,55487]" dest="internal: internal [14592,14600]"/>
  <match src="number_literal: 0 [19932,19933]" dest="number_literal: 0 [65372,65373]"/>
  <match src="]: ] [46466,46467]" dest="]: ] [51657,51658]"/>
  <match src=".: . [101409,101410]" dest=".: . [30322,30323]"/>
  <match src="return_statement [6617,6669]" dest="return_statement [7181,7233]"/>
  <match src="identifier: value [106683,106688]" dest="identifier: value [35596,35601]"/>
  <match src="identifier: D256 [56243,56247]" dest="identifier: D256 [15356,15360]"/>
  <match src="type_name [98834,98841]" dest="type_name [77484,77491]"/>
  <match src="primitive_type [49341,49348]" dest="primitive_type [64113,64120]"/>
  <match src="}: } [46665,46666]" dest="}: } [51856,51857]"/>
  <match src="): ) [110745,110746]" dest="): ) [39658,39659]"/>
  <match src="comment: // reverse-for-loops with unsigned integer [45403,45445]" dest="comment: // reverse-for-loops with unsigned integer [50594,50636]"/>
  <match src="state_variable_declaration [52736,52791]" dest="state_variable_declaration [11849,11904]"/>
  <match src="): ) [43772,43773]" dest="): ) [48963,48964]"/>
  <match src="internal: internal [85137,85145]" dest="internal: internal [60301,60309]"/>
  <match src="return_type_definition [86123,86149]" dest="return_type_definition [55666,55701]"/>
  <match src="uint256: uint256 [95531,95538]" dest="uint256: uint256 [26749,26756]"/>
  <match src="(: ( [40128,40129]" dest="(: ( [45319,45320]"/>
  <match src="member_expression [110766,110778]" dest="member_expression [39679,39691]"/>
  <match src="return_type_definition [105056,105073]" dest="return_type_definition [33969,33986]"/>
  <match src="inheritance_specifier [116673,116678]" dest="inheritance_specifier [83044,83049]"/>
  <match src="identifier: lastReserve [74927,74938]" dest="identifier: bonded [79664,79670]"/>
  <match src=",: , [75326,75327]" dest=",: , [68072,68073]"/>
  <match src="augmented_assignment_expression [45152,45159]" dest="augmented_assignment_expression [50343,50350]"/>
  <match src="(: ( [9488,9489]" dest="(: ( [10052,10053]"/>
  <match src="if_statement [44465,44758]" dest="if_statement [49656,49949]"/>
  <match src="state_mutability [54222,54226]" dest="state_mutability [13335,13339]"/>
  <match src="call_argument [19911,19934]" dest="call_argument [65351,65374]"/>
  <match src="identifier: dollar [116504,116510]" dest="identifier: dollar [54103,54109]"/>
  <match src="[: [ [109811,109812]" dest="[: [ [38724,38725]"/>
  <match src="identifier: balanceOf [11729,11738]" dest="identifier: balanceOf [21727,21736]"/>
  <match src="primitive_type [113122,113129]" dest="primitive_type [42035,42042]"/>
  <match src="uint256: uint256 [53218,53225]" dest="uint256: uint256 [12331,12338]"/>
  <match src="): ) [81191,81192]" dest="): ) [57802,57803]"/>
  <match src="return_statement [9951,9997]" dest="return_statement [10515,10561]"/>
  <match src="primitive_type [100218,100224]" dest="primitive_type [29131,29137]"/>
  <match src="type_name [72776,72783]" dest="type_name [78591,78598]"/>
  <match src="call_expression [74941,74956]" dest="call_expression [79673,79694]"/>
  <match src="parameter [6356,6367]" dest="parameter [6920,6931]"/>
  <match src="(: ( [6240,6241]" dest="(: ( [6804,6805]"/>
  <match src="uint256: uint256 [86132,86139]" dest="uint256: uint256 [55675,55682]"/>
  <match src="primitive_type [39904,39911]" dest="primitive_type [45095,45102]"/>
  <match src="(: ( [58947,58948]" dest="(: ( [54748,54749]"/>
  <match src="memory: memory [31896,31902]" dest="memory: memory [17150,17156]"/>
  <match src="type_name [108172,108179]" dest="type_name [37085,37092]"/>
  <match src="}: } [103823,103824]" dest="}: } [32736,32737]"/>
  <match src="contract: contract [59756,59764]" dest="contract: contract [24730,24738]"/>
  <match src="member_expression [114824,114838]" dest="member_expression [69768,69782]"/>
  <match src="(: ( [64053,64054]" dest="(: ( [20887,20888]"/>
  <match src="call_expression [113644,113663]" dest="call_expression [42557,42576]"/>
  <match src=".: . [8808,8809]" dest=".: . [9372,9373]"/>
  <match src="}: } [55670,55671]" dest="}: } [14783,14784]"/>
  <match src="address: address [63402,63409]" dest="address: address [20236,20243]"/>
  <match src="uint256: uint256 [75328,75335]" dest="uint256: uint256 [68074,68081]"/>
  <match src="uint256: uint256 [56695,56702]" dest="uint256: uint256 [15808,15815]"/>
  <match src="call_argument [8606,8610]" dest="call_argument [9170,9174]"/>
  <match src="return_type_definition [10105,10122]" dest="return_type_definition [10669,10686]"/>
  <match src="identifier: v [63186,63187]" dest="identifier: v [20020,20021]"/>
  <match src="parameter [56235,56254]" dest="parameter [15348,15367]"/>
  <match src=".: . [89112,89113]" dest=".: . [72465,72466]"/>
  <match src="call_argument [90911,90916]" dest="call_argument [73468,73473]"/>
  <match src="user_defined_type [56397,56409]" dest="user_defined_type [15510,15522]"/>
  <match src="(: ( [55340,55341]" dest="(: ( [14453,14454]"/>
  <match src="type_name [75270,75282]" dest="type_name [68567,68579]"/>
  <match src="type_name [40587,40594]" dest="type_name [45778,45785]"/>
  <match src="primitive_type [46812,46819]" dest="primitive_type [52003,52010]"/>
  <match src="identifier: BASE [7069,7073]" dest="identifier: BASE [7633,7637]"/>
  <match src="event_paramater [88557,88573]" dest="event_paramater [78833,78847]"/>
  <match src="{: { [101386,101387]" dest="{: { [30299,30300]"/>
  <match src="identifier: owner [63063,63068]" dest="identifier: owner [19897,19902]"/>
  <match src="(: ( [90772,90773]" dest="(: ( [80412,80413]"/>
  <match src=".: . [8386,8387]" dest=".: . [8950,8951]"/>
  <match src="bytes32: bytes32 [39926,39933]" dest="bytes32: bytes32 [45117,45124]"/>
  <match src="}: } [6435,6436]" dest="}: } [6999,7000]"/>
  <match src="identifier: _state [109392,109398]" dest="identifier: _state [38305,38311]"/>
  <match src="primitive_type [2592,2599]" dest="primitive_type [3156,3163]"/>
  <match src="identifier: msg [91709,91712]" dest="identifier: msg [64645,64648]"/>
  <match src="state_mutability [7540,7544]" dest="state_mutability [8104,8108]"/>
  <match src="type_name [54096,54103]" dest="type_name [13209,13216]"/>
  <match src="identifier: sync [64428,64432]" dest="identifier: sync [21262,21266]"/>
  <match src="=: = [108571,108572]" dest="=: = [37484,37485]"/>
  <match src="): ) [74955,74956]" dest="): ) [79693,79694]"/>
  <match src="member_expression [102279,102294]" dest="member_expression [31192,31207]"/>
  <match src="comment: // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522 [1880,1951]" dest="comment: // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522 [2444,2515]"/>
  <match src="return_statement [56714,56739]" dest="return_statement [15827,15852]"/>
  <match src="type_name [113626,113633]" dest="type_name [42539,42546]"/>
  <match src="call_argument [19849,19850]" dest="call_argument [65281,65282]"/>
  <match src="primitive_type [96138,96145]" dest="primitive_type [27356,27363]"/>
  <match src="return_statement [501,510]" dest="return_statement [1065,1074]"/>
  <match src="comment: // assert(a == b * c + a % b); // There is no case in which this doesn't hold [3460,3537]" dest="comment: // assert(a == b * c + a % b); // There is no case in which this doesn't hold [4024,4101]"/>
  <match src="variable_declaration [29618,29639]" dest="variable_declaration [54143,54164]"/>
  <match src="call_expression [116828,116836]" dest="call_expression [83434,83442]"/>
  <match src="type_name [32623,32635]" dest="type_name [17216,17228]"/>
  <match src="parameter [42570,42584]" dest="parameter [47761,47775]"/>
  <match src="primitive_type [63926,63932]" dest="primitive_type [20760,20766]"/>
  <match src="internal: internal [107733,107741]" dest="internal: internal [36646,36654]"/>
  <match src="member_expression [110814,110840]" dest="member_expression [39727,39753]"/>
  <match src="return_type_definition [55844,55861]" dest="return_type_definition [14957,14974]"/>
  <match src="): ) [9319,9320]" dest="): ) [9883,9884]"/>
  <match src="identifier: to [63548,63550]" dest="identifier: to [20382,20384]"/>
  <match src="variable_declaration [35415,35451]" dest="variable_declaration [64430,64450]"/>
  <match src="string: string [100112,100118]" dest="string: string [29025,29031]"/>
  <match src="identifier: value [89242,89247]" dest="identifier: value [72338,72343]"/>
  <match src="[: [ [110169,110170]" dest="[: [ [39082,39083]"/>
  <match src="): ) [43226,43227]" dest="): ) [48417,48418]"/>
  <match src="parameter [4030,4039]" dest="parameter [4594,4603]"/>
  <match src="identifier: value [62873,62878]" dest="identifier: value [19707,19712]"/>
  <match src="function: function [62749,62757]" dest="function: function [19583,19591]"/>
  <match src="primitive_type [80364,80371]" dest="primitive_type [71985,71992]"/>
  <match src=".: . [112510,112511]" dest=".: . [41423,41424]"/>
  <match src="call_expression [5964,5982]" dest="call_expression [6528,6546]"/>
  <match src="call_struct_argument [6821,6855]" dest="call_struct_argument [7385,7419]"/>
  <match src="returns: returns [56226,56233]" dest="returns: returns [15339,15346]"/>
  <match src="call_expression [81179,81192]" dest="call_expression [57790,57803]"/>
  <match src="number_literal: 0 [3407,3408]" dest="number_literal: 0 [3971,3972]"/>
  <match src="user_defined_type [8865,8869]" dest="user_defined_type [9429,9433]"/>
  <match src="identifier: stringifyTruncated [41374,41392]" dest="identifier: stringifyTruncated [46565,46583]"/>
  <match src="uint256: uint256 [75302,75309]" dest="uint256: uint256 [68051,68058]"/>
  <match src="state_mutability [9156,9160]" dest="state_mutability [9720,9724]"/>
  <match src="identifier: value [88885,88890]" dest="identifier: value [72251,72256]"/>
  <match src="expression_statement [113378,113472]" dest="expression_statement [42291,42385]"/>
  <match src="primitive_type [25515,25522]" dest="primitive_type [78653,78660]"/>
  <match src="uint256: uint256 [9928,9935]" dest="uint256: uint256 [10492,10499]"/>
  <match src="identifier: EpochStrategy [52936,52949]" dest="identifier: EpochStrategy [12049,12062]"/>
  <match src="string: string [6938,6944]" dest="string: string [7502,7508]"/>
  <match src="string_literal [58900,58914]" dest="string_literal [64572,64600]"/>
  <match src="call_expression [90227,90343]" dest="call_expression [81622,81819]"/>
  <match src="external: external [106898,106906]" dest="external: external [35811,35819]"/>
  <match src="identifier: sender [90686,90692]" dest="identifier: sender [63236,63242]"/>
  <match src="]: ] [112677,112678]" dest="]: ] [41590,41591]"/>
  <match src="parameter [27979,27986]" dest="parameter [62566,62573]"/>
  <match src="(: ( [9968,9969]" dest="(: ( [10532,10533]"/>
  <match src="identifier: j [45625,45626]" dest="identifier: j [50816,50817]"/>
  <match src="identifier: amount0In [63439,63448]" dest="identifier: amount0In [20273,20282]"/>
  <match src="): ) [110009,110010]" dest="): ) [38922,38923]"/>
  <match src="visibility [59941,59947]" dest="visibility [24915,24921]"/>
  <match src="identifier: stringify [42378,42387]" dest="identifier: stringify [47569,47578]"/>
  <match src="returns: returns [54690,54697]" dest="returns: returns [13803,13810]"/>
  <match src="function: function [62463,62471]" dest="function: function [19297,19305]"/>
  <match src="pure: pure [55065,55069]" dest="pure: pure [14178,14182]"/>
  <match src="identifier: value [88308,88313]" dest="identifier: value [60183,60188]"/>
  <match src="identifier: unfreeze [85111,85119]" dest="identifier: step [60294,60298]"/>
  <match src="uint256: uint256 [95783,95790]" dest="uint256: uint256 [27001,27008]"/>
  <match src="external: external [62304,62312]" dest="external: external [19138,19146]"/>
  <match src="(: ( [96637,96638]" dest="(: ( [27855,27856]"/>
  <match src=",: , [22048,22049]" dest=",: , [64964,64965]"/>
  <match src="solidity: solidity [41,49]" dest="solidity: solidity [41,49]"/>
  <match src="uint256: uint256 [78369,78376]" dest="uint256: uint256 [66816,66823]"/>
  <match src="identifier: _state [104685,104691]" dest="identifier: _state [33598,33604]"/>
  <match src="identifier: that [92606,92610]" dest="identifier: that [79523,79527]"/>
  <match src="number_literal: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc [97910,97976]" dest="number_literal: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc [76560,76626]"/>
  <match src="member_expression [103919,103932]" dest="member_expression [32832,32845]"/>
  <match src="call_argument [88963,88968]" dest="call_argument [71926,71931]"/>
  <match src="function_definition [101125,101223]" dest="function_definition [30038,30136]"/>
  <match src=",: , [43097,43098]" dest=",: , [48288,48289]"/>
  <match src="expression_statement [45533,45537]" dest="expression_statement [50724,50728]"/>
  <match src="identifier: value [90107,90112]" dest="identifier: value [73038,73043]"/>
  <match src="type_name [64265,64269]" dest="type_name [21099,21103]"/>
  <match src=".: . [90902,90903]" dest=".: . [73459,73460]"/>
  <match src="number_literal: 4 [47608,47609]" dest="number_literal: 4 [52799,52800]"/>
  <match src="function: function [9622,9630]" dest="function: function [10186,10194]"/>
  <match src="identifier: amount0Out [63487,63497]" dest="identifier: amount0Out [20321,20331]"/>
  <match src="yul_identifier [94560,94564]" dest="yul_identifier [75418,75422]"/>
  <match src="identifier: add [107231,107234]" dest="identifier: add [36144,36147]"/>
  <match src="primitive_type [113302,113309]" dest="primitive_type [42215,42222]"/>
  <match src="call_argument [7759,7763]" dest="call_argument [8323,8327]"/>
  <match src="uint256: uint256 [57952,57959]" dest="uint256: uint256 [55638,55645]"/>
  <match src="identifier: self [8585,8589]" dest="identifier: self [9149,9153]"/>
  <match src="type_name [113830,113837]" dest="type_name [42743,42750]"/>
  <match src="identifier: from [13774,13778]" dest="identifier: from [23772,23776]"/>
  <match src="identifier: tokenB [86765,86771]" dest="identifier: candidate [81317,81326]"/>
  <match src="(: ( [116815,116816]" dest="(: ( [55151,55152]"/>
  <match src="identifier: amount [13542,13548]" dest="identifier: amount [23540,23546]"/>
  <match src="identifier: outstanding [112286,112297]" dest="identifier: outstanding [41199,41210]"/>
  <match src="): ) [63837,63838]" dest="): ) [20671,20672]"/>
  <match src=".: . [104853,104854]" dest=".: . [33766,33767]"/>
  <match src=",: , [21185,21186]" dest=",: , [65465,65466]"/>
  <match src="struct_member [96448,96467]" dest="struct_member [27666,27685]"/>
  <match src="identifier: _state [108224,108230]" dest="identifier: _state [37137,37143]"/>
  <match src="member_expression [107885,107910]" dest="member_expression [36798,36823]"/>
  <match src="type_name [109755,109761]" dest="type_name [38668,38674]"/>
  <match src="return: return [7945,7951]" dest="return: return [8509,8515]"/>
  <match src="(: ( [110203,110204]" dest="(: ( [39116,39117]"/>
  <match src="returns: returns [2628,2635]" dest="returns: returns [3192,3199]"/>
  <match src="call_argument [80364,80377]" dest="call_argument [71985,71998]"/>
  <match src="identifier: mint [64151,64155]" dest="identifier: mint [20985,20989]"/>
  <match src="variable_declaration [34227,34261]" dest="variable_declaration [17874,17905]"/>
  <match src="comment: // 12 [54021,54026]" dest="comment: // 12 [13134,13139]"/>
  <match src="identifier: b [3403,3404]" dest="identifier: b [3967,3968]"/>
  <match src="assignment_expression [45336,45345]" dest="assignment_expression [50527,50536]"/>
  <match src="call_argument [89286,89296]" dest="call_argument [73242,73252]"/>
  <match src="identifier: RPAREN [42982,42988]" dest="identifier: RPAREN [48173,48179]"/>
  <match src="identifier: Coupons [95918,95925]" dest="identifier: Coupons [27136,27143]"/>
  <match src="return: return [35578,35584]" dest="return: return [67197,67203]"/>
  <match src="&quot;: &quot; [91256,91257]" dest="&quot;: &quot; [81441,81442]"/>
  <match src="identifier: LibEIP712 [58031,58040]" dest="identifier: transferFrom [54544,54556]"/>
  <match src="constant: constant [53881,53889]" dest="constant: constant [12994,13002]"/>
  <match src="ternary_expression [89645,89718]" dest="ternary_expression [72620,72738]"/>
  <match src="return: return [100981,100987]" dest="return: return [29894,29900]"/>
  <match src="primitive_type [45774,45781]" dest="primitive_type [50965,50972]"/>
  <match src="block_statement [102465,102518]" dest="block_statement [31378,31431]"/>
  <match src="member_expression [89286,89296]" dest="member_expression [73242,73252]"/>
  <match src="bytes32: bytes32 [97863,97870]" dest="bytes32: bytes32 [76513,76520]"/>
  <match src="function_definition [107708,107782]" dest="function_definition [36621,36695]"/>
  <match src="identifier: BASE [6241,6245]" dest="identifier: BASE [6805,6809]"/>
  <match src="function_definition [110421,110683]" dest="function_definition [39334,39596]"/>
  <match src="function: function [7459,7467]" dest="function: function [8023,8031]"/>
  <match src=",: , [63497,63498]" dest=",: , [20331,20332]"/>
  <match src="memory: memory [44052,44058]" dest="memory: memory [49243,49249]"/>
  <match src="function_definition [105005,105134]" dest="function_definition [33918,34047]"/>
  <match src="parameter [42594,42610]" dest="parameter [47785,47801]"/>
  <match src="identifier: spender [110391,110398]" dest="identifier: spender [39304,39311]"/>
  <match src="event_paramater [25602,25626]" dest="event_paramater [60132,60150]"/>
  <match src="primitive_type [44922,44927]" dest="primitive_type [50113,50118]"/>
  <match src="string_literal [44987,44990]" dest="string_literal [50178,50181]"/>
  <match src="identifier: D256 [111133,111137]" dest="identifier: D256 [40046,40050]"/>
  <match src="modifier_definition [114723,114927]" dest="modifier_definition [69667,69871]"/>
  <match src="call_argument [58114,58118]" dest="call_argument [54574,54578]"/>
  <match src="public: public [98195,98201]" dest="public: public [76845,76851]"/>
  <match src="returns: returns [47724,47731]" dest="returns: returns [52915,52922]"/>
  <match src="memory: memory [75638,75644]" dest="memory: memory [68612,68618]"/>
  <match src="new_expression [45231,45240]" dest="new_expression [50422,50431]"/>
  <match src="public: public [59941,59947]" dest="public: public [24915,24921]"/>
  <match src="call_argument [42271,42276]" dest="call_argument [47462,47467]"/>
  <match src="primitive_type [104759,104766]" dest="primitive_type [33672,33679]"/>
  <match src="): ) [32052,32053]" dest="): ) [17205,17206]"/>
  <match src="primitive_type [100614,100621]" dest="primitive_type [29527,29534]"/>
  <match src="external: external [63002,63010]" dest="external: external [19836,19844]"/>
  <match src="return_type_definition [9562,9576]" dest="return_type_definition [10126,10140]"/>
  <match src="return_statement [8757,8819]" dest="return_statement [9321,9383]"/>
  <match src="parameter [111079,111104]" dest="parameter [39992,40017]"/>
  <match src="call_expression [80345,80378]" dest="call_expression [71966,71999]"/>
  <match src="&quot;: &quot; [33664,33665]" dest="&quot;: &quot; [62853,62854]"/>
  <match src="return_statement [104351,104386]" dest="return_statement [33264,33299]"/>
  <match src="primitive_type [45828,45833]" dest="primitive_type [51019,51024]"/>
  <match src="call_struct_argument [56449,56475]" dest="call_struct_argument [15562,15588]"/>
  <match src="=: = [52416,52417]" dest="=: = [11529,11530]"/>
  <match src="): ) [11603,11604]" dest="): ) [21601,21602]"/>
  <match src="identifier: sub [111512,111515]" dest="identifier: sub [40425,40428]"/>
  <match src="=: = [38485,38486]" dest="=: = [43676,43677]"/>
  <match src="identifier: value [8369,8374]" dest="identifier: value [8933,8938]"/>
  <match src="identifier: D256 [34871,34875]" dest="identifier: D256 [67841,67845]"/>
  <match src="array_access [108573,108597]" dest="array_access [37486,37510]"/>
  <match src="(: ( [7440,7441]" dest="(: ( [8004,8005]"/>
  <match src="): ) [101651,101652]" dest="): ) [30564,30565]"/>
  <match src="primitive_type [1723,1730]" dest="primitive_type [2287,2294]"/>
  <match src="pure: pure [9301,9305]" dest="pure: pure [9865,9869]"/>
  <match src="block_statement [7597,7636]" dest="block_statement [8161,8200]"/>
  <match src=".: . [109544,109545]" dest=".: . [38457,38458]"/>
  <match src="expression_statement [444,491]" dest="expression_statement [1008,1055]"/>
  <match src="&quot;: &quot; [59008,59009]" dest="&quot;: &quot; [54768,54769]"/>
  <match src="type_name [106807,106811]" dest="type_name [35720,35724]"/>
  <match src="]: ] [105665,105666]" dest="]: ] [34578,34579]"/>
  <match src="identifier: add [111555,111558]" dest="identifier: add [40468,40471]"/>
  <match src="pure: pure [9668,9672]" dest="pure: pure [10232,10236]"/>
  <match src="call_argument [868,869]" dest="call_argument [1432,1433]"/>
  <match src="yul_path [94560,94564]" dest="yul_path [75418,75422]"/>
  <match src="): ) [91671,91672]" dest="): ) [73675,73676]"/>
  <match src="primitive_type [39367,39374]" dest="primitive_type [44558,44565]"/>
  <match src=".: . [104226,104227]" dest=".: . [33139,33140]"/>
  <match src="variable_declaration_statement [44202,44217]" dest="variable_declaration_statement [49393,49408]"/>
  <match src="returns: returns [103269,103276]" dest="returns: returns [32182,32189]"/>
  <match src="internal: internal [9147,9155]" dest="internal: internal [9711,9719]"/>
  <match src="call_argument [3410,3422]" dest="call_argument [3974,3986]"/>
  <match src="contract_body [106579,113924]" dest="contract_body [35492,42837]"/>
  <match src="type_name [100405,100412]" dest="type_name [29318,29325]"/>
  <match src="identifier: liquidity [64191,64200]" dest="identifier: liquidity [21025,21034]"/>
  <match src="type_name [64393,64400]" dest="type_name [21227,21234]"/>
  <match src="identifier: _state [112482,112488]" dest="identifier: _state [41395,41401]"/>
  <match src="type_name [105438,105445]" dest="type_name [34351,34358]"/>
  <match src="primitive_type [6729,6736]" dest="primitive_type [7293,7300]"/>
  <match src="(: ( [105290,105291]" dest="(: ( [34203,34204]"/>
  <match src="call_expression [24465,24548]" dest="call_expression [79903,79971]"/>
  <match src="using_directive [79397,79424]" dest="using_directive [78522,78549]"/>
  <match src="identifier: one [111200,111203]" dest="identifier: one [40113,40116]"/>
  <match src="!=: != [22035,22037]" dest="!=: != [64951,64953]"/>
  <match src="(: ( [100194,100195]" dest="(: ( [29107,29108]"/>
  <match src="primitive_type [47679,47686]" dest="primitive_type [52870,52877]"/>
  <match src="returns: returns [105606,105613]" dest="returns: returns [34519,34526]"/>
  <match src="identifier: temp [7748,7752]" dest="identifier: temp [8312,8316]"/>
  <match src="identifier: Burn [63300,63304]" dest="identifier: Burn [20134,20138]"/>
  <match src="): ) [55266,55267]" dest="): ) [14379,14380]"/>
  <match src="parameter [12434,12441]" dest="parameter [22432,22439]"/>
  <match src="&quot;: &quot; [21321,21322]" dest="&quot;: &quot; [71611,71612]"/>
  <match src="array_access [102279,102318]" dest="array_access [31192,31231]"/>
  <match src=",: , [14010,14011]" dest=",: , [24008,24009]"/>
  <match src="): ) [108005,108006]" dest="): ) [36918,36919]"/>
  <match src="return_type_definition [100396,100413]" dest="return_type_definition [29309,29326]"/>
  <match src="assignment_expression [109212,109277]" dest="assignment_expression [38125,38190]"/>
  <match src=",: , [102680,102681]" dest=",: , [31593,31594]"/>
  <match src="comment: /* Epoch */ [52913,52924]" dest="comment: /* Epoch */ [12026,12037]"/>
  <match src="call_argument [107688,107694]" dest="call_argument [36601,36607]"/>
  <match src="primitive_type [88557,88564]" dest="primitive_type [78833,78840]"/>
  <match src="(: ( [64469,64470]" dest="(: ( [21303,21304]"/>
  <match src="{: { [102403,102404]" dest="{: { [31316,31317]"/>
  <match src=",: , [109355,109356]" dest=",: , [38268,38269]"/>
  <match src="type_name [90448,90455]" dest="type_name [63038,63045]"/>
  <match src="[: [ [110623,110624]" dest="[: [ [39536,39537]"/>
  <match src="type_alias [27520,27527]" dest="type_alias [16689,16696]"/>
  <match src="identifier: Decimal [5609,5616]" dest="identifier: Decimal [6173,6180]"/>
  <match src="identifier: _state [107209,107215]" dest="identifier: _state [36122,36128]"/>
  <match src="returns: returns [104323,104330]" dest="returns: returns [33236,33243]"/>
  <match src="call_expression [90048,90062]" dest="call_expression [73922,73936]"/>
  <match src="}: } [109002,109003]" dest="}: } [37915,37916]"/>
  <match src="return: return [9951,9957]" dest="return: return [10515,10521]"/>
  <match src="member_expression [107656,107670]" dest="member_expression [36569,36583]"/>
  <match src="identifier: s [63208,63209]" dest="identifier: s [20042,20043]"/>
  <match src="user_defined_type [59776,59782]" dest="user_defined_type [24750,24756]"/>
  <match src="=: = [110792,110793]" dest="=: = [39705,39706]"/>
  <match src="type_name [61095,61102]" dest="type_name [54891,54898]"/>
  <match src="&quot;: &quot; [58900,58901]" dest="&quot;: &quot; [64572,64573]"/>
  <match src="call_expression [88672,88679]" dest="call_expression [83362,83370]"/>
  <match src="string [89305,89343]" dest="string [81587,81601]"/>
  <match src=".: . [76434,76435]" dest=".: . [80566,80567]"/>
  <match src="identifier: currentPeriod [103660,103673]" dest="identifier: currentPeriod [32573,32586]"/>
  <match src="identifier: Decimal [30699,30706]" dest="identifier: Decimal [18815,18822]"/>
  <match src="string_literal [17841,17883]" dest="string_literal [73385,73416]"/>
  <match src="identifier: reason [113464,113470]" dest="identifier: reason [42377,42383]"/>
  <match src="user_defined_type [8847,8851]" dest="user_defined_type [9411,9415]"/>
  <match src="call_argument [112861,112867]" dest="call_argument [41774,41780]"/>
  <match src="variable_declaration [90448,90467]" dest="variable_declaration [63038,63051]"/>
  <match src="call_argument [42853,42879]" dest="call_argument [48044,48070]"/>
  <match src="struct_member [95694,95715]" dest="struct_member [26912,26933]"/>
  <match src=",: , [13513,13514]" dest=",: , [23511,23512]"/>
  <match src="returns: returns [8894,8901]" dest="returns: returns [9458,9465]"/>
  <match src="call_expression [7048,7083]" dest="call_expression [7612,7647]"/>
  <match src="member_expression [113416,113433]" dest="member_expression [42329,42346]"/>
  <match src="identifier: encodePacked [42023,42035]" dest="identifier: encodePacked [47214,47226]"/>
  <match src="state_mutability [43953,43957]" dest="state_mutability [49144,49148]"/>
  <match src="identifier: D256 [27540,27544]" dest="identifier: D256 [16709,16713]"/>
  <match src="comment: /**      * Global      */ [100694,100719]" dest="comment: /**      * Global      */ [29607,29632]"/>
  <match src="call_argument [86669,86673]" dest="call_argument [54519,54523]"/>
  <match src="identifier: stringify [46711,46720]" dest="identifier: stringify [51902,51911]"/>
  <match src="binary_expression [47567,47584]" dest="binary_expression [52758,52775]"/>
  <match src="(: ( [89822,89823]" dest="(: ( [73365,73366]"/>
  <match src="internal: internal [27856,27864]" dest="internal: internal [16838,16846]"/>
  <match src="type_name [8903,8907]" dest="type_name [9467,9471]"/>
  <match src="(: ( [9314,9315]" dest="(: ( [9878,9879]"/>
  <match src="identifier: input [45876,45881]" dest="identifier: input [51067,51072]"/>
  <match src="type_name [2603,2610]" dest="type_name [3167,3174]"/>
  <match src="{: { [41266,41267]" dest="{: { [46457,46458]"/>
  <match src="expression_statement [32064,32158]" dest="expression_statement [55176,55255]"/>
  <match src=".: . [100805,100806]" dest=".: . [29718,29719]"/>
  <match src=".: . [103306,103307]" dest=".: . [32219,32220]"/>
  <match src="interface: interface [62102,62111]" dest="interface: interface [18936,18945]"/>
  <match src="function: function [106848,106856]" dest="function: function [35761,35769]"/>
  <match src="uint256: uint256 [31816,31823]" dest="uint256: uint256 [55110,55117]"/>
  <match src="identifier: ASCII_ZERO [46094,46104]" dest="identifier: ASCII_ZERO [51285,51295]"/>
  <match src="type_name [5802,5809]" dest="type_name [6366,6373]"/>
  <match src="): ) [4731,4732]" dest="): ) [5295,5296]"/>
  <match src="member_expression [109495,109535]" dest="member_expression [38408,38448]"/>
  <match src="identifier: sender [88832,88838]" dest="identifier: sender [82014,82020]"/>
  <match src="bytes32: bytes32 [39904,39911]" dest="bytes32: bytes32 [45095,45102]"/>
  <match src="{: { [40046,40047]" dest="{: { [45237,45238]"/>
  <match src="returns: returns [104023,104030]" dest="returns: returns [32936,32943]"/>
  <match src="function_definition [40523,41076]" dest="function_definition [45714,46267]"/>
  <match src="primitive_type [81494,81501]" dest="primitive_type [67987,67994]"/>
  <match src="comment: /*     Copyright 2020 Reflective Dollar Devs, based on the works of the Dynamic Dollar Devs and the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [105868,106543]" dest="comment: /*     Copyright 2020 Reflective Dollar Devs, based on the works of the Dynamic Dollar Devs and the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [82341,83016]"/>
  <match src="[: [ [112837,112838]" dest="[: [ [41750,41751]"/>
  <match src="parameter [112746,112760]" dest="parameter [41659,41673]"/>
  <match src="type_name [102875,102882]" dest="type_name [31788,31795]"/>
  <match src="binary_expression [113703,113724]" dest="binary_expression [42616,42637]"/>
  <match src="identifier: IMPLEMENTATION_SLOT [97888,97907]" dest="identifier: IMPLEMENTATION_SLOT [76538,76557]"/>
  <match src="(: ( [7197,7198]" dest="(: ( [7761,7762]"/>
  <match src="{: { [102985,102986]" dest="{: { [31898,31899]"/>
  <match src="uint256: uint256 [73048,73055]" dest="uint256: uint256 [59872,59879]"/>
  <match src="primitive_type [101588,101595]" dest="primitive_type [30501,30508]"/>
  <match src="identifier: require [24465,24472]" dest="identifier: decrementRejectFor [79903,79921]"/>
  <match src=".: . [114831,114832]" dest=".: . [69775,69776]"/>
  <match src="}: } [44757,44758]" dest="}: } [49948,49949]"/>
  <match src="identifier: that [115240,115244]" dest="identifier: that [70184,70188]"/>
  <match src="returns: returns [100300,100307]" dest="returns: returns [29213,29220]"/>
  <match src="function_definition [19734,20198]" dest="function_definition [65145,65861]"/>
  <match src="(: ( [105382,105383]" dest="(: ( [34295,34296]"/>
  <match src=",: , [73614,73615]" dest=",: , [81918,81919]"/>
  <match src="identifier: currentStart [103204,103216]" dest="identifier: currentStart [32117,32129]"/>
  <match src="comment: // ============ Library Functions ============ [38827,38873]" dest="comment: // ============ Library Functions ============ [44018,44064]"/>
  <match src="identifier: reason [43483,43489]" dest="identifier: reason [48674,48680]"/>
  <match src="member_expression [101195,101216]" dest="member_expression [30108,30129]"/>
  <match src="if: if [61189,61191]" dest="if: if [65592,65594]"/>
  <match src="parameter [29566,29581]" dest="parameter [53986,54001]"/>
  <match src="identifier: _state [107656,107662]" dest="identifier: _state [36569,36575]"/>
  <match src="identifier: expiring [104087,104095]" dest="identifier: expiring [33000,33008]"/>
  <match src="function: function [7099,7107]" dest="function: function [7663,7671]"/>
  <match src="=: = [110594,110595]" dest="=: = [39507,39508]"/>
  <match src="return_statement [101505,101535]" dest="return_statement [30418,30448]"/>
  <match src="array_access [110351,110399]" dest="array_access [39264,39312]"/>
  <match src="identifier: amount1 [64270,64277]" dest="identifier: amount1 [21104,21111]"/>
  <match src="member_expression [109796,109811]" dest="member_expression [38709,38724]"/>
  <match src="): ) [111206,111207]" dest="): ) [40119,40120]"/>
  <match src="identifier: _state [107885,107891]" dest="identifier: _state [36798,36804]"/>
  <match src="return_statement [44980,44991]" dest="return_statement [50171,50182]"/>
  <match src="public: public [100843,100849]" dest="public: public [29756,29762]"/>
  <match src="member_expression [111455,111558]" dest="member_expression [40368,40471]"/>
  <match src="identifier: balanceCheck [88790,88802]" dest="identifier: balanceCheck [55587,55599]"/>
  <match src="]: ] [104712,104713]" dest="]: ] [33625,33626]"/>
  <match src="parameter [3259,3285]" dest="parameter [3823,3849]"/>
  <match src="parameter [11779,11786]" dest="parameter [21777,21784]"/>
  <match src=".: . [58040,58041]" dest=".: . [54543,54544]"/>
  <match src="]: ] [103796,103797]" dest="]: ] [32709,32710]"/>
  <match src="private: private [15950,15957]" dest="private: private [17084,17091]"/>
  <match src="boolean_literal [107071,107076]" dest="boolean_literal [35984,35989]"/>
  <match src="number_literal: 0 [102227,102228]" dest="number_literal: 0 [31140,31141]"/>
  <match src="identifier: coupons [109821,109828]" dest="identifier: coupons [38734,38741]"/>
  <match src="primitive_type [31816,31823]" dest="primitive_type [55110,55117]"/>
  <match src="member_expression [109907,109947]" dest="member_expression [38820,38860]"/>
  <match src="call_argument [7623,7624]" dest="call_argument [8187,8188]"/>
  <match src="returns: returns [100511,100518]" dest="returns: returns [29424,29431]"/>
  <match src="identifier: sub [110810,110813]" dest="identifier: sub [39723,39726]"/>
  <match src="identifier: balance [107864,107871]" dest="identifier: balance [36777,36784]"/>
  <match src=",: , [25600,25601]" dest=",: , [60130,60131]"/>
  <match src="call_argument [40870,40896]" dest="call_argument [46061,46087]"/>
  <match src="identifier: totalSupply [102071,102082]" dest="identifier: totalSupply [30984,30995]"/>
  <match src="}: } [55908,55909]" dest="}: } [15021,15022]"/>
  <match src="=: = [47601,47602]" dest="=: = [52792,52793]"/>
  <match src="identifier: amount1Out [63512,63522]" dest="identifier: amount1Out [20346,20356]"/>
  <match src="parameter [44868,44881]" dest="parameter [50059,50072]"/>
  <match src="primitive_type [95812,95819]" dest="primitive_type [27030,27037]"/>
  <match src="{: { [108016,108017]" dest="{: { [36929,36930]"/>
  <match src=".: . [112434,112435]" dest=".: . [41347,41348]"/>
  <match src="identifier: value [8771,8776]" dest="identifier: value [9335,9340]"/>
  <match src="type_name [52829,52836]" dest="type_name [11942,11949]"/>
  <match src="return_type_definition [72008,72025]" dest="return_type_definition [25821,25838]"/>
  <match src="primitive_type [41883,41890]" dest="primitive_type [47074,47081]"/>
  <match src="(: ( [5968,5969]" dest="(: ( [6532,6533]"/>
  <match src="type_name [88500,88507]" dest="type_name [78867,78874]"/>
  <match src="(: ( [55163,55164]" dest="(: ( [14276,14277]"/>
  <match src=",: , [34517,34518]" dest=",: , [62968,62969]"/>
  <match src="identifier: initialize [98182,98192]" dest="identifier: initialize [76832,76842]"/>
  <match src="): ) [3285,3286]" dest="): ) [3849,3850]"/>
  <match src="type_name [96498,96505]" dest="type_name [27716,27723]"/>
  <match src="assignment_expression [113868,113915]" dest="assignment_expression [42781,42828]"/>
  <match src="member_expression [7246,7256]" dest="member_expression [7810,7820]"/>
  <match src="constant: constant [52752,52760]" dest="constant: constant [11865,11873]"/>
  <match src="): ) [115289,115290]" dest="): ) [70233,70234]"/>
  <match src="!=: != [4753,4755]" dest="!=: != [5317,5319]"/>
  <match src="{: { [113726,113727]" dest="{: { [42639,42640]"/>
  <match src="parameter [100218,100231]" dest="parameter [29131,29144]"/>
  <match src="state_mutability [38981,38985]" dest="state_mutability [44172,44176]"/>
  <match src=",: , [63151,63152]" dest=",: , [19985,19986]"/>
  <match src="string_literal [21187,21222]" dest="string_literal [65482,65519]"/>
  <match src="identifier: D256 [9641,9645]" dest="identifier: D256 [10205,10209]"/>
  <match src="(: ( [56285,56286]" dest="(: ( [15398,15399]"/>
  <match src="view: view [104018,104022]" dest="view: view [32931,32935]"/>
  <match src="primitive_type [106773,106780]" dest="primitive_type [35686,35693]"/>
  <match src="identifier: msg [90883,90886]" dest="identifier: msg [73440,73443]"/>
  <match src="member_expression [113644,113667]" dest="member_expression [42557,42580]"/>
  <match src="returns: returns [8319,8326]" dest="returns: returns [8883,8890]"/>
  <match src="identifier: amount [108746,108752]" dest="identifier: amount [37659,37665]"/>
  <match src="expression_statement [92167,92334]" dest="expression_statement [57727,57911]"/>
  <match src="function_body [55362,55434]" dest="function_body [14475,14547]"/>
  <match src="user_defined_type [31883,31895]" dest="user_defined_type [17137,17149]"/>
  <match src="event_paramater [98135,98165]" dest="event_paramater [76785,76815]"/>
  <match src="type_name [58206,58213]" dest="type_name [71769,71776]"/>
  <match src="identifier: _state [100988,100994]" dest="identifier: _state [29901,29907]"/>
  <match src="user_defined_type [96577,96584]" dest="user_defined_type [27795,27802]"/>
  <match src="identifier: Account [102387,102394]" dest="identifier: Account [31300,31307]"/>
  <match src="return_statement [56106,56151]" dest="return_statement [15219,15264]"/>
  <match src="call_expression [90470,90509]" dest="call_expression [73142,73207]"/>
  <match src="primitive_type [102175,102182]" dest="primitive_type [31088,31095]"/>
  <match src="identifier: offset [54515,54521]" dest="identifier: offset [13628,13634]"/>
  <match src="memory: memory [98480,98486]" dest="memory: memory [77130,77136]"/>
  <match src=",: , [42168,42169]" dest=",: , [47359,47360]"/>
  <match src=",: , [90783,90784]" dest=",: , [80423,80424]"/>
  <match src="member_expression [92193,92210]" dest="member_expression [57753,57771]"/>
  <match src="function_definition [63615,63673]" dest="function_definition [20449,20507]"/>
  <match src="string [2062,2097]" dest="string [2626,2661]"/>
  <match src="(: ( [64155,64156]" dest="(: ( [20989,20990]"/>
  <match src="memory: memory [8450,8456]" dest="memory: memory [9014,9020]"/>
  <match src="]: ] [110177,110178]" dest="]: ] [39090,39091]"/>
  <match src="return_type_definition [4715,4732]" dest="return_type_definition [5279,5296]"/>
  <match src="}: } [56148,56149]" dest="}: } [15261,15262]"/>
  <match src="memory: memory [113344,113350]" dest="memory: memory [42257,42263]"/>
  <match src=".: . [103925,103926]" dest=".: . [32838,32839]"/>
  <match src="primitive_type [28131,28138]" dest="primitive_type [61442,61449]"/>
  <match src="type_name [39885,39889]" dest="type_name [45076,45080]"/>
  <match src="primitive_type [58106,58113]" dest="primitive_type [54566,54573]"/>
  <match src="primitive_type [107448,107455]" dest="primitive_type [36361,36368]"/>
  <match src="returns: returns [55844,55851]" dest="returns: returns [14957,14964]"/>
  <match src="primitive_type [113520,113527]" dest="primitive_type [42433,42440]"/>
  <match src="identifier: votes [104714,104719]" dest="identifier: votes [33627,33632]"/>
  <match src="): ) [33596,33597]" dest="): ) [67606,67607]"/>
  <match src="): ) [19973,19974]" dest="): ) [65421,65422]"/>
  <match src="visibility [52656,52663]" dest="visibility [11769,11776]"/>
  <match src="type_name [112020,112027]" dest="type_name [40933,40940]"/>
  <match src="identifier: getBootstrappingPeriod [54769,54791]" dest="identifier: getBootstrappingPeriod [13882,13904]"/>
  <match src="identifier: account [113756,113763]" dest="identifier: account [42669,42676]"/>
  <match src="{: { [100873,100874]" dest="{: { [29786,29787]"/>
  <match src="): ) [58807,58808]" dest="): ) [55047,55048]"/>
  <match src=".: . [104095,104096]" dest=".: . [33008,33009]"/>
  <match src="identifier: amount [108610,108616]" dest="identifier: amount [37523,37529]"/>
  <match src=",: , [96015,96016]" dest=",: , [27233,27234]"/>
  <match src="identifier: numerator [9849,9858]" dest="identifier: numerator [10413,10422]"/>
  <match src="(: ( [1722,1723]" dest="(: ( [2286,2287]"/>
  <match src="returns: returns [6036,6043]" dest="returns: returns [6600,6607]"/>
  <match src="(: ( [45875,45876]" dest="(: ( [51066,51067]"/>
  <match src="view: view [34777,34781]" dest="view: view [68312,68316]"/>
  <match src="identifier: D256 [7301,7305]" dest="identifier: D256 [7865,7869]"/>
  <match src="identifier: epoch [102217,102222]" dest="identifier: epoch [31130,31135]"/>
  <match src="number_literal: 65 [47410,47412]" dest="number_literal: 65 [52601,52603]"/>
  <match src="comment: /**      * @dev Emitted when the implementation is upgraded.      * @param implementation Address of the new implementation.      */ [97983,98115]" dest="comment: /**      * @dev Emitted when the implementation is upgraded.      * @param implementation Address of the new implementation.      */ [76633,76765]"/>
  <match src="type_name [64130,64134]" dest="type_name [20964,20968]"/>
  <match src="(: ( [105024,105025]" dest="(: ( [33937,33938]"/>
  <match src="return_type_definition [101477,101494]" dest="return_type_definition [30390,30407]"/>
  <match src=".: . [112826,112827]" dest=".: . [41739,41740]"/>
  <match src="member_expression [101512,101534]" dest="member_expression [30425,30447]"/>
  <match src="identifier: D256 [75278,75282]" dest="identifier: D256 [68575,68579]"/>
  <match src="memory: memory [6708,6714]" dest="memory: memory [7272,7278]"/>
  <match src="identifier: candidate [113838,113847]" dest="identifier: candidate [42751,42760]"/>
  <match src="if_statement [43264,43816]" dest="if_statement [48455,49007]"/>
  <match src="=: = [113642,113643]" dest="=: = [42555,42556]"/>
  <match src="identifier: _state [101512,101518]" dest="identifier: _state [30425,30431]"/>
  <match src="expression_statement [91278,91416]" dest="expression_statement [80758,80857]"/>
  <match src="return_statement [101994,102003]" dest="return_statement [30907,30916]"/>
  <match src="!: ! [43268,43269]" dest="!: ! [48459,48460]"/>
  <match src="new_expression [44815,44824]" dest="new_expression [50006,50015]"/>
  <match src="type_cast_expression [45605,45633]" dest="type_cast_expression [50796,50824]"/>
  <match src="(: ( [8170,8171]" dest="(: ( [8734,8735]"/>
  <match src="call_expression [112465,112472]" dest="call_expression [41378,41385]"/>
  <match src="]: ] [102767,102768]" dest="]: ] [31680,31681]"/>
  <match src=":: : [7964,7965]" dest=":: : [8528,8529]"/>
  <match src="identifier: expiration [111789,111799]" dest="identifier: expiration [40702,40712]"/>
  <match src="parenthesized_expression [43295,43805]" dest="parenthesized_expression [48486,48996]"/>
  <match src="string: string [3259,3265]" dest="string: string [3823,3829]"/>
  <match src="uint256: uint256 [96476,96483]" dest="uint256: uint256 [27694,27701]"/>
  <match src="call_argument [91659,91672]" dest="call_argument [73663,73676]"/>
  <match src=".: . [30706,30707]" dest=".: . [18822,18823]"/>
  <match src="member_expression [91766,91776]" dest="member_expression [63833,63843]"/>
  <match src="}: } [56475,56476]" dest="}: } [15588,15589]"/>
  <match src="}: } [55010,55011]" dest="}: } [14123,14124]"/>
  <match src="(: ( [100961,100962]" dest="(: ( [29874,29875]"/>
  <match src="identifier: encodePacked [42734,42746]" dest="identifier: encodePacked [47925,47937]"/>
  <match src=":: : [54989,54990]" dest=":: : [14102,14103]"/>
  <match src="identifier: mint [86656,86660]" dest="identifier: balanceOf [54501,54510]"/>
  <match src="}: } [110245,110246]" dest="}: } [39158,39159]"/>
  <match src="member_expression [104358,104385]" dest="member_expression [33271,33298]"/>
  <match src="): ) [7209,7210]" dest="): ) [7773,7774]"/>
  <match src="parameter [7863,7876]" dest="parameter [8427,8440]"/>
  <match src="call_expression [115273,115289]" dest="call_expression [70217,70233]"/>
  <match src="identifier: Status [102616,102622]" dest="identifier: Status [31529,31535]"/>
  <match src="identifier: that [90235,90239]" dest="identifier: that [81630,81634]"/>
  <match src="primitive_type [63165,63169]" dest="primitive_type [19999,20003]"/>
  <match src="member_expression [86578,86588]" dest="member_expression [80365,80375]"/>
  <match src="identifier: internalAmount [34847,34861]" dest="identifier: upper [18633,18638]"/>
  <match src="visibility [85137,85145]" dest="visibility [60301,60309]"/>
  <match src="call_argument [108746,108752]" dest="call_argument [37659,37665]"/>
  <match src="variable_declaration [86925,86938]" dest="variable_declaration [61664,61682]"/>
  <match src="(: ( [52686,52687]" dest="(: ( [11799,11800]"/>
  <match src="function_body [80328,80407]" dest="function_body [71793,72219]"/>
  <match src="identifier: CHAIN_ID [52407,52415]" dest="identifier: CHAIN_ID [11520,11528]"/>
  <match src="expression_statement [19903,19975]" dest="expression_statement [65343,65423]"/>
  <match src="identifier: _state [100431,100437]" dest="identifier: _state [29344,29350]"/>
  <match src=",: , [41558,41559]" dest=",: , [46749,46750]"/>
  <match src="parameter [34090,34104]" dest="parameter [61405,61419]"/>
  <match src=".: . [103517,103518]" dest=".: . [32430,32431]"/>
  <match src="==: == [1966,1968]" dest="==: == [2530,2532]"/>
  <match src="identifier: value [88963,88968]" dest="identifier: value [71926,71931]"/>
  <match src="user_defined_type [9259,9263]" dest="user_defined_type [9823,9827]"/>
  <match src="external: external [63807,63815]" dest="external: external [20641,20649]"/>
  <match src=",: , [111779,111780]" dest=",: , [40692,40693]"/>
  <match src="user_defined_type [8108,8112]" dest="user_defined_type [8672,8676]"/>
  <match src="identifier: value [89298,89303]" dest="identifier: value [73761,73766]"/>
  <match src="visibility [52469,52476]" dest="visibility [11582,11589]"/>
  <match src="type_name [100654,100661]" dest="type_name [29567,29574]"/>
  <match src="type_name [102682,102689]" dest="type_name [31595,31602]"/>
  <match src="}: } [99127,99128]" dest="}: } [77777,77778]"/>
  <match src=",: , [2668,2669]" dest=",: , [3232,3233]"/>
  <match src="call_expression [111239,111263]" dest="call_expression [40152,40176]"/>
  <match src="state_variable_declaration [53493,53545]" dest="state_variable_declaration [12606,12658]"/>
  <match src="memory: memory [34840,34846]" dest="memory: memory [18626,18632]"/>
  <match src="return: return [112142,112148]" dest="return: return [41055,41061]"/>
  <match src="]: ] [108875,108876]" dest="]: ] [37788,37789]"/>
  <match src="event_definition [88263,88315]" dest="event_definition [83201,83264]"/>
  <match src="identifier: account [24313,24320]" dest="identifier: account [59818,59825]"/>
  <match src="&quot;: &quot; [488,489]" dest="&quot;: &quot; [1052,1053]"/>
  <match src="(: ( [106915,106916]" dest="(: ( [35828,35829]"/>
  <match src="function_definition [105140,105267]" dest="function_definition [34053,34180]"/>
  <match src="member_expression [108337,108358]" dest="member_expression [37250,37271]"/>
  <match src="memory: memory [8476,8482]" dest="memory: memory [9040,9046]"/>
  <match src=",: , [76489,76490]" dest=",: , [80625,80626]"/>
  <match src="uint256: uint256 [55502,55509]" dest="uint256: uint256 [14615,14622]"/>
  <match src="returns: returns [62889,62896]" dest="returns: returns [19723,19730]"/>
  <match src="identifier: onlyFrozenOrFluid [88622,88639]" dest="identifier: onlyFrozenOrFluid [73545,73562]"/>
  <match src="identifier: amount [23139,23145]" dest="identifier: amount [17071,17077]"/>
  <match src="type_name [110456,110463]" dest="type_name [39369,39376]"/>
  <match src="parameter [16560,16574]" dest="parameter [55314,55328]"/>
  <match src="=: = [107503,107504]" dest="=: = [36416,36417]"/>
  <match src="identifier: div [8636,8639]" dest="identifier: div [9200,9203]"/>
  <match src="call_argument [21970,22008]" dest="call_argument [64295,64332]"/>
  <match src="member_expression [113868,113908]" dest="member_expression [42781,42821]"/>
  <match src="variable_declaration_statement [112020,112083]" dest="variable_declaration_statement [40933,40996]"/>
  <match src="number_literal: 60 [54141,54143]" dest="number_literal: 60 [13254,13256]"/>
  <match src="identifier: b [372,373]" dest="identifier: b [936,937]"/>
  <match src="{: { [9176,9177]" dest="{: { [9740,9741]"/>
  <match src="variable_declaration [7646,7662]" dest="variable_declaration [8210,8226]"/>
  <match src="uint256: uint256 [41196,41203]" dest="uint256: uint256 [46387,46394]"/>
  <match src="identifier: value [10212,10217]" dest="identifier: value [10776,10781]"/>
  <match src="identifier: currentStart [110779,110791]" dest="identifier: currentStart [39692,39704]"/>
  <match src="memory: memory [8735,8741]" dest="memory: memory [9299,9305]"/>
  <match src="(: ( [7260,7261]" dest="(: ( [7824,7825]"/>
  <match src="}: } [104266,104267]" dest="}: } [33179,33180]"/>
  <match src="string_literal [89305,89343]" dest="string_literal [81587,81601]"/>
  <match src="call_argument [8801,8805]" dest="call_argument [9365,9369]"/>
  <match src="pure: pure [56221,56225]" dest="pure: pure [15334,15338]"/>
  <match src="assignment_expression [111290,111313]" dest="assignment_expression [40203,40226]"/>
  <match src="(: ( [6883,6884]" dest="(: ( [7447,7448]"/>
  <match src="call_argument [43433,43438]" dest="call_argument [48624,48629]"/>
  <match src="(: ( [56669,56670]" dest="(: ( [15782,15783]"/>
  <match src="state_mutability [40651,40655]" dest="state_mutability [45842,45846]"/>
  <match src="variable_declaration_statement [45211,45249]" dest="variable_declaration_statement [50402,50440]"/>
  <match src="contract_body [93643,94623]" dest="contract_body [74501,75481]"/>
  <match src="}: } [55273,55274]" dest="}: } [14386,14387]"/>
  <match src="state_mutability [102706,102710]" dest="state_mutability [31619,31623]"/>
  <match src="): ) [101595,101596]" dest="): ) [30508,30509]"/>
  <match src="user_defined_type [96302,96309]" dest="user_defined_type [27520,27527]"/>
  <match src="primitive_type [38699,38705]" dest="primitive_type [43890,43896]"/>
  <match src="identifier: balance [108284,108291]" dest="identifier: balance [37197,37204]"/>
  <match src="binary_expression [115069,115104]" dest="binary_expression [70013,70048]"/>
  <match src="return: return [45722,45728]" dest="return: return [50913,50919]"/>
  <match src="(: ( [19830,19831]" dest="(: ( [65262,65263]"/>
  <match src="address: address [63775,63782]" dest="address: address [20609,20616]"/>
  <match src="identifier: b [7589,7590]" dest="identifier: b [8153,8154]"/>
  <match src="internal: internal [39418,39426]" dest="internal: internal [44609,44617]"/>
  <match src="): ) [96712,96713]" dest="): ) [27930,27931]"/>
  <match src="primitive_type [108481,108488]" dest="primitive_type [37394,37401]"/>
  <match src="comment: // populate the result with &quot;0x&quot; [46030,46062]" dest="comment: // populate the result with &quot;0x&quot; [51221,51253]"/>
  <match src="(: ( [55852,55853]" dest="(: ( [14965,14966]"/>
  <match src=".: . [88643,88644]" dest=".: . [73566,73567]"/>
  <match src="memory: memory [8870,8876]" dest="memory: memory [9434,9440]"/>
  <match src="call_expression [30463,30530]" dest="call_expression [65687,65780]"/>
  <match src="identifier: reason [108693,108699]" dest="identifier: reason [37606,37612]"/>
  <match src="return: return [6072,6078]" dest="return: return [6636,6642]"/>
  <match src="visibility [4041,4049]" dest="visibility [4605,4613]"/>
  <match src="member_expression [90395,90405]" dest="member_expression [62741,62751]"/>
  <match src="primitive_type [104595,104602]" dest="primitive_type [33508,33515]"/>
  <match src="assignment_expression [112257,112301]" dest="assignment_expression [41170,41214]"/>
  <match src="visibility [55318,55326]" dest="visibility [14431,14439]"/>
  <match src="private: private [74814,74821]" dest="private: private [18645,18652]"/>
  <match src="state_mutability [63011,63015]" dest="state_mutability [19845,19849]"/>
  <match src="uint256: uint256 [4651,4658]" dest="uint256: uint256 [5215,5222]"/>
  <match src="primitive_type [103751,103758]" dest="primitive_type [32664,32671]"/>
  <match src="identifier: balance [108666,108673]" dest="identifier: balance [37579,37586]"/>
  <match src="): ) [41705,41706]" dest="): ) [46896,46897]"/>
  <match src="identifier: self [9070,9074]" dest="identifier: self [9634,9638]"/>
  <match src="uint256: uint256 [103893,103900]" dest="uint256: uint256 [32806,32813]"/>
  <match src=".: . [54939,54940]" dest=".: . [14052,14053]"/>
  <match src="parameter [81138,81145]" dest="parameter [61645,61652]"/>
  <match src="call_argument [111192,111205]" dest="call_argument [40105,40118]"/>
  <match src="unary_expression [39454,39459]" dest="unary_expression [44645,44650]"/>
  <match src="parameter [104332,104339]" dest="parameter [33245,33252]"/>
  <match src="): ) [90736,90737]" dest="): ) [63263,63264]"/>
  <match src="(: ( [112373,112374]" dest="(: ( [41286,41287]"/>
  <match src="event_paramater [62196,62206]" dest="event_paramater [19030,19040]"/>
  <match src="identifier: self [6638,6642]" dest="identifier: self [7202,7206]"/>
  <match src="parameter [8865,8878]" dest="parameter [9429,9442]"/>
  <match src="return: return [9587,9593]" dest="return: return [10151,10157]"/>
  <match src="return_statement [74141,74171]" dest="return_statement [68806,68827]"/>
  <match src="{: { [40681,40682]" dest="{: { [45872,45873]"/>
  <match src="external: external [88613,88621]" dest="external: external [73536,73544]"/>
  <match src=".: . [109416,109417]" dest=".: . [38329,38330]"/>
  <match src="identifier: Constants [89668,89677]" dest="identifier: Constants [72663,72672]"/>
  <match src="parameter [107150,107164]" dest="parameter [36063,36077]"/>
  <match src="assignment_expression [109117,109202]" dest="assignment_expression [38030,38115]"/>
  <match src="enum_value: Locked [95377,95383]" dest="enum_value: Locked [26595,26601]"/>
  <match src="type_name [46269,46276]" dest="type_name [51460,51467]"/>
  <match src=".: . [109970,109971]" dest=".: . [38883,38884]"/>
  <match src="number_literal: 100e18 [53538,53544]" dest="number_literal: 100e18 [12651,12657]"/>
  <match src="visibility [63990,63998]" dest="visibility [20824,20832]"/>
  <match src="type_name [9841,9848]" dest="type_name [10405,10412]"/>
  <match src="emit_statement [20151,20192]" dest="emit_statement [65801,65855]"/>
  <match src="identifier: stringifyTruncated [40789,40807]" dest="identifier: stringifyTruncated [45980,45998]"/>
  <match src="identifier: block [103002,103007]" dest="identifier: block [31915,31920]"/>
  <match src="uint256: uint256 [79416,79423]" dest="uint256: uint256 [78541,78548]"/>
  <match src="type_name [52984,52991]" dest="type_name [12097,12104]"/>
  <match src="primitive_type [34752,34759]" dest="primitive_type [55483,55490]"/>
  <match src="binary_expression [1394,1399]" dest="binary_expression [1958,1963]"/>
  <match src="(: ( [89218,89219]" dest="(: ( [72314,72315]"/>
  <match src="type_cast_expression [40084,40486]" dest="type_cast_expression [45275,45677]"/>
  <match src="parameter [102387,102401]" dest="parameter [31300,31314]"/>
  <match src="type_name [95594,95601]" dest="type_name [26812,26819]"/>
  <match src="(: ( [110197,110198]" dest="(: ( [39110,39111]"/>
  <match src="comment: // '&gt;' [38773,38779]" dest="comment: // '&gt;' [43964,43970]"/>
  <match src="identifier: initialized [96207,96218]" dest="identifier: initialized [27425,27436]"/>
  <match src=",: , [88771,88772]" dest=",: , [73722,73723]"/>
  <match src="primitive_type [46083,46087]" dest="primitive_type [51274,51278]"/>
  <match src="{: { [59783,59784]" dest="{: { [24757,24758]"/>
  <match src="parameter [64393,64403]" dest="parameter [21227,21237]"/>
  <match src="parameter [102122,102137]" dest="parameter [31035,31050]"/>
  <match src="return_type_definition [56066,56095]" dest="return_type_definition [15179,15208]"/>
  <match src="visibility [110747,110755]" dest="visibility [39660,39668]"/>
  <match src="identifier: _state [103647,103653]" dest="identifier: _state [32560,32566]"/>
  <match src="function_definition [63734,63784]" dest="function_definition [20568,20618]"/>
  <match src="assignment_expression [110959,111044]" dest="assignment_expression [39872,39957]"/>
  <match src="call_expression [91028,91140]" dest="call_expression [57979,58089]"/>
  <match src="type_name [64315,64319]" dest="type_name [21149,21153]"/>
  <match src="identifier: sender [89113,89119]" dest="identifier: sender [72466,72472]"/>
  <match src="string_literal [92752,92773]" dest="string_literal [79628,79635]"/>
  <match src="state_variable_declaration [38457,38490]" dest="state_variable_declaration [43648,43681]"/>
  <match src="identifier: Provide [88492,88499]" dest="identifier: Commit [78860,78866]"/>
  <match src="(: ( [13163,13164]" dest="(: ( [23161,23162]"/>
  <match src="): ) [55860,55861]" dest="): ) [14973,14974]"/>
  <match src="identifier: ERC20 [15783,15788]" dest="identifier: Market [59530,59536]"/>
  <match src="identifier: sub [1247,1250]" dest="identifier: sub [1811,1814]"/>
  <match src="returns: returns [105729,105736]" dest="returns: returns [34642,34649]"/>
  <match src="member_expression [101195,101209]" dest="member_expression [30108,30122]"/>
  <match src="}: } [7690,7691]" dest="}: } [8254,8255]"/>
  <match src="member_expression [90895,90906]" dest="member_expression [73452,73463]"/>
  <match src="type_name [62708,62712]" dest="type_name [19542,19546]"/>
  <match src="internal: internal [83033,83041]" dest="internal: internal [55330,55338]"/>
  <match src="type_cast_expression [108734,108744]" dest="type_cast_expression [37647,37657]"/>
  <match src=".: . [103007,103008]" dest=".: . [31920,31921]"/>
  <match src="): ) [103255,103256]" dest="): ) [32168,32169]"/>
  <match src="parameter [8243,8256]" dest="parameter [8807,8820]"/>
  <match src="member_expression [109151,109182]" dest="member_expression [38064,38095]"/>
  <match src="function_body [101386,101435]" dest="function_body [30299,30348]"/>
  <match src="}: } [105865,105866]" dest="}: } [34778,34779]"/>
  <match src="comment: /**      * Account      */ [108112,108138]" dest="comment: /**      * Account      */ [37025,37051]"/>
  <match src="identifier: blockTimestampLast [63933,63951]" dest="identifier: blockTimestampLast [20767,20785]"/>
  <match src="call_argument [108296,108302]" dest="call_argument [37209,37215]"/>
  <match src="internal: internal [8699,8707]" dest="internal: internal [9263,9271]"/>
  <match src="type_name [78166,78173]" dest="type_name [71446,71453]"/>
  <match src="(: ( [112909,112910]" dest="(: ( [41822,41823]"/>
  <match src="identifier: EPOCH_MAX_PERIOD [53167,53183]" dest="identifier: EPOCH_MAX_PERIOD [12280,12296]"/>
  <match src="parameter [40587,40601]" dest="parameter [45778,45792]"/>
  <match src="type_name [30337,30344]" dest="type_name [58100,58107]"/>
  <match src="call_argument [89773,89786]" dest="call_argument [72743,72756]"/>
  <match src="parameter [86757,86771]" dest="parameter [81309,81326]"/>
  <match src="uint256: uint256 [109342,109349]" dest="uint256: uint256 [38255,38262]"/>
  <match src="assignment_expression [113740,113786]" dest="assignment_expression [42653,42699]"/>
  <match src=".: . [110067,110068]" dest=".: . [38980,38981]"/>
  <match src="emit: emit [91847,91851]" dest="emit: emit [80446,80450]"/>
  <match src="member_expression [91278,91290]" dest="member_expression [80758,80770]"/>
  <match src=".: . [91640,91641]" dest=".: . [73639,73640]"/>
  <match src="type_name [9868,9875]" dest="type_name [10432,10439]"/>
  <match src=".: . [107524,107525]" dest=".: . [36437,36438]"/>
  <match src="array_access [45590,45597]" dest="array_access [50781,50788]"/>
  <match src="primitive_type [96170,96177]" dest="primitive_type [27388,27395]"/>
  <match src="function_body [104041,104109]" dest="function_body [32954,33022]"/>
  <match src="(: ( [88760,88761]" dest="(: ( [73711,73712]"/>
  <match src=",: , [64330,64331]" dest=",: , [21164,21165]"/>
  <match src="primitive_type [114640,114647]" dest="primitive_type [69584,69591]"/>
  <match src="): ) [62513,62514]" dest="): ) [19347,19348]"/>
  <match src="return_statement [6072,6101]" dest="return_statement [6636,6665]"/>
  <match src="type_cast_expression [92211,92224]" dest="type_cast_expression [57772,57785]"/>
  <match src="primitive_type [38902,38906]" dest="primitive_type [44093,44097]"/>
  <match src="address: address [25602,25609]" dest="address: address [60132,60139]"/>
  <match src="comment: /*     Copyright 2020 Reflective Dollar Devs, based on the works of the Dynamic Dollar Devs and the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [85253,85928]" dest="comment: /*     Copyright 2020 Reflective Dollar Devs, based on the works of the Dynamic Dollar Devs and the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [68870,69545]"/>
  <match src="visibility [29599,29607]" dest="visibility [54019,54027]"/>
  <match src="call_expression [88934,88969]" dest="call_expression [71877,71932]"/>
  <match src="variable_declaration_statement [105762,105797]" dest="variable_declaration_statement [34675,34710]"/>
  <match src="identifier: epoch [104304,104309]" dest="identifier: epoch [33217,33222]"/>
  <match src="identifier: b [8687,8688]" dest="identifier: b [9251,9252]"/>
  <match src="call_argument [6849,6853]" dest="call_argument [7413,7417]"/>
  <match src="&quot;: &quot; [90701,90702]" dest="&quot;: &quot; [81171,81172]"/>
  <match src="call_expression [107209,107242]" dest="call_expression [36122,36155]"/>
  <match src=".: . [9964,9965]" dest=".: . [10528,10529]"/>
  <match src="identifier: msg [88951,88954]" dest="identifier: msg [71899,71902]"/>
  <match src="identifier: recordedVote [104582,104594]" dest="identifier: recordedVote [33495,33507]"/>
  <match src="identifier: slot [105770,105774]" dest="identifier: slot [34683,34687]"/>
  <match src="identifier: balance [109607,109614]" dest="identifier: balance [38520,38527]"/>
  <match src="internal: internal [27290,27298]" dest="internal: internal [55499,55507]"/>
  <match src="): ) [111406,111407]" dest="): ) [40319,40320]"/>
  <match src="(: ( [8639,8640]" dest="(: ( [9203,9204]"/>
  <match src=".: . [113061,113062]" dest=".: . [41974,41975]"/>
  <match src="type_name [88557,88564]" dest="type_name [78833,78840]"/>
  <match src="visibility [53663,53670]" dest="visibility [12776,12783]"/>
  <match src="user_defined_type [7121,7125]" dest="user_defined_type [7685,7689]"/>
  <match src="(: ( [104193,104194]" dest="(: ( [33106,33107]"/>
  <match src="identifier: approve [96121,96128]" dest="identifier: approve [27339,27346]"/>
  <match src="type_name [104032,104039]" dest="type_name [32945,32952]"/>
  <match src="call_argument [90694,90699]" dest="call_argument [63244,63249]"/>
  <match src="member_expression [110922,110946]" dest="member_expression [39835,39859]"/>
  <match src="identifier: lockedUntil [102442,102453]" dest="identifier: lockedUntil [31355,31366]"/>
  <match src="primitive_type [86757,86764]" dest="primitive_type [81309,81316]"/>
  <match src="identifier: owner [58166,58171]" dest="identifier: candidate [80529,80538]"/>
  <match src="identifier: newPhantom [89599,89609]" dest="identifier: realBurnAmount [62708,62722]"/>
  <match src="): ) [92199,92200]" dest="): ) [57760,57761]"/>
  <match src="public: public [103124,103130]" dest="public: public [32037,32043]"/>
  <match src="(: ( [30484,30485]" dest="(: ( [65712,65713]"/>
  <match src="]: ] [110592,110593]" dest="]: ] [39505,39506]"/>
  <match src="call_expression [40154,40178]" dest="call_expression [45345,45369]"/>
  <match src="contract_declaration [96787,96831]" dest="contract_declaration [28005,28049]"/>
  <match src="visibility [11756,11764]" dest="visibility [21754,21762]"/>
  <match src=".: . [112174,112175]" dest=".: . [41087,41088]"/>
  <match src="): ) [102882,102883]" dest="): ) [31795,31796]"/>
  <match src="uint256: uint256 [44868,44875]" dest="uint256: uint256 [50059,50066]"/>
  <match src="primitive_type [112020,112027]" dest="primitive_type [40933,40940]"/>
  <match src="parameter [56075,56094]" dest="parameter [15188,15207]"/>
  <match src="if_statement [41942,42494]" dest="if_statement [47133,47685]"/>
  <match src="identifier: balance [100456,100463]" dest="identifier: balance [29369,29376]"/>
  <match src="=: = [110400,110401]" dest="=: = [39313,39314]"/>
  <match src="is: is [114622,114624]" dest="is: is [69566,69568]"/>
  <match src="): ) [54674,54675]" dest="): ) [13787,13788]"/>
  <match src="call_argument [8171,8178]" dest="call_argument [8735,8742]"/>
  <match src="identifier: normalizedPrice [111221,111236]" dest="identifier: normalizedPrice [40134,40149]"/>
  <match src="{: { [101980,101981]" dest="{: { [30893,30894]"/>
  <match src="return_type_definition [103742,103759]" dest="return_type_definition [32655,32672]"/>
  <match src=".: . [6648,6649]" dest=".: . [7212,7213]"/>
  <match src="type_name [62842,62849]" dest="type_name [19676,19683]"/>
  <match src="(: ( [111929,111930]" dest="(: ( [40842,40843]"/>
  <match src="identifier: amount [83713,83719]" dest="identifier: amount [55159,55165]"/>
  <match src="visibility [53342,53349]" dest="visibility [12455,12462]"/>
  <match src="unary_expression [115258,115290]" dest="unary_expression [70202,70234]"/>
  <match src="parameter [38902,38911]" dest="parameter [44093,44102]"/>
  <match src="address: address [63237,63244]" dest="address: address [20071,20078]"/>
  <match src="address: address [13499,13506]" dest="address: address [23497,23504]"/>
  <match src="memory: memory [108504,108510]" dest="memory: memory [37417,37423]"/>
  <match src="function_definition [56167,56336]" dest="function_definition [15280,15449]"/>
  <match src="type_name [107014,107021]" dest="type_name [35927,35934]"/>
  <match src=".: . [111012,111013]" dest=".: . [39925,39926]"/>
  <match src="modifier: modifier [114723,114731]" dest="modifier: modifier [69667,69675]"/>
  <match src="identifier: Decimal [56397,56404]" dest="identifier: Decimal [15510,15517]"/>
  <match src="indexed: indexed [61526,61533]" dest="indexed: indexed [60224,60231]"/>
  <match src="function: function [103101,103109]" dest="function: function [32014,32022]"/>
  <match src="return_type_definition [104023,104040]" dest="return_type_definition [32936,32953]"/>
  <match src="constant: constant [38510,38518]" dest="constant: constant [43701,43709]"/>
  <match src="returns: returns [44913,44920]" dest="returns: returns [50104,50111]"/>
  <match src="parameter [63180,63187]" dest="parameter [20014,20021]"/>
  <match src="(: ( [63749,63750]" dest="(: ( [20583,20584]"/>
  <match src="primitive_type [110284,110291]" dest="primitive_type [39197,39204]"/>
  <match src="): ) [88256,88257]" dest="): ) [71275,71276]"/>
  <match src="function: function [54876,54884]" dest="function: function [13989,13997]"/>
  <match src="function: function [63734,63742]" dest="function: function [20568,20576]"/>
  <match src="}: } [88852,88853]" dest="}: } [83456,83457]"/>
  <match src="identifier: msg [88693,88696]" dest="identifier: msg [72786,72789]"/>
  <match src=".: . [109175,109176]" dest=".: . [38088,38089]"/>
  <match src="identifier: Frozen [102599,102605]" dest="identifier: Frozen [31512,31518]"/>
  <match src="function: function [38879,38887]" dest="function: function [44070,44078]"/>
  <match src="return_statement [10175,10184]" dest="return_statement [10739,10748]"/>
  <match src="}: } [107701,107702]" dest="}: } [36614,36615]"/>
  <match src="): ) [41264,41265]" dest="): ) [46455,46456]"/>
  <match src=",: , [42911,42912]" dest=",: , [48102,48103]"/>
  <match src="+: + [431,432]" dest="+: + [995,996]"/>
  <match src=",: , [102137,102138]" dest=",: , [31050,31051]"/>
  <match src="function_body [101178,101223]" dest="function_body [30091,30136]"/>
  <match src="primitive_type [74919,74926]" dest="primitive_type [79656,79663]"/>
  <match src="public: public [104438,104444]" dest="public: public [33351,33357]"/>
  <match src="number_literal: 0x6B175474E89094C44Da98b954EedeAC495271d0F [52687,52729]" dest="number_literal: 0x6B175474E89094C44Da98b954EedeAC495271d0F [11800,11842]"/>
  <match src=".: . [86655,86656]" dest=".: . [54500,54501]"/>
  <match src="event_paramater [88356,88369]" dest="event_paramater [71416,71429]"/>
  <match src="identifier: z [46511,46512]" dest="identifier: z [51702,51703]"/>
  <match src="identifier: this [86669,86673]" dest="identifier: this [54519,54523]"/>
  <match src="call_expression [40954,40973]" dest="call_expression [46145,46164]"/>
  <match src="type_name [34090,34097]" dest="type_name [61405,61412]"/>
  <match src="uint256: uint256 [73077,73084]" dest="uint256: uint256 [78728,78735]"/>
  <match src="parameter [109755,109775]" dest="parameter [38668,38688]"/>
  <match src="parameter [9132,9145]" dest="parameter [9696,9709]"/>
  <match src="{: { [39440,39441]" dest="{: { [44631,44632]"/>
  <match src="(: ( [56209,56210]" dest="(: ( [15322,15323]"/>
  <match src="): ) [55426,55427]" dest="): ) [14539,14540]"/>
  <match src="identifier: add [349,352]" dest="identifier: add [913,916]"/>
  <match src="): ) [111691,111692]" dest="): ) [40604,40605]"/>
  <match src="call_expression [46006,46019]" dest="call_expression [51197,51210]"/>
  <match src="expression_statement [110351,110409]" dest="expression_statement [39264,39322]"/>
  <match src="call_expression [41615,41634]" dest="call_expression [46806,46825]"/>
  <match src="function_body [23154,23197]" dest="function_body [54916,55080]"/>
  <match src="}: } [22596,22597]" dest="}: } [65862,65863]"/>
  <match src=",: , [62194,62195]" dest=",: , [19028,19029]"/>
  <match src="binary_expression [101962,101978]" dest="binary_expression [30875,30891]"/>
  <match src="parameter [9037,9041]" dest="parameter [9601,9605]"/>
  <match src="parameter [56695,56702]" dest="parameter [15808,15815]"/>
  <match src="constant: constant [54112,54120]" dest="constant: constant [13225,13233]"/>
  <match src="return_type_definition [45819,45841]" dest="return_type_definition [51010,51032]"/>
  <match src="[: [ [108239,108240]" dest="[: [ [37152,37153]"/>
  <match src="): ) [62552,62553]" dest="): ) [19386,19387]"/>
  <match src="identifier: from [29958,29962]" dest="identifier: from [18424,18428]"/>
  <match src="variable_declaration [90164,90187]" dest="variable_declaration [62585,62614]"/>
  <match src="member_expression [9958,9983]" dest="member_expression [10522,10547]"/>
  <match src="(: ( [7827,7828]" dest="(: ( [8391,8392]"/>
  <match src="binary_expression [73564,73596]" dest="binary_expression [81856,81900]"/>
  <match src="identifier: D256 [8108,8112]" dest="identifier: D256 [8672,8676]"/>
  <match src="[: [ [46593,46594]" dest="[: [ [51784,51785]"/>
  <match src="&quot;: &quot; [22548,22549]" dest="&quot;: &quot; [72062,72063]"/>
  <match src="identifier: errorMessage [4687,4699]" dest="identifier: errorMessage [5251,5263]"/>
  <match src="parameter [6136,6145]" dest="parameter [6700,6709]"/>
  <match src="): ) [81145,81146]" dest="): ) [61652,61653]"/>
  <match src="struct_declaration [96526,96783]" dest="struct_declaration [27744,28001]"/>
  <match src="function_definition [43880,44834]" dest="function_definition [49071,50025]"/>
  <match src="call_argument [102057,102064]" dest="call_argument [30970,30977]"/>
  <match src="string: string [100218,100224]" dest="string: string [29131,29137]"/>
  <match src="return_type_definition [3301,3318]" dest="return_type_definition [3865,3882]"/>
  <match src="comment: // 10,000 DAI [52792,52805]" dest="comment: // 10,000 DAI [11905,11918]"/>
  <match src="function_body [107054,107083]" dest="function_body [35967,35996]"/>
  <match src="identifier: _transferOwnership [27253,27271]" dest="identifier: decreaseDebt [55470,55482]"/>
  <match src=".: . [113014,113015]" dest=".: . [41927,41928]"/>
  <match src="primitive_type [88500,88507]" dest="primitive_type [78867,78874]"/>
  <match src="member_expression [109538,109582]" dest="member_expression [38451,38495]"/>
  <match src="(: ( [89108,89109]" dest="(: ( [72461,72462]"/>
  <match src="binary_expression [47429,47446]" dest="binary_expression [52620,52637]"/>
  <match src="identifier: staged [108954,108960]" dest="identifier: staged [37867,37873]"/>
  <match src="identifier: _state [100790,100796]" dest="identifier: _state [29703,29709]"/>
  <match src="struct_member [95512,95557]" dest="struct_member [26730,26775]"/>
  <match src=",: , [91196,91197]" dest=",: , [81395,81396]"/>
  <match src="(: ( [63889,63890]" dest="(: ( [20723,20724]"/>
  <match src="return: return [101505,101511]" dest="return: return [30418,30424]"/>
  <match src="(: ( [104890,104891]" dest="(: ( [33803,33804]"/>
  <match src="return: return [3547,3553]" dest="return: return [4111,4117]"/>
  <match src="identifier: Require [115043,115050]" dest="identifier: Require [69987,69994]"/>
  <match src="identifier: balance [101410,101417]" dest="identifier: balance [30323,30330]"/>
  <match src="uint256: uint256 [35415,35422]" dest="uint256: uint256 [64430,64437]"/>
  <match src="string [58900,58914]" dest="string [64572,64600]"/>
  <match src="identifier: decrementTotalBonded [107264,107284]" dest="identifier: decrementTotalBonded [36177,36197]"/>
  <match src="identifier: push [111925,111929]" dest="identifier: push [40838,40842]"/>
  <match src="{: { [93643,93644]" dest="{: { [74501,74502]"/>
  <match src="event_paramater [13800,13813]" dest="event_paramater [23798,23811]"/>
  <match src="(: ( [2591,2592]" dest="(: ( [3155,3156]"/>
  <match src="primitive_type [95783,95790]" dest="primitive_type [27001,27008]"/>
  <match src=".: . [35366,35367]" dest=".: . [57357,57358]"/>
  <match src="parameter [100962,100969]" dest="parameter [29875,29882]"/>
  <match src="member_expression [104220,104233]" dest="member_expression [33133,33146]"/>
  <match src="): ) [47697,47698]" dest="): ) [52888,52889]"/>
  <match src="type_name [113321,113328]" dest="type_name [42234,42241]"/>
  <match src="primitive_type [15833,15840]" dest="primitive_type [59584,59591]"/>
  <match src="{: { [71876,71877]" dest="{: { [25689,25690]"/>
  <match src="internal: internal [113849,113857]" dest="internal: internal [42762,42770]"/>
  <match src="identifier: newUniv2 [91888,91896]" dest="identifier: bonded [80485,80491]"/>
  <match src="identifier: msg [90142,90145]" dest="identifier: msg [73103,73106]"/>
  <match src="parameter [104032,104039]" dest="parameter [32945,32952]"/>
  <match src="external: external [64233,64241]" dest="external: external [21067,21075]"/>
  <match src="primitive_type [12026,12033]" dest="primitive_type [22024,22031]"/>
  <match src=",: , [90290,90291]" dest=",: , [81769,81770]"/>
  <match src="address: address [88218,88225]" dest="address: address [71237,71244]"/>
  <match src=".: . [107356,107357]" dest=".: . [36269,36270]"/>
  <match src="function_definition [6871,7093]" dest="function_definition [7435,7657]"/>
  <match src="(: ( [103121,103122]" dest="(: ( [32034,32035]"/>
  <match src="primitive_type [13164,13168]" dest="primitive_type [23162,23166]"/>
  <match src="internal: internal [107838,107846]" dest="internal: internal [36751,36759]"/>
  <match src="/=: /= [45154,45156]" dest="/=: /= [50345,50347]"/>
  <match src="call_expression [88979,89059]" dest="call_expression [72354,72437]"/>
  <match src="array_access [113176,113204]" dest="array_access [42089,42117]"/>
  <match src="identifier: account [88516,88523]" dest="identifier: account [78883,78890]"/>
  <match src="private: private [98861,98868]" dest="private: private [77511,77518]"/>
  <match src="identifier: to [64164,64166]" dest="identifier: to [20998,21000]"/>
  <match src="call_argument [98602,98608]" dest="call_argument [77252,77258]"/>
  <match src="expression_statement [60982,61005]" dest="expression_statement [54103,54134]"/>
  <match src="identifier: candidates [104964,104974]" dest="identifier: candidates [33877,33887]"/>
  <match src="): ) [46105,46106]" dest="): ) [51296,51297]"/>
  <match src="]: ] [105118,105119]" dest="]: ] [34031,34032]"/>
  <match src="identifier: coupons [101527,101534]" dest="identifier: coupons [30440,30447]"/>
  <match src="visibility [6969,6977]" dest="visibility [7533,7541]"/>
  <match src="]: ] [109557,109558]" dest="]: ] [38470,38471]"/>
  <match src="member_expression [11088,11098]" dest="member_expression [65596,65606]"/>
  <match src="call_argument [108693,108699]" dest="call_argument [37606,37612]"/>
  <match src="yul_evm_builtin [44650,44656]" dest="yul_evm_builtin [49841,49847]"/>
  <match src="}: } [96519,96520]" dest="}: } [27737,27738]"/>
  <match src="identifier: _state [102901,102907]" dest="identifier: _state [31814,31820]"/>
  <match src="type_name [99019,99026]" dest="type_name [77669,77676]"/>
  <match src="identifier: FOUR_BIT_MASK [46479,46492]" dest="identifier: FOUR_BIT_MASK [51670,51683]"/>
  <match src="type_name [100864,100871]" dest="type_name [29777,29784]"/>
  <match src="identifier: COLON [43433,43438]" dest="identifier: COLON [48624,48629]"/>
  <match src=".: . [91769,91770]" dest=".: . [63836,63837]"/>
  <match src="}: } [47968,47969]" dest="}: } [53159,53160]"/>
  <match src="private: private [54104,54111]" dest="private: private [13217,13224]"/>
  <match src="bool: bool [62738,62742]" dest="bool: bool [19572,19576]"/>
  <match src="*: * [2029,2030]" dest="*: * [2593,2594]"/>
  <match src="primitive_type [100654,100661]" dest="primitive_type [29567,29574]"/>
  <match src="state_mutability [55488,55492]" dest="state_mutability [14601,14605]"/>
  <match src="(: ( [7557,7558]" dest="(: ( [8121,8122]"/>
  <match src="uint256: uint256 [21906,21913]" dest="uint256: uint256 [64900,64907]"/>
  <match src="identifier: Constants [110204,110213]" dest="identifier: Constants [39117,39126]"/>
  <match src="identifier: account [109715,109722]" dest="identifier: account [38628,38635]"/>
  <match src="parameter [109043,109058]" dest="parameter [37956,37971]"/>
  <match src="return_statement [100539,100568]" dest="return_statement [29452,29481]"/>
  <match src="call_argument [108395,108405]" dest="call_argument [37308,37318]"/>
  <match src=".: . [10221,10222]" dest=".: . [10785,10786]"/>
  <match src="): ) [64166,64167]" dest="): ) [21000,21001]"/>
  <match src="return: return [6617,6623]" dest="return: return [7181,7187]"/>
  <match src="event: event [88486,88491]" dest="event: event [78854,78859]"/>
  <match src="): ) [6667,6668]" dest="): ) [7231,7232]"/>
  <match src="event_definition [61500,61586]" dest="event_definition [60195,60279]"/>
  <match src="(: ( [110455,110456]" dest="(: ( [39368,39369]"/>
  <match src="identifier: epochs [109502,109508]" dest="identifier: epochs [38415,38421]"/>
  <match src="private: private [53413,53420]" dest="private: private [12526,12533]"/>
  <match src=".: . [105253,105254]" dest=".: . [34166,34167]"/>
  <match src="call_expression [6624,6668]" dest="call_expression [7188,7232]"/>
  <match src="expression_statement [111221,111264]" dest="expression_statement [40134,40177]"/>
  <match src="identifier: candidate [113886,113895]" dest="identifier: candidate [42799,42808]"/>
  <match src="type_name [79416,79423]" dest="type_name [78541,78548]"/>
  <match src="): ) [63642,63643]" dest="): ) [20476,20477]"/>
  <match src="identifier: impl [105746,105750]" dest="identifier: impl [34659,34663]"/>
  <match src="(: ( [4750,4751]" dest="(: ( [5314,5315]"/>
  <match src="return_type_definition [6581,6602]" dest="return_type_definition [7145,7166]"/>
  <match src="identifier: FILE [91085,91089]" dest="identifier: FILE [58036,58040]"/>
  <match src="identifier: decrementBalanceOfStaged [89910,89934]" dest="identifier: decrementBalanceOfStaged [72854,72878]"/>
  <match src="number_literal: 0 [91070,91071]" dest="number_literal: 0 [58021,58022]"/>
  <match src="uint: uint [64186,64190]" dest="uint: uint [21020,21024]"/>
  <match src="): ) [39838,39839]" dest="): ) [45029,45030]"/>
  <match src="(: ( [101893,101894]" dest="(: ( [30806,30807]"/>
  <match src="parameter [18352,18370]" dest="parameter [17036,17053]"/>
  <match src="function: function [107255,107263]" dest="function: function [36168,36176]"/>
  <match src="=: = [113212,113213]" dest="=: = [42125,42126]"/>
  <match src="): ) [102541,102542]" dest="): ) [31454,31455]"/>
  <match src=",: , [106673,106674]" dest=",: , [35586,35587]"/>
  <match src="primitive_type [40546,40550]" dest="primitive_type [45737,45741]"/>
  <match src="identifier: GOVERNANCE_SUPER_MAJORITY [53359,53384]" dest="identifier: GOVERNANCE_SUPER_MAJORITY [12472,12497]"/>
  <match src="inheritance_specifier [116133,116144]" dest="inheritance_specifier [78504,78515]"/>
  <match src="type_name [6286,6293]" dest="type_name [6850,6857]"/>
  <match src="number_literal: 2 [36062,36063]" dest="number_literal: 2 [18471,18472]"/>
  <match src="call_expression [90190,90217]" dest="call_expression [73152,73179]"/>
  <match src="member_expression [109625,109639]" dest="member_expression [38538,38552]"/>
  <match src="member_expression [107885,107914]" dest="member_expression [36798,36827]"/>
  <match src="expression_statement [47070,47110]" dest="expression_statement [52261,52301]"/>
  <match src="identifier: reserve1 [86930,86938]" dest="identifier: timeIntoEpoch [61669,61682]"/>
  <match src="primitive_type [81157,81164]" dest="primitive_type [72602,72609]"/>
  <match src="}: } [99133,99134]" dest="}: } [77783,77784]"/>
  <match src="{: { [101074,101075]" dest="{: { [29987,29988]"/>
  <match src="primitive_type [96113,96120]" dest="primitive_type [27331,27338]"/>
  <match src="call_argument [42161,42167]" dest="call_argument [47352,47358]"/>
  <match src="view: view [102962,102966]" dest="view: view [31875,31879]"/>
  <match src="primitive_type [38744,38748]" dest="primitive_type [43935,43939]"/>
  <match src=",: , [54576,54577]" dest=",: , [13689,13690]"/>
  <match src="call_argument [89935,89945]" dest="call_argument [72879,72889]"/>
  <match src="primitive_type [61566,61573]" dest="primitive_type [78785,78792]"/>
  <match src="(: ( [41756,41757]" dest="(: ( [46947,46948]"/>
  <match src=".: . [58710,58711]" dest=".: . [62784,62785]"/>
  <match src="return_statement [6383,6430]" dest="return_statement [6947,6994]"/>
  <match src="primitive_type [5700,5707]" dest="primitive_type [6264,6271]"/>
  <match src="return_type_definition [101056,101073]" dest="return_type_definition [29969,29986]"/>
  <match src="member_expression [111455,111487]" dest="member_expression [40368,40400]"/>
  <match src="type_name [105291,105298]" dest="type_name [34204,34211]"/>
  <match src="parameter [13130,13144]" dest="parameter [23128,23142]"/>
  <match src="type_name [6136,6143]" dest="type_name [6700,6707]"/>
  <match src="!=: != [45110,45112]" dest="!=: != [50301,50303]"/>
  <match src="binary_expression [8926,8947]" dest="binary_expression [9490,9511]"/>
  <match src="uint256: uint256 [45868,45875]" dest="uint256: uint256 [51059,51066]"/>
  <match src="identifier: State [95878,95883]" dest="identifier: State [27096,27101]"/>
  <match src="external: external [13550,13558]" dest="external: external [23548,23556]"/>
  <match src="identifier: reason [40889,40895]" dest="identifier: reason [46080,46086]"/>
  <match src="identifier: dollar [86201,86207]" dest="identifier: dollar [54066,54072]"/>
  <match src="expression_statement [19985,20077]" dest="expression_statement [63550,63654]"/>
  <match src="constant: constant [38569,38577]" dest="constant: constant [43760,43768]"/>
  <match src="call_argument [114812,114819]" dest="call_argument [69756,69763]"/>
  <match src="parameter [101723,101738]" dest="parameter [30636,30651]"/>
  <match src="): ) [8071,8072]" dest="): ) [8635,8636]"/>
  <match src="memory: memory [32743,32749]" dest="memory: memory [68370,68376]"/>
  <match src="&quot;: &quot; [2700,2701]" dest="&quot;: &quot; [3264,3265]"/>
  <match src="return_type_definition [63711,63728]" dest="return_type_definition [20545,20562]"/>
  <match src="call_argument [114803,114845]" dest="call_argument [69747,69789]"/>
  <match src="function_body [98402,98660]" dest="function_body [77052,77310]"/>
  <match src="function_body [101770,101825]" dest="function_body [30683,30738]"/>
  <match src="pragma: pragma [34,40]" dest="pragma: pragma [34,40]"/>
  <match src=".: . [113663,113664]" dest=".: . [42576,42577]"/>
  <match src="memory: memory [34804,34810]" dest="memory: memory [67516,67522]"/>
  <match src="identifier: redeemable [108041,108051]" dest="identifier: redeemable [36954,36964]"/>
  <match src="member_expression [110794,110813]" dest="member_expression [39707,39726]"/>
  <match src="&gt;=: &gt;= [103018,103020]" dest="&gt;=: &gt;= [31931,31933]"/>
  <match src="): ) [62718,62719]" dest="): ) [19552,19553]"/>
  <match src="call_expression [47424,47447]" dest="call_expression [52615,52638]"/>
  <match src="==: == [9212,9214]" dest="==: == [9776,9778]"/>
  <match src="function: function [27244,27252]" dest="function: function [55461,55469]"/>
  <match src="identifier: spender [12402,12409]" dest="identifier: spender [22400,22407]"/>
  <match src="}: } [5821,5822]" dest="}: } [6385,6386]"/>
  <match src="parameter [54932,54951]" dest="parameter [14045,14064]"/>
  <match src="block_statement [39461,39850]" dest="block_statement [44652,45041]"/>
  <match src="identifier: D256 [33486,33490]" dest="identifier: D256 [82199,82203]"/>
  <match src="identifier: _state [101297,101303]" dest="identifier: _state [30210,30216]"/>
  <match src="(: ( [27978,27979]" dest="(: ( [62565,62566]"/>
  <match src="type_name [34276,34288]" dest="type_name [17948,17960]"/>
  <match src="member_expression [6638,6652]" dest="member_expression [7202,7216]"/>
  <match src="function_body [113166,113268]" dest="function_body [42079,42181]"/>
  <match src="=: = [113909,113910]" dest="=: = [42822,42823]"/>
  <match src="primitive_type [53011,53018]" dest="primitive_type [12124,12131]"/>
  <match src="): ) [75375,75376]" dest="): ) [68109,68110]"/>
  <match src="return: return [75809,75815]" dest="return: return [68847,68853]"/>
  <match src="indexed: indexed [62258,62265]" dest="indexed: indexed [19092,19099]"/>
  <match src="primitive_type [63055,63062]" dest="primitive_type [19889,19896]"/>
  <match src="identifier: _state [113025,113031]" dest="identifier: _state [41938,41944]"/>
  <match src="assignment_expression [108026,108099]" dest="assignment_expression [36939,37012]"/>
  <match src="expression_statement [47238,47245]" dest="expression_statement [52429,52436]"/>
  <match src="user_defined_type [7863,7867]" dest="user_defined_type [8427,8431]"/>
  <match src="type_name [4651,4658]" dest="type_name [5215,5222]"/>
  <match src="return_statement [55372,55428]" dest="return_statement [14485,14541]"/>
  <match src="identifier: amount [22452,22458]" dest="identifier: amount [65474,65480]"/>
  <match src="identifier: msg [91860,91863]" dest="identifier: msg [80456,80459]"/>
  <match src="identifier: newImplementation [98497,98514]" dest="identifier: newImplementation [77147,77164]"/>
  <match src="(: ( [88950,88951]" dest="(: ( [71898,71899]"/>
  <match src="visibility [104438,104444]" dest="visibility [33351,33357]"/>
  <match src="type_name [89436,89443]" dest="type_name [72507,72514]"/>
  <match src="{: { [112128,112129]" dest="{: { [41041,41042]"/>
  <match src="): ) [107921,107922]" dest="): ) [36834,36835]"/>
  <match src=".: . [111341,111342]" dest=".: . [40254,40255]"/>
  <match src="internal: internal [56672,56680]" dest="internal: internal [15785,15793]"/>
  <match src="{: { [112976,112977]" dest="{: { [41889,41890]"/>
  <match src="view: view [105185,105189]" dest="view: view [34098,34102]"/>
  <match src="visibility [116744,116750]" dest="visibility [83304,83310]"/>
  <match src="[: [ [110560,110561]" dest="[: [ [39473,39474]"/>
  <match src="returns: returns [103136,103143]" dest="returns: returns [32049,32056]"/>
  <match src="parameter [106995,107012]" dest="parameter [35908,35925]"/>
  <match src="function_body [54470,54635]" dest="function_body [13583,13748]"/>
  <match src="parameter [112374,112391]" dest="parameter [41287,41304]"/>
  <match src="): ) [111539,111540]" dest="): ) [40452,40453]"/>
  <match src="type_name [104194,104201]" dest="type_name [33107,33114]"/>
  <match src="state_mutability [9557,9561]" dest="state_mutability [10121,10125]"/>
  <match src="call_expression [80345,80400]" dest="call_expression [71966,72025]"/>
  <match src="assignment_expression [107342,107407]" dest="assignment_expression [36255,36320]"/>
  <match src="parameter [100309,100314]" dest="parameter [29222,29227]"/>
  <match src="internal: internal [6969,6977]" dest="internal: internal [7533,7541]"/>
  <match src="returns: returns [54227,54234]" dest="returns: returns [13340,13347]"/>
  <match src="{: { [96056,96057]" dest="{: { [27274,27275]"/>
  <match src="view: view [103737,103741]" dest="view: view [32650,32654]"/>
  <match src="internal: internal [54213,54221]" dest="internal: internal [13326,13334]"/>
  <match src="expression_statement [107634,107696]" dest="expression_statement [36547,36609]"/>
  <match src="pure: pure [39431,39435]" dest="pure: pure [44622,44626]"/>
  <match src="type_name [55189,55201]" dest="type_name [14302,14314]"/>
  <match src="primitive_type [19769,19776]" dest="primitive_type [65186,65193]"/>
  <match src="external: external [62938,62946]" dest="external: external [19772,19780]"/>
  <match src="identifier: IDollar [59765,59772]" dest="identifier: IDollar [24739,24746]"/>
  <match src="identifier: SUPPLY_CHANGE_DIVISOR [53990,54011]" dest="identifier: SUPPLY_CHANGE_DIVISOR [13103,13124]"/>
  <match src="state_mutability [11614,11618]" dest="state_mutability [21612,21616]"/>
  <match src="parameter [101169,101176]" dest="parameter [30082,30089]"/>
  <match src=".: . [108032,108033]" dest=".: . [36945,36946]"/>
  <match src="assignment_expression [109907,110010]" dest="assignment_expression [38820,38923]"/>
  <match src="call_argument [90883,90893]" dest="call_argument [73440,73450]"/>
  <match src="user_defined_type [74868,74880]" dest="user_defined_type [67002,67014]"/>
  <match src="primitive_type [109076,109082]" dest="primitive_type [37989,37995]"/>
  <match src="call_argument [88713,88717]" dest="call_argument [83394,83398]"/>
  <match src="member_expression [104685,104719]" dest="member_expression [33598,33632]"/>
  <match src="primitive_type [111766,111773]" dest="primitive_type [40679,40686]"/>
  <match src="call_argument [41424,41429]" dest="call_argument [46615,46620]"/>
  <match src="&quot;: &quot; [23819,23820]" dest="&quot;: &quot; [80117,80118]"/>
  <match src="(: ( [113829,113830]" dest="(: ( [42742,42743]"/>
  <match src="return: return [104950,104956]" dest="return: return [33863,33869]"/>
  <match src="visibility [105457,105463]" dest="visibility [34370,34376]"/>
  <match src="identifier: must [39455,39459]" dest="identifier: must [44646,44650]"/>
  <match src="(: ( [45359,45360]" dest="(: ( [50550,50551]"/>
  <match src="identifier: c [1390,1391]" dest="identifier: c [1954,1955]"/>
  <match src="returns: returns [63821,63828]" dest="returns: returns [20655,20662]"/>
  <match src="call_expression [444,490]" dest="call_expression [1008,1054]"/>
  <match src="internal: internal [8077,8085]" dest="internal: internal [8641,8649]"/>
  <match src="type_name [62577,62581]" dest="type_name [19411,19415]"/>
  <match src="struct_member [96630,96673]" dest="struct_member [27848,27891]"/>
  <match src="(: ( [104594,104595]" dest="(: ( [33507,33508]"/>
  <match src="visibility [15950,15957]" dest="visibility [17084,17091]"/>
  <match src="identifier: newImplementation [98842,98859]" dest="identifier: newImplementation [77492,77509]"/>
  <match src="): ) [9575,9576]" dest="): ) [10139,10140]"/>
  <match src="memory: memory [111138,111144]" dest="memory: memory [40051,40057]"/>
  <match src="primitive_type [103857,103864]" dest="primitive_type [32770,32777]"/>
  <match src="identifier: mul [89704,89707]" dest="identifier: mul [72659,72662]"/>
  <match src="identifier: balance [110027,110034]" dest="identifier: balance [38940,38947]"/>
  <match src="identifier: reason [110080,110086]" dest="identifier: reason [38993,38999]"/>
  <match src="member_expression [116524,116538]" dest="member_expression [68640,68656]"/>
  <match src="identifier: D256 [55235,55239]" dest="identifier: D256 [14348,14352]"/>
  <match src="function: function [71911,71919]" dest="function: function [25724,25732]"/>
  <match src="internal: internal [6749,6757]" dest="internal: internal [7313,7321]"/>
  <match src="): ) [64200,64201]" dest="): ) [21034,21035]"/>
  <match src="primitive_type [95442,95449]" dest="primitive_type [26660,26667]"/>
  <match src="memory: memory [6192,6198]" dest="memory: memory [6756,6762]"/>
  <match src="(: ( [88827,88828]" dest="(: ( [82009,82010]"/>
  <match src="visibility [100288,100294]" dest="visibility [29201,29207]"/>
  <match src=".: . [8166,8167]" dest=".: . [8730,8731]"/>
  <match src="type_name [43088,43092]" dest="type_name [48279,48283]"/>
  <match src="number_literal: 1 [90060,90061]" dest="number_literal: 1 [73934,73935]"/>
  <match src="user_defined_type [32730,32742]" dest="user_defined_type [68357,68369]"/>
  <match src="return_statement [7225,7267]" dest="return_statement [7789,7831]"/>
  <match src="comment: // ============ Constants ============ [5656,5694]" dest="comment: // ============ Constants ============ [6220,6258]"/>
  <match src="visibility [12061,12069]" dest="visibility [22059,22067]"/>
  <match src="parameter [63025,63032]" dest="parameter [19859,19866]"/>
  <match src="type_name [42570,42577]" dest="type_name [47761,47768]"/>
  <match src="call_argument [56448,56476]" dest="call_argument [15561,15589]"/>
  <match src="call_expression [110045,110087]" dest="call_expression [38958,39000]"/>
  <match src="address: address [13780,13787]" dest="address: address [23778,23785]"/>
  <match src="member_expression [8789,8799]" dest="member_expression [9353,9363]"/>
  <match src="uint256: uint256 [111766,111773]" dest="uint256: uint256 [40679,40686]"/>
  <match src="member_expression [110545,110560]" dest="member_expression [39458,39473]"/>
  <match src=".: . [75660,75661]" dest=".: . [82226,82227]"/>
  <match src="function: function [55677,55685]" dest="function: function [14790,14798]"/>
  <match src="user_defined_type [33478,33490]" dest="user_defined_type [82191,82203]"/>
  <match src=",: , [112943,112944]" dest=",: , [41856,41857]"/>
  <match src="identifier: Upgraded [98626,98634]" dest="identifier: Upgraded [77276,77284]"/>
  <match src="memory: memory [29929,29935]" dest="memory: memory [17703,17709]"/>
  <match src="type_name [9571,9575]" dest="type_name [10135,10139]"/>
  <match src="primitive_type [62577,62581]" dest="primitive_type [19411,19415]"/>
  <match src="call_argument [91709,91719]" dest="call_argument [64645,64655]"/>
  <match src=".: . [104078,104079]" dest=".: . [32991,32992]"/>
  <match src=".: . [112263,112264]" dest=".: . [41176,41177]"/>
  <match src="function_definition [780,914]" dest="function_definition [1344,1478]"/>
  <match src="(: ( [112219,112220]" dest="(: ( [41132,41133]"/>
  <match src="{: { [7957,7958]" dest="{: { [8521,8522]"/>
  <match src="primitive_type [41124,41131]" dest="primitive_type [46315,46322]"/>
  <match src="(: ( [55188,55189]" dest="(: ( [14301,14302]"/>
  <match src="member_expression [107366,107380]" dest="member_expression [36279,36293]"/>
  <match src=".: . [101622,101623]" dest=".: . [30535,30536]"/>
  <match src="function_body [104940,104999]" dest="function_body [33853,33912]"/>
  <match src="identifier: _state [107185,107191]" dest="identifier: _state [36098,36104]"/>
  <match src="primitive_type [44503,44510]" dest="primitive_type [49694,49701]"/>
  <match src=",: , [63134,63135]" dest=",: , [19968,19969]"/>
  <match src="emit_statement [108711,108754]" dest="emit_statement [37624,37667]"/>
  <match src="state_mutability [105601,105605]" dest="state_mutability [34514,34518]"/>
  <match src="primitive_type [89436,89443]" dest="primitive_type [72507,72514]"/>
  <match src="member_expression [9958,9968]" dest="member_expression [10522,10532]"/>
  <match src="): ) [63068,63069]" dest="): ) [19902,19903]"/>
  <match src="event: event [88320,88325]" dest="event: event [71378,71383]"/>
  <match src="return_statement [102479,102508]" dest="return_statement [31392,31421]"/>
  <match src="type_cast_expression [46824,46838]" dest="type_cast_expression [52015,52029]"/>
  <match src="struct_member [95467,95503]" dest="struct_member [26685,26721]"/>
  <match src="returns: returns [100645,100652]" dest="returns: returns [29558,29565]"/>
  <match src="type_cast_expression [98595,98609]" dest="type_cast_expression [77245,77259]"/>
  <match src="function_definition [59894,59963]" dest="function_definition [24868,24937]"/>
  <match src=".: . [33485,33486]" dest=".: . [82198,82199]"/>
  <match src="identifier: Setters [114625,114632]" dest="identifier: Setters [69569,69576]"/>
  <match src="expression_statement [107752,107776]" dest="expression_statement [36665,36689]"/>
  <match src="member_expression [112428,112445]" dest="member_expression [41341,41358]"/>
  <match src="call_argument [91085,91089]" dest="call_argument [58036,58040]"/>
  <match src="identifier: updatePrice [74896,74907]" dest="identifier: oracleCapture [67030,67043]"/>
  <match src="state_variable_declaration [53562,53615]" dest="state_variable_declaration [12675,12728]"/>
  <match src="view: view [62495,62499]" dest="view: view [19329,19333]"/>
  <match src="(: ( [111203,111204]" dest="(: ( [40116,40117]"/>
  <match src="type_name [38744,38748]" dest="type_name [43935,43939]"/>
  <match src="identifier: dollar [116809,116815]" dest="identifier: dollar [55145,55151]"/>
  <match src="state_mutability [102161,102165]" dest="state_mutability [31074,31078]"/>
  <match src="identifier: COUPON_EXPIRATION [55995,56012]" dest="identifier: COUPON_EXPIRATION [15108,15125]"/>
  <match src="call_argument [44825,44826]" dest="call_argument [50016,50017]"/>
  <match src=",: , [113139,113140]" dest=",: , [42052,42053]"/>
  <match src="function: function [43065,43073]" dest="function: function [48256,48264]"/>
  <match src=",: , [114863,114864]" dest=",: , [69807,69808]"/>
  <match src="internal: internal [29301,29309]" dest="internal: internal [55657,55665]"/>
  <match src="type_name [105762,105769]" dest="type_name [34675,34682]"/>
  <match src="array_access [110545,110567]" dest="array_access [39458,39480]"/>
  <match src="internal: internal [24901,24909]" dest="internal: internal [54907,54915]"/>
  <match src="identifier: Require [92393,92400]" dest="identifier: Require [79029,79036]"/>
  <match src="--: -- [44372,44374]" dest="--: -- [49563,49565]"/>
  <match src="return_type_definition [56787,56804]" dest="return_type_definition [15900,15917]"/>
  <match src="identifier: balance [107641,107648]" dest="identifier: balance [36554,36561]"/>
  <match src="type_name [15867,15874]" dest="type_name [16761,16768]"/>
  <match src=".: . [101303,101304]" dest=".: . [30216,30217]"/>
  <match src="parameter [89436,89449]" dest="parameter [72507,72520]"/>
  <match src="function: function [89422,89430]" dest="function: function [72493,72501]"/>
  <match src="call_expression [111882,111936]" dest="call_expression [40795,40849]"/>
  <match src="variable_declaration [113558,113577]" dest="variable_declaration [42471,42490]"/>
  <match src="struct_member [52984,53002]" dest="struct_member [12097,12115]"/>
  <match src="): ) [6367,6368]" dest="): ) [6931,6932]"/>
  <match src="return_type_definition [104450,104464]" dest="return_type_definition [33363,33377]"/>
  <match src="address: address [19841,19848]" dest="address: address [65273,65280]"/>
  <match src="public: public [103458,103464]" dest="public: public [32371,32377]"/>
  <match src="{: { [115033,115034]" dest="{: { [69977,69978]"/>
  <match src="identifier: div [89769,89772]" dest="identifier: div [72739,72742]"/>
  <match src="call_argument [42142,42168]" dest="call_argument [47333,47359]"/>
  <match src="visibility [108007,108015]" dest="visibility [36920,36928]"/>
  <match src="type_name [33429,33441]" dest="type_name [67548,67560]"/>
  <match src="]: ] [102317,102318]" dest="]: ] [31230,31231]"/>
  <match src="identifier: file [43402,43406]" dest="identifier: file [48593,48597]"/>
  <match src="function: function [102096,102104]" dest="function: function [31009,31017]"/>
  <match src="identifier: decrementAllowanceCoupons [110430,110455]" dest="identifier: decrementAllowanceCoupons [39343,39368]"/>
  <match src="member_expression [105225,105260]" dest="member_expression [34138,34173]"/>
  <match src="string [20035,20075]" dest="string [63615,63652]"/>
  <match src="primitive_type [45605,45610]" dest="primitive_type [50796,50801]"/>
  <match src="variable_declaration_statement [45984,46020]" dest="variable_declaration_statement [51175,51211]"/>
  <match src="array_access [112781,112809]" dest="array_access [41694,41722]"/>
  <match src="uint256: uint256 [11628,11635]" dest="uint256: uint256 [21626,21633]"/>
  <match src="call_argument [34519,34555]" dest="call_argument [63000,63017]"/>
  <match src="pragma_directive [34,58]" dest="pragma_directive [34,58]"/>
  <match src="(: ( [111487,111488]" dest="(: ( [40400,40401]"/>
  <match src="parameter [43129,43143]" dest="parameter [48320,48334]"/>
  <match src="return_type_definition [6036,6057]" dest="return_type_definition [6600,6621]"/>
  <match src="identifier: couponAllowances [110374,110390]" dest="identifier: couponAllowances [39287,39303]"/>
  <match src="): ) [103758,103759]" dest="): ) [32671,32672]"/>
  <match src="identifier: D256 [32681,32685]" dest="identifier: D256 [62227,62231]"/>
  <match src="primitive_type [112559,112566]" dest="primitive_type [41472,41479]"/>
  <match src="private: private [53096,53103]" dest="private: private [12209,12216]"/>
  <match src="bytes32: bytes32 [63189,63196]" dest="bytes32: bytes32 [20023,20030]"/>
  <match src="return_type_definition [62889,62903]" dest="return_type_definition [19723,19737]"/>
  <match src="function: function [54641,54649]" dest="function: function [13754,13762]"/>
  <match src="member_expression [111820,111848]" dest="member_expression [40733,40761]"/>
  <match src="bytes32: bytes32 [42570,42577]" dest="bytes32: bytes32 [47761,47768]"/>
  <match src="false: false [107071,107076]" dest="false: false [35984,35989]"/>
  <match src=",: , [98944,98945]" dest=",: , [77594,77595]"/>
  <match src="(: ( [43482,43483]" dest="(: ( [48673,48674]"/>
  <match src="identifier: D256 [31999,32003]" dest="identifier: D256 [67886,67890]"/>
  <match src="parameter [47679,47692]" dest="parameter [52870,52883]"/>
  <match src="): ) [22180,22181]" dest="): ) [65131,65132]"/>
  <match src="identifier: amount [110324,110330]" dest="identifier: amount [39237,39243]"/>
  <match src="call_argument [90682,90692]" dest="call_argument [63232,63242]"/>
  <match src="function_body [6062,6107]" dest="function_body [6626,6671]"/>
  <match src="address: address [72950,72957]" dest="address: address [78892,78899]"/>
  <match src="user_defined_type [106571,106578]" dest="user_defined_type [35484,35491]"/>
  <match src=".: . [115050,115051]" dest=".: . [69994,69995]"/>
  <match src="visibility [64435,64443]" dest="visibility [21269,21277]"/>
  <match src="member_expression [27676,27687]" dest="member_expression [67243,67254]"/>
  <match src="member_expression [8926,8936]" dest="member_expression [9490,9500]"/>
  <match src="identifier: reason [42161,42167]" dest="identifier: reason [47352,47358]"/>
  <match src="(: ( [55315,55316]" dest="(: ( [14428,14429]"/>
  <match src="assignment_expression [112781,112868]" dest="assignment_expression [41694,41781]"/>
  <match src="address: address [113122,113129]" dest="address: address [42035,42042]"/>
  <match src="parameter [63153,63163]" dest="parameter [19987,19997]"/>
  <match src="): ) [6428,6429]" dest="): ) [6992,6993]"/>
  <match src="return: return [103498,103504]" dest="return: return [32411,32417]"/>
  <match src="returns: returns [54808,54815]" dest="returns: returns [13921,13928]"/>
  <match src="identifier: i [44371,44372]" dest="identifier: i [49562,49563]"/>
  <match src="state_variable_declaration [5700,5731]" dest="state_variable_declaration [6264,6295]"/>
  <match src="identifier: spender [110307,110314]" dest="identifier: spender [39220,39227]"/>
  <match src="number_literal: 4 [46516,46517]" dest="number_literal: 4 [51707,51708]"/>
  <match src="primitive_type [13534,13541]" dest="primitive_type [23532,23539]"/>
  <match src="identifier: lessPhantom [90785,90796]" dest="identifier: candidate [80425,80434]"/>
  <match src="private: private [53973,53980]" dest="private: private [13086,13093]"/>
  <match src="]: ] [109514,109515]" dest="]: ] [38427,38428]"/>
  <match src="(: ( [44953,44954]" dest="(: ( [50144,50145]"/>
  <match src=".: . [107899,107900]" dest=".: . [36812,36813]"/>
  <match src=",: , [115110,115111]" dest=",: , [70054,70055]"/>
  <match src="primitive_type [55621,55628]" dest="primitive_type [14734,14741]"/>
  <match src="number_literal: 42 [46016,46018]" dest="number_literal: 42 [51207,51209]"/>
  <match src="string [460,489]" dest="string [1024,1053]"/>
  <match src="struct_declaration [95871,95940]" dest="struct_declaration [27089,27158]"/>
  <match src="identifier: reason [8280,8286]" dest="identifier: reason [8844,8850]"/>
  <match src="return_type_definition [102711,102728]" dest="return_type_definition [31624,31641]"/>
  <match src="number_literal: 10e16 [54078,54083]" dest="number_literal: 10e16 [13191,13196]"/>
  <match src="): ) [43935,43936]" dest="): ) [49126,49127]"/>
  <match src="{: { [114633,114634]" dest="{: { [69577,69578]"/>
  <match src="yul_assignment [105829,105848]" dest="yul_assignment [34742,34761]"/>
  <match src="identifier: amount [60997,61003]" dest="identifier: amount [54126,54132]"/>
  <match src="primitive_type [43107,43114]" dest="primitive_type [48298,48305]"/>
  <match src="[: [ [112499,112500]" dest="[: [ [41412,41413]"/>
  <match src="(: ( [113301,113302]" dest="(: ( [42214,42215]"/>
  <match src="primitive_type [6539,6546]" dest="primitive_type [7103,7110]"/>
  <match src="function_body [101495,101541]" dest="function_body [30408,30454]"/>
  <match src="=: = [32025,32026]" dest="=: = [17167,17168]"/>
  <match src="identifier: D256 [8649,8653]" dest="identifier: D256 [9213,9217]"/>
  <match src="{: { [54245,54246]" dest="{: { [13358,13359]"/>
  <match src="member_expression [103376,103396]" dest="member_expression [32289,32309]"/>
  <match src="member_expression [101512,101526]" dest="member_expression [30425,30439]"/>
  <match src="(: ( [101353,101354]" dest="(: ( [30266,30267]"/>
  <match src="identifier: capture [71920,71927]" dest="identifier: capture [25733,25740]"/>
  <match src="inheritance_specifier [72725,72732]" dest="inheritance_specifier [66563,66574]"/>
  <match src="}: } [108759,108760]" dest="}: } [37672,37673]"/>
  <match src="uint256: uint256 [38502,38509]" dest="uint256: uint256 [43693,43700]"/>
  <match src="internal: internal [110880,110888]" dest="internal: internal [39793,39801]"/>
  <match src="uint256: uint256 [364,371]" dest="uint256: uint256 [928,935]"/>
  <match src="function_definition [98807,99134]" dest="function_definition [77457,77784]"/>
  <match src="function_definition [23096,23197]" dest="function_definition [54849,55080]"/>
  <match src="function: function [105417,105425]" dest="function: function [34330,34338]"/>
  <match src="type_name [59992,59999]" dest="type_name [24966,24973]"/>
  <match src="uint256: uint256 [53865,53872]" dest="uint256: uint256 [12978,12985]"/>
  <match src="identifier: Upgradeable [97617,97628]" dest="identifier: Upgradeable [76267,76278]"/>
  <match src="identifier: token0 [61534,61540]" dest="identifier: owner [60232,60237]"/>
  <match src="parameter [8217,8233]" dest="parameter [8781,8797]"/>
  <match src="identifier: epoch [112271,112276]" dest="identifier: epoch [41184,41189]"/>
  <match src="emit_statement [89380,89410]" dest="emit_statement [81237,81272]"/>
  <match src="function: function [63105,63113]" dest="function: function [19939,19947]"/>
  <match src="member_expression [111488,111515]" dest="member_expression [40401,40428]"/>
  <match src="event: event [88391,88396]" dest="event: event [71282,71287]"/>
  <match src=",: , [2601,2602]" dest=",: , [3165,3166]"/>
  <match src="internal: internal [112409,112417]" dest="internal: internal [41322,41330]"/>
  <match src="member_expression [113025,113065]" dest="member_expression [41938,41978]"/>
  <match src="member_expression [107634,107653]" dest="member_expression [36547,36566]"/>
  <match src="variable_declaration [81157,81176]" dest="variable_declaration [72602,72617]"/>
  <match src="function: function [6491,6499]" dest="function: function [7055,7063]"/>
  <match src="identifier: DAO_EXIT_LOCKUP_EPOCHS [55760,55782]" dest="identifier: DAO_EXIT_LOCKUP_EPOCHS [14873,14895]"/>
  <match src="string_literal [22050,22086]" dest="string_literal [64966,65010]"/>
  <match src="identifier: value [8809,8814]" dest="identifier: value [9373,9378]"/>
  <match src=".: . [105644,105645]" dest=".: . [34557,34558]"/>
  <match src="primitive_type [52532,52539]" dest="primitive_type [11645,11652]"/>
  <match src="type_cast_expression [19924,19934]" dest="type_cast_expression [65364,65374]"/>
  <match src="parameter [63189,63198]" dest="parameter [20023,20032]"/>
  <match src="(: ( [10113,10114]" dest="(: ( [10677,10678]"/>
  <match src="(: ( [44201,44202]" dest="(: ( [49392,49393]"/>
  <match src="type_name [113337,113343]" dest="type_name [42250,42256]"/>
  <match src="parameter [74831,74850]" dest="parameter [18578,18603]"/>
  <match src="): ) [46153,46154]" dest="): ) [51344,51345]"/>
  <match src="call_argument [30850,30861]" dest="call_argument [67298,67315]"/>
  <match src="type_name [74276,74283]" dest="type_name [80675,80682]"/>
  <match src="}: } [101540,101541]" dest="}: } [30453,30454]"/>
  <match src="type_name [8999,9003]" dest="type_name [9563,9567]"/>
  <match src="&quot;: &quot; [20074,20075]" dest="&quot;: &quot; [63651,63652]"/>
  <match src="variable_declaration [3433,3442]" dest="variable_declaration [3997,4006]"/>
  <match src="return: return [102528,102534]" dest="return: return [31441,31447]"/>
  <match src="external: external [64056,64064]" dest="external: external [20890,20898]"/>
  <match src=",: , [20171,20172]" dest=",: , [65827,65828]"/>
  <match src="visibility [89170,89178]" dest="visibility [80540,80548]"/>
  <match src="public: public [101148,101154]" dest="public: public [30061,30067]"/>
  <match src="primitive_type [53865,53872]" dest="primitive_type [12978,12985]"/>
  <match src="): ) [104524,104525]" dest="): ) [33437,33438]"/>
  <match src=",: , [90699,90700]" dest=",: , [63249,63250]"/>
  <match src="identifier: State [95402,95407]" dest="identifier: State [26620,26625]"/>
  <match src="variable_declaration [111332,111376]" dest="variable_declaration [40245,40289]"/>
  <match src="identifier: decrementApproveFor [112890,112909]" dest="identifier: decrementApproveFor [41803,41822]"/>
  <match src="function: function [6262,6270]" dest="function: function [6826,6834]"/>
  <match src="string_literal [115142,115164]" dest="string_literal [70086,70108]"/>
  <match src="): ) [100841,100842]" dest="): ) [29754,29755]"/>
  <match src="parameter [59908,59923]" dest="parameter [24882,24897]"/>
  <match src="identifier: statusOf [115069,115077]" dest="identifier: statusOf [70013,70021]"/>
  <match src="member_expression [111671,111700]" dest="member_expression [40584,40613]"/>
  <match src="function_definition [101547,101660]" dest="function_definition [30460,30573]"/>
  <match src="identifier: candidate [104843,104852]" dest="identifier: candidate [33756,33765]"/>
  <match src="): ) [107028,107029]" dest="): ) [35941,35942]"/>
  <match src="call_argument [83189,83195]" dest="call_argument [55368,55374]"/>
  <match src="function_definition [112349,112533]" dest="function_definition [41262,41446]"/>
  <match src="member_expression [108963,108988]" dest="member_expression [37876,37901]"/>
  <match src="identifier: FILE [91356,91360]" dest="identifier: FILE [80817,80821]"/>
  <match src="): ) [110675,110676]" dest="): ) [39588,39589]"/>
  <match src="identifier: b [6653,6654]" dest="identifier: b [7217,7218]"/>
  <match src="if: if [40035,40037]" dest="if: if [45226,45228]"/>
  <match src="identifier: D256 [8027,8031]" dest="identifier: D256 [8591,8595]"/>
  <match src="struct_member [96302,96317]" dest="struct_member [27520,27535]"/>
  <match src="(: ( [110236,110237]" dest="(: ( [39149,39150]"/>
  <match src="event: event [25544,25549]" dest="event: event [60089,60094]"/>
  <match src="identifier: daiAmount [86596,86605]" dest="identifier: vote [80388,80392]"/>
  <match src="identifier: stringify [45755,45764]" dest="identifier: stringify [50946,50955]"/>
  <match src="uint256: uint256 [7707,7714]" dest="uint256: uint256 [8271,8278]"/>
  <match src="): ) [103728,103729]" dest="): ) [32641,32642]"/>
  <match src="visibility [53150,53157]" dest="visibility [12263,12270]"/>
  <match src="): ) [36014,36015]" dest="): ) [18796,18797]"/>
  <match src="): ) [39142,39143]" dest="): ) [44333,44334]"/>
  <match src="identifier: file [41132,41136]" dest="identifier: file [46323,46327]"/>
  <match src="call_argument [46094,46104]" dest="call_argument [51285,51295]"/>
  <match src="member_expression [103002,103017]" dest="member_expression [31915,31930]"/>
  <match src="primitive_type [12434,12441]" dest="primitive_type [22432,22439]"/>
  <match src="returns: returns [62800,62807]" dest="returns: returns [19634,19641]"/>
  <match src="&quot;: &quot; [66364,66365]" dest="&quot;: &quot; [73768,73769]"/>
  <match src="(: ( [6658,6659]" dest="(: ( [7222,7223]"/>
  <match src="uint: uint [62196,62200]" dest="uint: uint [19030,19034]"/>
  <match src="(: ( [46783,46784]" dest="(: ( [51974,51975]"/>
  <match src="identifier: Upgraded [98126,98134]" dest="identifier: Upgraded [76776,76784]"/>
  <match src="identifier: _state [104358,104364]" dest="identifier: _state [33271,33277]"/>
  <match src="): ) [104171,104172]" dest="): ) [33084,33085]"/>
  <match src="type_name [11779,11786]" dest="type_name [21777,21784]"/>
  <match src="address: address [100962,100969]" dest="address: address [29875,29882]"/>
  <match src="identifier: IMPLEMENTATION_SLOT [105777,105796]" dest="identifier: IMPLEMENTATION_SLOT [34690,34709]"/>
  <match src="primitive_type [11779,11786]" dest="primitive_type [21777,21784]"/>
  <match src="primitive_type [417,424]" dest="primitive_type [981,988]"/>
  <match src="yul_path [44657,44663]" dest="yul_path [49848,49854]"/>
  <match src="identifier: value [8149,8154]" dest="identifier: value [8713,8718]"/>
  <match src="primitive_type [102139,102146]" dest="primitive_type [31052,31059]"/>
  <match src="identifier: D256 [73996,74000]" dest="identifier: D256 [18302,18306]"/>
  <match src="identifier: b [7981,7982]" dest="identifier: b [8545,8546]"/>
  <match src="visibility [62304,62312]" dest="visibility [19138,19146]"/>
  <match src="(: ( [45240,45241]" dest="(: ( [50431,50432]"/>
  <match src="): ) [8613,8614]" dest="): ) [9177,9178]"/>
  <match src="(: ( [54673,54674]" dest="(: ( [13786,13787]"/>
  <match src="call_argument [32046,32052]" dest="call_argument [17337,17343]"/>
  <match src="(: ( [99093,99094]" dest="(: ( [77743,77744]"/>
  <match src="function_definition [63039,63099]" dest="function_definition [19873,19933]"/>
  <match src="): ) [100125,100126]" dest="): ) [29038,29039]"/>
  <match src="type_name [53562,53569]" dest="type_name [12675,12682]"/>
  <match src="}: } [102089,102090]" dest="}: } [31002,31003]"/>
  <match src="(: ( [106753,106754]" dest="(: ( [35666,35667]"/>
  <match src="member_expression [113176,113211]" dest="member_expression [42089,42124]"/>
  <match src="identifier: file [38929,38933]" dest="identifier: file [44120,44124]"/>
  <match src="bool: bool [62898,62902]" dest="bool: bool [19732,19736]"/>
  <match src="): ) [89058,89059]" dest="): ) [72436,72437]"/>
  <match src="function_body [56704,56745]" dest="function_body [15817,15858]"/>
  <match src="visibility [103570,103576]" dest="visibility [32483,32489]"/>
  <match src="type_name [16560,16567]" dest="type_name [55314,55321]"/>
  <match src="primitive_type [102875,102882]" dest="primitive_type [31788,31795]"/>
  <match src="(: ( [92610,92611]" dest="(: ( [79527,79528]"/>
  <match src=",: , [40338,40339]" dest=",: , [45529,45530]"/>
  <match src="(: ( [64250,64251]" dest="(: ( [21084,21085]"/>
  <match src="): ) [54311,54312]" dest="): ) [13424,13425]"/>
  <match src="identifier: a [4789,4790]" dest="identifier: a [5353,5354]"/>
  <match src="call_argument [89004,89014]" dest="call_argument [72379,72389]"/>
  <match src="return: return [6807,6813]" dest="return: return [7371,7377]"/>
  <match src="call_argument [98635,98652]" dest="call_argument [77285,77302]"/>
  <match src="variable_declaration [30337,30358]" dest="variable_declaration [58100,58118]"/>
  <match src="user_defined_type [116121,116131]" dest="user_defined_type [78492,78502]"/>
  <match src="{: { [9691,9692]" dest="{: { [10255,10256]"/>
  <match src=":: : [5976,5977]" dest=":: : [6540,6541]"/>
  <match src="member_expression [40747,40763]" dest="member_expression [45938,45954]"/>
  <match src="(: ( [10140,10141]" dest="(: ( [10704,10705]"/>
  <match src="identifier: onlyFrozen [88901,88911]" dest="identifier: onlyFrozenOrLocked [78988,79006]"/>
  <match src="parameter [40546,40555]" dest="parameter [45737,45746]"/>
  <match src="call_argument [20027,20033]" dest="call_argument [63588,63599]"/>
  <match src=".: . [113182,113183]" dest=".: . [42095,42096]"/>
  <match src="[: [ [113231,113232]" dest="[: [ [42144,42145]"/>
  <match src="(: ( [8846,8847]" dest="(: ( [9410,9411]"/>
  <match src="public: public [105457,105463]" dest="public: public [34370,34376]"/>
  <match src="): ) [107694,107695]" dest="): ) [36607,36608]"/>
  <match src="): ) [101278,101279]" dest="): ) [30191,30192]"/>
  <match src="type_name [38502,38509]" dest="type_name [43693,43700]"/>
  <match src="function_definition [8195,8417]" dest="function_definition [8759,8981]"/>
  <match src="parameter [8053,8066]" dest="parameter [8617,8630]"/>
  <match src="enum_value: APPROVE [96008,96015]" dest="enum_value: APPROVE [27226,27233]"/>
  <match src="indexed: indexed [63313,63320]" dest="indexed: indexed [20147,20154]"/>
  <match src="): ) [101248,101249]" dest="): ) [30161,30162]"/>
  <match src="): ) [103870,103871]" dest="): ) [32783,32784]"/>
  <match src="primitive_type [81138,81145]" dest="primitive_type [61645,61652]"/>
  <match src="identifier: sender [90491,90497]" dest="identifier: sender [73199,73205]"/>
  <match src="=: = [90375,90376]" dest="=: = [62723,62724]"/>
  <match src="return_statement [106932,106945]" dest="return_statement [35845,35858]"/>
  <match src="): ) [108995,108996]" dest="): ) [37908,37909]"/>
  <match src="}: } [9734,9735]" dest="}: } [10298,10299]"/>
  <match src="identifier: to [13796,13798]" dest="identifier: to [23794,23796]"/>
  <match src="number_literal: 0 [102251,102252]" dest="number_literal: 0 [31164,31165]"/>
  <match src="primitive_type [102682,102689]" dest="primitive_type [31595,31602]"/>
  <match src="identifier: GOVERNANCE_SUPER_MAJORITY [55400,55425]" dest="identifier: GOVERNANCE_SUPER_MAJORITY [14513,14538]"/>
  <match src="variable_declaration_statement [90448,90531]" dest="variable_declaration_statement [73125,73208]"/>
  <match src="identifier: D256 [8471,8475]" dest="identifier: D256 [9035,9039]"/>
  <match src="primitive_type [99915,99922]" dest="primitive_type [28828,28835]"/>
  <match src="identifier: Global [96555,96561]" dest="identifier: Global [27773,27779]"/>
  <match src="call_argument [40154,40178]" dest="call_argument [45345,45369]"/>
  <match src="identifier: epoch [109871,109876]" dest="identifier: epoch [38784,38789]"/>
  <match src="primitive_type [88429,88436]" dest="primitive_type [71318,71325]"/>
  <match src=",: , [23783,23784]" dest=",: , [80078,80079]"/>
  <match src="array_access [109495,109515]" dest="array_access [38408,38428]"/>
  <match src="): ) [64363,64364]" dest="): ) [21197,21198]"/>
  <match src="identifier: msg [90996,90999]" dest="identifier: msg [72958,72961]"/>
  <match src="uint: uint [64013,64017]" dest="uint: uint [20847,20851]"/>
  <match src="(: ( [98365,98366]" dest="(: ( [77015,77016]"/>
  <match src="): ) [112614,112615]" dest="): ) [41527,41528]"/>
  <match src="(: ( [98585,98586]" dest="(: ( [77235,77236]"/>
  <match src="identifier: candidate [105519,105528]" dest="identifier: candidate [34432,34441]"/>
  <match src="identifier: balance [107512,107519]" dest="identifier: balance [36425,36432]"/>
  <match src="identifier: daiAmount [86304,86313]" dest="identifier: newDebt [67625,67632]"/>
  <match src="identifier: require [27309,27316]" dest="identifier: decrementTotalDebt [55518,55536]"/>
  <match src="}: } [8180,8181]" dest="}: } [8744,8745]"/>
  <match src="number_literal: 0 [1969,1970]" dest="number_literal: 0 [2533,2534]"/>
  <match src="identifier: compareTo [9338,9347]" dest="identifier: compareTo [9902,9911]"/>
  <match src="type_name [1273,1279]" dest="type_name [1837,1843]"/>
  <match src="identifier: totalBonded [89773,89784]" dest="identifier: totalBonded [72743,72754]"/>
  <match src="}: } [5980,5981]" dest="}: } [6544,6545]"/>
  <match src="function_body [40025,40517]" dest="function_body [45216,45708]"/>
  <match src="): ) [98567,98568]" dest="): ) [77217,77218]"/>
  <match src=".: . [90145,90146]" dest=".: . [73106,73107]"/>
  <match src="state_mutability [6762,6766]" dest="state_mutability [7326,7330]"/>
  <match src="call_argument [39779,39785]" dest="call_argument [44970,44976]"/>
  <match src="identifier: add [113664,113667]" dest="identifier: add [42577,42580]"/>
  <match src="inheritance_specifier [59776,59782]" dest="inheritance_specifier [24750,24756]"/>
  <match src="&gt;&gt;: &gt;&gt; [46513,46515]" dest="&gt;&gt;: &gt;&gt; [51704,51706]"/>
  <match src=",: , [63259,63260]" dest=",: , [20093,20094]"/>
  <match src="binary_expression [47793,47803]" dest="binary_expression [52984,52994]"/>
  <match src=",: , [63341,63342]" dest=",: , [20175,20176]"/>
  <match src="parameter [59925,59939]" dest="parameter [24899,24913]"/>
  <match src="visibility [108519,108527]" dest="visibility [37432,37440]"/>
  <match src="assignment_expression [46645,46655]" dest="assignment_expression [51836,51846]"/>
  <match src=".: . [42733,42734]" dest=".: . [47924,47925]"/>
  <match src="(: ( [114811,114812]" dest="(: ( [69755,69756]"/>
  <match src="type_name [110299,110306]" dest="type_name [39212,39219]"/>
  <match src="): ) [25626,25627]" dest="): ) [60188,60189]"/>
  <match src=",: , [108405,108406]" dest=",: , [37318,37319]"/>
  <match src="return_type_definition [64004,64018]" dest="return_type_definition [20838,20852]"/>
  <match src="call_argument [24497,24547]" dest="call_argument [79941,79970]"/>
  <match src="call_expression [109950,110010]" dest="call_expression [38863,38923]"/>
  <match src="revert_statement [40060,40501]" dest="revert_statement [45251,45692]"/>
  <match src="function_body [3319,3562]" dest="function_body [3883,4126]"/>
  <match src="uint256: uint256 [96424,96431]" dest="uint256: uint256 [27642,27649]"/>
  <match src="call_argument [6424,6425]" dest="call_argument [6988,6989]"/>
  <match src="): ) [44886,44887]" dest="): ) [50077,50078]"/>
  <match src="number_literal: 0 [5978,5979]" dest="number_literal: 0 [6542,6543]"/>
  <match src="!: ! [39454,39455]" dest="!: ! [44645,44646]"/>
  <match src="state_mutability [62947,62951]" dest="state_mutability [19781,19785]"/>
  <match src="identifier: epoch [109552,109557]" dest="identifier: epoch [38465,38470]"/>
  <match src="state_mutability [62648,62652]" dest="state_mutability [19482,19486]"/>
  <match src="visibility [63002,63010]" dest="visibility [19836,19844]"/>
  <match src="if_statement [39450,39850]" dest="if_statement [44641,45041]"/>
  <match src="parameter [63055,63068]" dest="parameter [19889,19902]"/>
  <match src="identifier: dollar [96286,96292]" dest="identifier: dollar [27504,27510]"/>
  <match src=",: , [6295,6296]" dest=",: , [6859,6860]"/>
  <match src="primitive_type [64221,64228]" dest="primitive_type [21055,21062]"/>
  <match src="number_literal: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc [99962,100028]" dest="number_literal: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc [28875,28941]"/>
  <match src="pure: pure [8310,8314]" dest="pure: pure [8874,8878]"/>
  <match src="primitive_type [102720,102727]" dest="primitive_type [31633,31640]"/>
  <match src="number_literal: 66e16 [53387,53392]" dest="number_literal: 66e16 [12500,12505]"/>
  <match src="(: ( [100308,100309]" dest="(: ( [29221,29222]"/>
  <match src="pure: pure [7180,7184]" dest="pure: pure [7744,7748]"/>
  <match src=".: . [109578,109579]" dest=".: . [38491,38492]"/>
  <match src="&gt;=: &gt;= [454,456]" dest="&gt;=: &gt;= [1018,1020]"/>
  <match src="type_cast_expression [52679,52730]" dest="type_cast_expression [11792,11843]"/>
  <match src="&quot;: &quot; [59016,59017]" dest="&quot;: &quot; [54809,54810]"/>
  <match src="{: { [111115,111116]" dest="{: { [40028,40029]"/>
  <match src="identifier: b [9495,9496]" dest="identifier: b [10059,10060]"/>
  <match src="--: -- [45534,45536]" dest="--: -- [50725,50727]"/>
  <match src="returns: returns [103470,103477]" dest="returns: returns [32383,32390]"/>
  <match src="): ) [54423,54424]" dest="): ) [13536,13537]"/>
  <match src="parameter [56547,56566]" dest="parameter [15660,15679]"/>
  <match src="returns: returns [102711,102718]" dest="returns: returns [31624,31631]"/>
  <match src="{: { [46297,46298]" dest="{: { [51488,51489]"/>
  <match src="identifier: INITIAL_STAKE_MULTIPLE [52854,52876]" dest="identifier: INITIAL_STAKE_MULTIPLE [11967,11989]"/>
  <match src="identifier: Fluid [102623,102628]" dest="identifier: Fluid [31536,31541]"/>
  <match src=".: . [111023,111024]" dest=".: . [39936,39937]"/>
  <match src="user_defined_type [99896,99908]" dest="user_defined_type [28809,28821]"/>
  <match src="address: address [98366,98373]" dest="address: address [77016,77023]"/>
  <match src="call_argument [60997,61003]" dest="call_argument [54126,54132]"/>
  <match src=".: . [107910,107911]" dest=".: . [36823,36824]"/>
  <match src="public: public [102955,102961]" dest="public: public [31868,31874]"/>
  <match src="): ) [62581,62582]" dest="): ) [19415,19416]"/>
  <match src="visibility [113849,113857]" dest="visibility [42762,42770]"/>
  <match src="uint256: uint256 [6539,6546]" dest="uint256: uint256 [7103,7110]"/>
  <match src="identifier: _state [112428,112434]" dest="identifier: _state [41341,41347]"/>
  <match src=".: . [72764,72765]" dest=".: . [66638,66639]"/>
  <match src="parameter [39926,39940]" dest="parameter [45117,45131]"/>
  <match src=",: , [8805,8806]" dest=",: , [9369,9370]"/>
  <match src="parameter [9571,9575]" dest="parameter [10135,10139]"/>
  <match src="type_name [63357,63364]" dest="type_name [20191,20198]"/>
  <match src=",: , [43719,43720]" dest=",: , [48910,48911]"/>
  <match src="primitive_type [793,800]" dest="primitive_type [1357,1364]"/>
  <match src="): ) [95493,95494]" dest="): ) [26711,26712]"/>
  <match src="(: ( [62508,62509]" dest="(: ( [19342,19343]"/>
  <match src="identifier: account [114812,114819]" dest="identifier: account [69756,69763]"/>
  <match src="variable_declaration [34276,34318]" dest="variable_declaration [17948,17984]"/>
  <match src="call_argument [2673,2701]" dest="call_argument [3237,3265]"/>
  <match src="primitive_type [63180,63185]" dest="primitive_type [20014,20019]"/>
  <match src="function_body [107624,107702]" dest="function_body [36537,36615]"/>
  <match src="identifier: accounts [109845,109853]" dest="identifier: accounts [38758,38766]"/>
  <match src="member_expression [104058,104086]" dest="member_expression [32971,32999]"/>
  <match src="): ) [62363,62364]" dest="): ) [19197,19198]"/>
  <match src="library_declaration [93607,94623]" dest="library_declaration [74465,75481]"/>
  <match src="return_statement [55753,55783]" dest="return_statement [14866,14896]"/>
  <match src="yul_path [105843,105847]" dest="yul_path [34756,34760]"/>
  <match src="): ) [47803,47804]" dest="): ) [52994,52995]"/>
  <match src="uint256: uint256 [91494,91501]" dest="uint256: uint256 [63750,63757]"/>
  <match src="call_expression [43548,43567]" dest="call_expression [48739,48758]"/>
  <match src="type_name [7837,7841]" dest="type_name [8401,8405]"/>
  <match src="return_type_definition [54923,54952]" dest="return_type_definition [14036,14065]"/>
  <match src=".: . [108597,108598]" dest=".: . [37510,37511]"/>
  <match src="identifier: c [508,509]" dest="identifier: c [1072,1073]"/>
  <match src="parameter [71967,71971]" dest="parameter [25780,25784]"/>
  <match src="identifier: balance [101098,101105]" dest="identifier: balance [30011,30018]"/>
  <match src="identifier: sub [113062,113065]" dest="identifier: sub [41975,41978]"/>
  <match src="function: function [102331,102339]" dest="function: function [31244,31252]"/>
  <match src="visibility [64405,64413]" dest="visibility [21239,21247]"/>
  <match src="binary_expression [47327,47332]" dest="binary_expression [52518,52523]"/>
  <match src="(: ( [7416,7417]" dest="(: ( [7980,7981]"/>
  <match src=",: , [89945,89946]" dest=",: , [72889,72890]"/>
  <match src="): ) [8814,8815]" dest="): ) [9378,9379]"/>
  <match src="member_expression [103777,103805]" dest="member_expression [32690,32718]"/>
  <match src="): ) [9995,9996]" dest="): ) [10559,10560]"/>
  <match src="function_definition [59968,60018]" dest="function_definition [24942,24992]"/>
  <match src="}: } [104108,104109]" dest="}: } [33021,33022]"/>
  <match src="return: return [56106,56112]" dest="return: return [15219,15225]"/>
  <match src="return_type_definition [62729,62743]" dest="return_type_definition [19563,19577]"/>
  <match src="number_literal: 0 [44222,44223]" dest="number_literal: 0 [49413,49414]"/>
  <match src="primitive_type [96202,96206]" dest="primitive_type [27420,27424]"/>
  <match src="]: ] [112847,112848]" dest="]: ] [41760,41761]"/>
  <match src="uint256: uint256 [53271,53278]" dest="uint256: uint256 [12384,12391]"/>
  <match src="interface: interface [11488,11497]" dest="interface: interface [21486,21495]"/>
  <match src="call_argument [43402,43406]" dest="call_argument [48593,48597]"/>
  <match src="identifier: z [47465,47466]" dest="identifier: z [52656,52657]"/>
  <match src="state_variable_declaration [97863,97977]" dest="state_variable_declaration [76513,76627]"/>
  <match src="identifier: a [3445,3446]" dest="identifier: a [4009,4010]"/>
  <match src="[: [ [108274,108275]" dest="[: [ [37187,37188]"/>
  <match src="pure: pure [41236,41240]" dest="pure: pure [46427,46431]"/>
  <match src="identifier: _state [104825,104831]" dest="identifier: _state [33738,33744]"/>
  <match src="identifier: Decimal [74149,74156]" dest="identifier: Decimal [68813,68820]"/>
  <match src="[: [ [113433,113434]" dest="[: [ [42346,42347]"/>
  <match src="): ) [106920,106921]" dest="): ) [35833,35834]"/>
  <match src="): ) [100314,100315]" dest="): ) [29227,29228]"/>
  <match src="false: false [74164,74169]" dest="false: false [82165,82170]"/>
  <match src="call_argument [39702,39708]" dest="call_argument [44893,44899]"/>
  <match src="uint256: uint256 [53142,53149]" dest="uint256: uint256 [12255,12262]"/>
  <match src="(: ( [92179,92180]" dest="(: ( [57739,57740]"/>
  <match src="]: ] [113405,113406]" dest="]: ] [42318,42319]"/>
  <match src="call_expression [7063,7074]" dest="call_expression [7627,7638]"/>
  <match src="call_expression [113644,113689]" dest="call_expression [42557,42602]"/>
  <match src="(: ( [46132,46133]" dest="(: ( [51323,51324]"/>
  <match src="(: ( [56371,56372]" dest="(: ( [15484,15485]"/>
  <match src="primitive_type [108395,108402]" dest="primitive_type [37308,37315]"/>
  <match src="assignment_expression [47461,47471]" dest="assignment_expression [52652,52662]"/>
  <match src="(: ( [116530,116531]" dest="(: ( [68646,68647]"/>
  <match src=",: , [107983,107984]" dest=",: , [36896,36897]"/>
  <match src="identifier: start [112457,112462]" dest="identifier: start [41370,41375]"/>
  <match src="}: } [80406,80407]" dest="}: } [72218,72219]"/>
  <match src="parameter [2603,2612]" dest="parameter [3167,3176]"/>
  <match src="uint256: uint256 [96400,96407]" dest="uint256: uint256 [27618,27625]"/>
  <match src="]: ] [111839,111840]" dest="]: ] [40752,40753]"/>
  <match src="uint256: uint256 [29618,29625]" dest="uint256: uint256 [54143,54150]"/>
  <match src="call_argument [39734,39753]" dest="call_argument [44925,44944]"/>
  <match src="type_name [9170,9174]" dest="type_name [9734,9738]"/>
  <match src=":=: := [105834,105836]" dest=":=: := [34747,34749]"/>
  <match src="primitive_type [31146,31153]" dest="primitive_type [58182,58189]"/>
  <match src="): ) [105042,105043]" dest="): ) [33955,33956]"/>
  <match src="(: ( [103277,103278]" dest="(: ( [32190,32191]"/>
  <match src="uint: uint [64251,64255]" dest="uint: uint [21085,21089]"/>
  <match src="call_expression [98879,99008]" dest="call_expression [77529,77658]"/>
  <match src="identifier: balanceCheck [89070,89082]" dest="identifier: balanceCheck [55434,55446]"/>
  <match src="&quot;: &quot; [72808,72809]" dest="&quot;: &quot; [78623,78624]"/>
  <match src="identifier: priceCumulative [75548,75563]" dest="identifier: balance [73624,73631]"/>
  <match src="identifier: LPAREN [42194,42200]" dest="identifier: LPAREN [47385,47391]"/>
  <match src="uint256: uint256 [96089,96096]" dest="uint256: uint256 [27307,27314]"/>
  <match src="address: address [113302,113309]" dest="address: address [42215,42222]"/>
  <match src="member_expression [115069,115110]" dest="member_expression [70013,70054]"/>
  <match src="): ) [7732,7733]" dest="): ) [8296,8297]"/>
  <match src="identifier: self [9653,9657]" dest="identifier: self [10217,10221]"/>
  <match src="parameter [38921,38933]" dest="parameter [44112,44124]"/>
  <match src="type_name [91494,91501]" dest="type_name [63750,63757]"/>
  <match src="call_argument [41584,41589]" dest="call_argument [46775,46780]"/>
  <match src="function: function [43880,43888]" dest="function: function [49071,49079]"/>
  <match src="uint256: uint256 [6919,6926]" dest="uint256: uint256 [7483,7490]"/>
  <match src="string [33664,33700]" dest="string [62853,62884]"/>
  <match src="returns: returns [62442,62449]" dest="returns: returns [19276,19283]"/>
  <match src="identifier: price [75645,75650]" dest="identifier: price [68619,68624]"/>
  <match src="): ) [8537,8538]" dest="): ) [9101,9102]"/>
  <match src="identifier: FILE [58761,58765]" dest="identifier: FILE [62835,62839]"/>
  <match src="state_mutability [100098,100102]" dest="state_mutability [29011,29015]"/>
  <match src="identifier: nonces [63048,63054]" dest="identifier: nonces [19882,19888]"/>
  <match src="identifier: candidate [113528,113537]" dest="identifier: candidate [42441,42450]"/>
  <match src="binary_expression [45380,45385]" dest="binary_expression [50571,50576]"/>
  <match src="identifier: D256 [8981,8985]" dest="identifier: D256 [9545,9549]"/>
  <match src="parameter [102682,102697]" dest="parameter [31595,31610]"/>
  <match src="{: { [111810,111811]" dest="{: { [40723,40724]"/>
  <match src="array_access [108886,108910]" dest="array_access [37799,37823]"/>
  <match src="unary_expression [42657,42662]" dest="unary_expression [47848,47853]"/>
  <match src="state_mutability [54434,54438]" dest="state_mutability [13547,13551]"/>
  <match src="call_argument [40405,40413]" dest="call_argument [45596,45604]"/>
  <match src="): ) [45247,45248]" dest="): ) [50438,50439]"/>
  <match src="identifier: add [109579,109582]" dest="identifier: add [38492,38495]"/>
  <match src="type_alias [15820,15828]" dest="type_alias [59571,59579]"/>
  <match src="primitive_type [102976,102983]" dest="primitive_type [31889,31896]"/>
  <match src=",: , [88442,88443]" dest=",: , [71331,71332]"/>
  <match src="primitive_type [63720,63727]" dest="primitive_type [20554,20561]"/>
  <match src="if_statement [39000,39291]" dest="if_statement [44191,44482]"/>
  <match src="identifier: statusOf [114803,114811]" dest="identifier: statusOf [69747,69755]"/>
  <match src="return: return [104818,104824]" dest="return: return [33731,33737]"/>
  <match src="member_expression [107656,107679]" dest="member_expression [36569,36592]"/>
  <match src=",: , [87840,87841]" dest=",: , [71063,71064]"/>
  <match src=".: . [33436,33437]" dest=".: . [67555,67556]"/>
  <match src=",: , [13778,13779]" dest=",: , [23776,23777]"/>
  <match src="expression_statement [107185,107243]" dest="expression_statement [36098,36156]"/>
  <match src="function_definition [109672,110094]" dest="function_definition [38585,39007]"/>
  <match src="function_definition [9514,9616]" dest="function_definition [10078,10180]"/>
  <match src="uint256: uint256 [46357,46364]" dest="uint256: uint256 [51548,51555]"/>
  <match src=".: . [43344,43345]" dest=".: . [48535,48536]"/>
  <match src="call_expression [21941,22009]" dest="call_expression [64230,64333]"/>
  <match src="visibility [41910,41918]" dest="visibility [47101,47109]"/>
  <match src="identifier: currentEpochDuration [103435,103455]" dest="identifier: currentEpochDuration [32348,32368]"/>
  <match src="address: address [96170,96177]" dest="address: address [27388,27395]"/>
  <match src="member_expression [7246,7260]" dest="member_expression [7810,7824]"/>
  <match src="type_name [111766,111773]" dest="type_name [40679,40686]"/>
  <match src="(: ( [98551,98552]" dest="(: ( [77201,77202]"/>
  <match src="primitive_type [3237,3244]" dest="primitive_type [3801,3808]"/>
  <match src="identifier: value [88379,88384]" dest="identifier: value [71439,71444]"/>
  <match src="}: } [55018,55019]" dest="}: } [14131,14132]"/>
  <match src="{: { [97638,97639]" dest="{: { [76288,76289]"/>
  <match src="call_argument [6418,6422]" dest="call_argument [6982,6986]"/>
  <match src="function_body [108528,108760]" dest="function_body [37441,37673]"/>
  <match src="function_definition [100725,100819]" dest="function_definition [29638,29732]"/>
  <match src=",: , [63355,63356]" dest=",: , [20189,20190]"/>
  <match src="[: [ [109508,109509]" dest="[: [ [38421,38422]"/>
  <match src="{: { [40660,40661]" dest="{: { [45851,45852]"/>
  <match src="function_body [103760,103824]" dest="function_body [32673,32737]"/>
  <match src="primitive_type [63775,63782]" dest="primitive_type [20609,20616]"/>
  <match src=".: . [56554,56555]" dest=".: . [15667,15668]"/>
  <match src=".: . [27683,27684]" dest=".: . [67250,67251]"/>
  <match src="identifier: Require [92167,92174]" dest="identifier: Require [57727,57734]"/>
  <match src="address: address [86757,86764]" dest="address: address [81309,81316]"/>
  <match src="function_body [107742,107782]" dest="function_body [36655,36695]"/>
  <match src="identifier: normalizedPrice [111290,111305]" dest="identifier: normalizedPrice [40203,40218]"/>
  <match src="call_argument [39169,39174]" dest="call_argument [44360,44365]"/>
  <match src="uint256: uint256 [54336,54343]" dest="uint256: uint256 [13449,13456]"/>
  <match src="return_statement [46676,46690]" dest="return_statement [51867,51881]"/>
  <match src="visibility [86114,86122]" dest="visibility [54405,54413]"/>
  <match src=",: , [92261,92262]" dest=",: , [57845,57846]"/>
  <match src="visibility [53570,53577]" dest="visibility [12683,12690]"/>
  <match src="identifier: FILE [58882,58886]" dest="identifier: FILE [64554,64558]"/>
  <match src="identifier: _state [109212,109218]" dest="identifier: _state [38125,38131]"/>
  <match src=":: : [54521,54522]" dest=":: : [13634,13635]"/>
  <match src="identifier: amount [83986,83992]" dest="identifier: amount [65574,65580]"/>
  <match src="identifier: value [10143,10148]" dest="identifier: value [10707,10712]"/>
  <match src="}: } [20197,20198]" dest="}: } [65860,65861]"/>
  <match src=".: . [102622,102623]" dest=".: . [31535,31536]"/>
  <match src="private: private [52540,52547]" dest="private: private [11653,11660]"/>
  <match src="parameter [804,813]" dest="parameter [1368,1377]"/>
  <match src="pure: pure [44904,44908]" dest="pure: pure [50095,50099]"/>
  <match src="number_literal: 7200 [53186,53190]" dest="number_literal: 7200 [12299,12303]"/>
  <match src=".: . [107387,107388]" dest=".: . [36300,36301]"/>
  <match src="(: ( [101620,101621]" dest="(: ( [30533,30534]"/>
  <match src="member_expression [109151,109166]" dest="member_expression [38064,38079]"/>
  <match src="call_argument [89489,89499]" dest="call_argument [72580,72590]"/>
  <match src="public: public [104011,104017]" dest="public: public [32924,32930]"/>
  <match src="(: ( [39031,39032]" dest="(: ( [44222,44223]"/>
  <match src="{: { [56448,56449]" dest="{: { [15561,15562]"/>
  <match src="visibility [36246,36253]" dest="visibility [67860,67867]"/>
  <match src="comment: /**  * @dev Implementation of the {IERC20} interface.  *  * This implementation is agnostic to the way tokens are created. This means  * that a supply mechanism has to be added in a derived contract using {_mint}.  * For a generic mechanism see {ERC20Mintable}.  *  * TIP: For a detailed writeup see our guide  * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How  * to implement supply mechanisms].  *  * We have followed general OpenZeppelin guidelines: functions revert instead  * of returning `false` on failure. This behavior is nonetheless conventional  * and does not conflict with the expectations of ERC20 applications.  *  * Additionally, an {Approval} event is emitted on calls to {transferFrom}.  * This allows applications to reconstruct the allowance for all accounts just  * by listening to said events. Other implementations of the EIP may not emit  * these events, as it isn't required by the specification.  *  * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}  * functions have been added to mitigate the well-known issues around setting  * allowances. See {IERC20-approve}.  */ [14621,15773]" dest="comment: /**  * @title Require  * @author dYdX  *  * Stringifies parameters to pretty-print revert messages. Costs more gas than regular require()  */ [43439,43580]"/>
  <match src="call_expression [46608,46631]" dest="call_expression [51799,51822]"/>
  <match src="bool: bool [98460,98464]" dest="bool: bool [77110,77114]"/>
  <match src="visibility [54213,54221]" dest="visibility [13326,13334]"/>
  <match src="identifier: _state [107483,107489]" dest="identifier: _state [36396,36402]"/>
  <match src="uint256: uint256 [30302,30309]" dest="uint256: uint256 [58697,58704]"/>
  <match src="call_argument [89023,89058]" dest="call_argument [72398,72436]"/>
  <match src="type_name [87877,87884]" dest="type_name [71101,71108]"/>
  <match src=".: . [34234,34235]" dest=".: . [17881,17882]"/>
  <match src="parameter [60923,60937]" dest="parameter [54389,54403]"/>
  <match src="identifier: staged [109251,109257]" dest="identifier: staged [38164,38170]"/>
  <match src="function_body [103600,103681]" dest="function_body [32513,32594]"/>
  <match src="type_name [29583,29590]" dest="type_name [54003,54010]"/>
  <match src="type_name [73988,74000]" dest="type_name [18294,18306]"/>
  <match src="constant: constant [53158,53166]" dest="constant: constant [12271,12279]"/>
  <match src=",: , [40293,40294]" dest=",: , [45484,45485]"/>
  <match src="=: = [74939,74940]" dest="=: = [79671,79672]"/>
  <match src="identifier: abi [43341,43344]" dest="identifier: abi [48532,48535]"/>
  <match src="}: } [3561,3562]" dest="}: } [4125,4126]"/>
  <match src="type_name [88877,88884]" dest="type_name [72243,72250]"/>
  <match src="parameter [46730,46743]" dest="parameter [51921,51934]"/>
  <match src="expression_statement [98879,99009]" dest="expression_statement [77529,77659]"/>
  <match src="identifier: unfreeze [90133,90141]" dest="identifier: unfreeze [73094,73102]"/>
  <match src="): ) [115220,115221]" dest="): ) [70164,70165]"/>
  <match src=".: . [111501,111502]" dest=".: . [40414,40415]"/>
  <match src="number_literal: 1e22 [52786,52790]" dest="number_literal: 1e22 [11899,11903]"/>
  <match src="type_name [95467,95494]" dest="type_name [26685,26712]"/>
  <match src="call_argument [107235,107241]" dest="call_argument [36148,36154]"/>
  <match src="visibility [56773,56781]" dest="visibility [15886,15894]"/>
  <match src="type_name [103278,103285]" dest="type_name [32191,32198]"/>
  <match src="comment: // 60% [54145,54151]" dest="comment: // 60% [13258,13264]"/>
  <match src="type_name [39976,39983]" dest="type_name [45167,45174]"/>
  <match src="identifier: getDAIAddress [54197,54210]" dest="identifier: getDAIAddress [13310,13323]"/>
  <match src="identifier: balance [107663,107670]" dest="identifier: balance [36576,36583]"/>
  <match src="address: address [96738,96745]" dest="address: address [27956,27963]"/>
  <match src="visibility [56524,56532]" dest="visibility [15637,15645]"/>
  <match src="address: address [102349,102356]" dest="address: address [31262,31269]"/>
  <match src="expression_statement [89480,89501]" dest="expression_statement [72571,72592]"/>
  <match src="call_argument [109195,109201]" dest="call_argument [38108,38114]"/>
  <match src="identifier: amount [29963,29969]" dest="identifier: amount [16940,16946]"/>
  <match src="{: { [105340,105341]" dest="{: { [34253,34254]"/>
  <match src="): ) [62936,62937]" dest="): ) [19770,19771]"/>
  <match src="type_name [64332,64339]" dest="type_name [21166,21173]"/>
  <match src="primitive_type [56695,56702]" dest="primitive_type [15808,15815]"/>
  <match src="identifier: account [108808,108815]" dest="identifier: account [37721,37728]"/>
  <match src="memory: memory [7126,7132]" dest="memory: memory [7690,7696]"/>
  <match src="uint256: uint256 [104332,104339]" dest="uint256: uint256 [33245,33252]"/>
  <match src=",: , [113518,113519]" dest=",: , [42431,42432]"/>
  <match src="identifier: Candidate [96749,96758]" dest="identifier: Candidate [27967,27976]"/>
  <match src="bytes: bytes [46964,46969]" dest="bytes: bytes [52155,52160]"/>
  <match src="return: return [55640,55646]" dest="return: return [14753,14759]"/>
  <match src="function_body [56805,56837]" dest="function_body [15918,15950]"/>
  <match src="return_statement [45722,45734]" dest="return_statement [50913,50925]"/>
  <match src="]: ] [113052,113053]" dest="]: ] [41965,41966]"/>
  <match src="uint: uint [62868,62872]" dest="uint: uint [19702,19706]"/>
  <match src="identifier: payloadB [43187,43195]" dest="identifier: payloadB [48378,48386]"/>
  <match src="]: ] [47033,47034]" dest="]: ] [52224,52225]"/>
  <match src="binary_expression [105501,105539]" dest="binary_expression [34414,34452]"/>
  <match src="}: } [6674,6675]" dest="}: } [7238,7239]"/>
  <match src="parameter [107593,107613]" dest="parameter [36506,36526]"/>
  <match src=".: . [108917,108918]" dest=".: . [37830,37831]"/>
  <match src="primitive_type [88300,88307]" dest="primitive_type [60175,60182]"/>
  <match src="{: { [72733,72734]" dest="{: { [66575,66576]"/>
  <match src="&amp;: &amp; [47431,47432]" dest="&amp;: &amp; [52622,52623]"/>
  <match src="primitive_type [108172,108179]" dest="primitive_type [37085,37092]"/>
  <match src=",: , [19767,19768]" dest=",: , [65184,65185]"/>
  <match src="{: { [4733,4734]" dest="{: { [5297,5298]"/>
  <match src="enum_value: Frozen [95346,95352]" dest="enum_value: Frozen [26564,26570]"/>
  <match src="return: return [104351,104357]" dest="return: return [33264,33270]"/>
  <match src="identifier: COMMA [38671,38676]" dest="identifier: COMMA [43862,43867]"/>
  <match src="visibility [91967,91975]" dest="visibility [64132,64140]"/>
  <match src="primitive_type [14012,14019]" dest="primitive_type [24010,24017]"/>
  <match src="(: ( [90486,90487]" dest="(: ( [73194,73195]"/>
  <match src="external: external [58307,58315]" dest="external: external [62548,62556]"/>
  <match src="}: } [104998,104999]" dest="}: } [33911,33912]"/>
  <match src="modifier_invocation [116732,116743]" dest="modifier_invocation [83292,83303]"/>
  <match src="view: view [100391,100395]" dest="view: view [29304,29308]"/>
  <match src="identifier: i [7722,7723]" dest="identifier: i [8286,8287]"/>
  <match src="primitive_type [105438,105445]" dest="primitive_type [34351,34358]"/>
  <match src="identifier: redeemable [96456,96466]" dest="identifier: redeemable [27674,27684]"/>
  <match src="public: public [59882,59888]" dest="public: public [24856,24862]"/>
  <match src="address: address [80364,80371]" dest="address: address [71985,71992]"/>
  <match src=".: . [107891,107892]" dest=".: . [36804,36805]"/>
  <match src="identifier: coupons [110060,110067]" dest="identifier: coupons [38973,38980]"/>
  <match src="call_argument [9495,9496]" dest="call_argument [10059,10060]"/>
  <match src="{: { [43275,43276]" dest="{: { [48466,48467]"/>
  <match src="binary_expression [46373,46378]" dest="binary_expression [51564,51569]"/>
  <match src="memory: memory [100225,100231]" dest="memory: memory [29138,29144]"/>
  <match src="member_expression [110045,110071]" dest="member_expression [38958,38984]"/>
  <match src="comment: // ' &lt;' [38732,38739]" dest="comment: // ' &lt;' [43923,43930]"/>
  <match src="indexed: indexed [63410,63417]" dest="indexed: indexed [20244,20251]"/>
  <match src="(: ( [42871,42872]" dest="(: ( [48062,48063]"/>
  <match src="expression_statement [91151,91268]" dest="expression_statement [81347,81453]"/>
  <match src="internal: internal [56524,56532]" dest="internal: internal [15637,15645]"/>
  <match src="call_expression [86635,86655]" dest="call_expression [54492,54500]"/>
  <match src="function_definition [55795,55909]" dest="function_definition [14908,15022]"/>
  <match src="pure: pure [6572,6576]" dest="pure: pure [7136,7140]"/>
  <match src="type_name [107969,107976]" dest="type_name [36882,36889]"/>
  <match src="}: } [101659,101660]" dest="}: } [30572,30573]"/>
  <match src="}: } [105266,105267]" dest="}: } [34179,34180]"/>
  <match src=".: . [105507,105508]" dest=".: . [34420,34421]"/>
  <match src="identifier: price [111257,111262]" dest="identifier: price [40170,40175]"/>
  <match src="internal: internal [113157,113165]" dest="internal: internal [42070,42078]"/>
  <match src="identifier: stringifyTruncated [42772,42790]" dest="identifier: stringifyTruncated [47963,47981]"/>
  <match src="=: = [38593,38594]" dest="=: = [43784,43785]"/>
  <match src="parameter [8471,8484]" dest="parameter [9035,9048]"/>
  <match src="}: } [6255,6256]" dest="}: } [6819,6820]"/>
  <match src="call_argument [871,872]" dest="call_argument [1435,1436]"/>
  <match src="(: ( [91834,91835]" dest="(: ( [58336,58337]"/>
  <match src="type_name [3433,3440]" dest="type_name [3997,4004]"/>
  <match src="identifier: a [1259,1260]" dest="identifier: a [1823,1824]"/>
  <match src="(: ( [103190,103191]" dest="(: ( [32103,32104]"/>
  <match src="primitive_type [52829,52836]" dest="primitive_type [11942,11949]"/>
  <match src="function: function [111621,111629]" dest="function: function [40534,40542]"/>
  <match src="expression_statement [90001,90016]" dest="expression_statement [55265,55280]"/>
  <match src="call_argument [83462,83468]" dest="call_argument [65066,65072]"/>
  <match src="identifier: burnFrom [23105,23113]" dest="identifier: redeemToAccount [54858,54873]"/>
  <match src="identifier: owner [62164,62169]" dest="identifier: owner [18998,19003]"/>
  <match src="state_variable_declaration [52461,52513]" dest="state_variable_declaration [11574,11626]"/>
  <match src="address: address [106754,106761]" dest="address: address [35667,35674]"/>
  <match src="string [114877,114898]" dest="string [69821,69842]"/>
  <match src="{: { [847,848]" dest="{: { [1411,1412]"/>
  <match src="call_argument [42937,42956]" dest="call_argument [48128,48147]"/>
  <match src="variable_declaration_statement [46938,46974]" dest="variable_declaration_statement [52129,52165]"/>
  <match src="(: ( [104758,104759]" dest="(: ( [33671,33672]"/>
  <match src="identifier: reason [43137,43143]" dest="identifier: reason [48328,48334]"/>
  <match src="using_directive [99878,99909]" dest="using_directive [28791,28822]"/>
  <match src="uint256: uint256 [107577,107584]" dest="uint256: uint256 [36490,36497]"/>
  <match src="identifier: one [27684,27687]" dest="identifier: one [67251,67254]"/>
  <match src="address: address [64393,64400]" dest="address: address [21227,21234]"/>
  <match src="expression_statement [91740,91811]" dest="expression_statement [63817,63859]"/>
  <match src="call_argument [42905,42911]" dest="call_argument [48096,48102]"/>
  <match src="): ) [7161,7162]" dest="): ) [7725,7726]"/>
  <match src="type_name [6919,6926]" dest="type_name [7483,7490]"/>
  <match src="member_expression [29950,29974]" dest="member_expression [18416,18435]"/>
  <match src="comment: /**  * Based off of, and designed to interface with, openzeppelin/upgrades package  */ [97521,97607]" dest="comment: /**  * Based off of, and designed to interface with, openzeppelin/upgrades package  */ [76171,76257]"/>
  <match src=",: , [41797,41798]" dest=",: , [46988,46989]"/>
  <match src="member_expression [109838,109881]" dest="member_expression [38751,38794]"/>
  <match src="=: = [109836,109837]" dest="=: = [38749,38750]"/>
  <match src="number_literal: 0 [22046,22047]" dest="number_literal: 0 [64962,64963]"/>
  <match src="(: ( [104458,104459]" dest="(: ( [33371,33372]"/>
  <match src="identifier: EPOCH_MIN_PERIOD [54560,54576]" dest="identifier: EPOCH_MIN_PERIOD [13673,13689]"/>
  <match src="): ) [7988,7989]" dest="): ) [8552,8553]"/>
  <match src="identifier: D256 [6780,6784]" dest="identifier: D256 [7344,7348]"/>
  <match src="return: return [28944,28950]" dest="return: return [67390,67396]"/>
  <match src="primitive_type [113558,113565]" dest="primitive_type [42471,42478]"/>
  <match src="{: { [103600,103601]" dest="{: { [32513,32514]"/>
  <match src="bool: bool [12079,12083]" dest="bool: bool [22077,22081]"/>
  <match src="external: external [62720,62728]" dest="external: external [19554,19562]"/>
  <match src="binary_expression [19831,19851]" dest="binary_expression [65263,65283]"/>
  <match src="function_definition [63105,63220]" dest="function_definition [19939,20054]"/>
  <match src="function_definition [55915,56019]" dest="function_definition [15028,15132]"/>
  <match src="view: view [103264,103268]" dest="view: view [32177,32181]"/>
  <match src="identifier: shift [46599,46604]" dest="identifier: shift [51790,51795]"/>
  <match src="(: ( [837,838]" dest="(: ( [1401,1402]"/>
  <match src=",: , [113072,113073]" dest=",: , [41985,41986]"/>
  <match src="): ) [90583,90584]" dest="): ) [73336,73337]"/>
  <match src="binary_expression [46649,46655]" dest="binary_expression [51840,51846]"/>
  <match src="&quot;: &quot; [99006,99007]" dest="&quot;: &quot; [77656,77657]"/>
  <match src="visibility [8880,8888]" dest="visibility [9444,9452]"/>
  <match src="user_defined_type [96649,96662]" dest="user_defined_type [27867,27880]"/>
  <match src="): ) [107462,107463]" dest="): ) [36375,36376]"/>
  <match src="return: return [10175,10181]" dest="return: return [10739,10745]"/>
  <match src="return_statement [101780,101819]" dest="return_statement [30693,30732]"/>
  <match src="identifier: approveFor [105014,105024]" dest="identifier: approveFor [33927,33937]"/>
  <match src="=&gt;: =&gt; [96646,96648]" dest="=&gt;: =&gt; [27864,27866]"/>
  <match src="]: ] [108247,108248]" dest="]: ] [37160,37161]"/>
  <match src="): ) [56476,56477]" dest="): ) [15589,15590]"/>
  <match src="private: private [53663,53670]" dest="private: private [12776,12783]"/>
  <match src="primitive_type [62898,62902]" dest="primitive_type [19732,19736]"/>
  <match src="struct_member [96113,96129]" dest="struct_member [27331,27347]"/>
  <match src="parameter [64186,64200]" dest="parameter [21020,21034]"/>
  <match src="primitive_type [46133,46138]" dest="primitive_type [51324,51329]"/>
  <match src="identifier: token1 [63798,63804]" dest="identifier: token1 [20632,20638]"/>
  <match src="identifier: z [47599,47600]" dest="identifier: z [52790,52791]"/>
  <match src="identifier: Decimal [75653,75660]" dest="identifier: Decimal [82219,82226]"/>
  <match src="user_defined_type [111332,111355]" dest="user_defined_type [40245,40268]"/>
  <match src="modifier_invocation [89179,89201]" dest="modifier_invocation [72267,72297]"/>
  <match src="identifier: sub [110657,110660]" dest="identifier: sub [39570,39573]"/>
  <match src="{: { [55862,55863]" dest="{: { [14975,14976]"/>
  <match src="function_definition [46702,47650]" dest="function_definition [51893,52841]"/>
  <match src="event_definition [63226,63289]" dest="event_definition [20060,20123]"/>
  <match src="call_argument [22027,22048]" dest="call_argument [64943,64964]"/>
  <match src="number_literal: 1 [7719,7720]" dest="number_literal: 1 [8283,8284]"/>
  <match src="state_mutability [101155,101159]" dest="state_mutability [30068,30072]"/>
  <match src="primitive_type [3248,3255]" dest="primitive_type [3812,3819]"/>
  <match src="identifier: D256 [7863,7867]" dest="identifier: D256 [8427,8431]"/>
  <match src="identifier: mint [59903,59907]" dest="identifier: mint [24877,24881]"/>
  <match src="identifier: reason [109270,109276]" dest="identifier: reason [38183,38189]"/>
  <match src="parameter [12394,12409]" dest="parameter [22392,22407]"/>
  <match src="view: view [103879,103883]" dest="view: view [32792,32796]"/>
  <match src="=: = [45598,45599]" dest="=: = [50789,50790]"/>
  <match src="number_literal: 0 [46078,46079]" dest="number_literal: 0 [51269,51270]"/>
  <match src="identifier: totalSupply [111703,111714]" dest="identifier: totalSupply [40616,40627]"/>
  <match src="type_name [43917,43924]" dest="type_name [49108,49115]"/>
  <match src=".: . [104963,104964]" dest=".: . [33876,33877]"/>
  <match src="type_name [109342,109349]" dest="type_name [38255,38262]"/>
  <match src="(: ( [7236,7237]" dest="(: ( [7800,7801]"/>
  <match src="type_name [110471,110478]" dest="type_name [39384,39391]"/>
  <match src="member_expression [56113,56125]" dest="member_expression [15226,15238]"/>
  <match src="type_name [95566,95573]" dest="type_name [26784,26791]"/>
  <match src=".: . [102423,102424]" dest=".: . [31336,31337]"/>
  <match src="return_type_definition [54327,54344]" dest="return_type_definition [13440,13457]"/>
  <match src="primitive_type [1273,1279]" dest="primitive_type [1837,1843]"/>
  <match src="assignment_expression [108939,108996]" dest="assignment_expression [37852,37909]"/>
  <match src="member_expression [7426,7440]" dest="member_expression [7990,8004]"/>
  <match src=",: , [112744,112745]" dest=",: , [41657,41658]"/>
  <match src="call_argument [92247,92260]" dest="call_argument [57808,57821]"/>
  <match src="call_argument [91872,91877]" dest="call_argument [80468,80477]"/>
  <match src="): ) [40467,40468]" dest="): ) [45658,45659]"/>
  <match src="&gt;: &gt; [45382,45383]" dest="&gt;: &gt; [50573,50574]"/>
  <match src="identifier: errorMessage [3410,3422]" dest="identifier: errorMessage [3974,3986]"/>
  <match src="identifier: EPOCH_MIN_PERIOD [53113,53129]" dest="identifier: EPOCH_MIN_PERIOD [12226,12242]"/>
  <match src="indexed: indexed [88412,88419]" dest="indexed: indexed [71301,71308]"/>
  <match src="call_expression [89212,89220]" dest="call_expression [72308,72316]"/>
  <match src="identifier: Setters [106553,106560]" dest="identifier: Setters [35466,35473]"/>
  <match src="parameter [100614,100629]" dest="parameter [29527,29542]"/>
  <match src="address: address [109707,109714]" dest="address: address [38620,38627]"/>
  <match src="array_access [100431,100455]" dest="array_access [29344,29368]"/>
  <match src="&gt;: &gt; [113711,113712]" dest="&gt;: &gt; [42624,42625]"/>
  <match src="): ) [58923,58924]" dest="): ) [64609,64610]"/>
  <match src="binary_expression [89612,89630]" dest="binary_expression [72620,72638]"/>
  <match src="parameter [62662,62666]" dest="parameter [19496,19500]"/>
  <match src="uint256: uint256 [13534,13541]" dest="uint256: uint256 [23532,23539]"/>
  <match src="identifier: balance [95450,95457]" dest="identifier: balance [26668,26675]"/>
  <match src="type_name [34791,34803]" dest="type_name [67503,67515]"/>
  <match src="parameter [108800,108815]" dest="parameter [37713,37728]"/>
  <match src=".: . [109647,109648]" dest=".: . [38560,38561]"/>
  <match src="state_mutability [62313,62317]" dest="state_mutability [19147,19151]"/>
  <match src="}: } [99135,99136]" dest="}: } [77785,77786]"/>
  <match src=".: . [103629,103630]" dest=".: . [32542,32543]"/>
  <match src="&quot;: &quot; [114683,114684]" dest="&quot;: &quot; [69627,69628]"/>
  <match src="primitive_type [45050,45057]" dest="primitive_type [50241,50248]"/>
  <match src="): ) [55086,55087]" dest="): ) [14199,14200]"/>
  <match src="function: function [54278,54286]" dest="function: function [13391,13399]"/>
  <match src="function: function [103830,103838]" dest="function: function [32743,32751]"/>
  <match src="identifier: balance [108320,108327]" dest="identifier: balance [37233,37240]"/>
  <match src=".: . [107648,107649]" dest=".: . [36561,36562]"/>
  <match src="): ) [43273,43274]" dest="): ) [48464,48465]"/>
  <match src="): ) [9041,9042]" dest="): ) [9605,9606]"/>
  <match src="call_argument [89954,89989]" dest="call_argument [72898,72936]"/>
  <match src="identifier: file [39912,39916]" dest="identifier: file [45103,45107]"/>
  <match src=",: , [88369,88370]" dest=",: , [71429,71430]"/>
  <match src="identifier: value [8931,8936]" dest="identifier: value [9495,9500]"/>
  <match src="identifier: b [4751,4752]" dest="identifier: b [5315,5316]"/>
  <match src="type_name [53142,53149]" dest="type_name [12255,12262]"/>
  <match src="comment: // populate the most-significant character [47486,47528]" dest="comment: // populate the most-significant character [52677,52719]"/>
  <match src="): ) [88650,88651]" dest="): ) [73573,73574]"/>
  <match src="identifier: outstandingCoupons [112057,112075]" dest="identifier: outstandingCoupons [40970,40988]"/>
  <match src="call_argument [46088,46105]" dest="call_argument [51279,51296]"/>
  <match src=",: , [39335,39336]" dest=",: , [44526,44527]"/>
  <match src="number_literal: 360 [53796,53799]" dest="number_literal: 360 [12909,12912]"/>
  <match src="&gt;: &gt; [3405,3406]" dest="&gt;: &gt; [3969,3970]"/>
  <match src="member_expression [108886,108917]" dest="member_expression [37799,37830]"/>
  <match src="type_name [98474,98479]" dest="type_name [77124,77129]"/>
  <match src="function: function [73945,73953]" dest="function: function [68525,68533]"/>
  <match src="pure: pure [56061,56065]" dest="pure: pure [15174,15178]"/>
  <match src="}: } [8824,8825]" dest="}: } [9388,9389]"/>
  <match src="): ) [103058,103059]" dest="): ) [31971,31972]"/>
  <match src="identifier: a [6235,6236]" dest="identifier: a [6799,6800]"/>
  <match src="parameter [6286,6295]" dest="parameter [6850,6859]"/>
  <match src="(: ( [7068,7069]" dest="(: ( [7632,7633]"/>
  <match src="(: ( [55391,55392]" dest="(: ( [14504,14505]"/>
  <match src=".: . [113406,113407]" dest=".: . [42319,42320]"/>
  <match src="(: ( [45107,45108]" dest="(: ( [50298,50299]"/>
  <match src=".: . [109566,109567]" dest=".: . [38479,38480]"/>
  <match src="parameter [6938,6958]" dest="parameter [7502,7522]"/>
  <match src="identifier: b [7335,7336]" dest="identifier: b [7899,7900]"/>
  <match src="call_argument [87978,87988]" dest="call_argument [63576,63586]"/>
  <match src="primitive_type [18352,18359]" dest="primitive_type [17036,17043]"/>
  <match src="): ) [113357,113358]" dest="): ) [42270,42271]"/>
  <match src="primitive_type [41105,41109]" dest="primitive_type [46296,46300]"/>
  <match src="type_name [6187,6191]" dest="type_name [6751,6755]"/>
  <match src="member_expression [107483,107502]" dest="member_expression [36396,36415]"/>
  <match src="uint256: uint256 [4019,4026]" dest="uint256: uint256 [4583,4590]"/>
  <match src="identifier: must [41110,41114]" dest="identifier: must [46301,46305]"/>
  <match src="): ) [101072,101073]" dest="): ) [29985,29986]"/>
  <match src="): ) [39009,39010]" dest="): ) [44200,44201]"/>
  <match src=",: , [42584,42585]" dest=",: , [47775,47776]"/>
  <match src=",: , [61564,61565]" dest=",: , [60262,60263]"/>
  <match src="user_defined_type [7000,7004]" dest="user_defined_type [7564,7568]"/>
  <match src="(: ( [88330,88331]" dest="(: ( [71390,71391]"/>
  <match src=".: . [8380,8381]" dest=".: . [8944,8945]"/>
  <match src="memory: memory [6595,6601]" dest="memory: memory [7159,7165]"/>
  <match src="type_name [71967,71971]" dest="type_name [25780,25784]"/>
  <match src="returns: returns [27970,27977]" dest="returns: returns [62557,62564]"/>
  <match src="primitive_type [90099,90106]" dest="primitive_type [73030,73037]"/>
  <match src="function_body [75291,75828]" dest="function_body [67868,68256]"/>
  <match src=".: . [101526,101527]" dest=".: . [30439,30440]"/>
  <match src="visibility [88892,88900]" dest="visibility [72258,72266]"/>
  <match src="identifier: a [2054,2055]" dest="identifier: a [2618,2619]"/>
  <match src="identifier: Global [95652,95658]" dest="identifier: Global [26870,26876]"/>
  <match src="): ) [88611,88612]" dest="): ) [83290,83291]"/>
  <match src="string_literal [66724,66749]" dest="string_literal [73855,73886]"/>
  <match src=",: , [42956,42957]" dest=",: , [48147,48148]"/>
  <match src="): ) [373,374]" dest="): ) [937,938]"/>
  <match src="event_definition [88144,88198]" dest="event_definition [71163,71217]"/>
  <match src="(: ( [111690,111691]" dest="(: ( [40603,40604]"/>
  <match src="&quot;: &quot; [114877,114878]" dest="&quot;: &quot; [69821,69822]"/>
  <match src="call_argument [98887,98944]" dest="call_argument [77537,77594]"/>
  <match src="call_argument [61281,61287]" dest="call_argument [65713,65719]"/>
  <match src="parameter [108172,108187]" dest="parameter [37085,37100]"/>
  <match src="identifier: i [104170,104171]" dest="identifier: i [33083,33084]"/>
  <match src="{: { [56256,56257]" dest="{: { [15369,15370]"/>
  <match src="variable_declaration [74868,74893]" dest="variable_declaration [67002,67027]"/>
  <match src="return: return [2109,2115]" dest="return: return [2673,2679]"/>
  <match src="{: { [96268,96269]" dest="{: { [27486,27487]"/>
  <match src="{: { [5947,5948]" dest="{: { [6511,6512]"/>
  <match src="expression_statement [47025,47061]" dest="expression_statement [52216,52252]"/>
  <match src="primitive_type [86925,86929]" dest="primitive_type [61664,61668]"/>
  <match src="type_name [54448,54461]" dest="type_name [13561,13574]"/>
  <match src="string [19936,19973]" dest="string [65376,65421]"/>
  <match src="}: } [10241,10242]" dest="}: } [10805,10806]"/>
  <match src="uint256: uint256 [88525,88532]" dest="uint256: uint256 [60264,60271]"/>
  <match src="identifier: from [62850,62854]" dest="identifier: from [19684,19688]"/>
  <match src="}: } [74186,74187]" dest="}: } [68865,68866]"/>
  <match src="number_literal: 1 [61237,61238]" dest="number_literal: 1 [65669,65670]"/>
  <match src="identifier: sub [8387,8390]" dest="identifier: sub [8951,8954]"/>
  <match src="member_expression [104058,104071]" dest="member_expression [32971,32984]"/>
  <match src="identifier: IUniswapV2Pair [62112,62126]" dest="identifier: IUniswapV2Pair [18946,18960]"/>
  <match src="return_type_definition [106798,106812]" dest="return_type_definition [35711,35725]"/>
  <match src="visibility [63211,63219]" dest="visibility [20045,20053]"/>
  <match src="primitive_type [81347,81354]" dest="primitive_type [71803,71810]"/>
  <match src="identifier: b [10220,10221]" dest="identifier: b [10784,10785]"/>
  <match src="(: ( [62737,62738]" dest="(: ( [19571,19572]"/>
  <match src=".: . [88831,88832]" dest=".: . [82013,82014]"/>
  <match src="): ) [111251,111252]" dest="): ) [40164,40165]"/>
  <match src="{: { [54470,54471]" dest="{: { [13583,13584]"/>
  <match src="identifier: account [112567,112574]" dest="identifier: account [41480,41487]"/>
  <match src="identifier: block [103171,103176]" dest="identifier: block [32084,32089]"/>
  <match src="call_expression [90541,90584]" dest="call_expression [73271,73337]"/>
  <match src="identifier: _state [103617,103623]" dest="identifier: _state [32530,32536]"/>
  <match src="identifier: sender [90887,90893]" dest="identifier: sender [73444,73450]"/>
  <match src="parameter [62327,62340]" dest="parameter [19161,19174]"/>
  <match src="internal: internal [9433,9441]" dest="internal: internal [9997,10005]"/>
  <match src="identifier: mul [91641,91644]" dest="identifier: mul [73640,73643]"/>
  <match src="parameter [64130,64134]" dest="parameter [20964,20968]"/>
  <match src="(: ( [80351,80352]" dest="(: ( [71972,71973]"/>
  <match src="identifier: sub [103187,103190]" dest="identifier: sub [32100,32103]"/>
  <match src="identifier: i [44520,44521]" dest="identifier: i [49711,49712]"/>
  <match src="call_argument [42872,42878]" dest="call_argument [48063,48069]"/>
  <match src=":: : [55398,55399]" dest=":: : [14511,14512]"/>
  <match src="memory: memory [9119,9125]" dest="memory: memory [9683,9689]"/>
  <match src="call_argument [108989,108995]" dest="call_argument [37902,37908]"/>
  <match src="identifier: SafeMath [79403,79411]" dest="identifier: SafeMath [78528,78536]"/>
  <match src="member_expression [112257,112270]" dest="member_expression [41170,41183]"/>
  <match src="(: ( [6276,6277]" dest="(: ( [6840,6841]"/>
  <match src="function_definition [101441,101541]" dest="function_definition [30354,30454]"/>
  <match src="member_expression [111820,111833]" dest="member_expression [40733,40746]"/>
  <match src="type_name [86092,86099]" dest="type_name [62526,62533]"/>
  <match src="member_expression [101403,101417]" dest="member_expression [30316,30330]"/>
  <match src="event_definition [24229,24272]" dest="event_definition [59899,59992]"/>
  <match src=".: . [7976,7977]" dest=".: . [8540,8541]"/>
  <match src="assignment_expression [47403,47447]" dest="assignment_expression [52594,52638]"/>
  <match src="(: ( [108402,108403]" dest="(: ( [37315,37316]"/>
  <match src="): ) [102152,102153]" dest="): ) [31065,31066]"/>
  <match src="call_expression [111174,111206]" dest="call_expression [40087,40119]"/>
  <match src="number_literal: 40e16 [53847,53852]" dest="number_literal: 40e16 [12960,12965]"/>
  <match src="function: function [55280,55288]" dest="function: function [14393,14401]"/>
  <match src="identifier: Claim [88269,88274]" dest="identifier: Incentivization [83207,83222]"/>
  <match src="return_statement [1410,1419]" dest="return_statement [1974,1983]"/>
  <match src="internal: internal [55946,55954]" dest="internal: internal [15059,15067]"/>
  <match src="(: ( [114749,114750]" dest="(: ( [69693,69694]"/>
  <match src="call_expression [9958,9996]" dest="call_expression [10522,10560]"/>
  <match src="): ) [89343,89344]" dest="): ) [73260,73261]"/>
  <match src="update_expression [45130,45138]" dest="update_expression [50321,50329]"/>
  <match src="identifier: excludeAccount [59977,59991]" dest="identifier: excludeAccount [24951,24965]"/>
  <match src="call_expression [61193,61224]" dest="call_expression [65620,65656]"/>
  <match src="visibility [28877,28885]" dest="visibility [63452,63460]"/>
  <match src="identifier: D256 [7378,7382]" dest="identifier: D256 [7942,7946]"/>
  <match src="member_expression [104220,104248]" dest="member_expression [33133,33161]"/>
  <match src="): ) [63097,63098]" dest="): ) [19931,19932]"/>
  <match src="function: function [59894,59902]" dest="function: function [24868,24876]"/>
  <match src="uint256: uint256 [53088,53095]" dest="uint256: uint256 [12201,12208]"/>
  <match src="identifier: Decimal [32730,32737]" dest="identifier: Decimal [68357,68364]"/>
  <match src=",: , [19851,19852]" dest=",: , [65283,65284]"/>
  <match src="identifier: this [58114,58118]" dest="identifier: this [54574,54578]"/>
  <match src="identifier: incrementTotalBonded [107129,107149]" dest="identifier: incrementTotalBonded [36042,36062]"/>
  <match src="(: ( [113652,113653]" dest="(: ( [42565,42566]"/>
  <match src="function_body [54708,54754]" dest="function_body [13821,13867]"/>
  <match src="identifier: D256 [8243,8247]" dest="identifier: D256 [8807,8811]"/>
  <match src="array_access [104685,104713]" dest="array_access [33598,33626]"/>
  <match src="call_expression [111455,111608]" dest="call_expression [40368,40521]"/>
  <match src="): ) [6857,6858]" dest="): ) [7421,7422]"/>
  <match src="uint: uint [62577,62581]" dest="uint: uint [19411,19415]"/>
  <match src="}: } [5988,5989]" dest="}: } [6552,6553]"/>
  <match src="state_variable_declaration [53865,53932]" dest="state_variable_declaration [12978,13045]"/>
  <match src="type_name [96682,96713]" dest="type_name [27900,27931]"/>
  <match src="function: function [64142,64150]" dest="function: function [20976,20984]"/>
  <match src=",: , [64477,64478]" dest=",: , [21311,21312]"/>
  <match src="): ) [40044,40045]" dest="): ) [45235,45236]"/>
  <match src="{: { [23154,23155]" dest="{: { [54916,54917]"/>
  <match src="variable_declaration [45856,45865]" dest="variable_declaration [51047,51056]"/>
  <match src="identifier: implementation [98151,98165]" dest="identifier: implementation [76801,76815]"/>
  <match src="): ) [8741,8742]" dest="): ) [9305,9306]"/>
  <match src=",: , [39593,39594]" dest=",: , [44784,44785]"/>
  <match src="{: { [55362,55363]" dest="{: { [14475,14476]"/>
  <match src="type_name [53655,53662]" dest="type_name [12768,12775]"/>
  <match src="primitive_type [62961,62968]" dest="primitive_type [19795,19802]"/>
  <match src=",: , [73596,73597]" dest=",: , [81900,81901]"/>
  <match src=",: , [92720,92721]" dest=",: , [79596,79597]"/>
  <match src="parameter [42548,42560]" dest="parameter [47739,47751]"/>
  <match src="variable_declaration [89591,89609]" dest="variable_declaration [62700,62722]"/>
  <match src="identifier: D256 [8362,8366]" dest="identifier: D256 [8926,8930]"/>
  <match src="identifier: price1CumulativeLast [64033,64053]" dest="identifier: price1CumulativeLast [20867,20887]"/>
  <match src="call_argument [90286,90290]" dest="call_argument [81765,81769]"/>
  <match src="visibility [45798,45805]" dest="visibility [50989,50996]"/>
  <match src="state_mutability [103264,103268]" dest="state_mutability [32177,32181]"/>
  <match src="call_expression [42772,42796]" dest="call_expression [47963,47987]"/>
  <match src="identifier: self [8457,8461]" dest="identifier: self [9021,9025]"/>
  <match src=".: . [110809,110810]" dest=".: . [39722,39723]"/>
  <match src="identifier: a [1356,1357]" dest="identifier: a [1920,1921]"/>
  <match src="return: return [100883,100889]" dest="return: return [29796,29802]"/>
  <match src="type_name [107448,107455]" dest="type_name [36361,36368]"/>
  <match src="identifier: stringify [44849,44858]" dest="identifier: stringify [50040,50049]"/>
  <match src="member_expression [108313,108334]" dest="member_expression [37226,37247]"/>
  <match src="): ) [56050,56051]" dest="): ) [15163,15164]"/>
  <match src="event_paramater [14012,14035]" dest="event_paramater [24010,24033]"/>
  <match src="&quot;: &quot; [92752,92753]" dest="&quot;: &quot; [79628,79629]"/>
  <match src=",: , [63187,63188]" dest=",: , [20021,20022]"/>
  <match src=".: . [109242,109243]" dest=".: . [38155,38156]"/>
  <match src="(: ( [103892,103893]" dest="(: ( [32805,32806]"/>
  <match src="(: ( [4650,4651]" dest="(: ( [5214,5215]"/>
  <match src=",: , [6529,6530]" dest=",: , [7093,7094]"/>
  <match src="): ) [7445,7446]" dest="): ) [8009,8010]"/>
  <match src="function: function [45746,45754]" dest="function: function [50937,50945]"/>
  <match src="identifier: balance [107759,107766]" dest="identifier: balance [36672,36679]"/>
  <match src="]: ] [109430,109431]" dest="]: ] [38343,38344]"/>
  <match src="(: ( [110877,110878]" dest="(: ( [39790,39791]"/>
  <match src="identifier: _state [104957,104963]" dest="identifier: _state [33870,33876]"/>
  <match src="identifier: totalSupply [62472,62483]" dest="identifier: totalSupply [19306,19317]"/>
  <match src="call_argument [8565,8613]" dest="call_argument [9129,9177]"/>
  <match src="identifier: D256 [35367,35371]" dest="identifier: D256 [57358,57362]"/>
  <match src="internal: internal [29599,29607]" dest="internal: internal [54019,54027]"/>
  <match src="function: function [6681,6689]" dest="function: function [7245,7253]"/>
  <match src="number_literal: 18 [100333,100335]" dest="number_literal: 18 [29246,29248]"/>
  <match src="): ) [115392,115393]" dest="): ) [70336,70337]"/>
  <match src="uint256: uint256 [99865,99872]" dest="uint256: uint256 [28778,28785]"/>
  <match src="uint256: uint256 [89511,89518]" dest="uint256: uint256 [62649,62656]"/>
  <match src="pragma_directive [59,92]" dest="pragma_directive [59,92]"/>
  <match src="uint256: uint256 [95694,95701]" dest="uint256: uint256 [26912,26919]"/>
  <match src="type_name [38457,38464]" dest="type_name [43648,43655]"/>
  <match src="uint256: uint256 [86092,86099]" dest="uint256: uint256 [62526,62533]"/>
  <match src="identifier: amount [112861,112867]" dest="identifier: amount [41774,41780]"/>
  <match src="}: } [96784,96785]" dest="}: } [28002,28003]"/>
  <match src="identifier: newClaimable [90362,90374]" dest="identifier: totalRedeemable [60960,60975]"/>
  <match src=",: , [6422,6423]" dest=",: , [6986,6987]"/>
  <match src="uint: uint [66284,66288]" dest="uint: uint [64352,64356]"/>
  <match src="identifier: balanceOf [62529,62538]" dest="identifier: balanceOf [19363,19372]"/>
  <match src="identifier: sender [89493,89499]" dest="identifier: sender [72584,72590]"/>
  <match src="parenthesized_expression [45624,45632]" dest="parenthesized_expression [50815,50823]"/>
  <match src="primitive_type [34090,34097]" dest="primitive_type [61405,61412]"/>
  <match src="): ) [20190,20191]" dest="): ) [65853,65854]"/>
  <match src="string [91228,91257]" dest="string [81427,81442]"/>
  <match src="parameter [6539,6548]" dest="parameter [7103,7112]"/>
  <match src="type_name [12394,12401]" dest="type_name [22392,22399]"/>
  <match src="{: { [102184,102185]" dest="{: { [31097,31098]"/>
  <match src="): ) [110330,110331]" dest="): ) [39243,39244]"/>
  <match src="(: ( [109261,109262]" dest="(: ( [38174,38175]"/>
  <match src="identifier: FILE [114859,114863]" dest="identifier: FILE [69803,69807]"/>
  <match src="return: return [102739,102745]" dest="return: return [31652,31658]"/>
  <match src="bool: bool [106916,106920]" dest="bool: bool [35829,35833]"/>
  <match src="uint256: uint256 [104296,104303]" dest="uint256: uint256 [33209,33216]"/>
  <match src="member_expression [89823,89833]" dest="member_expression [73366,73376]"/>
  <match src="}: } [44767,44768]" dest="}: } [49958,49959]"/>
  <match src="identifier: a [4659,4660]" dest="identifier: a [5223,5224]"/>
  <match src="parameter [105478,105482]" dest="parameter [34391,34395]"/>
  <match src="view: view [105601,105605]" dest="view: view [34514,34518]"/>
  <match src="bytes32: bytes32 [105762,105769]" dest="bytes32: bytes32 [34675,34682]"/>
  <match src="}: } [110847,110848]" dest="}: } [39760,39761]"/>
  <match src="pure: pure [9023,9027]" dest="pure: pure [9587,9591]"/>
  <match src="): ) [43041,43042]" dest="): ) [48232,48233]"/>
  <match src="identifier: incrementBalanceOf [108153,108171]" dest="identifier: incrementBalanceOf [37066,37084]"/>
  <match src="identifier: bonded [111694,111700]" dest="identifier: bonded [40607,40613]"/>
  <match src="): ) [110133,110134]" dest="): ) [39046,39047]"/>
  <match src="identifier: mul [6655,6658]" dest="identifier: mul [7219,7222]"/>
  <match src="state_mutability [63761,63765]" dest="state_mutability [20595,20599]"/>
  <match src="(: ( [44824,44825]" dest="(: ( [50015,50016]"/>
  <match src="(: ( [7622,7623]" dest="(: ( [8186,8187]"/>
  <match src="identifier: D256 [75633,75637]" dest="identifier: D256 [68607,68611]"/>
  <match src="type_name [35093,35105]" dest="type_name [61983,61995]"/>
  <match src="identifier: coupons [109928,109935]" dest="identifier: coupons [38841,38848]"/>
  <match src="}: } [112158,112159]" dest="}: } [41071,41072]"/>
  <match src="using_directive [72739,72770]" dest="using_directive [66613,66644]"/>
  <match src="identifier: initialized [115364,115375]" dest="identifier: initialized [70308,70319]"/>
  <match src="identifier: value [13808,13813]" dest="identifier: value [23806,23811]"/>
  <match src="]: ] [105528,105529]" dest="]: ] [34441,34442]"/>
  <match src="function_body [7215,7273]" dest="function_body [7779,7837]"/>
  <match src="return_statement [101084,101113]" dest="return_statement [29997,30026]"/>
  <match src="==: == [8937,8939]" dest="==: == [9501,9503]"/>
  <match src="type_name [56075,56087]" dest="type_name [15188,15200]"/>
  <match src="visibility [13550,13558]" dest="visibility [23548,23556]"/>
  <match src="primitive_type [104147,104154]" dest="primitive_type [33060,33067]"/>
  <match src="type_name [38943,38950]" dest="type_name [44134,44141]"/>
  <match src="pure: pure [43245,43249]" dest="pure: pure [48436,48440]"/>
  <match src="(: ( [91426,91427]" dest="(: ( [60823,60824]"/>
  <match src="type_name [13800,13807]" dest="type_name [23798,23805]"/>
  <match src=".: . [71953,71954]" dest=".: . [25766,25767]"/>
  <match src="identifier: Decimal [111079,111086]" dest="identifier: Decimal [39992,39999]"/>
  <match src=".: . [113422,113423]" dest=".: . [42335,42336]"/>
  <match src=".: . [86581,86582]" dest=".: . [80368,80369]"/>
  <match src="}: } [55128,55129]" dest="}: } [14241,14242]"/>
  <match src="identifier: sender [88644,88650]" dest="identifier: sender [73567,73573]"/>
  <match src="type_name [74868,74880]" dest="type_name [67002,67014]"/>
  <match src="visibility [6749,6757]" dest="visibility [7313,7321]"/>
  <match src="}: } [54271,54272]" dest="}: } [13384,13385]"/>
  <match src="uint256: uint256 [112929,112936]" dest="uint256: uint256 [41842,41849]"/>
  <match src="identifier: c [2116,2117]" dest="identifier: c [2680,2681]"/>
  <match src="contract_declaration [95624,95942]" dest="contract_declaration [26842,27160]"/>
  <match src="identifier: mul [7257,7260]" dest="identifier: mul [7821,7824]"/>
  <match src="type_name [75895,75902]" dest="type_name [73125,73132]"/>
  <match src="call_argument [8147,8181]" dest="call_argument [8711,8745]"/>
  <match src="returns: returns [4715,4722]" dest="returns: returns [5279,5286]"/>
  <match src="string [19853,19892]" dest="string [65285,65332]"/>
  <match src="type_name [64470,64477]" dest="type_name [21304,21311]"/>
  <match src="]: ] [47558,47559]" dest="]: ] [52749,52750]"/>
  <match src="parameter [6729,6738]" dest="parameter [7293,7302]"/>
  <match src="identifier: b [7155,7156]" dest="identifier: b [7719,7720]"/>
  <match src="): ) [107052,107053]" dest="): ) [35965,35966]"/>
  <match src=".: . [111252,111253]" dest=".: . [40165,40166]"/>
  <match src="constant: constant [53104,53112]" dest="constant: constant [12217,12225]"/>
  <match src="internal: internal [54794,54802]" dest="internal: internal [13907,13915]"/>
  <match src="memory: memory [7306,7312]" dest="memory: memory [7870,7876]"/>
  <match src="}: } [96226,96227]" dest="}: } [27444,27445]"/>
  <match src="identifier: _state [113176,113182]" dest="identifier: _state [42089,42095]"/>
  <match src="type_name [3259,3265]" dest="type_name [3823,3829]"/>
  <match src="member_expression [108538,108570]" dest="member_expression [37451,37483]"/>
  <match src="variable_declaration_statement [90354,90439]" dest="variable_declaration_statement [62700,62767]"/>
  <match src=",: , [4671,4672]" dest=",: , [5235,5236]"/>
  <match src="if: if [41255,41257]" dest="if: if [46446,46448]"/>
  <match src="visibility [24339,24346]" dest="visibility [58713,58720]"/>
  <match src="): ) [111262,111263]" dest="): ) [40175,40176]"/>
  <match src="parameter [41857,41873]" dest="parameter [47048,47064]"/>
  <match src="type_name [80452,80456]" dest="type_name [82104,82108]"/>
  <match src="identifier: value [6397,6402]" dest="identifier: value [6961,6966]"/>
  <match src="parameter [7918,7929]" dest="parameter [8482,8493]"/>
  <match src=",: , [40813,40814]" dest=",: , [46004,46005]"/>
  <match src="): ) [6008,6009]" dest="): ) [6572,6573]"/>
  <match src="&quot;: &quot; [91103,91104]" dest="&quot;: &quot; [58054,58055]"/>
  <match src="(: ( [12378,12379]" dest="(: ( [22376,22377]"/>
  <match src="): ) [90834,90835]" dest="): ) [80434,80435]"/>
  <match src=",: , [8043,8044]" dest=",: , [8607,8608]"/>
  <match src="binary_expression [2050,2055]" dest="binary_expression [2614,2619]"/>
  <match src="identifier: require [21941,21948]" dest="identifier: decrementBalanceOfCoupons [64230,64255]"/>
  <match src="address: address [62171,62178]" dest="address: address [19005,19012]"/>
  <match src="memory: memory [62334,62340]" dest="memory: memory [19168,19174]"/>
  <match src="function: function [54760,54768]" dest="function: function [13873,13881]"/>
  <match src="identifier: univ2 [88672,88677]" dest="identifier: dollar [83362,83368]"/>
  <match src="array_access [109538,109558]" dest="array_access [38451,38471]"/>
  <match src="returns: returns [56686,56693]" dest="returns: returns [15799,15806]"/>
  <match src="call_expression [114803,114820]" dest="call_expression [69747,69764]"/>
  <match src="call_expression [56435,56477]" dest="call_expression [15548,15590]"/>
  <match src="parameter [101761,101768]" dest="parameter [30674,30681]"/>
  <match src="}: } [100818,100819]" dest="}: } [29731,29732]"/>
  <match src="state_mutability [100640,100644]" dest="state_mutability [29553,29557]"/>
  <match src="}: } [9507,9508]" dest="}: } [10071,10072]"/>
  <match src="primitive_type [54031,54038]" dest="primitive_type [13144,13151]"/>
  <match src="identifier: D256 [56593,56597]" dest="identifier: D256 [15706,15710]"/>
  <match src="state_mutability [54918,54922]" dest="state_mutability [14031,14035]"/>
  <match src="string [19191,19230]" dest="string [73300,73336]"/>
  <match src="return_statement [8135,8183]" dest="return_statement [8699,8747]"/>
  <match src="(: ( [46969,46970]" dest="(: ( [52160,52161]"/>
  <match src="parameter [101271,101278]" dest="parameter [30184,30191]"/>
  <match src="primitive_type [62196,62200]" dest="primitive_type [19030,19034]"/>
  <match src=",: , [872,873]" dest=",: , [1436,1437]"/>
  <match src="(: ( [43709,43710]" dest="(: ( [48900,48901]"/>
  <match src=",: , [89014,89015]" dest=",: , [72389,72390]"/>
  <match src="member_expression [100546,100560]" dest="member_expression [29459,29473]"/>
  <match src="]: ] [104727,104728]" dest="]: ] [33640,33641]"/>
  <match src="): ) [111104,111105]" dest="): ) [40017,40018]"/>
  <match src="identifier: _state [105091,105097]" dest="identifier: _state [34004,34010]"/>
  <match src="call_argument [90206,90216]" dest="call_argument [73168,73178]"/>
  <match src="type_name [81157,81164]" dest="type_name [72602,72609]"/>
  <match src="(: ( [110071,110072]" dest="(: ( [38984,38985]"/>
  <match src="): ) [112081,112082]" dest="): ) [40994,40995]"/>
  <match src="view: view [100948,100952]" dest="view: view [29861,29865]"/>
  <match src="internal: internal [2614,2622]" dest="internal: internal [3178,3186]"/>
  <match src="primitive_type [54096,54103]" dest="primitive_type [13209,13216]"/>
  <match src="member_expression [102486,102500]" dest="member_expression [31399,31413]"/>
  <match src="binary_expression [46511,46517]" dest="binary_expression [51702,51708]"/>
  <match src="variable_declaration_tuple [98459,98494]" dest="variable_declaration_tuple [77109,77144]"/>
  <match src="returns: returns [54439,54446]" dest="returns: returns [13552,13559]"/>
  <match src="function: function [112349,112357]" dest="function: function [41262,41270]"/>
  <match src=".: . [102500,102501]" dest=".: . [31413,31414]"/>
  <match src="identifier: value [54984,54989]" dest="identifier: value [14097,14102]"/>
  <match src="): ) [71897,71898]" dest="): ) [25710,25711]"/>
  <match src="identifier: amount1 [63348,63355]" dest="identifier: amount1 [20182,20189]"/>
  <match src="if_statement [41255,41731]" dest="if_statement [46446,46922]"/>
  <match src="primitive_type [43205,43212]" dest="primitive_type [48396,48403]"/>
  <match src="return_type_definition [8721,8742]" dest="return_type_definition [9285,9306]"/>
  <match src="): ) [101176,101177]" dest="): ) [30089,30090]"/>
  <match src="call_argument [30590,30596]" dest="call_argument [58641,58647]"/>
  <match src="): ) [104039,104040]" dest="): ) [32952,32953]"/>
  <match src="primitive_type [88218,88225]" dest="primitive_type [71237,71244]"/>
  <match src="identifier: Transfer [20156,20164]" dest="identifier: CouponTransfer [65806,65820]"/>
  <match src="}: } [110682,110683]" dest="}: } [39595,39596]"/>
  <match src="variable_declaration_statement [113558,113617]" dest="variable_declaration_statement [42471,42530]"/>
  <match src="member_expression [104058,104102]" dest="member_expression [32971,33015]"/>
  <match src="visibility [112967,112975]" dest="visibility [41880,41888]"/>
  <match src="identifier: D256 [10037,10041]" dest="identifier: D256 [10601,10605]"/>
  <match src="memory: memory [45990,45996]" dest="memory: memory [51181,51187]"/>
  <match src="primitive_type [75302,75309]" dest="primitive_type [68051,68058]"/>
  <match src="number_literal: 120 [38595,38598]" dest="number_literal: 120 [43786,43789]"/>
  <match src="address: address [109325,109332]" dest="address: address [38238,38245]"/>
  <match src="identifier: candidate [112918,112927]" dest="identifier: candidate [41831,41840]"/>
  <match src="}: } [95941,95942]" dest="}: } [27159,27160]"/>
  <match src="internal: internal [54425,54433]" dest="internal: internal [13538,13546]"/>
  <match src="parameter [6187,6198]" dest="parameter [6751,6762]"/>
  <match src="visibility [8495,8503]" dest="visibility [9059,9067]"/>
  <match src="state_variable_declaration [99915,100029]" dest="state_variable_declaration [28828,28942]"/>
  <match src="variable_declaration [89511,89543]" dest="variable_declaration [62649,62676]"/>
  <match src="call_argument [45611,45632]" dest="call_argument [50802,50823]"/>
  <match src="(: ( [42790,42791]" dest="(: ( [47981,47982]"/>
  <match src="identifier: createCandidate [112358,112373]" dest="identifier: createCandidate [41271,41286]"/>
  <match src="identifier: Account [114824,114831]" dest="identifier: Account [69768,69775]"/>
  <match src="primitive_type [11628,11635]" dest="primitive_type [21626,21633]"/>
  <match src="&quot;: &quot; [115322,115323]" dest="&quot;: &quot; [70266,70267]"/>
  <match src="address: address [113520,113527]" dest="address: address [42433,42440]"/>
  <match src="identifier: value [7684,7689]" dest="identifier: value [8248,8253]"/>
  <match src=".: . [8589,8590]" dest=".: . [9153,9154]"/>
  <match src="identifier: outstandingCoupons [102198,102216]" dest="identifier: outstandingCoupons [31111,31129]"/>
  <match src="member_expression [101297,101316]" dest="member_expression [30210,30229]"/>
  <match src="string [91374,91405]" dest="string [80835,80846]"/>
  <match src="bytes32: bytes32 [40565,40572]" dest="bytes32: bytes32 [45756,45763]"/>
  <match src="primitive_type [19046,19053]" dest="primitive_type [17007,17014]"/>
  <match src="call_argument [115069,115110]" dest="call_argument [70013,70054]"/>
  <match src="expression_statement [58703,58809]" dest="expression_statement [54970,55049]"/>
  <match src=",: , [40414,40415]" dest=",: , [45605,45606]"/>
  <match src="primitive_type [96690,96697]" dest="primitive_type [27908,27915]"/>
  <match src="(: ( [62808,62809]" dest="(: ( [19642,19643]"/>
  <match src="(: ( [55620,55621]" dest="(: ( [14733,14734]"/>
  <match src="identifier: Decimal [56075,56082]" dest="identifier: Decimal [15188,15195]"/>
  <match src=",: , [109737,109738]" dest=",: , [38650,38651]"/>
  <match src="identifier: initializeEpochs [110728,110744]" dest="identifier: initializeEpochs [39641,39657]"/>
  <match src="identifier: epoch [111994,111999]" dest="identifier: epoch [40907,40912]"/>
  <match src="(: ( [7588,7589]" dest="(: ( [8152,8153]"/>
  <match src="): ) [906,907]" dest="): ) [1470,1471]"/>
  <match src="member_expression [109950,109978]" dest="member_expression [38863,38891]"/>
  <match src="identifier: price [111308,111313]" dest="identifier: price [40221,40226]"/>
  <match src=",: , [39624,39625]" dest=",: , [44815,44816]"/>
  <match src="array_access [109838,109877]" dest="array_access [38751,38790]"/>
  <match src="[: [ [102761,102762]" dest="[: [ [31674,31675]"/>
  <match src="return: return [9053,9059]" dest="return: return [9617,9623]"/>
  <match src="identifier: balance [110052,110059]" dest="identifier: balance [38965,38972]"/>
  <match src=".: . [104661,104662]" dest=".: . [33574,33575]"/>
  <match src="calldata: calldata [64350,64358]" dest="calldata: calldata [21184,21192]"/>
  <match src="}: } [515,516]" dest="}: } [1079,1080]"/>
  <match src="primitive_type [9170,9174]" dest="primitive_type [9734,9738]"/>
  <match src="identifier: D256 [56405,56409]" dest="identifier: D256 [15518,15522]"/>
  <match src="string [90798,90834]" dest="string [81030,81048]"/>
  <match src="&quot;: &quot; [30528,30529]" dest="&quot;: &quot; [65778,65779]"/>
  <match src="parameter [113302,113319]" dest="parameter [42215,42232]"/>
  <match src=",: , [63924,63925]" dest=",: , [20758,20759]"/>
  <match src="yul_identifier [44665,44671]" dest="yul_identifier [49856,49862]"/>
  <match src="comment: // ============ Core Methods ============ [9741,9782]" dest="comment: // ============ Core Methods ============ [10305,10346]"/>
  <match src="memory: memory [7651,7657]" dest="memory: memory [8215,8221]"/>
  <match src="): ) [8610,8611]" dest="): ) [9174,9175]"/>
  <match src="(: ( [116510,116511]" dest="(: ( [54109,54110]"/>
  <match src="binary_expression [19911,19934]" dest="binary_expression [65351,65374]"/>
  <match src="call_expression [113025,113081]" dest="call_expression [41938,41994]"/>
  <match src="primitive_type [59925,59932]" dest="primitive_type [24899,24906]"/>
  <match src="identifier: priceCumulative [74284,74299]" dest="identifier: endsAfter [80683,80692]"/>
  <match src="member_expression [110899,110919]" dest="member_expression [39812,39832]"/>
  <match src="identifier: coupons [109459,109466]" dest="identifier: coupons [38372,38379]"/>
  <match src="solidity_pragma_token [41,57]" dest="solidity_pragma_token [41,57]"/>
  <match src="identifier: ASCII_ZERO [45611,45621]" dest="identifier: ASCII_ZERO [50802,50812]"/>
  <match src="type_name [63507,63511]" dest="type_name [20341,20345]"/>
  <match src="member_expression [110192,110203]" dest="member_expression [39105,39116]"/>
  <match src="(: ( [40888,40889]" dest="(: ( [46079,46080]"/>
  <match src="(: ( [8564,8565]" dest="(: ( [9128,9129]"/>
  <match src="visibility [101044,101050]" dest="visibility [29957,29963]"/>
  <match src="identifier: owner [63129,63134]" dest="identifier: owner [19963,19968]"/>
  <match src="uint8: uint8 [47042,47047]" dest="uint8: uint8 [52233,52238]"/>
  <match src=",: , [104160,104161]" dest=",: , [33073,33074]"/>
  <match src="(: ( [94024,94025]" dest="(: ( [74882,74883]"/>
  <match src="function: function [62520,62528]" dest="function: function [19354,19362]"/>
  <match src="): ) [62340,62341]" dest="): ) [19174,19175]"/>
  <match src="): ) [107836,107837]" dest="): ) [36749,36750]"/>
  <match src="(: ( [6394,6395]" dest="(: ( [6958,6959]"/>
  <match src="): ) [56210,56211]" dest="): ) [15323,15324]"/>
  <match src="identifier: D256 [71954,71958]" dest="identifier: D256 [25767,25771]"/>
  <match src="type_name [7863,7867]" dest="type_name [8427,8431]"/>
  <match src="(: ( [62661,62662]" dest="(: ( [19495,19496]"/>
  <match src="type_name [41831,41838]" dest="type_name [47022,47029]"/>
  <match src="identifier: totalSupply [101921,101932]" dest="identifier: totalSupply [30834,30845]"/>
  <match src="visibility [53873,53880]" dest="visibility [12986,12993]"/>
  <match src="identifier: reason [39219,39225]" dest="identifier: reason [44410,44416]"/>
  <match src="return_type_definition [11619,11636]" dest="return_type_definition [21617,21634]"/>
  <match src="(: ( [55708,55709]" dest="(: ( [14821,14822]"/>
  <match src="type_name [74831,74843]" dest="type_name [18578,18590]"/>
  <match src="internal: internal [112762,112770]" dest="internal: internal [41675,41683]"/>
  <match src="identifier: coupons [111841,111848]" dest="identifier: coupons [40754,40761]"/>
  <match src="identifier: result [46116,46122]" dest="identifier: result [51307,51313]"/>
  <match src="(: ( [80451,80452]" dest="(: ( [82103,82104]"/>
  <match src="identifier: epoch [110192,110197]" dest="identifier: epoch [39105,39110]"/>
  <match src="]: ] [112509,112510]" dest="]: ] [41422,41423]"/>
  <match src="identifier: a [868,869]" dest="identifier: a [1432,1433]"/>
  <match src="primitive_type [112910,112917]" dest="primitive_type [41823,41830]"/>
  <match src="parameter [105615,105619]" dest="parameter [34528,34532]"/>
  <match src="member_expression [113416,113455]" dest="member_expression [42329,42368]"/>
  <match src="uint256: uint256 [58206,58213]" dest="uint256: uint256 [71769,71776]"/>
  <match src="(: ( [116841,116842]" dest="(: ( [83447,83448]"/>
  <match src="return_type_definition [13155,13169]" dest="return_type_definition [23153,23167]"/>
  <match src="internal: internal [54676,54684]" dest="internal: internal [13789,13797]"/>
  <match src="): ) [105847,105848]" dest="): ) [34760,34761]"/>
  <match src="comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP. Does not include  * the optional functions; to access them see {ERC20Detailed}.  */ [11337,11487]" dest="comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP. Does not include  * the optional functions; to access them see {ERC20Detailed}.  */ [21335,21485]"/>
  <match src=".: . [108544,108545]" dest=".: . [37457,37458]"/>
  <match src="address: address [115016,115023]" dest="address: address [69960,69967]"/>
  <match src="if: if [47789,47791]" dest="if: if [52980,52982]"/>
  <match src=",: , [40928,40929]" dest=",: , [46119,46120]"/>
  <match src="parameter [94065,94069]" dest="parameter [74923,74927]"/>
  <match src=".: . [110934,110935]" dest=".: . [39847,39848]"/>
  <match src="type_name [63402,63409]" dest="type_name [20236,20243]"/>
  <match src="primitive_type [96376,96383]" dest="primitive_type [27594,27601]"/>
  <match src="]: ] [113013,113014]" dest="]: ] [41926,41927]"/>
  <match src="): ) [108928,108929]" dest="): ) [37841,37842]"/>
  <match src="identifier: _ [115404,115405]" dest="identifier: _ [70348,70349]"/>
  <match src="return_type_definition [8319,8340]" dest="return_type_definition [8883,8904]"/>
  <match src="visibility [103872,103878]" dest="visibility [32785,32791]"/>
  <match src="call_argument [92624,92720]" dest="call_argument [79541,79596]"/>
  <match src="memory: memory [74844,74850]" dest="memory: memory [18591,18597]"/>
  <match src="call_expression [8560,8614]" dest="call_expression [9124,9178]"/>
  <match src="address: address [25515,25522]" dest="address: address [78653,78660]"/>
  <match src="expression_statement [110154,110240]" dest="expression_statement [39067,39153]"/>
  <match src="call_expression [116524,116532]" dest="call_expression [68640,68648]"/>
  <match src="identifier: COLON [39169,39174]" dest="identifier: COLON [44360,44365]"/>
  <match src="identifier: result [47403,47409]" dest="identifier: result [52594,52600]"/>
  <match src="(: ( [63392,63393]" dest="(: ( [20226,20227]"/>
  <match src="number_literal: 0xf [38817,38820]" dest="number_literal: 0xf [44008,44011]"/>
  <match src="identifier: decrementBalanceOfCoupons [109681,109706]" dest="identifier: decrementBalanceOfCoupons [38594,38619]"/>
  <match src="identifier: EPOCH_OFFSET [54523,54535]" dest="identifier: EPOCH_OFFSET [13636,13648]"/>
  <match src="number_literal: 12e18 [54014,54019]" dest="number_literal: 12e18 [13127,13132]"/>
  <match src="]: ] [113895,113896]" dest="]: ] [42808,42809]"/>
  <match src="primitive_type [107048,107052]" dest="primitive_type [35961,35965]"/>
  <match src="{: { [54708,54709]" dest="{: { [13821,13822]"/>
  <match src="): ) [74908,74909]" dest="): ) [67044,67045]"/>
  <match src=".: . [8793,8794]" dest=".: . [9357,9358]"/>
  <match src="identifier: _state [105638,105644]" dest="identifier: _state [34551,34557]"/>
  <match src="visibility [53759,53766]" dest="visibility [12872,12879]"/>
  <match src="call_argument [115258,115290]" dest="call_argument [70202,70234]"/>
  <match src="user_defined_type [9132,9136]" dest="user_defined_type [9696,9700]"/>
  <match src="visibility [103458,103464]" dest="visibility [32371,32377]"/>
  <match src="identifier: epochs [111678,111684]" dest="identifier: epochs [40591,40597]"/>
  <match src="identifier: input [45062,45067]" dest="identifier: input [50253,50258]"/>
  <match src="call_expression [42019,42451]" dest="call_expression [47210,47642]"/>
  <match src="{: { [102230,102231]" dest="{: { [31143,31144]"/>
  <match src="(: ( [12025,12026]" dest="(: ( [22023,22024]"/>
  <match src="identifier: State [96533,96538]" dest="identifier: State [27751,27756]"/>
  <match src="call_expression [8764,8818]" dest="call_expression [9328,9382]"/>
  <match src="comment: /**      * @dev Emitted when `value` tokens are moved from one account (`from`) to      * another (`to`).      *      * Note that `value` may be zero.      */ [13580,13738]" dest="comment: /**      * @dev Emitted when `value` tokens are moved from one account (`from`) to      * another (`to`).      *      * Note that `value` may be zero.      */ [23578,23736]"/>
  <match src="type_name [114750,114757]" dest="type_name [69694,69701]"/>
  <match src="user_defined_type [99834,99839]" dest="user_defined_type [28747,28752]"/>
  <match src="for: for [72753,72756]" dest="for: for [66627,66630]"/>
  <match src="binary_expression [91054,91071]" dest="binary_expression [58005,58022]"/>
  <match src="uint256: uint256 [53805,53812]" dest="uint256: uint256 [12918,12925]"/>
  <match src="primitive_type [109357,109364]" dest="primitive_type [38270,38277]"/>
  <match src="): ) [63032,63033]" dest="): ) [19866,19867]"/>
  <match src="identifier: from [62244,62248]" dest="identifier: from [19078,19082]"/>
  <match src="type_name [14012,14019]" dest="type_name [24010,24017]"/>
  <match src="type_name [103996,104003]" dest="type_name [32909,32916]"/>
  <match src="): ) [90216,90217]" dest="): ) [73178,73179]"/>
  <match src="string_literal [874,906]" dest="string_literal [1438,1470]"/>
  <match src="{: { [1333,1334]" dest="{: { [1897,1898]"/>
  <match src="parameter [398,405]" dest="parameter [962,969]"/>
  <match src="call_argument [34503,34517]" dest="call_argument [62931,62968]"/>
  <match src="user_defined_type [100864,100871]" dest="user_defined_type [29777,29784]"/>
  <match src="uint256: uint256 [59925,59932]" dest="uint256: uint256 [24899,24906]"/>
  <match src="call_argument [42347,42352]" dest="call_argument [47538,47543]"/>
  <match src="call_expression [115043,115174]" dest="call_expression [69987,70118]"/>
  <match src="identifier: timestamp [103403,103412]" dest="identifier: timestamp [32316,32325]"/>
  <match src="type_alias [99884,99891]" dest="type_alias [28797,28804]"/>
  <match src="): ) [6319,6320]" dest="): ) [6883,6884]"/>
  <match src="identifier: owner [110464,110469]" dest="identifier: owner [39377,39382]"/>
  <match src="identifier: a [457,458]" dest="identifier: a [1021,1022]"/>
  <match src="(: ( [13988,13989]" dest="(: ( [23986,23987]"/>
  <match src="identifier: dollar [89212,89218]" dest="identifier: dollar [72308,72314]"/>
  <match src="identifier: sub [107388,107391]" dest="identifier: sub [36301,36304]"/>
  <match src="view: view [105051,105055]" dest="view: view [33964,33968]"/>
  <match src="call_argument [6843,6854]" dest="call_argument [7407,7418]"/>
  <match src="memory: memory [54945,54951]" dest="memory: memory [14058,14064]"/>
  <match src="uint256: uint256 [104931,104938]" dest="uint256: uint256 [33844,33851]"/>
  <match src="identifier: account [113511,113518]" dest="identifier: account [42424,42431]"/>
  <match src="): ) [7624,7625]" dest="): ) [8188,8189]"/>
  <match src="binary_expression [1351,1357]" dest="binary_expression [1915,1921]"/>
  <match src="internal: internal [98393,98401]" dest="internal: internal [77043,77051]"/>
  <match src="(: ( [44656,44657]" dest="(: ( [49847,49848]"/>
  <match src="type_name [109060,109067]" dest="type_name [37973,37980]"/>
  <match src="variable_declaration [105762,105774]" dest="variable_declaration [34675,34687]"/>
  <match src="identifier: msg [89935,89938]" dest="identifier: msg [72879,72882]"/>
  <match src="member_expression [103191,103203]" dest="member_expression [32104,32116]"/>
  <match src="number_literal: 2 [47331,47332]" dest="number_literal: 2 [52522,52523]"/>
  <match src=".: . [103059,103060]" dest=".: . [31972,31973]"/>
  <match src="call_argument [8807,8814]" dest="call_argument [9371,9378]"/>
  <match src="event_definition [88391,88481]" dest="event_definition [71282,71373]"/>
  <match src="identifier: lessDai [88548,88555]" dest="identifier: amount [83256,83262]"/>
  <match src=",: , [110314,110315]" dest=",: , [39227,39228]"/>
  <match src="binary_expression [103301,103335]" dest="binary_expression [32214,32248]"/>
  <match src="): ) [90859,90860]" dest="): ) [54835,54836]"/>
  <match src="): ) [7929,7930]" dest="): ) [8493,8494]"/>
  <match src="(: ( [21948,21949]" dest="(: ( [64255,64256]"/>
  <match src="call_expression [39119,39143]" dest="call_expression [44310,44334]"/>
  <match src="uint256: uint256 [101588,101595]" dest="uint256: uint256 [30501,30508]"/>
  <match src="primitive_type [62842,62849]" dest="primitive_type [19676,19683]"/>
  <match src="identifier: _state [110959,110965]" dest="identifier: _state [39872,39878]"/>
  <match src="(: ( [45604,45605]" dest="(: ( [50795,50796]"/>
  <match src=",: , [110078,110079]" dest=",: , [38991,38992]"/>
  <match src="indexed: indexed [61550,61557]" dest="indexed: indexed [60247,60254]"/>
  <match src="number_literal: 0 [19849,19850]" dest="number_literal: 0 [65281,65282]"/>
  <match src="internal: internal [1301,1309]" dest="internal: internal [1865,1873]"/>
  <match src="function_body [98869,99134]" dest="function_body [77519,77784]"/>
  <match src="call_expression [8142,8182]" dest="call_expression [8706,8746]"/>
  <match src="{: { [47805,47806]" dest="{: { [52996,52997]"/>
  <match src="type_name [102122,102129]" dest="type_name [31035,31042]"/>
  <match src=".: . [110799,110800]" dest=".: . [39712,39713]"/>
  <match src="): ) [19802,19803]" dest="): ) [65234,65235]"/>
  <match src="member_expression [10220,10227]" dest="member_expression [10784,10791]"/>
  <match src="identifier: balance [108970,108977]" dest="identifier: balance [37883,37890]"/>
  <match src="identifier: _state [110766,110772]" dest="identifier: _state [39679,39685]"/>
  <match src="type_name [88444,88451]" dest="type_name [71333,71340]"/>
  <match src="comment: /*     Copyright 2020 Reflective Dollar Devs, based on the works of the Dynamic Dollar Devs and the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [77294,77969]" dest="comment: /*     Copyright 2020 Reflective Dollar Devs, based on the works of the Dynamic Dollar Devs and the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [53164,53839]"/>
  <match src="identifier: add [112857,112860]" dest="identifier: add [41770,41773]"/>
  <match src="identifier: transferFrom [88680,88692]" dest="identifier: excludeAccount [83371,83385]"/>
  <match src=".: . [110059,110060]" dest=".: . [38972,38973]"/>
  <match src=".: . [111693,111694]" dest=".: . [40606,40607]"/>
  <match src="): ) [44225,44226]" dest="): ) [49416,49417]"/>
  <match src="identifier: abi [41332,41335]" dest="identifier: abi [46523,46526]"/>
  <match src="): ) [104201,104202]" dest="): ) [33114,33115]"/>
  <match src="function_definition [100075,100173]" dest="function_definition [28988,29086]"/>
  <match src="contract: contract [96787,96795]" dest="contract: contract [28005,28013]"/>
  <match src="uint112: uint112 [63908,63915]" dest="uint112: uint112 [20742,20749]"/>
  <match src="identifier: add [108985,108988]" dest="identifier: add [37898,37901]"/>
  <match src="primitive_type [27696,27703]" dest="primitive_type [83162,83169]"/>
  <match src="identifier: Unbond [90876,90882]" dest="identifier: Unbond [73433,73439]"/>
  <match src=",: , [41821,41822]" dest=",: , [47012,47013]"/>
  <match src="inheritance_specifier [87829,87840]" dest="inheritance_specifier [71056,71063]"/>
  <match src="function: function [8195,8203]" dest="function: function [8759,8767]"/>
  <match src="call_expression [107505,107536]" dest="call_expression [36418,36449]"/>
  <match src="identifier: setDebtToZero [107717,107730]" dest="identifier: setDebtToZero [36630,36643]"/>
  <match src="=&gt;: =&gt; [96698,96700]" dest="=&gt;: =&gt; [27916,27918]"/>
  <match src="view: view [104318,104322]" dest="view: view [33231,33235]"/>
  <match src="visibility [105310,105316]" dest="visibility [34223,34229]"/>
  <match src="internal: internal [111652,111660]" dest="internal: internal [40565,40573]"/>
  <match src="identifier: couponAllowances [110631,110647]" dest="identifier: couponAllowances [39544,39560]"/>
  <match src="comment: // ============ Static Functions ============ [5828,5873]" dest="comment: // ============ Static Functions ============ [6392,6437]"/>
  <match src="identifier: GOVERNANCE_PERIOD [53243,53260]" dest="identifier: GOVERNANCE_PERIOD [12356,12373]"/>
  <match src="{: { [106813,106814]" dest="{: { [35726,35727]"/>
  <match src="public: public [104631,104637]" dest="public: public [33544,33550]"/>
  <match src="identifier: _state [108573,108579]" dest="identifier: _state [37486,37492]"/>
  <match src="member_expression [90036,90046]" dest="member_expression [73910,73920]"/>
  <match src="identifier: lockedUntil [95602,95613]" dest="identifier: lockedUntil [26820,26831]"/>
  <match src="event: event [13974,13979]" dest="event: event [23972,23977]"/>
  <match src="identifier: couponAllowances [95540,95556]" dest="identifier: couponAllowances [26758,26774]"/>
  <match src="{: { [41953,41954]" dest="{: { [47144,47145]"/>
  <match src="identifier: balance [107192,107199]" dest="identifier: balance [36105,36112]"/>
  <match src="memory: memory [110511,110517]" dest="memory: memory [39424,39430]"/>
  <match src="identifier: Permission [116379,116389]" dest="identifier: Permission [71065,71075]"/>
  <match src="call_argument [42302,42321]" dest="call_argument [47493,47512]"/>
  <match src="identifier: candidate [112584,112593]" dest="identifier: candidate [41497,41506]"/>
  <match src="uint256: uint256 [105065,105072]" dest="uint256: uint256 [33978,33985]"/>
  <match src="(: ( [80382,80383]" dest="(: ( [72003,72004]"/>
  <match src="call_expression [7034,7086]" dest="call_expression [7598,7650]"/>
  <match src="block_statement [47251,47620]" dest="block_statement [52442,52811]"/>
  <match src="state_mutability [102962,102966]" dest="state_mutability [31875,31879]"/>
  <match src="contract: contract [71859,71867]" dest="contract: contract [25672,25680]"/>
  <match src="&quot;: &quot; [32120,32121]" dest="&quot;: &quot; [55209,55210]"/>
  <match src="member_expression [101787,101818]" dest="member_expression [30700,30731]"/>
  <match src="variable_declaration [75895,75914]" dest="variable_declaration [73125,73139]"/>
  <match src="identifier: amount [107392,107398]" dest="identifier: amount [36305,36311]"/>
  <match src="identifier: account [109333,109340]" dest="identifier: account [38246,38253]"/>
  <match src="user_defined_type [9530,9534]" dest="user_defined_type [10094,10098]"/>
  <match src="call_expression [111192,111205]" dest="call_expression [40105,40118]"/>
  <match src="type_name [8053,8057]" dest="type_name [8617,8621]"/>
  <match src="uint256: uint256 [107969,107976]" dest="uint256: uint256 [36882,36889]"/>
  <match src="identifier: balanceCheck [92134,92146]" dest="identifier: balanceCheck [57694,57706]"/>
  <match src="identifier: accounts [100438,100446]" dest="identifier: accounts [29351,29359]"/>
  <match src="parameter [55189,55208]" dest="parameter [14302,14321]"/>
  <match src="identifier: realMintValue [29626,29639]" dest="identifier: realMintValue [54151,54164]"/>
  <match src="type_name [44046,44051]" dest="type_name [49237,49242]"/>
  <match src="type_name [98460,98464]" dest="type_name [77110,77114]"/>
  <match src="call_argument [4759,4771]" dest="call_argument [5323,5335]"/>
  <match src=",: , [106771,106772]" dest=",: , [35684,35685]"/>
  <match src="type_name [9114,9118]" dest="type_name [9678,9682]"/>
  <match src="sload: sload [105837,105842]" dest="sload: sload [34750,34755]"/>
  <match src="constant: constant [53421,53429]" dest="constant: constant [12534,12542]"/>
  <match src="member_expression [108635,108649]" dest="member_expression [37548,37562]"/>
  <match src="uint: uint [63507,63511]" dest="uint: uint [20341,20345]"/>
  <match src="visibility [53413,53420]" dest="visibility [12526,12533]"/>
  <match src="type_name [59866,59873]" dest="type_name [24840,24847]"/>
  <match src="return_statement [54355,54385]" dest="return_statement [13468,13498]"/>
  <match src="address: address [64332,64339]" dest="address: address [21166,21173]"/>
  <match src="parameter [86132,86139]" dest="parameter [55675,55682]"/>
  <match src="identifier: amountToReflect [35379,35394]" dest="identifier: targetDebtRatio [57370,57385]"/>
  <match src="variable_declaration [46357,46370]" dest="variable_declaration [51548,51561]"/>
  <match src="comment: /**      * @dev Returns the remaining number of tokens that `spender` will be      * allowed to spend on behalf of `owner` through {transferFrom}. This is      * zero by default.      *      * This value changes when {approve} or {transferFrom} are called.      */ [12091,12355]" dest="comment: /**      * @dev Returns the remaining number of tokens that `spender` will be      * allowed to spend on behalf of `owner` through {transferFrom}. This is      * zero by default.      *      * This value changes when {approve} or {transferFrom} are called.      */ [22089,22353]"/>
  <match src="identifier: Decimal [55379,55386]" dest="identifier: Decimal [14492,14499]"/>
  <match src="identifier: accounts [102553,102561]" dest="identifier: accounts [31466,31474]"/>
  <match src="variable_declaration_statement [98459,98569]" dest="variable_declaration_statement [77109,77219]"/>
  <match src="function: function [100825,100833]" dest="function: function [29738,29746]"/>
  <match src="type_name [63153,63157]" dest="type_name [19987,19991]"/>
  <match src="primitive_type [79416,79423]" dest="primitive_type [78541,78548]"/>
  <match src="): ) [1299,1300]" dest="): ) [1863,1864]"/>
  <match src="address: address [95520,95527]" dest="address: address [26738,26745]"/>
  <match src="address: address [62250,62257]" dest="address: address [19084,19091]"/>
  <match src="identifier: a [429,430]" dest="identifier: a [993,994]"/>
  <match src="(: ( [105158,105159]" dest="(: ( [34071,34072]"/>
  <match src="assembly_statement [44619,44712]" dest="assembly_statement [49810,49903]"/>
  <match src="external: external [11756,11764]" dest="external: external [21754,21762]"/>
  <match src="identifier: newImplementation [98635,98652]" dest="identifier: newImplementation [77285,77302]"/>
  <match src="comment: /**      * Returns whether the target address is a contract      * @dev This function will return false if invoked during the constructor of a contract,      * as the code is not actually created until after the constructor finishes.      * @param account address of the account to check      * @return whether the target address is a contract      */ [93649,94000]" dest="comment: /**      * Returns whether the target address is a contract      * @dev This function will return false if invoked during the constructor of a contract,      * as the code is not actually created until after the constructor finishes.      * @param account address of the account to check      * @return whether the target address is a contract      */ [74507,74858]"/>
  <match src="identifier: payloadA [42602,42610]" dest="identifier: payloadA [47793,47801]"/>
  <match src="parameter [109739,109753]" dest="parameter [38652,38666]"/>
  <match src="for: for [82816,82819]" dest="for: for [83107,83110]"/>
  <match src="array_access [104358,104378]" dest="array_access [33271,33291]"/>
  <match src="type_name [90354,90361]" dest="type_name [60952,60959]"/>
  <match src="identifier: State [97632,97637]" dest="identifier: State [76282,76287]"/>
  <match src="type_name [100309,100314]" dest="type_name [29222,29227]"/>
  <match src="function: function [101698,101706]" dest="function: function [30611,30619]"/>
  <match src="is: is [106561,106563]" dest="is: is [35474,35476]"/>
  <match src="parameter [31816,31830]" dest="parameter [55110,55124]"/>
  <match src=",: , [42116,42117]" dest=",: , [47307,47308]"/>
  <match src="member_expression [110204,110236]" dest="member_expression [39117,39149]"/>
  <match src="): ) [41058,41059]" dest="): ) [46249,46250]"/>
  <match src="identifier: SUPPLY_CHANGE_LIMIT [56456,56475]" dest="identifier: SUPPLY_CHANGE_LIMIT [15569,15588]"/>
  <match src="identifier: length [44511,44517]" dest="identifier: length [49702,49708]"/>
  <match src=",: , [107299,107300]" dest=",: , [36212,36213]"/>
  <match src="identifier: incrementEpoch [110863,110877]" dest="identifier: incrementEpoch [39776,39790]"/>
  <match src="view: view [72003,72007]" dest="view: view [25816,25820]"/>
  <match src="call_expression [91616,91673]" dest="call_expression [73634,73677]"/>
  <match src="): ) [3422,3423]" dest="): ) [3986,3987]"/>
  <match src="visibility [104011,104017]" dest="visibility [32924,32930]"/>
  <match src="&quot;: &quot; [114897,114898]" dest="&quot;: &quot; [69841,69842]"/>
  <match src="primitive_type [108497,108503]" dest="primitive_type [37410,37416]"/>
  <match src="identifier: RPAREN [40440,40446]" dest="identifier: RPAREN [45631,45637]"/>
  <match src="comment: // allocate the string [45180,45202]" dest="comment: // allocate the string [50371,50393]"/>
  <match src="address: address [21889,21896]" dest="address: address [64883,64890]"/>
  <match src="call_expression [90657,90737]" dest="call_expression [63206,63264]"/>
  <match src="uint256: uint256 [52382,52389]" dest="uint256: uint256 [11495,11502]"/>
  <match src="primitive_type [102122,102129]" dest="primitive_type [31035,31042]"/>
  <match src="function_definition [62975,63034]" dest="function_definition [19809,19868]"/>
  <match src="number_literal: 10 [47801,47803]" dest="number_literal: 10 [52992,52994]"/>
  <match src="identifier: value [62201,62206]" dest="identifier: value [19035,19040]"/>
  <match src="primitive_type [46010,46015]" dest="primitive_type [51201,51206]"/>
  <match src="call_expression [111455,111583]" dest="call_expression [40368,40496]"/>
  <match src="parameter [8328,8339]" dest="parameter [8892,8903]"/>
  <match src=",: , [110001,110002]" dest=",: , [38914,38915]"/>
  <match src=".: . [102493,102494]" dest=".: . [31406,31407]"/>
  <match src="identifier: msg [89004,89007]" dest="identifier: msg [72379,72382]"/>
  <match src="public: public [104173,104179]" dest="public: public [33086,33092]"/>
  <match src="identifier: _state [101403,101409]" dest="identifier: _state [30316,30322]"/>
  <match src="return: return [7405,7411]" dest="return: return [7969,7975]"/>
  <match src="type_name [9037,9041]" dest="type_name [9601,9605]"/>
  <match src="identifier: pool [96334,96338]" dest="identifier: pool [27552,27556]"/>
  <match src="identifier: candidate [113194,113203]" dest="identifier: candidate [42107,42116]"/>
  <match src="): ) [405,406]" dest="): ) [969,970]"/>
  <match src="function: function [104115,104123]" dest="function: function [33028,33036]"/>
  <match src="identifier: value [6833,6838]" dest="identifier: value [7397,7402]"/>
  <match src="user_defined_type [96549,96561]" dest="user_defined_type [27767,27779]"/>
  <match src="identifier: coupons [96506,96513]" dest="identifier: coupons [27724,27731]"/>
  <match src="[: [ [47547,47548]" dest="[: [ [52738,52739]"/>
  <match src="type_name [45828,45833]" dest="type_name [51019,51024]"/>
  <match src="parameter [54336,54343]" dest="parameter [13449,13456]"/>
  <match src="constant: constant [53671,53679]" dest="constant: constant [12784,12792]"/>
  <match src="event_paramater [88243,88256]" dest="event_paramater [71262,71275]"/>
  <match src="variable_declaration_statement [47311,47333]" dest="variable_declaration_statement [52502,52524]"/>
  <match src="primitive_type [114750,114757]" dest="primitive_type [69694,69701]"/>
  <match src="call_argument [108363,108369]" dest="call_argument [37276,37282]"/>
  <match src="parameter [104759,104776]" dest="parameter [33672,33689]"/>
  <match src="expression_statement [90657,90738]" dest="expression_statement [63206,63265]"/>
  <match src="call_argument [56286,56328]" dest="call_argument [15399,15441]"/>
  <match src="%: % [4791,4792]" dest="%: % [5355,5356]"/>
  <match src="string_literal [24497,24547]" dest="string_literal [79941,79970]"/>
  <match src="string: string [109755,109761]" dest="string: string [38668,38674]"/>
  <match src="uint256: uint256 [6305,6312]" dest="uint256: uint256 [6869,6876]"/>
  <match src="ternary_expression [10210,10235]" dest="ternary_expression [10774,10799]"/>
  <match src="string: string [113337,113343]" dest="string: string [42250,42256]"/>
  <match src="parameter [59849,59864]" dest="parameter [24823,24838]"/>
  <match src="=: = [46958,46959]" dest="=: = [52149,52150]"/>
  <match src="visibility [101250,101256]" dest="visibility [30163,30169]"/>
  <match src="identifier: sub [864,867]" dest="identifier: sub [1428,1431]"/>
  <match src="primitive_type [52679,52686]" dest="primitive_type [11792,11799]"/>
  <match src="string [90304,90333]" dest="string [81783,81809]"/>
  <match src="return: return [56428,56434]" dest="return: return [15541,15547]"/>
  <match src=".: . [104378,104379]" dest=".: . [33291,33292]"/>
  <match src="call_argument [3403,3408]" dest="call_argument [3967,3972]"/>
  <match src="member_expression [111488,111511]" dest="member_expression [40401,40424]"/>
  <match src="identifier: sender [63418,63424]" dest="identifier: sender [20252,20258]"/>
  <match src="call_argument [19831,19851]" dest="call_argument [65263,65283]"/>
  <match src="comment: /* Pool */ [53640,53650]" dest="comment: /* Pool */ [12753,12763]"/>
  <match src="variable_declaration [33478,33520]" dest="variable_declaration [82191,82216]"/>
  <match src="}: } [47970,47971]" dest="}: } [53161,53162]"/>
  <match src="primitive_type [41196,41203]" dest="primitive_type [46387,46394]"/>
  <match src=".: . [90490,90491]" dest=".: . [73198,73199]"/>
  <match src="identifier: shift [46461,46466]" dest="identifier: shift [51652,51657]"/>
  <match src="call_expression [92193,92200]" dest="call_expression [57753,57761]"/>
  <match src="identifier: self [7679,7683]" dest="identifier: self [8243,8247]"/>
  <match src=",: , [91071,91072]" dest=",: , [58022,58023]"/>
  <match src="identifier: LPAREN [40287,40293]" dest="identifier: LPAREN [45478,45484]"/>
  <match src="identifier: slot [99094,99098]" dest="identifier: slot [77744,77748]"/>
  <match src="identifier: msg [88761,88764]" dest="identifier: msg [73712,73715]"/>
  <match src="member_expression [73538,73550]" dest="member_expression [81830,81842]"/>
  <match src="identifier: block [103301,103306]" dest="identifier: block [32214,32219]"/>
  <match src="(: ( [90681,90682]" dest="(: ( [63231,63232]"/>
  <match src="(: ( [54791,54792]" dest="(: ( [13904,13905]"/>
  <match src="identifier: epoch [81814,81819]" dest="identifier: epoch [61725,61730]"/>
  <match src="identifier: that [42515,42519]" dest="identifier: that [47706,47710]"/>
  <match src="(: ( [101722,101723]" dest="(: ( [30635,30636]"/>
  <match src="type_name [56796,56803]" dest="type_name [15909,15916]"/>
  <match src="visibility [104173,104179]" dest="visibility [33086,33092]"/>
  <match src="): ) [89713,89714]" dest="): ) [72698,72699]"/>
  <match src="visibility [55166,55174]" dest="visibility [14279,14287]"/>
  <match src="parameter [75270,75289]" dest="parameter [68567,68586]"/>
  <match src="call_argument [6226,6248]" dest="call_argument [6790,6812]"/>
  <match src="identifier: spender [62630,62637]" dest="identifier: spender [19464,19471]"/>
  <match src="parameter [19769,19786]" dest="parameter [65186,65203]"/>
  <match src="identifier: add [108292,108295]" dest="identifier: add [37205,37208]"/>
  <match src="user_defined_type [9114,9118]" dest="user_defined_type [9678,9682]"/>
  <match src="type_name [78191,78198]" dest="type_name [71348,71355]"/>
  <match src="function: function [54397,54405]" dest="function: function [13510,13518]"/>
  <match src="string_literal [91103,91130]" dest="string_literal [58054,58079]"/>
  <match src="number_literal: 48 [38487,38489]" dest="number_literal: 48 [43678,43680]"/>
  <match src="identifier: stringifyTruncated [40235,40253]" dest="identifier: stringifyTruncated [45426,45444]"/>
  <match src="string: string [1273,1279]" dest="string: string [1837,1843]"/>
  <match src="call_expression [109151,109202]" dest="call_expression [38064,38115]"/>
  <match src=".: . [108248,108249]" dest=".: . [37161,37162]"/>
  <match src="call_expression [90594,90647]" dest="call_expression [72111,72162]"/>
  <match src="identifier: a [1686,1687]" dest="identifier: a [2250,2251]"/>
  <match src="{: { [5969,5970]" dest="{: { [6533,6534]"/>
  <match src="function_body [407,516]" dest="function_body [971,1080]"/>
  <match src="): ) [54627,54628]" dest="): ) [13740,13741]"/>
  <match src="(: ( [58715,58716]" dest="(: ( [54994,54995]"/>
  <match src="variable_declaration_statement [7646,7693]" dest="variable_declaration_statement [8210,8257]"/>
  <match src="return_type_definition [63016,63033]" dest="return_type_definition [19850,19867]"/>
  <match src="+: + [45622,45623]" dest="+: + [50813,50814]"/>
  <match src="block_statement [40046,40511]" dest="block_statement [45237,45702]"/>
  <match src="type_name [4673,4679]" dest="type_name [5237,5243]"/>
  <match src="type_name [6590,6594]" dest="type_name [7154,7158]"/>
  <match src="primitive_type [91585,91592]" dest="primitive_type [63071,63078]"/>
  <match src="identifier: that [73546,73550]" dest="identifier: that [81838,81842]"/>
  <match src="member_expression [107857,107882]" dest="member_expression [36770,36795]"/>
  <match src="(: ( [113253,113254]" dest="(: ( [42166,42167]"/>
  <match src="function_definition [55025,55129]" dest="function_definition [14138,14242]"/>
  <match src="parameter [5930,5941]" dest="parameter [6494,6505]"/>
  <match src=".: . [85215,85216]" dest=".: . [60599,60600]"/>
  <match src="function_body [9941,10003]" dest="function_body [10505,10567]"/>
  <match src=",: , [14035,14036]" dest=",: , [24033,24034]"/>
  <match src="identifier: transferFrom [106966,106978]" dest="identifier: transferFrom [35879,35891]"/>
  <match src="uint256: uint256 [1251,1258]" dest="uint256: uint256 [1815,1822]"/>
  <match src="identifier: sender [88765,88771]" dest="identifier: sender [73716,73722]"/>
  <match src="struct_member [95840,95859]" dest="struct_member [27058,27077]"/>
  <match src="identifier: recipient [12034,12043]" dest="identifier: recipient [22032,22041]"/>
  <match src="pure: pure [62313,62317]" dest="pure: pure [19147,19151]"/>
  <match src="expression_statement [112257,112302]" dest="expression_statement [41170,41215]"/>
  <match src="=: = [113023,113024]" dest="=: = [41936,41937]"/>
  <match src="variable_declaration [31146,31173]" dest="variable_declaration [58182,58199]"/>
  <match src="}: } [46695,46696]" dest="}: } [51886,51887]"/>
  <match src="memory: memory [8680,8686]" dest="memory: memory [9244,9250]"/>
  <match src="parameter [30302,30316]" dest="parameter [58697,58711]"/>
  <match src="identifier: ORACLE_POOL_RATIO [56721,56738]" dest="identifier: ORACLE_POOL_RATIO [15834,15851]"/>
  <match src=":: : [56132,56133]" dest=":: : [15245,15246]"/>
  <match src="visibility [54794,54802]" dest="visibility [13907,13915]"/>
  <match src="internal: internal [7887,7895]" dest="internal: internal [8451,8459]"/>
  <match src="identifier: candidate [112653,112662]" dest="identifier: candidate [41566,41575]"/>
  <match src="type_name [62898,62902]" dest="type_name [19732,19736]"/>
  <match src="): ) [73655,73656]" dest="): ) [81955,81956]"/>
  <match src="): ) [46630,46631]" dest="): ) [51821,51822]"/>
  <match src="type_alias [82807,82815]" dest="type_alias [83098,83106]"/>
  <match src="type_name [55853,55860]" dest="type_name [14966,14973]"/>
  <match src="): ) [54468,54469]" dest="): ) [13581,13582]"/>
  <match src="): ) [41397,41398]" dest="): ) [46588,46589]"/>
  <match src="identifier: sender [19831,19837]" dest="identifier: sender [65263,65269]"/>
  <match src=".: . [109927,109928]" dest=".: . [38840,38841]"/>
  <match src="call_argument [91888,91896]" dest="call_argument [80485,80491]"/>
  <match src="if_statement [111170,111314]" dest="if_statement [40083,40227]"/>
  <match src="return_type_definition [6178,6199]" dest="return_type_definition [6742,6763]"/>
  <match src="uint: uint [63275,63279]" dest="uint: uint [20109,20113]"/>
  <match src="identifier: value [88452,88457]" dest="identifier: value [71341,71346]"/>
  <match src="=&gt;: =&gt; [95483,95485]" dest="=&gt;: =&gt; [26701,26703]"/>
  <match src="identifier: POOL_EXIT_LOCKUP_EPOCHS [55879,55902]" dest="identifier: POOL_EXIT_LOCKUP_EPOCHS [14992,15015]"/>
  <match src=",: , [7137,7138]" dest=",: , [7701,7702]"/>
  <match src="): ) [85135,85136]" dest="): ) [60299,60300]"/>
  <match src="type_name [59803,59810]" dest="type_name [24777,24784]"/>
  <match src="primitive_type [58206,58213]" dest="primitive_type [71769,71776]"/>
  <match src="struct_declaration [95645,95752]" dest="struct_declaration [26863,26970]"/>
  <match src=",: , [3408,3409]" dest=",: , [3972,3973]"/>
  <match src="update_expression [46292,46295]" dest="update_expression [51483,51486]"/>
  <match src=".: . [91863,91864]" dest=".: . [80459,80460]"/>
  <match src="returns: returns [101368,101375]" dest="returns: returns [30281,30288]"/>
  <match src="private: private [36272,36279]" dest="private: private [60744,60751]"/>
  <match src="}: } [112874,112875]" dest="}: } [41787,41788]"/>
  <match src="member_expression [39077,39093]" dest="member_expression [44268,44284]"/>
  <match src="identifier: ASCII_LOWER_EX [47093,47107]" dest="identifier: ASCII_LOWER_EX [52284,52298]"/>
  <match src="{: { [6062,6063]" dest="{: { [6626,6627]"/>
  <match src="returns: returns [7369,7376]" dest="returns: returns [7933,7940]"/>
  <match src="): ) [116835,116836]" dest="): ) [83441,83442]"/>
  <match src="call_argument [73610,73614]" dest="call_argument [81914,81918]"/>
  <match src="member_expression [103919,103958]" dest="member_expression [32832,32871]"/>
  <match src="identifier: sender [89827,89833]" dest="identifier: sender [73370,73376]"/>
  <match src="member_expression [89004,89014]" dest="member_expression [72379,72389]"/>
  <match src="mapping: mapping [96682,96689]" dest="mapping: mapping [27900,27907]"/>
  <match src="(: ( [46831,46832]" dest="(: ( [52022,52023]"/>
  <match src="identifier: greaterThanOrEqualTo [9238,9258]" dest="identifier: greaterThanOrEqualTo [9802,9822]"/>
  <match src="): ) [12083,12084]" dest="): ) [22081,22082]"/>
  <match src="primitive_type [88444,88451]" dest="primitive_type [71333,71340]"/>
  <match src="type_name [42594,42601]" dest="type_name [47785,47792]"/>
  <match src="parameter [100405,100412]" dest="parameter [29318,29325]"/>
  <match src="++: ++ [7730,7732]" dest="++: ++ [8294,8296]"/>
  <match src="(: ( [98134,98135]" dest="(: ( [76784,76785]"/>
  <match src="visibility [54676,54684]" dest="visibility [13789,13797]"/>
  <match src="(: ( [108921,108922]" dest="(: ( [37834,37835]"/>
  <match src="(: ( [9113,9114]" dest="(: ( [9677,9678]"/>
  <match src="primitive_type [1678,1685]" dest="primitive_type [2242,2249]"/>
  <match src="return_type_definition [47724,47738]" dest="return_type_definition [52915,52929]"/>
  <match src="identifier: from [30707,30711]" dest="identifier: from [18823,18827]"/>
  <match src="expression_statement [46587,46632]" dest="expression_statement [51778,51823]"/>
  <match src="assignment_expression [46587,46631]" dest="assignment_expression [51778,51822]"/>
  <match src="public: public [28110,28116]" dest="public: public [61421,61427]"/>
  <match src="contract: contract [95301,95309]" dest="contract: contract [26519,26527]"/>
  <match src="primitive_type [13499,13506]" dest="primitive_type [23497,23504]"/>
  <match src="function: function [106957,106965]" dest="function: function [35870,35878]"/>
  <match src="type_name [6780,6784]" dest="type_name [7344,7348]"/>
  <match src="parameter [64265,64277]" dest="parameter [21099,21111]"/>
  <match src="call_argument [90060,90061]" dest="call_argument [73934,73935]"/>
  <match src=".: . [56404,56405]" dest=".: . [15517,15518]"/>
  <match src="): ) [62280,62281]" dest="): ) [19114,19115]"/>
  <match src="function: function [102641,102649]" dest="function: function [31554,31562]"/>
  <match src="}: } [102262,102263]" dest="}: } [31175,31176]"/>
  <match src="visibility [89451,89459]" dest="visibility [72522,72530]"/>
  <match src="member_expression [102584,102605]" dest="member_expression [31497,31518]"/>
  <match src="function_body [54345,54391]" dest="function_body [13458,13504]"/>
  <match src="call_expression [60982,61004]" dest="call_expression [54103,54133]"/>
  <match src="identifier: payloadA [41839,41847]" dest="identifier: payloadA [47030,47038]"/>
  <match src="return_statement [55220,55268]" dest="return_statement [14333,14381]"/>
  <match src="function_definition [73945,74187]" dest="function_definition [68525,68866]"/>
  <match src="uint256: uint256 [104147,104154]" dest="uint256: uint256 [33060,33067]"/>
  <match src="mapping: mapping [96730,96737]" dest="mapping: mapping [27948,27955]"/>
  <match src="visibility [107323,107331]" dest="visibility [36236,36244]"/>
  <match src="member_expression [6638,6648]" dest="member_expression [7202,7212]"/>
  <match src="variable_declaration_statement [111125,111161]" dest="variable_declaration_statement [40038,40074]"/>
  <match src="variable_declaration_statement [74868,74910]" dest="variable_declaration_statement [67002,67046]"/>
  <match src="identifier: _state [102279,102285]" dest="identifier: _state [31192,31198]"/>
  <match src="call_expression [23164,23190]" dest="call_expression [54926,54960]"/>
  <match src="function: function [113094,113102]" dest="function: function [42007,42015]"/>
  <match src="identifier: COMMA [41584,41589]" dest="identifier: COMMA [46775,46780]"/>
  <match src="}: } [113802,113803]" dest="}: } [42715,42716]"/>
  <match src="): ) [109589,109590]" dest="): ) [38502,38503]"/>
  <match src="type_cast_expression [47922,47962]" dest="type_cast_expression [53113,53153]"/>
  <match src="(: ( [62999,63000]" dest="(: ( [19833,19834]"/>
  <match src="uint256: uint256 [46269,46276]" dest="uint256: uint256 [51460,51467]"/>
  <match src="type_name [46784,46789]" dest="type_name [51975,51980]"/>
  <match src="variable_declaration [31933,31975]" dest="variable_declaration [17408,17440]"/>
  <match src="identifier: Decimal [56547,56554]" dest="identifier: Decimal [15660,15667]"/>
  <match src="primitive_type [24297,24304]" dest="primitive_type [59802,59809]"/>
  <match src=".: . [115097,115098]" dest=".: . [70041,70042]"/>
  <match src="{: { [41245,41246]" dest="{: { [46436,46437]"/>
  <match src="{: { [101178,101179]" dest="{: { [30091,30092]"/>
  <match src="visibility [54039,54046]" dest="visibility [13152,13159]"/>
  <match src="identifier: _state [109600,109606]" dest="identifier: _state [38513,38519]"/>
  <match src="parameter [34752,34766]" dest="parameter [55483,55497]"/>
  <match src="member_expression [110987,111012]" dest="member_expression [39900,39925]"/>
  <match src="identifier: value [7959,7964]" dest="identifier: value [8523,8528]"/>
  <match src="type_cast_expression [47927,47961]" dest="type_cast_expression [53118,53152]"/>
  <match src="view: view [12420,12424]" dest="view: view [22418,22422]"/>
  <match src="call_expression [6638,6665]" dest="call_expression [7202,7229]"/>
  <match src="type_name [104423,104430]" dest="type_name [33336,33343]"/>
  <match src="identifier: b [6737,6738]" dest="identifier: b [7301,7302]"/>
  <match src="return: return [103369,103375]" dest="return: return [32282,32288]"/>
  <match src="uint: uint [63482,63486]" dest="uint: uint [20316,20320]"/>
  <match src="pure: pure [8508,8512]" dest="pure: pure [9072,9076]"/>
  <match src="): ) [56254,56255]" dest="): ) [15367,15368]"/>
  <match src="function: function [100925,100933]" dest="function: function [29838,29846]"/>
  <match src="address: address [59849,59856]" dest="address: address [24823,24830]"/>
  <match src="): ) [46295,46296]" dest="): ) [51486,51487]"/>
  <match src="function_body [102184,102325]" dest="function_body [31097,31238]"/>
  <match src="=: = [38815,38816]" dest="=: = [44006,44007]"/>
  <match src="returns: returns [105056,105063]" dest="returns: returns [33969,33976]"/>
  <match src="&quot;: &quot; [30863,30864]" dest="&quot;: &quot; [67317,67318]"/>
  <match src=".: . [109398,109399]" dest=".: . [38311,38312]"/>
  <match src="member_expression [104220,104257]" dest="member_expression [33133,33170]"/>
  <match src="uint: uint [63153,63157]" dest="uint: uint [19987,19991]"/>
  <match src="struct_member [96549,96568]" dest="struct_member [27767,27786]"/>
  <match src="(: ( [85119,85120]" dest="(: ( [60298,60299]"/>
  <match src="): ) [6553,6554]" dest="): ) [7117,7118]"/>
  <match src="call_argument [88640,88650]" dest="call_argument [73563,73573]"/>
  <match src="return: return [9186,9192]" dest="return: return [9750,9756]"/>
  <match src=".: . [109218,109219]" dest=".: . [38131,38132]"/>
  <match src=",: , [113319,113320]" dest=",: , [42232,42233]"/>
  <match src="member_expression [105638,105655]" dest="member_expression [34551,34568]"/>
  <match src="identifier: D256 [55349,55353]" dest="identifier: D256 [14462,14466]"/>
  <match src="public: public [103872,103878]" dest="public: public [32785,32791]"/>
  <match src="identifier: price [74888,74893]" dest="identifier: price [67022,67027]"/>
  <match src="identifier: IERC20 [15801,15807]" dest="identifier: Curve [59553,59558]"/>
  <match src="): ) [5981,5982]" dest="): ) [6545,6546]"/>
  <match src="private: private [44892,44899]" dest="private: private [50083,50090]"/>
  <match src="memory: memory [9405,9411]" dest="memory: memory [9969,9975]"/>
  <match src="function_definition [41082,41737]" dest="function_definition [46273,46928]"/>
  <match src="identifier: reason [41474,41480]" dest="identifier: reason [46665,46671]"/>
  <match src=".: . [92200,92201]" dest=".: . [57761,57762]"/>
  <match src="call_argument [43634,43642]" dest="call_argument [48825,48833]"/>
  <match src=".: . [90999,91000]" dest=".: . [72961,72962]"/>
  <match src="(: ( [40090,40091]" dest="(: ( [45281,45282]"/>
  <match src=",: , [98593,98594]" dest=",: , [77243,77244]"/>
  <match src="type_name [64186,64190]" dest="type_name [21020,21024]"/>
  <match src="parameter [113122,113139]" dest="parameter [42035,42052]"/>
  <match src="parameter [55969,55976]" dest="parameter [15082,15089]"/>
  <match src="function_definition [64419,64444]" dest="function_definition [21253,21278]"/>
  <match src="primitive_type [3310,3317]" dest="primitive_type [3874,3881]"/>
  <match src="number_literal: 12 [53706,53708]" dest="number_literal: 12 [12819,12821]"/>
  <match src="identifier: to [63373,63375]" dest="identifier: to [20207,20209]"/>
  <match src="call_argument [109583,109589]" dest="call_argument [38496,38502]"/>
  <match src="identifier: account [109051,109058]" dest="identifier: account [37964,37971]"/>
  <match src="[: [ [104371,104372]" dest="[: [ [33284,33285]"/>
  <match src="memory: memory [34876,34882]" dest="memory: memory [67846,67852]"/>
  <match src="call_expression [92193,92261]" dest="call_expression [57753,57822]"/>
  <match src="primitive_type [107985,107991]" dest="primitive_type [36898,36904]"/>
  <match src="type_name [62856,62863]" dest="type_name [19690,19697]"/>
  <match src="identifier: isInitialized [115259,115272]" dest="identifier: isInitialized [70203,70216]"/>
  <match src="primitive_type [3433,3440]" dest="primitive_type [3997,4004]"/>
  <match src=".: . [113896,113897]" dest=".: . [42809,42810]"/>
  <match src="expression_statement [109907,110011]" dest="expression_statement [38820,38924]"/>
  <match src="(: ( [100763,100764]" dest="(: ( [29676,29677]"/>
  <match src="revert_statement [40695,41060]" dest="revert_statement [45886,46251]"/>
  <match src="{: { [6797,6798]" dest="{: { [7361,7362]"/>
  <match src="return: return [9472,9478]" dest="return: return [10036,10042]"/>
  <match src="identifier: amount [110661,110667]" dest="identifier: amount [39574,39580]"/>
  <match src="[: [ [108553,108554]" dest="[: [ [37466,37467]"/>
  <match src="state_variable_declaration [38561,38599]" dest="state_variable_declaration [43752,43790]"/>
  <match src="call_expression [7412,7446]" dest="call_expression [7976,8010]"/>
  <match src="type_name [78091,78098]" dest="type_name [66671,66678]"/>
  <match src="(: ( [107576,107577]" dest="(: ( [36489,36490]"/>
  <match src="identifier: sender [91000,91006]" dest="identifier: sender [72962,72968]"/>
  <match src=".: . [89394,89395]" dest=".: . [81252,81253]"/>
  <match src="identifier: sender [90040,90046]" dest="identifier: sender [73914,73920]"/>
  <match src="call_argument [47927,47961]" dest="call_argument [53118,53152]"/>
  <match src="): ) [9174,9175]" dest="): ) [9738,9739]"/>
  <match src="block_statement [74095,74181]" dest="block_statement [68792,68837]"/>
  <match src="parameter [104799,104806]" dest="parameter [33712,33719]"/>
  <match src="array_access [46116,46125]" dest="array_access [51307,51316]"/>
  <match src="type_name [53493,53500]" dest="type_name [12606,12613]"/>
  <match src="member_expression [110154,110169]" dest="member_expression [39067,39082]"/>
  <match src=",: , [89833,89834]" dest=",: , [73376,73377]"/>
  <match src="primitive_type [96738,96745]" dest="primitive_type [27956,27963]"/>
  <match src="==: == [2056,2058]" dest="==: == [2620,2622]"/>
  <match src="identifier: reason [7076,7082]" dest="identifier: reason [7640,7646]"/>
  <match src="(: ( [95519,95520]" dest="(: ( [26737,26738]"/>
  <match src="identifier: spender [22027,22034]" dest="identifier: spender [64943,64950]"/>
  <match src="): ) [89702,89703]" dest="): ) [72697,72698]"/>
  <match src="call_argument [86661,86674]" dest="call_argument [54511,54524]"/>
  <match src="type_name [100962,100969]" dest="type_name [29875,29882]"/>
  <match src="identifier: coupons [104241,104248]" dest="identifier: coupons [33154,33161]"/>
  <match src="identifier: _state [102746,102752]" dest="identifier: _state [31659,31665]"/>
  <match src="identifier: accounts [102753,102761]" dest="identifier: accounts [31666,31674]"/>
  <match src="member_expression [103397,103412]" dest="member_expression [32310,32325]"/>
  <match src="identifier: char [47665,47669]" dest="identifier: char [52856,52860]"/>
  <match src="(: ( [41286,41287]" dest="(: ( [46477,46478]"/>
  <match src="member_expression [56585,56597]" dest="member_expression [15698,15710]"/>
  <match src="): ) [9727,9728]" dest="): ) [10291,10292]"/>
  <match src="returns: returns [101579,101586]" dest="returns: returns [30492,30499]"/>
  <match src="): ) [90014,90015]" dest="): ) [55278,55279]"/>
  <match src="pure: pure [55327,55331]" dest="pure: pure [14440,14444]"/>
  <match src="identifier: compareTo [9479,9488]" dest="identifier: compareTo [10043,10052]"/>
  <match src="identifier: add [109648,109651]" dest="identifier: add [38561,38564]"/>
  <match src="number_literal: 0x3e [38767,38771]" dest="number_literal: 0x3e [43958,43962]"/>
  <match src="parameter [64013,64017]" dest="parameter [20847,20851]"/>
  <match src="call_expression [43341,43773]" dest="call_expression [48532,48964]"/>
  <match src="type_name [55502,55509]" dest="type_name [14615,14622]"/>
  <match src="memory: memory [56560,56566]" dest="memory: memory [15673,15679]"/>
  <match src="): ) [105592,105593]" dest="): ) [34505,34506]"/>
  <match src=".: . [36009,36010]" dest=".: . [18791,18792]"/>
  <match src="function_body [102985,103095]" dest="function_body [31898,32008]"/>
  <match src="): ) [80377,80378]" dest="): ) [71998,71999]"/>
  <match src="=: = [72806,72807]" dest="=: = [78621,78622]"/>
  <match src="identifier: length [45372,45378]" dest="identifier: length [50563,50569]"/>
  <match src="identifier: file [41793,41797]" dest="identifier: file [46984,46988]"/>
  <match src="member_expression [6828,6842]" dest="member_expression [7392,7406]"/>
  <match src="identifier: sub [8014,8017]" dest="identifier: sub [8578,8581]"/>
  <match src="primitive_type [102667,102674]" dest="primitive_type [31580,31587]"/>
  <match src="function_body [2646,2709]" dest="function_body [3210,3273]"/>
  <match src="pure: pure [6027,6031]" dest="pure: pure [6591,6595]"/>
  <match src="comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [1742,1821]" dest="comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [2306,2385]"/>
  <match src="=: = [53457,53458]" dest="=: = [12570,12571]"/>
  <match src="visibility [54313,54321]" dest="visibility [13426,13434]"/>
  <match src="identifier: getSupplyChangeDivisor [56499,56521]" dest="identifier: getSupplyChangeDivisor [15612,15634]"/>
  <match src="return_type_definition [100855,100872]" dest="return_type_definition [29768,29785]"/>
  <match src="identifier: totalBonded [81179,81190]" dest="identifier: totalBonded [57790,57801]"/>
  <match src="uint256: uint256 [46812,46819]" dest="uint256: uint256 [52003,52010]"/>
  <match src="{: { [103154,103155]" dest="{: { [32067,32068]"/>
  <match src="(: ( [9069,9070]" dest="(: ( [9633,9634]"/>
  <match src="call_argument [42019,42451]" dest="call_argument [47210,47642]"/>
  <match src="}: } [8408,8409]" dest="}: } [8972,8973]"/>
  <match src="call_struct_argument [54549,54576]" dest="call_struct_argument [13662,13689]"/>
  <match src="type_name [88404,88411]" dest="type_name [71293,71300]"/>
  <match src="identifier: D256 [8560,8564]" dest="identifier: D256 [9124,9128]"/>
  <match src="state_mutability [7900,7904]" dest="state_mutability [8464,8468]"/>
  <match src="): ) [45632,45633]" dest="): ) [50823,50824]"/>
  <match src="member_expression [102486,102507]" dest="member_expression [31399,31420]"/>
  <match src="}: } [7444,7445]" dest="}: } [8008,8009]"/>
  <match src="identifier: candidate [105243,105252]" dest="identifier: candidate [34156,34165]"/>
  <match src="state_mutability [100948,100952]" dest="state_mutability [29861,29865]"/>
  <match src="primitive_type [106865,106872]" dest="primitive_type [35778,35785]"/>
  <match src="(: ( [9036,9037]" dest="(: ( [9600,9601]"/>
  <match src="uint256: uint256 [95486,95493]" dest="uint256: uint256 [26704,26711]"/>
  <match src="member_expression [109495,109523]" dest="member_expression [38408,38436]"/>
  <match src="identifier: balance [108061,108068]" dest="identifier: balance [36974,36981]"/>
  <match src="call_argument [23775,23782]" dest="call_argument [82243,82250]"/>
  <match src=",: , [2060,2061]" dest=",: , [2624,2625]"/>
  <match src="}: } [45711,45712]" dest="}: } [50902,50903]"/>
  <match src="(: ( [8768,8769]" dest="(: ( [9332,9333]"/>
  <match src="): ) [90152,90153]" dest="): ) [73113,73114]"/>
  <match src="): ) [55316,55317]" dest="): ) [14429,14430]"/>
  <match src=",: , [90272,90273]" dest=",: , [81751,81752]"/>
  <match src="for: for [99892,99895]" dest="for: for [28805,28808]"/>
  <match src="identifier: Decimal [71946,71953]" dest="identifier: Decimal [25759,25766]"/>
  <match src="identifier: expiringCouponsAtIndex [104124,104146]" dest="identifier: expiringCouponsAtIndex [33037,33059]"/>
  <match src="]: ] [46604,46605]" dest="]: ] [51795,51796]"/>
  <match src="]: ] [108596,108597]" dest="]: ] [37509,37510]"/>
  <match src="user_defined_type [54448,54461]" dest="user_defined_type [13561,13574]"/>
  <match src="(: ( [54931,54932]" dest="(: ( [14044,14045]"/>
  <match src="(: ( [62362,62363]" dest="(: ( [19196,19197]"/>
  <match src="call_argument [6395,6428]" dest="call_argument [6959,6992]"/>
  <match src=".: . [32680,32681]" dest=".: . [62226,62227]"/>
  <match src=",: , [4028,4029]" dest=",: , [4592,4593]"/>
  <match src=",: , [9493,9494]" dest=",: , [10057,10058]"/>
  <match src="primitive_type [72776,72783]" dest="primitive_type [78591,78598]"/>
  <match src="call_argument [66707,66722]" dest="call_argument [73846,73853]"/>
  <match src="identifier: Constants [111379,111388]" dest="identifier: Constants [40292,40301]"/>
  <match src="emit_statement [90026,90071]" dest="emit_statement [73898,73954]"/>
  <match src=".: . [102285,102286]" dest=".: . [31198,31199]"/>
  <match src="identifier: amount [30485,30491]" dest="identifier: amount [65733,65739]"/>
  <match src="event_paramater [88540,88555]" dest="event_paramater [83248,83262]"/>
  <match src="identifier: value [7041,7046]" dest="identifier: value [7605,7610]"/>
  <match src="identifier: this [88713,88717]" dest="identifier: this [83394,83398]"/>
  <match src="identifier: _state [109434,109440]" dest="identifier: _state [38347,38353]"/>
  <match src="identifier: _state [113416,113422]" dest="identifier: _state [42329,42335]"/>
  <match src="return: return [55988,55994]" dest="return: return [15101,15107]"/>
  <match src="type_name [62622,62629]" dest="type_name [19456,19463]"/>
  <match src="identifier: oracle [96310,96316]" dest="identifier: oracle [27528,27534]"/>
  <match src="memory: memory [44928,44934]" dest="memory: memory [50119,50125]"/>
  <match src="parameter [62856,62866]" dest="parameter [19690,19700]"/>
  <match src="type_name [41196,41203]" dest="type_name [46387,46394]"/>
  <match src="]: ] [103938,103939]" dest="]: ] [32851,32852]"/>
  <match src="identifier: self [8926,8930]" dest="identifier: self [9490,9494]"/>
  <match src="uint256: uint256 [12045,12052]" dest="uint256: uint256 [22043,22050]"/>
  <match src="identifier: stringify [40319,40328]" dest="identifier: stringify [45510,45519]"/>
  <match src="}: } [8188,8189]" dest="}: } [8752,8753]"/>
  <match src="call_argument [21286,21322]" dest="call_argument [71591,71612]"/>
  <match src="function_definition [62674,62744]" dest="function_definition [19508,19578]"/>
  <match src="expression_statement [108852,108930]" dest="expression_statement [37765,37843]"/>
  <match src="identifier: balanceOfPhantom [90470,90486]" dest="identifier: balanceOf [73185,73194]"/>
  <match src="call_argument [30724,30729]" dest="call_argument [18835,18859]"/>
  <match src="identifier: b [7261,7262]" dest="identifier: b [7825,7826]"/>
  <match src="}: } [114926,114927]" dest="}: } [69870,69871]"/>
  <match src="member_expression [7966,7976]" dest="member_expression [8530,8540]"/>
  <match src="call_argument [29975,29980]" dest="call_argument [18436,18473]"/>
  <match src="): ) [19850,19851]" dest="): ) [65282,65283]"/>
  <match src="): ) [113470,113471]" dest="): ) [42383,42384]"/>
  <match src="identifier: BASE [6418,6422]" dest="identifier: BASE [6982,6986]"/>
  <match src="struct_member [95669,95685]" dest="struct_member [26887,26903]"/>
  <match src="): ) [55944,55945]" dest="): ) [15057,15058]"/>
  <match src="address: address [112559,112566]" dest="address: address [41472,41479]"/>
  <match src="type_name [41807,41814]" dest="type_name [46998,47005]"/>
  <match src="identifier: reason [38951,38957]" dest="identifier: reason [44142,44148]"/>
  <match src="identifier: _state [107857,107863]" dest="identifier: _state [36770,36776]"/>
  <match src="call_expression [108337,108370]" dest="call_expression [37250,37283]"/>
  <match src="return: return [102995,103001]" dest="return: return [31908,31914]"/>
  <match src="event_paramater [88404,88427]" dest="event_paramater [71293,71316]"/>
  <match src="address: address [62622,62629]" dest="address: address [19456,19463]"/>
  <match src="=: = [75651,75652]" dest="=: = [68638,68639]"/>
  <match src="returns: returns [103884,103891]" dest="returns: returns [32797,32804]"/>
  <match src="bytes2: bytes2 [38611,38617]" dest="bytes2: bytes2 [43802,43808]"/>
  <match src="comment: /* solium-disable-next-line security/no-modify-for-iter-var */ [45458,45520]" dest="comment: /* solium-disable-next-line security/no-modify-for-iter-var */ [50649,50711]"/>
  <match src="call_argument [42423,42429]" dest="call_argument [47614,47620]"/>
  <match src="binary_expression [22027,22048]" dest="binary_expression [64943,64964]"/>
  <match src="internal: internal [31832,31840]" dest="internal: internal [55126,55134]"/>
  <match src="): ) [8907,8908]" dest="): ) [9471,9472]"/>
  <match src="type_cast_expression [19841,19851]" dest="type_cast_expression [65273,65283]"/>
  <match src="call_argument [91374,91405]" dest="call_argument [80835,80846]"/>
  <match src="visibility [110526,110534]" dest="visibility [39439,39447]"/>
  <match src="visibility [52540,52547]" dest="visibility [11653,11660]"/>
  <match src="emit: emit [89380,89384]" dest="emit: emit [81237,81241]"/>
  <match src="type_name [100367,100374]" dest="type_name [29280,29287]"/>
  <match src="return_statement [56428,56478]" dest="return_statement [15541,15591]"/>
  <match src="return_statement [100137,100167]" dest="return_statement [29050,29080]"/>
  <match src="parameter [7558,7569]" dest="parameter [8122,8133]"/>
  <match src="memory: memory [34240,34246]" dest="memory: memory [17887,17893]"/>
  <match src="): ) [101354,101355]" dest="): ) [30267,30268]"/>
  <match src="(: ( [75250,75251]" dest="(: ( [67832,67833]"/>
  <match src="contract: contract [97608,97616]" dest="contract: contract [76258,76266]"/>
  <match src="type_name [62691,62698]" dest="type_name [19525,19532]"/>
  <match src="identifier: value [55241,55246]" dest="identifier: value [14354,14359]"/>
  <match src="binary_expression [114803,114838]" dest="binary_expression [69747,69782]"/>
  <match src="type_name [804,811]" dest="type_name [1368,1375]"/>
  <match src="): ) [39225,39226]" dest="): ) [44416,44417]"/>
  <match src="uint256: uint256 [100654,100661]" dest="uint256: uint256 [29567,29574]"/>
  <match src="=: = [112518,112519]" dest="=: = [41431,41432]"/>
  <match src="variable_declaration [31991,32014]" dest="variable_declaration [67878,67903]"/>
  <match src="(: ( [42519,42520]" dest="(: ( [47710,47711]"/>
  <match src="return_statement [102995,103089]" dest="return_statement [31908,32002]"/>
  <match src="identifier: file [42791,42795]" dest="identifier: file [47982,47986]"/>
  <match src="return_statement [94599,94615]" dest="return_statement [75457,75473]"/>
  <match src="member_expression [108259,108291]" dest="member_expression [37172,37204]"/>
  <match src="call_argument [109890,109896]" dest="call_argument [38803,38809]"/>
  <match src="constant: constant [53821,53829]" dest="constant: constant [12934,12942]"/>
  <match src="): ) [64054,64055]" dest="): ) [20888,20889]"/>
  <match src="member_expression [108852,108883]" dest="member_expression [37765,37796]"/>
  <match src="returns: returns [101262,101269]" dest="returns: returns [30175,30182]"/>
  <match src="event: event [61500,61505]" dest="event: event [60195,60200]"/>
  <match src="parameter [110504,110524]" dest="parameter [39417,39437]"/>
  <match src="=: = [47233,47234]" dest="=: = [52424,52425]"/>
  <match src="&quot;: &quot; [58779,58780]" dest="&quot;: &quot; [55003,55004]"/>
  <match src="member_expression [92998,93010]" dest="member_expression [80867,80879]"/>
  <match src="uint256: uint256 [3433,3440]" dest="uint256: uint256 [3997,4004]"/>
  <match src=".: . [88915,88916]" dest=".: . [79010,79011]"/>
  <match src="call_expression [40112,40468]" dest="call_expression [45303,45659]"/>
  <match src="member_expression [85194,85205]" dest="member_expression [60578,60589]"/>
  <match src="identifier: implementation [105700,105714]" dest="identifier: implementation [34613,34627]"/>
  <match src="(: ( [75269,75270]" dest="(: ( [68566,68567]"/>
  <match src="source_file [0,116955]" dest="source_file [0,83896]"/>
  <match src="function_definition [3224,3562]" dest="function_definition [3788,4126]"/>
  <match src="return_statement [54836,54864]" dest="return_statement [13949,13977]"/>
  <match src="address: address [40611,40618]" dest="address: address [45802,45809]"/>
  <match src="uint256: uint256 [19788,19795]" dest="uint256: uint256 [65220,65227]"/>
  <match src="primitive_type [109707,109714]" dest="primitive_type [38620,38627]"/>
  <match src="number_literal: 0 [4756,4757]" dest="number_literal: 0 [5320,5321]"/>
  <match src="member_expression [112257,112297]" dest="member_expression [41170,41210]"/>
  <match src="event_paramater [24247,24270]" dest="event_paramater [59922,59945]"/>
  <match src="uint256: uint256 [86296,86303]" dest="uint256: uint256 [67617,67624]"/>
  <match src=".: . [110928,110929]" dest=".: . [39841,39842]"/>
  <match src="type_name [113141,113148]" dest="type_name [42054,42061]"/>
  <match src="array_access [47070,47079]" dest="array_access [52261,52270]"/>
  <match src="enum_declaration [95969,96037]" dest="enum_declaration [27187,27255]"/>
  <match src=",: , [91442,91443]" dest=",: , [60846,60847]"/>
  <match src="identifier: add [92243,92246]" dest="identifier: add [57804,57807]"/>
  <match src="call_argument [73564,73596]" dest="call_argument [81856,81900]"/>
  <match src="function_definition [9788,10003]" dest="function_definition [10352,10567]"/>
  <match src=":: : [10232,10233]" dest=":: : [10796,10797]"/>
  <match src="type_name [62961,62968]" dest="type_name [19795,19802]"/>
  <match src=".: . [101793,101794]" dest=".: . [30706,30707]"/>
  <match src="call_argument [19853,19892]" dest="call_argument [65285,65332]"/>
  <match src="member_expression [90142,90152]" dest="member_expression [73103,73113]"/>
  <match src="visibility [62880,62888]" dest="visibility [19714,19722]"/>
  <match src="call_expression [7246,7263]" dest="call_expression [7810,7827]"/>
  <match src="function_definition [7279,7453]" dest="function_definition [7843,8017]"/>
  <match src="identifier: a [6294,6295]" dest="identifier: a [6858,6859]"/>
  <match src="identifier: newImplementation [98926,98943]" dest="identifier: newImplementation [77576,77593]"/>
  <match src="primitive_type [107285,107292]" dest="primitive_type [36198,36205]"/>
  <match src="type_name [63275,63279]" dest="type_name [20109,20113]"/>
  <match src="identifier: _state [101195,101201]" dest="identifier: _state [30108,30114]"/>
  <match src="identifier: epoch [103081,103086]" dest="identifier: epoch [31994,31999]"/>
  <match src="call_argument [89305,89343]" dest="call_argument [81587,81601]"/>
  <match src="variable_declaration [32623,32657]" dest="variable_declaration [17216,17255]"/>
  <match src="returns: returns [63084,63091]" dest="returns: returns [19918,19925]"/>
  <match src="identifier: self [8789,8793]" dest="identifier: self [9353,9357]"/>
  <match src="return_type_definition [63881,63952]" dest="return_type_definition [20715,20786]"/>
  <match src="variable_declaration_statement [74919,74957]" dest="variable_declaration_statement [79656,79695]"/>
  <match src="visibility [53096,53103]" dest="visibility [12209,12216]"/>
  <match src=".: . [103197,103198]" dest=".: . [32110,32111]"/>
  <match src="): ) [13168,13169]" dest="): ) [23166,23167]"/>
  <match src="address: address [88158,88165]" dest="address: address [71177,71184]"/>
  <match src="(: ( [64392,64393]" dest="(: ( [21226,21227]"/>
  <match src="parameter [1689,1698]" dest="parameter [2253,2262]"/>
  <match src="primitive_type [95669,95676]" dest="primitive_type [26887,26894]"/>
  <match src="return_statement [28573,28580]" dest="return_statement [79819,79826]"/>
  <match src="(: ( [63120,63121]" dest="(: ( [19954,19955]"/>
  <match src="state_variable_declaration [52829,52883]" dest="state_variable_declaration [11942,11996]"/>
  <match src="{: { [103488,103489]" dest="{: { [32401,32402]"/>
  <match src=".: . [112215,112216]" dest=".: . [41128,41129]"/>
  <match src="identifier: GOVERNANCE_QUORUM [55248,55265]" dest="identifier: GOVERNANCE_QUORUM [14361,14378]"/>
  <match src="type_name [54699,54706]" dest="type_name [13812,13819]"/>
  <match src="primitive_type [62539,62546]" dest="primitive_type [19373,19380]"/>
  <match src="identifier: decrementBalanceOf [108445,108463]" dest="identifier: decrementBalanceOf [37358,37376]"/>
  <match src=",: , [9352,9353]" dest=",: , [9916,9917]"/>
  <match src="&quot;: &quot; [73646,73647]" dest="&quot;: &quot; [81945,81946]"/>
  <match src="identifier: Require [91278,91285]" dest="identifier: Require [80758,80765]"/>
  <match src="visibility [44892,44899]" dest="visibility [50083,50090]"/>
  <match src="identifier: Decimal [56113,56120]" dest="identifier: Decimal [15226,15233]"/>
  <match src="primitive_type [88183,88190]" dest="primitive_type [71202,71209]"/>
  <match src="function_body [110756,110848]" dest="function_body [39669,39761]"/>
  <match src="type_name [88300,88307]" dest="type_name [60175,60182]"/>
  <match src="identifier: epochs [109545,109551]" dest="identifier: epochs [38458,38464]"/>
  <match src="call_argument [90304,90333]" dest="call_argument [81783,81809]"/>
  <match src=".: . [98531,98532]" dest=".: . [77181,77182]"/>
  <match src="identifier: staged [109142,109148]" dest="identifier: staged [38055,38061]"/>
  <match src="(: ( [90882,90883]" dest="(: ( [73439,73440]"/>
  <match src=".: . [34283,34284]" dest=".: . [17955,17956]"/>
  <match src="call_expression [90895,90902]" dest="call_expression [73452,73459]"/>
  <match src="=: = [110043,110044]" dest="=: = [38956,38957]"/>
  <match src="variable_declaration [417,426]" dest="variable_declaration [981,990]"/>
  <match src="function: function [62910,62918]" dest="function: function [19744,19752]"/>
  <match src="array_access [108259,108283]" dest="array_access [37172,37196]"/>
  <match src="): ) [103065,103066]" dest="): ) [31978,31979]"/>
  <match src="(: ( [22157,22158]" dest="(: ( [65103,65104]"/>
  <match src="type_name [75328,75335]" dest="type_name [68074,68081]"/>
  <match src="uint256: uint256 [90099,90106]" dest="uint256: uint256 [73030,73037]"/>
  <match src="identifier: bonded [101106,101112]" dest="identifier: bonded [30019,30025]"/>
  <match src="identifier: decrementRejectFor [113283,113301]" dest="identifier: decrementRejectFor [42196,42214]"/>
  <match src="identifier: account [109854,109861]" dest="identifier: account [38767,38774]"/>
  <match src="type_name [13780,13787]" dest="type_name [23778,23785]"/>
  <match src="state_mutability [28117,28121]" dest="state_mutability [61428,61432]"/>
  <match src="identifier: provider [100797,100805]" dest="identifier: provider [29710,29718]"/>
  <match src="return_statement [3547,3556]" dest="return_statement [4111,4120]"/>
  <match src="array_access [109796,109835]" dest="array_access [38709,38748]"/>
  <match src="identifier: D256 [7665,7669]" dest="identifier: D256 [8229,8233]"/>
  <match src="identifier: mul [7755,7758]" dest="identifier: mul [8319,8322]"/>
  <match src="primitive_type [103278,103285]" dest="primitive_type [32191,32198]"/>
  <match src="=: = [90468,90469]" dest="=: = [73140,73141]"/>
  <match src="function_body [100663,100688]" dest="function_body [29576,29601]"/>
  <match src="): ) [71971,71972]" dest="): ) [25784,25785]"/>
  <match src="identifier: add [107911,107914]" dest="identifier: add [36824,36827]"/>
  <match src="identifier: div [111253,111256]" dest="identifier: div [40166,40169]"/>
  <match src="(: ( [6503,6504]" dest="(: ( [7067,7068]"/>
  <match src="variable_declaration [86296,86313]" dest="variable_declaration [67617,67632]"/>
  <match src="call_struct_argument [54515,54535]" dest="call_struct_argument [13628,13648]"/>
  <match src="primitive_type [46964,46969]" dest="primitive_type [52155,52160]"/>
  <match src="=: = [1392,1393]" dest="=: = [1956,1957]"/>
  <match src="call_expression [43383,43407]" dest="call_expression [48574,48598]"/>
  <match src="): ) [56094,56095]" dest="): ) [15207,15208]"/>
  <match src="(: ( [90394,90395]" dest="(: ( [62740,62741]"/>
  <match src="parameter [102720,102727]" dest="parameter [31633,31640]"/>
  <match src="/: / [2052,2053]" dest="/: / [2616,2617]"/>
  <match src="number_literal: 50e16 [53926,53931]" dest="number_literal: 50e16 [13039,13044]"/>
  <match src="identifier: self [8661,8665]" dest="identifier: self [9225,9229]"/>
  <match src="function: function [8423,8431]" dest="function: function [8987,8995]"/>
  <match src="primitive_type [95475,95482]" dest="primitive_type [26693,26700]"/>
  <match src="call_argument [80372,80376]" dest="call_argument [71993,71997]"/>
  <match src="primitive_type [53965,53972]" dest="primitive_type [13078,13085]"/>
  <match src="identifier: value [8173,8178]" dest="identifier: value [8737,8742]"/>
  <match src="type_name [75302,75309]" dest="type_name [68051,68058]"/>
  <match src="type_name [42529,42533]" dest="type_name [47720,47724]"/>
  <match src=".: . [6832,6833]" dest=".: . [7396,7397]"/>
  <match src="type_name [4662,4669]" dest="type_name [5226,5233]"/>
  <match src="primitive_type [63357,63364]" dest="primitive_type [20191,20198]"/>
  <match src="identifier: Decimal [34907,34914]" dest="identifier: Decimal [68277,68284]"/>
  <match src="(: ( [34502,34503]" dest="(: ( [62917,62918]"/>
  <match src="identifier: mod [4090,4093]" dest="identifier: mod [4654,4657]"/>
  <match src="return_statement [101188,101217]" dest="return_statement [30101,30130]"/>
  <match src="=: = [44066,44067]" dest="=: = [49257,49258]"/>
  <match src="function_definition [12360,12443]" dest="function_definition [22358,22441]"/>
  <match src="): ) [107535,107536]" dest="): ) [36448,36449]"/>
  <match src="identifier: coupons [102304,102311]" dest="identifier: coupons [31217,31224]"/>
  <match src="new_expression [46006,46015]" dest="new_expression [51197,51206]"/>
  <match src="bytes32: bytes32 [62961,62968]" dest="bytes32: bytes32 [19795,19802]"/>
  <match src="type_name [109707,109714]" dest="type_name [38620,38627]"/>
  <match src="): ) [47961,47962]" dest="): ) [53152,53153]"/>
  <match src="call_expression [102456,102463]" dest="call_expression [31369,31376]"/>
  <match src="private: private [114648,114655]" dest="private: private [69592,69599]"/>
  <match src="primitive_type [27847,27854]" dest="primitive_type [16790,16797]"/>
  <match src="function: function [56025,56033]" dest="function: function [15138,15146]"/>
  <match src="}: } [22187,22188]" dest="}: } [65138,65139]"/>
  <match src="}: } [7452,7453]" dest="}: } [8016,8017]"/>
  <match src="address: address [59908,59915]" dest="address: address [24882,24889]"/>
  <match src=",: , [60995,60996]" dest=",: , [54124,54125]"/>
  <match src="indexed: indexed [106641,106648]" dest="indexed: indexed [35554,35561]"/>
  <match src="identifier: length [45130,45136]" dest="identifier: length [50321,50327]"/>
  <match src="binary_expression [94606,94614]" dest="binary_expression [75464,75472]"/>
  <match src="function_definition [108144,108430]" dest="function_definition [37057,37343]"/>
  <match src="type_name [62196,62200]" dest="type_name [19030,19034]"/>
  <match src="uint256: uint256 [5642,5649]" dest="uint256: uint256 [6206,6213]"/>
  <match src="identifier: lockedUntil [113605,113616]" dest="identifier: lockedUntil [42518,42529]"/>
  <match src="identifier: accounts [102424,102432]" dest="identifier: accounts [31337,31345]"/>
  <match src="user_defined_type [116673,116678]" dest="user_defined_type [83044,83049]"/>
  <match src="identifier: stringify [43624,43633]" dest="identifier: stringify [48815,48824]"/>
  <match src="enum: enum [95969,95973]" dest="enum: enum [27187,27191]"/>
  <match src="uint256: uint256 [95442,95449]" dest="uint256: uint256 [26660,26667]"/>
  <match src="identifier: that [40532,40536]" dest="identifier: that [45723,45727]"/>
  <match src="uint256: uint256 [78166,78173]" dest="uint256: uint256 [71446,71453]"/>
  <match src="type_name [4030,4037]" dest="type_name [4594,4601]"/>
  <match src="comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      * - Multiplication cannot overflow.      */ [1431,1660]" dest="comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      * - Multiplication cannot overflow.      */ [1995,2224]"/>
  <match src="type_name [2015,2022]" dest="type_name [2579,2586]"/>
  <match src="primitive_type [107014,107021]" dest="primitive_type [35927,35934]"/>
  <match src="call_struct_argument [56127,56148]" dest="call_struct_argument [15240,15261]"/>
  <match src="call_argument [41625,41633]" dest="call_argument [46816,46824]"/>
  <match src="comment: // 'x' [38600,38606]" dest="comment: // 'x' [43791,43797]"/>
  <match src="identifier: D256 [7558,7562]" dest="identifier: D256 [8122,8126]"/>
  <match src="(: ( [89189,89190]" dest="(: ( [72285,72286]"/>
  <match src="call_argument [20165,20171]" dest="call_argument [65821,65827]"/>
  <match src="member_expression [110959,110984]" dest="member_expression [39872,39897]"/>
  <match src=",: , [58747,58748]" dest=",: , [55001,55002]"/>
  <match src="parenthesized_expression [42684,43042]" dest="parenthesized_expression [47875,48233]"/>
  <match src=".: . [101518,101519]" dest=".: . [30431,30432]"/>
  <match src="identifier: _state [109117,109123]" dest="identifier: _state [38030,38036]"/>
  <match src="identifier: from [7618,7622]" dest="identifier: from [8182,8186]"/>
  <match src="(: ( [88217,88218]" dest="(: ( [71236,71237]"/>
  <match src="function_body [6607,6675]" dest="function_body [7171,7239]"/>
  <match src="library: library [52342,52349]" dest="library: library [11455,11462]"/>
  <match src="visibility [62938,62946]" dest="visibility [19772,19780]"/>
  <match src="primitive_type [95840,95847]" dest="primitive_type [27058,27065]"/>
  <match src="primitive_type [88459,88466]" dest="primitive_type [83177,83184]"/>
  <match src="revert: revert [39475,39481]" dest="revert: revert [44666,44672]"/>
  <match src="identifier: totalRewardedWithPhantom [91502,91526]" dest="identifier: redeemAmount [63758,63770]"/>
  <match src="type_name [53865,53872]" dest="type_name [12978,12985]"/>
  <match src="uint256: uint256 [88444,88451]" dest="uint256: uint256 [71333,71340]"/>
  <match src="uint256: uint256 [2592,2599]" dest="uint256: uint256 [3156,3163]"/>
  <match src="if: if [74025,74027]" dest="if: if [68780,68782]"/>
  <match src="identifier: a [10141,10142]" dest="identifier: a [10705,10706]"/>
  <match src="type_name [101723,101730]" dest="type_name [30636,30643]"/>
  <match src="function: function [55915,55923]" dest="function: function [15028,15036]"/>
  <match src="type_name [106916,106920]" dest="type_name [35829,35833]"/>
  <match src="call_argument [43464,43490]" dest="call_argument [48655,48681]"/>
  <match src="): ) [89989,89990]" dest="): ) [72936,72937]"/>
  <match src="call_argument [98926,98943]" dest="call_argument [77576,77593]"/>
  <match src="bytes: bytes [44922,44927]" dest="bytes: bytes [50113,50118]"/>
  <match src="identifier: ASCII_RELATIVE_ZERO [38519,38538]" dest="identifier: ASCII_RELATIVE_ZERO [43710,43729]"/>
  <match src="contract: contract [95944,95952]" dest="contract: contract [27162,27170]"/>
  <match src="member_expression [115090,115104]" dest="member_expression [70034,70048]"/>
  <match src="(: ( [115055,115056]" dest="(: ( [69999,70000]"/>
  <match src="(: ( [9455,9456]" dest="(: ( [10019,10020]"/>
  <match src="primitive_type [27734,27741]" dest="primitive_type [78705,78712]"/>
  <match src="private: private [36246,36253]" dest="private: private [67860,67867]"/>
  <match src="identifier: account [109408,109415]" dest="identifier: account [38321,38328]"/>
  <match src="binary_expression [81206,81222]" dest="binary_expression [61906,61938]"/>
  <match src=",: , [54535,54536]" dest=",: , [13648,13649]"/>
  <match src="identifier: reason [41815,41821]" dest="identifier: reason [47006,47012]"/>
  <match src="(: ( [1323,1324]" dest="(: ( [1887,1888]"/>
  <match src="identifier: z [46613,46614]" dest="identifier: z [51804,51805]"/>
  <match src=".: . [31890,31891]" dest=".: . [17144,17145]"/>
  <match src="call_struct_argument [6397,6426]" dest="call_struct_argument [6961,6990]"/>
  <match src="(: ( [11738,11739]" dest="(: ( [21736,21737]"/>
  <match src="): ) [27986,27987]" dest="): ) [62573,62574]"/>
  <match src="primitive_type [42548,42555]" dest="primitive_type [47739,47746]"/>
  <match src="identifier: reject [113243,113249]" dest="identifier: reject [42156,42162]"/>
  <match src="type_name [106995,107002]" dest="type_name [35908,35915]"/>
  <match src="primitive_type [40084,40090]" dest="primitive_type [45275,45281]"/>
  <match src="identifier: getCouponExpiration [55924,55943]" dest="identifier: getCouponExpiration [15037,15056]"/>
  <match src="comment: /**      * @dev Returns the amount of tokens in existence.      */ [11511,11577]" dest="comment: /**      * @dev Returns the amount of tokens in existence.      */ [21509,21575]"/>
  <match src="}: } [94622,94623]" dest="}: } [75480,75481]"/>
  <match src="internal: internal [56052,56060]" dest="internal: internal [15165,15173]"/>
  <match src="identifier: fluidUntil [110179,110189]" dest="identifier: fluidUntil [39092,39102]"/>
  <match src="string [114672,114684]" dest="string [69616,69628]"/>
  <match src="returns: returns [105469,105476]" dest="returns: returns [34382,34389]"/>
  <match src="parameter [100112,100125]" dest="parameter [29025,29038]"/>
  <match src="{: { [52950,52951]" dest="{: { [12063,12064]"/>
  <match src="function: function [2579,2587]" dest="function: function [3143,3151]"/>
  <match src="(: ( [22026,22027]" dest="(: ( [64942,64943]"/>
  <match src="call_argument [56126,56149]" dest="call_argument [15239,15262]"/>
  <match src="identifier: D256 [6703,6707]" dest="identifier: D256 [7267,7271]"/>
  <match src="primitive_type [9571,9575]" dest="primitive_type [10135,10139]"/>
  <match src="): ) [10159,10160]" dest="): ) [10723,10724]"/>
  <match src="uint256: uint256 [107285,107292]" dest="uint256: uint256 [36198,36205]"/>
  <match src="parameter [64079,64083]" dest="parameter [20913,20917]"/>
  <match src="return: return [101084,101090]" dest="return: return [29997,30003]"/>
  <match src="parameter [59866,59880]" dest="parameter [24840,24854]"/>
  <match src="identifier: balanceOfBonded [90190,90205]" dest="identifier: balanceOfBonded [73152,73167]"/>
  <match src="for: for [47218,47221]" dest="for: for [52409,52412]"/>
  <match src="primitive_type [44046,44051]" dest="primitive_type [49237,49242]"/>
  <match src="type_name [8526,8530]" dest="type_name [9090,9094]"/>
  <match src="expression_statement [45380,45386]" dest="expression_statement [50571,50577]"/>
  <match src="function: function [104872,104880]" dest="function: function [33785,33793]"/>
  <match src="}: } [102800,102801]" dest="}: } [31713,31714]"/>
  <match src="}: } [7272,7273]" dest="}: } [7836,7837]"/>
  <match src="identifier: _state [112193,112199]" dest="identifier: _state [41106,41112]"/>
  <match src=",: , [8461,8462]" dest=",: , [9025,9026]"/>
  <match src="(: ( [9681,9682]" dest="(: ( [10245,10246]"/>
  <match src="identifier: debt [101312,101316]" dest="identifier: debt [30225,30229]"/>
  <match src="state_variable_declaration [53088,53137]" dest="state_variable_declaration [12201,12250]"/>
  <match src="function_body [101074,101119]" dest="function_body [29987,30032]"/>
  <match src=",: , [42276,42277]" dest=",: , [47467,47468]"/>
  <match src="type_cast_expression [58106,58119]" dest="type_cast_expression [54566,54579]"/>
  <match src="call_argument [42388,42396]" dest="call_argument [47579,47587]"/>
  <match src="identifier: that [115051,115055]" dest="identifier: that [69995,69999]"/>
  <match src="comment: /* DAO */ [53479,53488]" dest="comment: /* DAO */ [12592,12601]"/>
  <match src="function: function [42506,42514]" dest="function: function [47697,47705]"/>
  <match src="type_name [13758,13765]" dest="type_name [23756,23763]"/>
  <match src="returns: returns [829,836]" dest="returns: returns [1393,1400]"/>
  <match src="call_argument [111017,111043]" dest="call_argument [39930,39956]"/>
  <match src="identifier: totalRewardedWithPhantom [89519,89543]" dest="identifier: totalDebtBeforeBurn [62657,62676]"/>
  <match src="address: address [86661,86668]" dest="address: address [54511,54518]"/>
  <match src="function_definition [59831,59889]" dest="function_definition [24805,24863]"/>
  <match src="identifier: getInitialCouponRedemptionPenalty [56176,56209]" dest="identifier: getInitialCouponRedemptionPenalty [15289,15322]"/>
  <match src="identifier: account [110126,110133]" dest="identifier: account [39039,39046]"/>
  <match src="comment: // ', ' [38687,38694]" dest="comment: // ', ' [43878,43885]"/>
  <match src="(: ( [39587,39588]" dest="(: ( [44778,44779]"/>
  <match src="contract_body [15808,22597]" dest="contract_body [59559,65863]"/>
  <match src="): ) [61584,61585]" dest="): ) [60277,60278]"/>
  <match src="&quot;: &quot; [90798,90799]" dest="&quot;: &quot; [81030,81031]"/>
  <match src="type_name [31146,31153]" dest="type_name [58182,58189]"/>
  <match src="return_type_definition [55612,55629]" dest="return_type_definition [14725,14742]"/>
  <match src="is: is [87826,87828]" dest="is: is [71053,71055]"/>
  <match src="identifier: _state [107752,107758]" dest="identifier: _state [36665,36671]"/>
  <match src="function_body [41245,41737]" dest="function_body [46436,46928]"/>
  <match src="private: private [53759,53766]" dest="private: private [12872,12879]"/>
  <match src="identifier: getBootstrappingPrice [54885,54906]" dest="identifier: getBootstrappingPrice [13998,14019]"/>
  <match src="string [27341,27381]" dest="string [55545,55575]"/>
  <match src="emit: emit [89095,89099]" dest="emit: emit [72448,72452]"/>
  <match src="call_argument [108734,108744]" dest="call_argument [37647,37657]"/>
  <match src="): ) [90646,90647]" dest="): ) [72161,72162]"/>
  <match src="identifier: epoch [104234,104239]" dest="identifier: epoch [33147,33152]"/>
  <match src="identifier: b [6843,6844]" dest="identifier: b [7407,7408]"/>
  <match src="return_statement [2109,2118]" dest="return_statement [2673,2682]"/>
  <match src="returns: returns [1315,1322]" dest="returns: returns [1879,1886]"/>
  <match src="block_statement [46297,46666]" dest="block_statement [51488,51857]"/>
  <match src="binary_expression [46594,46604]" dest="binary_expression [51785,51795]"/>
  <match src="call_expression [102047,102065]" dest="call_expression [30960,30978]"/>
  <match src="identifier: epoch [110906,110911]" dest="identifier: epoch [39819,39824]"/>
  <match src="uint256: uint256 [9841,9848]" dest="uint256: uint256 [10405,10412]"/>
  <match src="call_argument [46613,46630]" dest="call_argument [51804,51821]"/>
  <match src="identifier: Candidate [112595,112604]" dest="identifier: Candidate [41508,41517]"/>
  <match src="identifier: totalSupply [101962,101973]" dest="identifier: totalSupply [30875,30886]"/>
  <match src="[: [ [102294,102295]" dest="[: [ [31207,31208]"/>
  <match src="type_cast_expression [45600,45634]" dest="type_cast_expression [50791,50825]"/>
  <match src="identifier: totalBonded [102029,102040]" dest="identifier: totalBonded [30942,30953]"/>
  <match src="): ) [41951,41952]" dest="): ) [47142,47143]"/>
  <match src="call_argument [103064,103065]" dest="call_argument [31977,31978]"/>
  <match src="identifier: univ2 [88934,88939]" dest="identifier: dollar [71877,71883]"/>
  <match src="parameter [7507,7516]" dest="parameter [8071,8080]"/>
  <match src="function_body [45846,46696]" dest="function_body [51037,51887]"/>
  <match src="call_argument [47093,47107]" dest="call_argument [52284,52298]"/>
  <match src="primitive_type [91494,91501]" dest="primitive_type [63750,63757]"/>
  <match src="internal: internal [107166,107174]" dest="internal: internal [36079,36087]"/>
  <match src="primitive_type [95418,95425]" dest="primitive_type [26636,26643]"/>
  <match src="type_name [43153,43160]" dest="type_name [48344,48351]"/>
  <match src="function_definition [88581,88853]" dest="function_definition [83270,83457]"/>
  <match src="call_expression [6235,6246]" dest="call_expression [6799,6810]"/>
  <match src=".: . [111848,111849]" dest=".: . [40761,40762]"/>
  <match src="(: ( [92210,92211]" dest="(: ( [57771,57772]"/>
  <match src="uint256: uint256 [113321,113328]" dest="uint256: uint256 [42234,42241]"/>
  <match src="identifier: supply [108674,108680]" dest="identifier: supply [37587,37593]"/>
  <match src=",: , [39940,39941]" dest=",: , [45131,45132]"/>
  <match src="returns: returns [94056,94063]" dest="returns: returns [74914,74921]"/>
  <match src="type_name [109724,109731]" dest="type_name [38637,38644]"/>
  <match src="}: } [64498,64499]" dest="}: } [21332,21333]"/>
  <match src="expression_statement [116761,116847]" dest="expression_statement [83410,83451]"/>
  <match src="**: ** [5726,5728]" dest="**: ** [6290,6292]"/>
  <match src="state_mutability [103131,103135]" dest="state_mutability [32044,32048]"/>
  <match src="identifier: D256 [54978,54982]" dest="identifier: D256 [14091,14095]"/>
  <match src="member_expression [7063,7068]" dest="member_expression [7627,7632]"/>
  <match src="uint256: uint256 [112020,112027]" dest="uint256: uint256 [40933,40940]"/>
  <match src=".: . [110160,110161]" dest=".: . [39073,39074]"/>
  <match src="): ) [115391,115392]" dest="): ) [70335,70336]"/>
  <match src="identifier: must [41771,41775]" dest="identifier: must [46962,46966]"/>
  <match src="uint256: uint256 [107822,107829]" dest="uint256: uint256 [36735,36742]"/>
  <match src="member_expression [112428,112462]" dest="member_expression [41341,41375]"/>
  <match src="return_type_definition [829,846]" dest="return_type_definition [1393,1410]"/>
  <match src="primitive_type [59908,59915]" dest="primitive_type [24882,24889]"/>
  <match src="return_type_definition [62379,62402]" dest="return_type_definition [19213,19236]"/>
  <match src="): ) [62813,62814]" dest="): ) [19647,19648]"/>
  <match src="(: ( [102386,102387]" dest="(: ( [31299,31300]"/>
  <match src="(: ( [46474,46475]" dest="(: ( [51665,51666]"/>
  <match src=".: . [113249,113250]" dest=".: . [42162,42163]"/>
  <match src="primitive_type [109060,109067]" dest="primitive_type [37973,37980]"/>
  <match src="identifier: FILE [88124,88128]" dest="identifier: FILE [71140,71144]"/>
  <match src="parameter [105738,105750]" dest="parameter [34651,34663]"/>
  <match src="call_argument [65414,65415]" dest="call_argument [18919,18920]"/>
  <match src="return_statement [105494,105540]" dest="return_statement [34407,34453]"/>
  <match src="identifier: self [8376,8380]" dest="identifier: self [8940,8944]"/>
  <match src="contract: contract [99814,99822]" dest="contract: contract [28727,28735]"/>
  <match src="identifier: b [8807,8808]" dest="identifier: b [9371,9372]"/>
  <match src="): ) [54211,54212]" dest="): ) [13324,13325]"/>
  <match src="identifier: errorMessage [3273,3285]" dest="identifier: errorMessage [3837,3849]"/>
  <match src=",: , [112593,112594]" dest=",: , [41506,41507]"/>
  <match src="}: } [4800,4801]" dest="}: } [5364,5365]"/>
  <match src="identifier: sender [86582,86588]" dest="identifier: sender [80369,80375]"/>
  <match src="(: ( [74954,74955]" dest="(: ( [79682,79683]"/>
  <match src="&gt;: &gt; [103317,103318]" dest="&gt;: &gt; [32230,32231]"/>
  <match src="{: { [9577,9578]" dest="{: { [10141,10142]"/>
  <match src="identifier: incrementTotalDebt [107429,107447]" dest="identifier: incrementTotalDebt [36342,36360]"/>
  <match src="identifier: one [6004,6007]" dest="identifier: one [6568,6571]"/>
  <match src="primitive_type [63434,63438]" dest="primitive_type [20268,20272]"/>
  <match src="type_name [112576,112583]" dest="type_name [41489,41496]"/>
  <match src=".: . [93005,93006]" dest=".: . [80874,80875]"/>
  <match src="identifier: candidate [112446,112455]" dest="identifier: candidate [41359,41368]"/>
  <match src="identifier: must [42658,42662]" dest="identifier: must [47849,47853]"/>
  <match src="uint256: uint256 [101913,101920]" dest="uint256: uint256 [30826,30833]"/>
  <match src="type_name [63343,63347]" dest="type_name [20177,20181]"/>
  <match src="(: ( [102348,102349]" dest="(: ( [31261,31262]"/>
  <match src="function_definition [101229,101323]" dest="function_definition [30142,30236]"/>
  <match src="{: { [54501,54502]" dest="{: { [13614,13615]"/>
  <match src="(: ( [92146,92147]" dest="(: ( [57706,57707]"/>
  <match src="type_name [88275,88282]" dest="type_name [83223,83230]"/>
  <match src="&amp;: &amp; [46477,46478]" dest="&amp;: &amp; [51668,51669]"/>
  <match src="member_expression [111516,111539]" dest="member_expression [40429,40452]"/>
  <match src="identifier: sender [19761,19767]" dest="identifier: sender [65178,65184]"/>
  <match src="): ) [39592,39593]" dest="): ) [44783,44784]"/>
  <match src="function_body [102403,102635]" dest="function_body [31316,31548]"/>
  <match src=".: . [8930,8931]" dest=".: . [9494,9495]"/>
  <match src="bool: bool [9315,9319]" dest="bool: bool [9879,9883]"/>
  <match src="}: } [106841,106842]" dest="}: } [35754,35755]"/>
  <match src="parameter [8649,8665]" dest="parameter [9213,9229]"/>
  <match src="type_name [2637,2644]" dest="type_name [3201,3208]"/>
  <match src="parameter [106865,106880]" dest="parameter [35778,35793]"/>
  <match src="(: ( [107149,107150]" dest="(: ( [36062,36063]"/>
  <match src="type_name [1382,1389]" dest="type_name [1946,1953]"/>
  <match src="call_argument [83122,83128]" dest="call_argument [55201,55207]"/>
  <match src="number_literal: 2 [46377,46378]" dest="number_literal: 2 [51568,51569]"/>
  <match src="uint256: uint256 [53965,53972]" dest="uint256: uint256 [13078,13085]"/>
  <match src="{: { [101280,101281]" dest="{: { [30193,30194]"/>
  <match src="type_name [8471,8475]" dest="type_name [9035,9039]"/>
  <match src="identifier: Require [73538,73545]" dest="identifier: Require [81830,81837]"/>
  <match src="call_argument [89708,89713]" dest="call_argument [72663,72698]"/>
  <match src="return_type_definition [6991,7012]" dest="return_type_definition [7555,7576]"/>
  <match src="function_body [103488,103538]" dest="function_body [32401,32451]"/>
  <match src="function_body [108016,108106]" dest="function_body [36929,37019]"/>
  <match src="type_name [101486,101493]" dest="type_name [30399,30406]"/>
  <match src="identifier: stringify [40395,40404]" dest="identifier: stringify [45586,45595]"/>
  <match src="identifier: internalAmount [34247,34261]" dest="identifier: premiumFlat [17894,17905]"/>
  <match src="call_argument [39119,39143]" dest="call_argument [44310,44334]"/>
  <match src="function: function [63615,63623]" dest="function: function [20449,20457]"/>
  <match src="member_expression [102746,102761]" dest="member_expression [31659,31674]"/>
  <match src="}: } [4133,4134]" dest="}: } [4697,4698]"/>
  <match src="function_definition [71911,71973]" dest="function_definition [25724,25786]"/>
  <match src="(: ( [90053,90054]" dest="(: ( [73927,73928]"/>
  <match src="type_name [41124,41131]" dest="type_name [46315,46322]"/>
  <match src="(: ( [107528,107529]" dest="(: ( [36441,36442]"/>
  <match src="bytes32: bytes32 [114640,114647]" dest="bytes32: bytes32 [69584,69591]"/>
  <match src="function: function [63678,63686]" dest="function: function [20512,20520]"/>
  <match src="(: ( [47792,47793]" dest="(: ( [52983,52984]"/>
  <match src="return_statement [103350,103359]" dest="return_statement [32263,32272]"/>
  <match src="call_argument [89877,89887]" dest="call_argument [73834,73844]"/>
  <match src="type_name [52960,52967]" dest="type_name [12073,12080]"/>
  <match src="primitive_type [61518,61525]" dest="primitive_type [60216,60223]"/>
  <match src="(: ( [6355,6356]" dest="(: ( [6919,6920]"/>
  <match src="public: public [81117,81123]" dest="public: public [61624,61630]"/>
  <match src="identifier: account [108275,108282]" dest="identifier: account [37188,37195]"/>
  <match src="identifier: stringify [39734,39743]" dest="identifier: stringify [44925,44934]"/>
  <match src="uint256: uint256 [45050,45057]" dest="uint256: uint256 [50241,50248]"/>
  <match src=".: . [89007,89008]" dest=".: . [72382,72383]"/>
  <match src="call_argument [40839,40844]" dest="call_argument [46030,46035]"/>
  <match src="string: string [41304,41310]" dest="string: string [46495,46501]"/>
  <match src=",: , [1260,1261]" dest=",: , [1824,1825]"/>
  <match src="comment: // populate the result with &quot;0x&quot; [46984,47016]" dest="comment: // populate the result with &quot;0x&quot; [52175,52207]"/>
  <match src="array_access [112635,112663]" dest="array_access [41548,41576]"/>
  <match src="string [30493,30529]" dest="string [65741,65779]"/>
  <match src="member_expression [10210,10217]" dest="member_expression [10774,10781]"/>
  <match src="function_body [115222,115412]" dest="function_body [70166,70356]"/>
  <match src=".: . [10142,10143]" dest=".: . [10706,10707]"/>
  <match src="identifier: statusOf [102340,102348]" dest="identifier: statusOf [31253,31261]"/>
  <match src="(: ( [103086,103087]" dest="(: ( [31999,32000]"/>
  <match src="identifier: char [47562,47566]" dest="identifier: char [52753,52757]"/>
  <match src="parameter [8108,8119]" dest="parameter [8672,8683]"/>
  <match src=".: . [108876,108877]" dest=".: . [37789,37790]"/>
  <match src=",: , [8233,8234]" dest=",: , [8797,8798]"/>
  <match src="modifier_definition [114988,115193]" dest="modifier_definition [69932,70137]"/>
  <match src="function_definition [100825,100919]" dest="function_definition [29738,29832]"/>
  <match src=".: . [111388,111389]" dest=".: . [40301,40302]"/>
  <match src="(: ( [9640,9641]" dest="(: ( [10204,10205]"/>
  <match src="identifier: D256 [56083,56087]" dest="identifier: D256 [15196,15200]"/>
  <match src="}: } [47649,47650]" dest="}: } [52840,52841]"/>
  <match src="(: ( [8366,8367]" dest="(: ( [8930,8931]"/>
  <match src="(: ( [55501,55502]" dest="(: ( [14614,14615]"/>
  <match src="identifier: reason [98487,98493]" dest="identifier: reason [77137,77143]"/>
  <match src="member_expression [103647,103673]" dest="member_expression [32560,32586]"/>
  <match src="identifier: getOraclePoolRatio [56651,56669]" dest="identifier: getOraclePoolRatio [15764,15782]"/>
  <match src="type_name [34907,34919]" dest="type_name [68277,68289]"/>
  <match src="primitive_type [113830,113837]" dest="primitive_type [42743,42750]"/>
  <match src="identifier: coupons [112208,112215]" dest="identifier: coupons [41121,41128]"/>
  <match src="identifier: to [62864,62866]" dest="identifier: to [19698,19700]"/>
  <match src="function_definition [13477,13574]" dest="function_definition [23475,23572]"/>
  <match src="event_paramater [63305,63327]" dest="event_paramater [20139,20161]"/>
  <match src=",: , [40178,40179]" dest=",: , [45369,45370]"/>
  <match src="type_name [104612,104619]" dest="type_name [33525,33532]"/>
  <match src="state_variable_declaration [38655,38686]" dest="state_variable_declaration [43846,43877]"/>
  <match src="function_definition [39862,40517]" dest="function_definition [45053,45708]"/>
  <match src="(: ( [9202,9203]" dest="(: ( [9766,9767]"/>
  <match src="(: ( [6083,6084]" dest="(: ( [6647,6648]"/>
  <match src="member_expression [110351,110390]" dest="member_expression [39264,39303]"/>
  <match src="identifier: reason [42578,42584]" dest="identifier: reason [47769,47775]"/>
  <match src="visibility [100843,100849]" dest="visibility [29756,29762]"/>
  <match src=",: , [91886,91887]" dest=",: , [80483,80484]"/>
  <match src="variable_declaration_statement [1382,1400]" dest="variable_declaration_statement [1946,1964]"/>
  <match src="identifier: that [76435,76439]" dest="identifier: that [80567,80571]"/>
  <match src="function_body [38990,39297]" dest="function_body [44181,44488]"/>
  <match src="}: } [56335,56336]" dest="}: } [15448,15449]"/>
  <match src="}: } [105684,105685]" dest="}: } [34597,34598]"/>
  <match src="call_expression [40235,40261]" dest="call_expression [45426,45452]"/>
  <match src="string_literal [4100,4126]" dest="string_literal [4664,4690]"/>
  <match src=".: . [56082,56083]" dest=".: . [15195,15196]"/>
  <match src="contract_declaration [95944,96227]" dest="contract_declaration [27162,27445]"/>
  <match src="identifier: deadline [58237,58245]" dest="identifier: couponAmount [61610,61622]"/>
  <match src="call_expression [89480,89500]" dest="call_expression [72571,72591]"/>
  <match src="identifier: newClaimable [90634,90646]" dest="identifier: depositAmount [72148,72161]"/>
  <match src="identifier: getReserves [63853,63864]" dest="identifier: getReserves [20687,20698]"/>
  <match src="{: { [107742,107743]" dest="{: { [36655,36656]"/>
  <match src="comment: // ============ Self Functions ============ [6442,6485]" dest="comment: // ============ Self Functions ============ [7006,7049]"/>
  <match src="(: ( [90239,90240]" dest="(: ( [81634,81635]"/>
  <match src="=: = [47080,47081]" dest="=: = [52271,52272]"/>
  <match src="=: = [52577,52578]" dest="=: = [11690,11691]"/>
  <match src="identifier: Oracle [72715,72721]" dest="identifier: Regulator [66550,66559]"/>
  <match src="internal: internal [4701,4709]" dest="internal: internal [5265,5273]"/>
  <match src="number_literal: 0 [1993,1994]" dest="number_literal: 0 [2557,2558]"/>
  <match src="solidity_version: 0.5.17 [51,57]" dest="solidity_version: 0.5.17 [51,57]"/>
  <match src="identifier: BOOTSTRAPPING_PERIOD [52486,52506]" dest="identifier: BOOTSTRAPPING_PERIOD [11599,11619]"/>
  <match src="call_argument [39588,39592]" dest="call_argument [44779,44783]"/>
  <match src="type_name [19753,19760]" dest="type_name [65170,65177]"/>
  <match src="bytes32: bytes32 [43917,43924]" dest="bytes32: bytes32 [49108,49115]"/>
  <match src="memory: memory [109083,109089]" dest="memory: memory [37996,38002]"/>
  <match src="call_argument [105393,105402]" dest="call_argument [34306,34315]"/>
  <match src="identifier: accounts [108580,108588]" dest="identifier: accounts [37493,37501]"/>
  <match src="struct: struct [96526,96532]" dest="struct: struct [27744,27750]"/>
  <match src="primitive_type [15940,15947]" dest="primitive_type [59668,59675]"/>
  <match src=".: . [105378,105379]" dest=".: . [34291,34292]"/>
  <match src="visibility [27742,27749]" dest="visibility [58386,58393]"/>
  <match src=".: . [103186,103187]" dest=".: . [32099,32100]"/>
  <match src="address: address [104891,104898]" dest="address: address [33804,33811]"/>
  <match src="public: public [71899,71905]" dest="public: public [25712,25718]"/>
  <match src="type_name [7646,7650]" dest="type_name [8210,8214]"/>
  <match src="view: view [104785,104789]" dest="view: view [33698,33702]"/>
  <match src="): ) [113260,113261]" dest="): ) [42173,42174]"/>
  <match src="external: external [63644,63652]" dest="external: external [20478,20486]"/>
  <match src="returns: returns [7549,7556]" dest="returns: returns [8113,8120]"/>
  <match src="visibility [92149,92156]" dest="visibility [57709,57716]"/>
  <match src="(: ( [96689,96690]" dest="(: ( [27907,27908]"/>
  <match src="identifier: subtractedValue [19054,19069]" dest="identifier: totalSupply [17015,17026]"/>
  <match src="call_argument [108922,108928]" dest="call_argument [37835,37841]"/>
  <match src="identifier: kLast [64099,64104]" dest="identifier: kLast [20933,20938]"/>
  <match src="primitive_type [21906,21913]" dest="primitive_type [64900,64907]"/>
  <match src=",: , [62854,62855]" dest=",: , [19688,19689]"/>
  <match src="uint256: uint256 [59866,59873]" dest="uint256: uint256 [24840,24847]"/>
  <match src="(: ( [90906,90907]" dest="(: ( [73463,73464]"/>
  <match src="visibility [101567,101573]" dest="visibility [30480,30486]"/>
  <match src="): ) [104629,104630]" dest="): ) [33542,33543]"/>
  <match src="}: } [113477,113478]" dest="}: } [42390,42391]"/>
  <match src="identifier: isContract [94014,94024]" dest="identifier: isContract [74872,74882]"/>
  <match src="uint256: uint256 [15867,15874]" dest="uint256: uint256 [16761,16768]"/>
  <match src="binary_expression [44954,44964]" dest="binary_expression [50145,50155]"/>
  <match src="identifier: getInitialStakeMultiple [54650,54673]" dest="identifier: getInitialStakeMultiple [13763,13786]"/>
  <match src="identifier: provider [100897,100905]" dest="identifier: provider [29810,29818]"/>
  <match src="return_type_definition [103136,103153]" dest="return_type_definition [32049,32066]"/>
  <match src="): ) [40413,40414]" dest="): ) [45604,45605]"/>
  <match src="function_definition [4638,4801]" dest="function_definition [5202,5365]"/>
  <match src="&gt;&gt;: &gt;&gt; [47467,47469]" dest="&gt;&gt;: &gt;&gt; [52658,52660]"/>
  <match src="returns: returns [7189,7196]" dest="returns: returns [7753,7760]"/>
  <match src="identifier: implementation [115376,115390]" dest="identifier: implementation [70320,70334]"/>
  <match src="parameter [43917,43930]" dest="parameter [49108,49121]"/>
  <match src="uint256: uint256 [95724,95731]" dest="uint256: uint256 [26942,26949]"/>
  <match src="(: ( [113121,113122]" dest="(: ( [42034,42035]"/>
  <match src="binary_expression [5724,5730]" dest="binary_expression [6288,6294]"/>
  <match src="identifier: payloadA [41178,41186]" dest="identifier: payloadA [46369,46377]"/>
  <match src="identifier: MinterAdded [24235,24246]" dest="identifier: CouponRedemption [59905,59921]"/>
  <match src="function_body [104341,104392]" dest="function_body [33254,33305]"/>
  <match src="visibility [36299,36306]" dest="visibility [57961,57968]"/>
  <match src="primitive_type [11739,11746]" dest="primitive_type [21737,21744]"/>
  <match src="type_name [62809,62813]" dest="type_name [19643,19647]"/>
  <match src="=: = [89610,89611]" dest="=: = [72618,72619]"/>
  <match src=".: . [89289,89290]" dest=".: . [73245,73246]"/>
  <match src="identifier: redeemable [107900,107910]" dest="identifier: redeemable [36813,36823]"/>
  <match src="type_name [105615,105619]" dest="type_name [34528,34532]"/>
  <match src="parameter [3310,3317]" dest="parameter [3874,3881]"/>
  <match src="returns: returns [54923,54930]" dest="returns: returns [14036,14043]"/>
  <match src="contract_declaration [106544,113924]" dest="contract_declaration [35457,42837]"/>
  <match src="type_name [62607,62614]" dest="type_name [19441,19448]"/>
  <match src="call_expression [115364,115393]" dest="call_expression [70308,70337]"/>
  <match src="type_name [103145,103152]" dest="type_name [32058,32065]"/>
  <match src=".: . [40115,40116]" dest=".: . [45306,45307]"/>
  <match src=",: , [104610,104611]" dest=",: , [33523,33524]"/>
  <match src=".: . [108605,108606]" dest=".: . [37518,37519]"/>
  <match src="identifier: Constants [52350,52359]" dest="identifier: Constants [11463,11472]"/>
  <match src="comment: // for each byte (starting from the lowest byte), populate the result with two characters [46166,46255]" dest="comment: // for each byte (starting from the lowest byte), populate the result with two characters [51357,51446]"/>
  <match src=".: . [107863,107864]" dest=".: . [36776,36777]"/>
  <match src="(: ( [47428,47429]" dest="(: ( [52619,52620]"/>
  <match src="identifier: owner [102675,102680]" dest="identifier: owner [31588,31593]"/>
  <match src="!=: != [44479,44481]" dest="!=: != [49670,49672]"/>
  <match src="(: ( [33589,33590]" dest="(: ( [67581,67582]"/>
  <match src="parameter [101377,101384]" dest="parameter [30290,30297]"/>
  <match src="call_argument [43624,43643]" dest="call_argument [48815,48834]"/>
  <match src="member_expression [104957,104974]" dest="member_expression [33870,33887]"/>
  <match src="primitive_type [63591,63598]" dest="primitive_type [20425,20432]"/>
  <match src="}: } [7990,7991]" dest="}: } [8554,8555]"/>
  <match src="identifier: balanceCheck [91822,91834]" dest="identifier: balanceCheck [58324,58336]"/>
  <match src="): ) [92147,92148]" dest="): ) [57707,57708]"/>
  <match src="=: = [108052,108053]" dest="=: = [36965,36966]"/>
  <match src="uint256: uint256 [87877,87884]" dest="uint256: uint256 [71101,71108]"/>
  <match src="identifier: fluidUntil [95574,95584]" dest="identifier: fluidUntil [26792,26802]"/>
  <match src="primitive_type [86244,86248]" dest="primitive_type [61757,61761]"/>
  <match src="return: return [100243,100249]" dest="return: return [29156,29162]"/>
  <match src="parameter [7378,7389]" dest="parameter [7942,7953]"/>
  <match src="=: = [89544,89545]" dest="=: = [62677,62678]"/>
  <match src="[: [ [109870,109871]" dest="[: [ [38783,38784]"/>
  <match src="member_expression [89668,89707]" dest="member_expression [72653,72662]"/>
  <match src="identifier: result [44657,44663]" dest="identifier: result [49848,49854]"/>
  <match src="function_definition [11582,11637]" dest="function_definition [21580,21635]"/>
  <match src="): ) [88384,88385]" dest="): ) [71469,71470]"/>
  <match src="type_name [96202,96206]" dest="type_name [27420,27424]"/>
  <match src=".: . [111596,111597]" dest=".: . [40509,40510]"/>
  <match src="address: address [63830,63837]" dest="address: address [20664,20671]"/>
  <match src="pure: pure [10096,10100]" dest="pure: pure [10660,10664]"/>
  <match src="variable_declaration [35093,35124]" dest="variable_declaration [61983,62028]"/>
  <match src="return_type_definition [80443,80457]" dest="return_type_definition [82095,82109]"/>
  <match src="(: ( [109186,109187]" dest="(: ( [38099,38100]"/>
  <match src="{: { [75291,75292]" dest="{: { [67868,67869]"/>
  <match src=".: . [102615,102616]" dest=".: . [31528,31529]"/>
  <match src="(: ( [56770,56771]" dest="(: ( [15883,15884]"/>
  <match src="identifier: D256 [8053,8057]" dest="identifier: D256 [8617,8621]"/>
  <match src="visibility [54104,54111]" dest="visibility [13217,13224]"/>
  <match src="}: } [1424,1425]" dest="}: } [1988,1989]"/>
  <match src="comment: /*     Copyright 2020 Reflective Dollar Devs, based on the works of the Dynamic Dollar Devs and the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [56841,57516]" dest="comment: /*     Copyright 2020 Reflective Dollar Devs, based on the works of the Dynamic Dollar Devs and the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [15954,16629]"/>
  <match src="uint256: uint256 [107014,107021]" dest="uint256: uint256 [35927,35934]"/>
  <match src="(: ( [103144,103145]" dest="(: ( [32057,32058]"/>
  <match src="call_argument [45241,45247]" dest="call_argument [50432,50438]"/>
  <match src="identifier: Decimal [75270,75277]" dest="identifier: Decimal [68567,68574]"/>
  <match src="event: event [88263,88268]" dest="event: event [83201,83206]"/>
  <match src="identifier: _state [112986,112992]" dest="identifier: _state [41899,41905]"/>
  <match src="array_access [111882,111907]" dest="array_access [40795,40820]"/>
  <match src="identifier: incrementBalanceOfCoupons [109299,109324]" dest="identifier: incrementBalanceOfCoupons [38212,38237]"/>
  <match src="assignment_expression [47599,47609]" dest="assignment_expression [52790,52800]"/>
  <match src="{: { [111661,111662]" dest="{: { [40574,40575]"/>
  <match src="type_name [47223,47230]" dest="type_name [52414,52421]"/>
  <match src="member_expression [112257,112285]" dest="member_expression [41170,41198]"/>
  <match src="identifier: epoch [102846,102851]" dest="identifier: epoch [31759,31764]"/>
  <match src="&quot;: &quot; [61379,61380]" dest="&quot;: &quot; [79285,79286]"/>
  <match src="identifier: FILE [92905,92909]" dest="identifier: FILE [81569,81573]"/>
  <match src="call_argument [109652,109658]" dest="call_argument [38565,38571]"/>
  <match src="visibility [90114,90122]" dest="visibility [73045,73053]"/>
  <match src="expression_statement [89258,89345]" dest="expression_statement [73217,73262]"/>
  <match src="uint256: uint256 [2015,2022]" dest="uint256: uint256 [2579,2586]"/>
  <match src="member_expression [107752,107771]" dest="member_expression [36665,36684]"/>
  <match src=",: , [9275,9276]" dest=",: , [9839,9840]"/>
  <match src="type_name [45856,45863]" dest="type_name [51047,51054]"/>
  <match src="user_defined_type [8217,8221]" dest="user_defined_type [8781,8785]"/>
  <match src="constant: constant [53057,53065]" dest="constant: constant [12170,12178]"/>
  <match src="(: ( [115390,115391]" dest="(: ( [70334,70335]"/>
  <match src="binary_expression [4789,4794]" dest="binary_expression [5353,5358]"/>
  <match src="(: ( [103478,103479]" dest="(: ( [32391,32392]"/>
  <match src="identifier: account [101803,101810]" dest="identifier: account [30716,30723]"/>
  <match src="member_expression [90487,90497]" dest="member_expression [73195,73205]"/>
  <match src="identifier: _state [108852,108858]" dest="identifier: _state [37765,37771]"/>
  <match src="type_name [63305,63312]" dest="type_name [20139,20146]"/>
  <match src="identifier: stringify [41615,41624]" dest="identifier: stringify [46806,46815]"/>
  <match src="inheritance_specifier [116379,116389]" dest="inheritance_specifier [71065,71075]"/>
  <match src="identifier: decrementBalanceOfStaged [109018,109042]" dest="identifier: decrementBalanceOfStaged [37931,37955]"/>
  <match src="primitive_type [39926,39933]" dest="primitive_type [45117,45124]"/>
  <match src="): ) [91414,91415]" dest="): ) [80855,80856]"/>
  <match src="member_expression [103617,103629]" dest="member_expression [32530,32542]"/>
  <match src="identifier: msg [86578,86581]" dest="identifier: msg [80365,80368]"/>
  <match src="member_expression [111455,111606]" dest="member_expression [40368,40519]"/>
  <match src="call_expression [91304,91333]" dest="call_expression [79055,79076]"/>
  <match src="function_body [54245,54272]" dest="function_body [13358,13385]"/>
  <match src="view: view [102161,102165]" dest="view: view [31074,31078]"/>
  <match src="parameter [8903,8907]" dest="parameter [9467,9471]"/>
  <match src="(: ( [91708,91709]" dest="(: ( [64644,64645]"/>
  <match src="function: function [107549,107557]" dest="function: function [36462,36470]"/>
  <match src="expression_statement [4743,4773]" dest="expression_statement [5307,5337]"/>
  <match src="return_type_definition [54227,54244]" dest="return_type_definition [13340,13357]"/>
  <match src="primitive_type [46938,46943]" dest="primitive_type [52129,52134]"/>
  <match src="public: public [104311,104317]" dest="public: public [33224,33230]"/>
  <match src="identifier: amount [23183,23189]" dest="identifier: amount [54953,54959]"/>
  <match src="identifier: balanceOfPhantom [81502,81518]" dest="identifier: newSupply [67995,68004]"/>
  <match src="identifier: _state [112168,112174]" dest="identifier: _state [41081,41087]"/>
  <match src="event_definition [106618,106690]" dest="event_definition [35531,35603]"/>
  <match src="array_access [108852,108876]" dest="array_access [37765,37789]"/>
  <match src="[: [ [111833,111834]" dest="[: [ [40746,40747]"/>
  <match src="&gt;=: &gt;= [92226,92228]" dest="&gt;=: &gt;= [57787,57789]"/>
  <match src="number_literal: 64 [47548,47550]" dest="number_literal: 64 [52739,52741]"/>
  <match src="call_argument [8391,8398]" dest="call_argument [8955,8962]"/>
  <match src="=: = [109623,109624]" dest="=: = [38536,38537]"/>
  <match src="state_mutability [62563,62567]" dest="state_mutability [19397,19401]"/>
  <match src="identifier: that [92845,92849]" dest="identifier: that [81471,81475]"/>
  <match src="identifier: self [7246,7250]" dest="identifier: self [7810,7814]"/>
  <match src="pure: pure [6169,6173]" dest="pure: pure [6733,6737]"/>
  <match src="&quot;: &quot; [89305,89306]" dest="&quot;: &quot; [81587,81588]"/>
  <match src="function: function [112881,112889]" dest="function: function [41794,41802]"/>
  <match src="function: function [88859,88867]" dest="function: function [72225,72233]"/>
  <match src="identifier: initialized [113818,113829]" dest="identifier: initialized [42731,42742]"/>
  <match src="identifier: recipient [107003,107012]" dest="identifier: recipient [35916,35925]"/>
  <match src="call_argument [42730,43010]" dest="call_argument [47921,48201]"/>
  <match src="=: = [107654,107655]" dest="=: = [36567,36568]"/>
  <match src="type_name [7918,7922]" dest="type_name [8482,8486]"/>
  <match src="type_name [38902,38906]" dest="type_name [44093,44097]"/>
  <match src="identifier: getBootstrappingPeriod [104501,104523]" dest="identifier: getBootstrappingPeriod [33414,33436]"/>
  <match src="(: ( [59907,59908]" dest="(: ( [24881,24882]"/>
  <match src="call_expression [74896,74909]" dest="call_expression [67030,67045]"/>
  <match src="(: ( [92246,92247]" dest="(: ( [57807,57808]"/>
  <match src="bytes32: bytes32 [72776,72783]" dest="bytes32: bytes32 [78591,78598]"/>
  <match src="): ) [89785,89786]" dest="): ) [72755,72756]"/>
  <match src="identifier: r [63197,63198]" dest="identifier: r [20031,20032]"/>
  <match src="member_expression [108054,108079]" dest="member_expression [36967,36992]"/>
  <match src="[: [ [109407,109408]" dest="[: [ [38320,38321]"/>
  <match src=".: . [31998,31999]" dest=".: . [67885,67886]"/>
  <match src="call_expression [8156,8179]" dest="call_expression [8720,8743]"/>
  <match src=",: , [63522,63523]" dest=",: , [20356,20357]"/>
  <match src="member_expression [111192,111203]" dest="member_expression [40105,40116]"/>
  <match src=".: . [109614,109615]" dest=".: . [38527,38528]"/>
  <match src="state_variable_declaration [38784,38821]" dest="state_variable_declaration [43975,44012]"/>
  <match src="parameter [113141,113155]" dest="parameter [42054,42068]"/>
  <match src="library: library [5601,5608]" dest="library: library [6165,6172]"/>
  <match src="call_argument [39077,39248]" dest="call_argument [44268,44439]"/>
  <match src=",: , [8997,8998]" dest=",: , [9561,9562]"/>
  <match src="number_literal: 0 [7594,7595]" dest="number_literal: 0 [8158,8159]"/>
  <match src=".: . [55348,55349]" dest=".: . [14461,14462]"/>
  <match src="(: ( [63694,63695]" dest="(: ( [20528,20529]"/>
  <match src="(: ( [55733,55734]" dest="(: ( [14846,14847]"/>
  <match src="identifier: amount [108363,108369]" dest="identifier: amount [37276,37282]"/>
  <match src="]: ] [109834,109835]" dest="]: ] [38747,38748]"/>
  <match src=",: , [91719,91720]" dest=",: , [64655,64656]"/>
  <match src="variable_declaration_tuple [91426,91461]" dest="variable_declaration_tuple [60823,60884]"/>
  <match src="primitive_type [38561,38568]" dest="primitive_type [43752,43759]"/>
  <match src=",: , [110502,110503]" dest=",: , [39415,39416]"/>
  <match src=".: . [114838,114839]" dest=".: . [69782,69783]"/>
  <match src="view: view [100750,100754]" dest="view: view [29663,29667]"/>
  <match src="identifier: a [1394,1395]" dest="identifier: a [1958,1959]"/>
  <match src="{: { [55240,55241]" dest="{: { [14353,14354]"/>
  <match src="uint256: uint256 [102976,102983]" dest="uint256: uint256 [31889,31896]"/>
  <match src="primitive_type [105159,105166]" dest="primitive_type [34072,34079]"/>
  <match src="function_body [112418,112533]" dest="function_body [41331,41446]"/>
  <match src="): ) [2612,2613]" dest="): ) [3176,3177]"/>
  <match src="call_argument [58106,58119]" dest="call_argument [54566,54579]"/>
  <match src="identifier: balanceOfStaged [101707,101722]" dest="identifier: balanceOfStaged [30620,30635]"/>
  <match src="): ) [41026,41027]" dest="): ) [46217,46218]"/>
  <match src="primitive_type [59866,59873]" dest="primitive_type [24840,24847]"/>
  <match src=".: . [110656,110657]" dest=".: . [39569,39570]"/>
  <match src="type_name [9315,9319]" dest="type_name [9879,9883]"/>
  <match src="memory: memory [43977,43983]" dest="memory: memory [49168,49174]"/>
  <match src="parameter [98366,98391]" dest="parameter [77016,77041]"/>
  <match src="return: return [10203,10209]" dest="return: return [10767,10773]"/>
  <match src="type_cast_expression [47037,47060]" dest="type_cast_expression [52228,52251]"/>
  <match src="function_body [847,914]" dest="function_body [1411,1478]"/>
  <match src="identifier: bootstrappingAt [104407,104422]" dest="identifier: bootstrappingAt [33320,33335]"/>
  <match src="revert_statement [41967,42484]" dest="revert_statement [47158,47675]"/>
  <match src="function: function [107935,107943]" dest="function: function [36848,36856]"/>
  <match src="uint112: uint112 [63890,63897]" dest="uint112: uint112 [20724,20731]"/>
  <match src="type_name [8266,8272]" dest="type_name [8830,8836]"/>
  <match src="): ) [58119,58120]" dest="): ) [54587,54588]"/>
  <match src="(: ( [115244,115245]" dest="(: ( [70188,70189]"/>
  <match src=",: , [40261,40262]" dest=",: , [45452,45453]"/>
  <match src="return_type_definition [54808,54825]" dest="return_type_definition [13921,13938]"/>
  <match src="identifier: value [8794,8799]" dest="identifier: value [9358,9363]"/>
  <match src="}: } [95751,95752]" dest="}: } [26969,26970]"/>
  <match src="parameter [39950,39966]" dest="parameter [45141,45157]"/>
  <match src="call_expression [116504,116512]" dest="call_expression [54103,54111]"/>
  <match src="return_type_definition [100755,100772]" dest="return_type_definition [29668,29685]"/>
  <match src="(: ( [6414,6415]" dest="(: ( [6978,6979]"/>
  <match src="): ) [64105,64106]" dest="): ) [20939,20940]"/>
  <match src="comment: /*     Copyright 2020 Reflective Dollar Devs, based on the works of the Dynamic Dollar Devs and the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [71183,71858]" dest="comment: /*     Copyright 2020 Reflective Dollar Devs, based on the works of the Dynamic Dollar Devs and the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [25843,26518]"/>
  <match src=",: , [86588,86589]" dest=",: , [80375,80376]"/>
  <match src="): ) [103285,103286]" dest="): ) [32198,32199]"/>
  <match src="pure: pure [54434,54438]" dest="pure: pure [13547,13551]"/>
  <match src="call_expression [58031,58120]" dest="call_expression [54535,54588]"/>
  <match src="visibility [6325,6333]" dest="visibility [6889,6897]"/>
  <match src=",: , [109753,109754]" dest=",: , [38666,38667]"/>
  <match src="&quot;: &quot; [19229,19230]" dest="&quot;: &quot; [73335,73336]"/>
  <match src="): ) [39247,39248]" dest="): ) [44438,44439]"/>
  <match src="call_expression [30828,30900]" dest="call_expression [67273,67343]"/>
  <match src="parameter [34907,34949]" dest="parameter [68277,68302]"/>
  <match src="&quot;: &quot; [34554,34555]" dest="&quot;: &quot; [63016,63017]"/>
  <match src="function: function [40523,40531]" dest="function: function [45714,45722]"/>
  <match src="function_body [109107,109284]" dest="function_body [38020,38197]"/>
  <match src="member_expression [111017,111029]" dest="member_expression [39930,39942]"/>
  <match src="(: ( [89701,89702]" dest="(: ( [72696,72697]"/>
  <match src="type_name [39950,39957]" dest="type_name [45141,45148]"/>
  <match src="return: return [56266,56272]" dest="return: return [15379,15385]"/>
  <match src="state_mutability [824,828]" dest="state_mutability [1388,1392]"/>
  <match src="function: function [94005,94013]" dest="function: function [74863,74871]"/>
  <match src="expression_statement [109495,109591]" dest="expression_statement [38408,38504]"/>
  <match src="return_statement [102022,102084]" dest="return_statement [30935,30997]"/>
  <match src="identifier: value [6643,6648]" dest="identifier: value [7207,7212]"/>
  <match src="return: return [54355,54361]" dest="return: return [13468,13474]"/>
  <match src="identifier: div [3233,3236]" dest="identifier: div [3797,3800]"/>
  <match src="view: view [101051,101055]" dest="view: view [29964,29968]"/>
  <match src="{: { [98402,98403]" dest="{: { [77052,77053]"/>
  <match src="primitive_type [101761,101768]" dest="primitive_type [30674,30681]"/>
  <match src="uint: uint [63261,63265]" dest="uint: uint [20095,20099]"/>
  <match src="function_definition [12008,12085]" dest="function_definition [22006,22083]"/>
  <match src="uint256: uint256 [39950,39957]" dest="uint256: uint256 [45141,45148]"/>
  <match src="using: using [27514,27519]" dest="using: using [16683,16688]"/>
  <match src="call_argument [17747,17753]" dest="call_argument [58802,58808]"/>
  <match src="memory: memory [46944,46950]" dest="memory: memory [52135,52141]"/>
  <match src="identifier: candidate [113004,113013]" dest="identifier: candidate [41917,41926]"/>
  <match src="identifier: candidate [113653,113662]" dest="identifier: candidate [42566,42575]"/>
  <match src="function_body [111810,111943]" dest="function_body [40723,40856]"/>
  <match src="identifier: Decimal [29916,29923]" dest="identifier: Decimal [17690,17697]"/>
  <match src="parameter [47733,47737]" dest="parameter [52924,52928]"/>
  <match src="assembly: assembly [105806,105814]" dest="assembly: assembly [34719,34727]"/>
  <match src="parameter [100520,100527]" dest="parameter [29433,29440]"/>
  <match src="): ) [21222,21223]" dest="): ) [65519,65520]"/>
  <match src="{: { [95639,95640]" dest="{: { [26857,26858]"/>
  <match src="): ) [102065,102066]" dest="): ) [30978,30979]"/>
  <match src="address: address [25571,25578]" dest="address: address [60110,60117]"/>
  <match src="function_definition [109290,109666]" dest="function_definition [38203,38579]"/>
  <match src="call_struct_argument [8567,8611]" dest="call_struct_argument [9131,9175]"/>
  <match src="address: address [102122,102129]" dest="address: address [31035,31042]"/>
  <match src="member_expression [103171,103190]" dest="member_expression [32084,32103]"/>
  <match src="uint256: uint256 [91585,91592]" dest="uint256: uint256 [63071,63078]"/>
  <match src="primitive_type [104162,104169]" dest="primitive_type [33075,33082]"/>
  <match src="assignment_expression [110899,110949]" dest="assignment_expression [39812,39862]"/>
  <match src="visibility [112409,112417]" dest="visibility [41322,41330]"/>
  <match src="address: address [101723,101730]" dest="address: address [30636,30643]"/>
  <match src="/=: /= [45696,45698]" dest="/=: /= [50887,50889]"/>
  <match src="(: ( [101650,101651]" dest="(: ( [30563,30564]"/>
  <match src="identifier: stringifyTruncated [43464,43482]" dest="identifier: stringifyTruncated [48655,48673]"/>
  <match src="identifier: add [85202,85205]" dest="identifier: add [60586,60589]"/>
  <match src=".: . [108649,108650]" dest=".: . [37562,37563]"/>
  <match src="primitive_type [59992,59999]" dest="primitive_type [24966,24973]"/>
  <match src="parameter [64470,64477]" dest="parameter [21304,21311]"/>
  <match src="identifier: candidates [112489,112499]" dest="identifier: candidates [41402,41412]"/>
  <match src="user_defined_type [15792,15799]" dest="user_defined_type [59540,59551]"/>
  <match src="function: function [62975,62983]" dest="function: function [19809,19817]"/>
  <match src="call_argument [83713,83719]" dest="call_argument [55159,55165]"/>
  <match src="return: return [105494,105500]" dest="return: return [34407,34413]"/>
  <match src="type_name [96302,96309]" dest="type_name [27520,27527]"/>
  <match src="(: ( [61192,61193]" dest="(: ( [65595,65596]"/>
  <match src="call_argument [40440,40446]" dest="call_argument [45631,45637]"/>
  <match src="call_argument [8789,8799]" dest="call_argument [9353,9363]"/>
  <match src="&quot;: &quot; [89057,89058]" dest="&quot;: &quot; [72435,72436]"/>
  <match src="identifier: recipient [20173,20182]" dest="identifier: recipient [65829,65838]"/>
  <match src="external: external [63211,63219]" dest="external: external [20045,20053]"/>
  <match src="identifier: unfreeze [110109,110117]" dest="identifier: unfreeze [39022,39030]"/>
  <match src="return: return [105218,105224]" dest="return: return [34131,34137]"/>
  <match src="address: address [63720,63727]" dest="address: address [20554,20561]"/>
  <match src="address: address [22038,22045]" dest="address: address [64954,64961]"/>
  <match src="{: { [102884,102885]" dest="{: { [31797,31798]"/>
  <match src="type_name [40565,40572]" dest="type_name [45756,45763]"/>
  <match src="new: new [46006,46009]" dest="new: new [51197,51200]"/>
  <match src="type_name [24297,24304]" dest="type_name [59802,59809]"/>
  <match src="user_defined_type [34791,34803]" dest="user_defined_type [67503,67515]"/>
  <match src="primitive_type [105331,105338]" dest="primitive_type [34244,34251]"/>
  <match src="event: event [62133,62138]" dest="event: event [18967,18972]"/>
  <match src=".: . [103392,103393]" dest=".: . [32305,32306]"/>
  <match src="): ) [91729,91730]" dest="): ) [64669,64670]"/>
  <match src="expression_statement [111882,111937]" dest="expression_statement [40795,40850]"/>
  <match src="parameter [41785,41797]" dest="parameter [46976,46988]"/>
  <match src="): ) [90901,90902]" dest="): ) [73458,73459]"/>
  <match src="parameter [19788,19802]" dest="parameter [65220,65234]"/>
  <match src="view: view [101257,101261]" dest="view: view [30170,30174]"/>
  <match src="external: external [13146,13154]" dest="external: external [23144,23152]"/>
  <match src="identifier: account [108725,108732]" dest="identifier: account [37638,37645]"/>
  <match src="identifier: sub [107676,107679]" dest="identifier: sub [36589,36592]"/>
  <match src=",: , [108495,108496]" dest=",: , [37408,37409]"/>
  <match src="identifier: D256 [10060,10064]" dest="identifier: D256 [10624,10628]"/>
  <match src=",: , [43674,43675]" dest=",: , [48865,48866]"/>
  <match src="string [89954,89989]" dest="string [72898,72936]"/>
  <match src=".: . [104248,104249]" dest=".: . [33161,33162]"/>
  <match src=",: , [63906,63907]" dest=",: , [20740,20741]"/>
  <match src="call_argument [90785,90796]" dest="call_argument [80425,80434]"/>
  <match src="visibility [375,383]" dest="visibility [939,947]"/>
  <match src=".: . [116532,116533]" dest=".: . [68648,68649]"/>
  <match src="primitive_type [46357,46364]" dest="primitive_type [51548,51555]"/>
  <match src="): ) [98391,98392]" dest="): ) [77041,77042]"/>
  <match src="identifier: Vote [104662,104666]" dest="identifier: Vote [33575,33579]"/>
  <match src="]: ] [102793,102794]" dest="]: ] [31706,31707]"/>
  <match src="visibility [62720,62728]" dest="visibility [19554,19562]"/>
  <match src="(: ( [89623,89624]" dest="(: ( [72631,72632]"/>
  <match src="revert: revert [40695,40701]" dest="revert: revert [45886,45892]"/>
  <match src="[: [ [46122,46123]" dest="[: [ [51313,51314]"/>
  <match src="identifier: stringifyTruncated [39569,39587]" dest="identifier: stringifyTruncated [44760,44778]"/>
  <match src="contract_body [87852,93104]" dest="contract_body [71076,73962]"/>
  <match src="): ) [98652,98653]" dest="): ) [77302,77303]"/>
  <match src="identifier: totalDebt [101238,101247]" dest="identifier: totalDebt [30151,30160]"/>
  <match src="type_name [54817,54824]" dest="type_name [13930,13937]"/>
  <match src="bytes32: bytes32 [40587,40594]" dest="bytes32: bytes32 [45778,45785]"/>
  <match src="=&gt;: =&gt; [96746,96748]" dest="=&gt;: =&gt; [27964,27966]"/>
  <match src="private: private [74221,74228]" dest="private: private [82082,82089]"/>
  <match src="identifier: supply [96384,96390]" dest="identifier: supply [27602,27608]"/>
  <match src="returns: returns [63658,63665]" dest="returns: returns [20492,20499]"/>
  <match src=".: . [6654,6655]" dest=".: . [7218,7219]"/>
  <match src="visibility [52837,52844]" dest="visibility [11950,11957]"/>
  <match src="function_definition [103230,103420]" dest="function_definition [32143,32333]"/>
  <match src="identifier: stringify [43548,43557]" dest="identifier: stringify [48739,48748]"/>
  <match src="address: address [100614,100621]" dest="address: address [29527,29534]"/>
  <match src="member_expression [112820,112860]" dest="member_expression [41733,41773]"/>
  <match src="identifier: couponsExpiration [103839,103856]" dest="identifier: couponsExpiration [32752,32769]"/>
  <match src="): ) [7011,7012]" dest="): ) [7575,7576]"/>
  <match src="library: library [95,102]" dest="library: library [659,666]"/>
  <match src="state_mutability [56782,56786]" dest="state_mutability [15895,15899]"/>
  <match src="identifier: account [81538,81545]" dest="identifier: account [54085,54092]"/>
  <match src="visibility [105717,105723]" dest="visibility [34630,34636]"/>
  <match src="identifier: IUniswapV2Pair [86635,86649]" dest="identifier: dollar [54492,54498]"/>
  <match src="parameter [107969,107983]" dest="parameter [36882,36896]"/>
  <match src="type_name [63908,63915]" dest="type_name [20742,20749]"/>
  <match src="identifier: burn [59798,59802]" dest="identifier: burn [24772,24776]"/>
  <match src="-: - [47551,47552]" dest="-: - [52742,52743]"/>
  <match src="identifier: reserve0 [86915,86923]" dest="identifier: burnAmount [63677,63687]"/>
  <match src="identifier: that [91286,91290]" dest="identifier: that [80766,80770]"/>
  <match src="user_defined_type [55189,55201]" dest="user_defined_type [14302,14314]"/>
  <match src="function_definition [55280,55434]" dest="function_definition [14393,14547]"/>
  <match src="uint256: uint256 [88183,88190]" dest="uint256: uint256 [71202,71209]"/>
  <match src="(: ( [88677,88678]" dest="(: ( [83368,83369]"/>
  <match src="uint256: uint256 [41857,41864]" dest="uint256: uint256 [47048,47055]"/>
  <match src="identifier: implementation [115273,115287]" dest="identifier: implementation [70217,70231]"/>
  <match src="primitive_type [95594,95601]" dest="primitive_type [26812,26819]"/>
  <match src="boolean_literal [106830,106835]" dest="boolean_literal [35743,35748]"/>
  <match src="user_defined_type [32673,32685]" dest="user_defined_type [62219,62231]"/>
  <match src="return_statement [28944,28951]" dest="return_statement [67390,67397]"/>
  <match src="call_argument [452,458]" dest="call_argument [1016,1022]"/>
  <match src="identifier: value [62275,62280]" dest="identifier: value [19109,19114]"/>
  <match src="state_mutability [101880,101884]" dest="state_mutability [30793,30797]"/>
  <match src="memory: memory [7005,7011]" dest="memory: memory [7569,7575]"/>
  <match src=".: . [6642,6643]" dest=".: . [7206,7207]"/>
  <match src="identifier: vote [112681,112685]" dest="identifier: vote [41594,41598]"/>
  <match src="event_paramater [63343,63355]" dest="event_paramater [20177,20189]"/>
  <match src="type_name [78115,78122]" dest="type_name [66839,66846]"/>
  <match src="primitive_type [110118,110125]" dest="primitive_type [39031,39038]"/>
  <match src="call_argument [7063,7074]" dest="call_argument [7627,7638]"/>
  <match src="call_argument [113456,113462]" dest="call_argument [42369,42375]"/>
  <match src="type_name [95840,95849]" dest="type_name [27058,27067]"/>
  <match src="uint256: uint256 [75540,75547]" dest="uint256: uint256 [73616,73623]"/>
  <match src="constant: constant [38618,38626]" dest="constant: constant [43809,43817]"/>
  <match src="identifier: amount [61172,61178]" dest="identifier: amount [54581,54587]"/>
  <match src="state_mutability [55955,55959]" dest="state_mutability [15068,15072]"/>
  <match src="call_argument [58779,58798]" dest="call_argument [55003,55047]"/>
  <match src="new: new [44815,44818]" dest="new: new [50006,50009]"/>
  <match src="identifier: balance [108033,108040]" dest="identifier: balance [36946,36953]"/>
  <match src="identifier: deadline [63170,63178]" dest="identifier: deadline [20004,20012]"/>
  <match src="(: ( [89488,89489]" dest="(: ( [72579,72580]"/>
  <match src="return: return [103610,103616]" dest="return: return [32523,32529]"/>
  <match src="identifier: Constants [85206,85215]" dest="identifier: Constants [60590,60599]"/>
  <match src="indexed: indexed [98143,98150]" dest="indexed: indexed [76793,76800]"/>
  <match src="primitive_type [15867,15874]" dest="primitive_type [16761,16768]"/>
  <match src="=: = [2025,2026]" dest="=: = [2589,2590]"/>
  <match src="identifier: FILE [115124,115128]" dest="identifier: FILE [70068,70072]"/>
  <match src="identifier: value [55393,55398]" dest="identifier: value [14506,14511]"/>
  <match src="parameter [55079,55086]" dest="parameter [14192,14199]"/>
  <match src="=: = [53314,53315]" dest="=: = [12427,12428]"/>
  <match src="identifier: Decimal [55189,55196]" dest="identifier: Decimal [14302,14309]"/>
  <match src="call_argument [89242,89247]" dest="call_argument [72338,72343]"/>
  <match src="): ) [44964,44965]" dest="): ) [50155,50156]"/>
  <match src="function_definition [8960,9090]" dest="function_definition [9524,9654]"/>
  <match src="identifier: candidates [113875,113885]" dest="identifier: candidates [42788,42798]"/>
  <match src="{: { [104940,104941]" dest="{: { [33853,33854]"/>
  <match src="identifier: reason [109890,109896]" dest="identifier: reason [38803,38809]"/>
  <match src="function_definition [8627,8825]" dest="function_definition [9191,9389]"/>
  <match src="identifier: sender [63321,63327]" dest="identifier: sender [20155,20161]"/>
  <match src="): ) [105377,105378]" dest="): ) [34290,34291]"/>
  <match src="identifier: price [75816,75821]" dest="identifier: price [68854,68859]"/>
  <match src="function_definition [44840,45740]" dest="function_definition [50031,50931]"/>
  <match src="(: ( [33647,33648]" dest="(: ( [62789,62790]"/>
  <match src="parameter [63890,63906]" dest="parameter [20724,20740]"/>
  <match src="{: { [55392,55393]" dest="{: { [14505,14506]"/>
  <match src="type_name [101588,101595]" dest="type_name [30501,30508]"/>
  <match src="string_literal [22548,22586]" dest="string_literal [72062,72100]"/>
  <match src="{: { [108214,108215]" dest="{: { [37127,37128]"/>
  <match src="identifier: start [88364,88369]" dest="identifier: start [71424,71429]"/>
  <match src=",: , [40369,40370]" dest=",: , [45560,45561]"/>
  <match src="{: { [44966,44967]" dest="{: { [50157,50158]"/>
  <match src="identifier: externalAmountAfterTax [34883,34905]" dest="identifier: price [67853,67858]"/>
  <match src="primitive_type [98366,98373]" dest="primitive_type [77016,77023]"/>
  <match src="(: ( [108295,108296]" dest="(: ( [37208,37209]"/>
  <match src="(: ( [55827,55828]" dest="(: ( [14940,14941]"/>
  <match src="call_argument [36062,36063]" dest="call_argument [18471,18472]"/>
  <match src="call_argument [107529,107535]" dest="call_argument [36442,36448]"/>
  <match src="type_name [63165,63169]" dest="type_name [19999,20003]"/>
  <match src="function_body [9176,9223]" dest="function_body [9740,9787]"/>
  <match src="function_definition [54876,55019]" dest="function_definition [13989,14132]"/>
  <match src="bool: bool [9571,9575]" dest="bool: bool [10135,10139]"/>
  <match src="returns: returns [56066,56073]" dest="returns: returns [15179,15186]"/>
  <match src="type_name [7147,7154]" dest="type_name [7711,7718]"/>
  <match src="parameter [44922,44934]" dest="parameter [50113,50125]"/>
  <match src="address: address [63357,63364]" dest="address: address [20191,20198]"/>
  <match src="uint: uint [64298,64302]" dest="uint: uint [21132,21136]"/>
  <match src="type_name [353,360]" dest="type_name [917,924]"/>
  <match src="number_literal: 0 [103357,103358]" dest="number_literal: 0 [32270,32271]"/>
  <match src="{: { [107624,107625]" dest="{: { [36537,36538]"/>
  <match src="string [89023,89058]" dest="string [72398,72436]"/>
  <match src="primitive_type [4064,4071]" dest="primitive_type [4628,4635]"/>
  <match src="primitive_type [101271,101278]" dest="primitive_type [30184,30191]"/>
  <match src="state_mutability [56061,56065]" dest="state_mutability [15174,15178]"/>
  <match src="identifier: value [6228,6233]" dest="identifier: value [6792,6797]"/>
  <match src="visibility [4701,4709]" dest="visibility [5265,5273]"/>
  <match src="call_argument [89823,89833]" dest="call_argument [73366,73376]"/>
  <match src="(: ( [104422,104423]" dest="(: ( [33335,33336]"/>
  <match src="member_expression [102746,102785]" dest="member_expression [31659,31698]"/>
  <match src="}: } [9089,9090]" dest="}: } [9653,9654]"/>
  <match src="library: library [93607,93614]" dest="library: library [74465,74472]"/>
  <match src="type_name [13568,13572]" dest="type_name [23566,23570]"/>
  <match src="expression_statement [108224,108304]" dest="expression_statement [37137,37217]"/>
  <match src="identifier: _state [108538,108544]" dest="identifier: _state [37451,37457]"/>
  <match src="type_name [28093,28100]" dest="type_name [54874,54881]"/>
  <match src="parameter [80452,80456]" dest="parameter [82104,82108]"/>
  <match src=".: . [32737,32738]" dest=".: . [68364,68365]"/>
  <match src="return: return [106932,106938]" dest="return: return [35845,35851]"/>
  <match src="type_name [5642,5649]" dest="type_name [6206,6213]"/>
  <match src="member_expression [9708,9722]" dest="member_expression [10272,10286]"/>
  <match src="number_literal: 0 [9608,9609]" dest="number_literal: 0 [10172,10173]"/>
  <match src="state_mutability [9301,9305]" dest="state_mutability [9865,9869]"/>
  <match src="visibility [81117,81123]" dest="visibility [61624,61630]"/>
  <match src="expression_statement [98412,98449]" dest="expression_statement [77062,77099]"/>
  <match src="identifier: D256 [7000,7004]" dest="identifier: D256 [7564,7568]"/>
  <match src="function_definition [13096,13170]" dest="function_definition [23094,23168]"/>
  <match src="identifier: OwnershipTransferred [25550,25570]" dest="identifier: CouponTransfer [60095,60109]"/>
  <match src="identifier: balance [109219,109226]" dest="identifier: balance [38132,38139]"/>
  <match src="call_argument [22046,22047]" dest="call_argument [64962,64963]"/>
  <match src="[: [ [109963,109964]" dest="[: [ [38876,38877]"/>
  <match src="&quot;: &quot; [27341,27342]" dest="&quot;: &quot; [55545,55546]"/>
  <match src="member_expression [108573,108605]" dest="member_expression [37486,37518]"/>
  <match src="function: function [56642,56650]" dest="function: function [15755,15763]"/>
  <match src="(: ( [107047,107048]" dest="(: ( [35960,35961]"/>
  <match src="identifier: _state [112257,112263]" dest="identifier: _state [41170,41176]"/>
  <match src="public: public [100499,100505]" dest="public: public [29412,29418]"/>
  <match src="uint256: uint256 [102175,102182]" dest="uint256: uint256 [31088,31095]"/>
  <match src="call_argument [90907,90908]" dest="call_argument [73464,73465]"/>
  <match src="call_expression [90895,90909]" dest="call_expression [73452,73466]"/>
  <match src="(: ( [105477,105478]" dest="(: ( [34390,34391]"/>
  <match src="): ) [54951,54952]" dest="): ) [14064,14065]"/>
  <match src="identifier: votes [112664,112669]" dest="identifier: votes [41577,41582]"/>
  <match src="identifier: amount [31824,31830]" dest="identifier: amount [55118,55124]"/>
  <match src="using_directive [82801,82828]" dest="using_directive [83092,83119]"/>
  <match src="identifier: candidate [104975,104984]" dest="identifier: candidate [33888,33897]"/>
  <match src="block_statement [30393,30608]" dest="block_statement [65673,65791]"/>
  <match src="parameter [109357,109371]" dest="parameter [38270,38284]"/>
  <match src="expression_statement [2042,2099]" dest="expression_statement [2606,2663]"/>
  <match src="identifier: spender [13121,13128]" dest="identifier: spender [23119,23126]"/>
  <match src="constant: constant [38706,38714]" dest="constant: constant [43897,43905]"/>
  <match src="identifier: b [4097,4098]" dest="identifier: b [4661,4662]"/>
  <match src=".: . [112488,112489]" dest=".: . [41401,41402]"/>
  <match src="uint256: uint256 [103479,103486]" dest="uint256: uint256 [32392,32399]"/>
  <match src="byte: byte [45600,45604]" dest="byte: byte [50791,50795]"/>
  <match src=".: . [74875,74876]" dest=".: . [67009,67010]"/>
  <match src="function: function [55025,55033]" dest="function: function [14138,14146]"/>
  <match src="identifier: account [60000,60007]" dest="identifier: account [24974,24981]"/>
  <match src="type_name [72950,72957]" dest="type_name [78892,78899]"/>
  <match src="&quot;: &quot; [115342,115343]" dest="&quot;: &quot; [70286,70287]"/>
  <match src="identifier: period [104986,104992]" dest="identifier: period [33899,33905]"/>
  <match src="address: address [12394,12401]" dest="address: address [22392,22399]"/>
  <match src="function_body [100873,100919]" dest="function_body [29786,29832]"/>
  <match src="return_statement [104213,104261]" dest="return_statement [33126,33174]"/>
  <match src="identifier: candidates [113032,113042]" dest="identifier: candidates [41945,41955]"/>
  <match src="call_expression [90846,90860]" dest="call_expression [54822,54836]"/>
  <match src="user_defined_type [7918,7922]" dest="user_defined_type [8482,8486]"/>
  <match src="=: = [53794,53795]" dest="=: = [12907,12908]"/>
  <match src="identifier: i [45595,45596]" dest="identifier: i [50786,50787]"/>
  <match src="public: public [103730,103736]" dest="public: public [32643,32649]"/>
  <match src="type_alias [79403,79411]" dest="type_alias [78528,78536]"/>
  <match src="returns: returns [3301,3308]" dest="returns: returns [3865,3872]"/>
  <match src="parameter [8981,8997]" dest="parameter [9545,9561]"/>
  <match src="visibility [1700,1708]" dest="visibility [2264,2272]"/>
  <match src="parameter [13113,13128]" dest="parameter [23111,23126]"/>
  <match src="visibility [113359,113367]" dest="visibility [42272,42280]"/>
  <match src="type_name [5930,5934]" dest="type_name [6494,6498]"/>
  <match src="type_name [9456,9460]" dest="type_name [10020,10024]"/>
  <match src="type_name [64479,64486]" dest="type_name [21313,21320]"/>
  <match src="identifier: _state [103191,103197]" dest="identifier: _state [32104,32110]"/>
  <match src="public: public [101044,101050]" dest="public: public [29957,29963]"/>
  <match src="function: function [109290,109298]" dest="function: function [38203,38211]"/>
  <match src="identifier: burn [64216,64220]" dest="identifier: burn [21050,21054]"/>
  <match src="binary_expression [9338,9360]" dest="binary_expression [9902,9924]"/>
  <match src="variable_declaration [101913,101932]" dest="variable_declaration [30826,30845]"/>
  <match src="string_literal [89954,89989]" dest="string_literal [72898,72936]"/>
  <match src="(: ( [46720,46721]" dest="(: ( [51911,51912]"/>
  <match src="identifier: value [89403,89408]" dest="identifier: candidate [81261,81270]"/>
  <match src=".: . [103402,103403]" dest=".: . [32315,32316]"/>
  <match src="external: external [90976,90984]" dest="external: external [81328,81336]"/>
  <match src="array_access [109392,109416]" dest="array_access [38305,38329]"/>
  <match src="view: view [104445,104449]" dest="view: view [33358,33362]"/>
  <match src="function_body [103902,103965]" dest="function_body [32815,32878]"/>
  <match src="state_mutability [1310,1314]" dest="state_mutability [1874,1878]"/>
  <match src=".: . [90886,90887]" dest=".: . [73443,73444]"/>
  <match src="{: { [109382,109383]" dest="{: { [38295,38296]"/>
  <match src=",: , [91214,91215]" dest=",: , [81413,81414]"/>
  <match src="call_expression [42853,42879]" dest="call_expression [48044,48070]"/>
  <match src="view: view [103131,103135]" dest="view: view [32044,32048]"/>
  <match src="array_access [46587,46605]" dest="array_access [51778,51796]"/>
  <match src="{: { [89470,89471]" dest="{: { [72561,72562]"/>
  <match src="(: ( [62483,62484]" dest="(: ( [19317,19318]"/>
  <match src="call_argument [90701,90736]" dest="call_argument [81171,81185]"/>
  <match src="identifier: nextEpochStart [103376,103390]" dest="identifier: nextEpochStart [32289,32303]"/>
  <match src="view: view [103465,103469]" dest="view: view [32378,32382]"/>
  <match src="primitive_type [88099,88106]" dest="primitive_type [71115,71122]"/>
  <match src="): ) [115288,115289]" dest="): ) [70232,70233]"/>
  <match src="uint256: uint256 [78393,78400]" dest="uint256: uint256 [66940,66947]"/>
  <match src=",: , [109193,109194]" dest=",: , [38106,38107]"/>
  <match src="function: function [100179,100187]" dest="function: function [29092,29100]"/>
  <match src="struct_declaration [96351,96520]" dest="struct_declaration [27569,27738]"/>
  <match src="identifier: D256 [6624,6628]" dest="identifier: D256 [7188,7192]"/>
  <match src="(: ( [792,793]" dest="(: ( [1356,1357]"/>
  <match src="identifier: _state [113214,113220]" dest="identifier: _state [42127,42133]"/>
  <match src="return: return [103350,103356]" dest="return: return [32263,32269]"/>
  <match src="}: } [7092,7093]" dest="}: } [7656,7657]"/>
  <match src=",: , [61209,61210]" dest=",: , [65643,65644]"/>
  <match src="{: { [101495,101496]" dest="{: { [30408,30409]"/>
  <match src="): ) [108517,108518]" dest="): ) [37430,37431]"/>
  <match src="struct_member [96278,96293]" dest="struct_member [27496,27511]"/>
  <match src="): ) [64277,64278]" dest="): ) [21111,21112]"/>
  <match src="(: ( [23113,23114]" dest="(: ( [54873,54874]"/>
  <match src="identifier: b [8483,8484]" dest="identifier: b [9047,9048]"/>
  <match src="pure: pure [9442,9446]" dest="pure: pure [10006,10010]"/>
  <match src="{: { [41932,41933]" dest="{: { [47123,47124]"/>
  <match src="(: ( [39668,39669]" dest="(: ( [44859,44860]"/>
  <match src=":: : [6233,6234]" dest=":: : [6797,6798]"/>
  <match src="parameter [63830,63837]" dest="parameter [20664,20671]"/>
  <match src="type_name [86757,86764]" dest="type_name [81309,81316]"/>
  <match src="): ) [85241,85242]" dest="): ) [60621,60622]"/>
  <match src="member_expression [102029,102070]" dest="member_expression [30942,30983]"/>
  <match src="parameter [12026,12043]" dest="parameter [22024,22041]"/>
  <match src=".: . [101636,101637]" dest=".: . [30549,30550]"/>
  <match src=",: , [4757,4758]" dest=",: , [5321,5322]"/>
  <match src="return_statement [857,908]" dest="return_statement [1421,1472]"/>
  <match src="variable_declaration [113626,113641]" dest="variable_declaration [42539,42554]"/>
  <match src="identifier: spender [110479,110486]" dest="identifier: spender [39392,39399]"/>
  <match src="call_argument [89109,89119]" dest="call_argument [72462,72472]"/>
  <match src="(: ( [42684,42685]" dest="(: ( [47875,47876]"/>
  <match src="identifier: LPAREN [43516,43522]" dest="identifier: LPAREN [48707,48713]"/>
  <match src="(: ( [44858,44859]" dest="(: ( [50049,50050]"/>
  <match src=",: , [86139,86140]" dest=",: , [55682,55683]"/>
  <match src="identifier: shift [47553,47558]" dest="identifier: shift [52744,52749]"/>
  <match src=".: . [7058,7059]" dest=".: . [7622,7623]"/>
  <match src="uint256: uint256 [7147,7154]" dest="uint256: uint256 [7711,7718]"/>
  <match src="contract_declaration [114602,115414]" dest="contract_declaration [69546,70358]"/>
  <match src="identifier: sender [91864,91870]" dest="identifier: sender [80460,80466]"/>
  <match src="): ) [107406,107407]" dest="): ) [36319,36320]"/>
  <match src="call_argument [91054,91071]" dest="call_argument [58005,58022]"/>
  <match src="!: ! [115258,115259]" dest="!: ! [70202,70203]"/>
  <match src="identifier: _state [107634,107640]" dest="identifier: _state [36547,36553]"/>
  <match src="(: ( [101564,101565]" dest="(: ( [30477,30478]"/>
  <match src="identifier: totalBonded [81165,81176]" dest="identifier: balance [72610,72617]"/>
  <match src="call_argument [39569,39593]" dest="call_argument [44760,44784]"/>
  <match src="memory: memory [6050,6056]" dest="memory: memory [6614,6620]"/>
  <match src=".: . [92242,92243]" dest=".: . [57803,57804]"/>
  <match src="comment: /*     Copyright 2020 Dynamic Dollar Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [51697,52341]" dest="comment: /*     Copyright 2020 Dynamic Dollar Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [10810,11454]"/>
  <match src="identifier: amount [32528,32534]" dest="identifier: amount [58378,58384]"/>
  <match src="}: } [115413,115414]" dest="}: } [70357,70358]"/>
  <match src="event_paramater [63275,63287]" dest="event_paramater [20109,20121]"/>
  <match src="identifier: _state [108026,108032]" dest="identifier: _state [36939,36945]"/>
  <match src="identifier: sender [88955,88961]" dest="identifier: sender [71903,71909]"/>
  <match src="(: ( [101376,101377]" dest="(: ( [30289,30290]"/>
  <match src="identifier: balance [108563,108570]" dest="identifier: balance [37476,37483]"/>
  <match src="call_argument [103191,103216]" dest="call_argument [32104,32129]"/>
  <match src="event_paramater [61566,61578]" dest="event_paramater [78785,78810]"/>
  <match src="type_name [33478,33490]" dest="type_name [82191,82203]"/>
  <match src="call_argument [7670,7691]" dest="call_argument [8234,8255]"/>
  <match src="type_name [95669,95676]" dest="type_name [26887,26894]"/>
  <match src="primitive_type [104296,104303]" dest="primitive_type [33209,33216]"/>
  <match src="(: ( [63774,63775]" dest="(: ( [20608,20609]"/>
  <match src="call_expression [44815,44827]" dest="call_expression [50006,50018]"/>
  <match src="type_name [53088,53095]" dest="type_name [12201,12208]"/>
  <match src="(: ( [86577,86578]" dest="(: ( [80364,80365]"/>
  <match src="uint256: uint256 [52532,52539]" dest="uint256: uint256 [11645,11652]"/>
  <match src="identifier: _state [109495,109501]" dest="identifier: _state [38408,38414]"/>
  <match src=".: . [103623,103624]" dest=".: . [32536,32537]"/>
  <match src="function: function [104398,104406]" dest="function: function [33311,33319]"/>
  <match src="call_argument [1351,1357]" dest="call_argument [1915,1921]"/>
  <match src="parameter [8027,8043]" dest="parameter [8591,8607]"/>
  <match src="(: ( [56074,56075]" dest="(: ( [15187,15188]"/>
  <match src="string_literal [90798,90834]" dest="string_literal [81030,81048]"/>
  <match src="type_name [109043,109050]" dest="type_name [37956,37963]"/>
  <match src="parameter [113520,113537]" dest="parameter [42433,42450]"/>
  <match src="variable_declaration [81494,81518]" dest="variable_declaration [67987,68004]"/>
  <match src="comment: // take last decimal digit [45551,45577]" dest="comment: // take last decimal digit [50742,50768]"/>
  <match src="address: address [86741,86748]" dest="address: address [78939,78946]"/>
  <match src="memory: memory [8113,8119]" dest="memory: memory [8677,8683]"/>
  <match src="identifier: pair [61574,61578]" dest="identifier: candidate [78801,78810]"/>
  <match src="): ) [90061,90062]" dest="): ) [73935,73936]"/>
  <match src="{: { [44628,44629]" dest="{: { [49819,49820]"/>
  <match src="primitive_type [104612,104619]" dest="primitive_type [33525,33532]"/>
  <match src="array_access [44469,44478]" dest="array_access [49660,49669]"/>
  <match src="identifier: epoch [109964,109969]" dest="identifier: epoch [38877,38882]"/>
  <match src=",: , [86594,86595]" dest=",: , [80386,80387]"/>
  <match src="): ) [88479,88480]" dest="): ) [71371,71372]"/>
  <match src="array_access [105638,105666]" dest="array_access [34551,34579]"/>
  <match src="&quot;: &quot; [91404,91405]" dest="&quot;: &quot; [80845,80846]"/>
  <match src="identifier: tax [32011,32014]" dest="identifier: delta [67898,67903]"/>
  <match src="(: ( [107234,107235]" dest="(: ( [36147,36148]"/>
  <match src="enum_value: UNDECIDED [95989,95998]" dest="enum_value: UNDECIDED [27207,27216]"/>
  <match src="primitive_type [96638,96645]" dest="primitive_type [27856,27863]"/>
  <match src="identifier: _state [109151,109157]" dest="identifier: _state [38064,38070]"/>
  <match src="]: ] [102302,102303]" dest="]: ] [31215,31216]"/>
  <match src="struct: struct [96043,96049]" dest="struct: struct [27261,27267]"/>
  <match src="): ) [99007,99008]" dest="): ) [77657,77658]"/>
  <match src="member_expression [91616,91658]" dest="member_expression [73634,73662]"/>
  <match src="external: external [62791,62799]" dest="external: external [19625,19633]"/>
  <match src="): ) [33700,33701]" dest="): ) [62893,62894]"/>
  <match src="): ) [42482,42483]" dest="): ) [47673,47674]"/>
  <match src="member_expression [109117,109132]" dest="member_expression [38030,38045]"/>
  <match src="variable_declaration [45360,45369]" dest="variable_declaration [50551,50560]"/>
  <match src="identifier: abi [42019,42022]" dest="identifier: abi [47210,47213]"/>
  <match src=",: , [38933,38934]" dest=",: , [44124,44125]"/>
  <match src=",: , [33662,33663]" dest=",: , [62821,62822]"/>
  <match src="view: view [105317,105321]" dest="view: view [34230,34234]"/>
  <match src=",: , [41398,41399]" dest=",: , [46589,46590]"/>
  <match src="revert_statement [42678,43043]" dest="revert_statement [47869,48234]"/>
  <match src="state_mutability [41236,41240]" dest="state_mutability [46427,46431]"/>
  <match src="(: ( [4018,4019]" dest="(: ( [4582,4583]"/>
  <match src="): ) [109775,109776]" dest="): ) [38688,38689]"/>
  <match src=",: , [108744,108745]" dest=",: , [37657,37658]"/>
  <match src="user_defined_type [5930,5934]" dest="user_defined_type [6494,6498]"/>
  <match src="type_name [96138,96145]" dest="type_name [27356,27363]"/>
  <match src="}: } [94589,94590]" dest="}: } [75447,75448]"/>
  <match src="identifier: ADVANCE_INCENTIVE [55647,55664]" dest="identifier: ADVANCE_INCENTIVE [14760,14777]"/>
  <match src="): ) [90908,90909]" dest="): ) [73465,73466]"/>
  <match src="call_argument [41539,41558]" dest="call_argument [46730,46749]"/>
  <match src="visibility [56212,56220]" dest="visibility [15325,15333]"/>
  <match src="return: return [101290,101296]" dest="return: return [30203,30209]"/>
  <match src="string [98946,99007]" dest="string [77596,77657]"/>
  <match src="identifier: sender [91713,91719]" dest="identifier: sender [64649,64655]"/>
  <match src="type_name [13164,13168]" dest="type_name [23162,23166]"/>
  <match src="&quot;: &quot; [114672,114673]" dest="&quot;: &quot; [69616,69617]"/>
  <match src="call_argument [103397,103412]" dest="call_argument [32310,32325]"/>
  <match src="return: return [47630,47636]" dest="return: return [52821,52827]"/>
  <match src="identifier: epochs [109957,109963]" dest="identifier: epochs [38870,38876]"/>
  <match src="external: external [62428,62436]" dest="external: external [19262,19270]"/>
  <match src="comment: // determine the length of the input by finding the location of the last non-zero byte [44102,44188]" dest="comment: // determine the length of the input by finding the location of the last non-zero byte [49293,49379]"/>
  <match src="user_defined_type [96701,96712]" dest="user_defined_type [27919,27930]"/>
  <match src="type_name [88371,88378]" dest="type_name [71431,71438]"/>
  <match src="identifier: _state [102546,102552]" dest="identifier: _state [31459,31465]"/>
  <match src=",: , [43195,43196]" dest=",: , [48386,48387]"/>
  <match src="member_expression [111882,111895]" dest="member_expression [40795,40808]"/>
  <match src="constant: constant [5708,5716]" dest="constant: constant [6272,6280]"/>
  <match src="expression_statement [47599,47610]" dest="expression_statement [52790,52801]"/>
  <match src="block_statement [43275,43816]" dest="block_statement [48466,49007]"/>
  <match src="identifier: coupons [109615,109622]" dest="identifier: coupons [38528,38535]"/>
  <match src="identifier: minPeriod [54549,54558]" dest="identifier: minPeriod [13662,13671]"/>
  <match src="comment: /* Governance */ [53197,53213]" dest="comment: /* Governance */ [12310,12326]"/>
  <match src="bytes2: bytes2 [38699,38705]" dest="bytes2: bytes2 [43890,43896]"/>
  <match src="(: ( [42708,42709]" dest="(: ( [47899,47900]"/>
  <match src="private: private [9898,9905]" dest="private: private [10462,10469]"/>
  <match src="identifier: that [91159,91163]" dest="identifier: that [81355,81359]"/>
  <match src="identifier: stringify [42937,42946]" dest="identifier: stringify [48128,48137]"/>
  <match src="primitive_type [100405,100412]" dest="primitive_type [29318,29325]"/>
  <match src="identifier: dollar [100806,100812]" dest="identifier: dollar [29719,29725]"/>
  <match src=",: , [91870,91871]" dest=",: , [80466,80467]"/>
  <match src="expression_statement [88672,88727]" dest="expression_statement [83362,83401]"/>
  <match src="function_body [100127,100173]" dest="function_body [29040,29086]"/>
  <match src="identifier: balanceOfRewardedWithPhantom [81355,81383]" dest="identifier: balanceBeforeDeposit [71811,71831]"/>
  <match src="type_cast_expression [47831,47856]" dest="type_cast_expression [53022,53047]"/>
  <match src="=: = [54076,54077]" dest="=: = [13189,13190]"/>
  <match src="call_expression [109838,109897]" dest="call_expression [38751,38810]"/>
  <match src="}: } [110414,110415]" dest="}: } [39327,39328]"/>
  <match src="(: ( [104331,104332]" dest="(: ( [33244,33245]"/>
  <match src="call_expression [56113,56150]" dest="call_expression [15226,15263]"/>
  <match src="identifier: b [7875,7876]" dest="identifier: b [8439,8440]"/>
  <match src="identifier: accounts [96664,96672]" dest="identifier: accounts [27882,27890]"/>
  <match src="visibility [9292,9300]" dest="visibility [9856,9864]"/>
  <match src="call_argument [7237,7265]" dest="call_argument [7801,7829]"/>
  <match src="user_defined_type [6045,6049]" dest="user_defined_type [6609,6613]"/>
  <match src="identifier: c [452,453]" dest="identifier: c [1016,1017]"/>
  <match src="uint: uint [64079,64083]" dest="uint: uint [20913,20917]"/>
  <match src="visibility [111801,111809]" dest="visibility [40714,40722]"/>
  <match src="identifier: initialize [64459,64469]" dest="identifier: initialize [21293,21303]"/>
  <match src="]: ] [111692,111693]" dest="]: ] [40605,40606]"/>
  <match src="function: function [59831,59839]" dest="function: function [24805,24813]"/>
  <match src="view: view [101747,101751]" dest="view: view [30660,30664]"/>
  <match src="identifier: _state [111820,111826]" dest="identifier: _state [40733,40739]"/>
  <match src="identifier: Transfer [106624,106632]" dest="identifier: Transfer [35537,35545]"/>
  <match src="call_expression [110192,110199]" dest="call_expression [39105,39112]"/>
  <match src="call_argument [58990,58994]" dest="call_argument [62982,62986]"/>
  <match src="==: == [9605,9607]" dest="==: == [10169,10171]"/>
  <match src="function_body [41932,42500]" dest="function_body [47123,47691]"/>
  <match src="member_expression [102584,102598]" dest="member_expression [31497,31511]"/>
  <match src="address: address [58158,58165]" dest="address: address [80521,80528]"/>
  <match src="type_name [10037,10041]" dest="type_name [10601,10605]"/>
  <match src="uint256: uint256 [4030,4037]" dest="uint256: uint256 [4594,4601]"/>
  <match src="identifier: amount [32841,32847]" dest="identifier: amount [17391,17397]"/>
  <match src="=: = [111237,111238]" dest="=: = [40150,40151]"/>
  <match src="identifier: sub [109258,109261]" dest="identifier: sub [38171,38174]"/>
  <match src="identifier: addedValue [18360,18370]" dest="identifier: totalDebt [17044,17053]"/>
  <match src="uint256: uint256 [103591,103598]" dest="uint256: uint256 [32504,32511]"/>
  <match src="return_type_definition [1714,1731]" dest="return_type_definition [2278,2295]"/>
  <match src="identifier: candidates [112788,112798]" dest="identifier: candidates [41701,41711]"/>
  <match src="if_statement [42653,43053]" dest="if_statement [47844,48244]"/>
  <match src="user_defined_type [87829,87840]" dest="user_defined_type [71056,71063]"/>
  <match src="identifier: ADVANCE_INCENTIVE [53518,53535]" dest="identifier: ADVANCE_INCENTIVE [12631,12648]"/>
  <match src="identifier: D256 [30673,30677]" dest="identifier: D256 [17791,17795]"/>
  <match src="expression_statement [85156,85243]" dest="expression_statement [60632,60686]"/>
  <match src="primitive_type [1251,1258]" dest="primitive_type [1815,1822]"/>
  <match src="solidity_version_comparison_operator [49,51]" dest="solidity_version_comparison_operator [49,51]"/>
  <match src="type_name [90164,90171]" dest="type_name [62585,62592]"/>
  <match src="string: string [62327,62333]" dest="string: string [19161,19167]"/>
  <match src="pure: pure [55607,55611]" dest="pure: pure [14720,14724]"/>
  <match src="primitive_type [62327,62333]" dest="primitive_type [19161,19167]"/>
  <match src="private: private [54039,54046]" dest="private: private [13152,13159]"/>
  <match src="type_name [73048,73055]" dest="type_name [59872,59879]"/>
  <match src="member_expression [110766,110791]" dest="member_expression [39679,39704]"/>
  <match src="parameter [63926,63951]" dest="parameter [20760,20785]"/>
  <match src="emit: emit [90026,90030]" dest="emit: emit [73898,73902]"/>
  <match src="variable_declaration_statement [66284,66291]" dest="variable_declaration_statement [64352,64421]"/>
  <match src="address: address [112727,112734]" dest="address: address [41640,41647]"/>
  <match src="identifier: D256 [34835,34839]" dest="identifier: D256 [18621,18625]"/>
  <match src="function_definition [103101,103224]" dest="function_definition [32014,32137]"/>
  <match src="type_name [105025,105032]" dest="type_name [33938,33945]"/>
  <match src="enum_value: Fluid [95362,95367]" dest="enum_value: Fluid [26580,26585]"/>
  <match src="(: ( [96737,96738]" dest="(: ( [27955,27956]"/>
  <match src="call_argument [43548,43567]" dest="call_argument [48739,48758]"/>
  <match src="return: return [100424,100430]" dest="return: return [29337,29343]"/>
  <match src="call_argument [58961,58976]" dest="call_argument [54749,54766]"/>
  <match src="primitive_type [22972,22979]" dest="primitive_type [16817,16824]"/>
  <match src="uint256: uint256 [54817,54824]" dest="uint256: uint256 [13930,13937]"/>
  <match src="): ) [56416,56417]" dest="): ) [15529,15530]"/>
  <match src="(: ( [63304,63305]" dest="(: ( [20138,20139]"/>
  <match src="call_argument [42772,42796]" dest="call_argument [47963,47987]"/>
  <match src="user_defined_type [9400,9404]" dest="user_defined_type [9964,9968]"/>
  <match src="call_argument [8367,8409]" dest="call_argument [8931,8973]"/>
  <match src="event_definition [25544,25628]" dest="event_definition [60089,60190]"/>
  <match src="identifier: epochs [111827,111833]" dest="identifier: epochs [40740,40746]"/>
  <match src="&quot;: &quot; [73628,73629]" dest="&quot;: &quot; [81932,81933]"/>
  <match src="parameter [103715,103728]" dest="parameter [32628,32641]"/>
  <match src="user_defined_type [31991,32003]" dest="user_defined_type [67878,67890]"/>
  <match src="event_paramater [25571,25600]" dest="event_paramater [60110,60130]"/>
  <match src="): ) [110086,110087]" dest="): ) [38999,39000]"/>
  <match src="identifier: newLock [113703,113710]" dest="identifier: newLock [42616,42623]"/>
  <match src="): ) [104908,104909]" dest="): ) [33821,33822]"/>
  <match src="call_argument [108725,108732]" dest="call_argument [37638,37645]"/>
  <match src=",: , [63198,63199]" dest=",: , [20032,20033]"/>
  <match src="primitive_type [19924,19931]" dest="primitive_type [65364,65371]"/>
  <match src="return_type_definition [100645,100662]" dest="return_type_definition [29558,29575]"/>
  <match src=",: , [62248,62249]" dest=",: , [19082,19083]"/>
  <match src="identifier: timeLeftInEpoch [103239,103254]" dest="identifier: timeLeftInEpoch [32152,32167]"/>
  <match src="): ) [102182,102183]" dest="): ) [31095,31096]"/>
  <match src="return_type_definition [104185,104202]" dest="return_type_definition [33098,33115]"/>
  <match src="parameter [9315,9319]" dest="parameter [9879,9883]"/>
  <match src="visibility [6014,6022]" dest="visibility [6578,6586]"/>
  <match src="state_mutability [39431,39435]" dest="state_mutability [44622,44626]"/>
  <match src="uint256: uint256 [111986,111993]" dest="uint256: uint256 [40899,40906]"/>
  <match src="primitive_type [40587,40594]" dest="primitive_type [45778,45785]"/>
  <match src="(: ( [111078,111079]" dest="(: ( [39991,39992]"/>
  <match src="call_argument [92219,92223]" dest="call_argument [57780,57784]"/>
  <match src="visibility [63752,63760]" dest="visibility [20586,20594]"/>
  <match src="}: } [115411,115412]" dest="}: } [70355,70356]"/>
  <match src="identifier: b [871,872]" dest="identifier: b [1435,1436]"/>
  <match src="identifier: Epoch [96701,96706]" dest="identifier: Epoch [27919,27924]"/>
  <match src="function_body [105208,105267]" dest="function_body [34121,34180]"/>
  <match src=".: . [89193,89194]" dest=".: . [72289,72290]"/>
  <match src="function: function [41743,41751]" dest="function: function [46934,46942]"/>
  <match src="address: address [59992,59999]" dest="address: address [24966,24973]"/>
  <match src="address: address [110456,110463]" dest="address: address [39369,39376]"/>
  <match src="identifier: add [108359,108362]" dest="identifier: add [37272,37275]"/>
  <match src="&quot;: &quot; [460,461]" dest="&quot;: &quot; [1024,1025]"/>
  <match src="identifier: SafeMath [15820,15828]" dest="identifier: SafeMath [59571,59579]"/>
  <match src=",: , [9858,9859]" dest=",: , [10422,10423]"/>
  <match src=",: , [7074,7075]" dest=",: , [7638,7639]"/>
  <match src="type_name [96730,96765]" dest="type_name [27948,27983]"/>
  <match src="byte: byte [47922,47926]" dest="byte: byte [53113,53117]"/>
  <match src="assignment_expression [107752,107775]" dest="assignment_expression [36665,36688]"/>
  <match src="member_expression [101403,101428]" dest="member_expression [30316,30341]"/>
  <match src="member_expression [111426,111438]" dest="member_expression [40339,40351]"/>
  <match src="(: ( [98601,98602]" dest="(: ( [77251,77252]"/>
  <match src="type_cast_expression [47826,47857]" dest="type_cast_expression [53017,53048]"/>
  <match src="call_argument [40204,40209]" dest="call_argument [45395,45400]"/>
  <match src="identifier: impl [105829,105833]" dest="identifier: impl [34742,34746]"/>
  <match src="binary_expression [58845,58868]" dest="binary_expression [64515,64540]"/>
  <match src=".: . [107191,107192]" dest=".: . [36104,36105]"/>
  <match src="identifier: abi [39077,39080]" dest="identifier: abi [44268,44271]"/>
  <match src="): ) [100382,100383]" dest="): ) [29295,29296]"/>
  <match src=",: , [42538,42539]" dest=",: , [47729,47730]"/>
  <match src="primitive_type [804,811]" dest="primitive_type [1368,1375]"/>
  <match src="member_expression [112781,112798]" dest="member_expression [41694,41711]"/>
  <match src="identifier: name [100084,100088]" dest="identifier: name [28997,29001]"/>
  <match src="): ) [7082,7083]" dest="): ) [7646,7647]"/>
  <match src="identifier: outstanding [103806,103817]" dest="identifier: outstanding [32719,32730]"/>
  <match src="type_name [104931,104938]" dest="type_name [33844,33851]"/>
  <match src="expression_statement [46116,46156]" dest="expression_statement [51307,51347]"/>
  <match src="}: } [2123,2124]" dest="}: } [2687,2688]"/>
  <match src="identifier: reason [113351,113357]" dest="identifier: reason [42264,42270]"/>
  <match src="array_access [113025,113053]" dest="array_access [41938,41966]"/>
  <match src="event: event [88203,88208]" dest="event: event [71222,71227]"/>
  <match src="type_name [106979,106986]" dest="type_name [35892,35899]"/>
  <match src="call_argument [61172,61178]" dest="call_argument [54581,54587]"/>
  <match src="parameter [10037,10050]" dest="parameter [10601,10614]"/>
  <match src=".: . [36015,36016]" dest=".: . [18797,18798]"/>
  <match src="member_expression [113740,113776]" dest="member_expression [42653,42689]"/>
  <match src="identifier: add [110943,110946]" dest="identifier: add [39856,39859]"/>
  <match src="identifier: previousOwner [25587,25600]" dest="identifier: from [60126,60130]"/>
  <match src="parameter [105199,105206]" dest="parameter [34112,34119]"/>
  <match src="bool: bool [62809,62813]" dest="bool: bool [19643,19647]"/>
  <match src="): ) [8339,8340]" dest="): ) [8903,8904]"/>
  <match src="call_argument [90048,90062]" dest="call_argument [73922,73936]"/>
  <match src="identifier: compareTo [9060,9069]" dest="identifier: compareTo [9624,9633]"/>
  <match src="function: function [105552,105560]" dest="function: function [34465,34473]"/>
  <match src="): ) [32156,32157]" dest="): ) [55253,55254]"/>
  <match src=",: , [107398,107399]" dest=",: , [36311,36312]"/>
  <match src="visibility [46754,46761]" dest="visibility [51945,51952]"/>
  <match src="call_struct_argument [55393,55425]" dest="call_struct_argument [14506,14538]"/>
  <match src="]: ] [109457,109458]" dest="]: ] [38370,38371]"/>
  <match src="type_name [9132,9136]" dest="type_name [9696,9700]"/>
  <match src="identifier: FILE [73610,73614]" dest="identifier: FILE [81914,81918]"/>
  <match src="internal: internal [108205,108213]" dest="internal: internal [37118,37126]"/>
  <match src="identifier: Decimal [72757,72764]" dest="identifier: Decimal [66631,66638]"/>
  <match src=".: . [91158,91159]" dest=".: . [81354,81355]"/>
  <match src="identifier: sub [8204,8207]" dest="identifier: sub [8768,8771]"/>
  <match src="return_statement [105218,105261]" dest="return_statement [34131,34174]"/>
  <match src="string: string [112945,112951]" dest="string: string [41858,41864]"/>
  <match src="emit: emit [20151,20155]" dest="emit: emit [65801,65805]"/>
  <match src="call_expression [9060,9078]" dest="call_expression [9624,9642]"/>
  <match src="visibility [54425,54433]" dest="visibility [13538,13546]"/>
  <match src="): ) [108831,108832]" dest="): ) [37744,37745]"/>
  <match src="&gt;: &gt; [44220,44221]" dest="&gt;: &gt; [49411,49412]"/>
  <match src="(: ( [3309,3310]" dest="(: ( [3873,3874]"/>
  <match src=",: , [23129,23130]" dest=",: , [54889,54890]"/>
  <match src="identifier: epoch [103791,103796]" dest="identifier: epoch [32704,32709]"/>
  <match src="expression_statement [23164,23191]" dest="expression_statement [54926,54961]"/>
  <match src="identifier: _state [110045,110051]" dest="identifier: _state [38958,38964]"/>
  <match src="): ) [100527,100528]" dest="): ) [29440,29441]"/>
  <match src="(: ( [86649,86650]" dest="(: ( [54498,54499]"/>
  <match src="address: address [105438,105445]" dest="address: address [34351,34358]"/>
  <match src="return_type_definition [9306,9320]" dest="return_type_definition [9870,9884]"/>
  <match src="state_mutability [7180,7184]" dest="state_mutability [7744,7748]"/>
  <match src="uint256: uint256 [105199,105206]" dest="uint256: uint256 [34112,34119]"/>
  <match src="type_name [88525,88532]" dest="type_name [60264,60271]"/>
  <match src="identifier: input [47837,47842]" dest="identifier: input [53028,53033]"/>
  <match src="uint256: uint256 [398,405]" dest="uint256: uint256 [962,969]"/>
  <match src="primitive_type [29566,29573]" dest="primitive_type [53986,53993]"/>
  <match src="(: ( [90621,90622]" dest="(: ( [72135,72136]"/>
  <match src="type_name [104595,104602]" dest="type_name [33508,33515]"/>
  <match src="identifier: reason [110518,110524]" dest="identifier: reason [39431,39437]"/>
  <match src="if: if [39000,39002]" dest="if: if [44191,44193]"/>
  <match src="return: return [102022,102028]" dest="return: return [30935,30941]"/>
  <match src="return_type_definition [103269,103286]" dest="return_type_definition [32182,32199]"/>
  <match src=":: : [102606,102607]" dest=":: : [31519,31520]"/>
  <match src="parameter [62898,62902]" dest="parameter [19732,19736]"/>
  <match src="{: { [39461,39462]" dest="{: { [44652,44653]"/>
  <match src="revert: revert [39025,39031]" dest="revert: revert [44216,44222]"/>
  <match src="pure: pure [4710,4714]" dest="pure: pure [5274,5278]"/>
  <match src="call_expression [109236,109277]" dest="call_expression [38149,38190]"/>
  <match src="parameter [110316,110330]" dest="parameter [39229,39243]"/>
  <match src="call_argument [91645,91653]" dest="call_argument [73644,73657]"/>
  <match src="primitive_type [105738,105745]" dest="primitive_type [34651,34658]"/>
  <match src="primitive_type [60923,60930]" dest="primitive_type [54389,54396]"/>
  <match src="uint256: uint256 [95840,95847]" dest="uint256: uint256 [27058,27065]"/>
  <match src="call_argument [91103,91130]" dest="call_argument [58054,58079]"/>
  <match src="(: ( [91065,91066]" dest="(: ( [58016,58017]"/>
  <match src="): ) [75720,75721]" dest="): ) [68657,68658]"/>
  <match src="return_statement [9331,9361]" dest="return_statement [9895,9925]"/>
  <match src="): ) [55208,55209]" dest="): ) [14321,14322]"/>
  <match src="function: function [63844,63852]" dest="function: function [20678,20686]"/>
  <match src="user_defined_type [8445,8449]" dest="user_defined_type [9009,9013]"/>
  <match src="): ) [5941,5942]" dest="): ) [6505,6506]"/>
  <match src="=: = [112463,112464]" dest="=: = [41376,41377]"/>
  <match src="type_name [34752,34759]" dest="type_name [55483,55490]"/>
  <match src="): ) [38962,38963]" dest="): ) [44153,44154]"/>
  <match src="address: address [106865,106872]" dest="address: address [35778,35785]"/>
  <match src="string [2673,2701]" dest="string [3237,3265]"/>
  <match src=".: . [112277,112278]" dest=".: . [41190,41191]"/>
  <match src="member_expression [110922,110934]" dest="member_expression [39835,39847]"/>
  <match src="identifier: dollarAmount [86415,86427]" dest="identifier: dollarAmount [62753,62765]"/>
  <match src="function_body [107847,107929]" dest="function_body [36760,36842]"/>
  <match src=",: , [91089,91090]" dest=",: , [58040,58041]"/>
  <match src="function_definition [54397,54635]" dest="function_definition [13510,13748]"/>
  <match src="call_argument [46139,46153]" dest="call_argument [51330,51344]"/>
  <match src="call_argument [9984,9995]" dest="call_argument [10548,10559]"/>
  <match src="identifier: bonded [107381,107387]" dest="identifier: bonded [36294,36300]"/>
  <match src="*: * [46375,46376]" dest="*: * [51566,51567]"/>
  <match src="type_name [43971,43976]" dest="type_name [49162,49167]"/>
  <match src="expression_statement [112781,112869]" dest="expression_statement [41694,41782]"/>
  <match src="type_name [61566,61573]" dest="type_name [78785,78792]"/>
  <match src="identifier: b [9430,9431]" dest="identifier: b [9994,9995]"/>
  <match src="is: is [97629,97631]" dest="is: is [76279,76281]"/>
  <match src="returns: returns [8721,8728]" dest="returns: returns [9285,9292]"/>
  <match src="identifier: amount [17120,17126]" dest="identifier: amount [58760,58766]"/>
  <match src="{: { [8769,8770]" dest="{: { [9333,9334]"/>
  <match src="call_argument [107915,107921]" dest="call_argument [36828,36834]"/>
  <match src="memory: memory [7203,7209]" dest="memory: memory [7767,7773]"/>
  <match src="visibility [103257,103263]" dest="visibility [32170,32176]"/>
  <match src="public: public [102154,102160]" dest="public: public [31067,31073]"/>
  <match src="member_expression [108939,108960]" dest="member_expression [37852,37873]"/>
  <match src="identifier: account [102433,102440]" dest="identifier: account [31346,31353]"/>
  <match src="primitive_type [39885,39889]" dest="primitive_type [45076,45080]"/>
  <match src="[: [ [109424,109425]" dest="[: [ [38337,38338]"/>
  <match src="): ) [41557,41558]" dest="): ) [46748,46749]"/>
  <match src="}: } [92339,92340]" dest="}: } [57916,57917]"/>
  <match src="identifier: amount [83462,83468]" dest="identifier: amount [65066,65072]"/>
  <match src="function: function [113274,113282]" dest="function: function [42187,42195]"/>
  <match src="identifier: initialized [113897,113908]" dest="identifier: initialized [42810,42821]"/>
  <match src="primitive_type [105065,105072]" dest="primitive_type [33978,33985]"/>
  <match src="call_expression [54970,55012]" dest="call_expression [14083,14125]"/>
  <match src=",: , [27339,27340]" dest=",: , [55543,55544]"/>
  <match src="identifier: start [104854,104859]" dest="identifier: start [33767,33772]"/>
  <match src="call_argument [90036,90046]" dest="call_argument [73910,73920]"/>
  <match src="identifier: add [105379,105382]" dest="identifier: add [34292,34295]"/>
  <match src="primitive_type [106754,106761]" dest="primitive_type [35667,35674]"/>
  <match src="visibility [108205,108213]" dest="visibility [37118,37126]"/>
  <match src="uint256: uint256 [96066,96073]" dest="uint256: uint256 [27284,27291]"/>
  <match src="call_argument [89298,89303]" dest="call_argument [73761,73766]"/>
  <match src="member_expression [88912,88922]" dest="member_expression [79007,79017]"/>
  <match src="identifier: reason [108511,108517]" dest="identifier: reason [37424,37430]"/>
  <match src="identifier: equals [8840,8846]" dest="identifier: equals [9404,9410]"/>
  <match src="returns: returns [103742,103749]" dest="returns: returns [32655,32662]"/>
  <match src="uint256: uint256 [44202,44209]" dest="uint256: uint256 [49393,49400]"/>
  <match src="uint256: uint256 [27979,27986]" dest="uint256: uint256 [62566,62573]"/>
  <match src="type_name [95840,95847]" dest="type_name [27058,27065]"/>
  <match src="revert: revert [41967,41973]" dest="revert: revert [47158,47164]"/>
  <match src="identifier: Decimal [31883,31890]" dest="identifier: Decimal [17137,17144]"/>
  <match src="is: is [72722,72724]" dest="is: is [66560,66562]"/>
  <match src="]: ] [110372,110373]" dest="]: ] [39285,39286]"/>
  <match src="array_access [112257,112277]" dest="array_access [41170,41190]"/>
  <match src=".: . [110971,110972]" dest=".: . [39884,39885]"/>
  <match src="}: } [10002,10003]" dest="}: } [10566,10567]"/>
  <match src="member_expression [109538,109566]" dest="member_expression [38451,38479]"/>
  <match src="identifier: start [96074,96079]" dest="identifier: start [27292,27297]"/>
  <match src="identifier: pow [7468,7471]" dest="identifier: pow [8032,8035]"/>
  <match src="public: public [105178,105184]" dest="public: public [34091,34097]"/>
  <match src="primitive_type [61228,61235]" dest="primitive_type [65660,65667]"/>
  <match src="identifier: coupons [109559,109566]" dest="identifier: coupons [38472,38479]"/>
  <match src="member_expression [35987,36019]" dest="member_expression [18784,18801]"/>
  <match src="string_literal [72808,72816]" dest="string_literal [78623,78631]"/>
  <match src="(: ( [100217,100218]" dest="(: ( [29130,29131]"/>
  <match src="call_expression [42378,42397]" dest="call_expression [47569,47588]"/>
  <match src="identifier: b [6424,6425]" dest="identifier: b [6988,6989]"/>
  <match src="uint256: uint256 [47679,47686]" dest="uint256: uint256 [52870,52877]"/>
  <match src="identifier: input [43925,43930]" dest="identifier: input [49116,49121]"/>
  <match src="identifier: epoch [103052,103057]" dest="identifier: epoch [31965,31970]"/>
  <match src="pure: pure [49415,49419]" dest="pure: pure [18653,18657]"/>
  <match src="if: if [102413,102415]" dest="if: if [31326,31328]"/>
  <match src="identifier: that [43074,43078]" dest="identifier: that [48265,48269]"/>
  <match src="identifier: j [45694,45695]" dest="identifier: j [50885,50886]"/>
  <match src="event: event [13743,13748]" dest="event: event [23741,23746]"/>
  <match src="internal: internal [5899,5907]" dest="internal: internal [6463,6471]"/>
  <match src="identifier: D256 [9132,9136]" dest="identifier: D256 [9696,9700]"/>
  <match src="(: ( [105367,105368]" dest="(: ( [34280,34281]"/>
  <match src="type_name [88598,88605]" dest="type_name [73521,73528]"/>
  <match src="state_mutability [2623,2627]" dest="state_mutability [3187,3191]"/>
  <match src="identifier: univ2 [92193,92198]" dest="identifier: dollar [57753,57759]"/>
  <match src="return_statement [100883,100913]" dest="return_statement [29796,29826]"/>
  <match src="type_name [54236,54243]" dest="type_name [13349,13356]"/>
  <match src="call_expression [6653,6664]" dest="call_expression [7217,7228]"/>
  <match src="call_expression [30699,30730]" dest="call_expression [18815,18860]"/>
  <match src="identifier: bond [89431,89435]" dest="identifier: bond [72502,72506]"/>
  <match src="identifier: self [7966,7970]" dest="identifier: self [8530,8534]"/>
  <match src="type_name [111986,111993]" dest="type_name [40899,40906]"/>
  <match src="uint256: uint256 [793,800]" dest="uint256: uint256 [1357,1364]"/>
  <match src="call_argument [88705,88718]" dest="call_argument [83386,83399]"/>
  <match src="type_name [86741,86748]" dest="type_name [78939,78946]"/>
  <match src="member_expression [9594,9604]" dest="member_expression [10158,10168]"/>
  <match src="inheritance_specifier [15792,15799]" dest="inheritance_specifier [59540,59551]"/>
  <match src="pure: pure [8090,8094]" dest="pure: pure [8654,8658]"/>
  <match src="identifier: amount0 [64256,64263]" dest="identifier: amount0 [21090,21097]"/>
  <match src="parameter [4019,4028]" dest="parameter [4583,4592]"/>
  <match src="identifier: symbol [62356,62362]" dest="identifier: symbol [19190,19196]"/>
  <match src="uint256: uint256 [1262,1269]" dest="uint256: uint256 [1826,1833]"/>
  <match src="contract_body [95639,95942]" dest="contract_body [26857,27160]"/>
  <match src="type_name [41146,41153]" dest="type_name [46337,46344]"/>
  <match src="type_name [96400,96407]" dest="type_name [27618,27625]"/>
  <match src="identifier: D256 [34235,34239]" dest="identifier: D256 [17882,17886]"/>
  <match src="expression_statement [22019,22088]" dest="expression_statement [64935,65012]"/>
  <match src="&quot;: &quot; [92322,92323]" dest="&quot;: &quot; [57899,57900]"/>
  <match src="identifier: realBurnValue [30345,30358]" dest="identifier: poolAmount [58108,58118]"/>
  <match src="function: function [103426,103434]" dest="function: function [32339,32347]"/>
  <match src="returns: returns [6178,6185]" dest="returns: returns [6742,6749]"/>
  <match src="primitive_type [47223,47230]" dest="primitive_type [52414,52421]"/>
  <match src="type_alias [106591,106599]" dest="type_alias [35504,35512]"/>
  <match src="internal: internal [54313,54321]" dest="internal: internal [13426,13434]"/>
  <match src="(: ( [8980,8981]" dest="(: ( [9544,9545]"/>
  <match src="uint256: uint256 [54699,54706]" dest="uint256: uint256 [13812,13819]"/>
  <match src="comment: // 1.54 DAI (targeting 4.5% inflation) [52587,52625]" dest="comment: // 1.54 DAI (targeting 4.5% inflation) [11700,11738]"/>
  <match src="identifier: epoch [103933,103938]" dest="identifier: epoch [32846,32851]"/>
  <match src="comment: /**      * Getters      */ [54157,54183]" dest="comment: /**      * Getters      */ [13270,13296]"/>
  <match src="memory: memory [8058,8064]" dest="memory: memory [8622,8628]"/>
  <match src="returns: returns [81129,81136]" dest="returns: returns [61636,61643]"/>
  <match src="call_expression [22019,22087]" dest="call_expression [64935,65011]"/>
  <match src=",: , [362,363]" dest=",: , [926,927]"/>
  <match src="primitive_type [106882,106889]" dest="primitive_type [35795,35802]"/>
  <match src="return_type_definition [62500,62514]" dest="return_type_definition [19334,19348]"/>
  <match src="return: return [103770,103776]" dest="return: return [32683,32689]"/>
  <match src="identifier: _state [109538,109544]" dest="identifier: _state [38451,38457]"/>
  <match src="primitive_type [96089,96096]" dest="primitive_type [27307,27314]"/>
  <match src="type_name [91585,91592]" dest="type_name [63071,63078]"/>
  <match src="type_name [63329,63333]" dest="type_name [20163,20167]"/>
  <match src="}: } [112307,112308]" dest="}: } [41220,41221]"/>
  <match src="return_type_definition [54690,54707]" dest="return_type_definition [13803,13820]"/>
  <match src="primitive_type [42570,42577]" dest="primitive_type [47761,47768]"/>
  <match src="function: function [85102,85110]" dest="function: function [60285,60293]"/>
  <match src="identifier: account [109450,109457]" dest="identifier: account [38363,38370]"/>
  <match src="identifier: value [58214,58219]" dest="identifier: value [71777,71782]"/>
  <match src=".: . [92174,92175]" dest=".: . [57734,57735]"/>
  <match src="): ) [63988,63989]" dest="): ) [20822,20823]"/>
  <match src="): ) [110238,110239]" dest="): ) [39151,39152]"/>
  <match src="binary_expression [47548,47558]" dest="binary_expression [52739,52749]"/>
  <match src="member_expression [110608,110623]" dest="member_expression [39521,39536]"/>
  <match src="memory: memory [3266,3272]" dest="memory: memory [3830,3836]"/>
  <match src="): ) [6245,6246]" dest="): ) [6809,6810]"/>
  <match src="identifier: epochStrategy [111488,111501]" dest="identifier: epochStrategy [40401,40414]"/>
  <match src="identifier: Decimal [54970,54977]" dest="identifier: Decimal [14083,14090]"/>
  <match src="visibility [107030,107038]" dest="visibility [35943,35951]"/>
  <match src="call_argument [76453,76471]" dest="call_argument [80585,80607]"/>
  <match src="function: function [63789,63797]" dest="function: function [20623,20631]"/>
  <match src="type_name [8675,8679]" dest="type_name [9239,9243]"/>
  <match src="struct_member [95812,95831]" dest="struct_member [27030,27049]"/>
  <match src="identifier: z [46475,46476]" dest="identifier: z [51666,51667]"/>
  <match src="): ) [116511,116512]" dest="): ) [54110,54111]"/>
  <match src="visibility [83033,83041]" dest="visibility [55330,55338]"/>
  <match src="type_name [63025,63032]" dest="type_name [19859,19866]"/>
  <match src="type_name [35359,35371]" dest="type_name [57350,57362]"/>
  <match src="identifier: upgradeTo [98356,98365]" dest="identifier: upgradeTo [77006,77015]"/>
  <match src="identifier: CHAIN_ID [56822,56830]" dest="identifier: CHAIN_ID [15935,15943]"/>
  <match src="pure: pure [9910,9914]" dest="pure: pure [10474,10478]"/>
  <match src="if_statement [1960,2005]" dest="if_statement [2524,2569]"/>
  <match src="parameter [112910,112927]" dest="parameter [41823,41840]"/>
  <match src="call_argument [43700,43719]" dest="call_argument [48891,48910]"/>
  <match src="identifier: lessThan [9105,9113]" dest="identifier: lessThan [9669,9677]"/>
  <match src="assignment_expression [108852,108929]" dest="assignment_expression [37765,37842]"/>
  <match src=",: , [24495,24496]" dest=",: , [79931,79932]"/>
  <match src="identifier: balanceCheck [89355,89367]" dest="identifier: balanceCheck [58820,58832]"/>
  <match src="binary_expression [44520,44525]" dest="binary_expression [49711,49716]"/>
  <match src="parameter [7481,7497]" dest="parameter [8045,8061]"/>
  <match src="=: = [53610,53611]" dest="=: = [12723,12724]"/>
  <match src="call_argument [29833,29839]" dest="call_argument [58505,58511]"/>
  <match src="(: ( [54422,54423]" dest="(: ( [13535,13536]"/>
  <match src="identifier: sender [33395,33401]" dest="identifier: sender [65459,65465]"/>
  <match src="type_alias [72745,72752]" dest="type_alias [66619,66626]"/>
  <match src="external: external [89170,89178]" dest="external: external [80540,80548]"/>
  <match src="{: { [90123,90124]" dest="{: { [73084,73085]"/>
  <match src="call_argument [40319,40338]" dest="call_argument [45510,45529]"/>
  <match src="identifier: z [46820,46821]" dest="identifier: z [52011,52012]"/>
  <match src="parameter [6780,6791]" dest="parameter [7344,7355]"/>
  <match src="=: = [107207,107208]" dest="=: = [36120,36121]"/>
  <match src="member_expression [113025,113061]" dest="member_expression [41938,41974]"/>
  <match src="call_argument [92497,92509]" dest="call_argument [79112,79129]"/>
  <match src="identifier: epoch [109921,109926]" dest="identifier: epoch [38834,38839]"/>
  <match src="assembly: assembly [99064,99072]" dest="assembly: assembly [77714,77722]"/>
  <match src="primitive_type [63261,63265]" dest="primitive_type [20095,20099]"/>
  <match src="primitive_type [107593,107599]" dest="primitive_type [36506,36512]"/>
  <match src="return: return [104475,104481]" dest="return: return [33388,33394]"/>
  <match src="type_name [66284,66288]" dest="type_name [64352,64356]"/>
  <match src="}: } [75827,75828]" dest="}: } [68255,68256]"/>
  <match src="expression_statement [46449,46494]" dest="expression_statement [51640,51685]"/>
  <match src="identifier: a [4094,4095]" dest="identifier: a [4658,4659]"/>
  <match src="primitive_type [94081,94088]" dest="primitive_type [74939,74946]"/>
  <match src="primitive_type [112727,112734]" dest="primitive_type [41640,41647]"/>
  <match src="uint256: uint256 [6136,6143]" dest="uint256: uint256 [6700,6707]"/>
  <match src="(: ( [110813,110814]" dest="(: ( [39726,39727]"/>
  <match src="external: external [88892,88900]" dest="external: external [72258,72266]"/>
  <match src="function_body [9691,9735]" dest="function_body [10255,10299]"/>
  <match src="address: address [106979,106986]" dest="address: address [35892,35899]"/>
  <match src="parameter [103996,104009]" dest="parameter [32909,32922]"/>
  <match src="function_definition [4006,4134]" dest="function_definition [4570,4698]"/>
  <match src="type_name [52532,52539]" dest="type_name [11645,11652]"/>
  <match src="function: function [780,788]" dest="function: function [1344,1352]"/>
  <match src="event_paramater [63591,63607]" dest="event_paramater [20425,20441]"/>
  <match src=".: . [8160,8161]" dest=".: . [8724,8725]"/>
  <match src="private: private [53570,53577]" dest="private: private [12683,12690]"/>
  <match src="identifier: shift [47319,47324]" dest="identifier: shift [52510,52515]"/>
  <match src="identifier: stringifyTruncated [42853,42871]" dest="identifier: stringifyTruncated [48044,48062]"/>
  <match src="string [66364,66401]" dest="string [73768,73804]"/>
  <match src="returns: returns [7909,7916]" dest="returns: returns [8473,8480]"/>
  <match src="member_expression [110814,110826]" dest="member_expression [39727,39739]"/>
  <match src="]: ] [112455,112456]" dest="]: ] [41368,41369]"/>
  <match src="identifier: reason [40595,40601]" dest="identifier: reason [45786,45792]"/>
  <match src="uint256: uint256 [15833,15840]" dest="uint256: uint256 [59584,59591]"/>
  <match src="primitive_type [29618,29625]" dest="primitive_type [54143,54150]"/>
  <match src="comment: // populate the least-significant character [46393,46436]" dest="comment: // populate the least-significant character [51584,51627]"/>
  <match src="number_literal: 0 [47235,47236]" dest="number_literal: 0 [52426,52427]"/>
  <match src=",: , [32118,32119]" dest=",: , [55207,55208]"/>
  <match src="identifier: account [100375,100382]" dest="identifier: account [29288,29295]"/>
  <match src=",: , [43169,43170]" dest=",: , [48360,48361]"/>
  <match src="type_name [88356,88363]" dest="type_name [71416,71423]"/>
  <match src="returns: returns [101056,101063]" dest="returns: returns [29969,29976]"/>
  <match src="): ) [109096,109097]" dest="): ) [38009,38010]"/>
  <match src="call_argument [40999,41005]" dest="call_argument [46190,46196]"/>
  <match src="identifier: result [45997,46003]" dest="identifier: result [51188,51194]"/>
  <match src="identifier: decrementBalanceOfStaged [88979,89003]" dest="identifier: decrementBalanceOfStaged [72354,72378]"/>
  <match src="struct: struct [5780,5786]" dest="struct: struct [6344,6350]"/>
  <match src="expression_statement [115232,115354]" dest="expression_statement [70176,70298]"/>
  <match src=",: , [89119,89120]" dest=",: , [72472,72473]"/>
  <match src="): ) [90508,90509]" dest="): ) [73206,73207]"/>
  <match src="member_expression [103777,103817]" dest="member_expression [32690,32730]"/>
  <match src="(: ( [100088,100089]" dest="(: ( [29001,29002]"/>
  <match src="return: return [101994,102000]" dest="return: return [30907,30913]"/>
  <match src="identifier: recipient [19777,19786]" dest="identifier: recipient [65194,65203]"/>
  <match src="function_definition [103971,104109]" dest="function_definition [32884,33022]"/>
  <match src="(: ( [47222,47223]" dest="(: ( [52413,52414]"/>
  <match src="identifier: Account [102584,102591]" dest="identifier: Account [31497,31504]"/>
  <match src="identifier: bonded [107200,107206]" dest="identifier: bonded [36113,36119]"/>
  <match src="identifier: _state [108337,108343]" dest="identifier: _state [37250,37256]"/>
  <match src="(: ( [62538,62539]" dest="(: ( [19372,19373]"/>
  <match src="state_mutability [56681,56685]" dest="state_mutability [15794,15798]"/>
  <match src="address: address [110299,110306]" dest="address: address [39212,39219]"/>
  <match src="{: { [101597,101598]" dest="{: { [30510,30511]"/>
  <match src="call_argument [88840,88845]" dest="call_argument [72995,73000]"/>
  <match src="identifier: that [58711,58715]" dest="identifier: that [62785,62789]"/>
  <match src=".: . [110826,110827]" dest=".: . [39739,39740]"/>
  <match src="primitive_type [66284,66288]" dest="primitive_type [64352,64356]"/>
  <match src="[: [ [108901,108902]" dest="[: [ [37814,37815]"/>
  <match src="(: ( [90858,90859]" dest="(: ( [54834,54835]"/>
  <match src="primitive_type [62868,62872]" dest="primitive_type [19702,19706]"/>
  <match src="}: } [101118,101119]" dest="}: } [30031,30032]"/>
  <match src="identifier: FILE [91210,91214]" dest="identifier: FILE [81409,81413]"/>
  <match src="identifier: file [39353,39357]" dest="identifier: file [44544,44548]"/>
  <match src="(: ( [62425,62426]" dest="(: ( [19259,19260]"/>
  <match src="yul_evm_builtin [105837,105842]" dest="yul_evm_builtin [34750,34755]"/>
  <match src="uint8: uint8 [63180,63185]" dest="uint8: uint8 [20014,20019]"/>
  <match src="]: ] [113603,113604]" dest="]: ] [42516,42517]"/>
  <match src="(: ( [11627,11628]" dest="(: ( [21625,21626]"/>
  <match src="{: { [56568,56569]" dest="{: { [15681,15682]"/>
  <match src=".: . [104691,104692]" dest=".: . [33604,33605]"/>
  <match src="identifier: require [21156,21163]" dest="identifier: decrementBalanceOfCoupons [65433,65458]"/>
  <match src="(: ( [39505,39506]" dest="(: ( [44696,44697]"/>
  <match src="identifier: totalSupply [101935,101946]" dest="identifier: totalSupply [30848,30859]"/>
  <match src="}: } [90076,90077]" dest="}: } [73007,73008]"/>
  <match src=",: , [20033,20034]" dest=",: , [63586,63587]"/>
  <match src="): ) [40632,40633]" dest="): ) [45823,45824]"/>
  <match src="type_name [72017,72024]" dest="type_name [25830,25837]"/>
  <match src=",: , [4660,4661]" dest=",: , [5224,5225]"/>
  <match src="function: function [62820,62828]" dest="function: function [19654,19662]"/>
  <match src="function_definition [59789,59826]" dest="function_definition [24763,24800]"/>
  <match src="call_argument [113074,113080]" dest="call_argument [41987,41993]"/>
  <match src="): ) [13144,13145]" dest="): ) [23142,23143]"/>
  <match src="type_name [101065,101072]" dest="type_name [29978,29985]"/>
  <match src=".: . [96758,96759]" dest=".: . [27976,27977]"/>
  <match src="identifier: maxPeriod [54590,54599]" dest="identifier: maxPeriod [13703,13712]"/>
  <match src="member_expression [113378,113413]" dest="member_expression [42291,42326]"/>
  <match src="(: ( [112726,112727]" dest="(: ( [41639,41640]"/>
  <match src="=&gt;: =&gt; [95528,95530]" dest="=&gt;: =&gt; [26746,26748]"/>
  <match src="}: } [9366,9367]" dest="}: } [9930,9931]"/>
  <match src="=: = [109536,109537]" dest="=: = [38449,38450]"/>
  <match src="binary_expression [4751,4757]" dest="binary_expression [5315,5321]"/>
  <match src="call_argument [90622,90632]" dest="call_argument [72136,72146]"/>
  <match src=".: . [88941,88942]" dest=".: . [71885,71886]"/>
  <match src="bytes32: bytes32 [42594,42601]" dest="bytes32: bytes32 [47785,47792]"/>
  <match src="visibility [106898,106906]" dest="visibility [35811,35819]"/>
  <match src="): ) [113080,113081]" dest="): ) [41993,41994]"/>
  <match src="&quot;: &quot; [4125,4126]" dest="&quot;: &quot; [4689,4690]"/>
  <match src="member_expression [88672,88692]" dest="member_expression [83362,83385]"/>
  <match src="type_name [9928,9935]" dest="type_name [10492,10499]"/>
  <match src="): ) [8178,8179]" dest="): ) [8742,8743]"/>
  <match src="identifier: nextEpochStart [103319,103333]" dest="identifier: nextEpochStart [32232,32246]"/>
  <match src="!=: != [19838,19840]" dest="!=: != [65270,65272]"/>
  <match src="identifier: FOUR_BIT_MASK [47433,47446]" dest="identifier: FOUR_BIT_MASK [52624,52637]"/>
  <match src="call_expression [91659,91672]" dest="call_expression [73663,73676]"/>
  <match src="(: ( [102174,102175]" dest="(: ( [31087,31088]"/>
  <match src=".: . [58942,58943]" dest=".: . [62912,62913]"/>
  <match src="identifier: value [88251,88256]" dest="identifier: value [71270,71275]"/>
  <match src="(: ( [111191,111192]" dest="(: ( [40104,40105]"/>
  <match src="assignment_expression [47025,47060]" dest="assignment_expression [52216,52251]"/>
  <match src="): ) [61239,61240]" dest="): ) [65671,65672]"/>
  <match src="array_access [102417,102441]" dest="array_access [31330,31354]"/>
  <match src="parameter [63165,63178]" dest="parameter [19999,20012]"/>
  <match src="if_statement [113699,113797]" dest="if_statement [42612,42710]"/>
  <match src="): ) [102697,102698]" dest="): ) [31610,31611]"/>
  <match src="returns: returns [55180,55187]" dest="returns: returns [14293,14300]"/>
  <match src="user_defined_type [97632,97637]" dest="user_defined_type [76282,76287]"/>
  <match src="call_argument [7417,7445]" dest="call_argument [7981,8009]"/>
  <match src="identifier: epoch [111774,111779]" dest="identifier: epoch [40687,40692]"/>
  <match src="primitive_type [88275,88282]" dest="primitive_type [83223,83230]"/>
  <match src="identifier: msg [90487,90490]" dest="identifier: msg [73195,73198]"/>
  <match src="): ) [98609,98610]" dest="): ) [77259,77260]"/>
  <match src="): ) [47737,47738]" dest="): ) [52928,52929]"/>
  <match src="uint256: uint256 [78142,78149]" dest="uint256: uint256 [66694,66701]"/>
  <match src="primitive_type [78444,78451]" dest="primitive_type [66715,66722]"/>
  <match src="): ) [62401,62402]" dest="): ) [19235,19236]"/>
  <match src="{: { [9462,9463]" dest="{: { [10026,10027]"/>
  <match src="identifier: FOUR_BIT_MASK [46617,46630]" dest="identifier: FOUR_BIT_MASK [51808,51821]"/>
  <match src="(: ( [4063,4064]" dest="(: ( [4627,4628]"/>
  <match src="identifier: snapshotTotalBonded [111630,111649]" dest="identifier: snapshotTotalBonded [40543,40562]"/>
  <match src="(: ( [9529,9530]" dest="(: ( [10093,10094]"/>
  <match src="call_expression [107885,107922]" dest="call_expression [36798,36835]"/>
  <match src="false [106830,106835]" dest="false [35743,35748]"/>
  <match src="function_body [42643,43059]" dest="function_body [47834,48250]"/>
  <match src="state_mutability [102861,102865]" dest="state_mutability [31774,31778]"/>
  <match src=",: , [109058,109059]" dest=",: , [37971,37972]"/>
  <match src="primitive_type [86092,86099]" dest="primitive_type [62526,62533]"/>
  <match src="identifier: result [47637,47643]" dest="identifier: result [52828,52834]"/>
  <match src="}: } [90937,90938]" dest="}: } [73488,73489]"/>
  <match src="view: view [101363,101367]" dest="view: view [30276,30280]"/>
  <match src="(: ( [40701,40702]" dest="(: ( [45892,45893]"/>
  <match src="): ) [54824,54825]" dest="): ) [13937,13938]"/>
  <match src="identifier: debt [107520,107524]" dest="identifier: debt [36433,36437]"/>
  <match src="identifier: i [46284,46285]" dest="identifier: i [51475,51476]"/>
  <match src="string [23785,23820]" dest="string [80088,80118]"/>
  <match src="return: return [7225,7231]" dest="return: return [7789,7795]"/>
  <match src="(: ( [64129,64130]" dest="(: ( [20963,20964]"/>
  <match src="parameter [58206,58219]" dest="parameter [71769,71782]"/>
  <match src="parameter [11739,11754]" dest="parameter [21737,21752]"/>
  <match src="public: public [105717,105723]" dest="public: public [34630,34636]"/>
  <match src="): ) [81222,81223]" dest="): ) [61938,61939]"/>
  <match src="returns: returns [107039,107046]" dest="returns: returns [35952,35959]"/>
  <match src=".: . [109458,109459]" dest=".: . [38371,38372]"/>
  <match src="type_name [39326,39330]" dest="type_name [44517,44521]"/>
  <match src="call_argument [45876,45881]" dest="call_argument [51067,51072]"/>
  <match src=".: . [100455,100456]" dest=".: . [29368,29369]"/>
  <match src="{: { [42643,42644]" dest="{: { [47834,47835]"/>
  <match src=".: . [111529,111530]" dest=".: . [40442,40443]"/>
  <match src="comment: // get the final string length [45011,45041]" dest="comment: // get the final string length [50202,50232]"/>
  <match src="=: = [75377,75378]" dest="=: = [68111,68112]"/>
  <match src="view: view [28117,28121]" dest="view: view [61428,61432]"/>
  <match src="pure: pure [56533,56537]" dest="pure: pure [15646,15650]"/>
  <match src=",: , [13798,13799]" dest=",: , [23796,23797]"/>
  <match src="{: { [107054,107055]" dest="{: { [35967,35968]"/>
  <match src="string_literal [20566,20599]" dest="string_literal [64190,64219]"/>
  <match src="identifier: Decimal [75625,75632]" dest="identifier: Decimal [68599,68606]"/>
  <match src="call_argument [40922,40928]" dest="call_argument [46113,46119]"/>
  <match src="state_mutability [64065,64069]" dest="state_mutability [20899,20903]"/>
  <match src="{: { [103902,103903]" dest="{: { [32815,32816]"/>
  <match src="}: } [4802,4803]" dest="}: } [5366,5367]"/>
  <match src="): ) [40499,40500]" dest="): ) [45690,45691]"/>
  <match src="member_expression [91709,91719]" dest="member_expression [64645,64655]"/>
  <match src="): ) [39459,39460]" dest="): ) [44650,44651]"/>
  <match src="function_definition [6491,6675]" dest="function_definition [7055,7239]"/>
  <match src="): ) [107731,107732]" dest="): ) [36644,36645]"/>
  <match src="&quot;: &quot; [905,906]" dest="&quot;: &quot; [1469,1470]"/>
  <match src="external: external [76233,76241]" dest="external: external [71784,71792]"/>
  <match src="call_argument [47831,47856]" dest="call_argument [53022,53047]"/>
  <match src="comment: // each byte takes two characters [46311,46344]" dest="comment: // each byte takes two characters [51502,51535]"/>
  <match src="visibility [102955,102961]" dest="visibility [31868,31874]"/>
  <match src="call_expression [111379,111407]" dest="call_expression [40292,40320]"/>
  <match src="uint256: uint256 [95418,95425]" dest="uint256: uint256 [26636,26643]"/>
  <match src="call_argument [41474,41480]" dest="call_argument [46665,46671]"/>
  <match src="identifier: self [9271,9275]" dest="identifier: self [9835,9839]"/>
  <match src="identifier: value [56127,56132]" dest="identifier: value [15240,15245]"/>
  <match src="visibility [63697,63705]" dest="visibility [20531,20539]"/>
  <match src="expression_statement [21941,22010]" dest="expression_statement [64230,64334]"/>
  <match src="=: = [46468,46469]" dest="=: = [51659,51660]"/>
  <match src="type_name [108189,108196]" dest="type_name [37102,37109]"/>
  <match src="): ) [105403,105404]" dest="): ) [34316,34317]"/>
  <match src="identifier: epochs [103784,103790]" dest="identifier: epochs [32697,32703]"/>
  <match src="struct_member [96202,96219]" dest="struct_member [27420,27437]"/>
  <match src="(: ( [43267,43268]" dest="(: ( [48458,48459]"/>
  <match src="(: ( [56694,56695]" dest="(: ( [15807,15808]"/>
  <match src="(: ( [5929,5930]" dest="(: ( [6493,6494]"/>
  <match src="parameter [28093,28108]" dest="parameter [54874,54889]"/>
  <match src="call_argument [46133,46154]" dest="call_argument [51324,51345]"/>
  <match src="type_name [96577,96584]" dest="type_name [27795,27802]"/>
  <match src="type_name [61542,61549]" dest="type_name [60239,60246]"/>
  <match src="=: = [111377,111378]" dest="=: = [40290,40291]"/>
  <match src=".: . [108230,108231]" dest=".: . [37143,37144]"/>
  <match src="primitive_type [100599,100606]" dest="primitive_type [29512,29519]"/>
  <match src=".: . [89703,89704]" dest=".: . [72658,72659]"/>
  <match src="binary_expression [102198,102228]" dest="binary_expression [31111,31141]"/>
  <match src="parameter [113503,113518]" dest="parameter [42416,42431]"/>
  <match src=",: , [42560,42561]" dest=",: , [47751,47752]"/>
  <match src="call_expression [8574,8611]" dest="call_expression [9138,9175]"/>
  <match src="type_name [96448,96455]" dest="type_name [27666,27673]"/>
  <match src=",: , [64263,64264]" dest=",: , [21097,21098]"/>
  <match src="indexed: indexed [13788,13795]" dest="indexed: indexed [23786,23793]"/>
  <match src="string: string [108497,108503]" dest="string: string [37410,37416]"/>
  <match src="function_body [105074,105134]" dest="function_body [33987,34047]"/>
  <match src="identifier: realMintValue [30105,30118]" dest="identifier: realMintValue [54285,54298]"/>
  <match src="identifier: GOVERNANCE_EMERGENCY_DELAY [53430,53456]" dest="identifier: GOVERNANCE_EMERGENCY_DELAY [12543,12569]"/>
  <match src="return: return [44808,44814]" dest="return: return [49999,50005]"/>
  <match src="array_access [102279,102303]" dest="array_access [31192,31216]"/>
  <match src="(: ( [54816,54817]" dest="(: ( [13929,13930]"/>
  <match src="[: [ [102785,102786]" dest="[: [ [31698,31699]"/>
  <match src="=: = [112055,112056]" dest="=: = [40968,40969]"/>
  <match src="(: ( [44084,44085]" dest="(: ( [49275,49276]"/>
  <match src="primitive_type [109724,109731]" dest="primitive_type [38637,38644]"/>
  <match src=".: . [113764,113765]" dest=".: . [42677,42678]"/>
  <match src="type_name [95812,95819]" dest="type_name [27030,27037]"/>
  <match src="identifier: denominator [9876,9887]" dest="identifier: denominator [10440,10451]"/>
  <match src="[: [ [104233,104234]" dest="[: [ [33146,33147]"/>
  <match src="call_argument [20173,20182]" dest="call_argument [65829,65838]"/>
  <match src="identifier: result [46951,46957]" dest="identifier: result [52142,52148]"/>
  <match src="string_literal [19853,19892]" dest="string_literal [65285,65332]"/>
  <match src="): ) [42955,42956]" dest="): ) [48146,48147]"/>
  <match src="member_expression [100431,100446]" dest="member_expression [29344,29359]"/>
  <match src="type_name [64344,64349]" dest="type_name [21178,21183]"/>
  <match src="binary_expression [104482,104525]" dest="binary_expression [33395,33438]"/>
  <match src="assignment_expression [110545,110676]" dest="assignment_expression [39458,39589]"/>
  <match src="&quot;: &quot; [20035,20036]" dest="&quot;: &quot; [63615,63616]"/>
  <match src="type_name [41883,41890]" dest="type_name [47074,47081]"/>
  <match src="user_defined_type [96181,96185]" dest="user_defined_type [27399,27403]"/>
  <match src="false: false [106830,106835]" dest="false: false [35743,35748]"/>
  <match src="=: = [29948,29949]" dest="=: = [17723,17724]"/>
  <match src="visibility [40003,40011]" dest="visibility [45194,45202]"/>
  <match src="call_expression [27309,27382]" dest="call_expression [55518,55576]"/>
  <match src="pure: pure [55955,55959]" dest="pure: pure [15068,15072]"/>
  <match src=".: . [75277,75278]" dest=".: . [68574,68575]"/>
  <match src="variable_declaration [91494,91526]" dest="variable_declaration [63750,63770]"/>
  <match src="assembly: assembly [94549,94557]" dest="assembly: assembly [75407,75415]"/>
  <match src="binary_expression [81814,81840]" dest="binary_expression [61725,61746]"/>
  <match src="event_paramater [63458,63472]" dest="event_paramater [20292,20306]"/>
  <match src="identifier: Require [58703,58710]" dest="identifier: Require [62777,62784]"/>
  <match src="): ) [88678,88679]" dest="): ) [83369,83370]"/>
  <match src="view: view [64116,64120]" dest="view: view [20950,20954]"/>
  <match src="call_argument [114859,114863]" dest="call_argument [69803,69807]"/>
  <match src="{: { [110341,110342]" dest="{: { [39254,39255]"/>
  <match src="++: ++ [47247,47249]" dest="++: ++ [52438,52440]"/>
  <match src="call_argument [40112,40468]" dest="call_argument [45303,45659]"/>
  <match src="}: } [76542,76543]" dest="}: } [68867,68868]"/>
  <match src="event_definition [62133,62208]" dest="event_definition [18967,19042]"/>
  <match src="state_variable_declaration [53041,53083]" dest="state_variable_declaration [12154,12196]"/>
  <match src="returns: returns [104922,104929]" dest="returns: returns [33835,33842]"/>
  <match src="struct: struct [96351,96357]" dest="struct: struct [27569,27575]"/>
  <match src="(: ( [64297,64298]" dest="(: ( [21131,21132]"/>
  <match src="{: { [110144,110145]" dest="{: { [39057,39058]"/>
  <match src="user_defined_type [34276,34288]" dest="user_defined_type [17948,17960]"/>
  <match src="identifier: account [102295,102302]" dest="identifier: account [31208,31215]"/>
  <match src=".: . [107489,107490]" dest=".: . [36402,36403]"/>
  <match src=",: , [108479,108480]" dest=",: , [37392,37393]"/>
  <match src="(: ( [102874,102875]" dest="(: ( [31787,31788]"/>
  <match src="primitive_type [104891,104898]" dest="primitive_type [33804,33811]"/>
  <match src="identifier: account [113596,113603]" dest="identifier: account [42509,42516]"/>
  <match src="state_variable_declaration [114640,114685]" dest="state_variable_declaration [69584,69629]"/>
  <match src="call_argument [33648,33662]" dest="call_argument [62803,62821]"/>
  <match src="user_defined_type [6187,6191]" dest="user_defined_type [6751,6755]"/>
  <match src="array_access [112635,112678]" dest="array_access [41548,41591]"/>
  <match src="primitive_type [106995,107002]" dest="primitive_type [35908,35915]"/>
  <match src="identifier: delegatecall [98515,98527]" dest="identifier: delegatecall [77165,77177]"/>
  <match src="string [22548,22586]" dest="string [72062,72100]"/>
  <match src="): ) [92224,92225]" dest="): ) [57785,57786]"/>
  <match src="return_statement [47630,47644]" dest="return_statement [52821,52835]"/>
  <match src="function_body [7575,7809]" dest="function_body [8139,8373]"/>
  <match src=".: . [113053,113054]" dest=".: . [41966,41967]"/>
  <match src="primitive_type [4019,4026]" dest="primitive_type [4583,4590]"/>
  <match src="call_argument [7039,7085]" dest="call_argument [7603,7649]"/>
  <match src="return: return [54836,54842]" dest="return: return [13949,13955]"/>
  <match src="primitive_type [101894,101901]" dest="primitive_type [30807,30814]"/>
  <match src="identifier: Vote [96181,96185]" dest="identifier: Vote [27399,27403]"/>
  <match src="call_argument [110080,110086]" dest="call_argument [38993,38999]"/>
  <match src="call_expression [19903,19974]" dest="call_expression [65343,65422]"/>
  <match src="uint256: uint256 [107448,107455]" dest="uint256: uint256 [36361,36368]"/>
  <match src="(: ( [39743,39744]" dest="(: ( [44934,44935]"/>
  <match src="indexed: indexed [62156,62163]" dest="indexed: indexed [18990,18997]"/>
  <match src="returns: returns [6581,6588]" dest="returns: returns [7145,7152]"/>
  <match src="identifier: staged [101812,101818]" dest="identifier: staged [30725,30731]"/>
  <match src="identifier: sub [101637,101640]" dest="identifier: sub [30550,30553]"/>
  <match src="returns: returns [102866,102873]" dest="returns: returns [31779,31786]"/>
  <match src="identifier: D256 [32631,32635]" dest="identifier: D256 [17224,17228]"/>
  <match src=",: , [110486,110487]" dest=",: , [39399,39400]"/>
  <match src="string_literal [88131,88137]" dest="string_literal [71147,71156]"/>
  <match src="update_expression [47246,47249]" dest="update_expression [52437,52440]"/>
  <match src="primitive_type [110504,110510]" dest="primitive_type [39417,39423]"/>
  <match src="}: } [72027,72028]" dest="}: } [25840,25841]"/>
  <match src=".: . [7683,7684]" dest=".: . [8247,8248]"/>
  <match src="function_definition [64284,64374]" dest="function_definition [21118,21208]"/>
  <match src="assignment_expression [108224,108303]" dest="assignment_expression [37137,37216]"/>
  <match src="): ) [103334,103335]" dest="): ) [32247,32248]"/>
  <match src="type_name [86141,86148]" dest="type_name [55684,55691]"/>
  <match src="identifier: account [11747,11754]" dest="identifier: account [21745,21752]"/>
  <match src="identifier: approve [105120,105127]" dest="identifier: approve [34033,34040]"/>
  <match src="identifier: minPeriod [52992,53001]" dest="identifier: minPeriod [12105,12114]"/>
  <match src="address: address [96638,96645]" dest="address: address [27856,27863]"/>
  <match src="parameter [41170,41186]" dest="parameter [46361,46377]"/>
  <match src="(: ( [100938,100939]" dest="(: ( [29851,29852]"/>
  <match src=",: , [110469,110470]" dest=",: , [39382,39383]"/>
  <match src="identifier: msg [91766,91769]" dest="identifier: msg [63833,63836]"/>
  <match src=".: . [110051,110052]" dest=".: . [38964,38965]"/>
  <match src="(: ( [101247,101248]" dest="(: ( [30160,30161]"/>
  <match src="type_name [100218,100224]" dest="type_name [29131,29137]"/>
  <match src="primitive_type [364,371]" dest="primitive_type [928,935]"/>
  <match src="): ) [8181,8182]" dest="): ) [8745,8746]"/>
  <match src="): ) [4699,4700]" dest="): ) [5263,5264]"/>
  <match src="external: external [64488,64496]" dest="external: external [21322,21330]"/>
  <match src="): ) [56803,56804]" dest="): ) [15916,15917]"/>
  <match src="user_defined_type [34827,34839]" dest="user_defined_type [18613,18625]"/>
  <match src="parameter [107301,107321]" dest="parameter [36214,36234]"/>
  <match src="comment: // ============ Constants ============ [38413,38451]" dest="comment: // ============ Constants ============ [43604,43642]"/>
  <match src=".: . [89768,89769]" dest=".: . [72738,72739]"/>
  <match src="memory: memory [9646,9652]" dest="memory: memory [10210,10216]"/>
  <match src="visibility [100384,100390]" dest="visibility [29297,29303]"/>
  <match src="(: ( [46612,46613]" dest="(: ( [51803,51804]"/>
  <match src="[: [ [103790,103791]" dest="[: [ [32703,32704]"/>
  <match src="comment: /**      * @dev Moves `amount` tokens from `sender` to `recipient` using the      * allowance mechanism. `amount` is then deducted from the caller's      * allowance.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [13176,13472]" dest="comment: /**      * @dev Moves `amount` tokens from `sender` to `recipient` using the      * allowance mechanism. `amount` is then deducted from the caller's      * allowance.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [23174,23470]"/>
  <match src="call_argument [111257,111262]" dest="call_argument [40170,40175]"/>
  <match src="(: ( [8525,8526]" dest="(: ( [9089,9090]"/>
  <match src="): ) [7521,7522]" dest="): ) [8085,8086]"/>
  <match src="}: } [94620,94621]" dest="}: } [75478,75479]"/>
  <match src="returns: returns [8099,8106]" dest="returns: returns [8663,8670]"/>
  <match src="{: { [110889,110890]" dest="{: { [39802,39803]"/>
  <match src="[: [ [101802,101803]" dest="[: [ [30715,30716]"/>
  <match src="&quot;: &quot; [19853,19854]" dest="&quot;: &quot; [65285,65286]"/>
  <match src="function: function [64024,64032]" dest="function: function [20858,20866]"/>
  <match src="): ) [104463,104464]" dest="): ) [33376,33377]"/>
  <match src="comment: // put the input bytes into the result [43999,44037]" dest="comment: // put the input bytes into the result [49190,49228]"/>
  <match src="(: ( [42946,42947]" dest="(: ( [48137,48138]"/>
  <match src=".: . [110993,110994]" dest=".: . [39906,39907]"/>
  <match src="member_expression [103647,103659]" dest="member_expression [32560,32572]"/>
  <match src="member_expression [110608,110647]" dest="member_expression [39521,39560]"/>
  <match src="string_literal [19936,19973]" dest="string_literal [65376,65421]"/>
  <match src="uint256: uint256 [73144,73151]" dest="uint256: uint256 [59757,59764]"/>
  <match src="member_expression [105091,105108]" dest="member_expression [34004,34021]"/>
  <match src="identifier: i [44218,44219]" dest="identifier: i [49409,49410]"/>
  <match src=".: . [56280,56281]" dest=".: . [15393,15394]"/>
  <match src="event_paramater [61542,61564]" dest="event_paramater [60239,60262]"/>
  <match src="function: function [8005,8013]" dest="function: function [8569,8577]"/>
  <match src="function: function [110252,110260]" dest="function: function [39165,39173]"/>
  <match src="}: } [56018,56019]" dest="}: } [15131,15132]"/>
  <match src="): ) [42396,42397]" dest="): ) [47587,47588]"/>
  <match src="): ) [42878,42879]" dest="): ) [48069,48070]"/>
  <match src="primitive_type [63025,63032]" dest="primitive_type [19859,19866]"/>
  <match src=".: . [110213,110214]" dest=".: . [39126,39127]"/>
  <match src="(: ( [109582,109583]" dest="(: ( [38495,38496]"/>
  <match src="): ) [13572,13573]" dest="): ) [23570,23571]"/>
  <match src="member_expression [104825,104859]" dest="member_expression [33738,33772]"/>
  <match src="variable_declaration_statement [75625,75722]" dest="variable_declaration_statement [68598,68659]"/>
  <match src="identifier: amount [20184,20190]" dest="identifier: amount [65847,65853]"/>
  <match src="(: ( [104930,104931]" dest="(: ( [33843,33844]"/>
  <match src="(: ( [6848,6849]" dest="(: ( [7412,7413]"/>
  <match src="): ) [96185,96186]" dest="): ) [27403,27404]"/>
  <match src="identifier: D256 [56555,56559]" dest="identifier: D256 [15668,15672]"/>
  <match src="identifier: newClaimable [90918,90930]" dest="identifier: staged [73475,73481]"/>
  <match src="identifier: Swap [63388,63392]" dest="identifier: Swap [20222,20226]"/>
  <match src="): ) [47446,47447]" dest="): ) [52637,52638]"/>
  <match src="member_expression [103617,103646]" dest="member_expression [32530,32559]"/>
  <match src="identifier: redeemable [101418,101428]" dest="identifier: redeemable [30331,30341]"/>
  <match src="=: = [30697,30698]" dest="=: = [17821,17822]"/>
  <match src="identifier: b [8940,8941]" dest="identifier: b [9504,9505]"/>
  <match src="(: ( [88911,88912]" dest="(: ( [79006,79007]"/>
  <match src="number_literal: 10 [45157,45159]" dest="number_literal: 10 [50348,50350]"/>
  <match src="function_definition [104741,104866]" dest="function_definition [33654,33779]"/>
  <match src="visibility [6156,6164]" dest="visibility [6720,6728]"/>
  <match src="address: address [88500,88507]" dest="address: address [78867,78874]"/>
  <match src="type_name [113302,113309]" dest="type_name [42215,42222]"/>
  <match src="identifier: recordVote [112548,112558]" dest="identifier: recordVote [41461,41471]"/>
  <match src="uint256: uint256 [5700,5707]" dest="uint256: uint256 [6264,6271]"/>
  <match src="call_argument [58845,58868]" dest="call_argument [64515,64540]"/>
  <match src="): ) [108743,108744]" dest="): ) [37656,37657]"/>
  <match src="view: view [100295,100299]" dest="view: view [29208,29212]"/>
  <match src="identifier: expiration [95820,95830]" dest="identifier: expiration [27038,27048]"/>
  <match src="): ) [11635,11636]" dest="): ) [21633,21634]"/>
  <match src="primitive_type [60906,60913]" dest="primitive_type [54372,54379]"/>
  <match src="byte: byte [46128,46132]" dest="byte: byte [51319,51323]"/>
  <match src="(: ( [101760,101761]" dest="(: ( [30673,30674]"/>
  <match src="uint256: uint256 [41883,41890]" dest="uint256: uint256 [47074,47081]"/>
  <match src="call_argument [43710,43718]" dest="call_argument [48901,48909]"/>
  <match src="primitive_type [13780,13787]" dest="primitive_type [23778,23785]"/>
  <match src="external: external [62365,62373]" dest="external: external [19199,19207]"/>
  <match src="public: public [103257,103263]" dest="public: public [32170,32176]"/>
  <match src="): ) [105176,105177]" dest="): ) [34089,34090]"/>
  <match src="uint256: uint256 [38561,38568]" dest="uint256: uint256 [43752,43759]"/>
  <match src="event: event [63294,63299]" dest="event: event [20128,20133]"/>
  <match src="function_definition [43065,43822]" dest="function_definition [48256,49013]"/>
  <match src=",: , [42321,42322]" dest=",: , [47512,47513]"/>
  <match src="uint256: uint256 [94081,94088]" dest="uint256: uint256 [74939,74946]"/>
  <match src="identifier: Decimal [27532,27539]" dest="identifier: Decimal [16701,16708]"/>
  <match src="if_statement [61189,61435]" dest="if_statement [65592,65791]"/>
  <match src="return: return [55872,55878]" dest="return: return [14985,14991]"/>
  <match src="identifier: mod [4647,4650]" dest="identifier: mod [5211,5214]"/>
  <match src="return_statement [54963,55013]" dest="return_statement [14076,14126]"/>
  <match src="(: ( [116834,116835]" dest="(: ( [83440,83441]"/>
  <match src="yul_identifier [105829,105833]" dest="yul_identifier [34742,34746]"/>
  <match src="variable_declaration_tuple [75301,75376]" dest="variable_declaration_tuple [68050,68110]"/>
  <match src="function: function [10009,10017]" dest="function: function [10573,10581]"/>
  <match src="identifier: _ [114919,114920]" dest="identifier: _ [69863,69864]"/>
  <match src="variable_declaration [45211,45228]" dest="variable_declaration [50402,50419]"/>
  <match src="while_statement [45101,45170]" dest="while_statement [50292,50361]"/>
  <match src="function: function [1665,1673]" dest="function: function [2229,2237]"/>
  <match src="member_expression [110899,110911]" dest="member_expression [39812,39824]"/>
  <match src="): ) [96662,96663]" dest="): ) [27880,27881]"/>
  <match src="type_name [62779,62783]" dest="type_name [19613,19617]"/>
  <match src="identifier: require [4743,4750]" dest="identifier: require [5307,5314]"/>
  <match src="function_definition [54641,54754]" dest="function_definition [13754,13867]"/>
  <match src="identifier: BASE [8801,8805]" dest="identifier: BASE [9365,9369]"/>
  <match src="}: } [102927,102928]" dest="}: } [31840,31841]"/>
  <match src="visibility [47703,47710]" dest="visibility [52894,52901]"/>
  <match src="type_name [107285,107292]" dest="type_name [36198,36205]"/>
  <match src="(: ( [105614,105615]" dest="(: ( [34527,34528]"/>
  <match src="): ) [42795,42796]" dest="): ) [47986,47987]"/>
  <match src="expression_statement [88979,89060]" dest="expression_statement [72354,72438]"/>
  <match src=".: . [31940,31941]" dest=".: . [17415,17416]"/>
  <match src="identifier: D256 [6079,6083]" dest="identifier: D256 [6643,6647]"/>
  <match src="identifier: _state [112635,112641]" dest="identifier: _state [41548,41554]"/>
  <match src="(: ( [88499,88500]" dest="(: ( [78866,78867]"/>
  <match src="(: ( [103035,103036]" dest="(: ( [31948,31949]"/>
  <match src="view: view [100640,100644]" dest="view: view [29553,29557]"/>
  <match src="primitive_type [8266,8272]" dest="primitive_type [8830,8836]"/>
  <match src="identifier: factory [63687,63694]" dest="identifier: factory [20521,20528]"/>
  <match src=".: . [55386,55387]" dest=".: . [14499,14500]"/>
  <match src="identifier: asUint256 [111597,111606]" dest="identifier: asUint256 [40510,40519]"/>
  <match src="identifier: Decimal [56273,56280]" dest="identifier: Decimal [15386,15393]"/>
  <match src="(: ( [104031,104032]" dest="(: ( [32944,32945]"/>
  <match src="type_name [78142,78149]" dest="type_name [66694,66701]"/>
  <match src="parameter [90099,90112]" dest="parameter [73030,73043]"/>
  <match src="number_literal: 40 [46594,46596]" dest="number_literal: 40 [51785,51787]"/>
  <match src="identifier: length [104096,104102]" dest="identifier: length [33009,33015]"/>
  <match src="parameter [108189,108203]" dest="parameter [37102,37116]"/>
  <match src="type_name [8108,8112]" dest="type_name [8672,8676]"/>
  <match src="primitive_type [53041,53048]" dest="primitive_type [12154,12161]"/>
  <match src="identifier: recipient [32588,32597]" dest="identifier: recipient [65556,65565]"/>
  <match src="type_name [9641,9645]" dest="type_name [10205,10209]"/>
  <match src="call_argument [7069,7073]" dest="call_argument [7633,7637]"/>
  <match src="uint256: uint256 [96498,96505]" dest="uint256: uint256 [27716,27723]"/>
  <match src=",: , [88354,88355]" dest=",: , [71414,71415]"/>
  <match src="comment: // See https://ethereum.stackexchange.com/a/14016/36603 [94260,94315]" dest="comment: // See https://ethereum.stackexchange.com/a/14016/36603 [75118,75173]"/>
  <match src="assignment_expression [46507,46517]" dest="assignment_expression [51698,51708]"/>
  <match src="parameter [103857,103870]" dest="parameter [32770,32783]"/>
  <match src="string [17841,17883]" dest="string [73385,73416]"/>
  <match src="if: if [111170,111172]" dest="if: if [40083,40085]"/>
  <match src="(: ( [111649,111650]" dest="(: ( [40562,40563]"/>
  <match src="type_name [95694,95701]" dest="type_name [26912,26919]"/>
  <match src="}: } [56838,56839]" dest="}: } [15951,15952]"/>
  <match src="identifier: amount [34760,34766]" dest="identifier: amount [55491,55497]"/>
  <match src="call_struct_argument [7239,7263]" dest="call_struct_argument [7803,7827]"/>
  <match src="uint: uint [63165,63169]" dest="uint: uint [19999,20003]"/>
  <match src="}: } [113087,113088]" dest="}: } [42000,42001]"/>
  <match src="comment: // 10% [54085,54091]" dest="comment: // 10% [13198,13204]"/>
  <match src="{: { [54826,54827]" dest="{: { [13939,13940]"/>
  <match src="comment: /**      * ERC20 Interface      */ [106696,106730]" dest="comment: /**      * ERC20 Interface      */ [35609,35643]"/>
  <match src="member_expression [110959,110971]" dest="member_expression [39872,39884]"/>
  <match src="[: [ [47409,47410]" dest="[: [ [52600,52601]"/>
  <match src="member_expression [74149,74160]" dest="member_expression [68813,68824]"/>
  <match src="identifier: stringify [42302,42311]" dest="identifier: stringify [47493,47502]"/>
  <match src="member_expression [7426,7436]" dest="member_expression [7990,8000]"/>
  <match src="expression_statement [34463,34557]" dest="expression_statement [62905,63028]"/>
  <match src="]: ] [47420,47421]" dest="]: ] [52611,52612]"/>
  <match src="identifier: currentStart [111000,111012]" dest="identifier: currentStart [39913,39925]"/>
  <match src="+: + [47939,47940]" dest="+: + [53130,53131]"/>
  <match src="): ) [114819,114820]" dest="): ) [69763,69764]"/>
  <match src="}: } [100573,100574]" dest="}: } [29486,29487]"/>
  <match src="identifier: stringifyTruncated [40870,40888]" dest="identifier: stringifyTruncated [46061,46079]"/>
  <match src="return_type_definition [101752,101769]" dest="return_type_definition [30665,30682]"/>
  <match src="identifier: State [116673,116678]" dest="identifier: State [83044,83049]"/>
  <match src="call_argument [40889,40895]" dest="call_argument [46080,46086]"/>
  <match src="type_alias [87864,87872]" dest="type_alias [71088,71096]"/>
  <match src="call_argument [33664,33700]" dest="call_argument [62853,62884]"/>
  <match src="(: ( [88639,88640]" dest="(: ( [73562,73563]"/>
  <match src="): ) [39997,39998]" dest="): ) [45188,45189]"/>
  <match src="parameter [110299,110314]" dest="parameter [39212,39227]"/>
  <match src="&quot;: &quot; [4100,4101]" dest="&quot;: &quot; [4664,4665]"/>
  <match src="primitive_type [78115,78122]" dest="primitive_type [66839,66846]"/>
  <match src="identifier: result [47541,47547]" dest="identifier: result [52732,52738]"/>
  <match src="identifier: msg [91322,91325]" dest="identifier: msg [79065,79068]"/>
  <match src="function_definition [100580,100688]" dest="function_definition [29493,29601]"/>
  <match src="state_mutability [104445,104449]" dest="state_mutability [33358,33362]"/>
  <match src="identifier: unbond [90092,90098]" dest="identifier: unbond [73023,73029]"/>
  <match src="(: ( [6818,6819]" dest="(: ( [7382,7383]"/>
  <match src="address: address [100599,100606]" dest="address: address [29512,29519]"/>
  <match src="{: { [6084,6085]" dest="{: { [6648,6649]"/>
  <match src="user_defined_type [34227,34239]" dest="user_defined_type [17874,17886]"/>
  <match src="member_expression [113740,113755]" dest="member_expression [42653,42668]"/>
  <match src="function: function [107788,107796]" dest="function: function [36701,36709]"/>
  <match src="): ) [56628,56629]" dest="): ) [15741,15742]"/>
  <match src="): ) [46018,46019]" dest="): ) [51209,51210]"/>
  <match src="identifier: _state [104220,104226]" dest="identifier: _state [33133,33139]"/>
  <match src="type_name [102667,102674]" dest="type_name [31580,31587]"/>
  <match src="): ) [105455,105456]" dest="): ) [34368,34369]"/>
  <match src="): ) [88890,88891]" dest="): ) [72256,72257]"/>
  <match src="uint256: uint256 [6286,6293]" dest="uint256: uint256 [6850,6857]"/>
  <match src="primitive_type [112576,112583]" dest="primitive_type [41489,41496]"/>
  <match src="variable_declaration [75625,75650]" dest="variable_declaration [68599,68624]"/>
  <match src=".: . [110905,110906]" dest=".: . [39818,39819]"/>
  <match src="primitive_type [4662,4669]" dest="primitive_type [5226,5233]"/>
  <match src="(: ( [13567,13568]" dest="(: ( [23565,23566]"/>
  <match src="yul_function_call [99087,99118]" dest="yul_function_call [77737,77768]"/>
  <match src="primitive_type [53493,53500]" dest="primitive_type [12606,12613]"/>
  <match src="]: ] [104984,104985]" dest="]: ] [33897,33898]"/>
  <match src="uint: uint [63093,63097]" dest="uint: uint [19927,19931]"/>
  <match src="function: function [13096,13104]" dest="function: function [23094,23102]"/>
  <match src="call_argument [46970,46972]" dest="call_argument [52161,52163]"/>
  <match src="member_expression [88693,88703]" dest="member_expression [72786,72796]"/>
  <match src="primitive_type [45856,45863]" dest="primitive_type [51047,51054]"/>
  <match src="{: { [45846,45847]" dest="{: { [51037,51038]"/>
  <match src="): ) [489,490]" dest="): ) [1053,1054]"/>
  <match src="[: [ [46077,46078]" dest="[: [ [51268,51269]"/>
  <match src="identifier: couponAllowances [102769,102785]" dest="identifier: couponAllowances [31682,31698]"/>
  <match src="library_declaration [52342,56839]" dest="library_declaration [11455,15952]"/>
  <match src="identifier: value [7983,7988]" dest="identifier: value [8547,8552]"/>
  <match src="identifier: that [39312,39316]" dest="identifier: that [44503,44507]"/>
  <match src="primitive_type [62270,62274]" dest="primitive_type [19104,19108]"/>
  <match src="array_access [112482,112510]" dest="array_access [41395,41423]"/>
  <match src="): ) [63750,63751]" dest="): ) [20584,20585]"/>
  <match src="member_expression [102417,102432]" dest="member_expression [31330,31345]"/>
  <match src="pure: pure [64699,64703]" dest="pure: pure [16847,16851]"/>
  <match src="&quot;: &quot; [32915,32916]" dest="&quot;: &quot; [63510,63511]"/>
  <match src="user_defined_type [30665,30677]" dest="user_defined_type [17783,17795]"/>
  <match src="identifier: candidate [113678,113687]" dest="identifier: candidate [42591,42600]"/>
  <match src="visibility [56374,56382]" dest="visibility [15487,15495]"/>
  <match src="comment: /*     Copyright 2020 Reflective Dollar Devs, based on the works of the Dynamic Dollar Devs and the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [99138,99813]" dest="comment: /*     Copyright 2020 Reflective Dollar Devs, based on the works of the Dynamic Dollar Devs and the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [77788,78463]"/>
  <match src="inheritance_specifier [106571,106578]" dest="inheritance_specifier [35484,35491]"/>
  <match src="(: ( [100496,100497]" dest="(: ( [29409,29410]"/>
  <match src="unary_expression [61236,61238]" dest="unary_expression [65668,65670]"/>
  <match src="primitive_type [95894,95901]" dest="primitive_type [27112,27119]"/>
  <match src="{: { [104465,104466]" dest="{: { [33378,33379]"/>
  <match src="indexed: indexed [13766,13773]" dest="indexed: indexed [23764,23771]"/>
  <match src=".: . [108910,108911]" dest=".: . [37823,37824]"/>
  <match src=".: . [112663,112664]" dest=".: . [41576,41577]"/>
  <match src="false [107071,107076]" dest="false [35984,35989]"/>
  <match src="event: event [63226,63231]" dest="event: event [20060,20065]"/>
  <match src="identifier: epoch [112465,112470]" dest="identifier: epoch [41378,41383]"/>
  <match src="constant: constant [53350,53358]" dest="constant: constant [12463,12471]"/>
  <match src="emit: emit [108381,108385]" dest="emit: emit [37294,37298]"/>
  <match src="parameter [86741,86755]" dest="parameter [78939,78956]"/>
  <match src="expression_statement [107342,107408]" dest="expression_statement [36255,36321]"/>
  <match src="call_argument [5969,5981]" dest="call_argument [6533,6545]"/>
  <match src="visibility [12411,12419]" dest="visibility [22409,22417]"/>
  <match src="identifier: size [94560,94564]" dest="identifier: size [75418,75422]"/>
  <match src="identifier: ASCII_ZERO [38474,38484]" dest="identifier: ASCII_ZERO [43665,43675]"/>
  <match src="&lt;: &lt; [47799,47800]" dest="&lt;: &lt; [52990,52991]"/>
  <match src="visibility [101356,101362]" dest="visibility [30269,30275]"/>
  <match src="member_expression [113214,113253]" dest="member_expression [42127,42166]"/>
  <match src="identifier: Claim [89385,89390]" dest="identifier: Commit [81242,81248]"/>
  <match src="[: [ [104842,104843]" dest="[: [ [33755,33756]"/>
  <match src="member_expression [102029,102046]" dest="member_expression [30942,30959]"/>
  <match src="(: ( [85199,85200]" dest="(: ( [60583,60584]"/>
  <match src=",: , [90909,90910]" dest=",: , [73466,73467]"/>
  <match src="bytes32: bytes32 [43153,43160]" dest="bytes32: bytes32 [48344,48351]"/>
  <match src="contract: contract [106544,106552]" dest="contract: contract [35457,35465]"/>
  <match src="]: ] [104239,104240]" dest="]: ] [33152,33153]"/>
  <match src="identifier: setImplementation [98816,98833]" dest="identifier: setImplementation [77466,77483]"/>
  <match src=".: . [109440,109441]" dest=".: . [38353,38354]"/>
  <match src="}: } [43821,43822]" dest="}: } [49012,49013]"/>
  <match src="function: function [64207,64215]" dest="function: function [21041,21049]"/>
  <match src="primitive_type [95694,95701]" dest="primitive_type [26912,26919]"/>
  <match src="(: ( [105842,105843]" dest="(: ( [34755,34756]"/>
  <match src="visibility [2614,2622]" dest="visibility [3178,3186]"/>
  <match src="member_expression [41332,41348]" dest="member_expression [46523,46539]"/>
  <match src="(: ( [115375,115376]" dest="(: ( [70319,70320]"/>
  <match src="identifier: Permission [116121,116131]" dest="identifier: Permission [78492,78502]"/>
  <match src="&quot;: &quot; [24497,24498]" dest="&quot;: &quot; [79941,79942]"/>
  <match src=".: . [109639,109640]" dest=".: . [38552,38553]"/>
  <match src="identifier: _state [108259,108265]" dest="identifier: _state [37172,37178]"/>
  <match src="identifier: amount [61103,61109]" dest="identifier: amount [54899,54905]"/>
  <match src="parameter [1273,1299]" dest="parameter [1837,1863]"/>
  <match src="member_expression [109236,109257]" dest="member_expression [38149,38170]"/>
  <match src="string: string [40719,40725]" dest="string: string [45910,45916]"/>
  <match src="type_name [31111,31118]" dest="type_name [58555,58562]"/>
  <match src=".: . [9718,9719]" dest=".: . [10282,10283]"/>
  <match src="modifier: modifier [115199,115207]" dest="modifier: modifier [70143,70151]"/>
  <match src="): ) [45114,45115]" dest="): ) [50305,50306]"/>
  <match src="state_mutability [63876,63880]" dest="state_mutability [20710,20714]"/>
  <match src="number_literal: 66 [46970,46972]" dest="number_literal: 66 [52161,52163]"/>
  <match src="return: return [7611,7617]" dest="return: return [8175,8181]"/>
  <match src="function_definition [100179,100262]" dest="function_definition [29092,29175]"/>
  <match src="identifier: _state [100890,100896]" dest="identifier: _state [29803,29809]"/>
  <match src="type_name [34827,34839]" dest="type_name [18613,18625]"/>
  <match src="(: ( [112075,112076]" dest="(: ( [40988,40989]"/>
  <match src="identifier: IERC20 [11498,11504]" dest="identifier: IERC20 [21496,21502]"/>
  <match src="parameter [101588,101595]" dest="parameter [30501,30508]"/>
  <match src="): ) [1730,1731]" dest="): ) [2294,2295]"/>
  <match src="identifier: result [46449,46455]" dest="identifier: result [51640,51646]"/>
  <match src="returns: returns [62318,62325]" dest="returns: returns [19152,19159]"/>
  <match src="function_body [102729,102801]" dest="function_body [31642,31714]"/>
  <match src="(: ( [109651,109652]" dest="(: ( [38564,38565]"/>
  <match src="identifier: b [6313,6314]" dest="identifier: b [6877,6878]"/>
  <match src="): ) [7085,7086]" dest="): ) [7649,7650]"/>
  <match src="identifier: amount [17747,17753]" dest="identifier: amount [58802,58808]"/>
  <match src="call_argument [54983,55011]" dest="call_argument [14096,14124]"/>
  <match src="identifier: input [44876,44881]" dest="identifier: input [50067,50072]"/>
  <match src="): ) [100286,100287]" dest="): ) [29199,29200]"/>
  <match src="parameter [63200,63209]" dest="parameter [20034,20043]"/>
  <match src="function_body [6797,6865]" dest="function_body [7361,7429]"/>
  <match src="}: } [39290,39291]" dest="}: } [44481,44482]"/>
  <match src="=: = [109234,109235]" dest="=: = [38147,38148]"/>
  <match src="memory: memory [8986,8992]" dest="memory: memory [9550,9556]"/>
  <match src="): ) [9892,9893]" dest="): ) [10456,10457]"/>
  <match src="identifier: decimals [100277,100285]" dest="identifier: decimals [29190,29198]"/>
  <match src="identifier: onlyFrozenOrLocked [114997,115015]" dest="identifier: onlyFrozenOrLocked [69941,69959]"/>
  <match src="primitive_type [100309,100314]" dest="primitive_type [29222,29227]"/>
  <match src="number_literal: 0 [44963,44964]" dest="number_literal: 0 [50154,50155]"/>
  <match src="user_defined_type [74831,74843]" dest="user_defined_type [18578,18590]"/>
  <match src="primitive_type [105762,105769]" dest="primitive_type [34675,34682]"/>
  <match src="expression_statement [115185,115187]" dest="expression_statement [70129,70131]"/>
  <match src="address: address [13758,13765]" dest="address: address [23756,23763]"/>
  <match src="expression_statement [3395,3424]" dest="expression_statement [3959,3988]"/>
  <match src="): ) [8291,8292]" dest="): ) [8855,8856]"/>
  <match src="=: = [38539,38540]" dest="=: = [43730,43731]"/>
  <match src="if: if [44465,44467]" dest="if: if [49656,49658]"/>
  <match src=",: , [44663,44664]" dest=",: , [49854,49855]"/>
  <match src="type_name [105159,105166]" dest="type_name [34072,34079]"/>
  <match src=",: , [107686,107687]" dest=",: , [36599,36600]"/>
  <match src="identifier: ratio [6271,6276]" dest="identifier: ratio [6835,6840]"/>
  <match src="type_name [32673,32685]" dest="type_name [62219,62231]"/>
  <match src="identifier: D256 [56443,56447]" dest="identifier: D256 [15556,15560]"/>
  <match src="number_literal: 20e16 [53316,53321]" dest="number_literal: 20e16 [12429,12434]"/>
  <match src="pure: pure [54222,54226]" dest="pure: pure [13335,13339]"/>
  <match src="parameter [9400,9416]" dest="parameter [9964,9980]"/>
  <match src="primitive_type [109755,109761]" dest="primitive_type [38668,38674]"/>
  <match src="variable_declaration [86229,86242]" dest="variable_declaration [61708,61722]"/>
  <match src="): ) [107321,107322]" dest="): ) [36234,36235]"/>
  <match src="return: return [857,863]" dest="return: return [1421,1427]"/>
  <match src="visibility [107733,107741]" dest="visibility [36646,36654]"/>
  <match src="state_mutability [63653,63657]" dest="state_mutability [20487,20491]"/>
  <match src="identifier: totalRewarded [80282,80295]" dest="identifier: deposit [71761,71768]"/>
  <match src="returns: returns [55493,55500]" dest="returns: returns [14606,14613]"/>
  <match src="identifier: b [10152,10153]" dest="identifier: b [10716,10717]"/>
  <match src="type_name [61518,61525]" dest="type_name [60216,60223]"/>
  <match src="comment: // populate the most-significant character [46532,46574]" dest="comment: // populate the most-significant character [51723,51765]"/>
  <match src="call_argument [92211,92224]" dest="call_argument [57772,57785]"/>
  <match src="identifier: updateReserve [74941,74954]" dest="identifier: balanceOf [79673,79682]"/>
  <match src="}: } [44711,44712]" dest="}: } [49902,49903]"/>
  <match src="return: return [55220,55226]" dest="return: return [14333,14339]"/>
  <match src="function_definition [54760,54870]" dest="function_definition [13873,13983]"/>
  <match src="{: { [113548,113549]" dest="{: { [42461,42462]"/>
  <match src="function_definition [63789,63839]" dest="function_definition [20623,20673]"/>
  <match src="(: ( [113677,113678]" dest="(: ( [42590,42591]"/>
  <match src="identifier: start [88437,88442]" dest="identifier: start [71326,71331]"/>
  <match src="function_body [110144,110246]" dest="function_body [39057,39159]"/>
  <match src="private: private [53226,53233]" dest="private: private [12339,12346]"/>
  <match src="call_expression [42302,42321]" dest="call_expression [47493,47512]"/>
  <match src="member_expression [103505,103517]" dest="member_expression [32418,32430]"/>
  <match src="{: { [8125,8126]" dest="{: { [8689,8690]"/>
  <match src="(: ( [76439,76440]" dest="(: ( [80571,80572]"/>
  <match src=",: , [4098,4099]" dest=",: , [4662,4663]"/>
  <match src="function_definition [63844,63953]" dest="function_definition [20678,20787]"/>
  <match src="identifier: to [64340,64342]" dest="identifier: to [21174,21176]"/>
  <match src="identifier: account [110170,110177]" dest="identifier: account [39083,39090]"/>
  <match src="): ) [28138,28139]" dest="): ) [61449,61450]"/>
  <match src="identifier: Decimal [35093,35100]" dest="identifier: Decimal [61983,61990]"/>
  <match src="member_expression [111820,111859]" dest="member_expression [40733,40772]"/>
  <match src="(: ( [43557,43558]" dest="(: ( [48748,48749]"/>
  <match src="): ) [105715,105716]" dest="): ) [34628,34629]"/>
  <match src="&quot;: &quot; [100165,100166]" dest="&quot;: &quot; [29078,29079]"/>
  <match src="call_expression [29950,29981]" dest="call_expression [18416,18474]"/>
  <match src="call_expression [41332,41688]" dest="call_expression [46523,46879]"/>
  <match src="call_expression [4090,4127]" dest="call_expression [4654,4691]"/>
  <match src="user_defined_type [31933,31945]" dest="user_defined_type [17408,17420]"/>
  <match src="call_expression [107366,107407]" dest="call_expression [36279,36320]"/>
  <match src="): ) [104666,104667]" dest="): ) [33579,33580]"/>
  <match src="type_name [53218,53225]" dest="type_name [12331,12338]"/>
  <match src="member_expression [108224,108256]" dest="member_expression [37137,37169]"/>
  <match src="primitive_type [13800,13807]" dest="primitive_type [23798,23805]"/>
  <match src="function_body [74015,74187]" dest="function_body [68588,68866]"/>
  <match src="primitive_type [46824,46831]" dest="primitive_type [52015,52022]"/>
  <match src="call_expression [91684,91730]" dest="call_expression [64629,64670]"/>
  <match src="): ) [24270,24271]" dest="): ) [59990,59991]"/>
  <match src="): ) [92223,92224]" dest="): ) [57784,57785]"/>
  <match src="}: } [100172,100173]" dest="}: } [29085,29086]"/>
  <match src="function: function [101229,101237]" dest="function: function [30142,30150]"/>
  <match src="identifier: BASE [6093,6097]" dest="identifier: BASE [6657,6661]"/>
  <match src="-: - [46459,46460]" dest="-: - [51650,51651]"/>
  <match src="uint256: uint256 [54031,54038]" dest="uint256: uint256 [13144,13151]"/>
  <match src="update_expression [45533,45536]" dest="update_expression [50724,50727]"/>
  <match src="comment: /*     Copyright 2020 Reflective Dollar Devs, based on the works of the Dynamic Dollar Devs and the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [72030,72705]" dest="comment: /*     Copyright 2020 Reflective Dollar Devs, based on the works of the Dynamic Dollar Devs and the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [28051,28726]"/>
  <match src="type_name [105065,105072]" dest="type_name [33978,33985]"/>
  <match src="primitive_type [90164,90171]" dest="primitive_type [62585,62592]"/>
  <match src="internal: internal [107615,107623]" dest="internal: internal [36528,36536]"/>
  <match src="member_expression [8171,8178]" dest="member_expression [8735,8742]"/>
  <match src="identifier: offset [52968,52974]" dest="identifier: offset [12081,12087]"/>
  <match src="state_variable_declaration [53334,53393]" dest="state_variable_declaration [12447,12506]"/>
  <match src="call_argument [21187,21222]" dest="call_argument [65482,65519]"/>
  <match src="{: { [105074,105075]" dest="{: { [33987,33988]"/>
  <match src="function_definition [64207,64279]" dest="function_definition [21041,21113]"/>
  <match src="type_name [112727,112734]" dest="type_name [41640,41647]"/>
  <match src="(: ( [56597,56598]" dest="(: ( [15710,15711]"/>
  <match src="parameter [63720,63727]" dest="parameter [20554,20561]"/>
  <match src="function: function [110100,110108]" dest="function: function [39013,39021]"/>
  <match src="true [113911,113915]" dest="true [42824,42828]"/>
  <match src="identifier: input [46832,46837]" dest="identifier: input [52023,52028]"/>
  <match src="parameter [105291,105308]" dest="parameter [34204,34221]"/>
  <match src="identifier: Require [91028,91035]" dest="identifier: Require [57979,57986]"/>
  <match src="type_name [53334,53341]" dest="type_name [12447,12454]"/>
  <match src="primitive_type [104194,104201]" dest="primitive_type [33107,33114]"/>
  <match src="state_variable_declaration [53965,54020]" dest="state_variable_declaration [13078,13133]"/>
  <match src="type_cast_expression [41304,41706]" dest="type_cast_expression [46495,46897]"/>
  <match src="visibility [9433,9441]" dest="visibility [9997,10005]"/>
  <match src="state_mutability [1709,1713]" dest="state_mutability [2273,2277]"/>
  <match src="bytes: bytes [98474,98479]" dest="bytes: bytes [77124,77129]"/>
  <match src="event_definition [63382,63557]" dest="event_definition [20216,20391]"/>
  <match src="): ) [6663,6664]" dest="): ) [7227,7228]"/>
  <match src="): ) [8409,8410]" dest="): ) [8973,8974]"/>
  <match src="member_expression [104825,104842]" dest="member_expression [33738,33755]"/>
  <match src="identifier: symbol [100188,100194]" dest="identifier: symbol [29101,29107]"/>
  <match src="parameter [34827,34861]" dest="parameter [18613,18638]"/>
  <match src="identifier: self [7765,7769]" dest="identifier: self [8329,8333]"/>
  <match src="identifier: Decimal [34863,34870]" dest="identifier: Decimal [67833,67840]"/>
  <match src="call_argument [47042,47059]" dest="call_argument [52233,52250]"/>
  <match src="external: external [89451,89459]" dest="external: external [72522,72530]"/>
  <match src="identifier: shift [47415,47420]" dest="identifier: shift [52606,52611]"/>
  <match src="event: event [24229,24234]" dest="event: event [59899,59904]"/>
  <match src=".: . [103653,103654]" dest=".: . [32566,32567]"/>
  <match src="member_expression [89668,89701]" dest="member_expression [72663,72696]"/>
  <match src="address: address [19924,19931]" dest="address: address [65364,65371]"/>
  <match src="comment: // 50% [53933,53939]" dest="comment: // 50% [13046,13052]"/>
  <match src="parameter [100654,100661]" dest="parameter [29567,29574]"/>
  <match src="identifier: setup [71891,71896]" dest="identifier: setup [25704,25709]"/>
  <match src="call_argument [58900,58914]" dest="call_argument [64572,64600]"/>
  <match src="return_statement [9186,9217]" dest="return_statement [9750,9781]"/>
  <match src="identifier: _state [109796,109802]" dest="identifier: _state [38709,38715]"/>
  <match src="]: ] [47078,47079]" dest="]: ] [52269,52270]"/>
  <match src="=: = [98495,98496]" dest="=: = [77145,77146]"/>
  <match src="): ) [88778,88779]" dest="): ) [73729,73730]"/>
  <match src="primitive_type [63200,63207]" dest="primitive_type [20034,20041]"/>
  <match src="}: } [111722,111723]" dest="}: } [40635,40636]"/>
  <match src="visibility [62639,62647]" dest="visibility [19473,19481]"/>
  <match src="primitive_type [53271,53278]" dest="primitive_type [12384,12391]"/>
  <match src="call_argument [43745,43751]" dest="call_argument [48936,48942]"/>
  <match src="pure: pure [46766,46770]" dest="pure: pure [51957,51961]"/>
  <match src="function_body [54826,54870]" dest="function_body [13939,13983]"/>
  <match src="user_defined_type [96602,96610]" dest="user_defined_type [27820,27828]"/>
  <match src="): ) [16116,16117]" dest="): ) [16868,16869]"/>
  <match src="string: string [107985,107991]" dest="string: string [36898,36904]"/>
  <match src="uint256: uint256 [113626,113633]" dest="uint256: uint256 [42539,42546]"/>
  <match src="parameter [104652,104666]" dest="parameter [33565,33579]"/>
  <match src="parameter [105438,105455]" dest="parameter [34351,34368]"/>
  <match src="identifier: candidate [105368,105377]" dest="identifier: candidate [34281,34290]"/>
  <match src="call_argument [105368,105377]" dest="call_argument [34281,34290]"/>
  <match src="primitive_type [7707,7714]" dest="primitive_type [8271,8278]"/>
  <match src="parameter [55853,55860]" dest="parameter [14966,14973]"/>
  <match src="&quot;: &quot; [30493,30494]" dest="&quot;: &quot; [65741,65742]"/>
  <match src="type_name [6729,6736]" dest="type_name [7293,7300]"/>
  <match src="if: if [42653,42655]" dest="if: if [47844,47846]"/>
  <match src="return_type_definition [62653,62667]" dest="return_type_definition [19487,19501]"/>
  <match src="member_expression [110608,110660]" dest="member_expression [39521,39573]"/>
  <match src="(: ( [115287,115288]" dest="(: ( [70231,70232]"/>
  <match src="(: ( [102851,102852]" dest="(: ( [31764,31765]"/>
  <match src="address: address [105291,105298]" dest="address: address [34204,34211]"/>
  <match src="type_name [45211,45216]" dest="type_name [50402,50407]"/>
  <match src="call_argument [115304,115308]" dest="call_argument [70248,70252]"/>
  <match src="call_expression [41539,41558]" dest="call_expression [46730,46749]"/>
  <match src="call_argument [23785,23820]" dest="call_argument [80088,80118]"/>
  <match src="[: [ [110390,110391]" dest="[: [ [39303,39304]"/>
  <match src="member_expression [109950,109994]" dest="member_expression [38863,38907]"/>
  <match src="type_name [95442,95449]" dest="type_name [26660,26667]"/>
  <match src="user_defined_type [6513,6517]" dest="user_defined_type [7077,7081]"/>
  <match src="identifier: fluidUntil [102571,102581]" dest="identifier: fluidUntil [31484,31494]"/>
  <match src="struct_member [96138,96153]" dest="struct_member [27356,27371]"/>
  <match src="internal: internal [111106,111114]" dest="internal: internal [40019,40027]"/>
  <match src="parameter [838,845]" dest="parameter [1402,1409]"/>
  <match src="event_definition [62213,62282]" dest="event_definition [19047,19116]"/>
  <match src="identifier: newLock [113779,113786]" dest="identifier: newLock [42692,42699]"/>
  <match src=":: : [6636,6637]" dest=":: : [7200,7201]"/>
  <match src="number_literal: 1800 [53132,53136]" dest="number_literal: 1800 [12245,12249]"/>
  <match src="identifier: div [7437,7440]" dest="identifier: div [8001,8004]"/>
  <match src="expression_statement [115043,115175]" dest="expression_statement [69987,70119]"/>
  <match src="primitive_type [53562,53569]" dest="primitive_type [12675,12682]"/>
  <match src="parameter [56397,56416]" dest="parameter [15510,15529]"/>
  <match src="identifier: Getters [99823,99830]" dest="identifier: Getters [28736,28743]"/>
  <match src="identifier: this [80372,80376]" dest="identifier: this [71993,71997]"/>
  <match src="(: ( [30711,30712]" dest="(: ( [18827,18828]"/>
  <match src="identifier: balanceOfRewarded [90377,90394]" dest="identifier: burnFromAccount [62725,62740]"/>
  <match src="primitive_type [30337,30344]" dest="primitive_type [58100,58107]"/>
  <match src="[: [ [105242,105243]" dest="[: [ [34155,34156]"/>
  <match src="parameter [107448,107462]" dest="parameter [36361,36375]"/>
  <match src="return: return [100673,100679]" dest="return: return [29586,29592]"/>
  <match src="uint256: uint256 [45360,45367]" dest="uint256: uint256 [50551,50558]"/>
  <match src="primitive_type [41785,41792]" dest="primitive_type [46976,46983]"/>
  <match src="assignment_expression [47070,47109]" dest="assignment_expression [52261,52300]"/>
  <match src="parameter [113830,113847]" dest="parameter [42743,42760]"/>
  <match src="identifier: value [6821,6826]" dest="identifier: value [7385,7390]"/>
  <match src="member_expression [108026,108040]" dest="member_expression [36939,36953]"/>
  <match src="identifier: i [45368,45369]" dest="identifier: i [50559,50560]"/>
  <match src="variable_declaration_statement [46357,46379]" dest="variable_declaration_statement [51548,51570]"/>
  <match src="return_type_definition [9028,9042]" dest="return_type_definition [9592,9606]"/>
  <match src="string [100250,100255]" dest="string [29163,29168]"/>
  <match src="): ) [85240,85241]" dest="): ) [60620,60621]"/>
  <match src="function_definition [90083,90938]" dest="function_definition [73014,73489]"/>
  <match src="(: ( [40404,40405]" dest="(: ( [45595,45596]"/>
  <match src="return: return [6383,6389]" dest="return: return [6947,6953]"/>
  <match src="state_mutability [104018,104022]" dest="state_mutability [32931,32935]"/>
  <match src="type_name [86244,86248]" dest="type_name [61757,61761]"/>
  <match src="private: private [57844,57851]" dest="private: private [67530,67537]"/>
  <match src="function_definition [102641,102801]" dest="function_definition [31554,31714]"/>
  <match src="comment: /*     Copyright 2020 Reflective Dollar Devs, based on the works of the Dynamic Dollar Devs and the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [60022,60697]" dest="comment: /*     Copyright 2020 Reflective Dollar Devs, based on the works of the Dynamic Dollar Devs and the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [24996,25671]"/>
  <match src="assignment_expression [108538,108625]" dest="assignment_expression [37451,37538]"/>
  <match src=",: , [43567,43568]" dest=",: , [48758,48759]"/>
  <match src=".: . [108953,108954]" dest=".: . [37866,37867]"/>
  <match src="(: ( [92198,92199]" dest="(: ( [57759,57760]"/>
  <match src="identifier: currentPeriod [111030,111043]" dest="identifier: currentPeriod [39943,39956]"/>
  <match src="identifier: periodFor [104881,104890]" dest="identifier: periodFor [33794,33803]"/>
  <match src="identifier: _state [110545,110551]" dest="identifier: _state [39458,39464]"/>
  <match src="function: function [62288,62296]" dest="function: function [19122,19130]"/>
  <match src="user_defined_type [34907,34919]" dest="user_defined_type [68277,68289]"/>
  <match src="identifier: amount [30310,30316]" dest="identifier: amount [58705,58711]"/>
  <match src="identifier: incrementBalanceOfPhantom [91740,91765]" dest="identifier: redeemToAccount [63817,63832]"/>
  <match src="identifier: epoch [111834,111839]" dest="identifier: epoch [40747,40752]"/>
  <match src="state_variable_declaration [54096,54144]" dest="state_variable_declaration [13209,13257]"/>
  <match src="visibility [104778,104784]" dest="visibility [33691,33697]"/>
  <match src="function_body [104668,104735]" dest="function_body [33581,33648]"/>
  <match src="identifier: abi [39527,39530]" dest="identifier: abi [44718,44721]"/>
  <match src="{: { [38990,38991]" dest="{: { [44181,44182]"/>
  <match src="identifier: D256 [31941,31945]" dest="identifier: D256 [17416,17420]"/>
  <match src="): ) [88803,88804]" dest="): ) [55600,55601]"/>
  <match src="primitive_type [39499,39505]" dest="primitive_type [44690,44696]"/>
  <match src="type_name [3237,3244]" dest="type_name [3801,3808]"/>
  <match src="contract_body [38406,47971]" dest="contract_body [43597,53162]"/>
  <match src="): ) [100969,100970]" dest="): ) [29882,29883]"/>
  <match src="parameter [2637,2644]" dest="parameter [3201,3208]"/>
  <match src="identifier: sender [13507,13513]" dest="identifier: sender [23505,23511]"/>
  <match src="): ) [106688,106689]" dest="): ) [35601,35602]"/>
  <match src="[: [ [109551,109552]" dest="[: [ [38464,38465]"/>
  <match src="identifier: payloadA [43161,43169]" dest="identifier: payloadA [48352,48360]"/>
  <match src="identifier: _state [109625,109631]" dest="identifier: _state [38538,38544]"/>
  <match src="function_definition [54188,54272]" dest="function_definition [13301,13385]"/>
  <match src="if_statement [40035,40511]" dest="if_statement [45226,45702]"/>
  <match src="uint256: uint256 [9682,9689]" dest="uint256: uint256 [10246,10253]"/>
  <match src="identifier: file [40573,40577]" dest="identifier: file [45764,45768]"/>
  <match src="pragma_value:  ABIEncoderV2 [78,91]" dest="pragma_value:  ABIEncoderV2 [78,91]"/>
  <match src="{: { [45116,45117]" dest="{: { [50307,50308]"/>
  <match src=".: . [111246,111247]" dest=".: . [40159,40160]"/>
  <match src="user_defined_type [6356,6360]" dest="user_defined_type [6920,6924]"/>
  <match src="private: private [52837,52844]" dest="private: private [11950,11957]"/>
  <match src="identifier: epoch [110966,110971]" dest="identifier: epoch [39879,39884]"/>
  <match src="number_literal: 0 [53081,53082]" dest="number_literal: 0 [12194,12195]"/>
  <match src="): ) [102463,102464]" dest="): ) [31376,31377]"/>
  <match src="function: function [47656,47664]" dest="function: function [52847,52855]"/>
  <match src="identifier: b [6927,6928]" dest="identifier: b [7491,7492]"/>
  <match src="): ) [88717,88718]" dest="): ) [83398,83399]"/>
  <match src="bytes32: bytes32 [41807,41814]" dest="bytes32: bytes32 [46998,47005]"/>
  <match src=",: , [58976,58977]" dest=",: , [54766,54767]"/>
  <match src="member_expression [109392,109424]" dest="member_expression [38305,38337]"/>
  <match src="identifier: sender [87982,87988]" dest="identifier: sender [63580,63586]"/>
  <match src="return_type_definition [104323,104340]" dest="return_type_definition [33236,33253]"/>
  <match src="parameter [106754,106771]" dest="parameter [35667,35684]"/>
  <match src="call_expression [33627,33701]" dest="call_expression [62777,62894]"/>
  <match src="identifier: must [40551,40555]" dest="identifier: must [45742,45746]"/>
  <match src="identifier: incrementRejectFor [113103,113121]" dest="identifier: incrementRejectFor [42016,42034]"/>
  <match src="primitive_type [106675,106682]" dest="primitive_type [35588,35595]"/>
  <match src="identifier: owner [100607,100612]" dest="identifier: owner [29520,29525]"/>
  <match src="identifier: self [8229,8233]" dest="identifier: self [8793,8797]"/>
  <match src="internal: internal [35396,35404]" dest="internal: internal [57387,57395]"/>
  <match src=",: , [41114,41115]" dest=",: , [46305,46306]"/>
  <match src="&gt;: &gt; [94611,94612]" dest="&gt;: &gt; [75469,75470]"/>
  <match src="call_struct_argument [54984,55010]" dest="call_struct_argument [14097,14123]"/>
  <match src=".: . [87981,87982]" dest=".: . [63579,63580]"/>
  <match src="comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [14056,14619]" dest="comment: /*     Copyright 2019 dYdX Trading Inc.      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [42839,43438]"/>
  <match src="uint256: uint256 [47311,47318]" dest="uint256: uint256 [52502,52509]"/>
  <match src="(: ( [108394,108395]" dest="(: ( [37307,37308]"/>
  <match src="type_name [6513,6517]" dest="type_name [7077,7081]"/>
  <match src="uint256: uint256 [90164,90171]" dest="uint256: uint256 [62585,62592]"/>
  <match src="variable_declaration [47223,47232]" dest="variable_declaration [52414,52423]"/>
  <match src="return_type_definition [64121,64135]" dest="return_type_definition [20955,20969]"/>
  <match src="type_name [88243,88250]" dest="type_name [71262,71269]"/>
  <match src="event_paramater [88300,88313]" dest="event_paramater [60175,60188]"/>
  <match src="type_name [1262,1269]" dest="type_name [1826,1833]"/>
  <match src="type_name [33327,33334]" dest="type_name [57945,57952]"/>
  <match src="call_argument [76485,76489]" dest="call_argument [80621,80625]"/>
  <match src="): ) [103486,103487]" dest="): ) [32399,32400]"/>
  <match src="identifier: FILE [76485,76489]" dest="identifier: FILE [80621,80625]"/>
  <match src="): ) [40485,40486]" dest="): ) [45676,45677]"/>
  <match src="{: { [102465,102466]" dest="{: { [31378,31379]"/>
  <match src="user_defined_type [7646,7650]" dest="user_defined_type [8210,8214]"/>
  <match src="type_name [43129,43136]" dest="type_name [48320,48327]"/>
  <match src="identifier: require [98578,98585]" dest="identifier: require [77228,77235]"/>
  <match src="identifier: tokenA [86749,86755]" dest="identifier: candidate [78947,78956]"/>
  <match src="bytes: bytes [45828,45833]" dest="bytes: bytes [51019,51024]"/>
  <match src="address: address [110284,110291]" dest="address: address [39197,39204]"/>
  <match src="number_literal: 0 [9359,9360]" dest="number_literal: 0 [9923,9924]"/>
  <match src="(: ( [62606,62607]" dest="(: ( [19440,19441]"/>
  <match src="}: } [95619,95620]" dest="}: } [26837,26838]"/>
  <match src="address: address [102667,102674]" dest="address: address [31580,31587]"/>
  <match src="(: ( [62960,62961]" dest="(: ( [19794,19795]"/>
  <match src="identifier: that [41091,41095]" dest="identifier: that [46282,46286]"/>
  <match src="=: = [46647,46648]" dest="=: = [51838,51839]"/>
  <match src="visibility [100743,100749]" dest="visibility [29656,29662]"/>
  <match src="function_definition [112698,112875]" dest="function_definition [41611,41788]"/>
  <match src="identifier: sub [6839,6842]" dest="identifier: sub [7403,7406]"/>
  <match src="visibility [92078,92086]" dest="visibility [65236,65244]"/>
  <match src="bool: bool [9456,9460]" dest="bool: bool [10020,10024]"/>
  <match src="pure: pure [5912,5916]" dest="pure: pure [6476,6480]"/>
  <match src="state_mutability [6572,6576]" dest="state_mutability [7136,7140]"/>
  <match src="identifier: bstr [45224,45228]" dest="identifier: bstr [50415,50419]"/>
  <match src="function: function [340,348]" dest="function: function [904,912]"/>
  <match src="type_name [46010,46015]" dest="type_name [51201,51206]"/>
  <match src="identifier: D256 [56121,56125]" dest="identifier: D256 [15234,15238]"/>
  <match src="user_defined_type [8471,8475]" dest="user_defined_type [9035,9039]"/>
  <match src="member_expression [109212,109226]" dest="member_expression [38125,38139]"/>
  <match src="(: ( [55239,55240]" dest="(: ( [14352,14353]"/>
  <match src="state_mutability [384,388]" dest="state_mutability [948,952]"/>
  <match src="type_name [55734,55741]" dest="type_name [14847,14854]"/>
  <match src="primitive_type [5642,5649]" dest="primitive_type [6206,6213]"/>
  <match src="function_definition [102096,102325]" dest="function_definition [31009,31238]"/>
  <match src="identifier: newImplementation [98430,98447]" dest="identifier: newImplementation [77080,77097]"/>
  <match src="type_name [9400,9404]" dest="type_name [9964,9968]"/>
  <match src="identifier: FILE [114665,114669]" dest="identifier: FILE [69609,69613]"/>
  <match src="member_expression [8807,8814]" dest="member_expression [9371,9378]"/>
  <match src="visibility [107615,107623]" dest="visibility [36528,36536]"/>
  <match src="member_expression [102417,102453]" dest="member_expression [31330,31366]"/>
  <match src="uint256: uint256 [1689,1696]" dest="uint256: uint256 [2253,2260]"/>
  <match src="bool: bool [9170,9174]" dest="bool: bool [9734,9738]"/>
  <match src="primitive_type [56796,56803]" dest="primitive_type [15909,15916]"/>
  <match src="call_argument [23174,23181]" dest="call_argument [54944,54951]"/>
  <match src="identifier: j [45058,45059]" dest="identifier: j [50249,50250]"/>
  <match src=".: . [101201,101202]" dest=".: . [30114,30115]"/>
  <match src="identifier: _state [110154,110160]" dest="identifier: _state [39067,39073]"/>
  <match src="identifier: Storage [96808,96815]" dest="identifier: Storage [28026,28033]"/>
  <match src="parameter [39885,39894]" dest="parameter [45076,45085]"/>
  <match src="): ) [103673,103674]" dest="): ) [32586,32587]"/>
  <match src="identifier: _state [102417,102423]" dest="identifier: _state [31330,31336]"/>
  <match src="function: function [64284,64292]" dest="function: function [21118,21126]"/>
  <match src="identifier: initializeCouponsExpiration [111738,111765]" dest="identifier: initializeCouponsExpiration [40651,40678]"/>
  <match src="type_name [64013,64017]" dest="type_name [20847,20851]"/>
  <match src="): ) [88313,88314]" dest="): ) [83262,83263]"/>
  <match src="identifier: _state [101091,101097]" dest="identifier: _state [30004,30010]"/>
  <match src="identifier: getGovernanceQuorum [55144,55163]" dest="identifier: getGovernanceQuorum [14257,14276]"/>
  <match src="array_access [109838,109862]" dest="array_access [38751,38775]"/>
  <match src="call_argument [58882,58886]" dest="call_argument [64554,64558]"/>
  <match src=".: . [109250,109251]" dest=".: . [38163,38164]"/>
  <match src="expression_statement [110545,110677]" dest="expression_statement [39458,39590]"/>
  <match src="primitive_type [53805,53812]" dest="primitive_type [12918,12925]"/>
  <match src="type_name [103479,103486]" dest="type_name [32392,32399]"/>
  <match src="function: function [55567,55575]" dest="function: function [14680,14688]"/>
  <match src="identifier: require [19903,19910]" dest="identifier: require [65343,65350]"/>
  <match src="variable_declaration [75540,75563]" dest="variable_declaration [73616,73631]"/>
  <match src="member_expression [91616,91644]" dest="member_expression [73634,73643]"/>
  <match src="(: ( [64104,64105]" dest="(: ( [20938,20939]"/>
  <match src="&quot;: &quot; [58797,58798]" dest="&quot;: &quot; [55046,55047]"/>
  <match src="identifier: candidates [113183,113193]" dest="identifier: candidates [42096,42106]"/>
  <match src="member_expression [30699,30723]" dest="member_expression [18815,18834]"/>
  <match src="call_argument [68067,68092]" dest="call_argument [83624,83639]"/>
  <match src="function_definition [106736,106842]" dest="function_definition [35649,35755]"/>
  <match src="identifier: balanceCheck [90846,90858]" dest="identifier: balanceCheck [54822,54834]"/>
  <match src="{: { [103287,103288]" dest="{: { [32200,32201]"/>
  <match src="call_expression [30699,30719]" dest="call_expression [18815,18830]"/>
  <match src="): ) [111582,111583]" dest="): ) [40495,40496]"/>
  <match src="address: address [104612,104619]" dest="address: address [33525,33532]"/>
  <match src="call_expression [116828,116843]" dest="call_expression [83434,83449]"/>
  <match src="emit: emit [98621,98625]" dest="emit: emit [77271,77275]"/>
  <match src="identifier: staged [109176,109182]" dest="identifier: staged [38089,38095]"/>
  <match src="member_expression [115232,115244]" dest="member_expression [70176,70188]"/>
  <match src="function_body [109786,110094]" dest="function_body [38699,39007]"/>
  <match src=".: . [100994,100995]" dest=".: . [29907,29908]"/>
  <match src="uint256: uint256 [30337,30344]" dest="uint256: uint256 [58100,58107]"/>
  <match src="yul_identifier [105843,105847]" dest="yul_identifier [34756,34760]"/>
  <match src="boolean_literal [113911,113915]" dest="boolean_literal [42824,42828]"/>
  <match src="member_expression [109392,109407]" dest="member_expression [38305,38320]"/>
  <match src="call_struct_argument [8149,8179]" dest="call_struct_argument [8713,8743]"/>
  <match src="): ) [6854,6855]" dest="): ) [7418,7419]"/>
  <match src="uint256: uint256 [52829,52836]" dest="uint256: uint256 [11942,11949]"/>
  <match src="type_name [111079,111091]" dest="type_name [39992,40004]"/>
  <match src="primitive_type [55502,55509]" dest="primitive_type [14615,14622]"/>
  <match src="identifier: candidate [113310,113319]" dest="identifier: candidate [42223,42232]"/>
  <match src="}: } [101014,101015]" dest="}: } [29927,29928]"/>
  <match src=".: . [92400,92401]" dest=".: . [79036,79037]"/>
  <match src="{: { [44227,44228]" dest="{: { [49418,49419]"/>
  <match src="(: ( [47086,47087]" dest="(: ( [52277,52278]"/>
  <match src="member_expression [89935,89945]" dest="member_expression [72879,72889]"/>
  <match src="state_mutability [104180,104184]" dest="state_mutability [33093,33097]"/>
  <match src="type_name [62662,62666]" dest="type_name [19496,19500]"/>
  <match src=",: , [112391,112392]" dest=",: , [41304,41305]"/>
  <match src=",: , [91360,91361]" dest=",: , [80821,80822]"/>
  <match src="identifier: accounts [113587,113595]" dest="identifier: accounts [42500,42508]"/>
  <match src="external: external [64168,64176]" dest="external: external [21002,21010]"/>
  <match src="return_type_definition [101262,101279]" dest="return_type_definition [30175,30192]"/>
  <match src="parameter [112595,112614]" dest="parameter [41508,41527]"/>
  <match src="primitive_type [109739,109746]" dest="primitive_type [38652,38659]"/>
  <match src="identifier: account [108240,108247]" dest="identifier: account [37153,37160]"/>
  <match src="uint256: uint256 [103857,103864]" dest="uint256: uint256 [32770,32777]"/>
  <match src=".: . [110965,110966]" dest=".: . [39878,39879]"/>
  <match src="{: { [113166,113167]" dest="{: { [42079,42080]"/>
  <match src="): ) [45881,45882]" dest="): ) [51072,51073]"/>
  <match src="): ) [7073,7074]" dest="): ) [7637,7638]"/>
  <match src="parameter [105065,105072]" dest="parameter [33978,33985]"/>
  <match src="identifier: spender [59054,59061]" dest="identifier: spender [65057,65064]"/>
  <match src="function: function [64090,64098]" dest="function: function [20924,20932]"/>
  <match src="identifier: _state [101787,101793]" dest="identifier: _state [30700,30706]"/>
  <match src="state_variable_declaration [53271,53322]" dest="state_variable_declaration [12384,12435]"/>
  <match src="identifier: balanceOf [100357,100366]" dest="identifier: balanceOf [29270,29279]"/>
  <match src="): ) [102364,102365]" dest="): ) [31277,31278]"/>
  <match src="call_expression [88672,88726]" dest="call_expression [83362,83400]"/>
  <match src="type_name [106655,106662]" dest="type_name [35568,35575]"/>
  <match src="parameter [35359,35394]" dest="parameter [57350,57385]"/>
  <match src="}: } [105410,105411]" dest="}: } [34323,34324]"/>
  <match src="visibility [98393,98401]" dest="visibility [77043,77051]"/>
  <match src="): ) [11786,11787]" dest="): ) [21784,21785]"/>
  <match src="function_body [107332,107414]" dest="function_body [36245,36327]"/>
  <match src="identifier: b [1398,1399]" dest="identifier: b [1962,1963]"/>
  <match src="call_expression [56585,56629]" dest="call_expression [15698,15742]"/>
  <match src="(: ( [102046,102047]" dest="(: ( [30959,30960]"/>
  <match src="contract_declaration [15774,22597]" dest="contract_declaration [59521,65863]"/>
  <match src="uint256: uint256 [15976,15983]" dest="uint256: uint256 [83139,83146]"/>
  <match src="{: { [95884,95885]" dest="{: { [27102,27103]"/>
  <match src=",: , [62620,62621]" dest=",: , [19454,19455]"/>
  <match src="primitive_type [41304,41310]" dest="primitive_type [46495,46501]"/>
  <match src="primitive_type [62622,62629]" dest="primitive_type [19456,19463]"/>
  <match src="number_literal: 0 [101977,101978]" dest="number_literal: 0 [30890,30891]"/>
  <match src="primitive_type [103996,104003]" dest="primitive_type [32909,32916]"/>
  <match src="constant: constant [53234,53242]" dest="constant: constant [12347,12355]"/>
  <match src="internal: internal [38968,38976]" dest="internal: internal [44159,44167]"/>
  <match src=".: . [113746,113747]" dest=".: . [42659,42660]"/>
  <match src="parameter [9641,9657]" dest="parameter [10205,10221]"/>
  <match src="member_expression [107342,107363]" dest="member_expression [36255,36276]"/>
  <match src=".: . [109802,109803]" dest=".: . [38715,38716]"/>
  <match src="primitive_type [101723,101730]" dest="primitive_type [30636,30643]"/>
  <match src="if: if [1960,1962]" dest="if: if [2524,2526]"/>
  <match src="=: = [46822,46823]" dest="=: = [52013,52014]"/>
  <match src=",: , [39357,39358]" dest=",: , [44548,44549]"/>
  <match src=",: , [63163,63164]" dest=",: , [19997,19998]"/>
  <match src="{: { [99073,99074]" dest="{: { [77723,77724]"/>
  <match src="identifier: value [10222,10227]" dest="identifier: value [10786,10791]"/>
  <match src="member_expression [112482,112499]" dest="member_expression [41395,41412]"/>
  <match src="type_name [74919,74926]" dest="type_name [79656,79663]"/>
  <match src="identifier: FILE [93047,93051]" dest="identifier: FILE [81012,81016]"/>
  <match src="public: public [116744,116750]" dest="public: public [83304,83310]"/>
  <match src=",: , [39174,39175]" dest=",: , [44365,44366]"/>
  <match src="address: address [105738,105745]" dest="address: address [34651,34658]"/>
  <match src="bytes32: bytes32 [46730,46737]" dest="bytes32: bytes32 [51921,51928]"/>
  <match src="identifier: Decimal [34276,34283]" dest="identifier: Decimal [17948,17955]"/>
  <match src="identifier: mod [4015,4018]" dest="identifier: mod [4579,4582]"/>
  <match src="call_argument [39527,39807]" dest="call_argument [44718,44998]"/>
  <match src="): ) [88725,88726]" dest="): ) [83399,83400]"/>
  <match src="}: } [8612,8613]" dest="}: } [9176,9177]"/>
  <match src="parameter [64251,64263]" dest="parameter [21085,21097]"/>
  <match src="identifier: a [1964,1965]" dest="identifier: a [2528,2529]"/>
  <match src="pure: pure [9557,9561]" dest="pure: pure [10121,10125]"/>
  <match src="comment: // 66% [53394,53400]" dest="comment: // 66% [12507,12513]"/>
  <match src="(: ( [63666,63667]" dest="(: ( [20500,20501]"/>
  <match src="identifier: epoch [104004,104009]" dest="identifier: epoch [32917,32922]"/>
  <match src="uint256: uint256 [78091,78098]" dest="uint256: uint256 [66671,66678]"/>
  <match src="array_access [110608,110630]" dest="array_access [39521,39543]"/>
  <match src="=: = [99960,99961]" dest="=: = [28873,28874]"/>
  <match src="return_type_definition [64242,64278]" dest="return_type_definition [21076,21112]"/>
  <match src="function_body [56418,56484]" dest="function_body [15531,15597]"/>
  <match src="(: ( [6225,6226]" dest="(: ( [6789,6790]"/>
  <match src="parameter [3248,3257]" dest="parameter [3812,3821]"/>
  <match src="}: } [54634,54635]" dest="}: } [13747,13748]"/>
  <match src="return_statement [106823,106836]" dest="return_statement [35736,35749]"/>
  <match src="(: ( [89784,89785]" dest="(: ( [72754,72755]"/>
  <match src="}: } [101222,101223]" dest="}: } [30135,30136]"/>
  <match src="primitive_type [13515,13522]" dest="primitive_type [23513,23520]"/>
  <match src="state_variable_declaration [52648,52731]" dest="state_variable_declaration [11761,11844]"/>
  <match src=",: , [6719,6720]" dest=",: , [7283,7284]"/>
  <match src="function: function [102934,102942]" dest="function: function [31847,31855]"/>
  <match src="(: ( [86207,86208]" dest="(: ( [54072,54073]"/>
  <match src="call_argument [43383,43407]" dest="call_argument [48574,48598]"/>
  <match src="(: ( [6693,6694]" dest="(: ( [7257,7258]"/>
  <match src="=: = [46279,46280]" dest="=: = [51470,51471]"/>
  <match src="(: ( [8788,8789]" dest="(: ( [9352,9353]"/>
  <match src="function_body [56568,56636]" dest="function_body [15681,15749]"/>
  <match src="identifier: redeemable [107872,107882]" dest="identifier: redeemable [36785,36795]"/>
  <match src="user_defined_type [111125,111137]" dest="user_defined_type [40038,40050]"/>
  <match src="event: event [106618,106623]" dest="event: event [35531,35536]"/>
  <match src="address: address [108395,108402]" dest="address: address [37308,37315]"/>
  <match src=".: . [102913,102914]" dest=".: . [31826,31827]"/>
  <match src="call_expression [103319,103335]" dest="call_expression [32232,32248]"/>
  <match src="}: } [6427,6428]" dest="}: } [6991,6992]"/>
  <match src="array_access [104058,104078]" dest="array_access [32971,32991]"/>
  <match src="{: { [27299,27300]" dest="{: { [55508,55509]"/>
  <match src="return_type_definition [56388,56417]" dest="return_type_definition [15501,15530]"/>
  <match src="identifier: sub [113452,113455]" dest="identifier: sub [42365,42368]"/>
  <match src="primitive_type [57952,57959]" dest="primitive_type [55638,55645]"/>
  <match src="): ) [59026,59027]" dest="): ) [54810,54811]"/>
  <match src="member_expression [112986,113003]" dest="member_expression [41899,41916]"/>
  <match src="uint256: uint256 [60923,60930]" dest="uint256: uint256 [54389,54396]"/>
  <match src="identifier: chainId [49349,49356]" dest="identifier: minOutput [64121,64130]"/>
  <match src="(: ( [43970,43971]" dest="(: ( [49161,49162]"/>
  <match src="function: function [100580,100588]" dest="function: function [29493,29501]"/>
  <match src="bool: bool [105615,105619]" dest="bool: bool [34528,34532]"/>
  <match src="uint256: uint256 [15940,15947]" dest="uint256: uint256 [59668,59675]"/>
  <match src=".: . [96815,96816]" dest=".: . [28033,28034]"/>
  <match src="primitive_type [78393,78400]" dest="primitive_type [66940,66947]"/>
  <match src="identifier: D256 [9114,9118]" dest="identifier: D256 [9678,9682]"/>
  <match src="type_name [102175,102182]" dest="type_name [31088,31095]"/>
  <match src="pure: pure [2623,2627]" dest="pure: pure [3187,3191]"/>
  <match src="memory: memory [5935,5941]" dest="memory: memory [6499,6505]"/>
  <match src="string: string [8266,8272]" dest="string: string [8830,8836]"/>
  <match src=".: . [112787,112788]" dest=".: . [41700,41701]"/>
  <match src="identifier: eliminateOutstandingCoupons [111958,111985]" dest="identifier: eliminateOutstandingCoupons [40871,40898]"/>
  <match src="call_argument [30863,30899]" dest="call_argument [67317,67342]"/>
  <match src="type_name [30302,30309]" dest="type_name [58697,58704]"/>
  <match src="call_expression [89546,89581]" dest="call_expression [62679,62690]"/>
  <match src="=: = [112298,112299]" dest="=: = [41211,41212]"/>
  <match src="type_name [108497,108503]" dest="type_name [37410,37416]"/>
  <match src="identifier: b [9144,9145]" dest="identifier: b [9708,9709]"/>
  <match src="address: address [106655,106662]" dest="address: address [35568,35575]"/>
  <match src="identifier: Require [114777,114784]" dest="identifier: Require [69721,69728]"/>
  <match src="): ) [100195,100196]" dest="): ) [29108,29109]"/>
  <match src="function_body [1333,1425]" dest="function_body [1897,1989]"/>
  <match src="(: ( [58057,58058]" dest="(: ( [54556,54557]"/>
  <match src="type_cast_expression [61228,61239]" dest="type_cast_expression [65660,65671]"/>
  <match src="call_argument [86415,86427]" dest="call_argument [62753,62765]"/>
  <match src="): ) [6853,6854]" dest="): ) [7417,7418]"/>
  <match src="&quot;: &quot; [89988,89989]" dest="&quot;: &quot; [72935,72936]"/>
  <match src="identifier: allowance [62597,62606]" dest="identifier: allowance [19431,19440]"/>
  <match src="identifier: D256 [8847,8851]" dest="identifier: D256 [9411,9415]"/>
  <match src="&quot;: &quot; [91374,91375]" dest="&quot;: &quot; [80835,80836]"/>
  <match src="boolean_literal [106939,106944]" dest="boolean_literal [35852,35857]"/>
  <match src="address: address [12379,12386]" dest="address: address [22377,22384]"/>
  <match src="variable_declaration_statement [417,435]" dest="variable_declaration_statement [981,999]"/>
  <match src="member_expression [6843,6848]" dest="member_expression [7407,7412]"/>
  <match src="): ) [106787,106788]" dest="): ) [35700,35701]"/>
  <match src="): ) [41044,41045]" dest="): ) [46235,46236]"/>
  <match src=",: , [30861,30862]" dest=",: , [67315,67316]"/>
  <match src="): ) [61003,61004]" dest="): ) [54132,54133]"/>
  <match src="type_name [99865,99872]" dest="type_name [28778,28785]"/>
  <match src="external: external [76328,76336]" dest="external: external [64916,64924]"/>
  <match src="primitive_type [108800,108807]" dest="primitive_type [37713,37720]"/>
  <match src="user_defined_type [114625,114632]" dest="user_defined_type [69569,69576]"/>
  <match src="call_expression [44068,44091]" dest="call_expression [49259,49282]"/>
  <match src="identifier: currentPeriod [111439,111452]" dest="identifier: currentPeriod [40352,40365]"/>
  <match src="): ) [116842,116843]" dest="): ) [83448,83449]"/>
  <match src=".: . [91035,91036]" dest=".: . [57986,57987]"/>
  <match src="call_expression [33571,33597]" dest="call_expression [67576,67607]"/>
  <match src="number_literal: 0 [105538,105539]" dest="number_literal: 0 [34451,34452]"/>
  <match src="identifier: Coupons [95765,95772]" dest="identifier: Coupons [26983,26990]"/>
  <match src="return: return [104051,104057]" dest="return: return [32964,32970]"/>
  <match src="uint256: uint256 [109357,109364]" dest="uint256: uint256 [38270,38277]"/>
  <match src="type_name [41857,41864]" dest="type_name [47048,47055]"/>
  <match src="contract_body [52360,56839]" dest="contract_body [11473,15952]"/>
  <match src="private: private [24339,24346]" dest="private: private [58713,58720]"/>
  <match src="visibility [8297,8305]" dest="visibility [8861,8869]"/>
  <match src="identifier: sender [61203,61209]" dest="identifier: sender [65637,65643]"/>
  <match src="(: ( [47932,47933]" dest="(: ( [53123,53124]"/>
  <match src="identifier: data [64359,64363]" dest="identifier: data [21193,21197]"/>
  <match src="return_type_definition [64177,64201]" dest="return_type_definition [21011,21035]"/>
  <match src="): ) [92260,92261]" dest="): ) [57821,57822]"/>
  <match src="uint: uint [63343,63347]" dest="uint: uint [20177,20181]"/>
  <match src="primitive_type [100520,100527]" dest="primitive_type [29433,29440]"/>
  <match src="identifier: D256 [55197,55201]" dest="identifier: D256 [14310,14314]"/>
  <match src="uint256: uint256 [9817,9824]" dest="uint256: uint256 [10381,10388]"/>
  <match src="primitive_type [72950,72957]" dest="primitive_type [78892,78899]"/>
  <match src="identifier: internalTax [35113,35124]" dest="identifier: couponEpochInitialPenalty [62003,62028]"/>
  <match src="user_defined_type [7481,7485]" dest="user_defined_type [8045,8049]"/>
  <match src="comment: /* Bonding */ [52811,52824]" dest="comment: /* Bonding */ [11924,11937]"/>
  <match src="type_name [86132,86139]" dest="type_name [55675,55682]"/>
  <match src="identifier: GOVERNANCE_PERIOD [55105,55122]" dest="identifier: GOVERNANCE_PERIOD [14218,14235]"/>
  <match src="state_mutability [54322,54326]" dest="state_mutability [13435,13439]"/>
  <match src=":: : [54558,54559]" dest=":: : [13671,13672]"/>
  <match src=".: . [90055,90056]" dest=".: . [73929,73930]"/>
  <match src="(: ( [47047,47048]" dest="(: ( [52238,52239]"/>
  <match src="primitive_type [63532,63539]" dest="primitive_type [20366,20373]"/>
  <match src="identifier: account [60988,60995]" dest="identifier: account [54117,54124]"/>
  <match src="call_argument [6659,6663]" dest="call_argument [7223,7227]"/>
  <match src="state_mutability [50913,50917]" dest="state_mutability [18333,18337]"/>
  <match src="primitive_type [111986,111993]" dest="primitive_type [40899,40906]"/>
  <match src="return_statement [55098,55123]" dest="return_statement [14211,14236]"/>
  <match src="function: function [39303,39311]" dest="function: function [44494,44502]"/>
  <match src="): ) [45387,45388]" dest="): ) [50578,50579]"/>
  <match src=".: . [109844,109845]" dest=".: . [38757,38758]"/>
  <match src="identifier: approve [112810,112817]" dest="identifier: approve [41723,41730]"/>
  <match src="primitive_type [9315,9319]" dest="primitive_type [9879,9883]"/>
  <match src="call_argument [40808,40812]" dest="call_argument [45999,46003]"/>
  <match src="parameter [104612,104629]" dest="parameter [33525,33542]"/>
  <match src="expression_statement [7748,7771]" dest="expression_statement [8312,8335]"/>
  <match src="): ) [56771,56772]" dest="): ) [15884,15885]"/>
  <match src="user_defined_type [8027,8031]" dest="user_defined_type [8591,8595]"/>
  <match src="call_expression [90747,90835]" dest="call_expression [80403,80435]"/>
  <match src="type_name [78393,78400]" dest="type_name [66940,66947]"/>
  <match src="visibility [101740,101746]" dest="visibility [30653,30659]"/>
  <match src="{: { [54953,54954]" dest="{: { [14066,14067]"/>
  <match src="{: { [88662,88663]" dest="{: { [83311,83312]"/>
  <match src="&quot;: &quot; [89342,89343]" dest="&quot;: &quot; [81600,81601]"/>
  <match src="(: ( [107968,107969]" dest="(: ( [36881,36882]"/>
  <match src="&gt;: &gt; [10218,10219]" dest="&gt;: &gt; [10782,10783]"/>
  <match src="comment: /*     Copyright 2020 Reflective Dollar Devs, based on the works of the Dynamic Dollar Devs and the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [76545,77220]" dest="comment: /*     Copyright 2020 Reflective Dollar Devs, based on the works of the Dynamic Dollar Devs and the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [34781,35456]"/>
  <match src="): ) [92782,92783]" dest="): ) [79644,79645]"/>
  <match src="number_literal: 1 [7623,7624]" dest="number_literal: 1 [8187,8188]"/>
  <match src="(: ( [88157,88158]" dest="(: ( [71176,71177]"/>
  <match src="visibility [8699,8707]" dest="visibility [9263,9271]"/>
  <match src="): ) [62456,62457]" dest="): ) [19290,19291]"/>
  <match src="state_mutability [8889,8893]" dest="state_mutability [9453,9457]"/>
  <match src="call_argument [41374,41398]" dest="call_argument [46565,46589]"/>
  <match src="identifier: self [7493,7497]" dest="identifier: self [8057,8061]"/>
  <match src="external: external [64365,64373]" dest="external: external [21199,21207]"/>
  <match src="identifier: amount [16568,16574]" dest="identifier: amount [55322,55328]"/>
  <match src="identifier: self [6905,6909]" dest="identifier: self [7469,7473]"/>
  <match src="function_definition [8005,8189]" dest="function_definition [8569,8753]"/>
  <match src="return: return [54718,54724]" dest="return: return [13831,13837]"/>
  <match src=".: . [8941,8942]" dest=".: . [9505,9506]"/>
  <match src="uint256: uint256 [12434,12441]" dest="uint256: uint256 [22432,22439]"/>
  <match src="memory: memory [7563,7569]" dest="memory: memory [8127,8133]"/>
  <match src="if: if [10137,10139]" dest="if: if [10701,10703]"/>
  <match src="[: [ [102311,102312]" dest="[: [ [31224,31225]"/>
  <match src="{: { [55630,55631]" dest="{: { [14743,14744]"/>
  <match src="constant: constant [114656,114664]" dest="constant: constant [69600,69608]"/>
  <match src="}: } [93103,93104]" dest="}: } [73961,73962]"/>
  <match src="call_expression [73538,73656]" dest="call_expression [81830,81956]"/>
  <match src="expression_statement [108939,108997]" dest="expression_statement [37852,37910]"/>
  <match src="call_argument [91766,91776]" dest="call_argument [63833,63843]"/>
  <match src="variable_declaration_statement [46812,46839]" dest="variable_declaration_statement [52003,52030]"/>
  <match src="comment: // benefit is lost if 'b' is also tested. [1830,1871]" dest="comment: // benefit is lost if 'b' is also tested. [2394,2435]"/>
  <match src="user_defined_type [8981,8985]" dest="user_defined_type [9545,9549]"/>
  <match src="identifier: b [9209,9210]" dest="identifier: b [9773,9774]"/>
  <match src="number_literal: 1 [52418,52419]" dest="number_literal: 1 [11531,11532]"/>
  <match src="primitive_type [89511,89518]" dest="primitive_type [62649,62656]"/>
  <match src="comment: // Mainnet [52421,52431]" dest="comment: // Mainnet [11534,11544]"/>
  <match src="identifier: mul [7108,7111]" dest="identifier: mul [7672,7675]"/>
  <match src="identifier: recipient [106762,106771]" dest="identifier: recipient [35675,35684]"/>
  <match src="identifier: add [113250,113253]" dest="identifier: add [42163,42166]"/>
  <match src="parameter [21906,21920]" dest="parameter [64900,64914]"/>
  <match src="member_expression [10141,10148]" dest="member_expression [10705,10712]"/>
  <match src="identifier: BASE [5717,5721]" dest="identifier: BASE [6281,6285]"/>
  <match src="return: return [55521,55527]" dest="return: return [14634,14640]"/>
  <match src="memory: memory [31946,31952]" dest="memory: memory [17421,17427]"/>
  <match src="type_name [56397,56409]" dest="type_name [15510,15522]"/>
  <match src="variable_declaration [30665,30696]" dest="variable_declaration [17783,17820]"/>
  <match src="identifier: epoch [104482,104487]" dest="identifier: epoch [33395,33400]"/>
  <match src="): ) [40177,40178]" dest="): ) [45368,45369]"/>
  <match src="call_expression [55227,55267]" dest="call_expression [14340,14380]"/>
  <match src="type_name [2592,2599]" dest="type_name [3156,3163]"/>
  <match src="function: function [110719,110727]" dest="function: function [39632,39640]"/>
  <match src="address: address [62842,62849]" dest="address: address [19676,19683]"/>
  <match src=".: . [109523,109524]" dest=".: . [38436,38437]"/>
  <match src="): ) [91332,91333]" dest="): ) [79075,79076]"/>
  <match src="): ) [9145,9146]" dest="): ) [9709,9710]"/>
  <match src="): ) [39752,39753]" dest="): ) [44943,44944]"/>
  <match src="identifier: coupons [109417,109424]" dest="identifier: coupons [38330,38337]"/>
  <match src="parameter [54817,54824]" dest="parameter [13930,13937]"/>
  <match src="identifier: b [1270,1271]" dest="identifier: b [1834,1835]"/>
  <match src="bytes32: bytes32 [43107,43114]" dest="bytes32: bytes32 [48298,48305]"/>
  <match src="&amp;: &amp; [47569,47570]" dest="&amp;: &amp; [52760,52761]"/>
  <match src="comment: // return ASCII digit (0-9) [47753,47780]" dest="comment: // return ASCII digit (0-9) [52944,52971]"/>
  <match src="expression_statement [24465,24549]" dest="expression_statement [79903,79972]"/>
  <match src="variable_declaration [74919,74938]" dest="variable_declaration [79656,79670]"/>
  <match src="call_argument [39744,39752]" dest="call_argument [44935,44943]"/>
  <match src="{: { [96539,96540]" dest="{: { [27757,27758]"/>
  <match src="}: } [104391,104392]" dest="}: } [33304,33305]"/>
  <match src="function_body [55743,55789]" dest="function_body [14856,14902]"/>
  <match src="identifier: sender [89234,89240]" dest="identifier: sender [72330,72336]"/>
  <match src="view: view [104917,104921]" dest="view: view [33830,33834]"/>
  <match src="type_name [56547,56559]" dest="type_name [15660,15672]"/>
  <match src="uint: uint [63458,63462]" dest="uint: uint [20292,20296]"/>
  <match src="visibility [103730,103736]" dest="visibility [32643,32649]"/>
  <match src="call_expression [90377,90406]" dest="call_expression [62725,62766]"/>
  <match src="internal: internal [111801,111809]" dest="internal: internal [40714,40722]"/>
  <match src="member_expression [109434,109449]" dest="member_expression [38347,38362]"/>
  <match src="primitive_type [4651,4658]" dest="primitive_type [5215,5222]"/>
  <match src=".: . [111915,111916]" dest=".: . [40828,40829]"/>
  <match src="parameter [104296,104309]" dest="parameter [33209,33222]"/>
  <match src="}: } [43815,43816]" dest="}: } [49006,49007]"/>
  <match src="identifier: value [9713,9718]" dest="identifier: value [10277,10282]"/>
  <match src="uint256: uint256 [81347,81354]" dest="uint256: uint256 [71803,71810]"/>
  <match src="uint256: uint256 [101486,101493]" dest="uint256: uint256 [30399,30406]"/>
  <match src="user_defined_type [75625,75637]" dest="user_defined_type [68599,68611]"/>
  <match src="(: ( [451,452]" dest="(: ( [1015,1016]"/>
  <match src="function_body [104203,104267]" dest="function_body [33116,33180]"/>
  <match src="[: [ [104974,104975]" dest="[: [ [33887,33888]"/>
  <match src="identifier: candidate [104899,104908]" dest="identifier: candidate [33812,33821]"/>
  <match src="): ) [813,814]" dest="): ) [1377,1378]"/>
  <match src="type_name [81267,81274]" dest="type_name [71942,71949]"/>
  <match src="public: public [100743,100749]" dest="public: public [29656,29662]"/>
  <match src="struct_member [52960,52975]" dest="struct_member [12073,12088]"/>
  <match src="identifier: sub [110068,110071]" dest="identifier: sub [38981,38984]"/>
  <match src="visibility [74221,74228]" dest="visibility [82082,82089]"/>
  <match src="return_type_definition [5921,5942]" dest="return_type_definition [6485,6506]"/>
  <match src="return_statement [102739,102795]" dest="return_statement [31652,31708]"/>
  <match src="call_argument [41332,41688]" dest="call_argument [46523,46879]"/>
  <match src="): ) [71928,71929]" dest="): ) [25741,25742]"/>
  <match src="(: ( [106864,106865]" dest="(: ( [35777,35778]"/>
  <match src="identifier: balance [107892,107899]" dest="identifier: balance [36805,36812]"/>
  <match src=".: . [108562,108563]" dest=".: . [37475,37476]"/>
  <match src="identifier: file [42556,42560]" dest="identifier: file [47747,47751]"/>
  <match src="(: ( [11602,11603]" dest="(: ( [21600,21601]"/>
  <match src="using: using [15814,15819]" dest="using: using [59565,59570]"/>
  <match src="type_name [96602,96610]" dest="type_name [27820,27828]"/>
  <match src="): ) [115085,115086]" dest="): ) [70029,70030]"/>
  <match src="primitive_type [6305,6312]" dest="primitive_type [6869,6876]"/>
  <match src=",: , [2671,2672]" dest=",: , [3235,3236]"/>
  <match src="): ) [80399,80400]" dest="): ) [72024,72025]"/>
  <match src="parameter [7147,7156]" dest="parameter [7711,7720]"/>
  <match src="identifier: bstr [45590,45594]" dest="identifier: bstr [50781,50785]"/>
  <match src="visibility [71930,71936]" dest="visibility [25743,25749]"/>
  <match src=",: , [458,459]" dest=",: , [1022,1023]"/>
  <match src="revert: revert [40060,40066]" dest="revert: revert [45251,45257]"/>
  <match src="): ) [62302,62303]" dest="): ) [19136,19137]"/>
  <match src="expression_statement [109392,109486]" dest="expression_statement [38305,38399]"/>
  <match src="function_body [8543,8621]" dest="function_body [9107,9185]"/>
  <match src="(: ( [41997,41998]" dest="(: ( [47188,47189]"/>
  <match src="identifier: getChainId [56760,56770]" dest="identifier: getChainId [15873,15883]"/>
  <match src="parameter [62779,62789]" dest="parameter [19613,19623]"/>
  <match src=",: , [88241,88242]" dest=",: , [71260,71261]"/>
  <match src="): ) [100629,100630]" dest="): ) [29542,29543]"/>
  <match src="visibility [64365,64373]" dest="visibility [21199,21207]"/>
  <match src="primitive_type [46730,46737]" dest="primitive_type [51921,51928]"/>
  <match src="memory: memory [34920,34926]" dest="memory: memory [68290,68296]"/>
  <match src="(: ( [101640,101641]" dest="(: ( [30553,30554]"/>
  <match src="comment: // populate the least-significant character [47347,47390]" dest="comment: // populate the least-significant character [52538,52581]"/>
  <match src="call_argument [92193,92261]" dest="call_argument [57753,57845]"/>
  <match src="identifier: setImplementation [98412,98429]" dest="identifier: setImplementation [77062,77079]"/>
  <match src="variable_declaration [32730,32772]" dest="variable_declaration [68357,68394]"/>
  <match src=".: . [7970,7971]" dest=".: . [8534,8535]"/>
  <match src="block_statement [44485,44758]" dest="block_statement [49676,49949]"/>
  <match src="): ) [91896,91897]" dest="): ) [80491,80492]"/>
  <match src="identifier: transfer [12017,12025]" dest="identifier: transfer [22015,22023]"/>
  <match src="identifier: sub [103393,103396]" dest="identifier: sub [32306,32309]"/>
  <match src="visibility [62428,62436]" dest="visibility [19262,19270]"/>
  <match src=".: . [108327,108328]" dest=".: . [37240,37241]"/>
  <match src="identifier: staged [108911,108917]" dest="identifier: staged [37824,37830]"/>
  <match src="}: } [113796,113797]" dest="}: } [42709,42710]"/>
  <match src="state_mutability [102373,102377]" dest="state_mutability [31286,31290]"/>
  <match src="string [90701,90736]" dest="string [81171,81185]"/>
  <match src="identifier: getPartial [9797,9807]" dest="identifier: getPartial [10361,10371]"/>
  <match src="identifier: Decimal [31991,31998]" dest="identifier: Decimal [67878,67885]"/>
  <match src="type_name [73077,73084]" dest="type_name [78728,78735]"/>
  <match src="using: using [5623,5628]" dest="using: using [6187,6192]"/>
  <match src="call_argument [111559,111582]" dest="call_argument [40472,40495]"/>
  <match src="identifier: Require [92998,93005]" dest="identifier: Require [80867,80874]"/>
  <match src="uint256: uint256 [96113,96120]" dest="uint256: uint256 [27331,27338]"/>
  <match src="string_literal [90701,90736]" dest="string_literal [81171,81185]"/>
  <match src="call_expression [8362,8410]" dest="call_expression [8926,8974]"/>
  <match src="identifier: Provide [91852,91859]" dest="identifier: Vote [80451,80455]"/>
  <match src="member_expression [102535,102581]" dest="member_expression [31448,31494]"/>
  <match src="type_name [19046,19053]" dest="type_name [17007,17014]"/>
  <match src="}: } [6666,6667]" dest="}: } [7230,7231]"/>
  <match src="(: ( [88403,88404]" dest="(: ( [71292,71293]"/>
  <match src="block_statement [7734,7781]" dest="block_statement [8298,8345]"/>
  <match src="identifier: must [41947,41951]" dest="identifier: must [47138,47142]"/>
  <match src="(: ( [107447,107448]" dest="(: ( [36360,36361]"/>
  <match src="identifier: epoch [90048,90053]" dest="identifier: epoch [73922,73927]"/>
  <match src="internal: internal [94042,94050]" dest="internal: internal [74900,74908]"/>
  <match src="call_expression [58703,58808]" dest="call_expression [54970,55048]"/>
  <match src="}: } [104865,104866]" dest="}: } [33778,33779]"/>
  <match src=".: . [100552,100553]" dest=".: . [29465,29466]"/>
  <match src="returns: returns [389,396]" dest="returns: returns [953,960]"/>
  <match src="call_argument [40395,40414]" dest="call_argument [45586,45605]"/>
  <match src="{: { [6204,6205]" dest="{: { [6768,6769]"/>
  <match src="variable_declaration [91427,91442]" dest="variable_declaration [60824,60846]"/>
  <match src="identifier: file [40808,40812]" dest="identifier: file [45999,46003]"/>
  <match src="parameter [1324,1331]" dest="parameter [1888,1895]"/>
  <match src="member_expression [114803,114845]" dest="member_expression [69747,69789]"/>
  <match src="(: ( [55943,55944]" dest="(: ( [15056,15057]"/>
  <match src="): ) [23820,23821]" dest="): ) [80118,80119]"/>
  <match src="[: [ [113885,113886]" dest="[: [ [42798,42799]"/>
  <match src="identifier: Decimal [34827,34834]" dest="identifier: Decimal [18613,18620]"/>
  <match src="function_body [103154,103224]" dest="function_body [32067,32137]"/>
  <match src="struct: struct [95758,95764]" dest="struct: struct [26976,26982]"/>
  <match src="event_paramater [63402,63424]" dest="event_paramater [20236,20258]"/>
  <match src="identifier: amount [108825,108831]" dest="identifier: amount [37738,37744]"/>
  <match src="identifier: amount [32046,32052]" dest="identifier: amount [17337,17343]"/>
  <match src="identifier: votes [96187,96192]" dest="identifier: votes [27405,27410]"/>
  <match src="type_name [1723,1730]" dest="type_name [2287,2294]"/>
  <match src="}: } [111050,111051]" dest="}: } [39963,39964]"/>
  <match src="(: ( [46015,46016]" dest="(: ( [51206,51207]"/>
  <match src="type_name [25515,25522]" dest="type_name [78653,78660]"/>
  <match src="identifier: account [88291,88298]" dest="identifier: account [83239,83246]"/>
  <match src="return_type_definition [8894,8908]" dest="return_type_definition [9458,9472]"/>
  <match src="}: } [105133,105134]" dest="}: } [34046,34047]"/>
  <match src="address: address [112910,112917]" dest="address: address [41823,41830]"/>
  <match src="type_name [7507,7514]" dest="type_name [8071,8078]"/>
  <match src="contract_declaration [71859,72028]" dest="contract_declaration [25672,25841]"/>
  <match src=".: . [89826,89827]" dest=".: . [73369,73370]"/>
  <match src="uint256: uint256 [52461,52468]" dest="uint256: uint256 [11574,11581]"/>
  <match src="external: external [60009,60017]" dest="external: external [24983,24991]"/>
  <match src="address: address [92211,92218]" dest="address: address [57772,57779]"/>
  <match src="type_name [42548,42555]" dest="type_name [47739,47746]"/>
  <match src="{: { [74095,74096]" dest="{: { [68792,68793]"/>
  <match src="&quot;: &quot; [91228,91229]" dest="&quot;: &quot; [81427,81428]"/>
  <match src="): ) [42167,42168]" dest="): ) [47358,47359]"/>
  <match src="=&gt;: =&gt; [96178,96180]" dest="=&gt;: =&gt; [27396,27398]"/>
  <match src="type_name [112945,112951]" dest="type_name [41858,41864]"/>
  <match src="}: } [8816,8817]" dest="}: } [9380,9381]"/>
  <match src="(: ( [103333,103334]" dest="(: ( [32246,32247]"/>
  <match src="identifier: size [94089,94093]" dest="identifier: size [74947,74951]"/>
  <match src="identifier: candidates [105098,105108]" dest="identifier: candidates [34011,34021]"/>
  <match src="call_argument [111516,111539]" dest="call_argument [40429,40452]"/>
  <match src="uint32: uint32 [63926,63932]" dest="uint32: uint32 [20760,20766]"/>
  <match src="!: ! [40674,40675]" dest="!: ! [45865,45866]"/>
  <match src="type_name [106865,106872]" dest="type_name [35778,35785]"/>
  <match src="variable_declaration_statement [89511,89582]" dest="variable_declaration_statement [62649,62691]"/>
  <match src="identifier: add [7977,7980]" dest="identifier: add [8541,8544]"/>
  <match src="assignment_expression [46116,46155]" dest="assignment_expression [51307,51346]"/>
  <match src=".: . [6838,6839]" dest=".: . [7402,7403]"/>
  <match src="{: { [110756,110757]" dest="{: { [39669,39670]"/>
  <match src="array_access [113740,113764]" dest="array_access [42653,42677]"/>
  <match src="identifier: provider [100995,101003]" dest="identifier: provider [29908,29916]"/>
  <match src="uint256: uint256 [838,845]" dest="uint256: uint256 [1402,1409]"/>
  <match src="identifier: account [28101,28108]" dest="identifier: account [54882,54889]"/>
  <match src="returns: returns [63711,63718]" dest="returns: returns [20545,20552]"/>
  <match src="visibility [38968,38976]" dest="visibility [44159,44167]"/>
  <match src="call_expression [39569,39593]" dest="call_expression [44760,44784]"/>
  <match src="type_name [45360,45367]" dest="type_name [50551,50558]"/>
  <match src="call_argument [33590,33596]" dest="call_argument [61528,61534]"/>
  <match src="type_name [110284,110291]" dest="type_name [39197,39204]"/>
  <match src="identifier: b [7515,7516]" dest="identifier: b [8079,8080]"/>
  <match src="view: view [102373,102377]" dest="view: view [31286,31290]"/>
  <match src="return_type_definition [62568,62582]" dest="return_type_definition [19402,19416]"/>
  <match src="assignment_expression [110351,110408]" dest="assignment_expression [39264,39321]"/>
  <match src="event_paramater [13989,14010]" dest="event_paramater [23987,24008]"/>
  <match src="return: return [54255,54261]" dest="return: return [13368,13374]"/>
  <match src="identifier: totalStaged [92229,92240]" dest="identifier: totalStaged [57808,57819]"/>
  <match src="primitive_type [29583,29590]" dest="primitive_type [54003,54010]"/>
  <match src=".: . [115104,115105]" dest=".: . [70048,70049]"/>
  <match src="memory: memory [6945,6951]" dest="memory: memory [7509,7515]"/>
  <match src="type_name [62228,62235]" dest="type_name [19062,19069]"/>
  <match src="}: } [42493,42494]" dest="}: } [47684,47685]"/>
  <match src="identifier: i [7729,7730]" dest="identifier: i [8293,8294]"/>
  <match src="primitive_type [64079,64083]" dest="primitive_type [20913,20917]"/>
  <match src="number_literal: 0 [47032,47033]" dest="number_literal: 0 [52223,52224]"/>
  <match src="}: } [55265,55266]" dest="}: } [14378,14379]"/>
  <match src="}: } [56327,56328]" dest="}: } [15440,15441]"/>
  <match src="expression_statement [22098,22135]" dest="expression_statement [65022,65074]"/>
  <match src="uint256: uint256 [3248,3255]" dest="uint256: uint256 [3812,3819]"/>
  <match src="parameter [109325,109340]" dest="parameter [38238,38253]"/>
  <match src=",: , [8595,8596]" dest=",: , [9159,9160]"/>
  <match src="): ) [4039,4040]" dest="): ) [4603,4604]"/>
  <match src="uint256: uint256 [113141,113148]" dest="uint256: uint256 [42054,42061]"/>
  <match src="function_body [55088,55129]" dest="function_body [14201,14242]"/>
  <match src="call_expression [6814,6858]" dest="call_expression [7378,7422]"/>
  <match src="=: = [7717,7718]" dest="=: = [8281,8282]"/>
  <match src="type_name [102387,102401]" dest="type_name [31300,31314]"/>
  <match src="internal: internal [6014,6022]" dest="internal: internal [6578,6586]"/>
  <match src="return_type_definition [105469,105483]" dest="return_type_definition [34382,34396]"/>
  <match src="}: } [98659,98660]" dest="}: } [77309,77310]"/>
  <match src="uint: uint [62270,62274]" dest="uint: uint [19104,19108]"/>
  <match src="indexed: indexed [88339,88346]" dest="indexed: indexed [71399,71406]"/>
  <match src="expression_statement [30443,30531]" dest="expression_statement [65687,65781]"/>
  <match src="primitive_type [63189,63196]" dest="primitive_type [20023,20030]"/>
  <match src="pure: pure [55175,55179]" dest="pure: pure [14288,14292]"/>
  <match src="using: using [87858,87863]" dest="using: using [71082,71087]"/>
  <match src="call_argument [115142,115164]" dest="call_argument [70086,70108]"/>
  <match src="primitive_type [88243,88250]" dest="primitive_type [71262,71269]"/>
  <match src="(: ( [71927,71928]" dest="(: ( [25740,25741]"/>
  <match src="identifier: file [41393,41397]" dest="identifier: file [46584,46588]"/>
  <match src="primitive_type [108189,108196]" dest="primitive_type [37102,37109]"/>
  <match src="type_name [8865,8869]" dest="type_name [9429,9433]"/>
  <match src="): ) [7569,7570]" dest="): ) [8133,8134]"/>
  <match src=",: , [41589,41590]" dest=",: , [46780,46781]"/>
  <match src="parameter [62708,62718]" dest="parameter [19542,19552]"/>
  <match src="event_definition [13974,14052]" dest="event_definition [23972,24050]"/>
  <match src="function_definition [109009,109284]" dest="function_definition [37922,38197]"/>
  <match src="primitive_type [45360,45367]" dest="primitive_type [50551,50558]"/>
  <match src=".: . [108319,108320]" dest=".: . [37232,37233]"/>
  <match src="): ) [100497,100498]" dest="): ) [29410,29411]"/>
  <match src="function: function [56342,56350]" dest="function: function [15455,15463]"/>
  <match src="function_definition [111057,111615]" dest="function_definition [39970,40528]"/>
  <match src="identifier: supply [108650,108656]" dest="identifier: supply [37563,37569]"/>
  <match src="function: function [64450,64458]" dest="function: function [21284,21292]"/>
  <match src="return_type_definition [64070,64084]" dest="return_type_definition [20904,20918]"/>
  <match src="call_expression [46470,46493]" dest="call_expression [51661,51684]"/>
  <match src="internal: internal [56374,56382]" dest="internal: internal [15487,15495]"/>
  <match src="identifier: RPAREN [40999,41005]" dest="identifier: RPAREN [46190,46196]"/>
  <match src="type_cast_expression [46088,46105]" dest="type_cast_expression [51279,51296]"/>
  <match src="uint256: uint256 [74919,74926]" dest="uint256: uint256 [79656,79663]"/>
  <match src="primitive_type [40719,40725]" dest="primitive_type [45910,45916]"/>
  <match src="identifier: result [47070,47076]" dest="identifier: result [52261,52267]"/>
  <match src="): ) [110524,110525]" dest="): ) [39437,39438]"/>
  <match src="identifier: candidate [104767,104776]" dest="identifier: candidate [33680,33689]"/>
  <match src="return_type_definition [55493,55510]" dest="return_type_definition [14606,14623]"/>
  <match src="binary_expression [91304,91342]" dest="binary_expression [79055,79080]"/>
  <match src="identifier: value [14045,14050]" dest="identifier: value [24043,24048]"/>
  <match src=".: . [107766,107767]" dest=".: . [36679,36680]"/>
  <match src="type_name [95918,95925]" dest="type_name [27136,27143]"/>
  <match src="state_mutability [9910,9914]" dest="state_mutability [10474,10478]"/>
  <match src="visibility [111106,111114]" dest="visibility [40019,40027]"/>
  <match src="visibility [7167,7175]" dest="visibility [7731,7739]"/>
  <match src="(: ( [30723,30724]" dest="(: ( [18834,18835]"/>
  <match src="type_name [19788,19795]" dest="type_name [65220,65227]"/>
  <match src="identifier: incrementBalanceOfClaimable [90594,90621]" dest="identifier: incrementBalanceOfStaged [72111,72135]"/>
  <match src="uint256: uint256 [88429,88436]" dest="uint256: uint256 [71318,71325]"/>
  <match src="primitive_type [838,845]" dest="primitive_type [1402,1409]"/>
  <match src="=: = [53704,53705]" dest="=: = [12817,12818]"/>
  <match src="number_literal: 0 [108742,108743]" dest="number_literal: 0 [37655,37656]"/>
  <match src="(: ( [64185,64186]" dest="(: ( [21019,21020]"/>
  <match src="call_argument [91356,91360]" dest="call_argument [80817,80821]"/>
  <match src="constant: constant [53578,53586]" dest="constant: constant [12691,12699]"/>
  <match src="primitive_type [101486,101493]" dest="primitive_type [30399,30406]"/>
  <match src="identifier: stringifyTruncated [40154,40172]" dest="identifier: stringifyTruncated [45345,45363]"/>
  <match src="type_name [6938,6944]" dest="type_name [7502,7508]"/>
  <match src=".: . [113242,113243]" dest=".: . [42155,42156]"/>
  <match src="==: == [7591,7593]" dest="==: == [8155,8157]"/>
  <match src="[: [ [47076,47077]" dest="[: [ [52267,52268]"/>
  <match src="return: return [100326,100332]" dest="return: return [29239,29245]"/>
  <match src=",: , [115128,115129]" dest=",: , [70072,70073]"/>
  <match src="user_defined_type [71946,71958]" dest="user_defined_type [25759,25771]"/>
  <match src="primitive_type [45077,45084]" dest="primitive_type [50268,50275]"/>
  <match src="call_expression [108573,108625]" dest="call_expression [37486,37538]"/>
  <match src="function_body [55630,55671]" dest="function_body [14743,14784]"/>
  <match src="member_expression [111671,111684]" dest="member_expression [40584,40597]"/>
  <match src="call_expression [39734,39753]" dest="call_expression [44925,44944]"/>
  <match src="member_expression [90206,90216]" dest="member_expression [73168,73178]"/>
  <match src=".: . [110999,111000]" dest=".: . [39912,39913]"/>
  <match src="identifier: expiringCoupons [103980,103995]" dest="identifier: expiringCoupons [32893,32908]"/>
  <match src="call_argument [23183,23189]" dest="call_argument [54953,54959]"/>
  <match src="=: = [52507,52508]" dest="=: = [11620,11621]"/>
  <match src="expression_statement [27309,27383]" dest="expression_statement [55518,55577]"/>
  <match src="view: view [94051,94055]" dest="view: view [74909,74913]"/>
  <match src="parameter [9682,9689]" dest="parameter [10246,10253]"/>
  <match src="call_argument [17841,17883]" dest="call_argument [73385,73416]"/>
  <match src="identifier: Decimal [74868,74875]" dest="identifier: Decimal [67002,67009]"/>
  <match src="identifier: D256 [7952,7956]" dest="identifier: D256 [8516,8520]"/>
  <match src="identifier: FOUR_BIT_MASK [47571,47584]" dest="identifier: FOUR_BIT_MASK [52762,52775]"/>
  <match src="identifier: c [3554,3555]" dest="identifier: c [4118,4119]"/>
  <match src="{: { [46802,46803]" dest="{: { [51993,51994]"/>
  <match src="expression_statement [89910,89991]" dest="expression_statement [72854,72938]"/>
  <match src="(: ( [63719,63720]" dest="(: ( [20553,20554]"/>
  <match src="state_mutability [54685,54689]" dest="state_mutability [13798,13802]"/>
  <match src="}: } [103223,103224]" dest="}: } [32136,32137]"/>
  <match src="call_argument [9354,9355]" dest="call_argument [9918,9919]"/>
  <match src="uint256: uint256 [103751,103758]" dest="uint256: uint256 [32664,32671]"/>
  <match src="return_statement [105631,105679]" dest="return_statement [34544,34592]"/>
  <match src="user_defined_type [27532,27544]" dest="user_defined_type [16701,16713]"/>
  <match src="primitive_type [86141,86148]" dest="primitive_type [55684,55691]"/>
  <match src="member_expression [108963,108984]" dest="member_expression [37876,37897]"/>
  <match src="member_expression [112168,112190]" dest="member_expression [41081,41103]"/>
  <match src="}: } [54753,54754]" dest="}: } [13866,13867]"/>
  <match src="state_mutability [8508,8512]" dest="state_mutability [9072,9076]"/>
  <match src="identifier: amount1Out [64320,64330]" dest="identifier: amount1Out [21154,21164]"/>
  <match src="return_statement [47915,47963]" dest="return_statement [53106,53154]"/>
  <match src="identifier: Deposit [88150,88157]" dest="identifier: Deposit [71169,71176]"/>
  <match src="identifier: amount [109882,109888]" dest="identifier: amount [38795,38801]"/>
  <match src="}: } [113923,113924]" dest="}: } [42836,42837]"/>
  <match src="type_name [1678,1685]" dest="type_name [2242,2249]"/>
  <match src="function: function [9373,9381]" dest="function: function [9937,9945]"/>
  <match src="mapping: mapping [96630,96637]" dest="mapping: mapping [27848,27855]"/>
  <match src="identifier: value [7251,7256]" dest="identifier: value [7815,7820]"/>
  <match src="identifier: balance [108344,108351]" dest="identifier: balance [37257,37264]"/>
  <match src="type_name [8730,8734]" dest="type_name [9294,9298]"/>
  <match src="string [91103,91130]" dest="string [58054,58079]"/>
  <match src="call_expression [7952,7992]" dest="call_expression [8516,8556]"/>
  <match src="call_argument [110003,110009]" dest="call_argument [38916,38922]"/>
  <match src="internal: internal [7527,7535]" dest="internal: internal [8091,8099]"/>
  <match src=".: . [108358,108359]" dest=".: . [37271,37272]"/>
  <match src="primitive_type [15976,15983]" dest="primitive_type [83139,83146]"/>
  <match src="call_argument [88828,88838]" dest="call_argument [82010,82020]"/>
  <match src=",: , [39143,39144]" dest=",: , [44334,44335]"/>
  <match src="]: ] [109969,109970]" dest="]: ] [38882,38883]"/>
  <match src="type_name [417,424]" dest="type_name [981,988]"/>
  <match src="variable_declaration [46938,46957]" dest="variable_declaration [52129,52148]"/>
  <match src="): ) [39412,39413]" dest="): ) [44603,44604]"/>
  <match src="type_name [88540,88547]" dest="type_name [83248,83255]"/>
  <match src="expression_statement [114919,114921]" dest="expression_statement [69863,69865]"/>
  <match src="struct_member [96424,96439]" dest="struct_member [27642,27657]"/>
  <match src="event: event [63382,63387]" dest="event: event [20216,20221]"/>
  <match src="(: ( [45610,45611]" dest="(: ( [50801,50802]"/>
  <match src="(: ( [103057,103058]" dest="(: ( [31970,31971]"/>
  <match src=",: , [43143,43144]" dest=",: , [48334,48335]"/>
  <match src="): ) [64433,64434]" dest="): ) [21267,21268]"/>
  <match src="visibility [43232,43240]" dest="visibility [48423,48431]"/>
  <match src="block_statement [101980,102013]" dest="block_statement [30893,30926]"/>
  <match src=",: , [39966,39967]" dest=",: , [45157,45158]"/>
  <match src="{: { [42664,42665]" dest="{: { [47855,47856]"/>
  <match src="identifier: incrementBalanceOfStaged [90541,90565]" dest="identifier: decrementTotalBonded [73271,73291]"/>
  <match src="identifier: couponAllowances [110568,110584]" dest="identifier: couponAllowances [39481,39497]"/>
  <match src="call_argument [76503,76512]" dest="call_argument [80639,80654]"/>
  <match src="identifier: balance [108642,108649]" dest="identifier: balance [37555,37562]"/>
  <match src="identifier: spender [110585,110592]" dest="identifier: spender [39498,39505]"/>
  <match src="primitive_type [63153,63157]" dest="primitive_type [19987,19991]"/>
  <match src="{: { [95318,95319]" dest="{: { [26536,26537]"/>
  <match src="primitive_type [63458,63462]" dest="primitive_type [20292,20296]"/>
  <match src="type_cast_expression [88705,88718]" dest="type_cast_expression [83386,83399]"/>
  <match src="return: return [7791,7797]" dest="return: return [8355,8361]"/>
  <match src="identifier: newUniv2 [88565,88573]" dest="identifier: bonded [78841,78847]"/>
  <match src="return: return [8553,8559]" dest="return: return [9117,9123]"/>
  <match src="=: = [53261,53262]" dest="=: = [12374,12375]"/>
  <match src=":: : [6091,6092]" dest=":: : [6655,6656]"/>
  <match src="identifier: sub [108080,108083]" dest="identifier: sub [36993,36996]"/>
  <match src="visibility [27856,27864]" dest="visibility [16838,16846]"/>
  <match src="uint256: uint256 [88557,88564]" dest="uint256: uint256 [78833,78840]"/>
  <match src="identifier: Decimal [111239,111246]" dest="identifier: Decimal [40152,40159]"/>
  <match src="}: } [105863,105864]" dest="}: } [34776,34777]"/>
  <match src=",: , [89952,89953]" dest=",: , [72896,72897]"/>
  <match src="type_name [13534,13541]" dest="type_name [23532,23539]"/>
  <match src="uint256: uint256 [19046,19053]" dest="uint256: uint256 [17007,17014]"/>
  <match src="]: ] [109861,109862]" dest="]: ] [38774,38775]"/>
  <match src="identifier: reason [110669,110675]" dest="identifier: reason [39582,39588]"/>
  <match src="): ) [116816,116817]" dest="): ) [55152,55153]"/>
  <match src="call_expression [105357,105378]" dest="call_expression [34270,34291]"/>
  <match src="identifier: accounts [108893,108901]" dest="identifier: accounts [37806,37814]"/>
  <match src="identifier: pool [100934,100938]" dest="identifier: pool [29847,29851]"/>
  <match src="call_expression [9479,9497]" dest="call_expression [10043,10061]"/>
  <match src="identifier: _state [108939,108945]" dest="identifier: _state [37852,37858]"/>
  <match src="visibility [105178,105184]" dest="visibility [34091,34097]"/>
  <match src=".: . [110911,110912]" dest=".: . [39824,39825]"/>
  <match src="internal: internal [55830,55838]" dest="internal: internal [14943,14951]"/>
  <match src="primitive_type [55853,55860]" dest="primitive_type [14966,14973]"/>
  <match src="parameter [64479,64486]" dest="parameter [21313,21320]"/>
  <match src="member_expression [112781,112817]" dest="member_expression [41694,41730]"/>
  <match src="function: function [21856,21864]" dest="function: function [64859,64867]"/>
  <match src="identifier: FILE [92734,92738]" dest="identifier: FILE [79610,79614]"/>
  <match src="string_literal [98946,99007]" dest="string_literal [77596,77657]"/>
  <match src="call_expression [98887,98944]" dest="call_expression [77537,77594]"/>
  <match src="identifier: encodePacked [40751,40763]" dest="identifier: encodePacked [45942,45954]"/>
  <match src="function_body [54953,55019]" dest="function_body [14066,14132]"/>
  <match src="(: ( [9258,9259]" dest="(: ( [9822,9823]"/>
  <match src="function_body [113858,113922]" dest="function_body [42771,42835]"/>
  <match src="returns: returns [104643,104650]" dest="returns: returns [33556,33563]"/>
  <match src="type_name [6539,6546]" dest="type_name [7103,7110]"/>
  <match src="call_expression [21156,21223]" dest="call_expression [65433,65520]"/>
  <match src="(: ( [29974,29975]" dest="(: ( [18435,18436]"/>
  <match src="}: } [44833,44834]" dest="}: } [50024,50025]"/>
  <match src="(: ( [54335,54336]" dest="(: ( [13448,13449]"/>
  <match src="comment: // bytes32 are &quot;0x&quot; followed by 32 bytes of data which take up 2 characters each [46849,46929]" dest="comment: // bytes32 are &quot;0x&quot; followed by 32 bytes of data which take up 2 characters each [52040,52120]"/>
  <match src=",: , [43598,43599]" dest=",: , [48789,48790]"/>
  <match src="type_name [793,800]" dest="type_name [1357,1364]"/>
  <match src="return_type_definition [56538,56567]" dest="return_type_definition [15651,15680]"/>
  <match src="): ) [8119,8120]" dest="): ) [8683,8684]"/>
  <match src="{: { [94558,94559]" dest="{: { [75416,75417]"/>
  <match src="event_paramater [88218,88241]" dest="event_paramater [71237,71260]"/>
  <match src="parameter [39904,39916]" dest="parameter [45095,45107]"/>
  <match src="): ) [44090,44091]" dest="): ) [49281,49282]"/>
  <match src="parameter [111766,111779]" dest="parameter [40679,40692]"/>
  <match src="): ) [86673,86674]" dest="): ) [54523,54524]"/>
  <match src="identifier: account [23174,23181]" dest="identifier: account [54944,54951]"/>
  <match src=",: , [39708,39709]" dest=",: , [44899,44900]"/>
  <match src="visibility [53501,53508]" dest="visibility [12614,12621]"/>
  <match src="{: { [87852,87853]" dest="{: { [71076,71077]"/>
  <match src="type_name [103857,103864]" dest="type_name [32770,32777]"/>
  <match src="(: ( [40536,40537]" dest="(: ( [45727,45728]"/>
  <match src="identifier: Account [96649,96656]" dest="identifier: Account [27867,27874]"/>
  <match src="type_name [63573,63580]" dest="type_name [20407,20414]"/>
  <match src="returns: returns [63766,63773]" dest="returns: returns [20600,20607]"/>
  <match src="identifier: Constants [104491,104500]" dest="identifier: Constants [33404,33413]"/>
  <match src="block_statement [102230,102263]" dest="block_statement [31143,31176]"/>
  <match src=",: , [40601,40602]" dest=",: , [45792,45793]"/>
  <match src="call_expression [80345,80353]" dest="call_expression [71966,71974]"/>
  <match src="member_expression [108886,108901]" dest="member_expression [37799,37814]"/>
  <match src="external: external [71994,72002]" dest="external: external [25807,25815]"/>
  <match src="}: } [43058,43059]" dest="}: } [48249,48250]"/>
  <match src="update_expression [44371,44374]" dest="update_expression [49562,49565]"/>
  <match src="call_argument [108416,108422]" dest="call_argument [37329,37335]"/>
  <match src="state_mutability [104917,104921]" dest="state_mutability [33830,33834]"/>
  <match src="]: ] [113203,113204]" dest="]: ] [42116,42117]"/>
  <match src="identifier: candidate [105446,105455]" dest="identifier: candidate [34359,34368]"/>
  <match src="binary_expression [7589,7595]" dest="binary_expression [8153,8159]"/>
  <match src="identifier: compareTo [10018,10027]" dest="identifier: compareTo [10582,10591]"/>
  <match src="call_struct_argument [8771,8815]" dest="call_struct_argument [9335,9379]"/>
  <match src="type_name [62767,62774]" dest="type_name [19601,19608]"/>
  <match src="mapping: mapping [95467,95474]" dest="mapping: mapping [26685,26692]"/>
  <match src=".: . [39530,39531]" dest=".: . [44721,44722]"/>
  <match src="return_statement [100326,100336]" dest="return_statement [29239,29249]"/>
  <match src="(: ( [101634,101635]" dest="(: ( [30547,30548]"/>
  <match src="(: ( [42035,42036]" dest="(: ( [47226,47227]"/>
  <match src="state_mutability [10096,10100]" dest="state_mutability [10660,10664]"/>
  <match src="call_expression [42061,42085]" dest="call_expression [47252,47276]"/>
  <match src="(: ( [40807,40808]" dest="(: ( [45998,45999]"/>
  <match src="primitive_type [88158,88165]" dest="primitive_type [71177,71184]"/>
  <match src="call_argument [460,489]" dest="call_argument [1024,1053]"/>
  <match src="expression_statement [112482,112527]" dest="expression_statement [41395,41440]"/>
  <match src="): ) [61223,61224]" dest="): ) [65655,65656]"/>
  <match src="type_name [63482,63486]" dest="type_name [20316,20320]"/>
  <match src="call_expression [9708,9728]" dest="call_expression [10272,10292]"/>
  <match src="new: new [46960,46963]" dest="new: new [52151,52154]"/>
  <match src=",: , [92279,92280]" dest=",: , [57863,57864]"/>
  <match src="identifier: allowance [61193,61202]" dest="identifier: allowanceCoupons [65620,65636]"/>
  <match src="(: ( [12078,12079]" dest="(: ( [22076,22077]"/>
  <match src="state_mutability [105051,105055]" dest="state_mutability [33964,33968]"/>
  <match src="call_argument [90798,90834]" dest="call_argument [81030,81048]"/>
  <match src="state_variable_declaration [88099,88138]" dest="state_variable_declaration [71115,71157]"/>
  <match src="member_expression [103191,103216]" dest="member_expression [32104,32129]"/>
  <match src=".: . [112207,112208]" dest=".: . [41120,41121]"/>
  <match src="function_body [112771,112875]" dest="function_body [41684,41788]"/>
  <match src="(: ( [43633,43634]" dest="(: ( [48824,48825]"/>
  <match src=".: . [102042,102043]" dest=".: . [30955,30956]"/>
  <match src="event: event [63562,63567]" dest="event: event [20396,20401]"/>
  <match src="identifier: balance [109632,109639]" dest="identifier: balance [38545,38552]"/>
  <match src="member_expression [89612,89772]" dest="member_expression [72620,72742]"/>
  <match src="=: = [110190,110191]" dest="=: = [39103,39104]"/>
  <match src="call_argument [40747,41027]" dest="call_argument [45938,46218]"/>
  <match src="type_name [1251,1258]" dest="type_name [1815,1822]"/>
  <match src="member_expression [89109,89119]" dest="member_expression [72462,72472]"/>
  <match src="&quot;: &quot; [21286,21287]" dest="&quot;: &quot; [71591,71592]"/>
  <match src="variable_declaration_statement [31869,32054]" dest="variable_declaration_statement [17137,17207]"/>
  <match src="!: ! [42657,42658]" dest="!: ! [47848,47849]"/>
  <match src="visibility [64488,64496]" dest="visibility [21322,21330]"/>
  <match src="identifier: div [9980,9983]" dest="identifier: div [10544,10547]"/>
  <match src="{: { [56805,56806]" dest="{: { [15918,15919]"/>
  <match src="(: ( [7917,7918]" dest="(: ( [8481,8482]"/>
  <match src="identifier: FOUR_BIT_MASK [38801,38814]" dest="identifier: FOUR_BIT_MASK [43992,44005]"/>
  <match src="parameter [6919,6928]" dest="parameter [7483,7492]"/>
  <match src="return_statement [104051,104103]" dest="return_statement [32964,33016]"/>
  <match src="): ) [88196,88197]" dest="): ) [71215,71216]"/>
  <match src="type_name [64298,64302]" dest="type_name [21132,21136]"/>
  <match src="(: ( [66706,66707]" dest="(: ( [73833,73834]"/>
  <match src="comment: /* Bootstrapping */ [52437,52456]" dest="comment: /* Bootstrapping */ [11550,11569]"/>
  <match src="variable_declaration_statement [2015,2033]" dest="variable_declaration_statement [2579,2597]"/>
  <match src="type_name [44922,44927]" dest="type_name [50113,50118]"/>
  <match src="function: function [75230,75238]" dest="function: function [67813,67821]"/>
  <match src="member_expression [102901,102921]" dest="member_expression [31814,31834]"/>
  <match src="uint256: uint256 [104799,104806]" dest="uint256: uint256 [33712,33719]"/>
  <match src="assignment_expression [107634,107695]" dest="assignment_expression [36547,36608]"/>
  <match src="): ) [114907,114908]" dest="): ) [69851,69852]"/>
  <match src="return_type_definition [44913,44935]" dest="return_type_definition [50104,50126]"/>
  <match src="}: } [39855,39856]" dest="}: } [45046,45047]"/>
  <match src="identifier: value [89016,89021]" dest="identifier: value [72391,72396]"/>
  <match src="type_name [13989,13996]" dest="type_name [23987,23994]"/>
  <match src="call_expression [101614,101636]" dest="call_expression [30527,30549]"/>
  <match src="(: ( [25570,25571]" dest="(: ( [60109,60110]"/>
  <match src="call_argument [108092,108098]" dest="call_argument [37005,37011]"/>
  <match src="function_body [103287,103420]" dest="function_body [32200,32333]"/>
  <match src="identifier: debt [107498,107502]" dest="identifier: debt [36411,36415]"/>
  <match src="assignment_expression [113176,113261]" dest="assignment_expression [42089,42174]"/>
  <match src="(: ( [102952,102953]" dest="(: ( [31865,31866]"/>
  <match src="identifier: epoch [102908,102913]" dest="identifier: epoch [31821,31826]"/>
  <match src="identifier: must [39005,39009]" dest="identifier: must [44196,44200]"/>
  <match src="contract_body [96246,96785]" dest="contract_body [27464,28003]"/>
  <match src="address: address [72017,72024]" dest="address: address [25830,25837]"/>
  <match src="comment: // return ASCII letter (a-f) [47878,47906]" dest="comment: // return ASCII letter (a-f) [53069,53097]"/>
  <match src="!=: != [114821,114823]" dest="!=: != [69765,69767]"/>
  <match src="identifier: payloadB [42312,42320]" dest="identifier: payloadB [47503,47511]"/>
  <match src="user_defined_type [8730,8734]" dest="user_defined_type [9294,9298]"/>
  <match src="call_argument [42378,42397]" dest="call_argument [47569,47588]"/>
  <match src="(: ( [28130,28131]" dest="(: ( [61441,61442]"/>
  <match src="(: ( [90059,90060]" dest="(: ( [73933,73934]"/>
  <match src="identifier: i [46292,46293]" dest="identifier: i [51483,51484]"/>
  <match src="address: address [29566,29573]" dest="address: address [53986,53993]"/>
  <match src="function_body [85146,85249]" dest="function_body [60310,60692]"/>
  <match src=",: , [58064,58065]" dest=",: , [54564,54565]"/>
  <match src="): ) [47108,47109]" dest="): ) [52299,52300]"/>
  <match src="user_defined_type [35093,35105]" dest="user_defined_type [61983,61995]"/>
  <match src="address: address [101856,101863]" dest="address: address [30769,30776]"/>
  <match src="return_type_definition [1315,1332]" dest="return_type_definition [1879,1896]"/>
  <match src="identifier: getPoolExitLockupEpochs [55804,55827]" dest="identifier: getPoolExitLockupEpochs [14917,14940]"/>
  <match src="primitive_type [106916,106920]" dest="primitive_type [35829,35833]"/>
  <match src=".: . [7430,7431]" dest=".: . [7994,7995]"/>
  <match src=".: . [98914,98915]" dest=".: . [77564,77565]"/>
  <match src="[: [ [44475,44476]" dest="[: [ [49666,49667]"/>
  <match src="(: ( [6628,6629]" dest="(: ( [7192,7193]"/>
  <match src="call_argument [7076,7082]" dest="call_argument [7640,7646]"/>
  <match src="=: = [110920,110921]" dest="=: = [39833,39834]"/>
  <match src="identifier: shift [46365,46370]" dest="identifier: shift [51556,51561]"/>
  <match src="returns: returns [28122,28129]" dest="returns: returns [61433,61440]"/>
  <match src="call_expression [92393,92519]" dest="call_expression [79029,79139]"/>
  <match src="identifier: totalRewardedWithPhantom [81275,81299]" dest="identifier: depositAmount [71950,71963]"/>
  <match src="block_statement [39011,39291]" dest="block_statement [44202,44482]"/>
  <match src="identifier: totalBonded [91054,91065]" dest="identifier: totalBonded [58005,58016]"/>
  <match src="type_name [29916,29928]" dest="type_name [17690,17702]"/>
  <match src="call_argument [92734,92738]" dest="call_argument [79610,79614]"/>
  <match src="): ) [80296,80297]" dest="): ) [71782,71783]"/>
  <match src="(: ( [8146,8147]" dest="(: ( [8710,8711]"/>
  <match src="expression_statement [44371,44375]" dest="expression_statement [49562,49566]"/>
  <match src="call_argument [40789,40813]" dest="call_argument [45980,46004]"/>
  <match src="parameter [40611,40627]" dest="parameter [45802,45818]"/>
  <match src="): ) [6099,6100]" dest="): ) [6663,6664]"/>
  <match src="memory: memory [111092,111098]" dest="memory: memory [40005,40011]"/>
  <match src=",: , [8799,8800]" dest=",: , [9363,9364]"/>
  <match src=".: . [110034,110035]" dest=".: . [38947,38948]"/>
  <match src="identifier: epoch [112076,112081]" dest="identifier: epoch [40989,40994]"/>
  <match src="identifier: D256 [7412,7416]" dest="identifier: D256 [7976,7980]"/>
  <match src="): ) [105619,105620]" dest="): ) [34532,34533]"/>
  <match src="uint8: uint8 [47831,47836]" dest="uint8: uint8 [53022,53027]"/>
  <match src="(: ( [86131,86132]" dest="(: ( [55674,55675]"/>
  <match src="{: { [7935,7936]" dest="{: { [8499,8500]"/>
  <match src="(: ( [115272,115273]" dest="(: ( [70216,70217]"/>
  <match src="): ) [75251,75252]" dest="): ) [67858,67859]"/>
  <match src="identifier: b [2031,2032]" dest="identifier: b [2595,2596]"/>
  <match src="primitive_type [46784,46789]" dest="primitive_type [51975,51980]"/>
  <match src="struct_member [96089,96104]" dest="struct_member [27307,27322]"/>
  <match src="identifier: Locked [114839,114845]" dest="identifier: Locked [69783,69789]"/>
  <match src="(: ( [62326,62327]" dest="(: ( [19160,19161]"/>
  <match src="primitive_type [106979,106986]" dest="primitive_type [35892,35899]"/>
  <match src="variable_declaration_statement [94081,94094]" dest="variable_declaration_statement [74939,74952]"/>
  <match src="}: } [8416,8417]" dest="}: } [8980,8981]"/>
  <match src="call_argument [112076,112081]" dest="call_argument [40989,40994]"/>
  <match src="event_paramater [62148,62169]" dest="event_paramater [18982,19003]"/>
  <match src="struct_member [96577,96593]" dest="struct_member [27795,27811]"/>
  <match src="identifier: Decimal [55227,55234]" dest="identifier: Decimal [14340,14347]"/>
  <match src="call_argument [86596,86605]" dest="call_argument [80388,80392]"/>
  <match src="identifier: Decimal [56235,56242]" dest="identifier: Decimal [15348,15355]"/>
  <match src="member_expression [101091,101105]" dest="member_expression [30004,30018]"/>
  <match src="primitive_type [86296,86303]" dest="primitive_type [67617,67624]"/>
  <match src="identifier: epochs [112264,112270]" dest="identifier: epochs [41177,41183]"/>
  <match src="}: } [103964,103965]" dest="}: } [32877,32878]"/>
  <match src="visibility [112762,112770]" dest="visibility [41675,41683]"/>
  <match src="member_expression [109538,109551]" dest="member_expression [38451,38464]"/>
  <match src="struct_member [96326,96339]" dest="struct_member [27544,27557]"/>
  <match src="identifier: candidate [113232,113241]" dest="identifier: candidate [42145,42154]"/>
  <match src="identifier: Decimal [72745,72752]" dest="identifier: Decimal [66619,66626]"/>
  <match src="external: external [107030,107038]" dest="external: external [35943,35951]"/>
  <match src="identifier: encodePacked [39531,39543]" dest="identifier: encodePacked [44722,44734]"/>
  <match src="type_name [96549,96561]" dest="type_name [27767,27779]"/>
  <match src="returns: returns [43962,43969]" dest="returns: returns [49153,49160]"/>
  <match src="identifier: D256 [9400,9404]" dest="identifier: D256 [9964,9968]"/>
  <match src="return: return [74141,74147]" dest="return: return [68806,68812]"/>
  <match src="user_defined_type [72757,72769]" dest="user_defined_type [66631,66643]"/>
  <match src="visibility [112001,112009]" dest="visibility [40914,40922]"/>
  <match src="pure: pure [43953,43957]" dest="pure: pure [49144,49148]"/>
  <match src="{: { [74015,74016]" dest="{: { [68588,68589]"/>
  <match src="primitive_type [43313,43319]" dest="primitive_type [48504,48510]"/>
  <match src="identifier: _state [104058,104064]" dest="identifier: _state [32971,32977]"/>
  <match src="call_argument [108403,108404]" dest="call_argument [37316,37317]"/>
  <match src="bool: bool [106807,106811]" dest="bool: bool [35720,35724]"/>
  <match src="): ) [111540,111541]" dest="): ) [40453,40454]"/>
  <match src="uint256: uint256 [49341,49348]" dest="uint256: uint256 [64113,64120]"/>
  <match src="uint112: uint112 [63591,63598]" dest="uint112: uint112 [20425,20432]"/>
  <match src="[: [ [102432,102433]" dest="[: [ [31345,31346]"/>
  <match src="identifier: RPAREN [39779,39785]" dest="identifier: RPAREN [44970,44976]"/>
  <match src="identifier: b [9354,9355]" dest="identifier: b [9918,9919]"/>
  <match src="for: for [5638,5641]" dest="for: for [6202,6205]"/>
  <match src="contract_body [62127,64499]" dest="contract_body [18961,21333]"/>
  <match src="event_paramater [63573,63589]" dest="event_paramater [20407,20423]"/>
  <match src="function_definition [9622,9735]" dest="function_definition [10186,10299]"/>
  <match src="identifier: self [9594,9598]" dest="identifier: self [10158,10162]"/>
  <match src="identifier: value [62784,62789]" dest="identifier: value [19618,19623]"/>
  <match src="call_expression [103376,103392]" dest="call_expression [32289,32305]"/>
  <match src="identifier: amount [109995,110001]" dest="identifier: amount [38908,38914]"/>
  <match src="): ) [109201,109202]" dest="): ) [38114,38115]"/>
  <match src="block_statement [41953,42494]" dest="block_statement [47144,47685]"/>
  <match src="identifier: b [9289,9290]" dest="identifier: b [9853,9854]"/>
  <match src="identifier: sender [89194,89200]" dest="identifier: sender [72290,72296]"/>
  <match src="bytes: bytes [44819,44824]" dest="bytes: bytes [50010,50015]"/>
  <match src="call_argument [9076,9077]" dest="call_argument [9640,9641]"/>
  <match src="identifier: reject [96146,96152]" dest="identifier: reject [27364,27370]"/>
  <match src="identifier: outstandingCouponsForEpoch [112028,112054]" dest="identifier: outstandingCouponsForEpoch [40941,40967]"/>
  <match src="primitive_type [25571,25578]" dest="primitive_type [60110,60117]"/>
  <match src="public: public [105594,105600]" dest="public: public [34507,34513]"/>
  <match src="identifier: amount [113329,113335]" dest="identifier: amount [42242,42248]"/>
  <match src="identifier: internalAmount [33449,33463]" dest="identifier: delta [67568,67573]"/>
  <match src="call_argument [66364,66401]" dest="call_argument [73768,73804]"/>
  <match src="{: { [6226,6227]" dest="{: { [6790,6791]"/>
  <match src="function: function [9514,9522]" dest="function: function [10078,10086]"/>
  <match src="returns: returns [1714,1721]" dest="returns: returns [2278,2285]"/>
  <match src="call_expression [27676,27689]" dest="call_expression [67243,67256]"/>
  <match src="identifier: file [43115,43119]" dest="identifier: file [48306,48310]"/>
  <match src="identifier: _ [115185,115186]" dest="identifier: _ [70129,70130]"/>
  <match src=",: , [4095,4096]" dest=",: , [4659,4660]"/>
  <match src="private: private [97871,97878]" dest="private: private [76521,76528]"/>
  <match src="return_type_definition [2628,2645]" dest="return_type_definition [3192,3209]"/>
  <match src="&quot;: &quot; [2673,2674]" dest="&quot;: &quot; [3237,3238]"/>
  <match src="string_literal [30863,30899]" dest="string_literal [67317,67342]"/>
  <match src="identifier: Decimal [31933,31940]" dest="identifier: Decimal [17408,17415]"/>
  <match src="if_statement [102413,102518]" dest="if_statement [31326,31431]"/>
  <match src="uint256: uint256 [91427,91434]" dest="uint256: uint256 [60824,60831]"/>
  <match src="member_expression [103777,103790]" dest="member_expression [32690,32703]"/>
  <match src="function: function [5995,6003]" dest="function: function [6559,6567]"/>
  <match src="comment: /*     Copyright 2020 Reflective Dollar Devs, based on the works of the Dynamic Dollar Devs and the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [59080,59755]" dest="comment: /*     Copyright 2020 Reflective Dollar Devs, based on the works of the Dynamic Dollar Devs and the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [24054,24729]"/>
  <match src="type_name [81494,81501]" dest="type_name [67987,67994]"/>
  <match src="function: function [100725,100733]" dest="function: function [29638,29646]"/>
  <match src="identifier: msg [89489,89492]" dest="identifier: msg [72580,72583]"/>
  <match src="&quot;: &quot; [66724,66725]" dest="&quot;: &quot; [73855,73856]"/>
  <match src="(: ( [38892,38893]" dest="(: ( [44083,44084]"/>
  <match src="parameter [13515,13532]" dest="parameter [23513,23530]"/>
  <match src=":: : [103079,103080]" dest=":: : [31992,31993]"/>
  <match src="identifier: value [59063,59068]" dest="identifier: value [72838,72843]"/>
  <match src=",: , [92738,92739]" dest=",: , [79614,79615]"/>
  <match src="call_expression [90133,90153]" dest="call_expression [73094,73114]"/>
  <match src="function_body [46802,47650]" dest="function_body [51993,52841]"/>
  <match src="): ) [103335,103336]" dest="): ) [32248,32249]"/>
  <match src=".: . [103783,103784]" dest=".: . [32696,32697]"/>
  <match src="uint256: uint256 [14037,14044]" dest="uint256: uint256 [24035,24042]"/>
  <match src="identifier: must [40040,40044]" dest="identifier: must [45231,45235]"/>
  <match src="parameter [1678,1687]" dest="parameter [2242,2251]"/>
  <match src="=: = [53924,53925]" dest="=: = [13037,13038]"/>
  <match src="parameter [63093,63097]" dest="parameter [19927,19931]"/>
  <match src="address: address [112374,112381]" dest="address: address [41287,41294]"/>
  <match src="identifier: coupons [109971,109978]" dest="identifier: coupons [38884,38891]"/>
  <match src="inheritance_specifier [116121,116131]" dest="inheritance_specifier [78492,78502]"/>
  <match src="bool: bool [59957,59961]" dest="bool: bool [24931,24935]"/>
  <match src="call_expression [91151,91267]" dest="call_expression [81347,81452]"/>
  <match src="identifier: unfreeze [89480,89488]" dest="identifier: unfreeze [72571,72579]"/>
  <match src="array_access [110545,110593]" dest="array_access [39458,39506]"/>
  <match src="parameter [62607,62620]" dest="parameter [19441,19454]"/>
  <match src="primitive_type [88540,88547]" dest="primitive_type [83248,83255]"/>
  <match src="return_statement [7611,7626]" dest="return_statement [8175,8190]"/>
  <match src="pure: pure [47715,47719]" dest="pure: pure [52906,52910]"/>
  <match src="type_name [104296,104303]" dest="type_name [33209,33216]"/>
  <match src=":: : [8572,8573]" dest=":: : [9136,9137]"/>
  <match src="uint256: uint256 [82820,82827]" dest="uint256: uint256 [83111,83118]"/>
  <match src="(: ( [90502,90503]" dest="(: ( [73184,73185]"/>
  <match src="): ) [107613,107614]" dest="): ) [36526,36527]"/>
  <match src="type_name [112910,112917]" dest="type_name [41823,41830]"/>
  <match src="identifier: amount0 [63266,63273]" dest="identifier: amount0 [20100,20107]"/>
  <match src="primitive_type [43088,43092]" dest="primitive_type [48279,48283]"/>
  <match src="comment: /**      * Account      */ [101666,101692]" dest="comment: /**      * Account      */ [30579,30605]"/>
  <match src="type_name [31933,31945]" dest="type_name [17408,17420]"/>
  <match src="identifier: burnFrom [59840,59848]" dest="identifier: burnFrom [24814,24822]"/>
  <match src=",: , [64313,64314]" dest=",: , [21147,21148]"/>
  <match src="identifier: add [108918,108921]" dest="identifier: add [37831,37834]"/>
  <match src="uint256: uint256 [101065,101072]" dest="uint256: uint256 [29978,29985]"/>
  <match src="-: - [46597,46598]" dest="-: - [51788,51789]"/>
  <match src="uint256: uint256 [101271,101278]" dest="uint256: uint256 [30184,30191]"/>
  <match src="type_name [57952,57959]" dest="type_name [55638,55645]"/>
  <match src="(: ( [107821,107822]" dest="(: ( [36734,36735]"/>
  <match src=".: . [111840,111841]" dest=".: . [40753,40754]"/>
  <match src="primitive_type [55734,55741]" dest="primitive_type [14847,14854]"/>
  <match src="return_type_definition [59948,59962]" dest="return_type_definition [24922,24936]"/>
  <match src="identifier: value [90578,90583]" dest="identifier: staged [73292,73298]"/>
  <match src="type_name [112393,112400]" dest="type_name [41306,41313]"/>
  <match src="function_body [114767,114927]" dest="function_body [69711,69871]"/>
  <match src="type_name [45077,45084]" dest="type_name [50268,50275]"/>
  <match src=",: , [61540,61541]" dest=",: , [60237,60238]"/>
  <match src="bool: bool [42529,42533]" dest="bool: bool [47720,47724]"/>
  <match src=",: , [802,803]" dest=",: , [1366,1367]"/>
  <match src="return_type_definition [63821,63838]" dest="return_type_definition [20655,20672]"/>
  <match src="identifier: account [114758,114765]" dest="identifier: account [69702,69709]"/>
  <match src="(: ( [45624,45625]" dest="(: ( [50815,50816]"/>
  <match src="identifier: coupons [109863,109870]" dest="identifier: coupons [38776,38783]"/>
  <match src="(: ( [113502,113503]" dest="(: ( [42415,42416]"/>
  <match src="assignment_expression [107483,107536]" dest="assignment_expression [36396,36449]"/>
  <match src=".: . [107871,107872]" dest=".: . [36784,36785]"/>
  <match src="parameter [7198,7209]" dest="parameter [7762,7773]"/>
  <match src="identifier: amount [107977,107983]" dest="identifier: amount [36890,36896]"/>
  <match src="expression_statement [46645,46656]" dest="expression_statement [51836,51847]"/>
  <match src=".: . [105529,105530]" dest=".: . [34442,34443]"/>
  <match src="type_name [105478,105482]" dest="type_name [34391,34395]"/>
  <match src="(: ( [75666,75667]" dest="(: ( [68656,68657]"/>
  <match src="string [20566,20599]" dest="string [64190,64219]"/>
  <match src=",: , [62706,62707]" dest=",: , [19540,19541]"/>
  <match src="function: function [111949,111957]" dest="function: function [40862,40870]"/>
  <match src="primitive_type [53142,53149]" dest="primitive_type [12255,12262]"/>
  <match src="(: ( [105064,105065]" dest="(: ( [33977,33978]"/>
  <match src="identifier: candidate [113396,113405]" dest="identifier: candidate [42309,42318]"/>
  <match src="(: ( [62935,62936]" dest="(: ( [19769,19770]"/>
  <match src="call_argument [42822,42827]" dest="call_argument [48013,48018]"/>
  <match src="): ) [44483,44484]" dest="): ) [49674,49675]"/>
  <match src="=: = [53385,53386]" dest="=: = [12498,12499]"/>
  <match src="return_type_definition [54439,54469]" dest="return_type_definition [13552,13582]"/>
  <match src="identifier: j [45336,45337]" dest="identifier: j [50527,50528]"/>
  <match src=".: . [11091,11092]" dest=".: . [65599,65600]"/>
  <match src="): ) [92518,92519]" dest="): ) [79138,79139]"/>
  <match src="uint: uint [86925,86929]" dest="uint: uint [61664,61668]"/>
  <match src=",: , [40973,40974]" dest=",: , [46164,46165]"/>
  <match src="return: return [44980,44986]" dest="return: return [50171,50177]"/>
  <match src="number_literal: 1 [44524,44525]" dest="number_literal: 1 [49715,49716]"/>
  <match src="identifier: sub [789,792]" dest="identifier: sub [1353,1356]"/>
  <match src="{: { [112771,112772]" dest="{: { [41684,41685]"/>
  <match src="comment: // for each byte (starting from the lowest byte), populate the result with two characters [47120,47209]" dest="comment: // for each byte (starting from the lowest byte), populate the result with two characters [52311,52400]"/>
  <match src=":: : [7424,7425]" dest=":: : [7988,7989]"/>
  <match src="call_argument [40173,40177]" dest="call_argument [45364,45368]"/>
  <match src="primitive_type [62509,62513]" dest="primitive_type [19343,19347]"/>
  <match src="identifier: _state [107505,107511]" dest="identifier: _state [36418,36424]"/>
  <match src="return: return [81238,81244]" dest="return: return [61954,61960]"/>
  <match src="&quot;: &quot; [33699,33700]" dest="&quot;: &quot; [62883,62884]"/>
  <match src="}: } [43052,43053]" dest="}: } [48243,48244]"/>
  <match src="yul_path [94580,94587]" dest="yul_path [75438,75445]"/>
  <match src="identifier: totalDebt [101641,101650]" dest="identifier: totalDebt [30554,30563]"/>
  <match src="): ) [101901,101902]" dest="): ) [30814,30815]"/>
  <match src="internal: internal [112616,112624]" dest="internal: internal [41529,41537]"/>
  <match src="parameter [101065,101072]" dest="parameter [29978,29985]"/>
  <match src="type_name [44503,44510]" dest="type_name [49694,49701]"/>
  <match src="return_statement [100243,100256]" dest="return_statement [29156,29169]"/>
  <match src=".: . [29970,29971]" dest=".: . [18431,18432]"/>
  <match src="parameter [64315,64330]" dest="parameter [21149,21164]"/>
  <match src="visibility [7887,7895]" dest="visibility [8451,8459]"/>
  <match src="(: ( [3402,3403]" dest="(: ( [3966,3967]"/>
  <match src="return_type_definition [62442,62457]" dest="return_type_definition [19276,19291]"/>
  <match src="external: external [12061,12069]" dest="external: external [22059,22067]"/>
  <match src="parameter [104595,104610]" dest="parameter [33508,33523]"/>
  <match src="{: { [81224,81225]" dest="{: { [61940,61941]"/>
  <match src="&quot;: &quot; [44987,44988]" dest="&quot;: &quot; [50178,50179]"/>
  <match src="): ) [9689,9690]" dest="): ) [10253,10254]"/>
  <match src="(: ( [111558,111559]" dest="(: ( [40471,40472]"/>
  <match src="(: ( [40328,40329]" dest="(: ( [45519,45520]"/>
  <match src="function_definition [9373,9508]" dest="function_definition [9937,10072]"/>
  <match src="identifier: amount1 [63280,63287]" dest="identifier: amount1 [20114,20121]"/>
  <match src="call_argument [32588,32597]" dest="call_argument [65556,65565]"/>
  <match src=",: , [75352,75353]" dest=",: , [68090,68091]"/>
  <match src="): ) [102401,102402]" dest="): ) [31314,31315]"/>
  <match src="{: { [80328,80329]" dest="{: { [71793,71794]"/>
  <match src="type_name [6893,6897]" dest="type_name [7457,7461]"/>
  <match src="&quot;: &quot; [76503,76504]" dest="&quot;: &quot; [80639,80640]"/>
  <match src="): ) [6198,6199]" dest="): ) [6762,6763]"/>
  <match src="internal: internal [55318,55326]" dest="internal: internal [14431,14439]"/>
  <match src="(: ( [9169,9170]" dest="(: ( [9733,9734]"/>
  <match src="call_expression [39200,39226]" dest="call_expression [44391,44417]"/>
  <match src="): ) [63555,63556]" dest="): ) [20389,20390]"/>
  <match src="return_type_definition [101885,101902]" dest="return_type_definition [30798,30815]"/>
  <match src="type_name [38699,38705]" dest="type_name [43890,43896]"/>
  <match src="visibility [59882,59888]" dest="visibility [24856,24862]"/>
  <match src="private: private [53873,53880]" dest="private: private [12986,12993]"/>
  <match src="uint112: uint112 [63573,63580]" dest="uint112: uint112 [20407,20414]"/>
  <match src="emit_statement [89095,89128]" dest="emit_statement [72448,72481]"/>
  <match src="state_mutability [42634,42638]" dest="state_mutability [47825,47829]"/>
  <match src="type_name [55079,55086]" dest="type_name [14192,14199]"/>
  <match src="return: return [102272,102278]" dest="return: return [31185,31191]"/>
  <match src="(: ( [55078,55079]" dest="(: ( [14191,14192]"/>
  <match src="member_expression [109950,109990]" dest="member_expression [38863,38903]"/>
  <match src="call_argument [4097,4098]" dest="call_argument [4661,4662]"/>
  <match src="event_definition [88486,88575]" dest="event_definition [78854,78919]"/>
  <match src="member_expression [90470,90502]" dest="member_expression [73142,73184]"/>
  <match src="number_literal: 10 [5724,5726]" dest="number_literal: 10 [6288,6290]"/>
  <match src="member_expression [100546,100567]" dest="member_expression [29459,29480]"/>
  <match src="identifier: D256 [55387,55391]" dest="identifier: D256 [14500,14504]"/>
  <match src="): ) [62666,62667]" dest="): ) [19500,19501]"/>
  <match src="address: address [108464,108471]" dest="address: address [37377,37384]"/>
  <match src="identifier: decimals [62417,62425]" dest="identifier: decimals [19251,19259]"/>
  <match src="parameter [11628,11635]" dest="parameter [21626,21633]"/>
  <match src="): ) [46154,46155]" dest="): ) [51345,51346]"/>
  <match src="): ) [22047,22048]" dest="): ) [64963,64964]"/>
  <match src="call_argument [9209,9210]" dest="call_argument [9773,9774]"/>
  <match src="identifier: amount [16643,16649]" dest="identifier: amount [55537,55543]"/>
  <match src="visibility [9147,9155]" dest="visibility [9711,9719]"/>
  <match src="function: function [102837,102845]" dest="function: function [31750,31758]"/>
  <match src="(: ( [1963,1964]" dest="(: ( [2527,2528]"/>
  <match src="private: private [52656,52663]" dest="private: private [11769,11776]"/>
  <match src="{: { [8147,8148]" dest="{: { [8711,8712]"/>
  <match src="parameter [112727,112744]" dest="parameter [41640,41657]"/>
  <match src="type_name [54336,54343]" dest="type_name [13449,13456]"/>
  <match src="member_expression [110987,110999]" dest="member_expression [39900,39912]"/>
  <match src="return_statement [100673,100682]" dest="return_statement [29586,29595]"/>
  <match src="identifier: D256 [5787,5791]" dest="identifier: D256 [6351,6355]"/>
  <match src="return_statement [56578,56630]" dest="return_statement [15691,15743]"/>
  <match src="identifier: b [10072,10073]" dest="identifier: b [10636,10637]"/>
  <match src="parameter [13499,13513]" dest="parameter [23497,23511]"/>
  <match src="call_argument [30712,30718]" dest="call_argument [16928,16934]"/>
  <match src="address: address [14012,14019]" dest="address: address [24010,24017]"/>
  <match src="call_argument [108618,108624]" dest="call_argument [37531,37537]"/>
  <match src="{: { [3319,3320]" dest="{: { [3883,3884]"/>
  <match src="function_definition [56490,56636]" dest="function_definition [15603,15749]"/>
  <match src="state_mutability [55839,55843]" dest="state_mutability [14952,14956]"/>
  <match src="identifier: account [109167,109174]" dest="identifier: account [38080,38087]"/>
  <match src="parameter [86092,86112]" dest="parameter [62526,62546]"/>
  <match src="memory: memory [71959,71965]" dest="memory: memory [25772,25778]"/>
  <match src="identifier: epoch [96562,96567]" dest="identifier: epoch [27780,27785]"/>
  <match src="}: } [85248,85249]" dest="}: } [60691,60692]"/>
  <match src="identifier: epoch [104072,104077]" dest="identifier: epoch [32985,32990]"/>
  <match src="string_literal [100144,100166]" dest="string_literal [29057,29079]"/>
  <match src="(: ( [107730,107731]" dest="(: ( [36643,36644]"/>
  <match src="primitive_type [108817,108824]" dest="primitive_type [37730,37737]"/>
  <match src=".: . [110614,110615]" dest=".: . [39527,39528]"/>
  <match src="function_definition [64142,64202]" dest="function_definition [20976,21036]"/>
  <match src="state_mutability [101257,101261]" dest="state_mutability [30170,30174]"/>
  <match src="return_statement [4083,4128]" dest="return_statement [4647,4692]"/>
  <match src="uint256: uint256 [47223,47230]" dest="uint256: uint256 [52414,52421]"/>
  <match src="block_statement [40681,41070]" dest="block_statement [45872,46261]"/>
  <match src=",: , [90893,90894]" dest=",: , [73450,73451]"/>
  <match src="): ) [92332,92333]" dest="): ) [57909,57910]"/>
  <match src="function_body [55978,56019]" dest="function_body [15091,15132]"/>
  <match src="function: function [23096,23104]" dest="function: function [54849,54857]"/>
  <match src="member_expression [103171,103186]" dest="member_expression [32084,32099]"/>
  <match src="string [32120,32156]" dest="string [55209,55253]"/>
  <match src="string: string [98595,98601]" dest="string: string [77245,77251]"/>
  <match src=".: . [111086,111087]" dest=".: . [39999,40000]"/>
  <match src=".: . [68072,68073]" dest=".: . [83629,83630]"/>
  <match src="{: { [104808,104809]" dest="{: { [33721,33722]"/>
  <match src="identifier: amount [108489,108495]" dest="identifier: amount [37402,37408]"/>
  <match src="type_name [34863,34875]" dest="type_name [67833,67845]"/>
  <match src="): ) [103036,103037]" dest="): ) [31949,31950]"/>
  <match src="number_literal: 0 [94613,94614]" dest="number_literal: 0 [75471,75472]"/>
  <match src="call_argument [40964,40972]" dest="call_argument [46155,46163]"/>
  <match src="): ) [98859,98860]" dest="): ) [77509,77510]"/>
  <match src="{: { [95963,95964]" dest="{: { [27181,27182]"/>
  <match src="number_literal: 1 [46123,46124]" dest="number_literal: 1 [51314,51315]"/>
  <match src="identifier: amount [113456,113462]" dest="identifier: amount [42369,42375]"/>
  <match src="identifier: Decimal [111125,111132]" dest="identifier: Decimal [40038,40045]"/>
  <match src="state_mutability [103879,103883]" dest="state_mutability [32792,32796]"/>
  <match src=".: . [34914,34915]" dest=".: . [68284,68285]"/>
  <match src="): ) [54907,54908]" dest="): ) [14020,14021]"/>
  <match src="parameter [49341,49356]" dest="parameter [64113,64130]"/>
  <match src="expression_statement [47461,47472]" dest="expression_statement [52652,52663]"/>
  <match src="=: = [47560,47561]" dest="=: = [52751,52752]"/>
  <match src="uint256: uint256 [34090,34097]" dest="uint256: uint256 [61405,61412]"/>
  <match src="number_literal: 0 [100680,100681]" dest="number_literal: 0 [29593,29594]"/>
  <match src="(: ( [112558,112559]" dest="(: ( [41471,41472]"/>
  <match src="(: ( [47566,47567]" dest="(: ( [52757,52758]"/>
  <match src="function_definition [2579,2709]" dest="function_definition [3143,3273]"/>
  <match src="user_defined_type [111079,111091]" dest="user_defined_type [39992,40004]"/>
  <match src="variable_declaration_statement [45856,45883]" dest="variable_declaration_statement [51047,51074]"/>
  <match src="call_argument [115078,115085]" dest="call_argument [70022,70029]"/>
  <match src=".: . [103176,103177]" dest=".: . [32089,32090]"/>
  <match src="state_mutability [94051,94055]" dest="state_mutability [74909,74913]"/>
  <match src="}: } [56635,56636]" dest="}: } [15748,15749]"/>
  <match src="identifier: SafeMath [87864,87872]" dest="identifier: SafeMath [71088,71096]"/>
  <match src="call_expression [110204,110238]" dest="call_expression [39117,39151]"/>
  <match src="visibility [109373,109381]" dest="visibility [38286,38294]"/>
  <match src="member_expression [90996,91006]" dest="member_expression [72958,72968]"/>
  <match src="address: address [62539,62546]" dest="address: address [19373,19380]"/>
  <match src="): ) [100771,100772]" dest="): ) [29684,29685]"/>
  <match src="identifier: D256 [8526,8530]" dest="identifier: D256 [9090,9094]"/>
  <match src="type_name [38784,38791]" dest="type_name [43975,43982]"/>
  <match src="member_expression [108054,108083]" dest="member_expression [36967,36996]"/>
  <match src="pure: pure [38981,38985]" dest="pure: pure [44172,44176]"/>
  <match src="type_name [98135,98142]" dest="type_name [76785,76792]"/>
  <match src=".: . [42022,42023]" dest=".: . [47213,47214]"/>
  <match src="identifier: reserve0 [63581,63589]" dest="identifier: reserve0 [20415,20423]"/>
  <match src=".: . [102066,102067]" dest=".: . [30979,30980]"/>
  <match src="memory: memory [74001,74007]" dest="memory: memory [18307,18313]"/>
  <match src="uint256: uint256 [53334,53341]" dest="uint256: uint256 [12447,12454]"/>
  <match src="(: ( [108171,108172]" dest="(: ( [37084,37085]"/>
  <match src="call_argument [90253,90272]" dest="call_argument [81648,81751]"/>
  <match src="member_expression [7981,7988]" dest="member_expression [8545,8552]"/>
  <match src="type_name [44868,44875]" dest="type_name [50059,50066]"/>
  <match src="string [100144,100166]" dest="string [29057,29079]"/>
  <match src="(: ( [8584,8585]" dest="(: ( [9148,9149]"/>
  <match src="primitive_type [62171,62178]" dest="primitive_type [19005,19012]"/>
  <match src="identifier: z [46645,46646]" dest="identifier: z [51836,51837]"/>
  <match src="binary_expression [452,458]" dest="binary_expression [1016,1022]"/>
  <match src="call_argument [98946,99007]" dest="call_argument [77596,77657]"/>
  <match src="primitive_type [43917,43924]" dest="primitive_type [49108,49115]"/>
  <match src="}: } [103680,103681]" dest="}: } [32593,32594]"/>
  <match src="return: return [102894,102900]" dest="return: return [31807,31813]"/>
  <match src="assignment_expression [46449,46493]" dest="assignment_expression [51640,51684]"/>
  <match src="identifier: self [9412,9416]" dest="identifier: self [9976,9980]"/>
  <match src="identifier: D256 [72765,72769]" dest="identifier: D256 [66639,66643]"/>
  <match src="type_name [22972,22979]" dest="type_name [16817,16824]"/>
  <match src="function: function [39862,39870]" dest="function: function [45053,45061]"/>
  <match src="bytes32: bytes32 [99019,99026]" dest="bytes32: bytes32 [77669,77676]"/>
  <match src="parameter [12379,12392]" dest="parameter [22377,22390]"/>
  <match src="type_name [88429,88436]" dest="type_name [71318,71325]"/>
  <match src="): ) [22008,22009]" dest="): ) [64332,64333]"/>
  <match src="expression_statement [111426,111609]" dest="expression_statement [40339,40522]"/>
  <match src="returns: returns [63016,63023]" dest="returns: returns [19850,19857]"/>
  <match src="call_argument [90578,90583]" dest="call_argument [73292,73298]"/>
  <match src="identifier: this [92219,92223]" dest="identifier: this [57780,57784]"/>
  <match src="identifier: _state [96822,96828]" dest="identifier: _state [28040,28046]"/>
  <match src="): ) [9978,9979]" dest="): ) [10542,10543]"/>
  <match src="member_expression [111882,111915]" dest="member_expression [40795,40828]"/>
  <match src=",: , [40555,40556]" dest=",: , [45746,45747]"/>
  <match src="member_expression [89877,89887]" dest="member_expression [73834,73844]"/>
  <match src="visibility [62365,62373]" dest="visibility [19199,19207]"/>
  <match src="member_expression [87978,87988]" dest="member_expression [63576,63586]"/>
  <match src="identifier: COMMA [43593,43598]" dest="identifier: COMMA [48784,48789]"/>
  <match src="call_expression [91616,91654]" dest="call_expression [73634,73658]"/>
  <match src=".: . [107497,107498]" dest=".: . [36410,36411]"/>
  <match src="call_expression [89668,89703]" dest="call_expression [72663,72698]"/>
  <match src="primitive_type [78420,78427]" dest="primitive_type [66860,66867]"/>
  <match src="identifier: Mint [63232,63236]" dest="identifier: Mint [20066,20070]"/>
  <match src="address: address [63055,63062]" dest="address: address [19889,19896]"/>
  <match src="identifier: outstanding [109524,109535]" dest="identifier: outstanding [38437,38448]"/>
  <match src="assignment_expression [112168,112247]" dest="assignment_expression [41081,41160]"/>
  <match src="identifier: amount [59933,59939]" dest="identifier: amount [24907,24913]"/>
  <match src="returns: returns [9028,9035]" dest="returns: returns [9592,9599]"/>
  <match src="returns: returns [105190,105197]" dest="returns: returns [34103,34110]"/>
  <match src="=: = [88129,88130]" dest="=: = [71145,71146]"/>
  <match src="(: ( [74907,74908]" dest="(: ( [67043,67044]"/>
  <match src="variable_declaration [98460,98472]" dest="variable_declaration [77110,77122]"/>
  <match src="{: { [104668,104669]" dest="{: { [33581,33582]"/>
  <match src="number_literal: 18 [5728,5730]" dest="number_literal: 18 [6292,6294]"/>
  <match src="[: [ [112669,112670]" dest="[: [ [41582,41583]"/>
  <match src="identifier: amount [20756,20762]" dest="identifier: amount [65125,65131]"/>
  <match src="(: ( [63804,63805]" dest="(: ( [20638,20639]"/>
  <match src="identifier: msg [90773,90776]" dest="identifier: msg [80413,80416]"/>
  <match src="): ) [80352,80353]" dest="): ) [71973,71974]"/>
  <match src="type_name [29566,29573]" dest="type_name [53986,53993]"/>
  <match src=".: . [90039,90040]" dest=".: . [73913,73914]"/>
  <match src="identifier: mul [7065,7068]" dest="identifier: mul [7629,7632]"/>
  <match src="primitive_type [78142,78149]" dest="primitive_type [66694,66701]"/>
  <match src="string [72808,72816]" dest="string [78623,78631]"/>
  <match src="(: ( [102975,102976]" dest="(: ( [31888,31889]"/>
  <match src="identifier: internalAmountAfterTax [32750,32772]" dest="identifier: supplyChangeLimit [68377,68394]"/>
  <match src="call_argument [42226,42245]" dest="call_argument [47417,47436]"/>
  <match src="call_argument [90395,90405]" dest="call_argument [62741,62751]"/>
  <match src="identifier: maxPeriod [111502,111511]" dest="identifier: maxPeriod [40415,40424]"/>
  <match src="call_argument [111930,111935]" dest="call_argument [40843,40848]"/>
  <match src="call_expression [102029,102042]" dest="call_expression [30942,30955]"/>
  <match src="type_name [38611,38617]" dest="type_name [43802,43808]"/>
  <match src="identifier: minPeriod [111530,111539]" dest="identifier: minPeriod [40443,40452]"/>
  <match src="binary_expression [7722,7727]" dest="binary_expression [8286,8291]"/>
  <match src="&quot;: &quot; [76511,76512]" dest="&quot;: &quot; [80653,80654]"/>
  <match src="&lt;=: &lt;= [1353,1355]" dest="&lt;=: &lt;= [1917,1919]"/>
  <match src="function_definition [62520,62583]" dest="function_definition [19354,19417]"/>
  <match src="identifier: D256 [8764,8768]" dest="identifier: D256 [9328,9332]"/>
  <match src="identifier: decrementTotalRedeemable [107944,107968]" dest="identifier: decrementTotalRedeemable [36857,36881]"/>
  <match src="identifier: D256 [6221,6225]" dest="identifier: D256 [6785,6789]"/>
  <match src="(: ( [47732,47733]" dest="(: ( [52923,52924]"/>
  <match src="call_expression [88934,88941]" dest="call_expression [71877,71885]"/>
  <match src="uint256: uint256 [1678,1685]" dest="uint256: uint256 [2242,2249]"/>
  <match src="is: is [59773,59775]" dest="is: is [24747,24749]"/>
  <match src="}: } [39849,39850]" dest="}: } [45040,45041]"/>
  <match src="comment: /* Market */ [53734,53746]" dest="comment: /* Market */ [12847,12859]"/>
  <match src="comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      * - Addition cannot overflow.      */ [118,335]" dest="comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      * - Addition cannot overflow.      */ [682,899]"/>
  <match src="type_name [14037,14044]" dest="type_name [24035,24042]"/>
  <match src="identifier: EPOCH_MAX_PERIOD [54601,54617]" dest="identifier: EPOCH_MAX_PERIOD [13714,13730]"/>
  <match src="call_struct_argument [7959,7989]" dest="call_struct_argument [8523,8553]"/>
  <match src="parameter [100599,100612]" dest="parameter [29512,29525]"/>
  <match src="(: ( [6007,6008]" dest="(: ( [6571,6572]"/>
  <match src="call_argument [9348,9352]" dest="call_argument [9912,9916]"/>
  <match src="number_literal: 0x203c [38724,38730]" dest="number_literal: 0x203c [43915,43921]"/>
  <match src="): ) [63805,63806]" dest="): ) [20639,20640]"/>
  <match src="type_name [41105,41109]" dest="type_name [46296,46300]"/>
  <match src="identifier: must [43093,43097]" dest="identifier: must [48284,48288]"/>
  <match src="type_name [7121,7125]" dest="type_name [7685,7689]"/>
  <match src="return_statement [56266,56330]" dest="return_statement [15379,15443]"/>
  <match src="primitive_type [96498,96505]" dest="primitive_type [27716,27723]"/>
  <match src="): ) [42450,42451]" dest="): ) [47641,47642]"/>
  <match src="&quot;: &quot; [91129,91130]" dest="&quot;: &quot; [58078,58079]"/>
  <match src="primitive_type [96326,96333]" dest="primitive_type [27544,27551]"/>
  <match src="function_body [110535,110683]" dest="function_body [39448,39596]"/>
  <match src="): ) [54343,54344]" dest="): ) [13456,13457]"/>
  <match src="pure: pure [54803,54807]" dest="pure: pure [13916,13920]"/>
  <match src="parameter [41124,41136]" dest="parameter [46315,46327]"/>
  <match src="member_expression [108659,108673]" dest="member_expression [37572,37586]"/>
  <match src="string [44987,44990]" dest="string [50178,50181]"/>
  <match src="event_paramater [63532,63550]" dest="event_paramater [20366,20384]"/>
  <match src="primitive_type [95566,95573]" dest="primitive_type [26784,26791]"/>
  <match src="member_expression [108337,108351]" dest="member_expression [37250,37264]"/>
  <match src="address: address [112576,112583]" dest="address: address [41489,41496]"/>
  <match src="{: { [6629,6630]" dest="{: { [7193,7194]"/>
  <match src="state_mutability [12420,12424]" dest="state_mutability [22418,22422]"/>
  <match src="type_name [96808,96821]" dest="type_name [28026,28039]"/>
  <match src="type_name [107150,107157]" dest="type_name [36063,36070]"/>
  <match src="identifier: reject [105254,105260]" dest="identifier: reject [34167,34173]"/>
  <match src="): ) [24547,24548]" dest="): ) [79970,79971]"/>
  <match src="identifier: decrementTotalDebt [107558,107576]" dest="identifier: decrementTotalDebt [36471,36489]"/>
  <match src="public: public [101250,101256]" dest="public: public [30163,30169]"/>
  <match src="function_definition [71882,71906]" dest="function_definition [25695,25719]"/>
  <match src="return_type_definition [4055,4072]" dest="return_type_definition [4619,4636]"/>
  <match src="&quot;: &quot; [58913,58914]" dest="&quot;: &quot; [64599,64600]"/>
  <match src="): ) [86208,86209]" dest="): ) [54073,54074]"/>
  <match src="parameter [21889,21904]" dest="parameter [64883,64898]"/>
  <match src="identifier: owner [110624,110629]" dest="identifier: owner [39537,39542]"/>
  <match src="string_literal [61379,61422]" dest="string_literal [79285,79314]"/>
  <match src="identifier: candidate [113043,113052]" dest="identifier: candidate [41956,41965]"/>
  <match src="identifier: block [68067,68072]" dest="identifier: block [83624,83629]"/>
  <match src="identifier: Approval [22149,22157]" dest="identifier: CouponApproval [65089,65103]"/>
  <match src="identifier: candidates [113385,113395]" dest="identifier: candidates [42298,42308]"/>
  <match src="identifier: payloadA [40329,40337]" dest="identifier: payloadA [45520,45528]"/>
  <match src="(: ( [98527,98528]" dest="(: ( [77177,77178]"/>
  <match src="identifier: Decimal [73988,73995]" dest="identifier: Decimal [18294,18301]"/>
  <match src="primitive_type [106604,106611]" dest="primitive_type [35517,35524]"/>
  <match src="identifier: stringifyTruncated [39650,39668]" dest="identifier: stringifyTruncated [44841,44859]"/>
  <match src="type_name [105199,105206]" dest="type_name [34112,34119]"/>
  <match src="identifier: balanceOf [80354,80363]" dest="identifier: balanceOf [71975,71984]"/>
  <match src="(: ( [74160,74161]" dest="(: ( [68824,68825]"/>
  <match src="identifier: epochStrategy [111559,111572]" dest="identifier: epochStrategy [40472,40485]"/>
  <match src="member_expression [111559,111582]" dest="member_expression [40472,40495]"/>
  <match src="identifier: rejectFor [105149,105158]" dest="identifier: rejectFor [34062,34071]"/>
  <match src="returns: returns [5921,5928]" dest="returns: returns [6485,6492]"/>
  <match src="comment: // 100 RFSD [53546,53557]" dest="comment: // 100 RFSD [12659,12670]"/>
  <match src="pure: pure [55720,55724]" dest="pure: pure [14833,14837]"/>
  <match src="call_argument [33395,33401]" dest="call_argument [65459,65465]"/>
  <match src="uint256: uint256 [39976,39983]" dest="uint256: uint256 [45167,45174]"/>
  <match src="memory: memory [8333,8339]" dest="memory: memory [8897,8903]"/>
  <match src="identifier: Decimal [74831,74838]" dest="identifier: Decimal [18578,18585]"/>
  <match src="[: [ [111684,111685]" dest="[: [ [40597,40598]"/>
  <match src="primitive_type [47037,47041]" dest="primitive_type [52228,52232]"/>
  <match src=",: , [22163,22164]" dest=",: , [65114,65115]"/>
  <match src="(: ( [45827,45828]" dest="(: ( [51018,51019]"/>
  <match src="identifier: Account [102486,102493]" dest="identifier: Account [31399,31406]"/>
  <match src="identifier: that [38888,38892]" dest="identifier: that [44079,44083]"/>
  <match src="identifier: balance [101202,101209]" dest="identifier: balance [30115,30122]"/>
  <match src="identifier: IMPLEMENTATION_SLOT [99940,99959]" dest="identifier: IMPLEMENTATION_SLOT [28853,28872]"/>
  <match src="): ) [6664,6665]" dest="): ) [7228,7229]"/>
  <match src="type_name [63121,63128]" dest="type_name [19955,19962]"/>
  <match src="identifier: sender [90777,90783]" dest="identifier: sender [80417,80423]"/>
  <match src=",: , [41847,41848]" dest=",: , [47038,47039]"/>
  <match src="type_name [10114,10121]" dest="type_name [10678,10685]"/>
  <match src="identifier: balance [109243,109250]" dest="identifier: balance [38156,38163]"/>
  <match src="{: { [107473,107474]" dest="{: { [36386,36387]"/>
  <match src="comment: /**      * @dev Upgrades the proxy to a new implementation.      * @param newImplementation Address of the new implementation.      */ [98208,98342]" dest="comment: /**      * @dev Upgrades the proxy to a new implementation.      * @param newImplementation Address of the new implementation.      */ [76858,76992]"/>
  <match src="primitive_type [39049,39055]" dest="primitive_type [44240,44246]"/>
  <match src="internal: internal [40638,40646]" dest="internal: internal [45829,45837]"/>
  <match src="]: ] [102440,102441]" dest="]: ] [31353,31354]"/>
  <match src="{: { [100971,100972]" dest="{: { [29884,29885]"/>
  <match src="type_name [12379,12386]" dest="type_name [22377,22384]"/>
  <match src="bool: bool [13164,13168]" dest="bool: bool [23162,23166]"/>
  <match src="type_name [88331,88338]" dest="type_name [71391,71398]"/>
  <match src="struct_member [96730,96777]" dest="struct_member [27948,27995]"/>
  <match src="): ) [104309,104310]" dest="): ) [33222,33223]"/>
  <match src="parameter [104891,104908]" dest="parameter [33804,33821]"/>
  <match src=".: . [108673,108674]" dest=".: . [37586,37587]"/>
  <match src="parameter [16109,16116]" dest="parameter [16861,16868]"/>
  <match src="(: ( [72016,72017]" dest="(: ( [25829,25830]"/>
  <match src="): ) [40679,40680]" dest="): ) [45870,45871]"/>
  <match src="(: ( [111173,111174]" dest="(: ( [40086,40087]"/>
  <match src="state_mutability [103577,103581]" dest="state_mutability [32490,32494]"/>
  <match src="string_literal [27341,27381]" dest="string_literal [55545,55575]"/>
  <match src="member_expression [100790,100805]" dest="member_expression [29703,29718]"/>
  <match src="visibility [55830,55838]" dest="visibility [14943,14951]"/>
  <match src="identifier: _state [110020,110026]" dest="identifier: _state [38933,38939]"/>
  <match src=".: . [90234,90235]" dest=".: . [81629,81630]"/>
  <match src="parameter [43205,43221]" dest="parameter [48396,48412]"/>
  <match src="returns: returns [100209,100216]" dest="returns: returns [29122,29129]"/>
  <match src="function: function [41082,41090]" dest="function: function [46273,46281]"/>
  <match src="identifier: owner [14005,14010]" dest="identifier: owner [24003,24008]"/>
  <match src="parameter [102175,102182]" dest="parameter [31088,31095]"/>
  <match src="(: ( [94064,94065]" dest="(: ( [74922,74923]"/>
  <match src="member_expression [101297,101311]" dest="member_expression [30210,30224]"/>
  <match src="call_argument [61211,61223]" dest="call_argument [65645,65655]"/>
  <match src="return_type_definition [105322,105339]" dest="return_type_definition [34235,34252]"/>
  <match src="returns: returns [62379,62386]" dest="returns: returns [19213,19220]"/>
  <match src="(: ( [55476,55477]" dest="(: ( [14589,14590]"/>
  <match src="call_argument [102071,102082]" dest="call_argument [30984,30995]"/>
  <match src="type_name [96278,96285]" dest="type_name [27496,27503]"/>
  <match src="type_name [108817,108824]" dest="type_name [37730,37737]"/>
  <match src="identifier: staged [108978,108984]" dest="identifier: staged [37891,37897]"/>
  <match src="identifier: staged [95426,95432]" dest="identifier: staged [26644,26650]"/>
  <match src="call_struct_argument [8369,8407]" dest="call_struct_argument [8933,8971]"/>
  <match src="=: = [111860,111861]" dest="=: = [40773,40774]"/>
  <match src="inheritance_specifier [97632,97637]" dest="inheritance_specifier [76282,76287]"/>
  <match src="comment: // solhint-disable-next-line no-inline-assembly [94493,94540]" dest="comment: // solhint-disable-next-line no-inline-assembly [75351,75398]"/>
  <match src="string: string [39049,39055]" dest="string: string [44240,44246]"/>
  <match src="identifier: Sync [63568,63572]" dest="identifier: Sync [20402,20406]"/>
  <match src="function_body [111115,111615]" dest="function_body [40028,40528]"/>
  <match src="primitive_type [47826,47830]" dest="primitive_type [53017,53021]"/>
  <match src="(: ( [397,398]" dest="(: ( [961,962]"/>
  <match src="struct_member [96682,96721]" dest="struct_member [27900,27939]"/>
  <match src="identifier: D256 [8999,9003]" dest="identifier: D256 [9563,9567]"/>
  <match src=".: . [103947,103948]" dest=".: . [32860,32861]"/>
  <match src="type_cast_expression [46128,46155]" dest="type_cast_expression [51319,51346]"/>
  <match src="function: function [112539,112547]" dest="function: function [41452,41460]"/>
  <match src="parameter [43153,43169]" dest="parameter [48344,48360]"/>
  <match src="identifier: value [7431,7436]" dest="identifier: value [7995,8000]"/>
  <match src="(: ( [9927,9928]" dest="(: ( [10491,10492]"/>
  <match src="bool: bool [41105,41109]" dest="bool: bool [46296,46300]"/>
  <match src="assignment_expression [110020,110087]" dest="assignment_expression [38933,39000]"/>
  <match src="[: [ [111895,111896]" dest="[: [ [40808,40809]"/>
  <match src="&quot;: &quot; [90304,90305]" dest="&quot;: &quot; [81783,81784]"/>
  <match src="identifier: b [8597,8598]" dest="identifier: b [9161,9162]"/>
  <match src="returns: returns [9919,9926]" dest="returns: returns [10483,10490]"/>
  <match src="yul_identifier [99094,99098]" dest="yul_identifier [77744,77748]"/>
  <match src="identifier: approve [113015,113022]" dest="identifier: approve [41928,41935]"/>
  <match src="string_literal [91228,91257]" dest="string_literal [81427,81442]"/>
  <match src="returns: returns [62500,62507]" dest="returns: returns [19334,19341]"/>
  <match src="using: using [99846,99851]" dest="using: using [28759,28764]"/>
  <match src="call_argument [88773,88778]" dest="call_argument [73724,73729]"/>
  <match src="function_definition [62347,62403]" dest="function_definition [19181,19237]"/>
  <match src="identifier: _state [111017,111023]" dest="identifier: _state [39930,39936]"/>
  <match src="(: ( [89772,89773]" dest="(: ( [72742,72743]"/>
  <match src="call_struct_argument [54590,54617]" dest="call_struct_argument [13703,13730]"/>
  <match src="type_name [86910,86914]" dest="type_name [63672,63676]"/>
  <match src="state_mutability [45810,45814]" dest="state_mutability [51001,51005]"/>
  <match src="return: return [105084,105090]" dest="return: return [33997,34003]"/>
  <match src="identifier: amount [113254,113260]" dest="identifier: amount [42167,42173]"/>
  <match src="augmented_assignment_expression [45694,45701]" dest="augmented_assignment_expression [50885,50892]"/>
  <match src="identifier: require [22019,22026]" dest="identifier: require [64935,64942]"/>
  <match src=".: . [34834,34835]" dest=".: . [18620,18621]"/>
  <match src="return_statement [55640,55665]" dest="return_statement [14753,14778]"/>
  <match src="(: ( [96169,96170]" dest="(: ( [27387,27388]"/>
  <match src="parameter [9277,9290]" dest="parameter [9841,9854]"/>
  <match src="identifier: FILE [58990,58994]" dest="identifier: FILE [62982,62986]"/>
  <match src="user_defined_type [8243,8247]" dest="user_defined_type [8807,8811]"/>
  <match src="=: = [112679,112680]" dest="=: = [41592,41593]"/>
  <match src="array_access [101787,101811]" dest="array_access [30700,30724]"/>
  <match src="return_type_definition [100209,100232]" dest="return_type_definition [29122,29145]"/>
  <match src="!=: != [19921,19923]" dest="!=: != [65361,65363]"/>
  <match src="identifier: success [98465,98472]" dest="identifier: success [77115,77122]"/>
  <match src="identifier: isContract [98915,98925]" dest="identifier: isContract [77565,77575]"/>
  <match src="): ) [103598,103599]" dest="): ) [32511,32512]"/>
  <match src="): ) [10121,10122]" dest="): ) [10685,10686]"/>
  <match src="uint256: uint256 [81494,81501]" dest="uint256: uint256 [67987,67994]"/>
  <match src="call_expression [54487,54628]" dest="call_expression [13600,13741]"/>
  <match src="primitive_type [19841,19848]" dest="primitive_type [65273,65280]"/>
  <match src="identifier: D256 [56281,56285]" dest="identifier: D256 [15394,15398]"/>
  <match src="{: { [95979,95980]" dest="{: { [27197,27198]"/>
  <match src="update_expression [7729,7732]" dest="update_expression [8293,8296]"/>
  <match src="&quot;: &quot; [44989,44990]" dest="&quot;: &quot; [50180,50181]"/>
  <match src="identifier: sender [90626,90632]" dest="identifier: sender [72140,72146]"/>
  <match src="event_paramater [88459,88479]" dest="event_paramater [83177,83194]"/>
  <match src="bool: bool [43088,43092]" dest="bool: bool [48279,48283]"/>
  <match src="identifier: to [106671,106673]" dest="identifier: to [35584,35586]"/>
  <match src="}: } [103094,103095]" dest="}: } [32007,32008]"/>
  <match src="type_name [9418,9422]" dest="type_name [9982,9986]"/>
  <match src="parenthesized_expression [40066,40500]" dest="parenthesized_expression [45257,45691]"/>
  <match src="(: ( [59991,59992]" dest="(: ( [24965,24966]"/>
  <match src="type_name [78369,78376]" dest="type_name [66816,66823]"/>
  <match src="type_name [8649,8653]" dest="type_name [9213,9217]"/>
  <match src="string_literal [33664,33700]" dest="string_literal [62853,62884]"/>
  <match src="primitive_type [103715,103722]" dest="primitive_type [32628,32635]"/>
  <match src="view: view [80438,80442]" dest="view: view [82090,82094]"/>
  <match src="identifier: value [8942,8947]" dest="identifier: value [9506,9511]"/>
  <match src="indexed: indexed [88283,88290]" dest="indexed: indexed [83231,83238]"/>
  <match src="identifier: a [2667,2668]" dest="identifier: a [3231,3232]"/>
  <match src="address: address [52679,52686]" dest="address: address [11792,11799]"/>
  <match src="mapping: mapping [95512,95519]" dest="mapping: mapping [26730,26737]"/>
  <match src="number_literal: 2 [9082,9083]" dest="number_literal: 2 [9646,9647]"/>
  <match src="identifier: abi [98528,98531]" dest="identifier: abi [77178,77181]"/>
  <match src="return_type_definition [102166,102183]" dest="return_type_definition [31079,31096]"/>
  <match src="uint: uint [86229,86233]" dest="uint: uint [61708,61712]"/>
  <match src="primitive_type [13989,13996]" dest="primitive_type [23987,23994]"/>
  <match src="identifier: oracle [100906,100912]" dest="identifier: oracle [29819,29825]"/>
  <match src="binary_expression [44218,44223]" dest="binary_expression [49409,49414]"/>
  <match src=",: , [41513,41514]" dest=",: , [46704,46705]"/>
  <match src="(: ( [9347,9348]" dest="(: ( [9911,9912]"/>
  <match src=".: . [88696,88697]" dest=".: . [72789,72790]"/>
  <match src="identifier: D256 [99904,99908]" dest="identifier: D256 [28817,28821]"/>
  <match src="identifier: epoch [109829,109834]" dest="identifier: epoch [38742,38747]"/>
  <match src="): ) [112126,112127]" dest="): ) [41039,41040]"/>
  <match src="public: public [101356,101362]" dest="public: public [30269,30275]"/>
  <match src="uint256: uint256 [100520,100527]" dest="uint256: uint256 [29433,29440]"/>
  <match src="identifier: amount [31119,31125]" dest="identifier: amount [58563,58569]"/>
  <match src="bool: bool [105478,105482]" dest="bool: bool [34391,34395]"/>
  <match src="return: return [46676,46682]" dest="return: return [51867,51873]"/>
  <match src="parameter [62622,62637]" dest="parameter [19456,19471]"/>
  <match src="member_expression [109950,109963]" dest="member_expression [38863,38876]"/>
  <match src="identifier: sender [89290,89296]" dest="identifier: sender [73246,73252]"/>
  <match src="function_definition [113809,113922]" dest="function_definition [42722,42835]"/>
  <match src="}: } [7780,7781]" dest="}: } [8344,8345]"/>
  <match src="(: ( [108362,108363]" dest="(: ( [37275,37276]"/>
  <match src="identifier: a [10210,10211]" dest="identifier: a [10774,10775]"/>
  <match src="visibility [71994,72002]" dest="visibility [25807,25815]"/>
  <match src="}: } [108105,108106]" dest="}: } [37018,37019]"/>
  <match src="array_access [104220,104260]" dest="array_access [33133,33173]"/>
  <match src="uint8: uint8 [45605,45610]" dest="uint8: uint8 [50796,50801]"/>
  <match src="parameter [113321,113335]" dest="parameter [42234,42248]"/>
  <match src="identifier: valueToMint [29936,29947]" dest="identifier: premiumCurve [17710,17722]"/>
  <match src="identifier: reason [107999,108005]" dest="identifier: reason [36912,36918]"/>
  <match src="identifier: debt [96484,96488]" dest="identifier: debt [27702,27706]"/>
  <match src="identifier: balance [108946,108953]" dest="identifier: balance [37859,37866]"/>
  <match src="type_cast_expression [47087,47108]" dest="type_cast_expression [52278,52299]"/>
  <match src="primitive_type [9868,9875]" dest="primitive_type [10432,10439]"/>
  <match src="identifier: amount [29833,29839]" dest="identifier: amount [58505,58511]"/>
  <match src="identifier: getPartial [8574,8584]" dest="identifier: getPartial [9138,9148]"/>
  <match src="function: function [11582,11590]" dest="function: function [21580,21588]"/>
  <match src="state_mutability [101363,101367]" dest="state_mutability [30276,30280]"/>
  <match src="address: address [19769,19776]" dest="address: address [65186,65193]"/>
  <match src=",: , [90692,90693]" dest=",: , [63242,63243]"/>
  <match src=".: . [91654,91655]" dest=".: . [73658,73659]"/>
  <match src="identifier: amount [107235,107241]" dest="identifier: amount [36148,36154]"/>
  <match src=".: . [107380,107381]" dest=".: . [36293,36294]"/>
  <match src="}: } [56744,56745]" dest="}: } [15857,15858]"/>
  <match src="return_type_definition [16100,16117]" dest="return_type_definition [16852,16869]"/>
  <match src="function_definition [110252,110415]" dest="function_definition [39165,39328]"/>
  <match src="primitive_type [43971,43976]" dest="primitive_type [49162,49167]"/>
  <match src="type_name [6356,6360]" dest="type_name [6920,6924]"/>
  <match src="expression_statement [107857,107923]" dest="expression_statement [36770,36836]"/>
  <match src="(: ( [9399,9400]" dest="(: ( [9963,9964]"/>
  <match src=".: . [109157,109158]" dest=".: . [38070,38071]"/>
  <match src="function_body [100316,100342]" dest="function_body [29229,29255]"/>
  <match src="): ) [27688,27689]" dest="): ) [67255,67256]"/>
  <match src="type_name [3248,3255]" dest="type_name [3812,3819]"/>
  <match src="call_argument [41660,41666]" dest="call_argument [46851,46857]"/>
  <match src="identifier: encodePacked [39081,39093]" dest="identifier: encodePacked [44272,44284]"/>
  <match src="primitive_type [8903,8907]" dest="primitive_type [9467,9471]"/>
  <match src="identifier: sub [6880,6883]" dest="identifier: sub [7444,7447]"/>
  <match src="call_argument [8597,8604]" dest="call_argument [9161,9168]"/>
  <match src="primitive_type [13568,13572]" dest="primitive_type [23566,23570]"/>
  <match src="type_name [18352,18359]" dest="type_name [17036,17043]"/>
  <match src="&quot;: &quot; [115142,115143]" dest="&quot;: &quot; [70086,70087]"/>
  <match src=".: . [104831,104832]" dest=".: . [33744,33745]"/>
  <match src="uint256: uint256 [28131,28138]" dest="uint256: uint256 [61442,61449]"/>
  <match src="internal: internal [9014,9022]" dest="internal: internal [9578,9586]"/>
  <match src="function_body [89470,90077]" dest="function_body [72561,73008]"/>
  <match src="identifier: c [1417,1418]" dest="identifier: c [1981,1982]"/>
  <match src="public: public [102366,102372]" dest="public: public [31279,31285]"/>
  <match src="primitive_type [12394,12401]" dest="primitive_type [22392,22399]"/>
  <match src="variable_declaration_statement [3433,3451]" dest="variable_declaration_statement [3997,4015]"/>
  <match src="identifier: _state [105501,105507]" dest="identifier: _state [34414,34420]"/>
  <match src="identifier: externalAmountAfterTax [32693,32715]" dest="identifier: couponEpochDecayedPenalty [62239,62264]"/>
  <match src=",: , [39676,39677]" dest=",: , [44867,44868]"/>
  <match src="memory: memory [35372,35378]" dest="memory: memory [57363,57369]"/>
  <match src="&quot;: &quot; [89023,89024]" dest="&quot;: &quot; [72398,72399]"/>
  <match src="identifier: setup [116533,116538]" dest="identifier: capture [68649,68656]"/>
  <match src="variable_declaration [91585,91613]" dest="variable_declaration [63071,63091]"/>
  <match src="bytes2: bytes2 [38655,38661]" dest="bytes2: bytes2 [43846,43852]"/>
  <match src="function: function [98347,98355]" dest="function: function [76997,77005]"/>
  <match src="(: ( [91290,91291]" dest="(: ( [80770,80771]"/>
  <match src="number_literal: 10 [45629,45631]" dest="number_literal: 10 [50820,50822]"/>
  <match src="function: function [88581,88589]" dest="function: function [83270,83278]"/>
  <match src="expression_statement [111820,111873]" dest="expression_statement [40733,40786]"/>
  <match src="identifier: value [5971,5976]" dest="identifier: value [6535,6540]"/>
  <match src="[: [ [109166,109167]" dest="[: [ [38079,38080]"/>
  <match src="uint256: uint256 [34752,34759]" dest="uint256: uint256 [55483,55490]"/>
  <match src="]: ] [112808,112809]" dest="]: ] [41721,41722]"/>
  <match src="identifier: pool [101004,101008]" dest="identifier: pool [29917,29921]"/>
  <match src="identifier: amount [59874,59880]" dest="identifier: amount [24848,24854]"/>
  <match src="(: ( [47669,47670]" dest="(: ( [52860,52861]"/>
  <match src="function_body [100773,100819]" dest="function_body [29686,29732]"/>
  <match src="identifier: supply [100561,100567]" dest="identifier: supply [29474,29480]"/>
  <match src="?: ? [10228,10229]" dest="?: ? [10792,10793]"/>
  <match src="): ) [104776,104777]" dest="): ) [33689,33690]"/>
  <match src="internal: internal [6325,6333]" dest="internal: internal [6889,6897]"/>
  <match src=".: . [101417,101418]" dest=".: . [30330,30331]"/>
  <match src="user_defined_type [33429,33441]" dest="user_defined_type [67548,67560]"/>
  <match src="call_expression [109625,109659]" dest="call_expression [38538,38572]"/>
  <match src="identifier: IMPLEMENTATION_SLOT [99034,99053]" dest="identifier: IMPLEMENTATION_SLOT [77684,77703]"/>
  <match src="identifier: z [47429,47430]" dest="identifier: z [52620,52621]"/>
  <match src="=: = [7663,7664]" dest="=: = [8227,8228]"/>
  <match src="call_expression [9958,9979]" dest="call_expression [10522,10543]"/>
  <match src="type_name [34227,34239]" dest="type_name [17874,17886]"/>
  <match src="internal: internal [108007,108015]" dest="internal: internal [36920,36928]"/>
  <match src="type_name [13113,13120]" dest="type_name [23111,23118]"/>
  <match src="member_expression [107209,107223]" dest="member_expression [36122,36136]"/>
  <match src="&gt;: &gt; [105536,105537]" dest="&gt;: &gt; [34449,34450]"/>
  <match src="): ) [1970,1971]" dest="): ) [2534,2535]"/>
  <match src="}: } [95939,95940]" dest="}: } [27157,27158]"/>
  <match src="type_cast_expression [41991,42469]" dest="type_cast_expression [47182,47660]"/>
  <match src="(: ( [55595,55596]" dest="(: ( [14708,14709]"/>
  <match src="comment: /**      * Governance      */ [112314,112343]" dest="comment: /**      * Governance      */ [41227,41256]"/>
  <match src="identifier: candidate [112500,112509]" dest="identifier: candidate [41413,41422]"/>
  <match src="): ) [98608,98609]" dest="): ) [77258,77259]"/>
  <match src="variable_declaration [75354,75375]" dest="variable_declaration [68092,68109]"/>
  <match src="state_mutability [100850,100854]" dest="state_mutability [29763,29767]"/>
  <match src="(: ( [9570,9571]" dest="(: ( [10134,10135]"/>
  <match src="call_argument [91860,91870]" dest="call_argument [80456,80466]"/>
  <match src="call_expression [6828,6855]" dest="call_expression [7392,7419]"/>
  <match src="): ) [63287,63288]" dest="): ) [20121,20122]"/>
  <match src=",: , [23181,23182]" dest=",: , [54951,54952]"/>
  <match src="parameter [39391,39407]" dest="parameter [44582,44598]"/>
  <match src="{: { [95659,95660]" dest="{: { [26877,26878]"/>
  <match src="identifier: State [96050,96055]" dest="identifier: State [27268,27273]"/>
  <match src="returns: returns [102378,102385]" dest="returns: returns [31291,31298]"/>
  <match src="return_type_definition [62800,62814]" dest="return_type_definition [19634,19648]"/>
  <match src="primitive_type [78166,78173]" dest="primitive_type [71446,71453]"/>
  <match src="identifier: _state [113740,113746]" dest="identifier: _state [42653,42659]"/>
  <match src="call_argument [85206,85241]" dest="call_argument [60590,60621]"/>
  <match src="function_body [110889,111051]" dest="function_body [39802,39964]"/>
  <match src="member_expression [108337,108362]" dest="member_expression [37250,37275]"/>
  <match src="function_definition [110719,110848]" dest="function_definition [39632,39761]"/>
  <match src="expression_statement [98578,98611]" dest="expression_statement [77228,77261]"/>
  <match src="(: ( [30849,30850]" dest="(: ( [67297,67298]"/>
  <match src="type_name [9682,9689]" dest="type_name [10246,10253]"/>
  <match src="primitive_type [88404,88411]" dest="primitive_type [71293,71300]"/>
  <match src="struct_member [96498,96514]" dest="struct_member [27716,27732]"/>
  <match src="external: external [90114,90122]" dest="external: external [73045,73053]"/>
  <match src="member_expression [109434,109466]" dest="member_expression [38347,38379]"/>
  <match src="call_argument [107680,107686]" dest="call_argument [36593,36599]"/>
  <match src="if_statement [7585,7636]" dest="if_statement [8149,8200]"/>
  <match src="(: ( [102040,102041]" dest="(: ( [30953,30954]"/>
  <match src=".: . [102907,102908]" dest=".: . [31820,31821]"/>
  <match src="(: ( [19752,19753]" dest="(: ( [65169,65170]"/>
  <match src="return: return [100783,100789]" dest="return: return [29696,29702]"/>
  <match src="view: view [63876,63880]" dest="view: view [20710,20714]"/>
  <match src="call_expression [91054,91067]" dest="call_expression [58005,58018]"/>
  <match src="identifier: vote [112610,112614]" dest="identifier: vote [41523,41527]"/>
  <match src="function_definition [98347,98660]" dest="function_definition [76997,77310]"/>
  <match src="parameter [54699,54706]" dest="parameter [13812,13819]"/>
  <match src="type_name [95418,95425]" dest="type_name [26636,26643]"/>
  <match src=".: . [112856,112857]" dest=".: . [41769,41770]"/>
  <match src="function_definition [113094,113268]" dest="function_definition [42007,42181]"/>
  <match src="comment: /*     Copyright 2020 Reflective Dollar Devs, based on the works of the Dynamic Dollar Devs and the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [78681,79356]" dest="comment: /*     Copyright 2020 Reflective Dollar Devs, based on the works of the Dynamic Dollar Devs and the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [58845,59520]"/>
  <match src="): ) [111205,111206]" dest="): ) [40118,40119]"/>
  <match src=".: . [107670,107671]" dest=".: . [36583,36584]"/>
  <match src="comment: /**      * ERC20 Interface      */ [100035,100069]" dest="comment: /**      * ERC20 Interface      */ [28948,28982]"/>
  <match src="): ) [100231,100232]" dest="): ) [29144,29145]"/>
  <match src="primitive_type [42594,42601]" dest="primitive_type [47785,47792]"/>
  <match src="): ) [42084,42085]" dest="): ) [47275,47276]"/>
  <match src="type_name [41785,41792]" dest="type_name [46976,46983]"/>
  <match src="variable_declaration_statement [91585,91674]" dest="variable_declaration_statement [73616,73678]"/>
  <match src="call_argument [102047,102065]" dest="call_argument [30960,30978]"/>
  <match src="[: [ [108867,108868]" dest="[: [ [37780,37781]"/>
  <match src="function: function [112698,112706]" dest="function: function [41611,41619]"/>
  <match src="call_expression [113214,113261]" dest="call_expression [42127,42174]"/>
  <match src="pure: pure [54322,54326]" dest="pure: pure [13435,13439]"/>
  <match src="user_defined_type [8526,8530]" dest="user_defined_type [9090,9094]"/>
  <match src="type_name [62539,62546]" dest="type_name [19373,19380]"/>
  <match src="): ) [113724,113725]" dest="): ) [42637,42638]"/>
  <match src="pure: pure [45810,45814]" dest="pure: pure [51001,51005]"/>
  <match src="=: = [46004,46005]" dest="=: = [51195,51196]"/>
  <match src="visibility [815,823]" dest="visibility [1379,1387]"/>
  <match src="state_mutability [101747,101751]" dest="state_mutability [30660,30664]"/>
  <match src="array_access [46071,46080]" dest="array_access [51262,51271]"/>
  <match src="returns: returns [106798,106805]" dest="returns: returns [35711,35718]"/>
  <match src="identifier: amount [107830,107836]" dest="identifier: amount [36743,36749]"/>
  <match src="identifier: POOL_EXIT_LOCKUP_EPOCHS [53680,53703]" dest="identifier: POOL_EXIT_LOCKUP_EPOCHS [12793,12816]"/>
  <match src="event_paramater [13780,13798]" dest="event_paramater [23778,23796]"/>
  <match src="&quot;: &quot; [34519,34520]" dest="&quot;: &quot; [63000,63001]"/>
  <match src="{: { [95336,95337]" dest="{: { [26554,26555]"/>
  <match src="): ) [109484,109485]" dest="): ) [38397,38398]"/>
  <match src="call_argument [22452,22458]" dest="call_argument [65474,65480]"/>
  <match src="identifier: mul [6845,6848]" dest="identifier: mul [7409,7412]"/>
  <match src="identifier: totalStaged [101134,101145]" dest="identifier: totalStaged [30047,30058]"/>
  <match src="(: ( [42656,42657]" dest="(: ( [47847,47848]"/>
  <match src="): ) [102082,102083]" dest="): ) [30995,30996]"/>
  <match src="pure: pure [6338,6342]" dest="pure: pure [6902,6906]"/>
  <match src="identifier: b [7063,7064]" dest="identifier: b [7627,7628]"/>
  <match src="type_name [97863,97870]" dest="type_name [76513,76520]"/>
  <match src="type_name [109076,109082]" dest="type_name [37989,37995]"/>
  <match src="expression_statement [45590,45635]" dest="expression_statement [50781,50826]"/>
  <match src="parameter [108481,108495]" dest="parameter [37394,37408]"/>
  <match src="{: { [98869,98870]" dest="{: { [77519,77520]"/>
  <match src="): ) [75448,75449]" dest="): ) [68137,68138]"/>
  <match src="return: return [8757,8763]" dest="return: return [9321,9327]"/>
  <match src="type_name [104799,104806]" dest="type_name [33712,33719]"/>
  <match src="state_variable_declaration [38611,38642]" dest="state_variable_declaration [43802,43833]"/>
  <match src="): ) [30529,30530]" dest="): ) [65779,65780]"/>
  <match src="identifier: outstanding [109567,109578]" dest="identifier: outstanding [38480,38491]"/>
  <match src="identifier: epoch [109732,109737]" dest="identifier: epoch [38645,38650]"/>
  <match src="identifier: amount [23025,23031]" dest="identifier: amount [54995,55001]"/>
  <match src="returns: returns [6347,6354]" dest="returns: returns [6911,6918]"/>
  <match src="visibility [8077,8085]" dest="visibility [8641,8649]"/>
  <match src="function_definition [112539,112692]" dest="function_definition [41452,41605]"/>
  <match src=".: . [103642,103643]" dest=".: . [32555,32556]"/>
  <match src="(: ( [56049,56050]" dest="(: ( [15162,15163]"/>
  <match src="%: % [45627,45628]" dest="%: % [50818,50819]"/>
  <match src="): ) [55477,55478]" dest="): ) [14590,14591]"/>
  <match src="expression_statement [88736,88780]" dest="expression_statement [73687,73731]"/>
  <match src="primitive_type [86661,86668]" dest="primitive_type [54511,54518]"/>
  <match src="return_statement [103610,103675]" dest="return_statement [32523,32588]"/>
  <match src=".: . [107675,107676]" dest=".: . [36588,36589]"/>
  <match src="unary_expression [41946,41951]" dest="unary_expression [47137,47142]"/>
  <match src="identifier: payloadC [43710,43718]" dest="identifier: payloadC [48901,48909]"/>
  <match src="identifier: outstandingCoupons [103696,103714]" dest="identifier: outstandingCoupons [32609,32627]"/>
  <match src="{: { [52360,52361]" dest="{: { [11473,11474]"/>
  <match src="type_name [63180,63185]" dest="type_name [20014,20019]"/>
  <match src=",: , [42879,42880]" dest=",: , [48070,48071]"/>
  <match src="}: } [112691,112692]" dest="}: } [41604,41605]"/>
  <match src="primitive_type [41991,41997]" dest="primitive_type [47182,47188]"/>
  <match src="primitive_type [62451,62456]" dest="primitive_type [19285,19290]"/>
  <match src="call_expression [110922,110949]" dest="call_expression [39835,39862]"/>
  <match src="uint256: uint256 [106675,106682]" dest="uint256: uint256 [35588,35595]"/>
  <match src="parameter [63775,63782]" dest="parameter [20609,20616]"/>
  <match src="user_defined_type [56075,56087]" dest="user_defined_type [15188,15200]"/>
  <match src="external: external [91967,91975]" dest="external: external [64132,64140]"/>
  <match src="(: ( [98634,98635]" dest="(: ( [77284,77285]"/>
  <match src=",: , [115290,115291]" dest=",: , [70234,70235]"/>
  <match src="function: function [62408,62416]" dest="function: function [19242,19250]"/>
  <match src="state_mutability [3296,3300]" dest="state_mutability [3860,3864]"/>
  <match src="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      * - Subtraction cannot overflow.      */ [522,775]" dest="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      * - Subtraction cannot overflow.      */ [1086,1339]"/>
  <match src="(: ( [55968,55969]" dest="(: ( [15081,15082]"/>
  <match src=".: . [102441,102442]" dest=".: . [31354,31355]"/>
  <match src="array_access [108538,108562]" dest="array_access [37451,37475]"/>
  <match src="visibility [114648,114655]" dest="visibility [69592,69599]"/>
  <match src="string_literal [2062,2097]" dest="string_literal [2626,2661]"/>
  <match src="external: external [92078,92086]" dest="external: external [65236,65244]"/>
  <match src="member_expression [107505,107524]" dest="member_expression [36418,36437]"/>
  <match src="call_expression [103171,103217]" dest="call_expression [32084,32130]"/>
  <match src="address: address [61566,61573]" dest="address: address [78785,78792]"/>
  <match src="identifier: amount [30590,30596]" dest="identifier: amount [58641,58647]"/>
  <match src=",: , [42352,42353]" dest=",: , [47543,47544]"/>
  <match src=",: , [10050,10051]" dest=",: , [10614,10615]"/>
  <match src=".: . [89220,89221]" dest=".: . [72316,72317]"/>
  <match src="?: ? [89666,89667]" dest="?: ? [72639,72640]"/>
  <match src="type_name [39926,39933]" dest="type_name [45117,45124]"/>
  <match src="identifier: State [99834,99839]" dest="identifier: State [28747,28752]"/>
  <match src="): ) [89786,89787]" dest="): ) [72756,72757]"/>
  <match src="struct_member [5802,5816]" dest="struct_member [6366,6380]"/>
  <match src="identifier: input [47793,47798]" dest="identifier: input [52984,52989]"/>
  <match src="parameter [103145,103152]" dest="parameter [32058,32065]"/>
  <match src="]: ] [108561,108562]" dest="]: ] [37474,37475]"/>
  <match src="(: ( [352,353]" dest="(: ( [916,917]"/>
  <match src="}: } [7808,7809]" dest="}: } [8372,8373]"/>
  <match src="(: ( [100366,100367]" dest="(: ( [29279,29280]"/>
  <match src="(: ( [41973,41974]" dest="(: ( [47164,47165]"/>
  <match src="primitive_type [107301,107307]" dest="primitive_type [36214,36220]"/>
  <match src="address: address [62148,62155]" dest="address: address [18982,18989]"/>
  <match src="primitive_type [103893,103900]" dest="primitive_type [32806,32813]"/>
  <match src="identifier: updateAllowanceCoupons [110261,110283]" dest="identifier: updateAllowanceCoupons [39174,39196]"/>
  <match src="type_name [3310,3317]" dest="type_name [3874,3881]"/>
  <match src="call_argument [55240,55266]" dest="call_argument [14353,14379]"/>
  <match src="pure: pure [40651,40655]" dest="pure: pure [45842,45846]"/>
  <match src="return_type_definition [100103,100126]" dest="return_type_definition [29016,29039]"/>
  <match src="(: ( [43078,43079]" dest="(: ( [48269,48270]"/>
  <match src="address: address [109043,109050]" dest="address: address [37956,37963]"/>
  <match src="identifier: _state [108659,108665]" dest="identifier: _state [37572,37578]"/>
  <match src="identifier: getPartial [6404,6414]" dest="identifier: getPartial [6968,6978]"/>
  <match src="identifier: account [115024,115031]" dest="identifier: account [69968,69975]"/>
  <match src="parameter [6045,6056]" dest="parameter [6609,6620]"/>
  <match src="primitive_type [12379,12386]" dest="primitive_type [22377,22384]"/>
  <match src="parenthesized_expression [41286,41720]" dest="parenthesized_expression [46477,46911]"/>
  <match src="expression_statement [47403,47448]" dest="expression_statement [52594,52639]"/>
  <match src="event_paramater [63434,63448]" dest="event_paramater [20268,20282]"/>
  <match src="expression_statement [23757,23822]" dest="expression_statement [80049,80120]"/>
  <match src="memory: memory [8222,8228]" dest="memory: memory [8786,8792]"/>
  <match src="identifier: LPAREN [41507,41513]" dest="identifier: LPAREN [46698,46704]"/>
  <match src="expression_statement [92598,92784]" dest="expression_statement [79515,79646]"/>
  <match src="{: { [30393,30394]" dest="{: { [65673,65674]"/>
  <match src=",: , [109888,109889]" dest=",: , [38801,38802]"/>
  <match src="else: else [111273,111277]" dest="else: else [40186,40190]"/>
  <match src="visibility [55598,55606]" dest="visibility [14711,14719]"/>
  <match src="identifier: encodePacked [41336,41348]" dest="identifier: encodePacked [46527,46539]"/>
  <match src="primitive_type [87877,87884]" dest="primitive_type [71101,71108]"/>
  <match src="user_defined_type [100764,100771]" dest="user_defined_type [29677,29684]"/>
  <match src="address: address [88705,88712]" dest="address: address [83386,83393]"/>
  <match src="identifier: incrementBalanceOfStaged [108775,108799]" dest="identifier: incrementBalanceOfStaged [37688,37712]"/>
  <match src="primitive_type [101377,101384]" dest="primitive_type [30290,30297]"/>
  <match src="): ) [103412,103413]" dest="): ) [32325,32326]"/>
  <match src="identifier: expiration [111896,111906]" dest="identifier: expiration [40809,40819]"/>
  <match src="(: ( [91040,91041]" dest="(: ( [57991,57992]"/>
  <match src="identifier: decrementBalanceOfBonded [90657,90681]" dest="identifier: incrementBalanceOfCoupons [63206,63231]"/>
  <match src="): ) [80456,80457]" dest="): ) [82108,82109]"/>
  <match src=",: , [59923,59924]" dest=",: , [24897,24898]"/>
  <match src="assignment_expression [111221,111263]" dest="assignment_expression [40134,40176]"/>
  <match src="function_body [104465,104532]" dest="function_body [33378,33445]"/>
  <match src="indexed: indexed [24255,24262]" dest="indexed: indexed [59930,59937]"/>
  <match src="number_literal: 1e6 [52879,52882]" dest="number_literal: 1e6 [11992,11995]"/>
  <match src="block_statement [42664,43053]" dest="block_statement [47855,48244]"/>
  <match src="[: [ [112798,112799]" dest="[: [ [41711,41712]"/>
  <match src="): ) [56372,56373]" dest="): ) [15485,15486]"/>
  <match src="view: view [62648,62652]" dest="view: view [19482,19486]"/>
  <match src="member_expression [109625,109651]" dest="member_expression [38538,38564]"/>
  <match src="type_name [104147,104154]" dest="type_name [33060,33067]"/>
  <match src=".: . [54977,54978]" dest=".: . [14090,14091]"/>
  <match src="function_body [94071,94621]" dest="function_body [74929,75479]"/>
  <match src="identifier: start [105530,105535]" dest="identifier: start [34443,34448]"/>
  <match src="primitive_type [40565,40572]" dest="primitive_type [45756,45763]"/>
  <match src="return_type_definition [100953,100970]" dest="return_type_definition [29866,29883]"/>
  <match src="identifier: account [108554,108561]" dest="identifier: account [37467,37474]"/>
  <match src="expression_statement [45336,45346]" dest="expression_statement [50527,50537]"/>
  <match src=".: . [108283,108284]" dest=".: . [37196,37197]"/>
  <match src="type_name [9530,9534]" dest="type_name [10094,10098]"/>
  <match src="): ) [113847,113848]" dest="): ) [42760,42761]"/>
  <match src="uint256: uint256 [46824,46831]" dest="uint256: uint256 [52015,52022]"/>
  <match src="library_declaration [5601,10244]" dest="library_declaration [6165,10808]"/>
  <match src="identifier: _state [103777,103783]" dest="identifier: _state [32690,32696]"/>
  <match src="visibility [53279,53286]" dest="visibility [12392,12399]"/>
  <match src="call_expression [92193,92225]" dest="call_expression [57753,57786]"/>
  <match src="bytes: bytes [46010,46015]" dest="bytes: bytes [51201,51206]"/>
  <match src="byte: byte [47733,47737]" dest="byte: byte [52924,52928]"/>
  <match src="): ) [95538,95539]" dest="): ) [26756,26757]"/>
  <match src="(: ( [100519,100520]" dest="(: ( [29432,29433]"/>
  <match src="]: ] [104852,104853]" dest="]: ] [33765,33766]"/>
  <match src="identifier: b [2670,2671]" dest="identifier: b [3234,3235]"/>
  <match src="identifier: payloadA [41549,41557]" dest="identifier: payloadA [46740,46748]"/>
  <match src="member_expression [109434,109477]" dest="member_expression [38347,38390]"/>
  <match src="array_access [113214,113242]" dest="array_access [42127,42155]"/>
  <match src="primitive_type [104931,104938]" dest="primitive_type [33844,33851]"/>
  <match src="uint256: uint256 [39391,39398]" dest="uint256: uint256 [44582,44589]"/>
  <match src="parameter [6513,6529]" dest="parameter [7077,7093]"/>
  <match src="type_name [112746,112753]" dest="type_name [41659,41666]"/>
  <match src=".: . [108680,108681]" dest=".: . [37593,37594]"/>
  <match src="uint256: uint256 [103278,103285]" dest="uint256: uint256 [32191,32198]"/>
  <match src="parameter [102875,102882]" dest="parameter [31788,31795]"/>
  <match src="primitive_type [107577,107584]" dest="primitive_type [36490,36497]"/>
  <match src="visibility [53973,53980]" dest="visibility [13086,13093]"/>
  <match src="call_argument [61379,61422]" dest="call_argument [79285,79314]"/>
  <match src=",: , [92483,92484]" dest=",: , [79098,79099]"/>
  <match src="primitive_type [112945,112951]" dest="primitive_type [41858,41864]"/>
  <match src="user_defined_type [95918,95925]" dest="user_defined_type [27136,27143]"/>
  <match src="member_expression [8156,8170]" dest="member_expression [8720,8734]"/>
  <match src="call_argument [103647,103673]" dest="call_argument [32560,32586]"/>
  <match src="member_expression [56273,56285]" dest="member_expression [15386,15398]"/>
  <match src="(: ( [6652,6653]" dest="(: ( [7216,7217]"/>
  <match src="function_definition [56025,56157]" dest="function_definition [15138,15270]"/>
  <match src="identifier: value [88773,88778]" dest="identifier: value [73724,73729]"/>
  <match src="call_expression [43700,43719]" dest="call_expression [48891,48910]"/>
  <match src="type_name [41766,41770]" dest="type_name [46957,46961]"/>
  <match src="primitive_type [62738,62742]" dest="primitive_type [19572,19576]"/>
  <match src="type_name [96181,96185]" dest="type_name [27399,27403]"/>
  <match src="type_name [45050,45057]" dest="type_name [50241,50248]"/>
  <match src=".: . [34870,34871]" dest=".: . [67840,67841]"/>
  <match src="): ) [94040,94041]" dest="): ) [74898,74899]"/>
  <match src="identifier: char [47424,47428]" dest="identifier: char [52615,52619]"/>
  <match src="identifier: sub [8167,8170]" dest="identifier: sub [8731,8734]"/>
  <match src="function: function [104573,104581]" dest="function: function [33486,33494]"/>
  <match src="identifier: numerator [9969,9978]" dest="identifier: numerator [10533,10542]"/>
  <match src="identifier: rejectFor [105383,105392]" dest="identifier: rejectFor [34296,34305]"/>
  <match src="return_type_definition [11770,11787]" dest="return_type_definition [21768,21785]"/>
  <match src="): ) [7769,7770]" dest="): ) [8333,8334]"/>
  <match src="pure: pure [7900,7904]" dest="pure: pure [8464,8468]"/>
  <match src="state_mutability [103465,103469]" dest="state_mutability [32378,32382]"/>
  <match src="type_name [95894,95901]" dest="type_name [27112,27119]"/>
  <match src="}: } [107542,107543]" dest="}: } [36455,36456]"/>
  <match src="call_argument [108685,108691]" dest="call_argument [37598,37604]"/>
  <match src="yul_function_call [94568,94588]" dest="yul_function_call [75426,75446]"/>
  <match src="if: if [81202,81204]" dest="if: if [61903,61905]"/>
  <match src="identifier: value [88840,88845]" dest="identifier: value [72995,73000]"/>
  <match src="(: ( [111405,111406]" dest="(: ( [40318,40319]"/>
  <match src="state_mutability [46766,46770]" dest="state_mutability [51957,51961]"/>
  <match src="identifier: self [7133,7137]" dest="identifier: self [7697,7701]"/>
  <match src="primitive_type [110488,110495]" dest="primitive_type [39401,39408]"/>
  <match src="primitive_type [103591,103598]" dest="primitive_type [32504,32511]"/>
  <match src="call_argument [6819,6857]" dest="call_argument [7383,7421]"/>
  <match src="identifier: epoch [110821,110826]" dest="identifier: epoch [39734,39739]"/>
  <match src="): ) [29980,29981]" dest="): ) [18473,18474]"/>
  <match src="event_paramater [63357,63375]" dest="event_paramater [20191,20209]"/>
  <match src="call_argument [108742,108743]" dest="call_argument [37655,37656]"/>
  <match src="identifier: isZero [9523,9529]" dest="identifier: isZero [10087,10093]"/>
  <match src="identifier: price0Cumulative [75310,75326]" dest="identifier: newRedeemable [68059,68072]"/>
  <match src="yul_path [44665,44671]" dest="yul_path [49856,49862]"/>
  <match src="identifier: onlyFrozenOrFluid [114732,114749]" dest="identifier: onlyFrozenOrFluid [69676,69693]"/>
  <match src="address: address [64221,64228]" dest="address: address [21055,21062]"/>
  <match src="identifier: staged [108877,108883]" dest="identifier: staged [37790,37796]"/>
  <match src="identifier: coupons [103940,103947]" dest="identifier: coupons [32853,32860]"/>
  <match src="): ) [55360,55361]" dest="): ) [14473,14474]"/>
  <match src="{: { [115222,115223]" dest="{: { [70166,70167]"/>
  <match src="expression_statement [109600,109660]" dest="expression_statement [38513,38573]"/>
  <match src="identifier: value [5810,5815]" dest="identifier: value [6374,6379]"/>
  <match src="[: [ [100446,100447]" dest="[: [ [29359,29360]"/>
  <match src="struct_member [96476,96489]" dest="struct_member [27694,27707]"/>
  <match src=".: . [89880,89881]" dest=".: . [73837,73838]"/>
  <match src="): ) [62484,62485]" dest="): ) [19318,19319]"/>
  <match src="visibility [105594,105600]" dest="visibility [34507,34513]"/>
  <match src="(: ( [107284,107285]" dest="(: ( [36197,36198]"/>
  <match src="state_mutability [63706,63710]" dest="state_mutability [20540,20544]"/>
  <match src="primitive_type [105025,105032]" dest="primitive_type [33938,33945]"/>
  <match src="return_type_definition [46775,46797]" dest="return_type_definition [51966,51988]"/>
  <match src="identifier: Decimal [99884,99891]" dest="identifier: Decimal [28797,28804]"/>
  <match src="): ) [74041,74042]" dest="): ) [68790,68791]"/>
  <match src="]: ] [109926,109927]" dest="]: ] [38839,38840]"/>
  <match src="user_defined_type [32623,32635]" dest="user_defined_type [17216,17228]"/>
  <match src="return_type_definition [43962,43984]" dest="return_type_definition [49153,49175]"/>
  <match src="function_definition [11720,11788]" dest="function_definition [21718,21786]"/>
  <match src="number_literal: 0 [9215,9216]" dest="number_literal: 0 [9779,9780]"/>
  <match src="}: } [102324,102325]" dest="}: } [31237,31238]"/>
  <match src=",: , [7317,7318]" dest=",: , [7881,7882]"/>
  <match src="parameter [104931,104938]" dest="parameter [33844,33851]"/>
  <match src="primitive_type [43153,43160]" dest="primitive_type [48344,48351]"/>
  <match src="member_expression [108963,108977]" dest="member_expression [37876,37890]"/>
  <match src="identifier: sender [89008,89014]" dest="identifier: sender [72383,72389]"/>
  <match src="identifier: BASE [6659,6663]" dest="identifier: BASE [7223,7227]"/>
  <match src="identifier: reason [109090,109096]" dest="identifier: reason [38003,38009]"/>
  <match src="block_statement [45389,45712]" dest="block_statement [50580,50903]"/>
  <match src="[: [ [105655,105656]" dest="[: [ [34568,34569]"/>
  <match src="(: ( [41392,41393]" dest="(: ( [46583,46584]"/>
  <match src="identifier: newOwner [25618,25626]" dest="identifier: to [60148,60150]"/>
  <match src="uint256: uint256 [108817,108824]" dest="uint256: uint256 [37730,37737]"/>
  <match src=",: , [108815,108816]" dest=",: , [37728,37729]"/>
  <match src="function: function [101329,101337]" dest="function: function [30242,30250]"/>
  <match src="parameter [110118,110133]" dest="parameter [39031,39046]"/>
  <match src="primitive_type [62779,62783]" dest="primitive_type [19613,19617]"/>
  <match src="identifier: debt [107767,107771]" dest="identifier: debt [36680,36684]"/>
  <match src=".: . [108969,108970]" dest=".: . [37882,37883]"/>
  <match src="variable_declaration [45050,45059]" dest="variable_declaration [50241,50250]"/>
  <match src="parameter [103278,103285]" dest="parameter [32191,32198]"/>
  <match src="state_mutability [80438,80442]" dest="state_mutability [82090,82094]"/>
  <match src="number_literal: 0 [45113,45114]" dest="number_literal: 0 [50304,50305]"/>
  <match src=".: . [101003,101004]" dest=".: . [29916,29917]"/>
  <match src="identifier: D256 [8675,8679]" dest="identifier: D256 [9239,9243]"/>
  <match src="): ) [41687,41688]" dest="): ) [46878,46879]"/>
  <match src="member_expression [89230,89240]" dest="member_expression [72326,72336]"/>
  <match src=".: . [108079,108080]" dest=".: . [36992,36993]"/>
  <match src="uint256: uint256 [86141,86148]" dest="uint256: uint256 [55684,55691]"/>
  <match src="call_argument [45605,45633]" dest="call_argument [50796,50824]"/>
  <match src="): ) [1331,1332]" dest="): ) [1895,1896]"/>
  <match src="identifier: _state [112820,112826]" dest="identifier: _state [41733,41739]"/>
  <match src="}: } [109283,109284]" dest="}: } [38196,38197]"/>
  <match src="call_expression [75387,75449]" dest="call_expression [68113,68138]"/>
  <match src="identifier: _state [107342,107348]" dest="identifier: _state [36255,36261]"/>
  <match src="=: = [45060,45061]" dest="=: = [50251,50252]"/>
  <match src="identifier: approve [13105,13112]" dest="identifier: approve [23103,23110]"/>
  <match src="call_struct_argument [56599,56627]" dest="call_struct_argument [15712,15740]"/>
  <match src=".: . [88764,88765]" dest=".: . [73715,73716]"/>
  <match src="member_expression [107366,107391]" dest="member_expression [36279,36304]"/>
  <match src=".: . [112285,112286]" dest=".: . [41198,41199]"/>
  <match src="identifier: outstandingCouponsForEpoch [112095,112121]" dest="identifier: outstandingCouponsForEpoch [41008,41034]"/>
  <match src="identifier: must [43269,43273]" dest="identifier: must [48460,48464]"/>
  <match src="type_name [88183,88190]" dest="type_name [71202,71209]"/>
  <match src="}: } [106950,106951]" dest="}: } [35863,35864]"/>
  <match src="identifier: candidate [113130,113139]" dest="identifier: candidate [42043,42052]"/>
  <match src="parameter [94025,94040]" dest="parameter [74883,74898]"/>
  <match src=".: . [90398,90399]" dest=".: . [62744,62745]"/>
  <match src="member_expression [90048,90059]" dest="member_expression [73922,73933]"/>
  <match src=",: , [19786,19787]" dest=",: , [65203,65204]"/>
  <match src="+: + [44522,44523]" dest="+: + [49713,49714]"/>
  <match src="type_name [62250,62257]" dest="type_name [19084,19091]"/>
  <match src="address: address [113503,113510]" dest="address: address [42416,42423]"/>
  <match src="private: private [46754,46761]" dest="private: private [51945,51952]"/>
  <match src="returns: returns [16100,16107]" dest="returns: returns [16852,16859]"/>
  <match src="type_name [53011,53018]" dest="type_name [12124,12131]"/>
  <match src="uint256: uint256 [31111,31118]" dest="uint256: uint256 [58555,58562]"/>
  <match src="user_defined_type [7837,7841]" dest="user_defined_type [8401,8405]"/>
  <match src="variable_declaration_statement [47223,47237]" dest="variable_declaration_statement [52414,52428]"/>
  <match src="identifier: balanceOfBonded [90172,90187]" dest="identifier: totalSupplyBeforeBurn [62593,62614]"/>
  <match src="): ) [98447,98448]" dest="): ) [77097,77098]"/>
  <match src="uint256: uint256 [101169,101176]" dest="uint256: uint256 [30082,30089]"/>
  <match src="string [34519,34555]" dest="string [63000,63017]"/>
  <match src="identifier: epoch [109509,109514]" dest="identifier: epoch [38422,38427]"/>
  <match src="identifier: approve [106857,106864]" dest="identifier: approve [35770,35777]"/>
  <match src="return_type_definition [27970,27987]" dest="return_type_definition [62557,62574]"/>
  <match src="primitive_type [52461,52468]" dest="primitive_type [11574,11581]"/>
  <match src="memory: memory [9282,9288]" dest="memory: memory [9846,9852]"/>
  <match src="state_mutability [64116,64120]" dest="state_mutability [20950,20954]"/>
  <match src="visibility [58307,58315]" dest="visibility [62548,62556]"/>
  <match src="type_name [62327,62333]" dest="type_name [19161,19167]"/>
  <match src="{: { [56704,56705]" dest="{: { [15817,15818]"/>
  <match src="call_expression [102029,102083]" dest="call_expression [30942,30996]"/>
  <match src="function_body [105340,105411]" dest="function_body [34253,34324]"/>
  <match src="yul_identifier [94580,94587]" dest="yul_identifier [75438,75445]"/>
  <match src="function_definition [102934,103095]" dest="function_definition [31847,32008]"/>
  <match src="primitive_type [111781,111788]" dest="primitive_type [40694,40701]"/>
  <match src="string_literal [30493,30529]" dest="string_literal [65741,65779]"/>
  <match src="struct_member [96066,96080]" dest="struct_member [27284,27298]"/>
  <match src=".: . [108641,108642]" dest=".: . [37554,37555]"/>
  <match src="state_mutability [100204,100208]" dest="state_mutability [29117,29121]"/>
  <match src=",: , [41481,41482]" dest=",: , [46672,46673]"/>
  <match src="): ) [43566,43567]" dest="): ) [48757,48758]"/>
  <match src="array_access [102746,102794]" dest="array_access [31659,31707]"/>
  <match src="uint256: uint256 [4724,4731]" dest="uint256: uint256 [5288,5295]"/>
  <match src="call_expression [89668,89714]" dest="call_expression [72653,72699]"/>
  <match src="user_defined_type [8053,8057]" dest="user_defined_type [8617,8621]"/>
  <match src="function_body [9043,9090]" dest="function_body [9607,9654]"/>
  <match src="): ) [101635,101636]" dest="): ) [30548,30549]"/>
  <match src="visibility [64168,64176]" dest="visibility [21002,21010]"/>
  <match src="identifier: getGovernanceEmergencyDelay [55449,55476]" dest="identifier: getGovernanceEmergencyDelay [14562,14589]"/>
  <match src="struct: struct [95395,95401]" dest="struct: struct [26613,26619]"/>
  <match src="visibility [9659,9667]" dest="visibility [10223,10231]"/>
  <match src="comment: // TODO Check this again before the Serenity release, because all addresses will be [94374,94457]" dest="comment: // TODO Check this again before the Serenity release, because all addresses will be [75232,75315]"/>
  <match src="): ) [112246,112247]" dest="): ) [41159,41160]"/>
  <match src="visibility [54909,54917]" dest="visibility [14022,14030]"/>
  <match src="=: = [109948,109949]" dest="=: = [38861,38862]"/>
  <match src="function_body [4733,4801]" dest="function_body [5297,5365]"/>
  <match src="&quot;: &quot; [17882,17883]" dest="&quot;: &quot; [73415,73416]"/>
  <match src="(: ( [105392,105393]" dest="(: ( [34305,34306]"/>
  <match src="interface_declaration [11488,14054]" dest="interface_declaration [21486,24052]"/>
  <match src="block_statement [47805,47868]" dest="block_statement [52996,53059]"/>
  <match src="identifier: account [109133,109140]" dest="identifier: account [38046,38053]"/>
  <match src="(: ( [92240,92241]" dest="(: ( [57819,57820]"/>
  <match src="identifier: from [6122,6126]" dest="identifier: from [6686,6690]"/>
  <match src="primitive_type [47733,47737]" dest="primitive_type [52924,52928]"/>
  <match src=",: , [42397,42398]" dest=",: , [47588,47589]"/>
  <match src="if_statement [10137,10194]" dest="if_statement [10701,10758]"/>
  <match src="identifier: GOVERNANCE_EMERGENCY_DELAY [55528,55554]" dest="identifier: GOVERNANCE_EMERGENCY_DELAY [14641,14667]"/>
  <match src="comment: // Can participate in balance-dependant activities [114933,114983]" dest="comment: // Can participate in balance-dependant activities [69877,69927]"/>
  <match src="identifier: D256 [34915,34919]" dest="identifier: D256 [68285,68289]"/>
  <match src="type_name [398,405]" dest="type_name [962,969]"/>
  <match src="call_argument [73628,73647]" dest="call_argument [81932,81946]"/>
  <match src="member_expression [107752,107766]" dest="member_expression [36665,36679]"/>
  <match src="call_expression [89070,89084]" dest="call_expression [55434,55448]"/>
  <match src="identifier: _state [110922,110928]" dest="identifier: _state [39835,39841]"/>
  <match src="uint256: uint256 [91444,91451]" dest="uint256: uint256 [68092,68099]"/>
  <match src="primitive_type [78191,78198]" dest="primitive_type [71348,71355]"/>
  <match src="identifier: payloadA [39958,39966]" dest="identifier: payloadA [45149,45157]"/>
  <match src="returns: returns [55612,55619]" dest="returns: returns [14725,14732]"/>
  <match src="call_expression [115069,115086]" dest="call_expression [70013,70030]"/>
  <match src="parameter [110471,110486]" dest="parameter [39384,39399]"/>
  <match src="comment: /**      * Epoch      */ [102807,102831]" dest="comment: /**      * Epoch      */ [31720,31744]"/>
  <match src="type_name [39904,39911]" dest="type_name [45095,45102]"/>
  <match src=",: , [40209,40210]" dest=",: , [45400,45401]"/>
  <match src="struct_member [96376,96391]" dest="struct_member [27594,27609]"/>
  <match src="identifier: period [96097,96103]" dest="identifier: period [27315,27321]"/>
  <match src="identifier: epoch [90895,90900]" dest="identifier: epoch [73452,73457]"/>
  <match src="function_body [40660,41076]" dest="function_body [45851,46267]"/>
  <match src="function: function [100476,100484]" dest="function: function [29389,29397]"/>
  <match src="identifier: epoch [110929,110934]" dest="identifier: epoch [39842,39847]"/>
  <match src="primitive_type [101856,101863]" dest="primitive_type [30769,30776]"/>
  <match src="struct: struct [52929,52935]" dest="struct: struct [12042,12048]"/>
  <match src="identifier: payloadC [42388,42396]" dest="identifier: payloadC [47579,47587]"/>
  <match src=".: . [8392,8393]" dest=".: . [8956,8957]"/>
  <match src=":: : [8776,8777]" dest=":: : [9340,9341]"/>
  <match src="identifier: BOOTSTRAPPING_PERIOD [54843,54863]" dest="identifier: BOOTSTRAPPING_PERIOD [13956,13976]"/>
  <match src="state_mutability [63079,63083]" dest="state_mutability [19913,19917]"/>
  <match src="return_statement [103369,103414]" dest="return_statement [32282,32327]"/>
  <match src="parameter [104194,104201]" dest="parameter [33107,33114]"/>
  <match src="{: { [55511,55512]" dest="{: { [14624,14625]"/>
  <match src="visibility [57844,57851]" dest="visibility [67530,67537]"/>
  <match src="call_argument [47837,47855]" dest="call_argument [53028,53046]"/>
  <match src="uint256: uint256 [106604,106611]" dest="uint256: uint256 [35517,35524]"/>
  <match src="member_expression [109907,109935]" dest="member_expression [38820,38848]"/>
  <match src="(: ( [74028,74029]" dest="(: ( [68783,68784]"/>
  <match src="identifier: coupons [110035,110042]" dest="identifier: coupons [38948,38955]"/>
  <match src="}: } [100469,100470]" dest="}: } [29382,29383]"/>
  <match src=".: . [112848,112849]" dest=".: . [41761,41762]"/>
  <match src="=: = [108884,108885]" dest="=: = [37797,37798]"/>
  <match src="type_name [12045,12052]" dest="type_name [22043,22050]"/>
  <match src="pure: pure [62437,62441]" dest="pure: pure [19271,19275]"/>
  <match src="uint256: uint256 [101761,101768]" dest="uint256: uint256 [30674,30681]"/>
  <match src="identifier: owner [102762,102767]" dest="identifier: owner [31675,31680]"/>
  <match src="primitive_type [6136,6143]" dest="primitive_type [6700,6707]"/>
  <match src="member_expression [111239,111250]" dest="member_expression [40152,40163]"/>
  <match src="==: == [44960,44962]" dest="==: == [50151,50153]"/>
  <match src="}: } [113267,113268]" dest="}: } [42180,42181]"/>
  <match src="state_mutability [62374,62378]" dest="state_mutability [19208,19212]"/>
  <match src="call_argument [89403,89408]" dest="call_argument [81261,81270]"/>
  <match src="identifier: Withdraw [89100,89108]" dest="identifier: Withdraw [72453,72461]"/>
  <match src="parameter [58158,58171]" dest="parameter [80521,80538]"/>
  <match src="call_expression [88736,88779]" dest="call_expression [73687,73730]"/>
  <match src="): ) [1698,1699]" dest="): ) [2262,2263]"/>
  <match src="memory: memory [74881,74887]" dest="memory: memory [67015,67021]"/>
  <match src="primitive_type [35415,35422]" dest="primitive_type [64430,64437]"/>
  <match src="return: return [54963,54969]" dest="return: return [14076,14082]"/>
  <match src="type_name [43107,43114]" dest="type_name [48298,48305]"/>
  <match src="primitive_type [62708,62712]" dest="primitive_type [19542,19546]"/>
  <match src="(: ( [42079,42080]" dest="(: ( [47270,47271]"/>
  <match src="identifier: stringify [43700,43709]" dest="identifier: stringify [48891,48900]"/>
  <match src="string: string [109076,109082]" dest="string: string [37989,37995]"/>
  <match src="parameter [10060,10073]" dest="parameter [10624,10637]"/>
  <match src="visibility [98195,98201]" dest="visibility [76845,76851]"/>
  <match src="identifier: votesFor [105282,105290]" dest="identifier: votesFor [34195,34203]"/>
  <match src="internal: internal [375,383]" dest="internal: internal [939,947]"/>
  <match src="(: ( [40725,40726]" dest="(: ( [45916,45917]"/>
  <match src="sstore: sstore [99087,99093]" dest="sstore: sstore [77737,77743]"/>
  <match src="function: function [8831,8839]" dest="function: function [9395,9403]"/>
  <match src="type_name [46730,46737]" dest="type_name [51921,51928]"/>
  <match src="): ) [112760,112761]" dest="): ) [41673,41674]"/>
  <match src="parameter [13164,13168]" dest="parameter [23162,23166]"/>
  <match src="function: function [92125,92133]" dest="function: function [57685,57693]"/>
  <match src="}: } [101824,101825]" dest="}: } [30737,30738]"/>
  <match src="private: private [99923,99930]" dest="private: private [28836,28843]"/>
  <match src="[: [ [113193,113194]" dest="[: [ [42106,42107]"/>
  <match src="primitive_type [96400,96407]" dest="primitive_type [27618,27625]"/>
  <match src=".: . [108984,108985]" dest=".: . [37897,37898]"/>
  <match src="identifier: epoch [102147,102152]" dest="identifier: epoch [31060,31065]"/>
  <match src="parameter [103893,103900]" dest="parameter [32806,32813]"/>
  <match src="type_name [96326,96333]" dest="type_name [27544,27551]"/>
  <match src="visibility [103124,103130]" dest="visibility [32037,32043]"/>
  <match src="identifier: State [96657,96662]" dest="identifier: State [27875,27880]"/>
  <match src="): ) [6601,6602]" dest="): ) [7165,7166]"/>
  <match src="(: ( [7980,7981]" dest="(: ( [8544,8545]"/>
  <match src="identifier: abi [40112,40115]" dest="identifier: abi [45303,45306]"/>
  <match src="(: ( [64432,64433]" dest="(: ( [21266,21267]"/>
  <match src="parameter [9259,9275]" dest="parameter [9823,9839]"/>
  <match src=".: . [111511,111512]" dest=".: . [40424,40425]"/>
  <match src="call_argument [41549,41557]" dest="call_argument [46740,46748]"/>
  <match src=",: , [42245,42246]" dest=",: , [47436,47437]"/>
  <match src=".: . [105119,105120]" dest=".: . [34032,34033]"/>
  <match src="binary_expression [61193,61239]" dest="binary_expression [65620,65671]"/>
  <match src="identifier: reason [107400,107406]" dest="identifier: reason [36313,36319]"/>
  <match src="return: return [55372,55378]" dest="return: return [14485,14491]"/>
  <match src=",: , [88427,88428]" dest=",: , [71316,71317]"/>
  <match src="expression_statement [88934,88970]" dest="expression_statement [71877,71933]"/>
  <match src="identifier: payloadB [41865,41873]" dest="identifier: payloadB [47056,47064]"/>
  <match src="expression_statement [112428,112473]" dest="expression_statement [41341,41386]"/>
  <match src="contract_declaration [96229,96785]" dest="contract_declaration [27447,28003]"/>
  <match src="primitive_type [63329,63333]" dest="primitive_type [20163,20167]"/>
  <match src="parameter [105159,105176]" dest="parameter [34072,34089]"/>
  <match src="primitive_type [100962,100969]" dest="primitive_type [29875,29882]"/>
  <match src="call_argument [91210,91214]" dest="call_argument [81409,81413]"/>
  <match src="comment: // find the last non-zero byte in order to determine the length [44389,44452]" dest="comment: // find the last non-zero byte in order to determine the length [49580,49643]"/>
  <match src="call_expression [86201,86209]" dest="call_expression [54066,54074]"/>
  <match src="assignment_expression [111671,111716]" dest="assignment_expression [40584,40629]"/>
  <match src="primitive_type [1324,1331]" dest="primitive_type [1888,1895]"/>
  <match src="identifier: account [80566,80573]" dest="identifier: account [82073,82080]"/>
  <match src="member_expression [9708,9718]" dest="member_expression [10272,10282]"/>
  <match src="external: external [63070,63078]" dest="external: external [19904,19912]"/>
  <match src="visibility [109777,109785]" dest="visibility [38690,38698]"/>
  <match src="expression_statement [113740,113787]" dest="expression_statement [42653,42700]"/>
  <match src="): ) [108404,108405]" dest="): ) [37317,37318]"/>
  <match src="parameter [13568,13572]" dest="parameter [23566,23570]"/>
  <match src="identifier: Decimal [33429,33436]" dest="identifier: Decimal [67548,67555]"/>
  <match src="uint: uint [63329,63333]" dest="uint: uint [20163,20167]"/>
  <match src="bool: bool [40546,40550]" dest="bool: bool [45737,45741]"/>
  <match src="member_expression [112820,112837]" dest="member_expression [41733,41750]"/>
  <match src="(: ( [47926,47927]" dest="(: ( [53117,53118]"/>
  <match src="{: { [7039,7040]" dest="{: { [7603,7604]"/>
  <match src="parameter [62767,62777]" dest="parameter [19601,19611]"/>
  <match src="function: function [59789,59797]" dest="function: function [24763,24771]"/>
  <match src="parameter [101856,101871]" dest="parameter [30769,30784]"/>
  <match src="primitive_type [3259,3265]" dest="primitive_type [3823,3829]"/>
  <match src="state_mutability [62495,62499]" dest="state_mutability [19329,19333]"/>
  <match src="address: address [24247,24254]" dest="address: address [59922,59929]"/>
  <match src="identifier: Require [91151,91158]" dest="identifier: Require [81347,81354]"/>
  <match src="function: function [98807,98815]" dest="function: function [77457,77465]"/>
  <match src="call_expression [98578,98610]" dest="call_expression [77228,77260]"/>
  <match src="return: return [56815,56821]" dest="return: return [15928,15934]"/>
  <match src="type_cast_expression [47082,47109]" dest="type_cast_expression [52273,52300]"/>
  <match src="primitive_type [4030,4037]" dest="primitive_type [4594,4601]"/>
  <match src="return: return [8135,8141]" dest="return: return [8699,8705]"/>
  <match src="identifier: c [2023,2024]" dest="identifier: c [2587,2588]"/>
  <match src="function: function [108436,108444]" dest="function: function [37349,37357]"/>
  <match src="): ) [113662,113663]" dest="): ) [42575,42576]"/>
  <match src="]: ] [46124,46125]" dest="]: ] [51315,51316]"/>
  <match src=".: . [74838,74839]" dest=".: . [18585,18586]"/>
  <match src="uint256: uint256 [96448,96455]" dest="uint256: uint256 [27666,27673]"/>
  <match src="returns: returns [64121,64128]" dest="returns: returns [20955,20962]"/>
  <match src="): ) [101978,101979]" dest="): ) [30891,30892]"/>
  <match src="member_expression [108538,108553]" dest="member_expression [37451,37466]"/>
  <match src="call_argument [9489,9493]" dest="call_argument [10053,10057]"/>
  <match src="call_expression [19823,19893]" dest="call_expression [65255,65333]"/>
  <match src="identifier: Require [58819,58826]" dest="identifier: Require [64489,64496]"/>
  <match src="&quot;: &quot; [19191,19192]" dest="&quot;: &quot; [73300,73301]"/>
  <match src="private: private [92149,92156]" dest="private: private [57709,57716]"/>
  <match src="return_statement [55988,56013]" dest="return_statement [15101,15126]"/>
  <match src="type_name [64251,64255]" dest="type_name [21085,21089]"/>
  <match src="identifier: coupons [109640,109647]" dest="identifier: coupons [38553,38560]"/>
  <match src=".: . [80353,80354]" dest=".: . [71974,71975]"/>
  <match src="(: ( [20026,20027]" dest="(: ( [63575,63576]"/>
  <match src="(: ( [85239,85240]" dest="(: ( [60619,60620]"/>
  <match src="pure: pure [3296,3300]" dest="pure: pure [3860,3864]"/>
  <match src="): ) [102727,102728]" dest="): ) [31640,31641]"/>
  <match src="block_statement [112128,112159]" dest="block_statement [41041,41072]"/>
  <match src="uint256: uint256 [88243,88250]" dest="uint256: uint256 [71262,71269]"/>
  <match src="call_expression [103081,103088]" dest="call_expression [31994,32001]"/>
  <match src="user_defined_type [73988,74000]" dest="user_defined_type [18294,18306]"/>
  <match src="primitive_type [46088,46093]" dest="primitive_type [51279,51284]"/>
  <match src="): ) [100871,100872]" dest="): ) [29784,29785]"/>
  <match src="identifier: from [106649,106653]" dest="identifier: from [35562,35566]"/>
  <match src="identifier: file [39138,39142]" dest="identifier: file [44329,44333]"/>
  <match src="identifier: amount [109583,109589]" dest="identifier: amount [38496,38502]"/>
  <match src="number_literal: 0 [10234,10235]" dest="number_literal: 0 [10798,10799]"/>
  <match src="external: external [63990,63998]" dest="external: external [20824,20832]"/>
  <match src="(: ( [40673,40674]" dest="(: ( [45864,45865]"/>
  <match src="identifier: spender [62699,62706]" dest="identifier: spender [19533,19540]"/>
  <match src="&gt;&gt;: &gt;&gt; [47605,47607]" dest="&gt;&gt;: &gt;&gt; [52796,52798]"/>
  <match src="return: return [2656,2662]" dest="return: return [3220,3226]"/>
  <match src="view: view [101155,101159]" dest="view: view [30068,30072]"/>
  <match src="call_argument [47933,47960]" dest="call_argument [53124,53151]"/>
  <match src="parameter [102976,102983]" dest="parameter [31889,31896]"/>
  <match src="): ) [59880,59881]" dest="): ) [24854,24855]"/>
  <match src=".: . [75632,75633]" dest=".: . [68606,68607]"/>
  <match src="visibility [101465,101471]" dest="visibility [30378,30384]"/>
  <match src=".: . [105666,105667]" dest=".: . [34579,34580]"/>
  <match src="visibility [100631,100639]" dest="visibility [29544,29552]"/>
  <match src="type_name [86925,86929]" dest="type_name [61664,61668]"/>
  <match src="variable_declaration [32673,32715]" dest="variable_declaration [62219,62264]"/>
  <match src="(: ( [44921,44922]" dest="(: ( [50112,50113]"/>
  <match src="}: } [47619,47620]" dest="}: } [52810,52811]"/>
  <match src="return_statement [1986,1995]" dest="return_statement [2550,2559]"/>
  <match src="call_argument [7441,7442]" dest="call_argument [8005,8006]"/>
  <match src="return_type_definition [9673,9690]" dest="return_type_definition [10237,10254]"/>
  <match src=",: , [109340,109341]" dest=",: , [38253,38254]"/>
  <match src="function: function [63039,63047]" dest="function: function [19873,19881]"/>
  <match src="primitive_type [63305,63312]" dest="primitive_type [20139,20146]"/>
  <match src="visibility [21137,21145]" dest="visibility [71493,71501]"/>
  <match src="constant: constant [38662,38670]" dest="constant: constant [43853,43861]"/>
  <match src="(: ( [89565,89566]" dest="(: ( [62688,62689]"/>
  <match src="primitive_type [12045,12052]" dest="primitive_type [22043,22050]"/>
  <match src="identifier: epoch [109350,109355]" dest="identifier: epoch [38263,38268]"/>
  <match src="(: ( [110744,110745]" dest="(: ( [39657,39658]"/>
  <match src="external: external [64405,64413]" dest="external: external [21239,21247]"/>
  <match src="user_defined_type [9641,9645]" dest="user_defined_type [10205,10209]"/>
  <match src="call_argument [9969,9978]" dest="call_argument [10533,10542]"/>
  <match src="call_argument [59054,59061]" dest="call_argument [65057,65064]"/>
  <match src="uint256: uint256 [111781,111788]" dest="uint256: uint256 [40694,40701]"/>
  <match src="function: function [101831,101839]" dest="function: function [30744,30752]"/>
  <match src=",: , [63178,63179]" dest=",: , [20012,20013]"/>
  <match src="string: string [41991,41997]" dest="string: string [47182,47188]"/>
  <match src="identifier: accounts [110358,110366]" dest="identifier: accounts [39271,39279]"/>
  <match src="): ) [108203,108204]" dest="): ) [37116,37117]"/>
  <match src="address: address [114750,114757]" dest="address: address [69694,69701]"/>
  <match src="function: function [100348,100356]" dest="function: function [29261,29269]"/>
  <match src="return_statement [4782,4795]" dest="return_statement [5346,5359]"/>
  <match src="call_expression [110794,110841]" dest="call_expression [39707,39754]"/>
  <match src="call_expression [41455,41481]" dest="call_expression [46646,46672]"/>
  <match src="function_body [56256,56336]" dest="function_body [15369,15449]"/>
  <match src="library: library [38390,38397]" dest="library: library [43581,43588]"/>
  <match src="identifier: skim [64388,64392]" dest="identifier: skim [21222,21226]"/>
  <match src="using_directive [87858,87885]" dest="using_directive [71082,71109]"/>
  <match src="{: { [100529,100530]" dest="{: { [29442,29443]"/>
  <match src="&quot;: &quot; [22085,22086]" dest="&quot;: &quot; [65009,65010]"/>
  <match src="returns: returns [100953,100960]" dest="returns: returns [29866,29873]"/>
  <match src="identifier: account [94580,94587]" dest="identifier: account [75438,75445]"/>
  <match src="identifier: input [44954,44959]" dest="identifier: input [50145,50150]"/>
  <match src="identifier: BASE [8606,8610]" dest="identifier: BASE [9170,9174]"/>
  <match src="return_type_definition [106907,106921]" dest="return_type_definition [35820,35834]"/>
  <match src="identifier: expiration [103948,103958]" dest="identifier: expiration [32861,32871]"/>
  <match src="identifier: candidate [104620,104629]" dest="identifier: candidate [33533,33542]"/>
  <match src="identifier: newPhantomFromBonded [91593,91613]" dest="identifier: couponAmount [63079,63091]"/>
  <match src="function_definition [75230,75828]" dest="function_definition [67813,68256]"/>
  <match src="(: ( [111714,111715]" dest="(: ( [40627,40628]"/>
  <match src=".: . [104985,104986]" dest=".: . [33898,33899]"/>
  <match src="(: ( [6842,6843]" dest="(: ( [7406,7407]"/>
  <match src="{: { [7017,7018]" dest="{: { [7581,7582]"/>
  <match src="(: ( [54210,54211]" dest="(: ( [13323,13324]"/>
  <match src="(: ( [102416,102417]" dest="(: ( [31329,31330]"/>
  <match src="comment: // SPDX-License-Identifier: none [0,32]" dest="comment: // SPDX-License-Identifier: none [0,32]"/>
  <match src="indexed: indexed [106663,106670]" dest="indexed: indexed [35576,35583]"/>
  <match src="expression_statement [21156,21224]" dest="expression_statement [65433,65521]"/>
  <match src="call_expression [111703,111716]" dest="call_expression [40616,40629]"/>
  <match src="{: { [6373,6374]" dest="{: { [6937,6938]"/>
  <match src="call_expression [9338,9356]" dest="call_expression [9902,9920]"/>
  <match src="address: address [24297,24304]" dest="address: address [59802,59809]"/>
  <match src="uint256: uint256 [88598,88605]" dest="uint256: uint256 [73521,73528]"/>
  <match src="identifier: amount [12053,12059]" dest="identifier: amount [22051,22057]"/>
  <match src="visibility [27290,27298]" dest="visibility [55499,55507]"/>
  <match src="expression_statement [113176,113262]" dest="expression_statement [42089,42175]"/>
  <match src=",: , [99098,99099]" dest=",: , [77748,77749]"/>
  <match src="emit_statement [22144,22182]" dest="emit_statement [65084,65133]"/>
  <match src="call_argument [6629,6667]" dest="call_argument [7193,7231]"/>
  <match src="): ) [56702,56703]" dest="): ) [15815,15816]"/>
  <match src="): ) [88573,88574]" dest="): ) [78917,78918]"/>
  <match src="call_argument [43593,43598]" dest="call_argument [48784,48789]"/>
  <match src="identifier: account [88234,88241]" dest="identifier: account [71253,71260]"/>
  <match src="parameter [107985,108005]" dest="parameter [36898,36918]"/>
  <match src="emit: emit [22144,22148]" dest="emit: emit [65084,65088]"/>
  <match src="): ) [34555,34556]" dest="): ) [63026,63027]"/>
  <match src="library_declaration [38390,47971]" dest="library_declaration [43581,53162]"/>
  <match src="identifier: epoch [103624,103629]" dest="identifier: epoch [32537,32542]"/>
  <match src="return: return [47915,47921]" dest="return: return [53106,53112]"/>
  <match src="call_argument [44085,44090]" dest="call_argument [49276,49281]"/>
  <match src="(: ( [42746,42747]" dest="(: ( [47937,47938]"/>
  <match src="identifier: payloadB [43634,43642]" dest="identifier: payloadB [48825,48833]"/>
  <match src="identifier: b [812,813]" dest="identifier: b [1376,1377]"/>
  <match src="memory: memory [56248,56254]" dest="memory: memory [15361,15367]"/>
  <match src="user_defined_type [7198,7202]" dest="user_defined_type [7762,7766]"/>
  <match src="array_access [110154,110178]" dest="array_access [39067,39091]"/>
  <match src="type_name [107822,107829]" dest="type_name [36735,36742]"/>
  <match src="variable_declaration_statement [101913,101949]" dest="variable_declaration_statement [30826,30862]"/>
  <match src="primitive_type [53088,53095]" dest="primitive_type [12201,12208]"/>
  <match src="string [21970,22008]" dest="string [64295,64332]"/>
  <match src="string_literal [20035,20075]" dest="string_literal [63615,63652]"/>
  <match src="{: { [5792,5793]" dest="{: { [6356,6357]"/>
  <match src="call_argument [27341,27381]" dest="call_argument [55545,55575]"/>
  <match src="(: ( [110946,110947]" dest="(: ( [39859,39860]"/>
  <match src="function_body [55210,55274]" dest="function_body [14323,14387]"/>
  <match src="(: ( [102216,102217]" dest="(: ( [31129,31130]"/>
  <match src="parameter [39326,39335]" dest="parameter [44517,44526]"/>
  <match src="function: function [107120,107128]" dest="function: function [36033,36041]"/>
  <match src="identifier: INITIAL_STAKE_MULTIPLE [54725,54747]" dest="identifier: INITIAL_STAKE_MULTIPLE [13838,13860]"/>
  <match src="identifier: spender [63144,63151]" dest="identifier: spender [19978,19985]"/>
  <match src="call_expression [3395,3423]" dest="call_expression [3959,3987]"/>
  <match src="primitive_type [94025,94032]" dest="primitive_type [74883,74890]"/>
  <match src="revert: revert [42678,42684]" dest="revert: revert [47869,47875]"/>
  <match src="visibility [100941,100947]" dest="visibility [29854,29860]"/>
  <match src="): ) [7389,7390]" dest="): ) [7953,7954]"/>
  <match src="&quot;: &quot; [88136,88137]" dest="&quot;: &quot; [71155,71156]"/>
  <match src="call_expression [110608,110676]" dest="call_expression [39521,39589]"/>
  <match src="identifier: Decimal [54932,54939]" dest="identifier: Decimal [14045,14052]"/>
  <match src="function_definition [111949,112308]" dest="function_definition [40862,41221]"/>
  <match src="primitive_type [105575,105582]" dest="primitive_type [34488,34495]"/>
  <match src="{: { [7670,7671]" dest="{: { [8234,8235]"/>
  <match src="member_expression [36002,36013]" dest="member_expression [18784,18795]"/>
  <match src="parameter [6703,6719]" dest="parameter [7267,7283]"/>
  <match src="parameter [43107,43119]" dest="parameter [48298,48310]"/>
  <match src="): ) [55828,55829]" dest="): ) [14941,14942]"/>
  <match src="memory: memory [35106,35112]" dest="memory: memory [61996,62002]"/>
  <match src="address: address [98834,98841]" dest="address: address [77484,77491]"/>
  <match src="{: { [112010,112011]" dest="{: { [40923,40924]"/>
  <match src="state_mutability [63999,64003]" dest="state_mutability [20833,20837]"/>
  <match src="identifier: reason [112959,112965]" dest="identifier: reason [41872,41878]"/>
  <match src="visibility [53226,53233]" dest="visibility [12339,12346]"/>
  <match src=".: . [90625,90626]" dest=".: . [72139,72140]"/>
  <match src="primitive_type [112374,112381]" dest="primitive_type [41287,41294]"/>
  <match src=",: , [63273,63274]" dest=",: , [20107,20108]"/>
  <match src="variable_declaration [44046,44065]" dest="variable_declaration [49237,49256]"/>
  <match src="): ) [40895,40896]" dest="): ) [46086,46087]"/>
  <match src="internal: internal [41223,41231]" dest="internal: internal [46414,46422]"/>
  <match src="returns: returns [55725,55732]" dest="returns: returns [14838,14845]"/>
  <match src="visibility [76233,76241]" dest="visibility [71784,71792]"/>
  <match src="(: ( [27271,27272]" dest="(: ( [55482,55483]"/>
  <match src="return_type_definition [94056,94070]" dest="return_type_definition [74914,74928]"/>
  <match src="(: ( [89285,89286]" dest="(: ( [73241,73242]"/>
  <match src="variable_declaration [44503,44517]" dest="variable_declaration [49694,49708]"/>
  <match src=":: : [89715,89716]" dest=":: : [72700,72701]"/>
  <match src="visibility [76328,76336]" dest="visibility [64916,64924]"/>
  <match src="member_expression [90773,90783]" dest="member_expression [80413,80423]"/>
  <match src="identifier: current [95677,95684]" dest="identifier: current [26895,26902]"/>
  <match src="memory: memory [10065,10071]" dest="memory: memory [10629,10635]"/>
  <match src="identifier: a [4027,4028]" dest="identifier: a [4591,4592]"/>
  <match src="(: ( [88876,88877]" dest="(: ( [72242,72243]"/>
  <match src="state_variable_declaration [53805,53853]" dest="state_variable_declaration [12918,12966]"/>
  <match src="call_struct_argument [6631,6665]" dest="call_struct_argument [7195,7229]"/>
  <match src=".: . [56442,56443]" dest=".: . [15555,15556]"/>
  <match src=".: . [109913,109914]" dest=".: . [38826,38827]"/>
  <match src="uint: uint [62509,62513]" dest="uint: uint [19343,19347]"/>
  <match src="call_argument [32915,32951]" dest="call_argument [63510,63539]"/>
  <match src="return_statement [9472,9502]" dest="return_statement [10036,10066]"/>
  <match src="?: ? [102582,102583]" dest="?: ? [31495,31496]"/>
  <match src="identifier: Require [90227,90234]" dest="identifier: Require [81622,81629]"/>
  <match src="identifier: D256 [6513,6517]" dest="identifier: D256 [7077,7081]"/>
  <match src="bool: bool [71967,71971]" dest="bool: bool [25780,25784]"/>
  <match src="identifier: owner [110561,110566]" dest="identifier: owner [39474,39479]"/>
  <match src="&quot;: &quot; [22585,22586]" dest="&quot;: &quot; [72099,72100]"/>
  <match src="identifier: reason [107688,107694]" dest="identifier: reason [36601,36607]"/>
  <match src=",: , [76471,76472]" dest=",: , [80607,80608]"/>
  <match src="user_defined_type [75270,75282]" dest="user_defined_type [68567,68579]"/>
  <match src="identifier: b [4038,4039]" dest="identifier: b [4602,4603]"/>
  <match src="(: ( [71896,71897]" dest="(: ( [25709,25710]"/>
  <match src="identifier: value [7053,7058]" dest="identifier: value [7617,7622]"/>
  <match src="uint256: uint256 [78191,78198]" dest="uint256: uint256 [71348,71355]"/>
  <match src="call_argument [8769,8817]" dest="call_argument [9333,9381]"/>
  <match src="function: function [8627,8635]" dest="function: function [9191,9199]"/>
  <match src="identifier: b [2611,2612]" dest="identifier: b [3175,3176]"/>
  <match src="identifier: errorMessage [4759,4771]" dest="identifier: errorMessage [5323,5335]"/>
  <match src="): ) [100661,100662]" dest="): ) [29574,29575]"/>
  <match src="identifier: getGovernancePeriod [55034,55053]" dest="identifier: getGovernancePeriod [14147,14166]"/>
  <match src="identifier: add [110200,110203]" dest="identifier: add [39113,39116]"/>
  <match src="identifier: require [1343,1350]" dest="identifier: require [1907,1914]"/>
  <match src="comment: /* Oracle */ [52631,52643]" dest="comment: /* Oracle */ [11744,11756]"/>
  <match src="number_literal: 0 [102001,102002]" dest="number_literal: 0 [30914,30915]"/>
  <match src="member_expression [111239,111256]" dest="member_expression [40152,40169]"/>
  <match src="state_mutability [103737,103741]" dest="state_mutability [32650,32654]"/>
  <match src="parameter [106916,106920]" dest="parameter [35829,35833]"/>
  <match src="=: = [111701,111702]" dest="=: = [40614,40615]"/>
  <match src="array_access [112428,112456]" dest="array_access [41341,41369]"/>
  <match src="yul_assignment [94560,94588]" dest="yul_assignment [75418,75446]"/>
  <match src="internal: internal [55056,55064]" dest="internal: internal [14169,14177]"/>
  <match src="=: = [46081,46082]" dest="=: = [51272,51273]"/>
  <match src="function: function [5879,5887]" dest="function: function [6443,6451]"/>
  <match src="(: ( [1677,1678]" dest="(: ( [2241,2242]"/>
  <match src="uint256: uint256 [95669,95676]" dest="uint256: uint256 [26887,26894]"/>
  <match src="identifier: allowanceCoupons [102650,102666]" dest="identifier: allowanceCoupons [31563,31579]"/>
  <match src="call_argument [81444,81451]" dest="call_argument [54186,54193]"/>
  <match src="primitive_type [88877,88884]" dest="primitive_type [72243,72250]"/>
  <match src="): ) [103568,103569]" dest="): ) [32481,32482]"/>
  <match src="binary_expression [47837,47855]" dest="binary_expression [53028,53046]"/>
  <match src=".: . [92605,92606]" dest=".: . [79522,79523]"/>
  <match src="parameter [6590,6601]" dest="parameter [7154,7165]"/>
  <match src="parameter [62388,62401]" dest="parameter [19222,19235]"/>
  <match src="return_type_definition [389,406]" dest="return_type_definition [953,970]"/>
  <match src="member_expression [8376,8386]" dest="member_expression [8940,8950]"/>
  <match src="uint256: uint256 [108189,108196]" dest="uint256: uint256 [37102,37109]"/>
  <match src="primitive_type [4724,4731]" dest="primitive_type [5288,5295]"/>
  <match src="call_expression [108259,108303]" dest="call_expression [37172,37216]"/>
  <match src="call_expression [102029,102066]" dest="call_expression [30942,30979]"/>
  <match src="): ) [101565,101566]" dest="): ) [30478,30479]"/>
  <match src="member_expression [112635,112669]" dest="member_expression [41548,41582]"/>
  <match src="(: ( [40038,40039]" dest="(: ( [45229,45230]"/>
  <match src=",: , [106653,106654]" dest=",: , [35566,35567]"/>
  <match src="identifier: that [92401,92405]" dest="identifier: that [79037,79041]"/>
  <match src="expression_statement [58819,58925]" dest="expression_statement [64489,64611]"/>
  <match src="call_expression [7755,7770]" dest="call_expression [8319,8334]"/>
  <match src="=: = [53536,53537]" dest="=: = [12649,12650]"/>
  <match src="{: { [38406,38407]" dest="{: { [43597,43598]"/>
  <match src="state_mutability [7360,7364]" dest="state_mutability [7924,7928]"/>
  <match src="if_statement [101958,102013]" dest="if_statement [30871,30926]"/>
  <match src="uint256: uint256 [18352,18359]" dest="uint256: uint256 [17036,17043]"/>
  <match src="primitive_type [63121,63128]" dest="primitive_type [19955,19962]"/>
  <match src="call_argument [110072,110078]" dest="call_argument [38985,38991]"/>
  <match src="visibility [27659,27667]" dest="visibility [66983,66991]"/>
  <match src="function: function [12360,12368]" dest="function: function [22358,22366]"/>
  <match src="member_expression [114777,114789]" dest="member_expression [69721,69733]"/>
  <match src="identifier: decrementBalanceOfClaimable [89258,89285]" dest="identifier: incrementBalanceOfStaged [73217,73241]"/>
  <match src="=: = [107364,107365]" dest="=: = [36277,36278]"/>
  <match src="return_statement [100981,101009]" dest="return_statement [29894,29922]"/>
  <match src="identifier: epoch [111433,111438]" dest="identifier: epoch [40346,40351]"/>
  <match src="]: ] [104259,104260]" dest="]: ] [33172,33173]"/>
  <match src=".: . [96554,96555]" dest=".: . [27772,27773]"/>
  <match src="identifier: lessDai [91879,91886]" dest="identifier: vote [80479,80483]"/>
  <match src="primitive_type [38611,38617]" dest="primitive_type [43802,43808]"/>
  <match src="identifier: input [44085,44090]" dest="identifier: input [49276,49281]"/>
  <match src="): ) [89368,89369]" dest="): ) [58833,58834]"/>
  <match src="identifier: stringifyTruncated [39119,39137]" dest="identifier: stringifyTruncated [44310,44328]"/>
  <match src="function: function [108144,108152]" dest="function: function [37057,37065]"/>
  <match src="member_expression [107209,107230]" dest="member_expression [36122,36143]"/>
  <match src="primitive_type [53751,53758]" dest="primitive_type [12864,12871]"/>
  <match src="uint256: uint256 [1723,1730]" dest="uint256: uint256 [2287,2294]"/>
  <match src="parameter [100367,100382]" dest="parameter [29280,29295]"/>
  <match src="primitive_type [7147,7154]" dest="primitive_type [7711,7718]"/>
  <match src="identifier: sub [109991,109994]" dest="identifier: sub [38904,38907]"/>
  <match src="function: function [11720,11728]" dest="function: function [21718,21726]"/>
  <match src=",: , [12043,12044]" dest=",: , [22041,22042]"/>
  <match src="identifier: SafeMath [99852,99860]" dest="identifier: SafeMath [28765,28773]"/>
  <match src=",: , [43490,43491]" dest=",: , [48681,48682]"/>
  <match src="identifier: value [88606,88611]" dest="identifier: value [73529,73534]"/>
  <match src="(: ( [64078,64079]" dest="(: ( [20912,20913]"/>
  <match src="parameter [62577,62581]" dest="parameter [19411,19415]"/>
  <match src=",: , [30491,30492]" dest=",: , [65719,65720]"/>
  <match src="function_body [108842,109003]" dest="function_body [37755,37916]"/>
  <match src="member_expression [105638,105678]" dest="member_expression [34551,34591]"/>
  <match src="uint256: uint256 [1382,1389]" dest="uint256: uint256 [1946,1953]"/>
  <match src="returns: returns [59948,59955]" dest="returns: returns [24922,24929]"/>
  <match src="): ) [102041,102042]" dest="): ) [30954,30955]"/>
  <match src="identifier: msg [90622,90625]" dest="identifier: msg [72136,72139]"/>
  <match src="memory: memory [1280,1286]" dest="memory: memory [1844,1850]"/>
  <match src="comment: /**      * Governance      */ [104538,104567]" dest="comment: /**      * Governance      */ [33451,33480]"/>
  <match src="type_name [54932,54944]" dest="type_name [14045,14057]"/>
  <match src="identifier: externalAmountAfterTax [33498,33520]" dest="identifier: stake [82211,82216]"/>
  <match src="comment: // contracts then. [94466,94484]" dest="comment: // contracts then. [75324,75342]"/>
  <match src="user_defined_type [96749,96764]" dest="user_defined_type [27967,27982]"/>
  <match src="returns: returns [75261,75268]" dest="returns: returns [68558,68565]"/>
  <match src="primitive_type [41857,41864]" dest="primitive_type [47048,47055]"/>
  <match src="return_statement [55521,55555]" dest="return_statement [14634,14668]"/>
  <match src="++: ++ [45136,45138]" dest="++: ++ [50327,50329]"/>
  <match src="): ) [55509,55510]" dest="): ) [14622,14623]"/>
  <match src=",: , [107591,107592]" dest=",: , [36504,36505]"/>
  <match src="member_expression [108886,108921]" dest="member_expression [37799,37834]"/>
  <match src="internal: internal [42621,42629]" dest="internal: internal [47812,47820]"/>
  <match src="): ) [2701,2702]" dest="): ) [3265,3266]"/>
  <match src="uint256: uint256 [11779,11786]" dest="uint256: uint256 [21777,21784]"/>
  <match src="identifier: transfer [89221,89229]" dest="identifier: transfer [72317,72325]"/>
  <match src="type_name [96630,96663]" dest="type_name [27848,27881]"/>
  <match src="parameter [63908,63924]" dest="parameter [20742,20758]"/>
  <match src="return_statement [105350,105405]" dest="return_statement [34263,34318]"/>
  <match src="function_definition [340,516]" dest="function_definition [904,1080]"/>
  <match src="parameter [104459,104463]" dest="parameter [33372,33376]"/>
  <match src="identifier: result [44059,44065]" dest="identifier: result [49250,49256]"/>
  <match src="contract: contract [114602,114610]" dest="contract: contract [69546,69554]"/>
  <match src="event_paramater [63237,63259]" dest="event_paramater [20071,20093]"/>
  <match src="function_body [101903,102090]" dest="function_body [30816,31003]"/>
  <match src="identifier: candidate [105393,105402]" dest="identifier: candidate [34306,34315]"/>
  <match src="return: return [55753,55759]" dest="return: return [14866,14872]"/>
  <match src="type_cast_expression [108395,108405]" dest="type_cast_expression [37308,37318]"/>
  <match src="=: = [45370,45371]" dest="=: = [50561,50562]"/>
  <match src="memory: memory [6361,6367]" dest="memory: memory [6925,6931]"/>
  <match src="identifier: abi [40747,40750]" dest="identifier: abi [45938,45941]"/>
  <match src="contract_body [95963,96227]" dest="contract_body [27181,27445]"/>
  <match src="]: ] [46079,46080]" dest="]: ] [51270,51271]"/>
  <match src="call_argument [22165,22172]" dest="call_argument [65116,65123]"/>
  <match src="&amp;: &amp; [46615,46616]" dest="&amp;: &amp; [51806,51807]"/>
  <match src="identifier: amount [83189,83195]" dest="identifier: amount [55368,55374]"/>
  <match src=",: , [91342,91343]" dest=",: , [80803,80804]"/>
  <match src="identifier: normalizedPrice [111145,111160]" dest="identifier: normalizedPrice [40058,40073]"/>
  <match src="call_argument [91721,91729]" dest="call_argument [64657,64669]"/>
  <match src="primitive_type [10114,10121]" dest="primitive_type [10678,10685]"/>
  <match src="internal: internal [3287,3295]" dest="internal: internal [3851,3859]"/>
  <match src="state_mutability [34777,34781]" dest="state_mutability [68312,68316]"/>
  <match src="identifier: price1Cumulative [75336,75352]" dest="identifier: lessDebt [68082,68090]"/>
  <match src="call_expression [7618,7625]" dest="call_expression [8182,8189]"/>
  <match src="): ) [43790,43791]" dest="): ) [48981,48982]"/>
  <match src="(: ( [101485,101486]" dest="(: ( [30398,30399]"/>
  <match src="(: ( [61202,61203]" dest="(: ( [65636,65637]"/>
  <match src="(: ( [10027,10028]" dest="(: ( [10591,10592]"/>
  <match src="parameter [59957,59961]" dest="parameter [24931,24935]"/>
  <match src="member_expression [100790,100812]" dest="member_expression [29703,29725]"/>
  <match src="type_name [102139,102146]" dest="type_name [31052,31059]"/>
  <match src="number_literal: 2 [36020,36021]" dest="number_literal: 2 [61808,61809]"/>
  <match src="parameter [106773,106787]" dest="parameter [35686,35700]"/>
  <match src="(: ( [101168,101169]" dest="(: ( [30081,30082]"/>
  <match src="bool: bool [39326,39330]" dest="bool: bool [44517,44521]"/>
  <match src="address: address [13515,13522]" dest="address: address [23513,23520]"/>
  <match src="): ) [111607,111608]" dest="): ) [40520,40521]"/>
  <match src="member_expression [103617,103642]" dest="member_expression [32530,32555]"/>
  <match src="member_expression [112635,112652]" dest="member_expression [41548,41565]"/>
  <match src="string_literal [21286,21322]" dest="string_literal [71591,71612]"/>
  <match src="primitive_type [112746,112753]" dest="primitive_type [41659,41666]"/>
  <match src="struct_member [95442,95458]" dest="struct_member [26660,26676]"/>
  <match src=",: , [3257,3258]" dest=",: , [3821,3822]"/>
  <match src="function_definition [103544,103681]" dest="function_definition [32457,32594]"/>
  <match src="identifier: account [104720,104727]" dest="identifier: account [33633,33640]"/>
  <match src="comment: /* Regulator */ [53945,53960]" dest="comment: /* Regulator */ [13058,13073]"/>
  <match src="(: ( [88274,88275]" dest="(: ( [83222,83223]"/>
  <match src="type_name [55969,55976]" dest="type_name [15082,15089]"/>
  <match src="&quot;: &quot; [98565,98566]" dest="&quot;: &quot; [77215,77216]"/>
  <match src=",: , [12392,12393]" dest=",: , [22390,22391]"/>
  <match src="(: ( [89082,89083]" dest="(: ( [55446,55447]"/>
  <match src="identifier: initialized [105667,105678]" dest="identifier: initialized [34580,34591]"/>
  <match src="identifier: getPoolExitLockupEpochs [85216,85239]" dest="identifier: getCouponExpiration [60600,60619]"/>
  <match src="address: address [13113,13120]" dest="address: address [23111,23118]"/>
  <match src="state_mutability [6169,6173]" dest="state_mutability [6733,6737]"/>
  <match src="(: ( [115219,115220]" dest="(: ( [70163,70164]"/>
  <match src="{: { [44485,44486]" dest="{: { [49676,49677]"/>
  <match src="view: view [104180,104184]" dest="view: view [33093,33097]"/>
  <match src="]: ] [108909,108910]" dest="]: ] [37822,37823]"/>
  <match src="(: ( [109477,109478]" dest="(: ( [38390,38391]"/>
  <match src="}: } [95621,95622]" dest="}: } [26839,26840]"/>
  <match src="member_expression [104957,104992]" dest="member_expression [33870,33905]"/>
  <match src="state_variable_declaration [52382,52420]" dest="state_variable_declaration [11495,11533]"/>
  <match src="state_mutability [41923,41927]" dest="state_mutability [47114,47118]"/>
  <match src="string [24497,24547]" dest="string [79941,79970]"/>
  <match src="call_argument [17120,17126]" dest="call_argument [58760,58766]"/>
  <match src="visibility [7347,7355]" dest="visibility [7911,7919]"/>
  <match src="identifier: Decimal [32623,32630]" dest="identifier: Decimal [17216,17223]"/>
  <match src="uint256: uint256 [53751,53758]" dest="uint256: uint256 [12864,12871]"/>
  <match src="event_definition [63294,63377]" dest="event_definition [20128,20211]"/>
  <match src="constant: constant [53981,53989]" dest="constant: constant [13094,13102]"/>
  <match src=",: , [40896,40897]" dest=",: , [46087,46088]"/>
  <match src="emit_statement [90871,90932]" dest="emit_statement [73428,73483]"/>
  <match src="identifier: currentPeriod [95732,95745]" dest="identifier: currentPeriod [26950,26963]"/>
  <match src=",: , [89401,89402]" dest=",: , [81259,81260]"/>
  <match src="member_expression [111379,111405]" dest="member_expression [40292,40318]"/>
  <match src="member_expression [98528,98551]" dest="member_expression [77178,77201]"/>
  <match src="user_defined_type [15801,15807]" dest="user_defined_type [59553,59558]"/>
  <match src="call_struct_argument [7419,7443]" dest="call_struct_argument [7983,8007]"/>
  <match src="function_definition [64090,64136]" dest="function_definition [20924,20970]"/>
  <match src="call_expression [102198,102223]" dest="call_expression [31111,31136]"/>
  <match src="function_definition [104273,104392]" dest="function_definition [33186,33305]"/>
  <match src="function_definition [105273,105411]" dest="function_definition [34186,34324]"/>
  <match src="comment: /**      * @dev Storage slot with the address of the current implementation.      * This is the keccak-256 hash of &quot;eip1967.proxy.implementation&quot; subtracted by 1, and is      * validated in the constructor.      */ [97644,97858]" dest="comment: /**      * @dev Storage slot with the address of the current implementation.      * This is the keccak-256 hash of &quot;eip1967.proxy.implementation&quot; subtracted by 1, and is      * validated in the constructor.      */ [76294,76508]"/>
  <match src="parameter [88598,88611]" dest="parameter [73521,73534]"/>
  <match src="(: ( [56521,56522]" dest="(: ( [15634,15635]"/>
  <match src="primitive_type [9682,9689]" dest="primitive_type [10246,10253]"/>
  <match src="identifier: amount [110402,110408]" dest="identifier: amount [39315,39321]"/>
  <match src="array_access [113378,113406]" dest="array_access [42291,42319]"/>
  <match src="identifier: sender [89939,89945]" dest="identifier: sender [72883,72889]"/>
  <match src="): ) [45792,45793]" dest="): ) [50983,50984]"/>
  <match src="}: } [56156,56157]" dest="}: } [15269,15270]"/>
  <match src="uint256: uint256 [32520,32527]" dest="uint256: uint256 [58370,58377]"/>
  <match src="type_name [47733,47737]" dest="type_name [52924,52928]"/>
  <match src="return: return [100137,100143]" dest="return: return [29050,29056]"/>
  <match src="): ) [91066,91067]" dest="): ) [58017,58018]"/>
  <match src="identifier: must [40675,40679]" dest="identifier: must [45866,45870]"/>
  <match src="function_definition [85102,85249]" dest="function_definition [60285,60692]"/>
  <match src="): ) [115031,115032]" dest="): ) [69975,69976]"/>
  <match src="==: == [10149,10151]" dest="==: == [10713,10715]"/>
  <match src="string_literal [115322,115343]" dest="string_literal [70266,70287]"/>
  <match src="identifier: must [42534,42538]" dest="identifier: must [47725,47729]"/>
  <match src="private: private [53813,53820]" dest="private: private [12926,12933]"/>
  <match src="member_expression [100988,101008]" dest="member_expression [29901,29921]"/>
  <match src="[: [ [104702,104703]" dest="[: [ [33615,33616]"/>
  <match src="string: string [39499,39505]" dest="string: string [44690,44696]"/>
  <match src="parameter [98834,98859]" dest="parameter [77484,77509]"/>
  <match src="identifier: mul [36016,36019]" dest="identifier: div [18798,18801]"/>
  <match src="type_name [62509,62513]" dest="type_name [19343,19347]"/>
  <match src="external: external [12411,12419]" dest="external: external [22409,22417]"/>
  <match src="primitive_type [64315,64319]" dest="primitive_type [21149,21153]"/>
  <match src="internal: internal [112001,112009]" dest="internal: internal [40914,40922]"/>
  <match src="identifier: b [4670,4671]" dest="identifier: b [5234,5235]"/>
  <match src="type_name [106675,106682]" dest="type_name [35588,35595]"/>
  <match src="(: ( [81137,81138]" dest="(: ( [61644,61645]"/>
  <match src="type_name [100599,100606]" dest="type_name [29512,29519]"/>
  <match src="{: { [44940,44941]" dest="{: { [50131,50132]"/>
  <match src="]: ] [113241,113242]" dest="]: ] [42154,42155]"/>
  <match src="pure: pure [55488,55492]" dest="pure: pure [14601,14605]"/>
  <match src="): ) [9355,9356]" dest="): ) [9919,9920]"/>
  <match src="identifier: require [3395,3402]" dest="identifier: require [3959,3966]"/>
  <match src="contract_body [5617,10244]" dest="contract_body [6181,10808]"/>
  <match src="call_argument [2670,2671]" dest="call_argument [3234,3235]"/>
  <match src="member_expression [105091,105127]" dest="member_expression [34004,34040]"/>
  <match src="identifier: adjustPeriod [111066,111078]" dest="identifier: adjustPeriod [39979,39991]"/>
  <match src="identifier: D256 [7198,7202]" dest="identifier: D256 [7762,7766]"/>
  <match src="): ) [63671,63672]" dest="): ) [20505,20506]"/>
  <match src="call_expression [89773,89786]" dest="call_expression [72743,72756]"/>
  <match src="(: ( [39093,39094]" dest="(: ( [44284,44285]"/>
  <match src="private: private [43941,43948]" dest="private: private [49132,49139]"/>
  <match src="memory: memory [32004,32010]" dest="memory: memory [67891,67897]"/>
  <match src="member_expression [100890,100905]" dest="member_expression [29803,29818]"/>
  <match src="): ) [102462,102463]" dest="): ) [31375,31376]"/>
  <match src="(: ( [105330,105331]" dest="(: ( [34243,34244]"/>
  <match src="function_body [92157,92340]" dest="function_body [57717,57917]"/>
  <match src="inheritance_specifier [15801,15807]" dest="inheritance_specifier [59553,59558]"/>
  <match src="parameter [34791,34825]" dest="parameter [67503,67528]"/>
  <match src="identifier: COLON [38627,38632]" dest="identifier: COLON [43818,43823]"/>
  <match src="returns: returns [10105,10112]" dest="returns: returns [10669,10676]"/>
  <match src="comment: // than to check the size of the code at that address. [94197,94251]" dest="comment: // than to check the size of the code at that address. [75055,75109]"/>
  <match src="identifier: accounts [108266,108274]" dest="identifier: accounts [37179,37187]"/>
  <match src="state_mutability [105724,105728]" dest="state_mutability [34637,34641]"/>
  <match src="(: ( [115077,115078]" dest="(: ( [70021,70022]"/>
  <match src="uint256: uint256 [102875,102882]" dest="uint256: uint256 [31788,31795]"/>
  <match src="member_expression [29950,29962]" dest="member_expression [18416,18428]"/>
  <match src="type_name [114640,114647]" dest="type_name [69584,69591]"/>
  <match src="member_expression [39527,39543]" dest="member_expression [44718,44734]"/>
  <match src="identifier: D256 [6045,6049]" dest="identifier: D256 [6609,6613]"/>
  <match src=",: , [39381,39382]" dest=",: , [44572,44573]"/>
  <match src="]: ] [105252,105253]" dest="]: ] [34165,34166]"/>
  <match src="identifier: Decimal [33478,33485]" dest="identifier: Decimal [82191,82198]"/>
  <match src="identifier: D256 [74839,74843]" dest="identifier: D256 [18586,18590]"/>
  <match src="call_argument [92479,92483]" dest="call_argument [79094,79098]"/>
  <match src="): ) [41719,41720]" dest="): ) [46910,46911]"/>
  <match src="function_definition [108436,108760]" dest="function_definition [37349,37673]"/>
  <match src="(: ( [7111,7112]" dest="(: ( [7675,7676]"/>
  <match src="new_expression [46960,46969]" dest="new_expression [52151,52160]"/>
  <match src="identifier: getDAOExitLockupEpochs [110214,110236]" dest="identifier: getDAOExitLockupEpochs [39127,39149]"/>
  <match src="identifier: a [3245,3246]" dest="identifier: a [3809,3810]"/>
  <match src="identifier: reason [107315,107321]" dest="identifier: reason [36228,36234]"/>
  <match src="returns: returns [102967,102974]" dest="returns: returns [31880,31887]"/>
  <match src="identifier: amount [107915,107921]" dest="identifier: amount [36828,36834]"/>
  <match src="visibility [11605,11613]" dest="visibility [21603,21611]"/>
  <match src=",: , [1271,1272]" dest=",: , [1835,1836]"/>
  <match src="member_expression [101091,101112]" dest="member_expression [30004,30025]"/>
  <match src="indexed: indexed [24305,24312]" dest="indexed: indexed [59810,59817]"/>
  <match src="binary_expression [45611,45632]" dest="binary_expression [50802,50823]"/>
  <match src="identifier: account [101864,101871]" dest="identifier: account [30777,30784]"/>
  <match src=".: . [107199,107200]" dest=".: . [36112,36113]"/>
  <match src="string [115142,115164]" dest="string [70086,70108]"/>
  <match src="address: address [61542,61549]" dest="address: address [60239,60246]"/>
  <match src="function: function [44840,44848]" dest="function: function [50031,50039]"/>
  <match src="identifier: sender [90210,90216]" dest="identifier: sender [73172,73178]"/>
  <match src="identifier: approve [113054,113061]" dest="identifier: approve [41967,41974]"/>
  <match src=",: , [62169,62170]" dest=",: , [19003,19004]"/>
  <match src="): ) [1371,1372]" dest="): ) [1935,1936]"/>
  <match src="(: ( [104146,104147]" dest="(: ( [33059,33060]"/>
  <match src="binary_expression [47465,47471]" dest="binary_expression [52656,52662]"/>
  <match src="=: = [74894,74895]" dest="=: = [67028,67029]"/>
  <match src="primitive_type [63093,63097]" dest="primitive_type [19927,19931]"/>
  <match src="]: ] [109472,109473]" dest="]: ] [38385,38386]"/>
  <match src="for: for [44197,44200]" dest="for: for [49388,49391]"/>
  <match src="visibility [63807,63815]" dest="visibility [20641,20649]"/>
  <match src="(: ( [103300,103301]" dest="(: ( [32213,32214]"/>
  <match src="=: = [111453,111454]" dest="=: = [40366,40367]"/>
  <match src="uint256: uint256 [53041,53048]" dest="uint256: uint256 [12154,12161]"/>
  <match src="parameter [111781,111799]" dest="parameter [40694,40712]"/>
  <match src="identifier: value [56449,56454]" dest="identifier: value [15562,15567]"/>
  <match src="identifier: externalAmount [31903,31917]" dest="identifier: debtRatio [17157,17166]"/>
  <match src="call_expression [104491,104525]" dest="call_expression [33404,33438]"/>
  <match src="visibility [62554,62562]" dest="visibility [19388,19396]"/>
  <match src="call_argument [88912,88922]" dest="call_argument [79007,79017]"/>
  <match src="uint256: uint256 [417,424]" dest="uint256: uint256 [981,988]"/>
  <match src="block_statement [44966,45001]" dest="block_statement [50157,50192]"/>
  <match src=".: . [102768,102769]" dest=".: . [31681,31682]"/>
  <match src="parameter [41146,41160]" dest="parameter [46337,46351]"/>
  <match src="{: { [105484,105485]" dest="{: { [34397,34398]"/>
  <match src="identifier: amount [108416,108422]" dest="identifier: amount [37329,37335]"/>
  <match src="): ) [102222,102223]" dest="): ) [31135,31136]"/>
  <match src="variable_declaration [74967,74977]" dest="variable_declaration [68626,68636]"/>
  <match src="parameter [109342,109355]" dest="parameter [38255,38268]"/>
  <match src="uint256: uint256 [96138,96145]" dest="uint256: uint256 [27356,27363]"/>
  <match src="binary_expression [2027,2032]" dest="binary_expression [2591,2596]"/>
  <match src="}: } [107413,107414]" dest="}: } [36326,36327]"/>
  <match src="(: ( [85205,85206]" dest="(: ( [60589,60590]"/>
  <match src="identifier: balance [107216,107223]" dest="identifier: balance [36129,36136]"/>
  <match src="for: for [79412,79415]" dest="for: for [78537,78540]"/>
  <match src="parameter [105575,105592]" dest="parameter [34488,34505]"/>
  <match src="(: ( [113702,113703]" dest="(: ( [42615,42616]"/>
  <match src="type_name [364,371]" dest="type_name [928,935]"/>
  <match src="using_directive [15814,15841]" dest="using_directive [59565,59592]"/>
  <match src="): ) [46748,46749]" dest="): ) [51939,51940]"/>
  <match src="function_definition [54278,54391]" dest="function_definition [13391,13504]"/>
  <match src="call_argument [20035,20075]" dest="call_argument [63615,63652]"/>
  <match src="uint256: uint256 [88877,88884]" dest="uint256: uint256 [72243,72250]"/>
  <match src="bool: bool [41766,41770]" dest="bool: bool [46957,46961]"/>
  <match src="primitive_type [63343,63347]" dest="primitive_type [20177,20181]"/>
  <match src="(: ( [81190,81191]" dest="(: ( [57801,57802]"/>
  <match src="primitive_type [64393,64400]" dest="primitive_type [21227,21234]"/>
  <match src="=: = [5722,5723]" dest="=: = [6286,6287]"/>
  <match src="private: private [52744,52751]" dest="private: private [11857,11864]"/>
  <match src="): ) [6963,6964]" dest="): ) [7527,7528]"/>
  <match src="call_argument [16643,16649]" dest="call_argument [55537,55543]"/>
  <match src=".: . [110178,110179]" dest=".: . [39091,39092]"/>
  <match src="event_paramater [88331,88354]" dest="event_paramater [71391,71414]"/>
  <match src="identifier: _ [76533,76534]" dest="identifier: _ [83886,83887]"/>
  <match src="primitive_type [62148,62155]" dest="primitive_type [18982,18989]"/>
  <match src="event_paramater [88275,88298]" dest="event_paramater [83223,83246]"/>
  <match src="visibility [6559,6567]" dest="visibility [7123,7131]"/>
  <match src="uint256: uint256 [44503,44510]" dest="uint256: uint256 [49694,49701]"/>
  <match src="): ) [47059,47060]" dest="): ) [52250,52251]"/>
  <match src="member_expression [111882,111924]" dest="member_expression [40795,40837]"/>
  <match src="identifier: RPAREN [43745,43751]" dest="identifier: RPAREN [48936,48942]"/>
  <match src="function: function [107708,107716]" dest="function: function [36621,36629]"/>
  <match src="identifier: supply [108352,108358]" dest="identifier: supply [37265,37271]"/>
  <match src="primitive_type [42702,42708]" dest="primitive_type [47893,47899]"/>
  <match src="function_body [21931,22188]" dest="function_body [64925,65139]"/>
  <match src="type_name [106882,106889]" dest="type_name [35795,35802]"/>
  <match src="internal: internal [7347,7355]" dest="internal: internal [7911,7919]"/>
  <match src="(: ( [43907,43908]" dest="(: ( [49098,49099]"/>
  <match src="): ) [91809,91810]" dest="): ) [63857,63858]"/>
  <match src="state_mutability [55065,55069]" dest="state_mutability [14178,14182]"/>
  <match src="call_expression [113668,113688]" dest="call_expression [42581,42601]"/>
  <match src="struct_declaration [52929,53035]" dest="struct_declaration [12042,12148]"/>
  <match src="return_statement [9587,9610]" dest="return_statement [10151,10174]"/>
  <match src="type_name [60906,60913]" dest="type_name [54372,54379]"/>
  <match src="state_mutability [5912,5916]" dest="state_mutability [6476,6480]"/>
  <match src="function: function [55135,55143]" dest="function: function [14248,14256]"/>
  <match src="call_struct_argument [56287,56327]" dest="call_struct_argument [15400,15440]"/>
  <match src="primitive_type [41170,41177]" dest="primitive_type [46361,46368]"/>
  <match src="function_definition [62910,62970]" dest="function_definition [19744,19804]"/>
  <match src="returns: returns [62568,62575]" dest="returns: returns [19402,19409]"/>
  <match src="{: { [88924,88925]" dest="{: { [72298,72299]"/>
  <match src="block_statement [113726,113797]" dest="block_statement [42639,42710]"/>
  <match src=",: , [90046,90047]" dest=",: , [73920,73921]"/>
  <match src="call_expression [6404,6426]" dest="call_expression [6968,6990]"/>
  <match src="primitive_type [62250,62257]" dest="primitive_type [19084,19091]"/>
  <match src="call_argument [42791,42795]" dest="call_argument [47982,47986]"/>
  <match src="user_defined_type [96278,96285]" dest="user_defined_type [27496,27503]"/>
  <match src="identifier: value [89121,89126]" dest="identifier: value [72474,72479]"/>
  <match src="return: return [102479,102485]" dest="return: return [31392,31398]"/>
  <match src="external: external [106789,106797]" dest="external: external [35702,35710]"/>
  <match src="=: = [47035,47036]" dest="=: = [52226,52227]"/>
  <match src="memory: memory [107992,107998]" dest="memory: memory [36905,36911]"/>
  <match src="identifier: one [36010,36013]" dest="identifier: one [18792,18795]"/>
  <match src="function: function [54188,54196]" dest="function: function [13301,13309]"/>
  <match src="type_cast_expression [46083,46106]" dest="type_cast_expression [51274,51297]"/>
  <match src="identifier: mul [6237,6240]" dest="identifier: mul [6801,6804]"/>
  <match src=".: . [107511,107512]" dest=".: . [36424,36425]"/>
  <match src="struct_member [95566,95585]" dest="struct_member [26784,26803]"/>
  <match src="parameter [55341,55360]" dest="parameter [14454,14473]"/>
  <match src="call_argument [43669,43674]" dest="call_argument [48860,48865]"/>
  <match src="internal: internal [56212,56220]" dest="internal: internal [15325,15333]"/>
  <match src="expression_statement [89212,89249]" dest="expression_statement [72308,72345]"/>
  <match src="binary_expression [9060,9083]" dest="binary_expression [9624,9647]"/>
  <match src="function_body [55862,55909]" dest="function_body [14975,15022]"/>
  <match src="primitive_type [80558,80565]" dest="primitive_type [82065,82072]"/>
  <match src="identifier: valid [74972,74977]" dest="identifier: valid [68631,68636]"/>
  <match src="expression_statement [90846,90861]" dest="expression_statement [54822,54837]"/>
  <match src="call_argument [110669,110675]" dest="call_argument [39582,39588]"/>
  <match src="member_expression [100988,101003]" dest="member_expression [29901,29916]"/>
  <match src="member_expression [107185,107199]" dest="member_expression [36098,36112]"/>
  <match src="call_expression [107656,107695]" dest="call_expression [36569,36608]"/>
  <match src=",: , [110297,110298]" dest=",: , [39210,39211]"/>
  <match src="=: = [107772,107773]" dest="=: = [36685,36686]"/>
  <match src="function_body [100529,100574]" dest="function_body [29442,29487]"/>
  <match src="return_type_definition [71937,71972]" dest="return_type_definition [25750,25785]"/>
  <match src="type_name [62270,62274]" dest="type_name [19104,19108]"/>
  <match src="identifier: div [9719,9722]" dest="identifier: div [10283,10286]"/>
  <match src="member_expression [108573,108588]" dest="member_expression [37486,37501]"/>
  <match src="identifier: div [2663,2666]" dest="identifier: div [3227,3230]"/>
  <match src="==: == [102224,102226]" dest="==: == [31137,31139]"/>
  <match src="identifier: normalizedPrice [111455,111470]" dest="identifier: normalizedPrice [40368,40383]"/>
  <match src=".: . [101311,101312]" dest=".: . [30224,30225]"/>
  <match src="call_argument [32841,32847]" dest="call_argument [17391,17397]"/>
  <match src="visibility [1301,1309]" dest="visibility [1865,1873]"/>
  <match src="=: = [112191,112192]" dest="=: = [41104,41105]"/>
  <match src="comment: // for more details about how this works. [94324,94365]" dest="comment: // for more details about how this works. [75182,75223]"/>
  <match src="identifier: incrementApproveFor [112707,112726]" dest="identifier: incrementApproveFor [41620,41639]"/>
  <match src=",: , [8398,8399]" dest=",: , [8962,8963]"/>
  <match src="primitive_type [53218,53225]" dest="primitive_type [12331,12338]"/>
  <match src="): ) [90112,90113]" dest="): ) [73043,73044]"/>
  <match src="identifier: COMMA [42347,42352]" dest="identifier: COMMA [47538,47543]"/>
  <match src="identifier: bonded [107224,107230]" dest="identifier: bonded [36137,36143]"/>
  <match src="call_argument [39219,39225]" dest="call_argument [44410,44416]"/>
  <match src="type_name [63261,63265]" dest="type_name [20095,20099]"/>
  <match src="function: function [62674,62682]" dest="function: function [19508,19516]"/>
  <match src="!: ! [40039,40040]" dest="!: ! [45230,45231]"/>
  <match src="}: } [2708,2709]" dest="}: } [3272,3273]"/>
  <match src="function_definition [94005,94621]" dest="function_definition [74863,75479]"/>
  <match src="{: { [9321,9322]" dest="{: { [9885,9886]"/>
  <match src="internal: internal [56773,56781]" dest="internal: internal [15886,15894]"/>
  <match src="identifier: balance [96585,96592]" dest="identifier: balance [27803,27810]"/>
  <match src="call_argument [47429,47446]" dest="call_argument [52620,52637]"/>
  <match src="number_literal: 1 [90907,90908]" dest="number_literal: 1 [73464,73465]"/>
  <match src="contract_body [59783,60020]" dest="contract_body [24757,24994]"/>
  <match src="call_argument [109262,109268]" dest="call_argument [38175,38181]"/>
  <match src="internal: internal [27659,27667]" dest="internal: internal [66983,66991]"/>
  <match src="user_defined_type [55341,55353]" dest="user_defined_type [14454,14466]"/>
  <match src="): ) [47249,47250]" dest="): ) [52440,52441]"/>
  <match src="parameter [62691,62706]" dest="parameter [19525,19540]"/>
  <match src="primitive_type [91427,91434]" dest="primitive_type [60824,60831]"/>
  <match src="variable_declaration [33429,33463]" dest="variable_declaration [67548,67573]"/>
  <match src="identifier: epoch [109467,109472]" dest="identifier: epoch [38380,38385]"/>
  <match src="visibility [98861,98868]" dest="visibility [77511,77518]"/>
  <match src="visibility [28507,28515]" dest="visibility [78979,78987]"/>
  <match src="call_argument [107392,107398]" dest="call_argument [36305,36311]"/>
  <match src="call_argument [113653,113662]" dest="call_argument [42566,42575]"/>
  <match src="function_definition [103687,103824]" dest="function_definition [32600,32737]"/>
  <match src="): ) [104436,104437]" dest="): ) [33349,33350]"/>
  <match src="identifier: self [7048,7052]" dest="identifier: self [7612,7616]"/>
  <match src="return_type_definition [12425,12442]" dest="return_type_definition [22423,22440]"/>
  <match src="state_mutability [55607,55611]" dest="state_mutability [14720,14724]"/>
  <match src="uint256: uint256 [78115,78122]" dest="uint256: uint256 [66839,66846]"/>
  <match src="call_argument [115376,115392]" dest="call_argument [70320,70336]"/>
  <match src="type_name [15940,15947]" dest="type_name [59668,59675]"/>
  <match src="identifier: accounts [109124,109132]" dest="identifier: accounts [38037,38045]"/>
  <match src="visibility [56672,56680]" dest="visibility [15785,15793]"/>
  <match src="pure: pure [65565,65569]" dest="pure: pure [17092,17096]"/>
  <match src="identifier: epoch [110994,110999]" dest="identifier: epoch [39907,39912]"/>
  <match src="type_name [52736,52743]" dest="type_name [11849,11856]"/>
  <match src="): ) [104009,104010]" dest="): ) [32922,32923]"/>
  <match src="comment: // ': ' [38643,38650]" dest="comment: // ': ' [43834,43841]"/>
  <match src="identifier: self [7849,7853]" dest="identifier: self [8413,8417]"/>
  <match src="[: [ [103932,103933]" dest="[: [ [32845,32846]"/>
  <match src="): ) [102852,102853]" dest="): ) [31765,31766]"/>
  <match src="return_statement [7945,7993]" dest="return_statement [8509,8557]"/>
  <match src="identifier: account [59857,59864]" dest="identifier: account [24831,24838]"/>
  <match src="function_definition [64379,64414]" dest="function_definition [21213,21248]"/>
  <match src="call_expression [9193,9211]" dest="call_expression [9757,9775]"/>
  <match src="external: external [63867,63875]" dest="external: external [20701,20709]"/>
  <match src="identifier: amount [33590,33596]" dest="identifier: amount [61528,61534]"/>
  <match src="): ) [89499,89500]" dest="): ) [72590,72591]"/>
  <match src="uint256: uint256 [88300,88307]" dest="uint256: uint256 [60175,60182]"/>
  <match src="bytes32: bytes32 [41146,41153]" dest="bytes32: bytes32 [46337,46344]"/>
  <match src="): ) [46837,46838]" dest="): ) [52028,52029]"/>
  <match src="): ) [46972,46973]" dest="): ) [52163,52164]"/>
  <match src="type_name [40546,40550]" dest="type_name [45737,45741]"/>
  <match src="==: == [9079,9081]" dest="==: == [9643,9645]"/>
  <match src="identifier: INITIAL_COUPON_REDEMPTION_PENALTY [53890,53923]" dest="identifier: INITIAL_COUPON_REDEMPTION_PENALTY [13003,13036]"/>
  <match src="type_name [96089,96096]" dest="type_name [27307,27314]"/>
  <match src="primitive_type [53655,53662]" dest="primitive_type [12768,12775]"/>
  <match src="binary_expression [3403,3408]" dest="binary_expression [3967,3972]"/>
  <match src="]: ] [95848,95849]" dest="]: ] [27066,27067]"/>
  <match src="string_literal [76503,76512]" dest="string_literal [80639,80654]"/>
  <match src=".: . [104364,104365]" dest=".: . [33277,33278]"/>
  <match src="call_expression [29950,29970]" dest="call_expression [18416,18431]"/>
  <match src="call_expression [32027,32053]" dest="call_expression [17169,17206]"/>
  <match src="type_name [106754,106761]" dest="type_name [35667,35674]"/>
  <match src="&quot;: &quot; [89954,89955]" dest="&quot;: &quot; [72898,72899]"/>
  <match src="indexed: indexed [13997,14004]" dest="indexed: indexed [23995,24002]"/>
  <match src="identifier: balance [112200,112207]" dest="identifier: balance [41113,41120]"/>
  <match src="primitive_type [86741,86748]" dest="primitive_type [78939,78946]"/>
  <match src="{: { [96246,96247]" dest="{: { [27464,27465]"/>
  <match src="function: function [4638,4646]" dest="function: function [5202,5210]"/>
  <match src="array_access [113416,113444]" dest="array_access [42329,42357]"/>
  <match src="return_type_definition [101368,101385]" dest="return_type_definition [30281,30298]"/>
  <match src=".: . [112182,112183]" dest=".: . [41095,41096]"/>
  <match src="address: address [28093,28100]" dest="address: address [54874,54881]"/>
  <match src="{: { [2646,2647]" dest="{: { [3210,3211]"/>
  <match src="identifier: amount [20027,20033]" dest="identifier: couponEpoch [63588,63599]"/>
  <match src="if_statement [81202,81257]" dest="if_statement [61903,61973]"/>
  <match src="primitive_type [25602,25609]" dest="primitive_type [60132,60139]"/>
  <match src=",: , [9831,9832]" dest=",: , [10395,10396]"/>
  <match src="(: ( [98886,98887]" dest="(: ( [77536,77537]"/>
  <match src=",: , [64342,64343]" dest=",: , [21176,21177]"/>
  <match src="state_mutability [4050,4054]" dest="state_mutability [4614,4618]"/>
  <match src="call_expression [92167,92333]" dest="call_expression [57727,57910]"/>
  <match src="state_variable_declaration [38699,38731]" dest="state_variable_declaration [43890,43922]"/>
  <match src="member_expression [108026,108051]" dest="member_expression [36939,36964]"/>
  <match src="primitive_type [112393,112400]" dest="primitive_type [41306,41313]"/>
  <match src="return: return [107064,107070]" dest="return: return [35977,35983]"/>
  <match src="return: return [1986,1992]" dest="return: return [2550,2556]"/>
  <match src="identifier: epochs [104365,104371]" dest="identifier: epochs [33278,33284]"/>
  <match src="): ) [107241,107242]" dest="): ) [36154,36155]"/>
  <match src="}: } [9615,9616]" dest="}: } [10179,10180]"/>
  <match src=".: . [102598,102599]" dest=".: . [31511,31512]"/>
  <match src="{: { [8565,8566]" dest="{: { [9129,9130]"/>
  <match src="uint256: uint256 [89591,89598]" dest="uint256: uint256 [62700,62707]"/>
  <match src="yul_function_call [44650,44672]" dest="yul_function_call [49841,49863]"/>
  <match src="function_definition [55567,55671]" dest="function_definition [14680,14784]"/>
  <match src="identifier: epoch [111024,111029]" dest="identifier: epoch [39937,39942]"/>
  <match src="{: { [100414,100415]" dest="{: { [29327,29328]"/>
  <match src="identifier: oracle [116524,116530]" dest="identifier: oracle [68640,68646]"/>
  <match src="uint256: uint256 [100405,100412]" dest="uint256: uint256 [29318,29325]"/>
  <match src="identifier: reason [108618,108624]" dest="identifier: reason [37531,37537]"/>
  <match src="): ) [62902,62903]" dest="): ) [19736,19737]"/>
  <match src="identifier: sender [91770,91776]" dest="identifier: sender [63837,63843]"/>
  <match src="modifier_definition [115199,115412]" dest="modifier_definition [70143,70356]"/>
  <match src="identifier: ASCII_RELATIVE_ZERO [47941,47960]" dest="identifier: ASCII_RELATIVE_ZERO [53132,53151]"/>
  <match src="identifier: self [9489,9493]" dest="identifier: self [10053,10057]"/>
  <match src="primitive_type [52984,52991]" dest="primitive_type [12097,12104]"/>
  <match src="if_statement [74025,74181]" dest="if_statement [68780,68837]"/>
  <match src="(: ( [56396,56397]" dest="(: ( [15509,15510]"/>
  <match src="identifier: to [64229,64231]" dest="identifier: to [21063,21065]"/>
  <match src="string_literal [98552,98566]" dest="string_literal [77202,77216]"/>
  <match src="(: ( [63572,63573]" dest="(: ( [20406,20407]"/>
  <match src="call_argument [90996,91006]" dest="call_argument [72958,72968]"/>
  <match src="internal: internal [6559,6567]" dest="internal: internal [7123,7131]"/>
  <match src="yul_function_call [105837,105848]" dest="yul_function_call [34750,34761]"/>
  <match src="identifier: Provider [96602,96610]" dest="identifier: Provider [27820,27828]"/>
  <match src="identifier: timestamp [103177,103186]" dest="identifier: timestamp [32090,32099]"/>
  <match src="type_name [102720,102727]" dest="type_name [31633,31640]"/>
  <match src="parameter [62842,62854]" dest="parameter [19676,19688]"/>
  <match src="type_name [110504,110510]" dest="type_name [39417,39423]"/>
  <match src="call_expression [103376,103413]" dest="call_expression [32289,32326]"/>
  <match src="(: ( [45764,45765]" dest="(: ( [50955,50956]"/>
  <match src="(: ( [47830,47831]" dest="(: ( [53021,53022]"/>
  <match src="identifier: D256 [7646,7650]" dest="identifier: D256 [8210,8214]"/>
  <match src="(: ( [89229,89230]" dest="(: ( [72325,72326]"/>
  <match src="contract_declaration [99814,105866]" dest="contract_declaration [28727,34779]"/>
  <match src="identifier: value [8599,8604]" dest="identifier: value [9163,9168]"/>
  <match src="visibility [43941,43948]" dest="visibility [49132,49139]"/>
  <match src="type_alias [99852,99860]" dest="type_alias [28765,28773]"/>
  <match src="(: ( [39453,39454]" dest="(: ( [44644,44645]"/>
  <match src="return_type_definition [55070,55087]" dest="return_type_definition [14183,14200]"/>
  <match src="indexed: indexed [88508,88515]" dest="indexed: indexed [78875,78882]"/>
  <match src=".: . [91285,91286]" dest=".: . [80765,80766]"/>
  <match src="type_name [53271,53278]" dest="type_name [12384,12391]"/>
  <match src="): ) [7442,7443]" dest="): ) [8006,8007]"/>
  <match src="identifier: result [46683,46689]" dest="identifier: result [51874,51880]"/>
  <match src="identifier: account [88347,88354]" dest="identifier: account [71407,71414]"/>
  <match src="primitive_type [99865,99872]" dest="primitive_type [28778,28785]"/>
  <match src="parameter [43088,43097]" dest="parameter [48279,48288]"/>
  <match src="identifier: _state [103919,103925]" dest="identifier: _state [32832,32838]"/>
  <match src="(: ( [88692,88693]" dest="(: ( [83385,83386]"/>
  <match src="member_expression [112986,113022]" dest="member_expression [41899,41935]"/>
  <match src="(: ( [41310,41311]" dest="(: ( [46501,46502]"/>
  <match src="identifier: epoch [104155,104160]" dest="identifier: epoch [33068,33073]"/>
  <match src="primitive_type [19753,19760]" dest="primitive_type [65170,65177]"/>
  <match src="call_argument [91304,91342]" dest="call_argument [79055,79080]"/>
  <match src="primitive_type [31111,31118]" dest="primitive_type [58555,58562]"/>
  <match src="identifier: Epoch [95633,95638]" dest="identifier: Epoch [26851,26856]"/>
  <match src="function_definition [5995,6107]" dest="function_definition [6559,6671]"/>
  <match src="parameter [101894,101901]" dest="parameter [30807,30814]"/>
  <match src="call_argument [39650,39676]" dest="call_argument [44841,44867]"/>
  <match src="address: address [62228,62235]" dest="address: address [19062,19069]"/>
  <match src="identifier: amount [33335,33341]" dest="identifier: amount [57953,57959]"/>
  <match src="visibility [28110,28116]" dest="visibility [61421,61427]"/>
  <match src="user_defined_type [8649,8653]" dest="user_defined_type [9213,9217]"/>
  <match src="type_name [63830,63837]" dest="type_name [20664,20671]"/>
  <match src="identifier: D256 [34284,34288]" dest="identifier: D256 [17956,17960]"/>
  <match src="identifier: period [112511,112517]" dest="identifier: period [41424,41430]"/>
  <match src="identifier: reason [6952,6958]" dest="identifier: reason [7516,7522]"/>
  <match src="return_type_definition [75261,75290]" dest="return_type_definition [68558,68587]"/>
  <match src="call_argument [40954,40973]" dest="call_argument [46145,46164]"/>
  <match src="}: } [7998,7999]" dest="}: } [8562,8563]"/>
  <match src="member_expression [7679,7689]" dest="member_expression [8243,8253]"/>
  <match src="member_expression [92167,92179]" dest="member_expression [57727,57739]"/>
  <match src="type_alias [5629,5637]" dest="type_alias [6193,6201]"/>
  <match src="function_definition [64024,64085]" dest="function_definition [20858,20919]"/>
  <match src="variable_declaration [66284,66290]" dest="variable_declaration [64352,64367]"/>
  <match src="identifier: MINIMUM_LIQUIDITY [63624,63641]" dest="identifier: MINIMUM_LIQUIDITY [20458,20475]"/>
  <match src="assignment_expression [113378,113471]" dest="assignment_expression [42291,42384]"/>
  <match src="{: { [7575,7576]" dest="{: { [8139,8140]"/>
  <match src="identifier: IOracle [100864,100871]" dest="identifier: IOracle [29777,29784]"/>
  <match src="function: function [104741,104749]" dest="function: function [33654,33662]"/>
  <match src="(: ( [62301,62302]" dest="(: ( [19135,19136]"/>
  <match src="event_paramater [106675,106688]" dest="event_paramater [35588,35601]"/>
  <match src="memory: memory [10042,10048]" dest="memory: memory [10606,10612]"/>
  <match src="visibility [55056,55064]" dest="visibility [14169,14177]"/>
  <match src="identifier: incrementBalanceOfBonded [89798,89822]" dest="identifier: decrementBalanceOf [73347,73365]"/>
  <match src="string_literal [91374,91405]" dest="string_literal [80835,80846]"/>
  <match src="{: { [104203,104204]" dest="{: { [33116,33117]"/>
  <match src="return: return [56714,56720]" dest="return: return [15827,15833]"/>
  <match src="identifier: stringify [41539,41548]" dest="identifier: stringify [46730,46739]"/>
  <match src="identifier: that [41752,41756]" dest="identifier: that [46943,46947]"/>
  <match src="expression_statement [115404,115406]" dest="expression_statement [70348,70350]"/>
  <match src="call_argument [7261,7262]" dest="call_argument [7825,7826]"/>
  <match src="identifier: target [9825,9831]" dest="identifier: target [10389,10395]"/>
  <match src="identifier: Approval [13980,13988]" dest="identifier: Approval [23978,23986]"/>
  <match src="parameter [34863,34905]" dest="parameter [67833,67858]"/>
  <match src="=: = [46371,46372]" dest="=: = [51562,51563]"/>
  <match src="function_definition [21856,22188]" dest="function_definition [64859,65139]"/>
  <match src="visibility [7527,7535]" dest="visibility [8091,8099]"/>
  <match src="primitive_type [55969,55976]" dest="primitive_type [15082,15089]"/>
  <match src="visibility [63867,63875]" dest="visibility [20701,20709]"/>
  <match src="identifier: candidate [105033,105042]" dest="identifier: candidate [33946,33955]"/>
  <match src="call_argument [89190,89200]" dest="call_argument [72286,72296]"/>
  <match src="variable_declaration [81347,81383]" dest="variable_declaration [71803,71831]"/>
  <match src="function_definition [7815,7999]" dest="function_definition [8379,8563]"/>
  <match src="internal: internal [8495,8503]" dest="internal: internal [9059,9067]"/>
  <match src=".: . [41335,41336]" dest=".: . [46526,46527]"/>
  <match src="&quot;: &quot; [100254,100255]" dest="&quot;: &quot; [29167,29168]"/>
  <match src="variable_declaration [45984,46003]" dest="variable_declaration [51175,51194]"/>
  <match src="constant: constant [38465,38473]" dest="constant: constant [43656,43664]"/>
  <match src="): ) [89247,89248]" dest="): ) [72343,72344]"/>
  <match src="function_definition [101021,101119]" dest="function_definition [29934,30032]"/>
  <match src="identifier: amount [59811,59817]" dest="identifier: amount [24785,24791]"/>
  <match src="memory: memory [6785,6791]" dest="memory: memory [7349,7355]"/>
  <match src=".: . [112604,112605]" dest=".: . [41517,41518]"/>
  <match src="identifier: D256 [9530,9534]" dest="identifier: D256 [10094,10098]"/>
  <match src="visibility [110880,110888]" dest="visibility [39793,39801]"/>
  <match src="type_cast_expression [39499,39825]" dest="type_cast_expression [44690,45016]"/>
  <match src="uint8: uint8 [62451,62456]" dest="uint8: uint8 [19285,19290]"/>
  <match src="call_argument [114877,114898]" dest="call_argument [69821,69842]"/>
  <match src="primitive_type [52382,52389]" dest="primitive_type [11495,11502]"/>
  <match src="}: } [40510,40511]" dest="}: } [45701,45702]"/>
  <match src="bytes32: bytes32 [43129,43136]" dest="bytes32: bytes32 [48320,48327]"/>
  <match src="identifier: char [46608,46612]" dest="identifier: char [51799,51803]"/>
  <match src="indexed: indexed [63245,63252]" dest="indexed: indexed [20079,20086]"/>
  <match src="returns: returns [45819,45826]" dest="returns: returns [51010,51017]"/>
  <match src=",: , [58886,58887]" dest=",: , [64558,64559]"/>
  <match src="returns: returns [102166,102173]" dest="returns: returns [31079,31086]"/>
  <match src=",: , [39916,39917]" dest=",: , [45107,45108]"/>
  <match src="binary_expression [46613,46630]" dest="binary_expression [51804,51821]"/>
  <match src="identifier: SafeMath [103,111]" dest="identifier: SafeMath [667,675]"/>
  <match src=",: , [41136,41137]" dest=",: , [46327,46328]"/>
  <match src="): ) [9012,9013]" dest="): ) [9576,9577]"/>
  <match src="return_statement [44730,44744]" dest="return_statement [49921,49935]"/>
  <match src="primitive_type [101913,101920]" dest="primitive_type [30826,30833]"/>
  <match src="primitive_type [64186,64190]" dest="primitive_type [21020,21024]"/>
  <match src=".: . [115239,115240]" dest=".: . [70183,70184]"/>
  <match src=",: , [113335,113336]" dest=",: , [42248,42249]"/>
  <match src="call_argument [83986,83992]" dest="call_argument [65574,65580]"/>
  <match src="identifier: epochStrategy [111363,111376]" dest="identifier: epochStrategy [40276,40289]"/>
  <match src="function_definition [45746,46696]" dest="function_definition [50937,51887]"/>
  <match src="public: public [101567,101573]" dest="public: public [30480,30486]"/>
  <match src="identifier: pair [71987,71991]" dest="identifier: pair [25800,25804]"/>
  <match src="(: ( [92218,92219]" dest="(: ( [57779,57780]"/>
  <match src="call_expression [45231,45248]" dest="call_expression [50422,50439]"/>
  <match src="uint8: uint8 [46133,46138]" dest="uint8: uint8 [51324,51329]"/>
  <match src="=: = [44212,44213]" dest="=: = [49403,49404]"/>
  <match src=".: . [30719,30720]" dest=".: . [18830,18831]"/>
  <match src="call_argument [42080,42084]" dest="call_argument [47271,47275]"/>
  <match src="{: { [7237,7238]" dest="{: { [7801,7802]"/>
  <match src="identifier: externalAmount [34811,34825]" dest="identifier: price [67523,67528]"/>
  <match src="parameter [88877,88890]" dest="parameter [72243,72256]"/>
  <match src="type_name [112374,112381]" dest="type_name [41287,41294]"/>
  <match src="[: [ [104719,104720]" dest="[: [ [33632,33633]"/>
  <match src="identifier: _state [110814,110820]" dest="identifier: _state [39727,39733]"/>
  <match src="identifier: balance [107373,107380]" dest="identifier: balance [36286,36293]"/>
  <match src=".: . [107372,107373]" dest=".: . [36285,36286]"/>
  <match src="uint256: uint256 [104162,104169]" dest="uint256: uint256 [33075,33082]"/>
  <match src="uint: uint [63667,63671]" dest="uint: uint [20501,20505]"/>
  <match src="(: ( [71991,71992]" dest="(: ( [25804,25805]"/>
  <match src="call_expression [105383,105403]" dest="call_expression [34296,34316]"/>
  <match src="(: ( [6186,6187]" dest="(: ( [6750,6751]"/>
  <match src="call_expression [56273,56329]" dest="call_expression [15386,15442]"/>
  <match src="): ) [115352,115353]" dest="): ) [70296,70297]"/>
  <match src=".: . [56242,56243]" dest=".: . [15355,15356]"/>
  <match src="&quot;: &quot; [98946,98947]" dest="&quot;: &quot; [77596,77597]"/>
  <match src="identifier: getSupplyChangeLimit [56351,56371]" dest="identifier: getSupplyChangeLimit [15464,15484]"/>
  <match src="identifier: currentLock [113713,113724]" dest="identifier: currentLock [42626,42637]"/>
  <match src="primitive_type [94065,94069]" dest="primitive_type [74923,74927]"/>
  <match src="identifier: SUPPLY_CHANGE_DIVISOR [56606,56627]" dest="identifier: SUPPLY_CHANGE_DIVISOR [15719,15740]"/>
  <match src="type_cast_expression [43313,43791]" dest="type_cast_expression [48504,48982]"/>
  <match src="array_access [109434,109458]" dest="array_access [38347,38371]"/>
  <match src="expression_statement [58005,58121]" dest="expression_statement [54535,54589]"/>
  <match src="private: private [52390,52397]" dest="private: private [11503,11510]"/>
  <match src=".: . [7052,7053]" dest=".: . [7616,7617]"/>
  <match src="expression_statement [89798,89842]" dest="expression_statement [73347,73418]"/>
  <match src="identifier: getEpochStrategy [54406,54422]" dest="identifier: getEpochStrategy [13519,13535]"/>
  <match src="return: return [8919,8925]" dest="return: return [9483,9489]"/>
  <match src="): ) [55596,55597]" dest="): ) [14709,14710]"/>
  <match src="number_literal: 0 [112300,112301]" dest="number_literal: 0 [41213,41214]"/>
  <match src="indexed: indexed [62179,62186]" dest="indexed: indexed [19013,19020]"/>
  <match src="(: ( [101855,101856]" dest="(: ( [30768,30769]"/>
  <match src="{: { [43254,43255]" dest="{: { [48445,48446]"/>
  <match src="string: string [4673,4679]" dest="string: string [5237,5243]"/>
  <match src="=: = [101933,101934]" dest="=: = [30846,30847]"/>
  <match src="call_expression [103052,103066]" dest="call_expression [31965,31979]"/>
  <match src="variable_declaration [86910,86923]" dest="variable_declaration [63672,63687]"/>
  <match src="{: { [56096,56097]" dest="{: { [15209,15210]"/>
  <match src="member_expression [112193,112215]" dest="member_expression [41106,41128]"/>
  <match src=".: . [112992,112993]" dest=".: . [41905,41906]"/>
  <match src="{: { [40025,40026]" dest="{: { [45216,45217]"/>
  <match src="member_expression [6235,6240]" dest="member_expression [6799,6804]"/>
  <match src="primitive_type [86910,86914]" dest="primitive_type [63672,63676]"/>
  <match src="uint256: uint256 [43205,43212]" dest="uint256: uint256 [48396,48403]"/>
  <match src="{: { [109786,109787]" dest="{: { [38699,38700]"/>
  <match src="identifier: State [106564,106569]" dest="identifier: State [35477,35482]"/>
  <match src="identifier: getDebtRatioCap [56034,56049]" dest="identifier: getDebtRatioCap [15147,15162]"/>
  <match src="uint256: uint256 [95475,95482]" dest="uint256: uint256 [26693,26700]"/>
  <match src="identifier: msg [90682,90685]" dest="identifier: msg [63232,63235]"/>
  <match src="array_access [46449,46467]" dest="array_access [51640,51658]"/>
  <match src="identifier: recipient [13523,13532]" dest="identifier: recipient [23521,23530]"/>
  <match src="memory: memory [8852,8858]" dest="memory: memory [9416,9422]"/>
  <match src="call_argument [35960,35961]" dest="call_argument [80745,80746]"/>
  <match src="(: ( [39481,39482]" dest="(: ( [44672,44673]"/>
  <match src="identifier: candidates [104832,104842]" dest="identifier: candidates [33745,33755]"/>
  <match src="bytes: bytes [64344,64349]" dest="bytes: bytes [21178,21183]"/>
  <match src="): ) [86148,86149]" dest="): ) [55700,55701]"/>
  <match src="=: = [38677,38678]" dest="=: = [43868,43869]"/>
  <match src=".: . [58826,58827]" dest=".: . [64496,64497]"/>
  <match src="function: function [56490,56498]" dest="function: function [15603,15611]"/>
  <match src="visibility [55479,55487]" dest="visibility [14592,14600]"/>
  <match src="assignment_expression [112635,112685]" dest="assignment_expression [41548,41598]"/>
  <match src="identifier: add [103643,103646]" dest="identifier: add [32556,32559]"/>
  <match src=".: . [113384,113385]" dest=".: . [42297,42298]"/>
  <match src="primitive_type [41146,41153]" dest="primitive_type [46337,46344]"/>
  <match src="type_name [23131,23138]" dest="type_name [17063,17070]"/>
  <match src="call_expression [74149,74162]" dest="call_expression [68813,68826]"/>
  <match src=",: , [22172,22173]" dest=",: , [65123,65124]"/>
  <match src="call_argument [42061,42085]" dest="call_argument [47252,47276]"/>
  <match src="identifier: Status [114832,114838]" dest="identifier: Status [69776,69782]"/>
  <match src="): ) [39265,39266]" dest="): ) [44456,44457]"/>
  <match src="pure: pure [63653,63657]" dest="pure: pure [20487,20491]"/>
  <match src="parameter [105025,105042]" dest="parameter [33938,33955]"/>
  <match src="memory: memory [6898,6904]" dest="memory: memory [7462,7468]"/>
  <match src="state_mutability [8310,8314]" dest="state_mutability [8874,8878]"/>
  <match src=".: . [108665,108666]" dest=".: . [37578,37579]"/>
  <match src="memory: memory [9535,9541]" dest="memory: memory [10099,10105]"/>
  <match src="identifier: _state [105225,105231]" dest="identifier: _state [34138,34144]"/>
  <match src=",: , [62268,62269]" dest=",: , [19102,19103]"/>
  <match src="expression_statement [58935,59028]" dest="expression_statement [54730,54812]"/>
  <match src="-: - [61236,61237]" dest="-: - [65668,65669]"/>
  <match src="(: ( [46093,46094]" dest="(: ( [51284,51285]"/>
  <match src="memory: memory [8273,8279]" dest="memory: memory [8837,8843]"/>
  <match src="address: address [106995,107002]" dest="address: address [35908,35915]"/>
  <match src="): ) [39806,39807]" dest="): ) [44997,44998]"/>
  <match src="parameter [32520,32534]" dest="parameter [58370,58384]"/>
  <match src="(: ( [103567,103568]" dest="(: ( [32480,32481]"/>
  <match src="primitive_type [40611,40618]" dest="primitive_type [45802,45809]"/>
  <match src="memory: memory [34289,34295]" dest="memory: memory [17961,17967]"/>
  <match src="parameter [45774,45787]" dest="parameter [50965,50978]"/>
  <match src="address: address [52648,52655]" dest="address: address [11761,11768]"/>
  <match src="type_name [45984,45989]" dest="type_name [51175,51180]"/>
  <match src="identifier: reject [113407,113413]" dest="identifier: reject [42320,42326]"/>
  <match src="if: if [103297,103299]" dest="if: if [32210,32212]"/>
  <match src="function_body [108214,108430]" dest="function_body [37127,37343]"/>
  <match src="address: address [62691,62698]" dest="address: address [19525,19532]"/>
  <match src="identifier: D256 [7034,7038]" dest="identifier: D256 [7598,7602]"/>
  <match src="identifier: mul [9965,9968]" dest="identifier: mul [10529,10532]"/>
  <match src="primitive_type [104332,104339]" dest="primitive_type [33245,33252]"/>
  <match src="constant: constant [97879,97887]" dest="constant: constant [76529,76537]"/>
  <match src="member_expression [112193,112219]" dest="member_expression [41106,41132]"/>
  <match src="type_name [31991,32003]" dest="type_name [67878,67890]"/>
  <match src="return_statement [100424,100464]" dest="return_statement [29337,29377]"/>
  <match src="state_mutability [100506,100510]" dest="state_mutability [29419,29423]"/>
  <match src="type_name [108481,108488]" dest="type_name [37394,37401]"/>
  <match src="type_name [59925,59932]" dest="type_name [24899,24906]"/>
  <match src="function: function [103687,103695]" dest="function: function [32600,32608]"/>
  <match src="identifier: value [7419,7424]" dest="identifier: value [7983,7988]"/>
  <match src=".: . [100560,100561]" dest=".: . [29473,29474]"/>
  <match src="event_paramater [24297,24320]" dest="event_paramater [59802,59825]"/>
  <match src="call_argument [6084,6099]" dest="call_argument [6648,6663]"/>
  <match src="identifier: Require [58935,58942]" dest="identifier: Require [62905,62912]"/>
  <match src="visibility [9898,9905]" dest="visibility [10462,10469]"/>
  <match src="function_definition [62463,62515]" dest="function_definition [19297,19349]"/>
  <match src="private: private [72784,72791]" dest="private: private [78599,78606]"/>
  <match src="memory: memory [7842,7848]" dest="memory: memory [8406,8412]"/>
  <match src="view: view [63761,63765]" dest="view: view [20595,20599]"/>
  <match src="parameter [110456,110469]" dest="parameter [39369,39382]"/>
  <match src="private: private [88107,88114]" dest="private: private [71123,71130]"/>
  <match src="(: ( [111256,111257]" dest="(: ( [40169,40170]"/>
  <match src="primitive_type [58229,58236]" dest="primitive_type [61602,61609]"/>
  <match src="function_body [111661,111723]" dest="function_body [40574,40636]"/>
  <match src="): ) [13548,13549]" dest="): ) [23546,23547]"/>
  <match src="identifier: owner [110367,110372]" dest="identifier: owner [39280,39285]"/>
  <match src="member_expression [56435,56447]" dest="member_expression [15548,15560]"/>
  <match src="identifier: totalRedeemable [101338,101353]" dest="identifier: totalRedeemable [30251,30266]"/>
  <match src="identifier: DAI [54262,54265]" dest="identifier: DAI [13375,13378]"/>
  <match src="expression_statement [19823,19894]" dest="expression_statement [65255,65334]"/>
  <match src="identifier: Decimal [27676,27683]" dest="identifier: Decimal [67243,67250]"/>
  <match src="call_expression [112820,112868]" dest="call_expression [41733,41781]"/>
  <match src="type_name [96476,96483]" dest="type_name [27694,27701]"/>
  <match src="identifier: Approval [62139,62147]" dest="identifier: Approval [18973,18981]"/>
  <match src="returns: returns [56538,56545]" dest="returns: returns [15651,15658]"/>
  <match src="private: private [52469,52476]" dest="private: private [11582,11589]"/>
  <match src="contract: contract [15774,15782]" dest="contract: contract [59521,59529]"/>
  <match src="call_expression [4743,4772]" dest="call_expression [5307,5336]"/>
  <match src="identifier: value [62713,62718]" dest="identifier: value [19547,19552]"/>
  <match src="primitive_type [6286,6293]" dest="primitive_type [6850,6857]"/>
  <match src="parameter [39367,39381]" dest="parameter [44558,44572]"/>
  <match src="identifier: value [89835,89840]" dest="identifier: value [73378,73383]"/>
  <match src="identifier: epochs [103926,103932]" dest="identifier: epochs [32839,32845]"/>
  <match src="call_struct_argument [6086,6097]" dest="call_struct_argument [6650,6661]"/>
  <match src="(: ( [89367,89368]" dest="(: ( [58832,58833]"/>
  <match src="type_name [90099,90106]" dest="type_name [73030,73037]"/>
  <match src="uint256: uint256 [27734,27741]" dest="uint256: uint256 [78705,78712]"/>
  <match src="uint: uint [63434,63438]" dest="uint: uint [20268,20272]"/>
  <match src="(: ( [11778,11779]" dest="(: ( [21776,21777]"/>
  <match src="memory: memory [54462,54468]" dest="memory: memory [13575,13581]"/>
  <match src="string [66724,66749]" dest="string [73855,73886]"/>
  <match src="call_struct_argument [5971,5979]" dest="call_struct_argument [6535,6543]"/>
  <match src=",: , [38911,38912]" dest=",: , [44102,44103]"/>
  <match src="identifier: COLON [42111,42116]" dest="identifier: COLON [47302,47307]"/>
  <match src="identifier: add [103060,103063]" dest="identifier: add [31973,31976]"/>
  <match src="call_expression [32083,32157]" dest="call_expression [55176,55254]"/>
  <match src="parameter [39345,39357]" dest="parameter [44536,44548]"/>
  <match src="uint256: uint256 [23131,23138]" dest="uint256: uint256 [17063,17070]"/>
  <match src="identifier: Getters [106571,106578]" dest="identifier: Getters [35484,35491]"/>
  <match src="): ) [39279,39280]" dest="): ) [44470,44471]"/>
  <match src="expression_statement [111290,111314]" dest="expression_statement [40203,40227]"/>
  <match src="type_name [38561,38568]" dest="type_name [43752,43759]"/>
  <match src="identifier: IOracle [71868,71875]" dest="identifier: IOracle [25681,25688]"/>
  <match src="): ) [89126,89127]" dest="): ) [72479,72480]"/>
  <match src="): ) [55054,55055]" dest="): ) [14167,14168]"/>
  <match src="comment: // '0' [38491,38497]" dest="comment: // '0' [43682,43688]"/>
  <match src="identifier: coupons [95926,95933]" dest="identifier: coupons [27144,27151]"/>
  <match src="(: ( [114789,114790]" dest="(: ( [69733,69734]"/>
  <match src="identifier: div [2588,2591]" dest="identifier: div [3152,3155]"/>
  <match src="call_expression [85194,85242]" dest="call_expression [60578,60622]"/>
  <match src="): ) [103087,103088]" dest="): ) [32000,32001]"/>
  <match src="identifier: candidates [112435,112445]" dest="identifier: candidates [41348,41358]"/>
  <match src="address: address [64156,64163]" dest="address: address [20990,20997]"/>
  <match src="}: } [107248,107249]" dest="}: } [36161,36162]"/>
  <match src="identifier: account [29574,29581]" dest="identifier: account [53994,54001]"/>
  <match src=".: . [110820,110821]" dest=".: . [39733,39734]"/>
  <match src="call_expression [103617,103674]" dest="call_expression [32530,32587]"/>
  <match src="call_expression [8778,8815]" dest="call_expression [9342,9379]"/>
  <match src="internal: internal [41910,41918]" dest="internal: internal [47101,47109]"/>
  <match src="identifier: Status [102592,102598]" dest="identifier: Status [31505,31511]"/>
  <match src="(: ( [7038,7039]" dest="(: ( [7602,7603]"/>
  <match src="comment: // 6 epochs [53462,53473]" dest="comment: // 6 epochs [12575,12586]"/>
  <match src=".: . [102303,102304]" dest=".: . [31216,31217]"/>
  <match src="struct_declaration [96043,96225]" dest="struct_declaration [27261,27443]"/>
  <match src="expression_statement [90227,90344]" dest="expression_statement [81622,81820]"/>
  <match src="array_access [113868,113896]" dest="array_access [42781,42809]"/>
  <match src="view: view [100098,100102]" dest="view: view [29011,29015]"/>
  <match src="identifier: balanceOf [102047,102056]" dest="identifier: balanceOf [30960,30969]"/>
  <match src="type_name [53805,53812]" dest="type_name [12918,12925]"/>
  <match src="call_argument [113464,113470]" dest="call_argument [42377,42383]"/>
  <match src="identifier: accounts [110552,110560]" dest="identifier: accounts [39465,39473]"/>
  <match src="function: function [103971,103979]" dest="function: function [32884,32892]"/>
  <match src="identifier: D256 [29924,29928]" dest="identifier: D256 [17698,17702]"/>
  <match src="function: function [107420,107428]" dest="function: function [36333,36341]"/>
  <match src="array_access [109796,109820]" dest="array_access [38709,38733]"/>
  <match src="uint256: uint256 [74276,74283]" dest="uint256: uint256 [80675,80682]"/>
  <match src="string [4100,4126]" dest="string [4664,4690]"/>
  <match src="): ) [42244,42245]" dest="): ) [47435,47436]"/>
  <match src="identifier: COMMA [42271,42276]" dest="identifier: COMMA [47462,47467]"/>
  <match src="type_name [38655,38661]" dest="type_name [43846,43852]"/>
  <match src="identifier: Require [38398,38405]" dest="identifier: Require [43589,43596]"/>
  <match src="call_argument [110204,110238]" dest="call_argument [39117,39151]"/>
  <match src="return_statement [101396,101429]" dest="return_statement [30309,30342]"/>
  <match src="(: ( [102121,102122]" dest="(: ( [31034,31035]"/>
  <match src="(: ( [100863,100864]" dest="(: ( [29776,29777]"/>
  <match src="type_name [44202,44209]" dest="type_name [49393,49400]"/>
  <match src=",: , [43407,43408]" dest=",: , [48598,48599]"/>
  <match src="type_name [96749,96764]" dest="type_name [27967,27982]"/>
  <match src="member_expression [107857,107871]" dest="member_expression [36770,36784]"/>
  <match src="function: function [113809,113817]" dest="function: function [42722,42730]"/>
  <match src="identifier: i [47246,47247]" dest="identifier: i [52437,52438]"/>
  <match src="visibility [100091,100097]" dest="visibility [29004,29010]"/>
  <match src="expression_statement [76427,76523]" dest="expression_statement [80559,80665]"/>
  <match src=",: , [43438,43439]" dest=",: , [48629,48630]"/>
  <match src="call_expression [103021,103037]" dest="call_expression [31934,31950]"/>
  <match src="primitive_type [7507,7514]" dest="primitive_type [8071,8078]"/>
  <match src="call_argument [40254,40260]" dest="call_argument [45445,45451]"/>
  <match src="comment: /**      * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * IMPORTANT: Beware that changing an allowance with this method brings the risk      * that someone may use both the old and the new allowance by unfortunate      * transaction ordering. One possible solution to mitigate this race      * condition is to first reduce the spender's allowance to 0 and set the      * desired value afterwards:      * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      *      * Emits an {Approval} event.      */ [12449,13091]" dest="comment: /**      * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * IMPORTANT: Beware that changing an allowance with this method brings the risk      * that someone may use both the old and the new allowance by unfortunate      * transaction ordering. One possible solution to mitigate this race      * condition is to first reduce the spender's allowance to 0 and set the      * desired value afterwards:      * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      *      * Emits an {Approval} event.      */ [22447,23089]"/>
  <match src="internal: internal [86114,86122]" dest="internal: internal [54405,54413]"/>
  <match src="(: ( [111515,111516]" dest="(: ( [40428,40429]"/>
  <match src="function: function [64419,64427]" dest="function: function [21253,21261]"/>
  <match src="struct: struct [95645,95651]" dest="struct: struct [26863,26869]"/>
  <match src="identifier: timeInEpoch [103110,103121]" dest="identifier: timeInEpoch [32023,32034]"/>
  <match src="member_expression [8391,8398]" dest="member_expression [8955,8962]"/>
  <match src="number_literal: 20 [46288,46290]" dest="number_literal: 20 [51479,51481]"/>
  <match src="event_paramater [63329,63341]" dest="event_paramater [20163,20175]"/>
  <match src="): ) [42468,42469]" dest="): ) [47659,47660]"/>
  <match src="uint8: uint8 [46088,46093]" dest="uint8: uint8 [51279,51284]"/>
  <match src="variable_declaration_statement [7707,7721]" dest="variable_declaration_statement [8271,8285]"/>
  <match src="): ) [105072,105073]" dest="): ) [33985,33986]"/>
  <match src=".: . [104500,104501]" dest=".: . [33413,33414]"/>
  <match src="expression_statement [112635,112686]" dest="expression_statement [41548,41599]"/>
  <match src="binary_expression [102417,102463]" dest="binary_expression [31330,31376]"/>
  <match src="): ) [47107,47108]" dest="): ) [52298,52299]"/>
  <match src="parameter [33327,33341]" dest="parameter [57945,57959]"/>
  <match src="string: string [107593,107599]" dest="string: string [36506,36512]"/>
  <match src="type_name [53405,53412]" dest="type_name [12518,12525]"/>
  <match src="identifier: Vote [95974,95978]" dest="identifier: Vote [27192,27196]"/>
  <match src="return: return [94599,94605]" dest="return: return [75457,75463]"/>
  <match src="function_body [105752,105864]" dest="function_body [34665,34777]"/>
  <match src=",: , [21968,21969]" dest=",: , [64266,64267]"/>
  <match src="): ) [8406,8407]" dest="): ) [8970,8971]"/>
  <match src="): ) [10078,10079]" dest="): ) [10642,10643]"/>
  <match src="if_statement [103297,103359]" dest="if_statement [32210,32272]"/>
  <match src="assignment_expression [46071,46106]" dest="assignment_expression [51262,51297]"/>
  <match src="type_name [104891,104898]" dest="type_name [33804,33811]"/>
  <match src="[: [ [113595,113596]" dest="[: [ [42508,42509]"/>
  <match src="call_expression [42730,43010]" dest="call_expression [47921,48201]"/>
  <match src="call_argument [6653,6664]" dest="call_argument [7217,7228]"/>
  <match src="primitive_type [9841,9848]" dest="primitive_type [10405,10412]"/>
  <match src="visibility [104910,104916]" dest="visibility [33823,33829]"/>
  <match src="(: ( [4093,4094]" dest="(: ( [4657,4658]"/>
  <match src="identifier: reason [40254,40260]" dest="identifier: reason [45445,45451]"/>
  <match src="call_expression [98412,98448]" dest="call_expression [77062,77098]"/>
  <match src="public: public [59819,59825]" dest="public: public [24793,24799]"/>
  <match src="call_argument [42111,42116]" dest="call_argument [47302,47307]"/>
  <match src="(: ( [39316,39317]" dest="(: ( [44507,44508]"/>
  <match src="(: ( [90035,90036]" dest="(: ( [73909,73910]"/>
  <match src="assignment_expression [7748,7770]" dest="assignment_expression [8312,8334]"/>
  <match src="identifier: one [111247,111250]" dest="identifier: one [40160,40163]"/>
  <match src="identifier: b [7726,7727]" dest="identifier: b [8290,8291]"/>
  <match src="private: private [53342,53349]" dest="private: private [12455,12462]"/>
  <match src="{: { [108842,108843]" dest="{: { [37755,37756]"/>
  <match src="internal: internal [110526,110534]" dest="internal: internal [39439,39447]"/>
  <match src="type_name [112559,112566]" dest="type_name [41472,41479]"/>
  <match src="(: ( [73961,73962]" dest="(: ( [68547,68548]"/>
  <match src="}: } [2004,2005]" dest="}: } [2568,2569]"/>
  <match src="identifier: msg [11088,11091]" dest="identifier: msg [65596,65599]"/>
  <match src="identifier: that [114785,114789]" dest="identifier: that [69729,69733]"/>
  <match src="state_variable_declaration [54031,54084]" dest="state_variable_declaration [13144,13197]"/>
  <match src=".: . [108060,108061]" dest=".: . [36973,36974]"/>
  <match src="): ) [101384,101385]" dest="): ) [30297,30298]"/>
  <match src="member_expression [113214,113231]" dest="member_expression [42127,42144]"/>
  <match src="function_body [8747,8825]" dest="function_body [9311,9389]"/>
  <match src="call_argument [91228,91257]" dest="call_argument [81427,81442]"/>
  <match src="identifier: add [6500,6503]" dest="identifier: add [7064,7067]"/>
  <match src="view: view [62563,62567]" dest="view: view [19397,19401]"/>
  <match src="returns: returns [64004,64011]" dest="returns: returns [20838,20845]"/>
  <match src="(: ( [89934,89935]" dest="(: ( [72878,72879]"/>
  <match src="returns: returns [55960,55967]" dest="returns: returns [15073,15080]"/>
  <match src="identifier: placeLock [113493,113502]" dest="identifier: placeLock [42406,42415]"/>
  <match src="expression_statement [114777,114909]" dest="expression_statement [69721,69853]"/>
  <match src="{: { [11505,11506]" dest="{: { [21503,21504]"/>
  <match src="state_mutability [8712,8716]" dest="state_mutability [9276,9280]"/>
  <match src="type_name [111332,111355]" dest="type_name [40245,40268]"/>
  <match src="=: = [52677,52678]" dest="=: = [11790,11791]"/>
  <match src=".: . [109820,109821]" dest=".: . [38733,38734]"/>
  <match src="parameter [38943,38957]" dest="parameter [44134,44148]"/>
  <match src="identifier: ASCII_LOWER_EX [46139,46153]" dest="identifier: ASCII_LOWER_EX [51330,51344]"/>
  <match src="primitive_type [105615,105619]" dest="primitive_type [34528,34532]"/>
  <match src="identifier: _state [109950,109956]" dest="identifier: _state [38863,38869]"/>
  <match src="parameter [12079,12083]" dest="parameter [22077,22081]"/>
  <match src="identifier: value [6631,6636]" dest="identifier: value [7195,7200]"/>
  <match src="member_expression [101614,101634]" dest="member_expression [30527,30547]"/>
  <match src="(: ( [7758,7759]" dest="(: ( [8322,8323]"/>
  <match src="type_name [107301,107307]" dest="type_name [36214,36220]"/>
  <match src="identifier: accounts [108545,108553]" dest="identifier: accounts [37458,37466]"/>
  <match src="return_type_definition [6347,6368]" dest="return_type_definition [6911,6932]"/>
  <match src="memory: memory [8531,8537]" dest="memory: memory [9095,9101]"/>
  <match src="&quot;: &quot; [66748,66749]" dest="&quot;: &quot; [73885,73886]"/>
  <match src="identifier: self [7426,7430]" dest="identifier: self [7990,7994]"/>
  <match src="identifier: Balance [96577,96584]" dest="identifier: Balance [27795,27802]"/>
  <match src="return: return [9331,9337]" dest="return: return [9895,9901]"/>
  <match src="identifier: initializer [115208,115219]" dest="identifier: initializer [70152,70163]"/>
  <match src="identifier: transfer [106745,106753]" dest="identifier: transfer [35658,35666]"/>
  <match src="): ) [44671,44672]" dest="): ) [49862,49863]"/>
  <match src="function: function [56167,56175]" dest="function: function [15280,15288]"/>
  <match src="identifier: self [6828,6832]" dest="identifier: self [7392,7396]"/>
  <match src="private: private [53150,53157]" dest="private: private [12263,12270]"/>
  <match src=",: , [110667,110668]" dest=",: , [39580,39581]"/>
  <match src="identifier: COMMA [40364,40369]" dest="identifier: COMMA [45555,45560]"/>
  <match src="struct_declaration [5780,5822]" dest="struct_declaration [6344,6386]"/>
  <match src="identifier: self [9542,9546]" dest="identifier: self [10106,10110]"/>
  <match src="identifier: experimental [66,78]" dest="identifier: experimental [66,78]"/>
  <match src="primitive_type [110456,110463]" dest="primitive_type [39369,39376]"/>
  <match src="identifier: epochs [104065,104071]" dest="identifier: epochs [32978,32984]"/>
  <match src="identifier: _state [113378,113384]" dest="identifier: _state [42291,42297]"/>
  <match src="function_definition [62588,62668]" dest="function_definition [19422,19502]"/>
  <match src="string [92752,92773]" dest="string [79628,79635]"/>
  <match src="member_expression [92393,92405]" dest="member_expression [79029,79041]"/>
  <match src="binary_expression [103002,103037]" dest="binary_expression [31915,31950]"/>
  <match src="function_body [1732,2124]" dest="function_body [2296,2688]"/>
  <match src="member_expression [102546,102561]" dest="member_expression [31459,31474]"/>
  <match src="function_body [9462,9508]" dest="function_body [10026,10072]"/>
  <match src="identifier: _state [111426,111432]" dest="identifier: _state [40339,40345]"/>
  <match src="identifier: spender [62187,62194]" dest="identifier: spender [19021,19028]"/>
  <match src="for: for [87873,87876]" dest="for: for [71097,71100]"/>
  <match src="=: = [45866,45867]" dest="=: = [51057,51058]"/>
  <match src="private: private [75253,75260]" dest="private: private [68550,68557]"/>
  <match src="internal: internal [110747,110755]" dest="internal: internal [39660,39668]"/>
  <match src="parameter [100864,100871]" dest="parameter [29777,29784]"/>
  <match src="parameter [72017,72024]" dest="parameter [25830,25837]"/>
  <match src="identifier: div [102067,102070]" dest="identifier: div [30980,30983]"/>
  <match src="pure: pure [62374,62378]" dest="pure: pure [19208,19212]"/>
  <match src="primitive_type [107822,107829]" dest="primitive_type [36735,36742]"/>
  <match src="array_access [105091,105119]" dest="array_access [34004,34032]"/>
  <match src="(: ( [102056,102057]" dest="(: ( [30969,30970]"/>
  <match src="identifier: Decimal [111192,111199]" dest="identifier: Decimal [40105,40112]"/>
  <match src="): ) [9657,9658]" dest="): ) [10221,10222]"/>
  <match src="identifier: require [2042,2049]" dest="identifier: require [2606,2613]"/>
  <match src="identifier: b [3449,3450]" dest="identifier: b [4013,4014]"/>
  <match src="identifier: BOOTSTRAPPING_PRICE [52557,52576]" dest="identifier: BOOTSTRAPPING_PRICE [11670,11689]"/>
  <match src="memory: memory [33442,33448]" dest="memory: memory [67561,67567]"/>
  <match src="function_body [56096,56157]" dest="function_body [15209,15270]"/>
  <match src="type_name [11628,11635]" dest="type_name [21626,21633]"/>
  <match src="visibility [104311,104317]" dest="visibility [33224,33230]"/>
  <match src="modifier_invocation [88622,88651]" dest="modifier_invocation [73545,73574]"/>
  <match src="identifier: OpenZeppelinUpgradesAddress [93615,93642]" dest="identifier: OpenZeppelinUpgradesAddress [74473,74500]"/>
  <match src="identifier: accounts [101794,101802]" dest="identifier: accounts [30707,30715]"/>
  <match src="comment: // r.length = length; [44673,44694]" dest="comment: // r.length = length; [49864,49885]"/>
  <match src=",: , [91877,91878]" dest=",: , [80477,80478]"/>
  <match src="function: function [6871,6879]" dest="function: function [7435,7443]"/>
  <match src="identifier: amount [21914,21920]" dest="identifier: amount [64908,64914]"/>
  <match src="identifier: Upgradeable [116133,116144]" dest="identifier: Upgradeable [78504,78515]"/>
  <match src="}: } [100261,100262]" dest="}: } [29174,29175]"/>
  <match src="type_name [15976,15983]" dest="type_name [83139,83146]"/>
  <match src="function_definition [100476,100574]" dest="function_definition [29389,29487]"/>
  <match src=".: . [110942,110943]" dest=".: . [39855,39856]"/>
  <match src="identifier: epoch [103865,103870]" dest="identifier: epoch [32778,32783]"/>
  <match src="string [21286,21322]" dest="string [71591,71612]"/>
  <match src="identifier: D256 [8217,8221]" dest="identifier: D256 [8781,8785]"/>
  <match src="identifier: account [108472,108479]" dest="identifier: account [37385,37392]"/>
  <match src="primitive_type [98834,98841]" dest="primitive_type [77484,77491]"/>
  <match src="binary_expression [46456,46466]" dest="binary_expression [51647,51657]"/>
  <match src="if: if [7585,7587]" dest="if: if [8149,8151]"/>
  <match src="primitive_type [112929,112936]" dest="primitive_type [41842,41849]"/>
  <match src="comment: // reverse-for-loops with unsigned integer [44241,44283]" dest="comment: // reverse-for-loops with unsigned integer [49432,49474]"/>
  <match src="): ) [98193,98194]" dest="): ) [76843,76844]"/>
  <match src="return: return [102244,102250]" dest="return: return [31157,31163]"/>
  <match src="&quot;: &quot; [2096,2097]" dest="&quot;: &quot; [2660,2661]"/>
  <match src="identifier: transferFrom [13486,13498]" dest="identifier: transferFrom [23484,23496]"/>
  <match src="parameter [54236,54243]" dest="parameter [13349,13356]"/>
  <match src="): ) [90930,90931]" dest="): ) [73481,73482]"/>
  <match src="): ) [111650,111651]" dest="): ) [40563,40564]"/>
  <match src="{: { [96366,96367]" dest="{: { [27584,27585]"/>
  <match src=".: . [109123,109124]" dest=".: . [38036,38037]"/>
  <match src="bytes32: bytes32 [39367,39374]" dest="bytes32: bytes32 [44558,44565]"/>
  <match src="comment: // each byte takes two characters [47265,47298]" dest="comment: // each byte takes two characters [52456,52489]"/>
  <match src="parameter [106979,106993]" dest="parameter [35892,35906]"/>
  <match src="identifier: coupons [103798,103805]" dest="identifier: coupons [32711,32718]"/>
  <match src="identifier: timestamp [110800,110809]" dest="identifier: timestamp [39713,39722]"/>
  <match src="member_expression [89190,89200]" dest="member_expression [72286,72296]"/>
  <match src="=: = [53079,53080]" dest="=: = [12192,12193]"/>
  <match src="): ) [64486,64487]" dest="): ) [21320,21321]"/>
  <match src="(: ( [102070,102071]" dest="(: ( [30983,30984]"/>
  <match src="identifier: amount [108197,108203]" dest="identifier: amount [37110,37116]"/>
  <match src="uint256: uint256 [102139,102146]" dest="uint256: uint256 [31052,31059]"/>
  <match src="]: ] [108282,108283]" dest="]: ] [37195,37196]"/>
  <match src="user_defined_type [96808,96821]" dest="user_defined_type [28026,28039]"/>
  <match src="identifier: COLON [41424,41429]" dest="identifier: COLON [46615,46620]"/>
  <match src="address: address [63305,63312]" dest="address: address [20139,20146]"/>
  <match src="identifier: D256 [35101,35105]" dest="identifier: D256 [61991,61995]"/>
  <match src="return: return [101396,101402]" dest="return: return [30309,30315]"/>
  <match src="identifier: SafeMath [82807,82815]" dest="identifier: SafeMath [83098,83106]"/>
  <match src="type_name [53041,53048]" dest="type_name [12154,12161]"/>
  <match src="block_statement [81224,81257]" dest="block_statement [61940,61973]"/>
  <match src="return_type_definition [6771,6792]" dest="return_type_definition [7335,7356]"/>
  <match src="using: using [72739,72744]" dest="using: using [66613,66618]"/>
  <match src=".: . [108291,108292]" dest=".: . [37204,37205]"/>
  <match src="{: { [6819,6820]" dest="{: { [7383,7384]"/>
  <match src="(: ( [55053,55054]" dest="(: ( [14166,14167]"/>
  <match src=".: . [114784,114785]" dest=".: . [69728,69729]"/>
  <match src="identifier: self [6715,6719]" dest="identifier: self [7279,7283]"/>
  <match src="for_statement [7702,7781]" dest="for_statement [8266,8345]"/>
  <match src="(: ( [7956,7957]" dest="(: ( [8520,8521]"/>
  <match src="]: ] [113443,113444]" dest="]: ] [42356,42357]"/>
  <match src="): ) [44934,44935]" dest="): ) [50125,50126]"/>
  <match src="parameter [2592,2601]" dest="parameter [3156,3165]"/>
  <match src="return_type_definition [102866,102883]" dest="return_type_definition [31779,31796]"/>
  <match src="(: ( [103714,103715]" dest="(: ( [32627,32628]"/>
  <match src="function_body [9321,9367]" dest="function_body [9885,9931]"/>
  <match src="=: = [53130,53131]" dest="=: = [12243,12244]"/>
  <match src="primitive_type [63890,63897]" dest="primitive_type [20724,20731]"/>
  <match src="identifier: spender [100622,100629]" dest="identifier: spender [29535,29542]"/>
  <match src="identifier: reserve0 [63898,63906]" dest="identifier: reserve0 [20732,20740]"/>
  <match src="(: ( [2666,2667]" dest="(: ( [3230,3231]"/>
  <match src="identifier: sender [88697,88703]" dest="identifier: sender [72790,72796]"/>
  <match src="member_expression [111882,111929]" dest="member_expression [40795,40842]"/>
  <match src="identifier: Bond [88326,88330]" dest="identifier: Unbond [71384,71390]"/>
  <match src="{: { [112418,112419]" dest="{: { [41331,41332]"/>
  <match src="identifier: encodePacked [43345,43357]" dest="identifier: encodePacked [48536,48548]"/>
  <match src="address: address [105159,105166]" dest="address: address [34072,34079]"/>
  <match src="identifier: mul [8432,8435]" dest="identifier: mul [8996,8999]"/>
  <match src="identifier: payloadA [40964,40972]" dest="identifier: payloadA [46155,46163]"/>
  <match src="return_type_definition [55960,55977]" dest="return_type_definition [15073,15090]"/>
  <match src="identifier: input [45340,45345]" dest="identifier: input [50531,50536]"/>
  <match src="primitive_type [96424,96431]" dest="primitive_type [27642,27649]"/>
  <match src=":: : [8374,8375]" dest=":: : [8938,8939]"/>
  <match src="call_argument [98528,98567]" dest="call_argument [77178,77217]"/>
  <match src="(: ( [19910,19911]" dest="(: ( [65350,65351]"/>
  <match src="false [74164,74169]" dest="false [82165,82170]"/>
  <match src="): ) [60007,60008]" dest="): ) [24981,24982]"/>
  <match src=".: . [98514,98515]" dest=".: . [77164,77165]"/>
  <match src="): ) [108422,108423]" dest="): ) [37335,37336]"/>
  <match src="(: ( [103254,103255]" dest="(: ( [32167,32168]"/>
  <match src="member_expression [108852,108867]" dest="member_expression [37765,37780]"/>
  <match src="call_argument [19936,19973]" dest="call_argument [65376,65421]"/>
  <match src=".: . [96656,96657]" dest=".: . [27874,27875]"/>
  <match src=".: . [109877,109878]" dest=".: . [38790,38791]"/>
  <match src=".: . [103203,103204]" dest=".: . [32116,32117]"/>
  <match src="bool: bool [39885,39889]" dest="bool: bool [45076,45080]"/>
  <match src="identifier: approveFor [105357,105367]" dest="identifier: approveFor [34270,34280]"/>
  <match src="(: ( [46087,46088]" dest="(: ( [51278,51279]"/>
  <match src="type_name [113503,113510]" dest="type_name [42416,42423]"/>
  <match src="call_argument [92275,92279]" dest="call_argument [57859,57863]"/>
  <match src=".: . [73995,73996]" dest=".: . [18301,18302]"/>
  <match src="identifier: COLON [40204,40209]" dest="identifier: COLON [45395,45400]"/>
  <match src="identifier: outstandingCouponsForEpoch [112220,112246]" dest="identifier: outstandingCouponsForEpoch [41133,41159]"/>
  <match src="function_body [4073,4134]" dest="function_body [4637,4698]"/>
  <match src="identifier: EpochStrategy [111342,111355]" dest="identifier: EpochStrategy [40255,40268]"/>
  <match src="identifier: value [8567,8572]" dest="identifier: value [9131,9136]"/>
  <match src=".: . [111029,111030]" dest=".: . [39942,39943]"/>
  <match src="call_argument [29963,29969]" dest="call_argument [16940,16946]"/>
  <match src="=: = [46606,46607]" dest="=: = [51797,51798]"/>
  <match src="): ) [116531,116532]" dest="): ) [68647,68648]"/>
  <match src="expression_statement [7722,7728]" dest="expression_statement [8286,8292]"/>
  <match src="identifier: PERMIT_TYPEHASH [62984,62999]" dest="identifier: PERMIT_TYPEHASH [19818,19833]"/>
  <match src="call_argument [107400,107406]" dest="call_argument [36313,36319]"/>
  <match src="==: == [89626,89628]" dest="==: == [72634,72636]"/>
  <match src="return_type_definition [105190,105207]" dest="return_type_definition [34103,34120]"/>
  <match src="member_expression [112168,112182]" dest="member_expression [41081,41095]"/>
  <match src="function_definition [6262,6436]" dest="function_definition [6826,7000]"/>
  <match src="call_expression [113416,113471]" dest="call_expression [42329,42384]"/>
  <match src="identifier: a [2600,2601]" dest="identifier: a [3164,3165]"/>
  <match src="): ) [91139,91140]" dest="): ) [58088,58089]"/>
  <match src="uint256: uint256 [107150,107157]" dest="uint256: uint256 [36063,36070]"/>
  <match src="call_expression [108659,108700]" dest="call_expression [37572,37613]"/>
  <match src="{: { [5617,5618]" dest="{: { [6181,6182]"/>
  <match src="external: external [28507,28515]" dest="external: external [78979,78987]"/>
  <match src="&quot;: &quot; [66400,66401]" dest="&quot;: &quot; [73803,73804]"/>
  <match src="struct_member [53011,53029]" dest="struct_member [12124,12142]"/>
  <match src=".: . [109257,109258]" dest=".: . [38170,38171]"/>
  <match src="type_name [44819,44824]" dest="type_name [50010,50015]"/>
  <match src="call_expression [40319,40338]" dest="call_expression [45510,45529]"/>
  <match src="primitive_type [63402,63409]" dest="primitive_type [20236,20243]"/>
  <match src="if: if [43264,43266]" dest="if: if [48455,48457]"/>
  <match src="return: return [9701,9707]" dest="return: return [10265,10271]"/>
  <match src="function_body [6204,6256]" dest="function_body [6768,6820]"/>
  <match src="): ) [102228,102229]" dest="): ) [31141,31142]"/>
  <match src="identifier: div [91655,91658]" dest="identifier: div [73659,73662]"/>
  <match src="(: ( [113667,113668]" dest="(: ( [42580,42581]"/>
  <match src=".: . [102570,102571]" dest=".: . [31483,31484]"/>
  <match src="type_name [21906,21913]" dest="type_name [64900,64907]"/>
  <match src="number_literal: 0x2c20 [38679,38685]" dest="number_literal: 0x2c20 [43870,43876]"/>
  <match src="call_expression [98528,98567]" dest="call_expression [77178,77217]"/>
  <match src="type_name [63055,63062]" dest="type_name [19889,19896]"/>
  <match src="): ) [64017,64018]" dest="): ) [20851,20852]"/>
  <match src="): ) [63607,63608]" dest="): ) [20441,20442]"/>
  <match src="parameter [107014,107028]" dest="parameter [35927,35941]"/>
  <match src="(: ( [109881,109882]" dest="(: ( [38794,38795]"/>
  <match src="address: address [88331,88338]" dest="address: address [71391,71398]"/>
  <match src="identifier: reserveB [86249,86257]" dest="identifier: couponEpochDecay [61762,61778]"/>
  <match src="member_expression [103301,103316]" dest="member_expression [32214,32229]"/>
  <match src="type_cast_expression [42702,43028]" dest="type_cast_expression [47893,48219]"/>
  <match src=",: , [112574,112575]" dest=",: , [41487,41488]"/>
  <match src="member_expression [102608,102622]" dest="member_expression [31521,31535]"/>
  <match src="identifier: Epoch [96549,96554]" dest="identifier: Epoch [27767,27772]"/>
  <match src="primitive_type [102349,102356]" dest="primitive_type [31262,31269]"/>
  <match src="identifier: self [8039,8043]" dest="identifier: self [8603,8607]"/>
  <match src="call_argument [89121,89126]" dest="call_argument [72474,72479]"/>
  <match src="address: address [100367,100374]" dest="address: address [29280,29287]"/>
  <match src="parameter [8730,8741]" dest="parameter [9294,9305]"/>
  <match src="identifier: msg [88912,88915]" dest="identifier: msg [79007,79010]"/>
  <match src="variable_declaration [86244,86257]" dest="variable_declaration [61757,61778]"/>
  <match src="function: function [100075,100083]" dest="function: function [28988,28996]"/>
  <match src="parameter [64332,64342]" dest="parameter [21166,21176]"/>
  <match src="for: for [15829,15832]" dest="for: for [59580,59583]"/>
  <match src="identifier: getOracleReserveMinimum [54287,54310]" dest="identifier: getOracleReserveMinimum [13400,13423]"/>
  <match src="pure: pure [50913,50917]" dest="pure: pure [18333,18337]"/>
  <match src="visibility [112616,112624]" dest="visibility [41529,41537]"/>
  <match src="type_name [101913,101920]" dest="type_name [30826,30833]"/>
  <match src="return: return [56578,56584]" dest="return: return [15691,15697]"/>
  <match src="(: ( [91321,91322]" dest="(: ( [79064,79065]"/>
  <match src="function_definition [104115,104267]" dest="function_definition [33028,33180]"/>
  <match src="): ) [105750,105751]" dest="): ) [34663,34664]"/>
  <match src="}: } [115192,115193]" dest="}: } [70136,70137]"/>
  <match src="assignment_expression [112986,113081]" dest="assignment_expression [41899,41994]"/>
  <match src="(: ( [13757,13758]" dest="(: ( [23755,23756]"/>
  <match src="primitive_type [1382,1389]" dest="primitive_type [1946,1953]"/>
  <match src=".: . [111438,111439]" dest=".: . [40351,40352]"/>
  <match src="identifier: D256 [6893,6897]" dest="identifier: D256 [7457,7461]"/>
  <match src="string_literal [59008,59017]" dest="string_literal [54768,54810]"/>
  <match src="function_definition [10009,10242]" dest="function_definition [10573,10806]"/>
  <match src="primitive_type [98595,98601]" dest="primitive_type [77245,77251]"/>
  <match src="uint256: uint256 [78420,78427]" dest="uint256: uint256 [66860,66867]"/>
  <match src="assignment_expression [110154,110239]" dest="assignment_expression [39067,39152]"/>
  <match src="call_expression [23757,23821]" dest="call_expression [80049,80119]"/>
  <match src="identifier: _state [103505,103511]" dest="identifier: _state [32418,32424]"/>
  <match src="parameter [4662,4671]" dest="parameter [5226,5235]"/>
  <match src=".: . [103659,103660]" dest=".: . [32572,32573]"/>
  <match src="identifier: Vote [112605,112609]" dest="identifier: Vote [41518,41522]"/>
  <match src="call_argument [6415,6416]" dest="call_argument [6979,6980]"/>
  <match src="pure: pure [824,828]" dest="pure: pure [1388,1392]"/>
  <match src="parameter [107285,107299]" dest="parameter [36198,36212]"/>
  <match src="call_argument [111488,111540]" dest="call_argument [40401,40453]"/>
  <match src=",: , [88838,88839]" dest=",: , [82020,82021]"/>
  <match src="returns: returns [64242,64249]" dest="returns: returns [21076,21083]"/>
  <match src="primitive_type [64298,64302]" dest="primitive_type [21132,21136]"/>
  <match src="identifier: startFor [113644,113652]" dest="identifier: startFor [42557,42565]"/>
  <match src="!=: != [115087,115089]" dest="!=: != [70031,70033]"/>
  <match src="primitive_type [9928,9935]" dest="primitive_type [10492,10499]"/>
  <match src="public: public [105310,105316]" dest="public: public [34223,34229]"/>
  <match src="parameter [73988,74007]" dest="parameter [18294,18323]"/>
  <match src="call_argument [32120,32156]" dest="call_argument [55209,55253]"/>
  <match src="}: } [7084,7085]" dest="}: } [7648,7649]"/>
  <match src="}: } [100341,100342]" dest="}: } [29254,29255]"/>
  <match src="=: = [46509,46510]" dest="=: = [51700,51701]"/>
  <match src="identifier: result [46587,46593]" dest="identifier: result [51778,51784]"/>
  <match src="(: ( [63829,63830]" dest="(: ( [20663,20664]"/>
  <match src="): ) [62206,62207]" dest="): ) [19040,19041]"/>
  <match src="call_argument [46832,46837]" dest="call_argument [52023,52028]"/>
  <match src="call_argument [90503,90508]" dest="call_argument [73185,73206]"/>
  <match src="{: { [56598,56599]" dest="{: { [15711,15712]"/>
  <match src="identifier: account [23775,23782]" dest="identifier: account [82243,82250]"/>
  <match src="constant: constant [99931,99939]" dest="constant: constant [28844,28852]"/>
  <match src="function: function [100268,100276]" dest="function: function [29181,29189]"/>
  <match src="call_expression [112057,112082]" dest="call_expression [40970,40995]"/>
  <match src="comment: // 40% [53854,53860]" dest="comment: // 40% [12967,12973]"/>
  <match src="string: string [62388,62394]" dest="string: string [19222,19228]"/>
  <match src="expression_statement [113868,113916]" dest="expression_statement [42781,42829]"/>
  <match src="identifier: result [44469,44475]" dest="identifier: result [49660,49666]"/>
  <match src="identifier: payloadA [39744,39752]" dest="identifier: payloadA [44935,44943]"/>
  <match src="type_name [63136,63143]" dest="type_name [19970,19977]"/>
  <match src="function_body [10127,10242]" dest="function_body [10691,10806]"/>
  <match src="}: } [107082,107083]" dest="}: } [35995,35996]"/>
  <match src="(: ( [47041,47042]" dest="(: ( [52232,52233]"/>
  <match src="visibility [62791,62799]" dest="visibility [19625,19633]"/>
  <match src="function_definition [111621,111723]" dest="function_definition [40534,40636]"/>
  <match src="primitive_type [4673,4679]" dest="primitive_type [5237,5243]"/>
  <match src="parameter [107577,107591]" dest="parameter [36490,36504]"/>
  <match src="function_definition [56751,56837]" dest="function_definition [15864,15950]"/>
  <match src="for_statement [46264,46666]" dest="for_statement [51455,51857]"/>
  <match src="identifier: accounts [108231,108239]" dest="identifier: accounts [37144,37152]"/>
  <match src="): ) [6743,6744]" dest="): ) [7307,7308]"/>
  <match src="type_name [62171,62178]" dest="type_name [19005,19012]"/>
  <match src="identifier: value [7239,7244]" dest="identifier: value [7803,7808]"/>
  <match src="string [32915,32951]" dest="string [63510,63539]"/>
  <match src="event_paramater [63482,63497]" dest="event_paramater [20316,20331]"/>
  <match src="state_mutability [63816,63820]" dest="state_mutability [20650,20654]"/>
  <match src="identifier: price0CumulativeLast [63967,63987]" dest="identifier: price0CumulativeLast [20801,20821]"/>
  <match src="enum_declaration [95324,95389]" dest="enum_declaration [26542,26607]"/>
  <match src="visibility [72784,72791]" dest="visibility [78599,78606]"/>
  <match src="primitive_type [103479,103486]" dest="primitive_type [32392,32399]"/>
  <match src="parameter [62539,62552]" dest="parameter [19373,19386]"/>
  <match src="identifier: transfer [88942,88950]" dest="identifier: transferFrom [71886,71898]"/>
  <match src="return_statement [5957,5983]" dest="return_statement [6521,6547]"/>
  <match src="primitive_type [63237,63244]" dest="primitive_type [20071,20078]"/>
  <match src=".: . [88954,88955]" dest=".: . [71902,71903]"/>
  <match src="identifier: reject [113205,113211]" dest="identifier: reject [42118,42124]"/>
  <match src="(: ( [6589,6590]" dest="(: ( [7153,7154]"/>
  <match src="identifier: i [44476,44477]" dest="identifier: i [49667,49668]"/>
  <match src="): ) [46492,46493]" dest="): ) [51683,51684]"/>
  <match src="type_name [64079,64083]" dest="type_name [20913,20917]"/>
  <match src="member_expression [109907,109920]" dest="member_expression [38820,38833]"/>
  <match src="type_name [1324,1331]" dest="type_name [1888,1895]"/>
  <match src="primitive_type [9037,9041]" dest="primitive_type [9601,9605]"/>
  <match src="state_mutability [100295,100299]" dest="state_mutability [29208,29212]"/>
  <match src="identifier: totalSupply [11591,11602]" dest="identifier: totalSupply [21589,21600]"/>
  <match src="state_mutability [6982,6986]" dest="state_mutability [7546,7550]"/>
  <match src="address: address [64479,64486]" dest="address: address [21313,21320]"/>
  <match src="uint256: uint256 [78444,78451]" dest="uint256: uint256 [66715,66722]"/>
  <match src="returns: returns [9562,9569]" dest="returns: returns [10126,10133]"/>
  <match src="type_name [109357,109364]" dest="type_name [38270,38277]"/>
  <match src="identifier: timestamp [68073,68082]" dest="identifier: timestamp [83630,83639]"/>
  <match src=".: . [10153,10154]" dest=".: . [10717,10718]"/>
  <match src="parameter [61095,61109]" dest="parameter [54891,54905]"/>
  <match src="uint256: uint256 [3237,3244]" dest="uint256: uint256 [3801,3808]"/>
  <match src="contract_body [72733,76543]" dest="contract_body [66575,68868]"/>
  <match src="identifier: amount [110072,110078]" dest="identifier: amount [38985,38991]"/>
  <match src="parameter [4651,4660]" dest="parameter [5215,5224]"/>
  <match src="type_name [8981,8985]" dest="type_name [9545,9549]"/>
  <match src="identifier: reserve1 [63916,63924]" dest="identifier: reserve1 [20750,20758]"/>
  <match src="number_literal: 2 [9500,9501]" dest="number_literal: 2 [10064,10065]"/>
  <match src="uint256: uint256 [804,811]" dest="uint256: uint256 [1368,1375]"/>
  <match src="emit: emit [88815,88819]" dest="emit: emit [81998,82002]"/>
  <match src="(: ( [46268,46269]" dest="(: ( [51459,51460]"/>
  <match src="identifier: IOracle [72725,72732]" dest="identifier: Comptroller [66563,66574]"/>
  <match src="uint256: uint256 [90448,90455]" dest="uint256: uint256 [63038,63045]"/>
  <match src="identifier: COUPON_EXPIRATION [53776,53793]" dest="identifier: COUPON_EXPIRATION [12889,12906]"/>
  <match src="type_name [100764,100771]" dest="type_name [29677,29684]"/>
  <match src="comment: /**      * @dev Sets the implementation address of the proxy.      * @param newImplementation Address of the new implementation.      */ [98666,98802]" dest="comment: /**      * @dev Sets the implementation address of the proxy.      * @param newImplementation Address of the new implementation.      */ [77316,77452]"/>
  <match src=".: . [108265,108266]" dest=".: . [37178,37179]"/>
  <match src="identifier: sub [109183,109186]" dest="identifier: sub [38096,38099]"/>
  <match src="(: ( [111765,111766]" dest="(: ( [40678,40679]"/>
  <match src="function: function [113484,113492]" dest="function: function [42397,42405]"/>
  <match src="parameter [63136,63151]" dest="parameter [19970,19985]"/>
  <match src="identifier: sender [91326,91332]" dest="identifier: sender [79069,79075]"/>
  <match src=".: . [102591,102592]" dest=".: . [31504,31505]"/>
  <match src=",: , [63472,63473]" dest=",: , [20306,20307]"/>
  <match src="type_name [96162,96186]" dest="type_name [27380,27404]"/>
  <match src="function_definition [92125,92340]" dest="function_definition [57685,57917]"/>
  <match src="variable_declaration [75302,75326]" dest="variable_declaration [68051,68072]"/>
  <match src="type_name [52648,52655]" dest="type_name [11761,11768]"/>
  <match src="primitive_type [59849,59856]" dest="primitive_type [24823,24830]"/>
  <match src="identifier: account [108180,108187]" dest="identifier: account [37093,37100]"/>
  <match src="): ) [102983,102984]" dest="): ) [31896,31897]"/>
  <match src="parameter [40565,40577]" dest="parameter [45756,45768]"/>
  <match src="parameter [9817,9831]" dest="parameter [10381,10395]"/>
  <match src="identifier: balance [107490,107497]" dest="identifier: balance [36403,36410]"/>
  <match src="if: if [113699,113701]" dest="if: if [42612,42614]"/>
  <match src="internal: internal [7167,7175]" dest="internal: internal [7731,7739]"/>
  <match src="parameter [64221,64231]" dest="parameter [21055,21065]"/>
  <match src="array_access [102746,102768]" dest="array_access [31659,31681]"/>
  <match src="identifier: D256 [34799,34803]" dest="identifier: D256 [67511,67515]"/>
  <match src="parameter [110284,110297]" dest="parameter [39197,39210]"/>
  <match src="type_name [104332,104339]" dest="type_name [33245,33252]"/>
  <match src="parameter [8445,8461]" dest="parameter [9009,9025]"/>
  <match src="state_mutability [9668,9672]" dest="state_mutability [10232,10236]"/>
  <match src="identifier: transferFrom [62829,62841]" dest="identifier: transferFrom [19663,19675]"/>
  <match src="variable_declaration [44202,44211]" dest="variable_declaration [49393,49402]"/>
  <match src="): ) [103456,103457]" dest="): ) [32369,32370]"/>
  <match src="primitive_type [19788,19795]" dest="primitive_type [65220,65227]"/>
  <match src="bytes32: bytes32 [39345,39352]" dest="bytes32: bytes32 [44536,44543]"/>
  <match src="function_body [7935,7999]" dest="function_body [8499,8563]"/>
  <match src="array_access [112820,112848]" dest="array_access [41733,41761]"/>
  <match src="call_expression [34482,34556]" dest="call_expression [62905,63027]"/>
  <match src="member_expression [113416,113451]" dest="member_expression [42329,42364]"/>
  <match src="function_definition [27244,27469]" dest="function_definition [55461,55608]"/>
  <match src="call_argument [19191,19230]" dest="call_argument [73300,73336]"/>
  <match src=".: . [110630,110631]" dest=".: . [39543,39544]"/>
  <match src="type_name [9259,9263]" dest="type_name [9823,9827]"/>
  <match src="return_statement [44808,44828]" dest="return_statement [49999,50019]"/>
  <match src="memory: memory [8032,8038]" dest="memory: memory [8596,8602]"/>
  <match src="call_argument [20756,20762]" dest="call_argument [65125,65131]"/>
  <match src="primitive_type [113503,113510]" dest="primitive_type [42416,42423]"/>
  <match src="identifier: valueToBurn [30685,30696]" dest="identifier: premiumCurveDelta [17803,17820]"/>
  <match src="uint256: uint256 [109739,109746]" dest="uint256: uint256 [38652,38659]"/>
  <match src="view: view [64065,64069]" dest="view: view [20899,20903]"/>
  <match src="call_expression [864,907]" dest="call_expression [1428,1471]"/>
  <match src="function_body [88924,89134]" dest="function_body [72298,72487]"/>
  <match src="call_struct_argument [7041,7083]" dest="call_struct_argument [7605,7647]"/>
  <match src="function_definition [89422,90077]" dest="function_definition [72493,73008]"/>
  <match src="parameter [41105,41114]" dest="parameter [46296,46305]"/>
  <match src="returns: returns [72008,72015]" dest="returns: returns [25821,25828]"/>
  <match src="function_body [19813,20198]" dest="function_body [65245,65861]"/>
  <match src="): ) [12059,12060]" dest="): ) [22057,22058]"/>
  <match src=",: , [115308,115309]" dest=",: , [70252,70253]"/>
  <match src="visibility [13146,13154]" dest="visibility [23144,23152]"/>
  <match src="member_expression [112820,112856]" dest="member_expression [41733,41769]"/>
  <match src="primitive_type [95724,95731]" dest="primitive_type [26942,26949]"/>
  <match src="identifier: sender [63253,63259]" dest="identifier: sender [20087,20093]"/>
  <match src="): ) [108369,108370]" dest="): ) [37282,37283]"/>
  <match src="return_type_definition [9447,9461]" dest="return_type_definition [10011,10025]"/>
  <match src="return_type_definition [104790,104807]" dest="return_type_definition [33703,33720]"/>
  <match src="{: { [106922,106923]" dest="{: { [35835,35836]"/>
  <match src="call_argument [91778,91809]" dest="call_argument [63845,63857]"/>
  <match src="identifier: success [98586,98593]" dest="identifier: success [77236,77243]"/>
  <match src="identifier: stringify [42226,42235]" dest="identifier: stringify [47417,47426]"/>
  <match src="(: ( [75433,75434]" dest="(: ( [68127,68128]"/>
  <match src="struct_member [95894,95909]" dest="struct_member [27112,27127]"/>
  <match src="call_argument [20566,20599]" dest="call_argument [64190,64219]"/>
  <match src="uint: uint [64130,64134]" dest="uint: uint [20964,20968]"/>
  <match src="(: ( [105574,105575]" dest="(: ( [34487,34488]"/>
  <match src="comment: /* solium-disable-next-line security/no-inline-assembly */ [44544,44602]" dest="comment: /* solium-disable-next-line security/no-inline-assembly */ [49735,49793]"/>
  <match src="{: { [92157,92158]" dest="{: { [57717,57718]"/>
  <match src="uint256: uint256 [45077,45084]" dest="uint256: uint256 [50268,50275]"/>
  <match src="call_argument [86578,86588]" dest="call_argument [80365,80375]"/>
  <match src="expression_statement [46507,46518]" dest="expression_statement [51698,51709]"/>
  <match src="uint: uint [64315,64319]" dest="uint: uint [21149,21153]"/>
  <match src=",: , [109074,109075]" dest=",: , [37987,37988]"/>
  <match src=".: . [55196,55197]" dest=".: . [14309,14310]"/>
  <match src="identifier: b [3256,3257]" dest="identifier: b [3820,3821]"/>
  <match src=",: , [42085,42086]" dest=",: , [47276,47277]"/>
  <match src="(: ( [9807,9808]" dest="(: ( [10371,10372]"/>
  <match src="primitive_type [101169,101176]" dest="primitive_type [30082,30089]"/>
  <match src="return: return [105350,105356]" dest="return: return [34263,34269]"/>
  <match src="uint256: uint256 [53562,53569]" dest="uint256: uint256 [12675,12682]"/>
  <match src="): ) [110878,110879]" dest="): ) [39791,39792]"/>
  <match src="identifier: candidates [113221,113231]" dest="identifier: candidates [42134,42144]"/>
  <match src="identifier: reserveA [86234,86242]" dest="identifier: couponAge [61713,61722]"/>
  <match src="identifier: value [9599,9604]" dest="identifier: value [10163,10168]"/>
  <match src="call_argument [58761,58765]" dest="call_argument [62835,62839]"/>
  <match src="call_argument [113668,113688]" dest="call_argument [42581,42601]"/>
  <match src="identifier: account [102357,102364]" dest="identifier: account [31270,31277]"/>
  <match src="]: ] [110655,110656]" dest="]: ] [39568,39569]"/>
  <match src="): ) [7991,7992]" dest="): ) [8555,8556]"/>
  <match src="(: ( [19931,19932]" dest="(: ( [65371,65372]"/>
  <match src="): ) [14050,14051]" dest="): ) [24048,24049]"/>
  <match src=",: , [114845,114846]" dest=",: , [69789,69790]"/>
  <match src="+: + [47843,47844]" dest="+: + [53034,53035]"/>
  <match src="[: [ [109828,109829]" dest="[: [ [38741,38742]"/>
  <match src="binary_expression [45108,45114]" dest="binary_expression [50299,50305]"/>
  <match src="(: ( [54447,54448]" dest="(: ( [13560,13561]"/>
  <match src="[: [ [102561,102562]" dest="[: [ [31474,31475]"/>
  <match src="indexed: indexed [88166,88173]" dest="indexed: indexed [71185,71192]"/>
  <match src="pure: pure [56681,56685]" dest="pure: pure [15794,15798]"/>
  <match src="identifier: price [111099,111104]" dest="identifier: price [40012,40017]"/>
  <match src="variable_declaration_statement [45360,45379]" dest="variable_declaration_statement [50551,50570]"/>
  <match src="identifier: account [109812,109819]" dest="identifier: account [38725,38732]"/>
  <match src="comment: /**  * Utility library of inline functions on addresses  *  * Source https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-solidity/v2.1.3/contracts/utils/Address.sol  * This contract is copied here and renamed from the original to avoid clashes in the compiled artifacts  * when the user imports a zos-lib contract (that transitively causes this contract to be compiled and added to the  * build/artifacts folder) as well as the vanilla Address implementation from an openzeppelin version.  */ [93106,93606]" dest="comment: /**  * Utility library of inline functions on addresses  *  * Source https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-solidity/v2.1.3/contracts/utils/Address.sol  * This contract is copied here and renamed from the original to avoid clashes in the compiled artifacts  * when the user imports a zos-lib contract (that transitively causes this contract to be compiled and added to the  * build/artifacts folder) as well as the vanilla Address implementation from an openzeppelin version.  */ [73964,74464]"/>
  <match src="number_literal: 1 [36116,36117]" dest="number_literal: 1 [68701,68702]"/>
  <match src="}: } [100918,100919]" dest="}: } [29831,29832]"/>
  <match src="identifier: that [58943,58947]" dest="identifier: that [62913,62917]"/>
  <match src="function_definition [104573,104735]" dest="function_definition [33486,33648]"/>
  <match src="view: view [81124,81128]" dest="view: view [61631,61635]"/>
  <match src="public: public [101873,101879]" dest="public: public [30786,30792]"/>
  <match src="call_argument [8585,8595]" dest="call_argument [9149,9159]"/>
  <match src="returns: returns [6771,6778]" dest="returns: returns [7335,7342]"/>
  <match src="number_literal: 0 [44482,44483]" dest="number_literal: 0 [49673,49674]"/>
  <match src="return_statement [35578,35585]" dest="return_statement [67197,67204]"/>
  <match src="return_type_definition [9919,9936]" dest="return_type_definition [10483,10500]"/>
  <match src="identifier: size [94606,94610]" dest="identifier: size [75464,75468]"/>
  <match src="=: = [108657,108658]" dest="=: = [37570,37571]"/>
  <match src=",: , [19934,19935]" dest=",: , [65374,65375]"/>
  <match src="contract: contract [72706,72714]" dest="contract: contract [66541,66549]"/>
  <match src="primitive_type [33327,33334]" dest="primitive_type [57945,57952]"/>
  <match src="identifier: abi [42730,42733]" dest="identifier: abi [47921,47924]"/>
  <match src="function_definition [105691,105864]" dest="function_definition [34604,34777]"/>
  <match src="expression_statement [112986,113082]" dest="expression_statement [41899,41995]"/>
  <match src="(: ( [32045,32046]" dest="(: ( [17182,17183]"/>
  <match src="member_expression [103919,103947]" dest="member_expression [32832,32860]"/>
  <match src="struct_member [95724,95746]" dest="struct_member [26942,26964]"/>
  <match src="=: = [109432,109433]" dest="=: = [38345,38346]"/>
  <match src="uint256: uint256 [55969,55976]" dest="uint256: uint256 [15082,15089]"/>
  <match src="primitive_type [101065,101072]" dest="primitive_type [29978,29985]"/>
  <match src="address: address [12026,12033]" dest="address: address [22024,22031]"/>
  <match src="user_defined_type [7378,7382]" dest="user_defined_type [7942,7946]"/>
  <match src="struct_member [95418,95433]" dest="struct_member [26636,26651]"/>
  <match src="call_expression [105357,105404]" dest="call_expression [34270,34317]"/>
  <match src="): ) [63695,63696]" dest="): ) [20529,20530]"/>
  <match src="(: ( [102719,102720]" dest="(: ( [31632,31633]"/>
  <match src="pure: pure [8712,8716]" dest="pure: pure [9276,9280]"/>
  <match src="member_expression [91860,91870]" dest="member_expression [80456,80466]"/>
  <match src="identifier: staged [101210,101216]" dest="identifier: staged [30123,30129]"/>
  <match src="visibility [108833,108841]" dest="visibility [37746,37754]"/>
  <match src="(: ( [100285,100286]" dest="(: ( [29198,29199]"/>
  <match src="function_body [106922,106951]" dest="function_body [35835,35864]"/>
  <match src="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      * - Subtraction cannot overflow.      *      * _Available since v2.4.0._      */ [920,1233]" dest="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      * - Subtraction cannot overflow.      *      * _Available since v2.4.0._      */ [1484,1797]"/>
  <match src="member_expression [92193,92246]" dest="member_expression [57753,57807]"/>
  <match src="type_name [27847,27854]" dest="type_name [16790,16797]"/>
  <match src="=: = [45338,45339]" dest="=: = [50529,50530]"/>
  <match src="assignment_expression [111820,111872]" dest="assignment_expression [40733,40785]"/>
  <match src="if: if [102194,102196]" dest="if: if [31107,31109]"/>
  <match src="(: ( [42387,42388]" dest="(: ( [47578,47579]"/>
  <match src="): ) [110237,110238]" dest="): ) [39150,39151]"/>
  <match src="returns: returns [71937,71944]" dest="returns: returns [25750,25757]"/>
  <match src="call_argument [115273,115289]" dest="call_argument [70217,70233]"/>
  <match src="uint256: uint256 [55079,55086]" dest="uint256: uint256 [14192,14199]"/>
  <match src="string [88131,88137]" dest="string [71147,71156]"/>
  <match src="function: function [19734,19742]" dest="function: function [65145,65153]"/>
  <match src="(: ( [62690,62691]" dest="(: ( [19524,19525]"/>
  <match src="(: ( [42311,42312]" dest="(: ( [47502,47503]"/>
  <match src="unary_expression [40039,40044]" dest="unary_expression [45230,45235]"/>
  <match src="call_argument [29770,29776]" dest="call_argument [58463,58469]"/>
  <match src="function: function [71882,71890]" dest="function: function [25695,25703]"/>
  <match src="parameter [71946,71965]" dest="parameter [25759,25778]"/>
  <match src="identifier: bonded [95902,95908]" dest="identifier: bonded [27120,27126]"/>
  <match src="type_name [110118,110125]" dest="type_name [39031,39038]"/>
  <match src="primitive_type [63275,63279]" dest="primitive_type [20109,20113]"/>
  <match src="call_argument [4094,4095]" dest="call_argument [4658,4659]"/>
  <match src="type_name [12026,12033]" dest="type_name [22024,22031]"/>
  <match src="parameter [9868,9887]" dest="parameter [10432,10451]"/>
  <match src="visibility [107464,107472]" dest="visibility [36377,36385]"/>
  <match src="comment: /**  * @title Decimal  * @author dYdX  *  * Library that defines a fixed-point number with 18 decimal places.  */ [5487,5600]" dest="comment: /**  * @title Decimal  * @author dYdX  *  * Library that defines a fixed-point number with 18 decimal places.  */ [6051,6164]"/>
  <match src="primitive_type [1689,1696]" dest="primitive_type [2253,2260]"/>
  <match src="]: ] [109174,109175]" dest="]: ] [38087,38088]"/>
  <match src="function_body [107473,107543]" dest="function_body [36386,36456]"/>
  <match src="{: { [6395,6396]" dest="{: { [6959,6960]"/>
  <match src="visibility [64233,64241]" dest="visibility [21067,21075]"/>
  <match src="call_expression [43464,43490]" dest="call_expression [48655,48681]"/>
  <match src="function: function [71978,71986]" dest="function: function [25791,25799]"/>
  <match src="member_expression [68067,68082]" dest="member_expression [83624,83639]"/>
  <match src="type_name [94025,94032]" dest="type_name [74883,74890]"/>
  <match src=",: , [89021,89022]" dest=",: , [72396,72397]"/>
  <match src="identifier: sender [90146,90152]" dest="identifier: sender [73107,73113]"/>
  <match src="(: ( [89435,89436]" dest="(: ( [72506,72507]"/>
  <match src="): ) [7341,7342]" dest="): ) [7905,7906]"/>
  <match src=".: . [101811,101812]" dest=".: . [30724,30725]"/>
  <match src="assignment_expression [109495,109590]" dest="assignment_expression [38408,38503]"/>
  <match src="type_cast_expression [22038,22048]" dest="type_cast_expression [64954,64964]"/>
  <match src="identifier: msg [89109,89112]" dest="identifier: msg [72462,72465]"/>
  <match src="for_statement [45355,45712]" dest="for_statement [50546,50903]"/>
  <match src="{: { [39011,39012]" dest="{: { [44202,44203]"/>
  <match src="return: return [4782,4788]" dest="return: return [5346,5352]"/>
  <match src="emit: emit [90871,90875]" dest="emit: emit [73428,73432]"/>
  <match src="): ) [99117,99118]" dest="): ) [77767,77768]"/>
  <match src="private: private [15984,15991]" dest="private: private [18325,18332]"/>
  <match src="identifier: owner [110292,110297]" dest="identifier: owner [39205,39210]"/>
  <match src="bytes: bytes [46938,46943]" dest="bytes: bytes [52129,52134]"/>
  <match src="string_literal [114672,114684]" dest="string_literal [69616,69628]"/>
  <match src="): ) [101621,101622]" dest="): ) [30534,30535]"/>
  <match src=".: . [34798,34799]" dest=".: . [67510,67511]"/>
  <match src="state_variable_declaration [53142,53191]" dest="state_variable_declaration [12255,12304]"/>
  <match src="): ) [43489,43490]" dest="): ) [48680,48681]"/>
  <match src="expression_statement [91684,91731]" dest="expression_statement [64629,64671]"/>
  <match src="identifier: SafeMath [106591,106599]" dest="identifier: SafeMath [35504,35512]"/>
  <match src="uint256: uint256 [38784,38791]" dest="uint256: uint256 [43975,43982]"/>
  <match src="type_name [25602,25609]" dest="type_name [60132,60139]"/>
  <match src="identifier: epoch [111685,111690]" dest="identifier: epoch [40598,40603]"/>
  <match src="primitive_type [44202,44209]" dest="primitive_type [49393,49400]"/>
  <match src="identifier: i [44210,44211]" dest="identifier: i [49401,49402]"/>
  <match src="address: address [88275,88282]" dest="address: address [83223,83230]"/>
  <match src="identifier: candidates [104692,104702]" dest="identifier: candidates [33605,33615]"/>
  <match src="address: address [80558,80565]" dest="address: address [82065,82072]"/>
  <match src="variable_declaration_statement [111332,111408]" dest="variable_declaration_statement [40245,40321]"/>
  <match src="): ) [63375,63376]" dest="): ) [20209,20210]"/>
  <match src="call_argument [7765,7769]" dest="call_argument [8329,8333]"/>
  <match src="{: { [55088,55089]" dest="{: { [14201,14202]"/>
  <match src=",: , [43119,43120]" dest=",: , [48310,48311]"/>
  <match src="identifier: account [102562,102569]" dest="identifier: account [31475,31482]"/>
  <match src="member_expression [89212,89229]" dest="member_expression [72308,72325]"/>
  <match src="call_expression [89612,89625]" dest="call_expression [72620,72633]"/>
  <match src="[: [ [113003,113004]" dest="[: [ [41916,41917]"/>
  <match src="=: = [109149,109150]" dest="=: = [38062,38063]"/>
  <match src="parameter [59992,60007]" dest="parameter [24966,24981]"/>
  <match src="identifier: sub [109878,109881]" dest="identifier: sub [38791,38794]"/>
  <match src=".: . [113586,113587]" dest=".: . [42499,42500]"/>
  <match src="parameter [29583,29597]" dest="parameter [54003,54017]"/>
  <match src="type_name [7481,7485]" dest="type_name [8045,8049]"/>
  <match src="address: address [104595,104602]" dest="address: address [33508,33515]"/>
  <match src="): ) [41217,41218]" dest="): ) [46408,46409]"/>
  <match src="(: ( [108741,108742]" dest="(: ( [37654,37655]"/>
  <match src="primitive_type [62767,62774]" dest="primitive_type [19601,19608]"/>
  <match src="function_definition [7099,7273]" dest="function_definition [7663,7837]"/>
  <match src="parameter [58229,58245]" dest="parameter [61602,61622]"/>
  <match src=",: , [7853,7854]" dest=",: , [8417,8418]"/>
  <match src="identifier: expiration [111862,111872]" dest="identifier: expiration [40775,40785]"/>
  <match src=",: , [43643,43644]" dest=",: , [48834,48835]"/>
  <match src="bool: bool [38902,38906]" dest="bool: bool [44093,44097]"/>
  <match src="state_mutability [105317,105321]" dest="state_mutability [34230,34234]"/>
  <match src="=: = [52784,52785]" dest="=: = [11897,11898]"/>
  <match src="identifier: amount [110496,110502]" dest="identifier: amount [39409,39415]"/>
  <match src="identifier: temp [7798,7802]" dest="identifier: temp [8362,8366]"/>
  <match src="member_expression [113176,113193]" dest="member_expression [42089,42106]"/>
  <match src="expression_statement [46071,46107]" dest="expression_statement [51262,51298]"/>
  <match src="returns: returns [46775,46782]" dest="returns: returns [51966,51973]"/>
  <match src="primitive_type [52736,52743]" dest="primitive_type [11849,11856]"/>
  <match src="identifier: Status [95329,95335]" dest="identifier: Status [26547,26553]"/>
  <match src="function: function [9096,9104]" dest="function: function [9660,9668]"/>
  <match src="identifier: IERC20 [59776,59782]" dest="identifier: IERC20 [24750,24756]"/>
  <match src="function_definition [1238,1425]" dest="function_definition [1802,1989]"/>
  <match src="constant: constant [53509,53517]" dest="constant: constant [12622,12630]"/>
  <match src="): ) [112407,112408]" dest="): ) [41320,41321]"/>
  <match src="identifier: D256 [9277,9281]" dest="identifier: D256 [9841,9845]"/>
  <match src="internal: internal [815,823]" dest="internal: internal [1379,1387]"/>
  <match src="): ) [46104,46105]" dest="): ) [51295,51296]"/>
  <match src="return: return [101607,101613]" dest="return: return [30520,30526]"/>
  <match src="primitive_type [73048,73055]" dest="primitive_type [59872,59879]"/>
  <match src="uint256: uint256 [88459,88466]" dest="uint256: uint256 [83177,83184]"/>
  <match src="(: ( [108463,108464]" dest="(: ( [37376,37377]"/>
  <match src="(: ( [39543,39544]" dest="(: ( [44734,44735]"/>
  <match src="=: = [3443,3444]" dest="=: = [4007,4008]"/>
  <match src="=: = [53845,53846]" dest="=: = [12958,12959]"/>
  <match src="}: } [95388,95389]" dest="}: } [26606,26607]"/>
  <match src="primitive_type [59957,59961]" dest="primitive_type [24931,24935]"/>
  <match src="call_expression [7665,7692]" dest="call_expression [8229,8256]"/>
  <match src=",: , [98472,98473]" dest=",: , [77122,77123]"/>
  <match src="primitive_type [104032,104039]" dest="primitive_type [32945,32952]"/>
  <match src="function_body [7017,7093]" dest="function_body [7581,7657]"/>
  <match src="parameter [41831,41847]" dest="parameter [47022,47038]"/>
  <match src="identifier: expiring [111916,111924]" dest="identifier: expiring [40829,40837]"/>
  <match src="}: } [101322,101323]" dest="}: } [30235,30236]"/>
  <match src="function_definition [98173,98202]" dest="function_definition [76823,76852]"/>
  <match src="state_mutability [104638,104642]" dest="state_mutability [33551,33555]"/>
  <match src="): ) [23145,23146]" dest="): ) [54905,54906]"/>
  <match src="returns: returns [56388,56395]" dest="returns: returns [15501,15508]"/>
  <match src="uint256: uint256 [10114,10121]" dest="uint256: uint256 [10678,10685]"/>
  <match src="primitive_type [38655,38661]" dest="primitive_type [43846,43852]"/>
  <match src="call_expression [92229,92242]" dest="call_expression [57808,57821]"/>
  <match src="private: private [27704,27711]" dest="private: private [58571,58578]"/>
  <match src="internal: internal [113539,113547]" dest="internal: internal [42452,42460]"/>
  <match src="event_definition [63562,63609]" dest="event_definition [20396,20443]"/>
  <match src="address: address [62767,62774]" dest="address: address [19601,19608]"/>
  <match src="contract_body [114633,115414]" dest="contract_body [69577,70358]"/>
  <match src="(: ( [8902,8903]" dest="(: ( [9466,9467]"/>
  <match src="): ) [104339,104340]" dest="): ) [33252,33253]"/>
  <match src="member_expression [10152,10159]" dest="member_expression [10716,10723]"/>
  <match src="): ) [12441,12442]" dest="): ) [22439,22440]"/>
  <match src="pure: pure [7540,7544]" dest="pure: pure [8104,8108]"/>
  <match src="primitive_type [6919,6926]" dest="primitive_type [7483,7490]"/>
  <match src="state_variable_declaration [53655,53709]" dest="state_variable_declaration [12768,12822]"/>
  <match src="uint256: uint256 [95594,95601]" dest="uint256: uint256 [26812,26819]"/>
  <match src="type_cast_expression [80364,80377]" dest="type_cast_expression [71985,71998]"/>
  <match src="type_name [105331,105338]" dest="type_name [34244,34251]"/>
  <match src="expression_statement [110020,110088]" dest="expression_statement [38933,39001]"/>
  <match src="identifier: DAI [52673,52676]" dest="identifier: DAI [11786,11789]"/>
  <match src=",: , [6416,6417]" dest=",: , [6980,6981]"/>
  <match src="bool: bool [9037,9041]" dest="bool: bool [9601,9605]"/>
  <match src="primitive_type [38502,38509]" dest="primitive_type [43693,43700]"/>
  <match src="identifier: epochs [96714,96720]" dest="identifier: epochs [27932,27938]"/>
  <match src="identifier: _state [108963,108969]" dest="identifier: _state [37876,37882]"/>
  <match src="identifier: totalNet [101556,101564]" dest="identifier: totalNet [30469,30477]"/>
  <match src="for: for [7702,7705]" dest="for: for [8266,8269]"/>
  <match src="identifier: bonded [107357,107363]" dest="identifier: bonded [36270,36276]"/>
  <match src="(: ( [91859,91860]" dest="(: ( [80455,80456]"/>
  <match src="state_mutability [56383,56387]" dest="state_mutability [15496,15500]"/>
  <match src="primitive_type [43179,43186]" dest="primitive_type [48370,48377]"/>
  <match src="identifier: account [108902,108909]" dest="identifier: account [37815,37822]"/>
  <match src="private: private [53049,53056]" dest="private: private [12162,12169]"/>
  <match src="}: } [54869,54870]" dest="}: } [13982,13983]"/>
  <match src="): ) [108624,108625]" dest="): ) [37537,37538]"/>
  <match src="(: ( [62576,62577]" dest="(: ( [19410,19411]"/>
  <match src="internal: internal [9548,9556]" dest="internal: internal [10112,10120]"/>
  <match src="identifier: balance [108249,108256]" dest="identifier: balance [37162,37169]"/>
  <match src=".: . [88679,88680]" dest=".: . [83370,83371]"/>
  <match src="return_type_definition [104922,104939]" dest="return_type_definition [33835,33852]"/>
  <match src="): ) [63865,63866]" dest="): ) [20699,20700]"/>
  <match src="[: [ [113042,113043]" dest="[: [ [41955,41956]"/>
  <match src="type_name [10060,10064]" dest="type_name [10624,10628]"/>
  <match src="parameter [107048,107052]" dest="parameter [35961,35965]"/>
  <match src="call_argument [4100,4126]" dest="call_argument [4664,4690]"/>
  <match src="internal: internal [8880,8888]" dest="internal: internal [9444,9452]"/>
  <match src="type_name [95724,95731]" dest="type_name [26942,26949]"/>
  <match src="type_name [54031,54038]" dest="type_name [13144,13151]"/>
  <match src="identifier: account [100447,100454]" dest="identifier: account [29360,29367]"/>
  <match src="internal: internal [109777,109785]" dest="internal: internal [38690,38698]"/>
  <match src="identifier: self [6525,6529]" dest="identifier: self [7089,7093]"/>
  <match src="address: address [62856,62863]" dest="address: address [19690,19697]"/>
  <match src="comment: // 12 epochs fluid [53710,53728]" dest="comment: // 12 epochs fluid [12823,12841]"/>
  <match src=".: . [90776,90777]" dest=".: . [80416,80417]"/>
  <match src="identifier: b [2059,2060]" dest="identifier: b [2623,2624]"/>
  <match src="address: address [105025,105032]" dest="address: address [33938,33945]"/>
  <match src="(: ( [6044,6045]" dest="(: ( [6608,6609]"/>
  <match src="(: ( [103995,103996]" dest="(: ( [32908,32909]"/>
  <match src="struct_member [95594,95614]" dest="struct_member [26812,26832]"/>
  <match src="call_argument [89391,89401]" dest="call_argument [81249,81259]"/>
  <match src="identifier: candidates [105508,105518]" dest="identifier: candidates [34421,34431]"/>
  <match src="function_definition [104398,104532]" dest="function_definition [33311,33445]"/>
  <match src="return_type_definition [7549,7570]" dest="return_type_definition [8113,8134]"/>
  <match src="identifier: EPOCH_OFFSET [53066,53078]" dest="identifier: EPOCH_OFFSET [12179,12191]"/>
  <match src="type_name [56695,56702]" dest="type_name [15808,15815]"/>
  <match src="return_type_definition [100300,100315]" dest="return_type_definition [29213,29228]"/>
  <match src="parameter [63121,63134]" dest="parameter [19955,19968]"/>
  <match src="identifier: newClaimable [88467,88479]" dest="identifier: timestamp [83185,83194]"/>
  <match src="internal: internal [43232,43240]" dest="internal: internal [48423,48431]"/>
  <match src="primitive_type [73077,73084]" dest="primitive_type [78728,78735]"/>
  <match src="identifier: msg [90036,90039]" dest="identifier: msg [73910,73913]"/>
  <match src="call_expression [108886,108929]" dest="call_expression [37799,37842]"/>
  <match src="(: ( [91644,91645]" dest="(: ( [73643,73644]"/>
  <match src="parameter [63667,63671]" dest="parameter [20501,20505]"/>
  <match src="type_name [95512,95539]" dest="type_name [26730,26757]"/>
  <match src="returns: returns [9306,9313]" dest="returns: returns [9870,9877]"/>
  <match src="returns: returns [106907,106914]" dest="returns: returns [35820,35827]"/>
  <match src="call_argument [91177,91196]" dest="call_argument [81373,81395]"/>
  <match src="variable_declaration [112020,112054]" dest="variable_declaration [40933,40967]"/>
  <match src="member_expression [88934,88950]" dest="member_expression [71877,71898]"/>
  <match src="(: ( [109994,109995]" dest="(: ( [38907,38908]"/>
  <match src="view: view [100850,100854]" dest="view: view [29763,29767]"/>
  <match src="identifier: candidate [112382,112391]" dest="identifier: candidate [41295,41304]"/>
  <match src="identifier: D256 [6390,6394]" dest="identifier: D256 [6954,6958]"/>
  <match src="type_name [88459,88466]" dest="type_name [83177,83184]"/>
  <match src="identifier: amount [30712,30718]" dest="identifier: amount [16928,16934]"/>
  <match src="type_name [103751,103758]" dest="type_name [32664,32671]"/>
  <match src="identifier: price [111174,111179]" dest="identifier: price [40087,40092]"/>
  <match src="(: ( [54235,54236]" dest="(: ( [13348,13349]"/>
  <match src="return_type_definition [13559,13573]" dest="return_type_definition [23557,23571]"/>
  <match src="identifier: epochTime [102943,102952]" dest="identifier: epochTime [31856,31865]"/>
  <match src="identifier: D256 [32738,32742]" dest="identifier: D256 [68365,68369]"/>
  <match src="call_expression [91740,91810]" dest="call_expression [63817,63858]"/>
  <match src="comment: /* solium-disable-next-line security/no-modify-for-iter-var */ [44296,44358]" dest="comment: /* solium-disable-next-line security/no-modify-for-iter-var */ [49487,49549]"/>
  <match src="public: public [100288,100294]" dest="public: public [29201,29207]"/>
  <match src="identifier: balance [112175,112182]" dest="identifier: balance [41088,41095]"/>
  <match src="primitive_type [80452,80456]" dest="primitive_type [82104,82108]"/>
  <match src="): ) [59961,59962]" dest="): ) [24935,24936]"/>
  <match src="call_struct_argument [6228,6246]" dest="call_struct_argument [6792,6810]"/>
  <match src=",: , [90576,90577]" dest=",: , [73298,73299]"/>
  <match src="parameter [62809,62813]" dest="parameter [19643,19647]"/>
  <match src="): ) [91835,91836]" dest="): ) [58337,58338]"/>
  <match src="identifier: candidate [104703,104712]" dest="identifier: candidate [33616,33625]"/>
  <match src=":: : [7046,7047]" dest=":: : [7610,7611]"/>
  <match src="comment: // ============ Structs ============ [5737,5773]" dest="comment: // ============ Structs ============ [6301,6337]"/>
  <match src="member_expression [108939,108953]" dest="member_expression [37852,37866]"/>
  <match src="identifier: payloadA [42947,42955]" dest="identifier: payloadA [48138,48146]"/>
  <match src="constant: constant [38792,38800]" dest="constant: constant [43983,43991]"/>
  <match src=".: . [109978,109979]" dest=".: . [38891,38892]"/>
  <match src="return_statement [102528,102629]" dest="return_statement [31441,31542]"/>
  <match src="function_body [43254,43822]" dest="function_body [48445,49013]"/>
  <match src="address: address [108172,108179]" dest="address: address [37085,37092]"/>
  <match src="identifier: sub [6690,6693]" dest="identifier: sub [7254,7257]"/>
  <match src="{: { [99840,99841]" dest="{: { [28753,28754]"/>
  <match src="visibility [71899,71905]" dest="visibility [25712,25718]"/>
  <match src="unary_expression [39004,39009]" dest="unary_expression [44195,44200]"/>
  <match src="identifier: _state [113580,113586]" dest="identifier: _state [42493,42499]"/>
  <match src="): ) [39675,39676]" dest="): ) [44866,44867]"/>
  <match src="): ) [75289,75290]" dest="): ) [68586,68587]"/>
  <match src="identifier: D256 [33437,33441]" dest="identifier: D256 [67556,67560]"/>
  <match src="type_name [86296,86303]" dest="type_name [67617,67624]"/>
  <match src="parameter [4673,4699]" dest="parameter [5237,5263]"/>
  <match src="(: ( [2049,2050]" dest="(: ( [2613,2614]"/>
  <match src="identifier: z [47603,47604]" dest="identifier: z [52794,52795]"/>
  <match src="using: using [106585,106590]" dest="using: using [35498,35503]"/>
  <match src="=: = [47422,47423]" dest="=: = [52613,52614]"/>
  <match src="return_statement [7027,7087]" dest="return_statement [7591,7651]"/>
  <match src="returns: returns [101885,101892]" dest="returns: returns [30798,30805]"/>
  <match src="member_expression [90682,90692]" dest="member_expression [63232,63242]"/>
  <match src="identifier: totalBonded [89612,89623]" dest="identifier: totalBonded [72620,72631]"/>
  <match src="uint256: uint256 [53011,53018]" dest="uint256: uint256 [12124,12131]"/>
  <match src="(: ( [108988,108989]" dest="(: ( [37901,37902]"/>
  <match src="identifier: must [39331,39335]" dest="identifier: must [44522,44526]"/>
  <match src="view: view [104638,104642]" dest="view: view [33551,33555]"/>
  <match src="function: function [105140,105148]" dest="function: function [34053,34061]"/>
  <match src="visibility [5899,5907]" dest="visibility [6463,6471]"/>
  <match src="(: ( [5892,5893]" dest="(: ( [6456,6457]"/>
  <match src="parameter [55502,55509]" dest="parameter [14615,14622]"/>
  <match src="&gt;&gt;: &gt;&gt; [46651,46653]" dest="&gt;&gt;: &gt;&gt; [51842,51844]"/>
  <match src=".: . [105097,105098]" dest=".: . [34010,34011]"/>
  <match src="unary_expression [40674,40679]" dest="unary_expression [45865,45870]"/>
  <match src="uint256: uint256 [112746,112753]" dest="uint256: uint256 [41659,41666]"/>
  <match src="identifier: _state [112781,112787]" dest="identifier: _state [41694,41700]"/>
  <match src="comment: // populate the string starting with the least-significant character [45259,45327]" dest="comment: // populate the string starting with the least-significant character [50450,50518]"/>
  <match src=".: . [100437,100438]" dest=".: . [29350,29351]"/>
  <match src="string_literal [460,489]" dest="string_literal [1024,1053]"/>
  <match src="identifier: getGovernanceSuperMajority [55289,55315]" dest="identifier: getGovernanceSuperMajority [14402,14428]"/>
  <match src="type_name [96066,96073]" dest="type_name [27284,27291]"/>
  <match src="returns: returns [11619,11626]" dest="returns: returns [21617,21624]"/>
  <match src="returns: returns [64070,64077]" dest="returns: returns [20904,20911]"/>
  <match src="identifier: value [88191,88196]" dest="identifier: value [71210,71215]"/>
  <match src="=: = [97908,97909]" dest="=: = [76558,76559]"/>
  <match src=".: . [107640,107641]" dest=".: . [36553,36554]"/>
  <match src="&quot;: &quot; [72815,72816]" dest="&quot;: &quot; [78630,78631]"/>
  <match src="identifier: amount [106781,106787]" dest="identifier: amount [35694,35700]"/>
  <match src="function_definition [110854,111051]" dest="function_definition [39767,39964]"/>
  <match src="identifier: staged [96432,96438]" dest="identifier: staged [27650,27656]"/>
  <match src=",: , [95998,95999]" dest=",: , [27216,27217]"/>
  <match src="(: ( [104523,104524]" dest="(: ( [33436,33437]"/>
  <match src="state_variable_declaration [96808,96829]" dest="state_variable_declaration [28026,28047]"/>
  <match src="comment: /*     Copyright 2020 Reflective Dollar Devs, based on the works of the Dynamic Dollar Devs and the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [82072,82747]" dest="comment: /*     Copyright 2020 Reflective Dollar Devs, based on the works of the Dynamic Dollar Devs and the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [65865,66540]"/>
  <match src="call_argument [92905,92909]" dest="call_argument [81569,81573]"/>
  <match src="): ) [72024,72025]" dest="): ) [25837,25838]"/>
  <match src="bool: bool [104459,104463]" dest="bool: bool [33372,33376]"/>
  <match src="(: ( [100740,100741]" dest="(: ( [29653,29654]"/>
  <match src="identifier: account [115078,115085]" dest="identifier: account [70022,70029]"/>
  <match src=",: , [13128,13129]" dest=",: , [23126,23127]"/>
  <match src="&quot;: &quot; [874,875]" dest="&quot;: &quot; [1438,1439]"/>
  <match src="{: { [105208,105209]" dest="{: { [34121,34122]"/>
  <match src="binary_expression [102535,102561]" dest="binary_expression [31448,31474]"/>
  <match src="number_literal: 21 [53263,53265]" dest="number_literal: 21 [12376,12378]"/>
  <match src="identifier: LPAREN [39702,39708]" dest="identifier: LPAREN [44893,44899]"/>
  <match src="primitive_type [109043,109050]" dest="primitive_type [37956,37963]"/>
  <match src="binary_expression [9594,9609]" dest="binary_expression [10158,10173]"/>
  <match src="primitive_type [62607,62614]" dest="primitive_type [19441,19448]"/>
  <match src="member_expression [111426,111452]" dest="member_expression [40339,40365]"/>
  <match src="call_argument [90064,90069]" dest="call_argument [73947,73952]"/>
  <match src="member_expression [7966,7980]" dest="member_expression [8530,8544]"/>
  <match src="visibility [24901,24909]" dest="visibility [54907,54915]"/>
  <match src="identifier: account [104603,104610]" dest="identifier: account [33516,33523]"/>
  <match src="): ) [6791,6792]" dest="): ) [7355,7356]"/>
  <match src=".: . [107758,107759]" dest=".: . [36671,36672]"/>
  <match src="member_expression [76427,76439]" dest="member_expression [80559,80571]"/>
  <match src="function: function [109009,109017]" dest="function: function [37922,37930]"/>
  <match src="string_literal [32915,32951]" dest="string_literal [63510,63539]"/>
  <match src="parameter [19046,19069]" dest="parameter [17007,17026]"/>
  <match src="*: * [47329,47330]" dest="*: * [52520,52521]"/>
  <match src="identifier: sender [11092,11098]" dest="identifier: sender [65600,65606]"/>
  <match src="returns: returns [104450,104457]" dest="returns: returns [33363,33370]"/>
  <match src="contract_declaration [72706,76543]" dest="contract_declaration [66541,68868]"/>
  <match src="call_argument [89016,89021]" dest="call_argument [72391,72396]"/>
  <match src="uint256: uint256 [52960,52967]" dest="uint256: uint256 [12073,12080]"/>
  <match src="function_definition [56342,56484]" dest="function_definition [15455,15597]"/>
  <match src=",: , [42200,42201]" dest=",: , [47391,47392]"/>
  <match src="primitive_type [110299,110306]" dest="primitive_type [39212,39219]"/>
  <match src="type_name [12434,12441]" dest="type_name [22432,22439]"/>
  <match src=",: , [1687,1688]" dest=",: , [2251,2252]"/>
  <match src="{: { [47251,47252]" dest="{: { [52442,52443]"/>
  <match src="): ) [41480,41481]" dest="): ) [46671,46672]"/>
  <match src=".: . [35100,35101]" dest=".: . [61990,61991]"/>
  <match src="call_expression [20005,20076]" dest="call_expression [63550,63653]"/>
  <match src="(: ( [108083,108084]" dest="(: ( [36996,36997]"/>
  <match src="): ) [94587,94588]" dest="): ) [75445,75446]"/>
  <match src="visibility [110332,110340]" dest="visibility [39245,39253]"/>
  <match src="identifier: Decimal [35359,35366]" dest="identifier: Decimal [57350,57357]"/>
  <match src="call_expression [98497,98568]" dest="call_expression [77147,77218]"/>
  <match src="memory: memory [56410,56416]" dest="memory: memory [15523,15529]"/>
  <match src="string [21187,21222]" dest="string [65482,65519]"/>
  <match src="call_argument [2062,2097]" dest="call_argument [2626,2661]"/>
  <match src="identifier: length [45085,45091]" dest="identifier: length [50276,50282]"/>
  <match src=".: . [7436,7437]" dest=".: . [8000,8001]"/>
  <match src="type_name [5700,5707]" dest="type_name [6264,6271]"/>
  <match src="identifier: candidates [112642,112652]" dest="identifier: candidates [41555,41565]"/>
  <match src="=: = [53184,53185]" dest="=: = [12297,12298]"/>
  <match src="member_expression [111174,111191]" dest="member_expression [40087,40104]"/>
  <match src="internal: internal [8297,8305]" dest="internal: internal [8861,8869]"/>
  <match src="public: public [100941,100947]" dest="public: public [29854,29860]"/>
  <match src="(: ( [16108,16109]" dest="(: ( [16860,16861]"/>
  <match src="): ) [8878,8879]" dest="): ) [9442,9443]"/>
  <match src=".: . [99903,99904]" dest=".: . [28816,28817]"/>
  <match src="uint8: uint8 [47927,47932]" dest="uint8: uint8 [53118,53123]"/>
  <match src="type_name [103591,103598]" dest="type_name [32504,32511]"/>
  <match src="identifier: epoch [103723,103728]" dest="identifier: epoch [32636,32641]"/>
  <match src="type_name [96113,96120]" dest="type_name [27331,27338]"/>
  <match src="{: { [1732,1733]" dest="{: { [2296,2297]"/>
  <match src="identifier: value [8590,8595]" dest="identifier: value [9154,9159]"/>
  <match src="identifier: sub [112216,112219]" dest="identifier: sub [41129,41132]"/>
  <match src="variable_declaration [111125,111160]" dest="variable_declaration [40038,40073]"/>
  <match src="identifier: ASCII_ZERO [47048,47058]" dest="identifier: ASCII_ZERO [52239,52249]"/>
  <match src="binary_expression [47410,47420]" dest="binary_expression [52601,52611]"/>
  <match src="=: = [91614,91615]" dest="=: = [73632,73633]"/>
  <match src="identifier: lastReserve [75903,75914]" dest="identifier: staged [73133,73139]"/>
  <match src="binary_expression [45625,45631]" dest="binary_expression [50816,50822]"/>
  <match src="identifier: IOracle [96302,96309]" dest="identifier: IOracle [27520,27527]"/>
  <match src="(: ( [91658,91659]" dest="(: ( [73662,73663]"/>
  <match src="return: return [4083,4089]" dest="return: return [4647,4653]"/>
  <match src="identifier: recipient [19911,19920]" dest="identifier: recipient [65351,65360]"/>
  <match src="identifier: GOVERNANCE_QUORUM [53296,53313]" dest="identifier: GOVERNANCE_QUORUM [12409,12426]"/>
  <match src="&quot;: &quot; [90735,90736]" dest="&quot;: &quot; [81184,81185]"/>
  <match src="variable_declaration [75328,75352]" dest="variable_declaration [68074,68090]"/>
  <match src="array_access [109392,109431]" dest="array_access [38305,38344]"/>
  <match src="}: } [89133,89134]" dest="}: } [72486,72487]"/>
  <match src="assignment_expression [109796,109897]" dest="assignment_expression [38709,38810]"/>
  <match src="function_body [106813,106842]" dest="function_body [35726,35755]"/>
  <match src="bool: bool [13568,13572]" dest="bool: bool [23566,23570]"/>
  <match src="}: } [27468,27469]" dest="}: } [55607,55608]"/>
  <match src=",: , [113462,113463]" dest=",: , [42375,42376]"/>
  <match src=",: , [88298,88299]" dest=",: , [83246,83247]"/>
  <match src="member_expression [105225,105242]" dest="member_expression [34138,34155]"/>
  <match src="&quot;: &quot; [61421,61422]" dest="&quot;: &quot; [79313,79314]"/>
  <match src="type_name [71946,71958]" dest="type_name [25759,25771]"/>
  <match src="call_argument [41455,41481]" dest="call_argument [46646,46672]"/>
  <match src="primitive_type [64470,64477]" dest="primitive_type [21304,21311]"/>
  <match src="function_definition [111729,111943]" dest="function_definition [40642,40856]"/>
  <match src="primitive_type [106633,106640]" dest="primitive_type [35546,35553]"/>
  <match src="comment: // remove the last decimal digit [45649,45681]" dest="comment: // remove the last decimal digit [50840,50872]"/>
  <match src="primitive_type [28093,28100]" dest="primitive_type [54874,54881]"/>
  <match src="{: { [7734,7735]" dest="{: { [8298,8299]"/>
  <match src="call_argument [41615,41634]" dest="call_argument [46806,46825]"/>
  <match src="]: ] [104377,104378]" dest="]: ] [33290,33291]"/>
  <match src="event_definition [98120,98167]" dest="event_definition [76770,76817]"/>
  <match src="bytes32: bytes32 [41124,41131]" dest="bytes32: bytes32 [46315,46322]"/>
  <match src="state_mutability [100750,100754]" dest="state_mutability [29663,29667]"/>
  <match src="event_paramater [88429,88442]" dest="event_paramater [71318,71331]"/>
  <match src="type_name [8445,8449]" dest="type_name [9009,9013]"/>
  <match src="yul_path [105829,105833]" dest="yul_path [34742,34746]"/>
  <match src="assignment_expression [112428,112472]" dest="assignment_expression [41341,41385]"/>
  <match src="): ) [71992,71993]" dest="): ) [25805,25806]"/>
  <match src="returns: returns [101160,101167]" dest="returns: returns [30073,30080]"/>
  <match src="type_name [102976,102983]" dest="type_name [31889,31896]"/>
  <match src="identifier: DEBT_RATIO_CAP [53830,53844]" dest="identifier: DEBT_RATIO_CAP [12943,12957]"/>
  <match src="expression_statement [46284,46291]" dest="expression_statement [51475,51482]"/>
  <match src="view: view [63816,63820]" dest="view: view [20650,20654]"/>
  <match src="identifier: value [90694,90699]" dest="identifier: epoch [63244,63249]"/>
  <match src="]: ] [44477,44478]" dest="]: ] [49668,49669]"/>
  <match src="identifier: balance [101519,101526]" dest="identifier: balance [30432,30439]"/>
  <match src="function: function [59968,59976]" dest="function: function [24942,24950]"/>
  <match src="identifier: amount [107456,107462]" dest="identifier: amount [36369,36375]"/>
  <match src="is: is [15789,15791]" dest="is: is [59537,59539]"/>
  <match src="type_name [95531,95538]" dest="type_name [26749,26756]"/>
  <match src="(: ( [111606,111607]" dest="(: ( [40519,40520]"/>
  <match src="identifier: must [39890,39894]" dest="identifier: must [45081,45085]"/>
  <match src="number_literal: 0 [45384,45385]" dest="number_literal: 0 [50575,50576]"/>
  <match src="array_access [105225,105253]" dest="array_access [34138,34166]"/>
  <match src="call_argument [30105,30118]" dest="call_argument [54285,54298]"/>
  <match src="member_expression [108259,108295]" dest="member_expression [37172,37208]"/>
  <match src="visibility [102366,102372]" dest="visibility [31279,31285]"/>
  <match src="return: return [501,507]" dest="return: return [1065,1071]"/>
  <match src="identifier: balanceOf [92201,92210]" dest="identifier: balanceOf [57762,57771]"/>
  <match src="(: ( [104651,104652]" dest="(: ( [33564,33565]"/>
  <match src="identifier: that [92175,92179]" dest="identifier: that [57735,57739]"/>
  <match src="identifier: currentStart [103630,103642]" dest="identifier: currentStart [32543,32555]"/>
  <match src="memory: memory [56088,56094]" dest="memory: memory [15201,15207]"/>
  <match src="): ) [11754,11755]" dest="): ) [21752,21753]"/>
  <match src="state_mutability [65565,65569]" dest="state_mutability [17092,17096]"/>
  <match src="): ) [64134,64135]" dest="): ) [20968,20969]"/>
  <match src="type_name [27734,27741]" dest="type_name [78705,78712]"/>
  <match src="function_body [104808,104866]" dest="function_body [33721,33779]"/>
  <match src="identifier: amount [13138,13144]" dest="identifier: amount [23136,23142]"/>
  <match src="type_name [19769,19776]" dest="type_name [65186,65193]"/>
  <match src="type_name [107985,107991]" dest="type_name [36898,36904]"/>
  <match src="assignment_expression [108635,108700]" dest="assignment_expression [37548,37613]"/>
  <match src="): ) [42615,42616]" dest="): ) [47806,47807]"/>
  <match src=".: . [111179,111180]" dest=".: . [40092,40093]"/>
  <match src="member_expression [107885,107899]" dest="member_expression [36798,36812]"/>
  <match src="): ) [54243,54244]" dest="): ) [13356,13357]"/>
  <match src="identifier: amount [112754,112760]" dest="identifier: amount [41667,41673]"/>
  <match src="call_expression [89212,89248]" dest="call_expression [72308,72344]"/>
  <match src="call_argument [113678,113687]" dest="call_argument [42591,42600]"/>
  <match src="identifier: denominator [9984,9995]" dest="identifier: denominator [10548,10559]"/>
  <match src="member_expression [88951,88961]" dest="member_expression [71899,71909]"/>
  <match src="identifier: D256 [5930,5934]" dest="identifier: D256 [6494,6498]"/>
  <match src="memory: memory [45217,45223]" dest="memory: memory [50408,50414]"/>
  <match src="identifier: _state [108054,108060]" dest="identifier: _state [36967,36973]"/>
  <match src="block_statement [10161,10194]" dest="block_statement [10725,10758]"/>
  <match src="call_expression [102535,102542]" dest="call_expression [31448,31455]"/>
  <match src="): ) [13813,13814]" dest="): ) [23811,23812]"/>
  <match src="identifier: _state [111882,111888]" dest="identifier: _state [40795,40801]"/>
  <match src="contract: contract [96229,96237]" dest="contract: contract [27447,27455]"/>
  <match src="string_literal [89023,89058]" dest="string_literal [72398,72436]"/>
  <match src="pure: pure [41923,41927]" dest="pure: pure [47114,47118]"/>
  <match src="parameter [31111,31125]" dest="parameter [58555,58569]"/>
  <match src="type_name [52461,52468]" dest="type_name [11574,11581]"/>
  <match src="bytes: bytes [46784,46789]" dest="bytes: bytes [51975,51980]"/>
  <match src="type_name [39345,39352]" dest="type_name [44536,44543]"/>
  <match src="member_expression [58819,58831]" dest="member_expression [64489,64501]"/>
  <match src="): ) [113155,113156]" dest="): ) [42068,42069]"/>
  <match src="type_name [43179,43186]" dest="type_name [48370,48377]"/>
  <match src="address: address [96326,96333]" dest="address: address [27544,27551]"/>
  <match src="member_expression [107209,107234]" dest="member_expression [36122,36147]"/>
  <match src="(: ( [104295,104296]" dest="(: ( [33208,33209]"/>
  <match src="revert_statement [39475,39840]" dest="revert_statement [44666,45031]"/>
  <match src="visibility [60009,60017]" dest="visibility [24983,24991]"/>
  <match src="type_name [4064,4071]" dest="type_name [4628,4635]"/>
  <match src="state_mutability [49415,49419]" dest="state_mutability [18653,18657]"/>
  <match src="event_definition [13743,13815]" dest="event_definition [23741,23813]"/>
  <match src="state_mutability [47715,47719]" dest="state_mutability [52906,52910]"/>
  <match src="): ) [101463,101464]" dest="): ) [30376,30377]"/>
  <match src="returns: returns [103582,103589]" dest="returns: returns [32495,32502]"/>
  <match src="number_literal: 4 [46654,46655]" dest="number_literal: 4 [51845,51846]"/>
  <match src="identifier: spender [14028,14035]" dest="identifier: spender [24026,24033]"/>
  <match src="primitive_type [32520,32527]" dest="primitive_type [58370,58377]"/>
  <match src="): ) [63727,63728]" dest="): ) [20561,20562]"/>
  <match src="!: ! [41946,41947]" dest="!: ! [47137,47138]"/>
  <match src="type_cast_expression [45868,45882]" dest="type_cast_expression [51059,51073]"/>
  <match src="type_name [62738,62742]" dest="type_name [19572,19576]"/>
  <match src="identifier: _approve [21865,21873]" dest="identifier: approveCoupons [64868,64882]"/>
  <match src="identifier: stringifyTruncated [39200,39218]" dest="identifier: stringifyTruncated [44391,44409]"/>
  <match src="): ) [39824,39825]" dest="): ) [45015,45016]"/>
  <match src="array_access [110351,110373]" dest="array_access [39264,39286]"/>
  <match src="=: = [427,428]" dest="=: = [991,992]"/>
  <match src="identifier: epoch [102312,102317]" dest="identifier: epoch [31225,31230]"/>
  <match src="member_expression [109117,109148]" dest="member_expression [38030,38061]"/>
  <match src="visibility [94042,94050]" dest="visibility [74900,74908]"/>
  <match src="contract_body [96802,96831]" dest="contract_body [28020,28049]"/>
  <match src=".: . [73545,73546]" dest=".: . [81837,81838]"/>
  <match src="identifier: add [107525,107528]" dest="identifier: add [36438,36441]"/>
  <match src="primitive_type [47087,47092]" dest="primitive_type [52278,52283]"/>
  <match src="expression_statement [90541,90585]" dest="expression_statement [73271,73338]"/>
  <match src="pure: pure [6762,6766]" dest="pure: pure [7326,7330]"/>
  <match src="identifier: candidate [112735,112744]" dest="identifier: candidate [41648,41657]"/>
  <match src="=: = [54012,54013]" dest="=: = [13125,13126]"/>
  <match src="primitive_type [88705,88712]" dest="primitive_type [83386,83393]"/>
  <match src="identifier: zero [5888,5892]" dest="identifier: zero [6452,6456]"/>
  <match src="public: public [101465,101471]" dest="public: public [30378,30384]"/>
  <match src="variable_declaration [47311,47324]" dest="variable_declaration [52502,52515]"/>
  <match src="type_name [78444,78451]" dest="type_name [66715,66722]"/>
  <match src="identifier: candidate [113434,113443]" dest="identifier: candidate [42347,42356]"/>
  <match src="comment: /*     Copyright 2019 dYdX Trading Inc.     Copyright 2020 Dynamic Dollar Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [4805,5486]" dest="comment: /*     Copyright 2019 dYdX Trading Inc.     Copyright 2020 Dynamic Dollar Devs, based on the works of the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [5369,6050]"/>
  <match src="number_literal: 87 [38541,38543]" dest="number_literal: 87 [43732,43734]"/>
  <match src="identifier: reserve1 [63599,63607]" dest="identifier: reserve1 [20433,20441]"/>
  <match src="[: [ [113755,113756]" dest="[: [ [42668,42669]"/>
  <match src="}: } [45169,45170]" dest="}: } [50360,50361]"/>
  <match src=".: . [90498,90499]" dest=".: . [73180,73181]"/>
  <match src="(: ( [106632,106633]" dest="(: ( [35545,35546]"/>
  <match src="memory: memory [45834,45840]" dest="memory: memory [51025,51031]"/>
  <match src="member_expression [107185,107206]" dest="member_expression [36098,36119]"/>
  <match src="string_literal [73628,73647]" dest="string_literal [81932,81946]"/>
  <match src="identifier: reason [42872,42878]" dest="identifier: reason [48063,48069]"/>
  <match src="identifier: Decimal [99896,99903]" dest="identifier: Decimal [28809,28816]"/>
  <match src="member_expression [58935,58947]" dest="member_expression [62905,62917]"/>
  <match src="identifier: Decimal [55341,55348]" dest="identifier: Decimal [14454,14461]"/>
  <match src="array_access [103777,103797]" dest="array_access [32690,32710]"/>
  <match src="identifier: b [8877,8878]" dest="identifier: b [9441,9442]"/>
  <match src=".: . [116836,116837]" dest=".: . [83442,83443]"/>
  <match src="identifier: debt [107671,107675]" dest="identifier: debt [36584,36588]"/>
  <match src="identifier: Candidate [95953,95962]" dest="identifier: Candidate [27171,27180]"/>
  <match src="[: [ [110366,110367]" dest="[: [ [39279,39280]"/>
  <match src="contract_declaration [87812,93104]" dest="contract_declaration [71036,73962]"/>
  <match src="type_cast_expression [47042,47059]" dest="type_cast_expression [52233,52250]"/>
  <match src="call_expression [42937,42956]" dest="call_expression [48128,48147]"/>
  <match src="return_statement [101607,101654]" dest="return_statement [30520,30567]"/>
  <match src="external: external [62880,62888]" dest="external: external [19714,19722]"/>
  <match src="(: ( [63054,63055]" dest="(: ( [19888,19889]"/>
  <match src="yul_evm_builtin [99087,99093]" dest="yul_evm_builtin [77737,77743]"/>
  <match src=".: . [109862,109863]" dest=".: . [38775,38776]"/>
  <match src="): ) [103152,103153]" dest="): ) [32065,32066]"/>
  <match src="return_type_definition [103470,103487]" dest="return_type_definition [32383,32400]"/>
  <match src="expression_statement [112168,112248]" dest="expression_statement [41081,41161]"/>
  <match src="function_body [9577,9616]" dest="function_body [10141,10180]"/>
  <match src="comment: /**      * Global      */ [107089,107114]" dest="comment: /**      * Global      */ [36002,36027]"/>
  <match src="identifier: value [8393,8398]" dest="identifier: value [8957,8962]"/>
  <match src="function_body [8909,8954]" dest="function_body [9473,9518]"/>
  <match src="function_definition [101831,102090]" dest="function_definition [30744,31003]"/>
  <match src="(: ( [64012,64013]" dest="(: ( [20846,20847]"/>
  <match src="array_access [104685,104728]" dest="array_access [33598,33641]"/>
  <match src="user_defined_type [56235,56247]" dest="user_defined_type [15348,15360]"/>
  <match src="(: ( [92405,92406]" dest="(: ( [79041,79042]"/>
  <match src="type_name [7000,7004]" dest="type_name [7564,7568]"/>
  <match src="return_statement [8553,8615]" dest="return_statement [9117,9179]"/>
  <match src=".: . [108892,108893]" dest=".: . [37805,37806]"/>
  <match src="identifier: sender [20165,20171]" dest="identifier: sender [65821,65827]"/>
  <match src="comment: // all bytes are zero [44778,44799]" dest="comment: // all bytes are zero [49969,49990]"/>
  <match src="indexed: indexed [63365,63372]" dest="indexed: indexed [20199,20206]"/>
  <match src="&quot;: &quot; [20598,20599]" dest="&quot;: &quot; [64218,64219]"/>
  <match src="identifier: candidates [105645,105655]" dest="identifier: candidates [34558,34568]"/>
  <match src="identifier: State [96707,96712]" dest="identifier: State [27925,27930]"/>
  <match src="identifier: D256 [8730,8734]" dest="identifier: D256 [9294,9298]"/>
  <match src="call_expression [101935,101948]" dest="call_expression [30848,30861]"/>
  <match src="identifier: encodePacked [40116,40128]" dest="identifier: encodePacked [45307,45319]"/>
  <match src="identifier: temp [7658,7662]" dest="identifier: temp [8222,8226]"/>
  <match src="expression_statement [108538,108626]" dest="expression_statement [37451,37539]"/>
  <match src=".: . [110357,110358]" dest=".: . [39270,39271]"/>
  <match src="identifier: amount [107293,107299]" dest="identifier: amount [36206,36212]"/>
  <match src="): ) [102064,102065]" dest="): ) [30977,30978]"/>
  <match src="parameter [114750,114765]" dest="parameter [69694,69709]"/>
  <match src="parameter [13534,13548]" dest="parameter [23532,23546]"/>
  <match src="string_literal [92497,92509]" dest="string_literal [79112,79129]"/>
  <match src="memory: memory [32636,32642]" dest="memory: memory [17229,17235]"/>
  <match src="identifier: expiring [104249,104257]" dest="identifier: expiring [33162,33170]"/>
  <match src="return_statement [7405,7447]" dest="return_statement [7969,8011]"/>
  <match src="identifier: Transfer [62219,62227]" dest="identifier: Transfer [19053,19061]"/>
  <match src="function: function [3224,3232]" dest="function: function [3788,3796]"/>
  <match src="primitive_type [54236,54243]" dest="primitive_type [13349,13356]"/>
  <match src="member_expression [42730,42746]" dest="member_expression [47921,47937]"/>
  <match src="}: } [103537,103538]" dest="}: } [32450,32451]"/>
  <match src="return: return [5957,5963]" dest="return: return [6521,6527]"/>
  <match src="call_argument [80383,80399]" dest="call_argument [72004,72024]"/>
  <match src="using: using [79397,79402]" dest="using: using [78522,78527]"/>
  <match src="uint256: uint256 [102720,102727]" dest="uint256: uint256 [31633,31640]"/>
  <match src="identifier: pair [86590,86594]" dest="identifier: candidate [80377,80386]"/>
  <match src="call_expression [7426,7443]" dest="call_expression [7990,8007]"/>
  <match src="identifier: reason [98602,98608]" dest="identifier: reason [77252,77258]"/>
  <match src="parameter [43971,43983]" dest="parameter [49162,49174]"/>
  <match src=",: , [108187,108188]" dest=",: , [37100,37101]"/>
  <match src="using_directive [99846,99873]" dest="using_directive [28759,28786]"/>
  <match src="function: function [55440,55448]" dest="function: function [14553,14561]"/>
  <match src="number_literal: 2 [10230,10231]" dest="number_literal: 2 [10794,10795]"/>
  <match src="user_defined_type [116133,116144]" dest="user_defined_type [78504,78515]"/>
  <match src="binary_expression [112095,112126]" dest="binary_expression [41008,41039]"/>
  <match src="parameter [107822,107836]" dest="parameter [36735,36749]"/>
  <match src="pure: pure [1310,1314]" dest="pure: pure [1874,1878]"/>
  <match src="primitive_type [62809,62813]" dest="primitive_type [19643,19647]"/>
  <match src="{: { [6607,6608]" dest="{: { [7171,7172]"/>
  <match src="function: function [110854,110862]" dest="function: function [39767,39775]"/>
  <match src="uint: uint [86244,86248]" dest="uint: uint [61757,61761]"/>
  <match src="member_expression [110351,110366]" dest="member_expression [39264,39279]"/>
  <match src=",: , [71965,71966]" dest=",: , [25778,25779]"/>
  <match src="identifier: balance [101304,101311]" dest="identifier: balance [30217,30224]"/>
  <match src="=: = [108257,108258]" dest="=: = [37170,37171]"/>
  <match src="): ) [47960,47961]" dest="): ) [53151,53152]"/>
  <match src="member_expression [109495,109508]" dest="member_expression [38408,38421]"/>
  <match src="member_expression [40112,40128]" dest="member_expression [45303,45319]"/>
  <match src="): ) [62968,62969]" dest="): ) [19802,19803]"/>
  <match src="uint256: uint256 [95812,95819]" dest="uint256: uint256 [27030,27037]"/>
  <match src="(: ( [56546,56547]" dest="(: ( [15659,15660]"/>
  <match src="primitive_type [23131,23138]" dest="primitive_type [17063,17070]"/>
  <match src="internal: internal [108833,108841]" dest="internal: internal [37746,37754]"/>
  <match src="visibility [105044,105050]" dest="visibility [33957,33963]"/>
  <match src="function_definition [107120,107249]" dest="function_definition [36033,36162]"/>
  <match src="parameter [8266,8286]" dest="parameter [8830,8850]"/>
  <match src="): ) [4126,4127]" dest="): ) [4690,4691]"/>
  <match src="): ) [88845,88846]" dest="): ) [82031,82032]"/>
  <match src="bool: bool [96202,96206]" dest="bool: bool [27420,27424]"/>
  <match src="): ) [6425,6426]" dest="): ) [6989,6990]"/>
  <match src="(: ( [8017,8018]" dest="(: ( [8581,8582]"/>
  <match src="function_body [5947,5989]" dest="function_body [6511,6553]"/>
  <match src="state_mutability [4710,4714]" dest="state_mutability [5274,5278]"/>
  <match src="return_statement [6807,6859]" dest="return_statement [7371,7423]"/>
  <match src="identifier: _state [110987,110993]" dest="identifier: _state [39900,39906]"/>
  <match src="identifier: self [8859,8863]" dest="identifier: self [9423,9427]"/>
  <match src="type_name [62388,62394]" dest="type_name [19222,19228]"/>
  <match src="contract_body [97638,99136]" dest="contract_body [76288,77786]"/>
  <match src="assignment_expression [47541,47585]" dest="assignment_expression [52732,52776]"/>
  <match src=".: . [56120,56121]" dest=".: . [15233,15234]"/>
  <match src="): ) [22086,22087]" dest="): ) [65010,65011]"/>
  <match src="(: ( [100840,100841]" dest="(: ( [29753,29754]"/>
  <match src="event_paramater [63261,63273]" dest="event_paramater [20095,20107]"/>
  <match src="view: view [101472,101476]" dest="view: view [30385,30389]"/>
  <match src="return_statement [10203,10236]" dest="return_statement [10767,10800]"/>
  <match src="type_name [94081,94088]" dest="type_name [74939,74946]"/>
  <match src="identifier: length [44665,44671]" dest="identifier: length [49856,49862]"/>
  <match src="identifier: slot [105843,105847]" dest="identifier: slot [34756,34760]"/>
  <match src="type_name [102349,102356]" dest="type_name [31262,31269]"/>
  <match src="primitive_type [47927,47932]" dest="primitive_type [53118,53123]"/>
  <match src="type_name [40611,40618]" dest="type_name [45802,45809]"/>
  <match src="primitive_type [95520,95527]" dest="primitive_type [26738,26745]"/>
  <match src="indexed: indexed [25610,25617]" dest="indexed: indexed [60140,60147]"/>
  <match src=":: : [55246,55247]" dest=":: : [14359,14360]"/>
  <match src="&gt;: &gt; [9357,9358]" dest="&gt;: &gt; [9921,9922]"/>
  <match src="call_argument [93047,93051]" dest="call_argument [81012,81016]"/>
  <match src="member_expression [89391,89401]" dest="member_expression [81249,81259]"/>
  <match src=",: , [100612,100613]" dest=",: , [29525,29526]"/>
  <match src="identifier: sub [108681,108684]" dest="identifier: sub [37594,37597]"/>
  <match src="[: [ [104257,104258]" dest="[: [ [33170,33171]"/>
  <match src="): ) [100412,100413]" dest="): ) [29325,29326]"/>
  <match src="]: ] [102569,102570]" dest="]: ] [31482,31483]"/>
  <match src="string [73628,73647]" dest="string [81932,81946]"/>
  <match src="address: address [98135,98142]" dest="address: address [76785,76792]"/>
  <match src="identifier: FILE [72801,72805]" dest="identifier: FILE [78616,78620]"/>
  <match src="{: { [106579,106580]" dest="{: { [35492,35493]"/>
  <match src="(: ( [63864,63865]" dest="(: ( [20698,20699]"/>
  <match src="member_expression [108054,108068]" dest="member_expression [36967,36981]"/>
  <match src="identifier: Decimal [30665,30672]" dest="identifier: Decimal [17783,17790]"/>
  <match src="memory: memory [6518,6524]" dest="memory: memory [7082,7088]"/>
  <match src="type_name [32520,32527]" dest="type_name [58370,58377]"/>
  <match src="member_expression [108659,108684]" dest="member_expression [37572,37597]"/>
  <match src="user_defined_type [102387,102401]" dest="user_defined_type [31300,31314]"/>
  <match src="return_type_definition [56686,56703]" dest="return_type_definition [15799,15816]"/>
  <match src="memory: memory [7486,7492]" dest="memory: memory [8050,8056]"/>
  <match src="primitive_type [63507,63511]" dest="primitive_type [20341,20345]"/>
  <match src="(: ( [111016,111017]" dest="(: ( [39929,39930]"/>
  <match src="member_expression [108635,108656]" dest="member_expression [37548,37569]"/>
  <match src="identifier: accounts [113747,113755]" dest="identifier: accounts [42660,42668]"/>
  <match src="): ) [40260,40261]" dest="): ) [45451,45452]"/>
  <match src="primitive_type [105478,105482]" dest="primitive_type [34391,34395]"/>
  <match src=",: , [41186,41187]" dest=",: , [46377,46378]"/>
  <match src="): ) [108302,108303]" dest="): ) [37215,37216]"/>
  <match src="&quot;: &quot; [100250,100251]" dest="&quot;: &quot; [29163,29164]"/>
  <match src="member_expression [102535,102628]" dest="member_expression [31448,31541]"/>
  <match src=",: , [106880,106881]" dest=",: , [35793,35794]"/>
  <match src="identifier: D256 [31891,31895]" dest="identifier: D256 [17145,17149]"/>
  <match src="identifier: i [45380,45381]" dest="identifier: i [50571,50572]"/>
  <match src="identifier: reason [41154,41160]" dest="identifier: reason [46345,46351]"/>
  <match src="parameter [103479,103486]" dest="parameter [32392,32399]"/>
  <match src="primitive_type [45868,45875]" dest="primitive_type [51059,51066]"/>
  <match src="identifier: D256 [6187,6191]" dest="identifier: D256 [6751,6755]"/>
  <match src="member_expression [88828,88838]" dest="member_expression [82010,82020]"/>
  <match src="identifier: newUniv2 [91721,91729]" dest="identifier: redeemAmount [64657,64669]"/>
  <match src=",: , [42796,42797]" dest=",: , [47987,47988]"/>
  <match src="(: ( [41258,41259]" dest="(: ( [46449,46450]"/>
  <match src="): ) [30729,30730]" dest="): ) [18859,18860]"/>
  <match src="primitive_type [113626,113633]" dest="primitive_type [42539,42546]"/>
  <match src=",: , [39753,39754]" dest=",: , [44944,44945]"/>
  <match src="}: } [40516,40517]" dest="}: } [45707,45708]"/>
  <match src="identifier: ORACLE_POOL_RATIO [54121,54138]" dest="identifier: ORACLE_POOL_RATIO [13234,13251]"/>
  <match src="(: ( [54698,54699]" dest="(: ( [13811,13812]"/>
  <match src="bool: bool [8903,8907]" dest="bool: bool [9467,9471]"/>
  <match src="parameter [109076,109096]" dest="parameter [37989,38009]"/>
  <match src="memory: memory [55202,55208]" dest="memory: memory [14315,14321]"/>
  <match src="number_literal: 6 [53459,53460]" dest="number_literal: 6 [12572,12573]"/>
  <match src="if: if [40670,40672]" dest="if: if [45861,45863]"/>
  <match src="call_argument [90634,90646]" dest="call_argument [72148,72161]"/>
  <match src="identifier: epochs [109914,109920]" dest="identifier: epochs [38827,38833]"/>
  <match src="return_type_definition [104643,104667]" dest="return_type_definition [33556,33580]"/>
  <match src=".: . [89492,89493]" dest=".: . [72583,72584]"/>
  <match src="): ) [76521,76522]" dest="): ) [80663,80664]"/>
  <match src="return_type_definition [12070,12084]" dest="return_type_definition [22068,22082]"/>
  <match src="): ) [55011,55012]" dest="): ) [14124,14125]"/>
  <match src="array_access [108224,108248]" dest="array_access [37137,37161]"/>
  <match src="): ) [86605,86606]" dest="): ) [80392,80393]"/>
  <match src="variable_declaration [90354,90374]" dest="variable_declaration [60952,60975]"/>
  <match src="call_struct_argument [7672,7689]" dest="call_struct_argument [8236,8253]"/>
  <match src="comment: /* Chain */ [52366,52377]" dest="comment: /* Chain */ [11479,11490]"/>
  <match src="identifier: ORACLE_RESERVE_MINIMUM [52761,52783]" dest="identifier: ORACLE_RESERVE_MINIMUM [11874,11896]"/>
  <match src="for: for [106600,106603]" dest="for: for [35513,35516]"/>
  <match src="internal: internal [1700,1708]" dest="internal: internal [2264,2272]"/>
  <match src="identifier: timestamp [103008,103017]" dest="identifier: timestamp [31921,31930]"/>
  <match src="identifier: Constants [111332,111341]" dest="identifier: Constants [40245,40254]"/>
  <match src="variable_declaration [99019,99031]" dest="variable_declaration [77669,77681]"/>
  <match src="): ) [110840,110841]" dest="): ) [39753,39754]"/>
  <match src=".: . [111677,111678]" dest=".: . [40590,40591]"/>
  <match src="identifier: add [6649,6652]" dest="identifier: add [7213,7216]"/>
  <match src="return: return [106823,106829]" dest="return: return [35736,35742]"/>
  <match src="{: { [107175,107176]" dest="{: { [36088,36089]"/>
  <match src="}: } [102634,102635]" dest="}: } [31547,31548]"/>
  <match src="type_name [63926,63932]" dest="type_name [20760,20766]"/>
  <match src="identifier: initializer [116732,116743]" dest="identifier: initializer [83292,83303]"/>
  <match src="): ) [2097,2098]" dest="): ) [2661,2662]"/>
  <match src="primitive_type [398,405]" dest="primitive_type [962,969]"/>
  <match src="identifier: reason [39669,39675]" dest="identifier: reason [44860,44866]"/>
  <match src="function_definition [64450,64497]" dest="function_definition [21284,21331]"/>
  <match src="(: ( [86668,86669]" dest="(: ( [54518,54519]"/>
  <match src="(: ( [103646,103647]" dest="(: ( [32559,32560]"/>
  <match src="type_name [13515,13522]" dest="type_name [23513,23520]"/>
  <match src="expression_statement [30808,30901]" dest="expression_statement [67273,67344]"/>
  <match src="identifier: D256 [7232,7236]" dest="identifier: D256 [7796,7800]"/>
  <match src="primitive_type [75895,75902]" dest="primitive_type [73125,73132]"/>
  <match src="identifier: epoch [103512,103517]" dest="identifier: epoch [32425,32430]"/>
  <match src="user_defined_type [29916,29928]" dest="user_defined_type [17690,17702]"/>
  <match src="(: ( [63092,63093]" dest="(: ( [19926,19927]"/>
  <match src="pure: pure [56782,56786]" dest="pure: pure [15895,15899]"/>
  <match src="return_statement [55872,55903]" dest="return_statement [14985,15016]"/>
  <match src="number_literal: 200 [52509,52512]" dest="number_literal: 200 [11622,11625]"/>
  <match src="type_name [62451,62456]" dest="type_name [19285,19290]"/>
  <match src="(: ( [90900,90901]" dest="(: ( [73457,73458]"/>
  <match src="number_literal: 0 [89629,89630]" dest="number_literal: 0 [72637,72638]"/>
  <match src="identifier: candidates [96766,96776]" dest="identifier: candidates [27984,27994]"/>
  <match src="{: { [95408,95409]" dest="{: { [26626,26627]"/>
  <match src=".: . [102394,102395]" dest=".: . [31307,31308]"/>
  <match src="binary_expression [429,434]" dest="binary_expression [993,998]"/>
  <match src="identifier: add [111013,111016]" dest="identifier: add [39926,39929]"/>
  <match src="): ) [6248,6249]" dest="): ) [6812,6813]"/>
  <match src="if: if [39450,39452]" dest="if: if [44641,44643]"/>
  <match src="new: new [45231,45234]" dest="new: new [50422,50425]"/>
  <match src="(: ( [62841,62842]" dest="(: ( [19675,19676]"/>
  <match src="call_expression [111685,111692]" dest="call_expression [40598,40605]"/>
  <match src="array_access [112986,113014]" dest="array_access [41899,41927]"/>
  <match src="identifier: self [7313,7317]" dest="identifier: self [7877,7881]"/>
  <match src="call_argument [108610,108616]" dest="call_argument [37523,37529]"/>
  <match src="}: } [108429,108430]" dest="}: } [37342,37343]"/>
  <match src="external: external [63752,63760]" dest="external: external [20586,20594]"/>
  <match src=".: . [56592,56593]" dest=".: . [15705,15706]"/>
  <match src="member_expression [115043,115055]" dest="member_expression [69987,69999]"/>
  <match src="function_body [55511,55561]" dest="function_body [14624,14674]"/>
  <match src="(: ( [105714,105715]" dest="(: ( [34627,34628]"/>
  <match src="external: external [77258,77266]" dest="external: external [83482,83490]"/>
  <match src="identifier: Balance [96358,96365]" dest="identifier: Balance [27576,27583]"/>
  <match src="public: public [103570,103576]" dest="public: public [32483,32489]"/>
  <match src="call_expression [58935,59027]" dest="call_expression [54730,54811]"/>
  <match src="memory: memory [62395,62401]" dest="memory: memory [19229,19235]"/>
  <match src="{: { [95773,95774]" dest="{: { [26991,26992]"/>
  <match src="identifier: epochStrategy [111516,111529]" dest="identifier: epochStrategy [40429,40442]"/>
  <match src="primitive_type [5802,5809]" dest="primitive_type [6366,6373]"/>
  <match src="(: ( [90205,90206]" dest="(: ( [73167,73168]"/>
  <match src="call_argument [43516,43522]" dest="call_argument [48707,48713]"/>
  <match src="state_variable_declaration [53751,53800]" dest="state_variable_declaration [12864,12913]"/>
  <match src="address: address [106633,106640]" dest="address: address [35546,35553]"/>
  <match src="identifier: COMMA [43669,43674]" dest="identifier: COMMA [48860,48865]"/>
  <match src="type_name [63591,63598]" dest="type_name [20425,20432]"/>
  <match src="(: ( [100598,100599]" dest="(: ( [29511,29512]"/>
  <match src="identifier: swap [64293,64297]" dest="identifier: swap [21127,21131]"/>
  <match src="call_expression [85194,85201]" dest="call_expression [60578,60585]"/>
  <match src="identifier: stringifyTruncated [43889,43907]" dest="identifier: stringifyTruncated [49080,49098]"/>
  <match src="): ) [98165,98166]" dest="): ) [76815,76816]"/>
  <match src="(: ( [86660,86661]" dest="(: ( [54510,54511]"/>
  <match src="string_literal [66364,66401]" dest="string_literal [73768,73804]"/>
  <match src="uint256: uint256 [96376,96383]" dest="uint256: uint256 [27594,27601]"/>
  <match src="return_statement [9701,9729]" dest="return_statement [10265,10293]"/>
  <match src="call_expression [55379,55427]" dest="call_expression [14492,14540]"/>
  <match src="identifier: Decimal [34227,34234]" dest="identifier: Decimal [17874,17881]"/>
  <match src="identifier: _state [107366,107372]" dest="identifier: _state [36279,36285]"/>
  <match src="function_definition [47656,47969]" dest="function_definition [52847,53160]"/>
  <match src="view: view [105464,105468]" dest="view: view [34377,34381]"/>
  <match src="yul_path [99100,99117]" dest="yul_path [77750,77767]"/>
  <match src="parameter [39976,39992]" dest="parameter [45167,45183]"/>
  <match src="call_expression [90470,90498]" dest="call_expression [73185,73206]"/>
  <match src="function_definition [42506,43059]" dest="function_definition [47697,48250]"/>
  <match src="{: { [104041,104042]" dest="{: { [32954,32955]"/>
  <match src="call_argument [41507,41513]" dest="call_argument [46698,46704]"/>
  <match src="identifier: startFor [104750,104758]" dest="identifier: startFor [33663,33671]"/>
  <match src="contract_declaration [97608,99136]" dest="contract_declaration [76258,77786]"/>
  <match src="event_paramater [88183,88196]" dest="event_paramater [71202,71215]"/>
  <match src="function: function [98173,98181]" dest="function: function [76823,76831]"/>
  <match src="state_mutability [54803,54807]" dest="state_mutability [13916,13920]"/>
  <match src="call_expression [91822,91836]" dest="call_expression [58324,58338]"/>
  <match src="view: view [63079,63083]" dest="view: view [19913,19917]"/>
  <match src="primitive_type [16109,16116]" dest="primitive_type [16861,16868]"/>
  <match src="constant: constant [52398,52406]" dest="constant: constant [11511,11519]"/>
  <match src="returns: returns [62952,62959]" dest="returns: returns [19786,19793]"/>
  <match src=":: : [56604,56605]" dest=":: : [15717,15718]"/>
  <match src=".: . [91712,91713]" dest=".: . [64648,64649]"/>
  <match src="function: function [56751,56759]" dest="function: function [15864,15872]"/>
  <match src=".: . [103939,103940]" dest=".: . [32852,32853]"/>
  <match src="identifier: result [44737,44743]" dest="identifier: result [49928,49934]"/>
  <match src="{: { [107847,107848]" dest="{: { [36760,36761]"/>
  <match src="function_definition [105552,105685]" dest="function_definition [34465,34598]"/>
  <match src="identifier: account [112670,112677]" dest="identifier: account [41583,41590]"/>
  <match src="call_expression [40747,41027]" dest="call_expression [45938,46218]"/>
  <match src="}: } [45739,45740]" dest="}: } [50930,50931]"/>
  <match src="type_name [86229,86233]" dest="type_name [61708,61712]"/>
  <match src="return_statement [75809,75822]" dest="return_statement [68847,68860]"/>
  <match src="identifier: abi [44068,44071]" dest="identifier: abi [49259,49262]"/>
  <match src="type_name [53751,53758]" dest="type_name [12864,12871]"/>
  <match src="{: { [407,408]" dest="{: { [971,972]"/>
  <match src="identifier: internalAmountAfterTax [34927,34949]" dest="identifier: delta [68297,68302]"/>
  <match src="variable_declaration [46812,46821]" dest="variable_declaration [52003,52012]"/>
  <match src="pure: pure [1709,1713]" dest="pure: pure [2273,2277]"/>
  <match src="}: } [109665,109666]" dest="}: } [38578,38579]"/>
  <match src="user_defined_type [10037,10041]" dest="user_defined_type [10601,10605]"/>
  <match src="identifier: bonded [104379,104385]" dest="identifier: bonded [33292,33298]"/>
  <match src="uint256: uint256 [59803,59810]" dest="uint256: uint256 [24777,24784]"/>
  <match src="identifier: value [6086,6091]" dest="identifier: value [6650,6655]"/>
  <match src=".: . [80378,80379]" dest=".: . [71999,72000]"/>
  <match src="parameter [9841,9858]" dest="parameter [10405,10422]"/>
  <match src="primitive_type [22038,22045]" dest="primitive_type [64954,64961]"/>
  <match src="variable_declaration_statement [45077,45092]" dest="variable_declaration_statement [50268,50283]"/>
  <match src="identifier: Require [92598,92605]" dest="identifier: Require [79515,79522]"/>
  <match src=".: . [111132,111133]" dest=".: . [40045,40046]"/>
  <match src="expression_statement [73538,73657]" dest="expression_statement [81830,81957]"/>
  <match src="variable_declaration_statement [91426,91484]" dest="variable_declaration_statement [60823,60897]"/>
  <match src="identifier: COLON [42822,42827]" dest="identifier: COLON [48013,48018]"/>
  <match src="comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      */ [2130,2574]" dest="comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      */ [2694,3138]"/>
  <match src="identifier: updatePrice [75239,75250]" dest="identifier: growSupply [67822,67832]"/>
  <match src="primitive_type [64013,64017]" dest="primitive_type [20847,20851]"/>
  <match src="call_argument [113254,113260]" dest="call_argument [42167,42173]"/>
  <match src="): ) [20075,20076]" dest="): ) [63652,63653]"/>
  <match src="): ) [41633,41634]" dest="): ) [46824,46825]"/>
  <match src="identifier: amount [109262,109268]" dest="identifier: amount [38175,38181]"/>
  <match src="comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [10246,10745]" dest="comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [95,658]"/>
  <match src="): ) [45840,45841]" dest="): ) [51031,51032]"/>
  <match src="): ) [9431,9432]" dest="): ) [9995,9996]"/>
  <match src="call_argument [36116,36117]" dest="call_argument [68701,68702]"/>
  <match src="type_name [39367,39374]" dest="type_name [44558,44565]"/>
  <match src="primitive_type [90448,90455]" dest="primitive_type [63038,63045]"/>
  <match src="call_argument [7981,7988]" dest="call_argument [8545,8552]"/>
  <match src="type_name [63775,63782]" dest="type_name [20609,20616]"/>
  <match src=",: , [58080,58081]" dest=",: , [54579,54580]"/>
  <match src="member_expression [90227,90239]" dest="member_expression [81622,81634]"/>
  <match src="identifier: DOMAIN_SEPARATOR [62919,62935]" dest="identifier: DOMAIN_SEPARATOR [19753,19769]"/>
  <match src="library_declaration [95,4803]" dest="library_declaration [659,5367]"/>
  <match src="function_definition [107935,108106]" dest="function_definition [36848,37019]"/>
  <match src=",: , [41775,41776]" dest=",: , [46966,46967]"/>
  <match src="identifier: outstanding [109936,109947]" dest="identifier: outstanding [38849,38860]"/>
  <match src="call_argument [110814,110840]" dest="call_argument [39727,39753]"/>
  <match src="array_access [111820,111840]" dest="array_access [40733,40753]"/>
  <match src="identifier: Locked [102501,102507]" dest="identifier: Locked [31414,31420]"/>
  <match src="(: ( [103590,103591]" dest="(: ( [32503,32504]"/>
  <match src="}: } [54390,54391]" dest="}: } [13503,13504]"/>
  <match src="member_expression [102279,102311]" dest="member_expression [31192,31224]"/>
  <match src="function_definition [63678,63729]" dest="function_definition [20512,20563]"/>
  <match src="}: } [9222,9223]" dest="}: } [9786,9787]"/>
  <match src="primitive_type [96066,96073]" dest="primitive_type [27284,27291]"/>
  <match src="): ) [105206,105207]" dest="): ) [34119,34120]"/>
  <match src="state_variable_declaration [72776,72817]" dest="state_variable_declaration [78591,78632]"/>
  <match src="): ) [100939,100940]" dest="): ) [29852,29853]"/>
  <match src="{: { [110535,110536]" dest="{: { [39448,39449]"/>
  <match src="identifier: _state [108886,108892]" dest="identifier: _state [37799,37805]"/>
  <match src="identifier: staged [109227,109233]" dest="identifier: staged [38140,38146]"/>
  <match src="variable_declaration [7707,7716]" dest="variable_declaration [8271,8280]"/>
  <match src="type_name [55341,55353]" dest="type_name [14454,14466]"/>
  <match src="{: { [15808,15809]" dest="{: { [59559,59560]"/>
  <match src="bool: bool [107048,107052]" dest="bool: bool [35961,35965]"/>
  <match src="primitive_type [98474,98479]" dest="primitive_type [77124,77129]"/>
  <match src="identifier: a [6144,6145]" dest="identifier: a [6708,6709]"/>
  <match src="call_expression [36002,36015]" dest="call_expression [18784,18797]"/>
  <match src="primitive_type [104799,104806]" dest="primitive_type [33712,33719]"/>
  <match src="user_defined_type [104652,104666]" dest="user_defined_type [33565,33579]"/>
  <match src=",: , [6928,6929]" dest=",: , [7492,7493]"/>
  <match src="identifier: require [444,451]" dest="identifier: require [1008,1015]"/>
  <match src="): ) [116844,116845]" dest="): ) [83449,83450]"/>
  <match src="call_argument [39200,39226]" dest="call_argument [44391,44417]"/>
  <match src="identifier: minPeriod [111573,111582]" dest="identifier: minPeriod [40486,40495]"/>
  <match src="return_type_definition [63766,63783]" dest="return_type_definition [20600,20617]"/>
  <match src="parameter [112929,112943]" dest="parameter [41842,41856]"/>
  <match src="{: { [21931,21932]" dest="{: { [64925,64926]"/>
  <match src="function_body [8125,8189]" dest="function_body [8689,8753]"/>
  <match src="expression_statement [91028,91141]" dest="expression_statement [57979,58090]"/>
  <match src="identifier: dollarAmount [86100,86112]" dest="identifier: dollarAmount [62534,62546]"/>
  <match src="parameter [56796,56803]" dest="parameter [15909,15916]"/>
  <match src="identifier: RPAREN [38758,38764]" dest="identifier: RPAREN [43949,43955]"/>
  <match src="identifier: j [45152,45153]" dest="identifier: j [50343,50344]"/>
  <match src="function_definition [103830,103965]" dest="function_definition [32743,32878]"/>
  <match src="function: function [62588,62596]" dest="function: function [19422,19430]"/>
  <match src="member_expression [6828,6838]" dest="member_expression [7392,7402]"/>
  <match src="type_name [52382,52389]" dest="type_name [11495,11502]"/>
  <match src="): ) [86674,86675]" dest="): ) [54524,54525]"/>
  <match src=".: . [113444,113445]" dest=".: . [42357,42358]"/>
  <match src="type_name [104759,104766]" dest="type_name [33672,33679]"/>
  <match src="string [22050,22086]" dest="string [64966,65010]"/>
  <match src="=: = [45229,45230]" dest="=: = [50420,50421]"/>
  <match src="function_body [47743,47969]" dest="function_body [52934,53160]"/>
  <match src="function_body [113368,113478]" dest="function_body [42281,42391]"/>
  <match src="type_name [9277,9281]" dest="type_name [9841,9845]"/>
  <match src="identifier: name [62297,62301]" dest="identifier: name [19131,19135]"/>
  <match src="call_argument [8400,8406]" dest="call_argument [8964,8970]"/>
  <match src="member_expression [6653,6658]" dest="member_expression [7217,7222]"/>
  <match src="{: { [43989,43990]" dest="{: { [49180,49181]"/>
  <match src="call_argument [54501,54627]" dest="call_argument [13614,13740]"/>
  <match src="number_literal: 0 [107774,107775]" dest="number_literal: 0 [36687,36688]"/>
  <match src="type_name [63093,63097]" dest="type_name [19927,19931]"/>
  <match src="identifier: msg [90395,90398]" dest="identifier: msg [62741,62744]"/>
  <match src="string: string [42702,42708]" dest="string: string [47893,47899]"/>
  <match src="byte: byte [47826,47830]" dest="byte: byte [53017,53021]"/>
  <match src="contract_body [99840,105866]" dest="contract_body [28753,34779]"/>
  <match src="visibility [102154,102160]" dest="visibility [31067,31073]"/>
  <match src=".: . [105231,105232]" dest=".: . [34144,34145]"/>
  <match src="public: public [71930,71936]" dest="public: public [25743,25749]"/>
  <match src="number_literal: 4 [47470,47471]" dest="number_literal: 4 [52661,52662]"/>
  <match src="type_name [104162,104169]" dest="type_name [33075,33082]"/>
  <match src="primitive_type [109325,109332]" dest="primitive_type [38238,38245]"/>
  <match src=".: . [113031,113032]" dest=".: . [41944,41945]"/>
  <match src="view: view [62947,62951]" dest="view: view [19781,19785]"/>
  <match src="=: = [46126,46127]" dest="=: = [51317,51318]"/>
  <match src="primitive_type [41766,41770]" dest="primitive_type [46957,46961]"/>
  <match src="[: [ [109466,109467]" dest="[: [ [38379,38380]"/>
  <match src="{: { [56286,56287]" dest="{: { [15399,15400]"/>
  <match src="): ) [74161,74162]" dest="): ) [68825,68826]"/>
  <match src="call_argument [40287,40293]" dest="call_argument [45478,45484]"/>
  <match src="uint256: uint256 [4064,4071]" dest="uint256: uint256 [4628,4635]"/>
  <match src="(: ( [1250,1251]" dest="(: ( [1814,1815]"/>
  <match src="identifier: oracle [116828,116834]" dest="identifier: oracle [83434,83440]"/>
  <match src=":: : [6402,6403]" dest=":: : [6966,6967]"/>
  <match src="internal: internal [40003,40011]" dest="internal: internal [45194,45202]"/>
  <match src="return: return [28573,28579]" dest="return: return [79819,79825]"/>
  <match src=".: . [111888,111889]" dest=".: . [40801,40802]"/>
  <match src="primitive_type [107150,107157]" dest="primitive_type [36063,36070]"/>
  <match src="(: ( [54310,54311]" dest="(: ( [13423,13424]"/>
  <match src="primitive_type [54817,54824]" dest="primitive_type [13930,13937]"/>
  <match src="string_literal [92293,92323]" dest="string_literal [57877,57900]"/>
  <match src="identifier: accounts [109399,109407]" dest="identifier: accounts [38312,38320]"/>
  <match src="modifier_invocation [88901,88923]" dest="modifier_invocation [78988,79018]"/>
  <match src="uint256: uint256 [81157,81164]" dest="uint256: uint256 [72602,72609]"/>
  <match src="member_expression [100890,100912]" dest="member_expression [29803,29825]"/>
  <match src="): ) [9546,9547]" dest="): ) [10110,10111]"/>
  <match src="call_expression [40789,40813]" dest="call_expression [45980,46004]"/>
  <match src="type_name [7707,7714]" dest="type_name [8271,8278]"/>
  <match src="): ) [40337,40338]" dest="): ) [45528,45529]"/>
  <match src="}: } [104531,104532]" dest="}: } [33444,33445]"/>
  <match src="memory: memory [9264,9270]" dest="memory: memory [9828,9834]"/>
  <match src="): ) [44826,44827]" dest="): ) [50017,50018]"/>
  <match src="primitive_type [45984,45989]" dest="primitive_type [51175,51180]"/>
  <match src="return_type_definition [103582,103599]" dest="return_type_definition [32495,32512]"/>
  <match src="(: ( [105437,105438]" dest="(: ( [34350,34351]"/>
  <match src="function_definition [62749,62815]" dest="function_definition [19583,19649]"/>
  <match src="assignment_expression [108313,108370]" dest="assignment_expression [37226,37283]"/>
  <match src="internal: internal [110135,110143]" dest="internal: internal [39048,39056]"/>
  <match src="member_expression [108259,108274]" dest="member_expression [37172,37187]"/>
  <match src="assembly_statement [94549,94590]" dest="assembly_statement [75407,75448]"/>
  <match src="type_name [108800,108807]" dest="type_name [37713,37720]"/>
  <match src="member_expression [91028,91040]" dest="member_expression [57979,57991]"/>
  <match src="}: } [53034,53035]" dest="}: } [12147,12148]"/>
  <match src="event_paramater [106655,106673]" dest="event_paramater [35568,35586]"/>
  <match src="member_expression [101787,101802]" dest="member_expression [30700,30715]"/>
  <match src="visibility [75859,75866]" dest="visibility [68304,68311]"/>
  <match src="type_name [101271,101278]" dest="type_name [30184,30191]"/>
  <match src="type_name [108464,108471]" dest="type_name [37377,37384]"/>
  <match src="member_expression [55379,55391]" dest="member_expression [14492,14504]"/>
  <match src=",: , [91776,91777]" dest=",: , [63843,63844]"/>
  <match src="event_definition [88320,88386]" dest="event_definition [71378,71471]"/>
  <match src="call_argument [47567,47584]" dest="call_argument [52758,52775]"/>
  <match src="call_argument [24760,24767]" dest="call_argument [54557,54564]"/>
  <match src="identifier: current [102914,102921]" dest="identifier: current [31827,31834]"/>
  <match src="identifier: account [59916,59923]" dest="identifier: account [24890,24897]"/>
  <match src="type_name [13499,13506]" dest="type_name [23497,23504]"/>
  <match src="(: ( [108684,108685]" dest="(: ( [37597,37598]"/>
  <match src="returns: returns [104185,104192]" dest="returns: returns [33098,33105]"/>
  <match src="type_name [27979,27986]" dest="type_name [62566,62573]"/>
  <match src="(: ( [7062,7063]" dest="(: ( [7626,7627]"/>
  <match src="type_name [96649,96662]" dest="type_name [27867,27880]"/>
  <match src="(: ( [90141,90142]" dest="(: ( [73102,73103]"/>
  <match src="type_name [8328,8332]" dest="type_name [8892,8896]"/>
  <match src=":: : [7677,7678]" dest=":: : [8241,8242]"/>
  <match src="identifier: i [47238,47239]" dest="identifier: i [52429,52430]"/>
  <match src="address: address [94025,94032]" dest="address: address [74883,74890]"/>
  <match src=":: : [56454,56455]" dest=":: : [15567,15568]"/>
  <match src="comment: /**      * @dev Moves `amount` tokens from the caller's account to `recipient`.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [11794,12003]" dest="comment: /**      * @dev Moves `amount` tokens from the caller's account to `recipient`.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [21792,22001]"/>
  <match src="identifier: _state [108635,108641]" dest="identifier: _state [37548,37554]"/>
  <match src="primitive_type [55079,55086]" dest="primitive_type [14192,14199]"/>
  <match src="{: { [96802,96803]" dest="{: { [28020,28021]"/>
  <match src="identifier: ASCII_LOWER_EX [38578,38592]" dest="identifier: ASCII_LOWER_EX [43769,43783]"/>
  <match src="uint8: uint8 [47087,47092]" dest="uint8: uint8 [52278,52283]"/>
  <match src="expression_statement [76533,76535]" dest="expression_statement [83886,83888]"/>
  <match src="state_variable_declaration [52532,52586]" dest="state_variable_declaration [11645,11699]"/>
  <match src="): ) [40972,40973]" dest="): ) [46163,46164]"/>
  <match src="call_argument [39138,39142]" dest="call_argument [44329,44333]"/>
  <match src="identifier: stringifyTruncated [41455,41473]" dest="identifier: stringifyTruncated [46646,46664]"/>
  <match src="pure: pure [8889,8893]" dest="pure: pure [9453,9457]"/>
  <match src="parameter [108464,108479]" dest="parameter [37377,37392]"/>
  <match src="identifier: pair [116837,116841]" dest="identifier: pair [83443,83447]"/>
  <match src="call_argument [98586,98593]" dest="call_argument [77236,77243]"/>
  <match src="(: ( [54906,54907]" dest="(: ( [14019,14020]"/>
  <match src="type_name [25571,25578]" dest="type_name [60110,60117]"/>
  <match src=",: , [40844,40845]" dest=",: , [46035,46036]"/>
  <match src="}: } [55560,55561]" dest="}: } [14673,14674]"/>
  <match src="): ) [9210,9211]" dest="): ) [9774,9775]"/>
  <match src="return_type_definition [55332,55361]" dest="return_type_definition [14445,14474]"/>
  <match src="call_argument [88761,88771]" dest="call_argument [73712,73722]"/>
  <match src="memory: memory [9423,9429]" dest="memory: memory [9987,9993]"/>
  <match src="(: ( [105198,105199]" dest="(: ( [34111,34112]"/>
  <match src="visibility [113157,113165]" dest="visibility [42070,42078]"/>
  <match src="call_argument [1359,1371]" dest="call_argument [1923,1935]"/>
  <match src="function_definition [104872,104999]" dest="function_definition [33785,33912]"/>
  <match src="type_name [63200,63207]" dest="type_name [20034,20041]"/>
  <match src="visibility [29301,29309]" dest="visibility [55657,55665]"/>
  <match src="): ) [88922,88923]" dest="): ) [79017,79018]"/>
  <match src=".: . [111483,111484]" dest=".: . [40396,40397]"/>
  <match src="type_name [63890,63897]" dest="type_name [20724,20731]"/>
  <match src="pure: pure [40016,40020]" dest="pure: pure [45207,45211]"/>
  <match src="private: private [45798,45805]" dest="private: private [50989,50996]"/>
  <match src="enum_value: REJECT [96025,96031]" dest="enum_value: REJECT [27243,27249]"/>
  <match src="identifier: payloadB [41625,41633]" dest="identifier: payloadB [46816,46824]"/>
  <match src="return_type_definition [8099,8120]" dest="return_type_definition [8663,8684]"/>
  <match src="&quot;: &quot; [32155,32156]" dest="&quot;: &quot; [55252,55253]"/>
  <match src="identifier: amount [34098,34104]" dest="identifier: amount [61413,61419]"/>
  <match src="type_name [59908,59915]" dest="type_name [24882,24889]"/>
  <match src="expression_statement [89070,89085]" dest="expression_statement [55434,55449]"/>
  <match src="identifier: accounts [109803,109811]" dest="identifier: accounts [38716,38724]"/>
  <match src="identifier: a [361,362]" dest="identifier: a [925,926]"/>
  <match src="call_argument [116828,116843]" dest="call_argument [83434,83449]"/>
  <match src="pure: pure [56383,56387]" dest="pure: pure [15496,15500]"/>
  <match src="&lt;: &lt; [9498,9499]" dest="&lt;: &lt; [10062,10063]"/>
  <match src="{: { [94071,94072]" dest="{: { [74929,74930]"/>
  <match src="call_expression [115259,115290]" dest="call_expression [70203,70234]"/>
  <match src="member_expression [92837,92849]" dest="member_expression [81463,81475]"/>
  <match src="): ) [91266,91267]" dest="): ) [81451,81452]"/>
  <match src="): ) [63000,63001]" dest="): ) [19834,19835]"/>
  <match src="(: ( [39137,39138]" dest="(: ( [44328,44329]"/>
  <match src=".: . [109935,109936]" dest=".: . [38848,38849]"/>
  <match src="comment: /**      * @dev Emitted when the allowance of a `spender` for an `owner` is set by      * a call to {approve}. `value` is the new allowance.      */ [13821,13969]" dest="comment: /**      * @dev Emitted when the allowance of a `spender` for an `owner` is set by      * a call to {approve}. `value` is the new allowance.      */ [23819,23967]"/>
  <match src="identifier: totalRewardedWithPhantom [91616,91640]" dest="identifier: value [73634,73639]"/>
  <match src="!: ! [39004,39005]" dest="!: ! [44195,44196]"/>
  <match src="primitive_type [62662,62666]" dest="primitive_type [19496,19500]"/>
  <match src="identifier: D256 [8328,8332]" dest="identifier: D256 [8892,8896]"/>
  <match src="/: / [3447,3448]" dest="/: / [4011,4012]"/>
  <match src="member_expression [89489,89499]" dest="member_expression [72580,72590]"/>
  <match src="): ) [7691,7692]" dest="): ) [8255,8256]"/>
  <match src="): ) [6150,6151]" dest="): ) [6714,6715]"/>
  <match src="identifier: stringify [40954,40963]" dest="identifier: stringify [46145,46154]"/>
  <match src="address: address [63136,63143]" dest="address: address [19970,19977]"/>
  <match src="string [115322,115343]" dest="string [70266,70287]"/>
  <match src="uint256: uint256 [55621,55628]" dest="uint256: uint256 [14734,14741]"/>
  <match src="primitive_type [107969,107976]" dest="primitive_type [36882,36889]"/>
  <match src="state_variable_declaration [38502,38544]" dest="state_variable_declaration [43693,43735]"/>
  <match src="expression_statement [109117,109203]" dest="expression_statement [38030,38116]"/>
  <match src="primitive_type [63482,63486]" dest="primitive_type [20316,20320]"/>
  <match src="identifier: totalSupplyStandardConverted [35423,35451]" dest="identifier: redeemAmount [64438,64450]"/>
  <match src="identifier: value [7971,7976]" dest="identifier: value [8535,8540]"/>
  <match src="internal: internal [21137,21145]" dest="internal: internal [71493,71501]"/>
  <match src="{: { [108528,108529]" dest="{: { [37441,37442]"/>
  <match src="call_argument [43483,43489]" dest="call_argument [48674,48680]"/>
  <match src="call_argument [108407,108414]" dest="call_argument [37320,37327]"/>
  <match src="number_literal: 36 [53612,53614]" dest="number_literal: 36 [12725,12727]"/>
  <match src="returns: returns [55332,55339]" dest="returns: returns [14445,14452]"/>
  <match src="uint256: uint256 [106773,106780]" dest="uint256: uint256 [35686,35693]"/>
  <match src="parameter [112945,112965]" dest="parameter [41858,41878]"/>
  <match src="internal: internal [4041,4049]" dest="internal: internal [4605,4613]"/>
  <match src="number_literal: 1 [65414,65415]" dest="number_literal: 1 [18919,18920]"/>
  <match src="primitive_type [73144,73151]" dest="primitive_type [59757,59764]"/>
  <match src="(: ( [100404,100405]" dest="(: ( [29317,29318]"/>
  <match src="): ) [73962,73963]" dest="): ) [68548,68549]"/>
  <match src=",: , [58868,58869]" dest=",: , [64540,64541]"/>
  <match src="function_definition [107420,107543]" dest="function_definition [36333,36456]"/>
  <match src="): ) [62789,62790]" dest="): ) [19623,19624]"/>
  <match src="identifier: balance [107349,107356]" dest="identifier: balance [36262,36269]"/>
  <match src="type_name [9817,9824]" dest="type_name [10381,10388]"/>
  <match src="memory: memory [8654,8660]" dest="memory: memory [9218,9224]"/>
  <match src="function_definition [8423,8621]" dest="function_definition [8987,9185]"/>
  <match src="call_argument [21164,21185]" dest="call_argument [65467,65472]"/>
  <match src="type_name [62868,62872]" dest="type_name [19702,19706]"/>
  <match src="(: ( [80295,80296]" dest="(: ( [71768,71769]"/>
  <match src="{: { [47743,47744]" dest="{: { [52934,52935]"/>
  <match src=",: , [21887,21888]" dest=",: , [64898,64899]"/>
  <match src="uint256: uint256 [61095,61102]" dest="uint256: uint256 [54891,54898]"/>
  <match src="(: ( [8327,8328]" dest="(: ( [8891,8892]"/>
  <match src="visibility [55711,55719]" dest="visibility [14824,14832]"/>
  <match src="{: { [55743,55744]" dest="{: { [14856,14857]"/>
  <match src="primitive_type [47922,47926]" dest="primitive_type [53113,53117]"/>
  <match src=",: , [88457,88458]" dest=",: , [71346,71347]"/>
  <match src="return_statement [8919,8948]" dest="return_statement [9483,9512]"/>
  <match src="primitive_type [52960,52967]" dest="primitive_type [12073,12080]"/>
  <match src="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts with custom message when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      *      * _Available since v2.4.0._      */ [4140,4633]" dest="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts with custom message when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      *      * _Available since v2.4.0._      */ [4704,5197]"/>
  <match src="identifier: b [8171,8172]" dest="identifier: b [8735,8736]"/>
  <match src="identifier: Require [92837,92844]" dest="identifier: Require [81463,81470]"/>
  <match src="identifier: add [7824,7827]" dest="identifier: add [8388,8391]"/>
  <match src="}: } [74180,74181]" dest="}: } [68836,68837]"/>
  <match src="call_argument [42947,42955]" dest="call_argument [48138,48146]"/>
  <match src="function_definition [102331,102635]" dest="function_definition [31244,31548]"/>
  <match src="assignment_expression [112482,112526]" dest="assignment_expression [41395,41439]"/>
  <match src="identifier: msg [89391,89394]" dest="identifier: msg [81249,81252]"/>
  <match src="identifier: RPAREN [42423,42429]" dest="identifier: RPAREN [47614,47620]"/>
  <match src="identifier: amount [107680,107686]" dest="identifier: amount [36593,36599]"/>
  <match src="identifier: block [110794,110799]" dest="identifier: block [39707,39712]"/>
  <match src="(: ( [41624,41625]" dest="(: ( [46815,46816]"/>
  <match src="identifier: msg [89286,89289]" dest="identifier: msg [73242,73245]"/>
  <match src="]: ] [110566,110567]" dest="]: ] [39479,39480]"/>
  <match src="member_expression [110045,110067]" dest="member_expression [38958,38980]"/>
  <match src="identifier: payloadA [43558,43566]" dest="identifier: payloadA [48749,48757]"/>
  <match src="type_name [31883,31895]" dest="type_name [17137,17149]"/>
  <match src="type_name [56235,56247]" dest="type_name [15348,15360]"/>
  <match src="parameter [106882,106896]" dest="parameter [35795,35809]"/>
  <match src="returns: returns [54327,54334]" dest="returns: returns [13440,13447]"/>
  <match src="call_argument [109995,110001]" dest="call_argument [38908,38914]"/>
  <match src="}: } [41075,41076]" dest="}: } [46266,46267]"/>
  <match src="function: function [101021,101029]" dest="function: function [29934,29942]"/>
  <match src="=: = [44518,44519]" dest="=: = [49709,49710]"/>
  <match src="parameter [353,362]" dest="parameter [917,926]"/>
  <match src="&quot;: &quot; [24546,24547]" dest="&quot;: &quot; [79969,79970]"/>
  <match src="type_name [107577,107584]" dest="type_name [36490,36497]"/>
  <match src="=: = [111306,111307]" dest="=: = [40219,40220]"/>
  <match src="(: ( [109706,109707]" dest="(: ( [38619,38620]"/>
  <match src="identifier: value [89444,89449]" dest="identifier: value [72515,72520]"/>
  <match src="function_definition [101329,101435]" dest="function_definition [30242,30348]"/>
  <match src=".: . [101209,101210]" dest=".: . [30122,30123]"/>
  <match src="function_body [109382,109666]" dest="function_body [38295,38579]"/>
  <match src="(: ( [40172,40173]" dest="(: ( [45363,45364]"/>
  <match src="): ) [9496,9497]" dest="): ) [10060,10061]"/>
  <match src="type_name [73144,73151]" dest="type_name [59757,59764]"/>
  <match src="identifier: D256 [7481,7485]" dest="identifier: D256 [8045,8049]"/>
  <match src="primitive_type [38784,38791]" dest="primitive_type [43975,43982]"/>
  <match src="type_name [8243,8247]" dest="type_name [8807,8811]"/>
  <match src="type_name [28131,28138]" dest="type_name [61442,61449]"/>
  <match src="visibility [102854,102860]" dest="visibility [31767,31773]"/>
  <match src="&quot;: &quot; [19936,19937]" dest="&quot;: &quot; [65376,65377]"/>
  <match src="call_argument [61236,61238]" dest="call_argument [65668,65670]"/>
  <match src="(: ( [32103,32104]" dest="(: ( [55200,55201]"/>
  <match src="}: } [45000,45001]" dest="}: } [50191,50192]"/>
  <match src="type_name [112929,112936]" dest="type_name [41842,41849]"/>
  <match src="type_name [43205,43212]" dest="type_name [48396,48403]"/>
  <match src="type_name [101377,101384]" dest="type_name [30290,30297]"/>
  <match src="call_argument [89230,89240]" dest="call_argument [72326,72336]"/>
  <match src="identifier: greaterThan [8969,8980]" dest="identifier: greaterThan [9533,9544]"/>
  <match src="unary_expression [43268,43273]" dest="unary_expression [48459,48464]"/>
  <match src="(: ( [98429,98430]" dest="(: ( [77079,77080]"/>
  <match src="type_name [104459,104463]" dest="type_name [33372,33376]"/>
  <match src="state_mutability [105185,105189]" dest="state_mutability [34098,34102]"/>
  <match src="(: ( [54982,54983]" dest="(: ( [14095,14096]"/>
  <match src="memory: memory [46790,46796]" dest="memory: memory [51981,51987]"/>
  <match src=",: , [90062,90063]" dest=",: , [73936,73937]"/>
  <match src="identifier: SUPPLY_CHANGE_LIMIT [54056,54075]" dest="identifier: SUPPLY_CHANGE_LIMIT [13169,13188]"/>
  <match src="identifier: amount [19796,19802]" dest="identifier: amount [65228,65234]"/>
  <match src="): ) [52729,52730]" dest="): ) [11842,11843]"/>
  <match src=",: , [63327,63328]" dest=",: , [20161,20162]"/>
  <match src="for_statement [47218,47620]" dest="for_statement [52409,52811]"/>
  <match src="member_expression [110020,110042]" dest="member_expression [38933,38955]"/>
  <match src="call_argument [42194,42200]" dest="call_argument [47385,47391]"/>
  <match src="): ) [63782,63783]" dest="): ) [20616,20617]"/>
  <match src="): ) [56328,56329]" dest="): ) [15441,15442]"/>
  <match src="member_expression [113378,113395]" dest="member_expression [42291,42308]"/>
  <match src="(: ( [98192,98193]" dest="(: ( [76842,76843]"/>
  <match src="member_expression [90883,90893]" dest="member_expression [73440,73450]"/>
  <match src="primitive_type [88371,88378]" dest="primitive_type [71431,71438]"/>
  <match src="identifier: z [47567,47568]" dest="identifier: z [52758,52759]"/>
  <match src="=: = [107883,107884]" dest="=: = [36796,36797]"/>
  <match src="expression_statement [45130,45139]" dest="expression_statement [50321,50330]"/>
  <match src="identifier: amount [107585,107591]" dest="identifier: amount [36498,36504]"/>
  <match src="identifier: self [8993,8997]" dest="identifier: self [9557,9561]"/>
  <match src="member_expression [113868,113885]" dest="member_expression [42781,42798]"/>
  <match src="[: [ [105108,105109]" dest="[: [ [34021,34022]"/>
  <match src="primitive_type [61542,61549]" dest="primitive_type [60239,60246]"/>
  <match src="identifier: totalBonded [101030,101041]" dest="identifier: totalBonded [29943,29954]"/>
  <match src="[: [ [109920,109921]" dest="[: [ [38833,38834]"/>
  <match src="{: { [56126,56127]" dest="{: { [15239,15240]"/>
  <match src="identifier: result [47025,47031]" dest="identifier: result [52216,52222]"/>
  <match src="function: function [105691,105699]" dest="function: function [34604,34612]"/>
  <match src="identifier: _state [110608,110614]" dest="identifier: _state [39521,39527]"/>
  <match src=".: . [101097,101098]" dest=".: . [30010,30011]"/>
  <match src="event_paramater [88500,88523]" dest="event_paramater [78867,78890]"/>
  <match src="type_name [63532,63539]" dest="type_name [20366,20373]"/>
  <match src="[: [ [112652,112653]" dest="[: [ [41565,41566]"/>
  <match src="): ) [46796,46797]" dest="): ) [51987,51988]"/>
  <match src="array_access [109151,109175]" dest="array_access [38064,38088]"/>
  <match src="identifier: redeemable [108069,108079]" dest="identifier: redeemable [36982,36992]"/>
  <match src="member_expression [91151,91163]" dest="member_expression [81347,81359]"/>
  <match src="): ) [56149,56150]" dest="): ) [15262,15263]"/>
  <match src="identifier: value [63158,63163]" dest="identifier: value [19992,19997]"/>
  <match src="primitive_type [88598,88605]" dest="primitive_type [73521,73528]"/>
  <match src="identifier: payloadB [39984,39992]" dest="identifier: payloadB [45175,45183]"/>
  <match src="public: public [100197,100203]" dest="public: public [29110,29116]"/>
  <match src="identifier: BOOTSTRAPPING_PRICE [54991,55010]" dest="identifier: BOOTSTRAPPING_PRICE [14104,14123]"/>
  <match src="constant: constant [52548,52556]" dest="constant: constant [11661,11669]"/>
  <match src=",: , [88961,88962]" dest=",: , [71909,71910]"/>
  <match src="user_defined_type [7558,7562]" dest="user_defined_type [8122,8126]"/>
  <match src="identifier: amount [112937,112943]" dest="identifier: amount [41850,41856]"/>
  <match src="call_expression [114777,114908]" dest="call_expression [69721,69852]"/>
  <match src="type_name [24247,24254]" dest="type_name [59922,59929]"/>
  <match src="parameter [41807,41821]" dest="parameter [46998,47012]"/>
  <match src="identifier: input [46738,46743]" dest="identifier: input [51929,51934]"/>
  <match src="primitive_type [44868,44875]" dest="primitive_type [50059,50066]"/>
  <match src="identifier: account [108407,108414]" dest="identifier: account [37320,37327]"/>
  <match src="): ) [7262,7263]" dest="): ) [7826,7827]"/>
  <match src="comment: // Can modify account state [114691,114718]" dest="comment: // Can modify account state [69635,69662]"/>
  <match src="uint256: uint256 [9868,9875]" dest="uint256: uint256 [10432,10439]"/>
  <match src="bool: bool [80452,80456]" dest="bool: bool [82104,82108]"/>
  <match src="type_name [100112,100118]" dest="type_name [29025,29031]"/>
  <match src="visibility [9014,9022]" dest="visibility [9578,9586]"/>
  <match src="identifier: ratio [75661,75666]" dest="identifier: ratio [82227,82232]"/>
  <match src="state_mutability [11765,11769]" dest="state_mutability [21763,21767]"/>
  <match src="identifier: spender [106873,106880]" dest="identifier: spender [35786,35793]"/>
  <match src="identifier: Permission [114611,114621]" dest="identifier: Permission [69555,69565]"/>
  <match src="identifier: _state [113868,113874]" dest="identifier: _state [42781,42787]"/>
  <match src="identifier: State [96759,96764]" dest="identifier: State [27977,27982]"/>
  <match src="internal: internal [54909,54917]" dest="internal: internal [14022,14030]"/>
  <match src="{: { [55978,55979]" dest="{: { [15091,15092]"/>
  <match src="identifier: PairCreated [61506,61517]" dest="identifier: CouponApproval [60201,60215]"/>
  <match src="expression_statement [47541,47586]" dest="expression_statement [52732,52777]"/>
  <match src="address: address [108734,108741]" dest="address: address [37647,37654]"/>
  <match src="}: } [102012,102013]" dest="}: } [30925,30926]"/>
  <match src="identifier: Candidate [104652,104661]" dest="identifier: Candidate [33565,33574]"/>
  <match src="identifier: require [23757,23764]" dest="identifier: decrementApproveFor [80049,80068]"/>
  <match src="(: ( [104798,104799]" dest="(: ( [33711,33712]"/>
  <match src="(: ( [88712,88713]" dest="(: ( [83393,83394]"/>
  <match src="identifier: coupons [109516,109523]" dest="identifier: coupons [38429,38436]"/>
  <match src="): ) [106811,106812]" dest="): ) [35724,35725]"/>
  <match src="array_access [104220,104240]" dest="array_access [33133,33153]"/>
  <match src="parameter [104147,104160]" dest="parameter [33060,33073]"/>
  <match src=",: , [108732,108733]" dest=",: , [37645,37646]"/>
  <match src="parameter [104423,104436]" dest="parameter [33336,33349]"/>
  <match src="{: { [107332,107333]" dest="{: { [36245,36246]"/>
  <match src="visibility [100499,100505]" dest="visibility [29412,29418]"/>
  <match src="call_expression [111239,111252]" dest="call_expression [40152,40165]"/>
  <match src="call_argument [46475,46492]" dest="call_argument [51666,51683]"/>
  <match src="return_statement [112142,112149]" dest="return_statement [41055,41062]"/>
  <match src="array_access [47403,47421]" dest="array_access [52594,52612]"/>
  <match src="identifier: FILE [90286,90290]" dest="identifier: FILE [81765,81769]"/>
  <match src="returns: returns [100396,100403]" dest="returns: returns [29309,29316]"/>
  <match src="call_expression [89798,89841]" dest="call_expression [73347,73417]"/>
  <match src="primitive_type [106807,106811]" dest="primitive_type [35720,35724]"/>
  <match src="call_argument [39669,39675]" dest="call_argument [44860,44866]"/>
  <match src="call_argument [47048,47058]" dest="call_argument [52239,52249]"/>
  <match src="function: function [110421,110429]" dest="function: function [39334,39342]"/>
  <match src="call_argument [42236,42244]" dest="call_argument [47427,47435]"/>
  <match src="return_statement [103912,103959]" dest="return_statement [32825,32872]"/>
  <match src="=: = [110985,110986]" dest="=: = [39898,39899]"/>
  <match src="(: ( [101064,101065]" dest="(: ( [29977,29978]"/>
  <match src="uint256: uint256 [3310,3317]" dest="uint256: uint256 [3874,3881]"/>
  <match src="returns: returns [105322,105329]" dest="returns: returns [34235,34242]"/>
  <match src="uint256: uint256 [54096,54103]" dest="uint256: uint256 [13209,13216]"/>
  <match src="type_name [78420,78427]" dest="type_name [66860,66867]"/>
  <match src="=: = [108335,108336]" dest="=: = [37248,37249]"/>
  <match src="primitive_type [63908,63915]" dest="primitive_type [20742,20749]"/>
  <match src="]: ] [113763,113764]" dest="]: ] [42676,42677]"/>
  <match src="identifier: value [10154,10159]" dest="identifier: value [10718,10723]"/>
  <match src="variable_declaration [29916,29947]" dest="variable_declaration [17690,17722]"/>
  <match src="primitive_type [2015,2022]" dest="primitive_type [2579,2586]"/>
  <match src="state_mutability [104318,104322]" dest="state_mutability [33231,33235]"/>
  <match src="state_variable_declaration [38744,38772]" dest="state_variable_declaration [43935,43963]"/>
  <match src="): ) [9077,9078]" dest="): ) [9641,9642]"/>
  <match src="identifier: Deposit [88820,88827]" dest="identifier: Commit [82003,82009]"/>
  <match src="^:  ^ [49,51]" dest="^:  ^ [49,51]"/>
  <match src="): ) [62878,62879]" dest="): ) [19712,19713]"/>
  <match src="member_expression [30699,30711]" dest="member_expression [18815,18827]"/>
  <match src="type_name [103715,103722]" dest="type_name [32628,32635]"/>
  <match src="(: ( [71945,71946]" dest="(: ( [25758,25759]"/>
  <match src="identifier: timestamp [103307,103316]" dest="identifier: timestamp [32220,32229]"/>
  <match src="(: ( [59848,59849]" dest="(: ( [24822,24823]"/>
  <match src="return: return [8355,8361]" dest="return: return [8919,8925]"/>
  <match src="function: function [80273,80281]" dest="function: function [71752,71760]"/>
  <match src="state_mutability [40016,40020]" dest="state_mutability [45207,45211]"/>
  <match src="member_expression [108659,108680]" dest="member_expression [37572,37593]"/>
  <match src="&quot;: &quot; [27380,27381]" dest="&quot;: &quot; [55574,55575]"/>
  <match src="member_expression [107505,107519]" dest="member_expression [36418,36432]"/>
  <match src="): ) [55628,55629]" dest="): ) [14741,14742]"/>
  <match src="parameter [9456,9460]" dest="parameter [10020,10024]"/>
  <match src="identifier: reason [107607,107613]" dest="identifier: reason [36520,36526]"/>
  <match src="variable_declaration_statement [46269,46283]" dest="variable_declaration_statement [51460,51474]"/>
  <match src="function_definition [5879,5989]" dest="function_definition [6443,6553]"/>
  <match src="parameter [112393,112407]" dest="parameter [41306,41320]"/>
  <match src="type_name [95783,95790]" dest="type_name [27001,27008]"/>
  <match src="): ) [90054,90055]" dest="): ) [73928,73929]"/>
  <match src="pure: pure [42634,42638]" dest="pure: pure [47825,47829]"/>
  <match src="view: view [100506,100510]" dest="view: view [29419,29423]"/>
  <match src="identifier: balanceOfRewarded [91304,91321]" dest="identifier: balanceOf [79055,79064]"/>
  <match src="number_literal: 1 [10182,10183]" dest="number_literal: 1 [10746,10747]"/>
  <match src="parameter [9928,9935]" dest="parameter [10492,10499]"/>
  <match src="variable_declaration [98474,98493]" dest="variable_declaration [77124,77143]"/>
  <match src="expression_statement [110899,110950]" dest="expression_statement [39812,39863]"/>
  <match src="): ) [9290,9291]" dest="): ) [9854,9855]"/>
  <match src="): ) [105338,105339]" dest="): ) [34251,34252]"/>
  <match src="primitive_type [108464,108471]" dest="primitive_type [37377,37384]"/>
  <match src="call_expression [109538,109590]" dest="call_expression [38451,38503]"/>
  <match src="(: ( [101961,101962]" dest="(: ( [30874,30875]"/>
  <match src="type_name [63237,63244]" dest="type_name [20071,20078]"/>
  <match src="(: ( [20164,20165]" dest="(: ( [65820,65821]"/>
  <match src="(: ( [40066,40067]" dest="(: ( [45257,45258]"/>
  <match src="state_mutability [9023,9027]" dest="state_mutability [9587,9591]"/>
  <match src="): ) [2644,2645]" dest="): ) [3208,3209]"/>
  <match src="expression_statement [90594,90648]" dest="expression_statement [72111,72163]"/>
  <match src=",: , [42827,42828]" dest=",: , [48018,48019]"/>
  <match src="mstore: mstore [44650,44656]" dest="mstore: mstore [49841,49847]"/>
  <match src="call_argument [59008,59017]" dest="call_argument [54768,54810]"/>
  <match src="returns: returns [62653,62660]" dest="returns: returns [19487,19494]"/>
  <match src="(: ( [60987,60988]" dest="(: ( [54116,54117]"/>
  <match src="identifier: msg [87978,87981]" dest="identifier: msg [63576,63579]"/>
  <match src="(: ( [116800,116801]" dest="(: ( [83433,83434]"/>
  <match src="identifier: LPAREN [42905,42911]" dest="identifier: LPAREN [48096,48102]"/>
  <match src="member_expression [109600,109614]" dest="member_expression [38513,38527]"/>
  <match src="type_name [75625,75637]" dest="type_name [68599,68611]"/>
  <match src="(: ( [40763,40764]" dest="(: ( [45954,45955]"/>
  <match src="(: ( [101946,101947]" dest="(: ( [30859,30860]"/>
  <match src="uint256: uint256 [27847,27854]" dest="uint256: uint256 [16790,16797]"/>
  <match src="{: { [54983,54984]" dest="{: { [14096,14097]"/>
  <match src="mapping: mapping [96162,96169]" dest="mapping: mapping [27380,27387]"/>
  <match src="call_argument [109270,109276]" dest="call_argument [38183,38189]"/>
  <match src="): ) [107164,107165]" dest="): ) [36077,36078]"/>
  <match src="parameter [1262,1271]" dest="parameter [1826,1835]"/>
  <match src="primitive_type [27979,27986]" dest="primitive_type [62566,62573]"/>
  <match src="primitive_type [91444,91451]" dest="primitive_type [68092,68099]"/>
  <match src="identifier: Provider [96259,96267]" dest="identifier: Provider [27477,27485]"/>
  <match src=".: . [100905,100906]" dest=".: . [29818,29819]"/>
  <match src="(: ( [80371,80372]" dest="(: ( [71992,71993]"/>
  <match src="primitive_type [63667,63671]" dest="primitive_type [20501,20505]"/>
  <match src="identifier: self [9348,9352]" dest="identifier: self [9912,9916]"/>
  <match src="assignment_expression [111426,111608]" dest="assignment_expression [40339,40521]"/>
  <match src="number_literal: 32 [47242,47244]" dest="number_literal: 32 [52433,52435]"/>
  <match src=",: , [89296,89297]" dest=",: , [73252,73253]"/>
  <match src="return_type_definition [7189,7210]" dest="return_type_definition [7753,7774]"/>
  <match src="identifier: accounts [102286,102294]" dest="identifier: accounts [31199,31207]"/>
  <match src="(: ( [101587,101588]" dest="(: ( [30500,30501]"/>
  <match src="identifier: c [2050,2051]" dest="identifier: c [2614,2615]"/>
  <match src="): ) [89200,89201]" dest="): ) [72296,72297]"/>
  <match src="identifier: payloadA [42236,42244]" dest="identifier: payloadA [47427,47435]"/>
  <match src="primitive_type [105199,105206]" dest="primitive_type [34112,34119]"/>
  <match src="call_argument [90487,90497]" dest="call_argument [73195,73205]"/>
  <match src="): ) [109896,109897]" dest="): ) [38809,38810]"/>
  <match src="member_expression [80345,80363]" dest="member_expression [71966,71984]"/>
  <match src=",: , [8256,8257]" dest=",: , [8820,8821]"/>
  <match src="if_statement [102194,102263]" dest="if_statement [31107,31176]"/>
  <match src="uint256: uint256 [109724,109731]" dest="uint256: uint256 [38637,38644]"/>
  <match src="uint8: uint8 [100309,100314]" dest="uint8: uint8 [29222,29227]"/>
  <match src="identifier: account [102130,102137]" dest="identifier: account [31043,31050]"/>
  <match src="return: return [47819,47825]" dest="return: return [53010,53016]"/>
  <match src="identifier: msg [88828,88831]" dest="identifier: msg [82010,82013]"/>
  <match src="type_cast_expression [46133,46154]" dest="type_cast_expression [51324,51345]"/>
  <match src="(: ( [109042,109043]" dest="(: ( [37955,37956]"/>
  <match src="identifier: IDollar [100764,100771]" dest="identifier: IDollar [29677,29684]"/>
  <match src="identifier: D256 [111087,111091]" dest="identifier: D256 [40000,40004]"/>
  <match src="(: ( [89003,89004]" dest="(: ( [72378,72379]"/>
  <match src="identifier: bonded [96408,96414]" dest="identifier: bonded [27626,27632]"/>
  <match src="identifier: sub [108606,108609]" dest="identifier: sub [37519,37522]"/>
  <match src="identifier: sender [89395,89401]" dest="identifier: sender [81253,81259]"/>
  <match src="identifier: amount [109478,109484]" dest="identifier: amount [38391,38397]"/>
  <match src="view: view [11765,11769]" dest="view: view [21763,21767]"/>
  <match src="function: function [111057,111065]" dest="function: function [39970,39978]"/>
  <match src="bytes32: bytes32 [41785,41792]" dest="bytes32: bytes32 [46976,46983]"/>
  <match src="returns: returns [80443,80450]" dest="returns: returns [82095,82102]"/>
  <match src="primitive_type [72017,72024]" dest="primitive_type [25830,25837]"/>
  <match src="}: } [105545,105546]" dest="}: } [34458,34459]"/>
  <match src="return_statement [102272,102319]" dest="return_statement [31185,31232]"/>
  <match src=",: , [95367,95368]" dest=",: , [26585,26586]"/>
  <match src=".: . [89233,89234]" dest=".: . [72329,72330]"/>
  <match src="type_name [8847,8851]" dest="type_name [9411,9415]"/>
  <match src="identifier: Status [115098,115104]" dest="identifier: Status [70042,70048]"/>
  <match src="uint256: uint256 [88371,88378]" dest="uint256: uint256 [71431,71438]"/>
  <match src="member_expression [104685,104702]" dest="member_expression [33598,33615]"/>
  <match src="bool: bool [74967,74971]" dest="bool: bool [68626,68630]"/>
  <match src="=: = [113578,113579]" dest="=: = [42491,42492]"/>
  <match src="(: ( [19848,19849]" dest="(: ( [65280,65281]"/>
  <match src="event: event [98120,98125]" dest="event: event [76770,76775]"/>
  <match src="identifier: b [4793,4794]" dest="identifier: b [5357,5358]"/>
  <match src="{: { [7395,7396]" dest="{: { [7959,7960]"/>
  <match src=".: . [111924,111925]" dest=".: . [40837,40838]"/>
  <match src="): ) [90342,90343]" dest="): ) [81818,81819]"/>
  <match src="{: { [8367,8368]" dest="{: { [8931,8932]"/>
  <match src="uint256: uint256 [113558,113565]" dest="uint256: uint256 [42471,42478]"/>
  <match src="identifier: currentStart [110972,110984]" dest="identifier: currentStart [39885,39897]"/>
  <match src="}: } [30607,30608]" dest="}: } [65790,65791]"/>
  <match src="memory: memory [107308,107314]" dest="memory: memory [36221,36227]"/>
  <match src="): ) [47584,47585]" dest="): ) [52775,52776]"/>
  <match src="): ) [9935,9936]" dest="): ) [10499,10500]"/>
  <match src="identifier: candidate [112838,112847]" dest="identifier: candidate [41751,41760]"/>
  <match src="identifier: file [40173,40177]" dest="identifier: file [45364,45368]"/>
  <match src="memory: memory [7383,7389]" dest="memory: memory [7947,7953]"/>
  <match src="visibility [113539,113547]" dest="visibility [42452,42460]"/>
  <match src="constant: constant [53287,53295]" dest="constant: constant [12400,12408]"/>
  <match src="identifier: sender [88916,88922]" dest="identifier: sender [79011,79017]"/>
  <match src="-: - [47413,47414]" dest="-: - [52604,52605]"/>
  <match src="uint256: uint256 [95566,95573]" dest="uint256: uint256 [26784,26791]"/>
  <match src="public: public [100091,100097]" dest="public: public [29004,29010]"/>
  <match src="parameter [104162,104171]" dest="parameter [33075,33084]"/>
  <match src="returns: returns [11770,11777]" dest="returns: returns [21768,21775]"/>
  <match src="=: = [90188,90189]" dest="=: = [62615,62616]"/>
  <match src="string [58779,58798]" dest="string [55003,55047]"/>
  <match src="constant: constant [72792,72800]" dest="constant: constant [78607,78615]"/>
  <match src="primitive_type [59803,59810]" dest="primitive_type [24777,24784]"/>
  <match src="member_expression [116828,116841]" dest="member_expression [83434,83447]"/>
  <match src="[: [ [110647,110648]" dest="[: [ [39560,39561]"/>
  <match src="}: } [107781,107782]" dest="}: } [36694,36695]"/>
  <match src="=: = [108961,108962]" dest="=: = [37874,37875]"/>
  <match src="external: external [63697,63705]" dest="external: external [20531,20539]"/>
  <match src="bytes32: bytes32 [38921,38928]" dest="bytes32: bytes32 [44112,44119]"/>
  <match src="call_argument [874,906]" dest="call_argument [1438,1470]"/>
  <match src="identifier: char [46470,46474]" dest="identifier: char [51661,51665]"/>
  <match src="identifier: self [9708,9712]" dest="identifier: self [10272,10276]"/>
  <match src="identifier: self [8156,8160]" dest="identifier: self [8720,8724]"/>
  <match src="member_expression [110020,110034]" dest="member_expression [38933,38947]"/>
  <match src="member_expression [113214,113249]" dest="member_expression [42127,42162]"/>
  <match src="call_argument [89835,89840]" dest="call_argument [73378,73383]"/>
  <match src="struct: struct [96252,96258]" dest="struct: struct [27470,27476]"/>
  <match src="): ) [89219,89220]" dest="): ) [72315,72316]"/>
  <match src="state_mutability [101051,101055]" dest="state_mutability [29964,29968]"/>
  <match src="}: } [96224,96225]" dest="}: } [27442,27443]"/>
  <match src="returns: returns [64177,64184]" dest="returns: returns [21011,21018]"/>
  <match src="visibility [74814,74821]" dest="visibility [18645,18652]"/>
  <match src="(: ( [108724,108725]" dest="(: ( [37637,37638]"/>
  <match src="member_expression [109538,109578]" dest="member_expression [38451,38491]"/>
  <match src="pure: pure [6982,6986]" dest="pure: pure [7546,7550]"/>
  <match src="function: function [105005,105013]" dest="function: function [33918,33926]"/>
  <match src="identifier: accounts [110161,110169]" dest="identifier: accounts [39074,39082]"/>
  <match src="): ) [105402,105403]" dest="): ) [34315,34316]"/>
  <match src="byte: byte [38744,38748]" dest="byte: byte [43935,43939]"/>
  <match src="uint256: uint256 [56796,56803]" dest="uint256: uint256 [15909,15916]"/>
  <match src="variable_declaration [74276,74299]" dest="variable_declaration [80675,80692]"/>
  <match src=".: . [32630,32631]" dest=".: . [17223,17224]"/>
  <match src="uint256: uint256 [353,360]" dest="uint256: uint256 [917,924]"/>
  <match src="function_definition [38879,39297]" dest="function_definition [44070,44488]"/>
  <match src="&gt;: &gt; [91068,91069]" dest="&gt;: &gt; [58019,58020]"/>
  <match src="constant: constant [53767,53775]" dest="constant: constant [12880,12888]"/>
  <match src="(: ( [43401,43402]" dest="(: ( [48592,48593]"/>
  <match src="function: function [9788,9796]" dest="function: function [10352,10360]"/>
  <match src=",: , [90916,90917]" dest=",: , [73473,73474]"/>
  <match src="number_literal: 1 [35960,35961]" dest="number_literal: 1 [80745,80746]"/>
  <match src="call_expression [90048,90055]" dest="call_expression [73922,73929]"/>
  <match src="): ) [42320,42321]" dest="): ) [47511,47512]"/>
  <match src="(: ( [7471,7472]" dest="(: ( [8035,8036]"/>
  <match src="type_name [109325,109332]" dest="type_name [38238,38245]"/>
  <match src="): ) [113537,113538]" dest="): ) [42450,42451]"/>
  <match src="return_statement [103164,103218]" dest="return_statement [32077,32131]"/>
  <match src=".: . [90209,90210]" dest=".: . [73171,73172]"/>
  <match src="call_expression [89612,89787]" dest="call_expression [72620,72757]"/>
  <match src="type_name [63434,63438]" dest="type_name [20268,20272]"/>
  <match src="type_name [59957,59961]" dest="type_name [24931,24935]"/>
  <match src="uint256: uint256 [58229,58236]" dest="uint256: uint256 [61602,61609]"/>
  <match src="): ) [90069,90070]" dest="): ) [73952,73953]"/>
  <match src="function_body [105484,105546]" dest="function_body [34397,34459]"/>
  <match src=".: . [100796,100797]" dest=".: . [29709,29710]"/>
  <match src="function: function [108766,108774]" dest="function: function [37679,37687]"/>
  <match src="function_body [101280,101323]" dest="function_body [30193,30236]"/>
  <match src="call_expression [115232,115353]" dest="call_expression [70176,70297]"/>
  <match src="identifier: outstanding [109979,109990]" dest="identifier: outstanding [38892,38903]"/>
  <match src="(: ( [6779,6780]" dest="(: ( [7343,7344]"/>
  <match src="type_name [107593,107599]" dest="type_name [36506,36512]"/>
  <match src="uint: uint [62708,62712]" dest="uint: uint [19542,19546]"/>
  <match src="string [92497,92509]" dest="string [79112,79129]"/>
  <match src=".: . [111826,111827]" dest=".: . [40739,40740]"/>
  <match src="user_defined_type [34863,34875]" dest="user_defined_type [67833,67845]"/>
  <match src="return_statement [104475,104526]" dest="return_statement [33388,33439]"/>
  <match src="(: ( [101270,101271]" dest="(: ( [30183,30184]"/>
  <match src="type_name [45774,45781]" dest="type_name [50965,50972]"/>
  <match src="{: { [100663,100664]" dest="{: { [29576,29577]"/>
  <match src=",: , [108414,108415]" dest=",: , [37327,37328]"/>
  <match src="returns: returns [104790,104797]" dest="returns: returns [33703,33710]"/>
  <match src="): ) [64403,64404]" dest="): ) [21237,21238]"/>
  <match src="member_expression [105501,105535]" dest="member_expression [34414,34448]"/>
  <match src="identifier: COLON [40839,40844]" dest="identifier: COLON [46030,46035]"/>
  <match src="{: { [45389,45390]" dest="{: { [50580,50581]"/>
  <match src="]: ] [101810,101811]" dest="]: ] [30723,30724]"/>
  <match src="inheritance_specifier [99834,99839]" dest="inheritance_specifier [28747,28752]"/>
  <match src="identifier: newLock [113634,113641]" dest="identifier: newLock [42547,42554]"/>
  <match src="member_expression [107342,107356]" dest="member_expression [36255,36269]"/>
  <match src="identifier: getEpochStrategy [111389,111405]" dest="identifier: getEpochStrategy [40302,40318]"/>
  <match src="memory: memory [75283,75289]" dest="memory: memory [68580,68586]"/>
  <match src="identifier: must [38907,38911]" dest="identifier: must [44098,44102]"/>
  <match src=".: . [27539,27540]" dest=".: . [16708,16709]"/>
  <match src="visibility [88613,88621]" dest="visibility [73536,73544]"/>
  <match src=",: , [8665,8666]" dest=",: , [9229,9230]"/>
  <match src="=: = [38765,38766]" dest="=: = [43956,43957]"/>
  <match src="external: external [100631,100639]" dest="external: external [29544,29552]"/>
  <match src="call_expression [43624,43643]" dest="call_expression [48815,48834]"/>
  <match src="call_argument [75434,75448]" dest="call_argument [68128,68137]"/>
  <match src="visibility [52390,52397]" dest="visibility [11503,11510]"/>
  <match src="string_literal [21970,22008]" dest="string_literal [64295,64332]"/>
  <match src="function_definition [108766,109003]" dest="function_definition [37679,37916]"/>
  <match src="(: ( [41473,41474]" dest="(: ( [46664,46665]"/>
  <match src="function: function [46702,46710]" dest="function: function [51893,51901]"/>
  <match src="): ) [62742,62743]" dest="): ) [19576,19577]"/>
  <match src="identifier: Context [15792,15799]" dest="identifier: Comptroller [59540,59551]"/>
  <match src="identifier: coupons [112278,112285]" dest="identifier: coupons [41191,41198]"/>
  <match src="return_statement [100783,100813]" dest="return_statement [29696,29726]"/>
  <match src="(: ( [3236,3237]" dest="(: ( [3800,3801]"/>
  <match src="expression_statement [44218,44224]" dest="expression_statement [49409,49415]"/>
  <match src="(: ( [63024,63025]" dest="(: ( [19858,19859]"/>
  <match src="type_name [112595,112609]" dest="type_name [41508,41522]"/>
  <match src="identifier: permit [63114,63120]" dest="identifier: permit [19948,19954]"/>
  <match src="call_expression [47562,47585]" dest="call_expression [52753,52776]"/>
  <match src="): ) [47058,47059]" dest="): ) [52249,52250]"/>
  <match src="identifier: Decimal [32673,32680]" dest="identifier: Decimal [62219,62226]"/>
  <match src="): ) [30899,30900]" dest="): ) [67342,67343]"/>
  <match src=".: . [109956,109957]" dest=".: . [38869,38870]"/>
  <match src="call_argument [47087,47108]" dest="call_argument [52278,52299]"/>
  <match src="identifier: epoch [110773,110778]" dest="identifier: epoch [39686,39691]"/>
  <match src="): ) [112867,112868]" dest="): ) [41780,41781]"/>
  <match src="returns: returns [9447,9454]" dest="returns: returns [10011,10018]"/>
  <match src="variable_declaration [2015,2024]" dest="variable_declaration [2579,2588]"/>
  <match src="struct_declaration [96252,96345]" dest="struct_declaration [27470,27563]"/>
  <match src="member_expression [100431,100463]" dest="member_expression [29344,29376]"/>
  <match src="struct_member [96400,96415]" dest="struct_member [27618,27633]"/>
  <match src="(: ( [110117,110118]" dest="(: ( [39030,39031]"/>
  <match src="memory: memory [55354,55360]" dest="memory: memory [14467,14473]"/>
  <match src="return_statement [7791,7803]" dest="return_statement [8355,8367]"/>
  <match src="variable_declaration_statement [33413,33598]" dest="variable_declaration_statement [67548,67608]"/>
  <match src="yul_path [99094,99098]" dest="yul_path [77744,77748]"/>
  <match src="public: public [102699,102705]" dest="public: public [31612,31618]"/>
  <match src="string_literal [100250,100255]" dest="string_literal [29163,29168]"/>
  <match src="): ) [45633,45634]" dest="): ) [50824,50825]"/>
  <match src="member_expression [109212,109233]" dest="member_expression [38125,38146]"/>
  <match src="identifier: accounts [109441,109449]" dest="identifier: accounts [38354,38362]"/>
  <match src="return_statement [8355,8411]" dest="return_statement [8919,8975]"/>
  <match src="return_type_definition [107039,107053]" dest="return_type_definition [35952,35966]"/>
  <match src="=: = [7753,7754]" dest="=: = [8317,8318]"/>
  <match src="contract_declaration [59756,60020]" dest="contract_declaration [24730,24994]"/>
  <match src="primitive_type [63830,63837]" dest="primitive_type [20664,20671]"/>
  <match src="member_expression [8597,8604]" dest="member_expression [9161,9168]"/>
  <match src="return_type_definition [105729,105751]" dest="return_type_definition [34642,34664]"/>
  <match src="identifier: sender [61281,61287]" dest="identifier: sender [65713,65719]"/>
  <match src="call_argument [9203,9207]" dest="call_argument [9767,9771]"/>
  <match src="address: address [104759,104766]" dest="address: address [33672,33679]"/>
  <match src="primitive_type [21889,21896]" dest="primitive_type [64883,64890]"/>
  <match src="identifier: totalBonded [91659,91670]" dest="identifier: totalBonded [73663,73674]"/>
  <match src="identifier: Account [95310,95317]" dest="identifier: Account [26528,26535]"/>
  <match src="}: } [111942,111943]" dest="}: } [40855,40856]"/>
  <match src="any_pragma_token [66,91]" dest="any_pragma_token [66,91]"/>
  <match src="struct_declaration [95758,95865]" dest="struct_declaration [26976,27083]"/>
  <match src="}: } [8620,8621]" dest="}: } [9184,9185]"/>
  <match src="(: ( [8207,8208]" dest="(: ( [8771,8772]"/>
  <match src="external: external [64107,64115]" dest="external: external [20941,20949]"/>
  <match src="function_body [7395,7453]" dest="function_body [7959,8017]"/>
  <match src="}: } [6106,6107]" dest="}: } [6670,6671]"/>
  <match src="memory: memory [107600,107606]" dest="memory: memory [36513,36519]"/>
  <match src="return_type_definition [102378,102402]" dest="return_type_definition [31291,31315]"/>
  <match src="call_argument [55392,55426]" dest="call_argument [14505,14539]"/>
  <match src="): ) [111799,111800]" dest="): ) [40712,40713]"/>
  <match src="number_literal: 32 [44214,44216]" dest="number_literal: 32 [49405,49407]"/>
  <match src="assembly: assembly [44619,44627]" dest="assembly: assembly [49810,49818]"/>
  <match src="): ) [103216,103217]" dest="): ) [32129,32130]"/>
  <match src="(: ( [62766,62767]" dest="(: ( [19600,19601]"/>
  <match src="primitive_type [88356,88363]" dest="primitive_type [71416,71423]"/>
  <match src="primitive_type [110316,110323]" dest="primitive_type [39229,39236]"/>
  <match src="identifier: result [46071,46077]" dest="identifier: result [51262,51268]"/>
  <match src="(: ( [100111,100112]" dest="(: ( [29024,29025]"/>
  <match src="identifier: b [7441,7442]" dest="identifier: b [8005,8006]"/>
  <match src="primitive_type [115016,115023]" dest="primitive_type [69960,69967]"/>
  <match src="identifier: Bond [90031,90035]" dest="identifier: Unbond [73903,73909]"/>
  <match src="address: address [63532,63539]" dest="address: address [20366,20373]"/>
  <match src="parameter [10114,10121]" dest="parameter [10678,10685]"/>
  <match src=",: , [90632,90633]" dest=",: , [72146,72147]"/>
  <match src="identifier: sender [89881,89887]" dest="identifier: sender [73838,73844]"/>
  <match src="identifier: payloadA [40619,40627]" dest="identifier: payloadA [45810,45818]"/>
  <match src="): ) [111204,111205]" dest="): ) [40117,40118]"/>
  <match src="]: ] [112276,112277]" dest="]: ] [41189,41190]"/>
  <match src=".: . [90685,90686]" dest=".: . [63235,63236]"/>
  <match src="primitive_type [1262,1269]" dest="primitive_type [1826,1833]"/>
  <match src="}: } [56483,56484]" dest="}: } [15596,15597]"/>
  <match src="uint256: uint256 [4662,4669]" dest="uint256: uint256 [5226,5233]"/>
  <match src="&quot;: &quot; [92293,92294]" dest="&quot;: &quot; [57877,57878]"/>
  <match src="type_name [103893,103900]" dest="type_name [32806,32813]"/>
  <match src="type_name [110488,110495]" dest="type_name [39401,39408]"/>
  <match src="identifier: owner [62547,62552]" dest="identifier: owner [19381,19386]"/>
  <match src="(: ( [102197,102198]" dest="(: ( [31110,31111]"/>
  <match src="address: address [105575,105582]" dest="address: address [34488,34495]"/>
  <match src="(: ( [80363,80364]" dest="(: ( [71984,71985]"/>
  <match src="type_name [7198,7202]" dest="type_name [7762,7766]"/>
  <match src="visibility [42621,42629]" dest="visibility [47812,47820]"/>
  <match src="type_name [72757,72769]" dest="type_name [66631,66643]"/>
  <match src="return: return [54480,54486]" dest="return: return [13593,13599]"/>
  <match src="(: ( [64220,64221]" dest="(: ( [21054,21055]"/>
  <match src="uint256: uint256 [103715,103722]" dest="uint256: uint256 [32628,32635]"/>
  <match src="[: [ [108588,108589]" dest="[: [ [37501,37502]"/>
  <match src="type_name [15833,15840]" dest="type_name [59584,59591]"/>
  <match src="identifier: epochs [111889,111895]" dest="identifier: epochs [40802,40808]"/>
  <match src="parameter [9418,9431]" dest="parameter [9982,9995]"/>
  <match src="identifier: that [58827,58831]" dest="identifier: that [64497,64501]"/>
  <match src="): ) [63209,63210]" dest="): ) [20043,20044]"/>
  <match src="primitive_type [100112,100118]" dest="primitive_type [29025,29031]"/>
  <match src="}: } [913,914]" dest="}: } [1477,1478]"/>
  <match src="array_access [103919,103939]" dest="array_access [32832,32852]"/>
  <match src="variable_declaration_statement [30665,30731]" dest="variable_declaration_statement [17783,17861]"/>
  <match src="binary_expression [10210,10227]" dest="binary_expression [10774,10791]"/>
  <match src="call_expression [40870,40896]" dest="call_expression [46061,46087]"/>
  <match src="parameter [45828,45840]" dest="parameter [51019,51031]"/>
  <match src="return: return [105631,105637]" dest="return: return [34544,34550]"/>
  <match src="): ) [98566,98567]" dest="): ) [77216,77217]"/>
  <match src="(: ( [73550,73551]" dest="(: ( [81842,81843]"/>
  <match src="public: public [101740,101746]" dest="public: public [30653,30659]"/>
  <match src="return: return [104678,104684]" dest="return: return [33591,33597]"/>
  <match src="(: ( [75301,75302]" dest="(: ( [68050,68051]"/>
  <match src="indexed: indexed [63540,63547]" dest="indexed: indexed [20374,20381]"/>
  <match src="primitive_type [113141,113148]" dest="primitive_type [42054,42061]"/>
  <match src="identifier: spender [102690,102697]" dest="identifier: spender [31603,31610]"/>
  <match src="identifier: balanceOfCoupons [102105,102121]" dest="identifier: balanceOfCoupons [31018,31034]"/>
  <match src="): ) [55741,55742]" dest="): ) [14854,14855]"/>
  <match src="for_statement [44197,44768]" dest="for_statement [49388,49959]"/>
  <match src="number_literal: 10 [45699,45701]" dest="number_literal: 10 [50890,50892]"/>
  <match src="): ) [29969,29970]" dest="): ) [18430,18431]"/>
  <match src="identifier: Account [102608,102615]" dest="identifier: Account [31521,31528]"/>
  <match src="function: function [103230,103238]" dest="function: function [32143,32151]"/>
  <match src="call_argument [52687,52729]" dest="call_argument [11800,11842]"/>
  <match src="state_mutability [62437,62441]" dest="state_mutability [19271,19275]"/>
  <match src=".: . [110772,110773]" dest=".: . [39685,39686]"/>
  <match src="function: function [111729,111737]" dest="function: function [40642,40650]"/>
  <match src="}: } [8953,8954]" dest="}: } [9517,9518]"/>
  <match src="}: } [96036,96037]" dest="}: } [27254,27255]"/>
  <match src=".: . [113204,113205]" dest=".: . [42117,42118]"/>
  <match src="function: function [63958,63966]" dest="function: function [20792,20800]"/>
  <match src="identifier: allowance [100589,100598]" dest="identifier: allowance [29502,29511]"/>
  <match src="}: } [104734,104735]" dest="}: } [33647,33648]"/>
  <match src="&lt;: &lt; [47240,47241]" dest="&lt;: &lt; [52431,52432]"/>
  <match src="identifier: _state [110351,110357]" dest="identifier: _state [39264,39270]"/>
  <match src="{: { [7417,7418]" dest="{: { [7981,7982]"/>
  <match src="identifier: encodeWithSignature [98532,98551]" dest="identifier: encodeWithSignature [77182,77201]"/>
  <match src="call_argument [22050,22086]" dest="call_argument [64966,65010]"/>
  <match src="return: return [1410,1416]" dest="return: return [1974,1980]"/>
  <match src=".: . [85201,85202]" dest=".: . [60585,60586]"/>
  <match src="identifier: value [8381,8386]" dest="identifier: value [8945,8950]"/>
  <match src="binary_expression [1964,1970]" dest="binary_expression [2528,2534]"/>
  <match src="type_name [91444,91451]" dest="type_name [68092,68099]"/>
  <match src="[: [ [47031,47032]" dest="[: [ [52222,52223]"/>
  <match src="type_name [58158,58165]" dest="type_name [80521,80528]"/>
  <match src="identifier: totalCoupons [101450,101462]" dest="identifier: totalCoupons [30363,30375]"/>
  <match src="{: { [105621,105622]" dest="{: { [34534,34535]"/>
  <match src="event_paramater [88158,88181]" dest="event_paramater [71177,71200]"/>
  <match src="array_access [109117,109141]" dest="array_access [38030,38054]"/>
  <match src="member_expression [111017,111043]" dest="member_expression [39930,39956]"/>
  <match src=",: , [106569,106570]" dest=",: , [35482,35483]"/>
  <match src=".: . [29923,29924]" dest=".: . [17697,17698]"/>
  <match src="address: address [64470,64477]" dest="address: address [21304,21311]"/>
  <match src="}: } [10243,10244]" dest="}: } [10807,10808]"/>
  <match src="memory: memory [33491,33497]" dest="memory: memory [82204,82210]"/>
  <match src="assembly_statement [99064,99128]" dest="assembly_statement [77714,77778]"/>
  <match src="parameter [106807,106811]" dest="parameter [35720,35724]"/>
  <match src="event_paramater [63507,63522]" dest="event_paramater [20341,20356]"/>
  <match src="): ) [43642,43643]" dest="): ) [48833,48834]"/>
  <match src="identifier: z [66289,66290]" dest="identifier: burnAmount [64357,64367]"/>
  <match src="(: ( [88802,88803]" dest="(: ( [55599,55600]"/>
  <match src="&quot;: &quot; [90833,90834]" dest="&quot;: &quot; [81047,81048]"/>
  <match src="visibility [36272,36279]" dest="visibility [60744,60751]"/>
  <match src=".: . [109501,109502]" dest=".: . [38414,38415]"/>
  <match src="private: private [53279,53286]" dest="private: private [12392,12399]"/>
  <match src="type_name [53965,53972]" dest="type_name [13078,13085]"/>
  <match src="identifier: epoch [102535,102540]" dest="identifier: epoch [31448,31453]"/>
  <match src="primitive_type [38921,38928]" dest="primitive_type [44112,44119]"/>
  <match src=",: , [8604,8605]" dest=",: , [9168,9169]"/>
  <match src=",: , [41873,41874]" dest=",: , [47064,47065]"/>
  <match src="address: address [102682,102689]" dest="address: address [31595,31602]"/>
  <match src="member_expression [8376,8390]" dest="member_expression [8940,8954]"/>
  <match src="uint256: uint256 [81138,81145]" dest="uint256: uint256 [61645,61652]"/>
  <match src="state_mutability [101574,101578]" dest="state_mutability [30487,30491]"/>
  <match src="return_type_definition [63084,63098]" dest="return_type_definition [19918,19932]"/>
  <match src="identifier: amount [113066,113072]" dest="identifier: amount [41979,41985]"/>
  <match src="function_body [100233,100262]" dest="function_body [29146,29175]"/>
  <match src="identifier: Decimal [29950,29957]" dest="identifier: Decimal [18416,18423]"/>
  <match src="type_name [7558,7562]" dest="type_name [8122,8126]"/>
  <match src=",: , [20182,20183]" dest=",: , [65838,65839]"/>
  <match src="): ) [55164,55165]" dest="): ) [14277,14278]"/>
  <match src="): ) [55709,55710]" dest="): ) [14822,14823]"/>
  <match src="identifier: D256 [7121,7125]" dest="identifier: D256 [7685,7689]"/>
  <match src="call_expression [110192,110239]" dest="call_expression [39105,39152]"/>
  <match src="expression_statement [45694,45702]" dest="expression_statement [50885,50893]"/>
  <match src="call_argument [102217,102222]" dest="call_argument [31130,31135]"/>
  <match src=".: . [9712,9713]" dest=".: . [10276,10277]"/>
  <match src="returns: returns [62729,62736]" dest="returns: returns [19563,19570]"/>
  <match src="user_defined_type [8675,8679]" dest="user_defined_type [9239,9243]"/>
  <match src="{: { [9941,9942]" dest="{: { [10505,10506]"/>
  <match src="for: for [27528,27531]" dest="for: for [16697,16700]"/>
  <match src=".: . [40750,40751]" dest=".: . [45941,45942]"/>
  <match src="identifier: candidates [112827,112837]" dest="identifier: candidates [41740,41750]"/>
  <match src="{: { [101903,101904]" dest="{: { [30816,30817]"/>
  <match src="{: { [113368,113369]" dest="{: { [42281,42282]"/>
  <match src="): ) [111999,112000]" dest="): ) [40912,40913]"/>
  <match src="comment: // ============ Private Functions ============ [43828,43874]" dest="comment: // ============ Private Functions ============ [49019,49065]"/>
  <match src="identifier: lessThanOrEqualTo [9382,9399]" dest="identifier: lessThanOrEqualTo [9946,9963]"/>
  <match src="call_argument [108084,108090]" dest="call_argument [36997,37003]"/>
  <match src="identifier: spender [102786,102793]" dest="identifier: spender [31699,31706]"/>
  <match src="contract_body [112,4803]" dest="contract_body [676,5367]"/>
  <match src=".: . [112199,112200]" dest=".: . [41112,41113]"/>
  <match src="visibility [101148,101154]" dest="visibility [30061,30067]"/>
  <match src="identifier: amount [107529,107535]" dest="identifier: amount [36442,36448]"/>
  <match src="user_defined_type [9277,9281]" dest="user_defined_type [9841,9845]"/>
  <match src="identifier: Unbond [88397,88403]" dest="identifier: Bond [71288,71292]"/>
  <match src="identifier: D256 [8445,8449]" dest="identifier: D256 [9009,9013]"/>
  <match src="(: ( [91765,91766]" dest="(: ( [63832,63833]"/>
  <match src="return_type_definition [103884,103901]" dest="return_type_definition [32797,32814]"/>
  <match src="{: { [8909,8910]" dest="{: { [9473,9474]"/>
  <match src="return: return [100539,100545]" dest="return: return [29452,29458]"/>
  <match src="identifier: amount [108922,108928]" dest="identifier: amount [37835,37841]"/>
  <match src="view: view [105724,105728]" dest="view: view [34637,34641]"/>
  <match src="(: ( [61517,61518]" dest="(: ( [60215,60216]"/>
  <match src="visibility [64107,64115]" dest="visibility [20941,20949]"/>
  <match src="memory: memory [8248,8254]" dest="memory: memory [8812,8818]"/>
  <match src="indexed: indexed [62236,62243]" dest="indexed: indexed [19070,19077]"/>
  <match src="primitive_type [98460,98464]" dest="primitive_type [77110,77114]"/>
  <match src=".: . [89677,89678]" dest=".: . [72672,72673]"/>
  <match src="string [92293,92323]" dest="string [57877,57900]"/>
  <match src="member_expression [107656,107675]" dest="member_expression [36569,36588]"/>
  <match src="primitive_type [45600,45604]" dest="primitive_type [50791,50795]"/>
  <match src="primitive_type [43129,43136]" dest="primitive_type [48320,48327]"/>
  <match src="primitive_type [7327,7334]" dest="primitive_type [7891,7898]"/>
  <match src="function: function [64379,64387]" dest="function: function [21213,21221]"/>
  <match src="comment: // 'a' - 10 [38545,38556]" dest="comment: // 'a' - 10 [43736,43747]"/>
  <match src="constant: constant [38749,38757]" dest="constant: constant [43940,43948]"/>
  <match src="type_name [64156,64163]" dest="type_name [20990,20997]"/>
  <match src="call_argument [90773,90783]" dest="call_argument [80413,80423]"/>
  <match src="identifier: epochs [104227,104233]" dest="identifier: epochs [33140,33146]"/>
  <match src="]: ] [110629,110630]" dest="]: ] [39542,39543]"/>
  <match src="return: return [6214,6220]" dest="return: return [6778,6784]"/>
  <match src="identifier: reason [110003,110009]" dest="identifier: reason [38916,38922]"/>
  <match src="(: ( [41945,41946]" dest="(: ( [47136,47137]"/>
  <match src="(: ( [24472,24473]" dest="(: ( [79921,79922]"/>
  <match src=".: . [107223,107224]" dest=".: . [36136,36137]"/>
  <match src=".: . [109606,109607]" dest=".: . [38519,38520]"/>
  <match src="visibility [9548,9556]" dest="visibility [10112,10120]"/>
  <match src="function: function [7815,7823]" dest="function: function [8379,8387]"/>
  <match src="identifier: BASE [9723,9727]" dest="identifier: BASE [10287,10291]"/>
  <match src="type_name [105575,105582]" dest="type_name [34488,34495]"/>
  <match src="view: view [102706,102710]" dest="view: view [31619,31623]"/>
  <match src="function_definition [56642,56745]" dest="function_definition [15755,15858]"/>
  <match src="returns: returns [100103,100110]" dest="returns: returns [29016,29023]"/>
  <match src="primitive_type [81267,81274]" dest="primitive_type [71942,71949]"/>
  <match src="identifier: notPaused [89460,89469]" dest="identifier: onlyFrozenOrFluid [72531,72548]"/>
  <match src="identifier: Transfer [13749,13757]" dest="identifier: Transfer [23747,23755]"/>
  <match src="member_expression [110545,110584]" dest="member_expression [39458,39497]"/>
  <match src="expression_statement [110959,111045]" dest="expression_statement [39872,39958]"/>
  <match src="parameter [41196,41212]" dest="parameter [46387,46403]"/>
  <match src="expression_statement [111671,111717]" dest="expression_statement [40584,40630]"/>
  <match src="(: ( [109324,109325]" dest="(: ( [38237,38238]"/>
  <match src="{: { [8747,8748]" dest="{: { [9311,9312]"/>
  <match src="returns: returns [9161,9168]" dest="returns: returns [9725,9732]"/>
  <match src="uint256: uint256 [13800,13807]" dest="uint256: uint256 [23798,23805]"/>
  <match src="type_name [55621,55628]" dest="type_name [14734,14741]"/>
  <match src="private: private [27742,27749]" dest="private: private [58386,58393]"/>
  <match src="}: } [10193,10194]" dest="}: } [10757,10758]"/>
  <match src="member_expression [54970,54982]" dest="member_expression [14083,14095]"/>
  <match src="parameter [9530,9546]" dest="parameter [10094,10110]"/>
  <match src="address: address [45774,45781]" dest="address: address [50965,50972]"/>
  <match src="}: } [100687,100688]" dest="}: } [29600,29601]"/>
  <match src="identifier: value [56287,56292]" dest="identifier: value [15400,15405]"/>
  <match src="bytes32: bytes32 [63025,63032]" dest="bytes32: bytes32 [19859,19866]"/>
  <match src="call_argument [43341,43773]" dest="call_argument [48532,48964]"/>
  <match src="): ) [56670,56671]" dest="): ) [15783,15784]"/>
  <match src="): ) [109658,109659]" dest="): ) [38571,38572]"/>
  <match src="function: function [6113,6121]" dest="function: function [6677,6685]"/>
  <match src="user_defined_type [54932,54944]" dest="user_defined_type [14045,14057]"/>
  <match src="type_name [12079,12083]" dest="type_name [22077,22081]"/>
  <match src="type_name [60923,60930]" dest="type_name [54389,54396]"/>
  <match src="primitive_type [64332,64339]" dest="primitive_type [21166,21173]"/>
  <match src="}: } [56627,56628]" dest="}: } [15740,15741]"/>
  <match src="}: } [6856,6857]" dest="}: } [7420,7421]"/>
  <match src="member_expression [108224,108239]" dest="member_expression [37137,37152]"/>
  <match src="identifier: greaterThan [111180,111191]" dest="identifier: greaterThan [40093,40104]"/>
  <match src="identifier: coupons [112183,112190]" dest="identifier: coupons [41096,41103]"/>
  <match src="uint256: uint256 [88356,88363]" dest="uint256: uint256 [71416,71423]"/>
  <match src="user_defined_type [6703,6707]" dest="user_defined_type [7267,7271]"/>
  <match src="function_body [90123,90938]" dest="function_body [73084,73489]"/>
  <match src="member_expression [107505,107528]" dest="member_expression [36418,36441]"/>
  <match src="): ) [115173,115174]" dest="): ) [70117,70118]"/>
  <match src="binary_expression [9193,9216]" dest="binary_expression [9757,9780]"/>
  <match src=",: , [108691,108692]" dest=",: , [37604,37605]"/>
  <match src="uint256: uint256 [31146,31153]" dest="uint256: uint256 [58182,58189]"/>
  <match src="type_cast_expression [40719,41045]" dest="type_cast_expression [45910,46236]"/>
  <match src="return_statement [102244,102253]" dest="return_statement [31157,31166]"/>
  <match src="): ) [8489,8490]" dest="): ) [9053,9054]"/>
  <match src="type_name [96701,96712]" dest="type_name [27919,27930]"/>
  <match src="visibility [99923,99930]" dest="visibility [28836,28843]"/>
  <match src="visibility [88107,88114]" dest="visibility [71123,71130]"/>
  <match src="false [106939,106944]" dest="false [35852,35857]"/>
  <match src="visibility [35396,35404]" dest="visibility [57387,57395]"/>
  <match src="function: function [103544,103552]" dest="function: function [32457,32465]"/>
  <match src="expression_statement [88790,88805]" dest="expression_statement [55587,55602]"/>
  <match src="identifier: D256 [9259,9263]" dest="identifier: D256 [9823,9827]"/>
  <match src="identifier: FILE [92479,92483]" dest="identifier: FILE [79094,79098]"/>
  <match src="type_name [110316,110323]" dest="type_name [39229,39236]"/>
  <match src=",: , [9074,9075]" dest=",: , [9638,9639]"/>
  <match src="state_mutability [64699,64703]" dest="state_mutability [16847,16851]"/>
  <match src="primitive_type [16560,16567]" dest="primitive_type [55314,55321]"/>
  <match src="return_statement [103498,103532]" dest="return_statement [32411,32445]"/>
  <match src="ternary_expression [103002,103088]" dest="ternary_expression [31915,32001]"/>
  <match src="identifier: value [91872,91877]" dest="identifier: candidate [80468,80477]"/>
  <match src=",: , [9207,9208]" dest=",: , [9771,9772]"/>
  <match src="member_expression [108573,108609]" dest="member_expression [37486,37522]"/>
  <match src="binary_expression [10141,10159]" dest="binary_expression [10705,10723]"/>
  <match src="(: ( [59956,59957]" dest="(: ( [24930,24931]"/>
  <match src="member_expression [75653,75666]" dest="member_expression [82219,82232]"/>
  <match src="type_name [64221,64228]" dest="type_name [21055,21062]"/>
  <match src="emit_statement [88815,88847]" dest="emit_statement [81998,82033]"/>
  <match src="return_statement [103770,103818]" dest="return_statement [32683,32731]"/>
  <match src="struct_member [96162,96193]" dest="struct_member [27380,27411]"/>
  <match src="memory: memory [30678,30684]" dest="memory: memory [17796,17802]"/>
  <match src="&quot;: &quot; [98552,98553]" dest="&quot;: &quot; [77202,77203]"/>
  <match src=".: . [9979,9980]" dest=".: . [10543,10544]"/>
  <match src="&lt;=: &lt;= [104488,104490]" dest="&lt;=: &lt;= [33401,33403]"/>
  <match src="[: [ [112445,112446]" dest="[: [ [41358,41359]"/>
  <match src="function: function [1238,1246]" dest="function: function [1802,1810]"/>
  <match src="identifier: z [46649,46650]" dest="identifier: z [51840,51841]"/>
  <match src="(: ( [8390,8391]" dest="(: ( [8954,8955]"/>
  <match src="{: { [54345,54346]" dest="{: { [13458,13459]"/>
  <match src="string: string [40084,40090]" dest="string: string [45275,45281]"/>
  <match src=".: . [103797,103798]" dest=".: . [32710,32711]"/>
  <match src="function_definition [107788,107929]" dest="function_definition [36701,36842]"/>
  <match src="): ) [43718,43719]" dest="): ) [48909,48910]"/>
  <match src="expression_statement [115364,115394]" dest="expression_statement [70308,70338]"/>
  <match src=".: . [74156,74157]" dest=".: . [68820,68821]"/>
  <match src="==: == [112122,112124]" dest="==: == [41035,41037]"/>
  <match src="): ) [6056,6057]" dest="): ) [6620,6621]"/>
  <match src="): ) [113687,113688]" dest="): ) [42600,42601]"/>
  <match src="(: ( [107914,107915]" dest="(: ( [36827,36828]"/>
  <match src="): ) [109371,109372]" dest="): ) [38284,38285]"/>
  <match src="): ) [9460,9461]" dest="): ) [10024,10025]"/>
  <match src="bytes32: bytes32 [99915,99922]" dest="bytes32: bytes32 [28828,28835]"/>
  <match src="{: { [105815,105816]" dest="{: { [34728,34729]"/>
  <match src=".: . [7250,7251]" dest=".: . [7814,7815]"/>
  <match src=".: . [103805,103806]" dest=".: . [32718,32719]"/>
  <match src="{: { [112625,112626]" dest="{: { [41538,41539]"/>
  <match src="return_statement [56815,56831]" dest="return_statement [15928,15944]"/>
  <match src="visibility [102699,102705]" dest="visibility [31612,31618]"/>
  <match src="call_argument [2667,2668]" dest="call_argument [3231,3232]"/>
  <match src="member_expression [109600,109622]" dest="member_expression [38513,38535]"/>
  <match src="): ) [91653,91654]" dest="): ) [73657,73658]"/>
  <match src="memory: memory [112952,112958]" dest="memory: memory [41865,41871]"/>
  <match src="parameter [110488,110502]" dest="parameter [39401,39415]"/>
  <match src="(: ( [107391,107392]" dest="(: ( [36304,36305]"/>
  <match src="public: public [105044,105050]" dest="public: public [33957,33963]"/>
  <match src="(: ( [62897,62898]" dest="(: ( [19731,19732]"/>
  <match src="primitive_type [99019,99026]" dest="primitive_type [77669,77676]"/>
  <match src="identifier: currentPeriod [103518,103531]" dest="identifier: currentPeriod [32431,32444]"/>
  <match src="identifier: i [46277,46278]" dest="identifier: i [51468,51469]"/>
  <match src="primitive_type [89591,89598]" dest="primitive_type [62700,62707]"/>
  <match src="private: private [10084,10091]" dest="private: private [10648,10655]"/>
  <match src="return: return [104213,104219]" dest="return: return [33126,33132]"/>
  <match src="identifier: account [94033,94040]" dest="identifier: account [74891,74898]"/>
  <match src="identifier: balance [108598,108605]" dest="identifier: balance [37511,37518]"/>
  <match src="): ) [64231,64232]" dest="): ) [21065,21066]"/>
  <match src="call_argument [43558,43566]" dest="call_argument [48749,48757]"/>
  <match src="==: == [101974,101976]" dest="==: == [30887,30889]"/>
  <match src="): ) [102953,102954]" dest="): ) [31866,31867]"/>
  <match src="expression_statement [107483,107537]" dest="expression_statement [36396,36450]"/>
  <match src="function_definition [113274,113478]" dest="function_definition [42187,42391]"/>
  <match src="call_expression [42226,42245]" dest="call_expression [47417,47436]"/>
  <match src="function_body [100414,100470]" dest="function_body [29327,29383]"/>
  <match src="call_argument [40364,40369]" dest="call_argument [45555,45560]"/>
  <match src="(: ( [42235,42236]" dest="(: ( [47426,47427]"/>
  <match src="(: ( [43295,43296]" dest="(: ( [48486,48487]"/>
  <match src="call_expression [1343,1372]" dest="call_expression [1907,1936]"/>
  <match src="variable_declaration [81267,81299]" dest="variable_declaration [71942,71963]"/>
  <match src="parameter [112576,112593]" dest="parameter [41489,41506]"/>
  <match src="member_expression [98887,98925]" dest="member_expression [77537,77575]"/>
  <match src="interface_declaration [62102,64499]" dest="interface_declaration [18936,21333]"/>
  <match src="function_body [112010,112308]" dest="function_body [40923,41221]"/>
  <match src="type_name [39391,39398]" dest="type_name [44582,44589]"/>
  <match src="primitive_type [38457,38464]" dest="primitive_type [43648,43655]"/>
  <match src="parameter [6305,6314]" dest="parameter [6869,6878]"/>
  <match src="[: [ [112270,112271]" dest="[: [ [41183,41184]"/>
  <match src="pure: pure [9156,9160]" dest="pure: pure [9720,9724]"/>
  <match src="identifier: z [45864,45865]" dest="identifier: z [51055,51056]"/>
  <match src="identifier: file [39588,39592]" dest="identifier: file [44779,44783]"/>
  <match src="revert_statement [39025,39281]" dest="revert_statement [44216,44472]"/>
  <match src="block_statement [45116,45170]" dest="block_statement [50307,50361]"/>
  <match src="(: ( [6126,6127]" dest="(: ( [6690,6691]"/>
  <match src="state_mutability [9442,9446]" dest="state_mutability [10006,10010]"/>
  <match src="bytes32: bytes32 [38943,38950]" dest="bytes32: bytes32 [44134,44141]"/>
  <match src="visibility [53813,53820]" dest="visibility [12926,12933]"/>
  <match src="identifier: totalSupply [100485,100496]" dest="identifier: totalSupply [29398,29409]"/>
  <match src="identifier: amount [83122,83128]" dest="identifier: amount [55201,55207]"/>
  <match src="parameter [4064,4071]" dest="parameter [4628,4635]"/>
  <match src="for: for [99861,99864]" dest="for: for [28774,28777]"/>
  <match src=".: . [111572,111573]" dest=".: . [40485,40486]"/>
  <match src="=: = [105775,105776]" dest="=: = [34688,34689]"/>
  <match src="): ) [88968,88969]" dest="): ) [71931,71932]"/>
  <match src="identifier: amount [109747,109753]" dest="identifier: amount [38660,38666]"/>
  <match src="parameter [112559,112574]" dest="parameter [41472,41487]"/>
  <match src="uint256: uint256 [90354,90361]" dest="uint256: uint256 [60952,60959]"/>
  <match src="call_expression [81814,81821]" dest="call_expression [61725,61732]"/>
  <match src="call_argument [89947,89952]" dest="call_argument [72891,72896]"/>
  <match src="comment: // 20% [53323,53329]" dest="comment: // 20% [12436,12442]"/>
  <match src="type_name [105738,105745]" dest="type_name [34651,34658]"/>
  <match src="]: ] [110398,110399]" dest="]: ] [39311,39312]"/>
  <match src="primitive_type [6938,6944]" dest="primitive_type [7502,7508]"/>
  <match src="identifier: input [47933,47938]" dest="identifier: input [53124,53129]"/>
  <match src="(: ( [95474,95475]" dest="(: ( [26692,26693]"/>
  <match src="identifier: spender [22165,22172]" dest="identifier: spender [65116,65123]"/>
  <match src="type_name [49341,49348]" dest="type_name [64113,64120]"/>
  <match src="binary_expression [44469,44483]" dest="binary_expression [49660,49674]"/>
  <match src="identifier: epoch [85194,85199]" dest="identifier: epoch [60578,60583]"/>
  <match src="=: = [91462,91463]" dest="=: = [60885,60886]"/>
  <match src="variable_declaration_statement [45050,45068]" dest="variable_declaration_statement [50241,50259]"/>
  <match src="address: address [19753,19760]" dest="address: address [65170,65177]"/>
  <match src="primitive_type [53405,53412]" dest="primitive_type [12518,12525]"/>
  <match src="call_argument [81538,81545]" dest="call_argument [54085,54092]"/>
  <match src="call_argument [115124,115128]" dest="call_argument [70068,70072]"/>
  <match src="internal: internal [55166,55174]" dest="internal: internal [14279,14287]"/>
  <match src="ternary_expression [102535,102622]" dest="ternary_expression [31448,31535]"/>
  <match src="returns: returns [63881,63888]" dest="returns: returns [20715,20722]"/>
  <match src="{: { [10161,10162]" dest="{: { [10725,10726]"/>
  <match src="(: ( [107679,107680]" dest="(: ( [36592,36593]"/>
  <match src="visibility [62486,62494]" dest="visibility [19320,19328]"/>
  <match src="address: address [113830,113837]" dest="address: address [42743,42750]"/>
  <match src=".: . [109473,109474]" dest=".: . [38386,38387]"/>
  <match src="identifier: currentPeriod [110827,110840]" dest="identifier: currentPeriod [39740,39753]"/>
  <match src="if: if [101958,101960]" dest="if: if [30871,30873]"/>
  <match src="): ) [63951,63952]" dest="): ) [20785,20786]"/>
  <match src="member_expression [8156,8166]" dest="member_expression [8720,8730]"/>
  <match src="primitive_type [90354,90361]" dest="primitive_type [60952,60959]"/>
  <match src="): ) [23189,23190]" dest="): ) [54959,54960]"/>
  <match src="visibility [53049,53056]" dest="visibility [12162,12169]"/>
  <match src="uint256: uint256 [53405,53412]" dest="uint256: uint256 [12518,12525]"/>
  <match src="type_name [100614,100621]" dest="type_name [29527,29534]"/>
  <match src="yul_identifier [44657,44663]" dest="yul_identifier [49848,49854]"/>
  <match src="(: ( [8435,8436]" dest="(: ( [8999,9000]"/>
  <match src="identifier: msg [89877,89880]" dest="identifier: msg [73834,73837]"/>
  <match src="state_mutability [6027,6031]" dest="state_mutability [6591,6595]"/>
  <match src="type_name [109739,109746]" dest="type_name [38652,38659]"/>
  <match src="function_definition [9096,9223]" dest="function_definition [9660,9787]"/>
  <match src="bytes: bytes [43971,43976]" dest="bytes: bytes [49162,49167]"/>
  <match src="event_paramater [88444,88457]" dest="event_paramater [71333,71346]"/>
  <match src="primitive_type [47082,47086]" dest="primitive_type [52273,52277]"/>
  <match src="event_paramater [62250,62268]" dest="event_paramater [19084,19102]"/>
  <match src="state_variable_declaration [53405,53461]" dest="state_variable_declaration [12518,12574]"/>
  <match src="identifier: require [66699,66706]" dest="identifier: decrementBalanceOf [73815,73833]"/>
  <match src="identifier: reject [113445,113451]" dest="identifier: reject [42358,42364]"/>
  <match src="uint256: uint256 [81267,81274]" dest="uint256: uint256 [71942,71949]"/>
  <match src="primitive_type [39345,39352]" dest="primitive_type [44536,44543]"/>
  <match src="member_expression [110794,110809]" dest="member_expression [39707,39722]"/>
  <match src="member_expression [44068,44084]" dest="member_expression [49259,49275]"/>
  <match src="function_definition [7459,7809]" dest="function_definition [8023,8373]"/>
  <match src="parameter [12045,12059]" dest="parameter [22043,22057]"/>
  <match src="private: private [36299,36306]" dest="private: private [57961,57968]"/>
  <match src="parameter [59803,59817]" dest="parameter [24777,24791]"/>
  <match src="type_name [63189,63196]" dest="type_name [20023,20030]"/>
  <match src="identifier: value [7672,7677]" dest="identifier: value [8236,8241]"/>
  <match src="pragma: pragma [59,65]" dest="pragma: pragma [59,65]"/>
  <match src="return_type_definition [28122,28139]" dest="return_type_definition [61433,61450]"/>
  <match src="comment: // 100 RFSD -&gt; 100M RSS [52884,52907]" dest="comment: // 100 RFSD -&gt; 100M RSS [11997,12020]"/>
  <match src="identifier: Fluid [115105,115110]" dest="identifier: Fluid [70049,70054]"/>
  <match src="uint256: uint256 [103145,103152]" dest="uint256: uint256 [32058,32065]"/>
  <match src="{: { [104341,104342]" dest="{: { [33254,33255]"/>
  <match src="type_name [101761,101768]" dest="type_name [30674,30681]"/>
  <match src="return_type_definition [101160,101177]" dest="return_type_definition [30073,30090]"/>
  <match src="user_defined_type [8328,8332]" dest="user_defined_type [8892,8896]"/>
  <match src="identifier: b [1351,1352]" dest="identifier: b [1915,1916]"/>
  <match src="call_argument [90918,90930]" dest="call_argument [73475,73481]"/>
  <match src="(: ( [43357,43358]" dest="(: ( [48548,48549]"/>
  <match src="function_body [39440,39856]" dest="function_body [44631,45047]"/>
  <match src="parameter [41766,41775]" dest="parameter [46957,46966]"/>
  <match src="internal: internal [113359,113367]" dest="internal: internal [42272,42280]"/>
  <match src="): ) [89580,89581]" dest="): ) [62689,62690]"/>
  <match src="(: ( [81205,81206]" dest="(: ( [61905,61906]"/>
  <match src="): ) [101146,101147]" dest="): ) [30059,30060]"/>
  <match src="call_expression [112193,112247]" dest="call_expression [41106,41160]"/>
  <match src="boolean_literal [74164,74169]" dest="boolean_literal [82165,82170]"/>
  <match src="identifier: msg [89230,89233]" dest="identifier: msg [72326,72329]"/>
  <match src="{: { [109107,109108]" dest="{: { [38020,38021]"/>
  <match src="=: = [38722,38723]" dest="=: = [43913,43914]"/>
  <match src="contract_body [71876,72028]" dest="contract_body [25689,25841]"/>
  <match src="uint256: uint256 [2637,2644]" dest="uint256: uint256 [3201,3208]"/>
  <match src="type_name [58229,58236]" dest="type_name [61602,61609]"/>
  <match src="call_argument [40235,40261]" dest="call_argument [45426,45452]"/>
  <match src="parameter [54448,54468]" dest="parameter [13561,13581]"/>
  <match src="call_argument [9723,9727]" dest="call_argument [10287,10291]"/>
  <match src="byte: byte [46083,46087]" dest="byte: byte [51274,51278]"/>
  <match src="primitive_type [41807,41814]" dest="primitive_type [46998,47005]"/>
  <match src="type_name [106633,106640]" dest="type_name [35546,35553]"/>
  <match src="{: { [113858,113859]" dest="{: { [42771,42772]"/>
  <match src="identifier: currentStart [95702,95714]" dest="identifier: currentStart [26920,26932]"/>
  <match src="&gt;: &gt; [102454,102455]" dest="&gt;: &gt; [31367,31368]"/>
  <match src="string [59008,59017]" dest="string [54768,54810]"/>
  <match src="parameter [3237,3246]" dest="parameter [3801,3810]"/>
  <match src="): ) [845,846]" dest="): ) [1409,1410]"/>
  <match src="uint256: uint256 [96690,96697]" dest="uint256: uint256 [27908,27915]"/>
  <match src="primitive_type [61095,61102]" dest="primitive_type [54891,54898]"/>
  <match src="type_name [96376,96383]" dest="type_name [27594,27601]"/>
  <match src="function_definition [80273,80407]" dest="function_definition [71752,72219]"/>
  <match src="member_expression [43341,43357]" dest="member_expression [48532,48548]"/>
  <match src="constant: constant [54047,54055]" dest="constant: constant [13160,13168]"/>
  <match src="identifier: target [9958,9964]" dest="identifier: target [10522,10528]"/>
  <match src="(: ( [88597,88598]" dest="(: ( [83289,83290]"/>
  <match src=",: , [107012,107013]" dest=",: , [35925,35926]"/>
  <match src="type_cast_expression [39049,39266]" dest="type_cast_expression [44240,44457]"/>
  <match src="memory: memory [32686,32692]" dest="memory: memory [62232,62238]"/>
  <match src="string_literal [90304,90333]" dest="string_literal [81783,81809]"/>
  <match src="identifier: _state [111671,111677]" dest="identifier: _state [40584,40590]"/>
  <match src="function_body [112625,112692]" dest="function_body [41538,41605]"/>
  <match src="member_expression [109236,109261]" dest="member_expression [38149,38174]"/>
  <match src="visibility [40638,40646]" dest="visibility [45829,45837]"/>
  <match src="identifier: accounts [109158,109166]" dest="identifier: accounts [38071,38079]"/>
  <match src="&gt;=: &gt;= [102543,102545]" dest="&gt;=: &gt;= [31456,31458]"/>
  <match src="parameter [364,373]" dest="parameter [928,937]"/>
  <match src="): ) [100741,100742]" dest="): ) [29654,29655]"/>
  <match src="type_name [88099,88106]" dest="type_name [71115,71122]"/>
  <match src="identifier: coupons [111908,111915]" dest="identifier: coupons [40821,40828]"/>
  <match src="): ) [66749,66750]" dest="): ) [73886,73887]"/>
  <match src="(: ( [23173,23174]" dest="(: ( [54943,54944]"/>
  <match src="string: string [110504,110510]" dest="string: string [39417,39423]"/>
  <match src="identifier: candidate [105109,105118]" dest="identifier: candidate [34022,34031]"/>
  <match src="return_type_definition [101579,101596]" dest="return_type_definition [30492,30509]"/>
  <match src="function: function [9229,9237]" dest="function: function [9793,9801]"/>
  <match src="&quot;: &quot; [32950,32951]" dest="&quot;: &quot; [63538,63539]"/>
  <match src="primitive_type [96448,96455]" dest="primitive_type [27666,27673]"/>
  <match src="&quot;: &quot; [19891,19892]" dest="&quot;: &quot; [65331,65332]"/>
  <match src="&quot;: &quot; [22007,22008]" dest="&quot;: &quot; [64331,64332]"/>
  <match src="uint256: uint256 [5802,5809]" dest="uint256: uint256 [6366,6373]"/>
  <match src="call_argument [61203,61209]" dest="call_argument [65637,65643]"/>
  <match src="member_expression [86635,86660]" dest="member_expression [54492,54510]"/>
  <match src="type_name [99896,99908]" dest="type_name [28809,28821]"/>
  <match src="parameter [109060,109074]" dest="parameter [37973,37987]"/>
  <match src="identifier: D256 [6356,6360]" dest="identifier: D256 [6920,6924]"/>
  <match src="(: ( [105737,105738]" dest="(: ( [34650,34651]"/>
  <match src="): ) [110198,110199]" dest="): ) [39111,39112]"/>
  <match src="visibility [63070,63078]" dest="visibility [19904,19912]"/>
  <match src="memory: memory [7868,7874]" dest="memory: memory [8432,8438]"/>
  <match src="type_name [111125,111137]" dest="type_name [40038,40050]"/>
  <match src="identifier: stringifyTruncated [43383,43401]" dest="identifier: stringifyTruncated [48574,48592]"/>
  <match src="primitive_type [64156,64163]" dest="primitive_type [20990,20997]"/>
  <match src="): ) [94069,94070]" dest="): ) [74927,74928]"/>
  <match src="(: ( [21873,21874]" dest="(: ( [64882,64883]"/>
  <match src="function: function [55795,55803]" dest="function: function [14908,14916]"/>
  <match src="): ) [61238,61239]" dest="): ) [65670,65671]"/>
  <match src="{: { [102729,102730]" dest="{: { [31642,31643]"/>
  <match src="member_expression [92598,92610]" dest="member_expression [79515,79527]"/>
  <match src="parameter [113337,113357]" dest="parameter [42250,42270]"/>
</matches>
<actions>
  <move-tree tree="comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [10246,10745]" parent="source_file [0,83896]" at="3"/>
  <move-tree tree="interface_declaration [62102,64499]" parent="source_file [0,83896]" at="32"/>
  <move-tree tree="comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP. Does not include  * the optional functions; to access them see {ERC20Detailed}.  */ [11337,11487]" parent="source_file [0,83896]" at="32"/>
  <move-tree tree="interface_declaration [11488,14054]" parent="source_file [0,83896]" at="32"/>
  <move-tree tree="comment: /*     Copyright 2020 Reflective Dollar Devs, based on the works of the Dynamic Dollar Devs and the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [71183,71858]" parent="source_file [0,83896]" at="50"/>
  <move-tree tree="contract_declaration [95301,95622]" parent="source_file [0,83896]" at="51"/>
  <move-tree tree="contract_declaration [95624,95942]" parent="source_file [0,83896]" at="52"/>
  <move-tree tree="contract_declaration [95944,96227]" parent="source_file [0,83896]" at="53"/>
  <move-tree tree="contract_declaration [96229,96785]" parent="source_file [0,83896]" at="54"/>
  <move-tree tree="contract_declaration [96787,96831]" parent="source_file [0,83896]" at="55"/>
  <move-tree tree="contract_declaration [99814,105866]" parent="source_file [0,83896]" at="57"/>
  <move-tree tree="contract_declaration [106544,113924]" parent="source_file [0,83896]" at="60"/>
  <move-tree tree="comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [14056,14619]" parent="source_file [0,83896]" at="60"/>
  <move-tree tree="comment: /**  * @dev Implementation of the {IERC20} interface.  *  * This implementation is agnostic to the way tokens are created. This means  * that a supply mechanism has to be added in a derived contract using {_mint}.  * For a generic mechanism see {ERC20Mintable}.  *  * TIP: For a detailed writeup see our guide  * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How  * to implement supply mechanisms].  *  * We have followed general OpenZeppelin guidelines: functions revert instead  * of returning `false` on failure. This behavior is nonetheless conventional  * and does not conflict with the expectations of ERC20 applications.  *  * Additionally, an {Approval} event is emitted on calls to {transferFrom}.  * This allows applications to reconstruct the allowance for all accounts just  * by listening to said events. Other implementations of the EIP may not emit  * these events, as it isn't required by the specification.  *  * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}  * functions have been added to mitigate the well-known issues around setting  * allowances. See {IERC20-approve}.  */ [14621,15773]" parent="source_file [0,83896]" at="60"/>
  <move-tree tree="library_declaration [38390,47971]" parent="source_file [0,83896]" at="60"/>
  <move-tree tree="contract_declaration [15774,22597]" parent="source_file [0,83896]" at="66"/>
  <move-tree tree="contract_declaration [72706,76543]" parent="source_file [0,83896]" at="68"/>
  <move-tree tree="contract_declaration [114602,115414]" parent="source_file [0,83896]" at="71"/>
  <update-node tree="comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [10246,10745]" label="/**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */"/>
  <insert-node tree="contract_declaration [16630,18934]" parent="source_file [0,83896]" at="11"/>
  <update-node tree="comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [14056,14619]" label="/*     Copyright 2019 dYdX Trading Inc.      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */"/>
  <update-node tree="comment: /**  * @dev Implementation of the {IERC20} interface.  *  * This implementation is agnostic to the way tokens are created. This means  * that a supply mechanism has to be added in a derived contract using {_mint}.  * For a generic mechanism see {ERC20Mintable}.  *  * TIP: For a detailed writeup see our guide  * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How  * to implement supply mechanisms].  *  * We have followed general OpenZeppelin guidelines: functions revert instead  * of returning `false` on failure. This behavior is nonetheless conventional  * and does not conflict with the expectations of ERC20 applications.  *  * Additionally, an {Approval} event is emitted on calls to {transferFrom}.  * This allows applications to reconstruct the allowance for all accounts just  * by listening to said events. Other implementations of the EIP may not emit  * these events, as it isn't required by the specification.  *  * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}  * functions have been added to mitigate the well-known issues around setting  * allowances. See {IERC20-approve}.  */ [14621,15773]" label="/**  * @title Require  * @author dYdX  *  * Stringifies parameters to pretty-print revert messages. Costs more gas than regular require()  */"/>
  <insert-node tree="contract_declaration [53840,58843]" parent="source_file [0,83896]" at="33"/>
  <insert-node tree="contract_declaration [78464,82339]" parent="source_file [0,83896]" at="48"/>
  <insert-node tree="contract_declaration [83017,83896]" parent="source_file [0,83896]" at="50"/>
  <insert-node tree="contract: contract [16630,16638]" parent="contract_declaration [16630,18934]" at="0"/>
  <insert-node tree="identifier: Curve [16639,16644]" parent="contract_declaration [16630,18934]" at="1"/>
  <insert-node tree="contract_body [16645,18934]" parent="contract_declaration [16630,18934]" at="2"/>
  <insert-node tree="contract: contract [53840,53848]" parent="contract_declaration [53840,58843]" at="0"/>
  <insert-node tree="identifier: Comptroller [53849,53860]" parent="contract_declaration [53840,58843]" at="1"/>
  <insert-node tree="is: is [53861,53863]" parent="contract_declaration [53840,58843]" at="2"/>
  <insert-tree tree="inheritance_specifier [53864,53871]" parent="contract_declaration [53840,58843]" at="3"/>
  <insert-node tree="contract_body [53872,58843]" parent="contract_declaration [53840,58843]" at="4"/>
  <update-node tree="identifier: ERC20 [15783,15788]" label="Market"/>
  <move-tree tree="function_definition [19734,20198]" parent="contract_body [59559,65863]" at="28"/>
  <update-node tree="identifier: Oracle [72715,72721]" label="Regulator"/>
  <move-tree tree="function_definition [73945,74187]" parent="contract_body [66575,68868]" at="18"/>
  <update-node tree="identifier: Pool [87821,87825]" label="Bonding"/>
  <move-tree tree="inheritance_specifier [116379,116389]" parent="contract_declaration [71036,73962]" at="5"/>
  <move-tree tree="event_definition [88320,88386]" parent="contract_body [71076,73962]" at="8"/>
  <insert-node tree="contract: contract [78464,78472]" parent="contract_declaration [78464,82339]" at="0"/>
  <insert-node tree="identifier: Govern [78473,78479]" parent="contract_declaration [78464,82339]" at="1"/>
  <insert-node tree="is: is [78480,78482]" parent="contract_declaration [78464,82339]" at="2"/>
  <insert-tree tree="inheritance_specifier [78483,78490]" parent="contract_declaration [78464,82339]" at="3"/>
  <insert-node tree=",: , [78490,78491]" parent="contract_declaration [78464,82339]" at="4"/>
  <move-tree tree="inheritance_specifier [116121,116131]" parent="contract_declaration [78464,82339]" at="5"/>
  <insert-node tree=",: , [78502,78503]" parent="contract_declaration [78464,82339]" at="6"/>
  <move-tree tree="inheritance_specifier [116133,116144]" parent="contract_declaration [78464,82339]" at="7"/>
  <insert-node tree="contract_body [78516,82339]" parent="contract_declaration [78464,82339]" at="8"/>
  <insert-node tree="contract: contract [83017,83025]" parent="contract_declaration [83017,83896]" at="0"/>
  <insert-node tree="identifier: Implementation [83026,83040]" parent="contract_declaration [83017,83896]" at="1"/>
  <insert-node tree="is: is [83041,83043]" parent="contract_declaration [83017,83896]" at="2"/>
  <move-tree tree="inheritance_specifier [116673,116678]" parent="contract_declaration [83017,83896]" at="3"/>
  <insert-node tree=",: , [83049,83050]" parent="contract_declaration [83017,83896]" at="4"/>
  <insert-tree tree="inheritance_specifier [83051,83058]" parent="contract_declaration [83017,83896]" at="5"/>
  <insert-node tree=",: , [83058,83059]" parent="contract_declaration [83017,83896]" at="6"/>
  <insert-tree tree="inheritance_specifier [83060,83066]" parent="contract_declaration [83017,83896]" at="7"/>
  <insert-node tree=",: , [83066,83067]" parent="contract_declaration [83017,83896]" at="8"/>
  <insert-tree tree="inheritance_specifier [83068,83077]" parent="contract_declaration [83017,83896]" at="9"/>
  <insert-node tree=",: , [83077,83078]" parent="contract_declaration [83017,83896]" at="10"/>
  <insert-tree tree="inheritance_specifier [83079,83085]" parent="contract_declaration [83017,83896]" at="11"/>
  <insert-node tree="contract_body [83086,83896]" parent="contract_declaration [83017,83896]" at="12"/>
  <insert-node tree="{: { [16645,16646]" parent="contract_body [16645,18934]" at="0"/>
  <insert-tree tree="using_directive [16651,16678]" parent="contract_body [16645,18934]" at="1"/>
  <move-tree tree="using_directive [27514,27545]" parent="contract_body [16645,18934]" at="2"/>
  <insert-node tree="function_definition [16720,16966]" parent="contract_body [16645,18934]" at="3"/>
  <insert-node tree="function_definition [16972,18249]" parent="contract_body [16645,18934]" at="4"/>
  <insert-node tree="comment: // 1/(3(1-R)^2)-1/3 [18255,18274]" parent="contract_body [16645,18934]" at="5"/>
  <insert-node tree="function_definition [18279,18516]" parent="contract_body [16645,18934]" at="6"/>
  <insert-node tree="comment: // 1/(3(1-R)(1-R'))-1/3 [18522,18545]" parent="contract_body [16645,18934]" at="7"/>
  <insert-node tree="function_definition [18550,18932]" parent="contract_body [16645,18934]" at="8"/>
  <insert-node tree="}: } [18933,18934]" parent="contract_body [16645,18934]" at="9"/>
  <insert-node tree="{: { [53872,53873]" parent="contract_body [53872,58843]" at="0"/>
  <insert-tree tree="using_directive [53878,53905]" parent="contract_body [53872,58843]" at="1"/>
  <insert-tree tree="state_variable_declaration [53911,53957]" parent="contract_body [53872,58843]" at="2"/>
  <insert-node tree="function_definition [53963,54341]" parent="contract_body [53872,58843]" at="3"/>
  <insert-node tree="function_definition [54347,54843]" parent="contract_body [53872,58843]" at="4"/>
  <move-tree tree="function_definition [23096,23197]" parent="contract_body [53872,58843]" at="5"/>
  <insert-node tree="function_definition [55086,55286]" parent="contract_body [53872,58843]" at="6"/>
  <insert-node tree="function_definition [55292,55455]" parent="contract_body [53872,58843]" at="7"/>
  <move-tree tree="function_definition [27244,27469]" parent="contract_body [53872,58843]" at="8"/>
  <insert-node tree="function_definition [55614,57325]" parent="contract_body [53872,58843]" at="9"/>
  <insert-node tree="function_definition [57331,57679]" parent="contract_body [53872,58843]" at="10"/>
  <move-tree tree="function_definition [92125,92340]" parent="contract_body [53872,58843]" at="11"/>
  <insert-node tree="function_definition [57923,58345]" parent="contract_body [53872,58843]" at="12"/>
  <insert-node tree="function_definition [58351,58529]" parent="contract_body [53872,58843]" at="13"/>
  <insert-node tree="function_definition [58535,58665]" parent="contract_body [53872,58843]" at="14"/>
  <insert-node tree="function_definition [58671,58841]" parent="contract_body [53872,58843]" at="15"/>
  <insert-node tree="}: } [58842,58843]" parent="contract_body [53872,58843]" at="16"/>
  <insert-tree tree="state_variable_declaration [59598,59639]" parent="contract_body [59559,65863]" at="2"/>
  <insert-node tree="event_definition [59645,59776]" parent="contract_body [59559,65863]" at="3"/>
  <insert-node tree="event_definition [59781,59894]" parent="contract_body [59559,65863]" at="4"/>
  <move-tree tree="event_definition [24229,24272]" parent="contract_body [59559,65863]" at="5"/>
  <insert-tree tree="event_definition [59997,60084]" parent="contract_body [59559,65863]" at="6"/>
  <move-tree tree="event_definition [25544,25628]" parent="contract_body [59559,65863]" at="7"/>
  <move-tree tree="event_definition [61500,61586]" parent="contract_body [59559,65863]" at="8"/>
  <move-tree tree="function_definition [85102,85249]" parent="contract_body [59559,65863]" at="9"/>
  <insert-node tree="function_definition [60698,61376]" parent="contract_body [59559,65863]" at="10"/>
  <insert-node tree="function_definition [61382,61542]" parent="contract_body [59559,65863]" at="11"/>
  <insert-node tree="function_definition [61548,62495]" parent="contract_body [59559,65863]" at="12"/>
  <insert-node tree="function_definition [62501,63380]" parent="contract_body [59559,65863]" at="13"/>
  <insert-node tree="function_definition [63386,64041]" parent="contract_body [59559,65863]" at="14"/>
  <insert-node tree="function_definition [64047,64853]" parent="contract_body [59559,65863]" at="15"/>
  <move-tree tree=",: , [21887,21888]" parent="function_definition [64859,65139]" at="5"/>
  <insert-tree tree="using_directive [66581,66608]" parent="contract_body [66575,68868]" at="1"/>
  <insert-node tree="event_definition [66650,66790]" parent="contract_body [66575,68868]" at="3"/>
  <insert-node tree="event_definition [66795,66892]" parent="contract_body [66575,68868]" at="4"/>
  <insert-node tree="event_definition [66897,66961]" parent="contract_body [66575,68868]" at="5"/>
  <insert-node tree="function_definition [66967,67475]" parent="contract_body [66575,68868]" at="6"/>
  <insert-node tree="function_definition [67481,67807]" parent="contract_body [66575,68868]" at="7"/>
  <insert-node tree="function_definition [68262,68519]" parent="contract_body [66575,68868]" at="9"/>
  <insert-node tree="function_definition [71477,71746]" parent="contract_body [71076,73962]" at="7"/>
  <move-tree tree="function_definition [80273,80407]" parent="contract_body [71076,73962]" at="10"/>
  <insert-node tree="function_definition [73495,73960]" parent="contract_body [71076,73962]" at="12"/>
  <insert-node tree="{: { [78516,78517]" parent="contract_body [78516,82339]" at="0"/>
  <move-tree tree="using_directive [79397,79424]" parent="contract_body [78516,82339]" at="1"/>
  <insert-tree tree="using_directive [78554,78585]" parent="contract_body [78516,82339]" at="2"/>
  <move-tree tree="state_variable_declaration [72776,72817]" parent="contract_body [78516,82339]" at="3"/>
  <insert-node tree="event_definition [78638,78744]" parent="contract_body [78516,82339]" at="4"/>
  <insert-node tree="event_definition [78749,78849]" parent="contract_body [78516,82339]" at="5"/>
  <move-tree tree="event_definition [88486,88575]" parent="contract_body [78516,82339]" at="6"/>
  <insert-node tree="function_definition [78925,80499]" parent="contract_body [78516,82339]" at="7"/>
  <insert-node tree="function_definition [80505,81278]" parent="contract_body [78516,82339]" at="8"/>
  <insert-node tree="function_definition [81284,82039]" parent="contract_body [78516,82339]" at="9"/>
  <insert-node tree="function_definition [82045,82337]" parent="contract_body [78516,82339]" at="10"/>
  <insert-node tree="}: } [82338,82339]" parent="contract_body [78516,82339]" at="11"/>
  <insert-node tree="{: { [83086,83087]" parent="contract_body [83086,83896]" at="0"/>
  <move-tree tree="using_directive [82801,82828]" parent="contract_body [83086,83896]" at="1"/>
  <insert-node tree="event_definition [83125,83196]" parent="contract_body [83086,83896]" at="2"/>
  <move-tree tree="event_definition [88263,88315]" parent="contract_body [83086,83896]" at="3"/>
  <move-tree tree="function_definition [88581,88853]" parent="contract_body [83086,83896]" at="4"/>
  <insert-node tree="function_definition [83463,83647]" parent="contract_body [83086,83896]" at="5"/>
  <insert-node tree="modifier_definition [83653,83894]" parent="contract_body [83086,83896]" at="6"/>
  <insert-node tree="}: } [83895,83896]" parent="contract_body [83086,83896]" at="7"/>
  <insert-node tree="function: function [16720,16728]" parent="function_definition [16720,16966]" at="0"/>
  <insert-node tree="identifier: calculateCouponPremium [16729,16751]" parent="function_definition [16720,16966]" at="1"/>
  <insert-node tree="(: ( [16751,16752]" parent="function_definition [16720,16966]" at="2"/>
  <insert-node tree="parameter [16761,16780]" parent="function_definition [16720,16966]" at="3"/>
  <insert-node tree=",: , [16780,16781]" parent="function_definition [16720,16966]" at="4"/>
  <insert-node tree="parameter [16790,16807]" parent="function_definition [16720,16966]" at="5"/>
  <insert-node tree=",: , [16807,16808]" parent="function_definition [16720,16966]" at="6"/>
  <move-tree tree="parameter [22972,22986]" parent="function_definition [16720,16966]" at="7"/>
  <insert-node tree="): ) [16836,16837]" parent="function_definition [16720,16966]" at="8"/>
  <move-tree tree="visibility [27856,27864]" parent="function_definition [16720,16966]" at="9"/>
  <move-tree tree="state_mutability [64699,64703]" parent="function_definition [16720,16966]" at="10"/>
  <move-tree tree="return_type_definition [16100,16117]" parent="function_definition [16720,16966]" at="11"/>
  <insert-node tree="function_body [16870,16966]" parent="function_definition [16720,16966]" at="12"/>
  <insert-node tree="function: function [16972,16980]" parent="function_definition [16972,18249]" at="0"/>
  <insert-node tree="identifier: effectivePremium [16981,16997]" parent="function_definition [16972,18249]" at="1"/>
  <insert-node tree="(: ( [16997,16998]" parent="function_definition [16972,18249]" at="2"/>
  <move-tree tree="parameter [19046,19069]" parent="function_definition [16972,18249]" at="3"/>
  <insert-node tree=",: , [17026,17027]" parent="function_definition [16972,18249]" at="4"/>
  <move-tree tree="parameter [18352,18370]" parent="function_definition [16972,18249]" at="5"/>
  <insert-node tree=",: , [17053,17054]" parent="function_definition [16972,18249]" at="6"/>
  <move-tree tree="parameter [23131,23145]" parent="function_definition [16972,18249]" at="7"/>
  <insert-node tree="): ) [17082,17083]" parent="function_definition [16972,18249]" at="8"/>
  <move-tree tree="visibility [15950,15957]" parent="function_definition [16972,18249]" at="9"/>
  <move-tree tree="state_mutability [65565,65569]" parent="function_definition [16972,18249]" at="10"/>
  <insert-tree tree="return_type_definition [17097,17126]" parent="function_definition [16972,18249]" at="11"/>
  <insert-node tree="function_body [17127,18249]" parent="function_definition [16972,18249]" at="12"/>
  <insert-node tree="function: function [18279,18287]" parent="function_definition [18279,18516]" at="0"/>
  <insert-node tree="identifier: curve [18288,18293]" parent="function_definition [18279,18516]" at="1"/>
  <insert-node tree="(: ( [18293,18294]" parent="function_definition [18279,18516]" at="2"/>
  <move-tree tree="parameter [73988,74007]" parent="function_definition [18279,18516]" at="3"/>
  <insert-node tree="): ) [18323,18324]" parent="function_definition [18279,18516]" at="4"/>
  <move-tree tree="visibility [15984,15991]" parent="function_definition [18279,18516]" at="5"/>
  <move-tree tree="state_mutability [50913,50917]" parent="function_definition [18279,18516]" at="6"/>
  <insert-tree tree="return_type_definition [18338,18367]" parent="function_definition [18279,18516]" at="7"/>
  <insert-node tree="function_body [18368,18516]" parent="function_definition [18279,18516]" at="8"/>
  <insert-node tree="function: function [18550,18558]" parent="function_definition [18550,18932]" at="0"/>
  <insert-node tree="identifier: curveMean [18559,18568]" parent="function_definition [18550,18932]" at="1"/>
  <insert-node tree="(: ( [18568,18569]" parent="function_definition [18550,18932]" at="2"/>
  <move-tree tree="parameter [74831,74850]" parent="function_definition [18550,18932]" at="3"/>
  <insert-node tree=",: , [18603,18604]" parent="function_definition [18550,18932]" at="4"/>
  <move-tree tree="parameter [34827,34861]" parent="function_definition [18550,18932]" at="5"/>
  <insert-node tree="): ) [18643,18644]" parent="function_definition [18550,18932]" at="6"/>
  <move-tree tree="visibility [74814,74821]" parent="function_definition [18550,18932]" at="7"/>
  <move-tree tree="state_mutability [49415,49419]" parent="function_definition [18550,18932]" at="8"/>
  <insert-tree tree="return_type_definition [18658,18687]" parent="function_definition [18550,18932]" at="9"/>
  <insert-node tree="function_body [18688,18932]" parent="function_definition [18550,18932]" at="10"/>
  <insert-node tree="function: function [53963,53971]" parent="function_definition [53963,54341]" at="0"/>
  <insert-node tree="identifier: mintToAccount [53972,53985]" parent="function_definition [53963,54341]" at="1"/>
  <insert-node tree="(: ( [53985,53986]" parent="function_definition [53963,54341]" at="2"/>
  <move-tree tree="parameter [29566,29581]" parent="function_definition [53963,54341]" at="3"/>
  <insert-node tree=",: , [54001,54002]" parent="function_definition [53963,54341]" at="4"/>
  <move-tree tree="parameter [29583,29597]" parent="function_definition [53963,54341]" at="5"/>
  <insert-node tree="): ) [54017,54018]" parent="function_definition [53963,54341]" at="6"/>
  <move-tree tree="visibility [29599,29607]" parent="function_definition [53963,54341]" at="7"/>
  <insert-node tree="function_body [54028,54341]" parent="function_definition [53963,54341]" at="8"/>
  <insert-node tree="function: function [54347,54355]" parent="function_definition [54347,54843]" at="0"/>
  <insert-node tree="identifier: burnFromAccount [54356,54371]" parent="function_definition [54347,54843]" at="1"/>
  <insert-node tree="(: ( [54371,54372]" parent="function_definition [54347,54843]" at="2"/>
  <move-tree tree="parameter [60906,60921]" parent="function_definition [54347,54843]" at="3"/>
  <insert-node tree=",: , [54387,54388]" parent="function_definition [54347,54843]" at="4"/>
  <move-tree tree="parameter [60923,60937]" parent="function_definition [54347,54843]" at="5"/>
  <insert-node tree="): ) [54403,54404]" parent="function_definition [54347,54843]" at="6"/>
  <move-tree tree="visibility [86114,86122]" parent="function_definition [54347,54843]" at="7"/>
  <insert-tree tree="return_type_definition [54414,54449]" parent="function_definition [54347,54843]" at="8"/>
  <insert-node tree="function_body [54450,54843]" parent="function_definition [54347,54843]" at="9"/>
  <update-node tree="identifier: burnFrom [23105,23113]" label="redeemToAccount"/>
  <move-tree tree="parameter [28093,28108]" parent="function_definition [54849,55080]" at="3"/>
  <move-tree tree="parameter [61095,61109]" parent="function_definition [54849,55080]" at="6"/>
  <move-tree tree="visibility [24901,24909]" parent="function_definition [54849,55080]" at="8"/>
  <insert-node tree="function: function [55086,55094]" parent="function_definition [55086,55286]" at="0"/>
  <insert-node tree="identifier: burnRedeemable [55095,55109]" parent="function_definition [55086,55286]" at="1"/>
  <insert-node tree="(: ( [55109,55110]" parent="function_definition [55086,55286]" at="2"/>
  <move-tree tree="parameter [31816,31830]" parent="function_definition [55086,55286]" at="3"/>
  <insert-node tree="): ) [55124,55125]" parent="function_definition [55086,55286]" at="4"/>
  <move-tree tree="visibility [31832,31840]" parent="function_definition [55086,55286]" at="5"/>
  <insert-node tree="function_body [55135,55286]" parent="function_definition [55086,55286]" at="6"/>
  <insert-node tree="function: function [55292,55300]" parent="function_definition [55292,55455]" at="0"/>
  <insert-node tree="identifier: increaseDebt [55301,55313]" parent="function_definition [55292,55455]" at="1"/>
  <insert-node tree="(: ( [55313,55314]" parent="function_definition [55292,55455]" at="2"/>
  <move-tree tree="parameter [16560,16574]" parent="function_definition [55292,55455]" at="3"/>
  <insert-node tree="): ) [55328,55329]" parent="function_definition [55292,55455]" at="4"/>
  <move-tree tree="visibility [83033,83041]" parent="function_definition [55292,55455]" at="5"/>
  <insert-node tree="function_body [55339,55455]" parent="function_definition [55292,55455]" at="6"/>
  <update-node tree="identifier: _transferOwnership [27253,27271]" label="decreaseDebt"/>
  <move-tree tree="parameter [34752,34766]" parent="function_definition [55461,55608]" at="3"/>
  <insert-node tree="function: function [55614,55622]" parent="function_definition [55614,57325]" at="0"/>
  <insert-node tree="identifier: increaseSupply [55623,55637]" parent="function_definition [55614,57325]" at="1"/>
  <insert-node tree="(: ( [55637,55638]" parent="function_definition [55614,57325]" at="2"/>
  <insert-node tree="parameter [55638,55655]" parent="function_definition [55614,57325]" at="3"/>
  <insert-node tree="): ) [55655,55656]" parent="function_definition [55614,57325]" at="4"/>
  <move-tree tree="visibility [29301,29309]" parent="function_definition [55614,57325]" at="5"/>
  <move-tree tree="return_type_definition [86123,86149]" parent="function_definition [55614,57325]" at="6"/>
  <insert-tree tree="function_body [55702,57325]" parent="function_definition [55614,57325]" at="7"/>
  <insert-node tree="function: function [57331,57339]" parent="function_definition [57331,57679]" at="0"/>
  <insert-node tree="identifier: resetDebt [57340,57349]" parent="function_definition [57331,57679]" at="1"/>
  <insert-node tree="(: ( [57349,57350]" parent="function_definition [57331,57679]" at="2"/>
  <move-tree tree="parameter [35359,35394]" parent="function_definition [57331,57679]" at="3"/>
  <insert-node tree="): ) [57385,57386]" parent="function_definition [57331,57679]" at="4"/>
  <move-tree tree="visibility [35396,35404]" parent="function_definition [57331,57679]" at="5"/>
  <insert-tree tree="function_body [57396,57679]" parent="function_definition [57331,57679]" at="6"/>
  <insert-node tree="function: function [57923,57931]" parent="function_definition [57923,58345]" at="0"/>
  <insert-node tree="identifier: mintToBonded [57932,57944]" parent="function_definition [57923,58345]" at="1"/>
  <insert-node tree="(: ( [57944,57945]" parent="function_definition [57923,58345]" at="2"/>
  <move-tree tree="parameter [33327,33341]" parent="function_definition [57923,58345]" at="3"/>
  <insert-node tree="): ) [57959,57960]" parent="function_definition [57923,58345]" at="4"/>
  <move-tree tree="visibility [36299,36306]" parent="function_definition [57923,58345]" at="5"/>
  <insert-node tree="function_body [57969,58345]" parent="function_definition [57923,58345]" at="6"/>
  <insert-node tree="function: function [58351,58359]" parent="function_definition [58351,58529]" at="0"/>
  <insert-node tree="identifier: mintToDAO [58360,58369]" parent="function_definition [58351,58529]" at="1"/>
  <insert-node tree="(: ( [58369,58370]" parent="function_definition [58351,58529]" at="2"/>
  <move-tree tree="parameter [32520,32534]" parent="function_definition [58351,58529]" at="3"/>
  <insert-node tree="): ) [58384,58385]" parent="function_definition [58351,58529]" at="4"/>
  <move-tree tree="visibility [27742,27749]" parent="function_definition [58351,58529]" at="5"/>
  <insert-node tree="function_body [58394,58529]" parent="function_definition [58351,58529]" at="6"/>
  <insert-node tree="function: function [58535,58543]" parent="function_definition [58535,58665]" at="0"/>
  <insert-node tree="identifier: mintToPool [58544,58554]" parent="function_definition [58535,58665]" at="1"/>
  <insert-node tree="(: ( [58554,58555]" parent="function_definition [58535,58665]" at="2"/>
  <move-tree tree="parameter [31111,31125]" parent="function_definition [58535,58665]" at="3"/>
  <insert-node tree="): ) [58569,58570]" parent="function_definition [58535,58665]" at="4"/>
  <move-tree tree="visibility [27704,27711]" parent="function_definition [58535,58665]" at="5"/>
  <insert-node tree="function_body [58579,58665]" parent="function_definition [58535,58665]" at="6"/>
  <insert-node tree="function: function [58671,58679]" parent="function_definition [58671,58841]" at="0"/>
  <insert-node tree="identifier: mintToRedeemable [58680,58696]" parent="function_definition [58671,58841]" at="1"/>
  <insert-node tree="(: ( [58696,58697]" parent="function_definition [58671,58841]" at="2"/>
  <move-tree tree="parameter [30302,30316]" parent="function_definition [58671,58841]" at="3"/>
  <insert-node tree="): ) [58711,58712]" parent="function_definition [58671,58841]" at="4"/>
  <move-tree tree="visibility [24339,24346]" parent="function_definition [58671,58841]" at="5"/>
  <insert-node tree="function_body [58721,58841]" parent="function_definition [58671,58841]" at="6"/>
  <update-node tree="identifier: Context [15792,15799]" label="Comptroller"/>
  <update-node tree="identifier: IERC20 [15801,15807]" label="Curve"/>
  <insert-node tree="event: event [59645,59650]" parent="event_definition [59645,59776]" at="0"/>
  <insert-node tree="identifier: CouponExpiration [59651,59667]" parent="event_definition [59645,59776]" at="1"/>
  <insert-node tree="(: ( [59667,59668]" parent="event_definition [59645,59776]" at="2"/>
  <insert-node tree="event_paramater [59668,59689]" parent="event_definition [59645,59776]" at="3"/>
  <insert-node tree=",: , [59689,59690]" parent="event_definition [59645,59776]" at="4"/>
  <insert-tree tree="event_paramater [59691,59713]" parent="event_definition [59645,59776]" at="5"/>
  <insert-node tree=",: , [59713,59714]" parent="event_definition [59645,59776]" at="6"/>
  <insert-tree tree="event_paramater [59715,59737]" parent="event_definition [59645,59776]" at="7"/>
  <insert-node tree=",: , [59737,59738]" parent="event_definition [59645,59776]" at="8"/>
  <insert-tree tree="event_paramater [59739,59755]" parent="event_definition [59645,59776]" at="9"/>
  <insert-node tree=",: , [59755,59756]" parent="event_definition [59645,59776]" at="10"/>
  <insert-node tree="event_paramater [59757,59774]" parent="event_definition [59645,59776]" at="11"/>
  <insert-node tree="): ) [59774,59775]" parent="event_definition [59645,59776]" at="12"/>
  <insert-node tree="event: event [59781,59786]" parent="event_definition [59781,59894]" at="0"/>
  <insert-node tree="identifier: CouponPurchase [59787,59801]" parent="event_definition [59781,59894]" at="1"/>
  <insert-node tree="(: ( [59801,59802]" parent="event_definition [59781,59894]" at="2"/>
  <move-tree tree="event_paramater [24297,24320]" parent="event_definition [59781,59894]" at="3"/>
  <insert-node tree=",: , [59825,59826]" parent="event_definition [59781,59894]" at="4"/>
  <insert-tree tree="event_paramater [59827,59848]" parent="event_definition [59781,59894]" at="5"/>
  <insert-node tree=",: , [59848,59849]" parent="event_definition [59781,59894]" at="6"/>
  <insert-tree tree="event_paramater [59850,59870]" parent="event_definition [59781,59894]" at="7"/>
  <insert-node tree=",: , [59870,59871]" parent="event_definition [59781,59894]" at="8"/>
  <insert-node tree="event_paramater [59872,59892]" parent="event_definition [59781,59894]" at="9"/>
  <insert-node tree="): ) [59892,59893]" parent="event_definition [59781,59894]" at="10"/>
  <update-node tree="identifier: MinterAdded [24235,24246]" label="CouponRedemption"/>
  <insert-node tree=",: , [59945,59946]" parent="event_definition [59899,59992]" at="4"/>
  <insert-tree tree="event_paramater [59947,59968]" parent="event_definition [59899,59992]" at="5"/>
  <insert-node tree=",: , [59968,59969]" parent="event_definition [59899,59992]" at="6"/>
  <insert-tree tree="event_paramater [59970,59990]" parent="event_definition [59899,59992]" at="7"/>
  <update-node tree="identifier: OwnershipTransferred [25550,25570]" label="CouponTransfer"/>
  <insert-node tree=",: , [60150,60151]" parent="event_definition [60089,60190]" at="6"/>
  <insert-tree tree="event_paramater [60152,60173]" parent="event_definition [60089,60190]" at="7"/>
  <insert-node tree=",: , [60173,60174]" parent="event_definition [60089,60190]" at="8"/>
  <move-tree tree="event_paramater [88300,88313]" parent="event_definition [60089,60190]" at="9"/>
  <update-node tree="identifier: PairCreated [61506,61517]" label="CouponApproval"/>
  <move-tree tree="event_paramater [88525,88538]" parent="event_definition [60195,60279]" at="7"/>
  <update-node tree="identifier: unfreeze [85111,85119]" label="step"/>
  <insert-node tree="function: function [60698,60706]" parent="function_definition [60698,61376]" at="0"/>
  <insert-node tree="identifier: expireCouponsForEpoch [60707,60728]" parent="function_definition [60698,61376]" at="1"/>
  <insert-node tree="(: ( [60728,60729]" parent="function_definition [60698,61376]" at="2"/>
  <insert-tree tree="parameter [60729,60742]" parent="function_definition [60698,61376]" at="3"/>
  <insert-node tree="): ) [60742,60743]" parent="function_definition [60698,61376]" at="4"/>
  <move-tree tree="visibility [36272,36279]" parent="function_definition [60698,61376]" at="5"/>
  <insert-node tree="function_body [60752,61376]" parent="function_definition [60698,61376]" at="6"/>
  <insert-node tree="function: function [61382,61390]" parent="function_definition [61382,61542]" at="0"/>
  <insert-node tree="identifier: couponPremium [61391,61404]" parent="function_definition [61382,61542]" at="1"/>
  <insert-node tree="(: ( [61404,61405]" parent="function_definition [61382,61542]" at="2"/>
  <move-tree tree="parameter [34090,34104]" parent="function_definition [61382,61542]" at="3"/>
  <insert-node tree="): ) [61419,61420]" parent="function_definition [61382,61542]" at="4"/>
  <move-tree tree="visibility [28110,28116]" parent="function_definition [61382,61542]" at="5"/>
  <move-tree tree="state_mutability [28117,28121]" parent="function_definition [61382,61542]" at="6"/>
  <move-tree tree="return_type_definition [28122,28139]" parent="function_definition [61382,61542]" at="7"/>
  <insert-node tree="function_body [61451,61542]" parent="function_definition [61382,61542]" at="8"/>
  <insert-node tree="function: function [61548,61556]" parent="function_definition [61548,62495]" at="0"/>
  <insert-node tree="identifier: couponRedemptionPenalty [61557,61580]" parent="function_definition [61548,62495]" at="1"/>
  <insert-node tree="(: ( [61580,61581]" parent="function_definition [61548,62495]" at="2"/>
  <insert-tree tree="parameter [61581,61600]" parent="function_definition [61548,62495]" at="3"/>
  <insert-node tree=",: , [61600,61601]" parent="function_definition [61548,62495]" at="4"/>
  <move-tree tree="parameter [58229,58245]" parent="function_definition [61548,62495]" at="5"/>
  <insert-node tree="): ) [61622,61623]" parent="function_definition [61548,62495]" at="6"/>
  <move-tree tree="visibility [81117,81123]" parent="function_definition [61548,62495]" at="7"/>
  <move-tree tree="state_mutability [81124,81128]" parent="function_definition [61548,62495]" at="8"/>
  <move-tree tree="return_type_definition [81129,81146]" parent="function_definition [61548,62495]" at="9"/>
  <insert-node tree="function_body [61654,62495]" parent="function_definition [61548,62495]" at="10"/>
  <insert-node tree="function: function [62501,62509]" parent="function_definition [62501,63380]" at="0"/>
  <insert-node tree="identifier: purchaseCoupons [62510,62525]" parent="function_definition [62501,63380]" at="1"/>
  <insert-node tree="(: ( [62525,62526]" parent="function_definition [62501,63380]" at="2"/>
  <move-tree tree="parameter [86092,86112]" parent="function_definition [62501,63380]" at="3"/>
  <insert-node tree="): ) [62546,62547]" parent="function_definition [62501,63380]" at="4"/>
  <move-tree tree="visibility [58307,58315]" parent="function_definition [62501,63380]" at="5"/>
  <move-tree tree="return_type_definition [27970,27987]" parent="function_definition [62501,63380]" at="6"/>
  <insert-node tree="function_body [62575,63380]" parent="function_definition [62501,63380]" at="7"/>
  <insert-node tree="function: function [63386,63394]" parent="function_definition [63386,64041]" at="0"/>
  <insert-node tree="identifier: redeemCoupons [63395,63408]" parent="function_definition [63386,64041]" at="1"/>
  <insert-node tree="(: ( [63408,63409]" parent="function_definition [63386,64041]" at="2"/>
  <insert-tree tree="parameter [63409,63428]" parent="function_definition [63386,64041]" at="3"/>
  <insert-node tree=",: , [63428,63429]" parent="function_definition [63386,64041]" at="4"/>
  <insert-tree tree="parameter [63430,63450]" parent="function_definition [63386,64041]" at="5"/>
  <insert-node tree="): ) [63450,63451]" parent="function_definition [63386,64041]" at="6"/>
  <move-tree tree="visibility [28877,28885]" parent="function_definition [63386,64041]" at="7"/>
  <insert-node tree="function_body [63461,64041]" parent="function_definition [63386,64041]" at="8"/>
  <insert-node tree="function: function [64047,64055]" parent="function_definition [64047,64853]" at="0"/>
  <insert-node tree="identifier: redeemCoupons [64056,64069]" parent="function_definition [64047,64853]" at="1"/>
  <insert-node tree="(: ( [64069,64070]" parent="function_definition [64047,64853]" at="2"/>
  <insert-tree tree="parameter [64070,64089]" parent="function_definition [64047,64853]" at="3"/>
  <insert-node tree=",: , [64089,64090]" parent="function_definition [64047,64853]" at="4"/>
  <insert-tree tree="parameter [64091,64111]" parent="function_definition [64047,64853]" at="5"/>
  <insert-node tree=",: , [64111,64112]" parent="function_definition [64047,64853]" at="6"/>
  <move-tree tree="parameter [49341,49356]" parent="function_definition [64047,64853]" at="7"/>
  <insert-node tree="): ) [64130,64131]" parent="function_definition [64047,64853]" at="8"/>
  <move-tree tree="visibility [91967,91975]" parent="function_definition [64047,64853]" at="9"/>
  <insert-node tree="function_body [64141,64853]" parent="function_definition [64047,64853]" at="10"/>
  <update-node tree="identifier: _approve [21865,21873]" label="approveCoupons"/>
  <move-tree tree="visibility [76328,76336]" parent="function_definition [64859,65139]" at="9"/>
  <update-node tree="identifier: _transfer [19743,19752]" label="transferCoupons"/>
  <insert-tree tree="parameter [65205,65218]" parent="function_definition [65145,65861]" at="7"/>
  <insert-node tree=",: , [65218,65219]" parent="function_definition [65145,65861]" at="8"/>
  <move-tree tree="visibility [92078,92086]" parent="function_definition [65145,65861]" at="11"/>
  <update-node tree="identifier: IOracle [72725,72732]" label="Comptroller"/>
  <insert-node tree="event: event [66650,66655]" parent="event_definition [66650,66790]" at="0"/>
  <insert-node tree="identifier: SupplyIncrease [66656,66670]" parent="event_definition [66650,66790]" at="1"/>
  <insert-node tree="(: ( [66670,66671]" parent="event_definition [66650,66790]" at="2"/>
  <insert-node tree="event_paramater [66671,66692]" parent="event_definition [66650,66790]" at="3"/>
  <insert-node tree=",: , [66692,66693]" parent="event_definition [66650,66790]" at="4"/>
  <insert-node tree="event_paramater [66694,66713]" parent="event_definition [66650,66790]" at="5"/>
  <insert-node tree=",: , [66713,66714]" parent="event_definition [66650,66790]" at="6"/>
  <insert-node tree="event_paramater [66715,66728]" parent="event_definition [66650,66790]" at="7"/>
  <insert-node tree=",: , [66728,66729]" parent="event_definition [66650,66790]" at="8"/>
  <insert-tree tree="event_paramater [66730,66751]" parent="event_definition [66650,66790]" at="9"/>
  <insert-node tree=",: , [66751,66752]" parent="event_definition [66650,66790]" at="10"/>
  <insert-tree tree="event_paramater [66753,66769]" parent="event_definition [66650,66790]" at="11"/>
  <insert-node tree=",: , [66769,66770]" parent="event_definition [66650,66790]" at="12"/>
  <insert-tree tree="event_paramater [66771,66788]" parent="event_definition [66650,66790]" at="13"/>
  <insert-node tree="): ) [66788,66789]" parent="event_definition [66650,66790]" at="14"/>
  <insert-node tree="event: event [66795,66800]" parent="event_definition [66795,66892]" at="0"/>
  <insert-node tree="identifier: SupplyDecrease [66801,66815]" parent="event_definition [66795,66892]" at="1"/>
  <insert-node tree="(: ( [66815,66816]" parent="event_definition [66795,66892]" at="2"/>
  <insert-node tree="event_paramater [66816,66837]" parent="event_definition [66795,66892]" at="3"/>
  <insert-node tree=",: , [66837,66838]" parent="event_definition [66795,66892]" at="4"/>
  <insert-node tree="event_paramater [66839,66858]" parent="event_definition [66795,66892]" at="5"/>
  <insert-node tree=",: , [66858,66859]" parent="event_definition [66795,66892]" at="6"/>
  <insert-node tree="event_paramater [66860,66873]" parent="event_definition [66795,66892]" at="7"/>
  <insert-node tree=",: , [66873,66874]" parent="event_definition [66795,66892]" at="8"/>
  <insert-tree tree="event_paramater [66875,66890]" parent="event_definition [66795,66892]" at="9"/>
  <insert-node tree="): ) [66890,66891]" parent="event_definition [66795,66892]" at="10"/>
  <insert-node tree="event: event [66897,66902]" parent="event_definition [66897,66961]" at="0"/>
  <insert-node tree="identifier: SupplyNeutral [66903,66916]" parent="event_definition [66897,66961]" at="1"/>
  <insert-node tree="(: ( [66916,66917]" parent="event_definition [66897,66961]" at="2"/>
  <insert-tree tree="event_paramater [66917,66938]" parent="event_definition [66897,66961]" at="3"/>
  <insert-node tree=",: , [66938,66939]" parent="event_definition [66897,66961]" at="4"/>
  <insert-node tree="event_paramater [66940,66959]" parent="event_definition [66897,66961]" at="5"/>
  <insert-node tree="): ) [66959,66960]" parent="event_definition [66897,66961]" at="6"/>
  <insert-node tree="function: function [66967,66975]" parent="function_definition [66967,67475]" at="0"/>
  <insert-node tree="identifier: step [66976,66980]" parent="function_definition [66967,67475]" at="1"/>
  <insert-node tree="(: ( [66980,66981]" parent="function_definition [66967,67475]" at="2"/>
  <insert-node tree="): ) [66981,66982]" parent="function_definition [66967,67475]" at="3"/>
  <move-tree tree="visibility [27659,27667]" parent="function_definition [66967,67475]" at="4"/>
  <insert-node tree="function_body [66992,67475]" parent="function_definition [66967,67475]" at="5"/>
  <insert-node tree="function: function [67481,67489]" parent="function_definition [67481,67807]" at="0"/>
  <insert-node tree="identifier: shrinkSupply [67490,67502]" parent="function_definition [67481,67807]" at="1"/>
  <insert-node tree="(: ( [67502,67503]" parent="function_definition [67481,67807]" at="2"/>
  <move-tree tree="parameter [34791,34825]" parent="function_definition [67481,67807]" at="3"/>
  <insert-node tree="): ) [67528,67529]" parent="function_definition [67481,67807]" at="4"/>
  <move-tree tree="visibility [57844,57851]" parent="function_definition [67481,67807]" at="5"/>
  <insert-node tree="function_body [67538,67807]" parent="function_definition [67481,67807]" at="6"/>
  <update-node tree="identifier: updatePrice [75239,75250]" label="growSupply"/>
  <move-tree tree="parameter [34863,34905]" parent="function_definition [67813,68256]" at="3"/>
  <move-tree tree="visibility [36246,36253]" parent="function_definition [67813,68256]" at="5"/>
  <insert-node tree="function: function [68262,68270]" parent="function_definition [68262,68519]" at="0"/>
  <insert-node tree="identifier: limit [68271,68276]" parent="function_definition [68262,68519]" at="1"/>
  <insert-node tree="(: ( [68276,68277]" parent="function_definition [68262,68519]" at="2"/>
  <move-tree tree="parameter [34907,34949]" parent="function_definition [68262,68519]" at="3"/>
  <insert-node tree="): ) [68302,68303]" parent="function_definition [68262,68519]" at="4"/>
  <move-tree tree="visibility [75859,75866]" parent="function_definition [68262,68519]" at="5"/>
  <move-tree tree="state_mutability [34777,34781]" parent="function_definition [68262,68519]" at="6"/>
  <insert-tree tree="return_type_definition [68317,68346]" parent="function_definition [68262,68519]" at="7"/>
  <insert-node tree="function_body [68347,68519]" parent="function_definition [68262,68519]" at="8"/>
  <update-node tree="identifier: capture [73954,73961]" label="oracleCapture"/>
  <move-tree tree="visibility [75253,75260]" parent="function_definition [68525,68866]" at="4"/>
  <move-tree tree="return_type_definition [75261,75290]" parent="function_definition [68525,68866]" at="5"/>
  <update-node tree="identifier: PoolSetters [87829,87840]" label="Setters"/>
  <update-node tree="identifier: Unbond [88397,88403]" label="Bond"/>
  <insert-node tree="event_paramater [71348,71371]" parent="event_definition [71282,71373]" at="9"/>
  <update-node tree="identifier: Bond [88326,88330]" label="Unbond"/>
  <insert-node tree=",: , [71444,71445]" parent="event_definition [71378,71471]" at="8"/>
  <insert-node tree="event_paramater [71446,71469]" parent="event_definition [71378,71471]" at="9"/>
  <insert-node tree="function: function [71477,71485]" parent="function_definition [71477,71746]" at="0"/>
  <insert-node tree="identifier: step [71486,71490]" parent="function_definition [71477,71746]" at="1"/>
  <insert-node tree="(: ( [71490,71491]" parent="function_definition [71477,71746]" at="2"/>
  <insert-node tree="): ) [71491,71492]" parent="function_definition [71477,71746]" at="3"/>
  <move-tree tree="visibility [21137,21145]" parent="function_definition [71477,71746]" at="4"/>
  <insert-node tree="function_body [71502,71746]" parent="function_definition [71477,71746]" at="5"/>
  <update-node tree="identifier: totalRewarded [80282,80295]" label="deposit"/>
  <move-tree tree="parameter [58206,58219]" parent="function_definition [71752,72219]" at="3"/>
  <move-tree tree="visibility [76233,76241]" parent="function_definition [71752,72219]" at="5"/>
  <move-tree tree="modifier_invocation [89179,89201]" parent="function_definition [72225,72487]" at="6"/>
  <insert-tree tree="modifier_invocation [73054,73083]" parent="function_definition [73014,73489]" at="6"/>
  <insert-node tree="function: function [73495,73503]" parent="function_definition [73495,73960]" at="0"/>
  <insert-node tree="identifier: unbondUnderlying [73504,73520]" parent="function_definition [73495,73960]" at="1"/>
  <insert-node tree="(: ( [73520,73521]" parent="function_definition [73495,73960]" at="2"/>
  <move-tree tree="parameter [88598,88611]" parent="function_definition [73495,73960]" at="3"/>
  <insert-node tree="): ) [73534,73535]" parent="function_definition [73495,73960]" at="4"/>
  <move-tree tree="visibility [88613,88621]" parent="function_definition [73495,73960]" at="5"/>
  <move-tree tree="modifier_invocation [88622,88651]" parent="function_definition [73495,73960]" at="6"/>
  <insert-node tree="function_body [73575,73960]" parent="function_definition [73495,73960]" at="7"/>
  <insert-node tree="event: event [78638,78643]" parent="event_definition [78638,78744]" at="0"/>
  <insert-node tree="identifier: Proposal [78644,78652]" parent="event_definition [78638,78744]" at="1"/>
  <insert-node tree="(: ( [78652,78653]" parent="event_definition [78638,78744]" at="2"/>
  <insert-node tree="event_paramater [78653,78678]" parent="event_definition [78638,78744]" at="3"/>
  <insert-node tree=",: , [78678,78679]" parent="event_definition [78638,78744]" at="4"/>
  <insert-tree tree="event_paramater [78680,78703]" parent="event_definition [78638,78744]" at="5"/>
  <insert-node tree=",: , [78703,78704]" parent="event_definition [78638,78744]" at="6"/>
  <insert-node tree="event_paramater [78705,78726]" parent="event_definition [78638,78744]" at="7"/>
  <insert-node tree=",: , [78726,78727]" parent="event_definition [78638,78744]" at="8"/>
  <insert-node tree="event_paramater [78728,78742]" parent="event_definition [78638,78744]" at="9"/>
  <insert-node tree="): ) [78742,78743]" parent="event_definition [78638,78744]" at="10"/>
  <insert-node tree="event: event [78749,78754]" parent="event_definition [78749,78849]" at="0"/>
  <insert-node tree="identifier: Vote [78755,78759]" parent="event_definition [78749,78849]" at="1"/>
  <insert-node tree="(: ( [78759,78760]" parent="event_definition [78749,78849]" at="2"/>
  <insert-tree tree="event_paramater [78760,78783]" parent="event_definition [78749,78849]" at="3"/>
  <insert-node tree=",: , [78783,78784]" parent="event_definition [78749,78849]" at="4"/>
  <move-tree tree="event_paramater [61566,61578]" parent="event_definition [78749,78849]" at="5"/>
  <insert-node tree=",: , [78810,78811]" parent="event_definition [78749,78849]" at="6"/>
  <insert-tree tree="event_paramater [78812,78831]" parent="event_definition [78749,78849]" at="7"/>
  <insert-node tree=",: , [78831,78832]" parent="event_definition [78749,78849]" at="8"/>
  <move-tree tree="event_paramater [88557,88573]" parent="event_definition [78749,78849]" at="9"/>
  <insert-node tree="): ) [78847,78848]" parent="event_definition [78749,78849]" at="10"/>
  <update-node tree="identifier: Provide [88492,88499]" label="Commit"/>
  <insert-node tree="event_paramater [78892,78917]" parent="event_definition [78854,78919]" at="5"/>
  <insert-node tree="function: function [78925,78933]" parent="function_definition [78925,80499]" at="0"/>
  <insert-node tree="identifier: vote [78934,78938]" parent="function_definition [78925,80499]" at="1"/>
  <insert-node tree="(: ( [78938,78939]" parent="function_definition [78925,80499]" at="2"/>
  <move-tree tree="parameter [86741,86755]" parent="function_definition [78925,80499]" at="3"/>
  <insert-node tree=",: , [78956,78957]" parent="function_definition [78925,80499]" at="4"/>
  <insert-tree tree="parameter [78958,78977]" parent="function_definition [78925,80499]" at="5"/>
  <insert-node tree="): ) [78977,78978]" parent="function_definition [78925,80499]" at="6"/>
  <move-tree tree="visibility [28507,28515]" parent="function_definition [78925,80499]" at="7"/>
  <move-tree tree="modifier_invocation [88901,88923]" parent="function_definition [78925,80499]" at="8"/>
  <insert-node tree="function_body [79019,80499]" parent="function_definition [78925,80499]" at="9"/>
  <insert-node tree="function: function [80505,80513]" parent="function_definition [80505,81278]" at="0"/>
  <insert-node tree="identifier: commit [80514,80520]" parent="function_definition [80505,81278]" at="1"/>
  <insert-node tree="(: ( [80520,80521]" parent="function_definition [80505,81278]" at="2"/>
  <move-tree tree="parameter [58158,58171]" parent="function_definition [80505,81278]" at="3"/>
  <insert-node tree="): ) [80538,80539]" parent="function_definition [80505,81278]" at="4"/>
  <move-tree tree="visibility [89170,89178]" parent="function_definition [80505,81278]" at="5"/>
  <insert-node tree="function_body [80549,81278]" parent="function_definition [80505,81278]" at="6"/>
  <insert-node tree="function: function [81284,81292]" parent="function_definition [81284,82039]" at="0"/>
  <insert-node tree="identifier: emergencyCommit [81293,81308]" parent="function_definition [81284,82039]" at="1"/>
  <insert-node tree="(: ( [81308,81309]" parent="function_definition [81284,82039]" at="2"/>
  <move-tree tree="parameter [86757,86771]" parent="function_definition [81284,82039]" at="3"/>
  <insert-node tree="): ) [81326,81327]" parent="function_definition [81284,82039]" at="4"/>
  <move-tree tree="visibility [90976,90984]" parent="function_definition [81284,82039]" at="5"/>
  <insert-node tree="function_body [81337,82039]" parent="function_definition [81284,82039]" at="6"/>
  <insert-node tree="function: function [82045,82053]" parent="function_definition [82045,82337]" at="0"/>
  <insert-node tree="identifier: canPropose [82054,82064]" parent="function_definition [82045,82337]" at="1"/>
  <insert-node tree="(: ( [82064,82065]" parent="function_definition [82045,82337]" at="2"/>
  <move-tree tree="parameter [80558,80573]" parent="function_definition [82045,82337]" at="3"/>
  <insert-node tree="): ) [82080,82081]" parent="function_definition [82045,82337]" at="4"/>
  <move-tree tree="visibility [74221,74228]" parent="function_definition [82045,82337]" at="5"/>
  <move-tree tree="state_mutability [80438,80442]" parent="function_definition [82045,82337]" at="6"/>
  <move-tree tree="return_type_definition [80443,80457]" parent="function_definition [82045,82337]" at="7"/>
  <insert-node tree="function_body [82110,82337]" parent="function_definition [82045,82337]" at="8"/>
  <insert-node tree="event: event [83125,83130]" parent="event_definition [83125,83196]" at="0"/>
  <insert-node tree="identifier: Advance [83131,83138]" parent="event_definition [83125,83196]" at="1"/>
  <insert-node tree="(: ( [83138,83139]" parent="event_definition [83125,83196]" at="2"/>
  <insert-node tree="event_paramater [83139,83160]" parent="event_definition [83125,83196]" at="3"/>
  <insert-node tree=",: , [83160,83161]" parent="event_definition [83125,83196]" at="4"/>
  <insert-node tree="event_paramater [83162,83175]" parent="event_definition [83125,83196]" at="5"/>
  <insert-node tree=",: , [83175,83176]" parent="event_definition [83125,83196]" at="6"/>
  <move-tree tree="event_paramater [88459,88479]" parent="event_definition [83125,83196]" at="7"/>
  <insert-node tree="): ) [83194,83195]" parent="event_definition [83125,83196]" at="8"/>
  <update-node tree="identifier: Claim [88269,88274]" label="Incentivization"/>
  <move-tree tree="event_paramater [88540,88555]" parent="event_definition [83201,83264]" at="5"/>
  <update-node tree="identifier: deposit [88590,88597]" label="initialize"/>
  <move-tree tree="modifier_invocation [116732,116743]" parent="function_definition [83270,83457]" at="4"/>
  <move-tree tree="visibility [116744,116750]" parent="function_definition [83270,83457]" at="5"/>
  <insert-node tree="function: function [83463,83471]" parent="function_definition [83463,83647]" at="0"/>
  <insert-node tree="identifier: advance [83472,83479]" parent="function_definition [83463,83647]" at="1"/>
  <insert-node tree="(: ( [83479,83480]" parent="function_definition [83463,83647]" at="2"/>
  <insert-node tree="): ) [83480,83481]" parent="function_definition [83463,83647]" at="3"/>
  <move-tree tree="visibility [77258,77266]" parent="function_definition [83463,83647]" at="4"/>
  <insert-tree tree="modifier_invocation [83491,83503]" parent="function_definition [83463,83647]" at="5"/>
  <insert-node tree="function_body [83504,83647]" parent="function_definition [83463,83647]" at="6"/>
  <insert-node tree="modifier: modifier [83653,83661]" parent="modifier_definition [83653,83894]" at="0"/>
  <insert-node tree="identifier: incentivized [83662,83674]" parent="modifier_definition [83653,83894]" at="1"/>
  <insert-node tree="function_body [83675,83894]" parent="modifier_definition [83653,83894]" at="2"/>
  <move-tree tree="type_name [15867,15874]" parent="parameter [16761,16780]" at="0"/>
  <insert-node tree="identifier: totalSupply [16769,16780]" parent="parameter [16761,16780]" at="1"/>
  <move-tree tree="type_name [27847,27854]" parent="parameter [16790,16807]" at="0"/>
  <insert-node tree="identifier: totalDebt [16798,16807]" parent="parameter [16790,16807]" at="1"/>
  <insert-node tree="{: { [16870,16871]" parent="function_body [16870,16966]" at="0"/>
  <insert-node tree="return_statement [16880,16960]" parent="function_body [16870,16966]" at="1"/>
  <insert-node tree="}: } [16965,16966]" parent="function_body [16870,16966]" at="2"/>
  <update-node tree="identifier: subtractedValue [19054,19069]" label="totalSupply"/>
  <update-node tree="identifier: addedValue [18360,18370]" label="totalDebt"/>
  <insert-node tree="{: { [17127,17128]" parent="function_body [17127,18249]" at="0"/>
  <move-tree tree="variable_declaration_statement [31869,32054]" parent="function_body [17127,18249]" at="1"/>
  <insert-node tree="variable_declaration_statement [17216,17286]" parent="function_body [17127,18249]" at="2"/>
  <insert-node tree="variable_declaration_statement [17296,17345]" parent="function_body [17127,18249]" at="3"/>
  <insert-node tree="variable_declaration_statement [17354,17399]" parent="function_body [17127,18249]" at="4"/>
  <insert-node tree="variable_declaration_statement [17408,17487]" parent="function_body [17127,18249]" at="5"/>
  <insert-node tree="if_statement [17497,18191]" parent="function_body [17127,18249]" at="6"/>
  <insert-tree tree="return_statement [18201,18243]" parent="function_body [17127,18249]" at="7"/>
  <insert-node tree="}: } [18248,18249]" parent="function_body [17127,18249]" at="8"/>
  <insert-node tree="identifier: debtRatio [18314,18323]" parent="parameter [18294,18323]" at="2"/>
  <insert-node tree="{: { [18368,18369]" parent="function_body [18368,18516]" at="0"/>
  <insert-node tree="return_statement [18378,18510]" parent="function_body [18368,18516]" at="1"/>
  <insert-node tree="}: } [18515,18516]" parent="function_body [18368,18516]" at="2"/>
  <insert-node tree="identifier: lower [18598,18603]" parent="parameter [18578,18603]" at="2"/>
  <update-node tree="identifier: internalAmount [34847,34861]" label="upper"/>
  <insert-node tree="{: { [18688,18689]" parent="function_body [18688,18932]" at="0"/>
  <insert-tree tree="if_statement [18698,18767]" parent="function_body [18688,18932]" at="1"/>
  <insert-node tree="return_statement [18777,18926]" parent="function_body [18688,18932]" at="2"/>
  <insert-node tree="}: } [18931,18932]" parent="function_body [18688,18932]" at="3"/>
  <insert-node tree="{: { [54028,54029]" parent="function_body [54028,54341]" at="0"/>
  <insert-node tree="variable_declaration_statement [54038,54094]" parent="function_body [54028,54341]" at="1"/>
  <move-tree tree="expression_statement [60982,61005]" parent="function_body [54028,54341]" at="2"/>
  <insert-node tree="variable_declaration_statement [54143,54218]" parent="function_body [54028,54341]" at="3"/>
  <insert-node tree="if_statement [54227,54310]" parent="function_body [54028,54341]" at="4"/>
  <insert-tree tree="expression_statement [54320,54335]" parent="function_body [54028,54341]" at="5"/>
  <insert-node tree="}: } [54340,54341]" parent="function_body [54028,54341]" at="6"/>
  <insert-node tree="{: { [54450,54451]" parent="function_body [54450,54843]" at="0"/>
  <insert-node tree="variable_declaration_statement [54460,54526]" parent="function_body [54450,54843]" at="1"/>
  <move-tree tree="expression_statement [58005,58121]" parent="function_body [54450,54843]" at="2"/>
  <insert-tree tree="expression_statement [54598,54679]" parent="function_body [54450,54843]" at="3"/>
  <insert-tree tree="expression_statement [54688,54721]" parent="function_body [54450,54843]" at="4"/>
  <move-tree tree="expression_statement [58935,59028]" parent="function_body [54450,54843]" at="5"/>
  <move-tree tree="expression_statement [90846,90861]" parent="function_body [54450,54843]" at="6"/>
  <insert-node tree="}: } [54842,54843]" parent="function_body [54450,54843]" at="7"/>
  <move-tree tree="expression_statement [58703,58809]" parent="function_body [54916,55080]" at="2"/>
  <insert-tree tree="expression_statement [55059,55074]" parent="function_body [54916,55080]" at="3"/>
  <insert-node tree="{: { [55135,55136]" parent="function_body [55135,55286]" at="0"/>
  <insert-node tree="expression_statement [55145,55167]" parent="function_body [55135,55286]" at="1"/>
  <move-tree tree="expression_statement [32064,32158]" parent="function_body [55135,55286]" at="2"/>
  <move-tree tree="expression_statement [90001,90016]" parent="function_body [55135,55286]" at="3"/>
  <insert-node tree="}: } [55285,55286]" parent="function_body [55135,55286]" at="4"/>
  <insert-node tree="{: { [55339,55340]" parent="function_body [55339,55455]" at="0"/>
  <insert-node tree="expression_statement [55349,55376]" parent="function_body [55339,55455]" at="1"/>
  <insert-tree tree="expression_statement [55385,55424]" parent="function_body [55339,55455]" at="2"/>
  <move-tree tree="expression_statement [89070,89085]" parent="function_body [55339,55455]" at="3"/>
  <insert-node tree="}: } [55454,55455]" parent="function_body [55339,55455]" at="4"/>
  <move-tree tree="expression_statement [88790,88805]" parent="function_body [55508,55608]" at="2"/>
  <move-tree tree="type_name [57952,57959]" parent="parameter [55638,55655]" at="0"/>
  <insert-node tree="identifier: newSupply [55646,55655]" parent="parameter [55638,55655]" at="1"/>
  <insert-node tree=",: , [55691,55692]" parent="return_type_definition [55666,55701]" at="5"/>
  <insert-tree tree="parameter [55693,55700]" parent="return_type_definition [55666,55701]" at="6"/>
  <update-node tree="identifier: amountToReflect [35379,35394]" label="targetDebtRatio"/>
  <insert-node tree="{: { [57969,57970]" parent="function_body [57969,58345]" at="0"/>
  <move-tree tree="expression_statement [91028,91141]" parent="function_body [57969,58345]" at="1"/>
  <insert-node tree="variable_declaration_statement [58100,58173]" parent="function_body [57969,58345]" at="2"/>
  <insert-node tree="variable_declaration_statement [58182,58251]" parent="function_body [57969,58345]" at="3"/>
  <insert-tree tree="expression_statement [58261,58284]" parent="function_body [57969,58345]" at="4"/>
  <insert-tree tree="expression_statement [58293,58314]" parent="function_body [57969,58345]" at="5"/>
  <move-tree tree="expression_statement [91822,91837]" parent="function_body [57969,58345]" at="6"/>
  <insert-node tree="}: } [58344,58345]" parent="function_body [57969,58345]" at="7"/>
  <insert-node tree="{: { [58394,58395]" parent="function_body [58394,58529]" at="0"/>
  <insert-node tree="if_statement [58404,58523]" parent="function_body [58394,58529]" at="1"/>
  <insert-node tree="}: } [58528,58529]" parent="function_body [58394,58529]" at="2"/>
  <insert-node tree="{: { [58579,58580]" parent="function_body [58579,58665]" at="0"/>
  <insert-node tree="if_statement [58589,58659]" parent="function_body [58579,58665]" at="1"/>
  <insert-node tree="}: } [58664,58665]" parent="function_body [58579,58665]" at="2"/>
  <insert-node tree="{: { [58721,58722]" parent="function_body [58721,58841]" at="0"/>
  <insert-node tree="expression_statement [58731,58768]" parent="function_body [58721,58841]" at="1"/>
  <insert-node tree="expression_statement [58777,58810]" parent="function_body [58721,58841]" at="2"/>
  <move-tree tree="expression_statement [89355,89370]" parent="function_body [58721,58841]" at="3"/>
  <insert-node tree="}: } [58840,58841]" parent="function_body [58721,58841]" at="4"/>
  <move-tree tree="type_name [15940,15947]" parent="event_paramater [59668,59689]" at="0"/>
  <insert-node tree="indexed: indexed [59676,59683]" parent="event_paramater [59668,59689]" at="1"/>
  <insert-node tree="identifier: epoch [59684,59689]" parent="event_paramater [59668,59689]" at="2"/>
  <move-tree tree="type_name [73144,73151]" parent="event_paramater [59757,59774]" at="0"/>
  <insert-node tree="identifier: newBonded [59765,59774]" parent="event_paramater [59757,59774]" at="1"/>
  <move-tree tree="type_name [73048,73055]" parent="event_paramater [59872,59892]" at="0"/>
  <insert-node tree="identifier: couponAmount [59880,59892]" parent="event_paramater [59872,59892]" at="1"/>
  <update-node tree="identifier: previousOwner [25587,25600]" label="from"/>
  <update-node tree="identifier: newOwner [25618,25626]" label="to"/>
  <update-node tree="identifier: token0 [61534,61540]" label="owner"/>
  <update-node tree="identifier: token1 [61558,61564]" label="spender"/>
  <insert-node tree="comment: // Expire prior coupons [60320,60343]" parent="function_body [60310,60692]" at="1"/>
  <insert-tree tree="for_statement [60352,60489]" parent="function_body [60310,60692]" at="2"/>
  <insert-node tree="comment: // Record expiry for current epoch's coupons [60499,60543]" parent="function_body [60310,60692]" at="3"/>
  <insert-node tree="variable_declaration_statement [60552,60623]" parent="function_body [60310,60692]" at="4"/>
  <insert-node tree="{: { [60752,60753]" parent="function_body [60752,61376]" at="0"/>
  <insert-tree tree="variable_declaration_statement [60762,60814]" parent="function_body [60752,61376]" at="1"/>
  <move-tree tree="variable_declaration_statement [91426,91484]" parent="function_body [60752,61376]" at="2"/>
  <insert-tree tree="expression_statement [60907,60942]" parent="function_body [60752,61376]" at="3"/>
  <insert-node tree="variable_declaration_statement [60952,60996]" parent="function_body [60752,61376]" at="4"/>
  <insert-tree tree="variable_declaration_statement [61005,61043]" parent="function_body [60752,61376]" at="5"/>
  <insert-tree tree="if_statement [61052,61277]" parent="function_body [60752,61376]" at="6"/>
  <insert-tree tree="emit_statement [61287,61370]" parent="function_body [60752,61376]" at="7"/>
  <insert-node tree="}: } [61375,61376]" parent="function_body [60752,61376]" at="8"/>
  <insert-node tree="{: { [61451,61452]" parent="function_body [61451,61542]" at="0"/>
  <insert-node tree="return_statement [61461,61536]" parent="function_body [61451,61542]" at="1"/>
  <insert-node tree="}: } [61541,61542]" parent="function_body [61451,61542]" at="2"/>
  <update-node tree="identifier: deadline [58237,58245]" label="couponAmount"/>
  <insert-node tree="{: { [61654,61655]" parent="function_body [61654,62495]" at="0"/>
  <insert-node tree="variable_declaration_statement [61664,61699]" parent="function_body [61654,62495]" at="1"/>
  <insert-node tree="variable_declaration_statement [61708,61747]" parent="function_body [61654,62495]" at="2"/>
  <insert-node tree="variable_declaration_statement [61757,61893]" parent="function_body [61654,62495]" at="3"/>
  <move-tree tree="if_statement [81202,81257]" parent="function_body [61654,62495]" at="4"/>
  <insert-node tree="variable_declaration_statement [61983,62210]" parent="function_body [61654,62495]" at="5"/>
  <insert-node tree="variable_declaration_statement [62219,62399]" parent="function_body [61654,62495]" at="6"/>
  <insert-tree tree="return_statement [62409,62489]" parent="function_body [61654,62495]" at="7"/>
  <insert-node tree="}: } [62494,62495]" parent="function_body [61654,62495]" at="8"/>
  <insert-node tree="{: { [62575,62576]" parent="function_body [62575,63380]" at="0"/>
  <move-tree tree="variable_declaration_statement [90164,90218]" parent="function_body [62575,63380]" at="1"/>
  <move-tree tree="variable_declaration_statement [89511,89582]" parent="function_body [62575,63380]" at="2"/>
  <move-tree tree="variable_declaration_statement [90354,90439]" parent="function_body [62575,63380]" at="3"/>
  <move-tree tree="expression_statement [33608,33702]" parent="function_body [62575,63380]" at="4"/>
  <move-tree tree="expression_statement [34463,34557]" parent="function_body [62575,63380]" at="5"/>
  <insert-node tree="variable_declaration_statement [63038,63062]" parent="function_body [62575,63380]" at="6"/>
  <insert-node tree="variable_declaration_statement [63071,63197]" parent="function_body [62575,63380]" at="7"/>
  <move-tree tree="expression_statement [90657,90738]" parent="function_body [62575,63380]" at="8"/>
  <insert-tree tree="emit_statement [63275,63344]" parent="function_body [62575,63380]" at="9"/>
  <insert-tree tree="return_statement [63354,63374]" parent="function_body [62575,63380]" at="10"/>
  <insert-node tree="}: } [63379,63380]" parent="function_body [62575,63380]" at="11"/>
  <insert-node tree="{: { [63461,63462]" parent="function_body [63461,64041]" at="0"/>
  <insert-node tree="expression_statement [63471,63541]" parent="function_body [63461,64041]" at="1"/>
  <move-tree tree="expression_statement [19985,20077]" parent="function_body [63461,64041]" at="2"/>
  <insert-node tree="variable_declaration_statement [63672,63741]" parent="function_body [63461,64041]" at="3"/>
  <insert-node tree="variable_declaration_statement [63750,63799]" parent="function_body [63461,64041]" at="4"/>
  <move-tree tree="expression_statement [91740,91811]" parent="function_body [63461,64041]" at="5"/>
  <insert-tree tree="if_statement [63869,63964]" parent="function_body [63461,64041]" at="6"/>
  <insert-tree tree="emit_statement [63974,64035]" parent="function_body [63461,64041]" at="7"/>
  <insert-node tree="}: } [64040,64041]" parent="function_body [63461,64041]" at="8"/>
  <update-node tree="identifier: chainId [49349,49356]" label="minOutput"/>
  <insert-node tree="{: { [64141,64142]" parent="function_body [64141,64853]" at="0"/>
  <insert-node tree="expression_statement [64151,64221]" parent="function_body [64141,64853]" at="1"/>
  <move-tree tree="expression_statement [21941,22010]" parent="function_body [64141,64853]" at="2"/>
  <move-tree tree="variable_declaration_statement [66284,66291]" parent="function_body [64141,64853]" at="3"/>
  <insert-node tree="variable_declaration_statement [64430,64479]" parent="function_body [64141,64853]" at="4"/>
  <move-tree tree="expression_statement [58819,58925]" parent="function_body [64141,64853]" at="5"/>
  <move-tree tree="expression_statement [91684,91731]" parent="function_body [64141,64853]" at="6"/>
  <insert-tree tree="if_statement [64681,64776]" parent="function_body [64141,64853]" at="7"/>
  <insert-tree tree="emit_statement [64786,64847]" parent="function_body [64141,64853]" at="8"/>
  <insert-node tree="}: } [64852,64853]" parent="function_body [64141,64853]" at="9"/>
  <move-tree tree="expression_statement [21156,21224]" parent="function_body [65245,65861]" at="3"/>
  <insert-node tree="expression_statement [65530,65582]" parent="function_body [65245,65861]" at="4"/>
  <move-tree tree="if_statement [61189,61435]" parent="function_body [65245,65861]" at="5"/>
  <move-tree tree="type_name [78091,78098]" parent="event_paramater [66671,66692]" at="0"/>
  <insert-node tree="indexed: indexed [66679,66686]" parent="event_paramater [66671,66692]" at="1"/>
  <insert-node tree="identifier: epoch [66687,66692]" parent="event_paramater [66671,66692]" at="2"/>
  <move-tree tree="type_name [78142,78149]" parent="event_paramater [66694,66713]" at="0"/>
  <insert-node tree="identifier: epochPeriod [66702,66713]" parent="event_paramater [66694,66713]" at="1"/>
  <move-tree tree="type_name [78444,78451]" parent="event_paramater [66715,66728]" at="0"/>
  <insert-node tree="identifier: price [66723,66728]" parent="event_paramater [66715,66728]" at="1"/>
  <move-tree tree="type_name [78369,78376]" parent="event_paramater [66816,66837]" at="0"/>
  <insert-node tree="indexed: indexed [66824,66831]" parent="event_paramater [66816,66837]" at="1"/>
  <insert-node tree="identifier: epoch [66832,66837]" parent="event_paramater [66816,66837]" at="2"/>
  <move-tree tree="type_name [78115,78122]" parent="event_paramater [66839,66858]" at="0"/>
  <insert-node tree="identifier: epochPeriod [66847,66858]" parent="event_paramater [66839,66858]" at="1"/>
  <move-tree tree="type_name [78420,78427]" parent="event_paramater [66860,66873]" at="0"/>
  <insert-node tree="identifier: price [66868,66873]" parent="event_paramater [66860,66873]" at="1"/>
  <move-tree tree="type_name [78393,78400]" parent="event_paramater [66940,66959]" at="0"/>
  <insert-node tree="identifier: epochPeriod [66948,66959]" parent="event_paramater [66940,66959]" at="1"/>
  <insert-node tree="{: { [66992,66993]" parent="function_body [66992,67475]" at="0"/>
  <move-tree tree="variable_declaration_statement [74868,74910]" parent="function_body [66992,67475]" at="1"/>
  <insert-tree tree="expression_statement [67055,67075]" parent="function_body [66992,67475]" at="2"/>
  <insert-node tree="if_statement [67085,67214]" parent="function_body [66992,67475]" at="3"/>
  <insert-node tree="if_statement [67224,67407]" parent="function_body [66992,67475]" at="4"/>
  <insert-tree tree="emit_statement [67417,67469]" parent="function_body [66992,67475]" at="5"/>
  <insert-node tree="}: } [67474,67475]" parent="function_body [66992,67475]" at="6"/>
  <update-node tree="identifier: externalAmount [34811,34825]" label="price"/>
  <insert-node tree="{: { [67538,67539]" parent="function_body [67538,67807]" at="0"/>
  <move-tree tree="variable_declaration_statement [33413,33598]" parent="function_body [67538,67807]" at="1"/>
  <insert-node tree="variable_declaration_statement [67617,67669]" parent="function_body [67538,67807]" at="2"/>
  <insert-tree tree="expression_statement [67678,67700]" parent="function_body [67538,67807]" at="3"/>
  <insert-tree tree="emit_statement [67710,67785]" parent="function_body [67538,67807]" at="4"/>
  <insert-tree tree="return_statement [67794,67801]" parent="function_body [67538,67807]" at="5"/>
  <insert-node tree="}: } [67806,67807]" parent="function_body [67538,67807]" at="6"/>
  <update-node tree="identifier: externalAmountAfterTax [34883,34905]" label="price"/>
  <insert-node tree="variable_declaration_statement [67878,67978]" parent="function_body [67868,68256]" at="1"/>
  <insert-node tree="variable_declaration_statement [67987,68041]" parent="function_body [67868,68256]" at="2"/>
  <insert-tree tree="emit_statement [68148,68250]" parent="function_body [67868,68256]" at="4"/>
  <update-node tree="identifier: internalAmountAfterTax [34927,34949]" label="delta"/>
  <insert-node tree="{: { [68347,68348]" parent="function_body [68347,68519]" at="0"/>
  <insert-node tree="variable_declaration_statement [68357,68430]" parent="function_body [68347,68519]" at="1"/>
  <insert-tree tree="return_statement [68440,68512]" parent="function_body [68347,68519]" at="2"/>
  <insert-node tree="}: } [68518,68519]" parent="function_body [68347,68519]" at="3"/>
  <move-tree tree="variable_declaration_statement [75625,75722]" parent="function_body [68588,68866]" at="1"/>
  <insert-node tree="if_statement [68669,68771]" parent="function_body [68588,68866]" at="2"/>
  <move-tree tree="return_statement [75809,75822]" parent="function_body [68588,68866]" at="4"/>
  <move-tree tree="type_name [78191,78198]" parent="event_paramater [71348,71371]" at="0"/>
  <insert-node tree="identifier: valueUnderlying [71356,71371]" parent="event_paramater [71348,71371]" at="1"/>
  <move-tree tree="type_name [78166,78173]" parent="event_paramater [71446,71469]" at="0"/>
  <insert-node tree="identifier: valueUnderlying [71454,71469]" parent="event_paramater [71446,71469]" at="1"/>
  <insert-node tree="{: { [71502,71503]" parent="function_body [71502,71746]" at="0"/>
  <insert-node tree="expression_statement [71512,71623]" parent="function_body [71502,71746]" at="1"/>
  <insert-tree tree="if_statement [71633,71682]" parent="function_body [71502,71746]" at="2"/>
  <insert-tree tree="expression_statement [71692,71714]" parent="function_body [71502,71746]" at="3"/>
  <insert-tree tree="expression_statement [71723,71740]" parent="function_body [71502,71746]" at="4"/>
  <insert-node tree="}: } [71745,71746]" parent="function_body [71502,71746]" at="5"/>
  <insert-node tree="variable_declaration_statement [71803,71868]" parent="function_body [71793,72219]" at="1"/>
  <move-tree tree="expression_statement [88934,88970]" parent="function_body [71793,72219]" at="2"/>
  <insert-node tree="variable_declaration_statement [71942,72026]" parent="function_body [71793,72219]" at="3"/>
  <insert-node tree="expression_statement [72035,72102]" parent="function_body [71793,72219]" at="4"/>
  <move-tree tree="expression_statement [90594,90648]" parent="function_body [71793,72219]" at="5"/>
  <insert-tree tree="emit_statement [72173,72213]" parent="function_body [71793,72219]" at="6"/>
  <update-node tree="identifier: onlyFrozen [89179,89189]" label="onlyFrozenOrLocked"/>
  <move-tree tree="expression_statement [89212,89249]" parent="function_body [72298,72487]" at="1"/>
  <update-node tree="identifier: notPaused [89460,89469]" label="onlyFrozenOrFluid"/>
  <insert-node tree="(: ( [72548,72549]" parent="modifier_invocation [72531,72560]" at="1"/>
  <insert-tree tree="call_argument [72549,72559]" parent="modifier_invocation [72531,72560]" at="2"/>
  <insert-node tree="): ) [72559,72560]" parent="modifier_invocation [72531,72560]" at="3"/>
  <insert-node tree="expression_statement [72767,72807]" parent="function_body [72561,73008]" at="3"/>
  <insert-node tree="expression_statement [72817,72845]" parent="function_body [72561,73008]" at="4"/>
  <insert-node tree="emit_statement [72948,73002]" parent="function_body [72561,73008]" at="6"/>
  <move-tree tree="expression_statement [89258,89345]" parent="function_body [73084,73489]" at="4"/>
  <move-tree tree="expression_statement [89798,89842]" parent="function_body [73084,73489]" at="6"/>
  <insert-node tree="{: { [73575,73576]" parent="function_body [73575,73960]" at="0"/>
  <insert-tree tree="expression_statement [73585,73606]" parent="function_body [73575,73960]" at="1"/>
  <move-tree tree="variable_declaration_statement [91585,91674]" parent="function_body [73575,73960]" at="2"/>
  <move-tree tree="expression_statement [88736,88780]" parent="function_body [73575,73960]" at="3"/>
  <insert-node tree="expression_statement [73740,73806]" parent="function_body [73575,73960]" at="4"/>
  <move-tree tree="expression_statement [66699,66751]" parent="function_body [73575,73960]" at="5"/>
  <move-tree tree="emit_statement [90026,90071]" parent="function_body [73575,73960]" at="6"/>
  <insert-node tree="}: } [73959,73960]" parent="function_body [73575,73960]" at="7"/>
  <move-tree tree="type_name [25515,25522]" parent="event_paramater [78653,78678]" at="0"/>
  <insert-node tree="indexed: indexed [78661,78668]" parent="event_paramater [78653,78678]" at="1"/>
  <insert-node tree="identifier: candidate [78669,78678]" parent="event_paramater [78653,78678]" at="2"/>
  <move-tree tree="type_name [27734,27741]" parent="event_paramater [78705,78726]" at="0"/>
  <insert-node tree="indexed: indexed [78713,78720]" parent="event_paramater [78705,78726]" at="1"/>
  <insert-node tree="identifier: start [78721,78726]" parent="event_paramater [78705,78726]" at="2"/>
  <move-tree tree="type_name [73077,73084]" parent="event_paramater [78728,78742]" at="0"/>
  <insert-node tree="identifier: period [78736,78742]" parent="event_paramater [78728,78742]" at="1"/>
  <insert-node tree="indexed: indexed [78793,78800]" parent="event_paramater [78785,78810]" at="1"/>
  <update-node tree="identifier: pair [61574,61578]" label="candidate"/>
  <update-node tree="identifier: newUniv2 [88565,88573]" label="bonded"/>
  <move-tree tree="type_name [72950,72957]" parent="event_paramater [78892,78917]" at="0"/>
  <insert-node tree="indexed: indexed [78900,78907]" parent="event_paramater [78892,78917]" at="1"/>
  <insert-node tree="identifier: candidate [78908,78917]" parent="event_paramater [78892,78917]" at="2"/>
  <update-node tree="identifier: tokenA [86749,86755]" label="candidate"/>
  <update-node tree="identifier: onlyFrozen [88901,88911]" label="onlyFrozenOrLocked"/>
  <insert-node tree="{: { [79019,79020]" parent="function_body [79019,80499]" at="0"/>
  <move-tree tree="expression_statement [92393,92520]" parent="function_body [79019,80499]" at="1"/>
  <insert-node tree="if_statement [79150,79505]" parent="function_body [79019,80499]" at="2"/>
  <move-tree tree="expression_statement [92598,92784]" parent="function_body [79019,80499]" at="3"/>
  <move-tree tree="variable_declaration_statement [74919,74957]" parent="function_body [79019,80499]" at="4"/>
  <insert-tree tree="variable_declaration_statement [79704,79770]" parent="function_body [79019,80499]" at="5"/>
  <insert-node tree="if_statement [79779,79836]" parent="function_body [79019,80499]" at="6"/>
  <insert-node tree="if_statement [79846,79982]" parent="function_body [79019,80499]" at="7"/>
  <insert-node tree="if_statement [79991,80130]" parent="function_body [79019,80499]" at="8"/>
  <insert-tree tree="if_statement [80139,80236]" parent="function_body [79019,80499]" at="9"/>
  <insert-tree tree="if_statement [80245,80344]" parent="function_body [79019,80499]" at="10"/>
  <move-tree tree="expression_statement [86553,86607]" parent="function_body [79019,80499]" at="11"/>
  <move-tree tree="expression_statement [90747,90836]" parent="function_body [79019,80499]" at="12"/>
  <move-tree tree="emit_statement [91847,91898]" parent="function_body [79019,80499]" at="13"/>
  <insert-node tree="}: } [80498,80499]" parent="function_body [79019,80499]" at="14"/>
  <update-node tree="identifier: owner [58166,58171]" label="candidate"/>
  <insert-node tree="{: { [80549,80550]" parent="function_body [80549,81278]" at="0"/>
  <move-tree tree="expression_statement [76427,76523]" parent="function_body [80549,81278]" at="1"/>
  <insert-node tree="variable_declaration_statement [80675,80748]" parent="function_body [80549,81278]" at="2"/>
  <move-tree tree="expression_statement [91278,91416]" parent="function_body [80549,81278]" at="3"/>
  <insert-node tree="expression_statement [80867,81059]" parent="function_body [80549,81278]" at="4"/>
  <insert-node tree="expression_statement [81069,81196]" parent="function_body [80549,81278]" at="5"/>
  <insert-tree tree="expression_statement [81206,81227]" parent="function_body [80549,81278]" at="6"/>
  <move-tree tree="emit_statement [89380,89410]" parent="function_body [80549,81278]" at="7"/>
  <insert-node tree="}: } [81277,81278]" parent="function_body [80549,81278]" at="8"/>
  <update-node tree="identifier: tokenB [86765,86771]" label="candidate"/>
  <insert-node tree="{: { [81337,81338]" parent="function_body [81337,82039]" at="0"/>
  <move-tree tree="expression_statement [91151,91268]" parent="function_body [81337,82039]" at="1"/>
  <insert-node tree="expression_statement [81463,81612]" parent="function_body [81337,82039]" at="2"/>
  <move-tree tree="expression_statement [90227,90344]" parent="function_body [81337,82039]" at="3"/>
  <move-tree tree="expression_statement [73538,73657]" parent="function_body [81337,82039]" at="4"/>
  <insert-tree tree="expression_statement [81967,81988]" parent="function_body [81337,82039]" at="5"/>
  <move-tree tree="emit_statement [88815,88847]" parent="function_body [81337,82039]" at="6"/>
  <insert-node tree="}: } [82038,82039]" parent="function_body [81337,82039]" at="7"/>
  <insert-node tree="{: { [82110,82111]" parent="function_body [82110,82337]" at="0"/>
  <insert-node tree="if_statement [82120,82181]" parent="function_body [82110,82337]" at="1"/>
  <insert-node tree="variable_declaration_statement [82191,82268]" parent="function_body [82110,82337]" at="2"/>
  <insert-tree tree="return_statement [82277,82325]" parent="function_body [82110,82337]" at="3"/>
  <insert-node tree="comment: // 1% [82326,82331]" parent="function_body [82110,82337]" at="4"/>
  <insert-node tree="}: } [82336,82337]" parent="function_body [82110,82337]" at="5"/>
  <move-tree tree="type_name [15976,15983]" parent="event_paramater [83139,83160]" at="0"/>
  <insert-node tree="indexed: indexed [83147,83154]" parent="event_paramater [83139,83160]" at="1"/>
  <insert-node tree="identifier: epoch [83155,83160]" parent="event_paramater [83139,83160]" at="2"/>
  <move-tree tree="type_name [27696,27703]" parent="event_paramater [83162,83175]" at="0"/>
  <insert-node tree="identifier: block [83170,83175]" parent="event_paramater [83162,83175]" at="1"/>
  <update-node tree="identifier: newClaimable [88467,88479]" label="timestamp"/>
  <update-node tree="identifier: lessDai [88548,88555]" label="amount"/>
  <insert-tree tree="expression_statement [83321,83353]" parent="function_body [83311,83457]" at="1"/>
  <move-tree tree="expression_statement [116761,116847]" parent="function_body [83311,83457]" at="3"/>
  <insert-node tree="{: { [83504,83505]" parent="function_body [83504,83647]" at="0"/>
  <insert-tree tree="expression_statement [83514,83529]" parent="function_body [83504,83647]" at="1"/>
  <insert-tree tree="expression_statement [83538,83555]" parent="function_body [83504,83647]" at="2"/>
  <insert-tree tree="expression_statement [83564,83578]" parent="function_body [83504,83647]" at="3"/>
  <insert-node tree="emit_statement [83588,83641]" parent="function_body [83504,83647]" at="4"/>
  <insert-node tree="}: } [83646,83647]" parent="function_body [83504,83647]" at="5"/>
  <insert-node tree="{: { [83675,83676]" parent="function_body [83675,83894]" at="0"/>
  <insert-node tree="comment: // Mint advance reward to sender [83685,83717]" parent="function_body [83675,83894]" at="1"/>
  <insert-tree tree="variable_declaration_statement [83726,83778]" parent="function_body [83675,83894]" at="2"/>
  <insert-tree tree="expression_statement [83787,83824]" parent="function_body [83675,83894]" at="3"/>
  <insert-tree tree="emit_statement [83833,83877]" parent="function_body [83675,83894]" at="4"/>
  <move-tree tree="expression_statement [76533,76535]" parent="function_body [83675,83894]" at="5"/>
  <insert-node tree="}: } [83893,83894]" parent="function_body [83675,83894]" at="6"/>
  <insert-node tree="return: return [16880,16886]" parent="return_statement [16880,16960]" at="0"/>
  <insert-node tree="call_expression [16887,16959]" parent="return_statement [16880,16960]" at="1"/>
  <move-tree tree="variable_declaration [31883,31917]" parent="variable_declaration_statement [17137,17207]" at="0"/>
  <move-tree tree="variable_declaration [32623,32657]" parent="variable_declaration_statement [17216,17286]" at="0"/>
  <insert-node tree="=: = [17256,17257]" parent="variable_declaration_statement [17216,17286]" at="1"/>
  <insert-tree tree="call_expression [17258,17285]" parent="variable_declaration_statement [17216,17286]" at="2"/>
  <insert-tree tree="variable_declaration [17296,17318]" parent="variable_declaration_statement [17296,17345]" at="0"/>
  <insert-node tree="=: = [17319,17320]" parent="variable_declaration_statement [17296,17345]" at="1"/>
  <insert-node tree="call_expression [17321,17344]" parent="variable_declaration_statement [17296,17345]" at="2"/>
  <insert-tree tree="variable_declaration [17354,17374]" parent="variable_declaration_statement [17354,17399]" at="0"/>
  <insert-node tree="=: = [17375,17376]" parent="variable_declaration_statement [17354,17399]" at="1"/>
  <insert-node tree="call_expression [17377,17398]" parent="variable_declaration_statement [17354,17399]" at="2"/>
  <move-tree tree="variable_declaration [31933,31975]" parent="variable_declaration_statement [17408,17487]" at="0"/>
  <insert-node tree="=: = [17441,17442]" parent="variable_declaration_statement [17408,17487]" at="1"/>
  <insert-tree tree="call_expression [17443,17486]" parent="variable_declaration_statement [17408,17487]" at="2"/>
  <insert-node tree="if: if [17497,17499]" parent="if_statement [17497,18191]" at="0"/>
  <insert-node tree="(: ( [17500,17501]" parent="if_statement [17497,18191]" at="1"/>
  <insert-tree tree="call_expression [17501,17543]" parent="if_statement [17497,18191]" at="2"/>
  <insert-node tree="): ) [17543,17544]" parent="if_statement [17497,18191]" at="3"/>
  <insert-node tree="block_statement [17545,18191]" parent="if_statement [17497,18191]" at="4"/>
  <insert-node tree="return: return [18378,18384]" parent="return_statement [18378,18510]" at="0"/>
  <insert-node tree="call_expression [18385,18509]" parent="return_statement [18378,18510]" at="1"/>
  <insert-node tree="return: return [18777,18783]" parent="return_statement [18777,18926]" at="0"/>
  <insert-node tree="call_expression [18784,18925]" parent="return_statement [18777,18926]" at="1"/>
  <insert-tree tree="variable_declaration [54038,54063]" parent="variable_declaration_statement [54038,54094]" at="0"/>
  <insert-node tree="=: = [54064,54065]" parent="variable_declaration_statement [54038,54094]" at="1"/>
  <insert-node tree="call_expression [54066,54093]" parent="variable_declaration_statement [54038,54094]" at="2"/>
  <move-tree tree="variable_declaration [29618,29639]" parent="variable_declaration_statement [54143,54218]" at="0"/>
  <insert-node tree="=: = [54165,54166]" parent="variable_declaration_statement [54143,54218]" at="1"/>
  <insert-node tree="call_expression [54167,54217]" parent="variable_declaration_statement [54143,54218]" at="2"/>
  <insert-node tree="if: if [54227,54229]" parent="if_statement [54227,54310]" at="0"/>
  <insert-node tree="(: ( [54230,54231]" parent="if_statement [54227,54310]" at="1"/>
  <insert-tree tree="unary_expression [54231,54256]" parent="if_statement [54227,54310]" at="2"/>
  <insert-node tree="): ) [54256,54257]" parent="if_statement [54227,54310]" at="3"/>
  <insert-node tree="block_statement [54258,54310]" parent="if_statement [54227,54310]" at="4"/>
  <insert-tree tree="variable_declaration [54460,54489]" parent="variable_declaration_statement [54460,54526]" at="0"/>
  <insert-node tree="=: = [54490,54491]" parent="variable_declaration_statement [54460,54526]" at="1"/>
  <move-tree tree="call_expression [86635,86675]" parent="variable_declaration_statement [54460,54526]" at="2"/>
  <move-tree tree="call_expression [58031,58120]" parent="expression_statement [54535,54589]" at="0"/>
  <move-tree tree=",: , [58080,58081]" parent="call_expression [54535,54588]" at="8"/>
  <insert-node tree="call_expression [55145,55166]" parent="expression_statement [55145,55167]" at="0"/>
  <move-tree tree="call_expression [32083,32157]" parent="expression_statement [55176,55255]" at="0"/>
  <insert-node tree="call_expression [55349,55375]" parent="expression_statement [55349,55376]" at="0"/>
  <move-tree tree="variable_declaration [30337,30358]" parent="variable_declaration_statement [58100,58173]" at="0"/>
  <insert-node tree="=: = [58119,58120]" parent="variable_declaration_statement [58100,58173]" at="1"/>
  <insert-tree tree="call_expression [58121,58172]" parent="variable_declaration_statement [58100,58173]" at="2"/>
  <move-tree tree="variable_declaration [31146,31173]" parent="variable_declaration_statement [58182,58251]" at="0"/>
  <insert-node tree="=: = [58200,58201]" parent="variable_declaration_statement [58182,58251]" at="1"/>
  <insert-tree tree="ternary_expression [58202,58250]" parent="variable_declaration_statement [58182,58251]" at="2"/>
  <insert-node tree="if: if [58404,58406]" parent="if_statement [58404,58523]" at="0"/>
  <insert-node tree="(: ( [58407,58408]" parent="if_statement [58404,58523]" at="1"/>
  <insert-tree tree="binary_expression [58408,58418]" parent="if_statement [58404,58523]" at="2"/>
  <insert-node tree="): ) [58418,58419]" parent="if_statement [58404,58523]" at="3"/>
  <insert-node tree="block_statement [58420,58523]" parent="if_statement [58404,58523]" at="4"/>
  <insert-node tree="if: if [58589,58591]" parent="if_statement [58589,58659]" at="0"/>
  <insert-node tree="(: ( [58592,58593]" parent="if_statement [58589,58659]" at="1"/>
  <insert-tree tree="binary_expression [58593,58603]" parent="if_statement [58589,58659]" at="2"/>
  <insert-node tree="): ) [58603,58604]" parent="if_statement [58589,58659]" at="3"/>
  <insert-node tree="block_statement [58605,58659]" parent="if_statement [58589,58659]" at="4"/>
  <insert-node tree="call_expression [58731,58767]" parent="expression_statement [58731,58768]" at="0"/>
  <insert-node tree="call_expression [58777,58809]" parent="expression_statement [58777,58810]" at="0"/>
  <insert-tree tree="variable_declaration [60552,60575]" parent="variable_declaration_statement [60552,60623]" at="0"/>
  <insert-node tree="=: = [60576,60577]" parent="variable_declaration_statement [60552,60623]" at="1"/>
  <move-tree tree="call_expression [85194,85242]" parent="variable_declaration_statement [60552,60623]" at="2"/>
  <insert-tree tree="call_expression [60632,60685]" parent="expression_statement [60632,60686]" at="0"/>
  <insert-tree tree="tuple_expression [60887,60896]" parent="variable_declaration_statement [60823,60897]" at="2"/>
  <move-tree tree="variable_declaration [90354,90374]" parent="variable_declaration_statement [60952,60996]" at="0"/>
  <insert-node tree="=: = [60976,60977]" parent="variable_declaration_statement [60952,60996]" at="1"/>
  <insert-tree tree="call_expression [60978,60995]" parent="variable_declaration_statement [60952,60996]" at="2"/>
  <insert-node tree="return: return [61461,61467]" parent="return_statement [61461,61536]" at="0"/>
  <insert-node tree="call_expression [61468,61535]" parent="return_statement [61461,61536]" at="1"/>
  <move-tree tree="variable_declaration [86925,86938]" parent="variable_declaration_statement [61664,61699]" at="0"/>
  <insert-node tree="=: = [61683,61684]" parent="variable_declaration_statement [61664,61699]" at="1"/>
  <insert-tree tree="call_expression [61685,61698]" parent="variable_declaration_statement [61664,61699]" at="2"/>
  <move-tree tree="variable_declaration [86229,86242]" parent="variable_declaration_statement [61708,61747]" at="0"/>
  <insert-node tree="=: = [61723,61724]" parent="variable_declaration_statement [61708,61747]" at="1"/>
  <move-tree tree="binary_expression [81814,81840]" parent="variable_declaration_statement [61708,61747]" at="2"/>
  <move-tree tree="variable_declaration [86244,86257]" parent="variable_declaration_statement [61757,61893]" at="0"/>
  <insert-node tree="=: = [61779,61780]" parent="variable_declaration_statement [61757,61893]" at="1"/>
  <insert-node tree="binary_expression [61781,61892]" parent="variable_declaration_statement [61757,61893]" at="2"/>
  <move-tree tree="variable_declaration [35093,35124]" parent="variable_declaration_statement [61983,62210]" at="0"/>
  <insert-node tree="=: = [62029,62030]" parent="variable_declaration_statement [61983,62210]" at="1"/>
  <insert-tree tree="call_expression [62031,62209]" parent="variable_declaration_statement [61983,62210]" at="2"/>
  <move-tree tree="variable_declaration [32673,32715]" parent="variable_declaration_statement [62219,62399]" at="0"/>
  <insert-node tree="=: = [62265,62266]" parent="variable_declaration_statement [62219,62399]" at="1"/>
  <insert-tree tree="call_expression [62267,62398]" parent="variable_declaration_statement [62219,62399]" at="2"/>
  <insert-tree tree="call_expression [62617,62639]" parent="variable_declaration_statement [62585,62640]" at="2"/>
  <move-tree tree="variable_declaration [89591,89609]" parent="variable_declaration_statement [62700,62767]" at="0"/>
  <move-tree tree="call_expression [90377,90406]" parent="variable_declaration_statement [62700,62767]" at="2"/>
  <move-tree tree="call_expression [33627,33701]" parent="expression_statement [62777,62895]" at="0"/>
  <move-tree tree="call_expression [34482,34556]" parent="expression_statement [62905,63028]" at="0"/>
  <move-tree tree="variable_declaration [90448,90467]" parent="variable_declaration_statement [63038,63062]" at="0"/>
  <insert-node tree="=: = [63052,63053]" parent="variable_declaration_statement [63038,63062]" at="1"/>
  <insert-tree tree="call_expression [63054,63061]" parent="variable_declaration_statement [63038,63062]" at="2"/>
  <move-tree tree="variable_declaration [91585,91613]" parent="variable_declaration_statement [63071,63197]" at="0"/>
  <insert-node tree="=: = [63092,63093]" parent="variable_declaration_statement [63071,63197]" at="1"/>
  <insert-tree tree="call_expression [63094,63196]" parent="variable_declaration_statement [63071,63197]" at="2"/>
  <insert-node tree="call_expression [63471,63540]" parent="expression_statement [63471,63541]" at="0"/>
  <move-tree tree="call_expression [20005,20076]" parent="expression_statement [63550,63654]" at="0"/>
  <move-tree tree="call_argument [20027,20033]" parent="call_expression [63550,63653]" at="3"/>
  <move-tree tree="variable_declaration [86910,86923]" parent="variable_declaration_statement [63672,63741]" at="0"/>
  <insert-node tree="=: = [63688,63689]" parent="variable_declaration_statement [63672,63741]" at="1"/>
  <insert-tree tree="call_expression [63690,63740]" parent="variable_declaration_statement [63672,63741]" at="2"/>
  <move-tree tree="variable_declaration [91494,91526]" parent="variable_declaration_statement [63750,63799]" at="0"/>
  <insert-node tree="=: = [63771,63772]" parent="variable_declaration_statement [63750,63799]" at="1"/>
  <insert-tree tree="binary_expression [63773,63798]" parent="variable_declaration_statement [63750,63799]" at="2"/>
  <insert-node tree="call_expression [64151,64220]" parent="expression_statement [64151,64221]" at="0"/>
  <insert-node tree="=: = [64368,64369]" parent="variable_declaration_statement [64352,64421]" at="1"/>
  <insert-tree tree="call_expression [64370,64420]" parent="variable_declaration_statement [64352,64421]" at="2"/>
  <move-tree tree="variable_declaration [35415,35451]" parent="variable_declaration_statement [64430,64479]" at="0"/>
  <insert-node tree="=: = [64451,64452]" parent="variable_declaration_statement [64430,64479]" at="1"/>
  <insert-tree tree="binary_expression [64453,64478]" parent="variable_declaration_statement [64430,64479]" at="2"/>
  <insert-node tree="call_expression [65022,65073]" parent="expression_statement [65022,65074]" at="0"/>
  <update-node tree="identifier: Approval [22149,22157]" label="CouponApproval"/>
  <insert-tree tree="call_argument [65104,65114]" parent="emit_statement [65084,65133]" at="3"/>
  <move-tree tree="call_argument [20756,20762]" parent="emit_statement [65084,65133]" at="8"/>
  <move-tree tree="call_argument [21164,21185]" parent="call_expression [65433,65520]" at="3"/>
  <insert-node tree="call_expression [65530,65581]" parent="expression_statement [65530,65582]" at="0"/>
  <insert-node tree="binary_expression [65596,65671]" parent="if_statement [65592,65791]" at="2"/>
  <move-tree tree="block_statement [30393,30608]" parent="if_statement [65592,65791]" at="5"/>
  <update-node tree="identifier: Transfer [20156,20164]" label="CouponTransfer"/>
  <insert-tree tree="call_argument [65840,65845]" parent="emit_statement [65801,65855]" at="7"/>
  <insert-node tree=",: , [65845,65846]" parent="emit_statement [65801,65855]" at="8"/>
  <insert-node tree="if: if [67085,67087]" parent="if_statement [67085,67214]" at="0"/>
  <insert-node tree="(: ( [67088,67089]" parent="if_statement [67085,67214]" at="1"/>
  <insert-tree tree="call_expression [67089,67121]" parent="if_statement [67085,67214]" at="2"/>
  <insert-node tree="): ) [67121,67122]" parent="if_statement [67085,67214]" at="3"/>
  <insert-node tree="block_statement [67123,67214]" parent="if_statement [67085,67214]" at="4"/>
  <insert-node tree="if: if [67224,67226]" parent="if_statement [67224,67407]" at="0"/>
  <insert-node tree="(: ( [67227,67228]" parent="if_statement [67224,67407]" at="1"/>
  <insert-node tree="call_expression [67228,67257]" parent="if_statement [67224,67407]" at="2"/>
  <insert-node tree="): ) [67257,67258]" parent="if_statement [67224,67407]" at="3"/>
  <insert-node tree="block_statement [67259,67407]" parent="if_statement [67224,67407]" at="4"/>
  <move-tree tree="variable_declaration [33429,33463]" parent="variable_declaration_statement [67548,67608]" at="0"/>
  <move-tree tree="variable_declaration [86296,86313]" parent="variable_declaration_statement [67617,67669]" at="0"/>
  <insert-node tree="=: = [67633,67634]" parent="variable_declaration_statement [67617,67669]" at="1"/>
  <insert-tree tree="call_expression [67635,67668]" parent="variable_declaration_statement [67617,67669]" at="2"/>
  <move-tree tree="variable_declaration [31991,32014]" parent="variable_declaration_statement [67878,67978]" at="0"/>
  <insert-node tree="=: = [67904,67905]" parent="variable_declaration_statement [67878,67978]" at="1"/>
  <insert-tree tree="call_expression [67906,67977]" parent="variable_declaration_statement [67878,67978]" at="2"/>
  <move-tree tree="variable_declaration [81494,81518]" parent="variable_declaration_statement [67987,68041]" at="0"/>
  <insert-node tree="=: = [68005,68006]" parent="variable_declaration_statement [67987,68041]" at="1"/>
  <insert-tree tree="call_expression [68007,68040]" parent="variable_declaration_statement [67987,68041]" at="2"/>
  <move-tree tree="variable_declaration [32730,32772]" parent="variable_declaration_statement [68357,68430]" at="0"/>
  <insert-node tree="=: = [68395,68396]" parent="variable_declaration_statement [68357,68430]" at="1"/>
  <insert-tree tree="call_expression [68397,68429]" parent="variable_declaration_statement [68357,68430]" at="2"/>
  <insert-node tree="variable_declaration_tuple [68598,68637]" parent="variable_declaration_statement [68598,68659]" at="0"/>
  <insert-node tree="if: if [68669,68671]" parent="if_statement [68669,68771]" at="0"/>
  <insert-node tree="(: ( [68672,68673]" parent="if_statement [68669,68771]" at="1"/>
  <insert-node tree="call_expression [68673,68704]" parent="if_statement [68669,68771]" at="2"/>
  <insert-node tree="): ) [68704,68705]" parent="if_statement [68669,68771]" at="3"/>
  <insert-tree tree="block_statement [68706,68771]" parent="if_statement [68669,68771]" at="4"/>
  <insert-tree tree="unary_expression [68784,68790]" parent="if_statement [68780,68837]" at="2"/>
  <insert-node tree="call_expression [71512,71622]" parent="expression_statement [71512,71623]" at="0"/>
  <move-tree tree="variable_declaration [81347,81383]" parent="variable_declaration_statement [71803,71868]" at="0"/>
  <insert-node tree="=: = [71832,71833]" parent="variable_declaration_statement [71803,71868]" at="1"/>
  <insert-tree tree="call_expression [71834,71867]" parent="variable_declaration_statement [71803,71868]" at="2"/>
  <move-tree tree="variable_declaration [81267,81299]" parent="variable_declaration_statement [71942,72026]" at="0"/>
  <insert-node tree="=: = [71964,71965]" parent="variable_declaration_statement [71942,72026]" at="1"/>
  <move-tree tree="call_expression [80345,80400]" parent="variable_declaration_statement [71942,72026]" at="2"/>
  <insert-node tree="call_expression [72035,72101]" parent="expression_statement [72035,72102]" at="0"/>
  <move-tree tree="variable_declaration [81157,81176]" parent="variable_declaration_statement [72602,72758]" at="0"/>
  <insert-node tree="call_expression [72767,72806]" parent="expression_statement [72767,72807]" at="0"/>
  <insert-node tree="call_expression [72817,72844]" parent="expression_statement [72817,72845]" at="0"/>
  <insert-node tree="emit: emit [72948,72952]" parent="emit_statement [72948,73002]" at="0"/>
  <insert-node tree="identifier: Bond [72953,72957]" parent="emit_statement [72948,73002]" at="1"/>
  <insert-node tree="(: ( [72957,72958]" parent="emit_statement [72948,73002]" at="2"/>
  <move-tree tree="call_argument [90996,91006]" parent="emit_statement [72948,73002]" at="3"/>
  <insert-node tree=",: , [72968,72969]" parent="emit_statement [72948,73002]" at="4"/>
  <insert-tree tree="call_argument [72970,72984]" parent="emit_statement [72948,73002]" at="5"/>
  <insert-node tree=",: , [72984,72985]" parent="emit_statement [72948,73002]" at="6"/>
  <insert-tree tree="call_argument [72986,72993]" parent="emit_statement [72948,73002]" at="7"/>
  <insert-node tree=",: , [72993,72994]" parent="emit_statement [72948,73002]" at="8"/>
  <move-tree tree="call_argument [88840,88845]" parent="emit_statement [72948,73002]" at="9"/>
  <insert-node tree="): ) [73000,73001]" parent="emit_statement [72948,73002]" at="10"/>
  <move-tree tree="variable_declaration [75895,75914]" parent="variable_declaration_statement [73125,73208]" at="0"/>
  <move-tree tree="call_expression [90470,90509]" parent="variable_declaration_statement [73125,73208]" at="2"/>
  <move-tree tree=",: , [90576,90577]" parent="call_expression [73271,73337]" at="4"/>
  <move-tree tree="variable_declaration [75540,75563]" parent="variable_declaration_statement [73616,73678]" at="0"/>
  <insert-node tree="call_expression [73740,73805]" parent="expression_statement [73740,73806]" at="0"/>
  <move-tree tree="call_argument [66707,66722]" parent="call_expression [73815,73887]" at="3"/>
  <update-node tree="identifier: Bond [90031,90035]" label="Unbond"/>
  <insert-tree tree="call_argument [73938,73945]" parent="emit_statement [73898,73954]" at="7"/>
  <insert-node tree=",: , [73945,73946]" parent="emit_statement [73898,73954]" at="8"/>
  <insert-node tree="if: if [79150,79152]" parent="if_statement [79150,79505]" at="0"/>
  <insert-node tree="(: ( [79153,79154]" parent="if_statement [79150,79505]" at="1"/>
  <insert-tree tree="unary_expression [79154,79177]" parent="if_statement [79150,79505]" at="2"/>
  <insert-node tree="): ) [79177,79178]" parent="if_statement [79150,79505]" at="3"/>
  <insert-node tree="block_statement [79179,79505]" parent="if_statement [79150,79505]" at="4"/>
  <insert-node tree="if: if [79779,79781]" parent="if_statement [79779,79836]" at="0"/>
  <insert-node tree="(: ( [79782,79783]" parent="if_statement [79779,79836]" at="1"/>
  <insert-tree tree="binary_expression [79783,79803]" parent="if_statement [79779,79836]" at="2"/>
  <insert-node tree="): ) [79803,79804]" parent="if_statement [79779,79836]" at="3"/>
  <insert-node tree="block_statement [79805,79836]" parent="if_statement [79779,79836]" at="4"/>
  <insert-node tree="if: if [79846,79848]" parent="if_statement [79846,79982]" at="0"/>
  <insert-node tree="(: ( [79849,79850]" parent="if_statement [79846,79982]" at="1"/>
  <insert-tree tree="member_expression [79850,79887]" parent="if_statement [79846,79982]" at="2"/>
  <insert-node tree="): ) [79887,79888]" parent="if_statement [79846,79982]" at="3"/>
  <insert-node tree="block_statement [79889,79982]" parent="if_statement [79846,79982]" at="4"/>
  <insert-node tree="if: if [79991,79993]" parent="if_statement [79991,80130]" at="0"/>
  <insert-node tree="(: ( [79994,79995]" parent="if_statement [79991,80130]" at="1"/>
  <insert-tree tree="member_expression [79995,80033]" parent="if_statement [79991,80130]" at="2"/>
  <insert-node tree="): ) [80033,80034]" parent="if_statement [79991,80130]" at="3"/>
  <insert-node tree="block_statement [80035,80130]" parent="if_statement [79991,80130]" at="4"/>
  <update-node tree="identifier: Provide [91852,91859]" label="Vote"/>
  <move-tree tree="variable_declaration [74276,74299]" parent="variable_declaration_statement [80675,80748]" at="0"/>
  <insert-node tree="=: = [80693,80694]" parent="variable_declaration_statement [80675,80748]" at="1"/>
  <insert-node tree="call_expression [80695,80747]" parent="variable_declaration_statement [80675,80748]" at="2"/>
  <insert-node tree="call_expression [80867,81058]" parent="expression_statement [80867,81059]" at="0"/>
  <insert-node tree="call_expression [81069,81195]" parent="expression_statement [81069,81196]" at="0"/>
  <update-node tree="identifier: Claim [89385,89390]" label="Commit"/>
  <insert-node tree="call_expression [81463,81611]" parent="expression_statement [81463,81612]" at="0"/>
  <update-node tree="identifier: Deposit [88820,88827]" label="Commit"/>
  <insert-tree tree="call_argument [82022,82031]" parent="emit_statement [81998,82033]" at="5"/>
  <insert-node tree="if: if [82120,82122]" parent="if_statement [82120,82181]" at="0"/>
  <insert-node tree="(: ( [82123,82124]" parent="if_statement [82120,82181]" at="1"/>
  <insert-tree tree="binary_expression [82124,82142]" parent="if_statement [82120,82181]" at="2"/>
  <insert-node tree="): ) [82142,82143]" parent="if_statement [82120,82181]" at="3"/>
  <insert-node tree="block_statement [82144,82181]" parent="if_statement [82120,82181]" at="4"/>
  <move-tree tree="variable_declaration [33478,33520]" parent="variable_declaration_statement [82191,82268]" at="0"/>
  <insert-node tree="=: = [82217,82218]" parent="variable_declaration_statement [82191,82268]" at="1"/>
  <insert-node tree="call_expression [82219,82267]" parent="variable_declaration_statement [82191,82268]" at="2"/>
  <move-tree tree="call_expression [116792,116845]" parent="expression_statement [83410,83451]" at="0"/>
  <insert-node tree="emit: emit [83588,83592]" parent="emit_statement [83588,83641]" at="0"/>
  <insert-node tree="identifier: Advance [83593,83600]" parent="emit_statement [83588,83641]" at="1"/>
  <insert-node tree="(: ( [83600,83601]" parent="emit_statement [83588,83641]" at="2"/>
  <insert-tree tree="call_argument [83601,83608]" parent="emit_statement [83588,83641]" at="3"/>
  <insert-node tree=",: , [83608,83609]" parent="emit_statement [83588,83641]" at="4"/>
  <insert-tree tree="call_argument [83610,83622]" parent="emit_statement [83588,83641]" at="5"/>
  <insert-node tree=",: , [83622,83623]" parent="emit_statement [83588,83641]" at="6"/>
  <move-tree tree="call_argument [68067,68092]" parent="emit_statement [83588,83641]" at="7"/>
  <insert-node tree="): ) [83639,83640]" parent="emit_statement [83588,83641]" at="8"/>
  <insert-node tree="member_expression [16887,16957]" parent="call_expression [16887,16959]" at="0"/>
  <insert-node tree="(: ( [16957,16958]" parent="call_expression [16887,16959]" at="1"/>
  <insert-node tree="): ) [16958,16959]" parent="call_expression [16887,16959]" at="2"/>
  <update-node tree="identifier: externalAmount [31903,31917]" label="debtRatio"/>
  <insert-tree tree="member_expression [17169,17182]" parent="call_expression [17169,17206]" at="0"/>
  <insert-tree tree="call_argument [17183,17192]" parent="call_expression [17169,17206]" at="2"/>
  <insert-node tree=",: , [17192,17193]" parent="call_expression [17169,17206]" at="3"/>
  <insert-tree tree="call_argument [17194,17205]" parent="call_expression [17169,17206]" at="4"/>
  <update-node tree="identifier: externalAmount [32643,32657]" label="debtRatioUpperBound"/>
  <insert-tree tree="member_expression [17321,17336]" parent="call_expression [17321,17344]" at="0"/>
  <insert-node tree="(: ( [17336,17337]" parent="call_expression [17321,17344]" at="1"/>
  <move-tree tree="call_argument [32046,32052]" parent="call_expression [17321,17344]" at="2"/>
  <insert-node tree="): ) [17343,17344]" parent="call_expression [17321,17344]" at="3"/>
  <insert-tree tree="member_expression [17377,17390]" parent="call_expression [17377,17398]" at="0"/>
  <insert-node tree="(: ( [17390,17391]" parent="call_expression [17377,17398]" at="1"/>
  <move-tree tree="call_argument [32841,32847]" parent="call_expression [17377,17398]" at="2"/>
  <insert-node tree="): ) [17397,17398]" parent="call_expression [17377,17398]" at="3"/>
  <update-node tree="identifier: externalAmountAfterTax [31953,31975]" label="debtRatioEnd"/>
  <insert-node tree="{: { [17545,17546]" parent="block_statement [17545,18191]" at="0"/>
  <insert-tree tree="if_statement [17559,17676]" parent="block_statement [17545,18191]" at="1"/>
  <move-tree tree="variable_declaration_statement [29916,29982]" parent="block_statement [17545,18191]" at="2"/>
  <move-tree tree="variable_declaration_statement [30665,30731]" parent="block_statement [17545,18191]" at="3"/>
  <insert-node tree="variable_declaration_statement [17874,17935]" parent="block_statement [17545,18191]" at="4"/>
  <insert-node tree="variable_declaration_statement [17948,18022]" parent="block_statement [17545,18191]" at="5"/>
  <insert-tree tree="return_statement [18035,18181]" parent="block_statement [17545,18191]" at="6"/>
  <insert-node tree="}: } [18190,18191]" parent="block_statement [17545,18191]" at="7"/>
  <insert-node tree="member_expression [18385,18488]" parent="call_expression [18385,18509]" at="0"/>
  <insert-node tree="(: ( [18488,18489]" parent="call_expression [18385,18509]" at="1"/>
  <insert-tree tree="call_argument [18489,18508]" parent="call_expression [18385,18509]" at="2"/>
  <insert-node tree="): ) [18508,18509]" parent="call_expression [18385,18509]" at="3"/>
  <insert-node tree="member_expression [18784,18904]" parent="call_expression [18784,18925]" at="0"/>
  <insert-node tree="(: ( [18904,18905]" parent="call_expression [18784,18925]" at="1"/>
  <insert-node tree="call_argument [18905,18924]" parent="call_expression [18784,18925]" at="2"/>
  <insert-node tree="): ) [18924,18925]" parent="call_expression [18784,18925]" at="3"/>
  <insert-node tree="member_expression [54066,54084]" parent="call_expression [54066,54093]" at="0"/>
  <insert-node tree="(: ( [54084,54085]" parent="call_expression [54066,54093]" at="1"/>
  <move-tree tree="call_argument [81538,81545]" parent="call_expression [54066,54093]" at="2"/>
  <insert-node tree="): ) [54092,54093]" parent="call_expression [54066,54093]" at="3"/>
  <insert-node tree="member_expression [54103,54116]" parent="call_expression [54103,54133]" at="0"/>
  <insert-node tree="member_expression [54167,54198]" parent="call_expression [54167,54217]" at="0"/>
  <insert-node tree="(: ( [54198,54199]" parent="call_expression [54167,54217]" at="1"/>
  <insert-tree tree="call_argument [54199,54216]" parent="call_expression [54167,54217]" at="2"/>
  <insert-node tree="): ) [54216,54217]" parent="call_expression [54167,54217]" at="3"/>
  <insert-node tree="{: { [54258,54259]" parent="block_statement [54258,54310]" at="0"/>
  <insert-node tree="expression_statement [54272,54300]" parent="block_statement [54258,54310]" at="1"/>
  <insert-node tree="}: } [54309,54310]" parent="block_statement [54258,54310]" at="2"/>
  <move-tree tree="identifier: LibEIP712 [58031,58040]" parent="member_expression [54535,54556]" at="1"/>
  <move-tree tree="call_argument [24760,24767]" parent="call_expression [54535,54588]" at="2"/>
  <move-tree tree="call_argument [61172,61178]" parent="call_expression [54535,54588]" at="10"/>
  <insert-node tree="identifier: decrementTotalDebt [54730,54748]" parent="call_expression [54730,54811]" at="0"/>
  <insert-tree tree="member_expression [54926,54943]" parent="call_expression [54926,54960]" at="0"/>
  <insert-node tree="identifier: decrementTotalRedeemable [54970,54994]" parent="call_expression [54970,55048]" at="0"/>
  <move-tree tree="call_argument [23025,23031]" parent="call_expression [54970,55048]" at="3"/>
  <insert-node tree="member_expression [55145,55158]" parent="call_expression [55145,55166]" at="0"/>
  <insert-node tree="(: ( [55158,55159]" parent="call_expression [55145,55166]" at="1"/>
  <move-tree tree="call_argument [83713,83719]" parent="call_expression [55145,55166]" at="2"/>
  <insert-node tree="): ) [55165,55166]" parent="call_expression [55145,55166]" at="3"/>
  <insert-node tree="identifier: decrementTotalRedeemable [55176,55200]" parent="call_expression [55176,55254]" at="0"/>
  <move-tree tree="call_argument [83122,83128]" parent="call_expression [55176,55254]" at="3"/>
  <insert-node tree="identifier: incrementTotalDebt [55349,55367]" parent="call_expression [55349,55375]" at="0"/>
  <insert-node tree="(: ( [55367,55368]" parent="call_expression [55349,55375]" at="1"/>
  <move-tree tree="call_argument [83189,83195]" parent="call_expression [55349,55375]" at="2"/>
  <insert-node tree="): ) [55374,55375]" parent="call_expression [55349,55375]" at="3"/>
  <update-node tree="identifier: require [27309,27316]" label="decrementTotalDebt"/>
  <move-tree tree="call_argument [16643,16649]" parent="call_expression [55518,55576]" at="2"/>
  <update-node tree="identifier: realBurnValue [30345,30358]" label="poolAmount"/>
  <update-node tree="identifier: finalTransferAmount [31154,31173]" label="daoAmount"/>
  <insert-node tree="{: { [58420,58421]" parent="block_statement [58420,58523]" at="0"/>
  <insert-node tree="expression_statement [58434,58471]" parent="block_statement [58420,58523]" at="1"/>
  <insert-node tree="expression_statement [58484,58513]" parent="block_statement [58420,58523]" at="2"/>
  <insert-node tree="}: } [58522,58523]" parent="block_statement [58420,58523]" at="3"/>
  <insert-node tree="{: { [58605,58606]" parent="block_statement [58605,58659]" at="0"/>
  <insert-node tree="expression_statement [58619,58649]" parent="block_statement [58605,58659]" at="1"/>
  <insert-node tree="}: } [58658,58659]" parent="block_statement [58605,58659]" at="2"/>
  <insert-tree tree="member_expression [58731,58744]" parent="call_expression [58731,58767]" at="0"/>
  <insert-node tree="(: ( [58744,58745]" parent="call_expression [58731,58767]" at="1"/>
  <insert-tree tree="call_argument [58745,58758]" parent="call_expression [58731,58767]" at="2"/>
  <insert-node tree=",: , [58758,58759]" parent="call_expression [58731,58767]" at="3"/>
  <move-tree tree="call_argument [17120,17126]" parent="call_expression [58731,58767]" at="4"/>
  <insert-node tree="): ) [58766,58767]" parent="call_expression [58731,58767]" at="5"/>
  <insert-node tree="identifier: incrementTotalRedeemable [58777,58801]" parent="call_expression [58777,58809]" at="0"/>
  <insert-node tree="(: ( [58801,58802]" parent="call_expression [58777,58809]" at="1"/>
  <move-tree tree="call_argument [17747,17753]" parent="call_expression [58777,58809]" at="2"/>
  <insert-node tree="): ) [58808,58809]" parent="call_expression [58777,58809]" at="3"/>
  <insert-tree tree="variable_declaration [60848,60864]" parent="variable_declaration_tuple [60823,60884]" at="3"/>
  <insert-node tree=",: , [60864,60865]" parent="variable_declaration_tuple [60823,60884]" at="4"/>
  <insert-tree tree="variable_declaration [60866,60883]" parent="variable_declaration_tuple [60823,60884]" at="5"/>
  <update-node tree="identifier: newClaimable [90362,90374]" label="totalRedeemable"/>
  <insert-node tree="identifier: calculateCouponPremium [61468,61490]" parent="call_expression [61468,61535]" at="0"/>
  <insert-node tree="(: ( [61490,61491]" parent="call_expression [61468,61535]" at="1"/>
  <insert-tree tree="call_argument [61491,61513]" parent="call_expression [61468,61535]" at="2"/>
  <insert-node tree=",: , [61513,61514]" parent="call_expression [61468,61535]" at="3"/>
  <insert-tree tree="call_argument [61515,61526]" parent="call_expression [61468,61535]" at="4"/>
  <insert-node tree=",: , [61526,61527]" parent="call_expression [61468,61535]" at="5"/>
  <move-tree tree="call_argument [33590,33596]" parent="call_expression [61468,61535]" at="6"/>
  <insert-node tree="): ) [61534,61535]" parent="call_expression [61468,61535]" at="7"/>
  <update-node tree="identifier: reserve1 [86930,86938]" label="timeIntoEpoch"/>
  <update-node tree="identifier: reserveA [86234,86242]" label="couponAge"/>
  <insert-node tree="-: - [61733,61734]" parent="binary_expression [61725,61746]" at="1"/>
  <insert-node tree="identifier: couponEpoch [61735,61746]" parent="binary_expression [61725,61746]" at="2"/>
  <update-node tree="identifier: reserveB [86249,86257]" label="couponEpochDecay"/>
  <insert-node tree="binary_expression [61781,61858]" parent="binary_expression [61781,61892]" at="0"/>
  <insert-node tree="/: / [61859,61860]" parent="binary_expression [61781,61892]" at="1"/>
  <insert-tree tree="call_expression [61861,61892]" parent="binary_expression [61781,61892]" at="2"/>
  <update-node tree="identifier: totalBonded [81206,81217]" label="timeIntoEpoch"/>
  <insert-node tree="&gt;: &gt; [61920,61921]" parent="binary_expression [61906,61938]" at="1"/>
  <insert-node tree="identifier: couponEpochDecay [61922,61938]" parent="binary_expression [61906,61938]" at="2"/>
  <update-node tree="identifier: internalTax [35113,35124]" label="couponEpochInitialPenalty"/>
  <update-node tree="identifier: externalAmountAfterTax [32693,32715]" label="couponEpochDecayedPenalty"/>
  <update-node tree="identifier: balanceOfBonded [90172,90187]" label="totalSupplyBeforeBurn"/>
  <update-node tree="identifier: totalRewardedWithPhantom [89519,89543]" label="totalDebtBeforeBurn"/>
  <insert-node tree="identifier: totalDebt [62679,62688]" parent="call_expression [62679,62690]" at="0"/>
  <update-node tree="identifier: newPhantom [89599,89609]" label="realBurnAmount"/>
  <update-node tree="identifier: balanceOfRewarded [90377,90394]" label="burnFromAccount"/>
  <insert-node tree=",: , [62751,62752]" parent="call_expression [62725,62766]" at="3"/>
  <move-tree tree="call_argument [86415,86427]" parent="call_expression [62725,62766]" at="4"/>
  <move-tree tree="member_expression [58703,58715]" parent="call_expression [62777,62894]" at="0"/>
  <move-tree tree="call_argument [58761,58765]" parent="call_expression [62777,62894]" at="5"/>
  <insert-node tree=",: , [62839,62840]" parent="call_expression [62777,62894]" at="5"/>
  <move-tree tree="member_expression [58935,58947]" parent="call_expression [62905,63027]" at="0"/>
  <move-tree tree="call_argument [58990,58994]" parent="call_expression [62905,63027]" at="5"/>
  <insert-node tree=",: , [62986,62987]" parent="call_expression [62905,63027]" at="5"/>
  <update-node tree="identifier: lessPhantom [90456,90467]" label="epoch"/>
  <update-node tree="identifier: newPhantomFromBonded [91593,91613]" label="couponAmount"/>
  <update-node tree="identifier: decrementBalanceOfBonded [90657,90681]" label="incrementBalanceOfCoupons"/>
  <insert-tree tree="call_argument [63251,63263]" parent="call_expression [63206,63264]" at="6"/>
  <insert-node tree="identifier: require [63471,63478]" parent="call_expression [63471,63540]" at="0"/>
  <insert-node tree="(: ( [63478,63479]" parent="call_expression [63471,63540]" at="1"/>
  <insert-tree tree="call_argument [63479,63508]" parent="call_expression [63471,63540]" at="2"/>
  <insert-node tree=",: , [63508,63509]" parent="call_expression [63471,63540]" at="3"/>
  <move-tree tree="call_argument [32915,32951]" parent="call_expression [63471,63540]" at="4"/>
  <insert-node tree="): ) [63539,63540]" parent="call_expression [63471,63540]" at="5"/>
  <insert-node tree="identifier: decrementBalanceOfCoupons [63550,63575]" parent="call_expression [63550,63653]" at="0"/>
  <move-tree tree="call_argument [87978,87988]" parent="call_expression [63550,63653]" at="3"/>
  <insert-node tree=",: , [63599,63600]" parent="call_expression [63550,63653]" at="5"/>
  <insert-tree tree="call_argument [63601,63613]" parent="call_expression [63550,63653]" at="6"/>
  <insert-node tree=",: , [63613,63614]" parent="call_expression [63550,63653]" at="7"/>
  <update-node tree="identifier: reserve0 [86915,86923]" label="burnAmount"/>
  <update-node tree="identifier: totalRewardedWithPhantom [91502,91526]" label="redeemAmount"/>
  <update-node tree="identifier: incrementBalanceOfPhantom [91740,91765]" label="redeemToAccount"/>
  <insert-node tree="identifier: require [64151,64158]" parent="call_expression [64151,64220]" at="0"/>
  <insert-node tree="(: ( [64158,64159]" parent="call_expression [64151,64220]" at="1"/>
  <insert-tree tree="call_argument [64159,64188]" parent="call_expression [64151,64220]" at="2"/>
  <insert-node tree=",: , [64188,64189]" parent="call_expression [64151,64220]" at="3"/>
  <move-tree tree="call_argument [20566,20599]" parent="call_expression [64151,64220]" at="4"/>
  <insert-node tree="): ) [64219,64220]" parent="call_expression [64151,64220]" at="5"/>
  <update-node tree="identifier: require [21941,21948]" label="decrementBalanceOfCoupons"/>
  <insert-tree tree="call_argument [64256,64266]" parent="call_expression [64230,64333]" at="2"/>
  <insert-tree tree="call_argument [64268,64279]" parent="call_expression [64230,64333]" at="4"/>
  <insert-node tree=",: , [64279,64280]" parent="call_expression [64230,64333]" at="5"/>
  <insert-tree tree="call_argument [64281,64293]" parent="call_expression [64230,64333]" at="6"/>
  <insert-node tree=",: , [64293,64294]" parent="call_expression [64230,64333]" at="7"/>
  <update-node tree="identifier: z [66289,66290]" label="burnAmount"/>
  <update-node tree="identifier: totalSupplyStandardConverted [35423,35451]" label="redeemAmount"/>
  <update-node tree="identifier: incrementBalanceOfBonded [91684,91708]" label="redeemToAccount"/>
  <insert-node tree="identifier: updateAllowanceCoupons [65022,65044]" parent="call_expression [65022,65073]" at="0"/>
  <insert-node tree="(: ( [65044,65045]" parent="call_expression [65022,65073]" at="1"/>
  <insert-tree tree="call_argument [65045,65055]" parent="call_expression [65022,65073]" at="2"/>
  <insert-node tree=",: , [65055,65056]" parent="call_expression [65022,65073]" at="3"/>
  <move-tree tree="call_argument [59054,59061]" parent="call_expression [65022,65073]" at="4"/>
  <insert-node tree=",: , [65064,65065]" parent="call_expression [65022,65073]" at="5"/>
  <move-tree tree="call_argument [83462,83468]" parent="call_expression [65022,65073]" at="6"/>
  <insert-node tree="): ) [65072,65073]" parent="call_expression [65022,65073]" at="7"/>
  <update-node tree="identifier: require [21156,21163]" label="decrementBalanceOfCoupons"/>
  <move-tree tree="call_argument [33395,33401]" parent="call_expression [65433,65520]" at="2"/>
  <insert-node tree=",: , [65472,65473]" parent="call_expression [65433,65520]" at="5"/>
  <move-tree tree="call_argument [22452,22458]" parent="call_expression [65433,65520]" at="6"/>
  <insert-node tree=",: , [65480,65481]" parent="call_expression [65433,65520]" at="7"/>
  <insert-node tree="identifier: incrementBalanceOfCoupons [65530,65555]" parent="call_expression [65530,65581]" at="0"/>
  <insert-node tree="(: ( [65555,65556]" parent="call_expression [65530,65581]" at="1"/>
  <move-tree tree="call_argument [32588,32597]" parent="call_expression [65530,65581]" at="2"/>
  <insert-node tree=",: , [65565,65566]" parent="call_expression [65530,65581]" at="3"/>
  <insert-tree tree="call_argument [65567,65572]" parent="call_expression [65530,65581]" at="4"/>
  <insert-node tree=",: , [65572,65573]" parent="call_expression [65530,65581]" at="5"/>
  <move-tree tree="call_argument [83986,83992]" parent="call_expression [65530,65581]" at="6"/>
  <insert-node tree="): ) [65580,65581]" parent="call_expression [65530,65581]" at="7"/>
  <insert-node tree="binary_expression [65596,65616]" parent="binary_expression [65596,65671]" at="0"/>
  <insert-node tree="&amp;&amp;: &amp;&amp; [65617,65619]" parent="binary_expression [65596,65671]" at="1"/>
  <move-tree tree="binary_expression [61193,61239]" parent="binary_expression [65596,65671]" at="2"/>
  <update-node tree="identifier: updatePrice [74896,74907]" label="oracleCapture"/>
  <insert-node tree="{: { [67123,67124]" parent="block_statement [67123,67214]" at="0"/>
  <insert-tree tree="expression_statement [67137,67153]" parent="block_statement [67123,67214]" at="1"/>
  <insert-tree tree="expression_statement [67166,67184]" parent="block_statement [67123,67214]" at="2"/>
  <move-tree tree="return_statement [35578,35585]" parent="block_statement [67123,67214]" at="3"/>
  <insert-node tree="}: } [67213,67214]" parent="block_statement [67123,67214]" at="4"/>
  <insert-tree tree="member_expression [67228,67242]" parent="call_expression [67228,67257]" at="0"/>
  <insert-node tree="(: ( [67242,67243]" parent="call_expression [67228,67257]" at="1"/>
  <insert-node tree="call_argument [67243,67256]" parent="call_expression [67228,67257]" at="2"/>
  <insert-node tree="): ) [67256,67257]" parent="call_expression [67228,67257]" at="3"/>
  <insert-node tree="{: { [67259,67260]" parent="block_statement [67259,67407]" at="0"/>
  <move-tree tree="expression_statement [30808,30901]" parent="block_statement [67259,67407]" at="1"/>
  <insert-tree tree="expression_statement [67357,67377]" parent="block_statement [67259,67407]" at="2"/>
  <move-tree tree="return_statement [28944,28951]" parent="block_statement [67259,67407]" at="3"/>
  <insert-node tree="}: } [67406,67407]" parent="block_statement [67259,67407]" at="4"/>
  <update-node tree="identifier: internalAmount [33449,33463]" label="delta"/>
  <update-node tree="identifier: _getTransferValues [33571,33589]" label="limit"/>
  <insert-tree tree="call_argument [67582,67606]" parent="call_expression [67576,67607]" at="2"/>
  <update-node tree="identifier: daiAmount [86304,86313]" label="newDebt"/>
  <update-node tree="identifier: tax [32011,32014]" label="delta"/>
  <update-node tree="identifier: balanceOfPhantom [81502,81518]" label="newSupply"/>
  <insert-node tree="identifier: increaseSupply [68113,68127]" parent="call_expression [68113,68138]" at="0"/>
  <update-node tree="identifier: internalAmountAfterTax [32750,32772]" label="supplyChangeLimit"/>
  <insert-node tree="(: ( [68598,68599]" parent="variable_declaration_tuple [68598,68637]" at="0"/>
  <move-tree tree="variable_declaration [75625,75650]" parent="variable_declaration_tuple [68598,68637]" at="1"/>
  <insert-node tree=",: , [68624,68625]" parent="variable_declaration_tuple [68598,68637]" at="2"/>
  <move-tree tree="variable_declaration [74967,74977]" parent="variable_declaration_tuple [68598,68637]" at="3"/>
  <insert-node tree="): ) [68636,68637]" parent="variable_declaration_tuple [68598,68637]" at="4"/>
  <move-tree tree="member_expression [116524,116538]" parent="call_expression [68640,68658]" at="0"/>
  <insert-node tree="identifier: bootstrappingAt [68673,68688]" parent="call_expression [68673,68704]" at="0"/>
  <insert-node tree="(: ( [68688,68689]" parent="call_expression [68673,68704]" at="1"/>
  <insert-node tree="call_argument [68689,68703]" parent="call_expression [68673,68704]" at="2"/>
  <insert-node tree="): ) [68703,68704]" parent="call_expression [68673,68704]" at="3"/>
  <insert-tree tree="member_expression [71512,71524]" parent="call_expression [71512,71622]" at="0"/>
  <insert-node tree="(: ( [71524,71525]" parent="call_expression [71512,71622]" at="1"/>
  <insert-tree tree="call_argument [71538,71559]" parent="call_expression [71512,71622]" at="2"/>
  <insert-node tree=",: , [71559,71560]" parent="call_expression [71512,71622]" at="3"/>
  <insert-tree tree="call_argument [71573,71577]" parent="call_expression [71512,71622]" at="4"/>
  <insert-node tree=",: , [71577,71578]" parent="call_expression [71512,71622]" at="5"/>
  <move-tree tree="call_argument [21286,21322]" parent="call_expression [71512,71622]" at="6"/>
  <insert-node tree="): ) [71621,71622]" parent="call_expression [71512,71622]" at="7"/>
  <update-node tree="identifier: balanceOfRewardedWithPhantom [81355,81383]" label="balanceBeforeDeposit"/>
  <insert-tree tree="call_argument [71911,71924]" parent="call_expression [71877,71932]" at="4"/>
  <insert-node tree=",: , [71924,71925]" parent="call_expression [71877,71932]" at="5"/>
  <update-node tree="identifier: totalRewardedWithPhantom [81275,81299]" label="depositAmount"/>
  <insert-node tree="identifier: require [72035,72042]" parent="call_expression [72035,72101]" at="0"/>
  <insert-node tree="(: ( [72042,72043]" parent="call_expression [72035,72101]" at="1"/>
  <insert-tree tree="call_argument [72043,72060]" parent="call_expression [72035,72101]" at="2"/>
  <insert-node tree=",: , [72060,72061]" parent="call_expression [72035,72101]" at="3"/>
  <move-tree tree="call_argument [22548,22586]" parent="call_expression [72035,72101]" at="4"/>
  <insert-node tree="): ) [72100,72101]" parent="call_expression [72035,72101]" at="5"/>
  <update-node tree="identifier: incrementBalanceOfClaimable [90594,90621]" label="incrementBalanceOfStaged"/>
  <update-node tree="identifier: totalBonded [81165,81176]" label="balance"/>
  <insert-node tree="identifier: incrementBalanceOf [72767,72785]" parent="call_expression [72767,72806]" at="0"/>
  <insert-node tree="(: ( [72785,72786]" parent="call_expression [72767,72806]" at="1"/>
  <move-tree tree="call_argument [88693,88703]" parent="call_expression [72767,72806]" at="2"/>
  <insert-node tree=",: , [72796,72797]" parent="call_expression [72767,72806]" at="3"/>
  <insert-tree tree="call_argument [72798,72805]" parent="call_expression [72767,72806]" at="4"/>
  <insert-node tree="): ) [72805,72806]" parent="call_expression [72767,72806]" at="5"/>
  <insert-node tree="identifier: incrementTotalBonded [72817,72837]" parent="call_expression [72817,72844]" at="0"/>
  <insert-node tree="(: ( [72837,72838]" parent="call_expression [72817,72844]" at="1"/>
  <move-tree tree="call_argument [59063,59068]" parent="call_expression [72817,72844]" at="2"/>
  <insert-node tree="): ) [72843,72844]" parent="call_expression [72817,72844]" at="3"/>
  <update-node tree="identifier: lastReserve [75903,75914]" label="staged"/>
  <update-node tree="identifier: decrementBalanceOfClaimable [89258,89285]" label="incrementBalanceOfStaged"/>
  <insert-tree tree="call_argument [73254,73260]" parent="call_expression [73217,73261]" at="4"/>
  <update-node tree="identifier: incrementBalanceOfStaged [90541,90565]" label="decrementTotalBonded"/>
  <move-tree tree="call_argument [19191,19230]" parent="call_expression [73271,73337]" at="5"/>
  <update-node tree="identifier: incrementBalanceOfBonded [89798,89822]" label="decrementBalanceOf"/>
  <insert-node tree=",: , [73383,73384]" parent="call_expression [73347,73417]" at="5"/>
  <move-tree tree="call_argument [17841,17883]" parent="call_expression [73347,73417]" at="6"/>
  <update-node tree="identifier: newClaimable [90918,90930]" label="staged"/>
  <update-node tree="identifier: priceCumulative [75548,75563]" label="balance"/>
  <insert-node tree="identifier: decrementTotalBonded [73740,73760]" parent="call_expression [73740,73805]" at="0"/>
  <insert-node tree="(: ( [73760,73761]" parent="call_expression [73740,73805]" at="1"/>
  <move-tree tree="call_argument [89298,89303]" parent="call_expression [73740,73805]" at="2"/>
  <insert-node tree=",: , [73766,73767]" parent="call_expression [73740,73805]" at="3"/>
  <move-tree tree="call_argument [66364,66401]" parent="call_expression [73740,73805]" at="4"/>
  <insert-node tree="): ) [73804,73805]" parent="call_expression [73740,73805]" at="5"/>
  <update-node tree="identifier: require [66699,66706]" label="decrementBalanceOf"/>
  <move-tree tree="call_argument [89877,89887]" parent="call_expression [73815,73887]" at="2"/>
  <insert-node tree=",: , [73853,73854]" parent="call_expression [73815,73887]" at="5"/>
  <move-tree tree="call_argument [91304,91342]" parent="call_expression [79029,79139]" at="2"/>
  <insert-node tree="{: { [79179,79180]" parent="block_statement [79179,79505]" at="0"/>
  <insert-node tree="expression_statement [79193,79329]" parent="block_statement [79179,79505]" at="1"/>
  <insert-tree tree="expression_statement [79343,79403]" parent="block_statement [79179,79505]" at="2"/>
  <insert-tree tree="emit_statement [79416,79495]" parent="block_statement [79179,79505]" at="3"/>
  <insert-node tree="}: } [79504,79505]" parent="block_statement [79179,79505]" at="4"/>
  <update-node tree="identifier: lastReserve [74927,74938]" label="bonded"/>
  <update-node tree="identifier: updateReserve [74941,74954]" label="balanceOf"/>
  <insert-tree tree="call_argument [79683,79693]" parent="call_expression [79673,79694]" at="2"/>
  <insert-node tree="{: { [79805,79806]" parent="block_statement [79805,79836]" at="0"/>
  <move-tree tree="return_statement [28573,28580]" parent="block_statement [79805,79836]" at="1"/>
  <insert-node tree="}: } [79835,79836]" parent="block_statement [79805,79836]" at="2"/>
  <insert-node tree="{: { [79889,79890]" parent="block_statement [79889,79982]" at="0"/>
  <move-tree tree="expression_statement [24465,24549]" parent="block_statement [79889,79982]" at="1"/>
  <insert-node tree="}: } [79981,79982]" parent="block_statement [79889,79982]" at="2"/>
  <insert-node tree="{: { [80035,80036]" parent="block_statement [80035,80130]" at="0"/>
  <move-tree tree="expression_statement [23757,23822]" parent="block_statement [80035,80130]" at="1"/>
  <insert-node tree="}: } [80129,80130]" parent="block_statement [80035,80130]" at="2"/>
  <insert-node tree="identifier: recordVote [80354,80364]" parent="call_expression [80354,80393]" at="0"/>
  <update-node tree="identifier: decrementBalanceOfPhantom [90747,90772]" label="placeLock"/>
  <update-node tree="identifier: value [91872,91877]" label="candidate"/>
  <update-node tree="identifier: lessDai [91879,91886]" label="vote"/>
  <update-node tree="identifier: newUniv2 [91888,91896]" label="bonded"/>
  <update-node tree="identifier: priceCumulative [74284,74299]" label="endsAfter"/>
  <insert-tree tree="member_expression [80695,80744]" parent="call_expression [80695,80747]" at="0"/>
  <insert-node tree="(: ( [80744,80745]" parent="call_expression [80695,80747]" at="1"/>
  <move-tree tree="call_argument [35960,35961]" parent="call_expression [80695,80747]" at="2"/>
  <insert-node tree="): ) [80746,80747]" parent="call_expression [80695,80747]" at="3"/>
  <insert-tree tree="call_argument [80784,80803]" parent="call_expression [80758,80856]" at="2"/>
  <move-tree tree="member_expression [92998,93010]" parent="call_expression [80867,81058]" at="0"/>
  <insert-node tree="(: ( [80879,80880]" parent="call_expression [80867,81058]" at="1"/>
  <insert-tree tree="call_argument [80893,80998]" parent="call_expression [80867,81058]" at="2"/>
  <insert-node tree=",: , [80998,80999]" parent="call_expression [80867,81058]" at="3"/>
  <move-tree tree="call_argument [93047,93051]" parent="call_expression [80867,81058]" at="4"/>
  <insert-node tree=",: , [81016,81017]" parent="call_expression [80867,81058]" at="5"/>
  <move-tree tree="call_argument [90798,90834]" parent="call_expression [80867,81058]" at="6"/>
  <insert-node tree="): ) [81057,81058]" parent="call_expression [80867,81058]" at="7"/>
  <insert-tree tree="member_expression [81069,81081]" parent="call_expression [81069,81195]" at="0"/>
  <insert-node tree="(: ( [81081,81082]" parent="call_expression [81069,81195]" at="1"/>
  <insert-tree tree="call_argument [81095,81139]" parent="call_expression [81069,81195]" at="2"/>
  <insert-node tree=",: , [81139,81140]" parent="call_expression [81069,81195]" at="3"/>
  <insert-tree tree="call_argument [81153,81157]" parent="call_expression [81069,81195]" at="4"/>
  <insert-node tree=",: , [81157,81158]" parent="call_expression [81069,81195]" at="5"/>
  <move-tree tree="call_argument [90701,90736]" parent="call_expression [81069,81195]" at="6"/>
  <insert-node tree="): ) [81194,81195]" parent="call_expression [81069,81195]" at="7"/>
  <update-node tree="identifier: value [89403,89408]" label="candidate"/>
  <move-tree tree="member_expression [92837,92849]" parent="call_expression [81463,81611]" at="0"/>
  <insert-node tree="(: ( [81475,81476]" parent="call_expression [81463,81611]" at="1"/>
  <insert-tree tree="call_argument [81489,81555]" parent="call_expression [81463,81611]" at="2"/>
  <insert-node tree=",: , [81555,81556]" parent="call_expression [81463,81611]" at="3"/>
  <move-tree tree="call_argument [92905,92909]" parent="call_expression [81463,81611]" at="4"/>
  <insert-node tree=",: , [81573,81574]" parent="call_expression [81463,81611]" at="5"/>
  <move-tree tree="call_argument [89305,89343]" parent="call_expression [81463,81611]" at="6"/>
  <insert-node tree="): ) [81610,81611]" parent="call_expression [81463,81611]" at="7"/>
  <insert-node tree="{: { [82144,82145]" parent="block_statement [82144,82181]" at="0"/>
  <insert-node tree="return_statement [82158,82171]" parent="block_statement [82144,82181]" at="1"/>
  <insert-node tree="}: } [82180,82181]" parent="block_statement [82144,82181]" at="2"/>
  <update-node tree="identifier: externalAmountAfterTax [33498,33520]" label="stake"/>
  <move-tree tree="member_expression [75653,75666]" parent="call_expression [82219,82267]" at="0"/>
  <insert-node tree="(: ( [82232,82233]" parent="call_expression [82219,82267]" at="1"/>
  <insert-node tree="call_argument [82233,82251]" parent="call_expression [82219,82267]" at="2"/>
  <insert-node tree=",: , [82251,82252]" parent="call_expression [82219,82267]" at="3"/>
  <insert-tree tree="call_argument [82253,82266]" parent="call_expression [82219,82267]" at="4"/>
  <insert-node tree="): ) [82266,82267]" parent="call_expression [82219,82267]" at="5"/>
  <insert-tree tree="member_expression [83410,83433]" parent="call_expression [83410,83450]" at="0"/>
  <move-tree tree="call_argument [116828,116843]" parent="call_expression [83410,83450]" at="3"/>
  <move-tree tree="member_expression [68067,68082]" parent="call_argument [83624,83639]" at="0"/>
  <insert-node tree="call_expression [16887,16947]" parent="member_expression [16887,16957]" at="0"/>
  <insert-node tree=".: . [16947,16948]" parent="member_expression [16887,16957]" at="1"/>
  <insert-node tree="identifier: asUint256 [16948,16957]" parent="member_expression [16887,16957]" at="2"/>
  <insert-tree tree="call_expression [17725,17769]" parent="variable_declaration_statement [17690,17770]" at="2"/>
  <insert-tree tree="call_expression [17823,17860]" parent="variable_declaration_statement [17783,17861]" at="2"/>
  <move-tree tree="variable_declaration [34227,34261]" parent="variable_declaration_statement [17874,17935]" at="0"/>
  <insert-node tree="=: = [17906,17907]" parent="variable_declaration_statement [17874,17935]" at="1"/>
  <insert-tree tree="call_expression [17908,17934]" parent="variable_declaration_statement [17874,17935]" at="2"/>
  <move-tree tree="variable_declaration [34276,34318]" parent="variable_declaration_statement [17948,18022]" at="0"/>
  <insert-node tree="=: = [17985,17986]" parent="variable_declaration_statement [17948,18022]" at="1"/>
  <insert-tree tree="call_expression [17987,18021]" parent="variable_declaration_statement [17948,18022]" at="2"/>
  <insert-node tree="call_expression [18385,18484]" parent="member_expression [18385,18488]" at="0"/>
  <insert-node tree=".: . [18484,18485]" parent="member_expression [18385,18488]" at="1"/>
  <insert-node tree="identifier: sub [18485,18488]" parent="member_expression [18385,18488]" at="2"/>
  <insert-node tree="call_expression [18784,18900]" parent="member_expression [18784,18904]" at="0"/>
  <insert-node tree=".: . [18900,18901]" parent="member_expression [18784,18904]" at="1"/>
  <insert-node tree="identifier: sub [18901,18904]" parent="member_expression [18784,18904]" at="2"/>
  <insert-node tree="call_expression [18905,18924]" parent="call_argument [18905,18924]" at="0"/>
  <move-tree tree="call_expression [86201,86209]" parent="member_expression [54066,54084]" at="0"/>
  <insert-node tree=".: . [54074,54075]" parent="member_expression [54066,54084]" at="1"/>
  <insert-node tree="identifier: balanceOf [54075,54084]" parent="member_expression [54066,54084]" at="2"/>
  <move-tree tree="call_expression [116504,116512]" parent="member_expression [54103,54116]" at="0"/>
  <insert-node tree=".: . [54111,54112]" parent="member_expression [54103,54116]" at="1"/>
  <insert-node tree="identifier: mint [54112,54116]" parent="member_expression [54103,54116]" at="2"/>
  <insert-node tree="call_expression [54167,54194]" parent="member_expression [54167,54198]" at="0"/>
  <insert-node tree=".: . [54194,54195]" parent="member_expression [54167,54198]" at="1"/>
  <insert-node tree="identifier: sub [54195,54198]" parent="member_expression [54167,54198]" at="2"/>
  <insert-node tree="call_expression [54272,54299]" parent="expression_statement [54272,54300]" at="0"/>
  <update-node tree="identifier: mint [86656,86660]" label="balanceOf"/>
  <insert-tree tree="call_expression [54535,54543]" parent="member_expression [54535,54556]" at="0"/>
  <update-node tree="identifier: LibEIP712 [58031,58040]" label="transferFrom"/>
  <insert-node tree="identifier: realTransferValue [54749,54766]" parent="call_argument [54749,54766]" at="0"/>
  <move-tree tree="call_expression [116809,116817]" parent="member_expression [55145,55158]" at="0"/>
  <insert-node tree=".: . [55153,55154]" parent="member_expression [55145,55158]" at="1"/>
  <insert-node tree="identifier: burn [55154,55158]" parent="member_expression [55145,55158]" at="2"/>
  <insert-node tree="call_expression [57753,57845]" parent="call_argument [57753,57845]" at="0"/>
  <insert-node tree="call_expression [58434,58470]" parent="expression_statement [58434,58471]" at="0"/>
  <insert-node tree="call_expression [58484,58512]" parent="expression_statement [58484,58513]" at="0"/>
  <insert-node tree="call_expression [58619,58648]" parent="expression_statement [58619,58649]" at="0"/>
  <update-node tree="identifier: lessDai [91435,91442]" label="lessRedeemable"/>
  <insert-node tree="call_expression [61781,61810]" parent="binary_expression [61781,61858]" at="0"/>
  <insert-node tree="*: * [61811,61812]" parent="binary_expression [61781,61858]" at="1"/>
  <insert-tree tree="parenthesized_expression [61813,61858]" parent="binary_expression [61781,61858]" at="2"/>
  <insert-tree tree="binary_expression [62803,62821]" parent="call_argument [62803,62821]" at="0"/>
  <insert-tree tree="binary_expression [62931,62968]" parent="call_argument [62931,62968]" at="0"/>
  <update-node tree="identifier: value [90694,90699]" label="epoch"/>
  <update-node tree="identifier: amount [20027,20033]" label="couponEpoch"/>
  <insert-node tree="identifier: redeemAmount [63845,63857]" parent="call_argument [63845,63857]" at="0"/>
  <update-node tree="identifier: newUniv2 [91721,91729]" label="redeemAmount"/>
  <insert-node tree="identifier: epoch [65467,65472]" parent="call_argument [65467,65472]" at="0"/>
  <move-tree tree="member_expression [11088,11098]" parent="binary_expression [65596,65616]" at="0"/>
  <insert-node tree="!=: != [65607,65609]" parent="binary_expression [65596,65616]" at="1"/>
  <insert-node tree="identifier: sender [65610,65616]" parent="binary_expression [65596,65616]" at="2"/>
  <move-tree tree="call_expression [30463,30530]" parent="expression_statement [65687,65781]" at="0"/>
  <move-tree tree="call_argument [30485,30491]" parent="call_expression [65687,65780]" at="3"/>
  <move-tree tree="call_expression [27676,27689]" parent="call_argument [67243,67256]" at="0"/>
  <move-tree tree="call_expression [30828,30900]" parent="expression_statement [67273,67344]" at="0"/>
  <update-node tree="identifier: price0Cumulative [75310,75326]" label="newRedeemable"/>
  <update-node tree="identifier: price1Cumulative [75336,75352]" label="lessDebt"/>
  <move-tree tree="type_name [91444,91451]" parent="variable_declaration [68092,68109]" at="0"/>
  <update-node tree="identifier: blockTimestamp [75361,75375]" label="newBonded"/>
  <insert-node tree="identifier: newSupply [68128,68137]" parent="call_argument [68128,68137]" at="0"/>
  <update-node tree="identifier: setup [116533,116538]" label="capture"/>
  <insert-node tree="call_expression [68689,68703]" parent="call_argument [68689,68703]" at="0"/>
  <move-tree tree="call_expression [74149,74162]" parent="return_statement [68806,68827]" at="1"/>
  <update-node tree="identifier: transfer [88942,88950]" label="transferFrom"/>
  <insert-node tree="identifier: balanceBeforeDeposit [72004,72024]" parent="call_argument [72004,72024]" at="0"/>
  <update-node tree="identifier: newClaimable [90634,90646]" label="depositAmount"/>
  <move-tree tree="ternary_expression [89645,89718]" parent="member_expression [72620,72742]" at="0"/>
  <insert-node tree="call_expression [73142,73180]" parent="member_expression [73142,73184]" at="0"/>
  <update-node tree="identifier: mul [90499,90502]" label="div"/>
  <move-tree tree="call_expression [90470,90498]" parent="call_argument [73185,73206]" at="0"/>
  <update-node tree="identifier: value [90578,90583]" label="staged"/>
  <insert-node tree="identifier: balance [73846,73853]" parent="call_argument [73846,73853]" at="0"/>
  <insert-node tree="call_expression [79193,79328]" parent="expression_statement [79193,79329]" at="0"/>
  <insert-tree tree="call_expression [79541,79596]" parent="call_argument [79541,79596]" at="0"/>
  <update-node tree="identifier: pair [86590,86594]" label="candidate"/>
  <update-node tree="identifier: daiAmount [86596,86605]" label="vote"/>
  <update-node tree="identifier: lessPhantom [90785,90796]" label="candidate"/>
  <insert-tree tree="call_expression [80585,80607]" parent="call_argument [80585,80607]" at="0"/>
  <insert-tree tree="call_expression [81373,81395]" parent="call_argument [81373,81395]" at="0"/>
  <insert-tree tree="call_expression [81648,81751]" parent="call_argument [81648,81751]" at="0"/>
  <insert-node tree="return: return [82158,82164]" parent="return_statement [82158,82171]" at="0"/>
  <move-tree tree="boolean_literal [74164,74169]" parent="return_statement [82158,82171]" at="1"/>
  <insert-node tree="call_expression [82233,82251]" parent="call_argument [82233,82251]" at="0"/>
  <update-node tree="identifier: transferFrom [88680,88692]" label="excludeAccount"/>
  <insert-node tree="member_expression [16887,16939]" parent="call_expression [16887,16947]" at="0"/>
  <insert-node tree="(: ( [16939,16940]" parent="call_expression [16887,16947]" at="1"/>
  <move-tree tree="call_argument [29963,29969]" parent="call_expression [16887,16947]" at="2"/>
  <insert-node tree="): ) [16946,16947]" parent="call_expression [16887,16947]" at="3"/>
  <update-node tree="identifier: valueToMint [29936,29947]" label="premiumCurve"/>
  <update-node tree="identifier: valueToBurn [30685,30696]" label="premiumCurveDelta"/>
  <update-node tree="identifier: internalAmount [34247,34261]" label="premiumFlat"/>
  <update-node tree="identifier: externalAmountAfterTax [34296,34318]" label="premiumFlatDelta"/>
  <insert-tree tree="member_expression [18385,18402]" parent="call_expression [18385,18484]" at="0"/>
  <insert-node tree="(: ( [18402,18403]" parent="call_expression [18385,18484]" at="1"/>
  <insert-node tree="call_argument [18416,18474]" parent="call_expression [18385,18484]" at="2"/>
  <insert-node tree="): ) [18483,18484]" parent="call_expression [18385,18484]" at="3"/>
  <move-tree tree="member_expression [35987,36019]" parent="call_expression [18784,18900]" at="0"/>
  <insert-node tree="(: ( [18801,18802]" parent="call_expression [18784,18900]" at="1"/>
  <insert-node tree="call_argument [18815,18890]" parent="call_expression [18784,18900]" at="2"/>
  <insert-node tree="): ) [18899,18900]" parent="call_expression [18784,18900]" at="3"/>
  <insert-tree tree="member_expression [18905,18918]" parent="call_expression [18905,18924]" at="0"/>
  <insert-node tree="(: ( [18918,18919]" parent="call_expression [18905,18924]" at="1"/>
  <move-tree tree="call_argument [65414,65415]" parent="call_expression [18905,18924]" at="2"/>
  <insert-node tree=",: , [18920,18921]" parent="call_expression [18905,18924]" at="3"/>
  <insert-tree tree="call_argument [18922,18923]" parent="call_expression [18905,18924]" at="4"/>
  <insert-node tree="): ) [18923,18924]" parent="call_expression [18905,18924]" at="5"/>
  <insert-tree tree="member_expression [54167,54185]" parent="call_expression [54167,54194]" at="0"/>
  <insert-node tree="(: ( [54185,54186]" parent="call_expression [54167,54194]" at="1"/>
  <move-tree tree="call_argument [81444,81451]" parent="call_expression [54167,54194]" at="2"/>
  <insert-node tree="): ) [54193,54194]" parent="call_expression [54167,54194]" at="3"/>
  <insert-node tree="identifier: increaseDebt [54272,54284]" parent="call_expression [54272,54299]" at="0"/>
  <insert-node tree="(: ( [54284,54285]" parent="call_expression [54272,54299]" at="1"/>
  <move-tree tree="call_argument [30105,30118]" parent="call_expression [54272,54299]" at="2"/>
  <insert-node tree="): ) [54298,54299]" parent="call_expression [54272,54299]" at="3"/>
  <update-node tree="identifier: IUniswapV2Pair [86635,86649]" label="dollar"/>
  <insert-node tree="member_expression [57753,57826]" parent="call_expression [57753,57845]" at="0"/>
  <insert-node tree="(: ( [57826,57827]" parent="call_expression [57753,57845]" at="1"/>
  <insert-tree tree="call_argument [57827,57844]" parent="call_expression [57753,57845]" at="2"/>
  <insert-node tree="): ) [57844,57845]" parent="call_expression [57753,57845]" at="3"/>
  <insert-tree tree="member_expression [58434,58447]" parent="call_expression [58434,58470]" at="0"/>
  <insert-node tree="(: ( [58447,58448]" parent="call_expression [58434,58470]" at="1"/>
  <insert-tree tree="call_argument [58448,58461]" parent="call_expression [58434,58470]" at="2"/>
  <insert-node tree=",: , [58461,58462]" parent="call_expression [58434,58470]" at="3"/>
  <move-tree tree="call_argument [29770,29776]" parent="call_expression [58434,58470]" at="4"/>
  <insert-node tree="): ) [58469,58470]" parent="call_expression [58434,58470]" at="5"/>
  <insert-node tree="identifier: incrementTotalBonded [58484,58504]" parent="call_expression [58484,58512]" at="0"/>
  <insert-node tree="(: ( [58504,58505]" parent="call_expression [58484,58512]" at="1"/>
  <move-tree tree="call_argument [29833,29839]" parent="call_expression [58484,58512]" at="2"/>
  <insert-node tree="): ) [58511,58512]" parent="call_expression [58484,58512]" at="3"/>
  <insert-tree tree="member_expression [58619,58632]" parent="call_expression [58619,58648]" at="0"/>
  <insert-node tree="(: ( [58632,58633]" parent="call_expression [58619,58648]" at="1"/>
  <insert-tree tree="call_argument [58633,58639]" parent="call_expression [58619,58648]" at="2"/>
  <insert-node tree=",: , [58639,58640]" parent="call_expression [58619,58648]" at="3"/>
  <move-tree tree="call_argument [30590,30596]" parent="call_expression [58619,58648]" at="4"/>
  <insert-node tree="): ) [58647,58648]" parent="call_expression [58619,58648]" at="5"/>
  <insert-tree tree="member_expression [61781,61807]" parent="call_expression [61781,61810]" at="0"/>
  <insert-node tree="(: ( [61807,61808]" parent="call_expression [61781,61810]" at="1"/>
  <move-tree tree="call_argument [36020,36021]" parent="call_expression [61781,61810]" at="2"/>
  <insert-node tree="): ) [61809,61810]" parent="call_expression [61781,61810]" at="3"/>
  <update-node tree="identifier: recovered [58845,58854]" label="redeemAmount"/>
  <insert-node tree="&gt;=: &gt;= [64528,64530]" parent="binary_expression [64515,64540]" at="1"/>
  <insert-node tree="identifier: minOutput [64531,64540]" parent="binary_expression [64515,64540]" at="2"/>
  <update-node tree="identifier: allowance [61193,61202]" label="allowanceCoupons"/>
  <insert-node tree="identifier: decrementAllowanceCoupons [65687,65712]" parent="call_expression [65687,65780]" at="0"/>
  <move-tree tree="call_argument [61281,61287]" parent="call_expression [65687,65780]" at="3"/>
  <insert-tree tree="call_argument [65721,65731]" parent="call_expression [65687,65780]" at="4"/>
  <insert-node tree=",: , [65731,65732]" parent="call_expression [65687,65780]" at="5"/>
  <insert-node tree=",: , [65739,65740]" parent="call_expression [65687,65780]" at="7"/>
  <insert-node tree="identifier: decrementTotalRedeemable [67273,67297]" parent="call_expression [67273,67343]" at="0"/>
  <insert-tree tree="member_expression [68689,68700]" parent="call_expression [68689,68703]" at="0"/>
  <insert-node tree="(: ( [68700,68701]" parent="call_expression [68689,68703]" at="1"/>
  <move-tree tree="call_argument [36116,36117]" parent="call_expression [68689,68703]" at="2"/>
  <insert-node tree="): ) [68702,68703]" parent="call_expression [68689,68703]" at="3"/>
  <update-node tree="identifier: univ2 [88934,88939]" label="dollar"/>
  <move-tree tree="binary_expression [89612,89630]" parent="ternary_expression [72620,72738]" at="0"/>
  <insert-tree tree="call_expression [72714,72738]" parent="ternary_expression [72620,72738]" at="4"/>
  <insert-tree tree="member_expression [73142,73151]" parent="call_expression [73142,73180]" at="0"/>
  <insert-node tree="(: ( [73151,73152]" parent="call_expression [73142,73180]" at="1"/>
  <insert-node tree="call_argument [73152,73179]" parent="call_expression [73142,73180]" at="2"/>
  <insert-node tree="): ) [73179,73180]" parent="call_expression [73142,73180]" at="3"/>
  <update-node tree="identifier: balanceOfPhantom [90470,90486]" label="balanceOf"/>
  <insert-node tree="&gt;: &gt; [79077,79078]" parent="binary_expression [79055,79080]" at="1"/>
  <insert-node tree="number_literal: 0 [79079,79080]" parent="binary_expression [79055,79080]" at="2"/>
  <insert-tree tree="member_expression [79193,79205]" parent="call_expression [79193,79328]" at="0"/>
  <insert-node tree="(: ( [79205,79206]" parent="call_expression [79193,79328]" at="1"/>
  <insert-tree tree="call_argument [79223,79245]" parent="call_expression [79193,79328]" at="2"/>
  <insert-node tree=",: , [79245,79246]" parent="call_expression [79193,79328]" at="3"/>
  <insert-tree tree="call_argument [79263,79267]" parent="call_expression [79193,79328]" at="4"/>
  <insert-node tree=",: , [79267,79268]" parent="call_expression [79193,79328]" at="5"/>
  <move-tree tree="call_argument [61379,61422]" parent="call_expression [79193,79328]" at="6"/>
  <insert-node tree="): ) [79327,79328]" parent="call_expression [79193,79328]" at="7"/>
  <update-node tree="identifier: require [24465,24472]" label="decrementRejectFor"/>
  <insert-tree tree="call_argument [79922,79931]" parent="call_expression [79903,79971]" at="2"/>
  <insert-tree tree="call_argument [79933,79939]" parent="call_expression [79903,79971]" at="4"/>
  <insert-node tree=",: , [79939,79940]" parent="call_expression [79903,79971]" at="5"/>
  <update-node tree="identifier: require [23757,23764]" label="decrementApproveFor"/>
  <insert-tree tree="call_argument [80069,80078]" parent="call_expression [80049,80119]" at="2"/>
  <insert-tree tree="call_argument [80080,80086]" parent="call_expression [80049,80119]" at="4"/>
  <insert-node tree=",: , [80086,80087]" parent="call_expression [80049,80119]" at="5"/>
  <insert-tree tree="call_expression [81856,81877]" parent="binary_expression [81856,81900]" at="0"/>
  <insert-node tree="&gt;: &gt; [81878,81879]" parent="binary_expression [81856,81900]" at="1"/>
  <insert-tree tree="call_expression [81880,81900]" parent="binary_expression [81856,81900]" at="2"/>
  <insert-node tree="identifier: balanceOf [82233,82242]" parent="call_expression [82233,82251]" at="0"/>
  <insert-node tree="(: ( [82242,82243]" parent="call_expression [82233,82251]" at="1"/>
  <move-tree tree="call_argument [23775,23782]" parent="call_expression [82233,82251]" at="2"/>
  <insert-node tree="): ) [82250,82251]" parent="call_expression [82233,82251]" at="3"/>
  <update-node tree="identifier: univ2 [88672,88677]" label="dollar"/>
  <insert-node tree="call_expression [16887,16935]" parent="member_expression [16887,16939]" at="0"/>
  <insert-node tree=".: . [16935,16936]" parent="member_expression [16887,16939]" at="1"/>
  <insert-node tree="identifier: mul [16936,16939]" parent="member_expression [16887,16939]" at="2"/>
  <move-tree tree="call_expression [29950,29981]" parent="call_argument [18416,18474]" at="0"/>
  <move-tree tree="call_expression [36002,36015]" parent="member_expression [18784,18801]" at="0"/>
  <update-node tree="identifier: mul [36016,36019]" label="div"/>
  <insert-node tree="call_expression [18815,18890]" parent="call_argument [18815,18890]" at="0"/>
  <move-tree tree="call_expression [92193,92261]" parent="member_expression [57753,57826]" at="0"/>
  <insert-node tree=".: . [57822,57823]" parent="member_expression [57753,57826]" at="1"/>
  <insert-node tree="identifier: add [57823,57826]" parent="member_expression [57753,57826]" at="2"/>
  <update-node tree="identifier: getPoolExitLockupEpochs [85216,85239]" label="getCouponExpiration"/>
  <insert-tree tree="member_expression [65645,65655]" parent="call_argument [65645,65655]" at="0"/>
  <insert-tree tree="call_expression [67298,67315]" parent="call_argument [67298,67315]" at="0"/>
  <move-tree tree="call_expression [90190,90217]" parent="call_argument [73152,73179]" at="0"/>
  <update-node tree="identifier: totalRewardedWithPhantom [91616,91640]" label="value"/>
  <insert-tree tree="call_expression [73644,73657]" parent="call_argument [73644,73657]" at="0"/>
  <update-node tree="identifier: balanceOfRewarded [91304,91321]" label="balanceOf"/>
  <insert-node tree="identifier: effectivePremium [16887,16903]" parent="call_expression [16887,16935]" at="0"/>
  <insert-node tree="(: ( [16903,16904]" parent="call_expression [16887,16935]" at="1"/>
  <insert-tree tree="call_argument [16904,16915]" parent="call_expression [16887,16935]" at="2"/>
  <insert-node tree=",: , [16915,16916]" parent="call_expression [16887,16935]" at="3"/>
  <insert-tree tree="call_argument [16917,16926]" parent="call_expression [16887,16935]" at="4"/>
  <insert-node tree=",: , [16926,16927]" parent="call_expression [16887,16935]" at="5"/>
  <move-tree tree="call_argument [30712,30718]" parent="call_expression [16887,16935]" at="6"/>
  <insert-node tree="): ) [16934,16935]" parent="call_expression [16887,16935]" at="7"/>
  <insert-node tree="member_expression [18815,18864]" parent="call_expression [18815,18890]" at="0"/>
  <insert-node tree="(: ( [18864,18865]" parent="call_expression [18815,18890]" at="1"/>
  <insert-tree tree="call_argument [18865,18889]" parent="call_expression [18815,18890]" at="2"/>
  <insert-node tree="): ) [18889,18890]" parent="call_expression [18815,18890]" at="3"/>
  <insert-node tree="identifier: value [72653,72658]" parent="member_expression [72653,72662]" at="0"/>
  <move-tree tree="call_expression [89668,89703]" parent="call_argument [72663,72698]" at="0"/>
  <update-node tree="identifier: div [29971,29974]" label="mul"/>
  <insert-node tree="call_expression [18436,18473]" parent="call_argument [18436,18473]" at="0"/>
  <move-tree tree="call_expression [30699,30730]" parent="member_expression [18815,18864]" at="0"/>
  <insert-node tree=".: . [18860,18861]" parent="member_expression [18815,18864]" at="1"/>
  <insert-node tree="identifier: mul [18861,18864]" parent="member_expression [18815,18864]" at="2"/>
  <move-tree tree="call_expression [92229,92242]" parent="call_argument [57808,57821]" at="0"/>
  <insert-tree tree="call_argument [18429,18430]" parent="call_expression [18416,18431]" at="2"/>
  <insert-tree tree="member_expression [18436,18470]" parent="call_expression [18436,18473]" at="0"/>
  <insert-node tree="(: ( [18470,18471]" parent="call_expression [18436,18473]" at="1"/>
  <move-tree tree="call_argument [36062,36063]" parent="call_expression [18436,18473]" at="2"/>
  <insert-node tree="): ) [18472,18473]" parent="call_expression [18436,18473]" at="3"/>
  <move-tree tree="call_expression [81179,81192]" parent="binary_expression [57753,57803]" at="2"/>
  <update-node tree="identifier: div [30720,30723]" label="mul"/>
  <insert-tree tree="call_expression [18835,18859]" parent="call_argument [18835,18859]" at="0"/>
  <insert-tree tree="call_argument [18828,18829]" parent="call_expression [18815,18830]" at="2"/>
  <update-node tree="identifier: univ2 [92193,92198]" label="dollar"/>
  <delete-node tree="contract: contract [10746,10754]"/>
  <delete-node tree="identifier: Context [10755,10762]"/>
  <delete-node tree="{: { [10763,10764]"/>
  <delete-node tree="comment: // Empty internal constructor, to prevent people from mistakenly deploying [10769,10843]"/>
  <delete-node tree="comment: // an instance of this contract, which should be used via inheritance. [10848,10918]"/>
  <delete-tree tree="constructor_definition [10923,10950]"/>
  <delete-node tree="comment: // solhint-disable-previous-line no-empty-blocks [10955,11003]"/>
  <delete-node tree="function: function [11009,11017]"/>
  <delete-node tree="identifier: _msgSender [11018,11028]"/>
  <delete-node tree="(: ( [11028,11029]"/>
  <delete-node tree="): ) [11029,11030]"/>
  <delete-tree tree="visibility [11031,11039]"/>
  <delete-tree tree="state_mutability [11040,11044]"/>
  <delete-tree tree="return_type_definition [11045,11070]"/>
  <delete-node tree="{: { [11071,11072]"/>
  <delete-node tree="return: return [11081,11087]"/>
  <delete-node tree="return_statement [11081,11099]"/>
  <delete-node tree="}: } [11104,11105]"/>
  <delete-node tree="function_body [11071,11105]"/>
  <delete-node tree="function_definition [11009,11105]"/>
  <delete-tree tree="function_definition [11111,11333]"/>
  <delete-node tree="}: } [11334,11335]"/>
  <delete-node tree="contract_body [10763,11335]"/>
  <delete-node tree="contract_declaration [10746,11335]"/>
  <delete-node tree="comment: /**  * @dev Extension of {ERC20} that allows token holders to destroy both their own  * tokens and those that they have an allowance for, in a way that can be  * recognized off-chain (via event analysis).  */ [22599,22807]"/>
  <delete-node tree="contract: contract [22808,22816]"/>
  <delete-node tree="identifier: ERC20Burnable [22817,22830]"/>
  <delete-node tree="is: is [22831,22833]"/>
  <delete-tree tree="inheritance_specifier [22834,22841]"/>
  <delete-node tree=",: , [22841,22842]"/>
  <delete-tree tree="inheritance_specifier [22843,22848]"/>
  <delete-node tree="{: { [22849,22850]"/>
  <delete-node tree="comment: /**      * @dev Destroys `amount` tokens from the caller.      *      * See {ERC20-_burn}.      */ [22855,22953]"/>
  <delete-node tree="function: function [22958,22966]"/>
  <delete-node tree="identifier: burn [22967,22971]"/>
  <delete-node tree="(: ( [22971,22972]"/>
  <delete-node tree="): ) [22986,22987]"/>
  <delete-tree tree="visibility [22988,22994]"/>
  <delete-node tree="{: { [22995,22996]"/>
  <delete-node tree="identifier: _burn [23005,23010]"/>
  <delete-node tree="(: ( [23010,23011]"/>
  <delete-tree tree="call_argument [23011,23023]"/>
  <delete-node tree=",: , [23023,23024]"/>
  <delete-node tree="): ) [23031,23032]"/>
  <delete-node tree="call_expression [23005,23032]"/>
  <delete-node tree="expression_statement [23005,23033]"/>
  <delete-node tree="}: } [23038,23039]"/>
  <delete-node tree="function_body [22995,23039]"/>
  <delete-node tree="function_definition [22958,23039]"/>
  <delete-node tree="comment: /**      * @dev See {ERC20-_burnFrom}.      */ [23045,23091]"/>
  <delete-node tree="}: } [23198,23199]"/>
  <delete-node tree="contract_body [22849,23199]"/>
  <delete-node tree="contract_declaration [22808,23199]"/>
  <delete-node tree="comment: /**  * @title Roles  * @dev Library for managing addresses assigned to a Role.  */ [23201,23283]"/>
  <delete-node tree="library: library [23284,23291]"/>
  <delete-node tree="identifier: Roles [23292,23297]"/>
  <delete-node tree="{: { [23298,23299]"/>
  <delete-tree tree="struct_declaration [23304,23365]"/>
  <delete-node tree="comment: /**      * @dev Give an account access to this role.      */ [23371,23431]"/>
  <delete-tree tree="function_definition [23436,23611]"/>
  <delete-node tree="comment: /**      * @dev Remove an account's access to this role.      */ [23617,23681]"/>
  <delete-node tree="function: function [23686,23694]"/>
  <delete-node tree="identifier: remove [23695,23701]"/>
  <delete-node tree="(: ( [23701,23702]"/>
  <delete-tree tree="parameter [23702,23719]"/>
  <delete-node tree=",: , [23719,23720]"/>
  <delete-tree tree="parameter [23721,23736]"/>
  <delete-node tree="): ) [23736,23737]"/>
  <delete-tree tree="visibility [23738,23746]"/>
  <delete-node tree="{: { [23747,23748]"/>
  <delete-tree tree="expression_statement [23831,23860]"/>
  <delete-node tree="}: } [23865,23866]"/>
  <delete-node tree="function_body [23747,23866]"/>
  <delete-node tree="function_definition [23686,23866]"/>
  <delete-node tree="comment: /**      * @dev Check if an account has this role.      * @return bool      */ [23872,23950]"/>
  <delete-tree tree="function_definition [23955,24155]"/>
  <delete-node tree="}: } [24156,24157]"/>
  <delete-node tree="contract_body [23298,24157]"/>
  <delete-node tree="library_declaration [23284,24157]"/>
  <delete-node tree="contract: contract [24159,24167]"/>
  <delete-node tree="identifier: MinterRole [24168,24178]"/>
  <delete-node tree="is: is [24179,24181]"/>
  <delete-tree tree="inheritance_specifier [24182,24189]"/>
  <delete-node tree="{: { [24190,24191]"/>
  <delete-tree tree="using_directive [24196,24223]"/>
  <delete-node tree="event: event [24277,24282]"/>
  <delete-node tree="identifier: MinterRemoved [24283,24296]"/>
  <delete-node tree="(: ( [24296,24297]"/>
  <delete-node tree="): ) [24320,24321]"/>
  <delete-node tree="event_definition [24277,24322]"/>
  <delete-tree tree="type_name [24328,24338]"/>
  <delete-node tree="identifier: _minters [24347,24355]"/>
  <delete-node tree="state_variable_declaration [24328,24356]"/>
  <delete-tree tree="constructor_definition [24362,24427]"/>
  <delete-node tree="modifier: modifier [24433,24441]"/>
  <delete-node tree="identifier: onlyMinter [24442,24452]"/>
  <delete-node tree="(: ( [24452,24453]"/>
  <delete-node tree="): ) [24453,24454]"/>
  <delete-node tree="{: { [24455,24456]"/>
  <delete-tree tree="expression_statement [24558,24560]"/>
  <delete-node tree="}: } [24565,24566]"/>
  <delete-node tree="function_body [24455,24566]"/>
  <delete-node tree="modifier_definition [24433,24566]"/>
  <delete-tree tree="function_definition [24572,24679]"/>
  <delete-node tree="function: function [24685,24693]"/>
  <delete-node tree="identifier: addMinter [24694,24703]"/>
  <delete-node tree="(: ( [24703,24704]"/>
  <delete-tree tree="parameter [24704,24719]"/>
  <delete-node tree="): ) [24719,24720]"/>
  <delete-tree tree="visibility [24721,24727]"/>
  <delete-tree tree="modifier_invocation [24728,24738]"/>
  <delete-node tree="{: { [24739,24740]"/>
  <delete-node tree="identifier: _addMinter [24749,24759]"/>
  <delete-node tree="(: ( [24759,24760]"/>
  <delete-node tree="): ) [24767,24768]"/>
  <delete-node tree="call_expression [24749,24768]"/>
  <delete-node tree="expression_statement [24749,24769]"/>
  <delete-node tree="}: } [24774,24775]"/>
  <delete-node tree="function_body [24739,24775]"/>
  <delete-node tree="function_definition [24685,24775]"/>
  <delete-tree tree="function_definition [24781,24858]"/>
  <delete-node tree="function: function [24864,24872]"/>
  <delete-node tree="identifier: _addMinter [24873,24883]"/>
  <delete-node tree="(: ( [24883,24884]"/>
  <delete-tree tree="parameter [24884,24899]"/>
  <delete-node tree="): ) [24899,24900]"/>
  <delete-tree tree="function_body [24910,24983]"/>
  <delete-node tree="function_definition [24864,24983]"/>
  <delete-tree tree="function_definition [24989,25116]"/>
  <delete-node tree="}: } [25117,25118]"/>
  <delete-node tree="contract_body [24190,25118]"/>
  <delete-node tree="contract_declaration [24159,25118]"/>
  <delete-node tree="comment: /**  * @dev Contract module which provides a basic access control mechanism, where  * there is an account (an owner) that can be granted exclusive access to  * specific functions.  *  * This module is used through inheritance. It will make available the modifier  * `onlyOwner`, which can be applied to your functions to restrict their use to  * the owner.  */ [25120,25480]"/>
  <delete-node tree="contract: contract [25481,25489]"/>
  <delete-node tree="identifier: Ownable [25490,25497]"/>
  <delete-node tree="is: is [25498,25500]"/>
  <delete-tree tree="inheritance_specifier [25501,25508]"/>
  <delete-node tree="{: { [25509,25510]"/>
  <delete-tree tree="visibility [25523,25530]"/>
  <delete-node tree="identifier: _owner [25531,25537]"/>
  <delete-node tree="state_variable_declaration [25515,25538]"/>
  <delete-node tree="comment: /**      * @dev Initializes the contract setting the deployer as the initial owner.      */ [25634,25725]"/>
  <delete-tree tree="constructor_definition [25730,25889]"/>
  <delete-node tree="comment: /**      * @dev Returns the address of the current owner.      */ [25895,25960]"/>
  <delete-tree tree="function_definition [25965,26042]"/>
  <delete-node tree="comment: /**      * @dev Throws if called by any account other than the owner.      */ [26048,26125]"/>
  <delete-tree tree="modifier_definition [26130,26233]"/>
  <delete-node tree="comment: /**      * @dev Returns true if the caller is the current owner.      */ [26239,26311]"/>
  <delete-tree tree="function_definition [26316,26408]"/>
  <delete-node tree="comment: /**      * @dev Leaves the contract without owner. It will not be possible to call      * `onlyOwner` functions anymore. Can only be called by the current owner.      *      * NOTE: Renouncing ownership will leave the contract without an owner,      * thereby removing any functionality that is only available to the owner.      */ [26414,26745]"/>
  <delete-tree tree="function_definition [26750,26887]"/>
  <delete-node tree="comment: /**      * @dev Transfers ownership of the contract to a new account (`newOwner`).      * Can only be called by the current owner.      */ [26893,27031]"/>
  <delete-tree tree="function_definition [27036,27143]"/>
  <delete-node tree="comment: /**      * @dev Transfers ownership of the contract to a new account (`newOwner`).      */ [27149,27239]"/>
  <delete-node tree="}: } [27470,27471]"/>
  <delete-node tree="contract_body [25509,27471]"/>
  <delete-node tree="contract_declaration [25481,27471]"/>
  <delete-node tree="contract: contract [27473,27481]"/>
  <delete-node tree="identifier: Reflect [27482,27489]"/>
  <delete-node tree="is: is [27490,27492]"/>
  <delete-tree tree="inheritance_specifier [27493,27498]"/>
  <delete-node tree=",: , [27498,27499]"/>
  <delete-tree tree="inheritance_specifier [27500,27507]"/>
  <delete-node tree="{: { [27508,27509]"/>
  <delete-tree tree="state_variable_declaration [27551,27593]"/>
  <delete-tree tree="state_variable_declaration [27598,27640]"/>
  <delete-tree tree="type_name [27646,27658]"/>
  <delete-node tree="identifier: ratio [27668,27673]"/>
  <delete-node tree="=: = [27674,27675]"/>
  <delete-node tree="state_variable_declaration [27646,27690]"/>
  <delete-node tree="identifier: reflectionError [27712,27727]"/>
  <delete-node tree="state_variable_declaration [27696,27728]"/>
  <delete-node tree="identifier: adjustmentIndex [27750,27765]"/>
  <delete-node tree="state_variable_declaration [27734,27766]"/>
  <delete-tree tree="state_variable_declaration [27772,27823]"/>
  <delete-node tree="mapping: mapping [27828,27835]"/>
  <delete-node tree="(: ( [27835,27836]"/>
  <delete-tree tree="primitive_type [27836,27843]"/>
  <delete-node tree="=&gt;: =&gt; [27844,27846]"/>
  <delete-node tree="): ) [27854,27855]"/>
  <delete-node tree="type_name [27828,27855]"/>
  <delete-node tree="identifier: lastAdjustment [27865,27879]"/>
  <delete-node tree="state_variable_declaration [27828,27880]"/>
  <delete-tree tree="state_variable_declaration [27885,27928]"/>
  <delete-node tree="function: function [27935,27943]"/>
  <delete-node tree="identifier: totalSupply [27944,27955]"/>
  <delete-node tree="(: ( [27955,27956]"/>
  <delete-node tree="): ) [27956,27957]"/>
  <delete-tree tree="visibility [27958,27964]"/>
  <delete-tree tree="state_mutability [27965,27969]"/>
  <delete-tree tree="function_body [27988,28068]"/>
  <delete-node tree="function_definition [27935,28068]"/>
  <delete-node tree="function: function [28074,28082]"/>
  <delete-node tree="identifier: balanceOf [28083,28092]"/>
  <delete-node tree="(: ( [28092,28093]"/>
  <delete-node tree="): ) [28108,28109]"/>
  <delete-tree tree="function_body [28140,28460]"/>
  <delete-node tree="function_definition [28074,28460]"/>
  <delete-node tree="function: function [28466,28474]"/>
  <delete-node tree="identifier: excludeAccount [28475,28489]"/>
  <delete-node tree="(: ( [28489,28490]"/>
  <delete-tree tree="parameter [28490,28505]"/>
  <delete-node tree="): ) [28505,28506]"/>
  <delete-tree tree="modifier_invocation [28516,28525]"/>
  <delete-node tree="{: { [28526,28527]"/>
  <delete-node tree="if: if [28536,28538]"/>
  <delete-node tree="(: ( [28539,28540]"/>
  <delete-tree tree="array_access [28540,28559]"/>
  <delete-node tree="): ) [28559,28560]"/>
  <delete-node tree="if_statement [28536,28580]"/>
  <delete-tree tree="expression_statement [28590,28617]"/>
  <delete-tree tree="expression_statement [28627,28676]"/>
  <delete-tree tree="expression_statement [28685,28750]"/>
  <delete-tree tree="expression_statement [28759,28824]"/>
  <delete-node tree="}: } [28829,28830]"/>
  <delete-node tree="function_body [28526,28830]"/>
  <delete-node tree="function_definition [28466,28830]"/>
  <delete-node tree="function: function [28836,28844]"/>
  <delete-node tree="identifier: includeAccount [28845,28859]"/>
  <delete-node tree="(: ( [28859,28860]"/>
  <delete-tree tree="parameter [28860,28875]"/>
  <delete-node tree="): ) [28875,28876]"/>
  <delete-tree tree="modifier_invocation [28886,28895]"/>
  <delete-node tree="{: { [28896,28897]"/>
  <delete-node tree="if: if [28906,28908]"/>
  <delete-node tree="(: ( [28909,28910]"/>
  <delete-tree tree="array_access [28910,28930]"/>
  <delete-node tree="): ) [28930,28931]"/>
  <delete-node tree="if_statement [28906,28951]"/>
  <delete-tree tree="expression_statement [28961,28989]"/>
  <delete-tree tree="expression_statement [28999,29064]"/>
  <delete-tree tree="expression_statement [29073,29138]"/>
  <delete-tree tree="expression_statement [29147,29196]"/>
  <delete-tree tree="expression_statement [29206,29248]"/>
  <delete-node tree="}: } [29253,29254]"/>
  <delete-node tree="function_body [28896,29254]"/>
  <delete-node tree="function_definition [28836,29254]"/>
  <delete-node tree="function: function [29260,29268]"/>
  <delete-node tree="identifier: _adjustBalance [29269,29283]"/>
  <delete-node tree="(: ( [29283,29284]"/>
  <delete-tree tree="parameter [29284,29299]"/>
  <delete-node tree="): ) [29299,29300]"/>
  <delete-tree tree="function_body [29310,29545]"/>
  <delete-node tree="function_definition [29260,29545]"/>
  <delete-node tree="function: function [29551,29559]"/>
  <delete-node tree="identifier: _mint [29560,29565]"/>
  <delete-node tree="(: ( [29565,29566]"/>
  <delete-node tree=",: , [29581,29582]"/>
  <delete-node tree="): ) [29597,29598]"/>
  <delete-node tree="{: { [29608,29609]"/>
  <delete-node tree="variable_declaration_statement [29618,29640]"/>
  <delete-node tree="if: if [29649,29651]"/>
  <delete-node tree="(: ( [29652,29653]"/>
  <delete-tree tree="array_access [29653,29672]"/>
  <delete-node tree="): ) [29672,29673]"/>
  <delete-node tree="{: { [29674,29675]"/>
  <delete-tree tree="expression_statement [29688,29711]"/>
  <delete-node tree="identifier: totalSupplyExcluded [29724,29743]"/>
  <delete-node tree="=: = [29744,29745]"/>
  <delete-tree tree="member_expression [29746,29769]"/>
  <delete-node tree="(: ( [29769,29770]"/>
  <delete-node tree="): ) [29776,29777]"/>
  <delete-node tree="call_expression [29746,29777]"/>
  <delete-node tree="assignment_expression [29724,29777]"/>
  <delete-node tree="expression_statement [29724,29778]"/>
  <delete-tree tree="array_access [29791,29808]"/>
  <delete-node tree="=: = [29809,29810]"/>
  <delete-tree tree="member_expression [29811,29832]"/>
  <delete-node tree="(: ( [29832,29833]"/>
  <delete-node tree="): ) [29839,29840]"/>
  <delete-node tree="call_expression [29811,29840]"/>
  <delete-node tree="assignment_expression [29791,29840]"/>
  <delete-node tree="expression_statement [29791,29841]"/>
  <delete-node tree="}: } [29850,29851]"/>
  <delete-node tree="block_statement [29674,29851]"/>
  <delete-node tree="else: else [29860,29864]"/>
  <delete-node tree="{: { [29865,29866]"/>
  <delete-tree tree="expression_statement [29879,29903]"/>
  <delete-tree tree="expression_statement [29995,30046]"/>
  <delete-node tree="identifier: totalSupplyStandard [30059,30078]"/>
  <delete-node tree="=: = [30079,30080]"/>
  <delete-tree tree="member_expression [30081,30104]"/>
  <delete-node tree="(: ( [30104,30105]"/>
  <delete-node tree="): ) [30118,30119]"/>
  <delete-node tree="call_expression [30081,30119]"/>
  <delete-node tree="assignment_expression [30059,30119]"/>
  <delete-node tree="expression_statement [30059,30120]"/>
  <delete-tree tree="expression_statement [30133,30188]"/>
  <delete-node tree="}: } [30197,30198]"/>
  <delete-node tree="block_statement [29865,30198]"/>
  <delete-node tree="if_statement [29649,30198]"/>
  <delete-tree tree="emit_statement [30208,30258]"/>
  <delete-node tree="}: } [30263,30264]"/>
  <delete-node tree="function_body [29608,30264]"/>
  <delete-node tree="function_definition [29551,30264]"/>
  <delete-node tree="function: function [30270,30278]"/>
  <delete-node tree="identifier: _burn [30279,30284]"/>
  <delete-node tree="(: ( [30284,30285]"/>
  <delete-tree tree="parameter [30285,30300]"/>
  <delete-node tree=",: , [30300,30301]"/>
  <delete-node tree="): ) [30316,30317]"/>
  <delete-tree tree="visibility [30318,30326]"/>
  <delete-node tree="{: { [30327,30328]"/>
  <delete-node tree="variable_declaration_statement [30337,30359]"/>
  <delete-node tree="if: if [30368,30370]"/>
  <delete-node tree="(: ( [30371,30372]"/>
  <delete-tree tree="array_access [30372,30391]"/>
  <delete-node tree="): ) [30391,30392]"/>
  <delete-node tree="else: else [30609,30613]"/>
  <delete-node tree="{: { [30614,30615]"/>
  <delete-tree tree="expression_statement [30628,30652]"/>
  <delete-tree tree="expression_statement [30744,30795]"/>
  <delete-tree tree="expression_statement [30914,30975]"/>
  <delete-node tree="}: } [30984,30985]"/>
  <delete-node tree="block_statement [30614,30985]"/>
  <delete-node tree="if_statement [30368,30985]"/>
  <delete-tree tree="emit_statement [30995,31045]"/>
  <delete-node tree="}: } [31050,31051]"/>
  <delete-node tree="function_body [30327,31051]"/>
  <delete-node tree="function_definition [30270,31051]"/>
  <delete-node tree="function: function [31057,31065]"/>
  <delete-node tree="identifier: _transfer [31066,31075]"/>
  <delete-node tree="(: ( [31075,31076]"/>
  <delete-tree tree="parameter [31076,31090]"/>
  <delete-node tree=",: , [31090,31091]"/>
  <delete-tree tree="parameter [31092,31109]"/>
  <delete-node tree=",: , [31109,31110]"/>
  <delete-node tree="): ) [31125,31126]"/>
  <delete-tree tree="visibility [31127,31135]"/>
  <delete-node tree="{: { [31136,31137]"/>
  <delete-node tree="variable_declaration_statement [31146,31174]"/>
  <delete-tree tree="if_statement [31184,31674]"/>
  <delete-tree tree="emit_statement [31684,31738]"/>
  <delete-node tree="}: } [31743,31744]"/>
  <delete-node tree="function_body [31136,31744]"/>
  <delete-node tree="function_definition [31057,31744]"/>
  <delete-node tree="function: function [31750,31758]"/>
  <delete-node tree="identifier: _transferBothExcluded [31759,31780]"/>
  <delete-node tree="(: ( [31780,31781]"/>
  <delete-tree tree="parameter [31781,31795]"/>
  <delete-node tree=",: , [31795,31796]"/>
  <delete-tree tree="parameter [31797,31814]"/>
  <delete-node tree=",: , [31814,31815]"/>
  <delete-node tree="): ) [31830,31831]"/>
  <delete-tree tree="return_type_definition [31841,31858]"/>
  <delete-node tree="{: { [31859,31860]"/>
  <delete-tree tree="expression_statement [32167,32237]"/>
  <delete-tree tree="expression_statement [32247,32298]"/>
  <delete-tree tree="expression_statement [32307,32358]"/>
  <delete-tree tree="expression_statement [32368,32382]"/>
  <delete-tree tree="return_statement [32400,32442]"/>
  <delete-node tree="}: } [32447,32448]"/>
  <delete-node tree="function_body [31859,32448]"/>
  <delete-node tree="function_definition [31750,32448]"/>
  <delete-node tree="function: function [32454,32462]"/>
  <delete-node tree="identifier: _transferFromExcluded [32463,32484]"/>
  <delete-node tree="(: ( [32484,32485]"/>
  <delete-tree tree="parameter [32485,32499]"/>
  <delete-node tree=",: , [32499,32500]"/>
  <delete-tree tree="parameter [32501,32518]"/>
  <delete-node tree=",: , [32518,32519]"/>
  <delete-node tree="): ) [32534,32535]"/>
  <delete-tree tree="visibility [32536,32544]"/>
  <delete-tree tree="return_type_definition [32545,32562]"/>
  <delete-node tree="{: { [32563,32564]"/>
  <delete-node tree="identifier: _adjustBalance [32573,32587]"/>
  <delete-node tree="(: ( [32587,32588]"/>
  <delete-node tree="): ) [32597,32598]"/>
  <delete-node tree="call_expression [32573,32598]"/>
  <delete-node tree="expression_statement [32573,32599]"/>
  <delete-node tree="(: ( [32609,32610]"/>
  <delete-node tree=",: , [32657,32658]"/>
  <delete-node tree=",: , [32658,32659]"/>
  <delete-node tree=",: , [32715,32716]"/>
  <delete-node tree=",: , [32772,32773]"/>
  <delete-tree tree="variable_declaration [32786,32809]"/>
  <delete-node tree="): ) [32818,32819]"/>
  <delete-node tree="variable_declaration_tuple [32609,32819]"/>
  <delete-node tree="=: = [32820,32821]"/>
  <delete-node tree="identifier: _getTransferValues [32822,32840]"/>
  <delete-node tree="(: ( [32840,32841]"/>
  <delete-node tree="): ) [32847,32848]"/>
  <delete-node tree="call_expression [32822,32848]"/>
  <delete-node tree="variable_declaration_statement [32609,32849]"/>
  <delete-tree tree="array_access [32859,32875]"/>
  <delete-node tree="=: = [32876,32877]"/>
  <delete-tree tree="member_expression [32878,32898]"/>
  <delete-node tree="(: ( [32898,32899]"/>
  <delete-tree tree="call_argument [32899,32913]"/>
  <delete-node tree=",: , [32913,32914]"/>
  <delete-node tree="): ) [32951,32952]"/>
  <delete-node tree="call_expression [32878,32952]"/>
  <delete-node tree="assignment_expression [32859,32952]"/>
  <delete-node tree="expression_statement [32859,32953]"/>
  <delete-tree tree="expression_statement [32962,33032]"/>
  <delete-tree tree="expression_statement [33042,33104]"/>
  <delete-tree tree="expression_statement [33113,33175]"/>
  <delete-tree tree="expression_statement [33185,33199]"/>
  <delete-tree tree="return_statement [33209,33251]"/>
  <delete-node tree="}: } [33256,33257]"/>
  <delete-node tree="function_body [32563,33257]"/>
  <delete-node tree="function_definition [32454,33257]"/>
  <delete-node tree="function: function [33263,33271]"/>
  <delete-node tree="identifier: _transferToExcluded [33272,33291]"/>
  <delete-node tree="(: ( [33291,33292]"/>
  <delete-tree tree="parameter [33292,33306]"/>
  <delete-node tree=",: , [33306,33307]"/>
  <delete-tree tree="parameter [33308,33325]"/>
  <delete-node tree=",: , [33325,33326]"/>
  <delete-node tree="): ) [33341,33342]"/>
  <delete-tree tree="visibility [33343,33351]"/>
  <delete-tree tree="return_type_definition [33352,33369]"/>
  <delete-node tree="{: { [33370,33371]"/>
  <delete-node tree="identifier: _adjustBalance [33380,33394]"/>
  <delete-node tree="(: ( [33394,33395]"/>
  <delete-node tree="): ) [33401,33402]"/>
  <delete-node tree="call_expression [33380,33402]"/>
  <delete-node tree="expression_statement [33380,33403]"/>
  <delete-tree tree="expression_statement [33711,33781]"/>
  <delete-tree tree="expression_statement [33791,33861]"/>
  <delete-tree tree="expression_statement [33870,33940]"/>
  <delete-tree tree="expression_statement [33950,33964]"/>
  <delete-tree tree="return_statement [33974,34016]"/>
  <delete-node tree="}: } [34021,34022]"/>
  <delete-node tree="function_body [33370,34022]"/>
  <delete-node tree="function_definition [33263,34022]"/>
  <delete-node tree="function: function [34028,34036]"/>
  <delete-node tree="identifier: _transferStandard [34037,34054]"/>
  <delete-node tree="(: ( [34054,34055]"/>
  <delete-tree tree="parameter [34055,34069]"/>
  <delete-node tree=",: , [34069,34070]"/>
  <delete-tree tree="parameter [34071,34088]"/>
  <delete-node tree=",: , [34088,34089]"/>
  <delete-node tree="): ) [34104,34105]"/>
  <delete-tree tree="visibility [34106,34114]"/>
  <delete-tree tree="return_type_definition [34115,34132]"/>
  <delete-node tree="{: { [34133,34134]"/>
  <delete-tree tree="expression_statement [34143,34166]"/>
  <delete-tree tree="expression_statement [34175,34201]"/>
  <delete-node tree="(: ( [34211,34212]"/>
  <delete-node tree=",: , [34212,34213]"/>
  <delete-node tree=",: , [34261,34262]"/>
  <delete-node tree=",: , [34318,34319]"/>
  <delete-tree tree="variable_declaration [34333,34375]"/>
  <delete-node tree=",: , [34375,34376]"/>
  <delete-tree tree="variable_declaration [34389,34412]"/>
  <delete-node tree="): ) [34421,34422]"/>
  <delete-node tree="variable_declaration_tuple [34211,34422]"/>
  <delete-node tree="=: = [34423,34424]"/>
  <delete-tree tree="call_expression [34425,34451]"/>
  <delete-node tree="variable_declaration_statement [34211,34452]"/>
  <delete-tree tree="expression_statement [34566,34636]"/>
  <delete-tree tree="expression_statement [34646,34660]"/>
  <delete-tree tree="return_statement [34670,34712]"/>
  <delete-node tree="}: } [34717,34718]"/>
  <delete-node tree="function_body [34133,34718]"/>
  <delete-node tree="function_definition [34028,34718]"/>
  <delete-node tree="function: function [34724,34732]"/>
  <delete-node tree="identifier: _getTransferValues [34733,34751]"/>
  <delete-node tree="(: ( [34751,34752]"/>
  <delete-node tree="): ) [34766,34767]"/>
  <delete-tree tree="visibility [34768,34776]"/>
  <delete-node tree="returns: returns [34782,34789]"/>
  <delete-node tree="(: ( [34790,34791]"/>
  <delete-node tree=",: , [34825,34826]"/>
  <delete-node tree=",: , [34861,34862]"/>
  <delete-node tree=",: , [34905,34906]"/>
  <delete-node tree=",: , [34949,34950]"/>
  <delete-tree tree="parameter [34951,34982]"/>
  <delete-node tree="): ) [34982,34983]"/>
  <delete-node tree="return_type_definition [34782,34983]"/>
  <delete-node tree="{: { [34984,34985]"/>
  <delete-tree tree="expression_statement [34994,35032]"/>
  <delete-tree tree="expression_statement [35041,35084]"/>
  <delete-node tree="=: = [35125,35126]"/>
  <delete-tree tree="call_expression [35127,35150]"/>
  <delete-node tree="variable_declaration_statement [35093,35151]"/>
  <delete-tree tree="expression_statement [35160,35197]"/>
  <delete-tree tree="expression_statement [35206,35263]"/>
  <delete-tree tree="expression_statement [35272,35329]"/>
  <delete-node tree="}: } [35334,35335]"/>
  <delete-node tree="function_body [34984,35335]"/>
  <delete-node tree="function_definition [34724,35335]"/>
  <delete-node tree="function: function [35341,35349]"/>
  <delete-node tree="identifier: _reflect [35350,35358]"/>
  <delete-node tree="(: ( [35358,35359]"/>
  <delete-node tree="): ) [35394,35395]"/>
  <delete-node tree="{: { [35405,35406]"/>
  <delete-node tree="=: = [35452,35453]"/>
  <delete-tree tree="call_expression [35454,35517]"/>
  <delete-node tree="variable_declaration_statement [35415,35518]"/>
  <delete-node tree="if: if [35527,35529]"/>
  <delete-node tree="(: ( [35530,35531]"/>
  <delete-tree tree="binary_expression [35531,35564]"/>
  <delete-node tree="): ) [35564,35565]"/>
  <delete-node tree="if_statement [35527,35585]"/>
  <delete-tree tree="expression_statement [35599,35668]"/>
  <delete-tree tree="expression_statement [35678,35773]"/>
  <delete-node tree="if: if [35782,35784]"/>
  <delete-node tree="(: ( [35785,35786]"/>
  <delete-tree tree="binary_expression [35786,35833]"/>
  <delete-node tree="): ) [35833,35834]"/>
  <delete-node tree="{: { [35835,35836]"/>
  <delete-tree tree="expression_statement [35849,35917]"/>
  <delete-tree tree="member_expression [35930,35941]"/>
  <delete-node tree="=: = [35942,35943]"/>
  <delete-tree tree="member_expression [35944,35959]"/>
  <delete-node tree="(: ( [35959,35960]"/>
  <delete-node tree="): ) [35961,35962]"/>
  <delete-node tree="call_expression [35944,35962]"/>
  <delete-node tree="assignment_expression [35930,35962]"/>
  <delete-node tree="expression_statement [35930,35963]"/>
  <delete-node tree="}: } [35972,35973]"/>
  <delete-node tree="block_statement [35835,35973]"/>
  <delete-node tree="if_statement [35782,35973]"/>
  <delete-node tree="if: if [35983,35985]"/>
  <delete-node tree="(: ( [35986,35987]"/>
  <delete-node tree="(: ( [36019,36020]"/>
  <delete-node tree="): ) [36021,36022]"/>
  <delete-node tree="call_expression [35987,36022]"/>
  <delete-node tree=".: . [36022,36023]"/>
  <delete-node tree="identifier: value [36023,36028]"/>
  <delete-node tree="member_expression [35987,36028]"/>
  <delete-node tree="): ) [36028,36029]"/>
  <delete-node tree="{: { [36030,36031]"/>
  <delete-node tree="identifier: ratio [36044,36049]"/>
  <delete-node tree="=: = [36050,36051]"/>
  <delete-tree tree="member_expression [36052,36061]"/>
  <delete-node tree="(: ( [36061,36062]"/>
  <delete-node tree="): ) [36063,36064]"/>
  <delete-node tree="call_expression [36052,36064]"/>
  <delete-node tree="assignment_expression [36044,36064]"/>
  <delete-node tree="expression_statement [36044,36065]"/>
  <delete-node tree="identifier: adjustmentIndex [36078,36093]"/>
  <delete-node tree="=: = [36094,36095]"/>
  <delete-tree tree="member_expression [36096,36115]"/>
  <delete-node tree="(: ( [36115,36116]"/>
  <delete-node tree="): ) [36117,36118]"/>
  <delete-node tree="call_expression [36096,36118]"/>
  <delete-node tree="assignment_expression [36078,36118]"/>
  <delete-node tree="expression_statement [36078,36119]"/>
  <delete-node tree="}: } [36128,36129]"/>
  <delete-node tree="block_statement [36030,36129]"/>
  <delete-node tree="if_statement [35983,36129]"/>
  <delete-node tree="}: } [36134,36135]"/>
  <delete-node tree="function_body [35405,36135]"/>
  <delete-node tree="function_definition [35341,36135]"/>
  <delete-node tree="}: } [36137,36138]"/>
  <delete-node tree="contract_body [27508,36138]"/>
  <delete-node tree="contract_declaration [27473,36138]"/>
  <delete-node tree="comment: /**  * @dev Optional functions from the ERC20 standard.  */ [36140,36199]"/>
  <delete-node tree="contract: contract [36200,36208]"/>
  <delete-node tree="identifier: ERC20Detailed [36209,36222]"/>
  <delete-node tree="is: is [36223,36225]"/>
  <delete-tree tree="inheritance_specifier [36226,36232]"/>
  <delete-node tree="{: { [36233,36234]"/>
  <delete-tree tree="type_name [36239,36245]"/>
  <delete-node tree="identifier: _name [36254,36259]"/>
  <delete-node tree="state_variable_declaration [36239,36260]"/>
  <delete-tree tree="type_name [36265,36271]"/>
  <delete-node tree="identifier: _symbol [36280,36287]"/>
  <delete-node tree="state_variable_declaration [36265,36288]"/>
  <delete-tree tree="type_name [36293,36298]"/>
  <delete-node tree="identifier: _decimals [36307,36316]"/>
  <delete-node tree="state_variable_declaration [36293,36317]"/>
  <delete-node tree="comment: /**      * @dev Sets the values for `name`, `symbol`, and `decimals`. All three of      * these values are immutable: they can only be set once during      * construction.      */ [36323,36502]"/>
  <delete-tree tree="constructor_definition [36507,36670]"/>
  <delete-node tree="comment: /**      * @dev Returns the name of the token.      */ [36676,36730]"/>
  <delete-tree tree="function_definition [36735,36816]"/>
  <delete-node tree="comment: /**      * @dev Returns the symbol of the token, usually a shorter version of the      * name.      */ [36822,36924]"/>
  <delete-tree tree="function_definition [36929,37014]"/>
  <delete-node tree="comment: /**      * @dev Returns the number of decimals used to get its user representation.      * For example, if `decimals` equals `2`, a balance of `505` tokens should      * be displayed to a user as `5,05` (`505 / 10 ** 2`).      *      * Tokens usually opt for a value of 18, imitating the relationship between      * Ether and Wei.      *      * NOTE: This information is only used for _display_ purposes: it in      * no way affects any of the arithmetic of the contract, including      * {IERC20-balanceOf} and {IERC20-transfer}.      */ [37020,37558]"/>
  <delete-tree tree="function_definition [37563,37644]"/>
  <delete-node tree="}: } [37645,37646]"/>
  <delete-node tree="contract_body [36233,37646]"/>
  <delete-node tree="contract_declaration [36200,37646]"/>
  <delete-node tree="comment: /*     Copyright 2019 dYdX Trading Inc.      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [37648,38247]"/>
  <delete-node tree="comment: /**  * @title Require  * @author dYdX  *  * Stringifies parameters to pretty-print revert messages. Costs more gas than regular require()  */ [38248,38389]"/>
  <delete-node tree="comment: /*     Copyright 2019 ZeroEx Intl.      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [47973,48567]"/>
  <delete-node tree="library: library [48568,48575]"/>
  <delete-node tree="identifier: LibEIP712 [48576,48585]"/>
  <delete-node tree="{: { [48586,48587]"/>
  <delete-node tree="comment: // Hash of the EIP712 Domain Separator Schema [48593,48638]"/>
  <delete-node tree="comment: // keccak256(abi.encodePacked( [48643,48673]"/>
  <delete-node tree="comment: //     &quot;EIP712Domain(&quot;, [48678,48701]"/>
  <delete-node tree="comment: //     &quot;string name,&quot;, [48706,48728]"/>
  <delete-node tree="comment: //     &quot;string version,&quot;, [48733,48758]"/>
  <delete-node tree="comment: //     &quot;uint256 chainId,&quot;, [48763,48789]"/>
  <delete-node tree="comment: //     &quot;address verifyingContract&quot;, [48794,48829]"/>
  <delete-node tree="comment: //     &quot;)&quot; [48834,48844]"/>
  <delete-node tree="comment: // )) [48849,48854]"/>
  <delete-tree tree="state_variable_declaration [48859,48991]"/>
  <delete-node tree="comment: /// @dev Calculates a EIP712 domain separator. [48997,49043]"/>
  <delete-node tree="comment: /// @param name The EIP712 domain name. [49048,49087]"/>
  <delete-node tree="comment: /// @param version The EIP712 domain version. [49092,49137]"/>
  <delete-node tree="comment: /// @param verifyingContract The EIP712 verifying contract. [49142,49201]"/>
  <delete-node tree="comment: /// @return EIP712 domain separator. [49206,49242]"/>
  <delete-node tree="function: function [49247,49255]"/>
  <delete-node tree="identifier: hashEIP712Domain [49256,49272]"/>
  <delete-node tree="(: ( [49272,49273]"/>
  <delete-tree tree="parameter [49282,49300]"/>
  <delete-node tree=",: , [49300,49301]"/>
  <delete-tree tree="parameter [49310,49331]"/>
  <delete-node tree=",: , [49331,49332]"/>
  <delete-node tree=",: , [49356,49357]"/>
  <delete-tree tree="parameter [49366,49391]"/>
  <delete-node tree="): ) [49396,49397]"/>
  <delete-tree tree="visibility [49402,49410]"/>
  <delete-tree tree="return_type_definition [49424,49448]"/>
  <delete-tree tree="function_body [49453,50482]"/>
  <delete-node tree="function_definition [49247,50482]"/>
  <delete-node tree="comment: /// @dev Calculates EIP712 encoding for a hash struct with a given domain hash. [50488,50567]"/>
  <delete-node tree="comment: /// @param eip712DomainHash Hash of the domain domain separator data, computed [50572,50650]"/>
  <delete-node tree="comment: ///                         with getDomainHash(). [50655,50704]"/>
  <delete-node tree="comment: /// @param hashStruct The EIP712 hash struct. [50709,50754]"/>
  <delete-node tree="comment: /// @return EIP712 hash applied to the given EIP712 Domain. [50759,50818]"/>
  <delete-node tree="function: function [50823,50831]"/>
  <delete-node tree="identifier: hashEIP712Message [50832,50849]"/>
  <delete-node tree="(: ( [50849,50850]"/>
  <delete-tree tree="parameter [50850,50874]"/>
  <delete-node tree=",: , [50874,50875]"/>
  <delete-tree tree="parameter [50876,50894]"/>
  <delete-node tree="): ) [50894,50895]"/>
  <delete-tree tree="visibility [50900,50908]"/>
  <delete-tree tree="return_type_definition [50922,50946]"/>
  <delete-tree tree="function_body [50951,51693]"/>
  <delete-node tree="function_definition [50823,51693]"/>
  <delete-node tree="}: } [51694,51695]"/>
  <delete-node tree="contract_body [48586,51695]"/>
  <delete-node tree="library_declaration [48568,51695]"/>
  <delete-node tree="(: ( [31869,31870]"/>
  <delete-node tree=",: , [31917,31918]"/>
  <delete-node tree=",: , [31918,31919]"/>
  <delete-node tree=",: , [31975,31976]"/>
  <delete-node tree=",: , [31976,31977]"/>
  <delete-node tree="): ) [32023,32024]"/>
  <delete-node tree="variable_declaration_tuple [31869,32024]"/>
  <delete-node tree="identifier: _getTransferValues [32027,32045]"/>
  <delete-node tree="identifier: ratio [29975,29980]"/>
  <delete-tree tree="member_expression [35987,35998]"/>
  <delete-node tree="&gt;=: &gt;= [35999,36001]"/>
  <delete-node tree="binary_expression [35987,36015]"/>
  <delete-node tree="identifier: ratio [30724,30729]"/>
  <delete-node tree="contract: contract [57517,57525]"/>
  <delete-node tree="identifier: Permittable [57526,57537]"/>
  <delete-node tree="is: is [57538,57540]"/>
  <delete-tree tree="inheritance_specifier [57541,57554]"/>
  <delete-node tree=",: , [57554,57555]"/>
  <delete-tree tree="inheritance_specifier [57556,57561]"/>
  <delete-node tree="{: { [57562,57563]"/>
  <delete-tree tree="state_variable_declaration [57568,57606]"/>
  <delete-node tree="comment: // keccak256(&quot;Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)&quot;); [57612,57711]"/>
  <delete-tree tree="state_variable_declaration [57716,57832]"/>
  <delete-tree tree="type_name [57837,57843]"/>
  <delete-node tree="constant: constant [57852,57860]"/>
  <delete-node tree="identifier: EIP712_VERSION [57861,57875]"/>
  <delete-node tree="=: = [57876,57877]"/>
  <delete-tree tree="string_literal [57878,57881]"/>
  <delete-node tree="state_variable_declaration [57837,57882]"/>
  <delete-tree tree="state_variable_declaration [57888,57927]"/>
  <delete-node tree="mapping: mapping [57933,57940]"/>
  <delete-node tree="(: ( [57940,57941]"/>
  <delete-tree tree="primitive_type [57941,57948]"/>
  <delete-node tree="=&gt;: =&gt; [57949,57951]"/>
  <delete-node tree="): ) [57959,57960]"/>
  <delete-node tree="type_name [57933,57960]"/>
  <delete-node tree="identifier: nonces [57961,57967]"/>
  <delete-node tree="state_variable_declaration [57933,57968]"/>
  <delete-node tree="constructor: constructor [57974,57985]"/>
  <delete-node tree="(: ( [57985,57986]"/>
  <delete-node tree="): ) [57986,57987]"/>
  <delete-node tree="public: public [57988,57994]"/>
  <delete-node tree="{: { [57995,57996]"/>
  <delete-node tree="}: } [58126,58127]"/>
  <delete-node tree="function_body [57995,58127]"/>
  <delete-node tree="constructor_definition [57974,58127]"/>
  <delete-node tree="function: function [58133,58141]"/>
  <delete-node tree="identifier: permit [58142,58148]"/>
  <delete-node tree="(: ( [58148,58149]"/>
  <delete-node tree=",: , [58171,58172]"/>
  <delete-tree tree="parameter [58181,58196]"/>
  <delete-node tree=",: , [58196,58197]"/>
  <delete-node tree=",: , [58219,58220]"/>
  <delete-node tree=",: , [58245,58246]"/>
  <delete-tree tree="parameter [58255,58262]"/>
  <delete-node tree=",: , [58262,58263]"/>
  <delete-tree tree="parameter [58272,58281]"/>
  <delete-node tree=",: , [58281,58282]"/>
  <delete-tree tree="parameter [58291,58300]"/>
  <delete-node tree="): ) [58305,58306]"/>
  <delete-node tree="{: { [58316,58317]"/>
  <delete-tree tree="variable_declaration_statement [58326,58637]"/>
  <delete-tree tree="variable_declaration_statement [58647,58694]"/>
  <delete-node tree="identifier: _approve [59038,59046]"/>
  <delete-node tree="(: ( [59046,59047]"/>
  <delete-tree tree="call_argument [59047,59052]"/>
  <delete-node tree=",: , [59052,59053]"/>
  <delete-node tree=",: , [59061,59062]"/>
  <delete-node tree="): ) [59068,59069]"/>
  <delete-node tree="call_expression [59038,59069]"/>
  <delete-node tree="expression_statement [59038,59070]"/>
  <delete-node tree="}: } [59075,59076]"/>
  <delete-node tree="function_body [58316,59076]"/>
  <delete-node tree="function_definition [58133,59076]"/>
  <delete-node tree="}: } [59077,59078]"/>
  <delete-node tree="contract_body [57562,59078]"/>
  <delete-node tree="contract_declaration [57517,59078]"/>
  <delete-node tree="contract: contract [60698,60706]"/>
  <delete-node tree="identifier: Dollar [60707,60713]"/>
  <delete-node tree="is: is [60714,60716]"/>
  <delete-tree tree="inheritance_specifier [60717,60724]"/>
  <delete-node tree=",: , [60724,60725]"/>
  <delete-tree tree="inheritance_specifier [60726,60733]"/>
  <delete-node tree=",: , [60733,60734]"/>
  <delete-tree tree="inheritance_specifier [60735,60745]"/>
  <delete-node tree=",: , [60745,60746]"/>
  <delete-tree tree="inheritance_specifier [60747,60758]"/>
  <delete-node tree=",: , [60758,60759]"/>
  <delete-tree tree="inheritance_specifier [60760,60773]"/>
  <delete-node tree="{: { [60774,60775]"/>
  <delete-tree tree="constructor_definition [60781,60886]"/>
  <delete-node tree="function: function [60892,60900]"/>
  <delete-node tree="identifier: mint [60901,60905]"/>
  <delete-node tree="(: ( [60905,60906]"/>
  <delete-node tree=",: , [60921,60922]"/>
  <delete-node tree="): ) [60937,60938]"/>
  <delete-tree tree="modifier_invocation [60939,60949]"/>
  <delete-tree tree="visibility [60950,60956]"/>
  <delete-tree tree="return_type_definition [60957,60971]"/>
  <delete-node tree="{: { [60972,60973]"/>
  <delete-tree tree="return_statement [61014,61026]"/>
  <delete-node tree="}: } [61031,61032]"/>
  <delete-node tree="function_body [60972,61032]"/>
  <delete-node tree="function_definition [60892,61032]"/>
  <delete-node tree="function: function [61038,61046]"/>
  <delete-node tree="identifier: transferFrom [61047,61059]"/>
  <delete-node tree="(: ( [61059,61060]"/>
  <delete-tree tree="parameter [61060,61074]"/>
  <delete-node tree=",: , [61074,61075]"/>
  <delete-tree tree="parameter [61076,61093]"/>
  <delete-node tree=",: , [61093,61094]"/>
  <delete-node tree="): ) [61109,61110]"/>
  <delete-tree tree="visibility [61111,61117]"/>
  <delete-tree tree="return_type_definition [61118,61132]"/>
  <delete-node tree="{: { [61133,61134]"/>
  <delete-node tree="identifier: _transfer [61143,61152]"/>
  <delete-node tree="(: ( [61152,61153]"/>
  <delete-tree tree="call_argument [61153,61159]"/>
  <delete-node tree=",: , [61159,61160]"/>
  <delete-tree tree="call_argument [61161,61170]"/>
  <delete-node tree=",: , [61170,61171]"/>
  <delete-node tree="): ) [61178,61179]"/>
  <delete-node tree="call_expression [61143,61179]"/>
  <delete-node tree="expression_statement [61143,61180]"/>
  <delete-tree tree="return_statement [61444,61456]"/>
  <delete-node tree="}: } [61461,61462]"/>
  <delete-node tree="function_body [61133,61462]"/>
  <delete-node tree="function_definition [61038,61462]"/>
  <delete-node tree="}: } [61463,61464]"/>
  <delete-node tree="contract_body [60774,61464]"/>
  <delete-node tree="contract_declaration [60698,61464]"/>
  <delete-node tree="interface: interface [61466,61475]"/>
  <delete-node tree="identifier: IUniswapV2Factory [61476,61493]"/>
  <delete-node tree="{: { [61494,61495]"/>
  <delete-tree tree="function_definition [61592,61641]"/>
  <delete-tree tree="function_definition [61646,61701]"/>
  <delete-tree tree="function_definition [61707,61793]"/>
  <delete-tree tree="function_definition [61798,61859]"/>
  <delete-tree tree="function_definition [61864,61919]"/>
  <delete-tree tree="function_definition [61925,62009]"/>
  <delete-tree tree="function_definition [62015,62051]"/>
  <delete-tree tree="function_definition [62056,62098]"/>
  <delete-node tree="}: } [62099,62100]"/>
  <delete-node tree="contract_body [61494,62100]"/>
  <delete-node tree="interface_declaration [61466,62100]"/>
  <delete-node tree="comment: //  [64501,64504]"/>
  <delete-node tree="comment: // computes square roots using the babylonian method [64505,64557]"/>
  <delete-node tree="comment: // https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method [64558,64642]"/>
  <delete-node tree="library: library [64643,64650]"/>
  <delete-node tree="identifier: Babylonian [64651,64661]"/>
  <delete-node tree="{: { [64662,64663]"/>
  <delete-node tree="function: function [64668,64676]"/>
  <delete-node tree="identifier: sqrt [64677,64681]"/>
  <delete-node tree="(: ( [64681,64682]"/>
  <delete-tree tree="parameter [64682,64688]"/>
  <delete-node tree="): ) [64688,64689]"/>
  <delete-tree tree="visibility [64690,64698]"/>
  <delete-tree tree="return_type_definition [64704,64720]"/>
  <delete-tree tree="function_body [64721,64982]"/>
  <delete-node tree="function_definition [64668,64982]"/>
  <delete-node tree="}: } [64983,64984]"/>
  <delete-node tree="contract_body [64662,64984]"/>
  <delete-node tree="library_declaration [64643,64984]"/>
  <delete-node tree="comment: //  [64986,64989]"/>
  <delete-node tree="comment: // a library for handling binary fixed point numbers (https://en.wikipedia.org/wiki/Q_(number_format)) [64990,65092]"/>
  <delete-node tree="library: library [65093,65100]"/>
  <delete-node tree="identifier: FixedPoint [65101,65111]"/>
  <delete-node tree="{: { [65112,65113]"/>
  <delete-node tree="comment: // range: [0, 2**112 - 1] [65118,65143]"/>
  <delete-node tree="comment: // resolution: 1 / 2**112 [65148,65173]"/>
  <delete-tree tree="struct_declaration [65178,65222]"/>
  <delete-node tree="comment: // range: [0, 2**144 - 1] [65228,65253]"/>
  <delete-node tree="comment: // resolution: 1 / 2**112 [65258,65283]"/>
  <delete-tree tree="struct_declaration [65288,65329]"/>
  <delete-tree tree="state_variable_declaration [65335,65375]"/>
  <delete-tree tree="type_name [65380,65384]"/>
  <delete-tree tree="visibility [65385,65392]"/>
  <delete-node tree="constant: constant [65393,65401]"/>
  <delete-node tree="identifier: Q112 [65402,65406]"/>
  <delete-node tree="=: = [65407,65408]"/>
  <delete-tree tree="primitive_type [65409,65413]"/>
  <delete-node tree="(: ( [65413,65414]"/>
  <delete-node tree="): ) [65415,65416]"/>
  <delete-node tree="type_cast_expression [65409,65416]"/>
  <delete-node tree="&lt;&lt;: &lt;&lt; [65417,65419]"/>
  <delete-node tree="identifier: RESOLUTION [65420,65430]"/>
  <delete-node tree="binary_expression [65409,65430]"/>
  <delete-node tree="state_variable_declaration [65380,65431]"/>
  <delete-tree tree="state_variable_declaration [65436,65484]"/>
  <delete-node tree="comment: // encode a uint112 as a UQ112x112 [65490,65524]"/>
  <delete-node tree="function: function [65529,65537]"/>
  <delete-node tree="identifier: encode [65538,65544]"/>
  <delete-node tree="(: ( [65544,65545]"/>
  <delete-tree tree="parameter [65545,65554]"/>
  <delete-node tree="): ) [65554,65555]"/>
  <delete-tree tree="visibility [65556,65564]"/>
  <delete-tree tree="return_type_definition [65570,65596]"/>
  <delete-tree tree="function_body [65597,65656]"/>
  <delete-node tree="function_definition [65529,65656]"/>
  <delete-node tree="comment: // encodes a uint144 as a UQ144x112 [65662,65697]"/>
  <delete-tree tree="function_definition [65702,65832]"/>
  <delete-node tree="comment: // divide a UQ112x112 by a uint112, returning a UQ112x112 [65838,65895]"/>
  <delete-tree tree="function_definition [65900,66095]"/>
  <delete-node tree="comment: // multiply a UQ112x112 by a uint, returning a UQ144x112 [66101,66157]"/>
  <delete-node tree="comment: // reverts on overflow [66162,66184]"/>
  <delete-node tree="function: function [66189,66197]"/>
  <delete-node tree="identifier: mul [66198,66201]"/>
  <delete-node tree="(: ( [66201,66202]"/>
  <delete-tree tree="parameter [66202,66223]"/>
  <delete-node tree=",: , [66223,66224]"/>
  <delete-tree tree="parameter [66225,66231]"/>
  <delete-node tree="): ) [66231,66232]"/>
  <delete-tree tree="visibility [66233,66241]"/>
  <delete-tree tree="state_mutability [66242,66246]"/>
  <delete-tree tree="return_type_definition [66247,66273]"/>
  <delete-node tree="{: { [66274,66275]"/>
  <delete-node tree="identifier: require [66300,66307]"/>
  <delete-node tree="(: ( [66307,66308]"/>
  <delete-tree tree="call_argument [66308,66362]"/>
  <delete-node tree=",: , [66362,66363]"/>
  <delete-node tree="): ) [66401,66402]"/>
  <delete-node tree="call_expression [66300,66402]"/>
  <delete-node tree="expression_statement [66300,66403]"/>
  <delete-tree tree="return_statement [66412,66432]"/>
  <delete-node tree="}: } [66437,66438]"/>
  <delete-node tree="function_body [66274,66438]"/>
  <delete-node tree="function_definition [66189,66438]"/>
  <delete-node tree="comment: // returns a UQ112x112 which represents the ratio of the numerator to the denominator [66444,66529]"/>
  <delete-node tree="comment: // equivalent to encode(numerator).div(denominator) [66534,66585]"/>
  <delete-node tree="function: function [66590,66598]"/>
  <delete-node tree="identifier: fraction [66599,66607]"/>
  <delete-node tree="(: ( [66607,66608]"/>
  <delete-tree tree="parameter [66608,66625]"/>
  <delete-node tree=",: , [66625,66626]"/>
  <delete-tree tree="parameter [66627,66646]"/>
  <delete-node tree="): ) [66646,66647]"/>
  <delete-tree tree="visibility [66648,66656]"/>
  <delete-tree tree="state_mutability [66657,66661]"/>
  <delete-tree tree="return_type_definition [66662,66688]"/>
  <delete-node tree="{: { [66689,66690]"/>
  <delete-tree tree="return_statement [66760,66827]"/>
  <delete-node tree="}: } [66832,66833]"/>
  <delete-node tree="function_body [66689,66833]"/>
  <delete-node tree="function_definition [66590,66833]"/>
  <delete-node tree="comment: // decode a UQ112x112 into a uint112 by truncating after the radix point [66839,66911]"/>
  <delete-tree tree="function_definition [66916,67041]"/>
  <delete-node tree="comment: // decode a UQ144x112 into a uint144 by truncating after the radix point [67047,67119]"/>
  <delete-tree tree="function_definition [67124,67252]"/>
  <delete-node tree="comment: // take the reciprocal of a UQ112x112 [67258,67295]"/>
  <delete-tree tree="function_definition [67300,67504]"/>
  <delete-node tree="comment: // square root of a UQ112x112 [67510,67539]"/>
  <delete-tree tree="function_definition [67544,67705]"/>
  <delete-node tree="}: } [67706,67707]"/>
  <delete-node tree="contract_body [65112,67707]"/>
  <delete-node tree="library_declaration [65093,67707]"/>
  <delete-node tree="comment: // library with helper methods for oracles that are concerned with computing average prices [67709,67800]"/>
  <delete-node tree="library: library [67801,67808]"/>
  <delete-node tree="identifier: UniswapV2OracleLibrary [67809,67831]"/>
  <delete-node tree="{: { [67832,67833]"/>
  <delete-tree tree="using_directive [67838,67861]"/>
  <delete-node tree="comment: // helper function that returns the current block timestamp within the range of uint32, i.e. [0, 2**32 - 1] [67867,67974]"/>
  <delete-node tree="function: function [67979,67987]"/>
  <delete-node tree="identifier: currentBlockTimestamp [67988,68009]"/>
  <delete-node tree="(: ( [68009,68010]"/>
  <delete-node tree="): ) [68010,68011]"/>
  <delete-tree tree="visibility [68012,68020]"/>
  <delete-tree tree="state_mutability [68021,68025]"/>
  <delete-tree tree="return_type_definition [68026,68042]"/>
  <delete-node tree="{: { [68043,68044]"/>
  <delete-node tree="return: return [68053,68059]"/>
  <delete-tree tree="primitive_type [68060,68066]"/>
  <delete-node tree="(: ( [68066,68067]"/>
  <delete-node tree="): ) [68092,68093]"/>
  <delete-node tree="type_cast_expression [68060,68093]"/>
  <delete-node tree="return_statement [68053,68094]"/>
  <delete-node tree="}: } [68099,68100]"/>
  <delete-node tree="function_body [68043,68100]"/>
  <delete-node tree="function_definition [67979,68100]"/>
  <delete-node tree="comment: // produces the cumulative price using counterfactuals to save gas and avoid a call to sync. [68106,68198]"/>
  <delete-tree tree="function_definition [68203,69241]"/>
  <delete-node tree="}: } [69242,69243]"/>
  <delete-node tree="contract_body [67832,69243]"/>
  <delete-node tree="library_declaration [67801,69243]"/>
  <delete-tree tree="library_declaration [69245,71181]"/>
  <delete-node tree="contract: contract [77221,77229]"/>
  <delete-node tree="identifier: IDAO [77230,77234]"/>
  <delete-node tree="{: { [77235,77236]"/>
  <delete-node tree="function: function [77241,77249]"/>
  <delete-node tree="identifier: epoch [77250,77255]"/>
  <delete-node tree="(: ( [77255,77256]"/>
  <delete-node tree="): ) [77256,77257]"/>
  <delete-tree tree="state_mutability [77267,77271]"/>
  <delete-tree tree="return_type_definition [77272,77289]"/>
  <delete-node tree="function_definition [77241,77290]"/>
  <delete-node tree="}: } [77291,77292]"/>
  <delete-node tree="contract_body [77235,77292]"/>
  <delete-node tree="contract_declaration [77221,77292]"/>
  <delete-node tree="identifier: _mint [60982,60987]"/>
  <delete-tree tree="call_argument [86650,86654]"/>
  <delete-node tree="identifier: hashEIP712Domain [58041,58057]"/>
  <delete-tree tree="call_argument [58058,58064]"/>
  <delete-tree tree="call_argument [58066,58080]"/>
  <delete-tree tree="call_argument [58082,58104]"/>
  <delete-node tree=",: , [58104,58105]"/>
  <delete-node tree="identifier: EIP712_DOMAIN_SEPARATOR [58005,58028]"/>
  <delete-node tree="=: = [58029,58030]"/>
  <delete-node tree="assignment_expression [58005,58120]"/>
  <delete-tree tree="binary_expression [58961,58976]"/>
  <delete-node tree=",: , [58994,58995]"/>
  <delete-tree tree="parameter [23114,23129]"/>
  <delete-tree tree="visibility [23147,23153]"/>
  <delete-node tree="identifier: _burnFrom [23164,23173]"/>
  <delete-tree tree="call_argument [58729,58747]"/>
  <delete-node tree=",: , [58765,58766]"/>
  <delete-tree tree="member_expression [32083,32103]"/>
  <delete-tree tree="call_argument [32104,32118]"/>
  <delete-tree tree="array_access [32064,32080]"/>
  <delete-node tree="=: = [32081,32082]"/>
  <delete-node tree="assignment_expression [32064,32157]"/>
  <delete-tree tree="parameter [27272,27288]"/>
  <delete-tree tree="call_argument [27317,27339]"/>
  <delete-tree tree="emit_statement [27392,27436]"/>
  <delete-tree tree="expression_statement [27445,27463]"/>
  <delete-tree tree="call_expression [92247,92260]"/>
  <delete-node tree="contract: contract [77970,77978]"/>
  <delete-node tree="identifier: PoolAccount [77979,77990]"/>
  <delete-node tree="{: { [77991,77992]"/>
  <delete-tree tree="enum_declaration [77997,78062]"/>
  <delete-node tree="struct: struct [78068,78074]"/>
  <delete-node tree="identifier: State [78075,78080]"/>
  <delete-node tree="{: { [78081,78082]"/>
  <delete-node tree="identifier: staged [78099,78105]"/>
  <delete-node tree="struct_member [78091,78106]"/>
  <delete-node tree="identifier: claimable [78123,78132]"/>
  <delete-node tree="struct_member [78115,78133]"/>
  <delete-node tree="identifier: bonded [78150,78156]"/>
  <delete-node tree="struct_member [78142,78157]"/>
  <delete-node tree="identifier: phantom [78174,78181]"/>
  <delete-node tree="struct_member [78166,78182]"/>
  <delete-node tree="identifier: fluidUntil [78199,78209]"/>
  <delete-node tree="struct_member [78191,78210]"/>
  <delete-node tree="}: } [78215,78216]"/>
  <delete-node tree="struct_declaration [78068,78216]"/>
  <delete-node tree="}: } [78217,78218]"/>
  <delete-node tree="contract_body [77991,78218]"/>
  <delete-node tree="contract_declaration [77970,78218]"/>
  <delete-node tree="contract: contract [78220,78228]"/>
  <delete-node tree="identifier: PoolStorage [78229,78240]"/>
  <delete-node tree="{: { [78241,78242]"/>
  <delete-tree tree="struct_declaration [78247,78334]"/>
  <delete-node tree="struct: struct [78344,78350]"/>
  <delete-node tree="identifier: Balance [78351,78358]"/>
  <delete-node tree="{: { [78359,78360]"/>
  <delete-node tree="identifier: staged [78377,78383]"/>
  <delete-node tree="struct_member [78369,78384]"/>
  <delete-node tree="identifier: claimable [78401,78410]"/>
  <delete-node tree="struct_member [78393,78411]"/>
  <delete-node tree="identifier: bonded [78428,78434]"/>
  <delete-node tree="struct_member [78420,78435]"/>
  <delete-node tree="identifier: phantom [78452,78459]"/>
  <delete-node tree="struct_member [78444,78460]"/>
  <delete-node tree="}: } [78465,78466]"/>
  <delete-node tree="struct_declaration [78344,78466]"/>
  <delete-tree tree="struct_declaration [78472,78623]"/>
  <delete-node tree="}: } [78624,78625]"/>
  <delete-node tree="contract_body [78241,78625]"/>
  <delete-node tree="contract_declaration [78220,78625]"/>
  <delete-tree tree="contract_declaration [78627,78679]"/>
  <delete-node tree=",: , [61578,61579]"/>
  <delete-tree tree="event_paramater [61580,61584]"/>
  <delete-tree tree="parameter [85120,85135]"/>
  <delete-tree tree="member_expression [85156,85191]"/>
  <delete-node tree="=: = [85192,85193]"/>
  <delete-node tree="assignment_expression [85156,85242]"/>
  <delete-node tree="identifier: newUniv2 [91452,91460]"/>
  <delete-node tree="variable_declaration [91444,91460]"/>
  <delete-tree tree="call_expression [91464,91483]"/>
  <delete-node tree="&gt;=: &gt;= [81822,81824]"/>
  <delete-tree tree="member_expression [81825,81840]"/>
  <delete-node tree="==: == [81218,81220]"/>
  <delete-node tree="number_literal: 0 [81221,81222]"/>
  <delete-tree tree="member_expression [89546,89565]"/>
  <delete-tree tree="call_argument [89566,89580]"/>
  <delete-node tree=".: . [90406,90407]"/>
  <delete-node tree="identifier: mul [90407,90410]"/>
  <delete-node tree="member_expression [90377,90410]"/>
  <delete-node tree="(: ( [90410,90411]"/>
  <delete-tree tree="call_argument [90411,90416]"/>
  <delete-node tree="): ) [90416,90417]"/>
  <delete-node tree="call_expression [90377,90417]"/>
  <delete-node tree=".: . [90417,90418]"/>
  <delete-node tree="identifier: div [90418,90421]"/>
  <delete-node tree="member_expression [90377,90421]"/>
  <delete-node tree="(: ( [90421,90422]"/>
  <delete-tree tree="call_argument [90422,90437]"/>
  <delete-node tree="): ) [90437,90438]"/>
  <delete-node tree="call_expression [90377,90438]"/>
  <delete-tree tree="member_expression [33627,33647]"/>
  <delete-node tree="identifier: internalAmount [33648,33662]"/>
  <delete-tree tree="array_access [33608,33624]"/>
  <delete-node tree="=: = [33625,33626]"/>
  <delete-node tree="assignment_expression [33608,33701]"/>
  <delete-tree tree="member_expression [34482,34502]"/>
  <delete-node tree="identifier: internalAmount [34503,34517]"/>
  <delete-tree tree="array_access [34463,34479]"/>
  <delete-node tree="=: = [34480,34481]"/>
  <delete-node tree="assignment_expression [34463,34556]"/>
  <delete-tree tree="member_expression [20005,20026]"/>
  <delete-tree tree="array_access [19985,20002]"/>
  <delete-node tree="=: = [20003,20004]"/>
  <delete-node tree="assignment_expression [19985,20076]"/>
  <delete-tree tree="call_expression [91778,91809]"/>
  <delete-tree tree="call_argument [21949,21968]"/>
  <delete-node tree="!=: != [58855,58857]"/>
  <delete-tree tree="type_cast_expression [58858,58868]"/>
  <delete-node tree="mapping: mapping [15847,15854]"/>
  <delete-node tree="(: ( [15855,15856]"/>
  <delete-tree tree="primitive_type [15856,15863]"/>
  <delete-node tree="=&gt;: =&gt; [15864,15866]"/>
  <delete-node tree="): ) [15874,15875]"/>
  <delete-node tree="type_name [15847,15875]"/>
  <delete-tree tree="visibility [15876,15883]"/>
  <delete-node tree="identifier: _balances [15884,15893]"/>
  <delete-node tree="state_variable_declaration [15847,15894]"/>
  <delete-node tree="mapping: mapping [15900,15907]"/>
  <delete-node tree="(: ( [15908,15909]"/>
  <delete-tree tree="primitive_type [15909,15916]"/>
  <delete-node tree="=&gt;: =&gt; [15917,15919]"/>
  <delete-node tree="mapping: mapping [15920,15927]"/>
  <delete-node tree="(: ( [15928,15929]"/>
  <delete-tree tree="primitive_type [15929,15936]"/>
  <delete-node tree="=&gt;: =&gt; [15937,15939]"/>
  <delete-node tree="): ) [15947,15948]"/>
  <delete-node tree="type_name [15920,15948]"/>
  <delete-node tree="): ) [15948,15949]"/>
  <delete-node tree="type_name [15900,15949]"/>
  <delete-node tree="identifier: _allowances [15958,15969]"/>
  <delete-node tree="state_variable_declaration [15900,15970]"/>
  <delete-node tree="identifier: _totalSupply [15992,16004]"/>
  <delete-node tree="state_variable_declaration [15976,16005]"/>
  <delete-node tree="comment: /**      * @dev See {IERC20-totalSupply}.      */ [16011,16060]"/>
  <delete-node tree="function: function [16065,16073]"/>
  <delete-node tree="identifier: totalSupply [16074,16085]"/>
  <delete-node tree="(: ( [16085,16086]"/>
  <delete-node tree="): ) [16086,16087]"/>
  <delete-tree tree="visibility [16088,16094]"/>
  <delete-tree tree="state_mutability [16095,16099]"/>
  <delete-tree tree="function_body [16118,16154]"/>
  <delete-node tree="function_definition [16065,16154]"/>
  <delete-node tree="comment: /**      * @dev See {IERC20-balanceOf}.      */ [16160,16207]"/>
  <delete-tree tree="function_definition [16212,16320]"/>
  <delete-node tree="comment: /**      * @dev See {IERC20-transfer}.      *      * Requirements:      *      * - `recipient` cannot be the zero address.      * - the caller must have a balance of at least `amount`.      */ [16326,16518]"/>
  <delete-node tree="function: function [16523,16531]"/>
  <delete-node tree="identifier: transfer [16532,16540]"/>
  <delete-node tree="(: ( [16540,16541]"/>
  <delete-tree tree="parameter [16541,16558]"/>
  <delete-node tree=",: , [16558,16559]"/>
  <delete-node tree="): ) [16574,16575]"/>
  <delete-tree tree="visibility [16576,16582]"/>
  <delete-tree tree="return_type_definition [16583,16597]"/>
  <delete-node tree="{: { [16598,16599]"/>
  <delete-node tree="identifier: _transfer [16608,16617]"/>
  <delete-node tree="(: ( [16617,16618]"/>
  <delete-tree tree="call_argument [16618,16630]"/>
  <delete-node tree=",: , [16630,16631]"/>
  <delete-tree tree="call_argument [16632,16641]"/>
  <delete-node tree=",: , [16641,16642]"/>
  <delete-node tree="): ) [16649,16650]"/>
  <delete-node tree="call_expression [16608,16650]"/>
  <delete-node tree="expression_statement [16608,16651]"/>
  <delete-tree tree="return_statement [16660,16672]"/>
  <delete-node tree="}: } [16677,16678]"/>
  <delete-node tree="function_body [16598,16678]"/>
  <delete-node tree="function_definition [16523,16678]"/>
  <delete-node tree="comment: /**      * @dev See {IERC20-allowance}.      */ [16684,16731]"/>
  <delete-tree tree="function_definition [16736,16868]"/>
  <delete-node tree="comment: /**      * @dev See {IERC20-approve}.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [16874,17001]"/>
  <delete-node tree="function: function [17006,17014]"/>
  <delete-node tree="identifier: approve [17015,17022]"/>
  <delete-node tree="(: ( [17022,17023]"/>
  <delete-tree tree="parameter [17023,17038]"/>
  <delete-node tree=",: , [17038,17039]"/>
  <delete-tree tree="parameter [17040,17054]"/>
  <delete-node tree="): ) [17054,17055]"/>
  <delete-tree tree="visibility [17056,17062]"/>
  <delete-tree tree="return_type_definition [17063,17077]"/>
  <delete-node tree="{: { [17078,17079]"/>
  <delete-node tree="identifier: _approve [17088,17096]"/>
  <delete-node tree="(: ( [17096,17097]"/>
  <delete-tree tree="call_argument [17097,17109]"/>
  <delete-node tree=",: , [17109,17110]"/>
  <delete-tree tree="call_argument [17111,17118]"/>
  <delete-node tree=",: , [17118,17119]"/>
  <delete-node tree="): ) [17126,17127]"/>
  <delete-node tree="call_expression [17088,17127]"/>
  <delete-node tree="expression_statement [17088,17128]"/>
  <delete-tree tree="return_statement [17137,17149]"/>
  <delete-node tree="}: } [17154,17155]"/>
  <delete-node tree="function_body [17078,17155]"/>
  <delete-node tree="function_definition [17006,17155]"/>
  <delete-node tree="comment: /**      * @dev See {IERC20-transferFrom}.      *      * Emits an {Approval} event indicating the updated allowance. This is not      * required by the EIP. See the note at the beginning of {ERC20};      *      * Requirements:      * - `sender` and `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      * - the caller must have allowance for `sender`'s tokens of at least      * `amount`.      */ [17161,17608]"/>
  <delete-node tree="function: function [17613,17621]"/>
  <delete-node tree="identifier: transferFrom [17622,17634]"/>
  <delete-node tree="(: ( [17634,17635]"/>
  <delete-tree tree="parameter [17635,17649]"/>
  <delete-node tree=",: , [17649,17650]"/>
  <delete-tree tree="parameter [17651,17668]"/>
  <delete-node tree=",: , [17668,17669]"/>
  <delete-tree tree="parameter [17670,17684]"/>
  <delete-node tree="): ) [17684,17685]"/>
  <delete-tree tree="visibility [17686,17692]"/>
  <delete-tree tree="return_type_definition [17693,17707]"/>
  <delete-node tree="{: { [17708,17709]"/>
  <delete-node tree="identifier: _transfer [17718,17727]"/>
  <delete-node tree="(: ( [17727,17728]"/>
  <delete-tree tree="call_argument [17728,17734]"/>
  <delete-node tree=",: , [17734,17735]"/>
  <delete-tree tree="call_argument [17736,17745]"/>
  <delete-node tree=",: , [17745,17746]"/>
  <delete-node tree="): ) [17753,17754]"/>
  <delete-node tree="call_expression [17718,17754]"/>
  <delete-node tree="expression_statement [17718,17755]"/>
  <delete-node tree="identifier: _approve [17764,17772]"/>
  <delete-node tree="(: ( [17772,17773]"/>
  <delete-tree tree="call_argument [17773,17779]"/>
  <delete-node tree=",: , [17779,17780]"/>
  <delete-tree tree="call_argument [17781,17793]"/>
  <delete-node tree=",: , [17793,17794]"/>
  <delete-tree tree="member_expression [17795,17832]"/>
  <delete-node tree="(: ( [17832,17833]"/>
  <delete-tree tree="call_argument [17833,17839]"/>
  <delete-node tree=",: , [17839,17840]"/>
  <delete-node tree="): ) [17883,17884]"/>
  <delete-node tree="call_expression [17795,17884]"/>
  <delete-node tree="call_argument [17795,17884]"/>
  <delete-node tree="): ) [17884,17885]"/>
  <delete-node tree="call_expression [17764,17885]"/>
  <delete-node tree="expression_statement [17764,17886]"/>
  <delete-tree tree="return_statement [17895,17907]"/>
  <delete-node tree="}: } [17912,17913]"/>
  <delete-node tree="function_body [17708,17913]"/>
  <delete-node tree="function_definition [17613,17913]"/>
  <delete-node tree="comment: /**      * @dev Atomically increases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [17919,18303]"/>
  <delete-node tree="function: function [18308,18316]"/>
  <delete-node tree="identifier: increaseAllowance [18317,18334]"/>
  <delete-node tree="(: ( [18334,18335]"/>
  <delete-tree tree="parameter [18335,18350]"/>
  <delete-node tree=",: , [18350,18351]"/>
  <delete-node tree="): ) [18370,18371]"/>
  <delete-tree tree="visibility [18372,18378]"/>
  <delete-tree tree="return_type_definition [18379,18393]"/>
  <delete-tree tree="function_body [18394,18515]"/>
  <delete-node tree="function_definition [18308,18515]"/>
  <delete-node tree="comment: /**      * @dev Atomically decreases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      * - `spender` must have allowance for the caller of at least      * `subtractedValue`.      */ [18521,18997]"/>
  <delete-node tree="function: function [19002,19010]"/>
  <delete-node tree="identifier: decreaseAllowance [19011,19028]"/>
  <delete-node tree="(: ( [19028,19029]"/>
  <delete-tree tree="parameter [19029,19044]"/>
  <delete-node tree=",: , [19044,19045]"/>
  <delete-node tree="): ) [19069,19070]"/>
  <delete-tree tree="visibility [19071,19077]"/>
  <delete-tree tree="return_type_definition [19078,19092]"/>
  <delete-node tree="{: { [19093,19094]"/>
  <delete-node tree="identifier: _approve [19103,19111]"/>
  <delete-node tree="(: ( [19111,19112]"/>
  <delete-tree tree="call_argument [19112,19124]"/>
  <delete-node tree=",: , [19124,19125]"/>
  <delete-tree tree="call_argument [19126,19133]"/>
  <delete-node tree=",: , [19133,19134]"/>
  <delete-tree tree="member_expression [19135,19173]"/>
  <delete-node tree="(: ( [19173,19174]"/>
  <delete-tree tree="call_argument [19174,19189]"/>
  <delete-node tree=",: , [19189,19190]"/>
  <delete-node tree="): ) [19230,19231]"/>
  <delete-node tree="call_expression [19135,19231]"/>
  <delete-node tree="call_argument [19135,19231]"/>
  <delete-node tree="): ) [19231,19232]"/>
  <delete-node tree="call_expression [19103,19232]"/>
  <delete-node tree="expression_statement [19103,19233]"/>
  <delete-tree tree="return_statement [19242,19254]"/>
  <delete-node tree="}: } [19259,19260]"/>
  <delete-node tree="function_body [19093,19260]"/>
  <delete-node tree="function_definition [19002,19260]"/>
  <delete-node tree="comment: /**      * @dev Moves tokens `amount` from `sender` to `recipient`.      *      * This is internal function is equivalent to {transfer}, and can be used to      * e.g. implement automatic token fees, slashing mechanisms, etc.      *      * Emits a {Transfer} event.      *      * Requirements:      *      * - `sender` cannot be the zero address.      * - `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      */ [19266,19729]"/>
  <delete-node tree="comment: /** @dev Creates `amount` tokens and assigns them to `account`, increasing      * the total supply.      *      * Emits a {Transfer} event with `from` set to the zero address.      *      * Requirements      *      * - `to` cannot be the zero address.      */ [20204,20463]"/>
  <delete-node tree="function: function [20468,20476]"/>
  <delete-node tree="identifier: _mint [20477,20482]"/>
  <delete-node tree="(: ( [20482,20483]"/>
  <delete-tree tree="parameter [20483,20498]"/>
  <delete-node tree=",: , [20498,20499]"/>
  <delete-tree tree="parameter [20500,20514]"/>
  <delete-node tree="): ) [20514,20515]"/>
  <delete-tree tree="visibility [20516,20524]"/>
  <delete-node tree="{: { [20525,20526]"/>
  <delete-node tree="identifier: require [20535,20542]"/>
  <delete-node tree="(: ( [20542,20543]"/>
  <delete-tree tree="call_argument [20543,20564]"/>
  <delete-node tree=",: , [20564,20565]"/>
  <delete-node tree="): ) [20599,20600]"/>
  <delete-node tree="call_expression [20535,20600]"/>
  <delete-node tree="expression_statement [20535,20601]"/>
  <delete-tree tree="expression_statement [20611,20651]"/>
  <delete-tree tree="expression_statement [20660,20712]"/>
  <delete-node tree="emit: emit [20721,20725]"/>
  <delete-node tree="identifier: Transfer [20726,20734]"/>
  <delete-node tree="(: ( [20734,20735]"/>
  <delete-tree tree="call_argument [20735,20745]"/>
  <delete-node tree=",: , [20745,20746]"/>
  <delete-tree tree="call_argument [20747,20754]"/>
  <delete-node tree=",: , [20754,20755]"/>
  <delete-node tree="): ) [20762,20763]"/>
  <delete-node tree="emit_statement [20721,20764]"/>
  <delete-node tree="}: } [20769,20770]"/>
  <delete-node tree="function_body [20525,20770]"/>
  <delete-node tree="function_definition [20468,20770]"/>
  <delete-node tree="comment: /**      * @dev Destroys `amount` tokens from `account`, reducing the      * total supply.      *      * Emits a {Transfer} event with `to` set to the zero address.      *      * Requirements      *      * - `account` cannot be the zero address.      * - `account` must have at least `amount` tokens.      */ [20776,21084]"/>
  <delete-node tree="function: function [21089,21097]"/>
  <delete-node tree="identifier: _burn [21098,21103]"/>
  <delete-node tree="(: ( [21103,21104]"/>
  <delete-tree tree="parameter [21104,21119]"/>
  <delete-node tree=",: , [21119,21120]"/>
  <delete-tree tree="parameter [21121,21135]"/>
  <delete-node tree="): ) [21135,21136]"/>
  <delete-node tree="{: { [21146,21147]"/>
  <delete-tree tree="array_access [21234,21252]"/>
  <delete-node tree="=: = [21253,21254]"/>
  <delete-tree tree="member_expression [21255,21277]"/>
  <delete-node tree="(: ( [21277,21278]"/>
  <delete-tree tree="call_argument [21278,21284]"/>
  <delete-node tree=",: , [21284,21285]"/>
  <delete-node tree="): ) [21322,21323]"/>
  <delete-node tree="call_expression [21255,21323]"/>
  <delete-node tree="assignment_expression [21234,21323]"/>
  <delete-node tree="expression_statement [21234,21324]"/>
  <delete-tree tree="expression_statement [21333,21373]"/>
  <delete-tree tree="emit_statement [21382,21425]"/>
  <delete-node tree="}: } [21430,21431]"/>
  <delete-node tree="function_body [21146,21431]"/>
  <delete-node tree="function_definition [21089,21431]"/>
  <delete-node tree="comment: /**      * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.      *      * This is internal function is equivalent to `approve`, and can be used to      * e.g. set automatic allowances for certain subsystems, etc.      *      * Emits an {Approval} event.      *      * Requirements:      *      * - `owner` cannot be the zero address.      * - `spender` cannot be the zero address.      */ [21437,21851]"/>
  <delete-tree tree="parameter [21874,21887]"/>
  <delete-node tree=",: , [21904,21905]"/>
  <delete-tree tree="visibility [21922,21930]"/>
  <delete-tree tree="assignment_expression [22098,22134]"/>
  <delete-tree tree="call_argument [22158,22163]"/>
  <delete-tree tree="call_argument [22174,22180]"/>
  <delete-tree tree="visibility [19804,19812]"/>
  <delete-tree tree="binary_expression [21164,21185]"/>
  <delete-tree tree="call_expression [61211,61223]"/>
  <delete-tree tree="expression_statement [30407,30430]"/>
  <delete-tree tree="member_expression [30463,30484]"/>
  <delete-tree tree="array_access [30443,30460]"/>
  <delete-node tree="=: = [30461,30462]"/>
  <delete-node tree="assignment_expression [30443,30530]"/>
  <delete-node tree="identifier: totalSupplyExcluded [30544,30563]"/>
  <delete-node tree="=: = [30564,30565]"/>
  <delete-tree tree="member_expression [30566,30589]"/>
  <delete-node tree="(: ( [30589,30590]"/>
  <delete-node tree="): ) [30596,30597]"/>
  <delete-node tree="call_expression [30566,30597]"/>
  <delete-node tree="assignment_expression [30544,30597]"/>
  <delete-node tree="expression_statement [30544,30598]"/>
  <delete-node tree="{: { [61241,61242]"/>
  <delete-node tree="identifier: _approve [61255,61263]"/>
  <delete-node tree="(: ( [61263,61264]"/>
  <delete-node tree=",: , [61287,61288]"/>
  <delete-tree tree="call_argument [61305,61317]"/>
  <delete-node tree=",: , [61317,61318]"/>
  <delete-tree tree="member_expression [61335,61370]"/>
  <delete-node tree="(: ( [61370,61371]"/>
  <delete-tree tree="call_argument [61371,61377]"/>
  <delete-node tree=",: , [61377,61378]"/>
  <delete-node tree="): ) [61422,61423]"/>
  <delete-node tree="call_expression [61335,61423]"/>
  <delete-node tree="call_argument [61335,61423]"/>
  <delete-node tree="): ) [61423,61424]"/>
  <delete-node tree="call_expression [61255,61424]"/>
  <delete-node tree="expression_statement [61255,61425]"/>
  <delete-node tree="}: } [61434,61435]"/>
  <delete-node tree="block_statement [61241,61435]"/>
  <delete-tree tree="expression_statement [20086,20142]"/>
  <delete-node tree="comment: /**      * @dev Destroys `amount` tokens from `account`.`amount` is then deducted      * from the caller's allowance.      *      * See {_burn} and {_approve}.      */ [22194,22361]"/>
  <delete-node tree="function: function [22366,22374]"/>
  <delete-node tree="identifier: _burnFrom [22375,22384]"/>
  <delete-node tree="(: ( [22384,22385]"/>
  <delete-tree tree="parameter [22385,22400]"/>
  <delete-node tree=",: , [22400,22401]"/>
  <delete-tree tree="parameter [22402,22416]"/>
  <delete-node tree="): ) [22416,22417]"/>
  <delete-tree tree="visibility [22418,22426]"/>
  <delete-node tree="{: { [22427,22428]"/>
  <delete-node tree="identifier: _burn [22437,22442]"/>
  <delete-node tree="(: ( [22442,22443]"/>
  <delete-tree tree="call_argument [22443,22450]"/>
  <delete-node tree=",: , [22450,22451]"/>
  <delete-node tree="): ) [22458,22459]"/>
  <delete-node tree="call_expression [22437,22459]"/>
  <delete-node tree="expression_statement [22437,22460]"/>
  <delete-node tree="identifier: _approve [22469,22477]"/>
  <delete-node tree="(: ( [22477,22478]"/>
  <delete-tree tree="call_argument [22478,22485]"/>
  <delete-node tree=",: , [22485,22486]"/>
  <delete-tree tree="call_argument [22487,22499]"/>
  <delete-node tree=",: , [22499,22500]"/>
  <delete-tree tree="member_expression [22501,22539]"/>
  <delete-node tree="(: ( [22539,22540]"/>
  <delete-tree tree="call_argument [22540,22546]"/>
  <delete-node tree=",: , [22546,22547]"/>
  <delete-node tree="): ) [22586,22587]"/>
  <delete-node tree="call_expression [22501,22587]"/>
  <delete-node tree="call_argument [22501,22587]"/>
  <delete-node tree="): ) [22587,22588]"/>
  <delete-node tree="call_expression [22469,22588]"/>
  <delete-node tree="expression_statement [22469,22589]"/>
  <delete-node tree="}: } [22594,22595]"/>
  <delete-node tree="function_body [22427,22595]"/>
  <delete-node tree="function_definition [22366,22595]"/>
  <delete-node tree="contract: contract [79357,79365]"/>
  <delete-node tree="identifier: PoolGetters [79366,79377]"/>
  <delete-node tree="is: is [79378,79380]"/>
  <delete-tree tree="inheritance_specifier [79381,79390]"/>
  <delete-node tree="{: { [79391,79392]"/>
  <delete-node tree="comment: /**      * Global      */ [79430,79455]"/>
  <delete-tree tree="function_definition [79461,79555]"/>
  <delete-tree tree="function_definition [79561,79646]"/>
  <delete-tree tree="function_definition [79652,79746]"/>
  <delete-tree tree="function_definition [79752,79843]"/>
  <delete-tree tree="function_definition [79849,79947]"/>
  <delete-tree tree="function_definition [79953,80051]"/>
  <delete-tree tree="function_definition [80057,80161]"/>
  <delete-tree tree="function_definition [80167,80267]"/>
  <delete-node tree="function: function [80413,80421]"/>
  <delete-node tree="identifier: paused [80422,80428]"/>
  <delete-node tree="(: ( [80428,80429]"/>
  <delete-node tree="): ) [80429,80430]"/>
  <delete-tree tree="visibility [80431,80437]"/>
  <delete-tree tree="function_body [80458,80495]"/>
  <delete-node tree="function_definition [80413,80495]"/>
  <delete-node tree="comment: /**      * Account      */ [80501,80527]"/>
  <delete-node tree="function: function [80533,80541]"/>
  <delete-node tree="identifier: balanceOfStaged [80542,80557]"/>
  <delete-node tree="(: ( [80557,80558]"/>
  <delete-node tree="): ) [80573,80574]"/>
  <delete-tree tree="visibility [80575,80581]"/>
  <delete-tree tree="state_mutability [80582,80586]"/>
  <delete-tree tree="return_type_definition [80587,80604]"/>
  <delete-tree tree="function_body [80605,80660]"/>
  <delete-node tree="function_definition [80533,80660]"/>
  <delete-tree tree="function_definition [80666,80799]"/>
  <delete-tree tree="function_definition [80805,80932]"/>
  <delete-tree tree="function_definition [80938,81067]"/>
  <delete-node tree="function: function [81073,81081]"/>
  <delete-node tree="identifier: balanceOfRewarded [81082,81099]"/>
  <delete-node tree="(: ( [81099,81100]"/>
  <delete-tree tree="parameter [81100,81115]"/>
  <delete-node tree="): ) [81115,81116]"/>
  <delete-node tree="{: { [81147,81148]"/>
  <delete-node tree="=: = [81177,81178]"/>
  <delete-node tree="variable_declaration_statement [81157,81193]"/>
  <delete-node tree="=: = [81300,81301]"/>
  <delete-tree tree="call_expression [81302,81337]"/>
  <delete-node tree="variable_declaration_statement [81267,81338]"/>
  <delete-node tree="=: = [81384,81385]"/>
  <delete-tree tree="member_expression [81386,81427]"/>
  <delete-node tree="(: ( [81427,81428]"/>
  <delete-node tree="identifier: balanceOfBonded [81428,81443]"/>
  <delete-node tree="(: ( [81443,81444]"/>
  <delete-node tree="): ) [81451,81452]"/>
  <delete-node tree="call_expression [81428,81452]"/>
  <delete-node tree="call_argument [81428,81452]"/>
  <delete-node tree="): ) [81452,81453]"/>
  <delete-node tree="call_expression [81386,81453]"/>
  <delete-node tree=".: . [81466,81467]"/>
  <delete-node tree="identifier: div [81467,81470]"/>
  <delete-node tree="member_expression [81386,81470]"/>
  <delete-node tree="(: ( [81470,81471]"/>
  <delete-tree tree="call_argument [81471,81482]"/>
  <delete-node tree="): ) [81482,81483]"/>
  <delete-node tree="call_expression [81386,81483]"/>
  <delete-node tree="variable_declaration_statement [81347,81484]"/>
  <delete-node tree="=: = [81519,81520]"/>
  <delete-node tree="identifier: balanceOfPhantom [81521,81537]"/>
  <delete-node tree="(: ( [81537,81538]"/>
  <delete-node tree="): ) [81545,81546]"/>
  <delete-node tree="call_expression [81521,81546]"/>
  <delete-node tree="variable_declaration_statement [81494,81547]"/>
  <delete-tree tree="if_statement [81556,81691]"/>
  <delete-tree tree="return_statement [81700,81709]"/>
  <delete-node tree="}: } [81714,81715]"/>
  <delete-node tree="function_body [81147,81715]"/>
  <delete-node tree="function_definition [81073,81715]"/>
  <delete-node tree="function: function [81721,81729]"/>
  <delete-node tree="identifier: statusOf [81730,81738]"/>
  <delete-node tree="(: ( [81738,81739]"/>
  <delete-tree tree="parameter [81739,81754]"/>
  <delete-node tree="): ) [81754,81755]"/>
  <delete-tree tree="visibility [81756,81762]"/>
  <delete-tree tree="state_mutability [81763,81767]"/>
  <delete-tree tree="return_type_definition [81768,81796]"/>
  <delete-node tree="{: { [81797,81798]"/>
  <delete-node tree="return: return [81807,81813]"/>
  <delete-node tree="[: [ [81840,81841]"/>
  <delete-node tree="identifier: account [81841,81848]"/>
  <delete-node tree="]: ] [81848,81849]"/>
  <delete-node tree="array_access [81814,81849]"/>
  <delete-node tree=".: . [81849,81850]"/>
  <delete-node tree="identifier: fluidUntil [81850,81860]"/>
  <delete-node tree="member_expression [81814,81860]"/>
  <delete-node tree="?: ? [81861,81862]"/>
  <delete-tree tree="member_expression [81875,81900]"/>
  <delete-node tree=":: : [81901,81902]"/>
  <delete-tree tree="member_expression [81915,81933]"/>
  <delete-node tree="ternary_expression [81814,81933]"/>
  <delete-node tree=".: . [81933,81934]"/>
  <delete-node tree="identifier: Fluid [81934,81939]"/>
  <delete-node tree="member_expression [81814,81939]"/>
  <delete-node tree="return_statement [81807,81940]"/>
  <delete-node tree="}: } [81945,81946]"/>
  <delete-node tree="function_body [81797,81946]"/>
  <delete-node tree="function_definition [81721,81946]"/>
  <delete-node tree="comment: /**      * Epoch      */ [81952,81976]"/>
  <delete-tree tree="function_definition [81982,82068]"/>
  <delete-node tree="}: } [82069,82070]"/>
  <delete-node tree="contract_body [79391,82070]"/>
  <delete-node tree="contract_declaration [79357,82070]"/>
  <delete-tree tree="member_expression [30828,30849]"/>
  <delete-node tree="identifier: valueToBurn [30850,30861]"/>
  <delete-tree tree="array_access [30808,30825]"/>
  <delete-node tree="=: = [30826,30827]"/>
  <delete-node tree="assignment_expression [30808,30900]"/>
  <delete-node tree="(: ( [33413,33414]"/>
  <delete-node tree=",: , [33414,33415]"/>
  <delete-node tree=",: , [33463,33464]"/>
  <delete-node tree=",: , [33520,33521]"/>
  <delete-node tree=",: , [33521,33522]"/>
  <delete-tree tree="variable_declaration [33535,33558]"/>
  <delete-node tree="): ) [33567,33568]"/>
  <delete-node tree="variable_declaration_tuple [33413,33568]"/>
  <delete-tree tree="state_variable_declaration [72822,72917]"/>
  <delete-tree tree="state_variable_declaration [72923,72945]"/>
  <delete-tree tree="visibility [72958,72966]"/>
  <delete-node tree="identifier: _dollar [72967,72974]"/>
  <delete-node tree="state_variable_declaration [72950,72975]"/>
  <delete-tree tree="state_variable_declaration [72981,73008]"/>
  <delete-tree tree="state_variable_declaration [73013,73043]"/>
  <delete-tree tree="visibility [73056,73064]"/>
  <delete-node tree="identifier: _index [73065,73071]"/>
  <delete-node tree="state_variable_declaration [73048,73072]"/>
  <delete-tree tree="visibility [73085,73093]"/>
  <delete-node tree="identifier: _cumulative [73094,73105]"/>
  <delete-node tree="state_variable_declaration [73077,73106]"/>
  <delete-tree tree="state_variable_declaration [73111,73138]"/>
  <delete-tree tree="visibility [73152,73160]"/>
  <delete-node tree="identifier: _reserve [73161,73169]"/>
  <delete-node tree="state_variable_declaration [73144,73170]"/>
  <delete-tree tree="constructor_definition [73176,73272]"/>
  <delete-node tree="function: function [73278,73286]"/>
  <delete-node tree="identifier: setup [73287,73292]"/>
  <delete-node tree="(: ( [73292,73293]"/>
  <delete-node tree="): ) [73293,73294]"/>
  <delete-tree tree="visibility [73295,73301]"/>
  <delete-tree tree="modifier_invocation [73302,73309]"/>
  <delete-node tree="{: { [73310,73311]"/>
  <delete-tree tree="expression_statement [73320,73406]"/>
  <delete-tree tree="variable_declaration_statement [73416,73484]"/>
  <delete-tree tree="expression_statement [73493,73528]"/>
  <delete-node tree="}: } [73662,73663]"/>
  <delete-node tree="function_body [73310,73663]"/>
  <delete-node tree="function_definition [73278,73663]"/>
  <delete-node tree="comment: /**      * Trades/Liquidity: (1) Initializes reserve and blockTimestampLast (can calculate a price)      *                   (2) Has non-zero cumulative prices      *      * Steps: (1) Captures a reference blockTimestampLast      *        (2) First reported value      */ [73669,73940]"/>
  <delete-node tree="function: function [74193,74201]"/>
  <delete-node tree="identifier: initializeOracle [74202,74218]"/>
  <delete-node tree="(: ( [74218,74219]"/>
  <delete-node tree="): ) [74219,74220]"/>
  <delete-node tree="{: { [74229,74230]"/>
  <delete-tree tree="variable_declaration_statement [74239,74267]"/>
  <delete-node tree="=: = [74300,74301]"/>
  <delete-tree tree="ternary_expression [74302,74397]"/>
  <delete-node tree="variable_declaration_statement [74276,74398]"/>
  <delete-tree tree="variable_declaration_statement [74407,74492]"/>
  <delete-tree tree="if_statement [74501,74778]"/>
  <delete-node tree="}: } [74783,74784]"/>
  <delete-node tree="function_body [74229,74784]"/>
  <delete-node tree="function_definition [74193,74784]"/>
  <delete-node tree="function: function [74790,74798]"/>
  <delete-node tree="identifier: updateOracle [74799,74811]"/>
  <delete-node tree="(: ( [74811,74812]"/>
  <delete-node tree="): ) [74812,74813]"/>
  <delete-node tree="returns: returns [74822,74829]"/>
  <delete-node tree="(: ( [74830,74831]"/>
  <delete-node tree=",: , [74850,74851]"/>
  <delete-tree tree="parameter [74852,74856]"/>
  <delete-node tree="): ) [74856,74857]"/>
  <delete-node tree="return_type_definition [74822,74857]"/>
  <delete-node tree="{: { [74858,74859]"/>
  <delete-node tree="=: = [74978,74979]"/>
  <delete-tree tree="boolean_literal [74980,74984]"/>
  <delete-node tree="variable_declaration_statement [74967,74985]"/>
  <delete-tree tree="if_statement [74994,75087]"/>
  <delete-tree tree="if_statement [75096,75186]"/>
  <delete-tree tree="return_statement [75196,75218]"/>
  <delete-node tree="}: } [75223,75224]"/>
  <delete-node tree="function_body [74858,75224]"/>
  <delete-node tree="function_definition [74790,75224]"/>
  <delete-tree tree="type_name [75354,75360]"/>
  <delete-tree tree="member_expression [75387,75433]"/>
  <delete-tree tree="type_cast_expression [75434,75448]"/>
  <delete-tree tree="variable_declaration_statement [75459,75508]"/>
  <delete-node tree="comment: // overflow is desired [75509,75531]"/>
  <delete-node tree="=: = [75564,75565]"/>
  <delete-tree tree="ternary_expression [75566,75615]"/>
  <delete-node tree="variable_declaration_statement [75540,75616]"/>
  <delete-tree tree="expression_statement [75732,75760]"/>
  <delete-tree tree="expression_statement [75769,75799]"/>
  <delete-tree tree="visibility [73964,73970]"/>
  <delete-tree tree="modifier_invocation [73971,73978]"/>
  <delete-node tree="returns: returns [73979,73986]"/>
  <delete-node tree="(: ( [73987,73988]"/>
  <delete-node tree=",: , [74007,74008]"/>
  <delete-tree tree="parameter [74009,74013]"/>
  <delete-node tree="): ) [74013,74014]"/>
  <delete-node tree="return_type_definition [73979,74014]"/>
  <delete-tree tree="call_argument [75667,75712]"/>
  <delete-node tree=",: , [75712,75713]"/>
  <delete-tree tree="call_argument [75714,75720]"/>
  <delete-node tree="identifier: _initialized [74029,74041]"/>
  <delete-tree tree="block_statement [74043,74089]"/>
  <delete-node tree="else: else [74090,74094]"/>
  <delete-tree tree="expression_statement [74109,74128]"/>
  <delete-node tree="(: ( [74148,74149]"/>
  <delete-node tree=",: , [74162,74163]"/>
  <delete-node tree="): ) [74169,74170]"/>
  <delete-node tree="tuple_expression [74148,74170]"/>
  <delete-node tree="function: function [75834,75842]"/>
  <delete-node tree="identifier: updateReserve [75843,75856]"/>
  <delete-node tree="(: ( [75856,75857]"/>
  <delete-node tree="): ) [75857,75858]"/>
  <delete-tree tree="return_type_definition [75867,75884]"/>
  <delete-node tree="{: { [75885,75886]"/>
  <delete-node tree="=: = [75915,75916]"/>
  <delete-node tree="identifier: _reserve [75917,75925]"/>
  <delete-node tree="variable_declaration_statement [75895,75926]"/>
  <delete-tree tree="variable_declaration_statement [75935,75995]"/>
  <delete-tree tree="expression_statement [76004,76049]"/>
  <delete-node tree="comment: // get counter's reserve [76050,76074]"/>
  <delete-tree tree="return_statement [76084,76103]"/>
  <delete-node tree="}: } [76108,76109]"/>
  <delete-node tree="function_body [75885,76109]"/>
  <delete-node tree="function_definition [75834,76109]"/>
  <delete-tree tree="function_definition [76115,76211]"/>
  <delete-node tree="function: function [76217,76225]"/>
  <delete-node tree="identifier: pair [76226,76230]"/>
  <delete-node tree="(: ( [76230,76231]"/>
  <delete-node tree="): ) [76231,76232]"/>
  <delete-tree tree="state_mutability [76242,76246]"/>
  <delete-tree tree="return_type_definition [76247,76264]"/>
  <delete-tree tree="function_body [76265,76303]"/>
  <delete-node tree="function_definition [76217,76303]"/>
  <delete-node tree="function: function [76309,76317]"/>
  <delete-node tree="identifier: reserve [76318,76325]"/>
  <delete-node tree="(: ( [76325,76326]"/>
  <delete-node tree="): ) [76326,76327]"/>
  <delete-tree tree="state_mutability [76337,76341]"/>
  <delete-tree tree="return_type_definition [76342,76359]"/>
  <delete-tree tree="function_body [76360,76392]"/>
  <delete-node tree="function_definition [76309,76392]"/>
  <delete-node tree="modifier: modifier [76398,76406]"/>
  <delete-node tree="identifier: onlyDao [76407,76414]"/>
  <delete-node tree="(: ( [76414,76415]"/>
  <delete-node tree="): ) [76415,76416]"/>
  <delete-node tree="{: { [76417,76418]"/>
  <delete-node tree="}: } [76540,76541]"/>
  <delete-node tree="function_body [76417,76541]"/>
  <delete-node tree="modifier_definition [76398,76541]"/>
  <delete-node tree="contract: contract [82748,82756]"/>
  <delete-node tree="identifier: PoolSetters [82757,82768]"/>
  <delete-node tree="is: is [82769,82771]"/>
  <delete-tree tree="inheritance_specifier [82772,82781]"/>
  <delete-node tree=",: , [82781,82782]"/>
  <delete-tree tree="inheritance_specifier [82783,82794]"/>
  <delete-node tree="{: { [82795,82796]"/>
  <delete-node tree="comment: /**      * Global      */ [82834,82859]"/>
  <delete-tree tree="function_definition [82865,82928]"/>
  <delete-node tree="comment: /**      * Account      */ [82934,82960]"/>
  <delete-node tree="function: function [82966,82974]"/>
  <delete-node tree="identifier: incrementBalanceOfBonded [82975,82999]"/>
  <delete-node tree="(: ( [82999,83000]"/>
  <delete-tree tree="parameter [83000,83015]"/>
  <delete-node tree=",: , [83015,83016]"/>
  <delete-tree tree="parameter [83017,83031]"/>
  <delete-node tree="): ) [83031,83032]"/>
  <delete-node tree="{: { [83042,83043]"/>
  <delete-tree tree="member_expression [83052,83083]"/>
  <delete-node tree="=: = [83084,83085]"/>
  <delete-tree tree="member_expression [83086,83121]"/>
  <delete-node tree="(: ( [83121,83122]"/>
  <delete-node tree="): ) [83128,83129]"/>
  <delete-node tree="call_expression [83086,83129]"/>
  <delete-node tree="assignment_expression [83052,83129]"/>
  <delete-node tree="expression_statement [83052,83130]"/>
  <delete-tree tree="member_expression [83139,83160]"/>
  <delete-node tree="=: = [83161,83162]"/>
  <delete-tree tree="member_expression [83163,83188]"/>
  <delete-node tree="(: ( [83188,83189]"/>
  <delete-node tree="): ) [83195,83196]"/>
  <delete-node tree="call_expression [83163,83196]"/>
  <delete-node tree="assignment_expression [83139,83196]"/>
  <delete-node tree="expression_statement [83139,83197]"/>
  <delete-node tree="}: } [83202,83203]"/>
  <delete-node tree="function_body [83042,83203]"/>
  <delete-node tree="function_definition [82966,83203]"/>
  <delete-node tree="function: function [83209,83217]"/>
  <delete-node tree="identifier: decrementBalanceOfBonded [83218,83242]"/>
  <delete-node tree="(: ( [83242,83243]"/>
  <delete-tree tree="parameter [83243,83258]"/>
  <delete-node tree=",: , [83258,83259]"/>
  <delete-tree tree="parameter [83260,83274]"/>
  <delete-node tree=",: , [83274,83275]"/>
  <delete-tree tree="parameter [83276,83296]"/>
  <delete-node tree="): ) [83296,83297]"/>
  <delete-tree tree="visibility [83298,83306]"/>
  <delete-node tree="{: { [83307,83308]"/>
  <delete-tree tree="expression_statement [83317,83403]"/>
  <delete-tree tree="member_expression [83412,83433]"/>
  <delete-node tree="=: = [83434,83435]"/>
  <delete-tree tree="member_expression [83436,83461]"/>
  <delete-node tree="(: ( [83461,83462]"/>
  <delete-node tree=",: , [83468,83469]"/>
  <delete-tree tree="call_argument [83470,83476]"/>
  <delete-node tree="): ) [83476,83477]"/>
  <delete-node tree="call_expression [83436,83477]"/>
  <delete-node tree="assignment_expression [83412,83477]"/>
  <delete-node tree="expression_statement [83412,83478]"/>
  <delete-node tree="}: } [83483,83484]"/>
  <delete-node tree="function_body [83307,83484]"/>
  <delete-node tree="function_definition [83209,83484]"/>
  <delete-node tree="function: function [83490,83498]"/>
  <delete-node tree="identifier: incrementBalanceOfStaged [83499,83523]"/>
  <delete-node tree="(: ( [83523,83524]"/>
  <delete-tree tree="parameter [83524,83539]"/>
  <delete-node tree=",: , [83539,83540]"/>
  <delete-tree tree="parameter [83541,83555]"/>
  <delete-node tree="): ) [83555,83556]"/>
  <delete-tree tree="visibility [83557,83565]"/>
  <delete-node tree="{: { [83566,83567]"/>
  <delete-tree tree="expression_statement [83576,83654]"/>
  <delete-tree tree="member_expression [83663,83684]"/>
  <delete-node tree="=: = [83685,83686]"/>
  <delete-tree tree="member_expression [83687,83712]"/>
  <delete-node tree="(: ( [83712,83713]"/>
  <delete-node tree="): ) [83719,83720]"/>
  <delete-node tree="call_expression [83687,83720]"/>
  <delete-node tree="assignment_expression [83663,83720]"/>
  <delete-node tree="expression_statement [83663,83721]"/>
  <delete-node tree="}: } [83726,83727]"/>
  <delete-node tree="function_body [83566,83727]"/>
  <delete-node tree="function_definition [83490,83727]"/>
  <delete-node tree="function: function [83733,83741]"/>
  <delete-node tree="identifier: decrementBalanceOfStaged [83742,83766]"/>
  <delete-node tree="(: ( [83766,83767]"/>
  <delete-tree tree="parameter [83767,83782]"/>
  <delete-node tree=",: , [83782,83783]"/>
  <delete-tree tree="parameter [83784,83798]"/>
  <delete-node tree=",: , [83798,83799]"/>
  <delete-tree tree="parameter [83800,83820]"/>
  <delete-node tree="): ) [83820,83821]"/>
  <delete-tree tree="visibility [83822,83830]"/>
  <delete-node tree="{: { [83831,83832]"/>
  <delete-tree tree="expression_statement [83841,83927]"/>
  <delete-tree tree="member_expression [83936,83957]"/>
  <delete-node tree="=: = [83958,83959]"/>
  <delete-tree tree="member_expression [83960,83985]"/>
  <delete-node tree="(: ( [83985,83986]"/>
  <delete-node tree=",: , [83992,83993]"/>
  <delete-tree tree="call_argument [83994,84000]"/>
  <delete-node tree="): ) [84000,84001]"/>
  <delete-node tree="call_expression [83960,84001]"/>
  <delete-node tree="assignment_expression [83936,84001]"/>
  <delete-node tree="expression_statement [83936,84002]"/>
  <delete-node tree="}: } [84007,84008]"/>
  <delete-node tree="function_body [83831,84008]"/>
  <delete-node tree="function_definition [83733,84008]"/>
  <delete-tree tree="function_definition [84014,84266]"/>
  <delete-tree tree="function_definition [84272,84562]"/>
  <delete-tree tree="function_definition [84568,84810]"/>
  <delete-tree tree="function_definition [84816,85096]"/>
  <delete-node tree="}: } [85250,85251]"/>
  <delete-node tree="contract_body [82795,85251]"/>
  <delete-node tree="contract_declaration [82748,85251]"/>
  <delete-node tree="contract: contract [85929,85937]"/>
  <delete-node tree="identifier: Liquidity [85938,85947]"/>
  <delete-node tree="is: is [85948,85950]"/>
  <delete-tree tree="inheritance_specifier [85951,85962]"/>
  <delete-node tree="{: { [85963,85964]"/>
  <delete-tree tree="state_variable_declaration [85969,86064]"/>
  <delete-node tree="function: function [86070,86078]"/>
  <delete-node tree="identifier: addLiquidity [86079,86091]"/>
  <delete-node tree="(: ( [86091,86092]"/>
  <delete-node tree="): ) [86112,86113]"/>
  <delete-node tree="{: { [86150,86151]"/>
  <delete-tree tree="variable_declaration_tuple [86160,86189]"/>
  <delete-node tree="=: = [86190,86191]"/>
  <delete-node tree="(: ( [86192,86193]"/>
  <delete-tree tree="primitive_type [86193,86200]"/>
  <delete-node tree="(: ( [86200,86201]"/>
  <delete-node tree="call_argument [86201,86209]"/>
  <delete-node tree="): ) [86209,86210]"/>
  <delete-node tree="type_cast_expression [86193,86210]"/>
  <delete-node tree=",: , [86210,86211]"/>
  <delete-tree tree="call_expression [86212,86217]"/>
  <delete-node tree="): ) [86217,86218]"/>
  <delete-node tree="tuple_expression [86192,86218]"/>
  <delete-node tree="variable_declaration_statement [86160,86219]"/>
  <delete-node tree="(: ( [86228,86229]"/>
  <delete-node tree=",: , [86242,86243]"/>
  <delete-node tree="): ) [86257,86258]"/>
  <delete-node tree="variable_declaration_tuple [86228,86258]"/>
  <delete-node tree="=: = [86259,86260]"/>
  <delete-tree tree="call_expression [86261,86285]"/>
  <delete-node tree="variable_declaration_statement [86228,86286]"/>
  <delete-node tree="=: = [86314,86315]"/>
  <delete-tree tree="parenthesized_expression [86316,86348]"/>
  <delete-node tree="?: ? [86349,86350]"/>
  <delete-node tree="identifier: dollarAmount [86364,86376]"/>
  <delete-node tree=":: : [86377,86378]"/>
  <delete-tree tree="member_expression [86392,86414]"/>
  <delete-node tree="(: ( [86414,86415]"/>
  <delete-node tree=",: , [86427,86428]"/>
  <delete-tree tree="call_argument [86429,86437]"/>
  <delete-node tree=",: , [86437,86438]"/>
  <delete-tree tree="call_argument [86439,86447]"/>
  <delete-node tree="): ) [86447,86448]"/>
  <delete-node tree="call_expression [86392,86448]"/>
  <delete-node tree="ternary_expression [86316,86448]"/>
  <delete-node tree="variable_declaration_statement [86296,86449]"/>
  <delete-tree tree="variable_declaration_statement [86459,86491]"/>
  <delete-tree tree="expression_statement [86500,86544]"/>
  <delete-node tree="return: return [86616,86622]"/>
  <delete-node tree="(: ( [86623,86624]"/>
  <delete-node tree="identifier: daiAmount [86624,86633]"/>
  <delete-node tree=",: , [86633,86634]"/>
  <delete-node tree="): ) [86675,86676]"/>
  <delete-node tree="tuple_expression [86623,86676]"/>
  <delete-node tree="return_statement [86616,86677]"/>
  <delete-node tree="}: } [86682,86683]"/>
  <delete-node tree="function_body [86150,86683]"/>
  <delete-node tree="function_definition [86070,86683]"/>
  <delete-node tree="comment: // overridable for testing [86689,86715]"/>
  <delete-node tree="function: function [86720,86728]"/>
  <delete-node tree="identifier: getReserves [86729,86740]"/>
  <delete-node tree="(: ( [86740,86741]"/>
  <delete-node tree=",: , [86755,86756]"/>
  <delete-node tree="): ) [86771,86772]"/>
  <delete-tree tree="visibility [86773,86781]"/>
  <delete-tree tree="state_mutability [86782,86786]"/>
  <delete-tree tree="return_type_definition [86787,86825]"/>
  <delete-node tree="{: { [86826,86827]"/>
  <delete-tree tree="variable_declaration_statement [86836,86900]"/>
  <delete-node tree="(: ( [86909,86910]"/>
  <delete-node tree=",: , [86923,86924]"/>
  <delete-node tree=",: , [86938,86939]"/>
  <delete-node tree="): ) [86939,86940]"/>
  <delete-node tree="variable_declaration_tuple [86909,86940]"/>
  <delete-node tree="=: = [86941,86942]"/>
  <delete-tree tree="call_expression [86943,87030]"/>
  <delete-node tree="variable_declaration_statement [86909,87031]"/>
  <delete-tree tree="expression_statement [87040,87126]"/>
  <delete-node tree="}: } [87131,87132]"/>
  <delete-node tree="function_body [86826,87132]"/>
  <delete-node tree="function_definition [86720,87132]"/>
  <delete-node tree="}: } [87133,87134]"/>
  <delete-node tree="contract_body [85963,87134]"/>
  <delete-node tree="contract_declaration [85929,87134]"/>
  <delete-tree tree="inheritance_specifier [87842,87851]"/>
  <delete-node tree="constructor: constructor [87891,87902]"/>
  <delete-node tree="(: ( [87902,87903]"/>
  <delete-tree tree="parameter [87903,87917]"/>
  <delete-node tree=",: , [87917,87918]"/>
  <delete-tree tree="parameter [87919,87932]"/>
  <delete-node tree="): ) [87932,87933]"/>
  <delete-node tree="public: public [87934,87940]"/>
  <delete-node tree="{: { [87941,87942]"/>
  <delete-tree tree="member_expression [87951,87970]"/>
  <delete-node tree="=: = [87971,87972]"/>
  <delete-node tree="identifier: IDAO [87973,87977]"/>
  <delete-node tree="(: ( [87977,87978]"/>
  <delete-node tree="): ) [87988,87989]"/>
  <delete-node tree="call_expression [87973,87989]"/>
  <delete-node tree="assignment_expression [87951,87989]"/>
  <delete-node tree="expression_statement [87951,87990]"/>
  <delete-tree tree="expression_statement [87999,88040]"/>
  <delete-tree tree="expression_statement [88049,88087]"/>
  <delete-node tree="}: } [88092,88093]"/>
  <delete-node tree="function_body [87941,88093]"/>
  <delete-node tree="constructor_definition [87891,88093]"/>
  <delete-tree tree="visibility [80298,80304]"/>
  <delete-tree tree="state_mutability [80305,80309]"/>
  <delete-tree tree="return_type_definition [80310,80327]"/>
  <delete-tree tree="call_expression [80383,80399]"/>
  <delete-node tree="return: return [80338,80344]"/>
  <delete-node tree="return_statement [80338,80401]"/>
  <delete-node tree="function: function [89140,89148]"/>
  <delete-node tree="identifier: claim [89149,89154]"/>
  <delete-node tree="(: ( [89154,89155]"/>
  <delete-tree tree="parameter [89155,89168]"/>
  <delete-node tree="): ) [89168,89169]"/>
  <delete-node tree="{: { [89202,89203]"/>
  <delete-node tree="}: } [89415,89416]"/>
  <delete-node tree="function_body [89202,89416]"/>
  <delete-node tree="function_definition [89140,89416]"/>
  <delete-tree tree="binary_expression [89645,89665]"/>
  <delete-node tree="identifier: value [89708,89713]"/>
  <delete-node tree="number_literal: 0 [89717,89718]"/>
  <delete-node tree="?: ? [89631,89632]"/>
  <delete-node tree=":: : [89719,89720]"/>
  <delete-tree tree="call_expression [89733,89768]"/>
  <delete-node tree="ternary_expression [89612,89768]"/>
  <delete-node tree="identifier: incrementBalanceOfPhantom [89851,89876]"/>
  <delete-node tree="(: ( [89876,89877]"/>
  <delete-node tree=",: , [89887,89888]"/>
  <delete-tree tree="call_argument [89889,89899]"/>
  <delete-node tree="): ) [89899,89900]"/>
  <delete-node tree="call_expression [89851,89900]"/>
  <delete-node tree="expression_statement [89851,89901]"/>
  <delete-node tree="identifier: value [90503,90508]"/>
  <delete-node tree=".: . [90509,90510]"/>
  <delete-node tree="identifier: div [90510,90513]"/>
  <delete-node tree="member_expression [90470,90513]"/>
  <delete-node tree="(: ( [90513,90514]"/>
  <delete-tree tree="call_argument [90514,90529]"/>
  <delete-node tree="): ) [90529,90530]"/>
  <delete-node tree="call_expression [90470,90530]"/>
  <delete-node tree=",: , [89303,89304]"/>
  <delete-tree tree="call_argument [90566,90576]"/>
  <delete-node tree="identifier: newUniv2 [91645,91653]"/>
  <delete-tree tree="binary_expression [66707,66722]"/>
  <delete-node tree="function: function [90944,90952]"/>
  <delete-node tree="identifier: provide [90953,90960]"/>
  <delete-node tree="(: ( [90960,90961]"/>
  <delete-tree tree="parameter [90961,90974]"/>
  <delete-node tree="): ) [90974,90975]"/>
  <delete-node tree="identifier: onlyFrozen [90985,90995]"/>
  <delete-node tree="(: ( [90995,90996]"/>
  <delete-node tree="): ) [91006,91007]"/>
  <delete-node tree="modifier_invocation [90985,91007]"/>
  <delete-tree tree="modifier_invocation [91008,91017]"/>
  <delete-node tree="{: { [91018,91019]"/>
  <delete-node tree="=: = [91527,91528]"/>
  <delete-tree tree="call_expression [91529,91575]"/>
  <delete-node tree="variable_declaration_statement [91494,91576]"/>
  <delete-node tree="}: } [91903,91904]"/>
  <delete-node tree="function_body [91018,91904]"/>
  <delete-node tree="function_definition [90944,91904]"/>
  <delete-node tree="function: function [91910,91918]"/>
  <delete-node tree="identifier: emergencyWithdraw [91919,91936]"/>
  <delete-node tree="(: ( [91936,91937]"/>
  <delete-tree tree="parameter [91937,91950]"/>
  <delete-node tree=",: , [91950,91951]"/>
  <delete-tree tree="parameter [91952,91965]"/>
  <delete-node tree="): ) [91965,91966]"/>
  <delete-tree tree="modifier_invocation [91976,91983]"/>
  <delete-tree tree="function_body [91984,92046]"/>
  <delete-node tree="function_definition [91910,92046]"/>
  <delete-node tree="function: function [92052,92060]"/>
  <delete-node tree="identifier: emergencyPause [92061,92075]"/>
  <delete-node tree="(: ( [92075,92076]"/>
  <delete-node tree="): ) [92076,92077]"/>
  <delete-tree tree="modifier_invocation [92087,92094]"/>
  <delete-tree tree="function_body [92095,92119]"/>
  <delete-node tree="function_definition [92052,92119]"/>
  <delete-node tree="modifier: modifier [92346,92354]"/>
  <delete-node tree="identifier: onlyFrozen [92355,92365]"/>
  <delete-node tree="(: ( [92365,92366]"/>
  <delete-tree tree="parameter [92366,92381]"/>
  <delete-node tree="): ) [92381,92382]"/>
  <delete-node tree="{: { [92383,92384]"/>
  <delete-tree tree="expression_statement [92530,92532]"/>
  <delete-node tree="}: } [92537,92538]"/>
  <delete-node tree="function_body [92383,92538]"/>
  <delete-node tree="modifier_definition [92346,92538]"/>
  <delete-node tree="modifier: modifier [92544,92552]"/>
  <delete-node tree="identifier: onlyFrozenOrFluid [92553,92570]"/>
  <delete-node tree="(: ( [92570,92571]"/>
  <delete-tree tree="parameter [92571,92586]"/>
  <delete-node tree="): ) [92586,92587]"/>
  <delete-node tree="{: { [92588,92589]"/>
  <delete-tree tree="expression_statement [92794,92796]"/>
  <delete-node tree="}: } [92801,92802]"/>
  <delete-node tree="function_body [92588,92802]"/>
  <delete-node tree="modifier_definition [92544,92802]"/>
  <delete-node tree="modifier: modifier [92808,92816]"/>
  <delete-node tree="identifier: onlyDao [92817,92824]"/>
  <delete-node tree="(: ( [92824,92825]"/>
  <delete-node tree="): ) [92825,92826]"/>
  <delete-node tree="{: { [92827,92828]"/>
  <delete-node tree="(: ( [92849,92850]"/>
  <delete-tree tree="call_argument [92863,92891]"/>
  <delete-node tree=",: , [92891,92892]"/>
  <delete-node tree=",: , [92909,92910]"/>
  <delete-tree tree="call_argument [92923,92932]"/>
  <delete-node tree="): ) [92941,92942]"/>
  <delete-node tree="call_expression [92837,92942]"/>
  <delete-node tree="expression_statement [92837,92943]"/>
  <delete-tree tree="expression_statement [92953,92955]"/>
  <delete-node tree="}: } [92960,92961]"/>
  <delete-node tree="function_body [92827,92961]"/>
  <delete-node tree="modifier_definition [92808,92961]"/>
  <delete-node tree="modifier: modifier [92967,92975]"/>
  <delete-node tree="identifier: notPaused [92976,92985]"/>
  <delete-node tree="(: ( [92985,92986]"/>
  <delete-node tree="): ) [92986,92987]"/>
  <delete-node tree="{: { [92988,92989]"/>
  <delete-node tree="(: ( [93010,93011]"/>
  <delete-tree tree="call_argument [93024,93033]"/>
  <delete-node tree=",: , [93033,93034]"/>
  <delete-node tree=",: , [93051,93052]"/>
  <delete-tree tree="call_argument [93065,93073]"/>
  <delete-node tree="): ) [93082,93083]"/>
  <delete-node tree="call_expression [92998,93083]"/>
  <delete-node tree="expression_statement [92998,93084]"/>
  <delete-tree tree="expression_statement [93094,93096]"/>
  <delete-node tree="}: } [93101,93102]"/>
  <delete-node tree="function_body [92988,93102]"/>
  <delete-node tree="modifier_definition [92967,93102]"/>
  <delete-node tree="comment: /*     Copyright 2020 Reflective Dollar Devs, based on the works of the Dynamic Dollar Devs and the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [94625,95300]"/>
  <delete-node tree=",: , [88538,88539]"/>
  <delete-node tree=",: , [88555,88556]"/>
  <delete-node tree="&gt;=: &gt;= [91334,91336]"/>
  <delete-node tree="identifier: value [91337,91342]"/>
  <delete-tree tree="call_argument [92419,92465]"/>
  <delete-tree tree="member_expression [92624,92720]"/>
  <delete-tree tree="call_argument [24473,24495]"/>
  <delete-node tree="identifier: has [23765,23768]"/>
  <delete-node tree="(: ( [23768,23769]"/>
  <delete-tree tree="call_argument [23769,23773]"/>
  <delete-node tree=",: , [23773,23774]"/>
  <delete-node tree="): ) [23782,23783]"/>
  <delete-node tree="call_expression [23765,23783]"/>
  <delete-node tree="call_argument [23765,23783]"/>
  <delete-tree tree="member_expression [86553,86577]"/>
  <delete-node tree=",: , [90796,90797]"/>
  <delete-tree tree="binary_expression [76453,76471]"/>
  <delete-tree tree="binary_expression [91177,91196]"/>
  <delete-tree tree="binary_expression [90253,90272]"/>
  <delete-tree tree="binary_expression [73564,73575]"/>
  <delete-node tree="||: || [73576,73578]"/>
  <delete-tree tree="binary_expression [73579,73596]"/>
  <delete-tree tree="modifier_invocation [88652,88661]"/>
  <delete-node tree=",: , [88703,88704]"/>
  <delete-node tree=",: , [88718,88719]"/>
  <delete-tree tree="call_argument [88720,88725]"/>
  <delete-tree tree="new_expression [116792,116800]"/>
  <delete-tree tree="primitive_type [116801,116808]"/>
  <delete-node tree="(: ( [116808,116809]"/>
  <delete-node tree="call_argument [116809,116817]"/>
  <delete-node tree="): ) [116817,116818]"/>
  <delete-node tree="type_cast_expression [116801,116818]"/>
  <delete-node tree="call_argument [116801,116818]"/>
  <delete-node tree=",: , [116818,116819]"/>
  <delete-tree tree="primitive_type [116820,116827]"/>
  <delete-node tree="(: ( [116827,116828]"/>
  <delete-node tree="): ) [116843,116844]"/>
  <delete-node tree="type_cast_expression [116820,116844]"/>
  <delete-node tree="call_argument [116820,116844]"/>
  <delete-tree tree="member_expression [116761,116781]"/>
  <delete-node tree="=: = [116782,116783]"/>
  <delete-tree tree="primitive_type [116784,116791]"/>
  <delete-node tree="(: ( [116791,116792]"/>
  <delete-node tree="call_argument [116792,116845]"/>
  <delete-node tree="): ) [116845,116846]"/>
  <delete-node tree="type_cast_expression [116784,116846]"/>
  <delete-node tree="assignment_expression [116761,116846]"/>
  <delete-node tree="%: % [68083,68084]"/>
  <delete-tree tree="binary_expression [68085,68092]"/>
  <delete-node tree="binary_expression [68067,68092]"/>
  <delete-node tree="comment: /*     Copyright 2020 Reflective Dollar Devs, based on the works of the Dynamic Dollar Devs and the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [113926,114601]"/>
  <delete-node tree="comment: /*     Copyright 2020 Reflective Dollar Devs, based on the works of the Dynamic Dollar Devs and the Empty Set Squad      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [115416,116091]"/>
  <delete-node tree="contract: contract [116092,116100]"/>
  <delete-node tree="identifier: Deployer1 [116101,116110]"/>
  <delete-node tree="is: is [116111,116113]"/>
  <delete-tree tree="inheritance_specifier [116114,116119]"/>
  <delete-node tree=",: , [116119,116120]"/>
  <delete-node tree=",: , [116131,116132]"/>
  <delete-tree tree="contract_body [116145,116348]"/>
  <delete-node tree="contract_declaration [116092,116348]"/>
  <delete-node tree="contract: contract [116350,116358]"/>
  <delete-node tree="identifier: Deployer2 [116359,116368]"/>
  <delete-node tree="is: is [116369,116371]"/>
  <delete-tree tree="inheritance_specifier [116372,116377]"/>
  <delete-node tree=",: , [116377,116378]"/>
  <delete-node tree=",: , [116389,116390]"/>
  <delete-tree tree="inheritance_specifier [116391,116402]"/>
  <delete-node tree="{: { [116403,116404]"/>
  <delete-node tree="function: function [116409,116417]"/>
  <delete-node tree="identifier: initialize [116418,116428]"/>
  <delete-node tree="(: ( [116428,116429]"/>
  <delete-node tree="): ) [116429,116430]"/>
  <delete-tree tree="modifier_invocation [116431,116442]"/>
  <delete-tree tree="visibility [116443,116449]"/>
  <delete-node tree="{: { [116450,116451]"/>
  <delete-tree tree="member_expression [116460,116482]"/>
  <delete-node tree="=: = [116483,116484]"/>
  <delete-tree tree="new_expression [116485,116495]"/>
  <delete-node tree="(: ( [116495,116496]"/>
  <delete-tree tree="primitive_type [116496,116503]"/>
  <delete-node tree="(: ( [116503,116504]"/>
  <delete-node tree="call_argument [116504,116512]"/>
  <delete-node tree="): ) [116512,116513]"/>
  <delete-node tree="type_cast_expression [116496,116513]"/>
  <delete-node tree="call_argument [116496,116513]"/>
  <delete-node tree="): ) [116513,116514]"/>
  <delete-node tree="call_expression [116485,116514]"/>
  <delete-node tree="assignment_expression [116460,116514]"/>
  <delete-node tree="expression_statement [116460,116515]"/>
  <delete-node tree="(: ( [116538,116539]"/>
  <delete-node tree="): ) [116539,116540]"/>
  <delete-node tree="call_expression [116524,116540]"/>
  <delete-node tree="expression_statement [116524,116541]"/>
  <delete-node tree="}: } [116546,116547]"/>
  <delete-node tree="function_body [116450,116547]"/>
  <delete-node tree="function_definition [116409,116547]"/>
  <delete-tree tree="function_definition [116553,116647]"/>
  <delete-node tree="}: } [116648,116649]"/>
  <delete-node tree="contract_body [116403,116649]"/>
  <delete-node tree="contract_declaration [116350,116649]"/>
  <delete-node tree="contract: contract [116651,116659]"/>
  <delete-node tree="identifier: Deployer3 [116660,116669]"/>
  <delete-node tree="is: is [116670,116672]"/>
  <delete-node tree=",: , [116678,116679]"/>
  <delete-tree tree="inheritance_specifier [116680,116690]"/>
  <delete-node tree=",: , [116690,116691]"/>
  <delete-tree tree="inheritance_specifier [116692,116703]"/>
  <delete-node tree="{: { [116704,116705]"/>
  <delete-node tree="function: function [116710,116718]"/>
  <delete-node tree="identifier: initialize [116719,116729]"/>
  <delete-node tree="(: ( [116729,116730]"/>
  <delete-node tree="): ) [116730,116731]"/>
  <delete-node tree="{: { [116751,116752]"/>
  <delete-node tree="}: } [116852,116853]"/>
  <delete-node tree="function_body [116751,116853]"/>
  <delete-node tree="function_definition [116710,116853]"/>
  <delete-tree tree="function_definition [116859,116953]"/>
  <delete-node tree="}: } [116954,116955]"/>
  <delete-node tree="contract_body [116704,116955]"/>
  <delete-node tree="contract_declaration [116651,116955]"/>
</actions>
