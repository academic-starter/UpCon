{
  "matches": [
    {
      "src": "): ) [676,677]",
      "dest": "): ) [676,677]"
    },
    {
      "src": "): ) [823,824]",
      "dest": "): ) [823,824]"
    },
    {
      "src": "solidity_pragma_token [108,124]",
      "dest": "solidity_pragma_token [108,124]"
    },
    {
      "src": "identifier: data [846,850]",
      "dest": "identifier: data [846,850]"
    },
    {
      "src": "type_name [709,716]",
      "dest": "type_name [709,716]"
    },
    {
      "src": "comment: /**  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [127,623]",
      "dest": "comment: /**  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [127,623]"
    },
    {
      "src": "type_name [809,814]",
      "dest": "type_name [809,814]"
    },
    {
      "src": "parameter [709,716]",
      "dest": "parameter [709,716]"
    },
    {
      "src": ".: . [845,846]",
      "dest": ".: . [845,846]"
    },
    {
      "src": "contract_body [650,859]",
      "dest": "contract_body [650,859]"
    },
    {
      "src": "(: ( [775,776]",
      "dest": "(: ( [775,776]"
    },
    {
      "src": "identifier: _msgData [767,775]",
      "dest": "identifier: _msgData [767,775]"
    },
    {
      "src": "returns: returns [700,707]",
      "dest": "returns: returns [700,707]"
    },
    {
      "src": "calldata: calldata [815,823]",
      "dest": "calldata: calldata [815,823]"
    },
    {
      "src": "identifier: Context [642,649]",
      "dest": "identifier: Context [642,649]"
    },
    {
      "src": "(: ( [675,676]",
      "dest": "(: ( [675,676]"
    },
    {
      "src": "return_statement [728,746]",
      "dest": "return_statement [728,746]"
    },
    {
      "src": "): ) [716,717]",
      "dest": "): ) [716,717]"
    },
    {
      "src": "bytes: bytes [809,814]",
      "dest": "bytes: bytes [809,814]"
    },
    {
      "src": "(: ( [708,709]",
      "dest": "(: ( [708,709]"
    },
    {
      "src": "function: function [758,766]",
      "dest": "function: function [758,766]"
    },
    {
      "src": "contract: contract [633,641]",
      "dest": "contract: contract [633,641]"
    },
    {
      "src": "abstract: abstract [624,632]",
      "dest": "abstract: abstract [624,632]"
    },
    {
      "src": "contract_declaration [624,859]",
      "dest": "contract_declaration [624,859]"
    },
    {
      "src": "return_type_definition [700,717]",
      "dest": "return_type_definition [700,717]"
    },
    {
      "src": "primitive_type [809,814]",
      "dest": "primitive_type [809,814]"
    },
    {
      "src": "comment: // SPDX-License-Identifier: MIT [0,31]",
      "dest": "comment: // SPDX-License-Identifier: MIT [0,31]"
    },
    {
      "src": "identifier: sender [739,745]",
      "dest": "identifier: sender [739,745]"
    },
    {
      "src": "): ) [776,777]",
      "dest": "): ) [776,777]"
    },
    {
      "src": "identifier: _msgSender [665,675]",
      "dest": "identifier: _msgSender [665,675]"
    },
    {
      "src": "solidity_version: 0.8.20 [118,124]",
      "dest": "solidity_version: 0.8.20 [118,124]"
    },
    {
      "src": "virtual: virtual [692,699]",
      "dest": "virtual: virtual [692,699]"
    },
    {
      "src": "source_file [0,860]",
      "dest": "source_file [0,860]"
    },
    {
      "src": "pragma: pragma [101,107]",
      "dest": "pragma: pragma [101,107]"
    },
    {
      "src": "internal: internal [678,686]",
      "dest": "internal: internal [678,686]"
    },
    {
      "src": ".: . [738,739]",
      "dest": ".: . [738,739]"
    },
    {
      "src": "view: view [787,791]",
      "dest": "view: view [787,791]"
    },
    {
      "src": "state_mutability [787,791]",
      "dest": "state_mutability [787,791]"
    },
    {
      "src": "identifier: msg [842,845]",
      "dest": "identifier: msg [842,845]"
    },
    {
      "src": "member_expression [735,745]",
      "dest": "member_expression [735,745]"
    },
    {
      "src": "state_mutability [687,691]",
      "dest": "state_mutability [687,691]"
    },
    {
      "src": "(: ( [808,809]",
      "dest": "(: ( [808,809]"
    },
    {
      "src": "visibility [778,786]",
      "dest": "visibility [778,786]"
    },
    {
      "src": "primitive_type [709,716]",
      "dest": "primitive_type [709,716]"
    },
    {
      "src": "{: { [825,826]",
      "dest": "{: { [825,826]"
    },
    {
      "src": "return_statement [835,851]",
      "dest": "return_statement [835,851]"
    },
    {
      "src": "internal: internal [778,786]",
      "dest": "internal: internal [778,786]"
    },
    {
      "src": "address: address [709,716]",
      "dest": "address: address [709,716]"
    },
    {
      "src": "returns: returns [800,807]",
      "dest": "returns: returns [800,807]"
    },
    {
      "src": "}: } [751,752]",
      "dest": "}: } [751,752]"
    },
    {
      "src": "member_expression [842,850]",
      "dest": "member_expression [842,850]"
    },
    {
      "src": "parameter [809,823]",
      "dest": "parameter [809,823]"
    },
    {
      "src": "visibility [678,686]",
      "dest": "visibility [678,686]"
    },
    {
      "src": "solidity_version_comparison_operator [116,118]",
      "dest": "solidity_version_comparison_operator [116,118]"
    },
    {
      "src": "view: view [687,691]",
      "dest": "view: view [687,691]"
    },
    {
      "src": "solidity: solidity [108,116]",
      "dest": "solidity: solidity [108,116]"
    },
    {
      "src": "{: { [650,651]",
      "dest": "{: { [650,651]"
    },
    {
      "src": "function_definition [656,752]",
      "dest": "function_definition [656,752]"
    },
    {
      "src": "return: return [728,734]",
      "dest": "return: return [728,734]"
    },
    {
      "src": "function_body [825,857]",
      "dest": "function_body [825,857]"
    },
    {
      "src": "}: } [858,859]",
      "dest": "}: } [858,859]"
    },
    {
      "src": "{: { [718,719]",
      "dest": "{: { [718,719]"
    },
    {
      "src": "return_type_definition [800,824]",
      "dest": "return_type_definition [800,824]"
    },
    {
      "src": "pragma_directive [101,125]",
      "dest": "pragma_directive [101,125]"
    },
    {
      "src": "identifier: msg [735,738]",
      "dest": "identifier: msg [735,738]"
    },
    {
      "src": "}: } [856,857]",
      "dest": "}: } [856,857]"
    },
    {
      "src": "function: function [656,664]",
      "dest": "function: function [656,664]"
    },
    {
      "src": "return: return [835,841]",
      "dest": "return: return [835,841]"
    },
    {
      "src": "comment: // OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol) [32,99]",
      "dest": "comment: // OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol) [32,99]"
    },
    {
      "src": "^:  ^ [116,118]",
      "dest": "^:  ^ [116,118]"
    },
    {
      "src": "function_body [718,752]",
      "dest": "function_body [718,752]"
    },
    {
      "src": "function_definition [758,857]",
      "dest": "function_definition [758,857]"
    },
    {
      "src": "virtual: virtual [792,799]",
      "dest": "virtual: virtual [792,799]"
    }
  ],
  "actions": []
}