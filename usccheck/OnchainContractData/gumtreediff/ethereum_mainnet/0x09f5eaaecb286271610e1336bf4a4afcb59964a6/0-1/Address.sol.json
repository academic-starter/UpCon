{
  "matches": [
    {
      "src": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but performing a delegate call.      */ [3971,4101]",
      "dest": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but performing a delegate call.      */ [3971,4101]"
    },
    {
      "src": "function: function [4106,4114]",
      "dest": "function: function [4106,4114]"
    },
    {
      "src": "call_argument [3537,3543]",
      "dest": "call_argument [3537,3543]"
    },
    {
      "src": "error_parameter [475,489]",
      "dest": "error_parameter [475,489]"
    },
    {
      "src": "call_argument [3545,3552]",
      "dest": "call_argument [3545,3552]"
    },
    {
      "src": "type_name [475,482]",
      "dest": "type_name [475,482]"
    },
    {
      "src": "): ) [5094,5095]",
      "dest": "): ) [5094,5095]"
    },
    {
      "src": "view: view [4755,4759]",
      "dest": "view: view [4755,4759]"
    },
    {
      "src": "yul_path [6102,6112]",
      "dest": "yul_path [6102,6112]"
    },
    {
      "src": "number_literal: 0 [5066,5067]",
      "dest": "number_literal: 0 [5066,5067]"
    },
    {
      "src": ".: . [5082,5083]",
      "dest": ".: . [5082,5083]"
    },
    {
      "src": "function_body [5509,5631]",
      "dest": "function_body [5509,5631]"
    },
    {
      "src": "(: ( [4323,4324]",
      "dest": "(: ( [4323,4324]"
    },
    {
      "src": "type_name [3279,3284]",
      "dest": "type_name [3279,3284]"
    },
    {
      "src": "primitive_type [3739,3746]",
      "dest": "primitive_type [3739,3746]"
    },
    {
      "src": "}: } [3964,3965]",
      "dest": "}: } [3964,3965]"
    },
    {
      "src": "comment: // otherwise we already know that it was a contract [4977,5028]",
      "dest": "comment: // otherwise we already know that it was a contract [4977,5028]"
    },
    {
      "src": "return_type_definition [4180,4202]",
      "dest": "return_type_definition [4180,4202]"
    },
    {
      "src": "bytes: bytes [3435,3440]",
      "dest": "bytes: bytes [3435,3440]"
    },
    {
      "src": "yul_function_call [6137,6156]",
      "dest": "yul_function_call [6137,6156]"
    },
    {
      "src": "(: ( [3306,3307]",
      "dest": "(: ( [3306,3307]"
    },
    {
      "src": "type_name [3227,3232]",
      "dest": "type_name [3227,3232]"
    },
    {
      "src": "revert: revert [5114,5120]",
      "dest": "revert: revert [5114,5120]"
    },
    {
      "src": "variable_declaration_statement [3420,3494]",
      "dest": "variable_declaration_statement [3420,3494]"
    },
    {
      "src": "if_statement [5870,6253]",
      "dest": "if_statement [5870,6253]"
    },
    {
      "src": "identifier: recipient [1566,1575]",
      "dest": "identifier: recipient [1566,1575]"
    },
    {
      "src": "): ) [1709,1710]",
      "dest": "): ) [1709,1710]"
    },
    {
      "src": "identifier: data [4165,4169]",
      "dest": "identifier: data [4165,4169]"
    },
    {
      "src": "identifier: success [5524,5531]",
      "dest": "identifier: success [5524,5531]"
    },
    {
      "src": "error_parameter [349,364]",
      "dest": "error_parameter [349,364]"
    },
    {
      "src": "function_definition [2705,2856]",
      "dest": "function_definition [2705,2856]"
    },
    {
      "src": "): ) [2848,2849]",
      "dest": "): ) [2848,2849]"
    },
    {
      "src": "call_expression [4297,4352]",
      "dest": "call_expression [4297,4352]"
    },
    {
      "src": "parameter [4716,4739]",
      "dest": "parameter [4716,4739]"
    },
    {
      "src": "if_statement [1612,1721]",
      "dest": "if_statement [1612,1721]"
    },
    {
      "src": "{: { [4203,4204]",
      "dest": "{: { [4203,4204]"
    },
    {
      "src": ".: . [3869,3870]",
      "dest": ".: . [3869,3870]"
    },
    {
      "src": "solidity_version_comparison_operator [116,118]",
      "dest": "solidity_version_comparison_operator [116,118]"
    },
    {
      "src": "identifier: value [3481,3486]",
      "dest": "identifier: value [3481,3486]"
    },
    {
      "src": "type_name [2727,2734]",
      "dest": "type_name [2727,2734]"
    },
    {
      "src": "identifier: data [3881,3885]",
      "dest": "identifier: data [3881,3885]"
    },
    {
      "src": "library: library [195,202]",
      "dest": "library: library [195,202]"
    },
    {
      "src": "identifier: success [3545,3552]",
      "dest": "identifier: success [3545,3552]"
    },
    {
      "src": ",: , [3834,3835]",
      "dest": ",: , [3834,3835]"
    },
    {
      "src": "{: { [5897,5898]",
      "dest": "{: { [5897,5898]"
    },
    {
      "src": "yul_identifier [6145,6155]",
      "dest": "yul_identifier [6145,6155]"
    },
    {
      "src": "type_name [5447,5452]",
      "dest": "type_name [5447,5452]"
    },
    {
      "src": "identifier: verifyCallResultFromTarget [4297,4323]",
      "dest": "identifier: verifyCallResultFromTarget [4297,4323]"
    },
    {
      "src": "error: error [316,321]",
      "dest": "error: error [316,321]"
    },
    {
      "src": "primitive_type [2727,2734]",
      "dest": "primitive_type [2727,2734]"
    },
    {
      "src": ",: , [3244,3245]",
      "dest": ",: , [3244,3245]"
    },
    {
      "src": "identifier: this [1704,1708]",
      "dest": "identifier: this [1704,1708]"
    },
    {
      "src": "bool: bool [4694,4698]",
      "dest": "bool: bool [4694,4698]"
    },
    {
      "src": "type_name [2743,2748]",
      "dest": "type_name [2743,2748]"
    },
    {
      "src": "return: return [2804,2810]",
      "dest": "return: return [2804,2810]"
    },
    {
      "src": "): ) [4169,4170]",
      "dest": "): ) [4169,4170]"
    },
    {
      "src": "(: ( [3880,3881]",
      "dest": "(: ( [3880,3881]"
    },
    {
      "src": "): ) [3564,3565]",
      "dest": "): ) [3564,3565]"
    },
    {
      "src": "): ) [5470,5471]",
      "dest": "): ) [5470,5471]"
    },
    {
      "src": "yul_evm_builtin [6096,6101]",
      "dest": "yul_evm_builtin [6096,6101]"
    },
    {
      "src": "comment: /**      * @dev There's no code at `target` (it is not a contract).      */ [372,447]",
      "dest": "comment: /**      * @dev There's no code at `target` (it is not a contract).      */ [372,447]"
    },
    {
      "src": "memory: memory [3842,3848]",
      "dest": "memory: memory [3842,3848]"
    },
    {
      "src": ">: > [5892,5893]",
      "dest": ">: > [5892,5893]"
    },
    {
      "src": "{: { [211,212]",
      "dest": "{: { [211,212]"
    },
    {
      "src": "(: ( [6240,6241]",
      "dest": "(: ( [6240,6241]"
    },
    {
      "src": "state_mutability [5793,5797]",
      "dest": "state_mutability [5793,5797]"
    },
    {
      "src": "identifier: target [3219,3225]",
      "dest": "identifier: target [3219,3225]"
    },
    {
      "src": "): ) [1805,1806]",
      "dest": "): ) [1805,1806]"
    },
    {
      "src": "): ) [4279,4280]",
      "dest": "): ) [4279,4280]"
    },
    {
      "src": "identifier: returndata [3947,3957]",
      "dest": "identifier: returndata [3947,3957]"
    },
    {
      "src": "identifier: success [3827,3834]",
      "dest": "identifier: success [3827,3834]"
    },
    {
      "src": ",: , [4339,4340]",
      "dest": ",: , [4339,4340]"
    },
    {
      "src": ".: . [3468,3469]",
      "dest": ".: . [3468,3469]"
    },
    {
      "src": "bytes: bytes [4189,4194]",
      "dest": "bytes: bytes [4189,4194]"
    },
    {
      "src": "identifier: data [3240,3244]",
      "dest": "identifier: data [3240,3244]"
    },
    {
      "src": "parameter [4189,4201]",
      "dest": "parameter [4189,4201]"
    },
    {
      "src": "primitive_type [4214,4218]",
      "dest": "primitive_type [4214,4218]"
    },
    {
      "src": "type_name [5495,5500]",
      "dest": "type_name [5495,5500]"
    },
    {
      "src": "function_definition [5743,6259]",
      "dest": "function_definition [5743,6259]"
    },
    {
      "src": "{: { [3293,3294]",
      "dest": "{: { [3293,3294]"
    },
    {
      "src": "member_expression [3462,3473]",
      "dest": "member_expression [3462,3473]"
    },
    {
      "src": "if: if [4793,4795]",
      "dest": "if: if [4793,4795]"
    },
    {
      "src": "yul_function_call [6096,6113]",
      "dest": "yul_function_call [6096,6113]"
    },
    {
      "src": "type_cast_expression [1616,1629]",
      "dest": "type_cast_expression [1616,1629]"
    },
    {
      "src": "identifier: target [4144,4150]",
      "dest": "identifier: target [4144,4150]"
    },
    {
      "src": "primitive_type [4670,4677]",
      "dest": "primitive_type [4670,4677]"
    },
    {
      "src": "(: ( [6140,6141]",
      "dest": "(: ( [6140,6141]"
    },
    {
      "src": "identifier: call [3469,3473]",
      "dest": "identifier: call [3469,3473]"
    },
    {
      "src": "primitive_type [4694,4698]",
      "dest": "primitive_type [4694,4698]"
    },
    {
      "src": "else: else [5578,5582]",
      "dest": "else: else [5578,5582]"
    },
    {
      "src": "mload: mload [6096,6101]",
      "dest": "mload: mload [6096,6101]"
    },
    {
      "src": "primitive_type [5760,5765]",
      "dest": "primitive_type [5760,5765]"
    },
    {
      "src": "}: } [3410,3411]",
      "dest": "}: } [3410,3411]"
    },
    {
      "src": "block_statement [1648,1721]",
      "dest": "block_statement [1648,1721]"
    },
    {
      "src": "parameter [5447,5470]",
      "dest": "parameter [5447,5470]"
    },
    {
      "src": "(: ( [4796,4797]",
      "dest": "(: ( [4796,4797]"
    },
    {
      "src": "): ) [489,490]",
      "dest": "): ) [489,490]"
    },
    {
      "src": "if: if [5519,5521]",
      "dest": "if: if [5519,5521]"
    },
    {
      "src": "!: ! [4797,4798]",
      "dest": "!: ! [4797,4798]"
    },
    {
      "src": "(: ( [1779,1780]",
      "dest": "(: ( [1779,1780]"
    },
    {
      "src": "if: if [1793,1795]",
      "dest": "if: if [1793,1795]"
    },
    {
      "src": "call_argument [5555,5565]",
      "dest": "call_argument [5555,5565]"
    },
    {
      "src": "}: } [5576,5577]",
      "dest": "}: } [5576,5577]"
    },
    {
      "src": "(: ( [6101,6102]",
      "dest": "(: ( [6101,6102]"
    },
    {
      "src": "variable_declaration [4228,4251]",
      "dest": "variable_declaration [4228,4251]"
    },
    {
      "src": "{: { [4857,4858]",
      "dest": "{: { [4857,4858]"
    },
    {
      "src": "(: ( [3420,3421]",
      "dest": "(: ( [3420,3421]"
    },
    {
      "src": "string [1780,1782]",
      "dest": "string [1780,1782]"
    },
    {
      "src": "revert: revert [1821,1827]",
      "dest": "revert: revert [1821,1827]"
    },
    {
      "src": "}: } [6252,6253]",
      "dest": "}: } [6252,6253]"
    },
    {
      "src": "else: else [6199,6203]",
      "dest": "else: else [6199,6203]"
    },
    {
      "src": "address: address [1696,1703]",
      "dest": "address: address [1696,1703]"
    },
    {
      "src": "}: } [1861,1862]",
      "dest": "}: } [1861,1862]"
    },
    {
      "src": "}: } [3486,3487]",
      "dest": "}: } [3486,3487]"
    },
    {
      "src": "bytes: bytes [3227,3232]",
      "dest": "bytes: bytes [3227,3232]"
    },
    {
      "src": "visibility [4171,4179]",
      "dest": "visibility [4171,4179]"
    },
    {
      "src": "return: return [4290,4296]",
      "dest": "return: return [4290,4296]"
    },
    {
      "src": "): ) [1708,1709]",
      "dest": "): ) [1708,1709]"
    },
    {
      "src": ",: , [6156,6157]",
      "dest": ",: , [6156,6157]"
    },
    {
      "src": "if_statement [1793,1856]",
      "dest": "if_statement [1793,1856]"
    },
    {
      "src": "type_name [3421,3425]",
      "dest": "type_name [3421,3425]"
    },
    {
      "src": "==: == [5090,5092]",
      "dest": "==: == [5090,5092]"
    },
    {
      "src": "): ) [6173,6174]",
      "dest": "): ) [6173,6174]"
    },
    {
      "src": "parameter [2780,2792]",
      "dest": "parameter [2780,2792]"
    },
    {
      "src": "call_argument [4275,4279]",
      "dest": "call_argument [4275,4279]"
    },
    {
      "src": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but also transferring `value` wei to `target`.      *      * Requirements:      *      * - the calling contract must have an ETH balance of at least `value`.      * - the called Solidity function must be `payable`.      */ [2862,3175]",
      "dest": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but also transferring `value` wei to `target`.      *      * Requirements:      *      * - the calling contract must have an ETH balance of at least `value`.      * - the called Solidity function must be `payable`.      */ [2862,3175]"
    },
    {
      "src": "variable_declaration [1732,1744]",
      "dest": "variable_declaration [1732,1744]"
    },
    {
      "src": "call_argument [1624,1628]",
      "dest": "call_argument [1624,1628]"
    },
    {
      "src": "visibility [3774,3782]",
      "dest": "visibility [3774,3782]"
    },
    {
      "src": "address: address [475,482]",
      "dest": "address: address [475,482]"
    },
    {
      "src": "type_name [4214,4218]",
      "dest": "type_name [4214,4218]"
    },
    {
      "src": "identifier: verifyCallResultFromTarget [4634,4660]",
      "dest": "identifier: verifyCallResultFromTarget [4634,4660]"
    },
    {
      "src": "call_argument [2841,2845]",
      "dest": "call_argument [2841,2845]"
    },
    {
      "src": "identifier: target [483,489]",
      "dest": "identifier: target [483,489]"
    },
    {
      "src": "return: return [3503,3509]",
      "dest": "return: return [3503,3509]"
    },
    {
      "src": ",: , [1575,1576]",
      "dest": ",: , [1575,1576]"
    },
    {
      "src": "variable_declaration [3822,3834]",
      "dest": "variable_declaration [3822,3834]"
    },
    {
      "src": "): ) [5783,5784]",
      "dest": "): ) [5783,5784]"
    },
    {
      "src": "type_name [1577,1584]",
      "dest": "type_name [1577,1584]"
    },
    {
      "src": "function_body [2794,2856]",
      "dest": "function_body [2794,2856]"
    },
    {
      "src": "}: } [5159,5160]",
      "dest": "}: } [5159,5160]"
    },
    {
      "src": "(: ( [3796,3797]",
      "dest": "(: ( [3796,3797]"
    },
    {
      "src": "revert: revert [6130,6136]",
      "dest": "revert: revert [6130,6136]"
    },
    {
      "src": "struct_expression [3462,3487]",
      "dest": "struct_expression [3462,3487]"
    },
    {
      "src": ":: : [1770,1771]",
      "dest": ":: : [1770,1771]"
    },
    {
      "src": "parameter [3797,3809]",
      "dest": "parameter [3797,3809]"
    },
    {
      "src": "member_expression [5045,5062]",
      "dest": "member_expression [5045,5062]"
    },
    {
      "src": "identifier: Address [203,210]",
      "dest": "identifier: Address [203,210]"
    },
    {
      "src": "<: < [1638,1639]",
      "dest": "<: < [1638,1639]"
    },
    {
      "src": "call_argument [3315,3319]",
      "dest": "call_argument [3315,3319]"
    },
    {
      "src": "(: ( [4768,4769]",
      "dest": "(: ( [4768,4769]"
    },
    {
      "src": "}: } [1778,1779]",
      "dest": "}: } [1778,1779]"
    },
    {
      "src": "return_statement [3503,3566]",
      "dest": "return_statement [3503,3566]"
    },
    {
      "src": "bytes: bytes [4716,4721]",
      "dest": "bytes: bytes [4716,4721]"
    },
    {
      "src": "error_declaration [452,491]",
      "dest": "error_declaration [452,491]"
    },
    {
      "src": "identifier: returndata [3554,3564]",
      "dest": "identifier: returndata [3554,3564]"
    },
    {
      "src": "=: = [3861,3862]",
      "dest": "=: = [3861,3862]"
    },
    {
      "src": "address: address [1550,1557]",
      "dest": "address: address [1550,1557]"
    },
    {
      "src": "returns: returns [3788,3795]",
      "dest": "returns: returns [3788,3795]"
    },
    {
      "src": "yul_decimal_number: 32 [6141,6143]",
      "dest": "yul_decimal_number: 32 [6141,6143]"
    },
    {
      "src": "parameter [5760,5783]",
      "dest": "parameter [5760,5783]"
    },
    {
      "src": "block_statement [3338,3411]",
      "dest": "block_statement [3338,3411]"
    },
    {
      "src": "): ) [3885,3886]",
      "dest": "): ) [3885,3886]"
    },
    {
      "src": "(: ( [4135,4136]",
      "dest": "(: ( [4135,4136]"
    },
    {
      "src": "struct_field_assignment [1765,1778]",
      "dest": "struct_field_assignment [1765,1778]"
    },
    {
      "src": "identifier: code [5078,5082]",
      "dest": "identifier: code [5078,5082]"
    },
    {
      "src": "}: } [1720,1721]",
      "dest": "}: } [1720,1721]"
    },
    {
      "src": ",: , [1744,1745]",
      "dest": ",: , [1744,1745]"
    },
    {
      "src": ".: . [1759,1760]",
      "dest": ".: . [1759,1760]"
    },
    {
      "src": "(: ( [3821,3822]",
      "dest": "(: ( [3821,3822]"
    },
    {
      "src": "}: } [4850,4851]",
      "dest": "}: } [4850,4851]"
    },
    {
      "src": "!: ! [1797,1798]",
      "dest": "!: ! [1797,1798]"
    },
    {
      "src": "}: } [1855,1856]",
      "dest": "}: } [1855,1856]"
    },
    {
      "src": ",: , [3936,3937]",
      "dest": ",: , [3936,3937]"
    },
    {
      "src": "}: } [2855,2856]",
      "dest": "}: } [2855,2856]"
    },
    {
      "src": "): ) [5895,5896]",
      "dest": "): ) [5895,5896]"
    },
    {
      "src": "pure: pure [5481,5485]",
      "dest": "pure: pure [5481,5485]"
    },
    {
      "src": "primitive_type [3797,3802]",
      "dest": "primitive_type [3797,3802]"
    },
    {
      "src": "library_declaration [195,6261]",
      "dest": "library_declaration [195,6261]"
    },
    {
      "src": "return: return [5173,5179]",
      "dest": "return: return [5173,5179]"
    },
    {
      "src": "identifier: value [1765,1770]",
      "dest": "identifier: value [1765,1770]"
    },
    {
      "src": "revert_arguments [1843,1845]",
      "dest": "revert_arguments [1843,1845]"
    },
    {
      "src": "): ) [2792,2793]",
      "dest": "): ) [2792,2793]"
    },
    {
      "src": "identifier: this [3394,3398]",
      "dest": "identifier: this [3394,3398]"
    },
    {
      "src": "identifier: delegatecall [4262,4274]",
      "dest": "identifier: delegatecall [4262,4274]"
    },
    {
      "src": "uint256: uint256 [1577,1584]",
      "dest": "uint256: uint256 [1577,1584]"
    },
    {
      "src": "identifier: value [3474,3479]",
      "dest": "identifier: value [3474,3479]"
    },
    {
      "src": "internal: internal [4171,4179]",
      "dest": "internal: internal [4171,4179]"
    },
    {
      "src": "): ) [3398,3399]",
      "dest": "): ) [3398,3399]"
    },
    {
      "src": "call_argument [3930,3936]",
      "dest": "call_argument [3930,3936]"
    },
    {
      "src": "primitive_type [1616,1623]",
      "dest": "primitive_type [1616,1623]"
    },
    {
      "src": ",: , [4684,4685]",
      "dest": ",: , [4684,4685]"
    },
    {
      "src": "identifier: length [5885,5891]",
      "dest": "identifier: length [5885,5891]"
    },
    {
      "src": "): ) [1782,1783]",
      "dest": "): ) [1782,1783]"
    },
    {
      "src": "=: = [4253,4254]",
      "dest": "=: = [4253,4254]"
    },
    {
      "src": "bytes: bytes [5495,5500]",
      "dest": "bytes: bytes [5495,5500]"
    },
    {
      "src": "identifier: returndata_size [6077,6092]",
      "dest": "identifier: returndata_size [6077,6092]"
    },
    {
      "src": ".: . [1629,1630]",
      "dest": ".: . [1629,1630]"
    },
    {
      "src": "{: { [5533,5534]",
      "dest": "{: { [5533,5534]"
    },
    {
      "src": "binary_expression [1616,1646]",
      "dest": "binary_expression [1616,1646]"
    },
    {
      "src": "bytes: bytes [2743,2748]",
      "dest": "bytes: bytes [2743,2748]"
    },
    {
      "src": "type_name [4694,4698]",
      "dest": "type_name [4694,4698]"
    },
    {
      "src": "yul_evm_builtin [6130,6136]",
      "dest": "yul_evm_builtin [6130,6136]"
    },
    {
      "src": "memory: memory [4234,4240]",
      "dest": "memory: memory [4234,4240]"
    },
    {
      "src": "member_expression [3863,3880]",
      "dest": "member_expression [3863,3880]"
    },
    {
      "src": "primitive_type [3279,3284]",
      "dest": "primitive_type [3279,3284]"
    },
    {
      "src": "memory: memory [4195,4201]",
      "dest": "memory: memory [4195,4201]"
    },
    {
      "src": "binary_expression [5045,5094]",
      "dest": "binary_expression [5045,5094]"
    },
    {
      "src": ",: , [2845,2846]",
      "dest": ",: , [2845,2846]"
    },
    {
      "src": ",: , [3552,3553]",
      "dest": ",: , [3552,3553]"
    },
    {
      "src": "primitive_type [5447,5452]",
      "dest": "primitive_type [5447,5452]"
    },
    {
      "src": ",: , [6143,6144]",
      "dest": ",: , [6143,6144]"
    },
    {
      "src": "function_definition [3180,3572]",
      "dest": "function_definition [3180,3572]"
    },
    {
      "src": "identifier: target [4678,4684]",
      "dest": "identifier: target [4678,4684]"
    },
    {
      "src": "comment: // Look for revert reason and bubble it up if present [5808,5861]",
      "dest": "comment: // Look for revert reason and bubble it up if present [5808,5861]"
    },
    {
      "src": "primitive_type [3211,3218]",
      "dest": "primitive_type [3211,3218]"
    },
    {
      "src": "binary_expression [3307,3336]",
      "dest": "binary_expression [3307,3336]"
    },
    {
      "src": "parameter [4769,4781]",
      "dest": "parameter [4769,4781]"
    },
    {
      "src": "(: ( [1703,1704]",
      "dest": "(: ( [1703,1704]"
    },
    {
      "src": "identifier: returndata [5604,5614]",
      "dest": "identifier: returndata [5604,5614]"
    },
    {
      "src": "memory: memory [3285,3291]",
      "dest": "memory: memory [3285,3291]"
    },
    {
      "src": "): ) [1646,1647]",
      "dest": "): ) [1646,1647]"
    },
    {
      "src": "): ) [6112,6113]",
      "dest": "): ) [6112,6113]"
    },
    {
      "src": "visibility [4746,4754]",
      "dest": "visibility [4746,4754]"
    },
    {
      "src": "<: < [3329,3330]",
      "dest": "<: < [3329,3330]"
    },
    {
      "src": "state_mutability [5481,5485]",
      "dest": "state_mutability [5481,5485]"
    },
    {
      "src": "call_argument [1696,1709]",
      "dest": "call_argument [1696,1709]"
    },
    {
      "src": "type_name [4228,4233]",
      "dest": "type_name [4228,4233]"
    },
    {
      "src": "if_statement [4793,5201]",
      "dest": "if_statement [4793,5201]"
    },
    {
      "src": "identifier: FailedInnerCall [6225,6240]",
      "dest": "identifier: FailedInnerCall [6225,6240]"
    },
    {
      "src": "memory: memory [3761,3767]",
      "dest": "memory: memory [3761,3767]"
    },
    {
      "src": "function_definition [4625,5207]",
      "dest": "function_definition [4625,5207]"
    },
    {
      "src": "member_expression [1750,1764]",
      "dest": "member_expression [1750,1764]"
    },
    {
      "src": "function_definition [5407,5631]",
      "dest": "function_definition [5407,5631]"
    },
    {
      "src": "identifier: target [2833,2839]",
      "dest": "identifier: target [2833,2839]"
    },
    {
      "src": "{: { [4783,4784]",
      "dest": "{: { [4783,4784]"
    },
    {
      "src": "parameter [4136,4150]",
      "dest": "parameter [4136,4150]"
    },
    {
      "src": "identifier: returndata [5874,5884]",
      "dest": "identifier: returndata [5874,5884]"
    },
    {
      "src": "comment: // The easiest way to bubble the revert reason is using memory via assembly [5911,5986]",
      "dest": "comment: // The easiest way to bubble the revert reason is using memory via assembly [5911,5986]"
    },
    {
      "src": "yul_variable_declaration [6073,6113]",
      "dest": "yul_variable_declaration [6073,6113]"
    },
    {
      "src": "revert_arguments [5137,5145]",
      "dest": "revert_arguments [5137,5145]"
    },
    {
      "src": "primitive_type [1550,1565]",
      "dest": "primitive_type [1550,1565]"
    },
    {
      "src": ":: : [3479,3480]",
      "dest": ":: : [3479,3480]"
    },
    {
      "src": "bool: bool [4214,4218]",
      "dest": "bool: bool [4214,4218]"
    },
    {
      "src": "yul_path [6145,6155]",
      "dest": "yul_path [6145,6155]"
    },
    {
      "src": "visibility [3261,3269]",
      "dest": "visibility [3261,3269]"
    },
    {
      "src": "identifier: functionStaticCall [3720,3738]",
      "dest": "identifier: functionStaticCall [3720,3738]"
    },
    {
      "src": ",: , [4150,4151]",
      "dest": ",: , [4150,4151]"
    },
    {
      "src": "comment: // only check if target is a contract if the call was successful and the return data is empty [4871,4964]",
      "dest": "comment: // only check if target is a contract if the call was successful and the return data is empty [4871,4964]"
    },
    {
      "src": "yul_path [6158,6173]",
      "dest": "yul_path [6158,6173]"
    },
    {
      "src": "identifier: amount [1772,1778]",
      "dest": "identifier: amount [1772,1778]"
    },
    {
      "src": "identifier: target [3537,3543]",
      "dest": "identifier: target [3537,3543]"
    },
    {
      "src": "bool: bool [3421,3425]",
      "dest": "bool: bool [3421,3425]"
    },
    {
      "src": "return: return [5597,5603]",
      "dest": "return: return [5597,5603]"
    },
    {
      "src": "block_statement [4857,5201]",
      "dest": "block_statement [4857,5201]"
    },
    {
      "src": "): ) [4839,4840]",
      "dest": "): ) [4839,4840]"
    },
    {
      "src": "call_argument [3488,3492]",
      "dest": "call_argument [3488,3492]"
    },
    {
      "src": "revert_statement [5114,5146]",
      "dest": "revert_statement [5114,5146]"
    },
    {
      "src": "function_body [3293,3572]",
      "dest": "function_body [3293,3572]"
    },
    {
      "src": "identifier: success [1798,1805]",
      "dest": "identifier: success [1798,1805]"
    },
    {
      "src": "(: ( [4660,4661]",
      "dest": "(: ( [4660,4661]"
    },
    {
      "src": "assembly: assembly [6046,6054]",
      "dest": "assembly: assembly [6046,6054]"
    },
    {
      "src": "identifier: length [5056,5062]",
      "dest": "identifier: length [5056,5062]"
    },
    {
      "src": "primitive_type [4716,4721]",
      "dest": "primitive_type [4716,4721]"
    },
    {
      "src": "return_type_definition [2771,2793]",
      "dest": "return_type_definition [2771,2793]"
    },
    {
      "src": "unary_expression [5523,5531]",
      "dest": "unary_expression [5523,5531]"
    },
    {
      "src": "error_declaration [591,615]",
      "dest": "error_declaration [591,615]"
    },
    {
      "src": "struct_field_assignment [3474,3486]",
      "dest": "struct_field_assignment [3474,3486]"
    },
    {
      "src": "primitive_type [349,356]",
      "dest": "primitive_type [349,356]"
    },
    {
      "src": "revert_arguments [1695,1710]",
      "dest": "revert_arguments [1695,1710]"
    },
    {
      "src": "yul_identifier [6158,6173]",
      "dest": "yul_identifier [6158,6173]"
    },
    {
      "src": "private: private [5785,5792]",
      "dest": "private: private [5785,5792]"
    },
    {
      "src": "memory: memory [3803,3809]",
      "dest": "memory: memory [3803,3809]"
    },
    {
      "src": "identifier: returndata [4729,4739]",
      "dest": "identifier: returndata [4729,4739]"
    },
    {
      "src": "\": \" [1781,1782]",
      "dest": "\": \" [1781,1782]"
    },
    {
      "src": "): ) [3809,3810]",
      "dest": "): ) [3809,3810]"
    },
    {
      "src": "): ) [3336,3337]",
      "dest": "): ) [3336,3337]"
    },
    {
      "src": "member_expression [5071,5082]",
      "dest": "member_expression [5071,5082]"
    },
    {
      "src": "(: ( [5494,5495]",
      "dest": "(: ( [5494,5495]"
    },
    {
      "src": "function_body [4783,5207]",
      "dest": "function_body [4783,5207]"
    },
    {
      "src": "): ) [2760,2761]",
      "dest": "): ) [2760,2761]"
    },
    {
      "src": "): ) [3259,3260]",
      "dest": "): ) [3259,3260]"
    },
    {
      "src": "unary_expression [1797,1805]",
      "dest": "unary_expression [1797,1805]"
    },
    {
      "src": "function_body [3811,3965]",
      "dest": "function_body [3811,3965]"
    },
    {
      "src": "solidity_pragma_token [108,124]",
      "dest": "solidity_pragma_token [108,124]"
    },
    {
      "src": "visibility [5785,5792]",
      "dest": "visibility [5785,5792]"
    },
    {
      "src": "identifier: AddressInsufficientBalance [3359,3385]",
      "dest": "identifier: AddressInsufficientBalance [3359,3385]"
    },
    {
      "src": "call_expression [3462,3493]",
      "dest": "call_expression [3462,3493]"
    },
    {
      "src": "primitive_type [2780,2785]",
      "dest": "primitive_type [2780,2785]"
    },
    {
      "src": "type_name [3755,3760]",
      "dest": "type_name [3755,3760]"
    },
    {
      "src": "bool: bool [1732,1736]",
      "dest": "bool: bool [1732,1736]"
    },
    {
      "src": "revert: revert [3352,3358]",
      "dest": "revert: revert [3352,3358]"
    },
    {
      "src": "parameter [4694,4706]",
      "dest": "parameter [4694,4706]"
    },
    {
      "src": "identifier: AddressEmptyCode [458,474]",
      "dest": "identifier: AddressEmptyCode [458,474]"
    },
    {
      "src": "): ) [1844,1845]",
      "dest": "): ) [1844,1845]"
    },
    {
      "src": "identifier: FailedInnerCall [1828,1843]",
      "dest": "identifier: FailedInnerCall [1828,1843]"
    },
    {
      "src": "variable_declaration_statement [4213,4281]",
      "dest": "variable_declaration_statement [4213,4281]"
    },
    {
      "src": "comment: /**      * @dev Performs a Solidity function call using a low level `call`. A      * plain `call` is an unsafe replacement for a function call: use this      * function instead.      *      * If `target` reverts with a revert reason or custom error, it is bubbled      * up by this function (like regular Solidity function calls). However, if      * the call reverted with no returned reason, this function reverts with a      * {FailedInnerCall} error.      *      * Returns the raw returned data. To convert to the expected return value,      * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].      *      * Requirements:      *      * - `target` must be a contract.      * - calling `target` with `data` must not revert.      */ [1868,2700]",
      "dest": "comment: /**      * @dev Performs a Solidity function call using a low level `call`. A      * plain `call` is an unsafe replacement for a function call: use this      * function instead.      *      * If `target` reverts with a revert reason or custom error, it is bubbled      * up by this function (like regular Solidity function calls). However, if      * the call reverted with no returned reason, this function reverts with a      * {FailedInnerCall} error.      *      * Returns the raw returned data. To convert to the expected return value,      * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].      *      * Requirements:      *      * - `target` must be a contract.      * - calling `target` with `data` must not revert.      */ [1868,2700]"
    },
    {
      "src": "identifier: length [5083,5089]",
      "dest": "identifier: length [5083,5089]"
    },
    {
      "src": "{: { [5583,5584]",
      "dest": "{: { [5583,5584]"
    },
    {
      "src": "else: else [4852,4856]",
      "dest": "else: else [4852,4856]"
    },
    {
      "src": "}: } [6187,6188]",
      "dest": "}: } [6187,6188]"
    },
    {
      "src": "uint256: uint256 [3246,3253]",
      "dest": "uint256: uint256 [3246,3253]"
    },
    {
      "src": "function: function [3180,3188]",
      "dest": "function: function [3180,3188]"
    },
    {
      "src": "bytes: bytes [4769,4774]",
      "dest": "bytes: bytes [4769,4774]"
    },
    {
      "src": "parameter [3279,3291]",
      "dest": "parameter [3279,3291]"
    },
    {
      "src": "identifier: account [357,364]",
      "dest": "identifier: account [357,364]"
    },
    {
      "src": "type_name [3246,3253]",
      "dest": "type_name [3246,3253]"
    },
    {
      "src": "address: address [4136,4143]",
      "dest": "address: address [4136,4143]"
    },
    {
      "src": ",: , [4226,4227]",
      "dest": ",: , [4226,4227]"
    },
    {
      "src": "(: ( [3385,3386]",
      "dest": "(: ( [3385,3386]"
    },
    {
      "src": "yul_identifier [6077,6092]",
      "dest": "yul_identifier [6077,6092]"
    },
    {
      "src": "identifier: functionCallWithValue [2811,2832]",
      "dest": "identifier: functionCallWithValue [2811,2832]"
    },
    {
      "src": "primitive_type [475,482]",
      "dest": "primitive_type [475,482]"
    },
    {
      "src": "(: ( [1731,1732]",
      "dest": "(: ( [1731,1732]"
    },
    {
      "src": "variable_declaration [3421,3433]",
      "dest": "variable_declaration [3421,3433]"
    },
    {
      "src": "block_statement [6204,6253]",
      "dest": "block_statement [6204,6253]"
    },
    {
      "src": "variable_declaration [3435,3458]",
      "dest": "variable_declaration [3435,3458]"
    },
    {
      "src": "(: ( [2779,2780]",
      "dest": "(: ( [2779,2780]"
    },
    {
      "src": "visibility [2762,2770]",
      "dest": "visibility [2762,2770]"
    },
    {
      "src": "call_argument [1780,1782]",
      "dest": "call_argument [1780,1782]"
    },
    {
      "src": "primitive_type [3421,3425]",
      "dest": "primitive_type [3421,3425]"
    },
    {
      "src": "identifier: data [2756,2760]",
      "dest": "identifier: data [2756,2760]"
    },
    {
      "src": "parameter [1577,1591]",
      "dest": "parameter [1577,1591]"
    },
    {
      "src": "type_name [3435,3440]",
      "dest": "type_name [3435,3440]"
    },
    {
      "src": "bytes: bytes [5447,5452]",
      "dest": "bytes: bytes [5447,5452]"
    },
    {
      "src": "bool: bool [3822,3826]",
      "dest": "bool: bool [3822,3826]"
    },
    {
      "src": "(: ( [1695,1696]",
      "dest": "(: ( [1695,1696]"
    },
    {
      "src": "returns: returns [2771,2778]",
      "dest": "returns: returns [2771,2778]"
    },
    {
      "src": "returns: returns [3270,3277]",
      "dest": "returns: returns [3270,3277]"
    },
    {
      "src": "member_expression [3307,3328]",
      "dest": "member_expression [3307,3328]"
    },
    {
      "src": "): ) [3492,3493]",
      "dest": "): ) [3492,3493]"
    },
    {
      "src": "comment: /**      * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the      * revert reason or with a default {FailedInnerCall} error.      */ [5213,5402]",
      "dest": "comment: /**      * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the      * revert reason or with a default {FailedInnerCall} error.      */ [5213,5402]"
    },
    {
      "src": "revert_statement [1821,1846]",
      "dest": "revert_statement [1821,1846]"
    },
    {
      "src": "{: { [6204,6205]",
      "dest": "{: { [6204,6205]"
    },
    {
      "src": "identifier: amount [1640,1646]",
      "dest": "identifier: amount [1640,1646]"
    },
    {
      "src": "type_cast_expression [3386,3399]",
      "dest": "type_cast_expression [3386,3399]"
    },
    {
      "src": "solidity_version: 0.8.20 [118,124]",
      "dest": "solidity_version: 0.8.20 [118,124]"
    },
    {
      "src": "=: = [3460,3461]",
      "dest": "=: = [3460,3461]"
    },
    {
      "src": "struct_expression [1750,1779]",
      "dest": "struct_expression [1750,1779]"
    },
    {
      "src": "): ) [3957,3958]",
      "dest": "): ) [3957,3958]"
    },
    {
      "src": "identifier: functionCallWithValue [3189,3210]",
      "dest": "identifier: functionCallWithValue [3189,3210]"
    },
    {
      "src": "}: } [5630,5631]",
      "dest": "}: } [5630,5631]"
    },
    {
      "src": "returns: returns [4760,4767]",
      "dest": "returns: returns [4760,4767]"
    },
    {
      "src": "primitive_type [5495,5500]",
      "dest": "primitive_type [5495,5500]"
    },
    {
      "src": "internal: internal [3261,3269]",
      "dest": "internal: internal [3261,3269]"
    },
    {
      "src": "if: if [3303,3305]",
      "dest": "if: if [3303,3305]"
    },
    {
      "src": "bytes: bytes [4228,4233]",
      "dest": "bytes: bytes [4228,4233]"
    },
    {
      "src": "member_expression [5874,5891]",
      "dest": "member_expression [5874,5891]"
    },
    {
      "src": "function_definition [1531,1862]",
      "dest": "function_definition [1531,1862]"
    },
    {
      "src": "}: } [5200,5201]",
      "dest": "}: } [5200,5201]"
    },
    {
      "src": "function_body [1602,1862]",
      "dest": "function_body [1602,1862]"
    },
    {
      "src": "comment: // SPDX-License-Identifier: MIT [0,31]",
      "dest": "comment: // SPDX-License-Identifier: MIT [0,31]"
    },
    {
      "src": "pragma: pragma [101,107]",
      "dest": "pragma: pragma [101,107]"
    },
    {
      "src": "type_name [3797,3802]",
      "dest": "type_name [3797,3802]"
    },
    {
      "src": "binary_expression [5045,5082]",
      "dest": "binary_expression [5045,5082]"
    },
    {
      "src": ",: , [2741,2742]",
      "dest": ",: , [2741,2742]"
    },
    {
      "src": "{: { [3473,3474]",
      "dest": "{: { [3473,3474]"
    },
    {
      "src": "if_statement [3303,3411]",
      "dest": "if_statement [3303,3411]"
    },
    {
      "src": "): ) [4201,4202]",
      "dest": "): ) [4201,4202]"
    },
    {
      "src": "primitive_type [3246,3253]",
      "dest": "primitive_type [3246,3253]"
    },
    {
      "src": "identifier: returndata [4341,4351]",
      "dest": "identifier: returndata [4341,4351]"
    },
    {
      "src": "revert_arguments [6240,6242]",
      "dest": "revert_arguments [6240,6242]"
    },
    {
      "src": "return: return [3896,3902]",
      "dest": "return: return [3896,3902]"
    },
    {
      "src": "if: if [5870,5872]",
      "dest": "if: if [5870,5872]"
    },
    {
      "src": "primitive_type [3386,3393]",
      "dest": "primitive_type [3386,3393]"
    },
    {
      "src": "type_name [3211,3218]",
      "dest": "type_name [3211,3218]"
    },
    {
      "src": "parameter [3739,3753]",
      "dest": "parameter [3739,3753]"
    },
    {
      "src": "identifier: returndata [3849,3859]",
      "dest": "identifier: returndata [3849,3859]"
    },
    {
      "src": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but performing a static call.      */ [3578,3706]",
      "dest": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but performing a static call.      */ [3578,3706]"
    },
    {
      "src": "function: function [3711,3719]",
      "dest": "function: function [3711,3719]"
    },
    {
      "src": "return_statement [5597,5615]",
      "dest": "return_statement [5597,5615]"
    },
    {
      "src": ",: , [2839,2840]",
      "dest": ",: , [2839,2840]"
    },
    {
      "src": "state_mutability [3783,3787]",
      "dest": "state_mutability [3783,3787]"
    },
    {
      "src": "member_expression [4255,4274]",
      "dest": "member_expression [4255,4274]"
    },
    {
      "src": "type_name [4769,4774]",
      "dest": "type_name [4769,4774]"
    },
    {
      "src": "return_type_definition [5486,5508]",
      "dest": "return_type_definition [5486,5508]"
    },
    {
      "src": "call_argument [5138,5144]",
      "dest": "call_argument [5138,5144]"
    },
    {
      "src": "error_declaration [316,366]",
      "dest": "error_declaration [316,366]"
    },
    {
      "src": "parameter [1550,1575]",
      "dest": "parameter [1550,1575]"
    },
    {
      "src": "revert_arguments [3385,3400]",
      "dest": "revert_arguments [3385,3400]"
    },
    {
      "src": "type_cast_expression [1696,1709]",
      "dest": "type_cast_expression [1696,1709]"
    },
    {
      "src": "primitive_type [2743,2748]",
      "dest": "primitive_type [2743,2748]"
    },
    {
      "src": "add: add [6137,6140]",
      "dest": "add: add [6137,6140]"
    },
    {
      "src": "type_name [5433,5437]",
      "dest": "type_name [5433,5437]"
    },
    {
      "src": "call_argument [3394,3398]",
      "dest": "call_argument [3394,3398]"
    },
    {
      "src": "identifier: AddressInsufficientBalance [1669,1695]",
      "dest": "identifier: AddressInsufficientBalance [1669,1695]"
    },
    {
      "src": ",: , [4330,4331]",
      "dest": ",: , [4330,4331]"
    },
    {
      "src": "): ) [3399,3400]",
      "dest": "): ) [3399,3400]"
    },
    {
      "src": "primitive_type [3307,3314]",
      "dest": "primitive_type [3307,3314]"
    },
    {
      "src": "memory: memory [5453,5459]",
      "dest": "memory: memory [5453,5459]"
    },
    {
      "src": "member_expression [1616,1637]",
      "dest": "member_expression [1616,1637]"
    },
    {
      "src": "call_argument [4829,4839]",
      "dest": "call_argument [4829,4839]"
    },
    {
      "src": "returns: returns [5486,5493]",
      "dest": "returns: returns [5486,5493]"
    },
    {
      "src": "block_statement [4807,4851]",
      "dest": "block_statement [4807,4851]"
    },
    {
      "src": "(: ( [5554,5555]",
      "dest": "(: ( [5554,5555]"
    },
    {
      "src": "state_mutability [4755,4759]",
      "dest": "state_mutability [4755,4759]"
    },
    {
      "src": "}: } [3571,3572]",
      "dest": "}: } [3571,3572]"
    },
    {
      "src": "return_statement [3896,3959]",
      "dest": "return_statement [3896,3959]"
    },
    {
      "src": "): ) [6241,6242]",
      "dest": "): ) [6241,6242]"
    },
    {
      "src": "return_statement [2804,2850]",
      "dest": "return_statement [2804,2850]"
    },
    {
      "src": "call_argument [3947,3957]",
      "dest": "call_argument [3947,3957]"
    },
    {
      "src": "call_argument [3386,3399]",
      "dest": "call_argument [3386,3399]"
    },
    {
      "src": "address: address [3386,3393]",
      "dest": "address: address [3386,3393]"
    },
    {
      "src": "(: ( [1549,1550]",
      "dest": "(: ( [1549,1550]"
    },
    {
      "src": "revert_statement [6218,6243]",
      "dest": "revert_statement [6218,6243]"
    },
    {
      "src": "block_statement [5096,5160]",
      "dest": "block_statement [5096,5160]"
    },
    {
      "src": "{: { [6055,6056]",
      "dest": "{: { [6055,6056]"
    },
    {
      "src": "(: ( [5759,5760]",
      "dest": "(: ( [5759,5760]"
    },
    {
      "src": "identifier: target [3747,3753]",
      "dest": "identifier: target [3747,3753]"
    },
    {
      "src": "call_expression [4255,4280]",
      "dest": "call_expression [4255,4280]"
    },
    {
      "src": "primitive_type [1696,1703]",
      "dest": "primitive_type [1696,1703]"
    },
    {
      "src": "parameter [3227,3244]",
      "dest": "parameter [3227,3244]"
    },
    {
      "src": "memory: memory [3233,3239]",
      "dest": "memory: memory [3233,3239]"
    },
    {
      "src": "variable_declaration [4214,4226]",
      "dest": "variable_declaration [4214,4226]"
    },
    {
      "src": "function: function [5407,5415]",
      "dest": "function: function [5407,5415]"
    },
    {
      "src": "primitive_type [3227,3232]",
      "dest": "primitive_type [3227,3232]"
    },
    {
      "src": "call_argument [3554,3564]",
      "dest": "call_argument [3554,3564]"
    },
    {
      "src": ",: , [3753,3754]",
      "dest": ",: , [3753,3754]"
    },
    {
      "src": "=: = [1748,1749]",
      "dest": "=: = [1748,1749]"
    },
    {
      "src": "): ) [4251,4252]",
      "dest": "): ) [4251,4252]"
    },
    {
      "src": "}: } [4358,4359]",
      "dest": "}: } [4358,4359]"
    },
    {
      "src": "identifier: amount [1585,1591]",
      "dest": "identifier: amount [1585,1591]"
    },
    {
      "src": ".: . [5077,5078]",
      "dest": ".: . [5077,5078]"
    },
    {
      "src": "{: { [1602,1603]",
      "dest": "{: { [1602,1603]"
    },
    {
      "src": "comment: /**  * @dev Collection of functions related to the address type  */ [127,194]",
      "dest": "comment: /**  * @dev Collection of functions related to the address type  */ [127,194]"
    },
    {
      "src": "memory: memory [5501,5507]",
      "dest": "memory: memory [5501,5507]"
    },
    {
      "src": "identifier: target [3863,3869]",
      "dest": "identifier: target [3863,3869]"
    },
    {
      "src": "(: ( [474,475]",
      "dest": "(: ( [474,475]"
    },
    {
      "src": "identifier: target [5138,5144]",
      "dest": "identifier: target [5138,5144]"
    },
    {
      "src": "if: if [1612,1614]",
      "dest": "if: if [1612,1614]"
    },
    {
      "src": "memory: memory [2786,2792]",
      "dest": "memory: memory [2786,2792]"
    },
    {
      "src": "identifier: success [4699,4706]",
      "dest": "identifier: success [4699,4706]"
    },
    {
      "src": "}: } [6260,6261]",
      "dest": "}: } [6260,6261]"
    },
    {
      "src": "primitive_type [4136,4143]",
      "dest": "primitive_type [4136,4143]"
    },
    {
      "src": "identifier: verifyCallResultFromTarget [3903,3929]",
      "dest": "identifier: verifyCallResultFromTarget [3903,3929]"
    },
    {
      "src": "identifier: data [4275,4279]",
      "dest": "identifier: data [4275,4279]"
    },
    {
      "src": "type_name [5760,5765]",
      "dest": "type_name [5760,5765]"
    },
    {
      "src": "(: ( [3487,3488]",
      "dest": "(: ( [3487,3488]"
    },
    {
      "src": "call_argument [3938,3945]",
      "dest": "call_argument [3938,3945]"
    },
    {
      "src": "primitive_type [4189,4194]",
      "dest": "primitive_type [4189,4194]"
    },
    {
      "src": "source_file [0,6262]",
      "dest": "source_file [0,6262]"
    },
    {
      "src": "variable_declaration [3836,3859]",
      "dest": "variable_declaration [3836,3859]"
    },
    {
      "src": "}: } [6258,6259]",
      "dest": "}: } [6258,6259]"
    },
    {
      "src": "variable_declaration_tuple [1731,1747]",
      "dest": "variable_declaration_tuple [1731,1747]"
    },
    {
      "src": "identifier: _revert [5547,5554]",
      "dest": "identifier: _revert [5547,5554]"
    },
    {
      "src": "): ) [1628,1629]",
      "dest": "): ) [1628,1629]"
    },
    {
      "src": "type_name [4152,4157]",
      "dest": "type_name [4152,4157]"
    },
    {
      "src": "call_expression [3510,3565]",
      "dest": "call_expression [3510,3565]"
    },
    {
      "src": "^:  ^ [116,118]",
      "dest": "^:  ^ [116,118]"
    },
    {
      "src": "primitive_type [5433,5437]",
      "dest": "primitive_type [5433,5437]"
    },
    {
      "src": ".: . [5884,5885]",
      "dest": ".: . [5884,5885]"
    },
    {
      "src": "identifier: value [3254,3259]",
      "dest": "identifier: value [3254,3259]"
    },
    {
      "src": "): ) [3319,3320]",
      "dest": "): ) [3319,3320]"
    },
    {
      "src": "): ) [4744,4745]",
      "dest": "): ) [4744,4745]"
    },
    {
      "src": "{: { [5096,5097]",
      "dest": "{: { [5096,5097]"
    },
    {
      "src": "primitive_type [3836,3841]",
      "dest": "primitive_type [3836,3841]"
    },
    {
      "src": "identifier: functionDelegateCall [4115,4135]",
      "dest": "identifier: functionDelegateCall [4115,4135]"
    },
    {
      "src": "primitive_type [1577,1584]",
      "dest": "primitive_type [1577,1584]"
    },
    {
      "src": "identifier: success [3426,3433]",
      "dest": "identifier: success [3426,3433]"
    },
    {
      "src": "primitive_type [3755,3760]",
      "dest": "primitive_type [3755,3760]"
    },
    {
      "src": "variable_declaration_statement [3821,3887]",
      "dest": "variable_declaration_statement [3821,3887]"
    },
    {
      "src": "visibility [1593,1601]",
      "dest": "visibility [1593,1601]"
    },
    {
      "src": "{: { [2794,2795]",
      "dest": "{: { [2794,2795]"
    },
    {
      "src": "variable_declaration_tuple [4213,4252]",
      "dest": "variable_declaration_tuple [4213,4252]"
    },
    {
      "src": "identifier: success [4332,4339]",
      "dest": "identifier: success [4332,4339]"
    },
    {
      "src": "if: if [5041,5043]",
      "dest": "if: if [5041,5043]"
    },
    {
      "src": "error: error [591,596]",
      "dest": "error: error [591,596]"
    },
    {
      "src": "identifier: call [1760,1764]",
      "dest": "identifier: call [1760,1764]"
    },
    {
      "src": "identifier: returndata [3448,3458]",
      "dest": "identifier: returndata [3448,3458]"
    },
    {
      "src": "block_statement [5533,5577]",
      "dest": "block_statement [5533,5577]"
    },
    {
      "src": "number_literal: 0 [5894,5895]",
      "dest": "number_literal: 0 [5894,5895]"
    },
    {
      "src": "primitive_type [3822,3826]",
      "dest": "primitive_type [3822,3826]"
    },
    {
      "src": "(: ( [2726,2727]",
      "dest": "(: ( [2726,2727]"
    },
    {
      "src": "revert_statement [3352,3401]",
      "dest": "revert_statement [3352,3401]"
    },
    {
      "src": "identifier: returndata [5773,5783]",
      "dest": "identifier: returndata [5773,5783]"
    },
    {
      "src": "}: } [6197,6198]",
      "dest": "}: } [6197,6198]"
    },
    {
      "src": "identifier: returndata [5180,5190]",
      "dest": "identifier: returndata [5180,5190]"
    },
    {
      "src": "type_name [4670,4677]",
      "dest": "type_name [4670,4677]"
    },
    {
      "src": "yul_identifier [6102,6112]",
      "dest": "yul_identifier [6102,6112]"
    },
    {
      "src": "return_statement [5173,5191]",
      "dest": "return_statement [5173,5191]"
    },
    {
      "src": "identifier: recipient [1750,1759]",
      "dest": "identifier: recipient [1750,1759]"
    },
    {
      "src": "): ) [4805,4806]",
      "dest": "): ) [4805,4806]"
    },
    {
      "src": "identifier: target [4255,4261]",
      "dest": "identifier: target [4255,4261]"
    },
    {
      "src": "{: { [1807,1808]",
      "dest": "{: { [1807,1808]"
    },
    {
      "src": "{: { [3338,3339]",
      "dest": "{: { [3338,3339]"
    },
    {
      "src": "identifier: data [3488,3492]",
      "dest": "identifier: data [3488,3492]"
    },
    {
      "src": "address: address [2727,2734]",
      "dest": "address: address [2727,2734]"
    },
    {
      "src": ",: , [3433,3434]",
      "dest": ",: , [3433,3434]"
    },
    {
      "src": "): ) [5144,5145]",
      "dest": "): ) [5144,5145]"
    },
    {
      "src": "comment: /**      * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.      */ [5637,5738]",
      "dest": "comment: /**      * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.      */ [5637,5738]"
    },
    {
      "src": "memory: memory [5766,5772]",
      "dest": "memory: memory [5766,5772]"
    },
    {
      "src": "identifier: returndata [5460,5470]",
      "dest": "identifier: returndata [5460,5470]"
    },
    {
      "src": "): ) [364,365]",
      "dest": "): ) [364,365]"
    },
    {
      "src": "return_statement [4290,4353]",
      "dest": "return_statement [4290,4353]"
    },
    {
      "src": "identifier: this [3315,3319]",
      "dest": "identifier: this [3315,3319]"
    },
    {
      "src": "): ) [4781,4782]",
      "dest": "): ) [4781,4782]"
    },
    {
      "src": "identifier: AddressInsufficientBalance [322,348]",
      "dest": "identifier: AddressInsufficientBalance [322,348]"
    },
    {
      "src": "identifier: target [3930,3936]",
      "dest": "identifier: target [3930,3936]"
    },
    {
      "src": "if_statement [5041,5160]",
      "dest": "if_statement [5041,5160]"
    },
    {
      "src": "variable_declaration_statement [1731,1784]",
      "dest": "variable_declaration_statement [1731,1784]"
    },
    {
      "src": "(: ( [5137,5138]",
      "dest": "(: ( [5137,5138]"
    },
    {
      "src": "(: ( [2832,2833]",
      "dest": "(: ( [2832,2833]"
    },
    {
      "src": "{: { [5509,5510]",
      "dest": "{: { [5509,5510]"
    },
    {
      "src": "type_name [2780,2785]",
      "dest": "type_name [2780,2785]"
    },
    {
      "src": "(: ( [3278,3279]",
      "dest": "(: ( [3278,3279]"
    },
    {
      "src": "error: error [452,457]",
      "dest": "error: error [452,457]"
    },
    {
      "src": "type_cast_expression [3307,3320]",
      "dest": "type_cast_expression [3307,3320]"
    },
    {
      "src": "identifier: target [5071,5077]",
      "dest": "identifier: target [5071,5077]"
    },
    {
      "src": "bytes: bytes [2780,2785]",
      "dest": "bytes: bytes [2780,2785]"
    },
    {
      "src": "parameter [4152,4169]",
      "dest": "parameter [4152,4169]"
    },
    {
      "src": "bytes: bytes [3755,3760]",
      "dest": "bytes: bytes [3755,3760]"
    },
    {
      "src": "identifier: returndata [4241,4251]",
      "dest": "identifier: returndata [4241,4251]"
    },
    {
      "src": "identifier: _revert [4821,4828]",
      "dest": "identifier: _revert [4821,4828]"
    },
    {
      "src": "parameter [3246,3259]",
      "dest": "parameter [3246,3259]"
    },
    {
      "src": "(: ( [3929,3930]",
      "dest": "(: ( [3929,3930]"
    },
    {
      "src": "call_expression [3903,3958]",
      "dest": "call_expression [3903,3958]"
    },
    {
      "src": "comment: /**      * @dev A call to an address target failed. The target may have reverted.      */ [497,586]",
      "dest": "comment: /**      * @dev A call to an address target failed. The target may have reverted.      */ [497,586]"
    },
    {
      "src": "(: ( [5432,5433]",
      "dest": "(: ( [5432,5433]"
    },
    {
      "src": "(: ( [6136,6137]",
      "dest": "(: ( [6136,6137]"
    },
    {
      "src": "identifier: returndata_size [6158,6173]",
      "dest": "identifier: returndata_size [6158,6173]"
    },
    {
      "src": "identifier: verifyCallResult [5416,5432]",
      "dest": "identifier: verifyCallResult [5416,5432]"
    },
    {
      "src": "let: let [6073,6076]",
      "dest": "let: let [6073,6076]"
    },
    {
      "src": "identifier: value [3331,3336]",
      "dest": "identifier: value [3331,3336]"
    },
    {
      "src": "view: view [3783,3787]",
      "dest": "view: view [3783,3787]"
    },
    {
      "src": "address: address [3211,3218]",
      "dest": "address: address [3211,3218]"
    },
    {
      "src": "{: { [3811,3812]",
      "dest": "{: { [3811,3812]"
    },
    {
      "src": "bytes: bytes [5760,5765]",
      "dest": "bytes: bytes [5760,5765]"
    },
    {
      "src": ",: , [3543,3544]",
      "dest": ",: , [3543,3544]"
    },
    {
      "src": "binary_expression [5045,5067]",
      "dest": "binary_expression [5045,5067]"
    },
    {
      "src": "identifier: FailedInnerCall [597,612]",
      "dest": "identifier: FailedInnerCall [597,612]"
    },
    {
      "src": "identifier: staticcall [3870,3880]",
      "dest": "identifier: staticcall [3870,3880]"
    },
    {
      "src": "(: ( [1623,1624]",
      "dest": "(: ( [1623,1624]"
    },
    {
      "src": ".: . [4261,4262]",
      "dest": ".: . [4261,4262]"
    },
    {
      "src": "(: ( [4213,4214]",
      "dest": "(: ( [4213,4214]"
    },
    {
      "src": "type_name [3739,3746]",
      "dest": "type_name [3739,3746]"
    },
    {
      "src": "primitive_type [4228,4233]",
      "dest": "primitive_type [4228,4233]"
    },
    {
      "src": "function: function [4625,4633]",
      "dest": "function: function [4625,4633]"
    },
    {
      "src": "call_argument [2847,2848]",
      "dest": "call_argument [2847,2848]"
    },
    {
      "src": "bool: bool [5433,5437]",
      "dest": "bool: bool [5433,5437]"
    },
    {
      "src": "comment: // OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol) [32,99]",
      "dest": "comment: // OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol) [32,99]"
    },
    {
      "src": "function_definition [4106,4359]",
      "dest": "function_definition [4106,4359]"
    },
    {
      "src": "(: ( [348,349]",
      "dest": "(: ( [348,349]"
    },
    {
      "src": "primitive_type [1732,1736]",
      "dest": "primitive_type [1732,1736]"
    },
    {
      "src": "): ) [5507,5508]",
      "dest": "): ) [5507,5508]"
    },
    {
      "src": "type_name [3822,3826]",
      "dest": "type_name [3822,3826]"
    },
    {
      "src": "address: address [4670,4677]",
      "dest": "address: address [4670,4677]"
    },
    {
      "src": "parameter [3755,3772]",
      "dest": "parameter [3755,3772]"
    },
    {
      "src": "internal: internal [3774,3782]",
      "dest": "internal: internal [3774,3782]"
    },
    {
      "src": "call_expression [2811,2849]",
      "dest": "call_expression [2811,2849]"
    },
    {
      "src": "): ) [3772,3773]",
      "dest": "): ) [3772,3773]"
    },
    {
      "src": "call_expression [3863,3886]",
      "dest": "call_expression [3863,3886]"
    },
    {
      "src": "(: ( [5873,5874]",
      "dest": "(: ( [5873,5874]"
    },
    {
      "src": "return_type_definition [4760,4782]",
      "dest": "return_type_definition [4760,4782]"
    },
    {
      "src": "identifier: sendValue [1540,1549]",
      "dest": "identifier: sendValue [1540,1549]"
    },
    {
      "src": "): ) [3859,3860]",
      "dest": "): ) [3859,3860]"
    },
    {
      "src": "type_name [1550,1565]",
      "dest": "type_name [1550,1565]"
    },
    {
      "src": "identifier: functionCall [2714,2726]",
      "dest": "identifier: functionCall [2714,2726]"
    },
    {
      "src": "}: } [5624,5625]",
      "dest": "}: } [5624,5625]"
    },
    {
      "src": "contract_body [211,6261]",
      "dest": "contract_body [211,6261]"
    },
    {
      "src": "(: ( [3536,3537]",
      "dest": "(: ( [3536,3537]"
    },
    {
      "src": "&&: && [5068,5070]",
      "dest": "&&: && [5068,5070]"
    },
    {
      "src": "comment: /**      * @dev Replacement for Solidity's `transfer`: sends `amount` wei to      * `recipient`, forwarding all available gas and reverting on errors.      *      * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost      * of certain opcodes, possibly making contracts go over the 2300 gas limit      * imposed by `transfer`, making them unable to receive funds via      * `transfer`. {sendValue} removes this limitation.      *      * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].      *      * IMPORTANT: because control is transferred to `recipient`, care must be      * taken to not create reentrancy vulnerabilities. Consider using      * {ReentrancyGuard} or the      * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].      */ [621,1526]",
      "dest": "comment: /**      * @dev Replacement for Solidity's `transfer`: sends `amount` wei to      * `recipient`, forwarding all available gas and reverting on errors.      *      * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost      * of certain opcodes, possibly making contracts go over the 2300 gas limit      * imposed by `transfer`, making them unable to receive funds via      * `transfer`. {sendValue} removes this limitation.      *      * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].      *      * IMPORTANT: because control is transferred to `recipient`, care must be      * taken to not create reentrancy vulnerabilities. Consider using      * {ReentrancyGuard} or the      * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].      */ [621,1526]"
    },
    {
      "src": "variable_declaration_tuple [3420,3459]",
      "dest": "variable_declaration_tuple [3420,3459]"
    },
    {
      "src": "call_argument [4324,4330]",
      "dest": "call_argument [4324,4330]"
    },
    {
      "src": "revert_statement [1662,1711]",
      "dest": "revert_statement [1662,1711]"
    },
    {
      "src": "internal: internal [5472,5480]",
      "dest": "internal: internal [5472,5480]"
    },
    {
      "src": "function_body [5798,6259]",
      "dest": "function_body [5798,6259]"
    },
    {
      "src": "solidity: solidity [108,116]",
      "dest": "solidity: solidity [108,116]"
    },
    {
      "src": "==: == [5063,5065]",
      "dest": "==: == [5063,5065]"
    },
    {
      "src": "string_literal [1780,1782]",
      "dest": "string_literal [1780,1782]"
    },
    {
      "src": "parameter [3211,3225]",
      "dest": "parameter [3211,3225]"
    },
    {
      "src": "function: function [1531,1539]",
      "dest": "function: function [1531,1539]"
    },
    {
      "src": "function: function [5743,5751]",
      "dest": "function: function [5743,5751]"
    },
    {
      "src": "block_statement [1807,1856]",
      "dest": "block_statement [1807,1856]"
    },
    {
      "src": "memory: memory [4775,4781]",
      "dest": "memory: memory [4775,4781]"
    },
    {
      "src": "identifier: this [1624,1628]",
      "dest": "identifier: this [1624,1628]"
    },
    {
      "src": "{: { [5798,5799]",
      "dest": "{: { [5798,5799]"
    },
    {
      "src": "variable_declaration_tuple [3821,3860]",
      "dest": "variable_declaration_tuple [3821,3860]"
    },
    {
      "src": "): ) [613,614]",
      "dest": "): ) [613,614]"
    },
    {
      "src": "identifier: success [4798,4805]",
      "dest": "identifier: success [4798,4805]"
    },
    {
      "src": "parameter [5433,5445]",
      "dest": "parameter [5433,5445]"
    },
    {
      "src": "expression_statement [5547,5567]",
      "dest": "expression_statement [5547,5567]"
    },
    {
      "src": ".: . [3320,3321]",
      "dest": ".: . [3320,3321]"
    },
    {
      "src": "memory: memory [4722,4728]",
      "dest": "memory: memory [4722,4728]"
    },
    {
      "src": "unary_expression [4797,4805]",
      "dest": "unary_expression [4797,4805]"
    },
    {
      "src": "{: { [4807,4808]",
      "dest": "{: { [4807,4808]"
    },
    {
      "src": "call_expression [4821,4840]",
      "dest": "call_expression [4821,4840]"
    },
    {
      "src": "identifier: success [4219,4226]",
      "dest": "identifier: success [4219,4226]"
    },
    {
      "src": "(: ( [3314,3315]",
      "dest": "(: ( [3314,3315]"
    },
    {
      "src": ",: , [3945,3946]",
      "dest": ",: , [3945,3946]"
    },
    {
      "src": ".: . [5055,5056]",
      "dest": ".: . [5055,5056]"
    },
    {
      "src": "call_argument [4332,4339]",
      "dest": "call_argument [4332,4339]"
    },
    {
      "src": "(: ( [1615,1616]",
      "dest": "(: ( [1615,1616]"
    },
    {
      "src": "number_literal: 0 [5093,5094]",
      "dest": "number_literal: 0 [5093,5094]"
    },
    {
      "src": "visibility [5472,5480]",
      "dest": "visibility [5472,5480]"
    },
    {
      "src": "parameter [2727,2741]",
      "dest": "parameter [2727,2741]"
    },
    {
      "src": "identifier: data [3768,3772]",
      "dest": "identifier: data [3768,3772]"
    },
    {
      "src": "call_argument [3881,3885]",
      "dest": "call_argument [3881,3885]"
    },
    {
      "src": "): ) [5531,5532]",
      "dest": "): ) [5531,5532]"
    },
    {
      "src": "identifier: returndata [5045,5055]",
      "dest": "identifier: returndata [5045,5055]"
    },
    {
      "src": "(: ( [4274,4275]",
      "dest": "(: ( [4274,4275]"
    },
    {
      "src": ":=: := [6093,6095]",
      "dest": ":=: := [6093,6095]"
    },
    {
      "src": "\": \" [1780,1781]",
      "dest": "\": \" [1780,1781]"
    },
    {
      "src": "returns: returns [4180,4187]",
      "dest": "returns: returns [4180,4187]"
    },
    {
      "src": "address: address [1616,1623]",
      "dest": "address: address [1616,1623]"
    },
    {
      "src": "if_statement [5519,5625]",
      "dest": "if_statement [5519,5625]"
    },
    {
      "src": "): ) [1746,1747]",
      "dest": "): ) [1746,1747]"
    },
    {
      "src": "number_literal: 0 [2847,2848]",
      "dest": "number_literal: 0 [2847,2848]"
    },
    {
      "src": "(: ( [1843,1844]",
      "dest": "(: ( [1843,1844]"
    },
    {
      "src": "identifier: success [1737,1744]",
      "dest": "identifier: success [1737,1744]"
    },
    {
      "src": "identifier: data [2841,2845]",
      "dest": "identifier: data [2841,2845]"
    },
    {
      "src": "expression_statement [4821,4841]",
      "dest": "expression_statement [4821,4841]"
    },
    {
      "src": "memory: memory [4158,4164]",
      "dest": "memory: memory [4158,4164]"
    },
    {
      "src": "payable: payable [1558,1565]",
      "dest": "payable: payable [1558,1565]"
    },
    {
      "src": "): ) [3458,3459]",
      "dest": "): ) [3458,3459]"
    },
    {
      "src": "type_name [4716,4721]",
      "dest": "type_name [4716,4721]"
    },
    {
      "src": "(: ( [3393,3394]",
      "dest": "(: ( [3393,3394]"
    },
    {
      "src": "identifier: success [3938,3945]",
      "dest": "identifier: success [3938,3945]"
    },
    {
      "src": "yul_evm_builtin [6137,6140]",
      "dest": "yul_evm_builtin [6137,6140]"
    },
    {
      "src": "(: ( [3210,3211]",
      "dest": "(: ( [3210,3211]"
    },
    {
      "src": "return_type_definition [3788,3810]",
      "dest": "return_type_definition [3788,3810]"
    },
    {
      "src": "identifier: target [2735,2741]",
      "dest": "identifier: target [2735,2741]"
    },
    {
      "src": "identifier: returndata [6102,6112]",
      "dest": "identifier: returndata [6102,6112]"
    },
    {
      "src": "type_name [1732,1736]",
      "dest": "type_name [1732,1736]"
    },
    {
      "src": "memory: memory [2749,2755]",
      "dest": "memory: memory [2749,2755]"
    },
    {
      "src": "identifier: target [3462,3468]",
      "dest": "identifier: target [3462,3468]"
    },
    {
      "src": "member_expression [5045,5089]",
      "dest": "member_expression [5045,5089]"
    },
    {
      "src": "revert: revert [1662,1668]",
      "dest": "revert: revert [1662,1668]"
    },
    {
      "src": "type_name [349,356]",
      "dest": "type_name [349,356]"
    },
    {
      "src": "bytes: bytes [4152,4157]",
      "dest": "bytes: bytes [4152,4157]"
    },
    {
      "src": "bytes: bytes [3279,3284]",
      "dest": "bytes: bytes [3279,3284]"
    },
    {
      "src": "type_name [3836,3841]",
      "dest": "type_name [3836,3841]"
    },
    {
      "src": "internal: internal [2762,2770]",
      "dest": "internal: internal [2762,2770]"
    },
    {
      "src": "identifier: verifyCallResultFromTarget [3510,3536]",
      "dest": "identifier: verifyCallResultFromTarget [3510,3536]"
    },
    {
      "src": "(: ( [5522,5523]",
      "dest": "(: ( [5522,5523]"
    },
    {
      "src": "{: { [1648,1649]",
      "dest": "{: { [1648,1649]"
    },
    {
      "src": "(: ( [5044,5045]",
      "dest": "(: ( [5044,5045]"
    },
    {
      "src": "comment: /**      * @dev The ETH balance of the account is not enough to perform the operation.      */ [217,311]",
      "dest": "comment: /**      * @dev The ETH balance of the account is not enough to perform the operation.      */ [217,311]"
    },
    {
      "src": "call_argument [1704,1708]",
      "dest": "call_argument [1704,1708]"
    },
    {
      "src": "block_statement [5583,5625]",
      "dest": "block_statement [5583,5625]"
    },
    {
      "src": "identifier: target [4324,4330]",
      "dest": "identifier: target [4324,4330]"
    },
    {
      "src": "comment: /// @solidity memory-safe-assembly [5999,6033]",
      "dest": "comment: /// @solidity memory-safe-assembly [5999,6033]"
    },
    {
      "src": "): ) [3291,3292]",
      "dest": "): ) [3291,3292]"
    },
    {
      "src": "assembly_statement [6046,6188]",
      "dest": "assembly_statement [6046,6188]"
    },
    {
      "src": "yul_function_call [6130,6174]",
      "dest": "yul_function_call [6130,6174]"
    },
    {
      "src": "(: ( [3738,3739]",
      "dest": "(: ( [3738,3739]"
    },
    {
      "src": "): ) [4351,4352]",
      "dest": "): ) [4351,4352]"
    },
    {
      "src": "primitive_type [4769,4774]",
      "dest": "primitive_type [4769,4774]"
    },
    {
      "src": "identifier: balance [3321,3328]",
      "dest": "identifier: balance [3321,3328]"
    },
    {
      "src": ",: , [4706,4707]",
      "dest": ",: , [4706,4707]"
    },
    {
      "src": "{: { [1764,1765]",
      "dest": "{: { [1764,1765]"
    },
    {
      "src": ",: , [3225,3226]",
      "dest": ",: , [3225,3226]"
    },
    {
      "src": "(: ( [612,613]",
      "dest": "(: ( [612,613]"
    },
    {
      "src": "(: ( [4188,4189]",
      "dest": "(: ( [4188,4189]"
    },
    {
      "src": "parameter [4670,4684]",
      "dest": "parameter [4670,4684]"
    },
    {
      "src": "call_expression [1750,1783]",
      "dest": "call_expression [1750,1783]"
    },
    {
      "src": "function: function [2705,2713]",
      "dest": "function: function [2705,2713]"
    },
    {
      "src": "bytes: bytes [3836,3841]",
      "dest": "bytes: bytes [3836,3841]"
    },
    {
      "src": "bytes: bytes [3797,3802]",
      "dest": "bytes: bytes [3797,3802]"
    },
    {
      "src": "function_body [4203,4359]",
      "dest": "function_body [4203,4359]"
    },
    {
      "src": "parameter [5495,5507]",
      "dest": "parameter [5495,5507]"
    },
    {
      "src": "return_type_definition [3270,3292]",
      "dest": "return_type_definition [3270,3292]"
    },
    {
      "src": "primitive_type [3435,3440]",
      "dest": "primitive_type [3435,3440]"
    },
    {
      "src": "(: ( [1796,1797]",
      "dest": "(: ( [1796,1797]"
    },
    {
      "src": ",: , [5445,5446]",
      "dest": ",: , [5445,5446]"
    },
    {
      "src": "revert: revert [6218,6224]",
      "dest": "revert: revert [6218,6224]"
    },
    {
      "src": "binary_expression [5874,5895]",
      "dest": "binary_expression [5874,5895]"
    },
    {
      "src": "function_definition [3711,3965]",
      "dest": "function_definition [3711,3965]"
    },
    {
      "src": "): ) [6155,6156]",
      "dest": "): ) [6155,6156]"
    },
    {
      "src": "address: address [3307,3314]",
      "dest": "address: address [3307,3314]"
    },
    {
      "src": "internal: internal [1593,1601]",
      "dest": "internal: internal [1593,1601]"
    },
    {
      "src": "block_statement [5897,6198]",
      "dest": "block_statement [5897,6198]"
    },
    {
      "src": "type_name [4136,4143]",
      "dest": "type_name [4136,4143]"
    },
    {
      "src": "primitive_type [4152,4157]",
      "dest": "primitive_type [4152,4157]"
    },
    {
      "src": "type_name [4189,4194]",
      "dest": "type_name [4189,4194]"
    },
    {
      "src": "identifier: success [5438,5445]",
      "dest": "identifier: success [5438,5445]"
    },
    {
      "src": "pure: pure [5793,5797]",
      "dest": "pure: pure [5793,5797]"
    },
    {
      "src": "call_argument [2833,2839]",
      "dest": "call_argument [2833,2839]"
    },
    {
      "src": "): ) [5565,5566]",
      "dest": "): ) [5565,5566]"
    },
    {
      "src": "identifier: _revert [5752,5759]",
      "dest": "identifier: _revert [5752,5759]"
    },
    {
      "src": "internal: internal [4746,4754]",
      "dest": "internal: internal [4746,4754]"
    },
    {
      "src": "identifier: returndata [6145,6155]",
      "dest": "identifier: returndata [6145,6155]"
    },
    {
      "src": "comment: /**      * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target      * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an      * unsuccessful call.      */ [4365,4620]",
      "dest": "comment: /**      * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target      * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an      * unsuccessful call.      */ [4365,4620]"
    },
    {
      "src": "address: address [3739,3746]",
      "dest": "address: address [3739,3746]"
    },
    {
      "src": "call_expression [5547,5566]",
      "dest": "call_expression [5547,5566]"
    },
    {
      "src": "call_argument [4341,4351]",
      "dest": "call_argument [4341,4351]"
    },
    {
      "src": "(: ( [4828,4829]",
      "dest": "(: ( [4828,4829]"
    },
    {
      "src": "identifier: balance [1630,1637]",
      "dest": "identifier: balance [1630,1637]"
    },
    {
      "src": "identifier: AddressEmptyCode [5121,5137]",
      "dest": "identifier: AddressEmptyCode [5121,5137]"
    },
    {
      "src": "): ) [1591,1592]",
      "dest": "): ) [1591,1592]"
    },
    {
      "src": "}: } [5206,5207]",
      "dest": "}: } [5206,5207]"
    },
    {
      "src": "identifier: returndata [5555,5565]",
      "dest": "identifier: returndata [5555,5565]"
    },
    {
      "src": "identifier: returndata [4829,4839]",
      "dest": "identifier: returndata [4829,4839]"
    },
    {
      "src": "memory: memory [3441,3447]",
      "dest": "memory: memory [3441,3447]"
    },
    {
      "src": "pragma_directive [101,125]",
      "dest": "pragma_directive [101,125]"
    },
    {
      "src": "address: address [349,356]",
      "dest": "address: address [349,356]"
    },
    {
      "src": "parameter [2743,2760]",
      "dest": "parameter [2743,2760]"
    },
    {
      "src": "!: ! [5523,5524]",
      "dest": "!: ! [5523,5524]"
    }
  ],
  "actions": []
}