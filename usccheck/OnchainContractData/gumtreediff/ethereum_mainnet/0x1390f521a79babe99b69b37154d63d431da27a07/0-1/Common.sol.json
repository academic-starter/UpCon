{
  "matches": [
    {
      "src": "member_expression [2495,2511]",
      "dest": "member_expression [2495,2511]"
    },
    {
      "src": ".: . [2498,2499]",
      "dest": ".: . [2498,2499]"
    },
    {
      "src": "(: ( [2173,2174]",
      "dest": "(: ( [2173,2174]"
    },
    {
      "src": "(: ( [816,817]",
      "dest": "(: ( [816,817]"
    },
    {
      "src": "primitive_type [2174,2178]",
      "dest": "primitive_type [2174,2178]"
    },
    {
      "src": "parameter [817,821]",
      "dest": "parameter [817,821]"
    },
    {
      "src": "}: } [3544,3545]",
      "dest": "}: } [3544,3545]"
    },
    {
      "src": "identifier: returndata [1713,1723]",
      "dest": "identifier: returndata [1713,1723]"
    },
    {
      "src": "identifier: contractAddress [2215,2230]",
      "dest": "identifier: contractAddress [2215,2230]"
    },
    {
      "src": "call_expression [2495,2527]",
      "dest": "call_expression [2495,2527]"
    },
    {
      "src": "comment: /*   II. StarkExTypes - Common data types. */ [2613,2658]",
      "dest": "comment: /*   II. StarkExTypes - Common data types. */ [2613,2658]"
    },
    {
      "src": "identifier: expectedIdHash [2068,2082]",
      "dest": "identifier: expectedIdHash [2068,2082]"
    },
    {
      "src": "call_expression [1750,1815]",
      "dest": "call_expression [1750,1815]"
    },
    {
      "src": "(: ( [1669,1670]",
      "dest": "(: ( [1669,1670]"
    },
    {
      "src": "identifier: validateContractId [2016,2034]",
      "dest": "identifier: validateContractId [2016,2034]"
    },
    {
      "src": "yul_function_call [886,906]",
      "dest": "yul_function_call [886,906]"
    },
    {
      "src": ",: , [1048,1049]",
      "dest": ",: , [1048,1049]"
    },
    {
      "src": "\": \" [2591,2592]",
      "dest": "\": \" [2591,2592]"
    },
    {
      "src": "type_name [777,784]",
      "dest": "type_name [777,784]"
    },
    {
      "src": "primitive_type [1433,1438]",
      "dest": "primitive_type [1433,1438]"
    },
    {
      "src": "): ) [1621,1622]",
      "dest": "): ) [1621,1622]"
    },
    {
      "src": "identifier: unlockedForRemovalTime [3514,3536]",
      "dest": "identifier: unlockedForRemovalTime [3514,3536]"
    },
    {
      "src": "identifier: size [932,936]",
      "dest": "identifier: size [932,936]"
    },
    {
      "src": "comment: // Removing from the list is time-locked, to ensure that any user of the system [2957,3036]",
      "dest": "comment: // Removing from the list is time-locked, to ensure that any user of the system [2957,3036]"
    },
    {
      "src": "call_argument [2433,2443]",
      "dest": "call_argument [2433,2443]"
    },
    {
      "src": "solidity_version_comparison_operator [651,653]",
      "dest": "solidity_version_comparison_operator [651,653]"
    },
    {
      "src": "identifier: contractAddress [2122,2137]",
      "dest": "identifier: contractAddress [2122,2137]"
    },
    {
      "src": "visibility [1456,1464]",
      "dest": "visibility [1456,1464]"
    },
    {
      "src": "parenthesized_expression [2445,2453]",
      "dest": "parenthesized_expression [2445,2453]"
    },
    {
      "src": "library: library [733,740]",
      "dest": "library: library [733,740]"
    },
    {
      "src": "bool: bool [2174,2178]",
      "dest": "bool: bool [2174,2178]"
    },
    {
      "src": "type_name [2391,2397]",
      "dest": "type_name [2391,2397]"
    },
    {
      "src": "}: } [3542,3543]",
      "dest": "}: } [3542,3543]"
    },
    {
      "src": "identifier: isContract [766,776]",
      "dest": "identifier: isContract [766,776]"
    },
    {
      "src": "internal: internal [1456,1464]",
      "dest": "internal: internal [1456,1464]"
    },
    {
      "src": "type_cast_expression [1679,1697]",
      "dest": "type_cast_expression [1679,1697]"
    },
    {
      "src": "bool: bool [1036,1040]",
      "dest": "bool: bool [1036,1040]"
    },
    {
      "src": "identifier: require [1475,1482]",
      "dest": "identifier: require [1475,1482]"
    },
    {
      "src": "variable_declaration [1584,1596]",
      "dest": "variable_declaration [1584,1596]"
    },
    {
      "src": "): ) [2601,2602]",
      "dest": "): ) [2601,2602]"
    },
    {
      "src": ",: , [2443,2444]",
      "dest": ",: , [2443,2444]"
    },
    {
      "src": "type_name [2188,2193]",
      "dest": "type_name [2188,2193]"
    },
    {
      "src": "internal: internal [794,802]",
      "dest": "internal: internal [794,802]"
    },
    {
      "src": "=: = [2420,2421]",
      "dest": "=: = [2420,2421]"
    },
    {
      "src": "{: { [751,752]",
      "dest": "{: { [751,752]"
    },
    {
      "src": "expression_statement [1662,1699]",
      "dest": "expression_statement [1662,1699]"
    },
    {
      "src": "function_definition [1380,1832]",
      "dest": "function_definition [1380,1832]"
    },
    {
      "src": "primitive_type [3505,3512]",
      "dest": "primitive_type [3505,3512]"
    },
    {
      "src": "(: ( [2494,2495]",
      "dest": "(: ( [2494,2495]"
    },
    {
      "src": "variable_declaration [2391,2419]",
      "dest": "variable_declaration [2391,2419]"
    },
    {
      "src": "(: ( [2110,2111]",
      "dest": "(: ( [2110,2111]"
    },
    {
      "src": "comment: // Structure representing a list of verifiers (validity/availability). [2686,2756]",
      "dest": "comment: // Structure representing a list of verifiers (validity/availability). [2686,2756]"
    },
    {
      "src": "call_argument [1679,1697]",
      "dest": "call_argument [1679,1697]"
    },
    {
      "src": "identifier: StarkExTypes [2667,2679]",
      "dest": "identifier: StarkExTypes [2667,2679]"
    },
    {
      "src": "{: { [3176,3177]",
      "dest": "{: { [3176,3177]"
    },
    {
      "src": "block_statement [1736,1826]",
      "dest": "block_statement [1736,1826]"
    },
    {
      "src": "call_expression [2103,2163]",
      "dest": "call_expression [2103,2163]"
    },
    {
      "src": "function: function [953,961]",
      "dest": "function: function [953,961]"
    },
    {
      "src": "==: == [2529,2531]",
      "dest": "==: == [2529,2531]"
    },
    {
      "src": "call_argument [2111,2138]",
      "dest": "call_argument [2111,2138]"
    },
    {
      "src": "function: function [2007,2015]",
      "dest": "function: function [2007,2015]"
    },
    {
      "src": "uint256: uint256 [1000,1007]",
      "dest": "uint256: uint256 [1000,1007]"
    },
    {
      "src": "): ) [821,822]",
      "dest": "): ) [821,822]"
    },
    {
      "src": "identifier: require [1125,1132]",
      "dest": "identifier: require [1125,1132]"
    },
    {
      "src": "\": \" [1142,1143]",
      "dest": "\": \" [1142,1143]"
    },
    {
      "src": "primitive_type [3186,3193]",
      "dest": "primitive_type [3186,3193]"
    },
    {
      "src": "parameter [2035,2058]",
      "dest": "parameter [2035,2058]"
    },
    {
      "src": "identifier: success [1133,1140]",
      "dest": "identifier: success [1133,1140]"
    },
    {
      "src": "parameter [1411,1431]",
      "dest": "parameter [1411,1431]"
    },
    {
      "src": "variable_declaration [1036,1048]",
      "dest": "variable_declaration [1036,1048]"
    },
    {
      "src": "parameter [1433,1454]",
      "dest": "parameter [1433,1454]"
    },
    {
      "src": "): ) [2137,2138]",
      "dest": "): ) [2137,2138]"
    },
    {
      "src": "identifier: success [1670,1677]",
      "dest": "identifier: success [1670,1677]"
    },
    {
      "src": "}: } [2608,2609]",
      "dest": "}: } [2608,2609]"
    },
    {
      "src": "): ) [3512,3513]",
      "dest": "): ) [3512,3513]"
    },
    {
      "src": "identifier: success [1041,1048]",
      "dest": "identifier: success [1041,1048]"
    },
    {
      "src": "string [1142,1163]",
      "dest": "string [1142,1163]"
    },
    {
      "src": "primitive_type [2035,2042]",
      "dest": "primitive_type [2035,2042]"
    },
    {
      "src": "string_literal [1509,1528]",
      "dest": "string_literal [1509,1528]"
    },
    {
      "src": "=>: => [3502,3504]",
      "dest": "=>: => [3502,3504]"
    },
    {
      "src": "call_expression [1625,1652]",
      "dest": "call_expression [1625,1652]"
    },
    {
      "src": "member_expression [1054,1068]",
      "dest": "member_expression [1054,1068]"
    },
    {
      "src": "type_name [981,988]",
      "dest": "type_name [981,988]"
    },
    {
      "src": "(: ( [2300,2301]",
      "dest": "(: ( [2300,2301]"
    },
    {
      "src": "primitive_type [817,821]",
      "dest": "primitive_type [817,821]"
    },
    {
      "src": "identifier: ApprovalChainData [3158,3175]",
      "dest": "identifier: ApprovalChainData [3158,3175]"
    },
    {
      "src": "type_name [1598,1603]",
      "dest": "type_name [1598,1603]"
    },
    {
      "src": "bool: bool [817,821]",
      "dest": "bool: bool [817,821]"
    },
    {
      "src": "\": \" [2161,2162]",
      "dest": "\": \" [2161,2162]"
    },
    {
      "src": "yul_evm_builtin [886,897]",
      "dest": "yul_evm_builtin [886,897]"
    },
    {
      "src": "\": \" [2351,2352]",
      "dest": "\": \" [2351,2352]"
    },
    {
      "src": "(: ( [897,898]",
      "dest": "(: ( [897,898]"
    },
    {
      "src": "variable_declaration_statement [1583,1653]",
      "dest": "variable_declaration_statement [1583,1653]"
    },
    {
      "src": "): ) [2313,2314]",
      "dest": "): ) [2313,2314]"
    },
    {
      "src": "expression_statement [2103,2164]",
      "dest": "expression_statement [2103,2164]"
    },
    {
      "src": "comment: // NOLINT: low-level-calls. [1089,1116]",
      "dest": "comment: // NOLINT: low-level-calls. [1089,1116]"
    },
    {
      "src": "): ) [2323,2324]",
      "dest": "): ) [2323,2324]"
    },
    {
      "src": "identifier: Addresses [741,750]",
      "dest": "identifier: Addresses [741,750]"
    },
    {
      "src": "parameter [1000,1014]",
      "dest": "parameter [1000,1014]"
    },
    {
      "src": ".: . [1761,1762]",
      "dest": ".: . [1761,1762]"
    },
    {
      "src": "call_expression [1125,1164]",
      "dest": "call_expression [1125,1164]"
    },
    {
      "src": "\": \" [2140,2141]",
      "dest": "\": \" [2140,2141]"
    },
    {
      "src": "state_mutability [803,807]",
      "dest": "state_mutability [803,807]"
    },
    {
      "src": "variable_declaration [2188,2211]",
      "dest": "variable_declaration [2188,2211]"
    },
    {
      "src": "identifier: abi [2422,2425]",
      "dest": "identifier: abi [2422,2425]"
    },
    {
      "src": "identifier: size [878,882]",
      "dest": "identifier: size [878,882]"
    },
    {
      "src": "\": \" [2312,2313]",
      "dest": "\": \" [2312,2313]"
    },
    {
      "src": "(: ( [1781,1782]",
      "dest": "(: ( [1781,1782]"
    },
    {
      "src": "(: ( [2445,2446]",
      "dest": "(: ( [2445,2446]"
    },
    {
      "src": "(: ( [2511,2512]",
      "dest": "(: ( [2511,2512]"
    },
    {
      "src": "\": \" [1085,1086]",
      "dest": "\": \" [1085,1086]"
    },
    {
      "src": "): ) [1050,1051]",
      "dest": "): ) [1050,1051]"
    },
    {
      "src": "struct_field_assignment [1069,1082]",
      "dest": "struct_field_assignment [1069,1082]"
    },
    {
      "src": "string_literal [1084,1086]",
      "dest": "string_literal [1084,1086]"
    },
    {
      "src": "string [2351,2380]",
      "dest": "string [2351,2380]"
    },
    {
      "src": "}: } [1170,1171]",
      "dest": "}: } [1170,1171]"
    },
    {
      "src": ",: , [1431,1432]",
      "dest": ",: , [1431,1432]"
    },
    {
      "src": "(: ( [2471,2472]",
      "dest": "(: ( [2471,2472]"
    },
    {
      "src": "=: = [1623,1624]",
      "dest": "=: = [1623,1624]"
    },
    {
      "src": "call_expression [2334,2381]",
      "dest": "call_expression [2334,2381]"
    },
    {
      "src": "library_declaration [733,2611]",
      "dest": "library_declaration [733,2611]"
    },
    {
      "src": "): ) [1086,1087]",
      "dest": "): ) [1086,1087]"
    },
    {
      "src": "primitive_type [1411,1418]",
      "dest": "primitive_type [1411,1418]"
    },
    {
      "src": "comment: // NOLINTNEXTLINE: low-level-calls. [1539,1574]",
      "dest": "comment: // NOLINTNEXTLINE: low-level-calls. [1539,1574]"
    },
    {
      "src": "}: } [1831,1832]",
      "dest": "}: } [1831,1832]"
    },
    {
      "src": "primitive_type [3494,3501]",
      "dest": "primitive_type [3494,3501]"
    },
    {
      "src": "yul_identifier [898,905]",
      "dest": "yul_identifier [898,905]"
    },
    {
      "src": "(: ( [2121,2122]",
      "dest": "(: ( [2121,2122]"
    },
    {
      "src": "}: } [2610,2611]",
      "dest": "}: } [2610,2611]"
    },
    {
      "src": "comment: /*       Validates that the passed contract address is of a real contract,       and that its id hash (as infered fromn identify()) matched the expected one.     */ [1838,2002]",
      "dest": "comment: /*       Validates that the passed contract address is of a real contract,       and that its id hash (as infered fromn identify()) matched the expected one.     */ [1838,2002]"
    },
    {
      "src": "call_expression [2464,2602]",
      "dest": "call_expression [2464,2602]"
    },
    {
      "src": "identifier: performEthTransfer [962,980]",
      "dest": "identifier: performEthTransfer [962,980]"
    },
    {
      "src": "string_literal [1142,1163]",
      "dest": "string_literal [1142,1163]"
    },
    {
      "src": "comment: // of unlockedForRemovalTime[A] != 0 and unlockedForRemovalTime[A] < (current time). [3393,3477]",
      "dest": "comment: // of unlockedForRemovalTime[A] != 0 and unlockedForRemovalTime[A] < (current time). [3393,3477]"
    },
    {
      "src": "identifier: recipient [989,998]",
      "dest": "identifier: recipient [989,998]"
    },
    {
      "src": "}: } [946,947]",
      "dest": "}: } [946,947]"
    },
    {
      "src": "call_argument [1483,1507]",
      "dest": "call_argument [1483,1507]"
    },
    {
      "src": "identifier: list [3196,3200]",
      "dest": "identifier: list [3196,3200]"
    },
    {
      "src": "identifier: decode [2426,2432]",
      "dest": "identifier: decode [2426,2432]"
    },
    {
      "src": ".: . [1723,1724]",
      "dest": ".: . [1723,1724]"
    },
    {
      "src": "comment: // A statement is valid only if all the verifiers in the list agree on it. [2761,2835]",
      "dest": "comment: // A statement is valid only if all the verifiers in the list agree on it. [2761,2835]"
    },
    {
      "src": "bytes: bytes [1598,1603]",
      "dest": "bytes: bytes [1598,1603]"
    },
    {
      "src": "identifier: success [2179,2186]",
      "dest": "identifier: success [2179,2186]"
    },
    {
      "src": "member_expression [1625,1642]",
      "dest": "member_expression [1625,1642]"
    },
    {
      "src": "identifier: callData [1643,1651]",
      "dest": "identifier: callData [1643,1651]"
    },
    {
      "src": "identifier: require [1750,1757]",
      "dest": "identifier: require [1750,1757]"
    },
    {
      "src": "type_name [1036,1040]",
      "dest": "type_name [1036,1040]"
    },
    {
      "src": ">: > [1731,1732]",
      "dest": ">: > [1731,1732]"
    },
    {
      "src": "primitive_type [1000,1007]",
      "dest": "primitive_type [1000,1007]"
    },
    {
      "src": ",: , [1779,1780]",
      "dest": ",: , [1779,1780]"
    },
    {
      "src": "variable_declaration_statement [1035,1088]",
      "dest": "variable_declaration_statement [1035,1088]"
    },
    {
      "src": "address: address [3186,3193]",
      "dest": "address: address [3186,3193]"
    },
    {
      "src": "identifier: abi [2277,2280]",
      "dest": "identifier: abi [2277,2280]"
    },
    {
      "src": "(: ( [1083,1084]",
      "dest": "(: ( [1083,1084]"
    },
    {
      "src": ",: , [1596,1597]",
      "dest": ",: , [1596,1597]"
    },
    {
      "src": "call_argument [2512,2526]",
      "dest": "call_argument [2512,2526]"
    },
    {
      "src": "yul_identifier [878,882]",
      "dest": "yul_identifier [878,882]"
    },
    {
      "src": "call_argument [2122,2137]",
      "dest": "call_argument [2122,2137]"
    },
    {
      "src": "struct_member [3186,3201]",
      "dest": "struct_member [3186,3201]"
    },
    {
      "src": "): ) [1697,1698]",
      "dest": "): ) [1697,1698]"
    },
    {
      "src": "): ) [2211,2212]",
      "dest": "): ) [2211,2212]"
    },
    {
      "src": "identifier: expectedIdHash [2532,2546]",
      "dest": "identifier: expectedIdHash [2532,2546]"
    },
    {
      "src": "expression_statement [1125,1165]",
      "dest": "expression_statement [1125,1165]"
    },
    {
      "src": "variable_declaration [2174,2186]",
      "dest": "variable_declaration [2174,2186]"
    },
    {
      "src": "identifier: contractAddress [2043,2058]",
      "dest": "identifier: contractAddress [2043,2058]"
    },
    {
      "src": "call_argument [2140,2162]",
      "dest": "call_argument [2140,2162]"
    },
    {
      "src": "): ) [1734,1735]",
      "dest": "): ) [1734,1735]"
    },
    {
      "src": "comment: /*       Safe wrapper around ERC20/ERC721 calls.       This is required because many deployed ERC20 contracts don't return a value.       See https://github.com/ethereum/solidity/issues/4116.     */ [1177,1375]",
      "dest": "comment: /*       Safe wrapper around ERC20/ERC721 calls.       This is required because many deployed ERC20 contracts don't return a value.       See https://github.com/ethereum/solidity/issues/4116.     */ [1177,1375]"
    },
    {
      "src": "): ) [1506,1507]",
      "dest": "): ) [1506,1507]"
    },
    {
      "src": "{: { [823,824]",
      "dest": "{: { [823,824]"
    },
    {
      "src": "identifier: isContract [2111,2121]",
      "dest": "identifier: isContract [2111,2121]"
    },
    {
      "src": "address: address [777,784]",
      "dest": "address: address [777,784]"
    },
    {
      "src": "function_body [1025,1171]",
      "dest": "function_body [1025,1171]"
    },
    {
      "src": "(: ( [2341,2342]",
      "dest": "(: ( [2341,2342]"
    },
    {
      "src": "call_argument [1142,1163]",
      "dest": "call_argument [1142,1163]"
    },
    {
      "src": "call_argument [2342,2349]",
      "dest": "call_argument [2342,2349]"
    },
    {
      "src": "parenthesized_expression [1781,1787]",
      "dest": "parenthesized_expression [1781,1787]"
    },
    {
      "src": "(: ( [1493,1494]",
      "dest": "(: ( [1493,1494]"
    },
    {
      "src": "): ) [1696,1697]",
      "dest": "): ) [1696,1697]"
    },
    {
      "src": "): ) [1163,1164]",
      "dest": "): ) [1163,1164]"
    },
    {
      "src": "identifier: success [2342,2349]",
      "dest": "identifier: success [2342,2349]"
    },
    {
      "src": "solidity_pragma_token [643,659]",
      "dest": "solidity_pragma_token [643,659]"
    },
    {
      "src": "): ) [1787,1788]",
      "dest": "): ) [1787,1788]"
    },
    {
      "src": "{: { [2093,2094]",
      "dest": "{: { [2093,2094]"
    },
    {
      "src": "\": \" [1509,1510]",
      "dest": "\": \" [1509,1510]"
    },
    {
      "src": "call_argument [2277,2314]",
      "dest": "call_argument [2277,2314]"
    },
    {
      "src": "identifier: call [1064,1068]",
      "dest": "identifier: call [1064,1068]"
    },
    {
      "src": "): ) [1786,1787]",
      "dest": "): ) [1786,1787]"
    },
    {
      "src": "return_type_definition [808,822]",
      "dest": "return_type_definition [808,822]"
    },
    {
      "src": "identifier: tokenAddress [1419,1431]",
      "dest": "identifier: tokenAddress [1419,1431]"
    },
    {
      "src": "type_name [1411,1418]",
      "dest": "type_name [1411,1418]"
    },
    {
      "src": "comment: // not content with the announced removal has ample time to leave the system before it is [3041,3130]",
      "dest": "comment: // not content with the announced removal has ample time to leave the system before it is [3041,3130]"
    },
    {
      "src": "type_name [1433,1438]",
      "dest": "type_name [1433,1438]"
    },
    {
      "src": "call_argument [1686,1696]",
      "dest": "call_argument [1686,1696]"
    },
    {
      "src": "identifier: tokenAddress [1625,1637]",
      "dest": "identifier: tokenAddress [1625,1637]"
    },
    {
      "src": "member_expression [1713,1730]",
      "dest": "member_expression [1713,1730]"
    },
    {
      "src": "): ) [792,793]",
      "dest": "): ) [792,793]"
    },
    {
      "src": "string: string [1679,1685]",
      "dest": "string: string [1679,1685]"
    },
    {
      "src": "): ) [2527,2528]",
      "dest": "): ) [2527,2528]"
    },
    {
      "src": "type_name [3186,3193]",
      "dest": "type_name [3186,3193]"
    },
    {
      "src": "call_argument [1790,1814]",
      "dest": "call_argument [1790,1814]"
    },
    {
      "src": "primitive_type [1584,1588]",
      "dest": "primitive_type [1584,1588]"
    },
    {
      "src": "type_name [817,821]",
      "dest": "type_name [817,821]"
    },
    {
      "src": "struct_expression [1054,1083]",
      "dest": "struct_expression [1054,1083]"
    },
    {
      "src": "type_name [2035,2042]",
      "dest": "type_name [2035,2042]"
    },
    {
      "src": "type_name [2060,2067]",
      "dest": "type_name [2060,2067]"
    },
    {
      "src": "call_argument [1509,1528]",
      "dest": "call_argument [1509,1528]"
    },
    {
      "src": "call_argument [1494,1506]",
      "dest": "call_argument [1494,1506]"
    },
    {
      "src": "(: ( [1132,1133]",
      "dest": "(: ( [1132,1133]"
    },
    {
      "src": "address: address [2035,2042]",
      "dest": "address: address [2035,2042]"
    },
    {
      "src": "identifier: isContract [1483,1493]",
      "dest": "identifier: isContract [1483,1493]"
    },
    {
      "src": "extcodesize: extcodesize [886,897]",
      "dest": "extcodesize: extcodesize [886,897]"
    },
    {
      "src": "primitive_type [2060,2067]",
      "dest": "primitive_type [2060,2067]"
    },
    {
      "src": "variable_declaration_statement [2391,2455]",
      "dest": "variable_declaration_statement [2391,2455]"
    },
    {
      "src": "{: { [1025,1026]",
      "dest": "{: { [1025,1026]"
    },
    {
      "src": ",: , [1507,1508]",
      "dest": ",: , [1507,1508]"
    },
    {
      "src": "(: ( [1712,1713]",
      "dest": "(: ( [1712,1713]"
    },
    {
      "src": "(: ( [1757,1758]",
      "dest": "(: ( [1757,1758]"
    },
    {
      "src": "string [2140,2162]",
      "dest": "string [2140,2162]"
    },
    {
      "src": "(: ( [1410,1411]",
      "dest": "(: ( [1410,1411]"
    },
    {
      "src": "type_name [1000,1007]",
      "dest": "type_name [1000,1007]"
    },
    {
      "src": "string [1790,1814]",
      "dest": "string [1790,1814]"
    },
    {
      "src": "solidity_version: 0.6.12 [653,659]",
      "dest": "solidity_version: 0.6.12 [653,659]"
    },
    {
      "src": "function_body [2093,2609]",
      "dest": "function_body [2093,2609]"
    },
    {
      "src": "}: } [1082,1083]",
      "dest": "}: } [1082,1083]"
    },
    {
      "src": "call_argument [2495,2527]",
      "dest": "call_argument [2495,2527]"
    },
    {
      "src": ".: . [1637,1638]",
      "dest": ".: . [1637,1638]"
    },
    {
      "src": "if_statement [1709,1826]",
      "dest": "if_statement [1709,1826]"
    },
    {
      "src": "expression_statement [1750,1816]",
      "dest": "expression_statement [1750,1816]"
    },
    {
      "src": "]: ] [3194,3195]",
      "dest": "]: ] [3194,3195]"
    },
    {
      "src": "identifier: size [841,845]",
      "dest": "identifier: size [841,845]"
    },
    {
      "src": "return: return [925,931]",
      "dest": "return: return [925,931]"
    },
    {
      "src": "comment: /*   Copyright 2019-2022 StarkWare Industries Ltd.    Licensed under the Apache License, Version 2.0 (the \"License\").   You may not use this file except in compliance with the License.   You may obtain a copy of the License at    https://www.starkware.co/open-source-license/    Unless required by applicable law or agreed to in writing,   software distributed under the License is distributed on an \"AS IS\" BASIS,   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   See the License for the specific language governing permissions   and limitations under the License. */ [0,595]",
      "dest": "comment: /*   Copyright 2019-2022 StarkWare Industries Ltd.    Licensed under the Apache License, Version 2.0 (the \"License\").   You may not use this file except in compliance with the License.   You may obtain a copy of the License at    https://www.starkware.co/open-source-license/    Unless required by applicable law or agreed to in writing,   software distributed under the License is distributed on an \"AS IS\" BASIS,   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   See the License for the specific language governing permissions   and limitations under the License. */ [0,595]"
    },
    {
      "src": "pragma: pragma [636,642]",
      "dest": "pragma: pragma [636,642]"
    },
    {
      "src": "expression_statement [2334,2382]",
      "dest": "expression_statement [2334,2382]"
    },
    {
      "src": "expression_statement [1475,1530]",
      "dest": "expression_statement [1475,1530]"
    },
    {
      "src": "call_expression [2111,2138]",
      "dest": "call_expression [2111,2138]"
    },
    {
      "src": "{: { [1736,1737]",
      "dest": "{: { [1736,1737]"
    },
    {
      "src": "comment: // Adding a verifier to the list is immediate - this is used for fast resolution of [2840,2923]",
      "dest": "comment: // Adding a verifier to the list is immediate - this is used for fast resolution of [2840,2923]"
    },
    {
      "src": "(: ( [1685,1686]",
      "dest": "(: ( [1685,1686]"
    },
    {
      "src": "string: string [2446,2452]",
      "dest": "string: string [2446,2452]"
    },
    {
      "src": "\": \" [1790,1791]",
      "dest": "\": \" [1790,1791]"
    },
    {
      "src": "call_argument [1643,1651]",
      "dest": "call_argument [1643,1651]"
    },
    {
      "src": "call_expression [2215,2324]",
      "dest": "call_expression [2215,2324]"
    },
    {
      "src": "call_expression [2422,2454]",
      "dest": "call_expression [2422,2454]"
    },
    {
      "src": "bytes: bytes [2188,2193]",
      "dest": "bytes: bytes [2188,2193]"
    },
    {
      "src": "identifier: returndata [2201,2211]",
      "dest": "identifier: returndata [2201,2211]"
    },
    {
      "src": "variable_declaration [1598,1621]",
      "dest": "variable_declaration [1598,1621]"
    },
    {
      "src": "string_literal [2301,2313]",
      "dest": "string_literal [2301,2313]"
    },
    {
      "src": "type_name [3486,3513]",
      "dest": "type_name [3486,3513]"
    },
    {
      "src": "function: function [757,765]",
      "dest": "function: function [757,765]"
    },
    {
      "src": "yul_assignment [878,906]",
      "dest": "yul_assignment [878,906]"
    },
    {
      "src": ",: , [1788,1789]",
      "dest": ",: , [1788,1789]"
    },
    {
      "src": "variable_declaration_tuple [1035,1051]",
      "dest": "variable_declaration_tuple [1035,1051]"
    },
    {
      "src": "(: ( [1482,1483]",
      "dest": "(: ( [1482,1483]"
    },
    {
      "src": "}: } [1825,1826]",
      "dest": "}: } [1825,1826]"
    },
    {
      "src": "internal: internal [1016,1024]",
      "dest": "internal: internal [1016,1024]"
    },
    {
      "src": "function_definition [2007,2609]",
      "dest": "function_definition [2007,2609]"
    },
    {
      "src": "call_expression [1758,1788]",
      "dest": "call_expression [1758,1788]"
    },
    {
      "src": "function_definition [953,1171]",
      "dest": "function_definition [953,1171]"
    },
    {
      "src": "primitive_type [2188,2193]",
      "dest": "primitive_type [2188,2193]"
    },
    {
      "src": "primitive_type [2446,2452]",
      "dest": "primitive_type [2446,2452]"
    },
    {
      "src": "(: ( [1583,1584]",
      "dest": "(: ( [1583,1584]"
    },
    {
      "src": "identifier: keccak256 [2485,2494]",
      "dest": "identifier: keccak256 [2485,2494]"
    },
    {
      "src": "string_literal [1790,1814]",
      "dest": "string_literal [1790,1814]"
    },
    {
      "src": "\": \" [1813,1814]",
      "dest": "\": \" [1813,1814]"
    },
    {
      "src": "{: { [864,865]",
      "dest": "{: { [864,865]"
    },
    {
      "src": "identifier: call [2231,2235]",
      "dest": "identifier: call [2231,2235]"
    },
    {
      "src": "struct_member [3486,3537]",
      "dest": "struct_member [3486,3537]"
    },
    {
      "src": "(: ( [1035,1036]",
      "dest": "(: ( [1035,1036]"
    },
    {
      "src": "identifier: require [1662,1669]",
      "dest": "identifier: require [1662,1669]"
    },
    {
      "src": ",: , [1677,1678]",
      "dest": ",: , [1677,1678]"
    },
    {
      "src": "struct: struct [3151,3157]",
      "dest": "struct: struct [3151,3157]"
    },
    {
      "src": "call_argument [1670,1677]",
      "dest": "call_argument [1670,1677]"
    },
    {
      "src": ",: , [2186,2187]",
      "dest": ",: , [2186,2187]"
    },
    {
      "src": "(: ( [2235,2236]",
      "dest": "(: ( [2235,2236]"
    },
    {
      "src": ":: : [1074,1075]",
      "dest": ":: : [1074,1075]"
    },
    {
      "src": "comment: // Removal of the verifier with address A is allowed only in the case the value [3305,3384]",
      "dest": "comment: // Removal of the verifier with address A is allowed only in the case the value [3305,3384]"
    },
    {
      "src": "identifier: account [898,905]",
      "dest": "identifier: account [898,905]"
    },
    {
      "src": "binary_expression [932,940]",
      "dest": "binary_expression [932,940]"
    },
    {
      "src": "comment: /*   Common Utility librarries.   I. Addresses (extending address). */ [662,732]",
      "dest": "comment: /*   Common Utility librarries.   I. Addresses (extending address). */ [662,732]"
    },
    {
      "src": "(: ( [2432,2433]",
      "dest": "(: ( [2432,2433]"
    },
    {
      "src": "returns: returns [808,815]",
      "dest": "returns: returns [808,815]"
    },
    {
      "src": ">: > [937,938]",
      "dest": ">: > [937,938]"
    },
    {
      "src": "): ) [1528,1529]",
      "dest": "): ) [1528,1529]"
    },
    {
      "src": "): ) [2526,2527]",
      "dest": "): ) [2526,2527]"
    },
    {
      "src": "): ) [2453,2454]",
      "dest": "): ) [2453,2454]"
    },
    {
      "src": "type_name [3505,3512]",
      "dest": "type_name [3505,3512]"
    },
    {
      "src": ",: , [2138,2139]",
      "dest": ",: , [2138,2139]"
    },
    {
      "src": "call_argument [2485,2546]",
      "dest": "call_argument [2485,2546]"
    },
    {
      "src": "{: { [2680,2681]",
      "dest": "{: { [2680,2681]"
    },
    {
      "src": "source_file [0,3546]",
      "dest": "source_file [0,3546]"
    },
    {
      "src": "primitive_type [2391,2397]",
      "dest": "primitive_type [2391,2397]"
    },
    {
      "src": "call_expression [1054,1087]",
      "dest": "call_expression [1054,1087]"
    },
    {
      "src": "address: address [981,988]",
      "dest": "address: address [981,988]"
    },
    {
      "src": "call_argument [2560,2592]",
      "dest": "call_argument [2560,2592]"
    },
    {
      "src": "): ) [2162,2163]",
      "dest": "): ) [2162,2163]"
    },
    {
      "src": "^:  ^ [651,653]",
      "dest": "^:  ^ [651,653]"
    },
    {
      "src": "identifier: returndata [1686,1696]",
      "dest": "identifier: returndata [1686,1696]"
    },
    {
      "src": "(: ( [1768,1769]",
      "dest": "(: ( [1768,1769]"
    },
    {
      "src": "memory: memory [2398,2404]",
      "dest": "memory: memory [2398,2404]"
    },
    {
      "src": "identifier: encodePacked [2499,2511]",
      "dest": "identifier: encodePacked [2499,2511]"
    },
    {
      "src": "yul_path [898,905]",
      "dest": "yul_path [898,905]"
    },
    {
      "src": ",: , [2058,2059]",
      "dest": ",: , [2058,2059]"
    },
    {
      "src": "call_expression [2277,2314]",
      "dest": "call_expression [2277,2314]"
    },
    {
      "src": "call_argument [2351,2380]",
      "dest": "call_argument [2351,2380]"
    },
    {
      "src": "}: } [915,916]",
      "dest": "}: } [915,916]"
    },
    {
      "src": "variable_declaration_tuple [1583,1622]",
      "dest": "variable_declaration_tuple [1583,1622]"
    },
    {
      "src": "comment: // removed. [3135,3146]",
      "dest": "comment: // removed. [3135,3146]"
    },
    {
      "src": "variable_declaration_statement [833,846]",
      "dest": "variable_declaration_statement [833,846]"
    },
    {
      "src": "string [1084,1086]",
      "dest": "string [1084,1086]"
    },
    {
      "src": "visibility [2084,2092]",
      "dest": "visibility [2084,2092]"
    },
    {
      "src": "): ) [2380,2381]",
      "dest": "): ) [2380,2381]"
    },
    {
      "src": "identifier: callData [1446,1454]",
      "dest": "identifier: callData [1446,1454]"
    },
    {
      "src": "bool: bool [1782,1786]",
      "dest": "bool: bool [1782,1786]"
    },
    {
      "src": "call_argument [1084,1086]",
      "dest": "call_argument [1084,1086]"
    },
    {
      "src": "mapping: mapping [3486,3493]",
      "dest": "mapping: mapping [3486,3493]"
    },
    {
      "src": "identifier: safeTokenContractCall [1389,1410]",
      "dest": "identifier: safeTokenContractCall [1389,1410]"
    },
    {
      "src": "primitive_type [1782,1786]",
      "dest": "primitive_type [1782,1786]"
    },
    {
      "src": "string_literal [2140,2162]",
      "dest": "string_literal [2140,2162]"
    },
    {
      "src": "function_body [1465,1832]",
      "dest": "function_body [1465,1832]"
    },
    {
      "src": "parameter [2060,2082]",
      "dest": "parameter [2060,2082]"
    },
    {
      "src": "visibility [794,802]",
      "dest": "visibility [794,802]"
    },
    {
      "src": "uint256: uint256 [3505,3512]",
      "dest": "uint256: uint256 [3505,3512]"
    },
    {
      "src": "identifier: decode [1762,1768]",
      "dest": "identifier: decode [1762,1768]"
    },
    {
      "src": "(: ( [776,777]",
      "dest": "(: ( [776,777]"
    },
    {
      "src": "identifier: require [2464,2471]",
      "dest": "identifier: require [2464,2471]"
    },
    {
      "src": "=: = [1052,1053]",
      "dest": "=: = [1052,1053]"
    },
    {
      "src": "bool: bool [1584,1588]",
      "dest": "bool: bool [1584,1588]"
    },
    {
      "src": "string [1509,1528]",
      "dest": "string [1509,1528]"
    },
    {
      "src": "binary_expression [1713,1734]",
      "dest": "binary_expression [1713,1734]"
    },
    {
      "src": "view: view [803,807]",
      "dest": "view: view [803,807]"
    },
    {
      "src": "call_argument [1758,1788]",
      "dest": "call_argument [1758,1788]"
    },
    {
      "src": "\": \" [1527,1528]",
      "dest": "\": \" [1527,1528]"
    },
    {
      "src": ",: , [2546,2547]",
      "dest": ",: , [2546,2547]"
    },
    {
      "src": "member_expression [2277,2300]",
      "dest": "member_expression [2277,2300]"
    },
    {
      "src": "comment: // Represents the time after which the verifier with the given address can be removed. [3210,3296]",
      "dest": "comment: // Represents the time after which the verifier with the given address can be removed. [3210,3296]"
    },
    {
      "src": "primitive_type [1679,1685]",
      "dest": "primitive_type [1679,1685]"
    },
    {
      "src": "expression_statement [2464,2603]",
      "dest": "expression_statement [2464,2603]"
    },
    {
      "src": "): ) [2452,2453]",
      "dest": "): ) [2452,2453]"
    },
    {
      "src": "function_body [823,947]",
      "dest": "function_body [823,947]"
    },
    {
      "src": "call_argument [1781,1787]",
      "dest": "call_argument [1781,1787]"
    },
    {
      "src": "string [2301,2313]",
      "dest": "string [2301,2313]"
    },
    {
      "src": "): ) [1651,1652]",
      "dest": "): ) [1651,1652]"
    },
    {
      "src": ",: , [2349,2350]",
      "dest": ",: , [2349,2350]"
    },
    {
      "src": "type_name [2174,2178]",
      "dest": "type_name [2174,2178]"
    },
    {
      "src": "variable_declaration [833,845]",
      "dest": "variable_declaration [833,845]"
    },
    {
      "src": "identifier: returndata [2433,2443]",
      "dest": "identifier: returndata [2433,2443]"
    },
    {
      "src": "parameter [981,998]",
      "dest": "parameter [981,998]"
    },
    {
      "src": "(: ( [3493,3494]",
      "dest": "(: ( [3493,3494]"
    },
    {
      "src": "struct_declaration [3151,3543]",
      "dest": "struct_declaration [3151,3543]"
    },
    {
      "src": "member_expression [2215,2235]",
      "dest": "member_expression [2215,2235]"
    },
    {
      "src": "[: [ [3193,3194]",
      "dest": "[: [ [3193,3194]"
    },
    {
      "src": "memory: memory [1604,1610]",
      "dest": "memory: memory [1604,1610]"
    },
    {
      "src": "comment: // SPDX-License-Identifier: Apache-2.0. [596,635]",
      "dest": "comment: // SPDX-License-Identifier: Apache-2.0. [596,635]"
    },
    {
      "src": "identifier: abi [2495,2498]",
      "dest": "identifier: abi [2495,2498]"
    },
    {
      "src": "parameter [777,792]",
      "dest": "parameter [777,792]"
    },
    {
      "src": ".: . [1063,1064]",
      "dest": ".: . [1063,1064]"
    },
    {
      "src": "\": \" [2379,2380]",
      "dest": "\": \" [2379,2380]"
    },
    {
      "src": "comment: // NOLINT: low-level-calls. [2237,2264]",
      "dest": "comment: // NOLINT: low-level-calls. [2237,2264]"
    },
    {
      "src": "call_argument [2301,2313]",
      "dest": "call_argument [2301,2313]"
    },
    {
      "src": "type_name [1584,1588]",
      "dest": "type_name [1584,1588]"
    },
    {
      "src": "identifier: encodeWithSignature [2281,2300]",
      "dest": "identifier: encodeWithSignature [2281,2300]"
    },
    {
      "src": ".: . [2425,2426]",
      "dest": ".: . [2425,2426]"
    },
    {
      "src": "assembly: assembly [855,863]",
      "dest": "assembly: assembly [855,863]"
    },
    {
      "src": "member_expression [2422,2432]",
      "dest": "member_expression [2422,2432]"
    },
    {
      "src": "yul_path [878,882]",
      "dest": "yul_path [878,882]"
    },
    {
      "src": "memory: memory [1439,1445]",
      "dest": "memory: memory [1439,1445]"
    },
    {
      "src": "contract_body [751,2611]",
      "dest": "contract_body [751,2611]"
    },
    {
      "src": "variable_declaration_tuple [2173,2212]",
      "dest": "variable_declaration_tuple [2173,2212]"
    },
    {
      "src": "uint256: uint256 [833,840]",
      "dest": "uint256: uint256 [833,840]"
    },
    {
      "src": "(: ( [2034,2035]",
      "dest": "(: ( [2034,2035]"
    },
    {
      "src": "): ) [1014,1015]",
      "dest": "): ) [1014,1015]"
    },
    {
      "src": "solidity: solidity [643,651]",
      "dest": "solidity: solidity [643,651]"
    },
    {
      "src": "call_argument [1133,1140]",
      "dest": "call_argument [1133,1140]"
    },
    {
      "src": "(: ( [1642,1643]",
      "dest": "(: ( [1642,1643]"
    },
    {
      "src": "assembly_statement [855,916]",
      "dest": "assembly_statement [855,916]"
    },
    {
      "src": "function: function [1380,1388]",
      "dest": "function: function [1380,1388]"
    },
    {
      "src": "primitive_type [981,988]",
      "dest": "primitive_type [981,988]"
    },
    {
      "src": "string_literal [2351,2380]",
      "dest": "string_literal [2351,2380]"
    },
    {
      "src": "primitive_type [833,840]",
      "dest": "primitive_type [833,840]"
    },
    {
      "src": "call_argument [1769,1779]",
      "dest": "call_argument [1769,1779]"
    },
    {
      "src": "type_name [3186,3195]",
      "dest": "type_name [3186,3195]"
    },
    {
      "src": "identifier: abi [1758,1761]",
      "dest": "identifier: abi [1758,1761]"
    },
    {
      "src": "call_expression [2485,2528]",
      "dest": "call_expression [2485,2528]"
    },
    {
      "src": "number_literal: 0 [939,940]",
      "dest": "number_literal: 0 [939,940]"
    },
    {
      "src": "): ) [1454,1455]",
      "dest": "): ) [1454,1455]"
    },
    {
      "src": ".: . [2280,2281]",
      "dest": ".: . [2280,2281]"
    },
    {
      "src": "call_argument [2445,2453]",
      "dest": "call_argument [2445,2453]"
    },
    {
      "src": "address: address [3494,3501]",
      "dest": "address: address [3494,3501]"
    },
    {
      "src": ",: , [1140,1141]",
      "dest": ",: , [1140,1141]"
    },
    {
      "src": "library_declaration [2659,3545]",
      "dest": "library_declaration [2659,3545]"
    },
    {
      "src": "(: ( [980,981]",
      "dest": "(: ( [980,981]"
    },
    {
      "src": "identifier: value [1069,1074]",
      "dest": "identifier: value [1069,1074]"
    },
    {
      "src": "identifier: returndata [1611,1621]",
      "dest": "identifier: returndata [1611,1621]"
    },
    {
      "src": "address: address [1411,1418]",
      "dest": "address: address [1411,1418]"
    },
    {
      "src": "{: { [1068,1069]",
      "dest": "{: { [1068,1069]"
    },
    {
      "src": "primitive_type [1598,1603]",
      "dest": "primitive_type [1598,1603]"
    },
    {
      "src": "\": \" [2560,2561]",
      "dest": "\": \" [2560,2561]"
    },
    {
      "src": ":=: := [883,885]",
      "dest": ":=: := [883,885]"
    },
    {
      "src": "internal: internal [2084,2092]",
      "dest": "internal: internal [2084,2092]"
    },
    {
      "src": "): ) [1814,1815]",
      "dest": "): ) [1814,1815]"
    },
    {
      "src": "binary_expression [2485,2546]",
      "dest": "binary_expression [2485,2546]"
    },
    {
      "src": "identifier: call [1638,1642]",
      "dest": "identifier: call [1638,1642]"
    },
    {
      "src": "\": \" [2301,2302]",
      "dest": "\": \" [2301,2302]"
    },
    {
      "src": "{: { [1465,1466]",
      "dest": "{: { [1465,1466]"
    },
    {
      "src": "identifier: recipient [1054,1063]",
      "dest": "identifier: recipient [1054,1063]"
    },
    {
      "src": "call_expression [1483,1507]",
      "dest": "call_expression [1483,1507]"
    },
    {
      "src": "identifier: require [2103,2110]",
      "dest": "identifier: require [2103,2110]"
    },
    {
      "src": "visibility [1016,1024]",
      "dest": "visibility [1016,1024]"
    },
    {
      "src": "primitive_type [777,784]",
      "dest": "primitive_type [777,784]"
    },
    {
      "src": "string [2560,2592]",
      "dest": "string [2560,2592]"
    },
    {
      "src": "identifier: length [1724,1730]",
      "dest": "identifier: length [1724,1730]"
    },
    {
      "src": "string: string [2391,2397]",
      "dest": "string: string [2391,2397]"
    },
    {
      "src": "identifier: tokenAddress [1494,1506]",
      "dest": "identifier: tokenAddress [1494,1506]"
    },
    {
      "src": "variable_declaration_statement [2173,2325]",
      "dest": "variable_declaration_statement [2173,2325]"
    },
    {
      "src": "identifier: amount [1008,1014]",
      "dest": "identifier: amount [1008,1014]"
    },
    {
      "src": "function_definition [757,947]",
      "dest": "function_definition [757,947]"
    },
    {
      "src": "primitive_type [1036,1040]",
      "dest": "primitive_type [1036,1040]"
    },
    {
      "src": "number_literal: 0 [1733,1734]",
      "dest": "number_literal: 0 [1733,1734]"
    },
    {
      "src": "=: = [2213,2214]",
      "dest": "=: = [2213,2214]"
    },
    {
      "src": "identifier: returndata [1769,1779]",
      "dest": "identifier: returndata [1769,1779]"
    },
    {
      "src": "\": \" [1084,1085]",
      "dest": "\": \" [1084,1085]"
    },
    {
      "src": "call_expression [1662,1698]",
      "dest": "call_expression [1662,1698]"
    },
    {
      "src": "type_name [833,840]",
      "dest": "type_name [833,840]"
    },
    {
      "src": "library: library [2659,2666]",
      "dest": "library: library [2659,2666]"
    },
    {
      "src": "identifier: amount [1076,1082]",
      "dest": "identifier: amount [1076,1082]"
    },
    {
      "src": "bytes: bytes [1433,1438]",
      "dest": "bytes: bytes [1433,1438]"
    },
    {
      "src": "identifier: realContractId [2405,2419]",
      "dest": "identifier: realContractId [2405,2419]"
    },
    {
      "src": "identifier: require [2334,2341]",
      "dest": "identifier: require [2334,2341]"
    },
    {
      "src": "comment: // any soundness issues. [2928,2952]",
      "dest": "comment: // any soundness issues. [2928,2952]"
    },
    {
      "src": "if: if [1709,1711]",
      "dest": "if: if [1709,1711]"
    },
    {
      "src": "bytes32: bytes32 [2060,2067]",
      "dest": "bytes32: bytes32 [2060,2067]"
    },
    {
      "src": "\": \" [1162,1163]",
      "dest": "\": \" [1162,1163]"
    },
    {
      "src": "memory: memory [2194,2200]",
      "dest": "memory: memory [2194,2200]"
    },
    {
      "src": "member_expression [1758,1768]",
      "dest": "member_expression [1758,1768]"
    },
    {
      "src": "return_statement [925,941]",
      "dest": "return_statement [925,941]"
    },
    {
      "src": "identifier: realContractId [2512,2526]",
      "dest": "identifier: realContractId [2512,2526]"
    },
    {
      "src": "string_literal [2560,2592]",
      "dest": "string_literal [2560,2592]"
    },
    {
      "src": "contract_body [2680,3545]",
      "dest": "contract_body [2680,3545]"
    },
    {
      "src": "identifier: success [1589,1596]",
      "dest": "identifier: success [1589,1596]"
    },
    {
      "src": ".: . [2230,2231]",
      "dest": ".: . [2230,2231]"
    },
    {
      "src": ",: , [998,999]",
      "dest": ",: , [998,999]"
    },
    {
      "src": "): ) [905,906]",
      "dest": "): ) [905,906]"
    },
    {
      "src": "): ) [2082,2083]",
      "dest": "): ) [2082,2083]"
    },
    {
      "src": "pragma_directive [636,660]",
      "dest": "pragma_directive [636,660]"
    },
    {
      "src": "identifier: account [785,792]",
      "dest": "identifier: account [785,792]"
    },
    {
      "src": "call_expression [1475,1529]",
      "dest": "call_expression [1475,1529]"
    }
  ],
  "actions": []
}