{
  "matches": [
    {
      "src": "=: = [37464,37465]",
      "dest": "=: = [49118,49119]"
    },
    {
      "src": "function: function [10076,10084]",
      "dest": "function: function [25529,25537]"
    },
    {
      "src": "let: let [35101,35104]",
      "dest": "let: let [46695,46698]"
    },
    {
      "src": "internal: internal [10125,10133]",
      "dest": "internal: internal [25578,25586]"
    },
    {
      "src": "member_expression [14056,14070]",
      "dest": "member_expression [10866,10880]"
    },
    {
      "src": "(: ( [12776,12777]",
      "dest": "(: ( [9586,9587]"
    },
    {
      "src": "{: { [10149,10150]",
      "dest": "{: { [25602,25603]"
    },
    {
      "src": "call_argument [26010,26017]",
      "dest": "call_argument [35188,35195]"
    },
    {
      "src": "call_argument [36988,36995]",
      "dest": "call_argument [48605,48612]"
    },
    {
      "src": "identifier: toDeleteIndex [6874,6887]",
      "dest": "identifier: toDeleteIndex [22327,22340]"
    },
    {
      "src": "user_defined_type [9232,9242]",
      "dest": "user_defined_type [24685,24695]"
    },
    {
      "src": ",: , [16088,16089]",
      "dest": ",: , [12898,12899]"
    },
    {
      "src": "function: function [25460,25468]",
      "dest": "function: function [34638,34646]"
    },
    {
      "src": "identifier: RLPItem [29450,29457]",
      "dest": "identifier: RLPItem [42067,42074]"
    },
    {
      "src": "identifier: decode [38608,38614]",
      "dest": "identifier: decode [50264,50270]"
    },
    {
      "src": "identifier: toUint [39699,39705]",
      "dest": "identifier: toUint [51444,51450]"
    },
    {
      "src": "array_access [23551,23563]",
      "dest": "array_access [32729,32741]"
    },
    {
      "src": "(: ( [23585,23586]",
      "dest": "(: ( [32763,32764]"
    },
    {
      "src": ":=: := [29316,29318]",
      "dest": ":=: := [41268,41270]"
    },
    {
      "src": "call_argument [37911,37935]",
      "dest": "call_argument [49565,49589]"
    },
    {
      "src": "binary_expression [6289,6303]",
      "dest": "binary_expression [21742,21756]"
    },
    {
      "src": "identifier: account [23973,23980]",
      "dest": "identifier: account [33151,33158]"
    },
    {
      "src": "if_statement [25981,26092]",
      "dest": "if_statement [35159,35270]"
    },
    {
      "src": "interface_declaration [35540,36811]",
      "dest": "interface_declaration [47157,48428]"
    },
    {
      "src": "constructor: constructor [37795,37806]",
      "dest": "constructor: constructor [49449,49460]"
    },
    {
      "src": "identifier: amount [14079,14085]",
      "dest": "identifier: amount [10889,10895]"
    },
    {
      "src": "user_defined_type [7524,7527]",
      "dest": "user_defined_type [22977,22980]"
    },
    {
      "src": "]: ] [40082,40083]",
      "dest": "]: ] [51825,51826]"
    },
    {
      "src": "assembly_statement [29288,29347]",
      "dest": "assembly_statement [41240,41299]"
    },
    {
      "src": "-: - [35063,35064]",
      "dest": "-: - [46649,46650]"
    },
    {
      "src": "parameter [33827,33841]",
      "dest": "parameter [16565,16578]"
    },
    {
      "src": "(: ( [24689,24690]",
      "dest": "(: ( [33867,33868]"
    },
    {
      "src": "call_argument [27988,28000]",
      "dest": "call_argument [39162,39174]"
    },
    {
      "src": "uint256: uint256 [28800,28807]",
      "dest": "uint256: uint256 [6864,6871]"
    },
    {
      "src": "}: } [40438,40439]",
      "dest": "}: } [52181,52182]"
    },
    {
      "src": "bytes32: bytes32 [21554,21561]",
      "dest": "bytes32: bytes32 [30732,30739]"
    },
    {
      "src": "interface_declaration [195,2830]",
      "dest": "interface_declaration [195,2830]"
    },
    {
      "src": "identifier: length [27765,27771]",
      "dest": "identifier: length [37824,37830]"
    },
    {
      "src": "parameter [8990,9012]",
      "dest": "parameter [24443,24465]"
    },
    {
      "src": "primitive_type [22779,22786]",
      "dest": "primitive_type [31957,31964]"
    },
    {
      "src": "type_name [16436,16443]",
      "dest": "type_name [13246,13253]"
    },
    {
      "src": "(: ( [30457,30458]",
      "dest": "(: ( [42644,42645]"
    },
    {
      "src": "type_name [31168,31175]",
      "dest": "type_name [3814,3821]"
    },
    {
      "src": "identifier: len [31610,31613]",
      "dest": "identifier: len [43418,43421]"
    },
    {
      "src": "identifier: abi [38604,38607]",
      "dest": "identifier: abi [50260,50263]"
    },
    {
      "src": "}: } [14086,14087]",
      "dest": "}: } [10896,10897]"
    },
    {
      "src": "assignment_expression [32205,32245]",
      "dest": "assignment_expression [43863,43903]"
    },
    {
      "src": "(: ( [24138,24139]",
      "dest": "(: ( [33316,33317]"
    },
    {
      "src": ">=: >= [34742,34744]",
      "dest": ">=: >= [46297,46299]"
    },
    {
      "src": "visibility [31120,31128]",
      "dest": "visibility [43109,43117]"
    },
    {
      "src": "variable_declaration_statement [33885,33899]",
      "dest": "variable_declaration_statement [45499,45510]"
    },
    {
      "src": "expression_statement [26772,26774]",
      "dest": "expression_statement [35950,35952]"
    },
    {
      "src": "identifier: item [29364,29368]",
      "dest": "identifier: item [41316,41320]"
    },
    {
      "src": "type_name [2276,2283]",
      "dest": "type_name [2276,2283]"
    },
    {
      "src": "primitive_type [15989,15996]",
      "dest": "primitive_type [12799,12806]"
    },
    {
      "src": "call_expression [40070,40092]",
      "dest": "call_expression [51813,51835]"
    },
    {
      "src": "(: ( [37553,37554]",
      "dest": "(: ( [49207,49208]"
    },
    {
      "src": "primitive_type [5846,5853]",
      "dest": "primitive_type [21299,21306]"
    },
    {
      "src": "identifier: item [32092,32096]",
      "dest": "identifier: item [39328,39332]"
    },
    {
      "src": "}: } [29422,29423]",
      "dest": "}: } [41374,41375]"
    },
    {
      "src": "identifier: toUint [29753,29759]",
      "dest": "identifier: toUint [42261,42267]"
    },
    {
      "src": "returns: returns [16850,16857]",
      "dest": "returns: returns [13660,13667]"
    },
    {
      "src": "yul_identifier [35272,35279]",
      "dest": "yul_identifier [46874,46881]"
    },
    {
      "src": "add: add [27707,27710]",
      "dest": "add: add [37766,37769]"
    },
    {
      "src": "call_expression [9306,9325]",
      "dest": "call_expression [24759,24778]"
    },
    {
      "src": "]: ] [39502,39503]",
      "dest": "]: ] [51247,51248]"
    },
    {
      "src": "identifier: weiValue [16804,16812]",
      "dest": "identifier: weiValue [13614,13622]"
    },
    {
      "src": "bytes: bytes [27477,27482]",
      "dest": "bytes: bytes [37641,37646]"
    },
    {
      "src": "bytes: bytes [16859,16864]",
      "dest": "bytes: bytes [13669,13674]"
    },
    {
      "src": "identifier: memPtr [33835,33841]",
      "dest": "identifier: value [16573,16578]"
    },
    {
      "src": "yul_path [34824,34828]",
      "dest": "yul_path [46379,46383]"
    },
    {
      "src": "): ) [31459,31460]",
      "dest": "): ) [43284,43285]"
    },
    {
      "src": "identifier: items [28050,28055]",
      "dest": "identifier: newAllowance [16608,16620]"
    },
    {
      "src": "identifier: EnumerableSet [4168,4181]",
      "dest": "identifier: EnumerableSet [19621,19634]"
    },
    {
      "src": "parenthesized_expression [34282,34305]",
      "dest": "parenthesized_expression [45871,45894]"
    },
    {
      "src": "view: view [7351,7355]",
      "dest": "view: view [22804,22808]"
    },
    {
      "src": "primitive_type [16565,16572]",
      "dest": "primitive_type [13375,13382]"
    },
    {
      "src": "(: ( [31578,31579]",
      "dest": "(: ( [43400,43401]"
    },
    {
      "src": "mload: mload [34830,34835]",
      "dest": "mload: mload [46385,46390]"
    },
    {
      "src": "yul_evm_builtin [28872,28876]",
      "dest": "yul_evm_builtin [39907,39911]"
    },
    {
      "src": "call_expression [8047,8120]",
      "dest": "call_expression [23500,23573]"
    },
    {
      "src": "identifier: encodePacked [26566,26578]",
      "dest": "identifier: encodePacked [35744,35756]"
    },
    {
      "src": "parameter [3302,3314]",
      "dest": "parameter [18755,18767]"
    },
    {
      "src": "identifier: require [30019,30026]",
      "dest": "identifier: sub [4339,4342]"
    },
    {
      "src": "): ) [16909,16910]",
      "dest": "): ) [13719,13720]"
    },
    {
      "src": "yul_evm_builtin [33572,33575]",
      "dest": "yul_evm_builtin [45192,45195]"
    },
    {
      "src": "yul_path [33485,33491]",
      "dest": "yul_path [45105,45111]"
    },
    {
      "src": "string_literal [27603,27636]",
      "dest": "string_literal [5550,5585]"
    },
    {
      "src": "(: ( [31022,31023]",
      "dest": "(: ( [43011,43012]"
    },
    {
      "src": "address: address [40028,40035]",
      "dest": "address: address [51771,51778]"
    },
    {
      "src": "visibility [25511,25519]",
      "dest": "visibility [34689,34697]"
    },
    {
      "src": "call_argument [23664,23668]",
      "dest": "call_argument [32842,32846]"
    },
    {
      "src": "parenthesized_expression [35045,35062]",
      "dest": "parenthesized_expression [46631,46648]"
    },
    {
      "src": "): ) [16637,16638]",
      "dest": "): ) [13447,13448]"
    },
    {
      "src": "call_argument [24755,24778]",
      "dest": "call_argument [33933,33956]"
    },
    {
      "src": "(: ( [17557,17558]",
      "dest": "(: ( [14367,14368]"
    },
    {
      "src": ".: . [22140,22141]",
      "dest": ".: . [31318,31319]"
    },
    {
      "src": ":=: := [33121,33123]",
      "dest": ":=: := [44718,44720]"
    },
    {
      "src": "{: { [29297,29298]",
      "dest": "{: { [41249,41250]"
    },
    {
      "src": "(: ( [22092,22093]",
      "dest": "(: ( [31270,31271]"
    },
    {
      "src": "): ) [28736,28737]",
      "dest": "): ) [39730,39731]"
    },
    {
      "src": "): ) [11423,11424]",
      "dest": "): ) [26876,26877]"
    },
    {
      "src": "(: ( [35252,35253]",
      "dest": "(: ( [46854,46855]"
    },
    {
      "src": "function: function [27458,27466]",
      "dest": "function: function [37622,37630]"
    },
    {
      "src": "identifier: numItems [31770,31778]",
      "dest": "identifier: numItems [43576,43584]"
    },
    {
      "src": "parameter [8431,8453]",
      "dest": "parameter [23884,23906]"
    },
    {
      "src": "+: + [34306,34307]",
      "dest": "+: + [45895,45896]"
    },
    {
      "src": "indexed: indexed [2557,2564]",
      "dest": "indexed: indexed [2557,2564]"
    },
    {
      "src": "): ) [31155,31156]",
      "dest": "): ) [43144,43145]"
    },
    {
      "src": "parameter [1168,1175]",
      "dest": "parameter [1168,1175]"
    },
    {
      "src": "yul_function_call [33006,33020]",
      "dest": "yul_function_call [44587,44601]"
    },
    {
      "src": "identifier: _at [11402,11405]",
      "dest": "identifier: _at [26855,26858]"
    },
    {
      "src": "function_body [22102,22157]",
      "dest": "function_body [31280,31335]"
    },
    {
      "src": "block_statement [7160,7199]",
      "dest": "block_statement [22613,22652]"
    },
    {
      "src": "identifier: add [10085,10088]",
      "dest": "identifier: add [25538,25541]"
    },
    {
      "src": "comment: // This modifies the order of the array, as noted in {at}. [6191,6249]",
      "dest": "comment: // This modifies the order of the array, as noted in {at}. [21644,21702]"
    },
    {
      "src": "yul_decimal_number: 256 [30458,30461]",
      "dest": "yul_decimal_number: 256 [42645,42648]"
    },
    {
      "src": "call_argument [24139,24143]",
      "dest": "call_argument [33317,33321]"
    },
    {
      "src": "external: external [36213,36221]",
      "dest": "external: external [47830,47838]"
    },
    {
      "src": "binary_expression [28533,28549]",
      "dest": "binary_expression [39527,39543]"
    },
    {
      "src": "): ) [32188,32189]",
      "dest": "): ) [43847,43848]"
    },
    {
      "src": "primitive_type [37499,37506]",
      "dest": "primitive_type [49153,49160]"
    },
    {
      "src": "uint8: uint8 [27105,27110]",
      "dest": "uint8: uint8 [36283,36288]"
    },
    {
      "src": "variable_declaration_statement [28283,28342]",
      "dest": "variable_declaration_statement [43710,43767]"
    },
    {
      "src": "visibility [10435,10443]",
      "dest": "visibility [25888,25896]"
    },
    {
      "src": "yul_function_call [31017,31030]",
      "dest": "yul_function_call [43006,43019]"
    },
    {
      "src": "primitive_type [28778,28783]",
      "dest": "primitive_type [39816,39821]"
    },
    {
      "src": "): ) [23980,23981]",
      "dest": "): ) [33158,33159]"
    },
    {
      "src": "primitive_type [28383,28390]",
      "dest": "primitive_type [39379,39383]"
    },
    {
      "src": "identifier: toList [39424,39430]",
      "dest": "identifier: toList [51169,51175]"
    },
    {
      "src": "yul_path [32931,32936]",
      "dest": "yul_path [44512,44517]"
    },
    {
      "src": ",: , [35270,35271]",
      "dest": ",: , [46872,46873]"
    },
    {
      "src": "identifier: log [39233,39236]",
      "dest": "identifier: log [50978,50981]"
    },
    {
      "src": "binary_expression [34104,34129]",
      "dest": "binary_expression [45702,45727]"
    },
    {
      "src": "solidity_pragma_token [3450,3465]",
      "dest": "solidity_pragma_token [2930,2945]"
    },
    {
      "src": "return_statement [12797,12849]",
      "dest": "return_statement [9607,9659]"
    },
    {
      "src": "function: function [9677,9685]",
      "dest": "function: function [25130,25138]"
    },
    {
      "src": "yul_function_call [35246,35281]",
      "dest": "yul_function_call [46848,46883]"
    },
    {
      "src": "yul_function_call [12765,12785]",
      "dest": "yul_function_call [9575,9595]"
    },
    {
      "src": "identifier: inited [36923,36929]",
      "dest": "identifier: inited [48540,48546]"
    },
    {
      "src": "using: using [37280,37285]",
      "dest": "using: using [48901,48906]"
    },
    {
      "src": "comment: /**      * @dev Replacement for Solidity's `transfer`: sends `amount` wei to      * `recipient`, forwarding all available gas and reverting on errors.      *      * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost      * of certain opcodes, possibly making contracts go over the 2300 gas limit      * imposed by `transfer`, making them unable to receive funds via      * `transfer`. {sendValue} removes this limitation.      *      * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].      *      * IMPORTANT: because control is transferred to `recipient`, care must be      * taken to not create reentrancy vulnerabilities. Consider using      * {ReentrancyGuard} or the      * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].      */ [12864,13785]",
      "dest": "comment: /**      * @dev Replacement for Solidity's `transfer`: sends `amount` wei to      * `recipient`, forwarding all available gas and reverting on errors.      *      * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost      * of certain opcodes, possibly making contracts go over the 2300 gas limit      * imposed by `transfer`, making them unable to receive funds via      * `transfer`. {sendValue} removes this limitation.      *      * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].      *      * IMPORTANT: because control is transferred to `recipient`, care must be      * taken to not create reentrancy vulnerabilities. Consider using      * {ReentrancyGuard} or the      * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].      */ [9674,10595]"
    },
    {
      "src": "identifier: len [30745,30748]",
      "dest": "identifier: len [43170,43173]"
    },
    {
      "src": "identifier: logRLPList [39410,39420]",
      "dest": "identifier: logRLPList [51155,51165]"
    },
    {
      "src": "\": \" [29948,29949]",
      "dest": "\": \" [6213,6214]"
    },
    {
      "src": "identifier: set [5356,5359]",
      "dest": "identifier: set [20809,20812]"
    },
    {
      "src": "identifier: RLPItem [37342,37349]",
      "dest": "identifier: RLPItem [48963,48970]"
    },
    {
      "src": "uint256: uint256 [31367,31374]",
      "dest": "uint256: uint256 [40332,40339]"
    },
    {
      "src": "bytes32: bytes32 [12586,12593]",
      "dest": "bytes32: bytes32 [9396,9403]"
    },
    {
      "src": "=: = [5376,5377]",
      "dest": "=: = [20829,20830]"
    },
    {
      "src": "): ) [25509,25510]",
      "dest": "): ) [34687,34688]"
    },
    {
      "src": "assembly: assembly [31499,31507]",
      "dest": "assembly: assembly [43321,43329]"
    },
    {
      "src": "identifier: dataLen [33663,33670]",
      "dest": "identifier: dataLen [45283,45290]"
    },
    {
      "src": "state_variable_declaration [37429,37493]",
      "dest": "state_variable_declaration [49083,49147]"
    },
    {
      "src": "identifier: initialize [37835,37845]",
      "dest": "identifier: initialize [49489,49499]"
    },
    {
      "src": "): ) [31353,31354]",
      "dest": "): ) [38648,38649]"
    },
    {
      "src": "yul_path [32626,32631]",
      "dest": "yul_path [44182,44187]"
    },
    {
      "src": "return_statement [31625,31639]",
      "dest": "return_statement [43433,43447]"
    },
    {
      "src": ",: , [15987,15988]",
      "dest": ",: , [12797,12798]"
    },
    {
      "src": "variable_declaration_statement [30228,30266]",
      "dest": "variable_declaration_statement [38660,38695]"
    },
    {
      "src": "call_argument [24855,24859]",
      "dest": "call_argument [34033,34037]"
    },
    {
      "src": "identifier: depositor [38423,38432]",
      "dest": "identifier: depositor [50077,50086]"
    },
    {
      "src": "call_argument [28228,28269]",
      "dest": "call_argument [16319,16375]"
    },
    {
      "src": "identifier: value [8545,8550]",
      "dest": "identifier: value [23998,24003]"
    },
    {
      "src": "return_statement [5411,5423]",
      "dest": "return_statement [20864,20876]"
    },
    {
      "src": "internal: internal [10435,10443]",
      "dest": "internal: internal [25888,25896]"
    },
    {
      "src": "type_name [804,808]",
      "dest": "type_name [804,808]"
    },
    {
      "src": "virtual: virtual [25769,25776]",
      "dest": "virtual: virtual [34947,34954]"
    },
    {
      "src": "string_literal [30051,30092]",
      "dest": "string_literal [4349,4381]"
    },
    {
      "src": "yul_evm_builtin [33563,33566]",
      "dest": "yul_evm_builtin [45183,45186]"
    },
    {
      "src": "): ) [9758,9759]",
      "dest": "): ) [25211,25212]"
    },
    {
      "src": "address: address [21748,21755]",
      "dest": "address: address [30926,30933]"
    },
    {
      "src": "assignment_expression [28473,28509]",
      "dest": "assignment_expression [39466,39502]"
    },
    {
      "src": "type_name [27477,27482]",
      "dest": "type_name [37641,37646]"
    },
    {
      "src": "pragma: pragma [2890,2896]",
      "dest": "pragma: pragma [48752,48758]"
    },
    {
      "src": "uint256: uint256 [33865,33872]",
      "dest": "uint256: uint256 [5202,5209]"
    },
    {
      "src": "library_declaration [4160,11436]",
      "dest": "library_declaration [19613,26889]"
    },
    {
      "src": "=: = [6623,6624]",
      "dest": "=: = [22076,22077]"
    },
    {
      "src": "address: address [29707,29714]",
      "dest": "address: address [42215,42222]"
    },
    {
      "src": "assembly_statement [32884,33276]",
      "dest": "assembly_statement [44465,44873]"
    },
    {
      "src": "binary_expression [33347,33371]",
      "dest": "binary_expression [44955,44979]"
    },
    {
      "src": "identifier: item [30957,30961]",
      "dest": "identifier: item [42946,42950]"
    },
    {
      "src": ",: , [10727,10728]",
      "dest": ",: , [26180,26181]"
    },
    {
      "src": "): ) [23147,23148]",
      "dest": "): ) [32325,32326]"
    },
    {
      "src": "identifier: memPtr [28524,28530]",
      "dest": "identifier: memPtr [39518,39524]"
    },
    {
      "src": "uint8: uint8 [28778,28783]",
      "dest": "uint8: uint8 [39816,39821]"
    },
    {
      "src": "parameter [36151,36168]",
      "dest": "parameter [47768,47785]"
    },
    {
      "src": "yul_identifier [33580,33587]",
      "dest": "yul_identifier [45200,45207]"
    },
    {
      "src": "bool: bool [17018,17022]",
      "dest": "bool: bool [13828,13832]"
    },
    {
      "src": "pure: pure [29480,29484]",
      "dest": "pure: pure [42097,42101]"
    },
    {
      "src": "identifier: _add [8512,8516]",
      "dest": "identifier: _add [23965,23969]"
    },
    {
      "src": "identifier: item [29901,29905]",
      "dest": "identifier: item [39776,39780]"
    },
    {
      "src": "+: + [33372,33373]",
      "dest": "+: + [44980,44981]"
    },
    {
      "src": "identifier: memPtr [27697,27703]",
      "dest": "identifier: memPtr [37756,37762]"
    },
    {
      "src": ",: , [15516,15517]",
      "dest": ",: , [12326,12327]"
    },
    {
      "src": "): ) [8876,8877]",
      "dest": "): ) [24329,24330]"
    },
    {
      "src": "yul_evm_builtin [30454,30457]",
      "dest": "yul_evm_builtin [42641,42644]"
    },
    {
      "src": "yul_evm_builtin [17512,17517]",
      "dest": "yul_evm_builtin [14322,14327]"
    },
    {
      "src": "array_access [8138,8156]",
      "dest": "array_access [23591,23609]"
    },
    {
      "src": "parameter [21734,21746]",
      "dest": "parameter [30912,30924]"
    },
    {
      "src": ",: , [30407,30408]",
      "dest": ",: , [42594,42595]"
    },
    {
      "src": ":=: := [30439,30441]",
      "dest": ":=: := [42626,42628]"
    },
    {
      "src": "identifier: require [29893,29900]",
      "dest": "identifier: div [6176,6179]"
    },
    {
      "src": "call_argument [26591,26619]",
      "dest": "call_argument [35769,35797]"
    },
    {
      "src": "^:  ^ [109,111]",
      "dest": "^:  ^ [109,111]"
    },
    {
      "src": "call_argument [9114,9119]",
      "dest": "call_argument [24567,24572]"
    },
    {
      "src": "return_type_definition [29173,29195]",
      "dest": "return_type_definition [41077,41099]"
    },
    {
      "src": "return_type_definition [9043,9057]",
      "dest": "return_type_definition [24496,24510]"
    },
    {
      "src": "identifier: members [20358,20365]",
      "dest": "identifier: members [29536,29543]"
    },
    {
      "src": "type_name [21170,21177]",
      "dest": "type_name [30348,30355]"
    },
    {
      "src": ",: , [29327,29328]",
      "dest": ",: , [41279,41280]"
    },
    {
      "src": "member_expression [7590,7608]",
      "dest": "member_expression [23043,23061]"
    },
    {
      "src": ",: , [33948,33949]",
      "dest": ",: , [45559,45560]"
    },
    {
      "src": "variable_declaration_statement [14037,14092]",
      "dest": "variable_declaration_statement [10847,10902]"
    },
    {
      "src": "{: { [33874,33875]",
      "dest": "{: { [45488,45489]"
    },
    {
      "src": "): ) [15467,15468]",
      "dest": "): ) [12277,12278]"
    },
    {
      "src": "assembly_statement [17457,17614]",
      "dest": "assembly_statement [14267,14424]"
    },
    {
      "src": "type_name [9232,9242]",
      "dest": "type_name [24685,24695]"
    },
    {
      "src": "identifier: role [24698,24702]",
      "dest": "identifier: role [33876,33880]"
    },
    {
      "src": "variable_declaration_statement [39365,39433]",
      "dest": "variable_declaration_statement [51110,51178]"
    },
    {
      "src": "string [16912,16943]",
      "dest": "string [13722,13753]"
    },
    {
      "src": "identifier: rootToken [36159,36168]",
      "dest": "identifier: rootToken [47776,47785]"
    },
    {
      "src": "(: ( [38771,38772]",
      "dest": "(: ( [50566,50567]"
    },
    {
      "src": "expression_statement [32205,32246]",
      "dest": "expression_statement [43863,43904]"
    },
    {
      "src": "parameter [23105,23117]",
      "dest": "parameter [32283,32295]"
    },
    {
      "src": "bytes: bytes [29212,29217]",
      "dest": "bytes: bytes [41111,41116]"
    },
    {
      "src": "member_expression [8055,8066]",
      "dest": "member_expression [23508,23519]"
    },
    {
      "src": "identifier: data [15075,15079]",
      "dest": "identifier: data [11885,11889]"
    },
    {
      "src": "): ) [8119,8120]",
      "dest": "): ) [23572,23573]"
    },
    {
      "src": "identifier: set [10172,10175]",
      "dest": "identifier: set [25625,25628]"
    },
    {
      "src": "comment: /**      * @dev Performs a Solidity function call using a low level `call`. A      * plain`call` is an unsafe replacement for a function call: use this      * function instead.      *      * If `target` reverts with a revert reason, it is bubbled up by this      * function (like regular Solidity function calls).      *      * Returns the raw returned data. To convert to the expected return value,      * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].      *      * Requirements:      *      * - `target` must be a contract.      * - calling `target` with `data` must not revert.      *      * _Available since v3.1._      */ [14196,14943]",
      "dest": "comment: /**      * @dev Performs a Solidity function call using a low level `call`. A      * plain`call` is an unsafe replacement for a function call: use this      * function instead.      *      * If `target` reverts with a revert reason, it is bubbled up by this      * function (like regular Solidity function calls).      *      * Returns the raw returned data. To convert to the expected return value,      * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].      *      * Requirements:      *      * - `target` must be a contract.      * - calling `target` with `data` must not revert.      *      * _Available since v3.1._      */ [11006,11753]"
    },
    {
      "src": ">=: >= [16587,16589]",
      "dest": ">=: >= [13397,13399]"
    },
    {
      "src": "bytes: bytes [15455,15460]",
      "dest": "bytes: bytes [12265,12270]"
    },
    {
      "src": "binary_expression [34197,34221]",
      "dest": "binary_expression [45798,45822]"
    },
    {
      "src": "visibility [25760,25768]",
      "dest": "visibility [34938,34946]"
    },
    {
      "src": "type_name [30662,30669]",
      "dest": "type_name [3803,3810]"
    },
    {
      "src": "(: ( [37845,37846]",
      "dest": "(: ( [49499,49500]"
    },
    {
      "src": "binary_expression [35046,35061]",
      "dest": "binary_expression [46632,46647]"
    },
    {
      "src": "{: { [38576,38577]",
      "dest": "{: { [50230,50231]"
    },
    {
      "src": "array_access [23167,23179]",
      "dest": "array_access [32345,32357]"
    },
    {
      "src": "internal: internal [31120,31128]",
      "dest": "internal: internal [43109,43117]"
    },
    {
      "src": "binary_expression [33991,34017]",
      "dest": "binary_expression [45602,45628]"
    },
    {
      "src": "identifier: result [29225,29231]",
      "dest": "identifier: result [41124,41130]"
    },
    {
      "src": "comment: // Move the last value to the index where the value to delete is [6664,6728]",
      "dest": "comment: // Move the last value to the index where the value to delete is [22117,22181]"
    },
    {
      "src": "): ) [30476,30477]",
      "dest": "): ) [42663,42664]"
    },
    {
      "src": "identifier: valueIndex [6289,6299]",
      "dest": "identifier: valueIndex [21742,21752]"
    },
    {
      "src": "primitive_type [26142,26149]",
      "dest": "primitive_type [35320,35327]"
    },
    {
      "src": ".: . [32150,32151]",
      "dest": ".: . [43809,43810]"
    },
    {
      "src": "returns: returns [23131,23138]",
      "dest": "returns: returns [32309,32316]"
    },
    {
      "src": "identifier: token [40379,40384]",
      "dest": "identifier: token [52122,52127]"
    },
    {
      "src": "pure: pure [34634,34638]",
      "dest": "pure: pure [46189,46193]"
    },
    {
      "src": "type_name [14971,14978]",
      "dest": "type_name [11781,11788]"
    },
    {
      "src": "call_expression [16892,16910]",
      "dest": "call_expression [13702,13720]"
    },
    {
      "src": "(: ( [2763,2764]",
      "dest": "(: ( [2763,2764]"
    },
    {
      "src": "bytes32: bytes32 [21170,21177]",
      "dest": "bytes32: bytes32 [30348,30355]"
    },
    {
      "src": "call_argument [29244,29252]",
      "dest": "call_argument [41143,41151]"
    },
    {
      "src": "function_definition [1846,1920]",
      "dest": "function_definition [1846,1920]"
    },
    {
      "src": "bytes32: bytes32 [20870,20877]",
      "dest": "bytes32: bytes32 [30048,30055]"
    },
    {
      "src": "yul_path [35126,35129]",
      "dest": "yul_path [46720,46723]"
    },
    {
      "src": "(: ( [28876,28877]",
      "dest": "(: ( [39911,39912]"
    },
    {
      "src": "function_body [25970,26099]",
      "dest": "function_body [35148,35277]"
    },
    {
      "src": "primitive_type [24704,24711]",
      "dest": "primitive_type [33882,33889]"
    },
    {
      "src": "for_statement [34731,34932]",
      "dest": "for_statement [46286,46487]"
    },
    {
      "src": "parameter [9232,9254]",
      "dest": "parameter [24685,24707]"
    },
    {
      "src": "bytes32: bytes32 [21734,21741]",
      "dest": "bytes32: bytes32 [30912,30919]"
    },
    {
      "src": "state_mutability [21772,21776]",
      "dest": "state_mutability [30950,30954]"
    },
    {
      "src": "primitive_type [39651,39658]",
      "dest": "primitive_type [51396,51403]"
    },
    {
      "src": "{: { [28767,28768]",
      "dest": "{: { [39761,39762]"
    },
    {
      "src": "yul_function_call [33942,33964]",
      "dest": "yul_function_call [45553,45575]"
    },
    {
      "src": "(: ( [40340,40341]",
      "dest": "(: ( [52083,52084]"
    },
    {
      "src": "yul_evm_builtin [32643,32648]",
      "dest": "yul_evm_builtin [44199,44204]"
    },
    {
      "src": ",: , [38795,38796]",
      "dest": ",: , [50576,50577]"
    },
    {
      "src": "call_expression [24016,24061]",
      "dest": "call_expression [33194,33239]"
    },
    {
      "src": "external: external [37862,37870]",
      "dest": "external: external [49516,49524]"
    },
    {
      "src": "visibility [32510,32517]",
      "dest": "visibility [44075,44082]"
    },
    {
      "src": "contract_body [37273,40496]",
      "dest": "contract_body [48894,52393]"
    },
    {
      "src": "identifier: role [22127,22131]",
      "dest": "identifier: role [31305,31309]"
    },
    {
      "src": "visibility [786,794]",
      "dest": "visibility [786,794]"
    },
    {
      "src": ".: . [21830,21831]",
      "dest": ".: . [31008,31009]"
    },
    {
      "src": "array_access [24024,24036]",
      "dest": "array_access [33202,33214]"
    },
    {
      "src": "(: ( [15066,15067]",
      "dest": "(: ( [11876,11877]"
    },
    {
      "src": "{: { [17278,17279]",
      "dest": "{: { [14088,14089]"
    },
    {
      "src": "yul_path [30446,30452]",
      "dest": "yul_path [42633,42639]"
    },
    {
      "src": "identifier: _grantRole [25920,25930]",
      "dest": "identifier: _grantRole [35098,35108]"
    },
    {
      "src": "(: ( [27994,27995]",
      "dest": "(: ( [39168,39169]"
    },
    {
      "src": "address: address [26142,26149]",
      "dest": "address: address [35320,35327]"
    },
    {
      "src": "visibility [15437,15445]",
      "dest": "visibility [12247,12255]"
    },
    {
      "src": "primitive_type [25727,25734]",
      "dest": "primitive_type [34905,34912]"
    },
    {
      "src": "string [28002,28028]",
      "dest": "string [3912,3941]"
    },
    {
      "src": "call_expression [38733,38758]",
      "dest": "call_expression [50532,50549]"
    },
    {
      "src": "variable_declaration [39651,39669]",
      "dest": "variable_declaration [51396,51414]"
    },
    {
      "src": "memory: memory [14993,14999]",
      "dest": "memory: memory [11803,11809]"
    },
    {
      "src": "primitive_type [36738,36745]",
      "dest": "primitive_type [48355,48362]"
    },
    {
      "src": "=: = [28531,28532]",
      "dest": "=: = [39525,39526]"
    },
    {
      "src": "expression_statement [37037,37051]",
      "dest": "expression_statement [48654,48668]"
    },
    {
      "src": "string [8083,8119]",
      "dest": "string [23536,23572]"
    },
    {
      "src": "identifier: amount [38838,38844]",
      "dest": "identifier: amount [50593,50599]"
    },
    {
      "src": "type_name [18537,18542]",
      "dest": "type_name [27715,27720]"
    },
    {
      "src": "user_defined_type [29450,29457]",
      "dest": "user_defined_type [42067,42074]"
    },
    {
      "src": "): ) [29844,29845]",
      "dest": "): ) [38955,38956]"
    },
    {
      "src": "user_defined_type [37211,37226]",
      "dest": "user_defined_type [48832,48847]"
    },
    {
      "src": "identifier: _roles [23167,23173]",
      "dest": "identifier: _roles [32345,32351]"
    },
    {
      "src": "primitive_type [29266,29273]",
      "dest": "primitive_type [40296,40303]"
    },
    {
      "src": "comment: /**      * @dev Returns true if `account` is a contract.      *      * [IMPORTANT]      * ====      * It is unsafe to assume that an address for which this function returns      * false is an externally-owned account (EOA) and not a contract.      *      * Among others, `isContract` will return false for the following      * types of addresses:      *      *  - an externally-owned account      *  - a contract in construction      *  - an address where a contract will be created      *  - an address where a contract lived, but was destroyed      * ====      */ [11650,12231]",
      "dest": "comment: /**      * @dev Returns true if `account` is a contract.      *      * [IMPORTANT]      * ====      * It is unsafe to assume that an address for which this function returns      * false is an externally-owned account (EOA) and not a contract.      *      * Among others, `isContract` will return false for the following      * types of addresses:      *      *  - an externally-owned account      *  - a contract in construction      *  - an address where a contract will be created      *  - an address where a contract lived, but was destroyed      * ====      */ [8460,9041]"
    },
    {
      "src": "virtual: virtual [25520,25527]",
      "dest": "virtual: virtual [34698,34705]"
    },
    {
      "src": "{: { [28414,28415]",
      "dest": "{: { [39407,39408]"
    },
    {
      "src": ",: , [26265,26266]",
      "dest": ",: , [35443,35444]"
    },
    {
      "src": "}: } [29735,29736]",
      "dest": "}: } [42243,42244]"
    },
    {
      "src": "}: } [22893,22894]",
      "dest": "}: } [32071,32072]"
    },
    {
      "src": "mload: mload [31017,31022]",
      "dest": "mload: mload [43006,43011]"
    },
    {
      "src": ".: . [17065,17066]",
      "dest": ".: . [13875,13876]"
    },
    {
      "src": "for: for [28378,28381]",
      "dest": "for: for [39374,39377]"
    },
    {
      "src": ",: , [1126,1127]",
      "dest": ",: , [1126,1127]"
    },
    {
      "src": "uint256: uint256 [10420,10427]",
      "dest": "uint256: uint256 [25873,25880]"
    },
    {
      "src": "identifier: value [5212,5217]",
      "dest": "identifier: value [20665,20670]"
    },
    {
      "src": "identifier: adminRole [25874,25883]",
      "dest": "identifier: adminRole [35052,35061]"
    },
    {
      "src": "type_name [16814,16820]",
      "dest": "type_name [13624,13630]"
    },
    {
      "src": "primitive_type [2276,2283]",
      "dest": "primitive_type [2276,2283]"
    },
    {
      "src": ",: , [33158,33159]",
      "dest": ",: , [44755,44756]"
    },
    {
      "src": "binary_expression [35040,35062]",
      "dest": "binary_expression [46624,46648]"
    },
    {
      "src": "{: { [15469,15470]",
      "dest": "{: { [12279,12280]"
    },
    {
      "src": "parameter [2295,2309]",
      "dest": "parameter [2295,2309]"
    },
    {
      "src": "parameter [751,768]",
      "dest": "parameter [751,768]"
    },
    {
      "src": "yul_path [33933,33938]",
      "dest": "yul_path [45544,45549]"
    },
    {
      "src": "identifier: functionCallWithValue [16414,16435]",
      "dest": "identifier: functionCallWithValue [13224,13245]"
    },
    {
      "src": "identifier: success [17110,17117]",
      "dest": "identifier: success [13920,13927]"
    },
    {
      "src": "parameter [22093,22100]",
      "dest": "parameter [31271,31278]"
    },
    {
      "src": "function_definition [27859,28594]",
      "dest": "function_definition [39065,39588]"
    },
    {
      "src": "assembly_statement [33408,33703]",
      "dest": "assembly_statement [45028,45323]"
    },
    {
      "src": "comment: // File: @openzeppelin/contracts/access/AccessControl.sol [18726,18783]",
      "dest": "comment: // File: @openzeppelin/contracts/access/AccessControl.sol [27904,27961]"
    },
    {
      "src": "type_name [13837,13844]",
      "dest": "type_name [10647,10654]"
    },
    {
      "src": "primitive_type [1880,1887]",
      "dest": "primitive_type [1880,1887]"
    },
    {
      "src": ".: . [10936,10937]",
      "dest": ".: . [26389,26390]"
    },
    {
      "src": "identifier: Context [18357,18364]",
      "dest": "identifier: Context [27535,27542]"
    },
    {
      "src": "type_name [36151,36158]",
      "dest": "type_name [47768,47775]"
    },
    {
      "src": "(: ( [30026,30027]",
      "dest": "(: ( [4342,4343]"
    },
    {
      "src": "bytes32: bytes32 [24690,24697]",
      "dest": "bytes32: bytes32 [33868,33875]"
    },
    {
      "src": "identifier: amount [778,784]",
      "dest": "identifier: amount [778,784]"
    },
    {
      "src": "\": \" [37934,37935]",
      "dest": "\": \" [49588,49589]"
    },
    {
      "src": ",: , [3314,3315]",
      "dest": ",: , [18767,18768]"
    },
    {
      "src": "emit: emit [38651,38655]",
      "dest": "emit: emit [50305,50309]"
    },
    {
      "src": "call_expression [31574,31614]",
      "dest": "call_expression [43396,43422]"
    },
    {
      "src": "function_definition [5662,7206]",
      "dest": "function_definition [21115,22659]"
    },
    {
      "src": "return_type_definition [7356,7370]",
      "dest": "return_type_definition [22809,22823]"
    },
    {
      "src": "): ) [9119,9120]",
      "dest": "): ) [24572,24573]"
    },
    {
      "src": "struct_field_assignment [17072,17087]",
      "dest": "struct_field_assignment [13882,13897]"
    },
    {
      "src": "return: return [16047,16053]",
      "dest": "return: return [12857,12863]"
    },
    {
      "src": "yul_function_call [34830,34840]",
      "dest": "yul_function_call [46385,46395]"
    },
    {
      "src": "=: = [37395,37396]",
      "dest": "=: = [49049,49050]"
    },
    {
      "src": "primitive_type [26555,26561]",
      "dest": "primitive_type [35733,35739]"
    },
    {
      "src": "expression_statement [40451,40486]",
      "dest": "expression_statement [52332,52383]"
    },
    {
      "src": "comment: // This means that we can only create new EnumerableSets for types that fit [4535,4610]",
      "dest": "comment: // This means that we can only create new EnumerableSets for types that fit [19988,20063]"
    },
    {
      "src": "primitive_type [27198,27203]",
      "dest": "primitive_type [36377,36382]"
    },
    {
      "src": "identifier: logTopicRLPList [39392,39407]",
      "dest": "identifier: logTopicRLPList [51137,51152]"
    },
    {
      "src": "): ) [7016,7017]",
      "dest": "): ) [22469,22470]"
    },
    {
      "src": "identifier: set [6848,6851]",
      "dest": "identifier: set [22301,22304]"
    },
    {
      "src": "using: using [20217,20222]",
      "dest": "using: using [29395,29400]"
    },
    {
      "src": "function: function [8972,8980]",
      "dest": "function: function [24425,24433]"
    },
    {
      "src": "parameter [34607,34618]",
      "dest": "parameter [15925,15938]"
    },
    {
      "src": "return: return [12797,12803]",
      "dest": "return: return [9607,9613]"
    },
    {
      "src": "): ) [16034,16035]",
      "dest": "): ) [12844,12845]"
    },
    {
      "src": "type_cast_expression [39771,39807]",
      "dest": "type_cast_expression [51516,51552]"
    },
    {
      "src": "number_literal: 0 [7412,7413]",
      "dest": "number_literal: 0 [22865,22866]"
    },
    {
      "src": "call_argument [16687,16691]",
      "dest": "call_argument [13497,13501]"
    },
    {
      "src": "parameter [16814,16840]",
      "dest": "parameter [13624,13650]"
    },
    {
      "src": "yul_identifier [33663,33670]",
      "dest": "yul_identifier [45283,45290]"
    },
    {
      "src": "type_name [7990,7997]",
      "dest": "type_name [23443,23450]"
    },
    {
      "src": "\": \" [39584,39585]",
      "dest": "\": \" [51329,51330]"
    },
    {
      "src": "identifier: toRlpItem [39334,39343]",
      "dest": "identifier: toRlpItem [51079,51088]"
    },
    {
      "src": "identifier: dataLen [33113,33120]",
      "dest": "identifier: dataLen [44710,44717]"
    },
    {
      "src": ":=: := [35185,35187]",
      "dest": ":=: := [46783,46785]"
    },
    {
      "src": ",: , [35203,35204]",
      "dest": ",: , [46801,46802]"
    },
    {
      "src": "}: } [15547,15548]",
      "dest": "}: } [12357,12358]"
    },
    {
      "src": "identifier: RLPItem [39300,39307]",
      "dest": "identifier: RLPItem [51045,51052]"
    },
    {
      "src": "function: function [18372,18380]",
      "dest": "function: function [27550,27558]"
    },
    {
      "src": "function_definition [22756,22894]",
      "dest": "function_definition [31934,32072]"
    },
    {
      "src": "}: } [7420,7421]",
      "dest": "}: } [22873,22874]"
    },
    {
      "src": "inheritance_specifier [37211,37226]",
      "dest": "inheritance_specifier [48832,48847]"
    },
    {
      "src": "<: < [34139,34140]",
      "dest": "<: < [45737,45738]"
    },
    {
      "src": "identifier: logRLPList [39317,39327]",
      "dest": "identifier: logRLPList [51062,51072]"
    },
    {
      "src": "user_defined_type [10089,10096]",
      "dest": "user_defined_type [25542,25549]"
    },
    {
      "src": "returns: returns [486,493]",
      "dest": "returns: returns [486,493]"
    },
    {
      "src": "binary_expression [33297,33320]",
      "dest": "binary_expression [44905,44928]"
    },
    {
      "src": "comment: /**      * @dev Removes a value from a set. O(1).      *      * Returns true if the value was removed from the set, that is if it was      * present.      */ [5494,5656]",
      "dest": "comment: /**      * @dev Removes a value from a set. O(1).      *      * Returns true if the value was removed from the set, that is if it was      * present.      */ [20947,21109]"
    },
    {
      "src": "primitive_type [21192,21199]",
      "dest": "primitive_type [30370,30377]"
    },
    {
      "src": "}: } [34855,34856]",
      "dest": "}: } [46410,46411]"
    },
    {
      "src": "]: ] [6767,6768]",
      "dest": "]: ] [22220,22221]"
    },
    {
      "src": "(: ( [21839,21840]",
      "dest": "(: ( [31017,31018]"
    },
    {
      "src": "function: function [18486,18494]",
      "dest": "function: function [27664,27672]"
    },
    {
      "src": "call_expression [37996,38028]",
      "dest": "call_expression [49650,49682]"
    },
    {
      "src": "identifier: adminRole [24037,24046]",
      "dest": "identifier: adminRole [33215,33224]"
    },
    {
      "src": "(: ( [33454,33455]",
      "dest": "(: ( [45074,45075]"
    },
    {
      "src": "{: { [37273,37274]",
      "dest": "{: { [48894,48895]"
    },
    {
      "src": "state_variable_declaration [20462,20512]",
      "dest": "state_variable_declaration [29640,29690]"
    },
    {
      "src": "comment: /**      * @dev Moves `amount` tokens from the caller's account to `recipient`.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [512,727]",
      "dest": "comment: /**      * @dev Moves `amount` tokens from the caller's account to `recipient`.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [512,727]"
    },
    {
      "src": "function: function [14949,14957]",
      "dest": "function: function [11759,11767]"
    },
    {
      "src": "}: } [5485,5486]",
      "dest": "}: } [20938,20939]"
    },
    {
      "src": "(: ( [16075,16076]",
      "dest": "(: ( [12885,12886]"
    },
    {
      "src": "(: ( [23950,23951]",
      "dest": "(: ( [33128,33129]"
    },
    {
      "src": "identifier: AddressSet [9232,9242]",
      "dest": "identifier: AddressSet [24685,24695]"
    },
    {
      "src": "identifier: _roles [25816,25822]",
      "dest": "identifier: _roles [34994,35000]"
    },
    {
      "src": "variable_declaration_statement [28800,28829]",
      "dest": "variable_declaration_statement [6864,6882]"
    },
    {
      "src": "(: ( [15509,15510]",
      "dest": "(: ( [12319,12320]"
    },
    {
      "src": "bytes32: bytes32 [39477,39484]",
      "dest": "bytes32: bytes32 [51222,51229]"
    },
    {
      "src": "pure: pure [29790,29794]",
      "dest": "pure: pure [42298,42302]"
    },
    {
      "src": "primitive_type [16471,16478]",
      "dest": "primitive_type [13281,13288]"
    },
    {
      "src": "): ) [38537,38538]",
      "dest": "): ) [50191,50192]"
    },
    {
      "src": "identifier: lastvalue [6861,6870]",
      "dest": "identifier: lastvalue [22314,22323]"
    },
    {
      "src": "member_expression [32063,32074]",
      "dest": "member_expression [39299,39310]"
    },
    {
      "src": "): ) [17673,17674]",
      "dest": "): ) [14483,14484]"
    },
    {
      "src": "identifier: withdrawer [39659,39669]",
      "dest": "identifier: withdrawer [51404,51414]"
    },
    {
      "src": "modifier_invocation [39260,39278]",
      "dest": "modifier_invocation [51005,51023]"
    },
    {
      "src": "primitive_type [23478,23485]",
      "dest": "primitive_type [32656,32663]"
    },
    {
      "src": "yul_function_call [33544,33590]",
      "dest": "yul_function_call [45164,45210]"
    },
    {
      "src": "pragma_directive [27054,27076]",
      "dest": "pragma_directive [48479,48501]"
    },
    {
      "src": "(: ( [23139,23140]",
      "dest": "(: ( [32317,32318]"
    },
    {
      "src": "returns: returns [1159,1166]",
      "dest": "returns: returns [1159,1166]"
    },
    {
      "src": "bytes32: bytes32 [25931,25938]",
      "dest": "bytes32: bytes32 [35109,35116]"
    },
    {
      "src": "number_literal: 1 [35065,35066]",
      "dest": "number_literal: 1 [46651,46652]"
    },
    {
      "src": "identifier: result [31060,31066]",
      "dest": "identifier: result [43049,43055]"
    },
    {
      "src": "(: ( [9113,9114]",
      "dest": "(: ( [24566,24567]"
    },
    {
      "src": "[: [ [23173,23174]",
      "dest": "[: [ [32351,32352]"
    },
    {
      "src": "visibility [18394,18402]",
      "dest": "visibility [27572,27580]"
    },
    {
      "src": "call_argument [37958,37976]",
      "dest": "call_argument [49612,49630]"
    },
    {
      "src": "): ) [37984,37985]",
      "dest": "): ) [49638,49639]"
    },
    {
      "src": "): ) [15004,15005]",
      "dest": "): ) [11814,11815]"
    },
    {
      "src": "identifier: byte0 [33455,33460]",
      "dest": "identifier: byte0 [45075,45080]"
    },
    {
      "src": "returns: returns [8801,8808]",
      "dest": "returns: returns [24254,24261]"
    },
    {
      "src": "yul_identifier [28886,28892]",
      "dest": "yul_identifier [39921,39927]"
    },
    {
      "src": "type_cast_expression [39477,39513]",
      "dest": "type_cast_expression [51222,51258]"
    },
    {
      "src": "): ) [22148,22149]",
      "dest": "): ) [31326,31327]"
    },
    {
      "src": "identifier: result [28580,28586]",
      "dest": "identifier: result [39574,39580]"
    },
    {
      "src": "{: { [15038,15039]",
      "dest": "{: { [11848,11849]"
    },
    {
      "src": "(: ( [8869,8870]",
      "dest": "(: ( [24322,24323]"
    },
    {
      "src": "yul_function_call [32635,32657]",
      "dest": "yul_function_call [44191,44213]"
    },
    {
      "src": "call_argument [26267,26279]",
      "dest": "call_argument [35445,35457]"
    },
    {
      "src": "identifier: memPtr [33010,33016]",
      "dest": "identifier: memPtr [44591,44597]"
    },
    {
      "src": "pragma: pragma [26358,26364]",
      "dest": "pragma: pragma [18343,18349]"
    },
    {
      "src": "identifier: _indexes [4878,4886]",
      "dest": "identifier: _indexes [20331,20339]"
    },
    {
      "src": "bytes32: bytes32 [23140,23147]",
      "dest": "bytes32: bytes32 [32318,32325]"
    },
    {
      "src": "call_expression [10707,10744]",
      "dest": "call_expression [26160,26197]"
    },
    {
      "src": "private: private [16842,16849]",
      "dest": "private: private [13652,13659]"
    },
    {
      "src": "identifier: RLPReader [39290,39299]",
      "dest": "identifier: RLPReader [51035,51044]"
    },
    {
      "src": "=: = [39408,39409]",
      "dest": "=: = [51153,51154]"
    },
    {
      "src": "(: ( [33146,33147]",
      "dest": "(: ( [44743,44744]"
    },
    {
      "src": "function: function [8737,8745]",
      "dest": "function: function [24190,24198]"
    },
    {
      "src": "member_expression [28218,28226]",
      "dest": "member_expression [42337,42345]"
    },
    {
      "src": "identifier: _values [6629,6636]",
      "dest": "identifier: _values [22082,22089]"
    },
    {
      "src": "identifier: _ [26772,26773]",
      "dest": "identifier: _ [35950,35951]"
    },
    {
      "src": "(: ( [34551,34552]",
      "dest": "(: ( [46149,46150]"
    },
    {
      "src": ".: . [7011,7012]",
      "dest": ".: . [22464,22465]"
    },
    {
      "src": "parameter [3316,3330]",
      "dest": "parameter [18769,18783]"
    },
    {
      "src": "let: let [35172,35175]",
      "dest": "let: let [46770,46773]"
    },
    {
      "src": "function_definition [36059,36222]",
      "dest": "function_definition [47676,47839]"
    },
    {
      "src": "type_name [15409,15415]",
      "dest": "type_name [12219,12225]"
    },
    {
      "src": "string_literal [32308,32354]",
      "dest": "string_literal [18216,18260]"
    },
    {
      "src": "identifier: item [31201,31205]",
      "dest": "identifier: item [40310,40314]"
    },
    {
      "src": "primitive_type [16859,16864]",
      "dest": "primitive_type [13669,13674]"
    },
    {
      "src": "identifier: i [28398,28399]",
      "dest": "identifier: i [39391,39392]"
    },
    {
      "src": "identifier: toDeleteIndex [6273,6286]",
      "dest": "identifier: toDeleteIndex [21726,21739]"
    },
    {
      "src": "parenthesized_expression [12804,12848]",
      "dest": "parenthesized_expression [9614,9658]"
    },
    {
      "src": "function: function [3288,3296]",
      "dest": "function: function [18741,18749]"
    },
    {
      "src": "uint256: uint256 [32115,32122]",
      "dest": "uint256: uint256 [6115,6122]"
    },
    {
      "src": "identifier: require [29627,29634]",
      "dest": "identifier: require [42172,42179]"
    },
    {
      "src": "(: ( [31537,31538]",
      "dest": "(: ( [43359,43360]"
    },
    {
      "src": "identifier: memPtr [30316,30322]",
      "dest": "identifier: memPtr [42503,42509]"
    },
    {
      "src": "public: public [37437,37443]",
      "dest": "public: public [49091,49097]"
    },
    {
      "src": ".: . [8845,8846]",
      "dest": ".: . [24298,24299]"
    },
    {
      "src": ".: . [31205,31206]",
      "dest": ".: . [40314,40315]"
    },
    {
      "src": "storage: storage [10632,10639]",
      "dest": "storage: storage [26085,26092]"
    },
    {
      "src": "member_expression [5356,5368]",
      "dest": "member_expression [20809,20821]"
    },
    {
      "src": "uint8: uint8 [27152,27157]",
      "dest": "uint8: uint8 [36330,36335]"
    },
    {
      "src": "identifier: amount [2303,2309]",
      "dest": "identifier: amount [2303,2309]"
    },
    {
      "src": "identifier: ITokenPredicate [37211,37226]",
      "dest": "identifier: ITokenPredicate [48832,48847]"
    },
    {
      "src": "string_literal [39584,39627]",
      "dest": "string_literal [51329,51372]"
    },
    {
      "src": "member_expression [25985,26009]",
      "dest": "member_expression [35163,35187]"
    },
    {
      "src": "type_name [21734,21741]",
      "dest": "type_name [30912,30919]"
    },
    {
      "src": "(: ( [37406,37407]",
      "dest": "(: ( [49060,49061]"
    },
    {
      "src": ",: , [26140,26141]",
      "dest": ",: , [35318,35319]"
    },
    {
      "src": "user_defined_type [29111,29118]",
      "dest": "user_defined_type [41042,41049]"
    },
    {
      "src": "function_body [10459,10520]",
      "dest": "function_body [25912,25973]"
    },
    {
      "src": "yul_path [29312,29315]",
      "dest": "yul_path [41264,41267]"
    },
    {
      "src": "yul_function_call [35120,35130]",
      "dest": "yul_function_call [46714,46724]"
    },
    {
      "src": ":=: := [32632,32634]",
      "dest": ":=: := [44188,44190]"
    },
    {
      "src": "primitive_type [31168,31175]",
      "dest": "primitive_type [3814,3821]"
    },
    {
      "src": "): ) [5732,5733]",
      "dest": "): ) [21185,21186]"
    },
    {
      "src": "constant: constant [37444,37452]",
      "dest": "constant: constant [49098,49106]"
    },
    {
      "src": "call_argument [29847,29881]",
      "dest": "call_argument [7557,7583]"
    },
    {
      "src": "parameter [22829,22836]",
      "dest": "parameter [32007,32014]"
    },
    {
      "src": "identifier: account [25556,25563]",
      "dest": "identifier: account [34734,34741]"
    },
    {
      "src": "binary_expression [17255,17276]",
      "dest": "binary_expression [14065,14086]"
    },
    {
      "src": "(: ( [30315,30316]",
      "dest": "(: ( [42502,42503]"
    },
    {
      "src": "identifier: Address [11635,11642]",
      "dest": "identifier: Address [8445,8452]"
    },
    {
      "src": "identifier: _indexes [6852,6860]",
      "dest": "identifier: _indexes [22305,22313]"
    },
    {
      "src": "assembly_statement [12742,12787]",
      "dest": "assembly_statement [9552,9597]"
    },
    {
      "src": "{: { [25970,25971]",
      "dest": "{: { [35148,35149]"
    },
    {
      "src": "identifier: memPtr [33554,33560]",
      "dest": "identifier: memPtr [45174,45180]"
    },
    {
      "src": "{: { [9760,9761]",
      "dest": "{: { [25213,25214]"
    },
    {
      "src": "private: private [26159,26166]",
      "dest": "private: private [35337,35344]"
    },
    {
      "src": "primitive_type [20376,20383]",
      "dest": "primitive_type [29554,29561]"
    },
    {
      "src": "\": \" [30091,30092]",
      "dest": "\": \" [4380,4381]"
    },
    {
      "src": "identifier: set [6625,6628]",
      "dest": "identifier: set [22078,22081]"
    },
    {
      "src": "identifier: toRlpItem [27467,27476]",
      "dest": "identifier: toRlpItem [37631,37640]"
    },
    {
      "src": "modifier: modifier [36946,36954]",
      "dest": "modifier: modifier [48563,48571]"
    },
    {
      "src": "yul_identifier [33554,33560]",
      "dest": "yul_identifier [45174,45180]"
    },
    {
      "src": "bytes32: bytes32 [37429,37436]",
      "dest": "bytes32: bytes32 [49083,49090]"
    },
    {
      "src": "using: using [37312,37317]",
      "dest": "using: using [48933,48938]"
    },
    {
      "src": "}: } [38035,38036]",
      "dest": "}: } [49689,49690]"
    },
    {
      "src": ",: , [21746,21747]",
      "dest": ",: , [30924,30925]"
    },
    {
      "src": ".: . [26005,26006]",
      "dest": ".: . [35183,35184]"
    },
    {
      "src": "return: return [34267,34273]",
      "dest": "return: return [45856,45862]"
    },
    {
      "src": "identifier: codehash [12753,12761]",
      "dest": "identifier: codehash [9563,9571]"
    },
    {
      "src": "identifier: item [30613,30617]",
      "dest": "identifier: item [42800,42804]"
    },
    {
      "src": "identifier: MintableERC20Predicate [37180,37202]",
      "dest": "identifier: MintableERC20Predicate [48801,48823]"
    },
    {
      "src": "uint8: uint8 [27198,27203]",
      "dest": "uint8: uint8 [36377,36382]"
    },
    {
      "src": "): ) [10147,10148]",
      "dest": "): ) [25600,25601]"
    },
    {
      "src": ".: . [6349,6350]",
      "dest": ".: . [21802,21803]"
    },
    {
      "src": "type_name [20241,20265]",
      "dest": "type_name [29419,29443]"
    },
    {
      "src": "returns: returns [7554,7561]",
      "dest": "returns: returns [23007,23014]"
    },
    {
      "src": "identifier: RoleGranted [21158,21169]",
      "dest": "identifier: RoleGranted [30336,30347]"
    },
    {
      "src": "bytes: bytes [31424,31429]",
      "dest": "bytes: bytes [43249,43254]"
    },
    {
      "src": "): ) [27494,27495]",
      "dest": "): ) [37658,37659]"
    },
    {
      "src": "primitive_type [22093,22100]",
      "dest": "primitive_type [31271,31278]"
    },
    {
      "src": "identifier: rootToken [36746,36755]",
      "dest": "identifier: rootToken [48363,48372]"
    },
    {
      "src": "): ) [31550,31551]",
      "dest": "): ) [43372,43373]"
    },
    {
      "src": "if_statement [17106,17701]",
      "dest": "if_statement [13916,14511]"
    },
    {
      "src": "block_statement [5440,5479]",
      "dest": "block_statement [20893,20932]"
    },
    {
      "src": "}: } [22156,22157]",
      "dest": "}: } [31334,31335]"
    },
    {
      "src": "if_statement [5152,5479]",
      "dest": "if_statement [20605,20932]"
    },
    {
      "src": "call_expression [14102,14180]",
      "dest": "call_expression [10912,10990]"
    },
    {
      "src": "constant: constant [20477,20485]",
      "dest": "constant: constant [29655,29663]"
    },
    {
      "src": "mapping: mapping [4849,4856]",
      "dest": "mapping: mapping [20302,20309]"
    },
    {
      "src": "identifier: value [5369,5374]",
      "dest": "identifier: value [20822,20827]"
    },
    {
      "src": "): ) [24829,24830]",
      "dest": "): ) [34007,34008]"
    },
    {
      "src": "member_expression [40070,40090]",
      "dest": "member_expression [51813,51833]"
    },
    {
      "src": ",: , [7988,7989]",
      "dest": ",: , [23441,23442]"
    },
    {
      "src": "call_expression [30838,30902]",
      "dest": "call_expression [42874,42897]"
    },
    {
      "src": "state_mutability [29159,29163]",
      "dest": "state_mutability [41072,41076]"
    },
    {
      "src": "): ) [5177,5178]",
      "dest": "): ) [20630,20631]"
    },
    {
      "src": "parameter [36117,36140]",
      "dest": "parameter [47734,47757]"
    },
    {
      "src": "parameter [16486,16512]",
      "dest": "parameter [13296,13322]"
    },
    {
      "src": "function_body [10689,10752]",
      "dest": "function_body [26142,26205]"
    },
    {
      "src": "parameter [29111,29130]",
      "dest": "parameter [41042,41061]"
    },
    {
      "src": "comment: /**      * @dev Returns the number of accounts that have `role`. Can be used      * together with {getRoleMember} to enumerate all bearers of a role.      */ [21864,22024]",
      "dest": "comment: /**      * @dev Returns the number of accounts that have `role`. Can be used      * together with {getRoleMember} to enumerate all bearers of a role.      */ [31042,31202]"
    },
    {
      "src": ",: , [33460,33461]",
      "dest": ",: , [45080,45081]"
    },
    {
      "src": "indexed: indexed [20856,20863]",
      "dest": "indexed: indexed [30034,30041]"
    },
    {
      "src": "identifier: EnumerableSet [20223,20236]",
      "dest": "identifier: EnumerableSet [29401,29414]"
    },
    {
      "src": "identifier: byteLen [33249,33256]",
      "dest": "identifier: byteLen [44846,44853]"
    },
    {
      "src": "identifier: account [25502,25509]",
      "dest": "identifier: account [34680,34687]"
    },
    {
      "src": "function_definition [15923,16149]",
      "dest": "function_definition [12733,12959]"
    },
    {
      "src": "if_statement [26178,26292]",
      "dest": "if_statement [35356,35470]"
    },
    {
      "src": "state_mutability [22815,22819]",
      "dest": "state_mutability [31993,31997]"
    },
    {
      "src": "yul_path [33580,33587]",
      "dest": "yul_path [45200,45207]"
    },
    {
      "src": "uint256: uint256 [29266,29273]",
      "dest": "uint256: uint256 [40296,40303]"
    },
    {
      "src": "}: } [16720,16721]",
      "dest": "}: } [13530,13531]"
    },
    {
      "src": "variable_declaration_statement [27648,27663]",
      "dest": "variable_declaration_statement [37710,37722]"
    },
    {
      "src": "call_expression [29824,29882]",
      "dest": "call_expression [7547,7584]"
    },
    {
      "src": "): ) [8875,8876]",
      "dest": "): ) [24328,24329]"
    },
    {
      "src": "type_name [24704,24711]",
      "dest": "type_name [33882,33889]"
    },
    {
      "src": "struct: struct [8193,8199]",
      "dest": "struct: struct [23646,23652]"
    },
    {
      "src": "identifier: RLPReader [37318,37327]",
      "dest": "identifier: RLPReader [48939,48948]"
    },
    {
      "src": "yul_assignment [33485,33509]",
      "dest": "yul_assignment [45105,45129]"
    },
    {
      "src": "(: ( [14087,14088]",
      "dest": "(: ( [10897,10898]"
    },
    {
      "src": "type_name [29111,29118]",
      "dest": "type_name [41042,41049]"
    },
    {
      "src": "identifier: account [26150,26157]",
      "dest": "identifier: account [35328,35335]"
    },
    {
      "src": "comment: // SPDX-License-Identifier: MIT [3408,3439]",
      "dest": "comment: // SPDX-License-Identifier: MIT [18861,18892]"
    },
    {
      "src": "function_definition [25911,26099]",
      "dest": "function_definition [35089,35277]"
    },
    {
      "src": "parameter [15024,15036]",
      "dest": "parameter [11834,11846]"
    },
    {
      "src": "expression_statement [7088,7115]",
      "dest": "expression_statement [22541,22568]"
    },
    {
      "src": "function_body [31831,32421]",
      "dest": "function_body [43634,43989]"
    },
    {
      "src": "type_name [30915,30922]",
      "dest": "type_name [15465,15472]"
    },
    {
      "src": "variable_declaration_statement [31424,31461]",
      "dest": "variable_declaration_statement [43249,43286]"
    },
    {
      "src": "state_mutability [10884,10888]",
      "dest": "state_mutability [26337,26341]"
    },
    {
      "src": "parameter [2329,2333]",
      "dest": "parameter [2329,2333]"
    },
    {
      "src": "identifier: _values [6342,6349]",
      "dest": "identifier: _values [21795,21802]"
    },
    {
      "src": "string [29651,29686]",
      "dest": "string [18003,18037]"
    },
    {
      "src": "=: = [32213,32214]",
      "dest": "=: = [43871,43872]"
    },
    {
      "src": "binary_expression [34341,34360]",
      "dest": "binary_expression [45943,45962]"
    },
    {
      "src": "return_statement [34019,34028]",
      "dest": "return_statement [45644,45653]"
    },
    {
      "src": "string_literal [28228,28269]",
      "dest": "string_literal [16319,16375]"
    },
    {
      "src": "identifier: _setRoleAdmin [25713,25726]",
      "dest": "identifier: _setRoleAdmin [34891,34904]"
    },
    {
      "src": "\": \" [39862,39863]",
      "dest": "\": \" [51607,51608]"
    },
    {
      "src": "identifier: memPtr [33956,33962]",
      "dest": "identifier: memPtr [45567,45573]"
    },
    {
      "src": "return_statement [7382,7414]",
      "dest": "return_statement [22835,22867]"
    },
    {
      "src": "{: { [10459,10460]",
      "dest": "{: { [25912,25913]"
    },
    {
      "src": "primitive_type [21170,21177]",
      "dest": "primitive_type [30348,30355]"
    },
    {
      "src": "type_name [9880,9883]",
      "dest": "type_name [25333,25336]"
    },
    {
      "src": ".: . [26202,26203]",
      "dest": ".: . [35380,35381]"
    },
    {
      "src": "identifier: spender [1136,1143]",
      "dest": "identifier: spender [1136,1143]"
    },
    {
      "src": "solidity: solidity [27061,27069]",
      "dest": "solidity: solidity [48486,48494]"
    },
    {
      "src": "identifier: byte0 [32843,32848]",
      "dest": "identifier: byte0 [44424,44429]"
    },
    {
      "src": "primitive_type [31473,31480]",
      "dest": "primitive_type [5168,5175]"
    },
    {
      "src": "type_name [15455,15460]",
      "dest": "type_name [12265,12270]"
    },
    {
      "src": "{: { [20210,20211]",
      "dest": "{: { [29388,29389]"
    },
    {
      "src": "event_paramater [2764,2785]",
      "dest": "event_paramater [2764,2785]"
    },
    {
      "src": "variable_declaration [39290,39327]",
      "dest": "variable_declaration [51035,51072]"
    },
    {
      "src": "identifier: Initializable [36897,36910]",
      "dest": "identifier: Initializable [48514,48527]"
    },
    {
      "src": "member_expression [30957,30968]",
      "dest": "member_expression [42946,42957]"
    },
    {
      "src": "yul_identifier [30471,30474]",
      "dest": "yul_identifier [42658,42661]"
    },
    {
      "src": "identifier: target [17059,17065]",
      "dest": "identifier: target [13869,13875]"
    },
    {
      "src": "identifier: lastIndex [6637,6646]",
      "dest": "identifier: lastIndex [22090,22099]"
    },
    {
      "src": "identifier: set [8842,8845]",
      "dest": "identifier: set [24295,24298]"
    },
    {
      "src": "call_argument [24861,24868]",
      "dest": "call_argument [34039,34046]"
    },
    {
      "src": "number_literal: 256 [35040,35043]",
      "dest": "number_literal: 256 [46624,46627]"
    },
    {
      "src": "else: else [34188,34192]",
      "dest": "else: else [45789,45793]"
    },
    {
      "src": "type_name [12257,12264]",
      "dest": "type_name [9067,9074]"
    },
    {
      "src": "identifier: item [29530,29534]",
      "dest": "identifier: item [40781,40785]"
    },
    {
      "src": "if_statement [32839,33714]",
      "dest": "if_statement [44420,45334]"
    },
    {
      "src": "binary_expression [35040,35066]",
      "dest": "binary_expression [46624,46652]"
    },
    {
      "src": "identifier: LIST_SHORT_START [28929,28945]",
      "dest": "identifier: LIST_SHORT_START [39964,39980]"
    },
    {
      "src": "string_literal [14088,14090]",
      "dest": "string_literal [10898,10900]"
    },
    {
      "src": "function_body [31157,31646]",
      "dest": "function_body [43146,43454]"
    },
    {
      "src": "yul_path [30316,30322]",
      "dest": "yul_path [42503,42509]"
    },
    {
      "src": ".: . [23563,23564]",
      "dest": ".: . [32741,32742]"
    },
    {
      "src": ",: , [16469,16470]",
      "dest": ",: , [13279,13280]"
    },
    {
      "src": "for_statement [28378,28561]",
      "dest": "for_statement [39374,39555]"
    },
    {
      "src": "modifier: modifier [26637,26645]",
      "dest": "modifier: modifier [35815,35823]"
    },
    {
      "src": ",: , [25554,25555]",
      "dest": ",: , [34732,34733]"
    },
    {
      "src": "else: else [17164,17168]",
      "dest": "else: else [13974,13978]"
    },
    {
      "src": "\": \" [15112,15113]",
      "dest": "\": \" [11922,11923]"
    },
    {
      "src": "binary_expression [30957,30972]",
      "dest": "binary_expression [42946,42961]"
    },
    {
      "src": "comment: // means a value is not in the set. [4804,4839]",
      "dest": "comment: // means a value is not in the set. [20257,20292]"
    },
    {
      "src": "return_statement [30515,30529]",
      "dest": "return_statement [42702,42716]"
    },
    {
      "src": "block_statement [26220,26292]",
      "dest": "block_statement [35398,35470]"
    },
    {
      "src": ",: , [26056,26057]",
      "dest": ",: , [35234,35235]"
    },
    {
      "src": "string [39584,39627]",
      "dest": "string [51329,51372]"
    },
    {
      "src": "expression_statement [37996,38029]",
      "dest": "expression_statement [49650,49683]"
    },
    {
      "src": "identifier: memPtr [29369,29375]",
      "dest": "identifier: memPtr [41321,41327]"
    },
    {
      "src": "function_definition [29744,30536]",
      "dest": "function_definition [42252,42723]"
    },
    {
      "src": "identifier: _payloadOffset [33812,33826]",
      "dest": "identifier: _payloadOffset [45432,45446]"
    },
    {
      "src": "member_expression [6338,6349]",
      "dest": "member_expression [21791,21802]"
    },
    {
      "src": "primitive_type [27648,27655]",
      "dest": "primitive_type [16894,16901]"
    },
    {
      "src": "identifier: byteLen [32916,32923]",
      "dest": "identifier: byteLen [44497,44504]"
    },
    {
      "src": "identifier: IERC20 [2944,2950]",
      "dest": "identifier: IERC20 [18397,18403]"
    },
    {
      "src": "identifier: role [22787,22791]",
      "dest": "identifier: role [31965,31969]"
    },
    {
      "src": "variable_declaration [28800,28814]",
      "dest": "variable_declaration [6864,6873]"
    },
    {
      "src": "comment: /**      * @dev Add a value to a set. O(1).      *      * Returns true if the value was added to the set, that is if it was not      * already present.      */ [9906,10070]",
      "dest": "comment: /**      * @dev Add a value to a set. O(1).      *      * Returns true if the value was added to the set, that is if it was not      * already present.      */ [25359,25523]"
    },
    {
      "src": "is: is [20199,20201]",
      "dest": "is: is [29377,29379]"
    },
    {
      "src": "block_statement [5180,5434]",
      "dest": "block_statement [20633,20887]"
    },
    {
      "src": "(: ( [30597,30598]",
      "dest": "(: ( [42784,42785]"
    },
    {
      "src": "): ) [32244,32245]",
      "dest": "): ) [43902,43903]"
    },
    {
      "src": "parameter [804,808]",
      "dest": "parameter [804,808]"
    },
    {
      "src": "{: { [11643,11644]",
      "dest": "{: { [8453,8454]"
    },
    {
      "src": "identifier: keccak256 [37397,37406]",
      "dest": "identifier: keccak256 [49051,49060]"
    },
    {
      "src": "parenthesized_expression [34103,34157]",
      "dest": "parenthesized_expression [45701,45755]"
    },
    {
      "src": "(: ( [8989,8990]",
      "dest": "(: ( [24442,24443]"
    },
    {
      "src": "storage: storage [7977,7984]",
      "dest": "storage: storage [23430,23437]"
    },
    {
      "src": ",: , [768,769]",
      "dest": ",: , [768,769]"
    },
    {
      "src": "return: return [27745,27751]",
      "dest": "return: return [37804,37810]"
    },
    {
      "src": "function_definition [31082,31646]",
      "dest": "function_definition [43071,43454]"
    },
    {
      "src": "(: ( [40389,40390]",
      "dest": "(: ( [52132,52133]"
    },
    {
      "src": "type_name [6265,6272]",
      "dest": "type_name [21718,21725]"
    },
    {
      "src": "(: ( [27585,27586]",
      "dest": "(: ( [5537,5538]"
    },
    {
      "src": "add: add [33659,33662]",
      "dest": "add: add [45279,45282]"
    },
    {
      "src": "[: [ [39794,39795]",
      "dest": "[: [ [51539,51540]"
    },
    {
      "src": "function_body [39279,40493]",
      "dest": "function_body [51024,52390]"
    },
    {
      "src": "return_statement [23160,23190]",
      "dest": "return_statement [32338,32368]"
    },
    {
      "src": "solidity_pragma_token [18829,18844]",
      "dest": "solidity_pragma_token [18903,18918]"
    },
    {
      "src": "): ) [27636,27637]",
      "dest": "): ) [5585,5586]"
    },
    {
      "src": "primitive_type [40028,40035]",
      "dest": "primitive_type [51771,51778]"
    },
    {
      "src": "block_statement [33393,33714]",
      "dest": "block_statement [45013,45334]"
    },
    {
      "src": "type_name [28083,28092]",
      "dest": "type_name [39226,39235]"
    },
    {
      "src": "type_name [17018,17022]",
      "dest": "type_name [13828,13832]"
    },
    {
      "src": "member_expression [5195,5206]",
      "dest": "member_expression [20648,20659]"
    },
    {
      "src": "function: function [13791,13799]",
      "dest": "function: function [10601,10609]"
    },
    {
      "src": "call_argument [27586,27601]",
      "dest": "call_argument [5538,5548]"
    },
    {
      "src": "array_access [22856,22868]",
      "dest": "array_access [32034,32046]"
    },
    {
      "src": "): ) [28945,28946]",
      "dest": "): ) [39980,39981]"
    },
    {
      "src": "string [32308,32354]",
      "dest": "string [18216,18260]"
    },
    {
      "src": "function_body [37816,37818]",
      "dest": "function_body [49470,49472]"
    },
    {
      "src": "parameter [8753,8775]",
      "dest": "parameter [24206,24228]"
    },
    {
      "src": ",: , [38019,38020]",
      "dest": ",: , [49673,49674]"
    },
    {
      "src": "primitive_type [5728,5732]",
      "dest": "primitive_type [21181,21185]"
    },
    {
      "src": "+: + [28312,28313]",
      "dest": "+: + [43737,43738]"
    },
    {
      "src": "(: ( [22057,22058]",
      "dest": "(: ( [31235,31236]"
    },
    {
      "src": "parameter [21748,21763]",
      "dest": "parameter [30926,30941]"
    },
    {
      "src": "member_expression [39330,39352]",
      "dest": "member_expression [51075,51097]"
    },
    {
      "src": "type_name [11308,11315]",
      "dest": "type_name [26761,26768]"
    },
    {
      "src": "expression_statement [31574,31615]",
      "dest": "expression_statement [43396,43423]"
    },
    {
      "src": "call_argument [13881,13912]",
      "dest": "call_argument [10691,10722]"
    },
    {
      "src": "identifier: _add [5081,5085]",
      "dest": "identifier: _add [20534,20538]"
    },
    {
      "src": "type_name [2549,2556]",
      "dest": "type_name [2549,2556]"
    },
    {
      "src": "solidity_pragma_token [2897,2911]",
      "dest": "solidity_pragma_token [48759,48773]"
    },
    {
      "src": "variable_declaration [31310,31324]",
      "dest": "variable_declaration [38608,38619]"
    },
    {
      "src": "function: function [10838,10846]",
      "dest": "function: function [26291,26299]"
    },
    {
      "src": "array_access [39410,39423]",
      "dest": "array_access [51155,51168]"
    },
    {
      "src": "(: ( [33498,33499]",
      "dest": "(: ( [45118,45119]"
    },
    {
      "src": "comment: /**      * @dev Returns true if the value is in the set. O(1).      */ [10528,10600]",
      "dest": "comment: /**      * @dev Returns true if the value is in the set. O(1).      */ [25981,26053]"
    },
    {
      "src": "identifier: dataLen [28493,28500]",
      "dest": "identifier: dataLen [39486,39493]"
    },
    {
      "src": "identifier: _contains [5157,5166]",
      "dest": "identifier: _contains [20610,20619]"
    },
    {
      "src": "): ) [11374,11375]",
      "dest": "): ) [26827,26828]"
    },
    {
      "src": "+: + [30969,30970]",
      "dest": "+: + [42958,42959]"
    },
    {
      "src": "binary_expression [29901,29915]",
      "dest": "binary_expression [39776,39789]"
    },
    {
      "src": "yul_variable_declaration [32912,32943]",
      "dest": "yul_variable_declaration [44493,44524]"
    },
    {
      "src": "type_name [26496,26502]",
      "dest": "type_name [35674,35680]"
    },
    {
      "src": "=: = [32031,32032]",
      "dest": "=: = [43696,43697]"
    },
    {
      "src": "comment: // File: contracts/common/AccessControlMixin.sol [26306,26354]",
      "dest": "comment: // File: contracts/common/AccessControlMixin.sol [35484,35532]"
    },
    {
      "src": "): ) [16840,16841]",
      "dest": "): ) [13650,13651]"
    },
    {
      "src": "function_definition [23931,24161]",
      "dest": "function_definition [33109,33339]"
    },
    {
      "src": "uint256: uint256 [37765,37772]",
      "dest": "uint256: uint256 [49419,49426]"
    },
    {
      "src": "return_statement [9771,9819]",
      "dest": "return_statement [25224,25272]"
    },
    {
      "src": "yul_identifier [33113,33120]",
      "dest": "yul_identifier [44710,44717]"
    },
    {
      "src": "solidity_pragma_token [35376,35390]",
      "dest": "solidity_pragma_token [46993,47007]"
    },
    {
      "src": "identifier: value [2577,2582]",
      "dest": "identifier: value [2577,2582]"
    },
    {
      "src": "pragma_directive [26358,26380]",
      "dest": "pragma_directive [18343,18365]"
    },
    {
      "src": "comment: /**     * @dev Returns the value stored at position `index` in the set. O(1).     *     * Note that there are no guarantees on the ordering of values inside the     * array, and it may change when more values are added or removed.     *     * Requirements:     *     * - `index` must be strictly less than {length}.     */ [10959,11290]",
      "dest": "comment: /**     * @dev Returns the value stored at position `index` in the set. O(1).     *     * Note that there are no guarantees on the ordering of values inside the     * array, and it may change when more values are added or removed.     *     * Requirements:     *     * - `index` must be strictly less than {length}.     */ [26412,26743]"
    },
    {
      "src": "primitive_type [12586,12593]",
      "dest": "primitive_type [9396,9403]"
    },
    {
      "src": "payable: payable [18433,18440]",
      "dest": "payable: payable [27611,27618]"
    },
    {
      "src": ",: , [2785,2786]",
      "dest": ",: , [2785,2786]"
    },
    {
      "src": "parameter [7365,7369]",
      "dest": "parameter [22818,22822]"
    },
    {
      "src": "override: override [38548,38556]",
      "dest": "override: override [50202,50210]"
    },
    {
      "src": "call_expression [29234,29253]",
      "dest": "call_expression [41133,41152]"
    },
    {
      "src": "type_name [40053,40060]",
      "dest": "type_name [51796,51803]"
    },
    {
      "src": "(: ( [10398,10399]",
      "dest": "(: ( [25851,25852]"
    },
    {
      "src": "identifier: token [40451,40456]",
      "dest": "identifier: token [15347,15352]"
    },
    {
      "src": "identifier: require [39749,39756]",
      "dest": "identifier: require [51494,51501]"
    },
    {
      "src": "comment: // skip over an item [32247,32267]",
      "dest": "comment: // skip over an item [43905,43925]"
    },
    {
      "src": "uint256: uint256 [30940,30947]",
      "dest": "uint256: uint256 [4717,4724]"
    },
    {
      "src": "{: { [27567,27568]",
      "dest": "{: { [37699,37700]"
    },
    {
      "src": "assembly_statement [31499,31562]",
      "dest": "assembly_statement [43321,43384]"
    },
    {
      "src": "string_literal [36997,37013]",
      "dest": "string_literal [48614,48630]"
    },
    {
      "src": "=: = [32720,32721]",
      "dest": "=: = [44289,44290]"
    },
    {
      "src": "): ) [37860,37861]",
      "dest": "): ) [49514,49515]"
    },
    {
      "src": "address: address [16761,16768]",
      "dest": "address: address [13571,13578]"
    },
    {
      "src": "function_definition [24668,24877]",
      "dest": "function_definition [33846,34055]"
    },
    {
      "src": "identifier: grantRole [23468,23477]",
      "dest": "identifier: grantRole [32646,32655]"
    },
    {
      "src": "type_name [31143,31148]",
      "dest": "type_name [43132,43137]"
    },
    {
      "src": "identifier: members [22133,22140]",
      "dest": "identifier: members [31311,31318]"
    },
    {
      "src": ",: , [11327,11328]",
      "dest": ",: , [26780,26781]"
    },
    {
      "src": "sub: sub [30463,30466]",
      "dest": "sub: sub [42650,42653]"
    },
    {
      "src": "identifier: set [7389,7392]",
      "dest": "identifier: set [22842,22845]"
    },
    {
      "src": "identifier: memPtr [27656,27662]",
      "dest": "identifier: newAllowance [16902,16914]"
    },
    {
      "src": "comment: // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691 [18568,18686]",
      "dest": "comment: // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691 [27746,27864]"
    },
    {
      "src": "return_type_definition [21777,21791]",
      "dest": "return_type_definition [30955,30969]"
    },
    {
      "src": "comment: /**      * @dev Moves `amount` tokens from `sender` to `recipient` using the      * allowance mechanism. `amount` is then deducted from the caller's      * allowance.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [1928,2232]",
      "dest": "comment: /**      * @dev Moves `amount` tokens from `sender` to `recipient` using the      * allowance mechanism. `amount` is then deducted from the caller's      * allowance.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [1928,2232]"
    },
    {
      "src": "event: event [2512,2517]",
      "dest": "event: event [2512,2517]"
    },
    {
      "src": "\": \" [16139,16140]",
      "dest": "\": \" [12949,12950]"
    },
    {
      "src": "==: == [24763,24765]",
      "dest": "==: == [33941,33943]"
    },
    {
      "src": "(: ( [30725,30726]",
      "dest": "(: ( [43164,43165]"
    },
    {
      "src": "identifier: item [28732,28736]",
      "dest": "identifier: item [39726,39730]"
    },
    {
      "src": "): ) [10511,10512]",
      "dest": "): ) [25964,25965]"
    },
    {
      "src": "): ) [29252,29253]",
      "dest": "): ) [41151,41152]"
    },
    {
      "src": ",: , [15079,15080]",
      "dest": ",: , [11889,11890]"
    },
    {
      "src": "member_expression [26182,26202]",
      "dest": "member_expression [35360,35380]"
    },
    {
      "src": "override_specifier [38548,38556]",
      "dest": "override_specifier [50202,50210]"
    },
    {
      "src": "state_mutability [18403,18407]",
      "dest": "state_mutability [27581,27585]"
    },
    {
      "src": "primitive_type [16436,16443]",
      "dest": "primitive_type [13246,13253]"
    },
    {
      "src": "{: { [34798,34799]",
      "dest": "{: { [46353,46354]"
    },
    {
      "src": "uint256: uint256 [13837,13844]",
      "dest": "uint256: uint256 [10647,10654]"
    },
    {
      "src": "identifier: errorMessage [16700,16712]",
      "dest": "identifier: errorMessage [13510,13522]"
    },
    {
      "src": "yul_identifier [33933,33938]",
      "dest": "yul_identifier [45544,45549]"
    },
    {
      "src": "function_definition [34538,35299]",
      "dest": "function_definition [46136,46916]"
    },
    {
      "src": "call_expression [5195,5218]",
      "dest": "call_expression [20648,20671]"
    },
    {
      "src": "identifier: value [8463,8468]",
      "dest": "identifier: value [23916,23921]"
    },
    {
      "src": "identifier: byte0 [33297,33302]",
      "dest": "identifier: byte0 [44905,44910]"
    },
    {
      "src": "memory: memory [29188,29194]",
      "dest": "memory: memory [41092,41098]"
    },
    {
      "src": ",: , [31542,31543]",
      "dest": ",: , [43364,43365]"
    },
    {
      "src": "identifier: RLPItem [31779,31786]",
      "dest": "identifier: RLPItem [43585,43592]"
    },
    {
      "src": "=: = [39949,39950]",
      "dest": "=: = [51694,51695]"
    },
    {
      "src": "address: address [2527,2534]",
      "dest": "address: address [2527,2534]"
    },
    {
      "src": "identifier: byte0 [28784,28789]",
      "dest": "identifier: byte0 [39822,39827]"
    },
    {
      "src": "identifier: role [23959,23963]",
      "dest": "identifier: role [33137,33141]"
    },
    {
      "src": "yul_identifier [17518,17528]",
      "dest": "yul_identifier [14328,14338]"
    },
    {
      "src": "): ) [26760,26761]",
      "dest": "): ) [35938,35939]"
    },
    {
      "src": "primitive_type [32532,32539]",
      "dest": "primitive_type [6149,6156]"
    },
    {
      "src": "(: ( [26722,26723]",
      "dest": "(: ( [35900,35901]"
    },
    {
      "src": "): ) [28765,28766]",
      "dest": "): ) [39759,39760]"
    },
    {
      "src": "comment: /**  * @dev Contract module that allows children to implement role-based access  * control mechanisms.  *  * Roles are referred to by their `bytes32` identifier. These should be exposed  * in the external API and be unique. The best way to achieve this is by  * using `public constant` hash digests:  *  * ```  * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");  * ```  *  * Roles can be used to represent a set of permissions. To restrict access to a  * function call, use {hasRole}:  *  * ```  * function foo() public {  *     require(hasRole(MY_ROLE, msg.sender));  *     ...  * }  * ```  *  * Roles can be granted and revoked dynamically via the {grantRole} and  * {revokeRole} functions. Each role has an associated admin role, and only  * accounts that have a role's admin role can call {grantRole} and {revokeRole}.  *  * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means  * that only accounts with this role will be able to grant or revoke other  * roles. More complex role relationships can be created by using  * {_setRoleAdmin}.  *  * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to  * grant and revoke this role. Extra precautions should be taken to secure  * accounts that have been granted it.  */ [18855,20165]",
      "dest": "comment: /**  * @dev Contract module that allows children to implement role-based access  * control mechanisms.  *  * Roles are referred to by their `bytes32` identifier. These should be exposed  * in the external API and be unique. The best way to achieve this is by  * using `public constant` hash digests:  *  * ```  * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");  * ```  *  * Roles can be used to represent a set of permissions. To restrict access to a  * function call, use {hasRole}:  *  * ```  * function foo() public {  *     require(hasRole(MY_ROLE, msg.sender));  *     ...  * }  * ```  *  * Roles can be granted and revoked dynamically via the {grantRole} and  * {revokeRole} functions. Each role has an associated admin role, and only  * accounts that have a role's admin role can call {grantRole} and {revokeRole}.  *  * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means  * that only accounts with this role will be able to grant or revoke other  * roles. More complex role relationships can be created by using  * {_setRoleAdmin}.  *  * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to  * grant and revoke this role. Extra precautions should be taken to secure  * accounts that have been granted it.  */ [28033,29343]"
    },
    {
      "src": "identifier: destpart [35262,35270]",
      "dest": "identifier: destpart [46864,46872]"
    },
    {
      "src": "(: ( [28492,28493]",
      "dest": "(: ( [39485,39486]"
    },
    {
      "src": "type_name [25727,25734]",
      "dest": "type_name [34905,34912]"
    },
    {
      "src": "parameter [25931,25943]",
      "dest": "parameter [35109,35121]"
    },
    {
      "src": "update_expression [32370,32377]",
      "dest": "update_expression [43938,43945]"
    },
    {
      "src": "address: address [38477,38484]",
      "dest": "address: address [50131,50138]"
    },
    {
      "src": "bool: bool [7365,7369]",
      "dest": "bool: bool [22818,22822]"
    },
    {
      "src": "indexed: indexed [2535,2542]",
      "dest": "indexed: indexed [2535,2542]"
    },
    {
      "src": "bytes32: bytes32 [20905,20912]",
      "dest": "bytes32: bytes32 [30083,30090]"
    },
    {
      "src": "type_name [33827,33834]",
      "dest": "type_name [16565,16572]"
    },
    {
      "src": "parameter [5103,5116]",
      "dest": "parameter [20556,20569]"
    },
    {
      "src": "parameter [37846,37860]",
      "dest": "parameter [49500,49514]"
    },
    {
      "src": "): ) [29390,29391]",
      "dest": "): ) [41342,41343]"
    },
    {
      "src": "identifier: value [14072,14077]",
      "dest": "identifier: value [10882,10887]"
    },
    {
      "src": ">: > [8074,8075]",
      "dest": ">: > [23527,23528]"
    },
    {
      "src": "type_name [11329,11336]",
      "dest": "type_name [26782,26789]"
    },
    {
      "src": "identifier: memPtr [32137,32143]",
      "dest": "identifier: memPtr [43796,43802]"
    },
    {
      "src": "not: not [35132,35135]",
      "dest": "not: not [46726,46729]"
    },
    {
      "src": "type_name [10898,10905]",
      "dest": "type_name [26351,26358]"
    },
    {
      "src": "[: [ [4701,4702]",
      "dest": "[: [ [20154,20155]"
    },
    {
      "src": "binary_expression [12805,12847]",
      "dest": "binary_expression [9615,9657]"
    },
    {
      "src": "assembly_statement [35077,35292]",
      "dest": "assembly_statement [46667,46898]"
    },
    {
      "src": "expression_statement [25539,25565]",
      "dest": "expression_statement [34717,34743]"
    },
    {
      "src": "comment: // File: @openzeppelin/contracts/utils/EnumerableSet.sol [3348,3404]",
      "dest": "comment: // File: @openzeppelin/contracts/utils/EnumerableSet.sol [18801,18857]"
    },
    {
      "src": "user_defined_type [10399,10406]",
      "dest": "user_defined_type [25852,25859]"
    },
    {
      "src": "address: address [39811,39818]",
      "dest": "address: address [51556,51563]"
    },
    {
      "src": "(: ( [18424,18425]",
      "dest": "(: ( [27602,27603]"
    },
    {
      "src": "): ) [17576,17577]",
      "dest": "): ) [14386,14387]"
    },
    {
      "src": "identifier: spender [1871,1878]",
      "dest": "identifier: spender [1871,1878]"
    },
    {
      "src": "identifier: memPtr [28451,28457]",
      "dest": "identifier: memPtr [39444,39450]"
    },
    {
      "src": "comment: /**      * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`      *      * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite      * {RoleAdminChanged} not being emitted signaling this.      *      * _Available since v3.1._      */ [20520,20819]",
      "dest": "comment: /**      * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`      *      * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite      * {RoleAdminChanged} not being emitted signaling this.      *      * _Available since v3.1._      */ [29698,29997]"
    },
    {
      "src": "comment: /**      * @dev Returns the amount of tokens owned by `account`.      */ [356,430]",
      "dest": "comment: /**      * @dev Returns the amount of tokens owned by `account`.      */ [356,430]"
    },
    {
      "src": "identifier: i [28480,28481]",
      "dest": "identifier: i [39473,39474]"
    },
    {
      "src": "struct_declaration [4638,4894]",
      "dest": "struct_declaration [20091,20347]"
    },
    {
      "src": "constructor_definition [37795,37818]",
      "dest": "constructor_definition [49449,49472]"
    },
    {
      "src": ".: . [23179,23180]",
      "dest": ".: . [32357,32358]"
    },
    {
      "src": "parameter [9713,9726]",
      "dest": "parameter [25166,25179]"
    },
    {
      "src": "{: { [30285,30286]",
      "dest": "{: { [42472,42473]"
    },
    {
      "src": "member_expression [40012,40027]",
      "dest": "member_expression [51755,51770]"
    },
    {
      "src": "primitive_type [15374,15381]",
      "dest": "primitive_type [12184,12191]"
    },
    {
      "src": "call_expression [39455,39638]",
      "dest": "call_expression [51200,51383]"
    },
    {
      "src": "yul_assignment [32996,33020]",
      "dest": "yul_assignment [44577,44601]"
    },
    {
      "src": "primitive_type [15390,15395]",
      "dest": "primitive_type [12200,12205]"
    },
    {
      "src": "identifier: isContract [16892,16902]",
      "dest": "identifier: isContract [13702,13712]"
    },
    {
      "src": "expression_statement [32783,32824]",
      "dest": "expression_statement [44362,44403]"
    },
    {
      "src": "type_name [15390,15395]",
      "dest": "type_name [12200,12205]"
    },
    {
      "src": "mload: mload [33950,33955]",
      "dest": "mload: mload [45561,45566]"
    },
    {
      "src": "inheritance_specifier [37258,37271]",
      "dest": "inheritance_specifier [48879,48892]"
    },
    {
      "src": ".: . [25828,25829]",
      "dest": ".: . [35006,35007]"
    },
    {
      "src": "call_expression [39330,39345]",
      "dest": "call_expression [51075,51090]"
    },
    {
      "src": "}: } [7153,7154]",
      "dest": "}: } [22606,22607]"
    },
    {
      "src": "call_argument [38704,38713]",
      "dest": "call_argument [50358,50367]"
    },
    {
      "src": "): ) [5178,5179]",
      "dest": "): ) [20631,20632]"
    },
    {
      "src": "yul_evm_builtin [32927,32930]",
      "dest": "yul_evm_builtin [44508,44511]"
    },
    {
      "src": "=: = [27312,27313]",
      "dest": "=: = [36496,36497]"
    },
    {
      "src": "function_definition [2238,2335]",
      "dest": "function_definition [2238,2335]"
    },
    {
      "src": "delete: delete [7088,7094]",
      "dest": "delete: delete [22541,22547]"
    },
    {
      "src": "string [37476,37491]",
      "dest": "string [49130,49145]"
    },
    {
      "src": "primitive_type [36151,36158]",
      "dest": "primitive_type [47768,47775]"
    },
    {
      "src": "identifier: this [18562,18566]",
      "dest": "identifier: this [27740,27744]"
    },
    {
      "src": "identifier: UintSet [9861,9868]",
      "dest": "identifier: UintSet [25314,25321]"
    },
    {
      "src": "visibility [10660,10668]",
      "dest": "visibility [26113,26121]"
    },
    {
      "src": "function: function [31082,31090]",
      "dest": "function: function [43071,43079]"
    },
    {
      "src": "returns: returns [10444,10451]",
      "dest": "returns: returns [25897,25904]"
    },
    {
      "src": "return: return [30515,30521]",
      "dest": "return: return [42702,42708]"
    },
    {
      "src": "variable_declaration_statement [28140,28186]",
      "dest": "variable_declaration_statement [5502,5520]"
    },
    {
      "src": "comment: /**      * @notice Validates log signature, from and to address      * then sends the correct amount to withdrawer      * callable only by manager      * @param rootToken Token which gets withdrawn      * @param log Valid ERC20 burn log from child chain      */ [38871,39138]",
      "dest": "comment: /**      * @notice Validates log signature, from and to address      * then sends the correct amount to withdrawer      * callable only by manager      * @param rootToken Token which gets withdrawn      * @param log Valid ERC20 burn log from child chain      */ [50616,50883]"
    },
    {
      "src": "(: ( [16021,16022]",
      "dest": "(: ( [12831,12832]"
    },
    {
      "src": "number_literal: 0 [34661,34662]",
      "dest": "number_literal: 0 [46216,46217]"
    },
    {
      "src": "state_mutability [29480,29484]",
      "dest": "state_mutability [42097,42101]"
    },
    {
      "src": "parameter [27546,27560]",
      "dest": "parameter [37683,37697]"
    },
    {
      "src": "-: - [33353,33354]",
      "dest": "-: - [44961,44962]"
    },
    {
      "src": "identifier: _inner [9884,9890]",
      "dest": "identifier: _inner [25337,25343]"
    },
    {
      "src": "if: if [34650,34652]",
      "dest": "if: if [46205,46207]"
    },
    {
      "src": "{: { [25777,25778]",
      "dest": "{: { [34955,34956]"
    },
    {
      "src": "member_expression [39485,39510]",
      "dest": "member_expression [51230,51255]"
    },
    {
      "src": "return: return [31625,31631]",
      "dest": "return: return [43433,43439]"
    },
    {
      "src": "(: ( [32842,32843]",
      "dest": "(: ( [44423,44424]"
    },
    {
      "src": "identifier: RoleData [20429,20437]",
      "dest": "identifier: RoleData [29607,29615]"
    },
    {
      "src": "(: ( [10191,10192]",
      "dest": "(: ( [25644,25645]"
    },
    {
      "src": "{: { [5180,5181]",
      "dest": "{: { [20633,20634]"
    },
    {
      "src": "call_argument [10717,10727]",
      "dest": "call_argument [26170,26180]"
    },
    {
      "src": "binary_expression [34283,34304]",
      "dest": "binary_expression [45872,45893]"
    },
    {
      "src": "): ) [34839,34840]",
      "dest": "): ) [46394,46395]"
    },
    {
      "src": "string [37564,37599]",
      "dest": "string [49218,49253]"
    },
    {
      "src": "new_expression [31446,31455]",
      "dest": "new_expression [43271,43280]"
    },
    {
      "src": "): ) [8814,8815]",
      "dest": "): ) [24267,24268]"
    },
    {
      "src": "assembly_statement [30276,30503]",
      "dest": "assembly_statement [42463,42690]"
    },
    {
      "src": "+: + [32144,32145]",
      "dest": "+: + [43803,43804]"
    },
    {
      "src": "assembly_statement [27673,27733]",
      "dest": "assembly_statement [37732,37792]"
    },
    {
      "src": "type_name [29450,29457]",
      "dest": "type_name [42067,42074]"
    },
    {
      "src": "and: and [35188,35191]",
      "dest": "and: and [46786,46789]"
    },
    {
      "src": "): ) [502,503]",
      "dest": "): ) [502,503]"
    },
    {
      "src": ".: . [39503,39504]",
      "dest": ".: . [51248,51249]"
    },
    {
      "src": "identifier: MANAGER_ROLE [37382,37394]",
      "dest": "identifier: MANAGER_ROLE [49036,49048]"
    },
    {
      "src": "call_expression [11402,11424]",
      "dest": "call_expression [26855,26877]"
    },
    {
      "src": "yul_identifier [31023,31029]",
      "dest": "yul_identifier [43012,43018]"
    },
    {
      "src": "number_literal: 0xc0 [27232,27236]",
      "dest": "number_literal: 0xc0 [36413,36417]"
    },
    {
      "src": "identifier: copy [29359,29363]",
      "dest": "identifier: copy [41311,41315]"
    },
    {
      "src": "identifier: destpart [35176,35184]",
      "dest": "identifier: destpart [46774,46782]"
    },
    {
      "src": "return_statement [8505,8554]",
      "dest": "return_statement [23958,24007]"
    },
    {
      "src": "{: { [23149,23150]",
      "dest": "{: { [32327,32328]"
    },
    {
      "src": "yul_identifier [28863,28868]",
      "dest": "yul_identifier [39898,39903]"
    },
    {
      "src": "primitive_type [2569,2576]",
      "dest": "primitive_type [2569,2576]"
    },
    {
      "src": "type_name [7328,7335]",
      "dest": "type_name [22781,22788]"
    },
    {
      "src": "yul_evm_builtin [34817,34823]",
      "dest": "yul_evm_builtin [46372,46378]"
    },
    {
      "src": "using_directive [37312,37350]",
      "dest": "using_directive [48933,48971]"
    },
    {
      "src": "}: } [35298,35299]",
      "dest": "}: } [46915,46916]"
    },
    {
      "src": "bytes32: bytes32 [26128,26135]",
      "dest": "bytes32: bytes32 [35306,35313]"
    },
    {
      "src": "identifier: _msgSender [24766,24776]",
      "dest": "identifier: _msgSender [33944,33954]"
    },
    {
      "src": "): ) [27721,27722]",
      "dest": "): ) [37780,37781]"
    },
    {
      "src": ".: . [5206,5207]",
      "dest": ".: . [20659,20660]"
    },
    {
      "src": "array_access [25985,25997]",
      "dest": "array_access [35163,35175]"
    },
    {
      "src": "visibility [1896,1904]",
      "dest": "visibility [1896,1904]"
    },
    {
      "src": "[: [ [39420,39421]",
      "dest": "[: [ [51165,51166]"
    },
    {
      "src": "]: ] [28481,28482]",
      "dest": "]: ] [39474,39475]"
    },
    {
      "src": "memory: memory [27483,27489]",
      "dest": "memory: memory [37647,37653]"
    },
    {
      "src": ",: , [15968,15969]",
      "dest": ",: , [12778,12779]"
    },
    {
      "src": "user_defined_type [8990,9000]",
      "dest": "user_defined_type [24443,24453]"
    },
    {
      "src": "comment: // the array, and then remove the last element (sometimes called as 'swap and pop'). [6093,6177]",
      "dest": "comment: // the array, and then remove the last element (sometimes called as 'swap and pop'). [21546,21630]"
    },
    {
      "src": "primitive_type [4694,4701]",
      "dest": "primitive_type [20147,20154]"
    },
    {
      "src": "if: if [5899,5901]",
      "dest": "if: if [21352,21354]"
    },
    {
      "src": "): ) [26157,26158]",
      "dest": "): ) [35335,35336]"
    },
    {
      "src": "identifier: WORD_SIZE [34763,34772]",
      "dest": "identifier: WORD_SIZE [46318,46327]"
    },
    {
      "src": "(: ( [12256,12257]",
      "dest": "(: ( [9066,9067]"
    },
    {
      "src": "=: = [28107,28108]",
      "dest": "=: = [39250,39251]"
    },
    {
      "src": "yul_hex_number: 0x20 [29323,29327]",
      "dest": "yul_hex_number: 0x20 [41275,41279]"
    },
    {
      "src": "block_statement [26020,26092]",
      "dest": "block_statement [35198,35270]"
    },
    {
      "src": "identifier: transferFrom [38759,38771]",
      "dest": "identifier: safeTransferFrom [50550,50566]"
    },
    {
      "src": ",: , [20903,20904]",
      "dest": ",: , [30081,30082]"
    },
    {
      "src": "variable_declaration_statement [6318,6361]",
      "dest": "variable_declaration_statement [21771,21814]"
    },
    {
      "src": "user_defined_type [26417,26430]",
      "dest": "user_defined_type [35595,35608]"
    },
    {
      "src": "return: return [5455,5461]",
      "dest": "return: return [20908,20914]"
    },
    {
      "src": "return_statement [8827,8879]",
      "dest": "return_statement [24280,24332]"
    },
    {
      "src": "primitive_type [25480,25487]",
      "dest": "primitive_type [34658,34665]"
    },
    {
      "src": "identifier: RLPItem [28113,28120]",
      "dest": "identifier: RLPItem [39256,39263]"
    },
    {
      "src": "user_defined_type [29760,29767]",
      "dest": "user_defined_type [42268,42275]"
    },
    {
      "src": "{: { [34639,34640]",
      "dest": "{: { [46194,46195]"
    },
    {
      "src": "<: < [33303,33304]",
      "dest": "<: < [44911,44912]"
    },
    {
      "src": ",: , [39181,39182]",
      "dest": ",: , [50926,50927]"
    },
    {
      "src": "(: ( [31341,31342]",
      "dest": "(: ( [38636,38637]"
    },
    {
      "src": "parameter [24690,24702]",
      "dest": "parameter [33868,33880]"
    },
    {
      "src": "assembly: assembly [32602,32610]",
      "dest": "assembly: assembly [44158,44166]"
    },
    {
      "src": "}: } [31561,31562]",
      "dest": "}: } [43383,43384]"
    },
    {
      "src": "number_literal: 21 [29647,29649]",
      "dest": "number_literal: 21 [42192,42194]"
    },
    {
      "src": "identifier: item [27890,27894]",
      "dest": "identifier: item [39096,39100]"
    },
    {
      "src": "-=: -= [34760,34762]",
      "dest": "-=: -= [46315,46317]"
    },
    {
      "src": "(: ( [27545,27546]",
      "dest": "(: ( [37682,37683]"
    },
    {
      "src": "primitive_type [15024,15029]",
      "dest": "primitive_type [11834,11839]"
    },
    {
      "src": "user_defined_type [39290,39307]",
      "dest": "user_defined_type [51035,51052]"
    },
    {
      "src": "type_name [20905,20912]",
      "dest": "type_name [30083,30090]"
    },
    {
      "src": "uint256: uint256 [16796,16803]",
      "dest": "uint256: uint256 [13606,13613]"
    },
    {
      "src": "primitive_type [38587,38594]",
      "dest": "primitive_type [50243,50250]"
    },
    {
      "src": "identifier: item [30740,30744]",
      "dest": "identifier: item [43165,43169]"
    },
    {
      "src": "yul_function_call [30310,30323]",
      "dest": "yul_function_call [42497,42510]"
    },
    {
      "src": "=: = [37542,37543]",
      "dest": "=: = [49196,49197]"
    },
    {
      "src": "(: ( [750,751]",
      "dest": "(: ( [750,751]"
    },
    {
      "src": "identifier: _grantRole [23653,23663]",
      "dest": "identifier: _grantRole [32831,32841]"
    },
    {
      "src": "{: { [27098,27099]",
      "dest": "{: { [36276,36277]"
    },
    {
      "src": ",: , [16685,16686]",
      "dest": ",: , [13495,13496]"
    },
    {
      "src": "string_literal [15081,15113]",
      "dest": "string_literal [11891,11923]"
    },
    {
      "src": "yul_decimal_number: 1 [33018,33019]",
      "dest": "yul_decimal_number: 1 [44599,44600]"
    },
    {
      "src": "\": \" [29847,29848]",
      "dest": "\": \" [7557,7558]"
    },
    {
      "src": "member_expression [30846,30854]",
      "dest": "member_expression [42882,42890]"
    },
    {
      "src": "primitive_type [8455,8462]",
      "dest": "primitive_type [23908,23915]"
    },
    {
      "src": "parameter [8777,8790]",
      "dest": "parameter [24230,24243]"
    },
    {
      "src": "): ) [35202,35203]",
      "dest": "): ) [46800,46801]"
    },
    {
      "src": "variable_declaration [39928,39948]",
      "dest": "variable_declaration [51673,51693]"
    },
    {
      "src": "): ) [30649,30650]",
      "dest": "): ) [8170,8171]"
    },
    {
      "src": "type_name [37499,37506]",
      "dest": "type_name [49153,49160]"
    },
    {
      "src": "binary_expression [31232,31254]",
      "dest": "binary_expression [41530,41543]"
    },
    {
      "src": "call_argument [29651,29686]",
      "dest": "call_argument [18003,18037]"
    },
    {
      "src": "type_name [34584,34591]",
      "dest": "type_name [8101,8108]"
    },
    {
      "src": "identifier: byte0 [34061,34066]",
      "dest": "identifier: byte0 [45672,45677]"
    },
    {
      "src": "return_type_definition [27537,27561]",
      "dest": "return_type_definition [37674,37698]"
    },
    {
      "src": "internal: internal [18394,18402]",
      "dest": "internal: internal [27572,27580]"
    },
    {
      "src": "uint256: uint256 [28140,28147]",
      "dest": "uint256: uint256 [5502,5509]"
    },
    {
      "src": "): ) [32539,32540]",
      "dest": "): ) [6156,6157]"
    },
    {
      "src": "type_name [10143,10147]",
      "dest": "type_name [25596,25600]"
    },
    {
      "src": "binary_expression [30846,30860]",
      "dest": "binary_expression [42882,42896]"
    },
    {
      "src": "call_argument [40478,40484]",
      "dest": "call_argument [52375,52381]"
    },
    {
      "src": "variable_declaration_tuple [14037,14053]",
      "dest": "variable_declaration_tuple [10847,10863]"
    },
    {
      "src": "): ) [21623,21624]",
      "dest": "): ) [30801,30802]"
    },
    {
      "src": "string [26591,26619]",
      "dest": "string [35769,35797]"
    },
    {
      "src": "=: = [28483,28484]",
      "dest": "=: = [39476,39477]"
    },
    {
      "src": "(: ( [10623,10624]",
      "dest": "(: ( [26076,26077]"
    },
    {
      "src": "primitive_type [20418,20425]",
      "dest": "primitive_type [29596,29603]"
    },
    {
      "src": "identifier: len [30471,30474]",
      "dest": "identifier: len [42658,42661]"
    },
    {
      "src": "member_expression [40379,40389]",
      "dest": "member_expression [52122,52132]"
    },
    {
      "src": "(: ( [28920,28921]",
      "dest": "(: ( [39955,39956]"
    },
    {
      "src": "comment: // @return entire rlp item byte length [32429,32467]",
      "dest": "comment: // @return entire rlp item byte length [43997,44035]"
    },
    {
      "src": "type_name [339,346]",
      "dest": "type_name [339,346]"
    },
    {
      "src": "identifier: byteLen [33580,33587]",
      "dest": "identifier: byteLen [45200,45207]"
    },
    {
      "src": "call_expression [16054,16141]",
      "dest": "call_expression [12864,12951]"
    },
    {
      "src": "identifier: require [16884,16891]",
      "dest": "identifier: require [13694,13701]"
    },
    {
      "src": "): ) [21239,21240]",
      "dest": "): ) [30417,30418]"
    },
    {
      "src": "yul_assignment [30300,30323]",
      "dest": "yul_assignment [42487,42510]"
    },
    {
      "src": "pure: pure [31808,31812]",
      "dest": "pure: pure [43614,43618]"
    },
    {
      "src": "parameter [30642,30649]",
      "dest": "parameter [8163,8170]"
    },
    {
      "src": "primitive_type [37687,37694]",
      "dest": "primitive_type [49341,49348]"
    },
    {
      "src": "internal: internal [27505,27513]",
      "dest": "internal: internal [37660,37668]"
    },
    {
      "src": "\": \" [13944,13945]",
      "dest": "\": \" [10754,10755]"
    },
    {
      "src": "number_literal: 2 [39795,39796]",
      "dest": "number_literal: 2 [51540,51541]"
    },
    {
      "src": "type_name [28761,28765]",
      "dest": "type_name [39755,39759]"
    },
    {
      "src": "identifier: item [29775,29779]",
      "dest": "identifier: item [42283,42287]"
    },
    {
      "src": "type_name [32552,32559]",
      "dest": "type_name [7475,7482]"
    },
    {
      "src": "else: else [34038,34042]",
      "dest": "else: else [45663,45667]"
    },
    {
      "src": "identifier: ITokenPredicate [35550,35565]",
      "dest": "identifier: ITokenPredicate [47167,47182]"
    },
    {
      "src": "type_name [28042,28049]",
      "dest": "type_name [16600,16607]"
    },
    {
      "src": "visibility [26522,26530]",
      "dest": "visibility [35700,35708]"
    },
    {
      "src": "address: address [20290,20297]",
      "dest": "address: address [29468,29475]"
    },
    {
      "src": "\": \" [28228,28229]",
      "dest": "\": \" [16319,16320]"
    },
    {
      "src": "comment: // 1 byte for the length prefix [29586,29617]",
      "dest": "comment: // 1 byte for the length prefix [42131,42162]"
    },
    {
      "src": "(: ( [17517,17518]",
      "dest": "(: ( [14327,14328]"
    },
    {
      "src": "visibility [12274,12282]",
      "dest": "visibility [9084,9092]"
    },
    {
      "src": "parameter [15455,15467]",
      "dest": "parameter [12265,12277]"
    },
    {
      "src": "comment: // Checking whether MintableERC20Predicate has enough balance [40105,40166]",
      "dest": "comment: // Checking whether MintableERC20Predicate has enough balance [51848,51909]"
    },
    {
      "src": "=: = [27139,27140]",
      "dest": "=: = [36317,36318]"
    },
    {
      "src": "state_mutability [18515,18519]",
      "dest": "state_mutability [27693,27697]"
    },
    {
      "src": "assignment_expression [33337,33375]",
      "dest": "assignment_expression [44945,44983]"
    },
    {
      "src": "array_access [21810,21822]",
      "dest": "array_access [30988,31000]"
    },
    {
      "src": ".: . [39423,39424]",
      "dest": ".: . [51168,51169]"
    },
    {
      "src": "number_literal: 2 [40081,40082]",
      "dest": "number_literal: 2 [51824,51825]"
    },
    {
      "src": "(: ( [8430,8431]",
      "dest": "(: ( [23883,23884]"
    },
    {
      "src": "function_definition [16729,17708]",
      "dest": "function_definition [13539,14518]"
    },
    {
      "src": "return_type_definition [8479,8493]",
      "dest": "return_type_definition [23932,23946]"
    },
    {
      "src": ",: , [37226,37227]",
      "dest": ",: , [48847,48848]"
    },
    {
      "src": "bool: bool [21786,21790]",
      "dest": "bool: bool [30964,30968]"
    },
    {
      "src": "boolean_literal [5462,5467]",
      "dest": "boolean_literal [20915,20920]"
    },
    {
      "src": "view: view [18515,18519]",
      "dest": "view: view [27693,27697]"
    },
    {
      "src": "identifier: memPtr [31023,31029]",
      "dest": "identifier: memPtr [43012,43018]"
    },
    {
      "src": "variable_declaration [6265,6286]",
      "dest": "variable_declaration [21718,21739]"
    },
    {
      "src": "assembly: assembly [33408,33416]",
      "dest": "assembly: assembly [45028,45036]"
    },
    {
      "src": "call_argument [37407,37421]",
      "dest": "call_argument [49061,49075]"
    },
    {
      "src": "event_paramater [21192,21215]",
      "dest": "event_paramater [30370,30393]"
    },
    {
      "src": "identifier: _revertMsg [26740,26750]",
      "dest": "identifier: _revertMsg [35918,35928]"
    },
    {
      "src": "variable_declaration [28083,28106]",
      "dest": "variable_declaration [39226,39249]"
    },
    {
      "src": "{: { [31508,31509]",
      "dest": "{: { [43330,43331]"
    },
    {
      "src": "identifier: depositReceiver [36125,36140]",
      "dest": "identifier: depositReceiver [47742,47757]"
    },
    {
      "src": "public: public [23119,23125]",
      "dest": "public: public [32297,32303]"
    },
    {
      "src": "identifier: returndata [17566,17576]",
      "dest": "identifier: returndata [14376,14386]"
    },
    {
      "src": "(: ( [454,455]",
      "dest": "(: ( [454,455]"
    },
    {
      "src": "internal: internal [9029,9037]",
      "dest": "internal: internal [24482,24490]"
    },
    {
      "src": "{: { [26431,26432]",
      "dest": "{: { [35609,35610]"
    },
    {
      "src": "}: } [20400,20401]",
      "dest": "}: } [29578,29579]"
    },
    {
      "src": "expression_statement [30718,30800]",
      "dest": "expression_statement [43157,43179]"
    },
    {
      "src": "string_literal [37476,37491]",
      "dest": "string_literal [49130,49145]"
    },
    {
      "src": "struct_expression [17059,17089]",
      "dest": "struct_expression [13869,13899]"
    },
    {
      "src": "primitive_type [30940,30947]",
      "dest": "primitive_type [4717,4724]"
    },
    {
      "src": "call_argument [28451,28457]",
      "dest": "call_argument [39444,39450]"
    },
    {
      "src": "true [28977,28981]",
      "dest": "true [40025,40029]"
    },
    {
      "src": "type_name [7563,7570]",
      "dest": "type_name [23016,23023]"
    },
    {
      "src": "function: function [12237,12245]",
      "dest": "function: function [9047,9055]"
    },
    {
      "src": "call_argument [5167,5170]",
      "dest": "call_argument [20620,20623]"
    },
    {
      "src": "returns: returns [5719,5726]",
      "dest": "returns: returns [21172,21179]"
    },
    {
      "src": "yul_evm_builtin [35192,35197]",
      "dest": "yul_evm_builtin [46790,46795]"
    },
    {
      "src": "binary_expression [6338,6360]",
      "dest": "binary_expression [21791,21813]"
    },
    {
      "src": "comment: /**      * @notice Lock ERC20 tokens for deposit, callable only by manager      * @param depositor Address who wants to deposit tokens      * @param depositReceiver Address (address) who wants to receive tokens on child chain      * @param rootToken Token which gets deposited      * @param depositData ABI encoded amount      */ [38044,38379]",
      "dest": "comment: /**      * @notice Lock ERC20 tokens for deposit, callable only by manager      * @param depositor Address who wants to deposit tokens      * @param depositReceiver Address (address) who wants to receive tokens on child chain      * @param rootToken Token which gets deposited      * @param depositData ABI encoded amount      */ [49698,50033]"
    },
    {
      "src": "call_argument [14119,14179]",
      "dest": "call_argument [10929,10989]"
    },
    {
      "src": "parameter [16761,16775]",
      "dest": "parameter [13571,13585]"
    },
    {
      "src": "(: ( [29449,29450]",
      "dest": "(: ( [42066,42067]"
    },
    {
      "src": "parameter [26496,26520]",
      "dest": "parameter [35674,35698]"
    },
    {
      "src": "primitive_type [16532,16537]",
      "dest": "primitive_type [13342,13347]"
    },
    {
      "src": "): ) [26520,26521]",
      "dest": "): ) [35698,35699]"
    },
    {
      "src": "public: public [39244,39250]",
      "dest": "public: public [50989,50995]"
    },
    {
      "src": "(: ( [2526,2527]",
      "dest": "(: ( [2526,2527]"
    },
    {
      "src": "type_name [36089,36096]",
      "dest": "type_name [47706,47713]"
    },
    {
      "src": "): ) [35140,35141]",
      "dest": "): ) [46734,46735]"
    },
    {
      "src": ",: , [33561,33562]",
      "dest": ",: , [45181,45182]"
    },
    {
      "src": "binary_expression [31381,31398]",
      "dest": "binary_expression [38716,38733]"
    },
    {
      "src": "identifier: inited [36989,36995]",
      "dest": "identifier: inited [48606,48612]"
    },
    {
      "src": "): ) [9056,9057]",
      "dest": "): ) [24509,24510]"
    },
    {
      "src": ":=: := [33656,33658]",
      "dest": ":=: := [45276,45278]"
    },
    {
      "src": "identifier: index [9810,9815]",
      "dest": "identifier: index [25263,25268]"
    },
    {
      "src": "primitive_type [34584,34591]",
      "dest": "primitive_type [8101,8108]"
    },
    {
      "src": "primitive_type [9279,9286]",
      "dest": "primitive_type [24732,24739]"
    },
    {
      "src": "bytes32: bytes32 [10497,10504]",
      "dest": "bytes32: bytes32 [25950,25957]"
    },
    {
      "src": "visibility [7343,7350]",
      "dest": "visibility [22796,22803]"
    },
    {
      "src": ",: , [36106,36107]",
      "dest": ",: , [47723,47724]"
    },
    {
      "src": "call_argument [32092,32103]",
      "dest": "call_argument [39328,39339]"
    },
    {
      "src": "comment: // solhint-disable-next-line no-inline-assembly [12685,12732]",
      "dest": "comment: // solhint-disable-next-line no-inline-assembly [9495,9542]"
    },
    {
      "src": "identifier: target [15382,15388]",
      "dest": "identifier: target [12192,12198]"
    },
    {
      "src": "call_expression [22120,22149]",
      "dest": "call_expression [31298,31327]"
    },
    {
      "src": "user_defined_type [39928,39942]",
      "dest": "user_defined_type [51673,51687]"
    },
    {
      "src": "pragma: pragma [37135,37141]",
      "dest": "pragma: pragma [36232,36238]"
    },
    {
      "src": "primitive_type [23951,23958]",
      "dest": "primitive_type [33129,33136]"
    },
    {
      "src": "identifier: add [8427,8430]",
      "dest": "identifier: add [23880,23883]"
    },
    {
      "src": "solidity: solidity [101,109]",
      "dest": "solidity: solidity [101,109]"
    },
    {
      "src": "number_literal: 0xb8 [27187,27191]",
      "dest": "number_literal: 0xb8 [36366,36370]"
    },
    {
      "src": "identifier: set [5378,5381]",
      "dest": "identifier: set [20831,20834]"
    },
    {
      "src": ".: . [9801,9802]",
      "dest": ".: . [25254,25255]"
    },
    {
      "src": "identifier: _inner [9090,9096]",
      "dest": "identifier: _inner [24543,24549]"
    },
    {
      "src": ".: . [40384,40385]",
      "dest": ".: . [52127,52128]"
    },
    {
      "src": "identifier: _owner [38021,38027]",
      "dest": "identifier: _owner [49675,49681]"
    },
    {
      "src": "div: div [33544,33547]",
      "dest": "div: div [45164,45167]"
    },
    {
      "src": "primitive_type [31424,31429]",
      "dest": "primitive_type [43249,43254]"
    },
    {
      "src": "pragma_directive [36862,36884]",
      "dest": "pragma_directive [35536,35558]"
    },
    {
      "src": "identifier: WORD_SIZE [27302,27311]",
      "dest": "identifier: WORD_SIZE [36486,36495]"
    },
    {
      "src": "identifier: _inner [8226,8232]",
      "dest": "identifier: _inner [23679,23685]"
    },
    {
      "src": "(: ( [38404,38405]",
      "dest": "(: ( [50058,50059]"
    },
    {
      "src": "identifier: itemLen [33648,33655]",
      "dest": "identifier: itemLen [45268,45275]"
    },
    {
      "src": "variable_declaration [5846,5864]",
      "dest": "variable_declaration [21299,21317]"
    },
    {
      "src": "function: function [8418,8426]",
      "dest": "function: function [23871,23879]"
    },
    {
      "src": ".: . [28304,28305]",
      "dest": ".: . [43729,43730]"
    },
    {
      "src": "(: ( [10171,10172]",
      "dest": "(: ( [25624,25625]"
    },
    {
      "src": "identifier: set [8138,8141]",
      "dest": "identifier: set [23591,23594]"
    },
    {
      "src": "binary_expression [34061,34086]",
      "dest": "binary_expression [45672,45697]"
    },
    {
      "src": "solidity_version_comparison_operator [18837,18839]",
      "dest": "solidity_version_comparison_operator [18911,18913]"
    },
    {
      "src": "variable_declaration_statement [31367,31399]",
      "dest": "variable_declaration_statement [38705,38734]"
    },
    {
      "src": "calldata: calldata [36772,36780]",
      "dest": "calldata: calldata [48389,48397]"
    },
    {
      "src": "): ) [30322,30323]",
      "dest": "): ) [42509,42510]"
    },
    {
      "src": "variable_declaration [30228,30242]",
      "dest": "variable_declaration [38660,38671]"
    },
    {
      "src": "function_body [12303,12856]",
      "dest": "function_body [9113,9666]"
    },
    {
      "src": "mload: mload [28880,28885]",
      "dest": "mload: mload [39915,39920]"
    },
    {
      "src": "address: address [12257,12264]",
      "dest": "address: address [9067,9074]"
    },
    {
      "src": "yul_identifier [12753,12761]",
      "dest": "yul_identifier [9563,9571]"
    },
    {
      "src": "function: function [15352,15360]",
      "dest": "function: function [12162,12170]"
    },
    {
      "src": "(: ( [27945,27946]",
      "dest": "(: ( [39124,39125]"
    },
    {
      "src": "identifier: itemLen [33733,33740]",
      "dest": "identifier: itemLen [45353,45360]"
    },
    {
      "src": "function: function [31761,31769]",
      "dest": "function: function [43567,43575]"
    },
    {
      "src": "internal: internal [16514,16522]",
      "dest": "internal: internal [13324,13332]"
    },
    {
      "src": "yul_evm_builtin [30442,30445]",
      "dest": "yul_evm_builtin [42629,42632]"
    },
    {
      "src": "identifier: memPtr [30236,30242]",
      "dest": "identifier: memPtr [38665,38671]"
    },
    {
      "src": "parenthesized_expression [34340,34361]",
      "dest": "parenthesized_expression [45942,45963]"
    },
    {
      "src": "identifier: accountHash [12594,12605]",
      "dest": "identifier: accountHash [9404,9415]"
    },
    {
      "src": "): ) [33466,33467]",
      "dest": "): ) [45086,45087]"
    },
    {
      "src": "state_mutability [30628,30632]",
      "dest": "state_mutability [42815,42819]"
    },
    {
      "src": "identifier: AccessControl [20185,20198]",
      "dest": "identifier: AccessControl [29363,29376]"
    },
    {
      "src": "primitive_type [27477,27482]",
      "dest": "primitive_type [37641,37646]"
    },
    {
      "src": "yul_identifier [30300,30306]",
      "dest": "yul_identifier [42487,42493]"
    },
    {
      "src": "yul_function_call [35132,35141]",
      "dest": "yul_function_call [46726,46735]"
    },
    {
      "src": "return: return [31053,31059]",
      "dest": "return: return [43042,43048]"
    },
    {
      "src": "bytes32: bytes32 [5696,5703]",
      "dest": "bytes32: bytes32 [21149,21156]"
    },
    {
      "src": "member_expression [21810,21839]",
      "dest": "member_expression [30988,31017]"
    },
    {
      "src": "{: { [17169,17170]",
      "dest": "{: { [13979,13980]"
    },
    {
      "src": "comment: /**      * @dev Returns `true` if `account` has been granted `role`.      */ [21633,21711]",
      "dest": "comment: /**      * @dev Returns `true` if `account` has been granted `role`.      */ [30811,30889]"
    },
    {
      "src": "if: if [28917,28919]",
      "dest": "if: if [39952,39954]"
    },
    {
      "src": ",: , [26710,26711]",
      "dest": ",: , [35888,35889]"
    },
    {
      "src": "identifier: account [21592,21599]",
      "dest": "identifier: account [30770,30777]"
    },
    {
      "src": "yul_path [12777,12784]",
      "dest": "yul_path [9587,9594]"
    },
    {
      "src": "type_name [15024,15029]",
      "dest": "type_name [11834,11839]"
    },
    {
      "src": "): ) [8034,8035]",
      "dest": "): ) [23487,23488]"
    },
    {
      "src": "{: { [30651,30652]",
      "dest": "{: { [42835,42836]"
    },
    {
      "src": "(: ( [9278,9279]",
      "dest": "(: ( [24731,24732]"
    },
    {
      "src": "uint8: uint8 [27287,27292]",
      "dest": "uint8: uint8 [36471,36476]"
    },
    {
      "src": "binary_expression [34332,34361]",
      "dest": "binary_expression [45934,45963]"
    },
    {
      "src": "pragma: pragma [11529,11535]",
      "dest": "pragma: pragma [8339,8345]"
    },
    {
      "src": "primitive_type [37429,37436]",
      "dest": "primitive_type [49083,49090]"
    },
    {
      "src": "identifier: LIST_SHORT_START [34205,34221]",
      "dest": "identifier: LIST_SHORT_START [45806,45822]"
    },
    {
      "src": "parameter [30598,30617]",
      "dest": "parameter [42785,42804]"
    },
    {
      "src": "mload: mload [30310,30315]",
      "dest": "mload: mload [42497,42502]"
    },
    {
      "src": "address: address [3302,3309]",
      "dest": "address: address [18755,18762]"
    },
    {
      "src": "binary_expression [32132,32154]",
      "dest": "binary_expression [43791,43813]"
    },
    {
      "src": "comment: // topic2 is `to` address [39823,39848]",
      "dest": "comment: // topic2 is `to` address [51568,51593]"
    },
    {
      "src": "\": \" [28027,28028]",
      "dest": "\": \" [3940,3941]"
    },
    {
      "src": "memory: memory [27956,27962]",
      "dest": "memory: memory [39135,39141]"
    },
    {
      "src": "identifier: role [24855,24859]",
      "dest": "identifier: role [34033,34037]"
    },
    {
      "src": "yul_function_call [35192,35203]",
      "dest": "yul_function_call [46790,46801]"
    },
    {
      "src": "identifier: data [16084,16088]",
      "dest": "identifier: data [12894,12898]"
    },
    {
      "src": "[: [ [28120,28121]",
      "dest": "[: [ [39263,39264]"
    },
    {
      "src": "return_type_definition [15446,15468]",
      "dest": "return_type_definition [12256,12278]"
    },
    {
      "src": "yul_evm_builtin [33143,33146]",
      "dest": "yul_evm_builtin [44740,44743]"
    },
    {
      "src": "true: true [28977,28981]",
      "dest": "true: true [40025,40029]"
    },
    {
      "src": "{: { [12751,12752]",
      "dest": "{: { [9561,9562]"
    },
    {
      "src": "yul_decimal_number: 32 [33156,33158]",
      "dest": "yul_decimal_number: 32 [44753,44755]"
    },
    {
      "src": "comment: // AddressSet [8172,8185]",
      "dest": "comment: // AddressSet [23625,23638]"
    },
    {
      "src": "public: public [23982,23988]",
      "dest": "public: public [33160,33166]"
    },
    {
      "src": "state_variable_declaration [27152,27192]",
      "dest": "state_variable_declaration [36330,36371]"
    },
    {
      "src": "identifier: offset [31318,31324]",
      "dest": "identifier: offset [38613,38619]"
    },
    {
      "src": "identifier: set [9251,9254]",
      "dest": "identifier: set [24704,24707]"
    },
    {
      "src": "call_argument [36997,37013]",
      "dest": "call_argument [48614,48630]"
    },
    {
      "src": "contract_body [4182,11436]",
      "dest": "contract_body [19635,26889]"
    },
    {
      "src": "**: ** [35043,35045]",
      "dest": "**: ** [46628,46630]"
    },
    {
      "src": "variable_declaration_statement [28778,28790]",
      "dest": "variable_declaration_statement [39816,39828]"
    },
    {
      "src": "internal: internal [29781,29789]",
      "dest": "internal: internal [42289,42297]"
    },
    {
      "src": "bytes: bytes [36766,36771]",
      "dest": "bytes: bytes [48383,48388]"
    },
    {
      "src": "return_type_definition [18416,18441]",
      "dest": "return_type_definition [27594,27619]"
    },
    {
      "src": "identifier: _contains [9076,9085]",
      "dest": "identifier: _contains [24529,24538]"
    },
    {
      "src": "storage: storage [9243,9250]",
      "dest": "storage: storage [24696,24703]"
    },
    {
      "src": "solidity_pragma_token [26365,26379]",
      "dest": "solidity_pragma_token [18350,18364]"
    },
    {
      "src": "yul_path [35136,35140]",
      "dest": "yul_path [46730,46734]"
    },
    {
      "src": "}: } [28904,28905]",
      "dest": "}: } [39939,39940]"
    },
    {
      "src": "parameter [1863,1878]",
      "dest": "parameter [1863,1878]"
    },
    {
      "src": "type_name [39174,39181]",
      "dest": "type_name [50919,50926]"
    },
    {
      "src": "comment: /**      * @dev Returns the amount of tokens in existence.      */ [219,287]",
      "dest": "comment: /**      * @dev Returns the amount of tokens in existence.      */ [219,287]"
    },
    {
      "src": "variable_declaration_statement [39651,39709]",
      "dest": "variable_declaration_statement [51396,51454]"
    },
    {
      "src": "{: { [2951,2952]",
      "dest": "{: { [18404,18405]"
    },
    {
      "src": "yul_path [30432,30438]",
      "dest": "yul_path [42619,42625]"
    },
    {
      "src": "memory: memory [16538,16544]",
      "dest": "memory: memory [13348,13354]"
    },
    {
      "src": "member_expression [25861,25883]",
      "dest": "member_expression [35039,35061]"
    },
    {
      "src": "call_argument [40466,40476]",
      "dest": "call_argument [52363,52373]"
    },
    {
      "src": "address: address [9778,9785]",
      "dest": "address: address [25231,25238]"
    },
    {
      "src": "comment: // Delete the slot where the moved value was stored [6935,6986]",
      "dest": "comment: // Delete the slot where the moved value was stored [22388,22439]"
    },
    {
      "src": "contract_declaration [37171,40496]",
      "dest": "contract_declaration [48792,52393]"
    },
    {
      "src": "identifier: totalSupply [302,313]",
      "dest": "identifier: totalSupply [302,313]"
    },
    {
      "src": "return: return [22113,22119]",
      "dest": "return: return [31291,31297]"
    },
    {
      "src": "visibility [29781,29789]",
      "dest": "visibility [42289,42297]"
    },
    {
      "src": "expression_statement [32370,32378]",
      "dest": "expression_statement [43938,43946]"
    },
    {
      "src": "return_statement [10470,10513]",
      "dest": "return_statement [25923,25966]"
    },
    {
      "src": "call_argument [28204,28226]",
      "dest": "call_argument [42337,42367]"
    },
    {
      "src": "function_body [8816,8886]",
      "dest": "function_body [24269,24339]"
    },
    {
      "src": "identifier: returndata_size [17579,17594]",
      "dest": "identifier: returndata_size [14389,14404]"
    },
    {
      "src": "array_access [6625,6647]",
      "dest": "array_access [22078,22100]"
    },
    {
      "src": "identifier: revokeRole [23940,23950]",
      "dest": "identifier: revokeRole [33118,33128]"
    },
    {
      "src": "user_defined_type [28717,28724]",
      "dest": "user_defined_type [39711,39718]"
    },
    {
      "src": "type_name [25931,25938]",
      "dest": "type_name [35109,35116]"
    },
    {
      "src": "identifier: _at [7969,7972]",
      "dest": "identifier: _at [23422,23425]"
    },
    {
      "src": "call_expression [40012,40042]",
      "dest": "call_expression [51755,51785]"
    },
    {
      "src": "uint256: uint256 [29963,29970]",
      "dest": "uint256: uint256 [4267,4274]"
    },
    {
      "src": "(: ( [33662,33663]",
      "dest": "(: ( [45282,45283]"
    },
    {
      "src": "identifier: at [22877,22879]",
      "dest": "identifier: at [32055,32057]"
    },
    {
      "src": "identifier: STRING_SHORT_START [32692,32710]",
      "dest": "identifier: STRING_SHORT_START [44248,44266]"
    },
    {
      "src": "primitive_type [10420,10427]",
      "dest": "primitive_type [25873,25880]"
    },
    {
      "src": "returns: returns [16013,16020]",
      "dest": "returns: returns [12823,12830]"
    },
    {
      "src": "yul_path [33554,33560]",
      "dest": "yul_path [45174,45180]"
    },
    {
      "src": "}: } [28988,28989]",
      "dest": "}: } [40036,40037]"
    },
    {
      "src": "}: } [33275,33276]",
      "dest": "}: } [44872,44873]"
    },
    {
      "src": "return_type_definition [8018,8035]",
      "dest": "return_type_definition [23471,23488]"
    },
    {
      "src": "expression_statement [37947,37986]",
      "dest": "expression_statement [49601,49640]"
    },
    {
      "src": "{: { [39279,39280]",
      "dest": "{: { [51024,51025]"
    },
    {
      "src": "visibility [26445,26452]",
      "dest": "visibility [35623,35630]"
    },
    {
      "src": "call_argument [5172,5177]",
      "dest": "call_argument [20625,20630]"
    },
    {
      "src": "binary_expression [30726,30748]",
      "dest": "binary_expression [43165,43177]"
    },
    {
      "src": ",: , [5101,5102]",
      "dest": ",: , [20554,20555]"
    },
    {
      "src": "primitive_type [6605,6612]",
      "dest": "primitive_type [22058,22065]"
    },
    {
      "src": "): ) [13851,13852]",
      "dest": "): ) [10661,10662]"
    },
    {
      "src": "function: function [28701,28709]",
      "dest": "function: function [39695,39703]"
    },
    {
      "src": "function_body [33874,34373]",
      "dest": "function_body [45488,45975]"
    },
    {
      "src": "identifier: byte0 [34332,34337]",
      "dest": "identifier: byte0 [45934,45939]"
    },
    {
      "src": "): ) [16002,16003]",
      "dest": "): ) [12812,12813]"
    },
    {
      "src": "storage: storage [11316,11323]",
      "dest": "storage: storage [26769,26776]"
    },
    {
      "src": "identifier: exitTokens [36692,36702]",
      "dest": "identifier: exitTokens [48309,48319]"
    },
    {
      "src": "}: } [17162,17163]",
      "dest": "}: } [13972,13973]"
    },
    {
      "src": "-: - [34357,34358]",
      "dest": "-: - [45959,45960]"
    },
    {
      "src": "(: ( [38614,38615]",
      "dest": "(: ( [50270,50271]"
    },
    {
      "src": "(: ( [33127,33128]",
      "dest": "(: ( [44724,44725]"
    },
    {
      "src": "=: = [28393,28394]",
      "dest": "=: = [39386,39387]"
    },
    {
      "src": "string: string [26555,26561]",
      "dest": "string: string [35733,35739]"
    },
    {
      "src": "member_expression [28300,28311]",
      "dest": "member_expression [43725,43736]"
    },
    {
      "src": "yul_evm_builtin [31017,31022]",
      "dest": "yul_evm_builtin [43006,43011]"
    },
    {
      "src": "): ) [8790,8791]",
      "dest": "): ) [24243,24244]"
    },
    {
      "src": "{: { [26531,26532]",
      "dest": "{: { [35709,35710]"
    },
    {
      "src": "call_argument [39771,39821]",
      "dest": "call_argument [51516,51566]"
    },
    {
      "src": "variable_declaration_statement [29212,29254]",
      "dest": "variable_declaration_statement [41111,41153]"
    },
    {
      "src": "comment: /*      * @param src Pointer to source      * @param dest Pointer to destination      * @param len Amount of memory to copy from the source      */ [34381,34532]",
      "dest": "comment: /*     * @dev Create an iterator. Reverts if item is not a list.     * @param self The RLP item.     * @return An 'Iterator' over the item.     */ [37855,38005]"
    },
    {
      "src": "parameter [7311,7326]",
      "dest": "parameter [22764,22779]"
    },
    {
      "src": "identifier: sender [21233,21239]",
      "dest": "identifier: sender [30411,30417]"
    },
    {
      "src": "type_name [22058,22065]",
      "dest": "type_name [31236,31243]"
    },
    {
      "src": "expression_statement [6742,6781]",
      "dest": "expression_statement [22195,22234]"
    },
    {
      "src": "parameter [25741,25758]",
      "dest": "parameter [34919,34936]"
    },
    {
      "src": "type_name [21217,21224]",
      "dest": "type_name [30395,30402]"
    },
    {
      "src": "identifier: role [22066,22070]",
      "dest": "identifier: role [31244,31248]"
    },
    {
      "src": "type_name [39290,39307]",
      "dest": "type_name [51035,51052]"
    },
    {
      "src": "identifier: rootToken [37745,37754]",
      "dest": "identifier: rootToken [49399,49408]"
    },
    {
      "src": "type_cast_expression [8854,8877]",
      "dest": "type_cast_expression [24307,24330]"
    },
    {
      "src": "type_name [32115,32122]",
      "dest": "type_name [6115,6122]"
    },
    {
      "src": "bool: bool [5728,5732]",
      "dest": "bool: bool [21181,21185]"
    },
    {
      "src": "member_expression [22120,22147]",
      "dest": "member_expression [31298,31325]"
    },
    {
      "src": "identifier: items [28123,28128]",
      "dest": "identifier: items [39266,39271]"
    },
    {
      "src": "(: ( [34735,34736]",
      "dest": "(: ( [46290,46291]"
    },
    {
      "src": "type_name [33865,33872]",
      "dest": "type_name [5202,5209]"
    },
    {
      "src": "{: { [14070,14071]",
      "dest": "{: { [10880,10881]"
    },
    {
      "src": "member_expression [22856,22876]",
      "dest": "member_expression [32034,32054]"
    },
    {
      "src": "identifier: _roles [21810,21816]",
      "dest": "identifier: _roles [30988,30994]"
    },
    {
      "src": "assembly: assembly [12742,12750]",
      "dest": "assembly: assembly [9552,9560]"
    },
    {
      "src": "identifier: item [28817,28821]",
      "dest": "identifier: item [39852,39856]"
    },
    {
      "src": "address: address [22829,22836]",
      "dest": "address: address [32007,32014]"
    },
    {
      "src": "assignment_expression [25861,25895]",
      "dest": "assignment_expression [35039,35073]"
    },
    {
      "src": "identifier: _setupRole [37947,37957]",
      "dest": "identifier: _setupRole [49601,49611]"
    },
    {
      "src": "(: ( [23550,23551]",
      "dest": "(: ( [32728,32729]"
    },
    {
      "src": "bytes32: bytes32 [12559,12566]",
      "dest": "bytes32: bytes32 [9369,9376]"
    },
    {
      "src": "address: address [21601,21608]",
      "dest": "address: address [30779,30786]"
    },
    {
      "src": "add: add [29319,29322]",
      "dest": "add: add [41271,41274]"
    },
    {
      "src": "): ) [40041,40042]",
      "dest": "): ) [51784,51785]"
    },
    {
      "src": "type_cast_expression [38810,38823]",
      "dest": "type_cast_expression [50578,50591]"
    },
    {
      "src": "return_statement [7131,7143]",
      "dest": "return_statement [22584,22596]"
    },
    {
      "src": "primitive_type [30228,30235]",
      "dest": "primitive_type [5157,5164]"
    },
    {
      "src": "primitive_type [16777,16782]",
      "dest": "primitive_type [13587,13592]"
    },
    {
      "src": "identifier: memPtr [33499,33505]",
      "dest": "identifier: memPtr [45119,45125]"
    },
    {
      "src": "parameter [36766,36791]",
      "dest": "parameter [48383,48408]"
    },
    {
      "src": "(: ( [37475,37476]",
      "dest": "(: ( [49129,49130]"
    },
    {
      "src": "yul_path [33221,33228]",
      "dest": "yul_path [44818,44825]"
    },
    {
      "src": "(: ( [29900,29901]",
      "dest": "(: ( [6179,6180]"
    },
    {
      "src": "(: ( [22147,22148]",
      "dest": "(: ( [31325,31326]"
    },
    {
      "src": "call_argument [27773,27779]",
      "dest": "call_argument [37832,37838]"
    },
    {
      "src": "type_name [39220,39225]",
      "dest": "type_name [50965,50970]"
    },
    {
      "src": "parameter [31779,31798]",
      "dest": "parameter [43585,43604]"
    },
    {
      "src": "if: if [34043,34045]",
      "dest": "if: if [45668,45670]"
    },
    {
      "src": "string [37407,37421]",
      "dest": "string [49061,49075]"
    },
    {
      "src": "++: ++ [32375,32377]",
      "dest": "++: ++ [43943,43945]"
    },
    {
      "src": "uint256: uint256 [30915,30922]",
      "dest": "uint256: uint256 [15465,15472]"
    },
    {
      "src": "parameter [38477,38494]",
      "dest": "parameter [50131,50148]"
    },
    {
      "src": "user_defined_type [8753,8763]",
      "dest": "user_defined_type [24206,24216]"
    },
    {
      "src": "identifier: len [34738,34741]",
      "dest": "identifier: len [46293,46296]"
    },
    {
      "src": ".: . [26565,26566]",
      "dest": ".: . [35743,35744]"
    },
    {
      "src": "identifier: item [30041,30045]",
      "dest": "identifier: item [37545,37549]"
    },
    {
      "src": "primitive_type [24690,24697]",
      "dest": "primitive_type [33868,33875]"
    },
    {
      "src": "(: ( [39484,39485]",
      "dest": "(: ( [51229,51230]"
    },
    {
      "src": "external: external [1896,1904]",
      "dest": "external: external [1896,1904]"
    },
    {
      "src": "): ) [32656,32657]",
      "dest": "): ) [44212,44213]"
    },
    {
      "src": "identifier: lockTokens [36068,36078]",
      "dest": "identifier: lockTokens [47685,47695]"
    },
    {
      "src": "variable_declaration [39365,39407]",
      "dest": "variable_declaration [51110,51152]"
    },
    {
      "src": "): ) [21847,21848]",
      "dest": "): ) [31025,31026]"
    },
    {
      "src": "pragma: pragma [35369,35375]",
      "dest": "pragma: pragma [46986,46992]"
    },
    {
      "src": "identifier: adminRole [25840,25849]",
      "dest": "identifier: adminRole [35018,35027]"
    },
    {
      "src": ".: . [39797,39798]",
      "dest": ".: . [51542,51543]"
    },
    {
      "src": "(: ( [5085,5086]",
      "dest": "(: ( [20538,20539]"
    },
    {
      "src": "type_name [7365,7369]",
      "dest": "type_name [22818,22822]"
    },
    {
      "src": "identifier: depositor [36097,36106]",
      "dest": "identifier: depositor [47714,47723]"
    },
    {
      "src": "bool: bool [28761,28765]",
      "dest": "bool: bool [39755,39759]"
    },
    {
      "src": "identifier: memPtr [32996,33002]",
      "dest": "identifier: memPtr [44577,44583]"
    },
    {
      "src": "returns: returns [8018,8025]",
      "dest": "returns: returns [23471,23478]"
    },
    {
      "src": "user_defined_type [7311,7314]",
      "dest": "user_defined_type [22764,22767]"
    },
    {
      "src": "[: [ [27953,27954]",
      "dest": "[: [ [39132,39133]"
    },
    {
      "src": "return_type_definition [31813,31830]",
      "dest": "return_type_definition [6796,6813]"
    },
    {
      "src": "{: { [23524,23525]",
      "dest": "{: { [32702,32703]"
    },
    {
      "src": "type_name [37687,37694]",
      "dest": "type_name [49341,49348]"
    },
    {
      "src": "storage: storage [5090,5097]",
      "dest": "storage: storage [20543,20550]"
    },
    {
      "src": "comment: // UintSet [9836,9846]",
      "dest": "comment: // UintSet [25289,25299]"
    },
    {
      "src": "primitive_type [20870,20877]",
      "dest": "primitive_type [30048,30055]"
    },
    {
      "src": "member_expression [39680,39705]",
      "dest": "member_expression [51425,51450]"
    },
    {
      "src": ",: , [15407,15408]",
      "dest": ",: , [12217,12218]"
    },
    {
      "src": "(: ( [24754,24755]",
      "dest": "(: ( [33932,33933]"
    },
    {
      "src": "call_argument [15067,15073]",
      "dest": "call_argument [11877,11883]"
    },
    {
      "src": "): ) [17594,17595]",
      "dest": "): ) [14404,14405]"
    },
    {
      "src": "visibility [29471,29479]",
      "dest": "visibility [42088,42096]"
    },
    {
      "src": "string_literal [16912,16943]",
      "dest": "string_literal [13722,13753]"
    },
    {
      "src": "bytes32: bytes32 [23105,23112]",
      "dest": "bytes32: bytes32 [32283,32290]"
    },
    {
      "src": "(: ( [10452,10453]",
      "dest": "(: ( [25905,25906]"
    },
    {
      "src": "identifier: item [29244,29248]",
      "dest": "identifier: item [41143,41147]"
    },
    {
      "src": "identifier: RoleAdminChanged [25793,25809]",
      "dest": "identifier: RoleAdminChanged [34971,34987]"
    },
    {
      "src": "yul_assignment [12753,12785]",
      "dest": "yul_assignment [9563,9595]"
    },
    {
      "src": "expression_statement [24127,24154]",
      "dest": "expression_statement [33305,33332]"
    },
    {
      "src": "type_name [2527,2534]",
      "dest": "type_name [2527,2534]"
    },
    {
      "src": "parameter [32494,32508]",
      "dest": "parameter [16859,16872]"
    },
    {
      "src": "identifier: length [22141,22147]",
      "dest": "identifier: length [31319,31325]"
    },
    {
      "src": "): ) [40091,40092]",
      "dest": "): ) [51834,51835]"
    },
    {
      "src": "address: address [36117,36124]",
      "dest": "address: address [47734,47741]"
    },
    {
      "src": "): ) [22836,22837]",
      "dest": "): ) [32014,32015]"
    },
    {
      "src": "function: function [27859,27867]",
      "dest": "function: function [39065,39073]"
    },
    {
      "src": "primitive_type [12559,12566]",
      "dest": "primitive_type [9369,9376]"
    },
    {
      "src": "(: ( [7562,7563]",
      "dest": "(: ( [23015,23016]"
    },
    {
      "src": "public: public [21765,21771]",
      "dest": "public: public [30943,30949]"
    },
    {
      "src": "member_expression [22856,22879]",
      "dest": "member_expression [32034,32057]"
    },
    {
      "src": "identifier: depositor [38676,38685]",
      "dest": "identifier: depositor [50330,50339]"
    },
    {
      "src": "yul_decimal_number: 256 [33567,33570]",
      "dest": "yul_decimal_number: 256 [45187,45190]"
    },
    {
      "src": "]: ] [21821,21822]",
      "dest": "]: ] [30999,31000]"
    },
    {
      "src": "type_name [8488,8492]",
      "dest": "type_name [23941,23945]"
    },
    {
      "src": "return: return [10700,10706]",
      "dest": "return: return [26153,26159]"
    },
    {
      "src": "[: [ [22862,22863]",
      "dest": "[: [ [32040,32041]"
    },
    {
      "src": "inheritance_specifier [37233,37251]",
      "dest": "inheritance_specifier [48854,48872]"
    },
    {
      "src": "): ) [27999,28000]",
      "dest": "): ) [39173,39174]"
    },
    {
      "src": "returns: returns [28752,28759]",
      "dest": "returns: returns [39746,39753]"
    },
    {
      "src": "string [15081,15113]",
      "dest": "string [11891,11923]"
    },
    {
      "src": "type_cast_expression [10729,10743]",
      "dest": "type_cast_expression [26182,26196]"
    },
    {
      "src": "call_expression [24766,24778]",
      "dest": "call_expression [33944,33956]"
    },
    {
      "src": "type_name [21554,21561]",
      "dest": "type_name [30732,30739]"
    },
    {
      "src": "): ) [23507,23508]",
      "dest": "): ) [32685,32686]"
    },
    {
      "src": "bool: bool [2329,2333]",
      "dest": "bool: bool [2329,2333]"
    },
    {
      "src": "type_name [39989,39996]",
      "dest": "type_name [51732,51739]"
    },
    {
      "src": "call_argument [24048,24060]",
      "dest": "call_argument [33226,33238]"
    },
    {
      "src": "bytes: bytes [38505,38510]",
      "dest": "bytes: bytes [50159,50164]"
    },
    {
      "src": ",: , [9808,9809]",
      "dest": ",: , [25261,25262]"
    },
    {
      "src": "(: ( [10142,10143]",
      "dest": "(: ( [25595,25596]"
    },
    {
      "src": "primitive_type [29707,29714]",
      "dest": "primitive_type [42215,42222]"
    },
    {
      "src": "call_expression [31446,31460]",
      "dest": "call_expression [43271,43285]"
    },
    {
      "src": "yul_identifier [31007,31013]",
      "dest": "yul_identifier [42996,43002]"
    },
    {
      "src": "bytes32: bytes32 [10729,10736]",
      "dest": "bytes32: bytes32 [26182,26189]"
    },
    {
      "src": "call_argument [31342,31353]",
      "dest": "call_argument [38637,38648]"
    },
    {
      "src": "parameter [10854,10873]",
      "dest": "parameter [26307,26326]"
    },
    {
      "src": "}: } [7615,7616]",
      "dest": "}: } [23068,23069]"
    },
    {
      "src": "[: [ [6753,6754]",
      "dest": "[: [ [22206,22207]"
    },
    {
      "src": "solidity: solidity [26365,26373]",
      "dest": "solidity: solidity [18350,18358]"
    },
    {
      "src": "add: add [33672,33675]",
      "dest": "add: add [45292,45295]"
    },
    {
      "src": "if: if [32839,32841]",
      "dest": "if: if [44420,44422]"
    },
    {
      "src": "returns: returns [12288,12295]",
      "dest": "returns: returns [9098,9105]"
    },
    {
      "src": "identifier: amount [40356,40362]",
      "dest": "identifier: amount [52099,52105]"
    },
    {
      "src": "view: view [8013,8017]",
      "dest": "view: view [23466,23470]"
    },
    {
      "src": "inheritance_specifier [26417,26430]",
      "dest": "inheritance_specifier [35595,35608]"
    },
    {
      "src": "call_expression [31327,31354]",
      "dest": "call_expression [38622,38649]"
    },
    {
      "src": ",: , [33141,33142]",
      "dest": ",: , [44738,44739]"
    },
    {
      "src": "||: || [34087,34089]",
      "dest": "||: || [45698,45700]"
    },
    {
      "src": "identifier: errorMessage [16500,16512]",
      "dest": "identifier: errorMessage [13310,13322]"
    },
    {
      "src": ",: , [39535,39536]",
      "dest": ",: , [51280,51281]"
    },
    {
      "src": "identifier: item [32146,32150]",
      "dest": "identifier: item [43805,43809]"
    },
    {
      "src": "identifier: account [26058,26065]",
      "dest": "identifier: account [35236,35243]"
    },
    {
      "src": ",: , [34596,34597]",
      "dest": ",: , [46169,46170]"
    },
    {
      "src": "): ) [22100,22101]",
      "dest": "): ) [31278,31279]"
    },
    {
      "src": "uint256: uint256 [38629,38636]",
      "dest": "uint256: uint256 [50285,50292]"
    },
    {
      "src": "}: } [15121,15122]",
      "dest": "}: } [11931,11932]"
    },
    {
      "src": "primitive_type [9786,9793]",
      "dest": "primitive_type [25239,25246]"
    },
    {
      "src": "identifier: role [26052,26056]",
      "dest": "identifier: role [35230,35234]"
    },
    {
      "src": "yul_function_call [33672,33687]",
      "dest": "yul_function_call [45292,45307]"
    },
    {
      "src": "{: { [22102,22103]",
      "dest": "{: { [31280,31281]"
    },
    {
      "src": "=: = [17057,17058]",
      "dest": "=: = [13867,13868]"
    },
    {
      "src": "): ) [32103,32104]",
      "dest": "): ) [39339,39340]"
    },
    {
      "src": "(: ( [32171,32172]",
      "dest": "(: ( [43830,43831]"
    },
    {
      "src": "primitive_type [2527,2534]",
      "dest": "primitive_type [2527,2534]"
    },
    {
      "src": "expression_statement [26676,26762]",
      "dest": "expression_statement [35854,35940]"
    },
    {
      "src": "): ) [10457,10458]",
      "dest": "): ) [25910,25911]"
    },
    {
      "src": "identifier: renounceRole [24677,24689]",
      "dest": "identifier: renounceRole [33855,33867]"
    },
    {
      "src": "): ) [1894,1895]",
      "dest": "): ) [1894,1895]"
    },
    {
      "src": "{: { [29503,29504]",
      "dest": "{: { [42120,42121]"
    },
    {
      "src": "primitive_type [7563,7570]",
      "dest": "primitive_type [23016,23023]"
    },
    {
      "src": "contract_declaration [36888,37061]",
      "dest": "contract_declaration [48505,48678]"
    },
    {
      "src": "visibility [15006,15014]",
      "dest": "visibility [11816,11824]"
    },
    {
      "src": "return_statement [32401,32414]",
      "dest": "return_statement [43969,43982]"
    },
    {
      "src": "yul_function_call [17512,17529]",
      "dest": "yul_function_call [14322,14339]"
    },
    {
      "src": ",: , [8527,8528]",
      "dest": ",: , [23980,23981]"
    },
    {
      "src": "function_body [30651,31074]",
      "dest": "function_body [42835,43063]"
    },
    {
      "src": "type_name [16486,16492]",
      "dest": "type_name [13296,13302]"
    },
    {
      "src": "primitive_type [32578,32585]",
      "dest": "primitive_type [6743,6750]"
    },
    {
      "src": "type_name [7524,7527]",
      "dest": "type_name [22977,22980]"
    },
    {
      "src": "{: { [28848,28849]",
      "dest": "{: { [39883,39884]"
    },
    {
      "src": "yul_function_call [30463,30475]",
      "dest": "yul_function_call [42650,42662]"
    },
    {
      "src": "return_type_definition [1905,1919]",
      "dest": "return_type_definition [1905,1919]"
    },
    {
      "src": "identifier: item [28300,28304]",
      "dest": "identifier: item [43725,43729]"
    },
    {
      "src": "type_name [20870,20877]",
      "dest": "type_name [30048,30055]"
    },
    {
      "src": "yul_hex_number: 0x20 [27717,27721]",
      "dest": "yul_hex_number: 0x20 [37776,37780]"
    },
    {
      "src": "identifier: LIST_LONG_START [34141,34156]",
      "dest": "identifier: LIST_LONG_START [45739,45754]"
    },
    {
      "src": "bytes: bytes [29238,29243]",
      "dest": "bytes: bytes [41137,41142]"
    },
    {
      "src": ":=: := [33541,33543]",
      "dest": ":=: := [45161,45163]"
    },
    {
      "src": "visibility [20439,20446]",
      "dest": "visibility [29617,29624]"
    },
    {
      "src": "primitive_type [8488,8492]",
      "dest": "primitive_type [23941,23945]"
    },
    {
      "src": "state_mutability [29790,29794]",
      "dest": "state_mutability [42298,42302]"
    },
    {
      "src": "number_literal: 0 [15524,15525]",
      "dest": "number_literal: 0 [12334,12335]"
    },
    {
      "src": "(: ( [16435,16436]",
      "dest": "(: ( [13245,13246]"
    },
    {
      "src": "binary_expression [6874,6891]",
      "dest": "binary_expression [22327,22344]"
    },
    {
      "src": "}: } [10206,10207]",
      "dest": "}: } [25659,25660]"
    },
    {
      "src": ",: , [24046,24047]",
      "dest": ",: , [33224,33225]"
    },
    {
      "src": "bytes: bytes [14987,14992]",
      "dest": "bytes: bytes [11797,11802]"
    },
    {
      "src": "visibility [28738,28746]",
      "dest": "visibility [39732,39740]"
    },
    {
      "src": "[: [ [22126,22127]",
      "dest": "[: [ [31304,31305]"
    },
    {
      "src": "}: } [23685,23686]",
      "dest": "}: } [32863,32864]"
    },
    {
      "src": ".: . [38758,38759]",
      "dest": ".: . [50549,50550]"
    },
    {
      "src": "exp: exp [33143,33146]",
      "dest": "exp: exp [44740,44743]"
    },
    {
      "src": "identifier: set [5195,5198]",
      "dest": "identifier: set [20648,20651]"
    },
    {
      "src": "type_name [36117,36124]",
      "dest": "type_name [47734,47741]"
    },
    {
      "src": "call_expression [30019,30093]",
      "dest": "call_expression [4339,4382]"
    },
    {
      "src": "identifier: codehash [12832,12840]",
      "dest": "identifier: codehash [9642,9650]"
    },
    {
      "src": "-: - [6300,6301]",
      "dest": "-: - [21753,21754]"
    },
    {
      "src": ",: , [13912,13913]",
      "dest": ",: , [10722,10723]"
    },
    {
      "src": "type_name [9689,9699]",
      "dest": "type_name [25142,25152]"
    },
    {
      "src": "return_type_definition [23131,23148]",
      "dest": "return_type_definition [32309,32326]"
    },
    {
      "src": "function: function [10606,10614]",
      "dest": "function: function [26059,26067]"
    },
    {
      "src": "!=: != [12841,12843]",
      "dest": "!=: != [9651,9653]"
    },
    {
      "src": "primitive_type [9778,9785]",
      "dest": "primitive_type [25231,25238]"
    },
    {
      "src": "string [24780,24829]",
      "dest": "string [33958,34007]"
    },
    {
      "src": "parameter [39174,39181]",
      "dest": "parameter [50919,50926]"
    },
    {
      "src": "variable_declaration [6318,6335]",
      "dest": "variable_declaration [21771,21788]"
    },
    {
      "src": "}: } [17689,17690]",
      "dest": "}: } [14499,14500]"
    },
    {
      "src": "function_body [16873,17708]",
      "dest": "function_body [13683,14518]"
    },
    {
      "src": "address: address [8777,8784]",
      "dest": "address: address [24230,24237]"
    },
    {
      "src": "block_statement [32190,32389]",
      "dest": "block_statement [43849,43957]"
    },
    {
      "src": "variable_declaration [17032,17055]",
      "dest": "variable_declaration [13842,13865]"
    },
    {
      "src": "private: private [7343,7350]",
      "dest": "private: private [22796,22803]"
    },
    {
      "src": "]: ] [39697,39698]",
      "dest": "]: ] [51442,51443]"
    },
    {
      "src": "identifier: len [29387,29390]",
      "dest": "identifier: len [41339,41342]"
    },
    {
      "src": "parameter [14971,14985]",
      "dest": "parameter [11781,11795]"
    },
    {
      "src": "user_defined_type [9689,9699]",
      "dest": "user_defined_type [25142,25152]"
    },
    {
      "src": "solidity_version_comparison_operator [3458,3460]",
      "dest": "solidity_version_comparison_operator [2938,2940]"
    },
    {
      "src": "): ) [26078,26079]",
      "dest": "): ) [35256,35257]"
    },
    {
      "src": ",: , [25943,25944]",
      "dest": ",: , [35121,35122]"
    },
    {
      "src": "array_access [39485,39503]",
      "dest": "array_access [51230,51248]"
    },
    {
      "src": "call_argument [39966,39975]",
      "dest": "call_argument [51711,51720]"
    },
    {
      "src": "+=: += [34908,34910]",
      "dest": "+=: += [46463,46465]"
    },
    {
      "src": "memory: memory [31149,31155]",
      "dest": "memory: memory [43138,43144]"
    },
    {
      "src": "bytes: bytes [17032,17037]",
      "dest": "bytes: bytes [13842,13847]"
    },
    {
      "src": "call_argument [29377,29380]",
      "dest": "call_argument [41329,41332]"
    },
    {
      "src": "call_argument [26698,26725]",
      "dest": "call_argument [35876,35903]"
    },
    {
      "src": "identifier: logRLPList [40070,40080]",
      "dest": "identifier: logRLPList [51813,51823]"
    },
    {
      "src": "identifier: set [10415,10418]",
      "dest": "identifier: set [25868,25871]"
    },
    {
      "src": "): ) [39637,39638]",
      "dest": "): ) [51382,51383]"
    },
    {
      "src": "array_access [39680,39698]",
      "dest": "array_access [51425,51443]"
    },
    {
      "src": "type_name [7973,7976]",
      "dest": "type_name [23426,23429]"
    },
    {
      "src": "): ) [28893,28894]",
      "dest": "): ) [39928,39929]"
    },
    {
      "src": "type_alias [20278,20285]",
      "dest": "type_alias [29456,29463]"
    },
    {
      "src": "(: ( [27710,27711]",
      "dest": "(: ( [37769,37770]"
    },
    {
      "src": "uint256: uint256 [30203,30210]",
      "dest": "uint256: uint256 [6104,6111]"
    },
    {
      "src": "call_expression [16557,16638]",
      "dest": "call_expression [13367,13448]"
    },
    {
      "src": "primitive_type [12297,12301]",
      "dest": "primitive_type [9107,9111]"
    },
    {
      "src": ".: . [29386,29387]",
      "dest": ".: . [41338,41339]"
    },
    {
      "src": ",: , [15073,15074]",
      "dest": ",: , [11883,11884]"
    },
    {
      "src": "primitive_type [6318,6325]",
      "dest": "primitive_type [21771,21778]"
    },
    {
      "src": "primitive_type [30203,30210]",
      "dest": "primitive_type [6104,6111]"
    },
    {
      "src": "type_name [32578,32585]",
      "dest": "type_name [6743,6750]"
    },
    {
      "src": ",: , [33256,33257]",
      "dest": ",: , [44853,44854]"
    },
    {
      "src": "variable_declaration_statement [28083,28130]",
      "dest": "variable_declaration_statement [39226,39273]"
    },
    {
      "src": "(: ( [17254,17255]",
      "dest": "(: ( [14064,14065]"
    },
    {
      "src": "}: } [3343,3344]",
      "dest": "}: } [18796,18797]"
    },
    {
      "src": "primitive_type [15409,15415]",
      "dest": "primitive_type [12219,12225]"
    },
    {
      "src": "identifier: set [5167,5170]",
      "dest": "identifier: set [20620,20623]"
    },
    {
      "src": "parameter [32532,32539]",
      "dest": "parameter [6149,6156]"
    },
    {
      "src": "}: } [2829,2830]",
      "dest": "}: } [2829,2830]"
    },
    {
      "src": ",: , [38713,38714]",
      "dest": ",: , [50367,50368]"
    },
    {
      "src": "return_type_definition [16523,16545]",
      "dest": "return_type_definition [13333,13355]"
    },
    {
      "src": "call_argument [27760,27771]",
      "dest": "call_argument [37819,37830]"
    },
    {
      "src": "return: return [16649,16655]",
      "dest": "return: return [13459,13465]"
    },
    {
      "src": "yul_path [33648,33655]",
      "dest": "yul_path [45268,45275]"
    },
    {
      "src": "function_definition [3288,3341]",
      "dest": "function_definition [18741,18794]"
    },
    {
      "src": "): ) [38822,38823]",
      "dest": "): ) [50590,50591]"
    },
    {
      "src": "(: ( [9750,9751]",
      "dest": "(: ( [25203,25204]"
    },
    {
      "src": "return: return [28573,28579]",
      "dest": "return: return [39567,39573]"
    },
    {
      "src": "return: return [9069,9075]",
      "dest": "return: return [24522,24528]"
    },
    {
      "src": "}: } [10519,10520]",
      "dest": "}: } [25972,25973]"
    },
    {
      "src": "identifier: srcpart [35105,35112]",
      "dest": "identifier: srcpart [46699,46706]"
    },
    {
      "src": "\": \" [37598,37599]",
      "dest": "\": \" [49252,49253]"
    },
    {
      "src": "else: else [32834,32838]",
      "dest": "else: else [44415,44419]"
    },
    {
      "src": "function_definition [23459,23686]",
      "dest": "function_definition [32637,32864]"
    },
    {
      "src": "identifier: set [5867,5870]",
      "dest": "identifier: set [21320,21323]"
    },
    {
      "src": "function_definition [1094,1177]",
      "dest": "function_definition [1094,1177]"
    },
    {
      "src": "): ) [29335,29336]",
      "dest": "): ) [41287,41288]"
    },
    {
      "src": "primitive_type [1128,1135]",
      "dest": "primitive_type [1128,1135]"
    },
    {
      "src": "(: ( [38817,38818]",
      "dest": "(: ( [50585,50586]"
    },
    {
      "src": "string_literal [24780,24829]",
      "dest": "string_literal [33958,34007]"
    },
    {
      "src": "else: else [34320,34324]",
      "dest": "else: else [45909,45913]"
    },
    {
      "src": "call_argument [31232,31254]",
      "dest": "call_argument [41530,41543]"
    },
    {
      "src": "): ) [33963,33964]",
      "dest": "): ) [45574,45575]"
    },
    {
      "src": "identifier: STRING_SHORT_START [32801,32819]",
      "dest": "identifier: STRING_SHORT_START [44380,44398]"
    },
    {
      "src": "augmented_assignment_expression [34903,34920]",
      "dest": "augmented_assignment_expression [46458,46475]"
    },
    {
      "src": "extcodehash: extcodehash [12765,12776]",
      "dest": "extcodehash: extcodehash [9575,9586]"
    },
    {
      "src": "member_expression [8055,8073]",
      "dest": "member_expression [23508,23526]"
    },
    {
      "src": "and: and [35116,35119]",
      "dest": "and: and [46710,46713]"
    },
    {
      "src": "pure: pure [32518,32522]",
      "dest": "pure: pure [44083,44087]"
    },
    {
      "src": "(: ( [36987,36988]",
      "dest": "(: ( [48604,48605]"
    },
    {
      "src": "if: if [33293,33295]",
      "dest": "if: if [44901,44903]"
    },
    {
      "src": "(: ( [33235,33236]",
      "dest": "(: ( [44832,44833]"
    },
    {
      "src": "}: } [18477,18478]",
      "dest": "}: } [27655,27656]"
    },
    {
      "src": "=: = [36930,36931]",
      "dest": "=: = [48547,48548]"
    },
    {
      "src": "yul_identifier [33134,33140]",
      "dest": "yul_identifier [44731,44737]"
    },
    {
      "src": "primitive_type [5135,5139]",
      "dest": "primitive_type [20588,20592]"
    },
    {
      "src": "member_expression [40451,40465]",
      "dest": "member_expression [15347,15361]"
    },
    {
      "src": "call_expression [28109,28129]",
      "dest": "call_expression [39252,39272]"
    },
    {
      "src": "identifier: account [21840,21847]",
      "dest": "identifier: account [31018,31025]"
    },
    {
      "src": "]: ] [28091,28092]",
      "dest": "]: ] [39234,39235]"
    },
    {
      "src": "comment: // The easiest way to bubble the revert reason is using memory via assembly [17297,17372]",
      "dest": "comment: // The easiest way to bubble the revert reason is using memory via assembly [14107,14182]"
    },
    {
      "src": "type_name [20429,20437]",
      "dest": "type_name [29607,29615]"
    },
    {
      "src": "): ) [38757,38758]",
      "dest": "): ) [50548,50549]"
    },
    {
      "src": "member_expression [28817,28828]",
      "dest": "member_expression [39852,39863]"
    },
    {
      "src": "call_expression [29833,29845]",
      "dest": "call_expression [38935,38956]"
    },
    {
      "src": "}: } [9332,9333]",
      "dest": "}: } [24785,24786]"
    },
    {
      "src": "identifier: _roles [25861,25867]",
      "dest": "identifier: _roles [35039,35045]"
    },
    {
      "src": "uint256: uint256 [7990,7997]",
      "dest": "uint256: uint256 [23443,23450]"
    },
    {
      "src": "call_argument [15510,15516]",
      "dest": "call_argument [12320,12326]"
    },
    {
      "src": "): ) [24777,24778]",
      "dest": "): ) [33955,33956]"
    },
    {
      "src": "function_body [27567,27788]",
      "dest": "function_body [37699,37847]"
    },
    {
      "src": "yul_evm_builtin [17551,17557]",
      "dest": "yul_evm_builtin [14361,14367]"
    },
    {
      "src": "]: ] [23562,23563]",
      "dest": "]: ] [32740,32741]"
    },
    {
      "src": ":=: := [33229,33231]",
      "dest": ":=: := [44826,44828]"
    },
    {
      "src": "bytes32: bytes32 [9098,9105]",
      "dest": "bytes32: bytes32 [24551,24558]"
    },
    {
      "src": ",: , [21190,21191]",
      "dest": ",: , [30368,30369]"
    },
    {
      "src": "yul_path [28863,28868]",
      "dest": "yul_path [39898,39903]"
    },
    {
      "src": "identifier: codehash [12567,12575]",
      "dest": "identifier: codehash [9377,9385]"
    },
    {
      "src": "returns: returns [21777,21784]",
      "dest": "returns: returns [30955,30962]"
    },
    {
      "src": "): ) [26017,26018]",
      "dest": "): ) [35195,35196]"
    },
    {
      "src": "return_type_definition [2320,2334]",
      "dest": "return_type_definition [2320,2334]"
    },
    {
      "src": "address: address [751,758]",
      "dest": "address: address [751,758]"
    },
    {
      "src": "): ) [30475,30476]",
      "dest": "): ) [42662,42663]"
    },
    {
      "src": "parameter [38415,38432]",
      "dest": "parameter [50069,50086]"
    },
    {
      "src": "comment: /**      * @dev Returns true if the value is in the set. O(1).      */ [7214,7286]",
      "dest": "comment: /**      * @dev Returns true if the value is in the set. O(1).      */ [22667,22739]"
    },
    {
      "src": "array_access [25861,25873]",
      "dest": "array_access [35039,35051]"
    },
    {
      "src": "identifier: ptr [29274,29277]",
      "dest": "identifier: ptr [40304,40307]"
    },
    {
      "src": "(: ( [13888,13889]",
      "dest": "(: ( [10698,10699]"
    },
    {
      "src": "member_expression [24024,24046]",
      "dest": "member_expression [33202,33224]"
    },
    {
      "src": "comment: /**      * @dev Removes a value from a set. O(1).      *      * Returns true if the value was removed from the set, that is if it was      * present.      */ [10215,10377]",
      "dest": "comment: /**      * @dev Removes a value from a set. O(1).      *      * Returns true if the value was removed from the set, that is if it was      * present.      */ [25668,25830]"
    },
    {
      "src": "binary_expression [32215,32245]",
      "dest": "binary_expression [43873,43903]"
    },
    {
      "src": ",: , [9096,9097]",
      "dest": ",: , [24549,24550]"
    },
    {
      "src": "parameter [39192,39209]",
      "dest": "parameter [50937,50954]"
    },
    {
      "src": "user_defined_type [20202,20209]",
      "dest": "user_defined_type [29380,29387]"
    },
    {
      "src": "identifier: adminRole [20384,20393]",
      "dest": "identifier: adminRole [29562,29571]"
    },
    {
      "src": "function_definition [12237,12856]",
      "dest": "function_definition [9047,9666]"
    },
    {
      "src": "}: } [12786,12787]",
      "dest": "}: } [9596,9597]"
    },
    {
      "src": "identifier: STRING_LONG_START [34283,34300]",
      "dest": "identifier: STRING_LONG_START [45872,45889]"
    },
    {
      "src": "memory: memory [15416,15422]",
      "dest": "memory: memory [12226,12232]"
    },
    {
      "src": "identifier: item [29840,29844]",
      "dest": "identifier: item [38951,38955]"
    },
    {
      "src": "state_mutability [1154,1158]",
      "dest": "state_mutability [1154,1158]"
    },
    {
      "src": "type_name [2295,2302]",
      "dest": "type_name [2295,2302]"
    },
    {
      "src": "identifier: functionCall [15054,15066]",
      "dest": "identifier: functionCall [11864,11876]"
    },
    {
      "src": "identifier: value [5172,5177]",
      "dest": "identifier: value [20625,20630]"
    },
    {
      "src": ".: . [5389,5390]",
      "dest": ".: . [20842,20843]"
    },
    {
      "src": ",: , [14117,14118]",
      "dest": ",: , [10927,10928]"
    },
    {
      "src": "type_name [5696,5703]",
      "dest": "type_name [21149,21156]"
    },
    {
      "src": "primitive_type [39672,39679]",
      "dest": "primitive_type [51417,51424]"
    },
    {
      "src": "identifier: token [40012,40017]",
      "dest": "identifier: token [51755,51760]"
    },
    {
      "src": "function_body [5141,5486]",
      "dest": "function_body [20594,20939]"
    },
    {
      "src": "type_name [7311,7314]",
      "dest": "type_name [22764,22767]"
    },
    {
      "src": "function_definition [8972,9130]",
      "dest": "function_definition [24425,24583]"
    },
    {
      "src": "identifier: require [8047,8054]",
      "dest": "identifier: require [23500,23507]"
    },
    {
      "src": "call_argument [8862,8876]",
      "dest": "call_argument [24315,24329]"
    },
    {
      "src": "type_name [2569,2576]",
      "dest": "type_name [2569,2576]"
    },
    {
      "src": "revert: revert [17551,17557]",
      "dest": "revert: revert [14361,14367]"
    },
    {
      "src": "): ) [9815,9816]",
      "dest": "): ) [25268,25269]"
    },
    {
      "src": "type_name [23492,23499]",
      "dest": "type_name [32670,32677]"
    },
    {
      "src": "yul_function_call [33143,33169]",
      "dest": "yul_function_call [44740,44766]"
    },
    {
      "src": "(: ( [18391,18392]",
      "dest": "(: ( [27569,27570]"
    },
    {
      "src": "member_expression [25985,26005]",
      "dest": "member_expression [35163,35183]"
    },
    {
      "src": "(: ( [34823,34824]",
      "dest": "(: ( [46378,46379]"
    },
    {
      "src": "primitive_type [39989,39996]",
      "dest": "primitive_type [51732,51739]"
    },
    {
      "src": "\": \" [28002,28003]",
      "dest": "\": \" [3912,3913]"
    },
    {
      "src": "pragma: pragma [94,100]",
      "dest": "pragma: pragma [94,100]"
    },
    {
      "src": "return_statement [27745,27781]",
      "dest": "return_statement [37804,37840]"
    },
    {
      "src": "): ) [23586,23587]",
      "dest": "): ) [32764,32765]"
    },
    {
      "src": ".: . [7601,7602]",
      "dest": ".: . [23054,23055]"
    },
    {
      "src": "type_cast_expression [9778,9818]",
      "dest": "type_cast_expression [25231,25271]"
    },
    {
      "src": "uint256: uint256 [3316,3323]",
      "dest": "uint256: uint256 [18769,18776]"
    },
    {
      "src": ".: . [39333,39334]",
      "dest": ".: . [51078,51079]"
    },
    {
      "src": ",: , [38466,38467]",
      "dest": ",: , [50120,50121]"
    },
    {
      "src": "parameter [7524,7539]",
      "dest": "parameter [22977,22992]"
    },
    {
      "src": "yul_hex_number: 0x20 [31538,31542]",
      "dest": "yul_hex_number: 0x20 [43360,43364]"
    },
    {
      "src": "identifier: exitTokens [39153,39163]",
      "dest": "identifier: exitTokens [50898,50908]"
    },
    {
      "src": "return_type_definition [10444,10458]",
      "dest": "return_type_definition [25897,25911]"
    },
    {
      "src": "yul_variable_declaration [33436,33467]",
      "dest": "yul_variable_declaration [45056,45087]"
    },
    {
      "src": ".: . [7003,7004]",
      "dest": ".: . [22456,22457]"
    },
    {
      "src": "(: ( [39778,39779]",
      "dest": "(: ( [51523,51524]"
    },
    {
      "src": "identifier: role [25992,25996]",
      "dest": "identifier: role [35170,35174]"
    },
    {
      "src": "struct: struct [20306,20312]",
      "dest": "struct: struct [29484,29490]"
    },
    {
      "src": "type_name [14038,14042]",
      "dest": "type_name [10848,10852]"
    },
    {
      "src": "(: ( [1167,1168]",
      "dest": "(: ( [1167,1168]"
    },
    {
      "src": "call_expression [37397,37422]",
      "dest": "call_expression [49051,49076]"
    },
    {
      "src": "identifier: RoleRevoked [21542,21553]",
      "dest": "identifier: RoleRevoked [30720,30731]"
    },
    {
      "src": "assembly: assembly [30983,30991]",
      "dest": "assembly: assembly [42972,42980]"
    },
    {
      "src": "pragma_directive [11529,11552]",
      "dest": "pragma_directive [8339,8362]"
    },
    {
      "src": "{: { [212,213]",
      "dest": "{: { [212,213]"
    },
    {
      "src": "new_expression [28109,28122]",
      "dest": "new_expression [39252,39265]"
    },
    {
      "src": "): ) [37785,37786]",
      "dest": "): ) [49439,49440]"
    },
    {
      "src": "else: else [33288,33292]",
      "dest": "else: else [44896,44900]"
    },
    {
      "src": "call_argument [11418,11423]",
      "dest": "call_argument [26871,26876]"
    },
    {
      "src": "internal: internal [29141,29149]",
      "dest": "internal: internal [41063,41071]"
    },
    {
      "src": ",: , [38702,38703]",
      "dest": ",: , [50356,50357]"
    },
    {
      "src": "identifier: _payloadOffset [32077,32091]",
      "dest": "identifier: _payloadOffset [39313,39327]"
    },
    {
      "src": "pure: pure [27923,27927]",
      "dest": "pure: pure [39111,39115]"
    },
    {
      "src": "type_name [28717,28724]",
      "dest": "type_name [39711,39718]"
    },
    {
      "src": "state_mutability [9038,9042]",
      "dest": "state_mutability [24491,24495]"
    },
    {
      "src": "visibility [30619,30627]",
      "dest": "visibility [42806,42814]"
    },
    {
      "src": "{: { [32869,32870]",
      "dest": "{: { [44450,44451]"
    },
    {
      "src": "byte: byte [32635,32639]",
      "dest": "byte: byte [44191,44195]"
    },
    {
      "src": "return: return [11387,11393]",
      "dest": "return: return [26840,26846]"
    },
    {
      "src": ",: , [33670,33671]",
      "dest": ",: , [45290,45291]"
    },
    {
      "src": "bytes: bytes [18537,18542]",
      "dest": "bytes: bytes [27715,27720]"
    },
    {
      "src": "identifier: depositData [36194,36205]",
      "dest": "identifier: depositData [47811,47822]"
    },
    {
      "src": "<: < [32180,32181]",
      "dest": "<: < [43839,43840]"
    },
    {
      "src": "return_statement [17134,17152]",
      "dest": "return_statement [13944,13962]"
    },
    {
      "src": "comment: // in bytes32. [4616,4630]",
      "dest": "comment: // in bytes32. [20069,20083]"
    },
    {
      "src": ".: . [5198,5199]",
      "dest": ".: . [20651,20652]"
    },
    {
      "src": "type_name [8777,8784]",
      "dest": "type_name [24230,24237]"
    },
    {
      "src": "(: ( [23104,23105]",
      "dest": "(: ( [32282,32283]"
    },
    {
      "src": "): ) [34772,34773]",
      "dest": "): ) [46327,46328]"
    },
    {
      "src": ",: , [38685,38686]",
      "dest": ",: , [50339,50340]"
    },
    {
      "src": "storage: storage [10097,10104]",
      "dest": "storage: storage [25550,25557]"
    },
    {
      "src": "function: function [37826,37834]",
      "dest": "function: function [49480,49488]"
    },
    {
      "src": "identifier: isList [29833,29839]",
      "dest": "identifier: payloadLocation [38935,38950]"
    },
    {
      "src": "identifier: role [23664,23668]",
      "dest": "identifier: role [32842,32846]"
    },
    {
      "src": "\": \" [16597,16598]",
      "dest": "\": \" [13407,13408]"
    },
    {
      "src": "=: = [32061,32062]",
      "dest": "=: = [39297,39298]"
    },
    {
      "src": ".: . [32096,32097]",
      "dest": ".: . [39332,39333]"
    },
    {
      "src": "identifier: _inner [8521,8527]",
      "dest": "identifier: _inner [23974,23980]"
    },
    {
      "src": "identifier: RoleAdminChanged [20831,20847]",
      "dest": "identifier: RoleAdminChanged [30009,30025]"
    },
    {
      "src": "pragma_directive [37135,37157]",
      "dest": "pragma_directive [36232,36254]"
    },
    {
      "src": "(: ( [33955,33956]",
      "dest": "(: ( [45566,45567]"
    },
    {
      "src": "using_directive [37280,37306]",
      "dest": "using_directive [48901,48927]"
    },
    {
      "src": "return_statement [29700,29729]",
      "dest": "return_statement [42208,42237]"
    },
    {
      "src": "user_defined_type [8431,8441]",
      "dest": "user_defined_type [23884,23894]"
    },
    {
      "src": "primitive_type [20462,20469]",
      "dest": "primitive_type [29640,29647]"
    },
    {
      "src": "type_cast_expression [10184,10198]",
      "dest": "type_cast_expression [25637,25651]"
    },
    {
      "src": "=: = [27230,27231]",
      "dest": "=: = [36411,36412]"
    },
    {
      "src": "member_expression [38733,38771]",
      "dest": "member_expression [50532,50566]"
    },
    {
      "src": "identifier: AddressSet [8990,9000]",
      "dest": "identifier: AddressSet [24443,24453]"
    },
    {
      "src": "number_literal: 1 [30971,30972]",
      "dest": "number_literal: 1 [42960,42961]"
    },
    {
      "src": "if_statement [34193,34366]",
      "dest": "if_statement [45794,45968]"
    },
    {
      "src": "address: address [36151,36158]",
      "dest": "address: address [47768,47775]"
    },
    {
      "src": "): ) [29469,29470]",
      "dest": "): ) [42086,42087]"
    },
    {
      "src": "function_definition [29431,29736]",
      "dest": "function_definition [42048,42244]"
    },
    {
      "src": "type_name [8990,9000]",
      "dest": "type_name [24443,24453]"
    },
    {
      "src": "yul_function_call [17551,17595]",
      "dest": "yul_function_call [14361,14405]"
    },
    {
      "src": "identifier: lastvalue [6613,6622]",
      "dest": "identifier: lastvalue [22066,22075]"
    },
    {
      "src": "call_argument [28002,28028]",
      "dest": "call_argument [3912,3941]"
    },
    {
      "src": "yul_identifier [30316,30322]",
      "dest": "yul_identifier [42503,42509]"
    },
    {
      "src": "type_name [38505,38510]",
      "dest": "type_name [50159,50164]"
    },
    {
      "src": "return: return [7583,7589]",
      "dest": "return: return [23036,23042]"
    },
    {
      "src": "member_expression [8842,8852]",
      "dest": "member_expression [24295,24305]"
    },
    {
      "src": "(: ( [27987,27988]",
      "dest": "(: ( [39161,39162]"
    },
    {
      "src": "for: for [20286,20289]",
      "dest": "for: for [29464,29467]"
    },
    {
      "src": "\": \" [14178,14179]",
      "dest": "\": \" [10988,10989]"
    },
    {
      "src": "identifier: call [17066,17070]",
      "dest": "identifier: call [13876,13880]"
    },
    {
      "src": "type_name [25945,25952]",
      "dest": "type_name [35123,35130]"
    },
    {
      "src": "): ) [29949,29950]",
      "dest": "): ) [6214,6215]"
    },
    {
      "src": "(: ( [35119,35120]",
      "dest": "(: ( [46713,46714]"
    },
    {
      "src": "): ) [10687,10688]",
      "dest": "): ) [26140,26141]"
    },
    {
      "src": "parameter [29494,29501]",
      "dest": "parameter [42111,42118]"
    },
    {
      "src": "call_expression [28439,28458]",
      "dest": "call_expression [39432,39451]"
    },
    {
      "src": "function_body [15038,15122]",
      "dest": "function_body [11848,11932]"
    },
    {
      "src": "identifier: dest [34592,34596]",
      "dest": "identifier: b [8109,8110]"
    },
    {
      "src": "identifier: this [13889,13893]",
      "dest": "identifier: this [10699,10703]"
    },
    {
      "src": ".: . [22868,22869]",
      "dest": ".: . [32046,32047]"
    },
    {
      "src": "]: ] [24035,24036]",
      "dest": "]: ] [33213,33214]"
    },
    {
      "src": "(: ( [26495,26496]",
      "dest": "(: ( [35673,35674]"
    },
    {
      "src": "function_definition [33803,34373]",
      "dest": "function_definition [45423,45975]"
    },
    {
      "src": "yul_function_call [33451,33467]",
      "dest": "yul_function_call [45071,45087]"
    },
    {
      "src": "): ) [32655,32656]",
      "dest": "): ) [44211,44212]"
    },
    {
      "src": "binary_expression [28204,28226]",
      "dest": "binary_expression [42337,42349]"
    },
    {
      "src": "function_definition [27458,27788]",
      "dest": "function_definition [37622,37847]"
    },
    {
      "src": "(: ( [9231,9232]",
      "dest": "(: ( [24684,24685]"
    },
    {
      "src": "yul_evm_builtin [12765,12776]",
      "dest": "yul_evm_builtin [9575,9586]"
    },
    {
      "src": "uint256: uint256 [31310,31317]",
      "dest": "uint256: uint256 [15262,15269]"
    },
    {
      "src": "yul_evm_builtin [32635,32639]",
      "dest": "yul_evm_builtin [44191,44195]"
    },
    {
      "src": "visibility [5118,5125]",
      "dest": "visibility [20571,20578]"
    },
    {
      "src": "call_expression [22856,22886]",
      "dest": "call_expression [32034,32064]"
    },
    {
      "src": "uint256: uint256 [9786,9793]",
      "dest": "uint256: uint256 [25239,25246]"
    },
    {
      "src": "identifier: inited [37037,37043]",
      "dest": "identifier: inited [48654,48660]"
    },
    {
      "src": "identifier: _remove [8834,8841]",
      "dest": "identifier: _remove [24287,24294]"
    },
    {
      "src": "public: public [24721,24727]",
      "dest": "public: public [33899,33905]"
    },
    {
      "src": "address: address [38443,38450]",
      "dest": "address: address [50097,50104]"
    },
    {
      "src": "type_name [27351,27358]",
      "dest": "type_name [15166,15173]"
    },
    {
      "src": "returns: returns [10674,10681]",
      "dest": "returns: returns [26127,26134]"
    },
    {
      "src": "}: } [26291,26292]",
      "dest": "}: } [35469,35470]"
    },
    {
      "src": "binary_expression [32063,32104]",
      "dest": "binary_expression [39299,39340]"
    },
    {
      "src": "address: address [18425,18432]",
      "dest": "address: address [27603,27610]"
    },
    {
      "src": "(: ( [25549,25550]",
      "dest": "(: ( [34727,34728]"
    },
    {
      "src": "): ) [10197,10198]",
      "dest": "): ) [25650,25651]"
    },
    {
      "src": ":=: := [30307,30309]",
      "dest": ":=: := [42494,42496]"
    },
    {
      "src": "memory: memory [17038,17044]",
      "dest": "memory: memory [13848,13854]"
    },
    {
      "src": "comment: // skip over the first byte [33021,33048]",
      "dest": "comment: // skip over the first byte [44602,44629]"
    },
    {
      "src": "false: false [7182,7187]",
      "dest": "false: false [22635,22640]"
    },
    {
      "src": "(: ( [23477,23478]",
      "dest": "(: ( [32655,32656]"
    },
    {
      "src": "identifier: byte0 [28863,28868]",
      "dest": "identifier: byte0 [39898,39903]"
    },
    {
      "src": "assignment_expression [37037,37050]",
      "dest": "assignment_expression [48654,48667]"
    },
    {
      "src": "(: ( [2259,2260]",
      "dest": "(: ( [2259,2260]"
    },
    {
      "src": "): ) [27560,27561]",
      "dest": "): ) [37697,37698]"
    },
    {
      "src": "comment: // SPDX-License-Identifier: MIT [11494,11525]",
      "dest": "comment: // SPDX-License-Identifier: MIT [2888,2919]"
    },
    {
      "src": "{: { [7371,7372]",
      "dest": "{: { [22824,22825]"
    },
    {
      "src": "uint256: uint256 [39989,39996]",
      "dest": "uint256: uint256 [51732,51739]"
    },
    {
      "src": "yul_function_call [33548,33561]",
      "dest": "yul_function_call [45168,45181]"
    },
    {
      "src": "assembly: assembly [30276,30284]",
      "dest": "assembly: assembly [42463,42471]"
    },
    {
      "src": "\": \" [16912,16913]",
      "dest": "\": \" [13722,13723]"
    },
    {
      "src": "\": \" [14088,14089]",
      "dest": "\": \" [10898,10899]"
    },
    {
      "src": "parameter [10089,10108]",
      "dest": "parameter [25542,25561]"
    },
    {
      "src": "identifier: AddressSet [20347,20357]",
      "dest": "identifier: AddressSet [29525,29535]"
    },
    {
      "src": "identifier: currPtr [32172,32179]",
      "dest": "identifier: currPtr [43831,43838]"
    },
    {
      "src": "}: } [17700,17701]",
      "dest": "}: } [14510,14511]"
    },
    {
      "src": "visibility [21765,21771]",
      "dest": "visibility [30943,30949]"
    },
    {
      "src": "internal: internal [8470,8478]",
      "dest": "internal: internal [23923,23931]"
    },
    {
      "src": "primitive_type [18425,18440]",
      "dest": "primitive_type [27603,27618]"
    },
    {
      "src": "expression_statement [28473,28510]",
      "dest": "expression_statement [39466,39503]"
    },
    {
      "src": "bytes: bytes [15970,15975]",
      "dest": "bytes: bytes [12780,12785]"
    },
    {
      "src": "identifier: item [29126,29130]",
      "dest": "identifier: item [41057,41061]"
    },
    {
      "src": "library_declaration [27080,35302]",
      "dest": "library_declaration [36258,46919]"
    },
    {
      "src": "call_argument [9786,9817]",
      "dest": "call_argument [25239,25270]"
    },
    {
      "src": "identifier: members [25998,26005]",
      "dest": "identifier: members [35176,35183]"
    },
    {
      "src": "if_statement [34650,34671]",
      "dest": "if_statement [46205,46226]"
    },
    {
      "src": "state_mutability [8013,8017]",
      "dest": "state_mutability [23466,23470]"
    },
    {
      "src": "identifier: mint [40385,40389]",
      "dest": "identifier: mint [52128,52132]"
    },
    {
      "src": ",: , [16910,16911]",
      "dest": ",: , [13720,13721]"
    },
    {
      "src": "identifier: token [39943,39948]",
      "dest": "identifier: token [51688,51693]"
    },
    {
      "src": "identifier: len [35058,35061]",
      "dest": "identifier: len [46644,46647]"
    },
    {
      "src": "identifier: recipient [759,768]",
      "dest": "identifier: recipient [759,768]"
    },
    {
      "src": "type_name [8431,8441]",
      "dest": "type_name [23884,23894]"
    },
    {
      "src": "bytes: bytes [16532,16537]",
      "dest": "bytes: bytes [13342,13347]"
    },
    {
      "src": "unary_expression [7088,7107]",
      "dest": "unary_expression [22541,22560]"
    },
    {
      "src": "state_mutability [7549,7553]",
      "dest": "state_mutability [23002,23006]"
    },
    {
      "src": "return_statement [10918,10945]",
      "dest": "return_statement [26371,26398]"
    },
    {
      "src": "identifier: set [8772,8775]",
      "dest": "identifier: set [24225,24228]"
    },
    {
      "src": "(: ( [39264,39265]",
      "dest": "(: ( [51009,51010]"
    },
    {
      "src": "identifier: value [7336,7341]",
      "dest": "identifier: value [22789,22794]"
    },
    {
      "src": "identifier: EnumerableSet [20333,20346]",
      "dest": "identifier: EnumerableSet [29511,29524]"
    },
    {
      "src": "identifier: AddressSet [8200,8210]",
      "dest": "identifier: AddressSet [23653,23663]"
    },
    {
      "src": "identifier: _revokeRole [26116,26127]",
      "dest": "identifier: _revokeRole [35294,35305]"
    },
    {
      "src": "identifier: _inner [10937,10943]",
      "dest": "identifier: _inner [26390,26396]"
    },
    {
      "src": "function: function [24668,24676]",
      "dest": "function: function [33846,33854]"
    },
    {
      "src": "identifier: WORD_SIZE [35046,35055]",
      "dest": "identifier: WORD_SIZE [46632,46641]"
    },
    {
      "src": ">=: >= [13903,13905]",
      "dest": ">=: >= [10713,10715]"
    },
    {
      "src": "type_name [2260,2267]",
      "dest": "type_name [2260,2267]"
    },
    {
      "src": "public: public [37366,37372]",
      "dest": "public: public [49020,49026]"
    },
    {
      "src": "identifier: amount [13845,13851]",
      "dest": "identifier: amount [10655,10661]"
    },
    {
      "src": "uint256: uint256 [5846,5853]",
      "dest": "uint256: uint256 [21299,21306]"
    },
    {
      "src": "internal: internal [8792,8800]",
      "dest": "internal: internal [24245,24253]"
    },
    {
      "src": "returns: returns [11358,11365]",
      "dest": "returns: returns [26811,26818]"
    },
    {
      "src": "visibility [22808,22814]",
      "dest": "visibility [31986,31992]"
    },
    {
      "src": "type_name [10624,10631]",
      "dest": "type_name [26077,26084]"
    },
    {
      "src": "bool: bool [9052,9056]",
      "dest": "bool: bool [24505,24509]"
    },
    {
      "src": "): ) [8551,8552]",
      "dest": "): ) [24004,24005]"
    },
    {
      "src": "identifier: value [10192,10197]",
      "dest": "identifier: value [25645,25650]"
    },
    {
      "src": "function: function [7507,7515]",
      "dest": "function: function [22960,22968]"
    },
    {
      "src": "[: [ [39695,39696]",
      "dest": "[: [ [51440,51441]"
    },
    {
      "src": "{: { [9058,9059]",
      "dest": "{: { [24511,24512]"
    },
    {
      "src": "internal: internal [25511,25519]",
      "dest": "internal: internal [34689,34697]"
    },
    {
      "src": "return: return [9299,9305]",
      "dest": "return: return [24752,24758]"
    },
    {
      "src": "address: address [21217,21224]",
      "dest": "address: address [30395,30402]"
    },
    {
      "src": "add: add [33245,33248]",
      "dest": "add: add [44842,44845]"
    },
    {
      "src": "variable_declaration [31367,31378]",
      "dest": "variable_declaration [40332,40343]"
    },
    {
      "src": "call_expression [26698,26725]",
      "dest": "call_expression [35876,35903]"
    },
    {
      "src": "=: = [30955,30956]",
      "dest": "=: = [42944,42945]"
    },
    {
      "src": "(: ( [35125,35126]",
      "dest": "(: ( [46719,46720]"
    },
    {
      "src": "identifier: item [31794,31798]",
      "dest": "identifier: item [43600,43604]"
    },
    {
      "src": "type_name [23965,23972]",
      "dest": "type_name [33143,33150]"
    },
    {
      "src": "parameter [13810,13835]",
      "dest": "parameter [10620,10645]"
    },
    {
      "src": "address: address [16565,16572]",
      "dest": "address: address [13375,13382]"
    },
    {
      "src": "identifier: hasRole [21726,21733]",
      "dest": "identifier: hasRole [30904,30911]"
    },
    {
      "src": "block_statement [17635,17690]",
      "dest": "block_statement [14445,14500]"
    },
    {
      "src": "call_expression [37544,37606]",
      "dest": "call_expression [49198,49260]"
    },
    {
      "src": "state_mutability [9737,9741]",
      "dest": "state_mutability [25190,25194]"
    },
    {
      "src": "{: { [25528,25529]",
      "dest": "{: { [34706,34707]"
    },
    {
      "src": "comment: // implementations (such as AddressSet) are just wrappers around the [4437,4505]",
      "dest": "comment: // implementations (such as AddressSet) are just wrappers around the [19890,19958]"
    },
    {
      "src": "parameter [33865,33872]",
      "dest": "parameter [5202,5209]"
    },
    {
      "src": "primitive_type [31143,31148]",
      "dest": "primitive_type [43132,43137]"
    },
    {
      "src": "yul_function_call [33232,33261]",
      "dest": "yul_function_call [44829,44858]"
    },
    {
      "src": "(: ( [22778,22779]",
      "dest": "(: ( [31956,31957]"
    },
    {
      "src": ",: , [31608,31609]",
      "dest": ",: , [43416,43417]"
    },
    {
      "src": "return_type_definition [8801,8815]",
      "dest": "return_type_definition [24254,24268]"
    },
    {
      "src": "(: ( [30445,30446]",
      "dest": "(: ( [42632,42633]"
    },
    {
      "src": "address: address [1113,1120]",
      "dest": "address: address [1113,1120]"
    },
    {
      "src": "number_literal: 1 [34359,34360]",
      "dest": "number_literal: 1 [45961,45962]"
    },
    {
      "src": "identifier: data [18707,18711]",
      "dest": "identifier: data [27885,27889]"
    },
    {
      "src": "member_expression [21810,21830]",
      "dest": "member_expression [30988,31008]"
    },
    {
      "src": "identifier: from [2543,2547]",
      "dest": "identifier: from [2543,2547]"
    },
    {
      "src": "[: [ [25867,25868]",
      "dest": "[: [ [35045,35046]"
    },
    {
      "src": "variable_declaration [32115,32129]",
      "dest": "variable_declaration [43777,43788]"
    },
    {
      "src": "solidity_version: 0.6.0 [3460,3465]",
      "dest": "solidity_version: 0.6.0 [2940,2945]"
    },
    {
      "src": "call_argument [25550,25554]",
      "dest": "call_argument [34728,34732]"
    },
    {
      "src": ",: , [36727,36728]",
      "dest": ",: , [48344,48345]"
    },
    {
      "src": "primitive_type [17018,17022]",
      "dest": "primitive_type [13828,13832]"
    },
    {
      "src": "type_name [20376,20383]",
      "dest": "type_name [29554,29561]"
    },
    {
      "src": "parameter [36089,36106]",
      "dest": "parameter [47706,47723]"
    },
    {
      "src": "): ) [26723,26724]",
      "dest": "): ) [35901,35902]"
    },
    {
      "src": ".: . [10488,10489]",
      "dest": ".: . [25941,25942]"
    },
    {
      "src": "yul_identifier [29329,29335]",
      "dest": "yul_identifier [41281,41287]"
    },
    {
      "src": "binary_expression [5903,5918]",
      "dest": "binary_expression [21356,21371]"
    },
    {
      "src": "identifier: byte0 [33893,33898]",
      "dest": "identifier: byte0 [45504,45509]"
    },
    {
      "src": "(: ( [9797,9798]",
      "dest": "(: ( [25250,25251]"
    },
    {
      "src": ":=: := [31014,31016]",
      "dest": ":=: := [43003,43005]"
    },
    {
      "src": "identifier: length [8067,8073]",
      "dest": "identifier: length [23520,23526]"
    },
    {
      "src": "block_statement [32869,33287]",
      "dest": "block_statement [44450,44884]"
    },
    {
      "src": "type_name [28352,28359]",
      "dest": "type_name [3868,3875]"
    },
    {
      "src": "function_definition [22030,22157]",
      "dest": "function_definition [31208,31335]"
    },
    {
      "src": "identifier: depositor [38786,38795]",
      "dest": "identifier: depositor [50567,50576]"
    },
    {
      "src": "return_type_definition [28752,28766]",
      "dest": "return_type_definition [39746,39760]"
    },
    {
      "src": "): ) [8550,8551]",
      "dest": "): ) [24003,24004]"
    },
    {
      "src": "): ) [11424,11425]",
      "dest": "): ) [26877,26878]"
    },
    {
      "src": ",: , [33683,33684]",
      "dest": ",: , [45303,45304]"
    },
    {
      "src": "event_definition [21152,21241]",
      "dest": "event_definition [30330,30419]"
    },
    {
      "src": "contract_body [11643,17711]",
      "dest": "contract_body [8453,14521]"
    },
    {
      "src": "bytes: bytes [31450,31455]",
      "dest": "bytes: bytes [43275,43280]"
    },
    {
      "src": "parameter [36713,36727]",
      "dest": "parameter [48330,48344]"
    },
    {
      "src": ".: . [13894,13895]",
      "dest": ".: . [10704,10705]"
    },
    {
      "src": "(: ( [28122,28123]",
      "dest": "(: ( [39265,39266]"
    },
    {
      "src": "(: ( [38006,38007]",
      "dest": "(: ( [49660,49661]"
    },
    {
      "src": "user_defined_type [28083,28090]",
      "dest": "user_defined_type [39226,39233]"
    },
    {
      "src": "parameter [2276,2293]",
      "dest": "parameter [2276,2293]"
    },
    {
      "src": "): ) [29811,29812]",
      "dest": "): ) [7527,7528]"
    },
    {
      "src": "primitive_type [10729,10736]",
      "dest": "primitive_type [26182,26189]"
    },
    {
      "src": "): ) [26217,26218]",
      "dest": "): ) [35395,35396]"
    },
    {
      "src": "indexed: indexed [21609,21616]",
      "dest": "indexed: indexed [30787,30794]"
    },
    {
      "src": "comment: // File: contracts/root/RootToken/IMintableERC20.sol [2834,2886]",
      "dest": "comment: // File: contracts/root/RootToken/IMintableERC20.sol [18287,18339]"
    },
    {
      "src": "identifier: value [17072,17077]",
      "dest": "identifier: value [13882,13887]"
    },
    {
      "src": "function_definition [5072,5486]",
      "dest": "function_definition [20525,20939]"
    },
    {
      "src": ",: , [36168,36169]",
      "dest": ",: , [47785,47786]"
    },
    {
      "src": "parameter [16859,16871]",
      "dest": "parameter [13669,13681]"
    },
    {
      "src": "): ) [28892,28893]",
      "dest": "): ) [39927,39928]"
    },
    {
      "src": "string_literal [28002,28028]",
      "dest": "string_literal [3912,3941]"
    },
    {
      "src": "identifier: isContract [12246,12256]",
      "dest": "identifier: isContract [9056,9066]"
    },
    {
      "src": "indexed: indexed [21562,21569]",
      "dest": "indexed: indexed [30740,30747]"
    },
    {
      "src": "function_body [9058,9130]",
      "dest": "function_body [24511,24583]"
    },
    {
      "src": "parameter [23492,23507]",
      "dest": "parameter [32670,32685]"
    },
    {
      "src": "{: { [36911,36912]",
      "dest": "{: { [48528,48529]"
    },
    {
      "src": "assembly_statement [32602,32668]",
      "dest": "assembly_statement [44158,44224]"
    },
    {
      "src": "call_argument [15518,15522]",
      "dest": "call_argument [12328,12332]"
    },
    {
      "src": "return_type_definition [11358,11375]",
      "dest": "return_type_definition [26811,26828]"
    },
    {
      "src": "primitive_type [36179,36184]",
      "dest": "primitive_type [47796,47801]"
    },
    {
      "src": "): ) [35061,35062]",
      "dest": "): ) [46647,46648]"
    },
    {
      "src": "call_argument [29364,29375]",
      "dest": "call_argument [41316,41327]"
    },
    {
      "src": "identifier: remove [26203,26209]",
      "dest": "identifier: remove [35381,35387]"
    },
    {
      "src": "): ) [29130,29131]",
      "dest": "): ) [41061,41062]"
    },
    {
      "src": "(: ( [15454,15455]",
      "dest": "(: ( [12264,12265]"
    },
    {
      "src": "function_body [25528,25572]",
      "dest": "function_body [34706,34750]"
    },
    {
      "src": "type_name [36179,36184]",
      "dest": "type_name [47796,47801]"
    },
    {
      "src": "primitive_type [10184,10191]",
      "dest": "primitive_type [25637,25644]"
    },
    {
      "src": "(: ( [25984,25985]",
      "dest": "(: ( [35162,35163]"
    },
    {
      "src": "call_argument [28493,28500]",
      "dest": "call_argument [39486,39493]"
    },
    {
      "src": "binary_expression [7389,7413]",
      "dest": "binary_expression [22842,22866]"
    },
    {
      "src": "): ) [7539,7540]",
      "dest": "): ) [22992,22993]"
    },
    {
      "src": "identifier: currPtr [32205,32212]",
      "dest": "identifier: currPtr [43863,43870]"
    },
    {
      "src": "type_cast_expression [26555,26621]",
      "dest": "type_cast_expression [35733,35799]"
    },
    {
      "src": "return: return [23160,23166]",
      "dest": "return: return [32338,32344]"
    },
    {
      "src": "function_definition [7960,8164]",
      "dest": "function_definition [23413,23617]"
    },
    {
      "src": "identifier: role [26136,26140]",
      "dest": "identifier: role [35314,35318]"
    },
    {
      "src": "(: ( [1862,1863]",
      "dest": "(: ( [1862,1863]"
    },
    {
      "src": "comment: /**      * @dev Emitted when the allowance of a `spender` for an `owner` is set by      * a call to {approve}. `value` is the new allowance.      */ [2592,2743]",
      "dest": "comment: /**      * @dev Emitted when the allowance of a `spender` for an `owner` is set by      * a call to {approve}. `value` is the new allowance.      */ [2592,2743]"
    },
    {
      "src": "memory: memory [39226,39232]",
      "dest": "memory: memory [50971,50977]"
    },
    {
      "src": "return: return [8131,8137]",
      "dest": "return: return [23584,23590]"
    },
    {
      "src": "solidity_pragma_token [101,116]",
      "dest": "solidity_pragma_token [101,116]"
    },
    {
      "src": "yul_function_call [30442,30477]",
      "dest": "yul_function_call [42629,42664]"
    },
    {
      "src": "solidity_version: 0.6.0 [111,116]",
      "dest": "solidity_version: 0.6.0 [111,116]"
    },
    {
      "src": "variable_declaration_statement [31310,31355]",
      "dest": "variable_declaration_statement [38608,38650]"
    },
    {
      "src": "emit_statement [26235,26281]",
      "dest": "emit_statement [35413,35459]"
    },
    {
      "src": ".: . [30249,30250]",
      "dest": ".: . [38678,38679]"
    },
    {
      "src": "identifier: balance [13895,13902]",
      "dest": "identifier: balance [10705,10712]"
    },
    {
      "src": "struct_member [4849,4887]",
      "dest": "struct_member [20302,20340]"
    },
    {
      "src": "type_name [28778,28783]",
      "dest": "type_name [39816,39821]"
    },
    {
      "src": ".: . [29248,29249]",
      "dest": ".: . [41147,41148]"
    },
    {
      "src": "return: return [32401,32407]",
      "dest": "return: return [43969,43975]"
    },
    {
      "src": "function_body [8036,8164]",
      "dest": "function_body [23489,23617]"
    },
    {
      "src": "type_name [29182,29187]",
      "dest": "type_name [41086,41091]"
    },
    {
      "src": "address: address [2549,2556]",
      "dest": "address: address [2549,2556]"
    },
    {
      "src": "identifier: depositReceiver [38687,38702]",
      "dest": "identifier: depositReceiver [50341,50356]"
    },
    {
      "src": "(: ( [9688,9689]",
      "dest": "(: ( [25141,25142]"
    },
    {
      "src": "comment: // If no, it'll mint those extra tokens & transfer `amount` [40242,40301]",
      "dest": "comment: // If no, it'll mint those extra tokens & transfer `amount` [51985,52044]"
    },
    {
      "src": "type_name [39365,39382]",
      "dest": "type_name [51110,51127]"
    },
    {
      "src": "type_name [3302,3309]",
      "dest": "type_name [18755,18762]"
    },
    {
      "src": "}: } [31040,31041]",
      "dest": "}: } [43029,43030]"
    },
    {
      "src": "): ) [25849,25850]",
      "dest": "): ) [35027,35028]"
    },
    {
      "src": "parameter [22058,22070]",
      "dest": "parameter [31236,31248]"
    },
    {
      "src": "type_name [29804,29811]",
      "dest": "type_name [7520,7527]"
    },
    {
      "src": "}: } [18718,18719]",
      "dest": "}: } [27896,27897]"
    },
    {
      "src": "uint256: uint256 [33827,33834]",
      "dest": "uint256: uint256 [16565,16572]"
    },
    {
      "src": "type_name [31473,31480]",
      "dest": "type_name [5168,5175]"
    },
    {
      "src": "new: new [29234,29237]",
      "dest": "new: new [41133,41136]"
    },
    {
      "src": "call_argument [15081,15113]",
      "dest": "call_argument [11891,11923]"
    },
    {
      "src": "identifier: _values [6746,6753]",
      "dest": "identifier: _values [22199,22206]"
    },
    {
      "src": "identifier: depositReceiver [37703,37718]",
      "dest": "identifier: depositReceiver [49357,49372]"
    },
    {
      "src": "): ) [33962,33963]",
      "dest": "): ) [45573,45574]"
    },
    {
      "src": "=: = [29982,29983]",
      "dest": "=: = [41589,41590]"
    },
    {
      "src": "!=: != [5914,5916]",
      "dest": "!=: != [21367,21369]"
    },
    {
      "src": "identifier: STRING_LONG_START [27167,27184]",
      "dest": "identifier: STRING_LONG_START [36345,36362]"
    },
    {
      "src": "yul_evm_builtin [33128,33133]",
      "dest": "yul_evm_builtin [44725,44730]"
    },
    {
      "src": "uint256: uint256 [28042,28049]",
      "dest": "uint256: uint256 [16600,16607]"
    },
    {
      "src": "call_argument [29722,29726]",
      "dest": "call_argument [42230,42234]"
    },
    {
      "src": "{: { [7160,7161]",
      "dest": "{: { [22613,22614]"
    },
    {
      "src": ".: . [10720,10721]",
      "dest": ".: . [26173,26174]"
    },
    {
      "src": "identifier: returndata [17141,17151]",
      "dest": "identifier: returndata [13951,13961]"
    },
    {
      "src": "==: == [31243,31245]",
      "dest": "==: == [41539,41541]"
    },
    {
      "src": ",: , [29380,29381]",
      "dest": ",: , [41332,41333]"
    },
    {
      "src": "parameter [1128,1143]",
      "dest": "parameter [1128,1143]"
    },
    {
      "src": "function_body [34639,35299]",
      "dest": "function_body [46194,46916]"
    },
    {
      "src": "type_cast_expression [13881,13894]",
      "dest": "type_cast_expression [10691,10704]"
    },
    {
      "src": "): ) [10123,10124]",
      "dest": "): ) [25576,25577]"
    },
    {
      "src": "}: } [30502,30503]",
      "dest": "}: } [42689,42690]"
    },
    {
      "src": "call_argument [23590,23639]",
      "dest": "call_argument [32768,32817]"
    },
    {
      "src": "}: } [35291,35292]",
      "dest": "}: } [46897,46898]"
    },
    {
      "src": "{: { [5920,5921]",
      "dest": "{: { [21373,21374]"
    },
    {
      "src": "contract_declaration [26386,26784]",
      "dest": "contract_declaration [35564,35962]"
    },
    {
      "src": "{: { [23997,23998]",
      "dest": "{: { [33175,33176]"
    },
    {
      "src": "yul_function_call [30454,30476]",
      "dest": "yul_function_call [42641,42663]"
    },
    {
      "src": "primitive_type [28042,28049]",
      "dest": "primitive_type [16600,16607]"
    },
    {
      "src": "\": \" [23590,23591]",
      "dest": "\": \" [32768,32769]"
    },
    {
      "src": "primitive_type [10497,10504]",
      "dest": "primitive_type [25950,25957]"
    },
    {
      "src": "identifier: _contains [7301,7310]",
      "dest": "identifier: _contains [22754,22763]"
    },
    {
      "src": "state_variable_declaration [37358,37423]",
      "dest": "state_variable_declaration [49012,49077]"
    },
    {
      "src": "call_expression [24008,24114]",
      "dest": "call_expression [33186,33292]"
    },
    {
      "src": "external: external [2311,2319]",
      "dest": "external: external [2311,2319]"
    },
    {
      "src": "call_argument [37978,37984]",
      "dest": "call_argument [49632,49638]"
    },
    {
      "src": "call_expression [27578,27637]",
      "dest": "call_expression [5530,5586]"
    },
    {
      "src": "primitive_type [13810,13825]",
      "dest": "primitive_type [10620,10635]"
    },
    {
      "src": "binary_expression [32793,32823]",
      "dest": "binary_expression [44372,44402]"
    },
    {
      "src": "pragma_directive [18822,18845]",
      "dest": "pragma_directive [18896,18919]"
    },
    {
      "src": "user_defined_type [30598,30605]",
      "dest": "user_defined_type [42785,42792]"
    },
    {
      "src": "string [36997,37013]",
      "dest": "string [48614,48630]"
    },
    {
      "src": "variable_declaration_statement [5846,5887]",
      "dest": "variable_declaration_statement [21299,21340]"
    },
    {
      "src": "parameter [5696,5709]",
      "dest": "parameter [21149,21162]"
    },
    {
      "src": "identifier: _msgSender [26712,26722]",
      "dest": "identifier: _msgSender [35890,35900]"
    },
    {
      "src": "(: ( [33133,33134]",
      "dest": "(: ( [44730,44731]"
    },
    {
      "src": "call_argument [9086,9096]",
      "dest": "call_argument [24539,24549]"
    },
    {
      "src": "): ) [37421,37422]",
      "dest": "): ) [49075,49076]"
    },
    {
      "src": "address: address [37687,37694]",
      "dest": "address: address [49341,49348]"
    },
    {
      "src": "): ) [32710,32711]",
      "dest": "): ) [44266,44267]"
    },
    {
      "src": "uint256: uint256 [31473,31480]",
      "dest": "uint256: uint256 [5168,5175]"
    },
    {
      "src": "call_argument [39819,39820]",
      "dest": "call_argument [51564,51565]"
    },
    {
      "src": "bytes32: bytes32 [20376,20383]",
      "dest": "bytes32: bytes32 [29554,29561]"
    },
    {
      "src": "variable_declaration_statement [39989,40043]",
      "dest": "variable_declaration_statement [51732,51786]"
    },
    {
      "src": "identifier: IMintableERC20 [39928,39942]",
      "dest": "identifier: IMintableERC20 [51673,51687]"
    },
    {
      "src": "expression_statement [8047,8121]",
      "dest": "expression_statement [23500,23574]"
    },
    {
      "src": "visibility [18506,18514]",
      "dest": "visibility [27684,27692]"
    },
    {
      "src": "identifier: lockTokens [38394,38404]",
      "dest": "identifier: lockTokens [50048,50058]"
    },
    {
      "src": "primitive_type [7328,7335]",
      "dest": "primitive_type [22781,22788]"
    },
    {
      "src": ".: . [8520,8521]",
      "dest": ".: . [23973,23974]"
    },
    {
      "src": "if: if [40337,40339]",
      "dest": "if: if [52080,52082]"
    },
    {
      "src": "{: { [29201,29202]",
      "dest": "{: { [41100,41101]"
    },
    {
      "src": "identifier: memPtr [30962,30968]",
      "dest": "identifier: memPtr [42951,42957]"
    },
    {
      "src": "(: ( [32091,32092]",
      "dest": "(: ( [39327,39328]"
    },
    {
      "src": "call_argument [29635,29649]",
      "dest": "call_argument [42180,42194]"
    },
    {
      "src": "call_argument [38818,38822]",
      "dest": "call_argument [50586,50590]"
    },
    {
      "src": "(: ( [35261,35262]",
      "dest": "(: ( [46863,46864]"
    },
    {
      "src": "identifier: endPtr [32123,32129]",
      "dest": "identifier: endPtr [43782,43788]"
    },
    {
      "src": "call_argument [24024,24046]",
      "dest": "call_argument [33202,33224]"
    },
    {
      "src": "identifier: _revokeRole [24843,24854]",
      "dest": "identifier: _revokeRole [34021,34032]"
    },
    {
      "src": "bool: bool [36918,36922]",
      "dest": "bool: bool [48535,48539]"
    },
    {
      "src": "identifier: role [26706,26710]",
      "dest": "identifier: role [35884,35888]"
    },
    {
      "src": "identifier: _setupRole [37996,38006]",
      "dest": "identifier: _setupRole [49650,49660]"
    },
    {
      "src": ",: , [33150,33151]",
      "dest": ",: , [44747,44748]"
    },
    {
      "src": ",: , [10182,10183]",
      "dest": ",: , [25635,25636]"
    },
    {
      "src": ",: , [23573,23574]",
      "dest": ",: , [32751,32752]"
    },
    {
      "src": "identifier: LIST_SHORT_START [34113,34129]",
      "dest": "identifier: LIST_SHORT_START [45711,45727]"
    },
    {
      "src": "false: false [28954,28959]",
      "dest": "false: false [40002,40007]"
    },
    {
      "src": "call_argument [40398,40402]",
      "dest": "call_argument [52141,52145]"
    },
    {
      "src": "yul_assignment [32626,32657]",
      "dest": "yul_assignment [44182,44213]"
    },
    {
      "src": "emit: emit [26035,26039]",
      "dest": "emit: emit [35213,35217]"
    },
    {
      "src": "}: } [33386,33387]",
      "dest": "}: } [44994,44995]"
    },
    {
      "src": "(: ( [18503,18504]",
      "dest": "(: ( [27681,27682]"
    },
    {
      "src": ".: . [29368,29369]",
      "dest": ".: . [41320,41321]"
    },
    {
      "src": "=: = [40068,40069]",
      "dest": "=: = [51811,51812]"
    },
    {
      "src": "primitive_type [2787,2794]",
      "dest": "primitive_type [2787,2794]"
    },
    {
      "src": "identifier: RLPItem [31099,31106]",
      "dest": "identifier: RLPItem [43088,43095]"
    },
    {
      "src": "parameter [8027,8034]",
      "dest": "parameter [23480,23487]"
    },
    {
      "src": "assembly: assembly [34789,34797]",
      "dest": "assembly: assembly [46344,46352]"
    },
    {
      "src": "external: external [472,480]",
      "dest": "external: external [472,480]"
    },
    {
      "src": "identifier: set [5691,5694]",
      "dest": "identifier: set [21144,21147]"
    },
    {
      "src": "type_name [9713,9720]",
      "dest": "type_name [25166,25173]"
    },
    {
      "src": "identifier: require [27578,27585]",
      "dest": "identifier: require [5530,5537]"
    },
    {
      "src": "): ) [33169,33170]",
      "dest": "): ) [44766,44767]"
    },
    {
      "src": "yul_evm_builtin [33548,33553]",
      "dest": "yul_evm_builtin [45168,45173]"
    },
    {
      "src": "identifier: rootToken [39966,39975]",
      "dest": "identifier: rootToken [51711,51720]"
    },
    {
      "src": "override: override [39251,39259]",
      "dest": "override: override [50996,51004]"
    },
    {
      "src": "virtual: virtual [23989,23996]",
      "dest": "virtual: virtual [33167,33174]"
    },
    {
      "src": "expression_statement [24008,24115]",
      "dest": "expression_statement [33186,33293]"
    },
    {
      "src": "identifier: RLPItem [27546,27553]",
      "dest": "identifier: RLPItem [37683,37690]"
    },
    {
      "src": "yul_identifier [32996,33002]",
      "dest": "yul_identifier [44577,44583]"
    },
    {
      "src": "memory: memory [16865,16871]",
      "dest": "memory: memory [13675,13681]"
    },
    {
      "src": "assembly: assembly [33909,33917]",
      "dest": "assembly: assembly [45520,45528]"
    },
    {
      "src": "): ) [8552,8553]",
      "dest": "): ) [24005,24006]"
    },
    {
      "src": "identifier: sender [2268,2274]",
      "dest": "identifier: sender [2268,2274]"
    },
    {
      "src": "primitive_type [36089,36096]",
      "dest": "primitive_type [47706,47713]"
    },
    {
      "src": "bytes: bytes [36179,36184]",
      "dest": "bytes: bytes [47796,47801]"
    },
    {
      "src": "internal: internal [18506,18514]",
      "dest": "internal: internal [27684,27692]"
    },
    {
      "src": "{: { [17070,17071]",
      "dest": "{: { [13880,13881]"
    },
    {
      "src": "event: event [20825,20830]",
      "dest": "event: event [30003,30008]"
    },
    {
      "src": "mload: mload [35120,35125]",
      "dest": "mload: mload [46714,46719]"
    },
    {
      "src": "): ) [5217,5218]",
      "dest": "): ) [20670,20671]"
    },
    {
      "src": "identifier: index [8150,8155]",
      "dest": "identifier: index [23603,23608]"
    },
    {
      "src": "type_name [20848,20855]",
      "dest": "type_name [30026,30033]"
    },
    {
      "src": "=: = [25884,25885]",
      "dest": "=: = [35062,35063]"
    },
    {
      "src": "mload: mload [32643,32648]",
      "dest": "mload: mload [44199,44204]"
    },
    {
      "src": "primitive_type [31310,31317]",
      "dest": "primitive_type [15262,15269]"
    },
    {
      "src": "bytes32: bytes32 [10184,10191]",
      "dest": "bytes32: bytes32 [25637,25644]"
    },
    {
      "src": "identifier: target [16679,16685]",
      "dest": "identifier: target [13489,13495]"
    },
    {
      "src": "identifier: MANAGER_ROLE [39265,39277]",
      "dest": "identifier: MANAGER_ROLE [51010,51022]"
    },
    {
      "src": "primitive_type [32045,32052]",
      "dest": "primitive_type [4278,4285]"
    },
    {
      "src": "type_name [30106,30113]",
      "dest": "type_name [4706,4713]"
    },
    {
      "src": "variable_declaration [28140,28158]",
      "dest": "variable_declaration [5502,5511]"
    },
    {
      "src": ",: , [11416,11417]",
      "dest": ",: , [26869,26870]"
    },
    {
      "src": "bytes32: bytes32 [37499,37506]",
      "dest": "bytes32: bytes32 [49153,49160]"
    },
    {
      "src": "type_name [27243,27248]",
      "dest": "type_name [36424,36429]"
    },
    {
      "src": "identifier: _roles [23551,23557]",
      "dest": "identifier: _roles [32729,32735]"
    },
    {
      "src": "): ) [40040,40041]",
      "dest": "): ) [51783,51784]"
    },
    {
      "src": "address: address [9014,9021]",
      "dest": "address: address [24467,24474]"
    },
    {
      "src": "identifier: byte0 [32743,32748]",
      "dest": "identifier: byte0 [44322,44327]"
    },
    {
      "src": "struct_member [20333,20366]",
      "dest": "struct_member [29511,29544]"
    },
    {
      "src": "call_expression [23575,23587]",
      "dest": "call_expression [32753,32765]"
    },
    {
      "src": "identifier: _roles [25985,25991]",
      "dest": "identifier: _roles [35163,35169]"
    },
    {
      "src": "yul_evm_builtin [35188,35191]",
      "dest": "yul_evm_builtin [46786,46789]"
    },
    {
      "src": "parameter [29804,29811]",
      "dest": "parameter [7520,7527]"
    },
    {
      "src": "identifier: mask [35136,35140]",
      "dest": "identifier: mask [46730,46734]"
    },
    {
      "src": "primitive_type [40053,40060]",
      "dest": "primitive_type [51796,51803]"
    },
    {
      "src": "type_name [31367,31374]",
      "dest": "type_name [40332,40339]"
    },
    {
      "src": "parameter [16471,16484]",
      "dest": "parameter [13281,13294]"
    },
    {
      "src": "(: ( [9085,9086]",
      "dest": "(: ( [24538,24539]"
    },
    {
      "src": "]: ] [8155,8156]",
      "dest": "]: ] [23608,23609]"
    },
    {
      "src": "}: } [17613,17614]",
      "dest": "}: } [14423,14424]"
    },
    {
      "src": "identifier: len [31251,31254]",
      "dest": "identifier: len [41535,41538]"
    },
    {
      "src": "call_expression [10167,10199]",
      "dest": "call_expression [25620,25652]"
    },
    {
      "src": "yul_evm_builtin [30463,30466]",
      "dest": "yul_evm_builtin [42650,42653]"
    },
    {
      "src": "calldata: calldata [38511,38519]",
      "dest": "calldata: calldata [50165,50173]"
    },
    {
      "src": "identifier: byte0 [34274,34279]",
      "dest": "identifier: byte0 [45863,45868]"
    },
    {
      "src": "member_expression [13881,13902]",
      "dest": "member_expression [10691,10712]"
    },
    {
      "src": "identifier: sender [18464,18470]",
      "dest": "identifier: sender [27642,27648]"
    },
    {
      "src": "identifier: item [27711,27715]",
      "dest": "identifier: item [37770,37774]"
    },
    {
      "src": "primitive_type [36713,36720]",
      "dest": "primitive_type [48330,48337]"
    },
    {
      "src": "primitive_type [15970,15975]",
      "dest": "primitive_type [12780,12785]"
    },
    {
      "src": "primitive_type [28761,28765]",
      "dest": "primitive_type [39755,39759]"
    },
    {
      "src": "call_argument [10485,10495]",
      "dest": "call_argument [25938,25948]"
    },
    {
      "src": "yul_path [35198,35202]",
      "dest": "yul_path [46796,46800]"
    },
    {
      "src": "yul_evm_builtin [27707,27710]",
      "dest": "yul_evm_builtin [37766,37769]"
    },
    {
      "src": "variable_declaration [38587,38601]",
      "dest": "variable_declaration [50243,50257]"
    },
    {
      "src": "primitive_type [25741,25748]",
      "dest": "primitive_type [34919,34926]"
    },
    {
      "src": "bytes32: bytes32 [6605,6612]",
      "dest": "bytes32: bytes32 [22058,22065]"
    },
    {
      "src": "primitive_type [32552,32559]",
      "dest": "primitive_type [7475,7482]"
    },
    {
      "src": "uint256: uint256 [30642,30649]",
      "dest": "uint256: uint256 [8163,8170]"
    },
    {
      "src": "type_name [23140,23147]",
      "dest": "type_name [32318,32325]"
    },
    {
      "src": ",: , [26589,26590]",
      "dest": ",: , [35767,35768]"
    },
    {
      "src": "type_name [31822,31829]",
      "dest": "type_name [6805,6812]"
    },
    {
      "src": "call_expression [30718,30799]",
      "dest": "call_expression [43157,43178]"
    },
    {
      "src": "binary_expression [28300,28341]",
      "dest": "binary_expression [43725,43766]"
    },
    {
      "src": "return_type_definition [9742,9759]",
      "dest": "return_type_definition [25195,25212]"
    },
    {
      "src": "call_argument [26067,26079]",
      "dest": "call_argument [35245,35257]"
    },
    {
      "src": "=: = [28159,28160]",
      "dest": "=: = [5512,5513]"
    },
    {
      "src": "return_statement [10700,10745]",
      "dest": "return_statement [26153,26198]"
    },
    {
      "src": "identifier: result [31544,31550]",
      "dest": "identifier: result [43366,43372]"
    },
    {
      "src": "yul_identifier [35198,35202]",
      "dest": "yul_identifier [46796,46800]"
    },
    {
      "src": "identifier: role [26659,26663]",
      "dest": "identifier: role [35837,35841]"
    },
    {
      "src": "call_argument [40036,40040]",
      "dest": "call_argument [51779,51783]"
    },
    {
      "src": "primitive_type [1113,1120]",
      "dest": "primitive_type [1113,1120]"
    },
    {
      "src": "function_body [15469,15548]",
      "dest": "function_body [12279,12358]"
    },
    {
      "src": "identifier: role [23174,23178]",
      "dest": "identifier: role [32352,32356]"
    },
    {
      "src": "identifier: returndata [17255,17265]",
      "dest": "identifier: returndata [14065,14075]"
    },
    {
      "src": "yul_assignment [30432,30477]",
      "dest": "yul_assignment [42619,42664]"
    },
    {
      "src": "primitive_type [35025,35032]",
      "dest": "primitive_type [46612,46616]"
    },
    {
      "src": ":: : [17077,17078]",
      "dest": ":: : [13887,13888]"
    },
    {
      "src": "binary_expression [27586,27601]",
      "dest": "binary_expression [5538,5548]"
    },
    {
      "src": "return_statement [15480,15541]",
      "dest": "return_statement [12290,12351]"
    },
    {
      "src": "member_expression [7000,7011]",
      "dest": "member_expression [22453,22464]"
    },
    {
      "src": "event_paramater [21217,21239]",
      "dest": "event_paramater [30395,30417]"
    },
    {
      "src": "comment: // The value is stored at length-1, but we add 1 to all indexes [5233,5296]",
      "dest": "comment: // The value is stored at length-1, but we add 1 to all indexes [20686,20749]"
    },
    {
      "src": "pure: pure [28747,28751]",
      "dest": "pure: pure [39741,39745]"
    },
    {
      "src": "binary_expression [24755,24778]",
      "dest": "binary_expression [33933,33956]"
    },
    {
      "src": "): ) [314,315]",
      "dest": "): ) [314,315]"
    },
    {
      "src": "type_name [10683,10687]",
      "dest": "type_name [26136,26140]"
    },
    {
      "src": ",: , [37976,37977]",
      "dest": ",: , [49630,49631]"
    },
    {
      "src": "comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [17829,18337]",
      "dest": "comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [27007,27515]"
    },
    {
      "src": "revert: revert [17654,17660]",
      "dest": "revert: revert [14464,14470]"
    },
    {
      "src": "identifier: depositReceiver [38451,38466]",
      "dest": "identifier: depositReceiver [50105,50120]"
    },
    {
      "src": "identifier: item [31381,31385]",
      "dest": "identifier: item [38716,38720]"
    },
    {
      "src": "yul_decimal_number: 32 [17562,17564]",
      "dest": "yul_decimal_number: 32 [14372,14374]"
    },
    {
      "src": "memory: memory [31430,31436]",
      "dest": "memory: memory [43255,43261]"
    },
    {
      "src": "parameter [25727,25739]",
      "dest": "parameter [34905,34917]"
    },
    {
      "src": "comment: // zero out src [35143,35158]",
      "dest": "comment: // zero out src [46737,46752]"
    },
    {
      "src": ".: . [22876,22877]",
      "dest": ".: . [32054,32055]"
    },
    {
      "src": "identifier: adminRole [25886,25895]",
      "dest": "identifier: adminRole [35064,35073]"
    },
    {
      "src": "): ) [33167,33168]",
      "dest": "): ) [44764,44765]"
    },
    {
      "src": "public: public [20470,20476]",
      "dest": "public: public [29648,29654]"
    },
    {
      "src": "solidity_version_comparison_operator [109,111]",
      "dest": "solidity_version_comparison_operator [109,111]"
    },
    {
      "src": "parameter [8488,8492]",
      "dest": "parameter [23941,23945]"
    },
    {
      "src": "primitive_type [38629,38636]",
      "dest": "primitive_type [50285,50292]"
    },
    {
      "src": "}: } [29346,29347]",
      "dest": "}: } [41298,41299]"
    },
    {
      "src": "{: { [22838,22839]",
      "dest": "{: { [32016,32017]"
    },
    {
      "src": "function_definition [18486,18719]",
      "dest": "function_definition [27664,27897]"
    },
    {
      "src": "identifier: set [9009,9012]",
      "dest": "identifier: set [24462,24465]"
    },
    {
      "src": "(: ( [26077,26078]",
      "dest": "(: ( [35255,35256]"
    },
    {
      "src": "identifier: src [34872,34875]",
      "dest": "identifier: src [46427,46430]"
    },
    {
      "src": "identifier: role [25868,25872]",
      "dest": "identifier: role [35046,35050]"
    },
    {
      "src": "+: + [28540,28541]",
      "dest": "+: + [39534,39535]"
    },
    {
      "src": "(: ( [33990,33991]",
      "dest": "(: ( [45601,45602]"
    },
    {
      "src": "): ) [7570,7571]",
      "dest": "): ) [23023,23024]"
    },
    {
      "src": "memory: memory [16783,16789]",
      "dest": "memory: memory [13593,13599]"
    },
    {
      "src": "binary_expression [33347,33375]",
      "dest": "binary_expression [44955,44983]"
    },
    {
      "src": "call_argument [24145,24152]",
      "dest": "call_argument [33323,33330]"
    },
    {
      "src": "true [7138,7142]",
      "dest": "true [22591,22595]"
    },
    {
      "src": "return_type_definition [27937,27963]",
      "dest": "return_type_definition [39116,39142]"
    },
    {
      "src": "type_name [29494,29501]",
      "dest": "type_name [42111,42118]"
    },
    {
      "src": ",: , [16595,16596]",
      "dest": ",: , [13405,13406]"
    },
    {
      "src": "(: ( [7972,7973]",
      "dest": "(: ( [23425,23426]"
    },
    {
      "src": "member_expression [23551,23573]",
      "dest": "member_expression [32729,32751]"
    },
    {
      "src": "parameter [36738,36755]",
      "dest": "parameter [48355,48372]"
    },
    {
      "src": "(: ( [21553,21554]",
      "dest": "(: ( [30731,30732]"
    },
    {
      "src": "return_type_definition [330,347]",
      "dest": "return_type_definition [330,347]"
    },
    {
      "src": "view: view [12283,12287]",
      "dest": "view: view [9093,9097]"
    },
    {
      "src": "return_type_definition [18528,18550]",
      "dest": "return_type_definition [27706,27728]"
    },
    {
      "src": "member_expression [29996,30007]",
      "dest": "member_expression [41591,41602]"
    },
    {
      "src": "identifier: toUint [40084,40090]",
      "dest": "identifier: toUint [51827,51833]"
    },
    {
      "src": "comment: // SPDX-License-Identifier: MIT [59,90]",
      "dest": "comment: // SPDX-License-Identifier: MIT [59,90]"
    },
    {
      "src": "identifier: LockedMintableERC20 [38656,38675]",
      "dest": "identifier: LockedMintableERC20 [50310,50329]"
    },
    {
      "src": "}: } [34372,34373]",
      "dest": "}: } [45974,45975]"
    },
    {
      "src": "call_expression [36980,37014]",
      "dest": "call_expression [48597,48631]"
    },
    {
      "src": "type_name [1863,1870]",
      "dest": "type_name [1863,1870]"
    },
    {
      "src": "address: address [1863,1870]",
      "dest": "address: address [1863,1870]"
    },
    {
      "src": "==: == [30855,30857]",
      "dest": "==: == [42891,42893]"
    },
    {
      "src": "identifier: _indexes [7393,7401]",
      "dest": "identifier: _indexes [22846,22854]"
    },
    {
      "src": "new_expression [29234,29243]",
      "dest": "new_expression [41133,41142]"
    },
    {
      "src": "pure: pure [33851,33855]",
      "dest": "pure: pure [45468,45472]"
    },
    {
      "src": "variable_declaration_statement [32115,32155]",
      "dest": "variable_declaration_statement [43777,43814]"
    },
    {
      "src": "(: ( [8536,8537]",
      "dest": "(: ( [23989,23990]"
    },
    {
      "src": "identifier: DEFAULT_ADMIN_ROLE [20486,20504]",
      "dest": "identifier: DEFAULT_ADMIN_ROLE [29664,29682]"
    },
    {
      "src": "\": \" [13914,13915]",
      "dest": "\": \" [10724,10725]"
    },
    {
      "src": "yul_function_call [35259,35280]",
      "dest": "yul_function_call [46861,46882]"
    },
    {
      "src": "false [28954,28959]",
      "dest": "false [40002,40007]"
    },
    {
      "src": "user_defined_type [5086,5089]",
      "dest": "user_defined_type [20539,20542]"
    },
    {
      "src": "parameter [11308,11327]",
      "dest": "parameter [26761,26780]"
    },
    {
      "src": "solidity_version:  0.6.6 [36877,36883]",
      "dest": "solidity_version:  0.6.6 [35551,35557]"
    },
    {
      "src": "return_statement [34664,34671]",
      "dest": "return_statement [46219,46226]"
    },
    {
      "src": "block_statement [17169,17701]",
      "dest": "block_statement [13979,14511]"
    },
    {
      "src": "function_body [23149,23197]",
      "dest": "function_body [32327,32375]"
    },
    {
      "src": "(: ( [33566,33567]",
      "dest": "(: ( [45186,45187]"
    },
    {
      "src": "}: } [24876,24877]",
      "dest": "}: } [34054,34055]"
    },
    {
      "src": "]: ] [7113,7114]",
      "dest": "]: ] [22566,22567]"
    },
    {
      "src": "parameter [22779,22791]",
      "dest": "parameter [31957,31969]"
    },
    {
      "src": "identifier: currPtr [32215,32222]",
      "dest": "identifier: currPtr [43873,43880]"
    },
    {
      "src": "): ) [33320,33321]",
      "dest": "): ) [44928,44929]"
    },
    {
      "src": "user_defined_type [37332,37349]",
      "dest": "user_defined_type [48953,48970]"
    },
    {
      "src": "): ) [33588,33589]",
      "dest": "): ) [45208,45209]"
    },
    {
      "src": "state_mutability [23126,23130]",
      "dest": "state_mutability [32304,32308]"
    },
    {
      "src": "identifier: account [24145,24152]",
      "dest": "identifier: account [33323,33330]"
    },
    {
      "src": "if: if [17106,17108]",
      "dest": "if: if [13916,13918]"
    },
    {
      "src": "identifier: remove [10392,10398]",
      "dest": "identifier: remove [25845,25851]"
    },
    {
      "src": "identifier: amount [13906,13912]",
      "dest": "identifier: amount [10716,10722]"
    },
    {
      "src": "array_access [6848,6871]",
      "dest": "array_access [22301,22324]"
    },
    {
      "src": "}: } [25571,25572]",
      "dest": "}: } [34749,34750]"
    },
    {
      "src": "call_argument [26562,26620]",
      "dest": "call_argument [35740,35798]"
    },
    {
      "src": "): ) [27894,27895]",
      "dest": "): ) [39100,39101]"
    },
    {
      "src": "identifier: call [14066,14070]",
      "dest": "identifier: call [10876,10880]"
    },
    {
      "src": "call_argument [9794,9816]",
      "dest": "call_argument [25247,25269]"
    },
    {
      "src": "variable_declaration [35025,35037]",
      "dest": "variable_declaration [46612,46621]"
    },
    {
      "src": ",: , [30461,30462]",
      "dest": ",: , [42648,42649]"
    },
    {
      "src": "identifier: pop [7012,7015]",
      "dest": "identifier: pop [22465,22468]"
    },
    {
      "src": "return: return [22849,22855]",
      "dest": "return: return [32027,32033]"
    },
    {
      "src": "function_body [24736,24877]",
      "dest": "function_body [33914,34055]"
    },
    {
      "src": "comment: // and use 0 as a sentinel value [5310,5342]",
      "dest": "comment: // and use 0 as a sentinel value [20763,20795]"
    },
    {
      "src": "): ) [17117,17118]",
      "dest": "): ) [13927,13928]"
    },
    {
      "src": "identifier: result [29329,29335]",
      "dest": "identifier: result [41281,41287]"
    },
    {
      "src": "memory: memory [39310,39316]",
      "dest": "memory: memory [51055,51061]"
    },
    {
      "src": "yul_identifier [33533,33540]",
      "dest": "yul_identifier [45153,45160]"
    },
    {
      "src": "identifier: this [40398,40402]",
      "dest": "identifier: this [52141,52145]"
    },
    {
      "src": "return_type_definition [486,503]",
      "dest": "return_type_definition [486,503]"
    },
    {
      "src": "expression_statement [34872,34889]",
      "dest": "expression_statement [46427,46444]"
    },
    {
      "src": "yul_evm_builtin [33006,33009]",
      "dest": "yul_evm_builtin [44587,44590]"
    },
    {
      "src": "if_statement [28917,28960]",
      "dest": "if_statement [39952,40008]"
    },
    {
      "src": "call_argument [8529,8552]",
      "dest": "call_argument [23982,24005]"
    },
    {
      "src": "identifier: _length [9306,9313]",
      "dest": "identifier: _length [24759,24766]"
    },
    {
      "src": "variable_declaration_statement [39290,39355]",
      "dest": "variable_declaration_statement [51035,51100]"
    },
    {
      "src": "address: address [13810,13817]",
      "dest": "address: address [10620,10627]"
    },
    {
      "src": "uint256: uint256 [4869,4876]",
      "dest": "uint256: uint256 [20322,20329]"
    },
    {
      "src": "user_defined_type [2944,2950]",
      "dest": "user_defined_type [18397,18403]"
    },
    {
      "src": "): ) [9254,9255]",
      "dest": "): ) [24707,24708]"
    },
    {
      "src": "=: = [39328,39329]",
      "dest": "=: = [51073,51074]"
    },
    {
      "src": "(: ( [17109,17110]",
      "dest": "(: ( [13919,13920]"
    },
    {
      "src": "primitive_type [11367,11374]",
      "dest": "primitive_type [26820,26827]"
    },
    {
      "src": "identifier: require [30838,30845]",
      "dest": "identifier: require [42874,42881]"
    },
    {
      "src": "view: view [18403,18407]",
      "dest": "view: view [27581,27585]"
    },
    {
      "src": "comment: // To implement this library for multiple types with as little code [4189,4256]",
      "dest": "comment: // To implement this library for multiple types with as little code [19642,19709]"
    },
    {
      "src": "internal: internal [26522,26530]",
      "dest": "internal: internal [35700,35708]"
    },
    {
      "src": "call_expression [40379,40427]",
      "dest": "call_expression [52122,52170]"
    },
    {
      "src": "add: add [33006,33009]",
      "dest": "add: add [44587,44590]"
    },
    {
      "src": ",: , [21215,21216]",
      "dest": ",: , [30393,30394]"
    },
    {
      "src": "assembly: assembly [29288,29296]",
      "dest": "assembly: assembly [41240,41248]"
    },
    {
      "src": "bytes: bytes [16777,16782]",
      "dest": "bytes: bytes [13587,13592]"
    },
    {
      "src": "function_body [10907,10952]",
      "dest": "function_body [26360,26405]"
    },
    {
      "src": "): ) [40426,40427]",
      "dest": "): ) [52169,52170]"
    },
    {
      "src": "primitive_type [21217,21224]",
      "dest": "primitive_type [30395,30402]"
    },
    {
      "src": "yul_identifier [35176,35184]",
      "dest": "yul_identifier [46774,46782]"
    },
    {
      "src": ",: , [9012,9013]",
      "dest": ",: , [24465,24466]"
    },
    {
      "src": "): ) [26663,26664]",
      "dest": "): ) [35841,35842]"
    },
    {
      "src": "{: { [34774,34775]",
      "dest": "{: { [46329,46330]"
    },
    {
      "src": "yul_path [34836,34839]",
      "dest": "yul_path [46391,46394]"
    },
    {
      "src": "comment: /*      * Private Helpers      */ [31654,31689]",
      "dest": "comment: /*     * @param item RLP encoded bytes     */ [37569,37616]"
    },
    {
      "src": "yul_variable_declaration [17489,17529]",
      "dest": "yul_variable_declaration [14299,14339]"
    },
    {
      "src": "comment: // Storage of set values [4660,4684]",
      "dest": "comment: // Storage of set values [20113,20137]"
    },
    {
      "src": "boolean_literal [37046,37050]",
      "dest": "boolean_literal [48663,48667]"
    },
    {
      "src": "event_paramater [21576,21599]",
      "dest": "event_paramater [30754,30777]"
    },
    {
      "src": "=: = [6287,6288]",
      "dest": "=: = [21740,21741]"
    },
    {
      "src": "call_argument [29537,29574]",
      "dest": "call_argument [16968,17011]"
    },
    {
      "src": "string [14119,14179]",
      "dest": "string [10929,10989]"
    },
    {
      "src": "yul_identifier [33485,33491]",
      "dest": "yul_identifier [45105,45111]"
    },
    {
      "src": "function_body [23524,23686]",
      "dest": "function_body [32702,32864]"
    },
    {
      "src": ",: , [21599,21600]",
      "dest": ",: , [30777,30778]"
    },
    {
      "src": "identifier: toRlpBytes [29100,29110]",
      "dest": "identifier: toRlpBytes [41031,41041]"
    },
    {
      "src": "if_statement [32680,33714]",
      "dest": "if_statement [44236,45334]"
    },
    {
      "src": "identifier: result [28100,28106]",
      "dest": "identifier: result [39243,39249]"
    },
    {
      "src": "yul_path [27711,27715]",
      "dest": "yul_path [37770,37774]"
    },
    {
      "src": "call_argument [25810,25814]",
      "dest": "call_argument [34988,34992]"
    },
    {
      "src": "yul_decimal_number: 32 [30467,30469]",
      "dest": "yul_decimal_number: 32 [42654,42656]"
    },
    {
      "src": "address: address [36089,36096]",
      "dest": "address: address [47706,47713]"
    },
    {
      "src": "internal: internal [28738,28746]",
      "dest": "internal: internal [39732,39740]"
    },
    {
      "src": ".: . [7392,7393]",
      "dest": ".: . [22845,22846]"
    },
    {
      "src": "call_expression [24747,24830]",
      "dest": "call_expression [33925,34008]"
    },
    {
      "src": "): ) [39806,39807]",
      "dest": "): ) [51551,51552]"
    },
    {
      "src": "primitive_type [29804,29811]",
      "dest": "primitive_type [7520,7527]"
    },
    {
      "src": "type_name [32494,32501]",
      "dest": "type_name [16859,16866]"
    },
    {
      "src": "primitive_type [10645,10652]",
      "dest": "primitive_type [26098,26105]"
    },
    {
      "src": "identifier: valueIndex [5854,5864]",
      "dest": "identifier: valueIndex [21307,21317]"
    },
    {
      "src": "(: ( [28450,28451]",
      "dest": "(: ( [39443,39444]"
    },
    {
      "src": ",: , [38626,38627]",
      "dest": ",: , [50282,50283]"
    },
    {
      "src": "number_literal: 33 [30858,30860]",
      "dest": "number_literal: 33 [42894,42896]"
    },
    {
      "src": "(: ( [34835,34836]",
      "dest": "(: ( [46390,46391]"
    },
    {
      "src": "return: return [8505,8511]",
      "dest": "return: return [23958,23964]"
    },
    {
      "src": "solidity: solidity [2897,2905]",
      "dest": "solidity: solidity [48759,48767]"
    },
    {
      "src": "parameter [28717,28736]",
      "dest": "parameter [39711,39730]"
    },
    {
      "src": "parameter [16796,16812]",
      "dest": "parameter [13606,13622]"
    },
    {
      "src": "+: + [6888,6889]",
      "dest": "+: + [22341,22342]"
    },
    {
      "src": "function_definition [25460,25572]",
      "dest": "function_definition [34638,34750]"
    },
    {
      "src": "parameter [10420,10433]",
      "dest": "parameter [25873,25886]"
    },
    {
      "src": "): ) [33841,33842]",
      "dest": "): ) [45458,45459]"
    },
    {
      "src": "memory: memory [29458,29464]",
      "dest": "memory: memory [42075,42081]"
    },
    {
      "src": "type_name [25494,25501]",
      "dest": "type_name [34672,34679]"
    },
    {
      "src": "comment: /*      * @param item RLP encoded bytes      */ [27403,27452]",
      "dest": "comment: /*     * @dev Returns the next element in the iteration. Reverts if it has not next element.     * @param self The iterator.     * @return The next element in the iteration.     */ [36741,36925]"
    },
    {
      "src": "private: private [5711,5718]",
      "dest": "private: private [21164,21171]"
    },
    {
      "src": "parameter [7563,7570]",
      "dest": "parameter [23016,23023]"
    },
    {
      "src": "comment: // When the value to delete is the last one, the swap operation is unnecessary. However, since this occurs [6377,6483]",
      "dest": "comment: // When the value to delete is the last one, the swap operation is unnecessary. However, since this occurs [21830,21936]"
    },
    {
      "src": "private: private [20439,20446]",
      "dest": "private: private [29617,29624]"
    },
    {
      "src": "parameter [10683,10687]",
      "dest": "parameter [26136,26140]"
    },
    {
      "src": "]: ] [25827,25828]",
      "dest": "]: ] [35005,35006]"
    },
    {
      "src": "comment: /// @title Token predicate interface for all pos portal predicates [35397,35463]",
      "dest": "comment: /// @title Token predicate interface for all pos portal predicates [47014,47080]"
    },
    {
      "src": ".: . [8058,8059]",
      "dest": ".: . [23511,23512]"
    },
    {
      "src": "{: { [32541,32542]",
      "dest": "{: { [44103,44104]"
    },
    {
      "src": "}: } [5433,5434]",
      "dest": "}: } [20886,20887]"
    },
    {
      "src": "solidity_pragma_token [17809,17824]",
      "dest": "solidity_pragma_token [14629,14644]"
    },
    {
      "src": "return_statement [7583,7609]",
      "dest": "return_statement [23036,23062]"
    },
    {
      "src": "=: = [31379,31380]",
      "dest": "=: = [38714,38715]"
    },
    {
      "src": "identifier: msg [18703,18706]",
      "dest": "identifier: msg [27881,27884]"
    },
    {
      "src": "primitive_type [32115,32122]",
      "dest": "primitive_type [6115,6122]"
    },
    {
      "src": ",: , [14050,14051]",
      "dest": ",: , [10860,10861]"
    },
    {
      "src": "binary_expression [34274,34305]",
      "dest": "binary_expression [45863,45894]"
    },
    {
      "src": "(: ( [11307,11308]",
      "dest": "(: ( [26760,26761]"
    },
    {
      "src": "): ) [2825,2826]",
      "dest": "): ) [2825,2826]"
    },
    {
      "src": "string [29847,29881]",
      "dest": "string [7557,7583]"
    },
    {
      "src": "pure: pure [29159,29163]",
      "dest": "pure: pure [41072,41076]"
    },
    {
      "src": "return_statement [28947,28960]",
      "dest": "return_statement [39995,40008]"
    },
    {
      "src": "string_literal [29651,29686]",
      "dest": "string_literal [18003,18037]"
    },
    {
      "src": "event: event [2749,2754]",
      "dest": "event: event [2749,2754]"
    },
    {
      "src": "{: { [11376,11377]",
      "dest": "{: { [26829,26830]"
    },
    {
      "src": "primitive_type [28352,28359]",
      "dest": "primitive_type [3868,3875]"
    },
    {
      "src": "parameter [38505,38531]",
      "dest": "parameter [50159,50185]"
    },
    {
      "src": "): ) [5918,5919]",
      "dest": "): ) [21371,21372]"
    },
    {
      "src": "(: ( [34282,34283]",
      "dest": "(: ( [45871,45872]"
    },
    {
      "src": "return_statement [33726,33741]",
      "dest": "return_statement [45346,45361]"
    },
    {
      "src": "type_name [31779,31786]",
      "dest": "type_name [43585,43592]"
    },
    {
      "src": "event_definition [37615,37787]",
      "dest": "event_definition [49269,49441]"
    },
    {
      "src": "return_type_definition [10674,10688]",
      "dest": "return_type_definition [26127,26141]"
    },
    {
      "src": "{: { [26220,26221]",
      "dest": "{: { [35398,35399]"
    },
    {
      "src": "unary_expression [5156,5178]",
      "dest": "unary_expression [20609,20631]"
    },
    {
      "src": "uint256: uint256 [9106,9113]",
      "dest": "uint256: uint256 [24559,24566]"
    },
    {
      "src": "): ) [22885,22886]",
      "dest": "): ) [32063,32064]"
    },
    {
      "src": "primitive_type [455,462]",
      "dest": "primitive_type [455,462]"
    },
    {
      "src": "-: - [34280,34281]",
      "dest": "-: - [45869,45870]"
    },
    {
      "src": "yul_decimal_number: 1 [33507,33508]",
      "dest": "yul_decimal_number: 1 [45127,45128]"
    },
    {
      "src": "expression_statement [37025,37027]",
      "dest": "expression_statement [48642,48644]"
    },
    {
      "src": "type_name [10453,10457]",
      "dest": "type_name [25906,25910]"
    },
    {
      "src": "identifier: item [32132,32136]",
      "dest": "identifier: item [43791,43795]"
    },
    {
      "src": "identifier: itemLen [33337,33344]",
      "dest": "identifier: itemLen [44945,44952]"
    },
    {
      "src": "identifier: value [9114,9119]",
      "dest": "identifier: value [24567,24572]"
    },
    {
      "src": "): ) [36797,36798]",
      "dest": "): ) [48414,48415]"
    },
    {
      "src": "): ) [29501,29502]",
      "dest": "): ) [42118,42119]"
    },
    {
      "src": "{: { [18442,18443]",
      "dest": "{: { [27620,27621]"
    },
    {
      "src": "): ) [36967,36968]",
      "dest": "): ) [48584,48585]"
    },
    {
      "src": "parameter [9279,9286]",
      "dest": "parameter [24732,24739]"
    },
    {
      "src": "virtual: virtual [23516,23523]",
      "dest": "virtual: virtual [32694,32701]"
    },
    {
      "src": "): ) [10905,10906]",
      "dest": "): ) [26358,26359]"
    },
    {
      "src": "yul_identifier [33160,33167]",
      "dest": "yul_identifier [44757,44764]"
    },
    {
      "src": "uint256: uint256 [1168,1175]",
      "dest": "uint256: uint256 [1168,1175]"
    },
    {
      "src": "}: } [36810,36811]",
      "dest": "}: } [48427,48428]"
    },
    {
      "src": "primitive_type [29494,29501]",
      "dest": "primitive_type [42111,42118]"
    },
    {
      "src": "): ) [16544,16545]",
      "dest": "): ) [13354,13355]"
    },
    {
      "src": "array_access [39779,39797]",
      "dest": "array_access [51524,51542]"
    },
    {
      "src": "}: } [17088,17089]",
      "dest": "}: } [13898,13899]"
    },
    {
      "src": "private: private [26445,26452]",
      "dest": "private: private [35623,35630]"
    },
    {
      "src": "returns: returns [9270,9277]",
      "dest": "returns: returns [24723,24730]"
    },
    {
      "src": "identifier: hasRole [23543,23550]",
      "dest": "identifier: hasRole [32721,32728]"
    },
    {
      "src": "call_expression [29523,29535]",
      "dest": "call_expression [40765,40786]"
    },
    {
      "src": "event_paramater [20905,20933]",
      "dest": "event_paramater [30083,30111]"
    },
    {
      "src": "parameter [15374,15388]",
      "dest": "parameter [12184,12198]"
    },
    {
      "src": "yul_identifier [33236,33243]",
      "dest": "yul_identifier [44833,44840]"
    },
    {
      "src": "address: address [39174,39181]",
      "dest": "address: address [50919,50926]"
    },
    {
      "src": "): ) [9817,9818]",
      "dest": "): ) [25270,25271]"
    },
    {
      "src": "address: address [24704,24711]",
      "dest": "address: address [33882,33889]"
    },
    {
      "src": "solidity: solidity [18829,18837]",
      "dest": "solidity: solidity [18903,18911]"
    },
    {
      "src": "identifier: AccessControlMixin [37233,37251]",
      "dest": "identifier: AccessControlMixin [48854,48872]"
    },
    {
      "src": "binary_expression [34738,34754]",
      "dest": "binary_expression [46293,46309]"
    },
    {
      "src": "call_expression [38733,38855]",
      "dest": "call_expression [50532,50600]"
    },
    {
      "src": "member_expression [7000,7015]",
      "dest": "member_expression [22453,22468]"
    },
    {
      "src": "parameter [28761,28765]",
      "dest": "parameter [39755,39759]"
    },
    {
      "src": "{: { [18551,18552]",
      "dest": "{: { [27729,27730]"
    },
    {
      "src": "address: address [2787,2794]",
      "dest": "address: address [2787,2794]"
    },
    {
      "src": "{: { [26020,26021]",
      "dest": "{: { [35198,35199]"
    },
    {
      "src": "call_expression [10477,10512]",
      "dest": "call_expression [25930,25965]"
    },
    {
      "src": "(: ( [26561,26562]",
      "dest": "(: ( [35739,35740]"
    },
    {
      "src": "\": \" [16942,16943]",
      "dest": "\": \" [13752,13753]"
    },
    {
      "src": "call_expression [39779,39806]",
      "dest": "call_expression [51524,51551]"
    },
    {
      "src": "(: ( [8054,8055]",
      "dest": "(: ( [23507,23508]"
    },
    {
      "src": "identifier: set [6338,6341]",
      "dest": "identifier: set [21791,21794]"
    },
    {
      "src": "memory: memory [27883,27889]",
      "dest": "memory: memory [39089,39095]"
    },
    {
      "src": "parameter [1914,1918]",
      "dest": "parameter [1914,1918]"
    },
    {
      "src": ".: . [14065,14066]",
      "dest": ".: . [10875,10876]"
    },
    {
      "src": "type_cast_expression [39672,39708]",
      "dest": "type_cast_expression [51417,51453]"
    },
    {
      "src": "block_statement [17278,17629]",
      "dest": "block_statement [14088,14439]"
    },
    {
      "src": "event_paramater [37651,37676]",
      "dest": "event_paramater [49305,49330]"
    },
    {
      "src": "yul_evm_builtin [33950,33955]",
      "dest": "yul_evm_builtin [45561,45566]"
    },
    {
      "src": "number_literal: 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 [12608,12674]",
      "dest": "number_literal: 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 [9418,9484]"
    },
    {
      "src": "(: ( [33675,33676]",
      "dest": "(: ( [45295,45296]"
    },
    {
      "src": "]: ] [23178,23179]",
      "dest": "]: ] [32356,32357]"
    },
    {
      "src": "yul_assignment [31007,31030]",
      "dest": "yul_assignment [42996,43019]"
    },
    {
      "src": "type_name [38443,38450]",
      "dest": "type_name [50097,50104]"
    },
    {
      "src": "return: return [21803,21809]",
      "dest": "return: return [30981,30987]"
    },
    {
      "src": "expression_statement [32712,32724]",
      "dest": "expression_statement [44281,44293]"
    },
    {
      "src": ".: . [6341,6342]",
      "dest": ".: . [21794,21795]"
    },
    {
      "src": "identifier: index [11337,11342]",
      "dest": "identifier: index [26790,26795]"
    },
    {
      "src": "function_body [18551,18719]",
      "dest": "function_body [27729,27897]"
    },
    {
      "src": "+: + [30257,30258]",
      "dest": "+: + [38686,38687]"
    },
    {
      "src": "type_name [751,758]",
      "dest": "type_name [751,758]"
    },
    {
      "src": "(: ( [29803,29804]",
      "dest": "(: ( [7519,7520]"
    },
    {
      "src": "identifier: toAddress [29440,29449]",
      "dest": "identifier: toAddress [42057,42066]"
    },
    {
      "src": "): ) [39242,39243]",
      "dest": "): ) [50987,50988]"
    },
    {
      "src": "identifier: destPtr [31523,31530]",
      "dest": "identifier: destPtr [43345,43352]"
    },
    {
      "src": "<: < [28927,28928]",
      "dest": "<: < [39962,39963]"
    },
    {
      "src": "identifier: depositData [38520,38531]",
      "dest": "identifier: depositData [50174,50185]"
    },
    {
      "src": "solidity_version: 0.6.0 [17819,17824]",
      "dest": "solidity_version: 0.6.0 [14639,14644]"
    },
    {
      "src": "return_statement [11387,11426]",
      "dest": "return_statement [26840,26879]"
    },
    {
      "src": "call_expression [26712,26724]",
      "dest": "call_expression [35890,35902]"
    },
    {
      "src": "&&: && [34130,34132]",
      "dest": "&&: && [45728,45730]"
    },
    {
      "src": "identifier: logTopicRLPList [39779,39794]",
      "dest": "identifier: logTopicRLPList [51524,51539]"
    },
    {
      "src": "identifier: hasRole [24016,24023]",
      "dest": "identifier: hasRole [33194,33201]"
    },
    {
      "src": "contract_body [18365,18722]",
      "dest": "contract_body [27543,27900]"
    },
    {
      "src": "identifier: isList [28710,28716]",
      "dest": "identifier: isList [39704,39710]"
    },
    {
      "src": "primitive_type [25931,25938]",
      "dest": "primitive_type [35109,35116]"
    },
    {
      "src": "identifier: len [31386,31389]",
      "dest": "identifier: len [38721,38724]"
    },
    {
      "src": "): ) [1918,1919]",
      "dest": "): ) [1918,1919]"
    },
    {
      "src": "variable_declaration_tuple [17017,17056]",
      "dest": "variable_declaration_tuple [13827,13866]"
    },
    {
      "src": "expression_statement [28196,28271]",
      "dest": "expression_statement [42329,42369]"
    },
    {
      "src": "view: view [11353,11357]",
      "dest": "view: view [26806,26810]"
    },
    {
      "src": "yul_decimal_number: 1 [33685,33686]",
      "dest": "yul_decimal_number: 1 [45305,45306]"
    },
    {
      "src": "bytes32: bytes32 [23951,23958]",
      "dest": "bytes32: bytes32 [33129,33136]"
    },
    {
      "src": "identifier: result [30522,30528]",
      "dest": "identifier: result [42709,42715]"
    },
    {
      "src": "call_argument [23543,23588]",
      "dest": "call_argument [32721,32766]"
    },
    {
      "src": "(: ( [10682,10683]",
      "dest": "(: ( [26135,26136]"
    },
    {
      "src": "]: ] [25996,25997]",
      "dest": "]: ] [35174,35175]"
    },
    {
      "src": "primitive_type [31450,31455]",
      "dest": "primitive_type [43275,43280]"
    },
    {
      "src": "(: ( [24058,24059]",
      "dest": "(: ( [33236,33237]"
    },
    {
      "src": "string: string [26496,26502]",
      "dest": "string: string [35674,35680]"
    },
    {
      "src": "identifier: abi [26562,26565]",
      "dest": "identifier: abi [35740,35743]"
    },
    {
      "src": "address: address [36713,36720]",
      "dest": "address: address [48330,48337]"
    },
    {
      "src": "source_file [0,40496]",
      "dest": "source_file [0,52393]"
    },
    {
      "src": "identifier: sender [21617,21623]",
      "dest": "identifier: sender [30795,30801]"
    },
    {
      "src": "+: + [34362,34363]",
      "dest": "+: + [45964,45965]"
    },
    {
      "src": "private: private [34626,34633]",
      "dest": "private: private [46181,46188]"
    },
    {
      "src": "type_name [8810,8814]",
      "dest": "type_name [24263,24267]"
    },
    {
      "src": "uint256: uint256 [11329,11336]",
      "dest": "uint256: uint256 [26782,26789]"
    },
    {
      "src": "add: add [31534,31537]",
      "dest": "add: add [43356,43359]"
    },
    {
      "src": "return_type_definition [16850,16872]",
      "dest": "return_type_definition [13660,13682]"
    },
    {
      "src": "variable_declaration_statement [38587,38639]",
      "dest": "variable_declaration_statement [50243,50295]"
    },
    {
      "src": "library_declaration [11627,17711]",
      "dest": "library_declaration [8437,14521]"
    },
    {
      "src": "type_name [38587,38594]",
      "dest": "type_name [50243,50250]"
    },
    {
      "src": "event_paramater [21601,21623]",
      "dest": "event_paramater [30779,30801]"
    },
    {
      "src": "returns: returns [30633,30640]",
      "dest": "returns: returns [8154,8161]"
    },
    {
      "src": "assembly_statement [34789,34856]",
      "dest": "assembly_statement [46344,46411]"
    },
    {
      "src": "{: { [9288,9289]",
      "dest": "{: { [24741,24742]"
    },
    {
      "src": "[: [ [21816,21817]",
      "dest": "[: [ [30994,30995]"
    },
    {
      "src": "if_statement [33293,33714]",
      "dest": "if_statement [44901,45334]"
    },
    {
      "src": "type_name [29760,29767]",
      "dest": "type_name [42268,42275]"
    },
    {
      "src": "(: ( [9793,9794]",
      "dest": "(: ( [25246,25247]"
    },
    {
      "src": "(: ( [38628,38629]",
      "dest": "(: ( [50284,50285]"
    },
    {
      "src": "address: address [39771,39778]",
      "dest": "address: address [51516,51523]"
    },
    {
      "src": "identifier: depositData [38615,38626]",
      "dest": "identifier: depositData [50271,50282]"
    },
    {
      "src": "): ) [33168,33169]",
      "dest": "): ) [44765,44766]"
    },
    {
      "src": "visibility [472,480]",
      "dest": "visibility [472,480]"
    },
    {
      "src": "(: ( [9105,9106]",
      "dest": "(: ( [24558,24559]"
    },
    {
      "src": "): ) [24152,24153]",
      "dest": "): ) [33330,33331]"
    },
    {
      "src": ",: , [33578,33579]",
      "dest": ",: , [45198,45199]"
    },
    {
      "src": "{: { [13862,13863]",
      "dest": "{: { [10672,10673]"
    },
    {
      "src": "member_expression [10717,10727]",
      "dest": "member_expression [26170,26180]"
    },
    {
      "src": "{: { [20322,20323]",
      "dest": "{: { [29500,29501]"
    },
    {
      "src": "function_definition [37826,38036]",
      "dest": "function_definition [49480,49690]"
    },
    {
      "src": "call_expression [25985,26018]",
      "dest": "call_expression [35163,35196]"
    },
    {
      "src": "uint256: uint256 [7563,7570]",
      "dest": "uint256: uint256 [23016,23023]"
    },
    {
      "src": "identifier: AddressSet [8753,8763]",
      "dest": "identifier: AddressSet [24206,24216]"
    },
    {
      "src": "solidity: solidity [36869,36877]",
      "dest": "solidity: solidity [35543,35551]"
    },
    {
      "src": "return_statement [15047,15115]",
      "dest": "return_statement [11857,11925]"
    },
    {
      "src": "primitive_type [21576,21583]",
      "dest": "primitive_type [30754,30761]"
    },
    {
      "src": "address: address [25945,25952]",
      "dest": "address: address [35123,35130]"
    },
    {
      "src": "return: return [34325,34331]",
      "dest": "return: return [45927,45933]"
    },
    {
      "src": "identifier: item [27760,27764]",
      "dest": "identifier: item [37819,37823]"
    },
    {
      "src": "): ) [35279,35280]",
      "dest": "): ) [46881,46882]"
    },
    {
      "src": "indexed: indexed [21584,21591]",
      "dest": "indexed: indexed [30762,30769]"
    },
    {
      "src": "type_name [28113,28122]",
      "dest": "type_name [39256,39265]"
    },
    {
      "src": "returns: returns [1905,1912]",
      "dest": "returns: returns [1905,1912]"
    },
    {
      "src": "]: ] [39308,39309]",
      "dest": "]: ] [51053,51054]"
    },
    {
      "src": "yul_decimal_number: 0 [32640,32641]",
      "dest": "yul_decimal_number: 0 [44196,44197]"
    },
    {
      "src": "identifier: byte0 [32684,32689]",
      "dest": "identifier: byte0 [44240,44245]"
    },
    {
      "src": "call_expression [31224,31299]",
      "dest": "call_expression [41522,41544]"
    },
    {
      "src": "+: + [32075,32076]",
      "dest": "+: + [39311,39312]"
    },
    {
      "src": "identifier: item [29722,29726]",
      "dest": "identifier: item [42230,42234]"
    },
    {
      "src": "identifier: rootToken [38748,38757]",
      "dest": "identifier: rootToken [50539,50548]"
    },
    {
      "src": "revert_statement [17654,17675]",
      "dest": "revert_statement [14464,14485]"
    },
    {
      "src": "state_variable_declaration [20409,20454]",
      "dest": "state_variable_declaration [29587,29632]"
    },
    {
      "src": "=: = [6872,6873]",
      "dest": "=: = [22325,22326]"
    },
    {
      "src": "comment: /**      * @notice Validates and processes exit while withdraw process      * @dev Validates exit log emitted on sidechain. Reverts if validation fails.      * @dev Processes withdraw based on custom logic. Example: transfer ERC20/ERC721, mint ERC721 if mintable withdraw      * @param sender Address      * @param rootToken Token which gets withdrawn      * @param logRLPList Valid sidechain log for data like amount, token id etc.      */ [36230,36677]",
      "dest": "comment: /**      * @notice Validates and processes exit while withdraw process      * @dev Validates exit log emitted on sidechain. Reverts if validation fails.      * @dev Processes withdraw based on custom logic. Example: transfer ERC20/ERC721, mint ERC721 if mintable withdraw      * @param sender Address      * @param rootToken Token which gets withdrawn      * @param logRLPList Valid sidechain log for data like amount, token id etc.      */ [47847,48294]"
    },
    {
      "src": "return: return [7382,7388]",
      "dest": "return: return [22835,22841]"
    },
    {
      "src": "parameter [9052,9056]",
      "dest": "parameter [24505,24509]"
    },
    {
      "src": "primitive_type [9098,9105]",
      "dest": "primitive_type [24551,24558]"
    },
    {
      "src": "identifier: _add [10167,10171]",
      "dest": "identifier: _add [25620,25624]"
    },
    {
      "src": "identifier: RLPReader [37286,37295]",
      "dest": "identifier: RLPReader [48907,48916]"
    },
    {
      "src": ".: . [30744,30745]",
      "dest": ".: . [43169,43170]"
    },
    {
      "src": "(: ( [26578,26579]",
      "dest": "(: ( [35756,35757]"
    },
    {
      "src": "external: external [36799,36807]",
      "dest": "external: external [48416,48424]"
    },
    {
      "src": "identifier: account [23670,23677]",
      "dest": "identifier: account [32848,32855]"
    },
    {
      "src": "identifier: result [30446,30452]",
      "dest": "identifier: result [42633,42639]"
    },
    {
      "src": "primitive_type [2812,2819]",
      "dest": "primitive_type [2812,2819]"
    },
    {
      "src": "type_name [3316,3323]",
      "dest": "type_name [18769,18776]"
    },
    {
      "src": "bytes: bytes [16022,16027]",
      "dest": "bytes: bytes [12832,12837]"
    },
    {
      "src": "): ) [30798,30799]",
      "dest": "): ) [43177,43178]"
    },
    {
      "src": "identifier: spender [2803,2810]",
      "dest": "identifier: spender [2803,2810]"
    },
    {
      "src": "yul_function_call [34817,34841]",
      "dest": "yul_function_call [46372,46396]"
    },
    {
      "src": "(: ( [16858,16859]",
      "dest": "(: ( [13668,13669]"
    },
    {
      "src": "identifier: _contains [10707,10716]",
      "dest": "identifier: _contains [26160,26169]"
    },
    {
      "src": ",: , [29375,29376]",
      "dest": ",: , [41327,41328]"
    },
    {
      "src": "array_access [5356,5375]",
      "dest": "array_access [20809,20828]"
    },
    {
      "src": "type_name [8455,8462]",
      "dest": "type_name [23908,23915]"
    },
    {
      "src": "call_argument [21840,21847]",
      "dest": "call_argument [31018,31025]"
    },
    {
      "src": "{: { [17466,17467]",
      "dest": "{: { [14276,14277]"
    },
    {
      "src": "(: ( [24023,24024]",
      "dest": "(: ( [33201,33202]"
    },
    {
      "src": ",: , [16812,16813]",
      "dest": ",: , [13622,13623]"
    },
    {
      "src": "identifier: _values [5382,5389]",
      "dest": "identifier: _values [20835,20842]"
    },
    {
      "src": "address: address [16436,16443]",
      "dest": "address: address [13246,13253]"
    },
    {
      "src": "type_name [2787,2794]",
      "dest": "type_name [2787,2794]"
    },
    {
      "src": ",: , [15522,15523]",
      "dest": ",: , [12332,12333]"
    },
    {
      "src": "internal: internal [12274,12282]",
      "dest": "internal: internal [9084,9092]"
    },
    {
      "src": "parameter [5135,5139]",
      "dest": "parameter [20588,20592]"
    },
    {
      "src": ",: , [29915,29916]",
      "dest": ",: , [6181,6182]"
    },
    {
      "src": "if: if [5152,5154]",
      "dest": "if: if [20605,20607]"
    },
    {
      "src": "primitive_type [8862,8869]",
      "dest": "primitive_type [24315,24322]"
    },
    {
      "src": "block_statement [34774,34932]",
      "dest": "block_statement [46329,46487]"
    },
    {
      "src": "identifier: index [22801,22806]",
      "dest": "identifier: index [31979,31984]"
    },
    {
      "src": "): ) [35280,35281]",
      "dest": "): ) [46882,46883]"
    },
    {
      "src": "internal: internal [30619,30627]",
      "dest": "internal: internal [42806,42814]"
    },
    {
      "src": "identifier: value [10737,10742]",
      "dest": "identifier: value [26190,26195]"
    },
    {
      "src": "}: } [32388,32389]",
      "dest": "}: } [43956,43957]"
    },
    {
      "src": "uint256: uint256 [8537,8544]",
      "dest": "uint256: uint256 [23990,23997]"
    },
    {
      "src": "call_expression [7000,7017]",
      "dest": "call_expression [22453,22470]"
    },
    {
      "src": "identifier: UintSet [11308,11315]",
      "dest": "identifier: UintSet [26761,26768]"
    },
    {
      "src": "type_name [25480,25487]",
      "dest": "type_name [34658,34665]"
    },
    {
      "src": ".: . [39345,39346]",
      "dest": ".: . [51090,51091]"
    },
    {
      "src": "[: [ [40080,40081]",
      "dest": "[: [ [51823,51824]"
    },
    {
      "src": "yul_identifier [30432,30438]",
      "dest": "yul_identifier [42619,42625]"
    },
    {
      "src": "returns: returns [8479,8486]",
      "dest": "returns: returns [23932,23939]"
    },
    {
      "src": "internal: internal [9728,9736]",
      "dest": "internal: internal [25181,25189]"
    },
    {
      "src": "comment: // @return number of bytes until the data [33756,33797]",
      "dest": "comment: // @return number of bytes until the data [45376,45417]"
    },
    {
      "src": "uint256: uint256 [34584,34591]",
      "dest": "uint256: uint256 [8101,8108]"
    },
    {
      "src": "call_argument [24780,24829]",
      "dest": "call_argument [33958,34007]"
    },
    {
      "src": "yul_assignment [33933,33964]",
      "dest": "yul_assignment [45544,45575]"
    },
    {
      "src": "event_paramater [20870,20903]",
      "dest": "event_paramater [30048,30081]"
    },
    {
      "src": "(: ( [17017,17018]",
      "dest": "(: ( [13827,13828]"
    },
    {
      "src": "variable_declaration_statement [29266,29278]",
      "dest": "variable_declaration_statement [40296,40322]"
    },
    {
      "src": "yul_decimal_number: 0 [28877,28878]",
      "dest": "yul_decimal_number: 0 [39912,39913]"
    },
    {
      "src": "(: ( [13880,13881]",
      "dest": "(: ( [10690,10691]"
    },
    {
      "src": ".: . [39374,39375]",
      "dest": ".: . [51119,51120]"
    },
    {
      "src": "return: return [18453,18459]",
      "dest": "return: return [27631,27637]"
    },
    {
      "src": "yul_function_call [33572,33588]",
      "dest": "yul_function_call [45192,45208]"
    },
    {
      "src": "number_literal: 0 [28395,28396]",
      "dest": "number_literal: 0 [39388,39389]"
    },
    {
      "src": "parameter [2260,2274]",
      "dest": "parameter [2260,2274]"
    },
    {
      "src": "expression_statement [5195,5219]",
      "dest": "expression_statement [20648,20672]"
    },
    {
      "src": "): ) [20437,20438]",
      "dest": "): ) [29615,29616]"
    },
    {
      "src": "variable_declaration [32017,32030]",
      "dest": "variable_declaration [43685,43695]"
    },
    {
      "src": "identifier: result [30432,30438]",
      "dest": "identifier: result [42619,42625]"
    },
    {
      "src": "): ) [24868,24869]",
      "dest": "): ) [34046,34047]"
    },
    {
      "src": "string_literal [24063,24113]",
      "dest": "string_literal [33241,33291]"
    },
    {
      "src": "indexed: indexed [37659,37666]",
      "dest": "indexed: indexed [49313,49320]"
    },
    {
      "src": "type_name [22779,22786]",
      "dest": "type_name [31957,31964]"
    },
    {
      "src": "type_name [27946,27953]",
      "dest": "type_name [39125,39132]"
    },
    {
      "src": "type_name [30203,30210]",
      "dest": "type_name [6104,6111]"
    },
    {
      "src": "(: ( [38561,38562]",
      "dest": "(: ( [50215,50216]"
    },
    {
      "src": "internal: internal [13853,13861]",
      "dest": "internal: internal [10663,10671]"
    },
    {
      "src": "(: ( [39705,39706]",
      "dest": "(: ( [51450,51451]"
    },
    {
      "src": "): ) [32768,32769]",
      "dest": "): ) [44347,44348]"
    },
    {
      "src": "identifier: set [10485,10488]",
      "dest": "identifier: set [25938,25941]"
    },
    {
      "src": "): ) [21763,21764]",
      "dest": "): ) [30941,30942]"
    },
    {
      "src": "call_argument [39265,39277]",
      "dest": "call_argument [51010,51022]"
    },
    {
      "src": "yul_path [27697,27703]",
      "dest": "yul_path [37756,37762]"
    },
    {
      "src": "): ) [16577,16578]",
      "dest": "): ) [13387,13388]"
    },
    {
      "src": "}: } [23196,23197]",
      "dest": "}: } [32374,32375]"
    },
    {
      "src": "{: { [16036,16037]",
      "dest": "{: { [12846,12847]"
    },
    {
      "src": "): ) [12784,12785]",
      "dest": "): ) [9594,9595]"
    },
    {
      "src": "primitive_type [40390,40397]",
      "dest": "primitive_type [52133,52140]"
    },
    {
      "src": "member_expression [22120,22140]",
      "dest": "member_expression [31298,31318]"
    },
    {
      "src": "address: address [21576,21583]",
      "dest": "address: address [30754,30761]"
    },
    {
      "src": "identifier: memPtr [27773,27779]",
      "dest": "identifier: memPtr [37832,37838]"
    },
    {
      "src": "++: ++ [28410,28412]",
      "dest": "++: ++ [39403,39405]"
    },
    {
      "src": "identifier: len [32151,32154]",
      "dest": "identifier: len [43810,43813]"
    },
    {
      "src": "(: ( [1913,1914]",
      "dest": "(: ( [1913,1914]"
    },
    {
      "src": "): ) [31798,31799]",
      "dest": "): ) [43604,43605]"
    },
    {
      "src": "[: [ [24030,24031]",
      "dest": "[: [ [33208,33209]"
    },
    {
      "src": "identifier: amount [40478,40484]",
      "dest": "identifier: amount [52375,52381]"
    },
    {
      "src": "member_expression [31342,31353]",
      "dest": "member_expression [38637,38648]"
    },
    {
      "src": "): ) [34221,34222]",
      "dest": "): ) [45822,45823]"
    },
    {
      "src": ".: . [31385,31386]",
      "dest": ".: . [38720,38721]"
    },
    {
      "src": "assembly_statement [30983,31041]",
      "dest": "assembly_statement [42972,43030]"
    },
    {
      "src": "primitive_type [9751,9758]",
      "dest": "primitive_type [25204,25211]"
    },
    {
      "src": "assembly: assembly [32884,32892]",
      "dest": "assembly: assembly [44465,44473]"
    },
    {
      "src": "bool: bool [10453,10457]",
      "dest": "bool: bool [25906,25910]"
    },
    {
      "src": "identifier: WORD_SIZE [34911,34920]",
      "dest": "identifier: WORD_SIZE [46466,46475]"
    },
    {
      "src": "(: ( [28885,28886]",
      "dest": "(: ( [39920,39921]"
    },
    {
      "src": "identifier: Set [7973,7976]",
      "dest": "identifier: Set [23426,23429]"
    },
    {
      "src": "identifier: set [8517,8520]",
      "dest": "identifier: set [23970,23973]"
    },
    {
      "src": "uint256: uint256 [22793,22800]",
      "dest": "uint256: uint256 [31971,31978]"
    },
    {
      "src": "type_alias [37318,37327]",
      "dest": "type_alias [48939,48948]"
    },
    {
      "src": "return_type_definition [33856,33873]",
      "dest": "return_type_definition [5193,5210]"
    },
    {
      "src": "yul_identifier [35136,35140]",
      "dest": "yul_identifier [46730,46734]"
    },
    {
      "src": "identifier: account [24712,24719]",
      "dest": "identifier: account [33890,33897]"
    },
    {
      "src": "call_argument [30726,30748]",
      "dest": "call_argument [43165,43177]"
    },
    {
      "src": "function_definition [10838,10952]",
      "dest": "function_definition [26291,26405]"
    },
    {
      "src": "call_expression [10925,10944]",
      "dest": "call_expression [26378,26397]"
    },
    {
      "src": "function: function [26470,26478]",
      "dest": "function: function [35648,35656]"
    },
    {
      "src": "(: ( [26051,26052]",
      "dest": "(: ( [35229,35230]"
    },
    {
      "src": "expression_statement [18562,18567]",
      "dest": "expression_statement [27740,27745]"
    },
    {
      "src": "return: return [34664,34670]",
      "dest": "return: return [46219,46225]"
    },
    {
      "src": "): ) [29779,29780]",
      "dest": "): ) [42287,42288]"
    },
    {
      "src": "string_literal [13914,13945]",
      "dest": "string_literal [10724,10755]"
    },
    {
      "src": "call_argument [38748,38757]",
      "dest": "call_argument [50539,50548]"
    },
    {
      "src": "pragma_directive [94,117]",
      "dest": "pragma_directive [94,117]"
    },
    {
      "src": "variable_declaration [40053,40067]",
      "dest": "variable_declaration [51796,51810]"
    },
    {
      "src": "identifier: data [16465,16469]",
      "dest": "identifier: data [13275,13279]"
    },
    {
      "src": "internal: internal [15006,15014]",
      "dest": "internal: internal [11816,11824]"
    },
    {
      "src": "call_argument [26058,26065]",
      "dest": "call_argument [35236,35243]"
    },
    {
      "src": "uint256: uint256 [32494,32501]",
      "dest": "uint256: uint256 [16859,16866]"
    },
    {
      "src": "(: ( [34196,34197]",
      "dest": "(: ( [45797,45798]"
    },
    {
      "src": "primitive_type [3302,3309]",
      "dest": "primitive_type [18755,18762]"
    },
    {
      "src": "external: external [1145,1153]",
      "dest": "external: external [1145,1153]"
    },
    {
      "src": "): ) [8492,8493]",
      "dest": "): ) [23945,23946]"
    },
    {
      "src": "state_variable_declaration [36918,36938]",
      "dest": "state_variable_declaration [48535,48555]"
    },
    {
      "src": "address: address [15954,15961]",
      "dest": "address: address [12764,12771]"
    },
    {
      "src": "member_expression [5378,5389]",
      "dest": "member_expression [20831,20842]"
    },
    {
      "src": "identifier: account [23500,23507]",
      "dest": "identifier: account [32678,32685]"
    },
    {
      "src": "expression_statement [25861,25896]",
      "dest": "expression_statement [35039,35074]"
    },
    {
      "src": "pragma_directive [17802,17825]",
      "dest": "pragma_directive [14622,14645]"
    },
    {
      "src": "\": \" [29917,29918]",
      "dest": "\": \" [6186,6187]"
    },
    {
      "src": "identifier: LIST_LONG_START [34341,34356]",
      "dest": "identifier: LIST_LONG_START [45943,45958]"
    },
    {
      "src": "bytes32: bytes32 [20418,20425]",
      "dest": "bytes32: bytes32 [29596,29603]"
    },
    {
      "src": "calldata: calldata [36185,36193]",
      "dest": "calldata: calldata [47802,47810]"
    },
    {
      "src": "type_name [16796,16803]",
      "dest": "type_name [13606,13613]"
    },
    {
      "src": "call_expression [14056,14091]",
      "dest": "call_expression [10866,10901]"
    },
    {
      "src": "comment: // for accounts without code, i.e. `keccak256('')` [12499,12549]",
      "dest": "comment: // for accounts without code, i.e. `keccak256('')` [9309,9359]"
    },
    {
      "src": ",: , [23668,23669]",
      "dest": ",: , [32846,32847]"
    },
    {
      "src": "abstract: abstract [18339,18347]",
      "dest": "abstract: abstract [27517,27525]"
    },
    {
      "src": "identifier: _owner [37978,37984]",
      "dest": "identifier: _owner [49632,49638]"
    },
    {
      "src": "identifier: len [30851,30854]",
      "dest": "identifier: len [42887,42890]"
    },
    {
      "src": "uint256: uint256 [27648,27655]",
      "dest": "uint256: uint256 [16894,16901]"
    },
    {
      "src": "call_argument [26579,26589]",
      "dest": "call_argument [35757,35767]"
    },
    {
      "src": "comment: /**      * @dev Returns the remaining number of tokens that `spender` will be      * allowed to spend on behalf of `owner` through {transferFrom}. This is      * zero by default.      *      * This value changes when {approve} or {transferFrom} are called.      */ [818,1088]",
      "dest": "comment: /**      * @dev Returns the remaining number of tokens that `spender` will be      * allowed to spend on behalf of `owner` through {transferFrom}. This is      * zero by default.      *      * This value changes when {approve} or {transferFrom} are called.      */ [818,1088]"
    },
    {
      "src": "memory: memory [16821,16827]",
      "dest": "memory: memory [13631,13637]"
    },
    {
      "src": "type_name [31099,31106]",
      "dest": "type_name [43088,43095]"
    },
    {
      "src": "function_definition [32473,33748]",
      "dest": "function_definition [44041,45368]"
    },
    {
      "src": "identifier: _roles [20447,20453]",
      "dest": "identifier: _roles [29625,29631]"
    },
    {
      "src": "identifier: _indexes [5871,5879]",
      "dest": "identifier: _indexes [21324,21332]"
    },
    {
      "src": "function_definition [7507,7616]",
      "dest": "function_definition [22960,23069]"
    },
    {
      "src": "(: ( [33946,33947]",
      "dest": "(: ( [45557,45558]"
    },
    {
      "src": "): ) [470,471]",
      "dest": "): ) [470,471]"
    },
    {
      "src": "identifier: target [16903,16909]",
      "dest": "identifier: target [13713,13719]"
    },
    {
      "src": "event: event [21536,21541]",
      "dest": "event: event [30714,30719]"
    },
    {
      "src": "binary_expression [16565,16595]",
      "dest": "binary_expression [13375,13405]"
    },
    {
      "src": "pragma: pragma [18822,18828]",
      "dest": "pragma: pragma [18896,18902]"
    },
    {
      "src": "(: ( [25930,25931]",
      "dest": "(: ( [35108,35109]"
    },
    {
      "src": "bool: bool [804,808]",
      "dest": "bool: bool [804,808]"
    },
    {
      "src": "struct_member [4694,4712]",
      "dest": "struct_member [20147,20165]"
    },
    {
      "src": "comment: // shfit to the correct location if neccesary [30339,30384]",
      "dest": "comment: // shfit to the correct location if neccesary [42526,42571]"
    },
    {
      "src": "): ) [34840,34841]",
      "dest": "): ) [46395,46396]"
    },
    {
      "src": "number_literal: 1 [34308,34309]",
      "dest": "number_literal: 1 [45897,45898]"
    },
    {
      "src": "parameter [9014,9027]",
      "dest": "parameter [24467,24480]"
    },
    {
      "src": "type_cast_expression [40390,40403]",
      "dest": "type_cast_expression [52133,52146]"
    },
    {
      "src": "type_name [32017,32024]",
      "dest": "type_name [6732,6739]"
    },
    {
      "src": "number_literal: 32 [27314,27316]",
      "dest": "number_literal: 32 [36498,36500]"
    },
    {
      "src": "call_argument [9098,9121]",
      "dest": "call_argument [24551,24574]"
    },
    {
      "src": "uint256: uint256 [11394,11401]",
      "dest": "uint256: uint256 [26847,26854]"
    },
    {
      "src": "member_expression [17255,17272]",
      "dest": "member_expression [14065,14082]"
    },
    {
      "src": "array_access [7088,7114]",
      "dest": "array_access [22541,22567]"
    },
    {
      "src": "identifier: require [24747,24754]",
      "dest": "identifier: require [33925,33932]"
    },
    {
      "src": "bool: bool [14038,14042]",
      "dest": "bool: bool [10848,10852]"
    },
    {
      "src": "identifier: accountHash [12817,12828]",
      "dest": "identifier: accountHash [9627,9638]"
    },
    {
      "src": "identifier: msg [18460,18463]",
      "dest": "identifier: msg [27638,27641]"
    },
    {
      "src": "private: private [8005,8012]",
      "dest": "private: private [23458,23465]"
    },
    {
      "src": "=: = [27185,27186]",
      "dest": "=: = [36364,36365]"
    },
    {
      "src": "identifier: item [31246,31250]",
      "dest": "identifier: item [41530,41534]"
    },
    {
      "src": "return_statement [21803,21849]",
      "dest": "return_statement [30981,31027]"
    },
    {
      "src": "binary_expression [12832,12847]",
      "dest": "binary_expression [9642,9657]"
    },
    {
      "src": "identifier: byte0 [32931,32936]",
      "dest": "identifier: byte0 [44512,44517]"
    },
    {
      "src": ",: , [5170,5171]",
      "dest": ",: , [20623,20624]"
    },
    {
      "src": "identifier: push [5207,5211]",
      "dest": "identifier: push [20660,20664]"
    },
    {
      "src": "type_name [5728,5732]",
      "dest": "type_name [21181,21185]"
    },
    {
      "src": "[: [ [7401,7402]",
      "dest": "[: [ [22854,22855]"
    },
    {
      "src": "member_expression [5378,5396]",
      "dest": "member_expression [20831,20849]"
    },
    {
      "src": "identifier: set [7000,7003]",
      "dest": "identifier: set [22453,22456]"
    },
    {
      "src": "type_name [10110,10117]",
      "dest": "type_name [25563,25570]"
    },
    {
      "src": "returns: returns [7356,7363]",
      "dest": "returns: returns [22809,22816]"
    },
    {
      "src": "identifier: _values [8142,8149]",
      "dest": "identifier: _values [23595,23602]"
    },
    {
      "src": "uint256: uint256 [9279,9286]",
      "dest": "uint256: uint256 [24732,24739]"
    },
    {
      "src": "type_name [23105,23112]",
      "dest": "type_name [32283,32290]"
    },
    {
      "src": "identifier: LockedMintableERC20 [37621,37640]",
      "dest": "identifier: LockedMintableERC20 [49275,49294]"
    },
    {
      "src": "identifier: len [30046,30049]",
      "dest": "identifier: len [37550,37553]"
    },
    {
      "src": "call_expression [39410,39432]",
      "dest": "call_expression [51155,51177]"
    },
    {
      "src": "identifier: destPtr [31601,31608]",
      "dest": "identifier: destPtr [43409,43416]"
    },
    {
      "src": "state_variable_declaration [27105,27146]",
      "dest": "state_variable_declaration [36283,36324]"
    },
    {
      "src": "identifier: _length [7516,7523]",
      "dest": "identifier: _length [22969,22976]"
    },
    {
      "src": "function: function [16405,16413]",
      "dest": "function: function [13215,13223]"
    },
    {
      "src": "assembly_statement [28839,28905]",
      "dest": "assembly_statement [39874,39940]"
    },
    {
      "src": "): ) [39820,39821]",
      "dest": "): ) [51565,51566]"
    },
    {
      "src": "comment: // According to EIP-1052, 0x0 is the value returned for not-yet created accounts [12314,12394]",
      "dest": "comment: // According to EIP-1052, 0x0 is the value returned for not-yet created accounts [9124,9204]"
    },
    {
      "src": "(: ( [11401,11402]",
      "dest": "(: ( [26854,26855]"
    },
    {
      "src": "): ) [1143,1144]",
      "dest": "): ) [1143,1144]"
    },
    {
      "src": ",: , [8775,8776]",
      "dest": ",: , [24228,24229]"
    },
    {
      "src": ",: , [40403,40404]",
      "dest": ",: , [52146,52147]"
    },
    {
      "src": "uint256: uint256 [2569,2576]",
      "dest": "uint256: uint256 [2569,2576]"
    },
    {
      "src": "expression_statement [28524,28550]",
      "dest": "expression_statement [39518,39544]"
    },
    {
      "src": "identifier: require [13873,13880]",
      "dest": "identifier: require [10683,10690]"
    },
    {
      "src": "(: ( [313,314]",
      "dest": "(: ( [313,314]"
    },
    {
      "src": "function_definition [39144,40493]",
      "dest": "function_definition [50889,52390]"
    },
    {
      "src": "identifier: toDeleteIndex [6754,6767]",
      "dest": "identifier: toDeleteIndex [22207,22220]"
    },
    {
      "src": ",: , [36995,36996]",
      "dest": ",: , [48612,48613]"
    },
    {
      "src": "identifier: value [2820,2825]",
      "dest": "identifier: value [2820,2825]"
    },
    {
      "src": "identifier: item [29996,30000]",
      "dest": "identifier: item [41591,41595]"
    },
    {
      "src": "function: function [7292,7300]",
      "dest": "function: function [22745,22753]"
    },
    {
      "src": "parameter [7328,7341]",
      "dest": "parameter [22781,22794]"
    },
    {
      "src": "yul_identifier [31523,31530]",
      "dest": "yul_identifier [43345,43352]"
    },
    {
      "src": "identifier: _msgSender [26067,26077]",
      "dest": "identifier: _msgSender [35245,35255]"
    },
    {
      "src": "uint256: uint256 [2812,2819]",
      "dest": "uint256: uint256 [2812,2819]"
    },
    {
      "src": "(: ( [9785,9786]",
      "dest": "(: ( [25238,25239]"
    },
    {
      "src": "type_cast_expression [8529,8552]",
      "dest": "type_cast_expression [23982,24005]"
    },
    {
      "src": "{: { [37883,37884]",
      "dest": "{: { [49537,49538]"
    },
    {
      "src": "identifier: _roles [22120,22126]",
      "dest": "identifier: _roles [31298,31304]"
    },
    {
      "src": "}: } [7205,7206]",
      "dest": "}: } [22658,22659]"
    },
    {
      "src": ".: . [30045,30046]",
      "dest": ".: . [37549,37550]"
    },
    {
      "src": "identifier: adminRole [23180,23189]",
      "dest": "identifier: adminRole [32358,32367]"
    },
    {
      "src": "comment: /**      * @dev Sets `adminRole` as ``role``'s admin role.      *      * Emits a {RoleAdminChanged} event.      */ [25580,25698]",
      "dest": "comment: /**      * @dev Sets `adminRole` as ``role``'s admin role.      *      * Emits a {RoleAdminChanged} event.      */ [34758,34876]"
    },
    {
      "src": "call_expression [29627,29687]",
      "dest": "call_expression [42172,42195]"
    },
    {
      "src": "call_expression [28314,28341]",
      "dest": "call_expression [43739,43766]"
    },
    {
      "src": "parenthesized_expression [38628,38637]",
      "dest": "parenthesized_expression [50284,50293]"
    },
    {
      "src": "identifier: _itemLength [32482,32493]",
      "dest": "identifier: _itemLength [44050,44061]"
    },
    {
      "src": "call_argument [32237,32244]",
      "dest": "call_argument [43895,43902]"
    },
    {
      "src": "parameter [18425,18440]",
      "dest": "parameter [27603,27618]"
    },
    {
      "src": "comment: // solhint-disable-next-line avoid-low-level-calls, avoid-call-value [13959,14027]",
      "dest": "comment: // solhint-disable-next-line avoid-low-level-calls, avoid-call-value [10769,10837]"
    },
    {
      "src": "primitive_type [2260,2267]",
      "dest": "primitive_type [2260,2267]"
    },
    {
      "src": "): ) [39353,39354]",
      "dest": "): ) [51098,51099]"
    },
    {
      "src": "member_expression [7095,7107]",
      "dest": "member_expression [22548,22560]"
    },
    {
      "src": "returns: returns [10889,10896]",
      "dest": "returns: returns [26342,26349]"
    },
    {
      "src": "function: function [11296,11304]",
      "dest": "function: function [26749,26757]"
    },
    {
      "src": "identifier: EnumerableSet [20241,20254]",
      "dest": "identifier: EnumerableSet [29419,29432]"
    },
    {
      "src": "expression_statement [24843,24870]",
      "dest": "expression_statement [34021,34048]"
    },
    {
      "src": ".: . [30000,30001]",
      "dest": ".: . [41595,41596]"
    },
    {
      "src": "memory: memory [15461,15467]",
      "dest": "memory: memory [12271,12277]"
    },
    {
      "src": "string [39862,39904]",
      "dest": "string [51607,51649]"
    },
    {
      "src": "identifier: index [8076,8081]",
      "dest": "identifier: index [23529,23534]"
    },
    {
      "src": "call_argument [11406,11416]",
      "dest": "call_argument [26859,26869]"
    },
    {
      "src": "): ) [26620,26621]",
      "dest": "): ) [35798,35799]"
    },
    {
      "src": "): ) [32942,32943]",
      "dest": "): ) [44523,44524]"
    },
    {
      "src": "): ) [26278,26279]",
      "dest": "): ) [35456,35457]"
    },
    {
      "src": "parameter [21786,21790]",
      "dest": "parameter [30964,30968]"
    },
    {
      "src": "primitive_type [18537,18542]",
      "dest": "primitive_type [27715,27720]"
    },
    {
      "src": "variable_declaration_statement [17017,17096]",
      "dest": "variable_declaration_statement [13827,13906]"
    },
    {
      "src": "): ) [5116,5117]",
      "dest": "): ) [20569,20570]"
    },
    {
      "src": "comment: /**      * @dev Removes a value from a set. O(1).      *      * Returns true if the value was removed from the set, that is if it was      * present.      */ [8569,8731]",
      "dest": "comment: /**      * @dev Removes a value from a set. O(1).      *      * Returns true if the value was removed from the set, that is if it was      * present.      */ [24022,24184]"
    },
    {
      "src": "identifier: role [25550,25554]",
      "dest": "identifier: role [34728,34732]"
    },
    {
      "src": "=: = [6336,6337]",
      "dest": "=: = [21789,21790]"
    },
    {
      "src": "primitive_type [20905,20912]",
      "dest": "primitive_type [30083,30090]"
    },
    {
      "src": ",: , [23490,23491]",
      "dest": ",: , [32668,32669]"
    },
    {
      "src": "yul_path [33160,33167]",
      "dest": "yul_path [44757,44764]"
    },
    {
      "src": "member_expression [29382,29390]",
      "dest": "member_expression [41334,41342]"
    },
    {
      "src": "yul_path [31007,31013]",
      "dest": "yul_path [42996,43002]"
    },
    {
      "src": "returns: returns [31813,31820]",
      "dest": "returns: returns [6796,6803]"
    },
    {
      "src": "return: return [15047,15053]",
      "dest": "return: return [11857,11863]"
    },
    {
      "src": "function_body [8494,8561]",
      "dest": "function_body [23947,24014]"
    },
    {
      "src": "contract: contract [26386,26394]",
      "dest": "contract: contract [35564,35572]"
    },
    {
      "src": "identifier: src [35126,35129]",
      "dest": "identifier: src [46720,46723]"
    },
    {
      "src": "call_argument [39477,39535]",
      "dest": "call_argument [51222,51280]"
    },
    {
      "src": "variable_declaration_statement [35025,35067]",
      "dest": "variable_declaration_statement [46612,46653]"
    },
    {
      "src": "yul_path [33663,33670]",
      "dest": "yul_path [45283,45290]"
    },
    {
      "src": "comment: /**      * @dev Add a value to a set. O(1).      *      * Returns true if the value was added to the set, that is if it was not      * already present.      */ [8248,8412]",
      "dest": "comment: /**      * @dev Add a value to a set. O(1).      *      * Returns true if the value was added to the set, that is if it was not      * already present.      */ [23701,23865]"
    },
    {
      "src": "(: ( [29714,29715]",
      "dest": "(: ( [42222,42223]"
    },
    {
      "src": "new: new [28109,28112]",
      "dest": "new: new [39252,39255]"
    },
    {
      "src": "type_name [39365,39384]",
      "dest": "type_name [51110,51129]"
    },
    {
      "src": "identifier: errorMessage [17661,17673]",
      "dest": "identifier: errorMessage [14471,14483]"
    },
    {
      "src": "bytes32: bytes32 [20848,20855]",
      "dest": "bytes32: bytes32 [30026,30033]"
    },
    {
      "src": "(: ( [25809,25810]",
      "dest": "(: ( [34987,34988]"
    },
    {
      "src": ",: , [33016,33017]",
      "dest": ",: , [44597,44598]"
    },
    {
      "src": "address: address [1128,1135]",
      "dest": "address: address [1128,1135]"
    },
    {
      "src": "call_argument [16679,16685]",
      "dest": "call_argument [13489,13495]"
    },
    {
      "src": "identifier: codehash [12805,12813]",
      "dest": "identifier: codehash [9615,9623]"
    },
    {
      "src": "binary_expression [34332,34365]",
      "dest": "binary_expression [45934,45967]"
    },
    {
      "src": "}: } [26098,26099]",
      "dest": "}: } [35276,35277]"
    },
    {
      "src": "returns: returns [18528,18535]",
      "dest": "returns: returns [27706,27713]"
    },
    {
      "src": "{: { [5141,5142]",
      "dest": "{: { [20594,20595]"
    },
    {
      "src": "): ) [30474,30475]",
      "dest": "): ) [42661,42662]"
    },
    {
      "src": "type_name [4694,4703]",
      "dest": "type_name [20147,20156]"
    },
    {
      "src": ".: . [21822,21823]",
      "dest": ".: . [31000,31001]"
    },
    {
      "src": "primitive_type [10143,10147]",
      "dest": "primitive_type [25596,25600]"
    },
    {
      "src": "member_expression [16565,16586]",
      "dest": "member_expression [13375,13396]"
    },
    {
      "src": "identifier: amount [3324,3330]",
      "dest": "identifier: amount [18777,18783]"
    },
    {
      "src": "lt: lt [30401,30403]",
      "dest": "lt: lt [42588,42590]"
    },
    {
      "src": "identifier: initializer [36955,36966]",
      "dest": "identifier: initializer [48572,48583]"
    },
    {
      "src": "identifier: Set [5086,5089]",
      "dest": "identifier: Set [20539,20542]"
    },
    {
      "src": ",: , [24061,24062]",
      "dest": ",: , [33239,33240]"
    },
    {
      "src": "virtual: virtual [18408,18415]",
      "dest": "virtual: virtual [27586,27593]"
    },
    {
      "src": "yul_decimal_number: 0 [33947,33948]",
      "dest": "yul_decimal_number: 0 [45558,45559]"
    },
    {
      "src": "identifier: approve [1855,1862]",
      "dest": "identifier: approve [1855,1862]"
    },
    {
      "src": "identifier: memPtr [28502,28508]",
      "dest": "identifier: memPtr [39495,39501]"
    },
    {
      "src": "type_name [16777,16782]",
      "dest": "type_name [13587,13592]"
    },
    {
      "src": "function_body [7572,7616]",
      "dest": "function_body [23025,23069]"
    },
    {
      "src": "identifier: length [10847,10853]",
      "dest": "identifier: length [26300,26306]"
    },
    {
      "src": "yul_decimal_number: 32 [30409,30411]",
      "dest": "yul_decimal_number: 32 [42596,42598]"
    },
    {
      "src": "parameter [31822,31829]",
      "dest": "parameter [6805,6812]"
    },
    {
      "src": "return_statement [9069,9123]",
      "dest": "return_statement [24522,24576]"
    },
    {
      "src": "=>: => [20426,20428]",
      "dest": "=>: => [29604,29606]"
    },
    {
      "src": "byte: byte [28872,28876]",
      "dest": "byte: byte [39907,39911]"
    },
    {
      "src": "identifier: valueIndex [5903,5913]",
      "dest": "identifier: valueIndex [21356,21366]"
    },
    {
      "src": "identifier: account [12265,12272]",
      "dest": "identifier: account [9075,9082]"
    },
    {
      "src": "internal: internal [9256,9264]",
      "dest": "internal: internal [24709,24717]"
    },
    {
      "src": "type_name [27152,27157]",
      "dest": "type_name [36330,36335]"
    },
    {
      "src": "emit: emit [25788,25792]",
      "dest": "emit: emit [34966,34970]"
    },
    {
      "src": "visibility [23509,23515]",
      "dest": "visibility [32687,32693]"
    },
    {
      "src": "function: function [30576,30584]",
      "dest": "function: function [42763,42771]"
    },
    {
      "src": "<: < [34203,34204]",
      "dest": "<: < [45804,45805]"
    },
    {
      "src": "expression_statement [34738,34755]",
      "dest": "expression_statement [46293,46310]"
    },
    {
      "src": "identifier: RLPReader [37332,37341]",
      "dest": "identifier: RLPReader [48953,48962]"
    },
    {
      "src": "function: function [9216,9224]",
      "dest": "function: function [24669,24677]"
    },
    {
      "src": "assignment_expression [32712,32723]",
      "dest": "assignment_expression [44281,44292]"
    },
    {
      "src": ",: , [38432,38433]",
      "dest": ",: , [50086,50087]"
    },
    {
      "src": ",: , [14985,14986]",
      "dest": ",: , [11795,11796]"
    },
    {
      "src": "(: ( [29759,29760]",
      "dest": "(: ( [42267,42268]"
    },
    {
      "src": "}: } [11432,11433]",
      "dest": "}: } [26885,26886]"
    },
    {
      "src": "return_type_definition [16013,16035]",
      "dest": "return_type_definition [12823,12845]"
    },
    {
      "src": "primitive_type [6265,6272]",
      "dest": "primitive_type [21718,21725]"
    },
    {
      "src": "type_name [39928,39942]",
      "dest": "type_name [51673,51687]"
    },
    {
      "src": "identifier: UintSet [10089,10096]",
      "dest": "identifier: UintSet [25542,25549]"
    },
    {
      "src": "function_body [29503,29736]",
      "dest": "function_body [42120,42244]"
    },
    {
      "src": "memory: memory [16458,16464]",
      "dest": "memory: memory [13268,13274]"
    },
    {
      "src": "}: } [26628,26629]",
      "dest": "}: } [35806,35807]"
    },
    {
      "src": "(: ( [36702,36703]",
      "dest": "(: ( [48319,48320]"
    },
    {
      "src": "): ) [34017,34018]",
      "dest": "): ) [45628,45629]"
    },
    {
      "src": "(: ( [10484,10485]",
      "dest": "(: ( [25937,25938]"
    },
    {
      "src": ",: , [39209,39210]",
      "dest": ",: , [50954,50955]"
    },
    {
      "src": "view: view [22079,22083]",
      "dest": "view: view [31257,31261]"
    },
    {
      "src": "(: ( [3301,3302]",
      "dest": "(: ( [18754,18755]"
    },
    {
      "src": ",: , [16691,16692]",
      "dest": ",: , [13501,13502]"
    },
    {
      "src": "primitive_type [28140,28147]",
      "dest": "primitive_type [5502,5509]"
    },
    {
      "src": "type_name [37429,37436]",
      "dest": "type_name [49083,49090]"
    },
    {
      "src": "identifier: STRING_SHORT_START [27120,27138]",
      "dest": "identifier: STRING_SHORT_START [36298,36316]"
    },
    {
      "src": "primitive_type [16486,16492]",
      "dest": "primitive_type [13296,13302]"
    },
    {
      "src": "expression_statement [28429,28459]",
      "dest": "expression_statement [39422,39452]"
    },
    {
      "src": "string: string [26438,26444]",
      "dest": "string: string [35616,35622]"
    },
    {
      "src": "bytes: bytes [39220,39225]",
      "dest": "bytes: bytes [50965,50970]"
    },
    {
      "src": "identifier: offset [30259,30265]",
      "dest": "identifier: offset [38688,38694]"
    },
    {
      "src": "): ) [16140,16141]",
      "dest": "): ) [12950,12951]"
    },
    {
      "src": "parameter [29760,29779]",
      "dest": "parameter [42268,42287]"
    },
    {
      "src": "expression_statement [5356,5397]",
      "dest": "expression_statement [20809,20850]"
    },
    {
      "src": "call_argument [38810,38823]",
      "dest": "call_argument [50578,50591]"
    },
    {
      "src": "): ) [31029,31030]",
      "dest": "): ) [43018,43019]"
    },
    {
      "src": "library: library [11627,11634]",
      "dest": "library: library [8437,8444]"
    },
    {
      "src": ".: . [5381,5382]",
      "dest": ".: . [20834,20835]"
    },
    {
      "src": "identifier: DEFAULT_ADMIN_ROLE [37958,37976]",
      "dest": "identifier: DEFAULT_ADMIN_ROLE [49612,49630]"
    },
    {
      "src": "(: ( [15953,15954]",
      "dest": "(: ( [12763,12764]"
    },
    {
      "src": "yul_path [30300,30306]",
      "dest": "yul_path [42487,42493]"
    },
    {
      "src": "<: < [34067,34068]",
      "dest": "<: < [45678,45679]"
    },
    {
      "src": "primitive_type [14987,14992]",
      "dest": "primitive_type [11797,11802]"
    },
    {
      "src": "user_defined_type [10854,10861]",
      "dest": "user_defined_type [26307,26314]"
    },
    {
      "src": "expression_statement [24747,24831]",
      "dest": "expression_statement [33925,34009]"
    },
    {
      "src": ",: , [16082,16083]",
      "dest": ",: , [12892,12893]"
    },
    {
      "src": "parameter [38443,38466]",
      "dest": "parameter [50097,50120]"
    },
    {
      "src": "variable_declaration_statement [28352,28368]",
      "dest": "variable_declaration_statement [3868,3886]"
    },
    {
      "src": "binary_expression [32172,32188]",
      "dest": "binary_expression [43831,43847]"
    },
    {
      "src": "identifier: toList [27868,27874]",
      "dest": "identifier: toList [39074,39080]"
    },
    {
      "src": "comment: // topic0 is `Transfer` event sig [39537,39570]",
      "dest": "comment: // topic0 is `Transfer` event sig [51282,51315]"
    },
    {
      "src": "call_argument [40390,40403]",
      "dest": "call_argument [52133,52146]"
    },
    {
      "src": "if: if [32680,32682]",
      "dest": "if: if [44236,44238]"
    },
    {
      "src": "(: ( [39965,39966]",
      "dest": "(: ( [51710,51711]"
    },
    {
      "src": "=: = [5865,5866]",
      "dest": "=: = [21318,21319]"
    },
    {
      "src": "binary_expression [40341,40362]",
      "dest": "binary_expression [52084,52105]"
    },
    {
      "src": "primitive_type [9106,9113]",
      "dest": "primitive_type [24559,24566]"
    },
    {
      "src": "call_expression [21810,21848]",
      "dest": "call_expression [30988,31026]"
    },
    {
      "src": "identifier: withdrawer [40466,40476]",
      "dest": "identifier: withdrawer [52363,52373]"
    },
    {
      "src": "yul_variable_declaration [33109,33170]",
      "dest": "yul_variable_declaration [44706,44767]"
    },
    {
      "src": "view: view [9265,9269]",
      "dest": "view: view [24718,24722]"
    },
    {
      "src": ",: , [20868,20869]",
      "dest": ",: , [30046,30047]"
    },
    {
      "src": "variable_declaration_statement [32045,32105]",
      "dest": "variable_declaration_statement [39285,39341]"
    },
    {
      "src": "identifier: _functionCallWithValue [15487,15509]",
      "dest": "identifier: _functionCallWithValue [12297,12319]"
    },
    {
      "src": "expression_statement [16557,16639]",
      "dest": "expression_statement [13367,13449]"
    },
    {
      "src": "identifier: MANAGER_ROLE [38562,38574]",
      "dest": "identifier: MANAGER_ROLE [50216,50228]"
    },
    {
      "src": "\": \" [14119,14120]",
      "dest": "\": \" [10929,10930]"
    },
    {
      "src": "call_expression [16656,16713]",
      "dest": "call_expression [13466,13523]"
    },
    {
      "src": "call_argument [26052,26056]",
      "dest": "call_argument [35230,35234]"
    },
    {
      "src": "identifier: LIST_SHORT_START [33355,33371]",
      "dest": "identifier: LIST_SHORT_START [44963,44979]"
    },
    {
      "src": "{: { [4649,4650]",
      "dest": "{: { [20102,20103]"
    },
    {
      "src": "array_access [26182,26194]",
      "dest": "array_access [35360,35372]"
    },
    {
      "src": "yul_function_call [31534,31551]",
      "dest": "yul_function_call [43356,43373]"
    },
    {
      "src": "identifier: amount [38595,38601]",
      "dest": "identifier: amount [50251,50257]"
    },
    {
      "src": "yul_path [32996,33002]",
      "dest": "yul_path [44577,44583]"
    },
    {
      "src": "comment: // enforces 32 byte length [30544,30570]",
      "dest": "comment: // enforces 32 byte length [42731,42757]"
    },
    {
      "src": "identifier: _msgSender [18381,18391]",
      "dest": "identifier: _msgSender [27559,27569]"
    },
    {
      "src": "primitive_type [21786,21790]",
      "dest": "primitive_type [30964,30968]"
    },
    {
      "src": "yul_evm_builtin [31534,31537]",
      "dest": "yul_evm_builtin [43356,43359]"
    },
    {
      "src": "identifier: account [21756,21763]",
      "dest": "identifier: account [30934,30941]"
    },
    {
      "src": "parameter [27946,27962]",
      "dest": "parameter [39125,39141]"
    },
    {
      "src": "identifier: len [34615,34618]",
      "dest": "identifier: value [15933,15938]"
    },
    {
      "src": "contract_body [27098,35302]",
      "dest": "contract_body [36276,46919]"
    },
    {
      "src": "): ) [12301,12302]",
      "dest": "): ) [9111,9112]"
    },
    {
      "src": "=: = [28056,28057]",
      "dest": "=: = [39199,39200]"
    },
    {
      "src": "(: ( [7523,7524]",
      "dest": "(: ( [22976,22977]"
    },
    {
      "src": ",: , [2274,2275]",
      "dest": ",: , [2274,2275]"
    },
    {
      "src": "<: < [32849,32850]",
      "dest": "<: < [44430,44431]"
    },
    {
      "src": "identifier: byte0 [33933,33938]",
      "dest": "identifier: byte0 [45544,45549]"
    },
    {
      "src": "function_definition [14949,15122]",
      "dest": "function_definition [11759,11932]"
    },
    {
      "src": "visibility [9256,9264]",
      "dest": "visibility [24709,24717]"
    },
    {
      "src": ".: . [18463,18464]",
      "dest": ".: . [27641,27642]"
    },
    {
      "src": "returns: returns [33856,33863]",
      "dest": "returns: returns [5193,5200]"
    },
    {
      "src": "}: } [33974,33975]",
      "dest": "}: } [45585,45586]"
    },
    {
      "src": "library: library [27080,27087]",
      "dest": "library: library [36258,36265]"
    },
    {
      "src": "call_expression [26562,26620]",
      "dest": "call_expression [35740,35798]"
    },
    {
      "src": "yul_function_call [29319,29336]",
      "dest": "yul_function_call [41271,41288]"
    },
    {
      "src": "struct: struct [4638,4644]",
      "dest": "struct: struct [20091,20097]"
    },
    {
      "src": "binary_expression [32743,32768]",
      "dest": "binary_expression [44322,44347]"
    },
    {
      "src": "): ) [5139,5140]",
      "dest": "): ) [20592,20593]"
    },
    {
      "src": "number_literal: 1 [33374,33375]",
      "dest": "number_literal: 1 [44982,44983]"
    },
    {
      "src": "\": \" [27635,27636]",
      "dest": "\": \" [5584,5585]"
    },
    {
      "src": "yul_path [33956,33962]",
      "dest": "yul_path [45567,45573]"
    },
    {
      "src": "): ) [16512,16513]",
      "dest": "): ) [13322,13323]"
    },
    {
      "src": "yul_evm_builtin [33942,33946]",
      "dest": "yul_evm_builtin [45553,45557]"
    },
    {
      "src": "pure: pure [30628,30632]",
      "dest": "pure: pure [42815,42819]"
    },
    {
      "src": "primitive_type [804,808]",
      "dest": "primitive_type [804,808]"
    },
    {
      "src": "function_body [37883,38036]",
      "dest": "function_body [49537,49690]"
    },
    {
      "src": "(: ( [26705,26706]",
      "dest": "(: ( [35883,35884]"
    },
    {
      "src": "emit_statement [26035,26081]",
      "dest": "emit_statement [35213,35259]"
    },
    {
      "src": "identifier: value [16090,16095]",
      "dest": "identifier: value [12900,12905]"
    },
    {
      "src": ",: , [40476,40477]",
      "dest": ",: , [52373,52374]"
    },
    {
      "src": "user_defined_type [10624,10631]",
      "dest": "user_defined_type [26077,26084]"
    },
    {
      "src": "struct_member [9880,9891]",
      "dest": "struct_member [25333,25344]"
    },
    {
      "src": "visibility [2311,2319]",
      "dest": "visibility [2311,2319]"
    },
    {
      "src": "call_argument [37564,37599]",
      "dest": "call_argument [49218,49253]"
    },
    {
      "src": "{: { [36969,36970]",
      "dest": "{: { [48586,48587]"
    },
    {
      "src": "{: { [33417,33418]",
      "dest": "{: { [45037,45038]"
    },
    {
      "src": "comment: // @returns raw rlp encoding in bytes [29048,29085]",
      "dest": "comment: // @returns raw rlp encoding in bytes [40979,41016]"
    },
    {
      "src": "identifier: src [34570,34573]",
      "dest": "identifier: a [8098,8099]"
    },
    {
      "src": "bytes32: bytes32 [25727,25734]",
      "dest": "bytes32: bytes32 [34905,34912]"
    },
    {
      "src": "member_expression [7590,7601]",
      "dest": "member_expression [23043,23054]"
    },
    {
      "src": "call_argument [28502,28508]",
      "dest": "call_argument [39495,39501]"
    },
    {
      "src": "yul_identifier [33648,33655]",
      "dest": "yul_identifier [45268,45275]"
    },
    {
      "src": "\": \" [14089,14090]",
      "dest": "\": \" [10899,10900]"
    },
    {
      "src": "identifier: byte0 [33347,33352]",
      "dest": "identifier: byte0 [44955,44960]"
    },
    {
      "src": "identifier: toUint [39504,39510]",
      "dest": "identifier: toUint [51249,51255]"
    },
    {
      "src": "yul_evm_builtin [33451,33454]",
      "dest": "yul_evm_builtin [45071,45074]"
    },
    {
      "src": "): ) [15539,15540]",
      "dest": "): ) [12349,12350]"
    },
    {
      "src": "function_body [29813,30536]",
      "dest": "function_body [42318,42723]"
    },
    {
      "src": "yul_identifier [33010,33016]",
      "dest": "yul_identifier [44591,44597]"
    },
    {
      "src": "yul_assignment [33221,33261]",
      "dest": "yul_assignment [44818,44858]"
    },
    {
      "src": "): ) [25960,25961]",
      "dest": "): ) [35138,35139]"
    },
    {
      "src": "is: is [2941,2943]",
      "dest": "is: is [18394,18396]"
    },
    {
      "src": "identifier: value [5111,5116]",
      "dest": "identifier: value [20564,20569]"
    },
    {
      "src": "yul_hex_number: 0xf7 [33462,33466]",
      "dest": "yul_hex_number: 0xf7 [45082,45086]"
    },
    {
      "src": "function_definition [9677,9826]",
      "dest": "function_definition [25130,25279]"
    },
    {
      "src": "identifier: role [20864,20868]",
      "dest": "identifier: role [30042,30046]"
    },
    {
      "src": "identifier: recipient [2284,2293]",
      "dest": "identifier: recipient [2284,2293]"
    },
    {
      "src": "identifier: index [9721,9726]",
      "dest": "identifier: index [25174,25179]"
    },
    {
      "src": "type_name [21576,21583]",
      "dest": "type_name [30754,30761]"
    },
    {
      "src": "primitive_type [2549,2556]",
      "dest": "primitive_type [2549,2556]"
    },
    {
      "src": "returns: returns [15446,15453]",
      "dest": "returns: returns [12256,12263]"
    },
    {
      "src": "memory: memory [28093,28099]",
      "dest": "memory: memory [39236,39242]"
    },
    {
      "src": "type_name [36766,36771]",
      "dest": "type_name [48383,48388]"
    },
    {
      "src": "identifier: sendValue [13800,13809]",
      "dest": "identifier: sendValue [10610,10619]"
    },
    {
      "src": "call_expression [37894,37936]",
      "dest": "call_expression [49548,49590]"
    },
    {
      "src": "identifier: getRoleAdmin [23092,23104]",
      "dest": "identifier: getRoleAdmin [32270,32282]"
    },
    {
      "src": "identifier: _roles [24024,24030]",
      "dest": "identifier: _roles [33202,33208]"
    },
    {
      "src": "type_name [35025,35032]",
      "dest": "type_name [46612,46616]"
    },
    {
      "src": "yul_identifier [17566,17576]",
      "dest": "yul_identifier [14376,14386]"
    },
    {
      "src": ".: . [31346,31347]",
      "dest": ".: . [38641,38642]"
    },
    {
      "src": "bytes32: bytes32 [22779,22786]",
      "dest": "bytes32: bytes32 [31957,31964]"
    },
    {
      "src": "yul_evm_builtin [35132,35135]",
      "dest": "yul_evm_builtin [46726,46729]"
    },
    {
      "src": "variable_declaration [29266,29277]",
      "dest": "variable_declaration [40296,40307]"
    },
    {
      "src": "}: } [32420,32421]",
      "dest": "}: } [43988,43989]"
    },
    {
      "src": "call_expression [15054,15114]",
      "dest": "call_expression [11864,11924]"
    },
    {
      "src": "expression_statement [29359,29392]",
      "dest": "expression_statement [41311,41344]"
    },
    {
      "src": "internal: internal [27905,27913]",
      "dest": "internal: internal [39102,39110]"
    },
    {
      "src": "identifier: memPtr [28886,28892]",
      "dest": "identifier: memPtr [39921,39927]"
    },
    {
      "src": "identifier: require [26676,26683]",
      "dest": "identifier: require [35854,35861]"
    },
    {
      "src": "primitive_type [30106,30113]",
      "dest": "primitive_type [4706,4713]"
    },
    {
      "src": "primitive_type [11329,11336]",
      "dest": "primitive_type [26782,26789]"
    },
    {
      "src": "member_expression [25816,25838]",
      "dest": "member_expression [34994,35016]"
    },
    {
      "src": "!=: != [7409,7411]",
      "dest": "!=: != [22862,22864]"
    },
    {
      "src": "}: } [25902,25903]",
      "dest": "}: } [35080,35081]"
    },
    {
      "src": "(: ( [39343,39344]",
      "dest": "(: ( [51088,51089]"
    },
    {
      "src": "): ) [9816,9817]",
      "dest": "): ) [25269,25270]"
    },
    {
      "src": "(: ( [34103,34104]",
      "dest": "(: ( [45701,45702]"
    },
    {
      "src": "identifier: RLPReader [27088,27097]",
      "dest": "identifier: RLPReader [36266,36275]"
    },
    {
      "src": "primitive_type [30642,30649]",
      "dest": "primitive_type [8163,8170]"
    },
    {
      "src": "event_paramater [2549,2567]",
      "dest": "event_paramater [2549,2567]"
    },
    {
      "src": "): ) [22806,22807]",
      "dest": "): ) [31984,31985]"
    },
    {
      "src": "(: ( [30403,30404]",
      "dest": "(: ( [42590,42591]"
    },
    {
      "src": ",: , [24778,24779]",
      "dest": ",: , [33956,33957]"
    },
    {
      "src": "}: } [11435,11436]",
      "dest": "}: } [26888,26889]"
    },
    {
      "src": "function_definition [13791,14188]",
      "dest": "function_definition [10601,10998]"
    },
    {
      "src": "comment: /**      * @notice Deposit tokens into pos portal      * @dev When `depositor` deposits tokens into pos portal, tokens get locked into predicate contract.      * @param depositor Address who wants to deposit tokens      * @param depositReceiver Address (address) who wants to receive tokens on side chain      * @param rootToken Token which gets deposited      * @param depositData Extra data for deposit (amount for ERC20, token id for ERC721 etc.) [ABI encoded]      */ [35575,36053]",
      "dest": "comment: /**      * @notice Deposit tokens into pos portal      * @dev When `depositor` deposits tokens into pos portal, tokens get locked into predicate contract.      * @param depositor Address who wants to deposit tokens      * @param depositReceiver Address (address) who wants to receive tokens on side chain      * @param rootToken Token which gets deposited      * @param depositData Extra data for deposit (amount for ERC20, token id for ERC721 etc.) [ABI encoded]      */ [47192,47670]"
    },
    {
      "src": "identifier: _values [7004,7011]",
      "dest": "identifier: _values [22457,22464]"
    },
    {
      "src": "type_name [13810,13825]",
      "dest": "type_name [10620,10635]"
    },
    {
      "src": "identifier: require [14102,14109]",
      "dest": "identifier: require [10912,10919]"
    },
    {
      "src": "): ) [5709,5710]",
      "dest": "): ) [21162,21163]"
    },
    {
      "src": "}: } [38862,38863]",
      "dest": "}: } [50607,50608]"
    },
    {
      "src": "block_statement [5920,7154]",
      "dest": "block_statement [21373,22607]"
    },
    {
      "src": "identifier: set [9708,9711]",
      "dest": "identifier: set [25161,25164]"
    },
    {
      "src": ".: . [20254,20255]",
      "dest": ".: . [29432,29433]"
    },
    {
      "src": "function: function [1094,1102]",
      "dest": "function: function [1094,1102]"
    },
    {
      "src": "type_name [16859,16864]",
      "dest": "type_name [13669,13674]"
    },
    {
      "src": "bytes32: bytes32 [23478,23485]",
      "dest": "bytes32: bytes32 [32656,32663]"
    },
    {
      "src": ":=: := [17509,17511]",
      "dest": ":=: := [14319,14321]"
    },
    {
      "src": "member_expression [10172,10182]",
      "dest": "member_expression [25625,25635]"
    },
    {
      "src": "solidity: solidity [11536,11544]",
      "dest": "solidity: solidity [8346,8354]"
    },
    {
      "src": ",: , [16698,16699]",
      "dest": ",: , [13508,13509]"
    },
    {
      "src": "let: let [33109,33112]",
      "dest": "let: let [44706,44709]"
    },
    {
      "src": "identifier: index [11418,11423]",
      "dest": "identifier: index [26871,26876]"
    },
    {
      "src": "return_type_definition [22820,22837]",
      "dest": "return_type_definition [31998,32015]"
    },
    {
      "src": "yul_identifier [32649,32655]",
      "dest": "yul_identifier [44205,44211]"
    },
    {
      "src": "view: view [325,329]",
      "dest": "view: view [325,329]"
    },
    {
      "src": "yul_function_call [28872,28894]",
      "dest": "yul_function_call [39907,39929]"
    },
    {
      "src": "public: public [22808,22814]",
      "dest": "public: public [31986,31992]"
    },
    {
      "src": "string: string [16486,16492]",
      "dest": "string: string [13296,13302]"
    },
    {
      "src": "(: ( [37640,37641]",
      "dest": "(: ( [49294,49295]"
    },
    {
      "src": "identifier: count [32370,32375]",
      "dest": "identifier: count [43938,43943]"
    },
    {
      "src": "call_argument [16084,16088]",
      "dest": "call_argument [12894,12898]"
    },
    {
      "src": "byte: byte [33942,33946]",
      "dest": "byte: byte [45553,45557]"
    },
    {
      "src": "variable_declaration [28352,28367]",
      "dest": "variable_declaration [3868,3877]"
    },
    {
      "src": "identifier: require [31224,31231]",
      "dest": "identifier: require [41522,41529]"
    },
    {
      "src": "bytes: bytes [37300,37305]",
      "dest": "bytes: bytes [48921,48926]"
    },
    {
      "src": "address: address [36738,36745]",
      "dest": "address: address [48355,48362]"
    },
    {
      "src": "yul_path [30404,30407]",
      "dest": "yul_path [42591,42594]"
    },
    {
      "src": "comment: // topics [39434,39443]",
      "dest": "comment: // topics [51179,51188]"
    },
    {
      "src": "parameter [15954,15968]",
      "dest": "parameter [12764,12778]"
    },
    {
      "src": "): ) [16943,16944]",
      "dest": "): ) [13753,13754]"
    },
    {
      "src": "constant: constant [37373,37381]",
      "dest": "constant: constant [49027,49035]"
    },
    {
      "src": "number_literal: 33 [29913,29915]",
      "dest": "number_literal: 0 [39788,39789]"
    },
    {
      "src": "{: { [27682,27683]",
      "dest": "{: { [37741,37742]"
    },
    {
      "src": "public: public [22072,22078]",
      "dest": "public: public [31250,31256]"
    },
    {
      "src": "call_argument [9798,9808]",
      "dest": "call_argument [25251,25261]"
    },
    {
      "src": "call_expression [8512,8553]",
      "dest": "call_expression [23965,24006]"
    },
    {
      "src": "primitive_type [5103,5110]",
      "dest": "primitive_type [20556,20563]"
    },
    {
      "src": "expression_statement [23653,23679]",
      "dest": "expression_statement [32831,32857]"
    },
    {
      "src": "while_statement [32165,32389]",
      "dest": "while_statement [43824,43957]"
    },
    {
      "src": "array_access [25816,25828]",
      "dest": "array_access [34994,35006]"
    },
    {
      "src": "address: address [9751,9758]",
      "dest": "address: address [25204,25211]"
    },
    {
      "src": ",: , [17030,17031]",
      "dest": ",: , [13840,13841]"
    },
    {
      "src": "type_cast_expression [16565,16578]",
      "dest": "type_cast_expression [13375,13388]"
    },
    {
      "src": "): ) [37935,37936]",
      "dest": "): ) [49589,49590]"
    },
    {
      "src": "identifier: _inner [8846,8852]",
      "dest": "identifier: _inner [24299,24305]"
    },
    {
      "src": "bytes32: bytes32 [8854,8861]",
      "dest": "bytes32: bytes32 [24307,24314]"
    },
    {
      "src": "return: return [7175,7181]",
      "dest": "return: return [22628,22634]"
    },
    {
      "src": "identifier: initializer [37871,37882]",
      "dest": "identifier: initializer [49525,49536]"
    },
    {
      "src": "pragma: pragma [36862,36868]",
      "dest": "pragma: pragma [35536,35542]"
    },
    {
      "src": "event_paramater [20848,20868]",
      "dest": "event_paramater [30026,30046]"
    },
    {
      "src": "): ) [14090,14091]",
      "dest": "): ) [10900,10901]"
    },
    {
      "src": "call_argument [31601,31608]",
      "dest": "call_argument [43409,43416]"
    },
    {
      "src": "identifier: memPtr [32068,32074]",
      "dest": "identifier: memPtr [39304,39310]"
    },
    {
      "src": "primitive_type [28283,28290]",
      "dest": "primitive_type [4839,4846]"
    },
    {
      "src": "\": \" [24112,24113]",
      "dest": "\": \" [33290,33291]"
    },
    {
      "src": "contract_body [35566,36811]",
      "dest": "contract_body [47183,48428]"
    },
    {
      "src": "[: [ [5879,5880]",
      "dest": "[: [ [21332,21333]"
    },
    {
      "src": "(: ( [30641,30642]",
      "dest": "(: ( [8162,8163]"
    },
    {
      "src": "(: ( [27759,27760]",
      "dest": "(: ( [37818,37819]"
    },
    {
      "src": "identifier: isList [27988,27994]",
      "dest": "identifier: isList [39162,39168]"
    },
    {
      "src": "call_argument [14088,14090]",
      "dest": "call_argument [10898,10900]"
    },
    {
      "src": "parameter [16436,16450]",
      "dest": "parameter [13246,13260]"
    },
    {
      "src": "returns: returns [22820,22827]",
      "dest": "returns: returns [31998,32005]"
    },
    {
      "src": "(: ( [38675,38676]",
      "dest": "(: ( [50329,50330]"
    },
    {
      "src": "identifier: value [10505,10510]",
      "dest": "identifier: value [25958,25963]"
    },
    {
      "src": "{: { [26167,26168]",
      "dest": "{: { [35345,35346]"
    },
    {
      "src": "\": \" [29651,29652]",
      "dest": "\": \" [18003,18004]"
    },
    {
      "src": "pragma_directive [35369,35391]",
      "dest": "pragma_directive [46986,47008]"
    },
    {
      "src": "{: { [30992,30993]",
      "dest": "{: { [42981,42982]"
    },
    {
      "src": "uint256: uint256 [40053,40060]",
      "dest": "uint256: uint256 [51796,51803]"
    },
    {
      "src": "binary_expression [28398,28407]",
      "dest": "binary_expression [39391,39400]"
    },
    {
      "src": "expression_statement [23535,23641]",
      "dest": "expression_statement [32713,32819]"
    },
    {
      "src": "state_mutability [31129,31133]",
      "dest": "state_mutability [43118,43122]"
    },
    {
      "src": "identifier: members [21823,21830]",
      "dest": "identifier: members [31001,31008]"
    },
    {
      "src": "{: { [16546,16547]",
      "dest": "{: { [13356,13357]"
    },
    {
      "src": "call_argument [28329,28340]",
      "dest": "call_argument [43754,43765]"
    },
    {
      "src": "): ) [33589,33590]",
      "dest": "): ) [45209,45210]"
    },
    {
      "src": "identifier: require [36980,36987]",
      "dest": "identifier: require [48597,48604]"
    },
    {
      "src": "primitive_type [30915,30922]",
      "dest": "primitive_type [15465,15472]"
    },
    {
      "src": "(: ( [23663,23664]",
      "dest": "(: ( [32841,32842]"
    },
    {
      "src": "identifier: Set [7311,7314]",
      "dest": "identifier: Set [22764,22767]"
    },
    {
      "src": "(: ( [33296,33297]",
      "dest": "(: ( [44904,44905]"
    },
    {
      "src": "identifier: LIST_LONG_START [33305,33320]",
      "dest": "identifier: LIST_LONG_START [44913,44928]"
    },
    {
      "src": "identifier: ptr [29312,29315]",
      "dest": "identifier: ptr [41264,41267]"
    },
    {
      "src": "solidity_pragma_token [37142,37156]",
      "dest": "solidity_pragma_token [36239,36253]"
    },
    {
      "src": "): ) [28128,28129]",
      "dest": "): ) [39271,39272]"
    },
    {
      "src": "number_literal: 0 [32033,32034]",
      "dest": "number_literal: 0 [43698,43699]"
    },
    {
      "src": "event_paramater [2527,2547]",
      "dest": "event_paramater [2527,2547]"
    },
    {
      "src": "uint256: uint256 [6318,6325]",
      "dest": "uint256: uint256 [21771,21778]"
    },
    {
      "src": "address: address [23492,23499]",
      "dest": "address: address [32670,32677]"
    },
    {
      "src": "function_body [7371,7421]",
      "dest": "function_body [22824,22874]"
    },
    {
      "src": "type_name [20462,20469]",
      "dest": "type_name [29640,29647]"
    },
    {
      "src": "primitive_type [2764,2771]",
      "dest": "primitive_type [2764,2771]"
    },
    {
      "src": "call_argument [16700,16712]",
      "dest": "call_argument [13510,13522]"
    },
    {
      "src": "identifier: returndata [17518,17528]",
      "dest": "identifier: returndata [14328,14338]"
    },
    {
      "src": "type_name [38415,38422]",
      "dest": "type_name [50069,50076]"
    },
    {
      "src": "solidity_version: 0.6.2 [11546,11551]",
      "dest": "solidity_version: 0.6.2 [8356,8361]"
    },
    {
      "src": "(: ( [32639,32640]",
      "dest": "(: ( [44195,44196]"
    },
    {
      "src": "identifier: item [28218,28222]",
      "dest": "identifier: item [42337,42341]"
    },
    {
      "src": "): ) [9120,9121]",
      "dest": "): ) [24573,24574]"
    },
    {
      "src": "(: ( [39430,39431]",
      "dest": "(: ( [51175,51176]"
    },
    {
      "src": "array_access [22120,22132]",
      "dest": "array_access [31298,31310]"
    },
    {
      "src": "identifier: value [8870,8875]",
      "dest": "identifier: value [24323,24328]"
    },
    {
      "src": "identifier: _revokeRole [24127,24138]",
      "dest": "identifier: _revokeRole [33305,33316]"
    },
    {
      "src": "solidity_version:  0.6.6 [37150,37156]",
      "dest": "solidity_version:  0.6.6 [36247,36253]"
    },
    {
      "src": "identifier: contains [8981,8989]",
      "dest": "identifier: contains [24434,24442]"
    },
    {
      "src": "identifier: dest [35253,35257]",
      "dest": "identifier: dest [46855,46859]"
    },
    {
      "src": "): ) [12272,12273]",
      "dest": "): ) [9082,9083]"
    },
    {
      "src": "type_name [10420,10427]",
      "dest": "type_name [25873,25880]"
    },
    {
      "src": "identifier: _inner [10721,10727]",
      "dest": "identifier: _inner [26174,26180]"
    },
    {
      "src": "parameter [16777,16794]",
      "dest": "parameter [13587,13604]"
    },
    {
      "src": "): ) [30411,30412]",
      "dest": "): ) [42598,42599]"
    },
    {
      "src": "identifier: byte0 [28921,28926]",
      "dest": "identifier: byte0 [39956,39961]"
    },
    {
      "src": "uint256: uint256 [28283,28290]",
      "dest": "uint256: uint256 [4839,4846]"
    },
    {
      "src": ":=: := [32924,32926]",
      "dest": ":=: := [44505,44507]"
    },
    {
      "src": "comment: // [40230,40232]",
      "dest": "comment: // [51973,51975]"
    },
    {
      "src": "comment: /** RLPItem conversions into data types **/ [28997,29040]",
      "dest": "comment: /** RLPItem conversions into data types **/ [40928,40971]"
    },
    {
      "src": "function_body [11376,11433]",
      "dest": "function_body [26829,26886]"
    },
    {
      "src": "identifier: role [25939,25943]",
      "dest": "identifier: role [35117,35121]"
    },
    {
      "src": "): ) [31613,31614]",
      "dest": "): ) [43421,43422]"
    },
    {
      "src": ".: . [24036,24037]",
      "dest": ".: . [33214,33215]"
    },
    {
      "src": ",: , [16450,16451]",
      "dest": ",: , [13260,13261]"
    },
    {
      "src": "primitive_type [10110,10117]",
      "dest": "primitive_type [25563,25570]"
    },
    {
      "src": ".: . [6851,6852]",
      "dest": ".: . [22304,22305]"
    },
    {
      "src": ".: . [27764,27765]",
      "dest": ".: . [37823,37824]"
    },
    {
      "src": "return_statement [34267,34310]",
      "dest": "return_statement [45856,45899]"
    },
    {
      "src": "call_expression [17059,17095]",
      "dest": "call_expression [13869,13905]"
    },
    {
      "src": ",: , [13835,13836]",
      "dest": ",: , [10645,10646]"
    },
    {
      "src": "comment: // Equivalent to contains(set, value) [5922,5959]",
      "dest": "comment: // Equivalent to contains(set, value) [21375,21412]"
    },
    {
      "src": "parameter [18537,18549]",
      "dest": "parameter [27715,27727]"
    },
    {
      "src": "identifier: memPtr [32097,32103]",
      "dest": "identifier: memPtr [39333,39339]"
    },
    {
      "src": "variable_declaration [28283,28297]",
      "dest": "variable_declaration [4839,4848]"
    },
    {
      "src": "member_expression [29901,29909]",
      "dest": "member_expression [39776,39784]"
    },
    {
      "src": "identifier: at [11305,11307]",
      "dest": "identifier: at [26758,26760]"
    },
    {
      "src": "function_definition [26107,26299]",
      "dest": "function_definition [35285,35477]"
    },
    {
      "src": "unary_expression [36988,36995]",
      "dest": "unary_expression [48605,48612]"
    },
    {
      "src": "function_definition [10076,10207]",
      "dest": "function_definition [25529,25660]"
    },
    {
      "src": "yul_identifier [12777,12784]",
      "dest": "yul_identifier [9587,9594]"
    },
    {
      "src": ",: , [23588,23589]",
      "dest": ",: , [32766,32767]"
    },
    {
      "src": "type_name [27648,27655]",
      "dest": "type_name [16894,16901]"
    },
    {
      "src": "identifier: _values [4704,4711]",
      "dest": "identifier: _values [20157,20164]"
    },
    {
      "src": "yul_identifier [27711,27715]",
      "dest": "yul_identifier [37770,37774]"
    },
    {
      "src": "type_alias [20223,20236]",
      "dest": "type_alias [29401,29414]"
    },
    {
      "src": "return_statement [29402,29416]",
      "dest": "return_statement [41354,41368]"
    },
    {
      "src": "yul_block [30413,30492]",
      "dest": "yul_block [42600,42679]"
    },
    {
      "src": "identifier: set [7323,7326]",
      "dest": "identifier: set [22776,22779]"
    },
    {
      "src": "visibility [9728,9736]",
      "dest": "visibility [25181,25189]"
    },
    {
      "src": "}: } [5478,5479]",
      "dest": "}: } [20931,20932]"
    },
    {
      "src": "identifier: AccessControl [26417,26430]",
      "dest": "identifier: AccessControl [35595,35608]"
    },
    {
      "src": "constant: constant [27204,27212]",
      "dest": "constant: constant [36383,36391]"
    },
    {
      "src": "): ) [10510,10511]",
      "dest": "): ) [25963,25964]"
    },
    {
      "src": "number_literal: 1 [34176,34177]",
      "dest": "number_literal: 1 [45777,45778]"
    },
    {
      "src": "(: ( [9313,9314]",
      "dest": "(: ( [24766,24767]"
    },
    {
      "src": "primitive_type [39220,39225]",
      "dest": "primitive_type [50965,50970]"
    },
    {
      "src": "]: ] [39383,39384]",
      "dest": "]: ] [51128,51129]"
    },
    {
      "src": "identifier: target [16769,16775]",
      "dest": "identifier: target [13579,13585]"
    },
    {
      "src": "true: true [5418,5422]",
      "dest": "true: true [20871,20875]"
    },
    {
      "src": "(: ( [16902,16903]",
      "dest": "(: ( [13712,13713]"
    },
    {
      "src": "member_expression [31381,31389]",
      "dest": "member_expression [38716,38724]"
    },
    {
      "src": "return_type_definition [795,809]",
      "dest": "return_type_definition [795,809]"
    },
    {
      "src": "type_name [29266,29273]",
      "dest": "type_name [40296,40303]"
    },
    {
      "src": "type_name [30228,30235]",
      "dest": "type_name [5157,5164]"
    },
    {
      "src": "yul_identifier [31544,31550]",
      "dest": "yul_identifier [43366,43372]"
    },
    {
      "src": "type_name [21786,21790]",
      "dest": "type_name [30964,30968]"
    },
    {
      "src": "return_type_definition [12288,12302]",
      "dest": "return_type_definition [9098,9112]"
    },
    {
      "src": "expression_statement [7000,7018]",
      "dest": "expression_statement [22453,22471]"
    },
    {
      "src": "(: ( [21169,21170]",
      "dest": "(: ( [30347,30348]"
    },
    {
      "src": "identifier: count [32408,32413]",
      "dest": "identifier: count [43976,43981]"
    },
    {
      "src": "}: } [17707,17708]",
      "dest": "}: } [14517,14518]"
    },
    {
      "src": ",: , [10643,10644]",
      "dest": ",: , [26096,26097]"
    },
    {
      "src": "type_alias [37286,37295]",
      "dest": "type_alias [48907,48916]"
    },
    {
      "src": "visibility [16842,16849]",
      "dest": "visibility [13652,13659]"
    },
    {
      "src": "comment: // right shifting to get the len [33171,33203]",
      "dest": "comment: // right shifting to get the len [44768,44800]"
    },
    {
      "src": "=: = [39670,39671]",
      "dest": "=: = [51415,51416]"
    },
    {
      "src": "pure: pure [31129,31133]",
      "dest": "pure: pure [43118,43122]"
    },
    {
      "src": "return: return [34019,34025]",
      "dest": "return: return [45644,45650]"
    },
    {
      "src": "address: address [2764,2771]",
      "dest": "address: address [2764,2771]"
    },
    {
      "src": "[: [ [25822,25823]",
      "dest": "[: [ [35000,35001]"
    },
    {
      "src": "emit: emit [26235,26239]",
      "dest": "emit: emit [35413,35417]"
    },
    {
      "src": "identifier: byteLen [33440,33447]",
      "dest": "identifier: byteLen [45060,45067]"
    },
    {
      "src": "identifier: set [11324,11327]",
      "dest": "identifier: set [26777,26780]"
    },
    {
      "src": "call_argument [22880,22885]",
      "dest": "call_argument [32058,32063]"
    },
    {
      "src": "if: if [26178,26180]",
      "dest": "if: if [35356,35358]"
    },
    {
      "src": "type_name [6605,6612]",
      "dest": "type_name [22058,22065]"
    },
    {
      "src": "emit_statement [38651,38723]",
      "dest": "emit_statement [50305,50377]"
    },
    {
      "src": "member_expression [29244,29252]",
      "dest": "member_expression [41143,41151]"
    },
    {
      "src": "primitive_type [33865,33872]",
      "dest": "primitive_type [5202,5209]"
    },
    {
      "src": "address: address [37729,37736]",
      "dest": "address: address [49383,49390]"
    },
    {
      "src": "external: external [786,794]",
      "dest": "external: external [786,794]"
    },
    {
      "src": "number_literal: 0x0 [12844,12847]",
      "dest": "number_literal: 0x0 [9654,9657]"
    },
    {
      "src": "): ) [14179,14180]",
      "dest": "): ) [10989,10990]"
    },
    {
      "src": "(: ( [9051,9052]",
      "dest": "(: ( [24504,24505]"
    },
    {
      "src": "return_statement [9299,9326]",
      "dest": "return_statement [24752,24779]"
    },
    {
      "src": "type_name [32532,32539]",
      "dest": "type_name [6149,6156]"
    },
    {
      "src": "uint256: uint256 [30662,30669]",
      "dest": "uint256: uint256 [3803,3810]"
    },
    {
      "src": "=: = [38602,38603]",
      "dest": "=: = [50258,50259]"
    },
    {
      "src": "identifier: item [31114,31118]",
      "dest": "identifier: item [43103,43107]"
    },
    {
      "src": "modifier_definition [36946,37058]",
      "dest": "modifier_definition [48563,48675]"
    },
    {
      "src": "comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP.  */ [121,193]",
      "dest": "comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP.  */ [121,193]"
    },
    {
      "src": "primitive_type [15455,15460]",
      "dest": "primitive_type [12265,12270]"
    },
    {
      "src": "return_statement [5455,5468]",
      "dest": "return_statement [20908,20921]"
    },
    {
      "src": "function: function [10383,10391]",
      "dest": "function: function [25836,25844]"
    },
    {
      "src": "(: ( [23542,23543]",
      "dest": "(: ( [32720,32721]"
    },
    {
      "src": ".: . [9317,9318]",
      "dest": ".: . [24770,24771]"
    },
    {
      "src": ",: , [37251,37252]",
      "dest": ",: , [48872,48873]"
    },
    {
      "src": "yul_if_statement [30398,30492]",
      "dest": "yul_if_statement [42585,42679]"
    },
    {
      "src": "): ) [34360,34361]",
      "dest": "): ) [45962,45963]"
    },
    {
      "src": "): ) [28457,28458]",
      "dest": "): ) [39450,39451]"
    },
    {
      "src": "): ) [26079,26080]",
      "dest": "): ) [35257,35258]"
    },
    {
      "src": "parameter [10645,10658]",
      "dest": "parameter [26098,26111]"
    },
    {
      "src": "(: ( [39352,39353]",
      "dest": "(: ( [51097,51098]"
    },
    {
      "src": "pragma: pragma [27054,27060]",
      "dest": "pragma: pragma [48479,48485]"
    },
    {
      "src": "event_definition [21536,21625]",
      "dest": "event_definition [30714,30803]"
    },
    {
      "src": ",: , [36140,36141]",
      "dest": ",: , [47757,47758]"
    },
    {
      "src": "primitive_type [37846,37853]",
      "dest": "primitive_type [49500,49507]"
    },
    {
      "src": "true: true [37046,37050]",
      "dest": "true: true [48663,48667]"
    },
    {
      "src": "yul_evm_builtin [30310,30315]",
      "dest": "yul_evm_builtin [42497,42502]"
    },
    {
      "src": "{: { [27969,27970]",
      "dest": "{: { [39143,39144]"
    },
    {
      "src": "): ) [33686,33687]",
      "dest": "): ) [45306,45307]"
    },
    {
      "src": "solidity_version:  0.6.6 [2905,2911]",
      "dest": "solidity_version:  0.6.6 [48767,48773]"
    },
    {
      "src": "type_name [455,462]",
      "dest": "type_name [455,462]"
    },
    {
      "src": "identifier: len [31375,31378]",
      "dest": "identifier: len [40340,40343]"
    },
    {
      "src": "uint256: uint256 [10110,10117]",
      "dest": "uint256: uint256 [25563,25570]"
    },
    {
      "src": ".: . [7098,7099]",
      "dest": ".: . [22551,22552]"
    },
    {
      "src": "): ) [30617,30618]",
      "dest": "): ) [42804,42805]"
    },
    {
      "src": "identifier: data [15518,15522]",
      "dest": "identifier: data [12328,12332]"
    },
    {
      "src": "{: { [35086,35087]",
      "dest": "{: { [46676,46677]"
    },
    {
      "src": ",: , [27601,27602]",
      "dest": ",: , [5548,5549]"
    },
    {
      "src": "visibility [23982,23988]",
      "dest": "visibility [33160,33166]"
    },
    {
      "src": "): ) [784,785]",
      "dest": "): ) [784,785]"
    },
    {
      "src": "identifier: _itemLength [32225,32236]",
      "dest": "identifier: _itemLength [43883,43894]"
    },
    {
      "src": "type_name [18425,18440]",
      "dest": "type_name [27603,27618]"
    },
    {
      "src": "add: add [33495,33498]",
      "dest": "add: add [45115,45118]"
    },
    {
      "src": "comment: // solhint-disable-next-line no-inline-assembly [17392,17439]",
      "dest": "comment: // solhint-disable-next-line no-inline-assembly [14202,14249]"
    },
    {
      "src": "identifier: item [29382,29386]",
      "dest": "identifier: item [41334,41338]"
    },
    {
      "src": "array_access [6742,6768]",
      "dest": "array_access [22195,22221]"
    },
    {
      "src": "mstore: mstore [34817,34823]",
      "dest": "mstore: mstore [46372,46378]"
    },
    {
      "src": "call_expression [39330,39354]",
      "dest": "call_expression [51075,51099]"
    },
    {
      "src": "primitive_type [38810,38817]",
      "dest": "primitive_type [50578,50585]"
    },
    {
      "src": "user_defined_type [5679,5682]",
      "dest": "user_defined_type [21132,21135]"
    },
    {
      "src": "call_argument [16573,16577]",
      "dest": "call_argument [13383,13387]"
    },
    {
      "src": "memory: memory [29218,29224]",
      "dest": "memory: memory [41117,41123]"
    },
    {
      "src": "comment: /**      * @dev Returns the admin role that controls `role`. See {grantRole} and      * {revokeRole}.      *      * To change a role's admin, use {_setRoleAdmin}.      */ [22902,23077]",
      "dest": "comment: /**      * @dev Returns the admin role that controls `role`. See {grantRole} and      * {revokeRole}.      *      * To change a role's admin, use {_setRoleAdmin}.      */ [32080,32255]"
    },
    {
      "src": "identifier: dest [34824,34828]",
      "dest": "identifier: dest [46379,46383]"
    },
    {
      "src": "return_type_definition [9270,9287]",
      "dest": "return_type_definition [24723,24740]"
    },
    {
      "src": ",: , [2567,2568]",
      "dest": ",: , [2567,2568]"
    },
    {
      "src": "block_statement [40364,40439]",
      "dest": "block_statement [52107,52182]"
    },
    {
      "src": "identifier: len [34654,34657]",
      "dest": "identifier: len [46209,46212]"
    },
    {
      "src": "primitive_type [10453,10457]",
      "dest": "primitive_type [25906,25910]"
    },
    {
      "src": "bytes32: bytes32 [25741,25748]",
      "dest": "bytes32: bytes32 [34919,34926]"
    },
    {
      "src": "identifier: item [30846,30850]",
      "dest": "identifier: item [42882,42886]"
    },
    {
      "src": "identifier: RLPItem [27946,27953]",
      "dest": "identifier: RLPItem [39125,39132]"
    },
    {
      "src": "identifier: RLPItem [28717,28724]",
      "dest": "identifier: RLPItem [39711,39718]"
    },
    {
      "src": "memory: memory [27554,27560]",
      "dest": "memory: memory [37691,37697]"
    },
    {
      "src": "identifier: itemLen [33221,33228]",
      "dest": "identifier: itemLen [44818,44825]"
    },
    {
      "src": "function_body [26531,26629]",
      "dest": "function_body [35709,35807]"
    },
    {
      "src": "identifier: RLPItem [28485,28492]",
      "dest": "identifier: RLPItem [39478,39485]"
    },
    {
      "src": "identifier: contractId [26510,26520]",
      "dest": "identifier: contractId [35688,35698]"
    },
    {
      "src": "yul_identifier [34836,34839]",
      "dest": "yul_identifier [46391,46394]"
    },
    {
      "src": "while: while [32165,32170]",
      "dest": "while: while [43824,43829]"
    },
    {
      "src": "identifier: IMintableERC20 [38733,38747]",
      "dest": "identifier: IERC20 [50532,50538]"
    },
    {
      "src": "function_body [16546,16721]",
      "dest": "function_body [13356,13531]"
    },
    {
      "src": "(: ( [338,339]",
      "dest": "(: ( [338,339]"
    },
    {
      "src": "primitive_type [9052,9056]",
      "dest": "primitive_type [24505,24509]"
    },
    {
      "src": "address: address [2260,2267]",
      "dest": "address: address [2260,2267]"
    },
    {
      "src": "type_cast_expression [8537,8551]",
      "dest": "type_cast_expression [23990,24004]"
    },
    {
      "src": "identifier: len [29249,29252]",
      "dest": "identifier: len [41148,41151]"
    },
    {
      "src": ".: . [6628,6629]",
      "dest": ".: . [22081,22082]"
    },
    {
      "src": "}: } [33702,33703]",
      "dest": "}: } [45322,45323]"
    },
    {
      "src": "address: address [455,462]",
      "dest": "address: address [455,462]"
    },
    {
      "src": "public: public [37507,37513]",
      "dest": "public: public [49161,49167]"
    },
    {
      "src": ".: . [30961,30962]",
      "dest": ".: . [42950,42951]"
    },
    {
      "src": "comment: // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned [12404,12489]",
      "dest": "comment: // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned [9214,9299]"
    },
    {
      "src": "primitive_type [16761,16768]",
      "dest": "primitive_type [13571,13578]"
    },
    {
      "src": "parameter [22793,22806]",
      "dest": "parameter [31971,31984]"
    },
    {
      "src": "(: ( [494,495]",
      "dest": "(: ( [494,495]"
    },
    {
      "src": ">=: >= [34110,34112]",
      "dest": ">=: >= [45708,45710]"
    },
    {
      "src": "}: } [8885,8886]",
      "dest": "}: } [24338,24339]"
    },
    {
      "src": "identifier: value [5704,5709]",
      "dest": "identifier: value [21157,21162]"
    },
    {
      "src": "primitive_type [21554,21561]",
      "dest": "primitive_type [30732,30739]"
    },
    {
      "src": "binary_expression [32843,32867]",
      "dest": "binary_expression [44424,44448]"
    },
    {
      "src": "[: [ [39382,39383]",
      "dest": "[: [ [51127,51128]"
    },
    {
      "src": "string [16597,16637]",
      "dest": "string [13407,13447]"
    },
    {
      "src": "uint256: uint256 [770,777]",
      "dest": "uint256: uint256 [770,777]"
    },
    {
      "src": "event_definition [2512,2584]",
      "dest": "event_definition [2512,2584]"
    },
    {
      "src": "variable_declaration_statement [6265,6304]",
      "dest": "variable_declaration_statement [21718,21757]"
    },
    {
      "src": "member_expression [10933,10943]",
      "dest": "member_expression [26386,26396]"
    },
    {
      "src": "type_name [21601,21608]",
      "dest": "type_name [30779,30786]"
    },
    {
      "src": "comment: // SPDX-License-Identifier: MIT [17767,17798]",
      "dest": "comment: // SPDX-License-Identifier: MIT [26945,26976]"
    },
    {
      "src": "type_name [37358,37365]",
      "dest": "type_name [49012,49019]"
    },
    {
      "src": "bytes32: bytes32 [8529,8536]",
      "dest": "bytes32: bytes32 [23982,23989]"
    },
    {
      "src": "identifier: previousAdminRole [20886,20903]",
      "dest": "identifier: previousAdminRole [30064,30081]"
    },
    {
      "src": "parameter [15390,15407]",
      "dest": "parameter [12200,12217]"
    },
    {
      "src": "comment: /* 32 byte word size */ [33068,33091]",
      "dest": "comment: /* 32 byte word size */ [44665,44688]"
    },
    {
      "src": "yul_evm_builtin [35116,35119]",
      "dest": "yul_evm_builtin [46710,46713]"
    },
    {
      "src": "yul_path [35205,35209]",
      "dest": "yul_path [46803,46807]"
    },
    {
      "src": "identifier: _msgSender [26267,26277]",
      "dest": "identifier: _msgSender [35445,35455]"
    },
    {
      "src": ":=: := [33003,33005]",
      "dest": ":=: := [44584,44586]"
    },
    {
      "src": "identifier: _revertMsg [26453,26463]",
      "dest": "identifier: _revertMsg [35631,35641]"
    },
    {
      "src": "assignment_expression [26542,26621]",
      "dest": "assignment_expression [35720,35799]"
    },
    {
      "src": "comment: /**      * @dev Emitted when `account` is granted `role`.      *      * `sender` is the account that originated the contract call, an admin role      * bearer except when using {_setupRole}.      */ [20943,21146]",
      "dest": "comment: /**      * @dev Emitted when `account` is granted `role`.      *      * `sender` is the account that originated the contract call, an admin role      * bearer except when using {_setupRole}.      */ [30121,30324]"
    },
    {
      "src": "true: true [7138,7142]",
      "dest": "true: true [22591,22595]"
    },
    {
      "src": "comment: /**     * @dev Returns the value stored at position `index` in the set. O(1).     *     * Note that there are no guarantees on the ordering of values inside the     * array, and it may change when more values are added or removed.     *     * Requirements:     *     * - `index` must be strictly less than {length}.     */ [9340,9671]",
      "dest": "comment: /**     * @dev Returns the value stored at position `index` in the set. O(1).     *     * Note that there are no guarantees on the ordering of values inside the     * array, and it may change when more values are added or removed.     *     * Requirements:     *     * - `index` must be strictly less than {length}.     */ [24793,25124]"
    },
    {
      "src": ".: . [38607,38608]",
      "dest": ".: . [50263,50264]"
    },
    {
      "src": "identifier: amount [38715,38721]",
      "dest": "identifier: amount [50369,50375]"
    },
    {
      "src": "visibility [37437,37443]",
      "dest": "visibility [49091,49097]"
    },
    {
      "src": "comment: // @return number of payload items inside an encoded list. [31697,31755]",
      "dest": "comment: // @return number of payload items inside an encoded list. [43503,43561]"
    },
    {
      "src": "primitive_type [22793,22800]",
      "dest": "primitive_type [31971,31978]"
    },
    {
      "src": "<: < [32749,32750]",
      "dest": "<: < [44328,44329]"
    },
    {
      "src": "): ) [10198,10199]",
      "dest": "): ) [25651,25652]"
    },
    {
      "src": "identifier: success [14043,14050]",
      "dest": "identifier: success [10853,10860]"
    },
    {
      "src": "identifier: _remove [10477,10484]",
      "dest": "identifier: _remove [25930,25937]"
    },
    {
      "src": "identifier: Address [20278,20285]",
      "dest": "identifier: Address [29456,29463]"
    },
    {
      "src": ",: , [35130,35131]",
      "dest": ",: , [46724,46725]"
    },
    {
      "src": "address: address [21192,21199]",
      "dest": "address: address [30370,30377]"
    },
    {
      "src": "function_body [18442,18478]",
      "dest": "function_body [27620,27656]"
    },
    {
      "src": ",: , [28878,28879]",
      "dest": ",: , [39913,39914]"
    },
    {
      "src": "{: { [8211,8212]",
      "dest": "{: { [23664,23665]"
    },
    {
      "src": "function: function [33803,33811]",
      "dest": "function: function [45423,45431]"
    },
    {
      "src": "call_expression [23653,23678]",
      "dest": "call_expression [32831,32856]"
    },
    {
      "src": "function_body [28767,28989]",
      "dest": "function_body [39761,40037]"
    },
    {
      "src": "): ) [39344,39345]",
      "dest": "): ) [51089,51090]"
    },
    {
      "src": "(: ( [22879,22880]",
      "dest": "(: ( [32057,32058]"
    },
    {
      "src": "yul_function_call [33659,33688]",
      "dest": "yul_function_call [45279,45308]"
    },
    {
      "src": "identifier: Set [4645,4648]",
      "dest": "identifier: Set [20098,20101]"
    },
    {
      "src": "identifier: i [28391,28392]",
      "dest": "identifier: i [39384,39385]"
    },
    {
      "src": "): ) [3330,3331]",
      "dest": "): ) [18783,18784]"
    },
    {
      "src": "identifier: memPtr [31206,31212]",
      "dest": "identifier: memPtr [40315,40321]"
    },
    {
      "src": "type_cast_expression [9106,9120]",
      "dest": "type_cast_expression [24559,24573]"
    },
    {
      "src": "bytes: bytes [29182,29187]",
      "dest": "bytes: bytes [41086,41091]"
    },
    {
      "src": "sub: sub [33451,33454]",
      "dest": "sub: sub [45071,45074]"
    },
    {
      "src": "yul_evm_builtin [33152,33155]",
      "dest": "yul_evm_builtin [44749,44752]"
    },
    {
      "src": "identifier: value [5880,5885]",
      "dest": "identifier: value [21333,21338]"
    },
    {
      "src": ",: , [2547,2548]",
      "dest": ",: , [2547,2548]"
    },
    {
      "src": "<: < [28400,28401]",
      "dest": "<: < [39393,39394]"
    },
    {
      "src": "identifier: account [26210,26217]",
      "dest": "identifier: account [35388,35395]"
    },
    {
      "src": "parameter [16532,16544]",
      "dest": "parameter [13342,13354]"
    },
    {
      "src": "expression_statement [37894,37937]",
      "dest": "expression_statement [49548,49591]"
    },
    {
      "src": "^:  ^ [18837,18839]",
      "dest": "^:  ^ [18911,18913]"
    },
    {
      "src": "): ) [36211,36212]",
      "dest": "): ) [47828,47829]"
    },
    {
      "src": "primitive_type [39192,39199]",
      "dest": "primitive_type [50937,50944]"
    },
    {
      "src": "identifier: data [17090,17094]",
      "dest": "identifier: data [13900,13904]"
    },
    {
      "src": "library: library [4160,4167]",
      "dest": "library: library [19613,19620]"
    },
    {
      "src": "\": \" [37420,37421]",
      "dest": "\": \" [49074,49075]"
    },
    {
      "src": "(: ( [39756,39757]",
      "dest": "(: ( [51501,51502]"
    },
    {
      "src": ",: , [37676,37677]",
      "dest": ",: , [49330,49331]"
    },
    {
      "src": "primitive_type [16452,16457]",
      "dest": "primitive_type [13262,13267]"
    },
    {
      "src": "view: view [10884,10888]",
      "dest": "view: view [26337,26341]"
    },
    {
      "src": "call_argument [14110,14117]",
      "dest": "call_argument [10920,10927]"
    },
    {
      "src": "return_type_definition [1159,1176]",
      "dest": "return_type_definition [1159,1176]"
    },
    {
      "src": "identifier: role [25823,25827]",
      "dest": "identifier: role [35001,35005]"
    },
    {
      "src": ".: . [8066,8067]",
      "dest": ".: . [23519,23520]"
    },
    {
      "src": "call_expression [38604,38638]",
      "dest": "call_expression [50260,50294]"
    },
    {
      "src": "visibility [27905,27913]",
      "dest": "visibility [39102,39110]"
    },
    {
      "src": "type_name [15970,15975]",
      "dest": "type_name [12780,12785]"
    },
    {
      "src": "public: public [23509,23515]",
      "dest": "public: public [32687,32693]"
    },
    {
      "src": "\": \" [27603,27604]",
      "dest": "\": \" [5550,5551]"
    },
    {
      "src": "expression_statement [13873,13947]",
      "dest": "expression_statement [10683,10757]"
    },
    {
      "src": "}: } [8560,8561]",
      "dest": "}: } [24013,24014]"
    },
    {
      "src": ",: , [21574,21575]",
      "dest": ",: , [30752,30753]"
    },
    {
      "src": "call_argument [17090,17094]",
      "dest": "call_argument [13900,13904]"
    },
    {
      "src": "type_name [10399,10406]",
      "dest": "type_name [25852,25859]"
    },
    {
      "src": "string [27603,27636]",
      "dest": "string [5550,5585]"
    },
    {
      "src": "type_name [28083,28090]",
      "dest": "type_name [39226,39233]"
    },
    {
      "src": "yul_path [31523,31530]",
      "dest": "yul_path [43345,43352]"
    },
    {
      "src": "assembly: assembly [28839,28847]",
      "dest": "assembly: assembly [39874,39882]"
    },
    {
      "src": "call_argument [15524,15525]",
      "dest": "call_argument [12334,12335]"
    },
    {
      "src": "contract_body [2951,3344]",
      "dest": "contract_body [18404,18797]"
    },
    {
      "src": "comment: // retrieve the bytes [35211,35232]",
      "dest": "comment: // retrieve the bytes [46809,46830]"
    },
    {
      "src": "}: } [26780,26781]",
      "dest": "}: } [35958,35959]"
    },
    {
      "src": "[: [ [28479,28480]",
      "dest": "[: [ [39472,39473]"
    },
    {
      "src": "function: function [5072,5080]",
      "dest": "function: function [20525,20533]"
    },
    {
      "src": "identifier: srcpart [35272,35279]",
      "dest": "identifier: srcpart [46874,46881]"
    },
    {
      "src": "function: function [5662,5670]",
      "dest": "function: function [21115,21123]"
    },
    {
      "src": "call_expression [26182,26218]",
      "dest": "call_expression [35360,35396]"
    },
    {
      "src": "): ) [27962,27963]",
      "dest": "): ) [39141,39142]"
    },
    {
      "src": "uint256: uint256 [32578,32585]",
      "dest": "uint256: uint256 [6743,6750]"
    },
    {
      "src": "expression_statement [28398,28408]",
      "dest": "expression_statement [39391,39401]"
    },
    {
      "src": "(: ( [12296,12297]",
      "dest": "(: ( [9106,9107]"
    },
    {
      "src": "(: ( [37957,37958]",
      "dest": "(: ( [49611,49612]"
    },
    {
      "src": "(: ( [31821,31822]",
      "dest": "(: ( [6804,6805]"
    },
    {
      "src": "variable_declaration [29212,29231]",
      "dest": "variable_declaration [41111,41130]"
    },
    {
      "src": "member_expression [32092,32103]",
      "dest": "member_expression [39328,39339]"
    },
    {
      "src": "(: ( [10504,10505]",
      "dest": "(: ( [25957,25958]"
    },
    {
      "src": "type_name [26128,26135]",
      "dest": "type_name [35306,35313]"
    },
    {
      "src": "state_mutability [34634,34638]",
      "dest": "state_mutability [46189,46193]"
    },
    {
      "src": "parameter [15970,15987]",
      "dest": "parameter [12780,12797]"
    },
    {
      "src": "identifier: user [3310,3314]",
      "dest": "identifier: user [18763,18767]"
    },
    {
      "src": "(: ( [40465,40466]",
      "dest": "(: ( [52362,52363]"
    },
    {
      "src": "yul_decimal_number: 256 [33147,33150]",
      "dest": "yul_decimal_number: 256 [44744,44747]"
    },
    {
      "src": "identifier: RoleRevoked [26240,26251]",
      "dest": "identifier: RoleRevoked [35418,35429]"
    },
    {
      "src": "yul_path [35253,35257]",
      "dest": "yul_path [46855,46859]"
    },
    {
      "src": "type_name [12297,12301]",
      "dest": "type_name [9107,9111]"
    },
    {
      "src": ",: , [24143,24144]",
      "dest": ",: , [33321,33322]"
    },
    {
      "src": "(: ( [5727,5728]",
      "dest": "(: ( [21180,21181]"
    },
    {
      "src": "expression_statement [27578,27638]",
      "dest": "expression_statement [5530,5587]"
    },
    {
      "src": "<: < [32690,32691]",
      "dest": "<: < [44246,44247]"
    },
    {
      "src": "identifier: value [7108,7113]",
      "dest": "identifier: value [22561,22566]"
    },
    {
      "src": "function_definition [293,348]",
      "dest": "function_definition [293,348]"
    },
    {
      "src": "bytes32: bytes32 [4858,4865]",
      "dest": "bytes32: bytes32 [20311,20318]"
    },
    {
      "src": "identifier: set [6742,6745]",
      "dest": "identifier: set [22195,22198]"
    },
    {
      "src": "}: } [31073,31074]",
      "dest": "}: } [43062,43063]"
    },
    {
      "src": "let: let [32912,32915]",
      "dest": "let: let [44493,44496]"
    },
    {
      "src": "): ) [18392,18393]",
      "dest": "): ) [27570,27571]"
    },
    {
      "src": ".: . [30850,30851]",
      "dest": ".: . [42886,42887]"
    },
    {
      "src": "call_argument [16597,16637]",
      "dest": "call_argument [13407,13447]"
    },
    {
      "src": "primitive_type [17032,17037]",
      "dest": "primitive_type [13842,13847]"
    },
    {
      "src": "}: } [40492,40493]",
      "dest": "}: } [52389,52390]"
    },
    {
      "src": "(: ( [29363,29364]",
      "dest": "(: ( [41315,41316]"
    },
    {
      "src": "variable_declaration_statement [32017,32035]",
      "dest": "variable_declaration_statement [43685,43700]"
    },
    {
      "src": ".: . [25997,25998]",
      "dest": ".: . [35175,35176]"
    },
    {
      "src": "interface_declaration [2916,3344]",
      "dest": "interface_declaration [18369,18797]"
    },
    {
      "src": "primitive_type [39477,39484]",
      "dest": "primitive_type [51222,51229]"
    },
    {
      "src": "return_statement [28970,28982]",
      "dest": "return_statement [40018,40030]"
    },
    {
      "src": "(: ( [14037,14038]",
      "dest": "(: ( [10847,10848]"
    },
    {
      "src": "identifier: require [39455,39462]",
      "dest": "identifier: require [51200,51207]"
    },
    {
      "src": "type_name [28113,28120]",
      "dest": "type_name [39256,39263]"
    },
    {
      "src": "=: = [29232,29233]",
      "dest": "=: = [41131,41132]"
    },
    {
      "src": "[: [ [6860,6861]",
      "dest": "[: [ [22313,22314]"
    },
    {
      "src": "primitive_type [20848,20855]",
      "dest": "primitive_type [30026,30033]"
    },
    {
      "src": "uint256: uint256 [32017,32024]",
      "dest": "uint256: uint256 [6732,6739]"
    },
    {
      "src": "yul_decimal_number: 32 [33576,33578]",
      "dest": "yul_decimal_number: 32 [45196,45198]"
    },
    {
      "src": "call_expression [23543,23588]",
      "dest": "call_expression [32721,32766]"
    },
    {
      "src": "return: return [15480,15486]",
      "dest": "return: return [12290,12296]"
    },
    {
      "src": "identifier: functionCallWithValue [16054,16075]",
      "dest": "identifier: functionCallWithValue [12864,12885]"
    },
    {
      "src": "yul_path [17518,17528]",
      "dest": "yul_path [14328,14338]"
    },
    {
      "src": "(: ( [28328,28329]",
      "dest": "(: ( [43753,43754]"
    },
    {
      "src": "(: ( [29110,29111]",
      "dest": "(: ( [41041,41042]"
    },
    {
      "src": "boolean_literal [28977,28981]",
      "dest": "boolean_literal [40025,40029]"
    },
    {
      "src": "function: function [29431,29439]",
      "dest": "function: function [42048,42056]"
    },
    {
      "src": "identifier: RLPItem [29111,29118]",
      "dest": "identifier: RLPItem [41042,41049]"
    },
    {
      "src": "uint256: uint256 [34607,34614]",
      "dest": "uint256: uint256 [15925,15932]"
    },
    {
      "src": "identifier: _inner [10489,10495]",
      "dest": "identifier: _inner [25942,25948]"
    },
    {
      "src": "function: function [25704,25712]",
      "dest": "function: function [34882,34890]"
    },
    {
      "src": "call_argument [10505,10510]",
      "dest": "call_argument [25958,25963]"
    },
    {
      "src": "(: ( [26209,26210]",
      "dest": "(: ( [35387,35388]"
    },
    {
      "src": ":=: := [33939,33941]",
      "dest": ":=: := [45550,45552]"
    },
    {
      "src": "call_expression [39749,39915]",
      "dest": "call_expression [51494,51660]"
    },
    {
      "src": "(: ( [5678,5679]",
      "dest": "(: ( [21131,21132]"
    },
    {
      "src": "}: } [9825,9826]",
      "dest": "}: } [25278,25279]"
    },
    {
      "src": "call_expression [40451,40485]",
      "dest": "call_expression [52332,52382]"
    },
    {
      "src": "struct_field_assignment [14072,14085]",
      "dest": "struct_field_assignment [10882,10895]"
    },
    {
      "src": ",: , [16775,16776]",
      "dest": ",: , [13585,13586]"
    },
    {
      "src": "parameter [5086,5101]",
      "dest": "parameter [20539,20554]"
    },
    {
      "src": "!: ! [5156,5157]",
      "dest": "!: ! [20609,20610]"
    },
    {
      "src": "variable_declaration_statement [39928,39977]",
      "dest": "variable_declaration_statement [51673,51722]"
    },
    {
      "src": "if: if [32739,32741]",
      "dest": "if: if [44318,44320]"
    },
    {
      "src": "identifier: numItems [28058,28066]",
      "dest": "identifier: numItems [39201,39209]"
    },
    {
      "src": "constant: constant [27111,27119]",
      "dest": "constant: constant [36289,36297]"
    },
    {
      "src": "call_expression [39680,39707]",
      "dest": "call_expression [51425,51452]"
    },
    {
      "src": ".: . [29639,29640]",
      "dest": ".: . [42184,42185]"
    },
    {
      "src": "): ) [39805,39806]",
      "dest": "): ) [51550,51551]"
    },
    {
      "src": "call_expression [24843,24869]",
      "dest": "call_expression [34021,34047]"
    },
    {
      "src": "user_defined_type [27946,27953]",
      "dest": "user_defined_type [39125,39132]"
    },
    {
      "src": "assignment_expression [6848,6891]",
      "dest": "assignment_expression [22301,22344]"
    },
    {
      "src": "type_name [39290,39309]",
      "dest": "type_name [51035,51054]"
    },
    {
      "src": "augmented_assignment_expression [34756,34772]",
      "dest": "augmented_assignment_expression [46311,46327]"
    },
    {
      "src": "return: return [17134,17140]",
      "dest": "return: return [13944,13950]"
    },
    {
      "src": "primitive_type [21748,21755]",
      "dest": "primitive_type [30926,30933]"
    },
    {
      "src": "variable_declaration [6605,6622]",
      "dest": "variable_declaration [22058,22075]"
    },
    {
      "src": "indexed: indexed [20878,20885]",
      "dest": "indexed: indexed [30056,30063]"
    },
    {
      "src": "function_body [23997,24161]",
      "dest": "function_body [33175,33339]"
    },
    {
      "src": ".: . [32136,32137]",
      "dest": ".: . [43795,43796]"
    },
    {
      "src": "primitive_type [33827,33834]",
      "dest": "primitive_type [16565,16572]"
    },
    {
      "src": "): ) [33560,33561]",
      "dest": "): ) [45180,45181]"
    },
    {
      "src": "identifier: currPtr [32237,32244]",
      "dest": "identifier: currPtr [43895,43902]"
    },
    {
      "src": "{: { [18365,18366]",
      "dest": "{: { [27543,27544]"
    },
    {
      "src": ",: , [37718,37719]",
      "dest": ",: , [49372,49373]"
    },
    {
      "src": "(: ( [40090,40091]",
      "dest": "(: ( [51833,51834]"
    },
    {
      "src": "uint256: uint256 [33885,33892]",
      "dest": "uint256: uint256 [7486,7493]"
    },
    {
      "src": "primitive_type [30662,30669]",
      "dest": "primitive_type [3803,3810]"
    },
    {
      "src": "struct: struct [9854,9860]",
      "dest": "struct: struct [25307,25313]"
    },
    {
      "src": "comment: /**      * @dev Revokes `role` from `account`.      *      * If `account` had been granted `role`, emits a {RoleRevoked} event.      *      * Requirements:      *      * - the caller must have ``role``'s admin role.      */ [23694,23925]",
      "dest": "comment: /**      * @dev Revokes `role` from `account`.      *      * If `account` had been granted `role`, emits a {RoleRevoked} event.      *      * Requirements:      *      * - the caller must have ``role``'s admin role.      */ [32872,33103]"
    },
    {
      "src": "returns: returns [18416,18423]",
      "dest": "returns: returns [27594,27601]"
    },
    {
      "src": "identifier: set [10640,10643]",
      "dest": "identifier: set [26093,26096]"
    },
    {
      "src": "mload: mload [35192,35197]",
      "dest": "mload: mload [46790,46795]"
    },
    {
      "src": "event_paramater [37765,37779]",
      "dest": "event_paramater [49419,49433]"
    },
    {
      "src": "identifier: owner [1121,1126]",
      "dest": "identifier: owner [1121,1126]"
    },
    {
      "src": "\": \" [37564,37565]",
      "dest": "\": \" [49218,49219]"
    },
    {
      "src": "primitive_type [26496,26502]",
      "dest": "primitive_type [35674,35680]"
    },
    {
      "src": "number_literal: 0 [34026,34027]",
      "dest": "number_literal: 0 [45651,45652]"
    },
    {
      "src": "(: ( [14109,14110]",
      "dest": "(: ( [10919,10920]"
    },
    {
      "src": "binary_expression [34061,34157]",
      "dest": "binary_expression [45672,45755]"
    },
    {
      "src": "uint256: uint256 [16471,16478]",
      "dest": "uint256: uint256 [13281,13288]"
    },
    {
      "src": "else: else [7155,7159]",
      "dest": "else: else [22608,22612]"
    },
    {
      "src": "identifier: len [30404,30407]",
      "dest": "identifier: len [42591,42594]"
    },
    {
      "src": "user_defined_type [20333,20357]",
      "dest": "user_defined_type [29511,29535]"
    },
    {
      "src": "primitive_type [26128,26135]",
      "dest": "primitive_type [35306,35313]"
    },
    {
      "src": "function: function [39144,39152]",
      "dest": "function: function [50889,50897]"
    },
    {
      "src": "primitive_type [7990,7997]",
      "dest": "primitive_type [23443,23450]"
    },
    {
      "src": "): ) [24060,24061]",
      "dest": "): ) [33238,33239]"
    },
    {
      "src": "yul_path [30471,30474]",
      "dest": "yul_path [42658,42661]"
    },
    {
      "src": "comment: // File: contracts/lib/RLPReader.sol [26788,26824]",
      "dest": "comment: // File: contracts/lib/RLPReader.sol [35966,36002]"
    },
    {
      "src": "type_name [1113,1120]",
      "dest": "type_name [1113,1120]"
    },
    {
      "src": "identifier: item [30245,30249]",
      "dest": "identifier: item [38674,38678]"
    },
    {
      "src": "(: ( [32930,32931]",
      "dest": "(: ( [44511,44512]"
    },
    {
      "src": "uint256: uint256 [32045,32052]",
      "dest": "uint256: uint256 [4278,4285]"
    },
    {
      "src": "member_expression [31201,31212]",
      "dest": "member_expression [40310,40321]"
    },
    {
      "src": ",: , [10418,10419]",
      "dest": ",: , [25871,25872]"
    },
    {
      "src": "bytes: bytes [31143,31148]",
      "dest": "bytes: bytes [43132,43137]"
    },
    {
      "src": "call_argument [26706,26710]",
      "dest": "call_argument [35884,35888]"
    },
    {
      "src": "string_literal [16597,16637]",
      "dest": "string_literal [13407,13447]"
    },
    {
      "src": "): ) [33687,33688]",
      "dest": "): ) [45307,45308]"
    },
    {
      "src": "identifier: value [10428,10433]",
      "dest": "identifier: value [25881,25886]"
    },
    {
      "src": "call_argument [29530,29534]",
      "dest": "call_argument [40781,40785]"
    },
    {
      "src": "struct_member [8222,8233]",
      "dest": "struct_member [23675,23686]"
    },
    {
      "src": "using: using [20272,20277]",
      "dest": "using: using [29450,29455]"
    },
    {
      "src": "identifier: adminRole [25749,25758]",
      "dest": "identifier: adminRole [34927,34936]"
    },
    {
      "src": "(: ( [29493,29494]",
      "dest": "(: ( [42110,42111]"
    },
    {
      "src": "parameter [9689,9711]",
      "dest": "parameter [25142,25164]"
    },
    {
      "src": "struct_declaration [20306,20401]",
      "dest": "struct_declaration [29484,29579]"
    },
    {
      "src": "call_argument [8517,8527]",
      "dest": "call_argument [23970,23980]"
    },
    {
      "src": "}: } [24160,24161]",
      "dest": "}: } [33338,33339]"
    },
    {
      "src": "returns: returns [9043,9050]",
      "dest": "returns: returns [24496,24503]"
    },
    {
      "src": "): ) [32867,32868]",
      "dest": "): ) [44448,44449]"
    },
    {
      "src": "yul_path [33249,33256]",
      "dest": "yul_path [44846,44853]"
    },
    {
      "src": "yul_assignment [28863,28894]",
      "dest": "yul_assignment [39898,39929]"
    },
    {
      "src": "identifier: success [14110,14117]",
      "dest": "identifier: success [10920,10927]"
    },
    {
      "src": "parameter [31099,31118]",
      "dest": "parameter [43088,43107]"
    },
    {
      "src": "solidity_version:  0.6.6 [27069,27075]",
      "dest": "solidity_version:  0.6.6 [48494,48500]"
    },
    {
      "src": "false [5462,5467]",
      "dest": "false [20915,20920]"
    },
    {
      "src": "type_name [37332,37349]",
      "dest": "type_name [48953,48970]"
    },
    {
      "src": "}: } [28560,28561]",
      "dest": "}: } [39554,39555]"
    },
    {
      "src": "call_expression [24048,24060]",
      "dest": "call_expression [33226,33238]"
    },
    {
      "src": "binary_expression [40405,40426]",
      "dest": "binary_expression [52148,52169]"
    },
    {
      "src": "return: return [29402,29408]",
      "dest": "return: return [41354,41360]"
    },
    {
      "src": "=: = [6769,6770]",
      "dest": "=: = [22222,22223]"
    },
    {
      "src": "expression_statement [31224,31300]",
      "dest": "expression_statement [41522,41545]"
    },
    {
      "src": "yul_path [33236,33243]",
      "dest": "yul_path [44833,44840]"
    },
    {
      "src": "if_statement [5899,7199]",
      "dest": "if_statement [21352,22652]"
    },
    {
      "src": "(: ( [10853,10854]",
      "dest": "(: ( [26306,26307]"
    },
    {
      "src": "type_name [28383,28390]",
      "dest": "type_name [39379,39383]"
    },
    {
      "src": "type_name [5846,5853]",
      "dest": "type_name [21299,21306]"
    },
    {
      "src": "(: ( [26277,26278]",
      "dest": "(: ( [35455,35456]"
    },
    {
      "src": "type_name [22829,22836]",
      "dest": "type_name [32007,32014]"
    },
    {
      "src": "event_definition [2749,2827]",
      "dest": "event_definition [2749,2827]"
    },
    {
      "src": "returns: returns [27937,27944]",
      "dest": "returns: returns [39116,39123]"
    },
    {
      "src": "address: address [25494,25501]",
      "dest": "address: address [34672,34679]"
    },
    {
      "src": "state_mutability [7351,7355]",
      "dest": "state_mutability [22804,22808]"
    },
    {
      "src": "yul_identifier [27697,27703]",
      "dest": "yul_identifier [37756,37762]"
    },
    {
      "src": "type_name [37729,37736]",
      "dest": "type_name [49383,49390]"
    },
    {
      "src": "state_mutability [27523,27527]",
      "dest": "state_mutability [37669,37673]"
    },
    {
      "src": "identifier: _setupRole [25469,25479]",
      "dest": "identifier: _setupRole [34647,34657]"
    },
    {
      "src": "member_expression [17059,17070]",
      "dest": "member_expression [13869,13880]"
    },
    {
      "src": "identifier: set [8450,8453]",
      "dest": "identifier: set [23903,23906]"
    },
    {
      "src": "identifier: set [7985,7988]",
      "dest": "identifier: set [23438,23441]"
    },
    {
      "src": "storage: storage [8764,8771]",
      "dest": "storage: storage [24217,24224]"
    },
    {
      "src": "): ) [38854,38855]",
      "dest": "): ) [50599,50600]"
    },
    {
      "src": "visibility [38539,38547]",
      "dest": "visibility [50193,50201]"
    },
    {
      "src": "number_literal: 1 [6890,6891]",
      "dest": "number_literal: 1 [22343,22344]"
    },
    {
      "src": "variable_declaration [17018,17030]",
      "dest": "variable_declaration [13828,13840]"
    },
    {
      "src": "contract: contract [37171,37179]",
      "dest": "contract: contract [48792,48800]"
    },
    {
      "src": "string: string [16814,16820]",
      "dest": "string: string [13624,13630]"
    },
    {
      "src": "call_argument [8083,8119]",
      "dest": "call_argument [23536,23572]"
    },
    {
      "src": "): ) [17055,17056]",
      "dest": "): ) [13865,13866]"
    },
    {
      "src": "call_argument [8842,8852]",
      "dest": "call_argument [24295,24305]"
    },
    {
      "src": "primitive_type [26438,26444]",
      "dest": "primitive_type [35616,35622]"
    },
    {
      "src": "]: ] [39796,39797]",
      "dest": "]: ] [51541,51542]"
    },
    {
      "src": "assignment_expression [28429,28458]",
      "dest": "assignment_expression [39422,39451]"
    },
    {
      "src": "expression_statement [29627,29688]",
      "dest": "expression_statement [42172,42196]"
    },
    {
      "src": "type_name [12559,12566]",
      "dest": "type_name [9369,9376]"
    },
    {
      "src": "(: ( [32742,32743]",
      "dest": "(: ( [44321,44322]"
    },
    {
      "src": "member_expression [5195,5211]",
      "dest": "member_expression [20648,20664]"
    },
    {
      "src": "=: = [26553,26554]",
      "dest": "=: = [35731,35732]"
    },
    {
      "src": "return_type_definition [10134,10148]",
      "dest": "return_type_definition [25587,25601]"
    },
    {
      "src": "identifier: _ [37025,37026]",
      "dest": "identifier: _ [48642,48643]"
    },
    {
      "src": "(: ( [20417,20418]",
      "dest": "(: ( [29595,29596]"
    },
    {
      "src": "call_argument [38628,38637]",
      "dest": "call_argument [50284,50293]"
    },
    {
      "src": "state_mutability [32518,32522]",
      "dest": "state_mutability [44083,44087]"
    },
    {
      "src": "using_directive [20217,20266]",
      "dest": "using_directive [29395,29444]"
    },
    {
      "src": "): ) [23117,23118]",
      "dest": "): ) [32295,32296]"
    },
    {
      "src": "expression_statement [27980,28030]",
      "dest": "expression_statement [39154,39176]"
    },
    {
      "src": "yul_identifier [17493,17508]",
      "dest": "yul_identifier [14303,14318]"
    },
    {
      "src": "): ) [39431,39432]",
      "dest": "): ) [51176,51177]"
    },
    {
      "src": "call_argument [30846,30860]",
      "dest": "call_argument [42882,42896]"
    },
    {
      "src": "is: is [26414,26416]",
      "dest": "is: is [35592,35594]"
    },
    {
      "src": "address: address [38415,38422]",
      "dest": "address: address [50069,50076]"
    },
    {
      "src": "\": \" [39903,39904]",
      "dest": "\": \" [51648,51649]"
    },
    {
      "src": "[: [ [39500,39501]",
      "dest": "[: [ [51245,51246]"
    },
    {
      "src": "yul_variable_declaration [33529,33590]",
      "dest": "yul_variable_declaration [45149,45210]"
    },
    {
      "src": "identifier: require [29824,29831]",
      "dest": "identifier: mod [7547,7550]"
    },
    {
      "src": "number_literal: 0x80 [27141,27145]",
      "dest": "number_literal: 0x80 [36319,36323]"
    },
    {
      "src": "bytes32: bytes32 [20462,20469]",
      "dest": "bytes32: bytes32 [29640,29647]"
    },
    {
      "src": "identifier: functionCallWithValue [15932,15953]",
      "dest": "identifier: functionCallWithValue [12742,12763]"
    },
    {
      "src": "identifier: _setupContractId [37894,37910]",
      "dest": "identifier: _setupContractId [49548,49564]"
    },
    {
      "src": ".: . [18706,18707]",
      "dest": ".: . [27884,27885]"
    },
    {
      "src": "yul_variable_declaration [35172,35210]",
      "dest": "yul_variable_declaration [46770,46808]"
    },
    {
      "src": "identifier: role [24031,24035]",
      "dest": "identifier: role [33209,33213]"
    },
    {
      "src": "function: function [38385,38393]",
      "dest": "function: function [50039,50047]"
    },
    {
      "src": "identifier: byte0 [34133,34138]",
      "dest": "identifier: byte0 [45731,45736]"
    },
    {
      "src": "primitive_type [20290,20297]",
      "dest": "primitive_type [29468,29475]"
    },
    {
      "src": "function_body [27969,28594]",
      "dest": "function_body [39143,39588]"
    },
    {
      "src": "type_name [4849,4877]",
      "dest": "type_name [20302,20330]"
    },
    {
      "src": "yul_identifier [35205,35209]",
      "dest": "yul_identifier [46803,46807]"
    },
    {
      "src": "user_defined_type [31779,31786]",
      "dest": "user_defined_type [43585,43592]"
    },
    {
      "src": "variable_declaration [12586,12605]",
      "dest": "variable_declaration [9396,9415]"
    },
    {
      "src": "return_statement [34169,34178]",
      "dest": "return_statement [45770,45779]"
    },
    {
      "src": "type_name [34607,34614]",
      "dest": "type_name [15925,15932]"
    },
    {
      "src": "identifier: len [29906,29909]",
      "dest": "identifier: len [39781,39784]"
    },
    {
      "src": "(: ( [26009,26010]",
      "dest": "(: ( [35187,35188]"
    },
    {
      "src": "call_expression [27988,28000]",
      "dest": "call_expression [39162,39174]"
    },
    {
      "src": "string_literal [8083,8119]",
      "dest": "string_literal [23536,23572]"
    },
    {
      "src": "type_name [5135,5139]",
      "dest": "type_name [20588,20592]"
    },
    {
      "src": "call_argument [10497,10511]",
      "dest": "call_argument [25950,25964]"
    },
    {
      "src": "parameter [31143,31155]",
      "dest": "parameter [43132,43144]"
    },
    {
      "src": "yul_function_call [33495,33509]",
      "dest": "yul_function_call [45115,45129]"
    },
    {
      "src": "type_cast_expression [29707,29728]",
      "dest": "type_cast_expression [42215,42236]"
    },
    {
      "src": "yul_identifier [33956,33962]",
      "dest": "yul_identifier [45567,45573]"
    },
    {
      "src": "let: let [17489,17492]",
      "dest": "let: let [14299,14302]"
    },
    {
      "src": "}: } [40495,40496]",
      "dest": "}: } [52392,52393]"
    },
    {
      "src": "div: div [33124,33127]",
      "dest": "div: div [44721,44724]"
    },
    {
      "src": "identifier: byteLen [33676,33683]",
      "dest": "identifier: byteLen [45296,45303]"
    },
    {
      "src": "function_definition [10606,10752]",
      "dest": "function_definition [26059,26205]"
    },
    {
      "src": "function: function [25911,25919]",
      "dest": "function: function [35089,35097]"
    },
    {
      "src": "call_argument [9314,9324]",
      "dest": "call_argument [24767,24777]"
    },
    {
      "src": "call_argument [25816,25838]",
      "dest": "call_argument [34994,35016]"
    },
    {
      "src": "binary_expression [39477,39535]",
      "dest": "binary_expression [51222,51280]"
    },
    {
      "src": "-: - [40412,40413]",
      "dest": "-: - [52155,52156]"
    },
    {
      "src": "identifier: add [26006,26009]",
      "dest": "identifier: add [35184,35187]"
    },
    {
      "src": "identifier: AddressSet [20255,20265]",
      "dest": "identifier: AddressSet [29433,29443]"
    },
    {
      "src": "visibility [37366,37372]",
      "dest": "visibility [49020,49026]"
    },
    {
      "src": "parameter [27875,27894]",
      "dest": "parameter [39081,39100]"
    },
    {
      "src": "state_mutability [9265,9269]",
      "dest": "state_mutability [24718,24722]"
    },
    {
      "src": "visibility [316,324]",
      "dest": "visibility [316,324]"
    },
    {
      "src": "): ) [33872,33873]",
      "dest": "): ) [5209,5210]"
    },
    {
      "src": "identifier: target [14979,14985]",
      "dest": "identifier: target [11789,11795]"
    },
    {
      "src": "}: } [32667,32668]",
      "dest": "}: } [44223,44224]"
    },
    {
      "src": "call_argument [10737,10742]",
      "dest": "call_argument [26190,26195]"
    },
    {
      "src": ",: , [27715,27716]",
      "dest": ",: , [37774,37775]"
    },
    {
      "src": "yul_assignment [29312,29336]",
      "dest": "yul_assignment [41264,41288]"
    },
    {
      "src": "visibility [9029,9037]",
      "dest": "visibility [24482,24490]"
    },
    {
      "src": "{: { [31157,31158]",
      "dest": "{: { [43146,43147]"
    },
    {
      "src": "type_name [28800,28807]",
      "dest": "type_name [6864,6871]"
    },
    {
      "src": "parameter [26651,26663]",
      "dest": "parameter [35829,35841]"
    },
    {
      "src": "type_name [36713,36720]",
      "dest": "type_name [48330,48337]"
    },
    {
      "src": "returns: returns [5126,5133]",
      "dest": "returns: returns [20579,20586]"
    },
    {
      "src": "internal: internal [11344,11352]",
      "dest": "internal: internal [26797,26805]"
    },
    {
      "src": "}: } [33747,33748]",
      "dest": "}: } [45367,45368]"
    },
    {
      "src": "type_name [1880,1887]",
      "dest": "type_name [1880,1887]"
    },
    {
      "src": "call_argument [29917,29949]",
      "dest": "call_argument [6186,6214]"
    },
    {
      "src": "binary_expression [32793,32819]",
      "dest": "binary_expression [44372,44398]"
    },
    {
      "src": "constant: constant [27293,27301]",
      "dest": "constant: constant [36477,36485]"
    },
    {
      "src": "parameter [7973,7988]",
      "dest": "parameter [23426,23441]"
    },
    {
      "src": "primitive_type [38477,38484]",
      "dest": "primitive_type [50131,50138]"
    },
    {
      "src": "comment: // right shifting to the correct length [33591,33630]",
      "dest": "comment: // right shifting to the correct length [45211,45250]"
    },
    {
      "src": "storage: storage [7528,7535]",
      "dest": "storage: storage [22981,22988]"
    },
    {
      "src": "): ) [21790,21791]",
      "dest": "): ) [30968,30969]"
    },
    {
      "src": "identifier: account [24755,24762]",
      "dest": "identifier: account [33933,33940]"
    },
    {
      "src": "}: } [37817,37818]",
      "dest": "}: } [49471,49472]"
    },
    {
      "src": "identifier: owner [2780,2785]",
      "dest": "identifier: owner [2780,2785]"
    },
    {
      "src": "]: ] [4702,4703]",
      "dest": "]: ] [20155,20156]"
    },
    {
      "src": "{: { [17119,17120]",
      "dest": "{: { [13929,13930]"
    },
    {
      "src": "call_expression [32077,32104]",
      "dest": "call_expression [39313,39340]"
    },
    {
      "src": "identifier: item [29465,29469]",
      "dest": "identifier: item [42082,42086]"
    },
    {
      "src": "identifier: TRANSFER_EVENT_SIG [39517,39535]",
      "dest": "identifier: TRANSFER_EVENT_SIG [51262,51280]"
    },
    {
      "src": "primitive_type [16814,16820]",
      "dest": "primitive_type [13624,13630]"
    },
    {
      "src": "(: ( [36078,36079]",
      "dest": "(: ( [47695,47696]"
    },
    {
      "src": "(: ( [8544,8545]",
      "dest": "(: ( [23997,23998]"
    },
    {
      "src": "{: { [8816,8817]",
      "dest": "{: { [24269,24270]"
    },
    {
      "src": "comment: /**      * @dev Returns the number of values on the set. O(1).      */ [10760,10832]",
      "dest": "comment: /**      * @dev Returns the number of values on the set. O(1).      */ [26213,26285]"
    },
    {
      "src": "for: for [20237,20240]",
      "dest": "for: for [29415,29418]"
    },
    {
      "src": "expression_statement [40379,40428]",
      "dest": "expression_statement [52122,52171]"
    },
    {
      "src": ".: . [28222,28223]",
      "dest": ".: . [42341,42342]"
    },
    {
      "src": "string_literal [29537,29574]",
      "dest": "string_literal [16968,17011]"
    },
    {
      "src": "call_argument [8055,8081]",
      "dest": "call_argument [23508,23534]"
    },
    {
      "src": "(: ( [25479,25480]",
      "dest": "(: ( [34657,34658]"
    },
    {
      "src": "parameter [29182,29194]",
      "dest": "parameter [41086,41098]"
    },
    {
      "src": "(: ( [29831,29832]",
      "dest": "(: ( [7550,7551]"
    },
    {
      "src": "==: == [34658,34660]",
      "dest": "==: == [46213,46215]"
    },
    {
      "src": "identifier: data [16687,16691]",
      "dest": "identifier: data [13497,13501]"
    },
    {
      "src": "type_name [30642,30649]",
      "dest": "type_name [8163,8170]"
    },
    {
      "src": "primitive_type [29963,29970]",
      "dest": "primitive_type [4267,4274]"
    },
    {
      "src": "call_argument [16097,16140]",
      "dest": "call_argument [12907,12950]"
    },
    {
      "src": "): ) [17528,17529]",
      "dest": "): ) [14338,14339]"
    },
    {
      "src": "identifier: UintSet [10854,10861]",
      "dest": "identifier: UintSet [26307,26314]"
    },
    {
      "src": "type_name [32045,32052]",
      "dest": "type_name [4278,4285]"
    },
    {
      "src": "comment: // File: contracts/common/Initializable.sol [36815,36858]",
      "dest": "comment: // File: contracts/common/Initializable.sol [48432,48475]"
    },
    {
      "src": "yul_identifier [33499,33505]",
      "dest": "yul_identifier [45119,45125]"
    },
    {
      "src": "parameter [495,502]",
      "dest": "parameter [495,502]"
    },
    {
      "src": "primitive_type [37729,37736]",
      "dest": "primitive_type [49383,49390]"
    },
    {
      "src": "(: ( [35135,35136]",
      "dest": "(: ( [46729,46730]"
    },
    {
      "src": "identifier: result [29409,29415]",
      "dest": "identifier: result [41361,41367]"
    },
    {
      "src": "(: ( [15023,15024]",
      "dest": "(: ( [11833,11834]"
    },
    {
      "src": "memory: memory [30606,30612]",
      "dest": "memory: memory [42793,42799]"
    },
    {
      "src": "inheritance_specifier [20202,20209]",
      "dest": "inheritance_specifier [29380,29387]"
    },
    {
      "src": "identifier: dest [35198,35202]",
      "dest": "identifier: dest [46796,46800]"
    },
    {
      "src": "identifier: role [21570,21574]",
      "dest": "identifier: role [30748,30752]"
    },
    {
      "src": "type_name [29963,29970]",
      "dest": "type_name [4267,4274]"
    },
    {
      "src": "primitive_type [22058,22065]",
      "dest": "primitive_type [31236,31243]"
    },
    {
      "src": "variable_declaration_statement [29963,30009]",
      "dest": "variable_declaration_statement [41577,41603]"
    },
    {
      "src": "yul_function_call [17558,17577]",
      "dest": "yul_function_call [14368,14387]"
    },
    {
      "src": "identifier: TRANSFER_EVENT_SIG [37523,37541]",
      "dest": "identifier: TRANSFER_EVENT_SIG [49177,49195]"
    },
    {
      "src": "primitive_type [14038,14042]",
      "dest": "primitive_type [10848,10852]"
    },
    {
      "src": "yul_evm_builtin [33659,33662]",
      "dest": "yul_evm_builtin [45279,45282]"
    },
    {
      "src": "bool: bool [5135,5139]",
      "dest": "bool: bool [20588,20592]"
    },
    {
      "src": ",: , [30049,30050]",
      "dest": ",: , [4344,4345]"
    },
    {
      "src": "identifier: _indexes [7099,7107]",
      "dest": "identifier: _indexes [22552,22560]"
    },
    {
      "src": "call_argument [26210,26217]",
      "dest": "call_argument [35388,35395]"
    },
    {
      "src": "bytes: bytes [15390,15395]",
      "dest": "bytes: bytes [12200,12205]"
    },
    {
      "src": "(: ( [27476,27477]",
      "dest": "(: ( [37640,37641]"
    },
    {
      "src": "): ) [35209,35210]",
      "dest": "): ) [46807,46808]"
    },
    {
      "src": "identifier: LIST_SHORT_START [32851,32867]",
      "dest": "identifier: LIST_SHORT_START [44432,44448]"
    },
    {
      "src": "identifier: set [8055,8058]",
      "dest": "identifier: set [23508,23511]"
    },
    {
      "src": "return_statement [16649,16714]",
      "dest": "return_statement [13459,13524]"
    },
    {
      "src": "state_mutability [31808,31812]",
      "dest": "state_mutability [43614,43618]"
    },
    {
      "src": ".: . [39299,39300]",
      "dest": ".: . [51044,51045]"
    },
    {
      "src": "if_statement [34043,34366]",
      "dest": "if_statement [45668,45968]"
    },
    {
      "src": "(: ( [1112,1113]",
      "dest": "(: ( [1112,1113]"
    },
    {
      "src": "identifier: TOKEN_TYPE [37453,37463]",
      "dest": "identifier: TOKEN_TYPE [49107,49117]"
    },
    {
      "src": ",: , [2810,2811]",
      "dest": ",: , [2810,2811]"
    },
    {
      "src": "variable_declaration [31424,31443]",
      "dest": "variable_declaration [43249,43268]"
    },
    {
      "src": "type_name [16532,16537]",
      "dest": "type_name [13342,13347]"
    },
    {
      "src": "\": \" [36997,36998]",
      "dest": "\": \" [48614,48615]"
    },
    {
      "src": "yul_path [17566,17576]",
      "dest": "yul_path [14376,14386]"
    },
    {
      "src": "state_mutability [325,329]",
      "dest": "state_mutability [325,329]"
    },
    {
      "src": ">: > [17273,17274]",
      "dest": ">: > [14083,14084]"
    },
    {
      "src": "(: ( [5211,5212]",
      "dest": "(: ( [20664,20665]"
    },
    {
      "src": "identifier: Set [8222,8225]",
      "dest": "identifier: Set [23675,23678]"
    },
    {
      "src": "identifier: account [12777,12784]",
      "dest": "identifier: account [9587,9594]"
    },
    {
      "src": "return: return [9771,9777]",
      "dest": "return: return [25224,25230]"
    },
    {
      "src": "type_name [6318,6325]",
      "dest": "type_name [21771,21778]"
    },
    {
      "src": "identifier: contains [21831,21839]",
      "dest": "identifier: contains [31009,31017]"
    },
    {
      "src": "yul_assignment [31523,31551]",
      "dest": "yul_assignment [43345,43373]"
    },
    {
      "src": "): ) [32508,32509]",
      "dest": "): ) [44073,44074]"
    },
    {
      "src": "assignment_expression [5356,5396]",
      "dest": "assignment_expression [20809,20849]"
    },
    {
      "src": "type_name [20333,20357]",
      "dest": "type_name [29511,29535]"
    },
    {
      "src": "type_name [9279,9286]",
      "dest": "type_name [24732,24739]"
    },
    {
      "src": "): ) [10658,10659]",
      "dest": "): ) [26111,26112]"
    },
    {
      "src": "identifier: byteLen [33160,33167]",
      "dest": "identifier: byteLen [44757,44764]"
    },
    {
      "src": ":=: := [33492,33494]",
      "dest": ":=: := [45112,45114]"
    },
    {
      "src": "identifier: index [7998,8003]",
      "dest": "identifier: index [23451,23456]"
    },
    {
      "src": "identifier: result [28473,28479]",
      "dest": "identifier: result [39466,39472]"
    },
    {
      "src": "yul_evm_builtin [33124,33127]",
      "dest": "yul_evm_builtin [44721,44724]"
    },
    {
      "src": ",: , [25838,25839]",
      "dest": ",: , [35016,35017]"
    },
    {
      "src": "): ) [26218,26219]",
      "dest": "): ) [35396,35397]"
    },
    {
      "src": "primitive_type [37765,37772]",
      "dest": "primitive_type [49419,49426]"
    },
    {
      "src": "binary_expression [30245,30265]",
      "dest": "binary_expression [38674,38694]"
    },
    {
      "src": "internal: internal [15437,15445]",
      "dest": "internal: internal [12247,12255]"
    },
    {
      "src": "function: function [21717,21725]",
      "dest": "function: function [30895,30903]"
    },
    {
      "src": "call_argument [11402,11424]",
      "dest": "call_argument [26855,26877]"
    },
    {
      "src": "): ) [346,347]",
      "dest": "): ) [346,347]"
    },
    {
      "src": "call_argument [32308,32354]",
      "dest": "call_argument [18216,18260]"
    },
    {
      "src": "identifier: functionCall [15361,15373]",
      "dest": "identifier: functionCall [12171,12183]"
    },
    {
      "src": "): ) [31829,31830]",
      "dest": "): ) [6812,6813]"
    },
    {
      "src": "array_access [5867,5886]",
      "dest": "array_access [21320,21339]"
    },
    {
      "src": "primitive_type [37358,37365]",
      "dest": "primitive_type [49012,49019]"
    },
    {
      "src": "function_definition [16405,16721]",
      "dest": "function_definition [13215,13531]"
    },
    {
      "src": "(: ( [39462,39463]",
      "dest": "(: ( [51207,51208]"
    },
    {
      "src": "(: ( [33248,33249]",
      "dest": "(: ( [44845,44846]"
    },
    {
      "src": "-: - [32799,32800]",
      "dest": "-: - [44378,44379]"
    },
    {
      "src": "\": \" [16636,16637]",
      "dest": "\": \" [13446,13447]"
    },
    {
      "src": "if: if [30398,30400]",
      "dest": "if: if [42585,42587]"
    },
    {
      "src": "primitive_type [23965,23972]",
      "dest": "primitive_type [33143,33150]"
    },
    {
      "src": "new: new [31446,31449]",
      "dest": "new: new [43271,43274]"
    },
    {
      "src": "variable_declaration_statement [6605,6648]",
      "dest": "variable_declaration_statement [22058,22101]"
    },
    {
      "src": "(: ( [8861,8862]",
      "dest": "(: ( [24314,24315]"
    },
    {
      "src": "call_argument [39779,39806]",
      "dest": "call_argument [51524,51551]"
    },
    {
      "src": ".: . [28333,28334]",
      "dest": ".: . [43758,43759]"
    },
    {
      "src": "user_defined_type [31099,31106]",
      "dest": "user_defined_type [43088,43095]"
    },
    {
      "src": "(: ( [40397,40398]",
      "dest": "(: ( [52140,52141]"
    },
    {
      "src": "memory: memory [26503,26509]",
      "dest": "memory: memory [35681,35687]"
    },
    {
      "src": "comment: /**      * @dev Returns the number of values on the set. O(1).      */ [7429,7501]",
      "dest": "comment: /**      * @dev Returns the number of values on the set. O(1).      */ [22882,22954]"
    },
    {
      "src": "call_expression [26676,26761]",
      "dest": "call_expression [35854,35939]"
    },
    {
      "src": ":=: := [28869,28871]",
      "dest": ":=: := [39904,39906]"
    },
    {
      "src": "<: < [33997,33998]",
      "dest": "<: < [45608,45609]"
    },
    {
      "src": "visibility [22072,22078]",
      "dest": "visibility [31250,31256]"
    },
    {
      "src": "type_cast_expression [9786,9817]",
      "dest": "type_cast_expression [25239,25270]"
    },
    {
      "src": "primitive_type [38505,38510]",
      "dest": "primitive_type [50159,50164]"
    },
    {
      "src": "call_argument [26252,26256]",
      "dest": "call_argument [35430,35434]"
    },
    {
      "src": "if_statement [32739,33714]",
      "dest": "if_statement [44318,45334]"
    },
    {
      "src": "type_name [10645,10652]",
      "dest": "type_name [26098,26105]"
    },
    {
      "src": "primitive_type [28800,28807]",
      "dest": "primitive_type [6864,6871]"
    },
    {
      "src": "]: ] [6870,6871]",
      "dest": "]: ] [22323,22324]"
    },
    {
      "src": "primitive_type [36117,36124]",
      "dest": "primitive_type [47734,47741]"
    },
    {
      "src": "primitive_type [38443,38450]",
      "dest": "primitive_type [50097,50104]"
    },
    {
      "src": "{: { [32190,32191]",
      "dest": "{: { [43849,43850]"
    },
    {
      "src": "): ) [12847,12848]",
      "dest": "): ) [9657,9658]"
    },
    {
      "src": "yul_assignment [33648,33688]",
      "dest": "yul_assignment [45268,45308]"
    },
    {
      "src": "return: return [7131,7137]",
      "dest": "return: return [22584,22590]"
    },
    {
      "src": "parameter [10453,10457]",
      "dest": "parameter [25906,25910]"
    },
    {
      "src": "primitive_type [23105,23112]",
      "dest": "primitive_type [32283,32290]"
    },
    {
      "src": "yul_identifier [35262,35270]",
      "dest": "yul_identifier [46864,46872]"
    },
    {
      "src": "): ) [34662,34663]",
      "dest": "): ) [46217,46218]"
    },
    {
      "src": "(: ( [24776,24777]",
      "dest": "(: ( [33954,33955]"
    },
    {
      "src": "visibility [8005,8012]",
      "dest": "visibility [23458,23465]"
    },
    {
      "src": "event_paramater [37729,37754]",
      "dest": "event_paramater [49383,49408]"
    },
    {
      "src": "[: [ [23557,23558]",
      "dest": "[: [ [32735,32736]"
    },
    {
      "src": "return_type_definition [29485,29502]",
      "dest": "return_type_definition [42102,42119]"
    },
    {
      "src": "else: else [33388,33392]",
      "dest": "else: else [45008,45012]"
    },
    {
      "src": "if: if [33987,33989]",
      "dest": "if: if [45598,45600]"
    },
    {
      "src": "type_name [28140,28147]",
      "dest": "type_name [5502,5509]"
    },
    {
      "src": "parameter [10110,10123]",
      "dest": "parameter [25563,25576]"
    },
    {
      "src": "block_statement [28414,28561]",
      "dest": "block_statement [39407,39555]"
    },
    {
      "src": "identifier: value [16693,16698]",
      "dest": "identifier: value [13503,13508]"
    },
    {
      "src": "type_name [14987,14992]",
      "dest": "type_name [11797,11802]"
    },
    {
      "src": "\": \" [16097,16098]",
      "dest": "\": \" [12907,12908]"
    },
    {
      "src": "primitive_type [11394,11401]",
      "dest": "primitive_type [26847,26854]"
    },
    {
      "src": "call_argument [16912,16943]",
      "dest": "call_argument [13722,13753]"
    },
    {
      "src": "primitive_type [9713,9720]",
      "dest": "primitive_type [25166,25173]"
    },
    {
      "src": "(: ( [5134,5135]",
      "dest": "(: ( [20587,20588]"
    },
    {
      "src": "identifier: _values [5199,5206]",
      "dest": "identifier: _values [20652,20659]"
    },
    {
      "src": "=: = [30243,30244]",
      "dest": "=: = [38672,38673]"
    },
    {
      "src": "identifier: role [23113,23117]",
      "dest": "identifier: role [32291,32295]"
    },
    {
      "src": "event_paramater [2569,2582]",
      "dest": "event_paramater [2569,2582]"
    },
    {
      "src": "string_literal [39862,39904]",
      "dest": "string_literal [51607,51649]"
    },
    {
      "src": "function: function [436,444]",
      "dest": "function: function [436,444]"
    },
    {
      "src": "yul_path [32649,32655]",
      "dest": "yul_path [44205,44211]"
    },
    {
      "src": "(: ( [16760,16761]",
      "dest": "(: ( [13570,13571]"
    },
    {
      "src": "parameter [13837,13851]",
      "dest": "parameter [10647,10661]"
    },
    {
      "src": "type_name [4869,4876]",
      "dest": "type_name [20322,20329]"
    },
    {
      "src": "solidity_pragma_token [36869,36883]",
      "dest": "solidity_pragma_token [35543,35557]"
    },
    {
      "src": "yul_identifier [32931,32936]",
      "dest": "yul_identifier [44512,44517]"
    },
    {
      "src": "(: ( [40027,40028]",
      "dest": "(: ( [51770,51771]"
    },
    {
      "src": "(: ( [29839,29840]",
      "dest": "(: ( [38950,38951]"
    },
    {
      "src": "identifier: items [28402,28407]",
      "dest": "identifier: items [39395,39400]"
    },
    {
      "src": "parameter [23478,23490]",
      "dest": "parameter [32656,32668]"
    },
    {
      "src": "primitive_type [2295,2302]",
      "dest": "primitive_type [2295,2302]"
    },
    {
      "src": "yul_identifier [29312,29315]",
      "dest": "yul_identifier [41264,41267]"
    },
    {
      "src": "{: { [32611,32612]",
      "dest": "{: { [44167,44168]"
    },
    {
      "src": ".: . [40083,40084]",
      "dest": ".: . [51826,51827]"
    },
    {
      "src": "memory: memory [15976,15982]",
      "dest": "memory: memory [12786,12792]"
    },
    {
      "src": "{: { [10907,10908]",
      "dest": "{: { [26360,26361]"
    },
    {
      "src": "primitive_type [39811,39818]",
      "dest": "primitive_type [51556,51563]"
    },
    {
      "src": "type_name [770,777]",
      "dest": "type_name [770,777]"
    },
    {
      "src": "): ) [29727,29728]",
      "dest": "): ) [42235,42236]"
    },
    {
      "src": "parameter [23140,23147]",
      "dest": "parameter [32318,32325]"
    },
    {
      "src": ":: : [14077,14078]",
      "dest": ":: : [10887,10888]"
    },
    {
      "src": "call_expression [5157,5178]",
      "dest": "call_expression [20610,20631]"
    },
    {
      "src": "identifier: set [10105,10108]",
      "dest": "identifier: set [25558,25561]"
    },
    {
      "src": "internal: internal [10875,10883]",
      "dest": "internal: internal [26328,26336]"
    },
    {
      "src": "{: { [10689,10690]",
      "dest": "{: { [26142,26143]"
    },
    {
      "src": "identifier: Set [9880,9883]",
      "dest": "identifier: Set [25333,25336]"
    },
    {
      "src": "call_argument [23551,23573]",
      "dest": "call_argument [32729,32751]"
    },
    {
      "src": "type_name [5679,5682]",
      "dest": "type_name [21132,21135]"
    },
    {
      "src": "): ) [9726,9727]",
      "dest": "): ) [25179,25180]"
    },
    {
      "src": "return_statement [28573,28587]",
      "dest": "return_statement [39567,39581]"
    },
    {
      "src": ".: . [37341,37342]",
      "dest": ".: . [48962,48963]"
    },
    {
      "src": "{: { [31831,31832]",
      "dest": "{: { [43634,43635]"
    },
    {
      "src": "(: ( [17089,17090]",
      "dest": "(: ( [13899,13900]"
    },
    {
      "src": "comment: // bytes32 values. [4342,4360]",
      "dest": "comment: // bytes32 values. [19795,19813]"
    },
    {
      "src": ".: . [10175,10176]",
      "dest": ".: . [25628,25629]"
    },
    {
      "src": "abstract: abstract [20167,20175]",
      "dest": "abstract: abstract [29345,29353]"
    },
    {
      "src": "): ) [33508,33509]",
      "dest": "): ) [45128,45129]"
    },
    {
      "src": "type_name [22793,22800]",
      "dest": "type_name [31971,31978]"
    },
    {
      "src": "contract_body [20210,26302]",
      "dest": "contract_body [29388,35480]"
    },
    {
      "src": "(: ( [33155,33156]",
      "dest": "(: ( [44752,44753]"
    },
    {
      "src": "]: ] [5885,5886]",
      "dest": "]: ] [21338,21339]"
    },
    {
      "src": "\": \" [29537,29538]",
      "dest": "\": \" [16968,16969]"
    },
    {
      "src": "visibility [37862,37870]",
      "dest": "visibility [49516,49524]"
    },
    {
      "src": "(: ( [37910,37911]",
      "dest": "(: ( [49564,49565]"
    },
    {
      "src": "identifier: len [34756,34759]",
      "dest": "identifier: len [46311,46314]"
    },
    {
      "src": "external: external [3332,3340]",
      "dest": "external: external [18785,18793]"
    },
    {
      "src": "function_definition [25704,25903]",
      "dest": "function_definition [34882,35081]"
    },
    {
      "src": "identifier: set [9086,9089]",
      "dest": "identifier: set [24539,24542]"
    },
    {
      "src": "yul_identifier [34824,34828]",
      "dest": "yul_identifier [46379,46383]"
    },
    {
      "src": "memory: memory [15030,15036]",
      "dest": "memory: memory [11840,11846]"
    },
    {
      "src": "identifier: IMintableERC20 [2926,2940]",
      "dest": "identifier: IMintableERC20 [18379,18393]"
    },
    {
      "src": "variable_declaration_statement [28042,28073]",
      "dest": "variable_declaration_statement [39188,39216]"
    },
    {
      "src": "(: ( [8516,8517]",
      "dest": "(: ( [23969,23970]"
    },
    {
      "src": "identifier: Approval [2755,2763]",
      "dest": "identifier: Approval [2755,2763]"
    },
    {
      "src": "identifier: role [26252,26256]",
      "dest": "identifier: role [35430,35434]"
    },
    {
      "src": "type_name [8753,8763]",
      "dest": "type_name [24206,24216]"
    },
    {
      "src": "identifier: role [22863,22867]",
      "dest": "identifier: role [32041,32045]"
    },
    {
      "src": "string [16097,16140]",
      "dest": "string [12907,12950]"
    },
    {
      "src": "assembly: assembly [27673,27681]",
      "dest": "assembly: assembly [37732,37740]"
    },
    {
      "src": "-: - [34301,34302]",
      "dest": "-: - [45890,45891]"
    },
    {
      "src": "(: ( [33864,33865]",
      "dest": "(: ( [5201,5202]"
    },
    {
      "src": "identifier: i [28409,28410]",
      "dest": "identifier: i [39402,39403]"
    },
    {
      "src": "yul_path [29329,29335]",
      "dest": "yul_path [41281,41287]"
    },
    {
      "src": "uint256: uint256 [27351,27358]",
      "dest": "uint256: uint256 [15166,15173]"
    },
    {
      "src": "identifier: getRoleMemberCount [22039,22057]",
      "dest": "identifier: getRoleMemberCount [31217,31235]"
    },
    {
      "src": "call_argument [39862,39904]",
      "dest": "call_argument [51607,51649]"
    },
    {
      "src": "mstore: mstore [35246,35252]",
      "dest": "mstore: mstore [46848,46854]"
    },
    {
      "src": "comment: /*  * @author Hamdi Allam hamdi.allam97@gmail.com  * Please reach out with any questions or concerns  * https://github.com/hamdiallam/Solidity-RLP/blob/e681e25a376dbd5426b509380bc03446f05d0f97/contracts/RLPReader.sol  */ [26828,27052]",
      "dest": "comment: /*  * @author Hamdi Allam hamdi.allam97@gmail.com  * Please reach out with any questions or concerns  * https://github.com/hamdiallam/Solidity-RLP/blob/e681e25a376dbd5426b509380bc03446f05d0f97/contracts/RLPReader.sol  */ [36006,36230]"
    },
    {
      "src": "member_expression [28329,28340]",
      "dest": "member_expression [43754,43765]"
    },
    {
      "src": "(: ( [16891,16892]",
      "dest": "(: ( [13701,13702]"
    },
    {
      "src": "bool: bool [10683,10687]",
      "dest": "bool: bool [26136,26140]"
    },
    {
      "src": "identifier: RLPItem [27875,27882]",
      "dest": "identifier: RLPItem [39081,39088]"
    },
    {
      "src": "yul_function_call [33245,33260]",
      "dest": "yul_function_call [44842,44857]"
    },
    {
      "src": "(: ( [31455,31456]",
      "dest": "(: ( [43280,43281]"
    },
    {
      "src": "modifier_invocation [37871,37882]",
      "dest": "modifier_invocation [49525,49536]"
    },
    {
      "src": "(: ( [11366,11367]",
      "dest": "(: ( [26819,26820]"
    },
    {
      "src": "[: [ [25991,25992]",
      "dest": "[: [ [35169,35170]"
    },
    {
      "src": "call_argument [16090,16095]",
      "dest": "call_argument [12900,12905]"
    },
    {
      "src": "identifier: returndata [17045,17055]",
      "dest": "identifier: returndata [13855,13865]"
    },
    {
      "src": "type_name [15954,15961]",
      "dest": "type_name [12764,12771]"
    },
    {
      "src": "(: ( [15373,15374]",
      "dest": "(: ( [12183,12184]"
    },
    {
      "src": "=: = [28298,28299]",
      "dest": "=: = [43723,43724]"
    },
    {
      "src": "variable_declaration [32045,32060]",
      "dest": "variable_declaration [39285,39296]"
    },
    {
      "src": "uint256: uint256 [10898,10905]",
      "dest": "uint256: uint256 [26351,26358]"
    },
    {
      "src": "returns: returns [16523,16530]",
      "dest": "returns: returns [13333,13340]"
    },
    {
      "src": "contract_body [36911,37061]",
      "dest": "contract_body [48528,48678]"
    },
    {
      "src": "function_definition [18372,18478]",
      "dest": "function_definition [27550,27656]"
    },
    {
      "src": "identifier: Context [20202,20209]",
      "dest": "identifier: Context [29380,29387]"
    },
    {
      "src": "identifier: require [16557,16564]",
      "dest": "identifier: require [13367,13374]"
    },
    {
      "src": "storage: storage [10407,10414]",
      "dest": "storage: storage [25860,25867]"
    },
    {
      "src": "type_name [2812,2819]",
      "dest": "type_name [2812,2819]"
    },
    {
      "src": "comment: /**      * @dev Add a value to a set. O(1).      *      * Returns true if the value was added to the set, that is if it was not      * already present.      */ [4902,5066]",
      "dest": "comment: /**      * @dev Add a value to a set. O(1).      *      * Returns true if the value was added to the set, that is if it was not      * already present.      */ [20355,20519]"
    },
    {
      "src": "): ) [38027,38028]",
      "dest": "): ) [49681,49682]"
    },
    {
      "src": "parameter [15989,16002]",
      "dest": "parameter [12799,12812]"
    },
    {
      "src": ",: , [32936,32937]",
      "dest": ",: , [44517,44518]"
    },
    {
      "src": "indexed: indexed [21200,21207]",
      "dest": "indexed: indexed [30378,30385]"
    },
    {
      "src": "\": \" [24828,24829]",
      "dest": "\": \" [34006,34007]"
    },
    {
      "src": "return_statement [10160,10200]",
      "dest": "return_statement [25613,25653]"
    },
    {
      "src": "yul_path [31023,31029]",
      "dest": "yul_path [43012,43018]"
    },
    {
      "src": "{: { [33322,33323]",
      "dest": "{: { [44930,44931]"
    },
    {
      "src": "string_literal [23590,23639]",
      "dest": "string_literal [32768,32817]"
    },
    {
      "src": "identifier: len [31456,31459]",
      "dest": "identifier: len [43281,43284]"
    },
    {
      "src": "(: ( [4857,4858]",
      "dest": "(: ( [20310,20311]"
    },
    {
      "src": "comment: /// @notice Abstract interface that defines methods for custom predicates [35465,35538]",
      "dest": "comment: /// @notice Abstract interface that defines methods for custom predicates [47082,47155]"
    },
    {
      "src": "call_argument [26740,26750]",
      "dest": "call_argument [35918,35928]"
    },
    {
      "src": "identifier: _roles [22856,22862]",
      "dest": "identifier: _roles [32034,32040]"
    },
    {
      "src": "comment: // All indexes are 1-based [6893,6919]",
      "dest": "comment: // All indexes are 1-based [22346,22372]"
    },
    {
      "src": "(: ( [12804,12805]",
      "dest": "(: ( [9614,9615]"
    },
    {
      "src": "type_name [16022,16027]",
      "dest": "type_name [12832,12837]"
    },
    {
      "src": "type_name [2329,2333]",
      "dest": "type_name [2329,2333]"
    },
    {
      "src": "visibility [16514,16522]",
      "dest": "visibility [13324,13332]"
    },
    {
      "src": "visibility [8470,8478]",
      "dest": "visibility [23923,23931]"
    },
    {
      "src": "identifier: _revertMsg [26542,26552]",
      "dest": "identifier: _revertMsg [35720,35730]"
    },
    {
      "src": "bool: bool [8810,8814]",
      "dest": "bool: bool [24263,24267]"
    },
    {
      "src": "emit_statement [25788,25851]",
      "dest": "emit_statement [34966,35029]"
    },
    {
      "src": "identifier: item [29635,29639]",
      "dest": "identifier: item [42180,42184]"
    },
    {
      "src": "solidity_version:  0.6.6 [26373,26379]",
      "dest": "solidity_version:  0.6.6 [18358,18364]"
    },
    {
      "src": "bytes32: bytes32 [25480,25487]",
      "dest": "bytes32: bytes32 [34658,34665]"
    },
    {
      "src": ",: , [26725,26726]",
      "dest": ",: , [35903,35904]"
    },
    {
      "src": "call_expression [27980,28029]",
      "dest": "call_expression [39154,39175]"
    },
    {
      "src": "type_name [21192,21199]",
      "dest": "type_name [30370,30377]"
    },
    {
      "src": "function: function [293,301]",
      "dest": "function: function [293,301]"
    },
    {
      "src": "sub: sub [32927,32930]",
      "dest": "sub: sub [44508,44511]"
    },
    {
      "src": "=>: => [4866,4868]",
      "dest": "=>: => [20319,20321]"
    },
    {
      "src": "type_name [22093,22100]",
      "dest": "type_name [31271,31278]"
    },
    {
      "src": "binary_expression [34133,34156]",
      "dest": "binary_expression [45731,45754]"
    },
    {
      "src": "number_literal: 1 [39696,39697]",
      "dest": "number_literal: 1 [51441,51442]"
    },
    {
      "src": "identifier: data [16790,16794]",
      "dest": "identifier: data [13600,13604]"
    },
    {
      "src": "type_name [36738,36745]",
      "dest": "type_name [48355,48362]"
    },
    {
      "src": "parameter [34562,34573]",
      "dest": "parameter [8090,8099]"
    },
    {
      "src": "call_argument [16892,16910]",
      "dest": "call_argument [13702,13720]"
    },
    {
      "src": "yul_identifier [17579,17594]",
      "dest": "yul_identifier [14389,14404]"
    },
    {
      "src": "}: } [10951,10952]",
      "dest": "}: } [26404,26405]"
    },
    {
      "src": "identifier: account [25953,25960]",
      "dest": "identifier: account [35131,35138]"
    },
    {
      "src": "call_argument [38615,38626]",
      "dest": "call_argument [50271,50282]"
    },
    {
      "src": "identifier: rootToken [39200,39209]",
      "dest": "identifier: rootToken [50945,50954]"
    },
    {
      "src": "address: address [13881,13888]",
      "dest": "address: address [10691,10698]"
    },
    {
      "src": "call_argument [24016,24061]",
      "dest": "call_argument [33194,33239]"
    },
    {
      "src": "member_expression [18703,18711]",
      "dest": "member_expression [27881,27889]"
    },
    {
      "src": "mload: mload [17512,17517]",
      "dest": "mload: mload [14322,14327]"
    },
    {
      "src": "primitive_type [8854,8861]",
      "dest": "primitive_type [24307,24314]"
    },
    {
      "src": "}: } [7198,7199]",
      "dest": "}: } [22651,22652]"
    },
    {
      "src": "(: ( [35191,35192]",
      "dest": "(: ( [46789,46790]"
    },
    {
      "src": "indexed: indexed [20913,20920]",
      "dest": "indexed: indexed [30091,30098]"
    },
    {
      "src": "uint256: uint256 [8862,8869]",
      "dest": "uint256: uint256 [24315,24322]"
    },
    {
      "src": "indexed: indexed [21225,21232]",
      "dest": "indexed: indexed [30403,30410]"
    },
    {
      "src": "identifier: RLPItem [39375,39382]",
      "dest": "identifier: RLPItem [51120,51127]"
    },
    {
      "src": "identifier: RLPItem [29760,29767]",
      "dest": "identifier: RLPItem [42268,42275]"
    },
    {
      "src": "is: is [37203,37205]",
      "dest": "is: is [48824,48826]"
    },
    {
      "src": "interface: interface [35540,35549]",
      "dest": "interface: interface [47157,47166]"
    },
    {
      "src": "}: } [26298,26299]",
      "dest": "}: } [35476,35477]"
    },
    {
      "src": "bytes32: bytes32 [26651,26658]",
      "dest": "bytes32: bytes32 [35829,35836]"
    },
    {
      "src": "call_argument [38562,38574]",
      "dest": "call_argument [50216,50228]"
    },
    {
      "src": "type_name [24690,24697]",
      "dest": "type_name [33868,33875]"
    },
    {
      "src": "(: ( [29243,29244]",
      "dest": "(: ( [41142,41143]"
    },
    {
      "src": "primitive_type [38415,38422]",
      "dest": "primitive_type [50069,50076]"
    },
    {
      "src": "(: ( [31778,31779]",
      "dest": "(: ( [43584,43585]"
    },
    {
      "src": "comment: // Look for revert reason and bubble it up if present [17184,17237]",
      "dest": "comment: // Look for revert reason and bubble it up if present [13994,14047]"
    },
    {
      "src": "indexed: indexed [2772,2779]",
      "dest": "indexed: indexed [2772,2779]"
    },
    {
      "src": "): ) [37807,37808]",
      "dest": "): ) [49461,49462]"
    },
    {
      "src": "=: = [31325,31326]",
      "dest": "=: = [38620,38621]"
    },
    {
      "src": "identifier: set [11406,11409]",
      "dest": "identifier: set [26859,26862]"
    },
    {
      "src": "number_literal: 0 [17275,17276]",
      "dest": "number_literal: 0 [14085,14086]"
    },
    {
      "src": "identifier: currPtr [32053,32060]",
      "dest": "identifier: memPtr [39290,39296]"
    },
    {
      "src": "=: = [32130,32131]",
      "dest": "=: = [43789,43790]"
    },
    {
      "src": "function_definition [9216,9333]",
      "dest": "function_definition [24669,24786]"
    },
    {
      "src": "yul_evm_builtin [33495,33498]",
      "dest": "yul_evm_builtin [45115,45118]"
    },
    {
      "src": "type_name [37651,37658]",
      "dest": "type_name [49305,49312]"
    },
    {
      "src": "type_name [27546,27553]",
      "dest": "type_name [37683,37690]"
    },
    {
      "src": "(: ( [26181,26182]",
      "dest": "(: ( [35359,35360]"
    },
    {
      "src": "address: address [40390,40397]",
      "dest": "address: address [52133,52140]"
    },
    {
      "src": "member_expression [26182,26209]",
      "dest": "member_expression [35360,35387]"
    },
    {
      "src": "member_expression [29364,29375]",
      "dest": "member_expression [41316,41327]"
    },
    {
      "src": "number_literal: 0 [5917,5918]",
      "dest": "number_literal: 0 [21370,21371]"
    },
    {
      "src": "}: } [30491,30492]",
      "dest": "}: } [42678,42679]"
    },
    {
      "src": "): ) [28508,28509]",
      "dest": "): ) [39501,39502]"
    },
    {
      "src": "}: } [37060,37061]",
      "dest": "}: } [48677,48678]"
    },
    {
      "src": "(: ( [17660,17661]",
      "dest": "(: ( [14470,14471]"
    },
    {
      "src": "identifier: recipient [13826,13835]",
      "dest": "identifier: recipient [10636,10645]"
    },
    {
      "src": "{: { [29813,29814]",
      "dest": "{: { [42318,42319]"
    },
    {
      "src": "function: function [23459,23467]",
      "dest": "function: function [32637,32645]"
    },
    {
      "src": "primitive_type [37651,37658]",
      "dest": "primitive_type [49305,49312]"
    },
    {
      "src": "identifier: recipient [14056,14065]",
      "dest": "identifier: recipient [10866,10875]"
    },
    {
      "src": "yul_identifier [33440,33447]",
      "dest": "yul_identifier [45060,45067]"
    },
    {
      "src": "identifier: length [5390,5396]",
      "dest": "identifier: length [20843,20849]"
    },
    {
      "src": ",: , [16095,16096]",
      "dest": ",: , [12905,12906]"
    },
    {
      "src": "(: ( [35045,35046]",
      "dest": "(: ( [46631,46632]"
    },
    {
      "src": "\": \" [29573,29574]",
      "dest": "\": \" [17010,17011]"
    },
    {
      "src": "assignment_expression [32783,32823]",
      "dest": "assignment_expression [44362,44402]"
    },
    {
      "src": "constant: constant [27158,27166]",
      "dest": "constant: constant [36336,36344]"
    },
    {
      "src": "function_definition [733,810]",
      "dest": "function_definition [733,810]"
    },
    {
      "src": "type_name [9052,9056]",
      "dest": "type_name [24505,24509]"
    },
    {
      "src": "member_expression [8138,8149]",
      "dest": "member_expression [23591,23602]"
    },
    {
      "src": "=: = [28815,28816]",
      "dest": "=: = [6874,6875]"
    },
    {
      "src": "function: function [7960,7968]",
      "dest": "function: function [23413,23421]"
    },
    {
      "src": "bytes: bytes [15024,15029]",
      "dest": "bytes: bytes [11834,11839]"
    },
    {
      "src": "==: == [29644,29646]",
      "dest": "==: == [42189,42191]"
    },
    {
      "src": "function_definition [31761,32421]",
      "dest": "function_definition [43567,43989]"
    },
    {
      "src": "pragma_directive [2890,2912]",
      "dest": "pragma_directive [48752,48774]"
    },
    {
      "src": "binary_expression [34104,34156]",
      "dest": "binary_expression [45702,45754]"
    },
    {
      "src": "returns: returns [29173,29180]",
      "dest": "returns: returns [41077,41084]"
    },
    {
      "src": "identifier: memPtr [30948,30954]",
      "dest": "identifier: memPtr [42937,42943]"
    },
    {
      "src": "type_name [12586,12593]",
      "dest": "type_name [9396,9403]"
    },
    {
      "src": "type_name [9751,9758]",
      "dest": "type_name [25204,25211]"
    },
    {
      "src": "(: ( [39679,39680]",
      "dest": "(: ( [51424,51425]"
    },
    {
      "src": "comment: // Update the index for the moved value [6795,6834]",
      "dest": "comment: // Update the index for the moved value [22248,22287]"
    },
    {
      "src": "{: { [8036,8037]",
      "dest": "{: { [23489,23490]"
    },
    {
      "src": ".: . [39698,39699]",
      "dest": ".: . [51443,51444]"
    },
    {
      "src": "exp: exp [30454,30457]",
      "dest": "exp: exp [42641,42644]"
    },
    {
      "src": "==: == [39808,39810]",
      "dest": "==: == [51553,51555]"
    },
    {
      "src": "=: = [12606,12607]",
      "dest": "=: = [9416,9417]"
    },
    {
      "src": "&&: && [12829,12831]",
      "dest": "&&: && [9639,9641]"
    },
    {
      "src": "(: ( [35197,35198]",
      "dest": "(: ( [46795,46796]"
    },
    {
      "src": "memory: memory [31787,31793]",
      "dest": "memory: memory [43593,43599]"
    },
    {
      "src": "call_argument [16565,16595]",
      "dest": "call_argument [13375,13405]"
    },
    {
      "src": "identifier: lastIndex [6326,6335]",
      "dest": "identifier: lastIndex [21779,21788]"
    },
    {
      "src": "): ) [9121,9122]",
      "dest": "): ) [24574,24575]"
    },
    {
      "src": "return_statement [7175,7188]",
      "dest": "return_statement [22628,22641]"
    },
    {
      "src": "\": \" [15081,15082]",
      "dest": "\": \" [11891,11892]"
    },
    {
      "src": "string [29537,29574]",
      "dest": "string [16968,17011]"
    },
    {
      "src": "comment: // topic1 is `from` address [39710,39737]",
      "dest": "comment: // topic1 is `from` address [51455,51482]"
    },
    {
      "src": "parameter [10143,10147]",
      "dest": "parameter [25596,25600]"
    },
    {
      "src": "parameter [25945,25960]",
      "dest": "parameter [35123,35138]"
    },
    {
      "src": "(: ( [39510,39511]",
      "dest": "(: ( [51255,51256]"
    },
    {
      "src": "<: < [40354,40355]",
      "dest": "<: < [52097,52098]"
    },
    {
      "src": "identifier: listLength [28148,28158]",
      "dest": "identifier: c [5510,5511]"
    },
    {
      "src": "parameter [5728,5732]",
      "dest": "parameter [21181,21185]"
    },
    {
      "src": "visibility [29141,29149]",
      "dest": "visibility [41063,41071]"
    },
    {
      "src": "uint256: uint256 [32532,32539]",
      "dest": "uint256: uint256 [6149,6156]"
    },
    {
      "src": "visibility [11344,11352]",
      "dest": "visibility [26797,26805]"
    },
    {
      "src": ",: , [17577,17578]",
      "dest": ",: , [14387,14388]"
    },
    {
      "src": "identifier: role [21742,21746]",
      "dest": "identifier: role [30920,30924]"
    },
    {
      "src": "return_type_definition [32523,32540]",
      "dest": "return_type_definition [6140,6157]"
    },
    {
      "src": "string_literal [29917,29949]",
      "dest": "string_literal [6186,6214]"
    },
    {
      "src": "!=: != [12814,12816]",
      "dest": "!=: != [9624,9626]"
    },
    {
      "src": "call_argument [15527,15539]",
      "dest": "call_argument [12337,12349]"
    },
    {
      "src": "call_argument [38007,38019]",
      "dest": "call_argument [49661,49673]"
    },
    {
      "src": "pragma: pragma [17802,17808]",
      "dest": "pragma: pragma [14622,14628]"
    },
    {
      "src": "user_defined_type [20241,20265]",
      "dest": "user_defined_type [29419,29443]"
    },
    {
      "src": "return: return [10160,10166]",
      "dest": "return: return [25613,25619]"
    },
    {
      "src": "function: function [32473,32481]",
      "dest": "function: function [44041,44049]"
    },
    {
      "src": "view: view [9737,9741]",
      "dest": "view: view [25190,25194]"
    },
    {
      "src": "type_name [20409,20438]",
      "dest": "type_name [29587,29616]"
    },
    {
      "src": "private: private [25962,25969]",
      "dest": "private: private [35140,35147]"
    },
    {
      "src": "return_type_definition [30633,30650]",
      "dest": "return_type_definition [8154,8171]"
    },
    {
      "src": ",: , [5694,5695]",
      "dest": ",: , [21147,21148]"
    },
    {
      "src": "return: return [8827,8833]",
      "dest": "return: return [24280,24286]"
    },
    {
      "src": ":=: := [35113,35115]",
      "dest": ":=: := [46707,46709]"
    },
    {
      "src": "returns: returns [27537,27544]",
      "dest": "returns: returns [37674,37681]"
    },
    {
      "src": "or: or [35259,35261]",
      "dest": "or: or [46861,46863]"
    },
    {
      "src": "address: address [39192,39199]",
      "dest": "address: address [50937,50944]"
    },
    {
      "src": "parameter [8455,8468]",
      "dest": "parameter [23908,23921]"
    },
    {
      "src": "solidity_version:  0.6.6 [35384,35390]",
      "dest": "solidity_version:  0.6.6 [47001,47007]"
    },
    {
      "src": "event: event [21152,21157]",
      "dest": "event: event [30330,30335]"
    },
    {
      "src": "call_argument [39584,39627]",
      "dest": "call_argument [51329,51372]"
    },
    {
      "src": "!: ! [36988,36989]",
      "dest": "!: ! [48605,48606]"
    },
    {
      "src": "(: ( [26251,26252]",
      "dest": "(: ( [35429,35430]"
    },
    {
      "src": "type_name [30598,30605]",
      "dest": "type_name [42785,42792]"
    },
    {
      "src": "identifier: weiValue [17079,17087]",
      "dest": "identifier: weiValue [13889,13897]"
    },
    {
      "src": "view: view [9038,9042]",
      "dest": "view: view [24491,24495]"
    },
    {
      "src": "(: ( [10736,10737]",
      "dest": "(: ( [26189,26190]"
    },
    {
      "src": "(: ( [37806,37807]",
      "dest": "(: ( [49460,49461]"
    },
    {
      "src": "}: } [18721,18722]",
      "dest": "}: } [27899,27900]"
    },
    {
      "src": "yul_identifier [35126,35129]",
      "dest": "yul_identifier [46720,46723]"
    },
    {
      "src": "{: { [33393,33394]",
      "dest": "{: { [45013,45014]"
    },
    {
      "src": ",: , [8453,8454]",
      "dest": ",: , [23906,23907]"
    },
    {
      "src": "): ) [9027,9028]",
      "dest": "): ) [24480,24481]"
    },
    {
      "src": "]: ] [22131,22132]",
      "dest": "]: ] [31309,31310]"
    },
    {
      "src": "): ) [24113,24114]",
      "dest": "): ) [33291,33292]"
    },
    {
      "src": "else: else [17630,17634]",
      "dest": "else: else [14440,14444]"
    },
    {
      "src": "private: private [31800,31807]",
      "dest": "private: private [43606,43613]"
    },
    {
      "src": "function_body [21792,21856]",
      "dest": "function_body [30970,31034]"
    },
    {
      "src": "identifier: mask [35205,35209]",
      "dest": "identifier: mask [46803,46807]"
    },
    {
      "src": "(: ( [27874,27875]",
      "dest": "(: ( [39080,39081]"
    },
    {
      "src": "=: = [27274,27275]",
      "dest": "=: = [36458,36459]"
    },
    {
      "src": "member_expression [30245,30256]",
      "dest": "member_expression [38674,38685]"
    },
    {
      "src": "identifier: target [15067,15073]",
      "dest": "identifier: target [11877,11883]"
    },
    {
      "src": "state_variable_declaration [27287,27317]",
      "dest": "state_variable_declaration [36471,36501]"
    },
    {
      "src": "type_name [27105,27110]",
      "dest": "type_name [36283,36288]"
    },
    {
      "src": "type_name [20290,20297]",
      "dest": "type_name [29468,29475]"
    },
    {
      "src": "identifier: _inner [11410,11416]",
      "dest": "identifier: _inner [26863,26869]"
    },
    {
      "src": "function_definition [29091,29423]",
      "dest": "function_definition [41022,41375]"
    },
    {
      "src": ",: , [33570,33571]",
      "dest": ",: , [45190,45191]"
    },
    {
      "src": "-: - [34338,34339]",
      "dest": "-: - [45940,45941]"
    },
    {
      "src": "type_name [16761,16768]",
      "dest": "type_name [13571,13578]"
    },
    {
      "src": "): ) [9324,9325]",
      "dest": "): ) [24777,24778]"
    },
    {
      "src": "(: ( [10716,10717]",
      "dest": "(: ( [26169,26170]"
    },
    {
      "src": "yul_evm_builtin [29319,29322]",
      "dest": "yul_evm_builtin [41271,41274]"
    },
    {
      "src": "yul_path [35262,35270]",
      "dest": "yul_path [46864,46872]"
    },
    {
      "src": ".: . [20346,20347]",
      "dest": ".: . [29524,29525]"
    },
    {
      "src": "): ) [34167,34168]",
      "dest": "): ) [45755,45756]"
    },
    {
      "src": "member_expression [6338,6356]",
      "dest": "member_expression [21791,21809]"
    },
    {
      "src": "comment: /**  * @dev Collection of functions related to the address type  */ [11556,11625]",
      "dest": "comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [2950,3525]"
    },
    {
      "src": "returns: returns [29485,29492]",
      "dest": "returns: returns [42102,42109]"
    },
    {
      "src": "identifier: errorMessage [15527,15539]",
      "dest": "identifier: errorMessage [12337,12349]"
    },
    {
      "src": "return_type_definition [5126,5140]",
      "dest": "return_type_definition [20579,20593]"
    },
    {
      "src": "function_definition [36683,36808]",
      "dest": "function_definition [48300,48425]"
    },
    {
      "src": "identifier: sender [36721,36727]",
      "dest": "identifier: sender [48338,48344]"
    },
    {
      "src": "return: return [29700,29706]",
      "dest": "return: return [42208,42214]"
    },
    {
      "src": "memory: memory [28725,28731]",
      "dest": "memory: memory [39719,39725]"
    },
    {
      "src": "parameter [10399,10418]",
      "dest": "parameter [25852,25871]"
    },
    {
      "src": "identifier: set [10933,10936]",
      "dest": "identifier: set [26386,26389]"
    },
    {
      "src": "internal: internal [16004,16012]",
      "dest": "internal: internal [12814,12822]"
    },
    {
      "src": "): ) [26279,26280]",
      "dest": "): ) [35457,35458]"
    },
    {
      "src": "identifier: this [40036,40040]",
      "dest": "identifier: this [51779,51783]"
    },
    {
      "src": "type_cast_expression [39811,39821]",
      "dest": "type_cast_expression [51556,51566]"
    },
    {
      "src": ",: , [28500,28501]",
      "dest": ",: , [39493,39494]"
    },
    {
      "src": "string_literal [37564,37599]",
      "dest": "string_literal [49218,49253]"
    },
    {
      "src": "state_mutability [28747,28751]",
      "dest": "state_mutability [39741,39745]"
    },
    {
      "src": "indexed: indexed [37695,37702]",
      "dest": "indexed: indexed [49349,49356]"
    },
    {
      "src": "(: ( [29634,29635]",
      "dest": "(: ( [42179,42180]"
    },
    {
      "src": "}: } [9129,9130]",
      "dest": "}: } [24582,24583]"
    },
    {
      "src": "): ) [9286,9287]",
      "dest": "): ) [24739,24740]"
    },
    {
      "src": "expression_statement [39455,39639]",
      "dest": "expression_statement [51200,51384]"
    },
    {
      "src": "yul_evm_builtin [35259,35261]",
      "dest": "yul_evm_builtin [46861,46863]"
    },
    {
      "src": "return_statement [34325,34366]",
      "dest": "return_statement [45927,45968]"
    },
    {
      "src": "primitive_type [32017,32024]",
      "dest": "primitive_type [6732,6739]"
    },
    {
      "src": "==: == [39514,39516]",
      "dest": "==: == [51259,51261]"
    },
    {
      "src": "(: ( [30845,30846]",
      "dest": "(: ( [42881,42882]"
    },
    {
      "src": "call_expression [29715,29727]",
      "dest": "call_expression [42223,42235]"
    },
    {
      "src": "if_statement [40337,40439]",
      "dest": "if_statement [52080,52182]"
    },
    {
      "src": "identifier: returndata_size [17493,17508]",
      "dest": "identifier: returndata_size [14303,14318]"
    },
    {
      "src": "identifier: STRING_SHORT_START [33999,34017]",
      "dest": "identifier: STRING_SHORT_START [45610,45628]"
    },
    {
      "src": "identifier: RoleData [20313,20321]",
      "dest": "identifier: RoleData [29491,29499]"
    },
    {
      "src": "): ) [31298,31299]",
      "dest": "): ) [41543,41544]"
    },
    {
      "src": "(: ( [5155,5156]",
      "dest": "(: ( [20608,20609]"
    },
    {
      "src": "): ) [16712,16713]",
      "dest": "): ) [13522,13523]"
    },
    {
      "src": "): ) [38636,38637]",
      "dest": "): ) [50292,50293]"
    },
    {
      "src": "address: address [37651,37658]",
      "dest": "address: address [49305,49312]"
    },
    {
      "src": "call_expression [39485,39512]",
      "dest": "call_expression [51230,51257]"
    },
    {
      "src": "(: ( [29721,29722]",
      "dest": "(: ( [42229,42230]"
    },
    {
      "src": "identifier: _payloadOffset [28314,28328]",
      "dest": "identifier: _payloadOffset [43739,43753]"
    },
    {
      "src": "visibility [8792,8800]",
      "dest": "visibility [24245,24253]"
    },
    {
      "src": "add: add [17558,17561]",
      "dest": "add: add [14368,14371]"
    },
    {
      "src": "(: ( [31142,31143]",
      "dest": "(: ( [43131,43132]"
    },
    {
      "src": "primitive_type [2329,2333]",
      "dest": "primitive_type [2329,2333]"
    },
    {
      "src": "return_type_definition [10889,10906]",
      "dest": "return_type_definition [26342,26359]"
    },
    {
      "src": "parameter [29450,29469]",
      "dest": "parameter [42067,42086]"
    },
    {
      "src": "(: ( [21733,21734]",
      "dest": "(: ( [30911,30912]"
    },
    {
      "src": "identifier: value [16590,16595]",
      "dest": "identifier: value [13400,13405]"
    },
    {
      "src": "comment: // Delete the index for the deleted slot [7034,7074]",
      "dest": "comment: // Delete the index for the deleted slot [22487,22527]"
    },
    {
      "src": "=: = [37044,37045]",
      "dest": "=: = [48661,48662]"
    },
    {
      "src": "solidity: solidity [17809,17817]",
      "dest": "solidity: solidity [14629,14637]"
    },
    {
      "src": "state_mutability [22079,22083]",
      "dest": "state_mutability [31257,31261]"
    },
    {
      "src": "primitive_type [7365,7369]",
      "dest": "primitive_type [22818,22822]"
    },
    {
      "src": "storage: storage [9001,9008]",
      "dest": "storage: storage [24454,24461]"
    },
    {
      "src": "primitive_type [31367,31374]",
      "dest": "primitive_type [40332,40339]"
    },
    {
      "src": "string_literal [14119,14179]",
      "dest": "string_literal [10929,10989]"
    },
    {
      "src": "): ) [13945,13946]",
      "dest": "): ) [10755,10756]"
    },
    {
      "src": "call_expression [23535,23640]",
      "dest": "call_expression [32713,32818]"
    },
    {
      "src": "visibility [3332,3340]",
      "dest": "visibility [18785,18793]"
    },
    {
      "src": "(: ( [31231,31232]",
      "dest": "(: ( [41529,41530]"
    },
    {
      "src": "return_type_definition [5719,5733]",
      "dest": "return_type_definition [21172,21186]"
    },
    {
      "src": "{: { [24736,24737]",
      "dest": "{: { [33914,33915]"
    },
    {
      "src": "identifier: account [26258,26265]",
      "dest": "identifier: account [35436,35443]"
    },
    {
      "src": "}: } [17628,17629]",
      "dest": "}: } [14438,14439]"
    },
    {
      "src": "member_expression [18460,18470]",
      "dest": "member_expression [27638,27648]"
    },
    {
      "src": "type_name [17032,17037]",
      "dest": "type_name [13842,13847]"
    },
    {
      "src": "returns: returns [32523,32530]",
      "dest": "returns: returns [6140,6147]"
    },
    {
      "src": "): ) [15113,15114]",
      "dest": "): ) [11923,11924]"
    },
    {
      "src": "variable_declaration [27648,27662]",
      "dest": "variable_declaration [16894,16914]"
    },
    {
      "src": "event_definition [20825,20935]",
      "dest": "event_definition [30003,30113]"
    },
    {
      "src": "identifier: byte0 [32626,32631]",
      "dest": "identifier: byte0 [44182,44187]"
    },
    {
      "src": "primitive_type [16022,16027]",
      "dest": "primitive_type [12832,12837]"
    },
    {
      "src": "identifier: newAdminRole [20921,20933]",
      "dest": "identifier: newAdminRole [30099,30111]"
    },
    {
      "src": "): ) [30901,30902]",
      "dest": "): ) [42896,42897]"
    },
    {
      "src": "identifier: _functionCallWithValue [16738,16760]",
      "dest": "identifier: _functionCallWithValue [13548,13570]"
    },
    {
      "src": "visibility [23119,23125]",
      "dest": "visibility [32297,32303]"
    },
    {
      "src": "): ) [29686,29687]",
      "dest": "): ) [42194,42195]"
    },
    {
      "src": "): ) [20933,20934]",
      "dest": "): ) [30111,30112]"
    },
    {
      "src": "member_expression [39330,39343]",
      "dest": "member_expression [51075,51088]"
    },
    {
      "src": "}: } [26091,26092]",
      "dest": "}: } [35269,35270]"
    },
    {
      "src": "parameter [339,346]",
      "dest": "parameter [339,346]"
    },
    {
      "src": "type_name [2764,2771]",
      "dest": "type_name [2764,2771]"
    },
    {
      "src": "yul_function_call [33128,33141]",
      "dest": "yul_function_call [44725,44738]"
    },
    {
      "src": "identifier: itemLength [29971,29981]",
      "dest": "identifier: memPtr [41582,41588]"
    },
    {
      "src": "comment: // SPDX-License-Identifier: MIT [18787,18818]",
      "dest": "comment: // SPDX-License-Identifier: MIT [27965,27996]"
    },
    {
      "src": "\": \" [8118,8119]",
      "dest": "\": \" [23571,23572]"
    },
    {
      "src": "identifier: byte0 [32793,32798]",
      "dest": "identifier: byte0 [44372,44377]"
    },
    {
      "src": "(: ( [33826,33827]",
      "dest": "(: ( [45446,45447]"
    },
    {
      "src": "): ) [15435,15436]",
      "dest": "): ) [12245,12246]"
    },
    {
      "src": "primitive_type [4869,4876]",
      "dest": "primitive_type [20322,20329]"
    },
    {
      "src": "visibility [20470,20476]",
      "dest": "visibility [29648,29654]"
    },
    {
      "src": "call_argument [38786,38795]",
      "dest": "call_argument [50567,50576]"
    },
    {
      "src": "}: } [35301,35302]",
      "dest": "}: } [46918,46919]"
    },
    {
      "src": "): ) [27779,27780]",
      "dest": "): ) [37838,37839]"
    },
    {
      "src": "identifier: _msgData [18495,18503]",
      "dest": "identifier: _msgData [27673,27681]"
    },
    {
      "src": "function_body [16036,16149]",
      "dest": "function_body [12846,12959]"
    },
    {
      "src": "call_argument [9810,9815]",
      "dest": "call_argument [25263,25268]"
    },
    {
      "src": "identifier: data [15983,15987]",
      "dest": "identifier: data [12793,12797]"
    },
    {
      "src": "constant: constant [27249,27257]",
      "dest": "constant: constant [36430,36438]"
    },
    {
      "src": "public: public [37809,37815]",
      "dest": "public: public [49463,49469]"
    },
    {
      "src": "uint256: uint256 [22093,22100]",
      "dest": "uint256: uint256 [31271,31278]"
    },
    {
      "src": "(: ( [28066,28067]",
      "dest": "(: ( [39209,39210]"
    },
    {
      "src": "yul_evm_builtin [28880,28885]",
      "dest": "yul_evm_builtin [39915,39920]"
    },
    {
      "src": "indexed: indexed [37737,37744]",
      "dest": "indexed: indexed [49391,49398]"
    },
    {
      "src": "storage: storage [10862,10869]",
      "dest": "storage: storage [26315,26322]"
    },
    {
      "src": "primitive_type [495,502]",
      "dest": "primitive_type [495,502]"
    },
    {
      "src": "identifier: getRoleMember [22765,22778]",
      "dest": "identifier: getRoleMember [31943,31956]"
    },
    {
      "src": "function: function [16729,16737]",
      "dest": "function: function [13539,13547]"
    },
    {
      "src": "\": \" [37911,37912]",
      "dest": "\": \" [49565,49566]"
    },
    {
      "src": "event_paramater [21554,21574]",
      "dest": "event_paramater [30732,30752]"
    },
    {
      "src": "{: { [17635,17636]",
      "dest": "{: { [14445,14446]"
    },
    {
      "src": "(: ( [40035,40036]",
      "dest": "(: ( [51778,51779]"
    },
    {
      "src": "yul_identifier [33249,33256]",
      "dest": "yul_identifier [44846,44853]"
    },
    {
      "src": "function_body [10149,10207]",
      "dest": "function_body [25602,25660]"
    },
    {
      "src": "member_expression [26562,26578]",
      "dest": "member_expression [35740,35756]"
    },
    {
      "src": "solidity_version_comparison_operator [11544,11546]",
      "dest": "solidity_version_comparison_operator [8354,8356]"
    },
    {
      "src": "type_name [30940,30947]",
      "dest": "type_name [4717,4724]"
    },
    {
      "src": "call_expression [39951,39976]",
      "dest": "call_expression [51696,51721]"
    },
    {
      "src": ",: , [8852,8853]",
      "dest": ",: , [24305,24306]"
    },
    {
      "src": "identifier: to [2565,2567]",
      "dest": "identifier: to [2565,2567]"
    },
    {
      "src": "type_name [39651,39658]",
      "dest": "type_name [51396,51403]"
    },
    {
      "src": "binary_expression [34654,34662]",
      "dest": "binary_expression [46209,46217]"
    },
    {
      "src": "parameter [9751,9758]",
      "dest": "parameter [25204,25211]"
    },
    {
      "src": "variable_declaration_statement [30940,30973]",
      "dest": "variable_declaration_statement [42932,42962]"
    },
    {
      "src": "}: } [9897,9898]",
      "dest": "}: } [25350,25351]"
    },
    {
      "src": "): ) [11342,11343]",
      "dest": "): ) [26795,26796]"
    },
    {
      "src": ",: , [25814,25815]",
      "dest": ",: , [34992,34993]"
    },
    {
      "src": "identifier: _inner [9802,9808]",
      "dest": "identifier: _inner [25255,25261]"
    },
    {
      "src": "number_literal: 0 [39819,39820]",
      "dest": "number_literal: 0 [51564,51565]"
    },
    {
      "src": "user_defined_type [28113,28120]",
      "dest": "user_defined_type [39256,39263]"
    },
    {
      "src": "call_argument [38676,38685]",
      "dest": "call_argument [50330,50339]"
    },
    {
      "src": "yul_decimal_number: 1 [33258,33259]",
      "dest": "yul_decimal_number: 1 [44855,44856]"
    },
    {
      "src": "identifier: contains [10615,10623]",
      "dest": "identifier: contains [26068,26076]"
    },
    {
      "src": "uint256: uint256 [38587,38594]",
      "dest": "uint256: uint256 [50243,50250]"
    },
    {
      "src": "(: ( [34653,34654]",
      "dest": "(: ( [46208,46209]"
    },
    {
      "src": "function_definition [38385,38863]",
      "dest": "function_definition [50039,50608]"
    },
    {
      "src": "virtual: virtual [24728,24735]",
      "dest": "virtual: virtual [33906,33913]"
    },
    {
      "src": "yul_function_call [30401,30412]",
      "dest": "yul_function_call [42588,42599]"
    },
    {
      "src": "call_argument [15075,15079]",
      "dest": "call_argument [11885,11889]"
    },
    {
      "src": "identifier: target [15962,15968]",
      "dest": "identifier: target [12772,12778]"
    },
    {
      "src": "number_literal: 1 [6302,6303]",
      "dest": "number_literal: 1 [21755,21756]"
    },
    {
      "src": "if: if [25981,25983]",
      "dest": "if: if [35159,35161]"
    },
    {
      "src": "return: return [18696,18702]",
      "dest": "return: return [27874,27880]"
    },
    {
      "src": "member_expression [32132,32143]",
      "dest": "member_expression [43791,43802]"
    },
    {
      "src": "(: ( [7310,7311]",
      "dest": "(: ( [22763,22764]"
    },
    {
      "src": "storage: storage [7315,7322]",
      "dest": "storage: storage [22768,22775]"
    },
    {
      "src": "call_expression [8834,8878]",
      "dest": "call_expression [24287,24331]"
    },
    {
      "src": "visibility [5711,5718]",
      "dest": "visibility [21164,21171]"
    },
    {
      "src": "(: ( [2328,2329]",
      "dest": "(: ( [2328,2329]"
    },
    {
      "src": "return: return [33726,33732]",
      "dest": "return: return [45346,45352]"
    },
    {
      "src": "): ) [4876,4877]",
      "dest": "): ) [20329,20330]"
    },
    {
      "src": "modifier_definition [26637,26781]",
      "dest": "modifier_definition [35815,35959]"
    },
    {
      "src": "array_access [40070,40083]",
      "dest": "array_access [51813,51826]"
    },
    {
      "src": "identifier: transferFrom [2247,2259]",
      "dest": "identifier: transferFrom [2247,2259]"
    },
    {
      "src": "primitive_type [32494,32501]",
      "dest": "primitive_type [16859,16866]"
    },
    {
      "src": "primitive_type [8810,8814]",
      "dest": "primitive_type [24263,24267]"
    },
    {
      "src": "type_name [10089,10096]",
      "dest": "type_name [25542,25549]"
    },
    {
      "src": "identifier: UintSet [10399,10406]",
      "dest": "identifier: UintSet [25852,25859]"
    },
    {
      "src": "identifier: Transfer [2518,2526]",
      "dest": "identifier: Transfer [2518,2526]"
    },
    {
      "src": "member_expression [9798,9808]",
      "dest": "member_expression [25251,25261]"
    },
    {
      "src": "\": \" [26618,26619]",
      "dest": "\": \" [35796,35797]"
    },
    {
      "src": "member_expression [23167,23189]",
      "dest": "member_expression [32345,32367]"
    },
    {
      "src": "variable_declaration [39989,40009]",
      "dest": "variable_declaration [51732,51752]"
    },
    {
      "src": "string [30051,30092]",
      "dest": "string [4349,4381]"
    },
    {
      "src": "primitive_type [23492,23499]",
      "dest": "primitive_type [32670,32677]"
    },
    {
      "src": "if: if [34193,34195]",
      "dest": "if: if [45794,45796]"
    },
    {
      "src": "comment: /**      * @dev Emitted when `account` is revoked `role`.      *      * `sender` is the account that originated the contract call:      *   - if using `revokeRole`, it is the admin role bearer      *   - if using `renounceRole`, it is the role bearer (i.e. `account`)      */ [21249,21530]",
      "dest": "comment: /**      * @dev Emitted when `account` is revoked `role`.      *      * `sender` is the account that originated the contract call:      *   - if using `revokeRole`, it is the admin role bearer      *   - if using `renounceRole`, it is the role bearer (i.e. `account`)      */ [30427,30708]"
    },
    {
      "src": "): ) [10742,10743]",
      "dest": "): ) [26195,26196]"
    },
    {
      "src": "primitive_type [21601,21608]",
      "dest": "primitive_type [30779,30786]"
    },
    {
      "src": "return_type_definition [15015,15037]",
      "dest": "return_type_definition [11825,11847]"
    },
    {
      "src": "true [37046,37050]",
      "dest": "true [48663,48667]"
    },
    {
      "src": "identifier: value [16479,16484]",
      "dest": "identifier: value [13289,13294]"
    },
    {
      "src": "(: ( [32236,32237]",
      "dest": "(: ( [43894,43895]"
    },
    {
      "src": ".: . [28821,28822]",
      "dest": ".: . [39856,39857]"
    },
    {
      "src": "struct_member [20376,20394]",
      "dest": "struct_member [29554,29572]"
    },
    {
      "src": "variable_declaration_statement [28383,28397]",
      "dest": "variable_declaration_statement [39379,39390]"
    },
    {
      "src": "): ) [10943,10944]",
      "dest": "): ) [26396,26397]"
    },
    {
      "src": "identifier: set [7590,7593]",
      "dest": "identifier: set [23043,23046]"
    },
    {
      "src": ",: , [30469,30470]",
      "dest": ",: , [42656,42657]"
    },
    {
      "src": "identifier: LIST_LONG_START [27258,27273]",
      "dest": "identifier: LIST_LONG_START [36439,36454]"
    },
    {
      "src": "identifier: item [28067,28071]",
      "dest": "identifier: item [39210,39214]"
    },
    {
      "src": "address: address [8455,8462]",
      "dest": "address: address [23908,23915]"
    },
    {
      "src": ",: , [8081,8082]",
      "dest": ",: , [23534,23535]"
    },
    {
      "src": "): ) [18504,18505]",
      "dest": "): ) [27682,27683]"
    },
    {
      "src": "member_expression [6848,6860]",
      "dest": "member_expression [22301,22313]"
    },
    {
      "src": "\": \" [29685,29686]",
      "dest": "\": \" [18036,18037]"
    },
    {
      "src": "}: } [28593,28594]",
      "dest": "}: } [39587,39588]"
    },
    {
      "src": "memory: memory [29768,29774]",
      "dest": "memory: memory [42276,42282]"
    },
    {
      "src": "): ) [33019,33020]",
      "dest": "): ) [44600,44601]"
    },
    {
      "src": "expression_statement [38733,38856]",
      "dest": "expression_statement [50532,50601]"
    },
    {
      "src": ",: , [10108,10109]",
      "dest": ",: , [25561,25562]"
    },
    {
      "src": "identifier: value [10118,10123]",
      "dest": "identifier: value [25571,25576]"
    },
    {
      "src": "[: [ [39307,39308]",
      "dest": "[: [ [51052,51053]"
    },
    {
      "src": "): ) [15036,15037]",
      "dest": "): ) [11846,11847]"
    },
    {
      "src": "uint8: uint8 [27243,27248]",
      "dest": "uint8: uint8 [36424,36429]"
    },
    {
      "src": ".: . [25873,25874]",
      "dest": ".: . [35051,35052]"
    },
    {
      "src": "call_argument [5212,5217]",
      "dest": "call_argument [20665,20670]"
    },
    {
      "src": "identifier: len [29640,29643]",
      "dest": "identifier: len [42185,42188]"
    },
    {
      "src": ",: , [15388,15389]",
      "dest": ",: , [12198,12199]"
    },
    {
      "src": "binary_expression [32684,32710]",
      "dest": "binary_expression [44240,44266]"
    },
    {
      "src": "identifier: memPtr [30250,30256]",
      "dest": "identifier: memPtr [38679,38685]"
    },
    {
      "src": "[: [ [8149,8150]",
      "dest": "[: [ [23602,23603]"
    },
    {
      "src": "identifier: functionCall [14958,14970]",
      "dest": "identifier: functionCall [11768,11780]"
    },
    {
      "src": ",: , [2293,2294]",
      "dest": ",: , [2293,2294]"
    },
    {
      "src": "^:  ^ [17817,17819]",
      "dest": "^:  ^ [14637,14639]"
    },
    {
      "src": "variable_declaration [29963,29981]",
      "dest": "variable_declaration [41577,41588]"
    },
    {
      "src": "): ) [808,809]",
      "dest": "): ) [808,809]"
    },
    {
      "src": "function: function [29091,29099]",
      "dest": "function: function [41022,41030]"
    },
    {
      "src": "yul_path [33134,33140]",
      "dest": "yul_path [44731,44737]"
    },
    {
      "src": "boolean_literal [5418,5422]",
      "dest": "boolean_literal [20871,20875]"
    },
    {
      "src": "call_expression [26067,26079]",
      "dest": "call_expression [35245,35257]"
    },
    {
      "src": "return: return [5411,5417]",
      "dest": "return: return [20864,20870]"
    },
    {
      "src": "identifier: role [24139,24143]",
      "dest": "identifier: role [33317,33321]"
    },
    {
      "src": "interface: interface [195,204]",
      "dest": "interface: interface [195,204]"
    },
    {
      "src": "): ) [35129,35130]",
      "dest": "): ) [46723,46724]"
    },
    {
      "src": "call_expression [29359,29391]",
      "dest": "call_expression [41311,41343]"
    },
    {
      "src": "type_name [27287,27292]",
      "dest": "type_name [36471,36476]"
    },
    {
      "src": "memory: memory [18543,18549]",
      "dest": "memory: memory [27721,27727]"
    },
    {
      "src": "primitive_type [36918,36922]",
      "dest": "primitive_type [48535,48539]"
    },
    {
      "src": "): ) [1175,1176]",
      "dest": "): ) [1175,1176]"
    },
    {
      "src": "identifier: WORD_SIZE [34745,34754]",
      "dest": "identifier: WORD_SIZE [46300,46309]"
    },
    {
      "src": ",: , [29845,29846]",
      "dest": ",: , [7552,7553]"
    },
    {
      "src": "parameter [16452,16469]",
      "dest": "parameter [13262,13279]"
    },
    {
      "src": "binary_expression [8055,8081]",
      "dest": "binary_expression [23508,23534]"
    },
    {
      "src": "=: = [33345,33346]",
      "dest": "=: = [44953,44954]"
    },
    {
      "src": "type_name [16471,16478]",
      "dest": "type_name [13281,13288]"
    },
    {
      "src": "yul_evm_builtin [34830,34835]",
      "dest": "yul_evm_builtin [46385,46390]"
    },
    {
      "src": "string [37911,37935]",
      "dest": "string [49565,49589]"
    },
    {
      "src": "call_argument [29715,29727]",
      "dest": "call_argument [42223,42235]"
    },
    {
      "src": "user_defined_type [9880,9883]",
      "dest": "user_defined_type [25333,25336]"
    },
    {
      "src": "yul_hex_number: 0xb7 [32938,32942]",
      "dest": "yul_hex_number: 0xb7 [44519,44523]"
    },
    {
      "src": "yul_function_call [27707,27722]",
      "dest": "yul_function_call [37766,37781]"
    },
    {
      "src": "): ) [2582,2583]",
      "dest": "): ) [2582,2583]"
    },
    {
      "src": "identifier: MANAGER_ROLE [38007,38019]",
      "dest": "identifier: MANAGER_ROLE [49661,49673]"
    },
    {
      "src": "function: function [34538,34546]",
      "dest": "function: function [46136,46144]"
    },
    {
      "src": "identifier: AddressSet [9689,9699]",
      "dest": "identifier: AddressSet [25142,25152]"
    },
    {
      "src": "identifier: result [31007,31013]",
      "dest": "identifier: result [42996,43002]"
    },
    {
      "src": "identifier: require [30718,30725]",
      "dest": "identifier: require [43157,43164]"
    },
    {
      "src": "]: ] [26193,26194]",
      "dest": "]: ] [35371,35372]"
    },
    {
      "src": "identifier: endPtr [32182,32188]",
      "dest": "identifier: endPtr [43841,43847]"
    },
    {
      "src": "expression_statement [30838,30903]",
      "dest": "expression_statement [42874,42898]"
    },
    {
      "src": "): ) [10873,10874]",
      "dest": "): ) [26326,26327]"
    },
    {
      "src": "internal: internal [25760,25768]",
      "dest": "internal: internal [34938,34946]"
    },
    {
      "src": ",: , [16794,16795]",
      "dest": ",: , [13604,13605]"
    },
    {
      "src": "yul_identifier [30404,30407]",
      "dest": "yul_identifier [42591,42594]"
    },
    {
      "src": "identifier: require [28196,28203]",
      "dest": "identifier: require [42329,42336]"
    },
    {
      "src": "primitive_type [1914,1918]",
      "dest": "primitive_type [1914,1918]"
    },
    {
      "src": "): ) [40362,40363]",
      "dest": "): ) [52105,52106]"
    },
    {
      "src": "return_statement [16047,16142]",
      "dest": "return_statement [12857,12952]"
    },
    {
      "src": "identifier: contractId [26579,26589]",
      "dest": "identifier: contractId [35757,35767]"
    },
    {
      "src": "boolean_literal [7138,7142]",
      "dest": "boolean_literal [22591,22595]"
    },
    {
      "src": "yul_evm_builtin [35120,35125]",
      "dest": "yul_evm_builtin [46714,46719]"
    },
    {
      "src": "call_argument [8537,8551]",
      "dest": "call_argument [23990,24004]"
    },
    {
      "src": "type_name [26651,26658]",
      "dest": "type_name [35829,35836]"
    },
    {
      "src": "): ) [39975,39976]",
      "dest": "): ) [51720,51721]"
    },
    {
      "src": "uint256: uint256 [15989,15996]",
      "dest": "uint256: uint256 [12799,12806]"
    },
    {
      "src": "function_definition [15352,15548]",
      "dest": "function_definition [12162,12358]"
    },
    {
      "src": "{: { [5734,5735]",
      "dest": "{: { [21187,21188]"
    },
    {
      "src": "member_expression [6742,6753]",
      "dest": "member_expression [22195,22206]"
    },
    {
      "src": "call_expression [37947,37985]",
      "dest": "call_expression [49601,49639]"
    },
    {
      "src": "): ) [39277,39278]",
      "dest": "): ) [51022,51023]"
    },
    {
      "src": "function_body [29201,29423]",
      "dest": "function_body [41100,41375]"
    },
    {
      "src": "): ) [17276,17277]",
      "dest": "): ) [14086,14087]"
    },
    {
      "src": "{: { [5440,5441]",
      "dest": "{: { [20893,20894]"
    },
    {
      "src": "(: ( [28760,28761]",
      "dest": "(: ( [39754,39755]"
    },
    {
      "src": "expression_statement [36980,37015]",
      "dest": "expression_statement [48597,48632]"
    },
    {
      "src": "call_argument [16693,16698]",
      "dest": "call_argument [13503,13508]"
    },
    {
      "src": "view: view [10669,10673]",
      "dest": "view: view [26122,26126]"
    },
    {
      "src": "): ) [18549,18550]",
      "dest": "): ) [27727,27728]"
    },
    {
      "src": "function: function [36683,36691]",
      "dest": "function: function [48300,48308]"
    },
    {
      "src": "address: address [15374,15381]",
      "dest": "address: address [12184,12191]"
    },
    {
      "src": "contract_body [212,2830]",
      "dest": "contract_body [212,2830]"
    },
    {
      "src": "contract_body [26431,26784]",
      "dest": "contract_body [35609,35962]"
    },
    {
      "src": ",: , [34828,34829]",
      "dest": ",: , [46383,46384]"
    },
    {
      "src": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with      * `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [15130,15346]",
      "dest": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with      * `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [11940,12156]"
    },
    {
      "src": "): ) [13893,13894]",
      "dest": "): ) [10703,10704]"
    },
    {
      "src": "{: { [40364,40365]",
      "dest": "{: { [52107,52108]"
    },
    {
      "src": "function_body [26665,26781]",
      "dest": "function_body [35843,35959]"
    },
    {
      "src": "type_name [23478,23485]",
      "dest": "type_name [32656,32663]"
    },
    {
      "src": "identifier: result [30300,30306]",
      "dest": "identifier: result [42487,42493]"
    },
    {
      "src": "\": \" [30051,30052]",
      "dest": "\": \" [4349,4350]"
    },
    {
      "src": "(: ( [8752,8753]",
      "dest": "(: ( [24205,24206]"
    },
    {
      "src": "member_expression [39779,39804]",
      "dest": "member_expression [51524,51549]"
    },
    {
      "src": "pragma: pragma [3443,3449]",
      "dest": "pragma: pragma [2923,2929]"
    },
    {
      "src": "call_argument [40028,40041]",
      "dest": "call_argument [51771,51784]"
    },
    {
      "src": "identifier: account [463,470]",
      "dest": "identifier: account [463,470]"
    },
    {
      "src": "number_literal: 1 [6359,6360]",
      "dest": "number_literal: 1 [21812,21813]"
    },
    {
      "src": "identifier: _length [10925,10932]",
      "dest": "identifier: _length [26378,26385]"
    },
    {
      "src": "): ) [2309,2310]",
      "dest": "): ) [2309,2310]"
    },
    {
      "src": "(: ( [26127,26128]",
      "dest": "(: ( [35305,35306]"
    },
    {
      "src": "[: [ [6636,6637]",
      "dest": "[: [ [22089,22090]"
    },
    {
      "src": ",: , [23963,23964]",
      "dest": ",: , [33141,33142]"
    },
    {
      "src": "\": \" [37012,37013]",
      "dest": "\": \" [48629,48630]"
    },
    {
      "src": "comment: // File: contracts/root/TokenPredicates/MintableERC20Predicate.sol [37065,37131]",
      "dest": "comment: // File: contracts/root/TokenPredicates/MintableERC20Predicate.sol [48682,48748]"
    },
    {
      "src": "type_name [5086,5089]",
      "dest": "type_name [20539,20542]"
    },
    {
      "src": "call_argument [10729,10743]",
      "dest": "call_argument [26182,26196]"
    },
    {
      "src": "user_defined_type [11308,11315]",
      "dest": "user_defined_type [26761,26768]"
    },
    {
      "src": "bool: bool [12297,12301]",
      "dest": "bool: bool [9107,9111]"
    },
    {
      "src": "using_directive [20272,20298]",
      "dest": "using_directive [29450,29476]"
    },
    {
      "src": "member_expression [9314,9324]",
      "dest": "member_expression [24767,24777]"
    },
    {
      "src": "call_expression [9794,9816]",
      "dest": "call_expression [25247,25269]"
    },
    {
      "src": "div: div [30442,30445]",
      "dest": "div: div [42629,42632]"
    },
    {
      "src": "boolean_literal [36932,36937]",
      "dest": "boolean_literal [48549,48554]"
    },
    {
      "src": "string [14088,14090]",
      "dest": "string [10898,10900]"
    },
    {
      "src": "(: ( [38747,38748]",
      "dest": "(: ( [50538,50539]"
    },
    {
      "src": "external: external [316,324]",
      "dest": "external: external [316,324]"
    },
    {
      "src": "(: ( [5166,5167]",
      "dest": "(: ( [20619,20620]"
    },
    {
      "src": "identifier: require [23535,23542]",
      "dest": "identifier: require [32713,32720]"
    },
    {
      "src": "): ) [37605,37606]",
      "dest": "): ) [49259,49260]"
    },
    {
      "src": "]: ] [39422,39423]",
      "dest": "]: ] [51167,51168]"
    },
    {
      "src": "parameter [1880,1894]",
      "dest": "parameter [1880,1894]"
    },
    {
      "src": "primitive_type [12257,12264]",
      "dest": "primitive_type [9067,9074]"
    },
    {
      "src": "(: ( [13809,13810]",
      "dest": "(: ( [10619,10620]"
    },
    {
      "src": "type_name [5103,5110]",
      "dest": "type_name [20556,20563]"
    },
    {
      "src": "[: [ [5368,5369]",
      "dest": "[: [ [20821,20822]"
    },
    {
      "src": "expression_statement [33337,33376]",
      "dest": "expression_statement [44945,44984]"
    },
    {
      "src": "]: ] [28121,28122]",
      "dest": "]: ] [39264,39265]"
    },
    {
      "src": "function_definition [26470,26629]",
      "dest": "function_definition [35648,35807]"
    },
    {
      "src": "{: { [8494,8495]",
      "dest": "{: { [23947,23948]"
    },
    {
      "src": "{: { [26665,26666]",
      "dest": "{: { [35843,35844]"
    },
    {
      "src": "call_argument [39680,39707]",
      "dest": "call_argument [51425,51452]"
    },
    {
      "src": "for: for [37328,37331]",
      "dest": "for: for [48949,48952]"
    },
    {
      "src": "member_expression [27760,27771]",
      "dest": "member_expression [37819,37830]"
    },
    {
      "src": "identifier: RoleGranted [26040,26051]",
      "dest": "identifier: RoleGranted [35218,35229]"
    },
    {
      "src": "return: return [10918,10924]",
      "dest": "return: return [26371,26377]"
    },
    {
      "src": ".: . [31250,31251]",
      "dest": ".: . [41534,41535]"
    },
    {
      "src": "type_name [1914,1918]",
      "dest": "type_name [1914,1918]"
    },
    {
      "src": "uint256: uint256 [28352,28359]",
      "dest": "uint256: uint256 [3868,3875]"
    },
    {
      "src": "type_name [27198,27203]",
      "dest": "type_name [36377,36382]"
    },
    {
      "src": "primitive_type [36766,36771]",
      "dest": "primitive_type [48383,48388]"
    },
    {
      "src": "state_mutability [10669,10673]",
      "dest": "state_mutability [26122,26126]"
    },
    {
      "src": "false: false [36932,36937]",
      "dest": "false: false [48549,48554]"
    },
    {
      "src": "(: ( [29322,29323]",
      "dest": "(: ( [41274,41275]"
    },
    {
      "src": "string_literal [37407,37421]",
      "dest": "string_literal [49061,49075]"
    },
    {
      "src": "call_argument [29840,29844]",
      "dest": "call_argument [38951,38955]"
    },
    {
      "src": "): ) [33259,33260]",
      "dest": "): ) [44856,44857]"
    },
    {
      "src": "identifier: UintSet [10624,10631]",
      "dest": "identifier: UintSet [26077,26084]"
    },
    {
      "src": "(: ( [39804,39805]",
      "dest": "(: ( [51549,51550]"
    },
    {
      "src": "type_name [37846,37853]",
      "dest": "type_name [49500,49507]"
    },
    {
      "src": ".: . [8141,8142]",
      "dest": ".: . [23594,23595]"
    },
    {
      "src": "identifier: role [25810,25814]",
      "dest": "identifier: role [34988,34992]"
    },
    {
      "src": "(: ( [16572,16573]",
      "dest": "(: ( [13382,13383]"
    },
    {
      "src": "comment: // Position of the value in the `values` array, plus 1 because index 0 [4724,4794]",
      "dest": "comment: // Position of the value in the `values` array, plus 1 because index 0 [20177,20247]"
    },
    {
      "src": "): ) [40402,40403]",
      "dest": "): ) [52145,52146]"
    },
    {
      "src": "struct_expression [14056,14087]",
      "dest": "struct_expression [10866,10897]"
    },
    {
      "src": "parameter [39220,39236]",
      "dest": "parameter [50965,50981]"
    },
    {
      "src": "): ) [7369,7370]",
      "dest": "): ) [22822,22823]"
    },
    {
      "src": "{: { [35566,35567]",
      "dest": "{: { [47183,47184]"
    },
    {
      "src": "(: ( [8841,8842]",
      "dest": "(: ( [24294,24295]"
    },
    {
      "src": ":=: := [27704,27706]",
      "dest": ":=: := [37763,37765]"
    },
    {
      "src": "identifier: _values [8059,8066]",
      "dest": "identifier: _values [23512,23519]"
    },
    {
      "src": "): ) [39706,39707]",
      "dest": "): ) [51451,51452]"
    },
    {
      "src": "type_name [29238,29243]",
      "dest": "type_name [41137,41142]"
    },
    {
      "src": "identifier: balanceOf [445,454]",
      "dest": "identifier: balanceOf [445,454]"
    },
    {
      "src": "number_literal: 0xf8 [27276,27280]",
      "dest": "number_literal: 0xf8 [36460,36464]"
    },
    {
      "src": "comment: // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement. [6497,6589]",
      "dest": "comment: // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement. [21950,22042]"
    },
    {
      "src": ",: , [32641,32642]",
      "dest": ",: , [44197,44198]"
    },
    {
      "src": "type_name [25741,25748]",
      "dest": "type_name [34919,34926]"
    },
    {
      "src": "{: { [33918,33919]",
      "dest": "{: { [45529,45530]"
    },
    {
      "src": "member_expression [30740,30748]",
      "dest": "member_expression [43165,43173]"
    },
    {
      "src": "call_argument [10184,10198]",
      "dest": "call_argument [25637,25651]"
    },
    {
      "src": "call_argument [38715,38721]",
      "dest": "call_argument [50369,50375]"
    },
    {
      "src": "(: ( [803,804]",
      "dest": "(: ( [803,804]"
    },
    {
      "src": "yul_function_call [35116,35142]",
      "dest": "yul_function_call [46710,46736]"
    },
    {
      "src": "identifier: balanceOf [40018,40027]",
      "dest": "identifier: balanceOf [51761,51770]"
    },
    {
      "src": "\": \" [29880,29881]",
      "dest": "\": \" [7582,7583]"
    },
    {
      "src": "): ) [39511,39512]",
      "dest": "): ) [51256,51257]"
    },
    {
      "src": "primitive_type [339,346]",
      "dest": "primitive_type [339,346]"
    },
    {
      "src": "): ) [28269,28270]",
      "dest": "): ) [42367,42368]"
    },
    {
      "src": "call_expression [24127,24153]",
      "dest": "call_expression [33305,33331]"
    },
    {
      "src": "[: [ [28090,28091]",
      "dest": "[: [ [39233,39234]"
    },
    {
      "src": "inheritance_specifier [2944,2950]",
      "dest": "inheritance_specifier [18397,18403]"
    },
    {
      "src": "(: ( [34046,34047]",
      "dest": "(: ( [45671,45672]"
    },
    {
      "src": ".: . [9089,9090]",
      "dest": ".: . [24542,24543]"
    },
    {
      "src": "block_statement [33322,33387]",
      "dest": "block_statement [44930,44995]"
    },
    {
      "src": "identifier: byte0 [34197,34202]",
      "dest": "identifier: byte0 [45798,45803]"
    },
    {
      "src": "identifier: value [9022,9027]",
      "dest": "identifier: value [24475,24480]"
    },
    {
      "src": "uint256: uint256 [11367,11374]",
      "dest": "uint256: uint256 [26820,26827]"
    },
    {
      "src": "(: ( [33575,33576]",
      "dest": "(: ( [45195,45196]"
    },
    {
      "src": "identifier: toBytes [31091,31098]",
      "dest": "identifier: toBytes [43080,43087]"
    },
    {
      "src": "identifier: set [10717,10720]",
      "dest": "identifier: set [26170,26173]"
    },
    {
      "src": "return: return [28947,28953]",
      "dest": "return: return [39995,40001]"
    },
    {
      "src": "string [24063,24113]",
      "dest": "string [33241,33291]"
    },
    {
      "src": "call_argument [31579,31599]",
      "dest": "call_argument [43401,43407]"
    },
    {
      "src": "binary_expression [34274,34309]",
      "dest": "binary_expression [45863,45898]"
    },
    {
      "src": "member_expression [31246,31254]",
      "dest": "member_expression [41530,41538]"
    },
    {
      "src": "function_body [22838,22894]",
      "dest": "function_body [32016,32072]"
    },
    {
      "src": "type_name [37300,37305]",
      "dest": "type_name [48921,48926]"
    },
    {
      "src": "visibility [31800,31807]",
      "dest": "visibility [43606,43613]"
    },
    {
      "src": "function_definition [8737,8886]",
      "dest": "function_definition [24190,24339]"
    },
    {
      "src": "string_literal [29847,29881]",
      "dest": "string_literal [7557,7583]"
    },
    {
      "src": "visibility [16004,16012]",
      "dest": "visibility [12814,12822]"
    },
    {
      "src": "yul_path [33676,33683]",
      "dest": "yul_path [45296,45303]"
    },
    {
      "src": "(: ( [7364,7365]",
      "dest": "(: ( [22817,22818]"
    },
    {
      "src": "mload: mload [33548,33553]",
      "dest": "mload: mload [45168,45173]"
    },
    {
      "src": "primitive_type [27351,27358]",
      "dest": "primitive_type [15166,15173]"
    },
    {
      "src": "user_defined_type [20429,20437]",
      "dest": "user_defined_type [29607,29615]"
    },
    {
      "src": "primitive_type [39174,39181]",
      "dest": "primitive_type [50919,50926]"
    },
    {
      "src": "=: = [32791,32792]",
      "dest": "=: = [44370,44371]"
    },
    {
      "src": "identifier: STRING_LONG_START [34069,34086]",
      "dest": "identifier: STRING_LONG_START [45680,45697]"
    },
    {
      "src": "call_expression [37466,37492]",
      "dest": "call_expression [49120,49146]"
    },
    {
      "src": ",: , [1878,1879]",
      "dest": ",: , [1878,1879]"
    },
    {
      "src": "returns: returns [2320,2327]",
      "dest": "returns: returns [2320,2327]"
    },
    {
      "src": "(: ( [32683,32684]",
      "dest": "(: ( [44239,44240]"
    },
    {
      "src": "bytes32: bytes32 [4694,4701]",
      "dest": "bytes32: bytes32 [20147,20154]"
    },
    {
      "src": "identifier: transfer [40457,40465]",
      "dest": "identifier: transfer [15353,15361]"
    },
    {
      "src": "visibility [7541,7548]",
      "dest": "visibility [22994,23001]"
    },
    {
      "src": "uint256: uint256 [10645,10652]",
      "dest": "uint256: uint256 [26098,26105]"
    },
    {
      "src": ".: . [26194,26195]",
      "dest": ".: . [35372,35373]"
    },
    {
      "src": "type_name [4694,4701]",
      "dest": "type_name [20147,20154]"
    },
    {
      "src": "(: ( [28716,28717]",
      "dest": "(: ( [39710,39711]"
    },
    {
      "src": "comment: // To delete an element from the _values array in O(1), we swap the element to delete with the last one in [5973,6079]",
      "dest": "comment: // To delete an element from the _values array in O(1), we swap the element to delete with the last one in [21426,21532]"
    },
    {
      "src": "type_name [29212,29217]",
      "dest": "type_name [41111,41116]"
    },
    {
      "src": "): ) [8877,8878]",
      "dest": "): ) [24330,24331]"
    },
    {
      "src": "call_argument [25840,25849]",
      "dest": "call_argument [35018,35027]"
    },
    {
      "src": "=: = [40010,40011]",
      "dest": "=: = [51753,51754]"
    },
    {
      "src": "\": \" [32353,32354]",
      "dest": "\": \" [18259,18260]"
    },
    {
      "src": "bytes: bytes [16452,16457]",
      "dest": "bytes: bytes [13262,13267]"
    },
    {
      "src": "primitive_type [21734,21741]",
      "dest": "primitive_type [30912,30919]"
    },
    {
      "src": "parameter [11367,11374]",
      "dest": "parameter [26820,26827]"
    },
    {
      "src": "primitive_type [27243,27248]",
      "dest": "primitive_type [36424,36429]"
    },
    {
      "src": "visibility [34626,34633]",
      "dest": "visibility [46181,46188]"
    },
    {
      "src": ",: , [30452,30453]",
      "dest": ",: , [42639,42640]"
    },
    {
      "src": "primitive_type [3316,3323]",
      "dest": "primitive_type [18769,18776]"
    },
    {
      "src": "returns: returns [10134,10141]",
      "dest": "returns: returns [25587,25594]"
    },
    {
      "src": "primitive_type [8529,8536]",
      "dest": "primitive_type [23982,23989]"
    },
    {
      "src": "call_expression [26267,26279]",
      "dest": "call_expression [35445,35457]"
    },
    {
      "src": "): ) [10743,10744]",
      "dest": "): ) [26196,26197]"
    },
    {
      "src": "}: } [37057,37058]",
      "dest": "}: } [48674,48675]"
    },
    {
      "src": "return_type_definition [22084,22101]",
      "dest": "return_type_definition [31262,31279]"
    },
    {
      "src": "memory: memory [16028,16034]",
      "dest": "memory: memory [12838,12844]"
    },
    {
      "src": "): ) [26018,26019]",
      "dest": "): ) [35196,35197]"
    },
    {
      "src": "memory: memory [31107,31113]",
      "dest": "memory: memory [43096,43102]"
    },
    {
      "src": "block_statement [17119,17163]",
      "dest": "block_statement [13929,13973]"
    },
    {
      "src": "type_name [8222,8225]",
      "dest": "type_name [23675,23678]"
    },
    {
      "src": ",: , [27771,27772]",
      "dest": ",: , [37830,37831]"
    },
    {
      "src": "type_name [11367,11374]",
      "dest": "type_name [26820,26827]"
    },
    {
      "src": "): ) [23639,23640]",
      "dest": "): ) [32817,32818]"
    },
    {
      "src": "function_body [26167,26299]",
      "dest": "function_body [35345,35477]"
    },
    {
      "src": "call_argument [26712,26724]",
      "dest": "call_argument [35890,35902]"
    },
    {
      "src": "}: } [17710,17711]",
      "dest": "}: } [14520,14521]"
    },
    {
      "src": "returns: returns [31134,31141]",
      "dest": "returns: returns [43123,43130]"
    },
    {
      "src": "internal: internal [10660,10668]",
      "dest": "internal: internal [26113,26121]"
    },
    {
      "src": "type_name [16452,16457]",
      "dest": "type_name [13262,13267]"
    },
    {
      "src": "storage: storage [8442,8449]",
      "dest": "storage: storage [23895,23902]"
    },
    {
      "src": "address: address [39651,39658]",
      "dest": "address: address [51396,51403]"
    },
    {
      "src": "identifier: LIST_SHORT_START [27213,27229]",
      "dest": "identifier: LIST_SHORT_START [36392,36408]"
    },
    {
      "src": "contract: contract [36888,36896]",
      "dest": "contract: contract [48505,48513]"
    },
    {
      "src": "identifier: item [32063,32067]",
      "dest": "identifier: item [39299,39303]"
    },
    {
      "src": "type_cast_expression [11394,11425]",
      "dest": "type_cast_expression [26847,26878]"
    },
    {
      "src": "): ) [29726,29727]",
      "dest": "): ) [42234,42235]"
    },
    {
      "src": "identifier: only [26646,26650]",
      "dest": "identifier: only [35824,35828]"
    },
    {
      "src": "): ) [26619,26620]",
      "dest": "): ) [35797,35798]"
    },
    {
      "src": ".: . [5870,5871]",
      "dest": ".: . [21323,21324]"
    },
    {
      "src": "identifier: Set [7524,7527]",
      "dest": "identifier: Set [22977,22980]"
    },
    {
      "src": "member_expression [11406,11416]",
      "dest": "member_expression [26859,26869]"
    },
    {
      "src": "variable_declaration_statement [40053,40093]",
      "dest": "variable_declaration_statement [51796,51836]"
    },
    {
      "src": "call_expression [25539,25564]",
      "dest": "call_expression [34717,34742]"
    },
    {
      "src": "(: ( [14970,14971]",
      "dest": "(: ( [11780,11781]"
    },
    {
      "src": "state_variable_declaration [27198,27237]",
      "dest": "state_variable_declaration [36377,36418]"
    },
    {
      "src": "identifier: set [10870,10873]",
      "dest": "identifier: set [26323,26326]"
    },
    {
      "src": "parameter [12297,12301]",
      "dest": "parameter [9107,9111]"
    },
    {
      "src": "comment: // File: contracts/root/TokenPredicates/ITokenPredicate.sol [35306,35365]",
      "dest": "comment: // File: contracts/root/TokenPredicates/ITokenPredicate.sol [46923,46982]"
    },
    {
      "src": "contract: contract [20176,20184]",
      "dest": "contract: contract [29354,29362]"
    },
    {
      "src": "state_mutability [11353,11357]",
      "dest": "state_mutability [26806,26810]"
    },
    {
      "src": "type_name [38477,38484]",
      "dest": "type_name [50131,50138]"
    },
    {
      "src": "function_definition [28701,28989]",
      "dest": "function_definition [39695,40037]"
    },
    {
      "src": "function: function [1846,1854]",
      "dest": "function: function [1846,1854]"
    },
    {
      "src": "internal: internal [29471,29479]",
      "dest": "internal: internal [42088,42096]"
    },
    {
      "src": "primitive_type [5696,5703]",
      "dest": "primitive_type [21149,21156]"
    },
    {
      "src": "primitive_type [25494,25501]",
      "dest": "primitive_type [34672,34679]"
    },
    {
      "src": "comment: /**      * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * IMPORTANT: Beware that changing an allowance with this method brings the risk      * that someone may use both the old and the new allowance by unfortunate      * transaction ordering. One possible solution to mitigate this race      * condition is to first reduce the spender's allowance to 0 and set the      * desired value afterwards:      * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      *      * Emits an {Approval} event.      */ [1185,1840]",
      "dest": "comment: /**      * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * IMPORTANT: Beware that changing an allowance with this method brings the risk      * that someone may use both the old and the new allowance by unfortunate      * transaction ordering. One possible solution to mitigate this race      * condition is to first reduce the spender's allowance to 0 and set the      * desired value afterwards:      * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      *      * Emits an {Approval} event.      */ [1185,1840]"
    },
    {
      "src": "call_argument [28123,28128]",
      "dest": "call_argument [39266,39271]"
    },
    {
      "src": "identifier: _indexes [5360,5368]",
      "dest": "identifier: _indexes [20813,20821]"
    },
    {
      "src": "}: } [26783,26784]",
      "dest": "}: } [35961,35962]"
    },
    {
      "src": "identifier: tokenBalance [40414,40426]",
      "dest": "identifier: tokenBalance [52157,52169]"
    },
    {
      "src": "identifier: logTopicRLPList [39680,39695]",
      "dest": "identifier: logTopicRLPList [51425,51440]"
    },
    {
      "src": "member_expression [38604,38614]",
      "dest": "member_expression [50260,50270]"
    },
    {
      "src": "variable_declaration [33885,33898]",
      "dest": "variable_declaration [45499,45509]"
    },
    {
      "src": "primitive_type [8537,8544]",
      "dest": "primitive_type [23990,23997]"
    },
    {
      "src": "identifier: role [21186,21190]",
      "dest": "identifier: role [30364,30368]"
    },
    {
      "src": "primitive_type [27287,27292]",
      "dest": "primitive_type [36471,36476]"
    },
    {
      "src": "type_name [31450,31455]",
      "dest": "type_name [43275,43280]"
    },
    {
      "src": "call_argument [13914,13945]",
      "dest": "call_argument [10724,10755]"
    },
    {
      "src": "comment: /*      * @param item RLP encoded list in bytes      */ [27796,27853]",
      "dest": "comment: /*     * @dev Returns true if the iteration has more elements.     * @param self The iterator.     * @return true if the iteration has more elements.     */ [37222,37382]"
    },
    {
      "src": "identifier: _owner [37854,37860]",
      "dest": "identifier: _owner [49508,49514]"
    },
    {
      "src": ",: , [33243,33244]",
      "dest": ",: , [44840,44841]"
    },
    {
      "src": "primitive_type [8777,8784]",
      "dest": "primitive_type [24230,24237]"
    },
    {
      "src": "): ) [28412,28413]",
      "dest": "): ) [39405,39406]"
    },
    {
      "src": "): ) [34624,34625]",
      "dest": "): ) [46179,46180]"
    },
    {
      "src": "type_name [8027,8034]",
      "dest": "type_name [23480,23487]"
    },
    {
      "src": "): ) [10433,10434]",
      "dest": "): ) [25886,25887]"
    },
    {
      "src": "uint256: uint256 [30106,30113]",
      "dest": "uint256: uint256 [4706,4713]"
    },
    {
      "src": "mapping: mapping [20409,20416]",
      "dest": "mapping: mapping [29587,29594]"
    },
    {
      "src": "identifier: result [31632,31638]",
      "dest": "identifier: result [43440,43446]"
    },
    {
      "src": "comment: /**      * @notice called by predicate contract to mint tokens while withdrawing      * @dev Should be callable only by MintableERC20Predicate      * Make sure minting is done only by this function      * @param user user address for whom token is being minted      * @param amount amount of token being minted      */ [2958,3282]",
      "dest": "comment: /**      * @notice called by predicate contract to mint tokens while withdrawing      * @dev Should be callable only by MintableERC20Predicate      * Make sure minting is done only by this function      * @param user user address for whom token is being minted      * @param amount amount of token being minted      */ [18411,18735]"
    },
    {
      "src": "solidity: solidity [37142,37150]",
      "dest": "solidity: solidity [36239,36247]"
    },
    {
      "src": "(: ( [34340,34341]",
      "dest": "(: ( [45942,45943]"
    },
    {
      "src": "uint256: uint256 [495,502]",
      "dest": "uint256: uint256 [495,502]"
    },
    {
      "src": "(: ( [8026,8027]",
      "dest": "(: ( [23479,23480]"
    },
    {
      "src": "}: } [21855,21856]",
      "dest": "}: } [31033,31034]"
    },
    {
      "src": "string: string [15409,15415]",
      "dest": "string: string [12219,12225]"
    },
    {
      "src": "identifier: lastvalue [6771,6780]",
      "dest": "identifier: lastvalue [22224,22233]"
    },
    {
      "src": "address: address [23965,23972]",
      "dest": "address: address [33143,33150]"
    },
    {
      "src": "false [7182,7187]",
      "dest": "false [22635,22640]"
    },
    {
      "src": "type_cast_expression [8862,8876]",
      "dest": "type_cast_expression [24315,24329]"
    },
    {
      "src": "=: = [28437,28438]",
      "dest": "=: = [39430,39431]"
    },
    {
      "src": "identifier: memPtr [28305,28311]",
      "dest": "identifier: memPtr [43730,43736]"
    },
    {
      "src": "): ) [14052,14053]",
      "dest": "): ) [10862,10863]"
    },
    {
      "src": "member_expression [6625,6636]",
      "dest": "member_expression [22078,22089]"
    },
    {
      "src": "call_argument [24063,24113]",
      "dest": "call_argument [33241,33291]"
    },
    {
      "src": "identifier: memPtr [28808,28814]",
      "dest": "identifier: c [6872,6873]"
    },
    {
      "src": "call_expression [16884,16944]",
      "dest": "call_expression [13694,13754]"
    },
    {
      "src": "^:  ^ [3458,3460]",
      "dest": "^:  ^ [2938,2940]"
    },
    {
      "src": "yul_evm_builtin [33544,33547]",
      "dest": "yul_evm_builtin [45164,45167]"
    },
    {
      "src": "(: ( [36966,36967]",
      "dest": "(: ( [48583,48584]"
    },
    {
      "src": "parameter [12257,12272]",
      "dest": "parameter [9067,9082]"
    },
    {
      "src": "\": \" [8083,8084]",
      "dest": "\": \" [23536,23537]"
    },
    {
      "src": "type_name [37765,37772]",
      "dest": "type_name [49419,49426]"
    },
    {
      "src": "identifier: length [9225,9231]",
      "dest": "identifier: length [24678,24684]"
    },
    {
      "src": "struct_declaration [9854,9898]",
      "dest": "struct_declaration [25307,25351]"
    },
    {
      "src": "state_mutability [33851,33855]",
      "dest": "state_mutability [45468,45472]"
    },
    {
      "src": "visibility [36213,36221]",
      "dest": "visibility [47830,47838]"
    },
    {
      "src": "primitive_type [23140,23147]",
      "dest": "primitive_type [32318,32325]"
    },
    {
      "src": "call_argument [38687,38702]",
      "dest": "call_argument [50341,50356]"
    },
    {
      "src": "uint256: uint256 [1880,1887]",
      "dest": "uint256: uint256 [1880,1887]"
    },
    {
      "src": "array_access [28473,28482]",
      "dest": "array_access [39466,39475]"
    },
    {
      "src": "\": \" [24780,24781]",
      "dest": "\": \" [33958,33959]"
    },
    {
      "src": "function_body [38576,38863]",
      "dest": "function_body [50230,50608]"
    },
    {
      "src": "\": \" [32308,32309]",
      "dest": "\": \" [18216,18217]"
    },
    {
      "src": "type_name [31424,31429]",
      "dest": "type_name [43249,43254]"
    },
    {
      "src": "identifier: item [28329,28333]",
      "dest": "identifier: item [43754,43758]"
    },
    {
      "src": "identifier: remove [8746,8752]",
      "dest": "identifier: remove [24199,24205]"
    },
    {
      "src": "identifier: rootToken [38485,38494]",
      "dest": "identifier: rootToken [50139,50148]"
    },
    {
      "src": "parameter [24704,24719]",
      "dest": "parameter [33882,33897]"
    },
    {
      "src": "view: view [22815,22819]",
      "dest": "view: view [31993,31997]"
    },
    {
      "src": "storage: storage [9700,9707]",
      "dest": "storage: storage [25153,25160]"
    },
    {
      "src": "comment: // repetition as possible, we write it in terms of a generic Set type with [4262,4336]",
      "dest": "comment: // repetition as possible, we write it in terms of a generic Set type with [19715,19789]"
    },
    {
      "src": "(: ( [10897,10898]",
      "dest": "(: ( [26350,26351]"
    },
    {
      "src": "yul_path [35272,35279]",
      "dest": "yul_path [46874,46881]"
    },
    {
      "src": "(: ( [33547,33548]",
      "dest": "(: ( [45167,45168]"
    },
    {
      "src": "private: private [7541,7548]",
      "dest": "private: private [22994,23001]"
    },
    {
      "src": "\": \" [37407,37408]",
      "dest": "\": \" [49061,49062]"
    },
    {
      "src": "(: ( [39163,39164]",
      "dest": "(: ( [50908,50909]"
    },
    {
      "src": "binary_expression [12805,12828]",
      "dest": "binary_expression [9615,9638]"
    },
    {
      "src": ",: , [26256,26257]",
      "dest": ",: , [35434,35435]"
    },
    {
      "src": "view: view [481,485]",
      "dest": "view: view [481,485]"
    },
    {
      "src": "assembly: assembly [35077,35085]",
      "dest": "assembly: assembly [46667,46675]"
    },
    {
      "src": "event: event [37615,37620]",
      "dest": "event: event [49269,49274]"
    },
    {
      "src": "comment: /**      * @dev Revokes `role` from the calling account.      *      * Roles are often managed via {grantRole} and {revokeRole}: this function's      * purpose is to provide a mechanism for accounts to lose their privileges      * if they are compromised (such as when a trusted device is misplaced).      *      * If the calling account had been granted `role`, emits a {RoleRevoked}      * event.      *      * Requirements:      *      * - the caller must be `account`.      */ [24169,24662]",
      "dest": "comment: /**      * @dev Revokes `role` from the calling account.      *      * Roles are often managed via {grantRole} and {revokeRole}: this function's      * purpose is to provide a mechanism for accounts to lose their privileges      * if they are compromised (such as when a trusted device is misplaced).      *      * If the calling account had been granted `role`, emits a {RoleRevoked}      * event.      *      * Requirements:      *      * - the caller must be `account`.      */ [33347,33840]"
    },
    {
      "src": "primitive_type [39771,39778]",
      "dest": "primitive_type [51516,51523]"
    },
    {
      "src": "primitive_type [8027,8034]",
      "dest": "primitive_type [23480,23487]"
    },
    {
      "src": "identifier: toList [39346,39352]",
      "dest": "identifier: toList [51091,51097]"
    },
    {
      "src": "identifier: result [31437,31443]",
      "dest": "identifier: result [43262,43268]"
    },
    {
      "src": "returns: returns [29795,29802]",
      "dest": "returns: returns [7511,7518]"
    },
    {
      "src": "(: ( [29181,29182]",
      "dest": "(: ( [41085,41086]"
    },
    {
      "src": "solidity_pragma_token [11536,11551]",
      "dest": "solidity_pragma_token [8346,8361]"
    },
    {
      "src": "primitive_type [26651,26658]",
      "dest": "primitive_type [35829,35836]"
    },
    {
      "src": "identifier: memPtr [28533,28539]",
      "dest": "identifier: memPtr [39527,39533]"
    },
    {
      "src": "comment: // We read and store the value's index to prevent multiple reads from the same storage slot [5745,5836]",
      "dest": "comment: // We read and store the value's index to prevent multiple reads from the same storage slot [21198,21289]"
    },
    {
      "src": "identifier: amount [37773,37779]",
      "dest": "identifier: amount [49427,49433]"
    },
    {
      "src": ",: , [31599,31600]",
      "dest": ",: , [43407,43408]"
    },
    {
      "src": "): ) [30092,30093]",
      "dest": "): ) [4381,4382]"
    },
    {
      "src": "identifier: errorMessage [15423,15435]",
      "dest": "identifier: errorMessage [12233,12245]"
    },
    {
      "src": "type_name [23951,23958]",
      "dest": "type_name [33129,33136]"
    },
    {
      "src": "false [36932,36937]",
      "dest": "false [48549,48554]"
    },
    {
      "src": "): ) [22070,22071]",
      "dest": "): ) [31248,31249]"
    },
    {
      "src": "call_expression [28058,28072]",
      "dest": "call_expression [39201,39215]"
    },
    {
      "src": "uint256: uint256 [34562,34569]",
      "dest": "uint256: uint256 [8090,8097]"
    },
    {
      "src": "): ) [23587,23588]",
      "dest": "): ) [32765,32766]"
    },
    {
      "src": "identifier: adminRole [23564,23573]",
      "dest": "identifier: adminRole [32742,32751]"
    },
    {
      "src": "comment: /**  * @dev Library for managing  * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive  * types.  *  * Sets have the following properties:  *  * - Elements are added, removed, and checked for existence in constant time  * (O(1)).  * - Elements are enumerated in O(n). No guarantees are made on the ordering.  *  * ```  * contract Example {  *     // Add the library methods  *     using EnumerableSet for EnumerableSet.AddressSet;  *  *     // Declare a set state variable  *     EnumerableSet.AddressSet private mySet;  * }  * ```  *  * As of v3.0.0, only sets of type `address` (`AddressSet`) and `uint256`  * (`UintSet`) are supported.  */ [3470,4158]",
      "dest": "comment: /**  * @dev Library for managing  * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive  * types.  *  * Sets have the following properties:  *  * - Elements are added, removed, and checked for existence in constant time  * (O(1)).  * - Elements are enumerated in O(n). No guarantees are made on the ordering.  *  * ```  * contract Example {  *     // Add the library methods  *     using EnumerableSet for EnumerableSet.AddressSet;  *  *     // Declare a set state variable  *     EnumerableSet.AddressSet private mySet;  * }  * ```  *  * As of v3.0.0, only sets of type `address` (`AddressSet`) and `uint256`  * (`UintSet`) are supported.  */ [18923,19611]"
    },
    {
      "src": "identifier: mask [35033,35037]",
      "dest": "identifier: mask [46617,46621]"
    },
    {
      "src": "expression_statement [39749,39916]",
      "dest": "expression_statement [51494,51661]"
    },
    {
      "src": "}: } [8239,8240]",
      "dest": "}: } [23692,23693]"
    },
    {
      "src": "bool: bool [1914,1918]",
      "dest": "bool: bool [1914,1918]"
    },
    {
      "src": "): ) [2333,2334]",
      "dest": "): ) [2333,2334]"
    },
    {
      "src": "user_defined_type [37233,37251]",
      "dest": "user_defined_type [48854,48872]"
    },
    {
      "src": "): ) [18440,18441]",
      "dest": "): ) [27618,27619]"
    },
    {
      "src": "state_variable_declaration [37499,37607]",
      "dest": "state_variable_declaration [49153,49261]"
    },
    {
      "src": "parameter [26128,26140]",
      "dest": "parameter [35306,35318]"
    },
    {
      "src": "type_name [26142,26149]",
      "dest": "type_name [35320,35327]"
    },
    {
      "src": "identifier: memPtr [33485,33491]",
      "dest": "identifier: memPtr [45105,45111]"
    },
    {
      "src": "parameter [7990,8003]",
      "dest": "parameter [23443,23456]"
    },
    {
      "src": "call_argument [40405,40426]",
      "dest": "call_argument [52148,52169]"
    },
    {
      "src": "yul_path [12753,12761]",
      "dest": "yul_path [9563,9571]"
    },
    {
      "src": "else: else [5435,5439]",
      "dest": "else: else [20888,20892]"
    },
    {
      "src": ".: . [17265,17266]",
      "dest": ".: . [14075,14076]"
    },
    {
      "src": "parameter [11329,11342]",
      "dest": "parameter [26782,26795]"
    },
    {
      "src": "function_definition [30576,31074]",
      "dest": "function_definition [42763,43063]"
    },
    {
      "src": "identifier: log [39330,39333]",
      "dest": "identifier: log [51075,51078]"
    },
    {
      "src": "return_statement [8131,8157]",
      "dest": "return_statement [23584,23610]"
    },
    {
      "src": "+: + [32820,32821]",
      "dest": "+: + [44399,44400]"
    },
    {
      "src": "sub: sub [33152,33155]",
      "dest": "sub: sub [44749,44752]"
    },
    {
      "src": "identifier: members [22869,22876]",
      "dest": "identifier: members [32047,32054]"
    },
    {
      "src": "(: ( [22828,22829]",
      "dest": "(: ( [32006,32007]"
    },
    {
      "src": "identifier: amount [40061,40067]",
      "dest": "identifier: amount [51804,51810]"
    },
    {
      "src": "call_argument [27995,27999]",
      "dest": "call_argument [39169,39173]"
    },
    {
      "src": "identifier: item [27995,27999]",
      "dest": "identifier: item [39169,39173]"
    },
    {
      "src": "parameter [770,784]",
      "dest": "parameter [770,784]"
    },
    {
      "src": "{: { [32893,32894]",
      "dest": "{: { [44474,44475]"
    },
    {
      "src": "call_argument [10192,10197]",
      "dest": "call_argument [25645,25650]"
    },
    {
      "src": "primitive_type [29212,29217]",
      "dest": "primitive_type [41111,41116]"
    },
    {
      "src": "): ) [37491,37492]",
      "dest": "): ) [49145,49146]"
    },
    {
      "src": "primitive_type [16796,16803]",
      "dest": "primitive_type [13606,13613]"
    },
    {
      "src": "parameter [25494,25509]",
      "dest": "parameter [34672,34687]"
    },
    {
      "src": "identifier: length [6350,6356]",
      "dest": "identifier: length [21803,21809]"
    },
    {
      "src": "payable: payable [13818,13825]",
      "dest": "payable: payable [10628,10635]"
    },
    {
      "src": "identifier: role [25488,25492]",
      "dest": "identifier: role [34666,34670]"
    },
    {
      "src": ",: , [34573,34574]",
      "dest": ",: , [46158,46159]"
    },
    {
      "src": "type_cast_expression [10497,10511]",
      "dest": "type_cast_expression [25950,25964]"
    },
    {
      "src": "primitive_type [15954,15961]",
      "dest": "primitive_type [12764,12771]"
    },
    {
      "src": "member_expression [7389,7401]",
      "dest": "member_expression [22842,22854]"
    },
    {
      "src": "yul_assignment [27697,27722]",
      "dest": "yul_assignment [37756,37781]"
    },
    {
      "src": "[: [ [26188,26189]",
      "dest": "[: [ [35366,35367]"
    },
    {
      "src": ".: . [29905,29906]",
      "dest": ".: . [39780,39781]"
    },
    {
      "src": "member_expression [32146,32154]",
      "dest": "member_expression [43805,43813]"
    },
    {
      "src": "identifier: dataLen [28360,28367]",
      "dest": "identifier: c [3876,3877]"
    },
    {
      "src": "comment: /**      * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but      * with `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [16157,16399]",
      "dest": "comment: /**      * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but      * with `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [12967,13209]"
    },
    {
      "src": "(: ( [16531,16532]",
      "dest": "(: ( [13341,13342]"
    },
    {
      "src": "yul_identifier [32916,32923]",
      "dest": "yul_identifier [44497,44504]"
    },
    {
      "src": "): ) [38574,38575]",
      "dest": "): ) [50228,50229]"
    },
    {
      "src": "variable_declaration [30940,30954]",
      "dest": "variable_declaration [42932,42943]"
    },
    {
      "src": "{: { [4182,4183]",
      "dest": "{: { [19635,19636]"
    },
    {
      "src": "assembly: assembly [17457,17465]",
      "dest": "assembly: assembly [14267,14275]"
    },
    {
      "src": "^:  ^ [11544,11546]",
      "dest": "^:  ^ [8354,8356]"
    },
    {
      "src": "memory: memory [15396,15402]",
      "dest": "memory: memory [12206,12212]"
    },
    {
      "src": "identifier: hasRole [26698,26705]",
      "dest": "identifier: hasRole [35876,35883]"
    },
    {
      "src": "identifier: set [7536,7539]",
      "dest": "identifier: set [22989,22992]"
    },
    {
      "src": "identifier: account [24861,24868]",
      "dest": "identifier: account [34039,34046]"
    },
    {
      "src": "identifier: allowance [1103,1112]",
      "dest": "identifier: allowance [1103,1112]"
    },
    {
      "src": "): ) [25758,25759]",
      "dest": "): ) [34936,34937]"
    },
    {
      "src": "parameter [23965,23980]",
      "dest": "parameter [33143,33158]"
    },
    {
      "src": "uint256: uint256 [31168,31175]",
      "dest": "uint256: uint256 [3814,3821]"
    },
    {
      "src": "parameter [26142,26157]",
      "dest": "parameter [35320,35335]"
    },
    {
      "src": "return_statement [31053,31067]",
      "dest": "return_statement [43042,43056]"
    },
    {
      "src": "identifier: this [38818,38822]",
      "dest": "identifier: this [50586,50590]"
    },
    {
      "src": "user_defined_type [39365,39382]",
      "dest": "user_defined_type [51110,51127]"
    },
    {
      "src": "override_specifier [39251,39259]",
      "dest": "override_specifier [50996,51004]"
    },
    {
      "src": "identifier: rootToken [38704,38713]",
      "dest": "identifier: rootToken [50358,50367]"
    },
    {
      "src": "identifier: target [16076,16082]",
      "dest": "identifier: target [12886,12892]"
    },
    {
      "src": "yul_path [33010,33016]",
      "dest": "yul_path [44591,44597]"
    },
    {
      "src": "identifier: tokenBalance [40341,40353]",
      "dest": "identifier: tokenBalance [52084,52096]"
    },
    {
      "src": "identifier: balance [16579,16586]",
      "dest": "identifier: balance [13389,13396]"
    },
    {
      "src": "yul_path [17579,17594]",
      "dest": "yul_path [14389,14404]"
    },
    {
      "src": "primitive_type [37300,37305]",
      "dest": "primitive_type [48921,48926]"
    },
    {
      "src": "identifier: offset [31392,31398]",
      "dest": "identifier: offset [38727,38733]"
    },
    {
      "src": "member_expression [30041,30049]",
      "dest": "member_expression [37545,37553]"
    },
    {
      "src": "identifier: _at [9794,9797]",
      "dest": "identifier: _at [25247,25250]"
    },
    {
      "src": "primitive_type [13881,13888]",
      "dest": "primitive_type [10691,10698]"
    },
    {
      "src": "function_body [9760,9826]",
      "dest": "function_body [25213,25279]"
    },
    {
      "src": "uint256: uint256 [31822,31829]",
      "dest": "uint256: uint256 [6805,6812]"
    },
    {
      "src": "array_access [7389,7408]",
      "dest": "array_access [22842,22861]"
    },
    {
      "src": "call_argument [37476,37491]",
      "dest": "call_argument [49130,49145]"
    },
    {
      "src": ".: . [40017,40018]",
      "dest": ".: . [51760,51761]"
    },
    {
      "src": "visibility [25962,25969]",
      "dest": "visibility [35140,35147]"
    },
    {
      "src": "primitive_type [9014,9021]",
      "dest": "primitive_type [24467,24474]"
    },
    {
      "src": "): ) [39914,39915]",
      "dest": "): ) [51659,51660]"
    },
    {
      "src": "returns: returns [9742,9749]",
      "dest": "returns: returns [25195,25202]"
    },
    {
      "src": "function: function [23931,23939]",
      "dest": "function: function [33109,33117]"
    },
    {
      "src": "type_cast_expression [9098,9121]",
      "dest": "type_cast_expression [24551,24574]"
    },
    {
      "src": "yul_path [33499,33505]",
      "dest": "yul_path [45119,45125]"
    },
    {
      "src": "call_expression [29893,29950]",
      "dest": "call_expression [6176,6215]"
    },
    {
      "src": "storage: storage [5683,5690]",
      "dest": "storage: storage [21136,21143]"
    },
    {
      "src": "call_expression [32225,32245]",
      "dest": "call_expression [43883,43903]"
    },
    {
      "src": "identifier: data [15000,15004]",
      "dest": "identifier: data [11810,11814]"
    },
    {
      "src": ":=: := [31531,31533]",
      "dest": ":=: := [43353,43355]"
    },
    {
      "src": "yul_identifier [33455,33460]",
      "dest": "yul_identifier [45075,45080]"
    },
    {
      "src": "): ) [8003,8004]",
      "dest": "): ) [23456,23457]"
    },
    {
      "src": "(: ( [25726,25727]",
      "dest": "(: ( [34904,34905]"
    },
    {
      "src": "identifier: set [9314,9317]",
      "dest": "identifier: set [24767,24770]"
    },
    {
      "src": "}: } [8163,8164]",
      "dest": "}: } [23616,23617]"
    },
    {
      "src": "yul_variable_declaration [35101,35142]",
      "dest": "yul_variable_declaration [46695,46736]"
    },
    {
      "src": "comment: // # of bytes the actual length is [32944,32978]",
      "dest": "comment: // # of bytes the actual length is [44525,44559]"
    },
    {
      "src": "state_variable_declaration [26438,26464]",
      "dest": "state_variable_declaration [35616,35642]"
    },
    {
      "src": "identifier: role [21817,21821]",
      "dest": "identifier: role [30995,30999]"
    },
    {
      "src": "function_definition [23083,23197]",
      "dest": "function_definition [32261,32375]"
    },
    {
      "src": "type_name [10854,10861]",
      "dest": "type_name [26307,26314]"
    },
    {
      "src": "[: [ [7107,7108]",
      "dest": "[: [ [22560,22561]"
    },
    {
      "src": ":=: := [12762,12764]",
      "dest": ":=: := [9572,9574]"
    },
    {
      "src": "member_expression [5867,5879]",
      "dest": "member_expression [21320,21332]"
    },
    {
      "src": "solidity: solidity [35376,35384]",
      "dest": "solidity: solidity [46993,47001]"
    },
    {
      "src": "parameter [8810,8814]",
      "dest": "parameter [24263,24267]"
    },
    {
      "src": "variable_declaration_statement [12559,12576]",
      "dest": "variable_declaration_statement [9369,9386]"
    },
    {
      "src": "expression_statement [16884,16945]",
      "dest": "expression_statement [13694,13755]"
    },
    {
      "src": "interface: interface [2916,2925]",
      "dest": "interface: interface [18369,18378]"
    },
    {
      "src": "\": \" [37490,37491]",
      "dest": "\": \" [49144,49145]"
    },
    {
      "src": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but also transferring `value` wei to `target`.      *      * Requirements:      *      * - the calling contract must have an ETH balance of at least `value`.      * - the called Solidity function must be `payable`.      *      * _Available since v3.1._      */ [15556,15917]",
      "dest": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but also transferring `value` wei to `target`.      *      * Requirements:      *      * - the calling contract must have an ETH balance of at least `value`.      * - the called Solidity function must be `payable`.      *      * _Available since v3.1._      */ [12366,12727]"
    },
    {
      "src": "identifier: _roles [26182,26188]",
      "dest": "identifier: _roles [35360,35366]"
    },
    {
      "src": "): ) [39707,39708]",
      "dest": "): ) [51452,51453]"
    },
    {
      "src": "identifier: dataLen [28542,28549]",
      "dest": "identifier: dataLen [39536,39543]"
    },
    {
      "src": "(: ( [26683,26684]",
      "dest": "(: ( [35861,35862]"
    },
    {
      "src": "(: ( [20847,20848]",
      "dest": "(: ( [30025,30026]"
    },
    {
      "src": "yul_evm_builtin [17558,17561]",
      "dest": "yul_evm_builtin [14368,14371]"
    },
    {
      "src": "call_argument [8854,8877]",
      "dest": "call_argument [24307,24330]"
    },
    {
      "src": "call_expression [28196,28270]",
      "dest": "call_expression [42329,42368]"
    },
    {
      "src": "): ) [31118,31119]",
      "dest": "): ) [43107,43108]"
    },
    {
      "src": "identifier: length [7602,7608]",
      "dest": "identifier: length [23055,23061]"
    },
    {
      "src": "identifier: Initializable [37258,37271]",
      "dest": "identifier: Initializable [48879,48892]"
    },
    {
      "src": "view: view [23126,23130]",
      "dest": "view: view [32304,32308]"
    },
    {
      "src": "yul_path [28886,28892]",
      "dest": "yul_path [39921,39927]"
    },
    {
      "src": "function_definition [10383,10520]",
      "dest": "function_definition [25836,25973]"
    },
    {
      "src": "primitive_type [1863,1870]",
      "dest": "primitive_type [1863,1870]"
    },
    {
      "src": "identifier: _msgSender [24048,24058]",
      "dest": "identifier: _msgSender [33226,33236]"
    },
    {
      "src": "member_expression [29635,29643]",
      "dest": "member_expression [42180,42188]"
    },
    {
      "src": ",: , [22791,22792]",
      "dest": ",: , [31969,31970]"
    },
    {
      "src": "comment: // copy as many word sizes as possible [34683,34721]",
      "dest": "comment: // copy as many word sizes as possible [46238,46276]"
    },
    {
      "src": "identifier: mint [3297,3301]",
      "dest": "identifier: mint [18750,18754]"
    },
    {
      "src": "yul_evm_builtin [33672,33675]",
      "dest": "yul_evm_builtin [45292,45295]"
    },
    {
      "src": "type_name [33885,33892]",
      "dest": "type_name [7486,7493]"
    },
    {
      "src": "identifier: count [32025,32030]",
      "dest": "identifier: count [43690,43695]"
    },
    {
      "src": "}: } [27732,27733]",
      "dest": "}: } [37791,37792]"
    },
    {
      "src": "private: private [32510,32517]",
      "dest": "private: private [44075,44082]"
    },
    {
      "src": "]: ] [6646,6647]",
      "dest": "]: ] [22099,22100]"
    },
    {
      "src": ",: , [36755,36756]",
      "dest": ",: , [48372,48373]"
    },
    {
      "src": "comment: // to withdrawer [40311,40327]",
      "dest": "comment: // to withdrawer [52054,52070]"
    },
    {
      "src": "augmented_assignment_expression [34872,34888]",
      "dest": "augmented_assignment_expression [46427,46443]"
    },
    {
      "src": "identifier: IMintableERC20 [39951,39965]",
      "dest": "identifier: IMintableERC20 [51696,51710]"
    },
    {
      "src": "yul_identifier [33221,33228]",
      "dest": "yul_identifier [44818,44825]"
    },
    {
      "src": "identifier: logRLPList [36781,36791]",
      "dest": "identifier: logRLPList [48398,48408]"
    },
    {
      "src": "(: ( [32493,32494]",
      "dest": "(: ( [44061,44062]"
    },
    {
      "src": "identifier: at [9686,9688]",
      "dest": "identifier: at [25139,25141]"
    },
    {
      "src": "(: ( [39818,39819]",
      "dest": "(: ( [51563,51564]"
    },
    {
      "src": "parameter [25480,25492]",
      "dest": "parameter [34658,34670]"
    },
    {
      "src": "(: ( [17561,17562]",
      "dest": "(: ( [14371,14372]"
    },
    {
      "src": "event_paramater [2812,2825]",
      "dest": "event_paramater [2812,2825]"
    },
    {
      "src": "user_defined_type [8222,8225]",
      "dest": "user_defined_type [23675,23678]"
    },
    {
      "src": "\": \" [28268,28269]",
      "dest": "\": \" [16374,16375]"
    },
    {
      "src": "parameter [27477,27494]",
      "dest": "parameter [37641,37658]"
    },
    {
      "src": "identifier: value [8785,8790]",
      "dest": "identifier: value [24238,24243]"
    },
    {
      "src": "call_argument [16903,16909]",
      "dest": "call_argument [13713,13719]"
    },
    {
      "src": ",: , [10495,10496]",
      "dest": ",: , [25948,25949]"
    },
    {
      "src": "call_argument [38838,38844]",
      "dest": "call_argument [50593,50599]"
    },
    {
      "src": "yul_identifier [35253,35257]",
      "dest": "yul_identifier [46855,46859]"
    },
    {
      "src": "identifier: RLPItem [27752,27759]",
      "dest": "identifier: RLPItem [37811,37818]"
    },
    {
      "src": "identifier: toUintStrict [30585,30597]",
      "dest": "identifier: toUintStrict [42772,42784]"
    },
    {
      "src": "bool: bool [10143,10147]",
      "dest": "bool: bool [25596,25600]"
    },
    {
      "src": "): ) [38637,38638]",
      "dest": "): ) [50293,50294]"
    },
    {
      "src": "return: return [34169,34175]",
      "dest": "return: return [45770,45776]"
    },
    {
      "src": "call_argument [29382,29390]",
      "dest": "call_argument [41334,41342]"
    },
    {
      "src": "identifier: length [17266,17272]",
      "dest": "identifier: length [14076,14082]"
    },
    {
      "src": "returns: returns [795,802]",
      "dest": "returns: returns [795,802]"
    },
    {
      "src": "(: ( [11405,11406]",
      "dest": "(: ( [26858,26859]"
    },
    {
      "src": ",: , [15525,15526]",
      "dest": ",: , [12335,12336]"
    },
    {
      "src": "identifier: memPtr [28291,28297]",
      "dest": "identifier: c [4847,4848]"
    },
    {
      "src": "external: external [38539,38547]",
      "dest": "external: external [50193,50201]"
    },
    {
      "src": "yul_identifier [32626,32631]",
      "dest": "yul_identifier [44182,44187]"
    },
    {
      "src": "contract_declaration [18339,18722]",
      "dest": "contract_declaration [27517,27900]"
    },
    {
      "src": "identifier: amount [40405,40411]",
      "dest": "identifier: amount [52148,52154]"
    },
    {
      "src": "address: address [39672,39679]",
      "dest": "address: address [51417,51424]"
    },
    {
      "src": "identifier: dataLen [28429,28436]",
      "dest": "identifier: dataLen [39422,39429]"
    },
    {
      "src": "primitive_type [34607,34614]",
      "dest": "primitive_type [15925,15932]"
    },
    {
      "src": "call_expression [27752,27780]",
      "dest": "call_expression [37811,37839]"
    },
    {
      "src": "bytes32: bytes32 [5103,5110]",
      "dest": "bytes32: bytes32 [20556,20563]"
    },
    {
      "src": ",: , [38494,38495]",
      "dest": ",: , [50148,50149]"
    },
    {
      "src": "event_paramater [2787,2810]",
      "dest": "event_paramater [2787,2810]"
    },
    {
      "src": "call_argument [25556,25563]",
      "dest": "call_argument [34734,34741]"
    },
    {
      "src": "visibility [33843,33850]",
      "dest": "visibility [45460,45467]"
    },
    {
      "src": "identifier: memPtr [28822,28828]",
      "dest": "identifier: memPtr [39857,39863]"
    },
    {
      "src": "call_argument [13889,13893]",
      "dest": "call_argument [10699,10703]"
    },
    {
      "src": "\": \" [24063,24064]",
      "dest": "\": \" [33241,33242]"
    },
    {
      "src": "solidity_pragma_token [27061,27075]",
      "dest": "solidity_pragma_token [48486,48500]"
    },
    {
      "src": ",: , [37754,37755]",
      "dest": ",: , [49408,49409]"
    },
    {
      "src": "identifier: _inner [9318,9324]",
      "dest": "identifier: _inner [24771,24777]"
    },
    {
      "src": "): ) [29194,29195]",
      "dest": "): ) [41098,41099]"
    },
    {
      "src": "{: { [16873,16874]",
      "dest": "{: { [13683,13684]"
    },
    {
      "src": "indexed: indexed [21178,21185]",
      "dest": "indexed: indexed [30356,30363]"
    },
    {
      "src": "pure: pure [27523,27527]",
      "dest": "pure: pure [37669,37673]"
    },
    {
      "src": "): ) [33260,33261]",
      "dest": "): ) [44857,44858]"
    },
    {
      "src": "function_definition [7292,7421]",
      "dest": "function_definition [22745,22874]"
    },
    {
      "src": "member_expression [10485,10495]",
      "dest": "member_expression [25938,25948]"
    },
    {
      "src": "identifier: role [26189,26193]",
      "dest": "identifier: role [35367,35371]"
    },
    {
      "src": "function: function [22030,22038]",
      "dest": "function: function [31208,31216]"
    },
    {
      "src": "call_argument [39485,39512]",
      "dest": "call_argument [51230,51257]"
    },
    {
      "src": "identifier: memPtr [33134,33140]",
      "dest": "identifier: memPtr [44731,44737]"
    },
    {
      "src": "identifier: set [7095,7098]",
      "dest": "identifier: set [22548,22551]"
    },
    {
      "src": "{: { [7572,7573]",
      "dest": "{: { [23025,23026]"
    },
    {
      "src": "visibility [24721,24727]",
      "dest": "visibility [33899,33905]"
    },
    {
      "src": "{: { [37816,37817]",
      "dest": "{: { [49470,49471]"
    },
    {
      "src": "(: ( [32648,32649]",
      "dest": "(: ( [44204,44205]"
    },
    {
      "src": "parenthesized_expression [17660,17674]",
      "dest": "parenthesized_expression [14470,14484]"
    },
    {
      "src": "identifier: only [38557,38561]",
      "dest": "identifier: only [50211,50215]"
    },
    {
      "src": "primitive_type [25945,25952]",
      "dest": "primitive_type [35123,35130]"
    },
    {
      "src": "address: address [37846,37853]",
      "dest": "address: address [49500,49507]"
    },
    {
      "src": "yul_function_call [35188,35210]",
      "dest": "yul_function_call [46786,46808]"
    },
    {
      "src": "string [28228,28269]",
      "dest": "string [16319,16375]"
    },
    {
      "src": ",: , [25739,25740]",
      "dest": ",: , [34917,34918]"
    },
    {
      "src": "let: let [33529,33532]",
      "dest": "let: let [45149,45152]"
    },
    {
      "src": "assignment_expression [6742,6780]",
      "dest": "assignment_expression [22195,22233]"
    },
    {
      "src": "function_body [13862,14188]",
      "dest": "function_body [10672,10998]"
    },
    {
      "src": "): ) [7341,7342]",
      "dest": "): ) [22794,22795]"
    },
    {
      "src": "return_type_definition [31134,31156]",
      "dest": "return_type_definition [43123,43145]"
    },
    {
      "src": "parameter [5679,5694]",
      "dest": "parameter [21132,21147]"
    },
    {
      "src": "type_name [39192,39199]",
      "dest": "type_name [50937,50944]"
    },
    {
      "src": "yul_function_call [32643,32656]",
      "dest": "yul_function_call [44199,44212]"
    },
    {
      "src": "function_body [25777,25903]",
      "dest": "function_body [34955,35081]"
    },
    {
      "src": "state_mutability [12283,12287]",
      "dest": "state_mutability [9093,9097]"
    },
    {
      "src": ".: . [11409,11410]",
      "dest": ".: . [26862,26863]"
    },
    {
      "src": "bytes32: bytes32 [7328,7335]",
      "dest": "bytes32: bytes32 [22781,22788]"
    },
    {
      "src": "identifier: value [7402,7407]",
      "dest": "identifier: value [22855,22860]"
    },
    {
      "src": "function_body [9288,9333]",
      "dest": "function_body [24741,24786]"
    },
    {
      "src": "): ) [24059,24060]",
      "dest": "): ) [33237,33238]"
    },
    {
      "src": "identifier: copy [31574,31578]",
      "dest": "identifier: copy [43396,43400]"
    },
    {
      "src": "return_statement [18696,18712]",
      "dest": "return_statement [27874,27890]"
    },
    {
      "src": "state_variable_declaration [27243,27281]",
      "dest": "state_variable_declaration [36424,36465]"
    },
    {
      "src": "update_expression [28409,28412]",
      "dest": "update_expression [39402,39405]"
    },
    {
      "src": ",: , [35257,35258]",
      "dest": ",: , [46859,46860]"
    },
    {
      "src": "\": \" [26591,26592]",
      "dest": "\": \" [35769,35770]"
    },
    {
      "src": ",: , [16484,16485]",
      "dest": ",: , [13294,13295]"
    },
    {
      "src": "function: function [733,741]",
      "dest": "function: function [733,741]"
    },
    {
      "src": "binary_expression [30027,30049]",
      "dest": "binary_expression [37516,37553]"
    },
    {
      "src": "call_expression [9076,9122]",
      "dest": "call_expression [24529,24575]"
    },
    {
      "src": "user_defined_type [27546,27553]",
      "dest": "user_defined_type [37683,37690]"
    },
    {
      "src": "expression_statement [6848,6892]",
      "dest": "expression_statement [22301,22345]"
    },
    {
      "src": ".: . [22132,22133]",
      "dest": ".: . [31310,31311]"
    },
    {
      "src": "yul_evm_builtin [30401,30403]",
      "dest": "yul_evm_builtin [42588,42590]"
    },
    {
      "src": "): ) [38721,38722]",
      "dest": "): ) [50375,50376]"
    },
    {
      "src": "uint256: uint256 [9713,9720]",
      "dest": "uint256: uint256 [25166,25173]"
    },
    {
      "src": ".: . [16578,16579]",
      "dest": ".: . [13388,13389]"
    },
    {
      "src": "identifier: value [10653,10658]",
      "dest": "identifier: value [26106,26111]"
    },
    {
      "src": "call_argument [27603,27636]",
      "dest": "call_argument [5550,5585]"
    },
    {
      "src": "): ) [28028,28029]",
      "dest": "): ) [39174,39175]"
    },
    {
      "src": "identifier: this [16573,16577]",
      "dest": "identifier: this [13383,13387]"
    },
    {
      "src": "identifier: _payloadOffset [31327,31341]",
      "dest": "identifier: _payloadOffset [38622,38636]"
    },
    {
      "src": "yul_identifier [33676,33683]",
      "dest": "yul_identifier [45296,45303]"
    },
    {
      "src": ".: . [40456,40457]",
      "dest": ".: . [15352,15353]"
    },
    {
      "src": "variable_declaration_statement [12586,12675]",
      "dest": "variable_declaration_statement [9396,9485]"
    },
    {
      "src": "primitive_type [22829,22836]",
      "dest": "primitive_type [32007,32014]"
    },
    {
      "src": "visibility [36799,36807]",
      "dest": "visibility [48416,48424]"
    },
    {
      "src": "identifier: _itemLength [28439,28450]",
      "dest": "identifier: _itemLength [39432,39443]"
    },
    {
      "src": "boolean_literal [28954,28959]",
      "dest": "boolean_literal [40002,40007]"
    },
    {
      "src": "call_argument [31610,31613]",
      "dest": "call_argument [43418,43421]"
    },
    {
      "src": "primitive_type [13837,13844]",
      "dest": "primitive_type [10647,10654]"
    },
    {
      "src": "number_literal: 1 [39421,39422]",
      "dest": "number_literal: 1 [51166,51167]"
    },
    {
      "src": ",: , [9711,9712]",
      "dest": ",: , [25164,25165]"
    },
    {
      "src": "function_body [36969,37058]",
      "dest": "function_body [48586,48675]"
    },
    {
      "src": "identifier: transfer [742,750]",
      "dest": "identifier: transfer [742,750]"
    },
    {
      "src": "state_mutability [27923,27927]",
      "dest": "state_mutability [39111,39115]"
    },
    {
      "src": "): ) [37013,37014]",
      "dest": "): ) [48630,48631]"
    },
    {
      "src": "return: return [10470,10476]",
      "dest": "return: return [25923,25929]"
    },
    {
      "src": "type_name [27875,27882]",
      "dest": "type_name [39081,39088]"
    },
    {
      "src": "identifier: depositor [37667,37676]",
      "dest": "identifier: depositor [49321,49330]"
    },
    {
      "src": "string [23590,23639]",
      "dest": "string [32768,32817]"
    },
    {
      "src": "pragma_directive [3443,3466]",
      "dest": "pragma_directive [2923,2946]"
    },
    {
      "src": "parameter [15409,15435]",
      "dest": "parameter [12219,12245]"
    },
    {
      "src": "identifier: adminRole [25829,25838]",
      "dest": "identifier: adminRole [35007,35016]"
    },
    {
      "src": "parameter [455,470]",
      "dest": "parameter [455,470]"
    },
    {
      "src": "(: ( [16678,16679]",
      "dest": "(: ( [13488,13489]"
    },
    {
      "src": "): ) [26724,26725]",
      "dest": "): ) [35902,35903]"
    },
    {
      "src": "call_argument [9106,9120]",
      "dest": "call_argument [24559,24573]"
    },
    {
      "src": "identifier: RLPItem [30598,30605]",
      "dest": "identifier: RLPItem [42785,42792]"
    },
    {
      "src": "comment: // to transfer `amount` to withdrawer or not [40176,40220]",
      "dest": "comment: // to transfer `amount` to withdrawer or not [51919,51963]"
    },
    {
      "src": "): ) [34304,34305]",
      "dest": "): ) [45893,45894]"
    },
    {
      "src": "address: address [38810,38817]",
      "dest": "address: address [50578,50585]"
    },
    {
      "src": "function_body [32541,33748]",
      "dest": "function_body [44103,45368]"
    },
    {
      "src": "parameter [16022,16034]",
      "dest": "parameter [12832,12844]"
    },
    {
      "src": "visibility [39244,39250]",
      "dest": "visibility [50989,50995]"
    },
    {
      "src": "type_name [1168,1175]",
      "dest": "type_name [1168,1175]"
    },
    {
      "src": "state_mutability [481,485]",
      "dest": "state_mutability [481,485]"
    },
    {
      "src": "comment: /**      * @dev Returns the number of values in the set. O(1).      */ [9138,9210]",
      "dest": "comment: /**      * @dev Returns the number of values in the set. O(1).      */ [24591,24663]"
    },
    {
      "src": "view: view [7549,7553]",
      "dest": "view: view [23002,23006]"
    },
    {
      "src": "comment: /**      * @dev Returns one of the accounts that have `role`. `index` must be a      * value between 0 and {getRoleMemberCount}, non-inclusive.      *      * Role bearers are not sorted in any particular way, and their ordering may      * change at any point.      *      * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure      * you perform all queries on the same block. See the following      * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]      * for more information.      */ [22165,22750]",
      "dest": "comment: /**      * @dev Returns one of the accounts that have `role`. `index` must be a      * value between 0 and {getRoleMemberCount}, non-inclusive.      *      * Role bearers are not sorted in any particular way, and their ordering may      * change at any point.      *      * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure      * you perform all queries on the same block. See the following      * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]      * for more information.      */ [31343,31928]"
    },
    {
      "src": "identifier: byte0 [34104,34109]",
      "dest": "identifier: byte0 [45702,45707]"
    },
    {
      "src": "comment: // one byte prefix [30810,30828]",
      "dest": "comment: // one byte prefix [42846,42864]"
    },
    {
      "src": "member_expression [9086,9096]",
      "dest": "member_expression [24539,24549]"
    },
    {
      "src": "function_definition [436,504]",
      "dest": "function_definition [436,504]"
    },
    {
      "src": "memory: memory [16493,16499]",
      "dest": "memory: memory [13303,13309]"
    },
    {
      "src": "identifier: memPtr [32649,32655]",
      "dest": "identifier: memPtr [44205,44211]"
    },
    {
      "src": "=: = [14054,14055]",
      "dest": "=: = [10864,10865]"
    },
    {
      "src": "yul_function_call [33950,33963]",
      "dest": "yul_function_call [45561,45574]"
    },
    {
      "src": "comment: // The Set implementation uses private functions, and user-facing [4366,4431]",
      "dest": "comment: // The Set implementation uses private functions, and user-facing [19819,19884]"
    },
    {
      "src": "parameter [10898,10905]",
      "dest": "parameter [26351,26358]"
    },
    {
      "src": "identifier: account [21208,21215]",
      "dest": "identifier: account [30386,30393]"
    },
    {
      "src": "}: } [10751,10752]",
      "dest": "}: } [26204,26205]"
    },
    {
      "src": "identifier: memPtr [30001,30007]",
      "dest": "identifier: memPtr [41596,41602]"
    },
    {
      "src": "uint256: uint256 [339,346]",
      "dest": "uint256: uint256 [339,346]"
    },
    {
      "src": "): ) [35141,35142]",
      "dest": "): ) [46735,46736]"
    },
    {
      "src": "call_expression [15487,15540]",
      "dest": "call_expression [12297,12350]"
    },
    {
      "src": "identifier: keccak256 [37466,37475]",
      "dest": "identifier: keccak256 [49120,49129]"
    },
    {
      "src": "]: ] [27954,27955]",
      "dest": "]: ] [39133,39134]"
    },
    {
      "src": "exp: exp [33563,33566]",
      "dest": "exp: exp [45183,45186]"
    },
    {
      "src": "identifier: itemLen [32783,32790]",
      "dest": "identifier: itemLen [44362,44369]"
    },
    {
      "src": "true [5418,5422]",
      "dest": "true [20871,20875]"
    },
    {
      "src": "boolean_literal [7182,7187]",
      "dest": "boolean_literal [22635,22640]"
    },
    {
      "src": "): ) [28340,28341]",
      "dest": "): ) [43765,43766]"
    },
    {
      "src": "identifier: logTopicRLPList [39485,39500]",
      "dest": "identifier: logTopicRLPList [51230,51245]"
    },
    {
      "src": "identifier: len [28223,28226]",
      "dest": "identifier: len [42342,42345]"
    },
    {
      "src": "identifier: _grantRole [25539,25549]",
      "dest": "identifier: _grantRole [34717,34727]"
    },
    {
      "src": "bytes32: bytes32 [8027,8034]",
      "dest": "bytes32: bytes32 [23480,23487]"
    },
    {
      "src": "type_name [495,502]",
      "dest": "type_name [495,502]"
    },
    {
      "src": "): ) [34156,34157]",
      "dest": "): ) [45754,45755]"
    },
    {
      "src": "): ) [29881,29882]",
      "dest": "): ) [7583,7584]"
    },
    {
      "src": "expression_statement [14102,14181]",
      "dest": "expression_statement [10912,10991]"
    },
    {
      "src": "): ) [23677,23678]",
      "dest": "): ) [32855,32856]"
    },
    {
      "src": "(: ( [24854,24855]",
      "dest": "(: ( [34032,34033]"
    },
    {
      "src": "identifier: src [34836,34839]",
      "dest": "identifier: src [46391,46394]"
    },
    {
      "src": "identifier: amount [1888,1894]",
      "dest": "identifier: amount [1888,1894]"
    },
    {
      "src": "visibility [37507,37513]",
      "dest": "visibility [49161,49167]"
    },
    {
      "src": "identifier: Set [5679,5682]",
      "dest": "identifier: Set [21132,21135]"
    },
    {
      "src": "mload: mload [33128,33133]",
      "dest": "mload: mload [44725,44730]"
    },
    {
      "src": "primitive_type [10898,10905]",
      "dest": "primitive_type [26351,26358]"
    },
    {
      "src": "function: function [26107,26115]",
      "dest": "function: function [35285,35293]"
    },
    {
      "src": "identifier: IERC20 [205,211]",
      "dest": "identifier: IERC20 [205,211]"
    },
    {
      "src": "uint256: uint256 [2295,2302]",
      "dest": "uint256: uint256 [2295,2302]"
    },
    {
      "src": "-: - [31390,31391]",
      "dest": "-: - [38725,38726]"
    },
    {
      "src": "type_name [28283,28290]",
      "dest": "type_name [4839,4846]"
    },
    {
      "src": "identifier: ptr [29377,29380]",
      "dest": "identifier: ptr [41329,41332]"
    },
    {
      "src": "identifier: success [17023,17030]",
      "dest": "identifier: success [13833,13840]"
    },
    {
      "src": "binary_expression [39771,39821]",
      "dest": "binary_expression [51516,51566]"
    },
    {
      "src": "yul_function_call [28880,28893]",
      "dest": "yul_function_call [39915,39928]"
    },
    {
      "src": "member_expression [8517,8527]",
      "dest": "member_expression [23970,23980]"
    },
    {
      "src": "): ) [39512,39513]",
      "dest": "): ) [51257,51258]"
    },
    {
      "src": "identifier: byte0 [33991,33996]",
      "dest": "identifier: byte0 [45602,45607]"
    },
    {
      "src": "binary_expression [13881,13912]",
      "dest": "binary_expression [10691,10722]"
    },
    {
      "src": "\": \" [23638,23639]",
      "dest": "\": \" [32816,32817]"
    },
    {
      "src": "(: ( [26650,26651]",
      "dest": "(: ( [35828,35829]"
    },
    {
      "src": "): ) [33587,33588]",
      "dest": "): ) [45207,45208]"
    },
    {
      "src": "variable_declaration [28778,28789]",
      "dest": "variable_declaration [39816,39827]"
    },
    {
      "src": "primitive_type [27152,27157]",
      "dest": "primitive_type [36330,36335]"
    },
    {
      "src": "address: address [14971,14978]",
      "dest": "address: address [11781,11788]"
    },
    {
      "src": "type_name [1128,1135]",
      "dest": "type_name [1128,1135]"
    },
    {
      "src": "contract_declaration [20167,26302]",
      "dest": "contract_declaration [29345,35480]"
    },
    {
      "src": "\": \" [39626,39627]",
      "dest": "\": \" [51371,51372]"
    },
    {
      "src": "-: - [6357,6358]",
      "dest": "-: - [21810,21811]"
    },
    {
      "src": "view: view [21772,21776]",
      "dest": "view: view [30950,30954]"
    },
    {
      "src": "call_argument [38021,38027]",
      "dest": "call_argument [49675,49681]"
    },
    {
      "src": "identifier: value [15997,16002]",
      "dest": "identifier: value [12807,12812]"
    },
    {
      "src": "if: if [17251,17253]",
      "dest": "if: if [14061,14063]"
    },
    {
      "src": "function_body [5734,7206]",
      "dest": "function_body [21187,22659]"
    },
    {
      "src": "): ) [29534,29535]",
      "dest": "): ) [40785,40786]"
    },
    {
      "src": "identifier: _functionCallWithValue [16656,16678]",
      "dest": "identifier: _functionCallWithValue [13466,13488]"
    },
    {
      "src": "(: ( [30466,30467]",
      "dest": "(: ( [42653,42654]"
    },
    {
      "src": "address: address [2276,2283]",
      "dest": "address: address [2276,2283]"
    },
    {
      "src": "call_argument [31456,31459]",
      "dest": "call_argument [43281,43284]"
    },
    {
      "src": "identifier: itemLen [32712,32719]",
      "dest": "identifier: itemLen [44281,44288]"
    },
    {
      "src": "}: } [33713,33714]",
      "dest": "}: } [45333,45334]"
    },
    {
      "src": "{: { [30413,30414]",
      "dest": "{: { [42600,42601]"
    },
    {
      "src": "return_type_definition [29795,29812]",
      "dest": "return_type_definition [7511,7528]"
    },
    {
      "src": "function_definition [11296,11433]",
      "dest": "function_definition [26749,26886]"
    },
    {
      "src": ",: , [24859,24860]",
      "dest": ",: , [34037,34038]"
    },
    {
      "src": "identifier: isList [29523,29529]",
      "dest": "identifier: payloadLocation [40765,40780]"
    },
    {
      "src": "yul_function_call [33124,33170]",
      "dest": "yul_function_call [44721,44767]"
    },
    {
      "src": "comment: // being explicit [34236,34253]",
      "dest": "comment: // being explicit [45825,45842]"
    },
    {
      "src": "string [13914,13945]",
      "dest": "string [10724,10755]"
    },
    {
      "src": "parameter [36179,36205]",
      "dest": "parameter [47796,47822]"
    },
    {
      "src": "}: } [26301,26302]",
      "dest": "}: } [35479,35480]"
    },
    {
      "src": "return: return [28970,28976]",
      "dest": "return: return [40018,40024]"
    },
    {
      "src": "event_paramater [37687,37718]",
      "dest": "event_paramater [49341,49372]"
    },
    {
      "src": "memory: memory [39385,39391]",
      "dest": "memory: memory [51130,51136]"
    },
    {
      "src": ".: . [7593,7594]",
      "dest": ".: . [23046,23047]"
    },
    {
      "src": "type_name [34562,34569]",
      "dest": "type_name [8090,8097]"
    },
    {
      "src": ",: , [24702,24703]",
      "dest": ",: , [33880,33881]"
    },
    {
      "src": "): ) [28071,28072]",
      "dest": "): ) [39214,39215]"
    },
    {
      "src": "primitive_type [29182,29187]",
      "dest": "primitive_type [41086,41091]"
    },
    {
      "src": "}: } [27787,27788]",
      "dest": "}: } [37846,37847]"
    },
    {
      "src": "{: { [9869,9870]",
      "dest": "{: { [25322,25323]"
    },
    {
      "src": "number_literal: 1 [34364,34365]",
      "dest": "number_literal: 1 [45966,45967]"
    },
    {
      "src": "type_name [26438,26444]",
      "dest": "type_name [35616,35622]"
    },
    {
      "src": "variable_declaration [28042,28055]",
      "dest": "variable_declaration [16600,16620]"
    },
    {
      "src": "identifier: memPtr [31347,31353]",
      "dest": "identifier: memPtr [38642,38648]"
    },
    {
      "src": "call_argument [30051,30092]",
      "dest": "call_argument [4349,4381]"
    },
    {
      "src": "identifier: RLPReader [39365,39374]",
      "dest": "identifier: RLPReader [51110,51119]"
    },
    {
      "src": "identifier: dataLen [33533,33540]",
      "dest": "identifier: dataLen [45153,45160]"
    },
    {
      "src": "(: ( [21785,21786]",
      "dest": "(: ( [30963,30964]"
    },
    {
      "src": "bytes32: bytes32 [37358,37365]",
      "dest": "bytes32: bytes32 [49012,49019]"
    },
    {
      "src": "call_argument [10172,10182]",
      "dest": "call_argument [25625,25635]"
    },
    {
      "src": "primitive_type [34562,34569]",
      "dest": "primitive_type [8090,8097]"
    },
    {
      "src": "comment: // File: @openzeppelin/contracts/utils/Address.sol [11440,11490]",
      "dest": "comment: // File: @openzeppelin/contracts/math/SafeMath.sol [2834,2884]"
    },
    {
      "src": "primitive_type [33885,33892]",
      "dest": "primitive_type [7486,7493]"
    },
    {
      "src": "binary_expression [28921,28945]",
      "dest": "binary_expression [39956,39980]"
    },
    {
      "src": "number_literal: 1 [32822,32823]",
      "dest": "number_literal: 1 [44401,44402]"
    },
    {
      "src": "function: function [2238,2246]",
      "dest": "function: function [2238,2246]"
    },
    {
      "src": "visibility [10875,10883]",
      "dest": "visibility [26328,26336]"
    },
    {
      "src": "return_statement [22113,22150]",
      "dest": "return_statement [31291,31328]"
    },
    {
      "src": "string_literal [37911,37935]",
      "dest": "string_literal [49565,49589]"
    },
    {
      "src": "): ) [33140,33141]",
      "dest": "): ) [44737,44738]"
    },
    {
      "src": ",: , [7326,7327]",
      "dest": ",: , [22779,22780]"
    },
    {
      "src": "primitive_type [770,777]",
      "dest": "primitive_type [770,777]"
    },
    {
      "src": "(: ( [28382,28383]",
      "dest": "(: ( [39378,39379]"
    },
    {
      "src": "variable_declaration [28383,28392]",
      "dest": "variable_declaration [39379,39385]"
    },
    {
      "src": "}: } [16148,16149]",
      "dest": "}: } [12958,12959]"
    },
    {
      "src": "identifier: role [23558,23562]",
      "dest": "identifier: role [32736,32740]"
    },
    {
      "src": "call_argument [8870,8875]",
      "dest": "call_argument [24323,24328]"
    },
    {
      "src": "primitive_type [27105,27110]",
      "dest": "primitive_type [36283,36288]"
    },
    {
      "src": "number_literal: 0x00 [20507,20511]",
      "dest": "number_literal: 0x00 [29685,29689]"
    },
    {
      "src": "identifier: require [27980,27987]",
      "dest": "identifier: require [39154,39161]"
    },
    {
      "src": "for: for [34731,34734]",
      "dest": "for: for [46286,46289]"
    },
    {
      "src": "yul_identifier [35105,35112]",
      "dest": "yul_identifier [46699,46706]"
    },
    {
      "src": "call_argument [26258,26265]",
      "dest": "call_argument [35436,35443]"
    },
    {
      "src": "primitive_type [31822,31829]",
      "dest": "primitive_type [6805,6812]"
    },
    {
      "src": "string_literal [16097,16140]",
      "dest": "string_literal [12907,12950]"
    },
    {
      "src": "(: ( [5902,5903]",
      "dest": "(: ( [21355,21356]"
    },
    {
      "src": "(: ( [18536,18537]",
      "dest": "(: ( [27714,27715]"
    },
    {
      "src": "assembly_statement [33909,33975]",
      "dest": "assembly_statement [45520,45586]"
    },
    {
      "src": "\": \" [37476,37477]",
      "dest": "\": \" [49130,49131]"
    },
    {
      "src": "else: else [32734,32738]",
      "dest": "else: else [44313,44317]"
    },
    {
      "src": "identifier: only [39260,39264]",
      "dest": "identifier: only [51005,51009]"
    },
    {
      "src": "solidity: solidity [3450,3458]",
      "dest": "solidity: solidity [2930,2938]"
    },
    {
      "src": "(: ( [10088,10089]",
      "dest": "(: ( [25541,25542]"
    },
    {
      "src": "primitive_type [10683,10687]",
      "dest": "primitive_type [26136,26140]"
    },
    {
      "src": "expression_statement [26542,26622]",
      "dest": "expression_statement [35720,35800]"
    },
    {
      "src": "private: private [5118,5125]",
      "dest": "private: private [20571,20578]"
    },
    {
      "src": "=: = [20505,20506]",
      "dest": "=: = [29683,29684]"
    },
    {
      "src": "modifier_invocation [38557,38575]",
      "dest": "modifier_invocation [50211,50229]"
    },
    {
      "src": "(: ( [8487,8488]",
      "dest": "(: ( [23940,23941]"
    },
    {
      "src": "returns: returns [22084,22091]",
      "dest": "returns: returns [31262,31269]"
    },
    {
      "src": "identifier: role [23486,23490]",
      "dest": "identifier: role [32664,32668]"
    },
    {
      "src": "function: function [22756,22764]",
      "dest": "function: function [31934,31942]"
    },
    {
      "src": "string [29917,29949]",
      "dest": "string [6186,6214]"
    },
    {
      "src": "call_argument [28067,28071]",
      "dest": "call_argument [39210,39214]"
    },
    {
      "src": "call_expression [13873,13946]",
      "dest": "call_expression [10683,10756]"
    },
    {
      "src": "return_statement [18453,18471]",
      "dest": "return_statement [27631,27649]"
    },
    {
      "src": ".: . [6745,6746]",
      "dest": ".: . [22198,22199]"
    },
    {
      "src": "identifier: _msgSender [23575,23585]",
      "dest": "identifier: _msgSender [32753,32763]"
    },
    {
      "src": "constant: constant [37514,37522]",
      "dest": "constant: constant [49168,49176]"
    },
    {
      "src": ",: , [33505,33506]",
      "dest": ",: , [45125,45126]"
    },
    {
      "src": "}: } [33286,33287]",
      "dest": "}: } [44883,44884]"
    },
    {
      "src": "comment: /**      * @dev Emitted when `value` tokens are moved from one account (`from`) to      * another (`to`).      *      * Note that `value` may be zero.      */ [2343,2506]",
      "dest": "comment: /**      * @dev Emitted when `value` tokens are moved from one account (`from`) to      * another (`to`).      *      * Note that `value` may be zero.      */ [2343,2506]"
    },
    {
      "src": "primitive_type [14971,14978]",
      "dest": "primitive_type [11781,11788]"
    },
    {
      "src": "): ) [17094,17095]",
      "dest": "): ) [13904,13905]"
    },
    {
      "src": "-: - [35056,35057]",
      "dest": "-: - [46642,46643]"
    },
    {
      "src": "}: } [30535,30536]",
      "dest": "}: } [42722,42723]"
    },
    {
      "src": "parameter [1113,1126]",
      "dest": "parameter [1113,1126]"
    },
    {
      "src": "call_argument [16076,16082]",
      "dest": "call_argument [12886,12892]"
    },
    {
      "src": "(: ( [33009,33010]",
      "dest": "(: ( [44590,44591]"
    },
    {
      "src": "uint256: uint256 [6265,6272]",
      "dest": "uint256: uint256 [21718,21725]"
    },
    {
      "src": "comment: // @return indicator whether encoded payload is a list. negate this function call for isData. [28602,28695]",
      "dest": "comment: // @return indicator whether encoded payload is a list. negate this function call for isData. [39596,39689]"
    },
    {
      "src": "): ) [16871,16872]",
      "dest": "): ) [13681,13682]"
    },
    {
      "src": ".: . [5359,5360]",
      "dest": ".: . [20812,20813]"
    },
    {
      "src": "comment: // solhint-disable-next-line avoid-low-level-calls [16957,17007]",
      "dest": "comment: // solhint-disable-next-line avoid-low-level-calls [13767,13817]"
    },
    {
      "src": "number_literal: 1 [32722,32723]",
      "dest": "number_literal: 1 [44291,44292]"
    },
    {
      "src": "=: = [31444,31445]",
      "dest": "=: = [43269,43270]"
    },
    {
      "src": "identifier: tokenBalance [39997,40009]",
      "dest": "identifier: tokenBalance [51740,51752]"
    },
    {
      "src": "struct_declaration [8193,8240]",
      "dest": "struct_declaration [23646,23693]"
    },
    {
      "src": "call_expression [28485,28509]",
      "dest": "call_expression [39478,39502]"
    },
    {
      "src": "yul_path [33455,33460]",
      "dest": "yul_path [45075,45080]"
    },
    {
      "src": "comment: // underlying Set. [4511,4529]",
      "dest": "comment: // underlying Set. [19964,19982]"
    },
    {
      "src": "}: } [14187,14188]",
      "dest": "}: } [10997,10998]"
    },
    {
      "src": "view: view [1154,1158]",
      "dest": "view: view [1154,1158]"
    },
    {
      "src": "}: } [31645,31646]",
      "dest": "}: } [43453,43454]"
    },
    {
      "src": "let: let [33436,33439]",
      "dest": "let: let [45056,45059]"
    },
    {
      "src": "primitive_type [29238,29243]",
      "dest": "primitive_type [41137,41142]"
    },
    {
      "src": "solidity_version: 0.6.0 [18839,18844]",
      "dest": "solidity_version: 0.6.0 [18913,18918]"
    },
    {
      "src": "identifier: AddressSet [8431,8441]",
      "dest": "identifier: AddressSet [23884,23894]"
    },
    {
      "src": "identifier: _inner [10176,10182]",
      "dest": "identifier: _inner [25629,25635]"
    },
    {
      "src": "identifier: role [25735,25739]",
      "dest": "identifier: role [34913,34917]"
    },
    {
      "src": "expression_statement [34903,34921]",
      "dest": "expression_statement [46458,46476]"
    },
    {
      "src": "comment: /**     * @dev Returns the value stored at position `index` in the set. O(1).     *     * Note that there are no guarantees on the ordering of values inside the     * array, and it may change when more values are added or removed.     *     * Requirements:     *     * - `index` must be strictly less than {length}.     */ [7623,7954]",
      "dest": "comment: /**     * @dev Returns the value stored at position `index` in the set. O(1).     *     * Note that there are no guarantees on the ordering of values inside the     * array, and it may change when more values are added or removed.     *     * Requirements:     *     * - `index` must be strictly less than {length}.     */ [23076,23407]"
    },
    {
      "src": "comment: // File: @openzeppelin/contracts/token/ERC20/IERC20.sol [0,55]",
      "dest": "comment: // File: @openzeppelin/contracts/token/ERC20/IERC20.sol [0,55]"
    },
    {
      "src": "call_argument [23670,23677]",
      "dest": "call_argument [32848,32855]"
    },
    {
      "src": "variable_declaration [12559,12575]",
      "dest": "variable_declaration [9369,9385]"
    },
    {
      "src": "]: ] [5374,5375]",
      "dest": "]: ] [20827,20828]"
    },
    {
      "src": "identifier: require [24008,24015]",
      "dest": "identifier: require [33186,33193]"
    },
    {
      "src": "function: function [36059,36067]",
      "dest": "function: function [47676,47684]"
    },
    {
      "src": "type_name [31310,31317]",
      "dest": "type_name [15262,15269]"
    },
    {
      "src": "]: ] [25872,25873]",
      "dest": "]: ] [35050,35051]"
    },
    {
      "src": "identifier: dataLen [33236,33243]",
      "dest": "identifier: dataLen [44833,44840]"
    },
    {
      "src": "identifier: keccak256 [37544,37553]",
      "dest": "identifier: keccak256 [49198,49207]"
    },
    {
      "src": "comment: /**      * @dev Grants `role` to `account`.      *      * If `account` had not been already granted `role`, emits a {RoleGranted}      * event. Note that unlike {grantRole}, this function doesn't perform any      * checks on the calling account.      *      * [WARNING]      * ====      * This function should only be called from the constructor when setting      * up the initial roles for the system.      *      * Using this function in any other way is effectively circumventing the admin      * system imposed by {AccessControl}.      * ====      */ [24885,25454]",
      "dest": "comment: /**      * @dev Grants `role` to `account`.      *      * If `account` had not been already granted `role`, emits a {RoleGranted}      * event. Note that unlike {grantRole}, this function doesn't perform any      * checks on the calling account.      *      * [WARNING]      * ====      * This function should only be called from the constructor when setting      * up the initial roles for the system.      *      * Using this function in any other way is effectively circumventing the admin      * system imposed by {AccessControl}.      * ====      */ [34063,34632]"
    },
    {
      "src": "=: = [35038,35039]",
      "dest": "=: = [46622,46623]"
    },
    {
      "src": "identifier: _remove [5671,5678]",
      "dest": "identifier: _remove [21124,21131]"
    },
    {
      "src": ":=: := [33448,33450]",
      "dest": ":=: := [45068,45070]"
    },
    {
      "src": "type_name [9014,9021]",
      "dest": "type_name [24467,24474]"
    },
    {
      "src": "yul_identifier [30446,30452]",
      "dest": "yul_identifier [42633,42639]"
    },
    {
      "src": "identifier: dest [34903,34907]",
      "dest": "identifier: dest [46458,46462]"
    },
    {
      "src": "(: ( [31098,31099]",
      "dest": "(: ( [43087,43088]"
    },
    {
      "src": "address: address [29494,29501]",
      "dest": "address: address [42111,42118]"
    },
    {
      "src": "identifier: account [26010,26017]",
      "dest": "identifier: account [35188,35195]"
    },
    {
      "src": ",: , [17564,17565]",
      "dest": ",: , [14374,14375]"
    },
    {
      "src": "identifier: RLPItem [28083,28090]",
      "dest": "identifier: RLPItem [39226,39233]"
    },
    {
      "src": "false: false [5462,5467]",
      "dest": "false: false [20915,20920]"
    },
    {
      "src": "(: ( [29529,29530]",
      "dest": "(: ( [40780,40781]"
    },
    {
      "src": "): ) [40484,40485]",
      "dest": "): ) [52381,52382]"
    },
    {
      "src": "identifier: STRING_LONG_START [32751,32768]",
      "dest": "identifier: STRING_LONG_START [44330,44347]"
    },
    {
      "src": "identifier: copy [34547,34551]",
      "dest": "identifier: copy [46145,46149]"
    },
    {
      "src": "type_name [15374,15381]",
      "dest": "type_name [12184,12191]"
    },
    {
      "src": "call_argument [23575,23587]",
      "dest": "call_argument [32753,32765]"
    },
    {
      "src": "(: ( [32531,32532]",
      "dest": "(: ( [6148,6149]"
    },
    {
      "src": "yul_function_call [33152,33168]",
      "dest": "yul_function_call [44749,44765]"
    },
    {
      "src": "type_cast_expression [40028,40041]",
      "dest": "type_cast_expression [51771,51784]"
    },
    {
      "src": "function: function [23083,23091]",
      "dest": "function: function [32261,32269]"
    },
    {
      "src": "bool: bool [8488,8492]",
      "dest": "bool: bool [23941,23945]"
    },
    {
      "src": "): ) [25563,25564]",
      "dest": "): ) [34741,34742]"
    },
    {
      "src": ",: , [26065,26066]",
      "dest": ",: , [35243,35244]"
    },
    {
      "src": "call_argument [8545,8550]",
      "dest": "call_argument [23998,24003]"
    },
    {
      "src": "type_name [21748,21755]",
      "dest": "type_name [30926,30933]"
    },
    {
      "src": "identifier: set [9798,9801]",
      "dest": "identifier: set [25251,25254]"
    },
    {
      "src": "yul_evm_builtin [33232,33235]",
      "dest": "yul_evm_builtin [44829,44832]"
    },
    {
      "src": "yul_function_call [33563,33589]",
      "dest": "yul_function_call [45183,45209]"
    },
    {
      "src": "(: ( [7015,7016]",
      "dest": "(: ( [22468,22469]"
    },
    {
      "src": "primitive_type [1168,1175]",
      "dest": "primitive_type [1168,1175]"
    },
    {
      "src": "add: add [33232,33235]",
      "dest": "add: add [44829,44832]"
    },
    {
      "src": "function_definition [8418,8561]",
      "dest": "function_definition [23871,24014]"
    },
    {
      "src": "type_name [27946,27955]",
      "dest": "type_name [39125,39134]"
    },
    {
      "src": ",: , [39821,39822]",
      "dest": ",: , [51566,51567]"
    },
    {
      "src": "identifier: errorMessage [16828,16840]",
      "dest": "identifier: errorMessage [13638,13650]"
    },
    {
      "src": "{: { [12303,12304]",
      "dest": "{: { [9113,9114]"
    },
    {
      "src": "parameter [14987,15004]",
      "dest": "parameter [11797,11814]"
    },
    {
      "src": "identifier: _setupContractId [26479,26495]",
      "dest": "identifier: _setupContractId [35657,35673]"
    },
    {
      "src": "identifier: target [16444,16450]",
      "dest": "identifier: target [13254,13260]"
    },
    {
      "src": "identifier: item [27490,27494]",
      "dest": "identifier: item [37654,37658]"
    },
    {
      "src": "user_defined_type [7973,7976]",
      "dest": "user_defined_type [23426,23429]"
    },
    {
      "src": ",: , [25492,25493]",
      "dest": ",: , [34670,34671]"
    },
    {
      "src": "private: private [33843,33850]",
      "dest": "private: private [45460,45467]"
    },
    {
      "src": "user_defined_type [27875,27882]",
      "dest": "user_defined_type [39081,39088]"
    },
    {
      "src": "(: ( [28203,28204]",
      "dest": "(: ( [42336,42337]"
    },
    {
      "src": "event_paramater [21170,21190]",
      "dest": "event_paramater [30348,30368]"
    },
    {
      "src": "function_definition [21717,21856]",
      "dest": "function_definition [30895,31034]"
    },
    {
      "src": "type_name [36918,36922]",
      "dest": "type_name [48535,48539]"
    },
    {
      "src": "return_statement [22849,22887]",
      "dest": "return_statement [32027,32065]"
    },
    {
      "src": "if_statement [33987,34366]",
      "dest": "if_statement [45598,45968]"
    },
    {
      "src": "returns: returns [330,337]",
      "dest": "returns: returns [330,337]"
    },
    {
      "src": "visibility [13853,13861]",
      "dest": "visibility [10663,10671]"
    },
    {
      "src": "member_expression [39410,39430]",
      "dest": "member_expression [51155,51175]"
    },
    {
      "src": "+=: += [34876,34878]",
      "dest": "+=: += [46431,46433]"
    },
    {
      "src": "function: function [29744,29752]",
      "dest": "function: function [42252,42260]"
    },
    {
      "src": "yul_path [31544,31550]",
      "dest": "yul_path [43366,43372]"
    },
    {
      "src": "user_defined_type [37258,37271]",
      "dest": "user_defined_type [48879,48892]"
    },
    {
      "src": "variable_declaration [14038,14050]",
      "dest": "variable_declaration [10848,10860]"
    },
    {
      "src": "return_type_definition [7554,7571]",
      "dest": "return_type_definition [23007,23024]"
    },
    {
      "src": "number_literal: 1 [34303,34304]",
      "dest": "number_literal: 1 [45892,45893]"
    },
    {
      "src": "indexed: indexed [2795,2802]",
      "dest": "indexed: indexed [2795,2802]"
    },
    {
      "src": "+: + [32223,32224]",
      "dest": "+: + [43881,43882]"
    },
    {
      "src": "identifier: index [22880,22885]",
      "dest": "identifier: index [32058,32063]"
    },
    {
      "src": "(: ( [10932,10933]",
      "dest": "(: ( [26385,26386]"
    },
    {
      "src": "identifier: data [15403,15407]",
      "dest": "identifier: data [12213,12217]"
    },
    {
      "src": "(: ( [33553,33554]",
      "dest": "(: ( [45173,45174]"
    },
    {
      "src": "solidity_version_comparison_operator [17817,17819]",
      "dest": "solidity_version_comparison_operator [14637,14639]"
    },
    {
      "src": "bytes32: bytes32 [22058,22065]",
      "dest": "bytes32: bytes32 [31236,31243]"
    },
    {
      "src": "yul_function_call [32927,32943]",
      "dest": "yul_function_call [44508,44524]"
    },
    {
      "src": "contract: contract [18348,18356]",
      "dest": "contract: contract [27526,27534]"
    },
    {
      "src": "type_name [15989,15996]",
      "dest": "type_name [12799,12806]"
    },
    {
      "src": "visibility [26159,26166]",
      "dest": "visibility [35337,35344]"
    },
    {
      "src": "identifier: memPtr [28334,28340]",
      "dest": "identifier: memPtr [43759,43765]"
    },
    {
      "src": "yul_evm_builtin [33245,33248]",
      "dest": "yul_evm_builtin [44842,44845]"
    },
    {
      "src": "identifier: _values [7594,7601]",
      "dest": "identifier: _values [23047,23054]"
    },
    {
      "src": "string_literal [26591,26619]",
      "dest": "string_literal [35769,35797]"
    },
    {
      "src": "yul_evm_builtin [35246,35252]",
      "dest": "yul_evm_builtin [46848,46854]"
    },
    {
      "src": "for: for [37296,37299]",
      "dest": "for: for [48917,48920]"
    },
    {
      "src": "call_argument [10933,10943]",
      "dest": "call_argument [26386,26396]"
    },
    {
      "src": "{: { [21792,21793]",
      "dest": "{: { [30970,30971]"
    },
    {
      "src": "]: ] [22867,22868]",
      "dest": "]: ] [32045,32046]"
    },
    {
      "src": "visibility [10125,10133]",
      "dest": "visibility [25578,25586]"
    },
    {
      "src": "comment: // File: @openzeppelin/contracts/GSN/Context.sol [17715,17763]",
      "dest": "comment: // File: @openzeppelin/contracts/GSN/Context.sol [26893,26941]"
    },
    {
      "src": "}: } [4893,4894]",
      "dest": "}: } [20346,20347]"
    },
    {
      "src": "memory: memory [29119,29125]",
      "dest": "memory: memory [41050,41056]"
    },
    {
      "src": "parameter [23951,23963]",
      "dest": "parameter [33129,33141]"
    },
    {
      "src": "visibility [1145,1153]",
      "dest": "visibility [1145,1153]"
    },
    {
      "src": "uint256: uint256 [29804,29811]",
      "dest": "uint256: uint256 [7520,7527]"
    },
    {
      "src": ",: , [38823,38824]",
      "dest": ",: , [50591,50592]"
    },
    {
      "src": "(: ( [8809,8810]",
      "dest": "(: ( [24262,24263]"
    },
    {
      "src": "): ) [24719,24720]",
      "dest": "): ) [33897,33898]"
    },
    {
      "src": "identifier: item [31342,31346]",
      "dest": "identifier: item [38637,38641]"
    },
    {
      "src": "identifier: target [15510,15516]",
      "dest": "identifier: target [12320,12326]"
    },
    {
      "src": "if_statement [17251,17690]",
      "dest": "if_statement [14061,14500]"
    },
    {
      "src": "virtual: virtual [18520,18527]",
      "dest": "virtual: virtual [27698,27705]"
    },
    {
      "src": "parameter [34584,34596]",
      "dest": "parameter [8101,8110]"
    },
    {
      "src": "identifier: memPtr [32502,32508]",
      "dest": "identifier: value [16867,16872]"
    },
    {
      "src": "(: ( [16564,16565]",
      "dest": "(: ( [13374,13375]"
    },
    {
      "src": "}: } [12855,12856]",
      "dest": "}: } [9665,9666]"
    },
    {
      "src": ".: . [32067,32068]",
      "dest": ".: . [39303,39304]"
    },
    {
      "src": "visibility [27505,27513]",
      "dest": "visibility [37660,37668]"
    },
    {
      "src": "comment: /**      * @dev Grants `role` to `account`.      *      * If `account` had not been already granted `role`, emits a {RoleGranted}      * event.      *      * Requirements:      *      * - the caller must have ``role``'s admin role.      */ [23205,23453]",
      "dest": "comment: /**      * @dev Grants `role` to `account`.      *      * If `account` had not been already granted `role`, emits a {RoleGranted}      * event.      *      * Requirements:      *      * - the caller must have ``role``'s admin role.      */ [32383,32631]"
    },
    {
      "src": "uint256: uint256 [32552,32559]",
      "dest": "uint256: uint256 [7475,7482]"
    },
    {
      "src": "identifier: toUint [39798,39804]",
      "dest": "identifier: toUint [51543,51549]"
    },
    {
      "src": "uint256: uint256 [30228,30235]",
      "dest": "uint256: uint256 [5157,5164]"
    },
    {
      "src": "number_literal: 0 [39501,39502]",
      "dest": "number_literal: 0 [51246,51247]"
    },
    {
      "src": "sub: sub [33572,33575]",
      "dest": "sub: sub [45192,45195]"
    },
    {
      "src": "identifier: AccessControlMixin [26395,26413]",
      "dest": "identifier: AccessControlMixin [35573,35591]"
    },
    {
      "src": "parameter [10624,10643]",
      "dest": "parameter [26077,26096]"
    },
    {
      "src": "identifier: WORD_SIZE [34879,34888]",
      "dest": "identifier: WORD_SIZE [46434,46443]"
    },
    {
      "src": "binary_expression [29635,29649]",
      "dest": "binary_expression [42180,42194]"
    },
    {
      "src": "identifier: set [5098,5101]",
      "dest": "identifier: set [20551,20554]"
    },
    {
      "src": "}: } [34931,34932]",
      "dest": "}: } [46486,46487]"
    },
    {
      "src": "identifier: members [26195,26202]",
      "dest": "identifier: members [35373,35380]"
    },
    {
      "src": "assignment_expression [28524,28549]",
      "dest": "assignment_expression [39518,39543]"
    },
    {
      "src": "identifier: toUint [29715,29721]",
      "dest": "identifier: toUint [42223,42229]"
    },
    {
      "src": "function: function [15923,15931]",
      "dest": "function: function [12733,12741]"
    },
    {
      "src": "]: ] [7407,7408]",
      "dest": "]: ] [22860,22861]"
    },
    {
      "src": "primitive_type [751,758]",
      "dest": "primitive_type [751,758]"
    },
    {
      "src": "returns: returns [15015,15022]",
      "dest": "returns: returns [11825,11832]"
    },
    {
      "src": "(: ( [24015,24016]",
      "dest": "(: ( [33193,33194]"
    },
    {
      "src": "primitive_type [4858,4865]",
      "dest": "primitive_type [20311,20318]"
    },
    {
      "src": "): ) [8468,8469]",
      "dest": "): ) [23921,23922]"
    },
    {
      "src": "comment: /**      * @dev Returns true if the value is in the set. O(1).      */ [8894,8966]",
      "dest": "comment: /**      * @dev Returns true if the value is in the set. O(1).      */ [24347,24419]"
    }
  ],
  "actions": [
    {
      "action": "move-tree",
      "tree": "comment: // File: @openzeppelin/contracts/utils/Address.sol [11440,11490]",
      "parent": "source_file [0,52393]",
      "at": 5
    },
    {
      "action": "move-tree",
      "tree": "comment: // SPDX-License-Identifier: MIT [11494,11525]",
      "parent": "source_file [0,52393]",
      "at": 6
    },
    {
      "action": "move-tree",
      "tree": "pragma_directive [3443,3466]",
      "parent": "source_file [0,52393]",
      "at": 7
    },
    {
      "action": "move-tree",
      "tree": "comment: /**  * @dev Collection of functions related to the address type  */ [11556,11625]",
      "parent": "source_file [0,52393]",
      "at": 8
    },
    {
      "action": "move-tree",
      "tree": "pragma_directive [11529,11552]",
      "parent": "source_file [0,52393]",
      "at": 9
    },
    {
      "action": "move-tree",
      "tree": "library_declaration [11627,17711]",
      "parent": "source_file [0,52393]",
      "at": 10
    },
    {
      "action": "move-tree",
      "tree": "pragma_directive [17802,17825]",
      "parent": "source_file [0,52393]",
      "at": 11
    },
    {
      "action": "move-tree",
      "tree": "pragma_directive [26358,26380]",
      "parent": "source_file [0,52393]",
      "at": 13
    },
    {
      "action": "move-tree",
      "tree": "pragma_directive [18822,18845]",
      "parent": "source_file [0,52393]",
      "at": 18
    },
    {
      "action": "move-tree",
      "tree": "pragma_directive [36862,36884]",
      "parent": "source_file [0,52393]",
      "at": 30
    },
    {
      "action": "move-tree",
      "tree": "pragma_directive [37135,37157]",
      "parent": "source_file [0,52393]",
      "at": 34
    },
    {
      "action": "move-tree",
      "tree": "pragma_directive [27054,27076]",
      "parent": "source_file [0,52393]",
      "at": 42
    },
    {
      "action": "move-tree",
      "tree": "pragma_directive [2890,2912]",
      "parent": "source_file [0,52393]",
      "at": 44
    },
    {
      "action": "update-node",
      "tree": "comment: // File: @openzeppelin/contracts/utils/Address.sol [11440,11490]",
      "label": "// File: @openzeppelin/contracts/math/SafeMath.sol"
    },
    {
      "action": "update-node",
      "tree": "comment: /**  * @dev Collection of functions related to the address type  */ [11556,11625]",
      "label": "/**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */"
    },
    {
      "action": "insert-node",
      "tree": "library_declaration [3527,8246]",
      "parent": "source_file [0,52393]",
      "at": 9
    },
    {
      "action": "insert-node",
      "tree": "comment: // File: @openzeppelin/contracts/utils/Address.sol [8250,8300]",
      "parent": "source_file [0,52393]",
      "at": 10
    },
    {
      "action": "insert-node",
      "tree": "comment: // SPDX-License-Identifier: MIT [8304,8335]",
      "parent": "source_file [0,52393]",
      "at": 11
    },
    {
      "action": "insert-node",
      "tree": "comment: /**  * @dev Collection of functions related to the address type  */ [8366,8435]",
      "parent": "source_file [0,52393]",
      "at": 13
    },
    {
      "action": "insert-node",
      "tree": "comment: // File: @openzeppelin/contracts/token/ERC20/SafeERC20.sol [14525,14583]",
      "parent": "source_file [0,52393]",
      "at": 15
    },
    {
      "action": "insert-node",
      "tree": "comment: // SPDX-License-Identifier: MIT [14587,14618]",
      "parent": "source_file [0,52393]",
      "at": 16
    },
    {
      "action": "insert-node",
      "tree": "comment: /**  * @title SafeERC20  * @dev Wrappers around ERC20 operations that throw on failure (when the token  * contract returns false). Tokens that return no value (and instead revert or  * throw on failure) are also supported, non-reverting calls are assumed to be  * successful.  * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,  * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.  */ [14655,15120]",
      "parent": "source_file [0,52393]",
      "at": 18
    },
    {
      "action": "insert-node",
      "tree": "library_declaration [15122,18283]",
      "parent": "source_file [0,52393]",
      "at": 19
    },
    {
      "action": "insert-tree",
      "tree": "pragma_directive [26980,27003]",
      "parent": "source_file [0,52393]",
      "at": 30
    },
    {
      "action": "insert-tree",
      "tree": "pragma_directive [28000,28023]",
      "parent": "source_file [0,52393]",
      "at": 35
    },
    {
      "action": "insert-node",
      "tree": "library: library [3527,3534]",
      "parent": "library_declaration [3527,8246]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: SafeMath [3535,3543]",
      "parent": "library_declaration [3527,8246]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "contract_body [3544,8246]",
      "parent": "library_declaration [3527,8246]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "library: library [15122,15129]",
      "parent": "library_declaration [15122,18283]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: SafeERC20 [15130,15139]",
      "parent": "library_declaration [15122,18283]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "contract_body [15140,18283]",
      "parent": "library_declaration [15122,18283]",
      "at": 2
    },
    {
      "action": "move-tree",
      "tree": "comment: /*      * Private Helpers      */ [31654,31689]",
      "parent": "contract_body [36276,46919]",
      "at": 10
    },
    {
      "action": "move-tree",
      "tree": "function_definition [27458,27788]",
      "parent": "contract_body [36276,46919]",
      "at": 10
    },
    {
      "action": "move-tree",
      "tree": "comment: /*      * @param src Pointer to source      * @param dest Pointer to destination      * @param len Amount of memory to copy from the source      */ [34381,34532]",
      "parent": "contract_body [36276,46919]",
      "at": 11
    },
    {
      "action": "insert-node",
      "tree": "{: { [3544,3545]",
      "parent": "contract_body [3544,8246]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      *      * - Addition cannot overflow.      */ [3551,3784]",
      "parent": "contract_body [3544,8246]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "function_definition [3790,3971]",
      "parent": "contract_body [3544,8246]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [3979,4248]",
      "parent": "contract_body [3544,8246]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "function_definition [4254,4390]",
      "parent": "contract_body [3544,8246]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [4398,4687]",
      "parent": "contract_body [3544,8246]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": "function_definition [4693,4885]",
      "parent": "contract_body [3544,8246]",
      "at": 6
    },
    {
      "action": "insert-node",
      "tree": "comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      *      * - Multiplication cannot overflow.      */ [4893,5138]",
      "parent": "contract_body [3544,8246]",
      "at": 7
    },
    {
      "action": "insert-node",
      "tree": "function_definition [5144,5615]",
      "parent": "contract_body [3544,8246]",
      "at": 8
    },
    {
      "action": "insert-node",
      "tree": "comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [5623,6085]",
      "parent": "contract_body [3544,8246]",
      "at": 9
    },
    {
      "action": "insert-node",
      "tree": "function_definition [6091,6223]",
      "parent": "contract_body [3544,8246]",
      "at": 10
    },
    {
      "action": "insert-node",
      "tree": "comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts with custom message on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [6231,6713]",
      "parent": "contract_body [3544,8246]",
      "at": 11
    },
    {
      "action": "insert-node",
      "tree": "function_definition [6719,6997]",
      "parent": "contract_body [3544,8246]",
      "at": 12
    },
    {
      "action": "insert-node",
      "tree": "comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [7005,7456]",
      "parent": "contract_body [3544,8246]",
      "at": 13
    },
    {
      "action": "insert-node",
      "tree": "function_definition [7462,7592]",
      "parent": "contract_body [3544,8246]",
      "at": 14
    },
    {
      "action": "insert-node",
      "tree": "comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts with custom message when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [7600,8071]",
      "parent": "contract_body [3544,8246]",
      "at": 15
    },
    {
      "action": "insert-node",
      "tree": "function_definition [8077,8243]",
      "parent": "contract_body [3544,8246]",
      "at": 16
    },
    {
      "action": "insert-node",
      "tree": "}: } [8245,8246]",
      "parent": "contract_body [3544,8246]",
      "at": 17
    },
    {
      "action": "insert-node",
      "tree": "{: { [15140,15141]",
      "parent": "contract_body [15140,18283]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "using_directive [15147,15174]",
      "parent": "contract_body [15140,18283]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "using_directive [15180,15206]",
      "parent": "contract_body [15140,18283]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "function_definition [15214,15391]",
      "parent": "contract_body [15140,18283]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "function_definition [15399,15604]",
      "parent": "contract_body [15140,18283]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "comment: /**      * @dev Deprecated. This function has issues similar to the ones found in      * {IERC20-approve}, and its usage is discouraged.      *      * Whenever possible, use {safeIncreaseAllowance} and      * {safeDecreaseAllowance} instead.      */ [15612,15867]",
      "parent": "contract_body [15140,18283]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": "function_definition [15873,16495]",
      "parent": "contract_body [15140,18283]",
      "at": 6
    },
    {
      "action": "insert-node",
      "tree": "function_definition [16503,16789]",
      "parent": "contract_body [15140,18283]",
      "at": 7
    },
    {
      "action": "insert-node",
      "tree": "function_definition [16797,17128]",
      "parent": "contract_body [15140,18283]",
      "at": 8
    },
    {
      "action": "insert-node",
      "tree": "comment: /**      * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement      * on the return value: the return value is optional (but if data is returned, it must not be false).      * @param token The token targeted by the call.      * @param data The call data (encoded using abi.encode or one of its variants).      */ [17136,17513]",
      "parent": "contract_body [15140,18283]",
      "at": 9
    },
    {
      "action": "insert-node",
      "tree": "function_definition [17519,18280]",
      "parent": "contract_body [15140,18283]",
      "at": 10
    },
    {
      "action": "insert-node",
      "tree": "}: } [18282,18283]",
      "parent": "contract_body [15140,18283]",
      "at": 11
    },
    {
      "action": "insert-tree",
      "tree": "struct_declaration [36509,36573]",
      "parent": "contract_body [36276,46919]",
      "at": 6
    },
    {
      "action": "insert-tree",
      "tree": "struct_declaration [36581,36733]",
      "parent": "contract_body [36276,46919]",
      "at": 7
    },
    {
      "action": "update-node",
      "tree": "comment: /*      * @param item RLP encoded bytes      */ [27403,27452]",
      "label": "/*     * @dev Returns the next element in the iteration. Reverts if it has not next element.     * @param self The iterator.     * @return The next element in the iteration.     */"
    },
    {
      "action": "insert-tree",
      "tree": "function_definition [36931,37214]",
      "parent": "contract_body [36276,46919]",
      "at": 9
    },
    {
      "action": "update-node",
      "tree": "comment: /*      * @param item RLP encoded list in bytes      */ [27796,27853]",
      "label": "/*     * @dev Returns true if the iteration has more elements.     * @param self The iterator.     * @return true if the iteration has more elements.     */"
    },
    {
      "action": "insert-node",
      "tree": "function_definition [37388,37561]",
      "parent": "contract_body [36276,46919]",
      "at": 11
    },
    {
      "action": "update-node",
      "tree": "comment: /*      * Private Helpers      */ [31654,31689]",
      "label": "/*     * @param item RLP encoded bytes     */"
    },
    {
      "action": "update-node",
      "tree": "comment: /*      * @param src Pointer to source      * @param dest Pointer to destination      * @param len Amount of memory to copy from the source      */ [34381,34532]",
      "label": "/*     * @dev Create an iterator. Reverts if item is not a list.     * @param self The RLP item.     * @return An 'Iterator' over the item.     */"
    },
    {
      "action": "insert-tree",
      "tree": "function_definition [38011,38232]",
      "parent": "contract_body [36276,46919]",
      "at": 15
    },
    {
      "action": "insert-node",
      "tree": "comment: /*     * @param the RLP item.     */ [38240,38278]",
      "parent": "contract_body [36276,46919]",
      "at": 16
    },
    {
      "action": "insert-tree",
      "tree": "function_definition [38284,38384]",
      "parent": "contract_body [36276,46919]",
      "at": 17
    },
    {
      "action": "insert-node",
      "tree": "comment: /*      * @param the RLP item.      * @return (memPtr, len) pair: location of the item's payload in memory.      */ [38392,38510]",
      "parent": "contract_body [36276,46919]",
      "at": 18
    },
    {
      "action": "insert-node",
      "tree": "function_definition [38516,38787]",
      "parent": "contract_body [36276,46919]",
      "at": 19
    },
    {
      "action": "insert-node",
      "tree": "comment: /*     * @param the RLP item.     */ [38795,38833]",
      "parent": "contract_body [36276,46919]",
      "at": 20
    },
    {
      "action": "insert-node",
      "tree": "function_definition [38839,38985]",
      "parent": "contract_body [36276,46919]",
      "at": 21
    },
    {
      "action": "insert-node",
      "tree": "comment: /*     * @param the RLP item containing the encoded list.     */ [38993,39059]",
      "parent": "contract_body [36276,46919]",
      "at": 22
    },
    {
      "action": "insert-node",
      "tree": "comment: /*      * @dev A cheaper version of keccak256(toRlpBytes(item)) that avoids copying memory.      * @return keccak256 hash of RLP encoded bytes.      */ [40045,40199]",
      "parent": "contract_body [36276,46919]",
      "at": 26
    },
    {
      "action": "insert-node",
      "tree": "function_definition [40205,40485]",
      "parent": "contract_body [36276,46919]",
      "at": 27
    },
    {
      "action": "insert-node",
      "tree": "comment: /*      * @dev A cheaper version of keccak256(toBytes(item)) that avoids copying memory.      * @return keccak256 hash of the item payload.      */ [40493,40643]",
      "parent": "contract_body [36276,46919]",
      "at": 28
    },
    {
      "action": "insert-node",
      "tree": "function_definition [40649,40920]",
      "parent": "contract_body [36276,46919]",
      "at": 29
    },
    {
      "action": "insert-node",
      "tree": "comment: // any non-zero byte except \"0x80\" is considered true [41383,41436]",
      "parent": "contract_body [36276,46919]",
      "at": 33
    },
    {
      "action": "insert-node",
      "tree": "function_definition [41442,42040]",
      "parent": "contract_body [36276,46919]",
      "at": 34
    },
    {
      "action": "insert-node",
      "tree": "comment: /*     * Private Helpers     */ [43462,43495]",
      "parent": "contract_body [36276,46919]",
      "at": 40
    },
    {
      "action": "insert-node",
      "tree": "comment: /*     * @param src Pointer to source     * @param dest Pointer to destination     * @param len Amount of memory to copy from the source     */ [45983,46130]",
      "parent": "contract_body [36276,46919]",
      "at": 47
    },
    {
      "action": "insert-tree",
      "tree": "using_directive [48977,49004]",
      "parent": "contract_body [48894,52393]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "function: function [3790,3798]",
      "parent": "function_definition [3790,3971]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: add [3799,3802]",
      "parent": "function_definition [3790,3971]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [3802,3803]",
      "parent": "function_definition [3790,3971]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "parameter [3803,3812]",
      "parent": "function_definition [3790,3971]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": ",: , [3812,3813]",
      "parent": "function_definition [3790,3971]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "parameter [3814,3823]",
      "parent": "function_definition [3790,3971]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": "): ) [3823,3824]",
      "parent": "function_definition [3790,3971]",
      "at": 6
    },
    {
      "action": "insert-tree",
      "tree": "visibility [3825,3833]",
      "parent": "function_definition [3790,3971]",
      "at": 7
    },
    {
      "action": "insert-tree",
      "tree": "state_mutability [3834,3838]",
      "parent": "function_definition [3790,3971]",
      "at": 8
    },
    {
      "action": "insert-tree",
      "tree": "return_type_definition [3839,3856]",
      "parent": "function_definition [3790,3971]",
      "at": 9
    },
    {
      "action": "insert-node",
      "tree": "function_body [3857,3971]",
      "parent": "function_definition [3790,3971]",
      "at": 10
    },
    {
      "action": "insert-node",
      "tree": "function: function [4254,4262]",
      "parent": "function_definition [4254,4390]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: sub [4263,4266]",
      "parent": "function_definition [4254,4390]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [4266,4267]",
      "parent": "function_definition [4254,4390]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "parameter [4267,4276]",
      "parent": "function_definition [4254,4390]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": ",: , [4276,4277]",
      "parent": "function_definition [4254,4390]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "parameter [4278,4287]",
      "parent": "function_definition [4254,4390]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": "): ) [4287,4288]",
      "parent": "function_definition [4254,4390]",
      "at": 6
    },
    {
      "action": "insert-tree",
      "tree": "visibility [4289,4297]",
      "parent": "function_definition [4254,4390]",
      "at": 7
    },
    {
      "action": "insert-tree",
      "tree": "state_mutability [4298,4302]",
      "parent": "function_definition [4254,4390]",
      "at": 8
    },
    {
      "action": "insert-tree",
      "tree": "return_type_definition [4303,4320]",
      "parent": "function_definition [4254,4390]",
      "at": 9
    },
    {
      "action": "insert-node",
      "tree": "function_body [4321,4390]",
      "parent": "function_definition [4254,4390]",
      "at": 10
    },
    {
      "action": "insert-node",
      "tree": "function: function [4693,4701]",
      "parent": "function_definition [4693,4885]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: sub [4702,4705]",
      "parent": "function_definition [4693,4885]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [4705,4706]",
      "parent": "function_definition [4693,4885]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "parameter [4706,4715]",
      "parent": "function_definition [4693,4885]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": ",: , [4715,4716]",
      "parent": "function_definition [4693,4885]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "parameter [4717,4726]",
      "parent": "function_definition [4693,4885]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": ",: , [4726,4727]",
      "parent": "function_definition [4693,4885]",
      "at": 6
    },
    {
      "action": "insert-tree",
      "tree": "parameter [4728,4754]",
      "parent": "function_definition [4693,4885]",
      "at": 7
    },
    {
      "action": "insert-node",
      "tree": "): ) [4754,4755]",
      "parent": "function_definition [4693,4885]",
      "at": 8
    },
    {
      "action": "insert-tree",
      "tree": "visibility [4756,4764]",
      "parent": "function_definition [4693,4885]",
      "at": 9
    },
    {
      "action": "insert-tree",
      "tree": "state_mutability [4765,4769]",
      "parent": "function_definition [4693,4885]",
      "at": 10
    },
    {
      "action": "insert-tree",
      "tree": "return_type_definition [4770,4787]",
      "parent": "function_definition [4693,4885]",
      "at": 11
    },
    {
      "action": "insert-node",
      "tree": "function_body [4788,4885]",
      "parent": "function_definition [4693,4885]",
      "at": 12
    },
    {
      "action": "insert-node",
      "tree": "function: function [5144,5152]",
      "parent": "function_definition [5144,5615]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: mul [5153,5156]",
      "parent": "function_definition [5144,5615]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [5156,5157]",
      "parent": "function_definition [5144,5615]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "parameter [5157,5166]",
      "parent": "function_definition [5144,5615]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": ",: , [5166,5167]",
      "parent": "function_definition [5144,5615]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "parameter [5168,5177]",
      "parent": "function_definition [5144,5615]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": "): ) [5177,5178]",
      "parent": "function_definition [5144,5615]",
      "at": 6
    },
    {
      "action": "insert-tree",
      "tree": "visibility [5179,5187]",
      "parent": "function_definition [5144,5615]",
      "at": 7
    },
    {
      "action": "insert-tree",
      "tree": "state_mutability [5188,5192]",
      "parent": "function_definition [5144,5615]",
      "at": 8
    },
    {
      "action": "move-tree",
      "tree": "return_type_definition [33856,33873]",
      "parent": "function_definition [5144,5615]",
      "at": 9
    },
    {
      "action": "insert-node",
      "tree": "function_body [5211,5615]",
      "parent": "function_definition [5144,5615]",
      "at": 10
    },
    {
      "action": "insert-node",
      "tree": "function: function [6091,6099]",
      "parent": "function_definition [6091,6223]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: div [6100,6103]",
      "parent": "function_definition [6091,6223]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [6103,6104]",
      "parent": "function_definition [6091,6223]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "parameter [6104,6113]",
      "parent": "function_definition [6091,6223]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": ",: , [6113,6114]",
      "parent": "function_definition [6091,6223]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "parameter [6115,6124]",
      "parent": "function_definition [6091,6223]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": "): ) [6124,6125]",
      "parent": "function_definition [6091,6223]",
      "at": 6
    },
    {
      "action": "insert-tree",
      "tree": "visibility [6126,6134]",
      "parent": "function_definition [6091,6223]",
      "at": 7
    },
    {
      "action": "insert-tree",
      "tree": "state_mutability [6135,6139]",
      "parent": "function_definition [6091,6223]",
      "at": 8
    },
    {
      "action": "move-tree",
      "tree": "return_type_definition [32523,32540]",
      "parent": "function_definition [6091,6223]",
      "at": 9
    },
    {
      "action": "insert-node",
      "tree": "function_body [6158,6223]",
      "parent": "function_definition [6091,6223]",
      "at": 10
    },
    {
      "action": "insert-node",
      "tree": "function: function [6719,6727]",
      "parent": "function_definition [6719,6997]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: div [6728,6731]",
      "parent": "function_definition [6719,6997]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [6731,6732]",
      "parent": "function_definition [6719,6997]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "parameter [6732,6741]",
      "parent": "function_definition [6719,6997]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": ",: , [6741,6742]",
      "parent": "function_definition [6719,6997]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "parameter [6743,6752]",
      "parent": "function_definition [6719,6997]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": ",: , [6752,6753]",
      "parent": "function_definition [6719,6997]",
      "at": 6
    },
    {
      "action": "insert-tree",
      "tree": "parameter [6754,6780]",
      "parent": "function_definition [6719,6997]",
      "at": 7
    },
    {
      "action": "insert-node",
      "tree": "): ) [6780,6781]",
      "parent": "function_definition [6719,6997]",
      "at": 8
    },
    {
      "action": "insert-tree",
      "tree": "visibility [6782,6790]",
      "parent": "function_definition [6719,6997]",
      "at": 9
    },
    {
      "action": "insert-tree",
      "tree": "state_mutability [6791,6795]",
      "parent": "function_definition [6719,6997]",
      "at": 10
    },
    {
      "action": "move-tree",
      "tree": "return_type_definition [31813,31830]",
      "parent": "function_definition [6719,6997]",
      "at": 11
    },
    {
      "action": "insert-node",
      "tree": "function_body [6814,6997]",
      "parent": "function_definition [6719,6997]",
      "at": 12
    },
    {
      "action": "insert-node",
      "tree": "function: function [7462,7470]",
      "parent": "function_definition [7462,7592]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: mod [7471,7474]",
      "parent": "function_definition [7462,7592]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [7474,7475]",
      "parent": "function_definition [7462,7592]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "parameter [7475,7484]",
      "parent": "function_definition [7462,7592]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": ",: , [7484,7485]",
      "parent": "function_definition [7462,7592]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "parameter [7486,7495]",
      "parent": "function_definition [7462,7592]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": "): ) [7495,7496]",
      "parent": "function_definition [7462,7592]",
      "at": 6
    },
    {
      "action": "insert-tree",
      "tree": "visibility [7497,7505]",
      "parent": "function_definition [7462,7592]",
      "at": 7
    },
    {
      "action": "insert-tree",
      "tree": "state_mutability [7506,7510]",
      "parent": "function_definition [7462,7592]",
      "at": 8
    },
    {
      "action": "move-tree",
      "tree": "return_type_definition [29795,29812]",
      "parent": "function_definition [7462,7592]",
      "at": 9
    },
    {
      "action": "insert-node",
      "tree": "function_body [7529,7592]",
      "parent": "function_definition [7462,7592]",
      "at": 10
    },
    {
      "action": "insert-node",
      "tree": "function: function [8077,8085]",
      "parent": "function_definition [8077,8243]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: mod [8086,8089]",
      "parent": "function_definition [8077,8243]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [8089,8090]",
      "parent": "function_definition [8077,8243]",
      "at": 2
    },
    {
      "action": "move-tree",
      "tree": "parameter [34562,34573]",
      "parent": "function_definition [8077,8243]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": ",: , [8099,8100]",
      "parent": "function_definition [8077,8243]",
      "at": 4
    },
    {
      "action": "move-tree",
      "tree": "parameter [34584,34596]",
      "parent": "function_definition [8077,8243]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": ",: , [8110,8111]",
      "parent": "function_definition [8077,8243]",
      "at": 6
    },
    {
      "action": "insert-tree",
      "tree": "parameter [8112,8138]",
      "parent": "function_definition [8077,8243]",
      "at": 7
    },
    {
      "action": "insert-node",
      "tree": "): ) [8138,8139]",
      "parent": "function_definition [8077,8243]",
      "at": 8
    },
    {
      "action": "insert-tree",
      "tree": "visibility [8140,8148]",
      "parent": "function_definition [8077,8243]",
      "at": 9
    },
    {
      "action": "insert-tree",
      "tree": "state_mutability [8149,8153]",
      "parent": "function_definition [8077,8243]",
      "at": 10
    },
    {
      "action": "move-tree",
      "tree": "return_type_definition [30633,30650]",
      "parent": "function_definition [8077,8243]",
      "at": 11
    },
    {
      "action": "insert-tree",
      "tree": "function_body [8172,8243]",
      "parent": "function_definition [8077,8243]",
      "at": 12
    },
    {
      "action": "insert-node",
      "tree": "using: using [15147,15152]",
      "parent": "using_directive [15147,15174]",
      "at": 0
    },
    {
      "action": "insert-tree",
      "tree": "type_alias [15153,15161]",
      "parent": "using_directive [15147,15174]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "for: for [15162,15165]",
      "parent": "using_directive [15147,15174]",
      "at": 2
    },
    {
      "action": "move-tree",
      "tree": "type_name [27351,27358]",
      "parent": "using_directive [15147,15174]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "function: function [15214,15222]",
      "parent": "function_definition [15214,15391]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: safeTransfer [15223,15235]",
      "parent": "function_definition [15214,15391]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [15235,15236]",
      "parent": "function_definition [15214,15391]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "parameter [15236,15248]",
      "parent": "function_definition [15214,15391]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": ",: , [15248,15249]",
      "parent": "function_definition [15214,15391]",
      "at": 4
    },
    {
      "action": "insert-tree",
      "tree": "parameter [15250,15260]",
      "parent": "function_definition [15214,15391]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": ",: , [15260,15261]",
      "parent": "function_definition [15214,15391]",
      "at": 6
    },
    {
      "action": "insert-node",
      "tree": "parameter [15262,15275]",
      "parent": "function_definition [15214,15391]",
      "at": 7
    },
    {
      "action": "insert-node",
      "tree": "): ) [15275,15276]",
      "parent": "function_definition [15214,15391]",
      "at": 8
    },
    {
      "action": "insert-tree",
      "tree": "visibility [15277,15285]",
      "parent": "function_definition [15214,15391]",
      "at": 9
    },
    {
      "action": "insert-node",
      "tree": "function_body [15286,15391]",
      "parent": "function_definition [15214,15391]",
      "at": 10
    },
    {
      "action": "insert-node",
      "tree": "function: function [15399,15407]",
      "parent": "function_definition [15399,15604]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: safeTransferFrom [15408,15424]",
      "parent": "function_definition [15399,15604]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [15424,15425]",
      "parent": "function_definition [15399,15604]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "parameter [15425,15437]",
      "parent": "function_definition [15399,15604]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": ",: , [15437,15438]",
      "parent": "function_definition [15399,15604]",
      "at": 4
    },
    {
      "action": "insert-tree",
      "tree": "parameter [15439,15451]",
      "parent": "function_definition [15399,15604]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": ",: , [15451,15452]",
      "parent": "function_definition [15399,15604]",
      "at": 6
    },
    {
      "action": "insert-tree",
      "tree": "parameter [15453,15463]",
      "parent": "function_definition [15399,15604]",
      "at": 7
    },
    {
      "action": "insert-node",
      "tree": ",: , [15463,15464]",
      "parent": "function_definition [15399,15604]",
      "at": 8
    },
    {
      "action": "insert-node",
      "tree": "parameter [15465,15478]",
      "parent": "function_definition [15399,15604]",
      "at": 9
    },
    {
      "action": "insert-node",
      "tree": "): ) [15478,15479]",
      "parent": "function_definition [15399,15604]",
      "at": 10
    },
    {
      "action": "insert-tree",
      "tree": "visibility [15480,15488]",
      "parent": "function_definition [15399,15604]",
      "at": 11
    },
    {
      "action": "insert-tree",
      "tree": "function_body [15489,15604]",
      "parent": "function_definition [15399,15604]",
      "at": 12
    },
    {
      "action": "insert-node",
      "tree": "function: function [15873,15881]",
      "parent": "function_definition [15873,16495]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: safeApprove [15882,15893]",
      "parent": "function_definition [15873,16495]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [15893,15894]",
      "parent": "function_definition [15873,16495]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "parameter [15894,15906]",
      "parent": "function_definition [15873,16495]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": ",: , [15906,15907]",
      "parent": "function_definition [15873,16495]",
      "at": 4
    },
    {
      "action": "insert-tree",
      "tree": "parameter [15908,15923]",
      "parent": "function_definition [15873,16495]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": ",: , [15923,15924]",
      "parent": "function_definition [15873,16495]",
      "at": 6
    },
    {
      "action": "move-tree",
      "tree": "parameter [34607,34618]",
      "parent": "function_definition [15873,16495]",
      "at": 7
    },
    {
      "action": "insert-node",
      "tree": "): ) [15938,15939]",
      "parent": "function_definition [15873,16495]",
      "at": 8
    },
    {
      "action": "insert-tree",
      "tree": "visibility [15940,15948]",
      "parent": "function_definition [15873,16495]",
      "at": 9
    },
    {
      "action": "insert-node",
      "tree": "function_body [15949,16495]",
      "parent": "function_definition [15873,16495]",
      "at": 10
    },
    {
      "action": "insert-node",
      "tree": "function: function [16503,16511]",
      "parent": "function_definition [16503,16789]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: safeIncreaseAllowance [16512,16533]",
      "parent": "function_definition [16503,16789]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [16533,16534]",
      "parent": "function_definition [16503,16789]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "parameter [16534,16546]",
      "parent": "function_definition [16503,16789]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": ",: , [16546,16547]",
      "parent": "function_definition [16503,16789]",
      "at": 4
    },
    {
      "action": "insert-tree",
      "tree": "parameter [16548,16563]",
      "parent": "function_definition [16503,16789]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": ",: , [16563,16564]",
      "parent": "function_definition [16503,16789]",
      "at": 6
    },
    {
      "action": "move-tree",
      "tree": "parameter [33827,33841]",
      "parent": "function_definition [16503,16789]",
      "at": 7
    },
    {
      "action": "insert-node",
      "tree": "): ) [16578,16579]",
      "parent": "function_definition [16503,16789]",
      "at": 8
    },
    {
      "action": "insert-tree",
      "tree": "visibility [16580,16588]",
      "parent": "function_definition [16503,16789]",
      "at": 9
    },
    {
      "action": "insert-node",
      "tree": "function_body [16589,16789]",
      "parent": "function_definition [16503,16789]",
      "at": 10
    },
    {
      "action": "insert-node",
      "tree": "function: function [16797,16805]",
      "parent": "function_definition [16797,17128]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: safeDecreaseAllowance [16806,16827]",
      "parent": "function_definition [16797,17128]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [16827,16828]",
      "parent": "function_definition [16797,17128]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "parameter [16828,16840]",
      "parent": "function_definition [16797,17128]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": ",: , [16840,16841]",
      "parent": "function_definition [16797,17128]",
      "at": 4
    },
    {
      "action": "insert-tree",
      "tree": "parameter [16842,16857]",
      "parent": "function_definition [16797,17128]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": ",: , [16857,16858]",
      "parent": "function_definition [16797,17128]",
      "at": 6
    },
    {
      "action": "move-tree",
      "tree": "parameter [32494,32508]",
      "parent": "function_definition [16797,17128]",
      "at": 7
    },
    {
      "action": "insert-node",
      "tree": "): ) [16872,16873]",
      "parent": "function_definition [16797,17128]",
      "at": 8
    },
    {
      "action": "insert-tree",
      "tree": "visibility [16874,16882]",
      "parent": "function_definition [16797,17128]",
      "at": 9
    },
    {
      "action": "insert-node",
      "tree": "function_body [16883,17128]",
      "parent": "function_definition [16797,17128]",
      "at": 10
    },
    {
      "action": "insert-node",
      "tree": "function: function [17519,17527]",
      "parent": "function_definition [17519,18280]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: _callOptionalReturn [17528,17547]",
      "parent": "function_definition [17519,18280]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [17547,17548]",
      "parent": "function_definition [17519,18280]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "parameter [17548,17560]",
      "parent": "function_definition [17519,18280]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": ",: , [17560,17561]",
      "parent": "function_definition [17519,18280]",
      "at": 4
    },
    {
      "action": "insert-tree",
      "tree": "parameter [17562,17579]",
      "parent": "function_definition [17519,18280]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": "): ) [17579,17580]",
      "parent": "function_definition [17519,18280]",
      "at": 6
    },
    {
      "action": "insert-tree",
      "tree": "visibility [17581,17588]",
      "parent": "function_definition [17519,18280]",
      "at": 7
    },
    {
      "action": "insert-node",
      "tree": "function_body [17589,18280]",
      "parent": "function_definition [17519,18280]",
      "at": 8
    },
    {
      "action": "insert-node",
      "tree": "function: function [37388,37396]",
      "parent": "function_definition [37388,37561]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: hasNext [37397,37404]",
      "parent": "function_definition [37388,37561]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [37404,37405]",
      "parent": "function_definition [37388,37561]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "parameter [37405,37425]",
      "parent": "function_definition [37388,37561]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "): ) [37425,37426]",
      "parent": "function_definition [37388,37561]",
      "at": 4
    },
    {
      "action": "insert-tree",
      "tree": "visibility [37427,37435]",
      "parent": "function_definition [37388,37561]",
      "at": 5
    },
    {
      "action": "insert-tree",
      "tree": "state_mutability [37436,37440]",
      "parent": "function_definition [37388,37561]",
      "at": 6
    },
    {
      "action": "insert-tree",
      "tree": "return_type_definition [37441,37455]",
      "parent": "function_definition [37388,37561]",
      "at": 7
    },
    {
      "action": "insert-node",
      "tree": "function_body [37456,37561]",
      "parent": "function_definition [37388,37561]",
      "at": 8
    },
    {
      "action": "insert-node",
      "tree": "function: function [38516,38524]",
      "parent": "function_definition [38516,38787]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: payloadLocation [38525,38540]",
      "parent": "function_definition [38516,38787]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [38540,38541]",
      "parent": "function_definition [38516,38787]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "parameter [38541,38560]",
      "parent": "function_definition [38516,38787]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "): ) [38560,38561]",
      "parent": "function_definition [38516,38787]",
      "at": 4
    },
    {
      "action": "insert-tree",
      "tree": "visibility [38562,38570]",
      "parent": "function_definition [38516,38787]",
      "at": 5
    },
    {
      "action": "insert-tree",
      "tree": "state_mutability [38571,38575]",
      "parent": "function_definition [38516,38787]",
      "at": 6
    },
    {
      "action": "insert-tree",
      "tree": "return_type_definition [38576,38596]",
      "parent": "function_definition [38516,38787]",
      "at": 7
    },
    {
      "action": "insert-node",
      "tree": "function_body [38597,38787]",
      "parent": "function_definition [38516,38787]",
      "at": 8
    },
    {
      "action": "insert-node",
      "tree": "function: function [38839,38847]",
      "parent": "function_definition [38839,38985]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: payloadLen [38848,38858]",
      "parent": "function_definition [38839,38985]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [38858,38859]",
      "parent": "function_definition [38839,38985]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "parameter [38859,38878]",
      "parent": "function_definition [38839,38985]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "): ) [38878,38879]",
      "parent": "function_definition [38839,38985]",
      "at": 4
    },
    {
      "action": "insert-tree",
      "tree": "visibility [38880,38888]",
      "parent": "function_definition [38839,38985]",
      "at": 5
    },
    {
      "action": "insert-tree",
      "tree": "state_mutability [38889,38893]",
      "parent": "function_definition [38839,38985]",
      "at": 6
    },
    {
      "action": "insert-tree",
      "tree": "return_type_definition [38894,38908]",
      "parent": "function_definition [38839,38985]",
      "at": 7
    },
    {
      "action": "insert-node",
      "tree": "function_body [38909,38985]",
      "parent": "function_definition [38839,38985]",
      "at": 8
    },
    {
      "action": "insert-node",
      "tree": "function: function [40205,40213]",
      "parent": "function_definition [40205,40485]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: rlpBytesKeccak256 [40214,40231]",
      "parent": "function_definition [40205,40485]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [40231,40232]",
      "parent": "function_definition [40205,40485]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "parameter [40232,40251]",
      "parent": "function_definition [40205,40485]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "): ) [40251,40252]",
      "parent": "function_definition [40205,40485]",
      "at": 4
    },
    {
      "action": "insert-tree",
      "tree": "visibility [40253,40261]",
      "parent": "function_definition [40205,40485]",
      "at": 5
    },
    {
      "action": "insert-tree",
      "tree": "state_mutability [40262,40266]",
      "parent": "function_definition [40205,40485]",
      "at": 6
    },
    {
      "action": "insert-tree",
      "tree": "return_type_definition [40267,40284]",
      "parent": "function_definition [40205,40485]",
      "at": 7
    },
    {
      "action": "insert-node",
      "tree": "function_body [40285,40485]",
      "parent": "function_definition [40205,40485]",
      "at": 8
    },
    {
      "action": "insert-node",
      "tree": "function: function [40649,40657]",
      "parent": "function_definition [40649,40920]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: payloadKeccak256 [40658,40674]",
      "parent": "function_definition [40649,40920]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [40674,40675]",
      "parent": "function_definition [40649,40920]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "parameter [40675,40694]",
      "parent": "function_definition [40649,40920]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "): ) [40694,40695]",
      "parent": "function_definition [40649,40920]",
      "at": 4
    },
    {
      "action": "insert-tree",
      "tree": "visibility [40696,40704]",
      "parent": "function_definition [40649,40920]",
      "at": 5
    },
    {
      "action": "insert-tree",
      "tree": "state_mutability [40705,40709]",
      "parent": "function_definition [40649,40920]",
      "at": 6
    },
    {
      "action": "insert-tree",
      "tree": "return_type_definition [40710,40727]",
      "parent": "function_definition [40649,40920]",
      "at": 7
    },
    {
      "action": "insert-node",
      "tree": "function_body [40728,40920]",
      "parent": "function_definition [40649,40920]",
      "at": 8
    },
    {
      "action": "insert-node",
      "tree": "function: function [41442,41450]",
      "parent": "function_definition [41442,42040]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: toBoolean [41451,41460]",
      "parent": "function_definition [41442,42040]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [41460,41461]",
      "parent": "function_definition [41442,42040]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "parameter [41461,41480]",
      "parent": "function_definition [41442,42040]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "): ) [41480,41481]",
      "parent": "function_definition [41442,42040]",
      "at": 4
    },
    {
      "action": "insert-tree",
      "tree": "visibility [41482,41490]",
      "parent": "function_definition [41442,42040]",
      "at": 5
    },
    {
      "action": "insert-tree",
      "tree": "state_mutability [41491,41495]",
      "parent": "function_definition [41442,42040]",
      "at": 6
    },
    {
      "action": "insert-tree",
      "tree": "return_type_definition [41496,41510]",
      "parent": "function_definition [41442,42040]",
      "at": 7
    },
    {
      "action": "insert-node",
      "tree": "function_body [41511,42040]",
      "parent": "function_definition [41442,42040]",
      "at": 8
    },
    {
      "action": "insert-tree",
      "tree": "return_type_definition [42303,42317]",
      "parent": "function_definition [42252,42723]",
      "at": 7
    },
    {
      "action": "insert-tree",
      "tree": "return_type_definition [42820,42834]",
      "parent": "function_definition [42763,43063]",
      "at": 7
    },
    {
      "action": "insert-tree",
      "tree": "return_type_definition [43619,43633]",
      "parent": "function_definition [43567,43989]",
      "at": 7
    },
    {
      "action": "insert-tree",
      "tree": "parameter [44062,44073]",
      "parent": "function_definition [44041,45368]",
      "at": 3
    },
    {
      "action": "insert-tree",
      "tree": "return_type_definition [44088,44102]",
      "parent": "function_definition [44041,45368]",
      "at": 7
    },
    {
      "action": "insert-tree",
      "tree": "parameter [45447,45458]",
      "parent": "function_definition [45423,45975]",
      "at": 3
    },
    {
      "action": "insert-tree",
      "tree": "return_type_definition [45473,45487]",
      "parent": "function_definition [45423,45975]",
      "at": 7
    },
    {
      "action": "insert-tree",
      "tree": "parameter [46150,46158]",
      "parent": "function_definition [46136,46916]",
      "at": 3
    },
    {
      "action": "insert-tree",
      "tree": "parameter [46160,46169]",
      "parent": "function_definition [46136,46916]",
      "at": 5
    },
    {
      "action": "insert-tree",
      "tree": "parameter [46171,46179]",
      "parent": "function_definition [46136,46916]",
      "at": 7
    },
    {
      "action": "move-tree",
      "tree": "type_name [30662,30669]",
      "parent": "parameter [3803,3812]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: a [3811,3812]",
      "parent": "parameter [3803,3812]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "type_name [31168,31175]",
      "parent": "parameter [3814,3823]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: b [3822,3823]",
      "parent": "parameter [3814,3823]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "{: { [3857,3858]",
      "parent": "function_body [3857,3971]",
      "at": 0
    },
    {
      "action": "move-tree",
      "tree": "variable_declaration_statement [28352,28368]",
      "parent": "function_body [3857,3971]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "expression_statement [3896,3943]",
      "parent": "function_body [3857,3971]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "return_statement [3955,3964]",
      "parent": "function_body [3857,3971]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "}: } [3970,3971]",
      "parent": "function_body [3857,3971]",
      "at": 4
    },
    {
      "action": "move-tree",
      "tree": "type_name [29963,29970]",
      "parent": "parameter [4267,4276]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: a [4275,4276]",
      "parent": "parameter [4267,4276]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "type_name [32045,32052]",
      "parent": "parameter [4278,4287]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: b [4286,4287]",
      "parent": "parameter [4278,4287]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "{: { [4321,4322]",
      "parent": "function_body [4321,4390]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "return_statement [4332,4383]",
      "parent": "function_body [4321,4390]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "}: } [4389,4390]",
      "parent": "function_body [4321,4390]",
      "at": 2
    },
    {
      "action": "move-tree",
      "tree": "type_name [30106,30113]",
      "parent": "parameter [4706,4715]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: a [4714,4715]",
      "parent": "parameter [4706,4715]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "type_name [30940,30947]",
      "parent": "parameter [4717,4726]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: b [4725,4726]",
      "parent": "parameter [4717,4726]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "{: { [4788,4789]",
      "parent": "function_body [4788,4885]",
      "at": 0
    },
    {
      "action": "insert-tree",
      "tree": "expression_statement [4799,4829]",
      "parent": "function_body [4788,4885]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "variable_declaration_statement [4839,4857]",
      "parent": "function_body [4788,4885]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "return_statement [4869,4878]",
      "parent": "function_body [4788,4885]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "}: } [4884,4885]",
      "parent": "function_body [4788,4885]",
      "at": 4
    },
    {
      "action": "move-tree",
      "tree": "type_name [30228,30235]",
      "parent": "parameter [5157,5166]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: a [5165,5166]",
      "parent": "parameter [5157,5166]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "type_name [31473,31480]",
      "parent": "parameter [5168,5177]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: b [5176,5177]",
      "parent": "parameter [5168,5177]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "{: { [5211,5212]",
      "parent": "function_body [5211,5615]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [5222,5301]",
      "parent": "function_body [5211,5615]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "comment: // benefit is lost if 'b' is also tested. [5311,5352]",
      "parent": "function_body [5211,5615]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "comment: // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522 [5362,5433]",
      "parent": "function_body [5211,5615]",
      "at": 3
    },
    {
      "action": "insert-tree",
      "tree": "if_statement [5443,5490]",
      "parent": "function_body [5211,5615]",
      "at": 4
    },
    {
      "action": "move-tree",
      "tree": "variable_declaration_statement [28140,28186]",
      "parent": "function_body [5211,5615]",
      "at": 5
    },
    {
      "action": "move-tree",
      "tree": "expression_statement [27578,27638]",
      "parent": "function_body [5211,5615]",
      "at": 6
    },
    {
      "action": "insert-tree",
      "tree": "return_statement [5599,5608]",
      "parent": "function_body [5211,5615]",
      "at": 7
    },
    {
      "action": "insert-node",
      "tree": "}: } [5614,5615]",
      "parent": "function_body [5211,5615]",
      "at": 8
    },
    {
      "action": "move-tree",
      "tree": "type_name [30203,30210]",
      "parent": "parameter [6104,6113]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: a [6112,6113]",
      "parent": "parameter [6104,6113]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "type_name [32115,32122]",
      "parent": "parameter [6115,6124]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: b [6123,6124]",
      "parent": "parameter [6115,6124]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "{: { [6158,6159]",
      "parent": "function_body [6158,6223]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "return_statement [6169,6216]",
      "parent": "function_body [6158,6223]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "}: } [6222,6223]",
      "parent": "function_body [6158,6223]",
      "at": 2
    },
    {
      "action": "move-tree",
      "tree": "type_name [32017,32024]",
      "parent": "parameter [6732,6741]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: a [6740,6741]",
      "parent": "parameter [6732,6741]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "type_name [32578,32585]",
      "parent": "parameter [6743,6752]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: b [6751,6752]",
      "parent": "parameter [6743,6752]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "{: { [6814,6815]",
      "parent": "function_body [6814,6997]",
      "at": 0
    },
    {
      "action": "insert-tree",
      "tree": "expression_statement [6825,6854]",
      "parent": "function_body [6814,6997]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "variable_declaration_statement [28800,28829]",
      "parent": "function_body [6814,6997]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "comment: // assert(a == b * c + a % b); // There is no case in which this doesn't hold [6892,6969]",
      "parent": "function_body [6814,6997]",
      "at": 3
    },
    {
      "action": "insert-tree",
      "tree": "return_statement [6981,6990]",
      "parent": "function_body [6814,6997]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "}: } [6996,6997]",
      "parent": "function_body [6814,6997]",
      "at": 5
    },
    {
      "action": "move-tree",
      "tree": "type_name [32552,32559]",
      "parent": "parameter [7475,7484]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: a [7483,7484]",
      "parent": "parameter [7475,7484]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "type_name [33885,33892]",
      "parent": "parameter [7486,7495]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: b [7494,7495]",
      "parent": "parameter [7486,7495]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "{: { [7529,7530]",
      "parent": "function_body [7529,7592]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "return_statement [7540,7585]",
      "parent": "function_body [7529,7592]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "}: } [7591,7592]",
      "parent": "function_body [7529,7592]",
      "at": 2
    },
    {
      "action": "update-node",
      "tree": "identifier: src [34570,34573]",
      "label": "a"
    },
    {
      "action": "update-node",
      "tree": "identifier: dest [34592,34596]",
      "label": "b"
    },
    {
      "action": "move-tree",
      "tree": "type_name [31310,31317]",
      "parent": "parameter [15262,15275]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: value [15270,15275]",
      "parent": "parameter [15262,15275]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "{: { [15286,15287]",
      "parent": "function_body [15286,15391]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "expression_statement [15297,15384]",
      "parent": "function_body [15286,15391]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "}: } [15390,15391]",
      "parent": "function_body [15286,15391]",
      "at": 2
    },
    {
      "action": "move-tree",
      "tree": "type_name [30915,30922]",
      "parent": "parameter [15465,15478]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: value [15473,15478]",
      "parent": "parameter [15465,15478]",
      "at": 1
    },
    {
      "action": "update-node",
      "tree": "identifier: len [34615,34618]",
      "label": "value"
    },
    {
      "action": "insert-node",
      "tree": "{: { [15949,15950]",
      "parent": "function_body [15949,16495]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "comment: // safeApprove should only be called when setting an initial allowance, [15960,16031]",
      "parent": "function_body [15949,16495]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "comment: // or when resetting it to zero. To increase and decrease it, use [16041,16106]",
      "parent": "function_body [15949,16495]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "comment: // 'safeIncreaseAllowance' and 'safeDecreaseAllowance' [16116,16170]",
      "parent": "function_body [15949,16495]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "comment: // solhint-disable-next-line max-line-length [16180,16224]",
      "parent": "function_body [15949,16495]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "expression_statement [16234,16387]",
      "parent": "function_body [15949,16495]",
      "at": 5
    },
    {
      "action": "insert-tree",
      "tree": "expression_statement [16397,16488]",
      "parent": "function_body [15949,16495]",
      "at": 6
    },
    {
      "action": "insert-node",
      "tree": "}: } [16494,16495]",
      "parent": "function_body [15949,16495]",
      "at": 7
    },
    {
      "action": "update-node",
      "tree": "identifier: memPtr [33835,33841]",
      "label": "value"
    },
    {
      "action": "insert-node",
      "tree": "{: { [16589,16590]",
      "parent": "function_body [16589,16789]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "variable_declaration_statement [16600,16674]",
      "parent": "function_body [16589,16789]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "expression_statement [16684,16782]",
      "parent": "function_body [16589,16789]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "}: } [16788,16789]",
      "parent": "function_body [16589,16789]",
      "at": 3
    },
    {
      "action": "update-node",
      "tree": "identifier: memPtr [32502,32508]",
      "label": "value"
    },
    {
      "action": "insert-node",
      "tree": "{: { [16883,16884]",
      "parent": "function_body [16883,17128]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "variable_declaration_statement [16894,17013]",
      "parent": "function_body [16883,17128]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "expression_statement [17023,17121]",
      "parent": "function_body [16883,17128]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "}: } [17127,17128]",
      "parent": "function_body [16883,17128]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "{: { [17589,17590]",
      "parent": "function_body [17589,18280]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "comment: // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since [17600,17708]",
      "parent": "function_body [17589,18280]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "comment: // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that [17718,17825]",
      "parent": "function_body [17589,18280]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "comment: // the target address contains contract code and also asserts for success in the low-level call. [17835,17931]",
      "parent": "function_body [17589,18280]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "variable_declaration_statement [17943,18039]",
      "parent": "function_body [17589,18280]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "if_statement [18049,18273]",
      "parent": "function_body [17589,18280]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": "}: } [18279,18280]",
      "parent": "function_body [17589,18280]",
      "at": 6
    },
    {
      "action": "insert-node",
      "tree": "{: { [37456,37457]",
      "parent": "function_body [37456,37561]",
      "at": 0
    },
    {
      "action": "insert-tree",
      "tree": "variable_declaration_statement [37467,37499]",
      "parent": "function_body [37456,37561]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "return_statement [37509,37554]",
      "parent": "function_body [37456,37561]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "}: } [37560,37561]",
      "parent": "function_body [37456,37561]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "{: { [38597,38598]",
      "parent": "function_body [38597,38787]",
      "at": 0
    },
    {
      "action": "move-tree",
      "tree": "variable_declaration_statement [31310,31355]",
      "parent": "function_body [38597,38787]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "variable_declaration_statement [30228,30266]",
      "parent": "function_body [38597,38787]",
      "at": 2
    },
    {
      "action": "move-tree",
      "tree": "variable_declaration_statement [31367,31399]",
      "parent": "function_body [38597,38787]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "comment: // data length [38735,38749]",
      "parent": "function_body [38597,38787]",
      "at": 4
    },
    {
      "action": "insert-tree",
      "tree": "return_statement [38759,38780]",
      "parent": "function_body [38597,38787]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": "}: } [38786,38787]",
      "parent": "function_body [38597,38787]",
      "at": 6
    },
    {
      "action": "insert-node",
      "tree": "{: { [38909,38910]",
      "parent": "function_body [38909,38985]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "variable_declaration_statement [38920,38957]",
      "parent": "function_body [38909,38985]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "return_statement [38967,38978]",
      "parent": "function_body [38909,38985]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "}: } [38984,38985]",
      "parent": "function_body [38909,38985]",
      "at": 3
    },
    {
      "action": "move-tree",
      "tree": "variable_declaration_statement [32045,32105]",
      "parent": "function_body [39143,39588]",
      "at": 4
    },
    {
      "action": "insert-tree",
      "tree": "variable_declaration_statement [39351,39364]",
      "parent": "function_body [39143,39588]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": "if_statement [39772,39804]",
      "parent": "function_body [39761,40037]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "variable_declaration_statement [39838,39864]",
      "parent": "function_body [39761,40037]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "{: { [40285,40286]",
      "parent": "function_body [40285,40485]",
      "at": 0
    },
    {
      "action": "move-tree",
      "tree": "variable_declaration_statement [29266,29278]",
      "parent": "function_body [40285,40485]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "variable_declaration_statement [40332,40355]",
      "parent": "function_body [40285,40485]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "variable_declaration_statement [40365,40380]",
      "parent": "function_body [40285,40485]",
      "at": 3
    },
    {
      "action": "insert-tree",
      "tree": "assembly_statement [40390,40454]",
      "parent": "function_body [40285,40485]",
      "at": 4
    },
    {
      "action": "insert-tree",
      "tree": "return_statement [40464,40478]",
      "parent": "function_body [40285,40485]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": "}: } [40484,40485]",
      "parent": "function_body [40285,40485]",
      "at": 6
    },
    {
      "action": "insert-node",
      "tree": "{: { [40728,40729]",
      "parent": "function_body [40728,40920]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "variable_declaration_statement [40739,40787]",
      "parent": "function_body [40728,40920]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "variable_declaration_statement [40797,40812]",
      "parent": "function_body [40728,40920]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "assembly_statement [40822,40889]",
      "parent": "function_body [40728,40920]",
      "at": 3
    },
    {
      "action": "insert-tree",
      "tree": "return_statement [40899,40913]",
      "parent": "function_body [40728,40920]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "}: } [40919,40920]",
      "parent": "function_body [40728,40920]",
      "at": 5
    },
    {
      "action": "insert-tree",
      "tree": "if_statement [41163,41201]",
      "parent": "function_body [41100,41375]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "variable_declaration_statement [41221,41230]",
      "parent": "function_body [41100,41375]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "{: { [41511,41512]",
      "parent": "function_body [41511,42040]",
      "at": 0
    },
    {
      "action": "move-tree",
      "tree": "expression_statement [31224,31300]",
      "parent": "function_body [41511,42040]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "variable_declaration_statement [41555,41567]",
      "parent": "function_body [41511,42040]",
      "at": 2
    },
    {
      "action": "move-tree",
      "tree": "variable_declaration_statement [29963,30009]",
      "parent": "function_body [41511,42040]",
      "at": 3
    },
    {
      "action": "insert-tree",
      "tree": "assembly_statement [41613,41680]",
      "parent": "function_body [41511,42040]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "comment: // SEE Github Issue #5. [41692,41715]",
      "parent": "function_body [41511,42040]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": "comment: // Summary: Most commonly used RLP libraries (i.e Geth) will encode [41725,41792]",
      "parent": "function_body [41511,42040]",
      "at": 6
    },
    {
      "action": "insert-node",
      "tree": "comment: // \"0\" as \"0x80\" instead of as \"0\". We handle this edge case explicitly [41802,41873]",
      "parent": "function_body [41511,42040]",
      "at": 7
    },
    {
      "action": "insert-node",
      "tree": "comment: // here. [41883,41891]",
      "parent": "function_body [41511,42040]",
      "at": 8
    },
    {
      "action": "insert-tree",
      "tree": "if_statement [41901,42033]",
      "parent": "function_body [41511,42040]",
      "at": 9
    },
    {
      "action": "insert-node",
      "tree": "}: } [42039,42040]",
      "parent": "function_body [41511,42040]",
      "at": 10
    },
    {
      "action": "move-tree",
      "tree": "expression_statement [28196,28271]",
      "parent": "function_body [42318,42723]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "variable_declaration_statement [42381,42429]",
      "parent": "function_body [42318,42723]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "variable_declaration_statement [42441,42453]",
      "parent": "function_body [42318,42723]",
      "at": 3
    },
    {
      "action": "insert-tree",
      "tree": "variable_declaration_statement [42910,42922]",
      "parent": "function_body [42835,43063]",
      "at": 3
    },
    {
      "action": "move-tree",
      "tree": "expression_statement [30718,30800]",
      "parent": "function_body [43146,43454]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "variable_declaration_statement [43191,43239]",
      "parent": "function_body [43146,43454]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "variable_declaration_statement [43298,43311]",
      "parent": "function_body [43146,43454]",
      "at": 4
    },
    {
      "action": "insert-tree",
      "tree": "if_statement [43645,43673]",
      "parent": "function_body [43634,43989]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "variable_declaration_statement [28283,28342]",
      "parent": "function_body [43634,43989]",
      "at": 5
    },
    {
      "action": "insert-tree",
      "tree": "variable_declaration_statement [44114,44127]",
      "parent": "function_body [44103,45368]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "variable_declaration_statement [44137,44148]",
      "parent": "function_body [44103,45368]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "if_statement [46499,46909]",
      "parent": "function_body [46194,46916]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "comment: // Attempt to perform safe transfer from i.e. check function return value [50389,50462]",
      "parent": "function_body [50230,50608]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "comment: // using low-level call & revert if didn't succeed [50472,50522]",
      "parent": "function_body [50230,50608]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "comment: // Attempt to perform safe transfer i.e. check function return value [52194,52262]",
      "parent": "function_body [51024,52390]",
      "at": 17
    },
    {
      "action": "insert-node",
      "tree": "comment: // using low-level call & revert if didn't succeed [52272,52322]",
      "parent": "function_body [51024,52390]",
      "at": 18
    },
    {
      "action": "insert-node",
      "tree": "=: = [3878,3879]",
      "parent": "variable_declaration_statement [3868,3886]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "binary_expression [3880,3885]",
      "parent": "variable_declaration_statement [3868,3886]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "call_expression [3896,3942]",
      "parent": "expression_statement [3896,3943]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "return: return [4332,4338]",
      "parent": "return_statement [4332,4383]",
      "at": 0
    },
    {
      "action": "move-tree",
      "tree": "call_expression [30019,30093]",
      "parent": "return_statement [4332,4383]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "variable_declaration [28283,28297]",
      "parent": "variable_declaration_statement [4839,4857]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "=: = [4849,4850]",
      "parent": "variable_declaration_statement [4839,4857]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "binary_expression [4851,4856]",
      "parent": "variable_declaration_statement [4839,4857]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "binary_expression [5514,5519]",
      "parent": "variable_declaration_statement [5502,5520]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "return: return [6169,6175]",
      "parent": "return_statement [6169,6216]",
      "at": 0
    },
    {
      "action": "move-tree",
      "tree": "call_expression [29893,29950]",
      "parent": "return_statement [6169,6216]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "binary_expression [6876,6881]",
      "parent": "variable_declaration_statement [6864,6882]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "return: return [7540,7546]",
      "parent": "return_statement [7540,7585]",
      "at": 0
    },
    {
      "action": "move-tree",
      "tree": "call_expression [29824,29882]",
      "parent": "return_statement [7540,7585]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "call_expression [15297,15383]",
      "parent": "expression_statement [15297,15384]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "call_expression [16234,16386]",
      "parent": "expression_statement [16234,16387]",
      "at": 0
    },
    {
      "action": "move-tree",
      "tree": "variable_declaration [28042,28055]",
      "parent": "variable_declaration_statement [16600,16674]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "=: = [16621,16622]",
      "parent": "variable_declaration_statement [16600,16674]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "call_expression [16623,16673]",
      "parent": "variable_declaration_statement [16600,16674]",
      "at": 2
    },
    {
      "action": "move-tree",
      "tree": "variable_declaration [27648,27662]",
      "parent": "variable_declaration_statement [16894,17013]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "=: = [16915,16916]",
      "parent": "variable_declaration_statement [16894,17013]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "call_expression [16917,17012]",
      "parent": "variable_declaration_statement [16894,17013]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "variable_declaration [17943,17966]",
      "parent": "variable_declaration_statement [17943,18039]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "=: = [17967,17968]",
      "parent": "variable_declaration_statement [17943,18039]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "call_expression [17969,18038]",
      "parent": "variable_declaration_statement [17943,18039]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "if: if [18049,18051]",
      "parent": "if_statement [18049,18273]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "(: ( [18052,18053]",
      "parent": "if_statement [18049,18273]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "binary_expression [18053,18074]",
      "parent": "if_statement [18049,18273]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "): ) [18074,18075]",
      "parent": "if_statement [18049,18273]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "block_statement [18076,18273]",
      "parent": "if_statement [18049,18273]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "return: return [37509,37515]",
      "parent": "return_statement [37509,37554]",
      "at": 0
    },
    {
      "action": "move-tree",
      "tree": "binary_expression [30027,30049]",
      "parent": "return_statement [37509,37554]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "variable_declaration [37710,37721]",
      "parent": "variable_declaration_statement [37710,37722]",
      "at": 0
    },
    {
      "action": "insert-tree",
      "tree": "variable_declaration [38705,38713]",
      "parent": "variable_declaration_statement [38705,38734]",
      "at": 0
    },
    {
      "action": "insert-tree",
      "tree": "variable_declaration_tuple [38920,38932]",
      "parent": "variable_declaration_statement [38920,38957]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "=: = [38933,38934]",
      "parent": "variable_declaration_statement [38920,38957]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "call_expression [29833,29845]",
      "parent": "variable_declaration_statement [38920,38957]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "variable_declaration [39188,39198]",
      "parent": "variable_declaration_statement [39188,39216]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "if: if [39772,39774]",
      "parent": "if_statement [39772,39804]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "(: ( [39775,39776]",
      "parent": "if_statement [39772,39804]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "binary_expression [29901,29915]",
      "parent": "if_statement [39772,39804]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "): ) [39789,39790]",
      "parent": "if_statement [39772,39804]",
      "at": 3
    },
    {
      "action": "insert-tree",
      "tree": "return_statement [39791,39804]",
      "parent": "if_statement [39772,39804]",
      "at": 4
    },
    {
      "action": "insert-tree",
      "tree": "variable_declaration [39838,39849]",
      "parent": "variable_declaration_statement [39838,39864]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "=: = [39850,39851]",
      "parent": "variable_declaration_statement [39838,39864]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "member_expression [28817,28828]",
      "parent": "variable_declaration_statement [39838,39864]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "=: = [40308,40309]",
      "parent": "variable_declaration_statement [40296,40322]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "member_expression [31201,31212]",
      "parent": "variable_declaration_statement [40296,40322]",
      "at": 2
    },
    {
      "action": "move-tree",
      "tree": "variable_declaration [31367,31378]",
      "parent": "variable_declaration_statement [40332,40355]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "=: = [40344,40345]",
      "parent": "variable_declaration_statement [40332,40355]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "member_expression [40346,40354]",
      "parent": "variable_declaration_statement [40332,40355]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "variable_declaration_tuple [40739,40762]",
      "parent": "variable_declaration_statement [40739,40787]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "=: = [40763,40764]",
      "parent": "variable_declaration_statement [40739,40787]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "call_expression [29523,29535]",
      "parent": "variable_declaration_statement [40739,40787]",
      "at": 2
    },
    {
      "action": "move-tree",
      "tree": "member_expression [29996,30007]",
      "parent": "variable_declaration_statement [41577,41603]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "variable_declaration [43710,43722]",
      "parent": "variable_declaration_statement [43710,43767]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "if: if [46499,46501]",
      "parent": "if_statement [46499,46909]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "(: ( [46502,46503]",
      "parent": "if_statement [46499,46909]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "binary_expression [46503,46510]",
      "parent": "if_statement [46499,46909]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "): ) [46510,46511]",
      "parent": "if_statement [46499,46909]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "block_statement [46512,46909]",
      "parent": "if_statement [46499,46909]",
      "at": 4
    },
    {
      "action": "update-node",
      "tree": "identifier: dataLen [28360,28367]",
      "label": "c"
    },
    {
      "action": "insert-node",
      "tree": "identifier: require [3896,3903]",
      "parent": "call_expression [3896,3942]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "(: ( [3903,3904]",
      "parent": "call_expression [3896,3942]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "call_argument [3904,3910]",
      "parent": "call_expression [3896,3942]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": ",: , [3910,3911]",
      "parent": "call_expression [3896,3942]",
      "at": 3
    },
    {
      "action": "move-tree",
      "tree": "call_argument [28002,28028]",
      "parent": "call_expression [3896,3942]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "): ) [3941,3942]",
      "parent": "call_expression [3896,3942]",
      "at": 5
    },
    {
      "action": "update-node",
      "tree": "identifier: require [30019,30026]",
      "label": "sub"
    },
    {
      "action": "insert-tree",
      "tree": "call_argument [4343,4344]",
      "parent": "call_expression [4339,4382]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "call_argument [4346,4347]",
      "parent": "call_expression [4339,4382]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": ",: , [4347,4348]",
      "parent": "call_expression [4339,4382]",
      "at": 5
    },
    {
      "action": "update-node",
      "tree": "identifier: memPtr [28291,28297]",
      "label": "c"
    },
    {
      "action": "update-node",
      "tree": "identifier: listLength [28148,28158]",
      "label": "c"
    },
    {
      "action": "update-node",
      "tree": "identifier: require [29893,29900]",
      "label": "div"
    },
    {
      "action": "insert-tree",
      "tree": "call_argument [6180,6181]",
      "parent": "call_expression [6176,6215]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "call_argument [6183,6184]",
      "parent": "call_expression [6176,6215]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": ",: , [6184,6185]",
      "parent": "call_expression [6176,6215]",
      "at": 5
    },
    {
      "action": "update-node",
      "tree": "identifier: memPtr [28808,28814]",
      "label": "c"
    },
    {
      "action": "update-node",
      "tree": "identifier: require [29824,29831]",
      "label": "mod"
    },
    {
      "action": "insert-tree",
      "tree": "call_argument [7551,7552]",
      "parent": "call_expression [7547,7584]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "call_argument [7554,7555]",
      "parent": "call_expression [7547,7584]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": ",: , [7555,7556]",
      "parent": "call_expression [7547,7584]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": "identifier: _callOptionalReturn [15297,15316]",
      "parent": "call_expression [15297,15383]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "(: ( [15316,15317]",
      "parent": "call_expression [15297,15383]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "call_argument [15317,15322]",
      "parent": "call_expression [15297,15383]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": ",: , [15322,15323]",
      "parent": "call_expression [15297,15383]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "call_argument [15324,15382]",
      "parent": "call_expression [15297,15383]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "): ) [15382,15383]",
      "parent": "call_expression [15297,15383]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": "identifier: require [16234,16241]",
      "parent": "call_expression [16234,16386]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "(: ( [16241,16242]",
      "parent": "call_expression [16234,16386]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "call_argument [16242,16304]",
      "parent": "call_expression [16234,16386]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": ",: , [16304,16305]",
      "parent": "call_expression [16234,16386]",
      "at": 3
    },
    {
      "action": "move-tree",
      "tree": "call_argument [28228,28269]",
      "parent": "call_expression [16234,16386]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "): ) [16385,16386]",
      "parent": "call_expression [16234,16386]",
      "at": 5
    },
    {
      "action": "update-node",
      "tree": "identifier: items [28050,28055]",
      "label": "newAllowance"
    },
    {
      "action": "update-node",
      "tree": "identifier: memPtr [27656,27662]",
      "label": "newAllowance"
    },
    {
      "action": "insert-tree",
      "tree": "member_expression [16917,16960]",
      "parent": "call_expression [16917,17012]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "(: ( [16960,16961]",
      "parent": "call_expression [16917,17012]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "call_argument [16961,16966]",
      "parent": "call_expression [16917,17012]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": ",: , [16966,16967]",
      "parent": "call_expression [16917,17012]",
      "at": 3
    },
    {
      "action": "move-tree",
      "tree": "call_argument [29537,29574]",
      "parent": "call_expression [16917,17012]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "): ) [17011,17012]",
      "parent": "call_expression [16917,17012]",
      "at": 5
    },
    {
      "action": "insert-tree",
      "tree": "member_expression [17969,17996]",
      "parent": "call_expression [17969,18038]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "(: ( [17996,17997]",
      "parent": "call_expression [17969,18038]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "call_argument [17997,18001]",
      "parent": "call_expression [17969,18038]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": ",: , [18001,18002]",
      "parent": "call_expression [17969,18038]",
      "at": 3
    },
    {
      "action": "move-tree",
      "tree": "call_argument [29651,29686]",
      "parent": "call_expression [17969,18038]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "): ) [18037,18038]",
      "parent": "call_expression [17969,18038]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": "{: { [18076,18077]",
      "parent": "block_statement [18076,18273]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "comment: // Return data is optional [18078,18104]",
      "parent": "block_statement [18076,18273]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "comment: // solhint-disable-next-line max-line-length [18118,18162]",
      "parent": "block_statement [18076,18273]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "expression_statement [18176,18262]",
      "parent": "block_statement [18076,18273]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "}: } [18272,18273]",
      "parent": "block_statement [18076,18273]",
      "at": 4
    },
    {
      "action": "insert-tree",
      "tree": "member_expression [37516,37542]",
      "parent": "binary_expression [37516,37553]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "+: + [37543,37544]",
      "parent": "binary_expression [37516,37553]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "type_name [38608,38612]",
      "parent": "variable_declaration [38608,38619]",
      "at": 0
    },
    {
      "action": "insert-tree",
      "tree": "type_name [38660,38664]",
      "parent": "variable_declaration [38660,38671]",
      "at": 0
    },
    {
      "action": "update-node",
      "tree": "identifier: isList [29833,29839]",
      "label": "payloadLocation"
    },
    {
      "action": "insert-tree",
      "tree": "type_name [39285,39289]",
      "parent": "variable_declaration [39285,39296]",
      "at": 0
    },
    {
      "action": "update-node",
      "tree": "identifier: currPtr [32053,32060]",
      "label": "memPtr"
    },
    {
      "action": "insert-node",
      "tree": "==: == [39785,39787]",
      "parent": "binary_expression [39776,39789]",
      "at": 1
    },
    {
      "action": "update-node",
      "tree": "number_literal: 33 [29913,29915]",
      "label": "0"
    },
    {
      "action": "update-node",
      "tree": "identifier: isList [29523,29529]",
      "label": "payloadLocation"
    },
    {
      "action": "insert-tree",
      "tree": "type_name [41577,41581]",
      "parent": "variable_declaration [41577,41588]",
      "at": 0
    },
    {
      "action": "update-node",
      "tree": "identifier: itemLength [29971,29981]",
      "label": "memPtr"
    },
    {
      "action": "insert-tree",
      "tree": "type_name [42932,42936]",
      "parent": "variable_declaration [42932,42943]",
      "at": 0
    },
    {
      "action": "insert-tree",
      "tree": "type_name [43685,43689]",
      "parent": "variable_declaration [43685,43695]",
      "at": 0
    },
    {
      "action": "insert-tree",
      "tree": "type_name [43777,43781]",
      "parent": "variable_declaration [43777,43788]",
      "at": 0
    },
    {
      "action": "insert-tree",
      "tree": "type_name [45499,45503]",
      "parent": "variable_declaration [45499,45509]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "{: { [46512,46513]",
      "parent": "block_statement [46512,46909]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "comment: // left over bytes. Mask is used to remove unwanted bytes from the word [46527,46598]",
      "parent": "block_statement [46512,46909]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "variable_declaration_statement [35025,35067]",
      "parent": "block_statement [46512,46909]",
      "at": 2
    },
    {
      "action": "move-tree",
      "tree": "assembly_statement [35077,35292]",
      "parent": "block_statement [46512,46909]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "}: } [46908,46909]",
      "parent": "block_statement [46512,46909]",
      "at": 4
    },
    {
      "action": "insert-tree",
      "tree": "member_expression [52332,52362]",
      "parent": "call_expression [52332,52382]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "call_expression [15324,15382]",
      "parent": "call_argument [15324,15382]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "call_expression [18176,18261]",
      "parent": "expression_statement [18176,18262]",
      "at": 0
    },
    {
      "action": "move-tree",
      "tree": "==: == [31243,31245]",
      "parent": "binary_expression [41530,41543]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "binary_expression [42337,42367]",
      "parent": "call_argument [42337,42367]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: memPtr [43401,43407]",
      "parent": "call_argument [43401,43407]",
      "at": 0
    },
    {
      "action": "update-node",
      "tree": "identifier: transferFrom [38759,38771]",
      "label": "safeTransferFrom"
    },
    {
      "action": "insert-tree",
      "tree": "binary_expression [5538,5543]",
      "parent": "binary_expression [5538,5548]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "==: == [5544,5546]",
      "parent": "binary_expression [5538,5548]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "identifier: b [5547,5548]",
      "parent": "binary_expression [5538,5548]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "member_expression [15324,15346]",
      "parent": "call_expression [15324,15382]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "(: ( [15346,15347]",
      "parent": "call_expression [15324,15382]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "call_argument [15347,15370]",
      "parent": "call_expression [15324,15382]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": ",: , [15370,15371]",
      "parent": "call_expression [15324,15382]",
      "at": 3
    },
    {
      "action": "insert-tree",
      "tree": "call_argument [15372,15374]",
      "parent": "call_expression [15324,15382]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": ",: , [15374,15375]",
      "parent": "call_expression [15324,15382]",
      "at": 5
    },
    {
      "action": "insert-tree",
      "tree": "call_argument [15376,15381]",
      "parent": "call_expression [15324,15382]",
      "at": 6
    },
    {
      "action": "insert-node",
      "tree": "): ) [15381,15382]",
      "parent": "call_expression [15324,15382]",
      "at": 7
    },
    {
      "action": "insert-node",
      "tree": "identifier: require [18176,18183]",
      "parent": "call_expression [18176,18261]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "(: ( [18183,18184]",
      "parent": "call_expression [18176,18261]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "call_argument [18184,18214]",
      "parent": "call_expression [18176,18261]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": ",: , [18214,18215]",
      "parent": "call_expression [18176,18261]",
      "at": 3
    },
    {
      "action": "move-tree",
      "tree": "call_argument [32308,32354]",
      "parent": "call_expression [18176,18261]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "): ) [18260,18261]",
      "parent": "call_expression [18176,18261]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": "number_literal: 1 [41542,41543]",
      "parent": "binary_expression [41530,41543]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "member_expression [42337,42361]",
      "parent": "binary_expression [42337,42367]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "<=: <= [42362,42364]",
      "parent": "binary_expression [42337,42367]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "number_literal: 33 [42365,42367]",
      "parent": "binary_expression [42337,42367]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": ">: > [43174,43175]",
      "parent": "binary_expression [43165,43177]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "number_literal: 0 [43176,43177]",
      "parent": "binary_expression [43165,43177]",
      "at": 2
    },
    {
      "action": "update-node",
      "tree": "identifier: IMintableERC20 [38733,38747]",
      "label": "IERC20"
    },
    {
      "action": "insert-node",
      "tree": "member_expression [15347,15370]",
      "parent": "call_argument [15347,15370]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "uint: uint [39379,39383]",
      "parent": "primitive_type [39379,39383]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "binary_expression [42337,42357]",
      "parent": "member_expression [42337,42361]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": ".: . [42357,42358]",
      "parent": "member_expression [42337,42361]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "identifier: len [42358,42361]",
      "parent": "member_expression [42337,42361]",
      "at": 2
    },
    {
      "action": "move-tree",
      "tree": "member_expression [40451,40465]",
      "parent": "member_expression [15347,15370]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": ".: . [15361,15362]",
      "parent": "member_expression [15347,15370]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "identifier: selector [15362,15370]",
      "parent": "member_expression [15347,15370]",
      "at": 2
    },
    {
      "action": "move-tree",
      "tree": "binary_expression [28204,28226]",
      "parent": "binary_expression [42337,42357]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "&&: && [42350,42352]",
      "parent": "binary_expression [42337,42357]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "identifier: item [42353,42357]",
      "parent": "binary_expression [42337,42357]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "uint: uint [46612,46616]",
      "parent": "primitive_type [46612,46616]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": ">: > [42346,42347]",
      "parent": "binary_expression [42337,42349]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "number_literal: 0 [42348,42349]",
      "parent": "binary_expression [42337,42349]",
      "at": 2
    },
    {
      "action": "delete-node",
      "tree": "call_argument [30027,30049]"
    },
    {
      "action": "delete-tree",
      "tree": "call_expression [28161,28185]"
    },
    {
      "action": "delete-tree",
      "tree": "member_expression [27586,27597]"
    },
    {
      "action": "delete-node",
      "tree": ">: > [27598,27599]"
    },
    {
      "action": "delete-node",
      "tree": "number_literal: 0 [27600,27601]"
    },
    {
      "action": "delete-node",
      "tree": "call_argument [29901,29915]"
    },
    {
      "action": "delete-node",
      "tree": "!: ! [29832,29833]"
    },
    {
      "action": "delete-node",
      "tree": "unary_expression [29832,29845]"
    },
    {
      "action": "delete-node",
      "tree": "call_argument [29832,29845]"
    },
    {
      "action": "delete-node",
      "tree": "struct: struct [27325,27331]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: RLPItem [27332,27339]"
    },
    {
      "action": "delete-node",
      "tree": "{: { [27340,27341]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: len [27359,27362]"
    },
    {
      "action": "delete-node",
      "tree": "struct_member [27351,27363]"
    },
    {
      "action": "delete-tree",
      "tree": "struct_member [27373,27388]"
    },
    {
      "action": "delete-node",
      "tree": "}: } [27394,27395]"
    },
    {
      "action": "delete-node",
      "tree": "struct_declaration [27325,27395]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: itemLength [30027,30037]"
    },
    {
      "action": "delete-node",
      "tree": "==: == [30038,30040]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [28000,28001]"
    },
    {
      "action": "delete-node",
      "tree": "uint256: uint256 [28383,28390]"
    },
    {
      "action": "delete-node",
      "tree": "<=: <= [29910,29912]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: listLength [31232,31242]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [31254,31255]"
    },
    {
      "action": "delete-tree",
      "tree": "call_argument [31256,31298]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: _itemLength [29984,29995]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [29995,29996]"
    },
    {
      "action": "delete-node",
      "tree": "call_argument [29996,30007]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [30007,30008]"
    },
    {
      "action": "delete-node",
      "tree": "call_expression [29984,30008]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: require [29514,29521]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [29521,29522]"
    },
    {
      "action": "delete-node",
      "tree": "!: ! [29522,29523]"
    },
    {
      "action": "delete-node",
      "tree": "unary_expression [29522,29535]"
    },
    {
      "action": "delete-node",
      "tree": "call_argument [29522,29535]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [29535,29536]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [29574,29575]"
    },
    {
      "action": "delete-node",
      "tree": "call_expression [29514,29575]"
    },
    {
      "action": "delete-node",
      "tree": "expression_statement [29514,29576]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [29649,29650]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: listLength [28204,28214]"
    },
    {
      "action": "delete-node",
      "tree": "==: == [28215,28217]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [28226,28227]"
    },
    {
      "action": "delete-node",
      "tree": "expression_statement [29824,29883]"
    },
    {
      "action": "delete-node",
      "tree": "expression_statement [29893,29951]"
    },
    {
      "action": "delete-node",
      "tree": "expression_statement [30019,30094]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: offset [30114,30120]"
    },
    {
      "action": "delete-node",
      "tree": "variable_declaration [30106,30120]"
    },
    {
      "action": "delete-node",
      "tree": "=: = [30121,30122]"
    },
    {
      "action": "delete-tree",
      "tree": "call_expression [30123,30150]"
    },
    {
      "action": "delete-node",
      "tree": "variable_declaration_statement [30106,30151]"
    },
    {
      "action": "delete-tree",
      "tree": "variable_declaration_statement [30161,30193]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: result [30211,30217]"
    },
    {
      "action": "delete-node",
      "tree": "variable_declaration [30203,30217]"
    },
    {
      "action": "delete-node",
      "tree": "variable_declaration_statement [30203,30218]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: itemLength [30670,30680]"
    },
    {
      "action": "delete-node",
      "tree": "variable_declaration [30662,30680]"
    },
    {
      "action": "delete-node",
      "tree": "=: = [30681,30682]"
    },
    {
      "action": "delete-tree",
      "tree": "call_expression [30683,30707]"
    },
    {
      "action": "delete-node",
      "tree": "variable_declaration_statement [30662,30708]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [30860,30861]"
    },
    {
      "action": "delete-tree",
      "tree": "call_argument [30862,30901]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: result [30923,30929]"
    },
    {
      "action": "delete-node",
      "tree": "variable_declaration [30915,30929]"
    },
    {
      "action": "delete-node",
      "tree": "variable_declaration_statement [30915,30930]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: itemLength [30726,30736]"
    },
    {
      "action": "delete-node",
      "tree": "==: == [30737,30739]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [30748,30749]"
    },
    {
      "action": "delete-tree",
      "tree": "call_argument [30750,30798]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: listLength [31176,31186]"
    },
    {
      "action": "delete-node",
      "tree": "variable_declaration [31168,31186]"
    },
    {
      "action": "delete-node",
      "tree": "=: = [31187,31188]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: _itemLength [31189,31200]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [31200,31201]"
    },
    {
      "action": "delete-node",
      "tree": "call_argument [31201,31212]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [31212,31213]"
    },
    {
      "action": "delete-node",
      "tree": "call_expression [31189,31213]"
    },
    {
      "action": "delete-node",
      "tree": "variable_declaration_statement [31168,31214]"
    },
    {
      "action": "delete-node",
      "tree": "comment: // data length [31400,31414]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: destPtr [31481,31488]"
    },
    {
      "action": "delete-node",
      "tree": "variable_declaration [31473,31488]"
    },
    {
      "action": "delete-node",
      "tree": "variable_declaration_statement [31473,31489]"
    },
    {
      "action": "delete-tree",
      "tree": "binary_expression [31579,31599]"
    },
    {
      "action": "delete-node",
      "tree": "comment: // add `isList` check if `item` is expected to be passsed without a check from calling function [31842,31937]"
    },
    {
      "action": "delete-node",
      "tree": "comment: // require(isList(item), \"RLPReader: NUM_ITEMS_NOT_LIST\"); [31947,32005]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: require [32281,32288]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [32288,32289]"
    },
    {
      "action": "delete-tree",
      "tree": "call_argument [32289,32306]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [32306,32307]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [32354,32355]"
    },
    {
      "action": "delete-node",
      "tree": "call_expression [32281,32355]"
    },
    {
      "action": "delete-node",
      "tree": "expression_statement [32281,32356]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: itemLen [32560,32567]"
    },
    {
      "action": "delete-node",
      "tree": "variable_declaration [32552,32567]"
    },
    {
      "action": "delete-node",
      "tree": "variable_declaration_statement [32552,32568]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: byte0 [32586,32591]"
    },
    {
      "action": "delete-node",
      "tree": "variable_declaration [32578,32591]"
    },
    {
      "action": "delete-node",
      "tree": "variable_declaration_statement [32578,32592]"
    },
    {
      "action": "delete-node",
      "tree": "uint256: uint256 [35025,35032]"
    },
    {
      "action": "delete-node",
      "tree": "comment: // left over bytes. Mask is used to remove unwanted bytes from the word [34944,35015]"
    }
  ]
}