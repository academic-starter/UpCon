{
  "matches": [
    {
      "src": "call_expression [27812,27859]",
      "dest": "call_expression [27862,27909]"
    },
    {
      "src": "struct: struct [1745,1751]",
      "dest": "struct: struct [1777,1783]"
    },
    {
      "src": "call_argument [12978,12983]",
      "dest": "call_argument [13010,13015]"
    },
    {
      "src": "uint256: uint256 [1449,1456]",
      "dest": "uint256: uint256 [1389,1396]"
    },
    {
      "src": "identifier: a [13021,13022]",
      "dest": "identifier: a [13053,13054]"
    },
    {
      "src": "struct_field_assignment [16938,16951]",
      "dest": "struct_field_assignment [16970,16983]"
    },
    {
      "src": "}: } [15652,15653]",
      "dest": "}: } [15684,15685]"
    },
    {
      "src": "number_literal: 20 [42934,42936]",
      "dest": "number_literal: 20 [47563,47565]"
    },
    {
      "src": "function: function [13607,13615]",
      "dest": "function: function [13639,13647]"
    },
    {
      "src": "call_argument [4425,4426]",
      "dest": "call_argument [4457,4458]"
    },
    {
      "src": "identifier: b [11692,11693]",
      "dest": "identifier: b [11724,11725]"
    },
    {
      "src": "]: ] [29335,29336]",
      "dest": "]: ] [29385,29386]"
    },
    {
      "src": "[: [ [29327,29328]",
      "dest": "[: [ [29377,29378]"
    },
    {
      "src": "string_literal [18963,19006]",
      "dest": "string_literal [18995,19038]"
    },
    {
      "src": "): ) [26920,26921]",
      "dest": "): ) [26970,26971]"
    },
    {
      "src": "type_name [1078,1085]",
      "dest": "type_name [1018,1025]"
    },
    {
      "src": "parameter [38331,38344]",
      "dest": "parameter [38381,38394]"
    },
    {
      "src": "(: ( [43664,43665]",
      "dest": "(: ( [48293,48294]"
    },
    {
      "src": "mapping: mapping [1836,1843]",
      "dest": "mapping: mapping [1868,1875]"
    },
    {
      "src": "internal: internal [40937,40945]",
      "dest": "internal: internal [40990,40998]"
    },
    {
      "src": "solidity_version:  0.6.10 [43023,43030]",
      "dest": "solidity_version:  0.6.10 [45882,45889]"
    },
    {
      "src": "string [16954,16956]",
      "dest": "string [16986,16988]"
    },
    {
      "src": "visibility [5241,5247]",
      "dest": "visibility [5273,5279]"
    },
    {
      "src": "primitive_type [29955,29962]",
      "dest": "primitive_type [30005,30012]"
    },
    {
      "src": "address: address [37145,37152]",
      "dest": "address: address [37195,37202]"
    },
    {
      "src": "call_argument [29470,29480]",
      "dest": "call_argument [29520,29530]"
    },
    {
      "src": "expression_statement [29397,29437]",
      "dest": "expression_statement [29447,29487]"
    },
    {
      "src": "function_body [24252,24335]",
      "dest": "function_body [24302,24385]"
    },
    {
      "src": "identifier: a [11310,11311]",
      "dest": "identifier: a [11342,11343]"
    },
    {
      "src": "parameter [19318,19335]",
      "dest": "parameter [19350,19367]"
    },
    {
      "src": "string_literal [29186,29221]",
      "dest": "string_literal [29236,29271]"
    },
    {
      "src": "identifier: ClaimableOwnable [22467,22483]",
      "dest": "identifier: ClaimableOwnable [22501,22517]"
    },
    {
      "src": "public: public [799,805]",
      "dest": "public: public [739,745]"
    },
    {
      "src": "\": \" [16954,16955]",
      "dest": "\": \" [16986,16987]"
    },
    {
      "src": "identifier: _rewardDistribution_Deprecated [1875,1905]",
      "dest": "identifier: _rewardDistribution_Deprecated [1907,1937]"
    },
    {
      "src": "parameter [6114,6118]",
      "dest": "parameter [6146,6150]"
    },
    {
      "src": "): ) [34691,34692]",
      "dest": "): ) [34741,34742]"
    },
    {
      "src": "\": \" [40358,40359]",
      "dest": "\": \" [40408,40409]"
    },
    {
      "src": "internal: internal [18870,18878]",
      "dest": "internal: internal [18902,18910]"
    },
    {
      "src": "modifier_invocation [31778,31787]",
      "dest": "modifier_invocation [31828,31837]"
    },
    {
      "src": "state_variable_declaration [1252,1302]",
      "dest": "state_variable_declaration [1192,1242]"
    },
    {
      "src": "call_argument [42969,42992]",
      "dest": "call_argument [47598,47621]"
    },
    {
      "src": "=>: => [1982,1984]",
      "dest": "=>: => [2014,2016]"
    },
    {
      "src": "primitive_type [39678,39685]",
      "dest": "primitive_type [39728,39735]"
    },
    {
      "src": "bytes: bytes [19725,19730]",
      "dest": "bytes: bytes [19757,19762]"
    },
    {
      "src": "number_literal: 0x50E2719208914764087e68C32bC5AaC321f5B04d [42277,42319]",
      "dest": "number_literal: 0x50E2719208914764087e68C32bC5AaC321f5B04d [47078,47120]"
    },
    {
      "src": "primitive_type [30966,30973]",
      "dest": "primitive_type [31016,31023]"
    },
    {
      "src": "identifier: a [12257,12258]",
      "dest": "identifier: a [12289,12290]"
    },
    {
      "src": ",: , [39992,39993]",
      "dest": ",: , [40042,40043]"
    },
    {
      "src": "returns: returns [23885,23892]",
      "dest": "returns: returns [23935,23942]"
    },
    {
      "src": "string: string [19680,19686]",
      "dest": "string: string [19712,19718]"
    },
    {
      "src": "call_argument [37821,37865]",
      "dest": "call_argument [37871,37915]"
    },
    {
      "src": "expression_statement [19750,19811]",
      "dest": "expression_statement [19782,19843]"
    },
    {
      "src": "function_definition [23516,23600]",
      "dest": "function_definition [23550,23634]"
    },
    {
      "src": "type_name [29955,29962]",
      "dest": "type_name [30005,30012]"
    },
    {
      "src": "parameter [6438,6453]",
      "dest": "parameter [6470,6485]"
    },
    {
      "src": "returns: returns [23709,23716]",
      "dest": "returns: returns [23751,23758]"
    },
    {
      "src": "identifier: account [29328,29335]",
      "dest": "identifier: account [29378,29385]"
    },
    {
      "src": "expression_statement [4846,4848]",
      "dest": "expression_statement [4878,4880]"
    },
    {
      "src": "): ) [19443,19444]",
      "dest": "): ) [19475,19476]"
    },
    {
      "src": "function_definition [42014,42567]",
      "dest": "function_definition [46815,47368]"
    },
    {
      "src": "visibility [6455,6463]",
      "dest": "visibility [6487,6495]"
    },
    {
      "src": "pure: pure [43683,43687]",
      "dest": "pure: pure [48312,48316]"
    },
    {
      "src": "parameter [9993,10000]",
      "dest": "parameter [10025,10032]"
    },
    {
      "src": "function_body [34477,34737]",
      "dest": "function_body [34527,34787]"
    },
    {
      "src": "identifier: account [38384,38391]",
      "dest": "identifier: account [38434,38441]"
    },
    {
      "src": "\": \" [19778,19779]",
      "dest": "\": \" [19810,19811]"
    },
    {
      "src": "state_variable_declaration [791,819]",
      "dest": "state_variable_declaration [731,759]"
    },
    {
      "src": "call_argument [37867,37932]",
      "dest": "call_argument [37917,37982]"
    },
    {
      "src": "parameter [43591,43604]",
      "dest": "parameter [48220,48233]"
    },
    {
      "src": "state_mutability [5635,5639]",
      "dest": "state_mutability [5667,5671]"
    },
    {
      "src": "identifier: burnMin [1060,1067]",
      "dest": "identifier: burnMin [1000,1007]"
    },
    {
      "src": "function_definition [38810,39391]",
      "dest": "function_definition [38860,39441]"
    },
    {
      "src": "identifier: recipient [24287,24296]",
      "dest": "identifier: recipient [24337,24346]"
    },
    {
      "src": "(: ( [19544,19545]",
      "dest": "(: ( [19576,19577]"
    },
    {
      "src": "identifier: isRedemptionAddress [37300,37319]",
      "dest": "identifier: isRedemptionAddress [37350,37369]"
    },
    {
      "src": "yul_decimal_number: 32 [20428,20430]",
      "dest": "yul_decimal_number: 32 [20460,20462]"
    },
    {
      "src": "identifier: sender [39188,39194]",
      "dest": "identifier: sender [39238,39244]"
    },
    {
      "src": "primitive_type [22682,22688]",
      "dest": "primitive_type [22716,22722]"
    },
    {
      "src": "string [33959,33995]",
      "dest": "string [34009,34045]"
    },
    {
      "src": "identifier: owner [30252,30257]",
      "dest": "identifier: owner [30302,30307]"
    },
    {
      "src": "call_argument [42174,42183]",
      "dest": "call_argument [46975,46984]"
    },
    {
      "src": ",: , [10421,10422]",
      "dest": ",: , [10453,10454]"
    },
    {
      "src": "address: address [8767,8774]",
      "dest": "address: address [8799,8806]"
    },
    {
      "src": "interface: interface [5505,5514]",
      "dest": "interface: interface [5537,5546]"
    },
    {
      "src": ",: , [37760,37761]",
      "dest": ",: , [37810,37811]"
    },
    {
      "src": ",: , [8120,8121]",
      "dest": ",: , [8152,8153]"
    },
    {
      "src": "call_expression [42423,42504]",
      "dest": "call_expression [47224,47305]"
    },
    {
      "src": "comment: /**      * @dev Check if neither account is blacklisted before performing transfer      * If transfer recipient is a redemption address, burns tokens      * @notice Transfer to redemption address will burn tokens with a 1 cent precision      * @param sender address of sender      * @param recipient address of recipient      * @param amount amount of tokens to transfer      */ [38419,38804]",
      "dest": "comment: /**      * @dev Check if neither account is blacklisted before performing transfer      * If transfer recipient is a redemption address, burns tokens      * @notice Transfer to redemption address will burn tokens with a 1 cent precision      * @param sender address of sender      * @param recipient address of recipient      * @param amount amount of tokens to transfer      */ [38469,38854]"
    },
    {
      "src": "identifier: isRedemptionAddress [39125,39144]",
      "dest": "identifier: isRedemptionAddress [39175,39194]"
    },
    {
      "src": "identifier: require [33937,33944]",
      "dest": "identifier: require [33987,33994]"
    },
    {
      "src": "override_specifier [43568,43576]",
      "dest": "override_specifier [48197,48205]"
    },
    {
      "src": "uint256: uint256 [31799,31806]",
      "dest": "uint256: uint256 [31849,31856]"
    },
    {
      "src": "call_argument [28556,28563]",
      "dest": "call_argument [28606,28613]"
    },
    {
      "src": "expression_statement [4621,4623]",
      "dest": "expression_statement [4653,4655]"
    },
    {
      "src": "binary_expression [12978,12983]",
      "dest": "binary_expression [13010,13015]"
    },
    {
      "src": "primitive_type [24487,24494]",
      "dest": "primitive_type [24537,24544]"
    },
    {
      "src": "primitive_type [2019,2026]",
      "dest": "primitive_type [2051,2058]"
    },
    {
      "src": "): ) [2034,2035]",
      "dest": "): ) [2066,2067]"
    },
    {
      "src": "call_argument [13702,13728]",
      "dest": "call_argument [13734,13760]"
    },
    {
      "src": "string_literal [42969,42992]",
      "dest": "string_literal [47598,47621]"
    },
    {
      "src": "(: ( [5764,5765]",
      "dest": "(: ( [5796,5797]"
    },
    {
      "src": "): ) [42558,42559]",
      "dest": "): ) [47359,47360]"
    },
    {
      "src": "call_argument [29482,29488]",
      "dest": "call_argument [29532,29538]"
    },
    {
      "src": "primitive_type [36214,36221]",
      "dest": "primitive_type [36264,36271]"
    },
    {
      "src": "]: ] [39064,39065]",
      "dest": "]: ] [39114,39115]"
    },
    {
      "src": ",: , [42275,42276]",
      "dest": ",: , [47076,47077]"
    },
    {
      "src": "binary_expression [15671,15694]",
      "dest": "binary_expression [15703,15726]"
    },
    {
      "src": "return_type_definition [12285,12302]",
      "dest": "return_type_definition [12317,12334]"
    },
    {
      "src": "call_expression [42147,42228]",
      "dest": "call_expression [46948,47029]"
    },
    {
      "src": "yul_identifier [15643,15650]",
      "dest": "yul_identifier [15675,15682]"
    },
    {
      "src": "member_expression [39972,39986]",
      "dest": "member_expression [40022,40036]"
    },
    {
      "src": "parameter [16676,16701]",
      "dest": "parameter [16708,16733]"
    },
    {
      "src": "type_name [886,893]",
      "dest": "type_name [826,833]"
    },
    {
      "src": "uint256: uint256 [5649,5656]",
      "dest": "uint256: uint256 [5681,5688]"
    },
    {
      "src": "type_name [5765,5772]",
      "dest": "type_name [5797,5804]"
    },
    {
      "src": "comment: /**      * @dev Destroys `amount` tokens from `account`, reducing the      * total supply.      *      * Emits a {Transfer} event with `to` set to the zero address.      *      * Requirements      *      * - `account` cannot be the zero address.      * - `account` must have at least `amount` tokens.      */ [28755,29073]",
      "dest": "comment: /**      * @dev Destroys `amount` tokens from `account`, reducing the      * total supply.      *      * Emits a {Transfer} event with `to` set to the zero address.      *      * Requirements      *      * - `account` cannot be the zero address.      * - `account` must have at least `amount` tokens.      */ [28805,29123]"
    },
    {
      "src": ",: , [27839,27840]",
      "dest": ",: , [27889,27890]"
    },
    {
      "src": "assembly_statement [15608,15653]",
      "dest": "assembly_statement [15640,15685]"
    },
    {
      "src": "indexed: indexed [36654,36661]",
      "dest": "indexed: indexed [36704,36711]"
    },
    {
      "src": ",: , [6078,6079]",
      "dest": ",: , [6110,6111]"
    },
    {
      "src": "return_statement [9038,9054]",
      "dest": "return_statement [9070,9086]"
    },
    {
      "src": "string [27677,27716]",
      "dest": "string [27727,27766]"
    },
    {
      "src": "identifier: value [18863,18868]",
      "dest": "identifier: value [18895,18900]"
    },
    {
      "src": "parameter [5649,5656]",
      "dest": "parameter [5681,5688]"
    },
    {
      "src": "uint256: uint256 [10851,10858]",
      "dest": "uint256: uint256 [10883,10890]"
    },
    {
      "src": "identifier: _beforeTokenTransfer [29235,29255]",
      "dest": "identifier: _beforeTokenTransfer [29285,29305]"
    },
    {
      "src": "string_literal [13702,13728]",
      "dest": "string_literal [13734,13760]"
    },
    {
      "src": "address: address [7859,7866]",
      "dest": "address: address [7891,7898]"
    },
    {
      "src": "}: } [12367,12368]",
      "dest": "}: } [12399,12400]"
    },
    {
      "src": "unary_expression [39873,39887]",
      "dest": "unary_expression [39923,39937]"
    },
    {
      "src": "}: } [42566,42567]",
      "dest": "}: } [47367,47368]"
    },
    {
      "src": "identifier: finOpSupply_Deprecated [1714,1736]",
      "dest": "identifier: finOpSupply_Deprecated [1683,1705]"
    },
    {
      "src": "identifier: spender [26104,26111]",
      "dest": "identifier: spender [26154,26161]"
    },
    {
      "src": "primitive_type [26096,26103]",
      "dest": "primitive_type [26146,26153]"
    },
    {
      "src": "indexed: indexed [4134,4141]",
      "dest": "indexed: indexed [4166,4173]"
    },
    {
      "src": "identifier: sub [27910,27913]",
      "dest": "identifier: sub [27960,27963]"
    },
    {
      "src": "primitive_type [30992,30999]",
      "dest": "primitive_type [31042,31049]"
    },
    {
      "src": "): ) [39020,39021]",
      "dest": "): ) [39070,39071]"
    },
    {
      "src": "comment: /**      * @dev Emitted when `value` tokens are burnt from one account (`burner`)      * @param burner address which burned tokens      * @param value amount of tokens burned      */ [32251,32437]",
      "dest": "comment: /**      * @dev Emitted when `value` tokens are burnt from one account (`burner`)      * @param burner address which burned tokens      * @param value amount of tokens burned      */ [32301,32487]"
    },
    {
      "src": "mapping: mapping [2011,2018]",
      "dest": "mapping: mapping [2043,2050]"
    },
    {
      "src": "external: external [37783,37791]",
      "dest": "external: external [37833,37841]"
    },
    {
      "src": "function_definition [27549,28088]",
      "dest": "function_definition [27599,28138]"
    },
    {
      "src": "identifier: spender [24440,24447]",
      "dest": "identifier: spender [24490,24497]"
    },
    {
      "src": "primitive_type [19898,19903]",
      "dest": "primitive_type [19930,19935]"
    },
    {
      "src": ",: , [10489,10490]",
      "dest": ",: , [10521,10522]"
    },
    {
      "src": "function: function [27549,27557]",
      "dest": "function: function [27599,27607]"
    },
    {
      "src": "identifier: _beforeTokenTransfer [30945,30965]",
      "dest": "identifier: _beforeTokenTransfer [30995,31015]"
    },
    {
      "src": "number_literal: 0 [18390,18391]",
      "dest": "number_literal: 0 [18422,18423]"
    },
    {
      "src": "function_definition [11289,11760]",
      "dest": "function_definition [11321,11792]"
    },
    {
      "src": "identifier: returndata [20384,20394]",
      "dest": "identifier: returndata [20416,20426]"
    },
    {
      "src": "binary_expression [10049,10055]",
      "dest": "binary_expression [10081,10087]"
    },
    {
      "src": "assignment_expression [29397,29436]",
      "dest": "assignment_expression [29447,29486]"
    },
    {
      "src": "identifier: _allowances [26932,26943]",
      "dest": "identifier: _allowances [26982,26993]"
    },
    {
      "src": "type_name [28384,28391]",
      "dest": "type_name [28434,28441]"
    },
    {
      "src": "(: ( [34495,34496]",
      "dest": "(: ( [34545,34546]"
    },
    {
      "src": "*: * [11661,11662]",
      "dest": "*: * [11693,11694]"
    },
    {
      "src": "primitive_type [11347,11354]",
      "dest": "primitive_type [11379,11386]"
    },
    {
      "src": "bool: bool [25445,25449]",
      "dest": "bool: bool [25495,25499]"
    },
    {
      "src": "}: } [25659,25660]",
      "dest": "}: } [25709,25710]"
    },
    {
      "src": "type_name [1855,1871]",
      "dest": "type_name [1887,1903]"
    },
    {
      "src": "solidity_version: 0.6.0 [5421,5426]",
      "dest": "solidity_version: 0.6.0 [5453,5458]"
    },
    {
      "src": "expression_statement [5364,5390]",
      "dest": "expression_statement [5396,5422]"
    },
    {
      "src": "primitive_type [16904,16908]",
      "dest": "primitive_type [16936,16940]"
    },
    {
      "src": "identifier: isBlacklisted [39788,39801]",
      "dest": "identifier: isBlacklisted [39838,39851]"
    },
    {
      "src": "identifier: spender [30259,30266]",
      "dest": "identifier: spender [30309,30316]"
    },
    {
      "src": "call_expression [18353,18406]",
      "dest": "call_expression [18385,18438]"
    },
    {
      "src": "yul_identifier [20359,20374]",
      "dest": "yul_identifier [20391,20406]"
    },
    {
      "src": "==: == [11689,11691]",
      "dest": "==: == [11721,11723]"
    },
    {
      "src": "identifier: recipient [42358,42367]",
      "dest": "identifier: recipient [47159,47168]"
    },
    {
      "src": "variable_declaration_statement [19883,19962]",
      "dest": "variable_declaration_statement [19915,19994]"
    },
    {
      "src": "state_mutability [24456,24460]",
      "dest": "state_mutability [24506,24510]"
    },
    {
      "src": "solidity: solidity [409,417]",
      "dest": "solidity: solidity [349,357]"
    },
    {
      "src": "^:  ^ [9083,9085]",
      "dest": "^:  ^ [9115,9117]"
    },
    {
      "src": "identifier: IERC20 [22494,22500]",
      "dest": "identifier: IERC20 [22528,22534]"
    },
    {
      "src": "uint256: uint256 [1515,1522]",
      "dest": "uint256: uint256 [1455,1462]"
    },
    {
      "src": "{: { [10002,10003]",
      "dest": "{: { [10034,10035]"
    },
    {
      "src": "\": \" [17947,17948]",
      "dest": "\": \" [17979,17980]"
    },
    {
      "src": "address: address [29955,29962]",
      "dest": "address: address [30005,30012]"
    },
    {
      "src": "identifier: require [10041,10048]",
      "dest": "identifier: require [10073,10080]"
    },
    {
      "src": ",: , [13629,13630]",
      "dest": ",: , [13661,13662]"
    },
    {
      "src": "parameter [17837,17851]",
      "dest": "parameter [17869,17883]"
    },
    {
      "src": "string [19463,19503]",
      "dest": "string [19495,19535]"
    },
    {
      "src": "return_statement [18346,18407]",
      "dest": "return_statement [18378,18439]"
    },
    {
      "src": "call_argument [27655,27675]",
      "dest": "call_argument [27705,27725]"
    },
    {
      "src": "return: return [9038,9044]",
      "dest": "return: return [9070,9076]"
    },
    {
      "src": "\": \" [30141,30142]",
      "dest": "\": \" [30191,30192]"
    },
    {
      "src": "): ) [1523,1524]",
      "dest": "): ) [1463,1464]"
    },
    {
      "src": "): ) [4181,4182]",
      "dest": "): ) [4213,4214]"
    },
    {
      "src": "parameter [24197,24211]",
      "dest": "parameter [24247,24261]"
    },
    {
      "src": "parameter [17853,17870]",
      "dest": "parameter [17885,17902]"
    },
    {
      "src": "): ) [19775,19776]",
      "dest": "): ) [19807,19808]"
    },
    {
      "src": "function: function [8828,8836]",
      "dest": "function: function [8860,8868]"
    },
    {
      "src": "function_definition [39650,40018]",
      "dest": "function_definition [39700,40068]"
    },
    {
      "src": "==: == [42950,42952]",
      "dest": "==: == [47579,47581]"
    },
    {
      "src": "\": \" [30060,30061]",
      "dest": "\": \" [30110,30111]"
    },
    {
      "src": "): ) [8135,8136]",
      "dest": "): ) [8167,8168]"
    },
    {
      "src": "identifier: sub [25574,25577]",
      "dest": "identifier: sub [25624,25627]"
    },
    {
      "src": "(: ( [1633,1634]",
      "dest": "(: ( [1602,1603]"
    },
    {
      "src": "\": \" [26988,26989]",
      "dest": "\": \" [27038,27039]"
    },
    {
      "src": "identifier: a [11687,11688]",
      "dest": "identifier: a [11719,11720]"
    },
    {
      "src": "true: true [24853,24857]",
      "dest": "true: true [24903,24907]"
    },
    {
      "src": "identifier: isRedemptionAddress [40900,40919]",
      "dest": "identifier: isRedemptionAddress [40953,40972]"
    },
    {
      "src": "function: function [38810,38818]",
      "dest": "function: function [38860,38868]"
    },
    {
      "src": "indexed: indexed [7845,7852]",
      "dest": "indexed: indexed [7877,7884]"
    },
    {
      "src": "type_name [42783,42790]",
      "dest": "type_name [47412,47419]"
    },
    {
      "src": "contract: contract [22449,22457]",
      "dest": "contract: contract [22483,22491]"
    },
    {
      "src": "number_literal: 0 [30056,30057]",
      "dest": "number_literal: 0 [30106,30107]"
    },
    {
      "src": "primitive_type [26113,26120]",
      "dest": "primitive_type [26163,26170]"
    },
    {
      "src": "identifier: data [17941,17945]",
      "dest": "identifier: data [17973,17977]"
    },
    {
      "src": "{: { [20332,20333]",
      "dest": "{: { [20364,20365]"
    },
    {
      "src": "(: ( [28710,28711]",
      "dest": "(: ( [28760,28761]"
    },
    {
      "src": "parameter [42783,42800]",
      "dest": "parameter [47412,47429]"
    },
    {
      "src": "parameter [18321,18333]",
      "dest": "parameter [18353,18365]"
    },
    {
      "src": "return_type_definition [17881,17903]",
      "dest": "return_type_definition [17913,17935]"
    },
    {
      "src": "type_name [37145,37152]",
      "dest": "type_name [37195,37202]"
    },
    {
      "src": "identifier: spender [24533,24540]",
      "dest": "identifier: spender [24583,24590]"
    },
    {
      "src": "(: ( [2018,2019]",
      "dest": "(: ( [2050,2051]"
    },
    {
      "src": "comment: /**      * @dev See {IERC20-allowance}.      */ [24343,24392]",
      "dest": "comment: /**      * @dev See {IERC20-allowance}.      */ [24393,24442]"
    },
    {
      "src": "call_argument [28476,28509]",
      "dest": "call_argument [28526,28559]"
    },
    {
      "src": "identifier: b [10029,10030]",
      "dest": "identifier: b [10061,10062]"
    },
    {
      "src": "call_expression [24796,24835]",
      "dest": "call_expression [24846,24885]"
    },
    {
      "src": "type_name [26157,26161]",
      "dest": "type_name [26207,26211]"
    },
    {
      "src": "uint256: uint256 [36251,36258]",
      "dest": "uint256: uint256 [36301,36308]"
    },
    {
      "src": "call_argument [29182,29183]",
      "dest": "call_argument [29232,29233]"
    },
    {
      "src": "parameter [15123,15138]",
      "dest": "parameter [15155,15170]"
    },
    {
      "src": "): ) [39853,39854]",
      "dest": "): ) [39903,39904]"
    },
    {
      "src": "): ) [1393,1394]",
      "dest": "): ) [1333,1334]"
    },
    {
      "src": ":: : [19943,19944]",
      "dest": ":: : [19975,19976]"
    },
    {
      "src": "{: { [31788,31789]",
      "dest": "{: { [31838,31839]"
    },
    {
      "src": "\": \" [28476,28477]",
      "dest": "\": \" [28526,28527]"
    },
    {
      "src": "(: ( [8073,8074]",
      "dest": "(: ( [8105,8106]"
    },
    {
      "src": "call_argument [13699,13700]",
      "dest": "call_argument [13731,13732]"
    },
    {
      "src": "): ) [19706,19707]",
      "dest": "): ) [19738,19739]"
    },
    {
      "src": "): ) [40359,40360]",
      "dest": "): ) [40409,40410]"
    },
    {
      "src": "call_expression [39251,39297]",
      "dest": "call_expression [39301,39347]"
    },
    {
      "src": "function_definition [5746,5814]",
      "dest": "function_definition [5778,5846]"
    },
    {
      "src": "(: ( [18375,18376]",
      "dest": "(: ( [18407,18408]"
    },
    {
      "src": "identifier: IERC20 [31742,31748]",
      "dest": "identifier: IERC20 [31792,31798]"
    },
    {
      "src": "identifier: super [40371,40376]",
      "dest": "identifier: super [40421,40426]"
    },
    {
      "src": "(: ( [22650,22651]",
      "dest": "(: ( [22684,22685]"
    },
    {
      "src": "primitive_type [7639,7643]",
      "dest": "primitive_type [7671,7675]"
    },
    {
      "src": "address: address [19302,19309]",
      "dest": "address: address [19334,19341]"
    },
    {
      "src": "return: return [20000,20006]",
      "dest": "return: return [20032,20038]"
    },
    {
      "src": "memory: memory [43704,43710]",
      "dest": "memory: memory [48333,48339]"
    },
    {
      "src": "visibility [16719,16727]",
      "dest": "visibility [16751,16759]"
    },
    {
      "src": "type_name [40243,40250]",
      "dest": "type_name [40293,40300]"
    },
    {
      "src": "): ) [33213,33214]",
      "dest": "): ) [33263,33264]"
    },
    {
      "src": "call_argument [28679,28685]",
      "dest": "call_argument [28729,28735]"
    },
    {
      "src": "primitive_type [41031,41038]",
      "dest": "primitive_type [41084,41091]"
    },
    {
      "src": "): ) [24447,24448]",
      "dest": "): ) [24497,24498]"
    },
    {
      "src": "primitive_type [7837,7844]",
      "dest": "primitive_type [7869,7876]"
    },
    {
      "src": "returns: returns [40951,40958]",
      "dest": "returns: returns [41004,41011]"
    },
    {
      "src": "function: function [22816,22824]",
      "dest": "function: function [22850,22858]"
    },
    {
      "src": "returns: returns [22673,22680]",
      "dest": "returns: returns [22707,22714]"
    },
    {
      "src": "solidity_pragma_token [14402,14417]",
      "dest": "solidity_pragma_token [14434,14449]"
    },
    {
      "src": "!=: != [28461,28463]",
      "dest": "!=: != [28511,28513]"
    },
    {
      "src": "identifier: _ [4846,4847]",
      "dest": "identifier: _ [4878,4879]"
    },
    {
      "src": "expression_statement [11675,11732]",
      "dest": "expression_statement [11707,11764]"
    },
    {
      "src": "(: ( [19955,19956]",
      "dest": "(: ( [19987,19988]"
    },
    {
      "src": "identifier: target [18942,18948]",
      "dest": "identifier: target [18974,18980]"
    },
    {
      "src": "identifier: spender [6446,6453]",
      "dest": "identifier: spender [6478,6485]"
    },
    {
      "src": "type_name [43496,43501]",
      "dest": "type_name [48125,48130]"
    },
    {
      "src": "uint256: uint256 [34435,34442]",
      "dest": "uint256: uint256 [34485,34492]"
    },
    {
      "src": "returns: returns [5640,5647]",
      "dest": "returns: returns [5672,5679]"
    },
    {
      "src": "): ) [30098,30099]",
      "dest": "): ) [30148,30149]"
    },
    {
      "src": "identifier: globalPause_Deprecated [1014,1036]",
      "dest": "identifier: globalPause_Deprecated [954,976]"
    },
    {
      "src": "identifier: transfer [31460,31468]",
      "dest": "identifier: transfer [31510,31518]"
    },
    {
      "src": "{: { [4557,4558]",
      "dest": "{: { [4589,4590]"
    },
    {
      "src": "visibility [772,778]",
      "dest": "visibility [712,718]"
    },
    {
      "src": "expression_statement [28523,28573]",
      "dest": "expression_statement [28573,28623]"
    },
    {
      "src": "emit: emit [4391,4395]",
      "dest": "emit: emit [4423,4427]"
    },
    {
      "src": "primitive_type [25361,25368]",
      "dest": "primitive_type [25411,25418]"
    },
    {
      "src": "identifier: _msgSender [26909,26919]",
      "dest": "identifier: _msgSender [26959,26969]"
    },
    {
      "src": "type_cast_expression [27749,27759]",
      "dest": "type_cast_expression [27799,27809]"
    },
    {
      "src": "type_name [11302,11309]",
      "dest": "type_name [11334,11341]"
    },
    {
      "src": "contract_body [5522,8140]",
      "dest": "contract_body [5554,8172]"
    },
    {
      "src": "identifier: codehash [15671,15679]",
      "dest": "identifier: codehash [15703,15711]"
    },
    {
      "src": "call_expression [18920,19007]",
      "dest": "call_expression [18952,19039]"
    },
    {
      "src": "=: = [5100,5101]",
      "dest": "=: = [5132,5133]"
    },
    {
      "src": ",: , [19564,19565]",
      "dest": ",: , [19596,19597]"
    },
    {
      "src": "identifier: errorMessage [19694,19706]",
      "dest": "identifier: errorMessage [19726,19738]"
    },
    {
      "src": "(: ( [9947,9948]",
      "dest": "(: ( [9979,9980]"
    },
    {
      "src": "emit: emit [28040,28044]",
      "dest": "emit: emit [28090,28094]"
    },
    {
      "src": "event: event [36635,36640]",
      "dest": "event: event [36685,36690]"
    },
    {
      "src": "call_argument [39188,39194]",
      "dest": "call_argument [39238,39244]"
    },
    {
      "src": "parameter [42068,42085]",
      "dest": "parameter [46869,46886]"
    },
    {
      "src": "internal: internal [42118,42126]",
      "dest": "internal: internal [46919,46927]"
    },
    {
      "src": "identifier: sub [29337,29340]",
      "dest": "identifier: sub [29387,29390]"
    },
    {
      "src": "(: ( [18819,18820]",
      "dest": "(: ( [18851,18852]"
    },
    {
      "src": "identifier: gasRefundPool_Deprecated [1221,1245]",
      "dest": "identifier: gasRefundPool_Deprecated [1161,1185]"
    },
    {
      "src": "identifier: account [41039,41046]",
      "dest": "identifier: account [41092,41099]"
    },
    {
      "src": "identifier: newOwner [5102,5110]",
      "dest": "identifier: newOwner [5134,5142]"
    },
    {
      "src": "primitive_type [1563,1570]",
      "dest": "primitive_type [1532,1539]"
    },
    {
      "src": ",: , [12983,12984]",
      "dest": ",: , [13015,13016]"
    },
    {
      "src": "type_name [7605,7612]",
      "dest": "type_name [7637,7644]"
    },
    {
      "src": "pragma: pragma [31901,31907]",
      "dest": "pragma: pragma [31951,31957]"
    },
    {
      "src": ",: , [39352,39353]",
      "dest": ",: , [39402,39403]"
    },
    {
      "src": "parameter [6478,6485]",
      "dest": "parameter [6510,6517]"
    },
    {
      "src": "assignment_expression [4362,4380]",
      "dest": "assignment_expression [4394,4412]"
    },
    {
      "src": "!=: != [30126,30128]",
      "dest": "!=: != [30176,30178]"
    },
    {
      "src": "override_specifier [24761,24769]",
      "dest": "override_specifier [24811,24819]"
    },
    {
      "src": "type_cast_expression [40984,41000]",
      "dest": "type_cast_expression [41037,41053]"
    },
    {
      "src": "call_expression [31456,31491]",
      "dest": "call_expression [31506,31541]"
    },
    {
      "src": "call_argument [25518,25524]",
      "dest": "call_argument [25568,25574]"
    },
    {
      "src": ".: . [39977,39978]",
      "dest": ".: . [40027,40028]"
    },
    {
      "src": "return_type_definition [7630,7644]",
      "dest": "return_type_definition [7662,7676]"
    },
    {
      "src": "primitive_type [17837,17844]",
      "dest": "primitive_type [17869,17876]"
    },
    {
      "src": "primitive_type [37745,37752]",
      "dest": "primitive_type [37795,37802]"
    },
    {
      "src": "identifier: data [18950,18954]",
      "dest": "identifier: data [18982,18986]"
    },
    {
      "src": ",: , [11693,11694]",
      "dest": ",: , [11725,11726]"
    },
    {
      "src": "(: ( [30038,30039]",
      "dest": "(: ( [30088,30089]"
    },
    {
      "src": "identifier: data [18384,18388]",
      "dest": "identifier: data [18416,18420]"
    },
    {
      "src": "type_name [19352,19358]",
      "dest": "type_name [19384,19390]"
    },
    {
      "src": "type_cast_expression [4417,4427]",
      "dest": "type_cast_expression [4449,4459]"
    },
    {
      "src": "contract_declaration [22440,31031]",
      "dest": "contract_declaration [22474,31081]"
    },
    {
      "src": "call_argument [42887,42896]",
      "dest": "call_argument [47516,47525]"
    },
    {
      "src": "state_mutability [5791,5795]",
      "dest": "state_mutability [5823,5827]"
    },
    {
      "src": "(: ( [37215,37216]",
      "dest": "(: ( [37265,37266]"
    },
    {
      "src": "binary_expression [30039,30058]",
      "dest": "binary_expression [30089,30108]"
    },
    {
      "src": "(: ( [43472,43473]",
      "dest": "(: ( [48101,48102]"
    },
    {
      "src": "!=: != [29171,29173]",
      "dest": "!=: != [29221,29223]"
    },
    {
      "src": "): ) [31767,31768]",
      "dest": "): ) [31817,31818]"
    },
    {
      "src": "function_body [43606,43641]",
      "dest": "function_body [48235,48270]"
    },
    {
      "src": "(: ( [37298,37299]",
      "dest": "(: ( [37348,37349]"
    },
    {
      "src": "indexed: indexed [8105,8112]",
      "dest": "indexed: indexed [8137,8144]"
    },
    {
      "src": "identifier: a [11659,11660]",
      "dest": "identifier: a [11691,11692]"
    },
    {
      "src": "}: } [41059,41060]",
      "dest": "}: } [41112,41113]"
    },
    {
      "src": "visibility [43475,43481]",
      "dest": "visibility [48104,48110]"
    },
    {
      "src": "): ) [40964,40965]",
      "dest": "): ) [41017,41018]"
    },
    {
      "src": "binary_expression [40984,41052]",
      "dest": "binary_expression [41037,41105]"
    },
    {
      "src": "(: ( [17889,17890]",
      "dest": "(: ( [17921,17922]"
    },
    {
      "src": "uint256: uint256 [10924,10931]",
      "dest": "uint256: uint256 [10956,10963]"
    },
    {
      "src": "): ) [29283,29284]",
      "dest": "): ) [29333,29334]"
    },
    {
      "src": "(: ( [39986,39987]",
      "dest": "(: ( [40036,40037]"
    },
    {
      "src": "primitive_type [924,931]",
      "dest": "primitive_type [864,871]"
    },
    {
      "src": "parameter [5765,5780]",
      "dest": "parameter [5797,5812]"
    },
    {
      "src": "(: ( [17932,17933]",
      "dest": "(: ( [17964,17965]"
    },
    {
      "src": "identifier: _balances [27872,27881]",
      "dest": "identifier: _balances [27922,27931]"
    },
    {
      "src": "function_definition [43356,43447]",
      "dest": "function_definition [47985,48076]"
    },
    {
      "src": "comment: /**      * @dev Returns the amount of tokens in existence.      */ [5529,5597]",
      "dest": "comment: /**      * @dev Returns the amount of tokens in existence.      */ [5561,5629]"
    },
    {
      "src": "return: return [11014,11020]",
      "dest": "return: return [11046,11052]"
    },
    {
      "src": "expression_statement [30110,30179]",
      "dest": "expression_statement [30160,30229]"
    },
    {
      "src": "block_statement [39157,39309]",
      "dest": "block_statement [39207,39359]"
    },
    {
      "src": "contract: contract [32193,32201]",
      "dest": "contract: contract [32243,32251]"
    },
    {
      "src": "type_name [19725,19730]",
      "dest": "type_name [19757,19762]"
    },
    {
      "src": "[: [ [1218,1219]",
      "dest": "[: [ [1158,1159]"
    },
    {
      "src": ",: , [26986,26987]",
      "dest": ",: , [27036,27037]"
    },
    {
      "src": "type_name [1113,1120]",
      "dest": "type_name [1053,1060]"
    },
    {
      "src": "identifier: mod [39225,39228]",
      "dest": "identifier: mod [39275,39278]"
    },
    {
      "src": "identifier: b [10870,10871]",
      "dest": "identifier: b [10902,10903]"
    },
    {
      "src": "primitive_type [4157,4164]",
      "dest": "primitive_type [4189,4196]"
    },
    {
      "src": "emit_statement [34703,34730]",
      "dest": "emit_statement [34753,34780]"
    },
    {
      "src": "(: ( [4554,4555]",
      "dest": "(: ( [4586,4587]"
    },
    {
      "src": "identifier: symbol [22825,22831]",
      "dest": "identifier: symbol [22859,22865]"
    },
    {
      "src": "address: address [42043,42050]",
      "dest": "address: address [46844,46851]"
    },
    {
      "src": "return: return [23583,23589]",
      "dest": "return: return [23617,23623]"
    },
    {
      "src": "identifier: recipient [42940,42949]",
      "dest": "identifier: recipient [47569,47578]"
    },
    {
      "src": "): ) [18301,18302]",
      "dest": "): ) [18333,18334]"
    },
    {
      "src": "expression_statement [28445,28511]",
      "dest": "expression_statement [28495,28561]"
    },
    {
      "src": "{: { [19739,19740]",
      "dest": "{: { [19771,19772]"
    },
    {
      "src": "pragma: pragma [3621,3627]",
      "dest": "pragma: pragma [3653,3659]"
    },
    {
      "src": "!=: != [15680,15682]",
      "dest": "!=: != [15712,15714]"
    },
    {
      "src": "array_access [38376,38392]",
      "dest": "array_access [38426,38442]"
    },
    {
      "src": "type_name [26834,26841]",
      "dest": "type_name [26884,26891]"
    },
    {
      "src": "solidity_pragma_token [31908,31923]",
      "dest": "solidity_pragma_token [31958,31973]"
    },
    {
      "src": "mapping: mapping [1367,1374]",
      "dest": "mapping: mapping [1307,1314]"
    },
    {
      "src": "modifier_invocation [37792,37801]",
      "dest": "modifier_invocation [37842,37851]"
    },
    {
      "src": "variable_declaration_statement [10984,11002]",
      "dest": "variable_declaration_statement [11016,11034]"
    },
    {
      "src": "): ) [14315,14316]",
      "dest": "): ) [14347,14348]"
    },
    {
      "src": "function_body [37802,38043]",
      "dest": "function_body [37852,38093]"
    },
    {
      "src": "expression_statement [29235,29285]",
      "dest": "expression_statement [29285,29335]"
    },
    {
      "src": "identifier: _beforeTokenTransfer [27812,27832]",
      "dest": "identifier: _beforeTokenTransfer [27862,27882]"
    },
    {
      "src": "call_argument [40383,40390]",
      "dest": "call_argument [40433,40440]"
    },
    {
      "src": "view: view [5635,5639]",
      "dest": "view: view [5667,5671]"
    },
    {
      "src": "(: ( [27735,27736]",
      "dest": "(: ( [27785,27786]"
    },
    {
      "src": "identifier: mod [14231,14234]",
      "dest": "identifier: mod [14263,14266]"
    },
    {
      "src": "memory: memory [22689,22695]",
      "dest": "memory: memory [22723,22729]"
    },
    {
      "src": "address: address [1615,1622]",
      "dest": "address: address [1584,1591]"
    },
    {
      "src": ">: > [20139,20140]",
      "dest": ">: > [20171,20172]"
    },
    {
      "src": "function: function [15103,15111]",
      "dest": "function: function [15135,15143]"
    },
    {
      "src": "(: ( [4416,4417]",
      "dest": "(: ( [4448,4449]"
    },
    {
      "src": "call_argument [30060,30098]",
      "dest": "call_argument [30110,30148]"
    },
    {
      "src": "yul_identifier [15619,15627]",
      "dest": "yul_identifier [15651,15659]"
    },
    {
      "src": "): ) [37176,37177]",
      "dest": "): ) [37226,37227]"
    },
    {
      "src": "variable_declaration [31799,31814]",
      "dest": "variable_declaration [31849,31864]"
    },
    {
      "src": "function_definition [12864,13142]",
      "dest": "function_definition [12896,13174]"
    },
    {
      "src": "{: { [25451,25452]",
      "dest": "{: { [25501,25502]"
    },
    {
      "src": "event_paramater [4157,4181]",
      "dest": "event_paramater [4189,4213]"
    },
    {
      "src": "identifier: DECIMALS [43431,43439]",
      "dest": "identifier: DECIMALS [48060,48068]"
    },
    {
      "src": "[: [ [26231,26232]",
      "dest": "[: [ [26281,26282]"
    },
    {
      "src": ",: , [22483,22484]",
      "dest": ",: , [22517,22518]"
    },
    {
      "src": "&&: && [41028,41030]",
      "dest": "&&: && [41081,41083]"
    },
    {
      "src": "(: ( [15642,15643]",
      "dest": "(: ( [15674,15675]"
    },
    {
      "src": "}: } [37455,37456]",
      "dest": "}: } [37505,37506]"
    },
    {
      "src": "): ) [26857,26858]",
      "dest": "): ) [26907,26908]"
    },
    {
      "src": "type_name [31799,31806]",
      "dest": "type_name [31849,31856]"
    },
    {
      "src": "identifier: _approve [29946,29954]",
      "dest": "identifier: _approve [29996,30004]"
    },
    {
      "src": "comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [13150,13601]",
      "dest": "comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [13182,13633]"
    },
    {
      "src": "identifier: ProxyStorage [3898,3910]",
      "dest": "identifier: ProxyStorage [3930,3942]"
    },
    {
      "src": "identifier: sender [27833,27839]",
      "dest": "identifier: sender [27883,27889]"
    },
    {
      "src": "parameter [25377,25394]",
      "dest": "parameter [25427,25444]"
    },
    {
      "src": "call_argument [5302,5307]",
      "dest": "call_argument [5334,5339]"
    },
    {
      "src": "boolean_literal [25648,25652]",
      "dest": "boolean_literal [25698,25702]"
    },
    {
      "src": "state_variable_declaration [764,785]",
      "dest": "state_variable_declaration [704,725]"
    },
    {
      "src": "}: } [24548,24549]",
      "dest": "}: } [24598,24599]"
    },
    {
      "src": "primitive_type [1386,1393]",
      "dest": "primitive_type [1326,1333]"
    },
    {
      "src": "block_statement [19985,20029]",
      "dest": "block_statement [20017,20061]"
    },
    {
      "src": ",: , [16983,16984]",
      "dest": ",: , [17015,17016]"
    },
    {
      "src": "(: ( [25536,25537]",
      "dest": "(: ( [25586,25587]"
    },
    {
      "src": "{: { [28434,28435]",
      "dest": "{: { [28484,28485]"
    },
    {
      "src": ",: , [28071,28072]",
      "dest": ",: , [28121,28122]"
    },
    {
      "src": "function: function [9935,9943]",
      "dest": "function: function [9967,9975]"
    },
    {
      "src": "identifier: maxRewardProportion_Deprecated [1920,1950]",
      "dest": "identifier: maxRewardProportion_Deprecated [1952,1982]"
    },
    {
      "src": "primitive_type [28544,28551]",
      "dest": "primitive_type [28594,28601]"
    },
    {
      "src": "identifier: owner [24425,24430]",
      "dest": "identifier: owner [24475,24480]"
    },
    {
      "src": "identifier: errorMessage [19366,19378]",
      "dest": "identifier: errorMessage [19398,19410]"
    },
    {
      "src": "identifier: b [14379,14380]",
      "dest": "identifier: b [14411,14412]"
    },
    {
      "src": "call_expression [25560,25572]",
      "dest": "call_expression [25610,25622]"
    },
    {
      "src": "identifier: sender [25369,25375]",
      "dest": "identifier: sender [25419,25425]"
    },
    {
      "src": "block_statement [39315,39384]",
      "dest": "block_statement [39365,39434]"
    },
    {
      "src": "type_name [18820,18827]",
      "dest": "type_name [18852,18859]"
    },
    {
      "src": "identifier: sender [27882,27888]",
      "dest": "identifier: sender [27932,27938]"
    },
    {
      "src": "=: = [43309,43310]",
      "dest": "=: = [47938,47939]"
    },
    {
      "src": "comment: /**  *  ████████╗██████╗ ██╗   ██╗███████╗██╗   ██╗███████╗██████╗   *  ╚══██╔══╝██╔══██╗██║   ██║██╔════╝██║   ██║██╔════╝██╔══██╗  *     ██║   ██████╔╝██║   ██║█████╗  ██║   ██║███████╗██║  ██║  *     ██║   ██╔══██╗██║   ██║██╔══╝  ██║   ██║╚════██║██║  ██║  *     ██║   ██║  ██║╚██████╔╝███████╗╚██████╔╝███████║██████╔╝  *     ╚═╝   ╚═╝  ╚═╝ ╚═════╝ ╚══════╝ ╚═════╝ ╚══════╝╚═════╝   */ [0,398]",
      "dest": "comment: /**  *  :::==== :::====  :::  === :::===== :::  === :::===  :::====   *  :::==== :::  === :::  === :::      :::  === :::     :::  ===  *    ===   =======  ===  === ======   ===  ===  =====  ===  ===  *    ===   === ===  ===  === ===      ===  ===     === ===  ===  *    ===   ===  ===  ======  ========  ======  ======  =======   */ [0,338]"
    },
    {
      "src": "uint256: uint256 [37821,37828]",
      "dest": "uint256: uint256 [37871,37878]"
    },
    {
      "src": "parameter [19627,19641]",
      "dest": "parameter [19659,19673]"
    },
    {
      "src": "type_name [1912,1919]",
      "dest": "type_name [1944,1951]"
    },
    {
      "src": "comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      *      * - Multiplication cannot overflow.      */ [11038,11283]",
      "dest": "comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      *      * - Multiplication cannot overflow.      */ [11070,11315]"
    },
    {
      "src": "address: address [27584,27591]",
      "dest": "address: address [27634,27641]"
    },
    {
      "src": "return_statement [10100,10109]",
      "dest": "return_statement [10132,10141]"
    },
    {
      "src": "comment: /**      * @dev Returns the symbol of the token, usually a shorter version of the      * name.      */ [22705,22810]",
      "dest": "comment: /**      * @dev Returns the symbol of the token, usually a shorter version of the      * name.      */ [22739,22844]"
    },
    {
      "src": "\": \" [16955,16956]",
      "dest": "\": \" [16987,16988]"
    },
    {
      "src": "\": \" [30176,30177]",
      "dest": "\": \" [30226,30227]"
    },
    {
      "src": "}: } [29496,29497]",
      "dest": "}: } [29546,29547]"
    },
    {
      "src": "): ) [17902,17903]",
      "dest": "): ) [17934,17935]"
    },
    {
      "src": "call_expression [4568,4610]",
      "dest": "call_expression [4600,4642]"
    },
    {
      "src": "state_mutability [43577,43581]",
      "dest": "state_mutability [48206,48210]"
    },
    {
      "src": "address: address [28384,28391]",
      "dest": "address: address [28434,28441]"
    },
    {
      "src": "primitive_type [32745,32752]",
      "dest": "primitive_type [32795,32802]"
    },
    {
      "src": "abstract: abstract [8681,8689]",
      "dest": "abstract: abstract [8713,8721]"
    },
    {
      "src": ",: , [28563,28564]",
      "dest": ",: , [28613,28614]"
    },
    {
      "src": ",: , [24296,24297]",
      "dest": ",: , [24346,24347]"
    },
    {
      "src": "state_variable_declaration [1411,1471]",
      "dest": "state_variable_declaration [1351,1411]"
    },
    {
      "src": "user_defined_type [3898,3910]",
      "dest": "user_defined_type [3930,3942]"
    },
    {
      "src": "comment: /**      * @dev Returns the number of decimals used to get its user representation.      * For example, if `decimals` equals `2`, a balance of `505` tokens should      * be displayed to a user as `5,05` (`505 / 10 ** 2`).      *      * Tokens usually opt for a value of 18, imitating the relationship between      * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is      * called.      *      * NOTE: This information is only used for _display_ purposes: it in      * no way affects any of the arithmetic of the contract, including      * {IERC20-balanceOf} and {IERC20-transfer}.      */ [22886,23510]",
      "dest": "comment: /**      * @dev Returns the number of decimals used to get its user representation.      * For example, if `decimals` equals `2`, a balance of `505` tokens should      * be displayed to a user as `5,05` (`505 / 10 ** 2`).      *      * Tokens usually opt for a value of 18, imitating the relationship between      * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is      * called.      *      * NOTE: This information is only used for _display_ purposes: it in      * no way affects any of the arithmetic of the contract, including      * {IERC20-balanceOf} and {IERC20-transfer}.      */ [22920,23544]"
    },
    {
      "src": "mapping: mapping [1477,1484]",
      "dest": "mapping: mapping [1417,1424]"
    },
    {
      "src": "address: address [5041,5048]",
      "dest": "address: address [5073,5080]"
    },
    {
      "src": "}: } [43746,43747]",
      "dest": "}: } [48375,48376]"
    },
    {
      "src": "(: ( [14234,14235]",
      "dest": "(: ( [14266,14267]"
    },
    {
      "src": "function_definition [37131,37456]",
      "dest": "function_definition [37181,37506]"
    },
    {
      "src": "): ) [12957,12958]",
      "dest": "): ) [12989,12990]"
    },
    {
      "src": "indexed: indexed [8082,8089]",
      "dest": "indexed: indexed [8114,8121]"
    },
    {
      "src": ",: , [38981,38982]",
      "dest": ",: , [39031,39032]"
    },
    {
      "src": "function_body [18335,18414]",
      "dest": "function_body [18367,18446]"
    },
    {
      "src": "parameter [25361,25375]",
      "dest": "parameter [25411,25425]"
    },
    {
      "src": "primitive_type [29111,29118]",
      "dest": "primitive_type [29161,29168]"
    },
    {
      "src": "identifier: _msgData [8837,8845]",
      "dest": "identifier: _msgData [8869,8877]"
    },
    {
      "src": "type_name [1211,1220]",
      "dest": "type_name [1151,1160]"
    },
    {
      "src": "member_expression [29318,29340]",
      "dest": "member_expression [29368,29390]"
    },
    {
      "src": "identifier: value [19938,19943]",
      "dest": "identifier: value [19970,19975]"
    },
    {
      "src": "indexed: indexed [4165,4172]",
      "dest": "indexed: indexed [4197,4204]"
    },
    {
      "src": "): ) [10972,10973]",
      "dest": "): ) [11004,11005]"
    },
    {
      "src": "{: { [42840,42841]",
      "dest": "{: { [47469,47470]"
    },
    {
      "src": "(: ( [28471,28472]",
      "dest": "(: ( [28521,28522]"
    },
    {
      "src": "array_access [27997,28017]",
      "dest": "array_access [28047,28067]"
    },
    {
      "src": "function_definition [23828,23947]",
      "dest": "function_definition [23870,23997]"
    },
    {
      "src": "identifier: spender [26958,26965]",
      "dest": "identifier: spender [27008,27015]"
    },
    {
      "src": "identifier: amount [29277,29283]",
      "dest": "identifier: amount [29327,29333]"
    },
    {
      "src": "visibility [15140,15148]",
      "dest": "visibility [15172,15180]"
    },
    {
      "src": "(: ( [37431,37432]",
      "dest": "(: ( [37481,37482]"
    },
    {
      "src": "identifier: isBlacklisted [38960,38973]",
      "dest": "identifier: isBlacklisted [39010,39023]"
    },
    {
      "src": "visibility [23864,23870]",
      "dest": "visibility [23906,23912]"
    },
    {
      "src": "expression_statement [16968,17047]",
      "dest": "expression_statement [17000,17079]"
    },
    {
      "src": "(: ( [24272,24273]",
      "dest": "(: ( [24322,24323]"
    },
    {
      "src": "identifier: value [19345,19350]",
      "dest": "identifier: value [19377,19382]"
    },
    {
      "src": "identifier: recipient [42887,42896]",
      "dest": "identifier: recipient [47516,47525]"
    },
    {
      "src": "call_expression [24273,24285]",
      "dest": "call_expression [24323,24335]"
    },
    {
      "src": "string [34515,34562]",
      "dest": "string [34565,34612]"
    },
    {
      "src": "if: if [20117,20119]",
      "dest": "if: if [20149,20151]"
    },
    {
      "src": "boolean_literal [986,991]",
      "dest": "boolean_literal [926,931]"
    },
    {
      "src": "function: function [18218,18226]",
      "dest": "function: function [18250,18258]"
    },
    {
      "src": "call_argument [28719,28720]",
      "dest": "call_argument [28769,28770]"
    },
    {
      "src": "binary_expression [40984,41027]",
      "dest": "binary_expression [41037,41080]"
    },
    {
      "src": "identifier: ClaimableOwnable [3878,3894]",
      "dest": "identifier: ClaimableOwnable [3910,3926]"
    },
    {
      "src": "array_access [39040,39065]",
      "dest": "array_access [39090,39115]"
    },
    {
      "src": "identifier: onlyOwner [38355,38364]",
      "dest": "identifier: onlyOwner [38405,38414]"
    },
    {
      "src": "visibility [43561,43567]",
      "dest": "visibility [48190,48196]"
    },
    {
      "src": "identifier: require [12970,12977]",
      "dest": "identifier: require [13002,13009]"
    },
    {
      "src": "}: } [34736,34737]",
      "dest": "}: } [34786,34787]"
    },
    {
      "src": "identifier: amount [6088,6094]",
      "dest": "identifier: amount [6120,6126]"
    },
    {
      "src": "address: address [1504,1511]",
      "dest": "address: address [1444,1451]"
    },
    {
      "src": "type_cast_expression [28711,28721]",
      "dest": "type_cast_expression [28761,28771]"
    },
    {
      "src": "return_type_definition [26874,26888]",
      "dest": "return_type_definition [26924,26938]"
    },
    {
      "src": "primitive_type [7859,7866]",
      "dest": "primitive_type [7891,7898]"
    },
    {
      "src": "(: ( [15122,15123]",
      "dest": "(: ( [15154,15155]"
    },
    {
      "src": "boolean_literal [26275,26279]",
      "dest": "boolean_literal [26325,26329]"
    },
    {
      "src": "(: ( [29460,29461]",
      "dest": "(: ( [29510,29511]"
    },
    {
      "src": "uint256: uint256 [11302,11309]",
      "dest": "uint256: uint256 [11334,11341]"
    },
    {
      "src": "(: ( [42914,42915]",
      "dest": "(: ( [47543,47544]"
    },
    {
      "src": "comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      *      * - Addition cannot overflow.      */ [9696,9929]",
      "dest": "comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      *      * - Addition cannot overflow.      */ [9728,9961]"
    },
    {
      "src": "event: event [7822,7827]",
      "dest": "event: event [7854,7859]"
    },
    {
      "src": "identifier: amount [30221,30227]",
      "dest": "identifier: amount [30271,30277]"
    },
    {
      "src": "identifier: paused_Deprecated [966,983]",
      "dest": "identifier: paused_Deprecated [906,923]"
    },
    {
      "src": "(: ( [5804,5805]",
      "dest": "(: ( [5836,5837]"
    },
    {
      "src": "uint256: uint256 [24197,24204]",
      "dest": "uint256: uint256 [24247,24254]"
    },
    {
      "src": "identifier: spender [30210,30217]",
      "dest": "identifier: spender [30260,30267]"
    },
    {
      "src": "type_name [31742,31748]",
      "dest": "type_name [31792,31798]"
    },
    {
      "src": "public: public [1053,1059]",
      "dest": "public: public [993,999]"
    },
    {
      "src": "\": \" [27677,27678]",
      "dest": "\": \" [27727,27728]"
    },
    {
      "src": "(: ( [22862,22863]",
      "dest": "(: ( [22896,22897]"
    },
    {
      "src": "variable_declaration [19898,19921]",
      "dest": "variable_declaration [19930,19953]"
    },
    {
      "src": "primitive_type [16676,16691]",
      "dest": "primitive_type [16708,16723]"
    },
    {
      "src": "type_name [27603,27610]",
      "dest": "type_name [27653,27660]"
    },
    {
      "src": "): ) [26955,26956]",
      "dest": "): ) [27005,27006]"
    },
    {
      "src": "\": \" [37376,37377]",
      "dest": "\": \" [37426,37427]"
    },
    {
      "src": "override_specifier [23876,23884]",
      "dest": "override_specifier [23926,23934]"
    },
    {
      "src": "comment: /**      * @dev Emitted when `value` tokens are minted for `to`      * @param to address to mint tokens for      * @param value amount of tokens to be minted      */ [36460,36629]",
      "dest": "comment: /**      * @dev Emitted when `value` tokens are minted for `to`      * @param to address to mint tokens for      * @param value amount of tokens to be minted      */ [36510,36679]"
    },
    {
      "src": "type_name [10873,10879]",
      "dest": "type_name [10905,10911]"
    },
    {
      "src": "identifier: account [40992,40999]",
      "dest": "identifier: account [41045,41052]"
    },
    {
      "src": "identifier: subtractedValue [26971,26986]",
      "dest": "identifier: subtractedValue [27021,27036]"
    },
    {
      "src": "call_argument [37330,37377]",
      "dest": "call_argument [37380,37427]"
    },
    {
      "src": "type_name [1574,1581]",
      "dest": "type_name [1543,1550]"
    },
    {
      "src": "member_expression [33241,33251]",
      "dest": "member_expression [33291,33301]"
    },
    {
      "src": "address: address [16747,16754]",
      "dest": "address: address [16779,16786]"
    },
    {
      "src": "}: } [41062,41063]",
      "dest": "}: } [41115,41116]"
    },
    {
      "src": "parameter [8767,8782]",
      "dest": "parameter [8799,8814]"
    },
    {
      "src": "type_name [32478,32485]",
      "dest": "type_name [32528,32535]"
    },
    {
      "src": "identifier: registry_Deprecated [1121,1140]",
      "dest": "identifier: registry_Deprecated [1061,1080]"
    },
    {
      "src": "state_mutability [14294,14298]",
      "dest": "state_mutability [14326,14330]"
    },
    {
      "src": "event_paramater [36432,36450]",
      "dest": "event_paramater [36482,36500]"
    },
    {
      "src": "uint256: uint256 [33893,33900]",
      "dest": "uint256: uint256 [33943,33950]"
    },
    {
      "src": ",: , [29968,29969]",
      "dest": ",: , [30018,30019]"
    },
    {
      "src": "identifier: require [39032,39039]",
      "dest": "identifier: require [39082,39089]"
    },
    {
      "src": "): ) [5780,5781]",
      "dest": "): ) [5812,5813]"
    },
    {
      "src": "}: } [34094,34095]",
      "dest": "}: } [34144,34145]"
    },
    {
      "src": "(: ( [19724,19725]",
      "dest": "(: ( [19756,19757]"
    },
    {
      "src": "function: function [12864,12872]",
      "dest": "function: function [12896,12904]"
    },
    {
      "src": "(: ( [39187,39188]",
      "dest": "(: ( [39237,39238]"
    },
    {
      "src": ",: , [31754,31755]",
      "dest": ",: , [31804,31805]"
    },
    {
      "src": "member_expression [8802,8812]",
      "dest": "member_expression [8834,8844]"
    },
    {
      "src": "{: { [33224,33225]",
      "dest": "{: { [33274,33275]"
    },
    {
      "src": "solidity_pragma_token [41074,41089]",
      "dest": "solidity_pragma_token [41127,41142]"
    },
    {
      "src": "comment: // solhint-disable-next-line no-inline-assembly [15551,15598]",
      "dest": "comment: // solhint-disable-next-line no-inline-assembly [15583,15630]"
    },
    {
      "src": "address: address [24713,24720]",
      "dest": "address: address [24763,24770]"
    },
    {
      "src": "view: view [8857,8861]",
      "dest": "view: view [8889,8893]"
    },
    {
      "src": "function_definition [5014,5118]",
      "dest": "function_definition [5046,5150]"
    },
    {
      "src": "array_access [26206,26231]",
      "dest": "array_access [26256,26281]"
    },
    {
      "src": "event_definition [36389,36452]",
      "dest": "event_definition [36439,36502]"
    },
    {
      "src": "): ) [13672,13673]",
      "dest": "): ) [13704,13705]"
    },
    {
      "src": "identifier: account [29307,29314]",
      "dest": "identifier: account [29357,29364]"
    },
    {
      "src": "call_expression [26944,26956]",
      "dest": "call_expression [26994,27006]"
    },
    {
      "src": "): ) [42503,42504]",
      "dest": "): ) [47304,47305]"
    },
    {
      "src": "identifier: recipient [38872,38881]",
      "dest": "identifier: recipient [38922,38931]"
    },
    {
      "src": "}: } [9063,9064]",
      "dest": "}: } [9095,9096]"
    },
    {
      "src": "primitive_type [19643,19648]",
      "dest": "primitive_type [19675,19680]"
    },
    {
      "src": ",: , [39717,39718]",
      "dest": ",: , [39767,39768]"
    },
    {
      "src": "call_argument [33253,33259]",
      "dest": "call_argument [33303,33309]"
    },
    {
      "src": "call_argument [39810,39853]",
      "dest": "call_argument [39860,39903]"
    },
    {
      "src": "modifier_invocation [5066,5075]",
      "dest": "modifier_invocation [5098,5107]"
    },
    {
      "src": "call_argument [24819,24826]",
      "dest": "call_argument [24869,24876]"
    },
    {
      "src": "}: } [28746,28747]",
      "dest": "}: } [28796,28797]"
    },
    {
      "src": "(: ( [40295,40296]",
      "dest": "(: ( [40345,40346]"
    },
    {
      "src": "identifier: _msgSender [8723,8733]",
      "dest": "identifier: _msgSender [8755,8765]"
    },
    {
      "src": "function: function [19271,19279]",
      "dest": "function: function [19303,19311]"
    },
    {
      "src": "comment: /**      * @dev See {IERC20-transferFrom}.      *      * Emits an {Approval} event indicating the updated allowance. This is not      * required by the EIP. See the note at the beginning of {ERC20};      *      * Requirements:      * - `sender` and `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      * - the caller must have allowance for ``sender``'s tokens of at least      * `amount`.      */ [24873,25333]",
      "dest": "comment: /**      * @dev See {IERC20-transferFrom}.      *      * Emits an {Approval} event indicating the updated allowance. This is not      * required by the EIP. See the note at the beginning of {ERC20};      *      * Requirements:      * - `sender` and `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      * - the caller must have allowance for ``sender``'s tokens of at least      * `amount`.      */ [24923,25383]"
    },
    {
      "src": "parameter [39728,39742]",
      "dest": "parameter [39778,39792]"
    },
    {
      "src": "address: address [31833,31840]",
      "dest": "address: address [31883,31890]"
    },
    {
      "src": "visibility [14285,14293]",
      "dest": "visibility [14317,14325]"
    },
    {
      "src": "type_name [29111,29118]",
      "dest": "type_name [29161,29168]"
    },
    {
      "src": "\": \" [17978,17979]",
      "dest": "\": \" [18010,18011]"
    },
    {
      "src": "contract_body [757,3617]",
      "dest": "contract_body [697,3649]"
    },
    {
      "src": "type_name [19318,19323]",
      "dest": "type_name [19350,19355]"
    },
    {
      "src": "type_name [6423,6430]",
      "dest": "type_name [6455,6462]"
    },
    {
      "src": "function_body [16728,17054]",
      "dest": "function_body [16760,17086]"
    },
    {
      "src": "identifier: _functionCallWithValue [19604,19626]",
      "dest": "identifier: _functionCallWithValue [19636,19658]"
    },
    {
      "src": "emit: emit [30238,30242]",
      "dest": "emit: emit [30288,30292]"
    },
    {
      "src": "return_type_definition [10448,10465]",
      "dest": "return_type_definition [10480,10497]"
    },
    {
      "src": "(: ( [28718,28719]",
      "dest": "(: ( [28768,28769]"
    },
    {
      "src": "call_argument [39354,39363]",
      "dest": "call_argument [39404,39413]"
    },
    {
      "src": "primitive_type [1375,1382]",
      "dest": "primitive_type [1315,1322]"
    },
    {
      "src": "view: view [8745,8749]",
      "dest": "view: view [8777,8781]"
    },
    {
      "src": "revert: revert [20417,20423]",
      "dest": "revert: revert [20449,20455]"
    },
    {
      "src": "identifier: amount [34685,34691]",
      "dest": "identifier: amount [34735,34741]"
    },
    {
      "src": "): ) [29479,29480]",
      "dest": "): ) [29529,29530]"
    },
    {
      "src": "identifier: _burn [34670,34675]",
      "dest": "identifier: _burn [34720,34725]"
    },
    {
      "src": "): ) [27758,27759]",
      "dest": "): ) [27808,27809]"
    },
    {
      "src": "identifier: account [37153,37160]",
      "dest": "identifier: account [37203,37210]"
    },
    {
      "src": "identifier: recipient [6069,6078]",
      "dest": "identifier: recipient [6101,6110]"
    },
    {
      "src": "identifier: recipient [42266,42275]",
      "dest": "identifier: recipient [47067,47076]"
    },
    {
      "src": "identifier: account [36423,36430]",
      "dest": "identifier: account [36473,36480]"
    },
    {
      "src": "return: return [24316,24322]",
      "dest": "return: return [24366,24372]"
    },
    {
      "src": "primitive_type [28464,28471]",
      "dest": "primitive_type [28514,28521]"
    },
    {
      "src": "primitive_type [27749,27756]",
      "dest": "primitive_type [27799,27806]"
    },
    {
      "src": "call_argument [30056,30057]",
      "dest": "call_argument [30106,30107]"
    },
    {
      "src": "(: ( [5040,5041]",
      "dest": "(: ( [5072,5073]"
    },
    {
      "src": "virtual: virtual [8750,8757]",
      "dest": "virtual: virtual [8782,8789]"
    },
    {
      "src": "string [25586,25628]",
      "dest": "string [25636,25678]"
    },
    {
      "src": "return: return [43424,43430]",
      "dest": "return: return [48053,48059]"
    },
    {
      "src": "function_definition [37721,38043]",
      "dest": "function_definition [37771,38093]"
    },
    {
      "src": "member_expression [9045,9053]",
      "dest": "member_expression [9077,9085]"
    },
    {
      "src": "(: ( [23893,23894]",
      "dest": "(: ( [23943,23944]"
    },
    {
      "src": "call_argument [16954,16956]",
      "dest": "call_argument [16986,16988]"
    },
    {
      "src": "identifier: c [10021,10022]",
      "dest": "identifier: c [10053,10054]"
    },
    {
      "src": "): ) [33259,33260]",
      "dest": "): ) [33309,33310]"
    },
    {
      "src": "): ) [1652,1653]",
      "dest": "): ) [1621,1622]"
    },
    {
      "src": "primitive_type [32761,32768]",
      "dest": "primitive_type [32811,32818]"
    },
    {
      "src": "&&: && [15695,15697]",
      "dest": "&&: && [15727,15729]"
    },
    {
      "src": "identifier: _transfer [24263,24272]",
      "dest": "identifier: _transfer [24313,24322]"
    },
    {
      "src": "return_statement [13685,13730]",
      "dest": "return_statement [13717,13762]"
    },
    {
      "src": "identifier: approve [24705,24712]",
      "dest": "identifier: approve [24755,24762]"
    },
    {
      "src": "): ) [20460,20461]",
      "dest": "): ) [20492,20493]"
    },
    {
      "src": "address: address [40226,40233]",
      "dest": "address: address [40276,40283]"
    },
    {
      "src": "primitive_type [1705,1712]",
      "dest": "primitive_type [1674,1681]"
    },
    {
      "src": "call_argument [30141,30177]",
      "dest": "call_argument [30191,30227]"
    },
    {
      "src": "call_expression [25540,25629]",
      "dest": "call_expression [25590,25679]"
    },
    {
      "src": "function: function [7548,7556]",
      "dest": "function: function [7580,7588]"
    },
    {
      "src": "event_paramater [36407,36430]",
      "dest": "event_paramater [36457,36480]"
    },
    {
      "src": "state_variable_declaration [43320,43348]",
      "dest": "state_variable_declaration [47949,47977]"
    },
    {
      "src": "=: = [30219,30220]",
      "dest": "=: = [30269,30270]"
    },
    {
      "src": "return_statement [12314,12361]",
      "dest": "return_statement [12346,12393]"
    },
    {
      "src": "string_literal [39913,39958]",
      "dest": "string_literal [39963,40008]"
    },
    {
      "src": "primitive_type [1308,1315]",
      "dest": "primitive_type [1248,1255]"
    },
    {
      "src": "type_name [18256,18261]",
      "dest": "type_name [18288,18293]"
    },
    {
      "src": "primitive_type [953,957]",
      "dest": "primitive_type [893,897]"
    },
    {
      "src": "): ) [39107,39108]",
      "dest": "): ) [39157,39158]"
    },
    {
      "src": "parameter [18275,18301]",
      "dest": "parameter [18307,18333]"
    },
    {
      "src": ",: , [19776,19777]",
      "dest": ",: , [19808,19809]"
    },
    {
      "src": "override_specifier [38931,38939]",
      "dest": "override_specifier [38981,38989]"
    },
    {
      "src": ",: , [18273,18274]",
      "dest": ",: , [18305,18306]"
    },
    {
      "src": "call_argument [37432,37439]",
      "dest": "call_argument [37482,37489]"
    },
    {
      "src": "primitive_type [1574,1581]",
      "dest": "primitive_type [1543,1550]"
    },
    {
      "src": "\": \" [4608,4609]",
      "dest": "\": \" [4640,4641]"
    },
    {
      "src": ",: , [27601,27602]",
      "dest": ",: , [27651,27652]"
    },
    {
      "src": "identifier: isBlacklisted [39041,39054]",
      "dest": "identifier: isBlacklisted [39091,39104]"
    },
    {
      "src": "call_argument [40296,40312]",
      "dest": "call_argument [40346,40362]"
    },
    {
      "src": "call_argument [4576,4595]",
      "dest": "call_argument [4608,4627]"
    },
    {
      "src": "uint256: uint256 [1780,1787]",
      "dest": "uint256: uint256 [1812,1819]"
    },
    {
      "src": "visibility [24449,24455]",
      "dest": "visibility [24499,24505]"
    },
    {
      "src": ",: , [24817,24818]",
      "dest": ",: , [24867,24868]"
    },
    {
      "src": "type_name [12950,12957]",
      "dest": "type_name [12982,12989]"
    },
    {
      "src": "identifier: b [14336,14337]",
      "dest": "identifier: b [14368,14369]"
    },
    {
      "src": "payable: payable [31413,31420]",
      "dest": "payable: payable [31463,31470]"
    },
    {
      "src": "\": \" [13702,13703]",
      "dest": "\": \" [13734,13735]"
    },
    {
      "src": "memory: memory [18894,18900]",
      "dest": "memory: memory [18926,18932]"
    },
    {
      "src": "expression_statement [12970,12999]",
      "dest": "expression_statement [13002,13031]"
    },
    {
      "src": "identifier: sender [38974,38980]",
      "dest": "identifier: sender [39024,39030]"
    },
    {
      "src": "): ) [25497,25498]",
      "dest": "): ) [25547,25548]"
    },
    {
      "src": "\": \" [28508,28509]",
      "dest": "\": \" [28558,28559]"
    },
    {
      "src": "internal: internal [13642,13650]",
      "dest": "internal: internal [13674,13682]"
    },
    {
      "src": "inheritance_specifier [32229,32243]",
      "dest": "inheritance_specifier [32279,32293]"
    },
    {
      "src": "identifier: owner [39802,39807]",
      "dest": "identifier: owner [39852,39857]"
    },
    {
      "src": "returns: returns [6469,6476]",
      "dest": "returns: returns [6501,6508]"
    },
    {
      "src": "bool: bool [1985,1989]",
      "dest": "bool: bool [2017,2021]"
    },
    {
      "src": "state_variable_declaration [1113,1141]",
      "dest": "state_variable_declaration [1053,1081]"
    },
    {
      "src": "identifier: add [28675,28678]",
      "dest": "identifier: add [28725,28728]"
    },
    {
      "src": "identifier: require [10944,10951]",
      "dest": "identifier: require [10976,10983]"
    },
    {
      "src": "(: ( [30251,30252]",
      "dest": "(: ( [30301,30302]"
    },
    {
      "src": "address: address [42068,42075]",
      "dest": "address: address [46869,46876]"
    },
    {
      "src": "external: external [7621,7629]",
      "dest": "external: external [7653,7661]"
    },
    {
      "src": "type_name [29094,29101]",
      "dest": "type_name [29144,29151]"
    },
    {
      "src": "identifier: owner [30203,30208]",
      "dest": "identifier: owner [30253,30258]"
    },
    {
      "src": "type_cast_expression [42907,42930]",
      "dest": "type_cast_expression [47536,47559]"
    },
    {
      "src": "call_expression [33937,33996]",
      "dest": "call_expression [33987,34046]"
    },
    {
      "src": "solidity_pragma_token [3628,3643]",
      "dest": "solidity_pragma_token [3660,3675]"
    },
    {
      "src": "function_body [26163,26287]",
      "dest": "function_body [26213,26337]"
    },
    {
      "src": ",: , [42057,42058]",
      "dest": ",: , [46858,46859]"
    },
    {
      "src": "(: ( [10487,10488]",
      "dest": "(: ( [10519,10520]"
    },
    {
      "src": "return_statement [8795,8813]",
      "dest": "return_statement [8827,8845]"
    },
    {
      "src": "identifier: pendingOwner [4800,4812]",
      "dest": "identifier: pendingOwner [4832,4844]"
    },
    {
      "src": "address: address [6423,6430]",
      "dest": "address: address [6455,6462]"
    },
    {
      "src": "address: address [30980,30987]",
      "dest": "address: address [31030,31037]"
    },
    {
      "src": "): ) [40257,40258]",
      "dest": "): ) [40307,40308]"
    },
    {
      "src": "primitive_type [886,893]",
      "dest": "primitive_type [826,833]"
    },
    {
      "src": "type_name [36407,36414]",
      "dest": "type_name [36457,36464]"
    },
    {
      "src": "memory: memory [18842,18848]",
      "dest": "memory: memory [18874,18880]"
    },
    {
      "src": "parameter [11313,11322]",
      "dest": "parameter [11345,11354]"
    },
    {
      "src": "identifier: amount [27852,27858]",
      "dest": "identifier: amount [27902,27908]"
    },
    {
      "src": "comment: /**      * @dev Returns the remaining number of tokens that `spender` will be      * allowed to spend on behalf of `owner` through {transferFrom}. This is      * zero by default.      *      * This value changes when {approve} or {transferFrom} are called.      */ [6128,6398]",
      "dest": "comment: /**      * @dev Returns the remaining number of tokens that `spender` will be      * allowed to spend on behalf of `owner` through {transferFrom}. This is      * zero by default.      *      * This value changes when {approve} or {transferFrom} are called.      */ [6160,6430]"
    },
    {
      "src": "member_expression [31858,31872]",
      "dest": "member_expression [31908,31922]"
    },
    {
      "src": "identifier: account [15131,15138]",
      "dest": "identifier: account [15163,15170]"
    },
    {
      "src": "identifier: decimals [23525,23533]",
      "dest": "identifier: decimals [23559,23567]"
    },
    {
      "src": "type_name [1855,1873]",
      "dest": "type_name [1887,1905]"
    },
    {
      "src": "identifier: amount [25578,25584]",
      "dest": "identifier: amount [25628,25634]"
    },
    {
      "src": "state_variable_declaration [1912,1958]",
      "dest": "state_variable_declaration [1944,1990]"
    },
    {
      "src": "identifier: _min [34017,34021]",
      "dest": "identifier: _min [34067,34071]"
    },
    {
      "src": "binary_expression [10952,10958]",
      "dest": "binary_expression [10984,10990]"
    },
    {
      "src": "pure: pure [23551,23555]",
      "dest": "pure: pure [23585,23589]"
    },
    {
      "src": "identifier: recipient [39354,39363]",
      "dest": "identifier: recipient [39404,39413]"
    },
    {
      "src": "number_literal: 0 [29478,29479]",
      "dest": "number_literal: 0 [29528,29529]"
    },
    {
      "src": "expression_statement [30031,30100]",
      "dest": "expression_statement [30081,30150]"
    },
    {
      "src": ",: , [31876,31877]",
      "dest": ",: , [31926,31927]"
    },
    {
      "src": "uint256: uint256 [1386,1393]",
      "dest": "uint256: uint256 [1326,1333]"
    },
    {
      "src": "comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP.  */ [5431,5503]",
      "dest": "comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP.  */ [5463,5535]"
    },
    {
      "src": ",: , [30139,30140]",
      "dest": ",: , [30189,30190]"
    },
    {
      "src": "): ) [6118,6119]",
      "dest": "): ) [6150,6151]"
    },
    {
      "src": "{: { [17904,17905]",
      "dest": "{: { [17936,17937]"
    },
    {
      "src": "uint256: uint256 [1211,1218]",
      "dest": "uint256: uint256 [1151,1158]"
    },
    {
      "src": "call_argument [25586,25628]",
      "dest": "call_argument [25636,25678]"
    },
    {
      "src": "type_cast_expression [28464,28474]",
      "dest": "type_cast_expression [28514,28524]"
    },
    {
      "src": "primitive_type [19680,19686]",
      "dest": "primitive_type [19712,19718]"
    },
    {
      "src": "primitive_type [22559,22566]",
      "dest": "primitive_type [22593,22600]"
    },
    {
      "src": "(: ( [1973,1974]",
      "dest": "(: ( [2005,2006]"
    },
    {
      "src": "type_name [7639,7643]",
      "dest": "type_name [7671,7675]"
    },
    {
      "src": "binary_expression [37821,37865]",
      "dest": "binary_expression [37871,37915]"
    },
    {
      "src": "identifier: value [19559,19564]",
      "dest": "identifier: value [19591,19596]"
    },
    {
      "src": "uint256: uint256 [28401,28408]",
      "dest": "uint256: uint256 [28451,28458]"
    },
    {
      "src": "}: } [17987,17988]",
      "dest": "}: } [18019,18020]"
    },
    {
      "src": "identifier: _approve [39978,39986]",
      "dest": "identifier: _approve [40028,40036]"
    },
    {
      "src": "expression_statement [39172,39237]",
      "dest": "expression_statement [39222,39287]"
    },
    {
      "src": ",: , [30058,30059]",
      "dest": ",: , [30108,30109]"
    },
    {
      "src": "state_mutability [10443,10447]",
      "dest": "state_mutability [10475,10479]"
    },
    {
      "src": "internal: internal [10901,10909]",
      "dest": "internal: internal [10933,10941]"
    },
    {
      "src": "constant: constant [43291,43299]",
      "dest": "constant: constant [47920,47928]"
    },
    {
      "src": "visibility [42118,42126]",
      "dest": "visibility [46919,46927]"
    },
    {
      "src": "type_name [23894,23901]",
      "dest": "type_name [23944,23951]"
    },
    {
      "src": "identifier: subtractedValue [26842,26857]",
      "dest": "identifier: subtractedValue [26892,26907]"
    },
    {
      "src": "bool: bool [2030,2034]",
      "dest": "bool: bool [2062,2066]"
    },
    {
      "src": "identifier: _balances [29297,29306]",
      "dest": "identifier: _balances [29347,29356]"
    },
    {
      "src": "visibility [43667,43673]",
      "dest": "visibility [48296,48302]"
    },
    {
      "src": "parameter [37762,37781]",
      "dest": "parameter [37812,37831]"
    },
    {
      "src": "function: function [42747,42755]",
      "dest": "function: function [47376,47384]"
    },
    {
      "src": "function_definition [24160,24335]",
      "dest": "function_definition [24210,24385]"
    },
    {
      "src": "return: return [13126,13132]",
      "dest": "return: return [13158,13164]"
    },
    {
      "src": "identifier: spender [39710,39717]",
      "dest": "identifier: spender [39760,39767]"
    },
    {
      "src": "bool: bool [16904,16908]",
      "dest": "bool: bool [16936,16940]"
    },
    {
      "src": "(: ( [27672,27673]",
      "dest": "(: ( [27722,27723]"
    },
    {
      "src": "binary_expression [34496,34513]",
      "dest": "binary_expression [34546,34563]"
    },
    {
      "src": "primitive_type [36407,36414]",
      "dest": "primitive_type [36457,36464]"
    },
    {
      "src": ",: , [37239,37240]",
      "dest": ",: , [37289,37290]"
    },
    {
      "src": "(: ( [26228,26229]",
      "dest": "(: ( [26278,26279]"
    },
    {
      "src": "(: ( [14307,14308]",
      "dest": "(: ( [14339,14340]"
    },
    {
      "src": "call_argument [25480,25489]",
      "dest": "call_argument [25530,25539]"
    },
    {
      "src": ",: , [24195,24196]",
      "dest": ",: , [24245,24246]"
    },
    {
      "src": "identifier: _msgSender [24273,24283]",
      "dest": "identifier: _msgSender [24323,24333]"
    },
    {
      "src": "identifier: IERC20 [5515,5521]",
      "dest": "identifier: IERC20 [5547,5553]"
    },
    {
      "src": "bool: bool [7224,7228]",
      "dest": "bool: bool [7256,7260]"
    },
    {
      "src": ",: , [18948,18949]",
      "dest": ",: , [18980,18981]"
    },
    {
      "src": "(: ( [19768,19769]",
      "dest": "(: ( [19800,19801]"
    },
    {
      "src": "call_argument [28565,28571]",
      "dest": "call_argument [28615,28621]"
    },
    {
      "src": "[: [ [39801,39802]",
      "dest": "[: [ [39851,39852]"
    },
    {
      "src": "solidity: solidity [9075,9083]",
      "dest": "solidity: solidity [9107,9115]"
    },
    {
      "src": "(: ( [16903,16904]",
      "dest": "(: ( [16935,16936]"
    },
    {
      "src": "identifier: _totalSupply [29412,29424]",
      "dest": "identifier: _totalSupply [29462,29474]"
    },
    {
      "src": "): ) [23570,23571]",
      "dest": "): ) [23604,23605]"
    },
    {
      "src": "parameter [34418,34433]",
      "dest": "parameter [34468,34483]"
    },
    {
      "src": "visibility [25412,25418]",
      "dest": "visibility [25462,25468]"
    },
    {
      "src": "array_access [30191,30218]",
      "dest": "array_access [30241,30268]"
    },
    {
      "src": "yul_function_call [20417,20461]",
      "dest": "yul_function_call [20449,20493]"
    },
    {
      "src": "returns: returns [15154,15161]",
      "dest": "returns: returns [15186,15193]"
    },
    {
      "src": "call_expression [37208,37280]",
      "dest": "call_expression [37258,37330]"
    },
    {
      "src": "): ) [18333,18334]",
      "dest": "): ) [18365,18366]"
    },
    {
      "src": "type_name [24779,24783]",
      "dest": "type_name [24829,24833]"
    },
    {
      "src": "call_argument [39873,39911]",
      "dest": "call_argument [39923,39961]"
    },
    {
      "src": "}: } [39390,39391]",
      "dest": "}: } [39440,39441]"
    },
    {
      "src": "type_name [36214,36221]",
      "dest": "type_name [36264,36271]"
    },
    {
      "src": "call_expression [28600,28624]",
      "dest": "call_expression [28650,28674]"
    },
    {
      "src": "identifier: a [10420,10421]",
      "dest": "identifier: a [10452,10453]"
    },
    {
      "src": "type_name [19627,19634]",
      "dest": "type_name [19659,19666]"
    },
    {
      "src": "type_name [10457,10464]",
      "dest": "type_name [10489,10496]"
    },
    {
      "src": "identifier: mint [37140,37144]",
      "dest": "identifier: mint [37190,37194]"
    },
    {
      "src": "number_literal: 0 [39910,39911]",
      "dest": "number_literal: 0 [39960,39961]"
    },
    {
      "src": "primitive_type [24779,24783]",
      "dest": "primitive_type [24829,24833]"
    },
    {
      "src": "=: = [29316,29317]",
      "dest": "=: = [29366,29367]"
    },
    {
      "src": "call_expression [31817,31847]",
      "dest": "call_expression [31867,31897]"
    },
    {
      "src": "type_name [31756,31763]",
      "dest": "type_name [31806,31813]"
    },
    {
      "src": "call_argument [34685,34691]",
      "dest": "call_argument [34735,34741]"
    },
    {
      "src": "returns: returns [22854,22861]",
      "dest": "returns: returns [22888,22895]"
    },
    {
      "src": "identifier: to [36662,36664]",
      "dest": "identifier: to [36712,36714]"
    },
    {
      "src": "primitive_type [23894,23901]",
      "dest": "primitive_type [23944,23951]"
    },
    {
      "src": "]: ] [26230,26231]",
      "dest": "]: ] [26280,26281]"
    },
    {
      "src": "parameter [27603,27617]",
      "dest": "parameter [27653,27667]"
    },
    {
      "src": "identifier: amount [28073,28079]",
      "dest": "identifier: amount [28123,28129]"
    },
    {
      "src": "primitive_type [24432,24439]",
      "dest": "primitive_type [24482,24489]"
    },
    {
      "src": ",: , [26111,26112]",
      "dest": ",: , [26161,26162]"
    },
    {
      "src": "identifier: returndata_size [20445,20460]",
      "dest": "identifier: returndata_size [20477,20492]"
    },
    {
      "src": "type_name [7570,7577]",
      "dest": "type_name [7602,7609]"
    },
    {
      "src": "(: ( [11346,11347]",
      "dest": "(: ( [11378,11379]"
    },
    {
      "src": "identifier: burnMax [34032,34039]",
      "dest": "identifier: burnMax [34082,34089]"
    },
    {
      "src": "primitive_type [42783,42790]",
      "dest": "primitive_type [47412,47419]"
    },
    {
      "src": "identifier: _transfer [25462,25471]",
      "dest": "identifier: _transfer [25512,25521]"
    },
    {
      "src": "primitive_type [1780,1787]",
      "dest": "primitive_type [1812,1819]"
    },
    {
      "src": "{: { [19936,19937]",
      "dest": "{: { [19968,19969]"
    },
    {
      "src": "type_name [1705,1712]",
      "dest": "type_name [1674,1681]"
    },
    {
      "src": "call_argument [5309,5321]",
      "dest": "call_argument [5341,5353]"
    },
    {
      "src": "primitive_type [15123,15130]",
      "dest": "primitive_type [15155,15162]"
    },
    {
      "src": "parameter [42096,42110]",
      "dest": "parameter [46897,46911]"
    },
    {
      "src": "): ) [17045,17046]",
      "dest": "): ) [17077,17078]"
    },
    {
      "src": ",: , [19641,19642]",
      "dest": ",: , [19673,19674]"
    },
    {
      "src": "): ) [34086,34087]",
      "dest": "): ) [34136,34137]"
    },
    {
      "src": "{: { [19412,19413]",
      "dest": "{: { [19444,19445]"
    },
    {
      "src": "(: ( [34417,34418]",
      "dest": "(: ( [34467,34468]"
    },
    {
      "src": "identifier: _transfer [27558,27567]",
      "dest": "identifier: _transfer [27608,27617]"
    },
    {
      "src": "expression_statement [29155,29223]",
      "dest": "expression_statement [29205,29273]"
    },
    {
      "src": "): ) [8734,8735]",
      "dest": "): ) [8766,8767]"
    },
    {
      "src": "(: ( [24416,24417]",
      "dest": "(: ( [24466,24467]"
    },
    {
      "src": "(: ( [42032,42033]",
      "dest": "(: ( [46833,46834]"
    },
    {
      "src": ",: , [29480,29481]",
      "dest": ",: , [29530,29531]"
    },
    {
      "src": "comment: // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522 [11507,11578]",
      "dest": "comment: // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522 [11539,11610]"
    },
    {
      "src": "emit: emit [28697,28701]",
      "dest": "emit: emit [28747,28751]"
    },
    {
      "src": "{: { [43278,43279]",
      "dest": "{: { [47907,47908]"
    },
    {
      "src": "pragma_directive [14395,14418]",
      "dest": "pragma_directive [14427,14450]"
    },
    {
      "src": "visibility [12927,12935]",
      "dest": "visibility [12959,12967]"
    },
    {
      "src": "return_statement [23738,23758]",
      "dest": "return_statement [23780,23800]"
    },
    {
      "src": "function: function [12236,12244]",
      "dest": "function: function [12268,12276]"
    },
    {
      "src": "primitive_type [14257,14263]",
      "dest": "primitive_type [14289,14295]"
    },
    {
      "src": "\": \" [4814,4815]",
      "dest": "\": \" [4846,4847]"
    },
    {
      "src": "address: address [24417,24424]",
      "dest": "address: address [24467,24474]"
    },
    {
      "src": "yul_path [15619,15627]",
      "dest": "yul_path [15651,15659]"
    },
    {
      "src": "bytes: bytes [18256,18261]",
      "dest": "bytes: bytes [18288,18293]"
    },
    {
      "src": "modifier_invocation [31435,31444]",
      "dest": "modifier_invocation [31485,31494]"
    },
    {
      "src": "): ) [6094,6095]",
      "dest": "): ) [6126,6127]"
    },
    {
      "src": "identifier: reclaimToken [31729,31741]",
      "dest": "identifier: reclaimToken [31779,31791]"
    },
    {
      "src": "uint256: uint256 [10412,10419]",
      "dest": "uint256: uint256 [10444,10451]"
    },
    {
      "src": "): ) [27858,27859]",
      "dest": "): ) [27908,27909]"
    },
    {
      "src": "string [29349,29385]",
      "dest": "string [29399,29435]"
    },
    {
      "src": "identifier: require [37208,37215]",
      "dest": "identifier: require [37258,37265]"
    },
    {
      "src": "||: || [42937,42939]",
      "dest": "||: || [47566,47568]"
    },
    {
      "src": "string: string [12899,12905]",
      "dest": "string: string [12931,12937]"
    },
    {
      "src": "return: return [11615,11621]",
      "dest": "return: return [11647,11653]"
    },
    {
      "src": "type_name [24197,24204]",
      "dest": "type_name [24247,24254]"
    },
    {
      "src": "<: < [41001,41002]",
      "dest": "<: < [41054,41055]"
    },
    {
      "src": "function: function [29937,29945]",
      "dest": "function: function [29987,29995]"
    },
    {
      "src": "using_directive [22508,22535]",
      "dest": "using_directive [22542,22569]"
    },
    {
      "src": "^:  ^ [5419,5421]",
      "dest": "^:  ^ [5451,5453]"
    },
    {
      "src": "identifier: sub [10408,10411]",
      "dest": "identifier: sub [10440,10443]"
    },
    {
      "src": "primitive_type [10412,10419]",
      "dest": "primitive_type [10444,10451]"
    },
    {
      "src": "primitive_type [13620,13627]",
      "dest": "primitive_type [13652,13659]"
    },
    {
      "src": ">=: >= [10051,10053]",
      "dest": ">=: >= [10083,10085]"
    },
    {
      "src": "visibility [30003,30011]",
      "dest": "visibility [30053,30061]"
    },
    {
      "src": "array_access [30191,30209]",
      "dest": "array_access [30241,30259]"
    },
    {
      "src": "uint256: uint256 [1912,1919]",
      "dest": "uint256: uint256 [1944,1951]"
    },
    {
      "src": "=>: => [1427,1429]",
      "dest": "=>: => [1367,1369]"
    },
    {
      "src": "(: ( [29093,29094]",
      "dest": "(: ( [29143,29144]"
    },
    {
      "src": "identifier: ROUNDING [43335,43343]",
      "dest": "identifier: ROUNDING [47964,47972]"
    },
    {
      "src": "identifier: spender [39888,39895]",
      "dest": "identifier: spender [39938,39945]"
    },
    {
      "src": "(: ( [29340,29341]",
      "dest": "(: ( [29390,29391]"
    },
    {
      "src": "variable_declaration_statement [15425,15442]",
      "dest": "variable_declaration_statement [15457,15474]"
    },
    {
      "src": "state_mutability [15149,15153]",
      "dest": "state_mutability [15181,15185]"
    },
    {
      "src": "[: [ [29306,29307]",
      "dest": "[: [ [29356,29357]"
    },
    {
      "src": "return: return [42851,42857]",
      "dest": "return: return [47480,47486]"
    },
    {
      "src": "primitive_type [26834,26841]",
      "dest": "primitive_type [26884,26891]"
    },
    {
      "src": "extcodehash: extcodehash [15631,15642]",
      "dest": "extcodehash: extcodehash [15663,15674]"
    },
    {
      "src": "primitive_type [18240,18247]",
      "dest": "primitive_type [18272,18279]"
    },
    {
      "src": "parameter [37745,37760]",
      "dest": "parameter [37795,37810]"
    },
    {
      "src": "=: = [36236,36237]",
      "dest": "=: = [36286,36287]"
    },
    {
      "src": "type_name [19398,19403]",
      "dest": "type_name [19430,19435]"
    },
    {
      "src": "modifier_invocation [37187,37196]",
      "dest": "modifier_invocation [37237,37246]"
    },
    {
      "src": ",: , [28721,28722]",
      "dest": ",: , [28771,28772]"
    },
    {
      "src": ",: , [42967,42968]",
      "dest": ",: , [47596,47597]"
    },
    {
      "src": "assembly: assembly [15608,15616]",
      "dest": "assembly: assembly [15640,15648]"
    },
    {
      "src": "identifier: amount [39900,39906]",
      "dest": "identifier: amount [39950,39956]"
    },
    {
      "src": "): ) [34728,34729]",
      "dest": "): ) [34778,34779]"
    },
    {
      "src": "identifier: owner [30039,30044]",
      "dest": "identifier: owner [30089,30094]"
    },
    {
      "src": "primitive_type [1645,1652]",
      "dest": "primitive_type [1614,1621]"
    },
    {
      "src": "return_type_definition [23885,23902]",
      "dest": "return_type_definition [23935,23952]"
    },
    {
      "src": "binary_expression [20121,20142]",
      "dest": "binary_expression [20153,20174]"
    },
    {
      "src": "expression_statement [29297,29387]",
      "dest": "expression_statement [29347,29437]"
    },
    {
      "src": "call_expression [34664,34692]",
      "dest": "call_expression [34714,34742]"
    },
    {
      "src": "return_statement [15663,15715]",
      "dest": "return_statement [15695,15747]"
    },
    {
      "src": "function_body [17904,17988]",
      "dest": "function_body [17936,18020]"
    },
    {
      "src": "pure: pure [9979,9983]",
      "dest": "pure: pure [10011,10015]"
    },
    {
      "src": "}: } [11759,11760]",
      "dest": "}: } [11791,11792]"
    },
    {
      "src": "primitive_type [37145,37152]",
      "dest": "primitive_type [37195,37202]"
    },
    {
      "src": "identifier: _canBurn [38395,38403]",
      "dest": "identifier: _canBurn [38445,38453]"
    },
    {
      "src": "identifier: owner [39987,39992]",
      "dest": "identifier: owner [40037,40042]"
    },
    {
      "src": "function_definition [40891,41060]",
      "dest": "function_definition [40944,41113]"
    },
    {
      "src": "primitive_type [6061,6068]",
      "dest": "primitive_type [6093,6100]"
    },
    {
      "src": "for: for [22523,22526]",
      "dest": "for: for [22557,22560]"
    },
    {
      "src": "solidity_version_comparison_operator [9083,9085]",
      "dest": "solidity_version_comparison_operator [9115,9117]"
    },
    {
      "src": "call_expression [26909,26921]",
      "dest": "call_expression [26959,26971]"
    },
    {
      "src": "function_definition [38294,38411]",
      "dest": "function_definition [38344,38461]"
    },
    {
      "src": ",: , [42085,42086]",
      "dest": ",: , [46886,46887]"
    },
    {
      "src": "[: [ [28644,28645]",
      "dest": "[: [ [28694,28695]"
    },
    {
      "src": "primitive_type [29970,29977]",
      "dest": "primitive_type [30020,30027]"
    },
    {
      "src": "state_variable_declaration [2011,2051]",
      "dest": "state_variable_declaration [2043,2083]"
    },
    {
      "src": "call_argument [18963,19006]",
      "dest": "call_argument [18995,19038]"
    },
    {
      "src": "return_type_definition [23556,23571]",
      "dest": "return_type_definition [23590,23605]"
    },
    {
      "src": "primitive_type [18321,18326]",
      "dest": "primitive_type [18353,18358]"
    },
    {
      "src": "call_argument [31873,31876]",
      "dest": "call_argument [31923,31926]"
    },
    {
      "src": "identifier: amount [39218,39224]",
      "dest": "identifier: amount [39268,39274]"
    },
    {
      "src": "primitive_type [43406,43411]",
      "dest": "primitive_type [48035,48040]"
    },
    {
      "src": "{: { [30020,30021]",
      "dest": "{: { [30070,30071]"
    },
    {
      "src": "function_body [43413,43447]",
      "dest": "function_body [48042,48076]"
    },
    {
      "src": ":=: := [15628,15630]",
      "dest": ":=: := [15660,15662]"
    },
    {
      "src": "expression_statement [39251,39298]",
      "dest": "expression_statement [39301,39348]"
    },
    {
      "src": "\": \" [10085,10086]",
      "dest": "\": \" [10117,10118]"
    },
    {
      "src": "expression_statement [37813,37934]",
      "dest": "expression_statement [37863,37984]"
    },
    {
      "src": "function: function [22637,22645]",
      "dest": "function: function [22671,22679]"
    },
    {
      "src": "string_literal [11695,11730]",
      "dest": "string_literal [11727,11762]"
    },
    {
      "src": "emit_statement [28697,28740]",
      "dest": "emit_statement [28747,28790]"
    },
    {
      "src": "identifier: balances_Deprecated [860,879]",
      "dest": "identifier: balances_Deprecated [800,819]"
    },
    {
      "src": "address: address [1419,1426]",
      "dest": "address: address [1359,1366]"
    },
    {
      "src": "(: ( [22681,22682]",
      "dest": "(: ( [22715,22716]"
    },
    {
      "src": "==: == [11594,11596]",
      "dest": "==: == [11626,11628]"
    },
    {
      "src": "call_argument [11695,11730]",
      "dest": "call_argument [11727,11762]"
    },
    {
      "src": "identifier: finOpBalances_Deprecated [1655,1679]",
      "dest": "identifier: finOpBalances_Deprecated [1624,1648]"
    },
    {
      "src": "(: ( [40225,40226]",
      "dest": "(: ( [40275,40276]"
    },
    {
      "src": "parameter [7190,7204]",
      "dest": "parameter [7222,7236]"
    },
    {
      "src": "{: { [38365,38366]",
      "dest": "{: { [38415,38416]"
    },
    {
      "src": "call_expression [26932,27028]",
      "dest": "call_expression [26982,27078]"
    },
    {
      "src": "call_expression [19423,19504]",
      "dest": "call_expression [19455,19536]"
    },
    {
      "src": "assignment_expression [28585,28624]",
      "dest": "assignment_expression [28635,28674]"
    },
    {
      "src": "type_name [12877,12884]",
      "dest": "type_name [12909,12916]"
    },
    {
      "src": "contract_body [14509,20577]",
      "dest": "contract_body [14541,20609]"
    },
    {
      "src": "call_argument [4429,4434]",
      "dest": "call_argument [4461,4466]"
    },
    {
      "src": "uint256: uint256 [7190,7197]",
      "dest": "uint256: uint256 [7222,7229]"
    },
    {
      "src": "identifier: TrueCurrencyWithLegacyAutosweep [41959,41990]",
      "dest": "identifier: TrueCurrencyWithLegacyAutosweep [46759,46790]"
    },
    {
      "src": "parameter [14235,14244]",
      "dest": "parameter [14267,14276]"
    },
    {
      "src": "comment: /**      * @dev Returns the name of the token.      */ [22575,22631]",
      "dest": "comment: /**      * @dev Returns the name of the token.      */ [22609,22665]"
    },
    {
      "src": "visibility [22653,22659]",
      "dest": "visibility [22687,22693]"
    },
    {
      "src": "(: ( [10951,10952]",
      "dest": "(: ( [10983,10984]"
    },
    {
      "src": "block_statement [20501,20556]",
      "dest": "block_statement [20533,20588]"
    },
    {
      "src": "identifier: previousOwner [4142,4155]",
      "dest": "identifier: previousOwner [4174,4187]"
    },
    {
      "src": "}: } [5396,5397]",
      "dest": "}: } [5428,5429]"
    },
    {
      "src": "type_name [1308,1315]",
      "dest": "type_name [1248,1255]"
    },
    {
      "src": "identifier: TrueCurrency [41994,42006]",
      "dest": "identifier: TrueCurrency [41827,41839]"
    },
    {
      "src": "identifier: _balances [27997,28006]",
      "dest": "identifier: _balances [28047,28056]"
    },
    {
      "src": "return_type_definition [22673,22696]",
      "dest": "return_type_definition [22707,22730]"
    },
    {
      "src": ",: , [38853,38854]",
      "dest": ",: , [38903,38904]"
    },
    {
      "src": ",: , [13697,13698]",
      "dest": ",: , [13729,13730]"
    },
    {
      "src": "bytes: bytes [18888,18893]",
      "dest": "bytes: bytes [18920,18925]"
    },
    {
      "src": "\": \" [29186,29187]",
      "dest": "\": \" [29236,29237]"
    },
    {
      "src": "identifier: super [39330,39335]",
      "dest": "identifier: super [39380,39385]"
    },
    {
      "src": "primitive_type [9959,9966]",
      "dest": "primitive_type [9991,9998]"
    },
    {
      "src": "parameter [40960,40964]",
      "dest": "parameter [41013,41017]"
    },
    {
      "src": "{: { [43503,43504]",
      "dest": "{: { [48132,48133]"
    },
    {
      "src": "identifier: SetBurnBounds [34062,34075]",
      "dest": "identifier: SetBurnBounds [34112,34125]"
    },
    {
      "src": "identifier: owner [29963,29968]",
      "dest": "identifier: owner [30013,30018]"
    },
    {
      "src": "comment: /**  * @title TrueUSD  * @dev This is the top-level ERC20 contract, but most of the interesting functionality is  * inherited - see the documentation on the corresponding contracts.  */ [43035,43224]",
      "dest": "comment: /**  * @title TrueUSD  * @dev This is the top-level ERC20 contract, but most of the interesting functionality is  * inherited - see the documentation on the corresponding contracts.  */ [47664,47853]"
    },
    {
      "src": "type_name [4126,4133]",
      "dest": "type_name [4158,4165]"
    },
    {
      "src": "\": \" [27715,27716]",
      "dest": "\": \" [27765,27766]"
    },
    {
      "src": "solidity_version:  0.6.10 [417,424]",
      "dest": "solidity_version:  0.6.10 [357,364]"
    },
    {
      "src": "expression_statement [16739,16813]",
      "dest": "expression_statement [16771,16845]"
    },
    {
      "src": "expression_statement [30191,30228]",
      "dest": "expression_statement [30241,30278]"
    },
    {
      "src": "(: ( [18887,18888]",
      "dest": "(: ( [18919,18920]"
    },
    {
      "src": "identifier: sender [33245,33251]",
      "dest": "identifier: sender [33295,33301]"
    },
    {
      "src": "{: { [24496,24497]",
      "dest": "{: { [24546,24547]"
    },
    {
      "src": "if_statement [20117,20556]",
      "dest": "if_statement [20149,20588]"
    },
    {
      "src": "function: function [43356,43364]",
      "dest": "function: function [47985,47993]"
    },
    {
      "src": "primitive_type [1078,1085]",
      "dest": "primitive_type [1018,1025]"
    },
    {
      "src": ",: , [39205,39206]",
      "dest": ",: , [39255,39256]"
    },
    {
      "src": "identifier: amount [34443,34449]",
      "dest": "identifier: amount [34493,34499]"
    },
    {
      "src": "(: ( [10923,10924]",
      "dest": "(: ( [10955,10956]"
    },
    {
      "src": "address: address [34418,34425]",
      "dest": "address: address [34468,34475]"
    },
    {
      "src": "call_argument [29273,29274]",
      "dest": "call_argument [29323,29324]"
    },
    {
      "src": ",: , [42459,42460]",
      "dest": ",: , [47260,47261]"
    },
    {
      "src": "(: ( [4785,4786]",
      "dest": "(: ( [4817,4818]"
    },
    {
      "src": "==: == [39907,39909]",
      "dest": "==: == [39957,39959]"
    },
    {
      "src": "type_name [26113,26120]",
      "dest": "type_name [26163,26170]"
    },
    {
      "src": ".: . [26966,26967]",
      "dest": ".: . [27016,27017]"
    },
    {
      "src": "comment: /**      * @dev sets the original `owner` of the contract to the sender      * at construction. Must then be reinitialized      */ [4191,4324]",
      "dest": "comment: /**      * @dev sets the original `owner` of the contract to the sender      * at construction. Must then be reinitialized      */ [4223,4356]"
    },
    {
      "src": "identifier: Blacklisted [37999,38010]",
      "dest": "identifier: Blacklisted [38049,38060]"
    },
    {
      "src": "parameter [28384,28399]",
      "dest": "parameter [28434,28449]"
    },
    {
      "src": "return_statement [43723,43737]",
      "dest": "return_statement [48352,48366]"
    },
    {
      "src": "visibility [31769,31777]",
      "dest": "visibility [31819,31827]"
    },
    {
      "src": "primitive_type [1211,1218]",
      "dest": "primitive_type [1151,1158]"
    },
    {
      "src": "uint256: uint256 [10984,10991]",
      "dest": "uint256: uint256 [11016,11023]"
    },
    {
      "src": "[: [ [28006,28007]",
      "dest": "[: [ [28056,28057]"
    },
    {
      "src": "identifier: _balances [28656,28665]",
      "dest": "identifier: _balances [28706,28715]"
    },
    {
      "src": "type_name [23565,23570]",
      "dest": "type_name [23599,23604]"
    },
    {
      "src": "external: external [6096,6104]",
      "dest": "external: external [6128,6136]"
    },
    {
      "src": "}: } [16952,16953]",
      "dest": "}: } [16984,16985]"
    },
    {
      "src": "constant: constant [43326,43334]",
      "dest": "constant: constant [47955,47963]"
    },
    {
      "src": "array_access [29318,29336]",
      "dest": "array_access [29368,29386]"
    },
    {
      "src": "identifier: codehash [15619,15627]",
      "dest": "identifier: codehash [15651,15659]"
    },
    {
      "src": ",: , [26921,26922]",
      "dest": ",: , [26971,26972]"
    },
    {
      "src": "primitive_type [40960,40964]",
      "dest": "primitive_type [41013,41017]"
    },
    {
      "src": "contract_body [43278,43747]",
      "dest": "contract_body [47907,48376]"
    },
    {
      "src": "primitive_type [15452,15459]",
      "dest": "primitive_type [15484,15491]"
    },
    {
      "src": "address: address [1844,1851]",
      "dest": "address: address [1876,1883]"
    },
    {
      "src": "identifier: Address [22547,22554]",
      "dest": "identifier: Address [22581,22588]"
    },
    {
      "src": ",: , [4595,4596]",
      "dest": ",: , [4627,4628]"
    },
    {
      "src": "call_expression [26900,27029]",
      "dest": "call_expression [26950,27079]"
    },
    {
      "src": "parameter [19662,19678]",
      "dest": "parameter [19694,19710]"
    },
    {
      "src": "call_expression [31858,31886]",
      "dest": "call_expression [31908,31936]"
    },
    {
      "src": "mapping: mapping [1411,1418]",
      "dest": "mapping: mapping [1351,1358]"
    },
    {
      "src": "struct_member [1780,1799]",
      "dest": "struct_member [1812,1831]"
    },
    {
      "src": "identifier: amount [39268,39274]",
      "dest": "identifier: amount [39318,39324]"
    },
    {
      "src": ".: . [28674,28675]",
      "dest": ".: . [28724,28725]"
    },
    {
      "src": "identifier: require [42871,42878]",
      "dest": "identifier: require [47500,47507]"
    },
    {
      "src": "{: { [23903,23904]",
      "dest": "{: { [23953,23954]"
    },
    {
      "src": "primitive_type [42802,42809]",
      "dest": "primitive_type [47431,47438]"
    },
    {
      "src": "bool: bool [953,957]",
      "dest": "bool: bool [893,897]"
    },
    {
      "src": "string: string [10873,10879]",
      "dest": "string: string [10905,10911]"
    },
    {
      "src": "(: ( [6113,6114]",
      "dest": "(: ( [6145,6146]"
    },
    {
      "src": "override: override [34468,34476]",
      "dest": "override: override [34518,34526]"
    },
    {
      "src": "visibility [40259,40267]",
      "dest": "visibility [40309,40317]"
    },
    {
      "src": "call_argument [31841,31845]",
      "dest": "call_argument [31891,31895]"
    },
    {
      "src": "}: } [23599,23600]",
      "dest": "}: } [23633,23634]"
    },
    {
      "src": "identifier: _balances [23921,23930]",
      "dest": "identifier: _balances [23971,23980]"
    },
    {
      "src": "function: function [26069,26077]",
      "dest": "function: function [26119,26127]"
    },
    {
      "src": "parameter [29111,29125]",
      "dest": "parameter [29161,29175]"
    },
    {
      "src": "function_definition [31720,31894]",
      "dest": "function_definition [31770,31944]"
    },
    {
      "src": "function: function [5014,5022]",
      "dest": "function: function [5046,5054]"
    },
    {
      "src": "primitive_type [24417,24424]",
      "dest": "primitive_type [24467,24474]"
    },
    {
      "src": "): ) [43473,43474]",
      "dest": "): ) [48102,48103]"
    },
    {
      "src": "(: ( [39124,39125]",
      "dest": "(: ( [39174,39175]"
    },
    {
      "src": "uint256: uint256 [9959,9966]",
      "dest": "uint256: uint256 [9991,9998]"
    },
    {
      "src": "]: ] [26239,26240]",
      "dest": "]: ] [26289,26290]"
    },
    {
      "src": "binary_expression [4786,4812]",
      "dest": "binary_expression [4818,4844]"
    },
    {
      "src": "type_alias [22514,22522]",
      "dest": "type_alias [22548,22556]"
    },
    {
      "src": "visibility [1260,1267]",
      "dest": "visibility [1200,1207]"
    },
    {
      "src": "(: ( [28383,28384]",
      "dest": "(: ( [28433,28434]"
    },
    {
      "src": "pragma_directive [3621,3644]",
      "dest": "pragma_directive [3653,3676]"
    },
    {
      "src": "returns: returns [12941,12948]",
      "dest": "returns: returns [12973,12980]"
    },
    {
      "src": ".: . [25573,25574]",
      "dest": ".: . [25623,25624]"
    },
    {
      "src": "(: ( [38313,38314]",
      "dest": "(: ( [38363,38364]"
    },
    {
      "src": "memory: memory [18282,18288]",
      "dest": "memory: memory [18314,18320]"
    },
    {
      "src": ".: . [31822,31823]",
      "dest": ".: . [31872,31873]"
    },
    {
      "src": ",: , [17945,17946]",
      "dest": ",: , [17977,17978]"
    },
    {
      "src": "{: { [20501,20502]",
      "dest": "{: { [20533,20534]"
    },
    {
      "src": "inheritance_specifier [22494,22500]",
      "dest": "inheritance_specifier [22528,22534]"
    },
    {
      "src": "comment: // solhint-disable-next-line avoid-low-level-calls [19823,19873]",
      "dest": "comment: // solhint-disable-next-line avoid-low-level-calls [19855,19905]"
    },
    {
      "src": "\": \" [13727,13728]",
      "dest": "\": \" [13759,13760]"
    },
    {
      "src": "solidity_version:  0.6.10 [31916,31923]",
      "dest": "solidity_version:  0.6.10 [31966,31973]"
    },
    {
      "src": "yul_function_call [15631,15651]",
      "dest": "yul_function_call [15663,15683]"
    },
    {
      "src": "internal: internal [8736,8744]",
      "dest": "internal: internal [8768,8776]"
    },
    {
      "src": "primitive_type [27603,27610]",
      "dest": "primitive_type [27653,27660]"
    },
    {
      "src": "type_name [24432,24439]",
      "dest": "type_name [24482,24489]"
    },
    {
      "src": ",: , [28060,28061]",
      "dest": ",: , [28110,28111]"
    },
    {
      "src": "identifier: amount [42552,42558]",
      "dest": "identifier: amount [47353,47359]"
    },
    {
      "src": "type_name [15452,15459]",
      "dest": "type_name [15484,15491]"
    },
    {
      "src": "identifier: owner [5302,5307]",
      "dest": "identifier: owner [5334,5339]"
    },
    {
      "src": "(: ( [31741,31742]",
      "dest": "(: ( [31791,31792]"
    },
    {
      "src": "call_expression [39972,40010]",
      "dest": "call_expression [40022,40060]"
    },
    {
      "src": "function_body [10466,10535]",
      "dest": "function_body [10498,10567]"
    },
    {
      "src": "abstract: abstract [32184,32192]",
      "dest": "abstract: abstract [32234,32242]"
    },
    {
      "src": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with      * `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [17996,18212]",
      "dest": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with      * `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [18028,18244]"
    },
    {
      "src": "event: event [32443,32448]",
      "dest": "event: event [32493,32498]"
    },
    {
      "src": "contract_body [8707,9064]",
      "dest": "contract_body [8739,9096]"
    },
    {
      "src": "uint256: uint256 [22527,22534]",
      "dest": "uint256: uint256 [22561,22568]"
    },
    {
      "src": "comment: /**      * @dev First 0x100000-1 addresses (0x0000000000000000000000000000000000000001       * to 0x00000000000000000000000000000000000fffff) are redemption addresses.      * @param account address to check is a redemption address      *      * All transfers to redemption address will trigger token burn.      *      * @notice For transfer to succeed, canBurn must be true for redemption address      *      * @return is `account` a redemption address      */ [40415,40885]",
      "dest": "comment: /**      * @dev First 0x100000-1 addresses (0x0000000000000000000000000000000000000001 to 0x00000000000000000000000000000000000fffff)      * are the redemption addresses.      * @param account address to check is a redemption address      *      * All transfers to redemption address will trigger token burn.      *      * @notice For transfer to succeed, canBurn must be true for redemption address      *      * @return is `account` a redemption address      */ [40465,40938]"
    },
    {
      "src": "identifier: errorMessage [12913,12925]",
      "dest": "identifier: errorMessage [12945,12957]"
    },
    {
      "src": "comment: // assert(a == b * c + a % b); // There is no case in which this doesn't hold [13037,13114]",
      "dest": "comment: // assert(a == b * c + a % b); // There is no case in which this doesn't hold [13069,13146]"
    },
    {
      "src": "type_name [30992,30999]",
      "dest": "type_name [31042,31049]"
    },
    {
      "src": "state_variable_declaration [1045,1072]",
      "dest": "state_variable_declaration [985,1012]"
    },
    {
      "src": "(: ( [32453,32454]",
      "dest": "(: ( [32503,32504]"
    },
    {
      "src": "internal: internal [42826,42834]",
      "dest": "internal: internal [47455,47463]"
    },
    {
      "src": "identifier: value [32486,32491]",
      "dest": "identifier: value [32536,32541]"
    },
    {
      "src": "call_argument [29256,29263]",
      "dest": "call_argument [29306,29313]"
    },
    {
      "src": "call_expression [42517,42559]",
      "dest": "call_expression [47318,47360]"
    },
    {
      "src": "(: ( [5386,5387]",
      "dest": "(: ( [5418,5419]"
    },
    {
      "src": "call_argument [24287,24296]",
      "dest": "call_argument [24337,24346]"
    },
    {
      "src": "address: address [28711,28718]",
      "dest": "address: address [28761,28768]"
    },
    {
      "src": "{: { [4351,4352]",
      "dest": "{: { [4383,4384]"
    },
    {
      "src": "]: ] [30208,30209]",
      "dest": "]: ] [30258,30259]"
    },
    {
      "src": "[: [ [38973,38974]",
      "dest": "[: [ [39023,39024]"
    },
    {
      "src": "bool: bool [15163,15167]",
      "dest": "bool: bool [15195,15199]"
    },
    {
      "src": "(: ( [24177,24178]",
      "dest": "(: ( [24227,24228]"
    },
    {
      "src": "type_name [9959,9966]",
      "dest": "type_name [9991,9998]"
    },
    {
      "src": "internal: internal [29127,29135]",
      "dest": "internal: internal [29177,29185]"
    },
    {
      "src": "=: = [34015,34016]",
      "dest": "=: = [34065,34066]"
    },
    {
      "src": "call_expression [39218,39234]",
      "dest": "call_expression [39268,39284]"
    },
    {
      "src": "(: ( [28551,28552]",
      "dest": "(: ( [28601,28602]"
    },
    {
      "src": "returns: returns [19389,19396]",
      "dest": "returns: returns [19421,19428]"
    },
    {
      "src": "primitive_type [1149,1155]",
      "dest": "primitive_type [1089,1095]"
    },
    {
      "src": "(: ( [18239,18240]",
      "dest": "(: ( [18271,18272]"
    },
    {
      "src": "call_argument [31878,31885]",
      "dest": "call_argument [31928,31935]"
    },
    {
      "src": ",: , [12886,12887]",
      "dest": ",: , [12918,12919]"
    },
    {
      "src": "string_literal [29349,29385]",
      "dest": "string_literal [29399,29435]"
    },
    {
      "src": ".: . [19931,19932]",
      "dest": ".: . [19963,19964]"
    },
    {
      "src": "state_mutability [8745,8749]",
      "dest": "state_mutability [8777,8781]"
    },
    {
      "src": "<=: <= [34589,34591]",
      "dest": "<=: <= [34639,34641]"
    },
    {
      "src": "number_literal: 0 [29273,29274]",
      "dest": "number_literal: 0 [29323,29324]"
    },
    {
      "src": "function: function [14222,14230]",
      "dest": "function: function [14254,14262]"
    },
    {
      "src": "identifier: amount [40251,40257]",
      "dest": "identifier: amount [40301,40307]"
    },
    {
      "src": "identifier: pendingOwner [5309,5321]",
      "dest": "identifier: pendingOwner [5341,5353]"
    },
    {
      "src": "emit_statement [30238,30276]",
      "dest": "emit_statement [30288,30326]"
    },
    {
      "src": "parameter [17890,17902]",
      "dest": "parameter [17922,17934]"
    },
    {
      "src": "): ) [29488,29489]",
      "dest": "): ) [29538,29539]"
    },
    {
      "src": "yul_identifier [20384,20394]",
      "dest": "yul_identifier [20416,20426]"
    },
    {
      "src": "\": \" [10494,10495]",
      "dest": "\": \" [10526,10527]"
    },
    {
      "src": "identifier: recipient [27592,27601]",
      "dest": "identifier: recipient [27642,27651]"
    },
    {
      "src": "): ) [19378,19379]",
      "dest": "): ) [19410,19411]"
    },
    {
      "src": "): ) [5239,5240]",
      "dest": "): ) [5271,5272]"
    },
    {
      "src": "internal: internal [40259,40267]",
      "dest": "internal: internal [40309,40317]"
    },
    {
      "src": "||: || [39897,39899]",
      "dest": "||: || [39947,39949]"
    },
    {
      "src": "]: ] [25572,25573]",
      "dest": "]: ] [25622,25623]"
    },
    {
      "src": "primitive_type [30980,30987]",
      "dest": "primitive_type [31030,31037]"
    },
    {
      "src": "return_type_definition [23709,23726]",
      "dest": "return_type_definition [23751,23768]"
    },
    {
      "src": "\": \" [30097,30098]",
      "dest": "\": \" [30147,30148]"
    },
    {
      "src": "call_argument [42552,42558]",
      "dest": "call_argument [47353,47359]"
    },
    {
      "src": "call_expression [25509,25630]",
      "dest": "call_expression [25559,25680]"
    },
    {
      "src": "identifier: amount [40003,40009]",
      "dest": "identifier: amount [40053,40059]"
    },
    {
      "src": "{: { [10466,10467]",
      "dest": "{: { [10498,10499]"
    },
    {
      "src": "}: } [18413,18414]",
      "dest": "}: } [18445,18446]"
    },
    {
      "src": "identifier: target [19310,19316]",
      "dest": "identifier: target [19342,19348]"
    },
    {
      "src": "(: ( [4424,4425]",
      "dest": "(: ( [4456,4457]"
    },
    {
      "src": "(: ( [13664,13665]",
      "dest": "(: ( [13696,13697]"
    },
    {
      "src": "string [30060,30098]",
      "dest": "string [30110,30148]"
    },
    {
      "src": "identifier: _totalSupply [932,944]",
      "dest": "identifier: _totalSupply [872,884]"
    },
    {
      "src": "internal: internal [17872,17880]",
      "dest": "internal: internal [17904,17912]"
    },
    {
      "src": "parameter [26834,26857]",
      "dest": "parameter [26884,26907]"
    },
    {
      "src": ".: . [39224,39225]",
      "dest": ".: . [39274,39275]"
    },
    {
      "src": "): ) [29385,29386]",
      "dest": "): ) [29435,29436]"
    },
    {
      "src": ",: , [24430,24431]",
      "dest": ",: , [24480,24481]"
    },
    {
      "src": "]: ] [39807,39808]",
      "dest": "]: ] [39857,39858]"
    },
    {
      "src": "comment: /**      * @dev Replacement for Solidity's `transfer`: sends `amount` wei to      * `recipient`, forwarding all available gas and reverting on errors.      *      * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost      * of certain opcodes, possibly making contracts go over the 2300 gas limit      * imposed by `transfer`, making them unable to receive funds via      * `transfer`. {sendValue} removes this limitation.      *      * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].      *      * IMPORTANT: because control is transferred to `recipient`, care must be      * taken to not create reentrancy vulnerabilities. Consider using      * {ReentrancyGuard} or the      * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].      */ [15730,16651]",
      "dest": "comment: /**      * @dev Replacement for Solidity's `transfer`: sends `amount` wei to      * `recipient`, forwarding all available gas and reverting on errors.      *      * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost      * of certain opcodes, possibly making contracts go over the 2300 gas limit      * imposed by `transfer`, making them unable to receive funds via      * `transfer`. {sendValue} removes this limitation.      *      * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].      *      * IMPORTANT: because control is transferred to `recipient`, care must be      * taken to not create reentrancy vulnerabilities. Consider using      * {ReentrancyGuard} or the      * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].      */ [15762,16683]"
    },
    {
      "src": "event_definition [36635,36681]",
      "dest": "event_definition [36685,36731]"
    },
    {
      "src": "\": \" [16810,16811]",
      "dest": "\": \" [16842,16843]"
    },
    {
      "src": "type_name [12294,12301]",
      "dest": "type_name [12326,12333]"
    },
    {
      "src": "return_type_definition [14299,14316]",
      "dest": "return_type_definition [14331,14348]"
    },
    {
      "src": "identifier: depositAddress [42915,42929]",
      "dest": "identifier: depositAddress [47544,47558]"
    },
    {
      "src": "function_definition [16657,17054]",
      "dest": "function_definition [16689,17086]"
    },
    {
      "src": "parameter [12877,12886]",
      "dest": "parameter [12909,12918]"
    },
    {
      "src": "type_name [43320,43325]",
      "dest": "type_name [47949,47954]"
    },
    {
      "src": "identifier: account [28556,28563]",
      "dest": "identifier: account [28606,28613]"
    },
    {
      "src": "contract_body [36207,41063]",
      "dest": "contract_body [36257,41116]"
    },
    {
      "src": "(: ( [19757,19758]",
      "dest": "(: ( [19789,19790]"
    },
    {
      "src": "visibility [26133,26139]",
      "dest": "visibility [26183,26189]"
    },
    {
      "src": "return_type_definition [10915,10932]",
      "dest": "return_type_definition [10947,10964]"
    },
    {
      "src": "pragma: pragma [9068,9074]",
      "dest": "pragma: pragma [9100,9106]"
    },
    {
      "src": "identifier: returndata [19911,19921]",
      "dest": "identifier: returndata [19943,19953]"
    },
    {
      "src": "\": \" [4833,4834]",
      "dest": "\": \" [4865,4866]"
    },
    {
      "src": "}: } [30282,30283]",
      "dest": "}: } [30332,30333]"
    },
    {
      "src": "identifier: account [38322,38329]",
      "dest": "identifier: account [38372,38379]"
    },
    {
      "src": "override: override [23876,23884]",
      "dest": "override: override [23926,23934]"
    },
    {
      "src": ",: , [17851,17852]",
      "dest": ",: , [17883,17884]"
    },
    {
      "src": "primitive_type [12294,12301]",
      "dest": "primitive_type [12326,12333]"
    },
    {
      "src": "return_statement [43424,43440]",
      "dest": "return_statement [48053,48069]"
    },
    {
      "src": "(: ( [7172,7173]",
      "dest": "(: ( [7204,7205]"
    },
    {
      "src": "call_expression [19925,19961]",
      "dest": "call_expression [19957,19993]"
    },
    {
      "src": "solidity_pragma_token [9075,9090]",
      "dest": "solidity_pragma_token [9107,9122]"
    },
    {
      "src": "string_literal [34601,34650]",
      "dest": "string_literal [34651,34700]"
    },
    {
      "src": "): ) [26194,26195]",
      "dest": "): ) [26244,26245]"
    },
    {
      "src": "identifier: mod [13692,13695]",
      "dest": "identifier: mod [13724,13727]"
    },
    {
      "src": "parameter [38314,38329]",
      "dest": "parameter [38364,38379]"
    },
    {
      "src": "identifier: SafeMath [9680,9688]",
      "dest": "identifier: SafeMath [9712,9720]"
    },
    {
      "src": "type_name [25396,25403]",
      "dest": "type_name [25446,25453]"
    },
    {
      "src": "(: ( [29162,29163]",
      "dest": "(: ( [29212,29213]"
    },
    {
      "src": "address: address [30966,30973]",
      "dest": "address: address [31016,31023]"
    },
    {
      "src": "member_expression [19431,19452]",
      "dest": "member_expression [19463,19484]"
    },
    {
      "src": "comment: // According to EIP-1052, 0x0 is the value returned for not-yet created accounts [15180,15260]",
      "dest": "comment: // According to EIP-1052, 0x0 is the value returned for not-yet created accounts [15212,15292]"
    },
    {
      "src": "public: public [23864,23870]",
      "dest": "public: public [23906,23912]"
    },
    {
      "src": "string_literal [17947,17979]",
      "dest": "string_literal [17979,18011]"
    },
    {
      "src": "library_declaration [9672,14391]",
      "dest": "library_declaration [9704,14423]"
    },
    {
      "src": "{: { [39315,39316]",
      "dest": "{: { [39365,39366]"
    },
    {
      "src": "identifier: length [20132,20138]",
      "dest": "identifier: length [20164,20170]"
    },
    {
      "src": "return_type_definition [22854,22877]",
      "dest": "return_type_definition [22888,22911]"
    },
    {
      "src": "visibility [18303,18311]",
      "dest": "visibility [18335,18343]"
    },
    {
      "src": "identifier: requireNotAutosweepAddress [42756,42782]",
      "dest": "identifier: requireNotAutosweepAddress [47385,47411]"
    },
    {
      "src": "identifier: this [8904,8908]",
      "dest": "identifier: this [8936,8940]"
    },
    {
      "src": "primitive_type [19398,19403]",
      "dest": "primitive_type [19430,19435]"
    },
    {
      "src": "identifier: target [19545,19551]",
      "dest": "identifier: target [19577,19583]"
    },
    {
      "src": "assignment_expression [38376,38403]",
      "dest": "assignment_expression [38426,38453]"
    },
    {
      "src": "): ) [23901,23902]",
      "dest": "): ) [23951,23952]"
    },
    {
      "src": "string_literal [12331,12359]",
      "dest": "string_literal [12363,12391]"
    },
    {
      "src": "binary_expression [11592,11598]",
      "dest": "binary_expression [11624,11630]"
    },
    {
      "src": "internal: internal [14285,14293]",
      "dest": "internal: internal [14317,14325]"
    },
    {
      "src": "): ) [1457,1458]",
      "dest": "): ) [1397,1398]"
    },
    {
      "src": "identifier: isBlacklisted [1991,2004]",
      "dest": "identifier: isBlacklisted [2023,2036]"
    },
    {
      "src": "!: ! [38959,38960]",
      "dest": "!: ! [39009,39010]"
    },
    {
      "src": "call_argument [29478,29479]",
      "dest": "call_argument [29528,29529]"
    },
    {
      "src": "type_name [7879,7886]",
      "dest": "type_name [7911,7918]"
    },
    {
      "src": "]: ] [1872,1873]",
      "dest": "]: ] [1904,1905]"
    },
    {
      "src": "primitive_type [8074,8081]",
      "dest": "primitive_type [8106,8113]"
    },
    {
      "src": "call_argument [38959,38981]",
      "dest": "call_argument [39009,39031]"
    },
    {
      "src": "function: function [7156,7164]",
      "dest": "function: function [7188,7196]"
    },
    {
      "src": "): ) [15650,15651]",
      "dest": "): ) [15682,15683]"
    },
    {
      "src": "function_body [10002,10116]",
      "dest": "function_body [10034,10148]"
    },
    {
      "src": "(: ( [1614,1615]",
      "dest": "(: ( [1583,1584]"
    },
    {
      "src": "identifier: spender [29978,29985]",
      "dest": "identifier: spender [30028,30035]"
    },
    {
      "src": "call_argument [39346,39352]",
      "dest": "call_argument [39396,39402]"
    },
    {
      "src": "identifier: amount [39279,39285]",
      "dest": "identifier: amount [39329,39335]"
    },
    {
      "src": "public: public [24746,24752]",
      "dest": "public: public [24796,24802]"
    },
    {
      "src": "array_access [39787,39808]",
      "dest": "array_access [39837,39858]"
    },
    {
      "src": "identifier: sub [39214,39217]",
      "dest": "identifier: sub [39264,39267]"
    },
    {
      "src": "function: function [39650,39658]",
      "dest": "function: function [39700,39708]"
    },
    {
      "src": "(: ( [23533,23534]",
      "dest": "(: ( [23567,23568]"
    },
    {
      "src": "memory: memory [22870,22876]",
      "dest": "memory: memory [22904,22910]"
    },
    {
      "src": "yul_variable_declaration [20355,20395]",
      "dest": "yul_variable_declaration [20387,20427]"
    },
    {
      "src": "call_argument [25491,25497]",
      "dest": "call_argument [25541,25547]"
    },
    {
      "src": "internal: internal [12271,12279]",
      "dest": "internal: internal [12303,12311]"
    },
    {
      "src": "type_name [9948,9955]",
      "dest": "type_name [9980,9987]"
    },
    {
      "src": ",: , [18388,18389]",
      "dest": ",: , [18420,18421]"
    },
    {
      "src": "add: add [20424,20427]",
      "dest": "add: add [20456,20459]"
    },
    {
      "src": "(: ( [39278,39279]",
      "dest": "(: ( [39328,39329]"
    },
    {
      "src": "type_name [11647,11654]",
      "dest": "type_name [11679,11686]"
    },
    {
      "src": "bytes32: bytes32 [15452,15459]",
      "dest": "bytes32: bytes32 [15484,15491]"
    },
    {
      "src": "primitive_type [26157,26161]",
      "dest": "primitive_type [26207,26211]"
    },
    {
      "src": "identifier: amount [40392,40398]",
      "dest": "identifier: amount [40442,40448]"
    },
    {
      "src": "call_expression [27728,27799]",
      "dest": "call_expression [27778,27849]"
    },
    {
      "src": "comment: /**      * @dev Emitted when `value` tokens are moved from one account (`from`) to      * another (`to`).      *      * Note that `value` may be zero.      */ [7653,7816]",
      "dest": "comment: /**      * @dev Emitted when `value` tokens are moved from one account (`from`) to      * another (`to`).      *      * Note that `value` may be zero.      */ [7685,7848]"
    },
    {
      "src": "function_body [4767,4855]",
      "dest": "function_body [4799,4887]"
    },
    {
      "src": "string [43624,43633]",
      "dest": "string [48253,48262]"
    },
    {
      "src": "member_expression [31817,31832]",
      "dest": "member_expression [31867,31882]"
    },
    {
      "src": "contract: contract [735,743]",
      "dest": "contract: contract [675,683]"
    },
    {
      "src": "identifier: balance [16761,16768]",
      "dest": "identifier: balance [16793,16800]"
    },
    {
      "src": "identifier: recipient [27984,27993]",
      "dest": "identifier: recipient [28034,28043]"
    },
    {
      "src": "parameter [13665,13672]",
      "dest": "parameter [13697,13704]"
    },
    {
      "src": "(: ( [1484,1485]",
      "dest": "(: ( [1424,1425]"
    },
    {
      "src": "number_literal: 0 [11622,11623]",
      "dest": "number_literal: 0 [11654,11655]"
    },
    {
      "src": ",: , [42550,42551]",
      "dest": ",: , [47351,47352]"
    },
    {
      "src": ">=: >= [37838,37840]",
      "dest": ">=: >= [37888,37890]"
    },
    {
      "src": "function: function [25339,25347]",
      "dest": "function: function [25389,25397]"
    },
    {
      "src": "call_expression [25462,25498]",
      "dest": "call_expression [25512,25548]"
    },
    {
      "src": "type_name [15123,15130]",
      "dest": "type_name [15155,15162]"
    },
    {
      "src": "binary_expression [15671,15713]",
      "dest": "binary_expression [15703,15745]"
    },
    {
      "src": "identifier: amount [29995,30001]",
      "dest": "identifier: amount [30045,30051]"
    },
    {
      "src": "identifier: _approve [26900,26908]",
      "dest": "identifier: _approve [26950,26958]"
    },
    {
      "src": "return_type_definition [18312,18334]",
      "dest": "return_type_definition [18344,18366]"
    },
    {
      "src": "=: = [43344,43345]",
      "dest": "=: = [47973,47974]"
    },
    {
      "src": "): ) [30001,30002]",
      "dest": "): ) [30051,30052]"
    },
    {
      "src": "type_name [8097,8104]",
      "dest": "type_name [8129,8136]"
    },
    {
      "src": ".: . [40376,40377]",
      "dest": ".: . [40426,40427]"
    },
    {
      "src": "identifier: token [31858,31863]",
      "dest": "identifier: token [31908,31913]"
    },
    {
      "src": "call_argument [17941,17945]",
      "dest": "call_argument [17973,17977]"
    },
    {
      "src": "identifier: BurnableTokenWithBounds [36183,36206]",
      "dest": "identifier: BurnableTokenWithBounds [36233,36256]"
    },
    {
      "src": "\": \" [17044,17045]",
      "dest": "\": \" [17076,17077]"
    },
    {
      "src": "uint256: uint256 [1308,1315]",
      "dest": "uint256: uint256 [1248,1255]"
    },
    {
      "src": "call_argument [4786,4812]",
      "dest": "call_argument [4818,4844]"
    },
    {
      "src": "parameter [11302,11311]",
      "dest": "parameter [11334,11343]"
    },
    {
      "src": "type_name [9993,10000]",
      "dest": "type_name [10025,10032]"
    },
    {
      "src": "address: address [42802,42809]",
      "dest": "address: address [47431,47438]"
    },
    {
      "src": "string [39913,39958]",
      "dest": "string [39963,40008]"
    },
    {
      "src": "(: ( [26970,26971]",
      "dest": "(: ( [27020,27021]"
    },
    {
      "src": "identifier: a [10996,10997]",
      "dest": "identifier: a [11028,11029]"
    },
    {
      "src": "pragma_directive [31901,31924]",
      "dest": "pragma_directive [31951,31974]"
    },
    {
      "src": "{: { [8784,8785]",
      "dest": "{: { [8816,8817]"
    },
    {
      "src": "(: ( [20427,20428]",
      "dest": "(: ( [20459,20460]"
    },
    {
      "src": "internal: internal [12927,12935]",
      "dest": "internal: internal [12959,12967]"
    },
    {
      "src": "parameter [37145,37160]",
      "dest": "parameter [37195,37210]"
    },
    {
      "src": "(: ( [43558,43559]",
      "dest": "(: ( [48187,48188]"
    },
    {
      "src": "member_expression [39218,39228]",
      "dest": "member_expression [39268,39278]"
    },
    {
      "src": "!=: != [41048,41050]",
      "dest": "!=: != [41101,41103]"
    },
    {
      "src": "contract_declaration [36149,41063]",
      "dest": "contract_declaration [36199,41116]"
    },
    {
      "src": "identifier: amount [28022,28028]",
      "dest": "identifier: amount [28072,28078]"
    },
    {
      "src": ",: , [6436,6437]",
      "dest": ",: , [6468,6469]"
    },
    {
      "src": "type_name [1178,1184]",
      "dest": "type_name [1118,1124]"
    },
    {
      "src": "struct_declaration [1745,1830]",
      "dest": "struct_declaration [1777,1862]"
    },
    {
      "src": "primitive_type [5379,5386]",
      "dest": "primitive_type [5411,5418]"
    },
    {
      "src": "(: ( [12876,12877]",
      "dest": "(: ( [12908,12909]"
    },
    {
      "src": "binary_expression [28453,28474]",
      "dest": "binary_expression [28503,28524]"
    },
    {
      "src": "visibility [22834,22840]",
      "dest": "visibility [22868,22874]"
    },
    {
      "src": "type_cast_expression [37821,37837]",
      "dest": "type_cast_expression [37871,37887]"
    },
    {
      "src": "identifier: finOps_Deprecated [1583,1600]",
      "dest": "identifier: finOps_Deprecated [1552,1569]"
    },
    {
      "src": "(: ( [5238,5239]",
      "dest": "(: ( [5270,5271]"
    },
    {
      "src": "(: ( [1374,1375]",
      "dest": "(: ( [1314,1315]"
    },
    {
      "src": "string [13702,13728]",
      "dest": "string [13734,13760]"
    },
    {
      "src": "\": \" [27026,27027]",
      "dest": "\": \" [27076,27077]"
    },
    {
      "src": "modifier: modifier [4536,4544]",
      "dest": "modifier: modifier [4568,4576]"
    },
    {
      "src": "virtual: virtual [25419,25426]",
      "dest": "virtual: virtual [25469,25476]"
    },
    {
      "src": "): ) [16918,16919]",
      "dest": "): ) [16950,16951]"
    },
    {
      "src": "identifier: spender [8113,8120]",
      "dest": "identifier: spender [8145,8152]"
    },
    {
      "src": "comment: /**  * @title ClamableOwnable  * @dev The ClamableOwnable contract is a copy of Claimable Contract by Zeppelin.  * and provides basic authorization control functions. Inherits storage layout of  * ProxyStorage.  */ [3648,3867]",
      "dest": "comment: /**  * @title ClamableOwnable  * @dev The ClamableOwnable contract is a copy of Claimable Contract by Zeppelin.  * and provides basic authorization control functions. Inherits storage layout of  * ProxyStorage.  */ [3680,3899]"
    },
    {
      "src": "): ) [26161,26162]",
      "dest": "): ) [26211,26212]"
    },
    {
      "src": "contract_declaration [32184,34740]",
      "dest": "contract_declaration [32234,34790]"
    },
    {
      "src": "function_body [23903,23947]",
      "dest": "function_body [23953,23997]"
    },
    {
      "src": "string: string [43697,43703]",
      "dest": "string: string [48326,48332]"
    },
    {
      "src": ",: , [7188,7189]",
      "dest": ",: , [7220,7221]"
    },
    {
      "src": "): ) [23534,23535]",
      "dest": "): ) [23568,23569]"
    },
    {
      "src": "identifier: _transfer [39336,39345]",
      "dest": "identifier: _transfer [39386,39395]"
    },
    {
      "src": "call_argument [33959,33995]",
      "dest": "call_argument [34009,34045]"
    },
    {
      "src": "true: true [24323,24327]",
      "dest": "true: true [24373,24377]"
    },
    {
      "src": "parameter [11347,11354]",
      "dest": "parameter [11379,11386]"
    },
    {
      "src": "\": \" [39019,39020]",
      "dest": "\": \" [39069,39070]"
    },
    {
      "src": "]: ] [26956,26957]",
      "dest": "]: ] [27006,27007]"
    },
    {
      "src": "external: external [33907,33915]",
      "dest": "external: external [33957,33965]"
    },
    {
      "src": "call_expression [29318,29386]",
      "dest": "call_expression [29368,29436]"
    },
    {
      "src": "(: ( [24804,24805]",
      "dest": "(: ( [24854,24855]"
    },
    {
      "src": "parameter [26113,26131]",
      "dest": "parameter [26163,26181]"
    },
    {
      "src": "identifier: account [5773,5780]",
      "dest": "identifier: account [5805,5812]"
    },
    {
      "src": "identifier: addedValue [26121,26131]",
      "dest": "identifier: addedValue [26171,26181]"
    },
    {
      "src": "(: ( [24486,24487]",
      "dest": "(: ( [24536,24537]"
    },
    {
      "src": "state_variable_declaration [1211,1246]",
      "dest": "state_variable_declaration [1151,1186]"
    },
    {
      "src": "block_statement [20035,20567]",
      "dest": "block_statement [20067,20599]"
    },
    {
      "src": "state_mutability [10910,10914]",
      "dest": "state_mutability [10942,10946]"
    },
    {
      "src": "emit: emit [37422,37426]",
      "dest": "emit: emit [37472,37476]"
    },
    {
      "src": "function_definition [6404,6487]",
      "dest": "function_definition [6436,6519]"
    },
    {
      "src": "(: ( [31840,31841]",
      "dest": "(: ( [31890,31891]"
    },
    {
      "src": "identifier: errorMessage [12985,12997]",
      "dest": "identifier: errorMessage [13017,13029]"
    },
    {
      "src": "comment: // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691 [8910,9028]",
      "dest": "comment: // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691 [8942,9060]"
    },
    {
      "src": "identifier: REDEMPTION_ADDRESS_COUNT [36268,36292]",
      "dest": "identifier: REDEMPTION_ADDRESS_COUNT [36318,36342]"
    },
    {
      "src": "function: function [26790,26798]",
      "dest": "function: function [26840,26848]"
    },
    {
      "src": "call_expression [19522,19579]",
      "dest": "call_expression [19554,19611]"
    },
    {
      "src": "string [10494,10526]",
      "dest": "string [10526,10558]"
    },
    {
      "src": "array_access [25540,25559]",
      "dest": "array_access [25590,25609]"
    },
    {
      "src": "call_argument [30252,30257]",
      "dest": "call_argument [30302,30307]"
    },
    {
      "src": "comment: /**  * @dev Implementation of the {IERC20} interface.  *  * This implementation is agnostic to the way tokens are created. This means  * that a supply mechanism has to be added in a derived contract using {_mint}.  * For a generic mechanism see {ERC20PresetMinterPauser}.  *  * TIP: For a detailed writeup see our guide  * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How  * to implement supply mechanisms].  *  * We have followed general OpenZeppelin guidelines: functions revert instead  * of returning `false` on failure. This behavior is nonetheless conventional  * and does not conflict with the expectations of ERC20 applications.  *  * Additionally, an {Approval} event is emitted on calls to {transferFrom}.  * This allows applications to reconstruct the allowance for all accounts just  * by listening to said events. Other implementations of the EIP may not emit  * these events, as it isn't required by the specification.  *  * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}  * functions have been added to mitigate the well-known issues around setting  * allowances. See {IERC20-approve}.  */ [21253,22438]",
      "dest": "comment: /**  * @dev Implementation of the {IERC20} interface.  *  * This implementation is agnostic to the way tokens are created. This means  * that a supply mechanism has to be added in a derived contract using {_mint}.  * For a generic mechanism see {ERC20PresetMinterPauser}.  *  * TIP: For a detailed writeup see our guide  * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How  * to implement supply mechanisms].  *  * We have followed general OpenZeppelin guidelines: functions revert instead  * of returning `false` on failure. This behavior is nonetheless conventional  * and does not conflict with the expectations of ERC20 applications.  *  * Additionally, an {Approval} event is emitted on calls to {transferFrom}.  * This allows applications to reconstruct the allowance for all accounts just  * by listening to said events. Other implementations of the EIP may not emit  * these events, as it isn't required by the specification.  *  * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}  * functions have been added to mitigate the well-known issues around setting  * allowances. See {IERC20-approve}.  */ [21287,22472]"
    },
    {
      "src": "primitive_type [31469,31476]",
      "dest": "primitive_type [31519,31526]"
    },
    {
      "src": "type_cast_expression [42879,42897]",
      "dest": "type_cast_expression [47508,47526]"
    },
    {
      "src": "type_name [10423,10430]",
      "dest": "type_name [10455,10462]"
    },
    {
      "src": ",: , [25524,25525]",
      "dest": ",: , [25574,25575]"
    },
    {
      "src": "identifier: b [13639,13640]",
      "dest": "identifier: b [13671,13672]"
    },
    {
      "src": "type_name [11313,11320]",
      "dest": "type_name [11345,11352]"
    },
    {
      "src": "public: public [24449,24455]",
      "dest": "public: public [24499,24505]"
    },
    {
      "src": ",: , [11311,11312]",
      "dest": ",: , [11343,11344]"
    },
    {
      "src": "yul_evm_builtin [20424,20427]",
      "dest": "yul_evm_builtin [20456,20459]"
    },
    {
      "src": "address: address [4126,4133]",
      "dest": "address: address [4158,4165]"
    },
    {
      "src": "comment: /**      * @dev Set canBurn status for the account.      * @param account address to set canBurn flag for      * @param _canBurn canBurn flag value      *      * Requirements:      *      * - `msg.sender` should be owner.      */ [38051,38288]",
      "dest": "comment: /**      * @dev Set canBurn status for the account.      * @param account address to set canBurn flag for      * @param _canBurn canBurn flag value      *      * Requirements:      *      * - `msg.sender` should be owner.      */ [38101,38338]"
    },
    {
      "src": "identifier: pendingOwner [5341,5353]",
      "dest": "identifier: pendingOwner [5373,5385]"
    },
    {
      "src": "identifier: errorMessage [10960,10972]",
      "dest": "identifier: errorMessage [10992,11004]"
    },
    {
      "src": "state_variable_declaration [1149,1172]",
      "dest": "state_variable_declaration [1089,1112]"
    },
    {
      "src": "constant: constant [36259,36267]",
      "dest": "constant: constant [36309,36317]"
    },
    {
      "src": "uint256: uint256 [25396,25403]",
      "dest": "uint256: uint256 [25446,25453]"
    },
    {
      "src": "function: function [17815,17823]",
      "dest": "function: function [17847,17855]"
    },
    {
      "src": "identifier: weiValue [19945,19953]",
      "dest": "identifier: weiValue [19977,19985]"
    },
    {
      "src": "binary_expression [30118,30139]",
      "dest": "binary_expression [30168,30189]"
    },
    {
      "src": "primitive_type [1615,1622]",
      "dest": "primitive_type [1584,1591]"
    },
    {
      "src": "%: % [14377,14378]",
      "dest": "%: % [14409,14410]"
    },
    {
      "src": "identifier: onlyOwner [37792,37801]",
      "dest": "identifier: onlyOwner [37842,37851]"
    },
    {
      "src": "primitive_type [1694,1701]",
      "dest": "primitive_type [1663,1670]"
    },
    {
      "src": "identifier: functionCall [17920,17932]",
      "dest": "identifier: functionCall [17952,17964]"
    },
    {
      "src": "identifier: amount [16772,16778]",
      "dest": "identifier: amount [16804,16810]"
    },
    {
      "src": "type_name [953,957]",
      "dest": "type_name [893,897]"
    },
    {
      "src": "identifier: _max [34082,34086]",
      "dest": "identifier: _max [34132,34136]"
    },
    {
      "src": "identifier: add [28018,28021]",
      "dest": "identifier: add [28068,28071]"
    },
    {
      "src": "/: / [11685,11686]",
      "dest": "/: / [11717,11718]"
    },
    {
      "src": "solidity_pragma_token [409,424]",
      "dest": "solidity_pragma_token [349,364]"
    },
    {
      "src": "function_body [28434,28747]",
      "dest": "function_body [28484,28797]"
    },
    {
      "src": "function: function [43545,43553]",
      "dest": "function: function [48174,48182]"
    },
    {
      "src": "identifier: account [15643,15650]",
      "dest": "identifier: account [15675,15682]"
    },
    {
      "src": "parameter [12888,12897]",
      "dest": "parameter [12920,12929]"
    },
    {
      "src": "type_name [23847,23854]",
      "dest": "type_name [23889,23896]"
    },
    {
      "src": "pragma: pragma [41067,41073]",
      "dest": "pragma: pragma [41120,41126]"
    },
    {
      "src": "identifier: a [10957,10958]",
      "dest": "identifier: a [10989,10990]"
    },
    {
      "src": "state_variable_declaration [924,945]",
      "dest": "state_variable_declaration [864,885]"
    },
    {
      "src": "abstract: abstract [22440,22448]",
      "dest": "abstract: abstract [22474,22482]"
    },
    {
      "src": "identifier: errorMessage [14344,14356]",
      "dest": "identifier: errorMessage [14376,14388]"
    },
    {
      "src": "primitive_type [24713,24720]",
      "dest": "primitive_type [24763,24770]"
    },
    {
      "src": "array_access [27974,27994]",
      "dest": "array_access [28024,28044]"
    },
    {
      "src": "return_type_definition [13656,13673]",
      "dest": "return_type_definition [13688,13705]"
    },
    {
      "src": "struct_expression [19925,19955]",
      "dest": "struct_expression [19957,19987]"
    },
    {
      "src": "member_expression [39172,39187]",
      "dest": "member_expression [39222,39237]"
    },
    {
      "src": "function: function [31383,31391]",
      "dest": "function: function [31433,31441]"
    },
    {
      "src": "identifier: onlyPendingOwner [4748,4764]",
      "dest": "identifier: onlyPendingOwner [4780,4796]"
    },
    {
      "src": "assignment_expression [28635,28686]",
      "dest": "assignment_expression [28685,28736]"
    },
    {
      "src": "type_name [23718,23725]",
      "dest": "type_name [23760,23767]"
    },
    {
      "src": "[: [ [40303,40304]",
      "dest": "[: [ [40353,40354]"
    },
    {
      "src": "!=: != [27662,27664]",
      "dest": "!=: != [27712,27714]"
    },
    {
      "src": "uint256: uint256 [42879,42886]",
      "dest": "uint256: uint256 [47508,47515]"
    },
    {
      "src": "identifier: sender [27655,27661]",
      "dest": "identifier: sender [27705,27711]"
    },
    {
      "src": "primitive_type [5041,5048]",
      "dest": "primitive_type [5073,5080]"
    },
    {
      "src": "primitive_type [1178,1184]",
      "dest": "primitive_type [1118,1124]"
    },
    {
      "src": "): ) [28720,28721]",
      "dest": "): ) [28770,28771]"
    },
    {
      "src": "member_expression [27997,28021]",
      "dest": "member_expression [28047,28071]"
    },
    {
      "src": "virtual: virtual [26866,26873]",
      "dest": "virtual: virtual [26916,26923]"
    },
    {
      "src": "identifier: transfer [6052,6060]",
      "dest": "identifier: transfer [6084,6092]"
    },
    {
      "src": "variable_declaration_tuple [19883,19922]",
      "dest": "variable_declaration_tuple [19915,19954]"
    },
    {
      "src": "identifier: require [16968,16975]",
      "dest": "identifier: require [17000,17007]"
    },
    {
      "src": ">: > [12980,12981]",
      "dest": ">: > [13012,13013]"
    },
    {
      "src": "!=: != [42904,42906]",
      "dest": "!=: != [47533,47535]"
    },
    {
      "src": "binary_expression [27655,27675]",
      "dest": "binary_expression [27705,27725]"
    },
    {
      "src": "primitive_type [25445,25449]",
      "dest": "primitive_type [25495,25499]"
    },
    {
      "src": "state_variable_declaration [1836,1906]",
      "dest": "state_variable_declaration [1868,1938]"
    },
    {
      "src": "parameter [10457,10464]",
      "dest": "parameter [10489,10496]"
    },
    {
      "src": "type_name [24713,24720]",
      "dest": "type_name [24763,24770]"
    },
    {
      "src": "): ) [1712,1713]",
      "dest": "): ) [1681,1682]"
    },
    {
      "src": "type_name [18855,18862]",
      "dest": "type_name [18887,18894]"
    },
    {
      "src": "library_declaration [14493,20577]",
      "dest": "library_declaration [14525,20609]"
    },
    {
      "src": "uint256: uint256 [26113,26120]",
      "dest": "uint256: uint256 [26163,26170]"
    },
    {
      "src": "uint256: uint256 [12877,12884]",
      "dest": "uint256: uint256 [12909,12916]"
    },
    {
      "src": "comment: /**  * @dev Contract that prevents addresses that were previously using autosweep addresses from  * making transfers on them.  *  * In older versions TrueCurrencies had a feature called Autosweep.  * Given a single deposit address, it was possible to generate 16^5-1 autosweep addresses.  * E.g. having deposit address 0xc257274276a4e539741ca11b590b9447b26a8051, you could generate  * - 0xc257274276a4e539741ca11b590b9447b2600000  * - 0xc257274276a4e539741ca11b590b9447b2600001  * - ...  * - 0xc257274276a4e539741ca11b590b9447b26fffff  * Every transfer to an autosweep address resulted as a transfer to deposit address.  * This feature got deprecated, but there were 4 addresses that still actively using the feature.  *  * This contract will reject a transfer to these 4*(16^5-1) addresses to prevent accidental token freeze.  */ [41094,41939]",
      "dest": "comment: /**  * @dev Contract that prevents addresses that were previously using autosweep addresses from  * making transfers on them.  *  * In older versions TrueCurrencies had a feature called Autosweep.  * Given a single deposit address, it was possible to generate 16^5-1 autosweep addresses.  * E.g. having deposit address 0xc257274276a4e539741ca11b590b9447b26a8051, you could generate  * - 0xc257274276a4e539741ca11b590b9447b2600000  * - 0xc257274276a4e539741ca11b590b9447b2600001  * - ...  * - 0xc257274276a4e539741ca11b590b9447b26fffff  * Every transfer to an autosweep address resulted as a transfer to deposit address.  * This feature got deprecated, but there were 4 addresses that still actively using the feature.  *  * This contract will reject a transfer to these 4*(16^5-1) addresses to prevent accidental token freeze.  */ [45894,46739]"
    },
    {
      "src": "primitive_type [42907,42914]",
      "dest": "primitive_type [47536,47543]"
    },
    {
      "src": "parameter [9959,9968]",
      "dest": "parameter [9991,10000]"
    },
    {
      "src": "primitive_type [24197,24204]",
      "dest": "primitive_type [24247,24254]"
    },
    {
      "src": "]: ] [27888,27889]",
      "dest": "]: ] [27938,27939]"
    },
    {
      "src": "\": \" [19808,19809]",
      "dest": "\": \" [19840,19841]"
    },
    {
      "src": "event_definition [7822,7894]",
      "dest": "event_definition [7854,7926]"
    },
    {
      "src": "parameter [10423,10432]",
      "dest": "parameter [10455,10464]"
    },
    {
      "src": "expression_statement [19423,19505]",
      "dest": "expression_statement [19455,19537]"
    },
    {
      "src": "(: ( [4575,4576]",
      "dest": "(: ( [4607,4608]"
    },
    {
      "src": "emit: emit [5276,5280]",
      "dest": "emit: emit [5308,5312]"
    },
    {
      "src": "function: function [33185,33193]",
      "dest": "function: function [33235,33243]"
    },
    {
      "src": "): ) [10899,10900]",
      "dest": "): ) [10931,10932]"
    },
    {
      "src": "string_literal [4814,4834]",
      "dest": "string_literal [4846,4866]"
    },
    {
      "src": "parameter [25445,25449]",
      "dest": "parameter [25495,25499]"
    },
    {
      "src": "return: return [10100,10106]",
      "dest": "return: return [10132,10138]"
    },
    {
      "src": "visibility [33215,33223]",
      "dest": "visibility [33265,33273]"
    },
    {
      "src": "string [16780,16811]",
      "dest": "string [16812,16843]"
    },
    {
      "src": "]: ] [40311,40312]",
      "dest": "]: ] [40361,40362]"
    },
    {
      "src": "{: { [16728,16729]",
      "dest": "{: { [16760,16761]"
    },
    {
      "src": "type_name [10924,10931]",
      "dest": "type_name [10956,10963]"
    },
    {
      "src": "uint256: uint256 [33879,33886]",
      "dest": "uint256: uint256 [33929,33936]"
    },
    {
      "src": "type_name [14308,14315]",
      "dest": "type_name [14340,14347]"
    },
    {
      "src": "comment: // benefit is lost if 'b' is also tested. [11456,11497]",
      "dest": "comment: // benefit is lost if 'b' is also tested. [11488,11529]"
    },
    {
      "src": ",: , [26195,26196]",
      "dest": ",: , [26245,26246]"
    },
    {
      "src": ",: , [10860,10861]",
      "dest": ",: , [10892,10893]"
    },
    {
      "src": "pure: pure [13651,13655]",
      "dest": "pure: pure [13683,13687]"
    },
    {
      "src": "function_definition [5215,5397]",
      "dest": "function_definition [5247,5429]"
    },
    {
      "src": "primitive_type [38314,38321]",
      "dest": "primitive_type [38364,38371]"
    },
    {
      "src": "if: if [11588,11590]",
      "dest": "if: if [11620,11622]"
    },
    {
      "src": "uint256: uint256 [12249,12256]",
      "dest": "uint256: uint256 [12281,12288]"
    },
    {
      "src": "): ) [39295,39296]",
      "dest": "): ) [39345,39346]"
    },
    {
      "src": "function: function [23665,23673]",
      "dest": "function: function [23699,23707]"
    },
    {
      "src": "string [34601,34650]",
      "dest": "string [34651,34700]"
    },
    {
      "src": "type_name [42802,42809]",
      "dest": "type_name [47431,47438]"
    },
    {
      "src": "]: ] [30217,30218]",
      "dest": "]: ] [30267,30268]"
    },
    {
      "src": "mapping: mapping [1626,1633]",
      "dest": "mapping: mapping [1595,1602]"
    },
    {
      "src": "identifier: recipient [16692,16701]",
      "dest": "identifier: recipient [16724,16733]"
    },
    {
      "src": ".: . [19444,19445]",
      "dest": ".: . [19476,19477]"
    },
    {
      "src": "(: ( [20526,20527]",
      "dest": "(: ( [20558,20559]"
    },
    {
      "src": "primitive_type [1974,1981]",
      "dest": "primitive_type [2006,2013]"
    },
    {
      "src": "call_argument [12328,12329]",
      "dest": "call_argument [12360,12361]"
    },
    {
      "src": "call_argument [39279,39295]",
      "dest": "call_argument [39329,39345]"
    },
    {
      "src": "(: ( [43590,43591]",
      "dest": "(: ( [48219,48220]"
    },
    {
      "src": "primitive_type [10924,10931]",
      "dest": "primitive_type [10956,10963]"
    },
    {
      "src": "address: address [5765,5772]",
      "dest": "address: address [5797,5804]"
    },
    {
      "src": "event: event [8059,8064]",
      "dest": "event: event [8091,8096]"
    },
    {
      "src": "return_statement [24846,24858]",
      "dest": "return_statement [24896,24908]"
    },
    {
      "src": "member_expression [27892,27913]",
      "dest": "member_expression [27942,27963]"
    },
    {
      "src": "return_type_definition [8758,8783]",
      "dest": "return_type_definition [8790,8815]"
    },
    {
      "src": "function_body [42840,43001]",
      "dest": "function_body [47469,47630]"
    },
    {
      "src": "user_defined_type [43246,43277]",
      "dest": "user_defined_type [47875,47906]"
    },
    {
      "src": "identifier: owner [24526,24531]",
      "dest": "identifier: owner [24576,24581]"
    },
    {
      "src": "type_name [19898,19903]",
      "dest": "type_name [19930,19935]"
    },
    {
      "src": "(: ( [26908,26909]",
      "dest": "(: ( [26958,26959]"
    },
    {
      "src": "function_body [25451,25660]",
      "dest": "function_body [25501,25710]"
    },
    {
      "src": "identifier: allowance [24407,24416]",
      "dest": "identifier: allowance [24457,24466]"
    },
    {
      "src": "(: ( [34675,34676]",
      "dest": "(: ( [34725,34726]"
    },
    {
      "src": "primitive_type [14246,14253]",
      "dest": "primitive_type [14278,14285]"
    },
    {
      "src": "identifier: RewardAllocation [1855,1871]",
      "dest": "identifier: RewardAllocation [1887,1903]"
    },
    {
      "src": "call_argument [30268,30274]",
      "dest": "call_argument [30318,30324]"
    },
    {
      "src": ",: , [12897,12898]",
      "dest": ",: , [12929,12930]"
    },
    {
      "src": "array_access [26206,26240]",
      "dest": "array_access [26256,26290]"
    },
    {
      "src": "uint256: uint256 [10013,10020]",
      "dest": "uint256: uint256 [10045,10052]"
    },
    {
      "src": "\": \" [38983,38984]",
      "dest": "\": \" [39033,39034]"
    },
    {
      "src": "primitive_type [1252,1259]",
      "dest": "primitive_type [1192,1199]"
    },
    {
      "src": "identifier: a [10859,10860]",
      "dest": "identifier: a [10891,10892]"
    },
    {
      "src": "\": \" [33959,33960]",
      "dest": "\": \" [34009,34010]"
    },
    {
      "src": "parameter [23894,23901]",
      "dest": "parameter [23944,23951]"
    },
    {
      "src": "return_statement [25641,25653]",
      "dest": "return_statement [25691,25703]"
    },
    {
      "src": "identifier: isContract [15112,15122]",
      "dest": "identifier: isContract [15144,15154]"
    },
    {
      "src": "return: return [24507,24513]",
      "dest": "return: return [24557,24563]"
    },
    {
      "src": "pragma_directive [43008,43031]",
      "dest": "pragma_directive [45867,45890]"
    },
    {
      "src": "call_argument [16780,16811]",
      "dest": "call_argument [16812,16843]"
    },
    {
      "src": "(: ( [23564,23565]",
      "dest": "(: ( [23598,23599]"
    },
    {
      "src": "uint256: uint256 [40984,40991]",
      "dest": "uint256: uint256 [41037,41044]"
    },
    {
      "src": "type_name [22863,22869]",
      "dest": "type_name [22897,22903]"
    },
    {
      "src": "\": \" [40314,40315]",
      "dest": "\": \" [40364,40365]"
    },
    {
      "src": "identifier: Burn [32449,32453]",
      "dest": "identifier: Burn [32499,32503]"
    },
    {
      "src": "call_argument [19956,19960]",
      "dest": "call_argument [19988,19992]"
    },
    {
      "src": "identifier: amount [28565,28571]",
      "dest": "identifier: amount [28615,28621]"
    },
    {
      "src": "view: view [24456,24460]",
      "dest": "view: view [24506,24510]"
    },
    {
      "src": "): ) [19737,19738]",
      "dest": "): ) [19769,19770]"
    },
    {
      "src": "address: address [15123,15130]",
      "dest": "address: address [15155,15162]"
    },
    {
      "src": "\": \" [29220,29221]",
      "dest": "\": \" [29270,29271]"
    },
    {
      "src": "identifier: depositAddress [42810,42824]",
      "dest": "identifier: depositAddress [47439,47453]"
    },
    {
      "src": "if_statement [11588,11635]",
      "dest": "if_statement [11620,11667]"
    },
    {
      "src": "expression_statement [24263,24306]",
      "dest": "expression_statement [24313,24356]"
    },
    {
      "src": "function_body [37197,37456]",
      "dest": "function_body [37247,37506]"
    },
    {
      "src": ",: , [18391,18392]",
      "dest": ",: , [18423,18424]"
    },
    {
      "src": ",: , [28474,28475]",
      "dest": ",: , [28524,28525]"
    },
    {
      "src": "primitive_type [33879,33886]",
      "dest": "primitive_type [33929,33936]"
    },
    {
      "src": "override: override [24469,24477]",
      "dest": "override: override [24519,24527]"
    },
    {
      "src": "function_definition [43455,43537]",
      "dest": "function_definition [48084,48166]"
    },
    {
      "src": ">>: >> [42898,42900]",
      "dest": ">>: >> [47527,47529]"
    },
    {
      "src": "contract_declaration [8681,9064]",
      "dest": "contract_declaration [8713,9096]"
    },
    {
      "src": "return_statement [43617,43634]",
      "dest": "return_statement [48246,48263]"
    },
    {
      "src": "memory: memory [18327,18333]",
      "dest": "memory: memory [18359,18365]"
    },
    {
      "src": "override_specifier [24469,24477]",
      "dest": "override_specifier [24519,24527]"
    },
    {
      "src": "): ) [13640,13641]",
      "dest": "): ) [13672,13673]"
    },
    {
      "src": ",: , [36430,36431]",
      "dest": ",: , [36480,36481]"
    },
    {
      "src": "): ) [5057,5058]",
      "dest": "): ) [5089,5090]"
    },
    {
      "src": "function_body [5265,5397]",
      "dest": "function_body [5297,5429]"
    },
    {
      "src": "type_name [1477,1524]",
      "dest": "type_name [1417,1464]"
    },
    {
      "src": "user_defined_type [36183,36206]",
      "dest": "user_defined_type [36233,36256]"
    },
    {
      "src": "primitive_type [34435,34442]",
      "dest": "primitive_type [34485,34492]"
    },
    {
      "src": "number_literal: 0 [5387,5388]",
      "dest": "number_literal: 0 [5419,5420]"
    },
    {
      "src": "identifier: _burn [40220,40225]",
      "dest": "identifier: _burn [40270,40275]"
    },
    {
      "src": ".: . [8805,8806]",
      "dest": ".: . [8837,8838]"
    },
    {
      "src": "identifier: recipient [28062,28071]",
      "dest": "identifier: recipient [28112,28121]"
    },
    {
      "src": "call_argument [10049,10055]",
      "dest": "call_argument [10081,10087]"
    },
    {
      "src": ",: , [29347,29348]",
      "dest": ",: , [29397,29398]"
    },
    {
      "src": "identifier: Mint [37427,37431]",
      "dest": "identifier: Mint [37477,37481]"
    },
    {
      "src": "(: ( [39786,39787]",
      "dest": "(: ( [39836,39837]"
    },
    {
      "src": "string_literal [16780,16811]",
      "dest": "string_literal [16812,16843]"
    },
    {
      "src": "return_type_definition [9984,10001]",
      "dest": "return_type_definition [10016,10033]"
    },
    {
      "src": "member_expression [28656,28678]",
      "dest": "member_expression [28706,28728]"
    },
    {
      "src": "primitive_type [8767,8782]",
      "dest": "primitive_type [8799,8814]"
    },
    {
      "src": "(: ( [12293,12294]",
      "dest": "(: ( [12325,12326]"
    },
    {
      "src": "identifier: account [23931,23938]",
      "dest": "identifier: account [23981,23988]"
    },
    {
      "src": "]: ] [38391,38392]",
      "dest": "]: ] [38441,38442]"
    },
    {
      "src": "}: } [31896,31897]",
      "dest": "}: } [31946,31947]"
    },
    {
      "src": "identifier: balanceOf [31823,31832]",
      "dest": "identifier: balanceOf [31873,31882]"
    },
    {
      "src": "return: return [24846,24852]",
      "dest": "return: return [24896,24902]"
    },
    {
      "src": "pragma: pragma [5404,5410]",
      "dest": "pragma: pragma [5436,5442]"
    },
    {
      "src": ",: , [39911,39912]",
      "dest": ",: , [39961,39962]"
    },
    {
      "src": "string [30141,30177]",
      "dest": "string [30191,30227]"
    },
    {
      "src": "state_variable_declaration [1367,1405]",
      "dest": "state_variable_declaration [1307,1345]"
    },
    {
      "src": ",: , [28399,28400]",
      "dest": ",: , [28449,28450]"
    },
    {
      "src": "call_expression [30031,30099]",
      "dest": "call_expression [30081,30149]"
    },
    {
      "src": "): ) [17979,17980]",
      "dest": "): ) [18011,18012]"
    },
    {
      "src": "function_body [4351,4443]",
      "dest": "function_body [4383,4475]"
    },
    {
      "src": ",: , [22492,22493]",
      "dest": ",: , [22526,22527]"
    },
    {
      "src": "call_expression [39207,39235]",
      "dest": "call_expression [39257,39285]"
    },
    {
      "src": "virtual: virtual [31017,31024]",
      "dest": "virtual: virtual [31067,31074]"
    },
    {
      "src": "identifier: _ [4621,4622]",
      "dest": "identifier: _ [4653,4654]"
    },
    {
      "src": "contract_body [32244,34740]",
      "dest": "contract_body [32294,34790]"
    },
    {
      "src": "comment: // Look for revert reason and bubble it up if present [20050,20103]",
      "dest": "comment: // Look for revert reason and bubble it up if present [20082,20135]"
    },
    {
      "src": "visibility [39750,39758]",
      "dest": "visibility [39800,39808]"
    },
    {
      "src": "pure: pure [43577,43581]",
      "dest": "pure: pure [48206,48210]"
    },
    {
      "src": "event_paramater [8074,8095]",
      "dest": "event_paramater [8106,8127]"
    },
    {
      "src": "identifier: this [16755,16759]",
      "dest": "identifier: this [16787,16791]"
    },
    {
      "src": "=: = [13019,13020]",
      "dest": "=: = [13051,13052]"
    },
    {
      "src": "): ) [28571,28572]",
      "dest": "): ) [28621,28622]"
    },
    {
      "src": "member_expression [31469,31490]",
      "dest": "member_expression [31519,31540]"
    },
    {
      "src": "returns: returns [43397,43404]",
      "dest": "returns: returns [48026,48033]"
    },
    {
      "src": "identifier: requireNotAutosweepAddress [42331,42357]",
      "dest": "identifier: requireNotAutosweepAddress [47132,47158]"
    },
    {
      "src": "visibility [43376,43382]",
      "dest": "visibility [48005,48011]"
    },
    {
      "src": "identifier: this [31841,31845]",
      "dest": "identifier: this [31891,31895]"
    },
    {
      "src": "type_name [14257,14263]",
      "dest": "type_name [14289,14295]"
    },
    {
      "src": "call_expression [4778,4835]",
      "dest": "call_expression [4810,4867]"
    },
    {
      "src": "(: ( [42357,42358]",
      "dest": "(: ( [47158,47159]"
    },
    {
      "src": "return: return [23738,23744]",
      "dest": "return: return [23780,23786]"
    },
    {
      "src": "call_argument [40392,40398]",
      "dest": "call_argument [40442,40448]"
    },
    {
      "src": "return_statement [40977,41053]",
      "dest": "return_statement [41030,41106]"
    },
    {
      "src": "solidity_version: 0.6.2 [14412,14417]",
      "dest": "solidity_version: 0.6.2 [14444,14449]"
    },
    {
      "src": "call_expression [37300,37328]",
      "dest": "call_expression [37350,37378]"
    },
    {
      "src": "parameter [16703,16717]",
      "dest": "parameter [16735,16749]"
    },
    {
      "src": "): ) [30138,30139]",
      "dest": "): ) [30188,30189]"
    },
    {
      "src": "expression_statement [38951,39022]",
      "dest": "expression_statement [39001,39072]"
    },
    {
      "src": "call_argument [31477,31481]",
      "dest": "call_argument [31527,31531]"
    },
    {
      "src": "type_cast_expression [28544,28554]",
      "dest": "type_cast_expression [28594,28604]"
    },
    {
      "src": "uint8: uint8 [43320,43325]",
      "dest": "uint8: uint8 [47949,47954]"
    },
    {
      "src": ".: . [34669,34670]",
      "dest": ".: . [34719,34720]"
    },
    {
      "src": "identifier: amount [39207,39213]",
      "dest": "identifier: amount [39257,39263]"
    },
    {
      "src": "): ) [11598,11599]",
      "dest": "): ) [11630,11631]"
    },
    {
      "src": "array_access [23921,23939]",
      "dest": "array_access [23971,23989]"
    },
    {
      "src": "parameter [38864,38881]",
      "dest": "parameter [38914,38931]"
    },
    {
      "src": "visibility [29127,29135]",
      "dest": "visibility [29177,29185]"
    },
    {
      "src": "expression_statement [25462,25499]",
      "dest": "expression_statement [25512,25549]"
    },
    {
      "src": "(: ( [9992,9993]",
      "dest": "(: ( [10024,10025]"
    },
    {
      "src": "address: address [27568,27575]",
      "dest": "address: address [27618,27625]"
    },
    {
      "src": "(: ( [24778,24779]",
      "dest": "(: ( [24828,24829]"
    },
    {
      "src": ",: , [4812,4813]",
      "dest": ",: , [4844,4845]"
    },
    {
      "src": "comment: /**      * @dev See {IERC20-balanceOf}.      */ [23773,23822]",
      "dest": "comment: /**      * @dev See {IERC20-balanceOf}.      */ [23815,23864]"
    },
    {
      "src": "string_literal [10494,10526]",
      "dest": "string_literal [10526,10558]"
    },
    {
      "src": "true [24853,24857]",
      "dest": "true [24903,24907]"
    },
    {
      "src": "identifier: account [28453,28460]",
      "dest": "identifier: account [28503,28510]"
    },
    {
      "src": "identifier: requireNotAutosweepAddress [42239,42265]",
      "dest": "identifier: requireNotAutosweepAddress [47040,47066]"
    },
    {
      "src": "expression_statement [34664,34693]",
      "dest": "expression_statement [34714,34743]"
    },
    {
      "src": "emit: emit [37994,37998]",
      "dest": "emit: emit [38044,38048]"
    },
    {
      "src": "(: ( [26095,26096]",
      "dest": "(: ( [26145,26146]"
    },
    {
      "src": "return: return [43514,43520]",
      "dest": "return: return [48143,48149]"
    },
    {
      "src": "primitive_type [40984,40991]",
      "dest": "primitive_type [41037,41044]"
    },
    {
      "src": "call_argument [39229,39233]",
      "dest": "call_argument [39279,39283]"
    },
    {
      "src": "primitive_type [13631,13638]",
      "dest": "primitive_type [13663,13670]"
    },
    {
      "src": "call_argument [42879,42967]",
      "dest": "call_argument [47508,47596]"
    },
    {
      "src": "(: ( [31872,31873]",
      "dest": "(: ( [31922,31923]"
    },
    {
      "src": "true [27047,27051]",
      "dest": "true [27097,27101]"
    },
    {
      "src": "solidity: solidity [31042,31050]",
      "dest": "solidity: solidity [31092,31100]"
    },
    {
      "src": "override_specifier [24228,24236]",
      "dest": "override_specifier [24278,24286]"
    },
    {
      "src": "array_access [26932,26966]",
      "dest": "array_access [26982,27016]"
    },
    {
      "src": "return_type_definition [24770,24784]",
      "dest": "return_type_definition [24820,24834]"
    },
    {
      "src": "}: } [31893,31894]",
      "dest": "}: } [31943,31944]"
    },
    {
      "src": "string [27761,27798]",
      "dest": "string [27811,27848]"
    },
    {
      "src": "returns: returns [43582,43589]",
      "dest": "returns: returns [48211,48218]"
    },
    {
      "src": "returns: returns [8870,8877]",
      "dest": "returns: returns [8902,8909]"
    },
    {
      "src": "virtual: virtual [30012,30019]",
      "dest": "virtual: virtual [30062,30069]"
    },
    {
      "src": "}: } [23764,23765]",
      "dest": "}: } [23806,23807]"
    },
    {
      "src": "address: address [39678,39685]",
      "dest": "address: address [39728,39735]"
    },
    {
      "src": "): ) [9968,9969]",
      "dest": "): ) [10000,10001]"
    },
    {
      "src": "parameter [6423,6436]",
      "dest": "parameter [6455,6468]"
    },
    {
      "src": "address: address [7586,7593]",
      "dest": "address: address [7618,7625]"
    },
    {
      "src": "return: return [12314,12320]",
      "dest": "return: return [12346,12352]"
    },
    {
      "src": "call_argument [39268,39296]",
      "dest": "call_argument [39318,39346]"
    },
    {
      "src": ",: , [30266,30267]",
      "dest": ",: , [30316,30317]"
    },
    {
      "src": "if: if [39121,39123]",
      "dest": "if: if [39171,39173]"
    },
    {
      "src": ".: . [27909,27910]",
      "dest": ".: . [27959,27960]"
    },
    {
      "src": "call_expression [19750,19810]",
      "dest": "call_expression [19782,19842]"
    },
    {
      "src": "parameter [10862,10871]",
      "dest": "parameter [10894,10903]"
    },
    {
      "src": "string_literal [40314,40359]",
      "dest": "string_literal [40364,40409]"
    },
    {
      "src": "parameter [24417,24430]",
      "dest": "parameter [24467,24480]"
    },
    {
      "src": "internal: internal [39750,39758]",
      "dest": "internal: internal [39800,39808]"
    },
    {
      "src": "return_type_definition [24478,24495]",
      "dest": "return_type_definition [24528,24545]"
    },
    {
      "src": "pragma: pragma [21226,21232]",
      "dest": "pragma: pragma [21260,21266]"
    },
    {
      "src": "parameter [24779,24783]",
      "dest": "parameter [24829,24833]"
    },
    {
      "src": "}: } [19954,19955]",
      "dest": "}: } [19986,19987]"
    },
    {
      "src": "array_access [25540,25573]",
      "dest": "array_access [25590,25623]"
    },
    {
      "src": "type_name [1626,1653]",
      "dest": "type_name [1595,1622]"
    },
    {
      "src": "string_literal [10057,10086]",
      "dest": "string_literal [10089,10118]"
    },
    {
      "src": "identifier: sender [25552,25558]",
      "dest": "identifier: sender [25602,25608]"
    },
    {
      "src": "string_literal [43730,43736]",
      "dest": "string_literal [48359,48365]"
    },
    {
      "src": "(: ( [31468,31469]",
      "dest": "(: ( [31518,31519]"
    },
    {
      "src": "]: ] [29314,29315]",
      "dest": "]: ] [29364,29365]"
    },
    {
      "src": "visibility [13642,13650]",
      "dest": "visibility [13674,13682]"
    },
    {
      "src": "call_argument [19559,19564]",
      "dest": "call_argument [19591,19596]"
    },
    {
      "src": "type_name [924,931]",
      "dest": "type_name [864,871]"
    },
    {
      "src": "primitive_type [30129,30136]",
      "dest": "primitive_type [30179,30186]"
    },
    {
      "src": "): ) [42896,42897]",
      "dest": "): ) [47525,47526]"
    },
    {
      "src": "identifier: spender [26923,26930]",
      "dest": "identifier: spender [26973,26980]"
    },
    {
      "src": ",: , [33957,33958]",
      "dest": ",: , [34007,34008]"
    },
    {
      "src": "visibility [2036,2042]",
      "dest": "visibility [2068,2074]"
    },
    {
      "src": "call_argument [26197,26204]",
      "dest": "call_argument [26247,26254]"
    },
    {
      "src": "type_alias [22547,22554]",
      "dest": "type_alias [22581,22588]"
    },
    {
      "src": "state_mutability [11333,11337]",
      "dest": "state_mutability [11365,11369]"
    },
    {
      "src": "[: [ [28665,28666]",
      "dest": "[: [ [28715,28716]"
    },
    {
      "src": "): ) [38912,38913]",
      "dest": "): ) [38962,38963]"
    },
    {
      "src": "return_type_definition [25436,25450]",
      "dest": "return_type_definition [25486,25500]"
    },
    {
      "src": "primitive_type [29987,29994]",
      "dest": "primitive_type [30037,30044]"
    },
    {
      "src": "\": \" [37330,37331]",
      "dest": "\": \" [37380,37381]"
    },
    {
      "src": "primitive_type [42068,42075]",
      "dest": "primitive_type [46869,46876]"
    },
    {
      "src": "call_argument [26183,26195]",
      "dest": "call_argument [26233,26245]"
    },
    {
      "src": "identifier: _transfer [42023,42032]",
      "dest": "identifier: _transfer [46824,46833]"
    },
    {
      "src": "): ) [37327,37328]",
      "dest": "): ) [37377,37378]"
    },
    {
      "src": ",: , [19350,19351]",
      "dest": ",: , [19382,19383]"
    },
    {
      "src": "number_literal: 0 [11597,11598]",
      "dest": "number_literal: 0 [11629,11630]"
    },
    {
      "src": "string [10057,10086]",
      "dest": "string [10089,10118]"
    },
    {
      "src": "revert_statement [20520,20541]",
      "dest": "revert_statement [20552,20573]"
    },
    {
      "src": "parameter [13620,13629]",
      "dest": "parameter [13652,13661]"
    },
    {
      "src": "(: ( [37744,37745]",
      "dest": "(: ( [37794,37795]"
    },
    {
      "src": "call_argument [16755,16759]",
      "dest": "call_argument [16787,16791]"
    },
    {
      "src": "visibility [24746,24752]",
      "dest": "visibility [24796,24802]"
    },
    {
      "src": "parameter [30980,30990]",
      "dest": "parameter [31030,31040]"
    },
    {
      "src": "array_access [24514,24532]",
      "dest": "array_access [24564,24582]"
    },
    {
      "src": "parameter [18855,18868]",
      "dest": "parameter [18887,18900]"
    },
    {
      "src": ",: , [14244,14245]",
      "dest": ",: , [14276,14277]"
    },
    {
      "src": "returns: returns [43487,43494]",
      "dest": "returns: returns [48116,48123]"
    },
    {
      "src": "uint256: uint256 [42096,42103]",
      "dest": "uint256: uint256 [46897,46904]"
    },
    {
      "src": "type_name [30966,30973]",
      "dest": "type_name [31016,31023]"
    },
    {
      "src": "for: for [22555,22558]",
      "dest": "for: for [22589,22592]"
    },
    {
      "src": "primitive_type [4126,4133]",
      "dest": "primitive_type [4158,4165]"
    },
    {
      "src": "identifier: sub [29425,29428]",
      "dest": "identifier: sub [29475,29478]"
    },
    {
      "src": "identifier: require [34488,34495]",
      "dest": "identifier: require [34538,34545]"
    },
    {
      "src": "pragma: pragma [14395,14401]",
      "dest": "pragma: pragma [14427,14433]"
    },
    {
      "src": "}: } [43446,43447]",
      "dest": "}: } [48075,48076]"
    },
    {
      "src": "^:  ^ [14410,14412]",
      "dest": "^:  ^ [14442,14444]"
    },
    {
      "src": ",: , [12329,12330]",
      "dest": ",: , [12361,12362]"
    },
    {
      "src": "array_access [27872,27889]",
      "dest": "array_access [27922,27939]"
    },
    {
      "src": "view: view [23871,23875]",
      "dest": "view: view [23913,23917]"
    },
    {
      "src": "}: } [14390,14391]",
      "dest": "}: } [14422,14423]"
    },
    {
      "src": "type_name [1386,1393]",
      "dest": "type_name [1326,1333]"
    },
    {
      "src": "identifier: amount [42104,42110]",
      "dest": "identifier: amount [46905,46911]"
    },
    {
      "src": "(: ( [34581,34582]",
      "dest": "(: ( [34631,34632]"
    },
    {
      "src": "number_literal: 0 [1070,1071]",
      "dest": "number_literal: 0 [1010,1011]"
    },
    {
      "src": "event_definition [8059,8137]",
      "dest": "event_definition [8091,8169]"
    },
    {
      "src": "\": \" [27961,27962]",
      "dest": "\": \" [28011,28012]"
    },
    {
      "src": "identifier: _functionCallWithValue [18353,18375]",
      "dest": "identifier: _functionCallWithValue [18385,18407]"
    },
    {
      "src": "solidity: solidity [34751,34759]",
      "dest": "solidity: solidity [34801,34809]"
    },
    {
      "src": "{: { [26889,26890]",
      "dest": "{: { [26939,26940]"
    },
    {
      "src": "): ) [20142,20143]",
      "dest": "): ) [20174,20175]"
    },
    {
      "src": "identifier: TrueCurrency [36167,36179]",
      "dest": "identifier: TrueCurrency [36217,36229]"
    },
    {
      "src": "identifier: data [19956,19960]",
      "dest": "identifier: data [19988,19992]"
    },
    {
      "src": "call_argument [18376,18382]",
      "dest": "call_argument [18408,18414]"
    },
    {
      "src": "comment: /**      * @dev Throws if called by any account other than the owner.      */ [4451,4530]",
      "dest": "comment: /**      * @dev Throws if called by any account other than the owner.      */ [4483,4562]"
    },
    {
      "src": "(: ( [23717,23718]",
      "dest": "(: ( [23759,23760]"
    },
    {
      "src": "}: } [28087,28088]",
      "dest": "}: } [28137,28138]"
    },
    {
      "src": "): ) [7204,7205]",
      "dest": "): ) [7236,7237]"
    },
    {
      "src": "return: return [14368,14374]",
      "dest": "return: return [14400,14406]"
    },
    {
      "src": "[: [ [30202,30203]",
      "dest": "[: [ [30252,30253]"
    },
    {
      "src": "{: { [40966,40967]",
      "dest": "{: { [41019,41020]"
    },
    {
      "src": "}: } [20555,20556]",
      "dest": "}: } [20587,20588]"
    },
    {
      "src": "identifier: require [27647,27654]",
      "dest": "identifier: require [27697,27704]"
    },
    {
      "src": "identifier: ERC20 [22458,22463]",
      "dest": "identifier: ERC20 [22492,22497]"
    },
    {
      "src": "): ) [20442,20443]",
      "dest": "): ) [20474,20475]"
    },
    {
      "src": "state_variable_declaration [827,844]",
      "dest": "state_variable_declaration [767,784]"
    },
    {
      "src": "type_name [42043,42050]",
      "dest": "type_name [46844,46851]"
    },
    {
      "src": "identifier: balanceOf [23837,23846]",
      "dest": "identifier: balanceOf [23879,23888]"
    },
    {
      "src": "identifier: recipient [39257,39266]",
      "dest": "identifier: recipient [39307,39316]"
    },
    {
      "src": "identifier: token [31749,31754]",
      "dest": "identifier: token [31799,31804]"
    },
    {
      "src": "array_access [37944,37966]",
      "dest": "array_access [37994,38016]"
    },
    {
      "src": "): ) [22651,22652]",
      "dest": "): ) [22685,22686]"
    },
    {
      "src": "identifier: _msgSender [25526,25536]",
      "dest": "identifier: _msgSender [25576,25586]"
    },
    {
      "src": "identifier: decimals [43365,43373]",
      "dest": "identifier: decimals [47994,48002]"
    },
    {
      "src": "): ) [10464,10465]",
      "dest": "): ) [10496,10497]"
    },
    {
      "src": "): ) [42992,42993]",
      "dest": "): ) [47621,47622]"
    },
    {
      "src": "type_name [1149,1155]",
      "dest": "type_name [1089,1095]"
    },
    {
      "src": "): ) [1873,1874]",
      "dest": "): ) [1905,1906]"
    },
    {
      "src": "virtual: virtual [24753,24760]",
      "dest": "virtual: virtual [24803,24810]"
    },
    {
      "src": "primitive_type [29174,29181]",
      "dest": "primitive_type [29224,29231]"
    },
    {
      "src": "uint256: uint256 [11313,11320]",
      "dest": "uint256: uint256 [11345,11352]"
    },
    {
      "src": "uint256: uint256 [6478,6485]",
      "dest": "uint256: uint256 [6510,6517]"
    },
    {
      "src": "=>: => [2027,2029]",
      "dest": "=>: => [2059,2061]"
    },
    {
      "src": "expression_statement [5333,5354]",
      "dest": "expression_statement [5365,5386]"
    },
    {
      "src": "primitive_type [19662,19669]",
      "dest": "primitive_type [19694,19701]"
    },
    {
      "src": "string [4597,4609]",
      "dest": "string [4629,4641]"
    },
    {
      "src": "state_mutability [22668,22672]",
      "dest": "state_mutability [22702,22706]"
    },
    {
      "src": "\": \" [19502,19503]",
      "dest": "\": \" [19534,19535]"
    },
    {
      "src": "comment: /**      * @dev send all eth balance in the contract to another address      * @param _to address to send eth balance to      */ [31246,31377]",
      "dest": "comment: /**      * @dev send all eth balance in the contract to another address      * @param _to address to send eth balance to      */ [31296,31427]"
    },
    {
      "src": "}: } [5399,5400]",
      "dest": "}: } [5431,5432]"
    },
    {
      "src": "]: ] [24531,24532]",
      "dest": "]: ] [24581,24582]"
    },
    {
      "src": "identifier: ROUNDING [43521,43529]",
      "dest": "identifier: ROUNDING [48150,48158]"
    },
    {
      "src": "(: ( [7223,7224]",
      "dest": "(: ( [7255,7256]"
    },
    {
      "src": "type_name [15163,15167]",
      "dest": "type_name [15195,15199]"
    },
    {
      "src": "=: = [37967,37968]",
      "dest": "=: = [38017,38018]"
    },
    {
      "src": "): ) [24783,24784]",
      "dest": "): ) [24833,24834]"
    },
    {
      "src": "array_access [39873,39896]",
      "dest": "array_access [39923,39946]"
    },
    {
      "src": "parameter [40226,40241]",
      "dest": "parameter [40276,40291]"
    },
    {
      "src": "primitive_type [40226,40233]",
      "dest": "primitive_type [40276,40283]"
    },
    {
      "src": "string_literal [26988,27027]",
      "dest": "string_literal [27038,27077]"
    },
    {
      "src": "function_body [5076,5118]",
      "dest": "function_body [5108,5150]"
    },
    {
      "src": "function_definition [30936,31028]",
      "dest": "function_definition [30986,31078]"
    },
    {
      "src": "identifier: redemptionAddressCount_Deprecated [1268,1301]",
      "dest": "identifier: redemptionAddressCount_Deprecated [1208,1241]"
    },
    {
      "src": "{: { [26163,26164]",
      "dest": "{: { [26213,26214]"
    },
    {
      "src": "function_definition [10838,11030]",
      "dest": "function_definition [10870,11062]"
    },
    {
      "src": "): ) [25537,25538]",
      "dest": "): ) [25587,25588]"
    },
    {
      "src": "variable_declaration_tuple [16903,16919]",
      "dest": "variable_declaration_tuple [16935,16951]"
    },
    {
      "src": "identifier: amount [28679,28685]",
      "dest": "identifier: amount [28729,28735]"
    },
    {
      "src": "): ) [42227,42228]",
      "dest": "): ) [47028,47029]"
    },
    {
      "src": "parameter [6061,6078]",
      "dest": "parameter [6093,6110]"
    },
    {
      "src": "call_argument [33241,33251]",
      "dest": "call_argument [33291,33301]"
    },
    {
      "src": "(: ( [20120,20121]",
      "dest": "(: ( [20152,20153]"
    },
    {
      "src": "identifier: owner [4590,4595]",
      "dest": "identifier: owner [4622,4627]"
    },
    {
      "src": "primitive_type [1485,1492]",
      "dest": "primitive_type [1425,1432]"
    },
    {
      "src": "call_argument [39365,39371]",
      "dest": "call_argument [39415,39421]"
    },
    {
      "src": "identifier: TrueCurrencyWithLegacyAutosweep [43246,43277]",
      "dest": "identifier: TrueCurrencyWithLegacyAutosweep [47875,47906]"
    },
    {
      "src": "comment: /**      * @dev See {IERC20-approve}.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [24557,24690]",
      "dest": "comment: /**      * @dev See {IERC20-approve}.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [24607,24740]"
    },
    {
      "src": "primitive_type [1912,1919]",
      "dest": "primitive_type [1944,1951]"
    },
    {
      "src": "call_argument [42533,42539]",
      "dest": "call_argument [47334,47340]"
    },
    {
      "src": "{: { [19985,19986]",
      "dest": "{: { [20017,20018]"
    },
    {
      "src": "uint256: uint256 [13665,13672]",
      "dest": "uint256: uint256 [13697,13704]"
    },
    {
      "src": "\": \" [16780,16781]",
      "dest": "\": \" [16812,16813]"
    },
    {
      "src": "identifier: sender [4374,4380]",
      "dest": "identifier: sender [4406,4412]"
    },
    {
      "src": "public: public [26859,26865]",
      "dest": "public: public [26909,26915]"
    },
    {
      "src": "bool: bool [26157,26161]",
      "dest": "bool: bool [26207,26211]"
    },
    {
      "src": "identifier: _mint [28378,28383]",
      "dest": "identifier: _mint [28428,28433]"
    },
    {
      "src": "visibility [34451,34459]",
      "dest": "visibility [34501,34509]"
    },
    {
      "src": "identifier: amount [16945,16951]",
      "dest": "identifier: amount [16977,16983]"
    },
    {
      "src": "type_cast_expression [30129,30139]",
      "dest": "type_cast_expression [30179,30189]"
    },
    {
      "src": "primitive_type [12888,12895]",
      "dest": "primitive_type [12920,12927]"
    },
    {
      "src": "): ) [4555,4556]",
      "dest": "): ) [4587,4588]"
    },
    {
      "src": "solidity_version:  0.6.10 [41082,41089]",
      "dest": "solidity_version:  0.6.10 [41135,41142]"
    },
    {
      "src": "comment: /**      * @dev Atomically decreases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      * - `spender` must have allowance for the caller of at least      * `subtractedValue`.      */ [26295,26784]",
      "dest": "comment: /**      * @dev Atomically decreases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      * - `spender` must have allowance for the caller of at least      * `subtractedValue`.      */ [26345,26834]"
    },
    {
      "src": "identifier: returndata [20007,20017]",
      "dest": "identifier: returndata [20039,20049]"
    },
    {
      "src": "[: [ [1871,1872]",
      "dest": "[: [ [1903,1904]"
    },
    {
      "src": "(: ( [1562,1563]",
      "dest": "(: ( [1531,1532]"
    },
    {
      "src": "address: address [29265,29272]",
      "dest": "address: address [29315,29322]"
    },
    {
      "src": "override: override [24228,24236]",
      "dest": "override: override [24278,24286]"
    },
    {
      "src": "identifier: addedValue [26245,26255]",
      "dest": "identifier: addedValue [26295,26305]"
    },
    {
      "src": "parameter [7605,7619]",
      "dest": "parameter [7637,7651]"
    },
    {
      "src": "type_name [6478,6485]",
      "dest": "type_name [6510,6517]"
    },
    {
      "src": "(: ( [39144,39145]",
      "dest": "(: ( [39194,39195]"
    },
    {
      "src": "function: function [29079,29087]",
      "dest": "function: function [29129,29137]"
    },
    {
      "src": "type_name [827,831]",
      "dest": "type_name [767,771]"
    },
    {
      "src": "\": \" [10525,10526]",
      "dest": "\": \" [10557,10558]"
    },
    {
      "src": ",: , [12258,12259]",
      "dest": ",: , [12290,12291]"
    },
    {
      "src": "type_name [16703,16710]",
      "dest": "type_name [16735,16742]"
    },
    {
      "src": "{: { [31445,31446]",
      "dest": "{: { [31495,31496]"
    },
    {
      "src": "(: ( [28678,28679]",
      "dest": "(: ( [28728,28729]"
    },
    {
      "src": ".: . [29424,29425]",
      "dest": ".: . [29474,29475]"
    },
    {
      "src": "modifier_invocation [38355,38364]",
      "dest": "modifier_invocation [38405,38414]"
    },
    {
      "src": "string [11695,11730]",
      "dest": "string [11727,11762]"
    },
    {
      "src": "address: address [1563,1570]",
      "dest": "address: address [1532,1539]"
    },
    {
      "src": "return_statement [20000,20018]",
      "dest": "return_statement [20032,20050]"
    },
    {
      "src": "type_name [33893,33900]",
      "dest": "type_name [33943,33950]"
    },
    {
      "src": "type_name [34418,34425]",
      "dest": "type_name [34468,34475]"
    },
    {
      "src": "identifier: recipient [24186,24195]",
      "dest": "identifier: recipient [24236,24245]"
    },
    {
      "src": "call_argument [39145,39154]",
      "dest": "call_argument [39195,39204]"
    },
    {
      "src": "abstract: abstract [31197,31205]",
      "dest": "abstract: abstract [31247,31255]"
    },
    {
      "src": "type_name [22682,22688]",
      "dest": "type_name [22716,22722]"
    },
    {
      "src": "type_name [19662,19669]",
      "dest": "type_name [19694,19701]"
    },
    {
      "src": "parameter [6080,6094]",
      "dest": "parameter [6112,6126]"
    },
    {
      "src": "comment: /**      * @dev Destroys `amount` tokens from `msg.sender`, reducing the      * total supply.      * @param amount amount of tokens to burn      *      * Emits a {Transfer} event with `to` set to the zero address.      * Emits a {Burn} event with `burner` set to `msg.sender`      *      * Requirements      *      * - `msg.sender` must have at least `amount` tokens.      *      */ [32785,33179]",
      "dest": "comment: /**      * @dev Destroys `amount` tokens from `msg.sender`, reducing the      * total supply.      * @param amount amount of tokens to burn      *      * Emits a {Transfer} event with `to` set to the zero address.      * Emits a {Burn} event with `burner` set to `msg.sender`      *      * Requirements      *      * - `msg.sender` must have at least `amount` tokens.      *      */ [32835,33229]"
    },
    {
      "src": "): ) [24250,24251]",
      "dest": "): ) [24300,24301]"
    },
    {
      "src": "identifier: sender [42051,42057]",
      "dest": "identifier: sender [46852,46858]"
    },
    {
      "src": "identifier: b [11321,11322]",
      "dest": "identifier: b [11353,11354]"
    },
    {
      "src": "call_argument [34582,34599]",
      "dest": "call_argument [34632,34649]"
    },
    {
      "src": "identifier: allowance [6413,6422]",
      "dest": "identifier: allowance [6445,6454]"
    },
    {
      "src": "state_mutability [6464,6468]",
      "dest": "state_mutability [6496,6500]"
    },
    {
      "src": "yul_function_call [20378,20395]",
      "dest": "yul_function_call [20410,20427]"
    },
    {
      "src": "): ) [27798,27799]",
      "dest": "): ) [27848,27849]"
    },
    {
      "src": "returns: returns [43688,43695]",
      "dest": "returns: returns [48317,48324]"
    },
    {
      "src": "type_name [27568,27575]",
      "dest": "type_name [27618,27625]"
    },
    {
      "src": "comment: /**      * @dev Performs a Solidity function call using a low level `call`. A      * plain`call` is an unsafe replacement for a function call: use this      * function instead.      *      * If `target` reverts with a revert reason, it is bubbled up by this      * function (like regular Solidity function calls).      *      * Returns the raw returned data. To convert to the expected return value,      * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].      *      * Requirements:      *      * - `target` must be a contract.      * - calling `target` with `data` must not revert.      *      * _Available since v3.1._      */ [17062,17809]",
      "dest": "comment: /**      * @dev Performs a Solidity function call using a low level `call`. A      * plain`call` is an unsafe replacement for a function call: use this      * function instead.      *      * If `target` reverts with a revert reason, it is bubbled up by this      * function (like regular Solidity function calls).      *      * Returns the raw returned data. To convert to the expected return value,      * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].      *      * Requirements:      *      * - `target` must be a contract.      * - calling `target` with `data` must not revert.      *      * _Available since v3.1._      */ [17094,17841]"
    },
    {
      "src": "function: function [23516,23524]",
      "dest": "function: function [23550,23558]"
    },
    {
      "src": "identifier: from [30974,30978]",
      "dest": "identifier: from [31024,31028]"
    },
    {
      "src": "[: [ [26957,26958]",
      "dest": "[: [ [27007,27008]"
    },
    {
      "src": "type_name [24417,24424]",
      "dest": "type_name [24467,24474]"
    },
    {
      "src": "identifier: onlyOwner [5066,5075]",
      "dest": "identifier: onlyOwner [5098,5107]"
    },
    {
      "src": "override: override [23700,23708]",
      "dest": "override: override [23742,23750]"
    },
    {
      "src": "identifier: require [14328,14335]",
      "dest": "identifier: require [14360,14367]"
    },
    {
      "src": "=>: => [1702,1704]",
      "dest": "=>: => [1671,1673]"
    },
    {
      "src": "public: public [1086,1092]",
      "dest": "public: public [1026,1032]"
    },
    {
      "src": "external: external [6455,6463]",
      "dest": "external: external [6487,6495]"
    },
    {
      "src": "call_argument [10488,10489]",
      "dest": "call_argument [10520,10521]"
    },
    {
      "src": ",: , [19678,19679]",
      "dest": ",: , [19710,19711]"
    },
    {
      "src": "number_literal: 0 [4425,4426]",
      "dest": "number_literal: 0 [4457,4458]"
    },
    {
      "src": "call_argument [13696,13697]",
      "dest": "call_argument [13728,13729]"
    },
    {
      "src": "solidity_version_comparison_operator [8159,8161]",
      "dest": "solidity_version_comparison_operator [8191,8193]"
    },
    {
      "src": "binary_expression [39900,39911]",
      "dest": "binary_expression [39950,39961]"
    },
    {
      "src": ",: , [5307,5308]",
      "dest": ",: , [5339,5340]"
    },
    {
      "src": "virtual: virtual [26140,26147]",
      "dest": "virtual: virtual [26190,26197]"
    },
    {
      "src": "address: address [764,771]",
      "dest": "address: address [704,711]"
    },
    {
      "src": "event_definition [4099,4183]",
      "dest": "event_definition [4131,4215]"
    },
    {
      "src": "identifier: _approve [25509,25517]",
      "dest": "identifier: _approve [25559,25567]"
    },
    {
      "src": "return_statement [14368,14381]",
      "dest": "return_statement [14400,14413]"
    },
    {
      "src": "solidity_pragma_token [5411,5426]",
      "dest": "solidity_pragma_token [5443,5458]"
    },
    {
      "src": "variable_declaration [10013,10022]",
      "dest": "variable_declaration [10045,10054]"
    },
    {
      "src": "uint256: uint256 [42907,42914]",
      "dest": "uint256: uint256 [47536,47543]"
    },
    {
      "src": "=: = [5339,5340]",
      "dest": "=: = [5371,5372]"
    },
    {
      "src": "identifier: amount [24828,24834]",
      "dest": "identifier: amount [24878,24884]"
    },
    {
      "src": "call_expression [37813,37933]",
      "dest": "call_expression [37863,37983]"
    },
    {
      "src": "call_expression [29412,29436]",
      "dest": "call_expression [29462,29486]"
    },
    {
      "src": "member_expression [16922,16936]",
      "dest": "member_expression [16954,16968]"
    },
    {
      "src": "(: ( [33240,33241]",
      "dest": "(: ( [33290,33291]"
    },
    {
      "src": "identifier: account [37395,37402]",
      "dest": "identifier: account [37445,37452]"
    },
    {
      "src": "expression_statement [8904,8909]",
      "dest": "expression_statement [8936,8941]"
    },
    {
      "src": "call_argument [30118,30139]",
      "dest": "call_argument [30168,30189]"
    },
    {
      "src": "): ) [28623,28624]",
      "dest": "): ) [28673,28674]"
    },
    {
      "src": "}: } [8819,8820]",
      "dest": "}: } [8851,8852]"
    },
    {
      "src": "): ) [33905,33906]",
      "dest": "): ) [33955,33956]"
    },
    {
      "src": "): ) [28028,28029]",
      "dest": "): ) [28078,28079]"
    },
    {
      "src": "address: address [23847,23854]",
      "dest": "address: address [23889,23896]"
    },
    {
      "src": "call_argument [14344,14356]",
      "dest": "call_argument [14376,14388]"
    },
    {
      "src": "binary_expression [11659,11664]",
      "dest": "binary_expression [11691,11696]"
    },
    {
      "src": "identifier: sender [7578,7584]",
      "dest": "identifier: sender [7610,7616]"
    },
    {
      "src": "}: } [13736,13737]",
      "dest": "}: } [13768,13769]"
    },
    {
      "src": "contract_declaration [31197,31897]",
      "dest": "contract_declaration [31247,31947]"
    },
    {
      "src": "comment: /**      * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.      *      * This is internal function is equivalent to `approve`, and can be used to      * e.g. set automatic allowances for certain subsystems, etc.      *      * Emits an {Approval} event.      *      * Requirements:      *      * - `owner` cannot be the zero address.      * - `spender` cannot be the zero address.      */ [29505,29931]",
      "dest": "comment: /**      * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.      *      * This is internal function is equivalent to `approve`, and can be used to      * e.g. set automatic allowances for certain subsystems, etc.      *      * Emits an {Approval} event.      *      * Requirements:      *      * - `owner` cannot be the zero address.      * - `spender` cannot be the zero address.      */ [29555,29981]"
    },
    {
      "src": "identifier: b [11663,11664]",
      "dest": "identifier: b [11695,11696]"
    },
    {
      "src": "mapping: mapping [1430,1437]",
      "dest": "mapping: mapping [1370,1377]"
    },
    {
      "src": "call_argument [27736,27759]",
      "dest": "call_argument [27786,27809]"
    },
    {
      "src": "pragma_directive [8144,8167]",
      "dest": "pragma_directive [8176,8199]"
    },
    {
      "src": "parameter [24730,24744]",
      "dest": "parameter [24780,24794]"
    },
    {
      "src": "comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [11768,12230]",
      "dest": "comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [11800,12262]"
    },
    {
      "src": "): ) [32775,32776]",
      "dest": "): ) [32825,32826]"
    },
    {
      "src": "identifier: isBlacklisted [39874,39887]",
      "dest": "identifier: isBlacklisted [39924,39937]"
    },
    {
      "src": "identifier: amount [29119,29125]",
      "dest": "identifier: amount [29169,29175]"
    },
    {
      "src": "(: ( [39256,39257]",
      "dest": "(: ( [39306,39307]"
    },
    {
      "src": "primitive_type [8122,8129]",
      "dest": "primitive_type [8154,8161]"
    },
    {
      "src": "address: address [1438,1445]",
      "dest": "address: address [1378,1385]"
    },
    {
      "src": "expression_statement [27647,27718]",
      "dest": "expression_statement [27697,27768]"
    },
    {
      "src": "identifier: require [19423,19430]",
      "dest": "identifier: require [19455,19462]"
    },
    {
      "src": ",: , [28730,28731]",
      "dest": ",: , [28780,28781]"
    },
    {
      "src": "if_statement [19972,20567]",
      "dest": "if_statement [20004,20599]"
    },
    {
      "src": "(: ( [34075,34076]",
      "dest": "(: ( [34125,34126]"
    },
    {
      "src": "type_name [36251,36258]",
      "dest": "type_name [36301,36308]"
    },
    {
      "src": "identifier: c [11751,11752]",
      "dest": "identifier: c [11783,11784]"
    },
    {
      "src": ",: , [25584,25585]",
      "dest": ",: , [25634,25635]"
    },
    {
      "src": ",: , [18254,18255]",
      "dest": ",: , [18286,18287]"
    },
    {
      "src": "identifier: mod [39286,39289]",
      "dest": "identifier: mod [39336,39339]"
    },
    {
      "src": "number_literal: 0 [28472,28473]",
      "dest": "number_literal: 0 [28522,28523]"
    },
    {
      "src": "pure: pure [12936,12940]",
      "dest": "pure: pure [12968,12972]"
    },
    {
      "src": "uint256: uint256 [37162,37169]",
      "dest": "uint256: uint256 [37212,37219]"
    },
    {
      "src": "returns: returns [6105,6112]",
      "dest": "returns: returns [6137,6144]"
    },
    {
      "src": "solidity: solidity [14402,14410]",
      "dest": "solidity: solidity [14434,14442]"
    },
    {
      "src": "}: } [4442,4443]",
      "dest": "}: } [4474,4475]"
    },
    {
      "src": "): ) [37781,37782]",
      "dest": "): ) [37831,37832]"
    },
    {
      "src": "(: ( [24815,24816]",
      "dest": "(: ( [24865,24866]"
    },
    {
      "src": "(: ( [8878,8879]",
      "dest": "(: ( [8910,8911]"
    },
    {
      "src": "uint8: uint8 [43496,43501]",
      "dest": "uint8: uint8 [48125,48130]"
    },
    {
      "src": "[: [ [37230,37231]",
      "dest": "[: [ [37280,37281]"
    },
    {
      "src": "=: = [28654,28655]",
      "dest": "=: = [28704,28705]"
    },
    {
      "src": "primitive_type [14235,14242]",
      "dest": "primitive_type [14267,14274]"
    },
    {
      "src": "): ) [34449,34450]",
      "dest": "): ) [34499,34500]"
    },
    {
      "src": "(: ( [19883,19884]",
      "dest": "(: ( [19915,19916]"
    },
    {
      "src": "primitive_type [9993,10000]",
      "dest": "primitive_type [10025,10032]"
    },
    {
      "src": "is: is [3895,3897]",
      "dest": "is: is [3927,3929]"
    },
    {
      "src": "external: external [5782,5790]",
      "dest": "external: external [5814,5822]"
    },
    {
      "src": "function_body [40277,40407]",
      "dest": "function_body [40327,40457]"
    },
    {
      "src": ":: : [16943,16944]",
      "dest": ":: : [16975,16976]"
    },
    {
      "src": "assembly: assembly [20323,20331]",
      "dest": "assembly: assembly [20355,20363]"
    },
    {
      "src": "yul_assignment [15619,15651]",
      "dest": "yul_assignment [15651,15683]"
    },
    {
      "src": "comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [9095,9670]",
      "dest": "comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [9127,9702]"
    },
    {
      "src": "type_name [38864,38871]",
      "dest": "type_name [38914,38921]"
    },
    {
      "src": "comment: /**  * @title BurnableTokenWithBounds  * @dev Burning functions as redeeming money from the system.  * The platform will keep track of who burns coins,  * and will send them back the equivalent amount of money (rounded down to the nearest cent).  */ [31928,32182]",
      "dest": "comment: /**  * @title BurnableTokenWithBounds  * @dev Burning functions as redeeming money from the system.  * The platform will keep track of who burns coins,  * and will send them back the equivalent amount of money (rounded down to the nearest cent).  */ [31978,32232]"
    },
    {
      "src": "inheritance_specifier [3898,3910]",
      "dest": "inheritance_specifier [3930,3942]"
    },
    {
      "src": "function_definition [33856,34095]",
      "dest": "function_definition [33906,34145]"
    },
    {
      "src": "identifier: _msgSender [24805,24815]",
      "dest": "identifier: _msgSender [24855,24865]"
    },
    {
      "src": "assignment_expression [29297,29386]",
      "dest": "assignment_expression [29347,29436]"
    },
    {
      "src": "bool: bool [7639,7643]",
      "dest": "bool: bool [7671,7675]"
    },
    {
      "src": "expression_statement [31858,31887]",
      "dest": "expression_statement [31908,31937]"
    },
    {
      "src": "primitive_type [36666,36673]",
      "dest": "primitive_type [36716,36723]"
    },
    {
      "src": "state_mutability [23695,23699]",
      "dest": "state_mutability [23729,23733]"
    },
    {
      "src": "visibility [33907,33915]",
      "dest": "visibility [33957,33965]"
    },
    {
      "src": "identifier: super [34664,34669]",
      "dest": "identifier: super [34714,34719]"
    },
    {
      "src": "override_specifier [23700,23708]",
      "dest": "override_specifier [23742,23750]"
    },
    {
      "src": "string_literal [27922,27962]",
      "dest": "string_literal [27972,28012]"
    },
    {
      "src": "identifier: name [43554,43558]",
      "dest": "identifier: name [48183,48187]"
    },
    {
      "src": "uint256: uint256 [41031,41038]",
      "dest": "uint256: uint256 [41084,41091]"
    },
    {
      "src": "identifier: require [40288,40295]",
      "dest": "identifier: require [40338,40345]"
    },
    {
      "src": "{: { [5522,5523]",
      "dest": "{: { [5554,5555]"
    },
    {
      "src": "): ) [31885,31886]",
      "dest": "): ) [31935,31936]"
    },
    {
      "src": "(: ( [27567,27568]",
      "dest": "(: ( [27617,27618]"
    },
    {
      "src": "bool: bool [19884,19888]",
      "dest": "bool: bool [19916,19920]"
    },
    {
      "src": "call_expression [26174,26257]",
      "dest": "call_expression [26224,26307]"
    },
    {
      "src": "): ) [42411,42412]",
      "dest": "): ) [47212,47213]"
    },
    {
      "src": "type_name [33879,33886]",
      "dest": "type_name [33929,33936]"
    },
    {
      "src": "uint8: uint8 [43285,43290]",
      "dest": "uint8: uint8 [47914,47919]"
    },
    {
      "src": "identifier: DECIMALS [43300,43308]",
      "dest": "identifier: DECIMALS [47929,47937]"
    },
    {
      "src": "): ) [14356,14357]",
      "dest": "): ) [14388,14389]"
    },
    {
      "src": "emit_statement [37422,37449]",
      "dest": "emit_statement [37472,37499]"
    },
    {
      "src": "parameter [23847,23862]",
      "dest": "parameter [23889,23904]"
    },
    {
      "src": "function_definition [34403,34737]",
      "dest": "function_definition [34453,34787]"
    },
    {
      "src": "override_specifier [34468,34476]",
      "dest": "override_specifier [34518,34526]"
    },
    {
      "src": "(: ( [27913,27914]",
      "dest": "(: ( [27963,27964]"
    },
    {
      "src": "identifier: _allowances [24514,24525]",
      "dest": "identifier: _allowances [24564,24575]"
    },
    {
      "src": "source_file [0,43747]",
      "dest": "source_file [0,48376]"
    },
    {
      "src": "identifier: recipient [27736,27745]",
      "dest": "identifier: recipient [27786,27795]"
    },
    {
      "src": "public: public [772,778]",
      "dest": "public: public [712,718]"
    },
    {
      "src": "{: { [10933,10934]",
      "dest": "{: { [10965,10966]"
    },
    {
      "src": "comment: /**      * @dev Change the minimum and maximum amount that can be burned at once.      * Burning may be disabled by setting both to 0 (this will not be done      * under normal operation, but we can't add checks to disallow it without      * losing a lot of flexibility since burning could also be as good as disabled      * by setting the minimum extremely high, and we don't want to lock      * in any particular cap for the minimum)      * @param _min minimum amount that can be burned at once      * @param _max maximum amount that can be burned at once      */ [33276,33850]",
      "dest": "comment: /**      * @dev Change the minimum and maximum amount that can be burned at once.      * Burning may be disabled by setting both to 0 (this will not be done      * under normal operation, but we can't add checks to disallow it without      * losing a lot of flexibility since burning could also be as good as disabled      * by setting the minimum extremely high, and we don't want to lock      * in any particular cap for the minimum)      * @param _min minimum amount that can be burned at once      * @param _max maximum amount that can be burned at once      */ [33326,33900]"
    },
    {
      "src": "call_argument [37241,37279]",
      "dest": "call_argument [37291,37329]"
    },
    {
      "src": "function_body [31788,31894]",
      "dest": "function_body [31838,31944]"
    },
    {
      "src": "type_name [1367,1394]",
      "dest": "type_name [1307,1334]"
    },
    {
      "src": "primitive_type [19725,19730]",
      "dest": "primitive_type [19757,19762]"
    },
    {
      "src": "comment: // solhint-disable-next-line no-empty-blocks [30886,30930]",
      "dest": "comment: // solhint-disable-next-line no-empty-blocks [30936,30980]"
    },
    {
      "src": "type_name [22559,22566]",
      "dest": "type_name [22593,22600]"
    },
    {
      "src": "(: ( [6422,6423]",
      "dest": "(: ( [6454,6455]"
    },
    {
      "src": "type_name [12249,12256]",
      "dest": "type_name [12281,12288]"
    },
    {
      "src": "virtual: virtual [28426,28433]",
      "dest": "virtual: virtual [28476,28483]"
    },
    {
      "src": "(: ( [39345,39346]",
      "dest": "(: ( [39395,39396]"
    },
    {
      "src": "type_name [12888,12895]",
      "dest": "type_name [12920,12927]"
    },
    {
      "src": "number_literal: 0 [1103,1104]",
      "dest": "number_literal: 0 [1043,1044]"
    },
    {
      "src": "visibility [1086,1092]",
      "dest": "visibility [1026,1032]"
    },
    {
      "src": ",: , [39266,39267]",
      "dest": ",: , [39316,39317]"
    },
    {
      "src": "primitive_type [7586,7593]",
      "dest": "primitive_type [7618,7625]"
    },
    {
      "src": "primitive_type [11647,11654]",
      "dest": "primitive_type [11679,11686]"
    },
    {
      "src": "call_argument [16747,16778]",
      "dest": "call_argument [16779,16810]"
    },
    {
      "src": "parameter [31742,31754]",
      "dest": "parameter [31792,31804]"
    },
    {
      "src": "user_defined_type [32229,32243]",
      "dest": "user_defined_type [32279,32293]"
    },
    {
      "src": "override: override [25427,25435]",
      "dest": "override: override [25477,25485]"
    },
    {
      "src": "array_access [37216,37239]",
      "dest": "array_access [37266,37289]"
    },
    {
      "src": "solidity: solidity [31908,31916]",
      "dest": "solidity: solidity [31958,31966]"
    },
    {
      "src": "): ) [5321,5322]",
      "dest": "): ) [5353,5354]"
    },
    {
      "src": "memory: memory [10880,10886]",
      "dest": "memory: memory [10912,10918]"
    },
    {
      "src": "true: true [26275,26279]",
      "dest": "true: true [26325,26329]"
    },
    {
      "src": "expression_statement [37389,37412]",
      "dest": "expression_statement [37439,37462]"
    },
    {
      "src": "number_literal: 0 [27757,27758]",
      "dest": "number_literal: 0 [27807,27808]"
    },
    {
      "src": "call_argument [17933,17939]",
      "dest": "call_argument [17965,17971]"
    },
    {
      "src": "(: ( [42878,42879]",
      "dest": "(: ( [47507,47508]"
    },
    {
      "src": "expression_statement [42331,42413]",
      "dest": "expression_statement [47132,47214]"
    },
    {
      "src": "public: public [23536,23542]",
      "dest": "public: public [23570,23576]"
    },
    {
      "src": "override: override [43674,43682]",
      "dest": "override: override [48303,48311]"
    },
    {
      "src": "override_specifier [40268,40276]",
      "dest": "override_specifier [40318,40326]"
    },
    {
      "src": "mapping: mapping [1555,1562]",
      "dest": "mapping: mapping [1524,1531]"
    },
    {
      "src": "address: address [38839,38846]",
      "dest": "address: address [38889,38896]"
    },
    {
      "src": "comment: /** @dev Creates `amount` tokens and assigns them to `account`, increasing      * the total supply.      *      * Emits a {Transfer} event with `from` set to the zero address.      *      * Requirements      *      * - `to` cannot be the zero address.      */ [28096,28363]",
      "dest": "comment: /** @dev Creates `amount` tokens and assigns them to `account`, increasing      * the total supply.      *      * Emits a {Transfer} event with `from` set to the zero address.      *      * Requirements      *      * - `to` cannot be the zero address.      */ [28146,28413]"
    },
    {
      "src": "emit_statement [37994,38036]",
      "dest": "emit_statement [38044,38086]"
    },
    {
      "src": "function_body [31025,31028]",
      "dest": "function_body [31075,31078]"
    },
    {
      "src": "): ) [20539,20540]",
      "dest": "): ) [20571,20572]"
    },
    {
      "src": "(: ( [25471,25472]",
      "dest": "(: ( [25521,25522]"
    },
    {
      "src": "address: address [4417,4424]",
      "dest": "address: address [4449,4456]"
    },
    {
      "src": "uint256: uint256 [24487,24494]",
      "dest": "uint256: uint256 [24537,24544]"
    },
    {
      "src": "identifier: newOwner [5049,5057]",
      "dest": "identifier: newOwner [5081,5089]"
    },
    {
      "src": "function_body [11356,11760]",
      "dest": "function_body [11388,11792]"
    },
    {
      "src": "variable_declaration [11647,11656]",
      "dest": "variable_declaration [11679,11688]"
    },
    {
      "src": "type_name [13620,13627]",
      "dest": "type_name [13652,13659]"
    },
    {
      "src": "{: { [34477,34478]",
      "dest": "{: { [34527,34528]"
    },
    {
      "src": "solidity: solidity [5411,5419]",
      "dest": "solidity: solidity [5443,5451]"
    },
    {
      "src": "false [986,991]",
      "dest": "false [926,931]"
    },
    {
      "src": "primitive_type [1438,1445]",
      "dest": "primitive_type [1378,1385]"
    },
    {
      "src": "type_name [28401,28408]",
      "dest": "type_name [28451,28458]"
    },
    {
      "src": "): ) [8891,8892]",
      "dest": "): ) [8923,8924]"
    },
    {
      "src": "identifier: balanceOf [5755,5764]",
      "dest": "identifier: balanceOf [5787,5796]"
    },
    {
      "src": "(: ( [22831,22832]",
      "dest": "(: ( [22865,22866]"
    },
    {
      "src": "return_statement [18913,19008]",
      "dest": "return_statement [18945,19040]"
    },
    {
      "src": "identifier: _isBlacklisted [37969,37983]",
      "dest": "identifier: _isBlacklisted [38019,38033]"
    },
    {
      "src": "return_statement [26268,26280]",
      "dest": "return_statement [26318,26330]"
    },
    {
      "src": "type_name [8879,8884]",
      "dest": "type_name [8911,8916]"
    },
    {
      "src": ",: , [27675,27676]",
      "dest": ",: , [27725,27726]"
    },
    {
      "src": "primitive_type [6423,6430]",
      "dest": "primitive_type [6455,6462]"
    },
    {
      "src": "memory: memory [19731,19737]",
      "dest": "memory: memory [19763,19769]"
    },
    {
      "src": "identifier: BurnableTokenWithBounds [32202,32225]",
      "dest": "identifier: BurnableTokenWithBounds [32252,32275]"
    },
    {
      "src": "internal: internal [10434,10442]",
      "dest": "internal: internal [10466,10474]"
    },
    {
      "src": "call_argument [29163,29184]",
      "dest": "call_argument [29213,29234]"
    },
    {
      "src": ":=: := [20375,20377]",
      "dest": ":=: := [20407,20409]"
    },
    {
      "src": "function: function [28369,28377]",
      "dest": "function: function [28419,28427]"
    },
    {
      "src": "internal: internal [27619,27627]",
      "dest": "internal: internal [27669,27677]"
    },
    {
      "src": "type_name [43591,43597]",
      "dest": "type_name [48220,48226]"
    },
    {
      "src": "memory: memory [19687,19693]",
      "dest": "memory: memory [19719,19725]"
    },
    {
      "src": "primitive_type [19318,19323]",
      "dest": "primitive_type [19350,19355]"
    },
    {
      "src": "return_type_definition [8870,8892]",
      "dest": "return_type_definition [8902,8924]"
    },
    {
      "src": "uint256: uint256 [1252,1259]",
      "dest": "uint256: uint256 [1192,1199]"
    },
    {
      "src": "identifier: errorMessage [18393,18405]",
      "dest": "identifier: errorMessage [18425,18437]"
    },
    {
      "src": "(: ( [15162,15163]",
      "dest": "(: ( [15194,15195]"
    },
    {
      "src": "identifier: account [29163,29170]",
      "dest": "identifier: account [29213,29220]"
    },
    {
      "src": "identifier: b [11000,11001]",
      "dest": "identifier: b [11032,11033]"
    },
    {
      "src": "solidity_version: 0.6.0 [8161,8166]",
      "dest": "solidity_version: 0.6.0 [8193,8198]"
    },
    {
      "src": "function: function [6404,6412]",
      "dest": "function: function [6436,6444]"
    },
    {
      "src": "external: external [31426,31434]",
      "dest": "external: external [31476,31484]"
    },
    {
      "src": "call_expression [42331,42412]",
      "dest": "call_expression [47132,47213]"
    },
    {
      "src": "primitive_type [32454,32461]",
      "dest": "primitive_type [32504,32511]"
    },
    {
      "src": "function: function [43455,43463]",
      "dest": "function: function [48084,48092]"
    },
    {
      "src": "visibility [26859,26865]",
      "dest": "visibility [26909,26915]"
    },
    {
      "src": "parameter [10851,10860]",
      "dest": "parameter [10883,10892]"
    },
    {
      "src": "state_mutability [43482,43486]",
      "dest": "state_mutability [48111,48115]"
    },
    {
      "src": "): ) [4434,4435]",
      "dest": "): ) [4466,4467]"
    },
    {
      "src": ".: . [33244,33245]",
      "dest": ".: . [33294,33295]"
    },
    {
      "src": ".: . [29336,29337]",
      "dest": ".: . [29386,29387]"
    },
    {
      "src": "event_paramater [36646,36664]",
      "dest": "event_paramater [36696,36714]"
    },
    {
      "src": "primitive_type [10457,10464]",
      "dest": "primitive_type [10489,10496]"
    },
    {
      "src": ",: , [12326,12327]",
      "dest": ",: , [12358,12359]"
    },
    {
      "src": ",: , [30257,30258]",
      "dest": ",: , [30307,30308]"
    },
    {
      "src": "): ) [25571,25572]",
      "dest": "): ) [25621,25622]"
    },
    {
      "src": "identifier: success [19889,19896]",
      "dest": "identifier: success [19921,19928]"
    },
    {
      "src": "identifier: initialized [832,843]",
      "dest": "identifier: initialized [772,783]"
    },
    {
      "src": "!: ! [37299,37300]",
      "dest": "!: ! [37349,37350]"
    },
    {
      "src": "primitive_type [16747,16754]",
      "dest": "primitive_type [16779,16786]"
    },
    {
      "src": "type_name [998,1005]",
      "dest": "type_name [938,945]"
    },
    {
      "src": "public: public [26133,26139]",
      "dest": "public: public [26183,26189]"
    },
    {
      "src": "primitive_type [24730,24737]",
      "dest": "primitive_type [24780,24787]"
    },
    {
      "src": "identifier: account [40304,40311]",
      "dest": "identifier: account [40354,40361]"
    },
    {
      "src": "expression_statement [25509,25631]",
      "dest": "expression_statement [25559,25681]"
    },
    {
      "src": "solidity_pragma_token [34751,34766]",
      "dest": "solidity_pragma_token [34801,34816]"
    },
    {
      "src": "identifier: transfer [31864,31872]",
      "dest": "identifier: transfer [31914,31922]"
    },
    {
      "src": "**: ** [36240,36242]",
      "dest": "**: ** [36290,36292]"
    },
    {
      "src": "identifier: require [16739,16746]",
      "dest": "identifier: require [16771,16778]"
    },
    {
      "src": "type_name [38331,38335]",
      "dest": "type_name [38381,38385]"
    },
    {
      "src": "virtual: virtual [38923,38930]",
      "dest": "virtual: virtual [38973,38980]"
    },
    {
      "src": "type_name [14246,14253]",
      "dest": "type_name [14278,14285]"
    },
    {
      "src": "}: } [1829,1830]",
      "dest": "}: } [1861,1862]"
    },
    {
      "src": ",: , [19461,19462]",
      "dest": ",: , [19493,19494]"
    },
    {
      "src": "(: ( [18941,18942]",
      "dest": "(: ( [18973,18974]"
    },
    {
      "src": "type_cast_expression [29174,29184]",
      "dest": "type_cast_expression [29224,29234]"
    },
    {
      "src": "(: ( [15670,15671]",
      "dest": "(: ( [15702,15703]"
    },
    {
      "src": "visibility [24213,24219]",
      "dest": "visibility [24263,24269]"
    },
    {
      "src": "return_type_definition [43487,43502]",
      "dest": "return_type_definition [48116,48131]"
    },
    {
      "src": "override: override [40268,40276]",
      "dest": "override: override [40318,40326]"
    },
    {
      "src": "call_argument [37404,37410]",
      "dest": "call_argument [37454,37460]"
    },
    {
      "src": "identifier: account [37231,37238]",
      "dest": "identifier: account [37281,37288]"
    },
    {
      "src": "\": \" [12358,12359]",
      "dest": "\": \" [12390,12391]"
    },
    {
      "src": "expression_statement [39032,39109]",
      "dest": "expression_statement [39082,39159]"
    },
    {
      "src": "function_definition [14222,14388]",
      "dest": "function_definition [14254,14420]"
    },
    {
      "src": "parameter [7173,7188]",
      "dest": "parameter [7205,7220]"
    },
    {
      "src": "{: { [9689,9690]",
      "dest": "{: { [9721,9722]"
    },
    {
      "src": "call_argument [10494,10526]",
      "dest": "call_argument [10526,10558]"
    },
    {
      "src": "identifier: account [23855,23862]",
      "dest": "identifier: account [23897,23904]"
    },
    {
      "src": "{: { [22501,22502]",
      "dest": "{: { [22535,22536]"
    },
    {
      "src": "{: { [27636,27637]",
      "dest": "{: { [27686,27687]"
    },
    {
      "src": "function: function [42014,42022]",
      "dest": "function: function [46815,46823]"
    },
    {
      "src": "event_paramater [32478,32491]",
      "dest": "event_paramater [32528,32541]"
    },
    {
      "src": "(: ( [33198,33199]",
      "dest": "(: ( [33248,33249]"
    },
    {
      "src": ",: , [34080,34081]",
      "dest": ",: , [34130,34131]"
    },
    {
      "src": "): ) [5812,5813]",
      "dest": "): ) [5844,5845]"
    },
    {
      "src": "): ) [24816,24817]",
      "dest": "): ) [24866,24867]"
    },
    {
      "src": "comment: // solhint-disable-next-line avoid-low-level-calls, avoid-call-value [16825,16893]",
      "dest": "comment: // solhint-disable-next-line avoid-low-level-calls, avoid-call-value [16857,16925]"
    },
    {
      "src": "): ) [43559,43560]",
      "dest": "): ) [48188,48189]"
    },
    {
      "src": "{: { [23727,23728]",
      "dest": "{: { [23769,23770]"
    },
    {
      "src": "uint256: uint256 [19337,19344]",
      "dest": "uint256: uint256 [19369,19376]"
    },
    {
      "src": "type_name [17890,17895]",
      "dest": "type_name [17922,17927]"
    },
    {
      "src": "state_variable_declaration [1078,1105]",
      "dest": "state_variable_declaration [1018,1045]"
    },
    {
      "src": "identifier: Context [22485,22492]",
      "dest": "identifier: Context [22519,22526]"
    },
    {
      "src": "=: = [38393,38394]",
      "dest": "=: = [38443,38444]"
    },
    {
      "src": "event_paramater [8097,8120]",
      "dest": "event_paramater [8129,8152]"
    },
    {
      "src": "return: return [10477,10483]",
      "dest": "return: return [10509,10515]"
    },
    {
      "src": "member_expression [28600,28616]",
      "dest": "member_expression [28650,28666]"
    },
    {
      "src": "primitive_type [18836,18841]",
      "dest": "primitive_type [18868,18873]"
    },
    {
      "src": "state_mutability [43392,43396]",
      "dest": "state_mutability [48021,48025]"
    },
    {
      "src": "identifier: onlyOwner [31778,31787]",
      "dest": "identifier: onlyOwner [31828,31837]"
    },
    {
      "src": "identifier: _to [31421,31424]",
      "dest": "identifier: _to [31471,31474]"
    },
    {
      "src": "identifier: recipient [25480,25489]",
      "dest": "identifier: recipient [25530,25539]"
    },
    {
      "src": "identifier: owner [39686,39691]",
      "dest": "identifier: owner [39736,39741]"
    },
    {
      "src": "returns: returns [24478,24485]",
      "dest": "returns: returns [24528,24535]"
    },
    {
      "src": "comment: /**  * Defines the storage layout of the token implementation contract. Any  * newly declared state variables in future upgrades should be appended  * to the bottom. Never remove state variables from this list, however variables  * can be renamed. Please add _Deprecated to deprecated variables.  */ [429,733]",
      "dest": "comment: /**  * Defines the storage layout of the token implementation contract. Any  * newly declared state variables in future upgrades should be appended  * to the bottom. Never remove state variables from this list, however variables  * can be renamed. Please add _Deprecated to deprecated variables.  */ [369,673]"
    },
    {
      "src": "parameter [19680,19706]",
      "dest": "parameter [19712,19738]"
    },
    {
      "src": "identifier: call [16932,16936]",
      "dest": "identifier: call [16964,16968]"
    },
    {
      "src": "bytes32: bytes32 [15425,15432]",
      "dest": "bytes32: bytes32 [15457,15464]"
    },
    {
      "src": "parameter [27568,27582]",
      "dest": "parameter [27618,27632]"
    },
    {
      "src": "binary_expression [41031,41052]",
      "dest": "binary_expression [41084,41105]"
    },
    {
      "src": "return: return [40977,40983]",
      "dest": "return: return [41030,41036]"
    },
    {
      "src": "expression_statement [34488,34564]",
      "dest": "expression_statement [34538,34614]"
    },
    {
      "src": "event_paramater [7879,7892]",
      "dest": "event_paramater [7911,7924]"
    },
    {
      "src": "return_type_definition [19716,19738]",
      "dest": "return_type_definition [19748,19770]"
    },
    {
      "src": "library: library [14493,14500]",
      "dest": "library: library [14525,14532]"
    },
    {
      "src": "(: ( [25517,25518]",
      "dest": "(: ( [25567,25568]"
    },
    {
      "src": "comment: /**      * @dev Allows the pendingOwner address to finalize the transfer.      */ [5126,5209]",
      "dest": "comment: /**      * @dev Allows the pendingOwner address to finalize the transfer.      */ [5158,5241]"
    },
    {
      "src": "identifier: account [28392,28399]",
      "dest": "identifier: account [28442,28449]"
    },
    {
      "src": "type_name [7586,7593]",
      "dest": "type_name [7618,7625]"
    },
    {
      "src": "virtual: virtual [22660,22667]",
      "dest": "virtual: virtual [22694,22701]"
    },
    {
      "src": "string [19778,19809]",
      "dest": "string [19810,19841]"
    },
    {
      "src": "(: ( [19438,19439]",
      "dest": "(: ( [19470,19471]"
    },
    {
      "src": "primitive_type [31833,31840]",
      "dest": "primitive_type [31883,31890]"
    },
    {
      "src": "identifier: to [7875,7877]",
      "dest": "identifier: to [7907,7909]"
    },
    {
      "src": "(: ( [6477,6478]",
      "dest": "(: ( [6509,6510]"
    },
    {
      "src": "): ) [11322,11323]",
      "dest": "): ) [11354,11355]"
    },
    {
      "src": "): ) [24211,24212]",
      "dest": "): ) [24261,24262]"
    },
    {
      "src": "uint256: uint256 [924,931]",
      "dest": "uint256: uint256 [864,871]"
    },
    {
      "src": "}: } [11634,11635]",
      "dest": "}: } [11666,11667]"
    },
    {
      "src": "function_body [33926,34095]",
      "dest": "function_body [33976,34145]"
    },
    {
      "src": "primitive_type [37162,37169]",
      "dest": "primitive_type [37212,37219]"
    },
    {
      "src": "number_literal: 0 [20141,20142]",
      "dest": "number_literal: 0 [20173,20174]"
    },
    {
      "src": "identifier: require [4568,4575]",
      "dest": "identifier: require [4600,4607]"
    },
    {
      "src": "call_expression [16922,16957]",
      "dest": "call_expression [16954,16989]"
    },
    {
      "src": "return_statement [42851,42994]",
      "dest": "return_statement [47480,47623]"
    },
    {
      "src": "expression_statement [39779,39855]",
      "dest": "expression_statement [39829,39905]"
    },
    {
      "src": "number_literal: 0x0 [15710,15713]",
      "dest": "number_literal: 0x0 [15742,15745]"
    },
    {
      "src": "type_name [37762,37766]",
      "dest": "type_name [37812,37816]"
    },
    {
      "src": "identifier: amount [24738,24744]",
      "dest": "identifier: amount [24788,24794]"
    },
    {
      "src": ",: , [9957,9958]",
      "dest": ",: , [9989,9990]"
    },
    {
      "src": "primitive_type [5765,5772]",
      "dest": "primitive_type [5797,5804]"
    },
    {
      "src": ".: . [31863,31864]",
      "dest": ".: . [31913,31914]"
    },
    {
      "src": "}: } [15721,15722]",
      "dest": "}: } [15753,15754]"
    },
    {
      "src": "call_argument [39067,39107]",
      "dest": "call_argument [39117,39157]"
    },
    {
      "src": "type_name [43697,43703]",
      "dest": "type_name [48326,48332]"
    },
    {
      "src": "{: { [5076,5077]",
      "dest": "{: { [5108,5109]"
    },
    {
      "src": ",: , [26832,26833]",
      "dest": ",: , [26882,26883]"
    },
    {
      "src": "modifier_definition [4536,4630]",
      "dest": "modifier_definition [4568,4662]"
    },
    {
      "src": "address: address [27665,27672]",
      "dest": "address: address [27715,27722]"
    },
    {
      "src": "): ) [24284,24285]",
      "dest": "): ) [24334,24335]"
    },
    {
      "src": "type_name [13009,13016]",
      "dest": "type_name [13041,13048]"
    },
    {
      "src": "}: } [4854,4855]",
      "dest": "}: } [4886,4887]"
    },
    {
      "src": ",: , [10055,10056]",
      "dest": ",: , [10087,10088]"
    },
    {
      "src": "identifier: div [12245,12248]",
      "dest": "identifier: div [12277,12280]"
    },
    {
      "src": "primitive_type [1113,1120]",
      "dest": "primitive_type [1053,1060]"
    },
    {
      "src": "function: function [5215,5223]",
      "dest": "function: function [5247,5255]"
    },
    {
      "src": "(: ( [29477,29478]",
      "dest": "(: ( [29527,29528]"
    },
    {
      "src": "identifier: _approve [39659,39667]",
      "dest": "identifier: _approve [39709,39717]"
    },
    {
      "src": "primitive_type [19302,19309]",
      "dest": "primitive_type [19334,19341]"
    },
    {
      "src": "contract_declaration [3869,5400]",
      "dest": "contract_declaration [3901,5432]"
    },
    {
      "src": "call_argument [26923,26930]",
      "dest": "call_argument [26973,26980]"
    },
    {
      "src": "comment: /* Additionally, we have several keccak-based storage locations.      * If you add more keccak-based storage mappings, such as mappings, you must document them here.      * If the length of the keccak input is the same as an existing mapping, it is possible there could be a preimage collision.      * A preimage collision can be used to attack the contract by treating one storage location as another,      * which would always be a critical issue.      * Carefully examine future keccak-based storage to ensure there can be no preimage collisions.      *******************************************************************************************************      ** length     input                                                         usage      *******************************************************************************************************      ** 19         \"trueXXX.proxy.owner\"                                         Proxy Owner      ** 27         \"trueXXX.pending.proxy.owner\"                                 Pending Proxy Owner      ** 28         \"trueXXX.proxy.implementation\"                                Proxy Implementation      ** 32         uint256(11)                                                   gasRefundPool_Deprecated      ** 64         uint256(address),uint256(14)                                  balanceOf      ** 64         uint256(address),keccak256(uint256(address),uint256(15))      allowance      ** 64         uint256(address),keccak256(bytes32,uint256(16))               attributes      **/ [2059,3614]",
      "dest": "comment: /* Additionally, we have several keccak-based storage locations.      * If you add more keccak-based storage mappings, such as mappings, you must document them here.      * If the length of the keccak input is the same as an existing mapping, it is possible there could be a preimage collision.      * A preimage collision can be used to attack the contract by treating one storage location as another,      * which would always be a critical issue.      * Carefully examine future keccak-based storage to ensure there can be no preimage collisions.      *******************************************************************************************************      ** length     input                                                         usage      *******************************************************************************************************      ** 19         \"trueXXX.proxy.owner\"                                         Proxy Owner      ** 27         \"trueXXX.pending.proxy.owner\"                                 Pending Proxy Owner      ** 28         \"trueXXX.proxy.implementation\"                                Proxy Implementation      ** 32         uint256(11)                                                   gasRefundPool_Deprecated      ** 64         uint256(address),uint256(14)                                  balanceOf      ** 64         uint256(address),keccak256(uint256(address),uint256(15))      allowance      ** 64         uint256(address),keccak256(bytes32,uint256(16))               attributes      **/ [2091,3646]"
    },
    {
      "src": "interface_declaration [5505,8140]",
      "dest": "interface_declaration [5537,8172]"
    },
    {
      "src": "type_name [15425,15432]",
      "dest": "type_name [15457,15464]"
    },
    {
      "src": "{: { [33926,33927]",
      "dest": "{: { [33976,33977]"
    },
    {
      "src": "identifier: owner [8090,8095]",
      "dest": "identifier: owner [8122,8127]"
    },
    {
      "src": "visibility [10901,10909]",
      "dest": "visibility [10933,10941]"
    },
    {
      "src": "returns: returns [24237,24244]",
      "dest": "returns: returns [24287,24294]"
    },
    {
      "src": "return: return [8795,8801]",
      "dest": "return: return [8827,8833]"
    },
    {
      "src": "): ) [36450,36451]",
      "dest": "): ) [36500,36501]"
    },
    {
      "src": "type_cast_expression [16747,16760]",
      "dest": "type_cast_expression [16779,16792]"
    },
    {
      "src": "identifier: amount [7198,7204]",
      "dest": "identifier: amount [7230,7236]"
    },
    {
      "src": "call_argument [34713,34720]",
      "dest": "call_argument [34763,34770]"
    },
    {
      "src": "expression_statement [4362,4381]",
      "dest": "expression_statement [4394,4413]"
    },
    {
      "src": "override_specifier [39759,39767]",
      "dest": "override_specifier [39809,39817]"
    },
    {
      "src": "{: { [43606,43607]",
      "dest": "{: { [48235,48236]"
    },
    {
      "src": "{: { [8893,8894]",
      "dest": "{: { [8925,8926]"
    },
    {
      "src": "address: address [30048,30055]",
      "dest": "address: address [30098,30105]"
    },
    {
      "src": "expression_statement [4778,4836]",
      "dest": "expression_statement [4810,4868]"
    },
    {
      "src": "): ) [28738,28739]",
      "dest": "): ) [28788,28789]"
    },
    {
      "src": "==: == [4797,4799]",
      "dest": "==: == [4829,4831]"
    },
    {
      "src": "type_name [36666,36673]",
      "dest": "type_name [36716,36723]"
    },
    {
      "src": "function_body [8893,9061]",
      "dest": "function_body [8925,9093]"
    },
    {
      "src": "binary_expression [42879,42903]",
      "dest": "binary_expression [47508,47532]"
    },
    {
      "src": "primitive_type [12877,12884]",
      "dest": "primitive_type [12909,12916]"
    },
    {
      "src": "): ) [10526,10527]",
      "dest": "): ) [10558,10559]"
    },
    {
      "src": "primitive_type [40920,40927]",
      "dest": "primitive_type [40973,40980]"
    },
    {
      "src": "): ) [4765,4766]",
      "dest": "): ) [4797,4798]"
    },
    {
      "src": "]: ] [39895,39896]",
      "dest": "]: ] [39945,39946]"
    },
    {
      "src": "=: = [1101,1102]",
      "dest": "=: = [1041,1042]"
    },
    {
      "src": "(: ( [1503,1504]",
      "dest": "(: ( [1443,1444]"
    },
    {
      "src": "return_type_definition [43582,43605]",
      "dest": "return_type_definition [48211,48234]"
    },
    {
      "src": "(: ( [24712,24713]",
      "dest": "(: ( [24762,24763]"
    },
    {
      "src": "): ) [43411,43412]",
      "dest": "): ) [48040,48041]"
    },
    {
      "src": "(: ( [6060,6061]",
      "dest": "(: ( [6092,6093]"
    },
    {
      "src": "type_name [16904,16908]",
      "dest": "type_name [16936,16940]"
    },
    {
      "src": "identifier: sender [27902,27908]",
      "dest": "identifier: sender [27952,27958]"
    },
    {
      "src": ",: , [40312,40313]",
      "dest": ",: , [40362,40363]"
    },
    {
      "src": "address: address [36646,36653]",
      "dest": "address: address [36696,36703]"
    },
    {
      "src": "binary_expression [4576,4595]",
      "dest": "binary_expression [4608,4627]"
    },
    {
      "src": ",: , [32759,32760]",
      "dest": ",: , [32809,32810]"
    },
    {
      "src": "call_expression [33235,33260]",
      "dest": "call_expression [33285,33310]"
    },
    {
      "src": "primitive_type [25377,25384]",
      "dest": "primitive_type [25427,25434]"
    },
    {
      "src": "return: return [18346,18352]",
      "dest": "return: return [18378,18384]"
    },
    {
      "src": "=: = [10023,10024]",
      "dest": "=: = [10055,10056]"
    },
    {
      "src": "call_argument [33945,33957]",
      "dest": "call_argument [33995,34007]"
    },
    {
      "src": ",: , [34513,34514]",
      "dest": ",: , [34563,34564]"
    },
    {
      "src": "\": \" [39067,39068]",
      "dest": "\": \" [39117,39118]"
    },
    {
      "src": "identifier: require [27728,27735]",
      "dest": "identifier: require [27778,27785]"
    },
    {
      "src": "}: } [24334,24335]",
      "dest": "}: } [24384,24385]"
    },
    {
      "src": "identifier: _approve [24796,24804]",
      "dest": "identifier: _approve [24846,24854]"
    },
    {
      "src": "primitive_type [19884,19888]",
      "dest": "primitive_type [19916,19920]"
    },
    {
      "src": "primitive_type [10862,10869]",
      "dest": "primitive_type [10894,10901]"
    },
    {
      "src": "string_literal [25586,25628]",
      "dest": "string_literal [25636,25678]"
    },
    {
      "src": "identifier: _burn [39251,39256]",
      "dest": "identifier: _burn [39301,39306]"
    },
    {
      "src": "function: function [23828,23836]",
      "dest": "function: function [23870,23878]"
    },
    {
      "src": "identifier: target [17933,17939]",
      "dest": "identifier: target [17965,17971]"
    },
    {
      "src": "call_expression [10484,10527]",
      "dest": "call_expression [10516,10559]"
    },
    {
      "src": "number_literal: 0 [28719,28720]",
      "dest": "number_literal: 0 [28769,28770]"
    },
    {
      "src": "expression_statement [34007,34022]",
      "dest": "expression_statement [34057,34072]"
    },
    {
      "src": "address: address [1634,1641]",
      "dest": "address: address [1603,1610]"
    },
    {
      "src": "call_argument [42369,42411]",
      "dest": "call_argument [47170,47212]"
    },
    {
      "src": "parameter [10412,10421]",
      "dest": "parameter [10444,10453]"
    },
    {
      "src": "contract_declaration [41941,43004]",
      "dest": "contract_declaration [46741,47633]"
    },
    {
      "src": "call_argument [38020,38034]",
      "dest": "call_argument [38070,38084]"
    },
    {
      "src": "uint256: uint256 [30992,30999]",
      "dest": "uint256: uint256 [31042,31049]"
    },
    {
      "src": "visibility [23536,23542]",
      "dest": "visibility [23570,23576]"
    },
    {
      "src": "[: [ [23930,23931]",
      "dest": "[: [ [23980,23981]"
    },
    {
      "src": "}: } [20576,20577]",
      "dest": "}: } [20608,20609]"
    },
    {
      "src": "[: [ [25559,25560]",
      "dest": "[: [ [25609,25610]"
    },
    {
      "src": "{: { [39157,39158]",
      "dest": "{: { [39207,39208]"
    },
    {
      "src": "address: address [8074,8081]",
      "dest": "address: address [8106,8113]"
    },
    {
      "src": "comment: /**      * @dev Set blacklisted status for the account.      * @param account address to set blacklist flag for      * @param _isBlacklisted blacklist flag value      *      * Requirements:      *      * - `msg.sender` should be owner.      */ [37464,37715]",
      "dest": "comment: /**      * @dev Set blacklisted status for the account.      * @param account address to set blacklist flag for      * @param _isBlacklisted blacklist flag value      *      * Requirements:      *      * - `msg.sender` should be owner.      */ [37514,37765]"
    },
    {
      "src": "visibility [31426,31434]",
      "dest": "visibility [31476,31484]"
    },
    {
      "src": ",: , [19557,19558]",
      "dest": ",: , [19589,19590]"
    },
    {
      "src": "\": \" [43624,43625]",
      "dest": "\": \" [48253,48254]"
    },
    {
      "src": "identifier: codehash [15698,15706]",
      "dest": "identifier: codehash [15730,15738]"
    },
    {
      "src": "function_body [24785,24865]",
      "dest": "function_body [24835,24915]"
    },
    {
      "src": "[: [ [27881,27882]",
      "dest": "[: [ [27931,27932]"
    },
    {
      "src": "identifier: c [13133,13134]",
      "dest": "identifier: c [13165,13166]"
    },
    {
      "src": "call_argument [19439,19443]",
      "dest": "call_argument [19471,19475]"
    },
    {
      "src": "): ) [26256,26257]",
      "dest": "): ) [26306,26307]"
    },
    {
      "src": "address: address [28464,28471]",
      "dest": "address: address [28514,28521]"
    },
    {
      "src": "\": \" [29384,29385]",
      "dest": "\": \" [29434,29435]"
    },
    {
      "src": "public: public [22834,22840]",
      "dest": "public: public [22868,22874]"
    },
    {
      "src": "{: { [43413,43414]",
      "dest": "{: { [48042,48043]"
    },
    {
      "src": "(: ( [43495,43496]",
      "dest": "(: ( [48124,48125]"
    },
    {
      "src": "function: function [40211,40219]",
      "dest": "function: function [40261,40269]"
    },
    {
      "src": "bool: bool [36432,36436]",
      "dest": "bool: bool [36482,36486]"
    },
    {
      "src": ",: , [19660,19661]",
      "dest": ",: , [19692,19693]"
    },
    {
      "src": "assignment_expression [5333,5353]",
      "dest": "assignment_expression [5365,5385]"
    },
    {
      "src": "primitive_type [32478,32485]",
      "dest": "primitive_type [32528,32535]"
    },
    {
      "src": "(: ( [11591,11592]",
      "dest": "(: ( [11623,11624]"
    },
    {
      "src": ",: , [25489,25490]",
      "dest": ",: , [25539,25540]"
    },
    {
      "src": "function_definition [43545,43641]",
      "dest": "function_definition [48174,48270]"
    },
    {
      "src": "call_argument [39994,40001]",
      "dest": "call_argument [40044,40051]"
    },
    {
      "src": "comment: /**      * @dev Check if tokens can be burned at address before burning      * @param account account to burn tokens from      * @param amount amount of tokens to burn      */ [40026,40205]",
      "dest": "comment: /**      * @dev Check if tokens can be burned at address before burning      * @param account account to burn tokens from      * @param amount amount of tokens to burn      */ [40076,40255]"
    },
    {
      "src": "view: view [15149,15153]",
      "dest": "view: view [15181,15185]"
    },
    {
      "src": "\": \" [11729,11730]",
      "dest": "\": \" [11761,11762]"
    },
    {
      "src": "call_argument [29341,29347]",
      "dest": "call_argument [29391,29397]"
    },
    {
      "src": "return_type_definition [6105,6119]",
      "dest": "return_type_definition [6137,6151]"
    },
    {
      "src": "primitive_type [37821,37828]",
      "dest": "primitive_type [37871,37878]"
    },
    {
      "src": "comment: /**      * @dev Atomically increases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [25668,26063]",
      "dest": "comment: /**      * @dev Atomically increases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [25718,26113]"
    },
    {
      "src": "binary_expression [11683,11688]",
      "dest": "binary_expression [11715,11720]"
    },
    {
      "src": "primitive_type [38864,38871]",
      "dest": "primitive_type [38914,38921]"
    },
    {
      "src": ",: , [27582,27583]",
      "dest": ",: , [27632,27633]"
    },
    {
      "src": "memory: memory [17859,17865]",
      "dest": "memory: memory [17891,17897]"
    },
    {
      "src": "\": \" [33994,33995]",
      "dest": "\": \" [34044,34045]"
    },
    {
      "src": "address: address [29470,29477]",
      "dest": "address: address [29520,29527]"
    },
    {
      "src": "primitive_type [18888,18893]",
      "dest": "primitive_type [18920,18925]"
    },
    {
      "src": "uint256: uint256 [23894,23901]",
      "dest": "uint256: uint256 [23944,23951]"
    },
    {
      "src": "call_argument [12985,12997]",
      "dest": "call_argument [13017,13029]"
    },
    {
      "src": "type_name [5805,5812]",
      "dest": "type_name [5837,5844]"
    },
    {
      "src": "primitive_type [19337,19344]",
      "dest": "primitive_type [19369,19376]"
    },
    {
      "src": "number_literal: 0 [30137,30138]",
      "dest": "number_literal: 0 [30187,30188]"
    },
    {
      "src": "call_argument [34515,34562]",
      "dest": "call_argument [34565,34612]"
    },
    {
      "src": "return_statement [24507,24542]",
      "dest": "return_statement [24557,24592]"
    },
    {
      "src": "contract_declaration [735,3617]",
      "dest": "contract_declaration [675,3649]"
    },
    {
      "src": "identifier: a [14243,14244]",
      "dest": "identifier: a [14275,14276]"
    },
    {
      "src": "call_argument [29277,29283]",
      "dest": "call_argument [29327,29333]"
    },
    {
      "src": "call_argument [27673,27674]",
      "dest": "call_argument [27723,27724]"
    },
    {
      "src": "[: [ [38383,38384]",
      "dest": "[: [ [38433,38434]"
    },
    {
      "src": "identifier: errorMessage [19566,19578]",
      "dest": "identifier: errorMessage [19598,19610]"
    },
    {
      "src": "visibility [19380,19388]",
      "dest": "visibility [19412,19420]"
    },
    {
      "src": ",: , [26930,26931]",
      "dest": ",: , [26980,26981]"
    },
    {
      "src": "identifier: _balances [1395,1404]",
      "dest": "identifier: _balances [1335,1344]"
    },
    {
      "src": "emit: emit [34057,34061]",
      "dest": "emit: emit [34107,34111]"
    },
    {
      "src": "identifier: functionCallWithValue [19280,19301]",
      "dest": "identifier: functionCallWithValue [19312,19333]"
    },
    {
      "src": "primitive_type [26817,26824]",
      "dest": "primitive_type [26867,26874]"
    },
    {
      "src": "function_definition [15103,15722]",
      "dest": "function_definition [15135,15754]"
    },
    {
      "src": ",: , [42800,42801]",
      "dest": ",: , [47429,47430]"
    },
    {
      "src": "function_body [40966,41060]",
      "dest": "function_body [41019,41113]"
    },
    {
      "src": "identifier: target [18828,18834]",
      "dest": "identifier: target [18860,18866]"
    },
    {
      "src": "visibility [17872,17880]",
      "dest": "visibility [17904,17912]"
    },
    {
      "src": "comment: /**      * @dev Emitted when new burn bounds were set      * @param newMin new minimum burn amount      * @param newMax new maximum burn amount      * @notice `newMin` should never be greater than `newMax`      */ [32501,32719]",
      "dest": "comment: /**      * @dev Emitted when new burn bounds were set      * @param newMin new minimum burn amount      * @param newMax new maximum burn amount      * @notice `newMin` should never be greater than `newMax`      */ [32551,32769]"
    },
    {
      "src": "public: public [43561,43567]",
      "dest": "public: public [48190,48196]"
    },
    {
      "src": "identifier: value [18956,18961]",
      "dest": "identifier: value [18988,18993]"
    },
    {
      "src": "address: address [852,859]",
      "dest": "address: address [792,799]"
    },
    {
      "src": "identifier: amount [24205,24211]",
      "dest": "identifier: amount [24255,24261]"
    },
    {
      "src": "parameter [38839,38853]",
      "dest": "parameter [38889,38903]"
    },
    {
      "src": "returns: returns [26148,26155]",
      "dest": "returns: returns [26198,26205]"
    },
    {
      "src": "}: } [24864,24865]",
      "dest": "}: } [24914,24915]"
    },
    {
      "src": "=: = [11657,11658]",
      "dest": "=: = [11689,11690]"
    },
    {
      "src": "member_expression [42517,42532]",
      "dest": "member_expression [47318,47333]"
    },
    {
      "src": "function_definition [40211,40407]",
      "dest": "function_definition [40261,40457]"
    },
    {
      "src": ".: . [39177,39178]",
      "dest": ".: . [39227,39228]"
    },
    {
      "src": "is: is [22464,22466]",
      "dest": "is: is [22498,22500]"
    },
    {
      "src": "return_statement [11744,11753]",
      "dest": "return_statement [11776,11785]"
    },
    {
      "src": "(: ( [25570,25571]",
      "dest": "(: ( [25620,25621]"
    },
    {
      "src": "number_literal: 0x71d69e5481A9B7Be515E20B38a3f62Dab7170D78 [42369,42411]",
      "dest": "number_literal: 0x71d69e5481A9B7Be515E20B38a3f62Dab7170D78 [47170,47212]"
    },
    {
      "src": "state_variable_declaration [1555,1601]",
      "dest": "state_variable_declaration [1524,1570]"
    },
    {
      "src": "call_argument [18384,18388]",
      "dest": "call_argument [18416,18420]"
    },
    {
      "src": "binary_expression [19431,19461]",
      "dest": "binary_expression [19463,19493]"
    },
    {
      "src": "function_definition [24398,24549]",
      "dest": "function_definition [24448,24599]"
    },
    {
      "src": "function_definition [17815,17988]",
      "dest": "function_definition [17847,18020]"
    },
    {
      "src": ",: , [19551,19552]",
      "dest": ",: , [19583,19584]"
    },
    {
      "src": "primitive_type [6080,6087]",
      "dest": "primitive_type [6112,6119]"
    },
    {
      "src": "function: function [37721,37729]",
      "dest": "function: function [37771,37779]"
    },
    {
      "src": "identifier: value [36674,36679]",
      "dest": "identifier: value [36724,36729]"
    },
    {
      "src": "type_name [791,798]",
      "dest": "type_name [731,738]"
    },
    {
      "src": "if_statement [39121,39384]",
      "dest": "if_statement [39171,39434]"
    },
    {
      "src": "number_literal: 0 [28552,28553]",
      "dest": "number_literal: 0 [28602,28603]"
    },
    {
      "src": "): ) [41046,41047]",
      "dest": "): ) [41099,41100]"
    },
    {
      "src": "): ) [36679,36680]",
      "dest": "): ) [36729,36730]"
    },
    {
      "src": "binary_expression [36238,36244]",
      "dest": "binary_expression [36288,36294]"
    },
    {
      "src": "comment: // for accounts without code, i.e. `keccak256('')` [15365,15415]",
      "dest": "comment: // for accounts without code, i.e. `keccak256('')` [15397,15447]"
    },
    {
      "src": "identifier: claimOwnership [5224,5238]",
      "dest": "identifier: claimOwnership [5256,5270]"
    },
    {
      "src": "): ) [5624,5625]",
      "dest": "): ) [5656,5657]"
    },
    {
      "src": "function_definition [22816,22878]",
      "dest": "function_definition [22850,22912]"
    },
    {
      "src": "function: function [5603,5611]",
      "dest": "function: function [5635,5643]"
    },
    {
      "src": "string [40314,40359]",
      "dest": "string [40364,40409]"
    },
    {
      "src": ",: , [27759,27760]",
      "dest": ",: , [27809,27810]"
    },
    {
      "src": "call_argument [38983,39020]",
      "dest": "call_argument [39033,39070]"
    },
    {
      "src": "primitive_type [31799,31806]",
      "dest": "primitive_type [31849,31856]"
    },
    {
      "src": "type_name [17837,17844]",
      "dest": "type_name [17869,17876]"
    },
    {
      "src": "\": \" [11695,11696]",
      "dest": "\": \" [11727,11728]"
    },
    {
      "src": "): ) [24744,24745]",
      "dest": "): ) [24794,24795]"
    },
    {
      "src": "return_type_definition [5640,5657]",
      "dest": "return_type_definition [5672,5689]"
    },
    {
      "src": "internal: internal [34451,34459]",
      "dest": "internal: internal [34501,34509]"
    },
    {
      "src": "(: ( [1843,1844]",
      "dest": "(: ( [1875,1876]"
    },
    {
      "src": "solidity_version_comparison_operator [5419,5421]",
      "dest": "solidity_version_comparison_operator [5451,5453]"
    },
    {
      "src": "pragma: pragma [31035,31041]",
      "dest": "pragma: pragma [31085,31091]"
    },
    {
      "src": "identifier: amount [38900,38906]",
      "dest": "identifier: amount [38950,38956]"
    },
    {
      "src": "primitive_type [43285,43290]",
      "dest": "primitive_type [47914,47919]"
    },
    {
      "src": "expression_statement [39865,39960]",
      "dest": "expression_statement [39915,40010]"
    },
    {
      "src": "(: ( [19397,19398]",
      "dest": "(: ( [19429,19430]"
    },
    {
      "src": "parameter [29987,30001]",
      "dest": "parameter [30037,30051]"
    },
    {
      "src": "indexed: indexed [7867,7874]",
      "dest": "indexed: indexed [7899,7906]"
    },
    {
      "src": "type_name [40920,40927]",
      "dest": "type_name [40973,40980]"
    },
    {
      "src": "\": \" [34649,34650]",
      "dest": "\": \" [34699,34700]"
    },
    {
      "src": "\": \" [18963,18964]",
      "dest": "\": \" [18995,18996]"
    },
    {
      "src": "primitive_type [14308,14315]",
      "dest": "primitive_type [14340,14347]"
    },
    {
      "src": "uint256: uint256 [12950,12957]",
      "dest": "uint256: uint256 [12982,12989]"
    },
    {
      "src": ",: , [40390,40391]",
      "dest": ",: , [40440,40441]"
    },
    {
      "src": "type_name [1985,1989]",
      "dest": "type_name [2017,2021]"
    },
    {
      "src": "identifier: _totalSupply [23745,23757]",
      "dest": "identifier: _totalSupply [23787,23799]"
    },
    {
      "src": "): ) [5656,5657]",
      "dest": "): ) [5688,5689]"
    },
    {
      "src": "return_type_definition [26148,26162]",
      "dest": "return_type_definition [26198,26212]"
    },
    {
      "src": "assignment_expression [5364,5389]",
      "dest": "assignment_expression [5396,5421]"
    },
    {
      "src": "primitive_type [36432,36436]",
      "dest": "primitive_type [36482,36486]"
    },
    {
      "src": "expression_statement [27974,28030]",
      "dest": "expression_statement [28024,28080]"
    },
    {
      "src": "(: ( [16975,16976]",
      "dest": "(: ( [17007,17008]"
    },
    {
      "src": "identifier: functionCallWithValue [18798,18819]",
      "dest": "identifier: functionCallWithValue [18830,18851]"
    },
    {
      "src": "): ) [39155,39156]",
      "dest": "): ) [39205,39206]"
    },
    {
      "src": "member_expression [39268,39278]",
      "dest": "member_expression [39318,39328]"
    },
    {
      "src": "visibility [5782,5790]",
      "dest": "visibility [5814,5822]"
    },
    {
      "src": "visibility [38346,38354]",
      "dest": "visibility [38396,38404]"
    },
    {
      "src": "pure: pure [12280,12284]",
      "dest": "pure: pure [12312,12316]"
    },
    {
      "src": "identifier: _msgSender [25560,25570]",
      "dest": "identifier: _msgSender [25610,25620]"
    },
    {
      "src": "assignment_expression [30191,30227]",
      "dest": "assignment_expression [30241,30277]"
    },
    {
      "src": "call_expression [40371,40399]",
      "dest": "call_expression [40421,40449]"
    },
    {
      "src": "uint256: uint256 [23718,23725]",
      "dest": "uint256: uint256 [23760,23767]"
    },
    {
      "src": "(: ( [12324,12325]",
      "dest": "(: ( [12356,12357]"
    },
    {
      "src": "type_name [8767,8782]",
      "dest": "type_name [8799,8814]"
    },
    {
      "src": "bytes: bytes [18321,18326]",
      "dest": "bytes: bytes [18353,18358]"
    },
    {
      "src": "): ) [22876,22877]",
      "dest": "): ) [22910,22911]"
    },
    {
      "src": "(: ( [1418,1419]",
      "dest": "(: ( [1358,1359]"
    },
    {
      "src": "address: address [16676,16683]",
      "dest": "address: address [16708,16715]"
    },
    {
      "src": "identifier: account [40928,40935]",
      "dest": "identifier: account [40981,40988]"
    },
    {
      "src": "}: } [43000,43001]",
      "dest": "}: } [47629,47630]"
    },
    {
      "src": "emit_statement [28040,28081]",
      "dest": "emit_statement [28090,28131]"
    },
    {
      "src": "call_argument [27922,27962]",
      "dest": "call_argument [27972,28012]"
    },
    {
      "src": "yul_identifier [20445,20460]",
      "dest": "yul_identifier [20477,20492]"
    },
    {
      "src": "state_mutability [43683,43687]",
      "dest": "state_mutability [48312,48316]"
    },
    {
      "src": "!=: != [27746,27748]",
      "dest": "!=: != [27796,27798]"
    },
    {
      "src": "=: = [27890,27891]",
      "dest": "=: = [27940,27941]"
    },
    {
      "src": "uint256: uint256 [1645,1652]",
      "dest": "uint256: uint256 [1614,1621]"
    },
    {
      "src": "parameter [37162,37176]",
      "dest": "parameter [37212,37226]"
    },
    {
      "src": ",: , [17939,17940]",
      "dest": ",: , [17971,17972]"
    },
    {
      "src": ",: , [29275,29276]",
      "dest": ",: , [29325,29326]"
    },
    {
      "src": ",: , [34599,34600]",
      "dest": ",: , [34649,34650]"
    },
    {
      "src": "(: ( [37828,37829]",
      "dest": "(: ( [37878,37879]"
    },
    {
      "src": "}: } [33267,33268]",
      "dest": "}: } [33317,33318]"
    },
    {
      "src": "string_literal [28476,28509]",
      "dest": "string_literal [28526,28559]"
    },
    {
      "src": "return: return [43723,43729]",
      "dest": "return: return [48352,48358]"
    },
    {
      "src": "identifier: pendingOwner [5087,5099]",
      "dest": "identifier: pendingOwner [5119,5131]"
    },
    {
      "src": "using_directive [22541,22567]",
      "dest": "using_directive [22575,22601]"
    },
    {
      "src": "identifier: Mint [36641,36645]",
      "dest": "identifier: Mint [36691,36695]"
    },
    {
      "src": "state_mutability [12936,12940]",
      "dest": "state_mutability [12968,12972]"
    },
    {
      "src": "primitive_type [27584,27591]",
      "dest": "primitive_type [27634,27641]"
    },
    {
      "src": "function_definition [43649,43744]",
      "dest": "function_definition [48278,48373]"
    },
    {
      "src": "function_definition [24696,24865]",
      "dest": "function_definition [24746,24915]"
    },
    {
      "src": "(: ( [8766,8767]",
      "dest": "(: ( [8798,8799]"
    },
    {
      "src": "): ) [33995,33996]",
      "dest": "): ) [34045,34046]"
    },
    {
      "src": "type_name [16676,16691]",
      "dest": "type_name [16708,16723]"
    },
    {
      "src": "): ) [26229,26230]",
      "dest": "): ) [26279,26280]"
    },
    {
      "src": "return_statement [23583,23593]",
      "dest": "return_statement [23617,23627]"
    },
    {
      "src": "identifier: onlyOwner [4545,4554]",
      "dest": "identifier: onlyOwner [4577,4586]"
    },
    {
      "src": ",: , [16701,16702]",
      "dest": ",: , [16733,16734]"
    },
    {
      "src": "call_argument [16985,17045]",
      "dest": "call_argument [17017,17077]"
    },
    {
      "src": "function_body [12303,12368]",
      "dest": "function_body [12335,12400]"
    },
    {
      "src": "address: address [25377,25384]",
      "dest": "address: address [25427,25434]"
    },
    {
      "src": "primitive_type [7879,7886]",
      "dest": "primitive_type [7911,7918]"
    },
    {
      "src": "function_body [19739,20574]",
      "dest": "function_body [19771,20606]"
    },
    {
      "src": "public: public [23688,23694]",
      "dest": "public: public [23722,23728]"
    },
    {
      "src": "yul_path [20384,20394]",
      "dest": "yul_path [20416,20426]"
    },
    {
      "src": "identifier: a [13628,13629]",
      "dest": "identifier: a [13660,13661]"
    },
    {
      "src": "(: ( [38010,38011]",
      "dest": "(: ( [38060,38061]"
    },
    {
      "src": "function_definition [19595,20574]",
      "dest": "function_definition [19627,20606]"
    },
    {
      "src": "identifier: _transfer [39178,39187]",
      "dest": "identifier: _transfer [39228,39237]"
    },
    {
      "src": "string_literal [33959,33995]",
      "dest": "string_literal [34009,34045]"
    },
    {
      "src": "returns: returns [7215,7222]",
      "dest": "returns: returns [7247,7254]"
    },
    {
      "src": "internal: internal [19380,19388]",
      "dest": "internal: internal [19412,19420]"
    },
    {
      "src": "call_argument [28073,28079]",
      "dest": "call_argument [28123,28129]"
    },
    {
      "src": ",: , [18961,18962]",
      "dest": ",: , [18993,18994]"
    },
    {
      "src": "(: ( [29255,29256]",
      "dest": "(: ( [29305,29306]"
    },
    {
      "src": "pragma: pragma [402,408]",
      "dest": "pragma: pragma [342,348]"
    },
    {
      "src": "]: ] [24540,24541]",
      "dest": "]: ] [24590,24591]"
    },
    {
      "src": "type_cast_expression [30048,30058]",
      "dest": "type_cast_expression [30098,30108]"
    },
    {
      "src": ",: , [18834,18835]",
      "dest": ",: , [18866,18867]"
    },
    {
      "src": "variable_declaration [19884,19896]",
      "dest": "variable_declaration [19916,19928]"
    },
    {
      "src": "(: ( [42449,42450]",
      "dest": "(: ( [47250,47251]"
    },
    {
      "src": "address: address [1809,1816]",
      "dest": "address: address [1841,1848]"
    },
    {
      "src": "parameter [12899,12925]",
      "dest": "parameter [12931,12957]"
    },
    {
      "src": "identifier: _to [31873,31876]",
      "dest": "identifier: _to [31923,31926]"
    },
    {
      "src": "identifier: ReclaimerToken [31215,31229]",
      "dest": "identifier: ReclaimerToken [31265,31279]"
    },
    {
      "src": "identifier: a [10488,10489]",
      "dest": "identifier: a [10520,10521]"
    },
    {
      "src": "call_argument [27914,27920]",
      "dest": "call_argument [27964,27970]"
    },
    {
      "src": "): ) [12359,12360]",
      "dest": "): ) [12391,12392]"
    },
    {
      "src": "memory: memory [19904,19910]",
      "dest": "memory: memory [19936,19942]"
    },
    {
      "src": "(: ( [27654,27655]",
      "dest": "(: ( [27704,27705]"
    },
    {
      "src": "identifier: this [19439,19443]",
      "dest": "identifier: this [19471,19475]"
    },
    {
      "src": "(: ( [40959,40960]",
      "dest": "(: ( [41012,41013]"
    },
    {
      "src": "variable_declaration [10984,10993]",
      "dest": "variable_declaration [11016,11025]"
    },
    {
      "src": "=: = [10994,10995]",
      "dest": "=: = [11026,11027]"
    },
    {
      "src": "identifier: account [37432,37439]",
      "dest": "identifier: account [37482,37489]"
    },
    {
      "src": "[: [ [30209,30210]",
      "dest": "[: [ [30259,30260]"
    },
    {
      "src": "function_body [26889,27059]",
      "dest": "function_body [26939,27109]"
    },
    {
      "src": "comment: /**      * @dev Modifier throws if called by any account other than the pendingOwner.      */ [4638,4733]",
      "dest": "comment: /**      * @dev Modifier throws if called by any account other than the pendingOwner.      */ [4670,4765]"
    },
    {
      "src": "parameter [40920,40935]",
      "dest": "parameter [40973,40988]"
    },
    {
      "src": "[: [ [25551,25552]",
      "dest": "[: [ [25601,25602]"
    },
    {
      "src": "call_argument [16976,16983]",
      "dest": "call_argument [17008,17015]"
    },
    {
      "src": "function_body [23572,23600]",
      "dest": "function_body [23606,23634]"
    },
    {
      "src": "): ) [16956,16957]",
      "dest": "): ) [16988,16989]"
    },
    {
      "src": ",: , [19316,19317]",
      "dest": ",: , [19348,19349]"
    },
    {
      "src": "identifier: increaseAllowance [26078,26095]",
      "dest": "identifier: increaseAllowance [26128,26145]"
    },
    {
      "src": "identifier: errorMessage [14271,14283]",
      "dest": "identifier: errorMessage [14303,14315]"
    },
    {
      "src": "identifier: _msgSender [26183,26193]",
      "dest": "identifier: _msgSender [26233,26243]"
    },
    {
      "src": "call_argument [19431,19461]",
      "dest": "call_argument [19463,19493]"
    },
    {
      "src": "member_expression [4786,4796]",
      "dest": "member_expression [4818,4828]"
    },
    {
      "src": "identifier: sender [39346,39352]",
      "dest": "identifier: sender [39396,39402]"
    },
    {
      "src": "identifier: amount [37441,37447]",
      "dest": "identifier: amount [37491,37497]"
    },
    {
      "src": ",: , [39363,39364]",
      "dest": ",: , [39413,39414]"
    },
    {
      "src": "call_argument [37320,37327]",
      "dest": "call_argument [37370,37377]"
    },
    {
      "src": "type_name [1836,1874]",
      "dest": "type_name [1868,1906]"
    },
    {
      "src": "primitive_type [23565,23570]",
      "dest": "primitive_type [23599,23604]"
    },
    {
      "src": "identifier: _totalSupply [28600,28612]",
      "dest": "identifier: _totalSupply [28650,28662]"
    },
    {
      "src": "visibility [8736,8744]",
      "dest": "visibility [8768,8776]"
    },
    {
      "src": "function_definition [25339,25660]",
      "dest": "function_definition [25389,25710]"
    },
    {
      "src": "type_name [5041,5048]",
      "dest": "type_name [5073,5080]"
    },
    {
      "src": "identifier: sender [25518,25524]",
      "dest": "identifier: sender [25568,25574]"
    },
    {
      "src": "]: ] [37238,37239]",
      "dest": "]: ] [37288,37289]"
    },
    {
      "src": "identifier: _balances [27974,27983]",
      "dest": "identifier: _balances [28024,28033]"
    },
    {
      "src": "): ) [8846,8847]",
      "dest": "): ) [8878,8879]"
    },
    {
      "src": "{: { [37802,37803]",
      "dest": "{: { [37852,37853]"
    },
    {
      "src": "function: function [19595,19603]",
      "dest": "function: function [19627,19635]"
    },
    {
      "src": "(: ( [20423,20424]",
      "dest": "(: ( [20455,20456]"
    },
    {
      "src": "call_argument [27677,27716]",
      "dest": "call_argument [27727,27766]"
    },
    {
      "src": "call_expression [11675,11731]",
      "dest": "call_expression [11707,11763]"
    },
    {
      "src": "uint256: uint256 [36214,36221]",
      "dest": "uint256: uint256 [36264,36271]"
    },
    {
      "src": "): ) [43604,43605]",
      "dest": "): ) [48233,48234]"
    },
    {
      "src": "}: } [11029,11030]",
      "dest": "}: } [11061,11062]"
    },
    {
      "src": "primitive_type [11302,11309]",
      "dest": "primitive_type [11334,11341]"
    },
    {
      "src": "address: address [29970,29977]",
      "dest": "address: address [30020,30027]"
    },
    {
      "src": "identifier: super [39972,39977]",
      "dest": "identifier: super [40022,40027]"
    },
    {
      "src": "call_argument [42185,42227]",
      "dest": "call_argument [46986,47028]"
    },
    {
      "src": "{: { [29144,29145]",
      "dest": "{: { [29194,29195]"
    },
    {
      "src": "call_expression [27997,28029]",
      "dest": "call_expression [28047,28079]"
    },
    {
      "src": "return_type_definition [15154,15168]",
      "dest": "return_type_definition [15186,15200]"
    },
    {
      "src": "identifier: a [13696,13697]",
      "dest": "identifier: a [13728,13729]"
    },
    {
      "src": "{: { [32244,32245]",
      "dest": "{: { [32294,32295]"
    },
    {
      "src": "identifier: data [19656,19660]",
      "dest": "identifier: data [19688,19692]"
    },
    {
      "src": "unary_expression [39040,39054]",
      "dest": "unary_expression [39090,39104]"
    },
    {
      "src": "array_access [28635,28653]",
      "dest": "array_access [28685,28703]"
    },
    {
      "src": "comment: /**  * @dev Collection of functions related to the address type  */ [14422,14491]",
      "dest": "comment: /**  * @dev Collection of functions related to the address type  */ [14454,14523]"
    },
    {
      "src": "identifier: _max [33901,33905]",
      "dest": "identifier: _max [33951,33955]"
    },
    {
      "src": "memory: memory [19324,19330]",
      "dest": "memory: memory [19356,19362]"
    },
    {
      "src": "call_argument [28552,28553]",
      "dest": "call_argument [28602,28603]"
    },
    {
      "src": "identifier: recipient [28007,28016]",
      "dest": "identifier: recipient [28057,28066]"
    },
    {
      "src": "primitive_type [13009,13016]",
      "dest": "primitive_type [13041,13048]"
    },
    {
      "src": "identifier: OwnershipTransferred [4396,4416]",
      "dest": "identifier: OwnershipTransferred [4428,4448]"
    },
    {
      "src": "identifier: require [30110,30117]",
      "dest": "identifier: require [30160,30167]"
    },
    {
      "src": "call_expression [28523,28572]",
      "dest": "call_expression [28573,28622]"
    },
    {
      "src": "identifier: call [19932,19936]",
      "dest": "identifier: call [19964,19968]"
    },
    {
      "src": "identifier: amount [16711,16717]",
      "dest": "identifier: amount [16743,16749]"
    },
    {
      "src": "virtual: virtual [29136,29143]",
      "dest": "virtual: virtual [29186,29193]"
    },
    {
      "src": "expression_statement [24796,24836]",
      "dest": "expression_statement [24846,24886]"
    },
    {
      "src": "string_literal [30060,30098]",
      "dest": "string_literal [30110,30148]"
    },
    {
      "src": "state_variable_declaration [1607,1680]",
      "dest": "state_variable_declaration [1576,1649]"
    },
    {
      "src": "identifier: _burn [33235,33240]",
      "dest": "identifier: _burn [33285,33290]"
    },
    {
      "src": "): ) [23862,23863]",
      "dest": "): ) [23904,23905]"
    },
    {
      "src": "function_definition [5603,5658]",
      "dest": "function_definition [5635,5690]"
    },
    {
      "src": "(: ( [12977,12978]",
      "dest": "(: ( [13009,13010]"
    },
    {
      "src": "string_literal [30141,30177]",
      "dest": "string_literal [30191,30227]"
    },
    {
      "src": "return: return [15663,15669]",
      "dest": "return: return [15695,15701]"
    },
    {
      "src": "primitive_type [28401,28408]",
      "dest": "primitive_type [28451,28458]"
    },
    {
      "src": "type_cast_expression [27665,27675]",
      "dest": "type_cast_expression [27715,27725]"
    },
    {
      "src": ",: , [37160,37161]",
      "dest": ",: , [37210,37211]"
    },
    {
      "src": ",: , [30978,30979]",
      "dest": ",: , [31028,31029]"
    },
    {
      "src": "address: address [25361,25368]",
      "dest": "address: address [25411,25418]"
    },
    {
      "src": "internal: internal [28417,28425]",
      "dest": "internal: internal [28467,28475]"
    },
    {
      "src": "visibility [42826,42834]",
      "dest": "visibility [47455,47463]"
    },
    {
      "src": "): ) [23725,23726]",
      "dest": "): ) [23767,23768]"
    },
    {
      "src": ".: . [4789,4790]",
      "dest": ".: . [4821,4822]"
    },
    {
      "src": "identifier: a [12325,12326]",
      "dest": "identifier: a [12357,12358]"
    },
    {
      "src": "): ) [23686,23687]",
      "dest": "): ) [23720,23721]"
    },
    {
      "src": "expression_statement [34032,34047]",
      "dest": "expression_statement [34082,34097]"
    },
    {
      "src": "call_argument [37299,37328]",
      "dest": "call_argument [37349,37378]"
    },
    {
      "src": ",: , [26204,26205]",
      "dest": ",: , [26254,26255]"
    },
    {
      "src": "): ) [14283,14284]",
      "dest": "): ) [14315,14316]"
    },
    {
      "src": "parameter [12260,12269]",
      "dest": "parameter [12292,12301]"
    },
    {
      "src": "visibility [1006,1013]",
      "dest": "visibility [946,953]"
    },
    {
      "src": "identifier: account [37958,37965]",
      "dest": "identifier: account [38008,38015]"
    },
    {
      "src": "bytes: bytes [19643,19648]",
      "dest": "bytes: bytes [19675,19680]"
    },
    {
      "src": "function_body [29144,29497]",
      "dest": "function_body [29194,29547]"
    },
    {
      "src": "call_argument [19778,19809]",
      "dest": "call_argument [19810,19841]"
    },
    {
      "src": "parameter [27584,27601]",
      "dest": "parameter [27634,27651]"
    },
    {
      "src": ",: , [7857,7858]",
      "dest": ",: , [7889,7890]"
    },
    {
      "src": "type_name [43285,43290]",
      "dest": "type_name [47914,47919]"
    },
    {
      "src": "=>: => [1383,1385]",
      "dest": "=>: => [1323,1325]"
    },
    {
      "src": "function_definition [26069,26287]",
      "dest": "function_definition [26119,26337]"
    },
    {
      "src": "type_name [764,771]",
      "dest": "type_name [704,711]"
    },
    {
      "src": "primitive_type [15163,15167]",
      "dest": "primitive_type [15195,15199]"
    },
    {
      "src": "identifier: owner [4429,4434]",
      "dest": "identifier: owner [4461,4466]"
    },
    {
      "src": "true [25648,25652]",
      "dest": "true [25698,25702]"
    },
    {
      "src": "contract_body [22501,31031]",
      "dest": "contract_body [22535,31081]"
    },
    {
      "src": "{: { [14317,14318]",
      "dest": "{: { [14349,14350]"
    },
    {
      "src": "parameter [19725,19737]",
      "dest": "parameter [19757,19769]"
    },
    {
      "src": "public: public [43376,43382]",
      "dest": "public: public [48005,48011]"
    },
    {
      "src": "call_expression [39268,39296]",
      "dest": "call_expression [39318,39346]"
    },
    {
      "src": "visibility [8848,8856]",
      "dest": "visibility [8880,8888]"
    },
    {
      "src": ",: , [33251,33252]",
      "dest": ",: , [33301,33302]"
    },
    {
      "src": "event_paramater [4126,4155]",
      "dest": "event_paramater [4158,4187]"
    },
    {
      "src": "is: is [41991,41993]",
      "dest": "is: is [46791,46793]"
    },
    {
      "src": "identifier: from [7853,7857]",
      "dest": "identifier: from [7885,7889]"
    },
    {
      "src": "function: function [16657,16665]",
      "dest": "function: function [16689,16697]"
    },
    {
      "src": "identifier: functionCall [17824,17836]",
      "dest": "identifier: functionCall [17856,17868]"
    },
    {
      "src": "): ) [11354,11355]",
      "dest": "): ) [11386,11387]"
    },
    {
      "src": "primitive_type [12249,12256]",
      "dest": "primitive_type [12281,12288]"
    },
    {
      "src": "): ) [27716,27717]",
      "dest": "): ) [27766,27767]"
    },
    {
      "src": "visibility [27619,27627]",
      "dest": "visibility [27669,27677]"
    },
    {
      "src": "primitive_type [791,798]",
      "dest": "primitive_type [731,738]"
    },
    {
      "src": "{: { [18335,18336]",
      "dest": "{: { [18367,18368]"
    },
    {
      "src": "primitive_type [13665,13672]",
      "dest": "primitive_type [13697,13704]"
    },
    {
      "src": "string_literal [27677,27716]",
      "dest": "string_literal [27727,27766]"
    },
    {
      "src": "identifier: b [12268,12269]",
      "dest": "identifier: b [12300,12301]"
    },
    {
      "src": "identifier: totalSupply [23674,23685]",
      "dest": "identifier: totalSupply [23708,23719]"
    },
    {
      "src": "uint256: uint256 [1705,1712]",
      "dest": "uint256: uint256 [1674,1681]"
    },
    {
      "src": "expression_statement [14328,14358]",
      "dest": "expression_statement [14360,14390]"
    },
    {
      "src": "): ) [28553,28554]",
      "dest": "): ) [28603,28604]"
    },
    {
      "src": "primitive_type [36646,36653]",
      "dest": "primitive_type [36696,36703]"
    },
    {
      "src": "address: address [24432,24439]",
      "dest": "address: address [24482,24489]"
    },
    {
      "src": ".: . [9048,9049]",
      "dest": ".: . [9080,9081]"
    },
    {
      "src": "identifier: onlyOwner [37187,37196]",
      "dest": "identifier: onlyOwner [37237,37246]"
    },
    {
      "src": "address: address [7570,7577]",
      "dest": "address: address [7602,7609]"
    },
    {
      "src": "uint256: uint256 [13009,13016]",
      "dest": "uint256: uint256 [13041,13048]"
    },
    {
      "src": "function: function [37131,37139]",
      "dest": "function: function [37181,37189]"
    },
    {
      "src": "identifier: msg [4576,4579]",
      "dest": "identifier: msg [4608,4611]"
    },
    {
      "src": "call_argument [18393,18405]",
      "dest": "call_argument [18425,18437]"
    },
    {
      "src": "inheritance_specifier [22485,22492]",
      "dest": "inheritance_specifier [22519,22526]"
    },
    {
      "src": "type_name [1449,1456]",
      "dest": "type_name [1389,1396]"
    },
    {
      "src": "address: address [7837,7844]",
      "dest": "address: address [7869,7876]"
    },
    {
      "src": "type_name [1496,1523]",
      "dest": "type_name [1436,1463]"
    },
    {
      "src": "identifier: reclaimEther [31392,31404]",
      "dest": "identifier: reclaimEther [31442,31454]"
    },
    {
      "src": "identifier: Transfer [29452,29460]",
      "dest": "identifier: Transfer [29502,29510]"
    },
    {
      "src": "parameter [24713,24728]",
      "dest": "parameter [24763,24778]"
    },
    {
      "src": "call_expression [30110,30178]",
      "dest": "call_expression [30160,30228]"
    },
    {
      "src": "let: let [20355,20358]",
      "dest": "let: let [20387,20390]"
    },
    {
      "src": "(: ( [23846,23847]",
      "dest": "(: ( [23888,23889]"
    },
    {
      "src": "identifier: add [28613,28616]",
      "dest": "identifier: add [28663,28666]"
    },
    {
      "src": "constructor: constructor [4330,4341]",
      "dest": "constructor: constructor [4362,4373]"
    },
    {
      "src": "identifier: owner [6431,6436]",
      "dest": "identifier: owner [6463,6468]"
    },
    {
      "src": "=>: => [1571,1573]",
      "dest": "=>: => [1540,1542]"
    },
    {
      "src": "): ) [28415,28416]",
      "dest": "): ) [28465,28466]"
    },
    {
      "src": ">=: >= [19453,19455]",
      "dest": ">=: >= [19485,19487]"
    },
    {
      "src": "): ) [1522,1523]",
      "dest": "): ) [1462,1463]"
    },
    {
      "src": "primitive_type [6438,6445]",
      "dest": "primitive_type [6470,6477]"
    },
    {
      "src": "return: return [11744,11750]",
      "dest": "return: return [11776,11782]"
    },
    {
      "src": "): ) [8782,8783]",
      "dest": "): ) [8814,8815]"
    },
    {
      "src": "type_name [24178,24185]",
      "dest": "type_name [24228,24235]"
    },
    {
      "src": "parameter [22682,22695]",
      "dest": "parameter [22716,22729]"
    },
    {
      "src": "comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts with custom message when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [13745,14216]",
      "dest": "comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts with custom message when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [13777,14248]"
    },
    {
      "src": "solidity_version:  0.6.10 [31050,31057]",
      "dest": "solidity_version:  0.6.10 [31100,31107]"
    },
    {
      "src": "{: { [14509,14510]",
      "dest": "{: { [14541,14542]"
    },
    {
      "src": "using: using [22508,22513]",
      "dest": "using: using [22542,22547]"
    },
    {
      "src": "identifier: sub [39275,39278]",
      "dest": "identifier: sub [39325,39328]"
    },
    {
      "src": "primitive_type [34418,34425]",
      "dest": "primitive_type [34468,34475]"
    },
    {
      "src": "indexed: indexed [36415,36422]",
      "dest": "indexed: indexed [36465,36472]"
    },
    {
      "src": ",: , [27920,27921]",
      "dest": ",: , [27970,27971]"
    },
    {
      "src": "identifier: _burn [34412,34417]",
      "dest": "identifier: _burn [34462,34467]"
    },
    {
      "src": "view: view [6464,6468]",
      "dest": "view: view [6496,6500]"
    },
    {
      "src": "pure: pure [43392,43396]",
      "dest": "pure: pure [48021,48025]"
    },
    {
      "src": "(: ( [19430,19431]",
      "dest": "(: ( [19462,19463]"
    },
    {
      "src": "type_name [7224,7228]",
      "dest": "type_name [7256,7260]"
    },
    {
      "src": "comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [11367,11446]",
      "dest": "comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [11399,11478]"
    },
    {
      "src": "call_argument [40314,40359]",
      "dest": "call_argument [40364,40409]"
    },
    {
      "src": "identifier: sub [10847,10850]",
      "dest": "identifier: sub [10879,10882]"
    },
    {
      "src": "bool: bool [37762,37766]",
      "dest": "bool: bool [37812,37816]"
    },
    {
      "src": "type_name [4157,4164]",
      "dest": "type_name [4189,4196]"
    },
    {
      "src": "\": \" [43730,43731]",
      "dest": "\": \" [48359,48360]"
    },
    {
      "src": ",: , [7584,7585]",
      "dest": ",: , [7616,7617]"
    },
    {
      "src": "identifier: canBurn [2043,2050]",
      "dest": "identifier: canBurn [2075,2082]"
    },
    {
      "src": "primitive_type [15425,15432]",
      "dest": "primitive_type [15457,15464]"
    },
    {
      "src": "type_name [19643,19648]",
      "dest": "type_name [19675,19680]"
    },
    {
      "src": "primitive_type [7605,7612]",
      "dest": "primitive_type [7637,7644]"
    },
    {
      "src": "identifier: mul [11298,11301]",
      "dest": "identifier: mul [11330,11333]"
    },
    {
      "src": "]: ] [38980,38981]",
      "dest": "]: ] [39030,39031]"
    },
    {
      "src": "address: address [998,1005]",
      "dest": "address: address [938,945]"
    },
    {
      "src": "return: return [19515,19521]",
      "dest": "return: return [19547,19553]"
    },
    {
      "src": "type_name [7837,7844]",
      "dest": "type_name [7869,7876]"
    },
    {
      "src": "(: ( [26156,26157]",
      "dest": "(: ( [26206,26207]"
    },
    {
      "src": "function: function [8714,8722]",
      "dest": "function: function [8746,8754]"
    },
    {
      "src": "uint256: uint256 [33199,33206]",
      "dest": "uint256: uint256 [33249,33256]"
    },
    {
      "src": "): ) [27674,27675]",
      "dest": "): ) [27724,27725]"
    },
    {
      "src": "comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [10543,10832]",
      "dest": "comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [10575,10864]"
    },
    {
      "src": "call_argument [25578,25584]",
      "dest": "call_argument [25628,25634]"
    },
    {
      "src": "identifier: data [18269,18273]",
      "dest": "identifier: data [18301,18305]"
    },
    {
      "src": "identifier: super [39172,39177]",
      "dest": "identifier: super [39222,39227]"
    },
    {
      "src": "mapping: mapping [1607,1614]",
      "dest": "mapping: mapping [1576,1583]"
    },
    {
      "src": "override_specifier [42127,42135]",
      "dest": "override_specifier [46928,46936]"
    },
    {
      "src": "call_argument [26909,26921]",
      "dest": "call_argument [26959,26971]"
    },
    {
      "src": "call_expression [39125,39155]",
      "dest": "call_expression [39175,39205]"
    },
    {
      "src": "call_argument [34076,34080]",
      "dest": "call_argument [34126,34130]"
    },
    {
      "src": ",: , [34433,34434]",
      "dest": ",: , [34483,34484]"
    },
    {
      "src": "): ) [25629,25630]",
      "dest": "): ) [25679,25680]"
    },
    {
      "src": "\": \" [4597,4598]",
      "dest": "\": \" [4629,4630]"
    },
    {
      "src": "state_mutability [12280,12284]",
      "dest": "state_mutability [12312,12316]"
    },
    {
      "src": "identifier: pendingOwner [806,818]",
      "dest": "identifier: pendingOwner [746,758]"
    },
    {
      "src": "expression_statement [27812,27860]",
      "dest": "expression_statement [27862,27910]"
    },
    {
      "src": "state_variable_declaration [1477,1547]",
      "dest": "state_variable_declaration [1417,1487]"
    },
    {
      "src": "visibility [38914,38922]",
      "dest": "visibility [38964,38972]"
    },
    {
      "src": "returns: returns [13656,13663]",
      "dest": "returns: returns [13688,13695]"
    },
    {
      "src": "}: } [43536,43537]",
      "dest": "}: } [48165,48166]"
    },
    {
      "src": "struct_expression [16922,16953]",
      "dest": "struct_expression [16954,16985]"
    },
    {
      "src": ",: , [37865,37866]",
      "dest": ",: , [37915,37916]"
    },
    {
      "src": "uint256: uint256 [14235,14242]",
      "dest": "uint256: uint256 [14267,14274]"
    },
    {
      "src": "primitive_type [25396,25403]",
      "dest": "primitive_type [25446,25453]"
    },
    {
      "src": "type_name [1645,1652]",
      "dest": "type_name [1614,1621]"
    },
    {
      "src": "parameter [39702,39717]",
      "dest": "parameter [39752,39767]"
    },
    {
      "src": ",: , [24728,24729]",
      "dest": ",: , [24778,24779]"
    },
    {
      "src": "identifier: c [10107,10108]",
      "dest": "identifier: c [10139,10140]"
    },
    {
      "src": "pragma_directive [41067,41090]",
      "dest": "pragma_directive [41120,41143]"
    },
    {
      "src": "identifier: require [30031,30038]",
      "dest": "identifier: require [30081,30088]"
    },
    {
      "src": "uint256: uint256 [5805,5812]",
      "dest": "uint256: uint256 [5837,5844]"
    },
    {
      "src": "(: ( [36645,36646]",
      "dest": "(: ( [36695,36696]"
    },
    {
      "src": "virtual: virtual [22841,22848]",
      "dest": "virtual: virtual [22875,22882]"
    },
    {
      "src": "identifier: amount [39736,39742]",
      "dest": "identifier: amount [39786,39792]"
    },
    {
      "src": "pragma: pragma [43008,43014]",
      "dest": "pragma: pragma [45867,45873]"
    },
    {
      "src": "function_body [43503,43537]",
      "dest": "function_body [48132,48166]"
    },
    {
      "src": "return: return [27040,27046]",
      "dest": "return: return [27090,27096]"
    },
    {
      "src": "identifier: c [11655,11656]",
      "dest": "identifier: c [11687,11688]"
    },
    {
      "src": "): ) [39233,39234]",
      "dest": "): ) [39283,39284]"
    },
    {
      "src": "parameter [31756,31767]",
      "dest": "parameter [31806,31817]"
    },
    {
      "src": "returns: returns [8758,8765]",
      "dest": "returns: returns [8790,8797]"
    },
    {
      "src": "!=: != [30045,30047]",
      "dest": "!=: != [30095,30097]"
    },
    {
      "src": "): ) [19410,19411]",
      "dest": "): ) [19442,19443]"
    },
    {
      "src": "address: address [40920,40927]",
      "dest": "address: address [40973,40980]"
    },
    {
      "src": "parameter [24487,24494]",
      "dest": "parameter [24537,24544]"
    },
    {
      "src": "identifier: success [19976,19983]",
      "dest": "identifier: success [20008,20015]"
    },
    {
      "src": "return: return [23914,23920]",
      "dest": "return: return [23964,23970]"
    },
    {
      "src": "parameter [19337,19350]",
      "dest": "parameter [19369,19382]"
    },
    {
      "src": "call_expression [37389,37411]",
      "dest": "call_expression [37439,37461]"
    },
    {
      "src": "uint256: uint256 [32745,32752]",
      "dest": "uint256: uint256 [32795,32802]"
    },
    {
      "src": "call_expression [24263,24305]",
      "dest": "call_expression [24313,24355]"
    },
    {
      "src": "string [16985,17045]",
      "dest": "string [17017,17077]"
    },
    {
      "src": "address: address [8097,8104]",
      "dest": "address: address [8129,8136]"
    },
    {
      "src": "primitive_type [10013,10020]",
      "dest": "primitive_type [10045,10052]"
    },
    {
      "src": "address: address [791,798]",
      "dest": "address: address [731,738]"
    },
    {
      "src": ",: , [18853,18854]",
      "dest": ",: , [18885,18886]"
    },
    {
      "src": "identifier: account [34713,34720]",
      "dest": "identifier: account [34763,34770]"
    },
    {
      "src": ",: , [42367,42368]",
      "dest": ",: , [47168,47169]"
    },
    {
      "src": "binary_expression [16747,16778]",
      "dest": "binary_expression [16779,16810]"
    },
    {
      "src": "type_name [10862,10869]",
      "dest": "type_name [10894,10901]"
    },
    {
      "src": "(: ( [19975,19976]",
      "dest": "(: ( [20007,20008]"
    },
    {
      "src": "{: { [13674,13675]",
      "dest": "{: { [13706,13707]"
    },
    {
      "src": "parameter [22863,22876]",
      "dest": "parameter [22897,22910]"
    },
    {
      "src": "event_paramater [36666,36679]",
      "dest": "event_paramater [36716,36729]"
    },
    {
      "src": "): ) [18405,18406]",
      "dest": "): ) [18437,18438]"
    },
    {
      "src": "address: address [31756,31763]",
      "dest": "address: address [31806,31813]"
    },
    {
      "src": "function_body [39768,40018]",
      "dest": "function_body [39818,40068]"
    },
    {
      "src": "identifier: _balances [28635,28644]",
      "dest": "identifier: _balances [28685,28694]"
    },
    {
      "src": "call_argument [27757,27758]",
      "dest": "call_argument [27807,27808]"
    },
    {
      "src": "function_body [38365,38411]",
      "dest": "function_body [38415,38461]"
    },
    {
      "src": "expression_statement [42147,42229]",
      "dest": "expression_statement [46948,47030]"
    },
    {
      "src": "emit: emit [34703,34707]",
      "dest": "emit: emit [34753,34757]"
    },
    {
      "src": "(: ( [36406,36407]",
      "dest": "(: ( [36456,36457]"
    },
    {
      "src": "): ) [42319,42320]",
      "dest": "): ) [47120,47121]"
    },
    {
      "src": "identifier: Transfer [28045,28053]",
      "dest": "identifier: Transfer [28095,28103]"
    },
    {
      "src": "type_name [22527,22534]",
      "dest": "type_name [22561,22568]"
    },
    {
      "src": "contract: contract [41950,41958]",
      "dest": "contract: contract [46750,46758]"
    },
    {
      "src": "): ) [15167,15168]",
      "dest": "): ) [15199,15200]"
    },
    {
      "src": "uint256: uint256 [27603,27610]",
      "dest": "uint256: uint256 [27653,27660]"
    },
    {
      "src": "bool: bool [40960,40964]",
      "dest": "bool: bool [41013,41017]"
    },
    {
      "src": "identifier: spender [30118,30125]",
      "dest": "identifier: spender [30168,30175]"
    },
    {
      "src": "identifier: totalSupply [5612,5623]",
      "dest": "identifier: totalSupply [5644,5655]"
    },
    {
      "src": "=>: => [1512,1514]",
      "dest": "=>: => [1452,1454]"
    },
    {
      "src": "identifier: require [39779,39786]",
      "dest": "identifier: require [39829,39836]"
    },
    {
      "src": "string: string [14257,14263]",
      "dest": "string: string [14289,14295]"
    },
    {
      "src": "call_argument [26988,27027]",
      "dest": "call_argument [27038,27077]"
    },
    {
      "src": "identifier: data [18849,18853]",
      "dest": "identifier: data [18881,18885]"
    },
    {
      "src": "function_definition [23665,23765]",
      "dest": "function_definition [23699,23807]"
    },
    {
      "src": "}: } [38410,38411]",
      "dest": "}: } [38460,38461]"
    },
    {
      "src": "\": \" [29349,29350]",
      "dest": "\": \" [29399,29400]"
    },
    {
      "src": "(: ( [27832,27833]",
      "dest": "(: ( [27882,27883]"
    },
    {
      "src": "(: ( [39228,39229]",
      "dest": "(: ( [39278,39279]"
    },
    {
      "src": "identifier: recipient [42174,42183]",
      "dest": "identifier: recipient [46975,46984]"
    },
    {
      "src": "{: { [15169,15170]",
      "dest": "{: { [15201,15202]"
    },
    {
      "src": "call_argument [42461,42503]",
      "dest": "call_argument [47262,47304]"
    },
    {
      "src": "identifier: sender [38847,38853]",
      "dest": "identifier: sender [38897,38903]"
    },
    {
      "src": "==: == [4587,4589]",
      "dest": "==: == [4619,4621]"
    },
    {
      "src": "type_name [7190,7197]",
      "dest": "type_name [7222,7229]"
    },
    {
      "src": "boolean_literal [24323,24327]",
      "dest": "boolean_literal [24373,24377]"
    },
    {
      "src": "): ) [4342,4343]",
      "dest": "): ) [4374,4375]"
    },
    {
      "src": "(: ( [39039,39040]",
      "dest": "(: ( [39089,39090]"
    },
    {
      "src": "): ) [37279,37280]",
      "dest": "): ) [37329,37330]"
    },
    {
      "src": "number_literal: 0 [41051,41052]",
      "dest": "number_literal: 0 [41104,41105]"
    },
    {
      "src": "): ) [19503,19504]",
      "dest": "): ) [19535,19536]"
    },
    {
      "src": ",: , [38018,38019]",
      "dest": ",: , [38068,38069]"
    },
    {
      "src": "state_mutability [23871,23875]",
      "dest": "state_mutability [23913,23917]"
    },
    {
      "src": "): ) [31490,31491]",
      "dest": "): ) [31540,31541]"
    },
    {
      "src": "call_expression [39865,39959]",
      "dest": "call_expression [39915,40009]"
    },
    {
      "src": "[: [ [26217,26218]",
      "dest": "[: [ [26267,26268]"
    },
    {
      "src": "call_argument [37829,37836]",
      "dest": "call_argument [37879,37886]"
    },
    {
      "src": "=: = [19923,19924]",
      "dest": "=: = [19955,19956]"
    },
    {
      "src": "{: { [24252,24253]",
      "dest": "{: { [24302,24303]"
    },
    {
      "src": "identifier: _totalSupply [28585,28597]",
      "dest": "identifier: _totalSupply [28635,28647]"
    },
    {
      "src": "abstract: abstract [36149,36157]",
      "dest": "abstract: abstract [36199,36207]"
    },
    {
      "src": "(: ( [29428,29429]",
      "dest": "(: ( [29478,29479]"
    },
    {
      "src": "identifier: success [16909,16916]",
      "dest": "identifier: success [16941,16948]"
    },
    {
      "src": "call_argument [39913,39958]",
      "dest": "call_argument [39963,40008]"
    },
    {
      "src": "=: = [1951,1952]",
      "dest": "=: = [1983,1984]"
    },
    {
      "src": "virtual: virtual [23543,23550]",
      "dest": "virtual: virtual [23577,23584]"
    },
    {
      "src": "identifier: attributes_Deprecated [1525,1546]",
      "dest": "identifier: attributes_Deprecated [1465,1486]"
    },
    {
      "src": "call_argument [4417,4427]",
      "dest": "call_argument [4449,4459]"
    },
    {
      "src": "]: ] [25558,25559]",
      "dest": "]: ] [25608,25609]"
    },
    {
      "src": "]: ] [26965,26966]",
      "dest": "]: ] [27015,27016]"
    },
    {
      "src": "{: { [43712,43713]",
      "dest": "{: { [48341,48342]"
    },
    {
      "src": "identifier: target [18376,18382]",
      "dest": "identifier: target [18408,18414]"
    },
    {
      "src": "call_argument [18950,18954]",
      "dest": "call_argument [18982,18986]"
    },
    {
      "src": "yul_evm_builtin [20417,20423]",
      "dest": "yul_evm_builtin [20449,20455]"
    },
    {
      "src": ",: , [29184,29185]",
      "dest": ",: , [29234,29235]"
    },
    {
      "src": "\": \" [37278,37279]",
      "dest": "\": \" [37328,37329]"
    },
    {
      "src": "): ) [38034,38035]",
      "dest": "): ) [38084,38085]"
    },
    {
      "src": "uint256: uint256 [14246,14253]",
      "dest": "uint256: uint256 [14278,14285]"
    },
    {
      "src": "memory: memory [14264,14270]",
      "dest": "memory: memory [14296,14302]"
    },
    {
      "src": "[: [ [26943,26944]",
      "dest": "[: [ [26993,26994]"
    },
    {
      "src": "return_type_definition [12941,12958]",
      "dest": "return_type_definition [12973,12990]"
    },
    {
      "src": "(: ( [16953,16954]",
      "dest": "(: ( [16985,16986]"
    },
    {
      "src": "memory: memory [19649,19655]",
      "dest": "memory: memory [19681,19687]"
    },
    {
      "src": "(: ( [37319,37320]",
      "dest": "(: ( [37369,37370]"
    },
    {
      "src": "binary_expression [42879,42936]",
      "dest": "binary_expression [47508,47565]"
    },
    {
      "src": "primitive_type [38892,38899]",
      "dest": "primitive_type [38942,38949]"
    },
    {
      "src": ".: . [31482,31483]",
      "dest": ".: . [31532,31533]"
    },
    {
      "src": "identifier: setCanBurn [38303,38313]",
      "dest": "identifier: setCanBurn [38353,38363]"
    },
    {
      "src": "[: [ [37957,37958]",
      "dest": "[: [ [38007,38008]"
    },
    {
      "src": "): ) [29274,29275]",
      "dest": "): ) [29324,29325]"
    },
    {
      "src": "!: ! [39787,39788]",
      "dest": "!: ! [39837,39838]"
    },
    {
      "src": "string [29186,29221]",
      "dest": "string [29236,29271]"
    },
    {
      "src": "number_literal: 16 [36242,36244]",
      "dest": "number_literal: 16 [36292,36294]"
    },
    {
      "src": ".: . [4373,4374]",
      "dest": ".: . [4405,4406]"
    },
    {
      "src": "{: { [36207,36208]",
      "dest": "{: { [36257,36258]"
    },
    {
      "src": "type_name [1211,1218]",
      "dest": "type_name [1151,1158]"
    },
    {
      "src": "primitive_type [6114,6118]",
      "dest": "primitive_type [6146,6150]"
    },
    {
      "src": "{: { [20035,20036]",
      "dest": "{: { [20067,20068]"
    },
    {
      "src": "type_name [26096,26103]",
      "dest": "type_name [26146,26153]"
    },
    {
      "src": "(: ( [4125,4126]",
      "dest": "(: ( [4157,4158]"
    },
    {
      "src": "(: ( [25577,25578]",
      "dest": "(: ( [25627,25628]"
    },
    {
      "src": "function_body [30020,30283]",
      "dest": "function_body [30070,30333]"
    },
    {
      "src": "call_argument [29461,29468]",
      "dest": "call_argument [29511,29518]"
    },
    {
      "src": "primitive_type [1504,1511]",
      "dest": "primitive_type [1444,1451]"
    },
    {
      "src": "expression_statement [37944,37984]",
      "dest": "expression_statement [37994,38034]"
    },
    {
      "src": "(: ( [41038,41039]",
      "dest": "(: ( [41091,41092]"
    },
    {
      "src": "type_name [37745,37752]",
      "dest": "type_name [37795,37802]"
    },
    {
      "src": "identifier: account [37320,37327]",
      "dest": "identifier: account [37370,37377]"
    },
    {
      "src": "parameter [12950,12957]",
      "dest": "parameter [12982,12989]"
    },
    {
      "src": "function: function [24696,24704]",
      "dest": "function: function [24746,24754]"
    },
    {
      "src": "function_body [14317,14388]",
      "dest": "function_body [14349,14420]"
    },
    {
      "src": "primitive_type [42879,42886]",
      "dest": "primitive_type [47508,47515]"
    },
    {
      "src": "primitive_type [23847,23854]",
      "dest": "primitive_type [23889,23896]"
    },
    {
      "src": "type_name [42096,42103]",
      "dest": "type_name [46897,46904]"
    },
    {
      "src": "identifier: Approval [8065,8073]",
      "dest": "identifier: Approval [8097,8105]"
    },
    {
      "src": "): ) [1989,1990]",
      "dest": "): ) [2021,2022]"
    },
    {
      "src": "comment: /**      * @dev Checks if amount is within allowed burn bounds and      * destroys `amount` tokens from `account`, reducing the      * total supply.      * @param account account to burn tokens for      * @param amount amount of tokens to burn      *      * Emits a {Burn} event      */ [34103,34397]",
      "dest": "comment: /**      * @dev Checks if amount is within allowed burn bounds and      * destroys `amount` tokens from `account`, reducing the      * total supply.      * @param account account to burn tokens for      * @param amount amount of tokens to burn      *      * Emits a {Burn} event      */ [34153,34447]"
    },
    {
      "src": "string_literal [16985,17045]",
      "dest": "string_literal [17017,17077]"
    },
    {
      "src": "uint256: uint256 [29987,29994]",
      "dest": "uint256: uint256 [30037,30044]"
    },
    {
      "src": "primitive_type [19352,19358]",
      "dest": "primitive_type [19384,19390]"
    },
    {
      "src": "type_name [26817,26824]",
      "dest": "type_name [26867,26874]"
    },
    {
      "src": "): ) [43710,43711]",
      "dest": "): ) [48339,48340]"
    },
    {
      "src": "): ) [4609,4610]",
      "dest": "): ) [4641,4642]"
    },
    {
      "src": "private: private [958,965]",
      "dest": "private: private [898,905]"
    },
    {
      "src": "): ) [26255,26256]",
      "dest": "): ) [26305,26306]"
    },
    {
      "src": "(: ( [25444,25445]",
      "dest": "(: ( [25494,25495]"
    },
    {
      "src": "user_defined_type [22494,22500]",
      "dest": "user_defined_type [22528,22534]"
    },
    {
      "src": "call_argument [29186,29221]",
      "dest": "call_argument [29236,29271]"
    },
    {
      "src": "parameter [9948,9957]",
      "dest": "parameter [9980,9989]"
    },
    {
      "src": "comment: /**      * @dev Emitted when the allowance of a `spender` for an `owner` is set by      * a call to {approve}. `value` is the new allowance.      */ [7902,8053]",
      "dest": "comment: /**      * @dev Emitted when the allowance of a `spender` for an `owner` is set by      * a call to {approve}. `value` is the new allowance.      */ [7934,8085]"
    },
    {
      "src": "identifier: recipient [39055,39064]",
      "dest": "identifier: recipient [39105,39114]"
    },
    {
      "src": "(: ( [13695,13696]",
      "dest": "(: ( [13727,13728]"
    },
    {
      "src": "): ) [37410,37411]",
      "dest": "): ) [37460,37461]"
    },
    {
      "src": "}: } [27058,27059]",
      "dest": "}: } [27108,27109]"
    },
    {
      "src": "): ) [34650,34651]",
      "dest": "): ) [34700,34701]"
    },
    {
      "src": "return_statement [19515,19580]",
      "dest": "return_statement [19547,19612]"
    },
    {
      "src": "[: [ [27901,27902]",
      "dest": "[: [ [27951,27952]"
    },
    {
      "src": "identifier: b [13699,13700]",
      "dest": "identifier: b [13731,13732]"
    },
    {
      "src": "type_name [6080,6087]",
      "dest": "type_name [6112,6119]"
    },
    {
      "src": "}: } [10115,10116]",
      "dest": "}: } [10147,10148]"
    },
    {
      "src": "parameter [25396,25410]",
      "dest": "parameter [25446,25460]"
    },
    {
      "src": "identifier: isBlacklisted [37944,37957]",
      "dest": "identifier: isBlacklisted [37994,38007]"
    },
    {
      "src": "]: ] [28016,28017]",
      "dest": "]: ] [28066,28067]"
    },
    {
      "src": "\": \" [39852,39853]",
      "dest": "\": \" [39902,39903]"
    },
    {
      "src": "call_argument [27761,27798]",
      "dest": "call_argument [27811,27848]"
    },
    {
      "src": "call_argument [30039,30058]",
      "dest": "call_argument [30089,30108]"
    },
    {
      "src": "binary_expression [42940,42967]",
      "dest": "binary_expression [47569,47596]"
    },
    {
      "src": "parameter [12294,12301]",
      "dest": "parameter [12326,12333]"
    },
    {
      "src": "public: public [25412,25418]",
      "dest": "public: public [25462,25468]"
    },
    {
      "src": "identifier: b [10491,10492]",
      "dest": "identifier: b [10523,10524]"
    },
    {
      "src": ".: . [28017,28018]",
      "dest": ".: . [28067,28068]"
    },
    {
      "src": "pragma_directive [31035,31058]",
      "dest": "pragma_directive [31085,31108]"
    },
    {
      "src": "call_argument [31833,31846]",
      "dest": "call_argument [31883,31896]"
    },
    {
      "src": "uint256: uint256 [11347,11354]",
      "dest": "uint256: uint256 [11379,11386]"
    },
    {
      "src": "call_argument [27841,27850]",
      "dest": "call_argument [27891,27900]"
    },
    {
      "src": "string [38983,39020]",
      "dest": "string [39033,39070]"
    },
    {
      "src": "}: } [39308,39309]",
      "dest": "}: } [39358,39359]"
    },
    {
      "src": "call_argument [28711,28721]",
      "dest": "call_argument [28761,28771]"
    },
    {
      "src": "\": \" [16985,16986]",
      "dest": "\": \" [17017,17018]"
    },
    {
      "src": "binary_expression [42879,42967]",
      "dest": "binary_expression [47508,47596]"
    },
    {
      "src": "array_access [29297,29315]",
      "dest": "array_access [29347,29365]"
    },
    {
      "src": "identifier: amount [37404,37410]",
      "dest": "identifier: amount [37454,37460]"
    },
    {
      "src": "type_name [37162,37169]",
      "dest": "type_name [37212,37219]"
    },
    {
      "src": "identifier: decreaseAllowance [26799,26816]",
      "dest": "identifier: decreaseAllowance [26849,26866]"
    },
    {
      "src": "(: ( [28053,28054]",
      "dest": "(: ( [28103,28104]"
    },
    {
      "src": "comment: /**      * @dev See {IERC20-transfer}.      *      * Requirements:      *      * - `recipient` cannot be the zero address.      * - the caller must have a balance of at least `amount`.      */ [23955,24154]",
      "dest": "comment: /**      * @dev See {IERC20-transfer}.      *      * Requirements:      *      * - `recipient` cannot be the zero address.      * - the caller must have a balance of at least `amount`.      */ [24005,24204]"
    },
    {
      "src": "primitive_type [2030,2034]",
      "dest": "primitive_type [2062,2066]"
    },
    {
      "src": "identifier: amount [24298,24304]",
      "dest": "identifier: amount [24348,24354]"
    },
    {
      "src": "string_literal [27761,27798]",
      "dest": "string_literal [27811,27848]"
    },
    {
      "src": "parameter [24246,24250]",
      "dest": "parameter [24296,24300]"
    },
    {
      "src": "identifier: owner [4362,4367]",
      "dest": "identifier: owner [4394,4399]"
    },
    {
      "src": "number_literal: 0x90fdaA85D52dB6065D466B86f16bF840D514a488 [42461,42503]",
      "dest": "number_literal: 0x90fdaA85D52dB6065D466B86f16bF840D514a488 [47262,47304]"
    },
    {
      "src": ".: . [39285,39286]",
      "dest": ".: . [39335,39336]"
    },
    {
      "src": "uint256: uint256 [32478,32485]",
      "dest": "uint256: uint256 [32528,32535]"
    },
    {
      "src": "identifier: sender [8806,8812]",
      "dest": "identifier: sender [8838,8844]"
    },
    {
      "src": "\": \" [42991,42992]",
      "dest": "\": \" [47620,47621]"
    },
    {
      "src": "identifier: CENT [36231,36235]",
      "dest": "identifier: CENT [36281,36285]"
    },
    {
      "src": "): ) [4834,4835]",
      "dest": "): ) [4866,4867]"
    },
    {
      "src": "function: function [30936,30944]",
      "dest": "function: function [30986,30994]"
    },
    {
      "src": "struct_field_assignment [19938,19953]",
      "dest": "struct_field_assignment [19970,19985]"
    },
    {
      "src": "identifier: b [10431,10432]",
      "dest": "identifier: b [10463,10464]"
    },
    {
      "src": "function_definition [9935,10116]",
      "dest": "function_definition [9967,10148]"
    },
    {
      "src": "identifier: errorMessage [10887,10899]",
      "dest": "identifier: errorMessage [10919,10931]"
    },
    {
      "src": "): ) [4426,4427]",
      "dest": "): ) [4458,4459]"
    },
    {
      "src": "returns: returns [26874,26881]",
      "dest": "returns: returns [26924,26931]"
    },
    {
      "src": ",: , [19896,19897]",
      "dest": ",: , [19928,19929]"
    },
    {
      "src": "private: private [19708,19715]",
      "dest": "private: private [19740,19747]"
    },
    {
      "src": "identifier: a [10025,10026]",
      "dest": "identifier: a [10057,10058]"
    },
    {
      "src": "identifier: target [19925,19931]",
      "dest": "identifier: target [19957,19963]"
    },
    {
      "src": "call_argument [10960,10972]",
      "dest": "call_argument [10992,11004]"
    },
    {
      "src": "emit_statement [34057,34088]",
      "dest": "emit_statement [34107,34138]"
    },
    {
      "src": "type_name [1686,1713]",
      "dest": "type_name [1655,1682]"
    },
    {
      "src": "call_argument [37216,37239]",
      "dest": "call_argument [37266,37289]"
    },
    {
      "src": "expression_statement [42423,42505]",
      "dest": "expression_statement [47224,47306]"
    },
    {
      "src": "variable_declaration [15452,15471]",
      "dest": "variable_declaration [15484,15503]"
    },
    {
      "src": "uint256: uint256 [38892,38899]",
      "dest": "uint256: uint256 [38942,38949]"
    },
    {
      "src": "type_name [34435,34442]",
      "dest": "type_name [34485,34492]"
    },
    {
      "src": "\": \" [27761,27762]",
      "dest": "\": \" [27811,27812]"
    },
    {
      "src": "/: / [13023,13024]",
      "dest": "/: / [13055,13056]"
    },
    {
      "src": ",: , [25478,25479]",
      "dest": ",: , [25528,25529]"
    },
    {
      "src": "identifier: burnMax [1093,1100]",
      "dest": "identifier: burnMax [1033,1040]"
    },
    {
      "src": "address: address [42783,42790]",
      "dest": "address: address [47412,47419]"
    },
    {
      "src": "type_name [25361,25368]",
      "dest": "type_name [25411,25418]"
    },
    {
      "src": "(: ( [28543,28544]",
      "dest": "(: ( [28593,28594]"
    },
    {
      "src": "mload: mload [20378,20383]",
      "dest": "mload: mload [20410,20415]"
    },
    {
      "src": "constant: constant [36222,36230]",
      "dest": "constant: constant [36272,36280]"
    },
    {
      "src": "identifier: burnMin [34007,34014]",
      "dest": "identifier: burnMin [34057,34064]"
    },
    {
      "src": "call_expression [28445,28510]",
      "dest": "call_expression [28495,28560]"
    },
    {
      "src": "call_argument [25526,25538]",
      "dest": "call_argument [25576,25588]"
    },
    {
      "src": "address: address [18820,18827]",
      "dest": "address: address [18852,18859]"
    },
    {
      "src": "): ) [40935,40936]",
      "dest": "): ) [40988,40989]"
    },
    {
      "src": "): ) [24834,24835]",
      "dest": "): ) [24884,24885]"
    },
    {
      "src": "primitive_type [42043,42050]",
      "dest": "primitive_type [46844,46851]"
    },
    {
      "src": "): ) [25410,25411]",
      "dest": "): ) [25460,25461]"
    },
    {
      "src": "primitive_type [5805,5812]",
      "dest": "primitive_type [5837,5844]"
    },
    {
      "src": "solidity_pragma_token [21233,21248]",
      "dest": "solidity_pragma_token [21267,21282]"
    },
    {
      "src": "override: override [42127,42135]",
      "dest": "override: override [46928,46936]"
    },
    {
      "src": "): ) [27028,27029]",
      "dest": "): ) [27078,27079]"
    },
    {
      "src": "=: = [15472,15473]",
      "dest": "=: = [15504,15505]"
    },
    {
      "src": "inheritance_specifier [36183,36206]",
      "dest": "inheritance_specifier [36233,36256]"
    },
    {
      "src": "+: + [10027,10028]",
      "dest": "+: + [10059,10060]"
    },
    {
      "src": ",: , [14255,14256]",
      "dest": ",: , [14287,14288]"
    },
    {
      "src": "identifier: account [37753,37760]",
      "dest": "identifier: account [37803,37810]"
    },
    {
      "src": "}: } [38042,38043]",
      "dest": "}: } [38092,38093]"
    },
    {
      "src": "parameter [30992,31006]",
      "dest": "parameter [31042,31056]"
    },
    {
      "src": "array_access [27892,27909]",
      "dest": "array_access [27942,27959]"
    },
    {
      "src": ",: , [29985,29986]",
      "dest": ",: , [30035,30036]"
    },
    {
      "src": "call_argument [29265,29275]",
      "dest": "call_argument [29315,29325]"
    },
    {
      "src": "parameter [39678,39691]",
      "dest": "parameter [39728,39741]"
    },
    {
      "src": "yul_evm_builtin [20378,20383]",
      "dest": "yul_evm_builtin [20410,20415]"
    },
    {
      "src": "identifier: recipient [39196,39205]",
      "dest": "identifier: recipient [39246,39255]"
    },
    {
      "src": "pure: pure [14294,14298]",
      "dest": "pure: pure [14326,14330]"
    },
    {
      "src": "type_name [12260,12267]",
      "dest": "type_name [12292,12299]"
    },
    {
      "src": "primitive_type [24246,24250]",
      "dest": "primitive_type [24296,24300]"
    },
    {
      "src": "identifier: recipient [25385,25394]",
      "dest": "identifier: recipient [25435,25444]"
    },
    {
      "src": "call_argument [37441,37447]",
      "dest": "call_argument [37491,37497]"
    },
    {
      "src": "): ) [11730,11731]",
      "dest": "): ) [11762,11763]"
    },
    {
      "src": "visibility [7206,7214]",
      "dest": "visibility [7238,7246]"
    },
    {
      "src": "bytes: bytes [17853,17858]",
      "dest": "bytes: bytes [17885,17890]"
    },
    {
      "src": "type_name [32454,32461]",
      "dest": "type_name [32504,32511]"
    },
    {
      "src": "type_name [30980,30987]",
      "dest": "type_name [31030,31037]"
    },
    {
      "src": "string: string [22682,22688]",
      "dest": "string: string [22716,22722]"
    },
    {
      "src": "returns: returns [11338,11345]",
      "dest": "returns: returns [11370,11377]"
    },
    {
      "src": "): ) [31481,31482]",
      "dest": "): ) [31531,31532]"
    },
    {
      "src": ".: . [42522,42523]",
      "dest": ".: . [47323,47324]"
    },
    {
      "src": "solidity_pragma_token [43015,43030]",
      "dest": "solidity_pragma_token [45874,45889]"
    },
    {
      "src": "): ) [34562,34563]",
      "dest": "): ) [34612,34613]"
    },
    {
      "src": "identifier: Address [14501,14508]",
      "dest": "identifier: Address [14533,14540]"
    },
    {
      "src": "array_access [24514,24541]",
      "dest": "array_access [24564,24591]"
    },
    {
      "src": "(: ( [33878,33879]",
      "dest": "(: ( [33928,33929]"
    },
    {
      "src": "parameter [40243,40257]",
      "dest": "parameter [40293,40307]"
    },
    {
      "src": "primitive_type [39702,39709]",
      "dest": "primitive_type [39752,39759]"
    },
    {
      "src": ",: , [27850,27851]",
      "dest": ",: , [27900,27901]"
    },
    {
      "src": "parameter [26096,26111]",
      "dest": "parameter [26146,26161]"
    },
    {
      "src": "\": \" [27922,27923]",
      "dest": "\": \" [27972,27973]"
    },
    {
      "src": "(: ( [37144,37145]",
      "dest": "(: ( [37194,37195]"
    },
    {
      "src": "call_expression [38951,39021]",
      "dest": "call_expression [39001,39071]"
    },
    {
      "src": "call_argument [24298,24304]",
      "dest": "call_argument [24348,24354]"
    },
    {
      "src": "library: library [9672,9679]",
      "dest": "library: library [9704,9711]"
    },
    {
      "src": "call_expression [39779,39854]",
      "dest": "call_expression [39829,39904]"
    },
    {
      "src": "identifier: super [42517,42522]",
      "dest": "identifier: super [47318,47323]"
    },
    {
      "src": "modifier_invocation [5248,5264]",
      "dest": "modifier_invocation [5280,5296]"
    },
    {
      "src": "identifier: spender [26232,26239]",
      "dest": "identifier: spender [26282,26289]"
    },
    {
      "src": "state_mutability [8857,8861]",
      "dest": "state_mutability [8889,8893]"
    },
    {
      "src": "expression_statement [28585,28625]",
      "dest": "expression_statement [28635,28675]"
    },
    {
      "src": "{: { [37197,37198]",
      "dest": "{: { [37247,37248]"
    },
    {
      "src": "call_argument [40003,40009]",
      "dest": "call_argument [40053,40059]"
    },
    {
      "src": "else: else [20030,20034]",
      "dest": "else: else [20062,20066]"
    },
    {
      "src": "identifier: balance [31878,31885]",
      "dest": "identifier: balance [31928,31935]"
    },
    {
      "src": "visibility [19708,19715]",
      "dest": "visibility [19740,19747]"
    },
    {
      "src": "function: function [24398,24406]",
      "dest": "function: function [24448,24456]"
    },
    {
      "src": "type_name [10851,10858]",
      "dest": "type_name [10883,10890]"
    },
    {
      "src": "identifier: require [39865,39872]",
      "dest": "identifier: require [39915,39922]"
    },
    {
      "src": "call_argument [10952,10958]",
      "dest": "call_argument [10984,10990]"
    },
    {
      "src": ",: , [32476,32477]",
      "dest": ",: , [32526,32527]"
    },
    {
      "src": ",: , [25375,25376]",
      "dest": ",: , [25425,25426]"
    },
    {
      "src": "address: address [24178,24185]",
      "dest": "address: address [24228,24235]"
    },
    {
      "src": "uint256: uint256 [9993,10000]",
      "dest": "uint256: uint256 [10025,10032]"
    },
    {
      "src": "call_argument [19566,19578]",
      "dest": "call_argument [19598,19610]"
    },
    {
      "src": ",: , [29263,29264]",
      "dest": ",: , [29313,29314]"
    },
    {
      "src": "): ) [19006,19007]",
      "dest": "): ) [19038,19039]"
    },
    {
      "src": "yul_function_call [20424,20443]",
      "dest": "yul_function_call [20456,20475]"
    },
    {
      "src": "identifier: _allowances [26206,26217]",
      "dest": "identifier: _allowances [26256,26267]"
    },
    {
      "src": "event_definition [32725,32777]",
      "dest": "event_definition [32775,32827]"
    },
    {
      "src": "binary_expression [29163,29184]",
      "dest": "binary_expression [29213,29234]"
    },
    {
      "src": "uint256: uint256 [7605,7612]",
      "dest": "uint256: uint256 [7637,7644]"
    },
    {
      "src": "): ) [1653,1654]",
      "dest": "): ) [1622,1623]"
    },
    {
      "src": "memory: memory [17896,17902]",
      "dest": "memory: memory [17928,17934]"
    },
    {
      "src": "}: } [34739,34740]",
      "dest": "}: } [34789,34790]"
    },
    {
      "src": "identifier: _isBlacklisted [38020,38034]",
      "dest": "identifier: _isBlacklisted [38070,38084]"
    },
    {
      "src": "): ) [42116,42117]",
      "dest": "): ) [46917,46918]"
    },
    {
      "src": ",: , [20430,20431]",
      "dest": ",: , [20462,20463]"
    },
    {
      "src": "mapping: mapping [1966,1973]",
      "dest": "mapping: mapping [1998,2005]"
    },
    {
      "src": "=: = [16920,16921]",
      "dest": "=: = [16952,16953]"
    },
    {
      "src": "type_name [29970,29977]",
      "dest": "type_name [30020,30027]"
    },
    {
      "src": ".: . [4579,4580]",
      "dest": ".: . [4611,4612]"
    },
    {
      "src": "type_name [18275,18281]",
      "dest": "type_name [18307,18313]"
    },
    {
      "src": "{: { [42136,42137]",
      "dest": "{: { [46937,46938]"
    },
    {
      "src": "string_literal [38983,39020]",
      "dest": "string_literal [39033,39070]"
    },
    {
      "src": "variable_declaration_statement [10013,10031]",
      "dest": "variable_declaration_statement [10045,10063]"
    },
    {
      "src": ",: , [37328,37329]",
      "dest": ",: , [37378,37379]"
    },
    {
      "src": "call_argument [19545,19551]",
      "dest": "call_argument [19577,19583]"
    },
    {
      "src": "call_argument [28723,28730]",
      "dest": "call_argument [28773,28780]"
    },
    {
      "src": "]: ] [1219,1220]",
      "dest": "]: ] [1159,1160]"
    },
    {
      "src": "parameter [26817,26832]",
      "dest": "parameter [26867,26882]"
    },
    {
      "src": "identifier: value [7887,7892]",
      "dest": "identifier: value [7919,7924]"
    },
    {
      "src": "identifier: amount [28732,28738]",
      "dest": "identifier: amount [28782,28788]"
    },
    {
      "src": "identifier: sender [27576,27582]",
      "dest": "identifier: sender [27626,27632]"
    },
    {
      "src": "primitive_type [8879,8884]",
      "dest": "primitive_type [8911,8916]"
    },
    {
      "src": "pragma_directive [9068,9091]",
      "dest": "pragma_directive [9100,9123]"
    },
    {
      "src": "function_body [19412,19587]",
      "dest": "function_body [19444,19619]"
    },
    {
      "src": "yul_path [20445,20460]",
      "dest": "yul_path [20477,20492]"
    },
    {
      "src": "return_type_definition [7215,7229]",
      "dest": "return_type_definition [7247,7261]"
    },
    {
      "src": "comment: // The easiest way to bubble the revert reason is using memory via assembly [20163,20238]",
      "dest": "comment: // The easiest way to bubble the revert reason is using memory via assembly [20195,20270]"
    },
    {
      "src": "primitive_type [26883,26887]",
      "dest": "primitive_type [26933,26937]"
    },
    {
      "src": "function: function [10399,10407]",
      "dest": "function: function [10431,10439]"
    },
    {
      "src": "!: ! [37216,37217]",
      "dest": "!: ! [37266,37267]"
    },
    {
      "src": "parenthesized_expression [15670,15714]",
      "dest": "parenthesized_expression [15702,15746]"
    },
    {
      "src": "identifier: div [12873,12876]",
      "dest": "identifier: div [12905,12908]"
    },
    {
      "src": "expression_statement [26900,27030]",
      "dest": "expression_statement [26950,27080]"
    },
    {
      "src": ",: , [36664,36665]",
      "dest": ",: , [36714,36715]"
    },
    {
      "src": "returns: returns [25436,25443]",
      "dest": "returns: returns [25486,25493]"
    },
    {
      "src": "function_definition [12236,12368]",
      "dest": "function_definition [12268,12400]"
    },
    {
      "src": "binary_expression [14336,14342]",
      "dest": "binary_expression [14368,14374]"
    },
    {
      "src": "call_argument [39257,39266]",
      "dest": "call_argument [39307,39316]"
    },
    {
      "src": "identifier: account [38011,38018]",
      "dest": "identifier: account [38061,38068]"
    },
    {
      "src": "primitive_type [9948,9955]",
      "dest": "primitive_type [9980,9987]"
    },
    {
      "src": "identifier: Blacklisted [36395,36406]",
      "dest": "identifier: Blacklisted [36445,36456]"
    },
    {
      "src": "call_argument [39196,39205]",
      "dest": "call_argument [39246,39255]"
    },
    {
      "src": "call_argument [39787,39808]",
      "dest": "call_argument [39837,39858]"
    },
    {
      "src": "}: } [43003,43004]",
      "dest": "}: } [47632,47633]"
    },
    {
      "src": "type_name [18321,18326]",
      "dest": "type_name [18353,18358]"
    },
    {
      "src": "call_expression [29235,29284]",
      "dest": "call_expression [29285,29334]"
    },
    {
      "src": "expression_statement [33937,33997]",
      "dest": "expression_statement [33987,34047]"
    },
    {
      "src": "function_definition [7548,7645]",
      "dest": "function_definition [7580,7677]"
    },
    {
      "src": "number_literal: 0x100000 [36295,36303]",
      "dest": "number_literal: 0x100000 [36345,36353]"
    },
    {
      "src": "address: address [18240,18247]",
      "dest": "address: address [18272,18279]"
    },
    {
      "src": "solidity: solidity [8151,8159]",
      "dest": "solidity: solidity [8183,8191]"
    },
    {
      "src": "type_name [19302,19309]",
      "dest": "type_name [19334,19341]"
    },
    {
      "src": "): ) [39296,39297]",
      "dest": "): ) [39346,39347]"
    },
    {
      "src": "(: ( [38958,38959]",
      "dest": "(: ( [39008,39009]"
    },
    {
      "src": "identifier: _functionCallWithValue [19522,19544]",
      "dest": "identifier: _functionCallWithValue [19554,19576]"
    },
    {
      "src": "): ) [30177,30178]",
      "dest": "): ) [30227,30228]"
    },
    {
      "src": "virtual: virtual [27628,27635]",
      "dest": "virtual: virtual [27678,27685]"
    },
    {
      "src": "primitive_type [5649,5656]",
      "dest": "primitive_type [5681,5688]"
    },
    {
      "src": "state_variable_declaration [1178,1203]",
      "dest": "state_variable_declaration [1118,1143]"
    },
    {
      "src": "identifier: OwnershipTransferred [4105,4125]",
      "dest": "identifier: OwnershipTransferred [4137,4157]"
    },
    {
      "src": "binary_expression [10996,11001]",
      "dest": "binary_expression [11028,11033]"
    },
    {
      "src": "identifier: require [37813,37820]",
      "dest": "identifier: require [37863,37870]"
    },
    {
      "src": "virtual: virtual [24220,24227]",
      "dest": "virtual: virtual [24270,24277]"
    },
    {
      "src": "function: function [34403,34411]",
      "dest": "function: function [34453,34461]"
    },
    {
      "src": "): ) [26887,26888]",
      "dest": "): ) [26937,26938]"
    },
    {
      "src": "}: } [5117,5118]",
      "dest": "}: } [5149,5150]"
    },
    {
      "src": "identifier: burnMax [34592,34599]",
      "dest": "identifier: burnMax [34642,34649]"
    },
    {
      "src": "\": \" [39957,39958]",
      "dest": "\": \" [40007,40008]"
    },
    {
      "src": "identifier: a [12885,12886]",
      "dest": "identifier: a [12917,12918]"
    },
    {
      "src": "parameter [29970,29985]",
      "dest": "parameter [30020,30035]"
    },
    {
      "src": "comment: /**      * @dev Requere neither accounts to be blacklisted before approval      * @param owner address of owner giving approval      * @param spender address of spender to approve for      * @param amount amount of tokens to approve      */ [39399,39644]",
      "dest": "comment: /**      * @dev Requere neither accounts to be blacklisted before approval      * @param owner address of owner giving approval      * @param spender address of spender to approve for      * @param amount amount of tokens to approve      */ [39449,39694]"
    },
    {
      "src": "type_name [38892,38899]",
      "dest": "type_name [38942,38949]"
    },
    {
      "src": "type_cast_expression [31833,31846]",
      "dest": "type_cast_expression [31883,31896]"
    },
    {
      "src": "call_expression [14328,14357]",
      "dest": "call_expression [14360,14389]"
    },
    {
      "src": "primitive_type [4417,4424]",
      "dest": "primitive_type [4449,4456]"
    },
    {
      "src": "emit_statement [29447,29490]",
      "dest": "emit_statement [29497,29540]"
    },
    {
      "src": "parameter [24432,24447]",
      "dest": "parameter [24482,24497]"
    },
    {
      "src": "comment: /**  * @notice This is a copy of openzeppelin ERC20 contract with removed state variables.  * Removing state variables has been necessary due to proxy pattern usage.  * Changes to Openzeppelin ERC20 https://github.com/OpenZeppelin/openzeppelin-contracts/blob/de99bccbfd4ecd19d7369d01b070aa72c64423c9/contracts/token/ERC20/ERC20.sol:  * - Remove state variables _name, _symbol, _decimals  * - Use state variables _balances, _allowances, _totalSupply from ProxyStorage  * - Remove constructor  * - Solidity version changed from ^0.6.0 to 0.6.10  * - Contract made abstract  *  * See also: ClaimableOwnable.sol and ProxyStorage.sol  */ [20579,21222]",
      "dest": "comment: /**  * @notice This is a copy of openzeppelin ERC20 contract with removed state variables.  * Removing state variables has been necessary due to proxy pattern usage.  * Changes to Openzeppelin ERC20 https://github.com/OpenZeppelin/openzeppelin-contracts/blob/de99bccbfd4ecd19d7369d01b070aa72c64423c9/contracts/token/ERC20/ERC20.sol:  * - Remove state variables _name, _symbol, _decimals  * - Use state variables _balances, _allowances, _totalSupply from ProxyStorage  * - Remove constructor  * - Solidity version changed from ^0.6.0 to 0.6.10  * - Contract made abstract  *  * See also: ClaimableOwnable.sol and ProxyStorage.sol  */ [20613,21256]"
    },
    {
      "src": "identifier: sendValue [16666,16675]",
      "dest": "identifier: sendValue [16698,16707]"
    },
    {
      "src": "call_argument [4597,4609]",
      "dest": "call_argument [4629,4641]"
    },
    {
      "src": "): ) [13728,13729]",
      "dest": "): ) [13760,13761]"
    },
    {
      "src": "pragma_directive [34744,34767]",
      "dest": "pragma_directive [34794,34817]"
    },
    {
      "src": "override: override [39759,39767]",
      "dest": "override: override [39809,39817]"
    },
    {
      "src": "call_argument [42266,42275]",
      "dest": "call_argument [47067,47076]"
    },
    {
      "src": "solidity_pragma_token [8151,8166]",
      "dest": "solidity_pragma_token [8183,8198]"
    },
    {
      "src": "identifier: a [9956,9957]",
      "dest": "identifier: a [9988,9989]"
    },
    {
      "src": "function: function [5746,5754]",
      "dest": "function: function [5778,5786]"
    },
    {
      "src": "}: } [31498,31499]",
      "dest": "}: } [31548,31549]"
    },
    {
      "src": "private: private [1260,1267]",
      "dest": "private: private [1200,1207]"
    },
    {
      "src": "variable_declaration [13009,13018]",
      "dest": "variable_declaration [13041,13050]"
    },
    {
      "src": "identifier: requireNotAutosweepAddress [42423,42449]",
      "dest": "identifier: requireNotAutosweepAddress [47224,47250]"
    },
    {
      "src": "): ) [43501,43502]",
      "dest": "): ) [48130,48131]"
    },
    {
      "src": "}: } [19586,19587]",
      "dest": "}: } [19618,19619]"
    },
    {
      "src": "): ) [17870,17871]",
      "dest": "): ) [17902,17903]"
    },
    {
      "src": "return_statement [24316,24328]",
      "dest": "return_statement [24366,24378]"
    },
    {
      "src": "solidity: solidity [21233,21241]",
      "dest": "solidity: solidity [21267,21275]"
    },
    {
      "src": "function_definition [19271,19587]",
      "dest": "function_definition [19303,19619]"
    },
    {
      "src": "identifier: onlyOwner [33916,33925]",
      "dest": "identifier: onlyOwner [33966,33975]"
    },
    {
      "src": "): ) [19809,19810]",
      "dest": "): ) [19841,19842]"
    },
    {
      "src": "call_expression [12321,12360]",
      "dest": "call_expression [12353,12392]"
    },
    {
      "src": "visibility [37783,37791]",
      "dest": "visibility [37833,37841]"
    },
    {
      "src": "{: { [39768,39769]",
      "dest": "{: { [39818,39819]"
    },
    {
      "src": "identifier: TrueUSD [43235,43242]",
      "dest": "identifier: TrueUSD [47864,47871]"
    },
    {
      "src": "function_body [8784,8820]",
      "dest": "function_body [8816,8852]"
    },
    {
      "src": "(: ( [7569,7570]",
      "dest": "(: ( [7601,7602]"
    },
    {
      "src": "=: = [36293,36294]",
      "dest": "=: = [36343,36344]"
    },
    {
      "src": "identifier: target [19635,19641]",
      "dest": "identifier: target [19667,19673]"
    },
    {
      "src": "): ) [16717,16718]",
      "dest": "): ) [16749,16750]"
    },
    {
      "src": ",: , [39065,39066]",
      "dest": ",: , [39115,39116]"
    },
    {
      "src": "}: } [26286,26287]",
      "dest": "}: } [26336,26337]"
    },
    {
      "src": "primitive_type [1045,1052]",
      "dest": "primitive_type [985,992]"
    },
    {
      "src": "internal: internal [30003,30011]",
      "dest": "internal: internal [30053,30061]"
    },
    {
      "src": "identifier: _burn [40377,40382]",
      "dest": "identifier: _burn [40427,40432]"
    },
    {
      "src": "): ) [22695,22696]",
      "dest": "): ) [22729,22730]"
    },
    {
      "src": "primitive_type [18855,18862]",
      "dest": "primitive_type [18887,18894]"
    },
    {
      "src": "function_definition [33185,33268]",
      "dest": "function_definition [33235,33318]"
    },
    {
      "src": "external: external [31769,31777]",
      "dest": "external: external [31819,31827]"
    },
    {
      "src": "(: ( [7836,7837]",
      "dest": "(: ( [7868,7869]"
    },
    {
      "src": "}: } [31027,31028]",
      "dest": "}: } [31077,31078]"
    },
    {
      "src": "identifier: _totalSupply [29397,29409]",
      "dest": "identifier: _totalSupply [29447,29459]"
    },
    {
      "src": "string_literal [16954,16956]",
      "dest": "string_literal [16986,16988]"
    },
    {
      "src": "): ) [12997,12998]",
      "dest": "): ) [13029,13030]"
    },
    {
      "src": "type_name [32745,32752]",
      "dest": "type_name [32795,32802]"
    },
    {
      "src": "visibility [23688,23694]",
      "dest": "visibility [23722,23728]"
    },
    {
      "src": "}: } [14387,14388]",
      "dest": "}: } [14419,14420]"
    },
    {
      "src": "type_name [31405,31420]",
      "dest": "type_name [31455,31470]"
    },
    {
      "src": "state_mutability [42835,42839]",
      "dest": "state_mutability [47464,47468]"
    },
    {
      "src": "{: { [12959,12960]",
      "dest": "{: { [12991,12992]"
    },
    {
      "src": "): ) [27962,27963]",
      "dest": "): ) [28012,28013]"
    },
    {
      "src": "call_argument [12325,12326]",
      "dest": "call_argument [12357,12358]"
    },
    {
      "src": "address: address [28544,28551]",
      "dest": "address: address [28594,28601]"
    },
    {
      "src": "comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [8171,8679]",
      "dest": "comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [8203,8711]"
    },
    {
      "src": "]: ] [37965,37966]",
      "dest": "]: ] [38015,38016]"
    },
    {
      "src": "comment: /**      * @dev Moves tokens `amount` from `sender` to `recipient`.      *      * This is internal function is equivalent to {transfer}, and can be used to      * e.g. implement automatic token fees, slashing mechanisms, etc.      *      * Emits a {Transfer} event.      *      * Requirements:      *      * - `sender` cannot be the zero address.      * - `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      */ [27067,27543]",
      "dest": "comment: /**      * @dev Moves tokens `amount` from `sender` to `recipient`.      *      * This is internal function is equivalent to {transfer}, and can be used to      * e.g. implement automatic token fees, slashing mechanisms, etc.      *      * Emits a {Transfer} event.      *      * Requirements:      *      * - `sender` cannot be the zero address.      * - `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      */ [27117,27593]"
    },
    {
      "src": "if: if [19972,19974]",
      "dest": "if: if [20004,20006]"
    },
    {
      "src": "parameter [13631,13640]",
      "dest": "parameter [13663,13672]"
    },
    {
      "src": "call_argument [34722,34728]",
      "dest": "call_argument [34772,34778]"
    },
    {
      "src": "(: ( [25360,25361]",
      "dest": "(: ( [25410,25411]"
    },
    {
      "src": "): ) [39235,39236]",
      "dest": "): ) [39285,39286]"
    },
    {
      "src": "function: function [40891,40899]",
      "dest": "function: function [40944,40952]"
    },
    {
      "src": "visibility [40937,40945]",
      "dest": "visibility [40990,40998]"
    },
    {
      "src": "bool: bool [6114,6118]",
      "dest": "bool: bool [6146,6150]"
    },
    {
      "src": "call_expression [28656,28686]",
      "dest": "call_expression [28706,28736]"
    },
    {
      "src": "pure: pure [22849,22853]",
      "dest": "pure: pure [22883,22887]"
    },
    {
      "src": "identifier: _approve [26174,26182]",
      "dest": "identifier: _approve [26224,26232]"
    },
    {
      "src": "{: { [11600,11601]",
      "dest": "{: { [11632,11633]"
    },
    {
      "src": "type_name [6438,6445]",
      "dest": "type_name [6470,6477]"
    },
    {
      "src": "return: return [17913,17919]",
      "dest": "return: return [17945,17951]"
    },
    {
      "src": "binary_expression [42907,42936]",
      "dest": "binary_expression [47536,47565]"
    },
    {
      "src": "): ) [38344,38345]",
      "dest": "): ) [38394,38395]"
    },
    {
      "src": "primitive_type [852,859]",
      "dest": "primitive_type [792,799]"
    },
    {
      "src": "call_argument [10491,10492]",
      "dest": "call_argument [10523,10524]"
    },
    {
      "src": "function_definition [8828,9061]",
      "dest": "function_definition [8860,9093]"
    },
    {
      "src": "primitive_type [10873,10879]",
      "dest": "primitive_type [10905,10911]"
    },
    {
      "src": "comment: /**      * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but      * with `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [19023,19265]",
      "dest": "comment: /**      * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but      * with `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [19055,19297]"
    },
    {
      "src": "primitive_type [1809,1816]",
      "dest": "primitive_type [1841,1848]"
    },
    {
      "src": "user_defined_type [1855,1871]",
      "dest": "user_defined_type [1887,1903]"
    },
    {
      "src": "(: ( [42173,42174]",
      "dest": "(: ( [46974,46975]"
    },
    {
      "src": "call_argument [19769,19775]",
      "dest": "call_argument [19801,19807]"
    },
    {
      "src": "identifier: a [14375,14376]",
      "dest": "identifier: a [14407,14408]"
    },
    {
      "src": "identifier: CENT [39290,39294]",
      "dest": "identifier: CENT [39340,39344]"
    },
    {
      "src": "identifier: amount [28617,28623]",
      "dest": "identifier: amount [28667,28673]"
    },
    {
      "src": "call_argument [28062,28071]",
      "dest": "call_argument [28112,28121]"
    },
    {
      "src": "(: ( [40919,40920]",
      "dest": "(: ( [40972,40973]"
    },
    {
      "src": "identifier: _min [33887,33891]",
      "dest": "identifier: _min [33937,33941]"
    },
    {
      "src": "string [18963,19006]",
      "dest": "string [18995,19038]"
    },
    {
      "src": "member_expression [19925,19936]",
      "dest": "member_expression [19957,19968]"
    },
    {
      "src": "override_specifier [43383,43391]",
      "dest": "override_specifier [48012,48020]"
    },
    {
      "src": "parameter [18836,18853]",
      "dest": "parameter [18868,18885]"
    },
    {
      "src": "identifier: target [18248,18254]",
      "dest": "identifier: target [18280,18286]"
    },
    {
      "src": "identifier: newMax [32769,32775]",
      "dest": "identifier: newMax [32819,32825]"
    },
    {
      "src": "bytes: bytes [19398,19403]",
      "dest": "bytes: bytes [19430,19435]"
    },
    {
      "src": "call_argument [41039,41046]",
      "dest": "call_argument [41092,41099]"
    },
    {
      "src": "identifier: transferFrom [25348,25360]",
      "dest": "identifier: transferFrom [25398,25410]"
    },
    {
      "src": "return: return [43617,43623]",
      "dest": "return: return [48246,48252]"
    },
    {
      "src": "primitive_type [43320,43325]",
      "dest": "primitive_type [47949,47954]"
    },
    {
      "src": "(: ( [39872,39873]",
      "dest": "(: ( [39922,39923]"
    },
    {
      "src": "type_cast_expression [19431,19444]",
      "dest": "type_cast_expression [19463,19476]"
    },
    {
      "src": "call_expression [13692,13729]",
      "dest": "call_expression [13724,13761]"
    },
    {
      "src": "memory: memory [8885,8891]",
      "dest": "memory: memory [8917,8923]"
    },
    {
      "src": "identifier: REDEMPTION_ADDRESS_COUNT [41003,41027]",
      "dest": "identifier: REDEMPTION_ADDRESS_COUNT [41056,41080]"
    },
    {
      "src": "): ) [18868,18869]",
      "dest": "): ) [18900,18901]"
    },
    {
      "src": "string_literal [39067,39107]",
      "dest": "string_literal [39117,39157]"
    },
    {
      "src": "): ) [28509,28510]",
      "dest": "): ) [28559,28560]"
    },
    {
      "src": "): ) [24304,24305]",
      "dest": "): ) [24354,24355]"
    },
    {
      "src": "identifier: mod [13616,13619]",
      "dest": "identifier: mod [13648,13651]"
    },
    {
      "src": "): ) [39371,39372]",
      "dest": "): ) [39421,39422]"
    },
    {
      "src": "identifier: account [28645,28652]",
      "dest": "identifier: account [28695,28702]"
    },
    {
      "src": "function_body [31445,31499]",
      "dest": "function_body [31495,31549]"
    },
    {
      "src": ",: , [34683,34684]",
      "dest": ",: , [34733,34734]"
    },
    {
      "src": ",: , [4427,4428]",
      "dest": ",: , [4459,4460]"
    },
    {
      "src": "identifier: accountHash [15683,15694]",
      "dest": "identifier: accountHash [15715,15726]"
    },
    {
      "src": "call_argument [26206,26256]",
      "dest": "call_argument [26256,26306]"
    },
    {
      "src": "function_body [18902,19015]",
      "dest": "function_body [18934,19047]"
    },
    {
      "src": "contract: contract [8690,8698]",
      "dest": "contract: contract [8722,8730]"
    },
    {
      "src": "parameter [19398,19410]",
      "dest": "parameter [19430,19442]"
    },
    {
      "src": "(: ( [10456,10457]",
      "dest": "(: ( [10488,10489]"
    },
    {
      "src": "parameter [34435,34449]",
      "dest": "parameter [34485,34499]"
    },
    {
      "src": "call_expression [10944,10973]",
      "dest": "call_expression [10976,11005]"
    },
    {
      "src": "identifier: account [34676,34683]",
      "dest": "identifier: account [34726,34733]"
    },
    {
      "src": "primitive_type [7190,7197]",
      "dest": "primitive_type [7222,7229]"
    },
    {
      "src": "[: [ [39054,39055]",
      "dest": "[: [ [39104,39105]"
    },
    {
      "src": "(: ( [26882,26883]",
      "dest": "(: ( [26932,26933]"
    },
    {
      "src": "\": \" [42969,42970]",
      "dest": "\": \" [47598,47599]"
    },
    {
      "src": "address: address [38314,38321]",
      "dest": "address: address [38364,38371]"
    },
    {
      "src": "uint256: uint256 [19662,19669]",
      "dest": "uint256: uint256 [19694,19701]"
    },
    {
      "src": "[: [ [24532,24533]",
      "dest": "[: [ [24582,24583]"
    },
    {
      "src": "identifier: target [19769,19775]",
      "dest": "identifier: target [19801,19807]"
    },
    {
      "src": "else: else [20496,20500]",
      "dest": "else: else [20528,20532]"
    },
    {
      "src": "public: public [43667,43673]",
      "dest": "public: public [48296,48302]"
    },
    {
      "src": "visibility [958,965]",
      "dest": "visibility [898,905]"
    },
    {
      "src": "function_body [33224,33268]",
      "dest": "function_body [33274,33318]"
    },
    {
      "src": "uint256: uint256 [1078,1085]",
      "dest": "uint256: uint256 [1018,1025]"
    },
    {
      "src": ".: . [16760,16761]",
      "dest": ".: . [16792,16793]"
    },
    {
      "src": "call_argument [27833,27839]",
      "dest": "call_argument [27883,27889]"
    },
    {
      "src": "inheritance_specifier [22467,22483]",
      "dest": "inheritance_specifier [22501,22517]"
    },
    {
      "src": "solidity_pragma_token [31042,31057]",
      "dest": "solidity_pragma_token [31092,31107]"
    },
    {
      "src": "call_argument [24828,24834]",
      "dest": "call_argument [24878,24884]"
    },
    {
      "src": "): ) [20394,20395]",
      "dest": "): ) [20426,20427]"
    },
    {
      "src": "identifier: c [10992,10993]",
      "dest": "identifier: c [11024,11025]"
    },
    {
      "src": "(: ( [4764,4765]",
      "dest": "(: ( [4796,4797]"
    },
    {
      "src": "identifier: recipient [42076,42085]",
      "dest": "identifier: recipient [46877,46886]"
    },
    {
      "src": "primitive_type [37762,37766]",
      "dest": "primitive_type [37812,37816]"
    },
    {
      "src": "member_expression [31456,31468]",
      "dest": "member_expression [31506,31518]"
    },
    {
      "src": "\": \" [25586,25587]",
      "dest": "\": \" [25636,25637]"
    },
    {
      "src": "pragma: pragma [8144,8150]",
      "dest": "pragma: pragma [8176,8182]"
    },
    {
      "src": "=: = [31815,31816]",
      "dest": "=: = [31865,31866]"
    },
    {
      "src": "return_statement [11014,11023]",
      "dest": "return_statement [11046,11055]"
    },
    {
      "src": "!: ! [39873,39874]",
      "dest": "!: ! [39923,39924]"
    },
    {
      "src": "primitive_type [998,1005]",
      "dest": "primitive_type [938,945]"
    },
    {
      "src": "uint8: uint8 [23565,23570]",
      "dest": "uint8: uint8 [23599,23604]"
    },
    {
      "src": "variable_declaration_statement [31799,31848]",
      "dest": "variable_declaration_statement [31849,31898]"
    },
    {
      "src": "function_body [23727,23765]",
      "dest": "function_body [23769,23807]"
    },
    {
      "src": "identifier: require [34574,34581]",
      "dest": "identifier: require [34624,34631]"
    },
    {
      "src": "member_expression [20121,20138]",
      "dest": "member_expression [20153,20170]"
    },
    {
      "src": "internal: internal [8848,8856]",
      "dest": "internal: internal [8880,8888]"
    },
    {
      "src": "identifier: _min [33945,33949]",
      "dest": "identifier: _min [33995,33999]"
    },
    {
      "src": "comment: // solhint-disable-next-line no-inline-assembly [20258,20305]",
      "dest": "comment: // solhint-disable-next-line no-inline-assembly [20290,20337]"
    },
    {
      "src": "array_access [26932,26957]",
      "dest": "array_access [26982,27007]"
    },
    {
      "src": "binary_expression [11683,11693]",
      "dest": "binary_expression [11715,11725]"
    },
    {
      "src": "(: ( [26244,26245]",
      "dest": "(: ( [26294,26295]"
    },
    {
      "src": "public: public [24213,24219]",
      "dest": "public: public [24263,24269]"
    },
    {
      "src": "identifier: isBlacklisted [36437,36450]",
      "dest": "identifier: isBlacklisted [36487,36500]"
    },
    {
      "src": "}: } [20573,20574]",
      "dest": "}: } [20605,20606]"
    },
    {
      "src": "user_defined_type [31233,31238]",
      "dest": "user_defined_type [31283,31288]"
    },
    {
      "src": "uint256: uint256 [16703,16710]",
      "dest": "uint256: uint256 [16735,16742]"
    },
    {
      "src": "]: ] [28652,28653]",
      "dest": "]: ] [28702,28703]"
    },
    {
      "src": "identifier: value [16938,16943]",
      "dest": "identifier: value [16970,16975]"
    },
    {
      "src": "array_access [28656,28674]",
      "dest": "array_access [28706,28724]"
    },
    {
      "src": "\": \" [19005,19006]",
      "dest": "\": \" [19037,19038]"
    },
    {
      "src": "}: } [40017,40018]",
      "dest": "}: } [40067,40068]"
    },
    {
      "src": "override: override [38931,38939]",
      "dest": "override: override [38981,38989]"
    },
    {
      "src": "returns: returns [7630,7637]",
      "dest": "returns: returns [7662,7669]"
    },
    {
      "src": "{: { [11356,11357]",
      "dest": "{: { [11388,11389]"
    },
    {
      "src": "number_literal: 0 [27673,27674]",
      "dest": "number_literal: 0 [27723,27724]"
    },
    {
      "src": "identifier: c [10049,10050]",
      "dest": "identifier: c [10081,10082]"
    },
    {
      "src": "): ) [5388,5389]",
      "dest": "): ) [5420,5421]"
    },
    {
      "src": "return_statement [17913,17981]",
      "dest": "return_statement [17945,18013]"
    },
    {
      "src": "(: ( [5648,5649]",
      "dest": "(: ( [5680,5681]"
    },
    {
      "src": "is: is [43243,43245]",
      "dest": "is: is [47872,47874]"
    },
    {
      "src": "number_literal: 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 [15474,15540]",
      "dest": "number_literal: 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 [15506,15572]"
    },
    {
      "src": "function_definition [31383,31499]",
      "dest": "function_definition [31433,31549]"
    },
    {
      "src": "\": \" [12331,12332]",
      "dest": "\": \" [12363,12364]"
    },
    {
      "src": "visibility [37178,37186]",
      "dest": "visibility [37228,37236]"
    },
    {
      "src": "member_expression [4370,4380]",
      "dest": "member_expression [4402,4412]"
    },
    {
      "src": "returns: returns [9984,9991]",
      "dest": "returns: returns [10016,10023]"
    },
    {
      "src": ",: , [38329,38330]",
      "dest": ",: , [38379,38380]"
    },
    {
      "src": "{: { [15617,15618]",
      "dest": "{: { [15649,15650]"
    },
    {
      "src": "): ) [15713,15714]",
      "dest": "): ) [15745,15746]"
    },
    {
      "src": "function: function [31720,31728]",
      "dest": "function: function [31770,31778]"
    },
    {
      "src": "primitive_type [42096,42103]",
      "dest": "primitive_type [46897,46904]"
    },
    {
      "src": "address: address [19431,19438]",
      "dest": "address: address [19463,19470]"
    },
    {
      "src": "parameter [42802,42824]",
      "dest": "parameter [47431,47453]"
    },
    {
      "src": "): ) [37836,37837]",
      "dest": "): ) [37886,37887]"
    },
    {
      "src": "(: ( [43373,43374]",
      "dest": "(: ( [48002,48003]"
    },
    {
      "src": "identifier: require [11675,11682]",
      "dest": "identifier: require [11707,11714]"
    },
    {
      "src": "\": \" [37867,37868]",
      "dest": "\": \" [37917,37918]"
    },
    {
      "src": "}: } [4629,4630]",
      "dest": "}: } [4661,4662]"
    },
    {
      "src": "primitive_type [36251,36258]",
      "dest": "primitive_type [36301,36308]"
    },
    {
      "src": "function_definition [18218,18414]",
      "dest": "function_definition [18250,18446]"
    },
    {
      "src": "string_literal [39810,39853]",
      "dest": "string_literal [39860,39903]"
    },
    {
      "src": "return_statement [13126,13135]",
      "dest": "return_statement [13158,13167]"
    },
    {
      "src": "identifier: transfer [24169,24177]",
      "dest": "identifier: transfer [24219,24227]"
    },
    {
      "src": "identifier: setBurnBounds [33865,33878]",
      "dest": "identifier: setBurnBounds [33915,33928]"
    },
    {
      "src": "}: } [20479,20480]",
      "dest": "}: } [20511,20512]"
    },
    {
      "src": "!=: != [15707,15709]",
      "dest": "!=: != [15739,15741]"
    },
    {
      "src": "function_definition [18789,19015]",
      "dest": "function_definition [18821,19047]"
    },
    {
      "src": "(: ( [40991,40992]",
      "dest": "(: ( [41044,41045]"
    },
    {
      "src": "type_name [25377,25384]",
      "dest": "type_name [25427,25434]"
    },
    {
      "src": "(: ( [13619,13620]",
      "dest": "(: ( [13651,13652]"
    },
    {
      "src": "user_defined_type [41994,42006]",
      "dest": "user_defined_type [41827,41839]"
    },
    {
      "src": "identifier: b [12328,12329]",
      "dest": "identifier: b [12360,12361]"
    },
    {
      "src": "): ) [27617,27618]",
      "dest": "): ) [27667,27668]"
    },
    {
      "src": "call_argument [25472,25478]",
      "dest": "call_argument [25522,25528]"
    },
    {
      "src": "parameter [43406,43411]",
      "dest": "parameter [48035,48040]"
    },
    {
      "src": "type_name [852,859]",
      "dest": "type_name [792,799]"
    },
    {
      "src": "identifier: b [10952,10953]",
      "dest": "identifier: b [10984,10985]"
    },
    {
      "src": "identifier: _allowances [1459,1470]",
      "dest": "identifier: _allowances [1399,1410]"
    },
    {
      "src": "public: public [43475,43481]",
      "dest": "public: public [48104,48110]"
    },
    {
      "src": "call_expression [42239,42320]",
      "dest": "call_expression [47040,47121]"
    },
    {
      "src": "visibility [10434,10442]",
      "dest": "visibility [10466,10474]"
    },
    {
      "src": "(: ( [29954,29955]",
      "dest": "(: ( [30004,30005]"
    },
    {
      "src": "return: return [25641,25647]",
      "dest": "return: return [25691,25697]"
    },
    {
      "src": "pragma_directive [21226,21249]",
      "dest": "pragma_directive [21260,21283]"
    },
    {
      "src": "pure: pure [22668,22672]",
      "dest": "pure: pure [22702,22706]"
    },
    {
      "src": "address: address [37745,37752]",
      "dest": "address: address [37795,37802]"
    },
    {
      "src": "): ) [19960,19961]",
      "dest": "): ) [19992,19993]"
    },
    {
      "src": "type_name [11347,11354]",
      "dest": "type_name [11379,11386]"
    },
    {
      "src": "event_paramater [32454,32476]",
      "dest": "event_paramater [32504,32526]"
    },
    {
      "src": "(: ( [27756,27757]",
      "dest": "(: ( [27806,27807]"
    },
    {
      "src": "boolean_literal [24853,24857]",
      "dest": "boolean_literal [24903,24907]"
    },
    {
      "src": "primitive_type [1634,1641]",
      "dest": "primitive_type [1603,1610]"
    },
    {
      "src": "): ) [10432,10433]",
      "dest": "): ) [10464,10465]"
    },
    {
      "src": "return_type_definition [11338,11355]",
      "dest": "return_type_definition [11370,11387]"
    },
    {
      "src": "parenthesized_expression [20526,20540]",
      "dest": "parenthesized_expression [20558,20572]"
    },
    {
      "src": ",: , [28554,28555]",
      "dest": ",: , [28604,28605]"
    },
    {
      "src": "function_body [42136,42567]",
      "dest": "function_body [46937,47368]"
    },
    {
      "src": "contract: contract [43226,43234]",
      "dest": "contract: contract [47855,47863]"
    },
    {
      "src": "comment: /**      * @dev Emitted when account blacklist status changes      */ [36312,36383]",
      "dest": "comment: /**      * @dev Emitted when account blacklist status changes      */ [36362,36433]"
    },
    {
      "src": "call_argument [17947,17979]",
      "dest": "call_argument [17979,18011]"
    },
    {
      "src": "string_literal [37867,37932]",
      "dest": "string_literal [37917,37982]"
    },
    {
      "src": "comment: /**      * @dev Hook that is called before any transfer of tokens. This includes      * minting and burning.      *      * Calling conditions:      *      * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens      * will be to transferred to `to`.      * - when `from` is zero, `amount` tokens will be minted for `to`.      * - when `to` is zero, `amount` of ``from``'s tokens will be burned.      * - `from` and `to` are never both zero.      *      * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].      */ [30291,30880]",
      "dest": "comment: /**      * @dev Hook that is called before any transfer of tokens. This includes      * minting and burning.      *      * Calling conditions:      *      * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens      * will be to transferred to `to`.      * - when `from` is zero, `amount` tokens will be minted for `to`.      * - when `to` is zero, `amount` of ``from``'s tokens will be burned.      * - `from` and `to` are never both zero.      *      * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].      */ [30341,30930]"
    },
    {
      "src": "identifier: amount [25404,25410]",
      "dest": "identifier: amount [25454,25460]"
    },
    {
      "src": "(: ( [28452,28453]",
      "dest": "(: ( [28502,28503]"
    },
    {
      "src": "identifier: _max [33953,33957]",
      "dest": "identifier: _max [34003,34007]"
    },
    {
      "src": "expression_statement [37291,37379]",
      "dest": "expression_statement [37341,37429]"
    },
    {
      "src": "return_statement [27040,27052]",
      "dest": "return_statement [27090,27102]"
    },
    {
      "src": "returns: returns [5796,5803]",
      "dest": "returns: returns [5828,5835]"
    },
    {
      "src": "parameter [19643,19660]",
      "dest": "parameter [19675,19692]"
    },
    {
      "src": "visibility [12271,12279]",
      "dest": "visibility [12303,12311]"
    },
    {
      "src": "is: is [32226,32228]",
      "dest": "is: is [32276,32278]"
    },
    {
      "src": "primitive_type [1844,1851]",
      "dest": "primitive_type [1876,1883]"
    },
    {
      "src": "identifier: recipient [27841,27850]",
      "dest": "identifier: recipient [27891,27900]"
    },
    {
      "src": "(: ( [42265,42266]",
      "dest": "(: ( [47066,47067]"
    },
    {
      "src": "type_name [25445,25449]",
      "dest": "type_name [25495,25499]"
    },
    {
      "src": "contract: contract [3869,3877]",
      "dest": "contract: contract [3901,3909]"
    },
    {
      "src": "function: function [18789,18797]",
      "dest": "function: function [18821,18829]"
    },
    {
      "src": "): ) [24494,24495]",
      "dest": "): ) [24544,24545]"
    },
    {
      "src": "[: [ [24525,24526]",
      "dest": "[: [ [24575,24576]"
    },
    {
      "src": ",: , [30990,30991]",
      "dest": ",: , [31040,31041]"
    },
    {
      "src": "function_body [13674,13737]",
      "dest": "function_body [13706,13769]"
    },
    {
      "src": "identifier: amount [33207,33213]",
      "dest": "identifier: amount [33257,33263]"
    },
    {
      "src": "type_cast_expression [29470,29480]",
      "dest": "type_cast_expression [29520,29530]"
    },
    {
      "src": "type_name [18888,18893]",
      "dest": "type_name [18920,18925]"
    },
    {
      "src": "identifier: _allowances [30191,30202]",
      "dest": "identifier: _allowances [30241,30252]"
    },
    {
      "src": "using: using [22541,22546]",
      "dest": "using: using [22575,22580]"
    },
    {
      "src": "call_expression [42871,42993]",
      "dest": "call_expression [47500,47622]"
    },
    {
      "src": "type_name [36432,36436]",
      "dest": "type_name [36482,36486]"
    },
    {
      "src": "primitive_type [1985,1989]",
      "dest": "primitive_type [2017,2021]"
    },
    {
      "src": "type_name [39702,39709]",
      "dest": "type_name [39752,39759]"
    },
    {
      "src": "expression_statement [26174,26258]",
      "dest": "expression_statement [26224,26308]"
    },
    {
      "src": "]: ] [28673,28674]",
      "dest": "]: ] [28723,28724]"
    },
    {
      "src": "pure: pure [42835,42839]",
      "dest": "pure: pure [47464,47468]"
    },
    {
      "src": "function: function [43649,43657]",
      "dest": "function: function [48278,48286]"
    },
    {
      "src": "(: ( [11682,11683]",
      "dest": "(: ( [11714,11715]"
    },
    {
      "src": "(: ( [12248,12249]",
      "dest": "(: ( [12280,12281]"
    },
    {
      "src": "identifier: Approval [30243,30251]",
      "dest": "identifier: Approval [30293,30301]"
    },
    {
      "src": "expression_statement [42239,42321]",
      "dest": "expression_statement [47040,47122]"
    },
    {
      "src": "visibility [5626,5634]",
      "dest": "visibility [5658,5666]"
    },
    {
      "src": "function_definition [22637,22697]",
      "dest": "function_definition [22671,22731]"
    },
    {
      "src": "): ) [31006,31007]",
      "dest": "): ) [31056,31057]"
    },
    {
      "src": "(: ( [20383,20384]",
      "dest": "(: ( [20415,20416]"
    },
    {
      "src": "parameter [31405,31424]",
      "dest": "parameter [31455,31474]"
    },
    {
      "src": "override_specifier [25427,25435]",
      "dest": "override_specifier [25477,25485]"
    },
    {
      "src": "(: ( [26919,26920]",
      "dest": "(: ( [26969,26970]"
    },
    {
      "src": "(: ( [19626,19627]",
      "dest": "(: ( [19658,19659]"
    },
    {
      "src": "string: string [1149,1155]",
      "dest": "string: string [1089,1095]"
    },
    {
      "src": "internal: internal [31008,31016]",
      "dest": "internal: internal [31058,31066]"
    },
    {
      "src": "solidity: solidity [41074,41082]",
      "dest": "solidity: solidity [41127,41135]"
    },
    {
      "src": "identifier: _balances [27892,27901]",
      "dest": "identifier: _balances [27942,27951]"
    },
    {
      "src": "false: false [986,991]",
      "dest": "false: false [926,931]"
    },
    {
      "src": "parameter [10924,10931]",
      "dest": "parameter [10956,10963]"
    },
    {
      "src": "yul_identifier [20432,20442]",
      "dest": "yul_identifier [20464,20474]"
    },
    {
      "src": "(: ( [5623,5624]",
      "dest": "(: ( [5655,5656]"
    },
    {
      "src": "identifier: Context [8699,8706]",
      "dest": "identifier: Context [8731,8738]"
    },
    {
      "src": "state_variable_declaration [36251,36304]",
      "dest": "state_variable_declaration [36301,36354]"
    },
    {
      "src": "identifier: newMin [32753,32759]",
      "dest": "identifier: newMin [32803,32809]"
    },
    {
      "src": "return_type_definition [43688,43711]",
      "dest": "return_type_definition [48317,48340]"
    },
    {
      "src": "\": \" [19463,19464]",
      "dest": "\": \" [19495,19496]"
    },
    {
      "src": "expression_statement [4568,4611]",
      "dest": "expression_statement [4600,4643]"
    },
    {
      "src": "comment: /**      * @dev send all token balance of an arbitrary erc20 token      * in the contract to another address      * @param token token to reclaim      * @param _to address to send eth balance to      */ [31507,31714]",
      "dest": "comment: /**      * @dev send all token balance of an arbitrary erc20 token      * in the contract to another address      * @param token token to reclaim      * @param _to address to send eth balance to      */ [31557,31764]"
    },
    {
      "src": "type_name [5649,5656]",
      "dest": "type_name [5681,5688]"
    },
    {
      "src": "(: ( [31476,31477]",
      "dest": "(: ( [31526,31527]"
    },
    {
      "src": "pragma_directive [402,425]",
      "dest": "pragma_directive [342,365]"
    },
    {
      "src": ",: , [37402,37403]",
      "dest": ",: , [37452,37453]"
    },
    {
      "src": "identifier: transferOwnership [5023,5040]",
      "dest": "identifier: transferOwnership [5055,5072]"
    },
    {
      "src": "primitive_type [11313,11320]",
      "dest": "primitive_type [11345,11352]"
    },
    {
      "src": "string [26988,27027]",
      "dest": "string [27038,27077]"
    },
    {
      "src": "expression_statement [37208,37281]",
      "dest": "expression_statement [37258,37331]"
    },
    {
      "src": "}: } [17053,17054]",
      "dest": "}: } [17085,17086]"
    },
    {
      "src": "variable_declaration [16904,16916]",
      "dest": "variable_declaration [16936,16948]"
    },
    {
      "src": "state_mutability [22849,22853]",
      "dest": "state_mutability [22883,22887]"
    },
    {
      "src": "revert: revert [20520,20526]",
      "dest": "revert: revert [20552,20558]"
    },
    {
      "src": ",: , [40001,40002]",
      "dest": ",: , [40051,40052]"
    },
    {
      "src": "uint256: uint256 [24730,24737]",
      "dest": "uint256: uint256 [24780,24787]"
    },
    {
      "src": "comment: /**      * @dev Returns true if `account` is a contract.      *      * [IMPORTANT]      * ====      * It is unsafe to assume that an address for which this function returns      * false is an externally-owned account (EOA) and not a contract.      *      * Among others, `isContract` will return false for the following      * types of addresses:      *      *  - an externally-owned account      *  - a contract in construction      *  - an address where a contract will be created      *  - an address where a contract lived, but was destroyed      * ====      */ [14516,15097]",
      "dest": "comment: /**      * @dev Returns true if `account` is a contract.      *      * [IMPORTANT]      * ====      * It is unsafe to assume that an address for which this function returns      * false is an externally-owned account (EOA) and not a contract.      *      * Among others, `isContract` will return false for the following      * types of addresses:      *      *  - an externally-owned account      *  - a contract in construction      *  - an address where a contract will be created      *  - an address where a contract lived, but was destroyed      * ====      */ [14548,15129]"
    },
    {
      "src": "identifier: amount [27611,27617]",
      "dest": "identifier: amount [27661,27667]"
    },
    {
      "src": "): ) [19921,19922]",
      "dest": "): ) [19953,19954]"
    },
    {
      "src": "identifier: functionCall [18227,18239]",
      "dest": "identifier: functionCall [18259,18271]"
    },
    {
      "src": "(: ( [28616,28617]",
      "dest": "(: ( [28666,28667]"
    },
    {
      "src": "member_expression [25540,25577]",
      "dest": "member_expression [25590,25627]"
    },
    {
      "src": "{: { [18902,18903]",
      "dest": "{: { [18934,18935]"
    },
    {
      "src": "identifier: amount [29429,29435]",
      "dest": "identifier: amount [29479,29485]"
    },
    {
      "src": "state_variable_declaration [998,1037]",
      "dest": "state_variable_declaration [938,977]"
    },
    {
      "src": "\": \" [25627,25628]",
      "dest": "\": \" [25677,25678]"
    },
    {
      "src": "parameter [28401,28415]",
      "dest": "parameter [28451,28465]"
    },
    {
      "src": "address: address [19627,19634]",
      "dest": "address: address [19659,19666]"
    },
    {
      "src": "call_expression [26183,26195]",
      "dest": "call_expression [26233,26245]"
    },
    {
      "src": "): ) [25628,25629]",
      "dest": "): ) [25678,25679]"
    },
    {
      "src": "address: address [1574,1581]",
      "dest": "address: address [1543,1550]"
    },
    {
      "src": "primitive_type [43697,43703]",
      "dest": "primitive_type [48326,48332]"
    },
    {
      "src": "primitive_type [7224,7228]",
      "dest": "primitive_type [7256,7260]"
    },
    {
      "src": "(: ( [8845,8846]",
      "dest": "(: ( [8877,8878]"
    },
    {
      "src": "primitive_type [39728,39735]",
      "dest": "primitive_type [39778,39785]"
    },
    {
      "src": "number_literal: 20 [42901,42903]",
      "dest": "number_literal: 20 [47530,47532]"
    },
    {
      "src": "call_argument [39207,39235]",
      "dest": "call_argument [39257,39285]"
    },
    {
      "src": "call_expression [10041,10087]",
      "dest": "call_expression [10073,10119]"
    },
    {
      "src": "type_name [43406,43411]",
      "dest": "type_name [48035,48040]"
    },
    {
      "src": "identifier: require [38951,38958]",
      "dest": "identifier: require [39001,39008]"
    },
    {
      "src": "solidity_version:  0.6.10 [3636,3643]",
      "dest": "solidity_version:  0.6.10 [3668,3675]"
    },
    {
      "src": "member_expression [29412,29428]",
      "dest": "member_expression [29462,29478]"
    },
    {
      "src": "(: ( [26182,26183]",
      "dest": "(: ( [26232,26233]"
    },
    {
      "src": "(: ( [18320,18321]",
      "dest": "(: ( [18352,18353]"
    },
    {
      "src": "call_expression [25526,25538]",
      "dest": "call_expression [25576,25588]"
    },
    {
      "src": "): ) [30274,30275]",
      "dest": "): ) [30324,30325]"
    },
    {
      "src": "=: = [28598,28599]",
      "dest": "=: = [28648,28649]"
    },
    {
      "src": "identifier: balance [31807,31814]",
      "dest": "identifier: balance [31857,31864]"
    },
    {
      "src": ",: , [29468,29469]",
      "dest": ",: , [29518,29519]"
    },
    {
      "src": "override: override [24761,24769]",
      "dest": "override: override [24811,24819]"
    },
    {
      "src": "identifier: functionCallWithValue [18920,18941]",
      "dest": "identifier: functionCallWithValue [18952,18973]"
    },
    {
      "src": "): ) [12925,12926]",
      "dest": "): ) [12957,12958]"
    },
    {
      "src": "{: { [42007,42008]",
      "dest": "{: { [46808,46809]"
    },
    {
      "src": "uint256: uint256 [18855,18862]",
      "dest": "uint256: uint256 [18887,18894]"
    },
    {
      "src": "contract: contract [36158,36166]",
      "dest": "contract: contract [36208,36216]"
    },
    {
      "src": "primitive_type [27568,27575]",
      "dest": "primitive_type [27618,27625]"
    },
    {
      "src": "string [42969,42992]",
      "dest": "string [47598,47621]"
    },
    {
      "src": "binary_expression [39873,39911]",
      "dest": "binary_expression [39923,39961]"
    },
    {
      "src": "event: event [32725,32730]",
      "dest": "event: event [32775,32780]"
    },
    {
      "src": "): ) [7619,7620]",
      "dest": "): ) [7651,7652]"
    },
    {
      "src": "\": \" [39810,39811]",
      "dest": "\": \" [39860,39861]"
    },
    {
      "src": "primitive_type [19627,19634]",
      "dest": "primitive_type [19659,19666]"
    },
    {
      "src": "return_type_definition [40951,40965]",
      "dest": "return_type_definition [41004,41018]"
    },
    {
      "src": "identifier: errorMessage [20527,20539]",
      "dest": "identifier: errorMessage [20559,20571]"
    },
    {
      "src": "=: = [1068,1069]",
      "dest": "=: = [1008,1009]"
    },
    {
      "src": "else: else [39310,39314]",
      "dest": "else: else [39360,39364]"
    },
    {
      "src": "function_definition [13607,13737]",
      "dest": "function_definition [13639,13769]"
    },
    {
      "src": "virtual: virtual [34460,34467]",
      "dest": "virtual: virtual [34510,34517]"
    },
    {
      "src": "type_name [10984,10991]",
      "dest": "type_name [11016,11023]"
    },
    {
      "src": "payable: payable [8775,8782]",
      "dest": "payable: payable [8807,8814]"
    },
    {
      "src": "is: is [31230,31232]",
      "dest": "is: is [31280,31282]"
    },
    {
      "src": "string [12331,12359]",
      "dest": "string [12363,12391]"
    },
    {
      "src": "call_expression [12970,12998]",
      "dest": "call_expression [13002,13030]"
    },
    {
      "src": "function: function [33856,33864]",
      "dest": "function: function [33906,33914]"
    },
    {
      "src": "memory: memory [12906,12912]",
      "dest": "memory: memory [12938,12944]"
    },
    {
      "src": "state_mutability [23551,23555]",
      "dest": "state_mutability [23585,23589]"
    },
    {
      "src": "expression_statement [39330,39373]",
      "dest": "expression_statement [39380,39423]"
    },
    {
      "src": "returns: returns [14299,14306]",
      "dest": "returns: returns [14331,14338]"
    },
    {
      "src": "function_definition [29079,29497]",
      "dest": "function_definition [29129,29547]"
    },
    {
      "src": "address: address [22559,22566]",
      "dest": "address: address [22593,22600]"
    },
    {
      "src": "parameter [5805,5812]",
      "dest": "parameter [5837,5844]"
    },
    {
      "src": "string [17947,17979]",
      "dest": "string [17979,18011]"
    },
    {
      "src": "bytes: bytes [18836,18841]",
      "dest": "bytes: bytes [18868,18873]"
    },
    {
      "src": "assignment_expression [27974,28029]",
      "dest": "assignment_expression [28024,28079]"
    },
    {
      "src": ",: , [24826,24827]",
      "dest": ",: , [24876,24877]"
    },
    {
      "src": "identifier: require [4778,4785]",
      "dest": "identifier: require [4810,4817]"
    },
    {
      "src": "identifier: msg [4786,4789]",
      "dest": "identifier: msg [4818,4821]"
    },
    {
      "src": "<=: <= [10954,10956]",
      "dest": "<=: <= [10986,10988]"
    },
    {
      "src": "primitive_type [43591,43597]",
      "dest": "primitive_type [48220,48226]"
    },
    {
      "src": "}: } [40406,40407]",
      "dest": "}: } [40456,40457]"
    },
    {
      "src": "string_literal [34515,34562]",
      "dest": "string_literal [34565,34612]"
    },
    {
      "src": "identifier: canBurn [40296,40303]",
      "dest": "identifier: canBurn [40346,40353]"
    },
    {
      "src": "expression_statement [10944,10974]",
      "dest": "expression_statement [10976,11006]"
    },
    {
      "src": "number_literal: 0 [12982,12983]",
      "dest": "number_literal: 0 [13014,13015]"
    },
    {
      "src": "call_argument [26245,26255]",
      "dest": "call_argument [26295,26305]"
    },
    {
      "src": "return: return [13685,13691]",
      "dest": "return: return [13717,13723]"
    },
    {
      "src": "(: ( [8733,8734]",
      "dest": "(: ( [8765,8766]"
    },
    {
      "src": "type_name [12899,12905]",
      "dest": "type_name [12931,12937]"
    },
    {
      "src": ">=: >= [34503,34505]",
      "dest": ">=: >= [34553,34555]"
    },
    {
      "src": "primitive_type [22527,22534]",
      "dest": "primitive_type [22561,22568]"
    },
    {
      "src": "address: address [32454,32461]",
      "dest": "address: address [32504,32511]"
    },
    {
      "src": "bool: bool [827,831]",
      "dest": "bool: bool [767,771]"
    },
    {
      "src": "primitive_type [17890,17895]",
      "dest": "primitive_type [17922,17927]"
    },
    {
      "src": "string: string [19352,19358]",
      "dest": "string: string [19384,19390]"
    },
    {
      "src": "type_name [26883,26887]",
      "dest": "type_name [26933,26937]"
    },
    {
      "src": "address: address [29094,29101]",
      "dest": "address: address [29144,29151]"
    },
    {
      "src": "mapping: mapping [1496,1503]",
      "dest": "mapping: mapping [1436,1443]"
    },
    {
      "src": "): ) [25449,25450]",
      "dest": "): ) [25499,25500]"
    },
    {
      "src": "type_cast_expression [31469,31482]",
      "dest": "type_cast_expression [31519,31532]"
    },
    {
      "src": "primitive_type [827,831]",
      "dest": "primitive_type [767,771]"
    },
    {
      "src": "external: external [33215,33223]",
      "dest": "external: external [33265,33273]"
    },
    {
      "src": "identifier: pendingOwner [5364,5376]",
      "dest": "identifier: pendingOwner [5396,5408]"
    },
    {
      "src": "is: is [36180,36182]",
      "dest": "is: is [36230,36232]"
    },
    {
      "src": "return_statement [43514,43530]",
      "dest": "return_statement [48143,48159]"
    },
    {
      "src": "identifier: spender [26825,26832]",
      "dest": "identifier: spender [26875,26882]"
    },
    {
      "src": "pure: pure [10443,10447]",
      "dest": "pure: pure [10475,10479]"
    },
    {
      "src": "binary_expression [10025,10030]",
      "dest": "binary_expression [10057,10062]"
    },
    {
      "src": "returns: returns [24770,24777]",
      "dest": "returns: returns [24820,24827]"
    },
    {
      "src": "emit_statement [4391,4436]",
      "dest": "emit_statement [4423,4468]"
    },
    {
      "src": "state_variable_declaration [43285,43314]",
      "dest": "state_variable_declaration [47914,47943]"
    },
    {
      "src": ",: , [29109,29110]",
      "dest": ",: , [29159,29160]"
    },
    {
      "src": "call_expression [39172,39236]",
      "dest": "call_expression [39222,39286]"
    },
    {
      "src": "call_argument [42450,42459]",
      "dest": "call_argument [47251,47260]"
    },
    {
      "src": "variable_declaration_statement [13009,13027]",
      "dest": "variable_declaration_statement [13041,13059]"
    },
    {
      "src": "identifier: c [13017,13018]",
      "dest": "identifier: c [13049,13050]"
    },
    {
      "src": "identifier: amount [30268,30274]",
      "dest": "identifier: amount [30318,30324]"
    },
    {
      "src": "(: ( [43696,43697]",
      "dest": "(: ( [48325,48326]"
    },
    {
      "src": "type_name [1555,1582]",
      "dest": "type_name [1524,1551]"
    },
    {
      "src": "call_expression [17920,17980]",
      "dest": "call_expression [17952,18012]"
    },
    {
      "src": "(: ( [30136,30137]",
      "dest": "(: ( [30186,30187]"
    },
    {
      "src": "comment: /**  * @title TrueCurrency  * @dev TrueCurrency is an ERC20 with blacklist & redemption addresses  *  * TrueCurrency is a compliant stablecoin with blacklist and redemption  * addresses. Only the owner can blacklist accounts. Redemption addresses  * are assigned automatically to the first 0x100000 addresses. Sending  * tokens to the redemption address will trigger a burn operation. Only  * the owner can mint or blacklist accounts.  *  * This contract is owned by the TokenController, which manages token  * minting & admin functionality. See TokenController.sol  *  * See also: BurnableTokenWithBounds.sol  *  * ~~~~ Features ~~~~  *  * Redemption Addresses  * - The first 0x100000 addresses are redemption addresses  * - Tokens sent to redemption addresses are burned  * - Redemptions are tracked off-chain  * - Cannot mint tokens to redemption addresses  *  * Blacklist  * - Owner can blacklist accounts in accordance with local regulatory bodies  * - Only a court order will merit a blacklist; blacklisting is extremely rare  *  * Burn Bounds & CanBurn  * - Owner can set min & max burn amounts  * - Only accounts flagged in canBurn are allowed to burn tokens  * - canBurn prevents tokens from being sent to the incorrect address  *  * Reclaimer Token  * - ERC20 Tokens and Ether sent to this contract can be reclaimed by the owner  */ [34771,36147]",
      "dest": "comment: /**  * @title TrueCurrency  * @dev TrueCurrency is an ERC20 with blacklist & redemption addresses  *  * TrueCurrency is a compliant stablecoin with blacklist and redemption  * addresses. Only the owner can blacklist accounts. Redemption addresses  * are assigned automatically to the first 0x100000 addresses. Sending  * tokens to the redemption address will trigger a burn operation. Only  * the owner can mint or blacklist accounts.  *  * This contract is owned by the TokenController, which manages token  * minting & admin functionality. See TokenController.sol  *  * See also: BurnableTokenWithBounds.sol  *  * ~~~~ Features ~~~~  *  * Redemption Addresses  * - The first 0x100000 addresses are redemption addresses  * - Tokens sent to redemption addresses are burned  * - Redemptions are tracked off-chain  * - Cannot mint tokens to redemption addresses  *  * Blacklist  * - Owner can blacklist accounts in accordance with local regulatory bodies  * - Only a court order will merit a blacklist; blacklisting is extremely rare  *  * Burn Bounds & CanBurn  * - Owner can set min & max burn amounts  * - Only accounts flagged in canBurn are allowed to burn tokens  * - canBurn prevents tokens from being sent to the incorrect address  *  * Reclaimer Token  * - ERC20 Tokens and Ether sent to this contract can be reclaimed by the owner  */ [34821,36197]"
    },
    {
      "src": "primitive_type [30048,30055]",
      "dest": "primitive_type [30098,30105]"
    },
    {
      "src": "memory: memory [18262,18268]",
      "dest": "memory: memory [18294,18300]"
    },
    {
      "src": "primitive_type [38839,38846]",
      "dest": "primitive_type [38889,38896]"
    },
    {
      "src": "call_argument [10057,10086]",
      "dest": "call_argument [10089,10118]"
    },
    {
      "src": "address: address [17837,17844]",
      "dest": "address: address [17869,17876]"
    },
    {
      "src": "): ) [31845,31846]",
      "dest": "): ) [31895,31896]"
    },
    {
      "src": "member_expression [40371,40382]",
      "dest": "member_expression [40421,40432]"
    },
    {
      "src": "primitive_type [31405,31420]",
      "dest": "primitive_type [31455,31470]"
    },
    {
      "src": "member_expression [26206,26244]",
      "dest": "member_expression [26256,26294]"
    },
    {
      "src": "(: ( [23685,23686]",
      "dest": "(: ( [23719,23720]"
    },
    {
      "src": ",: , [7877,7878]",
      "dest": ",: , [7909,7910]"
    },
    {
      "src": ".: . [39213,39214]",
      "dest": ".: . [39263,39264]"
    },
    {
      "src": "\": \" [37931,37932]",
      "dest": "\": \" [37981,37982]"
    },
    {
      "src": "address: address [39702,39709]",
      "dest": "address: address [39752,39759]"
    },
    {
      "src": "uint256: uint256 [6080,6087]",
      "dest": "uint256: uint256 [6112,6119]"
    },
    {
      "src": "call_argument [38011,38018]",
      "dest": "call_argument [38061,38068]"
    },
    {
      "src": "primitive_type [7173,7180]",
      "dest": "primitive_type [7205,7212]"
    },
    {
      "src": "=>: => [1642,1644]",
      "dest": "=>: => [1611,1613]"
    },
    {
      "src": "identifier: add [26241,26244]",
      "dest": "identifier: add [26291,26294]"
    },
    {
      "src": "function_definition [42747,43001]",
      "dest": "function_definition [47376,47630]"
    },
    {
      "src": "call_argument [24805,24817]",
      "dest": "call_argument [24855,24867]"
    },
    {
      "src": "uint256: uint256 [8122,8129]",
      "dest": "uint256: uint256 [8154,8161]"
    },
    {
      "src": "call_argument [30259,30266]",
      "dest": "call_argument [30309,30316]"
    },
    {
      "src": "identifier: _transfer [38819,38828]",
      "dest": "identifier: _transfer [38869,38878]"
    },
    {
      "src": "type_name [6114,6118]",
      "dest": "type_name [6146,6150]"
    },
    {
      "src": "identifier: data [19331,19335]",
      "dest": "identifier: data [19363,19367]"
    },
    {
      "src": "): ) [10000,10001]",
      "dest": "): ) [10032,10033]"
    },
    {
      "src": "function_definition [26790,27059]",
      "dest": "function_definition [26840,27109]"
    },
    {
      "src": "string [37867,37932]",
      "dest": "string [37917,37982]"
    },
    {
      "src": "parameter [19352,19378]",
      "dest": "parameter [19384,19410]"
    },
    {
      "src": "): ) [6453,6454]",
      "dest": "): ) [6485,6486]"
    },
    {
      "src": "pure: pure [40946,40950]",
      "dest": "pure: pure [40999,41003]"
    },
    {
      "src": "identifier: amount [31000,31006]",
      "dest": "identifier: amount [31050,31056]"
    },
    {
      "src": "function_body [12959,13142]",
      "dest": "function_body [12991,13174]"
    },
    {
      "src": "identifier: balance [31483,31490]",
      "dest": "identifier: balance [31533,31540]"
    },
    {
      "src": "string [39067,39107]",
      "dest": "string [39117,39157]"
    },
    {
      "src": "parameter [30966,30978]",
      "dest": "parameter [31016,31028]"
    },
    {
      "src": "identifier: rounding [43464,43472]",
      "dest": "identifier: rounding [48093,48101]"
    },
    {
      "src": "true: true [27047,27051]",
      "dest": "true: true [27097,27101]"
    },
    {
      "src": "identifier: msg [8802,8805]",
      "dest": "identifier: msg [8834,8837]"
    },
    {
      "src": ",: , [42539,42540]",
      "dest": ",: , [47340,47341]"
    },
    {
      "src": "call_argument [40992,40999]",
      "dest": "call_argument [41045,41052]"
    },
    {
      "src": "uint256: uint256 [12294,12301]",
      "dest": "uint256: uint256 [12326,12333]"
    },
    {
      "src": "identifier: account [37829,37836]",
      "dest": "identifier: account [37879,37886]"
    },
    {
      "src": "function_body [43712,43744]",
      "dest": "function_body [48341,48373]"
    },
    {
      "src": "view: view [5791,5795]",
      "dest": "view: view [5823,5827]"
    },
    {
      "src": "identifier: recipient [42450,42459]",
      "dest": "identifier: recipient [47251,47260]"
    },
    {
      "src": "unary_expression [39787,39801]",
      "dest": "unary_expression [39837,39851]"
    },
    {
      "src": "(: ( [32744,32745]",
      "dest": "(: ( [32794,32795]"
    },
    {
      "src": "identifier: weiValue [19670,19678]",
      "dest": "identifier: weiValue [19702,19710]"
    },
    {
      "src": "comment: /**      * @dev Returns the amount of tokens owned by `account`.      */ [5666,5740]",
      "dest": "comment: /**      * @dev Returns the amount of tokens owned by `account`.      */ [5698,5772]"
    },
    {
      "src": "expression_statement [40288,40361]",
      "dest": "expression_statement [40338,40411]"
    },
    {
      "src": "parameter [24178,24195]",
      "dest": "parameter [24228,24245]"
    },
    {
      "src": "call_argument [18942,18948]",
      "dest": "call_argument [18974,18980]"
    },
    {
      "src": "call_expression [34488,34563]",
      "dest": "call_expression [34538,34613]"
    },
    {
      "src": "string_literal [4597,4609]",
      "dest": "string_literal [4629,4641]"
    },
    {
      "src": "=>: => [1623,1625]",
      "dest": "=>: => [1592,1594]"
    },
    {
      "src": "function: function [10838,10846]",
      "dest": "function: function [10870,10878]"
    },
    {
      "src": "expression_statement [34574,34652]",
      "dest": "expression_statement [34624,34702]"
    },
    {
      "src": "return: return [26268,26274]",
      "dest": "return: return [26318,26324]"
    },
    {
      "src": "): ) [27027,27028]",
      "dest": "): ) [27077,27078]"
    },
    {
      "src": "return_type_definition [18879,18901]",
      "dest": "return_type_definition [18911,18933]"
    },
    {
      "src": "type_name [18240,18247]",
      "dest": "type_name [18272,18279]"
    },
    {
      "src": "(: ( [4341,4342]",
      "dest": "(: ( [4373,4374]"
    },
    {
      "src": "identifier: sender [42533,42539]",
      "dest": "identifier: sender [47334,47340]"
    },
    {
      "src": "type_name [40960,40964]",
      "dest": "type_name [41013,41017]"
    },
    {
      "src": "(: ( [24283,24284]",
      "dest": "(: ( [24333,24334]"
    },
    {
      "src": "assembly_statement [20323,20480]",
      "dest": "assembly_statement [20355,20512]"
    },
    {
      "src": "number_literal: 2 [43346,43347]",
      "dest": "number_literal: 2 [47975,47976]"
    },
    {
      "src": "): ) [19578,19579]",
      "dest": "): ) [19610,19611]"
    },
    {
      "src": ",: , [14342,14343]",
      "dest": ",: , [14374,14375]"
    },
    {
      "src": ",: , [37439,37440]",
      "dest": ",: , [37489,37490]"
    },
    {
      "src": "call_expression [24805,24817]",
      "dest": "call_expression [24855,24867]"
    },
    {
      "src": "function_body [24496,24549]",
      "dest": "function_body [24546,24599]"
    },
    {
      "src": "primitive_type [18256,18261]",
      "dest": "primitive_type [18288,18293]"
    },
    {
      "src": "identifier: spender [7181,7188]",
      "dest": "identifier: spender [7213,7220]"
    },
    {
      "src": "address: address [26096,26103]",
      "dest": "address: address [26146,26153]"
    },
    {
      "src": "identifier: amount [28409,28415]",
      "dest": "identifier: amount [28459,28465]"
    },
    {
      "src": "assignment_expression [34032,34046]",
      "dest": "assignment_expression [34082,34096]"
    },
    {
      "src": "address: address [6438,6445]",
      "dest": "address: address [6470,6477]"
    },
    {
      "src": "parameter [18240,18254]",
      "dest": "parameter [18272,18286]"
    },
    {
      "src": ",: , [16778,16779]",
      "dest": ",: , [16810,16811]"
    },
    {
      "src": "identifier: _burn [29088,29093]",
      "dest": "identifier: _burn [29138,29143]"
    },
    {
      "src": "primitive_type [24178,24185]",
      "dest": "primitive_type [24228,24235]"
    },
    {
      "src": "binary_expression [34582,34599]",
      "dest": "binary_expression [34632,34649]"
    },
    {
      "src": "parameter [10873,10899]",
      "dest": "parameter [10905,10931]"
    },
    {
      "src": "identifier: owner [779,784]",
      "dest": "identifier: owner [719,724]"
    },
    {
      "src": "assignment_expression [37944,37983]",
      "dest": "assignment_expression [37994,38033]"
    },
    {
      "src": "uint256: uint256 [1045,1052]",
      "dest": "uint256: uint256 [985,992]"
    },
    {
      "src": "parameter [7586,7603]",
      "dest": "parameter [7618,7635]"
    },
    {
      "src": "comment: /**      * @dev emitted when ownership is transferred      * @param previousOwner previous owner of this contract      * @param newOwner new owner of this contract      */ [3918,4093]",
      "dest": "comment: /**      * @dev emitted when ownership is transferred      * @param previousOwner previous owner of this contract      * @param newOwner new owner of this contract      */ [3950,4125]"
    },
    {
      "src": "type_name [6061,6068]",
      "dest": "type_name [6093,6100]"
    },
    {
      "src": "primitive_type [23718,23725]",
      "dest": "primitive_type [23760,23767]"
    },
    {
      "src": "parameter [33199,33213]",
      "dest": "parameter [33249,33263]"
    },
    {
      "src": "identifier: account [40383,40390]",
      "dest": "identifier: account [40433,40440]"
    },
    {
      "src": "address: address [4157,4164]",
      "dest": "address: address [4189,4196]"
    },
    {
      "src": "type_name [39678,39685]",
      "dest": "type_name [39728,39735]"
    },
    {
      "src": "event_definition [32443,32493]",
      "dest": "event_definition [32493,32543]"
    },
    {
      "src": "identifier: msg [33241,33244]",
      "dest": "identifier: msg [33291,33294]"
    },
    {
      "src": "comment: // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned [15270,15355]",
      "dest": "comment: // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned [15302,15387]"
    },
    {
      "src": ",: , [25394,25395]",
      "dest": ",: , [25444,25445]"
    },
    {
      "src": "primitive_type [12260,12267]",
      "dest": "primitive_type [12292,12299]"
    },
    {
      "src": "uint256: uint256 [12888,12895]",
      "dest": "uint256: uint256 [12920,12927]"
    },
    {
      "src": "memory: memory [43598,43604]",
      "dest": "memory: memory [48227,48233]"
    },
    {
      "src": "call_expression [16968,17046]",
      "dest": "call_expression [17000,17078]"
    },
    {
      "src": "external: external [7206,7214]",
      "dest": "external: external [7238,7246]"
    },
    {
      "src": "identifier: spender [39994,40001]",
      "dest": "identifier: spender [40044,40051]"
    },
    {
      "src": "pragma_directive [5404,5427]",
      "dest": "pragma_directive [5436,5459]"
    },
    {
      "src": "identifier: allowances_Deprecated [894,915]",
      "dest": "identifier: allowances_Deprecated [834,855]"
    },
    {
      "src": ",: , [40241,40242]",
      "dest": ",: , [40291,40292]"
    },
    {
      "src": "internal: internal [15140,15148]",
      "dest": "internal: internal [15172,15180]"
    },
    {
      "src": "contract_body [31239,31897]",
      "dest": "contract_body [31289,31947]"
    },
    {
      "src": "payable: payable [16684,16691]",
      "dest": "payable: payable [16716,16723]"
    },
    {
      "src": "): ) [43374,43375]",
      "dest": "): ) [48003,48004]"
    },
    {
      "src": "}: } [39383,39384]",
      "dest": "}: } [39433,39434]"
    },
    {
      "src": "call_argument [26971,26986]",
      "dest": "call_argument [27021,27036]"
    },
    {
      "src": "returns: returns [23556,23563]",
      "dest": "returns: returns [23590,23597]"
    },
    {
      "src": "identifier: _min [34076,34080]",
      "dest": "identifier: _min [34126,34130]"
    },
    {
      "src": "identifier: sub [10484,10487]",
      "dest": "identifier: sub [10516,10519]"
    },
    {
      "src": "identifier: amount [34582,34588]",
      "dest": "identifier: amount [34632,34638]"
    },
    {
      "src": ".: . [26240,26241]",
      "dest": ".: . [26290,26291]"
    },
    {
      "src": "function: function [38294,38302]",
      "dest": "function: function [38344,38352]"
    },
    {
      "src": "comment: /**      * @dev See {IERC20-totalSupply}.      */ [23608,23659]",
      "dest": "comment: /**      * @dev See {IERC20-totalSupply}.      */ [23642,23693]"
    },
    {
      "src": "identifier: burn [33194,33198]",
      "dest": "identifier: burn [33244,33248]"
    },
    {
      "src": "{: { [40277,40278]",
      "dest": "{: { [40327,40328]"
    },
    {
      "src": "primitive_type [1419,1426]",
      "dest": "primitive_type [1359,1366]"
    },
    {
      "src": "=: = [984,985]",
      "dest": "=: = [924,925]"
    },
    {
      "src": "number_literal: 0 [14341,14342]",
      "dest": "number_literal: 0 [14373,14374]"
    },
    {
      "src": "{: { [31239,31240]",
      "dest": "{: { [31289,31290]"
    },
    {
      "src": "): ) [43665,43666]",
      "dest": "): ) [48294,48295]"
    },
    {
      "src": "=>: => [1852,1854]",
      "dest": "=>: => [1884,1886]"
    },
    {
      "src": "call_expression [39330,39372]",
      "dest": "call_expression [39380,39422]"
    },
    {
      "src": "uint256: uint256 [14308,14315]",
      "dest": "uint256: uint256 [14340,14347]"
    },
    {
      "src": "identifier: msg [9045,9048]",
      "dest": "identifier: msg [9077,9080]"
    },
    {
      "src": "identifier: a [10054,10055]",
      "dest": "identifier: a [10086,10087]"
    },
    {
      "src": "identifier: balance [19445,19452]",
      "dest": "identifier: balance [19477,19484]"
    },
    {
      "src": "return_type_definition [24237,24251]",
      "dest": "return_type_definition [24287,24301]"
    },
    {
      "src": "call_argument [26932,27028]",
      "dest": "call_argument [26982,27078]"
    },
    {
      "src": "call_argument [42915,42929]",
      "dest": "call_argument [47544,47558]"
    },
    {
      "src": "{: { [16936,16937]",
      "dest": "{: { [16968,16969]"
    },
    {
      "src": "parameter [5041,5057]",
      "dest": "parameter [5073,5089]"
    },
    {
      "src": "{: { [23572,23573]",
      "dest": "{: { [23606,23607]"
    },
    {
      "src": ",: , [10958,10959]",
      "dest": ",: , [10990,10991]"
    },
    {
      "src": "(: ( [30965,30966]",
      "dest": "(: ( [31015,31016]"
    },
    {
      "src": "type_name [10013,10020]",
      "dest": "type_name [10045,10052]"
    },
    {
      "src": "primitive_type [38331,38335]",
      "dest": "primitive_type [38381,38385]"
    },
    {
      "src": "user_defined_type [22485,22492]",
      "dest": "user_defined_type [22519,22526]"
    },
    {
      "src": ",: , [39691,39692]",
      "dest": ",: , [39741,39742]"
    },
    {
      "src": "state_variable_declaration [1686,1737]",
      "dest": "state_variable_declaration [1655,1706]"
    },
    {
      "src": "parameter [7570,7584]",
      "dest": "parameter [7602,7616]"
    },
    {
      "src": "comment: /**      * @dev Creates `amount` tokens and assigns them to `account`, increasing      * the total supply.      * @param account address to mint tokens for      * @param amount amount of tokens to be minted      *      * Emits a {Mint} event      *      * Requirements      *      * - `account` cannot be the zero address.      * - `account` cannot be blacklisted.      * - `account` cannot be a redemption address.      */ [36689,37125]",
      "dest": "comment: /**      * @dev Creates `amount` tokens and assigns them to `account`, increasing      * the total supply.      * @param account address to mint tokens for      * @param amount amount of tokens to be minted      *      * Emits a {Mint} event      *      * Requirements      *      * - `account` cannot be the zero address.      * - `account` cannot be blacklisted.      * - `account` cannot be a redemption address.      */ [36739,37175]"
    },
    {
      "src": "event: event [4099,4104]",
      "dest": "event: event [4131,4136]"
    },
    {
      "src": "uint256: uint256 [13631,13638]",
      "dest": "uint256: uint256 [13663,13670]"
    },
    {
      "src": "state_variable_declaration [852,880]",
      "dest": "state_variable_declaration [792,820]"
    },
    {
      "src": "type_name [7859,7866]",
      "dest": "type_name [7891,7898]"
    },
    {
      "src": "type_name [1607,1654]",
      "dest": "type_name [1576,1623]"
    },
    {
      "src": "type_name [1045,1052]",
      "dest": "type_name [985,992]"
    },
    {
      "src": "): ) [7228,7229]",
      "dest": "): ) [7260,7261]"
    },
    {
      "src": "string: string [22863,22869]",
      "dest": "string: string [22897,22903]"
    },
    {
      "src": "external: external [38346,38354]",
      "dest": "external: external [38396,38404]"
    },
    {
      "src": "return_statement [11615,11624]",
      "dest": "return_statement [11647,11656]"
    },
    {
      "src": "identifier: amount [39365,39371]",
      "dest": "identifier: amount [39415,39421]"
    },
    {
      "src": "function: function [6043,6051]",
      "dest": "function: function [6075,6083]"
    },
    {
      "src": "}: } [43743,43744]",
      "dest": "}: } [48372,48373]"
    },
    {
      "src": "pure: pure [11333,11337]",
      "dest": "pure: pure [11365,11369]"
    },
    {
      "src": "primitive_type [33893,33900]",
      "dest": "primitive_type [33943,33950]"
    },
    {
      "src": "identifier: ReclaimerToken [32229,32243]",
      "dest": "identifier: ReclaimerToken [32279,32293]"
    },
    {
      "src": "call_expression [26218,26230]",
      "dest": "call_expression [26268,26280]"
    },
    {
      "src": "uint256: uint256 [10862,10869]",
      "dest": "uint256: uint256 [10894,10901]"
    },
    {
      "src": "string [28476,28509]",
      "dest": "string [28526,28559]"
    },
    {
      "src": "parameter [18888,18900]",
      "dest": "parameter [18920,18932]"
    },
    {
      "src": "comment: /**      * @dev Allows the current owner to set the pendingOwner address.      * @param newOwner The address to transfer ownership to.      */ [4863,5008]",
      "dest": "comment: /**      * @dev Allows the current owner to set the pendingOwner address.      * @param newOwner The address to transfer ownership to.      */ [4895,5040]"
    },
    {
      "src": "identifier: amount [25491,25497]",
      "dest": "identifier: amount [25541,25547]"
    },
    {
      "src": "{: { [38940,38941]",
      "dest": "{: { [38990,38991]"
    },
    {
      "src": "identifier: RewardAllocation [1752,1768]",
      "dest": "identifier: RewardAllocation [1784,1800]"
    },
    {
      "src": "identifier: account [40234,40241]",
      "dest": "identifier: account [40284,40291]"
    },
    {
      "src": "): ) [40398,40399]",
      "dest": "): ) [40448,40449]"
    },
    {
      "src": "call_argument [28732,28738]",
      "dest": "call_argument [28782,28788]"
    },
    {
      "src": "type_name [38839,38846]",
      "dest": "type_name [38889,38896]"
    },
    {
      "src": "uint256: uint256 [26834,26841]",
      "dest": "uint256: uint256 [26884,26891]"
    },
    {
      "src": "inheritance_specifier [41994,42006]",
      "dest": "inheritance_specifier [41827,41839]"
    },
    {
      "src": "{: { [5265,5266]",
      "dest": "{: { [5297,5298]"
    },
    {
      "src": "primitive_type [43496,43501]",
      "dest": "primitive_type [48125,48130]"
    },
    {
      "src": "(: ( [14335,14336]",
      "dest": "(: ( [14367,14368]"
    },
    {
      "src": "call_argument [29429,29435]",
      "dest": "call_argument [29479,29485]"
    },
    {
      "src": "type_name [1515,1522]",
      "dest": "type_name [1455,1462]"
    },
    {
      "src": "function: function [11289,11297]",
      "dest": "function: function [11321,11329]"
    },
    {
      "src": "string_literal [37241,37279]",
      "dest": "string_literal [37291,37329]"
    },
    {
      "src": "unary_expression [37216,37230]",
      "dest": "unary_expression [37266,37280]"
    },
    {
      "src": "identifier: symbol_Deprecated [1185,1202]",
      "dest": "identifier: symbol_Deprecated [1125,1142]"
    },
    {
      "src": "type_name [19337,19344]",
      "dest": "type_name [19369,19376]"
    },
    {
      "src": ",: , [33891,33892]",
      "dest": ",: , [33941,33942]"
    },
    {
      "src": "comment: /**  * @title ReclaimerToken  * @dev ERC20 token which allows owner to reclaim ERC20 tokens  * or ether sent to this contract  */ [31062,31195]",
      "dest": "comment: /**  * @title ReclaimerToken  * @dev ERC20 token which allows owner to reclaim ERC20 tokens  * or ether sent to this contract  */ [31112,31245]"
    },
    {
      "src": "): ) [22832,22833]",
      "dest": "): ) [22866,22867]"
    },
    {
      "src": "\": \" [27797,27798]",
      "dest": "\": \" [27847,27848]"
    },
    {
      "src": "identifier: b [13025,13026]",
      "dest": "identifier: b [13057,13058]"
    },
    {
      "src": "}: } [10534,10535]",
      "dest": "}: } [10566,10567]"
    },
    {
      "src": "indexed: indexed [32462,32469]",
      "dest": "indexed: indexed [32512,32519]"
    },
    {
      "src": "binary_expression [27736,27759]",
      "dest": "binary_expression [27786,27809]"
    },
    {
      "src": "]: ] [27993,27994]",
      "dest": "]: ] [28043,28044]"
    },
    {
      "src": "\": \" [43632,43633]",
      "dest": "\": \" [48261,48262]"
    },
    {
      "src": ",: , [39808,39809]",
      "dest": ",: , [39858,39859]"
    },
    {
      "src": "return: return [18913,18919]",
      "dest": "return: return [18945,18951]"
    },
    {
      "src": "}: } [20028,20029]",
      "dest": "}: } [20060,20061]"
    },
    {
      "src": "comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [10124,10393]",
      "dest": "comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [10156,10425]"
    },
    {
      "src": "call_expression [37291,37378]",
      "dest": "call_expression [37341,37428]"
    },
    {
      "src": "parameter [33893,33905]",
      "dest": "parameter [33943,33955]"
    },
    {
      "src": "member_expression [34664,34675]",
      "dest": "member_expression [34714,34725]"
    },
    {
      "src": "contract_body [42007,43004]",
      "dest": "contract_body [46808,47633]"
    },
    {
      "src": "pragma: pragma [34744,34750]",
      "dest": "pragma: pragma [34794,34800]"
    },
    {
      "src": "parameter [43496,43501]",
      "dest": "parameter [48125,48130]"
    },
    {
      "src": "!=: != [14338,14340]",
      "dest": "!=: != [14370,14372]"
    },
    {
      "src": ",: , [19335,19336]",
      "dest": ",: , [19367,19368]"
    },
    {
      "src": "uint256: uint256 [10423,10430]",
      "dest": "uint256: uint256 [10455,10462]"
    },
    {
      "src": "modifier_invocation [33916,33925]",
      "dest": "modifier_invocation [33966,33975]"
    },
    {
      "src": "{: { [31025,31026]",
      "dest": "{: { [31075,31076]"
    },
    {
      "src": "[: [ [27983,27984]",
      "dest": "[: [ [28033,28034]"
    },
    {
      "src": "\": \" [34515,34516]",
      "dest": "\": \" [34565,34566]"
    },
    {
      "src": "identifier: burnMin [34506,34513]",
      "dest": "identifier: burnMin [34556,34563]"
    },
    {
      "src": "public: public [5241,5247]",
      "dest": "public: public [5273,5279]"
    },
    {
      "src": "binary_expression [33945,33957]",
      "dest": "binary_expression [33995,34007]"
    },
    {
      "src": "type_name [1252,1259]",
      "dest": "type_name [1192,1199]"
    },
    {
      "src": "): ) [37447,37448]",
      "dest": "): ) [37497,37498]"
    },
    {
      "src": "identifier: target [17845,17851]",
      "dest": "identifier: target [17877,17883]"
    },
    {
      "src": "): ) [29221,29222]",
      "dest": "): ) [29271,29272]"
    },
    {
      "src": "true [24323,24327]",
      "dest": "true [24373,24377]"
    },
    {
      "src": "identifier: SetBurnBounds [32731,32744]",
      "dest": "identifier: SetBurnBounds [32781,32794]"
    },
    {
      "src": "function_body [15169,15722]",
      "dest": "function_body [15201,15754]"
    },
    {
      "src": "(: ( [26193,26194]",
      "dest": "(: ( [26243,26244]"
    },
    {
      "src": "identifier: amount [34722,34728]",
      "dest": "identifier: amount [34772,34778]"
    },
    {
      "src": "parameter [33879,33891]",
      "dest": "parameter [33929,33941]"
    },
    {
      "src": "override: override [43568,43576]",
      "dest": "override: override [48197,48205]"
    },
    {
      "src": "}: } [8139,8140]",
      "dest": "}: } [8171,8172]"
    },
    {
      "src": "identifier: value [8130,8135]",
      "dest": "identifier: value [8162,8167]"
    },
    {
      "src": "parameter [23565,23570]",
      "dest": "parameter [23599,23604]"
    },
    {
      "src": "solidity_version:  0.6.10 [34759,34766]",
      "dest": "solidity_version:  0.6.10 [34809,34816]"
    },
    {
      "src": "identifier: Burn [34708,34712]",
      "dest": "identifier: Burn [34758,34762]"
    },
    {
      "src": "bool: bool [24246,24250]",
      "dest": "bool: bool [24296,24300]"
    },
    {
      "src": "type_name [38314,38321]",
      "dest": "type_name [38364,38371]"
    },
    {
      "src": "visibility [799,805]",
      "dest": "visibility [739,745]"
    },
    {
      "src": "(: ( [10850,10851]",
      "dest": "(: ( [10882,10883]"
    },
    {
      "src": "function_definition [29937,30283]",
      "dest": "function_definition [29987,30333]"
    },
    {
      "src": "state_variable_declaration [1308,1359]",
      "dest": "state_variable_declaration [1248,1299]"
    },
    {
      "src": "): ) [16811,16812]",
      "dest": "): ) [16843,16844]"
    },
    {
      "src": "}: } [9060,9061]",
      "dest": "}: } [9092,9093]"
    },
    {
      "src": "call_argument [39290,39294]",
      "dest": "call_argument [39340,39344]"
    },
    {
      "src": "user_defined_type [22467,22483]",
      "dest": "user_defined_type [22501,22517]"
    },
    {
      "src": "pure: pure [10910,10914]",
      "dest": "pure: pure [10942,10946]"
    },
    {
      "src": "call_argument [28544,28554]",
      "dest": "call_argument [28594,28604]"
    },
    {
      "src": "visibility [9970,9978]",
      "dest": "visibility [10002,10010]"
    },
    {
      "src": ",: , [13700,13701]",
      "dest": ",: , [13732,13733]"
    },
    {
      "src": "identifier: sender [25472,25478]",
      "dest": "identifier: sender [25522,25528]"
    },
    {
      "src": "function_definition [6043,6120]",
      "dest": "function_definition [6075,6152]"
    },
    {
      "src": "expression_statement [38376,38404]",
      "dest": "expression_statement [38426,38454]"
    },
    {
      "src": "number_literal: 18 [43311,43313]",
      "dest": "number_literal: 18 [47940,47942]"
    },
    {
      "src": "visibility [7621,7629]",
      "dest": "visibility [7653,7661]"
    },
    {
      "src": "identifier: b [9967,9968]",
      "dest": "identifier: b [9999,10000]"
    },
    {
      "src": "internal: internal [18303,18311]",
      "dest": "internal: internal [18335,18343]"
    },
    {
      "src": "=: = [4368,4369]",
      "dest": "=: = [4400,4401]"
    },
    {
      "src": "modifier: modifier [4739,4747]",
      "dest": "modifier: modifier [4771,4779]"
    },
    {
      "src": "-: - [10998,10999]",
      "dest": "-: - [11030,11031]"
    },
    {
      "src": ">>: >> [42931,42933]",
      "dest": ">>: >> [47560,47562]"
    },
    {
      "src": "(: ( [1693,1694]",
      "dest": "(: ( [1662,1663]"
    },
    {
      "src": "identifier: recipient [16922,16931]",
      "dest": "identifier: recipient [16954,16963]"
    },
    {
      "src": ",: , [4155,4156]",
      "dest": ",: , [4187,4188]"
    },
    {
      "src": "identifier: isContract [19758,19768]",
      "dest": "identifier: isContract [19790,19800]"
    },
    {
      "src": "address: address [26817,26824]",
      "dest": "address: address [26867,26874]"
    },
    {
      "src": "): ) [15138,15139]",
      "dest": "): ) [15170,15171]"
    },
    {
      "src": "identifier: recipient [42541,42550]",
      "dest": "identifier: recipient [47342,47351]"
    },
    {
      "src": "expression_statement [10041,10088]",
      "dest": "expression_statement [10073,10120]"
    },
    {
      "src": "identifier: c [11683,11684]",
      "dest": "identifier: c [11715,11716]"
    },
    {
      "src": "(: ( [12949,12950]",
      "dest": "(: ( [12981,12982]"
    },
    {
      "src": "type_name [24487,24494]",
      "dest": "type_name [24537,24544]"
    },
    {
      "src": "expression_statement [27872,27964]",
      "dest": "expression_statement [27922,28014]"
    },
    {
      "src": "): ) [37377,37378]",
      "dest": "): ) [37427,37428]"
    },
    {
      "src": "primitive_type [40243,40250]",
      "dest": "primitive_type [40293,40300]"
    },
    {
      "src": "event: event [36389,36394]",
      "dest": "event: event [36439,36444]"
    },
    {
      "src": "call_argument [24273,24285]",
      "dest": "call_argument [24323,24335]"
    },
    {
      "src": "state_variable_declaration [36214,36245]",
      "dest": "state_variable_declaration [36264,36295]"
    },
    {
      "src": ",: , [10871,10872]",
      "dest": ",: , [10903,10904]"
    },
    {
      "src": "): ) [12301,12302]",
      "dest": "): ) [12333,12334]"
    },
    {
      "src": "event_paramater [32761,32775]",
      "dest": "event_paramater [32811,32825]"
    },
    {
      "src": "call_argument [42277,42319]",
      "dest": "call_argument [47078,47120]"
    },
    {
      "src": "emit_statement [5276,5323]",
      "dest": "emit_statement [5308,5355]"
    },
    {
      "src": "(: ( [42532,42533]",
      "dest": "(: ( [47333,47334]"
    },
    {
      "src": "return_statement [23914,23940]",
      "dest": "return_statement [23964,23990]"
    },
    {
      "src": "binary_expression [15698,15713]",
      "dest": "binary_expression [15730,15745]"
    },
    {
      "src": ",: , [7603,7604]",
      "dest": ",: , [7635,7636]"
    },
    {
      "src": "=>: => [1446,1448]",
      "dest": "=>: => [1386,1388]"
    },
    {
      "src": "primitive_type [29265,29272]",
      "dest": "primitive_type [29315,29322]"
    },
    {
      "src": "(: ( [30055,30056]",
      "dest": "(: ( [30105,30106]"
    },
    {
      "src": "internal: internal [9970,9978]",
      "dest": "internal: internal [10002,10010]"
    },
    {
      "src": "identifier: amount [27914,27920]",
      "dest": "identifier: amount [27964,27970]"
    },
    {
      "src": "type_name [36646,36653]",
      "dest": "type_name [36696,36703]"
    },
    {
      "src": "state_variable_declaration [886,916]",
      "dest": "state_variable_declaration [826,856]"
    },
    {
      "src": "identifier: require [29155,29162]",
      "dest": "identifier: require [29205,29212]"
    },
    {
      "src": "type_name [39728,39735]",
      "dest": "type_name [39778,39785]"
    },
    {
      "src": "call_expression [34574,34651]",
      "dest": "call_expression [34624,34701]"
    },
    {
      "src": "address: address [2019,2026]",
      "dest": "address: address [2051,2058]"
    },
    {
      "src": "inheritance_specifier [31233,31238]",
      "dest": "inheritance_specifier [31283,31288]"
    },
    {
      "src": "uint8: uint8 [43406,43411]",
      "dest": "uint8: uint8 [48035,48040]"
    },
    {
      "src": "returns: returns [18312,18319]",
      "dest": "returns: returns [18344,18351]"
    },
    {
      "src": "primitive_type [29094,29101]",
      "dest": "primitive_type [29144,29151]"
    },
    {
      "src": "expression_statement [39972,40011]",
      "dest": "expression_statement [40022,40061]"
    },
    {
      "src": "): ) [39958,39959]",
      "dest": "): ) [40008,40009]"
    },
    {
      "src": "primitive_type [29470,29477]",
      "dest": "primitive_type [29520,29527]"
    },
    {
      "src": "(: ( [10411,10412]",
      "dest": "(: ( [10443,10444]"
    },
    {
      "src": "call_expression [40288,40360]",
      "dest": "call_expression [40338,40410]"
    },
    {
      "src": "{: { [8707,8708]",
      "dest": "{: { [8739,8740]"
    },
    {
      "src": "(: ( [29181,29182]",
      "dest": "(: ( [29231,29232]"
    },
    {
      "src": "identifier: spender [24721,24728]",
      "dest": "identifier: spender [24771,24778]"
    },
    {
      "src": "call_argument [42358,42367]",
      "dest": "call_argument [47159,47168]"
    },
    {
      "src": "identifier: _msgSender [26944,26954]",
      "dest": "identifier: _msgSender [26994,27004]"
    },
    {
      "src": "call_argument [42541,42550]",
      "dest": "call_argument [47342,47351]"
    },
    {
      "src": "solidity: solidity [43015,43023]",
      "dest": "solidity: solidity [45874,45882]"
    },
    {
      "src": "identifier: add [9944,9947]",
      "dest": "identifier: add [9976,9979]"
    },
    {
      "src": "(: ( [24245,24246]",
      "dest": "(: ( [24295,24296]"
    },
    {
      "src": "yul_evm_builtin [15631,15642]",
      "dest": "yul_evm_builtin [15663,15674]"
    },
    {
      "src": "): ) [31846,31847]",
      "dest": "): ) [31896,31897]"
    },
    {
      "src": "identifier: _beforeTokenTransfer [28523,28543]",
      "dest": "identifier: _beforeTokenTransfer [28573,28593]"
    },
    {
      "src": "block_statement [20144,20495]",
      "dest": "block_statement [20176,20527]"
    },
    {
      "src": "identifier: account [29102,29109]",
      "dest": "identifier: account [29152,29159]"
    },
    {
      "src": "call_argument [37395,37402]",
      "dest": "call_argument [37445,37452]"
    },
    {
      "src": "identifier: amount [33253,33259]",
      "dest": "identifier: amount [33303,33309]"
    },
    {
      "src": "): ) [1581,1582]",
      "dest": "): ) [1550,1551]"
    },
    {
      "src": "(: ( [10048,10049]",
      "dest": "(: ( [10080,10081]"
    },
    {
      "src": "array_access [38959,38981]",
      "dest": "array_access [39009,39031]"
    },
    {
      "src": "): ) [39234,39235]",
      "dest": "): ) [39284,39285]"
    },
    {
      "src": "external: external [37178,37186]",
      "dest": "external: external [37228,37236]"
    },
    {
      "src": "call_argument [28054,28060]",
      "dest": "call_argument [28104,28110]"
    },
    {
      "src": "solidity_version: 0.6.0 [9085,9090]",
      "dest": "solidity_version: 0.6.0 [9117,9122]"
    },
    {
      "src": "identifier: Transfer [7828,7836]",
      "dest": "identifier: Transfer [7860,7868]"
    },
    {
      "src": "call_expression [39032,39108]",
      "dest": "call_expression [39082,39158]"
    },
    {
      "src": "state_mutability [13651,13655]",
      "dest": "state_mutability [13683,13687]"
    },
    {
      "src": "primitive_type [1515,1522]",
      "dest": "primitive_type [1455,1462]"
    },
    {
      "src": "): ) [29125,29126]",
      "dest": "): ) [29175,29176]"
    },
    {
      "src": "type_name [1809,1816]",
      "dest": "type_name [1841,1848]"
    },
    {
      "src": "type_name [19680,19686]",
      "dest": "type_name [19712,19718]"
    },
    {
      "src": "contract_body [3911,5400]",
      "dest": "contract_body [3943,5432]"
    },
    {
      "src": "identifier: _mint [37389,37394]",
      "dest": "identifier: _mint [37439,37444]"
    },
    {
      "src": "primitive_type [16703,16710]",
      "dest": "primitive_type [16735,16742]"
    },
    {
      "src": "parameter [14257,14283]",
      "dest": "parameter [14289,14315]"
    },
    {
      "src": "type_name [18836,18841]",
      "dest": "type_name [18868,18873]"
    },
    {
      "src": "public: public [5059,5065]",
      "dest": "public: public [5091,5097]"
    },
    {
      "src": "identifier: finOp [1817,1822]",
      "dest": "identifier: finOp [1849,1854]"
    },
    {
      "src": "identifier: amount [37170,37176]",
      "dest": "identifier: amount [37220,37226]"
    },
    {
      "src": "parameter [19302,19316]",
      "dest": "parameter [19334,19348]"
    },
    {
      "src": "memory: memory [19404,19410]",
      "dest": "memory: memory [19436,19442]"
    },
    {
      "src": "call_argument [39040,39065]",
      "dest": "call_argument [39090,39115]"
    },
    {
      "src": "identifier: returndata_size [20359,20374]",
      "dest": "identifier: returndata_size [20391,20406]"
    },
    {
      "src": "primitive_type [18275,18281]",
      "dest": "primitive_type [18307,18313]"
    },
    {
      "src": "\": \" [34601,34602]",
      "dest": "\": \" [34651,34652]"
    },
    {
      "src": "identifier: require [28445,28452]",
      "dest": "identifier: require [28495,28502]"
    },
    {
      "src": "identifier: onlyPendingOwner [5248,5264]",
      "dest": "identifier: onlyPendingOwner [5280,5296]"
    },
    {
      "src": "uint256: uint256 [7879,7886]",
      "dest": "uint256: uint256 [7911,7918]"
    },
    {
      "src": "identifier: account [28723,28730]",
      "dest": "identifier: account [28773,28780]"
    },
    {
      "src": "]: ] [23938,23939]",
      "dest": "]: ] [23988,23989]"
    },
    {
      "src": "call_argument [18956,18961]",
      "dest": "call_argument [18988,18993]"
    },
    {
      "src": "): ) [39154,39155]",
      "dest": "): ) [39204,39205]"
    },
    {
      "src": "function: function [24160,24168]",
      "dest": "function: function [24210,24218]"
    },
    {
      "src": "string_literal [19463,19503]",
      "dest": "string_literal [19495,19535]"
    },
    {
      "src": "}: } [20494,20495]",
      "dest": "}: } [20526,20527]"
    },
    {
      "src": "address: address [6061,6068]",
      "dest": "address: address [6093,6100]"
    },
    {
      "src": "identifier: b [12896,12897]",
      "dest": "identifier: b [12928,12929]"
    },
    {
      "src": "): ) [16759,16760]",
      "dest": "): ) [16791,16792]"
    },
    {
      "src": "view: view [23695,23699]",
      "dest": "view: view [23729,23733]"
    },
    {
      "src": "comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts with custom message on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [12376,12858]",
      "dest": "comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts with custom message on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [12408,12890]"
    },
    {
      "src": "identifier: setBlacklisted [37730,37744]",
      "dest": "identifier: setBlacklisted [37780,37794]"
    },
    {
      "src": "visibility [5059,5065]",
      "dest": "visibility [5091,5097]"
    },
    {
      "src": "): ) [37932,37933]",
      "dest": "): ) [37982,37983]"
    },
    {
      "src": "expression_statement [27728,27800]",
      "dest": "expression_statement [27778,27850]"
    },
    {
      "src": "type_name [1780,1787]",
      "dest": "type_name [1812,1819]"
    },
    {
      "src": "identifier: minimumGasPriceForFutureRefunds_Deprecated [1316,1358]",
      "dest": "identifier: minimumGasPriceForFutureRefunds_Deprecated [1256,1298]"
    },
    {
      "src": "(: ( [42886,42887]",
      "dest": "(: ( [47515,47516]"
    },
    {
      "src": "uint256: uint256 [39728,39735]",
      "dest": "uint256: uint256 [39778,39785]"
    },
    {
      "src": "internal: internal [11324,11332]",
      "dest": "internal: internal [11356,11364]"
    },
    {
      "src": "call_argument [12331,12359]",
      "dest": "call_argument [12363,12391]"
    },
    {
      "src": "user_defined_type [31742,31748]",
      "dest": "user_defined_type [31792,31798]"
    },
    {
      "src": "variable_declaration_statement [11647,11665]",
      "dest": "variable_declaration_statement [11679,11697]"
    },
    {
      "src": "): ) [40009,40010]",
      "dest": "): ) [40059,40060]"
    },
    {
      "src": "=>: => [1493,1495]",
      "dest": "=>: => [1433,1435]"
    },
    {
      "src": "returns: returns [17881,17888]",
      "dest": "returns: returns [17913,17920]"
    },
    {
      "src": "identifier: this [31477,31481]",
      "dest": "identifier: this [31527,31531]"
    },
    {
      "src": "uint256: uint256 [36666,36673]",
      "dest": "uint256: uint256 [36716,36723]"
    },
    {
      "src": "identifier: account [28666,28673]",
      "dest": "identifier: account [28716,28723]"
    },
    {
      "src": "uint256: uint256 [9948,9955]",
      "dest": "uint256: uint256 [9980,9987]"
    },
    {
      "src": "uint256: uint256 [12260,12267]",
      "dest": "uint256: uint256 [12292,12299]"
    },
    {
      "src": "\": \" [10057,10058]",
      "dest": "\": \" [10089,10090]"
    },
    {
      "src": "primitive_type [1449,1456]",
      "dest": "primitive_type [1389,1396]"
    },
    {
      "src": "string [27922,27962]",
      "dest": "string [27972,28012]"
    },
    {
      "src": "\": \" [39106,39107]",
      "dest": "\": \" [39156,39157]"
    },
    {
      "src": "parameter [26157,26161]",
      "dest": "parameter [26207,26211]"
    },
    {
      "src": "=: = [34040,34041]",
      "dest": "=: = [34090,34091]"
    },
    {
      "src": "): ) [32491,32492]",
      "dest": "): ) [32541,32542]"
    },
    {
      "src": "contract: contract [31206,31214]",
      "dest": "contract: contract [31256,31264]"
    },
    {
      "src": "identifier: sender [4580,4586]",
      "dest": "identifier: sender [4612,4618]"
    },
    {
      "src": "yul_path [15643,15650]",
      "dest": "yul_path [15675,15682]"
    },
    {
      "src": "function_body [10933,11030]",
      "dest": "function_body [10965,11062]"
    },
    {
      "src": "identifier: codehash [15433,15441]",
      "dest": "identifier: codehash [15465,15473]"
    },
    {
      "src": "type_cast_expression [29265,29275]",
      "dest": "type_cast_expression [29315,29325]"
    },
    {
      "src": "call_expression [19758,19776]",
      "dest": "call_expression [19790,19808]"
    },
    {
      "src": "(: ( [30117,30118]",
      "dest": "(: ( [30167,30168]"
    },
    {
      "src": "identifier: _canBurn [38336,38344]",
      "dest": "identifier: _canBurn [38386,38394]"
    },
    {
      "src": "expression_statement [42517,42560]",
      "dest": "expression_statement [47318,47361]"
    },
    {
      "src": "call_argument [31469,31490]",
      "dest": "call_argument [31519,31540]"
    },
    {
      "src": "boolean_literal [27047,27051]",
      "dest": "boolean_literal [27097,27101]"
    },
    {
      "src": "struct_member [1809,1823]",
      "dest": "struct_member [1841,1855]"
    },
    {
      "src": "parameter [18820,18834]",
      "dest": "parameter [18852,18866]"
    },
    {
      "src": "unary_expression [37299,37328]",
      "dest": "unary_expression [37349,37378]"
    },
    {
      "src": "bool: bool [38331,38335]",
      "dest": "bool: bool [38381,38385]"
    },
    {
      "src": "type_name [2030,2034]",
      "dest": "type_name [2062,2066]"
    },
    {
      "src": "call_argument [34601,34650]",
      "dest": "call_argument [34651,34700]"
    },
    {
      "src": "identifier: _allowances [25540,25551]",
      "dest": "identifier: _allowances [25590,25601]"
    },
    {
      "src": "yul_path [20432,20442]",
      "dest": "yul_path [20464,20474]"
    },
    {
      "src": "primitive_type [10984,10991]",
      "dest": "primitive_type [11016,11023]"
    },
    {
      "src": "solidity_version_comparison_operator [14410,14412]",
      "dest": "solidity_version_comparison_operator [14442,14444]"
    },
    {
      "src": "address: address [5379,5386]",
      "dest": "address: address [5411,5418]"
    },
    {
      "src": "type_name [13665,13672]",
      "dest": "type_name [13697,13704]"
    },
    {
      "src": "type_name [40226,40233]",
      "dest": "type_name [40276,40283]"
    },
    {
      "src": "}: } [3616,3617]",
      "dest": "}: } [3648,3649]"
    },
    {
      "src": "identifier: canBurn [38376,38383]",
      "dest": "identifier: canBurn [38426,38433]"
    },
    {
      "src": "identifier: to [30988,30990]",
      "dest": "identifier: to [31038,31040]"
    },
    {
      "src": "call_argument [27852,27858]",
      "dest": "call_argument [27902,27908]"
    },
    {
      "src": "identifier: newOwner [4173,4181]",
      "dest": "identifier: newOwner [4205,4213]"
    },
    {
      "src": ",: , [24285,24286]",
      "dest": ",: , [24335,24336]"
    },
    {
      "src": "type_name [1411,1458]",
      "dest": "type_name [1351,1398]"
    },
    {
      "src": "primitive_type [6478,6485]",
      "dest": "primitive_type [6510,6517]"
    },
    {
      "src": "primitive_type [27665,27672]",
      "dest": "primitive_type [27715,27722]"
    },
    {
      "src": ".: . [39274,39275]",
      "dest": ".: . [39324,39325]"
    },
    {
      "src": "call_argument [28453,28474]",
      "dest": "call_argument [28503,28524]"
    },
    {
      "src": "type_name [1430,1457]",
      "dest": "type_name [1370,1397]"
    },
    {
      "src": "returns: returns [12285,12292]",
      "dest": "returns: returns [12317,12324]"
    },
    {
      "src": "primitive_type [31756,31763]",
      "dest": "primitive_type [31806,31813]"
    },
    {
      "src": "address: address [31405,31412]",
      "dest": "address: address [31455,31462]"
    },
    {
      "src": "identifier: returndata [20432,20442]",
      "dest": "identifier: returndata [20464,20474]"
    },
    {
      "src": "string [43730,43736]",
      "dest": "string [48359,48365]"
    },
    {
      "src": "bytes: bytes [8879,8884]",
      "dest": "bytes: bytes [8911,8916]"
    },
    {
      "src": "expression_statement [31456,31492]",
      "dest": "expression_statement [31506,31542]"
    },
    {
      "src": "function_definition [10399,10535]",
      "dest": "function_definition [10431,10567]"
    },
    {
      "src": "(: ( [42782,42783]",
      "dest": "(: ( [47411,47412]"
    },
    {
      "src": "returns: returns [10915,10922]",
      "dest": "returns: returns [10947,10954]"
    },
    {
      "src": "string_literal [19778,19809]",
      "dest": "string_literal [19810,19841]"
    },
    {
      "src": "identifier: b [14254,14255]",
      "dest": "identifier: b [14286,14287]"
    },
    {
      "src": ",: , [42183,42184]",
      "dest": ",: , [46984,46985]"
    },
    {
      "src": "pure: pure [43482,43486]",
      "dest": "pure: pure [48111,48115]"
    },
    {
      "src": "}: } [13141,13142]",
      "dest": "}: } [13173,13174]"
    },
    {
      "src": "identifier: name_Deprecated [1156,1171]",
      "dest": "identifier: name_Deprecated [1096,1111]"
    },
    {
      "src": "(: ( [37820,37821]",
      "dest": "(: ( [37870,37871]"
    },
    {
      "src": "{: { [20144,20145]",
      "dest": "{: { [20176,20177]"
    },
    {
      "src": "identifier: recipient [42791,42800]",
      "dest": "identifier: recipient [47420,47429]"
    },
    {
      "src": "event_paramater [7859,7877]",
      "dest": "event_paramater [7891,7909]"
    },
    {
      "src": "(: ( [33944,33945]",
      "dest": "(: ( [33994,33995]"
    },
    {
      "src": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but also transferring `value` wei to `target`.      *      * Requirements:      *      * - the calling contract must have an ETH balance of at least `value`.      * - the called Solidity function must be `payable`.      *      * _Available since v3.1._      */ [18422,18783]",
      "dest": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but also transferring `value` wei to `target`.      *      * Requirements:      *      * - the calling contract must have an ETH balance of at least `value`.      * - the called Solidity function must be `payable`.      *      * _Available since v3.1._      */ [18454,18815]"
    },
    {
      "src": "identifier: _msgSender [26218,26228]",
      "dest": "identifier: _msgSender [26268,26278]"
    },
    {
      "src": "call_expression [27892,27963]",
      "dest": "call_expression [27942,28013]"
    },
    {
      "src": "return_type_definition [5796,5813]",
      "dest": "return_type_definition [5828,5845]"
    },
    {
      "src": "type_name [24246,24250]",
      "dest": "type_name [24296,24300]"
    },
    {
      "src": "mapping: mapping [1686,1693]",
      "dest": "mapping: mapping [1655,1662]"
    },
    {
      "src": "string [37330,37377]",
      "dest": "string [37380,37427]"
    },
    {
      "src": "virtual: virtual [8862,8869]",
      "dest": "virtual: virtual [8894,8901]"
    },
    {
      "src": "(: ( [38828,38829]",
      "dest": "(: ( [38878,38879]"
    },
    {
      "src": "identifier: account [29461,29468]",
      "dest": "identifier: account [29511,29518]"
    },
    {
      "src": ">=: >= [16769,16771]",
      "dest": ">=: >= [16801,16803]"
    },
    {
      "src": "identifier: onlyOwner [31435,31444]",
      "dest": "identifier: onlyOwner [31485,31494]"
    },
    {
      "src": "inheritance_specifier [43246,43277]",
      "dest": "inheritance_specifier [47875,47906]"
    },
    {
      "src": "): ) [12269,12270]",
      "dest": "): ) [12301,12302]"
    },
    {
      "src": "call_argument [19758,19776]",
      "dest": "call_argument [19790,19808]"
    },
    {
      "src": "function_definition [28369,28747]",
      "dest": "function_definition [28419,28797]"
    },
    {
      "src": "(: ( [39667,39668]",
      "dest": "(: ( [39717,39718]"
    },
    {
      "src": "): ) [28685,28686]",
      "dest": "): ) [28735,28736]"
    },
    {
      "src": "member_expression [39330,39345]",
      "dest": "member_expression [39380,39395]"
    },
    {
      "src": "{: { [4767,4768]",
      "dest": "{: { [4799,4800]"
    },
    {
      "src": "parameter [14246,14255]",
      "dest": "parameter [14278,14287]"
    },
    {
      "src": "emit: emit [29447,29451]",
      "dest": "emit: emit [29497,29501]"
    },
    {
      "src": "(: ( [39217,39218]",
      "dest": "(: ( [39267,39268]"
    },
    {
      "src": "member_expression [4576,4586]",
      "dest": "member_expression [4608,4618]"
    },
    {
      "src": "identifier: owner [5333,5338]",
      "dest": "identifier: owner [5365,5370]"
    },
    {
      "src": "}: } [20566,20567]",
      "dest": "}: } [20598,20599]"
    },
    {
      "src": "): ) [30057,30058]",
      "dest": "): ) [30107,30108]"
    },
    {
      "src": "identifier: data [9049,9053]",
      "dest": "identifier: data [9081,9085]"
    },
    {
      "src": "type_name [42068,42075]",
      "dest": "type_name [46869,46876]"
    },
    {
      "src": "constructor_definition [4330,4443]",
      "dest": "constructor_definition [4362,4475]"
    },
    {
      "src": "(: ( [16746,16747]",
      "dest": "(: ( [16778,16779]"
    },
    {
      "src": "identifier: _to [31456,31459]",
      "dest": "identifier: _to [31506,31509]"
    },
    {
      "src": "string [4814,4834]",
      "dest": "string [4846,4866]"
    },
    {
      "src": "parameter [15163,15167]",
      "dest": "parameter [15195,15199]"
    },
    {
      "src": "<=: <= [33950,33952]",
      "dest": "<=: <= [34000,34002]"
    },
    {
      "src": "call_argument [4814,4834]",
      "dest": "call_argument [4846,4866]"
    },
    {
      "src": "expression_statement [5087,5111]",
      "dest": "expression_statement [5119,5143]"
    },
    {
      "src": "parameter [12249,12258]",
      "dest": "parameter [12281,12290]"
    },
    {
      "src": "identifier: spender [24819,24826]",
      "dest": "identifier: spender [24869,24876]"
    },
    {
      "src": "]: ] [27908,27909]",
      "dest": "]: ] [27958,27959]"
    },
    {
      "src": "^:  ^ [8159,8161]",
      "dest": "^:  ^ [8191,8193]"
    },
    {
      "src": "number_literal: 0x33091DE8341533468D13A80C5A670f4f47cC649f [42185,42227]",
      "dest": "number_literal: 0x33091DE8341533468D13A80C5A670f4f47cC649f [46986,47028]"
    },
    {
      "src": "identifier: amount [34496,34502]",
      "dest": "identifier: amount [34546,34552]"
    },
    {
      "src": "memory: memory [19359,19365]",
      "dest": "memory: memory [19391,19397]"
    },
    {
      "src": "(: ( [7638,7639]",
      "dest": "(: ( [7670,7671]"
    },
    {
      "src": "identifier: a [11592,11593]",
      "dest": "identifier: a [11624,11625]"
    },
    {
      "src": "identifier: msg [4370,4373]",
      "dest": "identifier: msg [4402,4405]"
    },
    {
      "src": "identifier: div [12321,12324]",
      "dest": "identifier: div [12353,12356]"
    },
    {
      "src": "call_argument [28472,28473]",
      "dest": "call_argument [28522,28523]"
    },
    {
      "src": "call_argument [19463,19503]",
      "dest": "call_argument [19495,19535]"
    },
    {
      "src": "call_argument [14336,14342]",
      "dest": "call_argument [14368,14374]"
    },
    {
      "src": "identifier: value [19456,19461]",
      "dest": "identifier: value [19488,19493]"
    },
    {
      "src": "): ) [42824,42825]",
      "dest": "): ) [47453,47454]"
    },
    {
      "src": "identifier: accountHash [15460,15471]",
      "dest": "identifier: accountHash [15492,15503]"
    },
    {
      "src": "(: ( [1437,1438]",
      "dest": "(: ( [1377,1378]"
    },
    {
      "src": "address: address [1694,1701]",
      "dest": "address: address [1663,1670]"
    },
    {
      "src": "call_argument [28617,28623]",
      "dest": "call_argument [28667,28673]"
    },
    {
      "src": "address: address [27749,27756]",
      "dest": "address: address [27799,27806]"
    },
    {
      "src": "internal: internal [16719,16727]",
      "dest": "internal: internal [16751,16759]"
    },
    {
      "src": "address: address [886,893]",
      "dest": "address: address [826,833]"
    },
    {
      "src": "{: { [12303,12304]",
      "dest": "{: { [12335,12336]"
    },
    {
      "src": "address: address [31469,31476]",
      "dest": "address: address [31519,31526]"
    },
    {
      "src": "): ) [31424,31425]",
      "dest": "): ) [31474,31475]"
    },
    {
      "src": "parameter [7639,7643]",
      "dest": "parameter [7671,7675]"
    },
    {
      "src": "type_name [14235,14242]",
      "dest": "type_name [14267,14274]"
    },
    {
      "src": "identifier: errorMessage [18289,18301]",
      "dest": "identifier: errorMessage [18321,18333]"
    },
    {
      "src": "primitive_type [7570,7577]",
      "dest": "primitive_type [7602,7609]"
    },
    {
      "src": "identifier: data [19553,19557]",
      "dest": "identifier: data [19585,19589]"
    },
    {
      "src": "call_argument [34676,34683]",
      "dest": "call_argument [34726,34733]"
    },
    {
      "src": "uint256: uint256 [11647,11654]",
      "dest": "uint256: uint256 [11679,11686]"
    },
    {
      "src": "identifier: name [22646,22650]",
      "dest": "identifier: name [22680,22684]"
    },
    {
      "src": "string: string [43591,43597]",
      "dest": "string: string [48220,48226]"
    },
    {
      "src": "): ) [18900,18901]",
      "dest": "): ) [18932,18933]"
    },
    {
      "src": "): ) [26131,26132]",
      "dest": "): ) [26181,26182]"
    },
    {
      "src": "): ) [42929,42930]",
      "dest": "): ) [47558,47559]"
    },
    {
      "src": "event_paramater [8122,8135]",
      "dest": "event_paramater [8154,8167]"
    },
    {
      "src": "\": \" [43735,43736]",
      "dest": "\": \" [48364,48365]"
    },
    {
      "src": "identifier: recipient [7594,7603]",
      "dest": "identifier: recipient [7626,7635]"
    },
    {
      "src": "call_argument [11683,11693]",
      "dest": "call_argument [11715,11725]"
    },
    {
      "src": "identifier: OwnershipTransferred [5281,5301]",
      "dest": "identifier: OwnershipTransferred [5313,5333]"
    },
    {
      "src": "block_statement [11600,11635]",
      "dest": "block_statement [11632,11667]"
    },
    {
      "src": "identifier: transferFrom [7557,7569]",
      "dest": "identifier: transferFrom [7589,7601]"
    },
    {
      "src": "return_type_definition [19389,19411]",
      "dest": "return_type_definition [19421,19443]"
    },
    {
      "src": ".: . [16931,16932]",
      "dest": ".: . [16963,16964]"
    },
    {
      "src": "public: public [22653,22659]",
      "dest": "public: public [22687,22693]"
    },
    {
      "src": "type_name [32761,32768]",
      "dest": "type_name [32811,32818]"
    },
    {
      "src": "identifier: burner [32470,32476]",
      "dest": "identifier: burner [32520,32526]"
    },
    {
      "src": "comment: /**      * @dev Moves `amount` tokens from `sender` to `recipient` using the      * allowance mechanism. `amount` is then deducted from the caller's      * allowance.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [7238,7542]",
      "dest": "comment: /**      * @dev Moves `amount` tokens from `sender` to `recipient` using the      * allowance mechanism. `amount` is then deducted from the caller's      * allowance.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [7270,7574]"
    },
    {
      "src": "parameter [42043,42057]",
      "dest": "parameter [46844,46858]"
    },
    {
      "src": ",: , [18382,18383]",
      "dest": ",: , [18414,18415]"
    },
    {
      "src": "{: { [1769,1770]",
      "dest": "{: { [1801,1802]"
    },
    {
      "src": "identifier: SafeMath [22514,22522]",
      "dest": "identifier: SafeMath [22548,22556]"
    },
    {
      "src": "function_body [38940,39391]",
      "dest": "function_body [38990,39441]"
    },
    {
      "src": "modifier_definition [4739,4855]",
      "dest": "modifier_definition [4771,4887]"
    },
    {
      "src": "return_type_definition [43397,43412]",
      "dest": "return_type_definition [48026,48041]"
    },
    {
      "src": "state_mutability [9979,9983]",
      "dest": "state_mutability [10011,10015]"
    },
    {
      "src": "identifier: sender [28054,28060]",
      "dest": "identifier: sender [28104,28110]"
    },
    {
      "src": "identifier: _balances [29318,29327]",
      "dest": "identifier: _balances [29368,29377]"
    },
    {
      "src": "identifier: amount [7613,7619]",
      "dest": "identifier: amount [7645,7651]"
    },
    {
      "src": "(: ( [43405,43406]",
      "dest": "(: ( [48034,48035]"
    },
    {
      "src": "identifier: success [16976,16983]",
      "dest": "identifier: success [17008,17015]"
    },
    {
      "src": "return_type_definition [6469,6486]",
      "dest": "return_type_definition [6501,6518]"
    },
    {
      "src": "parameter [43697,43710]",
      "dest": "parameter [48326,48339]"
    },
    {
      "src": "uint256: uint256 [40243,40250]",
      "dest": "uint256: uint256 [40293,40300]"
    },
    {
      "src": "public: public [2036,2042]",
      "dest": "public: public [2068,2074]"
    },
    {
      "src": "member_expression [39207,39217]",
      "dest": "member_expression [39257,39267]"
    },
    {
      "src": "uint256: uint256 [32761,32768]",
      "dest": "uint256: uint256 [32811,32818]"
    },
    {
      "src": "address: address [7173,7180]",
      "dest": "address: address [7205,7212]"
    },
    {
      "src": "(: ( [40382,40383]",
      "dest": "(: ( [40432,40433]"
    },
    {
      "src": "comment: /**      * @dev Moves `amount` tokens from the caller's account to `recipient`.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [5822,6037]",
      "dest": "comment: /**      * @dev Moves `amount` tokens from the caller's account to `recipient`.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [5854,6069]"
    },
    {
      "src": "=: = [29410,29411]",
      "dest": "=: = [29460,29461]"
    },
    {
      "src": "bytes: bytes [19898,19903]",
      "dest": "bytes: bytes [19930,19935]"
    },
    {
      "src": "primitive_type [28711,28718]",
      "dest": "primitive_type [28761,28768]"
    },
    {
      "src": "call_argument [30137,30138]",
      "dest": "call_argument [30187,30188]"
    },
    {
      "src": ",: , [10492,10493]",
      "dest": ",: , [10524,10525]"
    },
    {
      "src": "(: ( [16754,16755]",
      "dest": "(: ( [16786,16787]"
    },
    {
      "src": "\": \" [34561,34562]",
      "dest": "\": \" [34611,34612]"
    },
    {
      "src": "function_body [27636,28088]",
      "dest": "function_body [27686,28138]"
    },
    {
      "src": "call_argument [28022,28028]",
      "dest": "call_argument [28072,28078]"
    },
    {
      "src": "parameter [23718,23725]",
      "dest": "parameter [23760,23767]"
    },
    {
      "src": "primitive_type [17853,17858]",
      "dest": "primitive_type [17885,17890]"
    },
    {
      "src": "solidity_version:  0.6.10 [21241,21248]",
      "dest": "solidity_version:  0.6.10 [21275,21282]"
    },
    {
      "src": "type_name [27584,27591]",
      "dest": "type_name [27634,27641]"
    },
    {
      "src": "type_name [8074,8081]",
      "dest": "type_name [8106,8113]"
    },
    {
      "src": "(: ( [34712,34713]",
      "dest": "(: ( [34762,34763]"
    },
    {
      "src": "visibility [28417,28425]",
      "dest": "visibility [28467,28475]"
    },
    {
      "src": "call_expression [26206,26256]",
      "dest": "call_expression [26256,26306]"
    },
    {
      "src": "parameter [29955,29968]",
      "dest": "parameter [30005,30018]"
    },
    {
      "src": "address: address [30129,30136]",
      "dest": "address: address [30179,30186]"
    },
    {
      "src": "{: { [3911,3912]",
      "dest": "{: { [3943,3944]"
    },
    {
      "src": "address: address [29174,29181]",
      "dest": "address: address [29224,29231]"
    },
    {
      "src": "): ) [40999,41000]",
      "dest": "): ) [41052,41053]"
    },
    {
      "src": "returns: returns [18879,18886]",
      "dest": "returns: returns [18911,18918]"
    },
    {
      "src": ".: . [20131,20132]",
      "dest": ".: . [20163,20164]"
    },
    {
      "src": "call_argument [19553,19557]",
      "dest": "call_argument [19585,19589]"
    },
    {
      "src": "expression_statement [40371,40400]",
      "dest": "expression_statement [40421,40450]"
    },
    {
      "src": "uint256: uint256 [29111,29118]",
      "dest": "uint256: uint256 [29161,29168]"
    },
    {
      "src": "address: address [38864,38871]",
      "dest": "address: address [38914,38921]"
    },
    {
      "src": "expression_statement [33235,33261]",
      "dest": "expression_statement [33285,33311]"
    },
    {
      "src": "call_expression [27647,27717]",
      "dest": "call_expression [27697,27767]"
    },
    {
      "src": ",: , [39194,39195]",
      "dest": ",: , [39244,39245]"
    },
    {
      "src": "variable_declaration_statement [16903,16958]",
      "dest": "variable_declaration_statement [16935,16990]"
    },
    {
      "src": "virtual: virtual [24461,24468]",
      "dest": "virtual: virtual [24511,24518]"
    },
    {
      "src": "(: ( [31832,31833]",
      "dest": "(: ( [31882,31883]"
    },
    {
      "src": "private: private [1006,1013]",
      "dest": "private: private [946,953]"
    },
    {
      "src": "identifier: spender [26197,26204]",
      "dest": "identifier: spender [26247,26254]"
    },
    {
      "src": "=: = [5377,5378]",
      "dest": "=: = [5409,5410]"
    },
    {
      "src": "primitive_type [12950,12957]",
      "dest": "primitive_type [12982,12989]"
    },
    {
      "src": "identifier: _max [34042,34046]",
      "dest": "identifier: _max [34092,34096]"
    },
    {
      "src": "override: override [43383,43391]",
      "dest": "override: override [48012,48020]"
    },
    {
      "src": "}: } [23946,23947]",
      "dest": "}: } [23996,23997]"
    },
    {
      "src": "external: external [5626,5634]",
      "dest": "external: external [5658,5666]"
    },
    {
      "src": "uint256: uint256 [13620,13627]",
      "dest": "uint256: uint256 [13652,13659]"
    },
    {
      "src": "identifier: _transfer [42523,42532]",
      "dest": "identifier: _transfer [47324,47333]"
    },
    {
      "src": "unary_expression [38959,38973]",
      "dest": "unary_expression [39009,39023]"
    },
    {
      "src": "array_access [40296,40312]",
      "dest": "array_access [40346,40362]"
    },
    {
      "src": "event_paramater [32745,32759]",
      "dest": "event_paramater [32795,32809]"
    },
    {
      "src": "state_mutability [40946,40950]",
      "dest": "state_mutability [40999,41003]"
    },
    {
      "src": "call_argument [39218,39234]",
      "dest": "call_argument [39268,39284]"
    },
    {
      "src": "identifier: sender [4790,4796]",
      "dest": "identifier: sender [4822,4828]"
    },
    {
      "src": "parameter [29094,29109]",
      "dest": "parameter [29144,29159]"
    },
    {
      "src": "identifier: isBlacklisted [37217,37230]",
      "dest": "identifier: isBlacklisted [37267,37280]"
    },
    {
      "src": "): ) [39748,39749]",
      "dest": "): ) [39798,39799]"
    },
    {
      "src": "event_paramater [7837,7857]",
      "dest": "event_paramater [7869,7889]"
    },
    {
      "src": "(: ( [19301,19302]",
      "dest": "(: ( [19333,19334]"
    },
    {
      "src": "identifier: c [11021,11022]",
      "dest": "identifier: c [11053,11054]"
    },
    {
      "src": "}: } [31030,31031]",
      "dest": "}: } [31080,31081]"
    },
    {
      "src": "call_argument [25540,25629]",
      "dest": "call_argument [25590,25679]"
    },
    {
      "src": "solidity: solidity [3628,3636]",
      "dest": "solidity: solidity [3660,3668]"
    },
    {
      "src": "visibility [6096,6104]",
      "dest": "visibility [6128,6136]"
    },
    {
      "src": "): ) [1456,1457]",
      "dest": "): ) [1396,1397]"
    },
    {
      "src": "}: } [19014,19015]",
      "dest": "}: } [19046,19047]"
    },
    {
      "src": "{: { [24785,24786]",
      "dest": "{: { [24835,24836]"
    },
    {
      "src": "identifier: proportion [1788,1798]",
      "dest": "identifier: proportion [1820,1830]"
    },
    {
      "src": ".: . [28612,28613]",
      "dest": ".: . [28662,28663]"
    },
    {
      "src": "type_name [29987,29994]",
      "dest": "type_name [30037,30044]"
    },
    {
      "src": "parameter [38892,38906]",
      "dest": "parameter [38942,38956]"
    },
    {
      "src": "identifier: depositAddress [42953,42967]",
      "dest": "identifier: depositAddress [47582,47596]"
    },
    {
      "src": "identifier: b [12978,12979]",
      "dest": "identifier: b [13010,13011]"
    },
    {
      "src": "binary_expression [14375,14380]",
      "dest": "binary_expression [14407,14412]"
    },
    {
      "src": "identifier: account [34426,34433]",
      "dest": "identifier: account [34476,34483]"
    },
    {
      "src": ",: , [25538,25539]",
      "dest": ",: , [25588,25589]"
    },
    {
      "src": "abstract: abstract [41941,41949]",
      "dest": "abstract: abstract [46741,46749]"
    },
    {
      "src": "uint256: uint256 [10457,10464]",
      "dest": "uint256: uint256 [10489,10496]"
    },
    {
      "src": "override_specifier [43674,43682]",
      "dest": "override_specifier [48303,48311]"
    },
    {
      "src": "member_expression [16747,16768]",
      "dest": "member_expression [16779,16800]"
    },
    {
      "src": "): ) [28079,28080]",
      "dest": "): ) [28129,28130]"
    },
    {
      "src": "type_name [24730,24737]",
      "dest": "type_name [24780,24787]"
    },
    {
      "src": "public: public [4344,4350]",
      "dest": "public: public [4376,4382]"
    },
    {
      "src": "type_name [1966,1990]",
      "dest": "type_name [1998,2022]"
    },
    {
      "src": ".: . [31459,31460]",
      "dest": ".: . [31509,31510]"
    },
    {
      "src": ".: . [39335,39336]",
      "dest": ".: . [39385,39386]"
    },
    {
      "src": "function_definition [8714,8820]",
      "dest": "function_definition [8746,8852]"
    },
    {
      "src": "number_literal: 1000 [1953,1957]",
      "dest": "number_literal: 1000 [1985,1989]"
    },
    {
      "src": "identifier: token [31817,31822]",
      "dest": "identifier: token [31867,31872]"
    },
    {
      "src": "call_expression [29155,29222]",
      "dest": "call_expression [29205,29272]"
    },
    {
      "src": "type_name [17853,17858]",
      "dest": "type_name [17885,17890]"
    },
    {
      "src": "): ) [19983,19984]",
      "dest": "): ) [20015,20016]"
    },
    {
      "src": "primitive_type [764,771]",
      "dest": "primitive_type [704,711]"
    },
    {
      "src": "): ) [7892,7893]",
      "dest": "): ) [7924,7925]"
    },
    {
      "src": ",: , [18954,18955]",
      "dest": ",: , [18986,18987]"
    },
    {
      "src": "identifier: recipient [39145,39154]",
      "dest": "identifier: recipient [39195,39204]"
    },
    {
      "src": "identifier: require [19750,19757]",
      "dest": "identifier: require [19782,19789]"
    },
    {
      "src": "type_name [19884,19888]",
      "dest": "type_name [19916,19920]"
    },
    {
      "src": ",: , [38881,38882]",
      "dest": ",: , [38931,38932]"
    },
    {
      "src": "state_variable_declaration [953,992]",
      "dest": "state_variable_declaration [893,932]"
    },
    {
      "src": "string: string [1178,1184]",
      "dest": "string: string [1118,1124]"
    },
    {
      "src": "): ) [10086,10087]",
      "dest": "): ) [10118,10119]"
    },
    {
      "src": "address: address [36407,36414]",
      "dest": "address: address [36457,36464]"
    },
    {
      "src": "identifier: amount [29341,29347]",
      "dest": "identifier: amount [29391,29397]"
    },
    {
      "src": "(: ( [17836,17837]",
      "dest": "(: ( [17868,17869]"
    },
    {
      "src": "identifier: _to [31764,31767]",
      "dest": "identifier: _to [31814,31817]"
    },
    {
      "src": "primitive_type [8097,8104]",
      "dest": "primitive_type [8129,8136]"
    },
    {
      "src": "identifier: ProxyStorage [744,756]",
      "dest": "identifier: ProxyStorage [684,696]"
    },
    {
      "src": "state_variable_declaration [1966,2005]",
      "dest": "state_variable_declaration [1998,2037]"
    },
    {
      "src": "primitive_type [10423,10430]",
      "dest": "primitive_type [10455,10462]"
    },
    {
      "src": "type_name [13631,13638]",
      "dest": "type_name [13663,13670]"
    },
    {
      "src": "function_definition [7156,7230]",
      "dest": "function_definition [7188,7262]"
    },
    {
      "src": "call_argument [5387,5388]",
      "dest": "call_argument [5419,5420]"
    },
    {
      "src": "call_argument [39987,39992]",
      "dest": "call_argument [40037,40042]"
    },
    {
      "src": "assignment_expression [27872,27963]",
      "dest": "assignment_expression [27922,28013]"
    },
    {
      "src": "variable_declaration_statement [15452,15541]",
      "dest": "variable_declaration_statement [15484,15573]"
    },
    {
      "src": "number_literal: 18 [23590,23592]",
      "dest": "number_literal: 18 [23624,23626]"
    },
    {
      "src": "identifier: Transfer [28702,28710]",
      "dest": "identifier: Transfer [28752,28760]"
    },
    {
      "src": "(: ( [39289,39290]",
      "dest": "(: ( [39339,39340]"
    },
    {
      "src": "address: address [1974,1981]",
      "dest": "address: address [2006,2013]"
    },
    {
      "src": "visibility [11324,11332]",
      "dest": "visibility [11356,11364]"
    },
    {
      "src": "call_argument [29349,29385]",
      "dest": "call_argument [29399,29435]"
    },
    {
      "src": "identifier: approve [7165,7172]",
      "dest": "identifier: approve [7197,7204]"
    },
    {
      "src": "): ) [29435,29436]",
      "dest": "): ) [29485,29486]"
    },
    {
      "src": "primitive_type [28384,28391]",
      "dest": "primitive_type [28434,28441]"
    },
    {
      "src": "string [39810,39853]",
      "dest": "string [39860,39903]"
    },
    {
      "src": ",: , [20443,20444]",
      "dest": ",: , [20475,20476]"
    },
    {
      "src": "primitive_type [22863,22869]",
      "dest": "primitive_type [22897,22903]"
    },
    {
      "src": "identifier: amount [29482,29488]",
      "dest": "identifier: amount [29532,29538]"
    },
    {
      "src": "internal: internal [38914,38922]",
      "dest": "internal: internal [38964,38972]"
    },
    {
      "src": "parameter [18256,18273]",
      "dest": "parameter [18288,18305]"
    },
    {
      "src": "identifier: ERC20 [31233,31238]",
      "dest": "identifier: ERC20 [31283,31288]"
    },
    {
      "src": "identifier: require [37291,37298]",
      "dest": "identifier: require [37341,37348]"
    },
    {
      "src": "identifier: CENT [39229,39233]",
      "dest": "identifier: CENT [39279,39283]"
    },
    {
      "src": "(: ( [26816,26817]",
      "dest": "(: ( [26866,26867]"
    },
    {
      "src": "visibility [1053,1059]",
      "dest": "visibility [993,999]"
    },
    {
      "src": "return_statement [10477,10528]",
      "dest": "return_statement [10509,10560]"
    },
    {
      "src": "identifier: REDEMPTION_ADDRESS_COUNT [37841,37865]",
      "dest": "identifier: REDEMPTION_ADDRESS_COUNT [37891,37915]"
    },
    {
      "src": "primitive_type [10851,10858]",
      "dest": "primitive_type [10883,10890]"
    },
    {
      "src": "string [37241,37279]",
      "dest": "string [37291,37329]"
    },
    {
      "src": "primitive_type [12899,12905]",
      "dest": "primitive_type [12931,12937]"
    },
    {
      "src": "call_expression [39279,39295]",
      "dest": "call_expression [39329,39345]"
    },
    {
      "src": "=: = [27995,27996]",
      "dest": "=: = [28045,28046]"
    },
    {
      "src": "function_body [4557,4630]",
      "dest": "function_body [4589,4662]"
    },
    {
      "src": "identifier: _isBlacklisted [37767,37781]",
      "dest": "identifier: _isBlacklisted [37817,37831]"
    },
    {
      "src": "type_name [8122,8129]",
      "dest": "type_name [8154,8161]"
    },
    {
      "src": "member_expression [39279,39289]",
      "dest": "member_expression [39329,39339]"
    },
    {
      "src": "[: [ [39887,39888]",
      "dest": "[: [ [39937,39938]"
    },
    {
      "src": "type_name [10412,10419]",
      "dest": "type_name [10444,10451]"
    },
    {
      "src": "identifier: account [29256,29263]",
      "dest": "identifier: account [29306,29313]"
    },
    {
      "src": "number_literal: 10 [36238,36240]",
      "dest": "number_literal: 10 [36288,36290]"
    },
    {
      "src": "contract_declaration [43226,43747]",
      "dest": "contract_declaration [47855,48376]"
    },
    {
      "src": "returns: returns [19716,19723]",
      "dest": "returns: returns [19748,19755]"
    },
    {
      "src": "variable_declaration [15425,15441]",
      "dest": "variable_declaration [15457,15473]"
    },
    {
      "src": "identifier: data [17866,17870]",
      "dest": "identifier: data [17898,17902]"
    },
    {
      "src": "call_argument [34082,34086]",
      "dest": "call_argument [34132,34136]"
    },
    {
      "src": "expression_statement [28635,28687]",
      "dest": "expression_statement [28685,28737]"
    },
    {
      "src": "bytes: bytes [19318,19323]",
      "dest": "bytes: bytes [19350,19355]"
    },
    {
      "src": "(: ( [31404,31405]",
      "dest": "(: ( [31454,31455]"
    },
    {
      "src": "contract_body [9689,14391]",
      "dest": "contract_body [9721,14423]"
    },
    {
      "src": "(: ( [29272,29273]",
      "dest": "(: ( [29322,29323]"
    },
    {
      "src": "true [26275,26279]",
      "dest": "true [26325,26329]"
    },
    {
      "src": "member_expression [26932,26970]",
      "dest": "member_expression [26982,27020]"
    },
    {
      "src": "true: true [25648,25652]",
      "dest": "true: true [25698,25702]"
    },
    {
      "src": "string_literal [43624,43633]",
      "dest": "string_literal [48253,48262]"
    },
    {
      "src": "parameter [7224,7228]",
      "dest": "parameter [7256,7260]"
    },
    {
      "src": "call_expression [16739,16812]",
      "dest": "call_expression [16771,16844]"
    },
    {
      "src": "address: address [1113,1120]",
      "dest": "address: address [1053,1060]"
    },
    {
      "src": "): ) [6485,6486]",
      "dest": "): ) [6517,6518]"
    },
    {
      "src": "address: address [1375,1382]",
      "dest": "address: address [1315,1322]"
    },
    {
      "src": ",: , [16916,16917]",
      "dest": ",: , [16948,16949]"
    },
    {
      "src": "(: ( [5301,5302]",
      "dest": "(: ( [5333,5334]"
    },
    {
      "src": "): ) [29183,29184]",
      "dest": "): ) [29233,29234]"
    },
    {
      "src": "parameter [8879,8891]",
      "dest": "parameter [8911,8923]"
    },
    {
      "src": "bytes32: bytes32 [1485,1492]",
      "dest": "bytes32: bytes32 [1425,1432]"
    },
    {
      "src": "type_name [33199,33206]",
      "dest": "type_name [33249,33256]"
    },
    {
      "src": "string: string [18275,18281]",
      "dest": "string: string [18307,18313]"
    },
    {
      "src": "parameter [26883,26887]",
      "dest": "parameter [26933,26937]"
    },
    {
      "src": "(: ( [26954,26955]",
      "dest": "(: ( [27004,27005]"
    },
    {
      "src": "): ) [28473,28474]",
      "dest": "): ) [28523,28524]"
    },
    {
      "src": "\": \" [37241,37242]",
      "dest": "\": \" [37291,37292]"
    },
    {
      "src": "\": \" [39913,39914]",
      "dest": "\": \" [39963,39964]"
    },
    {
      "src": "!: ! [39040,39041]",
      "dest": "!: ! [39090,39091]"
    },
    {
      "src": "type_cast_expression [41031,41047]",
      "dest": "type_cast_expression [41084,41100]"
    },
    {
      "src": "visibility [18870,18878]",
      "dest": "visibility [18902,18910]"
    },
    {
      "src": "bool: bool [26883,26887]",
      "dest": "bool: bool [26933,26937]"
    },
    {
      "src": "}: } [43640,43641]",
      "dest": "}: } [48269,48270]"
    },
    {
      "src": "): ) [39294,39295]",
      "dest": "): ) [39344,39345]"
    },
    {
      "src": "type_cast_expression [5379,5389]",
      "dest": "type_cast_expression [5411,5421]"
    },
    {
      "src": "call_argument [34496,34513]",
      "dest": "call_argument [34546,34563]"
    },
    {
      "src": "identifier: requireNotAutosweepAddress [42147,42173]",
      "dest": "identifier: requireNotAutosweepAddress [46948,46974]"
    },
    {
      "src": "primitive_type [33199,33206]",
      "dest": "primitive_type [33249,33256]"
    },
    {
      "src": "number_literal: 0 [29182,29183]",
      "dest": "number_literal: 0 [29232,29233]"
    },
    {
      "src": "binary_expression [13021,13026]",
      "dest": "binary_expression [13053,13058]"
    },
    {
      "src": ",: , [8095,8096]",
      "dest": ",: , [8127,8128]"
    },
    {
      "src": "): ) [10931,10932]",
      "dest": "): ) [10963,10964]"
    },
    {
      "src": "call_argument [18390,18391]",
      "dest": "call_argument [18422,18423]"
    },
    {
      "src": "identifier: returndata [20121,20131]",
      "dest": "identifier: returndata [20153,20163]"
    },
    {
      "src": "bool: bool [24779,24783]",
      "dest": "bool: bool [24829,24833]"
    },
    {
      "src": "primitive_type [19431,19438]",
      "dest": "primitive_type [19463,19470]"
    },
    {
      "src": "(: ( [37394,37395]",
      "dest": "(: ( [37444,37445]"
    },
    {
      "src": "(: ( [16675,16676]",
      "dest": "(: ( [16707,16708]"
    },
    {
      "src": "identifier: symbol [43658,43664]",
      "dest": "identifier: symbol [48287,48293]"
    },
    {
      "src": "identifier: sub [26967,26970]",
      "dest": "identifier: sub [27017,27020]"
    },
    {
      "src": ",: , [34720,34721]",
      "dest": ",: , [34770,34771]"
    },
    {
      "src": "assignment_expression [34007,34021]",
      "dest": "assignment_expression [34057,34071]"
    },
    {
      "src": "parameter [14308,14315]",
      "dest": "parameter [14340,14347]"
    },
    {
      "src": "(: ( [28021,28022]",
      "dest": "(: ( [28071,28072]"
    },
    {
      "src": "comment: /**      * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * IMPORTANT: Beware that changing an allowance with this method brings the risk      * that someone may use both the old and the new allowance by unfortunate      * transaction ordering. One possible solution to mitigate this race      * condition is to first reduce the spender's allowance to 0 and set the      * desired value afterwards:      * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      *      * Emits an {Approval} event.      */ [6495,7150]",
      "dest": "comment: /**      * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * IMPORTANT: Beware that changing an allowance with this method brings the risk      * that someone may use both the old and the new allowance by unfortunate      * transaction ordering. One possible solution to mitigate this race      * condition is to first reduce the spender's allowance to 0 and set the      * desired value afterwards:      * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      *      * Emits an {Approval} event.      */ [6527,7182]"
    },
    {
      "src": "{: { [757,758]",
      "dest": "{: { [697,698]"
    },
    {
      "src": "string_literal [37330,37377]",
      "dest": "string_literal [37380,37427]"
    },
    {
      "src": "type_name [7173,7180]",
      "dest": "type_name [7205,7212]"
    },
    {
      "src": "type_name [2011,2035]",
      "dest": "type_name [2043,2067]"
    },
    {
      "src": "visibility [31008,31016]",
      "dest": "visibility [31058,31066]"
    },
    {
      "src": "primitive_type [18820,18827]",
      "dest": "primitive_type [18852,18859]"
    },
    {
      "src": "assignment_expression [5087,5110]",
      "dest": "assignment_expression [5119,5142]"
    },
    {
      "src": "): ) [7643,7644]",
      "dest": "): ) [7675,7676]"
    },
    {
      "src": "bytes: bytes [17890,17895]",
      "dest": "bytes: bytes [17922,17927]"
    },
    {
      "src": "returns: returns [10448,10455]",
      "dest": "returns: returns [10480,10487]"
    },
    {
      "src": "(: ( [11301,11302]",
      "dest": "(: ( [11333,11334]"
    }
  ],
  "actions": [
    {
      "action": "move-tree",
      "tree": "pragma_directive [43008,43031]",
      "parent": "source_file [0,48376]",
      "at": 33
    },
    {
      "action": "update-node",
      "tree": "comment: /**  *  ████████╗██████╗ ██╗   ██╗███████╗██╗   ██╗███████╗██████╗   *  ╚══██╔══╝██╔══██╗██║   ██║██╔════╝██║   ██║██╔════╝██╔══██╗  *     ██║   ██████╔╝██║   ██║█████╗  ██║   ██║███████╗██║  ██║  *     ██║   ██╔══██╗██║   ██║██╔══╝  ██║   ██║╚════██║██║  ██║  *     ██║   ██║  ██║╚██████╔╝███████╗╚██████╔╝███████║██████╔╝  *     ╚═╝   ╚═╝  ╚═╝ ╚═════╝ ╚══════╝ ╚═════╝ ╚══════╝╚═════╝   */ [0,398]",
      "label": "/**  *  :::==== :::====  :::  === :::===== :::  === :::===  :::====   *  :::==== :::  === :::  === :::      :::  === :::     :::  ===  *    ===   =======  ===  === ======   ===  ===  =====  ===  ===  *    ===   === ===  ===  === ===      ===  ===     === ===  ===  *    ===   ===  ===  ======  ========  ======  ======  =======   */"
    },
    {
      "action": "insert-node",
      "tree": "comment: /**  * @title DelegateERC20  * Accept forwarding delegation calls from the old TrueUSD (V1) contract.  * This way the all the ERC20 functions in the old contract still works  * (except Burn).  *  * The original contract is at 0x8dd5fbCe2F6a956C3022bA3663759011Dd51e73E.  * Lines 497-574 on-chain call these delegate functions to forward calls  * This gives the delegate contract the power to change the state of the TrueUSD  * contract. The owner of this contract is the TrueUSD TokenController  * at 0x0000000000075efbee23fe2de1bd0b7690883cc9.  *  * Our audits for TrueCurrency can be found here: github.com/trusttoken/audits  */ [41147,41790]",
      "parent": "source_file [0,48376]",
      "at": 33
    },
    {
      "action": "insert-node",
      "tree": "contract_declaration [41792,45863]",
      "parent": "source_file [0,48376]",
      "at": 34
    },
    {
      "action": "insert-tree",
      "tree": "pragma_directive [47637,47660]",
      "parent": "source_file [0,48376]",
      "at": 38
    },
    {
      "action": "insert-node",
      "tree": "abstract: abstract [41792,41800]",
      "parent": "contract_declaration [41792,45863]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "contract: contract [41801,41809]",
      "parent": "contract_declaration [41792,45863]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "identifier: DelegateERC20 [41810,41823]",
      "parent": "contract_declaration [41792,45863]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "is: is [41824,41826]",
      "parent": "contract_declaration [41792,45863]",
      "at": 3
    },
    {
      "action": "move-tree",
      "tree": "inheritance_specifier [41994,42006]",
      "parent": "contract_declaration [41792,45863]",
      "at": 4
    },
    {
      "action": "insert-tree",
      "tree": "contract_body [41840,45863]",
      "parent": "contract_declaration [41792,45863]",
      "at": 5
    },
    {
      "action": "insert-tree",
      "tree": "inheritance_specifier [46794,46807]",
      "parent": "contract_declaration [46741,47633]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "comment: // reward token storage [1495,1518]",
      "parent": "contract_body [697,3649]",
      "at": 20
    },
    {
      "action": "insert-node",
      "tree": "comment: // true reward allocation [1714,1739]",
      "parent": "contract_body [697,3649]",
      "at": 24
    },
    {
      "action": "insert-node",
      "tree": "comment: // proportion: 1000 = 100% [1745,1771]",
      "parent": "contract_body [697,3649]",
      "at": 25
    },
    {
      "action": "update-node",
      "tree": "comment: /**      * @dev First 0x100000-1 addresses (0x0000000000000000000000000000000000000001       * to 0x00000000000000000000000000000000000fffff) are redemption addresses.      * @param account address to check is a redemption address      *      * All transfers to redemption address will trigger token burn.      *      * @notice For transfer to succeed, canBurn must be true for redemption address      *      * @return is `account` a redemption address      */ [40415,40885]",
      "label": "/**      * @dev First 0x100000-1 addresses (0x0000000000000000000000000000000000000001 to 0x00000000000000000000000000000000000fffff)      * are the redemption addresses.      * @param account address to check is a redemption address      *      * All transfers to redemption address will trigger token burn.      *      * @notice For transfer to succeed, canBurn must be true for redemption address      *      * @return is `account` a redemption address      */"
    },
    {
      "action": "insert-node",
      "tree": "virtual: virtual [23734,23741]",
      "parent": "function_definition [23699,23807]",
      "at": 6
    },
    {
      "action": "insert-node",
      "tree": "virtual: virtual [23918,23925]",
      "parent": "function_definition [23870,23997]",
      "at": 7
    },
    {
      "action": "delete-node",
      "tree": "comment: /**      * @dev return false if address is autosweep address      * @param recipient transfer recipient      * @param depositAddress address to deposit to      */ [42575,42741]"
    }
  ]
}