<?xml version="1.0" ?>
<matches>
  <match src="override: override [23997,24005]" dest="override: override [29621,29629]"/>
  <match src="primitive_type [19440,19447]" dest="primitive_type [17000,17007]"/>
  <match src="visibility [22939,22945]" dest="visibility [28563,28569]"/>
  <match src="identifier: amount [29398,29404]" dest="identifier: amount [35022,35028]"/>
  <match src="array_access [27993,28010]" dest="array_access [33617,33634]"/>
  <match src="type_name [800,807]" dest="type_name [20756,20763]"/>
  <match src="identifier: b [11101,11102]" dest="identifier: b [8120,8121]"/>
  <match src="array_access [39161,39186]" dest="array_access [45609,45634]"/>
  <match src="identifier: amount [34843,34849]" dest="identifier: amount [41048,41054]"/>
  <match src=",: , [34841,34842]" dest=",: , [41046,41047]"/>
  <match src="call_argument [47358,47364]" dest="call_argument [52526,52532]"/>
  <match src=",: , [25496,25497]" dest=",: , [31120,31121]"/>
  <match src="identifier: SetBurnBounds [34183,34196]" dest="identifier: SetBurnBounds [40388,40401]"/>
  <match src="]: ] [28794,28795]" dest="]: ] [34418,34419]"/>
  <match src="function_definition [15204,15823]" dest="function_definition [12964,13386]"/>
  <match src="type_name [1910,1917]" dest="type_name [21866,21873]"/>
  <match src="call_argument [28043,28083]" dest="call_argument [33667,33707]"/>
  <match src=".: . [40098,40099]" dest=".: . [46546,46547]"/>
  <match src="call_argument [37451,37498]" dest="call_argument [43881,43928]"/>
  <match src="return_statement [14469,14482]" dest="return_statement [9837,9850]"/>
  <match src="function: function [17916,17924]" dest="function: function [15479,15487]"/>
  <match src="identifier: _to [31885,31888]" dest="identifier: _to [37870,37873]"/>
  <match src="function: function [7649,7657]" dest="function: function [2260,2268]"/>
  <match src="state_mutability [43257,43261]" dest="state_mutability [17721,17725]"/>
  <match src="): ) [24022,24023]" dest="): ) [29646,29647]"/>
  <match src=",: , [39473,39474]" dest=",: , [45921,45922]"/>
  <match src="state_variable_declaration [1007,1046]" dest="state_variable_declaration [20963,21002]"/>
  <match src="returns: returns [48119,48126]" dest="returns: returns [54857,54864]"/>
  <match src="return_statement [13786,13831]" dest="return_statement [17760,17841]"/>
  <match src="(: ( [41115,41116]" dest="(: ( [47563,47564]"/>
  <match src="internal: internal [41061,41069]" dest="internal: internal [47509,47517]"/>
  <match src="call_argument [13079,13084]" dest="call_argument [11290,11295]"/>
  <match src="primitive_type [31954,31961]" dest="primitive_type [37948,37955]"/>
  <match src="override_specifier [48015,48023]" dest="override_specifier [54758,54766]"/>
  <match src="): ) [18508,18509]" dest="): ) [16068,16069]"/>
  <match src="identifier: functionCall [18330,18342]" dest="identifier: functionCall [15891,15903]"/>
  <match src="call_argument [19059,19064]" dest="call_argument [16619,16624]"/>
  <match src="override: override [25548,25556]" dest="override: override [31172,31180]"/>
  <match src="): ) [34683,34684]" dest="): ) [40888,40889]"/>
  <match src="primitive_type [34000,34007]" dest="primitive_type [40196,40203]"/>
  <match src="primitive_type [18343,18350]" dest="primitive_type [15904,15911]"/>
  <match src="): ) [31545,31546]" dest="): ) [37521,37522]"/>
  <match src="function_body [24024,24068]" dest="function_body [29648,29692]"/>
  <match src="primitive_type [31920,31927]" dest="primitive_type [37914,37921]"/>
  <match src="parameter [12361,12370]" dest="parameter [9730,9739]"/>
  <match src="call_expression [24926,24938]" dest="call_expression [30550,30562]"/>
  <match src="): ) [42220,42221]" dest="): ) [47937,47938]"/>
  <match src="): ) [28200,28201]" dest="): ) [33824,33825]"/>
  <match src="type_name [30108,30115]" dest="type_name [35732,35739]"/>
  <match src="&quot;: &quot; [45794,45795]" dest="&quot;: &quot; [51711,51712]"/>
  <match src=",: , [28192,28193]" dest=",: , [33816,33817]"/>
  <match src="identifier: account [29428,29435]" dest="identifier: account [35052,35059]"/>
  <match src="memory: memory [13007,13013]" dest="memory: memory [11218,11224]"/>
  <match src="expression_statement [37510,37533]" dest="expression_statement [43940,43963]"/>
  <match src="identifier: isBlacklisted [39909,39922]" dest="identifier: isBlacklisted [46357,46370]"/>
  <match src="identifier: amount [33374,33380]" dest="identifier: amount [39570,39576]"/>
  <match src="identifier: newOwner [5203,5211]" dest="identifier: newOwner [25514,25522]"/>
  <match src="comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP.  */ [5532,5604]" dest="comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP.  */ [143,215]"/>
  <match src="call_argument [26327,26377]" dest="call_argument [31951,32001]"/>
  <match src="uint256: uint256 [13051,13058]" dest="uint256: uint256 [11262,11269]"/>
  <match src="call_expression [26295,26378]" dest="call_expression [31919,32002]"/>
  <match src="return: return [8896,8902]" dest="return: return [4262,4268]"/>
  <match src="identifier: div [12974,12977]" dest="identifier: div [11185,11188]"/>
  <match src="identifier: _allowances [26327,26338]" dest="identifier: _allowances [31951,31962]"/>
  <match src="call_expression [42270,42283]" dest="call_expression [52396,52409]"/>
  <match src="return_type_definition [48119,48134]" dest="return_type_definition [54857,54872]"/>
  <match src="(: ( [48190,48191]" dest="(: ( [54928,54929]"/>
  <match src="call_argument [34843,34849]" dest="call_argument [41048,41054]"/>
  <match src="call_argument [39389,39417]" dest="call_argument [45837,45865]"/>
  <match src="[: [ [25680,25681]" dest="[: [ [31304,31305]"/>
  <match src="string_literal [48362,48368]" dest="string_literal [55100,55106]"/>
  <match src="call_argument [19648,19654]" dest="call_argument [17786,17792]"/>
  <match src="[: [ [39922,39923]" dest="[: [ [46370,46371]"/>
  <match src="(: ( [32574,32575]" dest="(: ( [38761,38762]"/>
  <match src="!: ! [39908,39909]" dest="!: ! [46356,46357]"/>
  <match src="solidity_version:  0.6.10 [47655,47662]" dest="solidity_version:  0.6.10 [54272,54279]"/>
  <match src="string_literal [16881,16912]" dest="string_literal [14444,14475]"/>
  <match src="internal: internal [14386,14394]" dest="internal: internal [9121,9129]"/>
  <match src="primitive_type [933,940]" dest="primitive_type [20889,20896]"/>
  <match src="&quot;: &quot; [19066,19067]" dest="&quot;: &quot; [16626,16627]"/>
  <match src="): ) [26376,26377]" dest="): ) [32000,32001]"/>
  <match src="primitive_type [7325,7329]" dest="primitive_type [1936,1940]"/>
  <match src="internal: internal [8949,8957]" dest="internal: internal [4315,4323]"/>
  <match src="indexed: indexed [36536,36543]" dest="indexed: indexed [42957,42964]"/>
  <match src="primitive_type [1743,1750]" dest="primitive_type [21699,21706]"/>
  <match src="function: function [31841,31849]" dest="function: function [37826,37834]"/>
  <match src="identifier: spender [6547,6554]" dest="identifier: spender [1158,1165]"/>
  <match src="expression_statement [4463,4482]" dest="expression_statement [24772,24791]"/>
  <match src="}: } [18516,18517]" dest="}: } [16076,16077]"/>
  <match src="&quot;: &quot; [25748,25749]" dest="&quot;: &quot; [31372,31373]"/>
  <match src="expression_statement [34058,34118]" dest="expression_statement [40263,40323]"/>
  <match src="identifier: owner [5434,5439]" dest="identifier: owner [25747,25752]"/>
  <match src="type_name [27689,27696]" dest="type_name [33313,33320]"/>
  <match src="primitive_type [39849,39856]" dest="primitive_type [46297,46304]"/>
  <match src="): ) [1532,1533]" dest="): ) [21488,21489]"/>
  <match src="uint256: uint256 [5750,5757]" dest="uint256: uint256 [361,368]"/>
  <match src="): ) [17146,17147]" dest="): ) [14709,14710]"/>
  <match src="identifier: BurnableTokenWithBounds [32323,32346]" dest="identifier: BurnableTokenWithBounds [38510,38533]"/>
  <match src="identifier: account [38505,38512]" dest="identifier: account [44953,44960]"/>
  <match src="array_access [40417,40433]" dest="array_access [46865,46881]"/>
  <match src="visibility [8837,8845]" dest="visibility [4203,4211]"/>
  <match src=",: , [12359,12360]" dest=",: , [18693,18694]"/>
  <match src="event: event [36510,36515]" dest="event: event [42931,42936]"/>
  <match src="}: } [13242,13243]" dest="}: } [11340,11341]"/>
  <match src="function_body [30141,30404]" dest="function_body [35765,36028]"/>
  <match src="type_name [8223,8230]" dest="type_name [2834,2841]"/>
  <match src=",: , [39315,39316]" dest=",: , [45763,45764]"/>
  <match src="uint256: uint256 [31920,31927]" dest="uint256: uint256 [37914,37921]"/>
  <match src="primitive_type [12978,12985]" dest="primitive_type [11189,11196]"/>
  <match src="function_body [31566,31620]" dest="function_body [37551,37605]"/>
  <match src="string_literal [48256,48265]" dest="string_literal [54994,55003]"/>
  <match src="]: ] [29435,29436]" dest="]: ] [35059,35060]"/>
  <match src="event_paramater [36787,36800]" dest="event_paramater [43208,43221]"/>
  <match src="primitive_type [41155,41162]" dest="primitive_type [47603,47610]"/>
  <match src="primitive_type [19730,19737]" dest="primitive_type [17677,17684]"/>
  <match src="primitive_type [14336,14343]" dest="primitive_type [9099,9106]"/>
  <match src="state_mutability [48024,48028]" dest="state_mutability [54753,54757]"/>
  <match src="returns: returns [22959,22966]" dest="returns: returns [28583,28590]"/>
  <match src="identifier: symbol [22930,22936]" dest="identifier: symbol [28554,28560]"/>
  <match src="uint256: uint256 [14409,14416]" dest="uint256: uint256 [9144,9151]"/>
  <match src="virtual: virtual [23648,23655]" dest="virtual: virtual [29272,29279]"/>
  <match src="return: return [48355,48361]" dest="return: return [55093,55099]"/>
  <match src="override_specifier [40389,40397]" dest="override_specifier [46837,46845]"/>
  <match src="type_name [36767,36774]" dest="type_name [43188,43195]"/>
  <match src="comment: // solhint-disable-next-line no-inline-assembly [15652,15699]" dest="comment: // solhint-disable-next-line no-inline-assembly [13255,13302]"/>
  <match src="primitive_type [36787,36794]" dest="primitive_type [43208,43215]"/>
  <match src="}: } [41186,41187]" dest="}: } [47634,47635]"/>
  <match src="pure: pure [22773,22777]" dest="pure: pure [28397,28401]"/>
  <match src="{: { [4452,4453]" dest="{: { [24761,24762]"/>
  <match src="parameter [44874,44892]" dest="parameter [53261,53281]"/>
  <match src="comment: /**      * @dev Requere neither accounts to be blacklisted before approval      * @param owner address of owner giving approval      * @param spender address of spender to approve for      * @param amount amount of tokens to approve      */ [39520,39765]" dest="comment: /**      * @dev Requere neither accounts to be blacklisted before approval      * @param owner address of owner giving approval      * @param spender address of spender to approve for      * @param amount amount of tokens to approve      */ [45968,46213]"/>
  <match src="function: function [6144,6152]" dest="function: function [755,763]"/>
  <match src="}: } [20679,20680]" dest="}: } [20218,20219]"/>
  <match src="primitive_type [1122,1129]" dest="primitive_type [21078,21085]"/>
  <match src="comment: // reward token storage [1564,1587]" dest="comment: // reward token storage [21520,21543]"/>
  <match src="public: public [1095,1101]" dest="public: public [21051,21057]"/>
  <match src="&quot;: &quot; [48264,48265]" dest="&quot;: &quot; [55002,55003]"/>
  <match src="primitive_type [48223,48229]" dest="primitive_type [54961,54967]"/>
  <match src="identifier: _approve [24917,24925]" dest="identifier: _approve [30541,30549]"/>
  <match src="=: = [34136,34137]" dest="=: = [40341,40342]"/>
  <match src="type_name [10963,10970]" dest="type_name [10360,10367]"/>
  <match src="type_name [13721,13728]" dest="type_name [7984,7991]"/>
  <match src="primitive_type [46902,46909]" dest="primitive_type [51044,51051]"/>
  <match src="identifier: Mint [36762,36766]" dest="identifier: Mint [43183,43187]"/>
  <match src="yul_function_call [20520,20564]" dest="yul_function_call [20059,20103]"/>
  <match src="parameter [37883,37902]" dest="parameter [44313,44332]"/>
  <match src="identifier: amount [34703,34709]" dest="identifier: amount [40908,40914]"/>
  <match src="function_body [33345,33389]" dest="function_body [39541,39585]"/>
  <match src="string [45794,45833]" dest="string [51711,51755]"/>
  <match src="&quot;: &quot; [10626,10627]" dest="&quot;: &quot; [8096,8097]"/>
  <match src="call_argument [30262,30298]" dest="call_argument [35886,35922]"/>
  <match src="primitive_type [27786,27793]" dest="primitive_type [33410,33417]"/>
  <match src="): ) [30259,30260]" dest="): ) [35883,35884]"/>
  <match src="primitive_type [39013,39020]" dest="primitive_type [45461,45468]"/>
  <match src="parameter [8868,8883]" dest="parameter [4234,4249]"/>
  <match src=",: , [7704,7705]" dest=",: , [2315,2316]"/>
  <match src="memory: memory [10981,10987]" dest="memory: memory [10378,10384]"/>
  <match src="primitive_type [26938,26945]" dest="primitive_type [32562,32569]"/>
  <match src="=: = [47976,47977]" dest="=: = [54714,54715]"/>
  <match src="identifier: a [11693,11694]" dest="identifier: a [8470,8471]"/>
  <match src="{: { [20247,20248]" dest="{: { [19786,19787]"/>
  <match src="identifier: account [41163,41170]" dest="identifier: account [47611,47618]"/>
  <match src="type_name [24834,24841]" dest="type_name [30458,30465]"/>
  <match src="boolean_literal [27168,27172]" dest="boolean_literal [32792,32796]"/>
  <match src="{: { [17037,17038]" dest="{: { [14600,14601]"/>
  <match src="state_mutability [41070,41074]" dest="state_mutability [47518,47522]"/>
  <match src="internal: internal [11002,11010]" dest="internal: internal [10399,10407]"/>
  <match src="return_statement [15764,15816]" dest="return_statement [13363,13379]"/>
  <match src="(: ( [28831,28832]" dest="(: ( [34455,34456]"/>
  <match src="(: ( [7739,7740]" dest="(: ( [2350,2351]"/>
  <match src="type_name [40347,40354]" dest="type_name [46795,46802]"/>
  <match src="view: view [6565,6569]" dest="view: view [1176,1180]"/>
  <match src="identifier: account [37441,37448]" dest="identifier: account [43871,43878]"/>
  <match src="): ) [19109,19110]" dest="): ) [16669,16670]"/>
  <match src="constant: constant [36343,36351]" dest="constant: constant [42764,42772]"/>
  <match src="string [19881,19912]" dest="string [17206,17237]"/>
  <match src="primitive_type [47952,47957]" dest="primitive_type [54690,54695]"/>
  <match src="(: ( [23959,23960]" dest="(: ( [29583,29584]"/>
  <match src="return_type_definition [42234,42251]" dest="return_type_definition [47953,47970]"/>
  <match src="state_variable_declaration [800,828]" dest="state_variable_declaration [20756,20784]"/>
  <match src="expression_statement [33356,33382]" dest="expression_statement [39552,39578]"/>
  <match src="[: [ [24653,24654]" dest="[: [ [30277,30278]"/>
  <match src="call_argument [27109,27148]" dest="call_argument [32733,32772]"/>
  <match src="): ) [31966,31967]" dest="): ) [37960,37961]"/>
  <match src="type_name [15224,15231]" dest="type_name [12984,12991]"/>
  <match src=",: , [11412,11413]" dest=",: , [8410,8411]"/>
  <match src="identifier: value [19059,19064]" dest="identifier: value [16619,16624]"/>
  <match src="boolean_literal [26396,26400]" dest="boolean_literal [32020,32024]"/>
  <match src="): ) [11032,11033]" dest="): ) [10429,10430]"/>
  <match src="identifier: data [18372,18376]" dest="identifier: data [15933,15937]"/>
  <match src="variable_declaration_statement [17004,17059]" dest="variable_declaration_statement [14567,14622]"/>
  <match src="true: true [24444,24448]" dest="true: true [30068,30072]"/>
  <match src="(: ( [48127,48128]" dest="(: ( [54865,54866]"/>
  <match src="identifier: recipient [17023,17032]" dest="identifier: recipient [14586,14595]"/>
  <match src="type_name [24318,24325]" dest="type_name [29942,29949]"/>
  <match src="(: ( [25698,25699]" dest="(: ( [31322,31323]"/>
  <match src="identifier: owner [24647,24652]" dest="identifier: owner [30271,30276]"/>
  <match src="state_variable_declaration [1486,1556]" dest="state_variable_declaration [21442,21512]"/>
  <match src="(: ( [13078,13079]" dest="(: ( [11289,11290]"/>
  <match src="call_expression [39900,39975]" dest="call_expression [46348,46423]"/>
  <match src="primitive_type [1683,1690]" dest="primitive_type [21639,21646]"/>
  <match src="function_body [39061,39512]" dest="function_body [45509,45960]"/>
  <match src="): ) [20024,20025]" dest="): ) [17349,17350]"/>
  <match src="bool: bool [38452,38456]" dest="bool: bool [44891,44895]"/>
  <match src="visibility [37904,37912]" dest="visibility [44334,44342]"/>
  <match src="public: public [24334,24340]" dest="public: public [29958,29964]"/>
  <match src=".: . [26361,26362]" dest=".: . [31985,31986]"/>
  <match src=",: , [19064,19065]" dest=",: , [16624,16625]"/>
  <match src="identifier: value [19448,19453]" dest="identifier: value [17008,17013]"/>
  <match src="string [28043,28083]" dest="string [33667,33707]"/>
  <match src="array_access [29418,29436]" dest="array_access [35042,35060]"/>
  <match src="primitive_type [1447,1454]" dest="primitive_type [21403,21410]"/>
  <match src="function: function [29200,29208]" dest="function: function [34824,34832]"/>
  <match src="binary_expression [39994,40032]" dest="binary_expression [46442,46480]"/>
  <match src="member_expression [31979,31993]" dest="member_expression [37973,37987]"/>
  <match src="): ) [10069,10070]" dest="): ) [7542,7543]"/>
  <match src="identifier: ProxyStorage [3999,4011]" dest="identifier: ProxyStorage [24308,24320]"/>
  <match src="function_definition [33306,33389]" dest="function_definition [39493,39585]"/>
  <match src="function: function [10036,10044]" dest="function: function [7509,7517]"/>
  <match src="): ) [29246,29247]" dest="): ) [34870,34871]"/>
  <match src="uint256: uint256 [11025,11032]" dest="uint256: uint256 [10422,10429]"/>
  <match src="&quot;: &quot; [13803,13804]" dest="&quot;: &quot; [17800,17801]"/>
  <match src="type_name [10974,10980]" dest="type_name [10371,10377]"/>
  <match src="primitive_type [1428,1435]" dest="primitive_type [21384,21391]"/>
  <match src="function_body [15270,15823]" dest="function_body [13030,13386]"/>
  <match src="&quot;: &quot; [30297,30298]" dest="&quot;: &quot; [35921,35922]"/>
  <match src="): ) [24425,24426]" dest="): ) [30049,30050]"/>
  <match src="call_argument [27092,27107]" dest="call_argument [32716,32731]"/>
  <match src="(: ( [19541,19542]" dest="(: ( [17101,17102]"/>
  <match src="return_type_definition [48320,48343]" dest="return_type_definition [55058,55081]"/>
  <match src="identifier: amount [29240,29246]" dest="identifier: amount [34864,34870]"/>
  <match src="identifier: b [12997,12998]" dest="identifier: b [11208,11209]"/>
  <match src="parameter [28505,28520]" dest="parameter [34129,34144]"/>
  <match src="): ) [14416,14417]" dest="): ) [9151,9152]"/>
  <match src="function_body [24617,24670]" dest="function_body [30241,30294]"/>
  <match src="identifier: amount [37562,37568]" dest="identifier: amount [43992,43998]"/>
  <match src="primitive_type [6215,6219]" dest="primitive_type [826,830]"/>
  <match src="uint256: uint256 [37283,37290]" dest="uint256: uint256 [43704,43711]"/>
  <match src="): ) [4535,4536]" dest="): ) [24844,24845]"/>
  <match src="primitive_type [47539,47546]" dest="primitive_type [51786,51793]"/>
  <match src="primitive_type [24367,24371]" dest="primitive_type [29991,29995]"/>
  <match src="type_name [39849,39856]" dest="type_name [46297,46304]"/>
  <match src="event_definition [8160,8238]" dest="event_definition [2771,2849]"/>
  <match src="call_expression [17023,17058]" dest="call_expression [14586,14621]"/>
  <match src="constant: constant [47923,47931]" dest="constant: constant [54661,54669]"/>
  <match src="identifier: registry_Deprecated [1130,1149]" dest="identifier: registry_Deprecated [21086,21105]"/>
  <match src="identifier: spender [30331,30338]" dest="identifier: spender [35955,35962]"/>
  <match src="call_argument [34636,34683]" dest="call_argument [40841,40888]"/>
  <match src="identifier: initialized [841,852]" dest="identifier: initialized [20797,20808]"/>
  <match src=",: , [13730,13731]" dest=",: , [7993,7994]"/>
  <match src="user_defined_type [22572,22588]" dest="user_defined_type [28196,28212]"/>
  <match src="identifier: owner [4463,4468]" dest="identifier: owner [24772,24777]"/>
  <match src="}: } [48272,48273]" dest="}: } [55010,55011]"/>
  <match src="(: ( [27003,27004]" dest="(: ( [32627,32628]"/>
  <match src="identifier: amount [30116,30122]" dest="identifier: amount [35740,35746]"/>
  <match src="(: ( [8174,8175]" dest="(: ( [2785,2786]"/>
  <match src="call_argument [26304,26316]" dest="call_argument [31928,31940]"/>
  <match src="call_argument [18044,18048]" dest="call_argument [15605,15609]"/>
  <match src="indexed: indexed [36775,36782]" dest="indexed: indexed [43196,43203]"/>
  <match src="identifier: data [18487,18491]" dest="identifier: data [16047,16051]"/>
  <match src="]: ] [24661,24662]" dest="]: ] [30285,30286]"/>
  <match src="(: ( [28034,28035]" dest="(: ( [33658,33659]"/>
  <match src="primitive_type [30076,30083]" dest="primitive_type [35700,35707]"/>
  <match src="binary_expression [10150,10156]" dest="binary_expression [7623,7629]"/>
  <match src="bool: bool [836,840]" dest="bool: bool [20792,20796]"/>
  <match src="public: public [25533,25539]" dest="public: public [31157,31163]"/>
  <match src="(: ( [27040,27041]" dest="(: ( [32664,32665]"/>
  <match src="identifier: minimumGasPriceForFutureRefunds_Deprecated [1325,1367]" dest="identifier: minimumGasPriceForFutureRefunds_Deprecated [21281,21323]"/>
  <match src="event_paramater [32599,32612]" dest="event_paramater [38786,38799]"/>
  <match src="return_statement [23688,23698]" dest="return_statement [29312,29322]"/>
  <match src="call_argument [19534,19564]" dest="call_argument [17094,17124]"/>
  <match src="(: ( [7670,7671]" dest="(: ( [2281,2282]"/>
  <match src="identifier: this [31962,31966]" dest="identifier: this [37956,37960]"/>
  <match src="identifier: to [7976,7978]" dest="identifier: to [2587,2589]"/>
  <match src="call_expression [39389,39417]" dest="call_expression [45837,45865]"/>
  <match src="primitive_type [27004,27008]" dest="primitive_type [32628,32632]"/>
  <match src="function_definition [25460,25781]" dest="function_definition [31084,31405]"/>
  <match src="event: event [4200,4205]" dest="event: event [24509,24514]"/>
  <match src="type_name [48329,48335]" dest="type_name [55067,55073]"/>
  <match src="identifier: finOpSupply_Deprecated [1752,1774]" dest="identifier: finOpSupply_Deprecated [21708,21730]"/>
  <match src="=&gt;: =&gt; [1455,1457]" dest="=&gt;: =&gt; [21411,21413]"/>
  <match src="): ) [10565,10566]" dest="): ) [12097,12098]"/>
  <match src="returns: returns [48320,48327]" dest="returns: returns [55058,55065]"/>
  <match src="call_argument [19045,19051]" dest="call_argument [16605,16611]"/>
  <match src="call_argument [29582,29589]" dest="call_argument [35206,35213]"/>
  <match src="if: if [39242,39244]" dest="if: if [45690,45692]"/>
  <match src="primitive_type [8175,8182]" dest="primitive_type [2786,2793]"/>
  <match src="&quot;: &quot; [39104,39105]" dest="&quot;: &quot; [45552,45553]"/>
  <match src="==: == [4688,4690]" dest="==: == [24997,24999]"/>
  <match src="private: private [1269,1276]" dest="private: private [21225,21232]"/>
  <match src="uint256: uint256 [19440,19447]" dest="uint256: uint256 [17000,17007]"/>
  <match src="[: [ [28786,28787]" dest="[: [ [34410,34411]"/>
  <match src="=: = [38514,38515]" dest="=: = [44962,44963]"/>
  <match src="(: ( [22967,22968]" dest="(: ( [28591,28592]"/>
  <match src="true [24974,24978]" dest="true [30598,30602]"/>
  <match src="expression_statement [39451,39494]" dest="expression_statement [45899,45942]"/>
  <match src="comment: /**      * @dev Atomically increases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [25789,26184]" dest="comment: /**      * @dev Atomically increases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [31413,31808]"/>
  <match src="(: ( [26303,26304]" dest="(: ( [31927,31928]"/>
  <match src="expression_statement [16840,16914]" dest="expression_statement [14403,14477]"/>
  <match src="=: = [36414,36415]" dest="=: = [42835,42836]"/>
  <match src="comment: // According to EIP-1052, 0x0 is the value returned for not-yet created accounts [15281,15361]" dest="comment: // This method relies on extcodesize, which returns 0 for contracts in [13041,13111]"/>
  <match src="[: [ [40424,40425]" dest="[: [ [46872,46873]"/>
  <match src="bytes: bytes [20001,20006]" dest="bytes: bytes [17326,17331]"/>
  <match src="identifier: sender [27954,27960]" dest="identifier: sender [33578,33584]"/>
  <match src="array_access [39908,39929]" dest="array_access [46356,46377]"/>
  <match src="}: } [34857,34858]" dest="}: } [41062,41063]"/>
  <match src="): ) [24865,24866]" dest="): ) [30489,30490]"/>
  <match src="call_expression [39451,39493]" dest="call_expression [45899,45941]"/>
  <match src="internal: internal [47460,47468]" dest="internal: internal [51060,51068]"/>
  <match src="{: { [12404,12405]" dest="{: { [18746,18747]"/>
  <match src="emit: emit [28161,28165]" dest="emit: emit [33785,33789]"/>
  <match src="visibility [6197,6205]" dest="visibility [808,816]"/>
  <match src="(: ( [15223,15224]" dest="(: ( [12983,12984]"/>
  <match src="identifier: require [37329,37336]" dest="identifier: require [43759,43766]"/>
  <match src="=: = [28011,28012]" dest="=: = [33635,33636]"/>
  <match src="(: ( [6578,6579]" dest="(: ( [1189,1190]"/>
  <match src="identifier: isBlacklisted [39081,39094]" dest="identifier: isBlacklisted [45529,45542]"/>
  <match src="mapping: mapping [1645,1652]" dest="mapping: mapping [21601,21608]"/>
  <match src="type_name [46874,46881]" dest="type_name [49168,49175]"/>
  <match src="emit_statement [29568,29611]" dest="emit_statement [35192,35235]"/>
  <match src="(: ( [13050,13051]" dest="(: ( [11261,11262]"/>
  <match src="primitive_type [6524,6531]" dest="primitive_type [1135,1142]"/>
  <match src="uint256: uint256 [24318,24325]" dest="uint256: uint256 [29942,29949]"/>
  <match src="identifier: _msgSender [8824,8834]" dest="identifier: _msgSender [4190,4200]"/>
  <match src="(: ( [25481,25482]" dest="(: ( [31105,31106]"/>
  <match src=",: , [11794,11795]" dest=",: , [8543,8544]"/>
  <match src="identifier: approve [24826,24833]" dest="identifier: approve [30450,30457]"/>
  <match src="(: ( [25592,25593]" dest="(: ( [31216,31217]"/>
  <match src="call_expression [39153,39229]" dest="call_expression [45601,45677]"/>
  <match src="call_argument [27776,27796]" dest="call_argument [33400,33420]"/>
  <match src="identifier: _beforeTokenTransfer [29356,29376]" dest="identifier: _beforeTokenTransfer [34980,35000]"/>
  <match src="primitive_type [2075,2082]" dest="primitive_type [22031,22038]"/>
  <match src="]: ] [40016,40017]" dest="]: ] [46464,46465]"/>
  <match src="string_literal [11796,11831]" dest="string_literal [8545,8580]"/>
  <match src="call_argument [18487,18491]" dest="call_argument [16047,16051]"/>
  <match src="primitive_type [2120,2127]" dest="primitive_type [22076,22083]"/>
  <match src="binary_expression [34617,34634]" dest="binary_expression [40822,40839]"/>
  <match src="identifier: spender [30099,30106]" dest="identifier: spender [35723,35730]"/>
  <match src="identifier: a [12426,12427]" dest="identifier: target [18785,18791]"/>
  <match src="bool: bool [36553,36557]" dest="bool: bool [42974,42978]"/>
  <match src="call_argument [5410,5422]" dest="call_argument [25723,25735]"/>
  <match src="): ) [4656,4657]" dest="): ) [24965,24966]"/>
  <match src="type_name [12395,12402]" dest="type_name [9764,9771]"/>
  <match src="emit: emit [37543,37547]" dest="emit: emit [43973,43977]"/>
  <match src="=&gt;: =&gt; [2128,2130]" dest="=&gt;: =&gt; [22084,22086]"/>
  <match src="boolean_literal [44519,44523]" dest="boolean_literal [6614,6618]"/>
  <match src="): ) [24371,24372]" dest="): ) [29995,29996]"/>
  <match src="parenthesized_expression [20629,20643]" dest="parenthesized_expression [20168,20182]"/>
  <match src="(: ( [34796,34797]" dest="(: ( [41001,41002]"/>
  <match src="call_argument [28673,28674]" dest="call_argument [34297,34298]"/>
  <match src=":=: := [15729,15731]" dest=":=: := [13328,13330]"/>
  <match src="type_name [36787,36794]" dest="type_name [43208,43215]"/>
  <match src="call_argument [24408,24417]" dest="call_argument [30032,30041]"/>
  <match src=".: . [31580,31581]" dest=".: . [37565,37566]"/>
  <match src="uint256: uint256 [32882,32889]" dest="uint256: uint256 [39069,39076]"/>
  <match src="}: } [38531,38532]" dest="}: } [44979,44980]"/>
  <match src="}: } [3717,3718]" dest="}: } [23844,23845]"/>
  <match src="call_argument [47601,47624]" dest="call_argument [51928,51965]"/>
  <match src="string_literal [37451,37498]" dest="string_literal [43881,43928]"/>
  <match src="type_name [1458,1465]" dest="type_name [21414,21421]"/>
  <match src="(: ( [15743,15744]" dest="(: ( [13342,13343]"/>
  <match src="identifier: spender [26318,26325]" dest="identifier: spender [31942,31949]"/>
  <match src="): ) [28859,28860]" dest="): ) [34483,34484]"/>
  <match src="parameter [48329,48342]" dest="parameter [55067,55080]"/>
  <match src="(: ( [20530,20531]" dest="(: ( [20069,20070]"/>
  <match src="internal: internal [39035,39043]" dest="internal: internal [45483,45491]"/>
  <match src="contract_declaration [8782,9165]" dest="contract_declaration [4148,4531]"/>
  <match src="&quot;: &quot; [39227,39228]" dest="&quot;: &quot; [45675,45676]"/>
  <match src="memory: memory [19752,19758]" dest="memory: memory [17699,17705]"/>
  <match src="bool: bool [19987,19991]" dest="bool: bool [17312,17316]"/>
  <match src="assignment_expression [29418,29507]" dest="assignment_expression [35042,35131]"/>
  <match src="(: ( [24607,24608]" dest="(: ( [30231,30232]"/>
  <match src="identifier: from [7954,7958]" dest="identifier: from [2565,2569]"/>
  <match src="}: } [34860,34861]" dest="}: } [41065,41066]"/>
  <match src="array_access [26327,26352]" dest="array_access [31951,31976]"/>
  <match src="parameter [22968,22981]" dest="parameter [28592,28605]"/>
  <match src="identifier: TrueUSD [47867,47874]" dest="identifier: TrueUSD [54606,54613]"/>
  <match src="assignment_expression [28706,28745]" dest="assignment_expression [34330,34369]"/>
  <match src="address: address [39823,39830]" dest="address: address [46271,46278]"/>
  <match src="(: ( [37265,37266]" dest="(: ( [43686,43687]"/>
  <match src="identifier: isBlacklisted [37338,37351]" dest="identifier: isBlacklisted [43768,43781]"/>
  <match src="return_type_definition [19492,19514]" dest="return_type_definition [17052,17074]"/>
  <match src="identifier: owner [40108,40113]" dest="identifier: owner [46556,46561]"/>
  <match src="type_name [8868,8883]" dest="type_name [4234,4249]"/>
  <match src="override: override [48200,48208]" dest="override: override [54943,54951]"/>
  <match src="address: address [8868,8875]" dest="address: address [4234,4241]"/>
  <match src="call_argument [34703,34720]" dest="call_argument [40908,40925]"/>
  <match src="uint256: uint256 [28522,28529]" dest="uint256: uint256 [34146,34153]"/>
  <match src="function_definition [33977,34216]" dest="function_definition [40173,40421]"/>
  <match src="parameter [13051,13058]" dest="parameter [11262,11269]"/>
  <match src="parameter [5750,5757]" dest="parameter [361,368]"/>
  <match src="uint256: uint256 [1743,1750]" dest="uint256: uint256 [21699,21706]"/>
  <match src="call_argument [28574,28595]" dest="call_argument [34198,34219]"/>
  <match src="comment: /**      * @dev Allows the current owner to set the pendingOwner address.      * @param newOwner The address to transfer ownership to.      */ [4964,5109]" dest="comment: /**      * @dev Allows the current owner to set the pendingOwner address.      * @param newOwner The address to transfer ownership to.      */ [25273,25418]"/>
  <match src="internal: internal [19483,19491]" dest="internal: internal [17043,17051]"/>
  <match src="): ) [4710,4711]" dest="): ) [25019,25020]"/>
  <match src="variable_declaration_statement [10114,10132]" dest="variable_declaration_statement [7587,7605]"/>
  <match src="comment: /* Additionally, we have several keccak-based storage locations.      * If you add more keccak-based storage mappings, such as mappings, you must document them here.      * If the length of the keccak input is the same as an existing mapping, it is possible there could be a preimage collision.      * A preimage collision can be used to attack the contract by treating one storage location as another,      * which would always be a critical issue.      * Carefully examine future keccak-based storage to ensure there can be no preimage collisions.      *******************************************************************************************************      ** length     input                                                         usage      *******************************************************************************************************      ** 19         &quot;trueXXX.proxy.owner&quot;                                         Proxy Owner      ** 27         &quot;trueXXX.pending.proxy.owner&quot;                                 Pending Proxy Owner      ** 28         &quot;trueXXX.proxy.implementation&quot;                                Proxy Implementation      ** 32         uint256(11)                                                   gasRefundPool_Deprecated      ** 64         uint256(address),uint256(14)                                  balanceOf      ** 64         uint256(address),keccak256(uint256(address),uint256(15))      allowance      ** 64         uint256(address),keccak256(bytes32,uint256(16))               attributes      **/ [2160,3715]" dest="comment: /* Additionally, we have several keccak-based storage locations.      * If you add more keccak-based storage mappings, such as mappings, you must document them here.      * If the length of the keccak input is the same as an existing mapping, it is possible there could be a preimage collision.      * A preimage collision can be used to attack the contract by treating one storage location as another,      * which would always be a critical issue.      * Carefully examine future keccak-based storage to ensure there can be no preimage collisions.      *******************************************************************************************************      ** length     input                                                         usage      *******************************************************************************************************      ** 19         &quot;trueXXX.proxy.owner&quot;                                         Proxy Owner      ** 27         &quot;trueXXX.pending.proxy.owner&quot;                                 Pending Proxy Owner      ** 28         &quot;trueXXX.proxy.implementation&quot;                                Proxy Implementation      ** 32         uint256(11)                                                   gasRefundPool_Deprecated      ** 64         uint256(address),uint256(14)                                  balanceOf      ** 64         uint256(address),keccak256(uint256(address),uint256(15))      allowance      ** 64         uint256(address),keccak256(bytes32,uint256(16))               attributes      **/ [22287,23842]"/>
  <match src="{: { [32365,32366]" dest="{: { [38552,38553]"/>
  <match src="identifier: c [11093,11094]" dest="identifier: c [5642,5643]"/>
  <match src="type_cast_expression [4518,4528]" dest="type_cast_expression [24827,24837]"/>
  <match src="(: ( [27075,27076]" dest="(: ( [32699,32700]"/>
  <match src="contract_body [5623,8241]" dest="contract_body [234,2852]"/>
  <match src="identifier: ERC20 [22563,22568]" dest="identifier: ERC20 [28187,28192]"/>
  <match src="): ) [39141,39142]" dest="): ) [45589,45590]"/>
  <match src="type_name [1439,1466]" dest="type_name [21395,21422]"/>
  <match src="type_name [22787,22793]" dest="type_name [28411,28417]"/>
  <match src="return_statement [44512,44524]" dest="return_statement [6606,6623]"/>
  <match src="visibility [30124,30132]" dest="visibility [35748,35756]"/>
  <match src="): ) [39033,39034]" dest="): ) [45481,45482]"/>
  <match src="): ) [1402,1403]" dest="): ) [21358,21359]"/>
  <match src="type_name [31101,31108]" dest="type_name [36725,36732]"/>
  <match src="identifier: require [14429,14436]" dest="identifier: require [9784,9791]"/>
  <match src="}: } [13837,13838]" dest="}: } [17847,17848]"/>
  <match src="call_expression [18456,18509]" dest="call_expression [16017,16069]"/>
  <match src="function_definition [22921,22983]" dest="function_definition [28545,28607]"/>
  <match src="call_argument [4677,4696]" dest="call_argument [24986,25005]"/>
  <match src="): ) [48105,48106]" dest="): ) [54843,54844]"/>
  <match src="member_expression [28721,28737]" dest="member_expression [34345,34361]"/>
  <match src="internal: internal [30124,30132]" dest="internal: internal [35748,35756]"/>
  <match src="return: return [10578,10584]" dest="return: return [8109,8115]"/>
  <match src="public: public [48107,48113]" dest="public: public [54845,54851]"/>
  <match src="[: [ [28127,28128]" dest="[: [ [33751,33752]"/>
  <match src="primitive_type [38960,38967]" dest="primitive_type [45408,45415]"/>
  <match src="comment: /**      * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * IMPORTANT: Beware that changing an allowance with this method brings the risk      * that someone may use both the old and the new allowance by unfortunate      * transaction ordering. One possible solution to mitigate this race      * condition is to first reduce the spender's allowance to 0 and set the      * desired value afterwards:      * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      *      * Emits an {Approval} event.      */ [6596,7251]" dest="comment: /**      * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * IMPORTANT: Beware that changing an allowance with this method brings the risk      * that someone may use both the old and the new allowance by unfortunate      * transaction ordering. One possible solution to mitigate this race      * condition is to first reduce the spender's allowance to 0 and set the      * desired value afterwards:      * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      *      * Emits an {Approval} event.      */ [1207,1862]"/>
  <match src="primitive_type [800,807]" dest="primitive_type [20756,20763]"/>
  <match src="identifier: onlyOwner [4646,4655]" dest="identifier: onlyOwner [24955,24964]"/>
  <match src="call_argument [27030,27042]" dest="call_argument [32654,32666]"/>
  <match src="}: } [24067,24068]" dest="}: } [29691,29692]"/>
  <match src="indexed: indexed [7946,7953]" dest="indexed: indexed [2557,2564]"/>
  <match src="&quot;: &quot; [34115,34116]" dest="&quot;: &quot; [40320,40321]"/>
  <match src="view: view [42229,42233]" dest="view: view [47948,47952]"/>
  <match src="function_body [16829,17155]" dest="function_body [14392,14718]"/>
  <match src="library: library [9773,9780]" dest="library: library [5382,5389]"/>
  <match src="type_name [8198,8205]" dest="type_name [2809,2816]"/>
  <match src="call_argument [25601,25610]" dest="call_argument [31225,31234]"/>
  <match src="array_access [39994,40017]" dest="array_access [46442,46465]"/>
  <match src="primitive_type [895,902]" dest="primitive_type [20851,20858]"/>
  <match src="function_body [4452,4544]" dest="function_body [24761,24853]"/>
  <match src="public: public [24867,24873]" dest="public: public [30491,30497]"/>
  <match src="): ) [10627,10628]" dest="): ) [8097,8098]"/>
  <match src="(: ( [32865,32866]" dest="(: ( [39052,39053]"/>
  <match src="primitive_type [13732,13739]" dest="primitive_type [7995,8002]"/>
  <match src=",: , [37360,37361]" dest=",: , [43790,43791]"/>
  <match src="identifier: sender [8907,8913]" dest="identifier: sender [4273,4279]"/>
  <match src="comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      *      * - Multiplication cannot overflow.      */ [11139,11384]" dest="comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      *      * - Multiplication cannot overflow.      */ [8137,8382]"/>
  <match src="identifier: spender [26225,26232]" dest="identifier: spender [31849,31856]"/>
  <match src="call_expression [31979,32007]" dest="call_expression [37973,38001]"/>
  <match src="function_body [10567,10636]" dest="function_body [8038,8129]"/>
  <match src="&quot;: &quot; [17056,17057]" dest="&quot;: &quot; [14619,14620]"/>
  <match src="expression_statement [38065,38105]" dest="expression_statement [44504,44544]"/>
  <match src="{: { [24024,24025]" dest="{: { [29648,29649]"/>
  <match src="uint256: uint256 [1683,1690]" dest="uint256: uint256 [21639,21646]"/>
  <match src="comment: /**      * @dev Modifier throws if called by any account other than the pendingOwner.      */ [4739,4834]" dest="comment: /**      * @dev Modifier throws if called by any account other than the pendingOwner.      */ [25048,25143]"/>
  <match src="{: { [10567,10568]" dest="{: { [8038,8039]"/>
  <match src="call_argument [41163,41170]" dest="call_argument [47611,47618]"/>
  <match src="(: ( [24393,24394]" dest="(: ( [30017,30018]"/>
  <match src="call_expression [39246,39276]" dest="call_expression [45694,45724]"/>
  <match src="(: ( [36527,36528]" dest="(: ( [42948,42949]"/>
  <match src="type_name [7740,7744]" dest="type_name [2351,2355]"/>
  <match src="uint256: uint256 [34014,34021]" dest="uint256: uint256 [40210,40217]"/>
  <match src=",: , [37281,37282]" dest=",: , [43702,43703]"/>
  <match src="uint256: uint256 [8223,8230]" dest="uint256: uint256 [2834,2841]"/>
  <match src="return_statement [19618,19683]" dest="return_statement [17397,17457]"/>
  <match src="call_argument [19656,19660]" dest="call_argument [17794,17798]"/>
  <match src="type_name [38960,38967]" dest="type_name [45408,45415]"/>
  <match src="identifier: setBlacklisted [37851,37865]" dest="identifier: setBlacklisted [44281,44295]"/>
  <match src="uint256: uint256 [18958,18965]" dest="uint256: uint256 [16518,16525]"/>
  <match src="): ) [4527,4528]" dest="): ) [24836,24837]"/>
  <match src="&quot;: &quot; [27836,27837]" dest="&quot;: &quot; [33460,33461]"/>
  <match src="comment: /**      * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but      * with `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [19126,19368]" dest="comment: /**      * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but      * with `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [16686,16928]"/>
  <match src=".: . [39406,39407]" dest=".: . [45854,45855]"/>
  <match src="[: [ [38504,38505]" dest="[: [ [44952,44953]"/>
  <match src="address: address [5142,5149]" dest="address: address [25451,25458]"/>
  <match src="identifier: _allowances [24635,24646]" dest="identifier: _allowances [30259,30270]"/>
  <match src="primitive_type [34556,34563]" dest="primitive_type [40761,40768]"/>
  <match src="return_statement [11845,11854]" dest="return_statement [8592,8601]"/>
  <match src="(: ( [34833,34834]" dest="(: ( [41038,41039]"/>
  <match src="returns: returns [26995,27002]" dest="returns: returns [32619,32626]"/>
  <match src="override_specifier [39052,39060]" dest="override_specifier [45500,45508]"/>
  <match src="member_expression [31590,31611]" dest="member_expression [37575,37596]"/>
  <match src="assignment_expression [34153,34167]" dest="assignment_expression [40358,40372]"/>
  <match src="number_literal: 0 [18493,18494]" dest="number_literal: 0 [16053,16054]"/>
  <match src="address: address [29295,29302]" dest="address: address [34919,34926]"/>
  <match src="primitive_type [7980,7987]" dest="primitive_type [2591,2598]"/>
  <match src="): ) [28841,28842]" dest="): ) [34465,34466]"/>
  <match src="identifier: _burn [34791,34796]" dest="identifier: _burn [40996,41001]"/>
  <match src="(: ( [11024,11025]" dest="(: ( [10421,10422]"/>
  <match src=",: , [22597,22598]" dest=",: , [28221,28222]"/>
  <match src="[: [ [1972,1973]" dest="[: [ [21928,21929]"/>
  <match src="parameter [14358,14384]" dest="parameter [18103,18129]"/>
  <match src="call_argument [28194,28200]" dest="call_argument [33818,33824]"/>
  <match src="call_expression [37510,37532]" dest="call_expression [43940,43962]"/>
  <match src="returns: returns [18415,18422]" dest="returns: returns [15976,15983]"/>
  <match src="type_name [13732,13739]" dest="type_name [7995,8002]"/>
  <match src="return: return [24035,24041]" dest="return: return [29659,29665]"/>
  <match src="type_name [47917,47922]" dest="type_name [54655,54660]"/>
  <match src="state_mutability [42487,42491]" dest="state_mutability [18140,18144]"/>
  <match src="primitive_type [43737,43744]" dest="primitive_type [22207,22214]"/>
  <match src="member_expression [31577,31589]" dest="member_expression [37562,37574]"/>
  <match src="expression_statement [25583,25620]" dest="expression_statement [31207,31244]"/>
  <match src="(: ( [29376,29377]" dest="(: ( [35000,35001]"/>
  <match src="(: ( [4517,4518]" dest="(: ( [24826,24827]"/>
  <match src="string_literal [45794,45833]" dest="string_literal [51711,51755]"/>
  <match src="member_expression [27053,27091]" dest="member_expression [32677,32715]"/>
  <match src="address: address [37266,37273]" dest="address: address [43687,43694]"/>
  <match src="(: ( [24537,24538]" dest="(: ( [30161,30162]"/>
  <match src="): ) [19809,19810]" dest="): ) [19566,19567]"/>
  <match src="}: } [12468,12469]" dest="}: } [18848,18849]"/>
  <match src="call_argument [31590,31611]" dest="call_argument [37575,37596]"/>
  <match src="(: ( [10048,10049]" dest="(: ( [7521,7522]"/>
  <match src="&gt;=: &gt;= [19556,19558]" dest="&gt;=: &gt;= [17116,17118]"/>
  <match src="identifier: _isBlacklisted [37888,37902]" dest="identifier: _isBlacklisted [44318,44332]"/>
  <match src="returns: returns [5897,5904]" dest="returns: returns [508,515]"/>
  <match src="identifier: _transfer [38940,38949]" dest="identifier: _transfer [45388,45397]"/>
  <match src="state_mutability [12381,12385]" dest="state_mutability [9750,9754]"/>
  <match src="identifier: newOwner [4274,4282]" dest="identifier: newOwner [24583,24591]"/>
  <match src="type_name [48038,48043]" dest="type_name [54776,54781]"/>
  <match src="parameter [37266,37281]" dest="parameter [43687,43702]"/>
  <match src="identifier: this [19542,19546]" dest="identifier: this [17102,17106]"/>
  <match src="(: ( [28737,28738]" dest="(: ( [34361,34362]"/>
  <match src="inheritance_specifier [22572,22588]" dest="inheritance_specifier [28196,28212]"/>
  <match src="internal: internal [31129,31137]" dest="internal: internal [36753,36761]"/>
  <match src="binary_expression [41108,41151]" dest="binary_expression [47556,47599]"/>
  <match src="call_argument [29394,29395]" dest="call_argument [35018,35019]"/>
  <match src="visibility [16820,16828]" dest="visibility [14383,14391]"/>
  <match src=",: , [18048,18049]" dest=",: , [15609,15610]"/>
  <match src="primitive_type [13721,13728]" dest="primitive_type [7984,7991]"/>
  <match src="address: address [1513,1520]" dest="address: address [21469,21476]"/>
  <match src="memory: memory [19507,19513]" dest="memory: memory [17067,17073]"/>
  <match src="primitive_type [20001,20006]" dest="primitive_type [17326,17331]"/>
  <match src="&lt;=: &lt;= [11055,11057]" dest="&lt;=: &lt;= [10452,10454]"/>
  <match src="primitive_type [2086,2090]" dest="primitive_type [22042,22046]"/>
  <match src="visibility [34028,34036]" dest="visibility [40224,40232]"/>
  <match src="return_type_definition [18982,19004]" dest="return_type_definition [16542,16564]"/>
  <match src="mapping: mapping [1505,1512]" dest="mapping: mapping [21461,21468]"/>
  <match src="parameter [30076,30089]" dest="parameter [35700,35713]"/>
  <match src="parameter [26938,26953]" dest="parameter [32562,32577]"/>
  <match src="pure: pure [23656,23660]" dest="pure: pure [29280,29284]"/>
  <match src="bool: bool [962,966]" dest="bool: bool [20918,20922]"/>
  <match src="(: ( [28839,28840]" dest="(: ( [34463,34464]"/>
  <match src="(: ( [5487,5488]" dest="(: ( [25800,25801]"/>
  <match src="parameter [18424,18436]" dest="parameter [15985,15997]"/>
  <match src="state_mutability [13037,13041]" dest="state_mutability [11248,11252]"/>
  <match src="type_name [12350,12357]" dest="type_name [9719,9726]"/>
  <match src="yul_path [20535,20545]" dest="yul_path [20074,20084]"/>
  <match src="identifier: balance [31604,31611]" dest="identifier: balance [37589,37596]"/>
  <match src="public: public [781,787]" dest="public: public [20737,20743]"/>
  <match src="identifier: amount [28853,28859]" dest="identifier: amount [34477,34483]"/>
  <match src="=: = [5478,5479]" dest="=: = [25791,25792]"/>
  <match src="internal: internal [15241,15249]" dest="internal: internal [13001,13009]"/>
  <match src="view: view [23800,23804]" dest="view: view [29424,29428]"/>
  <match src="identifier: b [12369,12370]" dest="identifier: b [9738,9739]"/>
  <match src="{: { [48344,48345]" dest="{: { [55082,55083]"/>
  <match src="identifier: account [40425,40432]" dest="identifier: account [46873,46880]"/>
  <match src="type_name [10952,10959]" dest="type_name [10349,10356]"/>
  <match src="type_name [48128,48133]" dest="type_name [54866,54871]"/>
  <match src="type_name [2067,2091]" dest="type_name [22023,22047]"/>
  <match src=",: , [26316,26317]" dest=",: , [31940,31941]"/>
  <match src="string [48256,48265]" dest="string [54994,55003]"/>
  <match src="): ) [11699,11700]" dest="): ) [8476,8477]"/>
  <match src="primitive_type [6539,6546]" dest="primitive_type [1150,1157]"/>
  <match src="primitive_type [11414,11421]" dest="primitive_type [8412,8419]"/>
  <match src="identifier: owner [30084,30089]" dest="identifier: owner [35708,35713]"/>
  <match src="parameter [12395,12402]" dest="parameter [9764,9771]"/>
  <match src="state_mutability [22773,22777]" dest="state_mutability [28397,28401]"/>
  <match src="assignment_expression [38065,38104]" dest="assignment_expression [44504,44543]"/>
  <match src=".: . [39395,39396]" dest=".: . [45843,45844]"/>
  <match src="(: ( [31086,31087]" dest="(: ( [36710,36711]"/>
  <match src="call_argument [40504,40511]" dest="call_argument [46952,46959]"/>
  <match src="): ) [34812,34813]" dest="): ) [41017,41018]"/>
  <match src="type_name [33320,33327]" dest="type_name [39507,39514]"/>
  <match src="type_cast_expression [28832,28842]" dest="type_cast_expression [34456,34466]"/>
  <match src="visibility [26254,26260]" dest="visibility [31878,31884]"/>
  <match src="(: ( [31953,31954]" dest="(: ( [37947,37948]"/>
  <match src="comment: /**  * @title ReclaimerToken  * @dev ERC20 token which allows owner to reclaim ERC20 tokens  * or ether sent to this contract  */ [31183,31316]" dest="comment: /**  * @title ReclaimerToken  * @dev ERC20 token which allows owner to reclaim ERC20 tokens  * or ether sent to this contract  */ [37144,37277]"/>
  <match src="return_type_definition [15255,15269]" dest="return_type_definition [13015,13029]"/>
  <match src="(: ( [47546,47547]" dest="(: ( [51793,51794]"/>
  <match src="): ) [39415,39416]" dest="): ) [45863,45864]"/>
  <match src="primitive_type [10974,10980]" dest="primitive_type [10371,10377]"/>
  <match src="user_defined_type [31354,31359]" dest="user_defined_type [37315,37320]"/>
  <match src="contract: contract [8791,8799]" dest="contract: contract [4157,4165]"/>
  <match src="(: ( [10557,10558]" dest="(: ( [12089,12090]"/>
  <match src=",: , [27796,27797]" dest=",: , [33420,33421]"/>
  <match src="type_name [25517,25524]" dest="type_name [31141,31148]"/>
  <match src="parameter [38452,38465]" dest="parameter [44891,44904]"/>
  <match src="(: ( [34065,34066]" dest="(: ( [40270,40271]"/>
  <match src="return_type_definition [13757,13774]" dest="return_type_definition [8020,8037]"/>
  <match src="{: { [31360,31361]" dest="{: { [37336,37337]"/>
  <match src="address: address [30169,30176]" dest="address: address [35793,35800]"/>
  <match src="type_name [34556,34563]" dest="type_name [40761,40768]"/>
  <match src="}: } [24455,24456]" dest="}: } [30079,30080]"/>
  <match src="number_literal: 0 [11698,11699]" dest="number_literal: 0 [8475,8476]"/>
  <match src="return_type_definition [25557,25571]" dest="return_type_definition [31181,31195]"/>
  <match src="state_variable_declaration [1317,1368]" dest="state_variable_declaration [21273,21324]"/>
  <match src="number_literal: 18 [23695,23697]" dest="number_literal: 18 [29319,29321]"/>
  <match src="primitive_type [26217,26224]" dest="primitive_type [31841,31848]"/>
  <match src="type_name [1524,1531]" dest="type_name [21480,21487]"/>
  <match src="}: } [20131,20132]" dest="}: } [19670,19671]"/>
  <match src="identifier: balance [19548,19555]" dest="identifier: balance [17108,17115]"/>
  <match src="identifier: approve [7266,7273]" dest="identifier: approve [1877,1884]"/>
  <match src="string_literal [10595,10627]" dest="string_literal [8065,8097]"/>
  <match src="identifier: subtractedValue [45529,45544]" dest="identifier: newHeartbeat [48915,48927]"/>
  <match src=",: , [18937,18938]" dest=",: , [16497,16498]"/>
  <match src="call_expression [37412,37499]" dest="call_expression [43842,43929]"/>
  <match src="comment: /**      * @dev Moves tokens `amount` from `sender` to `recipient`.      *      * This is internal function is equivalent to {transfer}, and can be used to      * e.g. implement automatic token fees, slashing mechanisms, etc.      *      * Emits a {Transfer} event.      *      * Requirements:      *      * - `sender` cannot be the zero address.      * - `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      */ [27188,27664]" dest="comment: /**      * @dev Moves tokens `amount` from `sender` to `recipient`.      *      * This is internal function is equivalent to {transfer}, and can be used to      * e.g. implement automatic token fees, slashing mechanisms, etc.      *      * Emits a {Transfer} event.      *      * Requirements:      *      * - `sender` cannot be the zero address.      * - `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      */ [32812,33288]"/>
  <match src="binary_expression [41155,41176]" dest="binary_expression [47603,47624]"/>
  <match src="type_name [7687,7694]" dest="type_name [2298,2305]"/>
  <match src="call_expression [4669,4711]" dest="call_expression [24978,25020]"/>
  <match src="function_definition [47988,48079]" dest="function_definition [54726,54817]"/>
  <match src="string [40435,40480]" dest="string [46883,46928]"/>
  <match src="identifier: owner [4530,4535]" dest="identifier: owner [24839,24844]"/>
  <match src="yul_evm_builtin [15732,15743]" dest="yul_evm_builtin [13331,13342]"/>
  <match src="): ) [10533,10534]" dest="): ) [12065,12066]"/>
  <match src="event_paramater [7980,7993]" dest="event_paramater [2591,2604]"/>
  <match src="(: ( [1427,1428]" dest="(: ( [21383,21384]"/>
  <match src="call_argument [39400,39416]" dest="call_argument [45848,45864]"/>
  <match src="type_name [34014,34021]" dest="type_name [40210,40217]"/>
  <match src="uint256: uint256 [1395,1402]" dest="uint256: uint256 [21351,21358]"/>
  <match src="identifier: recipient [7695,7704]" dest="identifier: recipient [2306,2315]"/>
  <match src="primitive_type [24015,24022]" dest="primitive_type [29639,29646]"/>
  <match src="bool: bool [17005,17009]" dest="bool: bool [14568,14572]"/>
  <match src="identifier: spender [39831,39838]" dest="identifier: spender [46279,46286]"/>
  <match src="comment: /**      * @dev Returns the remaining number of tokens that `spender` will be      * allowed to spend on behalf of `owner` through {transferFrom}. This is      * zero by default.      *      * This value changes when {approve} or {transferFrom} are called.      */ [6229,6499]" dest="comment: /**      * @dev Returns the remaining number of tokens that `spender` will be      * allowed to spend on behalf of `owner` through {transferFrom}. This is      * zero by default.      *      * This value changes when {approve} or {transferFrom} are called.      */ [840,1110]"/>
  <match src="call_expression [19861,19879]" dest="call_expression [17186,17204]"/>
  <match src="unary_expression [39908,39922]" dest="unary_expression [46356,46370]"/>
  <match src="type_name [12989,12996]" dest="type_name [11200,11207]"/>
  <match src="primitive_type [22968,22974]" dest="primitive_type [28592,28598]"/>
  <match src="type_name [5866,5873]" dest="type_name [477,484]"/>
  <match src="return_statement [11115,11124]" dest="return_statement [10482,10495]"/>
  <match src="identifier: msg [4471,4474]" dest="identifier: msg [24780,24783]"/>
  <match src=",: , [27722,27723]" dest=",: , [33346,33347]"/>
  <match src="): ) [10101,10102]" dest="): ) [7574,7575]"/>
  <match src="address: address [1672,1679]" dest="address: address [21628,21635]"/>
  <match src="type_name [32866,32873]" dest="type_name [39053,39060]"/>
  <match src="primitive_type [11085,11092]" dest="primitive_type [5634,5641]"/>
  <match src="primitive_type [1513,1520]" dest="primitive_type [21469,21476]"/>
  <match src="(: ( [12425,12426]" dest="(: ( [18784,18785]"/>
  <match src=",: , [37986,37987]" dest=",: , [44425,44426]"/>
  <match src="uint256: uint256 [39849,39856]" dest="uint256: uint256 [46297,46304]"/>
  <match src="address: address [24553,24560]" dest="address: address [30177,30184]"/>
  <match src="parameter [40364,40378]" dest="parameter [46812,46826]"/>
  <match src="identifier: data [19434,19438]" dest="identifier: data [16994,16998]"/>
  <match src="view: view [24577,24581]" dest="view: view [30201,30205]"/>
  <match src="identifier: add [26362,26365]" dest="identifier: add [31986,31989]"/>
  <match src="state_mutability [24577,24581]" dest="state_mutability [30201,30205]"/>
  <match src="]: ] [1973,1974]" dest="]: ] [21929,21930]"/>
  <match src="=: = [1110,1111]" dest="=: = [21066,21067]"/>
  <match src="identifier: div [12422,12425]" dest="identifier: functionDelegateCall [18764,18784]"/>
  <match src="returns: returns [15255,15262]" dest="returns: returns [13015,13022]"/>
  <match src="call_argument [39309,39315]" dest="call_argument [45757,45763]"/>
  <match src="function_body [12404,12469]" dest="function_body [18746,18849]"/>
  <match src="(: ( [14408,14409]" dest="(: ( [9143,9144]"/>
  <match src="call_argument [39266,39275]" dest="call_argument [45714,45723]"/>
  <match src="identifier: ReclaimerToken [32350,32364]" dest="identifier: ReclaimerToken [38537,38551]"/>
  <match src="}: } [32017,32018]" dest="}: } [38011,38012]"/>
  <match src="=: = [29531,29532]" dest="=: = [35155,35156]"/>
  <match src="call_argument [24949,24955]" dest="call_argument [30573,30579]"/>
  <match src="call_argument [37553,37560]" dest="call_argument [43983,43990]"/>
  <match src="event_paramater [8175,8196]" dest="event_paramater [2786,2807]"/>
  <match src="parameter [46849,46863]" dest="parameter [48839,48854]"/>
  <match src="returns: returns [17982,17989]" dest="returns: returns [15545,15552]"/>
  <match src="call_argument [45794,45833]" dest="call_argument [51711,51755]"/>
  <match src="identifier: require [19526,19533]" dest="identifier: require [17086,17093]"/>
  <match src="modifier_invocation [37913,37922]" dest="modifier_invocation [44352,44361]"/>
  <match src="function_definition [37252,37577]" dest="function_definition [43673,44007]"/>
  <match src="uint256: uint256 [1524,1531]" dest="uint256: uint256 [21480,21487]"/>
  <match src="identifier: value [20041,20046]" dest="identifier: value [17366,17371]"/>
  <match src="type_name [34539,34546]" dest="type_name [40744,40751]"/>
  <match src="bytes32: bytes32 [1494,1501]" dest="bytes32: bytes32 [21450,21457]"/>
  <match src="comment: /**      * @dev Checks if amount is within allowed burn bounds and      * destroys `amount` tokens from `account`, reducing the      * total supply.      * @param account account to burn tokens for      * @param amount amount of tokens to burn      *      * Emits a {Burn} event      */ [34224,34518]" dest="comment: /**      * @dev Checks if amount is within allowed burn bounds and      * destroys `amount` tokens from `account`, reducing the      * total supply.      * @param account account to burn tokens for      * @param amount amount of tokens to burn      *      * Emits a {Burn} event      */ [40429,40723]"/>
  <match src="primitive_type [29386,29393]" dest="primitive_type [35010,35017]"/>
  <match src="string [10595,10627]" dest="string [8065,8097]"/>
  <match src="identifier: account [28513,28520]" dest="identifier: account [34137,34144]"/>
  <match src="emit_statement [30359,30397]" dest="emit_statement [35983,36021]"/>
  <match src="function: function [5316,5324]" dest="function: function [25627,25635]"/>
  <match src="=: = [11758,11759]" dest="=: = [8507,8508]"/>
  <match src="type_name [20001,20006]" dest="type_name [17326,17331]"/>
  <match src="number_literal: 0 [20244,20245]" dest="number_literal: 0 [19783,19784]"/>
  <match src="primitive_type [37942,37949]" dest="primitive_type [44381,44388]"/>
  <match src="): ) [39356,39357]" dest="): ) [45804,45805]"/>
  <match src="parameter [14347,14356]" dest="parameter [9110,9119]"/>
  <match src="binary_expression [34066,34078]" dest="binary_expression [40271,40283]"/>
  <match src="primitive_type [1087,1094]" dest="primitive_type [21043,21050]"/>
  <match src="string [48362,48368]" dest="string [55100,55106]"/>
  <match src="type_name [7706,7713]" dest="type_name [2317,2324]"/>
  <match src="type_name [12978,12985]" dest="type_name [11189,11196]"/>
  <match src="primitive_type [24900,24904]" dest="primitive_type [30524,30528]"/>
  <match src="binary_expression [11097,11102]" dest="binary_expression [8116,8121]"/>
  <match src="identifier: allowances_Deprecated [903,924]" dest="identifier: allowances_Deprecated [20859,20880]"/>
  <match src="call_argument [40435,40480]" dest="call_argument [46883,46928]"/>
  <match src="expression_statement [4669,4712]" dest="expression_statement [24978,25021]"/>
  <match src="type_name [18991,18996]" dest="type_name [16551,16556]"/>
  <match src="visibility [1095,1101]" dest="visibility [21051,21057]"/>
  <match src="state_variable_declaration [836,853]" dest="state_variable_declaration [20792,20809]"/>
  <match src="string [30181,30219]" dest="string [35805,35843]"/>
  <match src="user_defined_type [22590,22597]" dest="user_defined_type [28214,28221]"/>
  <match src="type_name [7291,7298]" dest="type_name [1902,1909]"/>
  <match src="identifier: account [37950,37957]" dest="identifier: account [44389,44396]"/>
  <match src="call_argument [34203,34207]" dest="call_argument [40408,40412]"/>
  <match src="contract_body [4012,5501]" dest="contract_body [24321,25814]"/>
  <match src="comment: /**      * @dev Emitted when account blacklist status changes      */ [36433,36504]" dest="comment: /**      * @dev Emitted when account blacklist status changes      */ [42854,42925]"/>
  <match src="expression_statement [28644,28694]" dest="expression_statement [34268,34318]"/>
  <match src="): ) [37400,37401]" dest="): ) [43830,43831]"/>
  <match src="&amp;&amp;: &amp;&amp; [41152,41154]" dest="&amp;&amp;: &amp;&amp; [47600,47602]"/>
  <match src="identifier: a [11788,11789]" dest="identifier: a [8537,8538]"/>
  <match src="address: address [31954,31961]" dest="address: address [37948,37955]"/>
  <match src="contract: contract [744,752]" dest="contract: contract [20700,20708]"/>
  <match src="(: ( [30238,30239]" dest="(: ( [35862,35863]"/>
  <match src="(: ( [13796,13797]" dest="(: ( [17785,17786]"/>
  <match src="primitive_type [1672,1679]" dest="primitive_type [21628,21635]"/>
  <match src="state_variable_declaration [773,794]" dest="state_variable_declaration [20729,20750]"/>
  <match src="state_variable_declaration [1087,1114]" dest="state_variable_declaration [21043,21070]"/>
  <match src="call_expression [24394,24406]" dest="call_expression [30018,30030]"/>
  <match src="parameter [10049,10058]" dest="parameter [7522,7531]"/>
  <match src=",: , [7978,7979]" dest=",: , [2589,2590]"/>
  <match src="address: address [800,807]" dest="address: address [20756,20763]"/>
  <match src="identifier: IERC20 [31863,31869]" dest="identifier: IERC20 [37848,37854]"/>
  <match src="expression_statement [26295,26379]" dest="expression_statement [31919,32003]"/>
  <match src="primitive_type [7687,7694]" dest="primitive_type [2298,2305]"/>
  <match src="member_expression [8903,8913]" dest="member_expression [4269,4279]"/>
  <match src="}: } [25780,25781]" dest="}: } [31404,31405]"/>
  <match src="event: event [7923,7928]" dest="event: event [2534,2539]"/>
  <match src="function_definition [24519,24670]" dest="function_definition [30143,30294]"/>
  <match src="if: if [11689,11691]" dest="if: if [8466,8468]"/>
  <match src="primitive_type [18958,18965]" dest="primitive_type [16518,16525]"/>
  <match src="call_argument [37441,37448]" dest="call_argument [43871,43878]"/>
  <match src="(: ( [38434,38435]" dest="(: ( [44873,44874]"/>
  <match src="external: external [6556,6564]" dest="external: external [1167,1175]"/>
  <match src="=&gt;: =&gt; [1436,1438]" dest="=&gt;: =&gt; [21392,21394]"/>
  <match src=",: , [18494,18495]" dest=",: , [16054,16055]"/>
  <match src="return: return [20103,20109]" dest="return: return [19642,19648]"/>
  <match src="identifier: returndata_size [20548,20563]" dest="identifier: returndata_size [20087,20102]"/>
  <match src="event: event [32846,32851]" dest="event: event [39033,39038]"/>
  <match src="call_expression [28721,28745]" dest="call_expression [34345,34369]"/>
  <match src="call_argument [34806,34812]" dest="call_argument [41011,41017]"/>
  <match src="address: address [1910,1917]" dest="address: address [21866,21873]"/>
  <match src="type_name [38435,38442]" dest="type_name [44874,44881]"/>
  <match src="internal: internal [8837,8845]" dest="internal: internal [4203,4211]"/>
  <match src="type_name [29232,29239]" dest="type_name [34856,34863]"/>
  <match src="parameter [18923,18937]" dest="parameter [16483,16497]"/>
  <match src=",: , [27880,27881]" dest=",: , [33504,33505]"/>
  <match src=",: , [28041,28042]" dest=",: , [33665,33666]"/>
  <match src="event_definition [32846,32898]" dest="event_definition [39033,39085]"/>
  <match src="parameter [23960,23975]" dest="parameter [29584,29599]"/>
  <match src="identifier: from [31095,31099]" dest="identifier: from [36719,36723]"/>
  <match src="visibility [31547,31555]" dest="visibility [37523,37531]"/>
  <match src="state_mutability [42229,42233]" dest="state_mutability [47948,47952]"/>
  <match src=",: , [18376,18377]" dest=",: , [15937,15938]"/>
  <match src="]: ] [38512,38513]" dest="]: ] [44960,44961]"/>
  <match src="parameter [6579,6586]" dest="parameter [1190,1197]"/>
  <match src=".: . [28138,28139]" dest=".: . [33762,33763]"/>
  <match src="function: function [25460,25468]" dest="function: function [31084,31092]"/>
  <match src="[: [ [26352,26353]" dest="[: [ [31976,31977]"/>
  <match src="{: { [28555,28556]" dest="{: { [34179,34180]"/>
  <match src="): ) [37957,37958]" dest="): ) [44396,44397]"/>
  <match src="identifier: value [8231,8236]" dest="identifier: value [2842,2847]"/>
  <match src="type_name [7671,7678]" dest="type_name [2282,2289]"/>
  <match src="function_body [48344,48376]" dest="function_body [55082,55114]"/>
  <match src="function_definition [23941,24068]" dest="function_definition [29565,29692]"/>
  <match src="identifier: a [14476,14477]" dest="identifier: a [9844,9845]"/>
  <match src="parameter [41084,41088]" dest="parameter [47532,47536]"/>
  <match src="identifier: _max [34022,34026]" dest="identifier: _max [40218,40222]"/>
  <match src="): ) [28630,28631]" dest="): ) [34254,34255]"/>
  <match src="): ) [31888,31889]" dest="): ) [37873,37874]"/>
  <match src="{: { [4658,4659]" dest="{: { [24967,24968]"/>
  <match src="type_name [1486,1533]" dest="type_name [21442,21489]"/>
  <match src="true: true [27168,27172]" dest="true: true [32792,32796]"/>
  <match src="parameter [13000,13026]" dest="parameter [11211,11237]"/>
  <match src="{: { [22606,22607]" dest="{: { [28230,28231]"/>
  <match src="array_access [24635,24653]" dest="array_access [30259,30277]"/>
  <match src="returns: returns [14400,14407]" dest="returns: returns [9135,9142]"/>
  <match src="(: ( [19729,19730]" dest="(: ( [19500,19501]"/>
  <match src="function_body [4868,4956]" dest="function_body [25177,25265]"/>
  <match src="&quot;: &quot; [17145,17146]" dest="&quot;: &quot; [14708,14709]"/>
  <match src="visibility [10071,10079]" dest="visibility [7544,7552]"/>
  <match src=",: , [26232,26233]" dest=",: , [31856,31857]"/>
  <match src="comment: // Look for revert reason and bubble it up if present [20153,20206]" dest="comment: // Look for revert reason and bubble it up if present [19692,19745]"/>
  <match src="identifier: allowance [6514,6523]" dest="identifier: allowance [1125,1134]"/>
  <match src="state_variable_declaration [1645,1718]" dest="state_variable_declaration [21601,21674]"/>
  <match src="uint256: uint256 [5906,5913]" dest="uint256: uint256 [517,524]"/>
  <match src="emit: emit [34824,34828]" dest="emit: emit [41029,41033]"/>
  <match src="call_expression [30152,30220]" dest="call_expression [35776,35844]"/>
  <match src="): ) [40378,40379]" dest="): ) [46826,46827]"/>
  <match src="returns: returns [11439,11446]" dest="returns: returns [8437,8444]"/>
  <match src="parameter [30091,30106]" dest="parameter [35715,35730]"/>
  <match src="): ) [15751,15752]" dest="): ) [13350,13351]"/>
  <match src="parameter [39849,39863]" dest="parameter [46297,46311]"/>
  <match src="parameter [31101,31111]" dest="parameter [36725,36735]"/>
  <match src="override: override [39880,39888]" dest="override: override [46328,46336]"/>
  <match src="variable_declaration_statement [19986,20065]" dest="variable_declaration_statement [17311,17387]"/>
  <match src="function_definition [11390,11861]" dest="function_definition [8388,8608]"/>
  <match src="string_literal [30262,30298]" dest="string_literal [35886,35922]"/>
  <match src="return: return [18449,18455]" dest="return: return [16010,16016]"/>
  <match src="identifier: recipient [27713,27722]" dest="identifier: recipient [33337,33346]"/>
  <match src="parameter [28522,28536]" dest="parameter [34146,34160]"/>
  <match src="visibility [29248,29256]" dest="visibility [34872,34880]"/>
  <match src="true [44519,44523]" dest="true [6614,6618]"/>
  <match src="virtual: virtual [26987,26994]" dest="virtual: virtual [32611,32618]"/>
  <match src="library_declaration [9773,14492]" dest="library_declaration [5382,12172]"/>
  <match src=",: , [22588,22589]" dest=",: , [28212,28213]"/>
  <match src="): ) [20063,20064]" dest="): ) [17385,17386]"/>
  <match src="identifier: c [10122,10123]" dest="identifier: c [7595,7596]"/>
  <match src="parameter [24299,24316]" dest="parameter [29923,29940]"/>
  <match src="uint256: uint256 [26234,26241]" dest="uint256: uint256 [31858,31865]"/>
  <match src="type_name [17991,17996]" dest="type_name [15554,15559]"/>
  <match src="internal: internal [10535,10543]" dest="internal: internal [12067,12075]"/>
  <match src="call_expression [25647,25659]" dest="call_expression [31271,31283]"/>
  <match src="): ) [41170,41171]" dest="): ) [47618,47619]"/>
  <match src="payable: payable [31534,31541]" dest="payable: payable [37510,37517]"/>
  <match src="): ) [6195,6196]" dest="): ) [806,807]"/>
  <match src="function_body [34598,34858]" dest="function_body [40803,41063]"/>
  <match src="&quot;: &quot; [19881,19882]" dest="&quot;: &quot; [17206,17207]"/>
  <match src="identifier: setBurnBounds [33986,33999]" dest="identifier: setBurnBounds [40182,40195]"/>
  <match src="type_cast_expression [41155,41171]" dest="type_cast_expression [47603,47619]"/>
  <match src="false: false [995,1000]" dest="false: false [20951,20956]"/>
  <match src="primitive_type [19534,19541]" dest="primitive_type [17094,17101]"/>
  <match src="primitive_type [1220,1227]" dest="primitive_type [21176,21183]"/>
  <match src="(: ( [19647,19648]" dest="(: ( [17421,17422]"/>
  <match src="return: return [19016,19022]" dest="return: return [16576,16582]"/>
  <match src="function_body [37318,37577]" dest="function_body [43748,44007]"/>
  <match src="call_argument [39378,39387]" dest="call_argument [45826,45835]"/>
  <match src="parameter [22787,22800]" dest="parameter [28411,28424]"/>
  <match src="): ) [24568,24569]" dest="): ) [30192,30193]"/>
  <match src="identifier: sub [29546,29549]" dest="identifier: sub [35170,35173]"/>
  <match src="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [13251,13702]" dest="comment: /**      * @dev Returns the division of two unsigned integers, with a division by zero flag.      *      * _Available since v3.4._      */ [6638,6780]"/>
  <match src="parameter [11403,11412]" dest="parameter [8401,8410]"/>
  <match src="function: function [30058,30066]" dest="function: function [35682,35690]"/>
  <match src="&quot;: &quot; [17086,17087]" dest="&quot;: &quot; [14649,14650]"/>
  <match src="array_access [38065,38087]" dest="array_access [44504,44526]"/>
  <match src="address: address [41044,41051]" dest="address: address [47492,47499]"/>
  <match src="): ) [29404,29405]" dest="): ) [35028,35029]"/>
  <match src="visibility [37299,37307]" dest="visibility [43720,43728]"/>
  <match src="}: } [38163,38164]" dest="}: } [44602,44603]"/>
  <match src="visibility [48107,48113]" dest="visibility [54845,54851]"/>
  <match src="uint256: uint256 [12395,12402]" dest="uint256: uint256 [9764,9771]"/>
  <match src="parameter [39823,39838]" dest="parameter [46271,46286]"/>
  <match src="type_name [37266,37273]" dest="type_name [43687,43694]"/>
  <match src="pure: pure [14395,14399]" dest="pure: pure [9130,9134]"/>
  <match src="identifier: success [17077,17084]" dest="identifier: success [14640,14647]"/>
  <match src="): ) [42250,42251]" dest="): ) [47969,47970]"/>
  <match src="string [17086,17146]" dest="string [14649,14709]"/>
  <match src="type_name [19828,19833]" dest="type_name [19589,19594]"/>
  <match src="string_literal [40435,40480]" dest="string_literal [46883,46928]"/>
  <match src="identifier: value [17039,17044]" dest="identifier: value [14602,14607]"/>
  <match src="call_argument [11784,11794]" dest="call_argument [8533,8543]"/>
  <match src="mapping: mapping [1486,1493]" dest="mapping: mapping [21442,21449]"/>
  <match src="type_name [15264,15268]" dest="type_name [13024,13028]"/>
  <match src="): ) [42282,42283]" dest="): ) [52408,52409]"/>
  <match src="(: ( [34538,34539]" dest="(: ( [40743,40744]"/>
  <match src="event_paramater [32882,32896]" dest="event_paramater [39069,39083]"/>
  <match src="function: function [41015,41023]" dest="function: function [47463,47471]"/>
  <match src="identifier: Address [22652,22659]" dest="identifier: Address [28276,28283]"/>
  <match src="user_defined_type [22599,22605]" dest="user_defined_type [28223,28229]"/>
  <match src="identifier: amount [34806,34812]" dest="identifier: amount [41011,41017]"/>
  <match src="call_argument [29303,29304]" dest="call_argument [34927,34928]"/>
  <match src="): ) [39869,39870]" dest="): ) [46317,46318]"/>
  <match src="identifier: _totalSupply [28706,28718]" dest="identifier: _totalSupply [34330,34342]"/>
  <match src="comment: /**      * @dev Returns the symbol of the token, usually a shorter version of the      * name.      */ [22810,22915]" dest="comment: /**      * @dev Returns the symbol of the token, usually a shorter version of the      * name.      */ [28434,28539]"/>
  <match src="identifier: owner [24546,24551]" dest="identifier: owner [30170,30175]"/>
  <match src="function_definition [8815,8921]" dest="function_definition [4181,4287]"/>
  <match src="identifier: data [19759,19763]" dest="identifier: data [17706,17710]"/>
  <match src="identifier: burn [33315,33319]" dest="identifier: burn [39502,39506]"/>
  <match src="identifier: _approve [25630,25638]" dest="identifier: _approve [31254,31262]"/>
  <match src="visibility [14386,14394]" dest="visibility [9121,9129]"/>
  <match src="primitive_type [19405,19412]" dest="primitive_type [16965,16972]"/>
  <match src="call_argument [19566,19606]" dest="call_argument [17126,17166]"/>
  <match src="function_definition [5704,5759]" dest="function_definition [315,370]"/>
  <match src="[: [ [29427,29428]" dest="[: [ [35051,35052]"/>
  <match src="return_type_definition [22778,22801]" dest="return_type_definition [28402,28425]"/>
  <match src="string [11796,11831]" dest="string [8545,8580]"/>
  <match src="}: } [10635,10636]" dest="}: } [8128,8129]"/>
  <match src="primitive_type [1261,1268]" dest="primitive_type [21217,21224]"/>
  <match src="call_expression [19853,19913]" dest="call_expression [17178,17238]"/>
  <match src=",: , [38139,38140]" dest=",: , [44578,44579]"/>
  <match src="array_access [27053,27078]" dest="array_access [32677,32702]"/>
  <match src="call_argument [34797,34804]" dest="call_argument [41002,41009]"/>
  <match src="memory: memory [18365,18371]" dest="memory: memory [15926,15932]"/>
  <match src="public: public [22939,22945]" dest="public: public [28563,28569]"/>
  <match src="call_argument [24394,24406]" dest="call_argument [30018,30030]"/>
  <match src="&gt;=: &gt;= [16870,16872]" dest="&gt;=: &gt;= [14433,14435]"/>
  <match src="primitive_type [17938,17945]" dest="primitive_type [15501,15508]"/>
  <match src="function_body [37923,38164]" dest="function_body [44362,44603]"/>
  <match src="memory: memory [14365,14371]" dest="memory: memory [18110,18116]"/>
  <match src="(: ( [11402,11403]" dest="(: ( [8400,8401]"/>
  <match src="function_body [5366,5498]" dest="function_body [25679,25811]"/>
  <match src="identifier: reclaimEther [31513,31525]" dest="identifier: reclaimEther [37489,37501]"/>
  <match src="identifier: a [10126,10127]" dest="identifier: a [7599,7600]"/>
  <match src="&quot;: &quot; [12459,12460]" dest="&quot;: &quot; [18839,18840]"/>
  <match src="primitive_type [46849,46856]" dest="primitive_type [48839,48846]"/>
  <match src="primitive_type [19828,19833]" dest="primitive_type [19589,19594]"/>
  <match src="identifier: _balances [28777,28786]" dest="identifier: _balances [34401,34410]"/>
  <match src="is: is [31351,31353]" dest="is: is [37312,37314]"/>
  <match src="): ) [31602,31603]" dest="): ) [37587,37588]"/>
  <match src="identifier: _min [34138,34142]" dest="identifier: _min [40343,40347]"/>
  <match src="(: ( [20058,20059]" dest="(: ( [17380,17381]"/>
  <match src="identifier: pendingOwner [4901,4913]" dest="identifier: pendingOwner [25210,25222]"/>
  <match src="): ) [7305,7306]" dest="): ) [1916,1917]"/>
  <match src="): ) [48133,48134]" dest="): ) [54871,54872]"/>
  <match src="internal: internal [17973,17981]" dest="internal: internal [15536,15544]"/>
  <match src="contract_declaration [32305,34861]" dest="contract_declaration [38492,41066]"/>
  <match src="identifier: sender [25490,25496]" dest="identifier: sender [31114,31120]"/>
  <match src="return_statement [24628,24663]" dest="return_statement [30252,30287]"/>
  <match src="call_expression [30231,30299]" dest="call_expression [35855,35923]"/>
  <match src="identifier: functionCallWithValue [18901,18922]" dest="identifier: functionCallWithValue [16461,16482]"/>
  <match src="type_name [895,902]" dest="type_name [20851,20858]"/>
  <match src="(: ( [1383,1384]" dest="(: ( [21339,21340]"/>
  <match src="string [47601,47624]" dest="string [51928,51965]"/>
  <match src="/: / [11786,11787]" dest="/: / [8535,8536]"/>
  <match src="=&gt;: =&gt; [1392,1394]" dest="=&gt;: =&gt; [21348,21350]"/>
  <match src="call_argument [19881,19912]" dest="call_argument [17206,17237]"/>
  <match src="string: string [22787,22793]" dest="string: string [28411,28417]"/>
  <match src="string [17055,17057]" dest="string [14618,14620]"/>
  <match src="): ) [8883,8884]" dest="): ) [4249,4250]"/>
  <match src="): ) [37531,37532]" dest="): ) [43961,43962]"/>
  <match src="uint256: uint256 [6579,6586]" dest="uint256: uint256 [1190,1197]"/>
  <match src="identifier: TrueCurrency [36288,36300]" dest="identifier: TrueCurrency [42709,42721]"/>
  <match src="type_cast_expression [19534,19547]" dest="type_cast_expression [17094,17107]"/>
  <match src="string: string [48329,48335]" dest="string: string [55067,55073]"/>
  <match src="identifier: errorMessage [18496,18508]" dest="identifier: errorMessage [16056,16068]"/>
  <match src="(: ( [42281,42282]" dest="(: ( [52407,52408]"/>
  <match src="identifier: target [19872,19878]" dest="identifier: target [17197,17203]"/>
  <match src="identifier: a [14344,14345]" dest="identifier: a [9107,9108]"/>
  <match src="visibility [18406,18414]" dest="visibility [15967,15975]"/>
  <match src="function_body [38486,38532]" dest="function_body [44934,44980]"/>
  <match src="): ) [28806,28807]" dest="): ) [34430,34431]"/>
  <match src="(: ( [25657,25658]" dest="(: ( [31281,31282]"/>
  <match src="identifier: onlyPendingOwner [4849,4865]" dest="identifier: onlyPendingOwner [25158,25174]"/>
  <match src="[: [ [39175,39176]" dest="[: [ [45623,45624]"/>
  <match src="parameter [18343,18357]" dest="parameter [15904,15918]"/>
  <match src="string_literal [12432,12460]" dest="string_literal [18799,18840]"/>
  <match src="function_definition [39771,40139]" dest="function_definition [46219,46587]"/>
  <match src="uint256: uint256 [27724,27731]" dest="uint256: uint256 [33348,33355]"/>
  <match src="uint256: uint256 [39013,39020]" dest="uint256: uint256 [45461,45468]"/>
  <match src="parameter [16804,16818]" dest="parameter [14367,14381]"/>
  <match src="type_name [18359,18364]" dest="type_name [15920,15925]"/>
  <match src="comment: /**      * @dev send all token balance of an arbitrary erc20 token      * in the contract to another address      * @param token token to reclaim      * @param _to address to send eth balance to      */ [31628,31835]" dest="comment: /**      * @dev send all token balance of an arbitrary erc20 token      * in the contract to another address      * @param token token to reclaim      * @param _to address to send eth balance to      */ [37613,37820]"/>
  <match src="identifier: sub [28031,28034]" dest="identifier: sub [33655,33658]"/>
  <match src="expression_statement [40093,40132]" dest="expression_statement [46541,46580]"/>
  <match src=",: , [24947,24948]" dest=",: , [30571,30572]"/>
  <match src="call_expression [34695,34772]" dest="call_expression [40900,40977]"/>
  <match src="state_variable_declaration [47917,47946]" dest="state_variable_declaration [54655,54684]"/>
  <match src="address: address [16848,16855]" dest="address: address [14411,14418]"/>
  <match src="type_name [19765,19772]" dest="type_name [5614,5621]"/>
  <match src="primitive_type [4227,4234]" dest="primitive_type [24536,24543]"/>
  <match src="parameter [48128,48133]" dest="parameter [54866,54871]"/>
  <match src=",: , [39002,39003]" dest=",: , [45450,45451]"/>
  <match src="comment: /**      * @dev See {IERC20-totalSupply}.      */ [23713,23764]" dest="comment: /**      * @dev See {IERC20-totalSupply}.      */ [29337,29388]"/>
  <match src="(: ( [37440,37441]" dest="(: ( [43870,43871]"/>
  <match src="uint256: uint256 [10049,10056]" dest="uint256: uint256 [7522,7529]"/>
  <match src="parameter [40347,40362]" dest="parameter [46795,46810]"/>
  <match src="): ) [19003,19004]" dest="): ) [16563,16564]"/>
  <match src="identifier: _mint [28499,28504]" dest="identifier: _mint [34123,34128]"/>
  <match src="): ) [1691,1692]" dest="): ) [21647,21648]"/>
  <match src="): ) [24937,24938]" dest="): ) [30561,30562]"/>
  <match src="(: ( [33999,34000]" dest="(: ( [40195,40196]"/>
  <match src="call_expression [27053,27149]" dest="call_expression [32677,32773]"/>
  <match src="identifier: newMax [32890,32896]" dest="identifier: newMax [39077,39083]"/>
  <match src="string_literal [47601,47624]" dest="string_literal [51928,51965]"/>
  <match src="identifier: onlyOwner [37913,37922]" dest="identifier: onlyOwner [44352,44361]"/>
  <match src="&quot;: &quot; [48256,48257]" dest="&quot;: &quot; [54994,54995]"/>
  <match src="block_statement [20604,20659]" dest="block_statement [20143,20198]"/>
  <match src="expression_statement [34785,34814]" dest="expression_statement [40990,41019]"/>
  <match src="identifier: amount [39339,39345]" dest="identifier: amount [45787,45793]"/>
  <match src="type_name [18923,18930]" dest="type_name [16483,16490]"/>
  <match src="&quot;: &quot; [30262,30263]" dest="&quot;: &quot; [35886,35887]"/>
  <match src="primitive_type [836,840]" dest="primitive_type [20792,20796]"/>
  <match src="call_argument [28844,28851]" dest="call_argument [34468,34475]"/>
  <match src="{: { [39061,39062]" dest="{: { [45509,45510]"/>
  <match src="comment: // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691 [9011,9129]" dest="comment: // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691 [4377,4495]"/>
  <match src="returns: returns [7731,7738]" dest="returns: returns [2342,2349]"/>
  <match src="identifier: value [32607,32612]" dest="identifier: value [38794,38799]"/>
  <match src=",: , [30106,30107]" dest=",: , [35730,35731]"/>
  <match src="identifier: pendingOwner [5188,5200]" dest="identifier: pendingOwner [25499,25511]"/>
  <match src="identifier: _min [34008,34012]" dest="identifier: _min [40204,40208]"/>
  <match src="identifier: b [10971,10972]" dest="identifier: b [10368,10369]"/>
  <match src="address: address [5866,5873]" dest="address: address [477,484]"/>
  <match src="): ) [4935,4936]" dest="): ) [25244,25245]"/>
  <match src="parameter [31863,31875]" dest="parameter [37848,37860]"/>
  <match src="parameter [24015,24022]" dest="parameter [29639,29646]"/>
  <match src="identifier: account [38443,38450]" dest="identifier: account [44882,44889]"/>
  <match src=",: , [32880,32881]" dest=",: , [39067,39068]"/>
  <match src="call_argument [34834,34841]" dest="call_argument [41039,41046]"/>
  <match src="primitive_type [22787,22793]" dest="primitive_type [28411,28417]"/>
  <match src=".: . [28795,28796]" dest=".: . [34419,34420]"/>
  <match src="type_name [44874,44881]" dest="type_name [53261,53268]"/>
  <match src="type_name [39823,39830]" dest="type_name [46271,46278]"/>
  <match src="identifier: recipient [28105,28114]" dest="identifier: recipient [33729,33738]"/>
  <match src="}: } [40138,40139]" dest="}: } [46586,46587]"/>
  <match src="type_name [1220,1227]" dest="type_name [21176,21183]"/>
  <match src="(: ( [22755,22756]" dest="(: ( [28379,28380]"/>
  <match src="array_access [37337,37360]" dest="array_access [43767,43790]"/>
  <match src="member_expression [39293,39308]" dest="member_expression [45741,45756]"/>
  <match src="type_name [1261,1268]" dest="type_name [21217,21224]"/>
  <match src="=: = [28775,28776]" dest="=: = [34399,34400]"/>
  <match src="(: ( [26277,26278]" dest="(: ( [31901,31902]"/>
  <match src="type_name [5906,5913]" dest="type_name [517,524]"/>
  <match src="string_literal [30181,30219]" dest="string_literal [35805,35843]"/>
  <match src="private: private [19811,19818]" dest="private: private [19568,19575]"/>
  <match src="call_expression [19526,19607]" dest="call_expression [17086,17167]"/>
  <match src="address: address [18343,18350]" dest="address: address [15904,15911]"/>
  <match src="modifier_invocation [31899,31908]" dest="modifier_invocation [37893,37902]"/>
  <match src="): ) [29304,29305]" dest="): ) [34928,34929]"/>
  <match src="primitive_type [1007,1014]" dest="primitive_type [20963,20970]"/>
  <match src="call_expression [29276,29343]" dest="call_expression [34900,34967]"/>
  <match src="identifier: returndata [20535,20545]" dest="identifier: returndata [20074,20084]"/>
  <match src="returns: returns [6206,6213]" dest="returns: returns [817,824]"/>
  <match src="parameter [13732,13741]" dest="parameter [7995,8004]"/>
  <match src="parameter [7325,7329]" dest="parameter [1936,1940]"/>
  <match src="uint256: uint256 [7706,7713]" dest="uint256: uint256 [2317,2324]"/>
  <match src="call_argument [31962,31966]" dest="call_argument [37956,37960]"/>
  <match src="expression_statement [39900,39976]" dest="expression_statement [46348,46424]"/>
  <match src="comment: /**  * @title ClamableOwnable  * @dev The ClamableOwnable contract is a copy of Claimable Contract by Zeppelin.  * and provides basic authorization control functions. Inherits storage layout of  * ProxyStorage.  */ [3749,3968]" dest="comment: // Dependency file: packages/contracts-por/contracts/interface/ITrueCurrency.sol [2858,2938]"/>
  <match src="call_argument [30177,30178]" dest="call_argument [35801,35802]"/>
  <match src="address: address [895,902]" dest="address: address [20851,20858]"/>
  <match src="primitive_type [30250,30257]" dest="primitive_type [35874,35881]"/>
  <match src="parameter [34556,34570]" dest="parameter [40761,40775]"/>
  <match src="comment: /**      * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.      *      * This is internal function is equivalent to `approve`, and can be used to      * e.g. set automatic allowances for certain subsystems, etc.      *      * Emits an {Approval} event.      *      * Requirements:      *      * - `owner` cannot be the zero address.      * - `spender` cannot be the zero address.      */ [29626,30052]" dest="comment: /**      * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.      *      * This is internal function is equivalent to `approve`, and can be used to      * e.g. set automatic allowances for certain subsystems, etc.      *      * Emits an {Approval} event.      *      * Requirements:      *      * - `owner` cannot be the zero address.      * - `spender` cannot be the zero address.      */ [35250,35676]"/>
  <match src="&quot;: &quot; [37988,37989]" dest="&quot;: &quot; [44427,44428]"/>
  <match src="identifier: sub [39396,39399]" dest="identifier: sub [45844,45847]"/>
  <match src="address: address [2120,2127]" dest="address: address [22076,22083]"/>
  <match src="type_name [1007,1014]" dest="type_name [20963,20970]"/>
  <match src="(: ( [16855,16856]" dest="(: ( [14418,14419]"/>
  <match src="address: address [31101,31108]" dest="address: address [36725,36732]"/>
  <match src="identifier: mod [39346,39349]" dest="identifier: mod [45794,45797]"/>
  <match src="returns: returns [19819,19826]" dest="returns: returns [19581,19588]"/>
  <match src="return_type_definition [7731,7745]" dest="return_type_definition [2342,2356]"/>
  <match src="&quot;: &quot; [37362,37363]" dest="&quot;: &quot; [43792,43793]"/>
  <match src="return_type_definition [24599,24616]" dest="return_type_definition [30223,30240]"/>
  <match src="call_argument [30160,30179]" dest="call_argument [35784,35803]"/>
  <match src="{: { [34047,34048]" dest="{: { [40252,40253]"/>
  <match src="return_statement [24437,24449]" dest="return_statement [30061,30073]"/>
  <match src="identifier: amount [27732,27738]" dest="identifier: amount [33356,33362]"/>
  <match src="return: return [26389,26395]" dest="return: return [32013,32019]"/>
  <match src="comment: /**      * @dev Returns the amount of tokens owned by `account`.      */ [5767,5841]" dest="comment: /**      * @dev Returns the amount of tokens owned by `account`.      */ [378,452]"/>
  <match src="function_definition [48087,48169]" dest="function_definition [54825,54907]"/>
  <match src="primitive_type [37866,37873]" dest="primitive_type [44296,44303]"/>
  <match src="memory: memory [22794,22800]" dest="memory: memory [28418,28424]"/>
  <match src="variable_declaration_statement [31920,31969]" dest="variable_declaration_statement [37914,37963]"/>
  <match src="function_body [48045,48079]" dest="function_body [54783,54817]"/>
  <match src="identifier: name [22751,22755]" dest="identifier: name [28375,28379]"/>
  <match src="identifier: _approve [30067,30075]" dest="identifier: _approve [35691,35699]"/>
  <match src="function_definition [7649,7746]" dest="function_definition [2260,2357]"/>
  <match src="type_name [31526,31541]" dest="type_name [37502,37517]"/>
  <match src="binary_expression [20224,20245]" dest="binary_expression [19763,19784]"/>
  <match src="type_name [40364,40371]" dest="type_name [46812,46819]"/>
  <match src="return: return [12415,12421]" dest="return: return [18757,18763]"/>
  <match src="visibility [6556,6564]" dest="visibility [1167,1175]"/>
  <match src="identifier: errorMessage [13014,13026]" dest="identifier: errorMessage [11225,11237]"/>
  <match src="function: function [24519,24527]" dest="function: function [30143,30151]"/>
  <match src="call_argument [34066,34078]" dest="call_argument [40271,40283]"/>
  <match src="&quot;: &quot; [28597,28598]" dest="&quot;: &quot; [34221,34222]"/>
  <match src="identifier: sub [10585,10588]" dest="identifier: require [8049,8056]"/>
  <match src="uint256: uint256 [12361,12368]" dest="uint256: uint256 [9730,9737]"/>
  <match src="identifier: addedValue [44882,44892]" dest="identifier: newHeartbeat [53269,53281]"/>
  <match src="string: string [48223,48229]" dest="string: string [54961,54967]"/>
  <match src="identifier: account [29284,29291]" dest="identifier: account [34908,34915]"/>
  <match src="comment: /**      * @dev Emitted when `value` tokens are minted for `to`      * @param to address to mint tokens for      * @param value amount of tokens to be minted      */ [36581,36750]" dest="comment: /**      * @dev Emitted when `value` tokens are minted for `to`      * @param to address to mint tokens for      * @param value amount of tokens to be minted      */ [43002,43171]"/>
  <match src="expression_statement [39986,40081]" dest="expression_statement [46434,46529]"/>
  <match src="address: address [1007,1014]" dest="address: address [20963,20970]"/>
  <match src="visibility [48008,48014]" dest="visibility [54746,54752]"/>
  <match src="identifier: burnMax [34713,34720]" dest="identifier: burnMax [40918,40925]"/>
  <match src="address: address [16777,16784]" dest="address: address [14340,14347]"/>
  <match src="binary_expression [13122,13127]" dest="binary_expression [9226,9231]"/>
  <match src="call_argument [18493,18494]" dest="call_argument [16053,16054]"/>
  <match src=".: . [19547,19548]" dest=".: . [17107,17108]"/>
  <match src="unary_expression [39080,39094]" dest="unary_expression [45528,45542]"/>
  <match src="=&gt;: =&gt; [1502,1504]" dest="=&gt;: =&gt; [21458,21460]"/>
  <match src="for: for [22628,22631]" dest="for: for [28252,28255]"/>
  <match src="identifier: BurnableTokenWithBounds [36304,36327]" dest="identifier: BurnableTokenWithBounds [42725,42748]"/>
  <match src="primitive_type [16848,16855]" dest="primitive_type [14411,14418]"/>
  <match src="primitive_type [18991,18996]" dest="primitive_type [16551,16556]"/>
  <match src="internal: internal [34572,34580]" dest="internal: internal [40777,40785]"/>
  <match src="address: address [8198,8205]" dest="address: address [2809,2816]"/>
  <match src="): ) [25618,25619]" dest="): ) [31242,31243]"/>
  <match src="contract_body [32365,34861]" dest="contract_body [38552,41066]"/>
  <match src="comment: /**  * @title TrueUSD  * @dev This is the top-level ERC20 contract, but most of the interesting functionality is  * inherited - see the documentation on the corresponding contracts.  */ [47667,47856]" dest="comment: /**  * @title TrueUSD  * @dev This is the top-level ERC20 contract, but most of the interesting functionality is  * inherited - see the documentation on the corresponding contracts.  */ [54406,54595]"/>
  <match src="type_name [24538,24545]" dest="type_name [30162,30169]"/>
  <match src="call_argument [30239,30260]" dest="call_argument [35863,35884]"/>
  <match src="primitive_type [41044,41051]" dest="primitive_type [47492,47499]"/>
  <match src="visibility [26980,26986]" dest="visibility [32604,32610]"/>
  <match src="function_body [28555,28868]" dest="function_body [34179,34492]"/>
  <match src="type_cast_expression [31590,31603]" dest="type_cast_expression [37575,37588]"/>
  <match src=",: , [18042,18043]" dest=",: , [15603,15604]"/>
  <match src="call_expression [34785,34813]" dest="call_expression [40990,41018]"/>
  <match src="type_cast_expression [31954,31967]" dest="type_cast_expression [37948,37961]"/>
  <match src="function_definition [16758,17155]" dest="function_definition [14321,14718]"/>
  <match src="(: ( [12977,12978]" dest="(: ( [11188,11189]"/>
  <match src="=&gt;: =&gt; [1521,1523]" dest="=&gt;: =&gt; [21477,21479]"/>
  <match src="function_body [24373,24456]" dest="function_body [29997,30080]"/>
  <match src="(: ( [41162,41163]" dest="(: ( [47610,47611]"/>
  <match src="return: return [27161,27167]" dest="return: return [32785,32791]"/>
  <match src="string [19066,19109]" dest="string [16626,16669]"/>
  <match src="let: let [20458,20461]" dest="let: let [19997,20000]"/>
  <match src="identifier: require [28566,28573]" dest="identifier: require [34190,34197]"/>
  <match src="function_body [13775,13838]" dest="function_body [17749,17848]"/>
  <match src="identifier: recipient [25601,25610]" dest="identifier: recipient [31225,31234]"/>
  <match src="*: * [11762,11763]" dest="*: * [8511,8512]"/>
  <match src="identifier: sender [39467,39473]" dest="identifier: sender [45915,45921]"/>
  <match src="internal: internal [11425,11433]" dest="internal: internal [8423,8431]"/>
  <match src="call_expression [39986,40080]" dest="call_expression [46434,46528]"/>
  <match src="identifier: target [18931,18937]" dest="identifier: target [16491,16497]"/>
  <match src="address: address [1447,1454]" dest="address: address [21403,21410]"/>
  <match src="call_argument [27962,27971]" dest="call_argument [33586,33595]"/>
  <match src="member_expression [20224,20241]" dest="member_expression [19763,19780]"/>
  <match src="parameter [24851,24865]" dest="parameter [30475,30489]"/>
  <match src="virtual: virtual [25540,25547]" dest="virtual: virtual [31164,31171]"/>
  <match src="call_argument [39161,39186]" dest="call_argument [45609,45634]"/>
  <match src="(: ( [1446,1447]" dest="(: ( [21402,21403]"/>
  <match src="type_name [24367,24371]" dest="type_name [29991,29995]"/>
  <match src="function_definition [10036,10217]" dest="function_definition [7509,7688]"/>
  <match src="expression_statement [28706,28746]" dest="expression_statement [34330,34370]"/>
  <match src="primitive_type [2013,2020]" dest="primitive_type [21969,21976]"/>
  <match src="false [995,1000]" dest="false [20951,20956]"/>
  <match src="visibility [41061,41069]" dest="visibility [47509,47517]"/>
  <match src="identifier: decimals [23630,23638]" dest="identifier: decimals [29254,29262]"/>
  <match src="return_statement [23851,23871]" dest="return_statement [29475,29495]"/>
  <match src="): ) [29395,29396]" dest="): ) [35019,35020]"/>
  <match src="(: ( [23638,23639]" dest="(: ( [29262,29263]"/>
  <match src="string_literal [34080,34116]" dest="string_literal [40285,40321]"/>
  <match src="primitive_type [32866,32873]" dest="primitive_type [39053,39060]"/>
  <match src="primitive_type [8223,8230]" dest="primitive_type [2834,2841]"/>
  <match src="state_mutability [48315,48319]" dest="state_mutability [55044,55048]"/>
  <match src="binary_expression [27776,27796]" dest="binary_expression [33400,33420]"/>
  <match src="identifier: _msgSender [26339,26349]" dest="identifier: _msgSender [31963,31973]"/>
  <match src="array_access [30312,30339]" dest="array_access [35936,35963]"/>
  <match src="}: } [20597,20598]" dest="}: } [20136,20137]"/>
  <match src="visibility [46924,46932]" dest="visibility [5585,5593]"/>
  <match src=",: , [26953,26954]" dest=",: , [32577,32578]"/>
  <match src="identifier: recipient [39378,39387]" dest="identifier: recipient [45826,45835]"/>
  <match src="member_expression [33362,33372]" dest="member_expression [39558,39568]"/>
  <match src="call_argument [11053,11059]" dest="call_argument [10450,10456]"/>
  <match src="visibility [24334,24340]" dest="visibility [29958,29964]"/>
  <match src="primitive_type [1395,1402]" dest="primitive_type [21351,21358]"/>
  <match src="string_literal [37362,37400]" dest="string_literal [43792,43830]"/>
  <match src="call_argument [43990,44032]" dest="call_argument [51448,51495]"/>
  <match src="contract: contract [32314,32322]" dest="contract: contract [38501,38509]"/>
  <match src="primitive_type [26955,26962]" dest="primitive_type [32579,32586]"/>
  <match src="state_variable_declaration [2013,2059]" dest="state_variable_declaration [21969,22015]"/>
  <match src="type_name [42243,42250]" dest="type_name [47962,47969]"/>
  <match src="call_argument [30389,30395]" dest="call_argument [36013,36019]"/>
  <match src="uint256: uint256 [16804,16811]" dest="uint256: uint256 [14367,14374]"/>
  <match src="type_name [45521,45528]" dest="type_name [48907,48914]"/>
  <match src="address: address [31526,31533]" dest="address: address [37502,37509]"/>
  <match src="call_expression [34609,34684]" dest="call_expression [40814,40889]"/>
  <match src="member_expression [25661,25698]" dest="member_expression [31285,31322]"/>
  <match src="using_directive [22646,22672]" dest="using_directive [28270,28296]"/>
  <match src="boolean_literal [24444,24448]" dest="boolean_literal [30068,30072]"/>
  <match src="identifier: _msgSender [27065,27075]" dest="identifier: _msgSender [32689,32699]"/>
  <match src="function_definition [18892,19118]" dest="function_definition [16452,16678]"/>
  <match src="parameter [24608,24615]" dest="parameter [30232,30239]"/>
  <match src="primitive_type [29232,29239]" dest="primitive_type [34856,34863]"/>
  <match src="primitive_type [7274,7281]" dest="primitive_type [1885,1892]"/>
  <match src="comment: /**      * @dev Replacement for Solidity's `transfer`: sends `amount` wei to      * `recipient`, forwarding all available gas and reverting on errors.      *      * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost      * of certain opcodes, possibly making contracts go over the 2300 gas limit      * imposed by `transfer`, making them unable to receive funds via      * `transfer`. {sendValue} removes this limitation.      *      * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].      *      * IMPORTANT: because control is transferred to `recipient`, care must be      * taken to not create reentrancy vulnerabilities. Consider using      * {ReentrancyGuard} or the      * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].      */ [15831,16752]" dest="comment: /**      * @dev Replacement for Solidity's `transfer`: sends `amount` wei to      * `recipient`, forwarding all available gas and reverting on errors.      *      * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost      * of certain opcodes, possibly making contracts go over the 2300 gas limit      * imposed by `transfer`, making them unable to receive funds via      * `transfer`. {sendValue} removes this limitation.      *      * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].      *      * IMPORTANT: because control is transferred to `recipient`, care must be      * taken to not create reentrancy vulnerabilities. Consider using      * {ReentrancyGuard} or the      * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].      */ [13394,14315]"/>
  <match src="(: ( [25638,25639]" dest="(: ( [31262,31263]"/>
  <match src="identifier: data [19656,19660]" dest="identifier: data [17794,17798]"/>
  <match src="): ) [25750,25751]" dest="): ) [31374,31375]"/>
  <match src=",: , [31875,31876]" dest=",: , [37860,37861]"/>
  <match src="identifier: _balances [28013,28022]" dest="identifier: _balances [33637,33646]"/>
  <match src="parameter [7291,7305]" dest="parameter [1902,1916]"/>
  <match src="identifier: REDEMPTION_ADDRESS_COUNT [41127,41151]" dest="identifier: REDEMPTION_ADDRESS_COUNT [47575,47599]"/>
  <match src="(: ( [18990,18991]" dest="(: ( [16550,16551]"/>
  <match src="call_argument [10150,10156]" dest="call_argument [7623,7629]"/>
  <match src="call_argument [34080,34116]" dest="call_argument [40285,40321]"/>
  <match src="returns: returns [48029,48036]" dest="returns: returns [54767,54774]"/>
  <match src="=: = [38088,38089]" dest="=: = [44527,44528]"/>
  <match src="primitive_type [5142,5149]" dest="primitive_type [25451,25458]"/>
  <match src="parameter [5142,5158]" dest="parameter [25451,25467]"/>
  <match src="): ) [22937,22938]" dest="): ) [28561,28562]"/>
  <match src="comment: // solhint-disable-next-line avoid-low-level-calls, avoid-call-value [16926,16994]" dest="comment: // solhint-disable-next-line avoid-low-level-calls, avoid-call-value [14489,14557]"/>
  <match src="type_name [1122,1129]" dest="type_name [21078,21085]"/>
  <match src="identifier: errorMessage [19469,19481]" dest="identifier: errorMessage [17029,17041]"/>
  <match src="(: ( [27856,27857]" dest="(: ( [33480,33481]"/>
  <match src="{: { [48135,48136]" dest="{: { [54873,54874]"/>
  <match src="address: address [19730,19737]" dest="address: address [17677,17684]"/>
  <match src="call_expression [12422,12461]" dest="call_expression [18764,18841]"/>
  <match src="identifier: value [18966,18971]" dest="identifier: value [16526,16531]"/>
  <match src="identifier: msg [33362,33365]" dest="identifier: msg [39558,39561]"/>
  <match src="identifier: data [17967,17971]" dest="identifier: data [15530,15534]"/>
  <match src=",: , [40362,40363]" dest=",: , [46810,46811]"/>
  <match src="identifier: subtractedValue [27092,27107]" dest="identifier: subtractedValue [32716,32731]"/>
  <match src="(: ( [5724,5725]" dest="(: ( [335,336]"/>
  <match src="identifier: _to [31577,31580]" dest="identifier: _to [37562,37565]"/>
  <match src="array_access [28118,28138]" dest="array_access [33742,33762]"/>
  <match src="identifier: b [10130,10131]" dest="identifier: b [7603,7604]"/>
  <match src="identifier: require [16840,16847]" dest="identifier: require [14403,14410]"/>
  <match src="(: ( [24833,24834]" dest="(: ( [30457,30458]"/>
  <match src="&lt;=: &lt;= [34071,34073]" dest="&lt;=: &lt;= [40276,40278]"/>
  <match src="visibility [42222,42228]" dest="visibility [47939,47947]"/>
  <match src="type_cast_expression [37942,37958]" dest="type_cast_expression [44381,44397]"/>
  <match src="return: return [13227,13233]" dest="return: return [11321,11327]"/>
  <match src="(: ( [27688,27689]" dest="(: ( [33312,33313]"/>
  <match src="comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts with custom message on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [12477,12959]" dest="comment: /**      * @dev Returns the multiplication of two unsigned integers, with an overflow flag.      *      * _Available since v3.4._      */ [6040,6181]"/>
  <match src="boolean_literal [44052,44056]" dest="boolean_literal [6012,6016]"/>
  <match src="): ) [22756,22757]" dest="): ) [28380,28381]"/>
  <match src="]: ] [30338,30339]" dest="]: ] [35962,35963]"/>
  <match src=",: , [19438,19439]" dest=",: , [16998,16999]"/>
  <match src="identifier: sub [39335,39338]" dest="identifier: sub [45783,45786]"/>
  <match src="{: { [1870,1871]" dest="{: { [21826,21827]"/>
  <match src="identifier: require [30152,30159]" dest="identifier: require [35776,35783]"/>
  <match src="identifier: b [13740,13741]" dest="identifier: b [8003,8004]"/>
  <match src="(: ( [23830,23831]" dest="(: ( [29454,29455]"/>
  <match src="bool: bool [7325,7329]" dest="bool: bool [1936,1940]"/>
  <match src="function_body [31909,32015]" dest="function_body [37903,38009]"/>
  <match src="identifier: owner [4691,4696]" dest="identifier: owner [25000,25005]"/>
  <match src="call_argument [39908,39929]" dest="call_argument [46356,46377]"/>
  <match src="(: ( [8946,8947]" dest="(: ( [4312,4313]"/>
  <match src="identifier: amount [37291,37297]" dest="identifier: amount [43712,43718]"/>
  <match src="identifier: ClaimableOwnable [22572,22588]" dest="identifier: ClaimableOwnable [28196,28212]"/>
  <match src="return_type_definition [22959,22982]" dest="return_type_definition [28583,28606]"/>
  <match src="identifier: require [11776,11783]" dest="identifier: require [8525,8532]"/>
  <match src="call_expression [28777,28807]" dest="call_expression [34401,34431]"/>
  <match src="): ) [38465,38466]" dest="): ) [44904,44905]"/>
  <match src="primitive_type [24608,24615]" dest="primitive_type [30232,30239]"/>
  <match src="type_name [32882,32889]" dest="type_name [39069,39076]"/>
  <match src="(: ( [11783,11784]" dest="(: ( [8532,8533]"/>
  <match src="identifier: amount [28035,28041]" dest="identifier: amount [33659,33665]"/>
  <match src="&quot;: &quot; [30181,30182]" dest="&quot;: &quot; [35805,35806]"/>
  <match src="call_argument [39994,40032]" dest="call_argument [46442,46480]"/>
  <match src="identifier: amount [24419,24425]" dest="identifier: amount [30043,30049]"/>
  <match src="identifier: amount [40513,40519]" dest="identifier: amount [46961,46967]"/>
  <match src="function: function [18321,18329]" dest="function: function [15882,15890]"/>
  <match src="identifier: recipient [27962,27971]" dest="identifier: recipient [33586,33595]"/>
  <match src="primitive_type [6579,6586]" dest="primitive_type [1190,1197]"/>
  <match src="(: ( [24298,24299]" dest="(: ( [29922,29923]"/>
  <match src="address: address [27870,27877]" dest="address: address [33494,33501]"/>
  <match src=".: . [39345,39346]" dest=".: . [45793,45794]"/>
  <match src="string [16881,16912]" dest="string [14444,14475]"/>
  <match src="memory: memory [48230,48236]" dest="memory: memory [54968,54974]"/>
  <match src="public: public [48299,48305]" dest="public: public [55037,55043]"/>
  <match src="identifier: require [29276,29283]" dest="identifier: require [34900,34907]"/>
  <match src=",: , [28851,28852]" dest=",: , [34475,34476]"/>
  <match src="primitive_type [47917,47922]" dest="primitive_type [54655,54660]"/>
  <match src="parameter [27689,27703]" dest="parameter [33313,33327]"/>
  <match src="function_body [14418,14489]" dest="function_body [9773,9857]"/>
  <match src="address: address [4258,4265]" dest="address: address [24567,24574]"/>
  <match src="identifier: a [13122,13123]" dest="identifier: a [9226,9227]"/>
  <match src="(: ( [18478,18479]" dest="(: ( [16038,16039]"/>
  <match src="contract_declaration [36270,41187]" dest="contract_declaration [42691,47635]"/>
  <match src="state_variable_declaration [47952,47980]" dest="state_variable_declaration [54690,54718]"/>
  <match src="): ) [47561,47562]" dest="): ) [51808,51809]"/>
  <match src="parameter [10963,10972]" dest="parameter [10360,10369]"/>
  <match src="type_name [16777,16792]" dest="type_name [14340,14355]"/>
  <match src="address: address [7960,7967]" dest="address: address [2571,2578]"/>
  <match src="identifier: msg [8903,8906]" dest="identifier: msg [4269,4272]"/>
  <match src="): ) [15268,15269]" dest="): ) [13028,13029]"/>
  <match src="call_argument [39467,39473]" dest="call_argument [45915,45921]"/>
  <match src="primitive_type [45521,45528]" dest="primitive_type [48907,48914]"/>
  <match src="identifier: _burn [29209,29214]" dest="identifier: _burn [34833,34838]"/>
  <match src="!: ! [39994,39995]" dest="!: ! [46442,46443]"/>
  <match src="string [39188,39228]" dest="string [45636,45676]"/>
  <match src="address: address [23960,23967]" dest="address: address [29584,29591]"/>
  <match src="identifier: mod [13793,13796]" dest="identifier: functionStaticCall [17767,17785]"/>
  <match src="identifier: amount [30342,30348]" dest="identifier: amount [35966,35972]"/>
  <match src="}: } [31151,31152]" dest="}: } [36775,36776]"/>
  <match src=",: , [14345,14346]" dest=",: , [9108,9109]"/>
  <match src="): ) [5881,5882]" dest="): ) [492,493]"/>
  <match src=",: , [32597,32598]" dest=",: , [38784,38785]"/>
  <match src=",: , [7289,7290]" dest=",: , [1900,1901]"/>
  <match src="public: public [48193,48199]" dest="public: public [54931,54937]"/>
  <match src="[: [ [37351,37352]" dest="[: [ [43781,43782]"/>
  <match src="primitive_type [19783,19789]" dest="primitive_type [19540,19546]"/>
  <match src="type_name [11748,11755]" dest="type_name [8497,8504]"/>
  <match src="type_name [1187,1193]" dest="type_name [21143,21149]"/>
  <match src="uint256: uint256 [40364,40371]" dest="uint256: uint256 [46812,46819]"/>
  <match src="identifier: burnMin [1069,1076]" dest="identifier: burnMin [21025,21032]"/>
  <match src="call_argument [28840,28841]" dest="call_argument [34464,34465]"/>
  <match src="identifier: Burn [34829,34833]" dest="identifier: Burn [41034,41038]"/>
  <match src="string [30262,30298]" dest="string [35886,35922]"/>
  <match src="): ) [36800,36801]" dest="): ) [43221,43222]"/>
  <match src="expression_statement [30312,30349]" dest="expression_statement [35936,35973]"/>
  <match src="(: ( [17990,17991]" dest="(: ( [15553,15554]"/>
  <match src="identifier: spender [27044,27051]" dest="identifier: spender [32668,32675]"/>
  <match src="): ) [20563,20564]" dest="): ) [20102,20103]"/>
  <match src="user_defined_type [1956,1972]" dest="user_defined_type [21912,21928]"/>
  <match src="state_variable_declaration [895,925]" dest="state_variable_declaration [20851,20881]"/>
  <match src="}: } [31619,31620]" dest="}: } [37604,37605]"/>
  <match src=",: , [18491,18492]" dest=",: , [16051,16052]"/>
  <match src="parameter [31877,31888]" dest="parameter [37862,37873]"/>
  <match src="(: ( [30176,30177]" dest="(: ( [35800,35801]"/>
  <match src="unary_expression [37420,37449]" dest="unary_expression [43850,43879]"/>
  <match src="number_literal: 0 [28673,28674]" dest="number_literal: 0 [34297,34298]"/>
  <match src="string [25707,25749]" dest="string [31331,31373]"/>
  <match src="yul_variable_declaration [20458,20498]" dest="yul_variable_declaration [19997,20037]"/>
  <match src="call_argument [18036,18042]" dest="call_argument [15597,15603]"/>
  <match src="): ) [12402,12403]" dest="): ) [9771,9772]"/>
  <match src="identifier: amount [46910,46916]" dest="identifier: amount [51052,51058]"/>
  <match src="(: ( [6523,6524]" dest="(: ( [1134,1135]"/>
  <match src="[: [ [40008,40009]" dest="[: [ [46456,46457]"/>
  <match src="internal: internal [18973,18981]" dest="internal: internal [16533,16541]"/>
  <match src="): ) [1531,1532]" dest="): ) [21487,21488]"/>
  <match src="string_literal [13803,13829]" dest="string_literal [17800,17839]"/>
  <match src="primitive_type [29591,29598]" dest="primitive_type [35215,35222]"/>
  <match src="&quot;: &quot; [29341,29342]" dest="&quot;: &quot; [34965,34966]"/>
  <match src="if: if [20075,20077]" dest="if: if [19614,19616]"/>
  <match src="identifier: _transfer [27679,27688]" dest="identifier: _transfer [33303,33312]"/>
  <match src="type_name [39013,39020]" dest="type_name [45461,45468]"/>
  <match src="(: ( [39993,39994]" dest="(: ( [46441,46442]"/>
  <match src="call_argument [40034,40079]" dest="call_argument [46482,46527]"/>
  <match src="event_definition [36756,36802]" dest="event_definition [43177,43223]"/>
  <match src="identifier: a [12358,12359]" dest="identifier: a [9727,9728]"/>
  <match src="type_name [11403,11410]" dest="type_name [8401,8408]"/>
  <match src="identifier: recipient [24307,24316]" dest="identifier: recipient [29931,29940]"/>
  <match src="parameter [27004,27008]" dest="parameter [32628,32632]"/>
  <match src="string [43990,44032]" dest="string [51448,51495]"/>
  <match src="identifier: _allowances [1468,1479]" dest="identifier: _allowances [21424,21435]"/>
  <match src="uint256: uint256 [10524,10531]" dest="uint256: uint256 [12028,12035]"/>
  <match src="(: ( [28504,28505]" dest="(: ( [34128,34129]"/>
  <match src="primitive_type [8868,8883]" dest="primitive_type [4234,4249]"/>
  <match src="identifier: require [37412,37419]" dest="identifier: require [43842,43849]"/>
  <match src="memory: memory [19462,19468]" dest="memory: memory [17022,17028]"/>
  <match src=",: , [24406,24407]" dest=",: , [30030,30031]"/>
  <match src="type_name [23831,23838]" dest="type_name [29455,29462]"/>
  <match src="memory: memory [19427,19433]" dest="memory: memory [16987,16993]"/>
  <match src="==: == [40028,40030]" dest="==: == [46476,46478]"/>
  <match src="string [37451,37498]" dest="string [43881,43928]"/>
  <match src="address: address [7938,7945]" dest="address: address [2549,2556]"/>
  <match src="type_name [4258,4265]" dest="type_name [24567,24574]"/>
  <match src="(: ( [22936,22937]" dest="(: ( [28560,28561]"/>
  <match src="contract: contract [36279,36287]" dest="contract: contract [42700,42708]"/>
  <match src="}: } [5218,5219]" dest="}: } [25529,25530]"/>
  <match src="type_name [6162,6169]" dest="type_name [773,780]"/>
  <match src="call_argument [31994,31997]" dest="call_argument [37988,37991]"/>
  <match src="string [13803,13829]" dest="string [17800,17839]"/>
  <match src="emit_statement [4492,4537]" dest="emit_statement [24801,24846]"/>
  <match src="uint256: uint256 [26955,26962]" dest="uint256: uint256 [32579,32586]"/>
  <match src="identifier: c [11756,11757]" dest="identifier: c [8505,8506]"/>
  <match src="{: { [37318,37319]" dest="{: { [43748,43749]"/>
  <match src="string [29470,29506]" dest="string [35094,35130]"/>
  <match src="member_expression [39328,39338]" dest="member_expression [45776,45786]"/>
  <match src="identifier: canBurn [40417,40424]" dest="identifier: canBurn [46865,46872]"/>
  <match src=".: . [4890,4891]" dest=".: . [25199,25200]"/>
  <match src="contract_declaration [3970,5501]" dest="contract_declaration [24279,25814]"/>
  <match src="expression_statement [29356,29406]" dest="expression_statement [34980,35030]"/>
  <match src="identifier: amount [39400,39406]" dest="identifier: amount [45848,45854]"/>
  <match src=",: , [19564,19565]" dest=",: , [17124,17125]"/>
  <match src="identifier: add [28734,28737]" dest="identifier: add [34358,34361]"/>
  <match src="binary_expression [36359,36365]" dest="binary_expression [42780,42786]"/>
  <match src="parameter [47417,47434]" dest="parameter [52729,52744]"/>
  <match src="true [26396,26400]" dest="true [32020,32024]"/>
  <match src="identifier: _balances [24042,24051]" dest="identifier: _balances [29666,29675]"/>
  <match src="call_argument [29386,29396]" dest="call_argument [35010,35020]"/>
  <match src="(: ( [19827,19828]" dest="(: ( [19588,19589]"/>
  <match src="identifier: sender [27776,27782]" dest="identifier: sender [33400,33406]"/>
  <match src="{: { [20138,20139]" dest="{: { [19677,19678]"/>
  <match src=",: , [45792,45793]" dest=",: , [51709,51710]"/>
  <match src="{: { [24906,24907]" dest="{: { [30530,30531]"/>
  <match src="): ) [19513,19514]" dest="): ) [17073,17074]"/>
  <match src="library_declaration [14594,20680]" dest="library_declaration [12354,20219]"/>
  <match src="): ) [30298,30299]" dest="): ) [35922,35923]"/>
  <match src=",: , [12427,12428]" dest=",: , [18791,18792]"/>
  <match src="(: ( [10093,10094]" dest="(: ( [7566,7567]"/>
  <match src="address: address [29386,29393]" dest="address: address [35010,35017]"/>
  <match src="type_cast_expression [16848,16861]" dest="type_cast_expression [14411,14424]"/>
  <match src="visibility [11425,11433]" dest="visibility [8423,8431]"/>
  <match src="return: return [10201,10207]" dest="return: return [7672,7678]"/>
  <match src="): ) [26377,26378]" dest="): ) [32001,32002]"/>
  <match src=",: , [13084,13085]" dest=",: , [11295,11296]"/>
  <match src="identifier: a [11097,11098]" dest="identifier: a [8116,8117]"/>
  <match src="&quot;: &quot; [10186,10187]" dest="&quot;: &quot; [7659,7660]"/>
  <match src="}: } [17154,17155]" dest="}: } [14717,14718]"/>
  <match src="identifier: _msgSender [25647,25657]" dest="identifier: _msgSender [31271,31281]"/>
  <match src="primitive_type [6162,6169]" dest="primitive_type [773,780]"/>
  <match src="(: ( [39265,39266]" dest="(: ( [45713,45714]"/>
  <match src="&quot;: &quot; [47623,47624]" dest="&quot;: &quot; [51964,51965]"/>
  <match src="}: } [39504,39505]" dest="}: } [45952,45953]"/>
  <match src="yul_path [20548,20563]" dest="yul_path [20087,20102]"/>
  <match src="identifier: _burn [39372,39377]" dest="identifier: _burn [45820,45825]"/>
  <match src="): ) [17057,17058]" dest="): ) [14620,14621]"/>
  <match src="parameter [42243,42250]" dest="parameter [47962,47969]"/>
  <match src=",: , [19763,19764]" dest=",: , [19538,19539]"/>
  <match src="identifier: name [48186,48190]" dest="identifier: name [54924,54928]"/>
  <match src="&quot;: &quot; [48362,48363]" dest="&quot;: &quot; [55100,55101]"/>
  <match src="state_mutability [5892,5896]" dest="state_mutability [503,507]"/>
  <match src="call_argument [31954,31967]" dest="call_argument [37948,37961]"/>
  <match src="binary_expression [13079,13084]" dest="binary_expression [11290,11295]"/>
  <match src="function_body [23840,23878]" dest="function_body [29464,29502]"/>
  <match src="}: } [23704,23705]" dest="}: } [29328,29329]"/>
  <match src="revert_statement [20623,20644]" dest="revert_statement [20162,20183]"/>
  <match src="call_argument [4698,4710]" dest="call_argument [25007,25019]"/>
  <match src="parameter [31526,31545]" dest="parameter [37502,37521]"/>
  <match src="identifier: amount [30389,30395]" dest="identifier: amount [36013,36019]"/>
  <match src="return_statement [19016,19111]" dest="return_statement [16576,16671]"/>
  <match src="revert: revert [20520,20526]" dest="revert: revert [20059,20065]"/>
  <match src="variable_declaration [11748,11757]" dest="variable_declaration [8497,8506]"/>
  <match src="memory: memory [20007,20013]" dest="memory: memory [17332,17338]"/>
  <match src=".: . [39456,39457]" dest=".: . [45904,45905]"/>
  <match src="assignment_expression [4463,4481]" dest="assignment_expression [24772,24790]"/>
  <match src="identifier: amount [7714,7720]" dest="identifier: amount [2325,2331]"/>
  <match src="): ) [48342,48343]" dest="): ) [55080,55081]"/>
  <match src="address: address [46874,46881]" dest="address: address [49168,49175]"/>
  <match src="expression_statement [29276,29344]" dest="expression_statement [34900,34968]"/>
  <match src="(: ( [1512,1513]" dest="(: ( [21468,21469]"/>
  <match src="(: ( [23669,23670]" dest="(: ( [29293,29294]"/>
  <match src="call_expression [25681,25693]" dest="call_expression [31305,31317]"/>
  <match src="virtual: virtual [27749,27756]" dest="virtual: virtual [33373,33380]"/>
  <match src="string_literal [43990,44032]" dest="string_literal [51448,51495]"/>
  <match src="): ) [10187,10188]" dest="): ) [7660,7661]"/>
  <match src="member_expression [4471,4481]" dest="member_expression [24780,24790]"/>
  <match src="visibility [5342,5348]" dest="visibility [25653,25661]"/>
  <match src="comment: /**  * @title BurnableTokenWithBounds  * @dev Burning functions as redeeming money from the system.  * The platform will keep track of who burns coins,  * and will send them back the equivalent amount of money (rounded down to the nearest cent).  */ [32049,32303]" dest="comment: /**  * @title BurnableTokenWithBounds  * @dev Burning functions as redeeming money from the system.  * The platform will keep track of who burns coins,  * and will send them back the equivalent amount of money (rounded down to the nearest cent).  */ [38236,38490]"/>
  <match src="address: address [36528,36535]" dest="address: address [42949,42956]"/>
  <match src="revert: revert [20623,20629]" dest="revert: revert [20162,20168]"/>
  <match src="returns: returns [7316,7323]" dest="returns: returns [1927,1934]"/>
  <match src="): ) [37498,37499]" dest="): ) [43928,43929]"/>
  <match src="identifier: value [36795,36800]" dest="identifier: value [43216,43221]"/>
  <match src="}: } [48078,48079]" dest="}: } [54816,54817]"/>
  <match src="primitive_type [29295,29302]" dest="primitive_type [34919,34926]"/>
  <match src="(: ( [37865,37866]" dest="(: ( [44295,44296]"/>
  <match src="): ) [11073,11074]" dest="): ) [10470,10471]"/>
  <match src="call_argument [19861,19879]" dest="call_argument [17186,17204]"/>
  <match src="emit: emit [4492,4496]" dest="emit: emit [24801,24805]"/>
  <match src="binary_expression [40021,40032]" dest="binary_expression [46469,46480]"/>
  <match src="type_name [26938,26945]" dest="type_name [32562,32569]"/>
  <match src="member_expression [28777,28799]" dest="member_expression [34401,34423]"/>
  <match src="identifier: a [10057,10058]" dest="identifier: a [7530,7531]"/>
  <match src="(: ( [7324,7325]" dest="(: ( [1935,1936]"/>
  <match src="identifier: _burn [33356,33361]" dest="identifier: _burn [39552,39557]"/>
  <match src="identifier: _beforeTokenTransfer [31066,31086]" dest="identifier: _beforeTokenTransfer [36690,36710]"/>
  <match src="return_statement [48249,48266]" dest="return_statement [54987,55004]"/>
  <match src="primitive_type [17005,17009]" dest="primitive_type [14568,14572]"/>
  <match src="primitive_type [31526,31541]" dest="primitive_type [37502,37517]"/>
  <match src="yul_evm_builtin [20520,20526]" dest="yul_evm_builtin [20059,20065]"/>
  <match src="call_expression [14429,14458]" dest="call_expression [9784,9826]"/>
  <match src="is: is [22569,22571]" dest="is: is [28193,28195]"/>
  <match src="binary_expression [28574,28595]" dest="binary_expression [34198,34219]"/>
  <match src="uint256: uint256 [23831,23838]" dest="uint256: uint256 [29455,29462]"/>
  <match src="bool: bool [27004,27008]" dest="bool: bool [32628,32632]"/>
  <match src="identifier: amount [28194,28200]" dest="identifier: amount [33818,33824]"/>
  <match src="): ) [8236,8237]" dest="): ) [2847,2848]"/>
  <match src="primitive_type [37883,37887]" dest="primitive_type [44313,44317]"/>
  <match src="member_expression [26327,26365]" dest="member_expression [31951,31989]"/>
  <match src="call_expression [40492,40520]" dest="call_expression [46940,46968]"/>
  <match src="inheritance_specifier [22590,22597]" dest="inheritance_specifier [28214,28221]"/>
  <match src="string_literal [18050,18082]" dest="string_literal [15611,15643]"/>
  <match src="identifier: require [34695,34702]" dest="identifier: require [40900,40907]"/>
  <match src="(: ( [29283,29284]" dest="(: ( [34907,34908]"/>
  <match src="return: return [48249,48255]" dest="return: return [54987,54993]"/>
  <match src="view: view [42487,42491]" dest="view: view [18140,18144]"/>
  <match src="identifier: spender [40115,40122]" dest="identifier: spender [46563,46570]"/>
  <match src="primitive_type [24834,24841]" dest="primitive_type [30458,30465]"/>
  <match src="comment: /**      * @dev Emitted when the allowance of a `spender` for an `owner` is set by      * a call to {approve}. `value` is the new allowance.      */ [8003,8154]" dest="comment: /**      * @dev Emitted when the allowance of a `spender` for an `owner` is set by      * a call to {approve}. `value` is the new allowance.      */ [2614,2765]"/>
  <match src="identifier: errorMessage [13086,13098]" dest="identifier: errorMessage [11297,11309]"/>
  <match src="identifier: b [11764,11765]" dest="identifier: b [8513,8514]"/>
  <match src="type_name [2112,2136]" dest="type_name [22068,22092]"/>
  <match src="identifier: account [29377,29384]" dest="identifier: account [35001,35008]"/>
  <match src="call_expression [11045,11074]" dest="call_expression [10442,10471]"/>
  <match src="): ) [36571,36572]" dest="): ) [42992,42993]"/>
  <match src="array_access [24635,24662]" dest="array_access [30259,30286]"/>
  <match src="=: = [4469,4470]" dest="=: = [24778,24779]"/>
  <match src="identifier: onlyOwner [37308,37317]" dest="identifier: onlyOwner [43738,43747]"/>
  <match src="(: ( [39410,39411]" dest="(: ( [45858,45859]"/>
  <match src="call_argument [39486,39492]" dest="call_argument [45934,45940]"/>
  <match src="comment: /** @dev Creates `amount` tokens and assigns them to `account`, increasing      * the total supply.      *      * Emits a {Transfer} event with `from` set to the zero address.      *      * Requirements      *      * - `to` cannot be the zero address.      */ [28217,28484]" dest="comment: /** @dev Creates `amount` tokens and assigns them to `account`, increasing      * the total supply.      *      * Emits a {Transfer} event with `from` set to the zero address.      *      * Requirements      *      * - `to` cannot be the zero address.      */ [33841,34108]"/>
  <match src="): ) [19681,19682]" dest="): ) [17455,17456]"/>
  <match src="identifier: recipient [16793,16802]" dest="identifier: recipient [14356,14365]"/>
  <match src="identifier: reclaimToken [31850,31862]" dest="identifier: reclaimToken [37835,37847]"/>
  <match src="(: ( [14335,14336]" dest="(: ( [9098,9099]"/>
  <match src="function_definition [42191,42291]" dest="function_definition [47920,47971]"/>
  <match src="identifier: call [17033,17037]" dest="identifier: call [14596,14600]"/>
  <match src="call_expression [45740,45834]" dest="call_expression [51683,51756]"/>
  <match src="parameter [41044,41059]" dest="parameter [47492,47507]"/>
  <match src="memory: memory [17997,18003]" dest="memory: memory [15560,15566]"/>
  <match src="identifier: RewardAllocation [1956,1972]" dest="identifier: RewardAllocation [21912,21928]"/>
  <match src="state_mutability [11434,11438]" dest="state_mutability [8432,8436]"/>
  <match src="): ) [6586,6587]" dest="): ) [1197,1198]"/>
  <match src="): ) [23838,23839]" dest="): ) [29462,29463]"/>
  <match src="identifier: burnMax [1102,1109]" dest="identifier: burnMax [21058,21065]"/>
  <match src="uint256: uint256 [36335,36342]" dest="uint256: uint256 [42756,42763]"/>
  <match src="): ) [48191,48192]" dest="): ) [54929,54930]"/>
  <match src="visibility [5160,5166]" dest="visibility [25469,25477]"/>
  <match src="identifier: amount [16873,16879]" dest="identifier: amount [14436,14442]"/>
  <match src="&quot;: &quot; [4915,4916]" dest="&quot;: &quot; [25224,25225]"/>
  <match src="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [10225,10494]" dest="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [7696,7965]"/>
  <match src="expression_statement [28095,28151]" dest="expression_statement [33719,33775]"/>
  <match src="type_cast_expression [30250,30260]" dest="type_cast_expression [35874,35884]"/>
  <match src="): ) [7329,7330]" dest="): ) [1940,1941]"/>
  <match src="identifier: transferOwnership [5124,5141]" dest="identifier: transferOwnership [25433,25450]"/>
  <match src="binary_expression [30160,30179]" dest="binary_expression [35784,35803]"/>
  <match src="yul_identifier [15744,15751]" dest="yul_identifier [13343,13350]"/>
  <match src="boolean_literal [45853,45857]" dest="boolean_literal [6921,6925]"/>
  <match src="parameter [17991,18003]" dest="parameter [15554,15566]"/>
  <match src="interface: interface [5606,5615]" dest="interface: interface [217,226]"/>
  <match src="&quot;: &quot; [40435,40436]" dest="&quot;: &quot; [46883,46884]"/>
  <match src="type_name [1683,1690]" dest="type_name [21639,21646]"/>
  <match src="string [27798,27837]" dest="string [33422,33461]"/>
  <match src="bool: bool [7740,7744]" dest="bool: bool [2351,2355]"/>
  <match src="==: == [11790,11792]" dest="==: == [8539,8541]"/>
  <match src="comment: /**      * @dev See {IERC20-allowance}.      */ [24464,24513]" dest="comment: /**      * @dev See {IERC20-allowance}.      */ [30088,30137]"/>
  <match src="array_access [39080,39102]" dest="array_access [45528,45550]"/>
  <match src="(: ( [18922,18923]" dest="(: ( [16482,16483]"/>
  <match src="): ) [13058,13059]" dest="): ) [11269,11270]"/>
  <match src="identifier: recipient [28128,28137]" dest="identifier: recipient [33752,33761]"/>
  <match src="call_argument [39317,39326]" dest="call_argument [45765,45774]"/>
  <match src="bytes: bytes [17991,17996]" dest="bytes: bytes [15554,15559]"/>
  <match src="comment: /**      * @dev Returns the amount of tokens in existence.      */ [5630,5698]" dest="comment: /**      * @dev Returns the amount of tokens in existence.      */ [241,309]"/>
  <match src="call_argument [27053,27149]" dest="call_argument [32677,32773]"/>
  <match src="function_body [5177,5219]" dest="function_body [25488,25530]"/>
  <match src="event_paramater [36528,36551]" dest="event_paramater [42949,42972]"/>
  <match src="override: override [23813,23821]" dest="override: override [29437,29445]"/>
  <match src="}: } [8240,8241]" dest="}: } [2851,2852]"/>
  <match src="if_statement [20075,20670]" dest="if_statement [19614,20209]"/>
  <match src="call_argument [29591,29601]" dest="call_argument [35215,35225]"/>
  <match src="library: library [14594,14601]" dest="library: library [12354,12361]"/>
  <match src="): ) [1619,1620]" dest="): ) [21575,21576]"/>
  <match src="type_name [6579,6586]" dest="type_name [1190,1197]"/>
  <match src="(: ( [1600,1601]" dest="(: ( [21556,21557]"/>
  <match src="bytes: bytes [18939,18944]" dest="bytes: bytes [16499,16504]"/>
  <match src="number_literal: 0 [30177,30178]" dest="number_literal: 0 [35801,35802]"/>
  <match src="solidity: solidity [47647,47655]" dest="solidity: solidity [54264,54272]"/>
  <match src="call_expression [39339,39355]" dest="call_expression [45787,45803]"/>
  <match src=",: , [19654,19655]" dest=",: , [17429,17430]"/>
  <match src="call_expression [40093,40131]" dest="call_expression [46541,46579]"/>
  <match src="assignment_expression [5434,5454]" dest="assignment_expression [25747,25767]"/>
  <match src="type_name [47952,47957]" dest="type_name [54690,54695]"/>
  <match src="type_name [23670,23675]" dest="type_name [29294,29299]"/>
  <match src="(: ( [1671,1672]" dest="(: ( [21627,21628]"/>
  <match src="call_expression [28644,28693]" dest="call_expression [34268,34317]"/>
  <match src="call_argument [29599,29600]" dest="call_argument [35223,35224]"/>
  <match src="event_paramater [8198,8221]" dest="event_paramater [2809,2832]"/>
  <match src="identifier: newMin [32874,32880]" dest="identifier: newMin [39061,39067]"/>
  <match src="): ) [5913,5914]" dest="): ) [524,525]"/>
  <match src="type_name [18958,18965]" dest="type_name [16518,16525]"/>
  <match src="visibility [34572,34580]" dest="visibility [40777,40785]"/>
  <match src="call_argument [16881,16912]" dest="call_argument [14444,14475]"/>
  <match src="function_definition [5316,5498]" dest="function_definition [25627,25811]"/>
  <match src="expression_statement [39372,39419]" dest="expression_statement [45820,45867]"/>
  <match src="{: { [20435,20436]" dest="{: { [19974,19975]"/>
  <match src="user_defined_type [3999,4011]" dest="user_defined_type [24308,24320]"/>
  <match src="indexed: indexed [7968,7975]" dest="indexed: indexed [2579,2586]"/>
  <match src="visibility [808,814]" dest="visibility [20764,20770]"/>
  <match src="{: { [11457,11458]" dest="{: { [8455,8456]"/>
  <match src="yul_path [15744,15751]" dest="yul_path [13343,13350]"/>
  <match src="assignment_expression [34128,34142]" dest="assignment_expression [40333,40347]"/>
  <match src="identifier: this [9005,9009]" dest="identifier: this [4371,4375]"/>
  <match src="(: ( [30257,30258]" dest="(: ( [35881,35882]"/>
  <match src="indexed: indexed [4235,4242]" dest="indexed: indexed [24544,24551]"/>
  <match src="struct_expression [20028,20058]" dest="struct_expression [17353,17380]"/>
  <match src="call_argument [29307,29342]" dest="call_argument [34931,34966]"/>
  <match src="expression_statement [30231,30300]" dest="expression_statement [35855,35924]"/>
  <match src="identifier: account [29223,29230]" dest="identifier: account [34847,34854]"/>
  <match src="identifier: target [18479,18485]" dest="identifier: target [16039,16045]"/>
  <match src="visibility [11002,11010]" dest="visibility [10399,10407]"/>
  <match src="(: ( [5749,5750]" dest="(: ( [360,361]"/>
  <match src="{: { [766,767]" dest="{: { [20722,20723]"/>
  <match src="emit: emit [28818,28822]" dest="emit: emit [34442,34446]"/>
  <match src="!=: != [30247,30249]" dest="!=: != [35871,35873]"/>
  <match src="type_name [38452,38456]" dest="type_name [44891,44895]"/>
  <match src="identifier: delegateTotalSupply [42200,42219]" dest="identifier: version [47929,47936]"/>
  <match src="(: ( [6214,6215]" dest="(: ( [825,826]"/>
  <match src="primitive_type [1158,1164]" dest="primitive_type [21114,21120]"/>
  <match src="primitive_type [36528,36535]" dest="primitive_type [42949,42956]"/>
  <match src="address: address [773,780]" dest="address: address [20729,20736]"/>
  <match src="binary_expression [11784,11789]" dest="binary_expression [8533,8538]"/>
  <match src="): ) [33380,33381]" dest="): ) [39576,39577]"/>
  <match src="identifier: this [16856,16860]" dest="identifier: this [14419,14423]"/>
  <match src="state_variable_declaration [1187,1212]" dest="state_variable_declaration [21143,21168]"/>
  <match src="identifier: token [31870,31875]" dest="identifier: token [37855,37860]"/>
  <match src="boolean_literal [42994,42998]" dest="boolean_literal [54128,54132]"/>
  <match src="call_expression [33356,33381]" dest="call_expression [39552,39577]"/>
  <match src="[: [ [26338,26339]" dest="[: [ [31962,31963]"/>
  <match src="uint256: uint256 [11403,11410]" dest="uint256: uint256 [8401,8408]"/>
  <match src="(: ( [20526,20527]" dest="(: ( [20065,20066]"/>
  <match src="expression_statement [27849,27921]" dest="expression_statement [33473,33545]"/>
  <match src="identifier: totalSupply [5713,5724]" dest="identifier: totalSupply [324,335]"/>
  <match src="return_type_definition [14400,14417]" dest="return_type_definition [9135,9152]"/>
  <match src="primitive_type [27870,27877]" dest="primitive_type [33494,33501]"/>
  <match src="type_cast_expression [28585,28595]" dest="type_cast_expression [34209,34219]"/>
  <match src="type_name [36372,36379]" dest="type_name [42793,42800]"/>
  <match src="type_name [27004,27008]" dest="type_name [32628,32632]"/>
  <match src="(: ( [17054,17055]" dest="(: ( [14617,14618]"/>
  <match src="type_name [19501,19506]" dest="type_name [17061,17066]"/>
  <match src="{: { [48238,48239]" dest="{: { [54976,54977]"/>
  <match src="{: { [38486,38487]" dest="{: { [44934,44935]"/>
  <match src="type_cast_expression [27870,27880]" dest="type_cast_expression [33494,33504]"/>
  <match src="abstract: abstract [36270,36278]" dest="abstract: abstract [42691,42699]"/>
  <match src="identifier: account [29582,29589]" dest="identifier: account [35206,35213]"/>
  <match src="call_argument [28597,28630]" dest="call_argument [34221,34254]"/>
  <match src="visibility [18973,18981]" dest="visibility [16533,16541]"/>
  <match src="emit_statement [34824,34851]" dest="emit_statement [41029,41056]"/>
  <match src="function: function [12965,12973]" dest="function: function [11176,11184]"/>
  <match src="true: true [25769,25773]" dest="true: true [31393,31397]"/>
  <match src="primitive_type [1653,1660]" dest="primitive_type [21609,21616]"/>
  <match src="call_argument [29377,29384]" dest="call_argument [35001,35008]"/>
  <match src="(: ( [28799,28800]" dest="(: ( [34423,34424]"/>
  <match src="{: { [5177,5178]" dest="{: { [25488,25489]"/>
  <match src="pure: pure [11434,11438]" dest="pure: pure [8432,8436]"/>
  <match src="): ) [30395,30396]" dest="): ) [36019,36020]"/>
  <match src="expression_statement [4947,4949]" dest="expression_statement [25256,25258]"/>
  <match src="number_literal: 0 [40031,40032]" dest="number_literal: 0 [46479,46480]"/>
  <match src="}: } [48168,48169]" dest="}: } [54906,54907]"/>
  <match src="address: address [5480,5487]" dest="address: address [25793,25800]"/>
  <match src="=: = [20026,20027]" dest="=: = [17351,17352]"/>
  <match src=",: , [30378,30379]" dest=",: , [36002,36003]"/>
  <match src="string_literal [19881,19912]" dest="string_literal [17206,17237]"/>
  <match src="assignment_expression [5465,5490]" dest="assignment_expression [25778,25803]"/>
  <match src="comment: /**      * @dev Check if tokens can be burned at address before burning      * @param account account to burn tokens from      * @param amount amount of tokens to burn      */ [40147,40326]" dest="comment: /**      * @dev Check if tokens can be burned at address before burning      * @param account account to burn tokens from      * @param amount amount of tokens to burn      */ [46595,46774]"/>
  <match src="call_expression [25583,25619]" dest="call_expression [31207,31243]"/>
  <match src="call_argument [17055,17057]" dest="call_argument [14618,14620]"/>
  <match src="): ) [27738,27739]" dest="): ) [33362,33363]"/>
  <match src="array_access [28095,28115]" dest="array_access [33719,33739]"/>
  <match src="): ) [12370,12371]" dest="): ) [18712,18713]"/>
  <match src="parameter [37283,37297]" dest="parameter [43704,43718]"/>
  <match src="{: { [8808,8809]" dest="{: { [4174,4175]"/>
  <match src="primitive_type [14347,14354]" dest="primitive_type [9110,9117]"/>
  <match src="override_specifier [23813,23821]" dest="override_specifier [29437,29445]"/>
  <match src="(: ( [7273,7274]" dest="(: ( [1884,1885]"/>
  <match src="function_body [24906,24986]" dest="function_body [30530,30610]"/>
  <match src="uint256: uint256 [10094,10101]" dest="uint256: uint256 [7567,7574]"/>
  <match src="visibility [2137,2143]" dest="visibility [22093,22099]"/>
  <match src="expression_statement [19853,19914]" dest="expression_statement [17178,17239]"/>
  <match src="parameter [39013,39027]" dest="parameter [45461,45475]"/>
  <match src="comment: /**  *  :::==== :::====  :::  === :::===== :::  === :::===  :::====  *  :::==== :::  === :::  === :::      :::  === :::     :::  ===  *    ===   =======  ===  === ======   ===  ===  =====  ===  ===  *    ===   === ===  ===  === ===      ===  ===     === ===  ===  *    ===   ===  ===  ======  ========  ======  ======  =======  */ [71,407]" dest="comment: // SPDX-License-Identifier: MIT [70,101]"/>
  <match src="primitive_type [41084,41088]" dest="primitive_type [47532,47536]"/>
  <match src="string [18050,18082]" dest="string [15611,15643]"/>
  <match src="identifier: _balances [1404,1413]" dest="identifier: _balances [21360,21369]"/>
  <match src="identifier: maxRewardProportion_Deprecated [2021,2051]" dest="identifier: maxRewardProportion_Deprecated [21977,22007]"/>
  <match src="]: ] [28009,28010]" dest="]: ] [33633,33634]"/>
  <match src="function: function [19374,19382]" dest="function: function [16934,16942]"/>
  <match src="public: public [45581,45587]" dest="public: public [22172,22178]"/>
  <match src="returns: returns [10549,10556]" dest="returns: returns [12081,12088]"/>
  <match src="identifier: spender [24654,24661]" dest="identifier: spender [30278,30285]"/>
  <match src="identifier: account [28766,28773]" dest="identifier: account [34390,34397]"/>
  <match src="]: ] [27077,27078]" dest="]: ] [32701,32702]"/>
  <match src="identifier: transfer [6153,6161]" dest="identifier: transfer [764,772]"/>
  <match src="return_type_definition [18415,18437]" dest="return_type_definition [15976,15998]"/>
  <match src="): ) [11455,11456]" dest="): ) [8453,8454]"/>
  <match src="): ) [27008,27009]" dest="): ) [32632,32633]"/>
  <match src="}: } [24669,24670]" dest="}: } [30293,30294]"/>
  <match src="call_argument [39188,39228]" dest="call_argument [45636,45676]"/>
  <match src="type_name [19421,19426]" dest="type_name [16981,16986]"/>
  <match src="bool: bool [15264,15268]" dest="bool: bool [13024,13028]"/>
  <match src="call_expression [34058,34117]" dest="call_expression [40263,40322]"/>
  <match src="primitive_type [1494,1501]" dest="primitive_type [21450,21457]"/>
  <match src="expression_statement [27768,27839]" dest="expression_statement [33392,33463]"/>
  <match src="&quot;: &quot; [13828,13829]" dest="&quot;: &quot; [17838,17839]"/>
  <match src="parameter [27705,27722]" dest="parameter [33329,33346]"/>
  <match src="call_argument [4530,4535]" dest="call_argument [24839,24844]"/>
  <match src="(: ( [19986,19987]" dest="(: ( [17311,17312]"/>
  <match src="type_name [13051,13058]" dest="type_name [11262,11269]"/>
  <match src="address: address [30076,30083]" dest="address: address [35700,35707]"/>
  <match src="type_name [8980,8985]" dest="type_name [4346,4351]"/>
  <match src="): ) [32896,32897]" dest="): ) [39083,39084]"/>
  <match src="(: ( [20223,20224]" dest="(: ( [19762,19763]"/>
  <match src="array_access [29439,29457]" dest="array_access [35063,35081]"/>
  <match src="): ) [7720,7721]" dest="): ) [2331,2332]"/>
  <match src="&gt;=: &gt;= [34624,34626]" dest="&gt;=: &gt;= [40829,40831]"/>
  <match src="number_literal: 0 [13083,13084]" dest="number_literal: 0 [11294,11295]"/>
  <match src="uint256: uint256 [10513,10520]" dest="uint256: uint256 [12017,12024]"/>
  <match src="type_name [26278,26282]" dest="type_name [31902,31906]"/>
  <match src="call_expression [31938,31968]" dest="call_expression [37932,37962]"/>
  <match src="comment: /**      * @dev Performs a Solidity function call using a low level `call`. A      * plain`call` is an unsafe replacement for a function call: use this      * function instead.      *      * If `target` reverts with a revert reason, it is bubbled up by this      * function (like regular Solidity function calls).      *      * Returns the raw returned data. To convert to the expected return value,      * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].      *      * Requirements:      *      * - `target` must be a contract.      * - calling `target` with `data` must not revert.      *      * _Available since v3.1._      */ [17163,17910]" dest="comment: /**      * @dev Performs a Solidity function call using a low level `call`. A      * plain`call` is an unsafe replacement for a function call: use this      * function instead.      *      * If `target` reverts with a revert reason, it is bubbled up by this      * function (like regular Solidity function calls).      *      * Returns the raw returned data. To convert to the expected return value,      * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].      *      * Requirements:      *      * - `target` must be a contract.      * - calling `target` with `data` must not revert.      *      * _Available since v3.1._      */ [14726,15473]"/>
  <match src="identifier: _transfer [39299,39308]" dest="identifier: _transfer [45747,45756]"/>
  <match src="**: ** [36361,36363]" dest="**: ** [42782,42784]"/>
  <match src="): ) [19481,19482]" dest="): ) [17041,17042]"/>
  <match src="): ) [28536,28537]" dest="): ) [34160,34161]"/>
  <match src="call_argument [40513,40519]" dest="call_argument [46961,46967]"/>
  <match src="identifier: amount [25699,25705]" dest="identifier: amount [31323,31329]"/>
  <match src="call_argument [10595,10627]" dest="call_argument [8065,8097]"/>
  <match src="call_argument [29470,29506]" dest="call_argument [35094,35130]"/>
  <match src="type_name [16804,16811]" dest="type_name [14367,14374]"/>
  <match src="type_name [37283,37290]" dest="type_name [43704,43711]"/>
  <match src="identifier: previousOwner [4243,4256]" dest="identifier: previousOwner [24552,24565]"/>
  <match src="type_alias [22619,22627]" dest="type_alias [28243,28251]"/>
  <match src="function_body [8994,9162]" dest="function_body [4360,4528]"/>
  <match src="public: public [43763,43769]" dest="public: public [22215,22221]"/>
  <match src="comment: /**      * @dev Destroys `amount` tokens from `account`, reducing the      * total supply.      *      * Emits a {Transfer} event with `to` set to the zero address.      *      * Requirements      *      * - `account` cannot be the zero address.      * - `account` must have at least `amount` tokens.      */ [28876,29194]" dest="comment: /**      * @dev Destroys `amount` tokens from `account`, reducing the      * total supply.      *      * Emits a {Transfer} event with `to` set to the zero address.      *      * Requirements      *      * - `account` cannot be the zero address.      * - `account` must have at least `amount` tokens.      */ [34500,34818]"/>
  <match src="): ) [39417,39418]" dest="): ) [45865,45866]"/>
  <match src="emit: emit [30359,30363]" dest="emit: emit [35983,35987]"/>
  <match src="yul_evm_builtin [20481,20486]" dest="yul_evm_builtin [20020,20025]"/>
  <match src="&quot;: &quot; [10595,10596]" dest="&quot;: &quot; [8065,8066]"/>
  <match src="visibility [781,787]" dest="visibility [20737,20743]"/>
  <match src="comment: /**      * @dev See {IERC20-balanceOf}.      */ [23886,23935]" dest="comment: /**      * @dev See {IERC20-balanceOf}.      */ [29510,29559]"/>
  <match src="function_body [39889,40139]" dest="function_body [46337,46587]"/>
  <match src="binary_expression [19534,19564]" dest="binary_expression [17094,17124]"/>
  <match src="identifier: _functionCallWithValue [18456,18478]" dest="identifier: functionCallWithValue [16017,16038]"/>
  <match src="parameter [19440,19453]" dest="parameter [17000,17013]"/>
  <match src="array_access [27053,27087]" dest="array_access [32677,32711]"/>
  <match src="identifier: _max [34163,34167]" dest="identifier: _max [40368,40372]"/>
  <match src="call_expression [39293,39357]" dest="call_expression [45741,45805]"/>
  <match src="type_name [1220,1229]" dest="type_name [21176,21185]"/>
  <match src="type_name [10524,10531]" dest="type_name [12028,12035]"/>
  <match src="member_expression [31938,31953]" dest="member_expression [37932,37947]"/>
  <match src="call_expression [27030,27042]" dest="call_expression [32654,32666]"/>
  <match src="bytes: bytes [18991,18996]" dest="bytes: bytes [16551,16556]"/>
  <match src="{: { [23840,23841]" dest="{: { [29464,29465]"/>
  <match src="string_literal [39104,39141]" dest="string_literal [45552,45589]"/>
  <match src=".: . [28733,28734]" dest=".: . [34357,34358]"/>
  <match src="=: = [30340,30341]" dest="=: = [35964,35965]"/>
  <match src="external: external [7722,7730]" dest="external: external [2333,2341]"/>
  <match src="address: address [4518,4525]" dest="address: address [24827,24834]"/>
  <match src="{: { [13775,13776]" dest="{: { [17749,17750]"/>
  <match src="(: ( [24014,24015]" dest="(: ( [29638,29639]"/>
  <match src="(: ( [1652,1653]" dest="(: ( [21608,21609]"/>
  <match src="type_name [1317,1324]" dest="type_name [21273,21280]"/>
  <match src="[: [ [28002,28003]" dest="[: [ [33626,33627]"/>
  <match src="identifier: mint [37261,37265]" dest="identifier: mint [43682,43686]"/>
  <match src="call_argument [12426,12427]" dest="call_argument [18785,18791]"/>
  <match src="): ) [39228,39229]" dest="): ) [45676,45677]"/>
  <match src=",: , [31997,31998]" dest=",: , [37991,37992]"/>
  <match src="view: view [43257,43261]" dest="view: view [17721,17725]"/>
  <match src="): ) [27041,27042]" dest="): ) [32665,32666]"/>
  <match src="function: function [15204,15212]" dest="function: function [12964,12972]"/>
  <match src="&quot;: &quot; [34770,34771]" dest="&quot;: &quot; [40975,40976]"/>
  <match src="visibility [13028,13036]" dest="visibility [11239,11247]"/>
  <match src="primitive_type [31113,31120]" dest="primitive_type [36737,36744]"/>
  <match src="identifier: a [13729,13730]" dest="identifier: a [7992,7993]"/>
  <match src="call_expression [10142,10188]" dest="call_expression [7615,7661]"/>
  <match src="call_argument [13803,13829]" dest="call_argument [17800,17839]"/>
  <match src="function: function [34524,34532]" dest="function: function [40729,40737]"/>
  <match src="yul_identifier [20462,20477]" dest="yul_identifier [20001,20016]"/>
  <match src="parameter [5866,5881]" dest="parameter [477,492]"/>
  <match src="uint256: uint256 [933,940]" dest="uint256: uint256 [20889,20896]"/>
  <match src="primitive_type [23670,23675]" dest="primitive_type [29294,29299]"/>
  <match src="identifier: amount [29550,29556]" dest="identifier: amount [35174,35180]"/>
  <match src="(: ( [19533,19534]" dest="(: ( [17093,17094]"/>
  <match src="type_name [41084,41088]" dest="type_name [47532,47536]"/>
  <match src="interface_declaration [5606,8241]" dest="interface_declaration [217,2852]"/>
  <match src="modifier_invocation [31556,31565]" dest="modifier_invocation [37541,37550]"/>
  <match src="primitive_type [15224,15231]" dest="primitive_type [12984,12991]"/>
  <match src="identifier: _msgSender [27030,27040]" dest="identifier: _msgSender [32654,32664]"/>
  <match src="visibility [44929,44935]" dest="visibility [22250,22256]"/>
  <match src="[: [ [29448,29449]" dest="[: [ [35072,35073]"/>
  <match src="type_name [31877,31884]" dest="type_name [37862,37869]"/>
  <match src="parameter [26278,26282]" dest="parameter [31902,31906]"/>
  <match src="identifier: isBlacklisted [38065,38078]" dest="identifier: isBlacklisted [44504,44517]"/>
  <match src="state_mutability [48209,48213]" dest="state_mutability [54938,54942]"/>
  <match src=",: , [19999,20000]" dest=",: , [17324,17325]"/>
  <match src="comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [9196,9771]" dest="comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [4805,5380]"/>
  <match src="state_variable_declaration [1054,1081]" dest="state_variable_declaration [21010,21037]"/>
  <match src="&quot;: &quot; [27109,27110]" dest="&quot;: &quot; [32733,32734]"/>
  <match src="type_name [32575,32582]" dest="type_name [38762,38769]"/>
  <match src="}: } [41183,41184]" dest="}: } [47631,47632]"/>
  <match src="primitive_type [24299,24306]" dest="primitive_type [29923,29930]"/>
  <match src="identifier: recipient [27857,27866]" dest="identifier: recipient [33481,33490]"/>
  <match src="comment: /**      * @dev sets the original `owner` of the contract to the sender      * at construction. Must then be reinitialized      */ [4292,4425]" dest="comment: /**      * @dev sets the original `owner` of the contract to the sender      * at construction. Must then be reinitialized      */ [24601,24734]"/>
  <match src="call_expression [27933,27980]" dest="call_expression [33557,33604]"/>
  <match src="address: address [27786,27793]" dest="address: address [33410,33417]"/>
  <match src="number_literal: 0 [28840,28841]" dest="number_literal: 0 [34464,34465]"/>
  <match src="): ) [39416,39417]" dest="): ) [45864,45865]"/>
  <match src="): ) [32006,32007]" dest="): ) [38000,38001]"/>
  <match src=",: , [34012,34013]" dest=",: , [40208,40209]"/>
  <match src="identifier: target [19413,19419]" dest="identifier: target [16973,16979]"/>
  <match src="): ) [37902,37903]" dest="): ) [44332,44333]"/>
  <match src="): ) [20245,20246]" dest="): ) [19784,19785]"/>
  <match src="): ) [26282,26283]" dest="): ) [31906,31907]"/>
  <match src="unary_expression [39161,39175]" dest="unary_expression [45609,45623]"/>
  <match src="emit: emit [34178,34182]" dest="emit: emit [40383,40387]"/>
  <match src=",: , [39812,39813]" dest=",: , [46260,46261]"/>
  <match src="type_name [11085,11092]" dest="type_name [5634,5641]"/>
  <match src="identifier: owner [39923,39928]" dest="identifier: owner [46371,46376]"/>
  <match src="(: ( [4442,4443]" dest="(: ( [24751,24752]"/>
  <match src="primitive_type [11748,11755]" dest="primitive_type [8497,8504]"/>
  <match src="primitive_type [1187,1193]" dest="primitive_type [21143,21149]"/>
  <match src="identifier: _allowances [30312,30323]" dest="identifier: _allowances [35936,35947]"/>
  <match src="parameter [38985,39002]" dest="parameter [45433,45450]"/>
  <match src="identifier: c [10208,10209]" dest="identifier: c [7679,7680]"/>
  <match src=",: , [28181,28182]" dest=",: , [33805,33806]"/>
  <match src="(: ( [17004,17005]" dest="(: ( [14567,14568]"/>
  <match src="comment: /**  *Submitted for verification at Etherscan.io on 2020-09-25 */ [0,67]" dest="comment: // Dependency file: @openzeppelin/contracts/token/ERC20/IERC20.sol [0,66]"/>
  <match src="(: ( [29393,29394]" dest="(: ( [35017,35018]"/>
  <match src="address: address [28505,28512]" dest="address: address [34129,34136]"/>
  <match src="primitive_type [39823,39830]" dest="primitive_type [46271,46278]"/>
  <match src="parameter [34014,34026]" dest="parameter [40210,40222]"/>
  <match src="function: function [7257,7265]" dest="function: function [1868,1876]"/>
  <match src="return: return [48056,48062]" dest="return: return [54794,54800]"/>
  <match src="function_body [8885,8921]" dest="function_body [4251,4287]"/>
  <match src="returns: returns [41075,41082]" dest="returns: returns [47523,47530]"/>
  <match src="public: public [23977,23983]" dest="public: public [29601,29607]"/>
  <match src="type_name [17954,17959]" dest="type_name [15517,15522]"/>
  <match src=",: , [7685,7686]" dest=",: , [2296,2297]"/>
  <match src="(: ( [1944,1945]" dest="(: ( [21900,21901]"/>
  <match src="): ) [1466,1467]" dest="): ) [21422,21423]"/>
  <match src="member_expression [4887,4897]" dest="member_expression [25196,25206]"/>
  <match src="primitive_type [18424,18429]" dest="primitive_type [15985,15990]"/>
  <match src="type_name [43737,43744]" dest="type_name [22207,22214]"/>
  <match src="]: ] [28114,28115]" dest="]: ] [33738,33739]"/>
  <match src="type_name [10558,10565]" dest="type_name [12090,12097]"/>
  <match src=".: . [20034,20035]" dest=".: . [17359,17360]"/>
  <match src="external: external [7307,7315]" dest="external: external [1918,1926]"/>
  <match src="primitive_type [19501,19506]" dest="primitive_type [17061,17066]"/>
  <match src="function_definition [34524,34858]" dest="function_definition [40729,41063]"/>
  <match src="primitive_type [47436,47443]" dest="primitive_type [49185,49192]"/>
  <match src="!: ! [37337,37338]" dest="!: ! [43767,43768]"/>
  <match src="identifier: amount [34564,34570]" dest="identifier: amount [40769,40775]"/>
  <match src=",: , [10058,10059]" dest=",: , [7531,7532]"/>
  <match src="number_literal: 0 [11723,11724]" dest="number_literal: 0 [8485,8486]"/>
  <match src="returns: returns [19492,19499]" dest="returns: returns [17052,17059]"/>
  <match src="): ) [25658,25659]" dest="): ) [31282,31283]"/>
  <match src="&quot;: &quot; [19566,19567]" dest="&quot;: &quot; [17126,17127]"/>
  <match src="{: { [27010,27011]" dest="{: { [32634,32635]"/>
  <match src="modifier_definition [4637,4731]" dest="modifier_definition [24946,25040]"/>
  <match src="): ) [18436,18437]" dest="): ) [15997,15998]"/>
  <match src="internal: internal [28538,28546]" dest="internal: internal [34162,34170]"/>
  <match src="type_name [24553,24560]" dest="type_name [30177,30184]"/>
  <match src="identifier: value [7988,7993]" dest="identifier: value [2599,2604]"/>
  <match src="uint256: uint256 [14347,14354]" dest="uint256: uint256 [9110,9117]"/>
  <match src="external: external [38467,38475]" dest="external: external [44906,44914]"/>
  <match src="parameter [7687,7704]" dest="parameter [2298,2315]"/>
  <match src="identifier: token [31979,31984]" dest="identifier: token [37973,37978]"/>
  <match src="parameter [10524,10533]" dest="parameter [12028,12037]"/>
  <match src="primitive_type [13000,13006]" dest="primitive_type [11211,11217]"/>
  <match src="identifier: recipient [28183,28192]" dest="identifier: recipient [33807,33816]"/>
  <match src=",: , [39186,39187]" dest=",: , [45634,45635]"/>
  <match src="returns: returns [8859,8866]" dest="returns: returns [4225,4232]"/>
  <match src="primitive_type [38452,38456]" dest="primitive_type [44891,44895]"/>
  <match src="(: ( [4226,4227]" dest="(: ( [24535,24536]"/>
  <match src="): ) [27837,27838]" dest="): ) [33461,33462]"/>
  <match src="pure: pure [13037,13041]" dest="pure: pure [11248,11252]"/>
  <match src="string_literal [4915,4935]" dest="string_literal [25224,25244]"/>
  <match src="(: ( [28174,28175]" dest="(: ( [33798,33799]"/>
  <match src="true: true [26396,26400]" dest="true: true [32020,32024]"/>
  <match src="&quot;: &quot; [16881,16882]" dest="&quot;: &quot; [14444,14445]"/>
  <match src="(: ( [38949,38950]" dest="(: ( [45397,45398]"/>
  <match src="identifier: data [19053,19057]" dest="identifier: data [16613,16617]"/>
  <match src="(: ( [2074,2075]" dest="(: ( [22030,22031]"/>
  <match src="state_variable_declaration [1261,1311]" dest="state_variable_declaration [21217,21267]"/>
  <match src="returns: returns [24006,24013]" dest="returns: returns [29630,29637]"/>
  <match src="struct_field_assignment [20041,20056]" dest="struct_field_assignment [17366,17378]"/>
  <match src="(: ( [27091,27092]" dest="(: ( [32715,32716]"/>
  <match src="call_argument [45777,45792]" dest="call_argument [51691,51709]"/>
  <match src="(: ( [22786,22787]" dest="(: ( [28410,28411]"/>
  <match src="visibility [5883,5891]" dest="visibility [494,502]"/>
  <match src="(: ( [48222,48223]" dest="(: ( [54960,54961]"/>
  <match src=",: , [13798,13799]" dest=",: , [17792,17793]"/>
  <match src="parameter [11448,11455]" dest="parameter [8446,8453]"/>
  <match src="parameter [38960,38974]" dest="parameter [45408,45422]"/>
  <match src="primitive_type [19987,19991]" dest="primitive_type [17312,17316]"/>
  <match src="identifier: account [34797,34804]" dest="identifier: account [41002,41009]"/>
  <match src="primitive_type [33320,33327]" dest="primitive_type [39507,39514]"/>
  <match src="call_argument [30181,30219]" dest="call_argument [35805,35843]"/>
  <match src="): ) [18404,18405]" dest="): ) [15965,15966]"/>
  <match src="pure: pure [12381,12385]" dest="pure: pure [9750,9754]"/>
  <match src="): ) [31611,31612]" dest="): ) [37596,37597]"/>
  <match src="internal: internal [18406,18414]" dest="internal: internal [15967,15975]"/>
  <match src="function_definition [12965,13243]" dest="function_definition [11176,11341]"/>
  <match src="primitive_type [4258,4265]" dest="primitive_type [24567,24574]"/>
  <match src="identifier: _canBurn [38516,38524]" dest="identifier: _canBurn [44964,44972]"/>
  <match src="identifier: spender [30239,30246]" dest="identifier: spender [35863,35870]"/>
  <match src="!=: != [41172,41174]" dest="!=: != [47620,47622]"/>
  <match src="function: function [26911,26919]" dest="function: function [32535,32543]"/>
  <match src="(: ( [30372,30373]" dest="(: ( [35996,35997]"/>
  <match src="): ) [5725,5726]" dest="): ) [336,337]"/>
  <match src="identifier: CENT [36352,36356]" dest="identifier: CENT [42773,42777]"/>
  <match src="call_expression [28118,28150]" dest="call_expression [33742,33774]"/>
  <match src="identifier: gasRefundPool_Deprecated [1230,1254]" dest="identifier: gasRefundPool_Deprecated [21186,21210]"/>
  <match src="identifier: decimals [47997,48005]" dest="identifier: decimals [54735,54743]"/>
  <match src="identifier: SetBurnBounds [32852,32865]" dest="identifier: SetBurnBounds [39039,39052]"/>
  <match src="type_name [1956,1972]" dest="type_name [21912,21928]"/>
  <match src="source_file [0,48379]" dest="source_file [0,55117]"/>
  <match src="identifier: transfer [31581,31589]" dest="identifier: transfer [37566,37574]"/>
  <match src="parameter [12978,12987]" dest="parameter [11189,11198]"/>
  <match src="): ) [20642,20643]" dest="): ) [20181,20182]"/>
  <match src="uint256: uint256 [30108,30115]" dest="uint256: uint256 [35732,35739]"/>
  <match src=",: , [26325,26326]" dest=",: , [31949,31950]"/>
  <match src="string [4698,4710]" dest="string [25007,25019]"/>
  <match src="contract_body [36328,41187]" dest="contract_body [42749,47635]"/>
  <match src="state_variable_declaration [1122,1150]" dest="state_variable_declaration [21078,21106]"/>
  <match src="primitive_type [7938,7945]" dest="primitive_type [2549,2556]"/>
  <match src="): ) [28149,28150]" dest="): ) [33773,33774]"/>
  <match src="return_type_definition [5741,5758]" dest="return_type_definition [352,369]"/>
  <match src=",: , [19419,19420]" dest=",: , [16979,16980]"/>
  <match src="binary_expression [4677,4696]" dest="binary_expression [24986,25005]"/>
  <match src="address: address [17938,17945]" dest="address: address [15501,15508]"/>
  <match src="constant: constant [36380,36388]" dest="constant: constant [42801,42809]"/>
  <match src="identifier: token [31938,31943]" dest="identifier: token [37932,37937]"/>
  <match src="(: ( [23790,23791]" dest="(: ( [29414,29415]"/>
  <match src="(: ( [30075,30076]" dest="(: ( [35699,35700]"/>
  <match src="expression_statement [40409,40482]" dest="expression_statement [46857,46930]"/>
  <match src="): ) [20545,20546]" dest="): ) [20084,20085]"/>
  <match src="function_body [31146,31149]" dest="function_body [36770,36773]"/>
  <match src="number_literal: 0 [5488,5489]" dest="number_literal: 0 [25801,25802]"/>
  <match src="binary_expression [11760,11765]" dest="binary_expression [8509,8514]"/>
  <match src="string [37988,38053]" dest="string [44427,44492]"/>
  <match src="identifier: owner [788,793]" dest="identifier: owner [20744,20749]"/>
  <match src="primitive_type [36372,36379]" dest="primitive_type [42793,42800]"/>
  <match src=",: , [10522,10523]" dest=",: , [12026,12027]"/>
  <match src="(: ( [19404,19405]" dest="(: ( [16964,16965]"/>
  <match src="identifier: recipient [24408,24417]" dest="identifier: recipient [30032,30041]"/>
  <match src="identifier: errorMessage [19669,19681]" dest="identifier: errorMessage [17443,17455]"/>
  <match src=",: , [29305,29306]" dest=",: , [34929,34930]"/>
  <match src="event: event [32564,32569]" dest="event: event [38751,38756]"/>
  <match src="true: true [45155,45159]" dest="true: true [5709,5713]"/>
  <match src="modifier: modifier [4637,4645]" dest="modifier: modifier [24946,24954]"/>
  <match src="identifier: newOwner [5150,5158]" dest="identifier: newOwner [25459,25467]"/>
  <match src="expression_statement [9005,9010]" dest="expression_statement [4371,4376]"/>
  <match src="identifier: b [10532,10533]" dest="identifier: b [12036,12037]"/>
  <match src="{: { [27757,27758]" dest="{: { [33381,33382]"/>
  <match src="(: ( [39160,39161]" dest="(: ( [45608,45609]"/>
  <match src="identifier: mod [39407,39410]" dest="identifier: mod [45855,45858]"/>
  <match src="true [42994,42998]" dest="true [54128,54132]"/>
  <match src="(: ( [14436,14437]" dest="(: ( [9791,9792]"/>
  <match src="identifier: paused_Deprecated [975,992]" dest="identifier: paused_Deprecated [20931,20948]"/>
  <match src="return: return [11716,11722]" dest="return: return [8478,8484]"/>
  <match src="primitive_type [28505,28512]" dest="primitive_type [34129,34136]"/>
  <match src="comment: /**      * @dev Emitted when `value` tokens are moved from one account (`from`) to      * another (`to`).      *      * Note that `value` may be zero.      */ [7754,7917]" dest="comment: /**      * @dev Emitted when `value` tokens are moved from one account (`from`) to      * another (`to`).      *      * Note that `value` may be zero.      */ [2365,2528]"/>
  <match src="primitive_type [37266,37273]" dest="primitive_type [43687,43694]"/>
  <match src=",: , [36785,36786]" dest=",: , [43206,43207]"/>
  <match src="return: return [24967,24973]" dest="return: return [30591,30597]"/>
  <match src="{: { [8994,8995]" dest="{: { [4360,4361]"/>
  <match src="): ) [31127,31128]" dest="): ) [36751,36752]"/>
  <match src="parameter [33320,33334]" dest="parameter [39507,39521]"/>
  <match src="identifier: msg [4677,4680]" dest="identifier: msg [24986,24989]"/>
  <match src="call_expression [26327,26377]" dest="call_expression [31951,32001]"/>
  <match src="return_statement [20103,20121]" dest="return_statement [19642,19660]"/>
  <match src="identifier: require [34609,34616]" dest="identifier: require [40814,40821]"/>
  <match src="string [27109,27148]" dest="string [32733,32772]"/>
  <match src="visibility [7722,7730]" dest="visibility [2333,2341]"/>
  <match src="function_body [11457,11861]" dest="function_body [8455,8608]"/>
  <match src="comment: /**      * @dev Returns true if `account` is a contract.      *      * [IMPORTANT]      * ====      * It is unsafe to assume that an address for which this function returns      * false is an externally-owned account (EOA) and not a contract.      *      * Among others, `isContract` will return false for the following      * types of addresses:      *      *  - an externally-owned account      *  - a contract in construction      *  - an address where a contract will be created      *  - an address where a contract lived, but was destroyed      * ====      */ [14617,15198]" dest="comment: /**      * @dev Returns true if `account` is a contract.      *      * [IMPORTANT]      * ====      * It is unsafe to assume that an address for which this function returns      * false is an externally-owned account (EOA) and not a contract.      *      * Among others, `isContract` will return false for the following      * types of addresses:      *      *  - an externally-owned account      *  - a contract in construction      *  - an address where a contract will be created      *  - an address where a contract lived, but was destroyed      * ====      */ [12377,12958]"/>
  <match src="identifier: account [36544,36551]" dest="identifier: account [42965,42972]"/>
  <match src="uint256: uint256 [1087,1094]" dest="uint256: uint256 [21043,21050]"/>
  <match src="identifier: _approve [26295,26303]" dest="identifier: _approve [31919,31927]"/>
  <match src="returns: returns [25557,25564]" dest="returns: returns [31181,31188]"/>
  <match src="identifier: spender [24842,24849]" dest="identifier: spender [30466,30473]"/>
  <match src="function: function [5847,5855]" dest="function: function [458,466]"/>
  <match src="using_directive [22613,22640]" dest="using_directive [28237,28264]"/>
  <match src="call_argument [34617,34634]" dest="call_argument [40822,40839]"/>
  <match src="state_variable_declaration [962,1001]" dest="state_variable_declaration [20918,20957]"/>
  <match src=".: . [29545,29546]" dest=".: . [35169,35170]"/>
  <match src="mapping: mapping [2112,2119]" dest="mapping: mapping [22068,22075]"/>
  <match src="identifier: _totalSupply [28721,28733]" dest="identifier: _totalSupply [34345,34357]"/>
  <match src="yul_identifier [20487,20497]" dest="yul_identifier [20026,20036]"/>
  <match src="primitive_type [2131,2135]" dest="primitive_type [22087,22091]"/>
  <match src="]: ] [39185,39186]" dest="]: ] [45633,45634]"/>
  <match src="(: ( [28573,28574]" dest="(: ( [34197,34198]"/>
  <match src="): ) [34849,34850]" dest="): ) [41054,41055]"/>
  <match src=".: . [31603,31604]" dest=".: . [37588,37589]"/>
  <match src=",: , [34201,34202]" dest=",: , [40406,40407]"/>
  <match src="uint256: uint256 [42243,42250]" dest="uint256: uint256 [47962,47969]"/>
  <match src="variable_declaration_statement [11085,11103]" dest="variable_declaration_statement [5634,5652]"/>
  <match src="if_statement [20220,20659]" dest="if_statement [19759,20198]"/>
  <match src="pure: pure [48315,48319]" dest="pure: pure [55044,55048]"/>
  <match src="(: ( [48296,48297]" dest="(: ( [55034,55035]"/>
  <match src=",: , [34078,34079]" dest=",: , [40283,40284]"/>
  <match src="identifier: attributes_Deprecated [1534,1555]" dest="identifier: attributes_Deprecated [21490,21511]"/>
  <match src="identifier: decreaseAllowance [26920,26937]" dest="identifier: decreaseAllowance [32544,32561]"/>
  <match src="expression_statement [5434,5455]" dest="expression_statement [25747,25768]"/>
  <match src="identifier: functionCall [17925,17937]" dest="identifier: functionCall [15488,15500]"/>
  <match src="type_name [6539,6546]" dest="type_name [1150,1157]"/>
  <match src="uint256: uint256 [6181,6188]" dest="uint256: uint256 [792,799]"/>
  <match src="state_mutability [23800,23804]" dest="state_mutability [29424,29428]"/>
  <match src="array_access [30312,30330]" dest="array_access [35936,35954]"/>
  <match src="memory: memory [17960,17966]" dest="memory: memory [15523,15529]"/>
  <match src="string: string [10974,10980]" dest="string: string [10371,10377]"/>
  <match src="call_expression [10585,10628]" dest="call_expression [8049,8098]"/>
  <match src="=: = [34161,34162]" dest="=: = [40366,40367]"/>
  <match src="): ) [30219,30220]" dest="): ) [35843,35844]"/>
  <match src="primitive_type [962,966]" dest="primitive_type [20918,20922]"/>
  <match src="identifier: name_Deprecated [1165,1180]" dest="identifier: name_Deprecated [21121,21136]"/>
  <match src="primitive_type [34014,34021]" dest="primitive_type [40210,40217]"/>
  <match src="type_name [19783,19789]" dest="type_name [19540,19546]"/>
  <match src="function: function [23770,23778]" dest="function: function [29394,29402]"/>
  <match src="identifier: account [37516,37523]" dest="identifier: account [43946,43953]"/>
  <match src="]: ] [25693,25694]" dest="]: ] [31317,31318]"/>
  <match src="}: } [24985,24986]" dest="}: } [30609,30610]"/>
  <match src="identifier: amount [34617,34623]" dest="identifier: amount [40822,40828]"/>
  <match src="pure: pure [22954,22958]" dest="pure: pure [28578,28582]"/>
  <match src="visibility [10535,10543]" dest="visibility [12067,12075]"/>
  <match src="yul_path [15720,15728]" dest="yul_path [13323,13327]"/>
  <match src=",: , [39838,39839]" dest=",: , [46286,46287]"/>
  <match src="): ) [2135,2136]" dest="): ) [22091,22092]"/>
  <match src=",: , [18357,18358]" dest=",: , [15918,15919]"/>
  <match src="(: ( [31525,31526]" dest="(: ( [37501,37502]"/>
  <match src="address: address [1945,1952]" dest="address: address [21901,21908]"/>
  <match src="type_name [37883,37887]" dest="type_name [44313,44317]"/>
  <match src="comment: /**      * @dev Creates `amount` tokens and assigns them to `account`, increasing      * the total supply.      * @param account address to mint tokens for      * @param amount amount of tokens to be minted      *      * Emits a {Mint} event      *      * Requirements      *      * - `account` cannot be the zero address.      * - `account` cannot be blacklisted.      * - `account` cannot be a redemption address.      */ [36810,37246]" dest="comment: /**      * @dev Creates `amount` tokens and assigns them to `account`, increasing      * the total supply.      * @param account address to mint tokens for      * @param amount amount of tokens to be minted      *      * Emits a {Mint} event      *      * Requirements      *      * - `account` cannot be the zero address.      * - `account` cannot be blacklisted.      * - `account` cannot be a redemption address.      */ [43231,43667]"/>
  <match src="number_literal: 0 [1079,1080]" dest="number_literal: 0 [21035,21036]"/>
  <match src=",: , [40433,40434]" dest=",: , [46881,46882]"/>
  <match src="identifier: b [14355,14356]" dest="identifier: b [9118,9119]"/>
  <match src="true: true [45853,45857]" dest="true: true [6921,6925]"/>
  <match src="): ) [16818,16819]" dest="): ) [14381,14382]"/>
  <match src="assembly: assembly [20426,20434]" dest="assembly: assembly [19965,19973]"/>
  <match src=",: , [19879,19880]" dest=",: , [17204,17205]"/>
  <match src="): ) [28594,28595]" dest="): ) [34218,34219]"/>
  <match src=".: . [31984,31985]" dest=".: . [37978,37979]"/>
  <match src="&quot;: &quot; [39973,39974]" dest="&quot;: &quot; [46421,46422]"/>
  <match src="user_defined_type [32350,32364]" dest="user_defined_type [38537,38551]"/>
  <match src="type_name [773,780]" dest="type_name [20729,20736]"/>
  <match src="identifier: _totalSupply [23858,23870]" dest="identifier: _totalSupply [29482,29494]"/>
  <match src="identifier: depositAddress [47547,47561]" dest="identifier: signedReserves [51794,51808]"/>
  <match src="indexed: indexed [4266,4273]" dest="indexed: indexed [24575,24582]"/>
  <match src="return: return [19618,19624]" dest="return: return [17397,17403]"/>
  <match src="{: { [25572,25573]" dest="{: { [31196,31197]"/>
  <match src="identifier: errorMessage [10988,11000]" dest="identifier: errorMessage [10385,10397]"/>
  <match src="]: ] [40432,40433]" dest="]: ] [46880,46881]"/>
  <match src="primitive_type [28585,28592]" dest="primitive_type [34209,34216]"/>
  <match src="{: { [24373,24374]" dest="{: { [29997,29998]"/>
  <match src="address: address [38435,38442]" dest="address: address [44874,44881]"/>
  <match src="external: external [6197,6205]" dest="external: external [808,816]"/>
  <match src="string: string [18378,18384]" dest="string: string [15939,15945]"/>
  <match src="public: public [808,814]" dest="public: public [20764,20770]"/>
  <match src="address: address [31877,31884]" dest="address: address [37862,37869]"/>
  <match src=".: . [20234,20235]" dest=".: . [19773,19774]"/>
  <match src="{: { [4868,4869]" dest="{: { [25177,25178]"/>
  <match src="parameter [24900,24904]" dest="parameter [30524,30528]"/>
  <match src="}: } [4730,4731]" dest="}: } [25039,25040]"/>
  <match src="boolean_literal [995,1000]" dest="boolean_literal [20951,20956]"/>
  <match src="type_name [1612,1619]" dest="type_name [21568,21575]"/>
  <match src="primitive_type [30108,30115]" dest="primitive_type [35732,35739]"/>
  <match src="type_name [17938,17945]" dest="type_name [15501,15508]"/>
  <match src="call_expression [29533,29557]" dest="call_expression [35157,35181]"/>
  <match src="}: } [33388,33389]" dest="}: } [39584,39585]"/>
  <match src="binary_expression [37942,37986]" dest="binary_expression [44381,44425]"/>
  <match src="function_definition [6144,6221]" dest="function_definition [755,832]"/>
  <match src="uint256: uint256 [13732,13739]" dest="uint256: uint256 [7995,8002]"/>
  <match src="function_body [26284,26408]" dest="function_body [31908,32032]"/>
  <match src="virtual: virtual [23989,23996]" dest="virtual: virtual [29613,29620]"/>
  <match src="address: address [22664,22671]" dest="address: address [28288,28295]"/>
  <match src="number_literal: 0 [41175,41176]" dest="number_literal: 0 [47623,47624]"/>
  <match src="call_expression [19625,19682]" dest="call_expression [17404,17456]"/>
  <match src="return: return [14469,14475]" dest="return: return [9837,9843]"/>
  <match src="(: ( [26314,26315]" dest="(: ( [31938,31939]"/>
  <match src="&quot;: &quot; [37451,37452]" dest="&quot;: &quot; [43881,43882]"/>
  <match src="contract_declaration [22545,31152]" dest="contract_declaration [28169,36776]"/>
  <match src="identifier: super [39451,39456]" dest="identifier: super [45899,45904]"/>
  <match src="primitive_type [7740,7744]" dest="primitive_type [2351,2355]"/>
  <match src="identifier: addedValue [26366,26376]" dest="identifier: addedValue [31990,32000]"/>
  <match src="identifier: onlyOwner [31899,31908]" dest="identifier: onlyOwner [37893,37902]"/>
  <match src="[: [ [25672,25673]" dest="[: [ [31296,31297]"/>
  <match src="primitive_type [30169,30176]" dest="primitive_type [35793,35800]"/>
  <match src="internal: internal [40380,40388]" dest="internal: internal [46828,46836]"/>
  <match src=".: . [4680,4681]" dest=".: . [24989,24990]"/>
  <match src="event_definition [4200,4284]" dest="event_definition [24509,24593]"/>
  <match src="visibility [15241,15249]" dest="visibility [13001,13009]"/>
  <match src="type_name [14409,14416]" dest="type_name [9144,9151]"/>
  <match src="contract: contract [31327,31335]" dest="contract: contract [37288,37296]"/>
  <match src="): ) [27076,27077]" dest="): ) [32700,32701]"/>
  <match src="identifier: isRedemptionAddress [39246,39265]" dest="identifier: isRedemptionAddress [45694,45713]"/>
  <match src="}: } [32014,32015]" dest="}: } [38008,38009]"/>
  <match src="): ) [23975,23976]" dest="): ) [29599,29600]"/>
  <match src="(: ( [29302,29303]" dest="(: ( [34926,34927]"/>
  <match src="function_body [18438,18517]" dest="function_body [15999,16077]"/>
  <match src="comment: /**      * @dev Returns the number of decimals used to get its user representation.      * For example, if `decimals` equals `2`, a balance of `505` tokens should      * be displayed to a user as `5,05` (`505 / 10 ** 2`).      *      * Tokens usually opt for a value of 18, imitating the relationship between      * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is      * called.      *      * NOTE: This information is only used for _display_ purposes: it in      * no way affects any of the arithmetic of the contract, including      * {IERC20-balanceOf} and {IERC20-transfer}.      */ [22991,23615]" dest="comment: /**      * @dev Returns the number of decimals used to get its user representation.      * For example, if `decimals` equals `2`, a balance of `505` tokens should      * be displayed to a user as `5,05` (`505 / 10 ** 2`).      *      * Tokens usually opt for a value of 18, imitating the relationship between      * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is      * called.      *      * NOTE: This information is only used for _display_ purposes: it in      * no way affects any of the arithmetic of the contract, including      * {IERC20-balanceOf} and {IERC20-transfer}.      */ [28615,29239]"/>
  <match src="state_mutability [8846,8850]" dest="state_mutability [4212,4216]"/>
  <match src="call_argument [40108,40113]" dest="call_argument [46556,46561]"/>
  <match src="identifier: mul [11399,11402]" dest="identifier: mul [8397,8400]"/>
  <match src="member_expression [16848,16869]" dest="member_expression [14411,14432]"/>
  <match src="uint256: uint256 [36787,36794]" dest="uint256: uint256 [43208,43215]"/>
  <match src="&quot;: &quot; [30218,30219]" dest="&quot;: &quot; [35842,35843]"/>
  <match src="function: function [23621,23629]" dest="function: function [29245,29253]"/>
  <match src="indexed: indexed [32583,32590]" dest="indexed: indexed [38770,38777]"/>
  <match src="}: } [39429,39430]" dest="}: } [45877,45878]"/>
  <match src="): ) [28692,28693]" dest="): ) [34316,34317]"/>
  <match src="string_literal [39188,39228]" dest="string_literal [45636,45676]"/>
  <match src="return_statement [13227,13236]" dest="return_statement [11321,11334]"/>
  <match src="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but also transferring `value` wei to `target`.      *      * Requirements:      *      * - the calling contract must have an ETH balance of at least `value`.      * - the called Solidity function must be `payable`.      *      * _Available since v3.1._      */ [18525,18886]" dest="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but also transferring `value` wei to `target`.      *      * Requirements:      *      * - the calling contract must have an ETH balance of at least `value`.      * - the called Solidity function must be `payable`.      *      * _Available since v3.1._      */ [16085,16446]"/>
  <match src="identifier: amount [7299,7305]" dest="identifier: amount [1910,1916]"/>
  <match src="returns: returns [12386,12393]" dest="returns: returns [9755,9762]"/>
  <match src="member_expression [39389,39399]" dest="member_expression [45837,45847]"/>
  <match src="identifier: amount [17046,17052]" dest="identifier: amount [14609,14615]"/>
  <match src="function_definition [10500,10636]" dest="function_definition [12004,12169]"/>
  <match src="comment: /**  * @dev Contract that prevents addresses that were previously using autosweep addresses from  * making transfers on them.  *  * In older versions TrueCurrencies had a feature called Autosweep.  * Given a single deposit address, it was possible to generate 16^5-1 autosweep addresses.  * E.g. having deposit address 0xc257274276a4e539741ca11b590b9447b26a8051, you could generate  * - 0xc257274276a4e539741ca11b590b9447b2600000  * - 0xc257274276a4e539741ca11b590b9447b2600001  * - ...  * - 0xc257274276a4e539741ca11b590b9447b26fffff  * Every transfer to an autosweep address resulted as a transfer to deposit address.  * This feature got deprecated, but there were 4 addresses that still actively using the feature.  *  * This contract will reject a transfer to these 4*(16^5-1) addresses to prevent accidental token freeze.  */ [45899,46744]" dest="comment: // Dependency file: @openzeppelin/contracts/utils/Context.sol [3533,3594]"/>
  <match src="/: / [13124,13125]" dest="/: / [9228,9229]"/>
  <match src="primitive_type [48329,48335]" dest="primitive_type [55067,55073]"/>
  <match src="identifier: onlyOwner [31556,31565]" dest="identifier: onlyOwner [37541,37550]"/>
  <match src="identifier: _transfer [39457,39466]" dest="identifier: _transfer [45905,45914]"/>
  <match src="&lt;: &lt; [41125,41126]" dest="&lt;: &lt; [47573,47574]"/>
  <match src=".: . [33365,33366]" dest=".: . [39561,39562]"/>
  <match src="visibility [25533,25539]" dest="visibility [31157,31163]"/>
  <match src="}: } [31148,31149]" dest="}: } [36772,36773]"/>
  <match src="type_name [10049,10056]" dest="type_name [7522,7529]"/>
  <match src="visibility [48299,48305]" dest="visibility [55037,55043]"/>
  <match src="identifier: add [28796,28799]" dest="identifier: add [34420,34423]"/>
  <match src="pure: pure [13752,13756]" dest="pure: pure [8015,8019]"/>
  <match src="(: ( [11052,11053]" dest="(: ( [10449,10450]"/>
  <match src="type_name [22664,22671]" dest="type_name [28288,28295]"/>
  <match src="yul_identifier [20548,20563]" dest="yul_identifier [20087,20102]"/>
  <match src="state_mutability [14395,14399]" dest="state_mutability [9130,9134]"/>
  <match src="comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      *      * - Addition cannot overflow.      */ [9797,10030]" dest="comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      *      * - Addition cannot overflow.      */ [7270,7503]"/>
  <match src="visibility [1015,1022]" dest="visibility [20971,20978]"/>
  <match src="public: public [23793,23799]" dest="public: public [29417,29423]"/>
  <match src="call_argument [40417,40433]" dest="call_argument [46865,46881]"/>
  <match src="!: ! [39080,39081]" dest="!: ! [45528,45529]"/>
  <match src="return_type_definition [48214,48237]" dest="return_type_definition [54952,54975]"/>
  <match src="identifier: require [13071,13078]" dest="identifier: require [11282,11289]"/>
  <match src="identifier: isBlacklisted [36558,36571]" dest="identifier: isBlacklisted [42979,42992]"/>
  <match src="primitive_type [31877,31884]" dest="primitive_type [37862,37869]"/>
  <match src="type_name [1420,1467]" dest="type_name [21376,21423]"/>
  <match src="call_argument [39339,39355]" dest="call_argument [45787,45803]"/>
  <match src="abstract: abstract [8782,8790]" dest="abstract: abstract [4148,4156]"/>
  <match src="): ) [39355,39356]" dest="): ) [45803,45804]"/>
  <match src="): ) [6219,6220]" dest="): ) [830,831]"/>
  <match src="&quot;: &quot; [29307,29308]" dest="&quot;: &quot; [34931,34932]"/>
  <match src="identifier: returndata_size [20462,20477]" dest="identifier: returndata_size [20001,20016]"/>
  <match src=".: . [39334,39335]" dest=".: . [45782,45783]"/>
  <match src="emit_statement [38115,38157]" dest="emit_statement [44554,44596]"/>
  <match src="(: ( [4525,4526]" dest="(: ( [24834,24835]"/>
  <match src="pure: pure [48024,48028]" dest="pure: pure [54753,54757]"/>
  <match src="bytes: bytes [19421,19426]" dest="bytes: bytes [16981,16986]"/>
  <match src="type_name [36528,36535]" dest="type_name [42949,42956]"/>
  <match src="(: ( [6161,6162]" dest="(: ( [772,773]"/>
  <match src="address: address [1384,1391]" dest="address: address [21340,21347]"/>
  <match src="parameter [19405,19419]" dest="parameter [16965,16979]"/>
  <match src="identifier: balanceOf [23950,23959]" dest="identifier: balanceOf [29574,29583]"/>
  <match src="identifier: account [37274,37281]" dest="identifier: account [43695,43702]"/>
  <match src="identifier: codehash [15720,15728]" dest="identifier: size [13323,13327]"/>
  <match src="identifier: recipient [39266,39275]" dest="identifier: recipient [45714,45723]"/>
  <match src="): ) [34116,34117]" dest="): ) [40321,40322]"/>
  <match src="]: ] [24652,24653]" dest="]: ] [30276,30277]"/>
  <match src="identifier: success [17010,17017]" dest="identifier: success [14573,14580]"/>
  <match src="function_definition [40332,40528]" dest="function_definition [46780,46976]"/>
  <match src="yul_identifier [15720,15728]" dest="yul_identifier [13323,13327]"/>
  <match src="function_definition [26911,27180]" dest="function_definition [32535,32804]"/>
  <match src="yul_evm_builtin [20527,20530]" dest="yul_evm_builtin [20066,20069]"/>
  <match src="identifier: OwnershipTransferred [4497,4517]" dest="identifier: OwnershipTransferred [24806,24826]"/>
  <match src="function_definition [19698,20677]" dest="function_definition [19474,20216]"/>
  <match src="): ) [40079,40080]" dest="): ) [46527,46528]"/>
  <match src="type_name [48223,48229]" dest="type_name [54961,54967]"/>
  <match src=",: , [24417,24418]" dest=",: , [30041,30042]"/>
  <match src="identifier: length [20235,20241]" dest="identifier: length [19774,19780]"/>
  <match src="identifier: value [19559,19564]" dest="identifier: value [17119,17124]"/>
  <match src="identifier: sub [10509,10512]" dest="identifier: mod [12013,12016]"/>
  <match src="call_argument [17086,17146]" dest="call_argument [14649,14709]"/>
  <match src=".: . [9149,9150]" dest=".: . [4515,4516]"/>
  <match src="number_literal: 10 [36359,36361]" dest="number_literal: 10 [42780,42782]"/>
  <match src=",: , [18485,18486]" dest=",: , [16045,16046]"/>
  <match src="number_literal: 16 [36363,36365]" dest="number_literal: 16 [42784,42786]"/>
  <match src="(: ( [27775,27776]" dest="(: ( [33399,33400]"/>
  <match src="identifier: b [14480,14481]" dest="identifier: b [9848,9849]"/>
  <match src="function_definition [48281,48376]" dest="function_definition [55019,55114]"/>
  <match src="call_expression [20028,20064]" dest="call_expression [17353,17386]"/>
  <match src="uint256: uint256 [12350,12357]" dest="uint256: uint256 [9719,9726]"/>
  <match src="identifier: _totalSupply [29533,29545]" dest="identifier: _totalSupply [35157,35169]"/>
  <match src="true [25769,25773]" dest="true [31393,31397]"/>
  <match src="call_expression [27849,27920]" dest="call_expression [33473,33544]"/>
  <match src="struct_member [1881,1900]" dest="struct_member [21837,21856]"/>
  <match src="memory: memory [22975,22981]" dest="memory: memory [28599,28605]"/>
  <match src="identifier: pendingOwner [815,827]" dest="identifier: pendingOwner [20771,20783]"/>
  <match src=",: , [40113,40114]" dest=",: , [46561,46562]"/>
  <match src="identifier: require [4669,4676]" dest="identifier: require [24978,24985]"/>
  <match src="string_literal [37988,38053]" dest="string_literal [44427,44492]"/>
  <match src="identifier: sender [25673,25679]" dest="identifier: sender [31297,31303]"/>
  <match src="identifier: amount [31121,31127]" dest="identifier: amount [36745,36751]"/>
  <match src="(: ( [17937,17938]" dest="(: ( [15500,15501]"/>
  <match src="type_name [7980,7987]" dest="type_name [2591,2598]"/>
  <match src="): ) [41059,41060]" dest="): ) [47507,47508]"/>
  <match src="type_name [19730,19737]" dest="type_name [17677,17684]"/>
  <match src="return_type_definition [13042,13059]" dest="return_type_definition [11253,11270]"/>
  <match src="type_name [1395,1402]" dest="type_name [21351,21358]"/>
  <match src="public: public [2137,2143]" dest="public: public [22093,22099]"/>
  <match src="returns: returns [26269,26276]" dest="returns: returns [31893,31900]"/>
  <match src="contract_body [31360,32018]" dest="contract_body [37336,38012]"/>
  <match src="variable_declaration_statement [11748,11766]" dest="variable_declaration_statement [8497,8515]"/>
  <match src=",: , [10156,10157]" dest=",: , [7629,7630]"/>
  <match src="event_paramater [4258,4282]" dest="event_paramater [24567,24591]"/>
  <match src="primitive_type [12361,12368]" dest="primitive_type [9730,9737]"/>
  <match src="uint256: uint256 [36372,36379]" dest="uint256: uint256 [42793,42800]"/>
  <match src="identifier: IERC20 [22599,22605]" dest="identifier: IERC20 [28223,28229]"/>
  <match src="function_definition [41015,41184]" dest="function_definition [47463,47632]"/>
  <match src="internal: internal [13028,13036]" dest="internal: internal [11239,11247]"/>
  <match src="identifier: isRedemptionAddress [41024,41043]" dest="identifier: isRedemptionAddress [47472,47491]"/>
  <match src="expression_statement [11776,11833]" dest="expression_statement [8525,8582]"/>
  <match src="type_name [5750,5757]" dest="type_name [361,368]"/>
  <match src="parameter [15224,15239]" dest="parameter [12984,12999]"/>
  <match src=".: . [8906,8907]" dest=".: . [4272,4273]"/>
  <match src="external: external [37299,37307]" dest="external: external [43720,43728]"/>
  <match src="function_definition [14323,14489]" dest="function_definition [9086,9239]"/>
  <match src="return_type_definition [24358,24372]" dest="return_type_definition [29982,29996]"/>
  <match src="primitive_type [31590,31597]" dest="primitive_type [37575,37582]"/>
  <match src="): ) [41123,41124]" dest="): ) [47571,47572]"/>
  <match src="inheritance_specifier [31354,31359]" dest="inheritance_specifier [37315,37320]"/>
  <match src="identifier: spender [24940,24947]" dest="identifier: spender [30564,30571]"/>
  <match src="function: function [18892,18900]" dest="function: function [16452,16460]"/>
  <match src="}: } [15753,15754]" dest="}: } [13352,13353]"/>
  <match src="): ) [2090,2091]" dest="): ) [22046,22047]"/>
  <match src="function_body [25572,25781]" dest="function_body [31196,31405]"/>
  <match src="variable_declaration [19987,19999]" dest="variable_declaration [17312,17324]"/>
  <match src="mapping: mapping [1664,1671]" dest="mapping: mapping [21620,21627]"/>
  <match src="member_expression [20028,20039]" dest="member_expression [17353,17364]"/>
  <match src="}: } [28208,28209]" dest="}: } [33832,33833]"/>
  <match src=".: . [34790,34791]" dest=".: . [40995,40996]"/>
  <match src="function: function [26190,26198]" dest="function: function [31814,31822]"/>
  <match src="expression_statement [27993,28085]" dest="expression_statement [33617,33709]"/>
  <match src=",: , [25610,25611]" dest=",: , [31234,31235]"/>
  <match src="call_argument [28800,28806]" dest="call_argument [34424,34430]"/>
  <match src="binary_expression [10126,10131]" dest="binary_expression [7599,7604]"/>
  <match src="function: function [14323,14331]" dest="function: function [9086,9094]"/>
  <match src="primitive_type [25517,25524]" dest="primitive_type [31141,31148]"/>
  <match src=",: , [28684,28685]" dest=",: , [34308,34309]"/>
  <match src="type_name [18424,18429]" dest="type_name [15985,15990]"/>
  <match src="): ) [38053,38054]" dest="): ) [44492,44493]"/>
  <match src="contract: contract [22554,22562]" dest="contract: contract [28178,28186]"/>
  <match src="function_body [29265,29618]" dest="function_body [34889,35242]"/>
  <match src="override: override [24882,24890]" dest="override: override [30506,30514]"/>
  <match src="parameter [48223,48236]" dest="parameter [54961,54974]"/>
  <match src="parameter [24367,24371]" dest="parameter [29991,29995]"/>
  <match src="identifier: balance [31999,32006]" dest="identifier: balance [37993,38000]"/>
  <match src="!=: != [28582,28584]" dest="!=: != [34206,34208]"/>
  <match src="): ) [4282,4283]" dest="): ) [24591,24592]"/>
  <match src="primitive_type [25482,25489]" dest="primitive_type [31106,31113]"/>
  <match src="expression_statement [37412,37500]" dest="expression_statement [43842,43930]"/>
  <match src="visibility [31890,31898]" dest="visibility [37875,37883]"/>
  <match src="identifier: owner [30324,30329]" dest="identifier: owner [35948,35953]"/>
  <match src="type_name [7325,7329]" dest="type_name [1936,1940]"/>
  <match src="user_defined_type [41898,41910]" dest="user_defined_type [50539,50551]"/>
  <match src="identifier: require [11045,11052]" dest="identifier: require [10442,10449]"/>
  <match src="call_argument [37562,37568]" dest="call_argument [43992,43998]"/>
  <match src="): ) [13829,13830]" dest="): ) [17839,17840]"/>
  <match src="function: function [48281,48289]" dest="function: function [55019,55027]"/>
  <match src="function_definition [31841,32015]" dest="function_definition [37826,38009]"/>
  <match src="visibility [19483,19491]" dest="visibility [17043,17051]"/>
  <match src="function: function [24817,24825]" dest="function: function [30441,30449]"/>
  <match src="call_expression [25661,25750]" dest="call_expression [31285,31374]"/>
  <match src="(: ( [10951,10952]" dest="(: ( [10348,10349]"/>
  <match src="address: address [24299,24306]" dest="address: address [29923,29930]"/>
  <match src="type_name [7274,7281]" dest="type_name [1885,1892]"/>
  <match src="return_statement [25762,25774]" dest="return_statement [31386,31398]"/>
  <match src="identifier: isContract [19861,19871]" dest="identifier: isContract [17186,17196]"/>
  <match src="return_statement [45148,45160]" dest="return_statement [5701,5718]"/>
  <match src="identifier: Context [8800,8807]" dest="identifier: Context [4166,4173]"/>
  <match src="}: } [15822,15823]" dest="}: } [13385,13386]"/>
  <match src="identifier: spender [8214,8221]" dest="identifier: spender [2825,2832]"/>
  <match src="identifier: account [40355,40362]" dest="identifier: account [46803,46810]"/>
  <match src="visibility [7307,7315]" dest="visibility [1918,1926]"/>
  <match src="+: + [10128,10129]" dest="+: + [7601,7602]"/>
  <match src="primitive_type [19765,19772]" dest="primitive_type [5614,5621]"/>
  <match src="identifier: data [18044,18048]" dest="identifier: data [15605,15609]"/>
  <match src="type_alias [22652,22659]" dest="type_alias [28276,28283]"/>
  <match src="return_type_definition [6570,6587]" dest="return_type_definition [1181,1198]"/>
  <match src="(: ( [39466,39467]" dest="(: ( [45914,45915]"/>
  <match src="address: address [1732,1739]" dest="address: address [21688,21695]"/>
  <match src="bool: bool [6215,6219]" dest="bool: bool [826,830]"/>
  <match src="mapping: mapping [1724,1731]" dest="mapping: mapping [21680,21687]"/>
  <match src="string [27882,27919]" dest="string [33506,33543]"/>
  <match src="virtual: virtual [30133,30140]" dest="virtual: virtual [35757,35764]"/>
  <match src="primitive_type [24318,24325]" dest="primitive_type [29942,29949]"/>
  <match src="contract_declaration [47858,48379]" dest="contract_declaration [54597,55117]"/>
  <match src="): ) [1750,1751]" dest="): ) [21706,21707]"/>
  <match src="function_definition [7257,7331]" dest="function_definition [1868,1942]"/>
  <match src="(: ( [40416,40417]" dest="(: ( [46864,46865]"/>
  <match src="]: ] [1228,1229]" dest="]: ] [21184,21185]"/>
  <match src="state_variable_declaration [36372,36425]" dest="state_variable_declaration [42793,42846]"/>
  <match src="type_name [1054,1061]" dest="type_name [21010,21017]"/>
  <match src="expression_statement [25630,25752]" dest="expression_statement [31254,31376]"/>
  <match src="emit: emit [38115,38119]" dest="emit: emit [44554,44558]"/>
  <match src="return: return [48146,48152]" dest="return: return [54884,54890]"/>
  <match src="type_name [25498,25505]" dest="type_name [31122,31129]"/>
  <match src="identifier: target [17946,17952]" dest="identifier: target [15509,15515]"/>
  <match src=":: : [20046,20047]" dest=":: : [17371,17372]"/>
  <match src=",: , [19660,19661]" dest=",: , [17441,17442]"/>
  <match src="parameter [6162,6179]" dest="parameter [773,790]"/>
  <match src="primitive_type [36767,36774]" dest="primitive_type [43188,43195]"/>
  <match src="&quot;: &quot; [28629,28630]" dest="&quot;: &quot; [34253,34254]"/>
  <match src="[: [ [30323,30324]" dest="[: [ [35947,35948]"/>
  <match src="}: } [4543,4544]" dest="}: } [24852,24853]"/>
  <match src="function: function [16758,16766]" dest="function: function [14321,14329]"/>
  <match src="address: address [43737,43744]" dest="address: address [22207,22214]"/>
  <match src="parameter [14409,14416]" dest="parameter [9144,9151]"/>
  <match src="identifier: account [40504,40511]" dest="identifier: account [46952,46959]"/>
  <match src="[: [ [24051,24052]" dest="[: [ [29675,29676]"/>
  <match src="modifier_invocation [34037,34046]" dest="modifier_invocation [40242,40251]"/>
  <match src="identifier: amount [24859,24865]" dest="identifier: amount [30483,30489]"/>
  <match src="address: address [47436,47443]" dest="address: address [49185,49192]"/>
  <match src="function: function [5115,5123]" dest="function: function [25424,25432]"/>
  <match src="mapping: mapping [2067,2074]" dest="mapping: mapping [22023,22030]"/>
  <match src="!: ! [37420,37421]" dest="!: ! [43850,43851]"/>
  <match src="identifier: finOpBalances_Deprecated [1693,1717]" dest="identifier: finOpBalances_Deprecated [21649,21673]"/>
  <match src="string [37362,37400]" dest="string [43792,43830]"/>
  <match src="identifier: account [37874,37881]" dest="identifier: account [44304,44311]"/>
  <match src="identifier: sender [28175,28181]" dest="identifier: sender [33799,33805]"/>
  <match src="state_mutability [15250,15254]" dest="state_mutability [13010,13014]"/>
  <match src="return: return [24628,24634]" dest="return: return [30252,30258]"/>
  <match src="comment: /**      * @dev Emitted when new burn bounds were set      * @param newMin new minimum burn amount      * @param newMax new maximum burn amount      * @notice `newMin` should never be greater than `newMax`      */ [32622,32840]" dest="comment: /**      * @dev Emitted when new burn bounds were set      * @param newMin new minimum burn amount      * @param newMax new maximum burn amount      * @notice `newMin` should never be greater than `newMax`      */ [38809,39027]"/>
  <match src="parameter [19421,19438]" dest="parameter [16981,16998]"/>
  <match src="identifier: onlyPendingOwner [5349,5365]" dest="identifier: onlyPendingOwner [25662,25678]"/>
  <match src="return_type_definition [23661,23676]" dest="return_type_definition [29285,29300]"/>
  <match src="inheritance_specifier [41898,41910]" dest="inheritance_specifier [50539,50551]"/>
  <match src="]: ] [37359,37360]" dest="]: ] [43789,43790]"/>
  <match src="call_argument [40115,40122]" dest="call_argument [46563,46570]"/>
  <match src="function: function [42191,42199]" dest="function: function [47920,47928]"/>
  <match src="identifier: _balances [29439,29448]" dest="identifier: _balances [35063,35072]"/>
  <match src="type_name [34000,34007]" dest="type_name [40196,40203]"/>
  <match src="identifier: _isBlacklisted [38141,38155]" dest="identifier: _isBlacklisted [44580,44594]"/>
  <match src="address: address [27705,27712]" dest="address: address [33329,33336]"/>
  <match src="comment: /**      * @dev Set canBurn status for the account.      * @param account address to set canBurn flag for      * @param _canBurn canBurn flag value      *      * Requirements:      *      * - `msg.sender` should be owner.      */ [38172,38409]" dest="comment: /**      * @dev Set canBurn status for the account.      * @param account address to set canBurn flag for      * @param _canBurn canBurn flag value      *      * Requirements:      *      * - `msg.sender` should be owner.      */ [44611,44848]"/>
  <match src="identifier: Burn [32570,32574]" dest="identifier: Burn [38757,38761]"/>
  <match src="(: ( [19860,19861]" dest="(: ( [17185,17186]"/>
  <match src="call_argument [24419,24425]" dest="call_argument [30043,30049]"/>
  <match src="return: return [18016,18022]" dest="return: return [15577,15583]"/>
  <match src="identifier: super [34785,34790]" dest="identifier: super [40990,40995]"/>
  <match src="): ) [37568,37569]" dest="): ) [43998,43999]"/>
  <match src="uint256: uint256 [14336,14343]" dest="uint256: uint256 [9099,9106]"/>
  <match src="}: } [8920,8921]" dest="}: } [4286,4287]"/>
  <match src="event: event [8160,8165]" dest="event: event [2771,2776]"/>
  <match src="): ) [32612,32613]" dest="): ) [38799,38800]"/>
  <match src="{: { [39436,39437]" dest="{: { [45884,45885]"/>
  <match src="uint256: uint256 [19765,19772]" dest="uint256: uint256 [5614,5621]"/>
  <match src="member_expression [40093,40107]" dest="member_expression [46541,46555]"/>
  <match src="function: function [10939,10947]" dest="function: function [10336,10344]"/>
  <match src="comment: // for accounts without code, i.e. `keccak256('')` [15466,15516]" dest="comment: // constructor execution. [13195,13220]"/>
  <match src="contract_body [47910,48379]" dest="contract_body [54648,55117]"/>
  <match src="parameter [11414,11423]" dest="parameter [8412,8421]"/>
  <match src="type_name [962,966]" dest="type_name [20918,20922]"/>
  <match src="uint256: uint256 [1881,1888]" dest="uint256: uint256 [21837,21844]"/>
  <match src="state_variable_declaration [1376,1414]" dest="state_variable_declaration [21332,21370]"/>
  <match src="identifier: _max [34074,34078]" dest="identifier: _max [40279,40283]"/>
  <match src="primitive_type [14409,14416]" dest="primitive_type [9144,9151]"/>
  <match src="state_mutability [23656,23660]" dest="state_mutability [29280,29284]"/>
  <match src=",: , [31099,31100]" dest=",: , [36723,36724]"/>
  <match src="&quot;: &quot; [39188,39189]" dest="&quot;: &quot; [45636,45637]"/>
  <match src="parameter [23670,23675]" dest="parameter [29294,29299]"/>
  <match src="comment: /**      * @dev See {IERC20-transfer}.      *      * Requirements:      *      * - `recipient` cannot be the zero address.      * - the caller must have a balance of at least `amount`.      */ [24076,24275]" dest="comment: /**      * @dev See {IERC20-transfer}.      *      * Requirements:      *      * - `recipient` cannot be the zero address.      * - the caller must have a balance of at least `amount`.      */ [29700,29899]"/>
  <match src="array_access [26327,26361]" dest="array_access [31951,31985]"/>
  <match src="return_statement [27161,27173]" dest="return_statement [32785,32797]"/>
  <match src="identifier: a [11411,11412]" dest="identifier: a [8409,8410]"/>
  <match src="return_statement [9139,9155]" dest="return_statement [4505,4521]"/>
  <match src="parameter [26217,26232]" dest="parameter [31841,31856]"/>
  <match src="&quot;: &quot; [40479,40480]" dest="&quot;: &quot; [46927,46928]"/>
  <match src="call_argument [25612,25618]" dest="call_argument [31236,31242]"/>
  <match src="address: address [25482,25489]" dest="address: address [31106,31113]"/>
  <match src="&lt;=: &lt;= [34710,34712]" dest="&lt;=: &lt;= [40915,40917]"/>
  <match src="(: ( [37552,37553]" dest="(: ( [43982,43983]"/>
  <match src="binary_expression [14476,14481]" dest="binary_expression [9844,9849]"/>
  <match src="state_variable_declaration [1724,1775]" dest="state_variable_declaration [21680,21731]"/>
  <match src="&quot;: &quot; [11830,11831]" dest="&quot;: &quot; [8579,8580]"/>
  <match src="return_type_definition [24891,24905]" dest="return_type_definition [30515,30529]"/>
  <match src="}: } [26407,26408]" dest="}: } [32031,32032]"/>
  <match src="identifier: require [30231,30238]" dest="identifier: require [35855,35862]"/>
  <match src="]: ] [29456,29457]" dest="]: ] [35080,35081]"/>
  <match src="block_statement [20247,20598]" dest="block_statement [19786,20137]"/>
  <match src="return: return [11115,11121]" dest="return: return [10482,10488]"/>
  <match src="identifier: spender [26946,26953]" dest="identifier: spender [32570,32577]"/>
  <match src="&quot;: &quot; [27798,27799]" dest="&quot;: &quot; [33422,33423]"/>
  <match src="]: ] [25679,25680]" dest="]: ] [31303,31304]"/>
  <match src="identifier: _balances [28095,28104]" dest="identifier: _balances [33719,33728]"/>
  <match src="): ) [1974,1975]" dest="): ) [21930,21931]"/>
  <match src="type_name [1505,1532]" dest="type_name [21461,21488]"/>
  <match src="[: [ [28765,28766]" dest="[: [ [34389,34390]"/>
  <match src=",: , [39326,39327]" dest=",: , [45774,45775]"/>
  <match src="identifier: isBlacklisted [39995,40008]" dest="identifier: isBlacklisted [46443,46456]"/>
  <match src="identifier: account [24052,24059]" dest="identifier: account [29676,29683]"/>
  <match src=",: , [37449,37450]" dest=",: , [43879,43880]"/>
  <match src=",: , [37881,37882]" dest=",: , [44311,44312]"/>
  <match src="primitive_type [12989,12996]" dest="primitive_type [11200,11207]"/>
  <match src="identifier: target [19648,19654]" dest="identifier: target [17786,17792]"/>
  <match src="return_statement [24035,24061]" dest="return_statement [29659,29685]"/>
  <match src="override_specifier [25548,25556]" dest="override_specifier [31172,31180]"/>
  <match src="&quot;: &quot; [28082,28083]" dest="&quot;: &quot; [33706,33707]"/>
  <match src="address: address [30250,30257]" dest="address: address [35874,35881]"/>
  <match src="primitive_type [19746,19751]" dest="primitive_type [17693,17698]"/>
  <match src="identifier: spender [30380,30387]" dest="identifier: spender [36004,36011]"/>
  <match src="primitive_type [12395,12402]" dest="primitive_type [9764,9771]"/>
  <match src="pure: pure [48209,48213]" dest="pure: pure [54938,54942]"/>
  <match src="(: ( [28142,28143]" dest="(: ( [33766,33767]"/>
  <match src="call_argument [25661,25750]" dest="call_argument [31285,31374]"/>
  <match src="(: ( [39349,39350]" dest="(: ( [45797,45798]"/>
  <match src="]: ] [39928,39929]" dest="]: ] [46376,46377]"/>
  <match src="identifier: rounding [48096,48104]" dest="identifier: rounding [54834,54842]"/>
  <match src="identifier: pendingOwner [5442,5454]" dest="identifier: pendingOwner [25755,25767]"/>
  <match src="view: view [15250,15254]" dest="view: view [13010,13014]"/>
  <match src="expression_statement [4879,4937]" dest="expression_statement [25188,25246]"/>
  <match src="member_expression [4677,4687]" dest="member_expression [24986,24996]"/>
  <match src="member_expression [39400,39410]" dest="member_expression [45848,45858]"/>
  <match src="payable: payable [8876,8883]" dest="payable: payable [4242,4249]"/>
  <match src="type_name [26217,26224]" dest="type_name [31841,31848]"/>
  <match src="identifier: account [38132,38139]" dest="identifier: account [44571,44578]"/>
  <match src="function_definition [27670,28209]" dest="function_definition [33294,33833]"/>
  <match src="&quot;: &quot; [27918,27919]" dest="&quot;: &quot; [33542,33543]"/>
  <match src="%: % [14478,14479]" dest="%: % [9846,9847]"/>
  <match src="): ) [11423,11424]" dest="): ) [8421,8422]"/>
  <match src="identifier: target [19738,19744]" dest="identifier: target [17685,17691]"/>
  <match src="identifier: amount [33328,33334]" dest="identifier: amount [39515,39521]"/>
  <match src="primitive_type [36553,36557]" dest="primitive_type [42974,42978]"/>
  <match src="type_name [31920,31927]" dest="type_name [37914,37921]"/>
  <match src="function_body [48135,48169]" dest="function_body [54873,54907]"/>
  <match src="visibility [1269,1276]" dest="visibility [21225,21232]"/>
  <match src="memory: memory [19790,19796]" dest="memory: memory [19547,19553]"/>
  <match src="override: override [34589,34597]" dest="override: override [40794,40802]"/>
  <match src="uint256: uint256 [7291,7298]" dest="uint256: uint256 [1902,1909]"/>
  <match src="contract_body [22606,31152]" dest="contract_body [28230,36776]"/>
  <match src="return_type_definition [26269,26283]" dest="return_type_definition [31893,31907]"/>
  <match src="function_body [48238,48273]" dest="function_body [54976,55011]"/>
  <match src="memory: memory [18385,18391]" dest="memory: memory [15946,15952]"/>
  <match src="(: ( [27877,27878]" dest="(: ( [33501,33502]"/>
  <match src="identifier: sender [4891,4897]" dest="identifier: sender [25200,25206]"/>
  <match src="(: ( [10512,10513]" dest="(: ( [12016,12017]"/>
  <match src="identifier: require [27849,27856]" dest="identifier: require [33473,33480]"/>
  <match src="(: ( [37336,37337]" dest="(: ( [43766,43767]"/>
  <match src="parameter [25566,25570]" dest="parameter [31190,31194]"/>
  <match src="indexed: indexed [8206,8213]" dest="indexed: indexed [2817,2824]"/>
  <match src="&quot;: &quot; [39140,39141]" dest="&quot;: &quot; [45588,45589]"/>
  <match src="uint256: uint256 [1458,1465]" dest="uint256: uint256 [21414,21421]"/>
  <match src="number_literal: 2 [47978,47979]" dest="number_literal: 2 [54716,54717]"/>
  <match src="}: } [19689,19690]" dest="}: } [17463,17464]"/>
  <match src="address: address [8175,8182]" dest="address: address [2786,2793]"/>
  <match src="public: public [26980,26986]" dest="public: public [32604,32610]"/>
  <match src="function_body [23677,23705]" dest="function_body [29301,29329]"/>
  <match src="virtual: virtual [34581,34588]" dest="virtual: virtual [40786,40793]"/>
  <match src="mapping: mapping [1439,1446]" dest="mapping: mapping [21395,21402]"/>
  <match src="call_argument [19669,19681]" dest="call_argument [17443,17455]"/>
  <match src="uint256: uint256 [47539,47546]" dest="uint256: uint256 [51786,51793]"/>
  <match src="}: } [48378,48379]" dest="}: } [55116,55117]"/>
  <match src="type_name [1724,1751]" dest="type_name [21680,21707]"/>
  <match src="=&gt;: =&gt; [1680,1682]" dest="=&gt;: =&gt; [21636,21638]"/>
  <match src="type_name [1087,1094]" dest="type_name [21043,21050]"/>
  <match src="virtual: virtual [22946,22953]" dest="virtual: virtual [28570,28577]"/>
  <match src="event_definition [7923,7995]" dest="event_definition [2534,2606]"/>
  <match src="function_definition [48177,48273]" dest="function_definition [54915,55011]"/>
  <match src="identifier: onlyOwner [34037,34046]" dest="identifier: onlyOwner [40242,40251]"/>
  <match src="type_name [7938,7945]" dest="type_name [2549,2556]"/>
  <match src="binary_expression [29284,29305]" dest="binary_expression [34908,34929]"/>
  <match src="&quot;: &quot; [47601,47602]" dest="&quot;: &quot; [51928,51929]"/>
  <match src="identifier: CENT [39350,39354]" dest="identifier: CENT [45798,45802]"/>
  <match src="identifier: recipient [47425,47434]" dest="identifier: newFeed [52737,52744]"/>
  <match src="identifier: _beforeTokenTransfer [28644,28664]" dest="identifier: _beforeTokenTransfer [34268,34288]"/>
  <match src="array_access [28013,28030]" dest="array_access [33637,33654]"/>
  <match src="identifier: pendingOwner [5410,5422]" dest="identifier: pendingOwner [25723,25735]"/>
  <match src="comment: /**      * @dev Hook that is called before any transfer of tokens. This includes      * minting and burning.      *      * Calling conditions:      *      * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens      * will be to transferred to `to`.      * - when `from` is zero, `amount` tokens will be minted for `to`.      * - when `to` is zero, `amount` of ``from``'s tokens will be burned.      * - `from` and `to` are never both zero.      *      * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].      */ [30412,31001]" dest="comment: /**      * @dev Hook that is called before any transfer of tokens. This includes      * minting and burning.      *      * Calling conditions:      *      * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens      * will be to transferred to `to`.      * - when `from` is zero, `amount` tokens will be minted for `to`.      * - when `to` is zero, `amount` of ``from``'s tokens will be burned.      * - `from` and `to` are never both zero.      *      * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].      */ [36036,36625]"/>
  <match src="(: ( [10588,10589]" dest="(: ( [8056,8057]"/>
  <match src="): ) [48297,48298]" dest="): ) [55035,55036]"/>
  <match src="memory: memory [8986,8992]" dest="memory: memory [4352,4358]"/>
  <match src="public: public [26254,26260]" dest="public: public [31878,31884]"/>
  <match src="override_specifier [34589,34597]" dest="override_specifier [40794,40802]"/>
  <match src="(: ( [26365,26366]" dest="(: ( [31989,31990]"/>
  <match src="function_body [34047,34216]" dest="function_body [40252,40421]"/>
  <match src="uint256: uint256 [13721,13728]" dest="uint256: uint256 [7984,7991]"/>
  <match src="[: [ [1227,1228]" dest="[: [ [21183,21184]"/>
  <match src="primitive_type [28665,28672]" dest="primitive_type [34289,34296]"/>
  <match src="identifier: SafeMath [22619,22627]" dest="identifier: SafeMath [28243,28251]"/>
  <match src="identifier: recipient [39176,39185]" dest="identifier: recipient [45624,45633]"/>
  <match src="!=: != [27783,27785]" dest="!=: != [33407,33409]"/>
  <match src="{: { [14418,14419]" dest="{: { [9773,9774]"/>
  <match src="call_argument [26318,26325]" dest="call_argument [31942,31949]"/>
  <match src="primitive_type [1601,1608]" dest="primitive_type [21557,21564]"/>
  <match src="call_argument [18496,18508]" dest="call_argument [16056,16068]"/>
  <match src="user_defined_type [31863,31869]" dest="user_defined_type [37848,37854]"/>
  <match src="): ) [19878,19879]" dest="): ) [17203,17204]"/>
  <match src="identifier: require [39900,39907]" dest="identifier: require [46348,46355]"/>
  <match src="identifier: recipient [38993,39002]" dest="identifier: recipient [45441,45450]"/>
  <match src="string [12432,12460]" dest="string [18799,18840]"/>
  <match src="): ) [23639,23640]" dest="): ) [29263,29264]"/>
  <match src=",: , [6179,6180]" dest=",: , [790,791]"/>
  <match src="parameter [6524,6537]" dest="parameter [1135,1148]"/>
  <match src=",: , [24316,24317]" dest=",: , [29940,29941]"/>
  <match src="address: address [1122,1129]" dest="address: address [21078,21085]"/>
  <match src="function_definition [28490,28868]" dest="function_definition [34114,34492]"/>
  <match src="returns: returns [11016,11023]" dest="returns: returns [10413,10420]"/>
  <match src="[: [ [24646,24647]" dest="[: [ [30270,30271]"/>
  <match src="parameter [7671,7685]" dest="parameter [2282,2296]"/>
  <match src="event_definition [32564,32614]" dest="event_definition [38751,38801]"/>
  <match src="return_type_definition [7316,7330]" dest="return_type_definition [1927,1941]"/>
  <match src="call_expression [40409,40481]" dest="call_expression [46857,46929]"/>
  <match src="(: ( [45776,45777]" dest="(: ( [51690,51691]"/>
  <match src="string [39931,39974]" dest="string [46379,46422]"/>
  <match src="parameter [10558,10565]" dest="parameter [12090,12097]"/>
  <match src="type_name [11025,11032]" dest="type_name [10422,10429]"/>
  <match src=",: , [8221,8222]" dest=",: , [2832,2833]"/>
  <match src="assembly: assembly [15709,15717]" dest="assembly: assembly [13312,13320]"/>
  <match src="string_literal [27798,27837]" dest="string_literal [33422,33461]"/>
  <match src="identifier: c [10150,10151]" dest="identifier: c [7623,7624]"/>
  <match src="state_variable_declaration [1420,1480]" dest="state_variable_declaration [21376,21436]"/>
  <match src="): ) [39276,39277]" dest="): ) [45724,45725]"/>
  <match src="identifier: a [12986,12987]" dest="identifier: a [11197,11198]"/>
  <match src="address: address [24834,24841]" dest="address: address [30458,30465]"/>
  <match src="type_name [19455,19461]" dest="type_name [17015,17021]"/>
  <match src="parameter [46902,46916]" dest="parameter [51044,51058]"/>
  <match src="(: ( [48005,48006]" dest="(: ( [54743,54744]"/>
  <match src="&quot;: &quot; [29470,29471]" dest="&quot;: &quot; [35094,35095]"/>
  <match src="binary_expression [41108,41176]" dest="binary_expression [47556,47624]"/>
  <match src=",: , [40511,40512]" dest=",: , [46959,46960]"/>
  <match src="{: { [18005,18006]" dest="{: { [15568,15569]"/>
  <match src="returns: returns [18982,18989]" dest="returns: returns [16542,16549]"/>
  <match src="function: function [5704,5712]" dest="function: function [315,323]"/>
  <match src="uint256: uint256 [12989,12996]" dest="uint256: uint256 [11200,11207]"/>
  <match src="call_argument [27798,27837]" dest="call_argument [33422,33461]"/>
  <match src="primitive_type [1458,1465]" dest="primitive_type [21414,21421]"/>
  <match src=",: , [27107,27108]" dest=",: , [32731,32732]"/>
  <match src="identifier: require [4879,4886]" dest="identifier: require [25188,25195]"/>
  <match src="call_expression [39072,39142]" dest="call_expression [45520,45590]"/>
  <match src="if_statement [11689,11736]" dest="if_statement [8466,8487]"/>
  <match src="identifier: account [15232,15239]" dest="identifier: account [12992,12999]"/>
  <match src="(: ( [7937,7938]" dest="(: ( [2548,2549]"/>
  <match src="(: ( [37515,37516]" dest="(: ( [43945,43946]"/>
  <match src="(: ( [25691,25692]" dest="(: ( [31315,31316]"/>
  <match src="parameter [38435,38450]" dest="parameter [44874,44889]"/>
  <match src="state_mutability [47469,47473]" dest="state_mutability [5594,5598]"/>
  <match src="expression_statement [45710,45836]" dest="expression_statement [51683,51757]"/>
  <match src="return_statement [10578,10629]" dest="return_statement [8109,8122]"/>
  <match src="call_expression [31577,31612]" dest="call_expression [37562,37597]"/>
  <match src="identifier: errorMessage [19797,19809]" dest="identifier: errorMessage [19554,19566]"/>
  <match src="pure: pure [10080,10084]" dest="pure: pure [7553,7557]"/>
  <match src="identifier: super [40093,40098]" dest="identifier: super [46541,46546]"/>
  <match src="number_literal: 0 [27794,27795]" dest="number_literal: 0 [33418,33419]"/>
  <match src="primitive_type [1612,1619]" dest="primitive_type [21568,21575]"/>
  <match src="): ) [13098,13099]" dest="): ) [11309,11310]"/>
  <match src=",: , [25659,25660]" dest=",: , [31283,31284]"/>
  <match src="&quot;: &quot; [40034,40035]" dest="&quot;: &quot; [46482,46483]"/>
  <match src="(: ( [40346,40347]" dest="(: ( [46794,46795]"/>
  <match src="(: ( [20486,20487]" dest="(: ( [20025,20026]"/>
  <match src="virtual: virtual [8851,8858]" dest="virtual: virtual [4217,4224]"/>
  <match src="visibility [39035,39043]" dest="visibility [45483,45491]"/>
  <match src="assignment_expression [38497,38524]" dest="assignment_expression [44945,44972]"/>
  <match src="primitive_type [22664,22671]" dest="primitive_type [28288,28295]"/>
  <match src="): ) [26252,26253]" dest="): ) [31876,31877]"/>
  <match src="identifier: _approve [40099,40107]" dest="identifier: _approve [46547,46555]"/>
  <match src="identifier: onlyOwner [38476,38485]" dest="identifier: onlyOwner [44924,44933]"/>
  <match src="identifier: symbol [48290,48296]" dest="identifier: symbol [55028,55034]"/>
  <match src="string_literal [25707,25749]" dest="string_literal [31331,31373]"/>
  <match src=",: , [10972,10973]" dest=",: , [10369,10370]"/>
  <match src="]: ] [30329,30330]" dest="]: ] [35953,35954]"/>
  <match src="contract_declaration [744,3718]" dest="contract_declaration [20700,23845]"/>
  <match src="yul_function_call [20481,20498]" dest="yul_function_call [20020,20037]"/>
  <match src="public: public [24570,24576]" dest="public: public [30194,30200]"/>
  <match src="(: ( [15263,15264]" dest="(: ( [13023,13024]"/>
  <match src="array_access [28777,28795]" dest="array_access [34401,34419]"/>
  <match src="(: ( [39308,39309]" dest="(: ( [45756,45757]"/>
  <match src="comment: /**  * @dev Collection of functions related to the address type  */ [14523,14592]" dest="comment: /**  * @dev Collection of functions related to the address type  */ [12283,12352]"/>
  <match src="call_argument [19662,19667]" dest="call_argument [17422,17429]"/>
  <match src="member_expression [28013,28034]" dest="member_expression [33637,33658]"/>
  <match src=",: , [4256,4257]" dest=",: , [24565,24566]"/>
  <match src="visibility [23977,23983]" dest="visibility [29601,29607]"/>
  <match src="visibility [8949,8957]" dest="visibility [4315,4323]"/>
  <match src="return_type_definition [19819,19841]" dest="return_type_definition [19581,19602]"/>
  <match src="expression_statement [17069,17148]" dest="expression_statement [14632,14711]"/>
  <match src="identifier: b [11793,11794]" dest="identifier: b [8542,8543]"/>
  <match src="struct_declaration [1846,1931]" dest="struct_declaration [21802,21887]"/>
  <match src="primitive_type [10963,10970]" dest="primitive_type [10360,10367]"/>
  <match src="identifier: _totalSupply [941,953]" dest="identifier: _totalSupply [20897,20909]"/>
  <match src="parameter [18991,19003]" dest="parameter [16551,16563]"/>
  <match src="&gt;=: &gt;= [10152,10154]" dest="&gt;=: &gt;= [7625,7627]"/>
  <match src="type_name [4227,4234]" dest="type_name [24536,24543]"/>
  <match src="primitive_type [29215,29222]" dest="primitive_type [34839,34846]"/>
  <match src="function_definition [13708,13838]" dest="function_definition [7971,8129]"/>
  <match src="identifier: b [10068,10069]" dest="identifier: b [7541,7542]"/>
  <match src="&quot;: &quot; [4698,4699]" dest="&quot;: &quot; [25007,25008]"/>
  <match src=",: , [30089,30090]" dest=",: , [35713,35714]"/>
  <match src="&quot;: &quot; [11796,11797]" dest="&quot;: &quot; [8545,8546]"/>
  <match src=",: , [25645,25646]" dest=",: , [31269,31270]"/>
  <match src="number_literal: 0 [27878,27879]" dest="number_literal: 0 [33502,33503]"/>
  <match src="inheritance_specifier [36304,36327]" dest="inheritance_specifier [42725,42748]"/>
  <match src="call_argument [37516,37523]" dest="call_argument [43946,43953]"/>
  <match src="=: = [1077,1078]" dest="=: = [21033,21034]"/>
  <match src="identifier: _approve [27021,27029]" dest="identifier: _approve [32645,32653]"/>
  <match src="call_argument [37362,37400]" dest="call_argument [43792,43830]"/>
  <match src="bool: bool [25566,25570]" dest="bool: bool [31190,31194]"/>
  <match src="): ) [5489,5490]" dest="): ) [25802,25803]"/>
  <match src="visibility [38467,38475]" dest="visibility [44906,44914]"/>
  <match src="type_name [39799,39806]" dest="type_name [46247,46254]"/>
  <match src="function: function [24281,24289]" dest="function: function [29905,29913]"/>
  <match src="(: ( [40503,40504]" dest="(: ( [46951,46952]"/>
  <match src="identifier: add [28139,28142]" dest="identifier: add [33763,33766]"/>
  <match src="call_argument [47547,47561]" dest="call_argument [51794,51808]"/>
  <match src="type_name [17005,17009]" dest="type_name [14568,14572]"/>
  <match src="): ) [24904,24905]" dest="): ) [30528,30529]"/>
  <match src="): ) [23791,23792]" dest="): ) [29415,29416]"/>
  <match src="yul_function_call [20527,20546]" dest="yul_function_call [20066,20085]"/>
  <match src="call_expression [27021,27150]" dest="call_expression [32645,32774]"/>
  <match src="): ) [34026,34027]" dest="): ) [40222,40223]"/>
  <match src="identifier: _balances [28118,28127]" dest="identifier: _balances [33742,33751]"/>
  <match src=",: , [24849,24850]" dest=",: , [30473,30474]"/>
  <match src="primitive_type [30091,30098]" dest="primitive_type [35715,35722]"/>
  <match src="==: == [4898,4900]" dest="==: == [25207,25209]"/>
  <match src="address: address [28585,28592]" dest="address: address [34209,34216]"/>
  <match src="{: { [40398,40399]" dest="{: { [46846,46847]"/>
  <match src=",: , [19057,19058]" dest=",: , [16617,16618]"/>
  <match src="string: string [1187,1193]" dest="string: string [21143,21149]"/>
  <match src="true [45853,45857]" dest="true [6921,6925]"/>
  <match src="state_mutability [6565,6569]" dest="state_mutability [1176,1180]"/>
  <match src="memory: memory [19834,19840]" dest="memory: memory [19595,19601]"/>
  <match src="unary_expression [39994,40008]" dest="unary_expression [46442,46456]"/>
  <match src=",: , [12430,12431]" dest=",: , [18797,18798]"/>
  <match src="type_name [22632,22639]" dest="type_name [28256,28263]"/>
  <match src="boolean_literal [45155,45159]" dest="boolean_literal [5709,5713]"/>
  <match src="uint8: uint8 [47952,47957]" dest="uint8: uint8 [54690,54695]"/>
  <match src="type_name [1645,1692]" dest="type_name [21601,21648]"/>
  <match src="bytes: bytes [18424,18429]" dest="bytes: bytes [15985,15990]"/>
  <match src="call_argument [40124,40130]" dest="call_argument [46572,46578]"/>
  <match src=",: , [40122,40123]" dest=",: , [46570,46571]"/>
  <match src="(: ( [1731,1732]" dest="(: ( [21687,21688]"/>
  <match src="uint8: uint8 [48038,48043]" dest="uint8: uint8 [54776,54781]"/>
  <match src="return_statement [48355,48369]" dest="return_statement [55093,55107]"/>
  <match src="address: address [6162,6169]" dest="address: address [773,780]"/>
  <match src="yul_assignment [15720,15752]" dest="yul_assignment [13323,13351]"/>
  <match src="}: } [28867,28868]" dest="}: } [34491,34492]"/>
  <match src="pure: pure [10544,10548]" dest="pure: pure [12076,12080]"/>
  <match src="bool: bool [24900,24904]" dest="bool: bool [30524,30528]"/>
  <match src="comment: /**      * @dev Destroys `amount` tokens from `msg.sender`, reducing the      * total supply.      * @param amount amount of tokens to burn      *      * Emits a {Transfer} event with `to` set to the zero address.      * Emits a {Burn} event with `burner` set to `msg.sender`      *      * Requirements      *      * - `msg.sender` must have at least `amount` tokens.      *      */ [32906,33300]" dest="comment: /**      * @dev Destroys `amount` tokens from `msg.sender`, reducing the      * total supply.      * @param amount amount of tokens to burn      *      * Emits a {Transfer} event with `to` set to the zero address.      * Emits a {Burn} event with `burner` set to `msg.sender`      *      * Requirements      *      * - `msg.sender` must have at least `amount` tokens.      *      */ [39093,39487]"/>
  <match src="identifier: account [41052,41059]" dest="identifier: account [47500,47507]"/>
  <match src="): ) [40519,40520]" dest="): ) [46967,46968]"/>
  <match src="uint256: uint256 [22632,22639]" dest="uint256: uint256 [28256,28263]"/>
  <match src="=: = [31936,31937]" dest="=: = [37930,37931]"/>
  <match src="member_expression [28118,28142]" dest="member_expression [33742,33766]"/>
  <match src="uint256: uint256 [10114,10121]" dest="uint256: uint256 [7587,7594]"/>
  <match src="visibility [39871,39879]" dest="visibility [46319,46327]"/>
  <match src="expression_statement [39293,39358]" dest="expression_statement [45741,45806]"/>
  <match src="address: address [47417,47424]" dest="address: address [52729,52736]"/>
  <match src="binary_expression [11693,11699]" dest="binary_expression [8470,8476]"/>
  <match src="(: ( [39079,39080]" dest="(: ( [45527,45528]"/>
  <match src="(: ( [5402,5403]" dest="(: ( [25715,25716]"/>
  <match src=",: , [25705,25706]" dest=",: , [31329,31330]"/>
  <match src="comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [8272,8780]" dest="comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [3638,4146]"/>
  <match src="identifier: msg [9146,9149]" dest="identifier: msg [4512,4515]"/>
  <match src="(: ( [18423,18424]" dest="(: ( [15984,15985]"/>
  <match src="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts with custom message when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [13846,14317]" dest="comment: /**      * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.      *      * _Available since v3.4._      */ [6949,7101]"/>
  <match src="identifier: amount [29603,29609]" dest="identifier: amount [35227,35233]"/>
  <match src="type_name [31087,31094]" dest="type_name [36711,36718]"/>
  <match src="function_definition [8929,9162]" dest="function_definition [4295,4528]"/>
  <match src="type_name [26955,26962]" dest="type_name [32579,32586]"/>
  <match src="{: { [10103,10104]" dest="{: { [7576,7577]"/>
  <match src="primitive_type [10513,10520]" dest="primitive_type [12017,12024]"/>
  <match src="identifier: a [11760,11761]" dest="identifier: a [8509,8510]"/>
  <match src="&quot;: &quot; [18050,18051]" dest="&quot;: &quot; [15611,15612]"/>
  <match src="(: ( [4865,4866]" dest="(: ( [25174,25175]"/>
  <match src="primitive_type [11448,11455]" dest="primitive_type [8446,8453]"/>
  <match src="bool: bool [41084,41088]" dest="bool: bool [47532,47536]"/>
  <match src="type_name [23960,23967]" dest="type_name [29584,29591]"/>
  <match src="expression_statement [39153,39230]" dest="expression_statement [45601,45678]"/>
  <match src=",: , [28842,28843]" dest=",: , [34466,34467]"/>
  <match src="uint256: uint256 [32599,32606]" dest="uint256: uint256 [38786,38793]"/>
  <match src="comment: /**      * @dev See {IERC20-approve}.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [24678,24811]" dest="comment: /**      * @dev See {IERC20-approve}.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [30302,30435]"/>
  <match src="identifier: transferFrom [25469,25481]" dest="identifier: transferFrom [31093,31105]"/>
  <match src="}: } [27179,27180]" dest="}: } [32803,32804]"/>
  <match src="comment: /**      * @dev Throws if called by any account other than the owner.      */ [4552,4631]" dest="comment: /**      * @dev Throws if called by any account other than the owner.      */ [24861,24940]"/>
  <match src="&quot;: &quot; [34636,34637]" dest="&quot;: &quot; [40841,40842]"/>
  <match src="comment: /**      * @dev Allows the pendingOwner address to finalize the transfer.      */ [5227,5310]" dest="comment: /**      * @dev Allows the pendingOwner address to finalize the transfer.      */ [25538,25621]"/>
  <match src="identifier: OwnershipTransferred [5382,5402]" dest="identifier: OwnershipTransferred [25695,25715]"/>
  <match src="}: } [9161,9162]" dest="}: } [4527,4528]"/>
  <match src="number_literal: 0 [4526,4527]" dest="number_literal: 0 [24835,24836]"/>
  <match src="string_literal [27882,27919]" dest="string_literal [33506,33543]"/>
  <match src="call_argument [27954,27960]" dest="call_argument [33578,33584]"/>
  <match src="call_argument [28175,28181]" dest="call_argument [33799,33805]"/>
  <match src="call_argument [28832,28842]" dest="call_argument [34456,34466]"/>
  <match src="type_name [24015,24022]" dest="type_name [29639,29646]"/>
  <match src="virtual: virtual [26261,26268]" dest="virtual: virtual [31885,31892]"/>
  <match src="=: = [5440,5441]" dest="=: = [25753,25754]"/>
  <match src="string [29307,29342]" dest="string [34931,34966]"/>
  <match src="): ) [5340,5341]" dest="): ) [25651,25652]"/>
  <match src="contract_body [9790,14492]" dest="contract_body [5399,12172]"/>
  <match src=",: , [29601,29602]" dest=",: , [35225,35226]"/>
  <match src="string_literal [4698,4710]" dest="string_literal [25007,25019]"/>
  <match src="contract: contract [47858,47866]" dest="contract: contract [54597,54605]"/>
  <match src="primitive_type [13766,13773]" dest="primitive_type [8029,8036]"/>
  <match src="bytes: bytes [8980,8985]" dest="bytes: bytes [4346,4351]"/>
  <match src="view: view [5736,5740]" dest="view: view [347,351]"/>
  <match src="call_argument [27882,27919]" dest="call_argument [33506,33543]"/>
  <match src="member_expression [34785,34796]" dest="member_expression [40990,41001]"/>
  <match src="returns: returns [48214,48221]" dest="returns: returns [54952,54959]"/>
  <match src="call_expression [13793,13830]" dest="call_expression [17767,17840]"/>
  <match src="expression_statement [34695,34773]" dest="expression_statement [40900,40978]"/>
  <match src="expression_statement [34128,34143]" dest="expression_statement [40333,40348]"/>
  <match src="string: string [19783,19789]" dest="string: string [19540,19546]"/>
  <match src="call_argument [39104,39141]" dest="call_argument [45552,45589]"/>
  <match src="{: { [14610,14611]" dest="{: { [12370,12371]"/>
  <match src="identifier: div [12346,12349]" dest="identifier: functionDelegateCall [18658,18678]"/>
  <match src="pure: pure [47469,47473]" dest="pure: pure [5594,5598]"/>
  <match src="): ) [40130,40131]" dest="): ) [46578,46579]"/>
  <match src="parameter [10974,11000]" dest="parameter [10371,10397]"/>
  <match src="): ) [37297,37298]" dest="): ) [43718,43719]"/>
  <match src=",: , [27051,27052]" dest=",: , [32675,32676]"/>
  <match src="number_literal: 0 [30258,30259]" dest="number_literal: 0 [35882,35883]"/>
  <match src="address: address [38985,38992]" dest="address: address [45433,45440]"/>
  <match src="primitive_type [18923,18930]" dest="primitive_type [16483,16490]"/>
  <match src="identifier: c [11784,11785]" dest="identifier: c [8533,8534]"/>
  <match src="type_cast_expression [41108,41124]" dest="type_cast_expression [47556,47572]"/>
  <match src="&gt;=: &gt;= [37959,37961]" dest="&gt;=: &gt;= [44398,44400]"/>
  <match src="(: ( [48037,48038]" dest="(: ( [54775,54776]"/>
  <match src="(: ( [8979,8980]" dest="(: ( [4345,4346]"/>
  <match src="function: function [8815,8823]" dest="function: function [4181,4189]"/>
  <match src="address: address [7274,7281]" dest="address: address [1885,1892]"/>
  <match src="expression_statement [5465,5491]" dest="expression_statement [25778,25804]"/>
  <match src="uint256: uint256 [45521,45528]" dest="uint256: uint256 [48907,48914]"/>
  <match src=",: , [6537,6538]" dest=",: , [1148,1149]"/>
  <match src="): ) [29342,29343]" dest="): ) [34966,34967]"/>
  <match src="]: ] [38086,38087]" dest="]: ] [44525,44526]"/>
  <match src="&quot;: &quot; [28043,28044]" dest="&quot;: &quot; [33667,33668]"/>
  <match src="expression_statement [28566,28632]" dest="expression_statement [34190,34256]"/>
  <match src="function_definition [24281,24456]" dest="function_definition [29905,30080]"/>
  <match src="call_expression [11776,11832]" dest="call_expression [8525,8581]"/>
  <match src="call_argument [25593,25599]" dest="call_argument [31217,31223]"/>
  <match src="expression_statement [10142,10189]" dest="expression_statement [7615,7662]"/>
  <match src="identifier: account [28677,28684]" dest="identifier: account [34301,34308]"/>
  <match src="type_name [32599,32606]" dest="type_name [38786,38793]"/>
  <match src="identifier: sender [39309,39315]" dest="identifier: sender [45757,45763]"/>
  <match src="is: is [47875,47877]" dest="is: is [54614,54616]"/>
  <match src="uint256: uint256 [31113,31120]" dest="uint256: uint256 [36737,36744]"/>
  <match src="bytes: bytes [18359,18364]" dest="bytes: bytes [15920,15925]"/>
  <match src="&quot;: &quot; [34682,34683]" dest="&quot;: &quot; [40887,40888]"/>
  <match src="call_expression [16840,16913]" dest="call_expression [14403,14476]"/>
  <match src="type_name [1956,1974]" dest="type_name [21912,21930]"/>
  <match src="abstract: abstract [32305,32313]" dest="abstract: abstract [38492,38500]"/>
  <match src="parameter [29232,29246]" dest="parameter [34856,34870]"/>
  <match src=",: , [19051,19052]" dest=",: , [16611,16612]"/>
  <match src="binary_expression [11053,11059]" dest="binary_expression [10450,10456]"/>
  <match src="call_argument [25707,25749]" dest="call_argument [31331,31373]"/>
  <match src="call_expression [37329,37401]" dest="call_expression [43759,43831]"/>
  <match src="parameter [12350,12359]" dest="parameter [9719,9728]"/>
  <match src="parameter [37866,37881]" dest="parameter [44296,44311]"/>
  <match src="call_expression [17069,17147]" dest="call_expression [14632,14710]"/>
  <match src="primitive_type [8980,8985]" dest="primitive_type [4346,4351]"/>
  <match src="primitive_type [1317,1324]" dest="primitive_type [21273,21280]"/>
  <match src="identifier: errorMessage [14445,14457]" dest="identifier: errorMessage [18441,18453]"/>
  <match src="call_argument [11796,11831]" dest="call_argument [8545,8580]"/>
  <match src="string [10158,10187]" dest="string [7631,7660]"/>
  <match src="function_body [13060,13243]" dest="function_body [11271,11341]"/>
  <match src="expression_statement [29418,29508]" dest="expression_statement [35042,35132]"/>
  <match src="primitive_type [19455,19461]" dest="primitive_type [17015,17021]"/>
  <match src="comment: // solhint-disable-next-line no-inline-assembly [20361,20408]" dest="comment: // solhint-disable-next-line no-inline-assembly [19900,19947]"/>
  <match src=".: . [31943,31944]" dest=".: . [37937,37938]"/>
  <match src="!=: != [30166,30168]" dest="!=: != [35790,35792]"/>
  <match src="{: { [19005,19006]" dest="{: { [16565,16566]"/>
  <match src="type_name [19440,19447]" dest="type_name [17000,17007]"/>
  <match src="call_argument [10158,10187]" dest="call_argument [7631,7660]"/>
  <match src="call_argument [19542,19546]" dest="call_argument [17102,17106]"/>
  <match src="identifier: transfer [24290,24298]" dest="identifier: transfer [29914,29922]"/>
  <match src="string_literal [29307,29342]" dest="string_literal [34931,34966]"/>
  <match src=",: , [34804,34805]" dest=",: , [41009,41010]"/>
  <match src="=&gt;: =&gt; [1953,1955]" dest="=&gt;: =&gt; [21909,21911]"/>
  <match src="function: function [38415,38423]" dest="function: function [44854,44862]"/>
  <match src="): ) [28674,28675]" dest="): ) [34298,34299]"/>
  <match src="identifier: REDEMPTION_ADDRESS_COUNT [36389,36413]" dest="identifier: REDEMPTION_ADDRESS_COUNT [42810,42834]"/>
  <match src="modifier_invocation [5167,5176]" dest="modifier_invocation [25478,25487]"/>
  <match src="identifier: recipient [6170,6179]" dest="identifier: recipient [781,790]"/>
  <match src="[: [ [39094,39095]" dest="[: [ [45542,45543]"/>
  <match src="call_argument [13086,13098]" dest="call_argument [11297,11309]"/>
  <match src="member_expression [29439,29461]" dest="member_expression [35063,35085]"/>
  <match src="true [44052,44056]" dest="true [6012,6016]"/>
  <match src="bytes: bytes [19746,19751]" dest="bytes: bytes [17693,17698]"/>
  <match src="public: public [4445,4451]" dest="public: public [24754,24760]"/>
  <match src=",: , [39387,39388]" dest=",: , [45835,45836]"/>
  <match src=",: , [37523,37524]" dest=",: , [43953,43954]"/>
  <match src="(: ( [34196,34197]" dest="(: ( [40401,40402]"/>
  <match src="assignment_expression [27993,28084]" dest="assignment_expression [33617,33708]"/>
  <match src="return_type_definition [26995,27009]" dest="return_type_definition [32619,32633]"/>
  <match src="): ) [20086,20087]" dest="): ) [19625,19626]"/>
  <match src="internal: internal [16820,16828]" dest="internal: internal [14383,14391]"/>
  <match src=",: , [20546,20547]" dest=",: , [20085,20086]"/>
  <match src="!: ! [39161,39162]" dest="!: ! [45609,45610]"/>
  <match src="call_argument [28738,28744]" dest="call_argument [34362,34368]"/>
  <match src="(: ( [26937,26938]" dest="(: ( [32561,32562]"/>
  <match src="call_argument [28035,28041]" dest="call_argument [33659,33665]"/>
  <match src="type_name [1158,1164]" dest="type_name [21114,21120]"/>
  <match src="identifier: _msgSender [26304,26314]" dest="identifier: _msgSender [31928,31938]"/>
  <match src="): ) [17019,17020]" dest="): ) [14582,14583]"/>
  <match src="): ) [26978,26979]" dest="): ) [32602,32603]"/>
  <match src="internal: internal [46924,46932]" dest="internal: internal [5585,5593]"/>
  <match src="&quot;: &quot; [44031,44032]" dest="&quot;: &quot; [51494,51495]"/>
  <match src="): ) [18082,18083]" dest="): ) [15643,15644]"/>
  <match src="type_name [31863,31869]" dest="type_name [37848,37854]"/>
  <match src="function: function [22742,22750]" dest="function: function [28366,28374]"/>
  <match src="internal: internal [29248,29256]" dest="internal: internal [34872,34880]"/>
  <match src="=: = [2052,2053]" dest="=: = [22008,22009]"/>
  <match src="identifier: owner [8191,8196]" dest="identifier: owner [2802,2807]"/>
  <match src="): ) [27148,27149]" dest="): ) [32772,32773]"/>
  <match src="type_name [19746,19751]" dest="type_name [17693,17698]"/>
  <match src="memory: memory [18997,19003]" dest="memory: memory [16557,16563]"/>
  <match src="identifier: mod [13717,13720]" dest="identifier: sub [7980,7983]"/>
  <match src=",: , [7958,7959]" dest=",: , [2569,2570]"/>
  <match src="parameter [10094,10101]" dest="parameter [7567,7574]"/>
  <match src="): ) [27919,27920]" dest="): ) [33543,33544]"/>
  <match src="function: function [11390,11398]" dest="function: function [8388,8396]"/>
  <match src="override_specifier [24882,24890]" dest="override_specifier [30506,30514]"/>
  <match src="identifier: DECIMALS [48063,48071]" dest="identifier: DECIMALS [54801,54809]"/>
  <match src="inheritance_specifier [3999,4011]" dest="inheritance_specifier [24308,24320]"/>
  <match src="type_name [19987,19991]" dest="type_name [17312,17316]"/>
  <match src="bytes: bytes [19501,19506]" dest="bytes: bytes [17061,17066]"/>
  <match src="identifier: isBlacklisted [2092,2105]" dest="identifier: isBlacklisted [22048,22061]"/>
  <match src="parameter [29215,29230]" dest="parameter [34839,34854]"/>
  <match src="primitive_type [37283,37290]" dest="primitive_type [43704,43711]"/>
  <match src="uint256: uint256 [46902,46909]" dest="uint256: uint256 [51044,51051]"/>
  <match src="public: public [22758,22764]" dest="public: public [28382,28388]"/>
  <match src="parameter [48038,48043]" dest="parameter [54776,54781]"/>
  <match src="call_argument [27857,27880]" dest="call_argument [33481,33504]"/>
  <match src=",: , [12987,12988]" dest=",: , [11198,11199]"/>
  <match src="=: = [17021,17022]" dest="=: = [14584,14585]"/>
  <match src="=: = [993,994]" dest="=: = [20949,20950]"/>
  <match src="): ) [8835,8836]" dest="): ) [4201,4202]"/>
  <match src="}: } [9164,9165]" dest="}: } [4530,4531]"/>
  <match src="primitive_type [44874,44881]" dest="primitive_type [53261,53268]"/>
  <match src="[: [ [38078,38079]" dest="[: [ [44517,44518]"/>
  <match src="return_statement [48146,48162]" dest="return_statement [54884,54900]"/>
  <match src="string_literal [34722,34771]" dest="string_literal [40927,40976]"/>
  <match src=",: , [33372,33373]" dest=",: , [39568,39569]"/>
  <match src="&quot;: &quot; [27147,27148]" dest="&quot;: &quot; [32771,32772]"/>
  <match src="function: function [48087,48095]" dest="function: function [54825,54833]"/>
  <match src="function_definition [17916,18091]" dest="function_definition [15479,15652]"/>
  <match src="!=: != [27867,27869]" dest="!=: != [33491,33493]"/>
  <match src="override: override [24349,24357]" dest="override: override [29973,29981]"/>
  <match src="contract: contract [3970,3978]" dest="contract: contract [24279,24287]"/>
  <match src="pragma_directive [47640,47663]" dest="pragma_directive [54257,54280]"/>
  <match src="is: is [32347,32349]" dest="is: is [38534,38536]"/>
  <match src="): ) [29600,29601]" dest="): ) [35224,35225]"/>
  <match src="primitive_type [5750,5757]" dest="primitive_type [361,368]"/>
  <match src="string_literal [39931,39974]" dest="string_literal [46379,46422]"/>
  <match src="call_argument [19066,19109]" dest="call_argument [16626,16669]"/>
  <match src="(: ( [31597,31598]" dest="(: ( [37582,37583]"/>
  <match src="||: || [40018,40020]" dest="||: || [46466,46468]"/>
  <match src="contract_body [14610,20680]" dest="contract_body [12370,20219]"/>
  <match src="{: { [9790,9791]" dest="{: { [5399,5400]"/>
  <match src="identifier: ClaimableOwnable [3979,3995]" dest="identifier: ClaimableOwnable [24288,24304]"/>
  <match src="call_argument [30258,30259]" dest="call_argument [35882,35883]"/>
  <match src="member_expression [40492,40503]" dest="member_expression [46940,46951]"/>
  <match src="assembly_statement [15709,15754]" dest="assembly_statement [13312,13353]"/>
  <match src="identifier: _to [31542,31545]" dest="identifier: _to [37518,37521]"/>
  <match src="): ) [14384,14385]" dest="): ) [9119,9120]"/>
  <match src="primitive_type [16804,16811]" dest="primitive_type [14367,14374]"/>
  <match src="expression_statement [11045,11075]" dest="expression_statement [10442,10472]"/>
  <match src="}: } [40527,40528]" dest="}: } [46975,46976]"/>
  <match src="variable_declaration [20001,20024]" dest="variable_declaration [17326,17349]"/>
  <match src="identifier: recipient [39475,39484]" dest="identifier: recipient [45923,45932]"/>
  <match src="identifier: require [34058,34065]" dest="identifier: require [40263,40270]"/>
  <match src="primitive_type [31101,31108]" dest="primitive_type [36725,36732]"/>
  <match src="identifier: require [40409,40416]" dest="identifier: require [46857,46864]"/>
  <match src="modifier: modifier [4840,4848]" dest="modifier: modifier [25149,25157]"/>
  <match src="call_argument [27044,27051]" dest="call_argument [32668,32675]"/>
  <match src="call_argument [14445,14457]" dest="call_argument [18441,18453]"/>
  <match src="binary_expression [30239,30260]" dest="binary_expression [35863,35884]"/>
  <match src="call_expression [26304,26316]" dest="call_expression [31928,31940]"/>
  <match src="identifier: returndata [20487,20497]" dest="identifier: returndata [20026,20036]"/>
  <match src="identifier: require [10142,10149]" dest="identifier: require [7615,7622]"/>
  <match src="function_body [19515,19690]" dest="function_body [17075,17464]"/>
  <match src="comment: /**  * @title DelegateERC20  * Accept forwarding delegation calls from the old TrueUSD (V1) contract.  * This way the all the ERC20 functions in the old contract still works  * (except Burn).  *  * The original contract is at 0x8dd5fbCe2F6a956C3022bA3663759011Dd51e73E.  * Lines 497-574 on-chain call these delegate functions to forward calls  * This gives the delegate contract the power to change the state of the TrueUSD  * contract. The owner of this contract is the TrueUSD TokenController  * at 0x0000000000075efbee23fe2de1bd0b7690883cc9.  *  * Our audits for TrueCurrency can be found here: github.com/trusttoken/audits  */ [41218,41861]" dest="comment: // import {IERC20} from &quot;@openzeppelin/contracts/token/ERC20/IERC20.sol&quot;; [2972,3045]"/>
  <match src="visibility [43763,43769]" dest="visibility [22215,22221]"/>
  <match src="parameter [6215,6219]" dest="parameter [826,830]"/>
  <match src="&quot;: &quot; [16911,16912]" dest="&quot;: &quot; [14474,14475]"/>
  <match src="call_argument [34197,34201]" dest="call_argument [40402,40406]"/>
  <match src="function_definition [26190,26408]" dest="function_definition [31814,32032]"/>
  <match src="identifier: amount [27973,27979]" dest="identifier: amount [33597,33603]"/>
  <match src="(: ( [39788,39789]" dest="(: ( [46236,46237]"/>
  <match src="call_argument [34722,34771]" dest="call_argument [40927,40976]"/>
  <match src="address: address [25498,25505]" dest="address: address [31122,31129]"/>
  <match src="function: function [27670,27678]" dest="function: function [33294,33302]"/>
  <match src="parameter [31087,31099]" dest="parameter [36711,36723]"/>
  <match src=",: , [28520,28521]" dest=",: , [34144,34145]"/>
  <match src="(: ( [31862,31863]" dest="(: ( [37847,37848]"/>
  <match src="(: ( [34616,34617]" dest="(: ( [40821,40822]"/>
  <match src="(: ( [19871,19872]" dest="(: ( [17196,17197]"/>
  <match src="identifier: _burn [40341,40346]" dest="identifier: _burn [46789,46794]"/>
  <match src="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with      * `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [18099,18315]" dest="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with      * `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [15660,15876]"/>
  <match src="identifier: _transfer [24384,24393]" dest="identifier: _transfer [30008,30017]"/>
  <match src="identifier: data [9150,9154]" dest="identifier: data [4516,4520]"/>
  <match src="primitive_type [27689,27696]" dest="primitive_type [33313,33320]"/>
  <match src="identifier: account [23968,23975]" dest="identifier: account [29592,29599]"/>
  <match src="uint8: uint8 [48128,48133]" dest="uint8: uint8 [54866,54871]"/>
  <match src="identifier: setCanBurn [38424,38434]" dest="identifier: setCanBurn [44863,44873]"/>
  <match src="call_argument [20059,20063]" dest="call_argument [17381,17385]"/>
  <match src="block_statement [39278,39430]" dest="block_statement [45726,45878]"/>
  <match src="virtual: virtual [24582,24589]" dest="virtual: virtual [30206,30213]"/>
  <match src="variable_declaration_tuple [17004,17020]" dest="variable_declaration_tuple [14567,14583]"/>
  <match src="identifier: pendingOwner [5465,5477]" dest="identifier: pendingOwner [25778,25790]"/>
  <match src="): ) [25749,25750]" dest="): ) [31373,31374]"/>
  <match src="string_literal [19566,19606]" dest="string_literal [17126,17166]"/>
  <match src="call_argument [28677,28684]" dest="call_argument [34301,34308]"/>
  <match src="): ) [19606,19607]" dest="): ) [17166,17167]"/>
  <match src="function_definition [10939,11131]" dest="function_definition [10336,10502]"/>
  <match src="number_literal: 0 [1112,1113]" dest="number_literal: 0 [21068,21069]"/>
  <match src="call_argument [25647,25659]" dest="call_argument [31271,31283]"/>
  <match src="identifier: ReclaimerToken [31336,31350]" dest="identifier: ReclaimerToken [37297,37311]"/>
  <match src="=: = [11095,11096]" dest="=: = [5644,5645]"/>
  <match src="primitive_type [27705,27712]" dest="primitive_type [33329,33336]"/>
  <match src="]: ] [27086,27087]" dest="]: ] [32710,32711]"/>
  <match src="assignment_expression [28756,28807]" dest="assignment_expression [34380,34431]"/>
  <match src="call_argument [17077,17084]" dest="call_argument [14640,14647]"/>
  <match src="state_mutability [22954,22958]" dest="state_mutability [28578,28582]"/>
  <match src="primitive_type [18939,18944]" dest="primitive_type [16499,16504]"/>
  <match src="]: ] [28773,28774]" dest="]: ] [34397,34398]"/>
  <match src="return: return [15764,15770]" dest="return: return [13363,13369]"/>
  <match src="expression_statement [19526,19608]" dest="expression_statement [17086,17168]"/>
  <match src="member_expression [9146,9154]" dest="member_expression [4512,4520]"/>
  <match src="(: ( [16847,16848]" dest="(: ( [14410,14411]"/>
  <match src="uint256: uint256 [2013,2020]" dest="uint256: uint256 [21969,21976]"/>
  <match src="==: == [11695,11697]" dest="==: == [8472,8474]"/>
  <match src="): ) [12460,12461]" dest="): ) [18840,18841]"/>
  <match src="{: { [24617,24618]" dest="{: { [30241,30242]"/>
  <match src="binary_expression [34703,34720]" dest="binary_expression [40908,40925]"/>
  <match src="primitive_type [47417,47424]" dest="primitive_type [52729,52736]"/>
  <match src="private: private [1015,1022]" dest="private: private [20971,20978]"/>
  <match src="primitive_type [17991,17996]" dest="primitive_type [15554,15559]"/>
  <match src=",: , [24551,24552]" dest=",: , [30175,30176]"/>
  <match src="address: address [861,868]" dest="address: address [20817,20824]"/>
  <match src="): ) [25531,25532]" dest="): ) [31155,31156]"/>
  <match src="primitive_type [42243,42250]" dest="primitive_type [47962,47969]"/>
  <match src="&quot;: &quot; [25707,25708]" dest="&quot;: &quot; [31331,31332]"/>
  <match src="parameter [18378,18404]" dest="parameter [15939,15965]"/>
  <match src="): ) [1690,1691]" dest="): ) [21646,21647]"/>
  <match src="return_type_definition [11439,11456]" dest="return_type_definition [8437,8454]"/>
  <match src="comment: /**  * @notice This is a copy of openzeppelin ERC20 contract with removed state variables.  * Removing state variables has been necessary due to proxy pattern usage.  * Changes to Openzeppelin ERC20 https://github.com/OpenZeppelin/openzeppelin-contracts/blob/de99bccbfd4ecd19d7369d01b070aa72c64423c9/contracts/token/ERC20/ERC20.sol:  * - Remove state variables _name, _symbol, _decimals  * - Use state variables _balances, _allowances, _totalSupply from ProxyStorage  * - Remove constructor  * - Solidity version changed from ^0.6.0 to 0.6.10  * - Contract made abstract  *  * See also: ClaimableOwnable.sol and ProxyStorage.sol  */ [20684,21327]" dest="comment: /**  * @notice This is a copy of openzeppelin ERC20 contract with removed state variables.  * Removing state variables has been necessary due to proxy pattern usage.  * Changes to Openzeppelin ERC20 https://github.com/OpenZeppelin/openzeppelin-contracts/blob/de99bccbfd4ecd19d7369d01b070aa72c64423c9/contracts/token/ERC20/ERC20.sol:  * - Remove state variables _name, _symbol, _decimals  * - Use state variables _balances, _allowances, _totalSupply from ProxyStorage  * - Remove constructor  * - Solidity version changed from ^0.6.0 to 0.6.10  * - Contract made abstract  *  * See also: ClaimableOwnable.sol and ProxyStorage.sol  */ [25893,26536]"/>
  <match src="uint256: uint256 [44874,44881]" dest="uint256: uint256 [53261,53268]"/>
  <match src="event_paramater [36767,36785]" dest="event_paramater [43188,43206]"/>
  <match src="identifier: functionCallWithValue [19383,19404]" dest="identifier: functionCallWithValue [16943,16964]"/>
  <match src="primitive_type [38985,38992]" dest="primitive_type [45433,45440]"/>
  <match src="{: { [8885,8886]" dest="{: { [4251,4252]"/>
  <match src="visibility [12372,12380]" dest="visibility [9741,9749]"/>
  <match src="primitive_type [10094,10101]" dest="primitive_type [7567,7574]"/>
  <match src="bytes: bytes [19828,19833]" dest="bytes: bytes [19589,19594]"/>
  <match src="identifier: _balances [28756,28765]" dest="identifier: _balances [34380,34389]"/>
  <match src="member_expression [39451,39466]" dest="member_expression [45899,45914]"/>
  <match src="primitive_type [48128,48133]" dest="primitive_type [54866,54871]"/>
  <match src="type_name [12361,12368]" dest="type_name [9730,9737]"/>
  <match src="return_type_definition [17982,18004]" dest="return_type_definition [15545,15567]"/>
  <match src="{: { [15270,15271]" dest="{: { [13030,13031]"/>
  <match src="type_cast_expression [30169,30179]" dest="type_cast_expression [35793,35803]"/>
  <match src="identifier: require [39153,39160]" dest="identifier: require [45601,45608]"/>
  <match src="return_statement [41101,41177]" dest="return_statement [47549,47625]"/>
  <match src="state_mutability [11011,11015]" dest="state_mutability [10408,10412]"/>
  <match src=",: , [13801,13802]" dest=",: , [17798,17799]"/>
  <match src="parameter [14336,14345]" dest="parameter [9099,9108]"/>
  <match src="visibility [23641,23647]" dest="visibility [29265,29271]"/>
  <match src="identifier: super [39293,39298]" dest="identifier: super [45741,45746]"/>
  <match src="=: = [36357,36358]" dest="=: = [42778,42779]"/>
  <match src="return_type_definition [48029,48044]" dest="return_type_definition [54767,54782]"/>
  <match src="identifier: _min [34066,34070]" dest="identifier: _min [40271,40275]"/>
  <match src="binary_expression [16848,16879]" dest="binary_expression [14411,14442]"/>
  <match src="identifier: to [36783,36785]" dest="identifier: to [43204,43206]"/>
  <match src="): ) [29609,29610]" dest="): ) [35233,35234]"/>
  <match src="call_argument [37525,37531]" dest="call_argument [43955,43961]"/>
  <match src="(: ( [31589,31590]" dest="(: ( [37574,37575]"/>
  <match src="uint256: uint256 [34000,34007]" dest="uint256: uint256 [40196,40203]"/>
  <match src="event_paramater [4227,4256]" dest="event_paramater [24536,24565]"/>
  <match src="(: ( [26216,26217]" dest="(: ( [31840,31841]"/>
  <match src="(: ( [24366,24367]" dest="(: ( [29990,29991]"/>
  <match src="call_argument [12429,12430]" dest="call_argument [18793,18797]"/>
  <match src="parameter [25517,25531]" dest="parameter [31141,31155]"/>
  <match src="primitive_type [7291,7298]" dest="primitive_type [1902,1909]"/>
  <match src="return_statement [26389,26401]" dest="return_statement [32013,32025]"/>
  <match src="(: ( [8867,8868]" dest="(: ( [4233,4234]"/>
  <match src="expression_statement [14429,14459]" dest="expression_statement [9784,9827]"/>
  <match src=",: , [11059,11060]" dest=",: , [10456,10457]"/>
  <match src="(: ( [37949,37950]" dest="(: ( [44388,44389]"/>
  <match src="identifier: this [31598,31602]" dest="identifier: this [37583,37587]"/>
  <match src="primitive_type [26234,26241]" dest="primitive_type [31858,31865]"/>
  <match src="{: { [23677,23678]" dest="{: { [29301,29302]"/>
  <match src="{: { [31146,31147]" dest="{: { [36770,36771]"/>
  <match src="binary_expression [11784,11794]" dest="binary_expression [8533,8543]"/>
  <match src="identifier: ProxyStorage [753,765]" dest="identifier: ProxyStorage [20709,20721]"/>
  <match src="expression_statement [24917,24957]" dest="expression_statement [30541,30581]"/>
  <match src="override_specifier [39880,39888]" dest="override_specifier [46328,46336]"/>
  <match src="parameter [30108,30122]" dest="parameter [35732,35746]"/>
  <match src="pure: pure [41070,41074]" dest="pure: pure [47518,47522]"/>
  <match src="uint256: uint256 [24015,24022]" dest="uint256: uint256 [29639,29646]"/>
  <match src="function_body [19005,19118]" dest="function_body [16565,16678]"/>
  <match src="identifier: errorMessage [18392,18404]" dest="identifier: errorMessage [15953,15965]"/>
  <match src="expression_statement [29518,29558]" dest="expression_statement [35142,35182]"/>
  <match src="!=: != [29292,29294]" dest="!=: != [34916,34918]"/>
  <match src="type_name [28522,28529]" dest="type_name [34146,34153]"/>
  <match src="primitive_type [8198,8205]" dest="primitive_type [2809,2816]"/>
  <match src="): ) [8992,8993]" dest="): ) [4358,4359]"/>
  <match src="expression_statement [27021,27151]" dest="expression_statement [32645,32775]"/>
  <match src="modifier_invocation [37308,37317]" dest="modifier_invocation [43738,43747]"/>
  <match src="type_name [5142,5149]" dest="type_name [25451,25458]"/>
  <match src="comment: /**      * @dev Change the minimum and maximum amount that can be burned at once.      * Burning may be disabled by setting both to 0 (this will not be done      * under normal operation, but we can't add checks to disallow it without      * losing a lot of flexibility since burning could also be as good as disabled      * by setting the minimum extremely high, and we don't want to lock      * in any particular cap for the minimum)      * @param _min minimum amount that can be burned at once      * @param _max maximum amount that can be burned at once      */ [33397,33971]" dest="comment: /**      * @dev Change the minimum and maximum amount that can be burned at once.      * Burning may be disabled by setting both to 0 (this will not be done      * under normal operation, but we can't add checks to disallow it without      * losing a lot of flexibility since burning could also be as good as disabled      * by setting the minimum extremely high, and we don't want to lock      * in any particular cap for the minimum)      * @param _min minimum amount that can be burned at once      * @param _max maximum amount that can be burned at once      */ [39593,40167]"/>
  <match src="inheritance_specifier [47878,47909]" dest="inheritance_specifier [54617,54647]"/>
  <match src="address: address [18923,18930]" dest="address: address [16483,16490]"/>
  <match src="parameter [12989,12998]" dest="parameter [11200,11209]"/>
  <match src="string [4915,4935]" dest="string [25224,25244]"/>
  <match src="call_argument [30373,30378]" dest="call_argument [35997,36002]"/>
  <match src="call_argument [4526,4527]" dest="call_argument [24835,24836]"/>
  <match src="parameter [18359,18376]" dest="parameter [15920,15937]"/>
  <match src="(: ( [24404,24405]" dest="(: ( [30028,30029]"/>
  <match src="type_cast_expression [29386,29396]" dest="type_cast_expression [35010,35020]"/>
  <match src="function: function [40332,40340]" dest="function: function [46780,46788]"/>
  <match src="): ) [5158,5159]" dest="): ) [25467,25468]"/>
  <match src="return: return [11845,11851]" dest="return: return [8592,8598]"/>
  <match src="comment: // The easiest way to bubble the revert reason is using memory via assembly [20266,20341]" dest="comment: // The easiest way to bubble the revert reason is using memory via assembly [19805,19880]"/>
  <match src="yul_identifier [20535,20545]" dest="yul_identifier [20074,20084]"/>
  <match src=",: , [25515,25516]" dest=",: , [31139,31140]"/>
  <match src="identifier: b [11422,11423]" dest="identifier: b [8420,8421]"/>
  <match src="function: function [31504,31512]" dest="function: function [37480,37488]"/>
  <match src="{: { [15718,15719]" dest="{: { [13321,13322]"/>
  <match src="type_name [6215,6219]" dest="type_name [826,830]"/>
  <match src="(: ( [37419,37420]" dest="(: ( [43849,43850]"/>
  <match src="identifier: spender [26353,26360]" dest="identifier: spender [31977,31984]"/>
  <match src="identifier: target [18036,18042]" dest="identifier: target [15597,15603]"/>
  <match src="{: { [5623,5624]" dest="{: { [234,235]"/>
  <match src="binary_expression [4887,4913]" dest="binary_expression [25196,25222]"/>
  <match src="function_definition [18321,18517]" dest="function_definition [15882,16077]"/>
  <match src="parameter [25498,25515]" dest="parameter [31122,31139]"/>
  <match src="identifier: subtractedValue [26963,26978]" dest="identifier: subtractedValue [32587,32602]"/>
  <match src="address: address [1601,1608]" dest="address: address [21557,21564]"/>
  <match src="returns: returns [24891,24898]" dest="returns: returns [30515,30522]"/>
  <match src="): ) [6554,6555]" dest="): ) [1165,1166]"/>
  <match src="parameter [24553,24568]" dest="parameter [30177,30192]"/>
  <match src="call_argument [25639,25645]" dest="call_argument [31263,31269]"/>
  <match src="struct: struct [1846,1852]" dest="struct: struct [21802,21808]"/>
  <match src="(: ( [5865,5866]" dest="(: ( [476,477]"/>
  <match src="uint256: uint256 [32866,32873]" dest="uint256: uint256 [39053,39060]"/>
  <match src="]: ] [28137,28138]" dest="]: ] [33761,33762]"/>
  <match src="emit_statement [37543,37570]" dest="emit_statement [43973,44000]"/>
  <match src="return_type_definition [5897,5914]" dest="return_type_definition [508,525]"/>
  <match src="array_access [25661,25694]" dest="array_access [31285,31318]"/>
  <match src="(: ( [24925,24926]" dest="(: ( [30549,30550]"/>
  <match src="state_mutability [10544,10548]" dest="state_mutability [12076,12080]"/>
  <match src="type_name [8175,8182]" dest="type_name [2786,2793]"/>
  <match src="&quot;: &quot; [34080,34081]" dest="&quot;: &quot; [40285,40286]"/>
  <match src=",: , [4913,4914]" dest=",: , [25222,25223]"/>
  <match src=",: , [38450,38451]" dest=",: , [44889,44890]"/>
  <match src="function: function [48177,48185]" dest="function: function [54915,54923]"/>
  <match src="call_argument [29550,29556]" dest="call_argument [35174,35180]"/>
  <match src="comment: /**  * Defines the storage layout of the token implementation contract. Any  * newly declared state variables in future upgrades should be appended  * to the bottom. Never remove state variables from this list, however variables  * can be renamed. Please add _Deprecated to deprecated variables.  */ [438,742]" dest="comment: // pragma solidity &gt;=0.6.0 &lt;0.8.0; [105,139]"/>
  <match src="identifier: isBlacklisted [39162,39175]" dest="identifier: isBlacklisted [45610,45623]"/>
  <match src="type_name [22968,22974]" dest="type_name [28592,28598]"/>
  <match src="(: ( [27953,27954]" dest="(: ( [33577,33578]"/>
  <match src="comment: // solhint-disable-next-line no-empty-blocks [31007,31051]" dest="comment: // solhint-disable-next-line no-empty-blocks [36631,36675]"/>
  <match src="): ) [24955,24956]" dest="): ) [30579,30580]"/>
  <match src="call_expression [25630,25751]" dest="call_expression [31254,31375]"/>
  <match src="block_statement [20138,20670]" dest="block_statement [19677,20209]"/>
  <match src="returns: returns [42234,42241]" dest="returns: returns [47953,47960]"/>
  <match src="}: } [20669,20670]" dest="}: } [20208,20209]"/>
  <match src="parameter [13766,13773]" dest="parameter [8029,8036]"/>
  <match src="identifier: _max [34203,34207]" dest="identifier: _max [40408,40412]"/>
  <match src="identifier: DECIMALS [47932,47940]" dest="identifier: DECIMALS [54670,54678]"/>
  <match src="&quot;: &quot; [37497,37498]" dest="&quot;: &quot; [43927,43928]"/>
  <match src="identifier: amount [28738,28744]" dest="identifier: amount [34362,34368]"/>
  <match src="call_expression [29439,29507]" dest="call_expression [35063,35131]"/>
  <match src="primitive_type [26278,26282]" dest="primitive_type [31902,31906]"/>
  <match src="]: ] [26360,26361]" dest="]: ] [31984,31985]"/>
  <match src="primitive_type [27724,27731]" dest="primitive_type [33348,33355]"/>
  <match src="identifier: finOp [1918,1923]" dest="identifier: finOp [21874,21879]"/>
  <match src="returns: returns [23822,23829]" dest="returns: returns [29446,29453]"/>
  <match src="constructor_definition [4431,4544]" dest="constructor_definition [24740,24853]"/>
  <match src="}: } [14491,14492]" dest="}: } [12171,12172]"/>
  <match src="(: ( [28664,28665]" dest="(: ( [34288,34289]"/>
  <match src="return_statement [48056,48072]" dest="return_statement [54794,54810]"/>
  <match src="visibility [1062,1068]" dest="visibility [21018,21024]"/>
  <match src="true [27168,27172]" dest="true [32792,32796]"/>
  <match src="parameter [18939,18956]" dest="parameter [16499,16516]"/>
  <match src="identifier: amount [39328,39334]" dest="identifier: amount [45776,45782]"/>
  <match src="identifier: weiValue [20048,20056]" dest="identifier: value [17373,17378]"/>
  <match src="view: view [8846,8850]" dest="view: view [4212,4216]"/>
  <match src="primitive_type [19421,19426]" dest="primitive_type [16981,16986]"/>
  <match src="emit: emit [29568,29572]" dest="emit: emit [35192,35196]"/>
  <match src="expression_statement [30152,30221]" dest="expression_statement [35776,35845]"/>
  <match src="identifier: claimOwnership [5325,5339]" dest="identifier: claimOwnership [25636,25650]"/>
  <match src="): ) [30122,30123]" dest="): ) [35746,35747]"/>
  <match src="call_argument [28593,28594]" dest="call_argument [34217,34218]"/>
  <match src="(: ( [31961,31962]" dest="(: ( [37955,37956]"/>
  <match src="}: } [14488,14489]" dest="}: } [9856,9857]"/>
  <match src="identifier: _allowances [27053,27064]" dest="identifier: _allowances [32677,32688]"/>
  <match src="is: is [36301,36303]" dest="is: is [42722,42724]"/>
  <match src=".: . [27087,27088]" dest=".: . [32711,32712]"/>
  <match src="identifier: Transfer [28823,28831]" dest="identifier: Transfer [34447,34455]"/>
  <match src="expression_statement [37329,37402]" dest="expression_statement [43759,43832]"/>
  <match src="uint256: uint256 [10558,10565]" dest="uint256: uint256 [12090,12097]"/>
  <match src="parameter [31113,31127]" dest="parameter [36737,36751]"/>
  <match src="visibility [13743,13751]" dest="visibility [8006,8014]"/>
  <match src="identifier: c [11852,11853]" dest="identifier: c [8599,8600]"/>
  <match src="identifier: require [27768,27775]" dest="identifier: require [33392,33399]"/>
  <match src="(: ( [29461,29462]" dest="(: ( [35085,35086]"/>
  <match src="uint256: uint256 [1317,1324]" dest="uint256: uint256 [21273,21280]"/>
  <match src="): ) [23675,23676]" dest="): ) [29299,29300]"/>
  <match src="function: function [39771,39779]" dest="function: function [46219,46227]"/>
  <match src="call_argument [4915,4935]" dest="call_argument [25224,25244]"/>
  <match src="return_type_definition [24006,24023]" dest="return_type_definition [29630,29647]"/>
  <match src="expression_statement [4722,4724]" dest="expression_statement [25031,25033]"/>
  <match src="&quot;: &quot; [4934,4935]" dest="&quot;: &quot; [25243,25244]"/>
  <match src="primitive_type [25498,25505]" dest="primitive_type [31122,31129]"/>
  <match src="call_expression [13071,13099]" dest="call_expression [11282,11310]"/>
  <match src="identifier: _balances [27993,28002]" dest="identifier: _balances [33617,33626]"/>
  <match src="primitive_type [13051,13058]" dest="primitive_type [11262,11269]"/>
  <match src="struct_field_assignment [17039,17052]" dest="struct_field_assignment [14602,14615]"/>
  <match src=",: , [16802,16803]" dest=",: , [14365,14366]"/>
  <match src="identifier: _msgSender [24394,24404]" dest="identifier: _msgSender [30018,30028]"/>
  <match src="return: return [13786,13792]" dest="return: return [17760,17766]"/>
  <match src="event: event [36756,36761]" dest="event: event [43177,43182]"/>
  <match src="(: ( [12394,12395]" dest="(: ( [9763,9764]"/>
  <match src="identifier: amount [37525,37531]" dest="identifier: amount [43955,43961]"/>
  <match src="view: view [5892,5896]" dest="view: view [503,507]"/>
  <match src="call_argument [11061,11073]" dest="call_argument [10458,10470]"/>
  <match src="virtual: virtual [22765,22772]" dest="virtual: virtual [28389,28396]"/>
  <match src="string_literal [29470,29506]" dest="string_literal [35094,35130]"/>
  <match src="]: ] [39101,39102]" dest="]: ] [45549,45550]"/>
  <match src=",: , [16879,16880]" dest=",: , [14442,14443]"/>
  <match src="identifier: _mint [37510,37515]" dest="identifier: _mint [43940,43945]"/>
  <match src="primitive_type [773,780]" dest="primitive_type [20729,20736]"/>
  <match src="returns: returns [22778,22785]" dest="returns: returns [28402,28409]"/>
  <match src="function_definition [23621,23705]" dest="function_definition [29245,29329]"/>
  <match src="function_definition [30058,30404]" dest="function_definition [35682,36028]"/>
  <match src="identifier: _allowances [25661,25672]" dest="identifier: _allowances [31285,31296]"/>
  <match src="function_definition [38931,39512]" dest="function_definition [45379,45960]"/>
  <match src="{: { [29265,29266]" dest="{: { [34889,34890]"/>
  <match src="identifier: _msgData [8938,8946]" dest="identifier: _msgData [4304,4312]"/>
  <match src="type_name [1593,1620]" dest="type_name [21549,21576]"/>
  <match src="): ) [27979,27980]" dest="): ) [33603,33604]"/>
  <match src="address: address [31590,31597]" dest="address: address [37575,37582]"/>
  <match src="virtual: virtual [8963,8970]" dest="virtual: virtual [4329,4336]"/>
  <match src="identifier: recipient [39317,39326]" dest="identifier: recipient [45765,45774]"/>
  <match src="identifier: allowance [24528,24537]" dest="identifier: allowance [30152,30161]"/>
  <match src="address: address [39799,39806]" dest="address: address [46247,46254]"/>
  <match src="identifier: _burn [40498,40503]" dest="identifier: _burn [46946,46951]"/>
  <match src="identifier: spender [40009,40016]" dest="identifier: spender [46457,46464]"/>
  <match src="user_defined_type [36304,36327]" dest="user_defined_type [42725,42748]"/>
  <match src="parameter [27724,27738]" dest="parameter [33348,33362]"/>
  <match src="): ) [22981,22982]" dest="): ) [28605,28606]"/>
  <match src="primitive_type [24851,24858]" dest="primitive_type [30475,30482]"/>
  <match src="(: ( [5339,5340]" dest="(: ( [25650,25651]"/>
  <match src="primitive_type [861,868]" dest="primitive_type [20817,20824]"/>
  <match src="identifier: target [18351,18357]" dest="identifier: target [15912,15918]"/>
  <match src="(: ( [42219,42220]" dest="(: ( [47936,47937]"/>
  <match src="type_name [1376,1403]" dest="type_name [21332,21359]"/>
  <match src="type_name [836,840]" dest="type_name [20792,20796]"/>
  <match src="type_name [2131,2135]" dest="type_name [22087,22091]"/>
  <match src="{: { [20088,20089]" dest="{: { [19627,19628]"/>
  <match src="state_mutability [48114,48118]" dest="state_mutability [54852,54856]"/>
  <match src="call_argument [19053,19057]" dest="call_argument [16613,16617]"/>
  <match src="(: ( [8834,8835]" dest="(: ( [4200,4201]"/>
  <match src="function_body [27010,27180]" dest="function_body [32634,32804]"/>
  <match src="identifier: account [15744,15751]" dest="identifier: account [13343,13350]"/>
  <match src="block_statement [20088,20132]" dest="block_statement [19627,19671]"/>
  <match src="{: { [31909,31910]" dest="{: { [37903,37904]"/>
  <match src="internal: internal [27740,27748]" dest="internal: internal [33364,33372]"/>
  <match src="event_paramater [8223,8236]" dest="event_paramater [2834,2847]"/>
  <match src="identifier: a [11058,11059]" dest="identifier: a [10455,10456]"/>
  <match src="(: ( [12349,12350]" dest="(: ( [18678,18679]"/>
  <match src="string: string [1158,1164]" dest="string: string [21114,21120]"/>
  <match src="return: return [24437,24443]" dest="return: return [30061,30067]"/>
  <match src="state_mutability [8958,8962]" dest="state_mutability [4324,4328]"/>
  <match src="address: address [6524,6531]" dest="address: address [1135,1142]"/>
  <match src="}: } [48375,48376]" dest="}: } [55113,55114]"/>
  <match src="type_name [7960,7967]" dest="type_name [2571,2578]"/>
  <match src="{: { [47910,47911]" dest="{: { [54648,54649]"/>
  <match src="call_argument [5403,5408]" dest="call_argument [25716,25721]"/>
  <match src="type_name [29215,29222]" dest="type_name [34839,34846]"/>
  <match src="type_name [2086,2090]" dest="type_name [22042,22046]"/>
  <match src=",: , [28595,28596]" dest=",: , [34219,34220]"/>
  <match src="identifier: addedValue [26242,26252]" dest="identifier: addedValue [31866,31876]"/>
  <match src="call_argument [27878,27879]" dest="call_argument [33502,33503]"/>
  <match src="): ) [27879,27880]" dest="): ) [33503,33504]"/>
  <match src="function: function [38931,38939]" dest="function: function [45379,45387]"/>
  <match src="string: string [19455,19461]" dest="string: string [17015,17021]"/>
  <match src=",: , [19453,19454]" dest=",: , [17013,17014]"/>
  <match src="uint256: uint256 [24851,24858]" dest="uint256: uint256 [30475,30482]"/>
  <match src="return: return [44512,44518]" dest="return: return [6606,6612]"/>
  <match src="is: is [3996,3998]" dest="is: is [24305,24307]"/>
  <match src="call_argument [41116,41123]" dest="call_argument [47564,47571]"/>
  <match src="call_argument [24940,24947]" dest="call_argument [30564,30571]"/>
  <match src="(: ( [1493,1494]" dest="(: ( [21449,21450]"/>
  <match src="}: } [20057,20058]" dest="}: } [17379,17380]"/>
  <match src="number_literal: 0 [29303,29304]" dest="number_literal: 0 [34927,34928]"/>
  <match src="&quot;: &quot; [38052,38053]" dest="&quot;: &quot; [44491,44492]"/>
  <match src="true: true [44052,44056]" dest="true: true [6012,6016]"/>
  <match src="): ) [5757,5758]" dest="): ) [368,369]"/>
  <match src="identifier: Approval [30364,30372]" dest="identifier: Approval [35988,35996]"/>
  <match src="identifier: amount [39857,39863]" dest="identifier: amount [46305,46311]"/>
  <match src="}: } [4955,4956]" dest="}: } [25264,25265]"/>
  <match src="type_cast_expression [29295,29305]" dest="type_cast_expression [34919,34929]"/>
  <match src="identifier: proportion [1889,1899]" dest="identifier: proportion [21845,21855]"/>
  <match src="function_definition [12337,12469]" dest="function_definition [18649,18849]"/>
  <match src="primitive_type [1524,1531]" dest="primitive_type [21480,21487]"/>
  <match src="=&gt;: =&gt; [1740,1742]" dest="=&gt;: =&gt; [21696,21698]"/>
  <match src=".: . [28030,28031]" dest=".: . [33654,33655]"/>
  <match src="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [10644,10933]" dest="comment: /**      * @dev Returns the addition of two unsigned integers, with an overflow flag.      *      * _Available since v3.4._      */ [5406,5541]"/>
  <match src="): ) [27149,27150]" dest="): ) [32773,32774]"/>
  <match src="): ) [29506,29507]" dest="): ) [35130,35131]"/>
  <match src="&quot;: &quot; [10158,10159]" dest="&quot;: &quot; [7631,7632]"/>
  <match src="address: address [37866,37873]" dest="address: address [44296,44303]"/>
  <match src="identifier: sub [10948,10951]" dest="identifier: sub [10345,10348]"/>
  <match src="identifier: account [28787,28794]" dest="identifier: account [34411,34418]"/>
  <match src="comment: /**  * @title TrueCurrency  * @dev TrueCurrency is an ERC20 with blacklist &amp; redemption addresses  *  * TrueCurrency is a compliant stablecoin with blacklist and redemption  * addresses. Only the owner can blacklist accounts. Redemption addresses  * are assigned automatically to the first 0x100000 addresses. Sending  * tokens to the redemption address will trigger a burn operation. Only  * the owner can mint or blacklist accounts.  *  * This contract is owned by the TokenController, which manages token  * minting &amp; admin functionality. See TokenController.sol  *  * See also: BurnableTokenWithBounds.sol  *  * ~~~~ Features ~~~~  *  * Redemption Addresses  * - The first 0x100000 addresses are redemption addresses  * - Tokens sent to redemption addresses are burned  * - Redemptions are tracked off-chain  * - Cannot mint tokens to redemption addresses  *  * Blacklist  * - Owner can blacklist accounts in accordance with local regulatory bodies  * - Only a court order will merit a blacklist; blacklisting is extremely rare  *  * Burn Bounds &amp; CanBurn  * - Owner can set min &amp; max burn amounts  * - Only accounts flagged in canBurn are allowed to burn tokens  * - canBurn prevents tokens from being sent to the incorrect address  *  * Reclaimer Token  * - ERC20 Tokens and Ether sent to this contract can be reclaimed by the owner  */ [34892,36268]" dest="comment: // pragma solidity 0.6.10; [2942,2968]"/>
  <match src="identifier: target [19045,19051]" dest="identifier: target [16605,16611]"/>
  <match src="address: address [26217,26224]" dest="address: address [31841,31848]"/>
  <match src="primitive_type [5906,5913]" dest="primitive_type [517,524]"/>
  <match src="override: override [48015,48023]" dest="override: override [54758,54766]"/>
  <match src="identifier: _approve [39780,39788]" dest="identifier: _approve [46228,46236]"/>
  <match src="{: { [20604,20605]" dest="{: { [20143,20144]"/>
  <match src="identifier: sender [27697,27703]" dest="identifier: sender [33321,33327]"/>
  <match src="primitive_type [1732,1739]" dest="primitive_type [21688,21695]"/>
  <match src="event_paramater [32575,32597]" dest="event_paramater [38762,38784]"/>
  <match src="visibility [17973,17981]" dest="visibility [15536,15544]"/>
  <match src=".: . [40497,40498]" dest=".: . [46945,46946]"/>
  <match src="call_argument [25699,25705]" dest="call_argument [31323,31329]"/>
  <match src="(: ( [39245,39246]" dest="(: ( [45693,45694]"/>
  <match src="}: } [29617,29618]" dest="}: } [35241,35242]"/>
  <match src="(: ( [36766,36767]" dest="(: ( [43187,43188]"/>
  <match src="(: ( [39907,39908]" dest="(: ( [46355,46356]"/>
  <match src="(: ( [29598,29599]" dest="(: ( [35222,35223]"/>
  <match src="primitive_type [1945,1952]" dest="primitive_type [21901,21908]"/>
  <match src="): ) [18971,18972]" dest="): ) [16531,16532]"/>
  <match src="(: ( [39399,39400]" dest="(: ( [45847,45848]"/>
  <match src="function_definition [19374,19690]" dest="function_definition [16934,17464]"/>
  <match src="function_definition [29200,29618]" dest="function_definition [34824,35242]"/>
  <match src="comment: /**      * @dev First 0x100000-1 addresses (0x0000000000000000000000000000000000000001 to 0x00000000000000000000000000000000000fffff)      * are the redemption addresses.      * @param account address to check is a redemption address      *      * All transfers to redemption address will trigger token burn.      *      * @notice For transfer to succeed, canBurn must be true for redemption address      *      * @return is `account` a redemption address      */ [40536,41009]" dest="comment: /**      * @dev First 0x100000-1 addresses (0x0000000000000000000000000000000000000001 to 0x00000000000000000000000000000000000fffff)      * are the redemption addresses.      * @param account address to check is a redemption address      *      * All transfers to redemption address will trigger token burn.      *      * @notice For transfer to succeed, canBurn must be true for redemption address      *      * @return is `account` a redemption address      */ [46984,47457]"/>
  <match src="type_name [24299,24306]" dest="type_name [29923,29930]"/>
  <match src="function: function [23941,23949]" dest="function: function [29565,29573]"/>
  <match src="address: address [19405,19412]" dest="address: address [16965,16972]"/>
  <match src="call_argument [31999,32006]" dest="call_argument [37993,38000]"/>
  <match src="visibility [27740,27748]" dest="visibility [33364,33372]"/>
  <match src="identifier: REDEMPTION_ADDRESS_COUNT [37962,37986]" dest="identifier: REDEMPTION_ADDRESS_COUNT [44401,44425]"/>
  <match src="abstract: abstract [22545,22553]" dest="abstract: abstract [28169,28177]"/>
  <match src="(: ( [40107,40108]" dest="(: ( [46555,46556]"/>
  <match src="parameter [26955,26978]" dest="parameter [32579,32602]"/>
  <match src="parameter [24538,24551]" dest="parameter [30162,30175]"/>
  <match src="(: ( [4886,4887]" dest="(: ( [25195,25196]"/>
  <match src="comment: // proportion: 1000 = 100% [1814,1840]" dest="comment: // proportion: 1000 = 100% [21770,21796]"/>
  <match src="return_statement [24967,24979]" dest="return_statement [30591,30603]"/>
  <match src="function_body [41090,41184]" dest="function_body [47538,47632]"/>
  <match src="): ) [7744,7745]" dest="): ) [2355,2356]"/>
  <match src="type_name [26234,26241]" dest="type_name [31858,31865]"/>
  <match src="call_argument [30380,30387]" dest="call_argument [36004,36011]"/>
  <match src="parameter [15264,15268]" dest="parameter [13024,13028]"/>
  <match src="identifier: Address [14602,14609]" dest="identifier: Address [12362,12369]"/>
  <match src="&quot;: &quot; [39931,39932]" dest="&quot;: &quot; [46379,46380]"/>
  <match src="): ) [48043,48044]" dest="): ) [54781,54782]"/>
  <match src="identifier: burner [32591,32597]" dest="identifier: burner [38778,38784]"/>
  <match src="inheritance_specifier [32350,32364]" dest="inheritance_specifier [38537,38551]"/>
  <match src="state_variable_declaration [1220,1255]" dest="state_variable_declaration [21176,21211]"/>
  <match src=",: , [29384,29385]" dest=",: , [35008,35009]"/>
  <match src="parameter [5906,5913]" dest="parameter [517,524]"/>
  <match src="call_argument [28665,28675]" dest="call_argument [34289,34299]"/>
  <match src="member_expression [17023,17037]" dest="member_expression [14586,14600]"/>
  <match src="mapping: mapping [1376,1383]" dest="mapping: mapping [21332,21339]"/>
  <match src="(: ( [41083,41084]" dest="(: ( [47531,47532]"/>
  <match src="identifier: owner [30373,30378]" dest="identifier: owner [35997,36002]"/>
  <match src="): ) [24615,24616]" dest="): ) [30239,30240]"/>
  <match src="type_name [10060,10067]" dest="type_name [7533,7540]"/>
  <match src="call_argument [33362,33372]" dest="call_argument [39558,39568]"/>
  <match src="primitive_type [18359,18364]" dest="primitive_type [15920,15925]"/>
  <match src="): ) [4866,4867]" dest="): ) [25175,25176]"/>
  <match src="{: { [30141,30142]" dest="{: { [35765,35766]"/>
  <match src="}: } [37576,37577]" dest="}: } [44006,44007]"/>
  <match src="&quot;: &quot; [27882,27883]" dest="&quot;: &quot; [33506,33507]"/>
  <match src="uint256: uint256 [41108,41115]" dest="uint256: uint256 [47556,47563]"/>
  <match src="true: true [24974,24978]" dest="true: true [30598,30602]"/>
  <match src="&quot;: &quot; [12432,12433]" dest="&quot;: &quot; [18799,18800]"/>
  <match src="call_expression [24917,24956]" dest="call_expression [30541,30580]"/>
  <match src="(: ( [28592,28593]" dest="(: ( [34216,34217]"/>
  <match src="primitive_type [11025,11032]" dest="primitive_type [10422,10429]"/>
  <match src="uint256: uint256 [11448,11455]" dest="uint256: uint256 [8446,8453]"/>
  <match src="memory: memory [18945,18951]" dest="memory: memory [16505,16511]"/>
  <match src="): ) [27795,27796]" dest="): ) [33419,33420]"/>
  <match src="=: = [29437,29438]" dest="=: = [35061,35062]"/>
  <match src="parameter [26234,26252]" dest="parameter [31858,31876]"/>
  <match src="type_name [47436,47443]" dest="type_name [49185,49192]"/>
  <match src="override: override [46933,46941]" dest="override: override [51077,51085]"/>
  <match src="function_body [27757,28209]" dest="function_body [33381,33833]"/>
  <match src="type_name [11414,11421]" dest="type_name [8412,8419]"/>
  <match src="true: true [44519,44523]" dest="true: true [6614,6618]"/>
  <match src="external: external [34028,34036]" dest="external: external [40224,40232]"/>
  <match src="user_defined_type [47878,47909]" dest="user_defined_type [54617,54647]"/>
  <match src=".: . [29457,29458]" dest=".: . [35081,35082]"/>
  <match src="primitive_type [7706,7713]" dest="primitive_type [2317,2324]"/>
  <match src="type_name [14336,14343]" dest="type_name [9099,9106]"/>
  <match src="}: } [10216,10217]" dest="}: } [7687,7688]"/>
  <match src="parameter [7706,7720]" dest="parameter [2317,2331]"/>
  <match src="bool: bool [2086,2090]" dest="bool: bool [22042,22046]"/>
  <match src="number_literal: 0 [28593,28594]" dest="number_literal: 0 [34217,34218]"/>
  <match src="identifier: transferFrom [7658,7670]" dest="identifier: transferFrom [2269,2281]"/>
  <match src="identifier: _to [31994,31997]" dest="identifier: _to [37988,37991]"/>
  <match src="return_type_definition [10549,10566]" dest="return_type_definition [12081,12098]"/>
  <match src="true [24444,24448]" dest="true [30068,30072]"/>
  <match src="type_name [24900,24904]" dest="type_name [30524,30528]"/>
  <match src="call_expression [18023,18083]" dest="call_expression [15584,15644]"/>
  <match src="{: { [48045,48046]" dest="{: { [54783,54784]"/>
  <match src="): ) [11000,11001]" dest="): ) [10397,10398]"/>
  <match src="expression_statement [27933,27981]" dest="expression_statement [33557,33605]"/>
  <match src="identifier: sender [7679,7685]" dest="identifier: sender [2290,2296]"/>
  <match src="member_expression [39339,39349]" dest="member_expression [45787,45797]"/>
  <match src="call_argument [39350,39354]" dest="call_argument [45798,45802]"/>
  <match src="function_definition [31504,31620]" dest="function_definition [37480,37605]"/>
  <match src=",: , [36551,36552]" dest=",: , [42972,42973]"/>
  <match src="call_argument [39931,39974]" dest="call_argument [46379,46422]"/>
  <match src="uint8: uint8 [47917,47922]" dest="uint8: uint8 [54655,54660]"/>
  <match src="external: external [31547,31555]" dest="external: external [37523,37531]"/>
  <match src="(: ( [42242,42243]" dest="(: ( [47961,47962]"/>
  <match src="primitive_type [10060,10067]" dest="primitive_type [7533,7540]"/>
  <match src="identifier: sender [28003,28009]" dest="identifier: sender [33627,33633]"/>
  <match src="}: } [20658,20659]" dest="}: } [20197,20198]"/>
  <match src="type_name [31113,31120]" dest="type_name [36737,36744]"/>
  <match src="function_body [19842,20677]" dest="function_body [19603,20216]"/>
  <match src="call_argument [28143,28149]" dest="call_argument [33767,33773]"/>
  <match src="expression_statement [24384,24427]" dest="expression_statement [30008,30051]"/>
  <match src="identifier: sender [46857,46863]" dest="identifier: newFeed [48847,48854]"/>
  <match src="identifier: sender [25593,25599]" dest="identifier: sender [31217,31223]"/>
  <match src="primitive_type [28522,28529]" dest="primitive_type [34146,34153]"/>
  <match src="expression_statement [28756,28808]" dest="expression_statement [34380,34432]"/>
  <match src="address: address [34539,34546]" dest="address: address [40744,40751]"/>
  <match src="public: public [48008,48014]" dest="public: public [54746,54752]"/>
  <match src="type_cast_expression [29591,29601]" dest="type_cast_expression [35215,35225]"/>
  <match src="type_name [18939,18944]" dest="type_name [16499,16504]"/>
  <match src="identifier: sendValue [16767,16776]" dest="identifier: sendValue [14330,14339]"/>
  <match src="function: function [12337,12345]" dest="function: function [18649,18657]"/>
  <match src="address: address [4227,4234]" dest="address: address [24536,24543]"/>
  <match src="identifier: amount [28686,28692]" dest="identifier: amount [34310,34316]"/>
  <match src="identifier: returndata [20110,20120]" dest="identifier: returndata [19649,19659]"/>
  <match src=",: , [17017,17018]" dest=",: , [14580,14581]"/>
  <match src="string [39104,39141]" dest="string [45552,45589]"/>
  <match src="type_name [36335,36342]" dest="type_name [42756,42763]"/>
  <match src="(: ( [5905,5906]" dest="(: ( [516,517]"/>
  <match src="uint256: uint256 [1220,1227]" dest="uint256: uint256 [21176,21183]"/>
  <match src=",: , [34554,34555]" dest=",: , [40759,40760]"/>
  <match src="identifier: _ [4722,4723]" dest="identifier: _ [25031,25032]"/>
  <match src="identifier: sender [4681,4687]" dest="identifier: sender [24990,24996]"/>
  <match src="(: ( [33361,33362]" dest="(: ( [39557,39558]"/>
  <match src="primitive_type [32575,32582]" dest="primitive_type [38762,38769]"/>
  <match src="return: return [45148,45154]" dest="return: return [5701,5707]"/>
  <match src="): ) [24405,24406]" dest="): ) [30029,30030]"/>
  <match src="=&gt;: =&gt; [1661,1663]" dest="=&gt;: =&gt; [21617,21619]"/>
  <match src="type_name [11448,11455]" dest="type_name [8446,8453]"/>
  <match src="): ) [11831,11832]" dest="): ) [8580,8581]"/>
  <match src="): ) [13773,13774]" dest="): ) [8036,8037]"/>
  <match src="visibility [24570,24576]" dest="visibility [30194,30200]"/>
  <match src="}: } [17053,17054]" dest="}: } [14616,14617]"/>
  <match src="identifier: amount [24326,24332]" dest="identifier: amount [29950,29956]"/>
  <match src="): ) [30178,30179]" dest="): ) [35802,35803]"/>
  <match src="call_expression [28013,28084]" dest="call_expression [33637,33708]"/>
  <match src="identifier: _functionCallWithValue [19707,19729]" dest="identifier: _verifyCallResult [19483,19500]"/>
  <match src=",: , [27971,27972]" dest=",: , [33595,33596]"/>
  <match src=",: , [27960,27961]" dest=",: , [33584,33585]"/>
  <match src="assignment_expression [29518,29557]" dest="assignment_expression [35142,35181]"/>
  <match src="function: function [31057,31065]" dest="function: function [36681,36689]"/>
  <match src="comment: /**      * @dev send all eth balance in the contract to another address      * @param _to address to send eth balance to      */ [31367,31498]" dest="comment: /**      * @dev send all eth balance in the contract to another address      * @param _to address to send eth balance to      */ [37343,37474]"/>
  <match src="primitive_type [1054,1061]" dest="primitive_type [21010,21017]"/>
  <match src="identifier: ROUNDING [47967,47975]" dest="identifier: ROUNDING [54705,54713]"/>
  <match src="comment: /**      * @dev emitted when ownership is transferred      * @param previousOwner previous owner of this contract      * @param newOwner new owner of this contract      */ [4019,4194]" dest="comment: /**      * @dev emitted when ownership is transferred      * @param previousOwner previous owner of this contract      * @param newOwner new owner of this contract      */ [24328,24503]"/>
  <match src="expression_statement [5188,5212]" dest="expression_statement [25499,25523]"/>
  <match src="return_type_definition [8971,8993]" dest="return_type_definition [4337,4359]"/>
  <match src="public: public [1062,1068]" dest="public: public [21018,21024]"/>
  <match src="type_name [933,940]" dest="type_name [20889,20896]"/>
  <match src="function_definition [5115,5219]" dest="function_definition [25424,25530]"/>
  <match src=",: , [12998,12999]" dest=",: , [11209,11210]"/>
  <match src="visibility [28538,28546]" dest="visibility [34162,34170]"/>
  <match src="return: return [9139,9145]" dest="return: return [4505,4511]"/>
  <match src="identifier: balance [31928,31935]" dest="identifier: balance [37922,37929]"/>
  <match src="uint256: uint256 [11748,11755]" dest="uint256: uint256 [8497,8504]"/>
  <match src="address: address [15224,15231]" dest="address: address [12984,12991]"/>
  <match src=",: , [31111,31112]" dest=",: , [36735,36736]"/>
  <match src="address: address [28665,28672]" dest="address: address [34289,34296]"/>
  <match src="{: { [33345,33346]" dest="{: { [39541,39542]"/>
  <match src="): ) [28083,28084]" dest="): ) [33707,33708]"/>
  <match src="string_literal [28043,28083]" dest="string_literal [33667,33707]"/>
  <match src="parameter [10952,10961]" dest="parameter [10349,10358]"/>
  <match src="type_name [25566,25570]" dest="type_name [31190,31194]"/>
  <match src="): ) [16912,16913]" dest="): ) [14475,14476]"/>
  <match src="identifier: a [10155,10156]" dest="identifier: a [7628,7629]"/>
  <match src="(: ( [38131,38132]" dest="(: ( [44570,44571]"/>
  <match src="view: view [8958,8962]" dest="view: view [4324,4328]"/>
  <match src="identifier: _transfer [25583,25592]" dest="identifier: _transfer [31207,31216]"/>
  <match src="virtual: virtual [28547,28554]" dest="virtual: virtual [34171,34178]"/>
  <match src="public: public [44929,44935]" dest="public: public [22250,22256]"/>
  <match src="call_argument [29603,29609]" dest="call_argument [35227,35233]"/>
  <match src="parameter [19746,19763]" dest="parameter [17693,17710]"/>
  <match src="(: ( [2119,2120]" dest="(: ( [22075,22076]"/>
  <match src="type_name [13766,13773]" dest="type_name [8029,8036]"/>
  <match src=",: , [29230,29231]" dest=",: , [34854,34855]"/>
  <match src="type_name [46849,46856]" dest="type_name [48839,48846]"/>
  <match src="address: address [7671,7678]" dest="address: address [2282,2289]"/>
  <match src="state_mutability [5736,5740]" dest="state_mutability [347,351]"/>
  <match src="function: function [8929,8937]" dest="function: function [4295,4303]"/>
  <match src="primitive_type [32599,32606]" dest="primitive_type [38786,38793]"/>
  <match src="address: address [2075,2082]" dest="address: address [22031,22038]"/>
  <match src="): ) [48236,48237]" dest="): ) [54974,54975]"/>
  <match src="state_variable_declaration [1937,2007]" dest="state_variable_declaration [21893,21963]"/>
  <match src="bool: bool [26278,26282]" dest="bool: bool [31902,31906]"/>
  <match src="address: address [36767,36774]" dest="address: address [43188,43195]"/>
  <match src="state_variable_declaration [2067,2106]" dest="state_variable_declaration [22023,22062]"/>
  <match src="]: ] [28029,28030]" dest="]: ] [33653,33654]"/>
  <match src="visibility [19811,19818]" dest="visibility [19568,19575]"/>
  <match src="comment: /**      * @dev See {IERC20-transferFrom}.      *      * Emits an {Approval} event indicating the updated allowance. This is not      * required by the EIP. See the note at the beginning of {ERC20};      *      * Requirements:      * - `sender` and `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      * - the caller must have allowance for ``sender``'s tokens of at least      * `amount`.      */ [24994,25454]" dest="comment: /**      * @dev See {IERC20-transferFrom}.      *      * Emits an {Approval} event indicating the updated allowance. This is not      * required by the EIP. See the note at the beginning of {ERC20};      *      * Requirements:      * - `sender` and `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      * - the caller must have allowance for ``sender``'s tokens of at least      * `amount`.      */ [30618,31078]"/>
  <match src=".: . [39298,39299]" dest=".: . [45746,45747]"/>
  <match src="mload: mload [20481,20486]" dest="mload: mload [20020,20025]"/>
  <match src="visibility [31129,31137]" dest="visibility [36753,36761]"/>
  <match src="function_body [18005,18091]" dest="function_body [15568,15652]"/>
  <match src="(: ( [29214,29215]" dest="(: ( [34838,34839]"/>
  <match src="(: ( [10149,10150]" dest="(: ( [7622,7623]"/>
  <match src="identifier: _msgSender [24926,24936]" dest="identifier: _msgSender [30550,30560]"/>
  <match src="address: address [7687,7694]" dest="address: address [2298,2305]"/>
  <match src="address: address [24538,24545]" dest="address: address [30162,30169]"/>
  <match src="identifier: require [39072,39079]" dest="identifier: require [45520,45527]"/>
  <match src="type_name [10114,10121]" dest="type_name [7587,7594]"/>
  <match src="override_specifier [48306,48314]" dest="override_specifier [55049,55057]"/>
  <match src="identifier: sub [27088,27091]" dest="identifier: sub [32712,32715]"/>
  <match src="identifier: redemptionAddressCount_Deprecated [1277,1310]" dest="identifier: redemptionAddressCount_Deprecated [21233,21266]"/>
  <match src="primitive_type [32882,32889]" dest="primitive_type [39069,39076]"/>
  <match src="): ) [45833,45834]" dest="): ) [51755,51756]"/>
  <match src="identifier: increaseAllowance [26199,26216]" dest="identifier: increaseAllowance [31823,31840]"/>
  <match src="identifier: _rewardDistribution_Deprecated [1976,2006]" dest="identifier: _rewardDistribution_Deprecated [21932,21962]"/>
  <match src="identifier: spender [24561,24568]" dest="identifier: spender [30185,30192]"/>
  <match src=",: , [30260,30261]" dest=",: , [35884,35885]"/>
  <match src="identifier: Transfer [7929,7937]" dest="identifier: Transfer [2540,2548]"/>
  <match src="call_argument [37942,37986]" dest="call_argument [44381,44425]"/>
  <match src="): ) [40480,40481]" dest="): ) [46928,46929]"/>
  <match src="primitive_type [24538,24545]" dest="primitive_type [30162,30169]"/>
  <match src=",: , [39929,39930]" dest=",: , [46377,46378]"/>
  <match src="primitive_type [23831,23838]" dest="primitive_type [29455,29462]"/>
  <match src="identifier: _burn [34533,34538]" dest="identifier: _burn [40738,40743]"/>
  <match src="visibility [45581,45587]" dest="visibility [22172,22178]"/>
  <match src=",: , [20533,20534]" dest=",: , [20072,20073]"/>
  <match src="external: external [5727,5735]" dest="external: external [338,346]"/>
  <match src="primitive_type [17954,17959]" dest="primitive_type [15517,15522]"/>
  <match src="parameter [8980,8992]" dest="parameter [4346,4358]"/>
  <match src="comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [11869,12331]" dest="comment: /**      * @dev Returns the substraction of two unsigned integers, with an overflow flag.      *      * _Available since v3.4._      */ [5733,5872]"/>
  <match src="{: { [11034,11035]" dest="{: { [10431,10432]"/>
  <match src=",: , [38974,38975]" dest=",: , [45422,45423]"/>
  <match src="identifier: amount [40021,40027]" dest="identifier: amount [46469,46475]"/>
  <match src="comment: /**      * @dev Moves `amount` tokens from `sender` to `recipient` using the      * allowance mechanism. `amount` is then deducted from the caller's      * allowance.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [7339,7643]" dest="comment: /**      * @dev Moves `amount` tokens from `sender` to `recipient` using the      * allowance mechanism. `amount` is then deducted from the caller's      * allowance.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [1950,2254]"/>
  <match src="returns: returns [10085,10092]" dest="returns: returns [7558,7565]"/>
  <match src="virtual: virtual [39044,39051]" dest="virtual: virtual [45492,45499]"/>
  <match src="unary_expression [37337,37351]" dest="unary_expression [43767,43781]"/>
  <match src="identifier: sender [28023,28029]" dest="identifier: sender [33647,33653]"/>
  <match src="uint256: uint256 [11085,11092]" dest="uint256: uint256 [5634,5641]"/>
  <match src="call_argument [33374,33380]" dest="call_argument [39570,39576]"/>
  <match src="identifier: onlyOwner [5167,5176]" dest="identifier: onlyOwner [25478,25487]"/>
  <match src="{: { [20039,20040]" dest="{: { [17364,17365]"/>
  <match src="function_body [10103,10217]" dest="function_body [7576,7688]"/>
  <match src="variable_declaration [10114,10123]" dest="variable_declaration [7587,7596]"/>
  <match src="using: using [22646,22651]" dest="using: using [28270,28275]"/>
  <match src="(: ( [37941,37942]" dest="(: ( [44380,44381]"/>
  <match src="variable_declaration_tuple [19986,20025]" dest="variable_declaration_tuple [17311,17350]"/>
  <match src="type_name [36553,36557]" dest="type_name [42974,42978]"/>
  <match src="array_access [24042,24060]" dest="array_access [29666,29684]"/>
  <match src="comment: // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned [15371,15456]" dest="comment: // construction, since the code is only stored at the end of the [13121,13185]"/>
  <match src="function: function [19698,19706]" dest="function: function [19474,19482]"/>
  <match src="&quot;: &quot; [37399,37400]" dest="&quot;: &quot; [43829,43830]"/>
  <match src="inheritance_specifier [22599,22605]" dest="inheritance_specifier [28223,28229]"/>
  <match src="identifier: amount [29462,29468]" dest="identifier: amount [35086,35092]"/>
  <match src="returns: returns [23661,23668]" dest="returns: returns [29285,29292]"/>
  <match src="parameter [39799,39812]" dest="parameter [46247,46260]"/>
  <match src="mapping: mapping [1593,1600]" dest="mapping: mapping [21549,21556]"/>
  <match src="identifier: SafeMath [9781,9789]" dest="identifier: SafeMath [5390,5398]"/>
  <match src="call_argument [28853,28859]" dest="call_argument [34477,34483]"/>
  <match src="parameter [17954,17971]" dest="parameter [15517,15534]"/>
  <match src="visibility [5727,5735]" dest="visibility [338,346]"/>
  <match src="&gt;: &gt; [20242,20243]" dest="&gt;: &gt; [19781,19782]"/>
  <match src="identifier: to [31109,31111]" dest="identifier: to [36733,36735]"/>
  <match src="identifier: value [19662,19667]" dest="identifier: success [17422,17429]"/>
  <match src="call_argument [18050,18082]" dest="call_argument [15611,15643]"/>
  <match src="primitive_type [10558,10565]" dest="primitive_type [12090,12097]"/>
  <match src="identifier: totalSupply [42270,42281]" dest="identifier: totalSupply [52396,52407]"/>
  <match src=",: , [29468,29469]" dest=",: , [35092,35093]"/>
  <match src="): ) [17971,17972]" dest="): ) [15534,15535]"/>
  <match src="primitive_type [1910,1917]" dest="primitive_type [21866,21873]"/>
  <match src="internal: internal [10071,10079]" dest="internal: internal [7544,7552]"/>
  <match src=":: : [17044,17045]" dest=":: : [14607,14608]"/>
  <match src="identifier: _msgSender [25681,25691]" dest="identifier: _msgSender [31305,31315]"/>
  <match src="visibility [33336,33344]" dest="visibility [39523,39531]"/>
  <match src="identifier: amount [28800,28806]" dest="identifier: amount [34424,34430]"/>
  <match src="number_literal: 0 [29394,29395]" dest="number_literal: 0 [35018,35019]"/>
  <match src="override_specifier [23997,24005]" dest="override_specifier [29621,29629]"/>
  <match src="call_expression [39400,39416]" dest="call_expression [45848,45864]"/>
  <match src="variable_declaration [17005,17017]" dest="variable_declaration [14568,14580]"/>
  <match src="binary_expression [27857,27880]" dest="binary_expression [33481,33504]"/>
  <match src="type_name [18378,18384]" dest="type_name [15939,15945]"/>
  <match src="event_definition [36510,36573]" dest="event_definition [42931,42994]"/>
  <match src=",: , [37560,37561]" dest=",: , [43990,43991]"/>
  <match src="primitive_type [12350,12357]" dest="primitive_type [9719,9726]"/>
  <match src="type_name [38985,38992]" dest="type_name [45433,45440]"/>
  <match src="variable_declaration [31920,31935]" dest="variable_declaration [37914,37929]"/>
  <match src="type_name [861,868]" dest="type_name [20817,20824]"/>
  <match src="external: external [31890,31898]" dest="external: external [37875,37883]"/>
  <match src="parameter [19765,19781]" dest="parameter [5614,5621]"/>
  <match src=",: , [4696,4697]" dest=",: , [25005,25006]"/>
  <match src="identifier: canBurn [38497,38504]" dest="identifier: canBurn [44945,44952]"/>
  <match src="call_argument [31598,31602]" dest="call_argument [37583,37587]"/>
  <match src="identifier: amount [6189,6195]" dest="identifier: amount [800,806]"/>
  <match src="memory: memory [18430,18436]" dest="memory: memory [15991,15997]"/>
  <match src="primitive_type [40347,40354]" dest="primitive_type [46795,46802]"/>
  <match src="state_mutability [13752,13756]" dest="state_mutability [8015,8019]"/>
  <match src="primitive_type [31087,31094]" dest="primitive_type [36711,36718]"/>
  <match src=",: , [14443,14444]" dest=",: , [9797,9798]"/>
  <match src="primitive_type [10114,10121]" dest="primitive_type [7587,7594]"/>
  <match src="identifier: mod [14332,14335]" dest="identifier: div [9095,9098]"/>
  <match src="add: add [20527,20530]" dest="add: add [20066,20069]"/>
  <match src="identifier: Approval [8166,8174]" dest="identifier: Approval [2777,2785]"/>
  <match src=",: , [24938,24939]" dest=",: , [30562,30563]"/>
  <match src="identifier: amount [39389,39395]" dest="identifier: amount [45837,45843]"/>
  <match src="state_variable_declaration [933,954]" dest="state_variable_declaration [20889,20910]"/>
  <match src="return_type_definition [10085,10102]" dest="return_type_definition [7558,7575]"/>
  <match src="type_name [14347,14354]" dest="type_name [9110,9117]"/>
  <match src="[: [ [28022,28023]" dest="[: [ [33646,33647]"/>
  <match src="call_argument [27973,27979]" dest="call_argument [33597,33603]"/>
  <match src="&quot;: &quot; [19605,19606]" dest="&quot;: &quot; [17165,17166]"/>
  <match src="=: = [28719,28720]" dest="=: = [34343,34344]"/>
  <match src="): ) [33334,33335]" dest="): ) [39521,39522]"/>
  <match src="identifier: amount [39486,39492]" dest="identifier: amount [45934,45940]"/>
  <match src="identifier: OwnershipTransferred [4206,4226]" dest="identifier: OwnershipTransferred [24515,24535]"/>
  <match src="(: ( [13720,13721]" dest="(: ( [7983,7984]"/>
  <match src="): ) [41088,41089]" dest="): ) [47536,47537]"/>
  <match src="identifier: amount [40372,40378]" dest="identifier: amount [46820,46826]"/>
  <match src="{: { [5366,5367]" dest="{: { [25679,25680]"/>
  <match src="parameter [19783,19809]" dest="parameter [19540,19566]"/>
  <match src="call_expression [37934,38054]" dest="call_expression [44373,44493]"/>
  <match src="): ) [25570,25571]" dest="): ) [31194,31195]"/>
  <match src="(: ( [11447,11448]" dest="(: ( [8445,8446]"/>
  <match src="expression_statement [37934,38055]" dest="expression_statement [44373,44494]"/>
  <match src=",: , [40032,40033]" dest=",: , [46480,46481]"/>
  <match src="type_name [10513,10520]" dest="type_name [12017,12024]"/>
  <match src=":=: := [20478,20480]" dest=":=: := [20017,20019]"/>
  <match src="identifier: account [38079,38086]" dest="identifier: account [44518,44525]"/>
  <match src="primitive_type [10952,10959]" dest="primitive_type [10349,10356]"/>
  <match src="type_name [1881,1888]" dest="type_name [21837,21844]"/>
  <match src="call_expression [19023,19110]" dest="call_expression [16583,16670]"/>
  <match src=",: , [10961,10962]" dest=",: , [10358,10359]"/>
  <match src="boolean_literal [24974,24978]" dest="boolean_literal [30598,30602]"/>
  <match src="uint256: uint256 [1054,1061]" dest="uint256: uint256 [21010,21017]"/>
  <match src=",: , [27042,27043]" dest=",: , [32666,32667]"/>
  <match src="identifier: require [17069,17076]" dest="identifier: require [14632,14639]"/>
  <match src="type_name [18343,18350]" dest="type_name [15904,15911]"/>
  <match src="identifier: owner [5403,5408]" dest="identifier: owner [25716,25721]"/>
  <match src="type_cast_expression [27786,27796]" dest="type_cast_expression [33410,33420]"/>
  <match src="string_literal [10158,10187]" dest="string_literal [7631,7660]"/>
  <match src="identifier: canBurn [2144,2151]" dest="identifier: canBurn [22100,22107]"/>
  <match src="external: external [33336,33344]" dest="external: external [39523,39531]"/>
  <match src="primitive_type [25566,25570]" dest="primitive_type [31190,31194]"/>
  <match src="identifier: success [20079,20086]" dest="identifier: success [19618,19625]"/>
  <match src="pragma: pragma [47640,47646]" dest="pragma: pragma [54257,54263]"/>
  <match src=",: , [10590,10591]" dest=",: , [8063,8064]"/>
  <match src="): ) [39974,39975]" dest="): ) [46422,46423]"/>
  <match src="call_argument [39475,39484]" dest="call_argument [45923,45932]"/>
  <match src=".: . [4474,4475]" dest=".: . [24783,24784]"/>
  <match src="(: ( [48104,48105]" dest="(: ( [54842,54843]"/>
  <match src="): ) [24332,24333]" dest="): ) [29956,29957]"/>
  <match src="(: ( [34702,34703]" dest="(: ( [40907,40908]"/>
  <match src="primitive_type [22632,22639]" dest="primitive_type [28256,28263]"/>
  <match src=",: , [30387,30388]" dest=",: , [36011,36012]"/>
  <match src="identifier: Blacklisted [36516,36527]" dest="identifier: Blacklisted [42937,42948]"/>
  <match src="bytes: bytes [17954,17959]" dest="bytes: bytes [15517,15522]"/>
  <match src="returns: returns [5741,5748]" dest="returns: returns [352,359]"/>
  <match src="): ) [4443,4444]" dest="): ) [24752,24753]"/>
  <match src="(: ( [18035,18036]" dest="(: ( [15596,15597]"/>
  <match src="identifier: amount [28143,28149]" dest="identifier: amount [33767,33773]"/>
  <match src="function: function [6505,6513]" dest="function: function [1116,1124]"/>
  <match src="return_statement [11716,11725]" dest="return_statement [8478,8487]"/>
  <match src="visibility [48193,48199]" dest="visibility [54931,54937]"/>
  <match src="yul_path [20487,20497]" dest="yul_path [20026,20036]"/>
  <match src="type_name [6524,6531]" dest="type_name [1135,1142]"/>
  <match src="(: ( [19044,19045]" dest="(: ( [16604,16605]"/>
  <match src="primitive_type [14358,14364]" dest="primitive_type [18103,18109]"/>
  <match src="return: return [23851,23857]" dest="return: return [29475,29481]"/>
  <match src="identifier: owner [39807,39812]" dest="identifier: owner [46255,46260]"/>
  <match src="parameter [6181,6195]" dest="parameter [792,806]"/>
  <match src="(: ( [18342,18343]" dest="(: ( [15903,15904]"/>
  <match src="primitive_type [10049,10056]" dest="primitive_type [7522,7529]"/>
  <match src="external: external [5883,5891]" dest="external: external [494,502]"/>
  <match src="}: } [20582,20583]" dest="}: } [20121,20122]"/>
  <match src=",: , [8196,8197]" dest=",: , [2807,2808]"/>
  <match src="primitive_type [48038,48043]" dest="primitive_type [54776,54781]"/>
  <match src="): ) [16860,16861]" dest="): ) [14423,14424]"/>
  <match src="identifier: errorMessage [14372,14384]" dest="identifier: errorMessage [18117,18129]"/>
  <match src="parameter [19730,19744]" dest="parameter [17677,17691]"/>
  <match src="{: { [39889,39890]" dest="{: { [46337,46338]"/>
  <match src="&quot;: &quot; [18081,18082]" dest="&quot;: &quot; [15642,15643]"/>
  <match src="}: } [11860,11861]" dest="}: } [8607,8608]"/>
  <match src="event_paramater [32866,32880]" dest="event_paramater [39053,39067]"/>
  <match src="call_argument [16856,16860]" dest="call_argument [14419,14423]"/>
  <match src="type_name [24608,24615]" dest="type_name [30232,30239]"/>
  <match src="identifier: sender [39095,39101]" dest="identifier: sender [45543,45549]"/>
  <match src="call_expression [39328,39356]" dest="call_expression [45776,45804]"/>
  <match src="type_cast_expression [28665,28675]" dest="type_cast_expression [34289,34299]"/>
  <match src="call_argument [29398,29404]" dest="call_argument [35022,35028]"/>
  <match src="state_mutability [23984,23988]" dest="state_mutability [29608,29612]"/>
  <match src="identifier: amount [39021,39027]" dest="identifier: amount [45469,45475]"/>
  <match src="]: ] [26351,26352]" dest="]: ] [31975,31976]"/>
  <match src="call_argument [37950,37957]" dest="call_argument [44389,44396]"/>
  <match src="call_argument [28686,28692]" dest="call_argument [34310,34316]"/>
  <match src="identifier: amount [28530,28536]" dest="identifier: amount [34154,34160]"/>
  <match src="identifier: Context [22590,22597]" dest="identifier: Context [28214,28221]"/>
  <match src="struct_expression [17023,17054]" dest="struct_expression [14586,14617]"/>
  <match src="(: ( [11692,11693]" dest="(: ( [8469,8470]"/>
  <match src="identifier: data [18952,18956]" dest="identifier: data [16512,16516]"/>
  <match src="call_argument [5488,5489]" dest="call_argument [25801,25802]"/>
  <match src="assignment_expression [28095,28150]" dest="assignment_expression [33719,33774]"/>
  <match src="&quot;: &quot; [45832,45833]" dest="&quot;: &quot; [51754,51755]"/>
  <match src="identifier: balances_Deprecated [869,888]" dest="identifier: balances_Deprecated [20825,20844]"/>
  <match src="string [34080,34116]" dest="string [40285,40321]"/>
  <match src="visibility [47460,47468]" dest="visibility [51060,51068]"/>
  <match src="override_specifier [46933,46941]" dest="override_specifier [51077,51085]"/>
  <match src="primitive_type [38435,38442]" dest="primitive_type [44874,44881]"/>
  <match src="}: } [20676,20677]" dest="}: } [20215,20216]"/>
  <match src="yul_decimal_number: 32 [20531,20533]" dest="yul_decimal_number: 32 [20070,20072]"/>
  <match src="parameter [17938,17952]" dest="parameter [15501,15515]"/>
  <match src="expression_statement [31979,32008]" dest="expression_statement [37973,38002]"/>
  <match src="identifier: b [13126,13127]" dest="identifier: b [9230,9231]"/>
  <match src="identifier: account [5874,5881]" dest="identifier: account [485,492]"/>
  <match src="call_expression [28566,28631]" dest="call_expression [34190,34255]"/>
  <match src="): ) [39492,39493]" dest="): ) [45940,45941]"/>
  <match src="string: string [22968,22974]" dest="string: string [28592,28598]"/>
  <match src="identifier: balanceOf [31944,31953]" dest="identifier: balanceOf [37938,37947]"/>
  <match src="&quot;: &quot; [34722,34723]" dest="&quot;: &quot; [40927,40928]"/>
  <match src="mapping: mapping [1420,1427]" dest="mapping: mapping [21376,21383]"/>
  <match src=".: . [16861,16862]" dest=".: . [14424,14425]"/>
  <match src="&quot;: &quot; [40078,40079]" dest="&quot;: &quot; [46526,46527]"/>
  <match src="expression_statement [34609,34685]" dest="expression_statement [40814,40890]"/>
  <match src="return_type_definition [11016,11033]" dest="return_type_definition [10413,10430]"/>
  <match src="primitive_type [11403,11410]" dest="primitive_type [8401,8408]"/>
  <match src="identifier: sub [29458,29461]" dest="identifier: sub [35082,35085]"/>
  <match src="primitive_type [1384,1391]" dest="primitive_type [21340,21347]"/>
  <match src="uint256: uint256 [24608,24615]" dest="uint256: uint256 [30232,30239]"/>
  <match src="primitive_type [34539,34546]" dest="primitive_type [40744,40751]"/>
  <match src="external: external [37904,37912]" dest="external: external [44334,44342]"/>
  <match src="function: function [33977,33985]" dest="function: function [40173,40181]"/>
  <match src="identifier: _isBlacklisted [38090,38104]" dest="identifier: _isBlacklisted [44529,44543]"/>
  <match src="type_name [46902,46909]" dest="type_name [51044,51051]"/>
  <match src="identifier: account [41116,41123]" dest="identifier: account [47564,47571]"/>
  <match src=",: , [17084,17085]" dest=",: , [14647,14648]"/>
  <match src="&quot;: &quot; [19108,19109]" dest="&quot;: &quot; [16668,16669]"/>
  <match src=",: , [34634,34635]" dest=",: , [40839,40840]"/>
  <match src="private: private [967,974]" dest="private: private [20923,20930]"/>
  <match src="primitive_type [28832,28839]" dest="primitive_type [34456,34463]"/>
  <match src="{: { [16829,16830]" dest="{: { [14392,14393]"/>
  <match src="): ) [22800,22801]" dest="): ) [28424,28425]"/>
  <match src="identifier: balanceOf [5856,5865]" dest="identifier: balanceOf [467,476]"/>
  <match src=",: , [30179,30180]" dest=",: , [35803,35804]"/>
  <match src="indexed: indexed [8183,8190]" dest="indexed: indexed [2794,2801]"/>
  <match src="[: [ [27078,27079]" dest="[: [ [32702,32703]"/>
  <match src="address: address [46849,46856]" dest="address: address [48839,48846]"/>
  <match src="identifier: account [34547,34554]" dest="identifier: account [40752,40759]"/>
  <match src="mapping: mapping [1937,1944]" dest="mapping: mapping [21893,21900]"/>
  <match src="primitive_type [15264,15268]" dest="primitive_type [13024,13028]"/>
  <match src=".: . [17032,17033]" dest=".: . [14595,14596]"/>
  <match src="identifier: b [13079,13080]" dest="identifier: b [11290,11291]"/>
  <match src="return_statement [18016,18084]" dest="return_statement [15577,15645]"/>
  <match src="): ) [18003,18004]" dest="): ) [15566,15567]"/>
  <match src="parameter [6539,6554]" dest="parameter [1150,1165]"/>
  <match src="type_name [13000,13006]" dest="type_name [11211,11217]"/>
  <match src="string: string [13000,13006]" dest="string: string [11211,11217]"/>
  <match src=",: , [19744,19745]" dest=",: , [19513,19514]"/>
  <match src="expression_statement [31577,31613]" dest="expression_statement [37562,37598]"/>
  <match src="visibility [40380,40388]" dest="visibility [46828,46836]"/>
  <match src="abstract: abstract [31318,31326]" dest="abstract: abstract [37279,37287]"/>
  <match src="): ) [34570,34571]" dest="): ) [40775,40776]"/>
  <match src="{: { [26284,26285]" dest="{: { [31908,31909]"/>
  <match src="constructor: constructor [4431,4442]" dest="constructor: constructor [24740,24751]"/>
  <match src="): ) [19840,19841]" dest="): ) [19601,19602]"/>
  <match src="address: address [38960,38967]" dest="address: address [45408,45415]"/>
  <match src="}: } [5497,5498]" dest="}: } [25810,25811]"/>
  <match src="uint8: uint8 [23670,23675]" dest="uint8: uint8 [29294,29299]"/>
  <match src="): ) [34207,34208]" dest="): ) [40412,40413]"/>
  <match src="(: ( [4676,4677]" dest="(: ( [24985,24986]"/>
  <match src="(: ( [24899,24900]" dest="(: ( [30523,30524]"/>
  <match src="identifier: CENT [39411,39415]" dest="identifier: CENT [45859,45863]"/>
  <match src="yul_function_call [15732,15752]" dest="yul_function_call [13331,13351]"/>
  <match src="identifier: require [37934,37941]" dest="identifier: require [44373,44380]"/>
  <match src="primitive_type [5866,5873]" dest="primitive_type [477,484]"/>
  <match src="comment: /**      * @dev Moves `amount` tokens from the caller's account to `recipient`.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [5923,6138]" dest="comment: /**      * @dev Moves `amount` tokens from the caller's account to `recipient`.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [534,749]"/>
  <match src="identifier: amount [25525,25531]" dest="identifier: amount [31149,31155]"/>
  <match src="identifier: sender [25639,25645]" dest="identifier: sender [31263,31269]"/>
  <match src="(: ( [5141,5142]" dest="(: ( [25450,25451]"/>
  <match src="function: function [28490,28498]" dest="function: function [34114,34122]"/>
  <match src="string_literal [27109,27148]" dest="string_literal [32733,32772]"/>
  <match src="identifier: _canBurn [38457,38465]" dest="identifier: _canBurn [44896,44904]"/>
  <match src="uint256: uint256 [11414,11421]" dest="uint256: uint256 [8412,8419]"/>
  <match src="override_specifier [24590,24598]" dest="override_specifier [30214,30222]"/>
  <match src="event_paramater [7960,7978]" dest="event_paramater [2571,2589]"/>
  <match src=",: , [39484,39485]" dest=",: , [45932,45933]"/>
  <match src="identifier: burnMax [34153,34160]" dest="identifier: burnMax [40358,40365]"/>
  <match src=",: , [17952,17953]" dest=",: , [15515,15516]"/>
  <match src="comment: /**      * @dev Emitted when `value` tokens are burnt from one account (`burner`)      * @param burner address which burned tokens      * @param value amount of tokens burned      */ [32372,32558]" dest="comment: /**      * @dev Emitted when `value` tokens are burnt from one account (`burner`)      * @param burner address which burned tokens      * @param value amount of tokens burned      */ [38559,38745]"/>
  <match src="string [19566,19606]" dest="string [17126,17166]"/>
  <match src="(: ( [33319,33320]" dest="(: ( [39506,39507]"/>
  <match src="type_name [25482,25489]" dest="type_name [31106,31113]"/>
  <match src="identifier: TrueCurrency [41898,41910]" dest="identifier: TrueCurrency [50539,50551]"/>
  <match src="identifier: sub [25695,25698]" dest="identifier: sub [31319,31322]"/>
  <match src="type_name [27724,27731]" dest="type_name [33348,33355]"/>
  <match src="): ) [14457,14458]" dest="): ) [9825,9826]"/>
  <match src="uint256: uint256 [10963,10970]" dest="uint256: uint256 [10360,10367]"/>
  <match src="): ) [13026,13027]" dest="): ) [11237,11238]"/>
  <match src="return_type_definition [23822,23839]" dest="return_type_definition [29446,29463]"/>
  <match src="identifier: account [28574,28581]" dest="identifier: account [34198,34205]"/>
  <match src="contract_body [8808,9165]" dest="contract_body [4174,4531]"/>
  <match src="type_name [28505,28512]" dest="type_name [34129,34136]"/>
  <match src="call_argument [39411,39415]" dest="call_argument [45859,45863]"/>
  <match src="number_literal: 18 [47943,47945]" dest="number_literal: 18 [54681,54683]"/>
  <match src="returns: returns [8971,8978]" dest="returns: returns [4337,4344]"/>
  <match src="call_expression [29356,29405]" dest="call_expression [34980,35029]"/>
  <match src="number_literal: 1000 [2054,2058]" dest="number_literal: 1000 [22010,22014]"/>
  <match src="state_variable_declaration [1593,1639]" dest="state_variable_declaration [21549,21595]"/>
  <match src="uint256: uint256 [10952,10959]" dest="uint256: uint256 [10349,10356]"/>
  <match src="type_name [30076,30083]" dest="type_name [35700,35707]"/>
  <match src="function: function [47988,47996]" dest="function: function [54726,54734]"/>
  <match src="bool: bool [24367,24371]" dest="bool: bool [29991,29995]"/>
  <match src="number_literal: 0 [29599,29600]" dest="number_literal: 0 [35223,35224]"/>
  <match src="primitive_type [6181,6188]" dest="primitive_type [792,799]"/>
  <match src="identifier: _ [4947,4948]" dest="identifier: _ [25256,25257]"/>
  <match src="call_argument [16848,16879]" dest="call_argument [14411,14442]"/>
  <match src=",: , [4528,4529]" dest=",: , [24837,24838]"/>
  <match src="string_literal [17055,17057]" dest="string_literal [14618,14620]"/>
  <match src="identifier: super [40492,40497]" dest="identifier: super [46940,46945]"/>
  <match src="[: [ [30330,30331]" dest="[: [ [35954,35955]"/>
  <match src="identifier: account [29449,29456]" dest="identifier: account [35073,35080]"/>
  <match src="{: { [39278,39279]" dest="{: { [45726,45727]"/>
  <match src="{: { [13060,13061]" dest="{: { [11271,11272]"/>
  <match src="function: function [22921,22929]" dest="function: function [28545,28553]"/>
  <match src="identifier: errorMessage [20630,20642]" dest="identifier: errorMessage [20169,20181]"/>
  <match src="state_variable_declaration [861,889]" dest="state_variable_declaration [20817,20845]"/>
  <match src="comment: /**      * @dev Returns the name of the token.      */ [22680,22736]" dest="comment: /**      * @dev Returns the name of the token.      */ [28304,28360]"/>
  <match src="string [34722,34771]" dest="string [40927,40976]"/>
  <match src="): ) [26350,26351]" dest="): ) [31974,31975]"/>
  <match src="-: - [11099,11100]" dest="-: - [8118,8119]"/>
  <match src="): ) [1465,1466]" dest="): ) [21421,21422]"/>
  <match src="call_argument [37420,37449]" dest="call_argument [43850,43879]"/>
  <match src=",: , [29589,29590]" dest=",: , [35213,35214]"/>
  <match src="address: address [29215,29222]" dest="address: address [34839,34846]"/>
  <match src="visibility [24867,24873]" dest="visibility [30491,30497]"/>
  <match src="): ) [5422,5423]" dest="): ) [25735,25736]"/>
  <match src="address: address [27689,27696]" dest="address: address [33313,33320]"/>
  <match src="true [45155,45159]" dest="true [5709,5713]"/>
  <match src="primitive_type [16777,16792]" dest="primitive_type [14340,14355]"/>
  <match src="number_literal: 0x100000 [36416,36424]" dest="number_literal: 0x100000 [42837,42845]"/>
  <match src="returns: returns [13757,13764]" dest="returns: returns [8020,8027]"/>
  <match src="identifier: b [11053,11054]" dest="identifier: b [10450,10451]"/>
  <match src="override: override [39052,39060]" dest="override: override [45500,45508]"/>
  <match src="primitive_type [7960,7967]" dest="primitive_type [2571,2578]"/>
  <match src="identifier: target [20028,20034]" dest="identifier: target [17353,17359]"/>
  <match src="type_name [30091,30098]" dest="type_name [35715,35722]"/>
  <match src="&quot;: &quot; [4709,4710]" dest="&quot;: &quot; [25018,25019]"/>
  <match src="type_name [19405,19412]" dest="type_name [16965,16972]"/>
  <match src="identifier: _totalSupply [29518,29530]" dest="identifier: _totalSupply [35142,35154]"/>
  <match src="(: ( [13765,13766]" dest="(: ( [8028,8029]"/>
  <match src="identifier: _min [34197,34201]" dest="identifier: _min [40402,40406]"/>
  <match src="parameter [11025,11032]" dest="parameter [10422,10429]"/>
  <match src=",: , [27703,27704]" dest=",: , [33327,33328]"/>
  <match src="call_argument [19872,19878]" dest="call_argument [17197,17203]"/>
  <match src="expression_statement [38497,38525]" dest="expression_statement [44945,44973]"/>
  <match src="): ) [29556,29557]" dest="): ) [35180,35181]"/>
  <match src="(: ( [17076,17077]" dest="(: ( [14639,14640]"/>
  <match src="identifier: isContract [15213,15223]" dest="identifier: isContract [12973,12983]"/>
  <match src="function: function [13708,13716]" dest="function: function [7971,7979]"/>
  <match src="uint256: uint256 [29232,29239]" dest="uint256: uint256 [34856,34863]"/>
  <match src="else: else [20599,20603]" dest="else: else [20138,20142]"/>
  <match src="call_argument [26366,26376]" dest="call_argument [31990,32000]"/>
  <match src="bool: bool [2131,2135]" dest="bool: bool [22087,22091]"/>
  <match src="type_name [2013,2020]" dest="type_name [21969,21976]"/>
  <match src="identifier: _functionCallWithValue [19625,19647]" dest="identifier: _verifyCallResult [17404,17421]"/>
  <match src="(: ( [4655,4656]" dest="(: ( [24964,24965]"/>
  <match src="return_statement [8896,8914]" dest="return_statement [4262,4280]"/>
  <match src="identifier: spender [27079,27086]" dest="identifier: spender [32703,32710]"/>
  <match src="virtual: virtual [29257,29264]" dest="virtual: virtual [34881,34888]"/>
  <match src="type_name [24851,24858]" dest="type_name [30475,30482]"/>
  <match src="address: address [31087,31094]" dest="address: address [36711,36718]"/>
  <match src="identifier: amount [47358,47364]" dest="identifier: amount [52526,52532]"/>
  <match src="comment: // true reward allocation [1783,1808]" dest="comment: // true reward allocation [21739,21764]"/>
  <match src="identifier: TrueCurrencyWithLegacyAutosweep [47878,47909]" dest="identifier: TrueCurrencyWithProofOfReserve [54617,54647]"/>
  <match src="identifier: _beforeTokenTransfer [27933,27953]" dest="identifier: _beforeTokenTransfer [33557,33577]"/>
  <match src="=&gt;: =&gt; [2083,2085]" dest="=&gt;: =&gt; [22039,22041]"/>
  <match src="modifier_invocation [5349,5365]" dest="modifier_invocation [25662,25678]"/>
  <match src="primitive_type [5480,5487]" dest="primitive_type [25793,25800]"/>
  <match src="{: { [19515,19516]" dest="{: { [17075,17076]"/>
  <match src="(: ( [48328,48329]" dest="(: ( [55066,55067]"/>
  <match src="state_mutability [10080,10084]" dest="state_mutability [7553,7557]"/>
  <match src="call_argument [4518,4528]" dest="call_argument [24827,24837]"/>
  <match src="primitive_type [41108,41115]" dest="primitive_type [47556,47563]"/>
  <match src="parameter [23831,23838]" dest="parameter [29455,29462]"/>
  <match src="(: ( [29549,29550]" dest="(: ( [35173,35174]"/>
  <match src="identifier: errorMessage [11061,11073]" dest="identifier: errorMessage [10458,10470]"/>
  <match src="(: ( [26349,26350]" dest="(: ( [31973,31974]"/>
  <match src="primitive_type [40364,40371]" dest="primitive_type [46812,46819]"/>
  <match src="identifier: sender [33366,33372]" dest="identifier: sender [39562,39568]"/>
  <match src="member_expression [19534,19555]" dest="member_expression [17094,17115]"/>
  <match src="(: ( [39338,39339]" dest="(: ( [45786,45787]"/>
  <match src="return: return [41101,41107]" dest="return: return [47549,47555]"/>
  <match src="): ) [39275,39276]" dest="): ) [45723,45724]"/>
  <match src="(: ( [31993,31994]" dest="(: ( [37987,37988]"/>
  <match src="call_expression [27768,27838]" dest="call_expression [33392,33462]"/>
  <match src="parameter [13721,13730]" dest="parameter [7984,7993]"/>
  <match src="address: address [1428,1435]" dest="address: address [21384,21391]"/>
  <match src="identifier: returndata [20014,20024]" dest="identifier: returndata [17339,17349]"/>
  <match src="expression_statement [39072,39143]" dest="expression_statement [45520,45591]"/>
  <match src="identifier: totalSupply [23779,23790]" dest="identifier: totalSupply [29403,29414]"/>
  <match src="identifier: Transfer [29573,29581]" dest="identifier: Transfer [35197,35205]"/>
  <match src="(: ( [39377,39378]" dest="(: ( [45825,45826]"/>
  <match src="call_argument [38141,38155]" dest="call_argument [44580,44594]"/>
  <match src="return_statement [12415,12462]" dest="return_statement [18757,18842]"/>
  <match src="using: using [22613,22618]" dest="using: using [28237,28242]"/>
  <match src="call_expression [39372,39418]" dest="call_expression [45820,45866]"/>
  <match src="else: else [39431,39435]" dest="else: else [45879,45883]"/>
  <match src="&quot;: &quot; [19911,19912]" dest="&quot;: &quot; [17236,17237]"/>
  <match src="identifier: add [10045,10048]" dest="identifier: add [7518,7521]"/>
  <match src="identifier: ERC20 [31354,31359]" dest="identifier: ERC20 [37315,37320]"/>
  <match src=",: , [25599,25600]" dest=",: , [31223,31224]"/>
  <match src="primitive_type [46874,46881]" dest="primitive_type [49168,49175]"/>
  <match src=",: , [39102,39103]" dest=",: , [45550,45551]"/>
  <match src="return_type_definition [12386,12403]" dest="return_type_definition [9755,9772]"/>
  <match src="expression_statement [40492,40521]" dest="expression_statement [46940,46969]"/>
  <match src="uint256: uint256 [7980,7987]" dest="uint256: uint256 [2591,2598]"/>
  <match src=".: . [25694,25695]" dest=".: . [31318,31319]"/>
  <match src="): ) [25692,25693]" dest="): ) [31316,31317]"/>
  <match src="call_argument [29284,29305]" dest="call_argument [34908,34929]"/>
  <match src="{: { [36328,36329]" dest="{: { [42749,42750]"/>
  <match src="uint256: uint256 [33320,33327]" dest="uint256: uint256 [39507,39514]"/>
  <match src="visibility [22758,22764]" dest="visibility [28382,28388]"/>
  <match src="identifier: call [20035,20039]" dest="identifier: call [17360,17364]"/>
  <match src="identifier: a [10521,10522]" dest="identifier: a [12025,12026]"/>
  <match src="call_argument [4887,4913]" dest="call_argument [25196,25222]"/>
  <match src="identifier: isRedemptionAddress [37421,37440]" dest="identifier: isRedemptionAddress [43851,43870]"/>
  <match src="primitive_type [36335,36342]" dest="primitive_type [42756,42763]"/>
  <match src="{: { [18438,18439]" dest="{: { [15999,16000]"/>
  <match src="call_argument [38132,38139]" dest="call_argument [44571,44578]"/>
  <match src="return: return [23688,23694]" dest="return: return [29312,29318]"/>
  <match src="&quot;: &quot; [48367,48368]" dest="&quot;: &quot; [55105,55106]"/>
  <match src="address: address [29591,29598]" dest="address: address [35215,35222]"/>
  <match src="member_expression [29533,29549]" dest="member_expression [35157,35173]"/>
  <match src=",: , [18956,18957]" dest=",: , [16516,16517]"/>
  <match src="function_definition [5847,5915]" dest="function_definition [458,526]"/>
  <match src="uint256: uint256 [37942,37949]" dest="uint256: uint256 [44381,44388]"/>
  <match src="returns: returns [24599,24606]" dest="returns: returns [30223,30230]"/>
  <match src="boolean_literal [25769,25773]" dest="boolean_literal [31393,31397]"/>
  <match src="identifier: symbol_Deprecated [1194,1211]" dest="identifier: symbol_Deprecated [21150,21167]"/>
  <match src="event_paramater [36553,36571]" dest="event_paramater [42974,42992]"/>
  <match src="identifier: amount [24949,24955]" dest="identifier: amount [30573,30579]"/>
  <match src="assignment_expression [30312,30348]" dest="assignment_expression [35936,35972]"/>
  <match src=",: , [29396,29397]" dest=",: , [35020,35021]"/>
  <match src="array_access [38497,38513]" dest="array_access [44945,44961]"/>
  <match src="}: } [39511,39512]" dest="}: } [45959,45960]"/>
  <match src="call_argument [27794,27795]" dest="call_argument [33418,33419]"/>
  <match src="identifier: a [10960,10961]" dest="identifier: a [10357,10358]"/>
  <match src="identifier: amount [25612,25618]" dest="identifier: amount [31236,31242]"/>
  <match src="string_literal [40034,40079]" dest="string_literal [46482,46527]"/>
  <match src="view: view [23984,23988]" dest="view: view [29608,29612]"/>
  <match src="): ) [19912,19913]" dest="): ) [17237,17238]"/>
  <match src="function_definition [24817,24986]" dest="function_definition [30441,30610]"/>
  <match src="(: ( [27793,27794]" dest="(: ( [33417,33418]"/>
  <match src="parameter [19828,19840]" dest="parameter [19589,19601]"/>
  <match src="type_name [6181,6188]" dest="type_name [792,799]"/>
  <match src="call_argument [39328,39356]" dest="call_argument [45776,45804]"/>
  <match src="string_literal [19066,19109]" dest="string_literal [16626,16669]"/>
  <match src="address: address [1612,1619]" dest="address: address [21568,21575]"/>
  <match src="identifier: sender [4475,4481]" dest="identifier: sender [24784,24790]"/>
  <match src="identifier: balance [16862,16869]" dest="identifier: balance [14425,14432]"/>
  <match src="}: } [18090,18091]" dest="}: } [15651,15652]"/>
  <match src="identifier: account [34834,34841]" dest="identifier: account [41039,41046]"/>
  <match src="type_name [14358,14364]" dest="type_name [18103,18109]"/>
  <match src="identifier: finOps_Deprecated [1621,1638]" dest="identifier: finOps_Deprecated [21577,21594]"/>
  <match src="solidity_pragma_token [47647,47662]" dest="solidity_pragma_token [54264,54279]"/>
  <match src="]: ] [24059,24060]" dest="]: ] [29683,29684]"/>
  <match src="identifier: burnMin [34128,34135]" dest="identifier: burnMin [40333,40340]"/>
  <match src="uint256: uint256 [1261,1268]" dest="uint256: uint256 [21217,21224]"/>
  <match src="address: address [32575,32582]" dest="address: address [38762,38769]"/>
  <match src="}: } [11130,11131]" dest="}: } [10501,10502]"/>
  <match src="type_cast_expression [47539,47562]" dest="type_cast_expression [51786,51809]"/>
  <match src="=: = [28116,28117]" dest="=: = [33740,33741]"/>
  <match src="identifier: functionCall [18023,18035]" dest="identifier: functionCall [15584,15596]"/>
  <match src="identifier: account [37352,37359]" dest="identifier: account [43782,43789]"/>
  <match src="address: address [40347,40354]" dest="address: address [46795,46802]"/>
  <match src="uint256: uint256 [13766,13773]" dest="uint256: uint256 [8029,8036]"/>
  <match src="state_variable_declaration [36335,36366]" dest="state_variable_declaration [42756,42787]"/>
  <match src="override: override [40389,40397]" dest="override: override [46837,46845]"/>
  <match src="return_type_definition [41075,41089]" dest="return_type_definition [47523,47537]"/>
  <match src="function: function [37252,37260]" dest="function: function [43673,43681]"/>
  <match src="function_body [40398,40528]" dest="function_body [46846,46976]"/>
  <match src="address: address [26938,26945]" dest="address: address [32562,32569]"/>
  <match src="): ) [19546,19547]" dest="): ) [17106,17107]"/>
  <match src="type_name [1664,1691]" dest="type_name [21620,21647]"/>
  <match src="{: { [37923,37924]" dest="{: { [44362,44363]"/>
  <match src="parameter [19455,19481]" dest="parameter [17015,17041]"/>
  <match src="parameter [18958,18971]" dest="parameter [16518,16531]"/>
  <match src="assembly_statement [20426,20583]" dest="assembly_statement [19965,20122]"/>
  <match src="parameter [7274,7289]" dest="parameter [1885,1900]"/>
  <match src="virtual: virtual [23805,23812]" dest="virtual: virtual [29429,29436]"/>
  <match src="call_argument [37988,38053]" dest="call_argument [44427,44492]"/>
  <match src="returns: returns [13042,13049]" dest="returns: returns [11253,11260]"/>
  <match src="call_argument [18479,18485]" dest="call_argument [16039,16045]"/>
  <match src="override_specifier [24349,24357]" dest="override_specifier [29973,29981]"/>
  <match src="identifier: functionCallWithValue [19023,19044]" dest="identifier: functionCallWithValue [16583,16604]"/>
  <match src="returns: returns [6570,6577]" dest="returns: returns [1181,1188]"/>
  <match src="contract_body [766,3718]" dest="contract_body [20722,23845]"/>
  <match src="event_paramater [7938,7958]" dest="event_paramater [2549,2569]"/>
  <match src="function_definition [31057,31149]" dest="function_definition [36681,36773]"/>
  <match src="pure: pure [48114,48118]" dest="pure: pure [54852,54856]"/>
  <match src="address: address [1653,1660]" dest="address: address [21609,21616]"/>
  <match src="identifier: sender [38968,38974]" dest="identifier: sender [45416,45422]"/>
  <match src="identifier: burnMin [34627,34634]" dest="identifier: burnMin [40832,40839]"/>
  <match src="(: ( [24936,24937]" dest="(: ( [30560,30561]"/>
  <match src="call_expression [27065,27077]" dest="call_expression [32689,32701]"/>
  <match src="assignment_expression [5188,5211]" dest="assignment_expression [25499,25522]"/>
  <match src="override_specifier [48200,48208]" dest="override_specifier [54943,54951]"/>
  <match src="return: return [25762,25768]" dest="return: return [31386,31392]"/>
  <match src="{: { [31566,31567]" dest="{: { [37551,37552]"/>
  <match src="identifier: account [37553,37560]" dest="identifier: account [43983,43990]"/>
  <match src="true: true [42994,42998]" dest="true: true [54128,54132]"/>
  <match src="uint256: uint256 [34556,34563]" dest="uint256: uint256 [40761,40768]"/>
  <match src="=: = [10124,10125]" dest="=: = [7597,7598]"/>
  <match src="expression_statement [34153,34168]" dest="expression_statement [40358,40373]"/>
  <match src="}: } [23877,23878]" dest="}: } [29501,29502]"/>
  <match src="identifier: amount [40124,40130]" dest="identifier: amount [46572,46578]"/>
  <match src="type_name [47417,47424]" dest="type_name [52729,52736]"/>
  <match src="identifier: owner [30160,30165]" dest="identifier: owner [35784,35789]"/>
  <match src="call_argument [37337,37360]" dest="call_argument [43767,43790]"/>
  <match src="override: override [48306,48314]" dest="override: override [55049,55057]"/>
  <match src="}: } [30403,30404]" dest="}: } [36027,36028]"/>
  <match src="(: ( [16776,16777]" dest="(: ( [14339,14340]"/>
  <match src="): ) [31967,31968]" dest="): ) [37961,37962]"/>
  <match src="=&gt;: =&gt; [1609,1611]" dest="=&gt;: =&gt; [21565,21567]"/>
  <match src="return_type_definition [6206,6220]" dest="return_type_definition [817,831]"/>
  <match src="comment: /**      * @dev Check if neither account is blacklisted before performing transfer      * If transfer recipient is a redemption address, burns tokens      * @notice Transfer to redemption address will burn tokens with a 1 cent precision      * @param sender address of sender      * @param recipient address of recipient      * @param amount amount of tokens to transfer      */ [38540,38925]" dest="comment: /**      * @dev Check if neither account is blacklisted before performing transfer      * If transfer recipient is a redemption address, burns tokens      * @notice Transfer to redemption address will burn tokens with a 1 cent precision      * @param sender address of sender      * @param recipient address of recipient      * @param amount amount of tokens to transfer      */ [44988,45373]"/>
  <match src="type_name [1743,1750]" dest="type_name [21699,21706]"/>
  <match src="primitive_type [18378,18384]" dest="primitive_type [15939,15945]"/>
  <match src="): ) [38155,38156]" dest="): ) [44594,44595]"/>
  <match src="): ) [39354,39355]" dest="): ) [45802,45803]"/>
  <match src="parameter [34539,34554]" dest="parameter [40744,40759]"/>
  <match src="state_variable_declaration [2112,2152]" dest="state_variable_declaration [22068,22108]"/>
  <match src="identifier: globalPause_Deprecated [1023,1045]" dest="identifier: globalPause_Deprecated [20979,21001]"/>
  <match src="state_variable_declaration [1158,1181]" dest="state_variable_declaration [21114,21137]"/>
  <match src="uint256: uint256 [25517,25524]" dest="uint256: uint256 [31141,31148]"/>
  <match src="): ) [48006,48007]" dest="): ) [54744,54745]"/>
  <match src="function: function [37842,37850]" dest="function: function [44272,44280]"/>
  <match src="type_name [37866,37873]" dest="type_name [44296,44303]"/>
  <match src="parameter [34000,34012]" dest="parameter [40196,40208]"/>
  <match src="primitive_type [7671,7678]" dest="primitive_type [2282,2289]"/>
  <match src="function: function [33306,33314]" dest="function: function [39493,39501]"/>
  <match src="identifier: recipient [25506,25515]" dest="identifier: recipient [31130,31139]"/>
  <match src="(: ( [28672,28673]" dest="(: ( [34296,34297]"/>
  <match src="modifier_invocation [38476,38485]" dest="modifier_invocation [44924,44933]"/>
  <match src="call_expression [4879,4936]" dest="call_expression [25188,25245]"/>
  <match src="identifier: ROUNDING [48153,48161]" dest="identifier: ROUNDING [54891,54899]"/>
  <match src="identifier: _balances [29418,29427]" dest="identifier: _balances [35042,35051]"/>
  <match src="type_name [10094,10101]" dest="type_name [7567,7574]"/>
  <match src="identifier: Transfer [28166,28174]" dest="identifier: Transfer [33790,33798]"/>
  <match src="identifier: b [12429,12430]" dest="identifier: data [18793,18797]"/>
  <match src="if: if [20220,20222]" dest="if: if [19759,19761]"/>
  <match src="}: } [1930,1931]" dest="}: } [21886,21887]"/>
  <match src="primitive_type [39799,39806]" dest="primitive_type [46247,46254]"/>
  <match src="constant: constant [47958,47966]" dest="constant: constant [54696,54704]"/>
  <match src="visibility [23793,23799]" dest="visibility [29417,29423]"/>
  <match src="identifier: Blacklisted [38120,38131]" dest="identifier: Blacklisted [44559,44570]"/>
  <match src="function_body [11034,11131]" dest="function_body [10431,10502]"/>
  <match src="call_argument [39080,39102]" dest="call_argument [45528,45550]"/>
  <match src="(: ( [29581,29582]" dest="(: ( [35205,35206]"/>
  <match src="visibility [967,974]" dest="visibility [20923,20930]"/>
  <match src="(: ( [30159,30160]" dest="(: ( [35783,35784]"/>
  <match src="{: { [34598,34599]" dest="{: { [40803,40804]"/>
  <match src="virtual: virtual [24341,24348]" dest="virtual: virtual [29965,29972]"/>
  <match src="(: ( [27029,27030]" dest="(: ( [32653,32654]"/>
  <match src="&gt;: &gt; [13081,13082]" dest="&gt;: &gt; [11292,11293]"/>
  <match src="parameter [25482,25496]" dest="parameter [31106,31120]"/>
  <match src="call_expression [26339,26351]" dest="call_expression [31963,31975]"/>
  <match src="comment: /**      * @dev Atomically decreases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      * - `spender` must have allowance for the caller of at least      * `subtractedValue`.      */ [26416,26905]" dest="comment: /**      * @dev Atomically decreases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      * - `spender` must have allowance for the caller of at least      * `subtractedValue`.      */ [32040,32529]"/>
  <match src="identifier: spender [7282,7289]" dest="identifier: spender [1893,1900]"/>
  <match src="&quot;: &quot; [17055,17056]" dest="&quot;: &quot; [14618,14619]"/>
  <match src="(: ( [41043,41044]" dest="(: ( [47491,47492]"/>
  <match src="parameter [24318,24332]" dest="parameter [29942,29956]"/>
  <match src="call_argument [28183,28192]" dest="call_argument [33807,33816]"/>
  <match src="address: address [30091,30098]" dest="address: address [35715,35722]"/>
  <match src="): ) [13741,13742]" dest="): ) [8004,8005]"/>
  <match src="(: ( [20078,20079]" dest="(: ( [19617,19618]"/>
  <match src="return_statement [18449,18510]" dest="return_statement [16010,16070]"/>
  <match src="function_definition [38415,38532]" dest="function_definition [44854,44980]"/>
  <match src="payable: payable [16785,16792]" dest="payable: payable [14348,14355]"/>
  <match src="): ) [37448,37449]" dest="): ) [43878,43879]"/>
  <match src="function_definition [22742,22802]" dest="function_definition [28366,28426]"/>
  <match src="address: address [19534,19541]" dest="address: address [17094,17101]"/>
  <match src="&quot;: &quot; [43990,43991]" dest="&quot;: &quot; [51448,51449]"/>
  <match src="emit_statement [34178,34209]" dest="emit_statement [40383,40414]"/>
  <match src="function: function [10500,10508]" dest="function: function [12004,12012]"/>
  <match src="parameter [10060,10069]" dest="parameter [7533,7542]"/>
  <match src="expression_statement [13071,13100]" dest="expression_statement [11282,11311]"/>
  <match src="type_name [41044,41051]" dest="type_name [47492,47499]"/>
  <match src="variable_declaration [11085,11094]" dest="variable_declaration [5634,5643]"/>
  <match src="{: { [4012,4013]" dest="{: { [24321,24322]"/>
  <match src="{: { [41090,41091]" dest="{: { [47538,47539]"/>
  <match src="parameter [19501,19513]" dest="parameter [17061,17073]"/>
  <match src="parameter [7740,7744]" dest="parameter [2351,2355]"/>
  <match src="parameter [10513,10522]" dest="parameter [12017,12026]"/>
  <match src="type_name [27705,27712]" dest="type_name [33329,33336]"/>
  <match src="identifier: owner [6532,6537]" dest="identifier: owner [1143,1148]"/>
  <match src="uint256: uint256 [41155,41162]" dest="uint256: uint256 [47603,47610]"/>
  <match src="primitive_type [24553,24560]" dest="primitive_type [30177,30184]"/>
  <match src="function_body [4658,4731]" dest="function_body [24967,25040]"/>
  <match src="call_argument [29462,29468]" dest="call_argument [35086,35092]"/>
  <match src=",: , [5408,5409]" dest=",: , [25721,25722]"/>
  <match src=",: , [28675,28676]" dest=",: , [34299,34300]"/>
  <match src="identifier: require [39986,39993]" dest="identifier: require [46434,46441]"/>
  <match src="identifier: returndata [20224,20234]" dest="identifier: returndata [19763,19773]"/>
  <match src="): ) [8947,8948]" dest="): ) [4313,4314]"/>
  <match src="primitive_type [4518,4525]" dest="primitive_type [24827,24834]"/>
  <match src="): ) [20497,20498]" dest="): ) [20036,20037]"/>
  <match src="emit_statement [5377,5424]" dest="emit_statement [25690,25737]"/>
  <match src="if_statement [39242,39505]" dest="if_statement [45690,45953]"/>
  <match src="}: } [19117,19118]" dest="}: } [16677,16678]"/>
  <match src="return_type_definition [8859,8884]" dest="return_type_definition [4225,4250]"/>
  <match src="address: address [6539,6546]" dest="address: address [1150,1157]"/>
  <match src="string_literal [17086,17146]" dest="string_literal [14649,14709]"/>
  <match src="identifier: Mint [37548,37552]" dest="identifier: Mint [43978,43982]"/>
  <match src=",: , [34720,34721]" dest=",: , [40925,40926]"/>
  <match src="): ) [26315,26316]" dest="): ) [31939,31940]"/>
  <match src="for: for [22660,22663]" dest="for: for [28284,28287]"/>
  <match src="returns: returns [24358,24365]" dest="returns: returns [29982,29989]"/>
  <match src="identifier: msg [4887,4890]" dest="identifier: msg [25196,25199]"/>
  <match src="(: ( [25565,25566]" dest="(: ( [31189,31190]"/>
  <match src="comment: /**  * @dev Implementation of the {IERC20} interface.  *  * This implementation is agnostic to the way tokens are created. This means  * that a supply mechanism has to be added in a derived contract using {_mint}.  * For a generic mechanism see {ERC20PresetMinterPauser}.  *  * TIP: For a detailed writeup see our guide  * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How  * to implement supply mechanisms].  *  * We have followed general OpenZeppelin guidelines: functions revert instead  * of returning `false` on failure. This behavior is nonetheless conventional  * and does not conflict with the expectations of ERC20 applications.  *  * Additionally, an {Approval} event is emitted on calls to {transferFrom}.  * This allows applications to reconstruct the allowance for all accounts just  * by listening to said events. Other implementations of the EIP may not emit  * these events, as it isn't required by the specification.  *  * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}  * functions have been added to mitigate the well-known issues around setting  * allowances. See {IERC20-approve}.  */ [21358,22543]" dest="comment: /**  * @dev Implementation of the {IERC20} interface.  *  * This implementation is agnostic to the way tokens are created. This means  * that a supply mechanism has to be added in a derived contract using {_mint}.  * For a generic mechanism see {ERC20PresetMinterPauser}.  *  * TIP: For a detailed writeup see our guide  * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How  * to implement supply mechanisms].  *  * We have followed general OpenZeppelin guidelines: functions revert instead  * of returning `false` on failure. This behavior is nonetheless conventional  * and does not conflict with the expectations of ERC20 applications.  *  * Additionally, an {Approval} event is emitted on calls to {transferFrom}.  * This allows applications to reconstruct the allowance for all accounts just  * by listening to said events. Other implementations of the EIP may not emit  * these events, as it isn't required by the specification.  *  * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}  * functions have been added to mitigate the well-known issues around setting  * allowances. See {IERC20-approve}.  */ [26982,28167]"/>
  <match src="internal: internal [39871,39879]" dest="internal: internal [46319,46327]"/>
  <match src="uint256: uint256 [12978,12985]" dest="uint256: uint256 [11189,11196]"/>
  <match src="&quot;: &quot; [29505,29506]" dest="&quot;: &quot; [35129,35130]"/>
  <match src="identifier: amount [16812,16818]" dest="identifier: amount [14375,14381]"/>
  <match src="): ) [34771,34772]" dest="): ) [40976,40977]"/>
  <match src="}: } [34215,34216]" dest="}: } [40420,40421]"/>
  <match src="identifier: success [19992,19999]" dest="identifier: success [17317,17324]"/>
  <match src="virtual: virtual [31138,31145]" dest="virtual: virtual [36762,36769]"/>
  <match src="emit_statement [28818,28861]" dest="emit_statement [34442,34485]"/>
  <match src="identifier: RewardAllocation [1853,1869]" dest="identifier: RewardAllocation [21809,21825]"/>
  <match src="function_definition [23770,23878]" dest="function_definition [29394,29502]"/>
  <match src="memory: memory [48336,48342]" dest="memory: memory [55074,55080]"/>
  <match src="identifier: IERC20 [5616,5622]" dest="identifier: IERC20 [227,233]"/>
  <match src="[: [ [28104,28105]" dest="[: [ [33728,33729]"/>
  <match src="primitive_type [23960,23967]" dest="primitive_type [29584,29591]"/>
  <match src="(: ( [19500,19501]" dest="(: ( [17060,17061]"/>
  <match src="contract_declaration [31318,32018]" dest="contract_declaration [37279,38012]"/>
  <match src="string [34636,34683]" dest="string [40841,40888]"/>
  <match src="function_definition [37842,38164]" dest="function_definition [44272,44603]"/>
  <match src="override: override [24590,24598]" dest="override: override [30214,30222]"/>
  <match src="call_expression [37421,37449]" dest="call_expression [43851,43879]"/>
  <match src="): ) [28744,28745]" dest="): ) [34368,34369]"/>
  <match src="address: address [28832,28839]" dest="address: address [34456,34463]"/>
  <match src="): ) [7993,7994]" dest="): ) [2604,2605]"/>
  <match src="emit: emit [5377,5381]" dest="emit: emit [25690,25694]"/>
  <match src="=: = [47941,47942]" dest="=: = [54679,54680]"/>
  <match src="call_argument [24926,24938]" dest="call_argument [30550,30562]"/>
  <match src="emit_statement [28161,28202]" dest="emit_statement [33785,33826]"/>
  <match src="array_access [28756,28774]" dest="array_access [34380,34398]"/>
  <match src="primitive_type [1881,1888]" dest="primitive_type [21837,21844]"/>
  <match src="string: string [14358,14364]" dest="string: string [18103,18109]"/>
  <match src="parameter [16777,16802]" dest="parameter [14340,14365]"/>
  <match src="uint256: uint256 [10060,10067]" dest="uint256: uint256 [7533,7540]"/>
  <match src="return_statement [10201,10210]" dest="return_statement [7672,7681]"/>
  <match src="string_literal [34636,34683]" dest="string_literal [40841,40888]"/>
  <match src="}: } [5500,5501]" dest="}: } [25813,25814]"/>
  <match src="(: ( [20629,20630]" dest="(: ( [20168,20169]"/>
  <match src="identifier: transfer [31985,31993]" dest="identifier: transfer [37979,37987]"/>
  <match src="comment: /**      * @dev Set blacklisted status for the account.      * @param account address to set blacklist flag for      * @param _isBlacklisted blacklist flag value      *      * Requirements:      *      * - `msg.sender` should be owner.      */ [37585,37836]" dest="comment: /**      * @dev Set blacklisted status for the account.      * @param account address to set blacklist flag for      * @param _isBlacklisted blacklist flag value      *      * Requirements:      *      * - `msg.sender` should be owner.      */ [44015,44266]"/>
  <match src="parameter [24834,24849]" dest="parameter [30458,30473]"/>
  <match src="identifier: require [19853,19860]" dest="identifier: require [17178,17185]"/>
  <match src="[: [ [27064,27065]" dest="[: [ [32688,32689]"/>
  <match src="modifier_definition [4840,4956]" dest="modifier_definition [25149,25265]"/>
  <match src="array_access [25661,25680]" dest="array_access [31285,31304]"/>
  <match src="type_name [1937,1975]" dest="type_name [21893,21931]"/>
  <match src="public: public [23641,23647]" dest="public: public [29265,29271]"/>
  <match src="struct_member [1910,1924]" dest="struct_member [21866,21880]"/>
  <match src="identifier: account [28844,28851]" dest="identifier: account [34468,34475]"/>
  <match src="string_literal [28597,28630]" dest="string_literal [34221,34254]"/>
  <match src="string [28597,28630]" dest="string [34221,34254]"/>
  <match src="{: { [19842,19843]" dest="{: { [19603,19604]"/>
  <match src="=: = [5201,5202]" dest="=: = [25512,25513]"/>
  <match src="primitive_type [10524,10531]" dest="primitive_type [12028,12035]"/>
  <match src="): ) [15239,15240]" dest="): ) [12999,13000]"/>
  <match src="internal: internal [13743,13751]" dest="internal: internal [8006,8014]"/>
  <match src="identifier: data [20059,20063]" dest="identifier: data [17381,17385]"/>
  <match src="type_cast_expression [5480,5490]" dest="type_cast_expression [25793,25803]"/>
  <match src="call_argument [12432,12460]" dest="call_argument [18799,18840]"/>
  <match src="virtual: virtual [24874,24881]" dest="virtual: virtual [30498,30505]"/>
  <match src="string [40034,40079]" dest="string [46482,46527]"/>
  <match src="bool: bool [37883,37887]" dest="bool: bool [44313,44317]"/>
  <match src="internal: internal [12372,12380]" dest="internal: internal [9741,9749]"/>
  <match src="pure: pure [11011,11015]" dest="pure: pure [10408,10412]"/>
  <match src="block_statement [39436,39505]" dest="block_statement [45884,45953]"/>
  <match src="call_expression [24384,24426]" dest="call_expression [30008,30050]"/>
  <match src="else: else [20133,20137]" dest="else: else [19672,19676]"/>
  <match src="function_definition [6505,6588]" dest="function_definition [1116,1199]"/>
  <match src="parameter [45521,45544]" dest="parameter [48907,48927]"/>
</matches>
<actions>
  <move-tree tree="comment: /**  * @title ClamableOwnable  * @dev The ClamableOwnable contract is a copy of Claimable Contract by Zeppelin.  * and provides basic authorization control functions. Inherits storage layout of  * ProxyStorage.  */ [3749,3968]" parent="source_file [0,55117]" at="10"/>
  <move-tree tree="comment: /**  * @title TrueCurrency  * @dev TrueCurrency is an ERC20 with blacklist &amp; redemption addresses  *  * TrueCurrency is a compliant stablecoin with blacklist and redemption  * addresses. Only the owner can blacklist accounts. Redemption addresses  * are assigned automatically to the first 0x100000 addresses. Sending  * tokens to the redemption address will trigger a burn operation. Only  * the owner can mint or blacklist accounts.  *  * This contract is owned by the TokenController, which manages token  * minting &amp; admin functionality. See TokenController.sol  *  * See also: BurnableTokenWithBounds.sol  *  * ~~~~ Features ~~~~  *  * Redemption Addresses  * - The first 0x100000 addresses are redemption addresses  * - Tokens sent to redemption addresses are burned  * - Redemptions are tracked off-chain  * - Cannot mint tokens to redemption addresses  *  * Blacklist  * - Owner can blacklist accounts in accordance with local regulatory bodies  * - Only a court order will merit a blacklist; blacklisting is extremely rare  *  * Burn Bounds &amp; CanBurn  * - Owner can set min &amp; max burn amounts  * - Only accounts flagged in canBurn are allowed to burn tokens  * - canBurn prevents tokens from being sent to the incorrect address  *  * Reclaimer Token  * - ERC20 Tokens and Ether sent to this contract can be reclaimed by the owner  */ [34892,36268]" parent="source_file [0,55117]" at="11"/>
  <move-tree tree="comment: /**  * @title DelegateERC20  * Accept forwarding delegation calls from the old TrueUSD (V1) contract.  * This way the all the ERC20 functions in the old contract still works  * (except Burn).  *  * The original contract is at 0x8dd5fbCe2F6a956C3022bA3663759011Dd51e73E.  * Lines 497-574 on-chain call these delegate functions to forward calls  * This gives the delegate contract the power to change the state of the TrueUSD  * contract. The owner of this contract is the TrueUSD TokenController  * at 0x0000000000075efbee23fe2de1bd0b7690883cc9.  *  * Our audits for TrueCurrency can be found here: github.com/trusttoken/audits  */ [41218,41861]" parent="source_file [0,55117]" at="12"/>
  <move-tree tree="comment: /**  * @dev Contract that prevents addresses that were previously using autosweep addresses from  * making transfers on them.  *  * In older versions TrueCurrencies had a feature called Autosweep.  * Given a single deposit address, it was possible to generate 16^5-1 autosweep addresses.  * E.g. having deposit address 0xc257274276a4e539741ca11b590b9447b26a8051, you could generate  * - 0xc257274276a4e539741ca11b590b9447b2600000  * - 0xc257274276a4e539741ca11b590b9447b2600001  * - ...  * - 0xc257274276a4e539741ca11b590b9447b26fffff  * Every transfer to an autosweep address resulted as a transfer to deposit address.  * This feature got deprecated, but there were 4 addresses that still actively using the feature.  *  * This contract will reject a transfer to these 4*(16^5-1) addresses to prevent accidental token freeze.  */ [45899,46744]" parent="source_file [0,55117]" at="13"/>
  <move-tree tree="contract_declaration [744,3718]" parent="source_file [0,55117]" at="22"/>
  <move-tree tree="contract_declaration [3970,5501]" parent="source_file [0,55117]" at="22"/>
  <update-node tree="comment: /**  *Submitted for verification at Etherscan.io on 2020-09-25 */ [0,67]" label="// Dependency file: @openzeppelin/contracts/token/ERC20/IERC20.sol"/>
  <update-node tree="comment: /**  *  :::==== :::====  :::  === :::===== :::  === :::===  :::====  *  :::==== :::  === :::  === :::      :::  === :::     :::  ===  *    ===   =======  ===  === ======   ===  ===  =====  ===  ===  *    ===   === ===  ===  === ===      ===  ===     === ===  ===  *    ===   ===  ===  ======  ========  ======  ======  =======  */ [71,407]" label="// SPDX-License-Identifier: MIT"/>
  <update-node tree="comment: /**  * Defines the storage layout of the token implementation contract. Any  * newly declared state variables in future upgrades should be appended  * to the bottom. Never remove state variables from this list, however variables  * can be renamed. Please add _Deprecated to deprecated variables.  */ [438,742]" label="// pragma solidity &gt;=0.6.0 &lt;0.8.0;"/>
  <update-node tree="comment: /**  * @title ClamableOwnable  * @dev The ClamableOwnable contract is a copy of Claimable Contract by Zeppelin.  * and provides basic authorization control functions. Inherits storage layout of  * ProxyStorage.  */ [3749,3968]" label="// Dependency file: packages/contracts-por/contracts/interface/ITrueCurrency.sol"/>
  <update-node tree="comment: /**  * @title TrueCurrency  * @dev TrueCurrency is an ERC20 with blacklist &amp; redemption addresses  *  * TrueCurrency is a compliant stablecoin with blacklist and redemption  * addresses. Only the owner can blacklist accounts. Redemption addresses  * are assigned automatically to the first 0x100000 addresses. Sending  * tokens to the redemption address will trigger a burn operation. Only  * the owner can mint or blacklist accounts.  *  * This contract is owned by the TokenController, which manages token  * minting &amp; admin functionality. See TokenController.sol  *  * See also: BurnableTokenWithBounds.sol  *  * ~~~~ Features ~~~~  *  * Redemption Addresses  * - The first 0x100000 addresses are redemption addresses  * - Tokens sent to redemption addresses are burned  * - Redemptions are tracked off-chain  * - Cannot mint tokens to redemption addresses  *  * Blacklist  * - Owner can blacklist accounts in accordance with local regulatory bodies  * - Only a court order will merit a blacklist; blacklisting is extremely rare  *  * Burn Bounds &amp; CanBurn  * - Owner can set min &amp; max burn amounts  * - Only accounts flagged in canBurn are allowed to burn tokens  * - canBurn prevents tokens from being sent to the incorrect address  *  * Reclaimer Token  * - ERC20 Tokens and Ether sent to this contract can be reclaimed by the owner  */ [34892,36268]" label="// pragma solidity 0.6.10;"/>
  <update-node tree="comment: /**  * @title DelegateERC20  * Accept forwarding delegation calls from the old TrueUSD (V1) contract.  * This way the all the ERC20 functions in the old contract still works  * (except Burn).  *  * The original contract is at 0x8dd5fbCe2F6a956C3022bA3663759011Dd51e73E.  * Lines 497-574 on-chain call these delegate functions to forward calls  * This gives the delegate contract the power to change the state of the TrueUSD  * contract. The owner of this contract is the TrueUSD TokenController  * at 0x0000000000075efbee23fe2de1bd0b7690883cc9.  *  * Our audits for TrueCurrency can be found here: github.com/trusttoken/audits  */ [41218,41861]" label="// import {IERC20} from &quot;@openzeppelin/contracts/token/ERC20/IERC20.sol&quot;;"/>
  <insert-tree tree="interface_declaration [3049,3527]" parent="source_file [0,55117]" at="8"/>
  <update-node tree="comment: /**  * @dev Contract that prevents addresses that were previously using autosweep addresses from  * making transfers on them.  *  * In older versions TrueCurrencies had a feature called Autosweep.  * Given a single deposit address, it was possible to generate 16^5-1 autosweep addresses.  * E.g. having deposit address 0xc257274276a4e539741ca11b590b9447b26a8051, you could generate  * - 0xc257274276a4e539741ca11b590b9447b2600000  * - 0xc257274276a4e539741ca11b590b9447b2600001  * - ...  * - 0xc257274276a4e539741ca11b590b9447b26fffff  * Every transfer to an autosweep address resulted as a transfer to deposit address.  * This feature got deprecated, but there were 4 addresses that still actively using the feature.  *  * This contract will reject a transfer to these 4*(16^5-1) addresses to prevent accidental token freeze.  */ [45899,46744]" label="// Dependency file: @openzeppelin/contracts/utils/Context.sol"/>
  <insert-node tree="comment: // pragma solidity &gt;=0.6.0 &lt;0.8.0; [3600,3634]" parent="source_file [0,55117]" at="10"/>
  <insert-node tree="comment: // Dependency file: @openzeppelin/contracts/GSN/Context.sol [4537,4596]" parent="source_file [0,55117]" at="13"/>
  <insert-node tree="comment: // pragma solidity &gt;=0.6.0 &lt;0.8.0; [4602,4636]" parent="source_file [0,55117]" at="14"/>
  <insert-node tree="comment: // import &quot;@openzeppelin/contracts/utils/Context.sol&quot;; [4640,4694]" parent="source_file [0,55117]" at="15"/>
  <insert-node tree="comment: // Dependency file: @openzeppelin/contracts/math/SafeMath.sol [4700,4761]" parent="source_file [0,55117]" at="16"/>
  <insert-node tree="comment: // pragma solidity &gt;=0.6.0 &lt;0.8.0; [4767,4801]" parent="source_file [0,55117]" at="17"/>
  <insert-node tree="comment: // Dependency file: @openzeppelin/contracts/utils/Address.sol [12178,12239]" parent="source_file [0,55117]" at="20"/>
  <insert-node tree="comment: // pragma solidity &gt;=0.6.2 &lt;0.8.0; [12245,12279]" parent="source_file [0,55117]" at="21"/>
  <insert-node tree="comment: // Dependency file: packages/contracts-por/contracts/common/ProxyStorage.sol [20225,20301]" parent="source_file [0,55117]" at="24"/>
  <insert-node tree="comment: // pragma solidity 0.6.10; [20305,20331]" parent="source_file [0,55117]" at="25"/>
  <insert-node tree="comment: // solhint-disable max-states-count, var-name-mixedcase [20335,20390]" parent="source_file [0,55117]" at="26"/>
  <insert-node tree="comment: /**  * Defines the storage layout of the token implementation contract. Any  * newly declared state variables in future upgrades should be appended  * to the bottom. Never remove state variables from this list, however variables  * can be renamed. Please add _Deprecated to deprecated variables.  */ [20394,20698]" parent="source_file [0,55117]" at="27"/>
  <insert-node tree="comment: // Dependency file: packages/contracts-por/contracts/common/ClaimableOwnable.sol [23851,23931]" parent="source_file [0,55117]" at="29"/>
  <insert-node tree="comment: // pragma solidity 0.6.10; [23935,23961]" parent="source_file [0,55117]" at="30"/>
  <insert-node tree="comment: // import {ProxyStorage} from &quot;packages/contracts-por/contracts/common/ProxyStorage.sol&quot;; [23965,24054]" parent="source_file [0,55117]" at="31"/>
  <insert-node tree="comment: /**  * @title ClamableOwnable  * @dev The ClamableOwnable contract is a copy of Claimable Contract by Zeppelin.  * and provides basic authorization control functions. Inherits storage layout of  * ProxyStorage.  */ [24058,24277]" parent="source_file [0,55117]" at="32"/>
  <insert-node tree="comment: // Dependency file: packages/contracts-por/contracts/common/ERC20.sol [25820,25889]" parent="source_file [0,55117]" at="34"/>
  <insert-node tree="comment: // pragma solidity 0.6.10; [26542,26568]" parent="source_file [0,55117]" at="36"/>
  <insert-node tree="comment: // import {IERC20} from &quot;@openzeppelin/contracts/token/ERC20/IERC20.sol&quot;; [26572,26645]" parent="source_file [0,55117]" at="37"/>
  <insert-node tree="comment: // import {Context} from &quot;@openzeppelin/contracts/GSN/Context.sol&quot;; [26647,26714]" parent="source_file [0,55117]" at="38"/>
  <insert-node tree="comment: // import {SafeMath} from &quot;@openzeppelin/contracts/math/SafeMath.sol&quot;; [26716,26786]" parent="source_file [0,55117]" at="39"/>
  <insert-node tree="comment: // import {Address} from &quot;@openzeppelin/contracts/utils/Address.sol&quot;; [26788,26857]" parent="source_file [0,55117]" at="40"/>
  <insert-node tree="comment: // import {ClaimableOwnable} from &quot;packages/contracts-por/contracts/common/ClaimableOwnable.sol&quot;; [26861,26958]" parent="source_file [0,55117]" at="41"/>
  <insert-node tree="comment: // prettier-ignore [26962,26980]" parent="source_file [0,55117]" at="42"/>
  <insert-node tree="comment: // Dependency file: packages/contracts-por/contracts/common/ReclaimerToken.sol [36782,36860]" parent="source_file [0,55117]" at="45"/>
  <insert-node tree="comment: // pragma solidity 0.6.10; [36864,36890]" parent="source_file [0,55117]" at="46"/>
  <insert-node tree="comment: // import {IERC20} from &quot;@openzeppelin/contracts/token/ERC20/IERC20.sol&quot;; [36894,36967]" parent="source_file [0,55117]" at="47"/>
  <insert-node tree="comment: // import {ITrueCurrency} from &quot;packages/contracts-por/contracts/interface/ITrueCurrency.sol&quot;; [36969,37063]" parent="source_file [0,55117]" at="48"/>
  <insert-node tree="comment: // import {ERC20} from &quot;packages/contracts-por/contracts/common/ERC20.sol&quot;; [37065,37140]" parent="source_file [0,55117]" at="49"/>
  <insert-node tree="comment: // Dependency file: packages/contracts-por/contracts/common/BurnableTokenWithBounds.sol [38018,38105]" parent="source_file [0,55117]" at="52"/>
  <insert-node tree="comment: // pragma solidity 0.6.10; [38109,38135]" parent="source_file [0,55117]" at="53"/>
  <insert-node tree="comment: // import {ReclaimerToken} from &quot;packages/contracts-por/contracts/common/ReclaimerToken.sol&quot;; [38139,38232]" parent="source_file [0,55117]" at="54"/>
  <insert-node tree="comment: // Dependency file: packages/contracts-por/contracts/TrueCurrency.sol [41072,41141]" parent="source_file [0,55117]" at="57"/>
  <insert-node tree="comment: // pragma solidity 0.6.10; [41145,41171]" parent="source_file [0,55117]" at="58"/>
  <insert-node tree="comment: // import {BurnableTokenWithBounds} from &quot;packages/contracts-por/contracts/common/BurnableTokenWithBounds.sol&quot;; [41175,41286]" parent="source_file [0,55117]" at="59"/>
  <insert-node tree="comment: /**  * @title TrueCurrency  * @dev TrueCurrency is an ERC20 with blacklist &amp; redemption addresses  *  * TrueCurrency is a compliant stablecoin with blacklist and redemption  * addresses. Only the owner can blacklist accounts. Redemption addresses  * are assigned automatically to the first 0x100000 addresses. Sending  * tokens to the redemption address will trigger a burn operation. Only  * the owner can mint or blacklist accounts.  *  * This contract is owned by the TokenController, which manages token  * minting &amp; admin functionality. See TokenController.sol  *  * See also: BurnableTokenWithBounds.sol  *  * ~~~~ Features ~~~~  *  * Redemption Addresses  * - The first 0x100000 addresses except from address(0) are redemption addresses  * - Tokens sent to redemption addresses are burned  * - Redemptions are tracked off-chain  * - Cannot mint tokens to redemption addresses  *  * Blacklist  * - Owner can blacklist accounts in accordance with local regulatory bodies  * - Only a court order will merit a blacklist; blacklisting is extremely rare  *  * Burn Bounds &amp; CanBurn  * - Owner can set min &amp; max burn amounts  * - Only accounts flagged in canBurn are allowed to burn tokens  * - canBurn prevents tokens from being sent to the incorrect address  *  * Reclaimer Token  * - ERC20 Tokens and Ether sent to this contract can be reclaimed by the owner  */ [41290,42689]" parent="source_file [0,55117]" at="60"/>
  <insert-node tree="comment: // Dependency file: @chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol [47641,47727]" parent="source_file [0,55117]" at="62"/>
  <insert-node tree="comment: // pragma solidity &gt;=0.6.0; [47731,47758]" parent="source_file [0,55117]" at="63"/>
  <insert-node tree="interface_declaration [47762,48612]" parent="source_file [0,55117]" at="64"/>
  <insert-node tree="comment: // Dependency file: packages/contracts-por/contracts/interface/IProofOfReserveToken.sol [48618,48705]" parent="source_file [0,55117]" at="65"/>
  <insert-node tree="comment: // pragma solidity 0.6.10; [48709,48735]" parent="source_file [0,55117]" at="66"/>
  <insert-node tree="interface_declaration [48739,49628]" parent="source_file [0,55117]" at="67"/>
  <insert-node tree="comment: // Dependency file: packages/contracts-por/contracts/TrueCurrencyWithProofOfReserve.sol [49634,49721]" parent="source_file [0,55117]" at="68"/>
  <insert-node tree="comment: // pragma solidity 0.6.10; [49725,49751]" parent="source_file [0,55117]" at="69"/>
  <insert-node tree="comment: // import {TrueCurrency} from &quot;packages/contracts-por/contracts/TrueCurrency.sol&quot;; [49755,49837]" parent="source_file [0,55117]" at="70"/>
  <insert-node tree="comment: // import {AggregatorV3Interface} from &quot;@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol&quot;; [49839,49947]" parent="source_file [0,55117]" at="71"/>
  <insert-node tree="comment: // import {IProofOfReserveToken} from &quot;packages/contracts-por/contracts/interface/IProofOfReserveToken.sol&quot;; [49949,50057]" parent="source_file [0,55117]" at="72"/>
  <insert-node tree="comment: // import {SafeMath} from &quot;@openzeppelin/contracts/math/SafeMath.sol&quot;; [50059,50129]" parent="source_file [0,55117]" at="73"/>
  <insert-node tree="comment: /**  * @title TrueCurrencyWithProofOfReserve  * @dev TrueCurrencyWithProofOfReserve is an ERC20 with blacklist &amp; redemption addresses.  *  Please see TrueCurrency for the implementation that this contract inherits from.  *  This contract implements an additional check against a Proof-of-Reserves feed before  *  allowing tokens to be minted.  */ [50133,50485]" parent="source_file [0,55117]" at="74"/>
  <insert-node tree="contract_declaration [50487,54182]" parent="source_file [0,55117]" at="75"/>
  <insert-node tree="comment: // Root file: packages/contracts-por/contracts/tokens/TrueUSD.sol [54188,54253]" parent="source_file [0,55117]" at="76"/>
  <insert-node tree="comment: // import {TrueCurrencyWithProofOfReserve} from &quot;packages/contracts-por/contracts/TrueCurrencyWithProofOfReserve.sol&quot;; [54284,54402]" parent="source_file [0,55117]" at="78"/>
  <move-tree tree="comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      *      * - Addition cannot overflow.      */ [9797,10030]" parent="contract_body [5399,12172]" at="15"/>
  <move-tree tree="function_definition [10036,10217]" parent="contract_body [5399,12172]" at="15"/>
  <move-tree tree="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [10225,10494]" parent="contract_body [5399,12172]" at="15"/>
  <move-tree tree="function_definition [13708,13838]" parent="contract_body [5399,12172]" at="15"/>
  <move-tree tree="comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      *      * - Multiplication cannot overflow.      */ [11139,11384]" parent="contract_body [5399,12172]" at="15"/>
  <move-tree tree="function_definition [11390,11861]" parent="contract_body [5399,12172]" at="15"/>
  <move-tree tree="function_definition [10939,11131]" parent="contract_body [5399,12172]" at="16"/>
  <move-tree tree="function_definition [12965,13243]" parent="contract_body [5399,12172]" at="16"/>
  <move-tree tree="function_definition [10500,10636]" parent="contract_body [5399,12172]" at="16"/>
  <insert-node tree=",: , [37320,37321]" parent="contract_declaration [37279,38012]" at="5"/>
  <insert-tree tree="inheritance_specifier [37322,37335]" parent="contract_declaration [37279,38012]" at="6"/>
  <insert-node tree="interface: interface [47762,47771]" parent="interface_declaration [47762,48612]" at="0"/>
  <insert-node tree="identifier: AggregatorV3Interface [47772,47793]" parent="interface_declaration [47762,48612]" at="1"/>
  <insert-node tree="contract_body [47794,48612]" parent="interface_declaration [47762,48612]" at="2"/>
  <insert-node tree="interface: interface [48739,48748]" parent="interface_declaration [48739,49628]" at="0"/>
  <insert-node tree="identifier: IProofOfReserveToken [48749,48769]" parent="interface_declaration [48739,49628]" at="1"/>
  <insert-node tree="contract_body [48770,49628]" parent="interface_declaration [48739,49628]" at="2"/>
  <insert-node tree="abstract: abstract [50487,50495]" parent="contract_declaration [50487,54182]" at="0"/>
  <insert-node tree="contract: contract [50496,50504]" parent="contract_declaration [50487,54182]" at="1"/>
  <insert-node tree="identifier: TrueCurrencyWithProofOfReserve [50505,50535]" parent="contract_declaration [50487,54182]" at="2"/>
  <insert-node tree="is: is [50536,50538]" parent="contract_declaration [50487,54182]" at="3"/>
  <move-tree tree="inheritance_specifier [41898,41910]" parent="contract_declaration [50487,54182]" at="4"/>
  <insert-node tree=",: , [50551,50552]" parent="contract_declaration [50487,54182]" at="5"/>
  <insert-tree tree="inheritance_specifier [50553,50573]" parent="contract_declaration [50487,54182]" at="6"/>
  <insert-node tree="contract_body [50574,54182]" parent="contract_declaration [50487,54182]" at="7"/>
  <update-node tree="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [10644,10933]" label="/**      * @dev Returns the addition of two unsigned integers, with an overflow flag.      *      * _Available since v3.4._      */"/>
  <insert-node tree="function_definition [5547,5725]" parent="contract_body [5399,12172]" at="2"/>
  <update-node tree="comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [11869,12331]" label="/**      * @dev Returns the substraction of two unsigned integers, with an overflow flag.      *      * _Available since v3.4._      */"/>
  <insert-node tree="function_definition [5878,6032]" parent="contract_body [5399,12172]" at="4"/>
  <update-node tree="comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts with custom message on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [12477,12959]" label="/**      * @dev Returns the multiplication of two unsigned integers, with an overflow flag.      *      * _Available since v3.4._      */"/>
  <insert-node tree="function_definition [6187,6630]" parent="contract_body [5399,12172]" at="6"/>
  <update-node tree="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [13251,13702]" label="/**      * @dev Returns the division of two unsigned integers, with a division by zero flag.      *      * _Available since v3.4._      */"/>
  <insert-node tree="function_definition [6786,6941]" parent="contract_body [5399,12172]" at="8"/>
  <update-node tree="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts with custom message when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [13846,14317]" label="/**      * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.      *      * _Available since v3.4._      */"/>
  <insert-tree tree="function_definition [7107,7262]" parent="contract_body [5399,12172]" at="10"/>
  <insert-node tree="comment: /**      * @dev Returns the integer division of two unsigned integers, reverting on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [8616,9080]" parent="contract_body [5399,12172]" at="17"/>
  <insert-node tree="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * reverting when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [9247,9700]" parent="contract_body [5399,12172]" at="19"/>
  <insert-node tree="function_definition [9706,9857]" parent="contract_body [5399,12172]" at="20"/>
  <insert-node tree="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * CAUTION: This function is deprecated because it requires allocating memory for the error      * message unnecessarily. For custom revert reasons use {trySub}.      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [9865,10330]" parent="contract_body [5399,12172]" at="21"/>
  <insert-node tree="comment: /**      * @dev Returns the integer division of two unsigned integers, reverting with custom message on      * division by zero. The result is rounded towards zero.      *      * CAUTION: This function is deprecated because it requires allocating memory for the error      * message unnecessarily. For custom revert reasons use {tryDiv}.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [10510,11170]" parent="contract_body [5399,12172]" at="23"/>
  <insert-node tree="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * reverting with custom message when dividing by zero.      *      * CAUTION: This function is deprecated because it requires allocating memory for the error      * message unnecessarily. For custom revert reasons use {tryMod}.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [11349,11998]" parent="contract_body [5399,12172]" at="25"/>
  <insert-node tree="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but performing a static call.      *      * _Available since v3.3._      */ [17472,17643]" parent="contract_body [12370,20219]" at="13"/>
  <insert-node tree="function_definition [17649,17848]" parent="contract_body [12370,20219]" at="14"/>
  <insert-node tree="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],      * but performing a static call.      *      * _Available since v3.3._      */ [17856,18034]" parent="contract_body [12370,20219]" at="15"/>
  <insert-node tree="function_definition [18040,18462]" parent="contract_body [12370,20219]" at="16"/>
  <insert-node tree="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but performing a delegate call.      *      * _Available since v3.4._      */ [18470,18643]" parent="contract_body [12370,20219]" at="17"/>
  <move-tree tree="function_definition [12337,12469]" parent="contract_body [12370,20219]" at="18"/>
  <insert-node tree="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],      * but performing a delegate call.      *      * _Available since v3.4._      */ [18857,19037]" parent="contract_body [12370,20219]" at="19"/>
  <insert-tree tree="function_definition [19043,19466]" parent="contract_body [12370,20219]" at="20"/>
  <insert-node tree="comment: // Proof of Reserve feed related variables [22116,22158]" parent="contract_body [20722,23845]" at="31"/>
  <insert-node tree="state_variable_declaration [22164,22201]" parent="contract_body [20722,23845]" at="32"/>
  <insert-node tree="state_variable_declaration [22207,22239]" parent="contract_body [20722,23845]" at="33"/>
  <insert-node tree="state_variable_declaration [22245,22279]" parent="contract_body [20722,23845]" at="34"/>
  <insert-node tree="{: { [47794,47795]" parent="contract_body [47794,48612]" at="0"/>
  <insert-tree tree="function_definition [47801,47851]" parent="contract_body [47794,48612]" at="1"/>
  <insert-tree tree="function_definition [47855,47916]" parent="contract_body [47794,48612]" at="2"/>
  <move-tree tree="function_definition [42191,42291]" parent="contract_body [47794,48612]" at="3"/>
  <insert-node tree="comment: // getRoundData and latestRoundData should both raise &quot;No data present&quot; [47977,48048]" parent="contract_body [47794,48612]" at="4"/>
  <insert-node tree="comment: // if they do not have data to report, instead of returning unset values [48052,48124]" parent="contract_body [47794,48612]" at="5"/>
  <insert-node tree="comment: // which could be misinterpreted as actual reported values. [48128,48187]" parent="contract_body [47794,48612]" at="6"/>
  <insert-tree tree="function_definition [48191,48403]" parent="contract_body [47794,48612]" at="7"/>
  <insert-tree tree="function_definition [48407,48607]" parent="contract_body [47794,48612]" at="8"/>
  <insert-node tree="}: } [48611,48612]" parent="contract_body [47794,48612]" at="9"/>
  <insert-node tree="{: { [48770,48771]" parent="contract_body [48770,49628]" at="0"/>
  <insert-node tree="comment: /*** Admin Functions ***/ [48777,48802]" parent="contract_body [48770,49628]" at="1"/>
  <insert-node tree="function_definition [48810,48865]" parent="contract_body [48770,49628]" at="2"/>
  <insert-node tree="function_definition [48873,48938]" parent="contract_body [48770,49628]" at="3"/>
  <insert-tree tree="function_definition [48946,48987]" parent="contract_body [48770,49628]" at="4"/>
  <insert-tree tree="function_definition [48995,49037]" parent="contract_body [48770,49628]" at="5"/>
  <insert-node tree="comment: /*** Events ***/ [49045,49061]" parent="contract_body [48770,49628]" at="6"/>
  <insert-node tree="comment: /**      * @notice Event emitted when the feed is updated      */ [49069,49136]" parent="contract_body [48770,49628]" at="7"/>
  <insert-node tree="event_definition [49142,49202]" parent="contract_body [48770,49628]" at="8"/>
  <insert-node tree="comment: /**      * @notice Event emitted when the heartbeat of chain reserve feed is updated      */ [49210,49304]" parent="contract_body [48770,49628]" at="9"/>
  <insert-tree tree="event_definition [49310,49385]" parent="contract_body [48770,49628]" at="10"/>
  <insert-node tree="comment: /**      * @notice Event emitted when Proof of Reserve is enabled      */ [49393,49468]" parent="contract_body [48770,49628]" at="11"/>
  <insert-tree tree="event_definition [49474,49504]" parent="contract_body [48770,49628]" at="12"/>
  <insert-node tree="comment: /**      * @notice Event emitted when Proof of Reserve is disabled      */ [49512,49588]" parent="contract_body [48770,49628]" at="13"/>
  <insert-tree tree="event_definition [49594,49625]" parent="contract_body [48770,49628]" at="14"/>
  <insert-node tree="}: } [49627,49628]" parent="contract_body [48770,49628]" at="15"/>
  <insert-node tree="{: { [50574,50575]" parent="contract_body [50574,54182]" at="0"/>
  <insert-tree tree="using_directive [50581,50608]" parent="contract_body [50574,54182]" at="1"/>
  <insert-node tree="comment: /**      * @notice Overriden mint function that checks the specified proof-of-reserves feed to      * ensure that the total supply of this TrueCurrency is not greater than the reported      * reserves.      * @dev The proof-of-reserves check is bypassed if feed is not set.      * @param account The address to mint tokens to      * @param amount The amount of tokens to mint      */ [50616,51006]" parent="contract_body [50574,54182]" at="2"/>
  <insert-node tree="function_definition [51012,52541]" parent="contract_body [50574,54182]" at="3"/>
  <insert-node tree="comment: /**      * @notice Sets a new feed address      * @dev Admin function to set a new feed      * @param newFeed Address of the new feed      */ [52549,52694]" parent="contract_body [50574,54182]" at="4"/>
  <insert-node tree="function_definition [52700,53018]" parent="contract_body [50574,54182]" at="5"/>
  <insert-node tree="comment: /**      * @notice Sets the feed's heartbeat expectation      * @dev Admin function to set the heartbeat      * @param newHeartbeat Value of the age of the latest update from the feed      */ [53026,53221]" parent="contract_body [50574,54182]" at="6"/>
  <insert-node tree="function_definition [53227,53443]" parent="contract_body [50574,54182]" at="7"/>
  <insert-node tree="comment: /**      * @notice Disable Proof of Reserve check      * @dev Admin function to disable Proof of Reserve      */ [53451,53566]" parent="contract_body [50574,54182]" at="8"/>
  <insert-tree tree="function_definition [53572,53721]" parent="contract_body [50574,54182]" at="9"/>
  <insert-node tree="comment: /**      * @notice Enable Proof of Reserve check      * @dev Admin function to enable Proof of Reserve      */ [53729,53842]" parent="contract_body [50574,54182]" at="10"/>
  <insert-node tree="function_definition [53848,54179]" parent="contract_body [50574,54182]" at="11"/>
  <insert-node tree="}: } [54181,54182]" parent="contract_body [50574,54182]" at="12"/>
  <move-tree tree="override_specifier [48015,48023]" parent="function_definition [54726,54817]" at="6"/>
  <move-tree tree="override_specifier [48200,48208]" parent="function_definition [54915,55011]" at="6"/>
  <move-tree tree="override_specifier [48306,48314]" parent="function_definition [55019,55114]" at="6"/>
  <insert-node tree="function: function [5547,5555]" parent="function_definition [5547,5725]" at="0"/>
  <insert-node tree="identifier: tryAdd [5556,5562]" parent="function_definition [5547,5725]" at="1"/>
  <insert-node tree="(: ( [5562,5563]" parent="function_definition [5547,5725]" at="2"/>
  <insert-tree tree="parameter [5563,5572]" parent="function_definition [5547,5725]" at="3"/>
  <insert-node tree=",: , [5572,5573]" parent="function_definition [5547,5725]" at="4"/>
  <insert-tree tree="parameter [5574,5583]" parent="function_definition [5547,5725]" at="5"/>
  <insert-node tree="): ) [5583,5584]" parent="function_definition [5547,5725]" at="6"/>
  <move-tree tree="visibility [46924,46932]" parent="function_definition [5547,5725]" at="7"/>
  <move-tree tree="state_mutability [47469,47473]" parent="function_definition [5547,5725]" at="8"/>
  <insert-node tree="return_type_definition [5599,5622]" parent="function_definition [5547,5725]" at="9"/>
  <insert-node tree="function_body [5623,5725]" parent="function_definition [5547,5725]" at="10"/>
  <insert-node tree="function: function [5878,5886]" parent="function_definition [5878,6032]" at="0"/>
  <insert-node tree="identifier: trySub [5887,5893]" parent="function_definition [5878,6032]" at="1"/>
  <insert-node tree="(: ( [5893,5894]" parent="function_definition [5878,6032]" at="2"/>
  <insert-tree tree="parameter [5894,5903]" parent="function_definition [5878,6032]" at="3"/>
  <insert-node tree=",: , [5903,5904]" parent="function_definition [5878,6032]" at="4"/>
  <insert-tree tree="parameter [5905,5914]" parent="function_definition [5878,6032]" at="5"/>
  <insert-node tree="): ) [5914,5915]" parent="function_definition [5878,6032]" at="6"/>
  <insert-tree tree="visibility [5916,5924]" parent="function_definition [5878,6032]" at="7"/>
  <insert-tree tree="state_mutability [5925,5929]" parent="function_definition [5878,6032]" at="8"/>
  <insert-tree tree="return_type_definition [5930,5953]" parent="function_definition [5878,6032]" at="9"/>
  <insert-node tree="function_body [5954,6032]" parent="function_definition [5878,6032]" at="10"/>
  <insert-node tree="function: function [6187,6195]" parent="function_definition [6187,6630]" at="0"/>
  <insert-node tree="identifier: tryMul [6196,6202]" parent="function_definition [6187,6630]" at="1"/>
  <insert-node tree="(: ( [6202,6203]" parent="function_definition [6187,6630]" at="2"/>
  <insert-tree tree="parameter [6203,6212]" parent="function_definition [6187,6630]" at="3"/>
  <insert-node tree=",: , [6212,6213]" parent="function_definition [6187,6630]" at="4"/>
  <insert-tree tree="parameter [6214,6223]" parent="function_definition [6187,6630]" at="5"/>
  <insert-node tree="): ) [6223,6224]" parent="function_definition [6187,6630]" at="6"/>
  <insert-tree tree="visibility [6225,6233]" parent="function_definition [6187,6630]" at="7"/>
  <insert-tree tree="state_mutability [6234,6238]" parent="function_definition [6187,6630]" at="8"/>
  <insert-tree tree="return_type_definition [6239,6262]" parent="function_definition [6187,6630]" at="9"/>
  <insert-node tree="function_body [6263,6630]" parent="function_definition [6187,6630]" at="10"/>
  <insert-node tree="function: function [6786,6794]" parent="function_definition [6786,6941]" at="0"/>
  <insert-node tree="identifier: tryDiv [6795,6801]" parent="function_definition [6786,6941]" at="1"/>
  <insert-node tree="(: ( [6801,6802]" parent="function_definition [6786,6941]" at="2"/>
  <insert-tree tree="parameter [6802,6811]" parent="function_definition [6786,6941]" at="3"/>
  <insert-node tree=",: , [6811,6812]" parent="function_definition [6786,6941]" at="4"/>
  <insert-tree tree="parameter [6813,6822]" parent="function_definition [6786,6941]" at="5"/>
  <insert-node tree="): ) [6822,6823]" parent="function_definition [6786,6941]" at="6"/>
  <insert-tree tree="visibility [6824,6832]" parent="function_definition [6786,6941]" at="7"/>
  <insert-tree tree="state_mutability [6833,6837]" parent="function_definition [6786,6941]" at="8"/>
  <insert-tree tree="return_type_definition [6838,6861]" parent="function_definition [6786,6941]" at="9"/>
  <insert-node tree="function_body [6862,6941]" parent="function_definition [6786,6941]" at="10"/>
  <update-node tree="identifier: mod [13717,13720]" label="sub"/>
  <move-tree tree="function_body [10567,10636]" parent="function_definition [7971,8129]" at="10"/>
  <update-node tree="identifier: mod [14332,14335]" label="div"/>
  <insert-node tree="function_body [9153,9239]" parent="function_definition [9086,9239]" at="10"/>
  <insert-node tree="function: function [9706,9714]" parent="function_definition [9706,9857]" at="0"/>
  <insert-node tree="identifier: mod [9715,9718]" parent="function_definition [9706,9857]" at="1"/>
  <insert-node tree="(: ( [9718,9719]" parent="function_definition [9706,9857]" at="2"/>
  <move-tree tree="parameter [12350,12359]" parent="function_definition [9706,9857]" at="3"/>
  <insert-node tree=",: , [9728,9729]" parent="function_definition [9706,9857]" at="4"/>
  <move-tree tree="parameter [12361,12370]" parent="function_definition [9706,9857]" at="5"/>
  <insert-node tree="): ) [9739,9740]" parent="function_definition [9706,9857]" at="6"/>
  <move-tree tree="visibility [12372,12380]" parent="function_definition [9706,9857]" at="7"/>
  <move-tree tree="state_mutability [12381,12385]" parent="function_definition [9706,9857]" at="8"/>
  <move-tree tree="return_type_definition [12386,12403]" parent="function_definition [9706,9857]" at="9"/>
  <move-tree tree="function_body [14418,14489]" parent="function_definition [9706,9857]" at="10"/>
  <update-node tree="identifier: sub [10509,10512]" label="mod"/>
  <insert-node tree=",: , [12037,12038]" parent="function_definition [12004,12169]" at="6"/>
  <insert-tree tree="parameter [12039,12065]" parent="function_definition [12004,12169]" at="7"/>
  <insert-tree tree="function_body [12099,12169]" parent="function_definition [12004,12169]" at="12"/>
  <insert-node tree="function: function [17649,17657]" parent="function_definition [17649,17848]" at="0"/>
  <insert-node tree="identifier: functionStaticCall [17658,17676]" parent="function_definition [17649,17848]" at="1"/>
  <insert-node tree="(: ( [17676,17677]" parent="function_definition [17649,17848]" at="2"/>
  <move-tree tree="parameter [19730,19744]" parent="function_definition [17649,17848]" at="3"/>
  <insert-node tree=",: , [17691,17692]" parent="function_definition [17649,17848]" at="4"/>
  <move-tree tree="parameter [19746,19763]" parent="function_definition [17649,17848]" at="5"/>
  <insert-node tree="): ) [17710,17711]" parent="function_definition [17649,17848]" at="6"/>
  <insert-tree tree="visibility [17712,17720]" parent="function_definition [17649,17848]" at="7"/>
  <move-tree tree="state_mutability [43257,43261]" parent="function_definition [17649,17848]" at="8"/>
  <insert-tree tree="return_type_definition [17726,17748]" parent="function_definition [17649,17848]" at="9"/>
  <move-tree tree="function_body [13775,13838]" parent="function_definition [17649,17848]" at="10"/>
  <insert-node tree="function: function [18040,18048]" parent="function_definition [18040,18462]" at="0"/>
  <insert-node tree="identifier: functionStaticCall [18049,18067]" parent="function_definition [18040,18462]" at="1"/>
  <insert-node tree="(: ( [18067,18068]" parent="function_definition [18040,18462]" at="2"/>
  <insert-tree tree="parameter [18068,18082]" parent="function_definition [18040,18462]" at="3"/>
  <insert-node tree=",: , [18082,18083]" parent="function_definition [18040,18462]" at="4"/>
  <insert-tree tree="parameter [18084,18101]" parent="function_definition [18040,18462]" at="5"/>
  <insert-node tree=",: , [18101,18102]" parent="function_definition [18040,18462]" at="6"/>
  <move-tree tree="parameter [14358,14384]" parent="function_definition [18040,18462]" at="7"/>
  <insert-node tree="): ) [18129,18130]" parent="function_definition [18040,18462]" at="8"/>
  <insert-tree tree="visibility [18131,18139]" parent="function_definition [18040,18462]" at="9"/>
  <move-tree tree="state_mutability [42487,42491]" parent="function_definition [18040,18462]" at="10"/>
  <insert-tree tree="return_type_definition [18145,18167]" parent="function_definition [18040,18462]" at="11"/>
  <insert-node tree="function_body [18168,18462]" parent="function_definition [18040,18462]" at="12"/>
  <update-node tree="identifier: div [12346,12349]" label="functionDelegateCall"/>
  <insert-tree tree="parameter [18679,18693]" parent="function_definition [18649,18849]" at="3"/>
  <insert-tree tree="parameter [18695,18712]" parent="function_definition [18649,18849]" at="5"/>
  <insert-tree tree="visibility [18714,18722]" parent="function_definition [18649,18849]" at="7"/>
  <insert-tree tree="return_type_definition [18723,18745]" parent="function_definition [18649,18849]" at="8"/>
  <update-node tree="identifier: _functionCallWithValue [19707,19729]" label="_verifyCallResult"/>
  <insert-tree tree="parameter [19501,19513]" parent="function_definition [19474,20216]" at="3"/>
  <insert-tree tree="parameter [19515,19538]" parent="function_definition [19474,20216]" at="5"/>
  <insert-tree tree="state_mutability [19576,19580]" parent="function_definition [19474,20216]" at="10"/>
  <insert-tree tree="type_name [22164,22171]" parent="state_variable_declaration [22164,22201]" at="0"/>
  <move-tree tree="visibility [45581,45587]" parent="state_variable_declaration [22164,22201]" at="1"/>
  <insert-node tree="identifier: chainReserveHeartbeat [22179,22200]" parent="state_variable_declaration [22164,22201]" at="2"/>
  <move-tree tree="type_name [43737,43744]" parent="state_variable_declaration [22207,22239]" at="0"/>
  <move-tree tree="visibility [43763,43769]" parent="state_variable_declaration [22207,22239]" at="1"/>
  <insert-node tree="identifier: chainReserveFeed [22222,22238]" parent="state_variable_declaration [22207,22239]" at="2"/>
  <insert-tree tree="type_name [22245,22249]" parent="state_variable_declaration [22245,22279]" at="0"/>
  <move-tree tree="visibility [44929,44935]" parent="state_variable_declaration [22245,22279]" at="1"/>
  <insert-node tree="identifier: proofOfReserveEnabled [22257,22278]" parent="state_variable_declaration [22245,22279]" at="2"/>
  <insert-tree tree="override_specifier [37532,37540]" parent="function_definition [37480,37605]" at="6"/>
  <insert-tree tree="override_specifier [37884,37892]" parent="function_definition [37826,38009]" at="8"/>
  <insert-tree tree="override_specifier [39532,39540]" parent="function_definition [39493,39585]" at="6"/>
  <insert-tree tree="override_specifier [40233,40241]" parent="function_definition [40173,40421]" at="8"/>
  <insert-tree tree="override_specifier [43729,43737]" parent="function_definition [43673,44007]" at="8"/>
  <insert-tree tree="override_specifier [44343,44351]" parent="function_definition [44272,44603]" at="8"/>
  <insert-tree tree="override_specifier [44915,44923]" parent="function_definition [44854,44980]" at="8"/>
  <update-node tree="identifier: delegateTotalSupply [42200,42219]" label="version"/>
  <insert-node tree="function: function [48810,48818]" parent="function_definition [48810,48865]" at="0"/>
  <insert-node tree="identifier: setChainReserveFeed [48819,48838]" parent="function_definition [48810,48865]" at="1"/>
  <insert-node tree="(: ( [48838,48839]" parent="function_definition [48810,48865]" at="2"/>
  <move-tree tree="parameter [46849,46863]" parent="function_definition [48810,48865]" at="3"/>
  <insert-node tree="): ) [48854,48855]" parent="function_definition [48810,48865]" at="4"/>
  <insert-tree tree="visibility [48856,48864]" parent="function_definition [48810,48865]" at="5"/>
  <insert-node tree="function: function [48873,48881]" parent="function_definition [48873,48938]" at="0"/>
  <insert-node tree="identifier: setChainReserveHeartbeat [48882,48906]" parent="function_definition [48873,48938]" at="1"/>
  <insert-node tree="(: ( [48906,48907]" parent="function_definition [48873,48938]" at="2"/>
  <move-tree tree="parameter [45521,45544]" parent="function_definition [48873,48938]" at="3"/>
  <insert-node tree="): ) [48927,48928]" parent="function_definition [48873,48938]" at="4"/>
  <insert-tree tree="visibility [48929,48937]" parent="function_definition [48873,48938]" at="5"/>
  <insert-node tree="event: event [49142,49147]" parent="event_definition [49142,49202]" at="0"/>
  <insert-node tree="identifier: NewChainReserveFeed [49148,49167]" parent="event_definition [49142,49202]" at="1"/>
  <insert-node tree="(: ( [49167,49168]" parent="event_definition [49142,49202]" at="2"/>
  <insert-node tree="event_paramater [49168,49183]" parent="event_definition [49142,49202]" at="3"/>
  <insert-node tree=",: , [49183,49184]" parent="event_definition [49142,49202]" at="4"/>
  <insert-node tree="event_paramater [49185,49200]" parent="event_definition [49142,49202]" at="5"/>
  <insert-node tree="): ) [49200,49201]" parent="event_definition [49142,49202]" at="6"/>
  <insert-node tree="function: function [51012,51020]" parent="function_definition [51012,52541]" at="0"/>
  <insert-node tree="identifier: _mint [51021,51026]" parent="function_definition [51012,52541]" at="1"/>
  <insert-node tree="(: ( [51026,51027]" parent="function_definition [51012,52541]" at="2"/>
  <insert-tree tree="parameter [51027,51042]" parent="function_definition [51012,52541]" at="3"/>
  <insert-node tree=",: , [51042,51043]" parent="function_definition [51012,52541]" at="4"/>
  <move-tree tree="parameter [46902,46916]" parent="function_definition [51012,52541]" at="5"/>
  <insert-node tree="): ) [51058,51059]" parent="function_definition [51012,52541]" at="6"/>
  <move-tree tree="visibility [47460,47468]" parent="function_definition [51012,52541]" at="7"/>
  <insert-node tree="virtual: virtual [51069,51076]" parent="function_definition [51012,52541]" at="8"/>
  <move-tree tree="override_specifier [46933,46941]" parent="function_definition [51012,52541]" at="9"/>
  <insert-node tree="function_body [51086,52541]" parent="function_definition [51012,52541]" at="10"/>
  <insert-node tree="function: function [52700,52708]" parent="function_definition [52700,53018]" at="0"/>
  <insert-node tree="identifier: setChainReserveFeed [52709,52728]" parent="function_definition [52700,53018]" at="1"/>
  <insert-node tree="(: ( [52728,52729]" parent="function_definition [52700,53018]" at="2"/>
  <move-tree tree="parameter [47417,47434]" parent="function_definition [52700,53018]" at="3"/>
  <insert-node tree="): ) [52744,52745]" parent="function_definition [52700,53018]" at="4"/>
  <insert-tree tree="visibility [52746,52754]" parent="function_definition [52700,53018]" at="5"/>
  <insert-tree tree="override_specifier [52755,52763]" parent="function_definition [52700,53018]" at="6"/>
  <insert-tree tree="modifier_invocation [52764,52773]" parent="function_definition [52700,53018]" at="7"/>
  <insert-tree tree="function_body [52774,53018]" parent="function_definition [52700,53018]" at="8"/>
  <insert-node tree="function: function [53227,53235]" parent="function_definition [53227,53443]" at="0"/>
  <insert-node tree="identifier: setChainReserveHeartbeat [53236,53260]" parent="function_definition [53227,53443]" at="1"/>
  <insert-node tree="(: ( [53260,53261]" parent="function_definition [53227,53443]" at="2"/>
  <move-tree tree="parameter [44874,44892]" parent="function_definition [53227,53443]" at="3"/>
  <insert-node tree="): ) [53281,53282]" parent="function_definition [53227,53443]" at="4"/>
  <insert-tree tree="visibility [53283,53291]" parent="function_definition [53227,53443]" at="5"/>
  <insert-tree tree="override_specifier [53292,53300]" parent="function_definition [53227,53443]" at="6"/>
  <insert-tree tree="modifier_invocation [53301,53310]" parent="function_definition [53227,53443]" at="7"/>
  <insert-tree tree="function_body [53311,53443]" parent="function_definition [53227,53443]" at="8"/>
  <insert-node tree="function: function [53848,53856]" parent="function_definition [53848,54179]" at="0"/>
  <insert-node tree="identifier: enableProofOfReserve [53857,53877]" parent="function_definition [53848,54179]" at="1"/>
  <insert-node tree="(: ( [53877,53878]" parent="function_definition [53848,54179]" at="2"/>
  <insert-node tree="): ) [53878,53879]" parent="function_definition [53848,54179]" at="3"/>
  <insert-tree tree="visibility [53880,53888]" parent="function_definition [53848,54179]" at="4"/>
  <insert-tree tree="override_specifier [53889,53897]" parent="function_definition [53848,54179]" at="5"/>
  <insert-tree tree="modifier_invocation [53898,53907]" parent="function_definition [53848,54179]" at="6"/>
  <insert-node tree="function_body [53908,54179]" parent="function_definition [53848,54179]" at="7"/>
  <update-node tree="identifier: TrueCurrencyWithLegacyAutosweep [47878,47909]" label="TrueCurrencyWithProofOfReserve"/>
  <insert-node tree="returns: returns [5599,5606]" parent="return_type_definition [5599,5622]" at="0"/>
  <insert-node tree="(: ( [5607,5608]" parent="return_type_definition [5599,5622]" at="1"/>
  <insert-tree tree="parameter [5608,5612]" parent="return_type_definition [5599,5622]" at="2"/>
  <insert-node tree=",: , [5612,5613]" parent="return_type_definition [5599,5622]" at="3"/>
  <move-tree tree="parameter [19765,19781]" parent="return_type_definition [5599,5622]" at="4"/>
  <insert-node tree="): ) [5621,5622]" parent="return_type_definition [5599,5622]" at="5"/>
  <insert-node tree="{: { [5623,5624]" parent="function_body [5623,5725]" at="0"/>
  <move-tree tree="variable_declaration_statement [11085,11103]" parent="function_body [5623,5725]" at="1"/>
  <insert-tree tree="if_statement [5662,5691]" parent="function_body [5623,5725]" at="2"/>
  <move-tree tree="return_statement [45148,45160]" parent="function_body [5623,5725]" at="3"/>
  <insert-node tree="}: } [5724,5725]" parent="function_body [5623,5725]" at="4"/>
  <insert-node tree="{: { [5954,5955]" parent="function_body [5954,6032]" at="0"/>
  <insert-tree tree="if_statement [5965,5994]" parent="function_body [5954,6032]" at="1"/>
  <insert-node tree="return_statement [6004,6025]" parent="function_body [5954,6032]" at="2"/>
  <insert-node tree="}: } [6031,6032]" parent="function_body [5954,6032]" at="3"/>
  <insert-node tree="{: { [6263,6264]" parent="function_body [6263,6630]" at="0"/>
  <insert-node tree="comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [6274,6353]" parent="function_body [6263,6630]" at="1"/>
  <insert-node tree="comment: // benefit is lost if 'b' is also tested. [6363,6404]" parent="function_body [6263,6630]" at="2"/>
  <insert-node tree="comment: // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522 [6414,6485]" parent="function_body [6263,6630]" at="3"/>
  <insert-tree tree="if_statement [6495,6524]" parent="function_body [6263,6630]" at="4"/>
  <insert-tree tree="variable_declaration_statement [6534,6552]" parent="function_body [6263,6630]" at="5"/>
  <insert-tree tree="if_statement [6562,6596]" parent="function_body [6263,6630]" at="6"/>
  <move-tree tree="return_statement [44512,44524]" parent="function_body [6263,6630]" at="7"/>
  <insert-node tree="}: } [6629,6630]" parent="function_body [6263,6630]" at="8"/>
  <insert-node tree="{: { [6862,6863]" parent="function_body [6862,6941]" at="0"/>
  <insert-tree tree="if_statement [6873,6903]" parent="function_body [6862,6941]" at="1"/>
  <insert-node tree="return_statement [6913,6934]" parent="function_body [6862,6941]" at="2"/>
  <insert-node tree="}: } [6940,6941]" parent="function_body [6862,6941]" at="3"/>
  <insert-node tree="expression_statement [8049,8099]" parent="function_body [8038,8129]" at="1"/>
  <insert-node tree="{: { [9153,9154]" parent="function_body [9153,9239]" at="0"/>
  <insert-tree tree="expression_statement [9164,9209]" parent="function_body [9153,9239]" at="1"/>
  <insert-node tree="return_statement [9219,9232]" parent="function_body [9153,9239]" at="2"/>
  <insert-node tree="}: } [9238,9239]" parent="function_body [9153,9239]" at="3"/>
  <update-node tree="comment: // According to EIP-1052, 0x0 is the value returned for not-yet created accounts [15281,15361]" label="// This method relies on extcodesize, which returns 0 for contracts in"/>
  <update-node tree="comment: // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned [15371,15456]" label="// construction, since the code is only stored at the end of the"/>
  <update-node tree="comment: // for accounts without code, i.e. `keccak256('')` [15466,15516]" label="// constructor execution."/>
  <insert-tree tree="variable_declaration_statement [13232,13245]" parent="function_body [13030,13386]" at="4"/>
  <move-tree tree="expression_statement [19853,19914]" parent="function_body [17075,17464]" at="2"/>
  <insert-node tree="comment: // solhint-disable-next-line avoid-low-level-calls [17251,17301]" parent="function_body [17075,17464]" at="3"/>
  <move-tree tree="variable_declaration_statement [19986,20065]" parent="function_body [17075,17464]" at="4"/>
  <insert-node tree="{: { [18168,18169]" parent="function_body [18168,18462]" at="0"/>
  <insert-tree tree="expression_statement [18179,18247]" parent="function_body [18168,18462]" at="1"/>
  <insert-node tree="comment: // solhint-disable-next-line avoid-low-level-calls [18259,18309]" parent="function_body [18168,18462]" at="2"/>
  <insert-tree tree="variable_declaration_statement [18319,18385]" parent="function_body [18168,18462]" at="3"/>
  <insert-node tree="return_statement [18395,18455]" parent="function_body [18168,18462]" at="4"/>
  <insert-node tree="}: } [18461,18462]" parent="function_body [18168,18462]" at="5"/>
  <insert-node tree="external: external [25469,25477]" parent="visibility [25469,25477]" at="0"/>
  <insert-node tree="external: external [25653,25661]" parent="visibility [25653,25661]" at="0"/>
  <insert-node tree="external: external [47939,47947]" parent="visibility [47939,47947]" at="0"/>
  <update-node tree="identifier: sender [46857,46863]" label="newFeed"/>
  <update-node tree="identifier: subtractedValue [45529,45544]" label="newHeartbeat"/>
  <move-tree tree="type_name [46874,46881]" parent="event_paramater [49168,49183]" at="0"/>
  <insert-node tree="identifier: oldFeed [49176,49183]" parent="event_paramater [49168,49183]" at="1"/>
  <move-tree tree="type_name [47436,47443]" parent="event_paramater [49185,49200]" at="0"/>
  <insert-node tree="identifier: newFeed [49193,49200]" parent="event_paramater [49185,49200]" at="1"/>
  <insert-node tree="{: { [51086,51087]" parent="function_body [51086,52541]" at="0"/>
  <insert-tree tree="if_statement [51097,51235]" parent="function_body [51086,52541]" at="1"/>
  <insert-node tree="comment: // Get required info about decimals. [51245,51281]" parent="function_body [51086,52541]" at="2"/>
  <insert-node tree="comment: // Decimals of the Proof of Reserve feed must be the same as the token's. [51291,51364]" parent="function_body [51086,52541]" at="3"/>
  <insert-node tree="expression_statement [51374,51497]" parent="function_body [51086,52541]" at="4"/>
  <insert-node tree="comment: // Get latest proof-of-reserves from the feed [51509,51554]" parent="function_body [51086,52541]" at="5"/>
  <insert-tree tree="variable_declaration_statement [51564,51673]" parent="function_body [51086,52541]" at="6"/>
  <move-tree tree="expression_statement [45710,45836]" parent="function_body [51086,52541]" at="7"/>
  <insert-node tree="variable_declaration_statement [51767,51810]" parent="function_body [51086,52541]" at="8"/>
  <insert-node tree="comment: // Sanity check: is chainlink answer updatedAt in the past [51822,51880]" parent="function_body [51086,52541]" at="9"/>
  <insert-node tree="expression_statement [51890,51967]" parent="function_body [51086,52541]" at="10"/>
  <insert-node tree="comment: // Check the answer is fresh enough (i.e., within the specified heartbeat) [51979,52053]" parent="function_body [51086,52541]" at="11"/>
  <insert-tree tree="expression_statement [52063,52164]" parent="function_body [51086,52541]" at="12"/>
  <insert-node tree="comment: // Get required info about total supply. [52176,52216]" parent="function_body [51086,52541]" at="13"/>
  <insert-node tree="comment: // Check that after minting more tokens, the total supply would NOT exceed the reserves [52226,52313]" parent="function_body [51086,52541]" at="14"/>
  <insert-node tree="comment: // reported by the latest valid proof-of-reserves feed. [52323,52378]" parent="function_body [51086,52541]" at="15"/>
  <insert-node tree="expression_statement [52388,52495]" parent="function_body [51086,52541]" at="16"/>
  <insert-node tree="expression_statement [52505,52534]" parent="function_body [51086,52541]" at="17"/>
  <insert-node tree="}: } [52540,52541]" parent="function_body [51086,52541]" at="18"/>
  <update-node tree="identifier: recipient [47425,47434]" label="newFeed"/>
  <update-node tree="identifier: addedValue [44882,44892]" label="newHeartbeat"/>
  <insert-node tree="{: { [53908,53909]" parent="function_body [53908,54179]" at="0"/>
  <insert-tree tree="expression_statement [53919,54001]" parent="function_body [53908,54179]" at="1"/>
  <insert-tree tree="expression_statement [54011,54094]" parent="function_body [53908,54179]" at="2"/>
  <insert-node tree="expression_statement [54104,54133]" parent="function_body [53908,54179]" at="3"/>
  <insert-tree tree="emit_statement [54143,54172]" parent="function_body [53908,54179]" at="4"/>
  <insert-node tree="}: } [54178,54179]" parent="function_body [53908,54179]" at="5"/>
  <insert-tree tree="binary_expression [5646,5651]" parent="variable_declaration_statement [5634,5652]" at="2"/>
  <insert-node tree="tuple_expression [5708,5717]" parent="return_statement [5701,5718]" at="1"/>
  <insert-node tree="return: return [6004,6010]" parent="return_statement [6004,6025]" at="0"/>
  <insert-node tree="tuple_expression [6011,6024]" parent="return_statement [6004,6025]" at="1"/>
  <insert-node tree="tuple_expression [6613,6622]" parent="return_statement [6606,6623]" at="1"/>
  <insert-node tree="return: return [6913,6919]" parent="return_statement [6913,6934]" at="0"/>
  <insert-node tree="tuple_expression [6920,6933]" parent="return_statement [6913,6934]" at="1"/>
  <move-tree tree="call_expression [10585,10628]" parent="expression_statement [8049,8099]" at="0"/>
  <move-tree tree="binary_expression [11097,11102]" parent="return_statement [8109,8122]" at="1"/>
  <move-tree tree="return_statement [11716,11725]" parent="if_statement [8466,8487]" at="4"/>
  <insert-node tree="return: return [9219,9225]" parent="return_statement [9219,9232]" at="0"/>
  <move-tree tree="binary_expression [13122,13127]" parent="return_statement [9219,9232]" at="1"/>
  <insert-tree tree="binary_expression [10489,10494]" parent="return_statement [10482,10495]" at="1"/>
  <insert-tree tree="binary_expression [11328,11333]" parent="return_statement [11321,11334]" at="1"/>
  <insert-tree tree="binary_expression [13370,13378]" parent="return_statement [13363,13379]" at="1"/>
  <move-tree tree="call_argument [19662,19667]" parent="call_expression [17404,17456]" at="2"/>
  <insert-node tree="return: return [18395,18401]" parent="return_statement [18395,18455]" at="0"/>
  <insert-node tree="call_expression [18402,18454]" parent="return_statement [18395,18455]" at="1"/>
  <insert-node tree="call_expression [51374,51496]" parent="expression_statement [51374,51497]" at="0"/>
  <move-tree tree="call_expression [45740,45834]" parent="expression_statement [51683,51757]" at="0"/>
  <insert-tree tree="variable_declaration [51767,51783]" parent="variable_declaration_statement [51767,51810]" at="0"/>
  <insert-node tree="=: = [51784,51785]" parent="variable_declaration_statement [51767,51810]" at="1"/>
  <move-tree tree="type_cast_expression [47539,47562]" parent="variable_declaration_statement [51767,51810]" at="2"/>
  <insert-node tree="call_expression [51890,51966]" parent="expression_statement [51890,51967]" at="0"/>
  <insert-node tree="call_expression [52388,52494]" parent="expression_statement [52388,52495]" at="0"/>
  <insert-node tree="call_expression [52505,52533]" parent="expression_statement [52505,52534]" at="0"/>
  <insert-node tree="assignment_expression [54104,54132]" parent="expression_statement [54104,54133]" at="0"/>
  <insert-node tree="(: ( [5708,5709]" parent="tuple_expression [5708,5717]" at="0"/>
  <move-tree tree="boolean_literal [45155,45159]" parent="tuple_expression [5708,5717]" at="1"/>
  <insert-node tree=",: , [5713,5714]" parent="tuple_expression [5708,5717]" at="2"/>
  <insert-node tree="identifier: c [5715,5716]" parent="tuple_expression [5708,5717]" at="3"/>
  <insert-node tree="): ) [5716,5717]" parent="tuple_expression [5708,5717]" at="4"/>
  <insert-node tree="(: ( [6011,6012]" parent="tuple_expression [6011,6024]" at="0"/>
  <move-tree tree="boolean_literal [44052,44056]" parent="tuple_expression [6011,6024]" at="1"/>
  <insert-node tree=",: , [6016,6017]" parent="tuple_expression [6011,6024]" at="2"/>
  <insert-tree tree="binary_expression [6018,6023]" parent="tuple_expression [6011,6024]" at="3"/>
  <insert-node tree="): ) [6023,6024]" parent="tuple_expression [6011,6024]" at="4"/>
  <insert-node tree="(: ( [6613,6614]" parent="tuple_expression [6613,6622]" at="0"/>
  <move-tree tree="boolean_literal [44519,44523]" parent="tuple_expression [6613,6622]" at="1"/>
  <insert-node tree=",: , [6618,6619]" parent="tuple_expression [6613,6622]" at="2"/>
  <insert-node tree="identifier: c [6620,6621]" parent="tuple_expression [6613,6622]" at="3"/>
  <insert-node tree="): ) [6621,6622]" parent="tuple_expression [6613,6622]" at="4"/>
  <insert-node tree="(: ( [6920,6921]" parent="tuple_expression [6920,6933]" at="0"/>
  <move-tree tree="boolean_literal [45853,45857]" parent="tuple_expression [6920,6933]" at="1"/>
  <insert-node tree=",: , [6925,6926]" parent="tuple_expression [6920,6933]" at="2"/>
  <insert-tree tree="binary_expression [6927,6932]" parent="tuple_expression [6920,6933]" at="3"/>
  <insert-node tree="): ) [6932,6933]" parent="tuple_expression [6920,6933]" at="4"/>
  <update-node tree="identifier: sub [10585,10588]" label="require"/>
  <insert-tree tree="call_argument [8057,8063]" parent="call_expression [8049,8098]" at="2"/>
  <insert-tree tree="call_argument [9792,9797]" parent="call_expression [9784,9826]" at="2"/>
  <insert-tree tree="call_argument [9799,9825]" parent="call_expression [9784,9826]" at="4"/>
  <update-node tree="identifier: _functionCallWithValue [18456,18478]" label="functionCallWithValue"/>
  <update-node tree="identifier: _functionCallWithValue [19625,19647]" label="_verifyCallResult"/>
  <insert-tree tree="call_argument [17431,17441]" parent="call_expression [17404,17456]" at="4"/>
  <update-node tree="identifier: mod [13793,13796]" label="functionStaticCall"/>
  <move-tree tree="call_argument [19648,19654]" parent="call_expression [17767,17840]" at="2"/>
  <move-tree tree="call_argument [19656,19660]" parent="call_expression [17767,17840]" at="5"/>
  <insert-node tree="identifier: _verifyCallResult [18402,18419]" parent="call_expression [18402,18454]" at="0"/>
  <insert-node tree="(: ( [18419,18420]" parent="call_expression [18402,18454]" at="1"/>
  <insert-tree tree="call_argument [18420,18427]" parent="call_expression [18402,18454]" at="2"/>
  <insert-node tree=",: , [18427,18428]" parent="call_expression [18402,18454]" at="3"/>
  <insert-tree tree="call_argument [18429,18439]" parent="call_expression [18402,18454]" at="4"/>
  <insert-node tree=",: , [18439,18440]" parent="call_expression [18402,18454]" at="5"/>
  <move-tree tree="call_argument [14445,14457]" parent="call_expression [18402,18454]" at="6"/>
  <insert-node tree="): ) [18453,18454]" parent="call_expression [18402,18454]" at="7"/>
  <update-node tree="identifier: div [12422,12425]" label="functionDelegateCall"/>
  <insert-node tree="identifier: require [51374,51381]" parent="call_expression [51374,51496]" at="0"/>
  <insert-node tree="(: ( [51381,51382]" parent="call_expression [51374,51496]" at="1"/>
  <insert-tree tree="call_argument [51382,51446]" parent="call_expression [51374,51496]" at="2"/>
  <insert-node tree=",: , [51446,51447]" parent="call_expression [51374,51496]" at="3"/>
  <move-tree tree="call_argument [43990,44032]" parent="call_expression [51374,51496]" at="4"/>
  <insert-node tree="): ) [51495,51496]" parent="call_expression [51374,51496]" at="5"/>
  <insert-node tree="identifier: require [51683,51690]" parent="call_expression [51683,51756]" at="0"/>
  <insert-node tree="identifier: require [51890,51897]" parent="call_expression [51890,51966]" at="0"/>
  <insert-node tree="(: ( [51897,51898]" parent="call_expression [51890,51966]" at="1"/>
  <insert-tree tree="call_argument [51898,51926]" parent="call_expression [51890,51966]" at="2"/>
  <insert-node tree=",: , [51926,51927]" parent="call_expression [51890,51966]" at="3"/>
  <move-tree tree="call_argument [47601,47624]" parent="call_expression [51890,51966]" at="4"/>
  <insert-node tree="): ) [51965,51966]" parent="call_expression [51890,51966]" at="5"/>
  <insert-node tree="identifier: require [52388,52395]" parent="call_expression [52388,52494]" at="0"/>
  <insert-node tree="(: ( [52395,52396]" parent="call_expression [52388,52494]" at="1"/>
  <insert-node tree="call_argument [52396,52430]" parent="call_expression [52388,52494]" at="2"/>
  <insert-node tree=",: , [52430,52431]" parent="call_expression [52388,52494]" at="3"/>
  <insert-tree tree="call_argument [52432,52493]" parent="call_expression [52388,52494]" at="4"/>
  <insert-node tree="): ) [52493,52494]" parent="call_expression [52388,52494]" at="5"/>
  <insert-tree tree="member_expression [52505,52516]" parent="call_expression [52505,52533]" at="0"/>
  <insert-node tree="(: ( [52516,52517]" parent="call_expression [52505,52533]" at="1"/>
  <insert-tree tree="call_argument [52517,52524]" parent="call_expression [52505,52533]" at="2"/>
  <insert-node tree=",: , [52524,52525]" parent="call_expression [52505,52533]" at="3"/>
  <move-tree tree="call_argument [47358,47364]" parent="call_expression [52505,52533]" at="4"/>
  <insert-node tree="): ) [52532,52533]" parent="call_expression [52505,52533]" at="5"/>
  <insert-node tree="identifier: proofOfReserveEnabled [54104,54125]" parent="assignment_expression [54104,54132]" at="0"/>
  <insert-node tree="=: = [54126,54127]" parent="assignment_expression [54104,54132]" at="1"/>
  <move-tree tree="boolean_literal [42994,42998]" parent="assignment_expression [54104,54132]" at="2"/>
  <update-node tree="identifier: value [19662,19667]" label="success"/>
  <update-node tree="identifier: a [12426,12427]" label="target"/>
  <update-node tree="identifier: b [12429,12430]" label="data"/>
  <insert-tree tree="binary_expression [51691,51709]" parent="call_argument [51691,51709]" at="0"/>
  <update-node tree="identifier: depositAddress [47547,47561]" label="signedReserves"/>
  <insert-node tree="binary_expression [52396,52430]" parent="call_argument [52396,52430]" at="0"/>
  <update-node tree="identifier: codehash [15720,15728]" label="size"/>
  <insert-node tree="extcodesize: extcodesize [13331,13342]" parent="yul_evm_builtin [13331,13342]" at="0"/>
  <update-node tree="identifier: weiValue [20048,20056]" label="value"/>
  <insert-node tree="binary_expression [52396,52418]" parent="binary_expression [52396,52430]" at="0"/>
  <insert-node tree="&lt;=: &lt;= [52419,52421]" parent="binary_expression [52396,52430]" at="1"/>
  <insert-node tree="identifier: reserves [52422,52430]" parent="binary_expression [52396,52430]" at="2"/>
  <move-tree tree="call_expression [42270,42283]" parent="binary_expression [52396,52418]" at="0"/>
  <insert-node tree="+: + [52410,52411]" parent="binary_expression [52396,52418]" at="1"/>
  <insert-node tree="identifier: amount [52412,52418]" parent="binary_expression [52396,52418]" at="2"/>
  <delete-tree tree="pragma_directive [411,434]"/>
  <delete-tree tree="pragma_directive [3722,3745]"/>
  <delete-tree tree="pragma_directive [5505,5528]"/>
  <delete-tree tree="pragma_directive [8245,8268]"/>
  <delete-tree tree="pragma_directive [9169,9192]"/>
  <delete-node tree="identifier: weiValue [19773,19781]"/>
  <delete-tree tree="call_argument [10589,10590]"/>
  <delete-tree tree="call_argument [10592,10593]"/>
  <delete-node tree=",: , [10593,10594]"/>
  <delete-node tree="comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [11468,11547]"/>
  <delete-node tree="comment: // benefit is lost if 'b' is also tested. [11557,11598]"/>
  <delete-node tree="comment: // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522 [11608,11679]"/>
  <delete-node tree="{: { [11701,11702]"/>
  <delete-node tree="}: } [11735,11736]"/>
  <delete-node tree="block_statement [11701,11736]"/>
  <delete-node tree=",: , [14356,14357]"/>
  <delete-tree tree="call_argument [14437,14443]"/>
  <delete-node tree="identifier: c [11122,11123]"/>
  <delete-tree tree="variable_declaration [13110,13119]"/>
  <delete-node tree="=: = [13120,13121]"/>
  <delete-node tree="variable_declaration_statement [13110,13128]"/>
  <delete-node tree="comment: // assert(a == b * c + a % b); // There is no case in which this doesn't hold [13138,13215]"/>
  <delete-node tree="identifier: c [13234,13235]"/>
  <delete-tree tree="pragma_directive [14496,14519]"/>
  <delete-tree tree="variable_declaration_statement [15526,15543]"/>
  <delete-tree tree="variable_declaration_statement [15553,15642]"/>
  <delete-node tree="extcodehash: extcodehash [15732,15743]"/>
  <delete-tree tree="parenthesized_expression [15771,15815]"/>
  <delete-node tree=",: , [19667,19668]"/>
  <delete-tree tree="call_argument [13797,13798]"/>
  <delete-tree tree="call_argument [13800,13801]"/>
  <delete-node tree=",: , [19781,19782]"/>
  <delete-node tree="comment: // solhint-disable-next-line avoid-low-level-calls [19926,19976]"/>
  <delete-node tree="public: public [5160,5166]"/>
  <delete-node tree="public: public [5342,5348]"/>
  <delete-tree tree="pragma_directive [21331,21354]"/>
  <delete-tree tree="pragma_directive [31156,31179]"/>
  <delete-tree tree="pragma_directive [32022,32045]"/>
  <delete-tree tree="pragma_directive [34865,34888]"/>
  <delete-node tree="public: public [42222,42228]"/>
  <delete-node tree="{: { [42252,42253]"/>
  <delete-node tree="return: return [42263,42269]"/>
  <delete-node tree="return_statement [42263,42284]"/>
  <delete-node tree="}: } [42290,42291]"/>
  <delete-node tree="function_body [42252,42291]"/>
  <delete-tree tree="member_expression [45740,45776]"/>
  <delete-node tree="identifier: subtractedValue [45777,45792]"/>
  <delete-node tree="identifier: _approve [45710,45718]"/>
  <delete-node tree="(: ( [45718,45719]"/>
  <delete-tree tree="call_argument [45719,45729]"/>
  <delete-node tree=",: , [45729,45730]"/>
  <delete-tree tree="call_argument [45731,45738]"/>
  <delete-node tree=",: , [45738,45739]"/>
  <delete-node tree="call_argument [45740,45834]"/>
  <delete-node tree="): ) [45834,45835]"/>
  <delete-node tree="call_expression [45710,45835]"/>
  <delete-tree tree="pragma_directive [41191,41214]"/>
  <delete-node tree="abstract: abstract [41863,41871]"/>
  <delete-node tree="contract: contract [41872,41880]"/>
  <delete-node tree="identifier: DelegateERC20 [41881,41894]"/>
  <delete-node tree="is: is [41895,41897]"/>
  <delete-node tree="{: { [41911,41912]"/>
  <delete-node tree="comment: // require msg.sender is the delegate smart contract [41918,41970]"/>
  <delete-tree tree="modifier_definition [41976,42089]"/>
  <delete-node tree="comment: /**      * @dev Delegate call to get total supply      * @return Total supply      */ [42097,42185]"/>
  <delete-node tree="comment: /**      * @dev Delegate call to get balance      * @param who Address to get balance for      * @return balance of account      */ [42299,42434]"/>
  <delete-node tree="function: function [42440,42448]"/>
  <delete-node tree="identifier: delegateBalanceOf [42449,42466]"/>
  <delete-node tree="(: ( [42466,42467]"/>
  <delete-tree tree="parameter [42467,42478]"/>
  <delete-node tree="): ) [42478,42479]"/>
  <delete-tree tree="visibility [42480,42486]"/>
  <delete-tree tree="return_type_definition [42492,42509]"/>
  <delete-tree tree="function_body [42510,42550]"/>
  <delete-node tree="function_definition [42440,42550]"/>
  <delete-node tree="comment: /**      * @dev Delegate call to transfer      * @param to address to transfer to      * @param value amount to transfer      * @param origSender original msg.sender on delegate contract      * @return success      */ [42558,42781]"/>
  <delete-node tree="function: function [42787,42795]"/>
  <delete-node tree="identifier: delegateTransfer [42796,42812]"/>
  <delete-node tree="(: ( [42812,42813]"/>
  <delete-tree tree="parameter [42823,42833]"/>
  <delete-node tree=",: , [42833,42834]"/>
  <delete-tree tree="parameter [42844,42857]"/>
  <delete-node tree=",: , [42857,42858]"/>
  <delete-tree tree="parameter [42868,42886]"/>
  <delete-node tree="): ) [42892,42893]"/>
  <delete-tree tree="visibility [42894,42900]"/>
  <delete-tree tree="modifier_invocation [42901,42917]"/>
  <delete-tree tree="return_type_definition [42918,42932]"/>
  <delete-node tree="{: { [42933,42934]"/>
  <delete-tree tree="expression_statement [42944,42977]"/>
  <delete-node tree="return: return [42987,42993]"/>
  <delete-node tree="return_statement [42987,42999]"/>
  <delete-node tree="}: } [43005,43006]"/>
  <delete-node tree="function_body [42933,43006]"/>
  <delete-node tree="function_definition [42787,43006]"/>
  <delete-node tree="comment: /**      * @dev Delegate call to get allowance      * @param owner account owner      * @param spender account to check allowance for      * @return allowance      */ [43014,43185]"/>
  <delete-node tree="function: function [43191,43199]"/>
  <delete-node tree="identifier: delegateAllowance [43200,43217]"/>
  <delete-node tree="(: ( [43217,43218]"/>
  <delete-tree tree="parameter [43218,43231]"/>
  <delete-node tree=",: , [43231,43232]"/>
  <delete-tree tree="parameter [43233,43248]"/>
  <delete-node tree="): ) [43248,43249]"/>
  <delete-tree tree="visibility [43250,43256]"/>
  <delete-tree tree="return_type_definition [43262,43279]"/>
  <delete-tree tree="function_body [43280,43331]"/>
  <delete-node tree="function_definition [43191,43331]"/>
  <delete-node tree="comment: /**      * @dev Delegate call to transfer from      * @param from account to transfer funds from      * @param to account to transfer funds to      * @param value value to transfer      * @param origSender original msg.sender on delegate contract      * @return success      */ [43339,43623]"/>
  <delete-node tree="function: function [43629,43637]"/>
  <delete-node tree="identifier: delegateTransferFrom [43638,43658]"/>
  <delete-node tree="(: ( [43658,43659]"/>
  <delete-tree tree="parameter [43669,43681]"/>
  <delete-node tree=",: , [43681,43682]"/>
  <delete-tree tree="parameter [43692,43702]"/>
  <delete-node tree=",: , [43702,43703]"/>
  <delete-tree tree="parameter [43713,43726]"/>
  <delete-node tree=",: , [43726,43727]"/>
  <delete-node tree="identifier: origSender [43745,43755]"/>
  <delete-node tree="parameter [43737,43755]"/>
  <delete-node tree="): ) [43761,43762]"/>
  <delete-tree tree="modifier_invocation [43770,43786]"/>
  <delete-tree tree="return_type_definition [43787,43801]"/>
  <delete-node tree="{: { [43802,43803]"/>
  <delete-node tree="comment: // ERC20 transferFrom with _msgSender() replaced by origSender [43813,43875]"/>
  <delete-tree tree="expression_statement [43885,43912]"/>
  <delete-node tree="identifier: _approve [43922,43930]"/>
  <delete-node tree="(: ( [43930,43931]"/>
  <delete-tree tree="call_argument [43931,43935]"/>
  <delete-node tree=",: , [43935,43936]"/>
  <delete-tree tree="call_argument [43937,43947]"/>
  <delete-node tree=",: , [43947,43948]"/>
  <delete-tree tree="member_expression [43949,43982]"/>
  <delete-node tree="(: ( [43982,43983]"/>
  <delete-tree tree="call_argument [43983,43988]"/>
  <delete-node tree=",: , [43988,43989]"/>
  <delete-node tree="): ) [44032,44033]"/>
  <delete-node tree="call_expression [43949,44033]"/>
  <delete-node tree="call_argument [43949,44033]"/>
  <delete-node tree="): ) [44033,44034]"/>
  <delete-node tree="call_expression [43922,44034]"/>
  <delete-node tree="expression_statement [43922,44035]"/>
  <delete-node tree="return: return [44045,44051]"/>
  <delete-node tree="return_statement [44045,44057]"/>
  <delete-node tree="}: } [44063,44064]"/>
  <delete-node tree="function_body [43802,44064]"/>
  <delete-node tree="function_definition [43629,44064]"/>
  <delete-node tree="comment: /**      * @dev Delegate call to approve      * @param spender account to approve for      * @param value amount to approve      * @param origSender original msg.sender on delegate contract      * @return success      */ [44072,44298]"/>
  <delete-node tree="function: function [44304,44312]"/>
  <delete-node tree="identifier: delegateApprove [44313,44328]"/>
  <delete-node tree="(: ( [44328,44329]"/>
  <delete-tree tree="parameter [44339,44354]"/>
  <delete-node tree=",: , [44354,44355]"/>
  <delete-tree tree="parameter [44365,44378]"/>
  <delete-node tree=",: , [44378,44379]"/>
  <delete-tree tree="parameter [44389,44407]"/>
  <delete-node tree="): ) [44413,44414]"/>
  <delete-tree tree="visibility [44415,44421]"/>
  <delete-tree tree="modifier_invocation [44422,44438]"/>
  <delete-tree tree="return_type_definition [44439,44453]"/>
  <delete-node tree="{: { [44454,44455]"/>
  <delete-tree tree="expression_statement [44465,44502]"/>
  <delete-node tree="}: } [44530,44531]"/>
  <delete-node tree="function_body [44454,44531]"/>
  <delete-node tree="function_definition [44304,44531]"/>
  <delete-node tree="comment: /**      * @dev Delegate call to increase approval      * @param spender account to increase approval for      * @param addedValue amount of approval to add      * @param origSender original msg.sender on delegate contract      * @return success      */ [44539,44798]"/>
  <delete-node tree="function: function [44804,44812]"/>
  <delete-node tree="identifier: delegateIncreaseApproval [44813,44837]"/>
  <delete-node tree="(: ( [44837,44838]"/>
  <delete-tree tree="parameter [44848,44863]"/>
  <delete-node tree=",: , [44863,44864]"/>
  <delete-node tree=",: , [44892,44893]"/>
  <delete-tree tree="parameter [44903,44921]"/>
  <delete-node tree="): ) [44927,44928]"/>
  <delete-tree tree="modifier_invocation [44936,44952]"/>
  <delete-tree tree="return_type_definition [44953,44967]"/>
  <delete-node tree="{: { [44968,44969]"/>
  <delete-node tree="comment: // ERC20 increaseAllowance() with _msgSender() replaced by origSender [44979,45048]"/>
  <delete-tree tree="expression_statement [45058,45138]"/>
  <delete-node tree="}: } [45166,45167]"/>
  <delete-node tree="function_body [44968,45167]"/>
  <delete-node tree="function_definition [44804,45167]"/>
  <delete-node tree="comment: /**      * @dev Delegate call to decrease approval      * @param spender spender to decrease approval for      * @param subtractedValue value to subtract from approval      * @param origSender original msg.sender on delegate contract      * @return success      */ [45175,45445]"/>
  <delete-node tree="function: function [45451,45459]"/>
  <delete-node tree="identifier: delegateDecreaseApproval [45460,45484]"/>
  <delete-node tree="(: ( [45484,45485]"/>
  <delete-tree tree="parameter [45495,45510]"/>
  <delete-node tree=",: , [45510,45511]"/>
  <delete-node tree=",: , [45544,45545]"/>
  <delete-tree tree="parameter [45555,45573]"/>
  <delete-node tree="): ) [45579,45580]"/>
  <delete-tree tree="modifier_invocation [45588,45604]"/>
  <delete-tree tree="return_type_definition [45605,45619]"/>
  <delete-node tree="{: { [45620,45621]"/>
  <delete-node tree="comment: // ERC20 decreaseAllowance() with _msgSender() replaced by origSender [45631,45700]"/>
  <delete-node tree="return: return [45846,45852]"/>
  <delete-node tree="return_statement [45846,45858]"/>
  <delete-node tree="}: } [45864,45865]"/>
  <delete-node tree="function_body [45620,45865]"/>
  <delete-node tree="function_definition [45451,45865]"/>
  <delete-node tree="}: } [45867,45868]"/>
  <delete-node tree="contract_body [41911,45868]"/>
  <delete-node tree="contract_declaration [41863,45868]"/>
  <delete-tree tree="pragma_directive [45872,45895]"/>
  <delete-node tree="abstract: abstract [46746,46754]"/>
  <delete-node tree="contract: contract [46755,46763]"/>
  <delete-node tree="identifier: TrueCurrencyWithLegacyAutosweep [46764,46795]"/>
  <delete-node tree="is: is [46796,46798]"/>
  <delete-tree tree="inheritance_specifier [46799,46812]"/>
  <delete-node tree="{: { [46813,46814]"/>
  <delete-node tree="function: function [46820,46828]"/>
  <delete-node tree="identifier: _transfer [46829,46838]"/>
  <delete-node tree="(: ( [46838,46839]"/>
  <delete-node tree=",: , [46863,46864]"/>
  <delete-node tree="identifier: recipient [46882,46891]"/>
  <delete-node tree="parameter [46874,46891]"/>
  <delete-node tree=",: , [46891,46892]"/>
  <delete-node tree="): ) [46922,46923]"/>
  <delete-node tree="{: { [46942,46943]"/>
  <delete-tree tree="expression_statement [46953,47035]"/>
  <delete-tree tree="expression_statement [47045,47127]"/>
  <delete-tree tree="expression_statement [47137,47219]"/>
  <delete-tree tree="expression_statement [47229,47311]"/>
  <delete-tree tree="member_expression [47323,47338]"/>
  <delete-node tree="(: ( [47338,47339]"/>
  <delete-tree tree="call_argument [47339,47345]"/>
  <delete-node tree=",: , [47345,47346]"/>
  <delete-tree tree="call_argument [47347,47356]"/>
  <delete-node tree=",: , [47356,47357]"/>
  <delete-node tree="): ) [47364,47365]"/>
  <delete-node tree="call_expression [47323,47365]"/>
  <delete-node tree="expression_statement [47323,47366]"/>
  <delete-node tree="}: } [47372,47373]"/>
  <delete-node tree="function_body [46942,47373]"/>
  <delete-node tree="function_definition [46820,47373]"/>
  <delete-node tree="function: function [47381,47389]"/>
  <delete-node tree="identifier: requireNotAutosweepAddress [47390,47416]"/>
  <delete-node tree="(: ( [47416,47417]"/>
  <delete-node tree=",: , [47434,47435]"/>
  <delete-node tree="identifier: depositAddress [47444,47458]"/>
  <delete-node tree="parameter [47436,47458]"/>
  <delete-node tree="): ) [47458,47459]"/>
  <delete-node tree="{: { [47474,47475]"/>
  <delete-node tree="return: return [47485,47491]"/>
  <delete-node tree="identifier: require [47503,47510]"/>
  <delete-node tree="(: ( [47510,47511]"/>
  <delete-tree tree="binary_expression [47511,47535]"/>
  <delete-node tree="!=: != [47536,47538]"/>
  <delete-node tree="&gt;&gt;: &gt;&gt; [47563,47565]"/>
  <delete-node tree="number_literal: 20 [47566,47568]"/>
  <delete-node tree="binary_expression [47539,47568]"/>
  <delete-node tree="binary_expression [47511,47568]"/>
  <delete-node tree="||: || [47569,47571]"/>
  <delete-tree tree="binary_expression [47572,47599]"/>
  <delete-node tree="binary_expression [47511,47599]"/>
  <delete-node tree="call_argument [47511,47599]"/>
  <delete-node tree=",: , [47599,47600]"/>
  <delete-node tree="): ) [47624,47625]"/>
  <delete-node tree="call_expression [47503,47625]"/>
  <delete-node tree="return_statement [47485,47626]"/>
  <delete-node tree="}: } [47632,47633]"/>
  <delete-node tree="function_body [47474,47633]"/>
  <delete-node tree="function_definition [47381,47633]"/>
  <delete-node tree="}: } [47635,47636]"/>
  <delete-node tree="contract_body [46813,47636]"/>
  <delete-node tree="contract_declaration [46746,47636]"/>
</actions>
