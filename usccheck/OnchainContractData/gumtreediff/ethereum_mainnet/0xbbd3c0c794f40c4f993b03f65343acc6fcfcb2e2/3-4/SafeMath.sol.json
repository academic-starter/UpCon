{
  "matches": [
    {
      "src": "binary_expression [1562,1567]",
      "dest": "binary_expression [1562,1567]"
    },
    {
      "src": "type_name [278,285]",
      "dest": "type_name [278,285]"
    },
    {
      "src": "}: } [603,604]",
      "dest": "}: } [603,604]"
    },
    {
      "src": "<=: <= [1332,1334]",
      "dest": "<=: <= [1332,1334]"
    },
    {
      "src": "uint256: uint256 [840,847]",
      "dest": "uint256: uint256 [840,847]"
    },
    {
      "src": "return: return [1097,1103]",
      "dest": "return: return [1097,1103]"
    },
    {
      "src": "(: ( [1257,1258]",
      "dest": "(: ( [1257,1258]"
    },
    {
      "src": "binary_expression [626,631]",
      "dest": "binary_expression [626,631]"
    },
    {
      "src": "function: function [816,824]",
      "dest": "function: function [816,824]"
    },
    {
      "src": "==: == [655,657]",
      "dest": "==: == [655,657]"
    },
    {
      "src": "primitive_type [829,836]",
      "dest": "primitive_type [829,836]"
    },
    {
      "src": "(: ( [1302,1303]",
      "dest": "(: ( [1302,1303]"
    },
    {
      "src": "function_definition [1245,1390]",
      "dest": "function_definition [1245,1390]"
    },
    {
      "src": "comment: /**      * @dev Multiplies two unsigned integers, reverts on overflow.      */ [182,260]",
      "dest": "comment: /**      * @dev Multiplies two unsigned integers, reverts on overflow.      */ [182,260]"
    },
    {
      "src": "comment: // benefit is lost if 'b' is also tested. [430,471]",
      "dest": "comment: // benefit is lost if 'b' is also tested. [430,471]"
    },
    {
      "src": "): ) [659,660]",
      "dest": "): ) [659,660]"
    },
    {
      "src": "call_expression [1322,1337]",
      "dest": "call_expression [1322,1337]"
    },
    {
      "src": "parameter [840,849]",
      "dest": "parameter [840,849]"
    },
    {
      "src": "uint256: uint256 [983,990]",
      "dest": "uint256: uint256 [983,990]"
    },
    {
      "src": "(: ( [1530,1531]",
      "dest": "(: ( [1530,1531]"
    },
    {
      "src": "parameter [1258,1267]",
      "dest": "parameter [1258,1267]"
    },
    {
      "src": "type_name [1797,1804]",
      "dest": "type_name [1797,1804]"
    },
    {
      "src": "identifier: c [649,650]",
      "dest": "identifier: c [649,650]"
    },
    {
      "src": "type_name [1550,1557]",
      "dest": "type_name [1550,1557]"
    },
    {
      "src": "type_name [289,296]",
      "dest": "type_name [289,296]"
    },
    {
      "src": "type_name [1303,1310]",
      "dest": "type_name [1303,1310]"
    },
    {
      "src": "comment: // SPDX-License-Identifier: MIT [0,31]",
      "dest": "comment: // SPDX-License-Identifier: MIT [0,31]"
    },
    {
      "src": "function: function [1773,1781]",
      "dest": "function: function [1773,1781]"
    },
    {
      "src": "uint256: uint256 [1486,1493]",
      "dest": "uint256: uint256 [1486,1493]"
    },
    {
      "src": "(: ( [966,967]",
      "dest": "(: ( [966,967]"
    },
    {
      "src": "type_name [1269,1276]",
      "dest": "type_name [1269,1276]"
    },
    {
      "src": "parameter [1486,1495]",
      "dest": "parameter [1486,1495]"
    },
    {
      "src": "): ) [1864,1865]",
      "dest": "): ) [1864,1865]"
    },
    {
      "src": "(: ( [873,874]",
      "dest": "(: ( [873,874]"
    },
    {
      "src": "return_type_definition [1294,1311]",
      "dest": "return_type_definition [1294,1311]"
    },
    {
      "src": "primitive_type [323,330]",
      "dest": "primitive_type [323,330]"
    },
    {
      "src": "binary_expression [563,569]",
      "dest": "binary_expression [563,569]"
    },
    {
      "src": "identifier: div [825,828]",
      "dest": "identifier: div [825,828]"
    },
    {
      "src": "): ) [1591,1592]",
      "dest": "): ) [1591,1592]"
    },
    {
      "src": "identifier: require [1850,1857]",
      "dest": "identifier: require [1850,1857]"
    },
    {
      "src": "identifier: c [622,623]",
      "dest": "identifier: c [622,623]"
    },
    {
      "src": "type_name [874,881]",
      "dest": "type_name [874,881]"
    },
    {
      "src": "): ) [569,570]",
      "dest": "): ) [569,570]"
    },
    {
      "src": "return_type_definition [1822,1839]",
      "dest": "return_type_definition [1822,1839]"
    },
    {
      "src": "(: ( [648,649]",
      "dest": "(: ( [648,649]"
    },
    {
      "src": "identifier: b [658,659]",
      "dest": "identifier: b [658,659]"
    },
    {
      "src": "visibility [300,308]",
      "dest": "visibility [300,308]"
    },
    {
      "src": "primitive_type [1269,1276]",
      "dest": "primitive_type [1269,1276]"
    },
    {
      "src": "function_definition [1473,1618]",
      "dest": "function_definition [1473,1618]"
    },
    {
      "src": "uint256: uint256 [874,881]",
      "dest": "uint256: uint256 [874,881]"
    },
    {
      "src": "parameter [1531,1538]",
      "dest": "parameter [1531,1538]"
    },
    {
      "src": "internal: internal [300,308]",
      "dest": "internal: internal [300,308]"
    },
    {
      "src": "type_name [1258,1265]",
      "dest": "type_name [1258,1265]"
    },
    {
      "src": "}: } [1895,1896]",
      "dest": "}: } [1895,1896]"
    },
    {
      "src": "return_statement [1097,1106]",
      "dest": "return_statement [1097,1106]"
    },
    {
      "src": "uint256: uint256 [1831,1838]",
      "dest": "uint256: uint256 [1831,1838]"
    },
    {
      "src": "block_statement [571,604]",
      "dest": "block_statement [571,604]"
    },
    {
      "src": "expression_statement [1577,1593]",
      "dest": "expression_statement [1577,1593]"
    },
    {
      "src": "pure: pure [1289,1293]",
      "dest": "pure: pure [1289,1293]"
    },
    {
      "src": "uint256: uint256 [1531,1538]",
      "dest": "uint256: uint256 [1531,1538]"
    },
    {
      "src": "): ) [881,882]",
      "dest": "): ) [881,882]"
    },
    {
      "src": "function_body [1540,1618]",
      "dest": "function_body [1540,1618]"
    },
    {
      "src": "identifier: a [653,654]",
      "dest": "identifier: a [653,654]"
    },
    {
      "src": "parameter [1831,1838]",
      "dest": "parameter [1831,1838]"
    },
    {
      "src": "variable_declaration_statement [614,632]",
      "dest": "variable_declaration_statement [614,632]"
    },
    {
      "src": "identifier: b [1277,1278]",
      "dest": "identifier: b [1277,1278]"
    },
    {
      "src": "number_literal: 0 [1863,1864]",
      "dest": "number_literal: 0 [1863,1864]"
    },
    {
      "src": "=: = [993,994]",
      "dest": "=: = [993,994]"
    },
    {
      "src": "type_name [1347,1354]",
      "dest": "type_name [1347,1354]"
    },
    {
      "src": "identifier: mul [274,277]",
      "dest": "identifier: mul [274,277]"
    },
    {
      "src": "identifier: c [1558,1559]",
      "dest": "identifier: c [1558,1559]"
    },
    {
      "src": "internal: internal [1280,1288]",
      "dest": "internal: internal [1280,1288]"
    },
    {
      "src": "identifier: b [630,631]",
      "dest": "identifier: b [630,631]"
    },
    {
      "src": "): ) [1310,1311]",
      "dest": "): ) [1310,1311]"
    },
    {
      "src": "pure: pure [309,313]",
      "dest": "pure: pure [309,313]"
    },
    {
      "src": "identifier: a [563,564]",
      "dest": "identifier: a [563,564]"
    },
    {
      "src": "type_name [1786,1793]",
      "dest": "type_name [1786,1793]"
    },
    {
      "src": "): ) [1538,1539]",
      "dest": "): ) [1538,1539]"
    },
    {
      "src": "call_argument [967,972]",
      "dest": "call_argument [967,972]"
    },
    {
      "src": "identifier: b [1330,1331]",
      "dest": "identifier: b [1330,1331]"
    },
    {
      "src": "identifier: c [1610,1611]",
      "dest": "identifier: c [1610,1611]"
    },
    {
      "src": "uint256: uint256 [1797,1804]",
      "dest": "uint256: uint256 [1797,1804]"
    },
    {
      "src": "return: return [1875,1881]",
      "dest": "return: return [1875,1881]"
    },
    {
      "src": "solidity: solidity [40,48]",
      "dest": "solidity: solidity [40,48]"
    },
    {
      "src": "return: return [1375,1381]",
      "dest": "return: return [1375,1381]"
    },
    {
      "src": ",: , [838,839]",
      "dest": ",: , [838,839]"
    },
    {
      "src": "variable_declaration_statement [1550,1568]",
      "dest": "variable_declaration_statement [1550,1568]"
    },
    {
      "src": "call_argument [1858,1864]",
      "dest": "call_argument [1858,1864]"
    },
    {
      "src": "{: { [571,572]",
      "dest": "{: { [571,572]"
    },
    {
      "src": "type_name [983,990]",
      "dest": "type_name [983,990]"
    },
    {
      "src": "=: = [1560,1561]",
      "dest": "=: = [1560,1561]"
    },
    {
      "src": "parameter [1497,1506]",
      "dest": "parameter [1497,1506]"
    },
    {
      "src": "function_body [883,1112]",
      "dest": "function_body [883,1112]"
    },
    {
      "src": "return_statement [1875,1888]",
      "dest": "return_statement [1875,1888]"
    },
    {
      "src": "): ) [1506,1507]",
      "dest": "): ) [1506,1507]"
    },
    {
      "src": "returns: returns [314,321]",
      "dest": "returns: returns [314,321]"
    },
    {
      "src": "/: / [997,998]",
      "dest": "/: / [997,998]"
    },
    {
      "src": "return_statement [1375,1384]",
      "dest": "return_statement [1375,1384]"
    },
    {
      "src": "call_expression [1577,1592]",
      "dest": "call_expression [1577,1592]"
    },
    {
      "src": "returns: returns [1822,1829]",
      "dest": "returns: returns [1822,1829]"
    },
    {
      "src": "visibility [1280,1288]",
      "dest": "visibility [1280,1288]"
    },
    {
      "src": "parameter [1797,1806]",
      "dest": "parameter [1797,1806]"
    },
    {
      "src": ">: > [969,970]",
      "dest": ">: > [969,970]"
    },
    {
      "src": "identifier: a [1359,1360]",
      "dest": "identifier: a [1359,1360]"
    },
    {
      "src": "visibility [851,859]",
      "dest": "visibility [851,859]"
    },
    {
      "src": "return_statement [671,680]",
      "dest": "return_statement [671,680]"
    },
    {
      "src": "): ) [972,973]",
      "dest": "): ) [972,973]"
    },
    {
      "src": "identifier: a [1494,1495]",
      "dest": "identifier: a [1494,1495]"
    },
    {
      "src": "parameter [289,298]",
      "dest": "parameter [289,298]"
    },
    {
      "src": "/: / [651,652]",
      "dest": "/: / [651,652]"
    },
    {
      "src": "return: return [671,677]",
      "dest": "return: return [671,677]"
    },
    {
      "src": "solidity_pragma_token [40,55]",
      "dest": "solidity_pragma_token [40,55]"
    },
    {
      "src": "returns: returns [865,872]",
      "dest": "returns: returns [865,872]"
    },
    {
      "src": "uint256: uint256 [278,285]",
      "dest": "uint256: uint256 [278,285]"
    },
    {
      "src": "pure: pure [1517,1521]",
      "dest": "pure: pure [1517,1521]"
    },
    {
      "src": "type_name [1831,1838]",
      "dest": "type_name [1831,1838]"
    },
    {
      "src": "parameter [829,838]",
      "dest": "parameter [829,838]"
    },
    {
      "src": "parameter [323,330]",
      "dest": "parameter [323,330]"
    },
    {
      "src": "): ) [849,850]",
      "dest": "): ) [849,850]"
    },
    {
      "src": "identifier: a [286,287]",
      "dest": "identifier: a [286,287]"
    },
    {
      "src": "comment: // Solidity only automatically asserts when dividing by 0 [893,950]",
      "dest": "comment: // Solidity only automatically asserts when dividing by 0 [893,950]"
    },
    {
      "src": "identifier: a [1266,1267]",
      "dest": "identifier: a [1266,1267]"
    },
    {
      "src": "uint256: uint256 [1786,1793]",
      "dest": "uint256: uint256 [1786,1793]"
    },
    {
      "src": "}: } [685,686]",
      "dest": "}: } [685,686]"
    },
    {
      "src": "variable_declaration [614,623]",
      "dest": "variable_declaration [614,623]"
    },
    {
      "src": "{: { [1540,1541]",
      "dest": "{: { [1540,1541]"
    },
    {
      "src": "): ) [1336,1337]",
      "dest": "): ) [1336,1337]"
    },
    {
      "src": ",: , [1495,1496]",
      "dest": ",: , [1495,1496]"
    },
    {
      "src": "type_name [829,836]",
      "dest": "type_name [829,836]"
    },
    {
      "src": ",: , [1795,1796]",
      "dest": ",: , [1795,1796]"
    },
    {
      "src": "number_literal: 0 [568,569]",
      "dest": "number_literal: 0 [568,569]"
    },
    {
      "src": "type_name [840,847]",
      "dest": "type_name [840,847]"
    },
    {
      "src": "identifier: require [641,648]",
      "dest": "identifier: require [641,648]"
    },
    {
      "src": "uint256: uint256 [614,621]",
      "dest": "uint256: uint256 [614,621]"
    },
    {
      "src": "binary_expression [1585,1591]",
      "dest": "binary_expression [1585,1591]"
    },
    {
      "src": "function_definition [816,1112]",
      "dest": "function_definition [816,1112]"
    },
    {
      "src": "identifier: b [1363,1364]",
      "dest": "identifier: b [1363,1364]"
    },
    {
      "src": ",: , [287,288]",
      "dest": ",: , [287,288]"
    },
    {
      "src": "*: * [628,629]",
      "dest": "*: * [628,629]"
    },
    {
      "src": "return_type_definition [314,331]",
      "dest": "return_type_definition [314,331]"
    },
    {
      "src": "==: == [565,567]",
      "dest": "==: == [565,567]"
    },
    {
      "src": "=: = [1357,1358]",
      "dest": "=: = [1357,1358]"
    },
    {
      "src": "visibility [1508,1516]",
      "dest": "visibility [1508,1516]"
    },
    {
      "src": "call_argument [649,659]",
      "dest": "call_argument [649,659]"
    },
    {
      "src": "identifier: c [1585,1586]",
      "dest": "identifier: c [1585,1586]"
    },
    {
      "src": "identifier: a [626,627]",
      "dest": "identifier: a [626,627]"
    },
    {
      "src": "identifier: sub [1254,1257]",
      "dest": "identifier: sub [1254,1257]"
    },
    {
      "src": "identifier: add [1482,1485]",
      "dest": "identifier: add [1482,1485]"
    },
    {
      "src": "parameter [874,881]",
      "dest": "parameter [874,881]"
    },
    {
      "src": "uint256: uint256 [1347,1354]",
      "dest": "uint256: uint256 [1347,1354]"
    },
    {
      "src": "primitive_type [614,621]",
      "dest": "primitive_type [614,621]"
    },
    {
      "src": "pragma_directive [33,56]",
      "dest": "pragma_directive [33,56]"
    },
    {
      "src": "%: % [1884,1885]",
      "dest": "%: % [1884,1885]"
    },
    {
      "src": "function_body [332,686]",
      "dest": "function_body [332,686]"
    },
    {
      "src": ",: , [1267,1268]",
      "dest": ",: , [1267,1268]"
    },
    {
      "src": "variable_declaration [1347,1356]",
      "dest": "variable_declaration [1347,1356]"
    },
    {
      "src": "primitive_type [840,847]",
      "dest": "primitive_type [840,847]"
    },
    {
      "src": "): ) [1838,1839]",
      "dest": "): ) [1838,1839]"
    },
    {
      "src": "): ) [298,299]",
      "dest": "): ) [298,299]"
    },
    {
      "src": "binary_expression [649,654]",
      "dest": "binary_expression [649,654]"
    },
    {
      "src": "parameter [1303,1310]",
      "dest": "parameter [1303,1310]"
    },
    {
      "src": "identifier: b [297,298]",
      "dest": "identifier: b [297,298]"
    },
    {
      "src": "=: = [624,625]",
      "dest": "=: = [624,625]"
    },
    {
      "src": "}: } [1617,1618]",
      "dest": "}: } [1617,1618]"
    },
    {
      "src": "pure: pure [1817,1821]",
      "dest": "pure: pure [1817,1821]"
    },
    {
      "src": "primitive_type [289,296]",
      "dest": "primitive_type [289,296]"
    },
    {
      "src": "(: ( [1329,1330]",
      "dest": "(: ( [1329,1330]"
    },
    {
      "src": "binary_expression [1882,1887]",
      "dest": "binary_expression [1882,1887]"
    },
    {
      "src": "number_literal: 0 [592,593]",
      "dest": "number_literal: 0 [592,593]"
    },
    {
      "src": "{: { [176,177]",
      "dest": "{: { [176,177]"
    },
    {
      "src": "parameter [1269,1278]",
      "dest": "parameter [1269,1278]"
    },
    {
      "src": "binary_expression [967,972]",
      "dest": "binary_expression [967,972]"
    },
    {
      "src": "function_body [1312,1390]",
      "dest": "function_body [1312,1390]"
    },
    {
      "src": "primitive_type [983,990]",
      "dest": "primitive_type [983,990]"
    },
    {
      "src": "identifier: c [991,992]",
      "dest": "identifier: c [991,992]"
    },
    {
      "src": "{: { [332,333]",
      "dest": "{: { [332,333]"
    },
    {
      "src": "contract_body [176,1896]",
      "dest": "contract_body [176,1896]"
    },
    {
      "src": "identifier: SafeMath [167,175]",
      "dest": "identifier: SafeMath [167,175]"
    },
    {
      "src": "identifier: c [678,679]",
      "dest": "identifier: c [678,679]"
    },
    {
      "src": "uint256: uint256 [1550,1557]",
      "dest": "uint256: uint256 [1550,1557]"
    },
    {
      "src": "library: library [159,166]",
      "dest": "library: library [159,166]"
    },
    {
      "src": "return_statement [585,594]",
      "dest": "return_statement [585,594]"
    },
    {
      "src": "call_expression [1850,1865]",
      "dest": "call_expression [1850,1865]"
    },
    {
      "src": "identifier: require [1322,1329]",
      "dest": "identifier: require [1322,1329]"
    },
    {
      "src": "binary_expression [1359,1364]",
      "dest": "binary_expression [1359,1364]"
    },
    {
      "src": "primitive_type [1531,1538]",
      "dest": "primitive_type [1531,1538]"
    },
    {
      "src": "identifier: b [1566,1567]",
      "dest": "identifier: b [1566,1567]"
    },
    {
      "src": "+: + [1564,1565]",
      "dest": "+: + [1564,1565]"
    },
    {
      "src": "(: ( [277,278]",
      "dest": "(: ( [277,278]"
    },
    {
      "src": "comment: /**  * @title SafeMath  * @dev Unsigned math operations with safety checks that revert on error  */ [59,158]",
      "dest": "comment: /**  * @title SafeMath  * @dev Unsigned math operations with safety checks that revert on error  */ [59,158]"
    },
    {
      "src": "visibility [1808,1816]",
      "dest": "visibility [1808,1816]"
    },
    {
      "src": "(: ( [1785,1786]",
      "dest": "(: ( [1785,1786]"
    },
    {
      "src": "internal: internal [1808,1816]",
      "dest": "internal: internal [1808,1816]"
    },
    {
      "src": "identifier: b [1805,1806]",
      "dest": "identifier: b [1805,1806]"
    },
    {
      "src": "primitive_type [874,881]",
      "dest": "primitive_type [874,881]"
    },
    {
      "src": "number_literal: 0 [971,972]",
      "dest": "number_literal: 0 [971,972]"
    },
    {
      "src": "if_statement [559,604]",
      "dest": "if_statement [559,604]"
    },
    {
      "src": "type_name [614,621]",
      "dest": "type_name [614,621]"
    },
    {
      "src": "primitive_type [1258,1265]",
      "dest": "primitive_type [1258,1265]"
    },
    {
      "src": "primitive_type [1550,1557]",
      "dest": "primitive_type [1550,1557]"
    },
    {
      "src": "primitive_type [1797,1804]",
      "dest": "primitive_type [1797,1804]"
    },
    {
      "src": "function_definition [1773,1894]",
      "dest": "function_definition [1773,1894]"
    },
    {
      "src": "binary_expression [995,1000]",
      "dest": "binary_expression [995,1000]"
    },
    {
      "src": "type_name [1486,1493]",
      "dest": "type_name [1486,1493]"
    },
    {
      "src": "expression_statement [1322,1338]",
      "dest": "expression_statement [1322,1338]"
    },
    {
      "src": "pure: pure [860,864]",
      "dest": "pure: pure [860,864]"
    },
    {
      "src": "primitive_type [1786,1793]",
      "dest": "primitive_type [1786,1793]"
    },
    {
      "src": "(: ( [1830,1831]",
      "dest": "(: ( [1830,1831]"
    },
    {
      "src": "call_expression [959,973]",
      "dest": "call_expression [959,973]"
    },
    {
      "src": "primitive_type [1303,1310]",
      "dest": "primitive_type [1303,1310]"
    },
    {
      "src": "return_statement [1603,1612]",
      "dest": "return_statement [1603,1612]"
    },
    {
      "src": "internal: internal [851,859]",
      "dest": "internal: internal [851,859]"
    },
    {
      "src": "state_mutability [1817,1821]",
      "dest": "state_mutability [1817,1821]"
    },
    {
      "src": "expression_statement [641,661]",
      "dest": "expression_statement [641,661]"
    },
    {
      "src": "solidity_version_comparison_operator [48,50]",
      "dest": "solidity_version_comparison_operator [48,50]"
    },
    {
      "src": "function: function [265,273]",
      "dest": "function: function [265,273]"
    },
    {
      "src": "(: ( [322,323]",
      "dest": "(: ( [322,323]"
    },
    {
      "src": "call_expression [641,660]",
      "dest": "call_expression [641,660]"
    },
    {
      "src": "identifier: a [1882,1883]",
      "dest": "identifier: a [1882,1883]"
    },
    {
      "src": "returns: returns [1294,1301]",
      "dest": "returns: returns [1294,1301]"
    },
    {
      "src": "identifier: require [959,966]",
      "dest": "identifier: require [959,966]"
    },
    {
      "src": "identifier: b [967,968]",
      "dest": "identifier: b [967,968]"
    },
    {
      "src": "state_mutability [1517,1521]",
      "dest": "state_mutability [1517,1521]"
    },
    {
      "src": "identifier: a [837,838]",
      "dest": "identifier: a [837,838]"
    },
    {
      "src": "identifier: a [1590,1591]",
      "dest": "identifier: a [1590,1591]"
    },
    {
      "src": "type_name [323,330]",
      "dest": "type_name [323,330]"
    },
    {
      "src": "identifier: c [1355,1356]",
      "dest": "identifier: c [1355,1356]"
    },
    {
      "src": "call_argument [1330,1336]",
      "dest": "call_argument [1330,1336]"
    },
    {
      "src": "parameter [1786,1795]",
      "dest": "parameter [1786,1795]"
    },
    {
      "src": "binary_expression [1330,1336]",
      "dest": "binary_expression [1330,1336]"
    },
    {
      "src": "primitive_type [1497,1504]",
      "dest": "primitive_type [1497,1504]"
    },
    {
      "src": "uint256: uint256 [1303,1310]",
      "dest": "uint256: uint256 [1303,1310]"
    },
    {
      "src": "state_mutability [860,864]",
      "dest": "state_mutability [860,864]"
    },
    {
      "src": "function_body [1840,1894]",
      "dest": "function_body [1840,1894]"
    },
    {
      "src": "(: ( [1857,1858]",
      "dest": "(: ( [1857,1858]"
    },
    {
      "src": "variable_declaration [1550,1559]",
      "dest": "variable_declaration [1550,1559]"
    },
    {
      "src": "variable_declaration_statement [1347,1365]",
      "dest": "variable_declaration_statement [1347,1365]"
    },
    {
      "src": "!=: != [1860,1862]",
      "dest": "!=: != [1860,1862]"
    },
    {
      "src": "library_declaration [159,1896]",
      "dest": "library_declaration [159,1896]"
    },
    {
      "src": "identifier: b [999,1000]",
      "dest": "identifier: b [999,1000]"
    },
    {
      "src": "{: { [1312,1313]",
      "dest": "{: { [1312,1313]"
    },
    {
      "src": "comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [342,421]",
      "dest": "comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [342,421]"
    },
    {
      "src": "uint256: uint256 [1269,1276]",
      "dest": "uint256: uint256 [1269,1276]"
    },
    {
      "src": "return_type_definition [1522,1539]",
      "dest": "return_type_definition [1522,1539]"
    },
    {
      "src": "identifier: b [1886,1887]",
      "dest": "identifier: b [1886,1887]"
    },
    {
      "src": "uint256: uint256 [1258,1265]",
      "dest": "uint256: uint256 [1258,1265]"
    },
    {
      "src": "identifier: require [1577,1584]",
      "dest": "identifier: require [1577,1584]"
    },
    {
      "src": "return_type_definition [865,882]",
      "dest": "return_type_definition [865,882]"
    },
    {
      "src": "parameter [278,287]",
      "dest": "parameter [278,287]"
    },
    {
      "src": "function: function [1473,1481]",
      "dest": "function: function [1473,1481]"
    },
    {
      "src": "identifier: a [1335,1336]",
      "dest": "identifier: a [1335,1336]"
    },
    {
      "src": "variable_declaration [983,992]",
      "dest": "variable_declaration [983,992]"
    },
    {
      "src": "state_mutability [309,313]",
      "dest": "state_mutability [309,313]"
    },
    {
      "src": "return: return [585,591]",
      "dest": "return: return [585,591]"
    },
    {
      "src": "}: } [1893,1894]",
      "dest": "}: } [1893,1894]"
    },
    {
      "src": "uint256: uint256 [289,296]",
      "dest": "uint256: uint256 [289,296]"
    },
    {
      "src": "state_mutability [1289,1293]",
      "dest": "state_mutability [1289,1293]"
    },
    {
      "src": "internal: internal [1508,1516]",
      "dest": "internal: internal [1508,1516]"
    },
    {
      "src": "identifier: b [1858,1859]",
      "dest": "identifier: b [1858,1859]"
    },
    {
      "src": "binary_expression [649,659]",
      "dest": "binary_expression [649,659]"
    },
    {
      "src": "primitive_type [1831,1838]",
      "dest": "primitive_type [1831,1838]"
    },
    {
      "src": "uint256: uint256 [323,330]",
      "dest": "uint256: uint256 [323,330]"
    },
    {
      "src": "comment: // assert(a == b * c + a % b); // There is no case in which this doesn't hold [1010,1087]",
      "dest": "comment: // assert(a == b * c + a % b); // There is no case in which this doesn't hold [1010,1087]"
    },
    {
      "src": "identifier: c [1382,1383]",
      "dest": "identifier: c [1382,1383]"
    },
    {
      "src": "comment: // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522 [480,550]",
      "dest": "comment: // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522 [480,550]"
    },
    {
      "src": "expression_statement [1850,1866]",
      "dest": "expression_statement [1850,1866]"
    },
    {
      "src": "{: { [883,884]",
      "dest": "{: { [883,884]"
    },
    {
      "src": "source_file [0,1897]",
      "dest": "source_file [0,1897]"
    },
    {
      "src": "binary_expression [1858,1864]",
      "dest": "binary_expression [1858,1864]"
    },
    {
      "src": "(: ( [562,563]",
      "dest": "(: ( [562,563]"
    },
    {
      "src": "uint256: uint256 [1497,1504]",
      "dest": "uint256: uint256 [1497,1504]"
    },
    {
      "src": "variable_declaration_statement [983,1001]",
      "dest": "variable_declaration_statement [983,1001]"
    },
    {
      "src": "): ) [1806,1807]",
      "dest": "): ) [1806,1807]"
    },
    {
      "src": "identifier: mod [1782,1785]",
      "dest": "identifier: mod [1782,1785]"
    },
    {
      "src": "(: ( [1485,1486]",
      "dest": "(: ( [1485,1486]"
    },
    {
      "src": "return: return [1603,1609]",
      "dest": "return: return [1603,1609]"
    },
    {
      "src": "comment: /**      * @dev Divides two unsigned integers and returns the remainder (unsigned integer modulo),      * reverts when dividing by zero.      */ [1624,1768]",
      "dest": "comment: /**      * @dev Divides two unsigned integers and returns the remainder (unsigned integer modulo),      * reverts when dividing by zero.      */ [1624,1768]"
    },
    {
      "src": "comment: /**      * @dev Integer division of two unsigned integers truncating the quotient, reverts on division by zero.      */ [692,811]",
      "dest": "comment: /**      * @dev Integer division of two unsigned integers truncating the quotient, reverts on division by zero.      */ [692,811]"
    },
    {
      "src": "(: ( [828,829]",
      "dest": "(: ( [828,829]"
    },
    {
      "src": "if: if [559,561]",
      "dest": "if: if [559,561]"
    },
    {
      "src": "-: - [1361,1362]",
      "dest": "-: - [1361,1362]"
    },
    {
      "src": "uint256: uint256 [829,836]",
      "dest": "uint256: uint256 [829,836]"
    },
    {
      "src": "identifier: b [848,849]",
      "dest": "identifier: b [848,849]"
    },
    {
      "src": "function: function [1245,1253]",
      "dest": "function: function [1245,1253]"
    },
    {
      "src": "}: } [1389,1390]",
      "dest": "}: } [1389,1390]"
    },
    {
      "src": "identifier: a [1562,1563]",
      "dest": "identifier: a [1562,1563]"
    },
    {
      "src": "): ) [330,331]",
      "dest": "): ) [330,331]"
    },
    {
      "src": "}: } [1111,1112]",
      "dest": "}: } [1111,1112]"
    },
    {
      "src": "returns: returns [1522,1529]",
      "dest": "returns: returns [1522,1529]"
    },
    {
      "src": "expression_statement [959,974]",
      "dest": "expression_statement [959,974]"
    },
    {
      "src": "primitive_type [278,285]",
      "dest": "primitive_type [278,285]"
    },
    {
      "src": "primitive_type [1347,1354]",
      "dest": "primitive_type [1347,1354]"
    },
    {
      "src": "^:  ^ [48,50]",
      "dest": "^:  ^ [48,50]"
    },
    {
      "src": "function_definition [265,686]",
      "dest": "function_definition [265,686]"
    },
    {
      "src": "type_name [1497,1504]",
      "dest": "type_name [1497,1504]"
    },
    {
      "src": "): ) [1278,1279]",
      "dest": "): ) [1278,1279]"
    },
    {
      "src": "pragma: pragma [33,39]",
      "dest": "pragma: pragma [33,39]"
    },
    {
      "src": "call_argument [1585,1591]",
      "dest": "call_argument [1585,1591]"
    },
    {
      "src": "{: { [1840,1841]",
      "dest": "{: { [1840,1841]"
    },
    {
      "src": "identifier: c [1104,1105]",
      "dest": "identifier: c [1104,1105]"
    },
    {
      "src": ">=: >= [1587,1589]",
      "dest": ">=: >= [1587,1589]"
    },
    {
      "src": "comment: /**      * @dev Subtracts two unsigned integers, reverts on overflow (i.e. if subtrahend is greater than minuend).      */ [1118,1240]",
      "dest": "comment: /**      * @dev Subtracts two unsigned integers, reverts on overflow (i.e. if subtrahend is greater than minuend).      */ [1118,1240]"
    },
    {
      "src": "solidity_version: 0.7.0 [50,55]",
      "dest": "solidity_version: 0.7.0 [50,55]"
    },
    {
      "src": "type_name [1531,1538]",
      "dest": "type_name [1531,1538]"
    },
    {
      "src": "comment: /**      * @dev Adds two unsigned integers, reverts on overflow.      */ [1396,1468]",
      "dest": "comment: /**      * @dev Adds two unsigned integers, reverts on overflow.      */ [1396,1468]"
    },
    {
      "src": "primitive_type [1486,1493]",
      "dest": "primitive_type [1486,1493]"
    },
    {
      "src": "(: ( [1584,1585]",
      "dest": "(: ( [1584,1585]"
    },
    {
      "src": "identifier: a [1794,1795]",
      "dest": "identifier: a [1794,1795]"
    },
    {
      "src": "identifier: a [995,996]",
      "dest": "identifier: a [995,996]"
    },
    {
      "src": "identifier: b [1505,1506]",
      "dest": "identifier: b [1505,1506]"
    }
  ],
  "actions": []
}